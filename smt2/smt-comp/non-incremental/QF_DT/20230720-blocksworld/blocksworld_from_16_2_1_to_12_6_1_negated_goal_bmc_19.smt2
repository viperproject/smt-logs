(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(declare-fun c!19 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x32 (stack O empty)))
 (let ((?x31 (stack A ?x32)))
 (let ((?x33 (stack G ?x31)))
 (let ((?x34 (stack C ?x33)))
 (let ((?x35 (stack K ?x34)))
 (let ((?x36 (stack H ?x35)))
 (let ((?x37 (stack S ?x36)))
 (let ((?x38 (stack F ?x37)))
 (let ((?x39 (stack P ?x38)))
 (let ((?x40 (stack L ?x39)))
 (let ((?x41 (stack E ?x40)))
 (let ((?x42 (stack B ?x41)))
 (let ((?x43 (stack N ?x42)))
 (let ((?x44 (stack R ?x43)))
 (let ((?x45 (stack I ?x44)))
 (let ((?x46 (stack J ?x45)))
 (let ((?x115 (left s_tmp_)))
 (= ?x115 ?x46)))))))))))))))))))
(assert
 (let ((?x47 (stack D empty)))
 (let ((?x48 (stack M ?x47)))
 (let ((?x118 (center s_tmp__)))
 (= ?x118 ?x48)))))
(assert
 (let ((?x49 (stack Q empty)))
 (let ((?x121 (right s_tmp___)))
 (= ?x121 ?x49))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x148 (left s_tmp__)))
 (= (left s_tmp___) ?x148)))
(assert
 (let ((?x118 (center s_tmp__)))
 (= (center s_tmp___) ?x118)))
(assert
 (let ((?x152 (center s_tmp_)))
 (= ?x152 (center s_tmp))))
(assert
 (let ((?x155 (right s_tmp_)))
 (= ?x155 (right s_tmp))))
(assert
 (let ((?x115 (left s_tmp_)))
 (let ((?x148 (left s_tmp__)))
 (= ?x148 ?x115))))
(assert
 (let ((?x155 (right s_tmp_)))
 (let ((?x159 (right s_tmp__)))
 (= ?x159 ?x155))))
(assert
 (= c__ c!1))
(assert
 (let ((?x92 (left s_)))
 (let ((?x296 (left s__)))
 (let (($x305 (= ?x296 ?x92)))
 (let ((?x95 (right s_)))
 (let (($x272 ((_ is stack ) ?x95)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x273 (and $x278 $x272)))
 (let ((?x97 (center s_)))
 (let (($x274 ((_ is stack ) ?x97)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x267 (and $x275 $x274)))
 (let (($x268 (= c_ center-to-left)))
 (let (($x269 (and $x268 $x274)))
 (let (($x314 (ite $x269 (= ?x296 (stack (top ?x97) ?x92)) (ite $x267 $x305 (ite $x273 (= ?x296 (stack (top ?x95) ?x92)) $x305)))))
 (let (($x289 (= ?x296 (rest ?x92))))
 (let (($x279 ((_ is stack ) ?x92)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 $x289 (ite $x281 $x289 $x314)))))))))))))))))))))))
(assert
 (let ((?x95 (right s_)))
 (let ((?x286 (right s__)))
 (let (($x265 (= ?x286 ?x95)))
 (let (($x301 (= ?x286 (rest ?x95))))
 (let (($x272 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ right-to-center)))
 (let (($x277 (and $x276 $x272)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x273 (and $x278 $x272)))
 (let ((?x97 (center s_)))
 (let (($x274 ((_ is stack ) ?x97)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x267 (and $x275 $x274)))
 (let (($x311 (ite $x267 (= ?x286 (stack (top ?x97) ?x95)) (ite $x273 $x301 (ite $x277 $x301 $x265)))))
 (let (($x268 (= c_ center-to-left)))
 (let (($x269 (and $x268 $x274)))
 (let ((?x92 (left s_)))
 (let (($x279 ((_ is stack ) ?x92)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 (= ?x286 (stack (top ?x92) ?x95)) (ite $x281 $x265 (ite $x269 $x265 $x311))))))))))))))))))))))))))
(assert
 (let ((?x97 (center s_)))
 (let ((?x298 (center s__)))
 (let (($x303 (= ?x298 ?x97)))
 (let ((?x95 (right s_)))
 (let (($x272 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ right-to-center)))
 (let (($x277 (and $x276 $x272)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x273 (and $x278 $x272)))
 (let (($x259 (= ?x298 (rest ?x97))))
 (let (($x274 ((_ is stack ) ?x97)))
 (let (($x275 (= c_ center-to-right)))
 (let (($x267 (and $x275 $x274)))
 (let (($x310 (ite $x267 $x259 (ite $x273 $x303 (ite $x277 (= ?x298 (stack (top ?x95) ?x97)) $x303)))))
 (let (($x268 (= c_ center-to-left)))
 (let (($x269 (and $x268 $x274)))
 (let ((?x92 (left s_)))
 (let (($x279 ((_ is stack ) ?x92)))
 (let (($x280 (= c_ left-to-right)))
 (let (($x281 (and $x280 $x279)))
 (let (($x282 (= c_ left-to-center)))
 (let (($x283 (and $x282 $x279)))
 (ite $x283 $x303 (ite $x281 (= ?x298 (stack (top ?x92) ?x97)) (ite $x269 $x259 $x310))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x296 (left s__)))
 (let ((?x162 (left s___)))
 (let (($x434 (= ?x162 ?x296)))
 (let ((?x286 (right s__)))
 (let ((?x401 (top ?x286)))
 (let ((?x402 (stack ?x401 ?x296)))
 (let (($x428 (= ?x162 ?x402)))
 (let (($x404 ((_ is stack ) ?x286)))
 (let (($x407 (= c__ right-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x298 (center s__)))
 (let (($x409 ((_ is stack ) ?x298)))
 (let (($x410 (= c__ center-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let ((?x397 (top ?x298)))
 (let ((?x398 (stack ?x397 ?x296)))
 (let (($x425 (= ?x162 ?x398)))
 (let (($x412 (= c__ center-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x164 (rest ?x296)))
 (let (($x421 (= ?x162 ?x164)))
 (let (($x414 ((_ is stack ) ?x296)))
 (let (($x415 (= c__ left-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let (($x417 (= c__ left-to-center)))
 (let (($x418 (and $x417 $x414)))
 (ite $x418 $x421 (ite $x416 $x421 (ite $x413 $x425 (ite $x411 $x434 (ite $x408 $x428 $x434))))))))))))))))))))))))))))))))
(assert
 (let ((?x286 (right s__)))
 (let ((?x165 (right s___)))
 (let (($x430 (= ?x165 ?x286)))
 (let ((?x400 (rest ?x286)))
 (let (($x427 (= ?x165 ?x400)))
 (let (($x404 ((_ is stack ) ?x286)))
 (let (($x405 (= c__ right-to-center)))
 (let (($x406 (and $x405 $x404)))
 (let (($x407 (= c__ right-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x298 (center s__)))
 (let ((?x397 (top ?x298)))
 (let ((?x399 (stack ?x397 ?x286)))
 (let (($x426 (= ?x165 ?x399)))
 (let (($x409 ((_ is stack ) ?x298)))
 (let (($x410 (= c__ center-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let (($x412 (= c__ center-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x296 (left s__)))
 (let (($x414 ((_ is stack ) ?x296)))
 (let (($x415 (= c__ left-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let (($x447 (ite $x416 $x430 (ite $x413 $x430 (ite $x411 $x426 (ite $x408 $x427 (ite $x406 $x427 $x430)))))))
 (let ((?x257 (top ?x296)))
 (let ((?x393 (stack ?x257 ?x286)))
 (let (($x422 (= ?x165 ?x393)))
 (let (($x417 (= c__ left-to-center)))
 (let (($x418 (and $x417 $x414)))
 (ite $x418 $x422 $x447)))))))))))))))))))))))))))))))
(assert
 (let ((?x298 (center s__)))
 (let ((?x394 (center s___)))
 (let (($x432 (= ?x394 ?x298)))
 (let ((?x286 (right s__)))
 (let ((?x401 (top ?x286)))
 (let ((?x403 (stack ?x401 ?x298)))
 (let (($x429 (= ?x394 ?x403)))
 (let (($x404 ((_ is stack ) ?x286)))
 (let (($x405 (= c__ right-to-center)))
 (let (($x406 (and $x405 $x404)))
 (let (($x407 (= c__ right-to-left)))
 (let (($x408 (and $x407 $x404)))
 (let ((?x396 (rest ?x298)))
 (let (($x424 (= ?x394 ?x396)))
 (let (($x409 ((_ is stack ) ?x298)))
 (let (($x410 (= c__ center-to-right)))
 (let (($x411 (and $x410 $x409)))
 (let (($x412 (= c__ center-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x296 (left s__)))
 (let ((?x257 (top ?x296)))
 (let ((?x395 (stack ?x257 ?x298)))
 (let (($x423 (= ?x394 ?x395)))
 (let (($x414 ((_ is stack ) ?x296)))
 (let (($x415 (= c__ left-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let (($x446 (ite $x416 $x423 (ite $x413 $x424 (ite $x411 $x424 (ite $x408 $x432 (ite $x406 $x429 $x432)))))))
 (let (($x417 (= c__ left-to-center)))
 (let (($x418 (and $x417 $x414)))
 (ite $x418 $x432 $x446)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x162 (left s___)))
 (let ((?x321 (left s____)))
 (let (($x572 (= ?x321 ?x162)))
 (let ((?x165 (right s___)))
 (let ((?x539 (top ?x165)))
 (let ((?x540 (stack ?x539 ?x162)))
 (let (($x566 (= ?x321 ?x540)))
 (let (($x542 ((_ is stack ) ?x165)))
 (let (($x545 (= c___ right-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x394 (center s___)))
 (let (($x547 ((_ is stack ) ?x394)))
 (let (($x548 (= c___ center-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let ((?x535 (top ?x394)))
 (let ((?x536 (stack ?x535 ?x162)))
 (let (($x563 (= ?x321 ?x536)))
 (let (($x550 (= c___ center-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x365 (rest ?x162)))
 (let (($x559 (= ?x321 ?x365)))
 (let (($x552 ((_ is stack ) ?x162)))
 (let (($x553 (= c___ left-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let (($x555 (= c___ left-to-center)))
 (let (($x556 (and $x555 $x552)))
 (ite $x556 $x559 (ite $x554 $x559 (ite $x551 $x563 (ite $x549 $x572 (ite $x546 $x566 $x572))))))))))))))))))))))))))))))))
(assert
 (let ((?x165 (right s___)))
 (let ((?x366 (right s____)))
 (let (($x568 (= ?x366 ?x165)))
 (let ((?x538 (rest ?x165)))
 (let (($x565 (= ?x366 ?x538)))
 (let (($x542 ((_ is stack ) ?x165)))
 (let (($x543 (= c___ right-to-center)))
 (let (($x544 (and $x543 $x542)))
 (let (($x545 (= c___ right-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x394 (center s___)))
 (let ((?x535 (top ?x394)))
 (let ((?x537 (stack ?x535 ?x165)))
 (let (($x564 (= ?x366 ?x537)))
 (let (($x547 ((_ is stack ) ?x394)))
 (let (($x548 (= c___ center-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let (($x550 (= c___ center-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x162 (left s___)))
 (let (($x552 ((_ is stack ) ?x162)))
 (let (($x553 (= c___ left-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let (($x585 (ite $x554 $x568 (ite $x551 $x568 (ite $x549 $x564 (ite $x546 $x565 (ite $x544 $x565 $x568)))))))
 (let ((?x392 (top ?x162)))
 (let ((?x531 (stack ?x392 ?x165)))
 (let (($x560 (= ?x366 ?x531)))
 (let (($x555 (= c___ left-to-center)))
 (let (($x556 (and $x555 $x552)))
 (ite $x556 $x560 $x585)))))))))))))))))))))))))))))))
(assert
 (let ((?x394 (center s___)))
 (let ((?x532 (center s____)))
 (let (($x570 (= ?x532 ?x394)))
 (let ((?x165 (right s___)))
 (let ((?x539 (top ?x165)))
 (let ((?x541 (stack ?x539 ?x394)))
 (let (($x567 (= ?x532 ?x541)))
 (let (($x542 ((_ is stack ) ?x165)))
 (let (($x543 (= c___ right-to-center)))
 (let (($x544 (and $x543 $x542)))
 (let (($x545 (= c___ right-to-left)))
 (let (($x546 (and $x545 $x542)))
 (let ((?x534 (rest ?x394)))
 (let (($x562 (= ?x532 ?x534)))
 (let (($x547 ((_ is stack ) ?x394)))
 (let (($x548 (= c___ center-to-right)))
 (let (($x549 (and $x548 $x547)))
 (let (($x550 (= c___ center-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x162 (left s___)))
 (let ((?x392 (top ?x162)))
 (let ((?x533 (stack ?x392 ?x394)))
 (let (($x561 (= ?x532 ?x533)))
 (let (($x552 ((_ is stack ) ?x162)))
 (let (($x553 (= c___ left-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let (($x584 (ite $x554 $x561 (ite $x551 $x562 (ite $x549 $x562 (ite $x546 $x570 (ite $x544 $x567 $x570)))))))
 (let (($x555 (= c___ left-to-center)))
 (let (($x556 (and $x555 $x552)))
 (ite $x556 $x570 $x584)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x321 (left s____)))
 (let ((?x450 (left s_____)))
 (let (($x710 (= ?x450 ?x321)))
 (let ((?x366 (right s____)))
 (let ((?x677 (top ?x366)))
 (let ((?x678 (stack ?x677 ?x321)))
 (let (($x704 (= ?x450 ?x678)))
 (let (($x680 ((_ is stack ) ?x366)))
 (let (($x683 (= c____ right-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x532 (center s____)))
 (let (($x685 ((_ is stack ) ?x532)))
 (let (($x686 (= c____ center-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let ((?x673 (top ?x532)))
 (let ((?x674 (stack ?x673 ?x321)))
 (let (($x701 (= ?x450 ?x674)))
 (let (($x688 (= c____ center-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x483 (rest ?x321)))
 (let (($x697 (= ?x450 ?x483)))
 (let (($x690 ((_ is stack ) ?x321)))
 (let (($x691 (= c____ left-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let (($x693 (= c____ left-to-center)))
 (let (($x694 (and $x693 $x690)))
 (ite $x694 $x697 (ite $x692 $x697 (ite $x689 $x701 (ite $x687 $x710 (ite $x684 $x704 $x710))))))))))))))))))))))))))))))))
(assert
 (let ((?x366 (right s____)))
 (let ((?x484 (right s_____)))
 (let (($x706 (= ?x484 ?x366)))
 (let ((?x676 (rest ?x366)))
 (let (($x703 (= ?x484 ?x676)))
 (let (($x680 ((_ is stack ) ?x366)))
 (let (($x681 (= c____ right-to-center)))
 (let (($x682 (and $x681 $x680)))
 (let (($x683 (= c____ right-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x532 (center s____)))
 (let ((?x673 (top ?x532)))
 (let ((?x675 (stack ?x673 ?x366)))
 (let (($x702 (= ?x484 ?x675)))
 (let (($x685 ((_ is stack ) ?x532)))
 (let (($x686 (= c____ center-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let (($x688 (= c____ center-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x321 (left s____)))
 (let (($x690 ((_ is stack ) ?x321)))
 (let (($x691 (= c____ left-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let (($x723 (ite $x692 $x706 (ite $x689 $x706 (ite $x687 $x702 (ite $x684 $x703 (ite $x682 $x703 $x706)))))))
 (let ((?x530 (top ?x321)))
 (let ((?x669 (stack ?x530 ?x366)))
 (let (($x698 (= ?x484 ?x669)))
 (let (($x693 (= c____ left-to-center)))
 (let (($x694 (and $x693 $x690)))
 (ite $x694 $x698 $x723)))))))))))))))))))))))))))))))
(assert
 (let ((?x532 (center s____)))
 (let ((?x670 (center s_____)))
 (let (($x708 (= ?x670 ?x532)))
 (let ((?x366 (right s____)))
 (let ((?x677 (top ?x366)))
 (let ((?x679 (stack ?x677 ?x532)))
 (let (($x705 (= ?x670 ?x679)))
 (let (($x680 ((_ is stack ) ?x366)))
 (let (($x681 (= c____ right-to-center)))
 (let (($x682 (and $x681 $x680)))
 (let (($x683 (= c____ right-to-left)))
 (let (($x684 (and $x683 $x680)))
 (let ((?x672 (rest ?x532)))
 (let (($x700 (= ?x670 ?x672)))
 (let (($x685 ((_ is stack ) ?x532)))
 (let (($x686 (= c____ center-to-right)))
 (let (($x687 (and $x686 $x685)))
 (let (($x688 (= c____ center-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x321 (left s____)))
 (let ((?x530 (top ?x321)))
 (let ((?x671 (stack ?x530 ?x532)))
 (let (($x699 (= ?x670 ?x671)))
 (let (($x690 ((_ is stack ) ?x321)))
 (let (($x691 (= c____ left-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let (($x722 (ite $x692 $x699 (ite $x689 $x700 (ite $x687 $x700 (ite $x684 $x708 (ite $x682 $x705 $x708)))))))
 (let (($x693 (= c____ left-to-center)))
 (let (($x694 (and $x693 $x690)))
 (ite $x694 $x708 $x722)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x450 (left s_____)))
 (let ((?x588 (left s______)))
 (let (($x848 (= ?x588 ?x450)))
 (let ((?x484 (right s_____)))
 (let ((?x815 (top ?x484)))
 (let ((?x816 (stack ?x815 ?x450)))
 (let (($x842 (= ?x588 ?x816)))
 (let (($x818 ((_ is stack ) ?x484)))
 (let (($x821 (= c_____ right-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x670 (center s_____)))
 (let (($x823 ((_ is stack ) ?x670)))
 (let (($x824 (= c_____ center-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let ((?x811 (top ?x670)))
 (let ((?x812 (stack ?x811 ?x450)))
 (let (($x839 (= ?x588 ?x812)))
 (let (($x826 (= c_____ center-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x621 (rest ?x450)))
 (let (($x835 (= ?x588 ?x621)))
 (let (($x828 ((_ is stack ) ?x450)))
 (let (($x829 (= c_____ left-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let (($x831 (= c_____ left-to-center)))
 (let (($x832 (and $x831 $x828)))
 (ite $x832 $x835 (ite $x830 $x835 (ite $x827 $x839 (ite $x825 $x848 (ite $x822 $x842 $x848))))))))))))))))))))))))))))))))
(assert
 (let ((?x484 (right s_____)))
 (let ((?x622 (right s______)))
 (let (($x844 (= ?x622 ?x484)))
 (let ((?x814 (rest ?x484)))
 (let (($x841 (= ?x622 ?x814)))
 (let (($x818 ((_ is stack ) ?x484)))
 (let (($x819 (= c_____ right-to-center)))
 (let (($x820 (and $x819 $x818)))
 (let (($x821 (= c_____ right-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x670 (center s_____)))
 (let ((?x811 (top ?x670)))
 (let ((?x813 (stack ?x811 ?x484)))
 (let (($x840 (= ?x622 ?x813)))
 (let (($x823 ((_ is stack ) ?x670)))
 (let (($x824 (= c_____ center-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let (($x826 (= c_____ center-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x450 (left s_____)))
 (let (($x828 ((_ is stack ) ?x450)))
 (let (($x829 (= c_____ left-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let (($x861 (ite $x830 $x844 (ite $x827 $x844 (ite $x825 $x840 (ite $x822 $x841 (ite $x820 $x841 $x844)))))))
 (let ((?x668 (top ?x450)))
 (let ((?x807 (stack ?x668 ?x484)))
 (let (($x836 (= ?x622 ?x807)))
 (let (($x831 (= c_____ left-to-center)))
 (let (($x832 (and $x831 $x828)))
 (ite $x832 $x836 $x861)))))))))))))))))))))))))))))))
(assert
 (let ((?x670 (center s_____)))
 (let ((?x808 (center s______)))
 (let (($x846 (= ?x808 ?x670)))
 (let ((?x484 (right s_____)))
 (let ((?x815 (top ?x484)))
 (let ((?x817 (stack ?x815 ?x670)))
 (let (($x843 (= ?x808 ?x817)))
 (let (($x818 ((_ is stack ) ?x484)))
 (let (($x819 (= c_____ right-to-center)))
 (let (($x820 (and $x819 $x818)))
 (let (($x821 (= c_____ right-to-left)))
 (let (($x822 (and $x821 $x818)))
 (let ((?x810 (rest ?x670)))
 (let (($x838 (= ?x808 ?x810)))
 (let (($x823 ((_ is stack ) ?x670)))
 (let (($x824 (= c_____ center-to-right)))
 (let (($x825 (and $x824 $x823)))
 (let (($x826 (= c_____ center-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x450 (left s_____)))
 (let ((?x668 (top ?x450)))
 (let ((?x809 (stack ?x668 ?x670)))
 (let (($x837 (= ?x808 ?x809)))
 (let (($x828 ((_ is stack ) ?x450)))
 (let (($x829 (= c_____ left-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let (($x860 (ite $x830 $x837 (ite $x827 $x838 (ite $x825 $x838 (ite $x822 $x846 (ite $x820 $x843 $x846)))))))
 (let (($x831 (= c_____ left-to-center)))
 (let (($x832 (and $x831 $x828)))
 (ite $x832 $x846 $x860)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x588 (left s______)))
 (let ((?x726 (left s_______)))
 (let (($x986 (= ?x726 ?x588)))
 (let ((?x622 (right s______)))
 (let ((?x953 (top ?x622)))
 (let ((?x954 (stack ?x953 ?x588)))
 (let (($x980 (= ?x726 ?x954)))
 (let (($x956 ((_ is stack ) ?x622)))
 (let (($x959 (= c______ right-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x808 (center s______)))
 (let (($x961 ((_ is stack ) ?x808)))
 (let (($x962 (= c______ center-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let ((?x949 (top ?x808)))
 (let ((?x950 (stack ?x949 ?x588)))
 (let (($x977 (= ?x726 ?x950)))
 (let (($x964 (= c______ center-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x759 (rest ?x588)))
 (let (($x973 (= ?x726 ?x759)))
 (let (($x966 ((_ is stack ) ?x588)))
 (let (($x967 (= c______ left-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let (($x969 (= c______ left-to-center)))
 (let (($x970 (and $x969 $x966)))
 (ite $x970 $x973 (ite $x968 $x973 (ite $x965 $x977 (ite $x963 $x986 (ite $x960 $x980 $x986))))))))))))))))))))))))))))))))
(assert
 (let ((?x622 (right s______)))
 (let ((?x760 (right s_______)))
 (let (($x982 (= ?x760 ?x622)))
 (let ((?x952 (rest ?x622)))
 (let (($x979 (= ?x760 ?x952)))
 (let (($x956 ((_ is stack ) ?x622)))
 (let (($x957 (= c______ right-to-center)))
 (let (($x958 (and $x957 $x956)))
 (let (($x959 (= c______ right-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x808 (center s______)))
 (let ((?x949 (top ?x808)))
 (let ((?x951 (stack ?x949 ?x622)))
 (let (($x978 (= ?x760 ?x951)))
 (let (($x961 ((_ is stack ) ?x808)))
 (let (($x962 (= c______ center-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let (($x964 (= c______ center-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x588 (left s______)))
 (let (($x966 ((_ is stack ) ?x588)))
 (let (($x967 (= c______ left-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let (($x999 (ite $x968 $x982 (ite $x965 $x982 (ite $x963 $x978 (ite $x960 $x979 (ite $x958 $x979 $x982)))))))
 (let ((?x806 (top ?x588)))
 (let ((?x945 (stack ?x806 ?x622)))
 (let (($x974 (= ?x760 ?x945)))
 (let (($x969 (= c______ left-to-center)))
 (let (($x970 (and $x969 $x966)))
 (ite $x970 $x974 $x999)))))))))))))))))))))))))))))))
(assert
 (let ((?x808 (center s______)))
 (let ((?x946 (center s_______)))
 (let (($x984 (= ?x946 ?x808)))
 (let ((?x622 (right s______)))
 (let ((?x953 (top ?x622)))
 (let ((?x955 (stack ?x953 ?x808)))
 (let (($x981 (= ?x946 ?x955)))
 (let (($x956 ((_ is stack ) ?x622)))
 (let (($x957 (= c______ right-to-center)))
 (let (($x958 (and $x957 $x956)))
 (let (($x959 (= c______ right-to-left)))
 (let (($x960 (and $x959 $x956)))
 (let ((?x948 (rest ?x808)))
 (let (($x976 (= ?x946 ?x948)))
 (let (($x961 ((_ is stack ) ?x808)))
 (let (($x962 (= c______ center-to-right)))
 (let (($x963 (and $x962 $x961)))
 (let (($x964 (= c______ center-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x588 (left s______)))
 (let ((?x806 (top ?x588)))
 (let ((?x947 (stack ?x806 ?x808)))
 (let (($x975 (= ?x946 ?x947)))
 (let (($x966 ((_ is stack ) ?x588)))
 (let (($x967 (= c______ left-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let (($x998 (ite $x968 $x975 (ite $x965 $x976 (ite $x963 $x976 (ite $x960 $x984 (ite $x958 $x981 $x984)))))))
 (let (($x969 (= c______ left-to-center)))
 (let (($x970 (and $x969 $x966)))
 (ite $x970 $x984 $x998)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x726 (left s_______)))
 (let ((?x864 (left s________)))
 (let (($x1124 (= ?x864 ?x726)))
 (let ((?x760 (right s_______)))
 (let ((?x1091 (top ?x760)))
 (let ((?x1092 (stack ?x1091 ?x726)))
 (let (($x1118 (= ?x864 ?x1092)))
 (let (($x1094 ((_ is stack ) ?x760)))
 (let (($x1097 (= c_______ right-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x946 (center s_______)))
 (let (($x1099 ((_ is stack ) ?x946)))
 (let (($x1100 (= c_______ center-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let ((?x1087 (top ?x946)))
 (let ((?x1088 (stack ?x1087 ?x726)))
 (let (($x1115 (= ?x864 ?x1088)))
 (let (($x1102 (= c_______ center-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x897 (rest ?x726)))
 (let (($x1111 (= ?x864 ?x897)))
 (let (($x1104 ((_ is stack ) ?x726)))
 (let (($x1105 (= c_______ left-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let (($x1107 (= c_______ left-to-center)))
 (let (($x1108 (and $x1107 $x1104)))
 (ite $x1108 $x1111 (ite $x1106 $x1111 (ite $x1103 $x1115 (ite $x1101 $x1124 (ite $x1098 $x1118 $x1124))))))))))))))))))))))))))))))))
(assert
 (let ((?x760 (right s_______)))
 (let ((?x898 (right s________)))
 (let (($x1120 (= ?x898 ?x760)))
 (let ((?x1090 (rest ?x760)))
 (let (($x1117 (= ?x898 ?x1090)))
 (let (($x1094 ((_ is stack ) ?x760)))
 (let (($x1095 (= c_______ right-to-center)))
 (let (($x1096 (and $x1095 $x1094)))
 (let (($x1097 (= c_______ right-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x946 (center s_______)))
 (let ((?x1087 (top ?x946)))
 (let ((?x1089 (stack ?x1087 ?x760)))
 (let (($x1116 (= ?x898 ?x1089)))
 (let (($x1099 ((_ is stack ) ?x946)))
 (let (($x1100 (= c_______ center-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1102 (= c_______ center-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x726 (left s_______)))
 (let (($x1104 ((_ is stack ) ?x726)))
 (let (($x1105 (= c_______ left-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let (($x1137 (ite $x1106 $x1120 (ite $x1103 $x1120 (ite $x1101 $x1116 (ite $x1098 $x1117 (ite $x1096 $x1117 $x1120)))))))
 (let ((?x944 (top ?x726)))
 (let ((?x1083 (stack ?x944 ?x760)))
 (let (($x1112 (= ?x898 ?x1083)))
 (let (($x1107 (= c_______ left-to-center)))
 (let (($x1108 (and $x1107 $x1104)))
 (ite $x1108 $x1112 $x1137)))))))))))))))))))))))))))))))
(assert
 (let ((?x946 (center s_______)))
 (let ((?x1084 (center s________)))
 (let (($x1122 (= ?x1084 ?x946)))
 (let ((?x760 (right s_______)))
 (let ((?x1091 (top ?x760)))
 (let ((?x1093 (stack ?x1091 ?x946)))
 (let (($x1119 (= ?x1084 ?x1093)))
 (let (($x1094 ((_ is stack ) ?x760)))
 (let (($x1095 (= c_______ right-to-center)))
 (let (($x1096 (and $x1095 $x1094)))
 (let (($x1097 (= c_______ right-to-left)))
 (let (($x1098 (and $x1097 $x1094)))
 (let ((?x1086 (rest ?x946)))
 (let (($x1114 (= ?x1084 ?x1086)))
 (let (($x1099 ((_ is stack ) ?x946)))
 (let (($x1100 (= c_______ center-to-right)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1102 (= c_______ center-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x726 (left s_______)))
 (let ((?x944 (top ?x726)))
 (let ((?x1085 (stack ?x944 ?x946)))
 (let (($x1113 (= ?x1084 ?x1085)))
 (let (($x1104 ((_ is stack ) ?x726)))
 (let (($x1105 (= c_______ left-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let (($x1136 (ite $x1106 $x1113 (ite $x1103 $x1114 (ite $x1101 $x1114 (ite $x1098 $x1122 (ite $x1096 $x1119 $x1122)))))))
 (let (($x1107 (= c_______ left-to-center)))
 (let (($x1108 (and $x1107 $x1104)))
 (ite $x1108 $x1122 $x1136)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x864 (left s________)))
 (let ((?x1002 (left s_________)))
 (let (($x1262 (= ?x1002 ?x864)))
 (let ((?x898 (right s________)))
 (let ((?x1229 (top ?x898)))
 (let ((?x1230 (stack ?x1229 ?x864)))
 (let (($x1256 (= ?x1002 ?x1230)))
 (let (($x1232 ((_ is stack ) ?x898)))
 (let (($x1235 (= c________ right-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x1084 (center s________)))
 (let (($x1237 ((_ is stack ) ?x1084)))
 (let (($x1238 (= c________ center-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let ((?x1225 (top ?x1084)))
 (let ((?x1226 (stack ?x1225 ?x864)))
 (let (($x1253 (= ?x1002 ?x1226)))
 (let (($x1240 (= c________ center-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x1035 (rest ?x864)))
 (let (($x1249 (= ?x1002 ?x1035)))
 (let (($x1242 ((_ is stack ) ?x864)))
 (let (($x1243 (= c________ left-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let (($x1245 (= c________ left-to-center)))
 (let (($x1246 (and $x1245 $x1242)))
 (ite $x1246 $x1249 (ite $x1244 $x1249 (ite $x1241 $x1253 (ite $x1239 $x1262 (ite $x1236 $x1256 $x1262))))))))))))))))))))))))))))))))
(assert
 (let ((?x898 (right s________)))
 (let ((?x1036 (right s_________)))
 (let (($x1258 (= ?x1036 ?x898)))
 (let ((?x1228 (rest ?x898)))
 (let (($x1255 (= ?x1036 ?x1228)))
 (let (($x1232 ((_ is stack ) ?x898)))
 (let (($x1233 (= c________ right-to-center)))
 (let (($x1234 (and $x1233 $x1232)))
 (let (($x1235 (= c________ right-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x1084 (center s________)))
 (let ((?x1225 (top ?x1084)))
 (let ((?x1227 (stack ?x1225 ?x898)))
 (let (($x1254 (= ?x1036 ?x1227)))
 (let (($x1237 ((_ is stack ) ?x1084)))
 (let (($x1238 (= c________ center-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1240 (= c________ center-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x864 (left s________)))
 (let (($x1242 ((_ is stack ) ?x864)))
 (let (($x1243 (= c________ left-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let (($x1275 (ite $x1244 $x1258 (ite $x1241 $x1258 (ite $x1239 $x1254 (ite $x1236 $x1255 (ite $x1234 $x1255 $x1258)))))))
 (let ((?x1082 (top ?x864)))
 (let ((?x1221 (stack ?x1082 ?x898)))
 (let (($x1250 (= ?x1036 ?x1221)))
 (let (($x1245 (= c________ left-to-center)))
 (let (($x1246 (and $x1245 $x1242)))
 (ite $x1246 $x1250 $x1275)))))))))))))))))))))))))))))))
(assert
 (let ((?x1084 (center s________)))
 (let ((?x1222 (center s_________)))
 (let (($x1260 (= ?x1222 ?x1084)))
 (let ((?x898 (right s________)))
 (let ((?x1229 (top ?x898)))
 (let ((?x1231 (stack ?x1229 ?x1084)))
 (let (($x1257 (= ?x1222 ?x1231)))
 (let (($x1232 ((_ is stack ) ?x898)))
 (let (($x1233 (= c________ right-to-center)))
 (let (($x1234 (and $x1233 $x1232)))
 (let (($x1235 (= c________ right-to-left)))
 (let (($x1236 (and $x1235 $x1232)))
 (let ((?x1224 (rest ?x1084)))
 (let (($x1252 (= ?x1222 ?x1224)))
 (let (($x1237 ((_ is stack ) ?x1084)))
 (let (($x1238 (= c________ center-to-right)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1240 (= c________ center-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x864 (left s________)))
 (let ((?x1082 (top ?x864)))
 (let ((?x1223 (stack ?x1082 ?x1084)))
 (let (($x1251 (= ?x1222 ?x1223)))
 (let (($x1242 ((_ is stack ) ?x864)))
 (let (($x1243 (= c________ left-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let (($x1274 (ite $x1244 $x1251 (ite $x1241 $x1252 (ite $x1239 $x1252 (ite $x1236 $x1260 (ite $x1234 $x1257 $x1260)))))))
 (let (($x1245 (= c________ left-to-center)))
 (let (($x1246 (and $x1245 $x1242)))
 (ite $x1246 $x1260 $x1274)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1002 (left s_________)))
 (let ((?x1140 (left s__________)))
 (let (($x1400 (= ?x1140 ?x1002)))
 (let ((?x1036 (right s_________)))
 (let ((?x1367 (top ?x1036)))
 (let ((?x1368 (stack ?x1367 ?x1002)))
 (let (($x1394 (= ?x1140 ?x1368)))
 (let (($x1370 ((_ is stack ) ?x1036)))
 (let (($x1373 (= c_________ right-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x1222 (center s_________)))
 (let (($x1375 ((_ is stack ) ?x1222)))
 (let (($x1376 (= c_________ center-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let ((?x1363 (top ?x1222)))
 (let ((?x1364 (stack ?x1363 ?x1002)))
 (let (($x1391 (= ?x1140 ?x1364)))
 (let (($x1378 (= c_________ center-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1173 (rest ?x1002)))
 (let (($x1387 (= ?x1140 ?x1173)))
 (let (($x1380 ((_ is stack ) ?x1002)))
 (let (($x1381 (= c_________ left-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let (($x1383 (= c_________ left-to-center)))
 (let (($x1384 (and $x1383 $x1380)))
 (ite $x1384 $x1387 (ite $x1382 $x1387 (ite $x1379 $x1391 (ite $x1377 $x1400 (ite $x1374 $x1394 $x1400))))))))))))))))))))))))))))))))
(assert
 (let ((?x1036 (right s_________)))
 (let ((?x1174 (right s__________)))
 (let (($x1396 (= ?x1174 ?x1036)))
 (let ((?x1366 (rest ?x1036)))
 (let (($x1393 (= ?x1174 ?x1366)))
 (let (($x1370 ((_ is stack ) ?x1036)))
 (let (($x1371 (= c_________ right-to-center)))
 (let (($x1372 (and $x1371 $x1370)))
 (let (($x1373 (= c_________ right-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x1222 (center s_________)))
 (let ((?x1363 (top ?x1222)))
 (let ((?x1365 (stack ?x1363 ?x1036)))
 (let (($x1392 (= ?x1174 ?x1365)))
 (let (($x1375 ((_ is stack ) ?x1222)))
 (let (($x1376 (= c_________ center-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1378 (= c_________ center-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1002 (left s_________)))
 (let (($x1380 ((_ is stack ) ?x1002)))
 (let (($x1381 (= c_________ left-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let (($x1413 (ite $x1382 $x1396 (ite $x1379 $x1396 (ite $x1377 $x1392 (ite $x1374 $x1393 (ite $x1372 $x1393 $x1396)))))))
 (let ((?x1220 (top ?x1002)))
 (let ((?x1359 (stack ?x1220 ?x1036)))
 (let (($x1388 (= ?x1174 ?x1359)))
 (let (($x1383 (= c_________ left-to-center)))
 (let (($x1384 (and $x1383 $x1380)))
 (ite $x1384 $x1388 $x1413)))))))))))))))))))))))))))))))
(assert
 (let ((?x1222 (center s_________)))
 (let ((?x1360 (center s__________)))
 (let (($x1398 (= ?x1360 ?x1222)))
 (let ((?x1036 (right s_________)))
 (let ((?x1367 (top ?x1036)))
 (let ((?x1369 (stack ?x1367 ?x1222)))
 (let (($x1395 (= ?x1360 ?x1369)))
 (let (($x1370 ((_ is stack ) ?x1036)))
 (let (($x1371 (= c_________ right-to-center)))
 (let (($x1372 (and $x1371 $x1370)))
 (let (($x1373 (= c_________ right-to-left)))
 (let (($x1374 (and $x1373 $x1370)))
 (let ((?x1362 (rest ?x1222)))
 (let (($x1390 (= ?x1360 ?x1362)))
 (let (($x1375 ((_ is stack ) ?x1222)))
 (let (($x1376 (= c_________ center-to-right)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1378 (= c_________ center-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1002 (left s_________)))
 (let ((?x1220 (top ?x1002)))
 (let ((?x1361 (stack ?x1220 ?x1222)))
 (let (($x1389 (= ?x1360 ?x1361)))
 (let (($x1380 ((_ is stack ) ?x1002)))
 (let (($x1381 (= c_________ left-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let (($x1412 (ite $x1382 $x1389 (ite $x1379 $x1390 (ite $x1377 $x1390 (ite $x1374 $x1398 (ite $x1372 $x1395 $x1398)))))))
 (let (($x1383 (= c_________ left-to-center)))
 (let (($x1384 (and $x1383 $x1380)))
 (ite $x1384 $x1398 $x1412)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1140 (left s__________)))
 (let ((?x1278 (left s___________)))
 (let (($x1538 (= ?x1278 ?x1140)))
 (let ((?x1174 (right s__________)))
 (let ((?x1505 (top ?x1174)))
 (let ((?x1506 (stack ?x1505 ?x1140)))
 (let (($x1532 (= ?x1278 ?x1506)))
 (let (($x1508 ((_ is stack ) ?x1174)))
 (let (($x1511 (= c__________ right-to-left)))
 (let (($x1512 (and $x1511 $x1508)))
 (let ((?x1360 (center s__________)))
 (let (($x1513 ((_ is stack ) ?x1360)))
 (let (($x1514 (= c__________ center-to-right)))
 (let (($x1515 (and $x1514 $x1513)))
 (let ((?x1501 (top ?x1360)))
 (let ((?x1502 (stack ?x1501 ?x1140)))
 (let (($x1529 (= ?x1278 ?x1502)))
 (let (($x1516 (= c__________ center-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1311 (rest ?x1140)))
 (let (($x1525 (= ?x1278 ?x1311)))
 (let (($x1518 ((_ is stack ) ?x1140)))
 (let (($x1519 (= c__________ left-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let (($x1521 (= c__________ left-to-center)))
 (let (($x1522 (and $x1521 $x1518)))
 (ite $x1522 $x1525 (ite $x1520 $x1525 (ite $x1517 $x1529 (ite $x1515 $x1538 (ite $x1512 $x1532 $x1538))))))))))))))))))))))))))))))))
(assert
 (let ((?x1174 (right s__________)))
 (let ((?x1312 (right s___________)))
 (let (($x1534 (= ?x1312 ?x1174)))
 (let ((?x1504 (rest ?x1174)))
 (let (($x1531 (= ?x1312 ?x1504)))
 (let (($x1508 ((_ is stack ) ?x1174)))
 (let (($x1509 (= c__________ right-to-center)))
 (let (($x1510 (and $x1509 $x1508)))
 (let (($x1511 (= c__________ right-to-left)))
 (let (($x1512 (and $x1511 $x1508)))
 (let ((?x1360 (center s__________)))
 (let ((?x1501 (top ?x1360)))
 (let ((?x1503 (stack ?x1501 ?x1174)))
 (let (($x1530 (= ?x1312 ?x1503)))
 (let (($x1513 ((_ is stack ) ?x1360)))
 (let (($x1514 (= c__________ center-to-right)))
 (let (($x1515 (and $x1514 $x1513)))
 (let (($x1516 (= c__________ center-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1140 (left s__________)))
 (let (($x1518 ((_ is stack ) ?x1140)))
 (let (($x1519 (= c__________ left-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let (($x1551 (ite $x1520 $x1534 (ite $x1517 $x1534 (ite $x1515 $x1530 (ite $x1512 $x1531 (ite $x1510 $x1531 $x1534)))))))
 (let ((?x1358 (top ?x1140)))
 (let ((?x1497 (stack ?x1358 ?x1174)))
 (let (($x1526 (= ?x1312 ?x1497)))
 (let (($x1521 (= c__________ left-to-center)))
 (let (($x1522 (and $x1521 $x1518)))
 (ite $x1522 $x1526 $x1551)))))))))))))))))))))))))))))))
(assert
 (let ((?x1360 (center s__________)))
 (let ((?x1498 (center s___________)))
 (let (($x1536 (= ?x1498 ?x1360)))
 (let ((?x1174 (right s__________)))
 (let ((?x1505 (top ?x1174)))
 (let ((?x1507 (stack ?x1505 ?x1360)))
 (let (($x1533 (= ?x1498 ?x1507)))
 (let (($x1508 ((_ is stack ) ?x1174)))
 (let (($x1509 (= c__________ right-to-center)))
 (let (($x1510 (and $x1509 $x1508)))
 (let (($x1511 (= c__________ right-to-left)))
 (let (($x1512 (and $x1511 $x1508)))
 (let ((?x1500 (rest ?x1360)))
 (let (($x1528 (= ?x1498 ?x1500)))
 (let (($x1513 ((_ is stack ) ?x1360)))
 (let (($x1514 (= c__________ center-to-right)))
 (let (($x1515 (and $x1514 $x1513)))
 (let (($x1516 (= c__________ center-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1140 (left s__________)))
 (let ((?x1358 (top ?x1140)))
 (let ((?x1499 (stack ?x1358 ?x1360)))
 (let (($x1527 (= ?x1498 ?x1499)))
 (let (($x1518 ((_ is stack ) ?x1140)))
 (let (($x1519 (= c__________ left-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let (($x1550 (ite $x1520 $x1527 (ite $x1517 $x1528 (ite $x1515 $x1528 (ite $x1512 $x1536 (ite $x1510 $x1533 $x1536)))))))
 (let (($x1521 (= c__________ left-to-center)))
 (let (($x1522 (and $x1521 $x1518)))
 (ite $x1522 $x1536 $x1550)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1278 (left s___________)))
 (let ((?x1416 (left s____________)))
 (let (($x1676 (= ?x1416 ?x1278)))
 (let ((?x1312 (right s___________)))
 (let ((?x1643 (top ?x1312)))
 (let ((?x1644 (stack ?x1643 ?x1278)))
 (let (($x1670 (= ?x1416 ?x1644)))
 (let (($x1646 ((_ is stack ) ?x1312)))
 (let (($x1649 (= c___________ right-to-left)))
 (let (($x1650 (and $x1649 $x1646)))
 (let ((?x1498 (center s___________)))
 (let (($x1651 ((_ is stack ) ?x1498)))
 (let (($x1652 (= c___________ center-to-right)))
 (let (($x1653 (and $x1652 $x1651)))
 (let ((?x1639 (top ?x1498)))
 (let ((?x1640 (stack ?x1639 ?x1278)))
 (let (($x1667 (= ?x1416 ?x1640)))
 (let (($x1654 (= c___________ center-to-left)))
 (let (($x1655 (and $x1654 $x1651)))
 (let ((?x1449 (rest ?x1278)))
 (let (($x1663 (= ?x1416 ?x1449)))
 (let (($x1656 ((_ is stack ) ?x1278)))
 (let (($x1657 (= c___________ left-to-right)))
 (let (($x1658 (and $x1657 $x1656)))
 (let (($x1659 (= c___________ left-to-center)))
 (let (($x1660 (and $x1659 $x1656)))
 (ite $x1660 $x1663 (ite $x1658 $x1663 (ite $x1655 $x1667 (ite $x1653 $x1676 (ite $x1650 $x1670 $x1676))))))))))))))))))))))))))))))))
(assert
 (let ((?x1312 (right s___________)))
 (let ((?x1450 (right s____________)))
 (let (($x1672 (= ?x1450 ?x1312)))
 (let ((?x1642 (rest ?x1312)))
 (let (($x1669 (= ?x1450 ?x1642)))
 (let (($x1646 ((_ is stack ) ?x1312)))
 (let (($x1647 (= c___________ right-to-center)))
 (let (($x1648 (and $x1647 $x1646)))
 (let (($x1649 (= c___________ right-to-left)))
 (let (($x1650 (and $x1649 $x1646)))
 (let ((?x1498 (center s___________)))
 (let ((?x1639 (top ?x1498)))
 (let ((?x1641 (stack ?x1639 ?x1312)))
 (let (($x1668 (= ?x1450 ?x1641)))
 (let (($x1651 ((_ is stack ) ?x1498)))
 (let (($x1652 (= c___________ center-to-right)))
 (let (($x1653 (and $x1652 $x1651)))
 (let (($x1654 (= c___________ center-to-left)))
 (let (($x1655 (and $x1654 $x1651)))
 (let ((?x1278 (left s___________)))
 (let (($x1656 ((_ is stack ) ?x1278)))
 (let (($x1657 (= c___________ left-to-right)))
 (let (($x1658 (and $x1657 $x1656)))
 (let (($x1689 (ite $x1658 $x1672 (ite $x1655 $x1672 (ite $x1653 $x1668 (ite $x1650 $x1669 (ite $x1648 $x1669 $x1672)))))))
 (let ((?x1496 (top ?x1278)))
 (let ((?x1635 (stack ?x1496 ?x1312)))
 (let (($x1664 (= ?x1450 ?x1635)))
 (let (($x1659 (= c___________ left-to-center)))
 (let (($x1660 (and $x1659 $x1656)))
 (ite $x1660 $x1664 $x1689)))))))))))))))))))))))))))))))
(assert
 (let ((?x1498 (center s___________)))
 (let ((?x1636 (center s____________)))
 (let (($x1674 (= ?x1636 ?x1498)))
 (let ((?x1312 (right s___________)))
 (let ((?x1643 (top ?x1312)))
 (let ((?x1645 (stack ?x1643 ?x1498)))
 (let (($x1671 (= ?x1636 ?x1645)))
 (let (($x1646 ((_ is stack ) ?x1312)))
 (let (($x1647 (= c___________ right-to-center)))
 (let (($x1648 (and $x1647 $x1646)))
 (let (($x1649 (= c___________ right-to-left)))
 (let (($x1650 (and $x1649 $x1646)))
 (let ((?x1638 (rest ?x1498)))
 (let (($x1666 (= ?x1636 ?x1638)))
 (let (($x1651 ((_ is stack ) ?x1498)))
 (let (($x1652 (= c___________ center-to-right)))
 (let (($x1653 (and $x1652 $x1651)))
 (let (($x1654 (= c___________ center-to-left)))
 (let (($x1655 (and $x1654 $x1651)))
 (let ((?x1278 (left s___________)))
 (let ((?x1496 (top ?x1278)))
 (let ((?x1637 (stack ?x1496 ?x1498)))
 (let (($x1665 (= ?x1636 ?x1637)))
 (let (($x1656 ((_ is stack ) ?x1278)))
 (let (($x1657 (= c___________ left-to-right)))
 (let (($x1658 (and $x1657 $x1656)))
 (let (($x1688 (ite $x1658 $x1665 (ite $x1655 $x1666 (ite $x1653 $x1666 (ite $x1650 $x1674 (ite $x1648 $x1671 $x1674)))))))
 (let (($x1659 (= c___________ left-to-center)))
 (let (($x1660 (and $x1659 $x1656)))
 (ite $x1660 $x1674 $x1688)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1416 (left s____________)))
 (let ((?x1554 (left s_____________)))
 (let (($x1814 (= ?x1554 ?x1416)))
 (let ((?x1450 (right s____________)))
 (let ((?x1781 (top ?x1450)))
 (let ((?x1782 (stack ?x1781 ?x1416)))
 (let (($x1808 (= ?x1554 ?x1782)))
 (let (($x1784 ((_ is stack ) ?x1450)))
 (let (($x1787 (= c____________ right-to-left)))
 (let (($x1788 (and $x1787 $x1784)))
 (let ((?x1636 (center s____________)))
 (let (($x1789 ((_ is stack ) ?x1636)))
 (let (($x1790 (= c____________ center-to-right)))
 (let (($x1791 (and $x1790 $x1789)))
 (let ((?x1777 (top ?x1636)))
 (let ((?x1778 (stack ?x1777 ?x1416)))
 (let (($x1805 (= ?x1554 ?x1778)))
 (let (($x1792 (= c____________ center-to-left)))
 (let (($x1793 (and $x1792 $x1789)))
 (let ((?x1587 (rest ?x1416)))
 (let (($x1801 (= ?x1554 ?x1587)))
 (let (($x1794 ((_ is stack ) ?x1416)))
 (let (($x1795 (= c____________ left-to-right)))
 (let (($x1796 (and $x1795 $x1794)))
 (let (($x1797 (= c____________ left-to-center)))
 (let (($x1798 (and $x1797 $x1794)))
 (ite $x1798 $x1801 (ite $x1796 $x1801 (ite $x1793 $x1805 (ite $x1791 $x1814 (ite $x1788 $x1808 $x1814))))))))))))))))))))))))))))))))
(assert
 (let ((?x1450 (right s____________)))
 (let ((?x1588 (right s_____________)))
 (let (($x1810 (= ?x1588 ?x1450)))
 (let ((?x1780 (rest ?x1450)))
 (let (($x1807 (= ?x1588 ?x1780)))
 (let (($x1784 ((_ is stack ) ?x1450)))
 (let (($x1785 (= c____________ right-to-center)))
 (let (($x1786 (and $x1785 $x1784)))
 (let (($x1787 (= c____________ right-to-left)))
 (let (($x1788 (and $x1787 $x1784)))
 (let ((?x1636 (center s____________)))
 (let ((?x1777 (top ?x1636)))
 (let ((?x1779 (stack ?x1777 ?x1450)))
 (let (($x1806 (= ?x1588 ?x1779)))
 (let (($x1789 ((_ is stack ) ?x1636)))
 (let (($x1790 (= c____________ center-to-right)))
 (let (($x1791 (and $x1790 $x1789)))
 (let (($x1792 (= c____________ center-to-left)))
 (let (($x1793 (and $x1792 $x1789)))
 (let ((?x1416 (left s____________)))
 (let (($x1794 ((_ is stack ) ?x1416)))
 (let (($x1795 (= c____________ left-to-right)))
 (let (($x1796 (and $x1795 $x1794)))
 (let (($x1827 (ite $x1796 $x1810 (ite $x1793 $x1810 (ite $x1791 $x1806 (ite $x1788 $x1807 (ite $x1786 $x1807 $x1810)))))))
 (let ((?x1634 (top ?x1416)))
 (let ((?x1773 (stack ?x1634 ?x1450)))
 (let (($x1802 (= ?x1588 ?x1773)))
 (let (($x1797 (= c____________ left-to-center)))
 (let (($x1798 (and $x1797 $x1794)))
 (ite $x1798 $x1802 $x1827)))))))))))))))))))))))))))))))
(assert
 (let ((?x1636 (center s____________)))
 (let ((?x1774 (center s_____________)))
 (let (($x1812 (= ?x1774 ?x1636)))
 (let ((?x1450 (right s____________)))
 (let ((?x1781 (top ?x1450)))
 (let ((?x1783 (stack ?x1781 ?x1636)))
 (let (($x1809 (= ?x1774 ?x1783)))
 (let (($x1784 ((_ is stack ) ?x1450)))
 (let (($x1785 (= c____________ right-to-center)))
 (let (($x1786 (and $x1785 $x1784)))
 (let (($x1787 (= c____________ right-to-left)))
 (let (($x1788 (and $x1787 $x1784)))
 (let ((?x1776 (rest ?x1636)))
 (let (($x1804 (= ?x1774 ?x1776)))
 (let (($x1789 ((_ is stack ) ?x1636)))
 (let (($x1790 (= c____________ center-to-right)))
 (let (($x1791 (and $x1790 $x1789)))
 (let (($x1792 (= c____________ center-to-left)))
 (let (($x1793 (and $x1792 $x1789)))
 (let ((?x1416 (left s____________)))
 (let ((?x1634 (top ?x1416)))
 (let ((?x1775 (stack ?x1634 ?x1636)))
 (let (($x1803 (= ?x1774 ?x1775)))
 (let (($x1794 ((_ is stack ) ?x1416)))
 (let (($x1795 (= c____________ left-to-right)))
 (let (($x1796 (and $x1795 $x1794)))
 (let (($x1826 (ite $x1796 $x1803 (ite $x1793 $x1804 (ite $x1791 $x1804 (ite $x1788 $x1812 (ite $x1786 $x1809 $x1812)))))))
 (let (($x1797 (= c____________ left-to-center)))
 (let (($x1798 (and $x1797 $x1794)))
 (ite $x1798 $x1812 $x1826)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1554 (left s_____________)))
 (let ((?x1692 (left s______________)))
 (let (($x1952 (= ?x1692 ?x1554)))
 (let ((?x1588 (right s_____________)))
 (let ((?x1919 (top ?x1588)))
 (let ((?x1920 (stack ?x1919 ?x1554)))
 (let (($x1946 (= ?x1692 ?x1920)))
 (let (($x1922 ((_ is stack ) ?x1588)))
 (let (($x1925 (= c_____________ right-to-left)))
 (let (($x1926 (and $x1925 $x1922)))
 (let ((?x1774 (center s_____________)))
 (let (($x1927 ((_ is stack ) ?x1774)))
 (let (($x1928 (= c_____________ center-to-right)))
 (let (($x1929 (and $x1928 $x1927)))
 (let ((?x1915 (top ?x1774)))
 (let ((?x1916 (stack ?x1915 ?x1554)))
 (let (($x1943 (= ?x1692 ?x1916)))
 (let (($x1930 (= c_____________ center-to-left)))
 (let (($x1931 (and $x1930 $x1927)))
 (let ((?x1725 (rest ?x1554)))
 (let (($x1939 (= ?x1692 ?x1725)))
 (let (($x1932 ((_ is stack ) ?x1554)))
 (let (($x1933 (= c_____________ left-to-right)))
 (let (($x1934 (and $x1933 $x1932)))
 (let (($x1935 (= c_____________ left-to-center)))
 (let (($x1936 (and $x1935 $x1932)))
 (ite $x1936 $x1939 (ite $x1934 $x1939 (ite $x1931 $x1943 (ite $x1929 $x1952 (ite $x1926 $x1946 $x1952))))))))))))))))))))))))))))))))
(assert
 (let ((?x1588 (right s_____________)))
 (let ((?x1726 (right s______________)))
 (let (($x1948 (= ?x1726 ?x1588)))
 (let ((?x1918 (rest ?x1588)))
 (let (($x1945 (= ?x1726 ?x1918)))
 (let (($x1922 ((_ is stack ) ?x1588)))
 (let (($x1923 (= c_____________ right-to-center)))
 (let (($x1924 (and $x1923 $x1922)))
 (let (($x1925 (= c_____________ right-to-left)))
 (let (($x1926 (and $x1925 $x1922)))
 (let ((?x1774 (center s_____________)))
 (let ((?x1915 (top ?x1774)))
 (let ((?x1917 (stack ?x1915 ?x1588)))
 (let (($x1944 (= ?x1726 ?x1917)))
 (let (($x1927 ((_ is stack ) ?x1774)))
 (let (($x1928 (= c_____________ center-to-right)))
 (let (($x1929 (and $x1928 $x1927)))
 (let (($x1930 (= c_____________ center-to-left)))
 (let (($x1931 (and $x1930 $x1927)))
 (let ((?x1554 (left s_____________)))
 (let (($x1932 ((_ is stack ) ?x1554)))
 (let (($x1933 (= c_____________ left-to-right)))
 (let (($x1934 (and $x1933 $x1932)))
 (let (($x1965 (ite $x1934 $x1948 (ite $x1931 $x1948 (ite $x1929 $x1944 (ite $x1926 $x1945 (ite $x1924 $x1945 $x1948)))))))
 (let ((?x1772 (top ?x1554)))
 (let ((?x1911 (stack ?x1772 ?x1588)))
 (let (($x1940 (= ?x1726 ?x1911)))
 (let (($x1935 (= c_____________ left-to-center)))
 (let (($x1936 (and $x1935 $x1932)))
 (ite $x1936 $x1940 $x1965)))))))))))))))))))))))))))))))
(assert
 (let ((?x1774 (center s_____________)))
 (let ((?x1912 (center s______________)))
 (let (($x1950 (= ?x1912 ?x1774)))
 (let ((?x1588 (right s_____________)))
 (let ((?x1919 (top ?x1588)))
 (let ((?x1921 (stack ?x1919 ?x1774)))
 (let (($x1947 (= ?x1912 ?x1921)))
 (let (($x1922 ((_ is stack ) ?x1588)))
 (let (($x1923 (= c_____________ right-to-center)))
 (let (($x1924 (and $x1923 $x1922)))
 (let (($x1925 (= c_____________ right-to-left)))
 (let (($x1926 (and $x1925 $x1922)))
 (let ((?x1914 (rest ?x1774)))
 (let (($x1942 (= ?x1912 ?x1914)))
 (let (($x1927 ((_ is stack ) ?x1774)))
 (let (($x1928 (= c_____________ center-to-right)))
 (let (($x1929 (and $x1928 $x1927)))
 (let (($x1930 (= c_____________ center-to-left)))
 (let (($x1931 (and $x1930 $x1927)))
 (let ((?x1554 (left s_____________)))
 (let ((?x1772 (top ?x1554)))
 (let ((?x1913 (stack ?x1772 ?x1774)))
 (let (($x1941 (= ?x1912 ?x1913)))
 (let (($x1932 ((_ is stack ) ?x1554)))
 (let (($x1933 (= c_____________ left-to-right)))
 (let (($x1934 (and $x1933 $x1932)))
 (let (($x1964 (ite $x1934 $x1941 (ite $x1931 $x1942 (ite $x1929 $x1942 (ite $x1926 $x1950 (ite $x1924 $x1947 $x1950)))))))
 (let (($x1935 (= c_____________ left-to-center)))
 (let (($x1936 (and $x1935 $x1932)))
 (ite $x1936 $x1950 $x1964)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1692 (left s______________)))
 (let ((?x1830 (left s_______________)))
 (let (($x2090 (= ?x1830 ?x1692)))
 (let ((?x1726 (right s______________)))
 (let ((?x2057 (top ?x1726)))
 (let ((?x2058 (stack ?x2057 ?x1692)))
 (let (($x2084 (= ?x1830 ?x2058)))
 (let (($x2060 ((_ is stack ) ?x1726)))
 (let (($x2063 (= c______________ right-to-left)))
 (let (($x2064 (and $x2063 $x2060)))
 (let ((?x1912 (center s______________)))
 (let (($x2065 ((_ is stack ) ?x1912)))
 (let (($x2066 (= c______________ center-to-right)))
 (let (($x2067 (and $x2066 $x2065)))
 (let ((?x2053 (top ?x1912)))
 (let ((?x2054 (stack ?x2053 ?x1692)))
 (let (($x2081 (= ?x1830 ?x2054)))
 (let (($x2068 (= c______________ center-to-left)))
 (let (($x2069 (and $x2068 $x2065)))
 (let ((?x1863 (rest ?x1692)))
 (let (($x2077 (= ?x1830 ?x1863)))
 (let (($x2070 ((_ is stack ) ?x1692)))
 (let (($x2071 (= c______________ left-to-right)))
 (let (($x2072 (and $x2071 $x2070)))
 (let (($x2073 (= c______________ left-to-center)))
 (let (($x2074 (and $x2073 $x2070)))
 (ite $x2074 $x2077 (ite $x2072 $x2077 (ite $x2069 $x2081 (ite $x2067 $x2090 (ite $x2064 $x2084 $x2090))))))))))))))))))))))))))))))))
(assert
 (let ((?x1726 (right s______________)))
 (let ((?x1864 (right s_______________)))
 (let (($x2086 (= ?x1864 ?x1726)))
 (let ((?x2056 (rest ?x1726)))
 (let (($x2083 (= ?x1864 ?x2056)))
 (let (($x2060 ((_ is stack ) ?x1726)))
 (let (($x2061 (= c______________ right-to-center)))
 (let (($x2062 (and $x2061 $x2060)))
 (let (($x2063 (= c______________ right-to-left)))
 (let (($x2064 (and $x2063 $x2060)))
 (let ((?x1912 (center s______________)))
 (let ((?x2053 (top ?x1912)))
 (let ((?x2055 (stack ?x2053 ?x1726)))
 (let (($x2082 (= ?x1864 ?x2055)))
 (let (($x2065 ((_ is stack ) ?x1912)))
 (let (($x2066 (= c______________ center-to-right)))
 (let (($x2067 (and $x2066 $x2065)))
 (let (($x2068 (= c______________ center-to-left)))
 (let (($x2069 (and $x2068 $x2065)))
 (let ((?x1692 (left s______________)))
 (let (($x2070 ((_ is stack ) ?x1692)))
 (let (($x2071 (= c______________ left-to-right)))
 (let (($x2072 (and $x2071 $x2070)))
 (let (($x2103 (ite $x2072 $x2086 (ite $x2069 $x2086 (ite $x2067 $x2082 (ite $x2064 $x2083 (ite $x2062 $x2083 $x2086)))))))
 (let ((?x1910 (top ?x1692)))
 (let ((?x2049 (stack ?x1910 ?x1726)))
 (let (($x2078 (= ?x1864 ?x2049)))
 (let (($x2073 (= c______________ left-to-center)))
 (let (($x2074 (and $x2073 $x2070)))
 (ite $x2074 $x2078 $x2103)))))))))))))))))))))))))))))))
(assert
 (let ((?x1912 (center s______________)))
 (let ((?x2050 (center s_______________)))
 (let (($x2088 (= ?x2050 ?x1912)))
 (let ((?x1726 (right s______________)))
 (let ((?x2057 (top ?x1726)))
 (let ((?x2059 (stack ?x2057 ?x1912)))
 (let (($x2085 (= ?x2050 ?x2059)))
 (let (($x2060 ((_ is stack ) ?x1726)))
 (let (($x2061 (= c______________ right-to-center)))
 (let (($x2062 (and $x2061 $x2060)))
 (let (($x2063 (= c______________ right-to-left)))
 (let (($x2064 (and $x2063 $x2060)))
 (let ((?x2052 (rest ?x1912)))
 (let (($x2080 (= ?x2050 ?x2052)))
 (let (($x2065 ((_ is stack ) ?x1912)))
 (let (($x2066 (= c______________ center-to-right)))
 (let (($x2067 (and $x2066 $x2065)))
 (let (($x2068 (= c______________ center-to-left)))
 (let (($x2069 (and $x2068 $x2065)))
 (let ((?x1692 (left s______________)))
 (let ((?x1910 (top ?x1692)))
 (let ((?x2051 (stack ?x1910 ?x1912)))
 (let (($x2079 (= ?x2050 ?x2051)))
 (let (($x2070 ((_ is stack ) ?x1692)))
 (let (($x2071 (= c______________ left-to-right)))
 (let (($x2072 (and $x2071 $x2070)))
 (let (($x2102 (ite $x2072 $x2079 (ite $x2069 $x2080 (ite $x2067 $x2080 (ite $x2064 $x2088 (ite $x2062 $x2085 $x2088)))))))
 (let (($x2073 (= c______________ left-to-center)))
 (let (($x2074 (and $x2073 $x2070)))
 (ite $x2074 $x2088 $x2102)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1830 (left s_______________)))
 (let ((?x1968 (left s________________)))
 (let (($x2228 (= ?x1968 ?x1830)))
 (let ((?x1864 (right s_______________)))
 (let ((?x2195 (top ?x1864)))
 (let ((?x2196 (stack ?x2195 ?x1830)))
 (let (($x2222 (= ?x1968 ?x2196)))
 (let (($x2198 ((_ is stack ) ?x1864)))
 (let (($x2201 (= c_______________ right-to-left)))
 (let (($x2202 (and $x2201 $x2198)))
 (let ((?x2050 (center s_______________)))
 (let (($x2203 ((_ is stack ) ?x2050)))
 (let (($x2204 (= c_______________ center-to-right)))
 (let (($x2205 (and $x2204 $x2203)))
 (let ((?x2191 (top ?x2050)))
 (let ((?x2192 (stack ?x2191 ?x1830)))
 (let (($x2219 (= ?x1968 ?x2192)))
 (let (($x2206 (= c_______________ center-to-left)))
 (let (($x2207 (and $x2206 $x2203)))
 (let ((?x2001 (rest ?x1830)))
 (let (($x2215 (= ?x1968 ?x2001)))
 (let (($x2208 ((_ is stack ) ?x1830)))
 (let (($x2209 (= c_______________ left-to-right)))
 (let (($x2210 (and $x2209 $x2208)))
 (let (($x2211 (= c_______________ left-to-center)))
 (let (($x2212 (and $x2211 $x2208)))
 (ite $x2212 $x2215 (ite $x2210 $x2215 (ite $x2207 $x2219 (ite $x2205 $x2228 (ite $x2202 $x2222 $x2228))))))))))))))))))))))))))))))))
(assert
 (let ((?x1864 (right s_______________)))
 (let ((?x2002 (right s________________)))
 (let (($x2224 (= ?x2002 ?x1864)))
 (let ((?x2194 (rest ?x1864)))
 (let (($x2221 (= ?x2002 ?x2194)))
 (let (($x2198 ((_ is stack ) ?x1864)))
 (let (($x2199 (= c_______________ right-to-center)))
 (let (($x2200 (and $x2199 $x2198)))
 (let (($x2201 (= c_______________ right-to-left)))
 (let (($x2202 (and $x2201 $x2198)))
 (let ((?x2050 (center s_______________)))
 (let ((?x2191 (top ?x2050)))
 (let ((?x2193 (stack ?x2191 ?x1864)))
 (let (($x2220 (= ?x2002 ?x2193)))
 (let (($x2203 ((_ is stack ) ?x2050)))
 (let (($x2204 (= c_______________ center-to-right)))
 (let (($x2205 (and $x2204 $x2203)))
 (let (($x2206 (= c_______________ center-to-left)))
 (let (($x2207 (and $x2206 $x2203)))
 (let ((?x1830 (left s_______________)))
 (let (($x2208 ((_ is stack ) ?x1830)))
 (let (($x2209 (= c_______________ left-to-right)))
 (let (($x2210 (and $x2209 $x2208)))
 (let (($x2241 (ite $x2210 $x2224 (ite $x2207 $x2224 (ite $x2205 $x2220 (ite $x2202 $x2221 (ite $x2200 $x2221 $x2224)))))))
 (let ((?x2048 (top ?x1830)))
 (let ((?x2187 (stack ?x2048 ?x1864)))
 (let (($x2216 (= ?x2002 ?x2187)))
 (let (($x2211 (= c_______________ left-to-center)))
 (let (($x2212 (and $x2211 $x2208)))
 (ite $x2212 $x2216 $x2241)))))))))))))))))))))))))))))))
(assert
 (let ((?x2050 (center s_______________)))
 (let ((?x2188 (center s________________)))
 (let (($x2226 (= ?x2188 ?x2050)))
 (let ((?x1864 (right s_______________)))
 (let ((?x2195 (top ?x1864)))
 (let ((?x2197 (stack ?x2195 ?x2050)))
 (let (($x2223 (= ?x2188 ?x2197)))
 (let (($x2198 ((_ is stack ) ?x1864)))
 (let (($x2199 (= c_______________ right-to-center)))
 (let (($x2200 (and $x2199 $x2198)))
 (let (($x2201 (= c_______________ right-to-left)))
 (let (($x2202 (and $x2201 $x2198)))
 (let ((?x2190 (rest ?x2050)))
 (let (($x2218 (= ?x2188 ?x2190)))
 (let (($x2203 ((_ is stack ) ?x2050)))
 (let (($x2204 (= c_______________ center-to-right)))
 (let (($x2205 (and $x2204 $x2203)))
 (let (($x2206 (= c_______________ center-to-left)))
 (let (($x2207 (and $x2206 $x2203)))
 (let ((?x1830 (left s_______________)))
 (let ((?x2048 (top ?x1830)))
 (let ((?x2189 (stack ?x2048 ?x2050)))
 (let (($x2217 (= ?x2188 ?x2189)))
 (let (($x2208 ((_ is stack ) ?x1830)))
 (let (($x2209 (= c_______________ left-to-right)))
 (let (($x2210 (and $x2209 $x2208)))
 (let (($x2240 (ite $x2210 $x2217 (ite $x2207 $x2218 (ite $x2205 $x2218 (ite $x2202 $x2226 (ite $x2200 $x2223 $x2226)))))))
 (let (($x2211 (= c_______________ left-to-center)))
 (let (($x2212 (and $x2211 $x2208)))
 (ite $x2212 $x2226 $x2240)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1968 (left s________________)))
 (let ((?x2106 (left s_________________)))
 (let (($x2366 (= ?x2106 ?x1968)))
 (let ((?x2002 (right s________________)))
 (let ((?x2333 (top ?x2002)))
 (let ((?x2334 (stack ?x2333 ?x1968)))
 (let (($x2360 (= ?x2106 ?x2334)))
 (let (($x2336 ((_ is stack ) ?x2002)))
 (let (($x2339 (= c________________ right-to-left)))
 (let (($x2340 (and $x2339 $x2336)))
 (let ((?x2188 (center s________________)))
 (let (($x2341 ((_ is stack ) ?x2188)))
 (let (($x2342 (= c________________ center-to-right)))
 (let (($x2343 (and $x2342 $x2341)))
 (let ((?x2329 (top ?x2188)))
 (let ((?x2330 (stack ?x2329 ?x1968)))
 (let (($x2357 (= ?x2106 ?x2330)))
 (let (($x2344 (= c________________ center-to-left)))
 (let (($x2345 (and $x2344 $x2341)))
 (let ((?x2139 (rest ?x1968)))
 (let (($x2353 (= ?x2106 ?x2139)))
 (let (($x2346 ((_ is stack ) ?x1968)))
 (let (($x2347 (= c________________ left-to-right)))
 (let (($x2348 (and $x2347 $x2346)))
 (let (($x2349 (= c________________ left-to-center)))
 (let (($x2350 (and $x2349 $x2346)))
 (ite $x2350 $x2353 (ite $x2348 $x2353 (ite $x2345 $x2357 (ite $x2343 $x2366 (ite $x2340 $x2360 $x2366))))))))))))))))))))))))))))))))
(assert
 (let ((?x2002 (right s________________)))
 (let ((?x2140 (right s_________________)))
 (let (($x2362 (= ?x2140 ?x2002)))
 (let ((?x2332 (rest ?x2002)))
 (let (($x2359 (= ?x2140 ?x2332)))
 (let (($x2336 ((_ is stack ) ?x2002)))
 (let (($x2337 (= c________________ right-to-center)))
 (let (($x2338 (and $x2337 $x2336)))
 (let (($x2339 (= c________________ right-to-left)))
 (let (($x2340 (and $x2339 $x2336)))
 (let ((?x2188 (center s________________)))
 (let ((?x2329 (top ?x2188)))
 (let ((?x2331 (stack ?x2329 ?x2002)))
 (let (($x2358 (= ?x2140 ?x2331)))
 (let (($x2341 ((_ is stack ) ?x2188)))
 (let (($x2342 (= c________________ center-to-right)))
 (let (($x2343 (and $x2342 $x2341)))
 (let (($x2344 (= c________________ center-to-left)))
 (let (($x2345 (and $x2344 $x2341)))
 (let ((?x1968 (left s________________)))
 (let (($x2346 ((_ is stack ) ?x1968)))
 (let (($x2347 (= c________________ left-to-right)))
 (let (($x2348 (and $x2347 $x2346)))
 (let (($x2379 (ite $x2348 $x2362 (ite $x2345 $x2362 (ite $x2343 $x2358 (ite $x2340 $x2359 (ite $x2338 $x2359 $x2362)))))))
 (let ((?x2186 (top ?x1968)))
 (let ((?x2325 (stack ?x2186 ?x2002)))
 (let (($x2354 (= ?x2140 ?x2325)))
 (let (($x2349 (= c________________ left-to-center)))
 (let (($x2350 (and $x2349 $x2346)))
 (ite $x2350 $x2354 $x2379)))))))))))))))))))))))))))))))
(assert
 (let ((?x2188 (center s________________)))
 (let ((?x2326 (center s_________________)))
 (let (($x2364 (= ?x2326 ?x2188)))
 (let ((?x2002 (right s________________)))
 (let ((?x2333 (top ?x2002)))
 (let ((?x2335 (stack ?x2333 ?x2188)))
 (let (($x2361 (= ?x2326 ?x2335)))
 (let (($x2336 ((_ is stack ) ?x2002)))
 (let (($x2337 (= c________________ right-to-center)))
 (let (($x2338 (and $x2337 $x2336)))
 (let (($x2339 (= c________________ right-to-left)))
 (let (($x2340 (and $x2339 $x2336)))
 (let ((?x2328 (rest ?x2188)))
 (let (($x2356 (= ?x2326 ?x2328)))
 (let (($x2341 ((_ is stack ) ?x2188)))
 (let (($x2342 (= c________________ center-to-right)))
 (let (($x2343 (and $x2342 $x2341)))
 (let (($x2344 (= c________________ center-to-left)))
 (let (($x2345 (and $x2344 $x2341)))
 (let ((?x1968 (left s________________)))
 (let ((?x2186 (top ?x1968)))
 (let ((?x2327 (stack ?x2186 ?x2188)))
 (let (($x2355 (= ?x2326 ?x2327)))
 (let (($x2346 ((_ is stack ) ?x1968)))
 (let (($x2347 (= c________________ left-to-right)))
 (let (($x2348 (and $x2347 $x2346)))
 (let (($x2378 (ite $x2348 $x2355 (ite $x2345 $x2356 (ite $x2343 $x2356 (ite $x2340 $x2364 (ite $x2338 $x2361 $x2364)))))))
 (let (($x2349 (= c________________ left-to-center)))
 (let (($x2350 (and $x2349 $x2346)))
 (ite $x2350 $x2364 $x2378)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2106 (left s_________________)))
 (let ((?x2244 (left s__________________)))
 (let (($x2504 (= ?x2244 ?x2106)))
 (let ((?x2140 (right s_________________)))
 (let ((?x2471 (top ?x2140)))
 (let ((?x2472 (stack ?x2471 ?x2106)))
 (let (($x2498 (= ?x2244 ?x2472)))
 (let (($x2474 ((_ is stack ) ?x2140)))
 (let (($x2477 (= c_________________ right-to-left)))
 (let (($x2478 (and $x2477 $x2474)))
 (let ((?x2326 (center s_________________)))
 (let (($x2479 ((_ is stack ) ?x2326)))
 (let (($x2480 (= c_________________ center-to-right)))
 (let (($x2481 (and $x2480 $x2479)))
 (let ((?x2467 (top ?x2326)))
 (let ((?x2468 (stack ?x2467 ?x2106)))
 (let (($x2495 (= ?x2244 ?x2468)))
 (let (($x2482 (= c_________________ center-to-left)))
 (let (($x2483 (and $x2482 $x2479)))
 (let ((?x2277 (rest ?x2106)))
 (let (($x2491 (= ?x2244 ?x2277)))
 (let (($x2484 ((_ is stack ) ?x2106)))
 (let (($x2485 (= c_________________ left-to-right)))
 (let (($x2486 (and $x2485 $x2484)))
 (let (($x2487 (= c_________________ left-to-center)))
 (let (($x2488 (and $x2487 $x2484)))
 (ite $x2488 $x2491 (ite $x2486 $x2491 (ite $x2483 $x2495 (ite $x2481 $x2504 (ite $x2478 $x2498 $x2504))))))))))))))))))))))))))))))))
(assert
 (let ((?x2140 (right s_________________)))
 (let ((?x2278 (right s__________________)))
 (let (($x2500 (= ?x2278 ?x2140)))
 (let ((?x2470 (rest ?x2140)))
 (let (($x2497 (= ?x2278 ?x2470)))
 (let (($x2474 ((_ is stack ) ?x2140)))
 (let (($x2475 (= c_________________ right-to-center)))
 (let (($x2476 (and $x2475 $x2474)))
 (let (($x2477 (= c_________________ right-to-left)))
 (let (($x2478 (and $x2477 $x2474)))
 (let ((?x2326 (center s_________________)))
 (let ((?x2467 (top ?x2326)))
 (let ((?x2469 (stack ?x2467 ?x2140)))
 (let (($x2496 (= ?x2278 ?x2469)))
 (let (($x2479 ((_ is stack ) ?x2326)))
 (let (($x2480 (= c_________________ center-to-right)))
 (let (($x2481 (and $x2480 $x2479)))
 (let (($x2482 (= c_________________ center-to-left)))
 (let (($x2483 (and $x2482 $x2479)))
 (let ((?x2106 (left s_________________)))
 (let (($x2484 ((_ is stack ) ?x2106)))
 (let (($x2485 (= c_________________ left-to-right)))
 (let (($x2486 (and $x2485 $x2484)))
 (let (($x2517 (ite $x2486 $x2500 (ite $x2483 $x2500 (ite $x2481 $x2496 (ite $x2478 $x2497 (ite $x2476 $x2497 $x2500)))))))
 (let ((?x2324 (top ?x2106)))
 (let ((?x2463 (stack ?x2324 ?x2140)))
 (let (($x2492 (= ?x2278 ?x2463)))
 (let (($x2487 (= c_________________ left-to-center)))
 (let (($x2488 (and $x2487 $x2484)))
 (ite $x2488 $x2492 $x2517)))))))))))))))))))))))))))))))
(assert
 (let ((?x2326 (center s_________________)))
 (let ((?x2464 (center s__________________)))
 (let (($x2502 (= ?x2464 ?x2326)))
 (let ((?x2140 (right s_________________)))
 (let ((?x2471 (top ?x2140)))
 (let ((?x2473 (stack ?x2471 ?x2326)))
 (let (($x2499 (= ?x2464 ?x2473)))
 (let (($x2474 ((_ is stack ) ?x2140)))
 (let (($x2475 (= c_________________ right-to-center)))
 (let (($x2476 (and $x2475 $x2474)))
 (let (($x2477 (= c_________________ right-to-left)))
 (let (($x2478 (and $x2477 $x2474)))
 (let ((?x2466 (rest ?x2326)))
 (let (($x2494 (= ?x2464 ?x2466)))
 (let (($x2479 ((_ is stack ) ?x2326)))
 (let (($x2480 (= c_________________ center-to-right)))
 (let (($x2481 (and $x2480 $x2479)))
 (let (($x2482 (= c_________________ center-to-left)))
 (let (($x2483 (and $x2482 $x2479)))
 (let ((?x2106 (left s_________________)))
 (let ((?x2324 (top ?x2106)))
 (let ((?x2465 (stack ?x2324 ?x2326)))
 (let (($x2493 (= ?x2464 ?x2465)))
 (let (($x2484 ((_ is stack ) ?x2106)))
 (let (($x2485 (= c_________________ left-to-right)))
 (let (($x2486 (and $x2485 $x2484)))
 (let (($x2516 (ite $x2486 $x2493 (ite $x2483 $x2494 (ite $x2481 $x2494 (ite $x2478 $x2502 (ite $x2476 $x2499 $x2502)))))))
 (let (($x2487 (= c_________________ left-to-center)))
 (let (($x2488 (and $x2487 $x2484)))
 (ite $x2488 $x2502 $x2516)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2244 (left s__________________)))
 (let ((?x2382 (left s___________________)))
 (let (($x2642 (= ?x2382 ?x2244)))
 (let ((?x2278 (right s__________________)))
 (let ((?x2609 (top ?x2278)))
 (let ((?x2610 (stack ?x2609 ?x2244)))
 (let (($x2636 (= ?x2382 ?x2610)))
 (let (($x2612 ((_ is stack ) ?x2278)))
 (let (($x2615 (= c__________________ right-to-left)))
 (let (($x2616 (and $x2615 $x2612)))
 (let ((?x2464 (center s__________________)))
 (let (($x2617 ((_ is stack ) ?x2464)))
 (let (($x2618 (= c__________________ center-to-right)))
 (let (($x2619 (and $x2618 $x2617)))
 (let ((?x2605 (top ?x2464)))
 (let ((?x2606 (stack ?x2605 ?x2244)))
 (let (($x2633 (= ?x2382 ?x2606)))
 (let (($x2620 (= c__________________ center-to-left)))
 (let (($x2621 (and $x2620 $x2617)))
 (let ((?x2415 (rest ?x2244)))
 (let (($x2629 (= ?x2382 ?x2415)))
 (let (($x2622 ((_ is stack ) ?x2244)))
 (let (($x2623 (= c__________________ left-to-right)))
 (let (($x2624 (and $x2623 $x2622)))
 (let (($x2625 (= c__________________ left-to-center)))
 (let (($x2626 (and $x2625 $x2622)))
 (ite $x2626 $x2629 (ite $x2624 $x2629 (ite $x2621 $x2633 (ite $x2619 $x2642 (ite $x2616 $x2636 $x2642))))))))))))))))))))))))))))))))
(assert
 (let ((?x2278 (right s__________________)))
 (let ((?x2416 (right s___________________)))
 (let (($x2638 (= ?x2416 ?x2278)))
 (let ((?x2608 (rest ?x2278)))
 (let (($x2635 (= ?x2416 ?x2608)))
 (let (($x2612 ((_ is stack ) ?x2278)))
 (let (($x2613 (= c__________________ right-to-center)))
 (let (($x2614 (and $x2613 $x2612)))
 (let (($x2615 (= c__________________ right-to-left)))
 (let (($x2616 (and $x2615 $x2612)))
 (let ((?x2464 (center s__________________)))
 (let ((?x2605 (top ?x2464)))
 (let ((?x2607 (stack ?x2605 ?x2278)))
 (let (($x2634 (= ?x2416 ?x2607)))
 (let (($x2617 ((_ is stack ) ?x2464)))
 (let (($x2618 (= c__________________ center-to-right)))
 (let (($x2619 (and $x2618 $x2617)))
 (let (($x2620 (= c__________________ center-to-left)))
 (let (($x2621 (and $x2620 $x2617)))
 (let ((?x2244 (left s__________________)))
 (let (($x2622 ((_ is stack ) ?x2244)))
 (let (($x2623 (= c__________________ left-to-right)))
 (let (($x2624 (and $x2623 $x2622)))
 (let (($x2655 (ite $x2624 $x2638 (ite $x2621 $x2638 (ite $x2619 $x2634 (ite $x2616 $x2635 (ite $x2614 $x2635 $x2638)))))))
 (let ((?x2462 (top ?x2244)))
 (let ((?x2601 (stack ?x2462 ?x2278)))
 (let (($x2630 (= ?x2416 ?x2601)))
 (let (($x2625 (= c__________________ left-to-center)))
 (let (($x2626 (and $x2625 $x2622)))
 (ite $x2626 $x2630 $x2655)))))))))))))))))))))))))))))))
(assert
 (let ((?x2464 (center s__________________)))
 (let ((?x2602 (center s___________________)))
 (let (($x2640 (= ?x2602 ?x2464)))
 (let ((?x2278 (right s__________________)))
 (let ((?x2609 (top ?x2278)))
 (let ((?x2611 (stack ?x2609 ?x2464)))
 (let (($x2637 (= ?x2602 ?x2611)))
 (let (($x2612 ((_ is stack ) ?x2278)))
 (let (($x2613 (= c__________________ right-to-center)))
 (let (($x2614 (and $x2613 $x2612)))
 (let (($x2615 (= c__________________ right-to-left)))
 (let (($x2616 (and $x2615 $x2612)))
 (let ((?x2604 (rest ?x2464)))
 (let (($x2632 (= ?x2602 ?x2604)))
 (let (($x2617 ((_ is stack ) ?x2464)))
 (let (($x2618 (= c__________________ center-to-right)))
 (let (($x2619 (and $x2618 $x2617)))
 (let (($x2620 (= c__________________ center-to-left)))
 (let (($x2621 (and $x2620 $x2617)))
 (let ((?x2244 (left s__________________)))
 (let ((?x2462 (top ?x2244)))
 (let ((?x2603 (stack ?x2462 ?x2464)))
 (let (($x2631 (= ?x2602 ?x2603)))
 (let (($x2622 ((_ is stack ) ?x2244)))
 (let (($x2623 (= c__________________ left-to-right)))
 (let (($x2624 (and $x2623 $x2622)))
 (let (($x2654 (ite $x2624 $x2631 (ite $x2621 $x2632 (ite $x2619 $x2632 (ite $x2616 $x2640 (ite $x2614 $x2637 $x2640)))))))
 (let (($x2625 (= c__________________ left-to-center)))
 (let (($x2626 (and $x2625 $x2622)))
 (ite $x2626 $x2640 $x2654)))))))))))))))))))))))))))))))
(assert
 (= c____________________ c!19))
(assert
 (let ((?x2382 (left s___________________)))
 (let ((?x2520 (left s____________________)))
 (let (($x2780 (= ?x2520 ?x2382)))
 (let ((?x2416 (right s___________________)))
 (let ((?x2747 (top ?x2416)))
 (let ((?x2748 (stack ?x2747 ?x2382)))
 (let (($x2774 (= ?x2520 ?x2748)))
 (let (($x2750 ((_ is stack ) ?x2416)))
 (let (($x2753 (= c___________________ right-to-left)))
 (let (($x2754 (and $x2753 $x2750)))
 (let ((?x2602 (center s___________________)))
 (let (($x2755 ((_ is stack ) ?x2602)))
 (let (($x2756 (= c___________________ center-to-right)))
 (let (($x2757 (and $x2756 $x2755)))
 (let ((?x2743 (top ?x2602)))
 (let ((?x2744 (stack ?x2743 ?x2382)))
 (let (($x2771 (= ?x2520 ?x2744)))
 (let (($x2758 (= c___________________ center-to-left)))
 (let (($x2759 (and $x2758 $x2755)))
 (let ((?x2553 (rest ?x2382)))
 (let (($x2767 (= ?x2520 ?x2553)))
 (let (($x2760 ((_ is stack ) ?x2382)))
 (let (($x2761 (= c___________________ left-to-right)))
 (let (($x2762 (and $x2761 $x2760)))
 (let (($x2763 (= c___________________ left-to-center)))
 (let (($x2764 (and $x2763 $x2760)))
 (ite $x2764 $x2767 (ite $x2762 $x2767 (ite $x2759 $x2771 (ite $x2757 $x2780 (ite $x2754 $x2774 $x2780))))))))))))))))))))))))))))))))
(assert
 (let ((?x2416 (right s___________________)))
 (let ((?x2554 (right s____________________)))
 (let (($x2776 (= ?x2554 ?x2416)))
 (let ((?x2746 (rest ?x2416)))
 (let (($x2773 (= ?x2554 ?x2746)))
 (let (($x2750 ((_ is stack ) ?x2416)))
 (let (($x2751 (= c___________________ right-to-center)))
 (let (($x2752 (and $x2751 $x2750)))
 (let (($x2753 (= c___________________ right-to-left)))
 (let (($x2754 (and $x2753 $x2750)))
 (let ((?x2602 (center s___________________)))
 (let ((?x2743 (top ?x2602)))
 (let ((?x2745 (stack ?x2743 ?x2416)))
 (let (($x2772 (= ?x2554 ?x2745)))
 (let (($x2755 ((_ is stack ) ?x2602)))
 (let (($x2756 (= c___________________ center-to-right)))
 (let (($x2757 (and $x2756 $x2755)))
 (let (($x2758 (= c___________________ center-to-left)))
 (let (($x2759 (and $x2758 $x2755)))
 (let ((?x2382 (left s___________________)))
 (let (($x2760 ((_ is stack ) ?x2382)))
 (let (($x2761 (= c___________________ left-to-right)))
 (let (($x2762 (and $x2761 $x2760)))
 (let (($x2793 (ite $x2762 $x2776 (ite $x2759 $x2776 (ite $x2757 $x2772 (ite $x2754 $x2773 (ite $x2752 $x2773 $x2776)))))))
 (let ((?x2600 (top ?x2382)))
 (let ((?x2739 (stack ?x2600 ?x2416)))
 (let (($x2768 (= ?x2554 ?x2739)))
 (let (($x2763 (= c___________________ left-to-center)))
 (let (($x2764 (and $x2763 $x2760)))
 (ite $x2764 $x2768 $x2793)))))))))))))))))))))))))))))))
(assert
 (let ((?x2602 (center s___________________)))
 (let ((?x2740 (center s____________________)))
 (let (($x2778 (= ?x2740 ?x2602)))
 (let ((?x2416 (right s___________________)))
 (let ((?x2747 (top ?x2416)))
 (let ((?x2749 (stack ?x2747 ?x2602)))
 (let (($x2775 (= ?x2740 ?x2749)))
 (let (($x2750 ((_ is stack ) ?x2416)))
 (let (($x2751 (= c___________________ right-to-center)))
 (let (($x2752 (and $x2751 $x2750)))
 (let (($x2753 (= c___________________ right-to-left)))
 (let (($x2754 (and $x2753 $x2750)))
 (let ((?x2742 (rest ?x2602)))
 (let (($x2770 (= ?x2740 ?x2742)))
 (let (($x2755 ((_ is stack ) ?x2602)))
 (let (($x2756 (= c___________________ center-to-right)))
 (let (($x2757 (and $x2756 $x2755)))
 (let (($x2758 (= c___________________ center-to-left)))
 (let (($x2759 (and $x2758 $x2755)))
 (let ((?x2382 (left s___________________)))
 (let ((?x2600 (top ?x2382)))
 (let ((?x2741 (stack ?x2600 ?x2602)))
 (let (($x2769 (= ?x2740 ?x2741)))
 (let (($x2760 ((_ is stack ) ?x2382)))
 (let (($x2761 (= c___________________ left-to-right)))
 (let (($x2762 (and $x2761 $x2760)))
 (let (($x2792 (ite $x2762 $x2769 (ite $x2759 $x2770 (ite $x2757 $x2770 (ite $x2754 $x2778 (ite $x2752 $x2775 $x2778)))))))
 (let (($x2763 (= c___________________ left-to-center)))
 (let (($x2764 (and $x2763 $x2760)))
 (ite $x2764 $x2778 $x2792)))))))))))))))))))))))))))))))
(assert
 (let ((?x68 (stack L empty)))
 (let ((?x2554 (right s____________________)))
 (let (($x2796 (= ?x2554 ?x68)))
 (let ((?x67 (stack G (stack N (stack D (stack E (stack J (stack I empty))))))))
 (let ((?x2740 (center s____________________)))
 (let (($x2827 (= ?x2740 ?x67)))
 (let ((?x55 (stack K (stack R (stack B (stack F (stack H (stack P empty))))))))
 (let ((?x61 (stack C (stack Q (stack M (stack O (stack A (stack S ?x55))))))))
 (let ((?x2520 (left s____________________)))
 (let (($x2828 (= ?x2520 ?x61)))
 (let (($x2830 (not (and $x2828 $x2827 $x2796))))
 (not $x2830)))))))))))))
(check-sat)
(exit)
