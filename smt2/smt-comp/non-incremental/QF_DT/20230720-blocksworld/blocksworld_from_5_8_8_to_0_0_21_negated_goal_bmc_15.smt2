(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x33 (stack B empty)))
 (let ((?x34 (stack F ?x33)))
 (let ((?x35 (stack J ?x34)))
 (let ((?x36 (stack H ?x35)))
 (let ((?x37 (stack T ?x36)))
 (let ((?x121 (left s_tmp_)))
 (= ?x121 ?x37))))))))
(assert
 (let ((?x38 (stack Q empty)))
 (let ((?x39 (stack N ?x38)))
 (let ((?x40 (stack E ?x39)))
 (let ((?x41 (stack G ?x40)))
 (let ((?x42 (stack A ?x41)))
 (let ((?x43 (stack R ?x42)))
 (let ((?x44 (stack L ?x43)))
 (let ((?x45 (stack C ?x44)))
 (let ((?x124 (center s_tmp__)))
 (= ?x124 ?x45)))))))))))
(assert
 (let ((?x46 (stack D empty)))
 (let ((?x47 (stack I ?x46)))
 (let ((?x48 (stack K ?x47)))
 (let ((?x49 (stack M ?x48)))
 (let ((?x50 (stack O ?x49)))
 (let ((?x51 (stack P ?x50)))
 (let ((?x52 (stack S ?x51)))
 (let ((?x53 (stack U ?x52)))
 (let ((?x127 (right s_tmp___)))
 (= ?x127 ?x53)))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x154 (left s_tmp__)))
 (= (left s_tmp___) ?x154)))
(assert
 (let ((?x124 (center s_tmp__)))
 (= (center s_tmp___) ?x124)))
(assert
 (let ((?x158 (center s_tmp_)))
 (= ?x158 (center s_tmp))))
(assert
 (let ((?x161 (right s_tmp_)))
 (= ?x161 (right s_tmp))))
(assert
 (let ((?x121 (left s_tmp_)))
 (let ((?x154 (left s_tmp__)))
 (= ?x154 ?x121))))
(assert
 (let ((?x161 (right s_tmp_)))
 (let ((?x165 (right s_tmp__)))
 (= ?x165 ?x161))))
(assert
 (= c__ c!1))
(assert
 (let ((?x98 (left s_)))
 (let ((?x293 (left s__)))
 (let (($x317 (= ?x293 ?x98)))
 (let ((?x101 (right s_)))
 (let (($x275 ((_ is stack ) ?x101)))
 (let (($x287 (= c_ right-to-left)))
 (let (($x270 (and $x287 $x275)))
 (let ((?x103 (center s_)))
 (let (($x271 ((_ is stack ) ?x103)))
 (let (($x272 (= c_ center-to-right)))
 (let (($x294 (and $x272 $x271)))
 (let (($x295 (= c_ center-to-left)))
 (let (($x296 (and $x295 $x271)))
 (let (($x326 (ite $x296 (= ?x293 (stack (top ?x103) ?x98)) (ite $x294 $x317 (ite $x270 (= ?x293 (stack (top ?x101) ?x98)) $x317)))))
 (let (($x304 (= ?x293 (rest ?x98))))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 $x304 (ite $x299 $x304 $x326)))))))))))))))))))))))
(assert
 (let ((?x101 (right s_)))
 (let ((?x289 (right s__)))
 (let (($x313 (= ?x289 ?x101)))
 (let (($x310 (= ?x289 (rest ?x101))))
 (let (($x275 ((_ is stack ) ?x101)))
 (let (($x285 (= c_ right-to-center)))
 (let (($x286 (and $x285 $x275)))
 (let (($x287 (= c_ right-to-left)))
 (let (($x270 (and $x287 $x275)))
 (let ((?x103 (center s_)))
 (let (($x271 ((_ is stack ) ?x103)))
 (let (($x272 (= c_ center-to-right)))
 (let (($x294 (and $x272 $x271)))
 (let (($x323 (ite $x294 (= ?x289 (stack (top ?x103) ?x101)) (ite $x270 $x310 (ite $x286 $x310 $x313)))))
 (let (($x295 (= c_ center-to-left)))
 (let (($x296 (and $x295 $x271)))
 (let ((?x98 (left s_)))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 (= ?x289 (stack (top ?x98) ?x101)) (ite $x299 $x313 (ite $x296 $x313 $x323))))))))))))))))))))))))))
(assert
 (let ((?x103 (center s_)))
 (let ((?x277 (center s__)))
 (let (($x315 (= ?x277 ?x103)))
 (let ((?x101 (right s_)))
 (let (($x275 ((_ is stack ) ?x101)))
 (let (($x285 (= c_ right-to-center)))
 (let (($x286 (and $x285 $x275)))
 (let (($x287 (= c_ right-to-left)))
 (let (($x270 (and $x287 $x275)))
 (let (($x307 (= ?x277 (rest ?x103))))
 (let (($x271 ((_ is stack ) ?x103)))
 (let (($x272 (= c_ center-to-right)))
 (let (($x294 (and $x272 $x271)))
 (let (($x322 (ite $x294 $x307 (ite $x270 $x315 (ite $x286 (= ?x277 (stack (top ?x101) ?x103)) $x315)))))
 (let (($x295 (= c_ center-to-left)))
 (let (($x296 (and $x295 $x271)))
 (let ((?x98 (left s_)))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 $x315 (ite $x299 (= ?x277 (stack (top ?x98) ?x103)) (ite $x296 $x307 $x322))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x293 (left s__)))
 (let ((?x168 (left s___)))
 (let (($x446 (= ?x168 ?x293)))
 (let ((?x289 (right s__)))
 (let ((?x413 (top ?x289)))
 (let ((?x414 (stack ?x413 ?x293)))
 (let (($x440 (= ?x168 ?x414)))
 (let (($x416 ((_ is stack ) ?x289)))
 (let (($x419 (= c__ right-to-left)))
 (let (($x420 (and $x419 $x416)))
 (let ((?x277 (center s__)))
 (let (($x421 ((_ is stack ) ?x277)))
 (let (($x422 (= c__ center-to-right)))
 (let (($x423 (and $x422 $x421)))
 (let ((?x409 (top ?x277)))
 (let ((?x410 (stack ?x409 ?x293)))
 (let (($x437 (= ?x168 ?x410)))
 (let (($x424 (= c__ center-to-left)))
 (let (($x425 (and $x424 $x421)))
 (let ((?x170 (rest ?x293)))
 (let (($x433 (= ?x168 ?x170)))
 (let (($x426 ((_ is stack ) ?x293)))
 (let (($x427 (= c__ left-to-right)))
 (let (($x428 (and $x427 $x426)))
 (let (($x429 (= c__ left-to-center)))
 (let (($x430 (and $x429 $x426)))
 (ite $x430 $x433 (ite $x428 $x433 (ite $x425 $x437 (ite $x423 $x446 (ite $x420 $x440 $x446))))))))))))))))))))))))))))))))
(assert
 (let ((?x289 (right s__)))
 (let ((?x171 (right s___)))
 (let (($x442 (= ?x171 ?x289)))
 (let ((?x412 (rest ?x289)))
 (let (($x439 (= ?x171 ?x412)))
 (let (($x416 ((_ is stack ) ?x289)))
 (let (($x417 (= c__ right-to-center)))
 (let (($x418 (and $x417 $x416)))
 (let (($x419 (= c__ right-to-left)))
 (let (($x420 (and $x419 $x416)))
 (let ((?x277 (center s__)))
 (let ((?x409 (top ?x277)))
 (let ((?x411 (stack ?x409 ?x289)))
 (let (($x438 (= ?x171 ?x411)))
 (let (($x421 ((_ is stack ) ?x277)))
 (let (($x422 (= c__ center-to-right)))
 (let (($x423 (and $x422 $x421)))
 (let (($x424 (= c__ center-to-left)))
 (let (($x425 (and $x424 $x421)))
 (let ((?x293 (left s__)))
 (let (($x426 ((_ is stack ) ?x293)))
 (let (($x427 (= c__ left-to-right)))
 (let (($x428 (and $x427 $x426)))
 (let (($x459 (ite $x428 $x442 (ite $x425 $x442 (ite $x423 $x438 (ite $x420 $x439 (ite $x418 $x439 $x442)))))))
 (let ((?x269 (top ?x293)))
 (let ((?x405 (stack ?x269 ?x289)))
 (let (($x434 (= ?x171 ?x405)))
 (let (($x429 (= c__ left-to-center)))
 (let (($x430 (and $x429 $x426)))
 (ite $x430 $x434 $x459)))))))))))))))))))))))))))))))
(assert
 (let ((?x277 (center s__)))
 (let ((?x406 (center s___)))
 (let (($x444 (= ?x406 ?x277)))
 (let ((?x289 (right s__)))
 (let ((?x413 (top ?x289)))
 (let ((?x415 (stack ?x413 ?x277)))
 (let (($x441 (= ?x406 ?x415)))
 (let (($x416 ((_ is stack ) ?x289)))
 (let (($x417 (= c__ right-to-center)))
 (let (($x418 (and $x417 $x416)))
 (let (($x419 (= c__ right-to-left)))
 (let (($x420 (and $x419 $x416)))
 (let ((?x408 (rest ?x277)))
 (let (($x436 (= ?x406 ?x408)))
 (let (($x421 ((_ is stack ) ?x277)))
 (let (($x422 (= c__ center-to-right)))
 (let (($x423 (and $x422 $x421)))
 (let (($x424 (= c__ center-to-left)))
 (let (($x425 (and $x424 $x421)))
 (let ((?x293 (left s__)))
 (let ((?x269 (top ?x293)))
 (let ((?x407 (stack ?x269 ?x277)))
 (let (($x435 (= ?x406 ?x407)))
 (let (($x426 ((_ is stack ) ?x293)))
 (let (($x427 (= c__ left-to-right)))
 (let (($x428 (and $x427 $x426)))
 (let (($x458 (ite $x428 $x435 (ite $x425 $x436 (ite $x423 $x436 (ite $x420 $x444 (ite $x418 $x441 $x444)))))))
 (let (($x429 (= c__ left-to-center)))
 (let (($x430 (and $x429 $x426)))
 (ite $x430 $x444 $x458)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x168 (left s___)))
 (let ((?x333 (left s____)))
 (let (($x584 (= ?x333 ?x168)))
 (let ((?x171 (right s___)))
 (let ((?x551 (top ?x171)))
 (let ((?x552 (stack ?x551 ?x168)))
 (let (($x578 (= ?x333 ?x552)))
 (let (($x554 ((_ is stack ) ?x171)))
 (let (($x557 (= c___ right-to-left)))
 (let (($x558 (and $x557 $x554)))
 (let ((?x406 (center s___)))
 (let (($x559 ((_ is stack ) ?x406)))
 (let (($x560 (= c___ center-to-right)))
 (let (($x561 (and $x560 $x559)))
 (let ((?x547 (top ?x406)))
 (let ((?x548 (stack ?x547 ?x168)))
 (let (($x575 (= ?x333 ?x548)))
 (let (($x562 (= c___ center-to-left)))
 (let (($x563 (and $x562 $x559)))
 (let ((?x377 (rest ?x168)))
 (let (($x571 (= ?x333 ?x377)))
 (let (($x564 ((_ is stack ) ?x168)))
 (let (($x565 (= c___ left-to-right)))
 (let (($x566 (and $x565 $x564)))
 (let (($x567 (= c___ left-to-center)))
 (let (($x568 (and $x567 $x564)))
 (ite $x568 $x571 (ite $x566 $x571 (ite $x563 $x575 (ite $x561 $x584 (ite $x558 $x578 $x584))))))))))))))))))))))))))))))))
(assert
 (let ((?x171 (right s___)))
 (let ((?x378 (right s____)))
 (let (($x580 (= ?x378 ?x171)))
 (let ((?x550 (rest ?x171)))
 (let (($x577 (= ?x378 ?x550)))
 (let (($x554 ((_ is stack ) ?x171)))
 (let (($x555 (= c___ right-to-center)))
 (let (($x556 (and $x555 $x554)))
 (let (($x557 (= c___ right-to-left)))
 (let (($x558 (and $x557 $x554)))
 (let ((?x406 (center s___)))
 (let ((?x547 (top ?x406)))
 (let ((?x549 (stack ?x547 ?x171)))
 (let (($x576 (= ?x378 ?x549)))
 (let (($x559 ((_ is stack ) ?x406)))
 (let (($x560 (= c___ center-to-right)))
 (let (($x561 (and $x560 $x559)))
 (let (($x562 (= c___ center-to-left)))
 (let (($x563 (and $x562 $x559)))
 (let ((?x168 (left s___)))
 (let (($x564 ((_ is stack ) ?x168)))
 (let (($x565 (= c___ left-to-right)))
 (let (($x566 (and $x565 $x564)))
 (let (($x597 (ite $x566 $x580 (ite $x563 $x580 (ite $x561 $x576 (ite $x558 $x577 (ite $x556 $x577 $x580)))))))
 (let ((?x404 (top ?x168)))
 (let ((?x543 (stack ?x404 ?x171)))
 (let (($x572 (= ?x378 ?x543)))
 (let (($x567 (= c___ left-to-center)))
 (let (($x568 (and $x567 $x564)))
 (ite $x568 $x572 $x597)))))))))))))))))))))))))))))))
(assert
 (let ((?x406 (center s___)))
 (let ((?x544 (center s____)))
 (let (($x582 (= ?x544 ?x406)))
 (let ((?x171 (right s___)))
 (let ((?x551 (top ?x171)))
 (let ((?x553 (stack ?x551 ?x406)))
 (let (($x579 (= ?x544 ?x553)))
 (let (($x554 ((_ is stack ) ?x171)))
 (let (($x555 (= c___ right-to-center)))
 (let (($x556 (and $x555 $x554)))
 (let (($x557 (= c___ right-to-left)))
 (let (($x558 (and $x557 $x554)))
 (let ((?x546 (rest ?x406)))
 (let (($x574 (= ?x544 ?x546)))
 (let (($x559 ((_ is stack ) ?x406)))
 (let (($x560 (= c___ center-to-right)))
 (let (($x561 (and $x560 $x559)))
 (let (($x562 (= c___ center-to-left)))
 (let (($x563 (and $x562 $x559)))
 (let ((?x168 (left s___)))
 (let ((?x404 (top ?x168)))
 (let ((?x545 (stack ?x404 ?x406)))
 (let (($x573 (= ?x544 ?x545)))
 (let (($x564 ((_ is stack ) ?x168)))
 (let (($x565 (= c___ left-to-right)))
 (let (($x566 (and $x565 $x564)))
 (let (($x596 (ite $x566 $x573 (ite $x563 $x574 (ite $x561 $x574 (ite $x558 $x582 (ite $x556 $x579 $x582)))))))
 (let (($x567 (= c___ left-to-center)))
 (let (($x568 (and $x567 $x564)))
 (ite $x568 $x582 $x596)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x333 (left s____)))
 (let ((?x462 (left s_____)))
 (let (($x722 (= ?x462 ?x333)))
 (let ((?x378 (right s____)))
 (let ((?x689 (top ?x378)))
 (let ((?x690 (stack ?x689 ?x333)))
 (let (($x716 (= ?x462 ?x690)))
 (let (($x692 ((_ is stack ) ?x378)))
 (let (($x695 (= c____ right-to-left)))
 (let (($x696 (and $x695 $x692)))
 (let ((?x544 (center s____)))
 (let (($x697 ((_ is stack ) ?x544)))
 (let (($x698 (= c____ center-to-right)))
 (let (($x699 (and $x698 $x697)))
 (let ((?x685 (top ?x544)))
 (let ((?x686 (stack ?x685 ?x333)))
 (let (($x713 (= ?x462 ?x686)))
 (let (($x700 (= c____ center-to-left)))
 (let (($x701 (and $x700 $x697)))
 (let ((?x495 (rest ?x333)))
 (let (($x709 (= ?x462 ?x495)))
 (let (($x702 ((_ is stack ) ?x333)))
 (let (($x703 (= c____ left-to-right)))
 (let (($x704 (and $x703 $x702)))
 (let (($x705 (= c____ left-to-center)))
 (let (($x706 (and $x705 $x702)))
 (ite $x706 $x709 (ite $x704 $x709 (ite $x701 $x713 (ite $x699 $x722 (ite $x696 $x716 $x722))))))))))))))))))))))))))))))))
(assert
 (let ((?x378 (right s____)))
 (let ((?x496 (right s_____)))
 (let (($x718 (= ?x496 ?x378)))
 (let ((?x688 (rest ?x378)))
 (let (($x715 (= ?x496 ?x688)))
 (let (($x692 ((_ is stack ) ?x378)))
 (let (($x693 (= c____ right-to-center)))
 (let (($x694 (and $x693 $x692)))
 (let (($x695 (= c____ right-to-left)))
 (let (($x696 (and $x695 $x692)))
 (let ((?x544 (center s____)))
 (let ((?x685 (top ?x544)))
 (let ((?x687 (stack ?x685 ?x378)))
 (let (($x714 (= ?x496 ?x687)))
 (let (($x697 ((_ is stack ) ?x544)))
 (let (($x698 (= c____ center-to-right)))
 (let (($x699 (and $x698 $x697)))
 (let (($x700 (= c____ center-to-left)))
 (let (($x701 (and $x700 $x697)))
 (let ((?x333 (left s____)))
 (let (($x702 ((_ is stack ) ?x333)))
 (let (($x703 (= c____ left-to-right)))
 (let (($x704 (and $x703 $x702)))
 (let (($x735 (ite $x704 $x718 (ite $x701 $x718 (ite $x699 $x714 (ite $x696 $x715 (ite $x694 $x715 $x718)))))))
 (let ((?x542 (top ?x333)))
 (let ((?x681 (stack ?x542 ?x378)))
 (let (($x710 (= ?x496 ?x681)))
 (let (($x705 (= c____ left-to-center)))
 (let (($x706 (and $x705 $x702)))
 (ite $x706 $x710 $x735)))))))))))))))))))))))))))))))
(assert
 (let ((?x544 (center s____)))
 (let ((?x682 (center s_____)))
 (let (($x720 (= ?x682 ?x544)))
 (let ((?x378 (right s____)))
 (let ((?x689 (top ?x378)))
 (let ((?x691 (stack ?x689 ?x544)))
 (let (($x717 (= ?x682 ?x691)))
 (let (($x692 ((_ is stack ) ?x378)))
 (let (($x693 (= c____ right-to-center)))
 (let (($x694 (and $x693 $x692)))
 (let (($x695 (= c____ right-to-left)))
 (let (($x696 (and $x695 $x692)))
 (let ((?x684 (rest ?x544)))
 (let (($x712 (= ?x682 ?x684)))
 (let (($x697 ((_ is stack ) ?x544)))
 (let (($x698 (= c____ center-to-right)))
 (let (($x699 (and $x698 $x697)))
 (let (($x700 (= c____ center-to-left)))
 (let (($x701 (and $x700 $x697)))
 (let ((?x333 (left s____)))
 (let ((?x542 (top ?x333)))
 (let ((?x683 (stack ?x542 ?x544)))
 (let (($x711 (= ?x682 ?x683)))
 (let (($x702 ((_ is stack ) ?x333)))
 (let (($x703 (= c____ left-to-right)))
 (let (($x704 (and $x703 $x702)))
 (let (($x734 (ite $x704 $x711 (ite $x701 $x712 (ite $x699 $x712 (ite $x696 $x720 (ite $x694 $x717 $x720)))))))
 (let (($x705 (= c____ left-to-center)))
 (let (($x706 (and $x705 $x702)))
 (ite $x706 $x720 $x734)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x462 (left s_____)))
 (let ((?x600 (left s______)))
 (let (($x860 (= ?x600 ?x462)))
 (let ((?x496 (right s_____)))
 (let ((?x827 (top ?x496)))
 (let ((?x828 (stack ?x827 ?x462)))
 (let (($x854 (= ?x600 ?x828)))
 (let (($x830 ((_ is stack ) ?x496)))
 (let (($x833 (= c_____ right-to-left)))
 (let (($x834 (and $x833 $x830)))
 (let ((?x682 (center s_____)))
 (let (($x835 ((_ is stack ) ?x682)))
 (let (($x836 (= c_____ center-to-right)))
 (let (($x837 (and $x836 $x835)))
 (let ((?x823 (top ?x682)))
 (let ((?x824 (stack ?x823 ?x462)))
 (let (($x851 (= ?x600 ?x824)))
 (let (($x838 (= c_____ center-to-left)))
 (let (($x839 (and $x838 $x835)))
 (let ((?x633 (rest ?x462)))
 (let (($x847 (= ?x600 ?x633)))
 (let (($x840 ((_ is stack ) ?x462)))
 (let (($x841 (= c_____ left-to-right)))
 (let (($x842 (and $x841 $x840)))
 (let (($x843 (= c_____ left-to-center)))
 (let (($x844 (and $x843 $x840)))
 (ite $x844 $x847 (ite $x842 $x847 (ite $x839 $x851 (ite $x837 $x860 (ite $x834 $x854 $x860))))))))))))))))))))))))))))))))
(assert
 (let ((?x496 (right s_____)))
 (let ((?x634 (right s______)))
 (let (($x856 (= ?x634 ?x496)))
 (let ((?x826 (rest ?x496)))
 (let (($x853 (= ?x634 ?x826)))
 (let (($x830 ((_ is stack ) ?x496)))
 (let (($x831 (= c_____ right-to-center)))
 (let (($x832 (and $x831 $x830)))
 (let (($x833 (= c_____ right-to-left)))
 (let (($x834 (and $x833 $x830)))
 (let ((?x682 (center s_____)))
 (let ((?x823 (top ?x682)))
 (let ((?x825 (stack ?x823 ?x496)))
 (let (($x852 (= ?x634 ?x825)))
 (let (($x835 ((_ is stack ) ?x682)))
 (let (($x836 (= c_____ center-to-right)))
 (let (($x837 (and $x836 $x835)))
 (let (($x838 (= c_____ center-to-left)))
 (let (($x839 (and $x838 $x835)))
 (let ((?x462 (left s_____)))
 (let (($x840 ((_ is stack ) ?x462)))
 (let (($x841 (= c_____ left-to-right)))
 (let (($x842 (and $x841 $x840)))
 (let (($x873 (ite $x842 $x856 (ite $x839 $x856 (ite $x837 $x852 (ite $x834 $x853 (ite $x832 $x853 $x856)))))))
 (let ((?x680 (top ?x462)))
 (let ((?x819 (stack ?x680 ?x496)))
 (let (($x848 (= ?x634 ?x819)))
 (let (($x843 (= c_____ left-to-center)))
 (let (($x844 (and $x843 $x840)))
 (ite $x844 $x848 $x873)))))))))))))))))))))))))))))))
(assert
 (let ((?x682 (center s_____)))
 (let ((?x820 (center s______)))
 (let (($x858 (= ?x820 ?x682)))
 (let ((?x496 (right s_____)))
 (let ((?x827 (top ?x496)))
 (let ((?x829 (stack ?x827 ?x682)))
 (let (($x855 (= ?x820 ?x829)))
 (let (($x830 ((_ is stack ) ?x496)))
 (let (($x831 (= c_____ right-to-center)))
 (let (($x832 (and $x831 $x830)))
 (let (($x833 (= c_____ right-to-left)))
 (let (($x834 (and $x833 $x830)))
 (let ((?x822 (rest ?x682)))
 (let (($x850 (= ?x820 ?x822)))
 (let (($x835 ((_ is stack ) ?x682)))
 (let (($x836 (= c_____ center-to-right)))
 (let (($x837 (and $x836 $x835)))
 (let (($x838 (= c_____ center-to-left)))
 (let (($x839 (and $x838 $x835)))
 (let ((?x462 (left s_____)))
 (let ((?x680 (top ?x462)))
 (let ((?x821 (stack ?x680 ?x682)))
 (let (($x849 (= ?x820 ?x821)))
 (let (($x840 ((_ is stack ) ?x462)))
 (let (($x841 (= c_____ left-to-right)))
 (let (($x842 (and $x841 $x840)))
 (let (($x872 (ite $x842 $x849 (ite $x839 $x850 (ite $x837 $x850 (ite $x834 $x858 (ite $x832 $x855 $x858)))))))
 (let (($x843 (= c_____ left-to-center)))
 (let (($x844 (and $x843 $x840)))
 (ite $x844 $x858 $x872)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x600 (left s______)))
 (let ((?x738 (left s_______)))
 (let (($x998 (= ?x738 ?x600)))
 (let ((?x634 (right s______)))
 (let ((?x965 (top ?x634)))
 (let ((?x966 (stack ?x965 ?x600)))
 (let (($x992 (= ?x738 ?x966)))
 (let (($x968 ((_ is stack ) ?x634)))
 (let (($x971 (= c______ right-to-left)))
 (let (($x972 (and $x971 $x968)))
 (let ((?x820 (center s______)))
 (let (($x973 ((_ is stack ) ?x820)))
 (let (($x974 (= c______ center-to-right)))
 (let (($x975 (and $x974 $x973)))
 (let ((?x961 (top ?x820)))
 (let ((?x962 (stack ?x961 ?x600)))
 (let (($x989 (= ?x738 ?x962)))
 (let (($x976 (= c______ center-to-left)))
 (let (($x977 (and $x976 $x973)))
 (let ((?x771 (rest ?x600)))
 (let (($x985 (= ?x738 ?x771)))
 (let (($x978 ((_ is stack ) ?x600)))
 (let (($x979 (= c______ left-to-right)))
 (let (($x980 (and $x979 $x978)))
 (let (($x981 (= c______ left-to-center)))
 (let (($x982 (and $x981 $x978)))
 (ite $x982 $x985 (ite $x980 $x985 (ite $x977 $x989 (ite $x975 $x998 (ite $x972 $x992 $x998))))))))))))))))))))))))))))))))
(assert
 (let ((?x634 (right s______)))
 (let ((?x772 (right s_______)))
 (let (($x994 (= ?x772 ?x634)))
 (let ((?x964 (rest ?x634)))
 (let (($x991 (= ?x772 ?x964)))
 (let (($x968 ((_ is stack ) ?x634)))
 (let (($x969 (= c______ right-to-center)))
 (let (($x970 (and $x969 $x968)))
 (let (($x971 (= c______ right-to-left)))
 (let (($x972 (and $x971 $x968)))
 (let ((?x820 (center s______)))
 (let ((?x961 (top ?x820)))
 (let ((?x963 (stack ?x961 ?x634)))
 (let (($x990 (= ?x772 ?x963)))
 (let (($x973 ((_ is stack ) ?x820)))
 (let (($x974 (= c______ center-to-right)))
 (let (($x975 (and $x974 $x973)))
 (let (($x976 (= c______ center-to-left)))
 (let (($x977 (and $x976 $x973)))
 (let ((?x600 (left s______)))
 (let (($x978 ((_ is stack ) ?x600)))
 (let (($x979 (= c______ left-to-right)))
 (let (($x980 (and $x979 $x978)))
 (let (($x1011 (ite $x980 $x994 (ite $x977 $x994 (ite $x975 $x990 (ite $x972 $x991 (ite $x970 $x991 $x994)))))))
 (let ((?x818 (top ?x600)))
 (let ((?x957 (stack ?x818 ?x634)))
 (let (($x986 (= ?x772 ?x957)))
 (let (($x981 (= c______ left-to-center)))
 (let (($x982 (and $x981 $x978)))
 (ite $x982 $x986 $x1011)))))))))))))))))))))))))))))))
(assert
 (let ((?x820 (center s______)))
 (let ((?x958 (center s_______)))
 (let (($x996 (= ?x958 ?x820)))
 (let ((?x634 (right s______)))
 (let ((?x965 (top ?x634)))
 (let ((?x967 (stack ?x965 ?x820)))
 (let (($x993 (= ?x958 ?x967)))
 (let (($x968 ((_ is stack ) ?x634)))
 (let (($x969 (= c______ right-to-center)))
 (let (($x970 (and $x969 $x968)))
 (let (($x971 (= c______ right-to-left)))
 (let (($x972 (and $x971 $x968)))
 (let ((?x960 (rest ?x820)))
 (let (($x988 (= ?x958 ?x960)))
 (let (($x973 ((_ is stack ) ?x820)))
 (let (($x974 (= c______ center-to-right)))
 (let (($x975 (and $x974 $x973)))
 (let (($x976 (= c______ center-to-left)))
 (let (($x977 (and $x976 $x973)))
 (let ((?x600 (left s______)))
 (let ((?x818 (top ?x600)))
 (let ((?x959 (stack ?x818 ?x820)))
 (let (($x987 (= ?x958 ?x959)))
 (let (($x978 ((_ is stack ) ?x600)))
 (let (($x979 (= c______ left-to-right)))
 (let (($x980 (and $x979 $x978)))
 (let (($x1010 (ite $x980 $x987 (ite $x977 $x988 (ite $x975 $x988 (ite $x972 $x996 (ite $x970 $x993 $x996)))))))
 (let (($x981 (= c______ left-to-center)))
 (let (($x982 (and $x981 $x978)))
 (ite $x982 $x996 $x1010)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x738 (left s_______)))
 (let ((?x876 (left s________)))
 (let (($x1136 (= ?x876 ?x738)))
 (let ((?x772 (right s_______)))
 (let ((?x1103 (top ?x772)))
 (let ((?x1104 (stack ?x1103 ?x738)))
 (let (($x1130 (= ?x876 ?x1104)))
 (let (($x1106 ((_ is stack ) ?x772)))
 (let (($x1109 (= c_______ right-to-left)))
 (let (($x1110 (and $x1109 $x1106)))
 (let ((?x958 (center s_______)))
 (let (($x1111 ((_ is stack ) ?x958)))
 (let (($x1112 (= c_______ center-to-right)))
 (let (($x1113 (and $x1112 $x1111)))
 (let ((?x1099 (top ?x958)))
 (let ((?x1100 (stack ?x1099 ?x738)))
 (let (($x1127 (= ?x876 ?x1100)))
 (let (($x1114 (= c_______ center-to-left)))
 (let (($x1115 (and $x1114 $x1111)))
 (let ((?x909 (rest ?x738)))
 (let (($x1123 (= ?x876 ?x909)))
 (let (($x1116 ((_ is stack ) ?x738)))
 (let (($x1117 (= c_______ left-to-right)))
 (let (($x1118 (and $x1117 $x1116)))
 (let (($x1119 (= c_______ left-to-center)))
 (let (($x1120 (and $x1119 $x1116)))
 (ite $x1120 $x1123 (ite $x1118 $x1123 (ite $x1115 $x1127 (ite $x1113 $x1136 (ite $x1110 $x1130 $x1136))))))))))))))))))))))))))))))))
(assert
 (let ((?x772 (right s_______)))
 (let ((?x910 (right s________)))
 (let (($x1132 (= ?x910 ?x772)))
 (let ((?x1102 (rest ?x772)))
 (let (($x1129 (= ?x910 ?x1102)))
 (let (($x1106 ((_ is stack ) ?x772)))
 (let (($x1107 (= c_______ right-to-center)))
 (let (($x1108 (and $x1107 $x1106)))
 (let (($x1109 (= c_______ right-to-left)))
 (let (($x1110 (and $x1109 $x1106)))
 (let ((?x958 (center s_______)))
 (let ((?x1099 (top ?x958)))
 (let ((?x1101 (stack ?x1099 ?x772)))
 (let (($x1128 (= ?x910 ?x1101)))
 (let (($x1111 ((_ is stack ) ?x958)))
 (let (($x1112 (= c_______ center-to-right)))
 (let (($x1113 (and $x1112 $x1111)))
 (let (($x1114 (= c_______ center-to-left)))
 (let (($x1115 (and $x1114 $x1111)))
 (let ((?x738 (left s_______)))
 (let (($x1116 ((_ is stack ) ?x738)))
 (let (($x1117 (= c_______ left-to-right)))
 (let (($x1118 (and $x1117 $x1116)))
 (let (($x1149 (ite $x1118 $x1132 (ite $x1115 $x1132 (ite $x1113 $x1128 (ite $x1110 $x1129 (ite $x1108 $x1129 $x1132)))))))
 (let ((?x956 (top ?x738)))
 (let ((?x1095 (stack ?x956 ?x772)))
 (let (($x1124 (= ?x910 ?x1095)))
 (let (($x1119 (= c_______ left-to-center)))
 (let (($x1120 (and $x1119 $x1116)))
 (ite $x1120 $x1124 $x1149)))))))))))))))))))))))))))))))
(assert
 (let ((?x958 (center s_______)))
 (let ((?x1096 (center s________)))
 (let (($x1134 (= ?x1096 ?x958)))
 (let ((?x772 (right s_______)))
 (let ((?x1103 (top ?x772)))
 (let ((?x1105 (stack ?x1103 ?x958)))
 (let (($x1131 (= ?x1096 ?x1105)))
 (let (($x1106 ((_ is stack ) ?x772)))
 (let (($x1107 (= c_______ right-to-center)))
 (let (($x1108 (and $x1107 $x1106)))
 (let (($x1109 (= c_______ right-to-left)))
 (let (($x1110 (and $x1109 $x1106)))
 (let ((?x1098 (rest ?x958)))
 (let (($x1126 (= ?x1096 ?x1098)))
 (let (($x1111 ((_ is stack ) ?x958)))
 (let (($x1112 (= c_______ center-to-right)))
 (let (($x1113 (and $x1112 $x1111)))
 (let (($x1114 (= c_______ center-to-left)))
 (let (($x1115 (and $x1114 $x1111)))
 (let ((?x738 (left s_______)))
 (let ((?x956 (top ?x738)))
 (let ((?x1097 (stack ?x956 ?x958)))
 (let (($x1125 (= ?x1096 ?x1097)))
 (let (($x1116 ((_ is stack ) ?x738)))
 (let (($x1117 (= c_______ left-to-right)))
 (let (($x1118 (and $x1117 $x1116)))
 (let (($x1148 (ite $x1118 $x1125 (ite $x1115 $x1126 (ite $x1113 $x1126 (ite $x1110 $x1134 (ite $x1108 $x1131 $x1134)))))))
 (let (($x1119 (= c_______ left-to-center)))
 (let (($x1120 (and $x1119 $x1116)))
 (ite $x1120 $x1134 $x1148)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x876 (left s________)))
 (let ((?x1014 (left s_________)))
 (let (($x1274 (= ?x1014 ?x876)))
 (let ((?x910 (right s________)))
 (let ((?x1241 (top ?x910)))
 (let ((?x1242 (stack ?x1241 ?x876)))
 (let (($x1268 (= ?x1014 ?x1242)))
 (let (($x1244 ((_ is stack ) ?x910)))
 (let (($x1247 (= c________ right-to-left)))
 (let (($x1248 (and $x1247 $x1244)))
 (let ((?x1096 (center s________)))
 (let (($x1249 ((_ is stack ) ?x1096)))
 (let (($x1250 (= c________ center-to-right)))
 (let (($x1251 (and $x1250 $x1249)))
 (let ((?x1237 (top ?x1096)))
 (let ((?x1238 (stack ?x1237 ?x876)))
 (let (($x1265 (= ?x1014 ?x1238)))
 (let (($x1252 (= c________ center-to-left)))
 (let (($x1253 (and $x1252 $x1249)))
 (let ((?x1047 (rest ?x876)))
 (let (($x1261 (= ?x1014 ?x1047)))
 (let (($x1254 ((_ is stack ) ?x876)))
 (let (($x1255 (= c________ left-to-right)))
 (let (($x1256 (and $x1255 $x1254)))
 (let (($x1257 (= c________ left-to-center)))
 (let (($x1258 (and $x1257 $x1254)))
 (ite $x1258 $x1261 (ite $x1256 $x1261 (ite $x1253 $x1265 (ite $x1251 $x1274 (ite $x1248 $x1268 $x1274))))))))))))))))))))))))))))))))
(assert
 (let ((?x910 (right s________)))
 (let ((?x1048 (right s_________)))
 (let (($x1270 (= ?x1048 ?x910)))
 (let ((?x1240 (rest ?x910)))
 (let (($x1267 (= ?x1048 ?x1240)))
 (let (($x1244 ((_ is stack ) ?x910)))
 (let (($x1245 (= c________ right-to-center)))
 (let (($x1246 (and $x1245 $x1244)))
 (let (($x1247 (= c________ right-to-left)))
 (let (($x1248 (and $x1247 $x1244)))
 (let ((?x1096 (center s________)))
 (let ((?x1237 (top ?x1096)))
 (let ((?x1239 (stack ?x1237 ?x910)))
 (let (($x1266 (= ?x1048 ?x1239)))
 (let (($x1249 ((_ is stack ) ?x1096)))
 (let (($x1250 (= c________ center-to-right)))
 (let (($x1251 (and $x1250 $x1249)))
 (let (($x1252 (= c________ center-to-left)))
 (let (($x1253 (and $x1252 $x1249)))
 (let ((?x876 (left s________)))
 (let (($x1254 ((_ is stack ) ?x876)))
 (let (($x1255 (= c________ left-to-right)))
 (let (($x1256 (and $x1255 $x1254)))
 (let (($x1287 (ite $x1256 $x1270 (ite $x1253 $x1270 (ite $x1251 $x1266 (ite $x1248 $x1267 (ite $x1246 $x1267 $x1270)))))))
 (let ((?x1094 (top ?x876)))
 (let ((?x1233 (stack ?x1094 ?x910)))
 (let (($x1262 (= ?x1048 ?x1233)))
 (let (($x1257 (= c________ left-to-center)))
 (let (($x1258 (and $x1257 $x1254)))
 (ite $x1258 $x1262 $x1287)))))))))))))))))))))))))))))))
(assert
 (let ((?x1096 (center s________)))
 (let ((?x1234 (center s_________)))
 (let (($x1272 (= ?x1234 ?x1096)))
 (let ((?x910 (right s________)))
 (let ((?x1241 (top ?x910)))
 (let ((?x1243 (stack ?x1241 ?x1096)))
 (let (($x1269 (= ?x1234 ?x1243)))
 (let (($x1244 ((_ is stack ) ?x910)))
 (let (($x1245 (= c________ right-to-center)))
 (let (($x1246 (and $x1245 $x1244)))
 (let (($x1247 (= c________ right-to-left)))
 (let (($x1248 (and $x1247 $x1244)))
 (let ((?x1236 (rest ?x1096)))
 (let (($x1264 (= ?x1234 ?x1236)))
 (let (($x1249 ((_ is stack ) ?x1096)))
 (let (($x1250 (= c________ center-to-right)))
 (let (($x1251 (and $x1250 $x1249)))
 (let (($x1252 (= c________ center-to-left)))
 (let (($x1253 (and $x1252 $x1249)))
 (let ((?x876 (left s________)))
 (let ((?x1094 (top ?x876)))
 (let ((?x1235 (stack ?x1094 ?x1096)))
 (let (($x1263 (= ?x1234 ?x1235)))
 (let (($x1254 ((_ is stack ) ?x876)))
 (let (($x1255 (= c________ left-to-right)))
 (let (($x1256 (and $x1255 $x1254)))
 (let (($x1286 (ite $x1256 $x1263 (ite $x1253 $x1264 (ite $x1251 $x1264 (ite $x1248 $x1272 (ite $x1246 $x1269 $x1272)))))))
 (let (($x1257 (= c________ left-to-center)))
 (let (($x1258 (and $x1257 $x1254)))
 (ite $x1258 $x1272 $x1286)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1014 (left s_________)))
 (let ((?x1152 (left s__________)))
 (let (($x1412 (= ?x1152 ?x1014)))
 (let ((?x1048 (right s_________)))
 (let ((?x1379 (top ?x1048)))
 (let ((?x1380 (stack ?x1379 ?x1014)))
 (let (($x1406 (= ?x1152 ?x1380)))
 (let (($x1382 ((_ is stack ) ?x1048)))
 (let (($x1385 (= c_________ right-to-left)))
 (let (($x1386 (and $x1385 $x1382)))
 (let ((?x1234 (center s_________)))
 (let (($x1387 ((_ is stack ) ?x1234)))
 (let (($x1388 (= c_________ center-to-right)))
 (let (($x1389 (and $x1388 $x1387)))
 (let ((?x1375 (top ?x1234)))
 (let ((?x1376 (stack ?x1375 ?x1014)))
 (let (($x1403 (= ?x1152 ?x1376)))
 (let (($x1390 (= c_________ center-to-left)))
 (let (($x1391 (and $x1390 $x1387)))
 (let ((?x1185 (rest ?x1014)))
 (let (($x1399 (= ?x1152 ?x1185)))
 (let (($x1392 ((_ is stack ) ?x1014)))
 (let (($x1393 (= c_________ left-to-right)))
 (let (($x1394 (and $x1393 $x1392)))
 (let (($x1395 (= c_________ left-to-center)))
 (let (($x1396 (and $x1395 $x1392)))
 (ite $x1396 $x1399 (ite $x1394 $x1399 (ite $x1391 $x1403 (ite $x1389 $x1412 (ite $x1386 $x1406 $x1412))))))))))))))))))))))))))))))))
(assert
 (let ((?x1048 (right s_________)))
 (let ((?x1186 (right s__________)))
 (let (($x1408 (= ?x1186 ?x1048)))
 (let ((?x1378 (rest ?x1048)))
 (let (($x1405 (= ?x1186 ?x1378)))
 (let (($x1382 ((_ is stack ) ?x1048)))
 (let (($x1383 (= c_________ right-to-center)))
 (let (($x1384 (and $x1383 $x1382)))
 (let (($x1385 (= c_________ right-to-left)))
 (let (($x1386 (and $x1385 $x1382)))
 (let ((?x1234 (center s_________)))
 (let ((?x1375 (top ?x1234)))
 (let ((?x1377 (stack ?x1375 ?x1048)))
 (let (($x1404 (= ?x1186 ?x1377)))
 (let (($x1387 ((_ is stack ) ?x1234)))
 (let (($x1388 (= c_________ center-to-right)))
 (let (($x1389 (and $x1388 $x1387)))
 (let (($x1390 (= c_________ center-to-left)))
 (let (($x1391 (and $x1390 $x1387)))
 (let ((?x1014 (left s_________)))
 (let (($x1392 ((_ is stack ) ?x1014)))
 (let (($x1393 (= c_________ left-to-right)))
 (let (($x1394 (and $x1393 $x1392)))
 (let (($x1425 (ite $x1394 $x1408 (ite $x1391 $x1408 (ite $x1389 $x1404 (ite $x1386 $x1405 (ite $x1384 $x1405 $x1408)))))))
 (let ((?x1232 (top ?x1014)))
 (let ((?x1371 (stack ?x1232 ?x1048)))
 (let (($x1400 (= ?x1186 ?x1371)))
 (let (($x1395 (= c_________ left-to-center)))
 (let (($x1396 (and $x1395 $x1392)))
 (ite $x1396 $x1400 $x1425)))))))))))))))))))))))))))))))
(assert
 (let ((?x1234 (center s_________)))
 (let ((?x1372 (center s__________)))
 (let (($x1410 (= ?x1372 ?x1234)))
 (let ((?x1048 (right s_________)))
 (let ((?x1379 (top ?x1048)))
 (let ((?x1381 (stack ?x1379 ?x1234)))
 (let (($x1407 (= ?x1372 ?x1381)))
 (let (($x1382 ((_ is stack ) ?x1048)))
 (let (($x1383 (= c_________ right-to-center)))
 (let (($x1384 (and $x1383 $x1382)))
 (let (($x1385 (= c_________ right-to-left)))
 (let (($x1386 (and $x1385 $x1382)))
 (let ((?x1374 (rest ?x1234)))
 (let (($x1402 (= ?x1372 ?x1374)))
 (let (($x1387 ((_ is stack ) ?x1234)))
 (let (($x1388 (= c_________ center-to-right)))
 (let (($x1389 (and $x1388 $x1387)))
 (let (($x1390 (= c_________ center-to-left)))
 (let (($x1391 (and $x1390 $x1387)))
 (let ((?x1014 (left s_________)))
 (let ((?x1232 (top ?x1014)))
 (let ((?x1373 (stack ?x1232 ?x1234)))
 (let (($x1401 (= ?x1372 ?x1373)))
 (let (($x1392 ((_ is stack ) ?x1014)))
 (let (($x1393 (= c_________ left-to-right)))
 (let (($x1394 (and $x1393 $x1392)))
 (let (($x1424 (ite $x1394 $x1401 (ite $x1391 $x1402 (ite $x1389 $x1402 (ite $x1386 $x1410 (ite $x1384 $x1407 $x1410)))))))
 (let (($x1395 (= c_________ left-to-center)))
 (let (($x1396 (and $x1395 $x1392)))
 (ite $x1396 $x1410 $x1424)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1152 (left s__________)))
 (let ((?x1290 (left s___________)))
 (let (($x1550 (= ?x1290 ?x1152)))
 (let ((?x1186 (right s__________)))
 (let ((?x1517 (top ?x1186)))
 (let ((?x1518 (stack ?x1517 ?x1152)))
 (let (($x1544 (= ?x1290 ?x1518)))
 (let (($x1520 ((_ is stack ) ?x1186)))
 (let (($x1523 (= c__________ right-to-left)))
 (let (($x1524 (and $x1523 $x1520)))
 (let ((?x1372 (center s__________)))
 (let (($x1525 ((_ is stack ) ?x1372)))
 (let (($x1526 (= c__________ center-to-right)))
 (let (($x1527 (and $x1526 $x1525)))
 (let ((?x1513 (top ?x1372)))
 (let ((?x1514 (stack ?x1513 ?x1152)))
 (let (($x1541 (= ?x1290 ?x1514)))
 (let (($x1528 (= c__________ center-to-left)))
 (let (($x1529 (and $x1528 $x1525)))
 (let ((?x1323 (rest ?x1152)))
 (let (($x1537 (= ?x1290 ?x1323)))
 (let (($x1530 ((_ is stack ) ?x1152)))
 (let (($x1531 (= c__________ left-to-right)))
 (let (($x1532 (and $x1531 $x1530)))
 (let (($x1533 (= c__________ left-to-center)))
 (let (($x1534 (and $x1533 $x1530)))
 (ite $x1534 $x1537 (ite $x1532 $x1537 (ite $x1529 $x1541 (ite $x1527 $x1550 (ite $x1524 $x1544 $x1550))))))))))))))))))))))))))))))))
(assert
 (let ((?x1186 (right s__________)))
 (let ((?x1324 (right s___________)))
 (let (($x1546 (= ?x1324 ?x1186)))
 (let ((?x1516 (rest ?x1186)))
 (let (($x1543 (= ?x1324 ?x1516)))
 (let (($x1520 ((_ is stack ) ?x1186)))
 (let (($x1521 (= c__________ right-to-center)))
 (let (($x1522 (and $x1521 $x1520)))
 (let (($x1523 (= c__________ right-to-left)))
 (let (($x1524 (and $x1523 $x1520)))
 (let ((?x1372 (center s__________)))
 (let ((?x1513 (top ?x1372)))
 (let ((?x1515 (stack ?x1513 ?x1186)))
 (let (($x1542 (= ?x1324 ?x1515)))
 (let (($x1525 ((_ is stack ) ?x1372)))
 (let (($x1526 (= c__________ center-to-right)))
 (let (($x1527 (and $x1526 $x1525)))
 (let (($x1528 (= c__________ center-to-left)))
 (let (($x1529 (and $x1528 $x1525)))
 (let ((?x1152 (left s__________)))
 (let (($x1530 ((_ is stack ) ?x1152)))
 (let (($x1531 (= c__________ left-to-right)))
 (let (($x1532 (and $x1531 $x1530)))
 (let (($x1563 (ite $x1532 $x1546 (ite $x1529 $x1546 (ite $x1527 $x1542 (ite $x1524 $x1543 (ite $x1522 $x1543 $x1546)))))))
 (let ((?x1370 (top ?x1152)))
 (let ((?x1509 (stack ?x1370 ?x1186)))
 (let (($x1538 (= ?x1324 ?x1509)))
 (let (($x1533 (= c__________ left-to-center)))
 (let (($x1534 (and $x1533 $x1530)))
 (ite $x1534 $x1538 $x1563)))))))))))))))))))))))))))))))
(assert
 (let ((?x1372 (center s__________)))
 (let ((?x1510 (center s___________)))
 (let (($x1548 (= ?x1510 ?x1372)))
 (let ((?x1186 (right s__________)))
 (let ((?x1517 (top ?x1186)))
 (let ((?x1519 (stack ?x1517 ?x1372)))
 (let (($x1545 (= ?x1510 ?x1519)))
 (let (($x1520 ((_ is stack ) ?x1186)))
 (let (($x1521 (= c__________ right-to-center)))
 (let (($x1522 (and $x1521 $x1520)))
 (let (($x1523 (= c__________ right-to-left)))
 (let (($x1524 (and $x1523 $x1520)))
 (let ((?x1512 (rest ?x1372)))
 (let (($x1540 (= ?x1510 ?x1512)))
 (let (($x1525 ((_ is stack ) ?x1372)))
 (let (($x1526 (= c__________ center-to-right)))
 (let (($x1527 (and $x1526 $x1525)))
 (let (($x1528 (= c__________ center-to-left)))
 (let (($x1529 (and $x1528 $x1525)))
 (let ((?x1152 (left s__________)))
 (let ((?x1370 (top ?x1152)))
 (let ((?x1511 (stack ?x1370 ?x1372)))
 (let (($x1539 (= ?x1510 ?x1511)))
 (let (($x1530 ((_ is stack ) ?x1152)))
 (let (($x1531 (= c__________ left-to-right)))
 (let (($x1532 (and $x1531 $x1530)))
 (let (($x1562 (ite $x1532 $x1539 (ite $x1529 $x1540 (ite $x1527 $x1540 (ite $x1524 $x1548 (ite $x1522 $x1545 $x1548)))))))
 (let (($x1533 (= c__________ left-to-center)))
 (let (($x1534 (and $x1533 $x1530)))
 (ite $x1534 $x1548 $x1562)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1290 (left s___________)))
 (let ((?x1428 (left s____________)))
 (let (($x1688 (= ?x1428 ?x1290)))
 (let ((?x1324 (right s___________)))
 (let ((?x1655 (top ?x1324)))
 (let ((?x1656 (stack ?x1655 ?x1290)))
 (let (($x1682 (= ?x1428 ?x1656)))
 (let (($x1658 ((_ is stack ) ?x1324)))
 (let (($x1661 (= c___________ right-to-left)))
 (let (($x1662 (and $x1661 $x1658)))
 (let ((?x1510 (center s___________)))
 (let (($x1663 ((_ is stack ) ?x1510)))
 (let (($x1664 (= c___________ center-to-right)))
 (let (($x1665 (and $x1664 $x1663)))
 (let ((?x1651 (top ?x1510)))
 (let ((?x1652 (stack ?x1651 ?x1290)))
 (let (($x1679 (= ?x1428 ?x1652)))
 (let (($x1666 (= c___________ center-to-left)))
 (let (($x1667 (and $x1666 $x1663)))
 (let ((?x1461 (rest ?x1290)))
 (let (($x1675 (= ?x1428 ?x1461)))
 (let (($x1668 ((_ is stack ) ?x1290)))
 (let (($x1669 (= c___________ left-to-right)))
 (let (($x1670 (and $x1669 $x1668)))
 (let (($x1671 (= c___________ left-to-center)))
 (let (($x1672 (and $x1671 $x1668)))
 (ite $x1672 $x1675 (ite $x1670 $x1675 (ite $x1667 $x1679 (ite $x1665 $x1688 (ite $x1662 $x1682 $x1688))))))))))))))))))))))))))))))))
(assert
 (let ((?x1324 (right s___________)))
 (let ((?x1462 (right s____________)))
 (let (($x1684 (= ?x1462 ?x1324)))
 (let ((?x1654 (rest ?x1324)))
 (let (($x1681 (= ?x1462 ?x1654)))
 (let (($x1658 ((_ is stack ) ?x1324)))
 (let (($x1659 (= c___________ right-to-center)))
 (let (($x1660 (and $x1659 $x1658)))
 (let (($x1661 (= c___________ right-to-left)))
 (let (($x1662 (and $x1661 $x1658)))
 (let ((?x1510 (center s___________)))
 (let ((?x1651 (top ?x1510)))
 (let ((?x1653 (stack ?x1651 ?x1324)))
 (let (($x1680 (= ?x1462 ?x1653)))
 (let (($x1663 ((_ is stack ) ?x1510)))
 (let (($x1664 (= c___________ center-to-right)))
 (let (($x1665 (and $x1664 $x1663)))
 (let (($x1666 (= c___________ center-to-left)))
 (let (($x1667 (and $x1666 $x1663)))
 (let ((?x1290 (left s___________)))
 (let (($x1668 ((_ is stack ) ?x1290)))
 (let (($x1669 (= c___________ left-to-right)))
 (let (($x1670 (and $x1669 $x1668)))
 (let (($x1701 (ite $x1670 $x1684 (ite $x1667 $x1684 (ite $x1665 $x1680 (ite $x1662 $x1681 (ite $x1660 $x1681 $x1684)))))))
 (let ((?x1508 (top ?x1290)))
 (let ((?x1647 (stack ?x1508 ?x1324)))
 (let (($x1676 (= ?x1462 ?x1647)))
 (let (($x1671 (= c___________ left-to-center)))
 (let (($x1672 (and $x1671 $x1668)))
 (ite $x1672 $x1676 $x1701)))))))))))))))))))))))))))))))
(assert
 (let ((?x1510 (center s___________)))
 (let ((?x1648 (center s____________)))
 (let (($x1686 (= ?x1648 ?x1510)))
 (let ((?x1324 (right s___________)))
 (let ((?x1655 (top ?x1324)))
 (let ((?x1657 (stack ?x1655 ?x1510)))
 (let (($x1683 (= ?x1648 ?x1657)))
 (let (($x1658 ((_ is stack ) ?x1324)))
 (let (($x1659 (= c___________ right-to-center)))
 (let (($x1660 (and $x1659 $x1658)))
 (let (($x1661 (= c___________ right-to-left)))
 (let (($x1662 (and $x1661 $x1658)))
 (let ((?x1650 (rest ?x1510)))
 (let (($x1678 (= ?x1648 ?x1650)))
 (let (($x1663 ((_ is stack ) ?x1510)))
 (let (($x1664 (= c___________ center-to-right)))
 (let (($x1665 (and $x1664 $x1663)))
 (let (($x1666 (= c___________ center-to-left)))
 (let (($x1667 (and $x1666 $x1663)))
 (let ((?x1290 (left s___________)))
 (let ((?x1508 (top ?x1290)))
 (let ((?x1649 (stack ?x1508 ?x1510)))
 (let (($x1677 (= ?x1648 ?x1649)))
 (let (($x1668 ((_ is stack ) ?x1290)))
 (let (($x1669 (= c___________ left-to-right)))
 (let (($x1670 (and $x1669 $x1668)))
 (let (($x1700 (ite $x1670 $x1677 (ite $x1667 $x1678 (ite $x1665 $x1678 (ite $x1662 $x1686 (ite $x1660 $x1683 $x1686)))))))
 (let (($x1671 (= c___________ left-to-center)))
 (let (($x1672 (and $x1671 $x1668)))
 (ite $x1672 $x1686 $x1700)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1428 (left s____________)))
 (let ((?x1566 (left s_____________)))
 (let (($x1826 (= ?x1566 ?x1428)))
 (let ((?x1462 (right s____________)))
 (let ((?x1793 (top ?x1462)))
 (let ((?x1794 (stack ?x1793 ?x1428)))
 (let (($x1820 (= ?x1566 ?x1794)))
 (let (($x1796 ((_ is stack ) ?x1462)))
 (let (($x1799 (= c____________ right-to-left)))
 (let (($x1800 (and $x1799 $x1796)))
 (let ((?x1648 (center s____________)))
 (let (($x1801 ((_ is stack ) ?x1648)))
 (let (($x1802 (= c____________ center-to-right)))
 (let (($x1803 (and $x1802 $x1801)))
 (let ((?x1789 (top ?x1648)))
 (let ((?x1790 (stack ?x1789 ?x1428)))
 (let (($x1817 (= ?x1566 ?x1790)))
 (let (($x1804 (= c____________ center-to-left)))
 (let (($x1805 (and $x1804 $x1801)))
 (let ((?x1599 (rest ?x1428)))
 (let (($x1813 (= ?x1566 ?x1599)))
 (let (($x1806 ((_ is stack ) ?x1428)))
 (let (($x1807 (= c____________ left-to-right)))
 (let (($x1808 (and $x1807 $x1806)))
 (let (($x1809 (= c____________ left-to-center)))
 (let (($x1810 (and $x1809 $x1806)))
 (ite $x1810 $x1813 (ite $x1808 $x1813 (ite $x1805 $x1817 (ite $x1803 $x1826 (ite $x1800 $x1820 $x1826))))))))))))))))))))))))))))))))
(assert
 (let ((?x1462 (right s____________)))
 (let ((?x1600 (right s_____________)))
 (let (($x1822 (= ?x1600 ?x1462)))
 (let ((?x1792 (rest ?x1462)))
 (let (($x1819 (= ?x1600 ?x1792)))
 (let (($x1796 ((_ is stack ) ?x1462)))
 (let (($x1797 (= c____________ right-to-center)))
 (let (($x1798 (and $x1797 $x1796)))
 (let (($x1799 (= c____________ right-to-left)))
 (let (($x1800 (and $x1799 $x1796)))
 (let ((?x1648 (center s____________)))
 (let ((?x1789 (top ?x1648)))
 (let ((?x1791 (stack ?x1789 ?x1462)))
 (let (($x1818 (= ?x1600 ?x1791)))
 (let (($x1801 ((_ is stack ) ?x1648)))
 (let (($x1802 (= c____________ center-to-right)))
 (let (($x1803 (and $x1802 $x1801)))
 (let (($x1804 (= c____________ center-to-left)))
 (let (($x1805 (and $x1804 $x1801)))
 (let ((?x1428 (left s____________)))
 (let (($x1806 ((_ is stack ) ?x1428)))
 (let (($x1807 (= c____________ left-to-right)))
 (let (($x1808 (and $x1807 $x1806)))
 (let (($x1839 (ite $x1808 $x1822 (ite $x1805 $x1822 (ite $x1803 $x1818 (ite $x1800 $x1819 (ite $x1798 $x1819 $x1822)))))))
 (let ((?x1646 (top ?x1428)))
 (let ((?x1785 (stack ?x1646 ?x1462)))
 (let (($x1814 (= ?x1600 ?x1785)))
 (let (($x1809 (= c____________ left-to-center)))
 (let (($x1810 (and $x1809 $x1806)))
 (ite $x1810 $x1814 $x1839)))))))))))))))))))))))))))))))
(assert
 (let ((?x1648 (center s____________)))
 (let ((?x1786 (center s_____________)))
 (let (($x1824 (= ?x1786 ?x1648)))
 (let ((?x1462 (right s____________)))
 (let ((?x1793 (top ?x1462)))
 (let ((?x1795 (stack ?x1793 ?x1648)))
 (let (($x1821 (= ?x1786 ?x1795)))
 (let (($x1796 ((_ is stack ) ?x1462)))
 (let (($x1797 (= c____________ right-to-center)))
 (let (($x1798 (and $x1797 $x1796)))
 (let (($x1799 (= c____________ right-to-left)))
 (let (($x1800 (and $x1799 $x1796)))
 (let ((?x1788 (rest ?x1648)))
 (let (($x1816 (= ?x1786 ?x1788)))
 (let (($x1801 ((_ is stack ) ?x1648)))
 (let (($x1802 (= c____________ center-to-right)))
 (let (($x1803 (and $x1802 $x1801)))
 (let (($x1804 (= c____________ center-to-left)))
 (let (($x1805 (and $x1804 $x1801)))
 (let ((?x1428 (left s____________)))
 (let ((?x1646 (top ?x1428)))
 (let ((?x1787 (stack ?x1646 ?x1648)))
 (let (($x1815 (= ?x1786 ?x1787)))
 (let (($x1806 ((_ is stack ) ?x1428)))
 (let (($x1807 (= c____________ left-to-right)))
 (let (($x1808 (and $x1807 $x1806)))
 (let (($x1838 (ite $x1808 $x1815 (ite $x1805 $x1816 (ite $x1803 $x1816 (ite $x1800 $x1824 (ite $x1798 $x1821 $x1824)))))))
 (let (($x1809 (= c____________ left-to-center)))
 (let (($x1810 (and $x1809 $x1806)))
 (ite $x1810 $x1824 $x1838)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1566 (left s_____________)))
 (let ((?x1704 (left s______________)))
 (let (($x1964 (= ?x1704 ?x1566)))
 (let ((?x1600 (right s_____________)))
 (let ((?x1931 (top ?x1600)))
 (let ((?x1932 (stack ?x1931 ?x1566)))
 (let (($x1958 (= ?x1704 ?x1932)))
 (let (($x1934 ((_ is stack ) ?x1600)))
 (let (($x1937 (= c_____________ right-to-left)))
 (let (($x1938 (and $x1937 $x1934)))
 (let ((?x1786 (center s_____________)))
 (let (($x1939 ((_ is stack ) ?x1786)))
 (let (($x1940 (= c_____________ center-to-right)))
 (let (($x1941 (and $x1940 $x1939)))
 (let ((?x1927 (top ?x1786)))
 (let ((?x1928 (stack ?x1927 ?x1566)))
 (let (($x1955 (= ?x1704 ?x1928)))
 (let (($x1942 (= c_____________ center-to-left)))
 (let (($x1943 (and $x1942 $x1939)))
 (let ((?x1737 (rest ?x1566)))
 (let (($x1951 (= ?x1704 ?x1737)))
 (let (($x1944 ((_ is stack ) ?x1566)))
 (let (($x1945 (= c_____________ left-to-right)))
 (let (($x1946 (and $x1945 $x1944)))
 (let (($x1947 (= c_____________ left-to-center)))
 (let (($x1948 (and $x1947 $x1944)))
 (ite $x1948 $x1951 (ite $x1946 $x1951 (ite $x1943 $x1955 (ite $x1941 $x1964 (ite $x1938 $x1958 $x1964))))))))))))))))))))))))))))))))
(assert
 (let ((?x1600 (right s_____________)))
 (let ((?x1738 (right s______________)))
 (let (($x1960 (= ?x1738 ?x1600)))
 (let ((?x1930 (rest ?x1600)))
 (let (($x1957 (= ?x1738 ?x1930)))
 (let (($x1934 ((_ is stack ) ?x1600)))
 (let (($x1935 (= c_____________ right-to-center)))
 (let (($x1936 (and $x1935 $x1934)))
 (let (($x1937 (= c_____________ right-to-left)))
 (let (($x1938 (and $x1937 $x1934)))
 (let ((?x1786 (center s_____________)))
 (let ((?x1927 (top ?x1786)))
 (let ((?x1929 (stack ?x1927 ?x1600)))
 (let (($x1956 (= ?x1738 ?x1929)))
 (let (($x1939 ((_ is stack ) ?x1786)))
 (let (($x1940 (= c_____________ center-to-right)))
 (let (($x1941 (and $x1940 $x1939)))
 (let (($x1942 (= c_____________ center-to-left)))
 (let (($x1943 (and $x1942 $x1939)))
 (let ((?x1566 (left s_____________)))
 (let (($x1944 ((_ is stack ) ?x1566)))
 (let (($x1945 (= c_____________ left-to-right)))
 (let (($x1946 (and $x1945 $x1944)))
 (let (($x1977 (ite $x1946 $x1960 (ite $x1943 $x1960 (ite $x1941 $x1956 (ite $x1938 $x1957 (ite $x1936 $x1957 $x1960)))))))
 (let ((?x1784 (top ?x1566)))
 (let ((?x1923 (stack ?x1784 ?x1600)))
 (let (($x1952 (= ?x1738 ?x1923)))
 (let (($x1947 (= c_____________ left-to-center)))
 (let (($x1948 (and $x1947 $x1944)))
 (ite $x1948 $x1952 $x1977)))))))))))))))))))))))))))))))
(assert
 (let ((?x1786 (center s_____________)))
 (let ((?x1924 (center s______________)))
 (let (($x1962 (= ?x1924 ?x1786)))
 (let ((?x1600 (right s_____________)))
 (let ((?x1931 (top ?x1600)))
 (let ((?x1933 (stack ?x1931 ?x1786)))
 (let (($x1959 (= ?x1924 ?x1933)))
 (let (($x1934 ((_ is stack ) ?x1600)))
 (let (($x1935 (= c_____________ right-to-center)))
 (let (($x1936 (and $x1935 $x1934)))
 (let (($x1937 (= c_____________ right-to-left)))
 (let (($x1938 (and $x1937 $x1934)))
 (let ((?x1926 (rest ?x1786)))
 (let (($x1954 (= ?x1924 ?x1926)))
 (let (($x1939 ((_ is stack ) ?x1786)))
 (let (($x1940 (= c_____________ center-to-right)))
 (let (($x1941 (and $x1940 $x1939)))
 (let (($x1942 (= c_____________ center-to-left)))
 (let (($x1943 (and $x1942 $x1939)))
 (let ((?x1566 (left s_____________)))
 (let ((?x1784 (top ?x1566)))
 (let ((?x1925 (stack ?x1784 ?x1786)))
 (let (($x1953 (= ?x1924 ?x1925)))
 (let (($x1944 ((_ is stack ) ?x1566)))
 (let (($x1945 (= c_____________ left-to-right)))
 (let (($x1946 (and $x1945 $x1944)))
 (let (($x1976 (ite $x1946 $x1953 (ite $x1943 $x1954 (ite $x1941 $x1954 (ite $x1938 $x1962 (ite $x1936 $x1959 $x1962)))))))
 (let (($x1947 (= c_____________ left-to-center)))
 (let (($x1948 (and $x1947 $x1944)))
 (ite $x1948 $x1962 $x1976)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1704 (left s______________)))
 (let ((?x1842 (left s_______________)))
 (let (($x2102 (= ?x1842 ?x1704)))
 (let ((?x1738 (right s______________)))
 (let ((?x2069 (top ?x1738)))
 (let ((?x2070 (stack ?x2069 ?x1704)))
 (let (($x2096 (= ?x1842 ?x2070)))
 (let (($x2072 ((_ is stack ) ?x1738)))
 (let (($x2075 (= c______________ right-to-left)))
 (let (($x2076 (and $x2075 $x2072)))
 (let ((?x1924 (center s______________)))
 (let (($x2077 ((_ is stack ) ?x1924)))
 (let (($x2078 (= c______________ center-to-right)))
 (let (($x2079 (and $x2078 $x2077)))
 (let ((?x2065 (top ?x1924)))
 (let ((?x2066 (stack ?x2065 ?x1704)))
 (let (($x2093 (= ?x1842 ?x2066)))
 (let (($x2080 (= c______________ center-to-left)))
 (let (($x2081 (and $x2080 $x2077)))
 (let ((?x1875 (rest ?x1704)))
 (let (($x2089 (= ?x1842 ?x1875)))
 (let (($x2082 ((_ is stack ) ?x1704)))
 (let (($x2083 (= c______________ left-to-right)))
 (let (($x2084 (and $x2083 $x2082)))
 (let (($x2085 (= c______________ left-to-center)))
 (let (($x2086 (and $x2085 $x2082)))
 (ite $x2086 $x2089 (ite $x2084 $x2089 (ite $x2081 $x2093 (ite $x2079 $x2102 (ite $x2076 $x2096 $x2102))))))))))))))))))))))))))))))))
(assert
 (let ((?x1738 (right s______________)))
 (let ((?x1876 (right s_______________)))
 (let (($x2098 (= ?x1876 ?x1738)))
 (let ((?x2068 (rest ?x1738)))
 (let (($x2095 (= ?x1876 ?x2068)))
 (let (($x2072 ((_ is stack ) ?x1738)))
 (let (($x2073 (= c______________ right-to-center)))
 (let (($x2074 (and $x2073 $x2072)))
 (let (($x2075 (= c______________ right-to-left)))
 (let (($x2076 (and $x2075 $x2072)))
 (let ((?x1924 (center s______________)))
 (let ((?x2065 (top ?x1924)))
 (let ((?x2067 (stack ?x2065 ?x1738)))
 (let (($x2094 (= ?x1876 ?x2067)))
 (let (($x2077 ((_ is stack ) ?x1924)))
 (let (($x2078 (= c______________ center-to-right)))
 (let (($x2079 (and $x2078 $x2077)))
 (let (($x2080 (= c______________ center-to-left)))
 (let (($x2081 (and $x2080 $x2077)))
 (let ((?x1704 (left s______________)))
 (let (($x2082 ((_ is stack ) ?x1704)))
 (let (($x2083 (= c______________ left-to-right)))
 (let (($x2084 (and $x2083 $x2082)))
 (let (($x2115 (ite $x2084 $x2098 (ite $x2081 $x2098 (ite $x2079 $x2094 (ite $x2076 $x2095 (ite $x2074 $x2095 $x2098)))))))
 (let ((?x1922 (top ?x1704)))
 (let ((?x2061 (stack ?x1922 ?x1738)))
 (let (($x2090 (= ?x1876 ?x2061)))
 (let (($x2085 (= c______________ left-to-center)))
 (let (($x2086 (and $x2085 $x2082)))
 (ite $x2086 $x2090 $x2115)))))))))))))))))))))))))))))))
(assert
 (let ((?x1924 (center s______________)))
 (let ((?x2062 (center s_______________)))
 (let (($x2100 (= ?x2062 ?x1924)))
 (let ((?x1738 (right s______________)))
 (let ((?x2069 (top ?x1738)))
 (let ((?x2071 (stack ?x2069 ?x1924)))
 (let (($x2097 (= ?x2062 ?x2071)))
 (let (($x2072 ((_ is stack ) ?x1738)))
 (let (($x2073 (= c______________ right-to-center)))
 (let (($x2074 (and $x2073 $x2072)))
 (let (($x2075 (= c______________ right-to-left)))
 (let (($x2076 (and $x2075 $x2072)))
 (let ((?x2064 (rest ?x1924)))
 (let (($x2092 (= ?x2062 ?x2064)))
 (let (($x2077 ((_ is stack ) ?x1924)))
 (let (($x2078 (= c______________ center-to-right)))
 (let (($x2079 (and $x2078 $x2077)))
 (let (($x2080 (= c______________ center-to-left)))
 (let (($x2081 (and $x2080 $x2077)))
 (let ((?x1704 (left s______________)))
 (let ((?x1922 (top ?x1704)))
 (let ((?x2063 (stack ?x1922 ?x1924)))
 (let (($x2091 (= ?x2062 ?x2063)))
 (let (($x2082 ((_ is stack ) ?x1704)))
 (let (($x2083 (= c______________ left-to-right)))
 (let (($x2084 (and $x2083 $x2082)))
 (let (($x2114 (ite $x2084 $x2091 (ite $x2081 $x2092 (ite $x2079 $x2092 (ite $x2076 $x2100 (ite $x2074 $x2097 $x2100)))))))
 (let (($x2085 (= c______________ left-to-center)))
 (let (($x2086 (and $x2085 $x2082)))
 (ite $x2086 $x2100 $x2114)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1842 (left s_______________)))
 (let ((?x1980 (left s________________)))
 (let (($x2240 (= ?x1980 ?x1842)))
 (let ((?x1876 (right s_______________)))
 (let ((?x2207 (top ?x1876)))
 (let ((?x2208 (stack ?x2207 ?x1842)))
 (let (($x2234 (= ?x1980 ?x2208)))
 (let (($x2210 ((_ is stack ) ?x1876)))
 (let (($x2213 (= c_______________ right-to-left)))
 (let (($x2214 (and $x2213 $x2210)))
 (let ((?x2062 (center s_______________)))
 (let (($x2215 ((_ is stack ) ?x2062)))
 (let (($x2216 (= c_______________ center-to-right)))
 (let (($x2217 (and $x2216 $x2215)))
 (let ((?x2203 (top ?x2062)))
 (let ((?x2204 (stack ?x2203 ?x1842)))
 (let (($x2231 (= ?x1980 ?x2204)))
 (let (($x2218 (= c_______________ center-to-left)))
 (let (($x2219 (and $x2218 $x2215)))
 (let ((?x2013 (rest ?x1842)))
 (let (($x2227 (= ?x1980 ?x2013)))
 (let (($x2220 ((_ is stack ) ?x1842)))
 (let (($x2221 (= c_______________ left-to-right)))
 (let (($x2222 (and $x2221 $x2220)))
 (let (($x2223 (= c_______________ left-to-center)))
 (let (($x2224 (and $x2223 $x2220)))
 (ite $x2224 $x2227 (ite $x2222 $x2227 (ite $x2219 $x2231 (ite $x2217 $x2240 (ite $x2214 $x2234 $x2240))))))))))))))))))))))))))))))))
(assert
 (let ((?x1876 (right s_______________)))
 (let ((?x2014 (right s________________)))
 (let (($x2236 (= ?x2014 ?x1876)))
 (let ((?x2206 (rest ?x1876)))
 (let (($x2233 (= ?x2014 ?x2206)))
 (let (($x2210 ((_ is stack ) ?x1876)))
 (let (($x2211 (= c_______________ right-to-center)))
 (let (($x2212 (and $x2211 $x2210)))
 (let (($x2213 (= c_______________ right-to-left)))
 (let (($x2214 (and $x2213 $x2210)))
 (let ((?x2062 (center s_______________)))
 (let ((?x2203 (top ?x2062)))
 (let ((?x2205 (stack ?x2203 ?x1876)))
 (let (($x2232 (= ?x2014 ?x2205)))
 (let (($x2215 ((_ is stack ) ?x2062)))
 (let (($x2216 (= c_______________ center-to-right)))
 (let (($x2217 (and $x2216 $x2215)))
 (let (($x2218 (= c_______________ center-to-left)))
 (let (($x2219 (and $x2218 $x2215)))
 (let ((?x1842 (left s_______________)))
 (let (($x2220 ((_ is stack ) ?x1842)))
 (let (($x2221 (= c_______________ left-to-right)))
 (let (($x2222 (and $x2221 $x2220)))
 (let (($x2253 (ite $x2222 $x2236 (ite $x2219 $x2236 (ite $x2217 $x2232 (ite $x2214 $x2233 (ite $x2212 $x2233 $x2236)))))))
 (let ((?x2060 (top ?x1842)))
 (let ((?x2199 (stack ?x2060 ?x1876)))
 (let (($x2228 (= ?x2014 ?x2199)))
 (let (($x2223 (= c_______________ left-to-center)))
 (let (($x2224 (and $x2223 $x2220)))
 (ite $x2224 $x2228 $x2253)))))))))))))))))))))))))))))))
(assert
 (let ((?x2062 (center s_______________)))
 (let ((?x2200 (center s________________)))
 (let (($x2238 (= ?x2200 ?x2062)))
 (let ((?x1876 (right s_______________)))
 (let ((?x2207 (top ?x1876)))
 (let ((?x2209 (stack ?x2207 ?x2062)))
 (let (($x2235 (= ?x2200 ?x2209)))
 (let (($x2210 ((_ is stack ) ?x1876)))
 (let (($x2211 (= c_______________ right-to-center)))
 (let (($x2212 (and $x2211 $x2210)))
 (let (($x2213 (= c_______________ right-to-left)))
 (let (($x2214 (and $x2213 $x2210)))
 (let ((?x2202 (rest ?x2062)))
 (let (($x2230 (= ?x2200 ?x2202)))
 (let (($x2215 ((_ is stack ) ?x2062)))
 (let (($x2216 (= c_______________ center-to-right)))
 (let (($x2217 (and $x2216 $x2215)))
 (let (($x2218 (= c_______________ center-to-left)))
 (let (($x2219 (and $x2218 $x2215)))
 (let ((?x1842 (left s_______________)))
 (let ((?x2060 (top ?x1842)))
 (let ((?x2201 (stack ?x2060 ?x2062)))
 (let (($x2229 (= ?x2200 ?x2201)))
 (let (($x2220 ((_ is stack ) ?x1842)))
 (let (($x2221 (= c_______________ left-to-right)))
 (let (($x2222 (and $x2221 $x2220)))
 (let (($x2252 (ite $x2222 $x2229 (ite $x2219 $x2230 (ite $x2217 $x2230 (ite $x2214 $x2238 (ite $x2212 $x2235 $x2238)))))))
 (let (($x2223 (= c_______________ left-to-center)))
 (let (($x2224 (and $x2223 $x2220)))
 (ite $x2224 $x2238 $x2252)))))))))))))))))))))))))))))))
(assert
 (let ((?x59 (stack F (stack E (stack D (stack C (stack B (stack A empty))))))))
 (let ((?x65 (stack L (stack K (stack J (stack I (stack H (stack G ?x59))))))))
 (let ((?x71 (stack R (stack Q (stack P (stack O (stack N (stack M ?x65))))))))
 (let ((?x74 (stack U (stack T (stack S ?x71)))))
 (let ((?x2014 (right s________________)))
 (let (($x2256 (= ?x2014 ?x74)))
 (let ((?x2200 (center s________________)))
 (let (($x2287 (= ?x2200 empty)))
 (let ((?x1980 (left s________________)))
 (let (($x2288 (= ?x1980 empty)))
 (let (($x2290 (not (and $x2288 $x2287 $x2256))))
 (not $x2290)))))))))))))
(check-sat)
(exit)
