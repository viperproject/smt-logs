(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W) (X) (Y) (Z))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x39 (stack D empty)))
 (let ((?x38 (stack G ?x39)))
 (let ((?x40 (stack F ?x38)))
 (let ((?x41 (stack C ?x40)))
 (let ((?x42 (stack Z ?x41)))
 (let ((?x43 (stack E ?x42)))
 (let ((?x136 (left s_tmp_)))
 (= ?x136 ?x43)))))))))
(assert
 (let ((?x44 (stack S empty)))
 (let ((?x45 (stack B ?x44)))
 (let ((?x46 (stack U ?x45)))
 (let ((?x47 (stack M ?x46)))
 (let ((?x48 (stack I ?x47)))
 (let ((?x49 (stack V ?x48)))
 (let ((?x50 (stack K ?x49)))
 (let ((?x51 (stack T ?x50)))
 (let ((?x52 (stack L ?x51)))
 (let ((?x53 (stack W ?x52)))
 (let ((?x54 (stack X ?x53)))
 (let ((?x55 (stack H ?x54)))
 (let ((?x56 (stack R ?x55)))
 (let ((?x57 (stack Y ?x56)))
 (let ((?x58 (stack J ?x57)))
 (let ((?x59 (stack N ?x58)))
 (let ((?x60 (stack A ?x59)))
 (let ((?x61 (stack P ?x60)))
 (let ((?x62 (stack O ?x61)))
 (let ((?x63 (stack Q ?x62)))
 (let ((?x139 (center s_tmp__)))
 (= ?x139 ?x63)))))))))))))))))))))))
(assert
 (let ((?x142 (right s_tmp___)))
 (= ?x142 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x169 (left s_tmp__)))
 (= (left s_tmp___) ?x169)))
(assert
 (let ((?x139 (center s_tmp__)))
 (= (center s_tmp___) ?x139)))
(assert
 (let ((?x173 (center s_tmp_)))
 (= ?x173 (center s_tmp))))
(assert
 (let ((?x176 (right s_tmp_)))
 (= ?x176 (right s_tmp))))
(assert
 (let ((?x136 (left s_tmp_)))
 (let ((?x169 (left s_tmp__)))
 (= ?x169 ?x136))))
(assert
 (let ((?x176 (right s_tmp_)))
 (let ((?x180 (right s_tmp__)))
 (= ?x180 ?x176))))
(assert
 (= c__ c!1))
(assert
 (let ((?x113 (left s_)))
 (let ((?x323 (left s__)))
 (let (($x347 (= ?x323 ?x113)))
 (let ((?x116 (right s_)))
 (let (($x308 ((_ is stack ) ?x116)))
 (let (($x330 (and (= c_ right-to-left) $x308)))
 (let ((?x118 (center s_)))
 (let (($x331 ((_ is stack ) ?x118)))
 (let (($x332 (= c_ center-to-right)))
 (let (($x318 (and $x332 $x331)))
 (let (($x319 (= c_ center-to-left)))
 (let (($x320 (and $x319 $x331)))
 (let (($x356 (ite $x320 (= ?x323 (stack (top ?x118) ?x113)) (ite $x318 $x347 (ite $x330 (= ?x323 (stack (top ?x116) ?x113)) $x347)))))
 (let (($x310 (= ?x323 (rest ?x113))))
 (let (($x312 ((_ is stack ) ?x113)))
 (let (($x313 (= c_ left-to-right)))
 (let (($x314 (and $x313 $x312)))
 (let (($x333 (= c_ left-to-center)))
 (let (($x334 (and $x333 $x312)))
 (ite $x334 $x310 (ite $x314 $x310 $x356))))))))))))))))))))))
(assert
 (let ((?x116 (right s_)))
 (let ((?x337 (right s__)))
 (let (($x343 (= ?x337 ?x116)))
 (let (($x340 (= ?x337 (rest ?x116))))
 (let (($x308 ((_ is stack ) ?x116)))
 (let (($x325 (and (= c_ right-to-center) $x308)))
 (let (($x330 (and (= c_ right-to-left) $x308)))
 (let ((?x118 (center s_)))
 (let (($x331 ((_ is stack ) ?x118)))
 (let (($x332 (= c_ center-to-right)))
 (let (($x318 (and $x332 $x331)))
 (let (($x353 (ite $x318 (= ?x337 (stack (top ?x118) ?x116)) (ite $x330 $x340 (ite $x325 $x340 $x343)))))
 (let (($x319 (= c_ center-to-left)))
 (let (($x320 (and $x319 $x331)))
 (let ((?x113 (left s_)))
 (let (($x312 ((_ is stack ) ?x113)))
 (let (($x313 (= c_ left-to-right)))
 (let (($x314 (and $x313 $x312)))
 (let (($x333 (= c_ left-to-center)))
 (let (($x334 (and $x333 $x312)))
 (ite $x334 (= ?x337 (stack (top ?x113) ?x116)) (ite $x314 $x343 (ite $x320 $x343 $x353))))))))))))))))))))))))
(assert
 (let ((?x118 (center s_)))
 (let ((?x316 (center s__)))
 (let (($x345 (= ?x316 ?x118)))
 (let ((?x116 (right s_)))
 (let (($x308 ((_ is stack ) ?x116)))
 (let (($x325 (and (= c_ right-to-center) $x308)))
 (let (($x330 (and (= c_ right-to-left) $x308)))
 (let (($x304 (= ?x316 (rest ?x118))))
 (let (($x331 ((_ is stack ) ?x118)))
 (let (($x332 (= c_ center-to-right)))
 (let (($x318 (and $x332 $x331)))
 (let (($x352 (ite $x318 $x304 (ite $x330 $x345 (ite $x325 (= ?x316 (stack (top ?x116) ?x118)) $x345)))))
 (let (($x319 (= c_ center-to-left)))
 (let (($x320 (and $x319 $x331)))
 (let ((?x113 (left s_)))
 (let (($x312 ((_ is stack ) ?x113)))
 (let (($x313 (= c_ left-to-right)))
 (let (($x314 (and $x313 $x312)))
 (let (($x333 (= c_ left-to-center)))
 (let (($x334 (and $x333 $x312)))
 (ite $x334 $x345 (ite $x314 (= ?x316 (stack (top ?x113) ?x118)) (ite $x320 $x304 $x352))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x323 (left s__)))
 (let ((?x183 (left s___)))
 (let (($x457 (= ?x183 ?x323)))
 (let ((?x337 (right s__)))
 (let ((?x424 (top ?x337)))
 (let ((?x425 (stack ?x424 ?x323)))
 (let (($x451 (= ?x183 ?x425)))
 (let (($x427 ((_ is stack ) ?x337)))
 (let (($x430 (= c__ right-to-left)))
 (let (($x431 (and $x430 $x427)))
 (let ((?x316 (center s__)))
 (let (($x432 ((_ is stack ) ?x316)))
 (let (($x433 (= c__ center-to-right)))
 (let (($x434 (and $x433 $x432)))
 (let ((?x420 (top ?x316)))
 (let ((?x421 (stack ?x420 ?x323)))
 (let (($x448 (= ?x183 ?x421)))
 (let (($x435 (= c__ center-to-left)))
 (let (($x436 (and $x435 $x432)))
 (let ((?x185 (rest ?x323)))
 (let (($x444 (= ?x183 ?x185)))
 (let (($x437 ((_ is stack ) ?x323)))
 (let (($x438 (= c__ left-to-right)))
 (let (($x439 (and $x438 $x437)))
 (let (($x440 (= c__ left-to-center)))
 (let (($x441 (and $x440 $x437)))
 (ite $x441 $x444 (ite $x439 $x444 (ite $x436 $x448 (ite $x434 $x457 (ite $x431 $x451 $x457))))))))))))))))))))))))))))))))
(assert
 (let ((?x337 (right s__)))
 (let ((?x186 (right s___)))
 (let (($x453 (= ?x186 ?x337)))
 (let ((?x423 (rest ?x337)))
 (let (($x450 (= ?x186 ?x423)))
 (let (($x427 ((_ is stack ) ?x337)))
 (let (($x428 (= c__ right-to-center)))
 (let (($x429 (and $x428 $x427)))
 (let (($x430 (= c__ right-to-left)))
 (let (($x431 (and $x430 $x427)))
 (let ((?x316 (center s__)))
 (let ((?x420 (top ?x316)))
 (let ((?x422 (stack ?x420 ?x337)))
 (let (($x449 (= ?x186 ?x422)))
 (let (($x432 ((_ is stack ) ?x316)))
 (let (($x433 (= c__ center-to-right)))
 (let (($x434 (and $x433 $x432)))
 (let (($x435 (= c__ center-to-left)))
 (let (($x436 (and $x435 $x432)))
 (let ((?x323 (left s__)))
 (let (($x437 ((_ is stack ) ?x323)))
 (let (($x438 (= c__ left-to-right)))
 (let (($x439 (and $x438 $x437)))
 (let (($x470 (ite $x439 $x453 (ite $x436 $x453 (ite $x434 $x449 (ite $x431 $x450 (ite $x429 $x450 $x453)))))))
 (let ((?x299 (top ?x323)))
 (let ((?x416 (stack ?x299 ?x337)))
 (let (($x445 (= ?x186 ?x416)))
 (let (($x440 (= c__ left-to-center)))
 (let (($x441 (and $x440 $x437)))
 (ite $x441 $x445 $x470)))))))))))))))))))))))))))))))
(assert
 (let ((?x316 (center s__)))
 (let ((?x417 (center s___)))
 (let (($x455 (= ?x417 ?x316)))
 (let ((?x337 (right s__)))
 (let ((?x424 (top ?x337)))
 (let ((?x426 (stack ?x424 ?x316)))
 (let (($x452 (= ?x417 ?x426)))
 (let (($x427 ((_ is stack ) ?x337)))
 (let (($x428 (= c__ right-to-center)))
 (let (($x429 (and $x428 $x427)))
 (let (($x430 (= c__ right-to-left)))
 (let (($x431 (and $x430 $x427)))
 (let ((?x419 (rest ?x316)))
 (let (($x447 (= ?x417 ?x419)))
 (let (($x432 ((_ is stack ) ?x316)))
 (let (($x433 (= c__ center-to-right)))
 (let (($x434 (and $x433 $x432)))
 (let (($x435 (= c__ center-to-left)))
 (let (($x436 (and $x435 $x432)))
 (let ((?x323 (left s__)))
 (let ((?x299 (top ?x323)))
 (let ((?x418 (stack ?x299 ?x316)))
 (let (($x446 (= ?x417 ?x418)))
 (let (($x437 ((_ is stack ) ?x323)))
 (let (($x438 (= c__ left-to-right)))
 (let (($x439 (and $x438 $x437)))
 (let (($x469 (ite $x439 $x446 (ite $x436 $x447 (ite $x434 $x447 (ite $x431 $x455 (ite $x429 $x452 $x455)))))))
 (let (($x440 (= c__ left-to-center)))
 (let (($x441 (and $x440 $x437)))
 (ite $x441 $x455 $x469)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x183 (left s___)))
 (let ((?x363 (left s____)))
 (let (($x595 (= ?x363 ?x183)))
 (let ((?x186 (right s___)))
 (let ((?x562 (top ?x186)))
 (let ((?x563 (stack ?x562 ?x183)))
 (let (($x589 (= ?x363 ?x563)))
 (let (($x565 ((_ is stack ) ?x186)))
 (let (($x568 (= c___ right-to-left)))
 (let (($x569 (and $x568 $x565)))
 (let ((?x417 (center s___)))
 (let (($x570 ((_ is stack ) ?x417)))
 (let (($x571 (= c___ center-to-right)))
 (let (($x572 (and $x571 $x570)))
 (let ((?x558 (top ?x417)))
 (let ((?x559 (stack ?x558 ?x183)))
 (let (($x586 (= ?x363 ?x559)))
 (let (($x573 (= c___ center-to-left)))
 (let (($x574 (and $x573 $x570)))
 (let ((?x393 (rest ?x183)))
 (let (($x582 (= ?x363 ?x393)))
 (let (($x575 ((_ is stack ) ?x183)))
 (let (($x576 (= c___ left-to-right)))
 (let (($x577 (and $x576 $x575)))
 (let (($x578 (= c___ left-to-center)))
 (let (($x579 (and $x578 $x575)))
 (ite $x579 $x582 (ite $x577 $x582 (ite $x574 $x586 (ite $x572 $x595 (ite $x569 $x589 $x595))))))))))))))))))))))))))))))))
(assert
 (let ((?x186 (right s___)))
 (let ((?x394 (right s____)))
 (let (($x591 (= ?x394 ?x186)))
 (let ((?x561 (rest ?x186)))
 (let (($x588 (= ?x394 ?x561)))
 (let (($x565 ((_ is stack ) ?x186)))
 (let (($x566 (= c___ right-to-center)))
 (let (($x567 (and $x566 $x565)))
 (let (($x568 (= c___ right-to-left)))
 (let (($x569 (and $x568 $x565)))
 (let ((?x417 (center s___)))
 (let ((?x558 (top ?x417)))
 (let ((?x560 (stack ?x558 ?x186)))
 (let (($x587 (= ?x394 ?x560)))
 (let (($x570 ((_ is stack ) ?x417)))
 (let (($x571 (= c___ center-to-right)))
 (let (($x572 (and $x571 $x570)))
 (let (($x573 (= c___ center-to-left)))
 (let (($x574 (and $x573 $x570)))
 (let ((?x183 (left s___)))
 (let (($x575 ((_ is stack ) ?x183)))
 (let (($x576 (= c___ left-to-right)))
 (let (($x577 (and $x576 $x575)))
 (let (($x608 (ite $x577 $x591 (ite $x574 $x591 (ite $x572 $x587 (ite $x569 $x588 (ite $x567 $x588 $x591)))))))
 (let ((?x415 (top ?x183)))
 (let ((?x554 (stack ?x415 ?x186)))
 (let (($x583 (= ?x394 ?x554)))
 (let (($x578 (= c___ left-to-center)))
 (let (($x579 (and $x578 $x575)))
 (ite $x579 $x583 $x608)))))))))))))))))))))))))))))))
(assert
 (let ((?x417 (center s___)))
 (let ((?x555 (center s____)))
 (let (($x593 (= ?x555 ?x417)))
 (let ((?x186 (right s___)))
 (let ((?x562 (top ?x186)))
 (let ((?x564 (stack ?x562 ?x417)))
 (let (($x590 (= ?x555 ?x564)))
 (let (($x565 ((_ is stack ) ?x186)))
 (let (($x566 (= c___ right-to-center)))
 (let (($x567 (and $x566 $x565)))
 (let (($x568 (= c___ right-to-left)))
 (let (($x569 (and $x568 $x565)))
 (let ((?x557 (rest ?x417)))
 (let (($x585 (= ?x555 ?x557)))
 (let (($x570 ((_ is stack ) ?x417)))
 (let (($x571 (= c___ center-to-right)))
 (let (($x572 (and $x571 $x570)))
 (let (($x573 (= c___ center-to-left)))
 (let (($x574 (and $x573 $x570)))
 (let ((?x183 (left s___)))
 (let ((?x415 (top ?x183)))
 (let ((?x556 (stack ?x415 ?x417)))
 (let (($x584 (= ?x555 ?x556)))
 (let (($x575 ((_ is stack ) ?x183)))
 (let (($x576 (= c___ left-to-right)))
 (let (($x577 (and $x576 $x575)))
 (let (($x607 (ite $x577 $x584 (ite $x574 $x585 (ite $x572 $x585 (ite $x569 $x593 (ite $x567 $x590 $x593)))))))
 (let (($x578 (= c___ left-to-center)))
 (let (($x579 (and $x578 $x575)))
 (ite $x579 $x593 $x607)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x363 (left s____)))
 (let ((?x473 (left s_____)))
 (let (($x733 (= ?x473 ?x363)))
 (let ((?x394 (right s____)))
 (let ((?x700 (top ?x394)))
 (let ((?x701 (stack ?x700 ?x363)))
 (let (($x727 (= ?x473 ?x701)))
 (let (($x703 ((_ is stack ) ?x394)))
 (let (($x706 (= c____ right-to-left)))
 (let (($x707 (and $x706 $x703)))
 (let ((?x555 (center s____)))
 (let (($x708 ((_ is stack ) ?x555)))
 (let (($x709 (= c____ center-to-right)))
 (let (($x710 (and $x709 $x708)))
 (let ((?x696 (top ?x555)))
 (let ((?x697 (stack ?x696 ?x363)))
 (let (($x724 (= ?x473 ?x697)))
 (let (($x711 (= c____ center-to-left)))
 (let (($x712 (and $x711 $x708)))
 (let ((?x506 (rest ?x363)))
 (let (($x720 (= ?x473 ?x506)))
 (let (($x713 ((_ is stack ) ?x363)))
 (let (($x714 (= c____ left-to-right)))
 (let (($x715 (and $x714 $x713)))
 (let (($x716 (= c____ left-to-center)))
 (let (($x717 (and $x716 $x713)))
 (ite $x717 $x720 (ite $x715 $x720 (ite $x712 $x724 (ite $x710 $x733 (ite $x707 $x727 $x733))))))))))))))))))))))))))))))))
(assert
 (let ((?x394 (right s____)))
 (let ((?x507 (right s_____)))
 (let (($x729 (= ?x507 ?x394)))
 (let ((?x699 (rest ?x394)))
 (let (($x726 (= ?x507 ?x699)))
 (let (($x703 ((_ is stack ) ?x394)))
 (let (($x704 (= c____ right-to-center)))
 (let (($x705 (and $x704 $x703)))
 (let (($x706 (= c____ right-to-left)))
 (let (($x707 (and $x706 $x703)))
 (let ((?x555 (center s____)))
 (let ((?x696 (top ?x555)))
 (let ((?x698 (stack ?x696 ?x394)))
 (let (($x725 (= ?x507 ?x698)))
 (let (($x708 ((_ is stack ) ?x555)))
 (let (($x709 (= c____ center-to-right)))
 (let (($x710 (and $x709 $x708)))
 (let (($x711 (= c____ center-to-left)))
 (let (($x712 (and $x711 $x708)))
 (let ((?x363 (left s____)))
 (let (($x713 ((_ is stack ) ?x363)))
 (let (($x714 (= c____ left-to-right)))
 (let (($x715 (and $x714 $x713)))
 (let (($x746 (ite $x715 $x729 (ite $x712 $x729 (ite $x710 $x725 (ite $x707 $x726 (ite $x705 $x726 $x729)))))))
 (let ((?x553 (top ?x363)))
 (let ((?x692 (stack ?x553 ?x394)))
 (let (($x721 (= ?x507 ?x692)))
 (let (($x716 (= c____ left-to-center)))
 (let (($x717 (and $x716 $x713)))
 (ite $x717 $x721 $x746)))))))))))))))))))))))))))))))
(assert
 (let ((?x555 (center s____)))
 (let ((?x693 (center s_____)))
 (let (($x731 (= ?x693 ?x555)))
 (let ((?x394 (right s____)))
 (let ((?x700 (top ?x394)))
 (let ((?x702 (stack ?x700 ?x555)))
 (let (($x728 (= ?x693 ?x702)))
 (let (($x703 ((_ is stack ) ?x394)))
 (let (($x704 (= c____ right-to-center)))
 (let (($x705 (and $x704 $x703)))
 (let (($x706 (= c____ right-to-left)))
 (let (($x707 (and $x706 $x703)))
 (let ((?x695 (rest ?x555)))
 (let (($x723 (= ?x693 ?x695)))
 (let (($x708 ((_ is stack ) ?x555)))
 (let (($x709 (= c____ center-to-right)))
 (let (($x710 (and $x709 $x708)))
 (let (($x711 (= c____ center-to-left)))
 (let (($x712 (and $x711 $x708)))
 (let ((?x363 (left s____)))
 (let ((?x553 (top ?x363)))
 (let ((?x694 (stack ?x553 ?x555)))
 (let (($x722 (= ?x693 ?x694)))
 (let (($x713 ((_ is stack ) ?x363)))
 (let (($x714 (= c____ left-to-right)))
 (let (($x715 (and $x714 $x713)))
 (let (($x745 (ite $x715 $x722 (ite $x712 $x723 (ite $x710 $x723 (ite $x707 $x731 (ite $x705 $x728 $x731)))))))
 (let (($x716 (= c____ left-to-center)))
 (let (($x717 (and $x716 $x713)))
 (ite $x717 $x731 $x745)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x473 (left s_____)))
 (let ((?x611 (left s______)))
 (let (($x871 (= ?x611 ?x473)))
 (let ((?x507 (right s_____)))
 (let ((?x838 (top ?x507)))
 (let ((?x839 (stack ?x838 ?x473)))
 (let (($x865 (= ?x611 ?x839)))
 (let (($x841 ((_ is stack ) ?x507)))
 (let (($x844 (= c_____ right-to-left)))
 (let (($x845 (and $x844 $x841)))
 (let ((?x693 (center s_____)))
 (let (($x846 ((_ is stack ) ?x693)))
 (let (($x847 (= c_____ center-to-right)))
 (let (($x848 (and $x847 $x846)))
 (let ((?x834 (top ?x693)))
 (let ((?x835 (stack ?x834 ?x473)))
 (let (($x862 (= ?x611 ?x835)))
 (let (($x849 (= c_____ center-to-left)))
 (let (($x850 (and $x849 $x846)))
 (let ((?x644 (rest ?x473)))
 (let (($x858 (= ?x611 ?x644)))
 (let (($x851 ((_ is stack ) ?x473)))
 (let (($x852 (= c_____ left-to-right)))
 (let (($x853 (and $x852 $x851)))
 (let (($x854 (= c_____ left-to-center)))
 (let (($x855 (and $x854 $x851)))
 (ite $x855 $x858 (ite $x853 $x858 (ite $x850 $x862 (ite $x848 $x871 (ite $x845 $x865 $x871))))))))))))))))))))))))))))))))
(assert
 (let ((?x507 (right s_____)))
 (let ((?x645 (right s______)))
 (let (($x867 (= ?x645 ?x507)))
 (let ((?x837 (rest ?x507)))
 (let (($x864 (= ?x645 ?x837)))
 (let (($x841 ((_ is stack ) ?x507)))
 (let (($x842 (= c_____ right-to-center)))
 (let (($x843 (and $x842 $x841)))
 (let (($x844 (= c_____ right-to-left)))
 (let (($x845 (and $x844 $x841)))
 (let ((?x693 (center s_____)))
 (let ((?x834 (top ?x693)))
 (let ((?x836 (stack ?x834 ?x507)))
 (let (($x863 (= ?x645 ?x836)))
 (let (($x846 ((_ is stack ) ?x693)))
 (let (($x847 (= c_____ center-to-right)))
 (let (($x848 (and $x847 $x846)))
 (let (($x849 (= c_____ center-to-left)))
 (let (($x850 (and $x849 $x846)))
 (let ((?x473 (left s_____)))
 (let (($x851 ((_ is stack ) ?x473)))
 (let (($x852 (= c_____ left-to-right)))
 (let (($x853 (and $x852 $x851)))
 (let (($x884 (ite $x853 $x867 (ite $x850 $x867 (ite $x848 $x863 (ite $x845 $x864 (ite $x843 $x864 $x867)))))))
 (let ((?x691 (top ?x473)))
 (let ((?x830 (stack ?x691 ?x507)))
 (let (($x859 (= ?x645 ?x830)))
 (let (($x854 (= c_____ left-to-center)))
 (let (($x855 (and $x854 $x851)))
 (ite $x855 $x859 $x884)))))))))))))))))))))))))))))))
(assert
 (let ((?x693 (center s_____)))
 (let ((?x831 (center s______)))
 (let (($x869 (= ?x831 ?x693)))
 (let ((?x507 (right s_____)))
 (let ((?x838 (top ?x507)))
 (let ((?x840 (stack ?x838 ?x693)))
 (let (($x866 (= ?x831 ?x840)))
 (let (($x841 ((_ is stack ) ?x507)))
 (let (($x842 (= c_____ right-to-center)))
 (let (($x843 (and $x842 $x841)))
 (let (($x844 (= c_____ right-to-left)))
 (let (($x845 (and $x844 $x841)))
 (let ((?x833 (rest ?x693)))
 (let (($x861 (= ?x831 ?x833)))
 (let (($x846 ((_ is stack ) ?x693)))
 (let (($x847 (= c_____ center-to-right)))
 (let (($x848 (and $x847 $x846)))
 (let (($x849 (= c_____ center-to-left)))
 (let (($x850 (and $x849 $x846)))
 (let ((?x473 (left s_____)))
 (let ((?x691 (top ?x473)))
 (let ((?x832 (stack ?x691 ?x693)))
 (let (($x860 (= ?x831 ?x832)))
 (let (($x851 ((_ is stack ) ?x473)))
 (let (($x852 (= c_____ left-to-right)))
 (let (($x853 (and $x852 $x851)))
 (let (($x883 (ite $x853 $x860 (ite $x850 $x861 (ite $x848 $x861 (ite $x845 $x869 (ite $x843 $x866 $x869)))))))
 (let (($x854 (= c_____ left-to-center)))
 (let (($x855 (and $x854 $x851)))
 (ite $x855 $x869 $x883)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x611 (left s______)))
 (let ((?x749 (left s_______)))
 (let (($x1009 (= ?x749 ?x611)))
 (let ((?x645 (right s______)))
 (let ((?x976 (top ?x645)))
 (let ((?x977 (stack ?x976 ?x611)))
 (let (($x1003 (= ?x749 ?x977)))
 (let (($x979 ((_ is stack ) ?x645)))
 (let (($x982 (= c______ right-to-left)))
 (let (($x983 (and $x982 $x979)))
 (let ((?x831 (center s______)))
 (let (($x984 ((_ is stack ) ?x831)))
 (let (($x985 (= c______ center-to-right)))
 (let (($x986 (and $x985 $x984)))
 (let ((?x972 (top ?x831)))
 (let ((?x973 (stack ?x972 ?x611)))
 (let (($x1000 (= ?x749 ?x973)))
 (let (($x987 (= c______ center-to-left)))
 (let (($x988 (and $x987 $x984)))
 (let ((?x782 (rest ?x611)))
 (let (($x996 (= ?x749 ?x782)))
 (let (($x989 ((_ is stack ) ?x611)))
 (let (($x990 (= c______ left-to-right)))
 (let (($x991 (and $x990 $x989)))
 (let (($x992 (= c______ left-to-center)))
 (let (($x993 (and $x992 $x989)))
 (ite $x993 $x996 (ite $x991 $x996 (ite $x988 $x1000 (ite $x986 $x1009 (ite $x983 $x1003 $x1009))))))))))))))))))))))))))))))))
(assert
 (let ((?x645 (right s______)))
 (let ((?x783 (right s_______)))
 (let (($x1005 (= ?x783 ?x645)))
 (let ((?x975 (rest ?x645)))
 (let (($x1002 (= ?x783 ?x975)))
 (let (($x979 ((_ is stack ) ?x645)))
 (let (($x980 (= c______ right-to-center)))
 (let (($x981 (and $x980 $x979)))
 (let (($x982 (= c______ right-to-left)))
 (let (($x983 (and $x982 $x979)))
 (let ((?x831 (center s______)))
 (let ((?x972 (top ?x831)))
 (let ((?x974 (stack ?x972 ?x645)))
 (let (($x1001 (= ?x783 ?x974)))
 (let (($x984 ((_ is stack ) ?x831)))
 (let (($x985 (= c______ center-to-right)))
 (let (($x986 (and $x985 $x984)))
 (let (($x987 (= c______ center-to-left)))
 (let (($x988 (and $x987 $x984)))
 (let ((?x611 (left s______)))
 (let (($x989 ((_ is stack ) ?x611)))
 (let (($x990 (= c______ left-to-right)))
 (let (($x991 (and $x990 $x989)))
 (let (($x1022 (ite $x991 $x1005 (ite $x988 $x1005 (ite $x986 $x1001 (ite $x983 $x1002 (ite $x981 $x1002 $x1005)))))))
 (let ((?x829 (top ?x611)))
 (let ((?x968 (stack ?x829 ?x645)))
 (let (($x997 (= ?x783 ?x968)))
 (let (($x992 (= c______ left-to-center)))
 (let (($x993 (and $x992 $x989)))
 (ite $x993 $x997 $x1022)))))))))))))))))))))))))))))))
(assert
 (let ((?x831 (center s______)))
 (let ((?x969 (center s_______)))
 (let (($x1007 (= ?x969 ?x831)))
 (let ((?x645 (right s______)))
 (let ((?x976 (top ?x645)))
 (let ((?x978 (stack ?x976 ?x831)))
 (let (($x1004 (= ?x969 ?x978)))
 (let (($x979 ((_ is stack ) ?x645)))
 (let (($x980 (= c______ right-to-center)))
 (let (($x981 (and $x980 $x979)))
 (let (($x982 (= c______ right-to-left)))
 (let (($x983 (and $x982 $x979)))
 (let ((?x971 (rest ?x831)))
 (let (($x999 (= ?x969 ?x971)))
 (let (($x984 ((_ is stack ) ?x831)))
 (let (($x985 (= c______ center-to-right)))
 (let (($x986 (and $x985 $x984)))
 (let (($x987 (= c______ center-to-left)))
 (let (($x988 (and $x987 $x984)))
 (let ((?x611 (left s______)))
 (let ((?x829 (top ?x611)))
 (let ((?x970 (stack ?x829 ?x831)))
 (let (($x998 (= ?x969 ?x970)))
 (let (($x989 ((_ is stack ) ?x611)))
 (let (($x990 (= c______ left-to-right)))
 (let (($x991 (and $x990 $x989)))
 (let (($x1021 (ite $x991 $x998 (ite $x988 $x999 (ite $x986 $x999 (ite $x983 $x1007 (ite $x981 $x1004 $x1007)))))))
 (let (($x992 (= c______ left-to-center)))
 (let (($x993 (and $x992 $x989)))
 (ite $x993 $x1007 $x1021)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x749 (left s_______)))
 (let ((?x887 (left s________)))
 (let (($x1147 (= ?x887 ?x749)))
 (let ((?x783 (right s_______)))
 (let ((?x1114 (top ?x783)))
 (let ((?x1115 (stack ?x1114 ?x749)))
 (let (($x1141 (= ?x887 ?x1115)))
 (let (($x1117 ((_ is stack ) ?x783)))
 (let (($x1120 (= c_______ right-to-left)))
 (let (($x1121 (and $x1120 $x1117)))
 (let ((?x969 (center s_______)))
 (let (($x1122 ((_ is stack ) ?x969)))
 (let (($x1123 (= c_______ center-to-right)))
 (let (($x1124 (and $x1123 $x1122)))
 (let ((?x1110 (top ?x969)))
 (let ((?x1111 (stack ?x1110 ?x749)))
 (let (($x1138 (= ?x887 ?x1111)))
 (let (($x1125 (= c_______ center-to-left)))
 (let (($x1126 (and $x1125 $x1122)))
 (let ((?x920 (rest ?x749)))
 (let (($x1134 (= ?x887 ?x920)))
 (let (($x1127 ((_ is stack ) ?x749)))
 (let (($x1128 (= c_______ left-to-right)))
 (let (($x1129 (and $x1128 $x1127)))
 (let (($x1130 (= c_______ left-to-center)))
 (let (($x1131 (and $x1130 $x1127)))
 (ite $x1131 $x1134 (ite $x1129 $x1134 (ite $x1126 $x1138 (ite $x1124 $x1147 (ite $x1121 $x1141 $x1147))))))))))))))))))))))))))))))))
(assert
 (let ((?x783 (right s_______)))
 (let ((?x921 (right s________)))
 (let (($x1143 (= ?x921 ?x783)))
 (let ((?x1113 (rest ?x783)))
 (let (($x1140 (= ?x921 ?x1113)))
 (let (($x1117 ((_ is stack ) ?x783)))
 (let (($x1118 (= c_______ right-to-center)))
 (let (($x1119 (and $x1118 $x1117)))
 (let (($x1120 (= c_______ right-to-left)))
 (let (($x1121 (and $x1120 $x1117)))
 (let ((?x969 (center s_______)))
 (let ((?x1110 (top ?x969)))
 (let ((?x1112 (stack ?x1110 ?x783)))
 (let (($x1139 (= ?x921 ?x1112)))
 (let (($x1122 ((_ is stack ) ?x969)))
 (let (($x1123 (= c_______ center-to-right)))
 (let (($x1124 (and $x1123 $x1122)))
 (let (($x1125 (= c_______ center-to-left)))
 (let (($x1126 (and $x1125 $x1122)))
 (let ((?x749 (left s_______)))
 (let (($x1127 ((_ is stack ) ?x749)))
 (let (($x1128 (= c_______ left-to-right)))
 (let (($x1129 (and $x1128 $x1127)))
 (let (($x1160 (ite $x1129 $x1143 (ite $x1126 $x1143 (ite $x1124 $x1139 (ite $x1121 $x1140 (ite $x1119 $x1140 $x1143)))))))
 (let ((?x967 (top ?x749)))
 (let ((?x1106 (stack ?x967 ?x783)))
 (let (($x1135 (= ?x921 ?x1106)))
 (let (($x1130 (= c_______ left-to-center)))
 (let (($x1131 (and $x1130 $x1127)))
 (ite $x1131 $x1135 $x1160)))))))))))))))))))))))))))))))
(assert
 (let ((?x969 (center s_______)))
 (let ((?x1107 (center s________)))
 (let (($x1145 (= ?x1107 ?x969)))
 (let ((?x783 (right s_______)))
 (let ((?x1114 (top ?x783)))
 (let ((?x1116 (stack ?x1114 ?x969)))
 (let (($x1142 (= ?x1107 ?x1116)))
 (let (($x1117 ((_ is stack ) ?x783)))
 (let (($x1118 (= c_______ right-to-center)))
 (let (($x1119 (and $x1118 $x1117)))
 (let (($x1120 (= c_______ right-to-left)))
 (let (($x1121 (and $x1120 $x1117)))
 (let ((?x1109 (rest ?x969)))
 (let (($x1137 (= ?x1107 ?x1109)))
 (let (($x1122 ((_ is stack ) ?x969)))
 (let (($x1123 (= c_______ center-to-right)))
 (let (($x1124 (and $x1123 $x1122)))
 (let (($x1125 (= c_______ center-to-left)))
 (let (($x1126 (and $x1125 $x1122)))
 (let ((?x749 (left s_______)))
 (let ((?x967 (top ?x749)))
 (let ((?x1108 (stack ?x967 ?x969)))
 (let (($x1136 (= ?x1107 ?x1108)))
 (let (($x1127 ((_ is stack ) ?x749)))
 (let (($x1128 (= c_______ left-to-right)))
 (let (($x1129 (and $x1128 $x1127)))
 (let (($x1159 (ite $x1129 $x1136 (ite $x1126 $x1137 (ite $x1124 $x1137 (ite $x1121 $x1145 (ite $x1119 $x1142 $x1145)))))))
 (let (($x1130 (= c_______ left-to-center)))
 (let (($x1131 (and $x1130 $x1127)))
 (ite $x1131 $x1145 $x1159)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x887 (left s________)))
 (let ((?x1025 (left s_________)))
 (let (($x1285 (= ?x1025 ?x887)))
 (let ((?x921 (right s________)))
 (let ((?x1252 (top ?x921)))
 (let ((?x1253 (stack ?x1252 ?x887)))
 (let (($x1279 (= ?x1025 ?x1253)))
 (let (($x1255 ((_ is stack ) ?x921)))
 (let (($x1258 (= c________ right-to-left)))
 (let (($x1259 (and $x1258 $x1255)))
 (let ((?x1107 (center s________)))
 (let (($x1260 ((_ is stack ) ?x1107)))
 (let (($x1261 (= c________ center-to-right)))
 (let (($x1262 (and $x1261 $x1260)))
 (let ((?x1248 (top ?x1107)))
 (let ((?x1249 (stack ?x1248 ?x887)))
 (let (($x1276 (= ?x1025 ?x1249)))
 (let (($x1263 (= c________ center-to-left)))
 (let (($x1264 (and $x1263 $x1260)))
 (let ((?x1058 (rest ?x887)))
 (let (($x1272 (= ?x1025 ?x1058)))
 (let (($x1265 ((_ is stack ) ?x887)))
 (let (($x1266 (= c________ left-to-right)))
 (let (($x1267 (and $x1266 $x1265)))
 (let (($x1268 (= c________ left-to-center)))
 (let (($x1269 (and $x1268 $x1265)))
 (ite $x1269 $x1272 (ite $x1267 $x1272 (ite $x1264 $x1276 (ite $x1262 $x1285 (ite $x1259 $x1279 $x1285))))))))))))))))))))))))))))))))
(assert
 (let ((?x921 (right s________)))
 (let ((?x1059 (right s_________)))
 (let (($x1281 (= ?x1059 ?x921)))
 (let ((?x1251 (rest ?x921)))
 (let (($x1278 (= ?x1059 ?x1251)))
 (let (($x1255 ((_ is stack ) ?x921)))
 (let (($x1256 (= c________ right-to-center)))
 (let (($x1257 (and $x1256 $x1255)))
 (let (($x1258 (= c________ right-to-left)))
 (let (($x1259 (and $x1258 $x1255)))
 (let ((?x1107 (center s________)))
 (let ((?x1248 (top ?x1107)))
 (let ((?x1250 (stack ?x1248 ?x921)))
 (let (($x1277 (= ?x1059 ?x1250)))
 (let (($x1260 ((_ is stack ) ?x1107)))
 (let (($x1261 (= c________ center-to-right)))
 (let (($x1262 (and $x1261 $x1260)))
 (let (($x1263 (= c________ center-to-left)))
 (let (($x1264 (and $x1263 $x1260)))
 (let ((?x887 (left s________)))
 (let (($x1265 ((_ is stack ) ?x887)))
 (let (($x1266 (= c________ left-to-right)))
 (let (($x1267 (and $x1266 $x1265)))
 (let (($x1298 (ite $x1267 $x1281 (ite $x1264 $x1281 (ite $x1262 $x1277 (ite $x1259 $x1278 (ite $x1257 $x1278 $x1281)))))))
 (let ((?x1105 (top ?x887)))
 (let ((?x1244 (stack ?x1105 ?x921)))
 (let (($x1273 (= ?x1059 ?x1244)))
 (let (($x1268 (= c________ left-to-center)))
 (let (($x1269 (and $x1268 $x1265)))
 (ite $x1269 $x1273 $x1298)))))))))))))))))))))))))))))))
(assert
 (let ((?x1107 (center s________)))
 (let ((?x1245 (center s_________)))
 (let (($x1283 (= ?x1245 ?x1107)))
 (let ((?x921 (right s________)))
 (let ((?x1252 (top ?x921)))
 (let ((?x1254 (stack ?x1252 ?x1107)))
 (let (($x1280 (= ?x1245 ?x1254)))
 (let (($x1255 ((_ is stack ) ?x921)))
 (let (($x1256 (= c________ right-to-center)))
 (let (($x1257 (and $x1256 $x1255)))
 (let (($x1258 (= c________ right-to-left)))
 (let (($x1259 (and $x1258 $x1255)))
 (let ((?x1247 (rest ?x1107)))
 (let (($x1275 (= ?x1245 ?x1247)))
 (let (($x1260 ((_ is stack ) ?x1107)))
 (let (($x1261 (= c________ center-to-right)))
 (let (($x1262 (and $x1261 $x1260)))
 (let (($x1263 (= c________ center-to-left)))
 (let (($x1264 (and $x1263 $x1260)))
 (let ((?x887 (left s________)))
 (let ((?x1105 (top ?x887)))
 (let ((?x1246 (stack ?x1105 ?x1107)))
 (let (($x1274 (= ?x1245 ?x1246)))
 (let (($x1265 ((_ is stack ) ?x887)))
 (let (($x1266 (= c________ left-to-right)))
 (let (($x1267 (and $x1266 $x1265)))
 (let (($x1297 (ite $x1267 $x1274 (ite $x1264 $x1275 (ite $x1262 $x1275 (ite $x1259 $x1283 (ite $x1257 $x1280 $x1283)))))))
 (let (($x1268 (= c________ left-to-center)))
 (let (($x1269 (and $x1268 $x1265)))
 (ite $x1269 $x1283 $x1297)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1025 (left s_________)))
 (let ((?x1163 (left s__________)))
 (let (($x1423 (= ?x1163 ?x1025)))
 (let ((?x1059 (right s_________)))
 (let ((?x1390 (top ?x1059)))
 (let ((?x1391 (stack ?x1390 ?x1025)))
 (let (($x1417 (= ?x1163 ?x1391)))
 (let (($x1393 ((_ is stack ) ?x1059)))
 (let (($x1396 (= c_________ right-to-left)))
 (let (($x1397 (and $x1396 $x1393)))
 (let ((?x1245 (center s_________)))
 (let (($x1398 ((_ is stack ) ?x1245)))
 (let (($x1399 (= c_________ center-to-right)))
 (let (($x1400 (and $x1399 $x1398)))
 (let ((?x1386 (top ?x1245)))
 (let ((?x1387 (stack ?x1386 ?x1025)))
 (let (($x1414 (= ?x1163 ?x1387)))
 (let (($x1401 (= c_________ center-to-left)))
 (let (($x1402 (and $x1401 $x1398)))
 (let ((?x1196 (rest ?x1025)))
 (let (($x1410 (= ?x1163 ?x1196)))
 (let (($x1403 ((_ is stack ) ?x1025)))
 (let (($x1404 (= c_________ left-to-right)))
 (let (($x1405 (and $x1404 $x1403)))
 (let (($x1406 (= c_________ left-to-center)))
 (let (($x1407 (and $x1406 $x1403)))
 (ite $x1407 $x1410 (ite $x1405 $x1410 (ite $x1402 $x1414 (ite $x1400 $x1423 (ite $x1397 $x1417 $x1423))))))))))))))))))))))))))))))))
(assert
 (let ((?x1059 (right s_________)))
 (let ((?x1197 (right s__________)))
 (let (($x1419 (= ?x1197 ?x1059)))
 (let ((?x1389 (rest ?x1059)))
 (let (($x1416 (= ?x1197 ?x1389)))
 (let (($x1393 ((_ is stack ) ?x1059)))
 (let (($x1394 (= c_________ right-to-center)))
 (let (($x1395 (and $x1394 $x1393)))
 (let (($x1396 (= c_________ right-to-left)))
 (let (($x1397 (and $x1396 $x1393)))
 (let ((?x1245 (center s_________)))
 (let ((?x1386 (top ?x1245)))
 (let ((?x1388 (stack ?x1386 ?x1059)))
 (let (($x1415 (= ?x1197 ?x1388)))
 (let (($x1398 ((_ is stack ) ?x1245)))
 (let (($x1399 (= c_________ center-to-right)))
 (let (($x1400 (and $x1399 $x1398)))
 (let (($x1401 (= c_________ center-to-left)))
 (let (($x1402 (and $x1401 $x1398)))
 (let ((?x1025 (left s_________)))
 (let (($x1403 ((_ is stack ) ?x1025)))
 (let (($x1404 (= c_________ left-to-right)))
 (let (($x1405 (and $x1404 $x1403)))
 (let (($x1436 (ite $x1405 $x1419 (ite $x1402 $x1419 (ite $x1400 $x1415 (ite $x1397 $x1416 (ite $x1395 $x1416 $x1419)))))))
 (let ((?x1243 (top ?x1025)))
 (let ((?x1382 (stack ?x1243 ?x1059)))
 (let (($x1411 (= ?x1197 ?x1382)))
 (let (($x1406 (= c_________ left-to-center)))
 (let (($x1407 (and $x1406 $x1403)))
 (ite $x1407 $x1411 $x1436)))))))))))))))))))))))))))))))
(assert
 (let ((?x1245 (center s_________)))
 (let ((?x1383 (center s__________)))
 (let (($x1421 (= ?x1383 ?x1245)))
 (let ((?x1059 (right s_________)))
 (let ((?x1390 (top ?x1059)))
 (let ((?x1392 (stack ?x1390 ?x1245)))
 (let (($x1418 (= ?x1383 ?x1392)))
 (let (($x1393 ((_ is stack ) ?x1059)))
 (let (($x1394 (= c_________ right-to-center)))
 (let (($x1395 (and $x1394 $x1393)))
 (let (($x1396 (= c_________ right-to-left)))
 (let (($x1397 (and $x1396 $x1393)))
 (let ((?x1385 (rest ?x1245)))
 (let (($x1413 (= ?x1383 ?x1385)))
 (let (($x1398 ((_ is stack ) ?x1245)))
 (let (($x1399 (= c_________ center-to-right)))
 (let (($x1400 (and $x1399 $x1398)))
 (let (($x1401 (= c_________ center-to-left)))
 (let (($x1402 (and $x1401 $x1398)))
 (let ((?x1025 (left s_________)))
 (let ((?x1243 (top ?x1025)))
 (let ((?x1384 (stack ?x1243 ?x1245)))
 (let (($x1412 (= ?x1383 ?x1384)))
 (let (($x1403 ((_ is stack ) ?x1025)))
 (let (($x1404 (= c_________ left-to-right)))
 (let (($x1405 (and $x1404 $x1403)))
 (let (($x1435 (ite $x1405 $x1412 (ite $x1402 $x1413 (ite $x1400 $x1413 (ite $x1397 $x1421 (ite $x1395 $x1418 $x1421)))))))
 (let (($x1406 (= c_________ left-to-center)))
 (let (($x1407 (and $x1406 $x1403)))
 (ite $x1407 $x1421 $x1435)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1163 (left s__________)))
 (let ((?x1301 (left s___________)))
 (let (($x1561 (= ?x1301 ?x1163)))
 (let ((?x1197 (right s__________)))
 (let ((?x1528 (top ?x1197)))
 (let ((?x1529 (stack ?x1528 ?x1163)))
 (let (($x1555 (= ?x1301 ?x1529)))
 (let (($x1531 ((_ is stack ) ?x1197)))
 (let (($x1534 (= c__________ right-to-left)))
 (let (($x1535 (and $x1534 $x1531)))
 (let ((?x1383 (center s__________)))
 (let (($x1536 ((_ is stack ) ?x1383)))
 (let (($x1537 (= c__________ center-to-right)))
 (let (($x1538 (and $x1537 $x1536)))
 (let ((?x1524 (top ?x1383)))
 (let ((?x1525 (stack ?x1524 ?x1163)))
 (let (($x1552 (= ?x1301 ?x1525)))
 (let (($x1539 (= c__________ center-to-left)))
 (let (($x1540 (and $x1539 $x1536)))
 (let ((?x1334 (rest ?x1163)))
 (let (($x1548 (= ?x1301 ?x1334)))
 (let (($x1541 ((_ is stack ) ?x1163)))
 (let (($x1542 (= c__________ left-to-right)))
 (let (($x1543 (and $x1542 $x1541)))
 (let (($x1544 (= c__________ left-to-center)))
 (let (($x1545 (and $x1544 $x1541)))
 (ite $x1545 $x1548 (ite $x1543 $x1548 (ite $x1540 $x1552 (ite $x1538 $x1561 (ite $x1535 $x1555 $x1561))))))))))))))))))))))))))))))))
(assert
 (let ((?x1197 (right s__________)))
 (let ((?x1335 (right s___________)))
 (let (($x1557 (= ?x1335 ?x1197)))
 (let ((?x1527 (rest ?x1197)))
 (let (($x1554 (= ?x1335 ?x1527)))
 (let (($x1531 ((_ is stack ) ?x1197)))
 (let (($x1532 (= c__________ right-to-center)))
 (let (($x1533 (and $x1532 $x1531)))
 (let (($x1534 (= c__________ right-to-left)))
 (let (($x1535 (and $x1534 $x1531)))
 (let ((?x1383 (center s__________)))
 (let ((?x1524 (top ?x1383)))
 (let ((?x1526 (stack ?x1524 ?x1197)))
 (let (($x1553 (= ?x1335 ?x1526)))
 (let (($x1536 ((_ is stack ) ?x1383)))
 (let (($x1537 (= c__________ center-to-right)))
 (let (($x1538 (and $x1537 $x1536)))
 (let (($x1539 (= c__________ center-to-left)))
 (let (($x1540 (and $x1539 $x1536)))
 (let ((?x1163 (left s__________)))
 (let (($x1541 ((_ is stack ) ?x1163)))
 (let (($x1542 (= c__________ left-to-right)))
 (let (($x1543 (and $x1542 $x1541)))
 (let (($x1574 (ite $x1543 $x1557 (ite $x1540 $x1557 (ite $x1538 $x1553 (ite $x1535 $x1554 (ite $x1533 $x1554 $x1557)))))))
 (let ((?x1381 (top ?x1163)))
 (let ((?x1520 (stack ?x1381 ?x1197)))
 (let (($x1549 (= ?x1335 ?x1520)))
 (let (($x1544 (= c__________ left-to-center)))
 (let (($x1545 (and $x1544 $x1541)))
 (ite $x1545 $x1549 $x1574)))))))))))))))))))))))))))))))
(assert
 (let ((?x1383 (center s__________)))
 (let ((?x1521 (center s___________)))
 (let (($x1559 (= ?x1521 ?x1383)))
 (let ((?x1197 (right s__________)))
 (let ((?x1528 (top ?x1197)))
 (let ((?x1530 (stack ?x1528 ?x1383)))
 (let (($x1556 (= ?x1521 ?x1530)))
 (let (($x1531 ((_ is stack ) ?x1197)))
 (let (($x1532 (= c__________ right-to-center)))
 (let (($x1533 (and $x1532 $x1531)))
 (let (($x1534 (= c__________ right-to-left)))
 (let (($x1535 (and $x1534 $x1531)))
 (let ((?x1523 (rest ?x1383)))
 (let (($x1551 (= ?x1521 ?x1523)))
 (let (($x1536 ((_ is stack ) ?x1383)))
 (let (($x1537 (= c__________ center-to-right)))
 (let (($x1538 (and $x1537 $x1536)))
 (let (($x1539 (= c__________ center-to-left)))
 (let (($x1540 (and $x1539 $x1536)))
 (let ((?x1163 (left s__________)))
 (let ((?x1381 (top ?x1163)))
 (let ((?x1522 (stack ?x1381 ?x1383)))
 (let (($x1550 (= ?x1521 ?x1522)))
 (let (($x1541 ((_ is stack ) ?x1163)))
 (let (($x1542 (= c__________ left-to-right)))
 (let (($x1543 (and $x1542 $x1541)))
 (let (($x1573 (ite $x1543 $x1550 (ite $x1540 $x1551 (ite $x1538 $x1551 (ite $x1535 $x1559 (ite $x1533 $x1556 $x1559)))))))
 (let (($x1544 (= c__________ left-to-center)))
 (let (($x1545 (and $x1544 $x1541)))
 (ite $x1545 $x1559 $x1573)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1301 (left s___________)))
 (let ((?x1439 (left s____________)))
 (let (($x1699 (= ?x1439 ?x1301)))
 (let ((?x1335 (right s___________)))
 (let ((?x1666 (top ?x1335)))
 (let ((?x1667 (stack ?x1666 ?x1301)))
 (let (($x1693 (= ?x1439 ?x1667)))
 (let (($x1669 ((_ is stack ) ?x1335)))
 (let (($x1672 (= c___________ right-to-left)))
 (let (($x1673 (and $x1672 $x1669)))
 (let ((?x1521 (center s___________)))
 (let (($x1674 ((_ is stack ) ?x1521)))
 (let (($x1675 (= c___________ center-to-right)))
 (let (($x1676 (and $x1675 $x1674)))
 (let ((?x1662 (top ?x1521)))
 (let ((?x1663 (stack ?x1662 ?x1301)))
 (let (($x1690 (= ?x1439 ?x1663)))
 (let (($x1677 (= c___________ center-to-left)))
 (let (($x1678 (and $x1677 $x1674)))
 (let ((?x1472 (rest ?x1301)))
 (let (($x1686 (= ?x1439 ?x1472)))
 (let (($x1679 ((_ is stack ) ?x1301)))
 (let (($x1680 (= c___________ left-to-right)))
 (let (($x1681 (and $x1680 $x1679)))
 (let (($x1682 (= c___________ left-to-center)))
 (let (($x1683 (and $x1682 $x1679)))
 (ite $x1683 $x1686 (ite $x1681 $x1686 (ite $x1678 $x1690 (ite $x1676 $x1699 (ite $x1673 $x1693 $x1699))))))))))))))))))))))))))))))))
(assert
 (let ((?x1335 (right s___________)))
 (let ((?x1473 (right s____________)))
 (let (($x1695 (= ?x1473 ?x1335)))
 (let ((?x1665 (rest ?x1335)))
 (let (($x1692 (= ?x1473 ?x1665)))
 (let (($x1669 ((_ is stack ) ?x1335)))
 (let (($x1670 (= c___________ right-to-center)))
 (let (($x1671 (and $x1670 $x1669)))
 (let (($x1672 (= c___________ right-to-left)))
 (let (($x1673 (and $x1672 $x1669)))
 (let ((?x1521 (center s___________)))
 (let ((?x1662 (top ?x1521)))
 (let ((?x1664 (stack ?x1662 ?x1335)))
 (let (($x1691 (= ?x1473 ?x1664)))
 (let (($x1674 ((_ is stack ) ?x1521)))
 (let (($x1675 (= c___________ center-to-right)))
 (let (($x1676 (and $x1675 $x1674)))
 (let (($x1677 (= c___________ center-to-left)))
 (let (($x1678 (and $x1677 $x1674)))
 (let ((?x1301 (left s___________)))
 (let (($x1679 ((_ is stack ) ?x1301)))
 (let (($x1680 (= c___________ left-to-right)))
 (let (($x1681 (and $x1680 $x1679)))
 (let (($x1712 (ite $x1681 $x1695 (ite $x1678 $x1695 (ite $x1676 $x1691 (ite $x1673 $x1692 (ite $x1671 $x1692 $x1695)))))))
 (let ((?x1519 (top ?x1301)))
 (let ((?x1658 (stack ?x1519 ?x1335)))
 (let (($x1687 (= ?x1473 ?x1658)))
 (let (($x1682 (= c___________ left-to-center)))
 (let (($x1683 (and $x1682 $x1679)))
 (ite $x1683 $x1687 $x1712)))))))))))))))))))))))))))))))
(assert
 (let ((?x1521 (center s___________)))
 (let ((?x1659 (center s____________)))
 (let (($x1697 (= ?x1659 ?x1521)))
 (let ((?x1335 (right s___________)))
 (let ((?x1666 (top ?x1335)))
 (let ((?x1668 (stack ?x1666 ?x1521)))
 (let (($x1694 (= ?x1659 ?x1668)))
 (let (($x1669 ((_ is stack ) ?x1335)))
 (let (($x1670 (= c___________ right-to-center)))
 (let (($x1671 (and $x1670 $x1669)))
 (let (($x1672 (= c___________ right-to-left)))
 (let (($x1673 (and $x1672 $x1669)))
 (let ((?x1661 (rest ?x1521)))
 (let (($x1689 (= ?x1659 ?x1661)))
 (let (($x1674 ((_ is stack ) ?x1521)))
 (let (($x1675 (= c___________ center-to-right)))
 (let (($x1676 (and $x1675 $x1674)))
 (let (($x1677 (= c___________ center-to-left)))
 (let (($x1678 (and $x1677 $x1674)))
 (let ((?x1301 (left s___________)))
 (let ((?x1519 (top ?x1301)))
 (let ((?x1660 (stack ?x1519 ?x1521)))
 (let (($x1688 (= ?x1659 ?x1660)))
 (let (($x1679 ((_ is stack ) ?x1301)))
 (let (($x1680 (= c___________ left-to-right)))
 (let (($x1681 (and $x1680 $x1679)))
 (let (($x1711 (ite $x1681 $x1688 (ite $x1678 $x1689 (ite $x1676 $x1689 (ite $x1673 $x1697 (ite $x1671 $x1694 $x1697)))))))
 (let (($x1682 (= c___________ left-to-center)))
 (let (($x1683 (and $x1682 $x1679)))
 (ite $x1683 $x1697 $x1711)))))))))))))))))))))))))))))))
(assert
 (let ((?x82 (stack K (stack J (stack I (stack H (stack C (stack A empty))))))))
 (let ((?x88 (stack W (stack V (stack T (stack R (stack P (stack L ?x82))))))))
 (let ((?x89 (stack Z ?x88)))
 (let ((?x1473 (right s____________)))
 (let (($x1715 (= ?x1473 ?x89)))
 (let ((?x70 (stack N (stack O (stack E (stack D (stack Y (stack M empty))))))))
 (let ((?x76 (stack B (stack U (stack F (stack S (stack X (stack G ?x70))))))))
 (let ((?x1659 (center s____________)))
 (let (($x1746 (= ?x1659 ?x76)))
 (let ((?x65 (stack Q empty)))
 (let ((?x1439 (left s____________)))
 (let (($x1747 (= ?x1439 ?x65)))
 (let (($x1749 (not (and $x1747 $x1746 $x1715))))
 (not $x1749)))))))))))))))
(check-sat)
(exit)
