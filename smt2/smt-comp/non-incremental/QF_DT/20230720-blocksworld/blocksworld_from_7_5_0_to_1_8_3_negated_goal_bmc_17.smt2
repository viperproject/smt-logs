(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x24 (stack K empty)))
 (let ((?x25 (stack A ?x24)))
 (let ((?x26 (stack C ?x25)))
 (let ((?x27 (stack I ?x26)))
 (let ((?x28 (stack E ?x27)))
 (let ((?x29 (stack F ?x28)))
 (let ((?x30 (stack J ?x29)))
 (let ((?x94 (left s_tmp_)))
 (= ?x94 ?x30))))))))))
(assert
 (let ((?x31 (stack L empty)))
 (let ((?x32 (stack G ?x31)))
 (let ((?x33 (stack D ?x32)))
 (let ((?x34 (stack H ?x33)))
 (let ((?x35 (stack B ?x34)))
 (let ((?x97 (center s_tmp__)))
 (= ?x97 ?x35))))))))
(assert
 (let ((?x100 (right s_tmp___)))
 (= ?x100 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x127 (left s_tmp__)))
 (= (left s_tmp___) ?x127)))
(assert
 (let ((?x97 (center s_tmp__)))
 (= (center s_tmp___) ?x97)))
(assert
 (let ((?x131 (center s_tmp_)))
 (= ?x131 (center s_tmp))))
(assert
 (let ((?x134 (right s_tmp_)))
 (= ?x134 (right s_tmp))))
(assert
 (let ((?x94 (left s_tmp_)))
 (let ((?x127 (left s_tmp__)))
 (= ?x127 ?x94))))
(assert
 (let ((?x134 (right s_tmp_)))
 (let ((?x138 (right s_tmp__)))
 (= ?x138 ?x134))))
(assert
 (= c__ c!1))
(assert
 (let ((?x71 (left s_)))
 (let ((?x218 (left s__)))
 (let (($x263 (= ?x218 ?x71)))
 (let ((?x74 (right s_)))
 (let (($x227 ((_ is stack ) ?x74)))
 (let (($x237 (and (= c_ right-to-left) $x227)))
 (let ((?x76 (center s_)))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x239 (= c_ center-to-right)))
 (let (($x240 (and $x239 $x238)))
 (let (($x241 (= c_ center-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let (($x272 (ite $x242 (= ?x218 (stack (top ?x76) ?x71)) (ite $x240 $x263 (ite $x237 (= ?x218 (stack (top ?x74) ?x71)) $x263)))))
 (let (($x250 (= ?x218 (rest ?x71))))
 (let (($x243 ((_ is stack ) ?x71)))
 (let (($x244 (= c_ left-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x246 (= c_ left-to-center)))
 (let (($x247 (and $x246 $x243)))
 (ite $x247 $x250 (ite $x245 $x250 $x272))))))))))))))))))))))
(assert
 (let ((?x74 (right s_)))
 (let ((?x220 (right s__)))
 (let (($x259 (= ?x220 ?x74)))
 (let (($x256 (= ?x220 (rest ?x74))))
 (let (($x227 ((_ is stack ) ?x74)))
 (let (($x235 (and (= c_ right-to-center) $x227)))
 (let (($x237 (and (= c_ right-to-left) $x227)))
 (let ((?x76 (center s_)))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x239 (= c_ center-to-right)))
 (let (($x240 (and $x239 $x238)))
 (let (($x269 (ite $x240 (= ?x220 (stack (top ?x76) ?x74)) (ite $x237 $x256 (ite $x235 $x256 $x259)))))
 (let (($x241 (= c_ center-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let ((?x71 (left s_)))
 (let (($x243 ((_ is stack ) ?x71)))
 (let (($x244 (= c_ left-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x246 (= c_ left-to-center)))
 (let (($x247 (and $x246 $x243)))
 (ite $x247 (= ?x220 (stack (top ?x71) ?x74)) (ite $x245 $x259 (ite $x242 $x259 $x269))))))))))))))))))))))))
(assert
 (let ((?x76 (center s_)))
 (let ((?x229 (center s__)))
 (let (($x261 (= ?x229 ?x76)))
 (let ((?x74 (right s_)))
 (let (($x227 ((_ is stack ) ?x74)))
 (let (($x235 (and (= c_ right-to-center) $x227)))
 (let (($x237 (and (= c_ right-to-left) $x227)))
 (let (($x253 (= ?x229 (rest ?x76))))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x239 (= c_ center-to-right)))
 (let (($x240 (and $x239 $x238)))
 (let (($x268 (ite $x240 $x253 (ite $x237 $x261 (ite $x235 (= ?x229 (stack (top ?x74) ?x76)) $x261)))))
 (let (($x241 (= c_ center-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let ((?x71 (left s_)))
 (let (($x243 ((_ is stack ) ?x71)))
 (let (($x244 (= c_ left-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x246 (= c_ left-to-center)))
 (let (($x247 (and $x246 $x243)))
 (ite $x247 $x261 (ite $x245 (= ?x229 (stack (top ?x71) ?x76)) (ite $x242 $x253 $x268))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x218 (left s__)))
 (let ((?x141 (left s___)))
 (let (($x372 (= ?x141 ?x218)))
 (let ((?x220 (right s__)))
 (let ((?x339 (top ?x220)))
 (let ((?x340 (stack ?x339 ?x218)))
 (let (($x366 (= ?x141 ?x340)))
 (let (($x342 ((_ is stack ) ?x220)))
 (let (($x345 (= c__ right-to-left)))
 (let (($x346 (and $x345 $x342)))
 (let ((?x229 (center s__)))
 (let (($x347 ((_ is stack ) ?x229)))
 (let (($x348 (= c__ center-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let ((?x335 (top ?x229)))
 (let ((?x336 (stack ?x335 ?x218)))
 (let (($x363 (= ?x141 ?x336)))
 (let (($x350 (= c__ center-to-left)))
 (let (($x351 (and $x350 $x347)))
 (let ((?x143 (rest ?x218)))
 (let (($x359 (= ?x141 ?x143)))
 (let (($x352 ((_ is stack ) ?x218)))
 (let (($x353 (= c__ left-to-right)))
 (let (($x354 (and $x353 $x352)))
 (let (($x355 (= c__ left-to-center)))
 (let (($x356 (and $x355 $x352)))
 (ite $x356 $x359 (ite $x354 $x359 (ite $x351 $x363 (ite $x349 $x372 (ite $x346 $x366 $x372))))))))))))))))))))))))))))))))
(assert
 (let ((?x220 (right s__)))
 (let ((?x144 (right s___)))
 (let (($x368 (= ?x144 ?x220)))
 (let ((?x338 (rest ?x220)))
 (let (($x365 (= ?x144 ?x338)))
 (let (($x342 ((_ is stack ) ?x220)))
 (let (($x343 (= c__ right-to-center)))
 (let (($x344 (and $x343 $x342)))
 (let (($x345 (= c__ right-to-left)))
 (let (($x346 (and $x345 $x342)))
 (let ((?x229 (center s__)))
 (let ((?x335 (top ?x229)))
 (let ((?x337 (stack ?x335 ?x220)))
 (let (($x364 (= ?x144 ?x337)))
 (let (($x347 ((_ is stack ) ?x229)))
 (let (($x348 (= c__ center-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let (($x350 (= c__ center-to-left)))
 (let (($x351 (and $x350 $x347)))
 (let ((?x218 (left s__)))
 (let (($x352 ((_ is stack ) ?x218)))
 (let (($x353 (= c__ left-to-right)))
 (let (($x354 (and $x353 $x352)))
 (let (($x385 (ite $x354 $x368 (ite $x351 $x368 (ite $x349 $x364 (ite $x346 $x365 (ite $x344 $x365 $x368)))))))
 (let ((?x215 (top ?x218)))
 (let ((?x331 (stack ?x215 ?x220)))
 (let (($x360 (= ?x144 ?x331)))
 (let (($x355 (= c__ left-to-center)))
 (let (($x356 (and $x355 $x352)))
 (ite $x356 $x360 $x385)))))))))))))))))))))))))))))))
(assert
 (let ((?x229 (center s__)))
 (let ((?x332 (center s___)))
 (let (($x370 (= ?x332 ?x229)))
 (let ((?x220 (right s__)))
 (let ((?x339 (top ?x220)))
 (let ((?x341 (stack ?x339 ?x229)))
 (let (($x367 (= ?x332 ?x341)))
 (let (($x342 ((_ is stack ) ?x220)))
 (let (($x343 (= c__ right-to-center)))
 (let (($x344 (and $x343 $x342)))
 (let (($x345 (= c__ right-to-left)))
 (let (($x346 (and $x345 $x342)))
 (let ((?x334 (rest ?x229)))
 (let (($x362 (= ?x332 ?x334)))
 (let (($x347 ((_ is stack ) ?x229)))
 (let (($x348 (= c__ center-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let (($x350 (= c__ center-to-left)))
 (let (($x351 (and $x350 $x347)))
 (let ((?x218 (left s__)))
 (let ((?x215 (top ?x218)))
 (let ((?x333 (stack ?x215 ?x229)))
 (let (($x361 (= ?x332 ?x333)))
 (let (($x352 ((_ is stack ) ?x218)))
 (let (($x353 (= c__ left-to-right)))
 (let (($x354 (and $x353 $x352)))
 (let (($x384 (ite $x354 $x361 (ite $x351 $x362 (ite $x349 $x362 (ite $x346 $x370 (ite $x344 $x367 $x370)))))))
 (let (($x355 (= c__ left-to-center)))
 (let (($x356 (and $x355 $x352)))
 (ite $x356 $x370 $x384)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x141 (left s___)))
 (let ((?x279 (left s____)))
 (let (($x510 (= ?x279 ?x141)))
 (let ((?x144 (right s___)))
 (let ((?x477 (top ?x144)))
 (let ((?x478 (stack ?x477 ?x141)))
 (let (($x504 (= ?x279 ?x478)))
 (let (($x480 ((_ is stack ) ?x144)))
 (let (($x483 (= c___ right-to-left)))
 (let (($x484 (and $x483 $x480)))
 (let ((?x332 (center s___)))
 (let (($x485 ((_ is stack ) ?x332)))
 (let (($x486 (= c___ center-to-right)))
 (let (($x487 (and $x486 $x485)))
 (let ((?x473 (top ?x332)))
 (let ((?x474 (stack ?x473 ?x141)))
 (let (($x501 (= ?x279 ?x474)))
 (let (($x488 (= c___ center-to-left)))
 (let (($x489 (and $x488 $x485)))
 (let ((?x308 (rest ?x141)))
 (let (($x497 (= ?x279 ?x308)))
 (let (($x490 ((_ is stack ) ?x141)))
 (let (($x491 (= c___ left-to-right)))
 (let (($x492 (and $x491 $x490)))
 (let (($x493 (= c___ left-to-center)))
 (let (($x494 (and $x493 $x490)))
 (ite $x494 $x497 (ite $x492 $x497 (ite $x489 $x501 (ite $x487 $x510 (ite $x484 $x504 $x510))))))))))))))))))))))))))))))))
(assert
 (let ((?x144 (right s___)))
 (let ((?x309 (right s____)))
 (let (($x506 (= ?x309 ?x144)))
 (let ((?x476 (rest ?x144)))
 (let (($x503 (= ?x309 ?x476)))
 (let (($x480 ((_ is stack ) ?x144)))
 (let (($x481 (= c___ right-to-center)))
 (let (($x482 (and $x481 $x480)))
 (let (($x483 (= c___ right-to-left)))
 (let (($x484 (and $x483 $x480)))
 (let ((?x332 (center s___)))
 (let ((?x473 (top ?x332)))
 (let ((?x475 (stack ?x473 ?x144)))
 (let (($x502 (= ?x309 ?x475)))
 (let (($x485 ((_ is stack ) ?x332)))
 (let (($x486 (= c___ center-to-right)))
 (let (($x487 (and $x486 $x485)))
 (let (($x488 (= c___ center-to-left)))
 (let (($x489 (and $x488 $x485)))
 (let ((?x141 (left s___)))
 (let (($x490 ((_ is stack ) ?x141)))
 (let (($x491 (= c___ left-to-right)))
 (let (($x492 (and $x491 $x490)))
 (let (($x523 (ite $x492 $x506 (ite $x489 $x506 (ite $x487 $x502 (ite $x484 $x503 (ite $x482 $x503 $x506)))))))
 (let ((?x330 (top ?x141)))
 (let ((?x469 (stack ?x330 ?x144)))
 (let (($x498 (= ?x309 ?x469)))
 (let (($x493 (= c___ left-to-center)))
 (let (($x494 (and $x493 $x490)))
 (ite $x494 $x498 $x523)))))))))))))))))))))))))))))))
(assert
 (let ((?x332 (center s___)))
 (let ((?x470 (center s____)))
 (let (($x508 (= ?x470 ?x332)))
 (let ((?x144 (right s___)))
 (let ((?x477 (top ?x144)))
 (let ((?x479 (stack ?x477 ?x332)))
 (let (($x505 (= ?x470 ?x479)))
 (let (($x480 ((_ is stack ) ?x144)))
 (let (($x481 (= c___ right-to-center)))
 (let (($x482 (and $x481 $x480)))
 (let (($x483 (= c___ right-to-left)))
 (let (($x484 (and $x483 $x480)))
 (let ((?x472 (rest ?x332)))
 (let (($x500 (= ?x470 ?x472)))
 (let (($x485 ((_ is stack ) ?x332)))
 (let (($x486 (= c___ center-to-right)))
 (let (($x487 (and $x486 $x485)))
 (let (($x488 (= c___ center-to-left)))
 (let (($x489 (and $x488 $x485)))
 (let ((?x141 (left s___)))
 (let ((?x330 (top ?x141)))
 (let ((?x471 (stack ?x330 ?x332)))
 (let (($x499 (= ?x470 ?x471)))
 (let (($x490 ((_ is stack ) ?x141)))
 (let (($x491 (= c___ left-to-right)))
 (let (($x492 (and $x491 $x490)))
 (let (($x522 (ite $x492 $x499 (ite $x489 $x500 (ite $x487 $x500 (ite $x484 $x508 (ite $x482 $x505 $x508)))))))
 (let (($x493 (= c___ left-to-center)))
 (let (($x494 (and $x493 $x490)))
 (ite $x494 $x508 $x522)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x279 (left s____)))
 (let ((?x388 (left s_____)))
 (let (($x648 (= ?x388 ?x279)))
 (let ((?x309 (right s____)))
 (let ((?x615 (top ?x309)))
 (let ((?x616 (stack ?x615 ?x279)))
 (let (($x642 (= ?x388 ?x616)))
 (let (($x618 ((_ is stack ) ?x309)))
 (let (($x621 (= c____ right-to-left)))
 (let (($x622 (and $x621 $x618)))
 (let ((?x470 (center s____)))
 (let (($x623 ((_ is stack ) ?x470)))
 (let (($x624 (= c____ center-to-right)))
 (let (($x625 (and $x624 $x623)))
 (let ((?x611 (top ?x470)))
 (let ((?x612 (stack ?x611 ?x279)))
 (let (($x639 (= ?x388 ?x612)))
 (let (($x626 (= c____ center-to-left)))
 (let (($x627 (and $x626 $x623)))
 (let ((?x421 (rest ?x279)))
 (let (($x635 (= ?x388 ?x421)))
 (let (($x628 ((_ is stack ) ?x279)))
 (let (($x629 (= c____ left-to-right)))
 (let (($x630 (and $x629 $x628)))
 (let (($x631 (= c____ left-to-center)))
 (let (($x632 (and $x631 $x628)))
 (ite $x632 $x635 (ite $x630 $x635 (ite $x627 $x639 (ite $x625 $x648 (ite $x622 $x642 $x648))))))))))))))))))))))))))))))))
(assert
 (let ((?x309 (right s____)))
 (let ((?x422 (right s_____)))
 (let (($x644 (= ?x422 ?x309)))
 (let ((?x614 (rest ?x309)))
 (let (($x641 (= ?x422 ?x614)))
 (let (($x618 ((_ is stack ) ?x309)))
 (let (($x619 (= c____ right-to-center)))
 (let (($x620 (and $x619 $x618)))
 (let (($x621 (= c____ right-to-left)))
 (let (($x622 (and $x621 $x618)))
 (let ((?x470 (center s____)))
 (let ((?x611 (top ?x470)))
 (let ((?x613 (stack ?x611 ?x309)))
 (let (($x640 (= ?x422 ?x613)))
 (let (($x623 ((_ is stack ) ?x470)))
 (let (($x624 (= c____ center-to-right)))
 (let (($x625 (and $x624 $x623)))
 (let (($x626 (= c____ center-to-left)))
 (let (($x627 (and $x626 $x623)))
 (let ((?x279 (left s____)))
 (let (($x628 ((_ is stack ) ?x279)))
 (let (($x629 (= c____ left-to-right)))
 (let (($x630 (and $x629 $x628)))
 (let (($x661 (ite $x630 $x644 (ite $x627 $x644 (ite $x625 $x640 (ite $x622 $x641 (ite $x620 $x641 $x644)))))))
 (let ((?x468 (top ?x279)))
 (let ((?x607 (stack ?x468 ?x309)))
 (let (($x636 (= ?x422 ?x607)))
 (let (($x631 (= c____ left-to-center)))
 (let (($x632 (and $x631 $x628)))
 (ite $x632 $x636 $x661)))))))))))))))))))))))))))))))
(assert
 (let ((?x470 (center s____)))
 (let ((?x608 (center s_____)))
 (let (($x646 (= ?x608 ?x470)))
 (let ((?x309 (right s____)))
 (let ((?x615 (top ?x309)))
 (let ((?x617 (stack ?x615 ?x470)))
 (let (($x643 (= ?x608 ?x617)))
 (let (($x618 ((_ is stack ) ?x309)))
 (let (($x619 (= c____ right-to-center)))
 (let (($x620 (and $x619 $x618)))
 (let (($x621 (= c____ right-to-left)))
 (let (($x622 (and $x621 $x618)))
 (let ((?x610 (rest ?x470)))
 (let (($x638 (= ?x608 ?x610)))
 (let (($x623 ((_ is stack ) ?x470)))
 (let (($x624 (= c____ center-to-right)))
 (let (($x625 (and $x624 $x623)))
 (let (($x626 (= c____ center-to-left)))
 (let (($x627 (and $x626 $x623)))
 (let ((?x279 (left s____)))
 (let ((?x468 (top ?x279)))
 (let ((?x609 (stack ?x468 ?x470)))
 (let (($x637 (= ?x608 ?x609)))
 (let (($x628 ((_ is stack ) ?x279)))
 (let (($x629 (= c____ left-to-right)))
 (let (($x630 (and $x629 $x628)))
 (let (($x660 (ite $x630 $x637 (ite $x627 $x638 (ite $x625 $x638 (ite $x622 $x646 (ite $x620 $x643 $x646)))))))
 (let (($x631 (= c____ left-to-center)))
 (let (($x632 (and $x631 $x628)))
 (ite $x632 $x646 $x660)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x388 (left s_____)))
 (let ((?x526 (left s______)))
 (let (($x786 (= ?x526 ?x388)))
 (let ((?x422 (right s_____)))
 (let ((?x753 (top ?x422)))
 (let ((?x754 (stack ?x753 ?x388)))
 (let (($x780 (= ?x526 ?x754)))
 (let (($x756 ((_ is stack ) ?x422)))
 (let (($x759 (= c_____ right-to-left)))
 (let (($x760 (and $x759 $x756)))
 (let ((?x608 (center s_____)))
 (let (($x761 ((_ is stack ) ?x608)))
 (let (($x762 (= c_____ center-to-right)))
 (let (($x763 (and $x762 $x761)))
 (let ((?x749 (top ?x608)))
 (let ((?x750 (stack ?x749 ?x388)))
 (let (($x777 (= ?x526 ?x750)))
 (let (($x764 (= c_____ center-to-left)))
 (let (($x765 (and $x764 $x761)))
 (let ((?x559 (rest ?x388)))
 (let (($x773 (= ?x526 ?x559)))
 (let (($x766 ((_ is stack ) ?x388)))
 (let (($x767 (= c_____ left-to-right)))
 (let (($x768 (and $x767 $x766)))
 (let (($x769 (= c_____ left-to-center)))
 (let (($x770 (and $x769 $x766)))
 (ite $x770 $x773 (ite $x768 $x773 (ite $x765 $x777 (ite $x763 $x786 (ite $x760 $x780 $x786))))))))))))))))))))))))))))))))
(assert
 (let ((?x422 (right s_____)))
 (let ((?x560 (right s______)))
 (let (($x782 (= ?x560 ?x422)))
 (let ((?x752 (rest ?x422)))
 (let (($x779 (= ?x560 ?x752)))
 (let (($x756 ((_ is stack ) ?x422)))
 (let (($x757 (= c_____ right-to-center)))
 (let (($x758 (and $x757 $x756)))
 (let (($x759 (= c_____ right-to-left)))
 (let (($x760 (and $x759 $x756)))
 (let ((?x608 (center s_____)))
 (let ((?x749 (top ?x608)))
 (let ((?x751 (stack ?x749 ?x422)))
 (let (($x778 (= ?x560 ?x751)))
 (let (($x761 ((_ is stack ) ?x608)))
 (let (($x762 (= c_____ center-to-right)))
 (let (($x763 (and $x762 $x761)))
 (let (($x764 (= c_____ center-to-left)))
 (let (($x765 (and $x764 $x761)))
 (let ((?x388 (left s_____)))
 (let (($x766 ((_ is stack ) ?x388)))
 (let (($x767 (= c_____ left-to-right)))
 (let (($x768 (and $x767 $x766)))
 (let (($x799 (ite $x768 $x782 (ite $x765 $x782 (ite $x763 $x778 (ite $x760 $x779 (ite $x758 $x779 $x782)))))))
 (let ((?x606 (top ?x388)))
 (let ((?x745 (stack ?x606 ?x422)))
 (let (($x774 (= ?x560 ?x745)))
 (let (($x769 (= c_____ left-to-center)))
 (let (($x770 (and $x769 $x766)))
 (ite $x770 $x774 $x799)))))))))))))))))))))))))))))))
(assert
 (let ((?x608 (center s_____)))
 (let ((?x746 (center s______)))
 (let (($x784 (= ?x746 ?x608)))
 (let ((?x422 (right s_____)))
 (let ((?x753 (top ?x422)))
 (let ((?x755 (stack ?x753 ?x608)))
 (let (($x781 (= ?x746 ?x755)))
 (let (($x756 ((_ is stack ) ?x422)))
 (let (($x757 (= c_____ right-to-center)))
 (let (($x758 (and $x757 $x756)))
 (let (($x759 (= c_____ right-to-left)))
 (let (($x760 (and $x759 $x756)))
 (let ((?x748 (rest ?x608)))
 (let (($x776 (= ?x746 ?x748)))
 (let (($x761 ((_ is stack ) ?x608)))
 (let (($x762 (= c_____ center-to-right)))
 (let (($x763 (and $x762 $x761)))
 (let (($x764 (= c_____ center-to-left)))
 (let (($x765 (and $x764 $x761)))
 (let ((?x388 (left s_____)))
 (let ((?x606 (top ?x388)))
 (let ((?x747 (stack ?x606 ?x608)))
 (let (($x775 (= ?x746 ?x747)))
 (let (($x766 ((_ is stack ) ?x388)))
 (let (($x767 (= c_____ left-to-right)))
 (let (($x768 (and $x767 $x766)))
 (let (($x798 (ite $x768 $x775 (ite $x765 $x776 (ite $x763 $x776 (ite $x760 $x784 (ite $x758 $x781 $x784)))))))
 (let (($x769 (= c_____ left-to-center)))
 (let (($x770 (and $x769 $x766)))
 (ite $x770 $x784 $x798)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x526 (left s______)))
 (let ((?x664 (left s_______)))
 (let (($x924 (= ?x664 ?x526)))
 (let ((?x560 (right s______)))
 (let ((?x891 (top ?x560)))
 (let ((?x892 (stack ?x891 ?x526)))
 (let (($x918 (= ?x664 ?x892)))
 (let (($x894 ((_ is stack ) ?x560)))
 (let (($x897 (= c______ right-to-left)))
 (let (($x898 (and $x897 $x894)))
 (let ((?x746 (center s______)))
 (let (($x899 ((_ is stack ) ?x746)))
 (let (($x900 (= c______ center-to-right)))
 (let (($x901 (and $x900 $x899)))
 (let ((?x887 (top ?x746)))
 (let ((?x888 (stack ?x887 ?x526)))
 (let (($x915 (= ?x664 ?x888)))
 (let (($x902 (= c______ center-to-left)))
 (let (($x903 (and $x902 $x899)))
 (let ((?x697 (rest ?x526)))
 (let (($x911 (= ?x664 ?x697)))
 (let (($x904 ((_ is stack ) ?x526)))
 (let (($x905 (= c______ left-to-right)))
 (let (($x906 (and $x905 $x904)))
 (let (($x907 (= c______ left-to-center)))
 (let (($x908 (and $x907 $x904)))
 (ite $x908 $x911 (ite $x906 $x911 (ite $x903 $x915 (ite $x901 $x924 (ite $x898 $x918 $x924))))))))))))))))))))))))))))))))
(assert
 (let ((?x560 (right s______)))
 (let ((?x698 (right s_______)))
 (let (($x920 (= ?x698 ?x560)))
 (let ((?x890 (rest ?x560)))
 (let (($x917 (= ?x698 ?x890)))
 (let (($x894 ((_ is stack ) ?x560)))
 (let (($x895 (= c______ right-to-center)))
 (let (($x896 (and $x895 $x894)))
 (let (($x897 (= c______ right-to-left)))
 (let (($x898 (and $x897 $x894)))
 (let ((?x746 (center s______)))
 (let ((?x887 (top ?x746)))
 (let ((?x889 (stack ?x887 ?x560)))
 (let (($x916 (= ?x698 ?x889)))
 (let (($x899 ((_ is stack ) ?x746)))
 (let (($x900 (= c______ center-to-right)))
 (let (($x901 (and $x900 $x899)))
 (let (($x902 (= c______ center-to-left)))
 (let (($x903 (and $x902 $x899)))
 (let ((?x526 (left s______)))
 (let (($x904 ((_ is stack ) ?x526)))
 (let (($x905 (= c______ left-to-right)))
 (let (($x906 (and $x905 $x904)))
 (let (($x937 (ite $x906 $x920 (ite $x903 $x920 (ite $x901 $x916 (ite $x898 $x917 (ite $x896 $x917 $x920)))))))
 (let ((?x744 (top ?x526)))
 (let ((?x883 (stack ?x744 ?x560)))
 (let (($x912 (= ?x698 ?x883)))
 (let (($x907 (= c______ left-to-center)))
 (let (($x908 (and $x907 $x904)))
 (ite $x908 $x912 $x937)))))))))))))))))))))))))))))))
(assert
 (let ((?x746 (center s______)))
 (let ((?x884 (center s_______)))
 (let (($x922 (= ?x884 ?x746)))
 (let ((?x560 (right s______)))
 (let ((?x891 (top ?x560)))
 (let ((?x893 (stack ?x891 ?x746)))
 (let (($x919 (= ?x884 ?x893)))
 (let (($x894 ((_ is stack ) ?x560)))
 (let (($x895 (= c______ right-to-center)))
 (let (($x896 (and $x895 $x894)))
 (let (($x897 (= c______ right-to-left)))
 (let (($x898 (and $x897 $x894)))
 (let ((?x886 (rest ?x746)))
 (let (($x914 (= ?x884 ?x886)))
 (let (($x899 ((_ is stack ) ?x746)))
 (let (($x900 (= c______ center-to-right)))
 (let (($x901 (and $x900 $x899)))
 (let (($x902 (= c______ center-to-left)))
 (let (($x903 (and $x902 $x899)))
 (let ((?x526 (left s______)))
 (let ((?x744 (top ?x526)))
 (let ((?x885 (stack ?x744 ?x746)))
 (let (($x913 (= ?x884 ?x885)))
 (let (($x904 ((_ is stack ) ?x526)))
 (let (($x905 (= c______ left-to-right)))
 (let (($x906 (and $x905 $x904)))
 (let (($x936 (ite $x906 $x913 (ite $x903 $x914 (ite $x901 $x914 (ite $x898 $x922 (ite $x896 $x919 $x922)))))))
 (let (($x907 (= c______ left-to-center)))
 (let (($x908 (and $x907 $x904)))
 (ite $x908 $x922 $x936)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x664 (left s_______)))
 (let ((?x802 (left s________)))
 (let (($x1062 (= ?x802 ?x664)))
 (let ((?x698 (right s_______)))
 (let ((?x1029 (top ?x698)))
 (let ((?x1030 (stack ?x1029 ?x664)))
 (let (($x1056 (= ?x802 ?x1030)))
 (let (($x1032 ((_ is stack ) ?x698)))
 (let (($x1035 (= c_______ right-to-left)))
 (let (($x1036 (and $x1035 $x1032)))
 (let ((?x884 (center s_______)))
 (let (($x1037 ((_ is stack ) ?x884)))
 (let (($x1038 (= c_______ center-to-right)))
 (let (($x1039 (and $x1038 $x1037)))
 (let ((?x1025 (top ?x884)))
 (let ((?x1026 (stack ?x1025 ?x664)))
 (let (($x1053 (= ?x802 ?x1026)))
 (let (($x1040 (= c_______ center-to-left)))
 (let (($x1041 (and $x1040 $x1037)))
 (let ((?x835 (rest ?x664)))
 (let (($x1049 (= ?x802 ?x835)))
 (let (($x1042 ((_ is stack ) ?x664)))
 (let (($x1043 (= c_______ left-to-right)))
 (let (($x1044 (and $x1043 $x1042)))
 (let (($x1045 (= c_______ left-to-center)))
 (let (($x1046 (and $x1045 $x1042)))
 (ite $x1046 $x1049 (ite $x1044 $x1049 (ite $x1041 $x1053 (ite $x1039 $x1062 (ite $x1036 $x1056 $x1062))))))))))))))))))))))))))))))))
(assert
 (let ((?x698 (right s_______)))
 (let ((?x836 (right s________)))
 (let (($x1058 (= ?x836 ?x698)))
 (let ((?x1028 (rest ?x698)))
 (let (($x1055 (= ?x836 ?x1028)))
 (let (($x1032 ((_ is stack ) ?x698)))
 (let (($x1033 (= c_______ right-to-center)))
 (let (($x1034 (and $x1033 $x1032)))
 (let (($x1035 (= c_______ right-to-left)))
 (let (($x1036 (and $x1035 $x1032)))
 (let ((?x884 (center s_______)))
 (let ((?x1025 (top ?x884)))
 (let ((?x1027 (stack ?x1025 ?x698)))
 (let (($x1054 (= ?x836 ?x1027)))
 (let (($x1037 ((_ is stack ) ?x884)))
 (let (($x1038 (= c_______ center-to-right)))
 (let (($x1039 (and $x1038 $x1037)))
 (let (($x1040 (= c_______ center-to-left)))
 (let (($x1041 (and $x1040 $x1037)))
 (let ((?x664 (left s_______)))
 (let (($x1042 ((_ is stack ) ?x664)))
 (let (($x1043 (= c_______ left-to-right)))
 (let (($x1044 (and $x1043 $x1042)))
 (let (($x1075 (ite $x1044 $x1058 (ite $x1041 $x1058 (ite $x1039 $x1054 (ite $x1036 $x1055 (ite $x1034 $x1055 $x1058)))))))
 (let ((?x882 (top ?x664)))
 (let ((?x1021 (stack ?x882 ?x698)))
 (let (($x1050 (= ?x836 ?x1021)))
 (let (($x1045 (= c_______ left-to-center)))
 (let (($x1046 (and $x1045 $x1042)))
 (ite $x1046 $x1050 $x1075)))))))))))))))))))))))))))))))
(assert
 (let ((?x884 (center s_______)))
 (let ((?x1022 (center s________)))
 (let (($x1060 (= ?x1022 ?x884)))
 (let ((?x698 (right s_______)))
 (let ((?x1029 (top ?x698)))
 (let ((?x1031 (stack ?x1029 ?x884)))
 (let (($x1057 (= ?x1022 ?x1031)))
 (let (($x1032 ((_ is stack ) ?x698)))
 (let (($x1033 (= c_______ right-to-center)))
 (let (($x1034 (and $x1033 $x1032)))
 (let (($x1035 (= c_______ right-to-left)))
 (let (($x1036 (and $x1035 $x1032)))
 (let ((?x1024 (rest ?x884)))
 (let (($x1052 (= ?x1022 ?x1024)))
 (let (($x1037 ((_ is stack ) ?x884)))
 (let (($x1038 (= c_______ center-to-right)))
 (let (($x1039 (and $x1038 $x1037)))
 (let (($x1040 (= c_______ center-to-left)))
 (let (($x1041 (and $x1040 $x1037)))
 (let ((?x664 (left s_______)))
 (let ((?x882 (top ?x664)))
 (let ((?x1023 (stack ?x882 ?x884)))
 (let (($x1051 (= ?x1022 ?x1023)))
 (let (($x1042 ((_ is stack ) ?x664)))
 (let (($x1043 (= c_______ left-to-right)))
 (let (($x1044 (and $x1043 $x1042)))
 (let (($x1074 (ite $x1044 $x1051 (ite $x1041 $x1052 (ite $x1039 $x1052 (ite $x1036 $x1060 (ite $x1034 $x1057 $x1060)))))))
 (let (($x1045 (= c_______ left-to-center)))
 (let (($x1046 (and $x1045 $x1042)))
 (ite $x1046 $x1060 $x1074)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x802 (left s________)))
 (let ((?x940 (left s_________)))
 (let (($x1200 (= ?x940 ?x802)))
 (let ((?x836 (right s________)))
 (let ((?x1167 (top ?x836)))
 (let ((?x1168 (stack ?x1167 ?x802)))
 (let (($x1194 (= ?x940 ?x1168)))
 (let (($x1170 ((_ is stack ) ?x836)))
 (let (($x1173 (= c________ right-to-left)))
 (let (($x1174 (and $x1173 $x1170)))
 (let ((?x1022 (center s________)))
 (let (($x1175 ((_ is stack ) ?x1022)))
 (let (($x1176 (= c________ center-to-right)))
 (let (($x1177 (and $x1176 $x1175)))
 (let ((?x1163 (top ?x1022)))
 (let ((?x1164 (stack ?x1163 ?x802)))
 (let (($x1191 (= ?x940 ?x1164)))
 (let (($x1178 (= c________ center-to-left)))
 (let (($x1179 (and $x1178 $x1175)))
 (let ((?x973 (rest ?x802)))
 (let (($x1187 (= ?x940 ?x973)))
 (let (($x1180 ((_ is stack ) ?x802)))
 (let (($x1181 (= c________ left-to-right)))
 (let (($x1182 (and $x1181 $x1180)))
 (let (($x1183 (= c________ left-to-center)))
 (let (($x1184 (and $x1183 $x1180)))
 (ite $x1184 $x1187 (ite $x1182 $x1187 (ite $x1179 $x1191 (ite $x1177 $x1200 (ite $x1174 $x1194 $x1200))))))))))))))))))))))))))))))))
(assert
 (let ((?x836 (right s________)))
 (let ((?x974 (right s_________)))
 (let (($x1196 (= ?x974 ?x836)))
 (let ((?x1166 (rest ?x836)))
 (let (($x1193 (= ?x974 ?x1166)))
 (let (($x1170 ((_ is stack ) ?x836)))
 (let (($x1171 (= c________ right-to-center)))
 (let (($x1172 (and $x1171 $x1170)))
 (let (($x1173 (= c________ right-to-left)))
 (let (($x1174 (and $x1173 $x1170)))
 (let ((?x1022 (center s________)))
 (let ((?x1163 (top ?x1022)))
 (let ((?x1165 (stack ?x1163 ?x836)))
 (let (($x1192 (= ?x974 ?x1165)))
 (let (($x1175 ((_ is stack ) ?x1022)))
 (let (($x1176 (= c________ center-to-right)))
 (let (($x1177 (and $x1176 $x1175)))
 (let (($x1178 (= c________ center-to-left)))
 (let (($x1179 (and $x1178 $x1175)))
 (let ((?x802 (left s________)))
 (let (($x1180 ((_ is stack ) ?x802)))
 (let (($x1181 (= c________ left-to-right)))
 (let (($x1182 (and $x1181 $x1180)))
 (let (($x1213 (ite $x1182 $x1196 (ite $x1179 $x1196 (ite $x1177 $x1192 (ite $x1174 $x1193 (ite $x1172 $x1193 $x1196)))))))
 (let ((?x1020 (top ?x802)))
 (let ((?x1159 (stack ?x1020 ?x836)))
 (let (($x1188 (= ?x974 ?x1159)))
 (let (($x1183 (= c________ left-to-center)))
 (let (($x1184 (and $x1183 $x1180)))
 (ite $x1184 $x1188 $x1213)))))))))))))))))))))))))))))))
(assert
 (let ((?x1022 (center s________)))
 (let ((?x1160 (center s_________)))
 (let (($x1198 (= ?x1160 ?x1022)))
 (let ((?x836 (right s________)))
 (let ((?x1167 (top ?x836)))
 (let ((?x1169 (stack ?x1167 ?x1022)))
 (let (($x1195 (= ?x1160 ?x1169)))
 (let (($x1170 ((_ is stack ) ?x836)))
 (let (($x1171 (= c________ right-to-center)))
 (let (($x1172 (and $x1171 $x1170)))
 (let (($x1173 (= c________ right-to-left)))
 (let (($x1174 (and $x1173 $x1170)))
 (let ((?x1162 (rest ?x1022)))
 (let (($x1190 (= ?x1160 ?x1162)))
 (let (($x1175 ((_ is stack ) ?x1022)))
 (let (($x1176 (= c________ center-to-right)))
 (let (($x1177 (and $x1176 $x1175)))
 (let (($x1178 (= c________ center-to-left)))
 (let (($x1179 (and $x1178 $x1175)))
 (let ((?x802 (left s________)))
 (let ((?x1020 (top ?x802)))
 (let ((?x1161 (stack ?x1020 ?x1022)))
 (let (($x1189 (= ?x1160 ?x1161)))
 (let (($x1180 ((_ is stack ) ?x802)))
 (let (($x1181 (= c________ left-to-right)))
 (let (($x1182 (and $x1181 $x1180)))
 (let (($x1212 (ite $x1182 $x1189 (ite $x1179 $x1190 (ite $x1177 $x1190 (ite $x1174 $x1198 (ite $x1172 $x1195 $x1198)))))))
 (let (($x1183 (= c________ left-to-center)))
 (let (($x1184 (and $x1183 $x1180)))
 (ite $x1184 $x1198 $x1212)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x940 (left s_________)))
 (let ((?x1078 (left s__________)))
 (let (($x1338 (= ?x1078 ?x940)))
 (let ((?x974 (right s_________)))
 (let ((?x1305 (top ?x974)))
 (let ((?x1306 (stack ?x1305 ?x940)))
 (let (($x1332 (= ?x1078 ?x1306)))
 (let (($x1308 ((_ is stack ) ?x974)))
 (let (($x1311 (= c_________ right-to-left)))
 (let (($x1312 (and $x1311 $x1308)))
 (let ((?x1160 (center s_________)))
 (let (($x1313 ((_ is stack ) ?x1160)))
 (let (($x1314 (= c_________ center-to-right)))
 (let (($x1315 (and $x1314 $x1313)))
 (let ((?x1301 (top ?x1160)))
 (let ((?x1302 (stack ?x1301 ?x940)))
 (let (($x1329 (= ?x1078 ?x1302)))
 (let (($x1316 (= c_________ center-to-left)))
 (let (($x1317 (and $x1316 $x1313)))
 (let ((?x1111 (rest ?x940)))
 (let (($x1325 (= ?x1078 ?x1111)))
 (let (($x1318 ((_ is stack ) ?x940)))
 (let (($x1319 (= c_________ left-to-right)))
 (let (($x1320 (and $x1319 $x1318)))
 (let (($x1321 (= c_________ left-to-center)))
 (let (($x1322 (and $x1321 $x1318)))
 (ite $x1322 $x1325 (ite $x1320 $x1325 (ite $x1317 $x1329 (ite $x1315 $x1338 (ite $x1312 $x1332 $x1338))))))))))))))))))))))))))))))))
(assert
 (let ((?x974 (right s_________)))
 (let ((?x1112 (right s__________)))
 (let (($x1334 (= ?x1112 ?x974)))
 (let ((?x1304 (rest ?x974)))
 (let (($x1331 (= ?x1112 ?x1304)))
 (let (($x1308 ((_ is stack ) ?x974)))
 (let (($x1309 (= c_________ right-to-center)))
 (let (($x1310 (and $x1309 $x1308)))
 (let (($x1311 (= c_________ right-to-left)))
 (let (($x1312 (and $x1311 $x1308)))
 (let ((?x1160 (center s_________)))
 (let ((?x1301 (top ?x1160)))
 (let ((?x1303 (stack ?x1301 ?x974)))
 (let (($x1330 (= ?x1112 ?x1303)))
 (let (($x1313 ((_ is stack ) ?x1160)))
 (let (($x1314 (= c_________ center-to-right)))
 (let (($x1315 (and $x1314 $x1313)))
 (let (($x1316 (= c_________ center-to-left)))
 (let (($x1317 (and $x1316 $x1313)))
 (let ((?x940 (left s_________)))
 (let (($x1318 ((_ is stack ) ?x940)))
 (let (($x1319 (= c_________ left-to-right)))
 (let (($x1320 (and $x1319 $x1318)))
 (let (($x1351 (ite $x1320 $x1334 (ite $x1317 $x1334 (ite $x1315 $x1330 (ite $x1312 $x1331 (ite $x1310 $x1331 $x1334)))))))
 (let ((?x1158 (top ?x940)))
 (let ((?x1297 (stack ?x1158 ?x974)))
 (let (($x1326 (= ?x1112 ?x1297)))
 (let (($x1321 (= c_________ left-to-center)))
 (let (($x1322 (and $x1321 $x1318)))
 (ite $x1322 $x1326 $x1351)))))))))))))))))))))))))))))))
(assert
 (let ((?x1160 (center s_________)))
 (let ((?x1298 (center s__________)))
 (let (($x1336 (= ?x1298 ?x1160)))
 (let ((?x974 (right s_________)))
 (let ((?x1305 (top ?x974)))
 (let ((?x1307 (stack ?x1305 ?x1160)))
 (let (($x1333 (= ?x1298 ?x1307)))
 (let (($x1308 ((_ is stack ) ?x974)))
 (let (($x1309 (= c_________ right-to-center)))
 (let (($x1310 (and $x1309 $x1308)))
 (let (($x1311 (= c_________ right-to-left)))
 (let (($x1312 (and $x1311 $x1308)))
 (let ((?x1300 (rest ?x1160)))
 (let (($x1328 (= ?x1298 ?x1300)))
 (let (($x1313 ((_ is stack ) ?x1160)))
 (let (($x1314 (= c_________ center-to-right)))
 (let (($x1315 (and $x1314 $x1313)))
 (let (($x1316 (= c_________ center-to-left)))
 (let (($x1317 (and $x1316 $x1313)))
 (let ((?x940 (left s_________)))
 (let ((?x1158 (top ?x940)))
 (let ((?x1299 (stack ?x1158 ?x1160)))
 (let (($x1327 (= ?x1298 ?x1299)))
 (let (($x1318 ((_ is stack ) ?x940)))
 (let (($x1319 (= c_________ left-to-right)))
 (let (($x1320 (and $x1319 $x1318)))
 (let (($x1350 (ite $x1320 $x1327 (ite $x1317 $x1328 (ite $x1315 $x1328 (ite $x1312 $x1336 (ite $x1310 $x1333 $x1336)))))))
 (let (($x1321 (= c_________ left-to-center)))
 (let (($x1322 (and $x1321 $x1318)))
 (ite $x1322 $x1336 $x1350)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1078 (left s__________)))
 (let ((?x1216 (left s___________)))
 (let (($x1476 (= ?x1216 ?x1078)))
 (let ((?x1112 (right s__________)))
 (let ((?x1443 (top ?x1112)))
 (let ((?x1444 (stack ?x1443 ?x1078)))
 (let (($x1470 (= ?x1216 ?x1444)))
 (let (($x1446 ((_ is stack ) ?x1112)))
 (let (($x1449 (= c__________ right-to-left)))
 (let (($x1450 (and $x1449 $x1446)))
 (let ((?x1298 (center s__________)))
 (let (($x1451 ((_ is stack ) ?x1298)))
 (let (($x1452 (= c__________ center-to-right)))
 (let (($x1453 (and $x1452 $x1451)))
 (let ((?x1439 (top ?x1298)))
 (let ((?x1440 (stack ?x1439 ?x1078)))
 (let (($x1467 (= ?x1216 ?x1440)))
 (let (($x1454 (= c__________ center-to-left)))
 (let (($x1455 (and $x1454 $x1451)))
 (let ((?x1249 (rest ?x1078)))
 (let (($x1463 (= ?x1216 ?x1249)))
 (let (($x1456 ((_ is stack ) ?x1078)))
 (let (($x1457 (= c__________ left-to-right)))
 (let (($x1458 (and $x1457 $x1456)))
 (let (($x1459 (= c__________ left-to-center)))
 (let (($x1460 (and $x1459 $x1456)))
 (ite $x1460 $x1463 (ite $x1458 $x1463 (ite $x1455 $x1467 (ite $x1453 $x1476 (ite $x1450 $x1470 $x1476))))))))))))))))))))))))))))))))
(assert
 (let ((?x1112 (right s__________)))
 (let ((?x1250 (right s___________)))
 (let (($x1472 (= ?x1250 ?x1112)))
 (let ((?x1442 (rest ?x1112)))
 (let (($x1469 (= ?x1250 ?x1442)))
 (let (($x1446 ((_ is stack ) ?x1112)))
 (let (($x1447 (= c__________ right-to-center)))
 (let (($x1448 (and $x1447 $x1446)))
 (let (($x1449 (= c__________ right-to-left)))
 (let (($x1450 (and $x1449 $x1446)))
 (let ((?x1298 (center s__________)))
 (let ((?x1439 (top ?x1298)))
 (let ((?x1441 (stack ?x1439 ?x1112)))
 (let (($x1468 (= ?x1250 ?x1441)))
 (let (($x1451 ((_ is stack ) ?x1298)))
 (let (($x1452 (= c__________ center-to-right)))
 (let (($x1453 (and $x1452 $x1451)))
 (let (($x1454 (= c__________ center-to-left)))
 (let (($x1455 (and $x1454 $x1451)))
 (let ((?x1078 (left s__________)))
 (let (($x1456 ((_ is stack ) ?x1078)))
 (let (($x1457 (= c__________ left-to-right)))
 (let (($x1458 (and $x1457 $x1456)))
 (let (($x1489 (ite $x1458 $x1472 (ite $x1455 $x1472 (ite $x1453 $x1468 (ite $x1450 $x1469 (ite $x1448 $x1469 $x1472)))))))
 (let ((?x1296 (top ?x1078)))
 (let ((?x1435 (stack ?x1296 ?x1112)))
 (let (($x1464 (= ?x1250 ?x1435)))
 (let (($x1459 (= c__________ left-to-center)))
 (let (($x1460 (and $x1459 $x1456)))
 (ite $x1460 $x1464 $x1489)))))))))))))))))))))))))))))))
(assert
 (let ((?x1298 (center s__________)))
 (let ((?x1436 (center s___________)))
 (let (($x1474 (= ?x1436 ?x1298)))
 (let ((?x1112 (right s__________)))
 (let ((?x1443 (top ?x1112)))
 (let ((?x1445 (stack ?x1443 ?x1298)))
 (let (($x1471 (= ?x1436 ?x1445)))
 (let (($x1446 ((_ is stack ) ?x1112)))
 (let (($x1447 (= c__________ right-to-center)))
 (let (($x1448 (and $x1447 $x1446)))
 (let (($x1449 (= c__________ right-to-left)))
 (let (($x1450 (and $x1449 $x1446)))
 (let ((?x1438 (rest ?x1298)))
 (let (($x1466 (= ?x1436 ?x1438)))
 (let (($x1451 ((_ is stack ) ?x1298)))
 (let (($x1452 (= c__________ center-to-right)))
 (let (($x1453 (and $x1452 $x1451)))
 (let (($x1454 (= c__________ center-to-left)))
 (let (($x1455 (and $x1454 $x1451)))
 (let ((?x1078 (left s__________)))
 (let ((?x1296 (top ?x1078)))
 (let ((?x1437 (stack ?x1296 ?x1298)))
 (let (($x1465 (= ?x1436 ?x1437)))
 (let (($x1456 ((_ is stack ) ?x1078)))
 (let (($x1457 (= c__________ left-to-right)))
 (let (($x1458 (and $x1457 $x1456)))
 (let (($x1488 (ite $x1458 $x1465 (ite $x1455 $x1466 (ite $x1453 $x1466 (ite $x1450 $x1474 (ite $x1448 $x1471 $x1474)))))))
 (let (($x1459 (= c__________ left-to-center)))
 (let (($x1460 (and $x1459 $x1456)))
 (ite $x1460 $x1474 $x1488)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1216 (left s___________)))
 (let ((?x1354 (left s____________)))
 (let (($x1614 (= ?x1354 ?x1216)))
 (let ((?x1250 (right s___________)))
 (let ((?x1581 (top ?x1250)))
 (let ((?x1582 (stack ?x1581 ?x1216)))
 (let (($x1608 (= ?x1354 ?x1582)))
 (let (($x1584 ((_ is stack ) ?x1250)))
 (let (($x1587 (= c___________ right-to-left)))
 (let (($x1588 (and $x1587 $x1584)))
 (let ((?x1436 (center s___________)))
 (let (($x1589 ((_ is stack ) ?x1436)))
 (let (($x1590 (= c___________ center-to-right)))
 (let (($x1591 (and $x1590 $x1589)))
 (let ((?x1577 (top ?x1436)))
 (let ((?x1578 (stack ?x1577 ?x1216)))
 (let (($x1605 (= ?x1354 ?x1578)))
 (let (($x1592 (= c___________ center-to-left)))
 (let (($x1593 (and $x1592 $x1589)))
 (let ((?x1387 (rest ?x1216)))
 (let (($x1601 (= ?x1354 ?x1387)))
 (let (($x1594 ((_ is stack ) ?x1216)))
 (let (($x1595 (= c___________ left-to-right)))
 (let (($x1596 (and $x1595 $x1594)))
 (let (($x1597 (= c___________ left-to-center)))
 (let (($x1598 (and $x1597 $x1594)))
 (ite $x1598 $x1601 (ite $x1596 $x1601 (ite $x1593 $x1605 (ite $x1591 $x1614 (ite $x1588 $x1608 $x1614))))))))))))))))))))))))))))))))
(assert
 (let ((?x1250 (right s___________)))
 (let ((?x1388 (right s____________)))
 (let (($x1610 (= ?x1388 ?x1250)))
 (let ((?x1580 (rest ?x1250)))
 (let (($x1607 (= ?x1388 ?x1580)))
 (let (($x1584 ((_ is stack ) ?x1250)))
 (let (($x1585 (= c___________ right-to-center)))
 (let (($x1586 (and $x1585 $x1584)))
 (let (($x1587 (= c___________ right-to-left)))
 (let (($x1588 (and $x1587 $x1584)))
 (let ((?x1436 (center s___________)))
 (let ((?x1577 (top ?x1436)))
 (let ((?x1579 (stack ?x1577 ?x1250)))
 (let (($x1606 (= ?x1388 ?x1579)))
 (let (($x1589 ((_ is stack ) ?x1436)))
 (let (($x1590 (= c___________ center-to-right)))
 (let (($x1591 (and $x1590 $x1589)))
 (let (($x1592 (= c___________ center-to-left)))
 (let (($x1593 (and $x1592 $x1589)))
 (let ((?x1216 (left s___________)))
 (let (($x1594 ((_ is stack ) ?x1216)))
 (let (($x1595 (= c___________ left-to-right)))
 (let (($x1596 (and $x1595 $x1594)))
 (let (($x1627 (ite $x1596 $x1610 (ite $x1593 $x1610 (ite $x1591 $x1606 (ite $x1588 $x1607 (ite $x1586 $x1607 $x1610)))))))
 (let ((?x1434 (top ?x1216)))
 (let ((?x1573 (stack ?x1434 ?x1250)))
 (let (($x1602 (= ?x1388 ?x1573)))
 (let (($x1597 (= c___________ left-to-center)))
 (let (($x1598 (and $x1597 $x1594)))
 (ite $x1598 $x1602 $x1627)))))))))))))))))))))))))))))))
(assert
 (let ((?x1436 (center s___________)))
 (let ((?x1574 (center s____________)))
 (let (($x1612 (= ?x1574 ?x1436)))
 (let ((?x1250 (right s___________)))
 (let ((?x1581 (top ?x1250)))
 (let ((?x1583 (stack ?x1581 ?x1436)))
 (let (($x1609 (= ?x1574 ?x1583)))
 (let (($x1584 ((_ is stack ) ?x1250)))
 (let (($x1585 (= c___________ right-to-center)))
 (let (($x1586 (and $x1585 $x1584)))
 (let (($x1587 (= c___________ right-to-left)))
 (let (($x1588 (and $x1587 $x1584)))
 (let ((?x1576 (rest ?x1436)))
 (let (($x1604 (= ?x1574 ?x1576)))
 (let (($x1589 ((_ is stack ) ?x1436)))
 (let (($x1590 (= c___________ center-to-right)))
 (let (($x1591 (and $x1590 $x1589)))
 (let (($x1592 (= c___________ center-to-left)))
 (let (($x1593 (and $x1592 $x1589)))
 (let ((?x1216 (left s___________)))
 (let ((?x1434 (top ?x1216)))
 (let ((?x1575 (stack ?x1434 ?x1436)))
 (let (($x1603 (= ?x1574 ?x1575)))
 (let (($x1594 ((_ is stack ) ?x1216)))
 (let (($x1595 (= c___________ left-to-right)))
 (let (($x1596 (and $x1595 $x1594)))
 (let (($x1626 (ite $x1596 $x1603 (ite $x1593 $x1604 (ite $x1591 $x1604 (ite $x1588 $x1612 (ite $x1586 $x1609 $x1612)))))))
 (let (($x1597 (= c___________ left-to-center)))
 (let (($x1598 (and $x1597 $x1594)))
 (ite $x1598 $x1612 $x1626)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1354 (left s____________)))
 (let ((?x1492 (left s_____________)))
 (let (($x1752 (= ?x1492 ?x1354)))
 (let ((?x1388 (right s____________)))
 (let ((?x1719 (top ?x1388)))
 (let ((?x1720 (stack ?x1719 ?x1354)))
 (let (($x1746 (= ?x1492 ?x1720)))
 (let (($x1722 ((_ is stack ) ?x1388)))
 (let (($x1725 (= c____________ right-to-left)))
 (let (($x1726 (and $x1725 $x1722)))
 (let ((?x1574 (center s____________)))
 (let (($x1727 ((_ is stack ) ?x1574)))
 (let (($x1728 (= c____________ center-to-right)))
 (let (($x1729 (and $x1728 $x1727)))
 (let ((?x1715 (top ?x1574)))
 (let ((?x1716 (stack ?x1715 ?x1354)))
 (let (($x1743 (= ?x1492 ?x1716)))
 (let (($x1730 (= c____________ center-to-left)))
 (let (($x1731 (and $x1730 $x1727)))
 (let ((?x1525 (rest ?x1354)))
 (let (($x1739 (= ?x1492 ?x1525)))
 (let (($x1732 ((_ is stack ) ?x1354)))
 (let (($x1733 (= c____________ left-to-right)))
 (let (($x1734 (and $x1733 $x1732)))
 (let (($x1735 (= c____________ left-to-center)))
 (let (($x1736 (and $x1735 $x1732)))
 (ite $x1736 $x1739 (ite $x1734 $x1739 (ite $x1731 $x1743 (ite $x1729 $x1752 (ite $x1726 $x1746 $x1752))))))))))))))))))))))))))))))))
(assert
 (let ((?x1388 (right s____________)))
 (let ((?x1526 (right s_____________)))
 (let (($x1748 (= ?x1526 ?x1388)))
 (let ((?x1718 (rest ?x1388)))
 (let (($x1745 (= ?x1526 ?x1718)))
 (let (($x1722 ((_ is stack ) ?x1388)))
 (let (($x1723 (= c____________ right-to-center)))
 (let (($x1724 (and $x1723 $x1722)))
 (let (($x1725 (= c____________ right-to-left)))
 (let (($x1726 (and $x1725 $x1722)))
 (let ((?x1574 (center s____________)))
 (let ((?x1715 (top ?x1574)))
 (let ((?x1717 (stack ?x1715 ?x1388)))
 (let (($x1744 (= ?x1526 ?x1717)))
 (let (($x1727 ((_ is stack ) ?x1574)))
 (let (($x1728 (= c____________ center-to-right)))
 (let (($x1729 (and $x1728 $x1727)))
 (let (($x1730 (= c____________ center-to-left)))
 (let (($x1731 (and $x1730 $x1727)))
 (let ((?x1354 (left s____________)))
 (let (($x1732 ((_ is stack ) ?x1354)))
 (let (($x1733 (= c____________ left-to-right)))
 (let (($x1734 (and $x1733 $x1732)))
 (let (($x1765 (ite $x1734 $x1748 (ite $x1731 $x1748 (ite $x1729 $x1744 (ite $x1726 $x1745 (ite $x1724 $x1745 $x1748)))))))
 (let ((?x1572 (top ?x1354)))
 (let ((?x1711 (stack ?x1572 ?x1388)))
 (let (($x1740 (= ?x1526 ?x1711)))
 (let (($x1735 (= c____________ left-to-center)))
 (let (($x1736 (and $x1735 $x1732)))
 (ite $x1736 $x1740 $x1765)))))))))))))))))))))))))))))))
(assert
 (let ((?x1574 (center s____________)))
 (let ((?x1712 (center s_____________)))
 (let (($x1750 (= ?x1712 ?x1574)))
 (let ((?x1388 (right s____________)))
 (let ((?x1719 (top ?x1388)))
 (let ((?x1721 (stack ?x1719 ?x1574)))
 (let (($x1747 (= ?x1712 ?x1721)))
 (let (($x1722 ((_ is stack ) ?x1388)))
 (let (($x1723 (= c____________ right-to-center)))
 (let (($x1724 (and $x1723 $x1722)))
 (let (($x1725 (= c____________ right-to-left)))
 (let (($x1726 (and $x1725 $x1722)))
 (let ((?x1714 (rest ?x1574)))
 (let (($x1742 (= ?x1712 ?x1714)))
 (let (($x1727 ((_ is stack ) ?x1574)))
 (let (($x1728 (= c____________ center-to-right)))
 (let (($x1729 (and $x1728 $x1727)))
 (let (($x1730 (= c____________ center-to-left)))
 (let (($x1731 (and $x1730 $x1727)))
 (let ((?x1354 (left s____________)))
 (let ((?x1572 (top ?x1354)))
 (let ((?x1713 (stack ?x1572 ?x1574)))
 (let (($x1741 (= ?x1712 ?x1713)))
 (let (($x1732 ((_ is stack ) ?x1354)))
 (let (($x1733 (= c____________ left-to-right)))
 (let (($x1734 (and $x1733 $x1732)))
 (let (($x1764 (ite $x1734 $x1741 (ite $x1731 $x1742 (ite $x1729 $x1742 (ite $x1726 $x1750 (ite $x1724 $x1747 $x1750)))))))
 (let (($x1735 (= c____________ left-to-center)))
 (let (($x1736 (and $x1735 $x1732)))
 (ite $x1736 $x1750 $x1764)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1492 (left s_____________)))
 (let ((?x1630 (left s______________)))
 (let (($x1890 (= ?x1630 ?x1492)))
 (let ((?x1526 (right s_____________)))
 (let ((?x1857 (top ?x1526)))
 (let ((?x1858 (stack ?x1857 ?x1492)))
 (let (($x1884 (= ?x1630 ?x1858)))
 (let (($x1860 ((_ is stack ) ?x1526)))
 (let (($x1863 (= c_____________ right-to-left)))
 (let (($x1864 (and $x1863 $x1860)))
 (let ((?x1712 (center s_____________)))
 (let (($x1865 ((_ is stack ) ?x1712)))
 (let (($x1866 (= c_____________ center-to-right)))
 (let (($x1867 (and $x1866 $x1865)))
 (let ((?x1853 (top ?x1712)))
 (let ((?x1854 (stack ?x1853 ?x1492)))
 (let (($x1881 (= ?x1630 ?x1854)))
 (let (($x1868 (= c_____________ center-to-left)))
 (let (($x1869 (and $x1868 $x1865)))
 (let ((?x1663 (rest ?x1492)))
 (let (($x1877 (= ?x1630 ?x1663)))
 (let (($x1870 ((_ is stack ) ?x1492)))
 (let (($x1871 (= c_____________ left-to-right)))
 (let (($x1872 (and $x1871 $x1870)))
 (let (($x1873 (= c_____________ left-to-center)))
 (let (($x1874 (and $x1873 $x1870)))
 (ite $x1874 $x1877 (ite $x1872 $x1877 (ite $x1869 $x1881 (ite $x1867 $x1890 (ite $x1864 $x1884 $x1890))))))))))))))))))))))))))))))))
(assert
 (let ((?x1526 (right s_____________)))
 (let ((?x1664 (right s______________)))
 (let (($x1886 (= ?x1664 ?x1526)))
 (let ((?x1856 (rest ?x1526)))
 (let (($x1883 (= ?x1664 ?x1856)))
 (let (($x1860 ((_ is stack ) ?x1526)))
 (let (($x1861 (= c_____________ right-to-center)))
 (let (($x1862 (and $x1861 $x1860)))
 (let (($x1863 (= c_____________ right-to-left)))
 (let (($x1864 (and $x1863 $x1860)))
 (let ((?x1712 (center s_____________)))
 (let ((?x1853 (top ?x1712)))
 (let ((?x1855 (stack ?x1853 ?x1526)))
 (let (($x1882 (= ?x1664 ?x1855)))
 (let (($x1865 ((_ is stack ) ?x1712)))
 (let (($x1866 (= c_____________ center-to-right)))
 (let (($x1867 (and $x1866 $x1865)))
 (let (($x1868 (= c_____________ center-to-left)))
 (let (($x1869 (and $x1868 $x1865)))
 (let ((?x1492 (left s_____________)))
 (let (($x1870 ((_ is stack ) ?x1492)))
 (let (($x1871 (= c_____________ left-to-right)))
 (let (($x1872 (and $x1871 $x1870)))
 (let (($x1903 (ite $x1872 $x1886 (ite $x1869 $x1886 (ite $x1867 $x1882 (ite $x1864 $x1883 (ite $x1862 $x1883 $x1886)))))))
 (let ((?x1710 (top ?x1492)))
 (let ((?x1849 (stack ?x1710 ?x1526)))
 (let (($x1878 (= ?x1664 ?x1849)))
 (let (($x1873 (= c_____________ left-to-center)))
 (let (($x1874 (and $x1873 $x1870)))
 (ite $x1874 $x1878 $x1903)))))))))))))))))))))))))))))))
(assert
 (let ((?x1712 (center s_____________)))
 (let ((?x1850 (center s______________)))
 (let (($x1888 (= ?x1850 ?x1712)))
 (let ((?x1526 (right s_____________)))
 (let ((?x1857 (top ?x1526)))
 (let ((?x1859 (stack ?x1857 ?x1712)))
 (let (($x1885 (= ?x1850 ?x1859)))
 (let (($x1860 ((_ is stack ) ?x1526)))
 (let (($x1861 (= c_____________ right-to-center)))
 (let (($x1862 (and $x1861 $x1860)))
 (let (($x1863 (= c_____________ right-to-left)))
 (let (($x1864 (and $x1863 $x1860)))
 (let ((?x1852 (rest ?x1712)))
 (let (($x1880 (= ?x1850 ?x1852)))
 (let (($x1865 ((_ is stack ) ?x1712)))
 (let (($x1866 (= c_____________ center-to-right)))
 (let (($x1867 (and $x1866 $x1865)))
 (let (($x1868 (= c_____________ center-to-left)))
 (let (($x1869 (and $x1868 $x1865)))
 (let ((?x1492 (left s_____________)))
 (let ((?x1710 (top ?x1492)))
 (let ((?x1851 (stack ?x1710 ?x1712)))
 (let (($x1879 (= ?x1850 ?x1851)))
 (let (($x1870 ((_ is stack ) ?x1492)))
 (let (($x1871 (= c_____________ left-to-right)))
 (let (($x1872 (and $x1871 $x1870)))
 (let (($x1902 (ite $x1872 $x1879 (ite $x1869 $x1880 (ite $x1867 $x1880 (ite $x1864 $x1888 (ite $x1862 $x1885 $x1888)))))))
 (let (($x1873 (= c_____________ left-to-center)))
 (let (($x1874 (and $x1873 $x1870)))
 (ite $x1874 $x1888 $x1902)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1630 (left s______________)))
 (let ((?x1768 (left s_______________)))
 (let (($x2028 (= ?x1768 ?x1630)))
 (let ((?x1664 (right s______________)))
 (let ((?x1995 (top ?x1664)))
 (let ((?x1996 (stack ?x1995 ?x1630)))
 (let (($x2022 (= ?x1768 ?x1996)))
 (let (($x1998 ((_ is stack ) ?x1664)))
 (let (($x2001 (= c______________ right-to-left)))
 (let (($x2002 (and $x2001 $x1998)))
 (let ((?x1850 (center s______________)))
 (let (($x2003 ((_ is stack ) ?x1850)))
 (let (($x2004 (= c______________ center-to-right)))
 (let (($x2005 (and $x2004 $x2003)))
 (let ((?x1991 (top ?x1850)))
 (let ((?x1992 (stack ?x1991 ?x1630)))
 (let (($x2019 (= ?x1768 ?x1992)))
 (let (($x2006 (= c______________ center-to-left)))
 (let (($x2007 (and $x2006 $x2003)))
 (let ((?x1801 (rest ?x1630)))
 (let (($x2015 (= ?x1768 ?x1801)))
 (let (($x2008 ((_ is stack ) ?x1630)))
 (let (($x2009 (= c______________ left-to-right)))
 (let (($x2010 (and $x2009 $x2008)))
 (let (($x2011 (= c______________ left-to-center)))
 (let (($x2012 (and $x2011 $x2008)))
 (ite $x2012 $x2015 (ite $x2010 $x2015 (ite $x2007 $x2019 (ite $x2005 $x2028 (ite $x2002 $x2022 $x2028))))))))))))))))))))))))))))))))
(assert
 (let ((?x1664 (right s______________)))
 (let ((?x1802 (right s_______________)))
 (let (($x2024 (= ?x1802 ?x1664)))
 (let ((?x1994 (rest ?x1664)))
 (let (($x2021 (= ?x1802 ?x1994)))
 (let (($x1998 ((_ is stack ) ?x1664)))
 (let (($x1999 (= c______________ right-to-center)))
 (let (($x2000 (and $x1999 $x1998)))
 (let (($x2001 (= c______________ right-to-left)))
 (let (($x2002 (and $x2001 $x1998)))
 (let ((?x1850 (center s______________)))
 (let ((?x1991 (top ?x1850)))
 (let ((?x1993 (stack ?x1991 ?x1664)))
 (let (($x2020 (= ?x1802 ?x1993)))
 (let (($x2003 ((_ is stack ) ?x1850)))
 (let (($x2004 (= c______________ center-to-right)))
 (let (($x2005 (and $x2004 $x2003)))
 (let (($x2006 (= c______________ center-to-left)))
 (let (($x2007 (and $x2006 $x2003)))
 (let ((?x1630 (left s______________)))
 (let (($x2008 ((_ is stack ) ?x1630)))
 (let (($x2009 (= c______________ left-to-right)))
 (let (($x2010 (and $x2009 $x2008)))
 (let (($x2041 (ite $x2010 $x2024 (ite $x2007 $x2024 (ite $x2005 $x2020 (ite $x2002 $x2021 (ite $x2000 $x2021 $x2024)))))))
 (let ((?x1848 (top ?x1630)))
 (let ((?x1987 (stack ?x1848 ?x1664)))
 (let (($x2016 (= ?x1802 ?x1987)))
 (let (($x2011 (= c______________ left-to-center)))
 (let (($x2012 (and $x2011 $x2008)))
 (ite $x2012 $x2016 $x2041)))))))))))))))))))))))))))))))
(assert
 (let ((?x1850 (center s______________)))
 (let ((?x1988 (center s_______________)))
 (let (($x2026 (= ?x1988 ?x1850)))
 (let ((?x1664 (right s______________)))
 (let ((?x1995 (top ?x1664)))
 (let ((?x1997 (stack ?x1995 ?x1850)))
 (let (($x2023 (= ?x1988 ?x1997)))
 (let (($x1998 ((_ is stack ) ?x1664)))
 (let (($x1999 (= c______________ right-to-center)))
 (let (($x2000 (and $x1999 $x1998)))
 (let (($x2001 (= c______________ right-to-left)))
 (let (($x2002 (and $x2001 $x1998)))
 (let ((?x1990 (rest ?x1850)))
 (let (($x2018 (= ?x1988 ?x1990)))
 (let (($x2003 ((_ is stack ) ?x1850)))
 (let (($x2004 (= c______________ center-to-right)))
 (let (($x2005 (and $x2004 $x2003)))
 (let (($x2006 (= c______________ center-to-left)))
 (let (($x2007 (and $x2006 $x2003)))
 (let ((?x1630 (left s______________)))
 (let ((?x1848 (top ?x1630)))
 (let ((?x1989 (stack ?x1848 ?x1850)))
 (let (($x2017 (= ?x1988 ?x1989)))
 (let (($x2008 ((_ is stack ) ?x1630)))
 (let (($x2009 (= c______________ left-to-right)))
 (let (($x2010 (and $x2009 $x2008)))
 (let (($x2040 (ite $x2010 $x2017 (ite $x2007 $x2018 (ite $x2005 $x2018 (ite $x2002 $x2026 (ite $x2000 $x2023 $x2026)))))))
 (let (($x2011 (= c______________ left-to-center)))
 (let (($x2012 (and $x2011 $x2008)))
 (ite $x2012 $x2026 $x2040)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1768 (left s_______________)))
 (let ((?x1906 (left s________________)))
 (let (($x2166 (= ?x1906 ?x1768)))
 (let ((?x1802 (right s_______________)))
 (let ((?x2133 (top ?x1802)))
 (let ((?x2134 (stack ?x2133 ?x1768)))
 (let (($x2160 (= ?x1906 ?x2134)))
 (let (($x2136 ((_ is stack ) ?x1802)))
 (let (($x2139 (= c_______________ right-to-left)))
 (let (($x2140 (and $x2139 $x2136)))
 (let ((?x1988 (center s_______________)))
 (let (($x2141 ((_ is stack ) ?x1988)))
 (let (($x2142 (= c_______________ center-to-right)))
 (let (($x2143 (and $x2142 $x2141)))
 (let ((?x2129 (top ?x1988)))
 (let ((?x2130 (stack ?x2129 ?x1768)))
 (let (($x2157 (= ?x1906 ?x2130)))
 (let (($x2144 (= c_______________ center-to-left)))
 (let (($x2145 (and $x2144 $x2141)))
 (let ((?x1939 (rest ?x1768)))
 (let (($x2153 (= ?x1906 ?x1939)))
 (let (($x2146 ((_ is stack ) ?x1768)))
 (let (($x2147 (= c_______________ left-to-right)))
 (let (($x2148 (and $x2147 $x2146)))
 (let (($x2149 (= c_______________ left-to-center)))
 (let (($x2150 (and $x2149 $x2146)))
 (ite $x2150 $x2153 (ite $x2148 $x2153 (ite $x2145 $x2157 (ite $x2143 $x2166 (ite $x2140 $x2160 $x2166))))))))))))))))))))))))))))))))
(assert
 (let ((?x1802 (right s_______________)))
 (let ((?x1940 (right s________________)))
 (let (($x2162 (= ?x1940 ?x1802)))
 (let ((?x2132 (rest ?x1802)))
 (let (($x2159 (= ?x1940 ?x2132)))
 (let (($x2136 ((_ is stack ) ?x1802)))
 (let (($x2137 (= c_______________ right-to-center)))
 (let (($x2138 (and $x2137 $x2136)))
 (let (($x2139 (= c_______________ right-to-left)))
 (let (($x2140 (and $x2139 $x2136)))
 (let ((?x1988 (center s_______________)))
 (let ((?x2129 (top ?x1988)))
 (let ((?x2131 (stack ?x2129 ?x1802)))
 (let (($x2158 (= ?x1940 ?x2131)))
 (let (($x2141 ((_ is stack ) ?x1988)))
 (let (($x2142 (= c_______________ center-to-right)))
 (let (($x2143 (and $x2142 $x2141)))
 (let (($x2144 (= c_______________ center-to-left)))
 (let (($x2145 (and $x2144 $x2141)))
 (let ((?x1768 (left s_______________)))
 (let (($x2146 ((_ is stack ) ?x1768)))
 (let (($x2147 (= c_______________ left-to-right)))
 (let (($x2148 (and $x2147 $x2146)))
 (let (($x2179 (ite $x2148 $x2162 (ite $x2145 $x2162 (ite $x2143 $x2158 (ite $x2140 $x2159 (ite $x2138 $x2159 $x2162)))))))
 (let ((?x1986 (top ?x1768)))
 (let ((?x2125 (stack ?x1986 ?x1802)))
 (let (($x2154 (= ?x1940 ?x2125)))
 (let (($x2149 (= c_______________ left-to-center)))
 (let (($x2150 (and $x2149 $x2146)))
 (ite $x2150 $x2154 $x2179)))))))))))))))))))))))))))))))
(assert
 (let ((?x1988 (center s_______________)))
 (let ((?x2126 (center s________________)))
 (let (($x2164 (= ?x2126 ?x1988)))
 (let ((?x1802 (right s_______________)))
 (let ((?x2133 (top ?x1802)))
 (let ((?x2135 (stack ?x2133 ?x1988)))
 (let (($x2161 (= ?x2126 ?x2135)))
 (let (($x2136 ((_ is stack ) ?x1802)))
 (let (($x2137 (= c_______________ right-to-center)))
 (let (($x2138 (and $x2137 $x2136)))
 (let (($x2139 (= c_______________ right-to-left)))
 (let (($x2140 (and $x2139 $x2136)))
 (let ((?x2128 (rest ?x1988)))
 (let (($x2156 (= ?x2126 ?x2128)))
 (let (($x2141 ((_ is stack ) ?x1988)))
 (let (($x2142 (= c_______________ center-to-right)))
 (let (($x2143 (and $x2142 $x2141)))
 (let (($x2144 (= c_______________ center-to-left)))
 (let (($x2145 (and $x2144 $x2141)))
 (let ((?x1768 (left s_______________)))
 (let ((?x1986 (top ?x1768)))
 (let ((?x2127 (stack ?x1986 ?x1988)))
 (let (($x2155 (= ?x2126 ?x2127)))
 (let (($x2146 ((_ is stack ) ?x1768)))
 (let (($x2147 (= c_______________ left-to-right)))
 (let (($x2148 (and $x2147 $x2146)))
 (let (($x2178 (ite $x2148 $x2155 (ite $x2145 $x2156 (ite $x2143 $x2156 (ite $x2140 $x2164 (ite $x2138 $x2161 $x2164)))))))
 (let (($x2149 (= c_______________ left-to-center)))
 (let (($x2150 (and $x2149 $x2146)))
 (ite $x2150 $x2164 $x2178)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1906 (left s________________)))
 (let ((?x2044 (left s_________________)))
 (let (($x2304 (= ?x2044 ?x1906)))
 (let ((?x1940 (right s________________)))
 (let ((?x2271 (top ?x1940)))
 (let ((?x2272 (stack ?x2271 ?x1906)))
 (let (($x2298 (= ?x2044 ?x2272)))
 (let (($x2274 ((_ is stack ) ?x1940)))
 (let (($x2277 (= c________________ right-to-left)))
 (let (($x2278 (and $x2277 $x2274)))
 (let ((?x2126 (center s________________)))
 (let (($x2279 ((_ is stack ) ?x2126)))
 (let (($x2280 (= c________________ center-to-right)))
 (let (($x2281 (and $x2280 $x2279)))
 (let ((?x2267 (top ?x2126)))
 (let ((?x2268 (stack ?x2267 ?x1906)))
 (let (($x2295 (= ?x2044 ?x2268)))
 (let (($x2282 (= c________________ center-to-left)))
 (let (($x2283 (and $x2282 $x2279)))
 (let ((?x2077 (rest ?x1906)))
 (let (($x2291 (= ?x2044 ?x2077)))
 (let (($x2284 ((_ is stack ) ?x1906)))
 (let (($x2285 (= c________________ left-to-right)))
 (let (($x2286 (and $x2285 $x2284)))
 (let (($x2287 (= c________________ left-to-center)))
 (let (($x2288 (and $x2287 $x2284)))
 (ite $x2288 $x2291 (ite $x2286 $x2291 (ite $x2283 $x2295 (ite $x2281 $x2304 (ite $x2278 $x2298 $x2304))))))))))))))))))))))))))))))))
(assert
 (let ((?x1940 (right s________________)))
 (let ((?x2078 (right s_________________)))
 (let (($x2300 (= ?x2078 ?x1940)))
 (let ((?x2270 (rest ?x1940)))
 (let (($x2297 (= ?x2078 ?x2270)))
 (let (($x2274 ((_ is stack ) ?x1940)))
 (let (($x2275 (= c________________ right-to-center)))
 (let (($x2276 (and $x2275 $x2274)))
 (let (($x2277 (= c________________ right-to-left)))
 (let (($x2278 (and $x2277 $x2274)))
 (let ((?x2126 (center s________________)))
 (let ((?x2267 (top ?x2126)))
 (let ((?x2269 (stack ?x2267 ?x1940)))
 (let (($x2296 (= ?x2078 ?x2269)))
 (let (($x2279 ((_ is stack ) ?x2126)))
 (let (($x2280 (= c________________ center-to-right)))
 (let (($x2281 (and $x2280 $x2279)))
 (let (($x2282 (= c________________ center-to-left)))
 (let (($x2283 (and $x2282 $x2279)))
 (let ((?x1906 (left s________________)))
 (let (($x2284 ((_ is stack ) ?x1906)))
 (let (($x2285 (= c________________ left-to-right)))
 (let (($x2286 (and $x2285 $x2284)))
 (let (($x2317 (ite $x2286 $x2300 (ite $x2283 $x2300 (ite $x2281 $x2296 (ite $x2278 $x2297 (ite $x2276 $x2297 $x2300)))))))
 (let ((?x2124 (top ?x1906)))
 (let ((?x2263 (stack ?x2124 ?x1940)))
 (let (($x2292 (= ?x2078 ?x2263)))
 (let (($x2287 (= c________________ left-to-center)))
 (let (($x2288 (and $x2287 $x2284)))
 (ite $x2288 $x2292 $x2317)))))))))))))))))))))))))))))))
(assert
 (let ((?x2126 (center s________________)))
 (let ((?x2264 (center s_________________)))
 (let (($x2302 (= ?x2264 ?x2126)))
 (let ((?x1940 (right s________________)))
 (let ((?x2271 (top ?x1940)))
 (let ((?x2273 (stack ?x2271 ?x2126)))
 (let (($x2299 (= ?x2264 ?x2273)))
 (let (($x2274 ((_ is stack ) ?x1940)))
 (let (($x2275 (= c________________ right-to-center)))
 (let (($x2276 (and $x2275 $x2274)))
 (let (($x2277 (= c________________ right-to-left)))
 (let (($x2278 (and $x2277 $x2274)))
 (let ((?x2266 (rest ?x2126)))
 (let (($x2294 (= ?x2264 ?x2266)))
 (let (($x2279 ((_ is stack ) ?x2126)))
 (let (($x2280 (= c________________ center-to-right)))
 (let (($x2281 (and $x2280 $x2279)))
 (let (($x2282 (= c________________ center-to-left)))
 (let (($x2283 (and $x2282 $x2279)))
 (let ((?x1906 (left s________________)))
 (let ((?x2124 (top ?x1906)))
 (let ((?x2265 (stack ?x2124 ?x2126)))
 (let (($x2293 (= ?x2264 ?x2265)))
 (let (($x2284 ((_ is stack ) ?x1906)))
 (let (($x2285 (= c________________ left-to-right)))
 (let (($x2286 (and $x2285 $x2284)))
 (let (($x2316 (ite $x2286 $x2293 (ite $x2283 $x2294 (ite $x2281 $x2294 (ite $x2278 $x2302 (ite $x2276 $x2299 $x2302)))))))
 (let (($x2287 (= c________________ left-to-center)))
 (let (($x2288 (and $x2287 $x2284)))
 (ite $x2288 $x2302 $x2316)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2044 (left s_________________)))
 (let ((?x2182 (left s__________________)))
 (let (($x2442 (= ?x2182 ?x2044)))
 (let ((?x2078 (right s_________________)))
 (let ((?x2409 (top ?x2078)))
 (let ((?x2410 (stack ?x2409 ?x2044)))
 (let (($x2436 (= ?x2182 ?x2410)))
 (let (($x2412 ((_ is stack ) ?x2078)))
 (let (($x2415 (= c_________________ right-to-left)))
 (let (($x2416 (and $x2415 $x2412)))
 (let ((?x2264 (center s_________________)))
 (let (($x2417 ((_ is stack ) ?x2264)))
 (let (($x2418 (= c_________________ center-to-right)))
 (let (($x2419 (and $x2418 $x2417)))
 (let ((?x2405 (top ?x2264)))
 (let ((?x2406 (stack ?x2405 ?x2044)))
 (let (($x2433 (= ?x2182 ?x2406)))
 (let (($x2420 (= c_________________ center-to-left)))
 (let (($x2421 (and $x2420 $x2417)))
 (let ((?x2215 (rest ?x2044)))
 (let (($x2429 (= ?x2182 ?x2215)))
 (let (($x2422 ((_ is stack ) ?x2044)))
 (let (($x2423 (= c_________________ left-to-right)))
 (let (($x2424 (and $x2423 $x2422)))
 (let (($x2425 (= c_________________ left-to-center)))
 (let (($x2426 (and $x2425 $x2422)))
 (ite $x2426 $x2429 (ite $x2424 $x2429 (ite $x2421 $x2433 (ite $x2419 $x2442 (ite $x2416 $x2436 $x2442))))))))))))))))))))))))))))))))
(assert
 (let ((?x2078 (right s_________________)))
 (let ((?x2216 (right s__________________)))
 (let (($x2438 (= ?x2216 ?x2078)))
 (let ((?x2408 (rest ?x2078)))
 (let (($x2435 (= ?x2216 ?x2408)))
 (let (($x2412 ((_ is stack ) ?x2078)))
 (let (($x2413 (= c_________________ right-to-center)))
 (let (($x2414 (and $x2413 $x2412)))
 (let (($x2415 (= c_________________ right-to-left)))
 (let (($x2416 (and $x2415 $x2412)))
 (let ((?x2264 (center s_________________)))
 (let ((?x2405 (top ?x2264)))
 (let ((?x2407 (stack ?x2405 ?x2078)))
 (let (($x2434 (= ?x2216 ?x2407)))
 (let (($x2417 ((_ is stack ) ?x2264)))
 (let (($x2418 (= c_________________ center-to-right)))
 (let (($x2419 (and $x2418 $x2417)))
 (let (($x2420 (= c_________________ center-to-left)))
 (let (($x2421 (and $x2420 $x2417)))
 (let ((?x2044 (left s_________________)))
 (let (($x2422 ((_ is stack ) ?x2044)))
 (let (($x2423 (= c_________________ left-to-right)))
 (let (($x2424 (and $x2423 $x2422)))
 (let (($x2455 (ite $x2424 $x2438 (ite $x2421 $x2438 (ite $x2419 $x2434 (ite $x2416 $x2435 (ite $x2414 $x2435 $x2438)))))))
 (let ((?x2262 (top ?x2044)))
 (let ((?x2401 (stack ?x2262 ?x2078)))
 (let (($x2430 (= ?x2216 ?x2401)))
 (let (($x2425 (= c_________________ left-to-center)))
 (let (($x2426 (and $x2425 $x2422)))
 (ite $x2426 $x2430 $x2455)))))))))))))))))))))))))))))))
(assert
 (let ((?x2264 (center s_________________)))
 (let ((?x2402 (center s__________________)))
 (let (($x2440 (= ?x2402 ?x2264)))
 (let ((?x2078 (right s_________________)))
 (let ((?x2409 (top ?x2078)))
 (let ((?x2411 (stack ?x2409 ?x2264)))
 (let (($x2437 (= ?x2402 ?x2411)))
 (let (($x2412 ((_ is stack ) ?x2078)))
 (let (($x2413 (= c_________________ right-to-center)))
 (let (($x2414 (and $x2413 $x2412)))
 (let (($x2415 (= c_________________ right-to-left)))
 (let (($x2416 (and $x2415 $x2412)))
 (let ((?x2404 (rest ?x2264)))
 (let (($x2432 (= ?x2402 ?x2404)))
 (let (($x2417 ((_ is stack ) ?x2264)))
 (let (($x2418 (= c_________________ center-to-right)))
 (let (($x2419 (and $x2418 $x2417)))
 (let (($x2420 (= c_________________ center-to-left)))
 (let (($x2421 (and $x2420 $x2417)))
 (let ((?x2044 (left s_________________)))
 (let ((?x2262 (top ?x2044)))
 (let ((?x2403 (stack ?x2262 ?x2264)))
 (let (($x2431 (= ?x2402 ?x2403)))
 (let (($x2422 ((_ is stack ) ?x2044)))
 (let (($x2423 (= c_________________ left-to-right)))
 (let (($x2424 (and $x2423 $x2422)))
 (let (($x2454 (ite $x2424 $x2431 (ite $x2421 $x2432 (ite $x2419 $x2432 (ite $x2416 $x2440 (ite $x2414 $x2437 $x2440)))))))
 (let (($x2425 (= c_________________ left-to-center)))
 (let (($x2426 (and $x2425 $x2422)))
 (ite $x2426 $x2440 $x2454)))))))))))))))))))))))))))))))
(assert
 (let ((?x47 (stack L (stack I (stack B empty)))))
 (let ((?x2216 (right s__________________)))
 (let (($x2458 (= ?x2216 ?x47)))
 (let ((?x42 (stack F (stack H (stack D (stack A (stack G (stack C empty))))))))
 (let ((?x44 (stack K (stack E ?x42))))
 (let ((?x2402 (center s__________________)))
 (let (($x2489 (= ?x2402 ?x44)))
 (let ((?x37 (stack J empty)))
 (let ((?x2182 (left s__________________)))
 (let (($x2490 (= ?x2182 ?x37)))
 (let (($x2492 (not (and $x2490 $x2489 $x2458))))
 (not $x2492)))))))))))))
(check-sat)
(exit)
