(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(declare-fun c!19 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________________ () Record_left_center_right)
(declare-fun c!20 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________________ () Record_left_center_right)
(declare-fun c!21 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________________ () Record_left_center_right)
(declare-fun c!22 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________________ () Record_left_center_right)
(declare-fun c!23 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________________ () Record_left_center_right)
(declare-fun c!24 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________________ () Record_left_center_right)
(declare-fun c!25 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x33 (stack D empty)))
 (let ((?x32 (stack R ?x33)))
 (let ((?x34 (stack Q ?x32)))
 (let ((?x35 (stack M ?x34)))
 (let ((?x36 (stack A ?x35)))
 (let ((?x37 (stack K ?x36)))
 (let ((?x38 (stack J ?x37)))
 (let ((?x39 (stack O ?x38)))
 (let ((?x40 (stack S ?x39)))
 (let ((?x41 (stack F ?x40)))
 (let ((?x42 (stack T ?x41)))
 (let ((?x43 (stack E ?x42)))
 (let ((?x44 (stack C ?x43)))
 (let ((?x45 (stack H ?x44)))
 (let ((?x46 (stack G ?x45)))
 (let ((?x47 (stack B ?x46)))
 (let ((?x48 (stack I ?x47)))
 (let ((?x49 (stack L ?x48)))
 (let ((?x50 (stack P ?x49)))
 (let ((?x51 (stack N ?x50)))
 (let ((?x118 (left s_tmp_)))
 (= ?x118 ?x51)))))))))))))))))))))))
(assert
 (let ((?x121 (center s_tmp__)))
 (= ?x121 empty)))
(assert
 (let ((?x124 (right s_tmp___)))
 (= ?x124 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x151 (left s_tmp__)))
 (= (left s_tmp___) ?x151)))
(assert
 (let ((?x121 (center s_tmp__)))
 (= (center s_tmp___) ?x121)))
(assert
 (let ((?x155 (center s_tmp_)))
 (= ?x155 (center s_tmp))))
(assert
 (let ((?x158 (right s_tmp_)))
 (= ?x158 (right s_tmp))))
(assert
 (let ((?x118 (left s_tmp_)))
 (let ((?x151 (left s_tmp__)))
 (= ?x151 ?x118))))
(assert
 (let ((?x158 (right s_tmp_)))
 (let ((?x162 (right s_tmp__)))
 (= ?x162 ?x158))))
(assert
 (= c__ c!1))
(assert
 (let ((?x95 (left s_)))
 (let ((?x272 (left s__)))
 (let (($x290 (= ?x272 ?x95)))
 (let ((?x98 (right s_)))
 (let (($x302 ((_ is stack ) ?x98)))
 (let (($x276 (and (= c_ right-to-left) $x302)))
 (let ((?x100 (center s_)))
 (let (($x277 ((_ is stack ) ?x100)))
 (let (($x309 (and (= c_ center-to-right) $x277)))
 (let (($x311 (and (= c_ center-to-left) $x277)))
 (let (($x320 (ite $x311 (= ?x272 (stack (top ?x100) ?x95)) (ite $x309 $x290 (ite $x276 (= ?x272 (stack (top ?x98) ?x95)) $x290)))))
 (let (($x265 (= ?x272 (rest ?x95))))
 (let (($x267 ((_ is stack ) ?x95)))
 (let (($x268 (= c_ left-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x306 (= c_ left-to-center)))
 (let (($x307 (and $x306 $x267)))
 (ite $x307 $x265 (ite $x269 $x265 $x320))))))))))))))))))))
(assert
 (let ((?x98 (right s_)))
 (let ((?x280 (right s__)))
 (let (($x286 (= ?x280 ?x98)))
 (let (($x295 (= ?x280 (rest ?x98))))
 (let (($x302 ((_ is stack ) ?x98)))
 (let (($x298 (and (= c_ right-to-center) $x302)))
 (let (($x276 (and (= c_ right-to-left) $x302)))
 (let ((?x100 (center s_)))
 (let (($x277 ((_ is stack ) ?x100)))
 (let (($x309 (and (= c_ center-to-right) $x277)))
 (let (($x317 (ite $x309 (= ?x280 (stack (top ?x100) ?x98)) (ite $x276 $x295 (ite $x298 $x295 $x286)))))
 (let (($x311 (and (= c_ center-to-left) $x277)))
 (let ((?x95 (left s_)))
 (let (($x267 ((_ is stack ) ?x95)))
 (let (($x268 (= c_ left-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x306 (= c_ left-to-center)))
 (let (($x307 (and $x306 $x267)))
 (ite $x307 (= ?x280 (stack (top ?x95) ?x98)) (ite $x269 $x286 (ite $x311 $x286 $x317))))))))))))))))))))))
(assert
 (let ((?x100 (center s_)))
 (let ((?x274 (center s__)))
 (let (($x288 (= ?x274 ?x100)))
 (let ((?x98 (right s_)))
 (let (($x302 ((_ is stack ) ?x98)))
 (let (($x298 (and (= c_ right-to-center) $x302)))
 (let (($x276 (and (= c_ right-to-left) $x302)))
 (let (($x304 (= ?x274 (rest ?x100))))
 (let (($x277 ((_ is stack ) ?x100)))
 (let (($x309 (and (= c_ center-to-right) $x277)))
 (let (($x316 (ite $x309 $x304 (ite $x276 $x288 (ite $x298 (= ?x274 (stack (top ?x98) ?x100)) $x288)))))
 (let (($x311 (and (= c_ center-to-left) $x277)))
 (let ((?x95 (left s_)))
 (let (($x267 ((_ is stack ) ?x95)))
 (let (($x268 (= c_ left-to-right)))
 (let (($x269 (and $x268 $x267)))
 (let (($x306 (= c_ left-to-center)))
 (let (($x307 (and $x306 $x267)))
 (ite $x307 $x288 (ite $x269 (= ?x274 (stack (top ?x95) ?x100)) (ite $x311 $x304 $x316))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x272 (left s__)))
 (let ((?x165 (left s___)))
 (let (($x402 (= ?x165 ?x272)))
 (let ((?x280 (right s__)))
 (let ((?x369 (top ?x280)))
 (let ((?x370 (stack ?x369 ?x272)))
 (let (($x396 (= ?x165 ?x370)))
 (let (($x372 ((_ is stack ) ?x280)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x274 (center s__)))
 (let (($x377 ((_ is stack ) ?x274)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let ((?x365 (top ?x274)))
 (let ((?x366 (stack ?x365 ?x272)))
 (let (($x393 (= ?x165 ?x366)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x167 (rest ?x272)))
 (let (($x389 (= ?x165 ?x167)))
 (let (($x382 ((_ is stack ) ?x272)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x389 (ite $x384 $x389 (ite $x381 $x393 (ite $x379 $x402 (ite $x376 $x396 $x402))))))))))))))))))))))))))))))))
(assert
 (let ((?x280 (right s__)))
 (let ((?x168 (right s___)))
 (let (($x398 (= ?x168 ?x280)))
 (let ((?x368 (rest ?x280)))
 (let (($x395 (= ?x168 ?x368)))
 (let (($x372 ((_ is stack ) ?x280)))
 (let (($x373 (= c__ right-to-center)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x274 (center s__)))
 (let ((?x365 (top ?x274)))
 (let ((?x367 (stack ?x365 ?x280)))
 (let (($x394 (= ?x168 ?x367)))
 (let (($x377 ((_ is stack ) ?x274)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x272 (left s__)))
 (let (($x382 ((_ is stack ) ?x272)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x415 (ite $x384 $x398 (ite $x381 $x398 (ite $x379 $x394 (ite $x376 $x395 (ite $x374 $x395 $x398)))))))
 (let ((?x263 (top ?x272)))
 (let ((?x361 (stack ?x263 ?x280)))
 (let (($x390 (= ?x168 ?x361)))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x390 $x415)))))))))))))))))))))))))))))))
(assert
 (let ((?x274 (center s__)))
 (let ((?x362 (center s___)))
 (let (($x400 (= ?x362 ?x274)))
 (let ((?x280 (right s__)))
 (let ((?x369 (top ?x280)))
 (let ((?x371 (stack ?x369 ?x274)))
 (let (($x397 (= ?x362 ?x371)))
 (let (($x372 ((_ is stack ) ?x280)))
 (let (($x373 (= c__ right-to-center)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x364 (rest ?x274)))
 (let (($x392 (= ?x362 ?x364)))
 (let (($x377 ((_ is stack ) ?x274)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x272 (left s__)))
 (let ((?x263 (top ?x272)))
 (let ((?x363 (stack ?x263 ?x274)))
 (let (($x391 (= ?x362 ?x363)))
 (let (($x382 ((_ is stack ) ?x272)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x414 (ite $x384 $x391 (ite $x381 $x392 (ite $x379 $x392 (ite $x376 $x400 (ite $x374 $x397 $x400)))))))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x400 $x414)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x165 (left s___)))
 (let ((?x327 (left s____)))
 (let (($x540 (= ?x327 ?x165)))
 (let ((?x168 (right s___)))
 (let ((?x507 (top ?x168)))
 (let ((?x508 (stack ?x507 ?x165)))
 (let (($x534 (= ?x327 ?x508)))
 (let (($x510 ((_ is stack ) ?x168)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x362 (center s___)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let ((?x503 (top ?x362)))
 (let ((?x504 (stack ?x503 ?x165)))
 (let (($x531 (= ?x327 ?x504)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x343 (rest ?x165)))
 (let (($x527 (= ?x327 ?x343)))
 (let (($x520 ((_ is stack ) ?x165)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x527 (ite $x522 $x527 (ite $x519 $x531 (ite $x517 $x540 (ite $x514 $x534 $x540))))))))))))))))))))))))))))))))
(assert
 (let ((?x168 (right s___)))
 (let ((?x344 (right s____)))
 (let (($x536 (= ?x344 ?x168)))
 (let ((?x506 (rest ?x168)))
 (let (($x533 (= ?x344 ?x506)))
 (let (($x510 ((_ is stack ) ?x168)))
 (let (($x511 (= c___ right-to-center)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x362 (center s___)))
 (let ((?x503 (top ?x362)))
 (let ((?x505 (stack ?x503 ?x168)))
 (let (($x532 (= ?x344 ?x505)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x165 (left s___)))
 (let (($x520 ((_ is stack ) ?x165)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x553 (ite $x522 $x536 (ite $x519 $x536 (ite $x517 $x532 (ite $x514 $x533 (ite $x512 $x533 $x536)))))))
 (let ((?x360 (top ?x165)))
 (let ((?x499 (stack ?x360 ?x168)))
 (let (($x528 (= ?x344 ?x499)))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x528 $x553)))))))))))))))))))))))))))))))
(assert
 (let ((?x362 (center s___)))
 (let ((?x500 (center s____)))
 (let (($x538 (= ?x500 ?x362)))
 (let ((?x168 (right s___)))
 (let ((?x507 (top ?x168)))
 (let ((?x509 (stack ?x507 ?x362)))
 (let (($x535 (= ?x500 ?x509)))
 (let (($x510 ((_ is stack ) ?x168)))
 (let (($x511 (= c___ right-to-center)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x502 (rest ?x362)))
 (let (($x530 (= ?x500 ?x502)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x165 (left s___)))
 (let ((?x360 (top ?x165)))
 (let ((?x501 (stack ?x360 ?x362)))
 (let (($x529 (= ?x500 ?x501)))
 (let (($x520 ((_ is stack ) ?x165)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x552 (ite $x522 $x529 (ite $x519 $x530 (ite $x517 $x530 (ite $x514 $x538 (ite $x512 $x535 $x538)))))))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x538 $x552)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x327 (left s____)))
 (let ((?x418 (left s_____)))
 (let (($x678 (= ?x418 ?x327)))
 (let ((?x344 (right s____)))
 (let ((?x645 (top ?x344)))
 (let ((?x646 (stack ?x645 ?x327)))
 (let (($x672 (= ?x418 ?x646)))
 (let (($x648 ((_ is stack ) ?x344)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x500 (center s____)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let ((?x641 (top ?x500)))
 (let ((?x642 (stack ?x641 ?x327)))
 (let (($x669 (= ?x418 ?x642)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x451 (rest ?x327)))
 (let (($x665 (= ?x418 ?x451)))
 (let (($x658 ((_ is stack ) ?x327)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x665 (ite $x660 $x665 (ite $x657 $x669 (ite $x655 $x678 (ite $x652 $x672 $x678))))))))))))))))))))))))))))))))
(assert
 (let ((?x344 (right s____)))
 (let ((?x452 (right s_____)))
 (let (($x674 (= ?x452 ?x344)))
 (let ((?x644 (rest ?x344)))
 (let (($x671 (= ?x452 ?x644)))
 (let (($x648 ((_ is stack ) ?x344)))
 (let (($x649 (= c____ right-to-center)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x500 (center s____)))
 (let ((?x641 (top ?x500)))
 (let ((?x643 (stack ?x641 ?x344)))
 (let (($x670 (= ?x452 ?x643)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x327 (left s____)))
 (let (($x658 ((_ is stack ) ?x327)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x691 (ite $x660 $x674 (ite $x657 $x674 (ite $x655 $x670 (ite $x652 $x671 (ite $x650 $x671 $x674)))))))
 (let ((?x498 (top ?x327)))
 (let ((?x637 (stack ?x498 ?x344)))
 (let (($x666 (= ?x452 ?x637)))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x666 $x691)))))))))))))))))))))))))))))))
(assert
 (let ((?x500 (center s____)))
 (let ((?x638 (center s_____)))
 (let (($x676 (= ?x638 ?x500)))
 (let ((?x344 (right s____)))
 (let ((?x645 (top ?x344)))
 (let ((?x647 (stack ?x645 ?x500)))
 (let (($x673 (= ?x638 ?x647)))
 (let (($x648 ((_ is stack ) ?x344)))
 (let (($x649 (= c____ right-to-center)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x640 (rest ?x500)))
 (let (($x668 (= ?x638 ?x640)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x327 (left s____)))
 (let ((?x498 (top ?x327)))
 (let ((?x639 (stack ?x498 ?x500)))
 (let (($x667 (= ?x638 ?x639)))
 (let (($x658 ((_ is stack ) ?x327)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x690 (ite $x660 $x667 (ite $x657 $x668 (ite $x655 $x668 (ite $x652 $x676 (ite $x650 $x673 $x676)))))))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x676 $x690)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x418 (left s_____)))
 (let ((?x556 (left s______)))
 (let (($x816 (= ?x556 ?x418)))
 (let ((?x452 (right s_____)))
 (let ((?x783 (top ?x452)))
 (let ((?x784 (stack ?x783 ?x418)))
 (let (($x810 (= ?x556 ?x784)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x638 (center s_____)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let ((?x779 (top ?x638)))
 (let ((?x780 (stack ?x779 ?x418)))
 (let (($x807 (= ?x556 ?x780)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x589 (rest ?x418)))
 (let (($x803 (= ?x556 ?x589)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x803 (ite $x798 $x803 (ite $x795 $x807 (ite $x793 $x816 (ite $x790 $x810 $x816))))))))))))))))))))))))))))))))
(assert
 (let ((?x452 (right s_____)))
 (let ((?x590 (right s______)))
 (let (($x812 (= ?x590 ?x452)))
 (let ((?x782 (rest ?x452)))
 (let (($x809 (= ?x590 ?x782)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x787 (= c_____ right-to-center)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x638 (center s_____)))
 (let ((?x779 (top ?x638)))
 (let ((?x781 (stack ?x779 ?x452)))
 (let (($x808 (= ?x590 ?x781)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x418 (left s_____)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x829 (ite $x798 $x812 (ite $x795 $x812 (ite $x793 $x808 (ite $x790 $x809 (ite $x788 $x809 $x812)))))))
 (let ((?x636 (top ?x418)))
 (let ((?x775 (stack ?x636 ?x452)))
 (let (($x804 (= ?x590 ?x775)))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x804 $x829)))))))))))))))))))))))))))))))
(assert
 (let ((?x638 (center s_____)))
 (let ((?x776 (center s______)))
 (let (($x814 (= ?x776 ?x638)))
 (let ((?x452 (right s_____)))
 (let ((?x783 (top ?x452)))
 (let ((?x785 (stack ?x783 ?x638)))
 (let (($x811 (= ?x776 ?x785)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x787 (= c_____ right-to-center)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x778 (rest ?x638)))
 (let (($x806 (= ?x776 ?x778)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x418 (left s_____)))
 (let ((?x636 (top ?x418)))
 (let ((?x777 (stack ?x636 ?x638)))
 (let (($x805 (= ?x776 ?x777)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x828 (ite $x798 $x805 (ite $x795 $x806 (ite $x793 $x806 (ite $x790 $x814 (ite $x788 $x811 $x814)))))))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x814 $x828)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x556 (left s______)))
 (let ((?x694 (left s_______)))
 (let (($x954 (= ?x694 ?x556)))
 (let ((?x590 (right s______)))
 (let ((?x921 (top ?x590)))
 (let ((?x922 (stack ?x921 ?x556)))
 (let (($x948 (= ?x694 ?x922)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x776 (center s______)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let ((?x917 (top ?x776)))
 (let ((?x918 (stack ?x917 ?x556)))
 (let (($x945 (= ?x694 ?x918)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x727 (rest ?x556)))
 (let (($x941 (= ?x694 ?x727)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x941 (ite $x936 $x941 (ite $x933 $x945 (ite $x931 $x954 (ite $x928 $x948 $x954))))))))))))))))))))))))))))))))
(assert
 (let ((?x590 (right s______)))
 (let ((?x728 (right s_______)))
 (let (($x950 (= ?x728 ?x590)))
 (let ((?x920 (rest ?x590)))
 (let (($x947 (= ?x728 ?x920)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x925 (= c______ right-to-center)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x776 (center s______)))
 (let ((?x917 (top ?x776)))
 (let ((?x919 (stack ?x917 ?x590)))
 (let (($x946 (= ?x728 ?x919)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x556 (left s______)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x967 (ite $x936 $x950 (ite $x933 $x950 (ite $x931 $x946 (ite $x928 $x947 (ite $x926 $x947 $x950)))))))
 (let ((?x774 (top ?x556)))
 (let ((?x913 (stack ?x774 ?x590)))
 (let (($x942 (= ?x728 ?x913)))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x942 $x967)))))))))))))))))))))))))))))))
(assert
 (let ((?x776 (center s______)))
 (let ((?x914 (center s_______)))
 (let (($x952 (= ?x914 ?x776)))
 (let ((?x590 (right s______)))
 (let ((?x921 (top ?x590)))
 (let ((?x923 (stack ?x921 ?x776)))
 (let (($x949 (= ?x914 ?x923)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x925 (= c______ right-to-center)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x916 (rest ?x776)))
 (let (($x944 (= ?x914 ?x916)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x556 (left s______)))
 (let ((?x774 (top ?x556)))
 (let ((?x915 (stack ?x774 ?x776)))
 (let (($x943 (= ?x914 ?x915)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x966 (ite $x936 $x943 (ite $x933 $x944 (ite $x931 $x944 (ite $x928 $x952 (ite $x926 $x949 $x952)))))))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x952 $x966)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x694 (left s_______)))
 (let ((?x832 (left s________)))
 (let (($x1092 (= ?x832 ?x694)))
 (let ((?x728 (right s_______)))
 (let ((?x1059 (top ?x728)))
 (let ((?x1060 (stack ?x1059 ?x694)))
 (let (($x1086 (= ?x832 ?x1060)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x914 (center s_______)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let ((?x1055 (top ?x914)))
 (let ((?x1056 (stack ?x1055 ?x694)))
 (let (($x1083 (= ?x832 ?x1056)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x865 (rest ?x694)))
 (let (($x1079 (= ?x832 ?x865)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1079 (ite $x1074 $x1079 (ite $x1071 $x1083 (ite $x1069 $x1092 (ite $x1066 $x1086 $x1092))))))))))))))))))))))))))))))))
(assert
 (let ((?x728 (right s_______)))
 (let ((?x866 (right s________)))
 (let (($x1088 (= ?x866 ?x728)))
 (let ((?x1058 (rest ?x728)))
 (let (($x1085 (= ?x866 ?x1058)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1063 (= c_______ right-to-center)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x914 (center s_______)))
 (let ((?x1055 (top ?x914)))
 (let ((?x1057 (stack ?x1055 ?x728)))
 (let (($x1084 (= ?x866 ?x1057)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x694 (left s_______)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1105 (ite $x1074 $x1088 (ite $x1071 $x1088 (ite $x1069 $x1084 (ite $x1066 $x1085 (ite $x1064 $x1085 $x1088)))))))
 (let ((?x912 (top ?x694)))
 (let ((?x1051 (stack ?x912 ?x728)))
 (let (($x1080 (= ?x866 ?x1051)))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1080 $x1105)))))))))))))))))))))))))))))))
(assert
 (let ((?x914 (center s_______)))
 (let ((?x1052 (center s________)))
 (let (($x1090 (= ?x1052 ?x914)))
 (let ((?x728 (right s_______)))
 (let ((?x1059 (top ?x728)))
 (let ((?x1061 (stack ?x1059 ?x914)))
 (let (($x1087 (= ?x1052 ?x1061)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1063 (= c_______ right-to-center)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x1054 (rest ?x914)))
 (let (($x1082 (= ?x1052 ?x1054)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x694 (left s_______)))
 (let ((?x912 (top ?x694)))
 (let ((?x1053 (stack ?x912 ?x914)))
 (let (($x1081 (= ?x1052 ?x1053)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1104 (ite $x1074 $x1081 (ite $x1071 $x1082 (ite $x1069 $x1082 (ite $x1066 $x1090 (ite $x1064 $x1087 $x1090)))))))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1090 $x1104)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x832 (left s________)))
 (let ((?x970 (left s_________)))
 (let (($x1230 (= ?x970 ?x832)))
 (let ((?x866 (right s________)))
 (let ((?x1197 (top ?x866)))
 (let ((?x1198 (stack ?x1197 ?x832)))
 (let (($x1224 (= ?x970 ?x1198)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1052 (center s________)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let ((?x1193 (top ?x1052)))
 (let ((?x1194 (stack ?x1193 ?x832)))
 (let (($x1221 (= ?x970 ?x1194)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x1003 (rest ?x832)))
 (let (($x1217 (= ?x970 ?x1003)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1217 (ite $x1212 $x1217 (ite $x1209 $x1221 (ite $x1207 $x1230 (ite $x1204 $x1224 $x1230))))))))))))))))))))))))))))))))
(assert
 (let ((?x866 (right s________)))
 (let ((?x1004 (right s_________)))
 (let (($x1226 (= ?x1004 ?x866)))
 (let ((?x1196 (rest ?x866)))
 (let (($x1223 (= ?x1004 ?x1196)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1201 (= c________ right-to-center)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1052 (center s________)))
 (let ((?x1193 (top ?x1052)))
 (let ((?x1195 (stack ?x1193 ?x866)))
 (let (($x1222 (= ?x1004 ?x1195)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x832 (left s________)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1243 (ite $x1212 $x1226 (ite $x1209 $x1226 (ite $x1207 $x1222 (ite $x1204 $x1223 (ite $x1202 $x1223 $x1226)))))))
 (let ((?x1050 (top ?x832)))
 (let ((?x1189 (stack ?x1050 ?x866)))
 (let (($x1218 (= ?x1004 ?x1189)))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1218 $x1243)))))))))))))))))))))))))))))))
(assert
 (let ((?x1052 (center s________)))
 (let ((?x1190 (center s_________)))
 (let (($x1228 (= ?x1190 ?x1052)))
 (let ((?x866 (right s________)))
 (let ((?x1197 (top ?x866)))
 (let ((?x1199 (stack ?x1197 ?x1052)))
 (let (($x1225 (= ?x1190 ?x1199)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1201 (= c________ right-to-center)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1192 (rest ?x1052)))
 (let (($x1220 (= ?x1190 ?x1192)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x832 (left s________)))
 (let ((?x1050 (top ?x832)))
 (let ((?x1191 (stack ?x1050 ?x1052)))
 (let (($x1219 (= ?x1190 ?x1191)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1242 (ite $x1212 $x1219 (ite $x1209 $x1220 (ite $x1207 $x1220 (ite $x1204 $x1228 (ite $x1202 $x1225 $x1228)))))))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1228 $x1242)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x970 (left s_________)))
 (let ((?x1108 (left s__________)))
 (let (($x1368 (= ?x1108 ?x970)))
 (let ((?x1004 (right s_________)))
 (let ((?x1335 (top ?x1004)))
 (let ((?x1336 (stack ?x1335 ?x970)))
 (let (($x1362 (= ?x1108 ?x1336)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1190 (center s_________)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let ((?x1331 (top ?x1190)))
 (let ((?x1332 (stack ?x1331 ?x970)))
 (let (($x1359 (= ?x1108 ?x1332)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x1141 (rest ?x970)))
 (let (($x1355 (= ?x1108 ?x1141)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1355 (ite $x1350 $x1355 (ite $x1347 $x1359 (ite $x1345 $x1368 (ite $x1342 $x1362 $x1368))))))))))))))))))))))))))))))))
(assert
 (let ((?x1004 (right s_________)))
 (let ((?x1142 (right s__________)))
 (let (($x1364 (= ?x1142 ?x1004)))
 (let ((?x1334 (rest ?x1004)))
 (let (($x1361 (= ?x1142 ?x1334)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1339 (= c_________ right-to-center)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1190 (center s_________)))
 (let ((?x1331 (top ?x1190)))
 (let ((?x1333 (stack ?x1331 ?x1004)))
 (let (($x1360 (= ?x1142 ?x1333)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x970 (left s_________)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1381 (ite $x1350 $x1364 (ite $x1347 $x1364 (ite $x1345 $x1360 (ite $x1342 $x1361 (ite $x1340 $x1361 $x1364)))))))
 (let ((?x1188 (top ?x970)))
 (let ((?x1327 (stack ?x1188 ?x1004)))
 (let (($x1356 (= ?x1142 ?x1327)))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1356 $x1381)))))))))))))))))))))))))))))))
(assert
 (let ((?x1190 (center s_________)))
 (let ((?x1328 (center s__________)))
 (let (($x1366 (= ?x1328 ?x1190)))
 (let ((?x1004 (right s_________)))
 (let ((?x1335 (top ?x1004)))
 (let ((?x1337 (stack ?x1335 ?x1190)))
 (let (($x1363 (= ?x1328 ?x1337)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1339 (= c_________ right-to-center)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1330 (rest ?x1190)))
 (let (($x1358 (= ?x1328 ?x1330)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x970 (left s_________)))
 (let ((?x1188 (top ?x970)))
 (let ((?x1329 (stack ?x1188 ?x1190)))
 (let (($x1357 (= ?x1328 ?x1329)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1380 (ite $x1350 $x1357 (ite $x1347 $x1358 (ite $x1345 $x1358 (ite $x1342 $x1366 (ite $x1340 $x1363 $x1366)))))))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1366 $x1380)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1108 (left s__________)))
 (let ((?x1246 (left s___________)))
 (let (($x1506 (= ?x1246 ?x1108)))
 (let ((?x1142 (right s__________)))
 (let ((?x1473 (top ?x1142)))
 (let ((?x1474 (stack ?x1473 ?x1108)))
 (let (($x1500 (= ?x1246 ?x1474)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1328 (center s__________)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let ((?x1469 (top ?x1328)))
 (let ((?x1470 (stack ?x1469 ?x1108)))
 (let (($x1497 (= ?x1246 ?x1470)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1279 (rest ?x1108)))
 (let (($x1493 (= ?x1246 ?x1279)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1493 (ite $x1488 $x1493 (ite $x1485 $x1497 (ite $x1483 $x1506 (ite $x1480 $x1500 $x1506))))))))))))))))))))))))))))))))
(assert
 (let ((?x1142 (right s__________)))
 (let ((?x1280 (right s___________)))
 (let (($x1502 (= ?x1280 ?x1142)))
 (let ((?x1472 (rest ?x1142)))
 (let (($x1499 (= ?x1280 ?x1472)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1477 (= c__________ right-to-center)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1328 (center s__________)))
 (let ((?x1469 (top ?x1328)))
 (let ((?x1471 (stack ?x1469 ?x1142)))
 (let (($x1498 (= ?x1280 ?x1471)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1108 (left s__________)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1519 (ite $x1488 $x1502 (ite $x1485 $x1502 (ite $x1483 $x1498 (ite $x1480 $x1499 (ite $x1478 $x1499 $x1502)))))))
 (let ((?x1326 (top ?x1108)))
 (let ((?x1465 (stack ?x1326 ?x1142)))
 (let (($x1494 (= ?x1280 ?x1465)))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1494 $x1519)))))))))))))))))))))))))))))))
(assert
 (let ((?x1328 (center s__________)))
 (let ((?x1466 (center s___________)))
 (let (($x1504 (= ?x1466 ?x1328)))
 (let ((?x1142 (right s__________)))
 (let ((?x1473 (top ?x1142)))
 (let ((?x1475 (stack ?x1473 ?x1328)))
 (let (($x1501 (= ?x1466 ?x1475)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1477 (= c__________ right-to-center)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1468 (rest ?x1328)))
 (let (($x1496 (= ?x1466 ?x1468)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1108 (left s__________)))
 (let ((?x1326 (top ?x1108)))
 (let ((?x1467 (stack ?x1326 ?x1328)))
 (let (($x1495 (= ?x1466 ?x1467)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1518 (ite $x1488 $x1495 (ite $x1485 $x1496 (ite $x1483 $x1496 (ite $x1480 $x1504 (ite $x1478 $x1501 $x1504)))))))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1504 $x1518)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1246 (left s___________)))
 (let ((?x1384 (left s____________)))
 (let (($x1644 (= ?x1384 ?x1246)))
 (let ((?x1280 (right s___________)))
 (let ((?x1611 (top ?x1280)))
 (let ((?x1612 (stack ?x1611 ?x1246)))
 (let (($x1638 (= ?x1384 ?x1612)))
 (let (($x1614 ((_ is stack ) ?x1280)))
 (let (($x1617 (= c___________ right-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1466 (center s___________)))
 (let (($x1619 ((_ is stack ) ?x1466)))
 (let (($x1620 (= c___________ center-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let ((?x1607 (top ?x1466)))
 (let ((?x1608 (stack ?x1607 ?x1246)))
 (let (($x1635 (= ?x1384 ?x1608)))
 (let (($x1622 (= c___________ center-to-left)))
 (let (($x1623 (and $x1622 $x1619)))
 (let ((?x1417 (rest ?x1246)))
 (let (($x1631 (= ?x1384 ?x1417)))
 (let (($x1624 ((_ is stack ) ?x1246)))
 (let (($x1625 (= c___________ left-to-right)))
 (let (($x1626 (and $x1625 $x1624)))
 (let (($x1627 (= c___________ left-to-center)))
 (let (($x1628 (and $x1627 $x1624)))
 (ite $x1628 $x1631 (ite $x1626 $x1631 (ite $x1623 $x1635 (ite $x1621 $x1644 (ite $x1618 $x1638 $x1644))))))))))))))))))))))))))))))))
(assert
 (let ((?x1280 (right s___________)))
 (let ((?x1418 (right s____________)))
 (let (($x1640 (= ?x1418 ?x1280)))
 (let ((?x1610 (rest ?x1280)))
 (let (($x1637 (= ?x1418 ?x1610)))
 (let (($x1614 ((_ is stack ) ?x1280)))
 (let (($x1615 (= c___________ right-to-center)))
 (let (($x1616 (and $x1615 $x1614)))
 (let (($x1617 (= c___________ right-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1466 (center s___________)))
 (let ((?x1607 (top ?x1466)))
 (let ((?x1609 (stack ?x1607 ?x1280)))
 (let (($x1636 (= ?x1418 ?x1609)))
 (let (($x1619 ((_ is stack ) ?x1466)))
 (let (($x1620 (= c___________ center-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let (($x1622 (= c___________ center-to-left)))
 (let (($x1623 (and $x1622 $x1619)))
 (let ((?x1246 (left s___________)))
 (let (($x1624 ((_ is stack ) ?x1246)))
 (let (($x1625 (= c___________ left-to-right)))
 (let (($x1626 (and $x1625 $x1624)))
 (let (($x1657 (ite $x1626 $x1640 (ite $x1623 $x1640 (ite $x1621 $x1636 (ite $x1618 $x1637 (ite $x1616 $x1637 $x1640)))))))
 (let ((?x1464 (top ?x1246)))
 (let ((?x1603 (stack ?x1464 ?x1280)))
 (let (($x1632 (= ?x1418 ?x1603)))
 (let (($x1627 (= c___________ left-to-center)))
 (let (($x1628 (and $x1627 $x1624)))
 (ite $x1628 $x1632 $x1657)))))))))))))))))))))))))))))))
(assert
 (let ((?x1466 (center s___________)))
 (let ((?x1604 (center s____________)))
 (let (($x1642 (= ?x1604 ?x1466)))
 (let ((?x1280 (right s___________)))
 (let ((?x1611 (top ?x1280)))
 (let ((?x1613 (stack ?x1611 ?x1466)))
 (let (($x1639 (= ?x1604 ?x1613)))
 (let (($x1614 ((_ is stack ) ?x1280)))
 (let (($x1615 (= c___________ right-to-center)))
 (let (($x1616 (and $x1615 $x1614)))
 (let (($x1617 (= c___________ right-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1606 (rest ?x1466)))
 (let (($x1634 (= ?x1604 ?x1606)))
 (let (($x1619 ((_ is stack ) ?x1466)))
 (let (($x1620 (= c___________ center-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let (($x1622 (= c___________ center-to-left)))
 (let (($x1623 (and $x1622 $x1619)))
 (let ((?x1246 (left s___________)))
 (let ((?x1464 (top ?x1246)))
 (let ((?x1605 (stack ?x1464 ?x1466)))
 (let (($x1633 (= ?x1604 ?x1605)))
 (let (($x1624 ((_ is stack ) ?x1246)))
 (let (($x1625 (= c___________ left-to-right)))
 (let (($x1626 (and $x1625 $x1624)))
 (let (($x1656 (ite $x1626 $x1633 (ite $x1623 $x1634 (ite $x1621 $x1634 (ite $x1618 $x1642 (ite $x1616 $x1639 $x1642)))))))
 (let (($x1627 (= c___________ left-to-center)))
 (let (($x1628 (and $x1627 $x1624)))
 (ite $x1628 $x1642 $x1656)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1384 (left s____________)))
 (let ((?x1522 (left s_____________)))
 (let (($x1782 (= ?x1522 ?x1384)))
 (let ((?x1418 (right s____________)))
 (let ((?x1749 (top ?x1418)))
 (let ((?x1750 (stack ?x1749 ?x1384)))
 (let (($x1776 (= ?x1522 ?x1750)))
 (let (($x1752 ((_ is stack ) ?x1418)))
 (let (($x1755 (= c____________ right-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1604 (center s____________)))
 (let (($x1757 ((_ is stack ) ?x1604)))
 (let (($x1758 (= c____________ center-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let ((?x1745 (top ?x1604)))
 (let ((?x1746 (stack ?x1745 ?x1384)))
 (let (($x1773 (= ?x1522 ?x1746)))
 (let (($x1760 (= c____________ center-to-left)))
 (let (($x1761 (and $x1760 $x1757)))
 (let ((?x1555 (rest ?x1384)))
 (let (($x1769 (= ?x1522 ?x1555)))
 (let (($x1762 ((_ is stack ) ?x1384)))
 (let (($x1763 (= c____________ left-to-right)))
 (let (($x1764 (and $x1763 $x1762)))
 (let (($x1765 (= c____________ left-to-center)))
 (let (($x1766 (and $x1765 $x1762)))
 (ite $x1766 $x1769 (ite $x1764 $x1769 (ite $x1761 $x1773 (ite $x1759 $x1782 (ite $x1756 $x1776 $x1782))))))))))))))))))))))))))))))))
(assert
 (let ((?x1418 (right s____________)))
 (let ((?x1556 (right s_____________)))
 (let (($x1778 (= ?x1556 ?x1418)))
 (let ((?x1748 (rest ?x1418)))
 (let (($x1775 (= ?x1556 ?x1748)))
 (let (($x1752 ((_ is stack ) ?x1418)))
 (let (($x1753 (= c____________ right-to-center)))
 (let (($x1754 (and $x1753 $x1752)))
 (let (($x1755 (= c____________ right-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1604 (center s____________)))
 (let ((?x1745 (top ?x1604)))
 (let ((?x1747 (stack ?x1745 ?x1418)))
 (let (($x1774 (= ?x1556 ?x1747)))
 (let (($x1757 ((_ is stack ) ?x1604)))
 (let (($x1758 (= c____________ center-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let (($x1760 (= c____________ center-to-left)))
 (let (($x1761 (and $x1760 $x1757)))
 (let ((?x1384 (left s____________)))
 (let (($x1762 ((_ is stack ) ?x1384)))
 (let (($x1763 (= c____________ left-to-right)))
 (let (($x1764 (and $x1763 $x1762)))
 (let (($x1795 (ite $x1764 $x1778 (ite $x1761 $x1778 (ite $x1759 $x1774 (ite $x1756 $x1775 (ite $x1754 $x1775 $x1778)))))))
 (let ((?x1602 (top ?x1384)))
 (let ((?x1741 (stack ?x1602 ?x1418)))
 (let (($x1770 (= ?x1556 ?x1741)))
 (let (($x1765 (= c____________ left-to-center)))
 (let (($x1766 (and $x1765 $x1762)))
 (ite $x1766 $x1770 $x1795)))))))))))))))))))))))))))))))
(assert
 (let ((?x1604 (center s____________)))
 (let ((?x1742 (center s_____________)))
 (let (($x1780 (= ?x1742 ?x1604)))
 (let ((?x1418 (right s____________)))
 (let ((?x1749 (top ?x1418)))
 (let ((?x1751 (stack ?x1749 ?x1604)))
 (let (($x1777 (= ?x1742 ?x1751)))
 (let (($x1752 ((_ is stack ) ?x1418)))
 (let (($x1753 (= c____________ right-to-center)))
 (let (($x1754 (and $x1753 $x1752)))
 (let (($x1755 (= c____________ right-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1744 (rest ?x1604)))
 (let (($x1772 (= ?x1742 ?x1744)))
 (let (($x1757 ((_ is stack ) ?x1604)))
 (let (($x1758 (= c____________ center-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let (($x1760 (= c____________ center-to-left)))
 (let (($x1761 (and $x1760 $x1757)))
 (let ((?x1384 (left s____________)))
 (let ((?x1602 (top ?x1384)))
 (let ((?x1743 (stack ?x1602 ?x1604)))
 (let (($x1771 (= ?x1742 ?x1743)))
 (let (($x1762 ((_ is stack ) ?x1384)))
 (let (($x1763 (= c____________ left-to-right)))
 (let (($x1764 (and $x1763 $x1762)))
 (let (($x1794 (ite $x1764 $x1771 (ite $x1761 $x1772 (ite $x1759 $x1772 (ite $x1756 $x1780 (ite $x1754 $x1777 $x1780)))))))
 (let (($x1765 (= c____________ left-to-center)))
 (let (($x1766 (and $x1765 $x1762)))
 (ite $x1766 $x1780 $x1794)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1522 (left s_____________)))
 (let ((?x1660 (left s______________)))
 (let (($x1920 (= ?x1660 ?x1522)))
 (let ((?x1556 (right s_____________)))
 (let ((?x1887 (top ?x1556)))
 (let ((?x1888 (stack ?x1887 ?x1522)))
 (let (($x1914 (= ?x1660 ?x1888)))
 (let (($x1890 ((_ is stack ) ?x1556)))
 (let (($x1893 (= c_____________ right-to-left)))
 (let (($x1894 (and $x1893 $x1890)))
 (let ((?x1742 (center s_____________)))
 (let (($x1895 ((_ is stack ) ?x1742)))
 (let (($x1896 (= c_____________ center-to-right)))
 (let (($x1897 (and $x1896 $x1895)))
 (let ((?x1883 (top ?x1742)))
 (let ((?x1884 (stack ?x1883 ?x1522)))
 (let (($x1911 (= ?x1660 ?x1884)))
 (let (($x1898 (= c_____________ center-to-left)))
 (let (($x1899 (and $x1898 $x1895)))
 (let ((?x1693 (rest ?x1522)))
 (let (($x1907 (= ?x1660 ?x1693)))
 (let (($x1900 ((_ is stack ) ?x1522)))
 (let (($x1901 (= c_____________ left-to-right)))
 (let (($x1902 (and $x1901 $x1900)))
 (let (($x1903 (= c_____________ left-to-center)))
 (let (($x1904 (and $x1903 $x1900)))
 (ite $x1904 $x1907 (ite $x1902 $x1907 (ite $x1899 $x1911 (ite $x1897 $x1920 (ite $x1894 $x1914 $x1920))))))))))))))))))))))))))))))))
(assert
 (let ((?x1556 (right s_____________)))
 (let ((?x1694 (right s______________)))
 (let (($x1916 (= ?x1694 ?x1556)))
 (let ((?x1886 (rest ?x1556)))
 (let (($x1913 (= ?x1694 ?x1886)))
 (let (($x1890 ((_ is stack ) ?x1556)))
 (let (($x1891 (= c_____________ right-to-center)))
 (let (($x1892 (and $x1891 $x1890)))
 (let (($x1893 (= c_____________ right-to-left)))
 (let (($x1894 (and $x1893 $x1890)))
 (let ((?x1742 (center s_____________)))
 (let ((?x1883 (top ?x1742)))
 (let ((?x1885 (stack ?x1883 ?x1556)))
 (let (($x1912 (= ?x1694 ?x1885)))
 (let (($x1895 ((_ is stack ) ?x1742)))
 (let (($x1896 (= c_____________ center-to-right)))
 (let (($x1897 (and $x1896 $x1895)))
 (let (($x1898 (= c_____________ center-to-left)))
 (let (($x1899 (and $x1898 $x1895)))
 (let ((?x1522 (left s_____________)))
 (let (($x1900 ((_ is stack ) ?x1522)))
 (let (($x1901 (= c_____________ left-to-right)))
 (let (($x1902 (and $x1901 $x1900)))
 (let (($x1933 (ite $x1902 $x1916 (ite $x1899 $x1916 (ite $x1897 $x1912 (ite $x1894 $x1913 (ite $x1892 $x1913 $x1916)))))))
 (let ((?x1740 (top ?x1522)))
 (let ((?x1879 (stack ?x1740 ?x1556)))
 (let (($x1908 (= ?x1694 ?x1879)))
 (let (($x1903 (= c_____________ left-to-center)))
 (let (($x1904 (and $x1903 $x1900)))
 (ite $x1904 $x1908 $x1933)))))))))))))))))))))))))))))))
(assert
 (let ((?x1742 (center s_____________)))
 (let ((?x1880 (center s______________)))
 (let (($x1918 (= ?x1880 ?x1742)))
 (let ((?x1556 (right s_____________)))
 (let ((?x1887 (top ?x1556)))
 (let ((?x1889 (stack ?x1887 ?x1742)))
 (let (($x1915 (= ?x1880 ?x1889)))
 (let (($x1890 ((_ is stack ) ?x1556)))
 (let (($x1891 (= c_____________ right-to-center)))
 (let (($x1892 (and $x1891 $x1890)))
 (let (($x1893 (= c_____________ right-to-left)))
 (let (($x1894 (and $x1893 $x1890)))
 (let ((?x1882 (rest ?x1742)))
 (let (($x1910 (= ?x1880 ?x1882)))
 (let (($x1895 ((_ is stack ) ?x1742)))
 (let (($x1896 (= c_____________ center-to-right)))
 (let (($x1897 (and $x1896 $x1895)))
 (let (($x1898 (= c_____________ center-to-left)))
 (let (($x1899 (and $x1898 $x1895)))
 (let ((?x1522 (left s_____________)))
 (let ((?x1740 (top ?x1522)))
 (let ((?x1881 (stack ?x1740 ?x1742)))
 (let (($x1909 (= ?x1880 ?x1881)))
 (let (($x1900 ((_ is stack ) ?x1522)))
 (let (($x1901 (= c_____________ left-to-right)))
 (let (($x1902 (and $x1901 $x1900)))
 (let (($x1932 (ite $x1902 $x1909 (ite $x1899 $x1910 (ite $x1897 $x1910 (ite $x1894 $x1918 (ite $x1892 $x1915 $x1918)))))))
 (let (($x1903 (= c_____________ left-to-center)))
 (let (($x1904 (and $x1903 $x1900)))
 (ite $x1904 $x1918 $x1932)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1660 (left s______________)))
 (let ((?x1798 (left s_______________)))
 (let (($x2058 (= ?x1798 ?x1660)))
 (let ((?x1694 (right s______________)))
 (let ((?x2025 (top ?x1694)))
 (let ((?x2026 (stack ?x2025 ?x1660)))
 (let (($x2052 (= ?x1798 ?x2026)))
 (let (($x2028 ((_ is stack ) ?x1694)))
 (let (($x2031 (= c______________ right-to-left)))
 (let (($x2032 (and $x2031 $x2028)))
 (let ((?x1880 (center s______________)))
 (let (($x2033 ((_ is stack ) ?x1880)))
 (let (($x2034 (= c______________ center-to-right)))
 (let (($x2035 (and $x2034 $x2033)))
 (let ((?x2021 (top ?x1880)))
 (let ((?x2022 (stack ?x2021 ?x1660)))
 (let (($x2049 (= ?x1798 ?x2022)))
 (let (($x2036 (= c______________ center-to-left)))
 (let (($x2037 (and $x2036 $x2033)))
 (let ((?x1831 (rest ?x1660)))
 (let (($x2045 (= ?x1798 ?x1831)))
 (let (($x2038 ((_ is stack ) ?x1660)))
 (let (($x2039 (= c______________ left-to-right)))
 (let (($x2040 (and $x2039 $x2038)))
 (let (($x2041 (= c______________ left-to-center)))
 (let (($x2042 (and $x2041 $x2038)))
 (ite $x2042 $x2045 (ite $x2040 $x2045 (ite $x2037 $x2049 (ite $x2035 $x2058 (ite $x2032 $x2052 $x2058))))))))))))))))))))))))))))))))
(assert
 (let ((?x1694 (right s______________)))
 (let ((?x1832 (right s_______________)))
 (let (($x2054 (= ?x1832 ?x1694)))
 (let ((?x2024 (rest ?x1694)))
 (let (($x2051 (= ?x1832 ?x2024)))
 (let (($x2028 ((_ is stack ) ?x1694)))
 (let (($x2029 (= c______________ right-to-center)))
 (let (($x2030 (and $x2029 $x2028)))
 (let (($x2031 (= c______________ right-to-left)))
 (let (($x2032 (and $x2031 $x2028)))
 (let ((?x1880 (center s______________)))
 (let ((?x2021 (top ?x1880)))
 (let ((?x2023 (stack ?x2021 ?x1694)))
 (let (($x2050 (= ?x1832 ?x2023)))
 (let (($x2033 ((_ is stack ) ?x1880)))
 (let (($x2034 (= c______________ center-to-right)))
 (let (($x2035 (and $x2034 $x2033)))
 (let (($x2036 (= c______________ center-to-left)))
 (let (($x2037 (and $x2036 $x2033)))
 (let ((?x1660 (left s______________)))
 (let (($x2038 ((_ is stack ) ?x1660)))
 (let (($x2039 (= c______________ left-to-right)))
 (let (($x2040 (and $x2039 $x2038)))
 (let (($x2071 (ite $x2040 $x2054 (ite $x2037 $x2054 (ite $x2035 $x2050 (ite $x2032 $x2051 (ite $x2030 $x2051 $x2054)))))))
 (let ((?x1878 (top ?x1660)))
 (let ((?x2017 (stack ?x1878 ?x1694)))
 (let (($x2046 (= ?x1832 ?x2017)))
 (let (($x2041 (= c______________ left-to-center)))
 (let (($x2042 (and $x2041 $x2038)))
 (ite $x2042 $x2046 $x2071)))))))))))))))))))))))))))))))
(assert
 (let ((?x1880 (center s______________)))
 (let ((?x2018 (center s_______________)))
 (let (($x2056 (= ?x2018 ?x1880)))
 (let ((?x1694 (right s______________)))
 (let ((?x2025 (top ?x1694)))
 (let ((?x2027 (stack ?x2025 ?x1880)))
 (let (($x2053 (= ?x2018 ?x2027)))
 (let (($x2028 ((_ is stack ) ?x1694)))
 (let (($x2029 (= c______________ right-to-center)))
 (let (($x2030 (and $x2029 $x2028)))
 (let (($x2031 (= c______________ right-to-left)))
 (let (($x2032 (and $x2031 $x2028)))
 (let ((?x2020 (rest ?x1880)))
 (let (($x2048 (= ?x2018 ?x2020)))
 (let (($x2033 ((_ is stack ) ?x1880)))
 (let (($x2034 (= c______________ center-to-right)))
 (let (($x2035 (and $x2034 $x2033)))
 (let (($x2036 (= c______________ center-to-left)))
 (let (($x2037 (and $x2036 $x2033)))
 (let ((?x1660 (left s______________)))
 (let ((?x1878 (top ?x1660)))
 (let ((?x2019 (stack ?x1878 ?x1880)))
 (let (($x2047 (= ?x2018 ?x2019)))
 (let (($x2038 ((_ is stack ) ?x1660)))
 (let (($x2039 (= c______________ left-to-right)))
 (let (($x2040 (and $x2039 $x2038)))
 (let (($x2070 (ite $x2040 $x2047 (ite $x2037 $x2048 (ite $x2035 $x2048 (ite $x2032 $x2056 (ite $x2030 $x2053 $x2056)))))))
 (let (($x2041 (= c______________ left-to-center)))
 (let (($x2042 (and $x2041 $x2038)))
 (ite $x2042 $x2056 $x2070)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1798 (left s_______________)))
 (let ((?x1936 (left s________________)))
 (let (($x2196 (= ?x1936 ?x1798)))
 (let ((?x1832 (right s_______________)))
 (let ((?x2163 (top ?x1832)))
 (let ((?x2164 (stack ?x2163 ?x1798)))
 (let (($x2190 (= ?x1936 ?x2164)))
 (let (($x2166 ((_ is stack ) ?x1832)))
 (let (($x2169 (= c_______________ right-to-left)))
 (let (($x2170 (and $x2169 $x2166)))
 (let ((?x2018 (center s_______________)))
 (let (($x2171 ((_ is stack ) ?x2018)))
 (let (($x2172 (= c_______________ center-to-right)))
 (let (($x2173 (and $x2172 $x2171)))
 (let ((?x2159 (top ?x2018)))
 (let ((?x2160 (stack ?x2159 ?x1798)))
 (let (($x2187 (= ?x1936 ?x2160)))
 (let (($x2174 (= c_______________ center-to-left)))
 (let (($x2175 (and $x2174 $x2171)))
 (let ((?x1969 (rest ?x1798)))
 (let (($x2183 (= ?x1936 ?x1969)))
 (let (($x2176 ((_ is stack ) ?x1798)))
 (let (($x2177 (= c_______________ left-to-right)))
 (let (($x2178 (and $x2177 $x2176)))
 (let (($x2179 (= c_______________ left-to-center)))
 (let (($x2180 (and $x2179 $x2176)))
 (ite $x2180 $x2183 (ite $x2178 $x2183 (ite $x2175 $x2187 (ite $x2173 $x2196 (ite $x2170 $x2190 $x2196))))))))))))))))))))))))))))))))
(assert
 (let ((?x1832 (right s_______________)))
 (let ((?x1970 (right s________________)))
 (let (($x2192 (= ?x1970 ?x1832)))
 (let ((?x2162 (rest ?x1832)))
 (let (($x2189 (= ?x1970 ?x2162)))
 (let (($x2166 ((_ is stack ) ?x1832)))
 (let (($x2167 (= c_______________ right-to-center)))
 (let (($x2168 (and $x2167 $x2166)))
 (let (($x2169 (= c_______________ right-to-left)))
 (let (($x2170 (and $x2169 $x2166)))
 (let ((?x2018 (center s_______________)))
 (let ((?x2159 (top ?x2018)))
 (let ((?x2161 (stack ?x2159 ?x1832)))
 (let (($x2188 (= ?x1970 ?x2161)))
 (let (($x2171 ((_ is stack ) ?x2018)))
 (let (($x2172 (= c_______________ center-to-right)))
 (let (($x2173 (and $x2172 $x2171)))
 (let (($x2174 (= c_______________ center-to-left)))
 (let (($x2175 (and $x2174 $x2171)))
 (let ((?x1798 (left s_______________)))
 (let (($x2176 ((_ is stack ) ?x1798)))
 (let (($x2177 (= c_______________ left-to-right)))
 (let (($x2178 (and $x2177 $x2176)))
 (let (($x2209 (ite $x2178 $x2192 (ite $x2175 $x2192 (ite $x2173 $x2188 (ite $x2170 $x2189 (ite $x2168 $x2189 $x2192)))))))
 (let ((?x2016 (top ?x1798)))
 (let ((?x2155 (stack ?x2016 ?x1832)))
 (let (($x2184 (= ?x1970 ?x2155)))
 (let (($x2179 (= c_______________ left-to-center)))
 (let (($x2180 (and $x2179 $x2176)))
 (ite $x2180 $x2184 $x2209)))))))))))))))))))))))))))))))
(assert
 (let ((?x2018 (center s_______________)))
 (let ((?x2156 (center s________________)))
 (let (($x2194 (= ?x2156 ?x2018)))
 (let ((?x1832 (right s_______________)))
 (let ((?x2163 (top ?x1832)))
 (let ((?x2165 (stack ?x2163 ?x2018)))
 (let (($x2191 (= ?x2156 ?x2165)))
 (let (($x2166 ((_ is stack ) ?x1832)))
 (let (($x2167 (= c_______________ right-to-center)))
 (let (($x2168 (and $x2167 $x2166)))
 (let (($x2169 (= c_______________ right-to-left)))
 (let (($x2170 (and $x2169 $x2166)))
 (let ((?x2158 (rest ?x2018)))
 (let (($x2186 (= ?x2156 ?x2158)))
 (let (($x2171 ((_ is stack ) ?x2018)))
 (let (($x2172 (= c_______________ center-to-right)))
 (let (($x2173 (and $x2172 $x2171)))
 (let (($x2174 (= c_______________ center-to-left)))
 (let (($x2175 (and $x2174 $x2171)))
 (let ((?x1798 (left s_______________)))
 (let ((?x2016 (top ?x1798)))
 (let ((?x2157 (stack ?x2016 ?x2018)))
 (let (($x2185 (= ?x2156 ?x2157)))
 (let (($x2176 ((_ is stack ) ?x1798)))
 (let (($x2177 (= c_______________ left-to-right)))
 (let (($x2178 (and $x2177 $x2176)))
 (let (($x2208 (ite $x2178 $x2185 (ite $x2175 $x2186 (ite $x2173 $x2186 (ite $x2170 $x2194 (ite $x2168 $x2191 $x2194)))))))
 (let (($x2179 (= c_______________ left-to-center)))
 (let (($x2180 (and $x2179 $x2176)))
 (ite $x2180 $x2194 $x2208)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1936 (left s________________)))
 (let ((?x2074 (left s_________________)))
 (let (($x2334 (= ?x2074 ?x1936)))
 (let ((?x1970 (right s________________)))
 (let ((?x2301 (top ?x1970)))
 (let ((?x2302 (stack ?x2301 ?x1936)))
 (let (($x2328 (= ?x2074 ?x2302)))
 (let (($x2304 ((_ is stack ) ?x1970)))
 (let (($x2307 (= c________________ right-to-left)))
 (let (($x2308 (and $x2307 $x2304)))
 (let ((?x2156 (center s________________)))
 (let (($x2309 ((_ is stack ) ?x2156)))
 (let (($x2310 (= c________________ center-to-right)))
 (let (($x2311 (and $x2310 $x2309)))
 (let ((?x2297 (top ?x2156)))
 (let ((?x2298 (stack ?x2297 ?x1936)))
 (let (($x2325 (= ?x2074 ?x2298)))
 (let (($x2312 (= c________________ center-to-left)))
 (let (($x2313 (and $x2312 $x2309)))
 (let ((?x2107 (rest ?x1936)))
 (let (($x2321 (= ?x2074 ?x2107)))
 (let (($x2314 ((_ is stack ) ?x1936)))
 (let (($x2315 (= c________________ left-to-right)))
 (let (($x2316 (and $x2315 $x2314)))
 (let (($x2317 (= c________________ left-to-center)))
 (let (($x2318 (and $x2317 $x2314)))
 (ite $x2318 $x2321 (ite $x2316 $x2321 (ite $x2313 $x2325 (ite $x2311 $x2334 (ite $x2308 $x2328 $x2334))))))))))))))))))))))))))))))))
(assert
 (let ((?x1970 (right s________________)))
 (let ((?x2108 (right s_________________)))
 (let (($x2330 (= ?x2108 ?x1970)))
 (let ((?x2300 (rest ?x1970)))
 (let (($x2327 (= ?x2108 ?x2300)))
 (let (($x2304 ((_ is stack ) ?x1970)))
 (let (($x2305 (= c________________ right-to-center)))
 (let (($x2306 (and $x2305 $x2304)))
 (let (($x2307 (= c________________ right-to-left)))
 (let (($x2308 (and $x2307 $x2304)))
 (let ((?x2156 (center s________________)))
 (let ((?x2297 (top ?x2156)))
 (let ((?x2299 (stack ?x2297 ?x1970)))
 (let (($x2326 (= ?x2108 ?x2299)))
 (let (($x2309 ((_ is stack ) ?x2156)))
 (let (($x2310 (= c________________ center-to-right)))
 (let (($x2311 (and $x2310 $x2309)))
 (let (($x2312 (= c________________ center-to-left)))
 (let (($x2313 (and $x2312 $x2309)))
 (let ((?x1936 (left s________________)))
 (let (($x2314 ((_ is stack ) ?x1936)))
 (let (($x2315 (= c________________ left-to-right)))
 (let (($x2316 (and $x2315 $x2314)))
 (let (($x2347 (ite $x2316 $x2330 (ite $x2313 $x2330 (ite $x2311 $x2326 (ite $x2308 $x2327 (ite $x2306 $x2327 $x2330)))))))
 (let ((?x2154 (top ?x1936)))
 (let ((?x2293 (stack ?x2154 ?x1970)))
 (let (($x2322 (= ?x2108 ?x2293)))
 (let (($x2317 (= c________________ left-to-center)))
 (let (($x2318 (and $x2317 $x2314)))
 (ite $x2318 $x2322 $x2347)))))))))))))))))))))))))))))))
(assert
 (let ((?x2156 (center s________________)))
 (let ((?x2294 (center s_________________)))
 (let (($x2332 (= ?x2294 ?x2156)))
 (let ((?x1970 (right s________________)))
 (let ((?x2301 (top ?x1970)))
 (let ((?x2303 (stack ?x2301 ?x2156)))
 (let (($x2329 (= ?x2294 ?x2303)))
 (let (($x2304 ((_ is stack ) ?x1970)))
 (let (($x2305 (= c________________ right-to-center)))
 (let (($x2306 (and $x2305 $x2304)))
 (let (($x2307 (= c________________ right-to-left)))
 (let (($x2308 (and $x2307 $x2304)))
 (let ((?x2296 (rest ?x2156)))
 (let (($x2324 (= ?x2294 ?x2296)))
 (let (($x2309 ((_ is stack ) ?x2156)))
 (let (($x2310 (= c________________ center-to-right)))
 (let (($x2311 (and $x2310 $x2309)))
 (let (($x2312 (= c________________ center-to-left)))
 (let (($x2313 (and $x2312 $x2309)))
 (let ((?x1936 (left s________________)))
 (let ((?x2154 (top ?x1936)))
 (let ((?x2295 (stack ?x2154 ?x2156)))
 (let (($x2323 (= ?x2294 ?x2295)))
 (let (($x2314 ((_ is stack ) ?x1936)))
 (let (($x2315 (= c________________ left-to-right)))
 (let (($x2316 (and $x2315 $x2314)))
 (let (($x2346 (ite $x2316 $x2323 (ite $x2313 $x2324 (ite $x2311 $x2324 (ite $x2308 $x2332 (ite $x2306 $x2329 $x2332)))))))
 (let (($x2317 (= c________________ left-to-center)))
 (let (($x2318 (and $x2317 $x2314)))
 (ite $x2318 $x2332 $x2346)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2074 (left s_________________)))
 (let ((?x2212 (left s__________________)))
 (let (($x2472 (= ?x2212 ?x2074)))
 (let ((?x2108 (right s_________________)))
 (let ((?x2439 (top ?x2108)))
 (let ((?x2440 (stack ?x2439 ?x2074)))
 (let (($x2466 (= ?x2212 ?x2440)))
 (let (($x2442 ((_ is stack ) ?x2108)))
 (let (($x2445 (= c_________________ right-to-left)))
 (let (($x2446 (and $x2445 $x2442)))
 (let ((?x2294 (center s_________________)))
 (let (($x2447 ((_ is stack ) ?x2294)))
 (let (($x2448 (= c_________________ center-to-right)))
 (let (($x2449 (and $x2448 $x2447)))
 (let ((?x2435 (top ?x2294)))
 (let ((?x2436 (stack ?x2435 ?x2074)))
 (let (($x2463 (= ?x2212 ?x2436)))
 (let (($x2450 (= c_________________ center-to-left)))
 (let (($x2451 (and $x2450 $x2447)))
 (let ((?x2245 (rest ?x2074)))
 (let (($x2459 (= ?x2212 ?x2245)))
 (let (($x2452 ((_ is stack ) ?x2074)))
 (let (($x2453 (= c_________________ left-to-right)))
 (let (($x2454 (and $x2453 $x2452)))
 (let (($x2455 (= c_________________ left-to-center)))
 (let (($x2456 (and $x2455 $x2452)))
 (ite $x2456 $x2459 (ite $x2454 $x2459 (ite $x2451 $x2463 (ite $x2449 $x2472 (ite $x2446 $x2466 $x2472))))))))))))))))))))))))))))))))
(assert
 (let ((?x2108 (right s_________________)))
 (let ((?x2246 (right s__________________)))
 (let (($x2468 (= ?x2246 ?x2108)))
 (let ((?x2438 (rest ?x2108)))
 (let (($x2465 (= ?x2246 ?x2438)))
 (let (($x2442 ((_ is stack ) ?x2108)))
 (let (($x2443 (= c_________________ right-to-center)))
 (let (($x2444 (and $x2443 $x2442)))
 (let (($x2445 (= c_________________ right-to-left)))
 (let (($x2446 (and $x2445 $x2442)))
 (let ((?x2294 (center s_________________)))
 (let ((?x2435 (top ?x2294)))
 (let ((?x2437 (stack ?x2435 ?x2108)))
 (let (($x2464 (= ?x2246 ?x2437)))
 (let (($x2447 ((_ is stack ) ?x2294)))
 (let (($x2448 (= c_________________ center-to-right)))
 (let (($x2449 (and $x2448 $x2447)))
 (let (($x2450 (= c_________________ center-to-left)))
 (let (($x2451 (and $x2450 $x2447)))
 (let ((?x2074 (left s_________________)))
 (let (($x2452 ((_ is stack ) ?x2074)))
 (let (($x2453 (= c_________________ left-to-right)))
 (let (($x2454 (and $x2453 $x2452)))
 (let (($x2485 (ite $x2454 $x2468 (ite $x2451 $x2468 (ite $x2449 $x2464 (ite $x2446 $x2465 (ite $x2444 $x2465 $x2468)))))))
 (let ((?x2292 (top ?x2074)))
 (let ((?x2431 (stack ?x2292 ?x2108)))
 (let (($x2460 (= ?x2246 ?x2431)))
 (let (($x2455 (= c_________________ left-to-center)))
 (let (($x2456 (and $x2455 $x2452)))
 (ite $x2456 $x2460 $x2485)))))))))))))))))))))))))))))))
(assert
 (let ((?x2294 (center s_________________)))
 (let ((?x2432 (center s__________________)))
 (let (($x2470 (= ?x2432 ?x2294)))
 (let ((?x2108 (right s_________________)))
 (let ((?x2439 (top ?x2108)))
 (let ((?x2441 (stack ?x2439 ?x2294)))
 (let (($x2467 (= ?x2432 ?x2441)))
 (let (($x2442 ((_ is stack ) ?x2108)))
 (let (($x2443 (= c_________________ right-to-center)))
 (let (($x2444 (and $x2443 $x2442)))
 (let (($x2445 (= c_________________ right-to-left)))
 (let (($x2446 (and $x2445 $x2442)))
 (let ((?x2434 (rest ?x2294)))
 (let (($x2462 (= ?x2432 ?x2434)))
 (let (($x2447 ((_ is stack ) ?x2294)))
 (let (($x2448 (= c_________________ center-to-right)))
 (let (($x2449 (and $x2448 $x2447)))
 (let (($x2450 (= c_________________ center-to-left)))
 (let (($x2451 (and $x2450 $x2447)))
 (let ((?x2074 (left s_________________)))
 (let ((?x2292 (top ?x2074)))
 (let ((?x2433 (stack ?x2292 ?x2294)))
 (let (($x2461 (= ?x2432 ?x2433)))
 (let (($x2452 ((_ is stack ) ?x2074)))
 (let (($x2453 (= c_________________ left-to-right)))
 (let (($x2454 (and $x2453 $x2452)))
 (let (($x2484 (ite $x2454 $x2461 (ite $x2451 $x2462 (ite $x2449 $x2462 (ite $x2446 $x2470 (ite $x2444 $x2467 $x2470)))))))
 (let (($x2455 (= c_________________ left-to-center)))
 (let (($x2456 (and $x2455 $x2452)))
 (ite $x2456 $x2470 $x2484)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2212 (left s__________________)))
 (let ((?x2350 (left s___________________)))
 (let (($x2610 (= ?x2350 ?x2212)))
 (let ((?x2246 (right s__________________)))
 (let ((?x2577 (top ?x2246)))
 (let ((?x2578 (stack ?x2577 ?x2212)))
 (let (($x2604 (= ?x2350 ?x2578)))
 (let (($x2580 ((_ is stack ) ?x2246)))
 (let (($x2583 (= c__________________ right-to-left)))
 (let (($x2584 (and $x2583 $x2580)))
 (let ((?x2432 (center s__________________)))
 (let (($x2585 ((_ is stack ) ?x2432)))
 (let (($x2586 (= c__________________ center-to-right)))
 (let (($x2587 (and $x2586 $x2585)))
 (let ((?x2573 (top ?x2432)))
 (let ((?x2574 (stack ?x2573 ?x2212)))
 (let (($x2601 (= ?x2350 ?x2574)))
 (let (($x2588 (= c__________________ center-to-left)))
 (let (($x2589 (and $x2588 $x2585)))
 (let ((?x2383 (rest ?x2212)))
 (let (($x2597 (= ?x2350 ?x2383)))
 (let (($x2590 ((_ is stack ) ?x2212)))
 (let (($x2591 (= c__________________ left-to-right)))
 (let (($x2592 (and $x2591 $x2590)))
 (let (($x2593 (= c__________________ left-to-center)))
 (let (($x2594 (and $x2593 $x2590)))
 (ite $x2594 $x2597 (ite $x2592 $x2597 (ite $x2589 $x2601 (ite $x2587 $x2610 (ite $x2584 $x2604 $x2610))))))))))))))))))))))))))))))))
(assert
 (let ((?x2246 (right s__________________)))
 (let ((?x2384 (right s___________________)))
 (let (($x2606 (= ?x2384 ?x2246)))
 (let ((?x2576 (rest ?x2246)))
 (let (($x2603 (= ?x2384 ?x2576)))
 (let (($x2580 ((_ is stack ) ?x2246)))
 (let (($x2581 (= c__________________ right-to-center)))
 (let (($x2582 (and $x2581 $x2580)))
 (let (($x2583 (= c__________________ right-to-left)))
 (let (($x2584 (and $x2583 $x2580)))
 (let ((?x2432 (center s__________________)))
 (let ((?x2573 (top ?x2432)))
 (let ((?x2575 (stack ?x2573 ?x2246)))
 (let (($x2602 (= ?x2384 ?x2575)))
 (let (($x2585 ((_ is stack ) ?x2432)))
 (let (($x2586 (= c__________________ center-to-right)))
 (let (($x2587 (and $x2586 $x2585)))
 (let (($x2588 (= c__________________ center-to-left)))
 (let (($x2589 (and $x2588 $x2585)))
 (let ((?x2212 (left s__________________)))
 (let (($x2590 ((_ is stack ) ?x2212)))
 (let (($x2591 (= c__________________ left-to-right)))
 (let (($x2592 (and $x2591 $x2590)))
 (let (($x2623 (ite $x2592 $x2606 (ite $x2589 $x2606 (ite $x2587 $x2602 (ite $x2584 $x2603 (ite $x2582 $x2603 $x2606)))))))
 (let ((?x2430 (top ?x2212)))
 (let ((?x2569 (stack ?x2430 ?x2246)))
 (let (($x2598 (= ?x2384 ?x2569)))
 (let (($x2593 (= c__________________ left-to-center)))
 (let (($x2594 (and $x2593 $x2590)))
 (ite $x2594 $x2598 $x2623)))))))))))))))))))))))))))))))
(assert
 (let ((?x2432 (center s__________________)))
 (let ((?x2570 (center s___________________)))
 (let (($x2608 (= ?x2570 ?x2432)))
 (let ((?x2246 (right s__________________)))
 (let ((?x2577 (top ?x2246)))
 (let ((?x2579 (stack ?x2577 ?x2432)))
 (let (($x2605 (= ?x2570 ?x2579)))
 (let (($x2580 ((_ is stack ) ?x2246)))
 (let (($x2581 (= c__________________ right-to-center)))
 (let (($x2582 (and $x2581 $x2580)))
 (let (($x2583 (= c__________________ right-to-left)))
 (let (($x2584 (and $x2583 $x2580)))
 (let ((?x2572 (rest ?x2432)))
 (let (($x2600 (= ?x2570 ?x2572)))
 (let (($x2585 ((_ is stack ) ?x2432)))
 (let (($x2586 (= c__________________ center-to-right)))
 (let (($x2587 (and $x2586 $x2585)))
 (let (($x2588 (= c__________________ center-to-left)))
 (let (($x2589 (and $x2588 $x2585)))
 (let ((?x2212 (left s__________________)))
 (let ((?x2430 (top ?x2212)))
 (let ((?x2571 (stack ?x2430 ?x2432)))
 (let (($x2599 (= ?x2570 ?x2571)))
 (let (($x2590 ((_ is stack ) ?x2212)))
 (let (($x2591 (= c__________________ left-to-right)))
 (let (($x2592 (and $x2591 $x2590)))
 (let (($x2622 (ite $x2592 $x2599 (ite $x2589 $x2600 (ite $x2587 $x2600 (ite $x2584 $x2608 (ite $x2582 $x2605 $x2608)))))))
 (let (($x2593 (= c__________________ left-to-center)))
 (let (($x2594 (and $x2593 $x2590)))
 (ite $x2594 $x2608 $x2622)))))))))))))))))))))))))))))))
(assert
 (= c____________________ c!19))
(assert
 (let ((?x2350 (left s___________________)))
 (let ((?x2488 (left s____________________)))
 (let (($x2748 (= ?x2488 ?x2350)))
 (let ((?x2384 (right s___________________)))
 (let ((?x2715 (top ?x2384)))
 (let ((?x2716 (stack ?x2715 ?x2350)))
 (let (($x2742 (= ?x2488 ?x2716)))
 (let (($x2718 ((_ is stack ) ?x2384)))
 (let (($x2721 (= c___________________ right-to-left)))
 (let (($x2722 (and $x2721 $x2718)))
 (let ((?x2570 (center s___________________)))
 (let (($x2723 ((_ is stack ) ?x2570)))
 (let (($x2724 (= c___________________ center-to-right)))
 (let (($x2725 (and $x2724 $x2723)))
 (let ((?x2711 (top ?x2570)))
 (let ((?x2712 (stack ?x2711 ?x2350)))
 (let (($x2739 (= ?x2488 ?x2712)))
 (let (($x2726 (= c___________________ center-to-left)))
 (let (($x2727 (and $x2726 $x2723)))
 (let ((?x2521 (rest ?x2350)))
 (let (($x2735 (= ?x2488 ?x2521)))
 (let (($x2728 ((_ is stack ) ?x2350)))
 (let (($x2729 (= c___________________ left-to-right)))
 (let (($x2730 (and $x2729 $x2728)))
 (let (($x2731 (= c___________________ left-to-center)))
 (let (($x2732 (and $x2731 $x2728)))
 (ite $x2732 $x2735 (ite $x2730 $x2735 (ite $x2727 $x2739 (ite $x2725 $x2748 (ite $x2722 $x2742 $x2748))))))))))))))))))))))))))))))))
(assert
 (let ((?x2384 (right s___________________)))
 (let ((?x2522 (right s____________________)))
 (let (($x2744 (= ?x2522 ?x2384)))
 (let ((?x2714 (rest ?x2384)))
 (let (($x2741 (= ?x2522 ?x2714)))
 (let (($x2718 ((_ is stack ) ?x2384)))
 (let (($x2719 (= c___________________ right-to-center)))
 (let (($x2720 (and $x2719 $x2718)))
 (let (($x2721 (= c___________________ right-to-left)))
 (let (($x2722 (and $x2721 $x2718)))
 (let ((?x2570 (center s___________________)))
 (let ((?x2711 (top ?x2570)))
 (let ((?x2713 (stack ?x2711 ?x2384)))
 (let (($x2740 (= ?x2522 ?x2713)))
 (let (($x2723 ((_ is stack ) ?x2570)))
 (let (($x2724 (= c___________________ center-to-right)))
 (let (($x2725 (and $x2724 $x2723)))
 (let (($x2726 (= c___________________ center-to-left)))
 (let (($x2727 (and $x2726 $x2723)))
 (let ((?x2350 (left s___________________)))
 (let (($x2728 ((_ is stack ) ?x2350)))
 (let (($x2729 (= c___________________ left-to-right)))
 (let (($x2730 (and $x2729 $x2728)))
 (let (($x2761 (ite $x2730 $x2744 (ite $x2727 $x2744 (ite $x2725 $x2740 (ite $x2722 $x2741 (ite $x2720 $x2741 $x2744)))))))
 (let ((?x2568 (top ?x2350)))
 (let ((?x2707 (stack ?x2568 ?x2384)))
 (let (($x2736 (= ?x2522 ?x2707)))
 (let (($x2731 (= c___________________ left-to-center)))
 (let (($x2732 (and $x2731 $x2728)))
 (ite $x2732 $x2736 $x2761)))))))))))))))))))))))))))))))
(assert
 (let ((?x2570 (center s___________________)))
 (let ((?x2708 (center s____________________)))
 (let (($x2746 (= ?x2708 ?x2570)))
 (let ((?x2384 (right s___________________)))
 (let ((?x2715 (top ?x2384)))
 (let ((?x2717 (stack ?x2715 ?x2570)))
 (let (($x2743 (= ?x2708 ?x2717)))
 (let (($x2718 ((_ is stack ) ?x2384)))
 (let (($x2719 (= c___________________ right-to-center)))
 (let (($x2720 (and $x2719 $x2718)))
 (let (($x2721 (= c___________________ right-to-left)))
 (let (($x2722 (and $x2721 $x2718)))
 (let ((?x2710 (rest ?x2570)))
 (let (($x2738 (= ?x2708 ?x2710)))
 (let (($x2723 ((_ is stack ) ?x2570)))
 (let (($x2724 (= c___________________ center-to-right)))
 (let (($x2725 (and $x2724 $x2723)))
 (let (($x2726 (= c___________________ center-to-left)))
 (let (($x2727 (and $x2726 $x2723)))
 (let ((?x2350 (left s___________________)))
 (let ((?x2568 (top ?x2350)))
 (let ((?x2709 (stack ?x2568 ?x2570)))
 (let (($x2737 (= ?x2708 ?x2709)))
 (let (($x2728 ((_ is stack ) ?x2350)))
 (let (($x2729 (= c___________________ left-to-right)))
 (let (($x2730 (and $x2729 $x2728)))
 (let (($x2760 (ite $x2730 $x2737 (ite $x2727 $x2738 (ite $x2725 $x2738 (ite $x2722 $x2746 (ite $x2720 $x2743 $x2746)))))))
 (let (($x2731 (= c___________________ left-to-center)))
 (let (($x2732 (and $x2731 $x2728)))
 (ite $x2732 $x2746 $x2760)))))))))))))))))))))))))))))))
(assert
 (= c_____________________ c!20))
(assert
 (let ((?x2488 (left s____________________)))
 (let ((?x2626 (left s_____________________)))
 (let (($x2886 (= ?x2626 ?x2488)))
 (let ((?x2522 (right s____________________)))
 (let ((?x2853 (top ?x2522)))
 (let ((?x2854 (stack ?x2853 ?x2488)))
 (let (($x2880 (= ?x2626 ?x2854)))
 (let (($x2856 ((_ is stack ) ?x2522)))
 (let (($x2859 (= c____________________ right-to-left)))
 (let (($x2860 (and $x2859 $x2856)))
 (let ((?x2708 (center s____________________)))
 (let (($x2861 ((_ is stack ) ?x2708)))
 (let (($x2862 (= c____________________ center-to-right)))
 (let (($x2863 (and $x2862 $x2861)))
 (let ((?x2849 (top ?x2708)))
 (let ((?x2850 (stack ?x2849 ?x2488)))
 (let (($x2877 (= ?x2626 ?x2850)))
 (let (($x2864 (= c____________________ center-to-left)))
 (let (($x2865 (and $x2864 $x2861)))
 (let ((?x2659 (rest ?x2488)))
 (let (($x2873 (= ?x2626 ?x2659)))
 (let (($x2866 ((_ is stack ) ?x2488)))
 (let (($x2867 (= c____________________ left-to-right)))
 (let (($x2868 (and $x2867 $x2866)))
 (let (($x2869 (= c____________________ left-to-center)))
 (let (($x2870 (and $x2869 $x2866)))
 (ite $x2870 $x2873 (ite $x2868 $x2873 (ite $x2865 $x2877 (ite $x2863 $x2886 (ite $x2860 $x2880 $x2886))))))))))))))))))))))))))))))))
(assert
 (let ((?x2522 (right s____________________)))
 (let ((?x2660 (right s_____________________)))
 (let (($x2882 (= ?x2660 ?x2522)))
 (let ((?x2852 (rest ?x2522)))
 (let (($x2879 (= ?x2660 ?x2852)))
 (let (($x2856 ((_ is stack ) ?x2522)))
 (let (($x2857 (= c____________________ right-to-center)))
 (let (($x2858 (and $x2857 $x2856)))
 (let (($x2859 (= c____________________ right-to-left)))
 (let (($x2860 (and $x2859 $x2856)))
 (let ((?x2708 (center s____________________)))
 (let ((?x2849 (top ?x2708)))
 (let ((?x2851 (stack ?x2849 ?x2522)))
 (let (($x2878 (= ?x2660 ?x2851)))
 (let (($x2861 ((_ is stack ) ?x2708)))
 (let (($x2862 (= c____________________ center-to-right)))
 (let (($x2863 (and $x2862 $x2861)))
 (let (($x2864 (= c____________________ center-to-left)))
 (let (($x2865 (and $x2864 $x2861)))
 (let ((?x2488 (left s____________________)))
 (let (($x2866 ((_ is stack ) ?x2488)))
 (let (($x2867 (= c____________________ left-to-right)))
 (let (($x2868 (and $x2867 $x2866)))
 (let (($x2899 (ite $x2868 $x2882 (ite $x2865 $x2882 (ite $x2863 $x2878 (ite $x2860 $x2879 (ite $x2858 $x2879 $x2882)))))))
 (let ((?x2706 (top ?x2488)))
 (let ((?x2845 (stack ?x2706 ?x2522)))
 (let (($x2874 (= ?x2660 ?x2845)))
 (let (($x2869 (= c____________________ left-to-center)))
 (let (($x2870 (and $x2869 $x2866)))
 (ite $x2870 $x2874 $x2899)))))))))))))))))))))))))))))))
(assert
 (let ((?x2708 (center s____________________)))
 (let ((?x2846 (center s_____________________)))
 (let (($x2884 (= ?x2846 ?x2708)))
 (let ((?x2522 (right s____________________)))
 (let ((?x2853 (top ?x2522)))
 (let ((?x2855 (stack ?x2853 ?x2708)))
 (let (($x2881 (= ?x2846 ?x2855)))
 (let (($x2856 ((_ is stack ) ?x2522)))
 (let (($x2857 (= c____________________ right-to-center)))
 (let (($x2858 (and $x2857 $x2856)))
 (let (($x2859 (= c____________________ right-to-left)))
 (let (($x2860 (and $x2859 $x2856)))
 (let ((?x2848 (rest ?x2708)))
 (let (($x2876 (= ?x2846 ?x2848)))
 (let (($x2861 ((_ is stack ) ?x2708)))
 (let (($x2862 (= c____________________ center-to-right)))
 (let (($x2863 (and $x2862 $x2861)))
 (let (($x2864 (= c____________________ center-to-left)))
 (let (($x2865 (and $x2864 $x2861)))
 (let ((?x2488 (left s____________________)))
 (let ((?x2706 (top ?x2488)))
 (let ((?x2847 (stack ?x2706 ?x2708)))
 (let (($x2875 (= ?x2846 ?x2847)))
 (let (($x2866 ((_ is stack ) ?x2488)))
 (let (($x2867 (= c____________________ left-to-right)))
 (let (($x2868 (and $x2867 $x2866)))
 (let (($x2898 (ite $x2868 $x2875 (ite $x2865 $x2876 (ite $x2863 $x2876 (ite $x2860 $x2884 (ite $x2858 $x2881 $x2884)))))))
 (let (($x2869 (= c____________________ left-to-center)))
 (let (($x2870 (and $x2869 $x2866)))
 (ite $x2870 $x2884 $x2898)))))))))))))))))))))))))))))))
(assert
 (= c______________________ c!21))
(assert
 (let ((?x2626 (left s_____________________)))
 (let ((?x2764 (left s______________________)))
 (let (($x3024 (= ?x2764 ?x2626)))
 (let ((?x2660 (right s_____________________)))
 (let ((?x2991 (top ?x2660)))
 (let ((?x2992 (stack ?x2991 ?x2626)))
 (let (($x3018 (= ?x2764 ?x2992)))
 (let (($x2994 ((_ is stack ) ?x2660)))
 (let (($x2997 (= c_____________________ right-to-left)))
 (let (($x2998 (and $x2997 $x2994)))
 (let ((?x2846 (center s_____________________)))
 (let (($x2999 ((_ is stack ) ?x2846)))
 (let (($x3000 (= c_____________________ center-to-right)))
 (let (($x3001 (and $x3000 $x2999)))
 (let ((?x2987 (top ?x2846)))
 (let ((?x2988 (stack ?x2987 ?x2626)))
 (let (($x3015 (= ?x2764 ?x2988)))
 (let (($x3002 (= c_____________________ center-to-left)))
 (let (($x3003 (and $x3002 $x2999)))
 (let ((?x2797 (rest ?x2626)))
 (let (($x3011 (= ?x2764 ?x2797)))
 (let (($x3004 ((_ is stack ) ?x2626)))
 (let (($x3005 (= c_____________________ left-to-right)))
 (let (($x3006 (and $x3005 $x3004)))
 (let (($x3007 (= c_____________________ left-to-center)))
 (let (($x3008 (and $x3007 $x3004)))
 (ite $x3008 $x3011 (ite $x3006 $x3011 (ite $x3003 $x3015 (ite $x3001 $x3024 (ite $x2998 $x3018 $x3024))))))))))))))))))))))))))))))))
(assert
 (let ((?x2660 (right s_____________________)))
 (let ((?x2798 (right s______________________)))
 (let (($x3020 (= ?x2798 ?x2660)))
 (let ((?x2990 (rest ?x2660)))
 (let (($x3017 (= ?x2798 ?x2990)))
 (let (($x2994 ((_ is stack ) ?x2660)))
 (let (($x2995 (= c_____________________ right-to-center)))
 (let (($x2996 (and $x2995 $x2994)))
 (let (($x2997 (= c_____________________ right-to-left)))
 (let (($x2998 (and $x2997 $x2994)))
 (let ((?x2846 (center s_____________________)))
 (let ((?x2987 (top ?x2846)))
 (let ((?x2989 (stack ?x2987 ?x2660)))
 (let (($x3016 (= ?x2798 ?x2989)))
 (let (($x2999 ((_ is stack ) ?x2846)))
 (let (($x3000 (= c_____________________ center-to-right)))
 (let (($x3001 (and $x3000 $x2999)))
 (let (($x3002 (= c_____________________ center-to-left)))
 (let (($x3003 (and $x3002 $x2999)))
 (let ((?x2626 (left s_____________________)))
 (let (($x3004 ((_ is stack ) ?x2626)))
 (let (($x3005 (= c_____________________ left-to-right)))
 (let (($x3006 (and $x3005 $x3004)))
 (let (($x3037 (ite $x3006 $x3020 (ite $x3003 $x3020 (ite $x3001 $x3016 (ite $x2998 $x3017 (ite $x2996 $x3017 $x3020)))))))
 (let ((?x2844 (top ?x2626)))
 (let ((?x2983 (stack ?x2844 ?x2660)))
 (let (($x3012 (= ?x2798 ?x2983)))
 (let (($x3007 (= c_____________________ left-to-center)))
 (let (($x3008 (and $x3007 $x3004)))
 (ite $x3008 $x3012 $x3037)))))))))))))))))))))))))))))))
(assert
 (let ((?x2846 (center s_____________________)))
 (let ((?x2984 (center s______________________)))
 (let (($x3022 (= ?x2984 ?x2846)))
 (let ((?x2660 (right s_____________________)))
 (let ((?x2991 (top ?x2660)))
 (let ((?x2993 (stack ?x2991 ?x2846)))
 (let (($x3019 (= ?x2984 ?x2993)))
 (let (($x2994 ((_ is stack ) ?x2660)))
 (let (($x2995 (= c_____________________ right-to-center)))
 (let (($x2996 (and $x2995 $x2994)))
 (let (($x2997 (= c_____________________ right-to-left)))
 (let (($x2998 (and $x2997 $x2994)))
 (let ((?x2986 (rest ?x2846)))
 (let (($x3014 (= ?x2984 ?x2986)))
 (let (($x2999 ((_ is stack ) ?x2846)))
 (let (($x3000 (= c_____________________ center-to-right)))
 (let (($x3001 (and $x3000 $x2999)))
 (let (($x3002 (= c_____________________ center-to-left)))
 (let (($x3003 (and $x3002 $x2999)))
 (let ((?x2626 (left s_____________________)))
 (let ((?x2844 (top ?x2626)))
 (let ((?x2985 (stack ?x2844 ?x2846)))
 (let (($x3013 (= ?x2984 ?x2985)))
 (let (($x3004 ((_ is stack ) ?x2626)))
 (let (($x3005 (= c_____________________ left-to-right)))
 (let (($x3006 (and $x3005 $x3004)))
 (let (($x3036 (ite $x3006 $x3013 (ite $x3003 $x3014 (ite $x3001 $x3014 (ite $x2998 $x3022 (ite $x2996 $x3019 $x3022)))))))
 (let (($x3007 (= c_____________________ left-to-center)))
 (let (($x3008 (and $x3007 $x3004)))
 (ite $x3008 $x3022 $x3036)))))))))))))))))))))))))))))))
(assert
 (= c_______________________ c!22))
(assert
 (let ((?x2764 (left s______________________)))
 (let ((?x2902 (left s_______________________)))
 (let (($x3162 (= ?x2902 ?x2764)))
 (let ((?x2798 (right s______________________)))
 (let ((?x3129 (top ?x2798)))
 (let ((?x3130 (stack ?x3129 ?x2764)))
 (let (($x3156 (= ?x2902 ?x3130)))
 (let (($x3132 ((_ is stack ) ?x2798)))
 (let (($x3135 (= c______________________ right-to-left)))
 (let (($x3136 (and $x3135 $x3132)))
 (let ((?x2984 (center s______________________)))
 (let (($x3137 ((_ is stack ) ?x2984)))
 (let (($x3138 (= c______________________ center-to-right)))
 (let (($x3139 (and $x3138 $x3137)))
 (let ((?x3125 (top ?x2984)))
 (let ((?x3126 (stack ?x3125 ?x2764)))
 (let (($x3153 (= ?x2902 ?x3126)))
 (let (($x3140 (= c______________________ center-to-left)))
 (let (($x3141 (and $x3140 $x3137)))
 (let ((?x2935 (rest ?x2764)))
 (let (($x3149 (= ?x2902 ?x2935)))
 (let (($x3142 ((_ is stack ) ?x2764)))
 (let (($x3143 (= c______________________ left-to-right)))
 (let (($x3144 (and $x3143 $x3142)))
 (let (($x3145 (= c______________________ left-to-center)))
 (let (($x3146 (and $x3145 $x3142)))
 (ite $x3146 $x3149 (ite $x3144 $x3149 (ite $x3141 $x3153 (ite $x3139 $x3162 (ite $x3136 $x3156 $x3162))))))))))))))))))))))))))))))))
(assert
 (let ((?x2798 (right s______________________)))
 (let ((?x2936 (right s_______________________)))
 (let (($x3158 (= ?x2936 ?x2798)))
 (let ((?x3128 (rest ?x2798)))
 (let (($x3155 (= ?x2936 ?x3128)))
 (let (($x3132 ((_ is stack ) ?x2798)))
 (let (($x3133 (= c______________________ right-to-center)))
 (let (($x3134 (and $x3133 $x3132)))
 (let (($x3135 (= c______________________ right-to-left)))
 (let (($x3136 (and $x3135 $x3132)))
 (let ((?x2984 (center s______________________)))
 (let ((?x3125 (top ?x2984)))
 (let ((?x3127 (stack ?x3125 ?x2798)))
 (let (($x3154 (= ?x2936 ?x3127)))
 (let (($x3137 ((_ is stack ) ?x2984)))
 (let (($x3138 (= c______________________ center-to-right)))
 (let (($x3139 (and $x3138 $x3137)))
 (let (($x3140 (= c______________________ center-to-left)))
 (let (($x3141 (and $x3140 $x3137)))
 (let ((?x2764 (left s______________________)))
 (let (($x3142 ((_ is stack ) ?x2764)))
 (let (($x3143 (= c______________________ left-to-right)))
 (let (($x3144 (and $x3143 $x3142)))
 (let (($x3175 (ite $x3144 $x3158 (ite $x3141 $x3158 (ite $x3139 $x3154 (ite $x3136 $x3155 (ite $x3134 $x3155 $x3158)))))))
 (let ((?x2982 (top ?x2764)))
 (let ((?x3121 (stack ?x2982 ?x2798)))
 (let (($x3150 (= ?x2936 ?x3121)))
 (let (($x3145 (= c______________________ left-to-center)))
 (let (($x3146 (and $x3145 $x3142)))
 (ite $x3146 $x3150 $x3175)))))))))))))))))))))))))))))))
(assert
 (let ((?x2984 (center s______________________)))
 (let ((?x3122 (center s_______________________)))
 (let (($x3160 (= ?x3122 ?x2984)))
 (let ((?x2798 (right s______________________)))
 (let ((?x3129 (top ?x2798)))
 (let ((?x3131 (stack ?x3129 ?x2984)))
 (let (($x3157 (= ?x3122 ?x3131)))
 (let (($x3132 ((_ is stack ) ?x2798)))
 (let (($x3133 (= c______________________ right-to-center)))
 (let (($x3134 (and $x3133 $x3132)))
 (let (($x3135 (= c______________________ right-to-left)))
 (let (($x3136 (and $x3135 $x3132)))
 (let ((?x3124 (rest ?x2984)))
 (let (($x3152 (= ?x3122 ?x3124)))
 (let (($x3137 ((_ is stack ) ?x2984)))
 (let (($x3138 (= c______________________ center-to-right)))
 (let (($x3139 (and $x3138 $x3137)))
 (let (($x3140 (= c______________________ center-to-left)))
 (let (($x3141 (and $x3140 $x3137)))
 (let ((?x2764 (left s______________________)))
 (let ((?x2982 (top ?x2764)))
 (let ((?x3123 (stack ?x2982 ?x2984)))
 (let (($x3151 (= ?x3122 ?x3123)))
 (let (($x3142 ((_ is stack ) ?x2764)))
 (let (($x3143 (= c______________________ left-to-right)))
 (let (($x3144 (and $x3143 $x3142)))
 (let (($x3174 (ite $x3144 $x3151 (ite $x3141 $x3152 (ite $x3139 $x3152 (ite $x3136 $x3160 (ite $x3134 $x3157 $x3160)))))))
 (let (($x3145 (= c______________________ left-to-center)))
 (let (($x3146 (and $x3145 $x3142)))
 (ite $x3146 $x3160 $x3174)))))))))))))))))))))))))))))))
(assert
 (= c________________________ c!23))
(assert
 (let ((?x2902 (left s_______________________)))
 (let ((?x3040 (left s________________________)))
 (let (($x3300 (= ?x3040 ?x2902)))
 (let ((?x2936 (right s_______________________)))
 (let ((?x3267 (top ?x2936)))
 (let ((?x3268 (stack ?x3267 ?x2902)))
 (let (($x3294 (= ?x3040 ?x3268)))
 (let (($x3270 ((_ is stack ) ?x2936)))
 (let (($x3273 (= c_______________________ right-to-left)))
 (let (($x3274 (and $x3273 $x3270)))
 (let ((?x3122 (center s_______________________)))
 (let (($x3275 ((_ is stack ) ?x3122)))
 (let (($x3276 (= c_______________________ center-to-right)))
 (let (($x3277 (and $x3276 $x3275)))
 (let ((?x3263 (top ?x3122)))
 (let ((?x3264 (stack ?x3263 ?x2902)))
 (let (($x3291 (= ?x3040 ?x3264)))
 (let (($x3278 (= c_______________________ center-to-left)))
 (let (($x3279 (and $x3278 $x3275)))
 (let ((?x3073 (rest ?x2902)))
 (let (($x3287 (= ?x3040 ?x3073)))
 (let (($x3280 ((_ is stack ) ?x2902)))
 (let (($x3281 (= c_______________________ left-to-right)))
 (let (($x3282 (and $x3281 $x3280)))
 (let (($x3283 (= c_______________________ left-to-center)))
 (let (($x3284 (and $x3283 $x3280)))
 (ite $x3284 $x3287 (ite $x3282 $x3287 (ite $x3279 $x3291 (ite $x3277 $x3300 (ite $x3274 $x3294 $x3300))))))))))))))))))))))))))))))))
(assert
 (let ((?x2936 (right s_______________________)))
 (let ((?x3074 (right s________________________)))
 (let (($x3296 (= ?x3074 ?x2936)))
 (let ((?x3266 (rest ?x2936)))
 (let (($x3293 (= ?x3074 ?x3266)))
 (let (($x3270 ((_ is stack ) ?x2936)))
 (let (($x3271 (= c_______________________ right-to-center)))
 (let (($x3272 (and $x3271 $x3270)))
 (let (($x3273 (= c_______________________ right-to-left)))
 (let (($x3274 (and $x3273 $x3270)))
 (let ((?x3122 (center s_______________________)))
 (let ((?x3263 (top ?x3122)))
 (let ((?x3265 (stack ?x3263 ?x2936)))
 (let (($x3292 (= ?x3074 ?x3265)))
 (let (($x3275 ((_ is stack ) ?x3122)))
 (let (($x3276 (= c_______________________ center-to-right)))
 (let (($x3277 (and $x3276 $x3275)))
 (let (($x3278 (= c_______________________ center-to-left)))
 (let (($x3279 (and $x3278 $x3275)))
 (let ((?x2902 (left s_______________________)))
 (let (($x3280 ((_ is stack ) ?x2902)))
 (let (($x3281 (= c_______________________ left-to-right)))
 (let (($x3282 (and $x3281 $x3280)))
 (let (($x3313 (ite $x3282 $x3296 (ite $x3279 $x3296 (ite $x3277 $x3292 (ite $x3274 $x3293 (ite $x3272 $x3293 $x3296)))))))
 (let ((?x3120 (top ?x2902)))
 (let ((?x3259 (stack ?x3120 ?x2936)))
 (let (($x3288 (= ?x3074 ?x3259)))
 (let (($x3283 (= c_______________________ left-to-center)))
 (let (($x3284 (and $x3283 $x3280)))
 (ite $x3284 $x3288 $x3313)))))))))))))))))))))))))))))))
(assert
 (let ((?x3122 (center s_______________________)))
 (let ((?x3260 (center s________________________)))
 (let (($x3298 (= ?x3260 ?x3122)))
 (let ((?x2936 (right s_______________________)))
 (let ((?x3267 (top ?x2936)))
 (let ((?x3269 (stack ?x3267 ?x3122)))
 (let (($x3295 (= ?x3260 ?x3269)))
 (let (($x3270 ((_ is stack ) ?x2936)))
 (let (($x3271 (= c_______________________ right-to-center)))
 (let (($x3272 (and $x3271 $x3270)))
 (let (($x3273 (= c_______________________ right-to-left)))
 (let (($x3274 (and $x3273 $x3270)))
 (let ((?x3262 (rest ?x3122)))
 (let (($x3290 (= ?x3260 ?x3262)))
 (let (($x3275 ((_ is stack ) ?x3122)))
 (let (($x3276 (= c_______________________ center-to-right)))
 (let (($x3277 (and $x3276 $x3275)))
 (let (($x3278 (= c_______________________ center-to-left)))
 (let (($x3279 (and $x3278 $x3275)))
 (let ((?x2902 (left s_______________________)))
 (let ((?x3120 (top ?x2902)))
 (let ((?x3261 (stack ?x3120 ?x3122)))
 (let (($x3289 (= ?x3260 ?x3261)))
 (let (($x3280 ((_ is stack ) ?x2902)))
 (let (($x3281 (= c_______________________ left-to-right)))
 (let (($x3282 (and $x3281 $x3280)))
 (let (($x3312 (ite $x3282 $x3289 (ite $x3279 $x3290 (ite $x3277 $x3290 (ite $x3274 $x3298 (ite $x3272 $x3295 $x3298)))))))
 (let (($x3283 (= c_______________________ left-to-center)))
 (let (($x3284 (and $x3283 $x3280)))
 (ite $x3284 $x3298 $x3312)))))))))))))))))))))))))))))))
(assert
 (= c_________________________ c!24))
(assert
 (let ((?x3040 (left s________________________)))
 (let ((?x3178 (left s_________________________)))
 (let (($x3438 (= ?x3178 ?x3040)))
 (let ((?x3074 (right s________________________)))
 (let ((?x3405 (top ?x3074)))
 (let ((?x3406 (stack ?x3405 ?x3040)))
 (let (($x3432 (= ?x3178 ?x3406)))
 (let (($x3408 ((_ is stack ) ?x3074)))
 (let (($x3411 (= c________________________ right-to-left)))
 (let (($x3412 (and $x3411 $x3408)))
 (let ((?x3260 (center s________________________)))
 (let (($x3413 ((_ is stack ) ?x3260)))
 (let (($x3414 (= c________________________ center-to-right)))
 (let (($x3415 (and $x3414 $x3413)))
 (let ((?x3401 (top ?x3260)))
 (let ((?x3402 (stack ?x3401 ?x3040)))
 (let (($x3429 (= ?x3178 ?x3402)))
 (let (($x3416 (= c________________________ center-to-left)))
 (let (($x3417 (and $x3416 $x3413)))
 (let ((?x3211 (rest ?x3040)))
 (let (($x3425 (= ?x3178 ?x3211)))
 (let (($x3418 ((_ is stack ) ?x3040)))
 (let (($x3419 (= c________________________ left-to-right)))
 (let (($x3420 (and $x3419 $x3418)))
 (let (($x3421 (= c________________________ left-to-center)))
 (let (($x3422 (and $x3421 $x3418)))
 (ite $x3422 $x3425 (ite $x3420 $x3425 (ite $x3417 $x3429 (ite $x3415 $x3438 (ite $x3412 $x3432 $x3438))))))))))))))))))))))))))))))))
(assert
 (let ((?x3074 (right s________________________)))
 (let ((?x3212 (right s_________________________)))
 (let (($x3434 (= ?x3212 ?x3074)))
 (let ((?x3404 (rest ?x3074)))
 (let (($x3431 (= ?x3212 ?x3404)))
 (let (($x3408 ((_ is stack ) ?x3074)))
 (let (($x3409 (= c________________________ right-to-center)))
 (let (($x3410 (and $x3409 $x3408)))
 (let (($x3411 (= c________________________ right-to-left)))
 (let (($x3412 (and $x3411 $x3408)))
 (let ((?x3260 (center s________________________)))
 (let ((?x3401 (top ?x3260)))
 (let ((?x3403 (stack ?x3401 ?x3074)))
 (let (($x3430 (= ?x3212 ?x3403)))
 (let (($x3413 ((_ is stack ) ?x3260)))
 (let (($x3414 (= c________________________ center-to-right)))
 (let (($x3415 (and $x3414 $x3413)))
 (let (($x3416 (= c________________________ center-to-left)))
 (let (($x3417 (and $x3416 $x3413)))
 (let ((?x3040 (left s________________________)))
 (let (($x3418 ((_ is stack ) ?x3040)))
 (let (($x3419 (= c________________________ left-to-right)))
 (let (($x3420 (and $x3419 $x3418)))
 (let (($x3451 (ite $x3420 $x3434 (ite $x3417 $x3434 (ite $x3415 $x3430 (ite $x3412 $x3431 (ite $x3410 $x3431 $x3434)))))))
 (let ((?x3258 (top ?x3040)))
 (let ((?x3397 (stack ?x3258 ?x3074)))
 (let (($x3426 (= ?x3212 ?x3397)))
 (let (($x3421 (= c________________________ left-to-center)))
 (let (($x3422 (and $x3421 $x3418)))
 (ite $x3422 $x3426 $x3451)))))))))))))))))))))))))))))))
(assert
 (let ((?x3260 (center s________________________)))
 (let ((?x3398 (center s_________________________)))
 (let (($x3436 (= ?x3398 ?x3260)))
 (let ((?x3074 (right s________________________)))
 (let ((?x3405 (top ?x3074)))
 (let ((?x3407 (stack ?x3405 ?x3260)))
 (let (($x3433 (= ?x3398 ?x3407)))
 (let (($x3408 ((_ is stack ) ?x3074)))
 (let (($x3409 (= c________________________ right-to-center)))
 (let (($x3410 (and $x3409 $x3408)))
 (let (($x3411 (= c________________________ right-to-left)))
 (let (($x3412 (and $x3411 $x3408)))
 (let ((?x3400 (rest ?x3260)))
 (let (($x3428 (= ?x3398 ?x3400)))
 (let (($x3413 ((_ is stack ) ?x3260)))
 (let (($x3414 (= c________________________ center-to-right)))
 (let (($x3415 (and $x3414 $x3413)))
 (let (($x3416 (= c________________________ center-to-left)))
 (let (($x3417 (and $x3416 $x3413)))
 (let ((?x3040 (left s________________________)))
 (let ((?x3258 (top ?x3040)))
 (let ((?x3399 (stack ?x3258 ?x3260)))
 (let (($x3427 (= ?x3398 ?x3399)))
 (let (($x3418 ((_ is stack ) ?x3040)))
 (let (($x3419 (= c________________________ left-to-right)))
 (let (($x3420 (and $x3419 $x3418)))
 (let (($x3450 (ite $x3420 $x3427 (ite $x3417 $x3428 (ite $x3415 $x3428 (ite $x3412 $x3436 (ite $x3410 $x3433 $x3436)))))))
 (let (($x3421 (= c________________________ left-to-center)))
 (let (($x3422 (and $x3421 $x3418)))
 (ite $x3422 $x3436 $x3450)))))))))))))))))))))))))))))))
(assert
 (= c__________________________ c!25))
(assert
 (let ((?x3178 (left s_________________________)))
 (let ((?x3316 (left s__________________________)))
 (let (($x3576 (= ?x3316 ?x3178)))
 (let ((?x3212 (right s_________________________)))
 (let ((?x3543 (top ?x3212)))
 (let ((?x3544 (stack ?x3543 ?x3178)))
 (let (($x3570 (= ?x3316 ?x3544)))
 (let (($x3546 ((_ is stack ) ?x3212)))
 (let (($x3549 (= c_________________________ right-to-left)))
 (let (($x3550 (and $x3549 $x3546)))
 (let ((?x3398 (center s_________________________)))
 (let (($x3551 ((_ is stack ) ?x3398)))
 (let (($x3552 (= c_________________________ center-to-right)))
 (let (($x3553 (and $x3552 $x3551)))
 (let ((?x3539 (top ?x3398)))
 (let ((?x3540 (stack ?x3539 ?x3178)))
 (let (($x3567 (= ?x3316 ?x3540)))
 (let (($x3554 (= c_________________________ center-to-left)))
 (let (($x3555 (and $x3554 $x3551)))
 (let ((?x3349 (rest ?x3178)))
 (let (($x3563 (= ?x3316 ?x3349)))
 (let (($x3556 ((_ is stack ) ?x3178)))
 (let (($x3557 (= c_________________________ left-to-right)))
 (let (($x3558 (and $x3557 $x3556)))
 (let (($x3559 (= c_________________________ left-to-center)))
 (let (($x3560 (and $x3559 $x3556)))
 (ite $x3560 $x3563 (ite $x3558 $x3563 (ite $x3555 $x3567 (ite $x3553 $x3576 (ite $x3550 $x3570 $x3576))))))))))))))))))))))))))))))))
(assert
 (let ((?x3212 (right s_________________________)))
 (let ((?x3350 (right s__________________________)))
 (let (($x3572 (= ?x3350 ?x3212)))
 (let ((?x3542 (rest ?x3212)))
 (let (($x3569 (= ?x3350 ?x3542)))
 (let (($x3546 ((_ is stack ) ?x3212)))
 (let (($x3547 (= c_________________________ right-to-center)))
 (let (($x3548 (and $x3547 $x3546)))
 (let (($x3549 (= c_________________________ right-to-left)))
 (let (($x3550 (and $x3549 $x3546)))
 (let ((?x3398 (center s_________________________)))
 (let ((?x3539 (top ?x3398)))
 (let ((?x3541 (stack ?x3539 ?x3212)))
 (let (($x3568 (= ?x3350 ?x3541)))
 (let (($x3551 ((_ is stack ) ?x3398)))
 (let (($x3552 (= c_________________________ center-to-right)))
 (let (($x3553 (and $x3552 $x3551)))
 (let (($x3554 (= c_________________________ center-to-left)))
 (let (($x3555 (and $x3554 $x3551)))
 (let ((?x3178 (left s_________________________)))
 (let (($x3556 ((_ is stack ) ?x3178)))
 (let (($x3557 (= c_________________________ left-to-right)))
 (let (($x3558 (and $x3557 $x3556)))
 (let (($x3589 (ite $x3558 $x3572 (ite $x3555 $x3572 (ite $x3553 $x3568 (ite $x3550 $x3569 (ite $x3548 $x3569 $x3572)))))))
 (let ((?x3396 (top ?x3178)))
 (let ((?x3535 (stack ?x3396 ?x3212)))
 (let (($x3564 (= ?x3350 ?x3535)))
 (let (($x3559 (= c_________________________ left-to-center)))
 (let (($x3560 (and $x3559 $x3556)))
 (ite $x3560 $x3564 $x3589)))))))))))))))))))))))))))))))
(assert
 (let ((?x3398 (center s_________________________)))
 (let ((?x3536 (center s__________________________)))
 (let (($x3574 (= ?x3536 ?x3398)))
 (let ((?x3212 (right s_________________________)))
 (let ((?x3543 (top ?x3212)))
 (let ((?x3545 (stack ?x3543 ?x3398)))
 (let (($x3571 (= ?x3536 ?x3545)))
 (let (($x3546 ((_ is stack ) ?x3212)))
 (let (($x3547 (= c_________________________ right-to-center)))
 (let (($x3548 (and $x3547 $x3546)))
 (let (($x3549 (= c_________________________ right-to-left)))
 (let (($x3550 (and $x3549 $x3546)))
 (let ((?x3538 (rest ?x3398)))
 (let (($x3566 (= ?x3536 ?x3538)))
 (let (($x3551 ((_ is stack ) ?x3398)))
 (let (($x3552 (= c_________________________ center-to-right)))
 (let (($x3553 (and $x3552 $x3551)))
 (let (($x3554 (= c_________________________ center-to-left)))
 (let (($x3555 (and $x3554 $x3551)))
 (let ((?x3178 (left s_________________________)))
 (let ((?x3396 (top ?x3178)))
 (let ((?x3537 (stack ?x3396 ?x3398)))
 (let (($x3565 (= ?x3536 ?x3537)))
 (let (($x3556 ((_ is stack ) ?x3178)))
 (let (($x3557 (= c_________________________ left-to-right)))
 (let (($x3558 (and $x3557 $x3556)))
 (let (($x3588 (ite $x3558 $x3565 (ite $x3555 $x3566 (ite $x3553 $x3566 (ite $x3550 $x3574 (ite $x3548 $x3571 $x3574)))))))
 (let (($x3559 (= c_________________________ left-to-center)))
 (let (($x3560 (and $x3559 $x3556)))
 (ite $x3560 $x3574 $x3588)))))))))))))))))))))))))))))))
(assert
 (let ((?x71 (stack I empty)))
 (let ((?x3350 (right s__________________________)))
 (let (($x3592 (= ?x3350 ?x71)))
 (let ((?x70 (stack L (stack F empty))))
 (let ((?x3536 (center s__________________________)))
 (let (($x3623 (= ?x3536 ?x70)))
 (let ((?x57 (stack K (stack S (stack R (stack D (stack Q (stack P empty))))))))
 (let ((?x63 (stack M (stack O (stack G (stack J (stack E (stack N ?x57))))))))
 (let ((?x68 (stack A (stack C (stack T (stack H (stack B ?x63)))))))
 (let ((?x3316 (left s__________________________)))
 (let (($x3624 (= ?x3316 ?x68)))
 (let (($x3626 (not (and $x3624 $x3623 $x3592))))
 (not $x3626))))))))))))))
(check-sat)
(exit)
