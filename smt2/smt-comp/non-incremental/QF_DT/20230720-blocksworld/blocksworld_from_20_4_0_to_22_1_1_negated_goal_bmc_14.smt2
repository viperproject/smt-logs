(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W) (X))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x37 (stack G empty)))
 (let ((?x36 (stack E ?x37)))
 (let ((?x38 (stack B ?x36)))
 (let ((?x39 (stack R ?x38)))
 (let ((?x40 (stack I ?x39)))
 (let ((?x41 (stack M ?x40)))
 (let ((?x42 (stack S ?x41)))
 (let ((?x43 (stack Q ?x42)))
 (let ((?x44 (stack A ?x43)))
 (let ((?x45 (stack D ?x44)))
 (let ((?x46 (stack K ?x45)))
 (let ((?x47 (stack H ?x46)))
 (let ((?x48 (stack V ?x47)))
 (let ((?x49 (stack T ?x48)))
 (let ((?x50 (stack F ?x49)))
 (let ((?x51 (stack J ?x50)))
 (let ((?x52 (stack N ?x51)))
 (let ((?x53 (stack O ?x52)))
 (let ((?x54 (stack L ?x53)))
 (let ((?x55 (stack P ?x54)))
 (let ((?x130 (left s_tmp_)))
 (= ?x130 ?x55)))))))))))))))))))))))
(assert
 (let ((?x56 (stack X empty)))
 (let ((?x57 (stack C ?x56)))
 (let ((?x58 (stack U ?x57)))
 (let ((?x59 (stack W ?x58)))
 (let ((?x133 (center s_tmp__)))
 (= ?x133 ?x59)))))))
(assert
 (let ((?x136 (right s_tmp___)))
 (= ?x136 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x163 (left s_tmp__)))
 (= (left s_tmp___) ?x163)))
(assert
 (let ((?x133 (center s_tmp__)))
 (= (center s_tmp___) ?x133)))
(assert
 (let ((?x167 (center s_tmp_)))
 (= ?x167 (center s_tmp))))
(assert
 (let ((?x170 (right s_tmp_)))
 (= ?x170 (right s_tmp))))
(assert
 (let ((?x130 (left s_tmp_)))
 (let ((?x163 (left s_tmp__)))
 (= ?x163 ?x130))))
(assert
 (let ((?x170 (right s_tmp_)))
 (let ((?x174 (right s_tmp__)))
 (= ?x174 ?x170))))
(assert
 (= c__ c!1))
(assert
 (let ((?x107 (left s_)))
 (let ((?x332 (left s__)))
 (let (($x326 (= ?x332 ?x107)))
 (let ((?x110 (right s_)))
 (let (($x296 ((_ is stack ) ?x110)))
 (let (($x342 (and (= c_ right-to-left) $x296)))
 (let ((?x112 (center s_)))
 (let (($x343 ((_ is stack ) ?x112)))
 (let (($x344 (= c_ center-to-right)))
 (let (($x333 (and $x344 $x343)))
 (let (($x334 (= c_ center-to-left)))
 (let (($x335 (and $x334 $x343)))
 (let (($x320 (ite $x335 (= ?x332 (stack (top ?x112) ?x107)) (ite $x333 $x326 (ite $x342 (= ?x332 (stack (top ?x110) ?x107)) $x326)))))
 (let (($x346 (= ?x332 (rest ?x107))))
 (let (($x321 ((_ is stack ) ?x107)))
 (let (($x322 (= c_ left-to-right)))
 (let (($x323 (and $x322 $x321)))
 (let (($x297 (= c_ left-to-center)))
 (let (($x298 (and $x297 $x321)))
 (ite $x298 $x346 (ite $x323 $x346 $x320))))))))))))))))))))))
(assert
 (let ((?x110 (right s_)))
 (let ((?x349 (right s__)))
 (let (($x289 (= ?x349 ?x110)))
 (let (($x310 (= ?x349 (rest ?x110))))
 (let (($x296 ((_ is stack ) ?x110)))
 (let (($x304 (and (= c_ right-to-center) $x296)))
 (let (($x342 (and (= c_ right-to-left) $x296)))
 (let ((?x112 (center s_)))
 (let (($x343 ((_ is stack ) ?x112)))
 (let (($x344 (= c_ center-to-right)))
 (let (($x333 (and $x344 $x343)))
 (let (($x314 (ite $x333 (= ?x349 (stack (top ?x112) ?x110)) (ite $x342 $x310 (ite $x304 $x310 $x289)))))
 (let (($x334 (= c_ center-to-left)))
 (let (($x335 (and $x334 $x343)))
 (let ((?x107 (left s_)))
 (let (($x321 ((_ is stack ) ?x107)))
 (let (($x322 (= c_ left-to-right)))
 (let (($x323 (and $x322 $x321)))
 (let (($x297 (= c_ left-to-center)))
 (let (($x298 (and $x297 $x321)))
 (ite $x298 (= ?x349 (stack (top ?x107) ?x110)) (ite $x323 $x289 (ite $x335 $x289 $x314))))))))))))))))))))))))
(assert
 (let ((?x112 (center s_)))
 (let ((?x340 (center s__)))
 (let (($x324 (= ?x340 ?x112)))
 (let ((?x110 (right s_)))
 (let (($x296 ((_ is stack ) ?x110)))
 (let (($x304 (and (= c_ right-to-center) $x296)))
 (let (($x342 (and (= c_ right-to-left) $x296)))
 (let (($x301 (= ?x340 (rest ?x112))))
 (let (($x343 ((_ is stack ) ?x112)))
 (let (($x344 (= c_ center-to-right)))
 (let (($x333 (and $x344 $x343)))
 (let (($x313 (ite $x333 $x301 (ite $x342 $x324 (ite $x304 (= ?x340 (stack (top ?x110) ?x112)) $x324)))))
 (let (($x334 (= c_ center-to-left)))
 (let (($x335 (and $x334 $x343)))
 (let ((?x107 (left s_)))
 (let (($x321 ((_ is stack ) ?x107)))
 (let (($x322 (= c_ left-to-right)))
 (let (($x323 (and $x322 $x321)))
 (let (($x297 (= c_ left-to-center)))
 (let (($x298 (and $x297 $x321)))
 (ite $x298 $x324 (ite $x323 (= ?x340 (stack (top ?x107) ?x112)) (ite $x335 $x301 $x313))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x332 (left s__)))
 (let ((?x177 (left s___)))
 (let (($x445 (= ?x177 ?x332)))
 (let ((?x349 (right s__)))
 (let ((?x412 (top ?x349)))
 (let ((?x413 (stack ?x412 ?x332)))
 (let (($x439 (= ?x177 ?x413)))
 (let (($x415 ((_ is stack ) ?x349)))
 (let (($x418 (= c__ right-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x340 (center s__)))
 (let (($x420 ((_ is stack ) ?x340)))
 (let (($x421 (= c__ center-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let ((?x408 (top ?x340)))
 (let ((?x409 (stack ?x408 ?x332)))
 (let (($x436 (= ?x177 ?x409)))
 (let (($x423 (= c__ center-to-left)))
 (let (($x424 (and $x423 $x420)))
 (let ((?x179 (rest ?x332)))
 (let (($x432 (= ?x177 ?x179)))
 (let (($x425 ((_ is stack ) ?x332)))
 (let (($x426 (= c__ left-to-right)))
 (let (($x427 (and $x426 $x425)))
 (let (($x428 (= c__ left-to-center)))
 (let (($x429 (and $x428 $x425)))
 (ite $x429 $x432 (ite $x427 $x432 (ite $x424 $x436 (ite $x422 $x445 (ite $x419 $x439 $x445))))))))))))))))))))))))))))))))
(assert
 (let ((?x349 (right s__)))
 (let ((?x180 (right s___)))
 (let (($x441 (= ?x180 ?x349)))
 (let ((?x411 (rest ?x349)))
 (let (($x438 (= ?x180 ?x411)))
 (let (($x415 ((_ is stack ) ?x349)))
 (let (($x416 (= c__ right-to-center)))
 (let (($x417 (and $x416 $x415)))
 (let (($x418 (= c__ right-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x340 (center s__)))
 (let ((?x408 (top ?x340)))
 (let ((?x410 (stack ?x408 ?x349)))
 (let (($x437 (= ?x180 ?x410)))
 (let (($x420 ((_ is stack ) ?x340)))
 (let (($x421 (= c__ center-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let (($x423 (= c__ center-to-left)))
 (let (($x424 (and $x423 $x420)))
 (let ((?x332 (left s__)))
 (let (($x425 ((_ is stack ) ?x332)))
 (let (($x426 (= c__ left-to-right)))
 (let (($x427 (and $x426 $x425)))
 (let (($x458 (ite $x427 $x441 (ite $x424 $x441 (ite $x422 $x437 (ite $x419 $x438 (ite $x417 $x438 $x441)))))))
 (let ((?x287 (top ?x332)))
 (let ((?x404 (stack ?x287 ?x349)))
 (let (($x433 (= ?x180 ?x404)))
 (let (($x428 (= c__ left-to-center)))
 (let (($x429 (and $x428 $x425)))
 (ite $x429 $x433 $x458)))))))))))))))))))))))))))))))
(assert
 (let ((?x340 (center s__)))
 (let ((?x405 (center s___)))
 (let (($x443 (= ?x405 ?x340)))
 (let ((?x349 (right s__)))
 (let ((?x412 (top ?x349)))
 (let ((?x414 (stack ?x412 ?x340)))
 (let (($x440 (= ?x405 ?x414)))
 (let (($x415 ((_ is stack ) ?x349)))
 (let (($x416 (= c__ right-to-center)))
 (let (($x417 (and $x416 $x415)))
 (let (($x418 (= c__ right-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x407 (rest ?x340)))
 (let (($x435 (= ?x405 ?x407)))
 (let (($x420 ((_ is stack ) ?x340)))
 (let (($x421 (= c__ center-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let (($x423 (= c__ center-to-left)))
 (let (($x424 (and $x423 $x420)))
 (let ((?x332 (left s__)))
 (let ((?x287 (top ?x332)))
 (let ((?x406 (stack ?x287 ?x340)))
 (let (($x434 (= ?x405 ?x406)))
 (let (($x425 ((_ is stack ) ?x332)))
 (let (($x426 (= c__ left-to-right)))
 (let (($x427 (and $x426 $x425)))
 (let (($x457 (ite $x427 $x434 (ite $x424 $x435 (ite $x422 $x435 (ite $x419 $x443 (ite $x417 $x440 $x443)))))))
 (let (($x428 (= c__ left-to-center)))
 (let (($x429 (and $x428 $x425)))
 (ite $x429 $x443 $x457)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x177 (left s___)))
 (let ((?x351 (left s____)))
 (let (($x583 (= ?x351 ?x177)))
 (let ((?x180 (right s___)))
 (let ((?x550 (top ?x180)))
 (let ((?x551 (stack ?x550 ?x177)))
 (let (($x577 (= ?x351 ?x551)))
 (let (($x553 ((_ is stack ) ?x180)))
 (let (($x556 (= c___ right-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x405 (center s___)))
 (let (($x558 ((_ is stack ) ?x405)))
 (let (($x559 (= c___ center-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let ((?x546 (top ?x405)))
 (let ((?x547 (stack ?x546 ?x177)))
 (let (($x574 (= ?x351 ?x547)))
 (let (($x561 (= c___ center-to-left)))
 (let (($x562 (and $x561 $x558)))
 (let ((?x381 (rest ?x177)))
 (let (($x570 (= ?x351 ?x381)))
 (let (($x563 ((_ is stack ) ?x177)))
 (let (($x564 (= c___ left-to-right)))
 (let (($x565 (and $x564 $x563)))
 (let (($x566 (= c___ left-to-center)))
 (let (($x567 (and $x566 $x563)))
 (ite $x567 $x570 (ite $x565 $x570 (ite $x562 $x574 (ite $x560 $x583 (ite $x557 $x577 $x583))))))))))))))))))))))))))))))))
(assert
 (let ((?x180 (right s___)))
 (let ((?x382 (right s____)))
 (let (($x579 (= ?x382 ?x180)))
 (let ((?x549 (rest ?x180)))
 (let (($x576 (= ?x382 ?x549)))
 (let (($x553 ((_ is stack ) ?x180)))
 (let (($x554 (= c___ right-to-center)))
 (let (($x555 (and $x554 $x553)))
 (let (($x556 (= c___ right-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x405 (center s___)))
 (let ((?x546 (top ?x405)))
 (let ((?x548 (stack ?x546 ?x180)))
 (let (($x575 (= ?x382 ?x548)))
 (let (($x558 ((_ is stack ) ?x405)))
 (let (($x559 (= c___ center-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let (($x561 (= c___ center-to-left)))
 (let (($x562 (and $x561 $x558)))
 (let ((?x177 (left s___)))
 (let (($x563 ((_ is stack ) ?x177)))
 (let (($x564 (= c___ left-to-right)))
 (let (($x565 (and $x564 $x563)))
 (let (($x596 (ite $x565 $x579 (ite $x562 $x579 (ite $x560 $x575 (ite $x557 $x576 (ite $x555 $x576 $x579)))))))
 (let ((?x403 (top ?x177)))
 (let ((?x542 (stack ?x403 ?x180)))
 (let (($x571 (= ?x382 ?x542)))
 (let (($x566 (= c___ left-to-center)))
 (let (($x567 (and $x566 $x563)))
 (ite $x567 $x571 $x596)))))))))))))))))))))))))))))))
(assert
 (let ((?x405 (center s___)))
 (let ((?x543 (center s____)))
 (let (($x581 (= ?x543 ?x405)))
 (let ((?x180 (right s___)))
 (let ((?x550 (top ?x180)))
 (let ((?x552 (stack ?x550 ?x405)))
 (let (($x578 (= ?x543 ?x552)))
 (let (($x553 ((_ is stack ) ?x180)))
 (let (($x554 (= c___ right-to-center)))
 (let (($x555 (and $x554 $x553)))
 (let (($x556 (= c___ right-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x545 (rest ?x405)))
 (let (($x573 (= ?x543 ?x545)))
 (let (($x558 ((_ is stack ) ?x405)))
 (let (($x559 (= c___ center-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let (($x561 (= c___ center-to-left)))
 (let (($x562 (and $x561 $x558)))
 (let ((?x177 (left s___)))
 (let ((?x403 (top ?x177)))
 (let ((?x544 (stack ?x403 ?x405)))
 (let (($x572 (= ?x543 ?x544)))
 (let (($x563 ((_ is stack ) ?x177)))
 (let (($x564 (= c___ left-to-right)))
 (let (($x565 (and $x564 $x563)))
 (let (($x595 (ite $x565 $x572 (ite $x562 $x573 (ite $x560 $x573 (ite $x557 $x581 (ite $x555 $x578 $x581)))))))
 (let (($x566 (= c___ left-to-center)))
 (let (($x567 (and $x566 $x563)))
 (ite $x567 $x581 $x595)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x351 (left s____)))
 (let ((?x461 (left s_____)))
 (let (($x721 (= ?x461 ?x351)))
 (let ((?x382 (right s____)))
 (let ((?x688 (top ?x382)))
 (let ((?x689 (stack ?x688 ?x351)))
 (let (($x715 (= ?x461 ?x689)))
 (let (($x691 ((_ is stack ) ?x382)))
 (let (($x694 (= c____ right-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x543 (center s____)))
 (let (($x696 ((_ is stack ) ?x543)))
 (let (($x697 (= c____ center-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let ((?x684 (top ?x543)))
 (let ((?x685 (stack ?x684 ?x351)))
 (let (($x712 (= ?x461 ?x685)))
 (let (($x699 (= c____ center-to-left)))
 (let (($x700 (and $x699 $x696)))
 (let ((?x494 (rest ?x351)))
 (let (($x708 (= ?x461 ?x494)))
 (let (($x701 ((_ is stack ) ?x351)))
 (let (($x702 (= c____ left-to-right)))
 (let (($x703 (and $x702 $x701)))
 (let (($x704 (= c____ left-to-center)))
 (let (($x705 (and $x704 $x701)))
 (ite $x705 $x708 (ite $x703 $x708 (ite $x700 $x712 (ite $x698 $x721 (ite $x695 $x715 $x721))))))))))))))))))))))))))))))))
(assert
 (let ((?x382 (right s____)))
 (let ((?x495 (right s_____)))
 (let (($x717 (= ?x495 ?x382)))
 (let ((?x687 (rest ?x382)))
 (let (($x714 (= ?x495 ?x687)))
 (let (($x691 ((_ is stack ) ?x382)))
 (let (($x692 (= c____ right-to-center)))
 (let (($x693 (and $x692 $x691)))
 (let (($x694 (= c____ right-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x543 (center s____)))
 (let ((?x684 (top ?x543)))
 (let ((?x686 (stack ?x684 ?x382)))
 (let (($x713 (= ?x495 ?x686)))
 (let (($x696 ((_ is stack ) ?x543)))
 (let (($x697 (= c____ center-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let (($x699 (= c____ center-to-left)))
 (let (($x700 (and $x699 $x696)))
 (let ((?x351 (left s____)))
 (let (($x701 ((_ is stack ) ?x351)))
 (let (($x702 (= c____ left-to-right)))
 (let (($x703 (and $x702 $x701)))
 (let (($x734 (ite $x703 $x717 (ite $x700 $x717 (ite $x698 $x713 (ite $x695 $x714 (ite $x693 $x714 $x717)))))))
 (let ((?x541 (top ?x351)))
 (let ((?x680 (stack ?x541 ?x382)))
 (let (($x709 (= ?x495 ?x680)))
 (let (($x704 (= c____ left-to-center)))
 (let (($x705 (and $x704 $x701)))
 (ite $x705 $x709 $x734)))))))))))))))))))))))))))))))
(assert
 (let ((?x543 (center s____)))
 (let ((?x681 (center s_____)))
 (let (($x719 (= ?x681 ?x543)))
 (let ((?x382 (right s____)))
 (let ((?x688 (top ?x382)))
 (let ((?x690 (stack ?x688 ?x543)))
 (let (($x716 (= ?x681 ?x690)))
 (let (($x691 ((_ is stack ) ?x382)))
 (let (($x692 (= c____ right-to-center)))
 (let (($x693 (and $x692 $x691)))
 (let (($x694 (= c____ right-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x683 (rest ?x543)))
 (let (($x711 (= ?x681 ?x683)))
 (let (($x696 ((_ is stack ) ?x543)))
 (let (($x697 (= c____ center-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let (($x699 (= c____ center-to-left)))
 (let (($x700 (and $x699 $x696)))
 (let ((?x351 (left s____)))
 (let ((?x541 (top ?x351)))
 (let ((?x682 (stack ?x541 ?x543)))
 (let (($x710 (= ?x681 ?x682)))
 (let (($x701 ((_ is stack ) ?x351)))
 (let (($x702 (= c____ left-to-right)))
 (let (($x703 (and $x702 $x701)))
 (let (($x733 (ite $x703 $x710 (ite $x700 $x711 (ite $x698 $x711 (ite $x695 $x719 (ite $x693 $x716 $x719)))))))
 (let (($x704 (= c____ left-to-center)))
 (let (($x705 (and $x704 $x701)))
 (ite $x705 $x719 $x733)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x461 (left s_____)))
 (let ((?x599 (left s______)))
 (let (($x859 (= ?x599 ?x461)))
 (let ((?x495 (right s_____)))
 (let ((?x826 (top ?x495)))
 (let ((?x827 (stack ?x826 ?x461)))
 (let (($x853 (= ?x599 ?x827)))
 (let (($x829 ((_ is stack ) ?x495)))
 (let (($x832 (= c_____ right-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x681 (center s_____)))
 (let (($x834 ((_ is stack ) ?x681)))
 (let (($x835 (= c_____ center-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let ((?x822 (top ?x681)))
 (let ((?x823 (stack ?x822 ?x461)))
 (let (($x850 (= ?x599 ?x823)))
 (let (($x837 (= c_____ center-to-left)))
 (let (($x838 (and $x837 $x834)))
 (let ((?x632 (rest ?x461)))
 (let (($x846 (= ?x599 ?x632)))
 (let (($x839 ((_ is stack ) ?x461)))
 (let (($x840 (= c_____ left-to-right)))
 (let (($x841 (and $x840 $x839)))
 (let (($x842 (= c_____ left-to-center)))
 (let (($x843 (and $x842 $x839)))
 (ite $x843 $x846 (ite $x841 $x846 (ite $x838 $x850 (ite $x836 $x859 (ite $x833 $x853 $x859))))))))))))))))))))))))))))))))
(assert
 (let ((?x495 (right s_____)))
 (let ((?x633 (right s______)))
 (let (($x855 (= ?x633 ?x495)))
 (let ((?x825 (rest ?x495)))
 (let (($x852 (= ?x633 ?x825)))
 (let (($x829 ((_ is stack ) ?x495)))
 (let (($x830 (= c_____ right-to-center)))
 (let (($x831 (and $x830 $x829)))
 (let (($x832 (= c_____ right-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x681 (center s_____)))
 (let ((?x822 (top ?x681)))
 (let ((?x824 (stack ?x822 ?x495)))
 (let (($x851 (= ?x633 ?x824)))
 (let (($x834 ((_ is stack ) ?x681)))
 (let (($x835 (= c_____ center-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let (($x837 (= c_____ center-to-left)))
 (let (($x838 (and $x837 $x834)))
 (let ((?x461 (left s_____)))
 (let (($x839 ((_ is stack ) ?x461)))
 (let (($x840 (= c_____ left-to-right)))
 (let (($x841 (and $x840 $x839)))
 (let (($x872 (ite $x841 $x855 (ite $x838 $x855 (ite $x836 $x851 (ite $x833 $x852 (ite $x831 $x852 $x855)))))))
 (let ((?x679 (top ?x461)))
 (let ((?x818 (stack ?x679 ?x495)))
 (let (($x847 (= ?x633 ?x818)))
 (let (($x842 (= c_____ left-to-center)))
 (let (($x843 (and $x842 $x839)))
 (ite $x843 $x847 $x872)))))))))))))))))))))))))))))))
(assert
 (let ((?x681 (center s_____)))
 (let ((?x819 (center s______)))
 (let (($x857 (= ?x819 ?x681)))
 (let ((?x495 (right s_____)))
 (let ((?x826 (top ?x495)))
 (let ((?x828 (stack ?x826 ?x681)))
 (let (($x854 (= ?x819 ?x828)))
 (let (($x829 ((_ is stack ) ?x495)))
 (let (($x830 (= c_____ right-to-center)))
 (let (($x831 (and $x830 $x829)))
 (let (($x832 (= c_____ right-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x821 (rest ?x681)))
 (let (($x849 (= ?x819 ?x821)))
 (let (($x834 ((_ is stack ) ?x681)))
 (let (($x835 (= c_____ center-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let (($x837 (= c_____ center-to-left)))
 (let (($x838 (and $x837 $x834)))
 (let ((?x461 (left s_____)))
 (let ((?x679 (top ?x461)))
 (let ((?x820 (stack ?x679 ?x681)))
 (let (($x848 (= ?x819 ?x820)))
 (let (($x839 ((_ is stack ) ?x461)))
 (let (($x840 (= c_____ left-to-right)))
 (let (($x841 (and $x840 $x839)))
 (let (($x871 (ite $x841 $x848 (ite $x838 $x849 (ite $x836 $x849 (ite $x833 $x857 (ite $x831 $x854 $x857)))))))
 (let (($x842 (= c_____ left-to-center)))
 (let (($x843 (and $x842 $x839)))
 (ite $x843 $x857 $x871)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x599 (left s______)))
 (let ((?x737 (left s_______)))
 (let (($x997 (= ?x737 ?x599)))
 (let ((?x633 (right s______)))
 (let ((?x964 (top ?x633)))
 (let ((?x965 (stack ?x964 ?x599)))
 (let (($x991 (= ?x737 ?x965)))
 (let (($x967 ((_ is stack ) ?x633)))
 (let (($x970 (= c______ right-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x819 (center s______)))
 (let (($x972 ((_ is stack ) ?x819)))
 (let (($x973 (= c______ center-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let ((?x960 (top ?x819)))
 (let ((?x961 (stack ?x960 ?x599)))
 (let (($x988 (= ?x737 ?x961)))
 (let (($x975 (= c______ center-to-left)))
 (let (($x976 (and $x975 $x972)))
 (let ((?x770 (rest ?x599)))
 (let (($x984 (= ?x737 ?x770)))
 (let (($x977 ((_ is stack ) ?x599)))
 (let (($x978 (= c______ left-to-right)))
 (let (($x979 (and $x978 $x977)))
 (let (($x980 (= c______ left-to-center)))
 (let (($x981 (and $x980 $x977)))
 (ite $x981 $x984 (ite $x979 $x984 (ite $x976 $x988 (ite $x974 $x997 (ite $x971 $x991 $x997))))))))))))))))))))))))))))))))
(assert
 (let ((?x633 (right s______)))
 (let ((?x771 (right s_______)))
 (let (($x993 (= ?x771 ?x633)))
 (let ((?x963 (rest ?x633)))
 (let (($x990 (= ?x771 ?x963)))
 (let (($x967 ((_ is stack ) ?x633)))
 (let (($x968 (= c______ right-to-center)))
 (let (($x969 (and $x968 $x967)))
 (let (($x970 (= c______ right-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x819 (center s______)))
 (let ((?x960 (top ?x819)))
 (let ((?x962 (stack ?x960 ?x633)))
 (let (($x989 (= ?x771 ?x962)))
 (let (($x972 ((_ is stack ) ?x819)))
 (let (($x973 (= c______ center-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let (($x975 (= c______ center-to-left)))
 (let (($x976 (and $x975 $x972)))
 (let ((?x599 (left s______)))
 (let (($x977 ((_ is stack ) ?x599)))
 (let (($x978 (= c______ left-to-right)))
 (let (($x979 (and $x978 $x977)))
 (let (($x1010 (ite $x979 $x993 (ite $x976 $x993 (ite $x974 $x989 (ite $x971 $x990 (ite $x969 $x990 $x993)))))))
 (let ((?x817 (top ?x599)))
 (let ((?x956 (stack ?x817 ?x633)))
 (let (($x985 (= ?x771 ?x956)))
 (let (($x980 (= c______ left-to-center)))
 (let (($x981 (and $x980 $x977)))
 (ite $x981 $x985 $x1010)))))))))))))))))))))))))))))))
(assert
 (let ((?x819 (center s______)))
 (let ((?x957 (center s_______)))
 (let (($x995 (= ?x957 ?x819)))
 (let ((?x633 (right s______)))
 (let ((?x964 (top ?x633)))
 (let ((?x966 (stack ?x964 ?x819)))
 (let (($x992 (= ?x957 ?x966)))
 (let (($x967 ((_ is stack ) ?x633)))
 (let (($x968 (= c______ right-to-center)))
 (let (($x969 (and $x968 $x967)))
 (let (($x970 (= c______ right-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x959 (rest ?x819)))
 (let (($x987 (= ?x957 ?x959)))
 (let (($x972 ((_ is stack ) ?x819)))
 (let (($x973 (= c______ center-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let (($x975 (= c______ center-to-left)))
 (let (($x976 (and $x975 $x972)))
 (let ((?x599 (left s______)))
 (let ((?x817 (top ?x599)))
 (let ((?x958 (stack ?x817 ?x819)))
 (let (($x986 (= ?x957 ?x958)))
 (let (($x977 ((_ is stack ) ?x599)))
 (let (($x978 (= c______ left-to-right)))
 (let (($x979 (and $x978 $x977)))
 (let (($x1009 (ite $x979 $x986 (ite $x976 $x987 (ite $x974 $x987 (ite $x971 $x995 (ite $x969 $x992 $x995)))))))
 (let (($x980 (= c______ left-to-center)))
 (let (($x981 (and $x980 $x977)))
 (ite $x981 $x995 $x1009)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x737 (left s_______)))
 (let ((?x875 (left s________)))
 (let (($x1135 (= ?x875 ?x737)))
 (let ((?x771 (right s_______)))
 (let ((?x1102 (top ?x771)))
 (let ((?x1103 (stack ?x1102 ?x737)))
 (let (($x1129 (= ?x875 ?x1103)))
 (let (($x1105 ((_ is stack ) ?x771)))
 (let (($x1108 (= c_______ right-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x957 (center s_______)))
 (let (($x1110 ((_ is stack ) ?x957)))
 (let (($x1111 (= c_______ center-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let ((?x1098 (top ?x957)))
 (let ((?x1099 (stack ?x1098 ?x737)))
 (let (($x1126 (= ?x875 ?x1099)))
 (let (($x1113 (= c_______ center-to-left)))
 (let (($x1114 (and $x1113 $x1110)))
 (let ((?x908 (rest ?x737)))
 (let (($x1122 (= ?x875 ?x908)))
 (let (($x1115 ((_ is stack ) ?x737)))
 (let (($x1116 (= c_______ left-to-right)))
 (let (($x1117 (and $x1116 $x1115)))
 (let (($x1118 (= c_______ left-to-center)))
 (let (($x1119 (and $x1118 $x1115)))
 (ite $x1119 $x1122 (ite $x1117 $x1122 (ite $x1114 $x1126 (ite $x1112 $x1135 (ite $x1109 $x1129 $x1135))))))))))))))))))))))))))))))))
(assert
 (let ((?x771 (right s_______)))
 (let ((?x909 (right s________)))
 (let (($x1131 (= ?x909 ?x771)))
 (let ((?x1101 (rest ?x771)))
 (let (($x1128 (= ?x909 ?x1101)))
 (let (($x1105 ((_ is stack ) ?x771)))
 (let (($x1106 (= c_______ right-to-center)))
 (let (($x1107 (and $x1106 $x1105)))
 (let (($x1108 (= c_______ right-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x957 (center s_______)))
 (let ((?x1098 (top ?x957)))
 (let ((?x1100 (stack ?x1098 ?x771)))
 (let (($x1127 (= ?x909 ?x1100)))
 (let (($x1110 ((_ is stack ) ?x957)))
 (let (($x1111 (= c_______ center-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let (($x1113 (= c_______ center-to-left)))
 (let (($x1114 (and $x1113 $x1110)))
 (let ((?x737 (left s_______)))
 (let (($x1115 ((_ is stack ) ?x737)))
 (let (($x1116 (= c_______ left-to-right)))
 (let (($x1117 (and $x1116 $x1115)))
 (let (($x1148 (ite $x1117 $x1131 (ite $x1114 $x1131 (ite $x1112 $x1127 (ite $x1109 $x1128 (ite $x1107 $x1128 $x1131)))))))
 (let ((?x955 (top ?x737)))
 (let ((?x1094 (stack ?x955 ?x771)))
 (let (($x1123 (= ?x909 ?x1094)))
 (let (($x1118 (= c_______ left-to-center)))
 (let (($x1119 (and $x1118 $x1115)))
 (ite $x1119 $x1123 $x1148)))))))))))))))))))))))))))))))
(assert
 (let ((?x957 (center s_______)))
 (let ((?x1095 (center s________)))
 (let (($x1133 (= ?x1095 ?x957)))
 (let ((?x771 (right s_______)))
 (let ((?x1102 (top ?x771)))
 (let ((?x1104 (stack ?x1102 ?x957)))
 (let (($x1130 (= ?x1095 ?x1104)))
 (let (($x1105 ((_ is stack ) ?x771)))
 (let (($x1106 (= c_______ right-to-center)))
 (let (($x1107 (and $x1106 $x1105)))
 (let (($x1108 (= c_______ right-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x1097 (rest ?x957)))
 (let (($x1125 (= ?x1095 ?x1097)))
 (let (($x1110 ((_ is stack ) ?x957)))
 (let (($x1111 (= c_______ center-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let (($x1113 (= c_______ center-to-left)))
 (let (($x1114 (and $x1113 $x1110)))
 (let ((?x737 (left s_______)))
 (let ((?x955 (top ?x737)))
 (let ((?x1096 (stack ?x955 ?x957)))
 (let (($x1124 (= ?x1095 ?x1096)))
 (let (($x1115 ((_ is stack ) ?x737)))
 (let (($x1116 (= c_______ left-to-right)))
 (let (($x1117 (and $x1116 $x1115)))
 (let (($x1147 (ite $x1117 $x1124 (ite $x1114 $x1125 (ite $x1112 $x1125 (ite $x1109 $x1133 (ite $x1107 $x1130 $x1133)))))))
 (let (($x1118 (= c_______ left-to-center)))
 (let (($x1119 (and $x1118 $x1115)))
 (ite $x1119 $x1133 $x1147)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x875 (left s________)))
 (let ((?x1013 (left s_________)))
 (let (($x1273 (= ?x1013 ?x875)))
 (let ((?x909 (right s________)))
 (let ((?x1240 (top ?x909)))
 (let ((?x1241 (stack ?x1240 ?x875)))
 (let (($x1267 (= ?x1013 ?x1241)))
 (let (($x1243 ((_ is stack ) ?x909)))
 (let (($x1246 (= c________ right-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x1095 (center s________)))
 (let (($x1248 ((_ is stack ) ?x1095)))
 (let (($x1249 (= c________ center-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let ((?x1236 (top ?x1095)))
 (let ((?x1237 (stack ?x1236 ?x875)))
 (let (($x1264 (= ?x1013 ?x1237)))
 (let (($x1251 (= c________ center-to-left)))
 (let (($x1252 (and $x1251 $x1248)))
 (let ((?x1046 (rest ?x875)))
 (let (($x1260 (= ?x1013 ?x1046)))
 (let (($x1253 ((_ is stack ) ?x875)))
 (let (($x1254 (= c________ left-to-right)))
 (let (($x1255 (and $x1254 $x1253)))
 (let (($x1256 (= c________ left-to-center)))
 (let (($x1257 (and $x1256 $x1253)))
 (ite $x1257 $x1260 (ite $x1255 $x1260 (ite $x1252 $x1264 (ite $x1250 $x1273 (ite $x1247 $x1267 $x1273))))))))))))))))))))))))))))))))
(assert
 (let ((?x909 (right s________)))
 (let ((?x1047 (right s_________)))
 (let (($x1269 (= ?x1047 ?x909)))
 (let ((?x1239 (rest ?x909)))
 (let (($x1266 (= ?x1047 ?x1239)))
 (let (($x1243 ((_ is stack ) ?x909)))
 (let (($x1244 (= c________ right-to-center)))
 (let (($x1245 (and $x1244 $x1243)))
 (let (($x1246 (= c________ right-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x1095 (center s________)))
 (let ((?x1236 (top ?x1095)))
 (let ((?x1238 (stack ?x1236 ?x909)))
 (let (($x1265 (= ?x1047 ?x1238)))
 (let (($x1248 ((_ is stack ) ?x1095)))
 (let (($x1249 (= c________ center-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let (($x1251 (= c________ center-to-left)))
 (let (($x1252 (and $x1251 $x1248)))
 (let ((?x875 (left s________)))
 (let (($x1253 ((_ is stack ) ?x875)))
 (let (($x1254 (= c________ left-to-right)))
 (let (($x1255 (and $x1254 $x1253)))
 (let (($x1286 (ite $x1255 $x1269 (ite $x1252 $x1269 (ite $x1250 $x1265 (ite $x1247 $x1266 (ite $x1245 $x1266 $x1269)))))))
 (let ((?x1093 (top ?x875)))
 (let ((?x1232 (stack ?x1093 ?x909)))
 (let (($x1261 (= ?x1047 ?x1232)))
 (let (($x1256 (= c________ left-to-center)))
 (let (($x1257 (and $x1256 $x1253)))
 (ite $x1257 $x1261 $x1286)))))))))))))))))))))))))))))))
(assert
 (let ((?x1095 (center s________)))
 (let ((?x1233 (center s_________)))
 (let (($x1271 (= ?x1233 ?x1095)))
 (let ((?x909 (right s________)))
 (let ((?x1240 (top ?x909)))
 (let ((?x1242 (stack ?x1240 ?x1095)))
 (let (($x1268 (= ?x1233 ?x1242)))
 (let (($x1243 ((_ is stack ) ?x909)))
 (let (($x1244 (= c________ right-to-center)))
 (let (($x1245 (and $x1244 $x1243)))
 (let (($x1246 (= c________ right-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x1235 (rest ?x1095)))
 (let (($x1263 (= ?x1233 ?x1235)))
 (let (($x1248 ((_ is stack ) ?x1095)))
 (let (($x1249 (= c________ center-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let (($x1251 (= c________ center-to-left)))
 (let (($x1252 (and $x1251 $x1248)))
 (let ((?x875 (left s________)))
 (let ((?x1093 (top ?x875)))
 (let ((?x1234 (stack ?x1093 ?x1095)))
 (let (($x1262 (= ?x1233 ?x1234)))
 (let (($x1253 ((_ is stack ) ?x875)))
 (let (($x1254 (= c________ left-to-right)))
 (let (($x1255 (and $x1254 $x1253)))
 (let (($x1285 (ite $x1255 $x1262 (ite $x1252 $x1263 (ite $x1250 $x1263 (ite $x1247 $x1271 (ite $x1245 $x1268 $x1271)))))))
 (let (($x1256 (= c________ left-to-center)))
 (let (($x1257 (and $x1256 $x1253)))
 (ite $x1257 $x1271 $x1285)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1013 (left s_________)))
 (let ((?x1151 (left s__________)))
 (let (($x1411 (= ?x1151 ?x1013)))
 (let ((?x1047 (right s_________)))
 (let ((?x1378 (top ?x1047)))
 (let ((?x1379 (stack ?x1378 ?x1013)))
 (let (($x1405 (= ?x1151 ?x1379)))
 (let (($x1381 ((_ is stack ) ?x1047)))
 (let (($x1384 (= c_________ right-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1233 (center s_________)))
 (let (($x1386 ((_ is stack ) ?x1233)))
 (let (($x1387 (= c_________ center-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let ((?x1374 (top ?x1233)))
 (let ((?x1375 (stack ?x1374 ?x1013)))
 (let (($x1402 (= ?x1151 ?x1375)))
 (let (($x1389 (= c_________ center-to-left)))
 (let (($x1390 (and $x1389 $x1386)))
 (let ((?x1184 (rest ?x1013)))
 (let (($x1398 (= ?x1151 ?x1184)))
 (let (($x1391 ((_ is stack ) ?x1013)))
 (let (($x1392 (= c_________ left-to-right)))
 (let (($x1393 (and $x1392 $x1391)))
 (let (($x1394 (= c_________ left-to-center)))
 (let (($x1395 (and $x1394 $x1391)))
 (ite $x1395 $x1398 (ite $x1393 $x1398 (ite $x1390 $x1402 (ite $x1388 $x1411 (ite $x1385 $x1405 $x1411))))))))))))))))))))))))))))))))
(assert
 (let ((?x1047 (right s_________)))
 (let ((?x1185 (right s__________)))
 (let (($x1407 (= ?x1185 ?x1047)))
 (let ((?x1377 (rest ?x1047)))
 (let (($x1404 (= ?x1185 ?x1377)))
 (let (($x1381 ((_ is stack ) ?x1047)))
 (let (($x1382 (= c_________ right-to-center)))
 (let (($x1383 (and $x1382 $x1381)))
 (let (($x1384 (= c_________ right-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1233 (center s_________)))
 (let ((?x1374 (top ?x1233)))
 (let ((?x1376 (stack ?x1374 ?x1047)))
 (let (($x1403 (= ?x1185 ?x1376)))
 (let (($x1386 ((_ is stack ) ?x1233)))
 (let (($x1387 (= c_________ center-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let (($x1389 (= c_________ center-to-left)))
 (let (($x1390 (and $x1389 $x1386)))
 (let ((?x1013 (left s_________)))
 (let (($x1391 ((_ is stack ) ?x1013)))
 (let (($x1392 (= c_________ left-to-right)))
 (let (($x1393 (and $x1392 $x1391)))
 (let (($x1424 (ite $x1393 $x1407 (ite $x1390 $x1407 (ite $x1388 $x1403 (ite $x1385 $x1404 (ite $x1383 $x1404 $x1407)))))))
 (let ((?x1231 (top ?x1013)))
 (let ((?x1370 (stack ?x1231 ?x1047)))
 (let (($x1399 (= ?x1185 ?x1370)))
 (let (($x1394 (= c_________ left-to-center)))
 (let (($x1395 (and $x1394 $x1391)))
 (ite $x1395 $x1399 $x1424)))))))))))))))))))))))))))))))
(assert
 (let ((?x1233 (center s_________)))
 (let ((?x1371 (center s__________)))
 (let (($x1409 (= ?x1371 ?x1233)))
 (let ((?x1047 (right s_________)))
 (let ((?x1378 (top ?x1047)))
 (let ((?x1380 (stack ?x1378 ?x1233)))
 (let (($x1406 (= ?x1371 ?x1380)))
 (let (($x1381 ((_ is stack ) ?x1047)))
 (let (($x1382 (= c_________ right-to-center)))
 (let (($x1383 (and $x1382 $x1381)))
 (let (($x1384 (= c_________ right-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1373 (rest ?x1233)))
 (let (($x1401 (= ?x1371 ?x1373)))
 (let (($x1386 ((_ is stack ) ?x1233)))
 (let (($x1387 (= c_________ center-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let (($x1389 (= c_________ center-to-left)))
 (let (($x1390 (and $x1389 $x1386)))
 (let ((?x1013 (left s_________)))
 (let ((?x1231 (top ?x1013)))
 (let ((?x1372 (stack ?x1231 ?x1233)))
 (let (($x1400 (= ?x1371 ?x1372)))
 (let (($x1391 ((_ is stack ) ?x1013)))
 (let (($x1392 (= c_________ left-to-right)))
 (let (($x1393 (and $x1392 $x1391)))
 (let (($x1423 (ite $x1393 $x1400 (ite $x1390 $x1401 (ite $x1388 $x1401 (ite $x1385 $x1409 (ite $x1383 $x1406 $x1409)))))))
 (let (($x1394 (= c_________ left-to-center)))
 (let (($x1395 (and $x1394 $x1391)))
 (ite $x1395 $x1409 $x1423)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1151 (left s__________)))
 (let ((?x1289 (left s___________)))
 (let (($x1549 (= ?x1289 ?x1151)))
 (let ((?x1185 (right s__________)))
 (let ((?x1516 (top ?x1185)))
 (let ((?x1517 (stack ?x1516 ?x1151)))
 (let (($x1543 (= ?x1289 ?x1517)))
 (let (($x1519 ((_ is stack ) ?x1185)))
 (let (($x1522 (= c__________ right-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1371 (center s__________)))
 (let (($x1524 ((_ is stack ) ?x1371)))
 (let (($x1525 (= c__________ center-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let ((?x1512 (top ?x1371)))
 (let ((?x1513 (stack ?x1512 ?x1151)))
 (let (($x1540 (= ?x1289 ?x1513)))
 (let (($x1527 (= c__________ center-to-left)))
 (let (($x1528 (and $x1527 $x1524)))
 (let ((?x1322 (rest ?x1151)))
 (let (($x1536 (= ?x1289 ?x1322)))
 (let (($x1529 ((_ is stack ) ?x1151)))
 (let (($x1530 (= c__________ left-to-right)))
 (let (($x1531 (and $x1530 $x1529)))
 (let (($x1532 (= c__________ left-to-center)))
 (let (($x1533 (and $x1532 $x1529)))
 (ite $x1533 $x1536 (ite $x1531 $x1536 (ite $x1528 $x1540 (ite $x1526 $x1549 (ite $x1523 $x1543 $x1549))))))))))))))))))))))))))))))))
(assert
 (let ((?x1185 (right s__________)))
 (let ((?x1323 (right s___________)))
 (let (($x1545 (= ?x1323 ?x1185)))
 (let ((?x1515 (rest ?x1185)))
 (let (($x1542 (= ?x1323 ?x1515)))
 (let (($x1519 ((_ is stack ) ?x1185)))
 (let (($x1520 (= c__________ right-to-center)))
 (let (($x1521 (and $x1520 $x1519)))
 (let (($x1522 (= c__________ right-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1371 (center s__________)))
 (let ((?x1512 (top ?x1371)))
 (let ((?x1514 (stack ?x1512 ?x1185)))
 (let (($x1541 (= ?x1323 ?x1514)))
 (let (($x1524 ((_ is stack ) ?x1371)))
 (let (($x1525 (= c__________ center-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let (($x1527 (= c__________ center-to-left)))
 (let (($x1528 (and $x1527 $x1524)))
 (let ((?x1151 (left s__________)))
 (let (($x1529 ((_ is stack ) ?x1151)))
 (let (($x1530 (= c__________ left-to-right)))
 (let (($x1531 (and $x1530 $x1529)))
 (let (($x1562 (ite $x1531 $x1545 (ite $x1528 $x1545 (ite $x1526 $x1541 (ite $x1523 $x1542 (ite $x1521 $x1542 $x1545)))))))
 (let ((?x1369 (top ?x1151)))
 (let ((?x1508 (stack ?x1369 ?x1185)))
 (let (($x1537 (= ?x1323 ?x1508)))
 (let (($x1532 (= c__________ left-to-center)))
 (let (($x1533 (and $x1532 $x1529)))
 (ite $x1533 $x1537 $x1562)))))))))))))))))))))))))))))))
(assert
 (let ((?x1371 (center s__________)))
 (let ((?x1509 (center s___________)))
 (let (($x1547 (= ?x1509 ?x1371)))
 (let ((?x1185 (right s__________)))
 (let ((?x1516 (top ?x1185)))
 (let ((?x1518 (stack ?x1516 ?x1371)))
 (let (($x1544 (= ?x1509 ?x1518)))
 (let (($x1519 ((_ is stack ) ?x1185)))
 (let (($x1520 (= c__________ right-to-center)))
 (let (($x1521 (and $x1520 $x1519)))
 (let (($x1522 (= c__________ right-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1511 (rest ?x1371)))
 (let (($x1539 (= ?x1509 ?x1511)))
 (let (($x1524 ((_ is stack ) ?x1371)))
 (let (($x1525 (= c__________ center-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let (($x1527 (= c__________ center-to-left)))
 (let (($x1528 (and $x1527 $x1524)))
 (let ((?x1151 (left s__________)))
 (let ((?x1369 (top ?x1151)))
 (let ((?x1510 (stack ?x1369 ?x1371)))
 (let (($x1538 (= ?x1509 ?x1510)))
 (let (($x1529 ((_ is stack ) ?x1151)))
 (let (($x1530 (= c__________ left-to-right)))
 (let (($x1531 (and $x1530 $x1529)))
 (let (($x1561 (ite $x1531 $x1538 (ite $x1528 $x1539 (ite $x1526 $x1539 (ite $x1523 $x1547 (ite $x1521 $x1544 $x1547)))))))
 (let (($x1532 (= c__________ left-to-center)))
 (let (($x1533 (and $x1532 $x1529)))
 (ite $x1533 $x1547 $x1561)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1289 (left s___________)))
 (let ((?x1427 (left s____________)))
 (let (($x1687 (= ?x1427 ?x1289)))
 (let ((?x1323 (right s___________)))
 (let ((?x1654 (top ?x1323)))
 (let ((?x1655 (stack ?x1654 ?x1289)))
 (let (($x1681 (= ?x1427 ?x1655)))
 (let (($x1657 ((_ is stack ) ?x1323)))
 (let (($x1660 (= c___________ right-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1509 (center s___________)))
 (let (($x1662 ((_ is stack ) ?x1509)))
 (let (($x1663 (= c___________ center-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let ((?x1650 (top ?x1509)))
 (let ((?x1651 (stack ?x1650 ?x1289)))
 (let (($x1678 (= ?x1427 ?x1651)))
 (let (($x1665 (= c___________ center-to-left)))
 (let (($x1666 (and $x1665 $x1662)))
 (let ((?x1460 (rest ?x1289)))
 (let (($x1674 (= ?x1427 ?x1460)))
 (let (($x1667 ((_ is stack ) ?x1289)))
 (let (($x1668 (= c___________ left-to-right)))
 (let (($x1669 (and $x1668 $x1667)))
 (let (($x1670 (= c___________ left-to-center)))
 (let (($x1671 (and $x1670 $x1667)))
 (ite $x1671 $x1674 (ite $x1669 $x1674 (ite $x1666 $x1678 (ite $x1664 $x1687 (ite $x1661 $x1681 $x1687))))))))))))))))))))))))))))))))
(assert
 (let ((?x1323 (right s___________)))
 (let ((?x1461 (right s____________)))
 (let (($x1683 (= ?x1461 ?x1323)))
 (let ((?x1653 (rest ?x1323)))
 (let (($x1680 (= ?x1461 ?x1653)))
 (let (($x1657 ((_ is stack ) ?x1323)))
 (let (($x1658 (= c___________ right-to-center)))
 (let (($x1659 (and $x1658 $x1657)))
 (let (($x1660 (= c___________ right-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1509 (center s___________)))
 (let ((?x1650 (top ?x1509)))
 (let ((?x1652 (stack ?x1650 ?x1323)))
 (let (($x1679 (= ?x1461 ?x1652)))
 (let (($x1662 ((_ is stack ) ?x1509)))
 (let (($x1663 (= c___________ center-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let (($x1665 (= c___________ center-to-left)))
 (let (($x1666 (and $x1665 $x1662)))
 (let ((?x1289 (left s___________)))
 (let (($x1667 ((_ is stack ) ?x1289)))
 (let (($x1668 (= c___________ left-to-right)))
 (let (($x1669 (and $x1668 $x1667)))
 (let (($x1700 (ite $x1669 $x1683 (ite $x1666 $x1683 (ite $x1664 $x1679 (ite $x1661 $x1680 (ite $x1659 $x1680 $x1683)))))))
 (let ((?x1507 (top ?x1289)))
 (let ((?x1646 (stack ?x1507 ?x1323)))
 (let (($x1675 (= ?x1461 ?x1646)))
 (let (($x1670 (= c___________ left-to-center)))
 (let (($x1671 (and $x1670 $x1667)))
 (ite $x1671 $x1675 $x1700)))))))))))))))))))))))))))))))
(assert
 (let ((?x1509 (center s___________)))
 (let ((?x1647 (center s____________)))
 (let (($x1685 (= ?x1647 ?x1509)))
 (let ((?x1323 (right s___________)))
 (let ((?x1654 (top ?x1323)))
 (let ((?x1656 (stack ?x1654 ?x1509)))
 (let (($x1682 (= ?x1647 ?x1656)))
 (let (($x1657 ((_ is stack ) ?x1323)))
 (let (($x1658 (= c___________ right-to-center)))
 (let (($x1659 (and $x1658 $x1657)))
 (let (($x1660 (= c___________ right-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1649 (rest ?x1509)))
 (let (($x1677 (= ?x1647 ?x1649)))
 (let (($x1662 ((_ is stack ) ?x1509)))
 (let (($x1663 (= c___________ center-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let (($x1665 (= c___________ center-to-left)))
 (let (($x1666 (and $x1665 $x1662)))
 (let ((?x1289 (left s___________)))
 (let ((?x1507 (top ?x1289)))
 (let ((?x1648 (stack ?x1507 ?x1509)))
 (let (($x1676 (= ?x1647 ?x1648)))
 (let (($x1667 ((_ is stack ) ?x1289)))
 (let (($x1668 (= c___________ left-to-right)))
 (let (($x1669 (and $x1668 $x1667)))
 (let (($x1699 (ite $x1669 $x1676 (ite $x1666 $x1677 (ite $x1664 $x1677 (ite $x1661 $x1685 (ite $x1659 $x1682 $x1685)))))))
 (let (($x1670 (= c___________ left-to-center)))
 (let (($x1671 (and $x1670 $x1667)))
 (ite $x1671 $x1685 $x1699)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1427 (left s____________)))
 (let ((?x1565 (left s_____________)))
 (let (($x1825 (= ?x1565 ?x1427)))
 (let ((?x1461 (right s____________)))
 (let ((?x1792 (top ?x1461)))
 (let ((?x1793 (stack ?x1792 ?x1427)))
 (let (($x1819 (= ?x1565 ?x1793)))
 (let (($x1795 ((_ is stack ) ?x1461)))
 (let (($x1798 (= c____________ right-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1647 (center s____________)))
 (let (($x1800 ((_ is stack ) ?x1647)))
 (let (($x1801 (= c____________ center-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let ((?x1788 (top ?x1647)))
 (let ((?x1789 (stack ?x1788 ?x1427)))
 (let (($x1816 (= ?x1565 ?x1789)))
 (let (($x1803 (= c____________ center-to-left)))
 (let (($x1804 (and $x1803 $x1800)))
 (let ((?x1598 (rest ?x1427)))
 (let (($x1812 (= ?x1565 ?x1598)))
 (let (($x1805 ((_ is stack ) ?x1427)))
 (let (($x1806 (= c____________ left-to-right)))
 (let (($x1807 (and $x1806 $x1805)))
 (let (($x1808 (= c____________ left-to-center)))
 (let (($x1809 (and $x1808 $x1805)))
 (ite $x1809 $x1812 (ite $x1807 $x1812 (ite $x1804 $x1816 (ite $x1802 $x1825 (ite $x1799 $x1819 $x1825))))))))))))))))))))))))))))))))
(assert
 (let ((?x1461 (right s____________)))
 (let ((?x1599 (right s_____________)))
 (let (($x1821 (= ?x1599 ?x1461)))
 (let ((?x1791 (rest ?x1461)))
 (let (($x1818 (= ?x1599 ?x1791)))
 (let (($x1795 ((_ is stack ) ?x1461)))
 (let (($x1796 (= c____________ right-to-center)))
 (let (($x1797 (and $x1796 $x1795)))
 (let (($x1798 (= c____________ right-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1647 (center s____________)))
 (let ((?x1788 (top ?x1647)))
 (let ((?x1790 (stack ?x1788 ?x1461)))
 (let (($x1817 (= ?x1599 ?x1790)))
 (let (($x1800 ((_ is stack ) ?x1647)))
 (let (($x1801 (= c____________ center-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let (($x1803 (= c____________ center-to-left)))
 (let (($x1804 (and $x1803 $x1800)))
 (let ((?x1427 (left s____________)))
 (let (($x1805 ((_ is stack ) ?x1427)))
 (let (($x1806 (= c____________ left-to-right)))
 (let (($x1807 (and $x1806 $x1805)))
 (let (($x1838 (ite $x1807 $x1821 (ite $x1804 $x1821 (ite $x1802 $x1817 (ite $x1799 $x1818 (ite $x1797 $x1818 $x1821)))))))
 (let ((?x1645 (top ?x1427)))
 (let ((?x1784 (stack ?x1645 ?x1461)))
 (let (($x1813 (= ?x1599 ?x1784)))
 (let (($x1808 (= c____________ left-to-center)))
 (let (($x1809 (and $x1808 $x1805)))
 (ite $x1809 $x1813 $x1838)))))))))))))))))))))))))))))))
(assert
 (let ((?x1647 (center s____________)))
 (let ((?x1785 (center s_____________)))
 (let (($x1823 (= ?x1785 ?x1647)))
 (let ((?x1461 (right s____________)))
 (let ((?x1792 (top ?x1461)))
 (let ((?x1794 (stack ?x1792 ?x1647)))
 (let (($x1820 (= ?x1785 ?x1794)))
 (let (($x1795 ((_ is stack ) ?x1461)))
 (let (($x1796 (= c____________ right-to-center)))
 (let (($x1797 (and $x1796 $x1795)))
 (let (($x1798 (= c____________ right-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1787 (rest ?x1647)))
 (let (($x1815 (= ?x1785 ?x1787)))
 (let (($x1800 ((_ is stack ) ?x1647)))
 (let (($x1801 (= c____________ center-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let (($x1803 (= c____________ center-to-left)))
 (let (($x1804 (and $x1803 $x1800)))
 (let ((?x1427 (left s____________)))
 (let ((?x1645 (top ?x1427)))
 (let ((?x1786 (stack ?x1645 ?x1647)))
 (let (($x1814 (= ?x1785 ?x1786)))
 (let (($x1805 ((_ is stack ) ?x1427)))
 (let (($x1806 (= c____________ left-to-right)))
 (let (($x1807 (and $x1806 $x1805)))
 (let (($x1837 (ite $x1807 $x1814 (ite $x1804 $x1815 (ite $x1802 $x1815 (ite $x1799 $x1823 (ite $x1797 $x1820 $x1823)))))))
 (let (($x1808 (= c____________ left-to-center)))
 (let (($x1809 (and $x1808 $x1805)))
 (ite $x1809 $x1823 $x1837)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1565 (left s_____________)))
 (let ((?x1703 (left s______________)))
 (let (($x1963 (= ?x1703 ?x1565)))
 (let ((?x1599 (right s_____________)))
 (let ((?x1930 (top ?x1599)))
 (let ((?x1931 (stack ?x1930 ?x1565)))
 (let (($x1957 (= ?x1703 ?x1931)))
 (let (($x1933 ((_ is stack ) ?x1599)))
 (let (($x1936 (= c_____________ right-to-left)))
 (let (($x1937 (and $x1936 $x1933)))
 (let ((?x1785 (center s_____________)))
 (let (($x1938 ((_ is stack ) ?x1785)))
 (let (($x1939 (= c_____________ center-to-right)))
 (let (($x1940 (and $x1939 $x1938)))
 (let ((?x1926 (top ?x1785)))
 (let ((?x1927 (stack ?x1926 ?x1565)))
 (let (($x1954 (= ?x1703 ?x1927)))
 (let (($x1941 (= c_____________ center-to-left)))
 (let (($x1942 (and $x1941 $x1938)))
 (let ((?x1736 (rest ?x1565)))
 (let (($x1950 (= ?x1703 ?x1736)))
 (let (($x1943 ((_ is stack ) ?x1565)))
 (let (($x1944 (= c_____________ left-to-right)))
 (let (($x1945 (and $x1944 $x1943)))
 (let (($x1946 (= c_____________ left-to-center)))
 (let (($x1947 (and $x1946 $x1943)))
 (ite $x1947 $x1950 (ite $x1945 $x1950 (ite $x1942 $x1954 (ite $x1940 $x1963 (ite $x1937 $x1957 $x1963))))))))))))))))))))))))))))))))
(assert
 (let ((?x1599 (right s_____________)))
 (let ((?x1737 (right s______________)))
 (let (($x1959 (= ?x1737 ?x1599)))
 (let ((?x1929 (rest ?x1599)))
 (let (($x1956 (= ?x1737 ?x1929)))
 (let (($x1933 ((_ is stack ) ?x1599)))
 (let (($x1934 (= c_____________ right-to-center)))
 (let (($x1935 (and $x1934 $x1933)))
 (let (($x1936 (= c_____________ right-to-left)))
 (let (($x1937 (and $x1936 $x1933)))
 (let ((?x1785 (center s_____________)))
 (let ((?x1926 (top ?x1785)))
 (let ((?x1928 (stack ?x1926 ?x1599)))
 (let (($x1955 (= ?x1737 ?x1928)))
 (let (($x1938 ((_ is stack ) ?x1785)))
 (let (($x1939 (= c_____________ center-to-right)))
 (let (($x1940 (and $x1939 $x1938)))
 (let (($x1941 (= c_____________ center-to-left)))
 (let (($x1942 (and $x1941 $x1938)))
 (let ((?x1565 (left s_____________)))
 (let (($x1943 ((_ is stack ) ?x1565)))
 (let (($x1944 (= c_____________ left-to-right)))
 (let (($x1945 (and $x1944 $x1943)))
 (let (($x1976 (ite $x1945 $x1959 (ite $x1942 $x1959 (ite $x1940 $x1955 (ite $x1937 $x1956 (ite $x1935 $x1956 $x1959)))))))
 (let ((?x1783 (top ?x1565)))
 (let ((?x1922 (stack ?x1783 ?x1599)))
 (let (($x1951 (= ?x1737 ?x1922)))
 (let (($x1946 (= c_____________ left-to-center)))
 (let (($x1947 (and $x1946 $x1943)))
 (ite $x1947 $x1951 $x1976)))))))))))))))))))))))))))))))
(assert
 (let ((?x1785 (center s_____________)))
 (let ((?x1923 (center s______________)))
 (let (($x1961 (= ?x1923 ?x1785)))
 (let ((?x1599 (right s_____________)))
 (let ((?x1930 (top ?x1599)))
 (let ((?x1932 (stack ?x1930 ?x1785)))
 (let (($x1958 (= ?x1923 ?x1932)))
 (let (($x1933 ((_ is stack ) ?x1599)))
 (let (($x1934 (= c_____________ right-to-center)))
 (let (($x1935 (and $x1934 $x1933)))
 (let (($x1936 (= c_____________ right-to-left)))
 (let (($x1937 (and $x1936 $x1933)))
 (let ((?x1925 (rest ?x1785)))
 (let (($x1953 (= ?x1923 ?x1925)))
 (let (($x1938 ((_ is stack ) ?x1785)))
 (let (($x1939 (= c_____________ center-to-right)))
 (let (($x1940 (and $x1939 $x1938)))
 (let (($x1941 (= c_____________ center-to-left)))
 (let (($x1942 (and $x1941 $x1938)))
 (let ((?x1565 (left s_____________)))
 (let ((?x1783 (top ?x1565)))
 (let ((?x1924 (stack ?x1783 ?x1785)))
 (let (($x1952 (= ?x1923 ?x1924)))
 (let (($x1943 ((_ is stack ) ?x1565)))
 (let (($x1944 (= c_____________ left-to-right)))
 (let (($x1945 (and $x1944 $x1943)))
 (let (($x1975 (ite $x1945 $x1952 (ite $x1942 $x1953 (ite $x1940 $x1953 (ite $x1937 $x1961 (ite $x1935 $x1958 $x1961)))))))
 (let (($x1946 (= c_____________ left-to-center)))
 (let (($x1947 (and $x1946 $x1943)))
 (ite $x1947 $x1961 $x1975)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1703 (left s______________)))
 (let ((?x1841 (left s_______________)))
 (let (($x2101 (= ?x1841 ?x1703)))
 (let ((?x1737 (right s______________)))
 (let ((?x2068 (top ?x1737)))
 (let ((?x2069 (stack ?x2068 ?x1703)))
 (let (($x2095 (= ?x1841 ?x2069)))
 (let (($x2071 ((_ is stack ) ?x1737)))
 (let (($x2074 (= c______________ right-to-left)))
 (let (($x2075 (and $x2074 $x2071)))
 (let ((?x1923 (center s______________)))
 (let (($x2076 ((_ is stack ) ?x1923)))
 (let (($x2077 (= c______________ center-to-right)))
 (let (($x2078 (and $x2077 $x2076)))
 (let ((?x2064 (top ?x1923)))
 (let ((?x2065 (stack ?x2064 ?x1703)))
 (let (($x2092 (= ?x1841 ?x2065)))
 (let (($x2079 (= c______________ center-to-left)))
 (let (($x2080 (and $x2079 $x2076)))
 (let ((?x1874 (rest ?x1703)))
 (let (($x2088 (= ?x1841 ?x1874)))
 (let (($x2081 ((_ is stack ) ?x1703)))
 (let (($x2082 (= c______________ left-to-right)))
 (let (($x2083 (and $x2082 $x2081)))
 (let (($x2084 (= c______________ left-to-center)))
 (let (($x2085 (and $x2084 $x2081)))
 (ite $x2085 $x2088 (ite $x2083 $x2088 (ite $x2080 $x2092 (ite $x2078 $x2101 (ite $x2075 $x2095 $x2101))))))))))))))))))))))))))))))))
(assert
 (let ((?x1737 (right s______________)))
 (let ((?x1875 (right s_______________)))
 (let (($x2097 (= ?x1875 ?x1737)))
 (let ((?x2067 (rest ?x1737)))
 (let (($x2094 (= ?x1875 ?x2067)))
 (let (($x2071 ((_ is stack ) ?x1737)))
 (let (($x2072 (= c______________ right-to-center)))
 (let (($x2073 (and $x2072 $x2071)))
 (let (($x2074 (= c______________ right-to-left)))
 (let (($x2075 (and $x2074 $x2071)))
 (let ((?x1923 (center s______________)))
 (let ((?x2064 (top ?x1923)))
 (let ((?x2066 (stack ?x2064 ?x1737)))
 (let (($x2093 (= ?x1875 ?x2066)))
 (let (($x2076 ((_ is stack ) ?x1923)))
 (let (($x2077 (= c______________ center-to-right)))
 (let (($x2078 (and $x2077 $x2076)))
 (let (($x2079 (= c______________ center-to-left)))
 (let (($x2080 (and $x2079 $x2076)))
 (let ((?x1703 (left s______________)))
 (let (($x2081 ((_ is stack ) ?x1703)))
 (let (($x2082 (= c______________ left-to-right)))
 (let (($x2083 (and $x2082 $x2081)))
 (let (($x2114 (ite $x2083 $x2097 (ite $x2080 $x2097 (ite $x2078 $x2093 (ite $x2075 $x2094 (ite $x2073 $x2094 $x2097)))))))
 (let ((?x1921 (top ?x1703)))
 (let ((?x2060 (stack ?x1921 ?x1737)))
 (let (($x2089 (= ?x1875 ?x2060)))
 (let (($x2084 (= c______________ left-to-center)))
 (let (($x2085 (and $x2084 $x2081)))
 (ite $x2085 $x2089 $x2114)))))))))))))))))))))))))))))))
(assert
 (let ((?x1923 (center s______________)))
 (let ((?x2061 (center s_______________)))
 (let (($x2099 (= ?x2061 ?x1923)))
 (let ((?x1737 (right s______________)))
 (let ((?x2068 (top ?x1737)))
 (let ((?x2070 (stack ?x2068 ?x1923)))
 (let (($x2096 (= ?x2061 ?x2070)))
 (let (($x2071 ((_ is stack ) ?x1737)))
 (let (($x2072 (= c______________ right-to-center)))
 (let (($x2073 (and $x2072 $x2071)))
 (let (($x2074 (= c______________ right-to-left)))
 (let (($x2075 (and $x2074 $x2071)))
 (let ((?x2063 (rest ?x1923)))
 (let (($x2091 (= ?x2061 ?x2063)))
 (let (($x2076 ((_ is stack ) ?x1923)))
 (let (($x2077 (= c______________ center-to-right)))
 (let (($x2078 (and $x2077 $x2076)))
 (let (($x2079 (= c______________ center-to-left)))
 (let (($x2080 (and $x2079 $x2076)))
 (let ((?x1703 (left s______________)))
 (let ((?x1921 (top ?x1703)))
 (let ((?x2062 (stack ?x1921 ?x1923)))
 (let (($x2090 (= ?x2061 ?x2062)))
 (let (($x2081 ((_ is stack ) ?x1703)))
 (let (($x2082 (= c______________ left-to-right)))
 (let (($x2083 (and $x2082 $x2081)))
 (let (($x2113 (ite $x2083 $x2090 (ite $x2080 $x2091 (ite $x2078 $x2091 (ite $x2075 $x2099 (ite $x2073 $x2096 $x2099)))))))
 (let (($x2084 (= c______________ left-to-center)))
 (let (($x2085 (and $x2084 $x2081)))
 (ite $x2085 $x2099 $x2113)))))))))))))))))))))))))))))))
(assert
 (let ((?x83 (stack U empty)))
 (let ((?x1875 (right s_______________)))
 (let (($x2117 (= ?x1875 ?x83)))
 (let ((?x82 (stack V empty)))
 (let ((?x2061 (center s_______________)))
 (let (($x2148 (= ?x2061 ?x82)))
 (let ((?x65 (stack D (stack I (stack K (stack E (stack N (stack P empty))))))))
 (let ((?x71 (stack G (stack S (stack M (stack T (stack J (stack R ?x65))))))))
 (let ((?x77 (stack B (stack O (stack H (stack F (stack L (stack Q ?x71))))))))
 (let ((?x81 (stack X (stack A (stack C (stack W ?x77))))))
 (let ((?x1841 (left s_______________)))
 (let (($x2149 (= ?x1841 ?x81)))
 (let (($x2151 (not (and $x2149 $x2148 $x2117))))
 (not $x2151)))))))))))))))
(check-sat)
(exit)
