(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x25 (stack L empty)))
 (let ((?x24 (stack J ?x25)))
 (let ((?x26 (stack G ?x24)))
 (let ((?x27 (stack B ?x26)))
 (let ((?x28 (stack I ?x27)))
 (let ((?x93 (left s_tmp_)))
 (= ?x93 ?x28))))))))
(assert
 (let ((?x29 (stack D empty)))
 (let ((?x30 (stack K ?x29)))
 (let ((?x96 (center s_tmp__)))
 (= ?x96 ?x30)))))
(assert
 (let ((?x31 (stack A empty)))
 (let ((?x32 (stack C ?x31)))
 (let ((?x33 (stack E ?x32)))
 (let ((?x34 (stack F ?x33)))
 (let ((?x35 (stack H ?x34)))
 (let ((?x99 (right s_tmp___)))
 (= ?x99 ?x35))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x126 (left s_tmp__)))
 (= (left s_tmp___) ?x126)))
(assert
 (let ((?x96 (center s_tmp__)))
 (= (center s_tmp___) ?x96)))
(assert
 (let ((?x130 (center s_tmp_)))
 (= ?x130 (center s_tmp))))
(assert
 (let ((?x133 (right s_tmp_)))
 (= ?x133 (right s_tmp))))
(assert
 (let ((?x93 (left s_tmp_)))
 (let ((?x126 (left s_tmp__)))
 (= ?x126 ?x93))))
(assert
 (let ((?x133 (right s_tmp_)))
 (let ((?x137 (right s_tmp__)))
 (= ?x137 ?x133))))
(assert
 (= c__ c!1))
(assert
 (let ((?x70 (left s_)))
 (let ((?x226 (left s__)))
 (let (($x262 (= ?x226 ?x70)))
 (let ((?x73 (right s_)))
 (let (($x229 ((_ is stack ) ?x73)))
 (let (($x223 (= c_ right-to-left)))
 (let (($x236 (and $x223 $x229)))
 (let ((?x75 (center s_)))
 (let (($x237 ((_ is stack ) ?x75)))
 (let (($x238 (= c_ center-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ center-to-left)))
 (let (($x241 (and $x240 $x237)))
 (let (($x271 (ite $x241 (= ?x226 (stack (top ?x75) ?x70)) (ite $x239 $x262 (ite $x236 (= ?x226 (stack (top ?x73) ?x70)) $x262)))))
 (let (($x249 (= ?x226 (rest ?x70))))
 (let (($x242 ((_ is stack ) ?x70)))
 (let (($x243 (= c_ left-to-right)))
 (let (($x244 (and $x243 $x242)))
 (let (($x245 (= c_ left-to-center)))
 (let (($x246 (and $x245 $x242)))
 (ite $x246 $x249 (ite $x244 $x249 $x271)))))))))))))))))))))))
(assert
 (let ((?x73 (right s_)))
 (let ((?x219 (right s__)))
 (let (($x258 (= ?x219 ?x73)))
 (let (($x255 (= ?x219 (rest ?x73))))
 (let (($x229 ((_ is stack ) ?x73)))
 (let (($x221 (= c_ right-to-center)))
 (let (($x222 (and $x221 $x229)))
 (let (($x223 (= c_ right-to-left)))
 (let (($x236 (and $x223 $x229)))
 (let ((?x75 (center s_)))
 (let (($x237 ((_ is stack ) ?x75)))
 (let (($x238 (= c_ center-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x268 (ite $x239 (= ?x219 (stack (top ?x75) ?x73)) (ite $x236 $x255 (ite $x222 $x255 $x258)))))
 (let (($x240 (= c_ center-to-left)))
 (let (($x241 (and $x240 $x237)))
 (let ((?x70 (left s_)))
 (let (($x242 ((_ is stack ) ?x70)))
 (let (($x243 (= c_ left-to-right)))
 (let (($x244 (and $x243 $x242)))
 (let (($x245 (= c_ left-to-center)))
 (let (($x246 (and $x245 $x242)))
 (ite $x246 (= ?x219 (stack (top ?x70) ?x73)) (ite $x244 $x258 (ite $x241 $x258 $x268))))))))))))))))))))))))))
(assert
 (let ((?x75 (center s_)))
 (let ((?x234 (center s__)))
 (let (($x260 (= ?x234 ?x75)))
 (let ((?x73 (right s_)))
 (let (($x229 ((_ is stack ) ?x73)))
 (let (($x221 (= c_ right-to-center)))
 (let (($x222 (and $x221 $x229)))
 (let (($x223 (= c_ right-to-left)))
 (let (($x236 (and $x223 $x229)))
 (let (($x252 (= ?x234 (rest ?x75))))
 (let (($x237 ((_ is stack ) ?x75)))
 (let (($x238 (= c_ center-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x267 (ite $x239 $x252 (ite $x236 $x260 (ite $x222 (= ?x234 (stack (top ?x73) ?x75)) $x260)))))
 (let (($x240 (= c_ center-to-left)))
 (let (($x241 (and $x240 $x237)))
 (let ((?x70 (left s_)))
 (let (($x242 ((_ is stack ) ?x70)))
 (let (($x243 (= c_ left-to-right)))
 (let (($x244 (and $x243 $x242)))
 (let (($x245 (= c_ left-to-center)))
 (let (($x246 (and $x245 $x242)))
 (ite $x246 $x260 (ite $x244 (= ?x234 (stack (top ?x70) ?x75)) (ite $x241 $x252 $x267))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x226 (left s__)))
 (let ((?x140 (left s___)))
 (let (($x391 (= ?x140 ?x226)))
 (let ((?x219 (right s__)))
 (let ((?x358 (top ?x219)))
 (let ((?x359 (stack ?x358 ?x226)))
 (let (($x385 (= ?x140 ?x359)))
 (let (($x361 ((_ is stack ) ?x219)))
 (let (($x364 (= c__ right-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x234 (center s__)))
 (let (($x366 ((_ is stack ) ?x234)))
 (let (($x367 (= c__ center-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let ((?x354 (top ?x234)))
 (let ((?x355 (stack ?x354 ?x226)))
 (let (($x382 (= ?x140 ?x355)))
 (let (($x369 (= c__ center-to-left)))
 (let (($x370 (and $x369 $x366)))
 (let ((?x142 (rest ?x226)))
 (let (($x378 (= ?x140 ?x142)))
 (let (($x371 ((_ is stack ) ?x226)))
 (let (($x372 (= c__ left-to-right)))
 (let (($x373 (and $x372 $x371)))
 (let (($x374 (= c__ left-to-center)))
 (let (($x375 (and $x374 $x371)))
 (ite $x375 $x378 (ite $x373 $x378 (ite $x370 $x382 (ite $x368 $x391 (ite $x365 $x385 $x391))))))))))))))))))))))))))))))))
(assert
 (let ((?x219 (right s__)))
 (let ((?x143 (right s___)))
 (let (($x387 (= ?x143 ?x219)))
 (let ((?x357 (rest ?x219)))
 (let (($x384 (= ?x143 ?x357)))
 (let (($x361 ((_ is stack ) ?x219)))
 (let (($x362 (= c__ right-to-center)))
 (let (($x363 (and $x362 $x361)))
 (let (($x364 (= c__ right-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x234 (center s__)))
 (let ((?x354 (top ?x234)))
 (let ((?x356 (stack ?x354 ?x219)))
 (let (($x383 (= ?x143 ?x356)))
 (let (($x366 ((_ is stack ) ?x234)))
 (let (($x367 (= c__ center-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let (($x369 (= c__ center-to-left)))
 (let (($x370 (and $x369 $x366)))
 (let ((?x226 (left s__)))
 (let (($x371 ((_ is stack ) ?x226)))
 (let (($x372 (= c__ left-to-right)))
 (let (($x373 (and $x372 $x371)))
 (let (($x404 (ite $x373 $x387 (ite $x370 $x387 (ite $x368 $x383 (ite $x365 $x384 (ite $x363 $x384 $x387)))))))
 (let ((?x214 (top ?x226)))
 (let ((?x350 (stack ?x214 ?x219)))
 (let (($x379 (= ?x143 ?x350)))
 (let (($x374 (= c__ left-to-center)))
 (let (($x375 (and $x374 $x371)))
 (ite $x375 $x379 $x404)))))))))))))))))))))))))))))))
(assert
 (let ((?x234 (center s__)))
 (let ((?x351 (center s___)))
 (let (($x389 (= ?x351 ?x234)))
 (let ((?x219 (right s__)))
 (let ((?x358 (top ?x219)))
 (let ((?x360 (stack ?x358 ?x234)))
 (let (($x386 (= ?x351 ?x360)))
 (let (($x361 ((_ is stack ) ?x219)))
 (let (($x362 (= c__ right-to-center)))
 (let (($x363 (and $x362 $x361)))
 (let (($x364 (= c__ right-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x353 (rest ?x234)))
 (let (($x381 (= ?x351 ?x353)))
 (let (($x366 ((_ is stack ) ?x234)))
 (let (($x367 (= c__ center-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let (($x369 (= c__ center-to-left)))
 (let (($x370 (and $x369 $x366)))
 (let ((?x226 (left s__)))
 (let ((?x214 (top ?x226)))
 (let ((?x352 (stack ?x214 ?x234)))
 (let (($x380 (= ?x351 ?x352)))
 (let (($x371 ((_ is stack ) ?x226)))
 (let (($x372 (= c__ left-to-right)))
 (let (($x373 (and $x372 $x371)))
 (let (($x403 (ite $x373 $x380 (ite $x370 $x381 (ite $x368 $x381 (ite $x365 $x389 (ite $x363 $x386 $x389)))))))
 (let (($x374 (= c__ left-to-center)))
 (let (($x375 (and $x374 $x371)))
 (ite $x375 $x389 $x403)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x140 (left s___)))
 (let ((?x278 (left s____)))
 (let (($x529 (= ?x278 ?x140)))
 (let ((?x143 (right s___)))
 (let ((?x496 (top ?x143)))
 (let ((?x497 (stack ?x496 ?x140)))
 (let (($x523 (= ?x278 ?x497)))
 (let (($x499 ((_ is stack ) ?x143)))
 (let (($x502 (= c___ right-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x351 (center s___)))
 (let (($x504 ((_ is stack ) ?x351)))
 (let (($x505 (= c___ center-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let ((?x492 (top ?x351)))
 (let ((?x493 (stack ?x492 ?x140)))
 (let (($x520 (= ?x278 ?x493)))
 (let (($x507 (= c___ center-to-left)))
 (let (($x508 (and $x507 $x504)))
 (let ((?x322 (rest ?x140)))
 (let (($x516 (= ?x278 ?x322)))
 (let (($x509 ((_ is stack ) ?x140)))
 (let (($x510 (= c___ left-to-right)))
 (let (($x511 (and $x510 $x509)))
 (let (($x512 (= c___ left-to-center)))
 (let (($x513 (and $x512 $x509)))
 (ite $x513 $x516 (ite $x511 $x516 (ite $x508 $x520 (ite $x506 $x529 (ite $x503 $x523 $x529))))))))))))))))))))))))))))))))
(assert
 (let ((?x143 (right s___)))
 (let ((?x323 (right s____)))
 (let (($x525 (= ?x323 ?x143)))
 (let ((?x495 (rest ?x143)))
 (let (($x522 (= ?x323 ?x495)))
 (let (($x499 ((_ is stack ) ?x143)))
 (let (($x500 (= c___ right-to-center)))
 (let (($x501 (and $x500 $x499)))
 (let (($x502 (= c___ right-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x351 (center s___)))
 (let ((?x492 (top ?x351)))
 (let ((?x494 (stack ?x492 ?x143)))
 (let (($x521 (= ?x323 ?x494)))
 (let (($x504 ((_ is stack ) ?x351)))
 (let (($x505 (= c___ center-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let (($x507 (= c___ center-to-left)))
 (let (($x508 (and $x507 $x504)))
 (let ((?x140 (left s___)))
 (let (($x509 ((_ is stack ) ?x140)))
 (let (($x510 (= c___ left-to-right)))
 (let (($x511 (and $x510 $x509)))
 (let (($x542 (ite $x511 $x525 (ite $x508 $x525 (ite $x506 $x521 (ite $x503 $x522 (ite $x501 $x522 $x525)))))))
 (let ((?x349 (top ?x140)))
 (let ((?x488 (stack ?x349 ?x143)))
 (let (($x517 (= ?x323 ?x488)))
 (let (($x512 (= c___ left-to-center)))
 (let (($x513 (and $x512 $x509)))
 (ite $x513 $x517 $x542)))))))))))))))))))))))))))))))
(assert
 (let ((?x351 (center s___)))
 (let ((?x489 (center s____)))
 (let (($x527 (= ?x489 ?x351)))
 (let ((?x143 (right s___)))
 (let ((?x496 (top ?x143)))
 (let ((?x498 (stack ?x496 ?x351)))
 (let (($x524 (= ?x489 ?x498)))
 (let (($x499 ((_ is stack ) ?x143)))
 (let (($x500 (= c___ right-to-center)))
 (let (($x501 (and $x500 $x499)))
 (let (($x502 (= c___ right-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x491 (rest ?x351)))
 (let (($x519 (= ?x489 ?x491)))
 (let (($x504 ((_ is stack ) ?x351)))
 (let (($x505 (= c___ center-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let (($x507 (= c___ center-to-left)))
 (let (($x508 (and $x507 $x504)))
 (let ((?x140 (left s___)))
 (let ((?x349 (top ?x140)))
 (let ((?x490 (stack ?x349 ?x351)))
 (let (($x518 (= ?x489 ?x490)))
 (let (($x509 ((_ is stack ) ?x140)))
 (let (($x510 (= c___ left-to-right)))
 (let (($x511 (and $x510 $x509)))
 (let (($x541 (ite $x511 $x518 (ite $x508 $x519 (ite $x506 $x519 (ite $x503 $x527 (ite $x501 $x524 $x527)))))))
 (let (($x512 (= c___ left-to-center)))
 (let (($x513 (and $x512 $x509)))
 (ite $x513 $x527 $x541)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x278 (left s____)))
 (let ((?x407 (left s_____)))
 (let (($x667 (= ?x407 ?x278)))
 (let ((?x323 (right s____)))
 (let ((?x634 (top ?x323)))
 (let ((?x635 (stack ?x634 ?x278)))
 (let (($x661 (= ?x407 ?x635)))
 (let (($x637 ((_ is stack ) ?x323)))
 (let (($x640 (= c____ right-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x489 (center s____)))
 (let (($x642 ((_ is stack ) ?x489)))
 (let (($x643 (= c____ center-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let ((?x630 (top ?x489)))
 (let ((?x631 (stack ?x630 ?x278)))
 (let (($x658 (= ?x407 ?x631)))
 (let (($x645 (= c____ center-to-left)))
 (let (($x646 (and $x645 $x642)))
 (let ((?x440 (rest ?x278)))
 (let (($x654 (= ?x407 ?x440)))
 (let (($x647 ((_ is stack ) ?x278)))
 (let (($x648 (= c____ left-to-right)))
 (let (($x649 (and $x648 $x647)))
 (let (($x650 (= c____ left-to-center)))
 (let (($x651 (and $x650 $x647)))
 (ite $x651 $x654 (ite $x649 $x654 (ite $x646 $x658 (ite $x644 $x667 (ite $x641 $x661 $x667))))))))))))))))))))))))))))))))
(assert
 (let ((?x323 (right s____)))
 (let ((?x441 (right s_____)))
 (let (($x663 (= ?x441 ?x323)))
 (let ((?x633 (rest ?x323)))
 (let (($x660 (= ?x441 ?x633)))
 (let (($x637 ((_ is stack ) ?x323)))
 (let (($x638 (= c____ right-to-center)))
 (let (($x639 (and $x638 $x637)))
 (let (($x640 (= c____ right-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x489 (center s____)))
 (let ((?x630 (top ?x489)))
 (let ((?x632 (stack ?x630 ?x323)))
 (let (($x659 (= ?x441 ?x632)))
 (let (($x642 ((_ is stack ) ?x489)))
 (let (($x643 (= c____ center-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let (($x645 (= c____ center-to-left)))
 (let (($x646 (and $x645 $x642)))
 (let ((?x278 (left s____)))
 (let (($x647 ((_ is stack ) ?x278)))
 (let (($x648 (= c____ left-to-right)))
 (let (($x649 (and $x648 $x647)))
 (let (($x680 (ite $x649 $x663 (ite $x646 $x663 (ite $x644 $x659 (ite $x641 $x660 (ite $x639 $x660 $x663)))))))
 (let ((?x487 (top ?x278)))
 (let ((?x626 (stack ?x487 ?x323)))
 (let (($x655 (= ?x441 ?x626)))
 (let (($x650 (= c____ left-to-center)))
 (let (($x651 (and $x650 $x647)))
 (ite $x651 $x655 $x680)))))))))))))))))))))))))))))))
(assert
 (let ((?x489 (center s____)))
 (let ((?x627 (center s_____)))
 (let (($x665 (= ?x627 ?x489)))
 (let ((?x323 (right s____)))
 (let ((?x634 (top ?x323)))
 (let ((?x636 (stack ?x634 ?x489)))
 (let (($x662 (= ?x627 ?x636)))
 (let (($x637 ((_ is stack ) ?x323)))
 (let (($x638 (= c____ right-to-center)))
 (let (($x639 (and $x638 $x637)))
 (let (($x640 (= c____ right-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x629 (rest ?x489)))
 (let (($x657 (= ?x627 ?x629)))
 (let (($x642 ((_ is stack ) ?x489)))
 (let (($x643 (= c____ center-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let (($x645 (= c____ center-to-left)))
 (let (($x646 (and $x645 $x642)))
 (let ((?x278 (left s____)))
 (let ((?x487 (top ?x278)))
 (let ((?x628 (stack ?x487 ?x489)))
 (let (($x656 (= ?x627 ?x628)))
 (let (($x647 ((_ is stack ) ?x278)))
 (let (($x648 (= c____ left-to-right)))
 (let (($x649 (and $x648 $x647)))
 (let (($x679 (ite $x649 $x656 (ite $x646 $x657 (ite $x644 $x657 (ite $x641 $x665 (ite $x639 $x662 $x665)))))))
 (let (($x650 (= c____ left-to-center)))
 (let (($x651 (and $x650 $x647)))
 (ite $x651 $x665 $x679)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x407 (left s_____)))
 (let ((?x545 (left s______)))
 (let (($x805 (= ?x545 ?x407)))
 (let ((?x441 (right s_____)))
 (let ((?x772 (top ?x441)))
 (let ((?x773 (stack ?x772 ?x407)))
 (let (($x799 (= ?x545 ?x773)))
 (let (($x775 ((_ is stack ) ?x441)))
 (let (($x778 (= c_____ right-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x627 (center s_____)))
 (let (($x780 ((_ is stack ) ?x627)))
 (let (($x781 (= c_____ center-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let ((?x768 (top ?x627)))
 (let ((?x769 (stack ?x768 ?x407)))
 (let (($x796 (= ?x545 ?x769)))
 (let (($x783 (= c_____ center-to-left)))
 (let (($x784 (and $x783 $x780)))
 (let ((?x578 (rest ?x407)))
 (let (($x792 (= ?x545 ?x578)))
 (let (($x785 ((_ is stack ) ?x407)))
 (let (($x786 (= c_____ left-to-right)))
 (let (($x787 (and $x786 $x785)))
 (let (($x788 (= c_____ left-to-center)))
 (let (($x789 (and $x788 $x785)))
 (ite $x789 $x792 (ite $x787 $x792 (ite $x784 $x796 (ite $x782 $x805 (ite $x779 $x799 $x805))))))))))))))))))))))))))))))))
(assert
 (let ((?x441 (right s_____)))
 (let ((?x579 (right s______)))
 (let (($x801 (= ?x579 ?x441)))
 (let ((?x771 (rest ?x441)))
 (let (($x798 (= ?x579 ?x771)))
 (let (($x775 ((_ is stack ) ?x441)))
 (let (($x776 (= c_____ right-to-center)))
 (let (($x777 (and $x776 $x775)))
 (let (($x778 (= c_____ right-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x627 (center s_____)))
 (let ((?x768 (top ?x627)))
 (let ((?x770 (stack ?x768 ?x441)))
 (let (($x797 (= ?x579 ?x770)))
 (let (($x780 ((_ is stack ) ?x627)))
 (let (($x781 (= c_____ center-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let (($x783 (= c_____ center-to-left)))
 (let (($x784 (and $x783 $x780)))
 (let ((?x407 (left s_____)))
 (let (($x785 ((_ is stack ) ?x407)))
 (let (($x786 (= c_____ left-to-right)))
 (let (($x787 (and $x786 $x785)))
 (let (($x818 (ite $x787 $x801 (ite $x784 $x801 (ite $x782 $x797 (ite $x779 $x798 (ite $x777 $x798 $x801)))))))
 (let ((?x625 (top ?x407)))
 (let ((?x764 (stack ?x625 ?x441)))
 (let (($x793 (= ?x579 ?x764)))
 (let (($x788 (= c_____ left-to-center)))
 (let (($x789 (and $x788 $x785)))
 (ite $x789 $x793 $x818)))))))))))))))))))))))))))))))
(assert
 (let ((?x627 (center s_____)))
 (let ((?x765 (center s______)))
 (let (($x803 (= ?x765 ?x627)))
 (let ((?x441 (right s_____)))
 (let ((?x772 (top ?x441)))
 (let ((?x774 (stack ?x772 ?x627)))
 (let (($x800 (= ?x765 ?x774)))
 (let (($x775 ((_ is stack ) ?x441)))
 (let (($x776 (= c_____ right-to-center)))
 (let (($x777 (and $x776 $x775)))
 (let (($x778 (= c_____ right-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x767 (rest ?x627)))
 (let (($x795 (= ?x765 ?x767)))
 (let (($x780 ((_ is stack ) ?x627)))
 (let (($x781 (= c_____ center-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let (($x783 (= c_____ center-to-left)))
 (let (($x784 (and $x783 $x780)))
 (let ((?x407 (left s_____)))
 (let ((?x625 (top ?x407)))
 (let ((?x766 (stack ?x625 ?x627)))
 (let (($x794 (= ?x765 ?x766)))
 (let (($x785 ((_ is stack ) ?x407)))
 (let (($x786 (= c_____ left-to-right)))
 (let (($x787 (and $x786 $x785)))
 (let (($x817 (ite $x787 $x794 (ite $x784 $x795 (ite $x782 $x795 (ite $x779 $x803 (ite $x777 $x800 $x803)))))))
 (let (($x788 (= c_____ left-to-center)))
 (let (($x789 (and $x788 $x785)))
 (ite $x789 $x803 $x817)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x545 (left s______)))
 (let ((?x683 (left s_______)))
 (let (($x943 (= ?x683 ?x545)))
 (let ((?x579 (right s______)))
 (let ((?x910 (top ?x579)))
 (let ((?x911 (stack ?x910 ?x545)))
 (let (($x937 (= ?x683 ?x911)))
 (let (($x913 ((_ is stack ) ?x579)))
 (let (($x916 (= c______ right-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x765 (center s______)))
 (let (($x918 ((_ is stack ) ?x765)))
 (let (($x919 (= c______ center-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let ((?x906 (top ?x765)))
 (let ((?x907 (stack ?x906 ?x545)))
 (let (($x934 (= ?x683 ?x907)))
 (let (($x921 (= c______ center-to-left)))
 (let (($x922 (and $x921 $x918)))
 (let ((?x716 (rest ?x545)))
 (let (($x930 (= ?x683 ?x716)))
 (let (($x923 ((_ is stack ) ?x545)))
 (let (($x924 (= c______ left-to-right)))
 (let (($x925 (and $x924 $x923)))
 (let (($x926 (= c______ left-to-center)))
 (let (($x927 (and $x926 $x923)))
 (ite $x927 $x930 (ite $x925 $x930 (ite $x922 $x934 (ite $x920 $x943 (ite $x917 $x937 $x943))))))))))))))))))))))))))))))))
(assert
 (let ((?x579 (right s______)))
 (let ((?x717 (right s_______)))
 (let (($x939 (= ?x717 ?x579)))
 (let ((?x909 (rest ?x579)))
 (let (($x936 (= ?x717 ?x909)))
 (let (($x913 ((_ is stack ) ?x579)))
 (let (($x914 (= c______ right-to-center)))
 (let (($x915 (and $x914 $x913)))
 (let (($x916 (= c______ right-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x765 (center s______)))
 (let ((?x906 (top ?x765)))
 (let ((?x908 (stack ?x906 ?x579)))
 (let (($x935 (= ?x717 ?x908)))
 (let (($x918 ((_ is stack ) ?x765)))
 (let (($x919 (= c______ center-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let (($x921 (= c______ center-to-left)))
 (let (($x922 (and $x921 $x918)))
 (let ((?x545 (left s______)))
 (let (($x923 ((_ is stack ) ?x545)))
 (let (($x924 (= c______ left-to-right)))
 (let (($x925 (and $x924 $x923)))
 (let (($x956 (ite $x925 $x939 (ite $x922 $x939 (ite $x920 $x935 (ite $x917 $x936 (ite $x915 $x936 $x939)))))))
 (let ((?x763 (top ?x545)))
 (let ((?x902 (stack ?x763 ?x579)))
 (let (($x931 (= ?x717 ?x902)))
 (let (($x926 (= c______ left-to-center)))
 (let (($x927 (and $x926 $x923)))
 (ite $x927 $x931 $x956)))))))))))))))))))))))))))))))
(assert
 (let ((?x765 (center s______)))
 (let ((?x903 (center s_______)))
 (let (($x941 (= ?x903 ?x765)))
 (let ((?x579 (right s______)))
 (let ((?x910 (top ?x579)))
 (let ((?x912 (stack ?x910 ?x765)))
 (let (($x938 (= ?x903 ?x912)))
 (let (($x913 ((_ is stack ) ?x579)))
 (let (($x914 (= c______ right-to-center)))
 (let (($x915 (and $x914 $x913)))
 (let (($x916 (= c______ right-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x905 (rest ?x765)))
 (let (($x933 (= ?x903 ?x905)))
 (let (($x918 ((_ is stack ) ?x765)))
 (let (($x919 (= c______ center-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let (($x921 (= c______ center-to-left)))
 (let (($x922 (and $x921 $x918)))
 (let ((?x545 (left s______)))
 (let ((?x763 (top ?x545)))
 (let ((?x904 (stack ?x763 ?x765)))
 (let (($x932 (= ?x903 ?x904)))
 (let (($x923 ((_ is stack ) ?x545)))
 (let (($x924 (= c______ left-to-right)))
 (let (($x925 (and $x924 $x923)))
 (let (($x955 (ite $x925 $x932 (ite $x922 $x933 (ite $x920 $x933 (ite $x917 $x941 (ite $x915 $x938 $x941)))))))
 (let (($x926 (= c______ left-to-center)))
 (let (($x927 (and $x926 $x923)))
 (ite $x927 $x941 $x955)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x683 (left s_______)))
 (let ((?x821 (left s________)))
 (let (($x1081 (= ?x821 ?x683)))
 (let ((?x717 (right s_______)))
 (let ((?x1048 (top ?x717)))
 (let ((?x1049 (stack ?x1048 ?x683)))
 (let (($x1075 (= ?x821 ?x1049)))
 (let (($x1051 ((_ is stack ) ?x717)))
 (let (($x1054 (= c_______ right-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x903 (center s_______)))
 (let (($x1056 ((_ is stack ) ?x903)))
 (let (($x1057 (= c_______ center-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let ((?x1044 (top ?x903)))
 (let ((?x1045 (stack ?x1044 ?x683)))
 (let (($x1072 (= ?x821 ?x1045)))
 (let (($x1059 (= c_______ center-to-left)))
 (let (($x1060 (and $x1059 $x1056)))
 (let ((?x854 (rest ?x683)))
 (let (($x1068 (= ?x821 ?x854)))
 (let (($x1061 ((_ is stack ) ?x683)))
 (let (($x1062 (= c_______ left-to-right)))
 (let (($x1063 (and $x1062 $x1061)))
 (let (($x1064 (= c_______ left-to-center)))
 (let (($x1065 (and $x1064 $x1061)))
 (ite $x1065 $x1068 (ite $x1063 $x1068 (ite $x1060 $x1072 (ite $x1058 $x1081 (ite $x1055 $x1075 $x1081))))))))))))))))))))))))))))))))
(assert
 (let ((?x717 (right s_______)))
 (let ((?x855 (right s________)))
 (let (($x1077 (= ?x855 ?x717)))
 (let ((?x1047 (rest ?x717)))
 (let (($x1074 (= ?x855 ?x1047)))
 (let (($x1051 ((_ is stack ) ?x717)))
 (let (($x1052 (= c_______ right-to-center)))
 (let (($x1053 (and $x1052 $x1051)))
 (let (($x1054 (= c_______ right-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x903 (center s_______)))
 (let ((?x1044 (top ?x903)))
 (let ((?x1046 (stack ?x1044 ?x717)))
 (let (($x1073 (= ?x855 ?x1046)))
 (let (($x1056 ((_ is stack ) ?x903)))
 (let (($x1057 (= c_______ center-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let (($x1059 (= c_______ center-to-left)))
 (let (($x1060 (and $x1059 $x1056)))
 (let ((?x683 (left s_______)))
 (let (($x1061 ((_ is stack ) ?x683)))
 (let (($x1062 (= c_______ left-to-right)))
 (let (($x1063 (and $x1062 $x1061)))
 (let (($x1094 (ite $x1063 $x1077 (ite $x1060 $x1077 (ite $x1058 $x1073 (ite $x1055 $x1074 (ite $x1053 $x1074 $x1077)))))))
 (let ((?x901 (top ?x683)))
 (let ((?x1040 (stack ?x901 ?x717)))
 (let (($x1069 (= ?x855 ?x1040)))
 (let (($x1064 (= c_______ left-to-center)))
 (let (($x1065 (and $x1064 $x1061)))
 (ite $x1065 $x1069 $x1094)))))))))))))))))))))))))))))))
(assert
 (let ((?x903 (center s_______)))
 (let ((?x1041 (center s________)))
 (let (($x1079 (= ?x1041 ?x903)))
 (let ((?x717 (right s_______)))
 (let ((?x1048 (top ?x717)))
 (let ((?x1050 (stack ?x1048 ?x903)))
 (let (($x1076 (= ?x1041 ?x1050)))
 (let (($x1051 ((_ is stack ) ?x717)))
 (let (($x1052 (= c_______ right-to-center)))
 (let (($x1053 (and $x1052 $x1051)))
 (let (($x1054 (= c_______ right-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x1043 (rest ?x903)))
 (let (($x1071 (= ?x1041 ?x1043)))
 (let (($x1056 ((_ is stack ) ?x903)))
 (let (($x1057 (= c_______ center-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let (($x1059 (= c_______ center-to-left)))
 (let (($x1060 (and $x1059 $x1056)))
 (let ((?x683 (left s_______)))
 (let ((?x901 (top ?x683)))
 (let ((?x1042 (stack ?x901 ?x903)))
 (let (($x1070 (= ?x1041 ?x1042)))
 (let (($x1061 ((_ is stack ) ?x683)))
 (let (($x1062 (= c_______ left-to-right)))
 (let (($x1063 (and $x1062 $x1061)))
 (let (($x1093 (ite $x1063 $x1070 (ite $x1060 $x1071 (ite $x1058 $x1071 (ite $x1055 $x1079 (ite $x1053 $x1076 $x1079)))))))
 (let (($x1064 (= c_______ left-to-center)))
 (let (($x1065 (and $x1064 $x1061)))
 (ite $x1065 $x1079 $x1093)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x821 (left s________)))
 (let ((?x959 (left s_________)))
 (let (($x1219 (= ?x959 ?x821)))
 (let ((?x855 (right s________)))
 (let ((?x1186 (top ?x855)))
 (let ((?x1187 (stack ?x1186 ?x821)))
 (let (($x1213 (= ?x959 ?x1187)))
 (let (($x1189 ((_ is stack ) ?x855)))
 (let (($x1192 (= c________ right-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x1041 (center s________)))
 (let (($x1194 ((_ is stack ) ?x1041)))
 (let (($x1195 (= c________ center-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let ((?x1182 (top ?x1041)))
 (let ((?x1183 (stack ?x1182 ?x821)))
 (let (($x1210 (= ?x959 ?x1183)))
 (let (($x1197 (= c________ center-to-left)))
 (let (($x1198 (and $x1197 $x1194)))
 (let ((?x992 (rest ?x821)))
 (let (($x1206 (= ?x959 ?x992)))
 (let (($x1199 ((_ is stack ) ?x821)))
 (let (($x1200 (= c________ left-to-right)))
 (let (($x1201 (and $x1200 $x1199)))
 (let (($x1202 (= c________ left-to-center)))
 (let (($x1203 (and $x1202 $x1199)))
 (ite $x1203 $x1206 (ite $x1201 $x1206 (ite $x1198 $x1210 (ite $x1196 $x1219 (ite $x1193 $x1213 $x1219))))))))))))))))))))))))))))))))
(assert
 (let ((?x855 (right s________)))
 (let ((?x993 (right s_________)))
 (let (($x1215 (= ?x993 ?x855)))
 (let ((?x1185 (rest ?x855)))
 (let (($x1212 (= ?x993 ?x1185)))
 (let (($x1189 ((_ is stack ) ?x855)))
 (let (($x1190 (= c________ right-to-center)))
 (let (($x1191 (and $x1190 $x1189)))
 (let (($x1192 (= c________ right-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x1041 (center s________)))
 (let ((?x1182 (top ?x1041)))
 (let ((?x1184 (stack ?x1182 ?x855)))
 (let (($x1211 (= ?x993 ?x1184)))
 (let (($x1194 ((_ is stack ) ?x1041)))
 (let (($x1195 (= c________ center-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let (($x1197 (= c________ center-to-left)))
 (let (($x1198 (and $x1197 $x1194)))
 (let ((?x821 (left s________)))
 (let (($x1199 ((_ is stack ) ?x821)))
 (let (($x1200 (= c________ left-to-right)))
 (let (($x1201 (and $x1200 $x1199)))
 (let (($x1232 (ite $x1201 $x1215 (ite $x1198 $x1215 (ite $x1196 $x1211 (ite $x1193 $x1212 (ite $x1191 $x1212 $x1215)))))))
 (let ((?x1039 (top ?x821)))
 (let ((?x1178 (stack ?x1039 ?x855)))
 (let (($x1207 (= ?x993 ?x1178)))
 (let (($x1202 (= c________ left-to-center)))
 (let (($x1203 (and $x1202 $x1199)))
 (ite $x1203 $x1207 $x1232)))))))))))))))))))))))))))))))
(assert
 (let ((?x1041 (center s________)))
 (let ((?x1179 (center s_________)))
 (let (($x1217 (= ?x1179 ?x1041)))
 (let ((?x855 (right s________)))
 (let ((?x1186 (top ?x855)))
 (let ((?x1188 (stack ?x1186 ?x1041)))
 (let (($x1214 (= ?x1179 ?x1188)))
 (let (($x1189 ((_ is stack ) ?x855)))
 (let (($x1190 (= c________ right-to-center)))
 (let (($x1191 (and $x1190 $x1189)))
 (let (($x1192 (= c________ right-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x1181 (rest ?x1041)))
 (let (($x1209 (= ?x1179 ?x1181)))
 (let (($x1194 ((_ is stack ) ?x1041)))
 (let (($x1195 (= c________ center-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let (($x1197 (= c________ center-to-left)))
 (let (($x1198 (and $x1197 $x1194)))
 (let ((?x821 (left s________)))
 (let ((?x1039 (top ?x821)))
 (let ((?x1180 (stack ?x1039 ?x1041)))
 (let (($x1208 (= ?x1179 ?x1180)))
 (let (($x1199 ((_ is stack ) ?x821)))
 (let (($x1200 (= c________ left-to-right)))
 (let (($x1201 (and $x1200 $x1199)))
 (let (($x1231 (ite $x1201 $x1208 (ite $x1198 $x1209 (ite $x1196 $x1209 (ite $x1193 $x1217 (ite $x1191 $x1214 $x1217)))))))
 (let (($x1202 (= c________ left-to-center)))
 (let (($x1203 (and $x1202 $x1199)))
 (ite $x1203 $x1217 $x1231)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x959 (left s_________)))
 (let ((?x1097 (left s__________)))
 (let (($x1357 (= ?x1097 ?x959)))
 (let ((?x993 (right s_________)))
 (let ((?x1324 (top ?x993)))
 (let ((?x1325 (stack ?x1324 ?x959)))
 (let (($x1351 (= ?x1097 ?x1325)))
 (let (($x1327 ((_ is stack ) ?x993)))
 (let (($x1330 (= c_________ right-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x1179 (center s_________)))
 (let (($x1332 ((_ is stack ) ?x1179)))
 (let (($x1333 (= c_________ center-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let ((?x1320 (top ?x1179)))
 (let ((?x1321 (stack ?x1320 ?x959)))
 (let (($x1348 (= ?x1097 ?x1321)))
 (let (($x1335 (= c_________ center-to-left)))
 (let (($x1336 (and $x1335 $x1332)))
 (let ((?x1130 (rest ?x959)))
 (let (($x1344 (= ?x1097 ?x1130)))
 (let (($x1337 ((_ is stack ) ?x959)))
 (let (($x1338 (= c_________ left-to-right)))
 (let (($x1339 (and $x1338 $x1337)))
 (let (($x1340 (= c_________ left-to-center)))
 (let (($x1341 (and $x1340 $x1337)))
 (ite $x1341 $x1344 (ite $x1339 $x1344 (ite $x1336 $x1348 (ite $x1334 $x1357 (ite $x1331 $x1351 $x1357))))))))))))))))))))))))))))))))
(assert
 (let ((?x993 (right s_________)))
 (let ((?x1131 (right s__________)))
 (let (($x1353 (= ?x1131 ?x993)))
 (let ((?x1323 (rest ?x993)))
 (let (($x1350 (= ?x1131 ?x1323)))
 (let (($x1327 ((_ is stack ) ?x993)))
 (let (($x1328 (= c_________ right-to-center)))
 (let (($x1329 (and $x1328 $x1327)))
 (let (($x1330 (= c_________ right-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x1179 (center s_________)))
 (let ((?x1320 (top ?x1179)))
 (let ((?x1322 (stack ?x1320 ?x993)))
 (let (($x1349 (= ?x1131 ?x1322)))
 (let (($x1332 ((_ is stack ) ?x1179)))
 (let (($x1333 (= c_________ center-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let (($x1335 (= c_________ center-to-left)))
 (let (($x1336 (and $x1335 $x1332)))
 (let ((?x959 (left s_________)))
 (let (($x1337 ((_ is stack ) ?x959)))
 (let (($x1338 (= c_________ left-to-right)))
 (let (($x1339 (and $x1338 $x1337)))
 (let (($x1370 (ite $x1339 $x1353 (ite $x1336 $x1353 (ite $x1334 $x1349 (ite $x1331 $x1350 (ite $x1329 $x1350 $x1353)))))))
 (let ((?x1177 (top ?x959)))
 (let ((?x1316 (stack ?x1177 ?x993)))
 (let (($x1345 (= ?x1131 ?x1316)))
 (let (($x1340 (= c_________ left-to-center)))
 (let (($x1341 (and $x1340 $x1337)))
 (ite $x1341 $x1345 $x1370)))))))))))))))))))))))))))))))
(assert
 (let ((?x1179 (center s_________)))
 (let ((?x1317 (center s__________)))
 (let (($x1355 (= ?x1317 ?x1179)))
 (let ((?x993 (right s_________)))
 (let ((?x1324 (top ?x993)))
 (let ((?x1326 (stack ?x1324 ?x1179)))
 (let (($x1352 (= ?x1317 ?x1326)))
 (let (($x1327 ((_ is stack ) ?x993)))
 (let (($x1328 (= c_________ right-to-center)))
 (let (($x1329 (and $x1328 $x1327)))
 (let (($x1330 (= c_________ right-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x1319 (rest ?x1179)))
 (let (($x1347 (= ?x1317 ?x1319)))
 (let (($x1332 ((_ is stack ) ?x1179)))
 (let (($x1333 (= c_________ center-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let (($x1335 (= c_________ center-to-left)))
 (let (($x1336 (and $x1335 $x1332)))
 (let ((?x959 (left s_________)))
 (let ((?x1177 (top ?x959)))
 (let ((?x1318 (stack ?x1177 ?x1179)))
 (let (($x1346 (= ?x1317 ?x1318)))
 (let (($x1337 ((_ is stack ) ?x959)))
 (let (($x1338 (= c_________ left-to-right)))
 (let (($x1339 (and $x1338 $x1337)))
 (let (($x1369 (ite $x1339 $x1346 (ite $x1336 $x1347 (ite $x1334 $x1347 (ite $x1331 $x1355 (ite $x1329 $x1352 $x1355)))))))
 (let (($x1340 (= c_________ left-to-center)))
 (let (($x1341 (and $x1340 $x1337)))
 (ite $x1341 $x1355 $x1369)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1097 (left s__________)))
 (let ((?x1235 (left s___________)))
 (let (($x1495 (= ?x1235 ?x1097)))
 (let ((?x1131 (right s__________)))
 (let ((?x1462 (top ?x1131)))
 (let ((?x1463 (stack ?x1462 ?x1097)))
 (let (($x1489 (= ?x1235 ?x1463)))
 (let (($x1465 ((_ is stack ) ?x1131)))
 (let (($x1468 (= c__________ right-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1317 (center s__________)))
 (let (($x1470 ((_ is stack ) ?x1317)))
 (let (($x1471 (= c__________ center-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let ((?x1458 (top ?x1317)))
 (let ((?x1459 (stack ?x1458 ?x1097)))
 (let (($x1486 (= ?x1235 ?x1459)))
 (let (($x1473 (= c__________ center-to-left)))
 (let (($x1474 (and $x1473 $x1470)))
 (let ((?x1268 (rest ?x1097)))
 (let (($x1482 (= ?x1235 ?x1268)))
 (let (($x1475 ((_ is stack ) ?x1097)))
 (let (($x1476 (= c__________ left-to-right)))
 (let (($x1477 (and $x1476 $x1475)))
 (let (($x1478 (= c__________ left-to-center)))
 (let (($x1479 (and $x1478 $x1475)))
 (ite $x1479 $x1482 (ite $x1477 $x1482 (ite $x1474 $x1486 (ite $x1472 $x1495 (ite $x1469 $x1489 $x1495))))))))))))))))))))))))))))))))
(assert
 (let ((?x1131 (right s__________)))
 (let ((?x1269 (right s___________)))
 (let (($x1491 (= ?x1269 ?x1131)))
 (let ((?x1461 (rest ?x1131)))
 (let (($x1488 (= ?x1269 ?x1461)))
 (let (($x1465 ((_ is stack ) ?x1131)))
 (let (($x1466 (= c__________ right-to-center)))
 (let (($x1467 (and $x1466 $x1465)))
 (let (($x1468 (= c__________ right-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1317 (center s__________)))
 (let ((?x1458 (top ?x1317)))
 (let ((?x1460 (stack ?x1458 ?x1131)))
 (let (($x1487 (= ?x1269 ?x1460)))
 (let (($x1470 ((_ is stack ) ?x1317)))
 (let (($x1471 (= c__________ center-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let (($x1473 (= c__________ center-to-left)))
 (let (($x1474 (and $x1473 $x1470)))
 (let ((?x1097 (left s__________)))
 (let (($x1475 ((_ is stack ) ?x1097)))
 (let (($x1476 (= c__________ left-to-right)))
 (let (($x1477 (and $x1476 $x1475)))
 (let (($x1508 (ite $x1477 $x1491 (ite $x1474 $x1491 (ite $x1472 $x1487 (ite $x1469 $x1488 (ite $x1467 $x1488 $x1491)))))))
 (let ((?x1315 (top ?x1097)))
 (let ((?x1454 (stack ?x1315 ?x1131)))
 (let (($x1483 (= ?x1269 ?x1454)))
 (let (($x1478 (= c__________ left-to-center)))
 (let (($x1479 (and $x1478 $x1475)))
 (ite $x1479 $x1483 $x1508)))))))))))))))))))))))))))))))
(assert
 (let ((?x1317 (center s__________)))
 (let ((?x1455 (center s___________)))
 (let (($x1493 (= ?x1455 ?x1317)))
 (let ((?x1131 (right s__________)))
 (let ((?x1462 (top ?x1131)))
 (let ((?x1464 (stack ?x1462 ?x1317)))
 (let (($x1490 (= ?x1455 ?x1464)))
 (let (($x1465 ((_ is stack ) ?x1131)))
 (let (($x1466 (= c__________ right-to-center)))
 (let (($x1467 (and $x1466 $x1465)))
 (let (($x1468 (= c__________ right-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1457 (rest ?x1317)))
 (let (($x1485 (= ?x1455 ?x1457)))
 (let (($x1470 ((_ is stack ) ?x1317)))
 (let (($x1471 (= c__________ center-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let (($x1473 (= c__________ center-to-left)))
 (let (($x1474 (and $x1473 $x1470)))
 (let ((?x1097 (left s__________)))
 (let ((?x1315 (top ?x1097)))
 (let ((?x1456 (stack ?x1315 ?x1317)))
 (let (($x1484 (= ?x1455 ?x1456)))
 (let (($x1475 ((_ is stack ) ?x1097)))
 (let (($x1476 (= c__________ left-to-right)))
 (let (($x1477 (and $x1476 $x1475)))
 (let (($x1507 (ite $x1477 $x1484 (ite $x1474 $x1485 (ite $x1472 $x1485 (ite $x1469 $x1493 (ite $x1467 $x1490 $x1493)))))))
 (let (($x1478 (= c__________ left-to-center)))
 (let (($x1479 (and $x1478 $x1475)))
 (ite $x1479 $x1493 $x1507)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1235 (left s___________)))
 (let ((?x1373 (left s____________)))
 (let (($x1633 (= ?x1373 ?x1235)))
 (let ((?x1269 (right s___________)))
 (let ((?x1600 (top ?x1269)))
 (let ((?x1601 (stack ?x1600 ?x1235)))
 (let (($x1627 (= ?x1373 ?x1601)))
 (let (($x1603 ((_ is stack ) ?x1269)))
 (let (($x1606 (= c___________ right-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1455 (center s___________)))
 (let (($x1608 ((_ is stack ) ?x1455)))
 (let (($x1609 (= c___________ center-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let ((?x1596 (top ?x1455)))
 (let ((?x1597 (stack ?x1596 ?x1235)))
 (let (($x1624 (= ?x1373 ?x1597)))
 (let (($x1611 (= c___________ center-to-left)))
 (let (($x1612 (and $x1611 $x1608)))
 (let ((?x1406 (rest ?x1235)))
 (let (($x1620 (= ?x1373 ?x1406)))
 (let (($x1613 ((_ is stack ) ?x1235)))
 (let (($x1614 (= c___________ left-to-right)))
 (let (($x1615 (and $x1614 $x1613)))
 (let (($x1616 (= c___________ left-to-center)))
 (let (($x1617 (and $x1616 $x1613)))
 (ite $x1617 $x1620 (ite $x1615 $x1620 (ite $x1612 $x1624 (ite $x1610 $x1633 (ite $x1607 $x1627 $x1633))))))))))))))))))))))))))))))))
(assert
 (let ((?x1269 (right s___________)))
 (let ((?x1407 (right s____________)))
 (let (($x1629 (= ?x1407 ?x1269)))
 (let ((?x1599 (rest ?x1269)))
 (let (($x1626 (= ?x1407 ?x1599)))
 (let (($x1603 ((_ is stack ) ?x1269)))
 (let (($x1604 (= c___________ right-to-center)))
 (let (($x1605 (and $x1604 $x1603)))
 (let (($x1606 (= c___________ right-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1455 (center s___________)))
 (let ((?x1596 (top ?x1455)))
 (let ((?x1598 (stack ?x1596 ?x1269)))
 (let (($x1625 (= ?x1407 ?x1598)))
 (let (($x1608 ((_ is stack ) ?x1455)))
 (let (($x1609 (= c___________ center-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let (($x1611 (= c___________ center-to-left)))
 (let (($x1612 (and $x1611 $x1608)))
 (let ((?x1235 (left s___________)))
 (let (($x1613 ((_ is stack ) ?x1235)))
 (let (($x1614 (= c___________ left-to-right)))
 (let (($x1615 (and $x1614 $x1613)))
 (let (($x1646 (ite $x1615 $x1629 (ite $x1612 $x1629 (ite $x1610 $x1625 (ite $x1607 $x1626 (ite $x1605 $x1626 $x1629)))))))
 (let ((?x1453 (top ?x1235)))
 (let ((?x1592 (stack ?x1453 ?x1269)))
 (let (($x1621 (= ?x1407 ?x1592)))
 (let (($x1616 (= c___________ left-to-center)))
 (let (($x1617 (and $x1616 $x1613)))
 (ite $x1617 $x1621 $x1646)))))))))))))))))))))))))))))))
(assert
 (let ((?x1455 (center s___________)))
 (let ((?x1593 (center s____________)))
 (let (($x1631 (= ?x1593 ?x1455)))
 (let ((?x1269 (right s___________)))
 (let ((?x1600 (top ?x1269)))
 (let ((?x1602 (stack ?x1600 ?x1455)))
 (let (($x1628 (= ?x1593 ?x1602)))
 (let (($x1603 ((_ is stack ) ?x1269)))
 (let (($x1604 (= c___________ right-to-center)))
 (let (($x1605 (and $x1604 $x1603)))
 (let (($x1606 (= c___________ right-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1595 (rest ?x1455)))
 (let (($x1623 (= ?x1593 ?x1595)))
 (let (($x1608 ((_ is stack ) ?x1455)))
 (let (($x1609 (= c___________ center-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let (($x1611 (= c___________ center-to-left)))
 (let (($x1612 (and $x1611 $x1608)))
 (let ((?x1235 (left s___________)))
 (let ((?x1453 (top ?x1235)))
 (let ((?x1594 (stack ?x1453 ?x1455)))
 (let (($x1622 (= ?x1593 ?x1594)))
 (let (($x1613 ((_ is stack ) ?x1235)))
 (let (($x1614 (= c___________ left-to-right)))
 (let (($x1615 (and $x1614 $x1613)))
 (let (($x1645 (ite $x1615 $x1622 (ite $x1612 $x1623 (ite $x1610 $x1623 (ite $x1607 $x1631 (ite $x1605 $x1628 $x1631)))))))
 (let (($x1616 (= c___________ left-to-center)))
 (let (($x1617 (and $x1616 $x1613)))
 (ite $x1617 $x1631 $x1645)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1373 (left s____________)))
 (let ((?x1511 (left s_____________)))
 (let (($x1771 (= ?x1511 ?x1373)))
 (let ((?x1407 (right s____________)))
 (let ((?x1738 (top ?x1407)))
 (let ((?x1739 (stack ?x1738 ?x1373)))
 (let (($x1765 (= ?x1511 ?x1739)))
 (let (($x1741 ((_ is stack ) ?x1407)))
 (let (($x1744 (= c____________ right-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1593 (center s____________)))
 (let (($x1746 ((_ is stack ) ?x1593)))
 (let (($x1747 (= c____________ center-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let ((?x1734 (top ?x1593)))
 (let ((?x1735 (stack ?x1734 ?x1373)))
 (let (($x1762 (= ?x1511 ?x1735)))
 (let (($x1749 (= c____________ center-to-left)))
 (let (($x1750 (and $x1749 $x1746)))
 (let ((?x1544 (rest ?x1373)))
 (let (($x1758 (= ?x1511 ?x1544)))
 (let (($x1751 ((_ is stack ) ?x1373)))
 (let (($x1752 (= c____________ left-to-right)))
 (let (($x1753 (and $x1752 $x1751)))
 (let (($x1754 (= c____________ left-to-center)))
 (let (($x1755 (and $x1754 $x1751)))
 (ite $x1755 $x1758 (ite $x1753 $x1758 (ite $x1750 $x1762 (ite $x1748 $x1771 (ite $x1745 $x1765 $x1771))))))))))))))))))))))))))))))))
(assert
 (let ((?x1407 (right s____________)))
 (let ((?x1545 (right s_____________)))
 (let (($x1767 (= ?x1545 ?x1407)))
 (let ((?x1737 (rest ?x1407)))
 (let (($x1764 (= ?x1545 ?x1737)))
 (let (($x1741 ((_ is stack ) ?x1407)))
 (let (($x1742 (= c____________ right-to-center)))
 (let (($x1743 (and $x1742 $x1741)))
 (let (($x1744 (= c____________ right-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1593 (center s____________)))
 (let ((?x1734 (top ?x1593)))
 (let ((?x1736 (stack ?x1734 ?x1407)))
 (let (($x1763 (= ?x1545 ?x1736)))
 (let (($x1746 ((_ is stack ) ?x1593)))
 (let (($x1747 (= c____________ center-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let (($x1749 (= c____________ center-to-left)))
 (let (($x1750 (and $x1749 $x1746)))
 (let ((?x1373 (left s____________)))
 (let (($x1751 ((_ is stack ) ?x1373)))
 (let (($x1752 (= c____________ left-to-right)))
 (let (($x1753 (and $x1752 $x1751)))
 (let (($x1784 (ite $x1753 $x1767 (ite $x1750 $x1767 (ite $x1748 $x1763 (ite $x1745 $x1764 (ite $x1743 $x1764 $x1767)))))))
 (let ((?x1591 (top ?x1373)))
 (let ((?x1730 (stack ?x1591 ?x1407)))
 (let (($x1759 (= ?x1545 ?x1730)))
 (let (($x1754 (= c____________ left-to-center)))
 (let (($x1755 (and $x1754 $x1751)))
 (ite $x1755 $x1759 $x1784)))))))))))))))))))))))))))))))
(assert
 (let ((?x1593 (center s____________)))
 (let ((?x1731 (center s_____________)))
 (let (($x1769 (= ?x1731 ?x1593)))
 (let ((?x1407 (right s____________)))
 (let ((?x1738 (top ?x1407)))
 (let ((?x1740 (stack ?x1738 ?x1593)))
 (let (($x1766 (= ?x1731 ?x1740)))
 (let (($x1741 ((_ is stack ) ?x1407)))
 (let (($x1742 (= c____________ right-to-center)))
 (let (($x1743 (and $x1742 $x1741)))
 (let (($x1744 (= c____________ right-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1733 (rest ?x1593)))
 (let (($x1761 (= ?x1731 ?x1733)))
 (let (($x1746 ((_ is stack ) ?x1593)))
 (let (($x1747 (= c____________ center-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let (($x1749 (= c____________ center-to-left)))
 (let (($x1750 (and $x1749 $x1746)))
 (let ((?x1373 (left s____________)))
 (let ((?x1591 (top ?x1373)))
 (let ((?x1732 (stack ?x1591 ?x1593)))
 (let (($x1760 (= ?x1731 ?x1732)))
 (let (($x1751 ((_ is stack ) ?x1373)))
 (let (($x1752 (= c____________ left-to-right)))
 (let (($x1753 (and $x1752 $x1751)))
 (let (($x1783 (ite $x1753 $x1760 (ite $x1750 $x1761 (ite $x1748 $x1761 (ite $x1745 $x1769 (ite $x1743 $x1766 $x1769)))))))
 (let (($x1754 (= c____________ left-to-center)))
 (let (($x1755 (and $x1754 $x1751)))
 (ite $x1755 $x1769 $x1783)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1511 (left s_____________)))
 (let ((?x1649 (left s______________)))
 (let (($x1909 (= ?x1649 ?x1511)))
 (let ((?x1545 (right s_____________)))
 (let ((?x1876 (top ?x1545)))
 (let ((?x1877 (stack ?x1876 ?x1511)))
 (let (($x1903 (= ?x1649 ?x1877)))
 (let (($x1879 ((_ is stack ) ?x1545)))
 (let (($x1882 (= c_____________ right-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1731 (center s_____________)))
 (let (($x1884 ((_ is stack ) ?x1731)))
 (let (($x1885 (= c_____________ center-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let ((?x1872 (top ?x1731)))
 (let ((?x1873 (stack ?x1872 ?x1511)))
 (let (($x1900 (= ?x1649 ?x1873)))
 (let (($x1887 (= c_____________ center-to-left)))
 (let (($x1888 (and $x1887 $x1884)))
 (let ((?x1682 (rest ?x1511)))
 (let (($x1896 (= ?x1649 ?x1682)))
 (let (($x1889 ((_ is stack ) ?x1511)))
 (let (($x1890 (= c_____________ left-to-right)))
 (let (($x1891 (and $x1890 $x1889)))
 (let (($x1892 (= c_____________ left-to-center)))
 (let (($x1893 (and $x1892 $x1889)))
 (ite $x1893 $x1896 (ite $x1891 $x1896 (ite $x1888 $x1900 (ite $x1886 $x1909 (ite $x1883 $x1903 $x1909))))))))))))))))))))))))))))))))
(assert
 (let ((?x1545 (right s_____________)))
 (let ((?x1683 (right s______________)))
 (let (($x1905 (= ?x1683 ?x1545)))
 (let ((?x1875 (rest ?x1545)))
 (let (($x1902 (= ?x1683 ?x1875)))
 (let (($x1879 ((_ is stack ) ?x1545)))
 (let (($x1880 (= c_____________ right-to-center)))
 (let (($x1881 (and $x1880 $x1879)))
 (let (($x1882 (= c_____________ right-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1731 (center s_____________)))
 (let ((?x1872 (top ?x1731)))
 (let ((?x1874 (stack ?x1872 ?x1545)))
 (let (($x1901 (= ?x1683 ?x1874)))
 (let (($x1884 ((_ is stack ) ?x1731)))
 (let (($x1885 (= c_____________ center-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let (($x1887 (= c_____________ center-to-left)))
 (let (($x1888 (and $x1887 $x1884)))
 (let ((?x1511 (left s_____________)))
 (let (($x1889 ((_ is stack ) ?x1511)))
 (let (($x1890 (= c_____________ left-to-right)))
 (let (($x1891 (and $x1890 $x1889)))
 (let (($x1922 (ite $x1891 $x1905 (ite $x1888 $x1905 (ite $x1886 $x1901 (ite $x1883 $x1902 (ite $x1881 $x1902 $x1905)))))))
 (let ((?x1729 (top ?x1511)))
 (let ((?x1868 (stack ?x1729 ?x1545)))
 (let (($x1897 (= ?x1683 ?x1868)))
 (let (($x1892 (= c_____________ left-to-center)))
 (let (($x1893 (and $x1892 $x1889)))
 (ite $x1893 $x1897 $x1922)))))))))))))))))))))))))))))))
(assert
 (let ((?x1731 (center s_____________)))
 (let ((?x1869 (center s______________)))
 (let (($x1907 (= ?x1869 ?x1731)))
 (let ((?x1545 (right s_____________)))
 (let ((?x1876 (top ?x1545)))
 (let ((?x1878 (stack ?x1876 ?x1731)))
 (let (($x1904 (= ?x1869 ?x1878)))
 (let (($x1879 ((_ is stack ) ?x1545)))
 (let (($x1880 (= c_____________ right-to-center)))
 (let (($x1881 (and $x1880 $x1879)))
 (let (($x1882 (= c_____________ right-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1871 (rest ?x1731)))
 (let (($x1899 (= ?x1869 ?x1871)))
 (let (($x1884 ((_ is stack ) ?x1731)))
 (let (($x1885 (= c_____________ center-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let (($x1887 (= c_____________ center-to-left)))
 (let (($x1888 (and $x1887 $x1884)))
 (let ((?x1511 (left s_____________)))
 (let ((?x1729 (top ?x1511)))
 (let ((?x1870 (stack ?x1729 ?x1731)))
 (let (($x1898 (= ?x1869 ?x1870)))
 (let (($x1889 ((_ is stack ) ?x1511)))
 (let (($x1890 (= c_____________ left-to-right)))
 (let (($x1891 (and $x1890 $x1889)))
 (let (($x1921 (ite $x1891 $x1898 (ite $x1888 $x1899 (ite $x1886 $x1899 (ite $x1883 $x1907 (ite $x1881 $x1904 $x1907)))))))
 (let (($x1892 (= c_____________ left-to-center)))
 (let (($x1893 (and $x1892 $x1889)))
 (ite $x1893 $x1907 $x1921)))))))))))))))))))))))))))))))
(assert
 (let ((?x46 (stack G empty)))
 (let ((?x1683 (right s______________)))
 (let (($x1925 (= ?x1683 ?x46)))
 (let ((?x31 (stack A empty)))
 (let ((?x1869 (center s______________)))
 (let (($x1956 (= ?x1869 ?x31)))
 (let ((?x41 (stack C (stack F (stack K (stack L (stack J (stack H empty))))))))
 (let ((?x45 (stack E (stack B (stack D (stack I ?x41))))))
 (let ((?x1649 (left s______________)))
 (let (($x1957 (= ?x1649 ?x45)))
 (let (($x1959 (not (and $x1957 $x1956 $x1925))))
 (not $x1959)))))))))))))
(check-sat)
(exit)
