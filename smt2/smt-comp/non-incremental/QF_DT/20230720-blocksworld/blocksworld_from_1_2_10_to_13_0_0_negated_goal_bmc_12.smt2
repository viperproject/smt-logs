(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x25 (stack B empty)))
 (let ((?x96 (left s_tmp_)))
 (= ?x96 ?x25))))
(assert
 (let ((?x26 (stack G empty)))
 (let ((?x27 (stack M ?x26)))
 (let ((?x99 (center s_tmp__)))
 (= ?x99 ?x27)))))
(assert
 (let ((?x28 (stack A empty)))
 (let ((?x29 (stack C ?x28)))
 (let ((?x30 (stack D ?x29)))
 (let ((?x31 (stack E ?x30)))
 (let ((?x32 (stack F ?x31)))
 (let ((?x33 (stack H ?x32)))
 (let ((?x34 (stack I ?x33)))
 (let ((?x35 (stack J ?x34)))
 (let ((?x36 (stack K ?x35)))
 (let ((?x37 (stack L ?x36)))
 (let ((?x102 (right s_tmp___)))
 (= ?x102 ?x37)))))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x129 (left s_tmp__)))
 (= (left s_tmp___) ?x129)))
(assert
 (let ((?x99 (center s_tmp__)))
 (= (center s_tmp___) ?x99)))
(assert
 (let ((?x133 (center s_tmp_)))
 (= ?x133 (center s_tmp))))
(assert
 (let ((?x136 (right s_tmp_)))
 (= ?x136 (right s_tmp))))
(assert
 (let ((?x96 (left s_tmp_)))
 (let ((?x129 (left s_tmp__)))
 (= ?x129 ?x96))))
(assert
 (let ((?x136 (right s_tmp_)))
 (let ((?x140 (right s_tmp__)))
 (= ?x140 ?x136))))
(assert
 (= c__ c!1))
(assert
 (let ((?x73 (left s_)))
 (let ((?x223 (left s__)))
 (let (($x268 (= ?x223 ?x73)))
 (let ((?x76 (right s_)))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x241 (= c_ right-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let ((?x78 (center s_)))
 (let (($x243 ((_ is stack ) ?x78)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let (($x277 (ite $x247 (= ?x223 (stack (top ?x78) ?x73)) (ite $x245 $x268 (ite $x242 (= ?x223 (stack (top ?x76) ?x73)) $x268)))))
 (let (($x255 (= ?x223 (rest ?x73))))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 $x255 (ite $x250 $x255 $x277)))))))))))))))))))))))
(assert
 (let ((?x76 (right s_)))
 (let ((?x225 (right s__)))
 (let (($x264 (= ?x225 ?x76)))
 (let (($x261 (= ?x225 (rest ?x76))))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x239 (= c_ right-to-center)))
 (let (($x240 (and $x239 $x238)))
 (let (($x241 (= c_ right-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let ((?x78 (center s_)))
 (let (($x243 ((_ is stack ) ?x78)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x274 (ite $x245 (= ?x225 (stack (top ?x78) ?x76)) (ite $x242 $x261 (ite $x240 $x261 $x264)))))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let ((?x73 (left s_)))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 (= ?x225 (stack (top ?x73) ?x76)) (ite $x250 $x264 (ite $x247 $x264 $x274))))))))))))))))))))))))))
(assert
 (let ((?x78 (center s_)))
 (let ((?x228 (center s__)))
 (let (($x266 (= ?x228 ?x78)))
 (let ((?x76 (right s_)))
 (let (($x238 ((_ is stack ) ?x76)))
 (let (($x239 (= c_ right-to-center)))
 (let (($x240 (and $x239 $x238)))
 (let (($x241 (= c_ right-to-left)))
 (let (($x242 (and $x241 $x238)))
 (let (($x258 (= ?x228 (rest ?x78))))
 (let (($x243 ((_ is stack ) ?x78)))
 (let (($x244 (= c_ center-to-right)))
 (let (($x245 (and $x244 $x243)))
 (let (($x273 (ite $x245 $x258 (ite $x242 $x266 (ite $x240 (= ?x228 (stack (top ?x76) ?x78)) $x266)))))
 (let (($x246 (= c_ center-to-left)))
 (let (($x247 (and $x246 $x243)))
 (let ((?x73 (left s_)))
 (let (($x248 ((_ is stack ) ?x73)))
 (let (($x249 (= c_ left-to-right)))
 (let (($x250 (and $x249 $x248)))
 (let (($x251 (= c_ left-to-center)))
 (let (($x252 (and $x251 $x248)))
 (ite $x252 $x266 (ite $x250 (= ?x228 (stack (top ?x73) ?x78)) (ite $x247 $x258 $x273))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x223 (left s__)))
 (let ((?x143 (left s___)))
 (let (($x397 (= ?x143 ?x223)))
 (let ((?x225 (right s__)))
 (let ((?x364 (top ?x225)))
 (let ((?x365 (stack ?x364 ?x223)))
 (let (($x391 (= ?x143 ?x365)))
 (let (($x367 ((_ is stack ) ?x225)))
 (let (($x370 (= c__ right-to-left)))
 (let (($x371 (and $x370 $x367)))
 (let ((?x228 (center s__)))
 (let (($x372 ((_ is stack ) ?x228)))
 (let (($x373 (= c__ center-to-right)))
 (let (($x374 (and $x373 $x372)))
 (let ((?x360 (top ?x228)))
 (let ((?x361 (stack ?x360 ?x223)))
 (let (($x388 (= ?x143 ?x361)))
 (let (($x375 (= c__ center-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x145 (rest ?x223)))
 (let (($x384 (= ?x143 ?x145)))
 (let (($x377 ((_ is stack ) ?x223)))
 (let (($x378 (= c__ left-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x380 (= c__ left-to-center)))
 (let (($x381 (and $x380 $x377)))
 (ite $x381 $x384 (ite $x379 $x384 (ite $x376 $x388 (ite $x374 $x397 (ite $x371 $x391 $x397))))))))))))))))))))))))))))))))
(assert
 (let ((?x225 (right s__)))
 (let ((?x146 (right s___)))
 (let (($x393 (= ?x146 ?x225)))
 (let ((?x363 (rest ?x225)))
 (let (($x390 (= ?x146 ?x363)))
 (let (($x367 ((_ is stack ) ?x225)))
 (let (($x368 (= c__ right-to-center)))
 (let (($x369 (and $x368 $x367)))
 (let (($x370 (= c__ right-to-left)))
 (let (($x371 (and $x370 $x367)))
 (let ((?x228 (center s__)))
 (let ((?x360 (top ?x228)))
 (let ((?x362 (stack ?x360 ?x225)))
 (let (($x389 (= ?x146 ?x362)))
 (let (($x372 ((_ is stack ) ?x228)))
 (let (($x373 (= c__ center-to-right)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ center-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x223 (left s__)))
 (let (($x377 ((_ is stack ) ?x223)))
 (let (($x378 (= c__ left-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x410 (ite $x379 $x393 (ite $x376 $x393 (ite $x374 $x389 (ite $x371 $x390 (ite $x369 $x390 $x393)))))))
 (let ((?x220 (top ?x223)))
 (let ((?x356 (stack ?x220 ?x225)))
 (let (($x385 (= ?x146 ?x356)))
 (let (($x380 (= c__ left-to-center)))
 (let (($x381 (and $x380 $x377)))
 (ite $x381 $x385 $x410)))))))))))))))))))))))))))))))
(assert
 (let ((?x228 (center s__)))
 (let ((?x357 (center s___)))
 (let (($x395 (= ?x357 ?x228)))
 (let ((?x225 (right s__)))
 (let ((?x364 (top ?x225)))
 (let ((?x366 (stack ?x364 ?x228)))
 (let (($x392 (= ?x357 ?x366)))
 (let (($x367 ((_ is stack ) ?x225)))
 (let (($x368 (= c__ right-to-center)))
 (let (($x369 (and $x368 $x367)))
 (let (($x370 (= c__ right-to-left)))
 (let (($x371 (and $x370 $x367)))
 (let ((?x359 (rest ?x228)))
 (let (($x387 (= ?x357 ?x359)))
 (let (($x372 ((_ is stack ) ?x228)))
 (let (($x373 (= c__ center-to-right)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ center-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x223 (left s__)))
 (let ((?x220 (top ?x223)))
 (let ((?x358 (stack ?x220 ?x228)))
 (let (($x386 (= ?x357 ?x358)))
 (let (($x377 ((_ is stack ) ?x223)))
 (let (($x378 (= c__ left-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x409 (ite $x379 $x386 (ite $x376 $x387 (ite $x374 $x387 (ite $x371 $x395 (ite $x369 $x392 $x395)))))))
 (let (($x380 (= c__ left-to-center)))
 (let (($x381 (and $x380 $x377)))
 (ite $x381 $x395 $x409)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x143 (left s___)))
 (let ((?x284 (left s____)))
 (let (($x535 (= ?x284 ?x143)))
 (let ((?x146 (right s___)))
 (let ((?x502 (top ?x146)))
 (let ((?x503 (stack ?x502 ?x143)))
 (let (($x529 (= ?x284 ?x503)))
 (let (($x505 ((_ is stack ) ?x146)))
 (let (($x508 (= c___ right-to-left)))
 (let (($x509 (and $x508 $x505)))
 (let ((?x357 (center s___)))
 (let (($x510 ((_ is stack ) ?x357)))
 (let (($x511 (= c___ center-to-right)))
 (let (($x512 (and $x511 $x510)))
 (let ((?x498 (top ?x357)))
 (let ((?x499 (stack ?x498 ?x143)))
 (let (($x526 (= ?x284 ?x499)))
 (let (($x513 (= c___ center-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x328 (rest ?x143)))
 (let (($x522 (= ?x284 ?x328)))
 (let (($x515 ((_ is stack ) ?x143)))
 (let (($x516 (= c___ left-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x518 (= c___ left-to-center)))
 (let (($x519 (and $x518 $x515)))
 (ite $x519 $x522 (ite $x517 $x522 (ite $x514 $x526 (ite $x512 $x535 (ite $x509 $x529 $x535))))))))))))))))))))))))))))))))
(assert
 (let ((?x146 (right s___)))
 (let ((?x329 (right s____)))
 (let (($x531 (= ?x329 ?x146)))
 (let ((?x501 (rest ?x146)))
 (let (($x528 (= ?x329 ?x501)))
 (let (($x505 ((_ is stack ) ?x146)))
 (let (($x506 (= c___ right-to-center)))
 (let (($x507 (and $x506 $x505)))
 (let (($x508 (= c___ right-to-left)))
 (let (($x509 (and $x508 $x505)))
 (let ((?x357 (center s___)))
 (let ((?x498 (top ?x357)))
 (let ((?x500 (stack ?x498 ?x146)))
 (let (($x527 (= ?x329 ?x500)))
 (let (($x510 ((_ is stack ) ?x357)))
 (let (($x511 (= c___ center-to-right)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ center-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x143 (left s___)))
 (let (($x515 ((_ is stack ) ?x143)))
 (let (($x516 (= c___ left-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x548 (ite $x517 $x531 (ite $x514 $x531 (ite $x512 $x527 (ite $x509 $x528 (ite $x507 $x528 $x531)))))))
 (let ((?x355 (top ?x143)))
 (let ((?x494 (stack ?x355 ?x146)))
 (let (($x523 (= ?x329 ?x494)))
 (let (($x518 (= c___ left-to-center)))
 (let (($x519 (and $x518 $x515)))
 (ite $x519 $x523 $x548)))))))))))))))))))))))))))))))
(assert
 (let ((?x357 (center s___)))
 (let ((?x495 (center s____)))
 (let (($x533 (= ?x495 ?x357)))
 (let ((?x146 (right s___)))
 (let ((?x502 (top ?x146)))
 (let ((?x504 (stack ?x502 ?x357)))
 (let (($x530 (= ?x495 ?x504)))
 (let (($x505 ((_ is stack ) ?x146)))
 (let (($x506 (= c___ right-to-center)))
 (let (($x507 (and $x506 $x505)))
 (let (($x508 (= c___ right-to-left)))
 (let (($x509 (and $x508 $x505)))
 (let ((?x497 (rest ?x357)))
 (let (($x525 (= ?x495 ?x497)))
 (let (($x510 ((_ is stack ) ?x357)))
 (let (($x511 (= c___ center-to-right)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ center-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x143 (left s___)))
 (let ((?x355 (top ?x143)))
 (let ((?x496 (stack ?x355 ?x357)))
 (let (($x524 (= ?x495 ?x496)))
 (let (($x515 ((_ is stack ) ?x143)))
 (let (($x516 (= c___ left-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x547 (ite $x517 $x524 (ite $x514 $x525 (ite $x512 $x525 (ite $x509 $x533 (ite $x507 $x530 $x533)))))))
 (let (($x518 (= c___ left-to-center)))
 (let (($x519 (and $x518 $x515)))
 (ite $x519 $x533 $x547)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x284 (left s____)))
 (let ((?x413 (left s_____)))
 (let (($x673 (= ?x413 ?x284)))
 (let ((?x329 (right s____)))
 (let ((?x640 (top ?x329)))
 (let ((?x641 (stack ?x640 ?x284)))
 (let (($x667 (= ?x413 ?x641)))
 (let (($x643 ((_ is stack ) ?x329)))
 (let (($x646 (= c____ right-to-left)))
 (let (($x647 (and $x646 $x643)))
 (let ((?x495 (center s____)))
 (let (($x648 ((_ is stack ) ?x495)))
 (let (($x649 (= c____ center-to-right)))
 (let (($x650 (and $x649 $x648)))
 (let ((?x636 (top ?x495)))
 (let ((?x637 (stack ?x636 ?x284)))
 (let (($x664 (= ?x413 ?x637)))
 (let (($x651 (= c____ center-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x446 (rest ?x284)))
 (let (($x660 (= ?x413 ?x446)))
 (let (($x653 ((_ is stack ) ?x284)))
 (let (($x654 (= c____ left-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x656 (= c____ left-to-center)))
 (let (($x657 (and $x656 $x653)))
 (ite $x657 $x660 (ite $x655 $x660 (ite $x652 $x664 (ite $x650 $x673 (ite $x647 $x667 $x673))))))))))))))))))))))))))))))))
(assert
 (let ((?x329 (right s____)))
 (let ((?x447 (right s_____)))
 (let (($x669 (= ?x447 ?x329)))
 (let ((?x639 (rest ?x329)))
 (let (($x666 (= ?x447 ?x639)))
 (let (($x643 ((_ is stack ) ?x329)))
 (let (($x644 (= c____ right-to-center)))
 (let (($x645 (and $x644 $x643)))
 (let (($x646 (= c____ right-to-left)))
 (let (($x647 (and $x646 $x643)))
 (let ((?x495 (center s____)))
 (let ((?x636 (top ?x495)))
 (let ((?x638 (stack ?x636 ?x329)))
 (let (($x665 (= ?x447 ?x638)))
 (let (($x648 ((_ is stack ) ?x495)))
 (let (($x649 (= c____ center-to-right)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ center-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x284 (left s____)))
 (let (($x653 ((_ is stack ) ?x284)))
 (let (($x654 (= c____ left-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x686 (ite $x655 $x669 (ite $x652 $x669 (ite $x650 $x665 (ite $x647 $x666 (ite $x645 $x666 $x669)))))))
 (let ((?x493 (top ?x284)))
 (let ((?x632 (stack ?x493 ?x329)))
 (let (($x661 (= ?x447 ?x632)))
 (let (($x656 (= c____ left-to-center)))
 (let (($x657 (and $x656 $x653)))
 (ite $x657 $x661 $x686)))))))))))))))))))))))))))))))
(assert
 (let ((?x495 (center s____)))
 (let ((?x633 (center s_____)))
 (let (($x671 (= ?x633 ?x495)))
 (let ((?x329 (right s____)))
 (let ((?x640 (top ?x329)))
 (let ((?x642 (stack ?x640 ?x495)))
 (let (($x668 (= ?x633 ?x642)))
 (let (($x643 ((_ is stack ) ?x329)))
 (let (($x644 (= c____ right-to-center)))
 (let (($x645 (and $x644 $x643)))
 (let (($x646 (= c____ right-to-left)))
 (let (($x647 (and $x646 $x643)))
 (let ((?x635 (rest ?x495)))
 (let (($x663 (= ?x633 ?x635)))
 (let (($x648 ((_ is stack ) ?x495)))
 (let (($x649 (= c____ center-to-right)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ center-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x284 (left s____)))
 (let ((?x493 (top ?x284)))
 (let ((?x634 (stack ?x493 ?x495)))
 (let (($x662 (= ?x633 ?x634)))
 (let (($x653 ((_ is stack ) ?x284)))
 (let (($x654 (= c____ left-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x685 (ite $x655 $x662 (ite $x652 $x663 (ite $x650 $x663 (ite $x647 $x671 (ite $x645 $x668 $x671)))))))
 (let (($x656 (= c____ left-to-center)))
 (let (($x657 (and $x656 $x653)))
 (ite $x657 $x671 $x685)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x413 (left s_____)))
 (let ((?x551 (left s______)))
 (let (($x811 (= ?x551 ?x413)))
 (let ((?x447 (right s_____)))
 (let ((?x778 (top ?x447)))
 (let ((?x779 (stack ?x778 ?x413)))
 (let (($x805 (= ?x551 ?x779)))
 (let (($x781 ((_ is stack ) ?x447)))
 (let (($x784 (= c_____ right-to-left)))
 (let (($x785 (and $x784 $x781)))
 (let ((?x633 (center s_____)))
 (let (($x786 ((_ is stack ) ?x633)))
 (let (($x787 (= c_____ center-to-right)))
 (let (($x788 (and $x787 $x786)))
 (let ((?x774 (top ?x633)))
 (let ((?x775 (stack ?x774 ?x413)))
 (let (($x802 (= ?x551 ?x775)))
 (let (($x789 (= c_____ center-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x584 (rest ?x413)))
 (let (($x798 (= ?x551 ?x584)))
 (let (($x791 ((_ is stack ) ?x413)))
 (let (($x792 (= c_____ left-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x794 (= c_____ left-to-center)))
 (let (($x795 (and $x794 $x791)))
 (ite $x795 $x798 (ite $x793 $x798 (ite $x790 $x802 (ite $x788 $x811 (ite $x785 $x805 $x811))))))))))))))))))))))))))))))))
(assert
 (let ((?x447 (right s_____)))
 (let ((?x585 (right s______)))
 (let (($x807 (= ?x585 ?x447)))
 (let ((?x777 (rest ?x447)))
 (let (($x804 (= ?x585 ?x777)))
 (let (($x781 ((_ is stack ) ?x447)))
 (let (($x782 (= c_____ right-to-center)))
 (let (($x783 (and $x782 $x781)))
 (let (($x784 (= c_____ right-to-left)))
 (let (($x785 (and $x784 $x781)))
 (let ((?x633 (center s_____)))
 (let ((?x774 (top ?x633)))
 (let ((?x776 (stack ?x774 ?x447)))
 (let (($x803 (= ?x585 ?x776)))
 (let (($x786 ((_ is stack ) ?x633)))
 (let (($x787 (= c_____ center-to-right)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ center-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x413 (left s_____)))
 (let (($x791 ((_ is stack ) ?x413)))
 (let (($x792 (= c_____ left-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x824 (ite $x793 $x807 (ite $x790 $x807 (ite $x788 $x803 (ite $x785 $x804 (ite $x783 $x804 $x807)))))))
 (let ((?x631 (top ?x413)))
 (let ((?x770 (stack ?x631 ?x447)))
 (let (($x799 (= ?x585 ?x770)))
 (let (($x794 (= c_____ left-to-center)))
 (let (($x795 (and $x794 $x791)))
 (ite $x795 $x799 $x824)))))))))))))))))))))))))))))))
(assert
 (let ((?x633 (center s_____)))
 (let ((?x771 (center s______)))
 (let (($x809 (= ?x771 ?x633)))
 (let ((?x447 (right s_____)))
 (let ((?x778 (top ?x447)))
 (let ((?x780 (stack ?x778 ?x633)))
 (let (($x806 (= ?x771 ?x780)))
 (let (($x781 ((_ is stack ) ?x447)))
 (let (($x782 (= c_____ right-to-center)))
 (let (($x783 (and $x782 $x781)))
 (let (($x784 (= c_____ right-to-left)))
 (let (($x785 (and $x784 $x781)))
 (let ((?x773 (rest ?x633)))
 (let (($x801 (= ?x771 ?x773)))
 (let (($x786 ((_ is stack ) ?x633)))
 (let (($x787 (= c_____ center-to-right)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ center-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x413 (left s_____)))
 (let ((?x631 (top ?x413)))
 (let ((?x772 (stack ?x631 ?x633)))
 (let (($x800 (= ?x771 ?x772)))
 (let (($x791 ((_ is stack ) ?x413)))
 (let (($x792 (= c_____ left-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x823 (ite $x793 $x800 (ite $x790 $x801 (ite $x788 $x801 (ite $x785 $x809 (ite $x783 $x806 $x809)))))))
 (let (($x794 (= c_____ left-to-center)))
 (let (($x795 (and $x794 $x791)))
 (ite $x795 $x809 $x823)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x551 (left s______)))
 (let ((?x689 (left s_______)))
 (let (($x949 (= ?x689 ?x551)))
 (let ((?x585 (right s______)))
 (let ((?x916 (top ?x585)))
 (let ((?x917 (stack ?x916 ?x551)))
 (let (($x943 (= ?x689 ?x917)))
 (let (($x919 ((_ is stack ) ?x585)))
 (let (($x922 (= c______ right-to-left)))
 (let (($x923 (and $x922 $x919)))
 (let ((?x771 (center s______)))
 (let (($x924 ((_ is stack ) ?x771)))
 (let (($x925 (= c______ center-to-right)))
 (let (($x926 (and $x925 $x924)))
 (let ((?x912 (top ?x771)))
 (let ((?x913 (stack ?x912 ?x551)))
 (let (($x940 (= ?x689 ?x913)))
 (let (($x927 (= c______ center-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x722 (rest ?x551)))
 (let (($x936 (= ?x689 ?x722)))
 (let (($x929 ((_ is stack ) ?x551)))
 (let (($x930 (= c______ left-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x932 (= c______ left-to-center)))
 (let (($x933 (and $x932 $x929)))
 (ite $x933 $x936 (ite $x931 $x936 (ite $x928 $x940 (ite $x926 $x949 (ite $x923 $x943 $x949))))))))))))))))))))))))))))))))
(assert
 (let ((?x585 (right s______)))
 (let ((?x723 (right s_______)))
 (let (($x945 (= ?x723 ?x585)))
 (let ((?x915 (rest ?x585)))
 (let (($x942 (= ?x723 ?x915)))
 (let (($x919 ((_ is stack ) ?x585)))
 (let (($x920 (= c______ right-to-center)))
 (let (($x921 (and $x920 $x919)))
 (let (($x922 (= c______ right-to-left)))
 (let (($x923 (and $x922 $x919)))
 (let ((?x771 (center s______)))
 (let ((?x912 (top ?x771)))
 (let ((?x914 (stack ?x912 ?x585)))
 (let (($x941 (= ?x723 ?x914)))
 (let (($x924 ((_ is stack ) ?x771)))
 (let (($x925 (= c______ center-to-right)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ center-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x551 (left s______)))
 (let (($x929 ((_ is stack ) ?x551)))
 (let (($x930 (= c______ left-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x962 (ite $x931 $x945 (ite $x928 $x945 (ite $x926 $x941 (ite $x923 $x942 (ite $x921 $x942 $x945)))))))
 (let ((?x769 (top ?x551)))
 (let ((?x908 (stack ?x769 ?x585)))
 (let (($x937 (= ?x723 ?x908)))
 (let (($x932 (= c______ left-to-center)))
 (let (($x933 (and $x932 $x929)))
 (ite $x933 $x937 $x962)))))))))))))))))))))))))))))))
(assert
 (let ((?x771 (center s______)))
 (let ((?x909 (center s_______)))
 (let (($x947 (= ?x909 ?x771)))
 (let ((?x585 (right s______)))
 (let ((?x916 (top ?x585)))
 (let ((?x918 (stack ?x916 ?x771)))
 (let (($x944 (= ?x909 ?x918)))
 (let (($x919 ((_ is stack ) ?x585)))
 (let (($x920 (= c______ right-to-center)))
 (let (($x921 (and $x920 $x919)))
 (let (($x922 (= c______ right-to-left)))
 (let (($x923 (and $x922 $x919)))
 (let ((?x911 (rest ?x771)))
 (let (($x939 (= ?x909 ?x911)))
 (let (($x924 ((_ is stack ) ?x771)))
 (let (($x925 (= c______ center-to-right)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ center-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x551 (left s______)))
 (let ((?x769 (top ?x551)))
 (let ((?x910 (stack ?x769 ?x771)))
 (let (($x938 (= ?x909 ?x910)))
 (let (($x929 ((_ is stack ) ?x551)))
 (let (($x930 (= c______ left-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x961 (ite $x931 $x938 (ite $x928 $x939 (ite $x926 $x939 (ite $x923 $x947 (ite $x921 $x944 $x947)))))))
 (let (($x932 (= c______ left-to-center)))
 (let (($x933 (and $x932 $x929)))
 (ite $x933 $x947 $x961)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x689 (left s_______)))
 (let ((?x827 (left s________)))
 (let (($x1087 (= ?x827 ?x689)))
 (let ((?x723 (right s_______)))
 (let ((?x1054 (top ?x723)))
 (let ((?x1055 (stack ?x1054 ?x689)))
 (let (($x1081 (= ?x827 ?x1055)))
 (let (($x1057 ((_ is stack ) ?x723)))
 (let (($x1060 (= c_______ right-to-left)))
 (let (($x1061 (and $x1060 $x1057)))
 (let ((?x909 (center s_______)))
 (let (($x1062 ((_ is stack ) ?x909)))
 (let (($x1063 (= c_______ center-to-right)))
 (let (($x1064 (and $x1063 $x1062)))
 (let ((?x1050 (top ?x909)))
 (let ((?x1051 (stack ?x1050 ?x689)))
 (let (($x1078 (= ?x827 ?x1051)))
 (let (($x1065 (= c_______ center-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x860 (rest ?x689)))
 (let (($x1074 (= ?x827 ?x860)))
 (let (($x1067 ((_ is stack ) ?x689)))
 (let (($x1068 (= c_______ left-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1070 (= c_______ left-to-center)))
 (let (($x1071 (and $x1070 $x1067)))
 (ite $x1071 $x1074 (ite $x1069 $x1074 (ite $x1066 $x1078 (ite $x1064 $x1087 (ite $x1061 $x1081 $x1087))))))))))))))))))))))))))))))))
(assert
 (let ((?x723 (right s_______)))
 (let ((?x861 (right s________)))
 (let (($x1083 (= ?x861 ?x723)))
 (let ((?x1053 (rest ?x723)))
 (let (($x1080 (= ?x861 ?x1053)))
 (let (($x1057 ((_ is stack ) ?x723)))
 (let (($x1058 (= c_______ right-to-center)))
 (let (($x1059 (and $x1058 $x1057)))
 (let (($x1060 (= c_______ right-to-left)))
 (let (($x1061 (and $x1060 $x1057)))
 (let ((?x909 (center s_______)))
 (let ((?x1050 (top ?x909)))
 (let ((?x1052 (stack ?x1050 ?x723)))
 (let (($x1079 (= ?x861 ?x1052)))
 (let (($x1062 ((_ is stack ) ?x909)))
 (let (($x1063 (= c_______ center-to-right)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ center-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x689 (left s_______)))
 (let (($x1067 ((_ is stack ) ?x689)))
 (let (($x1068 (= c_______ left-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1100 (ite $x1069 $x1083 (ite $x1066 $x1083 (ite $x1064 $x1079 (ite $x1061 $x1080 (ite $x1059 $x1080 $x1083)))))))
 (let ((?x907 (top ?x689)))
 (let ((?x1046 (stack ?x907 ?x723)))
 (let (($x1075 (= ?x861 ?x1046)))
 (let (($x1070 (= c_______ left-to-center)))
 (let (($x1071 (and $x1070 $x1067)))
 (ite $x1071 $x1075 $x1100)))))))))))))))))))))))))))))))
(assert
 (let ((?x909 (center s_______)))
 (let ((?x1047 (center s________)))
 (let (($x1085 (= ?x1047 ?x909)))
 (let ((?x723 (right s_______)))
 (let ((?x1054 (top ?x723)))
 (let ((?x1056 (stack ?x1054 ?x909)))
 (let (($x1082 (= ?x1047 ?x1056)))
 (let (($x1057 ((_ is stack ) ?x723)))
 (let (($x1058 (= c_______ right-to-center)))
 (let (($x1059 (and $x1058 $x1057)))
 (let (($x1060 (= c_______ right-to-left)))
 (let (($x1061 (and $x1060 $x1057)))
 (let ((?x1049 (rest ?x909)))
 (let (($x1077 (= ?x1047 ?x1049)))
 (let (($x1062 ((_ is stack ) ?x909)))
 (let (($x1063 (= c_______ center-to-right)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ center-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x689 (left s_______)))
 (let ((?x907 (top ?x689)))
 (let ((?x1048 (stack ?x907 ?x909)))
 (let (($x1076 (= ?x1047 ?x1048)))
 (let (($x1067 ((_ is stack ) ?x689)))
 (let (($x1068 (= c_______ left-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1099 (ite $x1069 $x1076 (ite $x1066 $x1077 (ite $x1064 $x1077 (ite $x1061 $x1085 (ite $x1059 $x1082 $x1085)))))))
 (let (($x1070 (= c_______ left-to-center)))
 (let (($x1071 (and $x1070 $x1067)))
 (ite $x1071 $x1085 $x1099)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x827 (left s________)))
 (let ((?x965 (left s_________)))
 (let (($x1225 (= ?x965 ?x827)))
 (let ((?x861 (right s________)))
 (let ((?x1192 (top ?x861)))
 (let ((?x1193 (stack ?x1192 ?x827)))
 (let (($x1219 (= ?x965 ?x1193)))
 (let (($x1195 ((_ is stack ) ?x861)))
 (let (($x1198 (= c________ right-to-left)))
 (let (($x1199 (and $x1198 $x1195)))
 (let ((?x1047 (center s________)))
 (let (($x1200 ((_ is stack ) ?x1047)))
 (let (($x1201 (= c________ center-to-right)))
 (let (($x1202 (and $x1201 $x1200)))
 (let ((?x1188 (top ?x1047)))
 (let ((?x1189 (stack ?x1188 ?x827)))
 (let (($x1216 (= ?x965 ?x1189)))
 (let (($x1203 (= c________ center-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x998 (rest ?x827)))
 (let (($x1212 (= ?x965 ?x998)))
 (let (($x1205 ((_ is stack ) ?x827)))
 (let (($x1206 (= c________ left-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1208 (= c________ left-to-center)))
 (let (($x1209 (and $x1208 $x1205)))
 (ite $x1209 $x1212 (ite $x1207 $x1212 (ite $x1204 $x1216 (ite $x1202 $x1225 (ite $x1199 $x1219 $x1225))))))))))))))))))))))))))))))))
(assert
 (let ((?x861 (right s________)))
 (let ((?x999 (right s_________)))
 (let (($x1221 (= ?x999 ?x861)))
 (let ((?x1191 (rest ?x861)))
 (let (($x1218 (= ?x999 ?x1191)))
 (let (($x1195 ((_ is stack ) ?x861)))
 (let (($x1196 (= c________ right-to-center)))
 (let (($x1197 (and $x1196 $x1195)))
 (let (($x1198 (= c________ right-to-left)))
 (let (($x1199 (and $x1198 $x1195)))
 (let ((?x1047 (center s________)))
 (let ((?x1188 (top ?x1047)))
 (let ((?x1190 (stack ?x1188 ?x861)))
 (let (($x1217 (= ?x999 ?x1190)))
 (let (($x1200 ((_ is stack ) ?x1047)))
 (let (($x1201 (= c________ center-to-right)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ center-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x827 (left s________)))
 (let (($x1205 ((_ is stack ) ?x827)))
 (let (($x1206 (= c________ left-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1238 (ite $x1207 $x1221 (ite $x1204 $x1221 (ite $x1202 $x1217 (ite $x1199 $x1218 (ite $x1197 $x1218 $x1221)))))))
 (let ((?x1045 (top ?x827)))
 (let ((?x1184 (stack ?x1045 ?x861)))
 (let (($x1213 (= ?x999 ?x1184)))
 (let (($x1208 (= c________ left-to-center)))
 (let (($x1209 (and $x1208 $x1205)))
 (ite $x1209 $x1213 $x1238)))))))))))))))))))))))))))))))
(assert
 (let ((?x1047 (center s________)))
 (let ((?x1185 (center s_________)))
 (let (($x1223 (= ?x1185 ?x1047)))
 (let ((?x861 (right s________)))
 (let ((?x1192 (top ?x861)))
 (let ((?x1194 (stack ?x1192 ?x1047)))
 (let (($x1220 (= ?x1185 ?x1194)))
 (let (($x1195 ((_ is stack ) ?x861)))
 (let (($x1196 (= c________ right-to-center)))
 (let (($x1197 (and $x1196 $x1195)))
 (let (($x1198 (= c________ right-to-left)))
 (let (($x1199 (and $x1198 $x1195)))
 (let ((?x1187 (rest ?x1047)))
 (let (($x1215 (= ?x1185 ?x1187)))
 (let (($x1200 ((_ is stack ) ?x1047)))
 (let (($x1201 (= c________ center-to-right)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ center-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x827 (left s________)))
 (let ((?x1045 (top ?x827)))
 (let ((?x1186 (stack ?x1045 ?x1047)))
 (let (($x1214 (= ?x1185 ?x1186)))
 (let (($x1205 ((_ is stack ) ?x827)))
 (let (($x1206 (= c________ left-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1237 (ite $x1207 $x1214 (ite $x1204 $x1215 (ite $x1202 $x1215 (ite $x1199 $x1223 (ite $x1197 $x1220 $x1223)))))))
 (let (($x1208 (= c________ left-to-center)))
 (let (($x1209 (and $x1208 $x1205)))
 (ite $x1209 $x1223 $x1237)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x965 (left s_________)))
 (let ((?x1103 (left s__________)))
 (let (($x1363 (= ?x1103 ?x965)))
 (let ((?x999 (right s_________)))
 (let ((?x1330 (top ?x999)))
 (let ((?x1331 (stack ?x1330 ?x965)))
 (let (($x1357 (= ?x1103 ?x1331)))
 (let (($x1333 ((_ is stack ) ?x999)))
 (let (($x1336 (= c_________ right-to-left)))
 (let (($x1337 (and $x1336 $x1333)))
 (let ((?x1185 (center s_________)))
 (let (($x1338 ((_ is stack ) ?x1185)))
 (let (($x1339 (= c_________ center-to-right)))
 (let (($x1340 (and $x1339 $x1338)))
 (let ((?x1326 (top ?x1185)))
 (let ((?x1327 (stack ?x1326 ?x965)))
 (let (($x1354 (= ?x1103 ?x1327)))
 (let (($x1341 (= c_________ center-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1136 (rest ?x965)))
 (let (($x1350 (= ?x1103 ?x1136)))
 (let (($x1343 ((_ is stack ) ?x965)))
 (let (($x1344 (= c_________ left-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1346 (= c_________ left-to-center)))
 (let (($x1347 (and $x1346 $x1343)))
 (ite $x1347 $x1350 (ite $x1345 $x1350 (ite $x1342 $x1354 (ite $x1340 $x1363 (ite $x1337 $x1357 $x1363))))))))))))))))))))))))))))))))
(assert
 (let ((?x999 (right s_________)))
 (let ((?x1137 (right s__________)))
 (let (($x1359 (= ?x1137 ?x999)))
 (let ((?x1329 (rest ?x999)))
 (let (($x1356 (= ?x1137 ?x1329)))
 (let (($x1333 ((_ is stack ) ?x999)))
 (let (($x1334 (= c_________ right-to-center)))
 (let (($x1335 (and $x1334 $x1333)))
 (let (($x1336 (= c_________ right-to-left)))
 (let (($x1337 (and $x1336 $x1333)))
 (let ((?x1185 (center s_________)))
 (let ((?x1326 (top ?x1185)))
 (let ((?x1328 (stack ?x1326 ?x999)))
 (let (($x1355 (= ?x1137 ?x1328)))
 (let (($x1338 ((_ is stack ) ?x1185)))
 (let (($x1339 (= c_________ center-to-right)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ center-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x965 (left s_________)))
 (let (($x1343 ((_ is stack ) ?x965)))
 (let (($x1344 (= c_________ left-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1376 (ite $x1345 $x1359 (ite $x1342 $x1359 (ite $x1340 $x1355 (ite $x1337 $x1356 (ite $x1335 $x1356 $x1359)))))))
 (let ((?x1183 (top ?x965)))
 (let ((?x1322 (stack ?x1183 ?x999)))
 (let (($x1351 (= ?x1137 ?x1322)))
 (let (($x1346 (= c_________ left-to-center)))
 (let (($x1347 (and $x1346 $x1343)))
 (ite $x1347 $x1351 $x1376)))))))))))))))))))))))))))))))
(assert
 (let ((?x1185 (center s_________)))
 (let ((?x1323 (center s__________)))
 (let (($x1361 (= ?x1323 ?x1185)))
 (let ((?x999 (right s_________)))
 (let ((?x1330 (top ?x999)))
 (let ((?x1332 (stack ?x1330 ?x1185)))
 (let (($x1358 (= ?x1323 ?x1332)))
 (let (($x1333 ((_ is stack ) ?x999)))
 (let (($x1334 (= c_________ right-to-center)))
 (let (($x1335 (and $x1334 $x1333)))
 (let (($x1336 (= c_________ right-to-left)))
 (let (($x1337 (and $x1336 $x1333)))
 (let ((?x1325 (rest ?x1185)))
 (let (($x1353 (= ?x1323 ?x1325)))
 (let (($x1338 ((_ is stack ) ?x1185)))
 (let (($x1339 (= c_________ center-to-right)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ center-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x965 (left s_________)))
 (let ((?x1183 (top ?x965)))
 (let ((?x1324 (stack ?x1183 ?x1185)))
 (let (($x1352 (= ?x1323 ?x1324)))
 (let (($x1343 ((_ is stack ) ?x965)))
 (let (($x1344 (= c_________ left-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1375 (ite $x1345 $x1352 (ite $x1342 $x1353 (ite $x1340 $x1353 (ite $x1337 $x1361 (ite $x1335 $x1358 $x1361)))))))
 (let (($x1346 (= c_________ left-to-center)))
 (let (($x1347 (and $x1346 $x1343)))
 (ite $x1347 $x1361 $x1375)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1103 (left s__________)))
 (let ((?x1241 (left s___________)))
 (let (($x1501 (= ?x1241 ?x1103)))
 (let ((?x1137 (right s__________)))
 (let ((?x1468 (top ?x1137)))
 (let ((?x1469 (stack ?x1468 ?x1103)))
 (let (($x1495 (= ?x1241 ?x1469)))
 (let (($x1471 ((_ is stack ) ?x1137)))
 (let (($x1474 (= c__________ right-to-left)))
 (let (($x1475 (and $x1474 $x1471)))
 (let ((?x1323 (center s__________)))
 (let (($x1476 ((_ is stack ) ?x1323)))
 (let (($x1477 (= c__________ center-to-right)))
 (let (($x1478 (and $x1477 $x1476)))
 (let ((?x1464 (top ?x1323)))
 (let ((?x1465 (stack ?x1464 ?x1103)))
 (let (($x1492 (= ?x1241 ?x1465)))
 (let (($x1479 (= c__________ center-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1274 (rest ?x1103)))
 (let (($x1488 (= ?x1241 ?x1274)))
 (let (($x1481 ((_ is stack ) ?x1103)))
 (let (($x1482 (= c__________ left-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1484 (= c__________ left-to-center)))
 (let (($x1485 (and $x1484 $x1481)))
 (ite $x1485 $x1488 (ite $x1483 $x1488 (ite $x1480 $x1492 (ite $x1478 $x1501 (ite $x1475 $x1495 $x1501))))))))))))))))))))))))))))))))
(assert
 (let ((?x1137 (right s__________)))
 (let ((?x1275 (right s___________)))
 (let (($x1497 (= ?x1275 ?x1137)))
 (let ((?x1467 (rest ?x1137)))
 (let (($x1494 (= ?x1275 ?x1467)))
 (let (($x1471 ((_ is stack ) ?x1137)))
 (let (($x1472 (= c__________ right-to-center)))
 (let (($x1473 (and $x1472 $x1471)))
 (let (($x1474 (= c__________ right-to-left)))
 (let (($x1475 (and $x1474 $x1471)))
 (let ((?x1323 (center s__________)))
 (let ((?x1464 (top ?x1323)))
 (let ((?x1466 (stack ?x1464 ?x1137)))
 (let (($x1493 (= ?x1275 ?x1466)))
 (let (($x1476 ((_ is stack ) ?x1323)))
 (let (($x1477 (= c__________ center-to-right)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ center-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1103 (left s__________)))
 (let (($x1481 ((_ is stack ) ?x1103)))
 (let (($x1482 (= c__________ left-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1514 (ite $x1483 $x1497 (ite $x1480 $x1497 (ite $x1478 $x1493 (ite $x1475 $x1494 (ite $x1473 $x1494 $x1497)))))))
 (let ((?x1321 (top ?x1103)))
 (let ((?x1460 (stack ?x1321 ?x1137)))
 (let (($x1489 (= ?x1275 ?x1460)))
 (let (($x1484 (= c__________ left-to-center)))
 (let (($x1485 (and $x1484 $x1481)))
 (ite $x1485 $x1489 $x1514)))))))))))))))))))))))))))))))
(assert
 (let ((?x1323 (center s__________)))
 (let ((?x1461 (center s___________)))
 (let (($x1499 (= ?x1461 ?x1323)))
 (let ((?x1137 (right s__________)))
 (let ((?x1468 (top ?x1137)))
 (let ((?x1470 (stack ?x1468 ?x1323)))
 (let (($x1496 (= ?x1461 ?x1470)))
 (let (($x1471 ((_ is stack ) ?x1137)))
 (let (($x1472 (= c__________ right-to-center)))
 (let (($x1473 (and $x1472 $x1471)))
 (let (($x1474 (= c__________ right-to-left)))
 (let (($x1475 (and $x1474 $x1471)))
 (let ((?x1463 (rest ?x1323)))
 (let (($x1491 (= ?x1461 ?x1463)))
 (let (($x1476 ((_ is stack ) ?x1323)))
 (let (($x1477 (= c__________ center-to-right)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ center-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1103 (left s__________)))
 (let ((?x1321 (top ?x1103)))
 (let ((?x1462 (stack ?x1321 ?x1323)))
 (let (($x1490 (= ?x1461 ?x1462)))
 (let (($x1481 ((_ is stack ) ?x1103)))
 (let (($x1482 (= c__________ left-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1513 (ite $x1483 $x1490 (ite $x1480 $x1491 (ite $x1478 $x1491 (ite $x1475 $x1499 (ite $x1473 $x1496 $x1499)))))))
 (let (($x1484 (= c__________ left-to-center)))
 (let (($x1485 (and $x1484 $x1481)))
 (ite $x1485 $x1499 $x1513)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1241 (left s___________)))
 (let ((?x1379 (left s____________)))
 (let (($x1639 (= ?x1379 ?x1241)))
 (let ((?x1275 (right s___________)))
 (let ((?x1606 (top ?x1275)))
 (let ((?x1607 (stack ?x1606 ?x1241)))
 (let (($x1633 (= ?x1379 ?x1607)))
 (let (($x1609 ((_ is stack ) ?x1275)))
 (let (($x1612 (= c___________ right-to-left)))
 (let (($x1613 (and $x1612 $x1609)))
 (let ((?x1461 (center s___________)))
 (let (($x1614 ((_ is stack ) ?x1461)))
 (let (($x1615 (= c___________ center-to-right)))
 (let (($x1616 (and $x1615 $x1614)))
 (let ((?x1602 (top ?x1461)))
 (let ((?x1603 (stack ?x1602 ?x1241)))
 (let (($x1630 (= ?x1379 ?x1603)))
 (let (($x1617 (= c___________ center-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1412 (rest ?x1241)))
 (let (($x1626 (= ?x1379 ?x1412)))
 (let (($x1619 ((_ is stack ) ?x1241)))
 (let (($x1620 (= c___________ left-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let (($x1622 (= c___________ left-to-center)))
 (let (($x1623 (and $x1622 $x1619)))
 (ite $x1623 $x1626 (ite $x1621 $x1626 (ite $x1618 $x1630 (ite $x1616 $x1639 (ite $x1613 $x1633 $x1639))))))))))))))))))))))))))))))))
(assert
 (let ((?x1275 (right s___________)))
 (let ((?x1413 (right s____________)))
 (let (($x1635 (= ?x1413 ?x1275)))
 (let ((?x1605 (rest ?x1275)))
 (let (($x1632 (= ?x1413 ?x1605)))
 (let (($x1609 ((_ is stack ) ?x1275)))
 (let (($x1610 (= c___________ right-to-center)))
 (let (($x1611 (and $x1610 $x1609)))
 (let (($x1612 (= c___________ right-to-left)))
 (let (($x1613 (and $x1612 $x1609)))
 (let ((?x1461 (center s___________)))
 (let ((?x1602 (top ?x1461)))
 (let ((?x1604 (stack ?x1602 ?x1275)))
 (let (($x1631 (= ?x1413 ?x1604)))
 (let (($x1614 ((_ is stack ) ?x1461)))
 (let (($x1615 (= c___________ center-to-right)))
 (let (($x1616 (and $x1615 $x1614)))
 (let (($x1617 (= c___________ center-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1241 (left s___________)))
 (let (($x1619 ((_ is stack ) ?x1241)))
 (let (($x1620 (= c___________ left-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let (($x1652 (ite $x1621 $x1635 (ite $x1618 $x1635 (ite $x1616 $x1631 (ite $x1613 $x1632 (ite $x1611 $x1632 $x1635)))))))
 (let ((?x1459 (top ?x1241)))
 (let ((?x1598 (stack ?x1459 ?x1275)))
 (let (($x1627 (= ?x1413 ?x1598)))
 (let (($x1622 (= c___________ left-to-center)))
 (let (($x1623 (and $x1622 $x1619)))
 (ite $x1623 $x1627 $x1652)))))))))))))))))))))))))))))))
(assert
 (let ((?x1461 (center s___________)))
 (let ((?x1599 (center s____________)))
 (let (($x1637 (= ?x1599 ?x1461)))
 (let ((?x1275 (right s___________)))
 (let ((?x1606 (top ?x1275)))
 (let ((?x1608 (stack ?x1606 ?x1461)))
 (let (($x1634 (= ?x1599 ?x1608)))
 (let (($x1609 ((_ is stack ) ?x1275)))
 (let (($x1610 (= c___________ right-to-center)))
 (let (($x1611 (and $x1610 $x1609)))
 (let (($x1612 (= c___________ right-to-left)))
 (let (($x1613 (and $x1612 $x1609)))
 (let ((?x1601 (rest ?x1461)))
 (let (($x1629 (= ?x1599 ?x1601)))
 (let (($x1614 ((_ is stack ) ?x1461)))
 (let (($x1615 (= c___________ center-to-right)))
 (let (($x1616 (and $x1615 $x1614)))
 (let (($x1617 (= c___________ center-to-left)))
 (let (($x1618 (and $x1617 $x1614)))
 (let ((?x1241 (left s___________)))
 (let ((?x1459 (top ?x1241)))
 (let ((?x1600 (stack ?x1459 ?x1461)))
 (let (($x1628 (= ?x1599 ?x1600)))
 (let (($x1619 ((_ is stack ) ?x1241)))
 (let (($x1620 (= c___________ left-to-right)))
 (let (($x1621 (and $x1620 $x1619)))
 (let (($x1651 (ite $x1621 $x1628 (ite $x1618 $x1629 (ite $x1616 $x1629 (ite $x1613 $x1637 (ite $x1611 $x1634 $x1637)))))))
 (let (($x1622 (= c___________ left-to-center)))
 (let (($x1623 (and $x1622 $x1619)))
 (ite $x1623 $x1637 $x1651)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1379 (left s____________)))
 (let ((?x1517 (left s_____________)))
 (let (($x1777 (= ?x1517 ?x1379)))
 (let ((?x1413 (right s____________)))
 (let ((?x1744 (top ?x1413)))
 (let ((?x1745 (stack ?x1744 ?x1379)))
 (let (($x1771 (= ?x1517 ?x1745)))
 (let (($x1747 ((_ is stack ) ?x1413)))
 (let (($x1750 (= c____________ right-to-left)))
 (let (($x1751 (and $x1750 $x1747)))
 (let ((?x1599 (center s____________)))
 (let (($x1752 ((_ is stack ) ?x1599)))
 (let (($x1753 (= c____________ center-to-right)))
 (let (($x1754 (and $x1753 $x1752)))
 (let ((?x1740 (top ?x1599)))
 (let ((?x1741 (stack ?x1740 ?x1379)))
 (let (($x1768 (= ?x1517 ?x1741)))
 (let (($x1755 (= c____________ center-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1550 (rest ?x1379)))
 (let (($x1764 (= ?x1517 ?x1550)))
 (let (($x1757 ((_ is stack ) ?x1379)))
 (let (($x1758 (= c____________ left-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let (($x1760 (= c____________ left-to-center)))
 (let (($x1761 (and $x1760 $x1757)))
 (ite $x1761 $x1764 (ite $x1759 $x1764 (ite $x1756 $x1768 (ite $x1754 $x1777 (ite $x1751 $x1771 $x1777))))))))))))))))))))))))))))))))
(assert
 (let ((?x1413 (right s____________)))
 (let ((?x1551 (right s_____________)))
 (let (($x1773 (= ?x1551 ?x1413)))
 (let ((?x1743 (rest ?x1413)))
 (let (($x1770 (= ?x1551 ?x1743)))
 (let (($x1747 ((_ is stack ) ?x1413)))
 (let (($x1748 (= c____________ right-to-center)))
 (let (($x1749 (and $x1748 $x1747)))
 (let (($x1750 (= c____________ right-to-left)))
 (let (($x1751 (and $x1750 $x1747)))
 (let ((?x1599 (center s____________)))
 (let ((?x1740 (top ?x1599)))
 (let ((?x1742 (stack ?x1740 ?x1413)))
 (let (($x1769 (= ?x1551 ?x1742)))
 (let (($x1752 ((_ is stack ) ?x1599)))
 (let (($x1753 (= c____________ center-to-right)))
 (let (($x1754 (and $x1753 $x1752)))
 (let (($x1755 (= c____________ center-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1379 (left s____________)))
 (let (($x1757 ((_ is stack ) ?x1379)))
 (let (($x1758 (= c____________ left-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let (($x1790 (ite $x1759 $x1773 (ite $x1756 $x1773 (ite $x1754 $x1769 (ite $x1751 $x1770 (ite $x1749 $x1770 $x1773)))))))
 (let ((?x1597 (top ?x1379)))
 (let ((?x1736 (stack ?x1597 ?x1413)))
 (let (($x1765 (= ?x1551 ?x1736)))
 (let (($x1760 (= c____________ left-to-center)))
 (let (($x1761 (and $x1760 $x1757)))
 (ite $x1761 $x1765 $x1790)))))))))))))))))))))))))))))))
(assert
 (let ((?x1599 (center s____________)))
 (let ((?x1737 (center s_____________)))
 (let (($x1775 (= ?x1737 ?x1599)))
 (let ((?x1413 (right s____________)))
 (let ((?x1744 (top ?x1413)))
 (let ((?x1746 (stack ?x1744 ?x1599)))
 (let (($x1772 (= ?x1737 ?x1746)))
 (let (($x1747 ((_ is stack ) ?x1413)))
 (let (($x1748 (= c____________ right-to-center)))
 (let (($x1749 (and $x1748 $x1747)))
 (let (($x1750 (= c____________ right-to-left)))
 (let (($x1751 (and $x1750 $x1747)))
 (let ((?x1739 (rest ?x1599)))
 (let (($x1767 (= ?x1737 ?x1739)))
 (let (($x1752 ((_ is stack ) ?x1599)))
 (let (($x1753 (= c____________ center-to-right)))
 (let (($x1754 (and $x1753 $x1752)))
 (let (($x1755 (= c____________ center-to-left)))
 (let (($x1756 (and $x1755 $x1752)))
 (let ((?x1379 (left s____________)))
 (let ((?x1597 (top ?x1379)))
 (let ((?x1738 (stack ?x1597 ?x1599)))
 (let (($x1766 (= ?x1737 ?x1738)))
 (let (($x1757 ((_ is stack ) ?x1379)))
 (let (($x1758 (= c____________ left-to-right)))
 (let (($x1759 (and $x1758 $x1757)))
 (let (($x1789 (ite $x1759 $x1766 (ite $x1756 $x1767 (ite $x1754 $x1767 (ite $x1751 $x1775 (ite $x1749 $x1772 $x1775)))))))
 (let (($x1760 (= c____________ left-to-center)))
 (let (($x1761 (and $x1760 $x1757)))
 (ite $x1761 $x1775 $x1789)))))))))))))))))))))))))))))))
(assert
 (let ((?x1551 (right s_____________)))
 (let (($x1793 (= ?x1551 empty)))
 (let ((?x1737 (center s_____________)))
 (let (($x1824 (= ?x1737 empty)))
 (let ((?x42 (stack M (stack E (stack A (stack F (stack J (stack B empty))))))))
 (let ((?x48 (stack I (stack H (stack K (stack G (stack D (stack L ?x42))))))))
 (let ((?x49 (stack C ?x48)))
 (let ((?x1517 (left s_____________)))
 (let (($x1825 (= ?x1517 ?x49)))
 (let (($x1827 (not (and $x1825 $x1824 $x1793))))
 (not $x1827))))))))))))
(check-sat)
(exit)
