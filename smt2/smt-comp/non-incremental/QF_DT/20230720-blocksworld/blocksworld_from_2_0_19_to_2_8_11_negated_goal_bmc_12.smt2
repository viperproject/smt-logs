(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x34 (stack C empty)))
 (let ((?x33 (stack Q ?x34)))
 (let ((?x120 (left s_tmp_)))
 (= ?x120 ?x33)))))
(assert
 (let ((?x123 (center s_tmp__)))
 (= ?x123 empty)))
(assert
 (let ((?x35 (stack A empty)))
 (let ((?x36 (stack B ?x35)))
 (let ((?x37 (stack D ?x36)))
 (let ((?x38 (stack E ?x37)))
 (let ((?x39 (stack F ?x38)))
 (let ((?x40 (stack G ?x39)))
 (let ((?x41 (stack H ?x40)))
 (let ((?x42 (stack I ?x41)))
 (let ((?x43 (stack J ?x42)))
 (let ((?x44 (stack K ?x43)))
 (let ((?x45 (stack L ?x44)))
 (let ((?x46 (stack M ?x45)))
 (let ((?x47 (stack N ?x46)))
 (let ((?x48 (stack O ?x47)))
 (let ((?x49 (stack P ?x48)))
 (let ((?x50 (stack R ?x49)))
 (let ((?x51 (stack S ?x50)))
 (let ((?x52 (stack T ?x51)))
 (let ((?x53 (stack U ?x52)))
 (let ((?x126 (right s_tmp___)))
 (= ?x126 ?x53))))))))))))))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x153 (left s_tmp__)))
 (= (left s_tmp___) ?x153)))
(assert
 (let ((?x123 (center s_tmp__)))
 (= (center s_tmp___) ?x123)))
(assert
 (let ((?x157 (center s_tmp_)))
 (= ?x157 (center s_tmp))))
(assert
 (let ((?x160 (right s_tmp_)))
 (= ?x160 (right s_tmp))))
(assert
 (let ((?x120 (left s_tmp_)))
 (let ((?x153 (left s_tmp__)))
 (= ?x153 ?x120))))
(assert
 (let ((?x160 (right s_tmp_)))
 (let ((?x164 (right s_tmp__)))
 (= ?x164 ?x160))))
(assert
 (= c__ c!1))
(assert
 (let ((?x97 (left s_)))
 (let ((?x304 (left s__)))
 (let (($x316 (= ?x304 ?x97)))
 (let ((?x100 (right s_)))
 (let (($x292 ((_ is stack ) ?x100)))
 (let (($x307 (= c_ right-to-left)))
 (let (($x284 (and $x307 $x292)))
 (let ((?x102 (center s_)))
 (let (($x285 ((_ is stack ) ?x102)))
 (let (($x272 (and (= c_ center-to-right) $x285)))
 (let (($x274 (and (= c_ center-to-left) $x285)))
 (let (($x325 (ite $x274 (= ?x304 (stack (top ?x102) ?x97)) (ite $x272 $x316 (ite $x284 (= ?x304 (stack (top ?x100) ?x97)) $x316)))))
 (let (($x270 (= ?x304 (rest ?x97))))
 (let (($x293 ((_ is stack ) ?x97)))
 (let (($x294 (= c_ left-to-right)))
 (let (($x295 (and $x294 $x293)))
 (let (($x299 (= c_ left-to-center)))
 (let (($x300 (and $x299 $x293)))
 (ite $x300 $x270 (ite $x295 $x270 $x325)))))))))))))))))))))
(assert
 (let ((?x100 (right s_)))
 (let ((?x288 (right s__)))
 (let (($x312 (= ?x288 ?x100)))
 (let (($x309 (= ?x288 (rest ?x100))))
 (let (($x292 ((_ is stack ) ?x100)))
 (let (($x305 (= c_ right-to-center)))
 (let (($x306 (and $x305 $x292)))
 (let (($x307 (= c_ right-to-left)))
 (let (($x284 (and $x307 $x292)))
 (let ((?x102 (center s_)))
 (let (($x285 ((_ is stack ) ?x102)))
 (let (($x272 (and (= c_ center-to-right) $x285)))
 (let (($x322 (ite $x272 (= ?x288 (stack (top ?x102) ?x100)) (ite $x284 $x309 (ite $x306 $x309 $x312)))))
 (let (($x274 (and (= c_ center-to-left) $x285)))
 (let ((?x97 (left s_)))
 (let (($x293 ((_ is stack ) ?x97)))
 (let (($x294 (= c_ left-to-right)))
 (let (($x295 (and $x294 $x293)))
 (let (($x299 (= c_ left-to-center)))
 (let (($x300 (and $x299 $x293)))
 (ite $x300 (= ?x288 (stack (top ?x97) ?x100)) (ite $x295 $x312 (ite $x274 $x312 $x322))))))))))))))))))))))))
(assert
 (let ((?x102 (center s_)))
 (let ((?x279 (center s__)))
 (let (($x314 (= ?x279 ?x102)))
 (let ((?x100 (right s_)))
 (let (($x292 ((_ is stack ) ?x100)))
 (let (($x305 (= c_ right-to-center)))
 (let (($x306 (and $x305 $x292)))
 (let (($x307 (= c_ right-to-left)))
 (let (($x284 (and $x307 $x292)))
 (let (($x297 (= ?x279 (rest ?x102))))
 (let (($x285 ((_ is stack ) ?x102)))
 (let (($x272 (and (= c_ center-to-right) $x285)))
 (let (($x321 (ite $x272 $x297 (ite $x284 $x314 (ite $x306 (= ?x279 (stack (top ?x100) ?x102)) $x314)))))
 (let (($x274 (and (= c_ center-to-left) $x285)))
 (let ((?x97 (left s_)))
 (let (($x293 ((_ is stack ) ?x97)))
 (let (($x294 (= c_ left-to-right)))
 (let (($x295 (and $x294 $x293)))
 (let (($x299 (= c_ left-to-center)))
 (let (($x300 (and $x299 $x293)))
 (ite $x300 $x314 (ite $x295 (= ?x279 (stack (top ?x97) ?x102)) (ite $x274 $x297 $x321))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x304 (left s__)))
 (let ((?x167 (left s___)))
 (let (($x428 (= ?x167 ?x304)))
 (let ((?x288 (right s__)))
 (let ((?x395 (top ?x288)))
 (let ((?x396 (stack ?x395 ?x304)))
 (let (($x422 (= ?x167 ?x396)))
 (let (($x398 ((_ is stack ) ?x288)))
 (let (($x401 (= c__ right-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x279 (center s__)))
 (let (($x403 ((_ is stack ) ?x279)))
 (let (($x404 (= c__ center-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let ((?x391 (top ?x279)))
 (let ((?x392 (stack ?x391 ?x304)))
 (let (($x419 (= ?x167 ?x392)))
 (let (($x406 (= c__ center-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x169 (rest ?x304)))
 (let (($x415 (= ?x167 ?x169)))
 (let (($x408 ((_ is stack ) ?x304)))
 (let (($x409 (= c__ left-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let (($x411 (= c__ left-to-center)))
 (let (($x412 (and $x411 $x408)))
 (ite $x412 $x415 (ite $x410 $x415 (ite $x407 $x419 (ite $x405 $x428 (ite $x402 $x422 $x428))))))))))))))))))))))))))))))))
(assert
 (let ((?x288 (right s__)))
 (let ((?x170 (right s___)))
 (let (($x424 (= ?x170 ?x288)))
 (let ((?x394 (rest ?x288)))
 (let (($x421 (= ?x170 ?x394)))
 (let (($x398 ((_ is stack ) ?x288)))
 (let (($x399 (= c__ right-to-center)))
 (let (($x400 (and $x399 $x398)))
 (let (($x401 (= c__ right-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x279 (center s__)))
 (let ((?x391 (top ?x279)))
 (let ((?x393 (stack ?x391 ?x288)))
 (let (($x420 (= ?x170 ?x393)))
 (let (($x403 ((_ is stack ) ?x279)))
 (let (($x404 (= c__ center-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let (($x406 (= c__ center-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x304 (left s__)))
 (let (($x408 ((_ is stack ) ?x304)))
 (let (($x409 (= c__ left-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let (($x441 (ite $x410 $x424 (ite $x407 $x424 (ite $x405 $x420 (ite $x402 $x421 (ite $x400 $x421 $x424)))))))
 (let ((?x268 (top ?x304)))
 (let ((?x387 (stack ?x268 ?x288)))
 (let (($x416 (= ?x170 ?x387)))
 (let (($x411 (= c__ left-to-center)))
 (let (($x412 (and $x411 $x408)))
 (ite $x412 $x416 $x441)))))))))))))))))))))))))))))))
(assert
 (let ((?x279 (center s__)))
 (let ((?x388 (center s___)))
 (let (($x426 (= ?x388 ?x279)))
 (let ((?x288 (right s__)))
 (let ((?x395 (top ?x288)))
 (let ((?x397 (stack ?x395 ?x279)))
 (let (($x423 (= ?x388 ?x397)))
 (let (($x398 ((_ is stack ) ?x288)))
 (let (($x399 (= c__ right-to-center)))
 (let (($x400 (and $x399 $x398)))
 (let (($x401 (= c__ right-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x390 (rest ?x279)))
 (let (($x418 (= ?x388 ?x390)))
 (let (($x403 ((_ is stack ) ?x279)))
 (let (($x404 (= c__ center-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let (($x406 (= c__ center-to-left)))
 (let (($x407 (and $x406 $x403)))
 (let ((?x304 (left s__)))
 (let ((?x268 (top ?x304)))
 (let ((?x389 (stack ?x268 ?x279)))
 (let (($x417 (= ?x388 ?x389)))
 (let (($x408 ((_ is stack ) ?x304)))
 (let (($x409 (= c__ left-to-right)))
 (let (($x410 (and $x409 $x408)))
 (let (($x440 (ite $x410 $x417 (ite $x407 $x418 (ite $x405 $x418 (ite $x402 $x426 (ite $x400 $x423 $x426)))))))
 (let (($x411 (= c__ left-to-center)))
 (let (($x412 (and $x411 $x408)))
 (ite $x412 $x426 $x440)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x167 (left s___)))
 (let ((?x332 (left s____)))
 (let (($x566 (= ?x332 ?x167)))
 (let ((?x170 (right s___)))
 (let ((?x533 (top ?x170)))
 (let ((?x534 (stack ?x533 ?x167)))
 (let (($x560 (= ?x332 ?x534)))
 (let (($x536 ((_ is stack ) ?x170)))
 (let (($x539 (= c___ right-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x388 (center s___)))
 (let (($x541 ((_ is stack ) ?x388)))
 (let (($x542 (= c___ center-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let ((?x529 (top ?x388)))
 (let ((?x530 (stack ?x529 ?x167)))
 (let (($x557 (= ?x332 ?x530)))
 (let (($x544 (= c___ center-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x364 (rest ?x167)))
 (let (($x553 (= ?x332 ?x364)))
 (let (($x546 ((_ is stack ) ?x167)))
 (let (($x547 (= c___ left-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let (($x549 (= c___ left-to-center)))
 (let (($x550 (and $x549 $x546)))
 (ite $x550 $x553 (ite $x548 $x553 (ite $x545 $x557 (ite $x543 $x566 (ite $x540 $x560 $x566))))))))))))))))))))))))))))))))
(assert
 (let ((?x170 (right s___)))
 (let ((?x365 (right s____)))
 (let (($x562 (= ?x365 ?x170)))
 (let ((?x532 (rest ?x170)))
 (let (($x559 (= ?x365 ?x532)))
 (let (($x536 ((_ is stack ) ?x170)))
 (let (($x537 (= c___ right-to-center)))
 (let (($x538 (and $x537 $x536)))
 (let (($x539 (= c___ right-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x388 (center s___)))
 (let ((?x529 (top ?x388)))
 (let ((?x531 (stack ?x529 ?x170)))
 (let (($x558 (= ?x365 ?x531)))
 (let (($x541 ((_ is stack ) ?x388)))
 (let (($x542 (= c___ center-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let (($x544 (= c___ center-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x167 (left s___)))
 (let (($x546 ((_ is stack ) ?x167)))
 (let (($x547 (= c___ left-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let (($x579 (ite $x548 $x562 (ite $x545 $x562 (ite $x543 $x558 (ite $x540 $x559 (ite $x538 $x559 $x562)))))))
 (let ((?x386 (top ?x167)))
 (let ((?x525 (stack ?x386 ?x170)))
 (let (($x554 (= ?x365 ?x525)))
 (let (($x549 (= c___ left-to-center)))
 (let (($x550 (and $x549 $x546)))
 (ite $x550 $x554 $x579)))))))))))))))))))))))))))))))
(assert
 (let ((?x388 (center s___)))
 (let ((?x526 (center s____)))
 (let (($x564 (= ?x526 ?x388)))
 (let ((?x170 (right s___)))
 (let ((?x533 (top ?x170)))
 (let ((?x535 (stack ?x533 ?x388)))
 (let (($x561 (= ?x526 ?x535)))
 (let (($x536 ((_ is stack ) ?x170)))
 (let (($x537 (= c___ right-to-center)))
 (let (($x538 (and $x537 $x536)))
 (let (($x539 (= c___ right-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x528 (rest ?x388)))
 (let (($x556 (= ?x526 ?x528)))
 (let (($x541 ((_ is stack ) ?x388)))
 (let (($x542 (= c___ center-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let (($x544 (= c___ center-to-left)))
 (let (($x545 (and $x544 $x541)))
 (let ((?x167 (left s___)))
 (let ((?x386 (top ?x167)))
 (let ((?x527 (stack ?x386 ?x388)))
 (let (($x555 (= ?x526 ?x527)))
 (let (($x546 ((_ is stack ) ?x167)))
 (let (($x547 (= c___ left-to-right)))
 (let (($x548 (and $x547 $x546)))
 (let (($x578 (ite $x548 $x555 (ite $x545 $x556 (ite $x543 $x556 (ite $x540 $x564 (ite $x538 $x561 $x564)))))))
 (let (($x549 (= c___ left-to-center)))
 (let (($x550 (and $x549 $x546)))
 (ite $x550 $x564 $x578)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x332 (left s____)))
 (let ((?x444 (left s_____)))
 (let (($x704 (= ?x444 ?x332)))
 (let ((?x365 (right s____)))
 (let ((?x671 (top ?x365)))
 (let ((?x672 (stack ?x671 ?x332)))
 (let (($x698 (= ?x444 ?x672)))
 (let (($x674 ((_ is stack ) ?x365)))
 (let (($x677 (= c____ right-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x526 (center s____)))
 (let (($x679 ((_ is stack ) ?x526)))
 (let (($x680 (= c____ center-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let ((?x667 (top ?x526)))
 (let ((?x668 (stack ?x667 ?x332)))
 (let (($x695 (= ?x444 ?x668)))
 (let (($x682 (= c____ center-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x477 (rest ?x332)))
 (let (($x691 (= ?x444 ?x477)))
 (let (($x684 ((_ is stack ) ?x332)))
 (let (($x685 (= c____ left-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let (($x687 (= c____ left-to-center)))
 (let (($x688 (and $x687 $x684)))
 (ite $x688 $x691 (ite $x686 $x691 (ite $x683 $x695 (ite $x681 $x704 (ite $x678 $x698 $x704))))))))))))))))))))))))))))))))
(assert
 (let ((?x365 (right s____)))
 (let ((?x478 (right s_____)))
 (let (($x700 (= ?x478 ?x365)))
 (let ((?x670 (rest ?x365)))
 (let (($x697 (= ?x478 ?x670)))
 (let (($x674 ((_ is stack ) ?x365)))
 (let (($x675 (= c____ right-to-center)))
 (let (($x676 (and $x675 $x674)))
 (let (($x677 (= c____ right-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x526 (center s____)))
 (let ((?x667 (top ?x526)))
 (let ((?x669 (stack ?x667 ?x365)))
 (let (($x696 (= ?x478 ?x669)))
 (let (($x679 ((_ is stack ) ?x526)))
 (let (($x680 (= c____ center-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let (($x682 (= c____ center-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x332 (left s____)))
 (let (($x684 ((_ is stack ) ?x332)))
 (let (($x685 (= c____ left-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let (($x717 (ite $x686 $x700 (ite $x683 $x700 (ite $x681 $x696 (ite $x678 $x697 (ite $x676 $x697 $x700)))))))
 (let ((?x524 (top ?x332)))
 (let ((?x663 (stack ?x524 ?x365)))
 (let (($x692 (= ?x478 ?x663)))
 (let (($x687 (= c____ left-to-center)))
 (let (($x688 (and $x687 $x684)))
 (ite $x688 $x692 $x717)))))))))))))))))))))))))))))))
(assert
 (let ((?x526 (center s____)))
 (let ((?x664 (center s_____)))
 (let (($x702 (= ?x664 ?x526)))
 (let ((?x365 (right s____)))
 (let ((?x671 (top ?x365)))
 (let ((?x673 (stack ?x671 ?x526)))
 (let (($x699 (= ?x664 ?x673)))
 (let (($x674 ((_ is stack ) ?x365)))
 (let (($x675 (= c____ right-to-center)))
 (let (($x676 (and $x675 $x674)))
 (let (($x677 (= c____ right-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x666 (rest ?x526)))
 (let (($x694 (= ?x664 ?x666)))
 (let (($x679 ((_ is stack ) ?x526)))
 (let (($x680 (= c____ center-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let (($x682 (= c____ center-to-left)))
 (let (($x683 (and $x682 $x679)))
 (let ((?x332 (left s____)))
 (let ((?x524 (top ?x332)))
 (let ((?x665 (stack ?x524 ?x526)))
 (let (($x693 (= ?x664 ?x665)))
 (let (($x684 ((_ is stack ) ?x332)))
 (let (($x685 (= c____ left-to-right)))
 (let (($x686 (and $x685 $x684)))
 (let (($x716 (ite $x686 $x693 (ite $x683 $x694 (ite $x681 $x694 (ite $x678 $x702 (ite $x676 $x699 $x702)))))))
 (let (($x687 (= c____ left-to-center)))
 (let (($x688 (and $x687 $x684)))
 (ite $x688 $x702 $x716)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x444 (left s_____)))
 (let ((?x582 (left s______)))
 (let (($x842 (= ?x582 ?x444)))
 (let ((?x478 (right s_____)))
 (let ((?x809 (top ?x478)))
 (let ((?x810 (stack ?x809 ?x444)))
 (let (($x836 (= ?x582 ?x810)))
 (let (($x812 ((_ is stack ) ?x478)))
 (let (($x815 (= c_____ right-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x664 (center s_____)))
 (let (($x817 ((_ is stack ) ?x664)))
 (let (($x818 (= c_____ center-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let ((?x805 (top ?x664)))
 (let ((?x806 (stack ?x805 ?x444)))
 (let (($x833 (= ?x582 ?x806)))
 (let (($x820 (= c_____ center-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x615 (rest ?x444)))
 (let (($x829 (= ?x582 ?x615)))
 (let (($x822 ((_ is stack ) ?x444)))
 (let (($x823 (= c_____ left-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let (($x825 (= c_____ left-to-center)))
 (let (($x826 (and $x825 $x822)))
 (ite $x826 $x829 (ite $x824 $x829 (ite $x821 $x833 (ite $x819 $x842 (ite $x816 $x836 $x842))))))))))))))))))))))))))))))))
(assert
 (let ((?x478 (right s_____)))
 (let ((?x616 (right s______)))
 (let (($x838 (= ?x616 ?x478)))
 (let ((?x808 (rest ?x478)))
 (let (($x835 (= ?x616 ?x808)))
 (let (($x812 ((_ is stack ) ?x478)))
 (let (($x813 (= c_____ right-to-center)))
 (let (($x814 (and $x813 $x812)))
 (let (($x815 (= c_____ right-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x664 (center s_____)))
 (let ((?x805 (top ?x664)))
 (let ((?x807 (stack ?x805 ?x478)))
 (let (($x834 (= ?x616 ?x807)))
 (let (($x817 ((_ is stack ) ?x664)))
 (let (($x818 (= c_____ center-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let (($x820 (= c_____ center-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x444 (left s_____)))
 (let (($x822 ((_ is stack ) ?x444)))
 (let (($x823 (= c_____ left-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let (($x855 (ite $x824 $x838 (ite $x821 $x838 (ite $x819 $x834 (ite $x816 $x835 (ite $x814 $x835 $x838)))))))
 (let ((?x662 (top ?x444)))
 (let ((?x801 (stack ?x662 ?x478)))
 (let (($x830 (= ?x616 ?x801)))
 (let (($x825 (= c_____ left-to-center)))
 (let (($x826 (and $x825 $x822)))
 (ite $x826 $x830 $x855)))))))))))))))))))))))))))))))
(assert
 (let ((?x664 (center s_____)))
 (let ((?x802 (center s______)))
 (let (($x840 (= ?x802 ?x664)))
 (let ((?x478 (right s_____)))
 (let ((?x809 (top ?x478)))
 (let ((?x811 (stack ?x809 ?x664)))
 (let (($x837 (= ?x802 ?x811)))
 (let (($x812 ((_ is stack ) ?x478)))
 (let (($x813 (= c_____ right-to-center)))
 (let (($x814 (and $x813 $x812)))
 (let (($x815 (= c_____ right-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x804 (rest ?x664)))
 (let (($x832 (= ?x802 ?x804)))
 (let (($x817 ((_ is stack ) ?x664)))
 (let (($x818 (= c_____ center-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let (($x820 (= c_____ center-to-left)))
 (let (($x821 (and $x820 $x817)))
 (let ((?x444 (left s_____)))
 (let ((?x662 (top ?x444)))
 (let ((?x803 (stack ?x662 ?x664)))
 (let (($x831 (= ?x802 ?x803)))
 (let (($x822 ((_ is stack ) ?x444)))
 (let (($x823 (= c_____ left-to-right)))
 (let (($x824 (and $x823 $x822)))
 (let (($x854 (ite $x824 $x831 (ite $x821 $x832 (ite $x819 $x832 (ite $x816 $x840 (ite $x814 $x837 $x840)))))))
 (let (($x825 (= c_____ left-to-center)))
 (let (($x826 (and $x825 $x822)))
 (ite $x826 $x840 $x854)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x582 (left s______)))
 (let ((?x720 (left s_______)))
 (let (($x980 (= ?x720 ?x582)))
 (let ((?x616 (right s______)))
 (let ((?x947 (top ?x616)))
 (let ((?x948 (stack ?x947 ?x582)))
 (let (($x974 (= ?x720 ?x948)))
 (let (($x950 ((_ is stack ) ?x616)))
 (let (($x953 (= c______ right-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x802 (center s______)))
 (let (($x955 ((_ is stack ) ?x802)))
 (let (($x956 (= c______ center-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let ((?x943 (top ?x802)))
 (let ((?x944 (stack ?x943 ?x582)))
 (let (($x971 (= ?x720 ?x944)))
 (let (($x958 (= c______ center-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x753 (rest ?x582)))
 (let (($x967 (= ?x720 ?x753)))
 (let (($x960 ((_ is stack ) ?x582)))
 (let (($x961 (= c______ left-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let (($x963 (= c______ left-to-center)))
 (let (($x964 (and $x963 $x960)))
 (ite $x964 $x967 (ite $x962 $x967 (ite $x959 $x971 (ite $x957 $x980 (ite $x954 $x974 $x980))))))))))))))))))))))))))))))))
(assert
 (let ((?x616 (right s______)))
 (let ((?x754 (right s_______)))
 (let (($x976 (= ?x754 ?x616)))
 (let ((?x946 (rest ?x616)))
 (let (($x973 (= ?x754 ?x946)))
 (let (($x950 ((_ is stack ) ?x616)))
 (let (($x951 (= c______ right-to-center)))
 (let (($x952 (and $x951 $x950)))
 (let (($x953 (= c______ right-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x802 (center s______)))
 (let ((?x943 (top ?x802)))
 (let ((?x945 (stack ?x943 ?x616)))
 (let (($x972 (= ?x754 ?x945)))
 (let (($x955 ((_ is stack ) ?x802)))
 (let (($x956 (= c______ center-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let (($x958 (= c______ center-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x582 (left s______)))
 (let (($x960 ((_ is stack ) ?x582)))
 (let (($x961 (= c______ left-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let (($x993 (ite $x962 $x976 (ite $x959 $x976 (ite $x957 $x972 (ite $x954 $x973 (ite $x952 $x973 $x976)))))))
 (let ((?x800 (top ?x582)))
 (let ((?x939 (stack ?x800 ?x616)))
 (let (($x968 (= ?x754 ?x939)))
 (let (($x963 (= c______ left-to-center)))
 (let (($x964 (and $x963 $x960)))
 (ite $x964 $x968 $x993)))))))))))))))))))))))))))))))
(assert
 (let ((?x802 (center s______)))
 (let ((?x940 (center s_______)))
 (let (($x978 (= ?x940 ?x802)))
 (let ((?x616 (right s______)))
 (let ((?x947 (top ?x616)))
 (let ((?x949 (stack ?x947 ?x802)))
 (let (($x975 (= ?x940 ?x949)))
 (let (($x950 ((_ is stack ) ?x616)))
 (let (($x951 (= c______ right-to-center)))
 (let (($x952 (and $x951 $x950)))
 (let (($x953 (= c______ right-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x942 (rest ?x802)))
 (let (($x970 (= ?x940 ?x942)))
 (let (($x955 ((_ is stack ) ?x802)))
 (let (($x956 (= c______ center-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let (($x958 (= c______ center-to-left)))
 (let (($x959 (and $x958 $x955)))
 (let ((?x582 (left s______)))
 (let ((?x800 (top ?x582)))
 (let ((?x941 (stack ?x800 ?x802)))
 (let (($x969 (= ?x940 ?x941)))
 (let (($x960 ((_ is stack ) ?x582)))
 (let (($x961 (= c______ left-to-right)))
 (let (($x962 (and $x961 $x960)))
 (let (($x992 (ite $x962 $x969 (ite $x959 $x970 (ite $x957 $x970 (ite $x954 $x978 (ite $x952 $x975 $x978)))))))
 (let (($x963 (= c______ left-to-center)))
 (let (($x964 (and $x963 $x960)))
 (ite $x964 $x978 $x992)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x720 (left s_______)))
 (let ((?x858 (left s________)))
 (let (($x1118 (= ?x858 ?x720)))
 (let ((?x754 (right s_______)))
 (let ((?x1085 (top ?x754)))
 (let ((?x1086 (stack ?x1085 ?x720)))
 (let (($x1112 (= ?x858 ?x1086)))
 (let (($x1088 ((_ is stack ) ?x754)))
 (let (($x1091 (= c_______ right-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x940 (center s_______)))
 (let (($x1093 ((_ is stack ) ?x940)))
 (let (($x1094 (= c_______ center-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let ((?x1081 (top ?x940)))
 (let ((?x1082 (stack ?x1081 ?x720)))
 (let (($x1109 (= ?x858 ?x1082)))
 (let (($x1096 (= c_______ center-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x891 (rest ?x720)))
 (let (($x1105 (= ?x858 ?x891)))
 (let (($x1098 ((_ is stack ) ?x720)))
 (let (($x1099 (= c_______ left-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let (($x1101 (= c_______ left-to-center)))
 (let (($x1102 (and $x1101 $x1098)))
 (ite $x1102 $x1105 (ite $x1100 $x1105 (ite $x1097 $x1109 (ite $x1095 $x1118 (ite $x1092 $x1112 $x1118))))))))))))))))))))))))))))))))
(assert
 (let ((?x754 (right s_______)))
 (let ((?x892 (right s________)))
 (let (($x1114 (= ?x892 ?x754)))
 (let ((?x1084 (rest ?x754)))
 (let (($x1111 (= ?x892 ?x1084)))
 (let (($x1088 ((_ is stack ) ?x754)))
 (let (($x1089 (= c_______ right-to-center)))
 (let (($x1090 (and $x1089 $x1088)))
 (let (($x1091 (= c_______ right-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x940 (center s_______)))
 (let ((?x1081 (top ?x940)))
 (let ((?x1083 (stack ?x1081 ?x754)))
 (let (($x1110 (= ?x892 ?x1083)))
 (let (($x1093 ((_ is stack ) ?x940)))
 (let (($x1094 (= c_______ center-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1096 (= c_______ center-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x720 (left s_______)))
 (let (($x1098 ((_ is stack ) ?x720)))
 (let (($x1099 (= c_______ left-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let (($x1131 (ite $x1100 $x1114 (ite $x1097 $x1114 (ite $x1095 $x1110 (ite $x1092 $x1111 (ite $x1090 $x1111 $x1114)))))))
 (let ((?x938 (top ?x720)))
 (let ((?x1077 (stack ?x938 ?x754)))
 (let (($x1106 (= ?x892 ?x1077)))
 (let (($x1101 (= c_______ left-to-center)))
 (let (($x1102 (and $x1101 $x1098)))
 (ite $x1102 $x1106 $x1131)))))))))))))))))))))))))))))))
(assert
 (let ((?x940 (center s_______)))
 (let ((?x1078 (center s________)))
 (let (($x1116 (= ?x1078 ?x940)))
 (let ((?x754 (right s_______)))
 (let ((?x1085 (top ?x754)))
 (let ((?x1087 (stack ?x1085 ?x940)))
 (let (($x1113 (= ?x1078 ?x1087)))
 (let (($x1088 ((_ is stack ) ?x754)))
 (let (($x1089 (= c_______ right-to-center)))
 (let (($x1090 (and $x1089 $x1088)))
 (let (($x1091 (= c_______ right-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x1080 (rest ?x940)))
 (let (($x1108 (= ?x1078 ?x1080)))
 (let (($x1093 ((_ is stack ) ?x940)))
 (let (($x1094 (= c_______ center-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1096 (= c_______ center-to-left)))
 (let (($x1097 (and $x1096 $x1093)))
 (let ((?x720 (left s_______)))
 (let ((?x938 (top ?x720)))
 (let ((?x1079 (stack ?x938 ?x940)))
 (let (($x1107 (= ?x1078 ?x1079)))
 (let (($x1098 ((_ is stack ) ?x720)))
 (let (($x1099 (= c_______ left-to-right)))
 (let (($x1100 (and $x1099 $x1098)))
 (let (($x1130 (ite $x1100 $x1107 (ite $x1097 $x1108 (ite $x1095 $x1108 (ite $x1092 $x1116 (ite $x1090 $x1113 $x1116)))))))
 (let (($x1101 (= c_______ left-to-center)))
 (let (($x1102 (and $x1101 $x1098)))
 (ite $x1102 $x1116 $x1130)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x858 (left s________)))
 (let ((?x996 (left s_________)))
 (let (($x1256 (= ?x996 ?x858)))
 (let ((?x892 (right s________)))
 (let ((?x1223 (top ?x892)))
 (let ((?x1224 (stack ?x1223 ?x858)))
 (let (($x1250 (= ?x996 ?x1224)))
 (let (($x1226 ((_ is stack ) ?x892)))
 (let (($x1229 (= c________ right-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x1078 (center s________)))
 (let (($x1231 ((_ is stack ) ?x1078)))
 (let (($x1232 (= c________ center-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let ((?x1219 (top ?x1078)))
 (let ((?x1220 (stack ?x1219 ?x858)))
 (let (($x1247 (= ?x996 ?x1220)))
 (let (($x1234 (= c________ center-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x1029 (rest ?x858)))
 (let (($x1243 (= ?x996 ?x1029)))
 (let (($x1236 ((_ is stack ) ?x858)))
 (let (($x1237 (= c________ left-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let (($x1239 (= c________ left-to-center)))
 (let (($x1240 (and $x1239 $x1236)))
 (ite $x1240 $x1243 (ite $x1238 $x1243 (ite $x1235 $x1247 (ite $x1233 $x1256 (ite $x1230 $x1250 $x1256))))))))))))))))))))))))))))))))
(assert
 (let ((?x892 (right s________)))
 (let ((?x1030 (right s_________)))
 (let (($x1252 (= ?x1030 ?x892)))
 (let ((?x1222 (rest ?x892)))
 (let (($x1249 (= ?x1030 ?x1222)))
 (let (($x1226 ((_ is stack ) ?x892)))
 (let (($x1227 (= c________ right-to-center)))
 (let (($x1228 (and $x1227 $x1226)))
 (let (($x1229 (= c________ right-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x1078 (center s________)))
 (let ((?x1219 (top ?x1078)))
 (let ((?x1221 (stack ?x1219 ?x892)))
 (let (($x1248 (= ?x1030 ?x1221)))
 (let (($x1231 ((_ is stack ) ?x1078)))
 (let (($x1232 (= c________ center-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1234 (= c________ center-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x858 (left s________)))
 (let (($x1236 ((_ is stack ) ?x858)))
 (let (($x1237 (= c________ left-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let (($x1269 (ite $x1238 $x1252 (ite $x1235 $x1252 (ite $x1233 $x1248 (ite $x1230 $x1249 (ite $x1228 $x1249 $x1252)))))))
 (let ((?x1076 (top ?x858)))
 (let ((?x1215 (stack ?x1076 ?x892)))
 (let (($x1244 (= ?x1030 ?x1215)))
 (let (($x1239 (= c________ left-to-center)))
 (let (($x1240 (and $x1239 $x1236)))
 (ite $x1240 $x1244 $x1269)))))))))))))))))))))))))))))))
(assert
 (let ((?x1078 (center s________)))
 (let ((?x1216 (center s_________)))
 (let (($x1254 (= ?x1216 ?x1078)))
 (let ((?x892 (right s________)))
 (let ((?x1223 (top ?x892)))
 (let ((?x1225 (stack ?x1223 ?x1078)))
 (let (($x1251 (= ?x1216 ?x1225)))
 (let (($x1226 ((_ is stack ) ?x892)))
 (let (($x1227 (= c________ right-to-center)))
 (let (($x1228 (and $x1227 $x1226)))
 (let (($x1229 (= c________ right-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x1218 (rest ?x1078)))
 (let (($x1246 (= ?x1216 ?x1218)))
 (let (($x1231 ((_ is stack ) ?x1078)))
 (let (($x1232 (= c________ center-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1234 (= c________ center-to-left)))
 (let (($x1235 (and $x1234 $x1231)))
 (let ((?x858 (left s________)))
 (let ((?x1076 (top ?x858)))
 (let ((?x1217 (stack ?x1076 ?x1078)))
 (let (($x1245 (= ?x1216 ?x1217)))
 (let (($x1236 ((_ is stack ) ?x858)))
 (let (($x1237 (= c________ left-to-right)))
 (let (($x1238 (and $x1237 $x1236)))
 (let (($x1268 (ite $x1238 $x1245 (ite $x1235 $x1246 (ite $x1233 $x1246 (ite $x1230 $x1254 (ite $x1228 $x1251 $x1254)))))))
 (let (($x1239 (= c________ left-to-center)))
 (let (($x1240 (and $x1239 $x1236)))
 (ite $x1240 $x1254 $x1268)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x996 (left s_________)))
 (let ((?x1134 (left s__________)))
 (let (($x1394 (= ?x1134 ?x996)))
 (let ((?x1030 (right s_________)))
 (let ((?x1361 (top ?x1030)))
 (let ((?x1362 (stack ?x1361 ?x996)))
 (let (($x1388 (= ?x1134 ?x1362)))
 (let (($x1364 ((_ is stack ) ?x1030)))
 (let (($x1367 (= c_________ right-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x1216 (center s_________)))
 (let (($x1369 ((_ is stack ) ?x1216)))
 (let (($x1370 (= c_________ center-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let ((?x1357 (top ?x1216)))
 (let ((?x1358 (stack ?x1357 ?x996)))
 (let (($x1385 (= ?x1134 ?x1358)))
 (let (($x1372 (= c_________ center-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x1167 (rest ?x996)))
 (let (($x1381 (= ?x1134 ?x1167)))
 (let (($x1374 ((_ is stack ) ?x996)))
 (let (($x1375 (= c_________ left-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let (($x1377 (= c_________ left-to-center)))
 (let (($x1378 (and $x1377 $x1374)))
 (ite $x1378 $x1381 (ite $x1376 $x1381 (ite $x1373 $x1385 (ite $x1371 $x1394 (ite $x1368 $x1388 $x1394))))))))))))))))))))))))))))))))
(assert
 (let ((?x1030 (right s_________)))
 (let ((?x1168 (right s__________)))
 (let (($x1390 (= ?x1168 ?x1030)))
 (let ((?x1360 (rest ?x1030)))
 (let (($x1387 (= ?x1168 ?x1360)))
 (let (($x1364 ((_ is stack ) ?x1030)))
 (let (($x1365 (= c_________ right-to-center)))
 (let (($x1366 (and $x1365 $x1364)))
 (let (($x1367 (= c_________ right-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x1216 (center s_________)))
 (let ((?x1357 (top ?x1216)))
 (let ((?x1359 (stack ?x1357 ?x1030)))
 (let (($x1386 (= ?x1168 ?x1359)))
 (let (($x1369 ((_ is stack ) ?x1216)))
 (let (($x1370 (= c_________ center-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1372 (= c_________ center-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x996 (left s_________)))
 (let (($x1374 ((_ is stack ) ?x996)))
 (let (($x1375 (= c_________ left-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let (($x1407 (ite $x1376 $x1390 (ite $x1373 $x1390 (ite $x1371 $x1386 (ite $x1368 $x1387 (ite $x1366 $x1387 $x1390)))))))
 (let ((?x1214 (top ?x996)))
 (let ((?x1353 (stack ?x1214 ?x1030)))
 (let (($x1382 (= ?x1168 ?x1353)))
 (let (($x1377 (= c_________ left-to-center)))
 (let (($x1378 (and $x1377 $x1374)))
 (ite $x1378 $x1382 $x1407)))))))))))))))))))))))))))))))
(assert
 (let ((?x1216 (center s_________)))
 (let ((?x1354 (center s__________)))
 (let (($x1392 (= ?x1354 ?x1216)))
 (let ((?x1030 (right s_________)))
 (let ((?x1361 (top ?x1030)))
 (let ((?x1363 (stack ?x1361 ?x1216)))
 (let (($x1389 (= ?x1354 ?x1363)))
 (let (($x1364 ((_ is stack ) ?x1030)))
 (let (($x1365 (= c_________ right-to-center)))
 (let (($x1366 (and $x1365 $x1364)))
 (let (($x1367 (= c_________ right-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x1356 (rest ?x1216)))
 (let (($x1384 (= ?x1354 ?x1356)))
 (let (($x1369 ((_ is stack ) ?x1216)))
 (let (($x1370 (= c_________ center-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1372 (= c_________ center-to-left)))
 (let (($x1373 (and $x1372 $x1369)))
 (let ((?x996 (left s_________)))
 (let ((?x1214 (top ?x996)))
 (let ((?x1355 (stack ?x1214 ?x1216)))
 (let (($x1383 (= ?x1354 ?x1355)))
 (let (($x1374 ((_ is stack ) ?x996)))
 (let (($x1375 (= c_________ left-to-right)))
 (let (($x1376 (and $x1375 $x1374)))
 (let (($x1406 (ite $x1376 $x1383 (ite $x1373 $x1384 (ite $x1371 $x1384 (ite $x1368 $x1392 (ite $x1366 $x1389 $x1392)))))))
 (let (($x1377 (= c_________ left-to-center)))
 (let (($x1378 (and $x1377 $x1374)))
 (ite $x1378 $x1392 $x1406)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1134 (left s__________)))
 (let ((?x1272 (left s___________)))
 (let (($x1532 (= ?x1272 ?x1134)))
 (let ((?x1168 (right s__________)))
 (let ((?x1499 (top ?x1168)))
 (let ((?x1500 (stack ?x1499 ?x1134)))
 (let (($x1526 (= ?x1272 ?x1500)))
 (let (($x1502 ((_ is stack ) ?x1168)))
 (let (($x1505 (= c__________ right-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1354 (center s__________)))
 (let (($x1507 ((_ is stack ) ?x1354)))
 (let (($x1508 (= c__________ center-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let ((?x1495 (top ?x1354)))
 (let ((?x1496 (stack ?x1495 ?x1134)))
 (let (($x1523 (= ?x1272 ?x1496)))
 (let (($x1510 (= c__________ center-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1305 (rest ?x1134)))
 (let (($x1519 (= ?x1272 ?x1305)))
 (let (($x1512 ((_ is stack ) ?x1134)))
 (let (($x1513 (= c__________ left-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let (($x1515 (= c__________ left-to-center)))
 (let (($x1516 (and $x1515 $x1512)))
 (ite $x1516 $x1519 (ite $x1514 $x1519 (ite $x1511 $x1523 (ite $x1509 $x1532 (ite $x1506 $x1526 $x1532))))))))))))))))))))))))))))))))
(assert
 (let ((?x1168 (right s__________)))
 (let ((?x1306 (right s___________)))
 (let (($x1528 (= ?x1306 ?x1168)))
 (let ((?x1498 (rest ?x1168)))
 (let (($x1525 (= ?x1306 ?x1498)))
 (let (($x1502 ((_ is stack ) ?x1168)))
 (let (($x1503 (= c__________ right-to-center)))
 (let (($x1504 (and $x1503 $x1502)))
 (let (($x1505 (= c__________ right-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1354 (center s__________)))
 (let ((?x1495 (top ?x1354)))
 (let ((?x1497 (stack ?x1495 ?x1168)))
 (let (($x1524 (= ?x1306 ?x1497)))
 (let (($x1507 ((_ is stack ) ?x1354)))
 (let (($x1508 (= c__________ center-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1510 (= c__________ center-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1134 (left s__________)))
 (let (($x1512 ((_ is stack ) ?x1134)))
 (let (($x1513 (= c__________ left-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let (($x1545 (ite $x1514 $x1528 (ite $x1511 $x1528 (ite $x1509 $x1524 (ite $x1506 $x1525 (ite $x1504 $x1525 $x1528)))))))
 (let ((?x1352 (top ?x1134)))
 (let ((?x1491 (stack ?x1352 ?x1168)))
 (let (($x1520 (= ?x1306 ?x1491)))
 (let (($x1515 (= c__________ left-to-center)))
 (let (($x1516 (and $x1515 $x1512)))
 (ite $x1516 $x1520 $x1545)))))))))))))))))))))))))))))))
(assert
 (let ((?x1354 (center s__________)))
 (let ((?x1492 (center s___________)))
 (let (($x1530 (= ?x1492 ?x1354)))
 (let ((?x1168 (right s__________)))
 (let ((?x1499 (top ?x1168)))
 (let ((?x1501 (stack ?x1499 ?x1354)))
 (let (($x1527 (= ?x1492 ?x1501)))
 (let (($x1502 ((_ is stack ) ?x1168)))
 (let (($x1503 (= c__________ right-to-center)))
 (let (($x1504 (and $x1503 $x1502)))
 (let (($x1505 (= c__________ right-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1494 (rest ?x1354)))
 (let (($x1522 (= ?x1492 ?x1494)))
 (let (($x1507 ((_ is stack ) ?x1354)))
 (let (($x1508 (= c__________ center-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1510 (= c__________ center-to-left)))
 (let (($x1511 (and $x1510 $x1507)))
 (let ((?x1134 (left s__________)))
 (let ((?x1352 (top ?x1134)))
 (let ((?x1493 (stack ?x1352 ?x1354)))
 (let (($x1521 (= ?x1492 ?x1493)))
 (let (($x1512 ((_ is stack ) ?x1134)))
 (let (($x1513 (= c__________ left-to-right)))
 (let (($x1514 (and $x1513 $x1512)))
 (let (($x1544 (ite $x1514 $x1521 (ite $x1511 $x1522 (ite $x1509 $x1522 (ite $x1506 $x1530 (ite $x1504 $x1527 $x1530)))))))
 (let (($x1515 (= c__________ left-to-center)))
 (let (($x1516 (and $x1515 $x1512)))
 (ite $x1516 $x1530 $x1544)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1272 (left s___________)))
 (let ((?x1410 (left s____________)))
 (let (($x1670 (= ?x1410 ?x1272)))
 (let ((?x1306 (right s___________)))
 (let ((?x1637 (top ?x1306)))
 (let ((?x1638 (stack ?x1637 ?x1272)))
 (let (($x1664 (= ?x1410 ?x1638)))
 (let (($x1640 ((_ is stack ) ?x1306)))
 (let (($x1643 (= c___________ right-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1492 (center s___________)))
 (let (($x1645 ((_ is stack ) ?x1492)))
 (let (($x1646 (= c___________ center-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let ((?x1633 (top ?x1492)))
 (let ((?x1634 (stack ?x1633 ?x1272)))
 (let (($x1661 (= ?x1410 ?x1634)))
 (let (($x1648 (= c___________ center-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1443 (rest ?x1272)))
 (let (($x1657 (= ?x1410 ?x1443)))
 (let (($x1650 ((_ is stack ) ?x1272)))
 (let (($x1651 (= c___________ left-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let (($x1653 (= c___________ left-to-center)))
 (let (($x1654 (and $x1653 $x1650)))
 (ite $x1654 $x1657 (ite $x1652 $x1657 (ite $x1649 $x1661 (ite $x1647 $x1670 (ite $x1644 $x1664 $x1670))))))))))))))))))))))))))))))))
(assert
 (let ((?x1306 (right s___________)))
 (let ((?x1444 (right s____________)))
 (let (($x1666 (= ?x1444 ?x1306)))
 (let ((?x1636 (rest ?x1306)))
 (let (($x1663 (= ?x1444 ?x1636)))
 (let (($x1640 ((_ is stack ) ?x1306)))
 (let (($x1641 (= c___________ right-to-center)))
 (let (($x1642 (and $x1641 $x1640)))
 (let (($x1643 (= c___________ right-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1492 (center s___________)))
 (let ((?x1633 (top ?x1492)))
 (let ((?x1635 (stack ?x1633 ?x1306)))
 (let (($x1662 (= ?x1444 ?x1635)))
 (let (($x1645 ((_ is stack ) ?x1492)))
 (let (($x1646 (= c___________ center-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1648 (= c___________ center-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1272 (left s___________)))
 (let (($x1650 ((_ is stack ) ?x1272)))
 (let (($x1651 (= c___________ left-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let (($x1683 (ite $x1652 $x1666 (ite $x1649 $x1666 (ite $x1647 $x1662 (ite $x1644 $x1663 (ite $x1642 $x1663 $x1666)))))))
 (let ((?x1490 (top ?x1272)))
 (let ((?x1629 (stack ?x1490 ?x1306)))
 (let (($x1658 (= ?x1444 ?x1629)))
 (let (($x1653 (= c___________ left-to-center)))
 (let (($x1654 (and $x1653 $x1650)))
 (ite $x1654 $x1658 $x1683)))))))))))))))))))))))))))))))
(assert
 (let ((?x1492 (center s___________)))
 (let ((?x1630 (center s____________)))
 (let (($x1668 (= ?x1630 ?x1492)))
 (let ((?x1306 (right s___________)))
 (let ((?x1637 (top ?x1306)))
 (let ((?x1639 (stack ?x1637 ?x1492)))
 (let (($x1665 (= ?x1630 ?x1639)))
 (let (($x1640 ((_ is stack ) ?x1306)))
 (let (($x1641 (= c___________ right-to-center)))
 (let (($x1642 (and $x1641 $x1640)))
 (let (($x1643 (= c___________ right-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1632 (rest ?x1492)))
 (let (($x1660 (= ?x1630 ?x1632)))
 (let (($x1645 ((_ is stack ) ?x1492)))
 (let (($x1646 (= c___________ center-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1648 (= c___________ center-to-left)))
 (let (($x1649 (and $x1648 $x1645)))
 (let ((?x1272 (left s___________)))
 (let ((?x1490 (top ?x1272)))
 (let ((?x1631 (stack ?x1490 ?x1492)))
 (let (($x1659 (= ?x1630 ?x1631)))
 (let (($x1650 ((_ is stack ) ?x1272)))
 (let (($x1651 (= c___________ left-to-right)))
 (let (($x1652 (and $x1651 $x1650)))
 (let (($x1682 (ite $x1652 $x1659 (ite $x1649 $x1660 (ite $x1647 $x1660 (ite $x1644 $x1668 (ite $x1642 $x1665 $x1668)))))))
 (let (($x1653 (= c___________ left-to-center)))
 (let (($x1654 (and $x1653 $x1650)))
 (ite $x1654 $x1668 $x1682)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1410 (left s____________)))
 (let ((?x1548 (left s_____________)))
 (let (($x1808 (= ?x1548 ?x1410)))
 (let ((?x1444 (right s____________)))
 (let ((?x1775 (top ?x1444)))
 (let ((?x1776 (stack ?x1775 ?x1410)))
 (let (($x1802 (= ?x1548 ?x1776)))
 (let (($x1778 ((_ is stack ) ?x1444)))
 (let (($x1781 (= c____________ right-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1630 (center s____________)))
 (let (($x1783 ((_ is stack ) ?x1630)))
 (let (($x1784 (= c____________ center-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let ((?x1771 (top ?x1630)))
 (let ((?x1772 (stack ?x1771 ?x1410)))
 (let (($x1799 (= ?x1548 ?x1772)))
 (let (($x1786 (= c____________ center-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1581 (rest ?x1410)))
 (let (($x1795 (= ?x1548 ?x1581)))
 (let (($x1788 ((_ is stack ) ?x1410)))
 (let (($x1789 (= c____________ left-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let (($x1791 (= c____________ left-to-center)))
 (let (($x1792 (and $x1791 $x1788)))
 (ite $x1792 $x1795 (ite $x1790 $x1795 (ite $x1787 $x1799 (ite $x1785 $x1808 (ite $x1782 $x1802 $x1808))))))))))))))))))))))))))))))))
(assert
 (let ((?x1444 (right s____________)))
 (let ((?x1582 (right s_____________)))
 (let (($x1804 (= ?x1582 ?x1444)))
 (let ((?x1774 (rest ?x1444)))
 (let (($x1801 (= ?x1582 ?x1774)))
 (let (($x1778 ((_ is stack ) ?x1444)))
 (let (($x1779 (= c____________ right-to-center)))
 (let (($x1780 (and $x1779 $x1778)))
 (let (($x1781 (= c____________ right-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1630 (center s____________)))
 (let ((?x1771 (top ?x1630)))
 (let ((?x1773 (stack ?x1771 ?x1444)))
 (let (($x1800 (= ?x1582 ?x1773)))
 (let (($x1783 ((_ is stack ) ?x1630)))
 (let (($x1784 (= c____________ center-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1786 (= c____________ center-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1410 (left s____________)))
 (let (($x1788 ((_ is stack ) ?x1410)))
 (let (($x1789 (= c____________ left-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let (($x1821 (ite $x1790 $x1804 (ite $x1787 $x1804 (ite $x1785 $x1800 (ite $x1782 $x1801 (ite $x1780 $x1801 $x1804)))))))
 (let ((?x1628 (top ?x1410)))
 (let ((?x1767 (stack ?x1628 ?x1444)))
 (let (($x1796 (= ?x1582 ?x1767)))
 (let (($x1791 (= c____________ left-to-center)))
 (let (($x1792 (and $x1791 $x1788)))
 (ite $x1792 $x1796 $x1821)))))))))))))))))))))))))))))))
(assert
 (let ((?x1630 (center s____________)))
 (let ((?x1768 (center s_____________)))
 (let (($x1806 (= ?x1768 ?x1630)))
 (let ((?x1444 (right s____________)))
 (let ((?x1775 (top ?x1444)))
 (let ((?x1777 (stack ?x1775 ?x1630)))
 (let (($x1803 (= ?x1768 ?x1777)))
 (let (($x1778 ((_ is stack ) ?x1444)))
 (let (($x1779 (= c____________ right-to-center)))
 (let (($x1780 (and $x1779 $x1778)))
 (let (($x1781 (= c____________ right-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1770 (rest ?x1630)))
 (let (($x1798 (= ?x1768 ?x1770)))
 (let (($x1783 ((_ is stack ) ?x1630)))
 (let (($x1784 (= c____________ center-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1786 (= c____________ center-to-left)))
 (let (($x1787 (and $x1786 $x1783)))
 (let ((?x1410 (left s____________)))
 (let ((?x1628 (top ?x1410)))
 (let ((?x1769 (stack ?x1628 ?x1630)))
 (let (($x1797 (= ?x1768 ?x1769)))
 (let (($x1788 ((_ is stack ) ?x1410)))
 (let (($x1789 (= c____________ left-to-right)))
 (let (($x1790 (and $x1789 $x1788)))
 (let (($x1820 (ite $x1790 $x1797 (ite $x1787 $x1798 (ite $x1785 $x1798 (ite $x1782 $x1806 (ite $x1780 $x1803 $x1806)))))))
 (let (($x1791 (= c____________ left-to-center)))
 (let (($x1792 (and $x1791 $x1788)))
 (ite $x1792 $x1806 $x1820)))))))))))))))))))))))))))))))
(assert
 (let ((?x68 (stack H (stack G (stack E (stack D (stack C (stack A empty))))))))
 (let ((?x73 (stack S (stack N (stack M (stack L (stack J ?x68)))))))
 (let ((?x1582 (right s_____________)))
 (let (($x1824 (= ?x1582 ?x73)))
 (let ((?x61 (stack Q (stack R (stack P (stack B (stack K (stack O empty))))))))
 (let ((?x63 (stack T (stack U ?x61))))
 (let ((?x1768 (center s_____________)))
 (let (($x1855 (= ?x1768 ?x63)))
 (let ((?x54 (stack F (stack I empty))))
 (let ((?x1548 (left s_____________)))
 (let (($x1856 (= ?x1548 ?x54)))
 (let (($x1858 (not (and $x1856 $x1855 $x1824))))
 (not $x1858))))))))))))))
(check-sat)
(exit)
