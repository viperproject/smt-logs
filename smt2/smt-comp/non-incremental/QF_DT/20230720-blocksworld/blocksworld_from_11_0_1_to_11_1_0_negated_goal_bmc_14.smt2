(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x25 (stack H empty)))
 (let ((?x24 (stack C ?x25)))
 (let ((?x26 (stack G ?x24)))
 (let ((?x27 (stack B ?x26)))
 (let ((?x28 (stack I ?x27)))
 (let ((?x29 (stack K ?x28)))
 (let ((?x30 (stack A ?x29)))
 (let ((?x31 (stack F ?x30)))
 (let ((?x32 (stack J ?x31)))
 (let ((?x33 (stack E ?x32)))
 (let ((?x34 (stack D ?x33)))
 (let ((?x94 (left s_tmp_)))
 (= ?x94 ?x34))))))))))))))
(assert
 (let ((?x97 (center s_tmp__)))
 (= ?x97 empty)))
(assert
 (let ((?x35 (stack L empty)))
 (let ((?x100 (right s_tmp___)))
 (= ?x100 ?x35))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x127 (left s_tmp__)))
 (= (left s_tmp___) ?x127)))
(assert
 (let ((?x97 (center s_tmp__)))
 (= (center s_tmp___) ?x97)))
(assert
 (let ((?x131 (center s_tmp_)))
 (= ?x131 (center s_tmp))))
(assert
 (let ((?x134 (right s_tmp_)))
 (= ?x134 (right s_tmp))))
(assert
 (let ((?x94 (left s_tmp_)))
 (let ((?x127 (left s_tmp__)))
 (= ?x127 ?x94))))
(assert
 (let ((?x134 (right s_tmp_)))
 (let ((?x138 (right s_tmp__)))
 (= ?x138 ?x134))))
(assert
 (= c__ c!1))
(assert
 (let ((?x71 (left s_)))
 (let ((?x245 (left s__)))
 (let (($x263 (= ?x245 ?x71)))
 (let ((?x74 (right s_)))
 (let (($x218 ((_ is stack ) ?x74)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x222 (and $x227 $x218)))
 (let ((?x76 (center s_)))
 (let (($x223 ((_ is stack ) ?x76)))
 (let (($x240 (and (= c_ center-to-right) $x223)))
 (let (($x242 (and (= c_ center-to-left) $x223)))
 (let (($x272 (ite $x242 (= ?x245 (stack (top ?x76) ?x71)) (ite $x240 $x263 (ite $x222 (= ?x245 (stack (top ?x74) ?x71)) $x263)))))
 (let (($x250 (= ?x245 (rest ?x71))))
 (let (($x228 ((_ is stack ) ?x71)))
 (let (($x229 (= c_ left-to-right)))
 (let (($x230 (and $x229 $x228)))
 (let (($x219 (= c_ left-to-center)))
 (let (($x220 (and $x219 $x228)))
 (ite $x220 $x250 (ite $x230 $x250 $x272)))))))))))))))))))))
(assert
 (let ((?x74 (right s_)))
 (let ((?x247 (right s__)))
 (let (($x259 (= ?x247 ?x74)))
 (let (($x256 (= ?x247 (rest ?x74))))
 (let (($x218 ((_ is stack ) ?x74)))
 (let (($x225 (= c_ right-to-center)))
 (let (($x226 (and $x225 $x218)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x222 (and $x227 $x218)))
 (let ((?x76 (center s_)))
 (let (($x223 ((_ is stack ) ?x76)))
 (let (($x240 (and (= c_ center-to-right) $x223)))
 (let (($x269 (ite $x240 (= ?x247 (stack (top ?x76) ?x74)) (ite $x222 $x256 (ite $x226 $x256 $x259)))))
 (let (($x242 (and (= c_ center-to-left) $x223)))
 (let ((?x71 (left s_)))
 (let (($x228 ((_ is stack ) ?x71)))
 (let (($x229 (= c_ left-to-right)))
 (let (($x230 (and $x229 $x228)))
 (let (($x219 (= c_ left-to-center)))
 (let (($x220 (and $x219 $x228)))
 (ite $x220 (= ?x247 (stack (top ?x71) ?x74)) (ite $x230 $x259 (ite $x242 $x259 $x269))))))))))))))))))))))))
(assert
 (let ((?x76 (center s_)))
 (let ((?x232 (center s__)))
 (let (($x261 (= ?x232 ?x76)))
 (let ((?x74 (right s_)))
 (let (($x218 ((_ is stack ) ?x74)))
 (let (($x225 (= c_ right-to-center)))
 (let (($x226 (and $x225 $x218)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x222 (and $x227 $x218)))
 (let (($x253 (= ?x232 (rest ?x76))))
 (let (($x223 ((_ is stack ) ?x76)))
 (let (($x240 (and (= c_ center-to-right) $x223)))
 (let (($x268 (ite $x240 $x253 (ite $x222 $x261 (ite $x226 (= ?x232 (stack (top ?x74) ?x76)) $x261)))))
 (let (($x242 (and (= c_ center-to-left) $x223)))
 (let ((?x71 (left s_)))
 (let (($x228 ((_ is stack ) ?x71)))
 (let (($x229 (= c_ left-to-right)))
 (let (($x230 (and $x229 $x228)))
 (let (($x219 (= c_ left-to-center)))
 (let (($x220 (and $x219 $x228)))
 (ite $x220 $x261 (ite $x230 (= ?x232 (stack (top ?x71) ?x76)) (ite $x242 $x253 $x268))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x245 (left s__)))
 (let ((?x141 (left s___)))
 (let (($x369 (= ?x141 ?x245)))
 (let ((?x247 (right s__)))
 (let ((?x336 (top ?x247)))
 (let ((?x337 (stack ?x336 ?x245)))
 (let (($x363 (= ?x141 ?x337)))
 (let (($x339 ((_ is stack ) ?x247)))
 (let (($x342 (= c__ right-to-left)))
 (let (($x343 (and $x342 $x339)))
 (let ((?x232 (center s__)))
 (let (($x344 ((_ is stack ) ?x232)))
 (let (($x345 (= c__ center-to-right)))
 (let (($x346 (and $x345 $x344)))
 (let ((?x332 (top ?x232)))
 (let ((?x333 (stack ?x332 ?x245)))
 (let (($x360 (= ?x141 ?x333)))
 (let (($x347 (= c__ center-to-left)))
 (let (($x348 (and $x347 $x344)))
 (let ((?x143 (rest ?x245)))
 (let (($x356 (= ?x141 ?x143)))
 (let (($x349 ((_ is stack ) ?x245)))
 (let (($x350 (= c__ left-to-right)))
 (let (($x351 (and $x350 $x349)))
 (let (($x352 (= c__ left-to-center)))
 (let (($x353 (and $x352 $x349)))
 (ite $x353 $x356 (ite $x351 $x356 (ite $x348 $x360 (ite $x346 $x369 (ite $x343 $x363 $x369))))))))))))))))))))))))))))))))
(assert
 (let ((?x247 (right s__)))
 (let ((?x144 (right s___)))
 (let (($x365 (= ?x144 ?x247)))
 (let ((?x335 (rest ?x247)))
 (let (($x362 (= ?x144 ?x335)))
 (let (($x339 ((_ is stack ) ?x247)))
 (let (($x340 (= c__ right-to-center)))
 (let (($x341 (and $x340 $x339)))
 (let (($x342 (= c__ right-to-left)))
 (let (($x343 (and $x342 $x339)))
 (let ((?x232 (center s__)))
 (let ((?x332 (top ?x232)))
 (let ((?x334 (stack ?x332 ?x247)))
 (let (($x361 (= ?x144 ?x334)))
 (let (($x344 ((_ is stack ) ?x232)))
 (let (($x345 (= c__ center-to-right)))
 (let (($x346 (and $x345 $x344)))
 (let (($x347 (= c__ center-to-left)))
 (let (($x348 (and $x347 $x344)))
 (let ((?x245 (left s__)))
 (let (($x349 ((_ is stack ) ?x245)))
 (let (($x350 (= c__ left-to-right)))
 (let (($x351 (and $x350 $x349)))
 (let (($x382 (ite $x351 $x365 (ite $x348 $x365 (ite $x346 $x361 (ite $x343 $x362 (ite $x341 $x362 $x365)))))))
 (let ((?x215 (top ?x245)))
 (let ((?x328 (stack ?x215 ?x247)))
 (let (($x357 (= ?x144 ?x328)))
 (let (($x352 (= c__ left-to-center)))
 (let (($x353 (and $x352 $x349)))
 (ite $x353 $x357 $x382)))))))))))))))))))))))))))))))
(assert
 (let ((?x232 (center s__)))
 (let ((?x329 (center s___)))
 (let (($x367 (= ?x329 ?x232)))
 (let ((?x247 (right s__)))
 (let ((?x336 (top ?x247)))
 (let ((?x338 (stack ?x336 ?x232)))
 (let (($x364 (= ?x329 ?x338)))
 (let (($x339 ((_ is stack ) ?x247)))
 (let (($x340 (= c__ right-to-center)))
 (let (($x341 (and $x340 $x339)))
 (let (($x342 (= c__ right-to-left)))
 (let (($x343 (and $x342 $x339)))
 (let ((?x331 (rest ?x232)))
 (let (($x359 (= ?x329 ?x331)))
 (let (($x344 ((_ is stack ) ?x232)))
 (let (($x345 (= c__ center-to-right)))
 (let (($x346 (and $x345 $x344)))
 (let (($x347 (= c__ center-to-left)))
 (let (($x348 (and $x347 $x344)))
 (let ((?x245 (left s__)))
 (let ((?x215 (top ?x245)))
 (let ((?x330 (stack ?x215 ?x232)))
 (let (($x358 (= ?x329 ?x330)))
 (let (($x349 ((_ is stack ) ?x245)))
 (let (($x350 (= c__ left-to-right)))
 (let (($x351 (and $x350 $x349)))
 (let (($x381 (ite $x351 $x358 (ite $x348 $x359 (ite $x346 $x359 (ite $x343 $x367 (ite $x341 $x364 $x367)))))))
 (let (($x352 (= c__ left-to-center)))
 (let (($x353 (and $x352 $x349)))
 (ite $x353 $x367 $x381)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x141 (left s___)))
 (let ((?x308 (left s____)))
 (let (($x508 (= ?x308 ?x141)))
 (let ((?x144 (right s___)))
 (let ((?x475 (top ?x144)))
 (let ((?x476 (stack ?x475 ?x141)))
 (let (($x502 (= ?x308 ?x476)))
 (let (($x478 ((_ is stack ) ?x144)))
 (let (($x481 (= c___ right-to-left)))
 (let (($x482 (and $x481 $x478)))
 (let ((?x329 (center s___)))
 (let (($x483 ((_ is stack ) ?x329)))
 (let (($x484 (= c___ center-to-right)))
 (let (($x485 (and $x484 $x483)))
 (let ((?x471 (top ?x329)))
 (let ((?x472 (stack ?x471 ?x141)))
 (let (($x499 (= ?x308 ?x472)))
 (let (($x486 (= c___ center-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x309 (rest ?x141)))
 (let (($x495 (= ?x308 ?x309)))
 (let (($x488 ((_ is stack ) ?x141)))
 (let (($x489 (= c___ left-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let (($x491 (= c___ left-to-center)))
 (let (($x492 (and $x491 $x488)))
 (ite $x492 $x495 (ite $x490 $x495 (ite $x487 $x499 (ite $x485 $x508 (ite $x482 $x502 $x508))))))))))))))))))))))))))))))))
(assert
 (let ((?x144 (right s___)))
 (let ((?x327 (right s____)))
 (let (($x504 (= ?x327 ?x144)))
 (let ((?x474 (rest ?x144)))
 (let (($x501 (= ?x327 ?x474)))
 (let (($x478 ((_ is stack ) ?x144)))
 (let (($x479 (= c___ right-to-center)))
 (let (($x480 (and $x479 $x478)))
 (let (($x481 (= c___ right-to-left)))
 (let (($x482 (and $x481 $x478)))
 (let ((?x329 (center s___)))
 (let ((?x471 (top ?x329)))
 (let ((?x473 (stack ?x471 ?x144)))
 (let (($x500 (= ?x327 ?x473)))
 (let (($x483 ((_ is stack ) ?x329)))
 (let (($x484 (= c___ center-to-right)))
 (let (($x485 (and $x484 $x483)))
 (let (($x486 (= c___ center-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x141 (left s___)))
 (let (($x488 ((_ is stack ) ?x141)))
 (let (($x489 (= c___ left-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let (($x521 (ite $x490 $x504 (ite $x487 $x504 (ite $x485 $x500 (ite $x482 $x501 (ite $x480 $x501 $x504)))))))
 (let ((?x466 (top ?x141)))
 (let ((?x467 (stack ?x466 ?x144)))
 (let (($x496 (= ?x327 ?x467)))
 (let (($x491 (= c___ left-to-center)))
 (let (($x492 (and $x491 $x488)))
 (ite $x492 $x496 $x521)))))))))))))))))))))))))))))))
(assert
 (let ((?x329 (center s___)))
 (let ((?x468 (center s____)))
 (let (($x506 (= ?x468 ?x329)))
 (let ((?x144 (right s___)))
 (let ((?x475 (top ?x144)))
 (let ((?x477 (stack ?x475 ?x329)))
 (let (($x503 (= ?x468 ?x477)))
 (let (($x478 ((_ is stack ) ?x144)))
 (let (($x479 (= c___ right-to-center)))
 (let (($x480 (and $x479 $x478)))
 (let (($x481 (= c___ right-to-left)))
 (let (($x482 (and $x481 $x478)))
 (let ((?x470 (rest ?x329)))
 (let (($x498 (= ?x468 ?x470)))
 (let (($x483 ((_ is stack ) ?x329)))
 (let (($x484 (= c___ center-to-right)))
 (let (($x485 (and $x484 $x483)))
 (let (($x486 (= c___ center-to-left)))
 (let (($x487 (and $x486 $x483)))
 (let ((?x141 (left s___)))
 (let ((?x466 (top ?x141)))
 (let ((?x469 (stack ?x466 ?x329)))
 (let (($x497 (= ?x468 ?x469)))
 (let (($x488 ((_ is stack ) ?x141)))
 (let (($x489 (= c___ left-to-right)))
 (let (($x490 (and $x489 $x488)))
 (let (($x520 (ite $x490 $x497 (ite $x487 $x498 (ite $x485 $x498 (ite $x482 $x506 (ite $x480 $x503 $x506)))))))
 (let (($x491 (= c___ left-to-center)))
 (let (($x492 (and $x491 $x488)))
 (ite $x492 $x506 $x520)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x308 (left s____)))
 (let ((?x385 (left s_____)))
 (let (($x646 (= ?x385 ?x308)))
 (let ((?x327 (right s____)))
 (let ((?x613 (top ?x327)))
 (let ((?x614 (stack ?x613 ?x308)))
 (let (($x640 (= ?x385 ?x614)))
 (let (($x616 ((_ is stack ) ?x327)))
 (let (($x619 (= c____ right-to-left)))
 (let (($x620 (and $x619 $x616)))
 (let ((?x468 (center s____)))
 (let (($x621 ((_ is stack ) ?x468)))
 (let (($x622 (= c____ center-to-right)))
 (let (($x623 (and $x622 $x621)))
 (let ((?x609 (top ?x468)))
 (let ((?x610 (stack ?x609 ?x308)))
 (let (($x637 (= ?x385 ?x610)))
 (let (($x624 (= c____ center-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x418 (rest ?x308)))
 (let (($x633 (= ?x385 ?x418)))
 (let (($x626 ((_ is stack ) ?x308)))
 (let (($x627 (= c____ left-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let (($x629 (= c____ left-to-center)))
 (let (($x630 (and $x629 $x626)))
 (ite $x630 $x633 (ite $x628 $x633 (ite $x625 $x637 (ite $x623 $x646 (ite $x620 $x640 $x646))))))))))))))))))))))))))))))))
(assert
 (let ((?x327 (right s____)))
 (let ((?x419 (right s_____)))
 (let (($x642 (= ?x419 ?x327)))
 (let ((?x612 (rest ?x327)))
 (let (($x639 (= ?x419 ?x612)))
 (let (($x616 ((_ is stack ) ?x327)))
 (let (($x617 (= c____ right-to-center)))
 (let (($x618 (and $x617 $x616)))
 (let (($x619 (= c____ right-to-left)))
 (let (($x620 (and $x619 $x616)))
 (let ((?x468 (center s____)))
 (let ((?x609 (top ?x468)))
 (let ((?x611 (stack ?x609 ?x327)))
 (let (($x638 (= ?x419 ?x611)))
 (let (($x621 ((_ is stack ) ?x468)))
 (let (($x622 (= c____ center-to-right)))
 (let (($x623 (and $x622 $x621)))
 (let (($x624 (= c____ center-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x308 (left s____)))
 (let (($x626 ((_ is stack ) ?x308)))
 (let (($x627 (= c____ left-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let (($x659 (ite $x628 $x642 (ite $x625 $x642 (ite $x623 $x638 (ite $x620 $x639 (ite $x618 $x639 $x642)))))))
 (let ((?x465 (top ?x308)))
 (let ((?x605 (stack ?x465 ?x327)))
 (let (($x634 (= ?x419 ?x605)))
 (let (($x629 (= c____ left-to-center)))
 (let (($x630 (and $x629 $x626)))
 (ite $x630 $x634 $x659)))))))))))))))))))))))))))))))
(assert
 (let ((?x468 (center s____)))
 (let ((?x606 (center s_____)))
 (let (($x644 (= ?x606 ?x468)))
 (let ((?x327 (right s____)))
 (let ((?x613 (top ?x327)))
 (let ((?x615 (stack ?x613 ?x468)))
 (let (($x641 (= ?x606 ?x615)))
 (let (($x616 ((_ is stack ) ?x327)))
 (let (($x617 (= c____ right-to-center)))
 (let (($x618 (and $x617 $x616)))
 (let (($x619 (= c____ right-to-left)))
 (let (($x620 (and $x619 $x616)))
 (let ((?x608 (rest ?x468)))
 (let (($x636 (= ?x606 ?x608)))
 (let (($x621 ((_ is stack ) ?x468)))
 (let (($x622 (= c____ center-to-right)))
 (let (($x623 (and $x622 $x621)))
 (let (($x624 (= c____ center-to-left)))
 (let (($x625 (and $x624 $x621)))
 (let ((?x308 (left s____)))
 (let ((?x465 (top ?x308)))
 (let ((?x607 (stack ?x465 ?x468)))
 (let (($x635 (= ?x606 ?x607)))
 (let (($x626 ((_ is stack ) ?x308)))
 (let (($x627 (= c____ left-to-right)))
 (let (($x628 (and $x627 $x626)))
 (let (($x658 (ite $x628 $x635 (ite $x625 $x636 (ite $x623 $x636 (ite $x620 $x644 (ite $x618 $x641 $x644)))))))
 (let (($x629 (= c____ left-to-center)))
 (let (($x630 (and $x629 $x626)))
 (ite $x630 $x644 $x658)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x385 (left s_____)))
 (let ((?x524 (left s______)))
 (let (($x784 (= ?x524 ?x385)))
 (let ((?x419 (right s_____)))
 (let ((?x751 (top ?x419)))
 (let ((?x752 (stack ?x751 ?x385)))
 (let (($x778 (= ?x524 ?x752)))
 (let (($x754 ((_ is stack ) ?x419)))
 (let (($x757 (= c_____ right-to-left)))
 (let (($x758 (and $x757 $x754)))
 (let ((?x606 (center s_____)))
 (let (($x759 ((_ is stack ) ?x606)))
 (let (($x760 (= c_____ center-to-right)))
 (let (($x761 (and $x760 $x759)))
 (let ((?x747 (top ?x606)))
 (let ((?x748 (stack ?x747 ?x385)))
 (let (($x775 (= ?x524 ?x748)))
 (let (($x762 (= c_____ center-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x557 (rest ?x385)))
 (let (($x771 (= ?x524 ?x557)))
 (let (($x764 ((_ is stack ) ?x385)))
 (let (($x765 (= c_____ left-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let (($x767 (= c_____ left-to-center)))
 (let (($x768 (and $x767 $x764)))
 (ite $x768 $x771 (ite $x766 $x771 (ite $x763 $x775 (ite $x761 $x784 (ite $x758 $x778 $x784))))))))))))))))))))))))))))))))
(assert
 (let ((?x419 (right s_____)))
 (let ((?x558 (right s______)))
 (let (($x780 (= ?x558 ?x419)))
 (let ((?x750 (rest ?x419)))
 (let (($x777 (= ?x558 ?x750)))
 (let (($x754 ((_ is stack ) ?x419)))
 (let (($x755 (= c_____ right-to-center)))
 (let (($x756 (and $x755 $x754)))
 (let (($x757 (= c_____ right-to-left)))
 (let (($x758 (and $x757 $x754)))
 (let ((?x606 (center s_____)))
 (let ((?x747 (top ?x606)))
 (let ((?x749 (stack ?x747 ?x419)))
 (let (($x776 (= ?x558 ?x749)))
 (let (($x759 ((_ is stack ) ?x606)))
 (let (($x760 (= c_____ center-to-right)))
 (let (($x761 (and $x760 $x759)))
 (let (($x762 (= c_____ center-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x385 (left s_____)))
 (let (($x764 ((_ is stack ) ?x385)))
 (let (($x765 (= c_____ left-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let (($x797 (ite $x766 $x780 (ite $x763 $x780 (ite $x761 $x776 (ite $x758 $x777 (ite $x756 $x777 $x780)))))))
 (let ((?x604 (top ?x385)))
 (let ((?x743 (stack ?x604 ?x419)))
 (let (($x772 (= ?x558 ?x743)))
 (let (($x767 (= c_____ left-to-center)))
 (let (($x768 (and $x767 $x764)))
 (ite $x768 $x772 $x797)))))))))))))))))))))))))))))))
(assert
 (let ((?x606 (center s_____)))
 (let ((?x744 (center s______)))
 (let (($x782 (= ?x744 ?x606)))
 (let ((?x419 (right s_____)))
 (let ((?x751 (top ?x419)))
 (let ((?x753 (stack ?x751 ?x606)))
 (let (($x779 (= ?x744 ?x753)))
 (let (($x754 ((_ is stack ) ?x419)))
 (let (($x755 (= c_____ right-to-center)))
 (let (($x756 (and $x755 $x754)))
 (let (($x757 (= c_____ right-to-left)))
 (let (($x758 (and $x757 $x754)))
 (let ((?x746 (rest ?x606)))
 (let (($x774 (= ?x744 ?x746)))
 (let (($x759 ((_ is stack ) ?x606)))
 (let (($x760 (= c_____ center-to-right)))
 (let (($x761 (and $x760 $x759)))
 (let (($x762 (= c_____ center-to-left)))
 (let (($x763 (and $x762 $x759)))
 (let ((?x385 (left s_____)))
 (let ((?x604 (top ?x385)))
 (let ((?x745 (stack ?x604 ?x606)))
 (let (($x773 (= ?x744 ?x745)))
 (let (($x764 ((_ is stack ) ?x385)))
 (let (($x765 (= c_____ left-to-right)))
 (let (($x766 (and $x765 $x764)))
 (let (($x796 (ite $x766 $x773 (ite $x763 $x774 (ite $x761 $x774 (ite $x758 $x782 (ite $x756 $x779 $x782)))))))
 (let (($x767 (= c_____ left-to-center)))
 (let (($x768 (and $x767 $x764)))
 (ite $x768 $x782 $x796)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x524 (left s______)))
 (let ((?x662 (left s_______)))
 (let (($x922 (= ?x662 ?x524)))
 (let ((?x558 (right s______)))
 (let ((?x889 (top ?x558)))
 (let ((?x890 (stack ?x889 ?x524)))
 (let (($x916 (= ?x662 ?x890)))
 (let (($x892 ((_ is stack ) ?x558)))
 (let (($x895 (= c______ right-to-left)))
 (let (($x896 (and $x895 $x892)))
 (let ((?x744 (center s______)))
 (let (($x897 ((_ is stack ) ?x744)))
 (let (($x898 (= c______ center-to-right)))
 (let (($x899 (and $x898 $x897)))
 (let ((?x885 (top ?x744)))
 (let ((?x886 (stack ?x885 ?x524)))
 (let (($x913 (= ?x662 ?x886)))
 (let (($x900 (= c______ center-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x695 (rest ?x524)))
 (let (($x909 (= ?x662 ?x695)))
 (let (($x902 ((_ is stack ) ?x524)))
 (let (($x903 (= c______ left-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let (($x905 (= c______ left-to-center)))
 (let (($x906 (and $x905 $x902)))
 (ite $x906 $x909 (ite $x904 $x909 (ite $x901 $x913 (ite $x899 $x922 (ite $x896 $x916 $x922))))))))))))))))))))))))))))))))
(assert
 (let ((?x558 (right s______)))
 (let ((?x696 (right s_______)))
 (let (($x918 (= ?x696 ?x558)))
 (let ((?x888 (rest ?x558)))
 (let (($x915 (= ?x696 ?x888)))
 (let (($x892 ((_ is stack ) ?x558)))
 (let (($x893 (= c______ right-to-center)))
 (let (($x894 (and $x893 $x892)))
 (let (($x895 (= c______ right-to-left)))
 (let (($x896 (and $x895 $x892)))
 (let ((?x744 (center s______)))
 (let ((?x885 (top ?x744)))
 (let ((?x887 (stack ?x885 ?x558)))
 (let (($x914 (= ?x696 ?x887)))
 (let (($x897 ((_ is stack ) ?x744)))
 (let (($x898 (= c______ center-to-right)))
 (let (($x899 (and $x898 $x897)))
 (let (($x900 (= c______ center-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x524 (left s______)))
 (let (($x902 ((_ is stack ) ?x524)))
 (let (($x903 (= c______ left-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let (($x935 (ite $x904 $x918 (ite $x901 $x918 (ite $x899 $x914 (ite $x896 $x915 (ite $x894 $x915 $x918)))))))
 (let ((?x742 (top ?x524)))
 (let ((?x881 (stack ?x742 ?x558)))
 (let (($x910 (= ?x696 ?x881)))
 (let (($x905 (= c______ left-to-center)))
 (let (($x906 (and $x905 $x902)))
 (ite $x906 $x910 $x935)))))))))))))))))))))))))))))))
(assert
 (let ((?x744 (center s______)))
 (let ((?x882 (center s_______)))
 (let (($x920 (= ?x882 ?x744)))
 (let ((?x558 (right s______)))
 (let ((?x889 (top ?x558)))
 (let ((?x891 (stack ?x889 ?x744)))
 (let (($x917 (= ?x882 ?x891)))
 (let (($x892 ((_ is stack ) ?x558)))
 (let (($x893 (= c______ right-to-center)))
 (let (($x894 (and $x893 $x892)))
 (let (($x895 (= c______ right-to-left)))
 (let (($x896 (and $x895 $x892)))
 (let ((?x884 (rest ?x744)))
 (let (($x912 (= ?x882 ?x884)))
 (let (($x897 ((_ is stack ) ?x744)))
 (let (($x898 (= c______ center-to-right)))
 (let (($x899 (and $x898 $x897)))
 (let (($x900 (= c______ center-to-left)))
 (let (($x901 (and $x900 $x897)))
 (let ((?x524 (left s______)))
 (let ((?x742 (top ?x524)))
 (let ((?x883 (stack ?x742 ?x744)))
 (let (($x911 (= ?x882 ?x883)))
 (let (($x902 ((_ is stack ) ?x524)))
 (let (($x903 (= c______ left-to-right)))
 (let (($x904 (and $x903 $x902)))
 (let (($x934 (ite $x904 $x911 (ite $x901 $x912 (ite $x899 $x912 (ite $x896 $x920 (ite $x894 $x917 $x920)))))))
 (let (($x905 (= c______ left-to-center)))
 (let (($x906 (and $x905 $x902)))
 (ite $x906 $x920 $x934)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x662 (left s_______)))
 (let ((?x800 (left s________)))
 (let (($x1060 (= ?x800 ?x662)))
 (let ((?x696 (right s_______)))
 (let ((?x1027 (top ?x696)))
 (let ((?x1028 (stack ?x1027 ?x662)))
 (let (($x1054 (= ?x800 ?x1028)))
 (let (($x1030 ((_ is stack ) ?x696)))
 (let (($x1033 (= c_______ right-to-left)))
 (let (($x1034 (and $x1033 $x1030)))
 (let ((?x882 (center s_______)))
 (let (($x1035 ((_ is stack ) ?x882)))
 (let (($x1036 (= c_______ center-to-right)))
 (let (($x1037 (and $x1036 $x1035)))
 (let ((?x1023 (top ?x882)))
 (let ((?x1024 (stack ?x1023 ?x662)))
 (let (($x1051 (= ?x800 ?x1024)))
 (let (($x1038 (= c_______ center-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x833 (rest ?x662)))
 (let (($x1047 (= ?x800 ?x833)))
 (let (($x1040 ((_ is stack ) ?x662)))
 (let (($x1041 (= c_______ left-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1043 (= c_______ left-to-center)))
 (let (($x1044 (and $x1043 $x1040)))
 (ite $x1044 $x1047 (ite $x1042 $x1047 (ite $x1039 $x1051 (ite $x1037 $x1060 (ite $x1034 $x1054 $x1060))))))))))))))))))))))))))))))))
(assert
 (let ((?x696 (right s_______)))
 (let ((?x834 (right s________)))
 (let (($x1056 (= ?x834 ?x696)))
 (let ((?x1026 (rest ?x696)))
 (let (($x1053 (= ?x834 ?x1026)))
 (let (($x1030 ((_ is stack ) ?x696)))
 (let (($x1031 (= c_______ right-to-center)))
 (let (($x1032 (and $x1031 $x1030)))
 (let (($x1033 (= c_______ right-to-left)))
 (let (($x1034 (and $x1033 $x1030)))
 (let ((?x882 (center s_______)))
 (let ((?x1023 (top ?x882)))
 (let ((?x1025 (stack ?x1023 ?x696)))
 (let (($x1052 (= ?x834 ?x1025)))
 (let (($x1035 ((_ is stack ) ?x882)))
 (let (($x1036 (= c_______ center-to-right)))
 (let (($x1037 (and $x1036 $x1035)))
 (let (($x1038 (= c_______ center-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x662 (left s_______)))
 (let (($x1040 ((_ is stack ) ?x662)))
 (let (($x1041 (= c_______ left-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1073 (ite $x1042 $x1056 (ite $x1039 $x1056 (ite $x1037 $x1052 (ite $x1034 $x1053 (ite $x1032 $x1053 $x1056)))))))
 (let ((?x880 (top ?x662)))
 (let ((?x1019 (stack ?x880 ?x696)))
 (let (($x1048 (= ?x834 ?x1019)))
 (let (($x1043 (= c_______ left-to-center)))
 (let (($x1044 (and $x1043 $x1040)))
 (ite $x1044 $x1048 $x1073)))))))))))))))))))))))))))))))
(assert
 (let ((?x882 (center s_______)))
 (let ((?x1020 (center s________)))
 (let (($x1058 (= ?x1020 ?x882)))
 (let ((?x696 (right s_______)))
 (let ((?x1027 (top ?x696)))
 (let ((?x1029 (stack ?x1027 ?x882)))
 (let (($x1055 (= ?x1020 ?x1029)))
 (let (($x1030 ((_ is stack ) ?x696)))
 (let (($x1031 (= c_______ right-to-center)))
 (let (($x1032 (and $x1031 $x1030)))
 (let (($x1033 (= c_______ right-to-left)))
 (let (($x1034 (and $x1033 $x1030)))
 (let ((?x1022 (rest ?x882)))
 (let (($x1050 (= ?x1020 ?x1022)))
 (let (($x1035 ((_ is stack ) ?x882)))
 (let (($x1036 (= c_______ center-to-right)))
 (let (($x1037 (and $x1036 $x1035)))
 (let (($x1038 (= c_______ center-to-left)))
 (let (($x1039 (and $x1038 $x1035)))
 (let ((?x662 (left s_______)))
 (let ((?x880 (top ?x662)))
 (let ((?x1021 (stack ?x880 ?x882)))
 (let (($x1049 (= ?x1020 ?x1021)))
 (let (($x1040 ((_ is stack ) ?x662)))
 (let (($x1041 (= c_______ left-to-right)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1072 (ite $x1042 $x1049 (ite $x1039 $x1050 (ite $x1037 $x1050 (ite $x1034 $x1058 (ite $x1032 $x1055 $x1058)))))))
 (let (($x1043 (= c_______ left-to-center)))
 (let (($x1044 (and $x1043 $x1040)))
 (ite $x1044 $x1058 $x1072)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x800 (left s________)))
 (let ((?x938 (left s_________)))
 (let (($x1198 (= ?x938 ?x800)))
 (let ((?x834 (right s________)))
 (let ((?x1165 (top ?x834)))
 (let ((?x1166 (stack ?x1165 ?x800)))
 (let (($x1192 (= ?x938 ?x1166)))
 (let (($x1168 ((_ is stack ) ?x834)))
 (let (($x1171 (= c________ right-to-left)))
 (let (($x1172 (and $x1171 $x1168)))
 (let ((?x1020 (center s________)))
 (let (($x1173 ((_ is stack ) ?x1020)))
 (let (($x1174 (= c________ center-to-right)))
 (let (($x1175 (and $x1174 $x1173)))
 (let ((?x1161 (top ?x1020)))
 (let ((?x1162 (stack ?x1161 ?x800)))
 (let (($x1189 (= ?x938 ?x1162)))
 (let (($x1176 (= c________ center-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x971 (rest ?x800)))
 (let (($x1185 (= ?x938 ?x971)))
 (let (($x1178 ((_ is stack ) ?x800)))
 (let (($x1179 (= c________ left-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1181 (= c________ left-to-center)))
 (let (($x1182 (and $x1181 $x1178)))
 (ite $x1182 $x1185 (ite $x1180 $x1185 (ite $x1177 $x1189 (ite $x1175 $x1198 (ite $x1172 $x1192 $x1198))))))))))))))))))))))))))))))))
(assert
 (let ((?x834 (right s________)))
 (let ((?x972 (right s_________)))
 (let (($x1194 (= ?x972 ?x834)))
 (let ((?x1164 (rest ?x834)))
 (let (($x1191 (= ?x972 ?x1164)))
 (let (($x1168 ((_ is stack ) ?x834)))
 (let (($x1169 (= c________ right-to-center)))
 (let (($x1170 (and $x1169 $x1168)))
 (let (($x1171 (= c________ right-to-left)))
 (let (($x1172 (and $x1171 $x1168)))
 (let ((?x1020 (center s________)))
 (let ((?x1161 (top ?x1020)))
 (let ((?x1163 (stack ?x1161 ?x834)))
 (let (($x1190 (= ?x972 ?x1163)))
 (let (($x1173 ((_ is stack ) ?x1020)))
 (let (($x1174 (= c________ center-to-right)))
 (let (($x1175 (and $x1174 $x1173)))
 (let (($x1176 (= c________ center-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x800 (left s________)))
 (let (($x1178 ((_ is stack ) ?x800)))
 (let (($x1179 (= c________ left-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1211 (ite $x1180 $x1194 (ite $x1177 $x1194 (ite $x1175 $x1190 (ite $x1172 $x1191 (ite $x1170 $x1191 $x1194)))))))
 (let ((?x1018 (top ?x800)))
 (let ((?x1157 (stack ?x1018 ?x834)))
 (let (($x1186 (= ?x972 ?x1157)))
 (let (($x1181 (= c________ left-to-center)))
 (let (($x1182 (and $x1181 $x1178)))
 (ite $x1182 $x1186 $x1211)))))))))))))))))))))))))))))))
(assert
 (let ((?x1020 (center s________)))
 (let ((?x1158 (center s_________)))
 (let (($x1196 (= ?x1158 ?x1020)))
 (let ((?x834 (right s________)))
 (let ((?x1165 (top ?x834)))
 (let ((?x1167 (stack ?x1165 ?x1020)))
 (let (($x1193 (= ?x1158 ?x1167)))
 (let (($x1168 ((_ is stack ) ?x834)))
 (let (($x1169 (= c________ right-to-center)))
 (let (($x1170 (and $x1169 $x1168)))
 (let (($x1171 (= c________ right-to-left)))
 (let (($x1172 (and $x1171 $x1168)))
 (let ((?x1160 (rest ?x1020)))
 (let (($x1188 (= ?x1158 ?x1160)))
 (let (($x1173 ((_ is stack ) ?x1020)))
 (let (($x1174 (= c________ center-to-right)))
 (let (($x1175 (and $x1174 $x1173)))
 (let (($x1176 (= c________ center-to-left)))
 (let (($x1177 (and $x1176 $x1173)))
 (let ((?x800 (left s________)))
 (let ((?x1018 (top ?x800)))
 (let ((?x1159 (stack ?x1018 ?x1020)))
 (let (($x1187 (= ?x1158 ?x1159)))
 (let (($x1178 ((_ is stack ) ?x800)))
 (let (($x1179 (= c________ left-to-right)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1210 (ite $x1180 $x1187 (ite $x1177 $x1188 (ite $x1175 $x1188 (ite $x1172 $x1196 (ite $x1170 $x1193 $x1196)))))))
 (let (($x1181 (= c________ left-to-center)))
 (let (($x1182 (and $x1181 $x1178)))
 (ite $x1182 $x1196 $x1210)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x938 (left s_________)))
 (let ((?x1076 (left s__________)))
 (let (($x1336 (= ?x1076 ?x938)))
 (let ((?x972 (right s_________)))
 (let ((?x1303 (top ?x972)))
 (let ((?x1304 (stack ?x1303 ?x938)))
 (let (($x1330 (= ?x1076 ?x1304)))
 (let (($x1306 ((_ is stack ) ?x972)))
 (let (($x1309 (= c_________ right-to-left)))
 (let (($x1310 (and $x1309 $x1306)))
 (let ((?x1158 (center s_________)))
 (let (($x1311 ((_ is stack ) ?x1158)))
 (let (($x1312 (= c_________ center-to-right)))
 (let (($x1313 (and $x1312 $x1311)))
 (let ((?x1299 (top ?x1158)))
 (let ((?x1300 (stack ?x1299 ?x938)))
 (let (($x1327 (= ?x1076 ?x1300)))
 (let (($x1314 (= c_________ center-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x1109 (rest ?x938)))
 (let (($x1323 (= ?x1076 ?x1109)))
 (let (($x1316 ((_ is stack ) ?x938)))
 (let (($x1317 (= c_________ left-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1319 (= c_________ left-to-center)))
 (let (($x1320 (and $x1319 $x1316)))
 (ite $x1320 $x1323 (ite $x1318 $x1323 (ite $x1315 $x1327 (ite $x1313 $x1336 (ite $x1310 $x1330 $x1336))))))))))))))))))))))))))))))))
(assert
 (let ((?x972 (right s_________)))
 (let ((?x1110 (right s__________)))
 (let (($x1332 (= ?x1110 ?x972)))
 (let ((?x1302 (rest ?x972)))
 (let (($x1329 (= ?x1110 ?x1302)))
 (let (($x1306 ((_ is stack ) ?x972)))
 (let (($x1307 (= c_________ right-to-center)))
 (let (($x1308 (and $x1307 $x1306)))
 (let (($x1309 (= c_________ right-to-left)))
 (let (($x1310 (and $x1309 $x1306)))
 (let ((?x1158 (center s_________)))
 (let ((?x1299 (top ?x1158)))
 (let ((?x1301 (stack ?x1299 ?x972)))
 (let (($x1328 (= ?x1110 ?x1301)))
 (let (($x1311 ((_ is stack ) ?x1158)))
 (let (($x1312 (= c_________ center-to-right)))
 (let (($x1313 (and $x1312 $x1311)))
 (let (($x1314 (= c_________ center-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x938 (left s_________)))
 (let (($x1316 ((_ is stack ) ?x938)))
 (let (($x1317 (= c_________ left-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1349 (ite $x1318 $x1332 (ite $x1315 $x1332 (ite $x1313 $x1328 (ite $x1310 $x1329 (ite $x1308 $x1329 $x1332)))))))
 (let ((?x1156 (top ?x938)))
 (let ((?x1295 (stack ?x1156 ?x972)))
 (let (($x1324 (= ?x1110 ?x1295)))
 (let (($x1319 (= c_________ left-to-center)))
 (let (($x1320 (and $x1319 $x1316)))
 (ite $x1320 $x1324 $x1349)))))))))))))))))))))))))))))))
(assert
 (let ((?x1158 (center s_________)))
 (let ((?x1296 (center s__________)))
 (let (($x1334 (= ?x1296 ?x1158)))
 (let ((?x972 (right s_________)))
 (let ((?x1303 (top ?x972)))
 (let ((?x1305 (stack ?x1303 ?x1158)))
 (let (($x1331 (= ?x1296 ?x1305)))
 (let (($x1306 ((_ is stack ) ?x972)))
 (let (($x1307 (= c_________ right-to-center)))
 (let (($x1308 (and $x1307 $x1306)))
 (let (($x1309 (= c_________ right-to-left)))
 (let (($x1310 (and $x1309 $x1306)))
 (let ((?x1298 (rest ?x1158)))
 (let (($x1326 (= ?x1296 ?x1298)))
 (let (($x1311 ((_ is stack ) ?x1158)))
 (let (($x1312 (= c_________ center-to-right)))
 (let (($x1313 (and $x1312 $x1311)))
 (let (($x1314 (= c_________ center-to-left)))
 (let (($x1315 (and $x1314 $x1311)))
 (let ((?x938 (left s_________)))
 (let ((?x1156 (top ?x938)))
 (let ((?x1297 (stack ?x1156 ?x1158)))
 (let (($x1325 (= ?x1296 ?x1297)))
 (let (($x1316 ((_ is stack ) ?x938)))
 (let (($x1317 (= c_________ left-to-right)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1348 (ite $x1318 $x1325 (ite $x1315 $x1326 (ite $x1313 $x1326 (ite $x1310 $x1334 (ite $x1308 $x1331 $x1334)))))))
 (let (($x1319 (= c_________ left-to-center)))
 (let (($x1320 (and $x1319 $x1316)))
 (ite $x1320 $x1334 $x1348)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1076 (left s__________)))
 (let ((?x1214 (left s___________)))
 (let (($x1474 (= ?x1214 ?x1076)))
 (let ((?x1110 (right s__________)))
 (let ((?x1441 (top ?x1110)))
 (let ((?x1442 (stack ?x1441 ?x1076)))
 (let (($x1468 (= ?x1214 ?x1442)))
 (let (($x1444 ((_ is stack ) ?x1110)))
 (let (($x1447 (= c__________ right-to-left)))
 (let (($x1448 (and $x1447 $x1444)))
 (let ((?x1296 (center s__________)))
 (let (($x1449 ((_ is stack ) ?x1296)))
 (let (($x1450 (= c__________ center-to-right)))
 (let (($x1451 (and $x1450 $x1449)))
 (let ((?x1437 (top ?x1296)))
 (let ((?x1438 (stack ?x1437 ?x1076)))
 (let (($x1465 (= ?x1214 ?x1438)))
 (let (($x1452 (= c__________ center-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1247 (rest ?x1076)))
 (let (($x1461 (= ?x1214 ?x1247)))
 (let (($x1454 ((_ is stack ) ?x1076)))
 (let (($x1455 (= c__________ left-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1457 (= c__________ left-to-center)))
 (let (($x1458 (and $x1457 $x1454)))
 (ite $x1458 $x1461 (ite $x1456 $x1461 (ite $x1453 $x1465 (ite $x1451 $x1474 (ite $x1448 $x1468 $x1474))))))))))))))))))))))))))))))))
(assert
 (let ((?x1110 (right s__________)))
 (let ((?x1248 (right s___________)))
 (let (($x1470 (= ?x1248 ?x1110)))
 (let ((?x1440 (rest ?x1110)))
 (let (($x1467 (= ?x1248 ?x1440)))
 (let (($x1444 ((_ is stack ) ?x1110)))
 (let (($x1445 (= c__________ right-to-center)))
 (let (($x1446 (and $x1445 $x1444)))
 (let (($x1447 (= c__________ right-to-left)))
 (let (($x1448 (and $x1447 $x1444)))
 (let ((?x1296 (center s__________)))
 (let ((?x1437 (top ?x1296)))
 (let ((?x1439 (stack ?x1437 ?x1110)))
 (let (($x1466 (= ?x1248 ?x1439)))
 (let (($x1449 ((_ is stack ) ?x1296)))
 (let (($x1450 (= c__________ center-to-right)))
 (let (($x1451 (and $x1450 $x1449)))
 (let (($x1452 (= c__________ center-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1076 (left s__________)))
 (let (($x1454 ((_ is stack ) ?x1076)))
 (let (($x1455 (= c__________ left-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1487 (ite $x1456 $x1470 (ite $x1453 $x1470 (ite $x1451 $x1466 (ite $x1448 $x1467 (ite $x1446 $x1467 $x1470)))))))
 (let ((?x1294 (top ?x1076)))
 (let ((?x1433 (stack ?x1294 ?x1110)))
 (let (($x1462 (= ?x1248 ?x1433)))
 (let (($x1457 (= c__________ left-to-center)))
 (let (($x1458 (and $x1457 $x1454)))
 (ite $x1458 $x1462 $x1487)))))))))))))))))))))))))))))))
(assert
 (let ((?x1296 (center s__________)))
 (let ((?x1434 (center s___________)))
 (let (($x1472 (= ?x1434 ?x1296)))
 (let ((?x1110 (right s__________)))
 (let ((?x1441 (top ?x1110)))
 (let ((?x1443 (stack ?x1441 ?x1296)))
 (let (($x1469 (= ?x1434 ?x1443)))
 (let (($x1444 ((_ is stack ) ?x1110)))
 (let (($x1445 (= c__________ right-to-center)))
 (let (($x1446 (and $x1445 $x1444)))
 (let (($x1447 (= c__________ right-to-left)))
 (let (($x1448 (and $x1447 $x1444)))
 (let ((?x1436 (rest ?x1296)))
 (let (($x1464 (= ?x1434 ?x1436)))
 (let (($x1449 ((_ is stack ) ?x1296)))
 (let (($x1450 (= c__________ center-to-right)))
 (let (($x1451 (and $x1450 $x1449)))
 (let (($x1452 (= c__________ center-to-left)))
 (let (($x1453 (and $x1452 $x1449)))
 (let ((?x1076 (left s__________)))
 (let ((?x1294 (top ?x1076)))
 (let ((?x1435 (stack ?x1294 ?x1296)))
 (let (($x1463 (= ?x1434 ?x1435)))
 (let (($x1454 ((_ is stack ) ?x1076)))
 (let (($x1455 (= c__________ left-to-right)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1486 (ite $x1456 $x1463 (ite $x1453 $x1464 (ite $x1451 $x1464 (ite $x1448 $x1472 (ite $x1446 $x1469 $x1472)))))))
 (let (($x1457 (= c__________ left-to-center)))
 (let (($x1458 (and $x1457 $x1454)))
 (ite $x1458 $x1472 $x1486)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1214 (left s___________)))
 (let ((?x1352 (left s____________)))
 (let (($x1612 (= ?x1352 ?x1214)))
 (let ((?x1248 (right s___________)))
 (let ((?x1579 (top ?x1248)))
 (let ((?x1580 (stack ?x1579 ?x1214)))
 (let (($x1606 (= ?x1352 ?x1580)))
 (let (($x1582 ((_ is stack ) ?x1248)))
 (let (($x1585 (= c___________ right-to-left)))
 (let (($x1586 (and $x1585 $x1582)))
 (let ((?x1434 (center s___________)))
 (let (($x1587 ((_ is stack ) ?x1434)))
 (let (($x1588 (= c___________ center-to-right)))
 (let (($x1589 (and $x1588 $x1587)))
 (let ((?x1575 (top ?x1434)))
 (let ((?x1576 (stack ?x1575 ?x1214)))
 (let (($x1603 (= ?x1352 ?x1576)))
 (let (($x1590 (= c___________ center-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1385 (rest ?x1214)))
 (let (($x1599 (= ?x1352 ?x1385)))
 (let (($x1592 ((_ is stack ) ?x1214)))
 (let (($x1593 (= c___________ left-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1595 (= c___________ left-to-center)))
 (let (($x1596 (and $x1595 $x1592)))
 (ite $x1596 $x1599 (ite $x1594 $x1599 (ite $x1591 $x1603 (ite $x1589 $x1612 (ite $x1586 $x1606 $x1612))))))))))))))))))))))))))))))))
(assert
 (let ((?x1248 (right s___________)))
 (let ((?x1386 (right s____________)))
 (let (($x1608 (= ?x1386 ?x1248)))
 (let ((?x1578 (rest ?x1248)))
 (let (($x1605 (= ?x1386 ?x1578)))
 (let (($x1582 ((_ is stack ) ?x1248)))
 (let (($x1583 (= c___________ right-to-center)))
 (let (($x1584 (and $x1583 $x1582)))
 (let (($x1585 (= c___________ right-to-left)))
 (let (($x1586 (and $x1585 $x1582)))
 (let ((?x1434 (center s___________)))
 (let ((?x1575 (top ?x1434)))
 (let ((?x1577 (stack ?x1575 ?x1248)))
 (let (($x1604 (= ?x1386 ?x1577)))
 (let (($x1587 ((_ is stack ) ?x1434)))
 (let (($x1588 (= c___________ center-to-right)))
 (let (($x1589 (and $x1588 $x1587)))
 (let (($x1590 (= c___________ center-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1214 (left s___________)))
 (let (($x1592 ((_ is stack ) ?x1214)))
 (let (($x1593 (= c___________ left-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1625 (ite $x1594 $x1608 (ite $x1591 $x1608 (ite $x1589 $x1604 (ite $x1586 $x1605 (ite $x1584 $x1605 $x1608)))))))
 (let ((?x1432 (top ?x1214)))
 (let ((?x1571 (stack ?x1432 ?x1248)))
 (let (($x1600 (= ?x1386 ?x1571)))
 (let (($x1595 (= c___________ left-to-center)))
 (let (($x1596 (and $x1595 $x1592)))
 (ite $x1596 $x1600 $x1625)))))))))))))))))))))))))))))))
(assert
 (let ((?x1434 (center s___________)))
 (let ((?x1572 (center s____________)))
 (let (($x1610 (= ?x1572 ?x1434)))
 (let ((?x1248 (right s___________)))
 (let ((?x1579 (top ?x1248)))
 (let ((?x1581 (stack ?x1579 ?x1434)))
 (let (($x1607 (= ?x1572 ?x1581)))
 (let (($x1582 ((_ is stack ) ?x1248)))
 (let (($x1583 (= c___________ right-to-center)))
 (let (($x1584 (and $x1583 $x1582)))
 (let (($x1585 (= c___________ right-to-left)))
 (let (($x1586 (and $x1585 $x1582)))
 (let ((?x1574 (rest ?x1434)))
 (let (($x1602 (= ?x1572 ?x1574)))
 (let (($x1587 ((_ is stack ) ?x1434)))
 (let (($x1588 (= c___________ center-to-right)))
 (let (($x1589 (and $x1588 $x1587)))
 (let (($x1590 (= c___________ center-to-left)))
 (let (($x1591 (and $x1590 $x1587)))
 (let ((?x1214 (left s___________)))
 (let ((?x1432 (top ?x1214)))
 (let ((?x1573 (stack ?x1432 ?x1434)))
 (let (($x1601 (= ?x1572 ?x1573)))
 (let (($x1592 ((_ is stack ) ?x1214)))
 (let (($x1593 (= c___________ left-to-right)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1624 (ite $x1594 $x1601 (ite $x1591 $x1602 (ite $x1589 $x1602 (ite $x1586 $x1610 (ite $x1584 $x1607 $x1610)))))))
 (let (($x1595 (= c___________ left-to-center)))
 (let (($x1596 (and $x1595 $x1592)))
 (ite $x1596 $x1610 $x1624)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1352 (left s____________)))
 (let ((?x1490 (left s_____________)))
 (let (($x1750 (= ?x1490 ?x1352)))
 (let ((?x1386 (right s____________)))
 (let ((?x1717 (top ?x1386)))
 (let ((?x1718 (stack ?x1717 ?x1352)))
 (let (($x1744 (= ?x1490 ?x1718)))
 (let (($x1720 ((_ is stack ) ?x1386)))
 (let (($x1723 (= c____________ right-to-left)))
 (let (($x1724 (and $x1723 $x1720)))
 (let ((?x1572 (center s____________)))
 (let (($x1725 ((_ is stack ) ?x1572)))
 (let (($x1726 (= c____________ center-to-right)))
 (let (($x1727 (and $x1726 $x1725)))
 (let ((?x1713 (top ?x1572)))
 (let ((?x1714 (stack ?x1713 ?x1352)))
 (let (($x1741 (= ?x1490 ?x1714)))
 (let (($x1728 (= c____________ center-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1523 (rest ?x1352)))
 (let (($x1737 (= ?x1490 ?x1523)))
 (let (($x1730 ((_ is stack ) ?x1352)))
 (let (($x1731 (= c____________ left-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1733 (= c____________ left-to-center)))
 (let (($x1734 (and $x1733 $x1730)))
 (ite $x1734 $x1737 (ite $x1732 $x1737 (ite $x1729 $x1741 (ite $x1727 $x1750 (ite $x1724 $x1744 $x1750))))))))))))))))))))))))))))))))
(assert
 (let ((?x1386 (right s____________)))
 (let ((?x1524 (right s_____________)))
 (let (($x1746 (= ?x1524 ?x1386)))
 (let ((?x1716 (rest ?x1386)))
 (let (($x1743 (= ?x1524 ?x1716)))
 (let (($x1720 ((_ is stack ) ?x1386)))
 (let (($x1721 (= c____________ right-to-center)))
 (let (($x1722 (and $x1721 $x1720)))
 (let (($x1723 (= c____________ right-to-left)))
 (let (($x1724 (and $x1723 $x1720)))
 (let ((?x1572 (center s____________)))
 (let ((?x1713 (top ?x1572)))
 (let ((?x1715 (stack ?x1713 ?x1386)))
 (let (($x1742 (= ?x1524 ?x1715)))
 (let (($x1725 ((_ is stack ) ?x1572)))
 (let (($x1726 (= c____________ center-to-right)))
 (let (($x1727 (and $x1726 $x1725)))
 (let (($x1728 (= c____________ center-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1352 (left s____________)))
 (let (($x1730 ((_ is stack ) ?x1352)))
 (let (($x1731 (= c____________ left-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1763 (ite $x1732 $x1746 (ite $x1729 $x1746 (ite $x1727 $x1742 (ite $x1724 $x1743 (ite $x1722 $x1743 $x1746)))))))
 (let ((?x1570 (top ?x1352)))
 (let ((?x1709 (stack ?x1570 ?x1386)))
 (let (($x1738 (= ?x1524 ?x1709)))
 (let (($x1733 (= c____________ left-to-center)))
 (let (($x1734 (and $x1733 $x1730)))
 (ite $x1734 $x1738 $x1763)))))))))))))))))))))))))))))))
(assert
 (let ((?x1572 (center s____________)))
 (let ((?x1710 (center s_____________)))
 (let (($x1748 (= ?x1710 ?x1572)))
 (let ((?x1386 (right s____________)))
 (let ((?x1717 (top ?x1386)))
 (let ((?x1719 (stack ?x1717 ?x1572)))
 (let (($x1745 (= ?x1710 ?x1719)))
 (let (($x1720 ((_ is stack ) ?x1386)))
 (let (($x1721 (= c____________ right-to-center)))
 (let (($x1722 (and $x1721 $x1720)))
 (let (($x1723 (= c____________ right-to-left)))
 (let (($x1724 (and $x1723 $x1720)))
 (let ((?x1712 (rest ?x1572)))
 (let (($x1740 (= ?x1710 ?x1712)))
 (let (($x1725 ((_ is stack ) ?x1572)))
 (let (($x1726 (= c____________ center-to-right)))
 (let (($x1727 (and $x1726 $x1725)))
 (let (($x1728 (= c____________ center-to-left)))
 (let (($x1729 (and $x1728 $x1725)))
 (let ((?x1352 (left s____________)))
 (let ((?x1570 (top ?x1352)))
 (let ((?x1711 (stack ?x1570 ?x1572)))
 (let (($x1739 (= ?x1710 ?x1711)))
 (let (($x1730 ((_ is stack ) ?x1352)))
 (let (($x1731 (= c____________ left-to-right)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1762 (ite $x1732 $x1739 (ite $x1729 $x1740 (ite $x1727 $x1740 (ite $x1724 $x1748 (ite $x1722 $x1745 $x1748)))))))
 (let (($x1733 (= c____________ left-to-center)))
 (let (($x1734 (and $x1733 $x1730)))
 (ite $x1734 $x1748 $x1762)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1490 (left s_____________)))
 (let ((?x1628 (left s______________)))
 (let (($x1888 (= ?x1628 ?x1490)))
 (let ((?x1524 (right s_____________)))
 (let ((?x1855 (top ?x1524)))
 (let ((?x1856 (stack ?x1855 ?x1490)))
 (let (($x1882 (= ?x1628 ?x1856)))
 (let (($x1858 ((_ is stack ) ?x1524)))
 (let (($x1861 (= c_____________ right-to-left)))
 (let (($x1862 (and $x1861 $x1858)))
 (let ((?x1710 (center s_____________)))
 (let (($x1863 ((_ is stack ) ?x1710)))
 (let (($x1864 (= c_____________ center-to-right)))
 (let (($x1865 (and $x1864 $x1863)))
 (let ((?x1851 (top ?x1710)))
 (let ((?x1852 (stack ?x1851 ?x1490)))
 (let (($x1879 (= ?x1628 ?x1852)))
 (let (($x1866 (= c_____________ center-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1661 (rest ?x1490)))
 (let (($x1875 (= ?x1628 ?x1661)))
 (let (($x1868 ((_ is stack ) ?x1490)))
 (let (($x1869 (= c_____________ left-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1871 (= c_____________ left-to-center)))
 (let (($x1872 (and $x1871 $x1868)))
 (ite $x1872 $x1875 (ite $x1870 $x1875 (ite $x1867 $x1879 (ite $x1865 $x1888 (ite $x1862 $x1882 $x1888))))))))))))))))))))))))))))))))
(assert
 (let ((?x1524 (right s_____________)))
 (let ((?x1662 (right s______________)))
 (let (($x1884 (= ?x1662 ?x1524)))
 (let ((?x1854 (rest ?x1524)))
 (let (($x1881 (= ?x1662 ?x1854)))
 (let (($x1858 ((_ is stack ) ?x1524)))
 (let (($x1859 (= c_____________ right-to-center)))
 (let (($x1860 (and $x1859 $x1858)))
 (let (($x1861 (= c_____________ right-to-left)))
 (let (($x1862 (and $x1861 $x1858)))
 (let ((?x1710 (center s_____________)))
 (let ((?x1851 (top ?x1710)))
 (let ((?x1853 (stack ?x1851 ?x1524)))
 (let (($x1880 (= ?x1662 ?x1853)))
 (let (($x1863 ((_ is stack ) ?x1710)))
 (let (($x1864 (= c_____________ center-to-right)))
 (let (($x1865 (and $x1864 $x1863)))
 (let (($x1866 (= c_____________ center-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1490 (left s_____________)))
 (let (($x1868 ((_ is stack ) ?x1490)))
 (let (($x1869 (= c_____________ left-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1901 (ite $x1870 $x1884 (ite $x1867 $x1884 (ite $x1865 $x1880 (ite $x1862 $x1881 (ite $x1860 $x1881 $x1884)))))))
 (let ((?x1708 (top ?x1490)))
 (let ((?x1847 (stack ?x1708 ?x1524)))
 (let (($x1876 (= ?x1662 ?x1847)))
 (let (($x1871 (= c_____________ left-to-center)))
 (let (($x1872 (and $x1871 $x1868)))
 (ite $x1872 $x1876 $x1901)))))))))))))))))))))))))))))))
(assert
 (let ((?x1710 (center s_____________)))
 (let ((?x1848 (center s______________)))
 (let (($x1886 (= ?x1848 ?x1710)))
 (let ((?x1524 (right s_____________)))
 (let ((?x1855 (top ?x1524)))
 (let ((?x1857 (stack ?x1855 ?x1710)))
 (let (($x1883 (= ?x1848 ?x1857)))
 (let (($x1858 ((_ is stack ) ?x1524)))
 (let (($x1859 (= c_____________ right-to-center)))
 (let (($x1860 (and $x1859 $x1858)))
 (let (($x1861 (= c_____________ right-to-left)))
 (let (($x1862 (and $x1861 $x1858)))
 (let ((?x1850 (rest ?x1710)))
 (let (($x1878 (= ?x1848 ?x1850)))
 (let (($x1863 ((_ is stack ) ?x1710)))
 (let (($x1864 (= c_____________ center-to-right)))
 (let (($x1865 (and $x1864 $x1863)))
 (let (($x1866 (= c_____________ center-to-left)))
 (let (($x1867 (and $x1866 $x1863)))
 (let ((?x1490 (left s_____________)))
 (let ((?x1708 (top ?x1490)))
 (let ((?x1849 (stack ?x1708 ?x1710)))
 (let (($x1877 (= ?x1848 ?x1849)))
 (let (($x1868 ((_ is stack ) ?x1490)))
 (let (($x1869 (= c_____________ left-to-right)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1900 (ite $x1870 $x1877 (ite $x1867 $x1878 (ite $x1865 $x1878 (ite $x1862 $x1886 (ite $x1860 $x1883 $x1886)))))))
 (let (($x1871 (= c_____________ left-to-center)))
 (let (($x1872 (and $x1871 $x1868)))
 (ite $x1872 $x1886 $x1900)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1628 (left s______________)))
 (let ((?x1766 (left s_______________)))
 (let (($x2026 (= ?x1766 ?x1628)))
 (let ((?x1662 (right s______________)))
 (let ((?x1993 (top ?x1662)))
 (let ((?x1994 (stack ?x1993 ?x1628)))
 (let (($x2020 (= ?x1766 ?x1994)))
 (let (($x1996 ((_ is stack ) ?x1662)))
 (let (($x1999 (= c______________ right-to-left)))
 (let (($x2000 (and $x1999 $x1996)))
 (let ((?x1848 (center s______________)))
 (let (($x2001 ((_ is stack ) ?x1848)))
 (let (($x2002 (= c______________ center-to-right)))
 (let (($x2003 (and $x2002 $x2001)))
 (let ((?x1989 (top ?x1848)))
 (let ((?x1990 (stack ?x1989 ?x1628)))
 (let (($x2017 (= ?x1766 ?x1990)))
 (let (($x2004 (= c______________ center-to-left)))
 (let (($x2005 (and $x2004 $x2001)))
 (let ((?x1799 (rest ?x1628)))
 (let (($x2013 (= ?x1766 ?x1799)))
 (let (($x2006 ((_ is stack ) ?x1628)))
 (let (($x2007 (= c______________ left-to-right)))
 (let (($x2008 (and $x2007 $x2006)))
 (let (($x2009 (= c______________ left-to-center)))
 (let (($x2010 (and $x2009 $x2006)))
 (ite $x2010 $x2013 (ite $x2008 $x2013 (ite $x2005 $x2017 (ite $x2003 $x2026 (ite $x2000 $x2020 $x2026))))))))))))))))))))))))))))))))
(assert
 (let ((?x1662 (right s______________)))
 (let ((?x1800 (right s_______________)))
 (let (($x2022 (= ?x1800 ?x1662)))
 (let ((?x1992 (rest ?x1662)))
 (let (($x2019 (= ?x1800 ?x1992)))
 (let (($x1996 ((_ is stack ) ?x1662)))
 (let (($x1997 (= c______________ right-to-center)))
 (let (($x1998 (and $x1997 $x1996)))
 (let (($x1999 (= c______________ right-to-left)))
 (let (($x2000 (and $x1999 $x1996)))
 (let ((?x1848 (center s______________)))
 (let ((?x1989 (top ?x1848)))
 (let ((?x1991 (stack ?x1989 ?x1662)))
 (let (($x2018 (= ?x1800 ?x1991)))
 (let (($x2001 ((_ is stack ) ?x1848)))
 (let (($x2002 (= c______________ center-to-right)))
 (let (($x2003 (and $x2002 $x2001)))
 (let (($x2004 (= c______________ center-to-left)))
 (let (($x2005 (and $x2004 $x2001)))
 (let ((?x1628 (left s______________)))
 (let (($x2006 ((_ is stack ) ?x1628)))
 (let (($x2007 (= c______________ left-to-right)))
 (let (($x2008 (and $x2007 $x2006)))
 (let (($x2039 (ite $x2008 $x2022 (ite $x2005 $x2022 (ite $x2003 $x2018 (ite $x2000 $x2019 (ite $x1998 $x2019 $x2022)))))))
 (let ((?x1846 (top ?x1628)))
 (let ((?x1985 (stack ?x1846 ?x1662)))
 (let (($x2014 (= ?x1800 ?x1985)))
 (let (($x2009 (= c______________ left-to-center)))
 (let (($x2010 (and $x2009 $x2006)))
 (ite $x2010 $x2014 $x2039)))))))))))))))))))))))))))))))
(assert
 (let ((?x1848 (center s______________)))
 (let ((?x1986 (center s_______________)))
 (let (($x2024 (= ?x1986 ?x1848)))
 (let ((?x1662 (right s______________)))
 (let ((?x1993 (top ?x1662)))
 (let ((?x1995 (stack ?x1993 ?x1848)))
 (let (($x2021 (= ?x1986 ?x1995)))
 (let (($x1996 ((_ is stack ) ?x1662)))
 (let (($x1997 (= c______________ right-to-center)))
 (let (($x1998 (and $x1997 $x1996)))
 (let (($x1999 (= c______________ right-to-left)))
 (let (($x2000 (and $x1999 $x1996)))
 (let ((?x1988 (rest ?x1848)))
 (let (($x2016 (= ?x1986 ?x1988)))
 (let (($x2001 ((_ is stack ) ?x1848)))
 (let (($x2002 (= c______________ center-to-right)))
 (let (($x2003 (and $x2002 $x2001)))
 (let (($x2004 (= c______________ center-to-left)))
 (let (($x2005 (and $x2004 $x2001)))
 (let ((?x1628 (left s______________)))
 (let ((?x1846 (top ?x1628)))
 (let ((?x1987 (stack ?x1846 ?x1848)))
 (let (($x2015 (= ?x1986 ?x1987)))
 (let (($x2006 ((_ is stack ) ?x1628)))
 (let (($x2007 (= c______________ left-to-right)))
 (let (($x2008 (and $x2007 $x2006)))
 (let (($x2038 (ite $x2008 $x2015 (ite $x2005 $x2016 (ite $x2003 $x2016 (ite $x2000 $x2024 (ite $x1998 $x2021 $x2024)))))))
 (let (($x2009 (= c______________ left-to-center)))
 (let (($x2010 (and $x2009 $x2006)))
 (ite $x2010 $x2024 $x2038)))))))))))))))))))))))))))))))
(assert
 (let ((?x1800 (right s_______________)))
 (let (($x2042 (= ?x1800 empty)))
 (let ((?x47 (stack A empty)))
 (let ((?x1986 (center s_______________)))
 (let (($x2073 (= ?x1986 ?x47)))
 (let ((?x41 (stack L (stack G (stack C (stack H (stack E (stack D empty))))))))
 (let ((?x46 (stack B (stack J (stack K (stack F (stack I ?x41)))))))
 (let ((?x1766 (left s_______________)))
 (let (($x2074 (= ?x1766 ?x46)))
 (let (($x2076 (not (and $x2074 $x2073 $x2042))))
 (not $x2076))))))))))))
(check-sat)
(exit)
