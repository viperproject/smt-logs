(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W) (X) (Y) (Z))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W_X_Y_Z) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x39 (stack B empty)))
 (let ((?x38 (stack E ?x39)))
 (let ((?x40 (stack J ?x38)))
 (let ((?x41 (stack V ?x40)))
 (let ((?x42 (stack Z ?x41)))
 (let ((?x43 (stack O ?x42)))
 (let ((?x44 (stack L ?x43)))
 (let ((?x45 (stack F ?x44)))
 (let ((?x46 (stack M ?x45)))
 (let ((?x47 (stack K ?x46)))
 (let ((?x48 (stack W ?x47)))
 (let ((?x49 (stack X ?x48)))
 (let ((?x50 (stack U ?x49)))
 (let ((?x51 (stack Q ?x50)))
 (let ((?x52 (stack H ?x51)))
 (let ((?x53 (stack R ?x52)))
 (let ((?x54 (stack Y ?x53)))
 (let ((?x55 (stack P ?x54)))
 (let ((?x135 (left s_tmp_)))
 (= ?x135 ?x55)))))))))))))))))))))
(assert
 (let ((?x56 (stack C empty)))
 (let ((?x57 (stack A ?x56)))
 (let ((?x58 (stack D ?x57)))
 (let ((?x59 (stack T ?x58)))
 (let ((?x60 (stack I ?x59)))
 (let ((?x138 (center s_tmp__)))
 (= ?x138 ?x60))))))))
(assert
 (let ((?x61 (stack G empty)))
 (let ((?x62 (stack N ?x61)))
 (let ((?x63 (stack S ?x62)))
 (let ((?x141 (right s_tmp___)))
 (= ?x141 ?x63))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x168 (left s_tmp__)))
 (= (left s_tmp___) ?x168)))
(assert
 (let ((?x138 (center s_tmp__)))
 (= (center s_tmp___) ?x138)))
(assert
 (let ((?x172 (center s_tmp_)))
 (= ?x172 (center s_tmp))))
(assert
 (let ((?x175 (right s_tmp_)))
 (= ?x175 (right s_tmp))))
(assert
 (let ((?x135 (left s_tmp_)))
 (let ((?x168 (left s_tmp__)))
 (= ?x168 ?x135))))
(assert
 (let ((?x175 (right s_tmp_)))
 (let ((?x179 (right s_tmp__)))
 (= ?x179 ?x175))))
(assert
 (= c__ c!1))
(assert
 (let ((?x112 (left s_)))
 (let ((?x319 (left s__)))
 (let (($x301 (= ?x319 ?x112)))
 (let ((?x115 (right s_)))
 (let (($x322 ((_ is stack ) ?x115)))
 (let (($x313 (= c_ right-to-left)))
 (let (($x305 (and $x313 $x322)))
 (let ((?x117 (center s_)))
 (let (($x306 ((_ is stack ) ?x117)))
 (let (($x307 (= c_ center-to-right)))
 (let (($x344 (and $x307 $x306)))
 (let (($x345 (= c_ center-to-left)))
 (let (($x346 (and $x345 $x306)))
 (let (($x334 (ite $x346 (= ?x319 (stack (top ?x117) ?x112)) (ite $x344 $x301 (ite $x305 (= ?x319 (stack (top ?x115) ?x112)) $x301)))))
 (let (($x336 (= ?x319 (rest ?x112))))
 (let (($x347 ((_ is stack ) ?x112)))
 (let (($x348 (= c_ left-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let (($x353 (= c_ left-to-center)))
 (let (($x354 (and $x353 $x347)))
 (ite $x354 $x336 (ite $x349 $x336 $x334)))))))))))))))))))))))
(assert
 (let ((?x115 (right s_)))
 (let ((?x303 (right s__)))
 (let (($x330 (= ?x303 ?x115)))
 (let (($x309 (= ?x303 (rest ?x115))))
 (let (($x322 ((_ is stack ) ?x115)))
 (let (($x311 (= c_ right-to-center)))
 (let (($x312 (and $x311 $x322)))
 (let (($x313 (= c_ right-to-left)))
 (let (($x305 (and $x313 $x322)))
 (let ((?x117 (center s_)))
 (let (($x306 ((_ is stack ) ?x117)))
 (let (($x307 (= c_ center-to-right)))
 (let (($x344 (and $x307 $x306)))
 (let (($x340 (ite $x344 (= ?x303 (stack (top ?x117) ?x115)) (ite $x305 $x309 (ite $x312 $x309 $x330)))))
 (let (($x345 (= c_ center-to-left)))
 (let (($x346 (and $x345 $x306)))
 (let ((?x112 (left s_)))
 (let (($x347 ((_ is stack ) ?x112)))
 (let (($x348 (= c_ left-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let (($x353 (= c_ left-to-center)))
 (let (($x354 (and $x353 $x347)))
 (ite $x354 (= ?x303 (stack (top ?x112) ?x115)) (ite $x349 $x330 (ite $x346 $x330 $x340))))))))))))))))))))))))))
(assert
 (let ((?x117 (center s_)))
 (let ((?x363 (center s__)))
 (let (($x299 (= ?x363 ?x117)))
 (let ((?x115 (right s_)))
 (let (($x322 ((_ is stack ) ?x115)))
 (let (($x311 (= c_ right-to-center)))
 (let (($x312 (and $x311 $x322)))
 (let (($x313 (= c_ right-to-left)))
 (let (($x305 (and $x313 $x322)))
 (let (($x315 (= ?x363 (rest ?x117))))
 (let (($x306 ((_ is stack ) ?x117)))
 (let (($x307 (= c_ center-to-right)))
 (let (($x344 (and $x307 $x306)))
 (let (($x339 (ite $x344 $x315 (ite $x305 $x299 (ite $x312 (= ?x363 (stack (top ?x115) ?x117)) $x299)))))
 (let (($x345 (= c_ center-to-left)))
 (let (($x346 (and $x345 $x306)))
 (let ((?x112 (left s_)))
 (let (($x347 ((_ is stack ) ?x112)))
 (let (($x348 (= c_ left-to-right)))
 (let (($x349 (and $x348 $x347)))
 (let (($x353 (= c_ left-to-center)))
 (let (($x354 (and $x353 $x347)))
 (ite $x354 $x299 (ite $x349 (= ?x363 (stack (top ?x112) ?x117)) (ite $x346 $x315 $x339))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x319 (left s__)))
 (let ((?x182 (left s___)))
 (let (($x475 (= ?x182 ?x319)))
 (let ((?x303 (right s__)))
 (let ((?x442 (top ?x303)))
 (let ((?x443 (stack ?x442 ?x319)))
 (let (($x469 (= ?x182 ?x443)))
 (let (($x445 ((_ is stack ) ?x303)))
 (let (($x448 (= c__ right-to-left)))
 (let (($x449 (and $x448 $x445)))
 (let ((?x363 (center s__)))
 (let (($x450 ((_ is stack ) ?x363)))
 (let (($x451 (= c__ center-to-right)))
 (let (($x452 (and $x451 $x450)))
 (let ((?x438 (top ?x363)))
 (let ((?x439 (stack ?x438 ?x319)))
 (let (($x466 (= ?x182 ?x439)))
 (let (($x453 (= c__ center-to-left)))
 (let (($x454 (and $x453 $x450)))
 (let ((?x184 (rest ?x319)))
 (let (($x462 (= ?x182 ?x184)))
 (let (($x455 ((_ is stack ) ?x319)))
 (let (($x456 (= c__ left-to-right)))
 (let (($x457 (and $x456 $x455)))
 (let (($x458 (= c__ left-to-center)))
 (let (($x459 (and $x458 $x455)))
 (ite $x459 $x462 (ite $x457 $x462 (ite $x454 $x466 (ite $x452 $x475 (ite $x449 $x469 $x475))))))))))))))))))))))))))))))))
(assert
 (let ((?x303 (right s__)))
 (let ((?x185 (right s___)))
 (let (($x471 (= ?x185 ?x303)))
 (let ((?x441 (rest ?x303)))
 (let (($x468 (= ?x185 ?x441)))
 (let (($x445 ((_ is stack ) ?x303)))
 (let (($x446 (= c__ right-to-center)))
 (let (($x447 (and $x446 $x445)))
 (let (($x448 (= c__ right-to-left)))
 (let (($x449 (and $x448 $x445)))
 (let ((?x363 (center s__)))
 (let ((?x438 (top ?x363)))
 (let ((?x440 (stack ?x438 ?x303)))
 (let (($x467 (= ?x185 ?x440)))
 (let (($x450 ((_ is stack ) ?x363)))
 (let (($x451 (= c__ center-to-right)))
 (let (($x452 (and $x451 $x450)))
 (let (($x453 (= c__ center-to-left)))
 (let (($x454 (and $x453 $x450)))
 (let ((?x319 (left s__)))
 (let (($x455 ((_ is stack ) ?x319)))
 (let (($x456 (= c__ left-to-right)))
 (let (($x457 (and $x456 $x455)))
 (let (($x488 (ite $x457 $x471 (ite $x454 $x471 (ite $x452 $x467 (ite $x449 $x468 (ite $x447 $x468 $x471)))))))
 (let ((?x298 (top ?x319)))
 (let ((?x434 (stack ?x298 ?x303)))
 (let (($x463 (= ?x185 ?x434)))
 (let (($x458 (= c__ left-to-center)))
 (let (($x459 (and $x458 $x455)))
 (ite $x459 $x463 $x488)))))))))))))))))))))))))))))))
(assert
 (let ((?x363 (center s__)))
 (let ((?x435 (center s___)))
 (let (($x473 (= ?x435 ?x363)))
 (let ((?x303 (right s__)))
 (let ((?x442 (top ?x303)))
 (let ((?x444 (stack ?x442 ?x363)))
 (let (($x470 (= ?x435 ?x444)))
 (let (($x445 ((_ is stack ) ?x303)))
 (let (($x446 (= c__ right-to-center)))
 (let (($x447 (and $x446 $x445)))
 (let (($x448 (= c__ right-to-left)))
 (let (($x449 (and $x448 $x445)))
 (let ((?x437 (rest ?x363)))
 (let (($x465 (= ?x435 ?x437)))
 (let (($x450 ((_ is stack ) ?x363)))
 (let (($x451 (= c__ center-to-right)))
 (let (($x452 (and $x451 $x450)))
 (let (($x453 (= c__ center-to-left)))
 (let (($x454 (and $x453 $x450)))
 (let ((?x319 (left s__)))
 (let ((?x298 (top ?x319)))
 (let ((?x436 (stack ?x298 ?x363)))
 (let (($x464 (= ?x435 ?x436)))
 (let (($x455 ((_ is stack ) ?x319)))
 (let (($x456 (= c__ left-to-right)))
 (let (($x457 (and $x456 $x455)))
 (let (($x487 (ite $x457 $x464 (ite $x454 $x465 (ite $x452 $x465 (ite $x449 $x473 (ite $x447 $x470 $x473)))))))
 (let (($x458 (= c__ left-to-center)))
 (let (($x459 (and $x458 $x455)))
 (ite $x459 $x473 $x487)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x182 (left s___)))
 (let ((?x356 (left s____)))
 (let (($x613 (= ?x356 ?x182)))
 (let ((?x185 (right s___)))
 (let ((?x580 (top ?x185)))
 (let ((?x581 (stack ?x580 ?x182)))
 (let (($x607 (= ?x356 ?x581)))
 (let (($x583 ((_ is stack ) ?x185)))
 (let (($x586 (= c___ right-to-left)))
 (let (($x587 (and $x586 $x583)))
 (let ((?x435 (center s___)))
 (let (($x588 ((_ is stack ) ?x435)))
 (let (($x589 (= c___ center-to-right)))
 (let (($x590 (and $x589 $x588)))
 (let ((?x576 (top ?x435)))
 (let ((?x577 (stack ?x576 ?x182)))
 (let (($x604 (= ?x356 ?x577)))
 (let (($x591 (= c___ center-to-left)))
 (let (($x592 (and $x591 $x588)))
 (let ((?x406 (rest ?x182)))
 (let (($x600 (= ?x356 ?x406)))
 (let (($x593 ((_ is stack ) ?x182)))
 (let (($x594 (= c___ left-to-right)))
 (let (($x595 (and $x594 $x593)))
 (let (($x596 (= c___ left-to-center)))
 (let (($x597 (and $x596 $x593)))
 (ite $x597 $x600 (ite $x595 $x600 (ite $x592 $x604 (ite $x590 $x613 (ite $x587 $x607 $x613))))))))))))))))))))))))))))))))
(assert
 (let ((?x185 (right s___)))
 (let ((?x407 (right s____)))
 (let (($x609 (= ?x407 ?x185)))
 (let ((?x579 (rest ?x185)))
 (let (($x606 (= ?x407 ?x579)))
 (let (($x583 ((_ is stack ) ?x185)))
 (let (($x584 (= c___ right-to-center)))
 (let (($x585 (and $x584 $x583)))
 (let (($x586 (= c___ right-to-left)))
 (let (($x587 (and $x586 $x583)))
 (let ((?x435 (center s___)))
 (let ((?x576 (top ?x435)))
 (let ((?x578 (stack ?x576 ?x185)))
 (let (($x605 (= ?x407 ?x578)))
 (let (($x588 ((_ is stack ) ?x435)))
 (let (($x589 (= c___ center-to-right)))
 (let (($x590 (and $x589 $x588)))
 (let (($x591 (= c___ center-to-left)))
 (let (($x592 (and $x591 $x588)))
 (let ((?x182 (left s___)))
 (let (($x593 ((_ is stack ) ?x182)))
 (let (($x594 (= c___ left-to-right)))
 (let (($x595 (and $x594 $x593)))
 (let (($x626 (ite $x595 $x609 (ite $x592 $x609 (ite $x590 $x605 (ite $x587 $x606 (ite $x585 $x606 $x609)))))))
 (let ((?x433 (top ?x182)))
 (let ((?x572 (stack ?x433 ?x185)))
 (let (($x601 (= ?x407 ?x572)))
 (let (($x596 (= c___ left-to-center)))
 (let (($x597 (and $x596 $x593)))
 (ite $x597 $x601 $x626)))))))))))))))))))))))))))))))
(assert
 (let ((?x435 (center s___)))
 (let ((?x573 (center s____)))
 (let (($x611 (= ?x573 ?x435)))
 (let ((?x185 (right s___)))
 (let ((?x580 (top ?x185)))
 (let ((?x582 (stack ?x580 ?x435)))
 (let (($x608 (= ?x573 ?x582)))
 (let (($x583 ((_ is stack ) ?x185)))
 (let (($x584 (= c___ right-to-center)))
 (let (($x585 (and $x584 $x583)))
 (let (($x586 (= c___ right-to-left)))
 (let (($x587 (and $x586 $x583)))
 (let ((?x575 (rest ?x435)))
 (let (($x603 (= ?x573 ?x575)))
 (let (($x588 ((_ is stack ) ?x435)))
 (let (($x589 (= c___ center-to-right)))
 (let (($x590 (and $x589 $x588)))
 (let (($x591 (= c___ center-to-left)))
 (let (($x592 (and $x591 $x588)))
 (let ((?x182 (left s___)))
 (let ((?x433 (top ?x182)))
 (let ((?x574 (stack ?x433 ?x435)))
 (let (($x602 (= ?x573 ?x574)))
 (let (($x593 ((_ is stack ) ?x182)))
 (let (($x594 (= c___ left-to-right)))
 (let (($x595 (and $x594 $x593)))
 (let (($x625 (ite $x595 $x602 (ite $x592 $x603 (ite $x590 $x603 (ite $x587 $x611 (ite $x585 $x608 $x611)))))))
 (let (($x596 (= c___ left-to-center)))
 (let (($x597 (and $x596 $x593)))
 (ite $x597 $x611 $x625)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x356 (left s____)))
 (let ((?x491 (left s_____)))
 (let (($x751 (= ?x491 ?x356)))
 (let ((?x407 (right s____)))
 (let ((?x718 (top ?x407)))
 (let ((?x719 (stack ?x718 ?x356)))
 (let (($x745 (= ?x491 ?x719)))
 (let (($x721 ((_ is stack ) ?x407)))
 (let (($x724 (= c____ right-to-left)))
 (let (($x725 (and $x724 $x721)))
 (let ((?x573 (center s____)))
 (let (($x726 ((_ is stack ) ?x573)))
 (let (($x727 (= c____ center-to-right)))
 (let (($x728 (and $x727 $x726)))
 (let ((?x714 (top ?x573)))
 (let ((?x715 (stack ?x714 ?x356)))
 (let (($x742 (= ?x491 ?x715)))
 (let (($x729 (= c____ center-to-left)))
 (let (($x730 (and $x729 $x726)))
 (let ((?x524 (rest ?x356)))
 (let (($x738 (= ?x491 ?x524)))
 (let (($x731 ((_ is stack ) ?x356)))
 (let (($x732 (= c____ left-to-right)))
 (let (($x733 (and $x732 $x731)))
 (let (($x734 (= c____ left-to-center)))
 (let (($x735 (and $x734 $x731)))
 (ite $x735 $x738 (ite $x733 $x738 (ite $x730 $x742 (ite $x728 $x751 (ite $x725 $x745 $x751))))))))))))))))))))))))))))))))
(assert
 (let ((?x407 (right s____)))
 (let ((?x525 (right s_____)))
 (let (($x747 (= ?x525 ?x407)))
 (let ((?x717 (rest ?x407)))
 (let (($x744 (= ?x525 ?x717)))
 (let (($x721 ((_ is stack ) ?x407)))
 (let (($x722 (= c____ right-to-center)))
 (let (($x723 (and $x722 $x721)))
 (let (($x724 (= c____ right-to-left)))
 (let (($x725 (and $x724 $x721)))
 (let ((?x573 (center s____)))
 (let ((?x714 (top ?x573)))
 (let ((?x716 (stack ?x714 ?x407)))
 (let (($x743 (= ?x525 ?x716)))
 (let (($x726 ((_ is stack ) ?x573)))
 (let (($x727 (= c____ center-to-right)))
 (let (($x728 (and $x727 $x726)))
 (let (($x729 (= c____ center-to-left)))
 (let (($x730 (and $x729 $x726)))
 (let ((?x356 (left s____)))
 (let (($x731 ((_ is stack ) ?x356)))
 (let (($x732 (= c____ left-to-right)))
 (let (($x733 (and $x732 $x731)))
 (let (($x764 (ite $x733 $x747 (ite $x730 $x747 (ite $x728 $x743 (ite $x725 $x744 (ite $x723 $x744 $x747)))))))
 (let ((?x571 (top ?x356)))
 (let ((?x710 (stack ?x571 ?x407)))
 (let (($x739 (= ?x525 ?x710)))
 (let (($x734 (= c____ left-to-center)))
 (let (($x735 (and $x734 $x731)))
 (ite $x735 $x739 $x764)))))))))))))))))))))))))))))))
(assert
 (let ((?x573 (center s____)))
 (let ((?x711 (center s_____)))
 (let (($x749 (= ?x711 ?x573)))
 (let ((?x407 (right s____)))
 (let ((?x718 (top ?x407)))
 (let ((?x720 (stack ?x718 ?x573)))
 (let (($x746 (= ?x711 ?x720)))
 (let (($x721 ((_ is stack ) ?x407)))
 (let (($x722 (= c____ right-to-center)))
 (let (($x723 (and $x722 $x721)))
 (let (($x724 (= c____ right-to-left)))
 (let (($x725 (and $x724 $x721)))
 (let ((?x713 (rest ?x573)))
 (let (($x741 (= ?x711 ?x713)))
 (let (($x726 ((_ is stack ) ?x573)))
 (let (($x727 (= c____ center-to-right)))
 (let (($x728 (and $x727 $x726)))
 (let (($x729 (= c____ center-to-left)))
 (let (($x730 (and $x729 $x726)))
 (let ((?x356 (left s____)))
 (let ((?x571 (top ?x356)))
 (let ((?x712 (stack ?x571 ?x573)))
 (let (($x740 (= ?x711 ?x712)))
 (let (($x731 ((_ is stack ) ?x356)))
 (let (($x732 (= c____ left-to-right)))
 (let (($x733 (and $x732 $x731)))
 (let (($x763 (ite $x733 $x740 (ite $x730 $x741 (ite $x728 $x741 (ite $x725 $x749 (ite $x723 $x746 $x749)))))))
 (let (($x734 (= c____ left-to-center)))
 (let (($x735 (and $x734 $x731)))
 (ite $x735 $x749 $x763)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x491 (left s_____)))
 (let ((?x629 (left s______)))
 (let (($x889 (= ?x629 ?x491)))
 (let ((?x525 (right s_____)))
 (let ((?x856 (top ?x525)))
 (let ((?x857 (stack ?x856 ?x491)))
 (let (($x883 (= ?x629 ?x857)))
 (let (($x859 ((_ is stack ) ?x525)))
 (let (($x862 (= c_____ right-to-left)))
 (let (($x863 (and $x862 $x859)))
 (let ((?x711 (center s_____)))
 (let (($x864 ((_ is stack ) ?x711)))
 (let (($x865 (= c_____ center-to-right)))
 (let (($x866 (and $x865 $x864)))
 (let ((?x852 (top ?x711)))
 (let ((?x853 (stack ?x852 ?x491)))
 (let (($x880 (= ?x629 ?x853)))
 (let (($x867 (= c_____ center-to-left)))
 (let (($x868 (and $x867 $x864)))
 (let ((?x662 (rest ?x491)))
 (let (($x876 (= ?x629 ?x662)))
 (let (($x869 ((_ is stack ) ?x491)))
 (let (($x870 (= c_____ left-to-right)))
 (let (($x871 (and $x870 $x869)))
 (let (($x872 (= c_____ left-to-center)))
 (let (($x873 (and $x872 $x869)))
 (ite $x873 $x876 (ite $x871 $x876 (ite $x868 $x880 (ite $x866 $x889 (ite $x863 $x883 $x889))))))))))))))))))))))))))))))))
(assert
 (let ((?x525 (right s_____)))
 (let ((?x663 (right s______)))
 (let (($x885 (= ?x663 ?x525)))
 (let ((?x855 (rest ?x525)))
 (let (($x882 (= ?x663 ?x855)))
 (let (($x859 ((_ is stack ) ?x525)))
 (let (($x860 (= c_____ right-to-center)))
 (let (($x861 (and $x860 $x859)))
 (let (($x862 (= c_____ right-to-left)))
 (let (($x863 (and $x862 $x859)))
 (let ((?x711 (center s_____)))
 (let ((?x852 (top ?x711)))
 (let ((?x854 (stack ?x852 ?x525)))
 (let (($x881 (= ?x663 ?x854)))
 (let (($x864 ((_ is stack ) ?x711)))
 (let (($x865 (= c_____ center-to-right)))
 (let (($x866 (and $x865 $x864)))
 (let (($x867 (= c_____ center-to-left)))
 (let (($x868 (and $x867 $x864)))
 (let ((?x491 (left s_____)))
 (let (($x869 ((_ is stack ) ?x491)))
 (let (($x870 (= c_____ left-to-right)))
 (let (($x871 (and $x870 $x869)))
 (let (($x902 (ite $x871 $x885 (ite $x868 $x885 (ite $x866 $x881 (ite $x863 $x882 (ite $x861 $x882 $x885)))))))
 (let ((?x709 (top ?x491)))
 (let ((?x848 (stack ?x709 ?x525)))
 (let (($x877 (= ?x663 ?x848)))
 (let (($x872 (= c_____ left-to-center)))
 (let (($x873 (and $x872 $x869)))
 (ite $x873 $x877 $x902)))))))))))))))))))))))))))))))
(assert
 (let ((?x711 (center s_____)))
 (let ((?x849 (center s______)))
 (let (($x887 (= ?x849 ?x711)))
 (let ((?x525 (right s_____)))
 (let ((?x856 (top ?x525)))
 (let ((?x858 (stack ?x856 ?x711)))
 (let (($x884 (= ?x849 ?x858)))
 (let (($x859 ((_ is stack ) ?x525)))
 (let (($x860 (= c_____ right-to-center)))
 (let (($x861 (and $x860 $x859)))
 (let (($x862 (= c_____ right-to-left)))
 (let (($x863 (and $x862 $x859)))
 (let ((?x851 (rest ?x711)))
 (let (($x879 (= ?x849 ?x851)))
 (let (($x864 ((_ is stack ) ?x711)))
 (let (($x865 (= c_____ center-to-right)))
 (let (($x866 (and $x865 $x864)))
 (let (($x867 (= c_____ center-to-left)))
 (let (($x868 (and $x867 $x864)))
 (let ((?x491 (left s_____)))
 (let ((?x709 (top ?x491)))
 (let ((?x850 (stack ?x709 ?x711)))
 (let (($x878 (= ?x849 ?x850)))
 (let (($x869 ((_ is stack ) ?x491)))
 (let (($x870 (= c_____ left-to-right)))
 (let (($x871 (and $x870 $x869)))
 (let (($x901 (ite $x871 $x878 (ite $x868 $x879 (ite $x866 $x879 (ite $x863 $x887 (ite $x861 $x884 $x887)))))))
 (let (($x872 (= c_____ left-to-center)))
 (let (($x873 (and $x872 $x869)))
 (ite $x873 $x887 $x901)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x629 (left s______)))
 (let ((?x767 (left s_______)))
 (let (($x1027 (= ?x767 ?x629)))
 (let ((?x663 (right s______)))
 (let ((?x994 (top ?x663)))
 (let ((?x995 (stack ?x994 ?x629)))
 (let (($x1021 (= ?x767 ?x995)))
 (let (($x997 ((_ is stack ) ?x663)))
 (let (($x1000 (= c______ right-to-left)))
 (let (($x1001 (and $x1000 $x997)))
 (let ((?x849 (center s______)))
 (let (($x1002 ((_ is stack ) ?x849)))
 (let (($x1003 (= c______ center-to-right)))
 (let (($x1004 (and $x1003 $x1002)))
 (let ((?x990 (top ?x849)))
 (let ((?x991 (stack ?x990 ?x629)))
 (let (($x1018 (= ?x767 ?x991)))
 (let (($x1005 (= c______ center-to-left)))
 (let (($x1006 (and $x1005 $x1002)))
 (let ((?x800 (rest ?x629)))
 (let (($x1014 (= ?x767 ?x800)))
 (let (($x1007 ((_ is stack ) ?x629)))
 (let (($x1008 (= c______ left-to-right)))
 (let (($x1009 (and $x1008 $x1007)))
 (let (($x1010 (= c______ left-to-center)))
 (let (($x1011 (and $x1010 $x1007)))
 (ite $x1011 $x1014 (ite $x1009 $x1014 (ite $x1006 $x1018 (ite $x1004 $x1027 (ite $x1001 $x1021 $x1027))))))))))))))))))))))))))))))))
(assert
 (let ((?x663 (right s______)))
 (let ((?x801 (right s_______)))
 (let (($x1023 (= ?x801 ?x663)))
 (let ((?x993 (rest ?x663)))
 (let (($x1020 (= ?x801 ?x993)))
 (let (($x997 ((_ is stack ) ?x663)))
 (let (($x998 (= c______ right-to-center)))
 (let (($x999 (and $x998 $x997)))
 (let (($x1000 (= c______ right-to-left)))
 (let (($x1001 (and $x1000 $x997)))
 (let ((?x849 (center s______)))
 (let ((?x990 (top ?x849)))
 (let ((?x992 (stack ?x990 ?x663)))
 (let (($x1019 (= ?x801 ?x992)))
 (let (($x1002 ((_ is stack ) ?x849)))
 (let (($x1003 (= c______ center-to-right)))
 (let (($x1004 (and $x1003 $x1002)))
 (let (($x1005 (= c______ center-to-left)))
 (let (($x1006 (and $x1005 $x1002)))
 (let ((?x629 (left s______)))
 (let (($x1007 ((_ is stack ) ?x629)))
 (let (($x1008 (= c______ left-to-right)))
 (let (($x1009 (and $x1008 $x1007)))
 (let (($x1040 (ite $x1009 $x1023 (ite $x1006 $x1023 (ite $x1004 $x1019 (ite $x1001 $x1020 (ite $x999 $x1020 $x1023)))))))
 (let ((?x847 (top ?x629)))
 (let ((?x986 (stack ?x847 ?x663)))
 (let (($x1015 (= ?x801 ?x986)))
 (let (($x1010 (= c______ left-to-center)))
 (let (($x1011 (and $x1010 $x1007)))
 (ite $x1011 $x1015 $x1040)))))))))))))))))))))))))))))))
(assert
 (let ((?x849 (center s______)))
 (let ((?x987 (center s_______)))
 (let (($x1025 (= ?x987 ?x849)))
 (let ((?x663 (right s______)))
 (let ((?x994 (top ?x663)))
 (let ((?x996 (stack ?x994 ?x849)))
 (let (($x1022 (= ?x987 ?x996)))
 (let (($x997 ((_ is stack ) ?x663)))
 (let (($x998 (= c______ right-to-center)))
 (let (($x999 (and $x998 $x997)))
 (let (($x1000 (= c______ right-to-left)))
 (let (($x1001 (and $x1000 $x997)))
 (let ((?x989 (rest ?x849)))
 (let (($x1017 (= ?x987 ?x989)))
 (let (($x1002 ((_ is stack ) ?x849)))
 (let (($x1003 (= c______ center-to-right)))
 (let (($x1004 (and $x1003 $x1002)))
 (let (($x1005 (= c______ center-to-left)))
 (let (($x1006 (and $x1005 $x1002)))
 (let ((?x629 (left s______)))
 (let ((?x847 (top ?x629)))
 (let ((?x988 (stack ?x847 ?x849)))
 (let (($x1016 (= ?x987 ?x988)))
 (let (($x1007 ((_ is stack ) ?x629)))
 (let (($x1008 (= c______ left-to-right)))
 (let (($x1009 (and $x1008 $x1007)))
 (let (($x1039 (ite $x1009 $x1016 (ite $x1006 $x1017 (ite $x1004 $x1017 (ite $x1001 $x1025 (ite $x999 $x1022 $x1025)))))))
 (let (($x1010 (= c______ left-to-center)))
 (let (($x1011 (and $x1010 $x1007)))
 (ite $x1011 $x1025 $x1039)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x767 (left s_______)))
 (let ((?x905 (left s________)))
 (let (($x1165 (= ?x905 ?x767)))
 (let ((?x801 (right s_______)))
 (let ((?x1132 (top ?x801)))
 (let ((?x1133 (stack ?x1132 ?x767)))
 (let (($x1159 (= ?x905 ?x1133)))
 (let (($x1135 ((_ is stack ) ?x801)))
 (let (($x1138 (= c_______ right-to-left)))
 (let (($x1139 (and $x1138 $x1135)))
 (let ((?x987 (center s_______)))
 (let (($x1140 ((_ is stack ) ?x987)))
 (let (($x1141 (= c_______ center-to-right)))
 (let (($x1142 (and $x1141 $x1140)))
 (let ((?x1128 (top ?x987)))
 (let ((?x1129 (stack ?x1128 ?x767)))
 (let (($x1156 (= ?x905 ?x1129)))
 (let (($x1143 (= c_______ center-to-left)))
 (let (($x1144 (and $x1143 $x1140)))
 (let ((?x938 (rest ?x767)))
 (let (($x1152 (= ?x905 ?x938)))
 (let (($x1145 ((_ is stack ) ?x767)))
 (let (($x1146 (= c_______ left-to-right)))
 (let (($x1147 (and $x1146 $x1145)))
 (let (($x1148 (= c_______ left-to-center)))
 (let (($x1149 (and $x1148 $x1145)))
 (ite $x1149 $x1152 (ite $x1147 $x1152 (ite $x1144 $x1156 (ite $x1142 $x1165 (ite $x1139 $x1159 $x1165))))))))))))))))))))))))))))))))
(assert
 (let ((?x801 (right s_______)))
 (let ((?x939 (right s________)))
 (let (($x1161 (= ?x939 ?x801)))
 (let ((?x1131 (rest ?x801)))
 (let (($x1158 (= ?x939 ?x1131)))
 (let (($x1135 ((_ is stack ) ?x801)))
 (let (($x1136 (= c_______ right-to-center)))
 (let (($x1137 (and $x1136 $x1135)))
 (let (($x1138 (= c_______ right-to-left)))
 (let (($x1139 (and $x1138 $x1135)))
 (let ((?x987 (center s_______)))
 (let ((?x1128 (top ?x987)))
 (let ((?x1130 (stack ?x1128 ?x801)))
 (let (($x1157 (= ?x939 ?x1130)))
 (let (($x1140 ((_ is stack ) ?x987)))
 (let (($x1141 (= c_______ center-to-right)))
 (let (($x1142 (and $x1141 $x1140)))
 (let (($x1143 (= c_______ center-to-left)))
 (let (($x1144 (and $x1143 $x1140)))
 (let ((?x767 (left s_______)))
 (let (($x1145 ((_ is stack ) ?x767)))
 (let (($x1146 (= c_______ left-to-right)))
 (let (($x1147 (and $x1146 $x1145)))
 (let (($x1178 (ite $x1147 $x1161 (ite $x1144 $x1161 (ite $x1142 $x1157 (ite $x1139 $x1158 (ite $x1137 $x1158 $x1161)))))))
 (let ((?x985 (top ?x767)))
 (let ((?x1124 (stack ?x985 ?x801)))
 (let (($x1153 (= ?x939 ?x1124)))
 (let (($x1148 (= c_______ left-to-center)))
 (let (($x1149 (and $x1148 $x1145)))
 (ite $x1149 $x1153 $x1178)))))))))))))))))))))))))))))))
(assert
 (let ((?x987 (center s_______)))
 (let ((?x1125 (center s________)))
 (let (($x1163 (= ?x1125 ?x987)))
 (let ((?x801 (right s_______)))
 (let ((?x1132 (top ?x801)))
 (let ((?x1134 (stack ?x1132 ?x987)))
 (let (($x1160 (= ?x1125 ?x1134)))
 (let (($x1135 ((_ is stack ) ?x801)))
 (let (($x1136 (= c_______ right-to-center)))
 (let (($x1137 (and $x1136 $x1135)))
 (let (($x1138 (= c_______ right-to-left)))
 (let (($x1139 (and $x1138 $x1135)))
 (let ((?x1127 (rest ?x987)))
 (let (($x1155 (= ?x1125 ?x1127)))
 (let (($x1140 ((_ is stack ) ?x987)))
 (let (($x1141 (= c_______ center-to-right)))
 (let (($x1142 (and $x1141 $x1140)))
 (let (($x1143 (= c_______ center-to-left)))
 (let (($x1144 (and $x1143 $x1140)))
 (let ((?x767 (left s_______)))
 (let ((?x985 (top ?x767)))
 (let ((?x1126 (stack ?x985 ?x987)))
 (let (($x1154 (= ?x1125 ?x1126)))
 (let (($x1145 ((_ is stack ) ?x767)))
 (let (($x1146 (= c_______ left-to-right)))
 (let (($x1147 (and $x1146 $x1145)))
 (let (($x1177 (ite $x1147 $x1154 (ite $x1144 $x1155 (ite $x1142 $x1155 (ite $x1139 $x1163 (ite $x1137 $x1160 $x1163)))))))
 (let (($x1148 (= c_______ left-to-center)))
 (let (($x1149 (and $x1148 $x1145)))
 (ite $x1149 $x1163 $x1177)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x905 (left s________)))
 (let ((?x1043 (left s_________)))
 (let (($x1303 (= ?x1043 ?x905)))
 (let ((?x939 (right s________)))
 (let ((?x1270 (top ?x939)))
 (let ((?x1271 (stack ?x1270 ?x905)))
 (let (($x1297 (= ?x1043 ?x1271)))
 (let (($x1273 ((_ is stack ) ?x939)))
 (let (($x1276 (= c________ right-to-left)))
 (let (($x1277 (and $x1276 $x1273)))
 (let ((?x1125 (center s________)))
 (let (($x1278 ((_ is stack ) ?x1125)))
 (let (($x1279 (= c________ center-to-right)))
 (let (($x1280 (and $x1279 $x1278)))
 (let ((?x1266 (top ?x1125)))
 (let ((?x1267 (stack ?x1266 ?x905)))
 (let (($x1294 (= ?x1043 ?x1267)))
 (let (($x1281 (= c________ center-to-left)))
 (let (($x1282 (and $x1281 $x1278)))
 (let ((?x1076 (rest ?x905)))
 (let (($x1290 (= ?x1043 ?x1076)))
 (let (($x1283 ((_ is stack ) ?x905)))
 (let (($x1284 (= c________ left-to-right)))
 (let (($x1285 (and $x1284 $x1283)))
 (let (($x1286 (= c________ left-to-center)))
 (let (($x1287 (and $x1286 $x1283)))
 (ite $x1287 $x1290 (ite $x1285 $x1290 (ite $x1282 $x1294 (ite $x1280 $x1303 (ite $x1277 $x1297 $x1303))))))))))))))))))))))))))))))))
(assert
 (let ((?x939 (right s________)))
 (let ((?x1077 (right s_________)))
 (let (($x1299 (= ?x1077 ?x939)))
 (let ((?x1269 (rest ?x939)))
 (let (($x1296 (= ?x1077 ?x1269)))
 (let (($x1273 ((_ is stack ) ?x939)))
 (let (($x1274 (= c________ right-to-center)))
 (let (($x1275 (and $x1274 $x1273)))
 (let (($x1276 (= c________ right-to-left)))
 (let (($x1277 (and $x1276 $x1273)))
 (let ((?x1125 (center s________)))
 (let ((?x1266 (top ?x1125)))
 (let ((?x1268 (stack ?x1266 ?x939)))
 (let (($x1295 (= ?x1077 ?x1268)))
 (let (($x1278 ((_ is stack ) ?x1125)))
 (let (($x1279 (= c________ center-to-right)))
 (let (($x1280 (and $x1279 $x1278)))
 (let (($x1281 (= c________ center-to-left)))
 (let (($x1282 (and $x1281 $x1278)))
 (let ((?x905 (left s________)))
 (let (($x1283 ((_ is stack ) ?x905)))
 (let (($x1284 (= c________ left-to-right)))
 (let (($x1285 (and $x1284 $x1283)))
 (let (($x1316 (ite $x1285 $x1299 (ite $x1282 $x1299 (ite $x1280 $x1295 (ite $x1277 $x1296 (ite $x1275 $x1296 $x1299)))))))
 (let ((?x1123 (top ?x905)))
 (let ((?x1262 (stack ?x1123 ?x939)))
 (let (($x1291 (= ?x1077 ?x1262)))
 (let (($x1286 (= c________ left-to-center)))
 (let (($x1287 (and $x1286 $x1283)))
 (ite $x1287 $x1291 $x1316)))))))))))))))))))))))))))))))
(assert
 (let ((?x1125 (center s________)))
 (let ((?x1263 (center s_________)))
 (let (($x1301 (= ?x1263 ?x1125)))
 (let ((?x939 (right s________)))
 (let ((?x1270 (top ?x939)))
 (let ((?x1272 (stack ?x1270 ?x1125)))
 (let (($x1298 (= ?x1263 ?x1272)))
 (let (($x1273 ((_ is stack ) ?x939)))
 (let (($x1274 (= c________ right-to-center)))
 (let (($x1275 (and $x1274 $x1273)))
 (let (($x1276 (= c________ right-to-left)))
 (let (($x1277 (and $x1276 $x1273)))
 (let ((?x1265 (rest ?x1125)))
 (let (($x1293 (= ?x1263 ?x1265)))
 (let (($x1278 ((_ is stack ) ?x1125)))
 (let (($x1279 (= c________ center-to-right)))
 (let (($x1280 (and $x1279 $x1278)))
 (let (($x1281 (= c________ center-to-left)))
 (let (($x1282 (and $x1281 $x1278)))
 (let ((?x905 (left s________)))
 (let ((?x1123 (top ?x905)))
 (let ((?x1264 (stack ?x1123 ?x1125)))
 (let (($x1292 (= ?x1263 ?x1264)))
 (let (($x1283 ((_ is stack ) ?x905)))
 (let (($x1284 (= c________ left-to-right)))
 (let (($x1285 (and $x1284 $x1283)))
 (let (($x1315 (ite $x1285 $x1292 (ite $x1282 $x1293 (ite $x1280 $x1293 (ite $x1277 $x1301 (ite $x1275 $x1298 $x1301)))))))
 (let (($x1286 (= c________ left-to-center)))
 (let (($x1287 (and $x1286 $x1283)))
 (ite $x1287 $x1301 $x1315)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1043 (left s_________)))
 (let ((?x1181 (left s__________)))
 (let (($x1441 (= ?x1181 ?x1043)))
 (let ((?x1077 (right s_________)))
 (let ((?x1408 (top ?x1077)))
 (let ((?x1409 (stack ?x1408 ?x1043)))
 (let (($x1435 (= ?x1181 ?x1409)))
 (let (($x1411 ((_ is stack ) ?x1077)))
 (let (($x1414 (= c_________ right-to-left)))
 (let (($x1415 (and $x1414 $x1411)))
 (let ((?x1263 (center s_________)))
 (let (($x1416 ((_ is stack ) ?x1263)))
 (let (($x1417 (= c_________ center-to-right)))
 (let (($x1418 (and $x1417 $x1416)))
 (let ((?x1404 (top ?x1263)))
 (let ((?x1405 (stack ?x1404 ?x1043)))
 (let (($x1432 (= ?x1181 ?x1405)))
 (let (($x1419 (= c_________ center-to-left)))
 (let (($x1420 (and $x1419 $x1416)))
 (let ((?x1214 (rest ?x1043)))
 (let (($x1428 (= ?x1181 ?x1214)))
 (let (($x1421 ((_ is stack ) ?x1043)))
 (let (($x1422 (= c_________ left-to-right)))
 (let (($x1423 (and $x1422 $x1421)))
 (let (($x1424 (= c_________ left-to-center)))
 (let (($x1425 (and $x1424 $x1421)))
 (ite $x1425 $x1428 (ite $x1423 $x1428 (ite $x1420 $x1432 (ite $x1418 $x1441 (ite $x1415 $x1435 $x1441))))))))))))))))))))))))))))))))
(assert
 (let ((?x1077 (right s_________)))
 (let ((?x1215 (right s__________)))
 (let (($x1437 (= ?x1215 ?x1077)))
 (let ((?x1407 (rest ?x1077)))
 (let (($x1434 (= ?x1215 ?x1407)))
 (let (($x1411 ((_ is stack ) ?x1077)))
 (let (($x1412 (= c_________ right-to-center)))
 (let (($x1413 (and $x1412 $x1411)))
 (let (($x1414 (= c_________ right-to-left)))
 (let (($x1415 (and $x1414 $x1411)))
 (let ((?x1263 (center s_________)))
 (let ((?x1404 (top ?x1263)))
 (let ((?x1406 (stack ?x1404 ?x1077)))
 (let (($x1433 (= ?x1215 ?x1406)))
 (let (($x1416 ((_ is stack ) ?x1263)))
 (let (($x1417 (= c_________ center-to-right)))
 (let (($x1418 (and $x1417 $x1416)))
 (let (($x1419 (= c_________ center-to-left)))
 (let (($x1420 (and $x1419 $x1416)))
 (let ((?x1043 (left s_________)))
 (let (($x1421 ((_ is stack ) ?x1043)))
 (let (($x1422 (= c_________ left-to-right)))
 (let (($x1423 (and $x1422 $x1421)))
 (let (($x1454 (ite $x1423 $x1437 (ite $x1420 $x1437 (ite $x1418 $x1433 (ite $x1415 $x1434 (ite $x1413 $x1434 $x1437)))))))
 (let ((?x1261 (top ?x1043)))
 (let ((?x1400 (stack ?x1261 ?x1077)))
 (let (($x1429 (= ?x1215 ?x1400)))
 (let (($x1424 (= c_________ left-to-center)))
 (let (($x1425 (and $x1424 $x1421)))
 (ite $x1425 $x1429 $x1454)))))))))))))))))))))))))))))))
(assert
 (let ((?x1263 (center s_________)))
 (let ((?x1401 (center s__________)))
 (let (($x1439 (= ?x1401 ?x1263)))
 (let ((?x1077 (right s_________)))
 (let ((?x1408 (top ?x1077)))
 (let ((?x1410 (stack ?x1408 ?x1263)))
 (let (($x1436 (= ?x1401 ?x1410)))
 (let (($x1411 ((_ is stack ) ?x1077)))
 (let (($x1412 (= c_________ right-to-center)))
 (let (($x1413 (and $x1412 $x1411)))
 (let (($x1414 (= c_________ right-to-left)))
 (let (($x1415 (and $x1414 $x1411)))
 (let ((?x1403 (rest ?x1263)))
 (let (($x1431 (= ?x1401 ?x1403)))
 (let (($x1416 ((_ is stack ) ?x1263)))
 (let (($x1417 (= c_________ center-to-right)))
 (let (($x1418 (and $x1417 $x1416)))
 (let (($x1419 (= c_________ center-to-left)))
 (let (($x1420 (and $x1419 $x1416)))
 (let ((?x1043 (left s_________)))
 (let ((?x1261 (top ?x1043)))
 (let ((?x1402 (stack ?x1261 ?x1263)))
 (let (($x1430 (= ?x1401 ?x1402)))
 (let (($x1421 ((_ is stack ) ?x1043)))
 (let (($x1422 (= c_________ left-to-right)))
 (let (($x1423 (and $x1422 $x1421)))
 (let (($x1453 (ite $x1423 $x1430 (ite $x1420 $x1431 (ite $x1418 $x1431 (ite $x1415 $x1439 (ite $x1413 $x1436 $x1439)))))))
 (let (($x1424 (= c_________ left-to-center)))
 (let (($x1425 (and $x1424 $x1421)))
 (ite $x1425 $x1439 $x1453)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1181 (left s__________)))
 (let ((?x1319 (left s___________)))
 (let (($x1579 (= ?x1319 ?x1181)))
 (let ((?x1215 (right s__________)))
 (let ((?x1546 (top ?x1215)))
 (let ((?x1547 (stack ?x1546 ?x1181)))
 (let (($x1573 (= ?x1319 ?x1547)))
 (let (($x1549 ((_ is stack ) ?x1215)))
 (let (($x1552 (= c__________ right-to-left)))
 (let (($x1553 (and $x1552 $x1549)))
 (let ((?x1401 (center s__________)))
 (let (($x1554 ((_ is stack ) ?x1401)))
 (let (($x1555 (= c__________ center-to-right)))
 (let (($x1556 (and $x1555 $x1554)))
 (let ((?x1542 (top ?x1401)))
 (let ((?x1543 (stack ?x1542 ?x1181)))
 (let (($x1570 (= ?x1319 ?x1543)))
 (let (($x1557 (= c__________ center-to-left)))
 (let (($x1558 (and $x1557 $x1554)))
 (let ((?x1352 (rest ?x1181)))
 (let (($x1566 (= ?x1319 ?x1352)))
 (let (($x1559 ((_ is stack ) ?x1181)))
 (let (($x1560 (= c__________ left-to-right)))
 (let (($x1561 (and $x1560 $x1559)))
 (let (($x1562 (= c__________ left-to-center)))
 (let (($x1563 (and $x1562 $x1559)))
 (ite $x1563 $x1566 (ite $x1561 $x1566 (ite $x1558 $x1570 (ite $x1556 $x1579 (ite $x1553 $x1573 $x1579))))))))))))))))))))))))))))))))
(assert
 (let ((?x1215 (right s__________)))
 (let ((?x1353 (right s___________)))
 (let (($x1575 (= ?x1353 ?x1215)))
 (let ((?x1545 (rest ?x1215)))
 (let (($x1572 (= ?x1353 ?x1545)))
 (let (($x1549 ((_ is stack ) ?x1215)))
 (let (($x1550 (= c__________ right-to-center)))
 (let (($x1551 (and $x1550 $x1549)))
 (let (($x1552 (= c__________ right-to-left)))
 (let (($x1553 (and $x1552 $x1549)))
 (let ((?x1401 (center s__________)))
 (let ((?x1542 (top ?x1401)))
 (let ((?x1544 (stack ?x1542 ?x1215)))
 (let (($x1571 (= ?x1353 ?x1544)))
 (let (($x1554 ((_ is stack ) ?x1401)))
 (let (($x1555 (= c__________ center-to-right)))
 (let (($x1556 (and $x1555 $x1554)))
 (let (($x1557 (= c__________ center-to-left)))
 (let (($x1558 (and $x1557 $x1554)))
 (let ((?x1181 (left s__________)))
 (let (($x1559 ((_ is stack ) ?x1181)))
 (let (($x1560 (= c__________ left-to-right)))
 (let (($x1561 (and $x1560 $x1559)))
 (let (($x1592 (ite $x1561 $x1575 (ite $x1558 $x1575 (ite $x1556 $x1571 (ite $x1553 $x1572 (ite $x1551 $x1572 $x1575)))))))
 (let ((?x1399 (top ?x1181)))
 (let ((?x1538 (stack ?x1399 ?x1215)))
 (let (($x1567 (= ?x1353 ?x1538)))
 (let (($x1562 (= c__________ left-to-center)))
 (let (($x1563 (and $x1562 $x1559)))
 (ite $x1563 $x1567 $x1592)))))))))))))))))))))))))))))))
(assert
 (let ((?x1401 (center s__________)))
 (let ((?x1539 (center s___________)))
 (let (($x1577 (= ?x1539 ?x1401)))
 (let ((?x1215 (right s__________)))
 (let ((?x1546 (top ?x1215)))
 (let ((?x1548 (stack ?x1546 ?x1401)))
 (let (($x1574 (= ?x1539 ?x1548)))
 (let (($x1549 ((_ is stack ) ?x1215)))
 (let (($x1550 (= c__________ right-to-center)))
 (let (($x1551 (and $x1550 $x1549)))
 (let (($x1552 (= c__________ right-to-left)))
 (let (($x1553 (and $x1552 $x1549)))
 (let ((?x1541 (rest ?x1401)))
 (let (($x1569 (= ?x1539 ?x1541)))
 (let (($x1554 ((_ is stack ) ?x1401)))
 (let (($x1555 (= c__________ center-to-right)))
 (let (($x1556 (and $x1555 $x1554)))
 (let (($x1557 (= c__________ center-to-left)))
 (let (($x1558 (and $x1557 $x1554)))
 (let ((?x1181 (left s__________)))
 (let ((?x1399 (top ?x1181)))
 (let ((?x1540 (stack ?x1399 ?x1401)))
 (let (($x1568 (= ?x1539 ?x1540)))
 (let (($x1559 ((_ is stack ) ?x1181)))
 (let (($x1560 (= c__________ left-to-right)))
 (let (($x1561 (and $x1560 $x1559)))
 (let (($x1591 (ite $x1561 $x1568 (ite $x1558 $x1569 (ite $x1556 $x1569 (ite $x1553 $x1577 (ite $x1551 $x1574 $x1577)))))))
 (let (($x1562 (= c__________ left-to-center)))
 (let (($x1563 (and $x1562 $x1559)))
 (ite $x1563 $x1577 $x1591)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1319 (left s___________)))
 (let ((?x1457 (left s____________)))
 (let (($x1717 (= ?x1457 ?x1319)))
 (let ((?x1353 (right s___________)))
 (let ((?x1684 (top ?x1353)))
 (let ((?x1685 (stack ?x1684 ?x1319)))
 (let (($x1711 (= ?x1457 ?x1685)))
 (let (($x1687 ((_ is stack ) ?x1353)))
 (let (($x1690 (= c___________ right-to-left)))
 (let (($x1691 (and $x1690 $x1687)))
 (let ((?x1539 (center s___________)))
 (let (($x1692 ((_ is stack ) ?x1539)))
 (let (($x1693 (= c___________ center-to-right)))
 (let (($x1694 (and $x1693 $x1692)))
 (let ((?x1680 (top ?x1539)))
 (let ((?x1681 (stack ?x1680 ?x1319)))
 (let (($x1708 (= ?x1457 ?x1681)))
 (let (($x1695 (= c___________ center-to-left)))
 (let (($x1696 (and $x1695 $x1692)))
 (let ((?x1490 (rest ?x1319)))
 (let (($x1704 (= ?x1457 ?x1490)))
 (let (($x1697 ((_ is stack ) ?x1319)))
 (let (($x1698 (= c___________ left-to-right)))
 (let (($x1699 (and $x1698 $x1697)))
 (let (($x1700 (= c___________ left-to-center)))
 (let (($x1701 (and $x1700 $x1697)))
 (ite $x1701 $x1704 (ite $x1699 $x1704 (ite $x1696 $x1708 (ite $x1694 $x1717 (ite $x1691 $x1711 $x1717))))))))))))))))))))))))))))))))
(assert
 (let ((?x1353 (right s___________)))
 (let ((?x1491 (right s____________)))
 (let (($x1713 (= ?x1491 ?x1353)))
 (let ((?x1683 (rest ?x1353)))
 (let (($x1710 (= ?x1491 ?x1683)))
 (let (($x1687 ((_ is stack ) ?x1353)))
 (let (($x1688 (= c___________ right-to-center)))
 (let (($x1689 (and $x1688 $x1687)))
 (let (($x1690 (= c___________ right-to-left)))
 (let (($x1691 (and $x1690 $x1687)))
 (let ((?x1539 (center s___________)))
 (let ((?x1680 (top ?x1539)))
 (let ((?x1682 (stack ?x1680 ?x1353)))
 (let (($x1709 (= ?x1491 ?x1682)))
 (let (($x1692 ((_ is stack ) ?x1539)))
 (let (($x1693 (= c___________ center-to-right)))
 (let (($x1694 (and $x1693 $x1692)))
 (let (($x1695 (= c___________ center-to-left)))
 (let (($x1696 (and $x1695 $x1692)))
 (let ((?x1319 (left s___________)))
 (let (($x1697 ((_ is stack ) ?x1319)))
 (let (($x1698 (= c___________ left-to-right)))
 (let (($x1699 (and $x1698 $x1697)))
 (let (($x1730 (ite $x1699 $x1713 (ite $x1696 $x1713 (ite $x1694 $x1709 (ite $x1691 $x1710 (ite $x1689 $x1710 $x1713)))))))
 (let ((?x1537 (top ?x1319)))
 (let ((?x1676 (stack ?x1537 ?x1353)))
 (let (($x1705 (= ?x1491 ?x1676)))
 (let (($x1700 (= c___________ left-to-center)))
 (let (($x1701 (and $x1700 $x1697)))
 (ite $x1701 $x1705 $x1730)))))))))))))))))))))))))))))))
(assert
 (let ((?x1539 (center s___________)))
 (let ((?x1677 (center s____________)))
 (let (($x1715 (= ?x1677 ?x1539)))
 (let ((?x1353 (right s___________)))
 (let ((?x1684 (top ?x1353)))
 (let ((?x1686 (stack ?x1684 ?x1539)))
 (let (($x1712 (= ?x1677 ?x1686)))
 (let (($x1687 ((_ is stack ) ?x1353)))
 (let (($x1688 (= c___________ right-to-center)))
 (let (($x1689 (and $x1688 $x1687)))
 (let (($x1690 (= c___________ right-to-left)))
 (let (($x1691 (and $x1690 $x1687)))
 (let ((?x1679 (rest ?x1539)))
 (let (($x1707 (= ?x1677 ?x1679)))
 (let (($x1692 ((_ is stack ) ?x1539)))
 (let (($x1693 (= c___________ center-to-right)))
 (let (($x1694 (and $x1693 $x1692)))
 (let (($x1695 (= c___________ center-to-left)))
 (let (($x1696 (and $x1695 $x1692)))
 (let ((?x1319 (left s___________)))
 (let ((?x1537 (top ?x1319)))
 (let ((?x1678 (stack ?x1537 ?x1539)))
 (let (($x1706 (= ?x1677 ?x1678)))
 (let (($x1697 ((_ is stack ) ?x1319)))
 (let (($x1698 (= c___________ left-to-right)))
 (let (($x1699 (and $x1698 $x1697)))
 (let (($x1729 (ite $x1699 $x1706 (ite $x1696 $x1707 (ite $x1694 $x1707 (ite $x1691 $x1715 (ite $x1689 $x1712 $x1715)))))))
 (let (($x1700 (= c___________ left-to-center)))
 (let (($x1701 (and $x1700 $x1697)))
 (ite $x1701 $x1715 $x1729)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1457 (left s____________)))
 (let ((?x1595 (left s_____________)))
 (let (($x1855 (= ?x1595 ?x1457)))
 (let ((?x1491 (right s____________)))
 (let ((?x1822 (top ?x1491)))
 (let ((?x1823 (stack ?x1822 ?x1457)))
 (let (($x1849 (= ?x1595 ?x1823)))
 (let (($x1825 ((_ is stack ) ?x1491)))
 (let (($x1828 (= c____________ right-to-left)))
 (let (($x1829 (and $x1828 $x1825)))
 (let ((?x1677 (center s____________)))
 (let (($x1830 ((_ is stack ) ?x1677)))
 (let (($x1831 (= c____________ center-to-right)))
 (let (($x1832 (and $x1831 $x1830)))
 (let ((?x1818 (top ?x1677)))
 (let ((?x1819 (stack ?x1818 ?x1457)))
 (let (($x1846 (= ?x1595 ?x1819)))
 (let (($x1833 (= c____________ center-to-left)))
 (let (($x1834 (and $x1833 $x1830)))
 (let ((?x1628 (rest ?x1457)))
 (let (($x1842 (= ?x1595 ?x1628)))
 (let (($x1835 ((_ is stack ) ?x1457)))
 (let (($x1836 (= c____________ left-to-right)))
 (let (($x1837 (and $x1836 $x1835)))
 (let (($x1838 (= c____________ left-to-center)))
 (let (($x1839 (and $x1838 $x1835)))
 (ite $x1839 $x1842 (ite $x1837 $x1842 (ite $x1834 $x1846 (ite $x1832 $x1855 (ite $x1829 $x1849 $x1855))))))))))))))))))))))))))))))))
(assert
 (let ((?x1491 (right s____________)))
 (let ((?x1629 (right s_____________)))
 (let (($x1851 (= ?x1629 ?x1491)))
 (let ((?x1821 (rest ?x1491)))
 (let (($x1848 (= ?x1629 ?x1821)))
 (let (($x1825 ((_ is stack ) ?x1491)))
 (let (($x1826 (= c____________ right-to-center)))
 (let (($x1827 (and $x1826 $x1825)))
 (let (($x1828 (= c____________ right-to-left)))
 (let (($x1829 (and $x1828 $x1825)))
 (let ((?x1677 (center s____________)))
 (let ((?x1818 (top ?x1677)))
 (let ((?x1820 (stack ?x1818 ?x1491)))
 (let (($x1847 (= ?x1629 ?x1820)))
 (let (($x1830 ((_ is stack ) ?x1677)))
 (let (($x1831 (= c____________ center-to-right)))
 (let (($x1832 (and $x1831 $x1830)))
 (let (($x1833 (= c____________ center-to-left)))
 (let (($x1834 (and $x1833 $x1830)))
 (let ((?x1457 (left s____________)))
 (let (($x1835 ((_ is stack ) ?x1457)))
 (let (($x1836 (= c____________ left-to-right)))
 (let (($x1837 (and $x1836 $x1835)))
 (let (($x1868 (ite $x1837 $x1851 (ite $x1834 $x1851 (ite $x1832 $x1847 (ite $x1829 $x1848 (ite $x1827 $x1848 $x1851)))))))
 (let ((?x1675 (top ?x1457)))
 (let ((?x1814 (stack ?x1675 ?x1491)))
 (let (($x1843 (= ?x1629 ?x1814)))
 (let (($x1838 (= c____________ left-to-center)))
 (let (($x1839 (and $x1838 $x1835)))
 (ite $x1839 $x1843 $x1868)))))))))))))))))))))))))))))))
(assert
 (let ((?x1677 (center s____________)))
 (let ((?x1815 (center s_____________)))
 (let (($x1853 (= ?x1815 ?x1677)))
 (let ((?x1491 (right s____________)))
 (let ((?x1822 (top ?x1491)))
 (let ((?x1824 (stack ?x1822 ?x1677)))
 (let (($x1850 (= ?x1815 ?x1824)))
 (let (($x1825 ((_ is stack ) ?x1491)))
 (let (($x1826 (= c____________ right-to-center)))
 (let (($x1827 (and $x1826 $x1825)))
 (let (($x1828 (= c____________ right-to-left)))
 (let (($x1829 (and $x1828 $x1825)))
 (let ((?x1817 (rest ?x1677)))
 (let (($x1845 (= ?x1815 ?x1817)))
 (let (($x1830 ((_ is stack ) ?x1677)))
 (let (($x1831 (= c____________ center-to-right)))
 (let (($x1832 (and $x1831 $x1830)))
 (let (($x1833 (= c____________ center-to-left)))
 (let (($x1834 (and $x1833 $x1830)))
 (let ((?x1457 (left s____________)))
 (let ((?x1675 (top ?x1457)))
 (let ((?x1816 (stack ?x1675 ?x1677)))
 (let (($x1844 (= ?x1815 ?x1816)))
 (let (($x1835 ((_ is stack ) ?x1457)))
 (let (($x1836 (= c____________ left-to-right)))
 (let (($x1837 (and $x1836 $x1835)))
 (let (($x1867 (ite $x1837 $x1844 (ite $x1834 $x1845 (ite $x1832 $x1845 (ite $x1829 $x1853 (ite $x1827 $x1850 $x1853)))))))
 (let (($x1838 (= c____________ left-to-center)))
 (let (($x1839 (and $x1838 $x1835)))
 (ite $x1839 $x1853 $x1867)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1595 (left s_____________)))
 (let ((?x1733 (left s______________)))
 (let (($x1993 (= ?x1733 ?x1595)))
 (let ((?x1629 (right s_____________)))
 (let ((?x1960 (top ?x1629)))
 (let ((?x1961 (stack ?x1960 ?x1595)))
 (let (($x1987 (= ?x1733 ?x1961)))
 (let (($x1963 ((_ is stack ) ?x1629)))
 (let (($x1966 (= c_____________ right-to-left)))
 (let (($x1967 (and $x1966 $x1963)))
 (let ((?x1815 (center s_____________)))
 (let (($x1968 ((_ is stack ) ?x1815)))
 (let (($x1969 (= c_____________ center-to-right)))
 (let (($x1970 (and $x1969 $x1968)))
 (let ((?x1956 (top ?x1815)))
 (let ((?x1957 (stack ?x1956 ?x1595)))
 (let (($x1984 (= ?x1733 ?x1957)))
 (let (($x1971 (= c_____________ center-to-left)))
 (let (($x1972 (and $x1971 $x1968)))
 (let ((?x1766 (rest ?x1595)))
 (let (($x1980 (= ?x1733 ?x1766)))
 (let (($x1973 ((_ is stack ) ?x1595)))
 (let (($x1974 (= c_____________ left-to-right)))
 (let (($x1975 (and $x1974 $x1973)))
 (let (($x1976 (= c_____________ left-to-center)))
 (let (($x1977 (and $x1976 $x1973)))
 (ite $x1977 $x1980 (ite $x1975 $x1980 (ite $x1972 $x1984 (ite $x1970 $x1993 (ite $x1967 $x1987 $x1993))))))))))))))))))))))))))))))))
(assert
 (let ((?x1629 (right s_____________)))
 (let ((?x1767 (right s______________)))
 (let (($x1989 (= ?x1767 ?x1629)))
 (let ((?x1959 (rest ?x1629)))
 (let (($x1986 (= ?x1767 ?x1959)))
 (let (($x1963 ((_ is stack ) ?x1629)))
 (let (($x1964 (= c_____________ right-to-center)))
 (let (($x1965 (and $x1964 $x1963)))
 (let (($x1966 (= c_____________ right-to-left)))
 (let (($x1967 (and $x1966 $x1963)))
 (let ((?x1815 (center s_____________)))
 (let ((?x1956 (top ?x1815)))
 (let ((?x1958 (stack ?x1956 ?x1629)))
 (let (($x1985 (= ?x1767 ?x1958)))
 (let (($x1968 ((_ is stack ) ?x1815)))
 (let (($x1969 (= c_____________ center-to-right)))
 (let (($x1970 (and $x1969 $x1968)))
 (let (($x1971 (= c_____________ center-to-left)))
 (let (($x1972 (and $x1971 $x1968)))
 (let ((?x1595 (left s_____________)))
 (let (($x1973 ((_ is stack ) ?x1595)))
 (let (($x1974 (= c_____________ left-to-right)))
 (let (($x1975 (and $x1974 $x1973)))
 (let (($x2006 (ite $x1975 $x1989 (ite $x1972 $x1989 (ite $x1970 $x1985 (ite $x1967 $x1986 (ite $x1965 $x1986 $x1989)))))))
 (let ((?x1813 (top ?x1595)))
 (let ((?x1952 (stack ?x1813 ?x1629)))
 (let (($x1981 (= ?x1767 ?x1952)))
 (let (($x1976 (= c_____________ left-to-center)))
 (let (($x1977 (and $x1976 $x1973)))
 (ite $x1977 $x1981 $x2006)))))))))))))))))))))))))))))))
(assert
 (let ((?x1815 (center s_____________)))
 (let ((?x1953 (center s______________)))
 (let (($x1991 (= ?x1953 ?x1815)))
 (let ((?x1629 (right s_____________)))
 (let ((?x1960 (top ?x1629)))
 (let ((?x1962 (stack ?x1960 ?x1815)))
 (let (($x1988 (= ?x1953 ?x1962)))
 (let (($x1963 ((_ is stack ) ?x1629)))
 (let (($x1964 (= c_____________ right-to-center)))
 (let (($x1965 (and $x1964 $x1963)))
 (let (($x1966 (= c_____________ right-to-left)))
 (let (($x1967 (and $x1966 $x1963)))
 (let ((?x1955 (rest ?x1815)))
 (let (($x1983 (= ?x1953 ?x1955)))
 (let (($x1968 ((_ is stack ) ?x1815)))
 (let (($x1969 (= c_____________ center-to-right)))
 (let (($x1970 (and $x1969 $x1968)))
 (let (($x1971 (= c_____________ center-to-left)))
 (let (($x1972 (and $x1971 $x1968)))
 (let ((?x1595 (left s_____________)))
 (let ((?x1813 (top ?x1595)))
 (let ((?x1954 (stack ?x1813 ?x1815)))
 (let (($x1982 (= ?x1953 ?x1954)))
 (let (($x1973 ((_ is stack ) ?x1595)))
 (let (($x1974 (= c_____________ left-to-right)))
 (let (($x1975 (and $x1974 $x1973)))
 (let (($x2005 (ite $x1975 $x1982 (ite $x1972 $x1983 (ite $x1970 $x1983 (ite $x1967 $x1991 (ite $x1965 $x1988 $x1991)))))))
 (let (($x1976 (= c_____________ left-to-center)))
 (let (($x1977 (and $x1976 $x1973)))
 (ite $x1977 $x1991 $x2005)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1733 (left s______________)))
 (let ((?x1871 (left s_______________)))
 (let (($x2131 (= ?x1871 ?x1733)))
 (let ((?x1767 (right s______________)))
 (let ((?x2098 (top ?x1767)))
 (let ((?x2099 (stack ?x2098 ?x1733)))
 (let (($x2125 (= ?x1871 ?x2099)))
 (let (($x2101 ((_ is stack ) ?x1767)))
 (let (($x2104 (= c______________ right-to-left)))
 (let (($x2105 (and $x2104 $x2101)))
 (let ((?x1953 (center s______________)))
 (let (($x2106 ((_ is stack ) ?x1953)))
 (let (($x2107 (= c______________ center-to-right)))
 (let (($x2108 (and $x2107 $x2106)))
 (let ((?x2094 (top ?x1953)))
 (let ((?x2095 (stack ?x2094 ?x1733)))
 (let (($x2122 (= ?x1871 ?x2095)))
 (let (($x2109 (= c______________ center-to-left)))
 (let (($x2110 (and $x2109 $x2106)))
 (let ((?x1904 (rest ?x1733)))
 (let (($x2118 (= ?x1871 ?x1904)))
 (let (($x2111 ((_ is stack ) ?x1733)))
 (let (($x2112 (= c______________ left-to-right)))
 (let (($x2113 (and $x2112 $x2111)))
 (let (($x2114 (= c______________ left-to-center)))
 (let (($x2115 (and $x2114 $x2111)))
 (ite $x2115 $x2118 (ite $x2113 $x2118 (ite $x2110 $x2122 (ite $x2108 $x2131 (ite $x2105 $x2125 $x2131))))))))))))))))))))))))))))))))
(assert
 (let ((?x1767 (right s______________)))
 (let ((?x1905 (right s_______________)))
 (let (($x2127 (= ?x1905 ?x1767)))
 (let ((?x2097 (rest ?x1767)))
 (let (($x2124 (= ?x1905 ?x2097)))
 (let (($x2101 ((_ is stack ) ?x1767)))
 (let (($x2102 (= c______________ right-to-center)))
 (let (($x2103 (and $x2102 $x2101)))
 (let (($x2104 (= c______________ right-to-left)))
 (let (($x2105 (and $x2104 $x2101)))
 (let ((?x1953 (center s______________)))
 (let ((?x2094 (top ?x1953)))
 (let ((?x2096 (stack ?x2094 ?x1767)))
 (let (($x2123 (= ?x1905 ?x2096)))
 (let (($x2106 ((_ is stack ) ?x1953)))
 (let (($x2107 (= c______________ center-to-right)))
 (let (($x2108 (and $x2107 $x2106)))
 (let (($x2109 (= c______________ center-to-left)))
 (let (($x2110 (and $x2109 $x2106)))
 (let ((?x1733 (left s______________)))
 (let (($x2111 ((_ is stack ) ?x1733)))
 (let (($x2112 (= c______________ left-to-right)))
 (let (($x2113 (and $x2112 $x2111)))
 (let (($x2144 (ite $x2113 $x2127 (ite $x2110 $x2127 (ite $x2108 $x2123 (ite $x2105 $x2124 (ite $x2103 $x2124 $x2127)))))))
 (let ((?x1951 (top ?x1733)))
 (let ((?x2090 (stack ?x1951 ?x1767)))
 (let (($x2119 (= ?x1905 ?x2090)))
 (let (($x2114 (= c______________ left-to-center)))
 (let (($x2115 (and $x2114 $x2111)))
 (ite $x2115 $x2119 $x2144)))))))))))))))))))))))))))))))
(assert
 (let ((?x1953 (center s______________)))
 (let ((?x2091 (center s_______________)))
 (let (($x2129 (= ?x2091 ?x1953)))
 (let ((?x1767 (right s______________)))
 (let ((?x2098 (top ?x1767)))
 (let ((?x2100 (stack ?x2098 ?x1953)))
 (let (($x2126 (= ?x2091 ?x2100)))
 (let (($x2101 ((_ is stack ) ?x1767)))
 (let (($x2102 (= c______________ right-to-center)))
 (let (($x2103 (and $x2102 $x2101)))
 (let (($x2104 (= c______________ right-to-left)))
 (let (($x2105 (and $x2104 $x2101)))
 (let ((?x2093 (rest ?x1953)))
 (let (($x2121 (= ?x2091 ?x2093)))
 (let (($x2106 ((_ is stack ) ?x1953)))
 (let (($x2107 (= c______________ center-to-right)))
 (let (($x2108 (and $x2107 $x2106)))
 (let (($x2109 (= c______________ center-to-left)))
 (let (($x2110 (and $x2109 $x2106)))
 (let ((?x1733 (left s______________)))
 (let ((?x1951 (top ?x1733)))
 (let ((?x2092 (stack ?x1951 ?x1953)))
 (let (($x2120 (= ?x2091 ?x2092)))
 (let (($x2111 ((_ is stack ) ?x1733)))
 (let (($x2112 (= c______________ left-to-right)))
 (let (($x2113 (and $x2112 $x2111)))
 (let (($x2143 (ite $x2113 $x2120 (ite $x2110 $x2121 (ite $x2108 $x2121 (ite $x2105 $x2129 (ite $x2103 $x2126 $x2129)))))))
 (let (($x2114 (= c______________ left-to-center)))
 (let (($x2115 (and $x2114 $x2111)))
 (ite $x2115 $x2129 $x2143)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1871 (left s_______________)))
 (let ((?x2009 (left s________________)))
 (let (($x2269 (= ?x2009 ?x1871)))
 (let ((?x1905 (right s_______________)))
 (let ((?x2236 (top ?x1905)))
 (let ((?x2237 (stack ?x2236 ?x1871)))
 (let (($x2263 (= ?x2009 ?x2237)))
 (let (($x2239 ((_ is stack ) ?x1905)))
 (let (($x2242 (= c_______________ right-to-left)))
 (let (($x2243 (and $x2242 $x2239)))
 (let ((?x2091 (center s_______________)))
 (let (($x2244 ((_ is stack ) ?x2091)))
 (let (($x2245 (= c_______________ center-to-right)))
 (let (($x2246 (and $x2245 $x2244)))
 (let ((?x2232 (top ?x2091)))
 (let ((?x2233 (stack ?x2232 ?x1871)))
 (let (($x2260 (= ?x2009 ?x2233)))
 (let (($x2247 (= c_______________ center-to-left)))
 (let (($x2248 (and $x2247 $x2244)))
 (let ((?x2042 (rest ?x1871)))
 (let (($x2256 (= ?x2009 ?x2042)))
 (let (($x2249 ((_ is stack ) ?x1871)))
 (let (($x2250 (= c_______________ left-to-right)))
 (let (($x2251 (and $x2250 $x2249)))
 (let (($x2252 (= c_______________ left-to-center)))
 (let (($x2253 (and $x2252 $x2249)))
 (ite $x2253 $x2256 (ite $x2251 $x2256 (ite $x2248 $x2260 (ite $x2246 $x2269 (ite $x2243 $x2263 $x2269))))))))))))))))))))))))))))))))
(assert
 (let ((?x1905 (right s_______________)))
 (let ((?x2043 (right s________________)))
 (let (($x2265 (= ?x2043 ?x1905)))
 (let ((?x2235 (rest ?x1905)))
 (let (($x2262 (= ?x2043 ?x2235)))
 (let (($x2239 ((_ is stack ) ?x1905)))
 (let (($x2240 (= c_______________ right-to-center)))
 (let (($x2241 (and $x2240 $x2239)))
 (let (($x2242 (= c_______________ right-to-left)))
 (let (($x2243 (and $x2242 $x2239)))
 (let ((?x2091 (center s_______________)))
 (let ((?x2232 (top ?x2091)))
 (let ((?x2234 (stack ?x2232 ?x1905)))
 (let (($x2261 (= ?x2043 ?x2234)))
 (let (($x2244 ((_ is stack ) ?x2091)))
 (let (($x2245 (= c_______________ center-to-right)))
 (let (($x2246 (and $x2245 $x2244)))
 (let (($x2247 (= c_______________ center-to-left)))
 (let (($x2248 (and $x2247 $x2244)))
 (let ((?x1871 (left s_______________)))
 (let (($x2249 ((_ is stack ) ?x1871)))
 (let (($x2250 (= c_______________ left-to-right)))
 (let (($x2251 (and $x2250 $x2249)))
 (let (($x2282 (ite $x2251 $x2265 (ite $x2248 $x2265 (ite $x2246 $x2261 (ite $x2243 $x2262 (ite $x2241 $x2262 $x2265)))))))
 (let ((?x2089 (top ?x1871)))
 (let ((?x2228 (stack ?x2089 ?x1905)))
 (let (($x2257 (= ?x2043 ?x2228)))
 (let (($x2252 (= c_______________ left-to-center)))
 (let (($x2253 (and $x2252 $x2249)))
 (ite $x2253 $x2257 $x2282)))))))))))))))))))))))))))))))
(assert
 (let ((?x2091 (center s_______________)))
 (let ((?x2229 (center s________________)))
 (let (($x2267 (= ?x2229 ?x2091)))
 (let ((?x1905 (right s_______________)))
 (let ((?x2236 (top ?x1905)))
 (let ((?x2238 (stack ?x2236 ?x2091)))
 (let (($x2264 (= ?x2229 ?x2238)))
 (let (($x2239 ((_ is stack ) ?x1905)))
 (let (($x2240 (= c_______________ right-to-center)))
 (let (($x2241 (and $x2240 $x2239)))
 (let (($x2242 (= c_______________ right-to-left)))
 (let (($x2243 (and $x2242 $x2239)))
 (let ((?x2231 (rest ?x2091)))
 (let (($x2259 (= ?x2229 ?x2231)))
 (let (($x2244 ((_ is stack ) ?x2091)))
 (let (($x2245 (= c_______________ center-to-right)))
 (let (($x2246 (and $x2245 $x2244)))
 (let (($x2247 (= c_______________ center-to-left)))
 (let (($x2248 (and $x2247 $x2244)))
 (let ((?x1871 (left s_______________)))
 (let ((?x2089 (top ?x1871)))
 (let ((?x2230 (stack ?x2089 ?x2091)))
 (let (($x2258 (= ?x2229 ?x2230)))
 (let (($x2249 ((_ is stack ) ?x1871)))
 (let (($x2250 (= c_______________ left-to-right)))
 (let (($x2251 (and $x2250 $x2249)))
 (let (($x2281 (ite $x2251 $x2258 (ite $x2248 $x2259 (ite $x2246 $x2259 (ite $x2243 $x2267 (ite $x2241 $x2264 $x2267)))))))
 (let (($x2252 (= c_______________ left-to-center)))
 (let (($x2253 (and $x2252 $x2249)))
 (ite $x2253 $x2267 $x2281)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x2009 (left s________________)))
 (let ((?x2147 (left s_________________)))
 (let (($x2407 (= ?x2147 ?x2009)))
 (let ((?x2043 (right s________________)))
 (let ((?x2374 (top ?x2043)))
 (let ((?x2375 (stack ?x2374 ?x2009)))
 (let (($x2401 (= ?x2147 ?x2375)))
 (let (($x2377 ((_ is stack ) ?x2043)))
 (let (($x2380 (= c________________ right-to-left)))
 (let (($x2381 (and $x2380 $x2377)))
 (let ((?x2229 (center s________________)))
 (let (($x2382 ((_ is stack ) ?x2229)))
 (let (($x2383 (= c________________ center-to-right)))
 (let (($x2384 (and $x2383 $x2382)))
 (let ((?x2370 (top ?x2229)))
 (let ((?x2371 (stack ?x2370 ?x2009)))
 (let (($x2398 (= ?x2147 ?x2371)))
 (let (($x2385 (= c________________ center-to-left)))
 (let (($x2386 (and $x2385 $x2382)))
 (let ((?x2180 (rest ?x2009)))
 (let (($x2394 (= ?x2147 ?x2180)))
 (let (($x2387 ((_ is stack ) ?x2009)))
 (let (($x2388 (= c________________ left-to-right)))
 (let (($x2389 (and $x2388 $x2387)))
 (let (($x2390 (= c________________ left-to-center)))
 (let (($x2391 (and $x2390 $x2387)))
 (ite $x2391 $x2394 (ite $x2389 $x2394 (ite $x2386 $x2398 (ite $x2384 $x2407 (ite $x2381 $x2401 $x2407))))))))))))))))))))))))))))))))
(assert
 (let ((?x2043 (right s________________)))
 (let ((?x2181 (right s_________________)))
 (let (($x2403 (= ?x2181 ?x2043)))
 (let ((?x2373 (rest ?x2043)))
 (let (($x2400 (= ?x2181 ?x2373)))
 (let (($x2377 ((_ is stack ) ?x2043)))
 (let (($x2378 (= c________________ right-to-center)))
 (let (($x2379 (and $x2378 $x2377)))
 (let (($x2380 (= c________________ right-to-left)))
 (let (($x2381 (and $x2380 $x2377)))
 (let ((?x2229 (center s________________)))
 (let ((?x2370 (top ?x2229)))
 (let ((?x2372 (stack ?x2370 ?x2043)))
 (let (($x2399 (= ?x2181 ?x2372)))
 (let (($x2382 ((_ is stack ) ?x2229)))
 (let (($x2383 (= c________________ center-to-right)))
 (let (($x2384 (and $x2383 $x2382)))
 (let (($x2385 (= c________________ center-to-left)))
 (let (($x2386 (and $x2385 $x2382)))
 (let ((?x2009 (left s________________)))
 (let (($x2387 ((_ is stack ) ?x2009)))
 (let (($x2388 (= c________________ left-to-right)))
 (let (($x2389 (and $x2388 $x2387)))
 (let (($x2420 (ite $x2389 $x2403 (ite $x2386 $x2403 (ite $x2384 $x2399 (ite $x2381 $x2400 (ite $x2379 $x2400 $x2403)))))))
 (let ((?x2227 (top ?x2009)))
 (let ((?x2366 (stack ?x2227 ?x2043)))
 (let (($x2395 (= ?x2181 ?x2366)))
 (let (($x2390 (= c________________ left-to-center)))
 (let (($x2391 (and $x2390 $x2387)))
 (ite $x2391 $x2395 $x2420)))))))))))))))))))))))))))))))
(assert
 (let ((?x2229 (center s________________)))
 (let ((?x2367 (center s_________________)))
 (let (($x2405 (= ?x2367 ?x2229)))
 (let ((?x2043 (right s________________)))
 (let ((?x2374 (top ?x2043)))
 (let ((?x2376 (stack ?x2374 ?x2229)))
 (let (($x2402 (= ?x2367 ?x2376)))
 (let (($x2377 ((_ is stack ) ?x2043)))
 (let (($x2378 (= c________________ right-to-center)))
 (let (($x2379 (and $x2378 $x2377)))
 (let (($x2380 (= c________________ right-to-left)))
 (let (($x2381 (and $x2380 $x2377)))
 (let ((?x2369 (rest ?x2229)))
 (let (($x2397 (= ?x2367 ?x2369)))
 (let (($x2382 ((_ is stack ) ?x2229)))
 (let (($x2383 (= c________________ center-to-right)))
 (let (($x2384 (and $x2383 $x2382)))
 (let (($x2385 (= c________________ center-to-left)))
 (let (($x2386 (and $x2385 $x2382)))
 (let ((?x2009 (left s________________)))
 (let ((?x2227 (top ?x2009)))
 (let ((?x2368 (stack ?x2227 ?x2229)))
 (let (($x2396 (= ?x2367 ?x2368)))
 (let (($x2387 ((_ is stack ) ?x2009)))
 (let (($x2388 (= c________________ left-to-right)))
 (let (($x2389 (and $x2388 $x2387)))
 (let (($x2419 (ite $x2389 $x2396 (ite $x2386 $x2397 (ite $x2384 $x2397 (ite $x2381 $x2405 (ite $x2379 $x2402 $x2405)))))))
 (let (($x2390 (= c________________ left-to-center)))
 (let (($x2391 (and $x2390 $x2387)))
 (ite $x2391 $x2405 $x2419)))))))))))))))))))))))))))))))
(assert
 (let ((?x87 (stack W (stack T (stack R (stack D (stack C (stack A empty))))))))
 (let ((?x88 (stack X ?x87)))
 (let ((?x2181 (right s_________________)))
 (let (($x2423 (= ?x2181 ?x88)))
 (let ((?x39 (stack B empty)))
 (let ((?x2367 (center s_________________)))
 (let (($x2454 (= ?x2367 ?x39)))
 (let ((?x69 (stack M (stack Q (stack J (stack N (stack F (stack Y empty))))))))
 (let ((?x75 (stack G (stack I (stack U (stack H (stack E (stack Z ?x69))))))))
 (let ((?x81 (stack O (stack V (stack L (stack S (stack P (stack K ?x75))))))))
 (let ((?x2147 (left s_________________)))
 (let (($x2455 (= ?x2147 ?x81)))
 (let (($x2457 (not (and $x2455 $x2454 $x2423))))
 (not $x2457)))))))))))))))
(check-sat)
(exit)
