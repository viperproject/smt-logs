(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status sat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H 0)) (((A) (B) (C) (D) (E) (F) (G) (H))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x79 (left s_tmp_)))
 (= ?x79 empty)))
(assert
 (let ((?x82 (center s_tmp__)))
 (= ?x82 empty)))
(assert
 (let ((?x20 (stack A empty)))
 (let ((?x21 (stack B ?x20)))
 (let ((?x22 (stack C ?x21)))
 (let ((?x23 (stack D ?x22)))
 (let ((?x24 (stack E ?x23)))
 (let ((?x25 (stack F ?x24)))
 (let ((?x26 (stack G ?x25)))
 (let ((?x27 (stack H ?x26)))
 (let ((?x85 (right s_tmp___)))
 (= ?x85 ?x27)))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x112 (left s_tmp__)))
 (= (left s_tmp___) ?x112)))
(assert
 (let ((?x82 (center s_tmp__)))
 (= (center s_tmp___) ?x82)))
(assert
 (let ((?x116 (center s_tmp_)))
 (= ?x116 (center s_tmp))))
(assert
 (let ((?x119 (right s_tmp_)))
 (= ?x119 (right s_tmp))))
(assert
 (let ((?x79 (left s_tmp_)))
 (let ((?x112 (left s_tmp__)))
 (= ?x112 ?x79))))
(assert
 (let ((?x119 (right s_tmp_)))
 (let ((?x123 (right s_tmp__)))
 (= ?x123 ?x119))))
(assert
 (= c__ c!1))
(assert
 (let ((?x56 (left s_)))
 (let ((?x191 (left s__)))
 (let (($x236 (= ?x191 ?x56)))
 (let ((?x59 (right s_)))
 (let (($x206 ((_ is stack ) ?x59)))
 (let (($x209 (= c_ right-to-left)))
 (let (($x210 (and $x209 $x206)))
 (let ((?x61 (center s_)))
 (let (($x211 ((_ is stack ) ?x61)))
 (let (($x213 (and (= c_ center-to-right) $x211)))
 (let (($x215 (and (= c_ center-to-left) $x211)))
 (let (($x245 (ite $x215 (= ?x191 (stack (top ?x61) ?x56)) (ite $x213 $x236 (ite $x210 (= ?x191 (stack (top ?x59) ?x56)) $x236)))))
 (let (($x223 (= ?x191 (rest ?x56))))
 (let (($x216 ((_ is stack ) ?x56)))
 (let (($x218 (and (= c_ left-to-right) $x216)))
 (let (($x220 (and (= c_ left-to-center) $x216)))
 (ite $x220 $x223 (ite $x218 $x223 $x245)))))))))))))))))))
(assert
 (let ((?x59 (right s_)))
 (let ((?x199 (right s__)))
 (let (($x232 (= ?x199 ?x59)))
 (let (($x229 (= ?x199 (rest ?x59))))
 (let (($x206 ((_ is stack ) ?x59)))
 (let (($x207 (= c_ right-to-center)))
 (let (($x208 (and $x207 $x206)))
 (let (($x209 (= c_ right-to-left)))
 (let (($x210 (and $x209 $x206)))
 (let ((?x61 (center s_)))
 (let (($x211 ((_ is stack ) ?x61)))
 (let (($x213 (and (= c_ center-to-right) $x211)))
 (let (($x242 (ite $x213 (= ?x199 (stack (top ?x61) ?x59)) (ite $x210 $x229 (ite $x208 $x229 $x232)))))
 (let (($x215 (and (= c_ center-to-left) $x211)))
 (let ((?x56 (left s_)))
 (let (($x216 ((_ is stack ) ?x56)))
 (let (($x218 (and (= c_ left-to-right) $x216)))
 (let (($x220 (and (= c_ left-to-center) $x216)))
 (ite $x220 (= ?x199 (stack (top ?x56) ?x59)) (ite $x218 $x232 (ite $x215 $x232 $x242))))))))))))))))))))))
(assert
 (let ((?x61 (center s_)))
 (let ((?x193 (center s__)))
 (let (($x234 (= ?x193 ?x61)))
 (let ((?x59 (right s_)))
 (let (($x206 ((_ is stack ) ?x59)))
 (let (($x207 (= c_ right-to-center)))
 (let (($x208 (and $x207 $x206)))
 (let (($x209 (= c_ right-to-left)))
 (let (($x210 (and $x209 $x206)))
 (let (($x226 (= ?x193 (rest ?x61))))
 (let (($x211 ((_ is stack ) ?x61)))
 (let (($x213 (and (= c_ center-to-right) $x211)))
 (let (($x241 (ite $x213 $x226 (ite $x210 $x234 (ite $x208 (= ?x193 (stack (top ?x59) ?x61)) $x234)))))
 (let (($x215 (and (= c_ center-to-left) $x211)))
 (let ((?x56 (left s_)))
 (let (($x216 ((_ is stack ) ?x56)))
 (let (($x218 (and (= c_ left-to-right) $x216)))
 (let (($x220 (and (= c_ left-to-center) $x216)))
 (ite $x220 $x234 (ite $x218 (= ?x193 (stack (top ?x56) ?x61)) (ite $x215 $x226 $x241))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x191 (left s__)))
 (let ((?x126 (left s___)))
 (let (($x327 (= ?x126 ?x191)))
 (let ((?x199 (right s__)))
 (let ((?x294 (top ?x199)))
 (let ((?x295 (stack ?x294 ?x191)))
 (let (($x321 (= ?x126 ?x295)))
 (let (($x297 ((_ is stack ) ?x199)))
 (let (($x300 (= c__ right-to-left)))
 (let (($x301 (and $x300 $x297)))
 (let ((?x193 (center s__)))
 (let (($x302 ((_ is stack ) ?x193)))
 (let (($x303 (= c__ center-to-right)))
 (let (($x304 (and $x303 $x302)))
 (let ((?x290 (top ?x193)))
 (let ((?x291 (stack ?x290 ?x191)))
 (let (($x318 (= ?x126 ?x291)))
 (let (($x305 (= c__ center-to-left)))
 (let (($x306 (and $x305 $x302)))
 (let ((?x128 (rest ?x191)))
 (let (($x314 (= ?x126 ?x128)))
 (let (($x307 ((_ is stack ) ?x191)))
 (let (($x308 (= c__ left-to-right)))
 (let (($x309 (and $x308 $x307)))
 (let (($x310 (= c__ left-to-center)))
 (let (($x311 (and $x310 $x307)))
 (ite $x311 $x314 (ite $x309 $x314 (ite $x306 $x318 (ite $x304 $x327 (ite $x301 $x321 $x327))))))))))))))))))))))))))))))))
(assert
 (let ((?x199 (right s__)))
 (let ((?x129 (right s___)))
 (let (($x323 (= ?x129 ?x199)))
 (let ((?x293 (rest ?x199)))
 (let (($x320 (= ?x129 ?x293)))
 (let (($x297 ((_ is stack ) ?x199)))
 (let (($x298 (= c__ right-to-center)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c__ right-to-left)))
 (let (($x301 (and $x300 $x297)))
 (let ((?x193 (center s__)))
 (let ((?x290 (top ?x193)))
 (let ((?x292 (stack ?x290 ?x199)))
 (let (($x319 (= ?x129 ?x292)))
 (let (($x302 ((_ is stack ) ?x193)))
 (let (($x303 (= c__ center-to-right)))
 (let (($x304 (and $x303 $x302)))
 (let (($x305 (= c__ center-to-left)))
 (let (($x306 (and $x305 $x302)))
 (let ((?x191 (left s__)))
 (let (($x307 ((_ is stack ) ?x191)))
 (let (($x308 (= c__ left-to-right)))
 (let (($x309 (and $x308 $x307)))
 (let (($x340 (ite $x309 $x323 (ite $x306 $x323 (ite $x304 $x319 (ite $x301 $x320 (ite $x299 $x320 $x323)))))))
 (let ((?x188 (top ?x191)))
 (let ((?x286 (stack ?x188 ?x199)))
 (let (($x315 (= ?x129 ?x286)))
 (let (($x310 (= c__ left-to-center)))
 (let (($x311 (and $x310 $x307)))
 (ite $x311 $x315 $x340)))))))))))))))))))))))))))))))
(assert
 (let ((?x193 (center s__)))
 (let ((?x287 (center s___)))
 (let (($x325 (= ?x287 ?x193)))
 (let ((?x199 (right s__)))
 (let ((?x294 (top ?x199)))
 (let ((?x296 (stack ?x294 ?x193)))
 (let (($x322 (= ?x287 ?x296)))
 (let (($x297 ((_ is stack ) ?x199)))
 (let (($x298 (= c__ right-to-center)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c__ right-to-left)))
 (let (($x301 (and $x300 $x297)))
 (let ((?x289 (rest ?x193)))
 (let (($x317 (= ?x287 ?x289)))
 (let (($x302 ((_ is stack ) ?x193)))
 (let (($x303 (= c__ center-to-right)))
 (let (($x304 (and $x303 $x302)))
 (let (($x305 (= c__ center-to-left)))
 (let (($x306 (and $x305 $x302)))
 (let ((?x191 (left s__)))
 (let ((?x188 (top ?x191)))
 (let ((?x288 (stack ?x188 ?x193)))
 (let (($x316 (= ?x287 ?x288)))
 (let (($x307 ((_ is stack ) ?x191)))
 (let (($x308 (= c__ left-to-right)))
 (let (($x309 (and $x308 $x307)))
 (let (($x339 (ite $x309 $x316 (ite $x306 $x317 (ite $x304 $x317 (ite $x301 $x325 (ite $x299 $x322 $x325)))))))
 (let (($x310 (= c__ left-to-center)))
 (let (($x311 (and $x310 $x307)))
 (ite $x311 $x325 $x339)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x126 (left s___)))
 (let ((?x252 (left s____)))
 (let (($x465 (= ?x252 ?x126)))
 (let ((?x129 (right s___)))
 (let ((?x432 (top ?x129)))
 (let ((?x433 (stack ?x432 ?x126)))
 (let (($x459 (= ?x252 ?x433)))
 (let (($x435 ((_ is stack ) ?x129)))
 (let (($x438 (= c___ right-to-left)))
 (let (($x439 (and $x438 $x435)))
 (let ((?x287 (center s___)))
 (let (($x440 ((_ is stack ) ?x287)))
 (let (($x441 (= c___ center-to-right)))
 (let (($x442 (and $x441 $x440)))
 (let ((?x428 (top ?x287)))
 (let ((?x429 (stack ?x428 ?x126)))
 (let (($x456 (= ?x252 ?x429)))
 (let (($x443 (= c___ center-to-left)))
 (let (($x444 (and $x443 $x440)))
 (let ((?x270 (rest ?x126)))
 (let (($x452 (= ?x252 ?x270)))
 (let (($x445 ((_ is stack ) ?x126)))
 (let (($x446 (= c___ left-to-right)))
 (let (($x447 (and $x446 $x445)))
 (let (($x448 (= c___ left-to-center)))
 (let (($x449 (and $x448 $x445)))
 (ite $x449 $x452 (ite $x447 $x452 (ite $x444 $x456 (ite $x442 $x465 (ite $x439 $x459 $x465))))))))))))))))))))))))))))))))
(assert
 (let ((?x129 (right s___)))
 (let ((?x271 (right s____)))
 (let (($x461 (= ?x271 ?x129)))
 (let ((?x431 (rest ?x129)))
 (let (($x458 (= ?x271 ?x431)))
 (let (($x435 ((_ is stack ) ?x129)))
 (let (($x436 (= c___ right-to-center)))
 (let (($x437 (and $x436 $x435)))
 (let (($x438 (= c___ right-to-left)))
 (let (($x439 (and $x438 $x435)))
 (let ((?x287 (center s___)))
 (let ((?x428 (top ?x287)))
 (let ((?x430 (stack ?x428 ?x129)))
 (let (($x457 (= ?x271 ?x430)))
 (let (($x440 ((_ is stack ) ?x287)))
 (let (($x441 (= c___ center-to-right)))
 (let (($x442 (and $x441 $x440)))
 (let (($x443 (= c___ center-to-left)))
 (let (($x444 (and $x443 $x440)))
 (let ((?x126 (left s___)))
 (let (($x445 ((_ is stack ) ?x126)))
 (let (($x446 (= c___ left-to-right)))
 (let (($x447 (and $x446 $x445)))
 (let (($x478 (ite $x447 $x461 (ite $x444 $x461 (ite $x442 $x457 (ite $x439 $x458 (ite $x437 $x458 $x461)))))))
 (let ((?x285 (top ?x126)))
 (let ((?x424 (stack ?x285 ?x129)))
 (let (($x453 (= ?x271 ?x424)))
 (let (($x448 (= c___ left-to-center)))
 (let (($x449 (and $x448 $x445)))
 (ite $x449 $x453 $x478)))))))))))))))))))))))))))))))
(assert
 (let ((?x287 (center s___)))
 (let ((?x425 (center s____)))
 (let (($x463 (= ?x425 ?x287)))
 (let ((?x129 (right s___)))
 (let ((?x432 (top ?x129)))
 (let ((?x434 (stack ?x432 ?x287)))
 (let (($x460 (= ?x425 ?x434)))
 (let (($x435 ((_ is stack ) ?x129)))
 (let (($x436 (= c___ right-to-center)))
 (let (($x437 (and $x436 $x435)))
 (let (($x438 (= c___ right-to-left)))
 (let (($x439 (and $x438 $x435)))
 (let ((?x427 (rest ?x287)))
 (let (($x455 (= ?x425 ?x427)))
 (let (($x440 ((_ is stack ) ?x287)))
 (let (($x441 (= c___ center-to-right)))
 (let (($x442 (and $x441 $x440)))
 (let (($x443 (= c___ center-to-left)))
 (let (($x444 (and $x443 $x440)))
 (let ((?x126 (left s___)))
 (let ((?x285 (top ?x126)))
 (let ((?x426 (stack ?x285 ?x287)))
 (let (($x454 (= ?x425 ?x426)))
 (let (($x445 ((_ is stack ) ?x126)))
 (let (($x446 (= c___ left-to-right)))
 (let (($x447 (and $x446 $x445)))
 (let (($x477 (ite $x447 $x454 (ite $x444 $x455 (ite $x442 $x455 (ite $x439 $x463 (ite $x437 $x460 $x463)))))))
 (let (($x448 (= c___ left-to-center)))
 (let (($x449 (and $x448 $x445)))
 (ite $x449 $x463 $x477)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x252 (left s____)))
 (let ((?x343 (left s_____)))
 (let (($x603 (= ?x343 ?x252)))
 (let ((?x271 (right s____)))
 (let ((?x570 (top ?x271)))
 (let ((?x571 (stack ?x570 ?x252)))
 (let (($x597 (= ?x343 ?x571)))
 (let (($x573 ((_ is stack ) ?x271)))
 (let (($x576 (= c____ right-to-left)))
 (let (($x577 (and $x576 $x573)))
 (let ((?x425 (center s____)))
 (let (($x578 ((_ is stack ) ?x425)))
 (let (($x579 (= c____ center-to-right)))
 (let (($x580 (and $x579 $x578)))
 (let ((?x566 (top ?x425)))
 (let ((?x567 (stack ?x566 ?x252)))
 (let (($x594 (= ?x343 ?x567)))
 (let (($x581 (= c____ center-to-left)))
 (let (($x582 (and $x581 $x578)))
 (let ((?x376 (rest ?x252)))
 (let (($x590 (= ?x343 ?x376)))
 (let (($x583 ((_ is stack ) ?x252)))
 (let (($x584 (= c____ left-to-right)))
 (let (($x585 (and $x584 $x583)))
 (let (($x586 (= c____ left-to-center)))
 (let (($x587 (and $x586 $x583)))
 (ite $x587 $x590 (ite $x585 $x590 (ite $x582 $x594 (ite $x580 $x603 (ite $x577 $x597 $x603))))))))))))))))))))))))))))))))
(assert
 (let ((?x271 (right s____)))
 (let ((?x377 (right s_____)))
 (let (($x599 (= ?x377 ?x271)))
 (let ((?x569 (rest ?x271)))
 (let (($x596 (= ?x377 ?x569)))
 (let (($x573 ((_ is stack ) ?x271)))
 (let (($x574 (= c____ right-to-center)))
 (let (($x575 (and $x574 $x573)))
 (let (($x576 (= c____ right-to-left)))
 (let (($x577 (and $x576 $x573)))
 (let ((?x425 (center s____)))
 (let ((?x566 (top ?x425)))
 (let ((?x568 (stack ?x566 ?x271)))
 (let (($x595 (= ?x377 ?x568)))
 (let (($x578 ((_ is stack ) ?x425)))
 (let (($x579 (= c____ center-to-right)))
 (let (($x580 (and $x579 $x578)))
 (let (($x581 (= c____ center-to-left)))
 (let (($x582 (and $x581 $x578)))
 (let ((?x252 (left s____)))
 (let (($x583 ((_ is stack ) ?x252)))
 (let (($x584 (= c____ left-to-right)))
 (let (($x585 (and $x584 $x583)))
 (let (($x616 (ite $x585 $x599 (ite $x582 $x599 (ite $x580 $x595 (ite $x577 $x596 (ite $x575 $x596 $x599)))))))
 (let ((?x423 (top ?x252)))
 (let ((?x562 (stack ?x423 ?x271)))
 (let (($x591 (= ?x377 ?x562)))
 (let (($x586 (= c____ left-to-center)))
 (let (($x587 (and $x586 $x583)))
 (ite $x587 $x591 $x616)))))))))))))))))))))))))))))))
(assert
 (let ((?x425 (center s____)))
 (let ((?x563 (center s_____)))
 (let (($x601 (= ?x563 ?x425)))
 (let ((?x271 (right s____)))
 (let ((?x570 (top ?x271)))
 (let ((?x572 (stack ?x570 ?x425)))
 (let (($x598 (= ?x563 ?x572)))
 (let (($x573 ((_ is stack ) ?x271)))
 (let (($x574 (= c____ right-to-center)))
 (let (($x575 (and $x574 $x573)))
 (let (($x576 (= c____ right-to-left)))
 (let (($x577 (and $x576 $x573)))
 (let ((?x565 (rest ?x425)))
 (let (($x593 (= ?x563 ?x565)))
 (let (($x578 ((_ is stack ) ?x425)))
 (let (($x579 (= c____ center-to-right)))
 (let (($x580 (and $x579 $x578)))
 (let (($x581 (= c____ center-to-left)))
 (let (($x582 (and $x581 $x578)))
 (let ((?x252 (left s____)))
 (let ((?x423 (top ?x252)))
 (let ((?x564 (stack ?x423 ?x425)))
 (let (($x592 (= ?x563 ?x564)))
 (let (($x583 ((_ is stack ) ?x252)))
 (let (($x584 (= c____ left-to-right)))
 (let (($x585 (and $x584 $x583)))
 (let (($x615 (ite $x585 $x592 (ite $x582 $x593 (ite $x580 $x593 (ite $x577 $x601 (ite $x575 $x598 $x601)))))))
 (let (($x586 (= c____ left-to-center)))
 (let (($x587 (and $x586 $x583)))
 (ite $x587 $x601 $x615)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x343 (left s_____)))
 (let ((?x481 (left s______)))
 (let (($x741 (= ?x481 ?x343)))
 (let ((?x377 (right s_____)))
 (let ((?x708 (top ?x377)))
 (let ((?x709 (stack ?x708 ?x343)))
 (let (($x735 (= ?x481 ?x709)))
 (let (($x711 ((_ is stack ) ?x377)))
 (let (($x714 (= c_____ right-to-left)))
 (let (($x715 (and $x714 $x711)))
 (let ((?x563 (center s_____)))
 (let (($x716 ((_ is stack ) ?x563)))
 (let (($x717 (= c_____ center-to-right)))
 (let (($x718 (and $x717 $x716)))
 (let ((?x704 (top ?x563)))
 (let ((?x705 (stack ?x704 ?x343)))
 (let (($x732 (= ?x481 ?x705)))
 (let (($x719 (= c_____ center-to-left)))
 (let (($x720 (and $x719 $x716)))
 (let ((?x514 (rest ?x343)))
 (let (($x728 (= ?x481 ?x514)))
 (let (($x721 ((_ is stack ) ?x343)))
 (let (($x722 (= c_____ left-to-right)))
 (let (($x723 (and $x722 $x721)))
 (let (($x724 (= c_____ left-to-center)))
 (let (($x725 (and $x724 $x721)))
 (ite $x725 $x728 (ite $x723 $x728 (ite $x720 $x732 (ite $x718 $x741 (ite $x715 $x735 $x741))))))))))))))))))))))))))))))))
(assert
 (let ((?x377 (right s_____)))
 (let ((?x515 (right s______)))
 (let (($x737 (= ?x515 ?x377)))
 (let ((?x707 (rest ?x377)))
 (let (($x734 (= ?x515 ?x707)))
 (let (($x711 ((_ is stack ) ?x377)))
 (let (($x712 (= c_____ right-to-center)))
 (let (($x713 (and $x712 $x711)))
 (let (($x714 (= c_____ right-to-left)))
 (let (($x715 (and $x714 $x711)))
 (let ((?x563 (center s_____)))
 (let ((?x704 (top ?x563)))
 (let ((?x706 (stack ?x704 ?x377)))
 (let (($x733 (= ?x515 ?x706)))
 (let (($x716 ((_ is stack ) ?x563)))
 (let (($x717 (= c_____ center-to-right)))
 (let (($x718 (and $x717 $x716)))
 (let (($x719 (= c_____ center-to-left)))
 (let (($x720 (and $x719 $x716)))
 (let ((?x343 (left s_____)))
 (let (($x721 ((_ is stack ) ?x343)))
 (let (($x722 (= c_____ left-to-right)))
 (let (($x723 (and $x722 $x721)))
 (let (($x754 (ite $x723 $x737 (ite $x720 $x737 (ite $x718 $x733 (ite $x715 $x734 (ite $x713 $x734 $x737)))))))
 (let ((?x561 (top ?x343)))
 (let ((?x700 (stack ?x561 ?x377)))
 (let (($x729 (= ?x515 ?x700)))
 (let (($x724 (= c_____ left-to-center)))
 (let (($x725 (and $x724 $x721)))
 (ite $x725 $x729 $x754)))))))))))))))))))))))))))))))
(assert
 (let ((?x563 (center s_____)))
 (let ((?x701 (center s______)))
 (let (($x739 (= ?x701 ?x563)))
 (let ((?x377 (right s_____)))
 (let ((?x708 (top ?x377)))
 (let ((?x710 (stack ?x708 ?x563)))
 (let (($x736 (= ?x701 ?x710)))
 (let (($x711 ((_ is stack ) ?x377)))
 (let (($x712 (= c_____ right-to-center)))
 (let (($x713 (and $x712 $x711)))
 (let (($x714 (= c_____ right-to-left)))
 (let (($x715 (and $x714 $x711)))
 (let ((?x703 (rest ?x563)))
 (let (($x731 (= ?x701 ?x703)))
 (let (($x716 ((_ is stack ) ?x563)))
 (let (($x717 (= c_____ center-to-right)))
 (let (($x718 (and $x717 $x716)))
 (let (($x719 (= c_____ center-to-left)))
 (let (($x720 (and $x719 $x716)))
 (let ((?x343 (left s_____)))
 (let ((?x561 (top ?x343)))
 (let ((?x702 (stack ?x561 ?x563)))
 (let (($x730 (= ?x701 ?x702)))
 (let (($x721 ((_ is stack ) ?x343)))
 (let (($x722 (= c_____ left-to-right)))
 (let (($x723 (and $x722 $x721)))
 (let (($x753 (ite $x723 $x730 (ite $x720 $x731 (ite $x718 $x731 (ite $x715 $x739 (ite $x713 $x736 $x739)))))))
 (let (($x724 (= c_____ left-to-center)))
 (let (($x725 (and $x724 $x721)))
 (ite $x725 $x739 $x753)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x481 (left s______)))
 (let ((?x619 (left s_______)))
 (let (($x879 (= ?x619 ?x481)))
 (let ((?x515 (right s______)))
 (let ((?x846 (top ?x515)))
 (let ((?x847 (stack ?x846 ?x481)))
 (let (($x873 (= ?x619 ?x847)))
 (let (($x849 ((_ is stack ) ?x515)))
 (let (($x852 (= c______ right-to-left)))
 (let (($x853 (and $x852 $x849)))
 (let ((?x701 (center s______)))
 (let (($x854 ((_ is stack ) ?x701)))
 (let (($x855 (= c______ center-to-right)))
 (let (($x856 (and $x855 $x854)))
 (let ((?x842 (top ?x701)))
 (let ((?x843 (stack ?x842 ?x481)))
 (let (($x870 (= ?x619 ?x843)))
 (let (($x857 (= c______ center-to-left)))
 (let (($x858 (and $x857 $x854)))
 (let ((?x652 (rest ?x481)))
 (let (($x866 (= ?x619 ?x652)))
 (let (($x859 ((_ is stack ) ?x481)))
 (let (($x860 (= c______ left-to-right)))
 (let (($x861 (and $x860 $x859)))
 (let (($x862 (= c______ left-to-center)))
 (let (($x863 (and $x862 $x859)))
 (ite $x863 $x866 (ite $x861 $x866 (ite $x858 $x870 (ite $x856 $x879 (ite $x853 $x873 $x879))))))))))))))))))))))))))))))))
(assert
 (let ((?x515 (right s______)))
 (let ((?x653 (right s_______)))
 (let (($x875 (= ?x653 ?x515)))
 (let ((?x845 (rest ?x515)))
 (let (($x872 (= ?x653 ?x845)))
 (let (($x849 ((_ is stack ) ?x515)))
 (let (($x850 (= c______ right-to-center)))
 (let (($x851 (and $x850 $x849)))
 (let (($x852 (= c______ right-to-left)))
 (let (($x853 (and $x852 $x849)))
 (let ((?x701 (center s______)))
 (let ((?x842 (top ?x701)))
 (let ((?x844 (stack ?x842 ?x515)))
 (let (($x871 (= ?x653 ?x844)))
 (let (($x854 ((_ is stack ) ?x701)))
 (let (($x855 (= c______ center-to-right)))
 (let (($x856 (and $x855 $x854)))
 (let (($x857 (= c______ center-to-left)))
 (let (($x858 (and $x857 $x854)))
 (let ((?x481 (left s______)))
 (let (($x859 ((_ is stack ) ?x481)))
 (let (($x860 (= c______ left-to-right)))
 (let (($x861 (and $x860 $x859)))
 (let (($x892 (ite $x861 $x875 (ite $x858 $x875 (ite $x856 $x871 (ite $x853 $x872 (ite $x851 $x872 $x875)))))))
 (let ((?x699 (top ?x481)))
 (let ((?x838 (stack ?x699 ?x515)))
 (let (($x867 (= ?x653 ?x838)))
 (let (($x862 (= c______ left-to-center)))
 (let (($x863 (and $x862 $x859)))
 (ite $x863 $x867 $x892)))))))))))))))))))))))))))))))
(assert
 (let ((?x701 (center s______)))
 (let ((?x839 (center s_______)))
 (let (($x877 (= ?x839 ?x701)))
 (let ((?x515 (right s______)))
 (let ((?x846 (top ?x515)))
 (let ((?x848 (stack ?x846 ?x701)))
 (let (($x874 (= ?x839 ?x848)))
 (let (($x849 ((_ is stack ) ?x515)))
 (let (($x850 (= c______ right-to-center)))
 (let (($x851 (and $x850 $x849)))
 (let (($x852 (= c______ right-to-left)))
 (let (($x853 (and $x852 $x849)))
 (let ((?x841 (rest ?x701)))
 (let (($x869 (= ?x839 ?x841)))
 (let (($x854 ((_ is stack ) ?x701)))
 (let (($x855 (= c______ center-to-right)))
 (let (($x856 (and $x855 $x854)))
 (let (($x857 (= c______ center-to-left)))
 (let (($x858 (and $x857 $x854)))
 (let ((?x481 (left s______)))
 (let ((?x699 (top ?x481)))
 (let ((?x840 (stack ?x699 ?x701)))
 (let (($x868 (= ?x839 ?x840)))
 (let (($x859 ((_ is stack ) ?x481)))
 (let (($x860 (= c______ left-to-right)))
 (let (($x861 (and $x860 $x859)))
 (let (($x891 (ite $x861 $x868 (ite $x858 $x869 (ite $x856 $x869 (ite $x853 $x877 (ite $x851 $x874 $x877)))))))
 (let (($x862 (= c______ left-to-center)))
 (let (($x863 (and $x862 $x859)))
 (ite $x863 $x877 $x891)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x619 (left s_______)))
 (let ((?x757 (left s________)))
 (let (($x1017 (= ?x757 ?x619)))
 (let ((?x653 (right s_______)))
 (let ((?x984 (top ?x653)))
 (let ((?x985 (stack ?x984 ?x619)))
 (let (($x1011 (= ?x757 ?x985)))
 (let (($x987 ((_ is stack ) ?x653)))
 (let (($x990 (= c_______ right-to-left)))
 (let (($x991 (and $x990 $x987)))
 (let ((?x839 (center s_______)))
 (let (($x992 ((_ is stack ) ?x839)))
 (let (($x993 (= c_______ center-to-right)))
 (let (($x994 (and $x993 $x992)))
 (let ((?x980 (top ?x839)))
 (let ((?x981 (stack ?x980 ?x619)))
 (let (($x1008 (= ?x757 ?x981)))
 (let (($x995 (= c_______ center-to-left)))
 (let (($x996 (and $x995 $x992)))
 (let ((?x790 (rest ?x619)))
 (let (($x1004 (= ?x757 ?x790)))
 (let (($x997 ((_ is stack ) ?x619)))
 (let (($x998 (= c_______ left-to-right)))
 (let (($x999 (and $x998 $x997)))
 (let (($x1000 (= c_______ left-to-center)))
 (let (($x1001 (and $x1000 $x997)))
 (ite $x1001 $x1004 (ite $x999 $x1004 (ite $x996 $x1008 (ite $x994 $x1017 (ite $x991 $x1011 $x1017))))))))))))))))))))))))))))))))
(assert
 (let ((?x653 (right s_______)))
 (let ((?x791 (right s________)))
 (let (($x1013 (= ?x791 ?x653)))
 (let ((?x983 (rest ?x653)))
 (let (($x1010 (= ?x791 ?x983)))
 (let (($x987 ((_ is stack ) ?x653)))
 (let (($x988 (= c_______ right-to-center)))
 (let (($x989 (and $x988 $x987)))
 (let (($x990 (= c_______ right-to-left)))
 (let (($x991 (and $x990 $x987)))
 (let ((?x839 (center s_______)))
 (let ((?x980 (top ?x839)))
 (let ((?x982 (stack ?x980 ?x653)))
 (let (($x1009 (= ?x791 ?x982)))
 (let (($x992 ((_ is stack ) ?x839)))
 (let (($x993 (= c_______ center-to-right)))
 (let (($x994 (and $x993 $x992)))
 (let (($x995 (= c_______ center-to-left)))
 (let (($x996 (and $x995 $x992)))
 (let ((?x619 (left s_______)))
 (let (($x997 ((_ is stack ) ?x619)))
 (let (($x998 (= c_______ left-to-right)))
 (let (($x999 (and $x998 $x997)))
 (let (($x1030 (ite $x999 $x1013 (ite $x996 $x1013 (ite $x994 $x1009 (ite $x991 $x1010 (ite $x989 $x1010 $x1013)))))))
 (let ((?x837 (top ?x619)))
 (let ((?x976 (stack ?x837 ?x653)))
 (let (($x1005 (= ?x791 ?x976)))
 (let (($x1000 (= c_______ left-to-center)))
 (let (($x1001 (and $x1000 $x997)))
 (ite $x1001 $x1005 $x1030)))))))))))))))))))))))))))))))
(assert
 (let ((?x839 (center s_______)))
 (let ((?x977 (center s________)))
 (let (($x1015 (= ?x977 ?x839)))
 (let ((?x653 (right s_______)))
 (let ((?x984 (top ?x653)))
 (let ((?x986 (stack ?x984 ?x839)))
 (let (($x1012 (= ?x977 ?x986)))
 (let (($x987 ((_ is stack ) ?x653)))
 (let (($x988 (= c_______ right-to-center)))
 (let (($x989 (and $x988 $x987)))
 (let (($x990 (= c_______ right-to-left)))
 (let (($x991 (and $x990 $x987)))
 (let ((?x979 (rest ?x839)))
 (let (($x1007 (= ?x977 ?x979)))
 (let (($x992 ((_ is stack ) ?x839)))
 (let (($x993 (= c_______ center-to-right)))
 (let (($x994 (and $x993 $x992)))
 (let (($x995 (= c_______ center-to-left)))
 (let (($x996 (and $x995 $x992)))
 (let ((?x619 (left s_______)))
 (let ((?x837 (top ?x619)))
 (let ((?x978 (stack ?x837 ?x839)))
 (let (($x1006 (= ?x977 ?x978)))
 (let (($x997 ((_ is stack ) ?x619)))
 (let (($x998 (= c_______ left-to-right)))
 (let (($x999 (and $x998 $x997)))
 (let (($x1029 (ite $x999 $x1006 (ite $x996 $x1007 (ite $x994 $x1007 (ite $x991 $x1015 (ite $x989 $x1012 $x1015)))))))
 (let (($x1000 (= c_______ left-to-center)))
 (let (($x1001 (and $x1000 $x997)))
 (ite $x1001 $x1015 $x1029)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x757 (left s________)))
 (let ((?x895 (left s_________)))
 (let (($x1155 (= ?x895 ?x757)))
 (let ((?x791 (right s________)))
 (let ((?x1122 (top ?x791)))
 (let ((?x1123 (stack ?x1122 ?x757)))
 (let (($x1149 (= ?x895 ?x1123)))
 (let (($x1125 ((_ is stack ) ?x791)))
 (let (($x1128 (= c________ right-to-left)))
 (let (($x1129 (and $x1128 $x1125)))
 (let ((?x977 (center s________)))
 (let (($x1130 ((_ is stack ) ?x977)))
 (let (($x1131 (= c________ center-to-right)))
 (let (($x1132 (and $x1131 $x1130)))
 (let ((?x1118 (top ?x977)))
 (let ((?x1119 (stack ?x1118 ?x757)))
 (let (($x1146 (= ?x895 ?x1119)))
 (let (($x1133 (= c________ center-to-left)))
 (let (($x1134 (and $x1133 $x1130)))
 (let ((?x928 (rest ?x757)))
 (let (($x1142 (= ?x895 ?x928)))
 (let (($x1135 ((_ is stack ) ?x757)))
 (let (($x1136 (= c________ left-to-right)))
 (let (($x1137 (and $x1136 $x1135)))
 (let (($x1138 (= c________ left-to-center)))
 (let (($x1139 (and $x1138 $x1135)))
 (ite $x1139 $x1142 (ite $x1137 $x1142 (ite $x1134 $x1146 (ite $x1132 $x1155 (ite $x1129 $x1149 $x1155))))))))))))))))))))))))))))))))
(assert
 (let ((?x791 (right s________)))
 (let ((?x929 (right s_________)))
 (let (($x1151 (= ?x929 ?x791)))
 (let ((?x1121 (rest ?x791)))
 (let (($x1148 (= ?x929 ?x1121)))
 (let (($x1125 ((_ is stack ) ?x791)))
 (let (($x1126 (= c________ right-to-center)))
 (let (($x1127 (and $x1126 $x1125)))
 (let (($x1128 (= c________ right-to-left)))
 (let (($x1129 (and $x1128 $x1125)))
 (let ((?x977 (center s________)))
 (let ((?x1118 (top ?x977)))
 (let ((?x1120 (stack ?x1118 ?x791)))
 (let (($x1147 (= ?x929 ?x1120)))
 (let (($x1130 ((_ is stack ) ?x977)))
 (let (($x1131 (= c________ center-to-right)))
 (let (($x1132 (and $x1131 $x1130)))
 (let (($x1133 (= c________ center-to-left)))
 (let (($x1134 (and $x1133 $x1130)))
 (let ((?x757 (left s________)))
 (let (($x1135 ((_ is stack ) ?x757)))
 (let (($x1136 (= c________ left-to-right)))
 (let (($x1137 (and $x1136 $x1135)))
 (let (($x1168 (ite $x1137 $x1151 (ite $x1134 $x1151 (ite $x1132 $x1147 (ite $x1129 $x1148 (ite $x1127 $x1148 $x1151)))))))
 (let ((?x975 (top ?x757)))
 (let ((?x1114 (stack ?x975 ?x791)))
 (let (($x1143 (= ?x929 ?x1114)))
 (let (($x1138 (= c________ left-to-center)))
 (let (($x1139 (and $x1138 $x1135)))
 (ite $x1139 $x1143 $x1168)))))))))))))))))))))))))))))))
(assert
 (let ((?x977 (center s________)))
 (let ((?x1115 (center s_________)))
 (let (($x1153 (= ?x1115 ?x977)))
 (let ((?x791 (right s________)))
 (let ((?x1122 (top ?x791)))
 (let ((?x1124 (stack ?x1122 ?x977)))
 (let (($x1150 (= ?x1115 ?x1124)))
 (let (($x1125 ((_ is stack ) ?x791)))
 (let (($x1126 (= c________ right-to-center)))
 (let (($x1127 (and $x1126 $x1125)))
 (let (($x1128 (= c________ right-to-left)))
 (let (($x1129 (and $x1128 $x1125)))
 (let ((?x1117 (rest ?x977)))
 (let (($x1145 (= ?x1115 ?x1117)))
 (let (($x1130 ((_ is stack ) ?x977)))
 (let (($x1131 (= c________ center-to-right)))
 (let (($x1132 (and $x1131 $x1130)))
 (let (($x1133 (= c________ center-to-left)))
 (let (($x1134 (and $x1133 $x1130)))
 (let ((?x757 (left s________)))
 (let ((?x975 (top ?x757)))
 (let ((?x1116 (stack ?x975 ?x977)))
 (let (($x1144 (= ?x1115 ?x1116)))
 (let (($x1135 ((_ is stack ) ?x757)))
 (let (($x1136 (= c________ left-to-right)))
 (let (($x1137 (and $x1136 $x1135)))
 (let (($x1167 (ite $x1137 $x1144 (ite $x1134 $x1145 (ite $x1132 $x1145 (ite $x1129 $x1153 (ite $x1127 $x1150 $x1153)))))))
 (let (($x1138 (= c________ left-to-center)))
 (let (($x1139 (and $x1138 $x1135)))
 (ite $x1139 $x1153 $x1167)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x895 (left s_________)))
 (let ((?x1033 (left s__________)))
 (let (($x1293 (= ?x1033 ?x895)))
 (let ((?x929 (right s_________)))
 (let ((?x1260 (top ?x929)))
 (let ((?x1261 (stack ?x1260 ?x895)))
 (let (($x1287 (= ?x1033 ?x1261)))
 (let (($x1263 ((_ is stack ) ?x929)))
 (let (($x1266 (= c_________ right-to-left)))
 (let (($x1267 (and $x1266 $x1263)))
 (let ((?x1115 (center s_________)))
 (let (($x1268 ((_ is stack ) ?x1115)))
 (let (($x1269 (= c_________ center-to-right)))
 (let (($x1270 (and $x1269 $x1268)))
 (let ((?x1256 (top ?x1115)))
 (let ((?x1257 (stack ?x1256 ?x895)))
 (let (($x1284 (= ?x1033 ?x1257)))
 (let (($x1271 (= c_________ center-to-left)))
 (let (($x1272 (and $x1271 $x1268)))
 (let ((?x1066 (rest ?x895)))
 (let (($x1280 (= ?x1033 ?x1066)))
 (let (($x1273 ((_ is stack ) ?x895)))
 (let (($x1274 (= c_________ left-to-right)))
 (let (($x1275 (and $x1274 $x1273)))
 (let (($x1276 (= c_________ left-to-center)))
 (let (($x1277 (and $x1276 $x1273)))
 (ite $x1277 $x1280 (ite $x1275 $x1280 (ite $x1272 $x1284 (ite $x1270 $x1293 (ite $x1267 $x1287 $x1293))))))))))))))))))))))))))))))))
(assert
 (let ((?x929 (right s_________)))
 (let ((?x1067 (right s__________)))
 (let (($x1289 (= ?x1067 ?x929)))
 (let ((?x1259 (rest ?x929)))
 (let (($x1286 (= ?x1067 ?x1259)))
 (let (($x1263 ((_ is stack ) ?x929)))
 (let (($x1264 (= c_________ right-to-center)))
 (let (($x1265 (and $x1264 $x1263)))
 (let (($x1266 (= c_________ right-to-left)))
 (let (($x1267 (and $x1266 $x1263)))
 (let ((?x1115 (center s_________)))
 (let ((?x1256 (top ?x1115)))
 (let ((?x1258 (stack ?x1256 ?x929)))
 (let (($x1285 (= ?x1067 ?x1258)))
 (let (($x1268 ((_ is stack ) ?x1115)))
 (let (($x1269 (= c_________ center-to-right)))
 (let (($x1270 (and $x1269 $x1268)))
 (let (($x1271 (= c_________ center-to-left)))
 (let (($x1272 (and $x1271 $x1268)))
 (let ((?x895 (left s_________)))
 (let (($x1273 ((_ is stack ) ?x895)))
 (let (($x1274 (= c_________ left-to-right)))
 (let (($x1275 (and $x1274 $x1273)))
 (let (($x1306 (ite $x1275 $x1289 (ite $x1272 $x1289 (ite $x1270 $x1285 (ite $x1267 $x1286 (ite $x1265 $x1286 $x1289)))))))
 (let ((?x1113 (top ?x895)))
 (let ((?x1252 (stack ?x1113 ?x929)))
 (let (($x1281 (= ?x1067 ?x1252)))
 (let (($x1276 (= c_________ left-to-center)))
 (let (($x1277 (and $x1276 $x1273)))
 (ite $x1277 $x1281 $x1306)))))))))))))))))))))))))))))))
(assert
 (let ((?x1115 (center s_________)))
 (let ((?x1253 (center s__________)))
 (let (($x1291 (= ?x1253 ?x1115)))
 (let ((?x929 (right s_________)))
 (let ((?x1260 (top ?x929)))
 (let ((?x1262 (stack ?x1260 ?x1115)))
 (let (($x1288 (= ?x1253 ?x1262)))
 (let (($x1263 ((_ is stack ) ?x929)))
 (let (($x1264 (= c_________ right-to-center)))
 (let (($x1265 (and $x1264 $x1263)))
 (let (($x1266 (= c_________ right-to-left)))
 (let (($x1267 (and $x1266 $x1263)))
 (let ((?x1255 (rest ?x1115)))
 (let (($x1283 (= ?x1253 ?x1255)))
 (let (($x1268 ((_ is stack ) ?x1115)))
 (let (($x1269 (= c_________ center-to-right)))
 (let (($x1270 (and $x1269 $x1268)))
 (let (($x1271 (= c_________ center-to-left)))
 (let (($x1272 (and $x1271 $x1268)))
 (let ((?x895 (left s_________)))
 (let ((?x1113 (top ?x895)))
 (let ((?x1254 (stack ?x1113 ?x1115)))
 (let (($x1282 (= ?x1253 ?x1254)))
 (let (($x1273 ((_ is stack ) ?x895)))
 (let (($x1274 (= c_________ left-to-right)))
 (let (($x1275 (and $x1274 $x1273)))
 (let (($x1305 (ite $x1275 $x1282 (ite $x1272 $x1283 (ite $x1270 $x1283 (ite $x1267 $x1291 (ite $x1265 $x1288 $x1291)))))))
 (let (($x1276 (= c_________ left-to-center)))
 (let (($x1277 (and $x1276 $x1273)))
 (ite $x1277 $x1291 $x1305)))))))))))))))))))))))))))))))
(assert
 (let ((?x20 (stack A empty)))
 (let ((?x21 (stack B ?x20)))
 (let ((?x22 (stack C ?x21)))
 (let ((?x32 (stack F ?x22)))
 (let ((?x1067 (right s__________)))
 (let (($x1309 (= ?x1067 ?x32)))
 (let ((?x31 (stack H (stack D (stack E empty)))))
 (let ((?x1253 (center s__________)))
 (let (($x1340 (= ?x1253 ?x31)))
 (let ((?x28 (stack G empty)))
 (let ((?x1033 (left s__________)))
 (let (($x1341 (= ?x1033 ?x28)))
 (let (($x1343 (not (and $x1341 $x1340 $x1309))))
 (not $x1343)))))))))))))))
(check-sat)
(exit)
