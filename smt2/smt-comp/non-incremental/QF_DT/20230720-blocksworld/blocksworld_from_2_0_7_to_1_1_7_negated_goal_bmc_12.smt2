(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x22 (stack I empty)))
 (let ((?x21 (stack B ?x22)))
 (let ((?x83 (left s_tmp_)))
 (= ?x83 ?x21)))))
(assert
 (let ((?x86 (center s_tmp__)))
 (= ?x86 empty)))
(assert
 (let ((?x23 (stack A empty)))
 (let ((?x24 (stack C ?x23)))
 (let ((?x25 (stack D ?x24)))
 (let ((?x26 (stack E ?x25)))
 (let ((?x27 (stack F ?x26)))
 (let ((?x28 (stack G ?x27)))
 (let ((?x29 (stack H ?x28)))
 (let ((?x89 (right s_tmp___)))
 (= ?x89 ?x29))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x116 (left s_tmp__)))
 (= (left s_tmp___) ?x116)))
(assert
 (let ((?x86 (center s_tmp__)))
 (= (center s_tmp___) ?x86)))
(assert
 (let ((?x120 (center s_tmp_)))
 (= ?x120 (center s_tmp))))
(assert
 (let ((?x123 (right s_tmp_)))
 (= ?x123 (right s_tmp))))
(assert
 (let ((?x83 (left s_tmp_)))
 (let ((?x116 (left s_tmp__)))
 (= ?x116 ?x83))))
(assert
 (let ((?x123 (right s_tmp_)))
 (let ((?x127 (right s_tmp__)))
 (= ?x127 ?x123))))
(assert
 (= c__ c!1))
(assert
 (let ((?x60 (left s_)))
 (let ((?x201 (left s__)))
 (let (($x243 (= ?x201 ?x60)))
 (let ((?x63 (right s_)))
 (let (($x207 ((_ is stack ) ?x63)))
 (let (($x219 (= c_ right-to-left)))
 (let (($x214 (and $x219 $x207)))
 (let ((?x65 (center s_)))
 (let (($x215 ((_ is stack ) ?x65)))
 (let (($x220 (and (= c_ center-to-right) $x215)))
 (let (($x222 (and (= c_ center-to-left) $x215)))
 (let (($x252 (ite $x222 (= ?x201 (stack (top ?x65) ?x60)) (ite $x220 $x243 (ite $x214 (= ?x201 (stack (top ?x63) ?x60)) $x243)))))
 (let (($x230 (= ?x201 (rest ?x60))))
 (let (($x223 ((_ is stack ) ?x60)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x230 (ite $x225 $x230 $x252)))))))))))))))))))))
(assert
 (let ((?x63 (right s_)))
 (let ((?x203 (right s__)))
 (let (($x239 (= ?x203 ?x63)))
 (let (($x236 (= ?x203 (rest ?x63))))
 (let (($x207 ((_ is stack ) ?x63)))
 (let (($x217 (= c_ right-to-center)))
 (let (($x218 (and $x217 $x207)))
 (let (($x219 (= c_ right-to-left)))
 (let (($x214 (and $x219 $x207)))
 (let ((?x65 (center s_)))
 (let (($x215 ((_ is stack ) ?x65)))
 (let (($x220 (and (= c_ center-to-right) $x215)))
 (let (($x249 (ite $x220 (= ?x203 (stack (top ?x65) ?x63)) (ite $x214 $x236 (ite $x218 $x236 $x239)))))
 (let (($x222 (and (= c_ center-to-left) $x215)))
 (let ((?x60 (left s_)))
 (let (($x223 ((_ is stack ) ?x60)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 (= ?x203 (stack (top ?x60) ?x63)) (ite $x225 $x239 (ite $x222 $x239 $x249))))))))))))))))))))))))
(assert
 (let ((?x65 (center s_)))
 (let ((?x212 (center s__)))
 (let (($x241 (= ?x212 ?x65)))
 (let ((?x63 (right s_)))
 (let (($x207 ((_ is stack ) ?x63)))
 (let (($x217 (= c_ right-to-center)))
 (let (($x218 (and $x217 $x207)))
 (let (($x219 (= c_ right-to-left)))
 (let (($x214 (and $x219 $x207)))
 (let (($x233 (= ?x212 (rest ?x65))))
 (let (($x215 ((_ is stack ) ?x65)))
 (let (($x220 (and (= c_ center-to-right) $x215)))
 (let (($x248 (ite $x220 $x233 (ite $x214 $x241 (ite $x218 (= ?x212 (stack (top ?x63) ?x65)) $x241)))))
 (let (($x222 (and (= c_ center-to-left) $x215)))
 (let ((?x60 (left s_)))
 (let (($x223 ((_ is stack ) ?x60)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x241 (ite $x225 (= ?x212 (stack (top ?x60) ?x65)) (ite $x222 $x233 $x248))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x201 (left s__)))
 (let ((?x130 (left s___)))
 (let (($x355 (= ?x130 ?x201)))
 (let ((?x203 (right s__)))
 (let ((?x322 (top ?x203)))
 (let ((?x323 (stack ?x322 ?x201)))
 (let (($x349 (= ?x130 ?x323)))
 (let (($x325 ((_ is stack ) ?x203)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x212 (center s__)))
 (let (($x330 ((_ is stack ) ?x212)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let ((?x318 (top ?x212)))
 (let ((?x319 (stack ?x318 ?x201)))
 (let (($x346 (= ?x130 ?x319)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x132 (rest ?x201)))
 (let (($x342 (= ?x130 ?x132)))
 (let (($x335 ((_ is stack ) ?x201)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x342 (ite $x337 $x342 (ite $x334 $x346 (ite $x332 $x355 (ite $x329 $x349 $x355))))))))))))))))))))))))))))))))
(assert
 (let ((?x203 (right s__)))
 (let ((?x133 (right s___)))
 (let (($x351 (= ?x133 ?x203)))
 (let ((?x321 (rest ?x203)))
 (let (($x348 (= ?x133 ?x321)))
 (let (($x325 ((_ is stack ) ?x203)))
 (let (($x326 (= c__ right-to-center)))
 (let (($x327 (and $x326 $x325)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x212 (center s__)))
 (let ((?x318 (top ?x212)))
 (let ((?x320 (stack ?x318 ?x203)))
 (let (($x347 (= ?x133 ?x320)))
 (let (($x330 ((_ is stack ) ?x212)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x201 (left s__)))
 (let (($x335 ((_ is stack ) ?x201)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x368 (ite $x337 $x351 (ite $x334 $x351 (ite $x332 $x347 (ite $x329 $x348 (ite $x327 $x348 $x351)))))))
 (let ((?x195 (top ?x201)))
 (let ((?x314 (stack ?x195 ?x203)))
 (let (($x343 (= ?x133 ?x314)))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x343 $x368)))))))))))))))))))))))))))))))
(assert
 (let ((?x212 (center s__)))
 (let ((?x315 (center s___)))
 (let (($x353 (= ?x315 ?x212)))
 (let ((?x203 (right s__)))
 (let ((?x322 (top ?x203)))
 (let ((?x324 (stack ?x322 ?x212)))
 (let (($x350 (= ?x315 ?x324)))
 (let (($x325 ((_ is stack ) ?x203)))
 (let (($x326 (= c__ right-to-center)))
 (let (($x327 (and $x326 $x325)))
 (let (($x328 (= c__ right-to-left)))
 (let (($x329 (and $x328 $x325)))
 (let ((?x317 (rest ?x212)))
 (let (($x345 (= ?x315 ?x317)))
 (let (($x330 ((_ is stack ) ?x212)))
 (let (($x331 (= c__ center-to-right)))
 (let (($x332 (and $x331 $x330)))
 (let (($x333 (= c__ center-to-left)))
 (let (($x334 (and $x333 $x330)))
 (let ((?x201 (left s__)))
 (let ((?x195 (top ?x201)))
 (let ((?x316 (stack ?x195 ?x212)))
 (let (($x344 (= ?x315 ?x316)))
 (let (($x335 ((_ is stack ) ?x201)))
 (let (($x336 (= c__ left-to-right)))
 (let (($x337 (and $x336 $x335)))
 (let (($x367 (ite $x337 $x344 (ite $x334 $x345 (ite $x332 $x345 (ite $x329 $x353 (ite $x327 $x350 $x353)))))))
 (let (($x338 (= c__ left-to-center)))
 (let (($x339 (and $x338 $x335)))
 (ite $x339 $x353 $x367)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x130 (left s___)))
 (let ((?x259 (left s____)))
 (let (($x493 (= ?x259 ?x130)))
 (let ((?x133 (right s___)))
 (let ((?x460 (top ?x133)))
 (let ((?x461 (stack ?x460 ?x130)))
 (let (($x487 (= ?x259 ?x461)))
 (let (($x463 ((_ is stack ) ?x133)))
 (let (($x466 (= c___ right-to-left)))
 (let (($x467 (and $x466 $x463)))
 (let ((?x315 (center s___)))
 (let (($x468 ((_ is stack ) ?x315)))
 (let (($x469 (= c___ center-to-right)))
 (let (($x470 (and $x469 $x468)))
 (let ((?x456 (top ?x315)))
 (let ((?x457 (stack ?x456 ?x130)))
 (let (($x484 (= ?x259 ?x457)))
 (let (($x471 (= c___ center-to-left)))
 (let (($x472 (and $x471 $x468)))
 (let ((?x291 (rest ?x130)))
 (let (($x480 (= ?x259 ?x291)))
 (let (($x473 ((_ is stack ) ?x130)))
 (let (($x474 (= c___ left-to-right)))
 (let (($x475 (and $x474 $x473)))
 (let (($x476 (= c___ left-to-center)))
 (let (($x477 (and $x476 $x473)))
 (ite $x477 $x480 (ite $x475 $x480 (ite $x472 $x484 (ite $x470 $x493 (ite $x467 $x487 $x493))))))))))))))))))))))))))))))))
(assert
 (let ((?x133 (right s___)))
 (let ((?x292 (right s____)))
 (let (($x489 (= ?x292 ?x133)))
 (let ((?x459 (rest ?x133)))
 (let (($x486 (= ?x292 ?x459)))
 (let (($x463 ((_ is stack ) ?x133)))
 (let (($x464 (= c___ right-to-center)))
 (let (($x465 (and $x464 $x463)))
 (let (($x466 (= c___ right-to-left)))
 (let (($x467 (and $x466 $x463)))
 (let ((?x315 (center s___)))
 (let ((?x456 (top ?x315)))
 (let ((?x458 (stack ?x456 ?x133)))
 (let (($x485 (= ?x292 ?x458)))
 (let (($x468 ((_ is stack ) ?x315)))
 (let (($x469 (= c___ center-to-right)))
 (let (($x470 (and $x469 $x468)))
 (let (($x471 (= c___ center-to-left)))
 (let (($x472 (and $x471 $x468)))
 (let ((?x130 (left s___)))
 (let (($x473 ((_ is stack ) ?x130)))
 (let (($x474 (= c___ left-to-right)))
 (let (($x475 (and $x474 $x473)))
 (let (($x506 (ite $x475 $x489 (ite $x472 $x489 (ite $x470 $x485 (ite $x467 $x486 (ite $x465 $x486 $x489)))))))
 (let ((?x313 (top ?x130)))
 (let ((?x452 (stack ?x313 ?x133)))
 (let (($x481 (= ?x292 ?x452)))
 (let (($x476 (= c___ left-to-center)))
 (let (($x477 (and $x476 $x473)))
 (ite $x477 $x481 $x506)))))))))))))))))))))))))))))))
(assert
 (let ((?x315 (center s___)))
 (let ((?x453 (center s____)))
 (let (($x491 (= ?x453 ?x315)))
 (let ((?x133 (right s___)))
 (let ((?x460 (top ?x133)))
 (let ((?x462 (stack ?x460 ?x315)))
 (let (($x488 (= ?x453 ?x462)))
 (let (($x463 ((_ is stack ) ?x133)))
 (let (($x464 (= c___ right-to-center)))
 (let (($x465 (and $x464 $x463)))
 (let (($x466 (= c___ right-to-left)))
 (let (($x467 (and $x466 $x463)))
 (let ((?x455 (rest ?x315)))
 (let (($x483 (= ?x453 ?x455)))
 (let (($x468 ((_ is stack ) ?x315)))
 (let (($x469 (= c___ center-to-right)))
 (let (($x470 (and $x469 $x468)))
 (let (($x471 (= c___ center-to-left)))
 (let (($x472 (and $x471 $x468)))
 (let ((?x130 (left s___)))
 (let ((?x313 (top ?x130)))
 (let ((?x454 (stack ?x313 ?x315)))
 (let (($x482 (= ?x453 ?x454)))
 (let (($x473 ((_ is stack ) ?x130)))
 (let (($x474 (= c___ left-to-right)))
 (let (($x475 (and $x474 $x473)))
 (let (($x505 (ite $x475 $x482 (ite $x472 $x483 (ite $x470 $x483 (ite $x467 $x491 (ite $x465 $x488 $x491)))))))
 (let (($x476 (= c___ left-to-center)))
 (let (($x477 (and $x476 $x473)))
 (ite $x477 $x491 $x505)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x259 (left s____)))
 (let ((?x371 (left s_____)))
 (let (($x631 (= ?x371 ?x259)))
 (let ((?x292 (right s____)))
 (let ((?x598 (top ?x292)))
 (let ((?x599 (stack ?x598 ?x259)))
 (let (($x625 (= ?x371 ?x599)))
 (let (($x601 ((_ is stack ) ?x292)))
 (let (($x604 (= c____ right-to-left)))
 (let (($x605 (and $x604 $x601)))
 (let ((?x453 (center s____)))
 (let (($x606 ((_ is stack ) ?x453)))
 (let (($x607 (= c____ center-to-right)))
 (let (($x608 (and $x607 $x606)))
 (let ((?x594 (top ?x453)))
 (let ((?x595 (stack ?x594 ?x259)))
 (let (($x622 (= ?x371 ?x595)))
 (let (($x609 (= c____ center-to-left)))
 (let (($x610 (and $x609 $x606)))
 (let ((?x404 (rest ?x259)))
 (let (($x618 (= ?x371 ?x404)))
 (let (($x611 ((_ is stack ) ?x259)))
 (let (($x612 (= c____ left-to-right)))
 (let (($x613 (and $x612 $x611)))
 (let (($x614 (= c____ left-to-center)))
 (let (($x615 (and $x614 $x611)))
 (ite $x615 $x618 (ite $x613 $x618 (ite $x610 $x622 (ite $x608 $x631 (ite $x605 $x625 $x631))))))))))))))))))))))))))))))))
(assert
 (let ((?x292 (right s____)))
 (let ((?x405 (right s_____)))
 (let (($x627 (= ?x405 ?x292)))
 (let ((?x597 (rest ?x292)))
 (let (($x624 (= ?x405 ?x597)))
 (let (($x601 ((_ is stack ) ?x292)))
 (let (($x602 (= c____ right-to-center)))
 (let (($x603 (and $x602 $x601)))
 (let (($x604 (= c____ right-to-left)))
 (let (($x605 (and $x604 $x601)))
 (let ((?x453 (center s____)))
 (let ((?x594 (top ?x453)))
 (let ((?x596 (stack ?x594 ?x292)))
 (let (($x623 (= ?x405 ?x596)))
 (let (($x606 ((_ is stack ) ?x453)))
 (let (($x607 (= c____ center-to-right)))
 (let (($x608 (and $x607 $x606)))
 (let (($x609 (= c____ center-to-left)))
 (let (($x610 (and $x609 $x606)))
 (let ((?x259 (left s____)))
 (let (($x611 ((_ is stack ) ?x259)))
 (let (($x612 (= c____ left-to-right)))
 (let (($x613 (and $x612 $x611)))
 (let (($x644 (ite $x613 $x627 (ite $x610 $x627 (ite $x608 $x623 (ite $x605 $x624 (ite $x603 $x624 $x627)))))))
 (let ((?x451 (top ?x259)))
 (let ((?x590 (stack ?x451 ?x292)))
 (let (($x619 (= ?x405 ?x590)))
 (let (($x614 (= c____ left-to-center)))
 (let (($x615 (and $x614 $x611)))
 (ite $x615 $x619 $x644)))))))))))))))))))))))))))))))
(assert
 (let ((?x453 (center s____)))
 (let ((?x591 (center s_____)))
 (let (($x629 (= ?x591 ?x453)))
 (let ((?x292 (right s____)))
 (let ((?x598 (top ?x292)))
 (let ((?x600 (stack ?x598 ?x453)))
 (let (($x626 (= ?x591 ?x600)))
 (let (($x601 ((_ is stack ) ?x292)))
 (let (($x602 (= c____ right-to-center)))
 (let (($x603 (and $x602 $x601)))
 (let (($x604 (= c____ right-to-left)))
 (let (($x605 (and $x604 $x601)))
 (let ((?x593 (rest ?x453)))
 (let (($x621 (= ?x591 ?x593)))
 (let (($x606 ((_ is stack ) ?x453)))
 (let (($x607 (= c____ center-to-right)))
 (let (($x608 (and $x607 $x606)))
 (let (($x609 (= c____ center-to-left)))
 (let (($x610 (and $x609 $x606)))
 (let ((?x259 (left s____)))
 (let ((?x451 (top ?x259)))
 (let ((?x592 (stack ?x451 ?x453)))
 (let (($x620 (= ?x591 ?x592)))
 (let (($x611 ((_ is stack ) ?x259)))
 (let (($x612 (= c____ left-to-right)))
 (let (($x613 (and $x612 $x611)))
 (let (($x643 (ite $x613 $x620 (ite $x610 $x621 (ite $x608 $x621 (ite $x605 $x629 (ite $x603 $x626 $x629)))))))
 (let (($x614 (= c____ left-to-center)))
 (let (($x615 (and $x614 $x611)))
 (ite $x615 $x629 $x643)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x371 (left s_____)))
 (let ((?x509 (left s______)))
 (let (($x769 (= ?x509 ?x371)))
 (let ((?x405 (right s_____)))
 (let ((?x736 (top ?x405)))
 (let ((?x737 (stack ?x736 ?x371)))
 (let (($x763 (= ?x509 ?x737)))
 (let (($x739 ((_ is stack ) ?x405)))
 (let (($x742 (= c_____ right-to-left)))
 (let (($x743 (and $x742 $x739)))
 (let ((?x591 (center s_____)))
 (let (($x744 ((_ is stack ) ?x591)))
 (let (($x745 (= c_____ center-to-right)))
 (let (($x746 (and $x745 $x744)))
 (let ((?x732 (top ?x591)))
 (let ((?x733 (stack ?x732 ?x371)))
 (let (($x760 (= ?x509 ?x733)))
 (let (($x747 (= c_____ center-to-left)))
 (let (($x748 (and $x747 $x744)))
 (let ((?x542 (rest ?x371)))
 (let (($x756 (= ?x509 ?x542)))
 (let (($x749 ((_ is stack ) ?x371)))
 (let (($x750 (= c_____ left-to-right)))
 (let (($x751 (and $x750 $x749)))
 (let (($x752 (= c_____ left-to-center)))
 (let (($x753 (and $x752 $x749)))
 (ite $x753 $x756 (ite $x751 $x756 (ite $x748 $x760 (ite $x746 $x769 (ite $x743 $x763 $x769))))))))))))))))))))))))))))))))
(assert
 (let ((?x405 (right s_____)))
 (let ((?x543 (right s______)))
 (let (($x765 (= ?x543 ?x405)))
 (let ((?x735 (rest ?x405)))
 (let (($x762 (= ?x543 ?x735)))
 (let (($x739 ((_ is stack ) ?x405)))
 (let (($x740 (= c_____ right-to-center)))
 (let (($x741 (and $x740 $x739)))
 (let (($x742 (= c_____ right-to-left)))
 (let (($x743 (and $x742 $x739)))
 (let ((?x591 (center s_____)))
 (let ((?x732 (top ?x591)))
 (let ((?x734 (stack ?x732 ?x405)))
 (let (($x761 (= ?x543 ?x734)))
 (let (($x744 ((_ is stack ) ?x591)))
 (let (($x745 (= c_____ center-to-right)))
 (let (($x746 (and $x745 $x744)))
 (let (($x747 (= c_____ center-to-left)))
 (let (($x748 (and $x747 $x744)))
 (let ((?x371 (left s_____)))
 (let (($x749 ((_ is stack ) ?x371)))
 (let (($x750 (= c_____ left-to-right)))
 (let (($x751 (and $x750 $x749)))
 (let (($x782 (ite $x751 $x765 (ite $x748 $x765 (ite $x746 $x761 (ite $x743 $x762 (ite $x741 $x762 $x765)))))))
 (let ((?x589 (top ?x371)))
 (let ((?x728 (stack ?x589 ?x405)))
 (let (($x757 (= ?x543 ?x728)))
 (let (($x752 (= c_____ left-to-center)))
 (let (($x753 (and $x752 $x749)))
 (ite $x753 $x757 $x782)))))))))))))))))))))))))))))))
(assert
 (let ((?x591 (center s_____)))
 (let ((?x729 (center s______)))
 (let (($x767 (= ?x729 ?x591)))
 (let ((?x405 (right s_____)))
 (let ((?x736 (top ?x405)))
 (let ((?x738 (stack ?x736 ?x591)))
 (let (($x764 (= ?x729 ?x738)))
 (let (($x739 ((_ is stack ) ?x405)))
 (let (($x740 (= c_____ right-to-center)))
 (let (($x741 (and $x740 $x739)))
 (let (($x742 (= c_____ right-to-left)))
 (let (($x743 (and $x742 $x739)))
 (let ((?x731 (rest ?x591)))
 (let (($x759 (= ?x729 ?x731)))
 (let (($x744 ((_ is stack ) ?x591)))
 (let (($x745 (= c_____ center-to-right)))
 (let (($x746 (and $x745 $x744)))
 (let (($x747 (= c_____ center-to-left)))
 (let (($x748 (and $x747 $x744)))
 (let ((?x371 (left s_____)))
 (let ((?x589 (top ?x371)))
 (let ((?x730 (stack ?x589 ?x591)))
 (let (($x758 (= ?x729 ?x730)))
 (let (($x749 ((_ is stack ) ?x371)))
 (let (($x750 (= c_____ left-to-right)))
 (let (($x751 (and $x750 $x749)))
 (let (($x781 (ite $x751 $x758 (ite $x748 $x759 (ite $x746 $x759 (ite $x743 $x767 (ite $x741 $x764 $x767)))))))
 (let (($x752 (= c_____ left-to-center)))
 (let (($x753 (and $x752 $x749)))
 (ite $x753 $x767 $x781)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x509 (left s______)))
 (let ((?x647 (left s_______)))
 (let (($x907 (= ?x647 ?x509)))
 (let ((?x543 (right s______)))
 (let ((?x874 (top ?x543)))
 (let ((?x875 (stack ?x874 ?x509)))
 (let (($x901 (= ?x647 ?x875)))
 (let (($x877 ((_ is stack ) ?x543)))
 (let (($x880 (= c______ right-to-left)))
 (let (($x881 (and $x880 $x877)))
 (let ((?x729 (center s______)))
 (let (($x882 ((_ is stack ) ?x729)))
 (let (($x883 (= c______ center-to-right)))
 (let (($x884 (and $x883 $x882)))
 (let ((?x870 (top ?x729)))
 (let ((?x871 (stack ?x870 ?x509)))
 (let (($x898 (= ?x647 ?x871)))
 (let (($x885 (= c______ center-to-left)))
 (let (($x886 (and $x885 $x882)))
 (let ((?x680 (rest ?x509)))
 (let (($x894 (= ?x647 ?x680)))
 (let (($x887 ((_ is stack ) ?x509)))
 (let (($x888 (= c______ left-to-right)))
 (let (($x889 (and $x888 $x887)))
 (let (($x890 (= c______ left-to-center)))
 (let (($x891 (and $x890 $x887)))
 (ite $x891 $x894 (ite $x889 $x894 (ite $x886 $x898 (ite $x884 $x907 (ite $x881 $x901 $x907))))))))))))))))))))))))))))))))
(assert
 (let ((?x543 (right s______)))
 (let ((?x681 (right s_______)))
 (let (($x903 (= ?x681 ?x543)))
 (let ((?x873 (rest ?x543)))
 (let (($x900 (= ?x681 ?x873)))
 (let (($x877 ((_ is stack ) ?x543)))
 (let (($x878 (= c______ right-to-center)))
 (let (($x879 (and $x878 $x877)))
 (let (($x880 (= c______ right-to-left)))
 (let (($x881 (and $x880 $x877)))
 (let ((?x729 (center s______)))
 (let ((?x870 (top ?x729)))
 (let ((?x872 (stack ?x870 ?x543)))
 (let (($x899 (= ?x681 ?x872)))
 (let (($x882 ((_ is stack ) ?x729)))
 (let (($x883 (= c______ center-to-right)))
 (let (($x884 (and $x883 $x882)))
 (let (($x885 (= c______ center-to-left)))
 (let (($x886 (and $x885 $x882)))
 (let ((?x509 (left s______)))
 (let (($x887 ((_ is stack ) ?x509)))
 (let (($x888 (= c______ left-to-right)))
 (let (($x889 (and $x888 $x887)))
 (let (($x920 (ite $x889 $x903 (ite $x886 $x903 (ite $x884 $x899 (ite $x881 $x900 (ite $x879 $x900 $x903)))))))
 (let ((?x727 (top ?x509)))
 (let ((?x866 (stack ?x727 ?x543)))
 (let (($x895 (= ?x681 ?x866)))
 (let (($x890 (= c______ left-to-center)))
 (let (($x891 (and $x890 $x887)))
 (ite $x891 $x895 $x920)))))))))))))))))))))))))))))))
(assert
 (let ((?x729 (center s______)))
 (let ((?x867 (center s_______)))
 (let (($x905 (= ?x867 ?x729)))
 (let ((?x543 (right s______)))
 (let ((?x874 (top ?x543)))
 (let ((?x876 (stack ?x874 ?x729)))
 (let (($x902 (= ?x867 ?x876)))
 (let (($x877 ((_ is stack ) ?x543)))
 (let (($x878 (= c______ right-to-center)))
 (let (($x879 (and $x878 $x877)))
 (let (($x880 (= c______ right-to-left)))
 (let (($x881 (and $x880 $x877)))
 (let ((?x869 (rest ?x729)))
 (let (($x897 (= ?x867 ?x869)))
 (let (($x882 ((_ is stack ) ?x729)))
 (let (($x883 (= c______ center-to-right)))
 (let (($x884 (and $x883 $x882)))
 (let (($x885 (= c______ center-to-left)))
 (let (($x886 (and $x885 $x882)))
 (let ((?x509 (left s______)))
 (let ((?x727 (top ?x509)))
 (let ((?x868 (stack ?x727 ?x729)))
 (let (($x896 (= ?x867 ?x868)))
 (let (($x887 ((_ is stack ) ?x509)))
 (let (($x888 (= c______ left-to-right)))
 (let (($x889 (and $x888 $x887)))
 (let (($x919 (ite $x889 $x896 (ite $x886 $x897 (ite $x884 $x897 (ite $x881 $x905 (ite $x879 $x902 $x905)))))))
 (let (($x890 (= c______ left-to-center)))
 (let (($x891 (and $x890 $x887)))
 (ite $x891 $x905 $x919)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x647 (left s_______)))
 (let ((?x785 (left s________)))
 (let (($x1045 (= ?x785 ?x647)))
 (let ((?x681 (right s_______)))
 (let ((?x1012 (top ?x681)))
 (let ((?x1013 (stack ?x1012 ?x647)))
 (let (($x1039 (= ?x785 ?x1013)))
 (let (($x1015 ((_ is stack ) ?x681)))
 (let (($x1018 (= c_______ right-to-left)))
 (let (($x1019 (and $x1018 $x1015)))
 (let ((?x867 (center s_______)))
 (let (($x1020 ((_ is stack ) ?x867)))
 (let (($x1021 (= c_______ center-to-right)))
 (let (($x1022 (and $x1021 $x1020)))
 (let ((?x1008 (top ?x867)))
 (let ((?x1009 (stack ?x1008 ?x647)))
 (let (($x1036 (= ?x785 ?x1009)))
 (let (($x1023 (= c_______ center-to-left)))
 (let (($x1024 (and $x1023 $x1020)))
 (let ((?x818 (rest ?x647)))
 (let (($x1032 (= ?x785 ?x818)))
 (let (($x1025 ((_ is stack ) ?x647)))
 (let (($x1026 (= c_______ left-to-right)))
 (let (($x1027 (and $x1026 $x1025)))
 (let (($x1028 (= c_______ left-to-center)))
 (let (($x1029 (and $x1028 $x1025)))
 (ite $x1029 $x1032 (ite $x1027 $x1032 (ite $x1024 $x1036 (ite $x1022 $x1045 (ite $x1019 $x1039 $x1045))))))))))))))))))))))))))))))))
(assert
 (let ((?x681 (right s_______)))
 (let ((?x819 (right s________)))
 (let (($x1041 (= ?x819 ?x681)))
 (let ((?x1011 (rest ?x681)))
 (let (($x1038 (= ?x819 ?x1011)))
 (let (($x1015 ((_ is stack ) ?x681)))
 (let (($x1016 (= c_______ right-to-center)))
 (let (($x1017 (and $x1016 $x1015)))
 (let (($x1018 (= c_______ right-to-left)))
 (let (($x1019 (and $x1018 $x1015)))
 (let ((?x867 (center s_______)))
 (let ((?x1008 (top ?x867)))
 (let ((?x1010 (stack ?x1008 ?x681)))
 (let (($x1037 (= ?x819 ?x1010)))
 (let (($x1020 ((_ is stack ) ?x867)))
 (let (($x1021 (= c_______ center-to-right)))
 (let (($x1022 (and $x1021 $x1020)))
 (let (($x1023 (= c_______ center-to-left)))
 (let (($x1024 (and $x1023 $x1020)))
 (let ((?x647 (left s_______)))
 (let (($x1025 ((_ is stack ) ?x647)))
 (let (($x1026 (= c_______ left-to-right)))
 (let (($x1027 (and $x1026 $x1025)))
 (let (($x1058 (ite $x1027 $x1041 (ite $x1024 $x1041 (ite $x1022 $x1037 (ite $x1019 $x1038 (ite $x1017 $x1038 $x1041)))))))
 (let ((?x865 (top ?x647)))
 (let ((?x1004 (stack ?x865 ?x681)))
 (let (($x1033 (= ?x819 ?x1004)))
 (let (($x1028 (= c_______ left-to-center)))
 (let (($x1029 (and $x1028 $x1025)))
 (ite $x1029 $x1033 $x1058)))))))))))))))))))))))))))))))
(assert
 (let ((?x867 (center s_______)))
 (let ((?x1005 (center s________)))
 (let (($x1043 (= ?x1005 ?x867)))
 (let ((?x681 (right s_______)))
 (let ((?x1012 (top ?x681)))
 (let ((?x1014 (stack ?x1012 ?x867)))
 (let (($x1040 (= ?x1005 ?x1014)))
 (let (($x1015 ((_ is stack ) ?x681)))
 (let (($x1016 (= c_______ right-to-center)))
 (let (($x1017 (and $x1016 $x1015)))
 (let (($x1018 (= c_______ right-to-left)))
 (let (($x1019 (and $x1018 $x1015)))
 (let ((?x1007 (rest ?x867)))
 (let (($x1035 (= ?x1005 ?x1007)))
 (let (($x1020 ((_ is stack ) ?x867)))
 (let (($x1021 (= c_______ center-to-right)))
 (let (($x1022 (and $x1021 $x1020)))
 (let (($x1023 (= c_______ center-to-left)))
 (let (($x1024 (and $x1023 $x1020)))
 (let ((?x647 (left s_______)))
 (let ((?x865 (top ?x647)))
 (let ((?x1006 (stack ?x865 ?x867)))
 (let (($x1034 (= ?x1005 ?x1006)))
 (let (($x1025 ((_ is stack ) ?x647)))
 (let (($x1026 (= c_______ left-to-right)))
 (let (($x1027 (and $x1026 $x1025)))
 (let (($x1057 (ite $x1027 $x1034 (ite $x1024 $x1035 (ite $x1022 $x1035 (ite $x1019 $x1043 (ite $x1017 $x1040 $x1043)))))))
 (let (($x1028 (= c_______ left-to-center)))
 (let (($x1029 (and $x1028 $x1025)))
 (ite $x1029 $x1043 $x1057)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x785 (left s________)))
 (let ((?x923 (left s_________)))
 (let (($x1183 (= ?x923 ?x785)))
 (let ((?x819 (right s________)))
 (let ((?x1150 (top ?x819)))
 (let ((?x1151 (stack ?x1150 ?x785)))
 (let (($x1177 (= ?x923 ?x1151)))
 (let (($x1153 ((_ is stack ) ?x819)))
 (let (($x1156 (= c________ right-to-left)))
 (let (($x1157 (and $x1156 $x1153)))
 (let ((?x1005 (center s________)))
 (let (($x1158 ((_ is stack ) ?x1005)))
 (let (($x1159 (= c________ center-to-right)))
 (let (($x1160 (and $x1159 $x1158)))
 (let ((?x1146 (top ?x1005)))
 (let ((?x1147 (stack ?x1146 ?x785)))
 (let (($x1174 (= ?x923 ?x1147)))
 (let (($x1161 (= c________ center-to-left)))
 (let (($x1162 (and $x1161 $x1158)))
 (let ((?x956 (rest ?x785)))
 (let (($x1170 (= ?x923 ?x956)))
 (let (($x1163 ((_ is stack ) ?x785)))
 (let (($x1164 (= c________ left-to-right)))
 (let (($x1165 (and $x1164 $x1163)))
 (let (($x1166 (= c________ left-to-center)))
 (let (($x1167 (and $x1166 $x1163)))
 (ite $x1167 $x1170 (ite $x1165 $x1170 (ite $x1162 $x1174 (ite $x1160 $x1183 (ite $x1157 $x1177 $x1183))))))))))))))))))))))))))))))))
(assert
 (let ((?x819 (right s________)))
 (let ((?x957 (right s_________)))
 (let (($x1179 (= ?x957 ?x819)))
 (let ((?x1149 (rest ?x819)))
 (let (($x1176 (= ?x957 ?x1149)))
 (let (($x1153 ((_ is stack ) ?x819)))
 (let (($x1154 (= c________ right-to-center)))
 (let (($x1155 (and $x1154 $x1153)))
 (let (($x1156 (= c________ right-to-left)))
 (let (($x1157 (and $x1156 $x1153)))
 (let ((?x1005 (center s________)))
 (let ((?x1146 (top ?x1005)))
 (let ((?x1148 (stack ?x1146 ?x819)))
 (let (($x1175 (= ?x957 ?x1148)))
 (let (($x1158 ((_ is stack ) ?x1005)))
 (let (($x1159 (= c________ center-to-right)))
 (let (($x1160 (and $x1159 $x1158)))
 (let (($x1161 (= c________ center-to-left)))
 (let (($x1162 (and $x1161 $x1158)))
 (let ((?x785 (left s________)))
 (let (($x1163 ((_ is stack ) ?x785)))
 (let (($x1164 (= c________ left-to-right)))
 (let (($x1165 (and $x1164 $x1163)))
 (let (($x1196 (ite $x1165 $x1179 (ite $x1162 $x1179 (ite $x1160 $x1175 (ite $x1157 $x1176 (ite $x1155 $x1176 $x1179)))))))
 (let ((?x1003 (top ?x785)))
 (let ((?x1142 (stack ?x1003 ?x819)))
 (let (($x1171 (= ?x957 ?x1142)))
 (let (($x1166 (= c________ left-to-center)))
 (let (($x1167 (and $x1166 $x1163)))
 (ite $x1167 $x1171 $x1196)))))))))))))))))))))))))))))))
(assert
 (let ((?x1005 (center s________)))
 (let ((?x1143 (center s_________)))
 (let (($x1181 (= ?x1143 ?x1005)))
 (let ((?x819 (right s________)))
 (let ((?x1150 (top ?x819)))
 (let ((?x1152 (stack ?x1150 ?x1005)))
 (let (($x1178 (= ?x1143 ?x1152)))
 (let (($x1153 ((_ is stack ) ?x819)))
 (let (($x1154 (= c________ right-to-center)))
 (let (($x1155 (and $x1154 $x1153)))
 (let (($x1156 (= c________ right-to-left)))
 (let (($x1157 (and $x1156 $x1153)))
 (let ((?x1145 (rest ?x1005)))
 (let (($x1173 (= ?x1143 ?x1145)))
 (let (($x1158 ((_ is stack ) ?x1005)))
 (let (($x1159 (= c________ center-to-right)))
 (let (($x1160 (and $x1159 $x1158)))
 (let (($x1161 (= c________ center-to-left)))
 (let (($x1162 (and $x1161 $x1158)))
 (let ((?x785 (left s________)))
 (let ((?x1003 (top ?x785)))
 (let ((?x1144 (stack ?x1003 ?x1005)))
 (let (($x1172 (= ?x1143 ?x1144)))
 (let (($x1163 ((_ is stack ) ?x785)))
 (let (($x1164 (= c________ left-to-right)))
 (let (($x1165 (and $x1164 $x1163)))
 (let (($x1195 (ite $x1165 $x1172 (ite $x1162 $x1173 (ite $x1160 $x1173 (ite $x1157 $x1181 (ite $x1155 $x1178 $x1181)))))))
 (let (($x1166 (= c________ left-to-center)))
 (let (($x1167 (and $x1166 $x1163)))
 (ite $x1167 $x1181 $x1195)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x923 (left s_________)))
 (let ((?x1061 (left s__________)))
 (let (($x1321 (= ?x1061 ?x923)))
 (let ((?x957 (right s_________)))
 (let ((?x1288 (top ?x957)))
 (let ((?x1289 (stack ?x1288 ?x923)))
 (let (($x1315 (= ?x1061 ?x1289)))
 (let (($x1291 ((_ is stack ) ?x957)))
 (let (($x1294 (= c_________ right-to-left)))
 (let (($x1295 (and $x1294 $x1291)))
 (let ((?x1143 (center s_________)))
 (let (($x1296 ((_ is stack ) ?x1143)))
 (let (($x1297 (= c_________ center-to-right)))
 (let (($x1298 (and $x1297 $x1296)))
 (let ((?x1284 (top ?x1143)))
 (let ((?x1285 (stack ?x1284 ?x923)))
 (let (($x1312 (= ?x1061 ?x1285)))
 (let (($x1299 (= c_________ center-to-left)))
 (let (($x1300 (and $x1299 $x1296)))
 (let ((?x1094 (rest ?x923)))
 (let (($x1308 (= ?x1061 ?x1094)))
 (let (($x1301 ((_ is stack ) ?x923)))
 (let (($x1302 (= c_________ left-to-right)))
 (let (($x1303 (and $x1302 $x1301)))
 (let (($x1304 (= c_________ left-to-center)))
 (let (($x1305 (and $x1304 $x1301)))
 (ite $x1305 $x1308 (ite $x1303 $x1308 (ite $x1300 $x1312 (ite $x1298 $x1321 (ite $x1295 $x1315 $x1321))))))))))))))))))))))))))))))))
(assert
 (let ((?x957 (right s_________)))
 (let ((?x1095 (right s__________)))
 (let (($x1317 (= ?x1095 ?x957)))
 (let ((?x1287 (rest ?x957)))
 (let (($x1314 (= ?x1095 ?x1287)))
 (let (($x1291 ((_ is stack ) ?x957)))
 (let (($x1292 (= c_________ right-to-center)))
 (let (($x1293 (and $x1292 $x1291)))
 (let (($x1294 (= c_________ right-to-left)))
 (let (($x1295 (and $x1294 $x1291)))
 (let ((?x1143 (center s_________)))
 (let ((?x1284 (top ?x1143)))
 (let ((?x1286 (stack ?x1284 ?x957)))
 (let (($x1313 (= ?x1095 ?x1286)))
 (let (($x1296 ((_ is stack ) ?x1143)))
 (let (($x1297 (= c_________ center-to-right)))
 (let (($x1298 (and $x1297 $x1296)))
 (let (($x1299 (= c_________ center-to-left)))
 (let (($x1300 (and $x1299 $x1296)))
 (let ((?x923 (left s_________)))
 (let (($x1301 ((_ is stack ) ?x923)))
 (let (($x1302 (= c_________ left-to-right)))
 (let (($x1303 (and $x1302 $x1301)))
 (let (($x1334 (ite $x1303 $x1317 (ite $x1300 $x1317 (ite $x1298 $x1313 (ite $x1295 $x1314 (ite $x1293 $x1314 $x1317)))))))
 (let ((?x1141 (top ?x923)))
 (let ((?x1280 (stack ?x1141 ?x957)))
 (let (($x1309 (= ?x1095 ?x1280)))
 (let (($x1304 (= c_________ left-to-center)))
 (let (($x1305 (and $x1304 $x1301)))
 (ite $x1305 $x1309 $x1334)))))))))))))))))))))))))))))))
(assert
 (let ((?x1143 (center s_________)))
 (let ((?x1281 (center s__________)))
 (let (($x1319 (= ?x1281 ?x1143)))
 (let ((?x957 (right s_________)))
 (let ((?x1288 (top ?x957)))
 (let ((?x1290 (stack ?x1288 ?x1143)))
 (let (($x1316 (= ?x1281 ?x1290)))
 (let (($x1291 ((_ is stack ) ?x957)))
 (let (($x1292 (= c_________ right-to-center)))
 (let (($x1293 (and $x1292 $x1291)))
 (let (($x1294 (= c_________ right-to-left)))
 (let (($x1295 (and $x1294 $x1291)))
 (let ((?x1283 (rest ?x1143)))
 (let (($x1311 (= ?x1281 ?x1283)))
 (let (($x1296 ((_ is stack ) ?x1143)))
 (let (($x1297 (= c_________ center-to-right)))
 (let (($x1298 (and $x1297 $x1296)))
 (let (($x1299 (= c_________ center-to-left)))
 (let (($x1300 (and $x1299 $x1296)))
 (let ((?x923 (left s_________)))
 (let ((?x1141 (top ?x923)))
 (let ((?x1282 (stack ?x1141 ?x1143)))
 (let (($x1310 (= ?x1281 ?x1282)))
 (let (($x1301 ((_ is stack ) ?x923)))
 (let (($x1302 (= c_________ left-to-right)))
 (let (($x1303 (and $x1302 $x1301)))
 (let (($x1333 (ite $x1303 $x1310 (ite $x1300 $x1311 (ite $x1298 $x1311 (ite $x1295 $x1319 (ite $x1293 $x1316 $x1319)))))))
 (let (($x1304 (= c_________ left-to-center)))
 (let (($x1305 (and $x1304 $x1301)))
 (ite $x1305 $x1319 $x1333)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1061 (left s__________)))
 (let ((?x1199 (left s___________)))
 (let (($x1459 (= ?x1199 ?x1061)))
 (let ((?x1095 (right s__________)))
 (let ((?x1426 (top ?x1095)))
 (let ((?x1427 (stack ?x1426 ?x1061)))
 (let (($x1453 (= ?x1199 ?x1427)))
 (let (($x1429 ((_ is stack ) ?x1095)))
 (let (($x1432 (= c__________ right-to-left)))
 (let (($x1433 (and $x1432 $x1429)))
 (let ((?x1281 (center s__________)))
 (let (($x1434 ((_ is stack ) ?x1281)))
 (let (($x1435 (= c__________ center-to-right)))
 (let (($x1436 (and $x1435 $x1434)))
 (let ((?x1422 (top ?x1281)))
 (let ((?x1423 (stack ?x1422 ?x1061)))
 (let (($x1450 (= ?x1199 ?x1423)))
 (let (($x1437 (= c__________ center-to-left)))
 (let (($x1438 (and $x1437 $x1434)))
 (let ((?x1232 (rest ?x1061)))
 (let (($x1446 (= ?x1199 ?x1232)))
 (let (($x1439 ((_ is stack ) ?x1061)))
 (let (($x1440 (= c__________ left-to-right)))
 (let (($x1441 (and $x1440 $x1439)))
 (let (($x1442 (= c__________ left-to-center)))
 (let (($x1443 (and $x1442 $x1439)))
 (ite $x1443 $x1446 (ite $x1441 $x1446 (ite $x1438 $x1450 (ite $x1436 $x1459 (ite $x1433 $x1453 $x1459))))))))))))))))))))))))))))))))
(assert
 (let ((?x1095 (right s__________)))
 (let ((?x1233 (right s___________)))
 (let (($x1455 (= ?x1233 ?x1095)))
 (let ((?x1425 (rest ?x1095)))
 (let (($x1452 (= ?x1233 ?x1425)))
 (let (($x1429 ((_ is stack ) ?x1095)))
 (let (($x1430 (= c__________ right-to-center)))
 (let (($x1431 (and $x1430 $x1429)))
 (let (($x1432 (= c__________ right-to-left)))
 (let (($x1433 (and $x1432 $x1429)))
 (let ((?x1281 (center s__________)))
 (let ((?x1422 (top ?x1281)))
 (let ((?x1424 (stack ?x1422 ?x1095)))
 (let (($x1451 (= ?x1233 ?x1424)))
 (let (($x1434 ((_ is stack ) ?x1281)))
 (let (($x1435 (= c__________ center-to-right)))
 (let (($x1436 (and $x1435 $x1434)))
 (let (($x1437 (= c__________ center-to-left)))
 (let (($x1438 (and $x1437 $x1434)))
 (let ((?x1061 (left s__________)))
 (let (($x1439 ((_ is stack ) ?x1061)))
 (let (($x1440 (= c__________ left-to-right)))
 (let (($x1441 (and $x1440 $x1439)))
 (let (($x1472 (ite $x1441 $x1455 (ite $x1438 $x1455 (ite $x1436 $x1451 (ite $x1433 $x1452 (ite $x1431 $x1452 $x1455)))))))
 (let ((?x1279 (top ?x1061)))
 (let ((?x1418 (stack ?x1279 ?x1095)))
 (let (($x1447 (= ?x1233 ?x1418)))
 (let (($x1442 (= c__________ left-to-center)))
 (let (($x1443 (and $x1442 $x1439)))
 (ite $x1443 $x1447 $x1472)))))))))))))))))))))))))))))))
(assert
 (let ((?x1281 (center s__________)))
 (let ((?x1419 (center s___________)))
 (let (($x1457 (= ?x1419 ?x1281)))
 (let ((?x1095 (right s__________)))
 (let ((?x1426 (top ?x1095)))
 (let ((?x1428 (stack ?x1426 ?x1281)))
 (let (($x1454 (= ?x1419 ?x1428)))
 (let (($x1429 ((_ is stack ) ?x1095)))
 (let (($x1430 (= c__________ right-to-center)))
 (let (($x1431 (and $x1430 $x1429)))
 (let (($x1432 (= c__________ right-to-left)))
 (let (($x1433 (and $x1432 $x1429)))
 (let ((?x1421 (rest ?x1281)))
 (let (($x1449 (= ?x1419 ?x1421)))
 (let (($x1434 ((_ is stack ) ?x1281)))
 (let (($x1435 (= c__________ center-to-right)))
 (let (($x1436 (and $x1435 $x1434)))
 (let (($x1437 (= c__________ center-to-left)))
 (let (($x1438 (and $x1437 $x1434)))
 (let ((?x1061 (left s__________)))
 (let ((?x1279 (top ?x1061)))
 (let ((?x1420 (stack ?x1279 ?x1281)))
 (let (($x1448 (= ?x1419 ?x1420)))
 (let (($x1439 ((_ is stack ) ?x1061)))
 (let (($x1440 (= c__________ left-to-right)))
 (let (($x1441 (and $x1440 $x1439)))
 (let (($x1471 (ite $x1441 $x1448 (ite $x1438 $x1449 (ite $x1436 $x1449 (ite $x1433 $x1457 (ite $x1431 $x1454 $x1457)))))))
 (let (($x1442 (= c__________ left-to-center)))
 (let (($x1443 (and $x1442 $x1439)))
 (ite $x1443 $x1457 $x1471)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1199 (left s___________)))
 (let ((?x1337 (left s____________)))
 (let (($x1597 (= ?x1337 ?x1199)))
 (let ((?x1233 (right s___________)))
 (let ((?x1564 (top ?x1233)))
 (let ((?x1565 (stack ?x1564 ?x1199)))
 (let (($x1591 (= ?x1337 ?x1565)))
 (let (($x1567 ((_ is stack ) ?x1233)))
 (let (($x1570 (= c___________ right-to-left)))
 (let (($x1571 (and $x1570 $x1567)))
 (let ((?x1419 (center s___________)))
 (let (($x1572 ((_ is stack ) ?x1419)))
 (let (($x1573 (= c___________ center-to-right)))
 (let (($x1574 (and $x1573 $x1572)))
 (let ((?x1560 (top ?x1419)))
 (let ((?x1561 (stack ?x1560 ?x1199)))
 (let (($x1588 (= ?x1337 ?x1561)))
 (let (($x1575 (= c___________ center-to-left)))
 (let (($x1576 (and $x1575 $x1572)))
 (let ((?x1370 (rest ?x1199)))
 (let (($x1584 (= ?x1337 ?x1370)))
 (let (($x1577 ((_ is stack ) ?x1199)))
 (let (($x1578 (= c___________ left-to-right)))
 (let (($x1579 (and $x1578 $x1577)))
 (let (($x1580 (= c___________ left-to-center)))
 (let (($x1581 (and $x1580 $x1577)))
 (ite $x1581 $x1584 (ite $x1579 $x1584 (ite $x1576 $x1588 (ite $x1574 $x1597 (ite $x1571 $x1591 $x1597))))))))))))))))))))))))))))))))
(assert
 (let ((?x1233 (right s___________)))
 (let ((?x1371 (right s____________)))
 (let (($x1593 (= ?x1371 ?x1233)))
 (let ((?x1563 (rest ?x1233)))
 (let (($x1590 (= ?x1371 ?x1563)))
 (let (($x1567 ((_ is stack ) ?x1233)))
 (let (($x1568 (= c___________ right-to-center)))
 (let (($x1569 (and $x1568 $x1567)))
 (let (($x1570 (= c___________ right-to-left)))
 (let (($x1571 (and $x1570 $x1567)))
 (let ((?x1419 (center s___________)))
 (let ((?x1560 (top ?x1419)))
 (let ((?x1562 (stack ?x1560 ?x1233)))
 (let (($x1589 (= ?x1371 ?x1562)))
 (let (($x1572 ((_ is stack ) ?x1419)))
 (let (($x1573 (= c___________ center-to-right)))
 (let (($x1574 (and $x1573 $x1572)))
 (let (($x1575 (= c___________ center-to-left)))
 (let (($x1576 (and $x1575 $x1572)))
 (let ((?x1199 (left s___________)))
 (let (($x1577 ((_ is stack ) ?x1199)))
 (let (($x1578 (= c___________ left-to-right)))
 (let (($x1579 (and $x1578 $x1577)))
 (let (($x1610 (ite $x1579 $x1593 (ite $x1576 $x1593 (ite $x1574 $x1589 (ite $x1571 $x1590 (ite $x1569 $x1590 $x1593)))))))
 (let ((?x1417 (top ?x1199)))
 (let ((?x1556 (stack ?x1417 ?x1233)))
 (let (($x1585 (= ?x1371 ?x1556)))
 (let (($x1580 (= c___________ left-to-center)))
 (let (($x1581 (and $x1580 $x1577)))
 (ite $x1581 $x1585 $x1610)))))))))))))))))))))))))))))))
(assert
 (let ((?x1419 (center s___________)))
 (let ((?x1557 (center s____________)))
 (let (($x1595 (= ?x1557 ?x1419)))
 (let ((?x1233 (right s___________)))
 (let ((?x1564 (top ?x1233)))
 (let ((?x1566 (stack ?x1564 ?x1419)))
 (let (($x1592 (= ?x1557 ?x1566)))
 (let (($x1567 ((_ is stack ) ?x1233)))
 (let (($x1568 (= c___________ right-to-center)))
 (let (($x1569 (and $x1568 $x1567)))
 (let (($x1570 (= c___________ right-to-left)))
 (let (($x1571 (and $x1570 $x1567)))
 (let ((?x1559 (rest ?x1419)))
 (let (($x1587 (= ?x1557 ?x1559)))
 (let (($x1572 ((_ is stack ) ?x1419)))
 (let (($x1573 (= c___________ center-to-right)))
 (let (($x1574 (and $x1573 $x1572)))
 (let (($x1575 (= c___________ center-to-left)))
 (let (($x1576 (and $x1575 $x1572)))
 (let ((?x1199 (left s___________)))
 (let ((?x1417 (top ?x1199)))
 (let ((?x1558 (stack ?x1417 ?x1419)))
 (let (($x1586 (= ?x1557 ?x1558)))
 (let (($x1577 ((_ is stack ) ?x1199)))
 (let (($x1578 (= c___________ left-to-right)))
 (let (($x1579 (and $x1578 $x1577)))
 (let (($x1609 (ite $x1579 $x1586 (ite $x1576 $x1587 (ite $x1574 $x1587 (ite $x1571 $x1595 (ite $x1569 $x1592 $x1595)))))))
 (let (($x1580 (= c___________ left-to-center)))
 (let (($x1581 (and $x1580 $x1577)))
 (ite $x1581 $x1595 $x1609)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1337 (left s____________)))
 (let ((?x1475 (left s_____________)))
 (let (($x1735 (= ?x1475 ?x1337)))
 (let ((?x1371 (right s____________)))
 (let ((?x1702 (top ?x1371)))
 (let ((?x1703 (stack ?x1702 ?x1337)))
 (let (($x1729 (= ?x1475 ?x1703)))
 (let (($x1705 ((_ is stack ) ?x1371)))
 (let (($x1708 (= c____________ right-to-left)))
 (let (($x1709 (and $x1708 $x1705)))
 (let ((?x1557 (center s____________)))
 (let (($x1710 ((_ is stack ) ?x1557)))
 (let (($x1711 (= c____________ center-to-right)))
 (let (($x1712 (and $x1711 $x1710)))
 (let ((?x1698 (top ?x1557)))
 (let ((?x1699 (stack ?x1698 ?x1337)))
 (let (($x1726 (= ?x1475 ?x1699)))
 (let (($x1713 (= c____________ center-to-left)))
 (let (($x1714 (and $x1713 $x1710)))
 (let ((?x1508 (rest ?x1337)))
 (let (($x1722 (= ?x1475 ?x1508)))
 (let (($x1715 ((_ is stack ) ?x1337)))
 (let (($x1716 (= c____________ left-to-right)))
 (let (($x1717 (and $x1716 $x1715)))
 (let (($x1718 (= c____________ left-to-center)))
 (let (($x1719 (and $x1718 $x1715)))
 (ite $x1719 $x1722 (ite $x1717 $x1722 (ite $x1714 $x1726 (ite $x1712 $x1735 (ite $x1709 $x1729 $x1735))))))))))))))))))))))))))))))))
(assert
 (let ((?x1371 (right s____________)))
 (let ((?x1509 (right s_____________)))
 (let (($x1731 (= ?x1509 ?x1371)))
 (let ((?x1701 (rest ?x1371)))
 (let (($x1728 (= ?x1509 ?x1701)))
 (let (($x1705 ((_ is stack ) ?x1371)))
 (let (($x1706 (= c____________ right-to-center)))
 (let (($x1707 (and $x1706 $x1705)))
 (let (($x1708 (= c____________ right-to-left)))
 (let (($x1709 (and $x1708 $x1705)))
 (let ((?x1557 (center s____________)))
 (let ((?x1698 (top ?x1557)))
 (let ((?x1700 (stack ?x1698 ?x1371)))
 (let (($x1727 (= ?x1509 ?x1700)))
 (let (($x1710 ((_ is stack ) ?x1557)))
 (let (($x1711 (= c____________ center-to-right)))
 (let (($x1712 (and $x1711 $x1710)))
 (let (($x1713 (= c____________ center-to-left)))
 (let (($x1714 (and $x1713 $x1710)))
 (let ((?x1337 (left s____________)))
 (let (($x1715 ((_ is stack ) ?x1337)))
 (let (($x1716 (= c____________ left-to-right)))
 (let (($x1717 (and $x1716 $x1715)))
 (let (($x1748 (ite $x1717 $x1731 (ite $x1714 $x1731 (ite $x1712 $x1727 (ite $x1709 $x1728 (ite $x1707 $x1728 $x1731)))))))
 (let ((?x1555 (top ?x1337)))
 (let ((?x1694 (stack ?x1555 ?x1371)))
 (let (($x1723 (= ?x1509 ?x1694)))
 (let (($x1718 (= c____________ left-to-center)))
 (let (($x1719 (and $x1718 $x1715)))
 (ite $x1719 $x1723 $x1748)))))))))))))))))))))))))))))))
(assert
 (let ((?x1557 (center s____________)))
 (let ((?x1695 (center s_____________)))
 (let (($x1733 (= ?x1695 ?x1557)))
 (let ((?x1371 (right s____________)))
 (let ((?x1702 (top ?x1371)))
 (let ((?x1704 (stack ?x1702 ?x1557)))
 (let (($x1730 (= ?x1695 ?x1704)))
 (let (($x1705 ((_ is stack ) ?x1371)))
 (let (($x1706 (= c____________ right-to-center)))
 (let (($x1707 (and $x1706 $x1705)))
 (let (($x1708 (= c____________ right-to-left)))
 (let (($x1709 (and $x1708 $x1705)))
 (let ((?x1697 (rest ?x1557)))
 (let (($x1725 (= ?x1695 ?x1697)))
 (let (($x1710 ((_ is stack ) ?x1557)))
 (let (($x1711 (= c____________ center-to-right)))
 (let (($x1712 (and $x1711 $x1710)))
 (let (($x1713 (= c____________ center-to-left)))
 (let (($x1714 (and $x1713 $x1710)))
 (let ((?x1337 (left s____________)))
 (let ((?x1555 (top ?x1337)))
 (let ((?x1696 (stack ?x1555 ?x1557)))
 (let (($x1724 (= ?x1695 ?x1696)))
 (let (($x1715 ((_ is stack ) ?x1337)))
 (let (($x1716 (= c____________ left-to-right)))
 (let (($x1717 (and $x1716 $x1715)))
 (let (($x1747 (ite $x1717 $x1724 (ite $x1714 $x1725 (ite $x1712 $x1725 (ite $x1709 $x1733 (ite $x1707 $x1730 $x1733)))))))
 (let (($x1718 (= c____________ left-to-center)))
 (let (($x1719 (and $x1718 $x1715)))
 (ite $x1719 $x1733 $x1747)))))))))))))))))))))))))))))))
(assert
 (let ((?x35 (stack F (stack E (stack D (stack C (stack B (stack A empty))))))))
 (let ((?x36 (stack H ?x35)))
 (let ((?x1509 (right s_____________)))
 (let (($x1751 (= ?x1509 ?x36)))
 (let ((?x22 (stack I empty)))
 (let ((?x1695 (center s_____________)))
 (let (($x1782 (= ?x1695 ?x22)))
 (let ((?x30 (stack G empty)))
 (let ((?x1475 (left s_____________)))
 (let (($x1783 (= ?x1475 ?x30)))
 (let (($x1785 (not (and $x1783 $x1782 $x1751))))
 (not $x1785)))))))))))))
(check-sat)
(exit)
