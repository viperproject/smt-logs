(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x34 (stack N empty)))
 (let ((?x33 (stack A ?x34)))
 (let ((?x35 (stack O ?x33)))
 (let ((?x36 (stack K ?x35)))
 (let ((?x37 (stack D ?x36)))
 (let ((?x38 (stack T ?x37)))
 (let ((?x39 (stack E ?x38)))
 (let ((?x40 (stack S ?x39)))
 (let ((?x41 (stack C ?x40)))
 (let ((?x42 (stack B ?x41)))
 (let ((?x43 (stack H ?x42)))
 (let ((?x44 (stack U ?x43)))
 (let ((?x45 (stack R ?x44)))
 (let ((?x46 (stack J ?x45)))
 (let ((?x47 (stack I ?x46)))
 (let ((?x48 (stack P ?x47)))
 (let ((?x49 (stack L ?x48)))
 (let ((?x50 (stack G ?x49)))
 (let ((?x51 (stack M ?x50)))
 (let ((?x52 (stack F ?x51)))
 (let ((?x121 (left s_tmp_)))
 (= ?x121 ?x52)))))))))))))))))))))))
(assert
 (let ((?x124 (center s_tmp__)))
 (= ?x124 empty)))
(assert
 (let ((?x53 (stack Q empty)))
 (let ((?x127 (right s_tmp___)))
 (= ?x127 ?x53))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x154 (left s_tmp__)))
 (= (left s_tmp___) ?x154)))
(assert
 (let ((?x124 (center s_tmp__)))
 (= (center s_tmp___) ?x124)))
(assert
 (let ((?x158 (center s_tmp_)))
 (= ?x158 (center s_tmp))))
(assert
 (let ((?x161 (right s_tmp_)))
 (= ?x161 (right s_tmp))))
(assert
 (let ((?x121 (left s_tmp_)))
 (let ((?x154 (left s_tmp__)))
 (= ?x154 ?x121))))
(assert
 (let ((?x161 (right s_tmp_)))
 (let ((?x165 (right s_tmp__)))
 (= ?x165 ?x161))))
(assert
 (= c__ c!1))
(assert
 (let ((?x98 (left s_)))
 (let ((?x275 (left s__)))
 (let (($x317 (= ?x275 ?x98)))
 (let ((?x101 (right s_)))
 (let (($x287 ((_ is stack ) ?x101)))
 (let (($x290 (= c_ right-to-left)))
 (let (($x291 (and $x290 $x287)))
 (let ((?x103 (center s_)))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x294 (and (= c_ center-to-right) $x292)))
 (let (($x296 (and (= c_ center-to-left) $x292)))
 (let (($x326 (ite $x296 (= ?x275 (stack (top ?x103) ?x98)) (ite $x294 $x317 (ite $x291 (= ?x275 (stack (top ?x101) ?x98)) $x317)))))
 (let (($x304 (= ?x275 (rest ?x98))))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 $x304 (ite $x299 $x304 $x326)))))))))))))))))))))
(assert
 (let ((?x101 (right s_)))
 (let ((?x271 (right s__)))
 (let (($x313 (= ?x271 ?x101)))
 (let (($x310 (= ?x271 (rest ?x101))))
 (let (($x287 ((_ is stack ) ?x101)))
 (let (($x288 (= c_ right-to-center)))
 (let (($x289 (and $x288 $x287)))
 (let (($x290 (= c_ right-to-left)))
 (let (($x291 (and $x290 $x287)))
 (let ((?x103 (center s_)))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x294 (and (= c_ center-to-right) $x292)))
 (let (($x323 (ite $x294 (= ?x271 (stack (top ?x103) ?x101)) (ite $x291 $x310 (ite $x289 $x310 $x313)))))
 (let (($x296 (and (= c_ center-to-left) $x292)))
 (let ((?x98 (left s_)))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 (= ?x271 (stack (top ?x98) ?x101)) (ite $x299 $x313 (ite $x296 $x313 $x323))))))))))))))))))))))))
(assert
 (let ((?x103 (center s_)))
 (let ((?x277 (center s__)))
 (let (($x315 (= ?x277 ?x103)))
 (let ((?x101 (right s_)))
 (let (($x287 ((_ is stack ) ?x101)))
 (let (($x288 (= c_ right-to-center)))
 (let (($x289 (and $x288 $x287)))
 (let (($x290 (= c_ right-to-left)))
 (let (($x291 (and $x290 $x287)))
 (let (($x307 (= ?x277 (rest ?x103))))
 (let (($x292 ((_ is stack ) ?x103)))
 (let (($x294 (and (= c_ center-to-right) $x292)))
 (let (($x322 (ite $x294 $x307 (ite $x291 $x315 (ite $x289 (= ?x277 (stack (top ?x101) ?x103)) $x315)))))
 (let (($x296 (and (= c_ center-to-left) $x292)))
 (let ((?x98 (left s_)))
 (let (($x297 ((_ is stack ) ?x98)))
 (let (($x298 (= c_ left-to-right)))
 (let (($x299 (and $x298 $x297)))
 (let (($x300 (= c_ left-to-center)))
 (let (($x301 (and $x300 $x297)))
 (ite $x301 $x315 (ite $x299 (= ?x277 (stack (top ?x98) ?x103)) (ite $x296 $x307 $x322))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x275 (left s__)))
 (let ((?x168 (left s___)))
 (let (($x425 (= ?x168 ?x275)))
 (let ((?x271 (right s__)))
 (let ((?x392 (top ?x271)))
 (let ((?x393 (stack ?x392 ?x275)))
 (let (($x419 (= ?x168 ?x393)))
 (let (($x395 ((_ is stack ) ?x271)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x277 (center s__)))
 (let (($x400 ((_ is stack ) ?x277)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let ((?x388 (top ?x277)))
 (let ((?x389 (stack ?x388 ?x275)))
 (let (($x416 (= ?x168 ?x389)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x170 (rest ?x275)))
 (let (($x412 (= ?x168 ?x170)))
 (let (($x405 ((_ is stack ) ?x275)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x412 (ite $x407 $x412 (ite $x404 $x416 (ite $x402 $x425 (ite $x399 $x419 $x425))))))))))))))))))))))))))))))))
(assert
 (let ((?x271 (right s__)))
 (let ((?x171 (right s___)))
 (let (($x421 (= ?x171 ?x271)))
 (let ((?x391 (rest ?x271)))
 (let (($x418 (= ?x171 ?x391)))
 (let (($x395 ((_ is stack ) ?x271)))
 (let (($x396 (= c__ right-to-center)))
 (let (($x397 (and $x396 $x395)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x277 (center s__)))
 (let ((?x388 (top ?x277)))
 (let ((?x390 (stack ?x388 ?x271)))
 (let (($x417 (= ?x171 ?x390)))
 (let (($x400 ((_ is stack ) ?x277)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x275 (left s__)))
 (let (($x405 ((_ is stack ) ?x275)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x438 (ite $x407 $x421 (ite $x404 $x421 (ite $x402 $x417 (ite $x399 $x418 (ite $x397 $x418 $x421)))))))
 (let ((?x269 (top ?x275)))
 (let ((?x384 (stack ?x269 ?x271)))
 (let (($x413 (= ?x171 ?x384)))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x413 $x438)))))))))))))))))))))))))))))))
(assert
 (let ((?x277 (center s__)))
 (let ((?x385 (center s___)))
 (let (($x423 (= ?x385 ?x277)))
 (let ((?x271 (right s__)))
 (let ((?x392 (top ?x271)))
 (let ((?x394 (stack ?x392 ?x277)))
 (let (($x420 (= ?x385 ?x394)))
 (let (($x395 ((_ is stack ) ?x271)))
 (let (($x396 (= c__ right-to-center)))
 (let (($x397 (and $x396 $x395)))
 (let (($x398 (= c__ right-to-left)))
 (let (($x399 (and $x398 $x395)))
 (let ((?x387 (rest ?x277)))
 (let (($x415 (= ?x385 ?x387)))
 (let (($x400 ((_ is stack ) ?x277)))
 (let (($x401 (= c__ center-to-right)))
 (let (($x402 (and $x401 $x400)))
 (let (($x403 (= c__ center-to-left)))
 (let (($x404 (and $x403 $x400)))
 (let ((?x275 (left s__)))
 (let ((?x269 (top ?x275)))
 (let ((?x386 (stack ?x269 ?x277)))
 (let (($x414 (= ?x385 ?x386)))
 (let (($x405 ((_ is stack ) ?x275)))
 (let (($x406 (= c__ left-to-right)))
 (let (($x407 (and $x406 $x405)))
 (let (($x437 (ite $x407 $x414 (ite $x404 $x415 (ite $x402 $x415 (ite $x399 $x423 (ite $x397 $x420 $x423)))))))
 (let (($x408 (= c__ left-to-center)))
 (let (($x409 (and $x408 $x405)))
 (ite $x409 $x423 $x437)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x168 (left s___)))
 (let ((?x333 (left s____)))
 (let (($x563 (= ?x333 ?x168)))
 (let ((?x171 (right s___)))
 (let ((?x530 (top ?x171)))
 (let ((?x531 (stack ?x530 ?x168)))
 (let (($x557 (= ?x333 ?x531)))
 (let (($x533 ((_ is stack ) ?x171)))
 (let (($x536 (= c___ right-to-left)))
 (let (($x537 (and $x536 $x533)))
 (let ((?x385 (center s___)))
 (let (($x538 ((_ is stack ) ?x385)))
 (let (($x539 (= c___ center-to-right)))
 (let (($x540 (and $x539 $x538)))
 (let ((?x526 (top ?x385)))
 (let ((?x527 (stack ?x526 ?x168)))
 (let (($x554 (= ?x333 ?x527)))
 (let (($x541 (= c___ center-to-left)))
 (let (($x542 (and $x541 $x538)))
 (let ((?x364 (rest ?x168)))
 (let (($x550 (= ?x333 ?x364)))
 (let (($x543 ((_ is stack ) ?x168)))
 (let (($x544 (= c___ left-to-right)))
 (let (($x545 (and $x544 $x543)))
 (let (($x546 (= c___ left-to-center)))
 (let (($x547 (and $x546 $x543)))
 (ite $x547 $x550 (ite $x545 $x550 (ite $x542 $x554 (ite $x540 $x563 (ite $x537 $x557 $x563))))))))))))))))))))))))))))))))
(assert
 (let ((?x171 (right s___)))
 (let ((?x365 (right s____)))
 (let (($x559 (= ?x365 ?x171)))
 (let ((?x529 (rest ?x171)))
 (let (($x556 (= ?x365 ?x529)))
 (let (($x533 ((_ is stack ) ?x171)))
 (let (($x534 (= c___ right-to-center)))
 (let (($x535 (and $x534 $x533)))
 (let (($x536 (= c___ right-to-left)))
 (let (($x537 (and $x536 $x533)))
 (let ((?x385 (center s___)))
 (let ((?x526 (top ?x385)))
 (let ((?x528 (stack ?x526 ?x171)))
 (let (($x555 (= ?x365 ?x528)))
 (let (($x538 ((_ is stack ) ?x385)))
 (let (($x539 (= c___ center-to-right)))
 (let (($x540 (and $x539 $x538)))
 (let (($x541 (= c___ center-to-left)))
 (let (($x542 (and $x541 $x538)))
 (let ((?x168 (left s___)))
 (let (($x543 ((_ is stack ) ?x168)))
 (let (($x544 (= c___ left-to-right)))
 (let (($x545 (and $x544 $x543)))
 (let (($x576 (ite $x545 $x559 (ite $x542 $x559 (ite $x540 $x555 (ite $x537 $x556 (ite $x535 $x556 $x559)))))))
 (let ((?x383 (top ?x168)))
 (let ((?x522 (stack ?x383 ?x171)))
 (let (($x551 (= ?x365 ?x522)))
 (let (($x546 (= c___ left-to-center)))
 (let (($x547 (and $x546 $x543)))
 (ite $x547 $x551 $x576)))))))))))))))))))))))))))))))
(assert
 (let ((?x385 (center s___)))
 (let ((?x523 (center s____)))
 (let (($x561 (= ?x523 ?x385)))
 (let ((?x171 (right s___)))
 (let ((?x530 (top ?x171)))
 (let ((?x532 (stack ?x530 ?x385)))
 (let (($x558 (= ?x523 ?x532)))
 (let (($x533 ((_ is stack ) ?x171)))
 (let (($x534 (= c___ right-to-center)))
 (let (($x535 (and $x534 $x533)))
 (let (($x536 (= c___ right-to-left)))
 (let (($x537 (and $x536 $x533)))
 (let ((?x525 (rest ?x385)))
 (let (($x553 (= ?x523 ?x525)))
 (let (($x538 ((_ is stack ) ?x385)))
 (let (($x539 (= c___ center-to-right)))
 (let (($x540 (and $x539 $x538)))
 (let (($x541 (= c___ center-to-left)))
 (let (($x542 (and $x541 $x538)))
 (let ((?x168 (left s___)))
 (let ((?x383 (top ?x168)))
 (let ((?x524 (stack ?x383 ?x385)))
 (let (($x552 (= ?x523 ?x524)))
 (let (($x543 ((_ is stack ) ?x168)))
 (let (($x544 (= c___ left-to-right)))
 (let (($x545 (and $x544 $x543)))
 (let (($x575 (ite $x545 $x552 (ite $x542 $x553 (ite $x540 $x553 (ite $x537 $x561 (ite $x535 $x558 $x561)))))))
 (let (($x546 (= c___ left-to-center)))
 (let (($x547 (and $x546 $x543)))
 (ite $x547 $x561 $x575)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x333 (left s____)))
 (let ((?x441 (left s_____)))
 (let (($x701 (= ?x441 ?x333)))
 (let ((?x365 (right s____)))
 (let ((?x668 (top ?x365)))
 (let ((?x669 (stack ?x668 ?x333)))
 (let (($x695 (= ?x441 ?x669)))
 (let (($x671 ((_ is stack ) ?x365)))
 (let (($x674 (= c____ right-to-left)))
 (let (($x675 (and $x674 $x671)))
 (let ((?x523 (center s____)))
 (let (($x676 ((_ is stack ) ?x523)))
 (let (($x677 (= c____ center-to-right)))
 (let (($x678 (and $x677 $x676)))
 (let ((?x664 (top ?x523)))
 (let ((?x665 (stack ?x664 ?x333)))
 (let (($x692 (= ?x441 ?x665)))
 (let (($x679 (= c____ center-to-left)))
 (let (($x680 (and $x679 $x676)))
 (let ((?x474 (rest ?x333)))
 (let (($x688 (= ?x441 ?x474)))
 (let (($x681 ((_ is stack ) ?x333)))
 (let (($x682 (= c____ left-to-right)))
 (let (($x683 (and $x682 $x681)))
 (let (($x684 (= c____ left-to-center)))
 (let (($x685 (and $x684 $x681)))
 (ite $x685 $x688 (ite $x683 $x688 (ite $x680 $x692 (ite $x678 $x701 (ite $x675 $x695 $x701))))))))))))))))))))))))))))))))
(assert
 (let ((?x365 (right s____)))
 (let ((?x475 (right s_____)))
 (let (($x697 (= ?x475 ?x365)))
 (let ((?x667 (rest ?x365)))
 (let (($x694 (= ?x475 ?x667)))
 (let (($x671 ((_ is stack ) ?x365)))
 (let (($x672 (= c____ right-to-center)))
 (let (($x673 (and $x672 $x671)))
 (let (($x674 (= c____ right-to-left)))
 (let (($x675 (and $x674 $x671)))
 (let ((?x523 (center s____)))
 (let ((?x664 (top ?x523)))
 (let ((?x666 (stack ?x664 ?x365)))
 (let (($x693 (= ?x475 ?x666)))
 (let (($x676 ((_ is stack ) ?x523)))
 (let (($x677 (= c____ center-to-right)))
 (let (($x678 (and $x677 $x676)))
 (let (($x679 (= c____ center-to-left)))
 (let (($x680 (and $x679 $x676)))
 (let ((?x333 (left s____)))
 (let (($x681 ((_ is stack ) ?x333)))
 (let (($x682 (= c____ left-to-right)))
 (let (($x683 (and $x682 $x681)))
 (let (($x714 (ite $x683 $x697 (ite $x680 $x697 (ite $x678 $x693 (ite $x675 $x694 (ite $x673 $x694 $x697)))))))
 (let ((?x521 (top ?x333)))
 (let ((?x660 (stack ?x521 ?x365)))
 (let (($x689 (= ?x475 ?x660)))
 (let (($x684 (= c____ left-to-center)))
 (let (($x685 (and $x684 $x681)))
 (ite $x685 $x689 $x714)))))))))))))))))))))))))))))))
(assert
 (let ((?x523 (center s____)))
 (let ((?x661 (center s_____)))
 (let (($x699 (= ?x661 ?x523)))
 (let ((?x365 (right s____)))
 (let ((?x668 (top ?x365)))
 (let ((?x670 (stack ?x668 ?x523)))
 (let (($x696 (= ?x661 ?x670)))
 (let (($x671 ((_ is stack ) ?x365)))
 (let (($x672 (= c____ right-to-center)))
 (let (($x673 (and $x672 $x671)))
 (let (($x674 (= c____ right-to-left)))
 (let (($x675 (and $x674 $x671)))
 (let ((?x663 (rest ?x523)))
 (let (($x691 (= ?x661 ?x663)))
 (let (($x676 ((_ is stack ) ?x523)))
 (let (($x677 (= c____ center-to-right)))
 (let (($x678 (and $x677 $x676)))
 (let (($x679 (= c____ center-to-left)))
 (let (($x680 (and $x679 $x676)))
 (let ((?x333 (left s____)))
 (let ((?x521 (top ?x333)))
 (let ((?x662 (stack ?x521 ?x523)))
 (let (($x690 (= ?x661 ?x662)))
 (let (($x681 ((_ is stack ) ?x333)))
 (let (($x682 (= c____ left-to-right)))
 (let (($x683 (and $x682 $x681)))
 (let (($x713 (ite $x683 $x690 (ite $x680 $x691 (ite $x678 $x691 (ite $x675 $x699 (ite $x673 $x696 $x699)))))))
 (let (($x684 (= c____ left-to-center)))
 (let (($x685 (and $x684 $x681)))
 (ite $x685 $x699 $x713)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x441 (left s_____)))
 (let ((?x579 (left s______)))
 (let (($x839 (= ?x579 ?x441)))
 (let ((?x475 (right s_____)))
 (let ((?x806 (top ?x475)))
 (let ((?x807 (stack ?x806 ?x441)))
 (let (($x833 (= ?x579 ?x807)))
 (let (($x809 ((_ is stack ) ?x475)))
 (let (($x812 (= c_____ right-to-left)))
 (let (($x813 (and $x812 $x809)))
 (let ((?x661 (center s_____)))
 (let (($x814 ((_ is stack ) ?x661)))
 (let (($x815 (= c_____ center-to-right)))
 (let (($x816 (and $x815 $x814)))
 (let ((?x802 (top ?x661)))
 (let ((?x803 (stack ?x802 ?x441)))
 (let (($x830 (= ?x579 ?x803)))
 (let (($x817 (= c_____ center-to-left)))
 (let (($x818 (and $x817 $x814)))
 (let ((?x612 (rest ?x441)))
 (let (($x826 (= ?x579 ?x612)))
 (let (($x819 ((_ is stack ) ?x441)))
 (let (($x820 (= c_____ left-to-right)))
 (let (($x821 (and $x820 $x819)))
 (let (($x822 (= c_____ left-to-center)))
 (let (($x823 (and $x822 $x819)))
 (ite $x823 $x826 (ite $x821 $x826 (ite $x818 $x830 (ite $x816 $x839 (ite $x813 $x833 $x839))))))))))))))))))))))))))))))))
(assert
 (let ((?x475 (right s_____)))
 (let ((?x613 (right s______)))
 (let (($x835 (= ?x613 ?x475)))
 (let ((?x805 (rest ?x475)))
 (let (($x832 (= ?x613 ?x805)))
 (let (($x809 ((_ is stack ) ?x475)))
 (let (($x810 (= c_____ right-to-center)))
 (let (($x811 (and $x810 $x809)))
 (let (($x812 (= c_____ right-to-left)))
 (let (($x813 (and $x812 $x809)))
 (let ((?x661 (center s_____)))
 (let ((?x802 (top ?x661)))
 (let ((?x804 (stack ?x802 ?x475)))
 (let (($x831 (= ?x613 ?x804)))
 (let (($x814 ((_ is stack ) ?x661)))
 (let (($x815 (= c_____ center-to-right)))
 (let (($x816 (and $x815 $x814)))
 (let (($x817 (= c_____ center-to-left)))
 (let (($x818 (and $x817 $x814)))
 (let ((?x441 (left s_____)))
 (let (($x819 ((_ is stack ) ?x441)))
 (let (($x820 (= c_____ left-to-right)))
 (let (($x821 (and $x820 $x819)))
 (let (($x852 (ite $x821 $x835 (ite $x818 $x835 (ite $x816 $x831 (ite $x813 $x832 (ite $x811 $x832 $x835)))))))
 (let ((?x659 (top ?x441)))
 (let ((?x798 (stack ?x659 ?x475)))
 (let (($x827 (= ?x613 ?x798)))
 (let (($x822 (= c_____ left-to-center)))
 (let (($x823 (and $x822 $x819)))
 (ite $x823 $x827 $x852)))))))))))))))))))))))))))))))
(assert
 (let ((?x661 (center s_____)))
 (let ((?x799 (center s______)))
 (let (($x837 (= ?x799 ?x661)))
 (let ((?x475 (right s_____)))
 (let ((?x806 (top ?x475)))
 (let ((?x808 (stack ?x806 ?x661)))
 (let (($x834 (= ?x799 ?x808)))
 (let (($x809 ((_ is stack ) ?x475)))
 (let (($x810 (= c_____ right-to-center)))
 (let (($x811 (and $x810 $x809)))
 (let (($x812 (= c_____ right-to-left)))
 (let (($x813 (and $x812 $x809)))
 (let ((?x801 (rest ?x661)))
 (let (($x829 (= ?x799 ?x801)))
 (let (($x814 ((_ is stack ) ?x661)))
 (let (($x815 (= c_____ center-to-right)))
 (let (($x816 (and $x815 $x814)))
 (let (($x817 (= c_____ center-to-left)))
 (let (($x818 (and $x817 $x814)))
 (let ((?x441 (left s_____)))
 (let ((?x659 (top ?x441)))
 (let ((?x800 (stack ?x659 ?x661)))
 (let (($x828 (= ?x799 ?x800)))
 (let (($x819 ((_ is stack ) ?x441)))
 (let (($x820 (= c_____ left-to-right)))
 (let (($x821 (and $x820 $x819)))
 (let (($x851 (ite $x821 $x828 (ite $x818 $x829 (ite $x816 $x829 (ite $x813 $x837 (ite $x811 $x834 $x837)))))))
 (let (($x822 (= c_____ left-to-center)))
 (let (($x823 (and $x822 $x819)))
 (ite $x823 $x837 $x851)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x579 (left s______)))
 (let ((?x717 (left s_______)))
 (let (($x977 (= ?x717 ?x579)))
 (let ((?x613 (right s______)))
 (let ((?x944 (top ?x613)))
 (let ((?x945 (stack ?x944 ?x579)))
 (let (($x971 (= ?x717 ?x945)))
 (let (($x947 ((_ is stack ) ?x613)))
 (let (($x950 (= c______ right-to-left)))
 (let (($x951 (and $x950 $x947)))
 (let ((?x799 (center s______)))
 (let (($x952 ((_ is stack ) ?x799)))
 (let (($x953 (= c______ center-to-right)))
 (let (($x954 (and $x953 $x952)))
 (let ((?x940 (top ?x799)))
 (let ((?x941 (stack ?x940 ?x579)))
 (let (($x968 (= ?x717 ?x941)))
 (let (($x955 (= c______ center-to-left)))
 (let (($x956 (and $x955 $x952)))
 (let ((?x750 (rest ?x579)))
 (let (($x964 (= ?x717 ?x750)))
 (let (($x957 ((_ is stack ) ?x579)))
 (let (($x958 (= c______ left-to-right)))
 (let (($x959 (and $x958 $x957)))
 (let (($x960 (= c______ left-to-center)))
 (let (($x961 (and $x960 $x957)))
 (ite $x961 $x964 (ite $x959 $x964 (ite $x956 $x968 (ite $x954 $x977 (ite $x951 $x971 $x977))))))))))))))))))))))))))))))))
(assert
 (let ((?x613 (right s______)))
 (let ((?x751 (right s_______)))
 (let (($x973 (= ?x751 ?x613)))
 (let ((?x943 (rest ?x613)))
 (let (($x970 (= ?x751 ?x943)))
 (let (($x947 ((_ is stack ) ?x613)))
 (let (($x948 (= c______ right-to-center)))
 (let (($x949 (and $x948 $x947)))
 (let (($x950 (= c______ right-to-left)))
 (let (($x951 (and $x950 $x947)))
 (let ((?x799 (center s______)))
 (let ((?x940 (top ?x799)))
 (let ((?x942 (stack ?x940 ?x613)))
 (let (($x969 (= ?x751 ?x942)))
 (let (($x952 ((_ is stack ) ?x799)))
 (let (($x953 (= c______ center-to-right)))
 (let (($x954 (and $x953 $x952)))
 (let (($x955 (= c______ center-to-left)))
 (let (($x956 (and $x955 $x952)))
 (let ((?x579 (left s______)))
 (let (($x957 ((_ is stack ) ?x579)))
 (let (($x958 (= c______ left-to-right)))
 (let (($x959 (and $x958 $x957)))
 (let (($x990 (ite $x959 $x973 (ite $x956 $x973 (ite $x954 $x969 (ite $x951 $x970 (ite $x949 $x970 $x973)))))))
 (let ((?x797 (top ?x579)))
 (let ((?x936 (stack ?x797 ?x613)))
 (let (($x965 (= ?x751 ?x936)))
 (let (($x960 (= c______ left-to-center)))
 (let (($x961 (and $x960 $x957)))
 (ite $x961 $x965 $x990)))))))))))))))))))))))))))))))
(assert
 (let ((?x799 (center s______)))
 (let ((?x937 (center s_______)))
 (let (($x975 (= ?x937 ?x799)))
 (let ((?x613 (right s______)))
 (let ((?x944 (top ?x613)))
 (let ((?x946 (stack ?x944 ?x799)))
 (let (($x972 (= ?x937 ?x946)))
 (let (($x947 ((_ is stack ) ?x613)))
 (let (($x948 (= c______ right-to-center)))
 (let (($x949 (and $x948 $x947)))
 (let (($x950 (= c______ right-to-left)))
 (let (($x951 (and $x950 $x947)))
 (let ((?x939 (rest ?x799)))
 (let (($x967 (= ?x937 ?x939)))
 (let (($x952 ((_ is stack ) ?x799)))
 (let (($x953 (= c______ center-to-right)))
 (let (($x954 (and $x953 $x952)))
 (let (($x955 (= c______ center-to-left)))
 (let (($x956 (and $x955 $x952)))
 (let ((?x579 (left s______)))
 (let ((?x797 (top ?x579)))
 (let ((?x938 (stack ?x797 ?x799)))
 (let (($x966 (= ?x937 ?x938)))
 (let (($x957 ((_ is stack ) ?x579)))
 (let (($x958 (= c______ left-to-right)))
 (let (($x959 (and $x958 $x957)))
 (let (($x989 (ite $x959 $x966 (ite $x956 $x967 (ite $x954 $x967 (ite $x951 $x975 (ite $x949 $x972 $x975)))))))
 (let (($x960 (= c______ left-to-center)))
 (let (($x961 (and $x960 $x957)))
 (ite $x961 $x975 $x989)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x717 (left s_______)))
 (let ((?x855 (left s________)))
 (let (($x1115 (= ?x855 ?x717)))
 (let ((?x751 (right s_______)))
 (let ((?x1082 (top ?x751)))
 (let ((?x1083 (stack ?x1082 ?x717)))
 (let (($x1109 (= ?x855 ?x1083)))
 (let (($x1085 ((_ is stack ) ?x751)))
 (let (($x1088 (= c_______ right-to-left)))
 (let (($x1089 (and $x1088 $x1085)))
 (let ((?x937 (center s_______)))
 (let (($x1090 ((_ is stack ) ?x937)))
 (let (($x1091 (= c_______ center-to-right)))
 (let (($x1092 (and $x1091 $x1090)))
 (let ((?x1078 (top ?x937)))
 (let ((?x1079 (stack ?x1078 ?x717)))
 (let (($x1106 (= ?x855 ?x1079)))
 (let (($x1093 (= c_______ center-to-left)))
 (let (($x1094 (and $x1093 $x1090)))
 (let ((?x888 (rest ?x717)))
 (let (($x1102 (= ?x855 ?x888)))
 (let (($x1095 ((_ is stack ) ?x717)))
 (let (($x1096 (= c_______ left-to-right)))
 (let (($x1097 (and $x1096 $x1095)))
 (let (($x1098 (= c_______ left-to-center)))
 (let (($x1099 (and $x1098 $x1095)))
 (ite $x1099 $x1102 (ite $x1097 $x1102 (ite $x1094 $x1106 (ite $x1092 $x1115 (ite $x1089 $x1109 $x1115))))))))))))))))))))))))))))))))
(assert
 (let ((?x751 (right s_______)))
 (let ((?x889 (right s________)))
 (let (($x1111 (= ?x889 ?x751)))
 (let ((?x1081 (rest ?x751)))
 (let (($x1108 (= ?x889 ?x1081)))
 (let (($x1085 ((_ is stack ) ?x751)))
 (let (($x1086 (= c_______ right-to-center)))
 (let (($x1087 (and $x1086 $x1085)))
 (let (($x1088 (= c_______ right-to-left)))
 (let (($x1089 (and $x1088 $x1085)))
 (let ((?x937 (center s_______)))
 (let ((?x1078 (top ?x937)))
 (let ((?x1080 (stack ?x1078 ?x751)))
 (let (($x1107 (= ?x889 ?x1080)))
 (let (($x1090 ((_ is stack ) ?x937)))
 (let (($x1091 (= c_______ center-to-right)))
 (let (($x1092 (and $x1091 $x1090)))
 (let (($x1093 (= c_______ center-to-left)))
 (let (($x1094 (and $x1093 $x1090)))
 (let ((?x717 (left s_______)))
 (let (($x1095 ((_ is stack ) ?x717)))
 (let (($x1096 (= c_______ left-to-right)))
 (let (($x1097 (and $x1096 $x1095)))
 (let (($x1128 (ite $x1097 $x1111 (ite $x1094 $x1111 (ite $x1092 $x1107 (ite $x1089 $x1108 (ite $x1087 $x1108 $x1111)))))))
 (let ((?x935 (top ?x717)))
 (let ((?x1074 (stack ?x935 ?x751)))
 (let (($x1103 (= ?x889 ?x1074)))
 (let (($x1098 (= c_______ left-to-center)))
 (let (($x1099 (and $x1098 $x1095)))
 (ite $x1099 $x1103 $x1128)))))))))))))))))))))))))))))))
(assert
 (let ((?x937 (center s_______)))
 (let ((?x1075 (center s________)))
 (let (($x1113 (= ?x1075 ?x937)))
 (let ((?x751 (right s_______)))
 (let ((?x1082 (top ?x751)))
 (let ((?x1084 (stack ?x1082 ?x937)))
 (let (($x1110 (= ?x1075 ?x1084)))
 (let (($x1085 ((_ is stack ) ?x751)))
 (let (($x1086 (= c_______ right-to-center)))
 (let (($x1087 (and $x1086 $x1085)))
 (let (($x1088 (= c_______ right-to-left)))
 (let (($x1089 (and $x1088 $x1085)))
 (let ((?x1077 (rest ?x937)))
 (let (($x1105 (= ?x1075 ?x1077)))
 (let (($x1090 ((_ is stack ) ?x937)))
 (let (($x1091 (= c_______ center-to-right)))
 (let (($x1092 (and $x1091 $x1090)))
 (let (($x1093 (= c_______ center-to-left)))
 (let (($x1094 (and $x1093 $x1090)))
 (let ((?x717 (left s_______)))
 (let ((?x935 (top ?x717)))
 (let ((?x1076 (stack ?x935 ?x937)))
 (let (($x1104 (= ?x1075 ?x1076)))
 (let (($x1095 ((_ is stack ) ?x717)))
 (let (($x1096 (= c_______ left-to-right)))
 (let (($x1097 (and $x1096 $x1095)))
 (let (($x1127 (ite $x1097 $x1104 (ite $x1094 $x1105 (ite $x1092 $x1105 (ite $x1089 $x1113 (ite $x1087 $x1110 $x1113)))))))
 (let (($x1098 (= c_______ left-to-center)))
 (let (($x1099 (and $x1098 $x1095)))
 (ite $x1099 $x1113 $x1127)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x855 (left s________)))
 (let ((?x993 (left s_________)))
 (let (($x1253 (= ?x993 ?x855)))
 (let ((?x889 (right s________)))
 (let ((?x1220 (top ?x889)))
 (let ((?x1221 (stack ?x1220 ?x855)))
 (let (($x1247 (= ?x993 ?x1221)))
 (let (($x1223 ((_ is stack ) ?x889)))
 (let (($x1226 (= c________ right-to-left)))
 (let (($x1227 (and $x1226 $x1223)))
 (let ((?x1075 (center s________)))
 (let (($x1228 ((_ is stack ) ?x1075)))
 (let (($x1229 (= c________ center-to-right)))
 (let (($x1230 (and $x1229 $x1228)))
 (let ((?x1216 (top ?x1075)))
 (let ((?x1217 (stack ?x1216 ?x855)))
 (let (($x1244 (= ?x993 ?x1217)))
 (let (($x1231 (= c________ center-to-left)))
 (let (($x1232 (and $x1231 $x1228)))
 (let ((?x1026 (rest ?x855)))
 (let (($x1240 (= ?x993 ?x1026)))
 (let (($x1233 ((_ is stack ) ?x855)))
 (let (($x1234 (= c________ left-to-right)))
 (let (($x1235 (and $x1234 $x1233)))
 (let (($x1236 (= c________ left-to-center)))
 (let (($x1237 (and $x1236 $x1233)))
 (ite $x1237 $x1240 (ite $x1235 $x1240 (ite $x1232 $x1244 (ite $x1230 $x1253 (ite $x1227 $x1247 $x1253))))))))))))))))))))))))))))))))
(assert
 (let ((?x889 (right s________)))
 (let ((?x1027 (right s_________)))
 (let (($x1249 (= ?x1027 ?x889)))
 (let ((?x1219 (rest ?x889)))
 (let (($x1246 (= ?x1027 ?x1219)))
 (let (($x1223 ((_ is stack ) ?x889)))
 (let (($x1224 (= c________ right-to-center)))
 (let (($x1225 (and $x1224 $x1223)))
 (let (($x1226 (= c________ right-to-left)))
 (let (($x1227 (and $x1226 $x1223)))
 (let ((?x1075 (center s________)))
 (let ((?x1216 (top ?x1075)))
 (let ((?x1218 (stack ?x1216 ?x889)))
 (let (($x1245 (= ?x1027 ?x1218)))
 (let (($x1228 ((_ is stack ) ?x1075)))
 (let (($x1229 (= c________ center-to-right)))
 (let (($x1230 (and $x1229 $x1228)))
 (let (($x1231 (= c________ center-to-left)))
 (let (($x1232 (and $x1231 $x1228)))
 (let ((?x855 (left s________)))
 (let (($x1233 ((_ is stack ) ?x855)))
 (let (($x1234 (= c________ left-to-right)))
 (let (($x1235 (and $x1234 $x1233)))
 (let (($x1266 (ite $x1235 $x1249 (ite $x1232 $x1249 (ite $x1230 $x1245 (ite $x1227 $x1246 (ite $x1225 $x1246 $x1249)))))))
 (let ((?x1073 (top ?x855)))
 (let ((?x1212 (stack ?x1073 ?x889)))
 (let (($x1241 (= ?x1027 ?x1212)))
 (let (($x1236 (= c________ left-to-center)))
 (let (($x1237 (and $x1236 $x1233)))
 (ite $x1237 $x1241 $x1266)))))))))))))))))))))))))))))))
(assert
 (let ((?x1075 (center s________)))
 (let ((?x1213 (center s_________)))
 (let (($x1251 (= ?x1213 ?x1075)))
 (let ((?x889 (right s________)))
 (let ((?x1220 (top ?x889)))
 (let ((?x1222 (stack ?x1220 ?x1075)))
 (let (($x1248 (= ?x1213 ?x1222)))
 (let (($x1223 ((_ is stack ) ?x889)))
 (let (($x1224 (= c________ right-to-center)))
 (let (($x1225 (and $x1224 $x1223)))
 (let (($x1226 (= c________ right-to-left)))
 (let (($x1227 (and $x1226 $x1223)))
 (let ((?x1215 (rest ?x1075)))
 (let (($x1243 (= ?x1213 ?x1215)))
 (let (($x1228 ((_ is stack ) ?x1075)))
 (let (($x1229 (= c________ center-to-right)))
 (let (($x1230 (and $x1229 $x1228)))
 (let (($x1231 (= c________ center-to-left)))
 (let (($x1232 (and $x1231 $x1228)))
 (let ((?x855 (left s________)))
 (let ((?x1073 (top ?x855)))
 (let ((?x1214 (stack ?x1073 ?x1075)))
 (let (($x1242 (= ?x1213 ?x1214)))
 (let (($x1233 ((_ is stack ) ?x855)))
 (let (($x1234 (= c________ left-to-right)))
 (let (($x1235 (and $x1234 $x1233)))
 (let (($x1265 (ite $x1235 $x1242 (ite $x1232 $x1243 (ite $x1230 $x1243 (ite $x1227 $x1251 (ite $x1225 $x1248 $x1251)))))))
 (let (($x1236 (= c________ left-to-center)))
 (let (($x1237 (and $x1236 $x1233)))
 (ite $x1237 $x1251 $x1265)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x993 (left s_________)))
 (let ((?x1131 (left s__________)))
 (let (($x1391 (= ?x1131 ?x993)))
 (let ((?x1027 (right s_________)))
 (let ((?x1358 (top ?x1027)))
 (let ((?x1359 (stack ?x1358 ?x993)))
 (let (($x1385 (= ?x1131 ?x1359)))
 (let (($x1361 ((_ is stack ) ?x1027)))
 (let (($x1364 (= c_________ right-to-left)))
 (let (($x1365 (and $x1364 $x1361)))
 (let ((?x1213 (center s_________)))
 (let (($x1366 ((_ is stack ) ?x1213)))
 (let (($x1367 (= c_________ center-to-right)))
 (let (($x1368 (and $x1367 $x1366)))
 (let ((?x1354 (top ?x1213)))
 (let ((?x1355 (stack ?x1354 ?x993)))
 (let (($x1382 (= ?x1131 ?x1355)))
 (let (($x1369 (= c_________ center-to-left)))
 (let (($x1370 (and $x1369 $x1366)))
 (let ((?x1164 (rest ?x993)))
 (let (($x1378 (= ?x1131 ?x1164)))
 (let (($x1371 ((_ is stack ) ?x993)))
 (let (($x1372 (= c_________ left-to-right)))
 (let (($x1373 (and $x1372 $x1371)))
 (let (($x1374 (= c_________ left-to-center)))
 (let (($x1375 (and $x1374 $x1371)))
 (ite $x1375 $x1378 (ite $x1373 $x1378 (ite $x1370 $x1382 (ite $x1368 $x1391 (ite $x1365 $x1385 $x1391))))))))))))))))))))))))))))))))
(assert
 (let ((?x1027 (right s_________)))
 (let ((?x1165 (right s__________)))
 (let (($x1387 (= ?x1165 ?x1027)))
 (let ((?x1357 (rest ?x1027)))
 (let (($x1384 (= ?x1165 ?x1357)))
 (let (($x1361 ((_ is stack ) ?x1027)))
 (let (($x1362 (= c_________ right-to-center)))
 (let (($x1363 (and $x1362 $x1361)))
 (let (($x1364 (= c_________ right-to-left)))
 (let (($x1365 (and $x1364 $x1361)))
 (let ((?x1213 (center s_________)))
 (let ((?x1354 (top ?x1213)))
 (let ((?x1356 (stack ?x1354 ?x1027)))
 (let (($x1383 (= ?x1165 ?x1356)))
 (let (($x1366 ((_ is stack ) ?x1213)))
 (let (($x1367 (= c_________ center-to-right)))
 (let (($x1368 (and $x1367 $x1366)))
 (let (($x1369 (= c_________ center-to-left)))
 (let (($x1370 (and $x1369 $x1366)))
 (let ((?x993 (left s_________)))
 (let (($x1371 ((_ is stack ) ?x993)))
 (let (($x1372 (= c_________ left-to-right)))
 (let (($x1373 (and $x1372 $x1371)))
 (let (($x1404 (ite $x1373 $x1387 (ite $x1370 $x1387 (ite $x1368 $x1383 (ite $x1365 $x1384 (ite $x1363 $x1384 $x1387)))))))
 (let ((?x1211 (top ?x993)))
 (let ((?x1350 (stack ?x1211 ?x1027)))
 (let (($x1379 (= ?x1165 ?x1350)))
 (let (($x1374 (= c_________ left-to-center)))
 (let (($x1375 (and $x1374 $x1371)))
 (ite $x1375 $x1379 $x1404)))))))))))))))))))))))))))))))
(assert
 (let ((?x1213 (center s_________)))
 (let ((?x1351 (center s__________)))
 (let (($x1389 (= ?x1351 ?x1213)))
 (let ((?x1027 (right s_________)))
 (let ((?x1358 (top ?x1027)))
 (let ((?x1360 (stack ?x1358 ?x1213)))
 (let (($x1386 (= ?x1351 ?x1360)))
 (let (($x1361 ((_ is stack ) ?x1027)))
 (let (($x1362 (= c_________ right-to-center)))
 (let (($x1363 (and $x1362 $x1361)))
 (let (($x1364 (= c_________ right-to-left)))
 (let (($x1365 (and $x1364 $x1361)))
 (let ((?x1353 (rest ?x1213)))
 (let (($x1381 (= ?x1351 ?x1353)))
 (let (($x1366 ((_ is stack ) ?x1213)))
 (let (($x1367 (= c_________ center-to-right)))
 (let (($x1368 (and $x1367 $x1366)))
 (let (($x1369 (= c_________ center-to-left)))
 (let (($x1370 (and $x1369 $x1366)))
 (let ((?x993 (left s_________)))
 (let ((?x1211 (top ?x993)))
 (let ((?x1352 (stack ?x1211 ?x1213)))
 (let (($x1380 (= ?x1351 ?x1352)))
 (let (($x1371 ((_ is stack ) ?x993)))
 (let (($x1372 (= c_________ left-to-right)))
 (let (($x1373 (and $x1372 $x1371)))
 (let (($x1403 (ite $x1373 $x1380 (ite $x1370 $x1381 (ite $x1368 $x1381 (ite $x1365 $x1389 (ite $x1363 $x1386 $x1389)))))))
 (let (($x1374 (= c_________ left-to-center)))
 (let (($x1375 (and $x1374 $x1371)))
 (ite $x1375 $x1389 $x1403)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1131 (left s__________)))
 (let ((?x1269 (left s___________)))
 (let (($x1529 (= ?x1269 ?x1131)))
 (let ((?x1165 (right s__________)))
 (let ((?x1496 (top ?x1165)))
 (let ((?x1497 (stack ?x1496 ?x1131)))
 (let (($x1523 (= ?x1269 ?x1497)))
 (let (($x1499 ((_ is stack ) ?x1165)))
 (let (($x1502 (= c__________ right-to-left)))
 (let (($x1503 (and $x1502 $x1499)))
 (let ((?x1351 (center s__________)))
 (let (($x1504 ((_ is stack ) ?x1351)))
 (let (($x1505 (= c__________ center-to-right)))
 (let (($x1506 (and $x1505 $x1504)))
 (let ((?x1492 (top ?x1351)))
 (let ((?x1493 (stack ?x1492 ?x1131)))
 (let (($x1520 (= ?x1269 ?x1493)))
 (let (($x1507 (= c__________ center-to-left)))
 (let (($x1508 (and $x1507 $x1504)))
 (let ((?x1302 (rest ?x1131)))
 (let (($x1516 (= ?x1269 ?x1302)))
 (let (($x1509 ((_ is stack ) ?x1131)))
 (let (($x1510 (= c__________ left-to-right)))
 (let (($x1511 (and $x1510 $x1509)))
 (let (($x1512 (= c__________ left-to-center)))
 (let (($x1513 (and $x1512 $x1509)))
 (ite $x1513 $x1516 (ite $x1511 $x1516 (ite $x1508 $x1520 (ite $x1506 $x1529 (ite $x1503 $x1523 $x1529))))))))))))))))))))))))))))))))
(assert
 (let ((?x1165 (right s__________)))
 (let ((?x1303 (right s___________)))
 (let (($x1525 (= ?x1303 ?x1165)))
 (let ((?x1495 (rest ?x1165)))
 (let (($x1522 (= ?x1303 ?x1495)))
 (let (($x1499 ((_ is stack ) ?x1165)))
 (let (($x1500 (= c__________ right-to-center)))
 (let (($x1501 (and $x1500 $x1499)))
 (let (($x1502 (= c__________ right-to-left)))
 (let (($x1503 (and $x1502 $x1499)))
 (let ((?x1351 (center s__________)))
 (let ((?x1492 (top ?x1351)))
 (let ((?x1494 (stack ?x1492 ?x1165)))
 (let (($x1521 (= ?x1303 ?x1494)))
 (let (($x1504 ((_ is stack ) ?x1351)))
 (let (($x1505 (= c__________ center-to-right)))
 (let (($x1506 (and $x1505 $x1504)))
 (let (($x1507 (= c__________ center-to-left)))
 (let (($x1508 (and $x1507 $x1504)))
 (let ((?x1131 (left s__________)))
 (let (($x1509 ((_ is stack ) ?x1131)))
 (let (($x1510 (= c__________ left-to-right)))
 (let (($x1511 (and $x1510 $x1509)))
 (let (($x1542 (ite $x1511 $x1525 (ite $x1508 $x1525 (ite $x1506 $x1521 (ite $x1503 $x1522 (ite $x1501 $x1522 $x1525)))))))
 (let ((?x1349 (top ?x1131)))
 (let ((?x1488 (stack ?x1349 ?x1165)))
 (let (($x1517 (= ?x1303 ?x1488)))
 (let (($x1512 (= c__________ left-to-center)))
 (let (($x1513 (and $x1512 $x1509)))
 (ite $x1513 $x1517 $x1542)))))))))))))))))))))))))))))))
(assert
 (let ((?x1351 (center s__________)))
 (let ((?x1489 (center s___________)))
 (let (($x1527 (= ?x1489 ?x1351)))
 (let ((?x1165 (right s__________)))
 (let ((?x1496 (top ?x1165)))
 (let ((?x1498 (stack ?x1496 ?x1351)))
 (let (($x1524 (= ?x1489 ?x1498)))
 (let (($x1499 ((_ is stack ) ?x1165)))
 (let (($x1500 (= c__________ right-to-center)))
 (let (($x1501 (and $x1500 $x1499)))
 (let (($x1502 (= c__________ right-to-left)))
 (let (($x1503 (and $x1502 $x1499)))
 (let ((?x1491 (rest ?x1351)))
 (let (($x1519 (= ?x1489 ?x1491)))
 (let (($x1504 ((_ is stack ) ?x1351)))
 (let (($x1505 (= c__________ center-to-right)))
 (let (($x1506 (and $x1505 $x1504)))
 (let (($x1507 (= c__________ center-to-left)))
 (let (($x1508 (and $x1507 $x1504)))
 (let ((?x1131 (left s__________)))
 (let ((?x1349 (top ?x1131)))
 (let ((?x1490 (stack ?x1349 ?x1351)))
 (let (($x1518 (= ?x1489 ?x1490)))
 (let (($x1509 ((_ is stack ) ?x1131)))
 (let (($x1510 (= c__________ left-to-right)))
 (let (($x1511 (and $x1510 $x1509)))
 (let (($x1541 (ite $x1511 $x1518 (ite $x1508 $x1519 (ite $x1506 $x1519 (ite $x1503 $x1527 (ite $x1501 $x1524 $x1527)))))))
 (let (($x1512 (= c__________ left-to-center)))
 (let (($x1513 (and $x1512 $x1509)))
 (ite $x1513 $x1527 $x1541)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1269 (left s___________)))
 (let ((?x1407 (left s____________)))
 (let (($x1667 (= ?x1407 ?x1269)))
 (let ((?x1303 (right s___________)))
 (let ((?x1634 (top ?x1303)))
 (let ((?x1635 (stack ?x1634 ?x1269)))
 (let (($x1661 (= ?x1407 ?x1635)))
 (let (($x1637 ((_ is stack ) ?x1303)))
 (let (($x1640 (= c___________ right-to-left)))
 (let (($x1641 (and $x1640 $x1637)))
 (let ((?x1489 (center s___________)))
 (let (($x1642 ((_ is stack ) ?x1489)))
 (let (($x1643 (= c___________ center-to-right)))
 (let (($x1644 (and $x1643 $x1642)))
 (let ((?x1630 (top ?x1489)))
 (let ((?x1631 (stack ?x1630 ?x1269)))
 (let (($x1658 (= ?x1407 ?x1631)))
 (let (($x1645 (= c___________ center-to-left)))
 (let (($x1646 (and $x1645 $x1642)))
 (let ((?x1440 (rest ?x1269)))
 (let (($x1654 (= ?x1407 ?x1440)))
 (let (($x1647 ((_ is stack ) ?x1269)))
 (let (($x1648 (= c___________ left-to-right)))
 (let (($x1649 (and $x1648 $x1647)))
 (let (($x1650 (= c___________ left-to-center)))
 (let (($x1651 (and $x1650 $x1647)))
 (ite $x1651 $x1654 (ite $x1649 $x1654 (ite $x1646 $x1658 (ite $x1644 $x1667 (ite $x1641 $x1661 $x1667))))))))))))))))))))))))))))))))
(assert
 (let ((?x1303 (right s___________)))
 (let ((?x1441 (right s____________)))
 (let (($x1663 (= ?x1441 ?x1303)))
 (let ((?x1633 (rest ?x1303)))
 (let (($x1660 (= ?x1441 ?x1633)))
 (let (($x1637 ((_ is stack ) ?x1303)))
 (let (($x1638 (= c___________ right-to-center)))
 (let (($x1639 (and $x1638 $x1637)))
 (let (($x1640 (= c___________ right-to-left)))
 (let (($x1641 (and $x1640 $x1637)))
 (let ((?x1489 (center s___________)))
 (let ((?x1630 (top ?x1489)))
 (let ((?x1632 (stack ?x1630 ?x1303)))
 (let (($x1659 (= ?x1441 ?x1632)))
 (let (($x1642 ((_ is stack ) ?x1489)))
 (let (($x1643 (= c___________ center-to-right)))
 (let (($x1644 (and $x1643 $x1642)))
 (let (($x1645 (= c___________ center-to-left)))
 (let (($x1646 (and $x1645 $x1642)))
 (let ((?x1269 (left s___________)))
 (let (($x1647 ((_ is stack ) ?x1269)))
 (let (($x1648 (= c___________ left-to-right)))
 (let (($x1649 (and $x1648 $x1647)))
 (let (($x1680 (ite $x1649 $x1663 (ite $x1646 $x1663 (ite $x1644 $x1659 (ite $x1641 $x1660 (ite $x1639 $x1660 $x1663)))))))
 (let ((?x1487 (top ?x1269)))
 (let ((?x1626 (stack ?x1487 ?x1303)))
 (let (($x1655 (= ?x1441 ?x1626)))
 (let (($x1650 (= c___________ left-to-center)))
 (let (($x1651 (and $x1650 $x1647)))
 (ite $x1651 $x1655 $x1680)))))))))))))))))))))))))))))))
(assert
 (let ((?x1489 (center s___________)))
 (let ((?x1627 (center s____________)))
 (let (($x1665 (= ?x1627 ?x1489)))
 (let ((?x1303 (right s___________)))
 (let ((?x1634 (top ?x1303)))
 (let ((?x1636 (stack ?x1634 ?x1489)))
 (let (($x1662 (= ?x1627 ?x1636)))
 (let (($x1637 ((_ is stack ) ?x1303)))
 (let (($x1638 (= c___________ right-to-center)))
 (let (($x1639 (and $x1638 $x1637)))
 (let (($x1640 (= c___________ right-to-left)))
 (let (($x1641 (and $x1640 $x1637)))
 (let ((?x1629 (rest ?x1489)))
 (let (($x1657 (= ?x1627 ?x1629)))
 (let (($x1642 ((_ is stack ) ?x1489)))
 (let (($x1643 (= c___________ center-to-right)))
 (let (($x1644 (and $x1643 $x1642)))
 (let (($x1645 (= c___________ center-to-left)))
 (let (($x1646 (and $x1645 $x1642)))
 (let ((?x1269 (left s___________)))
 (let ((?x1487 (top ?x1269)))
 (let ((?x1628 (stack ?x1487 ?x1489)))
 (let (($x1656 (= ?x1627 ?x1628)))
 (let (($x1647 ((_ is stack ) ?x1269)))
 (let (($x1648 (= c___________ left-to-right)))
 (let (($x1649 (and $x1648 $x1647)))
 (let (($x1679 (ite $x1649 $x1656 (ite $x1646 $x1657 (ite $x1644 $x1657 (ite $x1641 $x1665 (ite $x1639 $x1662 $x1665)))))))
 (let (($x1650 (= c___________ left-to-center)))
 (let (($x1651 (and $x1650 $x1647)))
 (ite $x1651 $x1665 $x1679)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1407 (left s____________)))
 (let ((?x1545 (left s_____________)))
 (let (($x1805 (= ?x1545 ?x1407)))
 (let ((?x1441 (right s____________)))
 (let ((?x1772 (top ?x1441)))
 (let ((?x1773 (stack ?x1772 ?x1407)))
 (let (($x1799 (= ?x1545 ?x1773)))
 (let (($x1775 ((_ is stack ) ?x1441)))
 (let (($x1778 (= c____________ right-to-left)))
 (let (($x1779 (and $x1778 $x1775)))
 (let ((?x1627 (center s____________)))
 (let (($x1780 ((_ is stack ) ?x1627)))
 (let (($x1781 (= c____________ center-to-right)))
 (let (($x1782 (and $x1781 $x1780)))
 (let ((?x1768 (top ?x1627)))
 (let ((?x1769 (stack ?x1768 ?x1407)))
 (let (($x1796 (= ?x1545 ?x1769)))
 (let (($x1783 (= c____________ center-to-left)))
 (let (($x1784 (and $x1783 $x1780)))
 (let ((?x1578 (rest ?x1407)))
 (let (($x1792 (= ?x1545 ?x1578)))
 (let (($x1785 ((_ is stack ) ?x1407)))
 (let (($x1786 (= c____________ left-to-right)))
 (let (($x1787 (and $x1786 $x1785)))
 (let (($x1788 (= c____________ left-to-center)))
 (let (($x1789 (and $x1788 $x1785)))
 (ite $x1789 $x1792 (ite $x1787 $x1792 (ite $x1784 $x1796 (ite $x1782 $x1805 (ite $x1779 $x1799 $x1805))))))))))))))))))))))))))))))))
(assert
 (let ((?x1441 (right s____________)))
 (let ((?x1579 (right s_____________)))
 (let (($x1801 (= ?x1579 ?x1441)))
 (let ((?x1771 (rest ?x1441)))
 (let (($x1798 (= ?x1579 ?x1771)))
 (let (($x1775 ((_ is stack ) ?x1441)))
 (let (($x1776 (= c____________ right-to-center)))
 (let (($x1777 (and $x1776 $x1775)))
 (let (($x1778 (= c____________ right-to-left)))
 (let (($x1779 (and $x1778 $x1775)))
 (let ((?x1627 (center s____________)))
 (let ((?x1768 (top ?x1627)))
 (let ((?x1770 (stack ?x1768 ?x1441)))
 (let (($x1797 (= ?x1579 ?x1770)))
 (let (($x1780 ((_ is stack ) ?x1627)))
 (let (($x1781 (= c____________ center-to-right)))
 (let (($x1782 (and $x1781 $x1780)))
 (let (($x1783 (= c____________ center-to-left)))
 (let (($x1784 (and $x1783 $x1780)))
 (let ((?x1407 (left s____________)))
 (let (($x1785 ((_ is stack ) ?x1407)))
 (let (($x1786 (= c____________ left-to-right)))
 (let (($x1787 (and $x1786 $x1785)))
 (let (($x1818 (ite $x1787 $x1801 (ite $x1784 $x1801 (ite $x1782 $x1797 (ite $x1779 $x1798 (ite $x1777 $x1798 $x1801)))))))
 (let ((?x1625 (top ?x1407)))
 (let ((?x1764 (stack ?x1625 ?x1441)))
 (let (($x1793 (= ?x1579 ?x1764)))
 (let (($x1788 (= c____________ left-to-center)))
 (let (($x1789 (and $x1788 $x1785)))
 (ite $x1789 $x1793 $x1818)))))))))))))))))))))))))))))))
(assert
 (let ((?x1627 (center s____________)))
 (let ((?x1765 (center s_____________)))
 (let (($x1803 (= ?x1765 ?x1627)))
 (let ((?x1441 (right s____________)))
 (let ((?x1772 (top ?x1441)))
 (let ((?x1774 (stack ?x1772 ?x1627)))
 (let (($x1800 (= ?x1765 ?x1774)))
 (let (($x1775 ((_ is stack ) ?x1441)))
 (let (($x1776 (= c____________ right-to-center)))
 (let (($x1777 (and $x1776 $x1775)))
 (let (($x1778 (= c____________ right-to-left)))
 (let (($x1779 (and $x1778 $x1775)))
 (let ((?x1767 (rest ?x1627)))
 (let (($x1795 (= ?x1765 ?x1767)))
 (let (($x1780 ((_ is stack ) ?x1627)))
 (let (($x1781 (= c____________ center-to-right)))
 (let (($x1782 (and $x1781 $x1780)))
 (let (($x1783 (= c____________ center-to-left)))
 (let (($x1784 (and $x1783 $x1780)))
 (let ((?x1407 (left s____________)))
 (let ((?x1625 (top ?x1407)))
 (let ((?x1766 (stack ?x1625 ?x1627)))
 (let (($x1794 (= ?x1765 ?x1766)))
 (let (($x1785 ((_ is stack ) ?x1407)))
 (let (($x1786 (= c____________ left-to-right)))
 (let (($x1787 (and $x1786 $x1785)))
 (let (($x1817 (ite $x1787 $x1794 (ite $x1784 $x1795 (ite $x1782 $x1795 (ite $x1779 $x1803 (ite $x1777 $x1800 $x1803)))))))
 (let (($x1788 (= c____________ left-to-center)))
 (let (($x1789 (and $x1788 $x1785)))
 (ite $x1789 $x1803 $x1817)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1545 (left s_____________)))
 (let ((?x1683 (left s______________)))
 (let (($x1943 (= ?x1683 ?x1545)))
 (let ((?x1579 (right s_____________)))
 (let ((?x1910 (top ?x1579)))
 (let ((?x1911 (stack ?x1910 ?x1545)))
 (let (($x1937 (= ?x1683 ?x1911)))
 (let (($x1913 ((_ is stack ) ?x1579)))
 (let (($x1916 (= c_____________ right-to-left)))
 (let (($x1917 (and $x1916 $x1913)))
 (let ((?x1765 (center s_____________)))
 (let (($x1918 ((_ is stack ) ?x1765)))
 (let (($x1919 (= c_____________ center-to-right)))
 (let (($x1920 (and $x1919 $x1918)))
 (let ((?x1906 (top ?x1765)))
 (let ((?x1907 (stack ?x1906 ?x1545)))
 (let (($x1934 (= ?x1683 ?x1907)))
 (let (($x1921 (= c_____________ center-to-left)))
 (let (($x1922 (and $x1921 $x1918)))
 (let ((?x1716 (rest ?x1545)))
 (let (($x1930 (= ?x1683 ?x1716)))
 (let (($x1923 ((_ is stack ) ?x1545)))
 (let (($x1924 (= c_____________ left-to-right)))
 (let (($x1925 (and $x1924 $x1923)))
 (let (($x1926 (= c_____________ left-to-center)))
 (let (($x1927 (and $x1926 $x1923)))
 (ite $x1927 $x1930 (ite $x1925 $x1930 (ite $x1922 $x1934 (ite $x1920 $x1943 (ite $x1917 $x1937 $x1943))))))))))))))))))))))))))))))))
(assert
 (let ((?x1579 (right s_____________)))
 (let ((?x1717 (right s______________)))
 (let (($x1939 (= ?x1717 ?x1579)))
 (let ((?x1909 (rest ?x1579)))
 (let (($x1936 (= ?x1717 ?x1909)))
 (let (($x1913 ((_ is stack ) ?x1579)))
 (let (($x1914 (= c_____________ right-to-center)))
 (let (($x1915 (and $x1914 $x1913)))
 (let (($x1916 (= c_____________ right-to-left)))
 (let (($x1917 (and $x1916 $x1913)))
 (let ((?x1765 (center s_____________)))
 (let ((?x1906 (top ?x1765)))
 (let ((?x1908 (stack ?x1906 ?x1579)))
 (let (($x1935 (= ?x1717 ?x1908)))
 (let (($x1918 ((_ is stack ) ?x1765)))
 (let (($x1919 (= c_____________ center-to-right)))
 (let (($x1920 (and $x1919 $x1918)))
 (let (($x1921 (= c_____________ center-to-left)))
 (let (($x1922 (and $x1921 $x1918)))
 (let ((?x1545 (left s_____________)))
 (let (($x1923 ((_ is stack ) ?x1545)))
 (let (($x1924 (= c_____________ left-to-right)))
 (let (($x1925 (and $x1924 $x1923)))
 (let (($x1956 (ite $x1925 $x1939 (ite $x1922 $x1939 (ite $x1920 $x1935 (ite $x1917 $x1936 (ite $x1915 $x1936 $x1939)))))))
 (let ((?x1763 (top ?x1545)))
 (let ((?x1902 (stack ?x1763 ?x1579)))
 (let (($x1931 (= ?x1717 ?x1902)))
 (let (($x1926 (= c_____________ left-to-center)))
 (let (($x1927 (and $x1926 $x1923)))
 (ite $x1927 $x1931 $x1956)))))))))))))))))))))))))))))))
(assert
 (let ((?x1765 (center s_____________)))
 (let ((?x1903 (center s______________)))
 (let (($x1941 (= ?x1903 ?x1765)))
 (let ((?x1579 (right s_____________)))
 (let ((?x1910 (top ?x1579)))
 (let ((?x1912 (stack ?x1910 ?x1765)))
 (let (($x1938 (= ?x1903 ?x1912)))
 (let (($x1913 ((_ is stack ) ?x1579)))
 (let (($x1914 (= c_____________ right-to-center)))
 (let (($x1915 (and $x1914 $x1913)))
 (let (($x1916 (= c_____________ right-to-left)))
 (let (($x1917 (and $x1916 $x1913)))
 (let ((?x1905 (rest ?x1765)))
 (let (($x1933 (= ?x1903 ?x1905)))
 (let (($x1918 ((_ is stack ) ?x1765)))
 (let (($x1919 (= c_____________ center-to-right)))
 (let (($x1920 (and $x1919 $x1918)))
 (let (($x1921 (= c_____________ center-to-left)))
 (let (($x1922 (and $x1921 $x1918)))
 (let ((?x1545 (left s_____________)))
 (let ((?x1763 (top ?x1545)))
 (let ((?x1904 (stack ?x1763 ?x1765)))
 (let (($x1932 (= ?x1903 ?x1904)))
 (let (($x1923 ((_ is stack ) ?x1545)))
 (let (($x1924 (= c_____________ left-to-right)))
 (let (($x1925 (and $x1924 $x1923)))
 (let (($x1955 (ite $x1925 $x1932 (ite $x1922 $x1933 (ite $x1920 $x1933 (ite $x1917 $x1941 (ite $x1915 $x1938 $x1941)))))))
 (let (($x1926 (= c_____________ left-to-center)))
 (let (($x1927 (and $x1926 $x1923)))
 (ite $x1927 $x1941 $x1955)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1683 (left s______________)))
 (let ((?x1821 (left s_______________)))
 (let (($x2081 (= ?x1821 ?x1683)))
 (let ((?x1717 (right s______________)))
 (let ((?x2048 (top ?x1717)))
 (let ((?x2049 (stack ?x2048 ?x1683)))
 (let (($x2075 (= ?x1821 ?x2049)))
 (let (($x2051 ((_ is stack ) ?x1717)))
 (let (($x2054 (= c______________ right-to-left)))
 (let (($x2055 (and $x2054 $x2051)))
 (let ((?x1903 (center s______________)))
 (let (($x2056 ((_ is stack ) ?x1903)))
 (let (($x2057 (= c______________ center-to-right)))
 (let (($x2058 (and $x2057 $x2056)))
 (let ((?x2044 (top ?x1903)))
 (let ((?x2045 (stack ?x2044 ?x1683)))
 (let (($x2072 (= ?x1821 ?x2045)))
 (let (($x2059 (= c______________ center-to-left)))
 (let (($x2060 (and $x2059 $x2056)))
 (let ((?x1854 (rest ?x1683)))
 (let (($x2068 (= ?x1821 ?x1854)))
 (let (($x2061 ((_ is stack ) ?x1683)))
 (let (($x2062 (= c______________ left-to-right)))
 (let (($x2063 (and $x2062 $x2061)))
 (let (($x2064 (= c______________ left-to-center)))
 (let (($x2065 (and $x2064 $x2061)))
 (ite $x2065 $x2068 (ite $x2063 $x2068 (ite $x2060 $x2072 (ite $x2058 $x2081 (ite $x2055 $x2075 $x2081))))))))))))))))))))))))))))))))
(assert
 (let ((?x1717 (right s______________)))
 (let ((?x1855 (right s_______________)))
 (let (($x2077 (= ?x1855 ?x1717)))
 (let ((?x2047 (rest ?x1717)))
 (let (($x2074 (= ?x1855 ?x2047)))
 (let (($x2051 ((_ is stack ) ?x1717)))
 (let (($x2052 (= c______________ right-to-center)))
 (let (($x2053 (and $x2052 $x2051)))
 (let (($x2054 (= c______________ right-to-left)))
 (let (($x2055 (and $x2054 $x2051)))
 (let ((?x1903 (center s______________)))
 (let ((?x2044 (top ?x1903)))
 (let ((?x2046 (stack ?x2044 ?x1717)))
 (let (($x2073 (= ?x1855 ?x2046)))
 (let (($x2056 ((_ is stack ) ?x1903)))
 (let (($x2057 (= c______________ center-to-right)))
 (let (($x2058 (and $x2057 $x2056)))
 (let (($x2059 (= c______________ center-to-left)))
 (let (($x2060 (and $x2059 $x2056)))
 (let ((?x1683 (left s______________)))
 (let (($x2061 ((_ is stack ) ?x1683)))
 (let (($x2062 (= c______________ left-to-right)))
 (let (($x2063 (and $x2062 $x2061)))
 (let (($x2094 (ite $x2063 $x2077 (ite $x2060 $x2077 (ite $x2058 $x2073 (ite $x2055 $x2074 (ite $x2053 $x2074 $x2077)))))))
 (let ((?x1901 (top ?x1683)))
 (let ((?x2040 (stack ?x1901 ?x1717)))
 (let (($x2069 (= ?x1855 ?x2040)))
 (let (($x2064 (= c______________ left-to-center)))
 (let (($x2065 (and $x2064 $x2061)))
 (ite $x2065 $x2069 $x2094)))))))))))))))))))))))))))))))
(assert
 (let ((?x1903 (center s______________)))
 (let ((?x2041 (center s_______________)))
 (let (($x2079 (= ?x2041 ?x1903)))
 (let ((?x1717 (right s______________)))
 (let ((?x2048 (top ?x1717)))
 (let ((?x2050 (stack ?x2048 ?x1903)))
 (let (($x2076 (= ?x2041 ?x2050)))
 (let (($x2051 ((_ is stack ) ?x1717)))
 (let (($x2052 (= c______________ right-to-center)))
 (let (($x2053 (and $x2052 $x2051)))
 (let (($x2054 (= c______________ right-to-left)))
 (let (($x2055 (and $x2054 $x2051)))
 (let ((?x2043 (rest ?x1903)))
 (let (($x2071 (= ?x2041 ?x2043)))
 (let (($x2056 ((_ is stack ) ?x1903)))
 (let (($x2057 (= c______________ center-to-right)))
 (let (($x2058 (and $x2057 $x2056)))
 (let (($x2059 (= c______________ center-to-left)))
 (let (($x2060 (and $x2059 $x2056)))
 (let ((?x1683 (left s______________)))
 (let ((?x1901 (top ?x1683)))
 (let ((?x2042 (stack ?x1901 ?x1903)))
 (let (($x2070 (= ?x2041 ?x2042)))
 (let (($x2061 ((_ is stack ) ?x1683)))
 (let (($x2062 (= c______________ left-to-right)))
 (let (($x2063 (and $x2062 $x2061)))
 (let (($x2093 (ite $x2063 $x2070 (ite $x2060 $x2071 (ite $x2058 $x2071 (ite $x2055 $x2079 (ite $x2053 $x2076 $x2079)))))))
 (let (($x2064 (= c______________ left-to-center)))
 (let (($x2065 (and $x2064 $x2061)))
 (ite $x2065 $x2079 $x2093)))))))))))))))))))))))))))))))
(assert
 (let ((?x62 (stack F (stack E (stack D (stack C (stack B (stack A empty))))))))
 (let ((?x68 (stack L (stack K (stack J (stack I (stack H (stack G ?x62))))))))
 (let ((?x74 (stack T (stack R (stack P (stack O (stack N (stack M ?x68))))))))
 (let ((?x1855 (right s_______________)))
 (let (($x2097 (= ?x1855 ?x74)))
 (let ((?x56 (stack Q (stack S empty))))
 (let ((?x2041 (center s_______________)))
 (let (($x2128 (= ?x2041 ?x56)))
 (let ((?x54 (stack U empty)))
 (let ((?x1821 (left s_______________)))
 (let (($x2129 (= ?x1821 ?x54)))
 (let (($x2131 (not (and $x2129 $x2128 $x2097))))
 (not $x2131))))))))))))))
(check-sat)
(exit)
