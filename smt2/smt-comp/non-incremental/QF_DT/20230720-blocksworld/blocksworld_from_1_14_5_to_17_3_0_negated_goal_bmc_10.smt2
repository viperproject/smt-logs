(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x33 (stack O empty)))
 (let ((?x117 (left s_tmp_)))
 (= ?x117 ?x33))))
(assert
 (let ((?x32 (stack G empty)))
 (let ((?x34 (stack A ?x32)))
 (let ((?x35 (stack D ?x34)))
 (let ((?x36 (stack L ?x35)))
 (let ((?x37 (stack C ?x36)))
 (let ((?x38 (stack B ?x37)))
 (let ((?x39 (stack S ?x38)))
 (let ((?x40 (stack K ?x39)))
 (let ((?x41 (stack P ?x40)))
 (let ((?x42 (stack N ?x41)))
 (let ((?x43 (stack I ?x42)))
 (let ((?x44 (stack E ?x43)))
 (let ((?x45 (stack J ?x44)))
 (let ((?x46 (stack Q ?x45)))
 (let ((?x120 (center s_tmp__)))
 (= ?x120 ?x46)))))))))))))))))
(assert
 (let ((?x47 (stack F empty)))
 (let ((?x48 (stack H ?x47)))
 (let ((?x49 (stack M ?x48)))
 (let ((?x50 (stack R ?x49)))
 (let ((?x51 (stack T ?x50)))
 (let ((?x123 (right s_tmp___)))
 (= ?x123 ?x51))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x150 (left s_tmp__)))
 (= (left s_tmp___) ?x150)))
(assert
 (let ((?x120 (center s_tmp__)))
 (= (center s_tmp___) ?x120)))
(assert
 (let ((?x154 (center s_tmp_)))
 (= ?x154 (center s_tmp))))
(assert
 (let ((?x157 (right s_tmp_)))
 (= ?x157 (right s_tmp))))
(assert
 (let ((?x117 (left s_tmp_)))
 (let ((?x150 (left s_tmp__)))
 (= ?x150 ?x117))))
(assert
 (let ((?x157 (right s_tmp_)))
 (let ((?x161 (right s_tmp__)))
 (= ?x161 ?x157))))
(assert
 (= c__ c!1))
(assert
 (let ((?x94 (left s_)))
 (let ((?x268 (left s__)))
 (let (($x310 (= ?x268 ?x94)))
 (let ((?x97 (right s_)))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x283 (= c_ right-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let ((?x99 (center s_)))
 (let (($x285 ((_ is stack ) ?x99)))
 (let (($x286 (= c_ center-to-right)))
 (let (($x287 (and $x286 $x285)))
 (let (($x288 (= c_ center-to-left)))
 (let (($x289 (and $x288 $x285)))
 (let (($x319 (ite $x289 (= ?x268 (stack (top ?x99) ?x94)) (ite $x287 $x310 (ite $x284 (= ?x268 (stack (top ?x97) ?x94)) $x310)))))
 (let (($x297 (= ?x268 (rest ?x94))))
 (let (($x290 ((_ is stack ) ?x94)))
 (let (($x291 (= c_ left-to-right)))
 (let (($x292 (and $x291 $x290)))
 (let (($x293 (= c_ left-to-center)))
 (let (($x294 (and $x293 $x290)))
 (ite $x294 $x297 (ite $x292 $x297 $x319)))))))))))))))))))))))
(assert
 (let ((?x97 (right s_)))
 (let ((?x270 (right s__)))
 (let (($x306 (= ?x270 ?x97)))
 (let (($x303 (= ?x270 (rest ?x97))))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x281 (= c_ right-to-center)))
 (let (($x282 (and $x281 $x280)))
 (let (($x283 (= c_ right-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let ((?x99 (center s_)))
 (let (($x285 ((_ is stack ) ?x99)))
 (let (($x286 (= c_ center-to-right)))
 (let (($x287 (and $x286 $x285)))
 (let (($x316 (ite $x287 (= ?x270 (stack (top ?x99) ?x97)) (ite $x284 $x303 (ite $x282 $x303 $x306)))))
 (let (($x288 (= c_ center-to-left)))
 (let (($x289 (and $x288 $x285)))
 (let ((?x94 (left s_)))
 (let (($x290 ((_ is stack ) ?x94)))
 (let (($x291 (= c_ left-to-right)))
 (let (($x292 (and $x291 $x290)))
 (let (($x293 (= c_ left-to-center)))
 (let (($x294 (and $x293 $x290)))
 (ite $x294 (= ?x270 (stack (top ?x94) ?x97)) (ite $x292 $x306 (ite $x289 $x306 $x316))))))))))))))))))))))))))
(assert
 (let ((?x99 (center s_)))
 (let ((?x273 (center s__)))
 (let (($x308 (= ?x273 ?x99)))
 (let ((?x97 (right s_)))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x281 (= c_ right-to-center)))
 (let (($x282 (and $x281 $x280)))
 (let (($x283 (= c_ right-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let (($x300 (= ?x273 (rest ?x99))))
 (let (($x285 ((_ is stack ) ?x99)))
 (let (($x286 (= c_ center-to-right)))
 (let (($x287 (and $x286 $x285)))
 (let (($x315 (ite $x287 $x300 (ite $x284 $x308 (ite $x282 (= ?x273 (stack (top ?x97) ?x99)) $x308)))))
 (let (($x288 (= c_ center-to-left)))
 (let (($x289 (and $x288 $x285)))
 (let ((?x94 (left s_)))
 (let (($x290 ((_ is stack ) ?x94)))
 (let (($x291 (= c_ left-to-right)))
 (let (($x292 (and $x291 $x290)))
 (let (($x293 (= c_ left-to-center)))
 (let (($x294 (and $x293 $x290)))
 (ite $x294 $x308 (ite $x292 (= ?x273 (stack (top ?x94) ?x99)) (ite $x289 $x300 $x315))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x268 (left s__)))
 (let ((?x164 (left s___)))
 (let (($x439 (= ?x164 ?x268)))
 (let ((?x270 (right s__)))
 (let ((?x406 (top ?x270)))
 (let ((?x407 (stack ?x406 ?x268)))
 (let (($x433 (= ?x164 ?x407)))
 (let (($x409 ((_ is stack ) ?x270)))
 (let (($x412 (= c__ right-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x273 (center s__)))
 (let (($x414 ((_ is stack ) ?x273)))
 (let (($x415 (= c__ center-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let ((?x402 (top ?x273)))
 (let ((?x403 (stack ?x402 ?x268)))
 (let (($x430 (= ?x164 ?x403)))
 (let (($x417 (= c__ center-to-left)))
 (let (($x418 (and $x417 $x414)))
 (let ((?x166 (rest ?x268)))
 (let (($x426 (= ?x164 ?x166)))
 (let (($x419 ((_ is stack ) ?x268)))
 (let (($x420 (= c__ left-to-right)))
 (let (($x421 (and $x420 $x419)))
 (let (($x422 (= c__ left-to-center)))
 (let (($x423 (and $x422 $x419)))
 (ite $x423 $x426 (ite $x421 $x426 (ite $x418 $x430 (ite $x416 $x439 (ite $x413 $x433 $x439))))))))))))))))))))))))))))))))
(assert
 (let ((?x270 (right s__)))
 (let ((?x167 (right s___)))
 (let (($x435 (= ?x167 ?x270)))
 (let ((?x405 (rest ?x270)))
 (let (($x432 (= ?x167 ?x405)))
 (let (($x409 ((_ is stack ) ?x270)))
 (let (($x410 (= c__ right-to-center)))
 (let (($x411 (and $x410 $x409)))
 (let (($x412 (= c__ right-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x273 (center s__)))
 (let ((?x402 (top ?x273)))
 (let ((?x404 (stack ?x402 ?x270)))
 (let (($x431 (= ?x167 ?x404)))
 (let (($x414 ((_ is stack ) ?x273)))
 (let (($x415 (= c__ center-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let (($x417 (= c__ center-to-left)))
 (let (($x418 (and $x417 $x414)))
 (let ((?x268 (left s__)))
 (let (($x419 ((_ is stack ) ?x268)))
 (let (($x420 (= c__ left-to-right)))
 (let (($x421 (and $x420 $x419)))
 (let (($x452 (ite $x421 $x435 (ite $x418 $x435 (ite $x416 $x431 (ite $x413 $x432 (ite $x411 $x432 $x435)))))))
 (let ((?x262 (top ?x268)))
 (let ((?x398 (stack ?x262 ?x270)))
 (let (($x427 (= ?x167 ?x398)))
 (let (($x422 (= c__ left-to-center)))
 (let (($x423 (and $x422 $x419)))
 (ite $x423 $x427 $x452)))))))))))))))))))))))))))))))
(assert
 (let ((?x273 (center s__)))
 (let ((?x399 (center s___)))
 (let (($x437 (= ?x399 ?x273)))
 (let ((?x270 (right s__)))
 (let ((?x406 (top ?x270)))
 (let ((?x408 (stack ?x406 ?x273)))
 (let (($x434 (= ?x399 ?x408)))
 (let (($x409 ((_ is stack ) ?x270)))
 (let (($x410 (= c__ right-to-center)))
 (let (($x411 (and $x410 $x409)))
 (let (($x412 (= c__ right-to-left)))
 (let (($x413 (and $x412 $x409)))
 (let ((?x401 (rest ?x273)))
 (let (($x429 (= ?x399 ?x401)))
 (let (($x414 ((_ is stack ) ?x273)))
 (let (($x415 (= c__ center-to-right)))
 (let (($x416 (and $x415 $x414)))
 (let (($x417 (= c__ center-to-left)))
 (let (($x418 (and $x417 $x414)))
 (let ((?x268 (left s__)))
 (let ((?x262 (top ?x268)))
 (let ((?x400 (stack ?x262 ?x273)))
 (let (($x428 (= ?x399 ?x400)))
 (let (($x419 ((_ is stack ) ?x268)))
 (let (($x420 (= c__ left-to-right)))
 (let (($x421 (and $x420 $x419)))
 (let (($x451 (ite $x421 $x428 (ite $x418 $x429 (ite $x416 $x429 (ite $x413 $x437 (ite $x411 $x434 $x437)))))))
 (let (($x422 (= c__ left-to-center)))
 (let (($x423 (and $x422 $x419)))
 (ite $x423 $x437 $x451)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x164 (left s___)))
 (let ((?x326 (left s____)))
 (let (($x577 (= ?x326 ?x164)))
 (let ((?x167 (right s___)))
 (let ((?x544 (top ?x167)))
 (let ((?x545 (stack ?x544 ?x164)))
 (let (($x571 (= ?x326 ?x545)))
 (let (($x547 ((_ is stack ) ?x167)))
 (let (($x550 (= c___ right-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x399 (center s___)))
 (let (($x552 ((_ is stack ) ?x399)))
 (let (($x553 (= c___ center-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let ((?x540 (top ?x399)))
 (let ((?x541 (stack ?x540 ?x164)))
 (let (($x568 (= ?x326 ?x541)))
 (let (($x555 (= c___ center-to-left)))
 (let (($x556 (and $x555 $x552)))
 (let ((?x370 (rest ?x164)))
 (let (($x564 (= ?x326 ?x370)))
 (let (($x557 ((_ is stack ) ?x164)))
 (let (($x558 (= c___ left-to-right)))
 (let (($x559 (and $x558 $x557)))
 (let (($x560 (= c___ left-to-center)))
 (let (($x561 (and $x560 $x557)))
 (ite $x561 $x564 (ite $x559 $x564 (ite $x556 $x568 (ite $x554 $x577 (ite $x551 $x571 $x577))))))))))))))))))))))))))))))))
(assert
 (let ((?x167 (right s___)))
 (let ((?x371 (right s____)))
 (let (($x573 (= ?x371 ?x167)))
 (let ((?x543 (rest ?x167)))
 (let (($x570 (= ?x371 ?x543)))
 (let (($x547 ((_ is stack ) ?x167)))
 (let (($x548 (= c___ right-to-center)))
 (let (($x549 (and $x548 $x547)))
 (let (($x550 (= c___ right-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x399 (center s___)))
 (let ((?x540 (top ?x399)))
 (let ((?x542 (stack ?x540 ?x167)))
 (let (($x569 (= ?x371 ?x542)))
 (let (($x552 ((_ is stack ) ?x399)))
 (let (($x553 (= c___ center-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let (($x555 (= c___ center-to-left)))
 (let (($x556 (and $x555 $x552)))
 (let ((?x164 (left s___)))
 (let (($x557 ((_ is stack ) ?x164)))
 (let (($x558 (= c___ left-to-right)))
 (let (($x559 (and $x558 $x557)))
 (let (($x590 (ite $x559 $x573 (ite $x556 $x573 (ite $x554 $x569 (ite $x551 $x570 (ite $x549 $x570 $x573)))))))
 (let ((?x397 (top ?x164)))
 (let ((?x536 (stack ?x397 ?x167)))
 (let (($x565 (= ?x371 ?x536)))
 (let (($x560 (= c___ left-to-center)))
 (let (($x561 (and $x560 $x557)))
 (ite $x561 $x565 $x590)))))))))))))))))))))))))))))))
(assert
 (let ((?x399 (center s___)))
 (let ((?x537 (center s____)))
 (let (($x575 (= ?x537 ?x399)))
 (let ((?x167 (right s___)))
 (let ((?x544 (top ?x167)))
 (let ((?x546 (stack ?x544 ?x399)))
 (let (($x572 (= ?x537 ?x546)))
 (let (($x547 ((_ is stack ) ?x167)))
 (let (($x548 (= c___ right-to-center)))
 (let (($x549 (and $x548 $x547)))
 (let (($x550 (= c___ right-to-left)))
 (let (($x551 (and $x550 $x547)))
 (let ((?x539 (rest ?x399)))
 (let (($x567 (= ?x537 ?x539)))
 (let (($x552 ((_ is stack ) ?x399)))
 (let (($x553 (= c___ center-to-right)))
 (let (($x554 (and $x553 $x552)))
 (let (($x555 (= c___ center-to-left)))
 (let (($x556 (and $x555 $x552)))
 (let ((?x164 (left s___)))
 (let ((?x397 (top ?x164)))
 (let ((?x538 (stack ?x397 ?x399)))
 (let (($x566 (= ?x537 ?x538)))
 (let (($x557 ((_ is stack ) ?x164)))
 (let (($x558 (= c___ left-to-right)))
 (let (($x559 (and $x558 $x557)))
 (let (($x589 (ite $x559 $x566 (ite $x556 $x567 (ite $x554 $x567 (ite $x551 $x575 (ite $x549 $x572 $x575)))))))
 (let (($x560 (= c___ left-to-center)))
 (let (($x561 (and $x560 $x557)))
 (ite $x561 $x575 $x589)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x326 (left s____)))
 (let ((?x455 (left s_____)))
 (let (($x715 (= ?x455 ?x326)))
 (let ((?x371 (right s____)))
 (let ((?x682 (top ?x371)))
 (let ((?x683 (stack ?x682 ?x326)))
 (let (($x709 (= ?x455 ?x683)))
 (let (($x685 ((_ is stack ) ?x371)))
 (let (($x688 (= c____ right-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x537 (center s____)))
 (let (($x690 ((_ is stack ) ?x537)))
 (let (($x691 (= c____ center-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let ((?x678 (top ?x537)))
 (let ((?x679 (stack ?x678 ?x326)))
 (let (($x706 (= ?x455 ?x679)))
 (let (($x693 (= c____ center-to-left)))
 (let (($x694 (and $x693 $x690)))
 (let ((?x488 (rest ?x326)))
 (let (($x702 (= ?x455 ?x488)))
 (let (($x695 ((_ is stack ) ?x326)))
 (let (($x696 (= c____ left-to-right)))
 (let (($x697 (and $x696 $x695)))
 (let (($x698 (= c____ left-to-center)))
 (let (($x699 (and $x698 $x695)))
 (ite $x699 $x702 (ite $x697 $x702 (ite $x694 $x706 (ite $x692 $x715 (ite $x689 $x709 $x715))))))))))))))))))))))))))))))))
(assert
 (let ((?x371 (right s____)))
 (let ((?x489 (right s_____)))
 (let (($x711 (= ?x489 ?x371)))
 (let ((?x681 (rest ?x371)))
 (let (($x708 (= ?x489 ?x681)))
 (let (($x685 ((_ is stack ) ?x371)))
 (let (($x686 (= c____ right-to-center)))
 (let (($x687 (and $x686 $x685)))
 (let (($x688 (= c____ right-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x537 (center s____)))
 (let ((?x678 (top ?x537)))
 (let ((?x680 (stack ?x678 ?x371)))
 (let (($x707 (= ?x489 ?x680)))
 (let (($x690 ((_ is stack ) ?x537)))
 (let (($x691 (= c____ center-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let (($x693 (= c____ center-to-left)))
 (let (($x694 (and $x693 $x690)))
 (let ((?x326 (left s____)))
 (let (($x695 ((_ is stack ) ?x326)))
 (let (($x696 (= c____ left-to-right)))
 (let (($x697 (and $x696 $x695)))
 (let (($x728 (ite $x697 $x711 (ite $x694 $x711 (ite $x692 $x707 (ite $x689 $x708 (ite $x687 $x708 $x711)))))))
 (let ((?x535 (top ?x326)))
 (let ((?x674 (stack ?x535 ?x371)))
 (let (($x703 (= ?x489 ?x674)))
 (let (($x698 (= c____ left-to-center)))
 (let (($x699 (and $x698 $x695)))
 (ite $x699 $x703 $x728)))))))))))))))))))))))))))))))
(assert
 (let ((?x537 (center s____)))
 (let ((?x675 (center s_____)))
 (let (($x713 (= ?x675 ?x537)))
 (let ((?x371 (right s____)))
 (let ((?x682 (top ?x371)))
 (let ((?x684 (stack ?x682 ?x537)))
 (let (($x710 (= ?x675 ?x684)))
 (let (($x685 ((_ is stack ) ?x371)))
 (let (($x686 (= c____ right-to-center)))
 (let (($x687 (and $x686 $x685)))
 (let (($x688 (= c____ right-to-left)))
 (let (($x689 (and $x688 $x685)))
 (let ((?x677 (rest ?x537)))
 (let (($x705 (= ?x675 ?x677)))
 (let (($x690 ((_ is stack ) ?x537)))
 (let (($x691 (= c____ center-to-right)))
 (let (($x692 (and $x691 $x690)))
 (let (($x693 (= c____ center-to-left)))
 (let (($x694 (and $x693 $x690)))
 (let ((?x326 (left s____)))
 (let ((?x535 (top ?x326)))
 (let ((?x676 (stack ?x535 ?x537)))
 (let (($x704 (= ?x675 ?x676)))
 (let (($x695 ((_ is stack ) ?x326)))
 (let (($x696 (= c____ left-to-right)))
 (let (($x697 (and $x696 $x695)))
 (let (($x727 (ite $x697 $x704 (ite $x694 $x705 (ite $x692 $x705 (ite $x689 $x713 (ite $x687 $x710 $x713)))))))
 (let (($x698 (= c____ left-to-center)))
 (let (($x699 (and $x698 $x695)))
 (ite $x699 $x713 $x727)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x455 (left s_____)))
 (let ((?x593 (left s______)))
 (let (($x853 (= ?x593 ?x455)))
 (let ((?x489 (right s_____)))
 (let ((?x820 (top ?x489)))
 (let ((?x821 (stack ?x820 ?x455)))
 (let (($x847 (= ?x593 ?x821)))
 (let (($x823 ((_ is stack ) ?x489)))
 (let (($x826 (= c_____ right-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x675 (center s_____)))
 (let (($x828 ((_ is stack ) ?x675)))
 (let (($x829 (= c_____ center-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let ((?x816 (top ?x675)))
 (let ((?x817 (stack ?x816 ?x455)))
 (let (($x844 (= ?x593 ?x817)))
 (let (($x831 (= c_____ center-to-left)))
 (let (($x832 (and $x831 $x828)))
 (let ((?x626 (rest ?x455)))
 (let (($x840 (= ?x593 ?x626)))
 (let (($x833 ((_ is stack ) ?x455)))
 (let (($x834 (= c_____ left-to-right)))
 (let (($x835 (and $x834 $x833)))
 (let (($x836 (= c_____ left-to-center)))
 (let (($x837 (and $x836 $x833)))
 (ite $x837 $x840 (ite $x835 $x840 (ite $x832 $x844 (ite $x830 $x853 (ite $x827 $x847 $x853))))))))))))))))))))))))))))))))
(assert
 (let ((?x489 (right s_____)))
 (let ((?x627 (right s______)))
 (let (($x849 (= ?x627 ?x489)))
 (let ((?x819 (rest ?x489)))
 (let (($x846 (= ?x627 ?x819)))
 (let (($x823 ((_ is stack ) ?x489)))
 (let (($x824 (= c_____ right-to-center)))
 (let (($x825 (and $x824 $x823)))
 (let (($x826 (= c_____ right-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x675 (center s_____)))
 (let ((?x816 (top ?x675)))
 (let ((?x818 (stack ?x816 ?x489)))
 (let (($x845 (= ?x627 ?x818)))
 (let (($x828 ((_ is stack ) ?x675)))
 (let (($x829 (= c_____ center-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let (($x831 (= c_____ center-to-left)))
 (let (($x832 (and $x831 $x828)))
 (let ((?x455 (left s_____)))
 (let (($x833 ((_ is stack ) ?x455)))
 (let (($x834 (= c_____ left-to-right)))
 (let (($x835 (and $x834 $x833)))
 (let (($x866 (ite $x835 $x849 (ite $x832 $x849 (ite $x830 $x845 (ite $x827 $x846 (ite $x825 $x846 $x849)))))))
 (let ((?x673 (top ?x455)))
 (let ((?x812 (stack ?x673 ?x489)))
 (let (($x841 (= ?x627 ?x812)))
 (let (($x836 (= c_____ left-to-center)))
 (let (($x837 (and $x836 $x833)))
 (ite $x837 $x841 $x866)))))))))))))))))))))))))))))))
(assert
 (let ((?x675 (center s_____)))
 (let ((?x813 (center s______)))
 (let (($x851 (= ?x813 ?x675)))
 (let ((?x489 (right s_____)))
 (let ((?x820 (top ?x489)))
 (let ((?x822 (stack ?x820 ?x675)))
 (let (($x848 (= ?x813 ?x822)))
 (let (($x823 ((_ is stack ) ?x489)))
 (let (($x824 (= c_____ right-to-center)))
 (let (($x825 (and $x824 $x823)))
 (let (($x826 (= c_____ right-to-left)))
 (let (($x827 (and $x826 $x823)))
 (let ((?x815 (rest ?x675)))
 (let (($x843 (= ?x813 ?x815)))
 (let (($x828 ((_ is stack ) ?x675)))
 (let (($x829 (= c_____ center-to-right)))
 (let (($x830 (and $x829 $x828)))
 (let (($x831 (= c_____ center-to-left)))
 (let (($x832 (and $x831 $x828)))
 (let ((?x455 (left s_____)))
 (let ((?x673 (top ?x455)))
 (let ((?x814 (stack ?x673 ?x675)))
 (let (($x842 (= ?x813 ?x814)))
 (let (($x833 ((_ is stack ) ?x455)))
 (let (($x834 (= c_____ left-to-right)))
 (let (($x835 (and $x834 $x833)))
 (let (($x865 (ite $x835 $x842 (ite $x832 $x843 (ite $x830 $x843 (ite $x827 $x851 (ite $x825 $x848 $x851)))))))
 (let (($x836 (= c_____ left-to-center)))
 (let (($x837 (and $x836 $x833)))
 (ite $x837 $x851 $x865)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x593 (left s______)))
 (let ((?x731 (left s_______)))
 (let (($x991 (= ?x731 ?x593)))
 (let ((?x627 (right s______)))
 (let ((?x958 (top ?x627)))
 (let ((?x959 (stack ?x958 ?x593)))
 (let (($x985 (= ?x731 ?x959)))
 (let (($x961 ((_ is stack ) ?x627)))
 (let (($x964 (= c______ right-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x813 (center s______)))
 (let (($x966 ((_ is stack ) ?x813)))
 (let (($x967 (= c______ center-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let ((?x954 (top ?x813)))
 (let ((?x955 (stack ?x954 ?x593)))
 (let (($x982 (= ?x731 ?x955)))
 (let (($x969 (= c______ center-to-left)))
 (let (($x970 (and $x969 $x966)))
 (let ((?x764 (rest ?x593)))
 (let (($x978 (= ?x731 ?x764)))
 (let (($x971 ((_ is stack ) ?x593)))
 (let (($x972 (= c______ left-to-right)))
 (let (($x973 (and $x972 $x971)))
 (let (($x974 (= c______ left-to-center)))
 (let (($x975 (and $x974 $x971)))
 (ite $x975 $x978 (ite $x973 $x978 (ite $x970 $x982 (ite $x968 $x991 (ite $x965 $x985 $x991))))))))))))))))))))))))))))))))
(assert
 (let ((?x627 (right s______)))
 (let ((?x765 (right s_______)))
 (let (($x987 (= ?x765 ?x627)))
 (let ((?x957 (rest ?x627)))
 (let (($x984 (= ?x765 ?x957)))
 (let (($x961 ((_ is stack ) ?x627)))
 (let (($x962 (= c______ right-to-center)))
 (let (($x963 (and $x962 $x961)))
 (let (($x964 (= c______ right-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x813 (center s______)))
 (let ((?x954 (top ?x813)))
 (let ((?x956 (stack ?x954 ?x627)))
 (let (($x983 (= ?x765 ?x956)))
 (let (($x966 ((_ is stack ) ?x813)))
 (let (($x967 (= c______ center-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let (($x969 (= c______ center-to-left)))
 (let (($x970 (and $x969 $x966)))
 (let ((?x593 (left s______)))
 (let (($x971 ((_ is stack ) ?x593)))
 (let (($x972 (= c______ left-to-right)))
 (let (($x973 (and $x972 $x971)))
 (let (($x1004 (ite $x973 $x987 (ite $x970 $x987 (ite $x968 $x983 (ite $x965 $x984 (ite $x963 $x984 $x987)))))))
 (let ((?x811 (top ?x593)))
 (let ((?x950 (stack ?x811 ?x627)))
 (let (($x979 (= ?x765 ?x950)))
 (let (($x974 (= c______ left-to-center)))
 (let (($x975 (and $x974 $x971)))
 (ite $x975 $x979 $x1004)))))))))))))))))))))))))))))))
(assert
 (let ((?x813 (center s______)))
 (let ((?x951 (center s_______)))
 (let (($x989 (= ?x951 ?x813)))
 (let ((?x627 (right s______)))
 (let ((?x958 (top ?x627)))
 (let ((?x960 (stack ?x958 ?x813)))
 (let (($x986 (= ?x951 ?x960)))
 (let (($x961 ((_ is stack ) ?x627)))
 (let (($x962 (= c______ right-to-center)))
 (let (($x963 (and $x962 $x961)))
 (let (($x964 (= c______ right-to-left)))
 (let (($x965 (and $x964 $x961)))
 (let ((?x953 (rest ?x813)))
 (let (($x981 (= ?x951 ?x953)))
 (let (($x966 ((_ is stack ) ?x813)))
 (let (($x967 (= c______ center-to-right)))
 (let (($x968 (and $x967 $x966)))
 (let (($x969 (= c______ center-to-left)))
 (let (($x970 (and $x969 $x966)))
 (let ((?x593 (left s______)))
 (let ((?x811 (top ?x593)))
 (let ((?x952 (stack ?x811 ?x813)))
 (let (($x980 (= ?x951 ?x952)))
 (let (($x971 ((_ is stack ) ?x593)))
 (let (($x972 (= c______ left-to-right)))
 (let (($x973 (and $x972 $x971)))
 (let (($x1003 (ite $x973 $x980 (ite $x970 $x981 (ite $x968 $x981 (ite $x965 $x989 (ite $x963 $x986 $x989)))))))
 (let (($x974 (= c______ left-to-center)))
 (let (($x975 (and $x974 $x971)))
 (ite $x975 $x989 $x1003)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x731 (left s_______)))
 (let ((?x869 (left s________)))
 (let (($x1129 (= ?x869 ?x731)))
 (let ((?x765 (right s_______)))
 (let ((?x1096 (top ?x765)))
 (let ((?x1097 (stack ?x1096 ?x731)))
 (let (($x1123 (= ?x869 ?x1097)))
 (let (($x1099 ((_ is stack ) ?x765)))
 (let (($x1102 (= c_______ right-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x951 (center s_______)))
 (let (($x1104 ((_ is stack ) ?x951)))
 (let (($x1105 (= c_______ center-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let ((?x1092 (top ?x951)))
 (let ((?x1093 (stack ?x1092 ?x731)))
 (let (($x1120 (= ?x869 ?x1093)))
 (let (($x1107 (= c_______ center-to-left)))
 (let (($x1108 (and $x1107 $x1104)))
 (let ((?x902 (rest ?x731)))
 (let (($x1116 (= ?x869 ?x902)))
 (let (($x1109 ((_ is stack ) ?x731)))
 (let (($x1110 (= c_______ left-to-right)))
 (let (($x1111 (and $x1110 $x1109)))
 (let (($x1112 (= c_______ left-to-center)))
 (let (($x1113 (and $x1112 $x1109)))
 (ite $x1113 $x1116 (ite $x1111 $x1116 (ite $x1108 $x1120 (ite $x1106 $x1129 (ite $x1103 $x1123 $x1129))))))))))))))))))))))))))))))))
(assert
 (let ((?x765 (right s_______)))
 (let ((?x903 (right s________)))
 (let (($x1125 (= ?x903 ?x765)))
 (let ((?x1095 (rest ?x765)))
 (let (($x1122 (= ?x903 ?x1095)))
 (let (($x1099 ((_ is stack ) ?x765)))
 (let (($x1100 (= c_______ right-to-center)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1102 (= c_______ right-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x951 (center s_______)))
 (let ((?x1092 (top ?x951)))
 (let ((?x1094 (stack ?x1092 ?x765)))
 (let (($x1121 (= ?x903 ?x1094)))
 (let (($x1104 ((_ is stack ) ?x951)))
 (let (($x1105 (= c_______ center-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let (($x1107 (= c_______ center-to-left)))
 (let (($x1108 (and $x1107 $x1104)))
 (let ((?x731 (left s_______)))
 (let (($x1109 ((_ is stack ) ?x731)))
 (let (($x1110 (= c_______ left-to-right)))
 (let (($x1111 (and $x1110 $x1109)))
 (let (($x1142 (ite $x1111 $x1125 (ite $x1108 $x1125 (ite $x1106 $x1121 (ite $x1103 $x1122 (ite $x1101 $x1122 $x1125)))))))
 (let ((?x949 (top ?x731)))
 (let ((?x1088 (stack ?x949 ?x765)))
 (let (($x1117 (= ?x903 ?x1088)))
 (let (($x1112 (= c_______ left-to-center)))
 (let (($x1113 (and $x1112 $x1109)))
 (ite $x1113 $x1117 $x1142)))))))))))))))))))))))))))))))
(assert
 (let ((?x951 (center s_______)))
 (let ((?x1089 (center s________)))
 (let (($x1127 (= ?x1089 ?x951)))
 (let ((?x765 (right s_______)))
 (let ((?x1096 (top ?x765)))
 (let ((?x1098 (stack ?x1096 ?x951)))
 (let (($x1124 (= ?x1089 ?x1098)))
 (let (($x1099 ((_ is stack ) ?x765)))
 (let (($x1100 (= c_______ right-to-center)))
 (let (($x1101 (and $x1100 $x1099)))
 (let (($x1102 (= c_______ right-to-left)))
 (let (($x1103 (and $x1102 $x1099)))
 (let ((?x1091 (rest ?x951)))
 (let (($x1119 (= ?x1089 ?x1091)))
 (let (($x1104 ((_ is stack ) ?x951)))
 (let (($x1105 (= c_______ center-to-right)))
 (let (($x1106 (and $x1105 $x1104)))
 (let (($x1107 (= c_______ center-to-left)))
 (let (($x1108 (and $x1107 $x1104)))
 (let ((?x731 (left s_______)))
 (let ((?x949 (top ?x731)))
 (let ((?x1090 (stack ?x949 ?x951)))
 (let (($x1118 (= ?x1089 ?x1090)))
 (let (($x1109 ((_ is stack ) ?x731)))
 (let (($x1110 (= c_______ left-to-right)))
 (let (($x1111 (and $x1110 $x1109)))
 (let (($x1141 (ite $x1111 $x1118 (ite $x1108 $x1119 (ite $x1106 $x1119 (ite $x1103 $x1127 (ite $x1101 $x1124 $x1127)))))))
 (let (($x1112 (= c_______ left-to-center)))
 (let (($x1113 (and $x1112 $x1109)))
 (ite $x1113 $x1127 $x1141)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x869 (left s________)))
 (let ((?x1007 (left s_________)))
 (let (($x1267 (= ?x1007 ?x869)))
 (let ((?x903 (right s________)))
 (let ((?x1234 (top ?x903)))
 (let ((?x1235 (stack ?x1234 ?x869)))
 (let (($x1261 (= ?x1007 ?x1235)))
 (let (($x1237 ((_ is stack ) ?x903)))
 (let (($x1240 (= c________ right-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x1089 (center s________)))
 (let (($x1242 ((_ is stack ) ?x1089)))
 (let (($x1243 (= c________ center-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let ((?x1230 (top ?x1089)))
 (let ((?x1231 (stack ?x1230 ?x869)))
 (let (($x1258 (= ?x1007 ?x1231)))
 (let (($x1245 (= c________ center-to-left)))
 (let (($x1246 (and $x1245 $x1242)))
 (let ((?x1040 (rest ?x869)))
 (let (($x1254 (= ?x1007 ?x1040)))
 (let (($x1247 ((_ is stack ) ?x869)))
 (let (($x1248 (= c________ left-to-right)))
 (let (($x1249 (and $x1248 $x1247)))
 (let (($x1250 (= c________ left-to-center)))
 (let (($x1251 (and $x1250 $x1247)))
 (ite $x1251 $x1254 (ite $x1249 $x1254 (ite $x1246 $x1258 (ite $x1244 $x1267 (ite $x1241 $x1261 $x1267))))))))))))))))))))))))))))))))
(assert
 (let ((?x903 (right s________)))
 (let ((?x1041 (right s_________)))
 (let (($x1263 (= ?x1041 ?x903)))
 (let ((?x1233 (rest ?x903)))
 (let (($x1260 (= ?x1041 ?x1233)))
 (let (($x1237 ((_ is stack ) ?x903)))
 (let (($x1238 (= c________ right-to-center)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1240 (= c________ right-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x1089 (center s________)))
 (let ((?x1230 (top ?x1089)))
 (let ((?x1232 (stack ?x1230 ?x903)))
 (let (($x1259 (= ?x1041 ?x1232)))
 (let (($x1242 ((_ is stack ) ?x1089)))
 (let (($x1243 (= c________ center-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let (($x1245 (= c________ center-to-left)))
 (let (($x1246 (and $x1245 $x1242)))
 (let ((?x869 (left s________)))
 (let (($x1247 ((_ is stack ) ?x869)))
 (let (($x1248 (= c________ left-to-right)))
 (let (($x1249 (and $x1248 $x1247)))
 (let (($x1280 (ite $x1249 $x1263 (ite $x1246 $x1263 (ite $x1244 $x1259 (ite $x1241 $x1260 (ite $x1239 $x1260 $x1263)))))))
 (let ((?x1087 (top ?x869)))
 (let ((?x1226 (stack ?x1087 ?x903)))
 (let (($x1255 (= ?x1041 ?x1226)))
 (let (($x1250 (= c________ left-to-center)))
 (let (($x1251 (and $x1250 $x1247)))
 (ite $x1251 $x1255 $x1280)))))))))))))))))))))))))))))))
(assert
 (let ((?x1089 (center s________)))
 (let ((?x1227 (center s_________)))
 (let (($x1265 (= ?x1227 ?x1089)))
 (let ((?x903 (right s________)))
 (let ((?x1234 (top ?x903)))
 (let ((?x1236 (stack ?x1234 ?x1089)))
 (let (($x1262 (= ?x1227 ?x1236)))
 (let (($x1237 ((_ is stack ) ?x903)))
 (let (($x1238 (= c________ right-to-center)))
 (let (($x1239 (and $x1238 $x1237)))
 (let (($x1240 (= c________ right-to-left)))
 (let (($x1241 (and $x1240 $x1237)))
 (let ((?x1229 (rest ?x1089)))
 (let (($x1257 (= ?x1227 ?x1229)))
 (let (($x1242 ((_ is stack ) ?x1089)))
 (let (($x1243 (= c________ center-to-right)))
 (let (($x1244 (and $x1243 $x1242)))
 (let (($x1245 (= c________ center-to-left)))
 (let (($x1246 (and $x1245 $x1242)))
 (let ((?x869 (left s________)))
 (let ((?x1087 (top ?x869)))
 (let ((?x1228 (stack ?x1087 ?x1089)))
 (let (($x1256 (= ?x1227 ?x1228)))
 (let (($x1247 ((_ is stack ) ?x869)))
 (let (($x1248 (= c________ left-to-right)))
 (let (($x1249 (and $x1248 $x1247)))
 (let (($x1279 (ite $x1249 $x1256 (ite $x1246 $x1257 (ite $x1244 $x1257 (ite $x1241 $x1265 (ite $x1239 $x1262 $x1265)))))))
 (let (($x1250 (= c________ left-to-center)))
 (let (($x1251 (and $x1250 $x1247)))
 (ite $x1251 $x1265 $x1279)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1007 (left s_________)))
 (let ((?x1145 (left s__________)))
 (let (($x1405 (= ?x1145 ?x1007)))
 (let ((?x1041 (right s_________)))
 (let ((?x1372 (top ?x1041)))
 (let ((?x1373 (stack ?x1372 ?x1007)))
 (let (($x1399 (= ?x1145 ?x1373)))
 (let (($x1375 ((_ is stack ) ?x1041)))
 (let (($x1378 (= c_________ right-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1227 (center s_________)))
 (let (($x1380 ((_ is stack ) ?x1227)))
 (let (($x1381 (= c_________ center-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let ((?x1368 (top ?x1227)))
 (let ((?x1369 (stack ?x1368 ?x1007)))
 (let (($x1396 (= ?x1145 ?x1369)))
 (let (($x1383 (= c_________ center-to-left)))
 (let (($x1384 (and $x1383 $x1380)))
 (let ((?x1178 (rest ?x1007)))
 (let (($x1392 (= ?x1145 ?x1178)))
 (let (($x1385 ((_ is stack ) ?x1007)))
 (let (($x1386 (= c_________ left-to-right)))
 (let (($x1387 (and $x1386 $x1385)))
 (let (($x1388 (= c_________ left-to-center)))
 (let (($x1389 (and $x1388 $x1385)))
 (ite $x1389 $x1392 (ite $x1387 $x1392 (ite $x1384 $x1396 (ite $x1382 $x1405 (ite $x1379 $x1399 $x1405))))))))))))))))))))))))))))))))
(assert
 (let ((?x1041 (right s_________)))
 (let ((?x1179 (right s__________)))
 (let (($x1401 (= ?x1179 ?x1041)))
 (let ((?x1371 (rest ?x1041)))
 (let (($x1398 (= ?x1179 ?x1371)))
 (let (($x1375 ((_ is stack ) ?x1041)))
 (let (($x1376 (= c_________ right-to-center)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1378 (= c_________ right-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1227 (center s_________)))
 (let ((?x1368 (top ?x1227)))
 (let ((?x1370 (stack ?x1368 ?x1041)))
 (let (($x1397 (= ?x1179 ?x1370)))
 (let (($x1380 ((_ is stack ) ?x1227)))
 (let (($x1381 (= c_________ center-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let (($x1383 (= c_________ center-to-left)))
 (let (($x1384 (and $x1383 $x1380)))
 (let ((?x1007 (left s_________)))
 (let (($x1385 ((_ is stack ) ?x1007)))
 (let (($x1386 (= c_________ left-to-right)))
 (let (($x1387 (and $x1386 $x1385)))
 (let (($x1418 (ite $x1387 $x1401 (ite $x1384 $x1401 (ite $x1382 $x1397 (ite $x1379 $x1398 (ite $x1377 $x1398 $x1401)))))))
 (let ((?x1225 (top ?x1007)))
 (let ((?x1364 (stack ?x1225 ?x1041)))
 (let (($x1393 (= ?x1179 ?x1364)))
 (let (($x1388 (= c_________ left-to-center)))
 (let (($x1389 (and $x1388 $x1385)))
 (ite $x1389 $x1393 $x1418)))))))))))))))))))))))))))))))
(assert
 (let ((?x1227 (center s_________)))
 (let ((?x1365 (center s__________)))
 (let (($x1403 (= ?x1365 ?x1227)))
 (let ((?x1041 (right s_________)))
 (let ((?x1372 (top ?x1041)))
 (let ((?x1374 (stack ?x1372 ?x1227)))
 (let (($x1400 (= ?x1365 ?x1374)))
 (let (($x1375 ((_ is stack ) ?x1041)))
 (let (($x1376 (= c_________ right-to-center)))
 (let (($x1377 (and $x1376 $x1375)))
 (let (($x1378 (= c_________ right-to-left)))
 (let (($x1379 (and $x1378 $x1375)))
 (let ((?x1367 (rest ?x1227)))
 (let (($x1395 (= ?x1365 ?x1367)))
 (let (($x1380 ((_ is stack ) ?x1227)))
 (let (($x1381 (= c_________ center-to-right)))
 (let (($x1382 (and $x1381 $x1380)))
 (let (($x1383 (= c_________ center-to-left)))
 (let (($x1384 (and $x1383 $x1380)))
 (let ((?x1007 (left s_________)))
 (let ((?x1225 (top ?x1007)))
 (let ((?x1366 (stack ?x1225 ?x1227)))
 (let (($x1394 (= ?x1365 ?x1366)))
 (let (($x1385 ((_ is stack ) ?x1007)))
 (let (($x1386 (= c_________ left-to-right)))
 (let (($x1387 (and $x1386 $x1385)))
 (let (($x1417 (ite $x1387 $x1394 (ite $x1384 $x1395 (ite $x1382 $x1395 (ite $x1379 $x1403 (ite $x1377 $x1400 $x1403)))))))
 (let (($x1388 (= c_________ left-to-center)))
 (let (($x1389 (and $x1388 $x1385)))
 (ite $x1389 $x1403 $x1417)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1145 (left s__________)))
 (let ((?x1283 (left s___________)))
 (let (($x1543 (= ?x1283 ?x1145)))
 (let ((?x1179 (right s__________)))
 (let ((?x1510 (top ?x1179)))
 (let ((?x1511 (stack ?x1510 ?x1145)))
 (let (($x1537 (= ?x1283 ?x1511)))
 (let (($x1513 ((_ is stack ) ?x1179)))
 (let (($x1516 (= c__________ right-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1365 (center s__________)))
 (let (($x1518 ((_ is stack ) ?x1365)))
 (let (($x1519 (= c__________ center-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let ((?x1506 (top ?x1365)))
 (let ((?x1507 (stack ?x1506 ?x1145)))
 (let (($x1534 (= ?x1283 ?x1507)))
 (let (($x1521 (= c__________ center-to-left)))
 (let (($x1522 (and $x1521 $x1518)))
 (let ((?x1316 (rest ?x1145)))
 (let (($x1530 (= ?x1283 ?x1316)))
 (let (($x1523 ((_ is stack ) ?x1145)))
 (let (($x1524 (= c__________ left-to-right)))
 (let (($x1525 (and $x1524 $x1523)))
 (let (($x1526 (= c__________ left-to-center)))
 (let (($x1527 (and $x1526 $x1523)))
 (ite $x1527 $x1530 (ite $x1525 $x1530 (ite $x1522 $x1534 (ite $x1520 $x1543 (ite $x1517 $x1537 $x1543))))))))))))))))))))))))))))))))
(assert
 (let ((?x1179 (right s__________)))
 (let ((?x1317 (right s___________)))
 (let (($x1539 (= ?x1317 ?x1179)))
 (let ((?x1509 (rest ?x1179)))
 (let (($x1536 (= ?x1317 ?x1509)))
 (let (($x1513 ((_ is stack ) ?x1179)))
 (let (($x1514 (= c__________ right-to-center)))
 (let (($x1515 (and $x1514 $x1513)))
 (let (($x1516 (= c__________ right-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1365 (center s__________)))
 (let ((?x1506 (top ?x1365)))
 (let ((?x1508 (stack ?x1506 ?x1179)))
 (let (($x1535 (= ?x1317 ?x1508)))
 (let (($x1518 ((_ is stack ) ?x1365)))
 (let (($x1519 (= c__________ center-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let (($x1521 (= c__________ center-to-left)))
 (let (($x1522 (and $x1521 $x1518)))
 (let ((?x1145 (left s__________)))
 (let (($x1523 ((_ is stack ) ?x1145)))
 (let (($x1524 (= c__________ left-to-right)))
 (let (($x1525 (and $x1524 $x1523)))
 (let (($x1556 (ite $x1525 $x1539 (ite $x1522 $x1539 (ite $x1520 $x1535 (ite $x1517 $x1536 (ite $x1515 $x1536 $x1539)))))))
 (let ((?x1363 (top ?x1145)))
 (let ((?x1502 (stack ?x1363 ?x1179)))
 (let (($x1531 (= ?x1317 ?x1502)))
 (let (($x1526 (= c__________ left-to-center)))
 (let (($x1527 (and $x1526 $x1523)))
 (ite $x1527 $x1531 $x1556)))))))))))))))))))))))))))))))
(assert
 (let ((?x1365 (center s__________)))
 (let ((?x1503 (center s___________)))
 (let (($x1541 (= ?x1503 ?x1365)))
 (let ((?x1179 (right s__________)))
 (let ((?x1510 (top ?x1179)))
 (let ((?x1512 (stack ?x1510 ?x1365)))
 (let (($x1538 (= ?x1503 ?x1512)))
 (let (($x1513 ((_ is stack ) ?x1179)))
 (let (($x1514 (= c__________ right-to-center)))
 (let (($x1515 (and $x1514 $x1513)))
 (let (($x1516 (= c__________ right-to-left)))
 (let (($x1517 (and $x1516 $x1513)))
 (let ((?x1505 (rest ?x1365)))
 (let (($x1533 (= ?x1503 ?x1505)))
 (let (($x1518 ((_ is stack ) ?x1365)))
 (let (($x1519 (= c__________ center-to-right)))
 (let (($x1520 (and $x1519 $x1518)))
 (let (($x1521 (= c__________ center-to-left)))
 (let (($x1522 (and $x1521 $x1518)))
 (let ((?x1145 (left s__________)))
 (let ((?x1363 (top ?x1145)))
 (let ((?x1504 (stack ?x1363 ?x1365)))
 (let (($x1532 (= ?x1503 ?x1504)))
 (let (($x1523 ((_ is stack ) ?x1145)))
 (let (($x1524 (= c__________ left-to-right)))
 (let (($x1525 (and $x1524 $x1523)))
 (let (($x1555 (ite $x1525 $x1532 (ite $x1522 $x1533 (ite $x1520 $x1533 (ite $x1517 $x1541 (ite $x1515 $x1538 $x1541)))))))
 (let (($x1526 (= c__________ left-to-center)))
 (let (($x1527 (and $x1526 $x1523)))
 (ite $x1527 $x1541 $x1555)))))))))))))))))))))))))))))))
(assert
 (let ((?x1317 (right s___________)))
 (let (($x1559 (= ?x1317 empty)))
 (let ((?x70 (stack P (stack N (stack K empty)))))
 (let ((?x1503 (center s___________)))
 (let (($x1590 (= ?x1503 ?x70)))
 (let ((?x56 (stack T (stack R (stack F (stack D (stack I (stack O empty))))))))
 (let ((?x62 (stack M (stack L (stack E (stack B (stack C (stack Q ?x56))))))))
 (let ((?x67 (stack H (stack J (stack A (stack G (stack S ?x62)))))))
 (let ((?x1283 (left s___________)))
 (let (($x1591 (= ?x1283 ?x67)))
 (let (($x1593 (not (and $x1591 $x1590 $x1559))))
 (not $x1593)))))))))))))
(check-sat)
(exit)
