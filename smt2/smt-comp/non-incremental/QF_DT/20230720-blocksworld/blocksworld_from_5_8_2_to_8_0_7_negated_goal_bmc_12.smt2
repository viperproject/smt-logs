(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack G empty)))
 (let ((?x28 (stack I ?x27)))
 (let ((?x29 (stack O ?x28)))
 (let ((?x30 (stack D ?x29)))
 (let ((?x31 (stack K ?x30)))
 (let ((?x103 (left s_tmp_)))
 (= ?x103 ?x31))))))))
(assert
 (let ((?x32 (stack J empty)))
 (let ((?x33 (stack L ?x32)))
 (let ((?x34 (stack N ?x33)))
 (let ((?x35 (stack E ?x34)))
 (let ((?x36 (stack B ?x35)))
 (let ((?x37 (stack A ?x36)))
 (let ((?x38 (stack F ?x37)))
 (let ((?x39 (stack H ?x38)))
 (let ((?x106 (center s_tmp__)))
 (= ?x106 ?x39)))))))))))
(assert
 (let ((?x40 (stack C empty)))
 (let ((?x41 (stack M ?x40)))
 (let ((?x109 (right s_tmp___)))
 (= ?x109 ?x41)))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x136 (left s_tmp__)))
 (= (left s_tmp___) ?x136)))
(assert
 (let ((?x106 (center s_tmp__)))
 (= (center s_tmp___) ?x106)))
(assert
 (let ((?x140 (center s_tmp_)))
 (= ?x140 (center s_tmp))))
(assert
 (let ((?x143 (right s_tmp_)))
 (= ?x143 (right s_tmp))))
(assert
 (let ((?x103 (left s_tmp_)))
 (let ((?x136 (left s_tmp__)))
 (= ?x136 ?x103))))
(assert
 (let ((?x143 (right s_tmp_)))
 (let ((?x147 (right s_tmp__)))
 (= ?x147 ?x143))))
(assert
 (= c__ c!1))
(assert
 (let ((?x80 (left s_)))
 (let ((?x251 (left s__)))
 (let (($x281 (= ?x251 ?x80)))
 (let ((?x83 (right s_)))
 (let (($x254 ((_ is stack ) ?x83)))
 (let (($x245 (= c_ right-to-left)))
 (let (($x255 (and $x245 $x254)))
 (let ((?x85 (center s_)))
 (let (($x256 ((_ is stack ) ?x85)))
 (let (($x257 (= c_ center-to-right)))
 (let (($x258 (and $x257 $x256)))
 (let (($x259 (= c_ center-to-left)))
 (let (($x260 (and $x259 $x256)))
 (let (($x290 (ite $x260 (= ?x251 (stack (top ?x85) ?x80)) (ite $x258 $x281 (ite $x255 (= ?x251 (stack (top ?x83) ?x80)) $x281)))))
 (let (($x268 (= ?x251 (rest ?x80))))
 (let (($x261 ((_ is stack ) ?x80)))
 (let (($x262 (= c_ left-to-right)))
 (let (($x263 (and $x262 $x261)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x261)))
 (ite $x265 $x268 (ite $x263 $x268 $x290)))))))))))))))))))))))
(assert
 (let ((?x83 (right s_)))
 (let ((?x235 (right s__)))
 (let (($x277 (= ?x235 ?x83)))
 (let (($x274 (= ?x235 (rest ?x83))))
 (let (($x254 ((_ is stack ) ?x83)))
 (let (($x243 (= c_ right-to-center)))
 (let (($x244 (and $x243 $x254)))
 (let (($x245 (= c_ right-to-left)))
 (let (($x255 (and $x245 $x254)))
 (let ((?x85 (center s_)))
 (let (($x256 ((_ is stack ) ?x85)))
 (let (($x257 (= c_ center-to-right)))
 (let (($x258 (and $x257 $x256)))
 (let (($x287 (ite $x258 (= ?x235 (stack (top ?x85) ?x83)) (ite $x255 $x274 (ite $x244 $x274 $x277)))))
 (let (($x259 (= c_ center-to-left)))
 (let (($x260 (and $x259 $x256)))
 (let ((?x80 (left s_)))
 (let (($x261 ((_ is stack ) ?x80)))
 (let (($x262 (= c_ left-to-right)))
 (let (($x263 (and $x262 $x261)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x261)))
 (ite $x265 (= ?x235 (stack (top ?x80) ?x83)) (ite $x263 $x277 (ite $x260 $x277 $x287))))))))))))))))))))))))))
(assert
 (let ((?x85 (center s_)))
 (let ((?x241 (center s__)))
 (let (($x279 (= ?x241 ?x85)))
 (let ((?x83 (right s_)))
 (let (($x254 ((_ is stack ) ?x83)))
 (let (($x243 (= c_ right-to-center)))
 (let (($x244 (and $x243 $x254)))
 (let (($x245 (= c_ right-to-left)))
 (let (($x255 (and $x245 $x254)))
 (let (($x271 (= ?x241 (rest ?x85))))
 (let (($x256 ((_ is stack ) ?x85)))
 (let (($x257 (= c_ center-to-right)))
 (let (($x258 (and $x257 $x256)))
 (let (($x286 (ite $x258 $x271 (ite $x255 $x279 (ite $x244 (= ?x241 (stack (top ?x83) ?x85)) $x279)))))
 (let (($x259 (= c_ center-to-left)))
 (let (($x260 (and $x259 $x256)))
 (let ((?x80 (left s_)))
 (let (($x261 ((_ is stack ) ?x80)))
 (let (($x262 (= c_ left-to-right)))
 (let (($x263 (and $x262 $x261)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x261)))
 (ite $x265 $x279 (ite $x263 (= ?x241 (stack (top ?x80) ?x85)) (ite $x260 $x271 $x286))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x251 (left s__)))
 (let ((?x150 (left s___)))
 (let (($x410 (= ?x150 ?x251)))
 (let ((?x235 (right s__)))
 (let ((?x377 (top ?x235)))
 (let ((?x378 (stack ?x377 ?x251)))
 (let (($x404 (= ?x150 ?x378)))
 (let (($x380 ((_ is stack ) ?x235)))
 (let (($x383 (= c__ right-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x241 (center s__)))
 (let (($x385 ((_ is stack ) ?x241)))
 (let (($x386 (= c__ center-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let ((?x373 (top ?x241)))
 (let ((?x374 (stack ?x373 ?x251)))
 (let (($x401 (= ?x150 ?x374)))
 (let (($x388 (= c__ center-to-left)))
 (let (($x389 (and $x388 $x385)))
 (let ((?x152 (rest ?x251)))
 (let (($x397 (= ?x150 ?x152)))
 (let (($x390 ((_ is stack ) ?x251)))
 (let (($x391 (= c__ left-to-right)))
 (let (($x392 (and $x391 $x390)))
 (let (($x393 (= c__ left-to-center)))
 (let (($x394 (and $x393 $x390)))
 (ite $x394 $x397 (ite $x392 $x397 (ite $x389 $x401 (ite $x387 $x410 (ite $x384 $x404 $x410))))))))))))))))))))))))))))))))
(assert
 (let ((?x235 (right s__)))
 (let ((?x153 (right s___)))
 (let (($x406 (= ?x153 ?x235)))
 (let ((?x376 (rest ?x235)))
 (let (($x403 (= ?x153 ?x376)))
 (let (($x380 ((_ is stack ) ?x235)))
 (let (($x381 (= c__ right-to-center)))
 (let (($x382 (and $x381 $x380)))
 (let (($x383 (= c__ right-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x241 (center s__)))
 (let ((?x373 (top ?x241)))
 (let ((?x375 (stack ?x373 ?x235)))
 (let (($x402 (= ?x153 ?x375)))
 (let (($x385 ((_ is stack ) ?x241)))
 (let (($x386 (= c__ center-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let (($x388 (= c__ center-to-left)))
 (let (($x389 (and $x388 $x385)))
 (let ((?x251 (left s__)))
 (let (($x390 ((_ is stack ) ?x251)))
 (let (($x391 (= c__ left-to-right)))
 (let (($x392 (and $x391 $x390)))
 (let (($x423 (ite $x392 $x406 (ite $x389 $x406 (ite $x387 $x402 (ite $x384 $x403 (ite $x382 $x403 $x406)))))))
 (let ((?x233 (top ?x251)))
 (let ((?x369 (stack ?x233 ?x235)))
 (let (($x398 (= ?x153 ?x369)))
 (let (($x393 (= c__ left-to-center)))
 (let (($x394 (and $x393 $x390)))
 (ite $x394 $x398 $x423)))))))))))))))))))))))))))))))
(assert
 (let ((?x241 (center s__)))
 (let ((?x370 (center s___)))
 (let (($x408 (= ?x370 ?x241)))
 (let ((?x235 (right s__)))
 (let ((?x377 (top ?x235)))
 (let ((?x379 (stack ?x377 ?x241)))
 (let (($x405 (= ?x370 ?x379)))
 (let (($x380 ((_ is stack ) ?x235)))
 (let (($x381 (= c__ right-to-center)))
 (let (($x382 (and $x381 $x380)))
 (let (($x383 (= c__ right-to-left)))
 (let (($x384 (and $x383 $x380)))
 (let ((?x372 (rest ?x241)))
 (let (($x400 (= ?x370 ?x372)))
 (let (($x385 ((_ is stack ) ?x241)))
 (let (($x386 (= c__ center-to-right)))
 (let (($x387 (and $x386 $x385)))
 (let (($x388 (= c__ center-to-left)))
 (let (($x389 (and $x388 $x385)))
 (let ((?x251 (left s__)))
 (let ((?x233 (top ?x251)))
 (let ((?x371 (stack ?x233 ?x241)))
 (let (($x399 (= ?x370 ?x371)))
 (let (($x390 ((_ is stack ) ?x251)))
 (let (($x391 (= c__ left-to-right)))
 (let (($x392 (and $x391 $x390)))
 (let (($x422 (ite $x392 $x399 (ite $x389 $x400 (ite $x387 $x400 (ite $x384 $x408 (ite $x382 $x405 $x408)))))))
 (let (($x393 (= c__ left-to-center)))
 (let (($x394 (and $x393 $x390)))
 (ite $x394 $x408 $x422)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x150 (left s___)))
 (let ((?x297 (left s____)))
 (let (($x548 (= ?x297 ?x150)))
 (let ((?x153 (right s___)))
 (let ((?x515 (top ?x153)))
 (let ((?x516 (stack ?x515 ?x150)))
 (let (($x542 (= ?x297 ?x516)))
 (let (($x518 ((_ is stack ) ?x153)))
 (let (($x521 (= c___ right-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x370 (center s___)))
 (let (($x523 ((_ is stack ) ?x370)))
 (let (($x524 (= c___ center-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let ((?x511 (top ?x370)))
 (let ((?x512 (stack ?x511 ?x150)))
 (let (($x539 (= ?x297 ?x512)))
 (let (($x526 (= c___ center-to-left)))
 (let (($x527 (and $x526 $x523)))
 (let ((?x341 (rest ?x150)))
 (let (($x535 (= ?x297 ?x341)))
 (let (($x528 ((_ is stack ) ?x150)))
 (let (($x529 (= c___ left-to-right)))
 (let (($x530 (and $x529 $x528)))
 (let (($x531 (= c___ left-to-center)))
 (let (($x532 (and $x531 $x528)))
 (ite $x532 $x535 (ite $x530 $x535 (ite $x527 $x539 (ite $x525 $x548 (ite $x522 $x542 $x548))))))))))))))))))))))))))))))))
(assert
 (let ((?x153 (right s___)))
 (let ((?x342 (right s____)))
 (let (($x544 (= ?x342 ?x153)))
 (let ((?x514 (rest ?x153)))
 (let (($x541 (= ?x342 ?x514)))
 (let (($x518 ((_ is stack ) ?x153)))
 (let (($x519 (= c___ right-to-center)))
 (let (($x520 (and $x519 $x518)))
 (let (($x521 (= c___ right-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x370 (center s___)))
 (let ((?x511 (top ?x370)))
 (let ((?x513 (stack ?x511 ?x153)))
 (let (($x540 (= ?x342 ?x513)))
 (let (($x523 ((_ is stack ) ?x370)))
 (let (($x524 (= c___ center-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let (($x526 (= c___ center-to-left)))
 (let (($x527 (and $x526 $x523)))
 (let ((?x150 (left s___)))
 (let (($x528 ((_ is stack ) ?x150)))
 (let (($x529 (= c___ left-to-right)))
 (let (($x530 (and $x529 $x528)))
 (let (($x561 (ite $x530 $x544 (ite $x527 $x544 (ite $x525 $x540 (ite $x522 $x541 (ite $x520 $x541 $x544)))))))
 (let ((?x368 (top ?x150)))
 (let ((?x507 (stack ?x368 ?x153)))
 (let (($x536 (= ?x342 ?x507)))
 (let (($x531 (= c___ left-to-center)))
 (let (($x532 (and $x531 $x528)))
 (ite $x532 $x536 $x561)))))))))))))))))))))))))))))))
(assert
 (let ((?x370 (center s___)))
 (let ((?x508 (center s____)))
 (let (($x546 (= ?x508 ?x370)))
 (let ((?x153 (right s___)))
 (let ((?x515 (top ?x153)))
 (let ((?x517 (stack ?x515 ?x370)))
 (let (($x543 (= ?x508 ?x517)))
 (let (($x518 ((_ is stack ) ?x153)))
 (let (($x519 (= c___ right-to-center)))
 (let (($x520 (and $x519 $x518)))
 (let (($x521 (= c___ right-to-left)))
 (let (($x522 (and $x521 $x518)))
 (let ((?x510 (rest ?x370)))
 (let (($x538 (= ?x508 ?x510)))
 (let (($x523 ((_ is stack ) ?x370)))
 (let (($x524 (= c___ center-to-right)))
 (let (($x525 (and $x524 $x523)))
 (let (($x526 (= c___ center-to-left)))
 (let (($x527 (and $x526 $x523)))
 (let ((?x150 (left s___)))
 (let ((?x368 (top ?x150)))
 (let ((?x509 (stack ?x368 ?x370)))
 (let (($x537 (= ?x508 ?x509)))
 (let (($x528 ((_ is stack ) ?x150)))
 (let (($x529 (= c___ left-to-right)))
 (let (($x530 (and $x529 $x528)))
 (let (($x560 (ite $x530 $x537 (ite $x527 $x538 (ite $x525 $x538 (ite $x522 $x546 (ite $x520 $x543 $x546)))))))
 (let (($x531 (= c___ left-to-center)))
 (let (($x532 (and $x531 $x528)))
 (ite $x532 $x546 $x560)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x297 (left s____)))
 (let ((?x426 (left s_____)))
 (let (($x686 (= ?x426 ?x297)))
 (let ((?x342 (right s____)))
 (let ((?x653 (top ?x342)))
 (let ((?x654 (stack ?x653 ?x297)))
 (let (($x680 (= ?x426 ?x654)))
 (let (($x656 ((_ is stack ) ?x342)))
 (let (($x659 (= c____ right-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x508 (center s____)))
 (let (($x661 ((_ is stack ) ?x508)))
 (let (($x662 (= c____ center-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let ((?x649 (top ?x508)))
 (let ((?x650 (stack ?x649 ?x297)))
 (let (($x677 (= ?x426 ?x650)))
 (let (($x664 (= c____ center-to-left)))
 (let (($x665 (and $x664 $x661)))
 (let ((?x459 (rest ?x297)))
 (let (($x673 (= ?x426 ?x459)))
 (let (($x666 ((_ is stack ) ?x297)))
 (let (($x667 (= c____ left-to-right)))
 (let (($x668 (and $x667 $x666)))
 (let (($x669 (= c____ left-to-center)))
 (let (($x670 (and $x669 $x666)))
 (ite $x670 $x673 (ite $x668 $x673 (ite $x665 $x677 (ite $x663 $x686 (ite $x660 $x680 $x686))))))))))))))))))))))))))))))))
(assert
 (let ((?x342 (right s____)))
 (let ((?x460 (right s_____)))
 (let (($x682 (= ?x460 ?x342)))
 (let ((?x652 (rest ?x342)))
 (let (($x679 (= ?x460 ?x652)))
 (let (($x656 ((_ is stack ) ?x342)))
 (let (($x657 (= c____ right-to-center)))
 (let (($x658 (and $x657 $x656)))
 (let (($x659 (= c____ right-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x508 (center s____)))
 (let ((?x649 (top ?x508)))
 (let ((?x651 (stack ?x649 ?x342)))
 (let (($x678 (= ?x460 ?x651)))
 (let (($x661 ((_ is stack ) ?x508)))
 (let (($x662 (= c____ center-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let (($x664 (= c____ center-to-left)))
 (let (($x665 (and $x664 $x661)))
 (let ((?x297 (left s____)))
 (let (($x666 ((_ is stack ) ?x297)))
 (let (($x667 (= c____ left-to-right)))
 (let (($x668 (and $x667 $x666)))
 (let (($x699 (ite $x668 $x682 (ite $x665 $x682 (ite $x663 $x678 (ite $x660 $x679 (ite $x658 $x679 $x682)))))))
 (let ((?x506 (top ?x297)))
 (let ((?x645 (stack ?x506 ?x342)))
 (let (($x674 (= ?x460 ?x645)))
 (let (($x669 (= c____ left-to-center)))
 (let (($x670 (and $x669 $x666)))
 (ite $x670 $x674 $x699)))))))))))))))))))))))))))))))
(assert
 (let ((?x508 (center s____)))
 (let ((?x646 (center s_____)))
 (let (($x684 (= ?x646 ?x508)))
 (let ((?x342 (right s____)))
 (let ((?x653 (top ?x342)))
 (let ((?x655 (stack ?x653 ?x508)))
 (let (($x681 (= ?x646 ?x655)))
 (let (($x656 ((_ is stack ) ?x342)))
 (let (($x657 (= c____ right-to-center)))
 (let (($x658 (and $x657 $x656)))
 (let (($x659 (= c____ right-to-left)))
 (let (($x660 (and $x659 $x656)))
 (let ((?x648 (rest ?x508)))
 (let (($x676 (= ?x646 ?x648)))
 (let (($x661 ((_ is stack ) ?x508)))
 (let (($x662 (= c____ center-to-right)))
 (let (($x663 (and $x662 $x661)))
 (let (($x664 (= c____ center-to-left)))
 (let (($x665 (and $x664 $x661)))
 (let ((?x297 (left s____)))
 (let ((?x506 (top ?x297)))
 (let ((?x647 (stack ?x506 ?x508)))
 (let (($x675 (= ?x646 ?x647)))
 (let (($x666 ((_ is stack ) ?x297)))
 (let (($x667 (= c____ left-to-right)))
 (let (($x668 (and $x667 $x666)))
 (let (($x698 (ite $x668 $x675 (ite $x665 $x676 (ite $x663 $x676 (ite $x660 $x684 (ite $x658 $x681 $x684)))))))
 (let (($x669 (= c____ left-to-center)))
 (let (($x670 (and $x669 $x666)))
 (ite $x670 $x684 $x698)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x426 (left s_____)))
 (let ((?x564 (left s______)))
 (let (($x824 (= ?x564 ?x426)))
 (let ((?x460 (right s_____)))
 (let ((?x791 (top ?x460)))
 (let ((?x792 (stack ?x791 ?x426)))
 (let (($x818 (= ?x564 ?x792)))
 (let (($x794 ((_ is stack ) ?x460)))
 (let (($x797 (= c_____ right-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x646 (center s_____)))
 (let (($x799 ((_ is stack ) ?x646)))
 (let (($x800 (= c_____ center-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let ((?x787 (top ?x646)))
 (let ((?x788 (stack ?x787 ?x426)))
 (let (($x815 (= ?x564 ?x788)))
 (let (($x802 (= c_____ center-to-left)))
 (let (($x803 (and $x802 $x799)))
 (let ((?x597 (rest ?x426)))
 (let (($x811 (= ?x564 ?x597)))
 (let (($x804 ((_ is stack ) ?x426)))
 (let (($x805 (= c_____ left-to-right)))
 (let (($x806 (and $x805 $x804)))
 (let (($x807 (= c_____ left-to-center)))
 (let (($x808 (and $x807 $x804)))
 (ite $x808 $x811 (ite $x806 $x811 (ite $x803 $x815 (ite $x801 $x824 (ite $x798 $x818 $x824))))))))))))))))))))))))))))))))
(assert
 (let ((?x460 (right s_____)))
 (let ((?x598 (right s______)))
 (let (($x820 (= ?x598 ?x460)))
 (let ((?x790 (rest ?x460)))
 (let (($x817 (= ?x598 ?x790)))
 (let (($x794 ((_ is stack ) ?x460)))
 (let (($x795 (= c_____ right-to-center)))
 (let (($x796 (and $x795 $x794)))
 (let (($x797 (= c_____ right-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x646 (center s_____)))
 (let ((?x787 (top ?x646)))
 (let ((?x789 (stack ?x787 ?x460)))
 (let (($x816 (= ?x598 ?x789)))
 (let (($x799 ((_ is stack ) ?x646)))
 (let (($x800 (= c_____ center-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let (($x802 (= c_____ center-to-left)))
 (let (($x803 (and $x802 $x799)))
 (let ((?x426 (left s_____)))
 (let (($x804 ((_ is stack ) ?x426)))
 (let (($x805 (= c_____ left-to-right)))
 (let (($x806 (and $x805 $x804)))
 (let (($x837 (ite $x806 $x820 (ite $x803 $x820 (ite $x801 $x816 (ite $x798 $x817 (ite $x796 $x817 $x820)))))))
 (let ((?x644 (top ?x426)))
 (let ((?x783 (stack ?x644 ?x460)))
 (let (($x812 (= ?x598 ?x783)))
 (let (($x807 (= c_____ left-to-center)))
 (let (($x808 (and $x807 $x804)))
 (ite $x808 $x812 $x837)))))))))))))))))))))))))))))))
(assert
 (let ((?x646 (center s_____)))
 (let ((?x784 (center s______)))
 (let (($x822 (= ?x784 ?x646)))
 (let ((?x460 (right s_____)))
 (let ((?x791 (top ?x460)))
 (let ((?x793 (stack ?x791 ?x646)))
 (let (($x819 (= ?x784 ?x793)))
 (let (($x794 ((_ is stack ) ?x460)))
 (let (($x795 (= c_____ right-to-center)))
 (let (($x796 (and $x795 $x794)))
 (let (($x797 (= c_____ right-to-left)))
 (let (($x798 (and $x797 $x794)))
 (let ((?x786 (rest ?x646)))
 (let (($x814 (= ?x784 ?x786)))
 (let (($x799 ((_ is stack ) ?x646)))
 (let (($x800 (= c_____ center-to-right)))
 (let (($x801 (and $x800 $x799)))
 (let (($x802 (= c_____ center-to-left)))
 (let (($x803 (and $x802 $x799)))
 (let ((?x426 (left s_____)))
 (let ((?x644 (top ?x426)))
 (let ((?x785 (stack ?x644 ?x646)))
 (let (($x813 (= ?x784 ?x785)))
 (let (($x804 ((_ is stack ) ?x426)))
 (let (($x805 (= c_____ left-to-right)))
 (let (($x806 (and $x805 $x804)))
 (let (($x836 (ite $x806 $x813 (ite $x803 $x814 (ite $x801 $x814 (ite $x798 $x822 (ite $x796 $x819 $x822)))))))
 (let (($x807 (= c_____ left-to-center)))
 (let (($x808 (and $x807 $x804)))
 (ite $x808 $x822 $x836)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x564 (left s______)))
 (let ((?x702 (left s_______)))
 (let (($x962 (= ?x702 ?x564)))
 (let ((?x598 (right s______)))
 (let ((?x929 (top ?x598)))
 (let ((?x930 (stack ?x929 ?x564)))
 (let (($x956 (= ?x702 ?x930)))
 (let (($x932 ((_ is stack ) ?x598)))
 (let (($x935 (= c______ right-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x784 (center s______)))
 (let (($x937 ((_ is stack ) ?x784)))
 (let (($x938 (= c______ center-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let ((?x925 (top ?x784)))
 (let ((?x926 (stack ?x925 ?x564)))
 (let (($x953 (= ?x702 ?x926)))
 (let (($x940 (= c______ center-to-left)))
 (let (($x941 (and $x940 $x937)))
 (let ((?x735 (rest ?x564)))
 (let (($x949 (= ?x702 ?x735)))
 (let (($x942 ((_ is stack ) ?x564)))
 (let (($x943 (= c______ left-to-right)))
 (let (($x944 (and $x943 $x942)))
 (let (($x945 (= c______ left-to-center)))
 (let (($x946 (and $x945 $x942)))
 (ite $x946 $x949 (ite $x944 $x949 (ite $x941 $x953 (ite $x939 $x962 (ite $x936 $x956 $x962))))))))))))))))))))))))))))))))
(assert
 (let ((?x598 (right s______)))
 (let ((?x736 (right s_______)))
 (let (($x958 (= ?x736 ?x598)))
 (let ((?x928 (rest ?x598)))
 (let (($x955 (= ?x736 ?x928)))
 (let (($x932 ((_ is stack ) ?x598)))
 (let (($x933 (= c______ right-to-center)))
 (let (($x934 (and $x933 $x932)))
 (let (($x935 (= c______ right-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x784 (center s______)))
 (let ((?x925 (top ?x784)))
 (let ((?x927 (stack ?x925 ?x598)))
 (let (($x954 (= ?x736 ?x927)))
 (let (($x937 ((_ is stack ) ?x784)))
 (let (($x938 (= c______ center-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let (($x940 (= c______ center-to-left)))
 (let (($x941 (and $x940 $x937)))
 (let ((?x564 (left s______)))
 (let (($x942 ((_ is stack ) ?x564)))
 (let (($x943 (= c______ left-to-right)))
 (let (($x944 (and $x943 $x942)))
 (let (($x975 (ite $x944 $x958 (ite $x941 $x958 (ite $x939 $x954 (ite $x936 $x955 (ite $x934 $x955 $x958)))))))
 (let ((?x782 (top ?x564)))
 (let ((?x921 (stack ?x782 ?x598)))
 (let (($x950 (= ?x736 ?x921)))
 (let (($x945 (= c______ left-to-center)))
 (let (($x946 (and $x945 $x942)))
 (ite $x946 $x950 $x975)))))))))))))))))))))))))))))))
(assert
 (let ((?x784 (center s______)))
 (let ((?x922 (center s_______)))
 (let (($x960 (= ?x922 ?x784)))
 (let ((?x598 (right s______)))
 (let ((?x929 (top ?x598)))
 (let ((?x931 (stack ?x929 ?x784)))
 (let (($x957 (= ?x922 ?x931)))
 (let (($x932 ((_ is stack ) ?x598)))
 (let (($x933 (= c______ right-to-center)))
 (let (($x934 (and $x933 $x932)))
 (let (($x935 (= c______ right-to-left)))
 (let (($x936 (and $x935 $x932)))
 (let ((?x924 (rest ?x784)))
 (let (($x952 (= ?x922 ?x924)))
 (let (($x937 ((_ is stack ) ?x784)))
 (let (($x938 (= c______ center-to-right)))
 (let (($x939 (and $x938 $x937)))
 (let (($x940 (= c______ center-to-left)))
 (let (($x941 (and $x940 $x937)))
 (let ((?x564 (left s______)))
 (let ((?x782 (top ?x564)))
 (let ((?x923 (stack ?x782 ?x784)))
 (let (($x951 (= ?x922 ?x923)))
 (let (($x942 ((_ is stack ) ?x564)))
 (let (($x943 (= c______ left-to-right)))
 (let (($x944 (and $x943 $x942)))
 (let (($x974 (ite $x944 $x951 (ite $x941 $x952 (ite $x939 $x952 (ite $x936 $x960 (ite $x934 $x957 $x960)))))))
 (let (($x945 (= c______ left-to-center)))
 (let (($x946 (and $x945 $x942)))
 (ite $x946 $x960 $x974)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x702 (left s_______)))
 (let ((?x840 (left s________)))
 (let (($x1100 (= ?x840 ?x702)))
 (let ((?x736 (right s_______)))
 (let ((?x1067 (top ?x736)))
 (let ((?x1068 (stack ?x1067 ?x702)))
 (let (($x1094 (= ?x840 ?x1068)))
 (let (($x1070 ((_ is stack ) ?x736)))
 (let (($x1073 (= c_______ right-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x922 (center s_______)))
 (let (($x1075 ((_ is stack ) ?x922)))
 (let (($x1076 (= c_______ center-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let ((?x1063 (top ?x922)))
 (let ((?x1064 (stack ?x1063 ?x702)))
 (let (($x1091 (= ?x840 ?x1064)))
 (let (($x1078 (= c_______ center-to-left)))
 (let (($x1079 (and $x1078 $x1075)))
 (let ((?x873 (rest ?x702)))
 (let (($x1087 (= ?x840 ?x873)))
 (let (($x1080 ((_ is stack ) ?x702)))
 (let (($x1081 (= c_______ left-to-right)))
 (let (($x1082 (and $x1081 $x1080)))
 (let (($x1083 (= c_______ left-to-center)))
 (let (($x1084 (and $x1083 $x1080)))
 (ite $x1084 $x1087 (ite $x1082 $x1087 (ite $x1079 $x1091 (ite $x1077 $x1100 (ite $x1074 $x1094 $x1100))))))))))))))))))))))))))))))))
(assert
 (let ((?x736 (right s_______)))
 (let ((?x874 (right s________)))
 (let (($x1096 (= ?x874 ?x736)))
 (let ((?x1066 (rest ?x736)))
 (let (($x1093 (= ?x874 ?x1066)))
 (let (($x1070 ((_ is stack ) ?x736)))
 (let (($x1071 (= c_______ right-to-center)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1073 (= c_______ right-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x922 (center s_______)))
 (let ((?x1063 (top ?x922)))
 (let ((?x1065 (stack ?x1063 ?x736)))
 (let (($x1092 (= ?x874 ?x1065)))
 (let (($x1075 ((_ is stack ) ?x922)))
 (let (($x1076 (= c_______ center-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let (($x1078 (= c_______ center-to-left)))
 (let (($x1079 (and $x1078 $x1075)))
 (let ((?x702 (left s_______)))
 (let (($x1080 ((_ is stack ) ?x702)))
 (let (($x1081 (= c_______ left-to-right)))
 (let (($x1082 (and $x1081 $x1080)))
 (let (($x1113 (ite $x1082 $x1096 (ite $x1079 $x1096 (ite $x1077 $x1092 (ite $x1074 $x1093 (ite $x1072 $x1093 $x1096)))))))
 (let ((?x920 (top ?x702)))
 (let ((?x1059 (stack ?x920 ?x736)))
 (let (($x1088 (= ?x874 ?x1059)))
 (let (($x1083 (= c_______ left-to-center)))
 (let (($x1084 (and $x1083 $x1080)))
 (ite $x1084 $x1088 $x1113)))))))))))))))))))))))))))))))
(assert
 (let ((?x922 (center s_______)))
 (let ((?x1060 (center s________)))
 (let (($x1098 (= ?x1060 ?x922)))
 (let ((?x736 (right s_______)))
 (let ((?x1067 (top ?x736)))
 (let ((?x1069 (stack ?x1067 ?x922)))
 (let (($x1095 (= ?x1060 ?x1069)))
 (let (($x1070 ((_ is stack ) ?x736)))
 (let (($x1071 (= c_______ right-to-center)))
 (let (($x1072 (and $x1071 $x1070)))
 (let (($x1073 (= c_______ right-to-left)))
 (let (($x1074 (and $x1073 $x1070)))
 (let ((?x1062 (rest ?x922)))
 (let (($x1090 (= ?x1060 ?x1062)))
 (let (($x1075 ((_ is stack ) ?x922)))
 (let (($x1076 (= c_______ center-to-right)))
 (let (($x1077 (and $x1076 $x1075)))
 (let (($x1078 (= c_______ center-to-left)))
 (let (($x1079 (and $x1078 $x1075)))
 (let ((?x702 (left s_______)))
 (let ((?x920 (top ?x702)))
 (let ((?x1061 (stack ?x920 ?x922)))
 (let (($x1089 (= ?x1060 ?x1061)))
 (let (($x1080 ((_ is stack ) ?x702)))
 (let (($x1081 (= c_______ left-to-right)))
 (let (($x1082 (and $x1081 $x1080)))
 (let (($x1112 (ite $x1082 $x1089 (ite $x1079 $x1090 (ite $x1077 $x1090 (ite $x1074 $x1098 (ite $x1072 $x1095 $x1098)))))))
 (let (($x1083 (= c_______ left-to-center)))
 (let (($x1084 (and $x1083 $x1080)))
 (ite $x1084 $x1098 $x1112)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x840 (left s________)))
 (let ((?x978 (left s_________)))
 (let (($x1238 (= ?x978 ?x840)))
 (let ((?x874 (right s________)))
 (let ((?x1205 (top ?x874)))
 (let ((?x1206 (stack ?x1205 ?x840)))
 (let (($x1232 (= ?x978 ?x1206)))
 (let (($x1208 ((_ is stack ) ?x874)))
 (let (($x1211 (= c________ right-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x1060 (center s________)))
 (let (($x1213 ((_ is stack ) ?x1060)))
 (let (($x1214 (= c________ center-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let ((?x1201 (top ?x1060)))
 (let ((?x1202 (stack ?x1201 ?x840)))
 (let (($x1229 (= ?x978 ?x1202)))
 (let (($x1216 (= c________ center-to-left)))
 (let (($x1217 (and $x1216 $x1213)))
 (let ((?x1011 (rest ?x840)))
 (let (($x1225 (= ?x978 ?x1011)))
 (let (($x1218 ((_ is stack ) ?x840)))
 (let (($x1219 (= c________ left-to-right)))
 (let (($x1220 (and $x1219 $x1218)))
 (let (($x1221 (= c________ left-to-center)))
 (let (($x1222 (and $x1221 $x1218)))
 (ite $x1222 $x1225 (ite $x1220 $x1225 (ite $x1217 $x1229 (ite $x1215 $x1238 (ite $x1212 $x1232 $x1238))))))))))))))))))))))))))))))))
(assert
 (let ((?x874 (right s________)))
 (let ((?x1012 (right s_________)))
 (let (($x1234 (= ?x1012 ?x874)))
 (let ((?x1204 (rest ?x874)))
 (let (($x1231 (= ?x1012 ?x1204)))
 (let (($x1208 ((_ is stack ) ?x874)))
 (let (($x1209 (= c________ right-to-center)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1211 (= c________ right-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x1060 (center s________)))
 (let ((?x1201 (top ?x1060)))
 (let ((?x1203 (stack ?x1201 ?x874)))
 (let (($x1230 (= ?x1012 ?x1203)))
 (let (($x1213 ((_ is stack ) ?x1060)))
 (let (($x1214 (= c________ center-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let (($x1216 (= c________ center-to-left)))
 (let (($x1217 (and $x1216 $x1213)))
 (let ((?x840 (left s________)))
 (let (($x1218 ((_ is stack ) ?x840)))
 (let (($x1219 (= c________ left-to-right)))
 (let (($x1220 (and $x1219 $x1218)))
 (let (($x1251 (ite $x1220 $x1234 (ite $x1217 $x1234 (ite $x1215 $x1230 (ite $x1212 $x1231 (ite $x1210 $x1231 $x1234)))))))
 (let ((?x1058 (top ?x840)))
 (let ((?x1197 (stack ?x1058 ?x874)))
 (let (($x1226 (= ?x1012 ?x1197)))
 (let (($x1221 (= c________ left-to-center)))
 (let (($x1222 (and $x1221 $x1218)))
 (ite $x1222 $x1226 $x1251)))))))))))))))))))))))))))))))
(assert
 (let ((?x1060 (center s________)))
 (let ((?x1198 (center s_________)))
 (let (($x1236 (= ?x1198 ?x1060)))
 (let ((?x874 (right s________)))
 (let ((?x1205 (top ?x874)))
 (let ((?x1207 (stack ?x1205 ?x1060)))
 (let (($x1233 (= ?x1198 ?x1207)))
 (let (($x1208 ((_ is stack ) ?x874)))
 (let (($x1209 (= c________ right-to-center)))
 (let (($x1210 (and $x1209 $x1208)))
 (let (($x1211 (= c________ right-to-left)))
 (let (($x1212 (and $x1211 $x1208)))
 (let ((?x1200 (rest ?x1060)))
 (let (($x1228 (= ?x1198 ?x1200)))
 (let (($x1213 ((_ is stack ) ?x1060)))
 (let (($x1214 (= c________ center-to-right)))
 (let (($x1215 (and $x1214 $x1213)))
 (let (($x1216 (= c________ center-to-left)))
 (let (($x1217 (and $x1216 $x1213)))
 (let ((?x840 (left s________)))
 (let ((?x1058 (top ?x840)))
 (let ((?x1199 (stack ?x1058 ?x1060)))
 (let (($x1227 (= ?x1198 ?x1199)))
 (let (($x1218 ((_ is stack ) ?x840)))
 (let (($x1219 (= c________ left-to-right)))
 (let (($x1220 (and $x1219 $x1218)))
 (let (($x1250 (ite $x1220 $x1227 (ite $x1217 $x1228 (ite $x1215 $x1228 (ite $x1212 $x1236 (ite $x1210 $x1233 $x1236)))))))
 (let (($x1221 (= c________ left-to-center)))
 (let (($x1222 (and $x1221 $x1218)))
 (ite $x1222 $x1236 $x1250)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x978 (left s_________)))
 (let ((?x1116 (left s__________)))
 (let (($x1376 (= ?x1116 ?x978)))
 (let ((?x1012 (right s_________)))
 (let ((?x1343 (top ?x1012)))
 (let ((?x1344 (stack ?x1343 ?x978)))
 (let (($x1370 (= ?x1116 ?x1344)))
 (let (($x1346 ((_ is stack ) ?x1012)))
 (let (($x1349 (= c_________ right-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x1198 (center s_________)))
 (let (($x1351 ((_ is stack ) ?x1198)))
 (let (($x1352 (= c_________ center-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let ((?x1339 (top ?x1198)))
 (let ((?x1340 (stack ?x1339 ?x978)))
 (let (($x1367 (= ?x1116 ?x1340)))
 (let (($x1354 (= c_________ center-to-left)))
 (let (($x1355 (and $x1354 $x1351)))
 (let ((?x1149 (rest ?x978)))
 (let (($x1363 (= ?x1116 ?x1149)))
 (let (($x1356 ((_ is stack ) ?x978)))
 (let (($x1357 (= c_________ left-to-right)))
 (let (($x1358 (and $x1357 $x1356)))
 (let (($x1359 (= c_________ left-to-center)))
 (let (($x1360 (and $x1359 $x1356)))
 (ite $x1360 $x1363 (ite $x1358 $x1363 (ite $x1355 $x1367 (ite $x1353 $x1376 (ite $x1350 $x1370 $x1376))))))))))))))))))))))))))))))))
(assert
 (let ((?x1012 (right s_________)))
 (let ((?x1150 (right s__________)))
 (let (($x1372 (= ?x1150 ?x1012)))
 (let ((?x1342 (rest ?x1012)))
 (let (($x1369 (= ?x1150 ?x1342)))
 (let (($x1346 ((_ is stack ) ?x1012)))
 (let (($x1347 (= c_________ right-to-center)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1349 (= c_________ right-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x1198 (center s_________)))
 (let ((?x1339 (top ?x1198)))
 (let ((?x1341 (stack ?x1339 ?x1012)))
 (let (($x1368 (= ?x1150 ?x1341)))
 (let (($x1351 ((_ is stack ) ?x1198)))
 (let (($x1352 (= c_________ center-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let (($x1354 (= c_________ center-to-left)))
 (let (($x1355 (and $x1354 $x1351)))
 (let ((?x978 (left s_________)))
 (let (($x1356 ((_ is stack ) ?x978)))
 (let (($x1357 (= c_________ left-to-right)))
 (let (($x1358 (and $x1357 $x1356)))
 (let (($x1389 (ite $x1358 $x1372 (ite $x1355 $x1372 (ite $x1353 $x1368 (ite $x1350 $x1369 (ite $x1348 $x1369 $x1372)))))))
 (let ((?x1196 (top ?x978)))
 (let ((?x1335 (stack ?x1196 ?x1012)))
 (let (($x1364 (= ?x1150 ?x1335)))
 (let (($x1359 (= c_________ left-to-center)))
 (let (($x1360 (and $x1359 $x1356)))
 (ite $x1360 $x1364 $x1389)))))))))))))))))))))))))))))))
(assert
 (let ((?x1198 (center s_________)))
 (let ((?x1336 (center s__________)))
 (let (($x1374 (= ?x1336 ?x1198)))
 (let ((?x1012 (right s_________)))
 (let ((?x1343 (top ?x1012)))
 (let ((?x1345 (stack ?x1343 ?x1198)))
 (let (($x1371 (= ?x1336 ?x1345)))
 (let (($x1346 ((_ is stack ) ?x1012)))
 (let (($x1347 (= c_________ right-to-center)))
 (let (($x1348 (and $x1347 $x1346)))
 (let (($x1349 (= c_________ right-to-left)))
 (let (($x1350 (and $x1349 $x1346)))
 (let ((?x1338 (rest ?x1198)))
 (let (($x1366 (= ?x1336 ?x1338)))
 (let (($x1351 ((_ is stack ) ?x1198)))
 (let (($x1352 (= c_________ center-to-right)))
 (let (($x1353 (and $x1352 $x1351)))
 (let (($x1354 (= c_________ center-to-left)))
 (let (($x1355 (and $x1354 $x1351)))
 (let ((?x978 (left s_________)))
 (let ((?x1196 (top ?x978)))
 (let ((?x1337 (stack ?x1196 ?x1198)))
 (let (($x1365 (= ?x1336 ?x1337)))
 (let (($x1356 ((_ is stack ) ?x978)))
 (let (($x1357 (= c_________ left-to-right)))
 (let (($x1358 (and $x1357 $x1356)))
 (let (($x1388 (ite $x1358 $x1365 (ite $x1355 $x1366 (ite $x1353 $x1366 (ite $x1350 $x1374 (ite $x1348 $x1371 $x1374)))))))
 (let (($x1359 (= c_________ left-to-center)))
 (let (($x1360 (and $x1359 $x1356)))
 (ite $x1360 $x1374 $x1388)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1116 (left s__________)))
 (let ((?x1254 (left s___________)))
 (let (($x1514 (= ?x1254 ?x1116)))
 (let ((?x1150 (right s__________)))
 (let ((?x1481 (top ?x1150)))
 (let ((?x1482 (stack ?x1481 ?x1116)))
 (let (($x1508 (= ?x1254 ?x1482)))
 (let (($x1484 ((_ is stack ) ?x1150)))
 (let (($x1487 (= c__________ right-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1336 (center s__________)))
 (let (($x1489 ((_ is stack ) ?x1336)))
 (let (($x1490 (= c__________ center-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let ((?x1477 (top ?x1336)))
 (let ((?x1478 (stack ?x1477 ?x1116)))
 (let (($x1505 (= ?x1254 ?x1478)))
 (let (($x1492 (= c__________ center-to-left)))
 (let (($x1493 (and $x1492 $x1489)))
 (let ((?x1287 (rest ?x1116)))
 (let (($x1501 (= ?x1254 ?x1287)))
 (let (($x1494 ((_ is stack ) ?x1116)))
 (let (($x1495 (= c__________ left-to-right)))
 (let (($x1496 (and $x1495 $x1494)))
 (let (($x1497 (= c__________ left-to-center)))
 (let (($x1498 (and $x1497 $x1494)))
 (ite $x1498 $x1501 (ite $x1496 $x1501 (ite $x1493 $x1505 (ite $x1491 $x1514 (ite $x1488 $x1508 $x1514))))))))))))))))))))))))))))))))
(assert
 (let ((?x1150 (right s__________)))
 (let ((?x1288 (right s___________)))
 (let (($x1510 (= ?x1288 ?x1150)))
 (let ((?x1480 (rest ?x1150)))
 (let (($x1507 (= ?x1288 ?x1480)))
 (let (($x1484 ((_ is stack ) ?x1150)))
 (let (($x1485 (= c__________ right-to-center)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1487 (= c__________ right-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1336 (center s__________)))
 (let ((?x1477 (top ?x1336)))
 (let ((?x1479 (stack ?x1477 ?x1150)))
 (let (($x1506 (= ?x1288 ?x1479)))
 (let (($x1489 ((_ is stack ) ?x1336)))
 (let (($x1490 (= c__________ center-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let (($x1492 (= c__________ center-to-left)))
 (let (($x1493 (and $x1492 $x1489)))
 (let ((?x1116 (left s__________)))
 (let (($x1494 ((_ is stack ) ?x1116)))
 (let (($x1495 (= c__________ left-to-right)))
 (let (($x1496 (and $x1495 $x1494)))
 (let (($x1527 (ite $x1496 $x1510 (ite $x1493 $x1510 (ite $x1491 $x1506 (ite $x1488 $x1507 (ite $x1486 $x1507 $x1510)))))))
 (let ((?x1334 (top ?x1116)))
 (let ((?x1473 (stack ?x1334 ?x1150)))
 (let (($x1502 (= ?x1288 ?x1473)))
 (let (($x1497 (= c__________ left-to-center)))
 (let (($x1498 (and $x1497 $x1494)))
 (ite $x1498 $x1502 $x1527)))))))))))))))))))))))))))))))
(assert
 (let ((?x1336 (center s__________)))
 (let ((?x1474 (center s___________)))
 (let (($x1512 (= ?x1474 ?x1336)))
 (let ((?x1150 (right s__________)))
 (let ((?x1481 (top ?x1150)))
 (let ((?x1483 (stack ?x1481 ?x1336)))
 (let (($x1509 (= ?x1474 ?x1483)))
 (let (($x1484 ((_ is stack ) ?x1150)))
 (let (($x1485 (= c__________ right-to-center)))
 (let (($x1486 (and $x1485 $x1484)))
 (let (($x1487 (= c__________ right-to-left)))
 (let (($x1488 (and $x1487 $x1484)))
 (let ((?x1476 (rest ?x1336)))
 (let (($x1504 (= ?x1474 ?x1476)))
 (let (($x1489 ((_ is stack ) ?x1336)))
 (let (($x1490 (= c__________ center-to-right)))
 (let (($x1491 (and $x1490 $x1489)))
 (let (($x1492 (= c__________ center-to-left)))
 (let (($x1493 (and $x1492 $x1489)))
 (let ((?x1116 (left s__________)))
 (let ((?x1334 (top ?x1116)))
 (let ((?x1475 (stack ?x1334 ?x1336)))
 (let (($x1503 (= ?x1474 ?x1475)))
 (let (($x1494 ((_ is stack ) ?x1116)))
 (let (($x1495 (= c__________ left-to-right)))
 (let (($x1496 (and $x1495 $x1494)))
 (let (($x1526 (ite $x1496 $x1503 (ite $x1493 $x1504 (ite $x1491 $x1504 (ite $x1488 $x1512 (ite $x1486 $x1509 $x1512)))))))
 (let (($x1497 (= c__________ left-to-center)))
 (let (($x1498 (and $x1497 $x1494)))
 (ite $x1498 $x1512 $x1526)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1254 (left s___________)))
 (let ((?x1392 (left s____________)))
 (let (($x1652 (= ?x1392 ?x1254)))
 (let ((?x1288 (right s___________)))
 (let ((?x1619 (top ?x1288)))
 (let ((?x1620 (stack ?x1619 ?x1254)))
 (let (($x1646 (= ?x1392 ?x1620)))
 (let (($x1622 ((_ is stack ) ?x1288)))
 (let (($x1625 (= c___________ right-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1474 (center s___________)))
 (let (($x1627 ((_ is stack ) ?x1474)))
 (let (($x1628 (= c___________ center-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let ((?x1615 (top ?x1474)))
 (let ((?x1616 (stack ?x1615 ?x1254)))
 (let (($x1643 (= ?x1392 ?x1616)))
 (let (($x1630 (= c___________ center-to-left)))
 (let (($x1631 (and $x1630 $x1627)))
 (let ((?x1425 (rest ?x1254)))
 (let (($x1639 (= ?x1392 ?x1425)))
 (let (($x1632 ((_ is stack ) ?x1254)))
 (let (($x1633 (= c___________ left-to-right)))
 (let (($x1634 (and $x1633 $x1632)))
 (let (($x1635 (= c___________ left-to-center)))
 (let (($x1636 (and $x1635 $x1632)))
 (ite $x1636 $x1639 (ite $x1634 $x1639 (ite $x1631 $x1643 (ite $x1629 $x1652 (ite $x1626 $x1646 $x1652))))))))))))))))))))))))))))))))
(assert
 (let ((?x1288 (right s___________)))
 (let ((?x1426 (right s____________)))
 (let (($x1648 (= ?x1426 ?x1288)))
 (let ((?x1618 (rest ?x1288)))
 (let (($x1645 (= ?x1426 ?x1618)))
 (let (($x1622 ((_ is stack ) ?x1288)))
 (let (($x1623 (= c___________ right-to-center)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1625 (= c___________ right-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1474 (center s___________)))
 (let ((?x1615 (top ?x1474)))
 (let ((?x1617 (stack ?x1615 ?x1288)))
 (let (($x1644 (= ?x1426 ?x1617)))
 (let (($x1627 ((_ is stack ) ?x1474)))
 (let (($x1628 (= c___________ center-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let (($x1630 (= c___________ center-to-left)))
 (let (($x1631 (and $x1630 $x1627)))
 (let ((?x1254 (left s___________)))
 (let (($x1632 ((_ is stack ) ?x1254)))
 (let (($x1633 (= c___________ left-to-right)))
 (let (($x1634 (and $x1633 $x1632)))
 (let (($x1665 (ite $x1634 $x1648 (ite $x1631 $x1648 (ite $x1629 $x1644 (ite $x1626 $x1645 (ite $x1624 $x1645 $x1648)))))))
 (let ((?x1472 (top ?x1254)))
 (let ((?x1611 (stack ?x1472 ?x1288)))
 (let (($x1640 (= ?x1426 ?x1611)))
 (let (($x1635 (= c___________ left-to-center)))
 (let (($x1636 (and $x1635 $x1632)))
 (ite $x1636 $x1640 $x1665)))))))))))))))))))))))))))))))
(assert
 (let ((?x1474 (center s___________)))
 (let ((?x1612 (center s____________)))
 (let (($x1650 (= ?x1612 ?x1474)))
 (let ((?x1288 (right s___________)))
 (let ((?x1619 (top ?x1288)))
 (let ((?x1621 (stack ?x1619 ?x1474)))
 (let (($x1647 (= ?x1612 ?x1621)))
 (let (($x1622 ((_ is stack ) ?x1288)))
 (let (($x1623 (= c___________ right-to-center)))
 (let (($x1624 (and $x1623 $x1622)))
 (let (($x1625 (= c___________ right-to-left)))
 (let (($x1626 (and $x1625 $x1622)))
 (let ((?x1614 (rest ?x1474)))
 (let (($x1642 (= ?x1612 ?x1614)))
 (let (($x1627 ((_ is stack ) ?x1474)))
 (let (($x1628 (= c___________ center-to-right)))
 (let (($x1629 (and $x1628 $x1627)))
 (let (($x1630 (= c___________ center-to-left)))
 (let (($x1631 (and $x1630 $x1627)))
 (let ((?x1254 (left s___________)))
 (let ((?x1472 (top ?x1254)))
 (let ((?x1613 (stack ?x1472 ?x1474)))
 (let (($x1641 (= ?x1612 ?x1613)))
 (let (($x1632 ((_ is stack ) ?x1254)))
 (let (($x1633 (= c___________ left-to-right)))
 (let (($x1634 (and $x1633 $x1632)))
 (let (($x1664 (ite $x1634 $x1641 (ite $x1631 $x1642 (ite $x1629 $x1642 (ite $x1626 $x1650 (ite $x1624 $x1647 $x1650)))))))
 (let (($x1635 (= c___________ left-to-center)))
 (let (($x1636 (and $x1635 $x1632)))
 (ite $x1636 $x1650 $x1664)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1392 (left s____________)))
 (let ((?x1530 (left s_____________)))
 (let (($x1790 (= ?x1530 ?x1392)))
 (let ((?x1426 (right s____________)))
 (let ((?x1757 (top ?x1426)))
 (let ((?x1758 (stack ?x1757 ?x1392)))
 (let (($x1784 (= ?x1530 ?x1758)))
 (let (($x1760 ((_ is stack ) ?x1426)))
 (let (($x1763 (= c____________ right-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1612 (center s____________)))
 (let (($x1765 ((_ is stack ) ?x1612)))
 (let (($x1766 (= c____________ center-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let ((?x1753 (top ?x1612)))
 (let ((?x1754 (stack ?x1753 ?x1392)))
 (let (($x1781 (= ?x1530 ?x1754)))
 (let (($x1768 (= c____________ center-to-left)))
 (let (($x1769 (and $x1768 $x1765)))
 (let ((?x1563 (rest ?x1392)))
 (let (($x1777 (= ?x1530 ?x1563)))
 (let (($x1770 ((_ is stack ) ?x1392)))
 (let (($x1771 (= c____________ left-to-right)))
 (let (($x1772 (and $x1771 $x1770)))
 (let (($x1773 (= c____________ left-to-center)))
 (let (($x1774 (and $x1773 $x1770)))
 (ite $x1774 $x1777 (ite $x1772 $x1777 (ite $x1769 $x1781 (ite $x1767 $x1790 (ite $x1764 $x1784 $x1790))))))))))))))))))))))))))))))))
(assert
 (let ((?x1426 (right s____________)))
 (let ((?x1564 (right s_____________)))
 (let (($x1786 (= ?x1564 ?x1426)))
 (let ((?x1756 (rest ?x1426)))
 (let (($x1783 (= ?x1564 ?x1756)))
 (let (($x1760 ((_ is stack ) ?x1426)))
 (let (($x1761 (= c____________ right-to-center)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1763 (= c____________ right-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1612 (center s____________)))
 (let ((?x1753 (top ?x1612)))
 (let ((?x1755 (stack ?x1753 ?x1426)))
 (let (($x1782 (= ?x1564 ?x1755)))
 (let (($x1765 ((_ is stack ) ?x1612)))
 (let (($x1766 (= c____________ center-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let (($x1768 (= c____________ center-to-left)))
 (let (($x1769 (and $x1768 $x1765)))
 (let ((?x1392 (left s____________)))
 (let (($x1770 ((_ is stack ) ?x1392)))
 (let (($x1771 (= c____________ left-to-right)))
 (let (($x1772 (and $x1771 $x1770)))
 (let (($x1803 (ite $x1772 $x1786 (ite $x1769 $x1786 (ite $x1767 $x1782 (ite $x1764 $x1783 (ite $x1762 $x1783 $x1786)))))))
 (let ((?x1610 (top ?x1392)))
 (let ((?x1749 (stack ?x1610 ?x1426)))
 (let (($x1778 (= ?x1564 ?x1749)))
 (let (($x1773 (= c____________ left-to-center)))
 (let (($x1774 (and $x1773 $x1770)))
 (ite $x1774 $x1778 $x1803)))))))))))))))))))))))))))))))
(assert
 (let ((?x1612 (center s____________)))
 (let ((?x1750 (center s_____________)))
 (let (($x1788 (= ?x1750 ?x1612)))
 (let ((?x1426 (right s____________)))
 (let ((?x1757 (top ?x1426)))
 (let ((?x1759 (stack ?x1757 ?x1612)))
 (let (($x1785 (= ?x1750 ?x1759)))
 (let (($x1760 ((_ is stack ) ?x1426)))
 (let (($x1761 (= c____________ right-to-center)))
 (let (($x1762 (and $x1761 $x1760)))
 (let (($x1763 (= c____________ right-to-left)))
 (let (($x1764 (and $x1763 $x1760)))
 (let ((?x1752 (rest ?x1612)))
 (let (($x1780 (= ?x1750 ?x1752)))
 (let (($x1765 ((_ is stack ) ?x1612)))
 (let (($x1766 (= c____________ center-to-right)))
 (let (($x1767 (and $x1766 $x1765)))
 (let (($x1768 (= c____________ center-to-left)))
 (let (($x1769 (and $x1768 $x1765)))
 (let ((?x1392 (left s____________)))
 (let ((?x1610 (top ?x1392)))
 (let ((?x1751 (stack ?x1610 ?x1612)))
 (let (($x1779 (= ?x1750 ?x1751)))
 (let (($x1770 ((_ is stack ) ?x1392)))
 (let (($x1771 (= c____________ left-to-right)))
 (let (($x1772 (and $x1771 $x1770)))
 (let (($x1802 (ite $x1772 $x1779 (ite $x1769 $x1780 (ite $x1767 $x1780 (ite $x1764 $x1788 (ite $x1762 $x1785 $x1788)))))))
 (let (($x1773 (= c____________ left-to-center)))
 (let (($x1774 (and $x1773 $x1770)))
 (ite $x1774 $x1788 $x1802)))))))))))))))))))))))))))))))
(assert
 (let ((?x55 (stack N (stack M (stack I (stack H (stack D (stack A empty))))))))
 (let ((?x56 (stack O ?x55)))
 (let ((?x1564 (right s_____________)))
 (let (($x1806 (= ?x1564 ?x56)))
 (let ((?x1750 (center s_____________)))
 (let (($x1837 (= ?x1750 empty)))
 (let ((?x47 (stack C (stack F (stack J (stack B (stack K (stack E empty))))))))
 (let ((?x49 (stack L (stack G ?x47))))
 (let ((?x1530 (left s_____________)))
 (let (($x1838 (= ?x1530 ?x49)))
 (let (($x1840 (not (and $x1838 $x1837 $x1806))))
 (not $x1840)))))))))))))
(check-sat)
(exit)
