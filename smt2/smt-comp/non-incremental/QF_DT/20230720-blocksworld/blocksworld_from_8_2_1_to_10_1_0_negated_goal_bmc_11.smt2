(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x24 (stack K empty)))
 (let ((?x23 (stack J ?x24)))
 (let ((?x25 (stack D ?x23)))
 (let ((?x26 (stack I ?x25)))
 (let ((?x27 (stack E ?x26)))
 (let ((?x28 (stack C ?x27)))
 (let ((?x29 (stack G ?x28)))
 (let ((?x30 (stack B ?x29)))
 (let ((?x90 (left s_tmp_)))
 (= ?x90 ?x30)))))))))))
(assert
 (let ((?x31 (stack A empty)))
 (let ((?x32 (stack H ?x31)))
 (let ((?x93 (center s_tmp__)))
 (= ?x93 ?x32)))))
(assert
 (let ((?x33 (stack F empty)))
 (let ((?x96 (right s_tmp___)))
 (= ?x96 ?x33))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x123 (left s_tmp__)))
 (= (left s_tmp___) ?x123)))
(assert
 (let ((?x93 (center s_tmp__)))
 (= (center s_tmp___) ?x93)))
(assert
 (let ((?x127 (center s_tmp_)))
 (= ?x127 (center s_tmp))))
(assert
 (let ((?x130 (right s_tmp_)))
 (= ?x130 (right s_tmp))))
(assert
 (let ((?x90 (left s_tmp_)))
 (let ((?x123 (left s_tmp__)))
 (= ?x123 ?x90))))
(assert
 (let ((?x130 (right s_tmp_)))
 (let ((?x134 (right s_tmp__)))
 (= ?x134 ?x130))))
(assert
 (= c__ c!1))
(assert
 (let ((?x67 (left s_)))
 (let ((?x223 (left s__)))
 (let (($x256 (= ?x223 ?x67)))
 (let ((?x70 (right s_)))
 (let (($x229 ((_ is stack ) ?x70)))
 (let (($x232 (= c_ right-to-left)))
 (let (($x209 (and $x232 $x229)))
 (let ((?x72 (center s_)))
 (let (($x210 ((_ is stack ) ?x72)))
 (let (($x211 (= c_ center-to-right)))
 (let (($x224 (and $x211 $x210)))
 (let (($x225 (= c_ center-to-left)))
 (let (($x226 (and $x225 $x210)))
 (let (($x265 (ite $x226 (= ?x223 (stack (top ?x72) ?x67)) (ite $x224 $x256 (ite $x209 (= ?x223 (stack (top ?x70) ?x67)) $x256)))))
 (let (($x243 (= ?x223 (rest ?x67))))
 (let (($x236 ((_ is stack ) ?x67)))
 (let (($x237 (= c_ left-to-right)))
 (let (($x238 (and $x237 $x236)))
 (let (($x239 (= c_ left-to-center)))
 (let (($x240 (and $x239 $x236)))
 (ite $x240 $x243 (ite $x238 $x243 $x265)))))))))))))))))))))))
(assert
 (let ((?x70 (right s_)))
 (let ((?x216 (right s__)))
 (let (($x252 (= ?x216 ?x70)))
 (let (($x249 (= ?x216 (rest ?x70))))
 (let (($x229 ((_ is stack ) ?x70)))
 (let (($x230 (= c_ right-to-center)))
 (let (($x231 (and $x230 $x229)))
 (let (($x232 (= c_ right-to-left)))
 (let (($x209 (and $x232 $x229)))
 (let ((?x72 (center s_)))
 (let (($x210 ((_ is stack ) ?x72)))
 (let (($x211 (= c_ center-to-right)))
 (let (($x224 (and $x211 $x210)))
 (let (($x262 (ite $x224 (= ?x216 (stack (top ?x72) ?x70)) (ite $x209 $x249 (ite $x231 $x249 $x252)))))
 (let (($x225 (= c_ center-to-left)))
 (let (($x226 (and $x225 $x210)))
 (let ((?x67 (left s_)))
 (let (($x236 ((_ is stack ) ?x67)))
 (let (($x237 (= c_ left-to-right)))
 (let (($x238 (and $x237 $x236)))
 (let (($x239 (= c_ left-to-center)))
 (let (($x240 (and $x239 $x236)))
 (ite $x240 (= ?x216 (stack (top ?x67) ?x70)) (ite $x238 $x252 (ite $x226 $x252 $x262))))))))))))))))))))))))))
(assert
 (let ((?x72 (center s_)))
 (let ((?x213 (center s__)))
 (let (($x254 (= ?x213 ?x72)))
 (let ((?x70 (right s_)))
 (let (($x229 ((_ is stack ) ?x70)))
 (let (($x230 (= c_ right-to-center)))
 (let (($x231 (and $x230 $x229)))
 (let (($x232 (= c_ right-to-left)))
 (let (($x209 (and $x232 $x229)))
 (let (($x246 (= ?x213 (rest ?x72))))
 (let (($x210 ((_ is stack ) ?x72)))
 (let (($x211 (= c_ center-to-right)))
 (let (($x224 (and $x211 $x210)))
 (let (($x261 (ite $x224 $x246 (ite $x209 $x254 (ite $x231 (= ?x213 (stack (top ?x70) ?x72)) $x254)))))
 (let (($x225 (= c_ center-to-left)))
 (let (($x226 (and $x225 $x210)))
 (let ((?x67 (left s_)))
 (let (($x236 ((_ is stack ) ?x67)))
 (let (($x237 (= c_ left-to-right)))
 (let (($x238 (and $x237 $x236)))
 (let (($x239 (= c_ left-to-center)))
 (let (($x240 (and $x239 $x236)))
 (ite $x240 $x254 (ite $x238 (= ?x213 (stack (top ?x67) ?x72)) (ite $x226 $x246 $x261))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x223 (left s__)))
 (let ((?x137 (left s___)))
 (let (($x384 (= ?x137 ?x223)))
 (let ((?x216 (right s__)))
 (let ((?x351 (top ?x216)))
 (let ((?x352 (stack ?x351 ?x223)))
 (let (($x378 (= ?x137 ?x352)))
 (let (($x354 ((_ is stack ) ?x216)))
 (let (($x357 (= c__ right-to-left)))
 (let (($x358 (and $x357 $x354)))
 (let ((?x213 (center s__)))
 (let (($x359 ((_ is stack ) ?x213)))
 (let (($x360 (= c__ center-to-right)))
 (let (($x361 (and $x360 $x359)))
 (let ((?x347 (top ?x213)))
 (let ((?x348 (stack ?x347 ?x223)))
 (let (($x375 (= ?x137 ?x348)))
 (let (($x362 (= c__ center-to-left)))
 (let (($x363 (and $x362 $x359)))
 (let ((?x139 (rest ?x223)))
 (let (($x371 (= ?x137 ?x139)))
 (let (($x364 ((_ is stack ) ?x223)))
 (let (($x365 (= c__ left-to-right)))
 (let (($x366 (and $x365 $x364)))
 (let (($x367 (= c__ left-to-center)))
 (let (($x368 (and $x367 $x364)))
 (ite $x368 $x371 (ite $x366 $x371 (ite $x363 $x375 (ite $x361 $x384 (ite $x358 $x378 $x384))))))))))))))))))))))))))))))))
(assert
 (let ((?x216 (right s__)))
 (let ((?x140 (right s___)))
 (let (($x380 (= ?x140 ?x216)))
 (let ((?x350 (rest ?x216)))
 (let (($x377 (= ?x140 ?x350)))
 (let (($x354 ((_ is stack ) ?x216)))
 (let (($x355 (= c__ right-to-center)))
 (let (($x356 (and $x355 $x354)))
 (let (($x357 (= c__ right-to-left)))
 (let (($x358 (and $x357 $x354)))
 (let ((?x213 (center s__)))
 (let ((?x347 (top ?x213)))
 (let ((?x349 (stack ?x347 ?x216)))
 (let (($x376 (= ?x140 ?x349)))
 (let (($x359 ((_ is stack ) ?x213)))
 (let (($x360 (= c__ center-to-right)))
 (let (($x361 (and $x360 $x359)))
 (let (($x362 (= c__ center-to-left)))
 (let (($x363 (and $x362 $x359)))
 (let ((?x223 (left s__)))
 (let (($x364 ((_ is stack ) ?x223)))
 (let (($x365 (= c__ left-to-right)))
 (let (($x366 (and $x365 $x364)))
 (let (($x397 (ite $x366 $x380 (ite $x363 $x380 (ite $x361 $x376 (ite $x358 $x377 (ite $x356 $x377 $x380)))))))
 (let ((?x208 (top ?x223)))
 (let ((?x343 (stack ?x208 ?x216)))
 (let (($x372 (= ?x140 ?x343)))
 (let (($x367 (= c__ left-to-center)))
 (let (($x368 (and $x367 $x364)))
 (ite $x368 $x372 $x397)))))))))))))))))))))))))))))))
(assert
 (let ((?x213 (center s__)))
 (let ((?x344 (center s___)))
 (let (($x382 (= ?x344 ?x213)))
 (let ((?x216 (right s__)))
 (let ((?x351 (top ?x216)))
 (let ((?x353 (stack ?x351 ?x213)))
 (let (($x379 (= ?x344 ?x353)))
 (let (($x354 ((_ is stack ) ?x216)))
 (let (($x355 (= c__ right-to-center)))
 (let (($x356 (and $x355 $x354)))
 (let (($x357 (= c__ right-to-left)))
 (let (($x358 (and $x357 $x354)))
 (let ((?x346 (rest ?x213)))
 (let (($x374 (= ?x344 ?x346)))
 (let (($x359 ((_ is stack ) ?x213)))
 (let (($x360 (= c__ center-to-right)))
 (let (($x361 (and $x360 $x359)))
 (let (($x362 (= c__ center-to-left)))
 (let (($x363 (and $x362 $x359)))
 (let ((?x223 (left s__)))
 (let ((?x208 (top ?x223)))
 (let ((?x345 (stack ?x208 ?x213)))
 (let (($x373 (= ?x344 ?x345)))
 (let (($x364 ((_ is stack ) ?x223)))
 (let (($x365 (= c__ left-to-right)))
 (let (($x366 (and $x365 $x364)))
 (let (($x396 (ite $x366 $x373 (ite $x363 $x374 (ite $x361 $x374 (ite $x358 $x382 (ite $x356 $x379 $x382)))))))
 (let (($x367 (= c__ left-to-center)))
 (let (($x368 (and $x367 $x364)))
 (ite $x368 $x382 $x396)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x137 (left s___)))
 (let ((?x315 (left s____)))
 (let (($x523 (= ?x315 ?x137)))
 (let ((?x140 (right s___)))
 (let ((?x490 (top ?x140)))
 (let ((?x491 (stack ?x490 ?x137)))
 (let (($x517 (= ?x315 ?x491)))
 (let (($x493 ((_ is stack ) ?x140)))
 (let (($x496 (= c___ right-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x344 (center s___)))
 (let (($x498 ((_ is stack ) ?x344)))
 (let (($x499 (= c___ center-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let ((?x486 (top ?x344)))
 (let ((?x487 (stack ?x486 ?x137)))
 (let (($x514 (= ?x315 ?x487)))
 (let (($x501 (= c___ center-to-left)))
 (let (($x502 (and $x501 $x498)))
 (let ((?x316 (rest ?x137)))
 (let (($x510 (= ?x315 ?x316)))
 (let (($x503 ((_ is stack ) ?x137)))
 (let (($x504 (= c___ left-to-right)))
 (let (($x505 (and $x504 $x503)))
 (let (($x506 (= c___ left-to-center)))
 (let (($x507 (and $x506 $x503)))
 (ite $x507 $x510 (ite $x505 $x510 (ite $x502 $x514 (ite $x500 $x523 (ite $x497 $x517 $x523))))))))))))))))))))))))))))))))
(assert
 (let ((?x140 (right s___)))
 (let ((?x342 (right s____)))
 (let (($x519 (= ?x342 ?x140)))
 (let ((?x489 (rest ?x140)))
 (let (($x516 (= ?x342 ?x489)))
 (let (($x493 ((_ is stack ) ?x140)))
 (let (($x494 (= c___ right-to-center)))
 (let (($x495 (and $x494 $x493)))
 (let (($x496 (= c___ right-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x344 (center s___)))
 (let ((?x486 (top ?x344)))
 (let ((?x488 (stack ?x486 ?x140)))
 (let (($x515 (= ?x342 ?x488)))
 (let (($x498 ((_ is stack ) ?x344)))
 (let (($x499 (= c___ center-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let (($x501 (= c___ center-to-left)))
 (let (($x502 (and $x501 $x498)))
 (let ((?x137 (left s___)))
 (let (($x503 ((_ is stack ) ?x137)))
 (let (($x504 (= c___ left-to-right)))
 (let (($x505 (and $x504 $x503)))
 (let (($x536 (ite $x505 $x519 (ite $x502 $x519 (ite $x500 $x515 (ite $x497 $x516 (ite $x495 $x516 $x519)))))))
 (let ((?x481 (top ?x137)))
 (let ((?x482 (stack ?x481 ?x140)))
 (let (($x511 (= ?x342 ?x482)))
 (let (($x506 (= c___ left-to-center)))
 (let (($x507 (and $x506 $x503)))
 (ite $x507 $x511 $x536)))))))))))))))))))))))))))))))
(assert
 (let ((?x344 (center s___)))
 (let ((?x483 (center s____)))
 (let (($x521 (= ?x483 ?x344)))
 (let ((?x140 (right s___)))
 (let ((?x490 (top ?x140)))
 (let ((?x492 (stack ?x490 ?x344)))
 (let (($x518 (= ?x483 ?x492)))
 (let (($x493 ((_ is stack ) ?x140)))
 (let (($x494 (= c___ right-to-center)))
 (let (($x495 (and $x494 $x493)))
 (let (($x496 (= c___ right-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x485 (rest ?x344)))
 (let (($x513 (= ?x483 ?x485)))
 (let (($x498 ((_ is stack ) ?x344)))
 (let (($x499 (= c___ center-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let (($x501 (= c___ center-to-left)))
 (let (($x502 (and $x501 $x498)))
 (let ((?x137 (left s___)))
 (let ((?x481 (top ?x137)))
 (let ((?x484 (stack ?x481 ?x344)))
 (let (($x512 (= ?x483 ?x484)))
 (let (($x503 ((_ is stack ) ?x137)))
 (let (($x504 (= c___ left-to-right)))
 (let (($x505 (and $x504 $x503)))
 (let (($x535 (ite $x505 $x512 (ite $x502 $x513 (ite $x500 $x513 (ite $x497 $x521 (ite $x495 $x518 $x521)))))))
 (let (($x506 (= c___ left-to-center)))
 (let (($x507 (and $x506 $x503)))
 (ite $x507 $x521 $x535)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x315 (left s____)))
 (let ((?x400 (left s_____)))
 (let (($x661 (= ?x400 ?x315)))
 (let ((?x342 (right s____)))
 (let ((?x628 (top ?x342)))
 (let ((?x629 (stack ?x628 ?x315)))
 (let (($x655 (= ?x400 ?x629)))
 (let (($x631 ((_ is stack ) ?x342)))
 (let (($x634 (= c____ right-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x483 (center s____)))
 (let (($x636 ((_ is stack ) ?x483)))
 (let (($x637 (= c____ center-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let ((?x624 (top ?x483)))
 (let ((?x625 (stack ?x624 ?x315)))
 (let (($x652 (= ?x400 ?x625)))
 (let (($x639 (= c____ center-to-left)))
 (let (($x640 (and $x639 $x636)))
 (let ((?x433 (rest ?x315)))
 (let (($x648 (= ?x400 ?x433)))
 (let (($x641 ((_ is stack ) ?x315)))
 (let (($x642 (= c____ left-to-right)))
 (let (($x643 (and $x642 $x641)))
 (let (($x644 (= c____ left-to-center)))
 (let (($x645 (and $x644 $x641)))
 (ite $x645 $x648 (ite $x643 $x648 (ite $x640 $x652 (ite $x638 $x661 (ite $x635 $x655 $x661))))))))))))))))))))))))))))))))
(assert
 (let ((?x342 (right s____)))
 (let ((?x434 (right s_____)))
 (let (($x657 (= ?x434 ?x342)))
 (let ((?x627 (rest ?x342)))
 (let (($x654 (= ?x434 ?x627)))
 (let (($x631 ((_ is stack ) ?x342)))
 (let (($x632 (= c____ right-to-center)))
 (let (($x633 (and $x632 $x631)))
 (let (($x634 (= c____ right-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x483 (center s____)))
 (let ((?x624 (top ?x483)))
 (let ((?x626 (stack ?x624 ?x342)))
 (let (($x653 (= ?x434 ?x626)))
 (let (($x636 ((_ is stack ) ?x483)))
 (let (($x637 (= c____ center-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let (($x639 (= c____ center-to-left)))
 (let (($x640 (and $x639 $x636)))
 (let ((?x315 (left s____)))
 (let (($x641 ((_ is stack ) ?x315)))
 (let (($x642 (= c____ left-to-right)))
 (let (($x643 (and $x642 $x641)))
 (let (($x674 (ite $x643 $x657 (ite $x640 $x657 (ite $x638 $x653 (ite $x635 $x654 (ite $x633 $x654 $x657)))))))
 (let ((?x480 (top ?x315)))
 (let ((?x620 (stack ?x480 ?x342)))
 (let (($x649 (= ?x434 ?x620)))
 (let (($x644 (= c____ left-to-center)))
 (let (($x645 (and $x644 $x641)))
 (ite $x645 $x649 $x674)))))))))))))))))))))))))))))))
(assert
 (let ((?x483 (center s____)))
 (let ((?x621 (center s_____)))
 (let (($x659 (= ?x621 ?x483)))
 (let ((?x342 (right s____)))
 (let ((?x628 (top ?x342)))
 (let ((?x630 (stack ?x628 ?x483)))
 (let (($x656 (= ?x621 ?x630)))
 (let (($x631 ((_ is stack ) ?x342)))
 (let (($x632 (= c____ right-to-center)))
 (let (($x633 (and $x632 $x631)))
 (let (($x634 (= c____ right-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x623 (rest ?x483)))
 (let (($x651 (= ?x621 ?x623)))
 (let (($x636 ((_ is stack ) ?x483)))
 (let (($x637 (= c____ center-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let (($x639 (= c____ center-to-left)))
 (let (($x640 (and $x639 $x636)))
 (let ((?x315 (left s____)))
 (let ((?x480 (top ?x315)))
 (let ((?x622 (stack ?x480 ?x483)))
 (let (($x650 (= ?x621 ?x622)))
 (let (($x641 ((_ is stack ) ?x315)))
 (let (($x642 (= c____ left-to-right)))
 (let (($x643 (and $x642 $x641)))
 (let (($x673 (ite $x643 $x650 (ite $x640 $x651 (ite $x638 $x651 (ite $x635 $x659 (ite $x633 $x656 $x659)))))))
 (let (($x644 (= c____ left-to-center)))
 (let (($x645 (and $x644 $x641)))
 (ite $x645 $x659 $x673)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x400 (left s_____)))
 (let ((?x539 (left s______)))
 (let (($x799 (= ?x539 ?x400)))
 (let ((?x434 (right s_____)))
 (let ((?x766 (top ?x434)))
 (let ((?x767 (stack ?x766 ?x400)))
 (let (($x793 (= ?x539 ?x767)))
 (let (($x769 ((_ is stack ) ?x434)))
 (let (($x772 (= c_____ right-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x621 (center s_____)))
 (let (($x774 ((_ is stack ) ?x621)))
 (let (($x775 (= c_____ center-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let ((?x762 (top ?x621)))
 (let ((?x763 (stack ?x762 ?x400)))
 (let (($x790 (= ?x539 ?x763)))
 (let (($x777 (= c_____ center-to-left)))
 (let (($x778 (and $x777 $x774)))
 (let ((?x572 (rest ?x400)))
 (let (($x786 (= ?x539 ?x572)))
 (let (($x779 ((_ is stack ) ?x400)))
 (let (($x780 (= c_____ left-to-right)))
 (let (($x781 (and $x780 $x779)))
 (let (($x782 (= c_____ left-to-center)))
 (let (($x783 (and $x782 $x779)))
 (ite $x783 $x786 (ite $x781 $x786 (ite $x778 $x790 (ite $x776 $x799 (ite $x773 $x793 $x799))))))))))))))))))))))))))))))))
(assert
 (let ((?x434 (right s_____)))
 (let ((?x573 (right s______)))
 (let (($x795 (= ?x573 ?x434)))
 (let ((?x765 (rest ?x434)))
 (let (($x792 (= ?x573 ?x765)))
 (let (($x769 ((_ is stack ) ?x434)))
 (let (($x770 (= c_____ right-to-center)))
 (let (($x771 (and $x770 $x769)))
 (let (($x772 (= c_____ right-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x621 (center s_____)))
 (let ((?x762 (top ?x621)))
 (let ((?x764 (stack ?x762 ?x434)))
 (let (($x791 (= ?x573 ?x764)))
 (let (($x774 ((_ is stack ) ?x621)))
 (let (($x775 (= c_____ center-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let (($x777 (= c_____ center-to-left)))
 (let (($x778 (and $x777 $x774)))
 (let ((?x400 (left s_____)))
 (let (($x779 ((_ is stack ) ?x400)))
 (let (($x780 (= c_____ left-to-right)))
 (let (($x781 (and $x780 $x779)))
 (let (($x812 (ite $x781 $x795 (ite $x778 $x795 (ite $x776 $x791 (ite $x773 $x792 (ite $x771 $x792 $x795)))))))
 (let ((?x619 (top ?x400)))
 (let ((?x758 (stack ?x619 ?x434)))
 (let (($x787 (= ?x573 ?x758)))
 (let (($x782 (= c_____ left-to-center)))
 (let (($x783 (and $x782 $x779)))
 (ite $x783 $x787 $x812)))))))))))))))))))))))))))))))
(assert
 (let ((?x621 (center s_____)))
 (let ((?x759 (center s______)))
 (let (($x797 (= ?x759 ?x621)))
 (let ((?x434 (right s_____)))
 (let ((?x766 (top ?x434)))
 (let ((?x768 (stack ?x766 ?x621)))
 (let (($x794 (= ?x759 ?x768)))
 (let (($x769 ((_ is stack ) ?x434)))
 (let (($x770 (= c_____ right-to-center)))
 (let (($x771 (and $x770 $x769)))
 (let (($x772 (= c_____ right-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x761 (rest ?x621)))
 (let (($x789 (= ?x759 ?x761)))
 (let (($x774 ((_ is stack ) ?x621)))
 (let (($x775 (= c_____ center-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let (($x777 (= c_____ center-to-left)))
 (let (($x778 (and $x777 $x774)))
 (let ((?x400 (left s_____)))
 (let ((?x619 (top ?x400)))
 (let ((?x760 (stack ?x619 ?x621)))
 (let (($x788 (= ?x759 ?x760)))
 (let (($x779 ((_ is stack ) ?x400)))
 (let (($x780 (= c_____ left-to-right)))
 (let (($x781 (and $x780 $x779)))
 (let (($x811 (ite $x781 $x788 (ite $x778 $x789 (ite $x776 $x789 (ite $x773 $x797 (ite $x771 $x794 $x797)))))))
 (let (($x782 (= c_____ left-to-center)))
 (let (($x783 (and $x782 $x779)))
 (ite $x783 $x797 $x811)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x539 (left s______)))
 (let ((?x677 (left s_______)))
 (let (($x937 (= ?x677 ?x539)))
 (let ((?x573 (right s______)))
 (let ((?x904 (top ?x573)))
 (let ((?x905 (stack ?x904 ?x539)))
 (let (($x931 (= ?x677 ?x905)))
 (let (($x907 ((_ is stack ) ?x573)))
 (let (($x910 (= c______ right-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x759 (center s______)))
 (let (($x912 ((_ is stack ) ?x759)))
 (let (($x913 (= c______ center-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let ((?x900 (top ?x759)))
 (let ((?x901 (stack ?x900 ?x539)))
 (let (($x928 (= ?x677 ?x901)))
 (let (($x915 (= c______ center-to-left)))
 (let (($x916 (and $x915 $x912)))
 (let ((?x710 (rest ?x539)))
 (let (($x924 (= ?x677 ?x710)))
 (let (($x917 ((_ is stack ) ?x539)))
 (let (($x918 (= c______ left-to-right)))
 (let (($x919 (and $x918 $x917)))
 (let (($x920 (= c______ left-to-center)))
 (let (($x921 (and $x920 $x917)))
 (ite $x921 $x924 (ite $x919 $x924 (ite $x916 $x928 (ite $x914 $x937 (ite $x911 $x931 $x937))))))))))))))))))))))))))))))))
(assert
 (let ((?x573 (right s______)))
 (let ((?x711 (right s_______)))
 (let (($x933 (= ?x711 ?x573)))
 (let ((?x903 (rest ?x573)))
 (let (($x930 (= ?x711 ?x903)))
 (let (($x907 ((_ is stack ) ?x573)))
 (let (($x908 (= c______ right-to-center)))
 (let (($x909 (and $x908 $x907)))
 (let (($x910 (= c______ right-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x759 (center s______)))
 (let ((?x900 (top ?x759)))
 (let ((?x902 (stack ?x900 ?x573)))
 (let (($x929 (= ?x711 ?x902)))
 (let (($x912 ((_ is stack ) ?x759)))
 (let (($x913 (= c______ center-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let (($x915 (= c______ center-to-left)))
 (let (($x916 (and $x915 $x912)))
 (let ((?x539 (left s______)))
 (let (($x917 ((_ is stack ) ?x539)))
 (let (($x918 (= c______ left-to-right)))
 (let (($x919 (and $x918 $x917)))
 (let (($x950 (ite $x919 $x933 (ite $x916 $x933 (ite $x914 $x929 (ite $x911 $x930 (ite $x909 $x930 $x933)))))))
 (let ((?x757 (top ?x539)))
 (let ((?x896 (stack ?x757 ?x573)))
 (let (($x925 (= ?x711 ?x896)))
 (let (($x920 (= c______ left-to-center)))
 (let (($x921 (and $x920 $x917)))
 (ite $x921 $x925 $x950)))))))))))))))))))))))))))))))
(assert
 (let ((?x759 (center s______)))
 (let ((?x897 (center s_______)))
 (let (($x935 (= ?x897 ?x759)))
 (let ((?x573 (right s______)))
 (let ((?x904 (top ?x573)))
 (let ((?x906 (stack ?x904 ?x759)))
 (let (($x932 (= ?x897 ?x906)))
 (let (($x907 ((_ is stack ) ?x573)))
 (let (($x908 (= c______ right-to-center)))
 (let (($x909 (and $x908 $x907)))
 (let (($x910 (= c______ right-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x899 (rest ?x759)))
 (let (($x927 (= ?x897 ?x899)))
 (let (($x912 ((_ is stack ) ?x759)))
 (let (($x913 (= c______ center-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let (($x915 (= c______ center-to-left)))
 (let (($x916 (and $x915 $x912)))
 (let ((?x539 (left s______)))
 (let ((?x757 (top ?x539)))
 (let ((?x898 (stack ?x757 ?x759)))
 (let (($x926 (= ?x897 ?x898)))
 (let (($x917 ((_ is stack ) ?x539)))
 (let (($x918 (= c______ left-to-right)))
 (let (($x919 (and $x918 $x917)))
 (let (($x949 (ite $x919 $x926 (ite $x916 $x927 (ite $x914 $x927 (ite $x911 $x935 (ite $x909 $x932 $x935)))))))
 (let (($x920 (= c______ left-to-center)))
 (let (($x921 (and $x920 $x917)))
 (ite $x921 $x935 $x949)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x677 (left s_______)))
 (let ((?x815 (left s________)))
 (let (($x1075 (= ?x815 ?x677)))
 (let ((?x711 (right s_______)))
 (let ((?x1042 (top ?x711)))
 (let ((?x1043 (stack ?x1042 ?x677)))
 (let (($x1069 (= ?x815 ?x1043)))
 (let (($x1045 ((_ is stack ) ?x711)))
 (let (($x1048 (= c_______ right-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x897 (center s_______)))
 (let (($x1050 ((_ is stack ) ?x897)))
 (let (($x1051 (= c_______ center-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let ((?x1038 (top ?x897)))
 (let ((?x1039 (stack ?x1038 ?x677)))
 (let (($x1066 (= ?x815 ?x1039)))
 (let (($x1053 (= c_______ center-to-left)))
 (let (($x1054 (and $x1053 $x1050)))
 (let ((?x848 (rest ?x677)))
 (let (($x1062 (= ?x815 ?x848)))
 (let (($x1055 ((_ is stack ) ?x677)))
 (let (($x1056 (= c_______ left-to-right)))
 (let (($x1057 (and $x1056 $x1055)))
 (let (($x1058 (= c_______ left-to-center)))
 (let (($x1059 (and $x1058 $x1055)))
 (ite $x1059 $x1062 (ite $x1057 $x1062 (ite $x1054 $x1066 (ite $x1052 $x1075 (ite $x1049 $x1069 $x1075))))))))))))))))))))))))))))))))
(assert
 (let ((?x711 (right s_______)))
 (let ((?x849 (right s________)))
 (let (($x1071 (= ?x849 ?x711)))
 (let ((?x1041 (rest ?x711)))
 (let (($x1068 (= ?x849 ?x1041)))
 (let (($x1045 ((_ is stack ) ?x711)))
 (let (($x1046 (= c_______ right-to-center)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1048 (= c_______ right-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x897 (center s_______)))
 (let ((?x1038 (top ?x897)))
 (let ((?x1040 (stack ?x1038 ?x711)))
 (let (($x1067 (= ?x849 ?x1040)))
 (let (($x1050 ((_ is stack ) ?x897)))
 (let (($x1051 (= c_______ center-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let (($x1053 (= c_______ center-to-left)))
 (let (($x1054 (and $x1053 $x1050)))
 (let ((?x677 (left s_______)))
 (let (($x1055 ((_ is stack ) ?x677)))
 (let (($x1056 (= c_______ left-to-right)))
 (let (($x1057 (and $x1056 $x1055)))
 (let (($x1088 (ite $x1057 $x1071 (ite $x1054 $x1071 (ite $x1052 $x1067 (ite $x1049 $x1068 (ite $x1047 $x1068 $x1071)))))))
 (let ((?x895 (top ?x677)))
 (let ((?x1034 (stack ?x895 ?x711)))
 (let (($x1063 (= ?x849 ?x1034)))
 (let (($x1058 (= c_______ left-to-center)))
 (let (($x1059 (and $x1058 $x1055)))
 (ite $x1059 $x1063 $x1088)))))))))))))))))))))))))))))))
(assert
 (let ((?x897 (center s_______)))
 (let ((?x1035 (center s________)))
 (let (($x1073 (= ?x1035 ?x897)))
 (let ((?x711 (right s_______)))
 (let ((?x1042 (top ?x711)))
 (let ((?x1044 (stack ?x1042 ?x897)))
 (let (($x1070 (= ?x1035 ?x1044)))
 (let (($x1045 ((_ is stack ) ?x711)))
 (let (($x1046 (= c_______ right-to-center)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1048 (= c_______ right-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x1037 (rest ?x897)))
 (let (($x1065 (= ?x1035 ?x1037)))
 (let (($x1050 ((_ is stack ) ?x897)))
 (let (($x1051 (= c_______ center-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let (($x1053 (= c_______ center-to-left)))
 (let (($x1054 (and $x1053 $x1050)))
 (let ((?x677 (left s_______)))
 (let ((?x895 (top ?x677)))
 (let ((?x1036 (stack ?x895 ?x897)))
 (let (($x1064 (= ?x1035 ?x1036)))
 (let (($x1055 ((_ is stack ) ?x677)))
 (let (($x1056 (= c_______ left-to-right)))
 (let (($x1057 (and $x1056 $x1055)))
 (let (($x1087 (ite $x1057 $x1064 (ite $x1054 $x1065 (ite $x1052 $x1065 (ite $x1049 $x1073 (ite $x1047 $x1070 $x1073)))))))
 (let (($x1058 (= c_______ left-to-center)))
 (let (($x1059 (and $x1058 $x1055)))
 (ite $x1059 $x1073 $x1087)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x815 (left s________)))
 (let ((?x953 (left s_________)))
 (let (($x1213 (= ?x953 ?x815)))
 (let ((?x849 (right s________)))
 (let ((?x1180 (top ?x849)))
 (let ((?x1181 (stack ?x1180 ?x815)))
 (let (($x1207 (= ?x953 ?x1181)))
 (let (($x1183 ((_ is stack ) ?x849)))
 (let (($x1186 (= c________ right-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x1035 (center s________)))
 (let (($x1188 ((_ is stack ) ?x1035)))
 (let (($x1189 (= c________ center-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let ((?x1176 (top ?x1035)))
 (let ((?x1177 (stack ?x1176 ?x815)))
 (let (($x1204 (= ?x953 ?x1177)))
 (let (($x1191 (= c________ center-to-left)))
 (let (($x1192 (and $x1191 $x1188)))
 (let ((?x986 (rest ?x815)))
 (let (($x1200 (= ?x953 ?x986)))
 (let (($x1193 ((_ is stack ) ?x815)))
 (let (($x1194 (= c________ left-to-right)))
 (let (($x1195 (and $x1194 $x1193)))
 (let (($x1196 (= c________ left-to-center)))
 (let (($x1197 (and $x1196 $x1193)))
 (ite $x1197 $x1200 (ite $x1195 $x1200 (ite $x1192 $x1204 (ite $x1190 $x1213 (ite $x1187 $x1207 $x1213))))))))))))))))))))))))))))))))
(assert
 (let ((?x849 (right s________)))
 (let ((?x987 (right s_________)))
 (let (($x1209 (= ?x987 ?x849)))
 (let ((?x1179 (rest ?x849)))
 (let (($x1206 (= ?x987 ?x1179)))
 (let (($x1183 ((_ is stack ) ?x849)))
 (let (($x1184 (= c________ right-to-center)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1186 (= c________ right-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x1035 (center s________)))
 (let ((?x1176 (top ?x1035)))
 (let ((?x1178 (stack ?x1176 ?x849)))
 (let (($x1205 (= ?x987 ?x1178)))
 (let (($x1188 ((_ is stack ) ?x1035)))
 (let (($x1189 (= c________ center-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let (($x1191 (= c________ center-to-left)))
 (let (($x1192 (and $x1191 $x1188)))
 (let ((?x815 (left s________)))
 (let (($x1193 ((_ is stack ) ?x815)))
 (let (($x1194 (= c________ left-to-right)))
 (let (($x1195 (and $x1194 $x1193)))
 (let (($x1226 (ite $x1195 $x1209 (ite $x1192 $x1209 (ite $x1190 $x1205 (ite $x1187 $x1206 (ite $x1185 $x1206 $x1209)))))))
 (let ((?x1033 (top ?x815)))
 (let ((?x1172 (stack ?x1033 ?x849)))
 (let (($x1201 (= ?x987 ?x1172)))
 (let (($x1196 (= c________ left-to-center)))
 (let (($x1197 (and $x1196 $x1193)))
 (ite $x1197 $x1201 $x1226)))))))))))))))))))))))))))))))
(assert
 (let ((?x1035 (center s________)))
 (let ((?x1173 (center s_________)))
 (let (($x1211 (= ?x1173 ?x1035)))
 (let ((?x849 (right s________)))
 (let ((?x1180 (top ?x849)))
 (let ((?x1182 (stack ?x1180 ?x1035)))
 (let (($x1208 (= ?x1173 ?x1182)))
 (let (($x1183 ((_ is stack ) ?x849)))
 (let (($x1184 (= c________ right-to-center)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1186 (= c________ right-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x1175 (rest ?x1035)))
 (let (($x1203 (= ?x1173 ?x1175)))
 (let (($x1188 ((_ is stack ) ?x1035)))
 (let (($x1189 (= c________ center-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let (($x1191 (= c________ center-to-left)))
 (let (($x1192 (and $x1191 $x1188)))
 (let ((?x815 (left s________)))
 (let ((?x1033 (top ?x815)))
 (let ((?x1174 (stack ?x1033 ?x1035)))
 (let (($x1202 (= ?x1173 ?x1174)))
 (let (($x1193 ((_ is stack ) ?x815)))
 (let (($x1194 (= c________ left-to-right)))
 (let (($x1195 (and $x1194 $x1193)))
 (let (($x1225 (ite $x1195 $x1202 (ite $x1192 $x1203 (ite $x1190 $x1203 (ite $x1187 $x1211 (ite $x1185 $x1208 $x1211)))))))
 (let (($x1196 (= c________ left-to-center)))
 (let (($x1197 (and $x1196 $x1193)))
 (ite $x1197 $x1211 $x1225)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x953 (left s_________)))
 (let ((?x1091 (left s__________)))
 (let (($x1351 (= ?x1091 ?x953)))
 (let ((?x987 (right s_________)))
 (let ((?x1318 (top ?x987)))
 (let ((?x1319 (stack ?x1318 ?x953)))
 (let (($x1345 (= ?x1091 ?x1319)))
 (let (($x1321 ((_ is stack ) ?x987)))
 (let (($x1324 (= c_________ right-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x1173 (center s_________)))
 (let (($x1326 ((_ is stack ) ?x1173)))
 (let (($x1327 (= c_________ center-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let ((?x1314 (top ?x1173)))
 (let ((?x1315 (stack ?x1314 ?x953)))
 (let (($x1342 (= ?x1091 ?x1315)))
 (let (($x1329 (= c_________ center-to-left)))
 (let (($x1330 (and $x1329 $x1326)))
 (let ((?x1124 (rest ?x953)))
 (let (($x1338 (= ?x1091 ?x1124)))
 (let (($x1331 ((_ is stack ) ?x953)))
 (let (($x1332 (= c_________ left-to-right)))
 (let (($x1333 (and $x1332 $x1331)))
 (let (($x1334 (= c_________ left-to-center)))
 (let (($x1335 (and $x1334 $x1331)))
 (ite $x1335 $x1338 (ite $x1333 $x1338 (ite $x1330 $x1342 (ite $x1328 $x1351 (ite $x1325 $x1345 $x1351))))))))))))))))))))))))))))))))
(assert
 (let ((?x987 (right s_________)))
 (let ((?x1125 (right s__________)))
 (let (($x1347 (= ?x1125 ?x987)))
 (let ((?x1317 (rest ?x987)))
 (let (($x1344 (= ?x1125 ?x1317)))
 (let (($x1321 ((_ is stack ) ?x987)))
 (let (($x1322 (= c_________ right-to-center)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1324 (= c_________ right-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x1173 (center s_________)))
 (let ((?x1314 (top ?x1173)))
 (let ((?x1316 (stack ?x1314 ?x987)))
 (let (($x1343 (= ?x1125 ?x1316)))
 (let (($x1326 ((_ is stack ) ?x1173)))
 (let (($x1327 (= c_________ center-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let (($x1329 (= c_________ center-to-left)))
 (let (($x1330 (and $x1329 $x1326)))
 (let ((?x953 (left s_________)))
 (let (($x1331 ((_ is stack ) ?x953)))
 (let (($x1332 (= c_________ left-to-right)))
 (let (($x1333 (and $x1332 $x1331)))
 (let (($x1364 (ite $x1333 $x1347 (ite $x1330 $x1347 (ite $x1328 $x1343 (ite $x1325 $x1344 (ite $x1323 $x1344 $x1347)))))))
 (let ((?x1171 (top ?x953)))
 (let ((?x1310 (stack ?x1171 ?x987)))
 (let (($x1339 (= ?x1125 ?x1310)))
 (let (($x1334 (= c_________ left-to-center)))
 (let (($x1335 (and $x1334 $x1331)))
 (ite $x1335 $x1339 $x1364)))))))))))))))))))))))))))))))
(assert
 (let ((?x1173 (center s_________)))
 (let ((?x1311 (center s__________)))
 (let (($x1349 (= ?x1311 ?x1173)))
 (let ((?x987 (right s_________)))
 (let ((?x1318 (top ?x987)))
 (let ((?x1320 (stack ?x1318 ?x1173)))
 (let (($x1346 (= ?x1311 ?x1320)))
 (let (($x1321 ((_ is stack ) ?x987)))
 (let (($x1322 (= c_________ right-to-center)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1324 (= c_________ right-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x1313 (rest ?x1173)))
 (let (($x1341 (= ?x1311 ?x1313)))
 (let (($x1326 ((_ is stack ) ?x1173)))
 (let (($x1327 (= c_________ center-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let (($x1329 (= c_________ center-to-left)))
 (let (($x1330 (and $x1329 $x1326)))
 (let ((?x953 (left s_________)))
 (let ((?x1171 (top ?x953)))
 (let ((?x1312 (stack ?x1171 ?x1173)))
 (let (($x1340 (= ?x1311 ?x1312)))
 (let (($x1331 ((_ is stack ) ?x953)))
 (let (($x1332 (= c_________ left-to-right)))
 (let (($x1333 (and $x1332 $x1331)))
 (let (($x1363 (ite $x1333 $x1340 (ite $x1330 $x1341 (ite $x1328 $x1341 (ite $x1325 $x1349 (ite $x1323 $x1346 $x1349)))))))
 (let (($x1334 (= c_________ left-to-center)))
 (let (($x1335 (and $x1334 $x1331)))
 (ite $x1335 $x1349 $x1363)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1091 (left s__________)))
 (let ((?x1229 (left s___________)))
 (let (($x1489 (= ?x1229 ?x1091)))
 (let ((?x1125 (right s__________)))
 (let ((?x1456 (top ?x1125)))
 (let ((?x1457 (stack ?x1456 ?x1091)))
 (let (($x1483 (= ?x1229 ?x1457)))
 (let (($x1459 ((_ is stack ) ?x1125)))
 (let (($x1462 (= c__________ right-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1311 (center s__________)))
 (let (($x1464 ((_ is stack ) ?x1311)))
 (let (($x1465 (= c__________ center-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let ((?x1452 (top ?x1311)))
 (let ((?x1453 (stack ?x1452 ?x1091)))
 (let (($x1480 (= ?x1229 ?x1453)))
 (let (($x1467 (= c__________ center-to-left)))
 (let (($x1468 (and $x1467 $x1464)))
 (let ((?x1262 (rest ?x1091)))
 (let (($x1476 (= ?x1229 ?x1262)))
 (let (($x1469 ((_ is stack ) ?x1091)))
 (let (($x1470 (= c__________ left-to-right)))
 (let (($x1471 (and $x1470 $x1469)))
 (let (($x1472 (= c__________ left-to-center)))
 (let (($x1473 (and $x1472 $x1469)))
 (ite $x1473 $x1476 (ite $x1471 $x1476 (ite $x1468 $x1480 (ite $x1466 $x1489 (ite $x1463 $x1483 $x1489))))))))))))))))))))))))))))))))
(assert
 (let ((?x1125 (right s__________)))
 (let ((?x1263 (right s___________)))
 (let (($x1485 (= ?x1263 ?x1125)))
 (let ((?x1455 (rest ?x1125)))
 (let (($x1482 (= ?x1263 ?x1455)))
 (let (($x1459 ((_ is stack ) ?x1125)))
 (let (($x1460 (= c__________ right-to-center)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1462 (= c__________ right-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1311 (center s__________)))
 (let ((?x1452 (top ?x1311)))
 (let ((?x1454 (stack ?x1452 ?x1125)))
 (let (($x1481 (= ?x1263 ?x1454)))
 (let (($x1464 ((_ is stack ) ?x1311)))
 (let (($x1465 (= c__________ center-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let (($x1467 (= c__________ center-to-left)))
 (let (($x1468 (and $x1467 $x1464)))
 (let ((?x1091 (left s__________)))
 (let (($x1469 ((_ is stack ) ?x1091)))
 (let (($x1470 (= c__________ left-to-right)))
 (let (($x1471 (and $x1470 $x1469)))
 (let (($x1502 (ite $x1471 $x1485 (ite $x1468 $x1485 (ite $x1466 $x1481 (ite $x1463 $x1482 (ite $x1461 $x1482 $x1485)))))))
 (let ((?x1309 (top ?x1091)))
 (let ((?x1448 (stack ?x1309 ?x1125)))
 (let (($x1477 (= ?x1263 ?x1448)))
 (let (($x1472 (= c__________ left-to-center)))
 (let (($x1473 (and $x1472 $x1469)))
 (ite $x1473 $x1477 $x1502)))))))))))))))))))))))))))))))
(assert
 (let ((?x1311 (center s__________)))
 (let ((?x1449 (center s___________)))
 (let (($x1487 (= ?x1449 ?x1311)))
 (let ((?x1125 (right s__________)))
 (let ((?x1456 (top ?x1125)))
 (let ((?x1458 (stack ?x1456 ?x1311)))
 (let (($x1484 (= ?x1449 ?x1458)))
 (let (($x1459 ((_ is stack ) ?x1125)))
 (let (($x1460 (= c__________ right-to-center)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1462 (= c__________ right-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1451 (rest ?x1311)))
 (let (($x1479 (= ?x1449 ?x1451)))
 (let (($x1464 ((_ is stack ) ?x1311)))
 (let (($x1465 (= c__________ center-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let (($x1467 (= c__________ center-to-left)))
 (let (($x1468 (and $x1467 $x1464)))
 (let ((?x1091 (left s__________)))
 (let ((?x1309 (top ?x1091)))
 (let ((?x1450 (stack ?x1309 ?x1311)))
 (let (($x1478 (= ?x1449 ?x1450)))
 (let (($x1469 ((_ is stack ) ?x1091)))
 (let (($x1470 (= c__________ left-to-right)))
 (let (($x1471 (and $x1470 $x1469)))
 (let (($x1501 (ite $x1471 $x1478 (ite $x1468 $x1479 (ite $x1466 $x1479 (ite $x1463 $x1487 (ite $x1461 $x1484 $x1487)))))))
 (let (($x1472 (= c__________ left-to-center)))
 (let (($x1473 (and $x1472 $x1469)))
 (ite $x1473 $x1487 $x1501)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1229 (left s___________)))
 (let ((?x1367 (left s____________)))
 (let (($x1627 (= ?x1367 ?x1229)))
 (let ((?x1263 (right s___________)))
 (let ((?x1594 (top ?x1263)))
 (let ((?x1595 (stack ?x1594 ?x1229)))
 (let (($x1621 (= ?x1367 ?x1595)))
 (let (($x1597 ((_ is stack ) ?x1263)))
 (let (($x1600 (= c___________ right-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1449 (center s___________)))
 (let (($x1602 ((_ is stack ) ?x1449)))
 (let (($x1603 (= c___________ center-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let ((?x1590 (top ?x1449)))
 (let ((?x1591 (stack ?x1590 ?x1229)))
 (let (($x1618 (= ?x1367 ?x1591)))
 (let (($x1605 (= c___________ center-to-left)))
 (let (($x1606 (and $x1605 $x1602)))
 (let ((?x1400 (rest ?x1229)))
 (let (($x1614 (= ?x1367 ?x1400)))
 (let (($x1607 ((_ is stack ) ?x1229)))
 (let (($x1608 (= c___________ left-to-right)))
 (let (($x1609 (and $x1608 $x1607)))
 (let (($x1610 (= c___________ left-to-center)))
 (let (($x1611 (and $x1610 $x1607)))
 (ite $x1611 $x1614 (ite $x1609 $x1614 (ite $x1606 $x1618 (ite $x1604 $x1627 (ite $x1601 $x1621 $x1627))))))))))))))))))))))))))))))))
(assert
 (let ((?x1263 (right s___________)))
 (let ((?x1401 (right s____________)))
 (let (($x1623 (= ?x1401 ?x1263)))
 (let ((?x1593 (rest ?x1263)))
 (let (($x1620 (= ?x1401 ?x1593)))
 (let (($x1597 ((_ is stack ) ?x1263)))
 (let (($x1598 (= c___________ right-to-center)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1600 (= c___________ right-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1449 (center s___________)))
 (let ((?x1590 (top ?x1449)))
 (let ((?x1592 (stack ?x1590 ?x1263)))
 (let (($x1619 (= ?x1401 ?x1592)))
 (let (($x1602 ((_ is stack ) ?x1449)))
 (let (($x1603 (= c___________ center-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let (($x1605 (= c___________ center-to-left)))
 (let (($x1606 (and $x1605 $x1602)))
 (let ((?x1229 (left s___________)))
 (let (($x1607 ((_ is stack ) ?x1229)))
 (let (($x1608 (= c___________ left-to-right)))
 (let (($x1609 (and $x1608 $x1607)))
 (let (($x1640 (ite $x1609 $x1623 (ite $x1606 $x1623 (ite $x1604 $x1619 (ite $x1601 $x1620 (ite $x1599 $x1620 $x1623)))))))
 (let ((?x1447 (top ?x1229)))
 (let ((?x1586 (stack ?x1447 ?x1263)))
 (let (($x1615 (= ?x1401 ?x1586)))
 (let (($x1610 (= c___________ left-to-center)))
 (let (($x1611 (and $x1610 $x1607)))
 (ite $x1611 $x1615 $x1640)))))))))))))))))))))))))))))))
(assert
 (let ((?x1449 (center s___________)))
 (let ((?x1587 (center s____________)))
 (let (($x1625 (= ?x1587 ?x1449)))
 (let ((?x1263 (right s___________)))
 (let ((?x1594 (top ?x1263)))
 (let ((?x1596 (stack ?x1594 ?x1449)))
 (let (($x1622 (= ?x1587 ?x1596)))
 (let (($x1597 ((_ is stack ) ?x1263)))
 (let (($x1598 (= c___________ right-to-center)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1600 (= c___________ right-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1589 (rest ?x1449)))
 (let (($x1617 (= ?x1587 ?x1589)))
 (let (($x1602 ((_ is stack ) ?x1449)))
 (let (($x1603 (= c___________ center-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let (($x1605 (= c___________ center-to-left)))
 (let (($x1606 (and $x1605 $x1602)))
 (let ((?x1229 (left s___________)))
 (let ((?x1447 (top ?x1229)))
 (let ((?x1588 (stack ?x1447 ?x1449)))
 (let (($x1616 (= ?x1587 ?x1588)))
 (let (($x1607 ((_ is stack ) ?x1229)))
 (let (($x1608 (= c___________ left-to-right)))
 (let (($x1609 (and $x1608 $x1607)))
 (let (($x1639 (ite $x1609 $x1616 (ite $x1606 $x1617 (ite $x1604 $x1617 (ite $x1601 $x1625 (ite $x1599 $x1622 $x1625)))))))
 (let (($x1610 (= c___________ left-to-center)))
 (let (($x1611 (and $x1610 $x1607)))
 (ite $x1611 $x1625 $x1639)))))))))))))))))))))))))))))))
(assert
 (let ((?x1401 (right s____________)))
 (let (($x1643 (= ?x1401 empty)))
 (let ((?x24 (stack K empty)))
 (let ((?x1587 (center s____________)))
 (let (($x1674 (= ?x1587 ?x24)))
 (let ((?x39 (stack D (stack C (stack E (stack H (stack J (stack B empty))))))))
 (let ((?x43 (stack F (stack I (stack G (stack A ?x39))))))
 (let ((?x1367 (left s____________)))
 (let (($x1675 (= ?x1367 ?x43)))
 (let (($x1677 (not (and $x1675 $x1674 $x1643))))
 (not $x1677))))))))))))
(check-sat)
(exit)
