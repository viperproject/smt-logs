(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(declare-fun c!19 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x33 (stack I empty)))
 (let ((?x32 (stack Q ?x33)))
 (let ((?x34 (stack E ?x32)))
 (let ((?x35 (stack G ?x34)))
 (let ((?x36 (stack L ?x35)))
 (let ((?x37 (stack O ?x36)))
 (let ((?x38 (stack F ?x37)))
 (let ((?x39 (stack M ?x38)))
 (let ((?x40 (stack H ?x39)))
 (let ((?x41 (stack J ?x40)))
 (let ((?x42 (stack A ?x41)))
 (let ((?x43 (stack C ?x42)))
 (let ((?x44 (stack S ?x43)))
 (let ((?x45 (stack P ?x44)))
 (let ((?x46 (stack K ?x45)))
 (let ((?x47 (stack N ?x46)))
 (let ((?x48 (stack R ?x47)))
 (let ((?x49 (stack T ?x48)))
 (let ((?x118 (left s_tmp_)))
 (= ?x118 ?x49)))))))))))))))))))))
(assert
 (let ((?x121 (center s_tmp__)))
 (= ?x121 empty)))
(assert
 (let ((?x50 (stack B empty)))
 (let ((?x51 (stack D ?x50)))
 (let ((?x124 (right s_tmp___)))
 (= ?x124 ?x51)))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x151 (left s_tmp__)))
 (= (left s_tmp___) ?x151)))
(assert
 (let ((?x121 (center s_tmp__)))
 (= (center s_tmp___) ?x121)))
(assert
 (let ((?x155 (center s_tmp_)))
 (= ?x155 (center s_tmp))))
(assert
 (let ((?x158 (right s_tmp_)))
 (= ?x158 (right s_tmp))))
(assert
 (let ((?x118 (left s_tmp_)))
 (let ((?x151 (left s_tmp__)))
 (= ?x151 ?x118))))
(assert
 (let ((?x158 (right s_tmp_)))
 (let ((?x162 (right s_tmp__)))
 (= ?x162 ?x158))))
(assert
 (= c__ c!1))
(assert
 (let ((?x95 (left s_)))
 (let ((?x269 (left s__)))
 (let (($x311 (= ?x269 ?x95)))
 (let ((?x98 (right s_)))
 (let (($x281 ((_ is stack ) ?x98)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x285 (and $x284 $x281)))
 (let ((?x100 (center s_)))
 (let (($x286 ((_ is stack ) ?x100)))
 (let (($x288 (and (= c_ center-to-right) $x286)))
 (let (($x290 (and (= c_ center-to-left) $x286)))
 (let (($x320 (ite $x290 (= ?x269 (stack (top ?x100) ?x95)) (ite $x288 $x311 (ite $x285 (= ?x269 (stack (top ?x98) ?x95)) $x311)))))
 (let (($x298 (= ?x269 (rest ?x95))))
 (let (($x291 ((_ is stack ) ?x95)))
 (let (($x292 (= c_ left-to-right)))
 (let (($x293 (and $x292 $x291)))
 (let (($x294 (= c_ left-to-center)))
 (let (($x295 (and $x294 $x291)))
 (ite $x295 $x298 (ite $x293 $x298 $x320)))))))))))))))))))))
(assert
 (let ((?x98 (right s_)))
 (let ((?x271 (right s__)))
 (let (($x307 (= ?x271 ?x98)))
 (let (($x304 (= ?x271 (rest ?x98))))
 (let (($x281 ((_ is stack ) ?x98)))
 (let (($x282 (= c_ right-to-center)))
 (let (($x283 (and $x282 $x281)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x285 (and $x284 $x281)))
 (let ((?x100 (center s_)))
 (let (($x286 ((_ is stack ) ?x100)))
 (let (($x288 (and (= c_ center-to-right) $x286)))
 (let (($x317 (ite $x288 (= ?x271 (stack (top ?x100) ?x98)) (ite $x285 $x304 (ite $x283 $x304 $x307)))))
 (let (($x290 (and (= c_ center-to-left) $x286)))
 (let ((?x95 (left s_)))
 (let (($x291 ((_ is stack ) ?x95)))
 (let (($x292 (= c_ left-to-right)))
 (let (($x293 (and $x292 $x291)))
 (let (($x294 (= c_ left-to-center)))
 (let (($x295 (and $x294 $x291)))
 (ite $x295 (= ?x271 (stack (top ?x95) ?x98)) (ite $x293 $x307 (ite $x290 $x307 $x317))))))))))))))))))))))))
(assert
 (let ((?x100 (center s_)))
 (let ((?x265 (center s__)))
 (let (($x309 (= ?x265 ?x100)))
 (let ((?x98 (right s_)))
 (let (($x281 ((_ is stack ) ?x98)))
 (let (($x282 (= c_ right-to-center)))
 (let (($x283 (and $x282 $x281)))
 (let (($x284 (= c_ right-to-left)))
 (let (($x285 (and $x284 $x281)))
 (let (($x301 (= ?x265 (rest ?x100))))
 (let (($x286 ((_ is stack ) ?x100)))
 (let (($x288 (and (= c_ center-to-right) $x286)))
 (let (($x316 (ite $x288 $x301 (ite $x285 $x309 (ite $x283 (= ?x265 (stack (top ?x98) ?x100)) $x309)))))
 (let (($x290 (and (= c_ center-to-left) $x286)))
 (let ((?x95 (left s_)))
 (let (($x291 ((_ is stack ) ?x95)))
 (let (($x292 (= c_ left-to-right)))
 (let (($x293 (and $x292 $x291)))
 (let (($x294 (= c_ left-to-center)))
 (let (($x295 (and $x294 $x291)))
 (ite $x295 $x309 (ite $x293 (= ?x265 (stack (top ?x95) ?x100)) (ite $x290 $x301 $x316))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x269 (left s__)))
 (let ((?x165 (left s___)))
 (let (($x423 (= ?x165 ?x269)))
 (let ((?x271 (right s__)))
 (let ((?x390 (top ?x271)))
 (let ((?x391 (stack ?x390 ?x269)))
 (let (($x417 (= ?x165 ?x391)))
 (let (($x393 ((_ is stack ) ?x271)))
 (let (($x396 (= c__ right-to-left)))
 (let (($x397 (and $x396 $x393)))
 (let ((?x265 (center s__)))
 (let (($x398 ((_ is stack ) ?x265)))
 (let (($x399 (= c__ center-to-right)))
 (let (($x400 (and $x399 $x398)))
 (let ((?x386 (top ?x265)))
 (let ((?x387 (stack ?x386 ?x269)))
 (let (($x414 (= ?x165 ?x387)))
 (let (($x401 (= c__ center-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x167 (rest ?x269)))
 (let (($x410 (= ?x165 ?x167)))
 (let (($x403 ((_ is stack ) ?x269)))
 (let (($x404 (= c__ left-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let (($x406 (= c__ left-to-center)))
 (let (($x407 (and $x406 $x403)))
 (ite $x407 $x410 (ite $x405 $x410 (ite $x402 $x414 (ite $x400 $x423 (ite $x397 $x417 $x423))))))))))))))))))))))))))))))))
(assert
 (let ((?x271 (right s__)))
 (let ((?x168 (right s___)))
 (let (($x419 (= ?x168 ?x271)))
 (let ((?x389 (rest ?x271)))
 (let (($x416 (= ?x168 ?x389)))
 (let (($x393 ((_ is stack ) ?x271)))
 (let (($x394 (= c__ right-to-center)))
 (let (($x395 (and $x394 $x393)))
 (let (($x396 (= c__ right-to-left)))
 (let (($x397 (and $x396 $x393)))
 (let ((?x265 (center s__)))
 (let ((?x386 (top ?x265)))
 (let ((?x388 (stack ?x386 ?x271)))
 (let (($x415 (= ?x168 ?x388)))
 (let (($x398 ((_ is stack ) ?x265)))
 (let (($x399 (= c__ center-to-right)))
 (let (($x400 (and $x399 $x398)))
 (let (($x401 (= c__ center-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x269 (left s__)))
 (let (($x403 ((_ is stack ) ?x269)))
 (let (($x404 (= c__ left-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let (($x436 (ite $x405 $x419 (ite $x402 $x419 (ite $x400 $x415 (ite $x397 $x416 (ite $x395 $x416 $x419)))))))
 (let ((?x263 (top ?x269)))
 (let ((?x382 (stack ?x263 ?x271)))
 (let (($x411 (= ?x168 ?x382)))
 (let (($x406 (= c__ left-to-center)))
 (let (($x407 (and $x406 $x403)))
 (ite $x407 $x411 $x436)))))))))))))))))))))))))))))))
(assert
 (let ((?x265 (center s__)))
 (let ((?x383 (center s___)))
 (let (($x421 (= ?x383 ?x265)))
 (let ((?x271 (right s__)))
 (let ((?x390 (top ?x271)))
 (let ((?x392 (stack ?x390 ?x265)))
 (let (($x418 (= ?x383 ?x392)))
 (let (($x393 ((_ is stack ) ?x271)))
 (let (($x394 (= c__ right-to-center)))
 (let (($x395 (and $x394 $x393)))
 (let (($x396 (= c__ right-to-left)))
 (let (($x397 (and $x396 $x393)))
 (let ((?x385 (rest ?x265)))
 (let (($x413 (= ?x383 ?x385)))
 (let (($x398 ((_ is stack ) ?x265)))
 (let (($x399 (= c__ center-to-right)))
 (let (($x400 (and $x399 $x398)))
 (let (($x401 (= c__ center-to-left)))
 (let (($x402 (and $x401 $x398)))
 (let ((?x269 (left s__)))
 (let ((?x263 (top ?x269)))
 (let ((?x384 (stack ?x263 ?x265)))
 (let (($x412 (= ?x383 ?x384)))
 (let (($x403 ((_ is stack ) ?x269)))
 (let (($x404 (= c__ left-to-right)))
 (let (($x405 (and $x404 $x403)))
 (let (($x435 (ite $x405 $x412 (ite $x402 $x413 (ite $x400 $x413 (ite $x397 $x421 (ite $x395 $x418 $x421)))))))
 (let (($x406 (= c__ left-to-center)))
 (let (($x407 (and $x406 $x403)))
 (ite $x407 $x421 $x435)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x165 (left s___)))
 (let ((?x327 (left s____)))
 (let (($x561 (= ?x327 ?x165)))
 (let ((?x168 (right s___)))
 (let ((?x528 (top ?x168)))
 (let ((?x529 (stack ?x528 ?x165)))
 (let (($x555 (= ?x327 ?x529)))
 (let (($x531 ((_ is stack ) ?x168)))
 (let (($x534 (= c___ right-to-left)))
 (let (($x535 (and $x534 $x531)))
 (let ((?x383 (center s___)))
 (let (($x536 ((_ is stack ) ?x383)))
 (let (($x537 (= c___ center-to-right)))
 (let (($x538 (and $x537 $x536)))
 (let ((?x524 (top ?x383)))
 (let ((?x525 (stack ?x524 ?x165)))
 (let (($x552 (= ?x327 ?x525)))
 (let (($x539 (= c___ center-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x359 (rest ?x165)))
 (let (($x548 (= ?x327 ?x359)))
 (let (($x541 ((_ is stack ) ?x165)))
 (let (($x542 (= c___ left-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let (($x544 (= c___ left-to-center)))
 (let (($x545 (and $x544 $x541)))
 (ite $x545 $x548 (ite $x543 $x548 (ite $x540 $x552 (ite $x538 $x561 (ite $x535 $x555 $x561))))))))))))))))))))))))))))))))
(assert
 (let ((?x168 (right s___)))
 (let ((?x360 (right s____)))
 (let (($x557 (= ?x360 ?x168)))
 (let ((?x527 (rest ?x168)))
 (let (($x554 (= ?x360 ?x527)))
 (let (($x531 ((_ is stack ) ?x168)))
 (let (($x532 (= c___ right-to-center)))
 (let (($x533 (and $x532 $x531)))
 (let (($x534 (= c___ right-to-left)))
 (let (($x535 (and $x534 $x531)))
 (let ((?x383 (center s___)))
 (let ((?x524 (top ?x383)))
 (let ((?x526 (stack ?x524 ?x168)))
 (let (($x553 (= ?x360 ?x526)))
 (let (($x536 ((_ is stack ) ?x383)))
 (let (($x537 (= c___ center-to-right)))
 (let (($x538 (and $x537 $x536)))
 (let (($x539 (= c___ center-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x165 (left s___)))
 (let (($x541 ((_ is stack ) ?x165)))
 (let (($x542 (= c___ left-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let (($x574 (ite $x543 $x557 (ite $x540 $x557 (ite $x538 $x553 (ite $x535 $x554 (ite $x533 $x554 $x557)))))))
 (let ((?x381 (top ?x165)))
 (let ((?x520 (stack ?x381 ?x168)))
 (let (($x549 (= ?x360 ?x520)))
 (let (($x544 (= c___ left-to-center)))
 (let (($x545 (and $x544 $x541)))
 (ite $x545 $x549 $x574)))))))))))))))))))))))))))))))
(assert
 (let ((?x383 (center s___)))
 (let ((?x521 (center s____)))
 (let (($x559 (= ?x521 ?x383)))
 (let ((?x168 (right s___)))
 (let ((?x528 (top ?x168)))
 (let ((?x530 (stack ?x528 ?x383)))
 (let (($x556 (= ?x521 ?x530)))
 (let (($x531 ((_ is stack ) ?x168)))
 (let (($x532 (= c___ right-to-center)))
 (let (($x533 (and $x532 $x531)))
 (let (($x534 (= c___ right-to-left)))
 (let (($x535 (and $x534 $x531)))
 (let ((?x523 (rest ?x383)))
 (let (($x551 (= ?x521 ?x523)))
 (let (($x536 ((_ is stack ) ?x383)))
 (let (($x537 (= c___ center-to-right)))
 (let (($x538 (and $x537 $x536)))
 (let (($x539 (= c___ center-to-left)))
 (let (($x540 (and $x539 $x536)))
 (let ((?x165 (left s___)))
 (let ((?x381 (top ?x165)))
 (let ((?x522 (stack ?x381 ?x383)))
 (let (($x550 (= ?x521 ?x522)))
 (let (($x541 ((_ is stack ) ?x165)))
 (let (($x542 (= c___ left-to-right)))
 (let (($x543 (and $x542 $x541)))
 (let (($x573 (ite $x543 $x550 (ite $x540 $x551 (ite $x538 $x551 (ite $x535 $x559 (ite $x533 $x556 $x559)))))))
 (let (($x544 (= c___ left-to-center)))
 (let (($x545 (and $x544 $x541)))
 (ite $x545 $x559 $x573)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x327 (left s____)))
 (let ((?x439 (left s_____)))
 (let (($x699 (= ?x439 ?x327)))
 (let ((?x360 (right s____)))
 (let ((?x666 (top ?x360)))
 (let ((?x667 (stack ?x666 ?x327)))
 (let (($x693 (= ?x439 ?x667)))
 (let (($x669 ((_ is stack ) ?x360)))
 (let (($x672 (= c____ right-to-left)))
 (let (($x673 (and $x672 $x669)))
 (let ((?x521 (center s____)))
 (let (($x674 ((_ is stack ) ?x521)))
 (let (($x675 (= c____ center-to-right)))
 (let (($x676 (and $x675 $x674)))
 (let ((?x662 (top ?x521)))
 (let ((?x663 (stack ?x662 ?x327)))
 (let (($x690 (= ?x439 ?x663)))
 (let (($x677 (= c____ center-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x472 (rest ?x327)))
 (let (($x686 (= ?x439 ?x472)))
 (let (($x679 ((_ is stack ) ?x327)))
 (let (($x680 (= c____ left-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let (($x682 (= c____ left-to-center)))
 (let (($x683 (and $x682 $x679)))
 (ite $x683 $x686 (ite $x681 $x686 (ite $x678 $x690 (ite $x676 $x699 (ite $x673 $x693 $x699))))))))))))))))))))))))))))))))
(assert
 (let ((?x360 (right s____)))
 (let ((?x473 (right s_____)))
 (let (($x695 (= ?x473 ?x360)))
 (let ((?x665 (rest ?x360)))
 (let (($x692 (= ?x473 ?x665)))
 (let (($x669 ((_ is stack ) ?x360)))
 (let (($x670 (= c____ right-to-center)))
 (let (($x671 (and $x670 $x669)))
 (let (($x672 (= c____ right-to-left)))
 (let (($x673 (and $x672 $x669)))
 (let ((?x521 (center s____)))
 (let ((?x662 (top ?x521)))
 (let ((?x664 (stack ?x662 ?x360)))
 (let (($x691 (= ?x473 ?x664)))
 (let (($x674 ((_ is stack ) ?x521)))
 (let (($x675 (= c____ center-to-right)))
 (let (($x676 (and $x675 $x674)))
 (let (($x677 (= c____ center-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x327 (left s____)))
 (let (($x679 ((_ is stack ) ?x327)))
 (let (($x680 (= c____ left-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let (($x712 (ite $x681 $x695 (ite $x678 $x695 (ite $x676 $x691 (ite $x673 $x692 (ite $x671 $x692 $x695)))))))
 (let ((?x519 (top ?x327)))
 (let ((?x658 (stack ?x519 ?x360)))
 (let (($x687 (= ?x473 ?x658)))
 (let (($x682 (= c____ left-to-center)))
 (let (($x683 (and $x682 $x679)))
 (ite $x683 $x687 $x712)))))))))))))))))))))))))))))))
(assert
 (let ((?x521 (center s____)))
 (let ((?x659 (center s_____)))
 (let (($x697 (= ?x659 ?x521)))
 (let ((?x360 (right s____)))
 (let ((?x666 (top ?x360)))
 (let ((?x668 (stack ?x666 ?x521)))
 (let (($x694 (= ?x659 ?x668)))
 (let (($x669 ((_ is stack ) ?x360)))
 (let (($x670 (= c____ right-to-center)))
 (let (($x671 (and $x670 $x669)))
 (let (($x672 (= c____ right-to-left)))
 (let (($x673 (and $x672 $x669)))
 (let ((?x661 (rest ?x521)))
 (let (($x689 (= ?x659 ?x661)))
 (let (($x674 ((_ is stack ) ?x521)))
 (let (($x675 (= c____ center-to-right)))
 (let (($x676 (and $x675 $x674)))
 (let (($x677 (= c____ center-to-left)))
 (let (($x678 (and $x677 $x674)))
 (let ((?x327 (left s____)))
 (let ((?x519 (top ?x327)))
 (let ((?x660 (stack ?x519 ?x521)))
 (let (($x688 (= ?x659 ?x660)))
 (let (($x679 ((_ is stack ) ?x327)))
 (let (($x680 (= c____ left-to-right)))
 (let (($x681 (and $x680 $x679)))
 (let (($x711 (ite $x681 $x688 (ite $x678 $x689 (ite $x676 $x689 (ite $x673 $x697 (ite $x671 $x694 $x697)))))))
 (let (($x682 (= c____ left-to-center)))
 (let (($x683 (and $x682 $x679)))
 (ite $x683 $x697 $x711)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x439 (left s_____)))
 (let ((?x577 (left s______)))
 (let (($x837 (= ?x577 ?x439)))
 (let ((?x473 (right s_____)))
 (let ((?x804 (top ?x473)))
 (let ((?x805 (stack ?x804 ?x439)))
 (let (($x831 (= ?x577 ?x805)))
 (let (($x807 ((_ is stack ) ?x473)))
 (let (($x810 (= c_____ right-to-left)))
 (let (($x811 (and $x810 $x807)))
 (let ((?x659 (center s_____)))
 (let (($x812 ((_ is stack ) ?x659)))
 (let (($x813 (= c_____ center-to-right)))
 (let (($x814 (and $x813 $x812)))
 (let ((?x800 (top ?x659)))
 (let ((?x801 (stack ?x800 ?x439)))
 (let (($x828 (= ?x577 ?x801)))
 (let (($x815 (= c_____ center-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x610 (rest ?x439)))
 (let (($x824 (= ?x577 ?x610)))
 (let (($x817 ((_ is stack ) ?x439)))
 (let (($x818 (= c_____ left-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let (($x820 (= c_____ left-to-center)))
 (let (($x821 (and $x820 $x817)))
 (ite $x821 $x824 (ite $x819 $x824 (ite $x816 $x828 (ite $x814 $x837 (ite $x811 $x831 $x837))))))))))))))))))))))))))))))))
(assert
 (let ((?x473 (right s_____)))
 (let ((?x611 (right s______)))
 (let (($x833 (= ?x611 ?x473)))
 (let ((?x803 (rest ?x473)))
 (let (($x830 (= ?x611 ?x803)))
 (let (($x807 ((_ is stack ) ?x473)))
 (let (($x808 (= c_____ right-to-center)))
 (let (($x809 (and $x808 $x807)))
 (let (($x810 (= c_____ right-to-left)))
 (let (($x811 (and $x810 $x807)))
 (let ((?x659 (center s_____)))
 (let ((?x800 (top ?x659)))
 (let ((?x802 (stack ?x800 ?x473)))
 (let (($x829 (= ?x611 ?x802)))
 (let (($x812 ((_ is stack ) ?x659)))
 (let (($x813 (= c_____ center-to-right)))
 (let (($x814 (and $x813 $x812)))
 (let (($x815 (= c_____ center-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x439 (left s_____)))
 (let (($x817 ((_ is stack ) ?x439)))
 (let (($x818 (= c_____ left-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let (($x850 (ite $x819 $x833 (ite $x816 $x833 (ite $x814 $x829 (ite $x811 $x830 (ite $x809 $x830 $x833)))))))
 (let ((?x657 (top ?x439)))
 (let ((?x796 (stack ?x657 ?x473)))
 (let (($x825 (= ?x611 ?x796)))
 (let (($x820 (= c_____ left-to-center)))
 (let (($x821 (and $x820 $x817)))
 (ite $x821 $x825 $x850)))))))))))))))))))))))))))))))
(assert
 (let ((?x659 (center s_____)))
 (let ((?x797 (center s______)))
 (let (($x835 (= ?x797 ?x659)))
 (let ((?x473 (right s_____)))
 (let ((?x804 (top ?x473)))
 (let ((?x806 (stack ?x804 ?x659)))
 (let (($x832 (= ?x797 ?x806)))
 (let (($x807 ((_ is stack ) ?x473)))
 (let (($x808 (= c_____ right-to-center)))
 (let (($x809 (and $x808 $x807)))
 (let (($x810 (= c_____ right-to-left)))
 (let (($x811 (and $x810 $x807)))
 (let ((?x799 (rest ?x659)))
 (let (($x827 (= ?x797 ?x799)))
 (let (($x812 ((_ is stack ) ?x659)))
 (let (($x813 (= c_____ center-to-right)))
 (let (($x814 (and $x813 $x812)))
 (let (($x815 (= c_____ center-to-left)))
 (let (($x816 (and $x815 $x812)))
 (let ((?x439 (left s_____)))
 (let ((?x657 (top ?x439)))
 (let ((?x798 (stack ?x657 ?x659)))
 (let (($x826 (= ?x797 ?x798)))
 (let (($x817 ((_ is stack ) ?x439)))
 (let (($x818 (= c_____ left-to-right)))
 (let (($x819 (and $x818 $x817)))
 (let (($x849 (ite $x819 $x826 (ite $x816 $x827 (ite $x814 $x827 (ite $x811 $x835 (ite $x809 $x832 $x835)))))))
 (let (($x820 (= c_____ left-to-center)))
 (let (($x821 (and $x820 $x817)))
 (ite $x821 $x835 $x849)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x577 (left s______)))
 (let ((?x715 (left s_______)))
 (let (($x975 (= ?x715 ?x577)))
 (let ((?x611 (right s______)))
 (let ((?x942 (top ?x611)))
 (let ((?x943 (stack ?x942 ?x577)))
 (let (($x969 (= ?x715 ?x943)))
 (let (($x945 ((_ is stack ) ?x611)))
 (let (($x948 (= c______ right-to-left)))
 (let (($x949 (and $x948 $x945)))
 (let ((?x797 (center s______)))
 (let (($x950 ((_ is stack ) ?x797)))
 (let (($x951 (= c______ center-to-right)))
 (let (($x952 (and $x951 $x950)))
 (let ((?x938 (top ?x797)))
 (let ((?x939 (stack ?x938 ?x577)))
 (let (($x966 (= ?x715 ?x939)))
 (let (($x953 (= c______ center-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x748 (rest ?x577)))
 (let (($x962 (= ?x715 ?x748)))
 (let (($x955 ((_ is stack ) ?x577)))
 (let (($x956 (= c______ left-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let (($x958 (= c______ left-to-center)))
 (let (($x959 (and $x958 $x955)))
 (ite $x959 $x962 (ite $x957 $x962 (ite $x954 $x966 (ite $x952 $x975 (ite $x949 $x969 $x975))))))))))))))))))))))))))))))))
(assert
 (let ((?x611 (right s______)))
 (let ((?x749 (right s_______)))
 (let (($x971 (= ?x749 ?x611)))
 (let ((?x941 (rest ?x611)))
 (let (($x968 (= ?x749 ?x941)))
 (let (($x945 ((_ is stack ) ?x611)))
 (let (($x946 (= c______ right-to-center)))
 (let (($x947 (and $x946 $x945)))
 (let (($x948 (= c______ right-to-left)))
 (let (($x949 (and $x948 $x945)))
 (let ((?x797 (center s______)))
 (let ((?x938 (top ?x797)))
 (let ((?x940 (stack ?x938 ?x611)))
 (let (($x967 (= ?x749 ?x940)))
 (let (($x950 ((_ is stack ) ?x797)))
 (let (($x951 (= c______ center-to-right)))
 (let (($x952 (and $x951 $x950)))
 (let (($x953 (= c______ center-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x577 (left s______)))
 (let (($x955 ((_ is stack ) ?x577)))
 (let (($x956 (= c______ left-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let (($x988 (ite $x957 $x971 (ite $x954 $x971 (ite $x952 $x967 (ite $x949 $x968 (ite $x947 $x968 $x971)))))))
 (let ((?x795 (top ?x577)))
 (let ((?x934 (stack ?x795 ?x611)))
 (let (($x963 (= ?x749 ?x934)))
 (let (($x958 (= c______ left-to-center)))
 (let (($x959 (and $x958 $x955)))
 (ite $x959 $x963 $x988)))))))))))))))))))))))))))))))
(assert
 (let ((?x797 (center s______)))
 (let ((?x935 (center s_______)))
 (let (($x973 (= ?x935 ?x797)))
 (let ((?x611 (right s______)))
 (let ((?x942 (top ?x611)))
 (let ((?x944 (stack ?x942 ?x797)))
 (let (($x970 (= ?x935 ?x944)))
 (let (($x945 ((_ is stack ) ?x611)))
 (let (($x946 (= c______ right-to-center)))
 (let (($x947 (and $x946 $x945)))
 (let (($x948 (= c______ right-to-left)))
 (let (($x949 (and $x948 $x945)))
 (let ((?x937 (rest ?x797)))
 (let (($x965 (= ?x935 ?x937)))
 (let (($x950 ((_ is stack ) ?x797)))
 (let (($x951 (= c______ center-to-right)))
 (let (($x952 (and $x951 $x950)))
 (let (($x953 (= c______ center-to-left)))
 (let (($x954 (and $x953 $x950)))
 (let ((?x577 (left s______)))
 (let ((?x795 (top ?x577)))
 (let ((?x936 (stack ?x795 ?x797)))
 (let (($x964 (= ?x935 ?x936)))
 (let (($x955 ((_ is stack ) ?x577)))
 (let (($x956 (= c______ left-to-right)))
 (let (($x957 (and $x956 $x955)))
 (let (($x987 (ite $x957 $x964 (ite $x954 $x965 (ite $x952 $x965 (ite $x949 $x973 (ite $x947 $x970 $x973)))))))
 (let (($x958 (= c______ left-to-center)))
 (let (($x959 (and $x958 $x955)))
 (ite $x959 $x973 $x987)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x715 (left s_______)))
 (let ((?x853 (left s________)))
 (let (($x1113 (= ?x853 ?x715)))
 (let ((?x749 (right s_______)))
 (let ((?x1080 (top ?x749)))
 (let ((?x1081 (stack ?x1080 ?x715)))
 (let (($x1107 (= ?x853 ?x1081)))
 (let (($x1083 ((_ is stack ) ?x749)))
 (let (($x1086 (= c_______ right-to-left)))
 (let (($x1087 (and $x1086 $x1083)))
 (let ((?x935 (center s_______)))
 (let (($x1088 ((_ is stack ) ?x935)))
 (let (($x1089 (= c_______ center-to-right)))
 (let (($x1090 (and $x1089 $x1088)))
 (let ((?x1076 (top ?x935)))
 (let ((?x1077 (stack ?x1076 ?x715)))
 (let (($x1104 (= ?x853 ?x1077)))
 (let (($x1091 (= c_______ center-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x886 (rest ?x715)))
 (let (($x1100 (= ?x853 ?x886)))
 (let (($x1093 ((_ is stack ) ?x715)))
 (let (($x1094 (= c_______ left-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1096 (= c_______ left-to-center)))
 (let (($x1097 (and $x1096 $x1093)))
 (ite $x1097 $x1100 (ite $x1095 $x1100 (ite $x1092 $x1104 (ite $x1090 $x1113 (ite $x1087 $x1107 $x1113))))))))))))))))))))))))))))))))
(assert
 (let ((?x749 (right s_______)))
 (let ((?x887 (right s________)))
 (let (($x1109 (= ?x887 ?x749)))
 (let ((?x1079 (rest ?x749)))
 (let (($x1106 (= ?x887 ?x1079)))
 (let (($x1083 ((_ is stack ) ?x749)))
 (let (($x1084 (= c_______ right-to-center)))
 (let (($x1085 (and $x1084 $x1083)))
 (let (($x1086 (= c_______ right-to-left)))
 (let (($x1087 (and $x1086 $x1083)))
 (let ((?x935 (center s_______)))
 (let ((?x1076 (top ?x935)))
 (let ((?x1078 (stack ?x1076 ?x749)))
 (let (($x1105 (= ?x887 ?x1078)))
 (let (($x1088 ((_ is stack ) ?x935)))
 (let (($x1089 (= c_______ center-to-right)))
 (let (($x1090 (and $x1089 $x1088)))
 (let (($x1091 (= c_______ center-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x715 (left s_______)))
 (let (($x1093 ((_ is stack ) ?x715)))
 (let (($x1094 (= c_______ left-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1126 (ite $x1095 $x1109 (ite $x1092 $x1109 (ite $x1090 $x1105 (ite $x1087 $x1106 (ite $x1085 $x1106 $x1109)))))))
 (let ((?x933 (top ?x715)))
 (let ((?x1072 (stack ?x933 ?x749)))
 (let (($x1101 (= ?x887 ?x1072)))
 (let (($x1096 (= c_______ left-to-center)))
 (let (($x1097 (and $x1096 $x1093)))
 (ite $x1097 $x1101 $x1126)))))))))))))))))))))))))))))))
(assert
 (let ((?x935 (center s_______)))
 (let ((?x1073 (center s________)))
 (let (($x1111 (= ?x1073 ?x935)))
 (let ((?x749 (right s_______)))
 (let ((?x1080 (top ?x749)))
 (let ((?x1082 (stack ?x1080 ?x935)))
 (let (($x1108 (= ?x1073 ?x1082)))
 (let (($x1083 ((_ is stack ) ?x749)))
 (let (($x1084 (= c_______ right-to-center)))
 (let (($x1085 (and $x1084 $x1083)))
 (let (($x1086 (= c_______ right-to-left)))
 (let (($x1087 (and $x1086 $x1083)))
 (let ((?x1075 (rest ?x935)))
 (let (($x1103 (= ?x1073 ?x1075)))
 (let (($x1088 ((_ is stack ) ?x935)))
 (let (($x1089 (= c_______ center-to-right)))
 (let (($x1090 (and $x1089 $x1088)))
 (let (($x1091 (= c_______ center-to-left)))
 (let (($x1092 (and $x1091 $x1088)))
 (let ((?x715 (left s_______)))
 (let ((?x933 (top ?x715)))
 (let ((?x1074 (stack ?x933 ?x935)))
 (let (($x1102 (= ?x1073 ?x1074)))
 (let (($x1093 ((_ is stack ) ?x715)))
 (let (($x1094 (= c_______ left-to-right)))
 (let (($x1095 (and $x1094 $x1093)))
 (let (($x1125 (ite $x1095 $x1102 (ite $x1092 $x1103 (ite $x1090 $x1103 (ite $x1087 $x1111 (ite $x1085 $x1108 $x1111)))))))
 (let (($x1096 (= c_______ left-to-center)))
 (let (($x1097 (and $x1096 $x1093)))
 (ite $x1097 $x1111 $x1125)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x853 (left s________)))
 (let ((?x991 (left s_________)))
 (let (($x1251 (= ?x991 ?x853)))
 (let ((?x887 (right s________)))
 (let ((?x1218 (top ?x887)))
 (let ((?x1219 (stack ?x1218 ?x853)))
 (let (($x1245 (= ?x991 ?x1219)))
 (let (($x1221 ((_ is stack ) ?x887)))
 (let (($x1224 (= c________ right-to-left)))
 (let (($x1225 (and $x1224 $x1221)))
 (let ((?x1073 (center s________)))
 (let (($x1226 ((_ is stack ) ?x1073)))
 (let (($x1227 (= c________ center-to-right)))
 (let (($x1228 (and $x1227 $x1226)))
 (let ((?x1214 (top ?x1073)))
 (let ((?x1215 (stack ?x1214 ?x853)))
 (let (($x1242 (= ?x991 ?x1215)))
 (let (($x1229 (= c________ center-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x1024 (rest ?x853)))
 (let (($x1238 (= ?x991 ?x1024)))
 (let (($x1231 ((_ is stack ) ?x853)))
 (let (($x1232 (= c________ left-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1234 (= c________ left-to-center)))
 (let (($x1235 (and $x1234 $x1231)))
 (ite $x1235 $x1238 (ite $x1233 $x1238 (ite $x1230 $x1242 (ite $x1228 $x1251 (ite $x1225 $x1245 $x1251))))))))))))))))))))))))))))))))
(assert
 (let ((?x887 (right s________)))
 (let ((?x1025 (right s_________)))
 (let (($x1247 (= ?x1025 ?x887)))
 (let ((?x1217 (rest ?x887)))
 (let (($x1244 (= ?x1025 ?x1217)))
 (let (($x1221 ((_ is stack ) ?x887)))
 (let (($x1222 (= c________ right-to-center)))
 (let (($x1223 (and $x1222 $x1221)))
 (let (($x1224 (= c________ right-to-left)))
 (let (($x1225 (and $x1224 $x1221)))
 (let ((?x1073 (center s________)))
 (let ((?x1214 (top ?x1073)))
 (let ((?x1216 (stack ?x1214 ?x887)))
 (let (($x1243 (= ?x1025 ?x1216)))
 (let (($x1226 ((_ is stack ) ?x1073)))
 (let (($x1227 (= c________ center-to-right)))
 (let (($x1228 (and $x1227 $x1226)))
 (let (($x1229 (= c________ center-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x853 (left s________)))
 (let (($x1231 ((_ is stack ) ?x853)))
 (let (($x1232 (= c________ left-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1264 (ite $x1233 $x1247 (ite $x1230 $x1247 (ite $x1228 $x1243 (ite $x1225 $x1244 (ite $x1223 $x1244 $x1247)))))))
 (let ((?x1071 (top ?x853)))
 (let ((?x1210 (stack ?x1071 ?x887)))
 (let (($x1239 (= ?x1025 ?x1210)))
 (let (($x1234 (= c________ left-to-center)))
 (let (($x1235 (and $x1234 $x1231)))
 (ite $x1235 $x1239 $x1264)))))))))))))))))))))))))))))))
(assert
 (let ((?x1073 (center s________)))
 (let ((?x1211 (center s_________)))
 (let (($x1249 (= ?x1211 ?x1073)))
 (let ((?x887 (right s________)))
 (let ((?x1218 (top ?x887)))
 (let ((?x1220 (stack ?x1218 ?x1073)))
 (let (($x1246 (= ?x1211 ?x1220)))
 (let (($x1221 ((_ is stack ) ?x887)))
 (let (($x1222 (= c________ right-to-center)))
 (let (($x1223 (and $x1222 $x1221)))
 (let (($x1224 (= c________ right-to-left)))
 (let (($x1225 (and $x1224 $x1221)))
 (let ((?x1213 (rest ?x1073)))
 (let (($x1241 (= ?x1211 ?x1213)))
 (let (($x1226 ((_ is stack ) ?x1073)))
 (let (($x1227 (= c________ center-to-right)))
 (let (($x1228 (and $x1227 $x1226)))
 (let (($x1229 (= c________ center-to-left)))
 (let (($x1230 (and $x1229 $x1226)))
 (let ((?x853 (left s________)))
 (let ((?x1071 (top ?x853)))
 (let ((?x1212 (stack ?x1071 ?x1073)))
 (let (($x1240 (= ?x1211 ?x1212)))
 (let (($x1231 ((_ is stack ) ?x853)))
 (let (($x1232 (= c________ left-to-right)))
 (let (($x1233 (and $x1232 $x1231)))
 (let (($x1263 (ite $x1233 $x1240 (ite $x1230 $x1241 (ite $x1228 $x1241 (ite $x1225 $x1249 (ite $x1223 $x1246 $x1249)))))))
 (let (($x1234 (= c________ left-to-center)))
 (let (($x1235 (and $x1234 $x1231)))
 (ite $x1235 $x1249 $x1263)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x991 (left s_________)))
 (let ((?x1129 (left s__________)))
 (let (($x1389 (= ?x1129 ?x991)))
 (let ((?x1025 (right s_________)))
 (let ((?x1356 (top ?x1025)))
 (let ((?x1357 (stack ?x1356 ?x991)))
 (let (($x1383 (= ?x1129 ?x1357)))
 (let (($x1359 ((_ is stack ) ?x1025)))
 (let (($x1362 (= c_________ right-to-left)))
 (let (($x1363 (and $x1362 $x1359)))
 (let ((?x1211 (center s_________)))
 (let (($x1364 ((_ is stack ) ?x1211)))
 (let (($x1365 (= c_________ center-to-right)))
 (let (($x1366 (and $x1365 $x1364)))
 (let ((?x1352 (top ?x1211)))
 (let ((?x1353 (stack ?x1352 ?x991)))
 (let (($x1380 (= ?x1129 ?x1353)))
 (let (($x1367 (= c_________ center-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x1162 (rest ?x991)))
 (let (($x1376 (= ?x1129 ?x1162)))
 (let (($x1369 ((_ is stack ) ?x991)))
 (let (($x1370 (= c_________ left-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1372 (= c_________ left-to-center)))
 (let (($x1373 (and $x1372 $x1369)))
 (ite $x1373 $x1376 (ite $x1371 $x1376 (ite $x1368 $x1380 (ite $x1366 $x1389 (ite $x1363 $x1383 $x1389))))))))))))))))))))))))))))))))
(assert
 (let ((?x1025 (right s_________)))
 (let ((?x1163 (right s__________)))
 (let (($x1385 (= ?x1163 ?x1025)))
 (let ((?x1355 (rest ?x1025)))
 (let (($x1382 (= ?x1163 ?x1355)))
 (let (($x1359 ((_ is stack ) ?x1025)))
 (let (($x1360 (= c_________ right-to-center)))
 (let (($x1361 (and $x1360 $x1359)))
 (let (($x1362 (= c_________ right-to-left)))
 (let (($x1363 (and $x1362 $x1359)))
 (let ((?x1211 (center s_________)))
 (let ((?x1352 (top ?x1211)))
 (let ((?x1354 (stack ?x1352 ?x1025)))
 (let (($x1381 (= ?x1163 ?x1354)))
 (let (($x1364 ((_ is stack ) ?x1211)))
 (let (($x1365 (= c_________ center-to-right)))
 (let (($x1366 (and $x1365 $x1364)))
 (let (($x1367 (= c_________ center-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x991 (left s_________)))
 (let (($x1369 ((_ is stack ) ?x991)))
 (let (($x1370 (= c_________ left-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1402 (ite $x1371 $x1385 (ite $x1368 $x1385 (ite $x1366 $x1381 (ite $x1363 $x1382 (ite $x1361 $x1382 $x1385)))))))
 (let ((?x1209 (top ?x991)))
 (let ((?x1348 (stack ?x1209 ?x1025)))
 (let (($x1377 (= ?x1163 ?x1348)))
 (let (($x1372 (= c_________ left-to-center)))
 (let (($x1373 (and $x1372 $x1369)))
 (ite $x1373 $x1377 $x1402)))))))))))))))))))))))))))))))
(assert
 (let ((?x1211 (center s_________)))
 (let ((?x1349 (center s__________)))
 (let (($x1387 (= ?x1349 ?x1211)))
 (let ((?x1025 (right s_________)))
 (let ((?x1356 (top ?x1025)))
 (let ((?x1358 (stack ?x1356 ?x1211)))
 (let (($x1384 (= ?x1349 ?x1358)))
 (let (($x1359 ((_ is stack ) ?x1025)))
 (let (($x1360 (= c_________ right-to-center)))
 (let (($x1361 (and $x1360 $x1359)))
 (let (($x1362 (= c_________ right-to-left)))
 (let (($x1363 (and $x1362 $x1359)))
 (let ((?x1351 (rest ?x1211)))
 (let (($x1379 (= ?x1349 ?x1351)))
 (let (($x1364 ((_ is stack ) ?x1211)))
 (let (($x1365 (= c_________ center-to-right)))
 (let (($x1366 (and $x1365 $x1364)))
 (let (($x1367 (= c_________ center-to-left)))
 (let (($x1368 (and $x1367 $x1364)))
 (let ((?x991 (left s_________)))
 (let ((?x1209 (top ?x991)))
 (let ((?x1350 (stack ?x1209 ?x1211)))
 (let (($x1378 (= ?x1349 ?x1350)))
 (let (($x1369 ((_ is stack ) ?x991)))
 (let (($x1370 (= c_________ left-to-right)))
 (let (($x1371 (and $x1370 $x1369)))
 (let (($x1401 (ite $x1371 $x1378 (ite $x1368 $x1379 (ite $x1366 $x1379 (ite $x1363 $x1387 (ite $x1361 $x1384 $x1387)))))))
 (let (($x1372 (= c_________ left-to-center)))
 (let (($x1373 (and $x1372 $x1369)))
 (ite $x1373 $x1387 $x1401)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1129 (left s__________)))
 (let ((?x1267 (left s___________)))
 (let (($x1527 (= ?x1267 ?x1129)))
 (let ((?x1163 (right s__________)))
 (let ((?x1494 (top ?x1163)))
 (let ((?x1495 (stack ?x1494 ?x1129)))
 (let (($x1521 (= ?x1267 ?x1495)))
 (let (($x1497 ((_ is stack ) ?x1163)))
 (let (($x1500 (= c__________ right-to-left)))
 (let (($x1501 (and $x1500 $x1497)))
 (let ((?x1349 (center s__________)))
 (let (($x1502 ((_ is stack ) ?x1349)))
 (let (($x1503 (= c__________ center-to-right)))
 (let (($x1504 (and $x1503 $x1502)))
 (let ((?x1490 (top ?x1349)))
 (let ((?x1491 (stack ?x1490 ?x1129)))
 (let (($x1518 (= ?x1267 ?x1491)))
 (let (($x1505 (= c__________ center-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1300 (rest ?x1129)))
 (let (($x1514 (= ?x1267 ?x1300)))
 (let (($x1507 ((_ is stack ) ?x1129)))
 (let (($x1508 (= c__________ left-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1510 (= c__________ left-to-center)))
 (let (($x1511 (and $x1510 $x1507)))
 (ite $x1511 $x1514 (ite $x1509 $x1514 (ite $x1506 $x1518 (ite $x1504 $x1527 (ite $x1501 $x1521 $x1527))))))))))))))))))))))))))))))))
(assert
 (let ((?x1163 (right s__________)))
 (let ((?x1301 (right s___________)))
 (let (($x1523 (= ?x1301 ?x1163)))
 (let ((?x1493 (rest ?x1163)))
 (let (($x1520 (= ?x1301 ?x1493)))
 (let (($x1497 ((_ is stack ) ?x1163)))
 (let (($x1498 (= c__________ right-to-center)))
 (let (($x1499 (and $x1498 $x1497)))
 (let (($x1500 (= c__________ right-to-left)))
 (let (($x1501 (and $x1500 $x1497)))
 (let ((?x1349 (center s__________)))
 (let ((?x1490 (top ?x1349)))
 (let ((?x1492 (stack ?x1490 ?x1163)))
 (let (($x1519 (= ?x1301 ?x1492)))
 (let (($x1502 ((_ is stack ) ?x1349)))
 (let (($x1503 (= c__________ center-to-right)))
 (let (($x1504 (and $x1503 $x1502)))
 (let (($x1505 (= c__________ center-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1129 (left s__________)))
 (let (($x1507 ((_ is stack ) ?x1129)))
 (let (($x1508 (= c__________ left-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1540 (ite $x1509 $x1523 (ite $x1506 $x1523 (ite $x1504 $x1519 (ite $x1501 $x1520 (ite $x1499 $x1520 $x1523)))))))
 (let ((?x1347 (top ?x1129)))
 (let ((?x1486 (stack ?x1347 ?x1163)))
 (let (($x1515 (= ?x1301 ?x1486)))
 (let (($x1510 (= c__________ left-to-center)))
 (let (($x1511 (and $x1510 $x1507)))
 (ite $x1511 $x1515 $x1540)))))))))))))))))))))))))))))))
(assert
 (let ((?x1349 (center s__________)))
 (let ((?x1487 (center s___________)))
 (let (($x1525 (= ?x1487 ?x1349)))
 (let ((?x1163 (right s__________)))
 (let ((?x1494 (top ?x1163)))
 (let ((?x1496 (stack ?x1494 ?x1349)))
 (let (($x1522 (= ?x1487 ?x1496)))
 (let (($x1497 ((_ is stack ) ?x1163)))
 (let (($x1498 (= c__________ right-to-center)))
 (let (($x1499 (and $x1498 $x1497)))
 (let (($x1500 (= c__________ right-to-left)))
 (let (($x1501 (and $x1500 $x1497)))
 (let ((?x1489 (rest ?x1349)))
 (let (($x1517 (= ?x1487 ?x1489)))
 (let (($x1502 ((_ is stack ) ?x1349)))
 (let (($x1503 (= c__________ center-to-right)))
 (let (($x1504 (and $x1503 $x1502)))
 (let (($x1505 (= c__________ center-to-left)))
 (let (($x1506 (and $x1505 $x1502)))
 (let ((?x1129 (left s__________)))
 (let ((?x1347 (top ?x1129)))
 (let ((?x1488 (stack ?x1347 ?x1349)))
 (let (($x1516 (= ?x1487 ?x1488)))
 (let (($x1507 ((_ is stack ) ?x1129)))
 (let (($x1508 (= c__________ left-to-right)))
 (let (($x1509 (and $x1508 $x1507)))
 (let (($x1539 (ite $x1509 $x1516 (ite $x1506 $x1517 (ite $x1504 $x1517 (ite $x1501 $x1525 (ite $x1499 $x1522 $x1525)))))))
 (let (($x1510 (= c__________ left-to-center)))
 (let (($x1511 (and $x1510 $x1507)))
 (ite $x1511 $x1525 $x1539)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1267 (left s___________)))
 (let ((?x1405 (left s____________)))
 (let (($x1665 (= ?x1405 ?x1267)))
 (let ((?x1301 (right s___________)))
 (let ((?x1632 (top ?x1301)))
 (let ((?x1633 (stack ?x1632 ?x1267)))
 (let (($x1659 (= ?x1405 ?x1633)))
 (let (($x1635 ((_ is stack ) ?x1301)))
 (let (($x1638 (= c___________ right-to-left)))
 (let (($x1639 (and $x1638 $x1635)))
 (let ((?x1487 (center s___________)))
 (let (($x1640 ((_ is stack ) ?x1487)))
 (let (($x1641 (= c___________ center-to-right)))
 (let (($x1642 (and $x1641 $x1640)))
 (let ((?x1628 (top ?x1487)))
 (let ((?x1629 (stack ?x1628 ?x1267)))
 (let (($x1656 (= ?x1405 ?x1629)))
 (let (($x1643 (= c___________ center-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1438 (rest ?x1267)))
 (let (($x1652 (= ?x1405 ?x1438)))
 (let (($x1645 ((_ is stack ) ?x1267)))
 (let (($x1646 (= c___________ left-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1648 (= c___________ left-to-center)))
 (let (($x1649 (and $x1648 $x1645)))
 (ite $x1649 $x1652 (ite $x1647 $x1652 (ite $x1644 $x1656 (ite $x1642 $x1665 (ite $x1639 $x1659 $x1665))))))))))))))))))))))))))))))))
(assert
 (let ((?x1301 (right s___________)))
 (let ((?x1439 (right s____________)))
 (let (($x1661 (= ?x1439 ?x1301)))
 (let ((?x1631 (rest ?x1301)))
 (let (($x1658 (= ?x1439 ?x1631)))
 (let (($x1635 ((_ is stack ) ?x1301)))
 (let (($x1636 (= c___________ right-to-center)))
 (let (($x1637 (and $x1636 $x1635)))
 (let (($x1638 (= c___________ right-to-left)))
 (let (($x1639 (and $x1638 $x1635)))
 (let ((?x1487 (center s___________)))
 (let ((?x1628 (top ?x1487)))
 (let ((?x1630 (stack ?x1628 ?x1301)))
 (let (($x1657 (= ?x1439 ?x1630)))
 (let (($x1640 ((_ is stack ) ?x1487)))
 (let (($x1641 (= c___________ center-to-right)))
 (let (($x1642 (and $x1641 $x1640)))
 (let (($x1643 (= c___________ center-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1267 (left s___________)))
 (let (($x1645 ((_ is stack ) ?x1267)))
 (let (($x1646 (= c___________ left-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1678 (ite $x1647 $x1661 (ite $x1644 $x1661 (ite $x1642 $x1657 (ite $x1639 $x1658 (ite $x1637 $x1658 $x1661)))))))
 (let ((?x1485 (top ?x1267)))
 (let ((?x1624 (stack ?x1485 ?x1301)))
 (let (($x1653 (= ?x1439 ?x1624)))
 (let (($x1648 (= c___________ left-to-center)))
 (let (($x1649 (and $x1648 $x1645)))
 (ite $x1649 $x1653 $x1678)))))))))))))))))))))))))))))))
(assert
 (let ((?x1487 (center s___________)))
 (let ((?x1625 (center s____________)))
 (let (($x1663 (= ?x1625 ?x1487)))
 (let ((?x1301 (right s___________)))
 (let ((?x1632 (top ?x1301)))
 (let ((?x1634 (stack ?x1632 ?x1487)))
 (let (($x1660 (= ?x1625 ?x1634)))
 (let (($x1635 ((_ is stack ) ?x1301)))
 (let (($x1636 (= c___________ right-to-center)))
 (let (($x1637 (and $x1636 $x1635)))
 (let (($x1638 (= c___________ right-to-left)))
 (let (($x1639 (and $x1638 $x1635)))
 (let ((?x1627 (rest ?x1487)))
 (let (($x1655 (= ?x1625 ?x1627)))
 (let (($x1640 ((_ is stack ) ?x1487)))
 (let (($x1641 (= c___________ center-to-right)))
 (let (($x1642 (and $x1641 $x1640)))
 (let (($x1643 (= c___________ center-to-left)))
 (let (($x1644 (and $x1643 $x1640)))
 (let ((?x1267 (left s___________)))
 (let ((?x1485 (top ?x1267)))
 (let ((?x1626 (stack ?x1485 ?x1487)))
 (let (($x1654 (= ?x1625 ?x1626)))
 (let (($x1645 ((_ is stack ) ?x1267)))
 (let (($x1646 (= c___________ left-to-right)))
 (let (($x1647 (and $x1646 $x1645)))
 (let (($x1677 (ite $x1647 $x1654 (ite $x1644 $x1655 (ite $x1642 $x1655 (ite $x1639 $x1663 (ite $x1637 $x1660 $x1663)))))))
 (let (($x1648 (= c___________ left-to-center)))
 (let (($x1649 (and $x1648 $x1645)))
 (ite $x1649 $x1663 $x1677)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1405 (left s____________)))
 (let ((?x1543 (left s_____________)))
 (let (($x1803 (= ?x1543 ?x1405)))
 (let ((?x1439 (right s____________)))
 (let ((?x1770 (top ?x1439)))
 (let ((?x1771 (stack ?x1770 ?x1405)))
 (let (($x1797 (= ?x1543 ?x1771)))
 (let (($x1773 ((_ is stack ) ?x1439)))
 (let (($x1776 (= c____________ right-to-left)))
 (let (($x1777 (and $x1776 $x1773)))
 (let ((?x1625 (center s____________)))
 (let (($x1778 ((_ is stack ) ?x1625)))
 (let (($x1779 (= c____________ center-to-right)))
 (let (($x1780 (and $x1779 $x1778)))
 (let ((?x1766 (top ?x1625)))
 (let ((?x1767 (stack ?x1766 ?x1405)))
 (let (($x1794 (= ?x1543 ?x1767)))
 (let (($x1781 (= c____________ center-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1576 (rest ?x1405)))
 (let (($x1790 (= ?x1543 ?x1576)))
 (let (($x1783 ((_ is stack ) ?x1405)))
 (let (($x1784 (= c____________ left-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1786 (= c____________ left-to-center)))
 (let (($x1787 (and $x1786 $x1783)))
 (ite $x1787 $x1790 (ite $x1785 $x1790 (ite $x1782 $x1794 (ite $x1780 $x1803 (ite $x1777 $x1797 $x1803))))))))))))))))))))))))))))))))
(assert
 (let ((?x1439 (right s____________)))
 (let ((?x1577 (right s_____________)))
 (let (($x1799 (= ?x1577 ?x1439)))
 (let ((?x1769 (rest ?x1439)))
 (let (($x1796 (= ?x1577 ?x1769)))
 (let (($x1773 ((_ is stack ) ?x1439)))
 (let (($x1774 (= c____________ right-to-center)))
 (let (($x1775 (and $x1774 $x1773)))
 (let (($x1776 (= c____________ right-to-left)))
 (let (($x1777 (and $x1776 $x1773)))
 (let ((?x1625 (center s____________)))
 (let ((?x1766 (top ?x1625)))
 (let ((?x1768 (stack ?x1766 ?x1439)))
 (let (($x1795 (= ?x1577 ?x1768)))
 (let (($x1778 ((_ is stack ) ?x1625)))
 (let (($x1779 (= c____________ center-to-right)))
 (let (($x1780 (and $x1779 $x1778)))
 (let (($x1781 (= c____________ center-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1405 (left s____________)))
 (let (($x1783 ((_ is stack ) ?x1405)))
 (let (($x1784 (= c____________ left-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1816 (ite $x1785 $x1799 (ite $x1782 $x1799 (ite $x1780 $x1795 (ite $x1777 $x1796 (ite $x1775 $x1796 $x1799)))))))
 (let ((?x1623 (top ?x1405)))
 (let ((?x1762 (stack ?x1623 ?x1439)))
 (let (($x1791 (= ?x1577 ?x1762)))
 (let (($x1786 (= c____________ left-to-center)))
 (let (($x1787 (and $x1786 $x1783)))
 (ite $x1787 $x1791 $x1816)))))))))))))))))))))))))))))))
(assert
 (let ((?x1625 (center s____________)))
 (let ((?x1763 (center s_____________)))
 (let (($x1801 (= ?x1763 ?x1625)))
 (let ((?x1439 (right s____________)))
 (let ((?x1770 (top ?x1439)))
 (let ((?x1772 (stack ?x1770 ?x1625)))
 (let (($x1798 (= ?x1763 ?x1772)))
 (let (($x1773 ((_ is stack ) ?x1439)))
 (let (($x1774 (= c____________ right-to-center)))
 (let (($x1775 (and $x1774 $x1773)))
 (let (($x1776 (= c____________ right-to-left)))
 (let (($x1777 (and $x1776 $x1773)))
 (let ((?x1765 (rest ?x1625)))
 (let (($x1793 (= ?x1763 ?x1765)))
 (let (($x1778 ((_ is stack ) ?x1625)))
 (let (($x1779 (= c____________ center-to-right)))
 (let (($x1780 (and $x1779 $x1778)))
 (let (($x1781 (= c____________ center-to-left)))
 (let (($x1782 (and $x1781 $x1778)))
 (let ((?x1405 (left s____________)))
 (let ((?x1623 (top ?x1405)))
 (let ((?x1764 (stack ?x1623 ?x1625)))
 (let (($x1792 (= ?x1763 ?x1764)))
 (let (($x1783 ((_ is stack ) ?x1405)))
 (let (($x1784 (= c____________ left-to-right)))
 (let (($x1785 (and $x1784 $x1783)))
 (let (($x1815 (ite $x1785 $x1792 (ite $x1782 $x1793 (ite $x1780 $x1793 (ite $x1777 $x1801 (ite $x1775 $x1798 $x1801)))))))
 (let (($x1786 (= c____________ left-to-center)))
 (let (($x1787 (and $x1786 $x1783)))
 (ite $x1787 $x1801 $x1815)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1543 (left s_____________)))
 (let ((?x1681 (left s______________)))
 (let (($x1941 (= ?x1681 ?x1543)))
 (let ((?x1577 (right s_____________)))
 (let ((?x1908 (top ?x1577)))
 (let ((?x1909 (stack ?x1908 ?x1543)))
 (let (($x1935 (= ?x1681 ?x1909)))
 (let (($x1911 ((_ is stack ) ?x1577)))
 (let (($x1914 (= c_____________ right-to-left)))
 (let (($x1915 (and $x1914 $x1911)))
 (let ((?x1763 (center s_____________)))
 (let (($x1916 ((_ is stack ) ?x1763)))
 (let (($x1917 (= c_____________ center-to-right)))
 (let (($x1918 (and $x1917 $x1916)))
 (let ((?x1904 (top ?x1763)))
 (let ((?x1905 (stack ?x1904 ?x1543)))
 (let (($x1932 (= ?x1681 ?x1905)))
 (let (($x1919 (= c_____________ center-to-left)))
 (let (($x1920 (and $x1919 $x1916)))
 (let ((?x1714 (rest ?x1543)))
 (let (($x1928 (= ?x1681 ?x1714)))
 (let (($x1921 ((_ is stack ) ?x1543)))
 (let (($x1922 (= c_____________ left-to-right)))
 (let (($x1923 (and $x1922 $x1921)))
 (let (($x1924 (= c_____________ left-to-center)))
 (let (($x1925 (and $x1924 $x1921)))
 (ite $x1925 $x1928 (ite $x1923 $x1928 (ite $x1920 $x1932 (ite $x1918 $x1941 (ite $x1915 $x1935 $x1941))))))))))))))))))))))))))))))))
(assert
 (let ((?x1577 (right s_____________)))
 (let ((?x1715 (right s______________)))
 (let (($x1937 (= ?x1715 ?x1577)))
 (let ((?x1907 (rest ?x1577)))
 (let (($x1934 (= ?x1715 ?x1907)))
 (let (($x1911 ((_ is stack ) ?x1577)))
 (let (($x1912 (= c_____________ right-to-center)))
 (let (($x1913 (and $x1912 $x1911)))
 (let (($x1914 (= c_____________ right-to-left)))
 (let (($x1915 (and $x1914 $x1911)))
 (let ((?x1763 (center s_____________)))
 (let ((?x1904 (top ?x1763)))
 (let ((?x1906 (stack ?x1904 ?x1577)))
 (let (($x1933 (= ?x1715 ?x1906)))
 (let (($x1916 ((_ is stack ) ?x1763)))
 (let (($x1917 (= c_____________ center-to-right)))
 (let (($x1918 (and $x1917 $x1916)))
 (let (($x1919 (= c_____________ center-to-left)))
 (let (($x1920 (and $x1919 $x1916)))
 (let ((?x1543 (left s_____________)))
 (let (($x1921 ((_ is stack ) ?x1543)))
 (let (($x1922 (= c_____________ left-to-right)))
 (let (($x1923 (and $x1922 $x1921)))
 (let (($x1954 (ite $x1923 $x1937 (ite $x1920 $x1937 (ite $x1918 $x1933 (ite $x1915 $x1934 (ite $x1913 $x1934 $x1937)))))))
 (let ((?x1761 (top ?x1543)))
 (let ((?x1900 (stack ?x1761 ?x1577)))
 (let (($x1929 (= ?x1715 ?x1900)))
 (let (($x1924 (= c_____________ left-to-center)))
 (let (($x1925 (and $x1924 $x1921)))
 (ite $x1925 $x1929 $x1954)))))))))))))))))))))))))))))))
(assert
 (let ((?x1763 (center s_____________)))
 (let ((?x1901 (center s______________)))
 (let (($x1939 (= ?x1901 ?x1763)))
 (let ((?x1577 (right s_____________)))
 (let ((?x1908 (top ?x1577)))
 (let ((?x1910 (stack ?x1908 ?x1763)))
 (let (($x1936 (= ?x1901 ?x1910)))
 (let (($x1911 ((_ is stack ) ?x1577)))
 (let (($x1912 (= c_____________ right-to-center)))
 (let (($x1913 (and $x1912 $x1911)))
 (let (($x1914 (= c_____________ right-to-left)))
 (let (($x1915 (and $x1914 $x1911)))
 (let ((?x1903 (rest ?x1763)))
 (let (($x1931 (= ?x1901 ?x1903)))
 (let (($x1916 ((_ is stack ) ?x1763)))
 (let (($x1917 (= c_____________ center-to-right)))
 (let (($x1918 (and $x1917 $x1916)))
 (let (($x1919 (= c_____________ center-to-left)))
 (let (($x1920 (and $x1919 $x1916)))
 (let ((?x1543 (left s_____________)))
 (let ((?x1761 (top ?x1543)))
 (let ((?x1902 (stack ?x1761 ?x1763)))
 (let (($x1930 (= ?x1901 ?x1902)))
 (let (($x1921 ((_ is stack ) ?x1543)))
 (let (($x1922 (= c_____________ left-to-right)))
 (let (($x1923 (and $x1922 $x1921)))
 (let (($x1953 (ite $x1923 $x1930 (ite $x1920 $x1931 (ite $x1918 $x1931 (ite $x1915 $x1939 (ite $x1913 $x1936 $x1939)))))))
 (let (($x1924 (= c_____________ left-to-center)))
 (let (($x1925 (and $x1924 $x1921)))
 (ite $x1925 $x1939 $x1953)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1681 (left s______________)))
 (let ((?x1819 (left s_______________)))
 (let (($x2079 (= ?x1819 ?x1681)))
 (let ((?x1715 (right s______________)))
 (let ((?x2046 (top ?x1715)))
 (let ((?x2047 (stack ?x2046 ?x1681)))
 (let (($x2073 (= ?x1819 ?x2047)))
 (let (($x2049 ((_ is stack ) ?x1715)))
 (let (($x2052 (= c______________ right-to-left)))
 (let (($x2053 (and $x2052 $x2049)))
 (let ((?x1901 (center s______________)))
 (let (($x2054 ((_ is stack ) ?x1901)))
 (let (($x2055 (= c______________ center-to-right)))
 (let (($x2056 (and $x2055 $x2054)))
 (let ((?x2042 (top ?x1901)))
 (let ((?x2043 (stack ?x2042 ?x1681)))
 (let (($x2070 (= ?x1819 ?x2043)))
 (let (($x2057 (= c______________ center-to-left)))
 (let (($x2058 (and $x2057 $x2054)))
 (let ((?x1852 (rest ?x1681)))
 (let (($x2066 (= ?x1819 ?x1852)))
 (let (($x2059 ((_ is stack ) ?x1681)))
 (let (($x2060 (= c______________ left-to-right)))
 (let (($x2061 (and $x2060 $x2059)))
 (let (($x2062 (= c______________ left-to-center)))
 (let (($x2063 (and $x2062 $x2059)))
 (ite $x2063 $x2066 (ite $x2061 $x2066 (ite $x2058 $x2070 (ite $x2056 $x2079 (ite $x2053 $x2073 $x2079))))))))))))))))))))))))))))))))
(assert
 (let ((?x1715 (right s______________)))
 (let ((?x1853 (right s_______________)))
 (let (($x2075 (= ?x1853 ?x1715)))
 (let ((?x2045 (rest ?x1715)))
 (let (($x2072 (= ?x1853 ?x2045)))
 (let (($x2049 ((_ is stack ) ?x1715)))
 (let (($x2050 (= c______________ right-to-center)))
 (let (($x2051 (and $x2050 $x2049)))
 (let (($x2052 (= c______________ right-to-left)))
 (let (($x2053 (and $x2052 $x2049)))
 (let ((?x1901 (center s______________)))
 (let ((?x2042 (top ?x1901)))
 (let ((?x2044 (stack ?x2042 ?x1715)))
 (let (($x2071 (= ?x1853 ?x2044)))
 (let (($x2054 ((_ is stack ) ?x1901)))
 (let (($x2055 (= c______________ center-to-right)))
 (let (($x2056 (and $x2055 $x2054)))
 (let (($x2057 (= c______________ center-to-left)))
 (let (($x2058 (and $x2057 $x2054)))
 (let ((?x1681 (left s______________)))
 (let (($x2059 ((_ is stack ) ?x1681)))
 (let (($x2060 (= c______________ left-to-right)))
 (let (($x2061 (and $x2060 $x2059)))
 (let (($x2092 (ite $x2061 $x2075 (ite $x2058 $x2075 (ite $x2056 $x2071 (ite $x2053 $x2072 (ite $x2051 $x2072 $x2075)))))))
 (let ((?x1899 (top ?x1681)))
 (let ((?x2038 (stack ?x1899 ?x1715)))
 (let (($x2067 (= ?x1853 ?x2038)))
 (let (($x2062 (= c______________ left-to-center)))
 (let (($x2063 (and $x2062 $x2059)))
 (ite $x2063 $x2067 $x2092)))))))))))))))))))))))))))))))
(assert
 (let ((?x1901 (center s______________)))
 (let ((?x2039 (center s_______________)))
 (let (($x2077 (= ?x2039 ?x1901)))
 (let ((?x1715 (right s______________)))
 (let ((?x2046 (top ?x1715)))
 (let ((?x2048 (stack ?x2046 ?x1901)))
 (let (($x2074 (= ?x2039 ?x2048)))
 (let (($x2049 ((_ is stack ) ?x1715)))
 (let (($x2050 (= c______________ right-to-center)))
 (let (($x2051 (and $x2050 $x2049)))
 (let (($x2052 (= c______________ right-to-left)))
 (let (($x2053 (and $x2052 $x2049)))
 (let ((?x2041 (rest ?x1901)))
 (let (($x2069 (= ?x2039 ?x2041)))
 (let (($x2054 ((_ is stack ) ?x1901)))
 (let (($x2055 (= c______________ center-to-right)))
 (let (($x2056 (and $x2055 $x2054)))
 (let (($x2057 (= c______________ center-to-left)))
 (let (($x2058 (and $x2057 $x2054)))
 (let ((?x1681 (left s______________)))
 (let ((?x1899 (top ?x1681)))
 (let ((?x2040 (stack ?x1899 ?x1901)))
 (let (($x2068 (= ?x2039 ?x2040)))
 (let (($x2059 ((_ is stack ) ?x1681)))
 (let (($x2060 (= c______________ left-to-right)))
 (let (($x2061 (and $x2060 $x2059)))
 (let (($x2091 (ite $x2061 $x2068 (ite $x2058 $x2069 (ite $x2056 $x2069 (ite $x2053 $x2077 (ite $x2051 $x2074 $x2077)))))))
 (let (($x2062 (= c______________ left-to-center)))
 (let (($x2063 (and $x2062 $x2059)))
 (ite $x2063 $x2077 $x2091)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1819 (left s_______________)))
 (let ((?x1957 (left s________________)))
 (let (($x2217 (= ?x1957 ?x1819)))
 (let ((?x1853 (right s_______________)))
 (let ((?x2184 (top ?x1853)))
 (let ((?x2185 (stack ?x2184 ?x1819)))
 (let (($x2211 (= ?x1957 ?x2185)))
 (let (($x2187 ((_ is stack ) ?x1853)))
 (let (($x2190 (= c_______________ right-to-left)))
 (let (($x2191 (and $x2190 $x2187)))
 (let ((?x2039 (center s_______________)))
 (let (($x2192 ((_ is stack ) ?x2039)))
 (let (($x2193 (= c_______________ center-to-right)))
 (let (($x2194 (and $x2193 $x2192)))
 (let ((?x2180 (top ?x2039)))
 (let ((?x2181 (stack ?x2180 ?x1819)))
 (let (($x2208 (= ?x1957 ?x2181)))
 (let (($x2195 (= c_______________ center-to-left)))
 (let (($x2196 (and $x2195 $x2192)))
 (let ((?x1990 (rest ?x1819)))
 (let (($x2204 (= ?x1957 ?x1990)))
 (let (($x2197 ((_ is stack ) ?x1819)))
 (let (($x2198 (= c_______________ left-to-right)))
 (let (($x2199 (and $x2198 $x2197)))
 (let (($x2200 (= c_______________ left-to-center)))
 (let (($x2201 (and $x2200 $x2197)))
 (ite $x2201 $x2204 (ite $x2199 $x2204 (ite $x2196 $x2208 (ite $x2194 $x2217 (ite $x2191 $x2211 $x2217))))))))))))))))))))))))))))))))
(assert
 (let ((?x1853 (right s_______________)))
 (let ((?x1991 (right s________________)))
 (let (($x2213 (= ?x1991 ?x1853)))
 (let ((?x2183 (rest ?x1853)))
 (let (($x2210 (= ?x1991 ?x2183)))
 (let (($x2187 ((_ is stack ) ?x1853)))
 (let (($x2188 (= c_______________ right-to-center)))
 (let (($x2189 (and $x2188 $x2187)))
 (let (($x2190 (= c_______________ right-to-left)))
 (let (($x2191 (and $x2190 $x2187)))
 (let ((?x2039 (center s_______________)))
 (let ((?x2180 (top ?x2039)))
 (let ((?x2182 (stack ?x2180 ?x1853)))
 (let (($x2209 (= ?x1991 ?x2182)))
 (let (($x2192 ((_ is stack ) ?x2039)))
 (let (($x2193 (= c_______________ center-to-right)))
 (let (($x2194 (and $x2193 $x2192)))
 (let (($x2195 (= c_______________ center-to-left)))
 (let (($x2196 (and $x2195 $x2192)))
 (let ((?x1819 (left s_______________)))
 (let (($x2197 ((_ is stack ) ?x1819)))
 (let (($x2198 (= c_______________ left-to-right)))
 (let (($x2199 (and $x2198 $x2197)))
 (let (($x2230 (ite $x2199 $x2213 (ite $x2196 $x2213 (ite $x2194 $x2209 (ite $x2191 $x2210 (ite $x2189 $x2210 $x2213)))))))
 (let ((?x2037 (top ?x1819)))
 (let ((?x2176 (stack ?x2037 ?x1853)))
 (let (($x2205 (= ?x1991 ?x2176)))
 (let (($x2200 (= c_______________ left-to-center)))
 (let (($x2201 (and $x2200 $x2197)))
 (ite $x2201 $x2205 $x2230)))))))))))))))))))))))))))))))
(assert
 (let ((?x2039 (center s_______________)))
 (let ((?x2177 (center s________________)))
 (let (($x2215 (= ?x2177 ?x2039)))
 (let ((?x1853 (right s_______________)))
 (let ((?x2184 (top ?x1853)))
 (let ((?x2186 (stack ?x2184 ?x2039)))
 (let (($x2212 (= ?x2177 ?x2186)))
 (let (($x2187 ((_ is stack ) ?x1853)))
 (let (($x2188 (= c_______________ right-to-center)))
 (let (($x2189 (and $x2188 $x2187)))
 (let (($x2190 (= c_______________ right-to-left)))
 (let (($x2191 (and $x2190 $x2187)))
 (let ((?x2179 (rest ?x2039)))
 (let (($x2207 (= ?x2177 ?x2179)))
 (let (($x2192 ((_ is stack ) ?x2039)))
 (let (($x2193 (= c_______________ center-to-right)))
 (let (($x2194 (and $x2193 $x2192)))
 (let (($x2195 (= c_______________ center-to-left)))
 (let (($x2196 (and $x2195 $x2192)))
 (let ((?x1819 (left s_______________)))
 (let ((?x2037 (top ?x1819)))
 (let ((?x2178 (stack ?x2037 ?x2039)))
 (let (($x2206 (= ?x2177 ?x2178)))
 (let (($x2197 ((_ is stack ) ?x1819)))
 (let (($x2198 (= c_______________ left-to-right)))
 (let (($x2199 (and $x2198 $x2197)))
 (let (($x2229 (ite $x2199 $x2206 (ite $x2196 $x2207 (ite $x2194 $x2207 (ite $x2191 $x2215 (ite $x2189 $x2212 $x2215)))))))
 (let (($x2200 (= c_______________ left-to-center)))
 (let (($x2201 (and $x2200 $x2197)))
 (ite $x2201 $x2215 $x2229)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1957 (left s________________)))
 (let ((?x2095 (left s_________________)))
 (let (($x2355 (= ?x2095 ?x1957)))
 (let ((?x1991 (right s________________)))
 (let ((?x2322 (top ?x1991)))
 (let ((?x2323 (stack ?x2322 ?x1957)))
 (let (($x2349 (= ?x2095 ?x2323)))
 (let (($x2325 ((_ is stack ) ?x1991)))
 (let (($x2328 (= c________________ right-to-left)))
 (let (($x2329 (and $x2328 $x2325)))
 (let ((?x2177 (center s________________)))
 (let (($x2330 ((_ is stack ) ?x2177)))
 (let (($x2331 (= c________________ center-to-right)))
 (let (($x2332 (and $x2331 $x2330)))
 (let ((?x2318 (top ?x2177)))
 (let ((?x2319 (stack ?x2318 ?x1957)))
 (let (($x2346 (= ?x2095 ?x2319)))
 (let (($x2333 (= c________________ center-to-left)))
 (let (($x2334 (and $x2333 $x2330)))
 (let ((?x2128 (rest ?x1957)))
 (let (($x2342 (= ?x2095 ?x2128)))
 (let (($x2335 ((_ is stack ) ?x1957)))
 (let (($x2336 (= c________________ left-to-right)))
 (let (($x2337 (and $x2336 $x2335)))
 (let (($x2338 (= c________________ left-to-center)))
 (let (($x2339 (and $x2338 $x2335)))
 (ite $x2339 $x2342 (ite $x2337 $x2342 (ite $x2334 $x2346 (ite $x2332 $x2355 (ite $x2329 $x2349 $x2355))))))))))))))))))))))))))))))))
(assert
 (let ((?x1991 (right s________________)))
 (let ((?x2129 (right s_________________)))
 (let (($x2351 (= ?x2129 ?x1991)))
 (let ((?x2321 (rest ?x1991)))
 (let (($x2348 (= ?x2129 ?x2321)))
 (let (($x2325 ((_ is stack ) ?x1991)))
 (let (($x2326 (= c________________ right-to-center)))
 (let (($x2327 (and $x2326 $x2325)))
 (let (($x2328 (= c________________ right-to-left)))
 (let (($x2329 (and $x2328 $x2325)))
 (let ((?x2177 (center s________________)))
 (let ((?x2318 (top ?x2177)))
 (let ((?x2320 (stack ?x2318 ?x1991)))
 (let (($x2347 (= ?x2129 ?x2320)))
 (let (($x2330 ((_ is stack ) ?x2177)))
 (let (($x2331 (= c________________ center-to-right)))
 (let (($x2332 (and $x2331 $x2330)))
 (let (($x2333 (= c________________ center-to-left)))
 (let (($x2334 (and $x2333 $x2330)))
 (let ((?x1957 (left s________________)))
 (let (($x2335 ((_ is stack ) ?x1957)))
 (let (($x2336 (= c________________ left-to-right)))
 (let (($x2337 (and $x2336 $x2335)))
 (let (($x2368 (ite $x2337 $x2351 (ite $x2334 $x2351 (ite $x2332 $x2347 (ite $x2329 $x2348 (ite $x2327 $x2348 $x2351)))))))
 (let ((?x2175 (top ?x1957)))
 (let ((?x2314 (stack ?x2175 ?x1991)))
 (let (($x2343 (= ?x2129 ?x2314)))
 (let (($x2338 (= c________________ left-to-center)))
 (let (($x2339 (and $x2338 $x2335)))
 (ite $x2339 $x2343 $x2368)))))))))))))))))))))))))))))))
(assert
 (let ((?x2177 (center s________________)))
 (let ((?x2315 (center s_________________)))
 (let (($x2353 (= ?x2315 ?x2177)))
 (let ((?x1991 (right s________________)))
 (let ((?x2322 (top ?x1991)))
 (let ((?x2324 (stack ?x2322 ?x2177)))
 (let (($x2350 (= ?x2315 ?x2324)))
 (let (($x2325 ((_ is stack ) ?x1991)))
 (let (($x2326 (= c________________ right-to-center)))
 (let (($x2327 (and $x2326 $x2325)))
 (let (($x2328 (= c________________ right-to-left)))
 (let (($x2329 (and $x2328 $x2325)))
 (let ((?x2317 (rest ?x2177)))
 (let (($x2345 (= ?x2315 ?x2317)))
 (let (($x2330 ((_ is stack ) ?x2177)))
 (let (($x2331 (= c________________ center-to-right)))
 (let (($x2332 (and $x2331 $x2330)))
 (let (($x2333 (= c________________ center-to-left)))
 (let (($x2334 (and $x2333 $x2330)))
 (let ((?x1957 (left s________________)))
 (let ((?x2175 (top ?x1957)))
 (let ((?x2316 (stack ?x2175 ?x2177)))
 (let (($x2344 (= ?x2315 ?x2316)))
 (let (($x2335 ((_ is stack ) ?x1957)))
 (let (($x2336 (= c________________ left-to-right)))
 (let (($x2337 (and $x2336 $x2335)))
 (let (($x2367 (ite $x2337 $x2344 (ite $x2334 $x2345 (ite $x2332 $x2345 (ite $x2329 $x2353 (ite $x2327 $x2350 $x2353)))))))
 (let (($x2338 (= c________________ left-to-center)))
 (let (($x2339 (and $x2338 $x2335)))
 (ite $x2339 $x2353 $x2367)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2095 (left s_________________)))
 (let ((?x2233 (left s__________________)))
 (let (($x2493 (= ?x2233 ?x2095)))
 (let ((?x2129 (right s_________________)))
 (let ((?x2460 (top ?x2129)))
 (let ((?x2461 (stack ?x2460 ?x2095)))
 (let (($x2487 (= ?x2233 ?x2461)))
 (let (($x2463 ((_ is stack ) ?x2129)))
 (let (($x2466 (= c_________________ right-to-left)))
 (let (($x2467 (and $x2466 $x2463)))
 (let ((?x2315 (center s_________________)))
 (let (($x2468 ((_ is stack ) ?x2315)))
 (let (($x2469 (= c_________________ center-to-right)))
 (let (($x2470 (and $x2469 $x2468)))
 (let ((?x2456 (top ?x2315)))
 (let ((?x2457 (stack ?x2456 ?x2095)))
 (let (($x2484 (= ?x2233 ?x2457)))
 (let (($x2471 (= c_________________ center-to-left)))
 (let (($x2472 (and $x2471 $x2468)))
 (let ((?x2266 (rest ?x2095)))
 (let (($x2480 (= ?x2233 ?x2266)))
 (let (($x2473 ((_ is stack ) ?x2095)))
 (let (($x2474 (= c_________________ left-to-right)))
 (let (($x2475 (and $x2474 $x2473)))
 (let (($x2476 (= c_________________ left-to-center)))
 (let (($x2477 (and $x2476 $x2473)))
 (ite $x2477 $x2480 (ite $x2475 $x2480 (ite $x2472 $x2484 (ite $x2470 $x2493 (ite $x2467 $x2487 $x2493))))))))))))))))))))))))))))))))
(assert
 (let ((?x2129 (right s_________________)))
 (let ((?x2267 (right s__________________)))
 (let (($x2489 (= ?x2267 ?x2129)))
 (let ((?x2459 (rest ?x2129)))
 (let (($x2486 (= ?x2267 ?x2459)))
 (let (($x2463 ((_ is stack ) ?x2129)))
 (let (($x2464 (= c_________________ right-to-center)))
 (let (($x2465 (and $x2464 $x2463)))
 (let (($x2466 (= c_________________ right-to-left)))
 (let (($x2467 (and $x2466 $x2463)))
 (let ((?x2315 (center s_________________)))
 (let ((?x2456 (top ?x2315)))
 (let ((?x2458 (stack ?x2456 ?x2129)))
 (let (($x2485 (= ?x2267 ?x2458)))
 (let (($x2468 ((_ is stack ) ?x2315)))
 (let (($x2469 (= c_________________ center-to-right)))
 (let (($x2470 (and $x2469 $x2468)))
 (let (($x2471 (= c_________________ center-to-left)))
 (let (($x2472 (and $x2471 $x2468)))
 (let ((?x2095 (left s_________________)))
 (let (($x2473 ((_ is stack ) ?x2095)))
 (let (($x2474 (= c_________________ left-to-right)))
 (let (($x2475 (and $x2474 $x2473)))
 (let (($x2506 (ite $x2475 $x2489 (ite $x2472 $x2489 (ite $x2470 $x2485 (ite $x2467 $x2486 (ite $x2465 $x2486 $x2489)))))))
 (let ((?x2313 (top ?x2095)))
 (let ((?x2452 (stack ?x2313 ?x2129)))
 (let (($x2481 (= ?x2267 ?x2452)))
 (let (($x2476 (= c_________________ left-to-center)))
 (let (($x2477 (and $x2476 $x2473)))
 (ite $x2477 $x2481 $x2506)))))))))))))))))))))))))))))))
(assert
 (let ((?x2315 (center s_________________)))
 (let ((?x2453 (center s__________________)))
 (let (($x2491 (= ?x2453 ?x2315)))
 (let ((?x2129 (right s_________________)))
 (let ((?x2460 (top ?x2129)))
 (let ((?x2462 (stack ?x2460 ?x2315)))
 (let (($x2488 (= ?x2453 ?x2462)))
 (let (($x2463 ((_ is stack ) ?x2129)))
 (let (($x2464 (= c_________________ right-to-center)))
 (let (($x2465 (and $x2464 $x2463)))
 (let (($x2466 (= c_________________ right-to-left)))
 (let (($x2467 (and $x2466 $x2463)))
 (let ((?x2455 (rest ?x2315)))
 (let (($x2483 (= ?x2453 ?x2455)))
 (let (($x2468 ((_ is stack ) ?x2315)))
 (let (($x2469 (= c_________________ center-to-right)))
 (let (($x2470 (and $x2469 $x2468)))
 (let (($x2471 (= c_________________ center-to-left)))
 (let (($x2472 (and $x2471 $x2468)))
 (let ((?x2095 (left s_________________)))
 (let ((?x2313 (top ?x2095)))
 (let ((?x2454 (stack ?x2313 ?x2315)))
 (let (($x2482 (= ?x2453 ?x2454)))
 (let (($x2473 ((_ is stack ) ?x2095)))
 (let (($x2474 (= c_________________ left-to-right)))
 (let (($x2475 (and $x2474 $x2473)))
 (let (($x2505 (ite $x2475 $x2482 (ite $x2472 $x2483 (ite $x2470 $x2483 (ite $x2467 $x2491 (ite $x2465 $x2488 $x2491)))))))
 (let (($x2476 (= c_________________ left-to-center)))
 (let (($x2477 (and $x2476 $x2473)))
 (ite $x2477 $x2491 $x2505)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2233 (left s__________________)))
 (let ((?x2371 (left s___________________)))
 (let (($x2631 (= ?x2371 ?x2233)))
 (let ((?x2267 (right s__________________)))
 (let ((?x2598 (top ?x2267)))
 (let ((?x2599 (stack ?x2598 ?x2233)))
 (let (($x2625 (= ?x2371 ?x2599)))
 (let (($x2601 ((_ is stack ) ?x2267)))
 (let (($x2604 (= c__________________ right-to-left)))
 (let (($x2605 (and $x2604 $x2601)))
 (let ((?x2453 (center s__________________)))
 (let (($x2606 ((_ is stack ) ?x2453)))
 (let (($x2607 (= c__________________ center-to-right)))
 (let (($x2608 (and $x2607 $x2606)))
 (let ((?x2594 (top ?x2453)))
 (let ((?x2595 (stack ?x2594 ?x2233)))
 (let (($x2622 (= ?x2371 ?x2595)))
 (let (($x2609 (= c__________________ center-to-left)))
 (let (($x2610 (and $x2609 $x2606)))
 (let ((?x2404 (rest ?x2233)))
 (let (($x2618 (= ?x2371 ?x2404)))
 (let (($x2611 ((_ is stack ) ?x2233)))
 (let (($x2612 (= c__________________ left-to-right)))
 (let (($x2613 (and $x2612 $x2611)))
 (let (($x2614 (= c__________________ left-to-center)))
 (let (($x2615 (and $x2614 $x2611)))
 (ite $x2615 $x2618 (ite $x2613 $x2618 (ite $x2610 $x2622 (ite $x2608 $x2631 (ite $x2605 $x2625 $x2631))))))))))))))))))))))))))))))))
(assert
 (let ((?x2267 (right s__________________)))
 (let ((?x2405 (right s___________________)))
 (let (($x2627 (= ?x2405 ?x2267)))
 (let ((?x2597 (rest ?x2267)))
 (let (($x2624 (= ?x2405 ?x2597)))
 (let (($x2601 ((_ is stack ) ?x2267)))
 (let (($x2602 (= c__________________ right-to-center)))
 (let (($x2603 (and $x2602 $x2601)))
 (let (($x2604 (= c__________________ right-to-left)))
 (let (($x2605 (and $x2604 $x2601)))
 (let ((?x2453 (center s__________________)))
 (let ((?x2594 (top ?x2453)))
 (let ((?x2596 (stack ?x2594 ?x2267)))
 (let (($x2623 (= ?x2405 ?x2596)))
 (let (($x2606 ((_ is stack ) ?x2453)))
 (let (($x2607 (= c__________________ center-to-right)))
 (let (($x2608 (and $x2607 $x2606)))
 (let (($x2609 (= c__________________ center-to-left)))
 (let (($x2610 (and $x2609 $x2606)))
 (let ((?x2233 (left s__________________)))
 (let (($x2611 ((_ is stack ) ?x2233)))
 (let (($x2612 (= c__________________ left-to-right)))
 (let (($x2613 (and $x2612 $x2611)))
 (let (($x2644 (ite $x2613 $x2627 (ite $x2610 $x2627 (ite $x2608 $x2623 (ite $x2605 $x2624 (ite $x2603 $x2624 $x2627)))))))
 (let ((?x2451 (top ?x2233)))
 (let ((?x2590 (stack ?x2451 ?x2267)))
 (let (($x2619 (= ?x2405 ?x2590)))
 (let (($x2614 (= c__________________ left-to-center)))
 (let (($x2615 (and $x2614 $x2611)))
 (ite $x2615 $x2619 $x2644)))))))))))))))))))))))))))))))
(assert
 (let ((?x2453 (center s__________________)))
 (let ((?x2591 (center s___________________)))
 (let (($x2629 (= ?x2591 ?x2453)))
 (let ((?x2267 (right s__________________)))
 (let ((?x2598 (top ?x2267)))
 (let ((?x2600 (stack ?x2598 ?x2453)))
 (let (($x2626 (= ?x2591 ?x2600)))
 (let (($x2601 ((_ is stack ) ?x2267)))
 (let (($x2602 (= c__________________ right-to-center)))
 (let (($x2603 (and $x2602 $x2601)))
 (let (($x2604 (= c__________________ right-to-left)))
 (let (($x2605 (and $x2604 $x2601)))
 (let ((?x2593 (rest ?x2453)))
 (let (($x2621 (= ?x2591 ?x2593)))
 (let (($x2606 ((_ is stack ) ?x2453)))
 (let (($x2607 (= c__________________ center-to-right)))
 (let (($x2608 (and $x2607 $x2606)))
 (let (($x2609 (= c__________________ center-to-left)))
 (let (($x2610 (and $x2609 $x2606)))
 (let ((?x2233 (left s__________________)))
 (let ((?x2451 (top ?x2233)))
 (let ((?x2592 (stack ?x2451 ?x2453)))
 (let (($x2620 (= ?x2591 ?x2592)))
 (let (($x2611 ((_ is stack ) ?x2233)))
 (let (($x2612 (= c__________________ left-to-right)))
 (let (($x2613 (and $x2612 $x2611)))
 (let (($x2643 (ite $x2613 $x2620 (ite $x2610 $x2621 (ite $x2608 $x2621 (ite $x2605 $x2629 (ite $x2603 $x2626 $x2629)))))))
 (let (($x2614 (= c__________________ left-to-center)))
 (let (($x2615 (and $x2614 $x2611)))
 (ite $x2615 $x2629 $x2643)))))))))))))))))))))))))))))))
(assert
 (= c____________________ c!19))
(assert
 (let ((?x2371 (left s___________________)))
 (let ((?x2509 (left s____________________)))
 (let (($x2769 (= ?x2509 ?x2371)))
 (let ((?x2405 (right s___________________)))
 (let ((?x2736 (top ?x2405)))
 (let ((?x2737 (stack ?x2736 ?x2371)))
 (let (($x2763 (= ?x2509 ?x2737)))
 (let (($x2739 ((_ is stack ) ?x2405)))
 (let (($x2742 (= c___________________ right-to-left)))
 (let (($x2743 (and $x2742 $x2739)))
 (let ((?x2591 (center s___________________)))
 (let (($x2744 ((_ is stack ) ?x2591)))
 (let (($x2745 (= c___________________ center-to-right)))
 (let (($x2746 (and $x2745 $x2744)))
 (let ((?x2732 (top ?x2591)))
 (let ((?x2733 (stack ?x2732 ?x2371)))
 (let (($x2760 (= ?x2509 ?x2733)))
 (let (($x2747 (= c___________________ center-to-left)))
 (let (($x2748 (and $x2747 $x2744)))
 (let ((?x2542 (rest ?x2371)))
 (let (($x2756 (= ?x2509 ?x2542)))
 (let (($x2749 ((_ is stack ) ?x2371)))
 (let (($x2750 (= c___________________ left-to-right)))
 (let (($x2751 (and $x2750 $x2749)))
 (let (($x2752 (= c___________________ left-to-center)))
 (let (($x2753 (and $x2752 $x2749)))
 (ite $x2753 $x2756 (ite $x2751 $x2756 (ite $x2748 $x2760 (ite $x2746 $x2769 (ite $x2743 $x2763 $x2769))))))))))))))))))))))))))))))))
(assert
 (let ((?x2405 (right s___________________)))
 (let ((?x2543 (right s____________________)))
 (let (($x2765 (= ?x2543 ?x2405)))
 (let ((?x2735 (rest ?x2405)))
 (let (($x2762 (= ?x2543 ?x2735)))
 (let (($x2739 ((_ is stack ) ?x2405)))
 (let (($x2740 (= c___________________ right-to-center)))
 (let (($x2741 (and $x2740 $x2739)))
 (let (($x2742 (= c___________________ right-to-left)))
 (let (($x2743 (and $x2742 $x2739)))
 (let ((?x2591 (center s___________________)))
 (let ((?x2732 (top ?x2591)))
 (let ((?x2734 (stack ?x2732 ?x2405)))
 (let (($x2761 (= ?x2543 ?x2734)))
 (let (($x2744 ((_ is stack ) ?x2591)))
 (let (($x2745 (= c___________________ center-to-right)))
 (let (($x2746 (and $x2745 $x2744)))
 (let (($x2747 (= c___________________ center-to-left)))
 (let (($x2748 (and $x2747 $x2744)))
 (let ((?x2371 (left s___________________)))
 (let (($x2749 ((_ is stack ) ?x2371)))
 (let (($x2750 (= c___________________ left-to-right)))
 (let (($x2751 (and $x2750 $x2749)))
 (let (($x2782 (ite $x2751 $x2765 (ite $x2748 $x2765 (ite $x2746 $x2761 (ite $x2743 $x2762 (ite $x2741 $x2762 $x2765)))))))
 (let ((?x2589 (top ?x2371)))
 (let ((?x2728 (stack ?x2589 ?x2405)))
 (let (($x2757 (= ?x2543 ?x2728)))
 (let (($x2752 (= c___________________ left-to-center)))
 (let (($x2753 (and $x2752 $x2749)))
 (ite $x2753 $x2757 $x2782)))))))))))))))))))))))))))))))
(assert
 (let ((?x2591 (center s___________________)))
 (let ((?x2729 (center s____________________)))
 (let (($x2767 (= ?x2729 ?x2591)))
 (let ((?x2405 (right s___________________)))
 (let ((?x2736 (top ?x2405)))
 (let ((?x2738 (stack ?x2736 ?x2591)))
 (let (($x2764 (= ?x2729 ?x2738)))
 (let (($x2739 ((_ is stack ) ?x2405)))
 (let (($x2740 (= c___________________ right-to-center)))
 (let (($x2741 (and $x2740 $x2739)))
 (let (($x2742 (= c___________________ right-to-left)))
 (let (($x2743 (and $x2742 $x2739)))
 (let ((?x2731 (rest ?x2591)))
 (let (($x2759 (= ?x2729 ?x2731)))
 (let (($x2744 ((_ is stack ) ?x2591)))
 (let (($x2745 (= c___________________ center-to-right)))
 (let (($x2746 (and $x2745 $x2744)))
 (let (($x2747 (= c___________________ center-to-left)))
 (let (($x2748 (and $x2747 $x2744)))
 (let ((?x2371 (left s___________________)))
 (let ((?x2589 (top ?x2371)))
 (let ((?x2730 (stack ?x2589 ?x2591)))
 (let (($x2758 (= ?x2729 ?x2730)))
 (let (($x2749 ((_ is stack ) ?x2371)))
 (let (($x2750 (= c___________________ left-to-right)))
 (let (($x2751 (and $x2750 $x2749)))
 (let (($x2781 (ite $x2751 $x2758 (ite $x2748 $x2759 (ite $x2746 $x2759 (ite $x2743 $x2767 (ite $x2741 $x2764 $x2767)))))))
 (let (($x2752 (= c___________________ left-to-center)))
 (let (($x2753 (and $x2752 $x2749)))
 (ite $x2753 $x2767 $x2781)))))))))))))))))))))))))))))))
(assert
 (let ((?x63 (stack J (stack I (stack E (stack C (stack B (stack A empty))))))))
 (let ((?x69 (stack Q (stack P (stack O (stack N (stack M (stack L ?x63))))))))
 (let ((?x71 (stack T (stack R ?x69))))
 (let ((?x2543 (right s____________________)))
 (let (($x2785 (= ?x2543 ?x71)))
 (let ((?x57 (stack D (stack H (stack K (stack S (stack G empty)))))))
 (let ((?x2729 (center s____________________)))
 (let (($x2816 (= ?x2729 ?x57)))
 (let ((?x52 (stack F empty)))
 (let ((?x2509 (left s____________________)))
 (let (($x2817 (= ?x2509 ?x52)))
 (let (($x2819 (not (and $x2817 $x2816 $x2785))))
 (not $x2819))))))))))))))
(check-sat)
(exit)
