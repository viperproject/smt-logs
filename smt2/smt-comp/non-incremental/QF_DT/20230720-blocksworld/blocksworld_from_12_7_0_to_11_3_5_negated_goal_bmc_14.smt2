(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x31 (stack H empty)))
 (let ((?x32 (stack J ?x31)))
 (let ((?x33 (stack I ?x32)))
 (let ((?x34 (stack L ?x33)))
 (let ((?x35 (stack G ?x34)))
 (let ((?x36 (stack E ?x35)))
 (let ((?x37 (stack F ?x36)))
 (let ((?x38 (stack S ?x37)))
 (let ((?x39 (stack A ?x38)))
 (let ((?x40 (stack O ?x39)))
 (let ((?x41 (stack D ?x40)))
 (let ((?x42 (stack M ?x41)))
 (let ((?x113 (left s_tmp_)))
 (= ?x113 ?x42)))))))))))))))
(assert
 (let ((?x43 (stack P empty)))
 (let ((?x44 (stack K ?x43)))
 (let ((?x45 (stack R ?x44)))
 (let ((?x46 (stack B ?x45)))
 (let ((?x47 (stack C ?x46)))
 (let ((?x48 (stack N ?x47)))
 (let ((?x49 (stack Q ?x48)))
 (let ((?x116 (center s_tmp__)))
 (= ?x116 ?x49))))))))))
(assert
 (let ((?x119 (right s_tmp___)))
 (= ?x119 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x146 (left s_tmp__)))
 (= (left s_tmp___) ?x146)))
(assert
 (let ((?x116 (center s_tmp__)))
 (= (center s_tmp___) ?x116)))
(assert
 (let ((?x150 (center s_tmp_)))
 (= ?x150 (center s_tmp))))
(assert
 (let ((?x153 (right s_tmp_)))
 (= ?x153 (right s_tmp))))
(assert
 (let ((?x113 (left s_tmp_)))
 (let ((?x146 (left s_tmp__)))
 (= ?x146 ?x113))))
(assert
 (let ((?x153 (right s_tmp_)))
 (let ((?x157 (right s_tmp__)))
 (= ?x157 ?x153))))
(assert
 (= c__ c!1))
(assert
 (let ((?x90 (left s_)))
 (let ((?x264 (left s__)))
 (let (($x303 (= ?x264 ?x90)))
 (let ((?x93 (right s_)))
 (let (($x279 ((_ is stack ) ?x93)))
 (let (($x274 (and (= c_ right-to-left) $x279)))
 (let ((?x95 (center s_)))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ center-to-right)))
 (let (($x259 (and $x276 $x275)))
 (let (($x260 (= c_ center-to-left)))
 (let (($x261 (and $x260 $x275)))
 (let (($x312 (ite $x261 (= ?x264 (stack (top ?x95) ?x90)) (ite $x259 $x303 (ite $x274 (= ?x264 (stack (top ?x93) ?x90)) $x303)))))
 (let (($x296 (= ?x264 (rest ?x90))))
 (let (($x286 ((_ is stack ) ?x90)))
 (let (($x287 (= c_ left-to-right)))
 (let (($x288 (and $x287 $x286)))
 (let (($x283 (= c_ left-to-center)))
 (let (($x284 (and $x283 $x286)))
 (ite $x284 $x296 (ite $x288 $x296 $x312))))))))))))))))))))))
(assert
 (let ((?x93 (right s_)))
 (let ((?x266 (right s__)))
 (let (($x299 (= ?x266 ?x93)))
 (let (($x290 (= ?x266 (rest ?x93))))
 (let (($x279 ((_ is stack ) ?x93)))
 (let (($x257 (and (= c_ right-to-center) $x279)))
 (let (($x274 (and (= c_ right-to-left) $x279)))
 (let ((?x95 (center s_)))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ center-to-right)))
 (let (($x259 (and $x276 $x275)))
 (let (($x309 (ite $x259 (= ?x266 (stack (top ?x95) ?x93)) (ite $x274 $x290 (ite $x257 $x290 $x299)))))
 (let (($x260 (= c_ center-to-left)))
 (let (($x261 (and $x260 $x275)))
 (let ((?x90 (left s_)))
 (let (($x286 ((_ is stack ) ?x90)))
 (let (($x287 (= c_ left-to-right)))
 (let (($x288 (and $x287 $x286)))
 (let (($x283 (= c_ left-to-center)))
 (let (($x284 (and $x283 $x286)))
 (ite $x284 (= ?x266 (stack (top ?x90) ?x93)) (ite $x288 $x299 (ite $x261 $x299 $x309))))))))))))))))))))))))
(assert
 (let ((?x95 (center s_)))
 (let ((?x281 (center s__)))
 (let (($x301 (= ?x281 ?x95)))
 (let ((?x93 (right s_)))
 (let (($x279 ((_ is stack ) ?x93)))
 (let (($x257 (and (= c_ right-to-center) $x279)))
 (let (($x274 (and (= c_ right-to-left) $x279)))
 (let (($x293 (= ?x281 (rest ?x95))))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ center-to-right)))
 (let (($x259 (and $x276 $x275)))
 (let (($x308 (ite $x259 $x293 (ite $x274 $x301 (ite $x257 (= ?x281 (stack (top ?x93) ?x95)) $x301)))))
 (let (($x260 (= c_ center-to-left)))
 (let (($x261 (and $x260 $x275)))
 (let ((?x90 (left s_)))
 (let (($x286 ((_ is stack ) ?x90)))
 (let (($x287 (= c_ left-to-right)))
 (let (($x288 (and $x287 $x286)))
 (let (($x283 (= c_ left-to-center)))
 (let (($x284 (and $x283 $x286)))
 (ite $x284 $x301 (ite $x288 (= ?x281 (stack (top ?x90) ?x95)) (ite $x261 $x293 $x308))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x264 (left s__)))
 (let ((?x160 (left s___)))
 (let (($x414 (= ?x160 ?x264)))
 (let ((?x266 (right s__)))
 (let ((?x381 (top ?x266)))
 (let ((?x382 (stack ?x381 ?x264)))
 (let (($x408 (= ?x160 ?x382)))
 (let (($x384 ((_ is stack ) ?x266)))
 (let (($x387 (= c__ right-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x281 (center s__)))
 (let (($x389 ((_ is stack ) ?x281)))
 (let (($x390 (= c__ center-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let ((?x377 (top ?x281)))
 (let ((?x378 (stack ?x377 ?x264)))
 (let (($x405 (= ?x160 ?x378)))
 (let (($x392 (= c__ center-to-left)))
 (let (($x393 (and $x392 $x389)))
 (let ((?x162 (rest ?x264)))
 (let (($x401 (= ?x160 ?x162)))
 (let (($x394 ((_ is stack ) ?x264)))
 (let (($x395 (= c__ left-to-right)))
 (let (($x396 (and $x395 $x394)))
 (let (($x397 (= c__ left-to-center)))
 (let (($x398 (and $x397 $x394)))
 (ite $x398 $x401 (ite $x396 $x401 (ite $x393 $x405 (ite $x391 $x414 (ite $x388 $x408 $x414))))))))))))))))))))))))))))))))
(assert
 (let ((?x266 (right s__)))
 (let ((?x163 (right s___)))
 (let (($x410 (= ?x163 ?x266)))
 (let ((?x380 (rest ?x266)))
 (let (($x407 (= ?x163 ?x380)))
 (let (($x384 ((_ is stack ) ?x266)))
 (let (($x385 (= c__ right-to-center)))
 (let (($x386 (and $x385 $x384)))
 (let (($x387 (= c__ right-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x281 (center s__)))
 (let ((?x377 (top ?x281)))
 (let ((?x379 (stack ?x377 ?x266)))
 (let (($x406 (= ?x163 ?x379)))
 (let (($x389 ((_ is stack ) ?x281)))
 (let (($x390 (= c__ center-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let (($x392 (= c__ center-to-left)))
 (let (($x393 (and $x392 $x389)))
 (let ((?x264 (left s__)))
 (let (($x394 ((_ is stack ) ?x264)))
 (let (($x395 (= c__ left-to-right)))
 (let (($x396 (and $x395 $x394)))
 (let (($x427 (ite $x396 $x410 (ite $x393 $x410 (ite $x391 $x406 (ite $x388 $x407 (ite $x386 $x407 $x410)))))))
 (let ((?x255 (top ?x264)))
 (let ((?x373 (stack ?x255 ?x266)))
 (let (($x402 (= ?x163 ?x373)))
 (let (($x397 (= c__ left-to-center)))
 (let (($x398 (and $x397 $x394)))
 (ite $x398 $x402 $x427)))))))))))))))))))))))))))))))
(assert
 (let ((?x281 (center s__)))
 (let ((?x374 (center s___)))
 (let (($x412 (= ?x374 ?x281)))
 (let ((?x266 (right s__)))
 (let ((?x381 (top ?x266)))
 (let ((?x383 (stack ?x381 ?x281)))
 (let (($x409 (= ?x374 ?x383)))
 (let (($x384 ((_ is stack ) ?x266)))
 (let (($x385 (= c__ right-to-center)))
 (let (($x386 (and $x385 $x384)))
 (let (($x387 (= c__ right-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x376 (rest ?x281)))
 (let (($x404 (= ?x374 ?x376)))
 (let (($x389 ((_ is stack ) ?x281)))
 (let (($x390 (= c__ center-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let (($x392 (= c__ center-to-left)))
 (let (($x393 (and $x392 $x389)))
 (let ((?x264 (left s__)))
 (let ((?x255 (top ?x264)))
 (let ((?x375 (stack ?x255 ?x281)))
 (let (($x403 (= ?x374 ?x375)))
 (let (($x394 ((_ is stack ) ?x264)))
 (let (($x395 (= c__ left-to-right)))
 (let (($x396 (and $x395 $x394)))
 (let (($x426 (ite $x396 $x403 (ite $x393 $x404 (ite $x391 $x404 (ite $x388 $x412 (ite $x386 $x409 $x412)))))))
 (let (($x397 (= c__ left-to-center)))
 (let (($x398 (and $x397 $x394)))
 (ite $x398 $x412 $x426)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x160 (left s___)))
 (let ((?x319 (left s____)))
 (let (($x552 (= ?x319 ?x160)))
 (let ((?x163 (right s___)))
 (let ((?x519 (top ?x163)))
 (let ((?x520 (stack ?x519 ?x160)))
 (let (($x546 (= ?x319 ?x520)))
 (let (($x522 ((_ is stack ) ?x163)))
 (let (($x525 (= c___ right-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x374 (center s___)))
 (let (($x527 ((_ is stack ) ?x374)))
 (let (($x528 (= c___ center-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let ((?x515 (top ?x374)))
 (let ((?x516 (stack ?x515 ?x160)))
 (let (($x543 (= ?x319 ?x516)))
 (let (($x530 (= c___ center-to-left)))
 (let (($x531 (and $x530 $x527)))
 (let ((?x350 (rest ?x160)))
 (let (($x539 (= ?x319 ?x350)))
 (let (($x532 ((_ is stack ) ?x160)))
 (let (($x533 (= c___ left-to-right)))
 (let (($x534 (and $x533 $x532)))
 (let (($x535 (= c___ left-to-center)))
 (let (($x536 (and $x535 $x532)))
 (ite $x536 $x539 (ite $x534 $x539 (ite $x531 $x543 (ite $x529 $x552 (ite $x526 $x546 $x552))))))))))))))))))))))))))))))))
(assert
 (let ((?x163 (right s___)))
 (let ((?x351 (right s____)))
 (let (($x548 (= ?x351 ?x163)))
 (let ((?x518 (rest ?x163)))
 (let (($x545 (= ?x351 ?x518)))
 (let (($x522 ((_ is stack ) ?x163)))
 (let (($x523 (= c___ right-to-center)))
 (let (($x524 (and $x523 $x522)))
 (let (($x525 (= c___ right-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x374 (center s___)))
 (let ((?x515 (top ?x374)))
 (let ((?x517 (stack ?x515 ?x163)))
 (let (($x544 (= ?x351 ?x517)))
 (let (($x527 ((_ is stack ) ?x374)))
 (let (($x528 (= c___ center-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let (($x530 (= c___ center-to-left)))
 (let (($x531 (and $x530 $x527)))
 (let ((?x160 (left s___)))
 (let (($x532 ((_ is stack ) ?x160)))
 (let (($x533 (= c___ left-to-right)))
 (let (($x534 (and $x533 $x532)))
 (let (($x565 (ite $x534 $x548 (ite $x531 $x548 (ite $x529 $x544 (ite $x526 $x545 (ite $x524 $x545 $x548)))))))
 (let ((?x372 (top ?x160)))
 (let ((?x511 (stack ?x372 ?x163)))
 (let (($x540 (= ?x351 ?x511)))
 (let (($x535 (= c___ left-to-center)))
 (let (($x536 (and $x535 $x532)))
 (ite $x536 $x540 $x565)))))))))))))))))))))))))))))))
(assert
 (let ((?x374 (center s___)))
 (let ((?x512 (center s____)))
 (let (($x550 (= ?x512 ?x374)))
 (let ((?x163 (right s___)))
 (let ((?x519 (top ?x163)))
 (let ((?x521 (stack ?x519 ?x374)))
 (let (($x547 (= ?x512 ?x521)))
 (let (($x522 ((_ is stack ) ?x163)))
 (let (($x523 (= c___ right-to-center)))
 (let (($x524 (and $x523 $x522)))
 (let (($x525 (= c___ right-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x514 (rest ?x374)))
 (let (($x542 (= ?x512 ?x514)))
 (let (($x527 ((_ is stack ) ?x374)))
 (let (($x528 (= c___ center-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let (($x530 (= c___ center-to-left)))
 (let (($x531 (and $x530 $x527)))
 (let ((?x160 (left s___)))
 (let ((?x372 (top ?x160)))
 (let ((?x513 (stack ?x372 ?x374)))
 (let (($x541 (= ?x512 ?x513)))
 (let (($x532 ((_ is stack ) ?x160)))
 (let (($x533 (= c___ left-to-right)))
 (let (($x534 (and $x533 $x532)))
 (let (($x564 (ite $x534 $x541 (ite $x531 $x542 (ite $x529 $x542 (ite $x526 $x550 (ite $x524 $x547 $x550)))))))
 (let (($x535 (= c___ left-to-center)))
 (let (($x536 (and $x535 $x532)))
 (ite $x536 $x550 $x564)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x319 (left s____)))
 (let ((?x430 (left s_____)))
 (let (($x690 (= ?x430 ?x319)))
 (let ((?x351 (right s____)))
 (let ((?x657 (top ?x351)))
 (let ((?x658 (stack ?x657 ?x319)))
 (let (($x684 (= ?x430 ?x658)))
 (let (($x660 ((_ is stack ) ?x351)))
 (let (($x663 (= c____ right-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x512 (center s____)))
 (let (($x665 ((_ is stack ) ?x512)))
 (let (($x666 (= c____ center-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let ((?x653 (top ?x512)))
 (let ((?x654 (stack ?x653 ?x319)))
 (let (($x681 (= ?x430 ?x654)))
 (let (($x668 (= c____ center-to-left)))
 (let (($x669 (and $x668 $x665)))
 (let ((?x463 (rest ?x319)))
 (let (($x677 (= ?x430 ?x463)))
 (let (($x670 ((_ is stack ) ?x319)))
 (let (($x671 (= c____ left-to-right)))
 (let (($x672 (and $x671 $x670)))
 (let (($x673 (= c____ left-to-center)))
 (let (($x674 (and $x673 $x670)))
 (ite $x674 $x677 (ite $x672 $x677 (ite $x669 $x681 (ite $x667 $x690 (ite $x664 $x684 $x690))))))))))))))))))))))))))))))))
(assert
 (let ((?x351 (right s____)))
 (let ((?x464 (right s_____)))
 (let (($x686 (= ?x464 ?x351)))
 (let ((?x656 (rest ?x351)))
 (let (($x683 (= ?x464 ?x656)))
 (let (($x660 ((_ is stack ) ?x351)))
 (let (($x661 (= c____ right-to-center)))
 (let (($x662 (and $x661 $x660)))
 (let (($x663 (= c____ right-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x512 (center s____)))
 (let ((?x653 (top ?x512)))
 (let ((?x655 (stack ?x653 ?x351)))
 (let (($x682 (= ?x464 ?x655)))
 (let (($x665 ((_ is stack ) ?x512)))
 (let (($x666 (= c____ center-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let (($x668 (= c____ center-to-left)))
 (let (($x669 (and $x668 $x665)))
 (let ((?x319 (left s____)))
 (let (($x670 ((_ is stack ) ?x319)))
 (let (($x671 (= c____ left-to-right)))
 (let (($x672 (and $x671 $x670)))
 (let (($x703 (ite $x672 $x686 (ite $x669 $x686 (ite $x667 $x682 (ite $x664 $x683 (ite $x662 $x683 $x686)))))))
 (let ((?x510 (top ?x319)))
 (let ((?x649 (stack ?x510 ?x351)))
 (let (($x678 (= ?x464 ?x649)))
 (let (($x673 (= c____ left-to-center)))
 (let (($x674 (and $x673 $x670)))
 (ite $x674 $x678 $x703)))))))))))))))))))))))))))))))
(assert
 (let ((?x512 (center s____)))
 (let ((?x650 (center s_____)))
 (let (($x688 (= ?x650 ?x512)))
 (let ((?x351 (right s____)))
 (let ((?x657 (top ?x351)))
 (let ((?x659 (stack ?x657 ?x512)))
 (let (($x685 (= ?x650 ?x659)))
 (let (($x660 ((_ is stack ) ?x351)))
 (let (($x661 (= c____ right-to-center)))
 (let (($x662 (and $x661 $x660)))
 (let (($x663 (= c____ right-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x652 (rest ?x512)))
 (let (($x680 (= ?x650 ?x652)))
 (let (($x665 ((_ is stack ) ?x512)))
 (let (($x666 (= c____ center-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let (($x668 (= c____ center-to-left)))
 (let (($x669 (and $x668 $x665)))
 (let ((?x319 (left s____)))
 (let ((?x510 (top ?x319)))
 (let ((?x651 (stack ?x510 ?x512)))
 (let (($x679 (= ?x650 ?x651)))
 (let (($x670 ((_ is stack ) ?x319)))
 (let (($x671 (= c____ left-to-right)))
 (let (($x672 (and $x671 $x670)))
 (let (($x702 (ite $x672 $x679 (ite $x669 $x680 (ite $x667 $x680 (ite $x664 $x688 (ite $x662 $x685 $x688)))))))
 (let (($x673 (= c____ left-to-center)))
 (let (($x674 (and $x673 $x670)))
 (ite $x674 $x688 $x702)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x430 (left s_____)))
 (let ((?x568 (left s______)))
 (let (($x828 (= ?x568 ?x430)))
 (let ((?x464 (right s_____)))
 (let ((?x795 (top ?x464)))
 (let ((?x796 (stack ?x795 ?x430)))
 (let (($x822 (= ?x568 ?x796)))
 (let (($x798 ((_ is stack ) ?x464)))
 (let (($x801 (= c_____ right-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x650 (center s_____)))
 (let (($x803 ((_ is stack ) ?x650)))
 (let (($x804 (= c_____ center-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let ((?x791 (top ?x650)))
 (let ((?x792 (stack ?x791 ?x430)))
 (let (($x819 (= ?x568 ?x792)))
 (let (($x806 (= c_____ center-to-left)))
 (let (($x807 (and $x806 $x803)))
 (let ((?x601 (rest ?x430)))
 (let (($x815 (= ?x568 ?x601)))
 (let (($x808 ((_ is stack ) ?x430)))
 (let (($x809 (= c_____ left-to-right)))
 (let (($x810 (and $x809 $x808)))
 (let (($x811 (= c_____ left-to-center)))
 (let (($x812 (and $x811 $x808)))
 (ite $x812 $x815 (ite $x810 $x815 (ite $x807 $x819 (ite $x805 $x828 (ite $x802 $x822 $x828))))))))))))))))))))))))))))))))
(assert
 (let ((?x464 (right s_____)))
 (let ((?x602 (right s______)))
 (let (($x824 (= ?x602 ?x464)))
 (let ((?x794 (rest ?x464)))
 (let (($x821 (= ?x602 ?x794)))
 (let (($x798 ((_ is stack ) ?x464)))
 (let (($x799 (= c_____ right-to-center)))
 (let (($x800 (and $x799 $x798)))
 (let (($x801 (= c_____ right-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x650 (center s_____)))
 (let ((?x791 (top ?x650)))
 (let ((?x793 (stack ?x791 ?x464)))
 (let (($x820 (= ?x602 ?x793)))
 (let (($x803 ((_ is stack ) ?x650)))
 (let (($x804 (= c_____ center-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let (($x806 (= c_____ center-to-left)))
 (let (($x807 (and $x806 $x803)))
 (let ((?x430 (left s_____)))
 (let (($x808 ((_ is stack ) ?x430)))
 (let (($x809 (= c_____ left-to-right)))
 (let (($x810 (and $x809 $x808)))
 (let (($x841 (ite $x810 $x824 (ite $x807 $x824 (ite $x805 $x820 (ite $x802 $x821 (ite $x800 $x821 $x824)))))))
 (let ((?x648 (top ?x430)))
 (let ((?x787 (stack ?x648 ?x464)))
 (let (($x816 (= ?x602 ?x787)))
 (let (($x811 (= c_____ left-to-center)))
 (let (($x812 (and $x811 $x808)))
 (ite $x812 $x816 $x841)))))))))))))))))))))))))))))))
(assert
 (let ((?x650 (center s_____)))
 (let ((?x788 (center s______)))
 (let (($x826 (= ?x788 ?x650)))
 (let ((?x464 (right s_____)))
 (let ((?x795 (top ?x464)))
 (let ((?x797 (stack ?x795 ?x650)))
 (let (($x823 (= ?x788 ?x797)))
 (let (($x798 ((_ is stack ) ?x464)))
 (let (($x799 (= c_____ right-to-center)))
 (let (($x800 (and $x799 $x798)))
 (let (($x801 (= c_____ right-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x790 (rest ?x650)))
 (let (($x818 (= ?x788 ?x790)))
 (let (($x803 ((_ is stack ) ?x650)))
 (let (($x804 (= c_____ center-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let (($x806 (= c_____ center-to-left)))
 (let (($x807 (and $x806 $x803)))
 (let ((?x430 (left s_____)))
 (let ((?x648 (top ?x430)))
 (let ((?x789 (stack ?x648 ?x650)))
 (let (($x817 (= ?x788 ?x789)))
 (let (($x808 ((_ is stack ) ?x430)))
 (let (($x809 (= c_____ left-to-right)))
 (let (($x810 (and $x809 $x808)))
 (let (($x840 (ite $x810 $x817 (ite $x807 $x818 (ite $x805 $x818 (ite $x802 $x826 (ite $x800 $x823 $x826)))))))
 (let (($x811 (= c_____ left-to-center)))
 (let (($x812 (and $x811 $x808)))
 (ite $x812 $x826 $x840)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x568 (left s______)))
 (let ((?x706 (left s_______)))
 (let (($x966 (= ?x706 ?x568)))
 (let ((?x602 (right s______)))
 (let ((?x933 (top ?x602)))
 (let ((?x934 (stack ?x933 ?x568)))
 (let (($x960 (= ?x706 ?x934)))
 (let (($x936 ((_ is stack ) ?x602)))
 (let (($x939 (= c______ right-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x788 (center s______)))
 (let (($x941 ((_ is stack ) ?x788)))
 (let (($x942 (= c______ center-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let ((?x929 (top ?x788)))
 (let ((?x930 (stack ?x929 ?x568)))
 (let (($x957 (= ?x706 ?x930)))
 (let (($x944 (= c______ center-to-left)))
 (let (($x945 (and $x944 $x941)))
 (let ((?x739 (rest ?x568)))
 (let (($x953 (= ?x706 ?x739)))
 (let (($x946 ((_ is stack ) ?x568)))
 (let (($x947 (= c______ left-to-right)))
 (let (($x948 (and $x947 $x946)))
 (let (($x949 (= c______ left-to-center)))
 (let (($x950 (and $x949 $x946)))
 (ite $x950 $x953 (ite $x948 $x953 (ite $x945 $x957 (ite $x943 $x966 (ite $x940 $x960 $x966))))))))))))))))))))))))))))))))
(assert
 (let ((?x602 (right s______)))
 (let ((?x740 (right s_______)))
 (let (($x962 (= ?x740 ?x602)))
 (let ((?x932 (rest ?x602)))
 (let (($x959 (= ?x740 ?x932)))
 (let (($x936 ((_ is stack ) ?x602)))
 (let (($x937 (= c______ right-to-center)))
 (let (($x938 (and $x937 $x936)))
 (let (($x939 (= c______ right-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x788 (center s______)))
 (let ((?x929 (top ?x788)))
 (let ((?x931 (stack ?x929 ?x602)))
 (let (($x958 (= ?x740 ?x931)))
 (let (($x941 ((_ is stack ) ?x788)))
 (let (($x942 (= c______ center-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let (($x944 (= c______ center-to-left)))
 (let (($x945 (and $x944 $x941)))
 (let ((?x568 (left s______)))
 (let (($x946 ((_ is stack ) ?x568)))
 (let (($x947 (= c______ left-to-right)))
 (let (($x948 (and $x947 $x946)))
 (let (($x979 (ite $x948 $x962 (ite $x945 $x962 (ite $x943 $x958 (ite $x940 $x959 (ite $x938 $x959 $x962)))))))
 (let ((?x786 (top ?x568)))
 (let ((?x925 (stack ?x786 ?x602)))
 (let (($x954 (= ?x740 ?x925)))
 (let (($x949 (= c______ left-to-center)))
 (let (($x950 (and $x949 $x946)))
 (ite $x950 $x954 $x979)))))))))))))))))))))))))))))))
(assert
 (let ((?x788 (center s______)))
 (let ((?x926 (center s_______)))
 (let (($x964 (= ?x926 ?x788)))
 (let ((?x602 (right s______)))
 (let ((?x933 (top ?x602)))
 (let ((?x935 (stack ?x933 ?x788)))
 (let (($x961 (= ?x926 ?x935)))
 (let (($x936 ((_ is stack ) ?x602)))
 (let (($x937 (= c______ right-to-center)))
 (let (($x938 (and $x937 $x936)))
 (let (($x939 (= c______ right-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x928 (rest ?x788)))
 (let (($x956 (= ?x926 ?x928)))
 (let (($x941 ((_ is stack ) ?x788)))
 (let (($x942 (= c______ center-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let (($x944 (= c______ center-to-left)))
 (let (($x945 (and $x944 $x941)))
 (let ((?x568 (left s______)))
 (let ((?x786 (top ?x568)))
 (let ((?x927 (stack ?x786 ?x788)))
 (let (($x955 (= ?x926 ?x927)))
 (let (($x946 ((_ is stack ) ?x568)))
 (let (($x947 (= c______ left-to-right)))
 (let (($x948 (and $x947 $x946)))
 (let (($x978 (ite $x948 $x955 (ite $x945 $x956 (ite $x943 $x956 (ite $x940 $x964 (ite $x938 $x961 $x964)))))))
 (let (($x949 (= c______ left-to-center)))
 (let (($x950 (and $x949 $x946)))
 (ite $x950 $x964 $x978)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x706 (left s_______)))
 (let ((?x844 (left s________)))
 (let (($x1104 (= ?x844 ?x706)))
 (let ((?x740 (right s_______)))
 (let ((?x1071 (top ?x740)))
 (let ((?x1072 (stack ?x1071 ?x706)))
 (let (($x1098 (= ?x844 ?x1072)))
 (let (($x1074 ((_ is stack ) ?x740)))
 (let (($x1077 (= c_______ right-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x926 (center s_______)))
 (let (($x1079 ((_ is stack ) ?x926)))
 (let (($x1080 (= c_______ center-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let ((?x1067 (top ?x926)))
 (let ((?x1068 (stack ?x1067 ?x706)))
 (let (($x1095 (= ?x844 ?x1068)))
 (let (($x1082 (= c_______ center-to-left)))
 (let (($x1083 (and $x1082 $x1079)))
 (let ((?x877 (rest ?x706)))
 (let (($x1091 (= ?x844 ?x877)))
 (let (($x1084 ((_ is stack ) ?x706)))
 (let (($x1085 (= c_______ left-to-right)))
 (let (($x1086 (and $x1085 $x1084)))
 (let (($x1087 (= c_______ left-to-center)))
 (let (($x1088 (and $x1087 $x1084)))
 (ite $x1088 $x1091 (ite $x1086 $x1091 (ite $x1083 $x1095 (ite $x1081 $x1104 (ite $x1078 $x1098 $x1104))))))))))))))))))))))))))))))))
(assert
 (let ((?x740 (right s_______)))
 (let ((?x878 (right s________)))
 (let (($x1100 (= ?x878 ?x740)))
 (let ((?x1070 (rest ?x740)))
 (let (($x1097 (= ?x878 ?x1070)))
 (let (($x1074 ((_ is stack ) ?x740)))
 (let (($x1075 (= c_______ right-to-center)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1077 (= c_______ right-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x926 (center s_______)))
 (let ((?x1067 (top ?x926)))
 (let ((?x1069 (stack ?x1067 ?x740)))
 (let (($x1096 (= ?x878 ?x1069)))
 (let (($x1079 ((_ is stack ) ?x926)))
 (let (($x1080 (= c_______ center-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let (($x1082 (= c_______ center-to-left)))
 (let (($x1083 (and $x1082 $x1079)))
 (let ((?x706 (left s_______)))
 (let (($x1084 ((_ is stack ) ?x706)))
 (let (($x1085 (= c_______ left-to-right)))
 (let (($x1086 (and $x1085 $x1084)))
 (let (($x1117 (ite $x1086 $x1100 (ite $x1083 $x1100 (ite $x1081 $x1096 (ite $x1078 $x1097 (ite $x1076 $x1097 $x1100)))))))
 (let ((?x924 (top ?x706)))
 (let ((?x1063 (stack ?x924 ?x740)))
 (let (($x1092 (= ?x878 ?x1063)))
 (let (($x1087 (= c_______ left-to-center)))
 (let (($x1088 (and $x1087 $x1084)))
 (ite $x1088 $x1092 $x1117)))))))))))))))))))))))))))))))
(assert
 (let ((?x926 (center s_______)))
 (let ((?x1064 (center s________)))
 (let (($x1102 (= ?x1064 ?x926)))
 (let ((?x740 (right s_______)))
 (let ((?x1071 (top ?x740)))
 (let ((?x1073 (stack ?x1071 ?x926)))
 (let (($x1099 (= ?x1064 ?x1073)))
 (let (($x1074 ((_ is stack ) ?x740)))
 (let (($x1075 (= c_______ right-to-center)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1077 (= c_______ right-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x1066 (rest ?x926)))
 (let (($x1094 (= ?x1064 ?x1066)))
 (let (($x1079 ((_ is stack ) ?x926)))
 (let (($x1080 (= c_______ center-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let (($x1082 (= c_______ center-to-left)))
 (let (($x1083 (and $x1082 $x1079)))
 (let ((?x706 (left s_______)))
 (let ((?x924 (top ?x706)))
 (let ((?x1065 (stack ?x924 ?x926)))
 (let (($x1093 (= ?x1064 ?x1065)))
 (let (($x1084 ((_ is stack ) ?x706)))
 (let (($x1085 (= c_______ left-to-right)))
 (let (($x1086 (and $x1085 $x1084)))
 (let (($x1116 (ite $x1086 $x1093 (ite $x1083 $x1094 (ite $x1081 $x1094 (ite $x1078 $x1102 (ite $x1076 $x1099 $x1102)))))))
 (let (($x1087 (= c_______ left-to-center)))
 (let (($x1088 (and $x1087 $x1084)))
 (ite $x1088 $x1102 $x1116)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x844 (left s________)))
 (let ((?x982 (left s_________)))
 (let (($x1242 (= ?x982 ?x844)))
 (let ((?x878 (right s________)))
 (let ((?x1209 (top ?x878)))
 (let ((?x1210 (stack ?x1209 ?x844)))
 (let (($x1236 (= ?x982 ?x1210)))
 (let (($x1212 ((_ is stack ) ?x878)))
 (let (($x1215 (= c________ right-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x1064 (center s________)))
 (let (($x1217 ((_ is stack ) ?x1064)))
 (let (($x1218 (= c________ center-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let ((?x1205 (top ?x1064)))
 (let ((?x1206 (stack ?x1205 ?x844)))
 (let (($x1233 (= ?x982 ?x1206)))
 (let (($x1220 (= c________ center-to-left)))
 (let (($x1221 (and $x1220 $x1217)))
 (let ((?x1015 (rest ?x844)))
 (let (($x1229 (= ?x982 ?x1015)))
 (let (($x1222 ((_ is stack ) ?x844)))
 (let (($x1223 (= c________ left-to-right)))
 (let (($x1224 (and $x1223 $x1222)))
 (let (($x1225 (= c________ left-to-center)))
 (let (($x1226 (and $x1225 $x1222)))
 (ite $x1226 $x1229 (ite $x1224 $x1229 (ite $x1221 $x1233 (ite $x1219 $x1242 (ite $x1216 $x1236 $x1242))))))))))))))))))))))))))))))))
(assert
 (let ((?x878 (right s________)))
 (let ((?x1016 (right s_________)))
 (let (($x1238 (= ?x1016 ?x878)))
 (let ((?x1208 (rest ?x878)))
 (let (($x1235 (= ?x1016 ?x1208)))
 (let (($x1212 ((_ is stack ) ?x878)))
 (let (($x1213 (= c________ right-to-center)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1215 (= c________ right-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x1064 (center s________)))
 (let ((?x1205 (top ?x1064)))
 (let ((?x1207 (stack ?x1205 ?x878)))
 (let (($x1234 (= ?x1016 ?x1207)))
 (let (($x1217 ((_ is stack ) ?x1064)))
 (let (($x1218 (= c________ center-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let (($x1220 (= c________ center-to-left)))
 (let (($x1221 (and $x1220 $x1217)))
 (let ((?x844 (left s________)))
 (let (($x1222 ((_ is stack ) ?x844)))
 (let (($x1223 (= c________ left-to-right)))
 (let (($x1224 (and $x1223 $x1222)))
 (let (($x1255 (ite $x1224 $x1238 (ite $x1221 $x1238 (ite $x1219 $x1234 (ite $x1216 $x1235 (ite $x1214 $x1235 $x1238)))))))
 (let ((?x1062 (top ?x844)))
 (let ((?x1201 (stack ?x1062 ?x878)))
 (let (($x1230 (= ?x1016 ?x1201)))
 (let (($x1225 (= c________ left-to-center)))
 (let (($x1226 (and $x1225 $x1222)))
 (ite $x1226 $x1230 $x1255)))))))))))))))))))))))))))))))
(assert
 (let ((?x1064 (center s________)))
 (let ((?x1202 (center s_________)))
 (let (($x1240 (= ?x1202 ?x1064)))
 (let ((?x878 (right s________)))
 (let ((?x1209 (top ?x878)))
 (let ((?x1211 (stack ?x1209 ?x1064)))
 (let (($x1237 (= ?x1202 ?x1211)))
 (let (($x1212 ((_ is stack ) ?x878)))
 (let (($x1213 (= c________ right-to-center)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1215 (= c________ right-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x1204 (rest ?x1064)))
 (let (($x1232 (= ?x1202 ?x1204)))
 (let (($x1217 ((_ is stack ) ?x1064)))
 (let (($x1218 (= c________ center-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let (($x1220 (= c________ center-to-left)))
 (let (($x1221 (and $x1220 $x1217)))
 (let ((?x844 (left s________)))
 (let ((?x1062 (top ?x844)))
 (let ((?x1203 (stack ?x1062 ?x1064)))
 (let (($x1231 (= ?x1202 ?x1203)))
 (let (($x1222 ((_ is stack ) ?x844)))
 (let (($x1223 (= c________ left-to-right)))
 (let (($x1224 (and $x1223 $x1222)))
 (let (($x1254 (ite $x1224 $x1231 (ite $x1221 $x1232 (ite $x1219 $x1232 (ite $x1216 $x1240 (ite $x1214 $x1237 $x1240)))))))
 (let (($x1225 (= c________ left-to-center)))
 (let (($x1226 (and $x1225 $x1222)))
 (ite $x1226 $x1240 $x1254)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x982 (left s_________)))
 (let ((?x1120 (left s__________)))
 (let (($x1380 (= ?x1120 ?x982)))
 (let ((?x1016 (right s_________)))
 (let ((?x1347 (top ?x1016)))
 (let ((?x1348 (stack ?x1347 ?x982)))
 (let (($x1374 (= ?x1120 ?x1348)))
 (let (($x1350 ((_ is stack ) ?x1016)))
 (let (($x1353 (= c_________ right-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x1202 (center s_________)))
 (let (($x1355 ((_ is stack ) ?x1202)))
 (let (($x1356 (= c_________ center-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let ((?x1343 (top ?x1202)))
 (let ((?x1344 (stack ?x1343 ?x982)))
 (let (($x1371 (= ?x1120 ?x1344)))
 (let (($x1358 (= c_________ center-to-left)))
 (let (($x1359 (and $x1358 $x1355)))
 (let ((?x1153 (rest ?x982)))
 (let (($x1367 (= ?x1120 ?x1153)))
 (let (($x1360 ((_ is stack ) ?x982)))
 (let (($x1361 (= c_________ left-to-right)))
 (let (($x1362 (and $x1361 $x1360)))
 (let (($x1363 (= c_________ left-to-center)))
 (let (($x1364 (and $x1363 $x1360)))
 (ite $x1364 $x1367 (ite $x1362 $x1367 (ite $x1359 $x1371 (ite $x1357 $x1380 (ite $x1354 $x1374 $x1380))))))))))))))))))))))))))))))))
(assert
 (let ((?x1016 (right s_________)))
 (let ((?x1154 (right s__________)))
 (let (($x1376 (= ?x1154 ?x1016)))
 (let ((?x1346 (rest ?x1016)))
 (let (($x1373 (= ?x1154 ?x1346)))
 (let (($x1350 ((_ is stack ) ?x1016)))
 (let (($x1351 (= c_________ right-to-center)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1353 (= c_________ right-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x1202 (center s_________)))
 (let ((?x1343 (top ?x1202)))
 (let ((?x1345 (stack ?x1343 ?x1016)))
 (let (($x1372 (= ?x1154 ?x1345)))
 (let (($x1355 ((_ is stack ) ?x1202)))
 (let (($x1356 (= c_________ center-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let (($x1358 (= c_________ center-to-left)))
 (let (($x1359 (and $x1358 $x1355)))
 (let ((?x982 (left s_________)))
 (let (($x1360 ((_ is stack ) ?x982)))
 (let (($x1361 (= c_________ left-to-right)))
 (let (($x1362 (and $x1361 $x1360)))
 (let (($x1393 (ite $x1362 $x1376 (ite $x1359 $x1376 (ite $x1357 $x1372 (ite $x1354 $x1373 (ite $x1352 $x1373 $x1376)))))))
 (let ((?x1200 (top ?x982)))
 (let ((?x1339 (stack ?x1200 ?x1016)))
 (let (($x1368 (= ?x1154 ?x1339)))
 (let (($x1363 (= c_________ left-to-center)))
 (let (($x1364 (and $x1363 $x1360)))
 (ite $x1364 $x1368 $x1393)))))))))))))))))))))))))))))))
(assert
 (let ((?x1202 (center s_________)))
 (let ((?x1340 (center s__________)))
 (let (($x1378 (= ?x1340 ?x1202)))
 (let ((?x1016 (right s_________)))
 (let ((?x1347 (top ?x1016)))
 (let ((?x1349 (stack ?x1347 ?x1202)))
 (let (($x1375 (= ?x1340 ?x1349)))
 (let (($x1350 ((_ is stack ) ?x1016)))
 (let (($x1351 (= c_________ right-to-center)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1353 (= c_________ right-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x1342 (rest ?x1202)))
 (let (($x1370 (= ?x1340 ?x1342)))
 (let (($x1355 ((_ is stack ) ?x1202)))
 (let (($x1356 (= c_________ center-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let (($x1358 (= c_________ center-to-left)))
 (let (($x1359 (and $x1358 $x1355)))
 (let ((?x982 (left s_________)))
 (let ((?x1200 (top ?x982)))
 (let ((?x1341 (stack ?x1200 ?x1202)))
 (let (($x1369 (= ?x1340 ?x1341)))
 (let (($x1360 ((_ is stack ) ?x982)))
 (let (($x1361 (= c_________ left-to-right)))
 (let (($x1362 (and $x1361 $x1360)))
 (let (($x1392 (ite $x1362 $x1369 (ite $x1359 $x1370 (ite $x1357 $x1370 (ite $x1354 $x1378 (ite $x1352 $x1375 $x1378)))))))
 (let (($x1363 (= c_________ left-to-center)))
 (let (($x1364 (and $x1363 $x1360)))
 (ite $x1364 $x1378 $x1392)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1120 (left s__________)))
 (let ((?x1258 (left s___________)))
 (let (($x1518 (= ?x1258 ?x1120)))
 (let ((?x1154 (right s__________)))
 (let ((?x1485 (top ?x1154)))
 (let ((?x1486 (stack ?x1485 ?x1120)))
 (let (($x1512 (= ?x1258 ?x1486)))
 (let (($x1488 ((_ is stack ) ?x1154)))
 (let (($x1491 (= c__________ right-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1340 (center s__________)))
 (let (($x1493 ((_ is stack ) ?x1340)))
 (let (($x1494 (= c__________ center-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let ((?x1481 (top ?x1340)))
 (let ((?x1482 (stack ?x1481 ?x1120)))
 (let (($x1509 (= ?x1258 ?x1482)))
 (let (($x1496 (= c__________ center-to-left)))
 (let (($x1497 (and $x1496 $x1493)))
 (let ((?x1291 (rest ?x1120)))
 (let (($x1505 (= ?x1258 ?x1291)))
 (let (($x1498 ((_ is stack ) ?x1120)))
 (let (($x1499 (= c__________ left-to-right)))
 (let (($x1500 (and $x1499 $x1498)))
 (let (($x1501 (= c__________ left-to-center)))
 (let (($x1502 (and $x1501 $x1498)))
 (ite $x1502 $x1505 (ite $x1500 $x1505 (ite $x1497 $x1509 (ite $x1495 $x1518 (ite $x1492 $x1512 $x1518))))))))))))))))))))))))))))))))
(assert
 (let ((?x1154 (right s__________)))
 (let ((?x1292 (right s___________)))
 (let (($x1514 (= ?x1292 ?x1154)))
 (let ((?x1484 (rest ?x1154)))
 (let (($x1511 (= ?x1292 ?x1484)))
 (let (($x1488 ((_ is stack ) ?x1154)))
 (let (($x1489 (= c__________ right-to-center)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1491 (= c__________ right-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1340 (center s__________)))
 (let ((?x1481 (top ?x1340)))
 (let ((?x1483 (stack ?x1481 ?x1154)))
 (let (($x1510 (= ?x1292 ?x1483)))
 (let (($x1493 ((_ is stack ) ?x1340)))
 (let (($x1494 (= c__________ center-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let (($x1496 (= c__________ center-to-left)))
 (let (($x1497 (and $x1496 $x1493)))
 (let ((?x1120 (left s__________)))
 (let (($x1498 ((_ is stack ) ?x1120)))
 (let (($x1499 (= c__________ left-to-right)))
 (let (($x1500 (and $x1499 $x1498)))
 (let (($x1531 (ite $x1500 $x1514 (ite $x1497 $x1514 (ite $x1495 $x1510 (ite $x1492 $x1511 (ite $x1490 $x1511 $x1514)))))))
 (let ((?x1338 (top ?x1120)))
 (let ((?x1477 (stack ?x1338 ?x1154)))
 (let (($x1506 (= ?x1292 ?x1477)))
 (let (($x1501 (= c__________ left-to-center)))
 (let (($x1502 (and $x1501 $x1498)))
 (ite $x1502 $x1506 $x1531)))))))))))))))))))))))))))))))
(assert
 (let ((?x1340 (center s__________)))
 (let ((?x1478 (center s___________)))
 (let (($x1516 (= ?x1478 ?x1340)))
 (let ((?x1154 (right s__________)))
 (let ((?x1485 (top ?x1154)))
 (let ((?x1487 (stack ?x1485 ?x1340)))
 (let (($x1513 (= ?x1478 ?x1487)))
 (let (($x1488 ((_ is stack ) ?x1154)))
 (let (($x1489 (= c__________ right-to-center)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1491 (= c__________ right-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1480 (rest ?x1340)))
 (let (($x1508 (= ?x1478 ?x1480)))
 (let (($x1493 ((_ is stack ) ?x1340)))
 (let (($x1494 (= c__________ center-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let (($x1496 (= c__________ center-to-left)))
 (let (($x1497 (and $x1496 $x1493)))
 (let ((?x1120 (left s__________)))
 (let ((?x1338 (top ?x1120)))
 (let ((?x1479 (stack ?x1338 ?x1340)))
 (let (($x1507 (= ?x1478 ?x1479)))
 (let (($x1498 ((_ is stack ) ?x1120)))
 (let (($x1499 (= c__________ left-to-right)))
 (let (($x1500 (and $x1499 $x1498)))
 (let (($x1530 (ite $x1500 $x1507 (ite $x1497 $x1508 (ite $x1495 $x1508 (ite $x1492 $x1516 (ite $x1490 $x1513 $x1516)))))))
 (let (($x1501 (= c__________ left-to-center)))
 (let (($x1502 (and $x1501 $x1498)))
 (ite $x1502 $x1516 $x1530)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1258 (left s___________)))
 (let ((?x1396 (left s____________)))
 (let (($x1656 (= ?x1396 ?x1258)))
 (let ((?x1292 (right s___________)))
 (let ((?x1623 (top ?x1292)))
 (let ((?x1624 (stack ?x1623 ?x1258)))
 (let (($x1650 (= ?x1396 ?x1624)))
 (let (($x1626 ((_ is stack ) ?x1292)))
 (let (($x1629 (= c___________ right-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1478 (center s___________)))
 (let (($x1631 ((_ is stack ) ?x1478)))
 (let (($x1632 (= c___________ center-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let ((?x1619 (top ?x1478)))
 (let ((?x1620 (stack ?x1619 ?x1258)))
 (let (($x1647 (= ?x1396 ?x1620)))
 (let (($x1634 (= c___________ center-to-left)))
 (let (($x1635 (and $x1634 $x1631)))
 (let ((?x1429 (rest ?x1258)))
 (let (($x1643 (= ?x1396 ?x1429)))
 (let (($x1636 ((_ is stack ) ?x1258)))
 (let (($x1637 (= c___________ left-to-right)))
 (let (($x1638 (and $x1637 $x1636)))
 (let (($x1639 (= c___________ left-to-center)))
 (let (($x1640 (and $x1639 $x1636)))
 (ite $x1640 $x1643 (ite $x1638 $x1643 (ite $x1635 $x1647 (ite $x1633 $x1656 (ite $x1630 $x1650 $x1656))))))))))))))))))))))))))))))))
(assert
 (let ((?x1292 (right s___________)))
 (let ((?x1430 (right s____________)))
 (let (($x1652 (= ?x1430 ?x1292)))
 (let ((?x1622 (rest ?x1292)))
 (let (($x1649 (= ?x1430 ?x1622)))
 (let (($x1626 ((_ is stack ) ?x1292)))
 (let (($x1627 (= c___________ right-to-center)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1629 (= c___________ right-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1478 (center s___________)))
 (let ((?x1619 (top ?x1478)))
 (let ((?x1621 (stack ?x1619 ?x1292)))
 (let (($x1648 (= ?x1430 ?x1621)))
 (let (($x1631 ((_ is stack ) ?x1478)))
 (let (($x1632 (= c___________ center-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let (($x1634 (= c___________ center-to-left)))
 (let (($x1635 (and $x1634 $x1631)))
 (let ((?x1258 (left s___________)))
 (let (($x1636 ((_ is stack ) ?x1258)))
 (let (($x1637 (= c___________ left-to-right)))
 (let (($x1638 (and $x1637 $x1636)))
 (let (($x1669 (ite $x1638 $x1652 (ite $x1635 $x1652 (ite $x1633 $x1648 (ite $x1630 $x1649 (ite $x1628 $x1649 $x1652)))))))
 (let ((?x1476 (top ?x1258)))
 (let ((?x1615 (stack ?x1476 ?x1292)))
 (let (($x1644 (= ?x1430 ?x1615)))
 (let (($x1639 (= c___________ left-to-center)))
 (let (($x1640 (and $x1639 $x1636)))
 (ite $x1640 $x1644 $x1669)))))))))))))))))))))))))))))))
(assert
 (let ((?x1478 (center s___________)))
 (let ((?x1616 (center s____________)))
 (let (($x1654 (= ?x1616 ?x1478)))
 (let ((?x1292 (right s___________)))
 (let ((?x1623 (top ?x1292)))
 (let ((?x1625 (stack ?x1623 ?x1478)))
 (let (($x1651 (= ?x1616 ?x1625)))
 (let (($x1626 ((_ is stack ) ?x1292)))
 (let (($x1627 (= c___________ right-to-center)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1629 (= c___________ right-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1618 (rest ?x1478)))
 (let (($x1646 (= ?x1616 ?x1618)))
 (let (($x1631 ((_ is stack ) ?x1478)))
 (let (($x1632 (= c___________ center-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let (($x1634 (= c___________ center-to-left)))
 (let (($x1635 (and $x1634 $x1631)))
 (let ((?x1258 (left s___________)))
 (let ((?x1476 (top ?x1258)))
 (let ((?x1617 (stack ?x1476 ?x1478)))
 (let (($x1645 (= ?x1616 ?x1617)))
 (let (($x1636 ((_ is stack ) ?x1258)))
 (let (($x1637 (= c___________ left-to-right)))
 (let (($x1638 (and $x1637 $x1636)))
 (let (($x1668 (ite $x1638 $x1645 (ite $x1635 $x1646 (ite $x1633 $x1646 (ite $x1630 $x1654 (ite $x1628 $x1651 $x1654)))))))
 (let (($x1639 (= c___________ left-to-center)))
 (let (($x1640 (and $x1639 $x1636)))
 (ite $x1640 $x1654 $x1668)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1396 (left s____________)))
 (let ((?x1534 (left s_____________)))
 (let (($x1794 (= ?x1534 ?x1396)))
 (let ((?x1430 (right s____________)))
 (let ((?x1761 (top ?x1430)))
 (let ((?x1762 (stack ?x1761 ?x1396)))
 (let (($x1788 (= ?x1534 ?x1762)))
 (let (($x1764 ((_ is stack ) ?x1430)))
 (let (($x1767 (= c____________ right-to-left)))
 (let (($x1768 (and $x1767 $x1764)))
 (let ((?x1616 (center s____________)))
 (let (($x1769 ((_ is stack ) ?x1616)))
 (let (($x1770 (= c____________ center-to-right)))
 (let (($x1771 (and $x1770 $x1769)))
 (let ((?x1757 (top ?x1616)))
 (let ((?x1758 (stack ?x1757 ?x1396)))
 (let (($x1785 (= ?x1534 ?x1758)))
 (let (($x1772 (= c____________ center-to-left)))
 (let (($x1773 (and $x1772 $x1769)))
 (let ((?x1567 (rest ?x1396)))
 (let (($x1781 (= ?x1534 ?x1567)))
 (let (($x1774 ((_ is stack ) ?x1396)))
 (let (($x1775 (= c____________ left-to-right)))
 (let (($x1776 (and $x1775 $x1774)))
 (let (($x1777 (= c____________ left-to-center)))
 (let (($x1778 (and $x1777 $x1774)))
 (ite $x1778 $x1781 (ite $x1776 $x1781 (ite $x1773 $x1785 (ite $x1771 $x1794 (ite $x1768 $x1788 $x1794))))))))))))))))))))))))))))))))
(assert
 (let ((?x1430 (right s____________)))
 (let ((?x1568 (right s_____________)))
 (let (($x1790 (= ?x1568 ?x1430)))
 (let ((?x1760 (rest ?x1430)))
 (let (($x1787 (= ?x1568 ?x1760)))
 (let (($x1764 ((_ is stack ) ?x1430)))
 (let (($x1765 (= c____________ right-to-center)))
 (let (($x1766 (and $x1765 $x1764)))
 (let (($x1767 (= c____________ right-to-left)))
 (let (($x1768 (and $x1767 $x1764)))
 (let ((?x1616 (center s____________)))
 (let ((?x1757 (top ?x1616)))
 (let ((?x1759 (stack ?x1757 ?x1430)))
 (let (($x1786 (= ?x1568 ?x1759)))
 (let (($x1769 ((_ is stack ) ?x1616)))
 (let (($x1770 (= c____________ center-to-right)))
 (let (($x1771 (and $x1770 $x1769)))
 (let (($x1772 (= c____________ center-to-left)))
 (let (($x1773 (and $x1772 $x1769)))
 (let ((?x1396 (left s____________)))
 (let (($x1774 ((_ is stack ) ?x1396)))
 (let (($x1775 (= c____________ left-to-right)))
 (let (($x1776 (and $x1775 $x1774)))
 (let (($x1807 (ite $x1776 $x1790 (ite $x1773 $x1790 (ite $x1771 $x1786 (ite $x1768 $x1787 (ite $x1766 $x1787 $x1790)))))))
 (let ((?x1614 (top ?x1396)))
 (let ((?x1753 (stack ?x1614 ?x1430)))
 (let (($x1782 (= ?x1568 ?x1753)))
 (let (($x1777 (= c____________ left-to-center)))
 (let (($x1778 (and $x1777 $x1774)))
 (ite $x1778 $x1782 $x1807)))))))))))))))))))))))))))))))
(assert
 (let ((?x1616 (center s____________)))
 (let ((?x1754 (center s_____________)))
 (let (($x1792 (= ?x1754 ?x1616)))
 (let ((?x1430 (right s____________)))
 (let ((?x1761 (top ?x1430)))
 (let ((?x1763 (stack ?x1761 ?x1616)))
 (let (($x1789 (= ?x1754 ?x1763)))
 (let (($x1764 ((_ is stack ) ?x1430)))
 (let (($x1765 (= c____________ right-to-center)))
 (let (($x1766 (and $x1765 $x1764)))
 (let (($x1767 (= c____________ right-to-left)))
 (let (($x1768 (and $x1767 $x1764)))
 (let ((?x1756 (rest ?x1616)))
 (let (($x1784 (= ?x1754 ?x1756)))
 (let (($x1769 ((_ is stack ) ?x1616)))
 (let (($x1770 (= c____________ center-to-right)))
 (let (($x1771 (and $x1770 $x1769)))
 (let (($x1772 (= c____________ center-to-left)))
 (let (($x1773 (and $x1772 $x1769)))
 (let ((?x1396 (left s____________)))
 (let ((?x1614 (top ?x1396)))
 (let ((?x1755 (stack ?x1614 ?x1616)))
 (let (($x1783 (= ?x1754 ?x1755)))
 (let (($x1774 ((_ is stack ) ?x1396)))
 (let (($x1775 (= c____________ left-to-right)))
 (let (($x1776 (and $x1775 $x1774)))
 (let (($x1806 (ite $x1776 $x1783 (ite $x1773 $x1784 (ite $x1771 $x1784 (ite $x1768 $x1792 (ite $x1766 $x1789 $x1792)))))))
 (let (($x1777 (= c____________ left-to-center)))
 (let (($x1778 (and $x1777 $x1774)))
 (ite $x1778 $x1792 $x1806)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1534 (left s_____________)))
 (let ((?x1672 (left s______________)))
 (let (($x1932 (= ?x1672 ?x1534)))
 (let ((?x1568 (right s_____________)))
 (let ((?x1899 (top ?x1568)))
 (let ((?x1900 (stack ?x1899 ?x1534)))
 (let (($x1926 (= ?x1672 ?x1900)))
 (let (($x1902 ((_ is stack ) ?x1568)))
 (let (($x1905 (= c_____________ right-to-left)))
 (let (($x1906 (and $x1905 $x1902)))
 (let ((?x1754 (center s_____________)))
 (let (($x1907 ((_ is stack ) ?x1754)))
 (let (($x1908 (= c_____________ center-to-right)))
 (let (($x1909 (and $x1908 $x1907)))
 (let ((?x1895 (top ?x1754)))
 (let ((?x1896 (stack ?x1895 ?x1534)))
 (let (($x1923 (= ?x1672 ?x1896)))
 (let (($x1910 (= c_____________ center-to-left)))
 (let (($x1911 (and $x1910 $x1907)))
 (let ((?x1705 (rest ?x1534)))
 (let (($x1919 (= ?x1672 ?x1705)))
 (let (($x1912 ((_ is stack ) ?x1534)))
 (let (($x1913 (= c_____________ left-to-right)))
 (let (($x1914 (and $x1913 $x1912)))
 (let (($x1915 (= c_____________ left-to-center)))
 (let (($x1916 (and $x1915 $x1912)))
 (ite $x1916 $x1919 (ite $x1914 $x1919 (ite $x1911 $x1923 (ite $x1909 $x1932 (ite $x1906 $x1926 $x1932))))))))))))))))))))))))))))))))
(assert
 (let ((?x1568 (right s_____________)))
 (let ((?x1706 (right s______________)))
 (let (($x1928 (= ?x1706 ?x1568)))
 (let ((?x1898 (rest ?x1568)))
 (let (($x1925 (= ?x1706 ?x1898)))
 (let (($x1902 ((_ is stack ) ?x1568)))
 (let (($x1903 (= c_____________ right-to-center)))
 (let (($x1904 (and $x1903 $x1902)))
 (let (($x1905 (= c_____________ right-to-left)))
 (let (($x1906 (and $x1905 $x1902)))
 (let ((?x1754 (center s_____________)))
 (let ((?x1895 (top ?x1754)))
 (let ((?x1897 (stack ?x1895 ?x1568)))
 (let (($x1924 (= ?x1706 ?x1897)))
 (let (($x1907 ((_ is stack ) ?x1754)))
 (let (($x1908 (= c_____________ center-to-right)))
 (let (($x1909 (and $x1908 $x1907)))
 (let (($x1910 (= c_____________ center-to-left)))
 (let (($x1911 (and $x1910 $x1907)))
 (let ((?x1534 (left s_____________)))
 (let (($x1912 ((_ is stack ) ?x1534)))
 (let (($x1913 (= c_____________ left-to-right)))
 (let (($x1914 (and $x1913 $x1912)))
 (let (($x1945 (ite $x1914 $x1928 (ite $x1911 $x1928 (ite $x1909 $x1924 (ite $x1906 $x1925 (ite $x1904 $x1925 $x1928)))))))
 (let ((?x1752 (top ?x1534)))
 (let ((?x1891 (stack ?x1752 ?x1568)))
 (let (($x1920 (= ?x1706 ?x1891)))
 (let (($x1915 (= c_____________ left-to-center)))
 (let (($x1916 (and $x1915 $x1912)))
 (ite $x1916 $x1920 $x1945)))))))))))))))))))))))))))))))
(assert
 (let ((?x1754 (center s_____________)))
 (let ((?x1892 (center s______________)))
 (let (($x1930 (= ?x1892 ?x1754)))
 (let ((?x1568 (right s_____________)))
 (let ((?x1899 (top ?x1568)))
 (let ((?x1901 (stack ?x1899 ?x1754)))
 (let (($x1927 (= ?x1892 ?x1901)))
 (let (($x1902 ((_ is stack ) ?x1568)))
 (let (($x1903 (= c_____________ right-to-center)))
 (let (($x1904 (and $x1903 $x1902)))
 (let (($x1905 (= c_____________ right-to-left)))
 (let (($x1906 (and $x1905 $x1902)))
 (let ((?x1894 (rest ?x1754)))
 (let (($x1922 (= ?x1892 ?x1894)))
 (let (($x1907 ((_ is stack ) ?x1754)))
 (let (($x1908 (= c_____________ center-to-right)))
 (let (($x1909 (and $x1908 $x1907)))
 (let (($x1910 (= c_____________ center-to-left)))
 (let (($x1911 (and $x1910 $x1907)))
 (let ((?x1534 (left s_____________)))
 (let ((?x1752 (top ?x1534)))
 (let ((?x1893 (stack ?x1752 ?x1754)))
 (let (($x1921 (= ?x1892 ?x1893)))
 (let (($x1912 ((_ is stack ) ?x1534)))
 (let (($x1913 (= c_____________ left-to-right)))
 (let (($x1914 (and $x1913 $x1912)))
 (let (($x1944 (ite $x1914 $x1921 (ite $x1911 $x1922 (ite $x1909 $x1922 (ite $x1906 $x1930 (ite $x1904 $x1927 $x1930)))))))
 (let (($x1915 (= c_____________ left-to-center)))
 (let (($x1916 (and $x1915 $x1912)))
 (ite $x1916 $x1930 $x1944)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1672 (left s______________)))
 (let ((?x1810 (left s_______________)))
 (let (($x2070 (= ?x1810 ?x1672)))
 (let ((?x1706 (right s______________)))
 (let ((?x2037 (top ?x1706)))
 (let ((?x2038 (stack ?x2037 ?x1672)))
 (let (($x2064 (= ?x1810 ?x2038)))
 (let (($x2040 ((_ is stack ) ?x1706)))
 (let (($x2043 (= c______________ right-to-left)))
 (let (($x2044 (and $x2043 $x2040)))
 (let ((?x1892 (center s______________)))
 (let (($x2045 ((_ is stack ) ?x1892)))
 (let (($x2046 (= c______________ center-to-right)))
 (let (($x2047 (and $x2046 $x2045)))
 (let ((?x2033 (top ?x1892)))
 (let ((?x2034 (stack ?x2033 ?x1672)))
 (let (($x2061 (= ?x1810 ?x2034)))
 (let (($x2048 (= c______________ center-to-left)))
 (let (($x2049 (and $x2048 $x2045)))
 (let ((?x1843 (rest ?x1672)))
 (let (($x2057 (= ?x1810 ?x1843)))
 (let (($x2050 ((_ is stack ) ?x1672)))
 (let (($x2051 (= c______________ left-to-right)))
 (let (($x2052 (and $x2051 $x2050)))
 (let (($x2053 (= c______________ left-to-center)))
 (let (($x2054 (and $x2053 $x2050)))
 (ite $x2054 $x2057 (ite $x2052 $x2057 (ite $x2049 $x2061 (ite $x2047 $x2070 (ite $x2044 $x2064 $x2070))))))))))))))))))))))))))))))))
(assert
 (let ((?x1706 (right s______________)))
 (let ((?x1844 (right s_______________)))
 (let (($x2066 (= ?x1844 ?x1706)))
 (let ((?x2036 (rest ?x1706)))
 (let (($x2063 (= ?x1844 ?x2036)))
 (let (($x2040 ((_ is stack ) ?x1706)))
 (let (($x2041 (= c______________ right-to-center)))
 (let (($x2042 (and $x2041 $x2040)))
 (let (($x2043 (= c______________ right-to-left)))
 (let (($x2044 (and $x2043 $x2040)))
 (let ((?x1892 (center s______________)))
 (let ((?x2033 (top ?x1892)))
 (let ((?x2035 (stack ?x2033 ?x1706)))
 (let (($x2062 (= ?x1844 ?x2035)))
 (let (($x2045 ((_ is stack ) ?x1892)))
 (let (($x2046 (= c______________ center-to-right)))
 (let (($x2047 (and $x2046 $x2045)))
 (let (($x2048 (= c______________ center-to-left)))
 (let (($x2049 (and $x2048 $x2045)))
 (let ((?x1672 (left s______________)))
 (let (($x2050 ((_ is stack ) ?x1672)))
 (let (($x2051 (= c______________ left-to-right)))
 (let (($x2052 (and $x2051 $x2050)))
 (let (($x2083 (ite $x2052 $x2066 (ite $x2049 $x2066 (ite $x2047 $x2062 (ite $x2044 $x2063 (ite $x2042 $x2063 $x2066)))))))
 (let ((?x1890 (top ?x1672)))
 (let ((?x2029 (stack ?x1890 ?x1706)))
 (let (($x2058 (= ?x1844 ?x2029)))
 (let (($x2053 (= c______________ left-to-center)))
 (let (($x2054 (and $x2053 $x2050)))
 (ite $x2054 $x2058 $x2083)))))))))))))))))))))))))))))))
(assert
 (let ((?x1892 (center s______________)))
 (let ((?x2030 (center s_______________)))
 (let (($x2068 (= ?x2030 ?x1892)))
 (let ((?x1706 (right s______________)))
 (let ((?x2037 (top ?x1706)))
 (let ((?x2039 (stack ?x2037 ?x1892)))
 (let (($x2065 (= ?x2030 ?x2039)))
 (let (($x2040 ((_ is stack ) ?x1706)))
 (let (($x2041 (= c______________ right-to-center)))
 (let (($x2042 (and $x2041 $x2040)))
 (let (($x2043 (= c______________ right-to-left)))
 (let (($x2044 (and $x2043 $x2040)))
 (let ((?x2032 (rest ?x1892)))
 (let (($x2060 (= ?x2030 ?x2032)))
 (let (($x2045 ((_ is stack ) ?x1892)))
 (let (($x2046 (= c______________ center-to-right)))
 (let (($x2047 (and $x2046 $x2045)))
 (let (($x2048 (= c______________ center-to-left)))
 (let (($x2049 (and $x2048 $x2045)))
 (let ((?x1672 (left s______________)))
 (let ((?x1890 (top ?x1672)))
 (let ((?x2031 (stack ?x1890 ?x1892)))
 (let (($x2059 (= ?x2030 ?x2031)))
 (let (($x2050 ((_ is stack ) ?x1672)))
 (let (($x2051 (= c______________ left-to-right)))
 (let (($x2052 (and $x2051 $x2050)))
 (let (($x2082 (ite $x2052 $x2059 (ite $x2049 $x2060 (ite $x2047 $x2060 (ite $x2044 $x2068 (ite $x2042 $x2065 $x2068)))))))
 (let (($x2053 (= c______________ left-to-center)))
 (let (($x2054 (and $x2053 $x2050)))
 (ite $x2054 $x2068 $x2082)))))))))))))))))))))))))))))))
(assert
 (let ((?x66 (stack R (stack N (stack L (stack K (stack H empty)))))))
 (let ((?x1844 (right s_______________)))
 (let (($x2086 (= ?x1844 ?x66)))
 (let ((?x62 (stack O (stack G (stack I empty)))))
 (let ((?x2030 (center s_______________)))
 (let (($x2117 (= ?x2030 ?x62)))
 (let ((?x54 (stack B (stack F (stack J (stack E (stack S (stack P empty))))))))
 (let ((?x59 (stack C (stack A (stack Q (stack M (stack D ?x54)))))))
 (let ((?x1810 (left s_______________)))
 (let (($x2118 (= ?x1810 ?x59)))
 (let (($x2120 (not (and $x2118 $x2117 $x2086))))
 (not $x2120)))))))))))))
(check-sat)
(exit)
