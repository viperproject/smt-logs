(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack D empty)))
 (let ((?x102 (left s_tmp_)))
 (= ?x102 ?x27))))
(assert
 (let ((?x28 (stack J empty)))
 (let ((?x29 (stack B ?x28)))
 (let ((?x30 (stack C ?x29)))
 (let ((?x31 (stack A ?x30)))
 (let ((?x32 (stack G ?x31)))
 (let ((?x33 (stack K ?x32)))
 (let ((?x34 (stack H ?x33)))
 (let ((?x35 (stack L ?x34)))
 (let ((?x36 (stack E ?x35)))
 (let ((?x105 (center s_tmp__)))
 (= ?x105 ?x36))))))))))))
(assert
 (let ((?x37 (stack F empty)))
 (let ((?x38 (stack I ?x37)))
 (let ((?x39 (stack M ?x38)))
 (let ((?x40 (stack N ?x39)))
 (let ((?x41 (stack O ?x40)))
 (let ((?x108 (right s_tmp___)))
 (= ?x108 ?x41))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x135 (left s_tmp__)))
 (= (left s_tmp___) ?x135)))
(assert
 (let ((?x105 (center s_tmp__)))
 (= (center s_tmp___) ?x105)))
(assert
 (let ((?x139 (center s_tmp_)))
 (= ?x139 (center s_tmp))))
(assert
 (let ((?x142 (right s_tmp_)))
 (= ?x142 (right s_tmp))))
(assert
 (let ((?x102 (left s_tmp_)))
 (let ((?x135 (left s_tmp__)))
 (= ?x135 ?x102))))
(assert
 (let ((?x142 (right s_tmp_)))
 (let ((?x146 (right s_tmp__)))
 (= ?x146 ?x142))))
(assert
 (= c__ c!1))
(assert
 (let ((?x79 (left s_)))
 (let ((?x238 (left s__)))
 (let (($x280 (= ?x238 ?x79)))
 (let ((?x82 (right s_)))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x253 (= c_ right-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let ((?x84 (center s_)))
 (let (($x255 ((_ is stack ) ?x84)))
 (let (($x256 (= c_ center-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x258 (= c_ center-to-left)))
 (let (($x259 (and $x258 $x255)))
 (let (($x289 (ite $x259 (= ?x238 (stack (top ?x84) ?x79)) (ite $x257 $x280 (ite $x254 (= ?x238 (stack (top ?x82) ?x79)) $x280)))))
 (let (($x267 (= ?x238 (rest ?x79))))
 (let (($x260 ((_ is stack ) ?x79)))
 (let (($x261 (= c_ left-to-right)))
 (let (($x262 (and $x261 $x260)))
 (let (($x263 (= c_ left-to-center)))
 (let (($x264 (and $x263 $x260)))
 (ite $x264 $x267 (ite $x262 $x267 $x289)))))))))))))))))))))))
(assert
 (let ((?x82 (right s_)))
 (let ((?x234 (right s__)))
 (let (($x276 (= ?x234 ?x82)))
 (let (($x273 (= ?x234 (rest ?x82))))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x251 (= c_ right-to-center)))
 (let (($x252 (and $x251 $x250)))
 (let (($x253 (= c_ right-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let ((?x84 (center s_)))
 (let (($x255 ((_ is stack ) ?x84)))
 (let (($x256 (= c_ center-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x286 (ite $x257 (= ?x234 (stack (top ?x84) ?x82)) (ite $x254 $x273 (ite $x252 $x273 $x276)))))
 (let (($x258 (= c_ center-to-left)))
 (let (($x259 (and $x258 $x255)))
 (let ((?x79 (left s_)))
 (let (($x260 ((_ is stack ) ?x79)))
 (let (($x261 (= c_ left-to-right)))
 (let (($x262 (and $x261 $x260)))
 (let (($x263 (= c_ left-to-center)))
 (let (($x264 (and $x263 $x260)))
 (ite $x264 (= ?x234 (stack (top ?x79) ?x82)) (ite $x262 $x276 (ite $x259 $x276 $x286))))))))))))))))))))))))))
(assert
 (let ((?x84 (center s_)))
 (let ((?x240 (center s__)))
 (let (($x278 (= ?x240 ?x84)))
 (let ((?x82 (right s_)))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x251 (= c_ right-to-center)))
 (let (($x252 (and $x251 $x250)))
 (let (($x253 (= c_ right-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let (($x270 (= ?x240 (rest ?x84))))
 (let (($x255 ((_ is stack ) ?x84)))
 (let (($x256 (= c_ center-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x285 (ite $x257 $x270 (ite $x254 $x278 (ite $x252 (= ?x240 (stack (top ?x82) ?x84)) $x278)))))
 (let (($x258 (= c_ center-to-left)))
 (let (($x259 (and $x258 $x255)))
 (let ((?x79 (left s_)))
 (let (($x260 ((_ is stack ) ?x79)))
 (let (($x261 (= c_ left-to-right)))
 (let (($x262 (and $x261 $x260)))
 (let (($x263 (= c_ left-to-center)))
 (let (($x264 (and $x263 $x260)))
 (ite $x264 $x278 (ite $x262 (= ?x240 (stack (top ?x79) ?x84)) (ite $x259 $x270 $x285))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x238 (left s__)))
 (let ((?x149 (left s___)))
 (let (($x409 (= ?x149 ?x238)))
 (let ((?x234 (right s__)))
 (let ((?x376 (top ?x234)))
 (let ((?x377 (stack ?x376 ?x238)))
 (let (($x403 (= ?x149 ?x377)))
 (let (($x379 ((_ is stack ) ?x234)))
 (let (($x382 (= c__ right-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x240 (center s__)))
 (let (($x384 ((_ is stack ) ?x240)))
 (let (($x385 (= c__ center-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let ((?x372 (top ?x240)))
 (let ((?x373 (stack ?x372 ?x238)))
 (let (($x400 (= ?x149 ?x373)))
 (let (($x387 (= c__ center-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x151 (rest ?x238)))
 (let (($x396 (= ?x149 ?x151)))
 (let (($x389 ((_ is stack ) ?x238)))
 (let (($x390 (= c__ left-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let (($x392 (= c__ left-to-center)))
 (let (($x393 (and $x392 $x389)))
 (ite $x393 $x396 (ite $x391 $x396 (ite $x388 $x400 (ite $x386 $x409 (ite $x383 $x403 $x409))))))))))))))))))))))))))))))))
(assert
 (let ((?x234 (right s__)))
 (let ((?x152 (right s___)))
 (let (($x405 (= ?x152 ?x234)))
 (let ((?x375 (rest ?x234)))
 (let (($x402 (= ?x152 ?x375)))
 (let (($x379 ((_ is stack ) ?x234)))
 (let (($x380 (= c__ right-to-center)))
 (let (($x381 (and $x380 $x379)))
 (let (($x382 (= c__ right-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x240 (center s__)))
 (let ((?x372 (top ?x240)))
 (let ((?x374 (stack ?x372 ?x234)))
 (let (($x401 (= ?x152 ?x374)))
 (let (($x384 ((_ is stack ) ?x240)))
 (let (($x385 (= c__ center-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let (($x387 (= c__ center-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x238 (left s__)))
 (let (($x389 ((_ is stack ) ?x238)))
 (let (($x390 (= c__ left-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let (($x422 (ite $x391 $x405 (ite $x388 $x405 (ite $x386 $x401 (ite $x383 $x402 (ite $x381 $x402 $x405)))))))
 (let ((?x232 (top ?x238)))
 (let ((?x368 (stack ?x232 ?x234)))
 (let (($x397 (= ?x152 ?x368)))
 (let (($x392 (= c__ left-to-center)))
 (let (($x393 (and $x392 $x389)))
 (ite $x393 $x397 $x422)))))))))))))))))))))))))))))))
(assert
 (let ((?x240 (center s__)))
 (let ((?x369 (center s___)))
 (let (($x407 (= ?x369 ?x240)))
 (let ((?x234 (right s__)))
 (let ((?x376 (top ?x234)))
 (let ((?x378 (stack ?x376 ?x240)))
 (let (($x404 (= ?x369 ?x378)))
 (let (($x379 ((_ is stack ) ?x234)))
 (let (($x380 (= c__ right-to-center)))
 (let (($x381 (and $x380 $x379)))
 (let (($x382 (= c__ right-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x371 (rest ?x240)))
 (let (($x399 (= ?x369 ?x371)))
 (let (($x384 ((_ is stack ) ?x240)))
 (let (($x385 (= c__ center-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let (($x387 (= c__ center-to-left)))
 (let (($x388 (and $x387 $x384)))
 (let ((?x238 (left s__)))
 (let ((?x232 (top ?x238)))
 (let ((?x370 (stack ?x232 ?x240)))
 (let (($x398 (= ?x369 ?x370)))
 (let (($x389 ((_ is stack ) ?x238)))
 (let (($x390 (= c__ left-to-right)))
 (let (($x391 (and $x390 $x389)))
 (let (($x421 (ite $x391 $x398 (ite $x388 $x399 (ite $x386 $x399 (ite $x383 $x407 (ite $x381 $x404 $x407)))))))
 (let (($x392 (= c__ left-to-center)))
 (let (($x393 (and $x392 $x389)))
 (ite $x393 $x407 $x421)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x149 (left s___)))
 (let ((?x296 (left s____)))
 (let (($x547 (= ?x296 ?x149)))
 (let ((?x152 (right s___)))
 (let ((?x514 (top ?x152)))
 (let ((?x515 (stack ?x514 ?x149)))
 (let (($x541 (= ?x296 ?x515)))
 (let (($x517 ((_ is stack ) ?x152)))
 (let (($x520 (= c___ right-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x369 (center s___)))
 (let (($x522 ((_ is stack ) ?x369)))
 (let (($x523 (= c___ center-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let ((?x510 (top ?x369)))
 (let ((?x511 (stack ?x510 ?x149)))
 (let (($x538 (= ?x296 ?x511)))
 (let (($x525 (= c___ center-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x340 (rest ?x149)))
 (let (($x534 (= ?x296 ?x340)))
 (let (($x527 ((_ is stack ) ?x149)))
 (let (($x528 (= c___ left-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let (($x530 (= c___ left-to-center)))
 (let (($x531 (and $x530 $x527)))
 (ite $x531 $x534 (ite $x529 $x534 (ite $x526 $x538 (ite $x524 $x547 (ite $x521 $x541 $x547))))))))))))))))))))))))))))))))
(assert
 (let ((?x152 (right s___)))
 (let ((?x341 (right s____)))
 (let (($x543 (= ?x341 ?x152)))
 (let ((?x513 (rest ?x152)))
 (let (($x540 (= ?x341 ?x513)))
 (let (($x517 ((_ is stack ) ?x152)))
 (let (($x518 (= c___ right-to-center)))
 (let (($x519 (and $x518 $x517)))
 (let (($x520 (= c___ right-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x369 (center s___)))
 (let ((?x510 (top ?x369)))
 (let ((?x512 (stack ?x510 ?x152)))
 (let (($x539 (= ?x341 ?x512)))
 (let (($x522 ((_ is stack ) ?x369)))
 (let (($x523 (= c___ center-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let (($x525 (= c___ center-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x149 (left s___)))
 (let (($x527 ((_ is stack ) ?x149)))
 (let (($x528 (= c___ left-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let (($x560 (ite $x529 $x543 (ite $x526 $x543 (ite $x524 $x539 (ite $x521 $x540 (ite $x519 $x540 $x543)))))))
 (let ((?x367 (top ?x149)))
 (let ((?x506 (stack ?x367 ?x152)))
 (let (($x535 (= ?x341 ?x506)))
 (let (($x530 (= c___ left-to-center)))
 (let (($x531 (and $x530 $x527)))
 (ite $x531 $x535 $x560)))))))))))))))))))))))))))))))
(assert
 (let ((?x369 (center s___)))
 (let ((?x507 (center s____)))
 (let (($x545 (= ?x507 ?x369)))
 (let ((?x152 (right s___)))
 (let ((?x514 (top ?x152)))
 (let ((?x516 (stack ?x514 ?x369)))
 (let (($x542 (= ?x507 ?x516)))
 (let (($x517 ((_ is stack ) ?x152)))
 (let (($x518 (= c___ right-to-center)))
 (let (($x519 (and $x518 $x517)))
 (let (($x520 (= c___ right-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x509 (rest ?x369)))
 (let (($x537 (= ?x507 ?x509)))
 (let (($x522 ((_ is stack ) ?x369)))
 (let (($x523 (= c___ center-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let (($x525 (= c___ center-to-left)))
 (let (($x526 (and $x525 $x522)))
 (let ((?x149 (left s___)))
 (let ((?x367 (top ?x149)))
 (let ((?x508 (stack ?x367 ?x369)))
 (let (($x536 (= ?x507 ?x508)))
 (let (($x527 ((_ is stack ) ?x149)))
 (let (($x528 (= c___ left-to-right)))
 (let (($x529 (and $x528 $x527)))
 (let (($x559 (ite $x529 $x536 (ite $x526 $x537 (ite $x524 $x537 (ite $x521 $x545 (ite $x519 $x542 $x545)))))))
 (let (($x530 (= c___ left-to-center)))
 (let (($x531 (and $x530 $x527)))
 (ite $x531 $x545 $x559)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x296 (left s____)))
 (let ((?x425 (left s_____)))
 (let (($x685 (= ?x425 ?x296)))
 (let ((?x341 (right s____)))
 (let ((?x652 (top ?x341)))
 (let ((?x653 (stack ?x652 ?x296)))
 (let (($x679 (= ?x425 ?x653)))
 (let (($x655 ((_ is stack ) ?x341)))
 (let (($x658 (= c____ right-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x507 (center s____)))
 (let (($x660 ((_ is stack ) ?x507)))
 (let (($x661 (= c____ center-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let ((?x648 (top ?x507)))
 (let ((?x649 (stack ?x648 ?x296)))
 (let (($x676 (= ?x425 ?x649)))
 (let (($x663 (= c____ center-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x458 (rest ?x296)))
 (let (($x672 (= ?x425 ?x458)))
 (let (($x665 ((_ is stack ) ?x296)))
 (let (($x666 (= c____ left-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let (($x668 (= c____ left-to-center)))
 (let (($x669 (and $x668 $x665)))
 (ite $x669 $x672 (ite $x667 $x672 (ite $x664 $x676 (ite $x662 $x685 (ite $x659 $x679 $x685))))))))))))))))))))))))))))))))
(assert
 (let ((?x341 (right s____)))
 (let ((?x459 (right s_____)))
 (let (($x681 (= ?x459 ?x341)))
 (let ((?x651 (rest ?x341)))
 (let (($x678 (= ?x459 ?x651)))
 (let (($x655 ((_ is stack ) ?x341)))
 (let (($x656 (= c____ right-to-center)))
 (let (($x657 (and $x656 $x655)))
 (let (($x658 (= c____ right-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x507 (center s____)))
 (let ((?x648 (top ?x507)))
 (let ((?x650 (stack ?x648 ?x341)))
 (let (($x677 (= ?x459 ?x650)))
 (let (($x660 ((_ is stack ) ?x507)))
 (let (($x661 (= c____ center-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let (($x663 (= c____ center-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x296 (left s____)))
 (let (($x665 ((_ is stack ) ?x296)))
 (let (($x666 (= c____ left-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let (($x698 (ite $x667 $x681 (ite $x664 $x681 (ite $x662 $x677 (ite $x659 $x678 (ite $x657 $x678 $x681)))))))
 (let ((?x505 (top ?x296)))
 (let ((?x644 (stack ?x505 ?x341)))
 (let (($x673 (= ?x459 ?x644)))
 (let (($x668 (= c____ left-to-center)))
 (let (($x669 (and $x668 $x665)))
 (ite $x669 $x673 $x698)))))))))))))))))))))))))))))))
(assert
 (let ((?x507 (center s____)))
 (let ((?x645 (center s_____)))
 (let (($x683 (= ?x645 ?x507)))
 (let ((?x341 (right s____)))
 (let ((?x652 (top ?x341)))
 (let ((?x654 (stack ?x652 ?x507)))
 (let (($x680 (= ?x645 ?x654)))
 (let (($x655 ((_ is stack ) ?x341)))
 (let (($x656 (= c____ right-to-center)))
 (let (($x657 (and $x656 $x655)))
 (let (($x658 (= c____ right-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x647 (rest ?x507)))
 (let (($x675 (= ?x645 ?x647)))
 (let (($x660 ((_ is stack ) ?x507)))
 (let (($x661 (= c____ center-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let (($x663 (= c____ center-to-left)))
 (let (($x664 (and $x663 $x660)))
 (let ((?x296 (left s____)))
 (let ((?x505 (top ?x296)))
 (let ((?x646 (stack ?x505 ?x507)))
 (let (($x674 (= ?x645 ?x646)))
 (let (($x665 ((_ is stack ) ?x296)))
 (let (($x666 (= c____ left-to-right)))
 (let (($x667 (and $x666 $x665)))
 (let (($x697 (ite $x667 $x674 (ite $x664 $x675 (ite $x662 $x675 (ite $x659 $x683 (ite $x657 $x680 $x683)))))))
 (let (($x668 (= c____ left-to-center)))
 (let (($x669 (and $x668 $x665)))
 (ite $x669 $x683 $x697)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x425 (left s_____)))
 (let ((?x563 (left s______)))
 (let (($x823 (= ?x563 ?x425)))
 (let ((?x459 (right s_____)))
 (let ((?x790 (top ?x459)))
 (let ((?x791 (stack ?x790 ?x425)))
 (let (($x817 (= ?x563 ?x791)))
 (let (($x793 ((_ is stack ) ?x459)))
 (let (($x796 (= c_____ right-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x645 (center s_____)))
 (let (($x798 ((_ is stack ) ?x645)))
 (let (($x799 (= c_____ center-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let ((?x786 (top ?x645)))
 (let ((?x787 (stack ?x786 ?x425)))
 (let (($x814 (= ?x563 ?x787)))
 (let (($x801 (= c_____ center-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x596 (rest ?x425)))
 (let (($x810 (= ?x563 ?x596)))
 (let (($x803 ((_ is stack ) ?x425)))
 (let (($x804 (= c_____ left-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let (($x806 (= c_____ left-to-center)))
 (let (($x807 (and $x806 $x803)))
 (ite $x807 $x810 (ite $x805 $x810 (ite $x802 $x814 (ite $x800 $x823 (ite $x797 $x817 $x823))))))))))))))))))))))))))))))))
(assert
 (let ((?x459 (right s_____)))
 (let ((?x597 (right s______)))
 (let (($x819 (= ?x597 ?x459)))
 (let ((?x789 (rest ?x459)))
 (let (($x816 (= ?x597 ?x789)))
 (let (($x793 ((_ is stack ) ?x459)))
 (let (($x794 (= c_____ right-to-center)))
 (let (($x795 (and $x794 $x793)))
 (let (($x796 (= c_____ right-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x645 (center s_____)))
 (let ((?x786 (top ?x645)))
 (let ((?x788 (stack ?x786 ?x459)))
 (let (($x815 (= ?x597 ?x788)))
 (let (($x798 ((_ is stack ) ?x645)))
 (let (($x799 (= c_____ center-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let (($x801 (= c_____ center-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x425 (left s_____)))
 (let (($x803 ((_ is stack ) ?x425)))
 (let (($x804 (= c_____ left-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let (($x836 (ite $x805 $x819 (ite $x802 $x819 (ite $x800 $x815 (ite $x797 $x816 (ite $x795 $x816 $x819)))))))
 (let ((?x643 (top ?x425)))
 (let ((?x782 (stack ?x643 ?x459)))
 (let (($x811 (= ?x597 ?x782)))
 (let (($x806 (= c_____ left-to-center)))
 (let (($x807 (and $x806 $x803)))
 (ite $x807 $x811 $x836)))))))))))))))))))))))))))))))
(assert
 (let ((?x645 (center s_____)))
 (let ((?x783 (center s______)))
 (let (($x821 (= ?x783 ?x645)))
 (let ((?x459 (right s_____)))
 (let ((?x790 (top ?x459)))
 (let ((?x792 (stack ?x790 ?x645)))
 (let (($x818 (= ?x783 ?x792)))
 (let (($x793 ((_ is stack ) ?x459)))
 (let (($x794 (= c_____ right-to-center)))
 (let (($x795 (and $x794 $x793)))
 (let (($x796 (= c_____ right-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x785 (rest ?x645)))
 (let (($x813 (= ?x783 ?x785)))
 (let (($x798 ((_ is stack ) ?x645)))
 (let (($x799 (= c_____ center-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let (($x801 (= c_____ center-to-left)))
 (let (($x802 (and $x801 $x798)))
 (let ((?x425 (left s_____)))
 (let ((?x643 (top ?x425)))
 (let ((?x784 (stack ?x643 ?x645)))
 (let (($x812 (= ?x783 ?x784)))
 (let (($x803 ((_ is stack ) ?x425)))
 (let (($x804 (= c_____ left-to-right)))
 (let (($x805 (and $x804 $x803)))
 (let (($x835 (ite $x805 $x812 (ite $x802 $x813 (ite $x800 $x813 (ite $x797 $x821 (ite $x795 $x818 $x821)))))))
 (let (($x806 (= c_____ left-to-center)))
 (let (($x807 (and $x806 $x803)))
 (ite $x807 $x821 $x835)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x563 (left s______)))
 (let ((?x701 (left s_______)))
 (let (($x961 (= ?x701 ?x563)))
 (let ((?x597 (right s______)))
 (let ((?x928 (top ?x597)))
 (let ((?x929 (stack ?x928 ?x563)))
 (let (($x955 (= ?x701 ?x929)))
 (let (($x931 ((_ is stack ) ?x597)))
 (let (($x934 (= c______ right-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x783 (center s______)))
 (let (($x936 ((_ is stack ) ?x783)))
 (let (($x937 (= c______ center-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let ((?x924 (top ?x783)))
 (let ((?x925 (stack ?x924 ?x563)))
 (let (($x952 (= ?x701 ?x925)))
 (let (($x939 (= c______ center-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x734 (rest ?x563)))
 (let (($x948 (= ?x701 ?x734)))
 (let (($x941 ((_ is stack ) ?x563)))
 (let (($x942 (= c______ left-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let (($x944 (= c______ left-to-center)))
 (let (($x945 (and $x944 $x941)))
 (ite $x945 $x948 (ite $x943 $x948 (ite $x940 $x952 (ite $x938 $x961 (ite $x935 $x955 $x961))))))))))))))))))))))))))))))))
(assert
 (let ((?x597 (right s______)))
 (let ((?x735 (right s_______)))
 (let (($x957 (= ?x735 ?x597)))
 (let ((?x927 (rest ?x597)))
 (let (($x954 (= ?x735 ?x927)))
 (let (($x931 ((_ is stack ) ?x597)))
 (let (($x932 (= c______ right-to-center)))
 (let (($x933 (and $x932 $x931)))
 (let (($x934 (= c______ right-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x783 (center s______)))
 (let ((?x924 (top ?x783)))
 (let ((?x926 (stack ?x924 ?x597)))
 (let (($x953 (= ?x735 ?x926)))
 (let (($x936 ((_ is stack ) ?x783)))
 (let (($x937 (= c______ center-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let (($x939 (= c______ center-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x563 (left s______)))
 (let (($x941 ((_ is stack ) ?x563)))
 (let (($x942 (= c______ left-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let (($x974 (ite $x943 $x957 (ite $x940 $x957 (ite $x938 $x953 (ite $x935 $x954 (ite $x933 $x954 $x957)))))))
 (let ((?x781 (top ?x563)))
 (let ((?x920 (stack ?x781 ?x597)))
 (let (($x949 (= ?x735 ?x920)))
 (let (($x944 (= c______ left-to-center)))
 (let (($x945 (and $x944 $x941)))
 (ite $x945 $x949 $x974)))))))))))))))))))))))))))))))
(assert
 (let ((?x783 (center s______)))
 (let ((?x921 (center s_______)))
 (let (($x959 (= ?x921 ?x783)))
 (let ((?x597 (right s______)))
 (let ((?x928 (top ?x597)))
 (let ((?x930 (stack ?x928 ?x783)))
 (let (($x956 (= ?x921 ?x930)))
 (let (($x931 ((_ is stack ) ?x597)))
 (let (($x932 (= c______ right-to-center)))
 (let (($x933 (and $x932 $x931)))
 (let (($x934 (= c______ right-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x923 (rest ?x783)))
 (let (($x951 (= ?x921 ?x923)))
 (let (($x936 ((_ is stack ) ?x783)))
 (let (($x937 (= c______ center-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let (($x939 (= c______ center-to-left)))
 (let (($x940 (and $x939 $x936)))
 (let ((?x563 (left s______)))
 (let ((?x781 (top ?x563)))
 (let ((?x922 (stack ?x781 ?x783)))
 (let (($x950 (= ?x921 ?x922)))
 (let (($x941 ((_ is stack ) ?x563)))
 (let (($x942 (= c______ left-to-right)))
 (let (($x943 (and $x942 $x941)))
 (let (($x973 (ite $x943 $x950 (ite $x940 $x951 (ite $x938 $x951 (ite $x935 $x959 (ite $x933 $x956 $x959)))))))
 (let (($x944 (= c______ left-to-center)))
 (let (($x945 (and $x944 $x941)))
 (ite $x945 $x959 $x973)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x701 (left s_______)))
 (let ((?x839 (left s________)))
 (let (($x1099 (= ?x839 ?x701)))
 (let ((?x735 (right s_______)))
 (let ((?x1066 (top ?x735)))
 (let ((?x1067 (stack ?x1066 ?x701)))
 (let (($x1093 (= ?x839 ?x1067)))
 (let (($x1069 ((_ is stack ) ?x735)))
 (let (($x1072 (= c_______ right-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x921 (center s_______)))
 (let (($x1074 ((_ is stack ) ?x921)))
 (let (($x1075 (= c_______ center-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let ((?x1062 (top ?x921)))
 (let ((?x1063 (stack ?x1062 ?x701)))
 (let (($x1090 (= ?x839 ?x1063)))
 (let (($x1077 (= c_______ center-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x872 (rest ?x701)))
 (let (($x1086 (= ?x839 ?x872)))
 (let (($x1079 ((_ is stack ) ?x701)))
 (let (($x1080 (= c_______ left-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let (($x1082 (= c_______ left-to-center)))
 (let (($x1083 (and $x1082 $x1079)))
 (ite $x1083 $x1086 (ite $x1081 $x1086 (ite $x1078 $x1090 (ite $x1076 $x1099 (ite $x1073 $x1093 $x1099))))))))))))))))))))))))))))))))
(assert
 (let ((?x735 (right s_______)))
 (let ((?x873 (right s________)))
 (let (($x1095 (= ?x873 ?x735)))
 (let ((?x1065 (rest ?x735)))
 (let (($x1092 (= ?x873 ?x1065)))
 (let (($x1069 ((_ is stack ) ?x735)))
 (let (($x1070 (= c_______ right-to-center)))
 (let (($x1071 (and $x1070 $x1069)))
 (let (($x1072 (= c_______ right-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x921 (center s_______)))
 (let ((?x1062 (top ?x921)))
 (let ((?x1064 (stack ?x1062 ?x735)))
 (let (($x1091 (= ?x873 ?x1064)))
 (let (($x1074 ((_ is stack ) ?x921)))
 (let (($x1075 (= c_______ center-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1077 (= c_______ center-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x701 (left s_______)))
 (let (($x1079 ((_ is stack ) ?x701)))
 (let (($x1080 (= c_______ left-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let (($x1112 (ite $x1081 $x1095 (ite $x1078 $x1095 (ite $x1076 $x1091 (ite $x1073 $x1092 (ite $x1071 $x1092 $x1095)))))))
 (let ((?x919 (top ?x701)))
 (let ((?x1058 (stack ?x919 ?x735)))
 (let (($x1087 (= ?x873 ?x1058)))
 (let (($x1082 (= c_______ left-to-center)))
 (let (($x1083 (and $x1082 $x1079)))
 (ite $x1083 $x1087 $x1112)))))))))))))))))))))))))))))))
(assert
 (let ((?x921 (center s_______)))
 (let ((?x1059 (center s________)))
 (let (($x1097 (= ?x1059 ?x921)))
 (let ((?x735 (right s_______)))
 (let ((?x1066 (top ?x735)))
 (let ((?x1068 (stack ?x1066 ?x921)))
 (let (($x1094 (= ?x1059 ?x1068)))
 (let (($x1069 ((_ is stack ) ?x735)))
 (let (($x1070 (= c_______ right-to-center)))
 (let (($x1071 (and $x1070 $x1069)))
 (let (($x1072 (= c_______ right-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x1061 (rest ?x921)))
 (let (($x1089 (= ?x1059 ?x1061)))
 (let (($x1074 ((_ is stack ) ?x921)))
 (let (($x1075 (= c_______ center-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1077 (= c_______ center-to-left)))
 (let (($x1078 (and $x1077 $x1074)))
 (let ((?x701 (left s_______)))
 (let ((?x919 (top ?x701)))
 (let ((?x1060 (stack ?x919 ?x921)))
 (let (($x1088 (= ?x1059 ?x1060)))
 (let (($x1079 ((_ is stack ) ?x701)))
 (let (($x1080 (= c_______ left-to-right)))
 (let (($x1081 (and $x1080 $x1079)))
 (let (($x1111 (ite $x1081 $x1088 (ite $x1078 $x1089 (ite $x1076 $x1089 (ite $x1073 $x1097 (ite $x1071 $x1094 $x1097)))))))
 (let (($x1082 (= c_______ left-to-center)))
 (let (($x1083 (and $x1082 $x1079)))
 (ite $x1083 $x1097 $x1111)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x839 (left s________)))
 (let ((?x977 (left s_________)))
 (let (($x1237 (= ?x977 ?x839)))
 (let ((?x873 (right s________)))
 (let ((?x1204 (top ?x873)))
 (let ((?x1205 (stack ?x1204 ?x839)))
 (let (($x1231 (= ?x977 ?x1205)))
 (let (($x1207 ((_ is stack ) ?x873)))
 (let (($x1210 (= c________ right-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x1059 (center s________)))
 (let (($x1212 ((_ is stack ) ?x1059)))
 (let (($x1213 (= c________ center-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let ((?x1200 (top ?x1059)))
 (let ((?x1201 (stack ?x1200 ?x839)))
 (let (($x1228 (= ?x977 ?x1201)))
 (let (($x1215 (= c________ center-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x1010 (rest ?x839)))
 (let (($x1224 (= ?x977 ?x1010)))
 (let (($x1217 ((_ is stack ) ?x839)))
 (let (($x1218 (= c________ left-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let (($x1220 (= c________ left-to-center)))
 (let (($x1221 (and $x1220 $x1217)))
 (ite $x1221 $x1224 (ite $x1219 $x1224 (ite $x1216 $x1228 (ite $x1214 $x1237 (ite $x1211 $x1231 $x1237))))))))))))))))))))))))))))))))
(assert
 (let ((?x873 (right s________)))
 (let ((?x1011 (right s_________)))
 (let (($x1233 (= ?x1011 ?x873)))
 (let ((?x1203 (rest ?x873)))
 (let (($x1230 (= ?x1011 ?x1203)))
 (let (($x1207 ((_ is stack ) ?x873)))
 (let (($x1208 (= c________ right-to-center)))
 (let (($x1209 (and $x1208 $x1207)))
 (let (($x1210 (= c________ right-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x1059 (center s________)))
 (let ((?x1200 (top ?x1059)))
 (let ((?x1202 (stack ?x1200 ?x873)))
 (let (($x1229 (= ?x1011 ?x1202)))
 (let (($x1212 ((_ is stack ) ?x1059)))
 (let (($x1213 (= c________ center-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1215 (= c________ center-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x839 (left s________)))
 (let (($x1217 ((_ is stack ) ?x839)))
 (let (($x1218 (= c________ left-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let (($x1250 (ite $x1219 $x1233 (ite $x1216 $x1233 (ite $x1214 $x1229 (ite $x1211 $x1230 (ite $x1209 $x1230 $x1233)))))))
 (let ((?x1057 (top ?x839)))
 (let ((?x1196 (stack ?x1057 ?x873)))
 (let (($x1225 (= ?x1011 ?x1196)))
 (let (($x1220 (= c________ left-to-center)))
 (let (($x1221 (and $x1220 $x1217)))
 (ite $x1221 $x1225 $x1250)))))))))))))))))))))))))))))))
(assert
 (let ((?x1059 (center s________)))
 (let ((?x1197 (center s_________)))
 (let (($x1235 (= ?x1197 ?x1059)))
 (let ((?x873 (right s________)))
 (let ((?x1204 (top ?x873)))
 (let ((?x1206 (stack ?x1204 ?x1059)))
 (let (($x1232 (= ?x1197 ?x1206)))
 (let (($x1207 ((_ is stack ) ?x873)))
 (let (($x1208 (= c________ right-to-center)))
 (let (($x1209 (and $x1208 $x1207)))
 (let (($x1210 (= c________ right-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x1199 (rest ?x1059)))
 (let (($x1227 (= ?x1197 ?x1199)))
 (let (($x1212 ((_ is stack ) ?x1059)))
 (let (($x1213 (= c________ center-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1215 (= c________ center-to-left)))
 (let (($x1216 (and $x1215 $x1212)))
 (let ((?x839 (left s________)))
 (let ((?x1057 (top ?x839)))
 (let ((?x1198 (stack ?x1057 ?x1059)))
 (let (($x1226 (= ?x1197 ?x1198)))
 (let (($x1217 ((_ is stack ) ?x839)))
 (let (($x1218 (= c________ left-to-right)))
 (let (($x1219 (and $x1218 $x1217)))
 (let (($x1249 (ite $x1219 $x1226 (ite $x1216 $x1227 (ite $x1214 $x1227 (ite $x1211 $x1235 (ite $x1209 $x1232 $x1235)))))))
 (let (($x1220 (= c________ left-to-center)))
 (let (($x1221 (and $x1220 $x1217)))
 (ite $x1221 $x1235 $x1249)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x977 (left s_________)))
 (let ((?x1115 (left s__________)))
 (let (($x1375 (= ?x1115 ?x977)))
 (let ((?x1011 (right s_________)))
 (let ((?x1342 (top ?x1011)))
 (let ((?x1343 (stack ?x1342 ?x977)))
 (let (($x1369 (= ?x1115 ?x1343)))
 (let (($x1345 ((_ is stack ) ?x1011)))
 (let (($x1348 (= c_________ right-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x1197 (center s_________)))
 (let (($x1350 ((_ is stack ) ?x1197)))
 (let (($x1351 (= c_________ center-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let ((?x1338 (top ?x1197)))
 (let ((?x1339 (stack ?x1338 ?x977)))
 (let (($x1366 (= ?x1115 ?x1339)))
 (let (($x1353 (= c_________ center-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x1148 (rest ?x977)))
 (let (($x1362 (= ?x1115 ?x1148)))
 (let (($x1355 ((_ is stack ) ?x977)))
 (let (($x1356 (= c_________ left-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let (($x1358 (= c_________ left-to-center)))
 (let (($x1359 (and $x1358 $x1355)))
 (ite $x1359 $x1362 (ite $x1357 $x1362 (ite $x1354 $x1366 (ite $x1352 $x1375 (ite $x1349 $x1369 $x1375))))))))))))))))))))))))))))))))
(assert
 (let ((?x1011 (right s_________)))
 (let ((?x1149 (right s__________)))
 (let (($x1371 (= ?x1149 ?x1011)))
 (let ((?x1341 (rest ?x1011)))
 (let (($x1368 (= ?x1149 ?x1341)))
 (let (($x1345 ((_ is stack ) ?x1011)))
 (let (($x1346 (= c_________ right-to-center)))
 (let (($x1347 (and $x1346 $x1345)))
 (let (($x1348 (= c_________ right-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x1197 (center s_________)))
 (let ((?x1338 (top ?x1197)))
 (let ((?x1340 (stack ?x1338 ?x1011)))
 (let (($x1367 (= ?x1149 ?x1340)))
 (let (($x1350 ((_ is stack ) ?x1197)))
 (let (($x1351 (= c_________ center-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1353 (= c_________ center-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x977 (left s_________)))
 (let (($x1355 ((_ is stack ) ?x977)))
 (let (($x1356 (= c_________ left-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let (($x1388 (ite $x1357 $x1371 (ite $x1354 $x1371 (ite $x1352 $x1367 (ite $x1349 $x1368 (ite $x1347 $x1368 $x1371)))))))
 (let ((?x1195 (top ?x977)))
 (let ((?x1334 (stack ?x1195 ?x1011)))
 (let (($x1363 (= ?x1149 ?x1334)))
 (let (($x1358 (= c_________ left-to-center)))
 (let (($x1359 (and $x1358 $x1355)))
 (ite $x1359 $x1363 $x1388)))))))))))))))))))))))))))))))
(assert
 (let ((?x1197 (center s_________)))
 (let ((?x1335 (center s__________)))
 (let (($x1373 (= ?x1335 ?x1197)))
 (let ((?x1011 (right s_________)))
 (let ((?x1342 (top ?x1011)))
 (let ((?x1344 (stack ?x1342 ?x1197)))
 (let (($x1370 (= ?x1335 ?x1344)))
 (let (($x1345 ((_ is stack ) ?x1011)))
 (let (($x1346 (= c_________ right-to-center)))
 (let (($x1347 (and $x1346 $x1345)))
 (let (($x1348 (= c_________ right-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x1337 (rest ?x1197)))
 (let (($x1365 (= ?x1335 ?x1337)))
 (let (($x1350 ((_ is stack ) ?x1197)))
 (let (($x1351 (= c_________ center-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1353 (= c_________ center-to-left)))
 (let (($x1354 (and $x1353 $x1350)))
 (let ((?x977 (left s_________)))
 (let ((?x1195 (top ?x977)))
 (let ((?x1336 (stack ?x1195 ?x1197)))
 (let (($x1364 (= ?x1335 ?x1336)))
 (let (($x1355 ((_ is stack ) ?x977)))
 (let (($x1356 (= c_________ left-to-right)))
 (let (($x1357 (and $x1356 $x1355)))
 (let (($x1387 (ite $x1357 $x1364 (ite $x1354 $x1365 (ite $x1352 $x1365 (ite $x1349 $x1373 (ite $x1347 $x1370 $x1373)))))))
 (let (($x1358 (= c_________ left-to-center)))
 (let (($x1359 (and $x1358 $x1355)))
 (ite $x1359 $x1373 $x1387)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1115 (left s__________)))
 (let ((?x1253 (left s___________)))
 (let (($x1513 (= ?x1253 ?x1115)))
 (let ((?x1149 (right s__________)))
 (let ((?x1480 (top ?x1149)))
 (let ((?x1481 (stack ?x1480 ?x1115)))
 (let (($x1507 (= ?x1253 ?x1481)))
 (let (($x1483 ((_ is stack ) ?x1149)))
 (let (($x1486 (= c__________ right-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1335 (center s__________)))
 (let (($x1488 ((_ is stack ) ?x1335)))
 (let (($x1489 (= c__________ center-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let ((?x1476 (top ?x1335)))
 (let ((?x1477 (stack ?x1476 ?x1115)))
 (let (($x1504 (= ?x1253 ?x1477)))
 (let (($x1491 (= c__________ center-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1286 (rest ?x1115)))
 (let (($x1500 (= ?x1253 ?x1286)))
 (let (($x1493 ((_ is stack ) ?x1115)))
 (let (($x1494 (= c__________ left-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let (($x1496 (= c__________ left-to-center)))
 (let (($x1497 (and $x1496 $x1493)))
 (ite $x1497 $x1500 (ite $x1495 $x1500 (ite $x1492 $x1504 (ite $x1490 $x1513 (ite $x1487 $x1507 $x1513))))))))))))))))))))))))))))))))
(assert
 (let ((?x1149 (right s__________)))
 (let ((?x1287 (right s___________)))
 (let (($x1509 (= ?x1287 ?x1149)))
 (let ((?x1479 (rest ?x1149)))
 (let (($x1506 (= ?x1287 ?x1479)))
 (let (($x1483 ((_ is stack ) ?x1149)))
 (let (($x1484 (= c__________ right-to-center)))
 (let (($x1485 (and $x1484 $x1483)))
 (let (($x1486 (= c__________ right-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1335 (center s__________)))
 (let ((?x1476 (top ?x1335)))
 (let ((?x1478 (stack ?x1476 ?x1149)))
 (let (($x1505 (= ?x1287 ?x1478)))
 (let (($x1488 ((_ is stack ) ?x1335)))
 (let (($x1489 (= c__________ center-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1491 (= c__________ center-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1115 (left s__________)))
 (let (($x1493 ((_ is stack ) ?x1115)))
 (let (($x1494 (= c__________ left-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let (($x1526 (ite $x1495 $x1509 (ite $x1492 $x1509 (ite $x1490 $x1505 (ite $x1487 $x1506 (ite $x1485 $x1506 $x1509)))))))
 (let ((?x1333 (top ?x1115)))
 (let ((?x1472 (stack ?x1333 ?x1149)))
 (let (($x1501 (= ?x1287 ?x1472)))
 (let (($x1496 (= c__________ left-to-center)))
 (let (($x1497 (and $x1496 $x1493)))
 (ite $x1497 $x1501 $x1526)))))))))))))))))))))))))))))))
(assert
 (let ((?x1335 (center s__________)))
 (let ((?x1473 (center s___________)))
 (let (($x1511 (= ?x1473 ?x1335)))
 (let ((?x1149 (right s__________)))
 (let ((?x1480 (top ?x1149)))
 (let ((?x1482 (stack ?x1480 ?x1335)))
 (let (($x1508 (= ?x1473 ?x1482)))
 (let (($x1483 ((_ is stack ) ?x1149)))
 (let (($x1484 (= c__________ right-to-center)))
 (let (($x1485 (and $x1484 $x1483)))
 (let (($x1486 (= c__________ right-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1475 (rest ?x1335)))
 (let (($x1503 (= ?x1473 ?x1475)))
 (let (($x1488 ((_ is stack ) ?x1335)))
 (let (($x1489 (= c__________ center-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1491 (= c__________ center-to-left)))
 (let (($x1492 (and $x1491 $x1488)))
 (let ((?x1115 (left s__________)))
 (let ((?x1333 (top ?x1115)))
 (let ((?x1474 (stack ?x1333 ?x1335)))
 (let (($x1502 (= ?x1473 ?x1474)))
 (let (($x1493 ((_ is stack ) ?x1115)))
 (let (($x1494 (= c__________ left-to-right)))
 (let (($x1495 (and $x1494 $x1493)))
 (let (($x1525 (ite $x1495 $x1502 (ite $x1492 $x1503 (ite $x1490 $x1503 (ite $x1487 $x1511 (ite $x1485 $x1508 $x1511)))))))
 (let (($x1496 (= c__________ left-to-center)))
 (let (($x1497 (and $x1496 $x1493)))
 (ite $x1497 $x1511 $x1525)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1253 (left s___________)))
 (let ((?x1391 (left s____________)))
 (let (($x1651 (= ?x1391 ?x1253)))
 (let ((?x1287 (right s___________)))
 (let ((?x1618 (top ?x1287)))
 (let ((?x1619 (stack ?x1618 ?x1253)))
 (let (($x1645 (= ?x1391 ?x1619)))
 (let (($x1621 ((_ is stack ) ?x1287)))
 (let (($x1624 (= c___________ right-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1473 (center s___________)))
 (let (($x1626 ((_ is stack ) ?x1473)))
 (let (($x1627 (= c___________ center-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let ((?x1614 (top ?x1473)))
 (let ((?x1615 (stack ?x1614 ?x1253)))
 (let (($x1642 (= ?x1391 ?x1615)))
 (let (($x1629 (= c___________ center-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1424 (rest ?x1253)))
 (let (($x1638 (= ?x1391 ?x1424)))
 (let (($x1631 ((_ is stack ) ?x1253)))
 (let (($x1632 (= c___________ left-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let (($x1634 (= c___________ left-to-center)))
 (let (($x1635 (and $x1634 $x1631)))
 (ite $x1635 $x1638 (ite $x1633 $x1638 (ite $x1630 $x1642 (ite $x1628 $x1651 (ite $x1625 $x1645 $x1651))))))))))))))))))))))))))))))))
(assert
 (let ((?x1287 (right s___________)))
 (let ((?x1425 (right s____________)))
 (let (($x1647 (= ?x1425 ?x1287)))
 (let ((?x1617 (rest ?x1287)))
 (let (($x1644 (= ?x1425 ?x1617)))
 (let (($x1621 ((_ is stack ) ?x1287)))
 (let (($x1622 (= c___________ right-to-center)))
 (let (($x1623 (and $x1622 $x1621)))
 (let (($x1624 (= c___________ right-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1473 (center s___________)))
 (let ((?x1614 (top ?x1473)))
 (let ((?x1616 (stack ?x1614 ?x1287)))
 (let (($x1643 (= ?x1425 ?x1616)))
 (let (($x1626 ((_ is stack ) ?x1473)))
 (let (($x1627 (= c___________ center-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1629 (= c___________ center-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1253 (left s___________)))
 (let (($x1631 ((_ is stack ) ?x1253)))
 (let (($x1632 (= c___________ left-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let (($x1664 (ite $x1633 $x1647 (ite $x1630 $x1647 (ite $x1628 $x1643 (ite $x1625 $x1644 (ite $x1623 $x1644 $x1647)))))))
 (let ((?x1471 (top ?x1253)))
 (let ((?x1610 (stack ?x1471 ?x1287)))
 (let (($x1639 (= ?x1425 ?x1610)))
 (let (($x1634 (= c___________ left-to-center)))
 (let (($x1635 (and $x1634 $x1631)))
 (ite $x1635 $x1639 $x1664)))))))))))))))))))))))))))))))
(assert
 (let ((?x1473 (center s___________)))
 (let ((?x1611 (center s____________)))
 (let (($x1649 (= ?x1611 ?x1473)))
 (let ((?x1287 (right s___________)))
 (let ((?x1618 (top ?x1287)))
 (let ((?x1620 (stack ?x1618 ?x1473)))
 (let (($x1646 (= ?x1611 ?x1620)))
 (let (($x1621 ((_ is stack ) ?x1287)))
 (let (($x1622 (= c___________ right-to-center)))
 (let (($x1623 (and $x1622 $x1621)))
 (let (($x1624 (= c___________ right-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1613 (rest ?x1473)))
 (let (($x1641 (= ?x1611 ?x1613)))
 (let (($x1626 ((_ is stack ) ?x1473)))
 (let (($x1627 (= c___________ center-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1629 (= c___________ center-to-left)))
 (let (($x1630 (and $x1629 $x1626)))
 (let ((?x1253 (left s___________)))
 (let ((?x1471 (top ?x1253)))
 (let ((?x1612 (stack ?x1471 ?x1473)))
 (let (($x1640 (= ?x1611 ?x1612)))
 (let (($x1631 ((_ is stack ) ?x1253)))
 (let (($x1632 (= c___________ left-to-right)))
 (let (($x1633 (and $x1632 $x1631)))
 (let (($x1663 (ite $x1633 $x1640 (ite $x1630 $x1641 (ite $x1628 $x1641 (ite $x1625 $x1649 (ite $x1623 $x1646 $x1649)))))))
 (let (($x1634 (= c___________ left-to-center)))
 (let (($x1635 (and $x1634 $x1631)))
 (ite $x1635 $x1649 $x1663)))))))))))))))))))))))))))))))
(assert
 (let ((?x1425 (right s____________)))
 (let (($x1667 (= ?x1425 empty)))
 (let ((?x55 (stack D (stack O empty))))
 (let ((?x1611 (center s____________)))
 (let (($x1698 (= ?x1611 ?x55)))
 (let ((?x46 (stack E (stack F (stack I (stack G (stack C (stack J empty))))))))
 (let ((?x52 (stack H (stack K (stack A (stack N (stack B (stack M ?x46))))))))
 (let ((?x53 (stack L ?x52)))
 (let ((?x1391 (left s____________)))
 (let (($x1699 (= ?x1391 ?x53)))
 (let (($x1701 (not (and $x1699 $x1698 $x1667))))
 (not $x1701)))))))))))))
(check-sat)
(exit)
