(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x21 (stack C empty)))
 (let ((?x22 (stack D ?x21)))
 (let ((?x23 (stack G ?x22)))
 (let ((?x24 (stack B ?x23)))
 (let ((?x25 (stack F ?x24)))
 (let ((?x26 (stack I ?x25)))
 (let ((?x27 (stack A ?x26)))
 (let ((?x84 (left s_tmp_)))
 (= ?x84 ?x27))))))))))
(assert
 (let ((?x28 (stack E empty)))
 (let ((?x87 (center s_tmp__)))
 (= ?x87 ?x28))))
(assert
 (let ((?x29 (stack H empty)))
 (let ((?x90 (right s_tmp___)))
 (= ?x90 ?x29))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x117 (left s_tmp__)))
 (= (left s_tmp___) ?x117)))
(assert
 (let ((?x87 (center s_tmp__)))
 (= (center s_tmp___) ?x87)))
(assert
 (let ((?x121 (center s_tmp_)))
 (= ?x121 (center s_tmp))))
(assert
 (let ((?x124 (right s_tmp_)))
 (= ?x124 (right s_tmp))))
(assert
 (let ((?x84 (left s_tmp_)))
 (let ((?x117 (left s_tmp__)))
 (= ?x117 ?x84))))
(assert
 (let ((?x124 (right s_tmp_)))
 (let ((?x128 (right s_tmp__)))
 (= ?x128 ?x124))))
(assert
 (= c__ c!1))
(assert
 (let ((?x61 (left s_)))
 (let ((?x216 (left s__)))
 (let (($x243 (= ?x216 ?x61)))
 (let ((?x64 (right s_)))
 (let (($x201 ((_ is stack ) ?x64)))
 (let (($x198 (= c_ right-to-left)))
 (let (($x217 (and $x198 $x201)))
 (let ((?x66 (center s_)))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x219 (= c_ center-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x221 (= c_ center-to-left)))
 (let (($x222 (and $x221 $x218)))
 (let (($x252 (ite $x222 (= ?x216 (stack (top ?x66) ?x61)) (ite $x220 $x243 (ite $x217 (= ?x216 (stack (top ?x64) ?x61)) $x243)))))
 (let (($x230 (= ?x216 (rest ?x61))))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x230 (ite $x225 $x230 $x252)))))))))))))))))))))))
(assert
 (let ((?x64 (right s_)))
 (let ((?x212 (right s__)))
 (let (($x239 (= ?x212 ?x64)))
 (let (($x236 (= ?x212 (rest ?x64))))
 (let (($x201 ((_ is stack ) ?x64)))
 (let (($x196 (= c_ right-to-center)))
 (let (($x197 (and $x196 $x201)))
 (let (($x198 (= c_ right-to-left)))
 (let (($x217 (and $x198 $x201)))
 (let ((?x66 (center s_)))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x219 (= c_ center-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x249 (ite $x220 (= ?x212 (stack (top ?x66) ?x64)) (ite $x217 $x236 (ite $x197 $x236 $x239)))))
 (let (($x221 (= c_ center-to-left)))
 (let (($x222 (and $x221 $x218)))
 (let ((?x61 (left s_)))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 (= ?x212 (stack (top ?x61) ?x64)) (ite $x225 $x239 (ite $x222 $x239 $x249))))))))))))))))))))))))))
(assert
 (let ((?x66 (center s_)))
 (let ((?x203 (center s__)))
 (let (($x241 (= ?x203 ?x66)))
 (let ((?x64 (right s_)))
 (let (($x201 ((_ is stack ) ?x64)))
 (let (($x196 (= c_ right-to-center)))
 (let (($x197 (and $x196 $x201)))
 (let (($x198 (= c_ right-to-left)))
 (let (($x217 (and $x198 $x201)))
 (let (($x233 (= ?x203 (rest ?x66))))
 (let (($x218 ((_ is stack ) ?x66)))
 (let (($x219 (= c_ center-to-right)))
 (let (($x220 (and $x219 $x218)))
 (let (($x248 (ite $x220 $x233 (ite $x217 $x241 (ite $x197 (= ?x203 (stack (top ?x64) ?x66)) $x241)))))
 (let (($x221 (= c_ center-to-left)))
 (let (($x222 (and $x221 $x218)))
 (let ((?x61 (left s_)))
 (let (($x223 ((_ is stack ) ?x61)))
 (let (($x224 (= c_ left-to-right)))
 (let (($x225 (and $x224 $x223)))
 (let (($x226 (= c_ left-to-center)))
 (let (($x227 (and $x226 $x223)))
 (ite $x227 $x241 (ite $x225 (= ?x203 (stack (top ?x61) ?x66)) (ite $x222 $x233 $x248))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x216 (left s__)))
 (let ((?x133 (left s___)))
 (let (($x371 (= ?x133 ?x216)))
 (let ((?x212 (right s__)))
 (let ((?x338 (top ?x212)))
 (let ((?x339 (stack ?x338 ?x216)))
 (let (($x365 (= ?x133 ?x339)))
 (let (($x341 ((_ is stack ) ?x212)))
 (let (($x344 (= c__ right-to-left)))
 (let (($x345 (and $x344 $x341)))
 (let ((?x203 (center s__)))
 (let (($x346 ((_ is stack ) ?x203)))
 (let (($x347 (= c__ center-to-right)))
 (let (($x348 (and $x347 $x346)))
 (let ((?x334 (top ?x203)))
 (let ((?x335 (stack ?x334 ?x216)))
 (let (($x362 (= ?x133 ?x335)))
 (let (($x349 (= c__ center-to-left)))
 (let (($x350 (and $x349 $x346)))
 (let ((?x134 (rest ?x216)))
 (let (($x358 (= ?x133 ?x134)))
 (let (($x351 ((_ is stack ) ?x216)))
 (let (($x352 (= c__ left-to-right)))
 (let (($x353 (and $x352 $x351)))
 (let (($x354 (= c__ left-to-center)))
 (let (($x355 (and $x354 $x351)))
 (ite $x355 $x358 (ite $x353 $x358 (ite $x350 $x362 (ite $x348 $x371 (ite $x345 $x365 $x371))))))))))))))))))))))))))))))))
(assert
 (let ((?x212 (right s__)))
 (let ((?x195 (right s___)))
 (let (($x367 (= ?x195 ?x212)))
 (let ((?x337 (rest ?x212)))
 (let (($x364 (= ?x195 ?x337)))
 (let (($x341 ((_ is stack ) ?x212)))
 (let (($x342 (= c__ right-to-center)))
 (let (($x343 (and $x342 $x341)))
 (let (($x344 (= c__ right-to-left)))
 (let (($x345 (and $x344 $x341)))
 (let ((?x203 (center s__)))
 (let ((?x334 (top ?x203)))
 (let ((?x336 (stack ?x334 ?x212)))
 (let (($x363 (= ?x195 ?x336)))
 (let (($x346 ((_ is stack ) ?x203)))
 (let (($x347 (= c__ center-to-right)))
 (let (($x348 (and $x347 $x346)))
 (let (($x349 (= c__ center-to-left)))
 (let (($x350 (and $x349 $x346)))
 (let ((?x216 (left s__)))
 (let (($x351 ((_ is stack ) ?x216)))
 (let (($x352 (= c__ left-to-right)))
 (let (($x353 (and $x352 $x351)))
 (let (($x384 (ite $x353 $x367 (ite $x350 $x367 (ite $x348 $x363 (ite $x345 $x364 (ite $x343 $x364 $x367)))))))
 (let ((?x329 (top ?x216)))
 (let ((?x330 (stack ?x329 ?x212)))
 (let (($x359 (= ?x195 ?x330)))
 (let (($x354 (= c__ left-to-center)))
 (let (($x355 (and $x354 $x351)))
 (ite $x355 $x359 $x384)))))))))))))))))))))))))))))))
(assert
 (let ((?x203 (center s__)))
 (let ((?x331 (center s___)))
 (let (($x369 (= ?x331 ?x203)))
 (let ((?x212 (right s__)))
 (let ((?x338 (top ?x212)))
 (let ((?x340 (stack ?x338 ?x203)))
 (let (($x366 (= ?x331 ?x340)))
 (let (($x341 ((_ is stack ) ?x212)))
 (let (($x342 (= c__ right-to-center)))
 (let (($x343 (and $x342 $x341)))
 (let (($x344 (= c__ right-to-left)))
 (let (($x345 (and $x344 $x341)))
 (let ((?x333 (rest ?x203)))
 (let (($x361 (= ?x331 ?x333)))
 (let (($x346 ((_ is stack ) ?x203)))
 (let (($x347 (= c__ center-to-right)))
 (let (($x348 (and $x347 $x346)))
 (let (($x349 (= c__ center-to-left)))
 (let (($x350 (and $x349 $x346)))
 (let ((?x216 (left s__)))
 (let ((?x329 (top ?x216)))
 (let ((?x332 (stack ?x329 ?x203)))
 (let (($x360 (= ?x331 ?x332)))
 (let (($x351 ((_ is stack ) ?x216)))
 (let (($x352 (= c__ left-to-right)))
 (let (($x353 (and $x352 $x351)))
 (let (($x383 (ite $x353 $x360 (ite $x350 $x361 (ite $x348 $x361 (ite $x345 $x369 (ite $x343 $x366 $x369)))))))
 (let (($x354 (= c__ left-to-center)))
 (let (($x355 (and $x354 $x351)))
 (ite $x355 $x369 $x383)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x133 (left s___)))
 (let ((?x302 (left s____)))
 (let (($x511 (= ?x302 ?x133)))
 (let ((?x195 (right s___)))
 (let ((?x478 (top ?x195)))
 (let ((?x479 (stack ?x478 ?x133)))
 (let (($x505 (= ?x302 ?x479)))
 (let (($x481 ((_ is stack ) ?x195)))
 (let (($x484 (= c___ right-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x331 (center s___)))
 (let (($x486 ((_ is stack ) ?x331)))
 (let (($x487 (= c___ center-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let ((?x474 (top ?x331)))
 (let ((?x475 (stack ?x474 ?x133)))
 (let (($x502 (= ?x302 ?x475)))
 (let (($x489 (= c___ center-to-left)))
 (let (($x490 (and $x489 $x486)))
 (let ((?x328 (rest ?x133)))
 (let (($x498 (= ?x302 ?x328)))
 (let (($x491 ((_ is stack ) ?x133)))
 (let (($x492 (= c___ left-to-right)))
 (let (($x493 (and $x492 $x491)))
 (let (($x494 (= c___ left-to-center)))
 (let (($x495 (and $x494 $x491)))
 (ite $x495 $x498 (ite $x493 $x498 (ite $x490 $x502 (ite $x488 $x511 (ite $x485 $x505 $x511))))))))))))))))))))))))))))))))
(assert
 (let ((?x195 (right s___)))
 (let ((?x468 (right s____)))
 (let (($x507 (= ?x468 ?x195)))
 (let ((?x477 (rest ?x195)))
 (let (($x504 (= ?x468 ?x477)))
 (let (($x481 ((_ is stack ) ?x195)))
 (let (($x482 (= c___ right-to-center)))
 (let (($x483 (and $x482 $x481)))
 (let (($x484 (= c___ right-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x331 (center s___)))
 (let ((?x474 (top ?x331)))
 (let ((?x476 (stack ?x474 ?x195)))
 (let (($x503 (= ?x468 ?x476)))
 (let (($x486 ((_ is stack ) ?x331)))
 (let (($x487 (= c___ center-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let (($x489 (= c___ center-to-left)))
 (let (($x490 (and $x489 $x486)))
 (let ((?x133 (left s___)))
 (let (($x491 ((_ is stack ) ?x133)))
 (let (($x492 (= c___ left-to-right)))
 (let (($x493 (and $x492 $x491)))
 (let (($x524 (ite $x493 $x507 (ite $x490 $x507 (ite $x488 $x503 (ite $x485 $x504 (ite $x483 $x504 $x507)))))))
 (let ((?x469 (top ?x133)))
 (let ((?x470 (stack ?x469 ?x195)))
 (let (($x499 (= ?x468 ?x470)))
 (let (($x494 (= c___ left-to-center)))
 (let (($x495 (and $x494 $x491)))
 (ite $x495 $x499 $x524)))))))))))))))))))))))))))))))
(assert
 (let ((?x331 (center s___)))
 (let ((?x471 (center s____)))
 (let (($x509 (= ?x471 ?x331)))
 (let ((?x195 (right s___)))
 (let ((?x478 (top ?x195)))
 (let ((?x480 (stack ?x478 ?x331)))
 (let (($x506 (= ?x471 ?x480)))
 (let (($x481 ((_ is stack ) ?x195)))
 (let (($x482 (= c___ right-to-center)))
 (let (($x483 (and $x482 $x481)))
 (let (($x484 (= c___ right-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x473 (rest ?x331)))
 (let (($x501 (= ?x471 ?x473)))
 (let (($x486 ((_ is stack ) ?x331)))
 (let (($x487 (= c___ center-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let (($x489 (= c___ center-to-left)))
 (let (($x490 (and $x489 $x486)))
 (let ((?x133 (left s___)))
 (let ((?x469 (top ?x133)))
 (let ((?x472 (stack ?x469 ?x331)))
 (let (($x500 (= ?x471 ?x472)))
 (let (($x491 ((_ is stack ) ?x133)))
 (let (($x492 (= c___ left-to-right)))
 (let (($x493 (and $x492 $x491)))
 (let (($x523 (ite $x493 $x500 (ite $x490 $x501 (ite $x488 $x501 (ite $x485 $x509 (ite $x483 $x506 $x509)))))))
 (let (($x494 (= c___ left-to-center)))
 (let (($x495 (and $x494 $x491)))
 (ite $x495 $x509 $x523)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x302 (left s____)))
 (let ((?x387 (left s_____)))
 (let (($x649 (= ?x387 ?x302)))
 (let ((?x468 (right s____)))
 (let ((?x616 (top ?x468)))
 (let ((?x617 (stack ?x616 ?x302)))
 (let (($x643 (= ?x387 ?x617)))
 (let (($x619 ((_ is stack ) ?x468)))
 (let (($x622 (= c____ right-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x471 (center s____)))
 (let (($x624 ((_ is stack ) ?x471)))
 (let (($x625 (= c____ center-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let ((?x612 (top ?x471)))
 (let ((?x613 (stack ?x612 ?x302)))
 (let (($x640 (= ?x387 ?x613)))
 (let (($x627 (= c____ center-to-left)))
 (let (($x628 (and $x627 $x624)))
 (let ((?x420 (rest ?x302)))
 (let (($x636 (= ?x387 ?x420)))
 (let (($x629 ((_ is stack ) ?x302)))
 (let (($x630 (= c____ left-to-right)))
 (let (($x631 (and $x630 $x629)))
 (let (($x632 (= c____ left-to-center)))
 (let (($x633 (and $x632 $x629)))
 (ite $x633 $x636 (ite $x631 $x636 (ite $x628 $x640 (ite $x626 $x649 (ite $x623 $x643 $x649))))))))))))))))))))))))))))))))
(assert
 (let ((?x468 (right s____)))
 (let ((?x421 (right s_____)))
 (let (($x645 (= ?x421 ?x468)))
 (let ((?x615 (rest ?x468)))
 (let (($x642 (= ?x421 ?x615)))
 (let (($x619 ((_ is stack ) ?x468)))
 (let (($x620 (= c____ right-to-center)))
 (let (($x621 (and $x620 $x619)))
 (let (($x622 (= c____ right-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x471 (center s____)))
 (let ((?x612 (top ?x471)))
 (let ((?x614 (stack ?x612 ?x468)))
 (let (($x641 (= ?x421 ?x614)))
 (let (($x624 ((_ is stack ) ?x471)))
 (let (($x625 (= c____ center-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let (($x627 (= c____ center-to-left)))
 (let (($x628 (and $x627 $x624)))
 (let ((?x302 (left s____)))
 (let (($x629 ((_ is stack ) ?x302)))
 (let (($x630 (= c____ left-to-right)))
 (let (($x631 (and $x630 $x629)))
 (let (($x662 (ite $x631 $x645 (ite $x628 $x645 (ite $x626 $x641 (ite $x623 $x642 (ite $x621 $x642 $x645)))))))
 (let ((?x467 (top ?x302)))
 (let ((?x608 (stack ?x467 ?x468)))
 (let (($x637 (= ?x421 ?x608)))
 (let (($x632 (= c____ left-to-center)))
 (let (($x633 (and $x632 $x629)))
 (ite $x633 $x637 $x662)))))))))))))))))))))))))))))))
(assert
 (let ((?x471 (center s____)))
 (let ((?x609 (center s_____)))
 (let (($x647 (= ?x609 ?x471)))
 (let ((?x468 (right s____)))
 (let ((?x616 (top ?x468)))
 (let ((?x618 (stack ?x616 ?x471)))
 (let (($x644 (= ?x609 ?x618)))
 (let (($x619 ((_ is stack ) ?x468)))
 (let (($x620 (= c____ right-to-center)))
 (let (($x621 (and $x620 $x619)))
 (let (($x622 (= c____ right-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x611 (rest ?x471)))
 (let (($x639 (= ?x609 ?x611)))
 (let (($x624 ((_ is stack ) ?x471)))
 (let (($x625 (= c____ center-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let (($x627 (= c____ center-to-left)))
 (let (($x628 (and $x627 $x624)))
 (let ((?x302 (left s____)))
 (let ((?x467 (top ?x302)))
 (let ((?x610 (stack ?x467 ?x471)))
 (let (($x638 (= ?x609 ?x610)))
 (let (($x629 ((_ is stack ) ?x302)))
 (let (($x630 (= c____ left-to-right)))
 (let (($x631 (and $x630 $x629)))
 (let (($x661 (ite $x631 $x638 (ite $x628 $x639 (ite $x626 $x639 (ite $x623 $x647 (ite $x621 $x644 $x647)))))))
 (let (($x632 (= c____ left-to-center)))
 (let (($x633 (and $x632 $x629)))
 (ite $x633 $x647 $x661)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x387 (left s_____)))
 (let ((?x527 (left s______)))
 (let (($x787 (= ?x527 ?x387)))
 (let ((?x421 (right s_____)))
 (let ((?x754 (top ?x421)))
 (let ((?x755 (stack ?x754 ?x387)))
 (let (($x781 (= ?x527 ?x755)))
 (let (($x757 ((_ is stack ) ?x421)))
 (let (($x760 (= c_____ right-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x609 (center s_____)))
 (let (($x762 ((_ is stack ) ?x609)))
 (let (($x763 (= c_____ center-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let ((?x750 (top ?x609)))
 (let ((?x751 (stack ?x750 ?x387)))
 (let (($x778 (= ?x527 ?x751)))
 (let (($x765 (= c_____ center-to-left)))
 (let (($x766 (and $x765 $x762)))
 (let ((?x560 (rest ?x387)))
 (let (($x774 (= ?x527 ?x560)))
 (let (($x767 ((_ is stack ) ?x387)))
 (let (($x768 (= c_____ left-to-right)))
 (let (($x769 (and $x768 $x767)))
 (let (($x770 (= c_____ left-to-center)))
 (let (($x771 (and $x770 $x767)))
 (ite $x771 $x774 (ite $x769 $x774 (ite $x766 $x778 (ite $x764 $x787 (ite $x761 $x781 $x787))))))))))))))))))))))))))))))))
(assert
 (let ((?x421 (right s_____)))
 (let ((?x561 (right s______)))
 (let (($x783 (= ?x561 ?x421)))
 (let ((?x753 (rest ?x421)))
 (let (($x780 (= ?x561 ?x753)))
 (let (($x757 ((_ is stack ) ?x421)))
 (let (($x758 (= c_____ right-to-center)))
 (let (($x759 (and $x758 $x757)))
 (let (($x760 (= c_____ right-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x609 (center s_____)))
 (let ((?x750 (top ?x609)))
 (let ((?x752 (stack ?x750 ?x421)))
 (let (($x779 (= ?x561 ?x752)))
 (let (($x762 ((_ is stack ) ?x609)))
 (let (($x763 (= c_____ center-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let (($x765 (= c_____ center-to-left)))
 (let (($x766 (and $x765 $x762)))
 (let ((?x387 (left s_____)))
 (let (($x767 ((_ is stack ) ?x387)))
 (let (($x768 (= c_____ left-to-right)))
 (let (($x769 (and $x768 $x767)))
 (let (($x800 (ite $x769 $x783 (ite $x766 $x783 (ite $x764 $x779 (ite $x761 $x780 (ite $x759 $x780 $x783)))))))
 (let ((?x607 (top ?x387)))
 (let ((?x746 (stack ?x607 ?x421)))
 (let (($x775 (= ?x561 ?x746)))
 (let (($x770 (= c_____ left-to-center)))
 (let (($x771 (and $x770 $x767)))
 (ite $x771 $x775 $x800)))))))))))))))))))))))))))))))
(assert
 (let ((?x609 (center s_____)))
 (let ((?x747 (center s______)))
 (let (($x785 (= ?x747 ?x609)))
 (let ((?x421 (right s_____)))
 (let ((?x754 (top ?x421)))
 (let ((?x756 (stack ?x754 ?x609)))
 (let (($x782 (= ?x747 ?x756)))
 (let (($x757 ((_ is stack ) ?x421)))
 (let (($x758 (= c_____ right-to-center)))
 (let (($x759 (and $x758 $x757)))
 (let (($x760 (= c_____ right-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x749 (rest ?x609)))
 (let (($x777 (= ?x747 ?x749)))
 (let (($x762 ((_ is stack ) ?x609)))
 (let (($x763 (= c_____ center-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let (($x765 (= c_____ center-to-left)))
 (let (($x766 (and $x765 $x762)))
 (let ((?x387 (left s_____)))
 (let ((?x607 (top ?x387)))
 (let ((?x748 (stack ?x607 ?x609)))
 (let (($x776 (= ?x747 ?x748)))
 (let (($x767 ((_ is stack ) ?x387)))
 (let (($x768 (= c_____ left-to-right)))
 (let (($x769 (and $x768 $x767)))
 (let (($x799 (ite $x769 $x776 (ite $x766 $x777 (ite $x764 $x777 (ite $x761 $x785 (ite $x759 $x782 $x785)))))))
 (let (($x770 (= c_____ left-to-center)))
 (let (($x771 (and $x770 $x767)))
 (ite $x771 $x785 $x799)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x527 (left s______)))
 (let ((?x665 (left s_______)))
 (let (($x925 (= ?x665 ?x527)))
 (let ((?x561 (right s______)))
 (let ((?x892 (top ?x561)))
 (let ((?x893 (stack ?x892 ?x527)))
 (let (($x919 (= ?x665 ?x893)))
 (let (($x895 ((_ is stack ) ?x561)))
 (let (($x898 (= c______ right-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x747 (center s______)))
 (let (($x900 ((_ is stack ) ?x747)))
 (let (($x901 (= c______ center-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let ((?x888 (top ?x747)))
 (let ((?x889 (stack ?x888 ?x527)))
 (let (($x916 (= ?x665 ?x889)))
 (let (($x903 (= c______ center-to-left)))
 (let (($x904 (and $x903 $x900)))
 (let ((?x698 (rest ?x527)))
 (let (($x912 (= ?x665 ?x698)))
 (let (($x905 ((_ is stack ) ?x527)))
 (let (($x906 (= c______ left-to-right)))
 (let (($x907 (and $x906 $x905)))
 (let (($x908 (= c______ left-to-center)))
 (let (($x909 (and $x908 $x905)))
 (ite $x909 $x912 (ite $x907 $x912 (ite $x904 $x916 (ite $x902 $x925 (ite $x899 $x919 $x925))))))))))))))))))))))))))))))))
(assert
 (let ((?x561 (right s______)))
 (let ((?x699 (right s_______)))
 (let (($x921 (= ?x699 ?x561)))
 (let ((?x891 (rest ?x561)))
 (let (($x918 (= ?x699 ?x891)))
 (let (($x895 ((_ is stack ) ?x561)))
 (let (($x896 (= c______ right-to-center)))
 (let (($x897 (and $x896 $x895)))
 (let (($x898 (= c______ right-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x747 (center s______)))
 (let ((?x888 (top ?x747)))
 (let ((?x890 (stack ?x888 ?x561)))
 (let (($x917 (= ?x699 ?x890)))
 (let (($x900 ((_ is stack ) ?x747)))
 (let (($x901 (= c______ center-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let (($x903 (= c______ center-to-left)))
 (let (($x904 (and $x903 $x900)))
 (let ((?x527 (left s______)))
 (let (($x905 ((_ is stack ) ?x527)))
 (let (($x906 (= c______ left-to-right)))
 (let (($x907 (and $x906 $x905)))
 (let (($x938 (ite $x907 $x921 (ite $x904 $x921 (ite $x902 $x917 (ite $x899 $x918 (ite $x897 $x918 $x921)))))))
 (let ((?x745 (top ?x527)))
 (let ((?x884 (stack ?x745 ?x561)))
 (let (($x913 (= ?x699 ?x884)))
 (let (($x908 (= c______ left-to-center)))
 (let (($x909 (and $x908 $x905)))
 (ite $x909 $x913 $x938)))))))))))))))))))))))))))))))
(assert
 (let ((?x747 (center s______)))
 (let ((?x885 (center s_______)))
 (let (($x923 (= ?x885 ?x747)))
 (let ((?x561 (right s______)))
 (let ((?x892 (top ?x561)))
 (let ((?x894 (stack ?x892 ?x747)))
 (let (($x920 (= ?x885 ?x894)))
 (let (($x895 ((_ is stack ) ?x561)))
 (let (($x896 (= c______ right-to-center)))
 (let (($x897 (and $x896 $x895)))
 (let (($x898 (= c______ right-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x887 (rest ?x747)))
 (let (($x915 (= ?x885 ?x887)))
 (let (($x900 ((_ is stack ) ?x747)))
 (let (($x901 (= c______ center-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let (($x903 (= c______ center-to-left)))
 (let (($x904 (and $x903 $x900)))
 (let ((?x527 (left s______)))
 (let ((?x745 (top ?x527)))
 (let ((?x886 (stack ?x745 ?x747)))
 (let (($x914 (= ?x885 ?x886)))
 (let (($x905 ((_ is stack ) ?x527)))
 (let (($x906 (= c______ left-to-right)))
 (let (($x907 (and $x906 $x905)))
 (let (($x937 (ite $x907 $x914 (ite $x904 $x915 (ite $x902 $x915 (ite $x899 $x923 (ite $x897 $x920 $x923)))))))
 (let (($x908 (= c______ left-to-center)))
 (let (($x909 (and $x908 $x905)))
 (ite $x909 $x923 $x937)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x665 (left s_______)))
 (let ((?x803 (left s________)))
 (let (($x1063 (= ?x803 ?x665)))
 (let ((?x699 (right s_______)))
 (let ((?x1030 (top ?x699)))
 (let ((?x1031 (stack ?x1030 ?x665)))
 (let (($x1057 (= ?x803 ?x1031)))
 (let (($x1033 ((_ is stack ) ?x699)))
 (let (($x1036 (= c_______ right-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x885 (center s_______)))
 (let (($x1038 ((_ is stack ) ?x885)))
 (let (($x1039 (= c_______ center-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let ((?x1026 (top ?x885)))
 (let ((?x1027 (stack ?x1026 ?x665)))
 (let (($x1054 (= ?x803 ?x1027)))
 (let (($x1041 (= c_______ center-to-left)))
 (let (($x1042 (and $x1041 $x1038)))
 (let ((?x836 (rest ?x665)))
 (let (($x1050 (= ?x803 ?x836)))
 (let (($x1043 ((_ is stack ) ?x665)))
 (let (($x1044 (= c_______ left-to-right)))
 (let (($x1045 (and $x1044 $x1043)))
 (let (($x1046 (= c_______ left-to-center)))
 (let (($x1047 (and $x1046 $x1043)))
 (ite $x1047 $x1050 (ite $x1045 $x1050 (ite $x1042 $x1054 (ite $x1040 $x1063 (ite $x1037 $x1057 $x1063))))))))))))))))))))))))))))))))
(assert
 (let ((?x699 (right s_______)))
 (let ((?x837 (right s________)))
 (let (($x1059 (= ?x837 ?x699)))
 (let ((?x1029 (rest ?x699)))
 (let (($x1056 (= ?x837 ?x1029)))
 (let (($x1033 ((_ is stack ) ?x699)))
 (let (($x1034 (= c_______ right-to-center)))
 (let (($x1035 (and $x1034 $x1033)))
 (let (($x1036 (= c_______ right-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x885 (center s_______)))
 (let ((?x1026 (top ?x885)))
 (let ((?x1028 (stack ?x1026 ?x699)))
 (let (($x1055 (= ?x837 ?x1028)))
 (let (($x1038 ((_ is stack ) ?x885)))
 (let (($x1039 (= c_______ center-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let (($x1041 (= c_______ center-to-left)))
 (let (($x1042 (and $x1041 $x1038)))
 (let ((?x665 (left s_______)))
 (let (($x1043 ((_ is stack ) ?x665)))
 (let (($x1044 (= c_______ left-to-right)))
 (let (($x1045 (and $x1044 $x1043)))
 (let (($x1076 (ite $x1045 $x1059 (ite $x1042 $x1059 (ite $x1040 $x1055 (ite $x1037 $x1056 (ite $x1035 $x1056 $x1059)))))))
 (let ((?x883 (top ?x665)))
 (let ((?x1022 (stack ?x883 ?x699)))
 (let (($x1051 (= ?x837 ?x1022)))
 (let (($x1046 (= c_______ left-to-center)))
 (let (($x1047 (and $x1046 $x1043)))
 (ite $x1047 $x1051 $x1076)))))))))))))))))))))))))))))))
(assert
 (let ((?x885 (center s_______)))
 (let ((?x1023 (center s________)))
 (let (($x1061 (= ?x1023 ?x885)))
 (let ((?x699 (right s_______)))
 (let ((?x1030 (top ?x699)))
 (let ((?x1032 (stack ?x1030 ?x885)))
 (let (($x1058 (= ?x1023 ?x1032)))
 (let (($x1033 ((_ is stack ) ?x699)))
 (let (($x1034 (= c_______ right-to-center)))
 (let (($x1035 (and $x1034 $x1033)))
 (let (($x1036 (= c_______ right-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x1025 (rest ?x885)))
 (let (($x1053 (= ?x1023 ?x1025)))
 (let (($x1038 ((_ is stack ) ?x885)))
 (let (($x1039 (= c_______ center-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let (($x1041 (= c_______ center-to-left)))
 (let (($x1042 (and $x1041 $x1038)))
 (let ((?x665 (left s_______)))
 (let ((?x883 (top ?x665)))
 (let ((?x1024 (stack ?x883 ?x885)))
 (let (($x1052 (= ?x1023 ?x1024)))
 (let (($x1043 ((_ is stack ) ?x665)))
 (let (($x1044 (= c_______ left-to-right)))
 (let (($x1045 (and $x1044 $x1043)))
 (let (($x1075 (ite $x1045 $x1052 (ite $x1042 $x1053 (ite $x1040 $x1053 (ite $x1037 $x1061 (ite $x1035 $x1058 $x1061)))))))
 (let (($x1046 (= c_______ left-to-center)))
 (let (($x1047 (and $x1046 $x1043)))
 (ite $x1047 $x1061 $x1075)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x803 (left s________)))
 (let ((?x941 (left s_________)))
 (let (($x1201 (= ?x941 ?x803)))
 (let ((?x837 (right s________)))
 (let ((?x1168 (top ?x837)))
 (let ((?x1169 (stack ?x1168 ?x803)))
 (let (($x1195 (= ?x941 ?x1169)))
 (let (($x1171 ((_ is stack ) ?x837)))
 (let (($x1174 (= c________ right-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x1023 (center s________)))
 (let (($x1176 ((_ is stack ) ?x1023)))
 (let (($x1177 (= c________ center-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let ((?x1164 (top ?x1023)))
 (let ((?x1165 (stack ?x1164 ?x803)))
 (let (($x1192 (= ?x941 ?x1165)))
 (let (($x1179 (= c________ center-to-left)))
 (let (($x1180 (and $x1179 $x1176)))
 (let ((?x974 (rest ?x803)))
 (let (($x1188 (= ?x941 ?x974)))
 (let (($x1181 ((_ is stack ) ?x803)))
 (let (($x1182 (= c________ left-to-right)))
 (let (($x1183 (and $x1182 $x1181)))
 (let (($x1184 (= c________ left-to-center)))
 (let (($x1185 (and $x1184 $x1181)))
 (ite $x1185 $x1188 (ite $x1183 $x1188 (ite $x1180 $x1192 (ite $x1178 $x1201 (ite $x1175 $x1195 $x1201))))))))))))))))))))))))))))))))
(assert
 (let ((?x837 (right s________)))
 (let ((?x975 (right s_________)))
 (let (($x1197 (= ?x975 ?x837)))
 (let ((?x1167 (rest ?x837)))
 (let (($x1194 (= ?x975 ?x1167)))
 (let (($x1171 ((_ is stack ) ?x837)))
 (let (($x1172 (= c________ right-to-center)))
 (let (($x1173 (and $x1172 $x1171)))
 (let (($x1174 (= c________ right-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x1023 (center s________)))
 (let ((?x1164 (top ?x1023)))
 (let ((?x1166 (stack ?x1164 ?x837)))
 (let (($x1193 (= ?x975 ?x1166)))
 (let (($x1176 ((_ is stack ) ?x1023)))
 (let (($x1177 (= c________ center-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let (($x1179 (= c________ center-to-left)))
 (let (($x1180 (and $x1179 $x1176)))
 (let ((?x803 (left s________)))
 (let (($x1181 ((_ is stack ) ?x803)))
 (let (($x1182 (= c________ left-to-right)))
 (let (($x1183 (and $x1182 $x1181)))
 (let (($x1214 (ite $x1183 $x1197 (ite $x1180 $x1197 (ite $x1178 $x1193 (ite $x1175 $x1194 (ite $x1173 $x1194 $x1197)))))))
 (let ((?x1021 (top ?x803)))
 (let ((?x1160 (stack ?x1021 ?x837)))
 (let (($x1189 (= ?x975 ?x1160)))
 (let (($x1184 (= c________ left-to-center)))
 (let (($x1185 (and $x1184 $x1181)))
 (ite $x1185 $x1189 $x1214)))))))))))))))))))))))))))))))
(assert
 (let ((?x1023 (center s________)))
 (let ((?x1161 (center s_________)))
 (let (($x1199 (= ?x1161 ?x1023)))
 (let ((?x837 (right s________)))
 (let ((?x1168 (top ?x837)))
 (let ((?x1170 (stack ?x1168 ?x1023)))
 (let (($x1196 (= ?x1161 ?x1170)))
 (let (($x1171 ((_ is stack ) ?x837)))
 (let (($x1172 (= c________ right-to-center)))
 (let (($x1173 (and $x1172 $x1171)))
 (let (($x1174 (= c________ right-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x1163 (rest ?x1023)))
 (let (($x1191 (= ?x1161 ?x1163)))
 (let (($x1176 ((_ is stack ) ?x1023)))
 (let (($x1177 (= c________ center-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let (($x1179 (= c________ center-to-left)))
 (let (($x1180 (and $x1179 $x1176)))
 (let ((?x803 (left s________)))
 (let ((?x1021 (top ?x803)))
 (let ((?x1162 (stack ?x1021 ?x1023)))
 (let (($x1190 (= ?x1161 ?x1162)))
 (let (($x1181 ((_ is stack ) ?x803)))
 (let (($x1182 (= c________ left-to-right)))
 (let (($x1183 (and $x1182 $x1181)))
 (let (($x1213 (ite $x1183 $x1190 (ite $x1180 $x1191 (ite $x1178 $x1191 (ite $x1175 $x1199 (ite $x1173 $x1196 $x1199)))))))
 (let (($x1184 (= c________ left-to-center)))
 (let (($x1185 (and $x1184 $x1181)))
 (ite $x1185 $x1199 $x1213)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x941 (left s_________)))
 (let ((?x1079 (left s__________)))
 (let (($x1339 (= ?x1079 ?x941)))
 (let ((?x975 (right s_________)))
 (let ((?x1306 (top ?x975)))
 (let ((?x1307 (stack ?x1306 ?x941)))
 (let (($x1333 (= ?x1079 ?x1307)))
 (let (($x1309 ((_ is stack ) ?x975)))
 (let (($x1312 (= c_________ right-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x1161 (center s_________)))
 (let (($x1314 ((_ is stack ) ?x1161)))
 (let (($x1315 (= c_________ center-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let ((?x1302 (top ?x1161)))
 (let ((?x1303 (stack ?x1302 ?x941)))
 (let (($x1330 (= ?x1079 ?x1303)))
 (let (($x1317 (= c_________ center-to-left)))
 (let (($x1318 (and $x1317 $x1314)))
 (let ((?x1112 (rest ?x941)))
 (let (($x1326 (= ?x1079 ?x1112)))
 (let (($x1319 ((_ is stack ) ?x941)))
 (let (($x1320 (= c_________ left-to-right)))
 (let (($x1321 (and $x1320 $x1319)))
 (let (($x1322 (= c_________ left-to-center)))
 (let (($x1323 (and $x1322 $x1319)))
 (ite $x1323 $x1326 (ite $x1321 $x1326 (ite $x1318 $x1330 (ite $x1316 $x1339 (ite $x1313 $x1333 $x1339))))))))))))))))))))))))))))))))
(assert
 (let ((?x975 (right s_________)))
 (let ((?x1113 (right s__________)))
 (let (($x1335 (= ?x1113 ?x975)))
 (let ((?x1305 (rest ?x975)))
 (let (($x1332 (= ?x1113 ?x1305)))
 (let (($x1309 ((_ is stack ) ?x975)))
 (let (($x1310 (= c_________ right-to-center)))
 (let (($x1311 (and $x1310 $x1309)))
 (let (($x1312 (= c_________ right-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x1161 (center s_________)))
 (let ((?x1302 (top ?x1161)))
 (let ((?x1304 (stack ?x1302 ?x975)))
 (let (($x1331 (= ?x1113 ?x1304)))
 (let (($x1314 ((_ is stack ) ?x1161)))
 (let (($x1315 (= c_________ center-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let (($x1317 (= c_________ center-to-left)))
 (let (($x1318 (and $x1317 $x1314)))
 (let ((?x941 (left s_________)))
 (let (($x1319 ((_ is stack ) ?x941)))
 (let (($x1320 (= c_________ left-to-right)))
 (let (($x1321 (and $x1320 $x1319)))
 (let (($x1352 (ite $x1321 $x1335 (ite $x1318 $x1335 (ite $x1316 $x1331 (ite $x1313 $x1332 (ite $x1311 $x1332 $x1335)))))))
 (let ((?x1159 (top ?x941)))
 (let ((?x1298 (stack ?x1159 ?x975)))
 (let (($x1327 (= ?x1113 ?x1298)))
 (let (($x1322 (= c_________ left-to-center)))
 (let (($x1323 (and $x1322 $x1319)))
 (ite $x1323 $x1327 $x1352)))))))))))))))))))))))))))))))
(assert
 (let ((?x1161 (center s_________)))
 (let ((?x1299 (center s__________)))
 (let (($x1337 (= ?x1299 ?x1161)))
 (let ((?x975 (right s_________)))
 (let ((?x1306 (top ?x975)))
 (let ((?x1308 (stack ?x1306 ?x1161)))
 (let (($x1334 (= ?x1299 ?x1308)))
 (let (($x1309 ((_ is stack ) ?x975)))
 (let (($x1310 (= c_________ right-to-center)))
 (let (($x1311 (and $x1310 $x1309)))
 (let (($x1312 (= c_________ right-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x1301 (rest ?x1161)))
 (let (($x1329 (= ?x1299 ?x1301)))
 (let (($x1314 ((_ is stack ) ?x1161)))
 (let (($x1315 (= c_________ center-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let (($x1317 (= c_________ center-to-left)))
 (let (($x1318 (and $x1317 $x1314)))
 (let ((?x941 (left s_________)))
 (let ((?x1159 (top ?x941)))
 (let ((?x1300 (stack ?x1159 ?x1161)))
 (let (($x1328 (= ?x1299 ?x1300)))
 (let (($x1319 ((_ is stack ) ?x941)))
 (let (($x1320 (= c_________ left-to-right)))
 (let (($x1321 (and $x1320 $x1319)))
 (let (($x1351 (ite $x1321 $x1328 (ite $x1318 $x1329 (ite $x1316 $x1329 (ite $x1313 $x1337 (ite $x1311 $x1334 $x1337)))))))
 (let (($x1322 (= c_________ left-to-center)))
 (let (($x1323 (and $x1322 $x1319)))
 (ite $x1323 $x1337 $x1351)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1079 (left s__________)))
 (let ((?x1217 (left s___________)))
 (let (($x1477 (= ?x1217 ?x1079)))
 (let ((?x1113 (right s__________)))
 (let ((?x1444 (top ?x1113)))
 (let ((?x1445 (stack ?x1444 ?x1079)))
 (let (($x1471 (= ?x1217 ?x1445)))
 (let (($x1447 ((_ is stack ) ?x1113)))
 (let (($x1450 (= c__________ right-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1299 (center s__________)))
 (let (($x1452 ((_ is stack ) ?x1299)))
 (let (($x1453 (= c__________ center-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let ((?x1440 (top ?x1299)))
 (let ((?x1441 (stack ?x1440 ?x1079)))
 (let (($x1468 (= ?x1217 ?x1441)))
 (let (($x1455 (= c__________ center-to-left)))
 (let (($x1456 (and $x1455 $x1452)))
 (let ((?x1250 (rest ?x1079)))
 (let (($x1464 (= ?x1217 ?x1250)))
 (let (($x1457 ((_ is stack ) ?x1079)))
 (let (($x1458 (= c__________ left-to-right)))
 (let (($x1459 (and $x1458 $x1457)))
 (let (($x1460 (= c__________ left-to-center)))
 (let (($x1461 (and $x1460 $x1457)))
 (ite $x1461 $x1464 (ite $x1459 $x1464 (ite $x1456 $x1468 (ite $x1454 $x1477 (ite $x1451 $x1471 $x1477))))))))))))))))))))))))))))))))
(assert
 (let ((?x1113 (right s__________)))
 (let ((?x1251 (right s___________)))
 (let (($x1473 (= ?x1251 ?x1113)))
 (let ((?x1443 (rest ?x1113)))
 (let (($x1470 (= ?x1251 ?x1443)))
 (let (($x1447 ((_ is stack ) ?x1113)))
 (let (($x1448 (= c__________ right-to-center)))
 (let (($x1449 (and $x1448 $x1447)))
 (let (($x1450 (= c__________ right-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1299 (center s__________)))
 (let ((?x1440 (top ?x1299)))
 (let ((?x1442 (stack ?x1440 ?x1113)))
 (let (($x1469 (= ?x1251 ?x1442)))
 (let (($x1452 ((_ is stack ) ?x1299)))
 (let (($x1453 (= c__________ center-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let (($x1455 (= c__________ center-to-left)))
 (let (($x1456 (and $x1455 $x1452)))
 (let ((?x1079 (left s__________)))
 (let (($x1457 ((_ is stack ) ?x1079)))
 (let (($x1458 (= c__________ left-to-right)))
 (let (($x1459 (and $x1458 $x1457)))
 (let (($x1490 (ite $x1459 $x1473 (ite $x1456 $x1473 (ite $x1454 $x1469 (ite $x1451 $x1470 (ite $x1449 $x1470 $x1473)))))))
 (let ((?x1297 (top ?x1079)))
 (let ((?x1436 (stack ?x1297 ?x1113)))
 (let (($x1465 (= ?x1251 ?x1436)))
 (let (($x1460 (= c__________ left-to-center)))
 (let (($x1461 (and $x1460 $x1457)))
 (ite $x1461 $x1465 $x1490)))))))))))))))))))))))))))))))
(assert
 (let ((?x1299 (center s__________)))
 (let ((?x1437 (center s___________)))
 (let (($x1475 (= ?x1437 ?x1299)))
 (let ((?x1113 (right s__________)))
 (let ((?x1444 (top ?x1113)))
 (let ((?x1446 (stack ?x1444 ?x1299)))
 (let (($x1472 (= ?x1437 ?x1446)))
 (let (($x1447 ((_ is stack ) ?x1113)))
 (let (($x1448 (= c__________ right-to-center)))
 (let (($x1449 (and $x1448 $x1447)))
 (let (($x1450 (= c__________ right-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1439 (rest ?x1299)))
 (let (($x1467 (= ?x1437 ?x1439)))
 (let (($x1452 ((_ is stack ) ?x1299)))
 (let (($x1453 (= c__________ center-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let (($x1455 (= c__________ center-to-left)))
 (let (($x1456 (and $x1455 $x1452)))
 (let ((?x1079 (left s__________)))
 (let ((?x1297 (top ?x1079)))
 (let ((?x1438 (stack ?x1297 ?x1299)))
 (let (($x1466 (= ?x1437 ?x1438)))
 (let (($x1457 ((_ is stack ) ?x1079)))
 (let (($x1458 (= c__________ left-to-right)))
 (let (($x1459 (and $x1458 $x1457)))
 (let (($x1489 (ite $x1459 $x1466 (ite $x1456 $x1467 (ite $x1454 $x1467 (ite $x1451 $x1475 (ite $x1449 $x1472 $x1475)))))))
 (let (($x1460 (= c__________ left-to-center)))
 (let (($x1461 (and $x1460 $x1457)))
 (ite $x1461 $x1475 $x1489)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1217 (left s___________)))
 (let ((?x1355 (left s____________)))
 (let (($x1615 (= ?x1355 ?x1217)))
 (let ((?x1251 (right s___________)))
 (let ((?x1582 (top ?x1251)))
 (let ((?x1583 (stack ?x1582 ?x1217)))
 (let (($x1609 (= ?x1355 ?x1583)))
 (let (($x1585 ((_ is stack ) ?x1251)))
 (let (($x1588 (= c___________ right-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1437 (center s___________)))
 (let (($x1590 ((_ is stack ) ?x1437)))
 (let (($x1591 (= c___________ center-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let ((?x1578 (top ?x1437)))
 (let ((?x1579 (stack ?x1578 ?x1217)))
 (let (($x1606 (= ?x1355 ?x1579)))
 (let (($x1593 (= c___________ center-to-left)))
 (let (($x1594 (and $x1593 $x1590)))
 (let ((?x1388 (rest ?x1217)))
 (let (($x1602 (= ?x1355 ?x1388)))
 (let (($x1595 ((_ is stack ) ?x1217)))
 (let (($x1596 (= c___________ left-to-right)))
 (let (($x1597 (and $x1596 $x1595)))
 (let (($x1598 (= c___________ left-to-center)))
 (let (($x1599 (and $x1598 $x1595)))
 (ite $x1599 $x1602 (ite $x1597 $x1602 (ite $x1594 $x1606 (ite $x1592 $x1615 (ite $x1589 $x1609 $x1615))))))))))))))))))))))))))))))))
(assert
 (let ((?x1251 (right s___________)))
 (let ((?x1389 (right s____________)))
 (let (($x1611 (= ?x1389 ?x1251)))
 (let ((?x1581 (rest ?x1251)))
 (let (($x1608 (= ?x1389 ?x1581)))
 (let (($x1585 ((_ is stack ) ?x1251)))
 (let (($x1586 (= c___________ right-to-center)))
 (let (($x1587 (and $x1586 $x1585)))
 (let (($x1588 (= c___________ right-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1437 (center s___________)))
 (let ((?x1578 (top ?x1437)))
 (let ((?x1580 (stack ?x1578 ?x1251)))
 (let (($x1607 (= ?x1389 ?x1580)))
 (let (($x1590 ((_ is stack ) ?x1437)))
 (let (($x1591 (= c___________ center-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let (($x1593 (= c___________ center-to-left)))
 (let (($x1594 (and $x1593 $x1590)))
 (let ((?x1217 (left s___________)))
 (let (($x1595 ((_ is stack ) ?x1217)))
 (let (($x1596 (= c___________ left-to-right)))
 (let (($x1597 (and $x1596 $x1595)))
 (let (($x1628 (ite $x1597 $x1611 (ite $x1594 $x1611 (ite $x1592 $x1607 (ite $x1589 $x1608 (ite $x1587 $x1608 $x1611)))))))
 (let ((?x1435 (top ?x1217)))
 (let ((?x1574 (stack ?x1435 ?x1251)))
 (let (($x1603 (= ?x1389 ?x1574)))
 (let (($x1598 (= c___________ left-to-center)))
 (let (($x1599 (and $x1598 $x1595)))
 (ite $x1599 $x1603 $x1628)))))))))))))))))))))))))))))))
(assert
 (let ((?x1437 (center s___________)))
 (let ((?x1575 (center s____________)))
 (let (($x1613 (= ?x1575 ?x1437)))
 (let ((?x1251 (right s___________)))
 (let ((?x1582 (top ?x1251)))
 (let ((?x1584 (stack ?x1582 ?x1437)))
 (let (($x1610 (= ?x1575 ?x1584)))
 (let (($x1585 ((_ is stack ) ?x1251)))
 (let (($x1586 (= c___________ right-to-center)))
 (let (($x1587 (and $x1586 $x1585)))
 (let (($x1588 (= c___________ right-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1577 (rest ?x1437)))
 (let (($x1605 (= ?x1575 ?x1577)))
 (let (($x1590 ((_ is stack ) ?x1437)))
 (let (($x1591 (= c___________ center-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let (($x1593 (= c___________ center-to-left)))
 (let (($x1594 (and $x1593 $x1590)))
 (let ((?x1217 (left s___________)))
 (let ((?x1435 (top ?x1217)))
 (let ((?x1576 (stack ?x1435 ?x1437)))
 (let (($x1604 (= ?x1575 ?x1576)))
 (let (($x1595 ((_ is stack ) ?x1217)))
 (let (($x1596 (= c___________ left-to-right)))
 (let (($x1597 (and $x1596 $x1595)))
 (let (($x1627 (ite $x1597 $x1604 (ite $x1594 $x1605 (ite $x1592 $x1605 (ite $x1589 $x1613 (ite $x1587 $x1610 $x1613)))))))
 (let (($x1598 (= c___________ left-to-center)))
 (let (($x1599 (and $x1598 $x1595)))
 (ite $x1599 $x1613 $x1627)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1355 (left s____________)))
 (let ((?x1493 (left s_____________)))
 (let (($x1753 (= ?x1493 ?x1355)))
 (let ((?x1389 (right s____________)))
 (let ((?x1720 (top ?x1389)))
 (let ((?x1721 (stack ?x1720 ?x1355)))
 (let (($x1747 (= ?x1493 ?x1721)))
 (let (($x1723 ((_ is stack ) ?x1389)))
 (let (($x1726 (= c____________ right-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1575 (center s____________)))
 (let (($x1728 ((_ is stack ) ?x1575)))
 (let (($x1729 (= c____________ center-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let ((?x1716 (top ?x1575)))
 (let ((?x1717 (stack ?x1716 ?x1355)))
 (let (($x1744 (= ?x1493 ?x1717)))
 (let (($x1731 (= c____________ center-to-left)))
 (let (($x1732 (and $x1731 $x1728)))
 (let ((?x1526 (rest ?x1355)))
 (let (($x1740 (= ?x1493 ?x1526)))
 (let (($x1733 ((_ is stack ) ?x1355)))
 (let (($x1734 (= c____________ left-to-right)))
 (let (($x1735 (and $x1734 $x1733)))
 (let (($x1736 (= c____________ left-to-center)))
 (let (($x1737 (and $x1736 $x1733)))
 (ite $x1737 $x1740 (ite $x1735 $x1740 (ite $x1732 $x1744 (ite $x1730 $x1753 (ite $x1727 $x1747 $x1753))))))))))))))))))))))))))))))))
(assert
 (let ((?x1389 (right s____________)))
 (let ((?x1527 (right s_____________)))
 (let (($x1749 (= ?x1527 ?x1389)))
 (let ((?x1719 (rest ?x1389)))
 (let (($x1746 (= ?x1527 ?x1719)))
 (let (($x1723 ((_ is stack ) ?x1389)))
 (let (($x1724 (= c____________ right-to-center)))
 (let (($x1725 (and $x1724 $x1723)))
 (let (($x1726 (= c____________ right-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1575 (center s____________)))
 (let ((?x1716 (top ?x1575)))
 (let ((?x1718 (stack ?x1716 ?x1389)))
 (let (($x1745 (= ?x1527 ?x1718)))
 (let (($x1728 ((_ is stack ) ?x1575)))
 (let (($x1729 (= c____________ center-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let (($x1731 (= c____________ center-to-left)))
 (let (($x1732 (and $x1731 $x1728)))
 (let ((?x1355 (left s____________)))
 (let (($x1733 ((_ is stack ) ?x1355)))
 (let (($x1734 (= c____________ left-to-right)))
 (let (($x1735 (and $x1734 $x1733)))
 (let (($x1766 (ite $x1735 $x1749 (ite $x1732 $x1749 (ite $x1730 $x1745 (ite $x1727 $x1746 (ite $x1725 $x1746 $x1749)))))))
 (let ((?x1573 (top ?x1355)))
 (let ((?x1712 (stack ?x1573 ?x1389)))
 (let (($x1741 (= ?x1527 ?x1712)))
 (let (($x1736 (= c____________ left-to-center)))
 (let (($x1737 (and $x1736 $x1733)))
 (ite $x1737 $x1741 $x1766)))))))))))))))))))))))))))))))
(assert
 (let ((?x1575 (center s____________)))
 (let ((?x1713 (center s_____________)))
 (let (($x1751 (= ?x1713 ?x1575)))
 (let ((?x1389 (right s____________)))
 (let ((?x1720 (top ?x1389)))
 (let ((?x1722 (stack ?x1720 ?x1575)))
 (let (($x1748 (= ?x1713 ?x1722)))
 (let (($x1723 ((_ is stack ) ?x1389)))
 (let (($x1724 (= c____________ right-to-center)))
 (let (($x1725 (and $x1724 $x1723)))
 (let (($x1726 (= c____________ right-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1715 (rest ?x1575)))
 (let (($x1743 (= ?x1713 ?x1715)))
 (let (($x1728 ((_ is stack ) ?x1575)))
 (let (($x1729 (= c____________ center-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let (($x1731 (= c____________ center-to-left)))
 (let (($x1732 (and $x1731 $x1728)))
 (let ((?x1355 (left s____________)))
 (let ((?x1573 (top ?x1355)))
 (let ((?x1714 (stack ?x1573 ?x1575)))
 (let (($x1742 (= ?x1713 ?x1714)))
 (let (($x1733 ((_ is stack ) ?x1355)))
 (let (($x1734 (= c____________ left-to-right)))
 (let (($x1735 (and $x1734 $x1733)))
 (let (($x1765 (ite $x1735 $x1742 (ite $x1732 $x1743 (ite $x1730 $x1743 (ite $x1727 $x1751 (ite $x1725 $x1748 $x1751)))))))
 (let (($x1736 (= c____________ left-to-center)))
 (let (($x1737 (and $x1736 $x1733)))
 (ite $x1737 $x1751 $x1765)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1493 (left s_____________)))
 (let ((?x1631 (left s______________)))
 (let (($x1891 (= ?x1631 ?x1493)))
 (let ((?x1527 (right s_____________)))
 (let ((?x1858 (top ?x1527)))
 (let ((?x1859 (stack ?x1858 ?x1493)))
 (let (($x1885 (= ?x1631 ?x1859)))
 (let (($x1861 ((_ is stack ) ?x1527)))
 (let (($x1864 (= c_____________ right-to-left)))
 (let (($x1865 (and $x1864 $x1861)))
 (let ((?x1713 (center s_____________)))
 (let (($x1866 ((_ is stack ) ?x1713)))
 (let (($x1867 (= c_____________ center-to-right)))
 (let (($x1868 (and $x1867 $x1866)))
 (let ((?x1854 (top ?x1713)))
 (let ((?x1855 (stack ?x1854 ?x1493)))
 (let (($x1882 (= ?x1631 ?x1855)))
 (let (($x1869 (= c_____________ center-to-left)))
 (let (($x1870 (and $x1869 $x1866)))
 (let ((?x1664 (rest ?x1493)))
 (let (($x1878 (= ?x1631 ?x1664)))
 (let (($x1871 ((_ is stack ) ?x1493)))
 (let (($x1872 (= c_____________ left-to-right)))
 (let (($x1873 (and $x1872 $x1871)))
 (let (($x1874 (= c_____________ left-to-center)))
 (let (($x1875 (and $x1874 $x1871)))
 (ite $x1875 $x1878 (ite $x1873 $x1878 (ite $x1870 $x1882 (ite $x1868 $x1891 (ite $x1865 $x1885 $x1891))))))))))))))))))))))))))))))))
(assert
 (let ((?x1527 (right s_____________)))
 (let ((?x1665 (right s______________)))
 (let (($x1887 (= ?x1665 ?x1527)))
 (let ((?x1857 (rest ?x1527)))
 (let (($x1884 (= ?x1665 ?x1857)))
 (let (($x1861 ((_ is stack ) ?x1527)))
 (let (($x1862 (= c_____________ right-to-center)))
 (let (($x1863 (and $x1862 $x1861)))
 (let (($x1864 (= c_____________ right-to-left)))
 (let (($x1865 (and $x1864 $x1861)))
 (let ((?x1713 (center s_____________)))
 (let ((?x1854 (top ?x1713)))
 (let ((?x1856 (stack ?x1854 ?x1527)))
 (let (($x1883 (= ?x1665 ?x1856)))
 (let (($x1866 ((_ is stack ) ?x1713)))
 (let (($x1867 (= c_____________ center-to-right)))
 (let (($x1868 (and $x1867 $x1866)))
 (let (($x1869 (= c_____________ center-to-left)))
 (let (($x1870 (and $x1869 $x1866)))
 (let ((?x1493 (left s_____________)))
 (let (($x1871 ((_ is stack ) ?x1493)))
 (let (($x1872 (= c_____________ left-to-right)))
 (let (($x1873 (and $x1872 $x1871)))
 (let (($x1904 (ite $x1873 $x1887 (ite $x1870 $x1887 (ite $x1868 $x1883 (ite $x1865 $x1884 (ite $x1863 $x1884 $x1887)))))))
 (let ((?x1711 (top ?x1493)))
 (let ((?x1850 (stack ?x1711 ?x1527)))
 (let (($x1879 (= ?x1665 ?x1850)))
 (let (($x1874 (= c_____________ left-to-center)))
 (let (($x1875 (and $x1874 $x1871)))
 (ite $x1875 $x1879 $x1904)))))))))))))))))))))))))))))))
(assert
 (let ((?x1713 (center s_____________)))
 (let ((?x1851 (center s______________)))
 (let (($x1889 (= ?x1851 ?x1713)))
 (let ((?x1527 (right s_____________)))
 (let ((?x1858 (top ?x1527)))
 (let ((?x1860 (stack ?x1858 ?x1713)))
 (let (($x1886 (= ?x1851 ?x1860)))
 (let (($x1861 ((_ is stack ) ?x1527)))
 (let (($x1862 (= c_____________ right-to-center)))
 (let (($x1863 (and $x1862 $x1861)))
 (let (($x1864 (= c_____________ right-to-left)))
 (let (($x1865 (and $x1864 $x1861)))
 (let ((?x1853 (rest ?x1713)))
 (let (($x1881 (= ?x1851 ?x1853)))
 (let (($x1866 ((_ is stack ) ?x1713)))
 (let (($x1867 (= c_____________ center-to-right)))
 (let (($x1868 (and $x1867 $x1866)))
 (let (($x1869 (= c_____________ center-to-left)))
 (let (($x1870 (and $x1869 $x1866)))
 (let ((?x1493 (left s_____________)))
 (let ((?x1711 (top ?x1493)))
 (let ((?x1852 (stack ?x1711 ?x1713)))
 (let (($x1880 (= ?x1851 ?x1852)))
 (let (($x1871 ((_ is stack ) ?x1493)))
 (let (($x1872 (= c_____________ left-to-right)))
 (let (($x1873 (and $x1872 $x1871)))
 (let (($x1903 (ite $x1873 $x1880 (ite $x1870 $x1881 (ite $x1868 $x1881 (ite $x1865 $x1889 (ite $x1863 $x1886 $x1889)))))))
 (let (($x1874 (= c_____________ left-to-center)))
 (let (($x1875 (and $x1874 $x1871)))
 (ite $x1875 $x1889 $x1903)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1631 (left s______________)))
 (let ((?x1769 (left s_______________)))
 (let (($x2029 (= ?x1769 ?x1631)))
 (let ((?x1665 (right s______________)))
 (let ((?x1996 (top ?x1665)))
 (let ((?x1997 (stack ?x1996 ?x1631)))
 (let (($x2023 (= ?x1769 ?x1997)))
 (let (($x1999 ((_ is stack ) ?x1665)))
 (let (($x2002 (= c______________ right-to-left)))
 (let (($x2003 (and $x2002 $x1999)))
 (let ((?x1851 (center s______________)))
 (let (($x2004 ((_ is stack ) ?x1851)))
 (let (($x2005 (= c______________ center-to-right)))
 (let (($x2006 (and $x2005 $x2004)))
 (let ((?x1992 (top ?x1851)))
 (let ((?x1993 (stack ?x1992 ?x1631)))
 (let (($x2020 (= ?x1769 ?x1993)))
 (let (($x2007 (= c______________ center-to-left)))
 (let (($x2008 (and $x2007 $x2004)))
 (let ((?x1802 (rest ?x1631)))
 (let (($x2016 (= ?x1769 ?x1802)))
 (let (($x2009 ((_ is stack ) ?x1631)))
 (let (($x2010 (= c______________ left-to-right)))
 (let (($x2011 (and $x2010 $x2009)))
 (let (($x2012 (= c______________ left-to-center)))
 (let (($x2013 (and $x2012 $x2009)))
 (ite $x2013 $x2016 (ite $x2011 $x2016 (ite $x2008 $x2020 (ite $x2006 $x2029 (ite $x2003 $x2023 $x2029))))))))))))))))))))))))))))))))
(assert
 (let ((?x1665 (right s______________)))
 (let ((?x1803 (right s_______________)))
 (let (($x2025 (= ?x1803 ?x1665)))
 (let ((?x1995 (rest ?x1665)))
 (let (($x2022 (= ?x1803 ?x1995)))
 (let (($x1999 ((_ is stack ) ?x1665)))
 (let (($x2000 (= c______________ right-to-center)))
 (let (($x2001 (and $x2000 $x1999)))
 (let (($x2002 (= c______________ right-to-left)))
 (let (($x2003 (and $x2002 $x1999)))
 (let ((?x1851 (center s______________)))
 (let ((?x1992 (top ?x1851)))
 (let ((?x1994 (stack ?x1992 ?x1665)))
 (let (($x2021 (= ?x1803 ?x1994)))
 (let (($x2004 ((_ is stack ) ?x1851)))
 (let (($x2005 (= c______________ center-to-right)))
 (let (($x2006 (and $x2005 $x2004)))
 (let (($x2007 (= c______________ center-to-left)))
 (let (($x2008 (and $x2007 $x2004)))
 (let ((?x1631 (left s______________)))
 (let (($x2009 ((_ is stack ) ?x1631)))
 (let (($x2010 (= c______________ left-to-right)))
 (let (($x2011 (and $x2010 $x2009)))
 (let (($x2042 (ite $x2011 $x2025 (ite $x2008 $x2025 (ite $x2006 $x2021 (ite $x2003 $x2022 (ite $x2001 $x2022 $x2025)))))))
 (let ((?x1849 (top ?x1631)))
 (let ((?x1988 (stack ?x1849 ?x1665)))
 (let (($x2017 (= ?x1803 ?x1988)))
 (let (($x2012 (= c______________ left-to-center)))
 (let (($x2013 (and $x2012 $x2009)))
 (ite $x2013 $x2017 $x2042)))))))))))))))))))))))))))))))
(assert
 (let ((?x1851 (center s______________)))
 (let ((?x1989 (center s_______________)))
 (let (($x2027 (= ?x1989 ?x1851)))
 (let ((?x1665 (right s______________)))
 (let ((?x1996 (top ?x1665)))
 (let ((?x1998 (stack ?x1996 ?x1851)))
 (let (($x2024 (= ?x1989 ?x1998)))
 (let (($x1999 ((_ is stack ) ?x1665)))
 (let (($x2000 (= c______________ right-to-center)))
 (let (($x2001 (and $x2000 $x1999)))
 (let (($x2002 (= c______________ right-to-left)))
 (let (($x2003 (and $x2002 $x1999)))
 (let ((?x1991 (rest ?x1851)))
 (let (($x2019 (= ?x1989 ?x1991)))
 (let (($x2004 ((_ is stack ) ?x1851)))
 (let (($x2005 (= c______________ center-to-right)))
 (let (($x2006 (and $x2005 $x2004)))
 (let (($x2007 (= c______________ center-to-left)))
 (let (($x2008 (and $x2007 $x2004)))
 (let ((?x1631 (left s______________)))
 (let ((?x1849 (top ?x1631)))
 (let ((?x1990 (stack ?x1849 ?x1851)))
 (let (($x2018 (= ?x1989 ?x1990)))
 (let (($x2009 ((_ is stack ) ?x1631)))
 (let (($x2010 (= c______________ left-to-right)))
 (let (($x2011 (and $x2010 $x2009)))
 (let (($x2041 (ite $x2011 $x2018 (ite $x2008 $x2019 (ite $x2006 $x2019 (ite $x2003 $x2027 (ite $x2001 $x2024 $x2027)))))))
 (let (($x2012 (= c______________ left-to-center)))
 (let (($x2013 (and $x2012 $x2009)))
 (ite $x2013 $x2027 $x2041)))))))))))))))))))))))))))))))
(assert
 (let ((?x1803 (right s_______________)))
 (let (($x2045 (= ?x1803 empty)))
 (let ((?x28 (stack E empty)))
 (let ((?x1989 (center s_______________)))
 (let (($x2076 (= ?x1989 ?x28)))
 (let ((?x35 (stack I (stack C (stack F (stack B (stack D (stack G empty))))))))
 (let ((?x37 (stack H (stack A ?x35))))
 (let ((?x1769 (left s_______________)))
 (let (($x2077 (= ?x1769 ?x37)))
 (let (($x2079 (not (and $x2077 $x2076 $x2045))))
 (not $x2079))))))))))))
(check-sat)
(exit)
