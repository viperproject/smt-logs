(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x126 (left s_tmp_)))
 (= ?x126 empty)))
(assert
 (let ((?x36 (stack F empty)))
 (let ((?x35 (stack E ?x36)))
 (let ((?x37 (stack I ?x35)))
 (let ((?x38 (stack R ?x37)))
 (let ((?x39 (stack O ?x38)))
 (let ((?x40 (stack Q ?x39)))
 (let ((?x41 (stack G ?x40)))
 (let ((?x42 (stack U ?x41)))
 (let ((?x43 (stack D ?x42)))
 (let ((?x44 (stack K ?x43)))
 (let ((?x45 (stack H ?x44)))
 (let ((?x46 (stack T ?x45)))
 (let ((?x47 (stack L ?x46)))
 (let ((?x48 (stack M ?x47)))
 (let ((?x49 (stack B ?x48)))
 (let ((?x50 (stack V ?x49)))
 (let ((?x51 (stack C ?x50)))
 (let ((?x52 (stack W ?x51)))
 (let ((?x129 (center s_tmp__)))
 (= ?x129 ?x52)))))))))))))))))))))
(assert
 (let ((?x53 (stack A empty)))
 (let ((?x54 (stack J ?x53)))
 (let ((?x55 (stack N ?x54)))
 (let ((?x56 (stack P ?x55)))
 (let ((?x57 (stack S ?x56)))
 (let ((?x132 (right s_tmp___)))
 (= ?x132 ?x57))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x159 (left s_tmp__)))
 (= (left s_tmp___) ?x159)))
(assert
 (let ((?x129 (center s_tmp__)))
 (= (center s_tmp___) ?x129)))
(assert
 (let ((?x163 (center s_tmp_)))
 (= ?x163 (center s_tmp))))
(assert
 (let ((?x166 (right s_tmp_)))
 (= ?x166 (right s_tmp))))
(assert
 (let ((?x126 (left s_tmp_)))
 (let ((?x159 (left s_tmp__)))
 (= ?x159 ?x126))))
(assert
 (let ((?x166 (right s_tmp_)))
 (let ((?x170 (right s_tmp__)))
 (= ?x170 ?x166))))
(assert
 (= c__ c!1))
(assert
 (let ((?x103 (left s_)))
 (let ((?x289 (left s__)))
 (let (($x328 (= ?x289 ?x103)))
 (let ((?x106 (right s_)))
 (let (($x298 ((_ is stack ) ?x106)))
 (let (($x301 (= c_ right-to-left)))
 (let (($x302 (and $x301 $x298)))
 (let ((?x108 (center s_)))
 (let (($x303 ((_ is stack ) ?x108)))
 (let (($x304 (= c_ center-to-right)))
 (let (($x305 (and $x304 $x303)))
 (let (($x306 (= c_ center-to-left)))
 (let (($x307 (and $x306 $x303)))
 (let (($x337 (ite $x307 (= ?x289 (stack (top ?x108) ?x103)) (ite $x305 $x328 (ite $x302 (= ?x289 (stack (top ?x106) ?x103)) $x328)))))
 (let (($x315 (= ?x289 (rest ?x103))))
 (let (($x308 ((_ is stack ) ?x103)))
 (let (($x310 (and (= c_ left-to-right) $x308)))
 (let (($x312 (and (= c_ left-to-center) $x308)))
 (ite $x312 $x315 (ite $x310 $x315 $x337)))))))))))))))))))))
(assert
 (let ((?x106 (right s_)))
 (let ((?x282 (right s__)))
 (let (($x324 (= ?x282 ?x106)))
 (let (($x321 (= ?x282 (rest ?x106))))
 (let (($x298 ((_ is stack ) ?x106)))
 (let (($x299 (= c_ right-to-center)))
 (let (($x300 (and $x299 $x298)))
 (let (($x301 (= c_ right-to-left)))
 (let (($x302 (and $x301 $x298)))
 (let ((?x108 (center s_)))
 (let (($x303 ((_ is stack ) ?x108)))
 (let (($x304 (= c_ center-to-right)))
 (let (($x305 (and $x304 $x303)))
 (let (($x334 (ite $x305 (= ?x282 (stack (top ?x108) ?x106)) (ite $x302 $x321 (ite $x300 $x321 $x324)))))
 (let (($x306 (= c_ center-to-left)))
 (let (($x307 (and $x306 $x303)))
 (let ((?x103 (left s_)))
 (let (($x308 ((_ is stack ) ?x103)))
 (let (($x310 (and (= c_ left-to-right) $x308)))
 (let (($x312 (and (= c_ left-to-center) $x308)))
 (ite $x312 (= ?x282 (stack (top ?x103) ?x106)) (ite $x310 $x324 (ite $x307 $x324 $x334))))))))))))))))))))))))
(assert
 (let ((?x108 (center s_)))
 (let ((?x291 (center s__)))
 (let (($x326 (= ?x291 ?x108)))
 (let ((?x106 (right s_)))
 (let (($x298 ((_ is stack ) ?x106)))
 (let (($x299 (= c_ right-to-center)))
 (let (($x300 (and $x299 $x298)))
 (let (($x301 (= c_ right-to-left)))
 (let (($x302 (and $x301 $x298)))
 (let (($x318 (= ?x291 (rest ?x108))))
 (let (($x303 ((_ is stack ) ?x108)))
 (let (($x304 (= c_ center-to-right)))
 (let (($x305 (and $x304 $x303)))
 (let (($x333 (ite $x305 $x318 (ite $x302 $x326 (ite $x300 (= ?x291 (stack (top ?x106) ?x108)) $x326)))))
 (let (($x306 (= c_ center-to-left)))
 (let (($x307 (and $x306 $x303)))
 (let ((?x103 (left s_)))
 (let (($x308 ((_ is stack ) ?x103)))
 (let (($x310 (and (= c_ left-to-right) $x308)))
 (let (($x312 (and (= c_ left-to-center) $x308)))
 (ite $x312 $x326 (ite $x310 (= ?x291 (stack (top ?x103) ?x108)) (ite $x307 $x318 $x333))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x289 (left s__)))
 (let ((?x173 (left s___)))
 (let (($x440 (= ?x173 ?x289)))
 (let ((?x282 (right s__)))
 (let ((?x407 (top ?x282)))
 (let ((?x408 (stack ?x407 ?x289)))
 (let (($x434 (= ?x173 ?x408)))
 (let (($x410 ((_ is stack ) ?x282)))
 (let (($x413 (= c__ right-to-left)))
 (let (($x414 (and $x413 $x410)))
 (let ((?x291 (center s__)))
 (let (($x415 ((_ is stack ) ?x291)))
 (let (($x416 (= c__ center-to-right)))
 (let (($x417 (and $x416 $x415)))
 (let ((?x403 (top ?x291)))
 (let ((?x404 (stack ?x403 ?x289)))
 (let (($x431 (= ?x173 ?x404)))
 (let (($x418 (= c__ center-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x175 (rest ?x289)))
 (let (($x427 (= ?x173 ?x175)))
 (let (($x420 ((_ is stack ) ?x289)))
 (let (($x421 (= c__ left-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let (($x423 (= c__ left-to-center)))
 (let (($x424 (and $x423 $x420)))
 (ite $x424 $x427 (ite $x422 $x427 (ite $x419 $x431 (ite $x417 $x440 (ite $x414 $x434 $x440))))))))))))))))))))))))))))))))
(assert
 (let ((?x282 (right s__)))
 (let ((?x176 (right s___)))
 (let (($x436 (= ?x176 ?x282)))
 (let ((?x406 (rest ?x282)))
 (let (($x433 (= ?x176 ?x406)))
 (let (($x410 ((_ is stack ) ?x282)))
 (let (($x411 (= c__ right-to-center)))
 (let (($x412 (and $x411 $x410)))
 (let (($x413 (= c__ right-to-left)))
 (let (($x414 (and $x413 $x410)))
 (let ((?x291 (center s__)))
 (let ((?x403 (top ?x291)))
 (let ((?x405 (stack ?x403 ?x282)))
 (let (($x432 (= ?x176 ?x405)))
 (let (($x415 ((_ is stack ) ?x291)))
 (let (($x416 (= c__ center-to-right)))
 (let (($x417 (and $x416 $x415)))
 (let (($x418 (= c__ center-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x289 (left s__)))
 (let (($x420 ((_ is stack ) ?x289)))
 (let (($x421 (= c__ left-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let (($x453 (ite $x422 $x436 (ite $x419 $x436 (ite $x417 $x432 (ite $x414 $x433 (ite $x412 $x433 $x436)))))))
 (let ((?x280 (top ?x289)))
 (let ((?x399 (stack ?x280 ?x282)))
 (let (($x428 (= ?x176 ?x399)))
 (let (($x423 (= c__ left-to-center)))
 (let (($x424 (and $x423 $x420)))
 (ite $x424 $x428 $x453)))))))))))))))))))))))))))))))
(assert
 (let ((?x291 (center s__)))
 (let ((?x400 (center s___)))
 (let (($x438 (= ?x400 ?x291)))
 (let ((?x282 (right s__)))
 (let ((?x407 (top ?x282)))
 (let ((?x409 (stack ?x407 ?x291)))
 (let (($x435 (= ?x400 ?x409)))
 (let (($x410 ((_ is stack ) ?x282)))
 (let (($x411 (= c__ right-to-center)))
 (let (($x412 (and $x411 $x410)))
 (let (($x413 (= c__ right-to-left)))
 (let (($x414 (and $x413 $x410)))
 (let ((?x402 (rest ?x291)))
 (let (($x430 (= ?x400 ?x402)))
 (let (($x415 ((_ is stack ) ?x291)))
 (let (($x416 (= c__ center-to-right)))
 (let (($x417 (and $x416 $x415)))
 (let (($x418 (= c__ center-to-left)))
 (let (($x419 (and $x418 $x415)))
 (let ((?x289 (left s__)))
 (let ((?x280 (top ?x289)))
 (let ((?x401 (stack ?x280 ?x291)))
 (let (($x429 (= ?x400 ?x401)))
 (let (($x420 ((_ is stack ) ?x289)))
 (let (($x421 (= c__ left-to-right)))
 (let (($x422 (and $x421 $x420)))
 (let (($x452 (ite $x422 $x429 (ite $x419 $x430 (ite $x417 $x430 (ite $x414 $x438 (ite $x412 $x435 $x438)))))))
 (let (($x423 (= c__ left-to-center)))
 (let (($x424 (and $x423 $x420)))
 (ite $x424 $x438 $x452)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x173 (left s___)))
 (let ((?x344 (left s____)))
 (let (($x578 (= ?x344 ?x173)))
 (let ((?x176 (right s___)))
 (let ((?x545 (top ?x176)))
 (let ((?x546 (stack ?x545 ?x173)))
 (let (($x572 (= ?x344 ?x546)))
 (let (($x548 ((_ is stack ) ?x176)))
 (let (($x551 (= c___ right-to-left)))
 (let (($x552 (and $x551 $x548)))
 (let ((?x400 (center s___)))
 (let (($x553 ((_ is stack ) ?x400)))
 (let (($x554 (= c___ center-to-right)))
 (let (($x555 (and $x554 $x553)))
 (let ((?x541 (top ?x400)))
 (let ((?x542 (stack ?x541 ?x173)))
 (let (($x569 (= ?x344 ?x542)))
 (let (($x556 (= c___ center-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x375 (rest ?x173)))
 (let (($x565 (= ?x344 ?x375)))
 (let (($x558 ((_ is stack ) ?x173)))
 (let (($x559 (= c___ left-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let (($x561 (= c___ left-to-center)))
 (let (($x562 (and $x561 $x558)))
 (ite $x562 $x565 (ite $x560 $x565 (ite $x557 $x569 (ite $x555 $x578 (ite $x552 $x572 $x578))))))))))))))))))))))))))))))))
(assert
 (let ((?x176 (right s___)))
 (let ((?x376 (right s____)))
 (let (($x574 (= ?x376 ?x176)))
 (let ((?x544 (rest ?x176)))
 (let (($x571 (= ?x376 ?x544)))
 (let (($x548 ((_ is stack ) ?x176)))
 (let (($x549 (= c___ right-to-center)))
 (let (($x550 (and $x549 $x548)))
 (let (($x551 (= c___ right-to-left)))
 (let (($x552 (and $x551 $x548)))
 (let ((?x400 (center s___)))
 (let ((?x541 (top ?x400)))
 (let ((?x543 (stack ?x541 ?x176)))
 (let (($x570 (= ?x376 ?x543)))
 (let (($x553 ((_ is stack ) ?x400)))
 (let (($x554 (= c___ center-to-right)))
 (let (($x555 (and $x554 $x553)))
 (let (($x556 (= c___ center-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x173 (left s___)))
 (let (($x558 ((_ is stack ) ?x173)))
 (let (($x559 (= c___ left-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let (($x591 (ite $x560 $x574 (ite $x557 $x574 (ite $x555 $x570 (ite $x552 $x571 (ite $x550 $x571 $x574)))))))
 (let ((?x398 (top ?x173)))
 (let ((?x537 (stack ?x398 ?x176)))
 (let (($x566 (= ?x376 ?x537)))
 (let (($x561 (= c___ left-to-center)))
 (let (($x562 (and $x561 $x558)))
 (ite $x562 $x566 $x591)))))))))))))))))))))))))))))))
(assert
 (let ((?x400 (center s___)))
 (let ((?x538 (center s____)))
 (let (($x576 (= ?x538 ?x400)))
 (let ((?x176 (right s___)))
 (let ((?x545 (top ?x176)))
 (let ((?x547 (stack ?x545 ?x400)))
 (let (($x573 (= ?x538 ?x547)))
 (let (($x548 ((_ is stack ) ?x176)))
 (let (($x549 (= c___ right-to-center)))
 (let (($x550 (and $x549 $x548)))
 (let (($x551 (= c___ right-to-left)))
 (let (($x552 (and $x551 $x548)))
 (let ((?x540 (rest ?x400)))
 (let (($x568 (= ?x538 ?x540)))
 (let (($x553 ((_ is stack ) ?x400)))
 (let (($x554 (= c___ center-to-right)))
 (let (($x555 (and $x554 $x553)))
 (let (($x556 (= c___ center-to-left)))
 (let (($x557 (and $x556 $x553)))
 (let ((?x173 (left s___)))
 (let ((?x398 (top ?x173)))
 (let ((?x539 (stack ?x398 ?x400)))
 (let (($x567 (= ?x538 ?x539)))
 (let (($x558 ((_ is stack ) ?x173)))
 (let (($x559 (= c___ left-to-right)))
 (let (($x560 (and $x559 $x558)))
 (let (($x590 (ite $x560 $x567 (ite $x557 $x568 (ite $x555 $x568 (ite $x552 $x576 (ite $x550 $x573 $x576)))))))
 (let (($x561 (= c___ left-to-center)))
 (let (($x562 (and $x561 $x558)))
 (ite $x562 $x576 $x590)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x344 (left s____)))
 (let ((?x456 (left s_____)))
 (let (($x716 (= ?x456 ?x344)))
 (let ((?x376 (right s____)))
 (let ((?x683 (top ?x376)))
 (let ((?x684 (stack ?x683 ?x344)))
 (let (($x710 (= ?x456 ?x684)))
 (let (($x686 ((_ is stack ) ?x376)))
 (let (($x689 (= c____ right-to-left)))
 (let (($x690 (and $x689 $x686)))
 (let ((?x538 (center s____)))
 (let (($x691 ((_ is stack ) ?x538)))
 (let (($x692 (= c____ center-to-right)))
 (let (($x693 (and $x692 $x691)))
 (let ((?x679 (top ?x538)))
 (let ((?x680 (stack ?x679 ?x344)))
 (let (($x707 (= ?x456 ?x680)))
 (let (($x694 (= c____ center-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x489 (rest ?x344)))
 (let (($x703 (= ?x456 ?x489)))
 (let (($x696 ((_ is stack ) ?x344)))
 (let (($x697 (= c____ left-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let (($x699 (= c____ left-to-center)))
 (let (($x700 (and $x699 $x696)))
 (ite $x700 $x703 (ite $x698 $x703 (ite $x695 $x707 (ite $x693 $x716 (ite $x690 $x710 $x716))))))))))))))))))))))))))))))))
(assert
 (let ((?x376 (right s____)))
 (let ((?x490 (right s_____)))
 (let (($x712 (= ?x490 ?x376)))
 (let ((?x682 (rest ?x376)))
 (let (($x709 (= ?x490 ?x682)))
 (let (($x686 ((_ is stack ) ?x376)))
 (let (($x687 (= c____ right-to-center)))
 (let (($x688 (and $x687 $x686)))
 (let (($x689 (= c____ right-to-left)))
 (let (($x690 (and $x689 $x686)))
 (let ((?x538 (center s____)))
 (let ((?x679 (top ?x538)))
 (let ((?x681 (stack ?x679 ?x376)))
 (let (($x708 (= ?x490 ?x681)))
 (let (($x691 ((_ is stack ) ?x538)))
 (let (($x692 (= c____ center-to-right)))
 (let (($x693 (and $x692 $x691)))
 (let (($x694 (= c____ center-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x344 (left s____)))
 (let (($x696 ((_ is stack ) ?x344)))
 (let (($x697 (= c____ left-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let (($x729 (ite $x698 $x712 (ite $x695 $x712 (ite $x693 $x708 (ite $x690 $x709 (ite $x688 $x709 $x712)))))))
 (let ((?x536 (top ?x344)))
 (let ((?x675 (stack ?x536 ?x376)))
 (let (($x704 (= ?x490 ?x675)))
 (let (($x699 (= c____ left-to-center)))
 (let (($x700 (and $x699 $x696)))
 (ite $x700 $x704 $x729)))))))))))))))))))))))))))))))
(assert
 (let ((?x538 (center s____)))
 (let ((?x676 (center s_____)))
 (let (($x714 (= ?x676 ?x538)))
 (let ((?x376 (right s____)))
 (let ((?x683 (top ?x376)))
 (let ((?x685 (stack ?x683 ?x538)))
 (let (($x711 (= ?x676 ?x685)))
 (let (($x686 ((_ is stack ) ?x376)))
 (let (($x687 (= c____ right-to-center)))
 (let (($x688 (and $x687 $x686)))
 (let (($x689 (= c____ right-to-left)))
 (let (($x690 (and $x689 $x686)))
 (let ((?x678 (rest ?x538)))
 (let (($x706 (= ?x676 ?x678)))
 (let (($x691 ((_ is stack ) ?x538)))
 (let (($x692 (= c____ center-to-right)))
 (let (($x693 (and $x692 $x691)))
 (let (($x694 (= c____ center-to-left)))
 (let (($x695 (and $x694 $x691)))
 (let ((?x344 (left s____)))
 (let ((?x536 (top ?x344)))
 (let ((?x677 (stack ?x536 ?x538)))
 (let (($x705 (= ?x676 ?x677)))
 (let (($x696 ((_ is stack ) ?x344)))
 (let (($x697 (= c____ left-to-right)))
 (let (($x698 (and $x697 $x696)))
 (let (($x728 (ite $x698 $x705 (ite $x695 $x706 (ite $x693 $x706 (ite $x690 $x714 (ite $x688 $x711 $x714)))))))
 (let (($x699 (= c____ left-to-center)))
 (let (($x700 (and $x699 $x696)))
 (ite $x700 $x714 $x728)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x456 (left s_____)))
 (let ((?x594 (left s______)))
 (let (($x854 (= ?x594 ?x456)))
 (let ((?x490 (right s_____)))
 (let ((?x821 (top ?x490)))
 (let ((?x822 (stack ?x821 ?x456)))
 (let (($x848 (= ?x594 ?x822)))
 (let (($x824 ((_ is stack ) ?x490)))
 (let (($x827 (= c_____ right-to-left)))
 (let (($x828 (and $x827 $x824)))
 (let ((?x676 (center s_____)))
 (let (($x829 ((_ is stack ) ?x676)))
 (let (($x830 (= c_____ center-to-right)))
 (let (($x831 (and $x830 $x829)))
 (let ((?x817 (top ?x676)))
 (let ((?x818 (stack ?x817 ?x456)))
 (let (($x845 (= ?x594 ?x818)))
 (let (($x832 (= c_____ center-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x627 (rest ?x456)))
 (let (($x841 (= ?x594 ?x627)))
 (let (($x834 ((_ is stack ) ?x456)))
 (let (($x835 (= c_____ left-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let (($x837 (= c_____ left-to-center)))
 (let (($x838 (and $x837 $x834)))
 (ite $x838 $x841 (ite $x836 $x841 (ite $x833 $x845 (ite $x831 $x854 (ite $x828 $x848 $x854))))))))))))))))))))))))))))))))
(assert
 (let ((?x490 (right s_____)))
 (let ((?x628 (right s______)))
 (let (($x850 (= ?x628 ?x490)))
 (let ((?x820 (rest ?x490)))
 (let (($x847 (= ?x628 ?x820)))
 (let (($x824 ((_ is stack ) ?x490)))
 (let (($x825 (= c_____ right-to-center)))
 (let (($x826 (and $x825 $x824)))
 (let (($x827 (= c_____ right-to-left)))
 (let (($x828 (and $x827 $x824)))
 (let ((?x676 (center s_____)))
 (let ((?x817 (top ?x676)))
 (let ((?x819 (stack ?x817 ?x490)))
 (let (($x846 (= ?x628 ?x819)))
 (let (($x829 ((_ is stack ) ?x676)))
 (let (($x830 (= c_____ center-to-right)))
 (let (($x831 (and $x830 $x829)))
 (let (($x832 (= c_____ center-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x456 (left s_____)))
 (let (($x834 ((_ is stack ) ?x456)))
 (let (($x835 (= c_____ left-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let (($x867 (ite $x836 $x850 (ite $x833 $x850 (ite $x831 $x846 (ite $x828 $x847 (ite $x826 $x847 $x850)))))))
 (let ((?x674 (top ?x456)))
 (let ((?x813 (stack ?x674 ?x490)))
 (let (($x842 (= ?x628 ?x813)))
 (let (($x837 (= c_____ left-to-center)))
 (let (($x838 (and $x837 $x834)))
 (ite $x838 $x842 $x867)))))))))))))))))))))))))))))))
(assert
 (let ((?x676 (center s_____)))
 (let ((?x814 (center s______)))
 (let (($x852 (= ?x814 ?x676)))
 (let ((?x490 (right s_____)))
 (let ((?x821 (top ?x490)))
 (let ((?x823 (stack ?x821 ?x676)))
 (let (($x849 (= ?x814 ?x823)))
 (let (($x824 ((_ is stack ) ?x490)))
 (let (($x825 (= c_____ right-to-center)))
 (let (($x826 (and $x825 $x824)))
 (let (($x827 (= c_____ right-to-left)))
 (let (($x828 (and $x827 $x824)))
 (let ((?x816 (rest ?x676)))
 (let (($x844 (= ?x814 ?x816)))
 (let (($x829 ((_ is stack ) ?x676)))
 (let (($x830 (= c_____ center-to-right)))
 (let (($x831 (and $x830 $x829)))
 (let (($x832 (= c_____ center-to-left)))
 (let (($x833 (and $x832 $x829)))
 (let ((?x456 (left s_____)))
 (let ((?x674 (top ?x456)))
 (let ((?x815 (stack ?x674 ?x676)))
 (let (($x843 (= ?x814 ?x815)))
 (let (($x834 ((_ is stack ) ?x456)))
 (let (($x835 (= c_____ left-to-right)))
 (let (($x836 (and $x835 $x834)))
 (let (($x866 (ite $x836 $x843 (ite $x833 $x844 (ite $x831 $x844 (ite $x828 $x852 (ite $x826 $x849 $x852)))))))
 (let (($x837 (= c_____ left-to-center)))
 (let (($x838 (and $x837 $x834)))
 (ite $x838 $x852 $x866)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x594 (left s______)))
 (let ((?x732 (left s_______)))
 (let (($x992 (= ?x732 ?x594)))
 (let ((?x628 (right s______)))
 (let ((?x959 (top ?x628)))
 (let ((?x960 (stack ?x959 ?x594)))
 (let (($x986 (= ?x732 ?x960)))
 (let (($x962 ((_ is stack ) ?x628)))
 (let (($x965 (= c______ right-to-left)))
 (let (($x966 (and $x965 $x962)))
 (let ((?x814 (center s______)))
 (let (($x967 ((_ is stack ) ?x814)))
 (let (($x968 (= c______ center-to-right)))
 (let (($x969 (and $x968 $x967)))
 (let ((?x955 (top ?x814)))
 (let ((?x956 (stack ?x955 ?x594)))
 (let (($x983 (= ?x732 ?x956)))
 (let (($x970 (= c______ center-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x765 (rest ?x594)))
 (let (($x979 (= ?x732 ?x765)))
 (let (($x972 ((_ is stack ) ?x594)))
 (let (($x973 (= c______ left-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let (($x975 (= c______ left-to-center)))
 (let (($x976 (and $x975 $x972)))
 (ite $x976 $x979 (ite $x974 $x979 (ite $x971 $x983 (ite $x969 $x992 (ite $x966 $x986 $x992))))))))))))))))))))))))))))))))
(assert
 (let ((?x628 (right s______)))
 (let ((?x766 (right s_______)))
 (let (($x988 (= ?x766 ?x628)))
 (let ((?x958 (rest ?x628)))
 (let (($x985 (= ?x766 ?x958)))
 (let (($x962 ((_ is stack ) ?x628)))
 (let (($x963 (= c______ right-to-center)))
 (let (($x964 (and $x963 $x962)))
 (let (($x965 (= c______ right-to-left)))
 (let (($x966 (and $x965 $x962)))
 (let ((?x814 (center s______)))
 (let ((?x955 (top ?x814)))
 (let ((?x957 (stack ?x955 ?x628)))
 (let (($x984 (= ?x766 ?x957)))
 (let (($x967 ((_ is stack ) ?x814)))
 (let (($x968 (= c______ center-to-right)))
 (let (($x969 (and $x968 $x967)))
 (let (($x970 (= c______ center-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x594 (left s______)))
 (let (($x972 ((_ is stack ) ?x594)))
 (let (($x973 (= c______ left-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let (($x1005 (ite $x974 $x988 (ite $x971 $x988 (ite $x969 $x984 (ite $x966 $x985 (ite $x964 $x985 $x988)))))))
 (let ((?x812 (top ?x594)))
 (let ((?x951 (stack ?x812 ?x628)))
 (let (($x980 (= ?x766 ?x951)))
 (let (($x975 (= c______ left-to-center)))
 (let (($x976 (and $x975 $x972)))
 (ite $x976 $x980 $x1005)))))))))))))))))))))))))))))))
(assert
 (let ((?x814 (center s______)))
 (let ((?x952 (center s_______)))
 (let (($x990 (= ?x952 ?x814)))
 (let ((?x628 (right s______)))
 (let ((?x959 (top ?x628)))
 (let ((?x961 (stack ?x959 ?x814)))
 (let (($x987 (= ?x952 ?x961)))
 (let (($x962 ((_ is stack ) ?x628)))
 (let (($x963 (= c______ right-to-center)))
 (let (($x964 (and $x963 $x962)))
 (let (($x965 (= c______ right-to-left)))
 (let (($x966 (and $x965 $x962)))
 (let ((?x954 (rest ?x814)))
 (let (($x982 (= ?x952 ?x954)))
 (let (($x967 ((_ is stack ) ?x814)))
 (let (($x968 (= c______ center-to-right)))
 (let (($x969 (and $x968 $x967)))
 (let (($x970 (= c______ center-to-left)))
 (let (($x971 (and $x970 $x967)))
 (let ((?x594 (left s______)))
 (let ((?x812 (top ?x594)))
 (let ((?x953 (stack ?x812 ?x814)))
 (let (($x981 (= ?x952 ?x953)))
 (let (($x972 ((_ is stack ) ?x594)))
 (let (($x973 (= c______ left-to-right)))
 (let (($x974 (and $x973 $x972)))
 (let (($x1004 (ite $x974 $x981 (ite $x971 $x982 (ite $x969 $x982 (ite $x966 $x990 (ite $x964 $x987 $x990)))))))
 (let (($x975 (= c______ left-to-center)))
 (let (($x976 (and $x975 $x972)))
 (ite $x976 $x990 $x1004)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x732 (left s_______)))
 (let ((?x870 (left s________)))
 (let (($x1130 (= ?x870 ?x732)))
 (let ((?x766 (right s_______)))
 (let ((?x1097 (top ?x766)))
 (let ((?x1098 (stack ?x1097 ?x732)))
 (let (($x1124 (= ?x870 ?x1098)))
 (let (($x1100 ((_ is stack ) ?x766)))
 (let (($x1103 (= c_______ right-to-left)))
 (let (($x1104 (and $x1103 $x1100)))
 (let ((?x952 (center s_______)))
 (let (($x1105 ((_ is stack ) ?x952)))
 (let (($x1106 (= c_______ center-to-right)))
 (let (($x1107 (and $x1106 $x1105)))
 (let ((?x1093 (top ?x952)))
 (let ((?x1094 (stack ?x1093 ?x732)))
 (let (($x1121 (= ?x870 ?x1094)))
 (let (($x1108 (= c_______ center-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x903 (rest ?x732)))
 (let (($x1117 (= ?x870 ?x903)))
 (let (($x1110 ((_ is stack ) ?x732)))
 (let (($x1111 (= c_______ left-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let (($x1113 (= c_______ left-to-center)))
 (let (($x1114 (and $x1113 $x1110)))
 (ite $x1114 $x1117 (ite $x1112 $x1117 (ite $x1109 $x1121 (ite $x1107 $x1130 (ite $x1104 $x1124 $x1130))))))))))))))))))))))))))))))))
(assert
 (let ((?x766 (right s_______)))
 (let ((?x904 (right s________)))
 (let (($x1126 (= ?x904 ?x766)))
 (let ((?x1096 (rest ?x766)))
 (let (($x1123 (= ?x904 ?x1096)))
 (let (($x1100 ((_ is stack ) ?x766)))
 (let (($x1101 (= c_______ right-to-center)))
 (let (($x1102 (and $x1101 $x1100)))
 (let (($x1103 (= c_______ right-to-left)))
 (let (($x1104 (and $x1103 $x1100)))
 (let ((?x952 (center s_______)))
 (let ((?x1093 (top ?x952)))
 (let ((?x1095 (stack ?x1093 ?x766)))
 (let (($x1122 (= ?x904 ?x1095)))
 (let (($x1105 ((_ is stack ) ?x952)))
 (let (($x1106 (= c_______ center-to-right)))
 (let (($x1107 (and $x1106 $x1105)))
 (let (($x1108 (= c_______ center-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x732 (left s_______)))
 (let (($x1110 ((_ is stack ) ?x732)))
 (let (($x1111 (= c_______ left-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let (($x1143 (ite $x1112 $x1126 (ite $x1109 $x1126 (ite $x1107 $x1122 (ite $x1104 $x1123 (ite $x1102 $x1123 $x1126)))))))
 (let ((?x950 (top ?x732)))
 (let ((?x1089 (stack ?x950 ?x766)))
 (let (($x1118 (= ?x904 ?x1089)))
 (let (($x1113 (= c_______ left-to-center)))
 (let (($x1114 (and $x1113 $x1110)))
 (ite $x1114 $x1118 $x1143)))))))))))))))))))))))))))))))
(assert
 (let ((?x952 (center s_______)))
 (let ((?x1090 (center s________)))
 (let (($x1128 (= ?x1090 ?x952)))
 (let ((?x766 (right s_______)))
 (let ((?x1097 (top ?x766)))
 (let ((?x1099 (stack ?x1097 ?x952)))
 (let (($x1125 (= ?x1090 ?x1099)))
 (let (($x1100 ((_ is stack ) ?x766)))
 (let (($x1101 (= c_______ right-to-center)))
 (let (($x1102 (and $x1101 $x1100)))
 (let (($x1103 (= c_______ right-to-left)))
 (let (($x1104 (and $x1103 $x1100)))
 (let ((?x1092 (rest ?x952)))
 (let (($x1120 (= ?x1090 ?x1092)))
 (let (($x1105 ((_ is stack ) ?x952)))
 (let (($x1106 (= c_______ center-to-right)))
 (let (($x1107 (and $x1106 $x1105)))
 (let (($x1108 (= c_______ center-to-left)))
 (let (($x1109 (and $x1108 $x1105)))
 (let ((?x732 (left s_______)))
 (let ((?x950 (top ?x732)))
 (let ((?x1091 (stack ?x950 ?x952)))
 (let (($x1119 (= ?x1090 ?x1091)))
 (let (($x1110 ((_ is stack ) ?x732)))
 (let (($x1111 (= c_______ left-to-right)))
 (let (($x1112 (and $x1111 $x1110)))
 (let (($x1142 (ite $x1112 $x1119 (ite $x1109 $x1120 (ite $x1107 $x1120 (ite $x1104 $x1128 (ite $x1102 $x1125 $x1128)))))))
 (let (($x1113 (= c_______ left-to-center)))
 (let (($x1114 (and $x1113 $x1110)))
 (ite $x1114 $x1128 $x1142)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x870 (left s________)))
 (let ((?x1008 (left s_________)))
 (let (($x1268 (= ?x1008 ?x870)))
 (let ((?x904 (right s________)))
 (let ((?x1235 (top ?x904)))
 (let ((?x1236 (stack ?x1235 ?x870)))
 (let (($x1262 (= ?x1008 ?x1236)))
 (let (($x1238 ((_ is stack ) ?x904)))
 (let (($x1241 (= c________ right-to-left)))
 (let (($x1242 (and $x1241 $x1238)))
 (let ((?x1090 (center s________)))
 (let (($x1243 ((_ is stack ) ?x1090)))
 (let (($x1244 (= c________ center-to-right)))
 (let (($x1245 (and $x1244 $x1243)))
 (let ((?x1231 (top ?x1090)))
 (let ((?x1232 (stack ?x1231 ?x870)))
 (let (($x1259 (= ?x1008 ?x1232)))
 (let (($x1246 (= c________ center-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x1041 (rest ?x870)))
 (let (($x1255 (= ?x1008 ?x1041)))
 (let (($x1248 ((_ is stack ) ?x870)))
 (let (($x1249 (= c________ left-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let (($x1251 (= c________ left-to-center)))
 (let (($x1252 (and $x1251 $x1248)))
 (ite $x1252 $x1255 (ite $x1250 $x1255 (ite $x1247 $x1259 (ite $x1245 $x1268 (ite $x1242 $x1262 $x1268))))))))))))))))))))))))))))))))
(assert
 (let ((?x904 (right s________)))
 (let ((?x1042 (right s_________)))
 (let (($x1264 (= ?x1042 ?x904)))
 (let ((?x1234 (rest ?x904)))
 (let (($x1261 (= ?x1042 ?x1234)))
 (let (($x1238 ((_ is stack ) ?x904)))
 (let (($x1239 (= c________ right-to-center)))
 (let (($x1240 (and $x1239 $x1238)))
 (let (($x1241 (= c________ right-to-left)))
 (let (($x1242 (and $x1241 $x1238)))
 (let ((?x1090 (center s________)))
 (let ((?x1231 (top ?x1090)))
 (let ((?x1233 (stack ?x1231 ?x904)))
 (let (($x1260 (= ?x1042 ?x1233)))
 (let (($x1243 ((_ is stack ) ?x1090)))
 (let (($x1244 (= c________ center-to-right)))
 (let (($x1245 (and $x1244 $x1243)))
 (let (($x1246 (= c________ center-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x870 (left s________)))
 (let (($x1248 ((_ is stack ) ?x870)))
 (let (($x1249 (= c________ left-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let (($x1281 (ite $x1250 $x1264 (ite $x1247 $x1264 (ite $x1245 $x1260 (ite $x1242 $x1261 (ite $x1240 $x1261 $x1264)))))))
 (let ((?x1088 (top ?x870)))
 (let ((?x1227 (stack ?x1088 ?x904)))
 (let (($x1256 (= ?x1042 ?x1227)))
 (let (($x1251 (= c________ left-to-center)))
 (let (($x1252 (and $x1251 $x1248)))
 (ite $x1252 $x1256 $x1281)))))))))))))))))))))))))))))))
(assert
 (let ((?x1090 (center s________)))
 (let ((?x1228 (center s_________)))
 (let (($x1266 (= ?x1228 ?x1090)))
 (let ((?x904 (right s________)))
 (let ((?x1235 (top ?x904)))
 (let ((?x1237 (stack ?x1235 ?x1090)))
 (let (($x1263 (= ?x1228 ?x1237)))
 (let (($x1238 ((_ is stack ) ?x904)))
 (let (($x1239 (= c________ right-to-center)))
 (let (($x1240 (and $x1239 $x1238)))
 (let (($x1241 (= c________ right-to-left)))
 (let (($x1242 (and $x1241 $x1238)))
 (let ((?x1230 (rest ?x1090)))
 (let (($x1258 (= ?x1228 ?x1230)))
 (let (($x1243 ((_ is stack ) ?x1090)))
 (let (($x1244 (= c________ center-to-right)))
 (let (($x1245 (and $x1244 $x1243)))
 (let (($x1246 (= c________ center-to-left)))
 (let (($x1247 (and $x1246 $x1243)))
 (let ((?x870 (left s________)))
 (let ((?x1088 (top ?x870)))
 (let ((?x1229 (stack ?x1088 ?x1090)))
 (let (($x1257 (= ?x1228 ?x1229)))
 (let (($x1248 ((_ is stack ) ?x870)))
 (let (($x1249 (= c________ left-to-right)))
 (let (($x1250 (and $x1249 $x1248)))
 (let (($x1280 (ite $x1250 $x1257 (ite $x1247 $x1258 (ite $x1245 $x1258 (ite $x1242 $x1266 (ite $x1240 $x1263 $x1266)))))))
 (let (($x1251 (= c________ left-to-center)))
 (let (($x1252 (and $x1251 $x1248)))
 (ite $x1252 $x1266 $x1280)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1008 (left s_________)))
 (let ((?x1146 (left s__________)))
 (let (($x1406 (= ?x1146 ?x1008)))
 (let ((?x1042 (right s_________)))
 (let ((?x1373 (top ?x1042)))
 (let ((?x1374 (stack ?x1373 ?x1008)))
 (let (($x1400 (= ?x1146 ?x1374)))
 (let (($x1376 ((_ is stack ) ?x1042)))
 (let (($x1379 (= c_________ right-to-left)))
 (let (($x1380 (and $x1379 $x1376)))
 (let ((?x1228 (center s_________)))
 (let (($x1381 ((_ is stack ) ?x1228)))
 (let (($x1382 (= c_________ center-to-right)))
 (let (($x1383 (and $x1382 $x1381)))
 (let ((?x1369 (top ?x1228)))
 (let ((?x1370 (stack ?x1369 ?x1008)))
 (let (($x1397 (= ?x1146 ?x1370)))
 (let (($x1384 (= c_________ center-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1179 (rest ?x1008)))
 (let (($x1393 (= ?x1146 ?x1179)))
 (let (($x1386 ((_ is stack ) ?x1008)))
 (let (($x1387 (= c_________ left-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let (($x1389 (= c_________ left-to-center)))
 (let (($x1390 (and $x1389 $x1386)))
 (ite $x1390 $x1393 (ite $x1388 $x1393 (ite $x1385 $x1397 (ite $x1383 $x1406 (ite $x1380 $x1400 $x1406))))))))))))))))))))))))))))))))
(assert
 (let ((?x1042 (right s_________)))
 (let ((?x1180 (right s__________)))
 (let (($x1402 (= ?x1180 ?x1042)))
 (let ((?x1372 (rest ?x1042)))
 (let (($x1399 (= ?x1180 ?x1372)))
 (let (($x1376 ((_ is stack ) ?x1042)))
 (let (($x1377 (= c_________ right-to-center)))
 (let (($x1378 (and $x1377 $x1376)))
 (let (($x1379 (= c_________ right-to-left)))
 (let (($x1380 (and $x1379 $x1376)))
 (let ((?x1228 (center s_________)))
 (let ((?x1369 (top ?x1228)))
 (let ((?x1371 (stack ?x1369 ?x1042)))
 (let (($x1398 (= ?x1180 ?x1371)))
 (let (($x1381 ((_ is stack ) ?x1228)))
 (let (($x1382 (= c_________ center-to-right)))
 (let (($x1383 (and $x1382 $x1381)))
 (let (($x1384 (= c_________ center-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1008 (left s_________)))
 (let (($x1386 ((_ is stack ) ?x1008)))
 (let (($x1387 (= c_________ left-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let (($x1419 (ite $x1388 $x1402 (ite $x1385 $x1402 (ite $x1383 $x1398 (ite $x1380 $x1399 (ite $x1378 $x1399 $x1402)))))))
 (let ((?x1226 (top ?x1008)))
 (let ((?x1365 (stack ?x1226 ?x1042)))
 (let (($x1394 (= ?x1180 ?x1365)))
 (let (($x1389 (= c_________ left-to-center)))
 (let (($x1390 (and $x1389 $x1386)))
 (ite $x1390 $x1394 $x1419)))))))))))))))))))))))))))))))
(assert
 (let ((?x1228 (center s_________)))
 (let ((?x1366 (center s__________)))
 (let (($x1404 (= ?x1366 ?x1228)))
 (let ((?x1042 (right s_________)))
 (let ((?x1373 (top ?x1042)))
 (let ((?x1375 (stack ?x1373 ?x1228)))
 (let (($x1401 (= ?x1366 ?x1375)))
 (let (($x1376 ((_ is stack ) ?x1042)))
 (let (($x1377 (= c_________ right-to-center)))
 (let (($x1378 (and $x1377 $x1376)))
 (let (($x1379 (= c_________ right-to-left)))
 (let (($x1380 (and $x1379 $x1376)))
 (let ((?x1368 (rest ?x1228)))
 (let (($x1396 (= ?x1366 ?x1368)))
 (let (($x1381 ((_ is stack ) ?x1228)))
 (let (($x1382 (= c_________ center-to-right)))
 (let (($x1383 (and $x1382 $x1381)))
 (let (($x1384 (= c_________ center-to-left)))
 (let (($x1385 (and $x1384 $x1381)))
 (let ((?x1008 (left s_________)))
 (let ((?x1226 (top ?x1008)))
 (let ((?x1367 (stack ?x1226 ?x1228)))
 (let (($x1395 (= ?x1366 ?x1367)))
 (let (($x1386 ((_ is stack ) ?x1008)))
 (let (($x1387 (= c_________ left-to-right)))
 (let (($x1388 (and $x1387 $x1386)))
 (let (($x1418 (ite $x1388 $x1395 (ite $x1385 $x1396 (ite $x1383 $x1396 (ite $x1380 $x1404 (ite $x1378 $x1401 $x1404)))))))
 (let (($x1389 (= c_________ left-to-center)))
 (let (($x1390 (and $x1389 $x1386)))
 (ite $x1390 $x1404 $x1418)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1146 (left s__________)))
 (let ((?x1284 (left s___________)))
 (let (($x1544 (= ?x1284 ?x1146)))
 (let ((?x1180 (right s__________)))
 (let ((?x1511 (top ?x1180)))
 (let ((?x1512 (stack ?x1511 ?x1146)))
 (let (($x1538 (= ?x1284 ?x1512)))
 (let (($x1514 ((_ is stack ) ?x1180)))
 (let (($x1517 (= c__________ right-to-left)))
 (let (($x1518 (and $x1517 $x1514)))
 (let ((?x1366 (center s__________)))
 (let (($x1519 ((_ is stack ) ?x1366)))
 (let (($x1520 (= c__________ center-to-right)))
 (let (($x1521 (and $x1520 $x1519)))
 (let ((?x1507 (top ?x1366)))
 (let ((?x1508 (stack ?x1507 ?x1146)))
 (let (($x1535 (= ?x1284 ?x1508)))
 (let (($x1522 (= c__________ center-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1317 (rest ?x1146)))
 (let (($x1531 (= ?x1284 ?x1317)))
 (let (($x1524 ((_ is stack ) ?x1146)))
 (let (($x1525 (= c__________ left-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let (($x1527 (= c__________ left-to-center)))
 (let (($x1528 (and $x1527 $x1524)))
 (ite $x1528 $x1531 (ite $x1526 $x1531 (ite $x1523 $x1535 (ite $x1521 $x1544 (ite $x1518 $x1538 $x1544))))))))))))))))))))))))))))))))
(assert
 (let ((?x1180 (right s__________)))
 (let ((?x1318 (right s___________)))
 (let (($x1540 (= ?x1318 ?x1180)))
 (let ((?x1510 (rest ?x1180)))
 (let (($x1537 (= ?x1318 ?x1510)))
 (let (($x1514 ((_ is stack ) ?x1180)))
 (let (($x1515 (= c__________ right-to-center)))
 (let (($x1516 (and $x1515 $x1514)))
 (let (($x1517 (= c__________ right-to-left)))
 (let (($x1518 (and $x1517 $x1514)))
 (let ((?x1366 (center s__________)))
 (let ((?x1507 (top ?x1366)))
 (let ((?x1509 (stack ?x1507 ?x1180)))
 (let (($x1536 (= ?x1318 ?x1509)))
 (let (($x1519 ((_ is stack ) ?x1366)))
 (let (($x1520 (= c__________ center-to-right)))
 (let (($x1521 (and $x1520 $x1519)))
 (let (($x1522 (= c__________ center-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1146 (left s__________)))
 (let (($x1524 ((_ is stack ) ?x1146)))
 (let (($x1525 (= c__________ left-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let (($x1557 (ite $x1526 $x1540 (ite $x1523 $x1540 (ite $x1521 $x1536 (ite $x1518 $x1537 (ite $x1516 $x1537 $x1540)))))))
 (let ((?x1364 (top ?x1146)))
 (let ((?x1503 (stack ?x1364 ?x1180)))
 (let (($x1532 (= ?x1318 ?x1503)))
 (let (($x1527 (= c__________ left-to-center)))
 (let (($x1528 (and $x1527 $x1524)))
 (ite $x1528 $x1532 $x1557)))))))))))))))))))))))))))))))
(assert
 (let ((?x1366 (center s__________)))
 (let ((?x1504 (center s___________)))
 (let (($x1542 (= ?x1504 ?x1366)))
 (let ((?x1180 (right s__________)))
 (let ((?x1511 (top ?x1180)))
 (let ((?x1513 (stack ?x1511 ?x1366)))
 (let (($x1539 (= ?x1504 ?x1513)))
 (let (($x1514 ((_ is stack ) ?x1180)))
 (let (($x1515 (= c__________ right-to-center)))
 (let (($x1516 (and $x1515 $x1514)))
 (let (($x1517 (= c__________ right-to-left)))
 (let (($x1518 (and $x1517 $x1514)))
 (let ((?x1506 (rest ?x1366)))
 (let (($x1534 (= ?x1504 ?x1506)))
 (let (($x1519 ((_ is stack ) ?x1366)))
 (let (($x1520 (= c__________ center-to-right)))
 (let (($x1521 (and $x1520 $x1519)))
 (let (($x1522 (= c__________ center-to-left)))
 (let (($x1523 (and $x1522 $x1519)))
 (let ((?x1146 (left s__________)))
 (let ((?x1364 (top ?x1146)))
 (let ((?x1505 (stack ?x1364 ?x1366)))
 (let (($x1533 (= ?x1504 ?x1505)))
 (let (($x1524 ((_ is stack ) ?x1146)))
 (let (($x1525 (= c__________ left-to-right)))
 (let (($x1526 (and $x1525 $x1524)))
 (let (($x1556 (ite $x1526 $x1533 (ite $x1523 $x1534 (ite $x1521 $x1534 (ite $x1518 $x1542 (ite $x1516 $x1539 $x1542)))))))
 (let (($x1527 (= c__________ left-to-center)))
 (let (($x1528 (and $x1527 $x1524)))
 (ite $x1528 $x1542 $x1556)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1284 (left s___________)))
 (let ((?x1422 (left s____________)))
 (let (($x1682 (= ?x1422 ?x1284)))
 (let ((?x1318 (right s___________)))
 (let ((?x1649 (top ?x1318)))
 (let ((?x1650 (stack ?x1649 ?x1284)))
 (let (($x1676 (= ?x1422 ?x1650)))
 (let (($x1652 ((_ is stack ) ?x1318)))
 (let (($x1655 (= c___________ right-to-left)))
 (let (($x1656 (and $x1655 $x1652)))
 (let ((?x1504 (center s___________)))
 (let (($x1657 ((_ is stack ) ?x1504)))
 (let (($x1658 (= c___________ center-to-right)))
 (let (($x1659 (and $x1658 $x1657)))
 (let ((?x1645 (top ?x1504)))
 (let ((?x1646 (stack ?x1645 ?x1284)))
 (let (($x1673 (= ?x1422 ?x1646)))
 (let (($x1660 (= c___________ center-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1455 (rest ?x1284)))
 (let (($x1669 (= ?x1422 ?x1455)))
 (let (($x1662 ((_ is stack ) ?x1284)))
 (let (($x1663 (= c___________ left-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let (($x1665 (= c___________ left-to-center)))
 (let (($x1666 (and $x1665 $x1662)))
 (ite $x1666 $x1669 (ite $x1664 $x1669 (ite $x1661 $x1673 (ite $x1659 $x1682 (ite $x1656 $x1676 $x1682))))))))))))))))))))))))))))))))
(assert
 (let ((?x1318 (right s___________)))
 (let ((?x1456 (right s____________)))
 (let (($x1678 (= ?x1456 ?x1318)))
 (let ((?x1648 (rest ?x1318)))
 (let (($x1675 (= ?x1456 ?x1648)))
 (let (($x1652 ((_ is stack ) ?x1318)))
 (let (($x1653 (= c___________ right-to-center)))
 (let (($x1654 (and $x1653 $x1652)))
 (let (($x1655 (= c___________ right-to-left)))
 (let (($x1656 (and $x1655 $x1652)))
 (let ((?x1504 (center s___________)))
 (let ((?x1645 (top ?x1504)))
 (let ((?x1647 (stack ?x1645 ?x1318)))
 (let (($x1674 (= ?x1456 ?x1647)))
 (let (($x1657 ((_ is stack ) ?x1504)))
 (let (($x1658 (= c___________ center-to-right)))
 (let (($x1659 (and $x1658 $x1657)))
 (let (($x1660 (= c___________ center-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1284 (left s___________)))
 (let (($x1662 ((_ is stack ) ?x1284)))
 (let (($x1663 (= c___________ left-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let (($x1695 (ite $x1664 $x1678 (ite $x1661 $x1678 (ite $x1659 $x1674 (ite $x1656 $x1675 (ite $x1654 $x1675 $x1678)))))))
 (let ((?x1502 (top ?x1284)))
 (let ((?x1641 (stack ?x1502 ?x1318)))
 (let (($x1670 (= ?x1456 ?x1641)))
 (let (($x1665 (= c___________ left-to-center)))
 (let (($x1666 (and $x1665 $x1662)))
 (ite $x1666 $x1670 $x1695)))))))))))))))))))))))))))))))
(assert
 (let ((?x1504 (center s___________)))
 (let ((?x1642 (center s____________)))
 (let (($x1680 (= ?x1642 ?x1504)))
 (let ((?x1318 (right s___________)))
 (let ((?x1649 (top ?x1318)))
 (let ((?x1651 (stack ?x1649 ?x1504)))
 (let (($x1677 (= ?x1642 ?x1651)))
 (let (($x1652 ((_ is stack ) ?x1318)))
 (let (($x1653 (= c___________ right-to-center)))
 (let (($x1654 (and $x1653 $x1652)))
 (let (($x1655 (= c___________ right-to-left)))
 (let (($x1656 (and $x1655 $x1652)))
 (let ((?x1644 (rest ?x1504)))
 (let (($x1672 (= ?x1642 ?x1644)))
 (let (($x1657 ((_ is stack ) ?x1504)))
 (let (($x1658 (= c___________ center-to-right)))
 (let (($x1659 (and $x1658 $x1657)))
 (let (($x1660 (= c___________ center-to-left)))
 (let (($x1661 (and $x1660 $x1657)))
 (let ((?x1284 (left s___________)))
 (let ((?x1502 (top ?x1284)))
 (let ((?x1643 (stack ?x1502 ?x1504)))
 (let (($x1671 (= ?x1642 ?x1643)))
 (let (($x1662 ((_ is stack ) ?x1284)))
 (let (($x1663 (= c___________ left-to-right)))
 (let (($x1664 (and $x1663 $x1662)))
 (let (($x1694 (ite $x1664 $x1671 (ite $x1661 $x1672 (ite $x1659 $x1672 (ite $x1656 $x1680 (ite $x1654 $x1677 $x1680)))))))
 (let (($x1665 (= c___________ left-to-center)))
 (let (($x1666 (and $x1665 $x1662)))
 (ite $x1666 $x1680 $x1694)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1422 (left s____________)))
 (let ((?x1560 (left s_____________)))
 (let (($x1820 (= ?x1560 ?x1422)))
 (let ((?x1456 (right s____________)))
 (let ((?x1787 (top ?x1456)))
 (let ((?x1788 (stack ?x1787 ?x1422)))
 (let (($x1814 (= ?x1560 ?x1788)))
 (let (($x1790 ((_ is stack ) ?x1456)))
 (let (($x1793 (= c____________ right-to-left)))
 (let (($x1794 (and $x1793 $x1790)))
 (let ((?x1642 (center s____________)))
 (let (($x1795 ((_ is stack ) ?x1642)))
 (let (($x1796 (= c____________ center-to-right)))
 (let (($x1797 (and $x1796 $x1795)))
 (let ((?x1783 (top ?x1642)))
 (let ((?x1784 (stack ?x1783 ?x1422)))
 (let (($x1811 (= ?x1560 ?x1784)))
 (let (($x1798 (= c____________ center-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1593 (rest ?x1422)))
 (let (($x1807 (= ?x1560 ?x1593)))
 (let (($x1800 ((_ is stack ) ?x1422)))
 (let (($x1801 (= c____________ left-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let (($x1803 (= c____________ left-to-center)))
 (let (($x1804 (and $x1803 $x1800)))
 (ite $x1804 $x1807 (ite $x1802 $x1807 (ite $x1799 $x1811 (ite $x1797 $x1820 (ite $x1794 $x1814 $x1820))))))))))))))))))))))))))))))))
(assert
 (let ((?x1456 (right s____________)))
 (let ((?x1594 (right s_____________)))
 (let (($x1816 (= ?x1594 ?x1456)))
 (let ((?x1786 (rest ?x1456)))
 (let (($x1813 (= ?x1594 ?x1786)))
 (let (($x1790 ((_ is stack ) ?x1456)))
 (let (($x1791 (= c____________ right-to-center)))
 (let (($x1792 (and $x1791 $x1790)))
 (let (($x1793 (= c____________ right-to-left)))
 (let (($x1794 (and $x1793 $x1790)))
 (let ((?x1642 (center s____________)))
 (let ((?x1783 (top ?x1642)))
 (let ((?x1785 (stack ?x1783 ?x1456)))
 (let (($x1812 (= ?x1594 ?x1785)))
 (let (($x1795 ((_ is stack ) ?x1642)))
 (let (($x1796 (= c____________ center-to-right)))
 (let (($x1797 (and $x1796 $x1795)))
 (let (($x1798 (= c____________ center-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1422 (left s____________)))
 (let (($x1800 ((_ is stack ) ?x1422)))
 (let (($x1801 (= c____________ left-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let (($x1833 (ite $x1802 $x1816 (ite $x1799 $x1816 (ite $x1797 $x1812 (ite $x1794 $x1813 (ite $x1792 $x1813 $x1816)))))))
 (let ((?x1640 (top ?x1422)))
 (let ((?x1779 (stack ?x1640 ?x1456)))
 (let (($x1808 (= ?x1594 ?x1779)))
 (let (($x1803 (= c____________ left-to-center)))
 (let (($x1804 (and $x1803 $x1800)))
 (ite $x1804 $x1808 $x1833)))))))))))))))))))))))))))))))
(assert
 (let ((?x1642 (center s____________)))
 (let ((?x1780 (center s_____________)))
 (let (($x1818 (= ?x1780 ?x1642)))
 (let ((?x1456 (right s____________)))
 (let ((?x1787 (top ?x1456)))
 (let ((?x1789 (stack ?x1787 ?x1642)))
 (let (($x1815 (= ?x1780 ?x1789)))
 (let (($x1790 ((_ is stack ) ?x1456)))
 (let (($x1791 (= c____________ right-to-center)))
 (let (($x1792 (and $x1791 $x1790)))
 (let (($x1793 (= c____________ right-to-left)))
 (let (($x1794 (and $x1793 $x1790)))
 (let ((?x1782 (rest ?x1642)))
 (let (($x1810 (= ?x1780 ?x1782)))
 (let (($x1795 ((_ is stack ) ?x1642)))
 (let (($x1796 (= c____________ center-to-right)))
 (let (($x1797 (and $x1796 $x1795)))
 (let (($x1798 (= c____________ center-to-left)))
 (let (($x1799 (and $x1798 $x1795)))
 (let ((?x1422 (left s____________)))
 (let ((?x1640 (top ?x1422)))
 (let ((?x1781 (stack ?x1640 ?x1642)))
 (let (($x1809 (= ?x1780 ?x1781)))
 (let (($x1800 ((_ is stack ) ?x1422)))
 (let (($x1801 (= c____________ left-to-right)))
 (let (($x1802 (and $x1801 $x1800)))
 (let (($x1832 (ite $x1802 $x1809 (ite $x1799 $x1810 (ite $x1797 $x1810 (ite $x1794 $x1818 (ite $x1792 $x1815 $x1818)))))))
 (let (($x1803 (= c____________ left-to-center)))
 (let (($x1804 (and $x1803 $x1800)))
 (ite $x1804 $x1818 $x1832)))))))))))))))))))))))))))))))
(assert
 (let ((?x79 (stack W (stack V (stack T (stack Q (stack D (stack A empty))))))))
 (let ((?x1594 (right s_____________)))
 (let (($x1836 (= ?x1594 ?x79)))
 (let ((?x1780 (center s_____________)))
 (let (($x1867 (= ?x1780 empty)))
 (let ((?x63 (stack H (stack G (stack J (stack R (stack U (stack O empty))))))))
 (let ((?x69 (stack B (stack S (stack K (stack N (stack C (stack L ?x63))))))))
 (let ((?x74 (stack E (stack I (stack P (stack M (stack F ?x69)))))))
 (let ((?x1560 (left s_____________)))
 (let (($x1868 (= ?x1560 ?x74)))
 (let (($x1870 (not (and $x1868 $x1867 $x1836))))
 (not $x1870)))))))))))))
(check-sat)
(exit)
