(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack C empty)))
 (let ((?x26 (stack M ?x27)))
 (let ((?x28 (stack G ?x26)))
 (let ((?x29 (stack I ?x28)))
 (let ((?x30 (stack L ?x29)))
 (let ((?x31 (stack K ?x30)))
 (let ((?x98 (left s_tmp_)))
 (= ?x98 ?x31)))))))))
(assert
 (let ((?x32 (stack A empty)))
 (let ((?x33 (stack J ?x32)))
 (let ((?x34 (stack N ?x33)))
 (let ((?x101 (center s_tmp__)))
 (= ?x101 ?x34))))))
(assert
 (let ((?x35 (stack B empty)))
 (let ((?x36 (stack D ?x35)))
 (let ((?x37 (stack E ?x36)))
 (let ((?x38 (stack F ?x37)))
 (let ((?x39 (stack H ?x38)))
 (let ((?x104 (right s_tmp___)))
 (= ?x104 ?x39))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x131 (left s_tmp__)))
 (= (left s_tmp___) ?x131)))
(assert
 (let ((?x101 (center s_tmp__)))
 (= (center s_tmp___) ?x101)))
(assert
 (let ((?x135 (center s_tmp_)))
 (= ?x135 (center s_tmp))))
(assert
 (let ((?x138 (right s_tmp_)))
 (= ?x138 (right s_tmp))))
(assert
 (let ((?x98 (left s_tmp_)))
 (let ((?x131 (left s_tmp__)))
 (= ?x131 ?x98))))
(assert
 (let ((?x138 (right s_tmp_)))
 (let ((?x142 (right s_tmp__)))
 (= ?x142 ?x138))))
(assert
 (= c__ c!1))
(assert
 (let ((?x75 (left s_)))
 (let ((?x243 (left s__)))
 (let (($x273 (= ?x243 ?x75)))
 (let ((?x78 (right s_)))
 (let (($x234 ((_ is stack ) ?x78)))
 (let (($x246 (= c_ right-to-left)))
 (let (($x250 (and $x246 $x234)))
 (let ((?x80 (center s_)))
 (let (($x251 ((_ is stack ) ?x80)))
 (let (($x252 (= c_ center-to-right)))
 (let (($x226 (and $x252 $x251)))
 (let (($x227 (= c_ center-to-left)))
 (let (($x228 (and $x227 $x251)))
 (let (($x282 (ite $x228 (= ?x243 (stack (top ?x80) ?x75)) (ite $x226 $x273 (ite $x250 (= ?x243 (stack (top ?x78) ?x75)) $x273)))))
 (let (($x260 (= ?x243 (rest ?x75))))
 (let (($x235 ((_ is stack ) ?x75)))
 (let (($x236 (= c_ left-to-right)))
 (let (($x237 (and $x236 $x235)))
 (let (($x256 (= c_ left-to-center)))
 (let (($x257 (and $x256 $x235)))
 (ite $x257 $x260 (ite $x237 $x260 $x282)))))))))))))))))))))))
(assert
 (let ((?x78 (right s_)))
 (let ((?x230 (right s__)))
 (let (($x269 (= ?x230 ?x78)))
 (let (($x266 (= ?x230 (rest ?x78))))
 (let (($x234 ((_ is stack ) ?x78)))
 (let (($x244 (= c_ right-to-center)))
 (let (($x245 (and $x244 $x234)))
 (let (($x246 (= c_ right-to-left)))
 (let (($x250 (and $x246 $x234)))
 (let ((?x80 (center s_)))
 (let (($x251 ((_ is stack ) ?x80)))
 (let (($x252 (= c_ center-to-right)))
 (let (($x226 (and $x252 $x251)))
 (let (($x279 (ite $x226 (= ?x230 (stack (top ?x80) ?x78)) (ite $x250 $x266 (ite $x245 $x266 $x269)))))
 (let (($x227 (= c_ center-to-left)))
 (let (($x228 (and $x227 $x251)))
 (let ((?x75 (left s_)))
 (let (($x235 ((_ is stack ) ?x75)))
 (let (($x236 (= c_ left-to-right)))
 (let (($x237 (and $x236 $x235)))
 (let (($x256 (= c_ left-to-center)))
 (let (($x257 (and $x256 $x235)))
 (ite $x257 (= ?x230 (stack (top ?x75) ?x78)) (ite $x237 $x269 (ite $x228 $x269 $x279))))))))))))))))))))))))))
(assert
 (let ((?x80 (center s_)))
 (let ((?x254 (center s__)))
 (let (($x271 (= ?x254 ?x80)))
 (let ((?x78 (right s_)))
 (let (($x234 ((_ is stack ) ?x78)))
 (let (($x244 (= c_ right-to-center)))
 (let (($x245 (and $x244 $x234)))
 (let (($x246 (= c_ right-to-left)))
 (let (($x250 (and $x246 $x234)))
 (let (($x263 (= ?x254 (rest ?x80))))
 (let (($x251 ((_ is stack ) ?x80)))
 (let (($x252 (= c_ center-to-right)))
 (let (($x226 (and $x252 $x251)))
 (let (($x278 (ite $x226 $x263 (ite $x250 $x271 (ite $x245 (= ?x254 (stack (top ?x78) ?x80)) $x271)))))
 (let (($x227 (= c_ center-to-left)))
 (let (($x228 (and $x227 $x251)))
 (let ((?x75 (left s_)))
 (let (($x235 ((_ is stack ) ?x75)))
 (let (($x236 (= c_ left-to-right)))
 (let (($x237 (and $x236 $x235)))
 (let (($x256 (= c_ left-to-center)))
 (let (($x257 (and $x256 $x235)))
 (ite $x257 $x271 (ite $x237 (= ?x254 (stack (top ?x75) ?x80)) (ite $x228 $x263 $x278))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x243 (left s__)))
 (let ((?x145 (left s___)))
 (let (($x402 (= ?x145 ?x243)))
 (let ((?x230 (right s__)))
 (let ((?x369 (top ?x230)))
 (let ((?x370 (stack ?x369 ?x243)))
 (let (($x396 (= ?x145 ?x370)))
 (let (($x372 ((_ is stack ) ?x230)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x254 (center s__)))
 (let (($x377 ((_ is stack ) ?x254)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let ((?x365 (top ?x254)))
 (let ((?x366 (stack ?x365 ?x243)))
 (let (($x393 (= ?x145 ?x366)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x147 (rest ?x243)))
 (let (($x389 (= ?x145 ?x147)))
 (let (($x382 ((_ is stack ) ?x243)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x389 (ite $x384 $x389 (ite $x381 $x393 (ite $x379 $x402 (ite $x376 $x396 $x402))))))))))))))))))))))))))))))))
(assert
 (let ((?x230 (right s__)))
 (let ((?x148 (right s___)))
 (let (($x398 (= ?x148 ?x230)))
 (let ((?x368 (rest ?x230)))
 (let (($x395 (= ?x148 ?x368)))
 (let (($x372 ((_ is stack ) ?x230)))
 (let (($x373 (= c__ right-to-center)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x254 (center s__)))
 (let ((?x365 (top ?x254)))
 (let ((?x367 (stack ?x365 ?x230)))
 (let (($x394 (= ?x148 ?x367)))
 (let (($x377 ((_ is stack ) ?x254)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x243 (left s__)))
 (let (($x382 ((_ is stack ) ?x243)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x415 (ite $x384 $x398 (ite $x381 $x398 (ite $x379 $x394 (ite $x376 $x395 (ite $x374 $x395 $x398)))))))
 (let ((?x225 (top ?x243)))
 (let ((?x361 (stack ?x225 ?x230)))
 (let (($x390 (= ?x148 ?x361)))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x390 $x415)))))))))))))))))))))))))))))))
(assert
 (let ((?x254 (center s__)))
 (let ((?x362 (center s___)))
 (let (($x400 (= ?x362 ?x254)))
 (let ((?x230 (right s__)))
 (let ((?x369 (top ?x230)))
 (let ((?x371 (stack ?x369 ?x254)))
 (let (($x397 (= ?x362 ?x371)))
 (let (($x372 ((_ is stack ) ?x230)))
 (let (($x373 (= c__ right-to-center)))
 (let (($x374 (and $x373 $x372)))
 (let (($x375 (= c__ right-to-left)))
 (let (($x376 (and $x375 $x372)))
 (let ((?x364 (rest ?x254)))
 (let (($x392 (= ?x362 ?x364)))
 (let (($x377 ((_ is stack ) ?x254)))
 (let (($x378 (= c__ center-to-right)))
 (let (($x379 (and $x378 $x377)))
 (let (($x380 (= c__ center-to-left)))
 (let (($x381 (and $x380 $x377)))
 (let ((?x243 (left s__)))
 (let ((?x225 (top ?x243)))
 (let ((?x363 (stack ?x225 ?x254)))
 (let (($x391 (= ?x362 ?x363)))
 (let (($x382 ((_ is stack ) ?x243)))
 (let (($x383 (= c__ left-to-right)))
 (let (($x384 (and $x383 $x382)))
 (let (($x414 (ite $x384 $x391 (ite $x381 $x392 (ite $x379 $x392 (ite $x376 $x400 (ite $x374 $x397 $x400)))))))
 (let (($x385 (= c__ left-to-center)))
 (let (($x386 (and $x385 $x382)))
 (ite $x386 $x400 $x414)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x145 (left s___)))
 (let ((?x289 (left s____)))
 (let (($x540 (= ?x289 ?x145)))
 (let ((?x148 (right s___)))
 (let ((?x507 (top ?x148)))
 (let ((?x508 (stack ?x507 ?x145)))
 (let (($x534 (= ?x289 ?x508)))
 (let (($x510 ((_ is stack ) ?x148)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x362 (center s___)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let ((?x503 (top ?x362)))
 (let ((?x504 (stack ?x503 ?x145)))
 (let (($x531 (= ?x289 ?x504)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x333 (rest ?x145)))
 (let (($x527 (= ?x289 ?x333)))
 (let (($x520 ((_ is stack ) ?x145)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x527 (ite $x522 $x527 (ite $x519 $x531 (ite $x517 $x540 (ite $x514 $x534 $x540))))))))))))))))))))))))))))))))
(assert
 (let ((?x148 (right s___)))
 (let ((?x334 (right s____)))
 (let (($x536 (= ?x334 ?x148)))
 (let ((?x506 (rest ?x148)))
 (let (($x533 (= ?x334 ?x506)))
 (let (($x510 ((_ is stack ) ?x148)))
 (let (($x511 (= c___ right-to-center)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x362 (center s___)))
 (let ((?x503 (top ?x362)))
 (let ((?x505 (stack ?x503 ?x148)))
 (let (($x532 (= ?x334 ?x505)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x145 (left s___)))
 (let (($x520 ((_ is stack ) ?x145)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x553 (ite $x522 $x536 (ite $x519 $x536 (ite $x517 $x532 (ite $x514 $x533 (ite $x512 $x533 $x536)))))))
 (let ((?x360 (top ?x145)))
 (let ((?x499 (stack ?x360 ?x148)))
 (let (($x528 (= ?x334 ?x499)))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x528 $x553)))))))))))))))))))))))))))))))
(assert
 (let ((?x362 (center s___)))
 (let ((?x500 (center s____)))
 (let (($x538 (= ?x500 ?x362)))
 (let ((?x148 (right s___)))
 (let ((?x507 (top ?x148)))
 (let ((?x509 (stack ?x507 ?x362)))
 (let (($x535 (= ?x500 ?x509)))
 (let (($x510 ((_ is stack ) ?x148)))
 (let (($x511 (= c___ right-to-center)))
 (let (($x512 (and $x511 $x510)))
 (let (($x513 (= c___ right-to-left)))
 (let (($x514 (and $x513 $x510)))
 (let ((?x502 (rest ?x362)))
 (let (($x530 (= ?x500 ?x502)))
 (let (($x515 ((_ is stack ) ?x362)))
 (let (($x516 (= c___ center-to-right)))
 (let (($x517 (and $x516 $x515)))
 (let (($x518 (= c___ center-to-left)))
 (let (($x519 (and $x518 $x515)))
 (let ((?x145 (left s___)))
 (let ((?x360 (top ?x145)))
 (let ((?x501 (stack ?x360 ?x362)))
 (let (($x529 (= ?x500 ?x501)))
 (let (($x520 ((_ is stack ) ?x145)))
 (let (($x521 (= c___ left-to-right)))
 (let (($x522 (and $x521 $x520)))
 (let (($x552 (ite $x522 $x529 (ite $x519 $x530 (ite $x517 $x530 (ite $x514 $x538 (ite $x512 $x535 $x538)))))))
 (let (($x523 (= c___ left-to-center)))
 (let (($x524 (and $x523 $x520)))
 (ite $x524 $x538 $x552)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x289 (left s____)))
 (let ((?x418 (left s_____)))
 (let (($x678 (= ?x418 ?x289)))
 (let ((?x334 (right s____)))
 (let ((?x645 (top ?x334)))
 (let ((?x646 (stack ?x645 ?x289)))
 (let (($x672 (= ?x418 ?x646)))
 (let (($x648 ((_ is stack ) ?x334)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x500 (center s____)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let ((?x641 (top ?x500)))
 (let ((?x642 (stack ?x641 ?x289)))
 (let (($x669 (= ?x418 ?x642)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x451 (rest ?x289)))
 (let (($x665 (= ?x418 ?x451)))
 (let (($x658 ((_ is stack ) ?x289)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x665 (ite $x660 $x665 (ite $x657 $x669 (ite $x655 $x678 (ite $x652 $x672 $x678))))))))))))))))))))))))))))))))
(assert
 (let ((?x334 (right s____)))
 (let ((?x452 (right s_____)))
 (let (($x674 (= ?x452 ?x334)))
 (let ((?x644 (rest ?x334)))
 (let (($x671 (= ?x452 ?x644)))
 (let (($x648 ((_ is stack ) ?x334)))
 (let (($x649 (= c____ right-to-center)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x500 (center s____)))
 (let ((?x641 (top ?x500)))
 (let ((?x643 (stack ?x641 ?x334)))
 (let (($x670 (= ?x452 ?x643)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x289 (left s____)))
 (let (($x658 ((_ is stack ) ?x289)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x691 (ite $x660 $x674 (ite $x657 $x674 (ite $x655 $x670 (ite $x652 $x671 (ite $x650 $x671 $x674)))))))
 (let ((?x498 (top ?x289)))
 (let ((?x637 (stack ?x498 ?x334)))
 (let (($x666 (= ?x452 ?x637)))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x666 $x691)))))))))))))))))))))))))))))))
(assert
 (let ((?x500 (center s____)))
 (let ((?x638 (center s_____)))
 (let (($x676 (= ?x638 ?x500)))
 (let ((?x334 (right s____)))
 (let ((?x645 (top ?x334)))
 (let ((?x647 (stack ?x645 ?x500)))
 (let (($x673 (= ?x638 ?x647)))
 (let (($x648 ((_ is stack ) ?x334)))
 (let (($x649 (= c____ right-to-center)))
 (let (($x650 (and $x649 $x648)))
 (let (($x651 (= c____ right-to-left)))
 (let (($x652 (and $x651 $x648)))
 (let ((?x640 (rest ?x500)))
 (let (($x668 (= ?x638 ?x640)))
 (let (($x653 ((_ is stack ) ?x500)))
 (let (($x654 (= c____ center-to-right)))
 (let (($x655 (and $x654 $x653)))
 (let (($x656 (= c____ center-to-left)))
 (let (($x657 (and $x656 $x653)))
 (let ((?x289 (left s____)))
 (let ((?x498 (top ?x289)))
 (let ((?x639 (stack ?x498 ?x500)))
 (let (($x667 (= ?x638 ?x639)))
 (let (($x658 ((_ is stack ) ?x289)))
 (let (($x659 (= c____ left-to-right)))
 (let (($x660 (and $x659 $x658)))
 (let (($x690 (ite $x660 $x667 (ite $x657 $x668 (ite $x655 $x668 (ite $x652 $x676 (ite $x650 $x673 $x676)))))))
 (let (($x661 (= c____ left-to-center)))
 (let (($x662 (and $x661 $x658)))
 (ite $x662 $x676 $x690)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x418 (left s_____)))
 (let ((?x556 (left s______)))
 (let (($x816 (= ?x556 ?x418)))
 (let ((?x452 (right s_____)))
 (let ((?x783 (top ?x452)))
 (let ((?x784 (stack ?x783 ?x418)))
 (let (($x810 (= ?x556 ?x784)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x638 (center s_____)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let ((?x779 (top ?x638)))
 (let ((?x780 (stack ?x779 ?x418)))
 (let (($x807 (= ?x556 ?x780)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x589 (rest ?x418)))
 (let (($x803 (= ?x556 ?x589)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x803 (ite $x798 $x803 (ite $x795 $x807 (ite $x793 $x816 (ite $x790 $x810 $x816))))))))))))))))))))))))))))))))
(assert
 (let ((?x452 (right s_____)))
 (let ((?x590 (right s______)))
 (let (($x812 (= ?x590 ?x452)))
 (let ((?x782 (rest ?x452)))
 (let (($x809 (= ?x590 ?x782)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x787 (= c_____ right-to-center)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x638 (center s_____)))
 (let ((?x779 (top ?x638)))
 (let ((?x781 (stack ?x779 ?x452)))
 (let (($x808 (= ?x590 ?x781)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x418 (left s_____)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x829 (ite $x798 $x812 (ite $x795 $x812 (ite $x793 $x808 (ite $x790 $x809 (ite $x788 $x809 $x812)))))))
 (let ((?x636 (top ?x418)))
 (let ((?x775 (stack ?x636 ?x452)))
 (let (($x804 (= ?x590 ?x775)))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x804 $x829)))))))))))))))))))))))))))))))
(assert
 (let ((?x638 (center s_____)))
 (let ((?x776 (center s______)))
 (let (($x814 (= ?x776 ?x638)))
 (let ((?x452 (right s_____)))
 (let ((?x783 (top ?x452)))
 (let ((?x785 (stack ?x783 ?x638)))
 (let (($x811 (= ?x776 ?x785)))
 (let (($x786 ((_ is stack ) ?x452)))
 (let (($x787 (= c_____ right-to-center)))
 (let (($x788 (and $x787 $x786)))
 (let (($x789 (= c_____ right-to-left)))
 (let (($x790 (and $x789 $x786)))
 (let ((?x778 (rest ?x638)))
 (let (($x806 (= ?x776 ?x778)))
 (let (($x791 ((_ is stack ) ?x638)))
 (let (($x792 (= c_____ center-to-right)))
 (let (($x793 (and $x792 $x791)))
 (let (($x794 (= c_____ center-to-left)))
 (let (($x795 (and $x794 $x791)))
 (let ((?x418 (left s_____)))
 (let ((?x636 (top ?x418)))
 (let ((?x777 (stack ?x636 ?x638)))
 (let (($x805 (= ?x776 ?x777)))
 (let (($x796 ((_ is stack ) ?x418)))
 (let (($x797 (= c_____ left-to-right)))
 (let (($x798 (and $x797 $x796)))
 (let (($x828 (ite $x798 $x805 (ite $x795 $x806 (ite $x793 $x806 (ite $x790 $x814 (ite $x788 $x811 $x814)))))))
 (let (($x799 (= c_____ left-to-center)))
 (let (($x800 (and $x799 $x796)))
 (ite $x800 $x814 $x828)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x556 (left s______)))
 (let ((?x694 (left s_______)))
 (let (($x954 (= ?x694 ?x556)))
 (let ((?x590 (right s______)))
 (let ((?x921 (top ?x590)))
 (let ((?x922 (stack ?x921 ?x556)))
 (let (($x948 (= ?x694 ?x922)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x776 (center s______)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let ((?x917 (top ?x776)))
 (let ((?x918 (stack ?x917 ?x556)))
 (let (($x945 (= ?x694 ?x918)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x727 (rest ?x556)))
 (let (($x941 (= ?x694 ?x727)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x941 (ite $x936 $x941 (ite $x933 $x945 (ite $x931 $x954 (ite $x928 $x948 $x954))))))))))))))))))))))))))))))))
(assert
 (let ((?x590 (right s______)))
 (let ((?x728 (right s_______)))
 (let (($x950 (= ?x728 ?x590)))
 (let ((?x920 (rest ?x590)))
 (let (($x947 (= ?x728 ?x920)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x925 (= c______ right-to-center)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x776 (center s______)))
 (let ((?x917 (top ?x776)))
 (let ((?x919 (stack ?x917 ?x590)))
 (let (($x946 (= ?x728 ?x919)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x556 (left s______)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x967 (ite $x936 $x950 (ite $x933 $x950 (ite $x931 $x946 (ite $x928 $x947 (ite $x926 $x947 $x950)))))))
 (let ((?x774 (top ?x556)))
 (let ((?x913 (stack ?x774 ?x590)))
 (let (($x942 (= ?x728 ?x913)))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x942 $x967)))))))))))))))))))))))))))))))
(assert
 (let ((?x776 (center s______)))
 (let ((?x914 (center s_______)))
 (let (($x952 (= ?x914 ?x776)))
 (let ((?x590 (right s______)))
 (let ((?x921 (top ?x590)))
 (let ((?x923 (stack ?x921 ?x776)))
 (let (($x949 (= ?x914 ?x923)))
 (let (($x924 ((_ is stack ) ?x590)))
 (let (($x925 (= c______ right-to-center)))
 (let (($x926 (and $x925 $x924)))
 (let (($x927 (= c______ right-to-left)))
 (let (($x928 (and $x927 $x924)))
 (let ((?x916 (rest ?x776)))
 (let (($x944 (= ?x914 ?x916)))
 (let (($x929 ((_ is stack ) ?x776)))
 (let (($x930 (= c______ center-to-right)))
 (let (($x931 (and $x930 $x929)))
 (let (($x932 (= c______ center-to-left)))
 (let (($x933 (and $x932 $x929)))
 (let ((?x556 (left s______)))
 (let ((?x774 (top ?x556)))
 (let ((?x915 (stack ?x774 ?x776)))
 (let (($x943 (= ?x914 ?x915)))
 (let (($x934 ((_ is stack ) ?x556)))
 (let (($x935 (= c______ left-to-right)))
 (let (($x936 (and $x935 $x934)))
 (let (($x966 (ite $x936 $x943 (ite $x933 $x944 (ite $x931 $x944 (ite $x928 $x952 (ite $x926 $x949 $x952)))))))
 (let (($x937 (= c______ left-to-center)))
 (let (($x938 (and $x937 $x934)))
 (ite $x938 $x952 $x966)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x694 (left s_______)))
 (let ((?x832 (left s________)))
 (let (($x1092 (= ?x832 ?x694)))
 (let ((?x728 (right s_______)))
 (let ((?x1059 (top ?x728)))
 (let ((?x1060 (stack ?x1059 ?x694)))
 (let (($x1086 (= ?x832 ?x1060)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x914 (center s_______)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let ((?x1055 (top ?x914)))
 (let ((?x1056 (stack ?x1055 ?x694)))
 (let (($x1083 (= ?x832 ?x1056)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x865 (rest ?x694)))
 (let (($x1079 (= ?x832 ?x865)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1079 (ite $x1074 $x1079 (ite $x1071 $x1083 (ite $x1069 $x1092 (ite $x1066 $x1086 $x1092))))))))))))))))))))))))))))))))
(assert
 (let ((?x728 (right s_______)))
 (let ((?x866 (right s________)))
 (let (($x1088 (= ?x866 ?x728)))
 (let ((?x1058 (rest ?x728)))
 (let (($x1085 (= ?x866 ?x1058)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1063 (= c_______ right-to-center)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x914 (center s_______)))
 (let ((?x1055 (top ?x914)))
 (let ((?x1057 (stack ?x1055 ?x728)))
 (let (($x1084 (= ?x866 ?x1057)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x694 (left s_______)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1105 (ite $x1074 $x1088 (ite $x1071 $x1088 (ite $x1069 $x1084 (ite $x1066 $x1085 (ite $x1064 $x1085 $x1088)))))))
 (let ((?x912 (top ?x694)))
 (let ((?x1051 (stack ?x912 ?x728)))
 (let (($x1080 (= ?x866 ?x1051)))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1080 $x1105)))))))))))))))))))))))))))))))
(assert
 (let ((?x914 (center s_______)))
 (let ((?x1052 (center s________)))
 (let (($x1090 (= ?x1052 ?x914)))
 (let ((?x728 (right s_______)))
 (let ((?x1059 (top ?x728)))
 (let ((?x1061 (stack ?x1059 ?x914)))
 (let (($x1087 (= ?x1052 ?x1061)))
 (let (($x1062 ((_ is stack ) ?x728)))
 (let (($x1063 (= c_______ right-to-center)))
 (let (($x1064 (and $x1063 $x1062)))
 (let (($x1065 (= c_______ right-to-left)))
 (let (($x1066 (and $x1065 $x1062)))
 (let ((?x1054 (rest ?x914)))
 (let (($x1082 (= ?x1052 ?x1054)))
 (let (($x1067 ((_ is stack ) ?x914)))
 (let (($x1068 (= c_______ center-to-right)))
 (let (($x1069 (and $x1068 $x1067)))
 (let (($x1070 (= c_______ center-to-left)))
 (let (($x1071 (and $x1070 $x1067)))
 (let ((?x694 (left s_______)))
 (let ((?x912 (top ?x694)))
 (let ((?x1053 (stack ?x912 ?x914)))
 (let (($x1081 (= ?x1052 ?x1053)))
 (let (($x1072 ((_ is stack ) ?x694)))
 (let (($x1073 (= c_______ left-to-right)))
 (let (($x1074 (and $x1073 $x1072)))
 (let (($x1104 (ite $x1074 $x1081 (ite $x1071 $x1082 (ite $x1069 $x1082 (ite $x1066 $x1090 (ite $x1064 $x1087 $x1090)))))))
 (let (($x1075 (= c_______ left-to-center)))
 (let (($x1076 (and $x1075 $x1072)))
 (ite $x1076 $x1090 $x1104)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x832 (left s________)))
 (let ((?x970 (left s_________)))
 (let (($x1230 (= ?x970 ?x832)))
 (let ((?x866 (right s________)))
 (let ((?x1197 (top ?x866)))
 (let ((?x1198 (stack ?x1197 ?x832)))
 (let (($x1224 (= ?x970 ?x1198)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1052 (center s________)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let ((?x1193 (top ?x1052)))
 (let ((?x1194 (stack ?x1193 ?x832)))
 (let (($x1221 (= ?x970 ?x1194)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x1003 (rest ?x832)))
 (let (($x1217 (= ?x970 ?x1003)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1217 (ite $x1212 $x1217 (ite $x1209 $x1221 (ite $x1207 $x1230 (ite $x1204 $x1224 $x1230))))))))))))))))))))))))))))))))
(assert
 (let ((?x866 (right s________)))
 (let ((?x1004 (right s_________)))
 (let (($x1226 (= ?x1004 ?x866)))
 (let ((?x1196 (rest ?x866)))
 (let (($x1223 (= ?x1004 ?x1196)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1201 (= c________ right-to-center)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1052 (center s________)))
 (let ((?x1193 (top ?x1052)))
 (let ((?x1195 (stack ?x1193 ?x866)))
 (let (($x1222 (= ?x1004 ?x1195)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x832 (left s________)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1243 (ite $x1212 $x1226 (ite $x1209 $x1226 (ite $x1207 $x1222 (ite $x1204 $x1223 (ite $x1202 $x1223 $x1226)))))))
 (let ((?x1050 (top ?x832)))
 (let ((?x1189 (stack ?x1050 ?x866)))
 (let (($x1218 (= ?x1004 ?x1189)))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1218 $x1243)))))))))))))))))))))))))))))))
(assert
 (let ((?x1052 (center s________)))
 (let ((?x1190 (center s_________)))
 (let (($x1228 (= ?x1190 ?x1052)))
 (let ((?x866 (right s________)))
 (let ((?x1197 (top ?x866)))
 (let ((?x1199 (stack ?x1197 ?x1052)))
 (let (($x1225 (= ?x1190 ?x1199)))
 (let (($x1200 ((_ is stack ) ?x866)))
 (let (($x1201 (= c________ right-to-center)))
 (let (($x1202 (and $x1201 $x1200)))
 (let (($x1203 (= c________ right-to-left)))
 (let (($x1204 (and $x1203 $x1200)))
 (let ((?x1192 (rest ?x1052)))
 (let (($x1220 (= ?x1190 ?x1192)))
 (let (($x1205 ((_ is stack ) ?x1052)))
 (let (($x1206 (= c________ center-to-right)))
 (let (($x1207 (and $x1206 $x1205)))
 (let (($x1208 (= c________ center-to-left)))
 (let (($x1209 (and $x1208 $x1205)))
 (let ((?x832 (left s________)))
 (let ((?x1050 (top ?x832)))
 (let ((?x1191 (stack ?x1050 ?x1052)))
 (let (($x1219 (= ?x1190 ?x1191)))
 (let (($x1210 ((_ is stack ) ?x832)))
 (let (($x1211 (= c________ left-to-right)))
 (let (($x1212 (and $x1211 $x1210)))
 (let (($x1242 (ite $x1212 $x1219 (ite $x1209 $x1220 (ite $x1207 $x1220 (ite $x1204 $x1228 (ite $x1202 $x1225 $x1228)))))))
 (let (($x1213 (= c________ left-to-center)))
 (let (($x1214 (and $x1213 $x1210)))
 (ite $x1214 $x1228 $x1242)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x970 (left s_________)))
 (let ((?x1108 (left s__________)))
 (let (($x1368 (= ?x1108 ?x970)))
 (let ((?x1004 (right s_________)))
 (let ((?x1335 (top ?x1004)))
 (let ((?x1336 (stack ?x1335 ?x970)))
 (let (($x1362 (= ?x1108 ?x1336)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1190 (center s_________)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let ((?x1331 (top ?x1190)))
 (let ((?x1332 (stack ?x1331 ?x970)))
 (let (($x1359 (= ?x1108 ?x1332)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x1141 (rest ?x970)))
 (let (($x1355 (= ?x1108 ?x1141)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1355 (ite $x1350 $x1355 (ite $x1347 $x1359 (ite $x1345 $x1368 (ite $x1342 $x1362 $x1368))))))))))))))))))))))))))))))))
(assert
 (let ((?x1004 (right s_________)))
 (let ((?x1142 (right s__________)))
 (let (($x1364 (= ?x1142 ?x1004)))
 (let ((?x1334 (rest ?x1004)))
 (let (($x1361 (= ?x1142 ?x1334)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1339 (= c_________ right-to-center)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1190 (center s_________)))
 (let ((?x1331 (top ?x1190)))
 (let ((?x1333 (stack ?x1331 ?x1004)))
 (let (($x1360 (= ?x1142 ?x1333)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x970 (left s_________)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1381 (ite $x1350 $x1364 (ite $x1347 $x1364 (ite $x1345 $x1360 (ite $x1342 $x1361 (ite $x1340 $x1361 $x1364)))))))
 (let ((?x1188 (top ?x970)))
 (let ((?x1327 (stack ?x1188 ?x1004)))
 (let (($x1356 (= ?x1142 ?x1327)))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1356 $x1381)))))))))))))))))))))))))))))))
(assert
 (let ((?x1190 (center s_________)))
 (let ((?x1328 (center s__________)))
 (let (($x1366 (= ?x1328 ?x1190)))
 (let ((?x1004 (right s_________)))
 (let ((?x1335 (top ?x1004)))
 (let ((?x1337 (stack ?x1335 ?x1190)))
 (let (($x1363 (= ?x1328 ?x1337)))
 (let (($x1338 ((_ is stack ) ?x1004)))
 (let (($x1339 (= c_________ right-to-center)))
 (let (($x1340 (and $x1339 $x1338)))
 (let (($x1341 (= c_________ right-to-left)))
 (let (($x1342 (and $x1341 $x1338)))
 (let ((?x1330 (rest ?x1190)))
 (let (($x1358 (= ?x1328 ?x1330)))
 (let (($x1343 ((_ is stack ) ?x1190)))
 (let (($x1344 (= c_________ center-to-right)))
 (let (($x1345 (and $x1344 $x1343)))
 (let (($x1346 (= c_________ center-to-left)))
 (let (($x1347 (and $x1346 $x1343)))
 (let ((?x970 (left s_________)))
 (let ((?x1188 (top ?x970)))
 (let ((?x1329 (stack ?x1188 ?x1190)))
 (let (($x1357 (= ?x1328 ?x1329)))
 (let (($x1348 ((_ is stack ) ?x970)))
 (let (($x1349 (= c_________ left-to-right)))
 (let (($x1350 (and $x1349 $x1348)))
 (let (($x1380 (ite $x1350 $x1357 (ite $x1347 $x1358 (ite $x1345 $x1358 (ite $x1342 $x1366 (ite $x1340 $x1363 $x1366)))))))
 (let (($x1351 (= c_________ left-to-center)))
 (let (($x1352 (and $x1351 $x1348)))
 (ite $x1352 $x1366 $x1380)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1108 (left s__________)))
 (let ((?x1246 (left s___________)))
 (let (($x1506 (= ?x1246 ?x1108)))
 (let ((?x1142 (right s__________)))
 (let ((?x1473 (top ?x1142)))
 (let ((?x1474 (stack ?x1473 ?x1108)))
 (let (($x1500 (= ?x1246 ?x1474)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1328 (center s__________)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let ((?x1469 (top ?x1328)))
 (let ((?x1470 (stack ?x1469 ?x1108)))
 (let (($x1497 (= ?x1246 ?x1470)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1279 (rest ?x1108)))
 (let (($x1493 (= ?x1246 ?x1279)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1493 (ite $x1488 $x1493 (ite $x1485 $x1497 (ite $x1483 $x1506 (ite $x1480 $x1500 $x1506))))))))))))))))))))))))))))))))
(assert
 (let ((?x1142 (right s__________)))
 (let ((?x1280 (right s___________)))
 (let (($x1502 (= ?x1280 ?x1142)))
 (let ((?x1472 (rest ?x1142)))
 (let (($x1499 (= ?x1280 ?x1472)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1477 (= c__________ right-to-center)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1328 (center s__________)))
 (let ((?x1469 (top ?x1328)))
 (let ((?x1471 (stack ?x1469 ?x1142)))
 (let (($x1498 (= ?x1280 ?x1471)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1108 (left s__________)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1519 (ite $x1488 $x1502 (ite $x1485 $x1502 (ite $x1483 $x1498 (ite $x1480 $x1499 (ite $x1478 $x1499 $x1502)))))))
 (let ((?x1326 (top ?x1108)))
 (let ((?x1465 (stack ?x1326 ?x1142)))
 (let (($x1494 (= ?x1280 ?x1465)))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1494 $x1519)))))))))))))))))))))))))))))))
(assert
 (let ((?x1328 (center s__________)))
 (let ((?x1466 (center s___________)))
 (let (($x1504 (= ?x1466 ?x1328)))
 (let ((?x1142 (right s__________)))
 (let ((?x1473 (top ?x1142)))
 (let ((?x1475 (stack ?x1473 ?x1328)))
 (let (($x1501 (= ?x1466 ?x1475)))
 (let (($x1476 ((_ is stack ) ?x1142)))
 (let (($x1477 (= c__________ right-to-center)))
 (let (($x1478 (and $x1477 $x1476)))
 (let (($x1479 (= c__________ right-to-left)))
 (let (($x1480 (and $x1479 $x1476)))
 (let ((?x1468 (rest ?x1328)))
 (let (($x1496 (= ?x1466 ?x1468)))
 (let (($x1481 ((_ is stack ) ?x1328)))
 (let (($x1482 (= c__________ center-to-right)))
 (let (($x1483 (and $x1482 $x1481)))
 (let (($x1484 (= c__________ center-to-left)))
 (let (($x1485 (and $x1484 $x1481)))
 (let ((?x1108 (left s__________)))
 (let ((?x1326 (top ?x1108)))
 (let ((?x1467 (stack ?x1326 ?x1328)))
 (let (($x1495 (= ?x1466 ?x1467)))
 (let (($x1486 ((_ is stack ) ?x1108)))
 (let (($x1487 (= c__________ left-to-right)))
 (let (($x1488 (and $x1487 $x1486)))
 (let (($x1518 (ite $x1488 $x1495 (ite $x1485 $x1496 (ite $x1483 $x1496 (ite $x1480 $x1504 (ite $x1478 $x1501 $x1504)))))))
 (let (($x1489 (= c__________ left-to-center)))
 (let (($x1490 (and $x1489 $x1486)))
 (ite $x1490 $x1504 $x1518)))))))))))))))))))))))))))))))
(assert
 (let ((?x27 (stack C empty)))
 (let ((?x1280 (right s___________)))
 (let (($x1522 (= ?x1280 ?x27)))
 (let ((?x51 (stack L (stack G (stack K (stack B empty))))))
 (let ((?x1466 (center s___________)))
 (let (($x1553 (= ?x1466 ?x51)))
 (let ((?x45 (stack A (stack D (stack M (stack N (stack E (stack F empty))))))))
 (let ((?x48 (stack J (stack I (stack H ?x45)))))
 (let ((?x1246 (left s___________)))
 (let (($x1554 (= ?x1246 ?x48)))
 (let (($x1556 (not (and $x1554 $x1553 $x1522))))
 (not $x1556)))))))))))))
(check-sat)
(exit)
