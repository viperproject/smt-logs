(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x28 (stack P empty)))
 (let ((?x29 (stack L ?x28)))
 (let ((?x30 (stack N ?x29)))
 (let ((?x31 (stack F ?x30)))
 (let ((?x32 (stack D ?x31)))
 (let ((?x33 (stack I ?x32)))
 (let ((?x34 (stack C ?x33)))
 (let ((?x35 (stack K ?x34)))
 (let ((?x36 (stack G ?x35)))
 (let ((?x106 (left s_tmp_)))
 (= ?x106 ?x36))))))))))))
(assert
 (let ((?x37 (stack M empty)))
 (let ((?x38 (stack O ?x37)))
 (let ((?x39 (stack E ?x38)))
 (let ((?x40 (stack B ?x39)))
 (let ((?x41 (stack H ?x40)))
 (let ((?x42 (stack J ?x41)))
 (let ((?x43 (stack A ?x42)))
 (let ((?x109 (center s_tmp__)))
 (= ?x109 ?x43))))))))))
(assert
 (let ((?x112 (right s_tmp___)))
 (= ?x112 empty)))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x139 (left s_tmp__)))
 (= (left s_tmp___) ?x139)))
(assert
 (let ((?x109 (center s_tmp__)))
 (= (center s_tmp___) ?x109)))
(assert
 (let ((?x143 (center s_tmp_)))
 (= ?x143 (center s_tmp))))
(assert
 (let ((?x146 (right s_tmp_)))
 (= ?x146 (right s_tmp))))
(assert
 (let ((?x106 (left s_tmp_)))
 (let ((?x139 (left s_tmp__)))
 (= ?x139 ?x106))))
(assert
 (let ((?x146 (right s_tmp_)))
 (let ((?x150 (right s_tmp__)))
 (= ?x150 ?x146))))
(assert
 (= c__ c!1))
(assert
 (let ((?x83 (left s_)))
 (let ((?x263 (left s__)))
 (let (($x287 (= ?x263 ?x83)))
 (let ((?x86 (right s_)))
 (let (($x284 ((_ is stack ) ?x86)))
 (let (($x276 (and (= c_ right-to-left) $x284)))
 (let ((?x88 (center s_)))
 (let (($x277 ((_ is stack ) ?x88)))
 (let (($x278 (= c_ center-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x280 (= c_ center-to-left)))
 (let (($x281 (and $x280 $x277)))
 (let (($x296 (ite $x281 (= ?x263 (stack (top ?x88) ?x83)) (ite $x279 $x287 (ite $x276 (= ?x263 (stack (top ?x86) ?x83)) $x287)))))
 (let (($x253 (= ?x263 (rest ?x83))))
 (let (($x255 ((_ is stack ) ?x83)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x255)))
 (ite $x265 $x253 (ite $x257 $x253 $x296))))))))))))))))))))))
(assert
 (let ((?x86 (right s_)))
 (let ((?x271 (right s__)))
 (let (($x241 (= ?x271 ?x86)))
 (let (($x247 (= ?x271 (rest ?x86))))
 (let (($x284 ((_ is stack ) ?x86)))
 (let (($x244 (and (= c_ right-to-center) $x284)))
 (let (($x276 (and (= c_ right-to-left) $x284)))
 (let ((?x88 (center s_)))
 (let (($x277 ((_ is stack ) ?x88)))
 (let (($x278 (= c_ center-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x293 (ite $x279 (= ?x271 (stack (top ?x88) ?x86)) (ite $x276 $x247 (ite $x244 $x247 $x241)))))
 (let (($x280 (= c_ center-to-left)))
 (let (($x281 (and $x280 $x277)))
 (let ((?x83 (left s_)))
 (let (($x255 ((_ is stack ) ?x83)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x255)))
 (ite $x265 (= ?x271 (stack (top ?x83) ?x86)) (ite $x257 $x241 (ite $x281 $x241 $x293))))))))))))))))))))))))
(assert
 (let ((?x88 (center s_)))
 (let ((?x259 (center s__)))
 (let (($x285 (= ?x259 ?x88)))
 (let ((?x86 (right s_)))
 (let (($x284 ((_ is stack ) ?x86)))
 (let (($x244 (and (= c_ right-to-center) $x284)))
 (let (($x276 (and (= c_ right-to-left) $x284)))
 (let (($x250 (= ?x259 (rest ?x88))))
 (let (($x277 ((_ is stack ) ?x88)))
 (let (($x278 (= c_ center-to-right)))
 (let (($x279 (and $x278 $x277)))
 (let (($x292 (ite $x279 $x250 (ite $x276 $x285 (ite $x244 (= ?x259 (stack (top ?x86) ?x88)) $x285)))))
 (let (($x280 (= c_ center-to-left)))
 (let (($x281 (and $x280 $x277)))
 (let ((?x83 (left s_)))
 (let (($x255 ((_ is stack ) ?x83)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x264 (= c_ left-to-center)))
 (let (($x265 (and $x264 $x255)))
 (ite $x265 $x285 (ite $x257 (= ?x259 (stack (top ?x83) ?x88)) (ite $x281 $x250 $x292))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x263 (left s__)))
 (let ((?x153 (left s___)))
 (let (($x398 (= ?x153 ?x263)))
 (let ((?x271 (right s__)))
 (let ((?x365 (top ?x271)))
 (let ((?x366 (stack ?x365 ?x263)))
 (let (($x392 (= ?x153 ?x366)))
 (let (($x368 ((_ is stack ) ?x271)))
 (let (($x371 (= c__ right-to-left)))
 (let (($x372 (and $x371 $x368)))
 (let ((?x259 (center s__)))
 (let (($x373 ((_ is stack ) ?x259)))
 (let (($x374 (= c__ center-to-right)))
 (let (($x375 (and $x374 $x373)))
 (let ((?x361 (top ?x259)))
 (let ((?x362 (stack ?x361 ?x263)))
 (let (($x389 (= ?x153 ?x362)))
 (let (($x376 (= c__ center-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x155 (rest ?x263)))
 (let (($x385 (= ?x153 ?x155)))
 (let (($x378 ((_ is stack ) ?x263)))
 (let (($x379 (= c__ left-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let (($x381 (= c__ left-to-center)))
 (let (($x382 (and $x381 $x378)))
 (ite $x382 $x385 (ite $x380 $x385 (ite $x377 $x389 (ite $x375 $x398 (ite $x372 $x392 $x398))))))))))))))))))))))))))))))))
(assert
 (let ((?x271 (right s__)))
 (let ((?x156 (right s___)))
 (let (($x394 (= ?x156 ?x271)))
 (let ((?x364 (rest ?x271)))
 (let (($x391 (= ?x156 ?x364)))
 (let (($x368 ((_ is stack ) ?x271)))
 (let (($x369 (= c__ right-to-center)))
 (let (($x370 (and $x369 $x368)))
 (let (($x371 (= c__ right-to-left)))
 (let (($x372 (and $x371 $x368)))
 (let ((?x259 (center s__)))
 (let ((?x361 (top ?x259)))
 (let ((?x363 (stack ?x361 ?x271)))
 (let (($x390 (= ?x156 ?x363)))
 (let (($x373 ((_ is stack ) ?x259)))
 (let (($x374 (= c__ center-to-right)))
 (let (($x375 (and $x374 $x373)))
 (let (($x376 (= c__ center-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x263 (left s__)))
 (let (($x378 ((_ is stack ) ?x263)))
 (let (($x379 (= c__ left-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let (($x411 (ite $x380 $x394 (ite $x377 $x394 (ite $x375 $x390 (ite $x372 $x391 (ite $x370 $x391 $x394)))))))
 (let ((?x239 (top ?x263)))
 (let ((?x357 (stack ?x239 ?x271)))
 (let (($x386 (= ?x156 ?x357)))
 (let (($x381 (= c__ left-to-center)))
 (let (($x382 (and $x381 $x378)))
 (ite $x382 $x386 $x411)))))))))))))))))))))))))))))))
(assert
 (let ((?x259 (center s__)))
 (let ((?x358 (center s___)))
 (let (($x396 (= ?x358 ?x259)))
 (let ((?x271 (right s__)))
 (let ((?x365 (top ?x271)))
 (let ((?x367 (stack ?x365 ?x259)))
 (let (($x393 (= ?x358 ?x367)))
 (let (($x368 ((_ is stack ) ?x271)))
 (let (($x369 (= c__ right-to-center)))
 (let (($x370 (and $x369 $x368)))
 (let (($x371 (= c__ right-to-left)))
 (let (($x372 (and $x371 $x368)))
 (let ((?x360 (rest ?x259)))
 (let (($x388 (= ?x358 ?x360)))
 (let (($x373 ((_ is stack ) ?x259)))
 (let (($x374 (= c__ center-to-right)))
 (let (($x375 (and $x374 $x373)))
 (let (($x376 (= c__ center-to-left)))
 (let (($x377 (and $x376 $x373)))
 (let ((?x263 (left s__)))
 (let ((?x239 (top ?x263)))
 (let ((?x359 (stack ?x239 ?x259)))
 (let (($x387 (= ?x358 ?x359)))
 (let (($x378 ((_ is stack ) ?x263)))
 (let (($x379 (= c__ left-to-right)))
 (let (($x380 (and $x379 $x378)))
 (let (($x410 (ite $x380 $x387 (ite $x377 $x388 (ite $x375 $x388 (ite $x372 $x396 (ite $x370 $x393 $x396)))))))
 (let (($x381 (= c__ left-to-center)))
 (let (($x382 (and $x381 $x378)))
 (ite $x382 $x396 $x410)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x153 (left s___)))
 (let ((?x303 (left s____)))
 (let (($x536 (= ?x303 ?x153)))
 (let ((?x156 (right s___)))
 (let ((?x503 (top ?x156)))
 (let ((?x504 (stack ?x503 ?x153)))
 (let (($x530 (= ?x303 ?x504)))
 (let (($x506 ((_ is stack ) ?x156)))
 (let (($x509 (= c___ right-to-left)))
 (let (($x510 (and $x509 $x506)))
 (let ((?x358 (center s___)))
 (let (($x511 ((_ is stack ) ?x358)))
 (let (($x512 (= c___ center-to-right)))
 (let (($x513 (and $x512 $x511)))
 (let ((?x499 (top ?x358)))
 (let ((?x500 (stack ?x499 ?x153)))
 (let (($x527 (= ?x303 ?x500)))
 (let (($x514 (= c___ center-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x334 (rest ?x153)))
 (let (($x523 (= ?x303 ?x334)))
 (let (($x516 ((_ is stack ) ?x153)))
 (let (($x517 (= c___ left-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let (($x519 (= c___ left-to-center)))
 (let (($x520 (and $x519 $x516)))
 (ite $x520 $x523 (ite $x518 $x523 (ite $x515 $x527 (ite $x513 $x536 (ite $x510 $x530 $x536))))))))))))))))))))))))))))))))
(assert
 (let ((?x156 (right s___)))
 (let ((?x335 (right s____)))
 (let (($x532 (= ?x335 ?x156)))
 (let ((?x502 (rest ?x156)))
 (let (($x529 (= ?x335 ?x502)))
 (let (($x506 ((_ is stack ) ?x156)))
 (let (($x507 (= c___ right-to-center)))
 (let (($x508 (and $x507 $x506)))
 (let (($x509 (= c___ right-to-left)))
 (let (($x510 (and $x509 $x506)))
 (let ((?x358 (center s___)))
 (let ((?x499 (top ?x358)))
 (let ((?x501 (stack ?x499 ?x156)))
 (let (($x528 (= ?x335 ?x501)))
 (let (($x511 ((_ is stack ) ?x358)))
 (let (($x512 (= c___ center-to-right)))
 (let (($x513 (and $x512 $x511)))
 (let (($x514 (= c___ center-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x153 (left s___)))
 (let (($x516 ((_ is stack ) ?x153)))
 (let (($x517 (= c___ left-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let (($x549 (ite $x518 $x532 (ite $x515 $x532 (ite $x513 $x528 (ite $x510 $x529 (ite $x508 $x529 $x532)))))))
 (let ((?x356 (top ?x153)))
 (let ((?x495 (stack ?x356 ?x156)))
 (let (($x524 (= ?x335 ?x495)))
 (let (($x519 (= c___ left-to-center)))
 (let (($x520 (and $x519 $x516)))
 (ite $x520 $x524 $x549)))))))))))))))))))))))))))))))
(assert
 (let ((?x358 (center s___)))
 (let ((?x496 (center s____)))
 (let (($x534 (= ?x496 ?x358)))
 (let ((?x156 (right s___)))
 (let ((?x503 (top ?x156)))
 (let ((?x505 (stack ?x503 ?x358)))
 (let (($x531 (= ?x496 ?x505)))
 (let (($x506 ((_ is stack ) ?x156)))
 (let (($x507 (= c___ right-to-center)))
 (let (($x508 (and $x507 $x506)))
 (let (($x509 (= c___ right-to-left)))
 (let (($x510 (and $x509 $x506)))
 (let ((?x498 (rest ?x358)))
 (let (($x526 (= ?x496 ?x498)))
 (let (($x511 ((_ is stack ) ?x358)))
 (let (($x512 (= c___ center-to-right)))
 (let (($x513 (and $x512 $x511)))
 (let (($x514 (= c___ center-to-left)))
 (let (($x515 (and $x514 $x511)))
 (let ((?x153 (left s___)))
 (let ((?x356 (top ?x153)))
 (let ((?x497 (stack ?x356 ?x358)))
 (let (($x525 (= ?x496 ?x497)))
 (let (($x516 ((_ is stack ) ?x153)))
 (let (($x517 (= c___ left-to-right)))
 (let (($x518 (and $x517 $x516)))
 (let (($x548 (ite $x518 $x525 (ite $x515 $x526 (ite $x513 $x526 (ite $x510 $x534 (ite $x508 $x531 $x534)))))))
 (let (($x519 (= c___ left-to-center)))
 (let (($x520 (and $x519 $x516)))
 (ite $x520 $x534 $x548)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x303 (left s____)))
 (let ((?x414 (left s_____)))
 (let (($x674 (= ?x414 ?x303)))
 (let ((?x335 (right s____)))
 (let ((?x641 (top ?x335)))
 (let ((?x642 (stack ?x641 ?x303)))
 (let (($x668 (= ?x414 ?x642)))
 (let (($x644 ((_ is stack ) ?x335)))
 (let (($x647 (= c____ right-to-left)))
 (let (($x648 (and $x647 $x644)))
 (let ((?x496 (center s____)))
 (let (($x649 ((_ is stack ) ?x496)))
 (let (($x650 (= c____ center-to-right)))
 (let (($x651 (and $x650 $x649)))
 (let ((?x637 (top ?x496)))
 (let ((?x638 (stack ?x637 ?x303)))
 (let (($x665 (= ?x414 ?x638)))
 (let (($x652 (= c____ center-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x447 (rest ?x303)))
 (let (($x661 (= ?x414 ?x447)))
 (let (($x654 ((_ is stack ) ?x303)))
 (let (($x655 (= c____ left-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let (($x657 (= c____ left-to-center)))
 (let (($x658 (and $x657 $x654)))
 (ite $x658 $x661 (ite $x656 $x661 (ite $x653 $x665 (ite $x651 $x674 (ite $x648 $x668 $x674))))))))))))))))))))))))))))))))
(assert
 (let ((?x335 (right s____)))
 (let ((?x448 (right s_____)))
 (let (($x670 (= ?x448 ?x335)))
 (let ((?x640 (rest ?x335)))
 (let (($x667 (= ?x448 ?x640)))
 (let (($x644 ((_ is stack ) ?x335)))
 (let (($x645 (= c____ right-to-center)))
 (let (($x646 (and $x645 $x644)))
 (let (($x647 (= c____ right-to-left)))
 (let (($x648 (and $x647 $x644)))
 (let ((?x496 (center s____)))
 (let ((?x637 (top ?x496)))
 (let ((?x639 (stack ?x637 ?x335)))
 (let (($x666 (= ?x448 ?x639)))
 (let (($x649 ((_ is stack ) ?x496)))
 (let (($x650 (= c____ center-to-right)))
 (let (($x651 (and $x650 $x649)))
 (let (($x652 (= c____ center-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x303 (left s____)))
 (let (($x654 ((_ is stack ) ?x303)))
 (let (($x655 (= c____ left-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let (($x687 (ite $x656 $x670 (ite $x653 $x670 (ite $x651 $x666 (ite $x648 $x667 (ite $x646 $x667 $x670)))))))
 (let ((?x494 (top ?x303)))
 (let ((?x633 (stack ?x494 ?x335)))
 (let (($x662 (= ?x448 ?x633)))
 (let (($x657 (= c____ left-to-center)))
 (let (($x658 (and $x657 $x654)))
 (ite $x658 $x662 $x687)))))))))))))))))))))))))))))))
(assert
 (let ((?x496 (center s____)))
 (let ((?x634 (center s_____)))
 (let (($x672 (= ?x634 ?x496)))
 (let ((?x335 (right s____)))
 (let ((?x641 (top ?x335)))
 (let ((?x643 (stack ?x641 ?x496)))
 (let (($x669 (= ?x634 ?x643)))
 (let (($x644 ((_ is stack ) ?x335)))
 (let (($x645 (= c____ right-to-center)))
 (let (($x646 (and $x645 $x644)))
 (let (($x647 (= c____ right-to-left)))
 (let (($x648 (and $x647 $x644)))
 (let ((?x636 (rest ?x496)))
 (let (($x664 (= ?x634 ?x636)))
 (let (($x649 ((_ is stack ) ?x496)))
 (let (($x650 (= c____ center-to-right)))
 (let (($x651 (and $x650 $x649)))
 (let (($x652 (= c____ center-to-left)))
 (let (($x653 (and $x652 $x649)))
 (let ((?x303 (left s____)))
 (let ((?x494 (top ?x303)))
 (let ((?x635 (stack ?x494 ?x496)))
 (let (($x663 (= ?x634 ?x635)))
 (let (($x654 ((_ is stack ) ?x303)))
 (let (($x655 (= c____ left-to-right)))
 (let (($x656 (and $x655 $x654)))
 (let (($x686 (ite $x656 $x663 (ite $x653 $x664 (ite $x651 $x664 (ite $x648 $x672 (ite $x646 $x669 $x672)))))))
 (let (($x657 (= c____ left-to-center)))
 (let (($x658 (and $x657 $x654)))
 (ite $x658 $x672 $x686)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x414 (left s_____)))
 (let ((?x552 (left s______)))
 (let (($x812 (= ?x552 ?x414)))
 (let ((?x448 (right s_____)))
 (let ((?x779 (top ?x448)))
 (let ((?x780 (stack ?x779 ?x414)))
 (let (($x806 (= ?x552 ?x780)))
 (let (($x782 ((_ is stack ) ?x448)))
 (let (($x785 (= c_____ right-to-left)))
 (let (($x786 (and $x785 $x782)))
 (let ((?x634 (center s_____)))
 (let (($x787 ((_ is stack ) ?x634)))
 (let (($x788 (= c_____ center-to-right)))
 (let (($x789 (and $x788 $x787)))
 (let ((?x775 (top ?x634)))
 (let ((?x776 (stack ?x775 ?x414)))
 (let (($x803 (= ?x552 ?x776)))
 (let (($x790 (= c_____ center-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x585 (rest ?x414)))
 (let (($x799 (= ?x552 ?x585)))
 (let (($x792 ((_ is stack ) ?x414)))
 (let (($x793 (= c_____ left-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let (($x795 (= c_____ left-to-center)))
 (let (($x796 (and $x795 $x792)))
 (ite $x796 $x799 (ite $x794 $x799 (ite $x791 $x803 (ite $x789 $x812 (ite $x786 $x806 $x812))))))))))))))))))))))))))))))))
(assert
 (let ((?x448 (right s_____)))
 (let ((?x586 (right s______)))
 (let (($x808 (= ?x586 ?x448)))
 (let ((?x778 (rest ?x448)))
 (let (($x805 (= ?x586 ?x778)))
 (let (($x782 ((_ is stack ) ?x448)))
 (let (($x783 (= c_____ right-to-center)))
 (let (($x784 (and $x783 $x782)))
 (let (($x785 (= c_____ right-to-left)))
 (let (($x786 (and $x785 $x782)))
 (let ((?x634 (center s_____)))
 (let ((?x775 (top ?x634)))
 (let ((?x777 (stack ?x775 ?x448)))
 (let (($x804 (= ?x586 ?x777)))
 (let (($x787 ((_ is stack ) ?x634)))
 (let (($x788 (= c_____ center-to-right)))
 (let (($x789 (and $x788 $x787)))
 (let (($x790 (= c_____ center-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x414 (left s_____)))
 (let (($x792 ((_ is stack ) ?x414)))
 (let (($x793 (= c_____ left-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let (($x825 (ite $x794 $x808 (ite $x791 $x808 (ite $x789 $x804 (ite $x786 $x805 (ite $x784 $x805 $x808)))))))
 (let ((?x632 (top ?x414)))
 (let ((?x771 (stack ?x632 ?x448)))
 (let (($x800 (= ?x586 ?x771)))
 (let (($x795 (= c_____ left-to-center)))
 (let (($x796 (and $x795 $x792)))
 (ite $x796 $x800 $x825)))))))))))))))))))))))))))))))
(assert
 (let ((?x634 (center s_____)))
 (let ((?x772 (center s______)))
 (let (($x810 (= ?x772 ?x634)))
 (let ((?x448 (right s_____)))
 (let ((?x779 (top ?x448)))
 (let ((?x781 (stack ?x779 ?x634)))
 (let (($x807 (= ?x772 ?x781)))
 (let (($x782 ((_ is stack ) ?x448)))
 (let (($x783 (= c_____ right-to-center)))
 (let (($x784 (and $x783 $x782)))
 (let (($x785 (= c_____ right-to-left)))
 (let (($x786 (and $x785 $x782)))
 (let ((?x774 (rest ?x634)))
 (let (($x802 (= ?x772 ?x774)))
 (let (($x787 ((_ is stack ) ?x634)))
 (let (($x788 (= c_____ center-to-right)))
 (let (($x789 (and $x788 $x787)))
 (let (($x790 (= c_____ center-to-left)))
 (let (($x791 (and $x790 $x787)))
 (let ((?x414 (left s_____)))
 (let ((?x632 (top ?x414)))
 (let ((?x773 (stack ?x632 ?x634)))
 (let (($x801 (= ?x772 ?x773)))
 (let (($x792 ((_ is stack ) ?x414)))
 (let (($x793 (= c_____ left-to-right)))
 (let (($x794 (and $x793 $x792)))
 (let (($x824 (ite $x794 $x801 (ite $x791 $x802 (ite $x789 $x802 (ite $x786 $x810 (ite $x784 $x807 $x810)))))))
 (let (($x795 (= c_____ left-to-center)))
 (let (($x796 (and $x795 $x792)))
 (ite $x796 $x810 $x824)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x552 (left s______)))
 (let ((?x690 (left s_______)))
 (let (($x950 (= ?x690 ?x552)))
 (let ((?x586 (right s______)))
 (let ((?x917 (top ?x586)))
 (let ((?x918 (stack ?x917 ?x552)))
 (let (($x944 (= ?x690 ?x918)))
 (let (($x920 ((_ is stack ) ?x586)))
 (let (($x923 (= c______ right-to-left)))
 (let (($x924 (and $x923 $x920)))
 (let ((?x772 (center s______)))
 (let (($x925 ((_ is stack ) ?x772)))
 (let (($x926 (= c______ center-to-right)))
 (let (($x927 (and $x926 $x925)))
 (let ((?x913 (top ?x772)))
 (let ((?x914 (stack ?x913 ?x552)))
 (let (($x941 (= ?x690 ?x914)))
 (let (($x928 (= c______ center-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x723 (rest ?x552)))
 (let (($x937 (= ?x690 ?x723)))
 (let (($x930 ((_ is stack ) ?x552)))
 (let (($x931 (= c______ left-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let (($x933 (= c______ left-to-center)))
 (let (($x934 (and $x933 $x930)))
 (ite $x934 $x937 (ite $x932 $x937 (ite $x929 $x941 (ite $x927 $x950 (ite $x924 $x944 $x950))))))))))))))))))))))))))))))))
(assert
 (let ((?x586 (right s______)))
 (let ((?x724 (right s_______)))
 (let (($x946 (= ?x724 ?x586)))
 (let ((?x916 (rest ?x586)))
 (let (($x943 (= ?x724 ?x916)))
 (let (($x920 ((_ is stack ) ?x586)))
 (let (($x921 (= c______ right-to-center)))
 (let (($x922 (and $x921 $x920)))
 (let (($x923 (= c______ right-to-left)))
 (let (($x924 (and $x923 $x920)))
 (let ((?x772 (center s______)))
 (let ((?x913 (top ?x772)))
 (let ((?x915 (stack ?x913 ?x586)))
 (let (($x942 (= ?x724 ?x915)))
 (let (($x925 ((_ is stack ) ?x772)))
 (let (($x926 (= c______ center-to-right)))
 (let (($x927 (and $x926 $x925)))
 (let (($x928 (= c______ center-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x552 (left s______)))
 (let (($x930 ((_ is stack ) ?x552)))
 (let (($x931 (= c______ left-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let (($x963 (ite $x932 $x946 (ite $x929 $x946 (ite $x927 $x942 (ite $x924 $x943 (ite $x922 $x943 $x946)))))))
 (let ((?x770 (top ?x552)))
 (let ((?x909 (stack ?x770 ?x586)))
 (let (($x938 (= ?x724 ?x909)))
 (let (($x933 (= c______ left-to-center)))
 (let (($x934 (and $x933 $x930)))
 (ite $x934 $x938 $x963)))))))))))))))))))))))))))))))
(assert
 (let ((?x772 (center s______)))
 (let ((?x910 (center s_______)))
 (let (($x948 (= ?x910 ?x772)))
 (let ((?x586 (right s______)))
 (let ((?x917 (top ?x586)))
 (let ((?x919 (stack ?x917 ?x772)))
 (let (($x945 (= ?x910 ?x919)))
 (let (($x920 ((_ is stack ) ?x586)))
 (let (($x921 (= c______ right-to-center)))
 (let (($x922 (and $x921 $x920)))
 (let (($x923 (= c______ right-to-left)))
 (let (($x924 (and $x923 $x920)))
 (let ((?x912 (rest ?x772)))
 (let (($x940 (= ?x910 ?x912)))
 (let (($x925 ((_ is stack ) ?x772)))
 (let (($x926 (= c______ center-to-right)))
 (let (($x927 (and $x926 $x925)))
 (let (($x928 (= c______ center-to-left)))
 (let (($x929 (and $x928 $x925)))
 (let ((?x552 (left s______)))
 (let ((?x770 (top ?x552)))
 (let ((?x911 (stack ?x770 ?x772)))
 (let (($x939 (= ?x910 ?x911)))
 (let (($x930 ((_ is stack ) ?x552)))
 (let (($x931 (= c______ left-to-right)))
 (let (($x932 (and $x931 $x930)))
 (let (($x962 (ite $x932 $x939 (ite $x929 $x940 (ite $x927 $x940 (ite $x924 $x948 (ite $x922 $x945 $x948)))))))
 (let (($x933 (= c______ left-to-center)))
 (let (($x934 (and $x933 $x930)))
 (ite $x934 $x948 $x962)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x690 (left s_______)))
 (let ((?x828 (left s________)))
 (let (($x1088 (= ?x828 ?x690)))
 (let ((?x724 (right s_______)))
 (let ((?x1055 (top ?x724)))
 (let ((?x1056 (stack ?x1055 ?x690)))
 (let (($x1082 (= ?x828 ?x1056)))
 (let (($x1058 ((_ is stack ) ?x724)))
 (let (($x1061 (= c_______ right-to-left)))
 (let (($x1062 (and $x1061 $x1058)))
 (let ((?x910 (center s_______)))
 (let (($x1063 ((_ is stack ) ?x910)))
 (let (($x1064 (= c_______ center-to-right)))
 (let (($x1065 (and $x1064 $x1063)))
 (let ((?x1051 (top ?x910)))
 (let ((?x1052 (stack ?x1051 ?x690)))
 (let (($x1079 (= ?x828 ?x1052)))
 (let (($x1066 (= c_______ center-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x861 (rest ?x690)))
 (let (($x1075 (= ?x828 ?x861)))
 (let (($x1068 ((_ is stack ) ?x690)))
 (let (($x1069 (= c_______ left-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1071 (= c_______ left-to-center)))
 (let (($x1072 (and $x1071 $x1068)))
 (ite $x1072 $x1075 (ite $x1070 $x1075 (ite $x1067 $x1079 (ite $x1065 $x1088 (ite $x1062 $x1082 $x1088))))))))))))))))))))))))))))))))
(assert
 (let ((?x724 (right s_______)))
 (let ((?x862 (right s________)))
 (let (($x1084 (= ?x862 ?x724)))
 (let ((?x1054 (rest ?x724)))
 (let (($x1081 (= ?x862 ?x1054)))
 (let (($x1058 ((_ is stack ) ?x724)))
 (let (($x1059 (= c_______ right-to-center)))
 (let (($x1060 (and $x1059 $x1058)))
 (let (($x1061 (= c_______ right-to-left)))
 (let (($x1062 (and $x1061 $x1058)))
 (let ((?x910 (center s_______)))
 (let ((?x1051 (top ?x910)))
 (let ((?x1053 (stack ?x1051 ?x724)))
 (let (($x1080 (= ?x862 ?x1053)))
 (let (($x1063 ((_ is stack ) ?x910)))
 (let (($x1064 (= c_______ center-to-right)))
 (let (($x1065 (and $x1064 $x1063)))
 (let (($x1066 (= c_______ center-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x690 (left s_______)))
 (let (($x1068 ((_ is stack ) ?x690)))
 (let (($x1069 (= c_______ left-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1101 (ite $x1070 $x1084 (ite $x1067 $x1084 (ite $x1065 $x1080 (ite $x1062 $x1081 (ite $x1060 $x1081 $x1084)))))))
 (let ((?x908 (top ?x690)))
 (let ((?x1047 (stack ?x908 ?x724)))
 (let (($x1076 (= ?x862 ?x1047)))
 (let (($x1071 (= c_______ left-to-center)))
 (let (($x1072 (and $x1071 $x1068)))
 (ite $x1072 $x1076 $x1101)))))))))))))))))))))))))))))))
(assert
 (let ((?x910 (center s_______)))
 (let ((?x1048 (center s________)))
 (let (($x1086 (= ?x1048 ?x910)))
 (let ((?x724 (right s_______)))
 (let ((?x1055 (top ?x724)))
 (let ((?x1057 (stack ?x1055 ?x910)))
 (let (($x1083 (= ?x1048 ?x1057)))
 (let (($x1058 ((_ is stack ) ?x724)))
 (let (($x1059 (= c_______ right-to-center)))
 (let (($x1060 (and $x1059 $x1058)))
 (let (($x1061 (= c_______ right-to-left)))
 (let (($x1062 (and $x1061 $x1058)))
 (let ((?x1050 (rest ?x910)))
 (let (($x1078 (= ?x1048 ?x1050)))
 (let (($x1063 ((_ is stack ) ?x910)))
 (let (($x1064 (= c_______ center-to-right)))
 (let (($x1065 (and $x1064 $x1063)))
 (let (($x1066 (= c_______ center-to-left)))
 (let (($x1067 (and $x1066 $x1063)))
 (let ((?x690 (left s_______)))
 (let ((?x908 (top ?x690)))
 (let ((?x1049 (stack ?x908 ?x910)))
 (let (($x1077 (= ?x1048 ?x1049)))
 (let (($x1068 ((_ is stack ) ?x690)))
 (let (($x1069 (= c_______ left-to-right)))
 (let (($x1070 (and $x1069 $x1068)))
 (let (($x1100 (ite $x1070 $x1077 (ite $x1067 $x1078 (ite $x1065 $x1078 (ite $x1062 $x1086 (ite $x1060 $x1083 $x1086)))))))
 (let (($x1071 (= c_______ left-to-center)))
 (let (($x1072 (and $x1071 $x1068)))
 (ite $x1072 $x1086 $x1100)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x828 (left s________)))
 (let ((?x966 (left s_________)))
 (let (($x1226 (= ?x966 ?x828)))
 (let ((?x862 (right s________)))
 (let ((?x1193 (top ?x862)))
 (let ((?x1194 (stack ?x1193 ?x828)))
 (let (($x1220 (= ?x966 ?x1194)))
 (let (($x1196 ((_ is stack ) ?x862)))
 (let (($x1199 (= c________ right-to-left)))
 (let (($x1200 (and $x1199 $x1196)))
 (let ((?x1048 (center s________)))
 (let (($x1201 ((_ is stack ) ?x1048)))
 (let (($x1202 (= c________ center-to-right)))
 (let (($x1203 (and $x1202 $x1201)))
 (let ((?x1189 (top ?x1048)))
 (let ((?x1190 (stack ?x1189 ?x828)))
 (let (($x1217 (= ?x966 ?x1190)))
 (let (($x1204 (= c________ center-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x999 (rest ?x828)))
 (let (($x1213 (= ?x966 ?x999)))
 (let (($x1206 ((_ is stack ) ?x828)))
 (let (($x1207 (= c________ left-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1209 (= c________ left-to-center)))
 (let (($x1210 (and $x1209 $x1206)))
 (ite $x1210 $x1213 (ite $x1208 $x1213 (ite $x1205 $x1217 (ite $x1203 $x1226 (ite $x1200 $x1220 $x1226))))))))))))))))))))))))))))))))
(assert
 (let ((?x862 (right s________)))
 (let ((?x1000 (right s_________)))
 (let (($x1222 (= ?x1000 ?x862)))
 (let ((?x1192 (rest ?x862)))
 (let (($x1219 (= ?x1000 ?x1192)))
 (let (($x1196 ((_ is stack ) ?x862)))
 (let (($x1197 (= c________ right-to-center)))
 (let (($x1198 (and $x1197 $x1196)))
 (let (($x1199 (= c________ right-to-left)))
 (let (($x1200 (and $x1199 $x1196)))
 (let ((?x1048 (center s________)))
 (let ((?x1189 (top ?x1048)))
 (let ((?x1191 (stack ?x1189 ?x862)))
 (let (($x1218 (= ?x1000 ?x1191)))
 (let (($x1201 ((_ is stack ) ?x1048)))
 (let (($x1202 (= c________ center-to-right)))
 (let (($x1203 (and $x1202 $x1201)))
 (let (($x1204 (= c________ center-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x828 (left s________)))
 (let (($x1206 ((_ is stack ) ?x828)))
 (let (($x1207 (= c________ left-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1239 (ite $x1208 $x1222 (ite $x1205 $x1222 (ite $x1203 $x1218 (ite $x1200 $x1219 (ite $x1198 $x1219 $x1222)))))))
 (let ((?x1046 (top ?x828)))
 (let ((?x1185 (stack ?x1046 ?x862)))
 (let (($x1214 (= ?x1000 ?x1185)))
 (let (($x1209 (= c________ left-to-center)))
 (let (($x1210 (and $x1209 $x1206)))
 (ite $x1210 $x1214 $x1239)))))))))))))))))))))))))))))))
(assert
 (let ((?x1048 (center s________)))
 (let ((?x1186 (center s_________)))
 (let (($x1224 (= ?x1186 ?x1048)))
 (let ((?x862 (right s________)))
 (let ((?x1193 (top ?x862)))
 (let ((?x1195 (stack ?x1193 ?x1048)))
 (let (($x1221 (= ?x1186 ?x1195)))
 (let (($x1196 ((_ is stack ) ?x862)))
 (let (($x1197 (= c________ right-to-center)))
 (let (($x1198 (and $x1197 $x1196)))
 (let (($x1199 (= c________ right-to-left)))
 (let (($x1200 (and $x1199 $x1196)))
 (let ((?x1188 (rest ?x1048)))
 (let (($x1216 (= ?x1186 ?x1188)))
 (let (($x1201 ((_ is stack ) ?x1048)))
 (let (($x1202 (= c________ center-to-right)))
 (let (($x1203 (and $x1202 $x1201)))
 (let (($x1204 (= c________ center-to-left)))
 (let (($x1205 (and $x1204 $x1201)))
 (let ((?x828 (left s________)))
 (let ((?x1046 (top ?x828)))
 (let ((?x1187 (stack ?x1046 ?x1048)))
 (let (($x1215 (= ?x1186 ?x1187)))
 (let (($x1206 ((_ is stack ) ?x828)))
 (let (($x1207 (= c________ left-to-right)))
 (let (($x1208 (and $x1207 $x1206)))
 (let (($x1238 (ite $x1208 $x1215 (ite $x1205 $x1216 (ite $x1203 $x1216 (ite $x1200 $x1224 (ite $x1198 $x1221 $x1224)))))))
 (let (($x1209 (= c________ left-to-center)))
 (let (($x1210 (and $x1209 $x1206)))
 (ite $x1210 $x1224 $x1238)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x966 (left s_________)))
 (let ((?x1104 (left s__________)))
 (let (($x1364 (= ?x1104 ?x966)))
 (let ((?x1000 (right s_________)))
 (let ((?x1331 (top ?x1000)))
 (let ((?x1332 (stack ?x1331 ?x966)))
 (let (($x1358 (= ?x1104 ?x1332)))
 (let (($x1334 ((_ is stack ) ?x1000)))
 (let (($x1337 (= c_________ right-to-left)))
 (let (($x1338 (and $x1337 $x1334)))
 (let ((?x1186 (center s_________)))
 (let (($x1339 ((_ is stack ) ?x1186)))
 (let (($x1340 (= c_________ center-to-right)))
 (let (($x1341 (and $x1340 $x1339)))
 (let ((?x1327 (top ?x1186)))
 (let ((?x1328 (stack ?x1327 ?x966)))
 (let (($x1355 (= ?x1104 ?x1328)))
 (let (($x1342 (= c_________ center-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x1137 (rest ?x966)))
 (let (($x1351 (= ?x1104 ?x1137)))
 (let (($x1344 ((_ is stack ) ?x966)))
 (let (($x1345 (= c_________ left-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1347 (= c_________ left-to-center)))
 (let (($x1348 (and $x1347 $x1344)))
 (ite $x1348 $x1351 (ite $x1346 $x1351 (ite $x1343 $x1355 (ite $x1341 $x1364 (ite $x1338 $x1358 $x1364))))))))))))))))))))))))))))))))
(assert
 (let ((?x1000 (right s_________)))
 (let ((?x1138 (right s__________)))
 (let (($x1360 (= ?x1138 ?x1000)))
 (let ((?x1330 (rest ?x1000)))
 (let (($x1357 (= ?x1138 ?x1330)))
 (let (($x1334 ((_ is stack ) ?x1000)))
 (let (($x1335 (= c_________ right-to-center)))
 (let (($x1336 (and $x1335 $x1334)))
 (let (($x1337 (= c_________ right-to-left)))
 (let (($x1338 (and $x1337 $x1334)))
 (let ((?x1186 (center s_________)))
 (let ((?x1327 (top ?x1186)))
 (let ((?x1329 (stack ?x1327 ?x1000)))
 (let (($x1356 (= ?x1138 ?x1329)))
 (let (($x1339 ((_ is stack ) ?x1186)))
 (let (($x1340 (= c_________ center-to-right)))
 (let (($x1341 (and $x1340 $x1339)))
 (let (($x1342 (= c_________ center-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x966 (left s_________)))
 (let (($x1344 ((_ is stack ) ?x966)))
 (let (($x1345 (= c_________ left-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1377 (ite $x1346 $x1360 (ite $x1343 $x1360 (ite $x1341 $x1356 (ite $x1338 $x1357 (ite $x1336 $x1357 $x1360)))))))
 (let ((?x1184 (top ?x966)))
 (let ((?x1323 (stack ?x1184 ?x1000)))
 (let (($x1352 (= ?x1138 ?x1323)))
 (let (($x1347 (= c_________ left-to-center)))
 (let (($x1348 (and $x1347 $x1344)))
 (ite $x1348 $x1352 $x1377)))))))))))))))))))))))))))))))
(assert
 (let ((?x1186 (center s_________)))
 (let ((?x1324 (center s__________)))
 (let (($x1362 (= ?x1324 ?x1186)))
 (let ((?x1000 (right s_________)))
 (let ((?x1331 (top ?x1000)))
 (let ((?x1333 (stack ?x1331 ?x1186)))
 (let (($x1359 (= ?x1324 ?x1333)))
 (let (($x1334 ((_ is stack ) ?x1000)))
 (let (($x1335 (= c_________ right-to-center)))
 (let (($x1336 (and $x1335 $x1334)))
 (let (($x1337 (= c_________ right-to-left)))
 (let (($x1338 (and $x1337 $x1334)))
 (let ((?x1326 (rest ?x1186)))
 (let (($x1354 (= ?x1324 ?x1326)))
 (let (($x1339 ((_ is stack ) ?x1186)))
 (let (($x1340 (= c_________ center-to-right)))
 (let (($x1341 (and $x1340 $x1339)))
 (let (($x1342 (= c_________ center-to-left)))
 (let (($x1343 (and $x1342 $x1339)))
 (let ((?x966 (left s_________)))
 (let ((?x1184 (top ?x966)))
 (let ((?x1325 (stack ?x1184 ?x1186)))
 (let (($x1353 (= ?x1324 ?x1325)))
 (let (($x1344 ((_ is stack ) ?x966)))
 (let (($x1345 (= c_________ left-to-right)))
 (let (($x1346 (and $x1345 $x1344)))
 (let (($x1376 (ite $x1346 $x1353 (ite $x1343 $x1354 (ite $x1341 $x1354 (ite $x1338 $x1362 (ite $x1336 $x1359 $x1362)))))))
 (let (($x1347 (= c_________ left-to-center)))
 (let (($x1348 (and $x1347 $x1344)))
 (ite $x1348 $x1362 $x1376)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1104 (left s__________)))
 (let ((?x1242 (left s___________)))
 (let (($x1502 (= ?x1242 ?x1104)))
 (let ((?x1138 (right s__________)))
 (let ((?x1469 (top ?x1138)))
 (let ((?x1470 (stack ?x1469 ?x1104)))
 (let (($x1496 (= ?x1242 ?x1470)))
 (let (($x1472 ((_ is stack ) ?x1138)))
 (let (($x1475 (= c__________ right-to-left)))
 (let (($x1476 (and $x1475 $x1472)))
 (let ((?x1324 (center s__________)))
 (let (($x1477 ((_ is stack ) ?x1324)))
 (let (($x1478 (= c__________ center-to-right)))
 (let (($x1479 (and $x1478 $x1477)))
 (let ((?x1465 (top ?x1324)))
 (let ((?x1466 (stack ?x1465 ?x1104)))
 (let (($x1493 (= ?x1242 ?x1466)))
 (let (($x1480 (= c__________ center-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1275 (rest ?x1104)))
 (let (($x1489 (= ?x1242 ?x1275)))
 (let (($x1482 ((_ is stack ) ?x1104)))
 (let (($x1483 (= c__________ left-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1485 (= c__________ left-to-center)))
 (let (($x1486 (and $x1485 $x1482)))
 (ite $x1486 $x1489 (ite $x1484 $x1489 (ite $x1481 $x1493 (ite $x1479 $x1502 (ite $x1476 $x1496 $x1502))))))))))))))))))))))))))))))))
(assert
 (let ((?x1138 (right s__________)))
 (let ((?x1276 (right s___________)))
 (let (($x1498 (= ?x1276 ?x1138)))
 (let ((?x1468 (rest ?x1138)))
 (let (($x1495 (= ?x1276 ?x1468)))
 (let (($x1472 ((_ is stack ) ?x1138)))
 (let (($x1473 (= c__________ right-to-center)))
 (let (($x1474 (and $x1473 $x1472)))
 (let (($x1475 (= c__________ right-to-left)))
 (let (($x1476 (and $x1475 $x1472)))
 (let ((?x1324 (center s__________)))
 (let ((?x1465 (top ?x1324)))
 (let ((?x1467 (stack ?x1465 ?x1138)))
 (let (($x1494 (= ?x1276 ?x1467)))
 (let (($x1477 ((_ is stack ) ?x1324)))
 (let (($x1478 (= c__________ center-to-right)))
 (let (($x1479 (and $x1478 $x1477)))
 (let (($x1480 (= c__________ center-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1104 (left s__________)))
 (let (($x1482 ((_ is stack ) ?x1104)))
 (let (($x1483 (= c__________ left-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1515 (ite $x1484 $x1498 (ite $x1481 $x1498 (ite $x1479 $x1494 (ite $x1476 $x1495 (ite $x1474 $x1495 $x1498)))))))
 (let ((?x1322 (top ?x1104)))
 (let ((?x1461 (stack ?x1322 ?x1138)))
 (let (($x1490 (= ?x1276 ?x1461)))
 (let (($x1485 (= c__________ left-to-center)))
 (let (($x1486 (and $x1485 $x1482)))
 (ite $x1486 $x1490 $x1515)))))))))))))))))))))))))))))))
(assert
 (let ((?x1324 (center s__________)))
 (let ((?x1462 (center s___________)))
 (let (($x1500 (= ?x1462 ?x1324)))
 (let ((?x1138 (right s__________)))
 (let ((?x1469 (top ?x1138)))
 (let ((?x1471 (stack ?x1469 ?x1324)))
 (let (($x1497 (= ?x1462 ?x1471)))
 (let (($x1472 ((_ is stack ) ?x1138)))
 (let (($x1473 (= c__________ right-to-center)))
 (let (($x1474 (and $x1473 $x1472)))
 (let (($x1475 (= c__________ right-to-left)))
 (let (($x1476 (and $x1475 $x1472)))
 (let ((?x1464 (rest ?x1324)))
 (let (($x1492 (= ?x1462 ?x1464)))
 (let (($x1477 ((_ is stack ) ?x1324)))
 (let (($x1478 (= c__________ center-to-right)))
 (let (($x1479 (and $x1478 $x1477)))
 (let (($x1480 (= c__________ center-to-left)))
 (let (($x1481 (and $x1480 $x1477)))
 (let ((?x1104 (left s__________)))
 (let ((?x1322 (top ?x1104)))
 (let ((?x1463 (stack ?x1322 ?x1324)))
 (let (($x1491 (= ?x1462 ?x1463)))
 (let (($x1482 ((_ is stack ) ?x1104)))
 (let (($x1483 (= c__________ left-to-right)))
 (let (($x1484 (and $x1483 $x1482)))
 (let (($x1514 (ite $x1484 $x1491 (ite $x1481 $x1492 (ite $x1479 $x1492 (ite $x1476 $x1500 (ite $x1474 $x1497 $x1500)))))))
 (let (($x1485 (= c__________ left-to-center)))
 (let (($x1486 (and $x1485 $x1482)))
 (ite $x1486 $x1500 $x1514)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1242 (left s___________)))
 (let ((?x1380 (left s____________)))
 (let (($x1640 (= ?x1380 ?x1242)))
 (let ((?x1276 (right s___________)))
 (let ((?x1607 (top ?x1276)))
 (let ((?x1608 (stack ?x1607 ?x1242)))
 (let (($x1634 (= ?x1380 ?x1608)))
 (let (($x1610 ((_ is stack ) ?x1276)))
 (let (($x1613 (= c___________ right-to-left)))
 (let (($x1614 (and $x1613 $x1610)))
 (let ((?x1462 (center s___________)))
 (let (($x1615 ((_ is stack ) ?x1462)))
 (let (($x1616 (= c___________ center-to-right)))
 (let (($x1617 (and $x1616 $x1615)))
 (let ((?x1603 (top ?x1462)))
 (let ((?x1604 (stack ?x1603 ?x1242)))
 (let (($x1631 (= ?x1380 ?x1604)))
 (let (($x1618 (= c___________ center-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1413 (rest ?x1242)))
 (let (($x1627 (= ?x1380 ?x1413)))
 (let (($x1620 ((_ is stack ) ?x1242)))
 (let (($x1621 (= c___________ left-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1623 (= c___________ left-to-center)))
 (let (($x1624 (and $x1623 $x1620)))
 (ite $x1624 $x1627 (ite $x1622 $x1627 (ite $x1619 $x1631 (ite $x1617 $x1640 (ite $x1614 $x1634 $x1640))))))))))))))))))))))))))))))))
(assert
 (let ((?x1276 (right s___________)))
 (let ((?x1414 (right s____________)))
 (let (($x1636 (= ?x1414 ?x1276)))
 (let ((?x1606 (rest ?x1276)))
 (let (($x1633 (= ?x1414 ?x1606)))
 (let (($x1610 ((_ is stack ) ?x1276)))
 (let (($x1611 (= c___________ right-to-center)))
 (let (($x1612 (and $x1611 $x1610)))
 (let (($x1613 (= c___________ right-to-left)))
 (let (($x1614 (and $x1613 $x1610)))
 (let ((?x1462 (center s___________)))
 (let ((?x1603 (top ?x1462)))
 (let ((?x1605 (stack ?x1603 ?x1276)))
 (let (($x1632 (= ?x1414 ?x1605)))
 (let (($x1615 ((_ is stack ) ?x1462)))
 (let (($x1616 (= c___________ center-to-right)))
 (let (($x1617 (and $x1616 $x1615)))
 (let (($x1618 (= c___________ center-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1242 (left s___________)))
 (let (($x1620 ((_ is stack ) ?x1242)))
 (let (($x1621 (= c___________ left-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1653 (ite $x1622 $x1636 (ite $x1619 $x1636 (ite $x1617 $x1632 (ite $x1614 $x1633 (ite $x1612 $x1633 $x1636)))))))
 (let ((?x1460 (top ?x1242)))
 (let ((?x1599 (stack ?x1460 ?x1276)))
 (let (($x1628 (= ?x1414 ?x1599)))
 (let (($x1623 (= c___________ left-to-center)))
 (let (($x1624 (and $x1623 $x1620)))
 (ite $x1624 $x1628 $x1653)))))))))))))))))))))))))))))))
(assert
 (let ((?x1462 (center s___________)))
 (let ((?x1600 (center s____________)))
 (let (($x1638 (= ?x1600 ?x1462)))
 (let ((?x1276 (right s___________)))
 (let ((?x1607 (top ?x1276)))
 (let ((?x1609 (stack ?x1607 ?x1462)))
 (let (($x1635 (= ?x1600 ?x1609)))
 (let (($x1610 ((_ is stack ) ?x1276)))
 (let (($x1611 (= c___________ right-to-center)))
 (let (($x1612 (and $x1611 $x1610)))
 (let (($x1613 (= c___________ right-to-left)))
 (let (($x1614 (and $x1613 $x1610)))
 (let ((?x1602 (rest ?x1462)))
 (let (($x1630 (= ?x1600 ?x1602)))
 (let (($x1615 ((_ is stack ) ?x1462)))
 (let (($x1616 (= c___________ center-to-right)))
 (let (($x1617 (and $x1616 $x1615)))
 (let (($x1618 (= c___________ center-to-left)))
 (let (($x1619 (and $x1618 $x1615)))
 (let ((?x1242 (left s___________)))
 (let ((?x1460 (top ?x1242)))
 (let ((?x1601 (stack ?x1460 ?x1462)))
 (let (($x1629 (= ?x1600 ?x1601)))
 (let (($x1620 ((_ is stack ) ?x1242)))
 (let (($x1621 (= c___________ left-to-right)))
 (let (($x1622 (and $x1621 $x1620)))
 (let (($x1652 (ite $x1622 $x1629 (ite $x1619 $x1630 (ite $x1617 $x1630 (ite $x1614 $x1638 (ite $x1612 $x1635 $x1638)))))))
 (let (($x1623 (= c___________ left-to-center)))
 (let (($x1624 (and $x1623 $x1620)))
 (ite $x1624 $x1638 $x1652)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1380 (left s____________)))
 (let ((?x1518 (left s_____________)))
 (let (($x1778 (= ?x1518 ?x1380)))
 (let ((?x1414 (right s____________)))
 (let ((?x1745 (top ?x1414)))
 (let ((?x1746 (stack ?x1745 ?x1380)))
 (let (($x1772 (= ?x1518 ?x1746)))
 (let (($x1748 ((_ is stack ) ?x1414)))
 (let (($x1751 (= c____________ right-to-left)))
 (let (($x1752 (and $x1751 $x1748)))
 (let ((?x1600 (center s____________)))
 (let (($x1753 ((_ is stack ) ?x1600)))
 (let (($x1754 (= c____________ center-to-right)))
 (let (($x1755 (and $x1754 $x1753)))
 (let ((?x1741 (top ?x1600)))
 (let ((?x1742 (stack ?x1741 ?x1380)))
 (let (($x1769 (= ?x1518 ?x1742)))
 (let (($x1756 (= c____________ center-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1551 (rest ?x1380)))
 (let (($x1765 (= ?x1518 ?x1551)))
 (let (($x1758 ((_ is stack ) ?x1380)))
 (let (($x1759 (= c____________ left-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1761 (= c____________ left-to-center)))
 (let (($x1762 (and $x1761 $x1758)))
 (ite $x1762 $x1765 (ite $x1760 $x1765 (ite $x1757 $x1769 (ite $x1755 $x1778 (ite $x1752 $x1772 $x1778))))))))))))))))))))))))))))))))
(assert
 (let ((?x1414 (right s____________)))
 (let ((?x1552 (right s_____________)))
 (let (($x1774 (= ?x1552 ?x1414)))
 (let ((?x1744 (rest ?x1414)))
 (let (($x1771 (= ?x1552 ?x1744)))
 (let (($x1748 ((_ is stack ) ?x1414)))
 (let (($x1749 (= c____________ right-to-center)))
 (let (($x1750 (and $x1749 $x1748)))
 (let (($x1751 (= c____________ right-to-left)))
 (let (($x1752 (and $x1751 $x1748)))
 (let ((?x1600 (center s____________)))
 (let ((?x1741 (top ?x1600)))
 (let ((?x1743 (stack ?x1741 ?x1414)))
 (let (($x1770 (= ?x1552 ?x1743)))
 (let (($x1753 ((_ is stack ) ?x1600)))
 (let (($x1754 (= c____________ center-to-right)))
 (let (($x1755 (and $x1754 $x1753)))
 (let (($x1756 (= c____________ center-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1380 (left s____________)))
 (let (($x1758 ((_ is stack ) ?x1380)))
 (let (($x1759 (= c____________ left-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1791 (ite $x1760 $x1774 (ite $x1757 $x1774 (ite $x1755 $x1770 (ite $x1752 $x1771 (ite $x1750 $x1771 $x1774)))))))
 (let ((?x1598 (top ?x1380)))
 (let ((?x1737 (stack ?x1598 ?x1414)))
 (let (($x1766 (= ?x1552 ?x1737)))
 (let (($x1761 (= c____________ left-to-center)))
 (let (($x1762 (and $x1761 $x1758)))
 (ite $x1762 $x1766 $x1791)))))))))))))))))))))))))))))))
(assert
 (let ((?x1600 (center s____________)))
 (let ((?x1738 (center s_____________)))
 (let (($x1776 (= ?x1738 ?x1600)))
 (let ((?x1414 (right s____________)))
 (let ((?x1745 (top ?x1414)))
 (let ((?x1747 (stack ?x1745 ?x1600)))
 (let (($x1773 (= ?x1738 ?x1747)))
 (let (($x1748 ((_ is stack ) ?x1414)))
 (let (($x1749 (= c____________ right-to-center)))
 (let (($x1750 (and $x1749 $x1748)))
 (let (($x1751 (= c____________ right-to-left)))
 (let (($x1752 (and $x1751 $x1748)))
 (let ((?x1740 (rest ?x1600)))
 (let (($x1768 (= ?x1738 ?x1740)))
 (let (($x1753 ((_ is stack ) ?x1600)))
 (let (($x1754 (= c____________ center-to-right)))
 (let (($x1755 (and $x1754 $x1753)))
 (let (($x1756 (= c____________ center-to-left)))
 (let (($x1757 (and $x1756 $x1753)))
 (let ((?x1380 (left s____________)))
 (let ((?x1598 (top ?x1380)))
 (let ((?x1739 (stack ?x1598 ?x1600)))
 (let (($x1767 (= ?x1738 ?x1739)))
 (let (($x1758 ((_ is stack ) ?x1380)))
 (let (($x1759 (= c____________ left-to-right)))
 (let (($x1760 (and $x1759 $x1758)))
 (let (($x1790 (ite $x1760 $x1767 (ite $x1757 $x1768 (ite $x1755 $x1768 (ite $x1752 $x1776 (ite $x1750 $x1773 $x1776)))))))
 (let (($x1761 (= c____________ left-to-center)))
 (let (($x1762 (and $x1761 $x1758)))
 (ite $x1762 $x1776 $x1790)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1518 (left s_____________)))
 (let ((?x1656 (left s______________)))
 (let (($x1916 (= ?x1656 ?x1518)))
 (let ((?x1552 (right s_____________)))
 (let ((?x1883 (top ?x1552)))
 (let ((?x1884 (stack ?x1883 ?x1518)))
 (let (($x1910 (= ?x1656 ?x1884)))
 (let (($x1886 ((_ is stack ) ?x1552)))
 (let (($x1889 (= c_____________ right-to-left)))
 (let (($x1890 (and $x1889 $x1886)))
 (let ((?x1738 (center s_____________)))
 (let (($x1891 ((_ is stack ) ?x1738)))
 (let (($x1892 (= c_____________ center-to-right)))
 (let (($x1893 (and $x1892 $x1891)))
 (let ((?x1879 (top ?x1738)))
 (let ((?x1880 (stack ?x1879 ?x1518)))
 (let (($x1907 (= ?x1656 ?x1880)))
 (let (($x1894 (= c_____________ center-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1689 (rest ?x1518)))
 (let (($x1903 (= ?x1656 ?x1689)))
 (let (($x1896 ((_ is stack ) ?x1518)))
 (let (($x1897 (= c_____________ left-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1899 (= c_____________ left-to-center)))
 (let (($x1900 (and $x1899 $x1896)))
 (ite $x1900 $x1903 (ite $x1898 $x1903 (ite $x1895 $x1907 (ite $x1893 $x1916 (ite $x1890 $x1910 $x1916))))))))))))))))))))))))))))))))
(assert
 (let ((?x1552 (right s_____________)))
 (let ((?x1690 (right s______________)))
 (let (($x1912 (= ?x1690 ?x1552)))
 (let ((?x1882 (rest ?x1552)))
 (let (($x1909 (= ?x1690 ?x1882)))
 (let (($x1886 ((_ is stack ) ?x1552)))
 (let (($x1887 (= c_____________ right-to-center)))
 (let (($x1888 (and $x1887 $x1886)))
 (let (($x1889 (= c_____________ right-to-left)))
 (let (($x1890 (and $x1889 $x1886)))
 (let ((?x1738 (center s_____________)))
 (let ((?x1879 (top ?x1738)))
 (let ((?x1881 (stack ?x1879 ?x1552)))
 (let (($x1908 (= ?x1690 ?x1881)))
 (let (($x1891 ((_ is stack ) ?x1738)))
 (let (($x1892 (= c_____________ center-to-right)))
 (let (($x1893 (and $x1892 $x1891)))
 (let (($x1894 (= c_____________ center-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1518 (left s_____________)))
 (let (($x1896 ((_ is stack ) ?x1518)))
 (let (($x1897 (= c_____________ left-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1929 (ite $x1898 $x1912 (ite $x1895 $x1912 (ite $x1893 $x1908 (ite $x1890 $x1909 (ite $x1888 $x1909 $x1912)))))))
 (let ((?x1736 (top ?x1518)))
 (let ((?x1875 (stack ?x1736 ?x1552)))
 (let (($x1904 (= ?x1690 ?x1875)))
 (let (($x1899 (= c_____________ left-to-center)))
 (let (($x1900 (and $x1899 $x1896)))
 (ite $x1900 $x1904 $x1929)))))))))))))))))))))))))))))))
(assert
 (let ((?x1738 (center s_____________)))
 (let ((?x1876 (center s______________)))
 (let (($x1914 (= ?x1876 ?x1738)))
 (let ((?x1552 (right s_____________)))
 (let ((?x1883 (top ?x1552)))
 (let ((?x1885 (stack ?x1883 ?x1738)))
 (let (($x1911 (= ?x1876 ?x1885)))
 (let (($x1886 ((_ is stack ) ?x1552)))
 (let (($x1887 (= c_____________ right-to-center)))
 (let (($x1888 (and $x1887 $x1886)))
 (let (($x1889 (= c_____________ right-to-left)))
 (let (($x1890 (and $x1889 $x1886)))
 (let ((?x1878 (rest ?x1738)))
 (let (($x1906 (= ?x1876 ?x1878)))
 (let (($x1891 ((_ is stack ) ?x1738)))
 (let (($x1892 (= c_____________ center-to-right)))
 (let (($x1893 (and $x1892 $x1891)))
 (let (($x1894 (= c_____________ center-to-left)))
 (let (($x1895 (and $x1894 $x1891)))
 (let ((?x1518 (left s_____________)))
 (let ((?x1736 (top ?x1518)))
 (let ((?x1877 (stack ?x1736 ?x1738)))
 (let (($x1905 (= ?x1876 ?x1877)))
 (let (($x1896 ((_ is stack ) ?x1518)))
 (let (($x1897 (= c_____________ left-to-right)))
 (let (($x1898 (and $x1897 $x1896)))
 (let (($x1928 (ite $x1898 $x1905 (ite $x1895 $x1906 (ite $x1893 $x1906 (ite $x1890 $x1914 (ite $x1888 $x1911 $x1914)))))))
 (let (($x1899 (= c_____________ left-to-center)))
 (let (($x1900 (and $x1899 $x1896)))
 (ite $x1900 $x1914 $x1928)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1656 (left s______________)))
 (let ((?x1794 (left s_______________)))
 (let (($x2054 (= ?x1794 ?x1656)))
 (let ((?x1690 (right s______________)))
 (let ((?x2021 (top ?x1690)))
 (let ((?x2022 (stack ?x2021 ?x1656)))
 (let (($x2048 (= ?x1794 ?x2022)))
 (let (($x2024 ((_ is stack ) ?x1690)))
 (let (($x2027 (= c______________ right-to-left)))
 (let (($x2028 (and $x2027 $x2024)))
 (let ((?x1876 (center s______________)))
 (let (($x2029 ((_ is stack ) ?x1876)))
 (let (($x2030 (= c______________ center-to-right)))
 (let (($x2031 (and $x2030 $x2029)))
 (let ((?x2017 (top ?x1876)))
 (let ((?x2018 (stack ?x2017 ?x1656)))
 (let (($x2045 (= ?x1794 ?x2018)))
 (let (($x2032 (= c______________ center-to-left)))
 (let (($x2033 (and $x2032 $x2029)))
 (let ((?x1827 (rest ?x1656)))
 (let (($x2041 (= ?x1794 ?x1827)))
 (let (($x2034 ((_ is stack ) ?x1656)))
 (let (($x2035 (= c______________ left-to-right)))
 (let (($x2036 (and $x2035 $x2034)))
 (let (($x2037 (= c______________ left-to-center)))
 (let (($x2038 (and $x2037 $x2034)))
 (ite $x2038 $x2041 (ite $x2036 $x2041 (ite $x2033 $x2045 (ite $x2031 $x2054 (ite $x2028 $x2048 $x2054))))))))))))))))))))))))))))))))
(assert
 (let ((?x1690 (right s______________)))
 (let ((?x1828 (right s_______________)))
 (let (($x2050 (= ?x1828 ?x1690)))
 (let ((?x2020 (rest ?x1690)))
 (let (($x2047 (= ?x1828 ?x2020)))
 (let (($x2024 ((_ is stack ) ?x1690)))
 (let (($x2025 (= c______________ right-to-center)))
 (let (($x2026 (and $x2025 $x2024)))
 (let (($x2027 (= c______________ right-to-left)))
 (let (($x2028 (and $x2027 $x2024)))
 (let ((?x1876 (center s______________)))
 (let ((?x2017 (top ?x1876)))
 (let ((?x2019 (stack ?x2017 ?x1690)))
 (let (($x2046 (= ?x1828 ?x2019)))
 (let (($x2029 ((_ is stack ) ?x1876)))
 (let (($x2030 (= c______________ center-to-right)))
 (let (($x2031 (and $x2030 $x2029)))
 (let (($x2032 (= c______________ center-to-left)))
 (let (($x2033 (and $x2032 $x2029)))
 (let ((?x1656 (left s______________)))
 (let (($x2034 ((_ is stack ) ?x1656)))
 (let (($x2035 (= c______________ left-to-right)))
 (let (($x2036 (and $x2035 $x2034)))
 (let (($x2067 (ite $x2036 $x2050 (ite $x2033 $x2050 (ite $x2031 $x2046 (ite $x2028 $x2047 (ite $x2026 $x2047 $x2050)))))))
 (let ((?x1874 (top ?x1656)))
 (let ((?x2013 (stack ?x1874 ?x1690)))
 (let (($x2042 (= ?x1828 ?x2013)))
 (let (($x2037 (= c______________ left-to-center)))
 (let (($x2038 (and $x2037 $x2034)))
 (ite $x2038 $x2042 $x2067)))))))))))))))))))))))))))))))
(assert
 (let ((?x1876 (center s______________)))
 (let ((?x2014 (center s_______________)))
 (let (($x2052 (= ?x2014 ?x1876)))
 (let ((?x1690 (right s______________)))
 (let ((?x2021 (top ?x1690)))
 (let ((?x2023 (stack ?x2021 ?x1876)))
 (let (($x2049 (= ?x2014 ?x2023)))
 (let (($x2024 ((_ is stack ) ?x1690)))
 (let (($x2025 (= c______________ right-to-center)))
 (let (($x2026 (and $x2025 $x2024)))
 (let (($x2027 (= c______________ right-to-left)))
 (let (($x2028 (and $x2027 $x2024)))
 (let ((?x2016 (rest ?x1876)))
 (let (($x2044 (= ?x2014 ?x2016)))
 (let (($x2029 ((_ is stack ) ?x1876)))
 (let (($x2030 (= c______________ center-to-right)))
 (let (($x2031 (and $x2030 $x2029)))
 (let (($x2032 (= c______________ center-to-left)))
 (let (($x2033 (and $x2032 $x2029)))
 (let ((?x1656 (left s______________)))
 (let ((?x1874 (top ?x1656)))
 (let ((?x2015 (stack ?x1874 ?x1876)))
 (let (($x2043 (= ?x2014 ?x2015)))
 (let (($x2034 ((_ is stack ) ?x1656)))
 (let (($x2035 (= c______________ left-to-right)))
 (let (($x2036 (and $x2035 $x2034)))
 (let (($x2066 (ite $x2036 $x2043 (ite $x2033 $x2044 (ite $x2031 $x2044 (ite $x2028 $x2052 (ite $x2026 $x2049 $x2052)))))))
 (let (($x2037 (= c______________ left-to-center)))
 (let (($x2038 (and $x2037 $x2034)))
 (ite $x2038 $x2052 $x2066)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1794 (left s_______________)))
 (let ((?x1932 (left s________________)))
 (let (($x2192 (= ?x1932 ?x1794)))
 (let ((?x1828 (right s_______________)))
 (let ((?x2159 (top ?x1828)))
 (let ((?x2160 (stack ?x2159 ?x1794)))
 (let (($x2186 (= ?x1932 ?x2160)))
 (let (($x2162 ((_ is stack ) ?x1828)))
 (let (($x2165 (= c_______________ right-to-left)))
 (let (($x2166 (and $x2165 $x2162)))
 (let ((?x2014 (center s_______________)))
 (let (($x2167 ((_ is stack ) ?x2014)))
 (let (($x2168 (= c_______________ center-to-right)))
 (let (($x2169 (and $x2168 $x2167)))
 (let ((?x2155 (top ?x2014)))
 (let ((?x2156 (stack ?x2155 ?x1794)))
 (let (($x2183 (= ?x1932 ?x2156)))
 (let (($x2170 (= c_______________ center-to-left)))
 (let (($x2171 (and $x2170 $x2167)))
 (let ((?x1965 (rest ?x1794)))
 (let (($x2179 (= ?x1932 ?x1965)))
 (let (($x2172 ((_ is stack ) ?x1794)))
 (let (($x2173 (= c_______________ left-to-right)))
 (let (($x2174 (and $x2173 $x2172)))
 (let (($x2175 (= c_______________ left-to-center)))
 (let (($x2176 (and $x2175 $x2172)))
 (ite $x2176 $x2179 (ite $x2174 $x2179 (ite $x2171 $x2183 (ite $x2169 $x2192 (ite $x2166 $x2186 $x2192))))))))))))))))))))))))))))))))
(assert
 (let ((?x1828 (right s_______________)))
 (let ((?x1966 (right s________________)))
 (let (($x2188 (= ?x1966 ?x1828)))
 (let ((?x2158 (rest ?x1828)))
 (let (($x2185 (= ?x1966 ?x2158)))
 (let (($x2162 ((_ is stack ) ?x1828)))
 (let (($x2163 (= c_______________ right-to-center)))
 (let (($x2164 (and $x2163 $x2162)))
 (let (($x2165 (= c_______________ right-to-left)))
 (let (($x2166 (and $x2165 $x2162)))
 (let ((?x2014 (center s_______________)))
 (let ((?x2155 (top ?x2014)))
 (let ((?x2157 (stack ?x2155 ?x1828)))
 (let (($x2184 (= ?x1966 ?x2157)))
 (let (($x2167 ((_ is stack ) ?x2014)))
 (let (($x2168 (= c_______________ center-to-right)))
 (let (($x2169 (and $x2168 $x2167)))
 (let (($x2170 (= c_______________ center-to-left)))
 (let (($x2171 (and $x2170 $x2167)))
 (let ((?x1794 (left s_______________)))
 (let (($x2172 ((_ is stack ) ?x1794)))
 (let (($x2173 (= c_______________ left-to-right)))
 (let (($x2174 (and $x2173 $x2172)))
 (let (($x2205 (ite $x2174 $x2188 (ite $x2171 $x2188 (ite $x2169 $x2184 (ite $x2166 $x2185 (ite $x2164 $x2185 $x2188)))))))
 (let ((?x2012 (top ?x1794)))
 (let ((?x2151 (stack ?x2012 ?x1828)))
 (let (($x2180 (= ?x1966 ?x2151)))
 (let (($x2175 (= c_______________ left-to-center)))
 (let (($x2176 (and $x2175 $x2172)))
 (ite $x2176 $x2180 $x2205)))))))))))))))))))))))))))))))
(assert
 (let ((?x2014 (center s_______________)))
 (let ((?x2152 (center s________________)))
 (let (($x2190 (= ?x2152 ?x2014)))
 (let ((?x1828 (right s_______________)))
 (let ((?x2159 (top ?x1828)))
 (let ((?x2161 (stack ?x2159 ?x2014)))
 (let (($x2187 (= ?x2152 ?x2161)))
 (let (($x2162 ((_ is stack ) ?x1828)))
 (let (($x2163 (= c_______________ right-to-center)))
 (let (($x2164 (and $x2163 $x2162)))
 (let (($x2165 (= c_______________ right-to-left)))
 (let (($x2166 (and $x2165 $x2162)))
 (let ((?x2154 (rest ?x2014)))
 (let (($x2182 (= ?x2152 ?x2154)))
 (let (($x2167 ((_ is stack ) ?x2014)))
 (let (($x2168 (= c_______________ center-to-right)))
 (let (($x2169 (and $x2168 $x2167)))
 (let (($x2170 (= c_______________ center-to-left)))
 (let (($x2171 (and $x2170 $x2167)))
 (let ((?x1794 (left s_______________)))
 (let ((?x2012 (top ?x1794)))
 (let ((?x2153 (stack ?x2012 ?x2014)))
 (let (($x2181 (= ?x2152 ?x2153)))
 (let (($x2172 ((_ is stack ) ?x1794)))
 (let (($x2173 (= c_______________ left-to-right)))
 (let (($x2174 (and $x2173 $x2172)))
 (let (($x2204 (ite $x2174 $x2181 (ite $x2171 $x2182 (ite $x2169 $x2182 (ite $x2166 $x2190 (ite $x2164 $x2187 $x2190)))))))
 (let (($x2175 (= c_______________ left-to-center)))
 (let (($x2176 (and $x2175 $x2172)))
 (ite $x2176 $x2190 $x2204)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1932 (left s________________)))
 (let ((?x2070 (left s_________________)))
 (let (($x2330 (= ?x2070 ?x1932)))
 (let ((?x1966 (right s________________)))
 (let ((?x2297 (top ?x1966)))
 (let ((?x2298 (stack ?x2297 ?x1932)))
 (let (($x2324 (= ?x2070 ?x2298)))
 (let (($x2300 ((_ is stack ) ?x1966)))
 (let (($x2303 (= c________________ right-to-left)))
 (let (($x2304 (and $x2303 $x2300)))
 (let ((?x2152 (center s________________)))
 (let (($x2305 ((_ is stack ) ?x2152)))
 (let (($x2306 (= c________________ center-to-right)))
 (let (($x2307 (and $x2306 $x2305)))
 (let ((?x2293 (top ?x2152)))
 (let ((?x2294 (stack ?x2293 ?x1932)))
 (let (($x2321 (= ?x2070 ?x2294)))
 (let (($x2308 (= c________________ center-to-left)))
 (let (($x2309 (and $x2308 $x2305)))
 (let ((?x2103 (rest ?x1932)))
 (let (($x2317 (= ?x2070 ?x2103)))
 (let (($x2310 ((_ is stack ) ?x1932)))
 (let (($x2311 (= c________________ left-to-right)))
 (let (($x2312 (and $x2311 $x2310)))
 (let (($x2313 (= c________________ left-to-center)))
 (let (($x2314 (and $x2313 $x2310)))
 (ite $x2314 $x2317 (ite $x2312 $x2317 (ite $x2309 $x2321 (ite $x2307 $x2330 (ite $x2304 $x2324 $x2330))))))))))))))))))))))))))))))))
(assert
 (let ((?x1966 (right s________________)))
 (let ((?x2104 (right s_________________)))
 (let (($x2326 (= ?x2104 ?x1966)))
 (let ((?x2296 (rest ?x1966)))
 (let (($x2323 (= ?x2104 ?x2296)))
 (let (($x2300 ((_ is stack ) ?x1966)))
 (let (($x2301 (= c________________ right-to-center)))
 (let (($x2302 (and $x2301 $x2300)))
 (let (($x2303 (= c________________ right-to-left)))
 (let (($x2304 (and $x2303 $x2300)))
 (let ((?x2152 (center s________________)))
 (let ((?x2293 (top ?x2152)))
 (let ((?x2295 (stack ?x2293 ?x1966)))
 (let (($x2322 (= ?x2104 ?x2295)))
 (let (($x2305 ((_ is stack ) ?x2152)))
 (let (($x2306 (= c________________ center-to-right)))
 (let (($x2307 (and $x2306 $x2305)))
 (let (($x2308 (= c________________ center-to-left)))
 (let (($x2309 (and $x2308 $x2305)))
 (let ((?x1932 (left s________________)))
 (let (($x2310 ((_ is stack ) ?x1932)))
 (let (($x2311 (= c________________ left-to-right)))
 (let (($x2312 (and $x2311 $x2310)))
 (let (($x2343 (ite $x2312 $x2326 (ite $x2309 $x2326 (ite $x2307 $x2322 (ite $x2304 $x2323 (ite $x2302 $x2323 $x2326)))))))
 (let ((?x2150 (top ?x1932)))
 (let ((?x2289 (stack ?x2150 ?x1966)))
 (let (($x2318 (= ?x2104 ?x2289)))
 (let (($x2313 (= c________________ left-to-center)))
 (let (($x2314 (and $x2313 $x2310)))
 (ite $x2314 $x2318 $x2343)))))))))))))))))))))))))))))))
(assert
 (let ((?x2152 (center s________________)))
 (let ((?x2290 (center s_________________)))
 (let (($x2328 (= ?x2290 ?x2152)))
 (let ((?x1966 (right s________________)))
 (let ((?x2297 (top ?x1966)))
 (let ((?x2299 (stack ?x2297 ?x2152)))
 (let (($x2325 (= ?x2290 ?x2299)))
 (let (($x2300 ((_ is stack ) ?x1966)))
 (let (($x2301 (= c________________ right-to-center)))
 (let (($x2302 (and $x2301 $x2300)))
 (let (($x2303 (= c________________ right-to-left)))
 (let (($x2304 (and $x2303 $x2300)))
 (let ((?x2292 (rest ?x2152)))
 (let (($x2320 (= ?x2290 ?x2292)))
 (let (($x2305 ((_ is stack ) ?x2152)))
 (let (($x2306 (= c________________ center-to-right)))
 (let (($x2307 (and $x2306 $x2305)))
 (let (($x2308 (= c________________ center-to-left)))
 (let (($x2309 (and $x2308 $x2305)))
 (let ((?x1932 (left s________________)))
 (let ((?x2150 (top ?x1932)))
 (let ((?x2291 (stack ?x2150 ?x2152)))
 (let (($x2319 (= ?x2290 ?x2291)))
 (let (($x2310 ((_ is stack ) ?x1932)))
 (let (($x2311 (= c________________ left-to-right)))
 (let (($x2312 (and $x2311 $x2310)))
 (let (($x2342 (ite $x2312 $x2319 (ite $x2309 $x2320 (ite $x2307 $x2320 (ite $x2304 $x2328 (ite $x2302 $x2325 $x2328)))))))
 (let (($x2313 (= c________________ left-to-center)))
 (let (($x2314 (and $x2313 $x2310)))
 (ite $x2314 $x2328 $x2342)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2070 (left s_________________)))
 (let ((?x2208 (left s__________________)))
 (let (($x2468 (= ?x2208 ?x2070)))
 (let ((?x2104 (right s_________________)))
 (let ((?x2435 (top ?x2104)))
 (let ((?x2436 (stack ?x2435 ?x2070)))
 (let (($x2462 (= ?x2208 ?x2436)))
 (let (($x2438 ((_ is stack ) ?x2104)))
 (let (($x2441 (= c_________________ right-to-left)))
 (let (($x2442 (and $x2441 $x2438)))
 (let ((?x2290 (center s_________________)))
 (let (($x2443 ((_ is stack ) ?x2290)))
 (let (($x2444 (= c_________________ center-to-right)))
 (let (($x2445 (and $x2444 $x2443)))
 (let ((?x2431 (top ?x2290)))
 (let ((?x2432 (stack ?x2431 ?x2070)))
 (let (($x2459 (= ?x2208 ?x2432)))
 (let (($x2446 (= c_________________ center-to-left)))
 (let (($x2447 (and $x2446 $x2443)))
 (let ((?x2241 (rest ?x2070)))
 (let (($x2455 (= ?x2208 ?x2241)))
 (let (($x2448 ((_ is stack ) ?x2070)))
 (let (($x2449 (= c_________________ left-to-right)))
 (let (($x2450 (and $x2449 $x2448)))
 (let (($x2451 (= c_________________ left-to-center)))
 (let (($x2452 (and $x2451 $x2448)))
 (ite $x2452 $x2455 (ite $x2450 $x2455 (ite $x2447 $x2459 (ite $x2445 $x2468 (ite $x2442 $x2462 $x2468))))))))))))))))))))))))))))))))
(assert
 (let ((?x2104 (right s_________________)))
 (let ((?x2242 (right s__________________)))
 (let (($x2464 (= ?x2242 ?x2104)))
 (let ((?x2434 (rest ?x2104)))
 (let (($x2461 (= ?x2242 ?x2434)))
 (let (($x2438 ((_ is stack ) ?x2104)))
 (let (($x2439 (= c_________________ right-to-center)))
 (let (($x2440 (and $x2439 $x2438)))
 (let (($x2441 (= c_________________ right-to-left)))
 (let (($x2442 (and $x2441 $x2438)))
 (let ((?x2290 (center s_________________)))
 (let ((?x2431 (top ?x2290)))
 (let ((?x2433 (stack ?x2431 ?x2104)))
 (let (($x2460 (= ?x2242 ?x2433)))
 (let (($x2443 ((_ is stack ) ?x2290)))
 (let (($x2444 (= c_________________ center-to-right)))
 (let (($x2445 (and $x2444 $x2443)))
 (let (($x2446 (= c_________________ center-to-left)))
 (let (($x2447 (and $x2446 $x2443)))
 (let ((?x2070 (left s_________________)))
 (let (($x2448 ((_ is stack ) ?x2070)))
 (let (($x2449 (= c_________________ left-to-right)))
 (let (($x2450 (and $x2449 $x2448)))
 (let (($x2481 (ite $x2450 $x2464 (ite $x2447 $x2464 (ite $x2445 $x2460 (ite $x2442 $x2461 (ite $x2440 $x2461 $x2464)))))))
 (let ((?x2288 (top ?x2070)))
 (let ((?x2427 (stack ?x2288 ?x2104)))
 (let (($x2456 (= ?x2242 ?x2427)))
 (let (($x2451 (= c_________________ left-to-center)))
 (let (($x2452 (and $x2451 $x2448)))
 (ite $x2452 $x2456 $x2481)))))))))))))))))))))))))))))))
(assert
 (let ((?x2290 (center s_________________)))
 (let ((?x2428 (center s__________________)))
 (let (($x2466 (= ?x2428 ?x2290)))
 (let ((?x2104 (right s_________________)))
 (let ((?x2435 (top ?x2104)))
 (let ((?x2437 (stack ?x2435 ?x2290)))
 (let (($x2463 (= ?x2428 ?x2437)))
 (let (($x2438 ((_ is stack ) ?x2104)))
 (let (($x2439 (= c_________________ right-to-center)))
 (let (($x2440 (and $x2439 $x2438)))
 (let (($x2441 (= c_________________ right-to-left)))
 (let (($x2442 (and $x2441 $x2438)))
 (let ((?x2430 (rest ?x2290)))
 (let (($x2458 (= ?x2428 ?x2430)))
 (let (($x2443 ((_ is stack ) ?x2290)))
 (let (($x2444 (= c_________________ center-to-right)))
 (let (($x2445 (and $x2444 $x2443)))
 (let (($x2446 (= c_________________ center-to-left)))
 (let (($x2447 (and $x2446 $x2443)))
 (let ((?x2070 (left s_________________)))
 (let ((?x2288 (top ?x2070)))
 (let ((?x2429 (stack ?x2288 ?x2290)))
 (let (($x2457 (= ?x2428 ?x2429)))
 (let (($x2448 ((_ is stack ) ?x2070)))
 (let (($x2449 (= c_________________ left-to-right)))
 (let (($x2450 (and $x2449 $x2448)))
 (let (($x2480 (ite $x2450 $x2457 (ite $x2447 $x2458 (ite $x2445 $x2458 (ite $x2442 $x2466 (ite $x2440 $x2463 $x2466)))))))
 (let (($x2451 (= c_________________ left-to-center)))
 (let (($x2452 (and $x2451 $x2448)))
 (ite $x2452 $x2466 $x2480)))))))))))))))))))))))))))))))
(assert
 (let ((?x59 (stack I empty)))
 (let ((?x2242 (right s__________________)))
 (let (($x2484 (= ?x2242 ?x59)))
 (let ((?x58 (stack G (stack H (stack A (stack D (stack L (stack O empty))))))))
 (let ((?x2428 (center s__________________)))
 (let (($x2515 (= ?x2428 ?x58)))
 (let ((?x49 (stack C (stack B (stack K (stack P (stack M (stack J empty))))))))
 (let ((?x52 (stack N (stack F (stack E ?x49)))))
 (let ((?x2208 (left s__________________)))
 (let (($x2516 (= ?x2208 ?x52)))
 (let (($x2518 (not (and $x2516 $x2515 $x2484))))
 (not $x2518)))))))))))))
(check-sat)
(exit)
