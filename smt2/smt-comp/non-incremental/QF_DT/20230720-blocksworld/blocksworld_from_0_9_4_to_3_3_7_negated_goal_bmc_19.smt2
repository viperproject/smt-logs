(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(declare-fun c!19 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x97 (left s_tmp_)))
 (= ?x97 empty)))
(assert
 (let ((?x25 (stack I empty)))
 (let ((?x26 (stack H ?x25)))
 (let ((?x27 (stack M ?x26)))
 (let ((?x28 (stack K ?x27)))
 (let ((?x29 (stack F ?x28)))
 (let ((?x30 (stack B ?x29)))
 (let ((?x31 (stack E ?x30)))
 (let ((?x32 (stack L ?x31)))
 (let ((?x33 (stack G ?x32)))
 (let ((?x100 (center s_tmp__)))
 (= ?x100 ?x33))))))))))))
(assert
 (let ((?x34 (stack A empty)))
 (let ((?x35 (stack C ?x34)))
 (let ((?x36 (stack D ?x35)))
 (let ((?x37 (stack J ?x36)))
 (let ((?x103 (right s_tmp___)))
 (= ?x103 ?x37)))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x130 (left s_tmp__)))
 (= (left s_tmp___) ?x130)))
(assert
 (let ((?x100 (center s_tmp__)))
 (= (center s_tmp___) ?x100)))
(assert
 (let ((?x134 (center s_tmp_)))
 (= ?x134 (center s_tmp))))
(assert
 (let ((?x137 (right s_tmp_)))
 (= ?x137 (right s_tmp))))
(assert
 (let ((?x97 (left s_tmp_)))
 (let ((?x130 (left s_tmp__)))
 (= ?x130 ?x97))))
(assert
 (let ((?x137 (right s_tmp_)))
 (let ((?x141 (right s_tmp__)))
 (= ?x141 ?x137))))
(assert
 (= c__ c!1))
(assert
 (let ((?x74 (left s_)))
 (let ((?x239 (left s__)))
 (let (($x269 (= ?x239 ?x74)))
 (let ((?x77 (right s_)))
 (let (($x224 ((_ is stack ) ?x77)))
 (let (($x233 (= c_ right-to-left)))
 (let (($x243 (and $x233 $x224)))
 (let ((?x79 (center s_)))
 (let (($x244 ((_ is stack ) ?x79)))
 (let (($x245 (= c_ center-to-right)))
 (let (($x246 (and $x245 $x244)))
 (let (($x247 (= c_ center-to-left)))
 (let (($x248 (and $x247 $x244)))
 (let (($x278 (ite $x248 (= ?x239 (stack (top ?x79) ?x74)) (ite $x246 $x269 (ite $x243 (= ?x239 (stack (top ?x77) ?x74)) $x269)))))
 (let (($x256 (= ?x239 (rest ?x74))))
 (let (($x249 ((_ is stack ) ?x74)))
 (let (($x251 (and (= c_ left-to-right) $x249)))
 (let (($x253 (and (= c_ left-to-center) $x249)))
 (ite $x253 $x256 (ite $x251 $x256 $x278)))))))))))))))))))))
(assert
 (let ((?x77 (right s_)))
 (let ((?x235 (right s__)))
 (let (($x265 (= ?x235 ?x77)))
 (let (($x262 (= ?x235 (rest ?x77))))
 (let (($x224 ((_ is stack ) ?x77)))
 (let (($x231 (= c_ right-to-center)))
 (let (($x232 (and $x231 $x224)))
 (let (($x233 (= c_ right-to-left)))
 (let (($x243 (and $x233 $x224)))
 (let ((?x79 (center s_)))
 (let (($x244 ((_ is stack ) ?x79)))
 (let (($x245 (= c_ center-to-right)))
 (let (($x246 (and $x245 $x244)))
 (let (($x275 (ite $x246 (= ?x235 (stack (top ?x79) ?x77)) (ite $x243 $x262 (ite $x232 $x262 $x265)))))
 (let (($x247 (= c_ center-to-left)))
 (let (($x248 (and $x247 $x244)))
 (let ((?x74 (left s_)))
 (let (($x249 ((_ is stack ) ?x74)))
 (let (($x251 (and (= c_ left-to-right) $x249)))
 (let (($x253 (and (= c_ left-to-center) $x249)))
 (ite $x253 (= ?x235 (stack (top ?x74) ?x77)) (ite $x251 $x265 (ite $x248 $x265 $x275))))))))))))))))))))))))
(assert
 (let ((?x79 (center s_)))
 (let ((?x241 (center s__)))
 (let (($x267 (= ?x241 ?x79)))
 (let ((?x77 (right s_)))
 (let (($x224 ((_ is stack ) ?x77)))
 (let (($x231 (= c_ right-to-center)))
 (let (($x232 (and $x231 $x224)))
 (let (($x233 (= c_ right-to-left)))
 (let (($x243 (and $x233 $x224)))
 (let (($x259 (= ?x241 (rest ?x79))))
 (let (($x244 ((_ is stack ) ?x79)))
 (let (($x245 (= c_ center-to-right)))
 (let (($x246 (and $x245 $x244)))
 (let (($x274 (ite $x246 $x259 (ite $x243 $x267 (ite $x232 (= ?x241 (stack (top ?x77) ?x79)) $x267)))))
 (let (($x247 (= c_ center-to-left)))
 (let (($x248 (and $x247 $x244)))
 (let ((?x74 (left s_)))
 (let (($x249 ((_ is stack ) ?x74)))
 (let (($x251 (and (= c_ left-to-right) $x249)))
 (let (($x253 (and (= c_ left-to-center) $x249)))
 (ite $x253 $x267 (ite $x251 (= ?x241 (stack (top ?x74) ?x79)) (ite $x248 $x259 $x274))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x239 (left s__)))
 (let ((?x144 (left s___)))
 (let (($x380 (= ?x144 ?x239)))
 (let ((?x235 (right s__)))
 (let ((?x347 (top ?x235)))
 (let ((?x348 (stack ?x347 ?x239)))
 (let (($x374 (= ?x144 ?x348)))
 (let (($x350 ((_ is stack ) ?x235)))
 (let (($x353 (= c__ right-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x241 (center s__)))
 (let (($x355 ((_ is stack ) ?x241)))
 (let (($x356 (= c__ center-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let ((?x343 (top ?x241)))
 (let ((?x344 (stack ?x343 ?x239)))
 (let (($x371 (= ?x144 ?x344)))
 (let (($x358 (= c__ center-to-left)))
 (let (($x359 (and $x358 $x355)))
 (let ((?x146 (rest ?x239)))
 (let (($x367 (= ?x144 ?x146)))
 (let (($x360 ((_ is stack ) ?x239)))
 (let (($x361 (= c__ left-to-right)))
 (let (($x362 (and $x361 $x360)))
 (let (($x363 (= c__ left-to-center)))
 (let (($x364 (and $x363 $x360)))
 (ite $x364 $x367 (ite $x362 $x367 (ite $x359 $x371 (ite $x357 $x380 (ite $x354 $x374 $x380))))))))))))))))))))))))))))))))
(assert
 (let ((?x235 (right s__)))
 (let ((?x147 (right s___)))
 (let (($x376 (= ?x147 ?x235)))
 (let ((?x346 (rest ?x235)))
 (let (($x373 (= ?x147 ?x346)))
 (let (($x350 ((_ is stack ) ?x235)))
 (let (($x351 (= c__ right-to-center)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ right-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x241 (center s__)))
 (let ((?x343 (top ?x241)))
 (let ((?x345 (stack ?x343 ?x235)))
 (let (($x372 (= ?x147 ?x345)))
 (let (($x355 ((_ is stack ) ?x241)))
 (let (($x356 (= c__ center-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x358 (= c__ center-to-left)))
 (let (($x359 (and $x358 $x355)))
 (let ((?x239 (left s__)))
 (let (($x360 ((_ is stack ) ?x239)))
 (let (($x361 (= c__ left-to-right)))
 (let (($x362 (and $x361 $x360)))
 (let (($x393 (ite $x362 $x376 (ite $x359 $x376 (ite $x357 $x372 (ite $x354 $x373 (ite $x352 $x373 $x376)))))))
 (let ((?x221 (top ?x239)))
 (let ((?x339 (stack ?x221 ?x235)))
 (let (($x368 (= ?x147 ?x339)))
 (let (($x363 (= c__ left-to-center)))
 (let (($x364 (and $x363 $x360)))
 (ite $x364 $x368 $x393)))))))))))))))))))))))))))))))
(assert
 (let ((?x241 (center s__)))
 (let ((?x340 (center s___)))
 (let (($x378 (= ?x340 ?x241)))
 (let ((?x235 (right s__)))
 (let ((?x347 (top ?x235)))
 (let ((?x349 (stack ?x347 ?x241)))
 (let (($x375 (= ?x340 ?x349)))
 (let (($x350 ((_ is stack ) ?x235)))
 (let (($x351 (= c__ right-to-center)))
 (let (($x352 (and $x351 $x350)))
 (let (($x353 (= c__ right-to-left)))
 (let (($x354 (and $x353 $x350)))
 (let ((?x342 (rest ?x241)))
 (let (($x370 (= ?x340 ?x342)))
 (let (($x355 ((_ is stack ) ?x241)))
 (let (($x356 (= c__ center-to-right)))
 (let (($x357 (and $x356 $x355)))
 (let (($x358 (= c__ center-to-left)))
 (let (($x359 (and $x358 $x355)))
 (let ((?x239 (left s__)))
 (let ((?x221 (top ?x239)))
 (let ((?x341 (stack ?x221 ?x241)))
 (let (($x369 (= ?x340 ?x341)))
 (let (($x360 ((_ is stack ) ?x239)))
 (let (($x361 (= c__ left-to-right)))
 (let (($x362 (and $x361 $x360)))
 (let (($x392 (ite $x362 $x369 (ite $x359 $x370 (ite $x357 $x370 (ite $x354 $x378 (ite $x352 $x375 $x378)))))))
 (let (($x363 (= c__ left-to-center)))
 (let (($x364 (and $x363 $x360)))
 (ite $x364 $x378 $x392)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x144 (left s___)))
 (let ((?x285 (left s____)))
 (let (($x518 (= ?x285 ?x144)))
 (let ((?x147 (right s___)))
 (let ((?x485 (top ?x147)))
 (let ((?x486 (stack ?x485 ?x144)))
 (let (($x512 (= ?x285 ?x486)))
 (let (($x488 ((_ is stack ) ?x147)))
 (let (($x491 (= c___ right-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x340 (center s___)))
 (let (($x493 ((_ is stack ) ?x340)))
 (let (($x494 (= c___ center-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let ((?x481 (top ?x340)))
 (let ((?x482 (stack ?x481 ?x144)))
 (let (($x509 (= ?x285 ?x482)))
 (let (($x496 (= c___ center-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x315 (rest ?x144)))
 (let (($x505 (= ?x285 ?x315)))
 (let (($x498 ((_ is stack ) ?x144)))
 (let (($x499 (= c___ left-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let (($x501 (= c___ left-to-center)))
 (let (($x502 (and $x501 $x498)))
 (ite $x502 $x505 (ite $x500 $x505 (ite $x497 $x509 (ite $x495 $x518 (ite $x492 $x512 $x518))))))))))))))))))))))))))))))))
(assert
 (let ((?x147 (right s___)))
 (let ((?x316 (right s____)))
 (let (($x514 (= ?x316 ?x147)))
 (let ((?x484 (rest ?x147)))
 (let (($x511 (= ?x316 ?x484)))
 (let (($x488 ((_ is stack ) ?x147)))
 (let (($x489 (= c___ right-to-center)))
 (let (($x490 (and $x489 $x488)))
 (let (($x491 (= c___ right-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x340 (center s___)))
 (let ((?x481 (top ?x340)))
 (let ((?x483 (stack ?x481 ?x147)))
 (let (($x510 (= ?x316 ?x483)))
 (let (($x493 ((_ is stack ) ?x340)))
 (let (($x494 (= c___ center-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let (($x496 (= c___ center-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x144 (left s___)))
 (let (($x498 ((_ is stack ) ?x144)))
 (let (($x499 (= c___ left-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let (($x531 (ite $x500 $x514 (ite $x497 $x514 (ite $x495 $x510 (ite $x492 $x511 (ite $x490 $x511 $x514)))))))
 (let ((?x338 (top ?x144)))
 (let ((?x477 (stack ?x338 ?x147)))
 (let (($x506 (= ?x316 ?x477)))
 (let (($x501 (= c___ left-to-center)))
 (let (($x502 (and $x501 $x498)))
 (ite $x502 $x506 $x531)))))))))))))))))))))))))))))))
(assert
 (let ((?x340 (center s___)))
 (let ((?x478 (center s____)))
 (let (($x516 (= ?x478 ?x340)))
 (let ((?x147 (right s___)))
 (let ((?x485 (top ?x147)))
 (let ((?x487 (stack ?x485 ?x340)))
 (let (($x513 (= ?x478 ?x487)))
 (let (($x488 ((_ is stack ) ?x147)))
 (let (($x489 (= c___ right-to-center)))
 (let (($x490 (and $x489 $x488)))
 (let (($x491 (= c___ right-to-left)))
 (let (($x492 (and $x491 $x488)))
 (let ((?x480 (rest ?x340)))
 (let (($x508 (= ?x478 ?x480)))
 (let (($x493 ((_ is stack ) ?x340)))
 (let (($x494 (= c___ center-to-right)))
 (let (($x495 (and $x494 $x493)))
 (let (($x496 (= c___ center-to-left)))
 (let (($x497 (and $x496 $x493)))
 (let ((?x144 (left s___)))
 (let ((?x338 (top ?x144)))
 (let ((?x479 (stack ?x338 ?x340)))
 (let (($x507 (= ?x478 ?x479)))
 (let (($x498 ((_ is stack ) ?x144)))
 (let (($x499 (= c___ left-to-right)))
 (let (($x500 (and $x499 $x498)))
 (let (($x530 (ite $x500 $x507 (ite $x497 $x508 (ite $x495 $x508 (ite $x492 $x516 (ite $x490 $x513 $x516)))))))
 (let (($x501 (= c___ left-to-center)))
 (let (($x502 (and $x501 $x498)))
 (ite $x502 $x516 $x530)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x285 (left s____)))
 (let ((?x396 (left s_____)))
 (let (($x656 (= ?x396 ?x285)))
 (let ((?x316 (right s____)))
 (let ((?x623 (top ?x316)))
 (let ((?x624 (stack ?x623 ?x285)))
 (let (($x650 (= ?x396 ?x624)))
 (let (($x626 ((_ is stack ) ?x316)))
 (let (($x629 (= c____ right-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x478 (center s____)))
 (let (($x631 ((_ is stack ) ?x478)))
 (let (($x632 (= c____ center-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let ((?x619 (top ?x478)))
 (let ((?x620 (stack ?x619 ?x285)))
 (let (($x647 (= ?x396 ?x620)))
 (let (($x634 (= c____ center-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x429 (rest ?x285)))
 (let (($x643 (= ?x396 ?x429)))
 (let (($x636 ((_ is stack ) ?x285)))
 (let (($x637 (= c____ left-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let (($x639 (= c____ left-to-center)))
 (let (($x640 (and $x639 $x636)))
 (ite $x640 $x643 (ite $x638 $x643 (ite $x635 $x647 (ite $x633 $x656 (ite $x630 $x650 $x656))))))))))))))))))))))))))))))))
(assert
 (let ((?x316 (right s____)))
 (let ((?x430 (right s_____)))
 (let (($x652 (= ?x430 ?x316)))
 (let ((?x622 (rest ?x316)))
 (let (($x649 (= ?x430 ?x622)))
 (let (($x626 ((_ is stack ) ?x316)))
 (let (($x627 (= c____ right-to-center)))
 (let (($x628 (and $x627 $x626)))
 (let (($x629 (= c____ right-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x478 (center s____)))
 (let ((?x619 (top ?x478)))
 (let ((?x621 (stack ?x619 ?x316)))
 (let (($x648 (= ?x430 ?x621)))
 (let (($x631 ((_ is stack ) ?x478)))
 (let (($x632 (= c____ center-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let (($x634 (= c____ center-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x285 (left s____)))
 (let (($x636 ((_ is stack ) ?x285)))
 (let (($x637 (= c____ left-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let (($x669 (ite $x638 $x652 (ite $x635 $x652 (ite $x633 $x648 (ite $x630 $x649 (ite $x628 $x649 $x652)))))))
 (let ((?x476 (top ?x285)))
 (let ((?x615 (stack ?x476 ?x316)))
 (let (($x644 (= ?x430 ?x615)))
 (let (($x639 (= c____ left-to-center)))
 (let (($x640 (and $x639 $x636)))
 (ite $x640 $x644 $x669)))))))))))))))))))))))))))))))
(assert
 (let ((?x478 (center s____)))
 (let ((?x616 (center s_____)))
 (let (($x654 (= ?x616 ?x478)))
 (let ((?x316 (right s____)))
 (let ((?x623 (top ?x316)))
 (let ((?x625 (stack ?x623 ?x478)))
 (let (($x651 (= ?x616 ?x625)))
 (let (($x626 ((_ is stack ) ?x316)))
 (let (($x627 (= c____ right-to-center)))
 (let (($x628 (and $x627 $x626)))
 (let (($x629 (= c____ right-to-left)))
 (let (($x630 (and $x629 $x626)))
 (let ((?x618 (rest ?x478)))
 (let (($x646 (= ?x616 ?x618)))
 (let (($x631 ((_ is stack ) ?x478)))
 (let (($x632 (= c____ center-to-right)))
 (let (($x633 (and $x632 $x631)))
 (let (($x634 (= c____ center-to-left)))
 (let (($x635 (and $x634 $x631)))
 (let ((?x285 (left s____)))
 (let ((?x476 (top ?x285)))
 (let ((?x617 (stack ?x476 ?x478)))
 (let (($x645 (= ?x616 ?x617)))
 (let (($x636 ((_ is stack ) ?x285)))
 (let (($x637 (= c____ left-to-right)))
 (let (($x638 (and $x637 $x636)))
 (let (($x668 (ite $x638 $x645 (ite $x635 $x646 (ite $x633 $x646 (ite $x630 $x654 (ite $x628 $x651 $x654)))))))
 (let (($x639 (= c____ left-to-center)))
 (let (($x640 (and $x639 $x636)))
 (ite $x640 $x654 $x668)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x396 (left s_____)))
 (let ((?x534 (left s______)))
 (let (($x794 (= ?x534 ?x396)))
 (let ((?x430 (right s_____)))
 (let ((?x761 (top ?x430)))
 (let ((?x762 (stack ?x761 ?x396)))
 (let (($x788 (= ?x534 ?x762)))
 (let (($x764 ((_ is stack ) ?x430)))
 (let (($x767 (= c_____ right-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x616 (center s_____)))
 (let (($x769 ((_ is stack ) ?x616)))
 (let (($x770 (= c_____ center-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let ((?x757 (top ?x616)))
 (let ((?x758 (stack ?x757 ?x396)))
 (let (($x785 (= ?x534 ?x758)))
 (let (($x772 (= c_____ center-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x567 (rest ?x396)))
 (let (($x781 (= ?x534 ?x567)))
 (let (($x774 ((_ is stack ) ?x396)))
 (let (($x775 (= c_____ left-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let (($x777 (= c_____ left-to-center)))
 (let (($x778 (and $x777 $x774)))
 (ite $x778 $x781 (ite $x776 $x781 (ite $x773 $x785 (ite $x771 $x794 (ite $x768 $x788 $x794))))))))))))))))))))))))))))))))
(assert
 (let ((?x430 (right s_____)))
 (let ((?x568 (right s______)))
 (let (($x790 (= ?x568 ?x430)))
 (let ((?x760 (rest ?x430)))
 (let (($x787 (= ?x568 ?x760)))
 (let (($x764 ((_ is stack ) ?x430)))
 (let (($x765 (= c_____ right-to-center)))
 (let (($x766 (and $x765 $x764)))
 (let (($x767 (= c_____ right-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x616 (center s_____)))
 (let ((?x757 (top ?x616)))
 (let ((?x759 (stack ?x757 ?x430)))
 (let (($x786 (= ?x568 ?x759)))
 (let (($x769 ((_ is stack ) ?x616)))
 (let (($x770 (= c_____ center-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let (($x772 (= c_____ center-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x396 (left s_____)))
 (let (($x774 ((_ is stack ) ?x396)))
 (let (($x775 (= c_____ left-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let (($x807 (ite $x776 $x790 (ite $x773 $x790 (ite $x771 $x786 (ite $x768 $x787 (ite $x766 $x787 $x790)))))))
 (let ((?x614 (top ?x396)))
 (let ((?x753 (stack ?x614 ?x430)))
 (let (($x782 (= ?x568 ?x753)))
 (let (($x777 (= c_____ left-to-center)))
 (let (($x778 (and $x777 $x774)))
 (ite $x778 $x782 $x807)))))))))))))))))))))))))))))))
(assert
 (let ((?x616 (center s_____)))
 (let ((?x754 (center s______)))
 (let (($x792 (= ?x754 ?x616)))
 (let ((?x430 (right s_____)))
 (let ((?x761 (top ?x430)))
 (let ((?x763 (stack ?x761 ?x616)))
 (let (($x789 (= ?x754 ?x763)))
 (let (($x764 ((_ is stack ) ?x430)))
 (let (($x765 (= c_____ right-to-center)))
 (let (($x766 (and $x765 $x764)))
 (let (($x767 (= c_____ right-to-left)))
 (let (($x768 (and $x767 $x764)))
 (let ((?x756 (rest ?x616)))
 (let (($x784 (= ?x754 ?x756)))
 (let (($x769 ((_ is stack ) ?x616)))
 (let (($x770 (= c_____ center-to-right)))
 (let (($x771 (and $x770 $x769)))
 (let (($x772 (= c_____ center-to-left)))
 (let (($x773 (and $x772 $x769)))
 (let ((?x396 (left s_____)))
 (let ((?x614 (top ?x396)))
 (let ((?x755 (stack ?x614 ?x616)))
 (let (($x783 (= ?x754 ?x755)))
 (let (($x774 ((_ is stack ) ?x396)))
 (let (($x775 (= c_____ left-to-right)))
 (let (($x776 (and $x775 $x774)))
 (let (($x806 (ite $x776 $x783 (ite $x773 $x784 (ite $x771 $x784 (ite $x768 $x792 (ite $x766 $x789 $x792)))))))
 (let (($x777 (= c_____ left-to-center)))
 (let (($x778 (and $x777 $x774)))
 (ite $x778 $x792 $x806)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x534 (left s______)))
 (let ((?x672 (left s_______)))
 (let (($x932 (= ?x672 ?x534)))
 (let ((?x568 (right s______)))
 (let ((?x899 (top ?x568)))
 (let ((?x900 (stack ?x899 ?x534)))
 (let (($x926 (= ?x672 ?x900)))
 (let (($x902 ((_ is stack ) ?x568)))
 (let (($x905 (= c______ right-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x754 (center s______)))
 (let (($x907 ((_ is stack ) ?x754)))
 (let (($x908 (= c______ center-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let ((?x895 (top ?x754)))
 (let ((?x896 (stack ?x895 ?x534)))
 (let (($x923 (= ?x672 ?x896)))
 (let (($x910 (= c______ center-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x705 (rest ?x534)))
 (let (($x919 (= ?x672 ?x705)))
 (let (($x912 ((_ is stack ) ?x534)))
 (let (($x913 (= c______ left-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let (($x915 (= c______ left-to-center)))
 (let (($x916 (and $x915 $x912)))
 (ite $x916 $x919 (ite $x914 $x919 (ite $x911 $x923 (ite $x909 $x932 (ite $x906 $x926 $x932))))))))))))))))))))))))))))))))
(assert
 (let ((?x568 (right s______)))
 (let ((?x706 (right s_______)))
 (let (($x928 (= ?x706 ?x568)))
 (let ((?x898 (rest ?x568)))
 (let (($x925 (= ?x706 ?x898)))
 (let (($x902 ((_ is stack ) ?x568)))
 (let (($x903 (= c______ right-to-center)))
 (let (($x904 (and $x903 $x902)))
 (let (($x905 (= c______ right-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x754 (center s______)))
 (let ((?x895 (top ?x754)))
 (let ((?x897 (stack ?x895 ?x568)))
 (let (($x924 (= ?x706 ?x897)))
 (let (($x907 ((_ is stack ) ?x754)))
 (let (($x908 (= c______ center-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let (($x910 (= c______ center-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x534 (left s______)))
 (let (($x912 ((_ is stack ) ?x534)))
 (let (($x913 (= c______ left-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let (($x945 (ite $x914 $x928 (ite $x911 $x928 (ite $x909 $x924 (ite $x906 $x925 (ite $x904 $x925 $x928)))))))
 (let ((?x752 (top ?x534)))
 (let ((?x891 (stack ?x752 ?x568)))
 (let (($x920 (= ?x706 ?x891)))
 (let (($x915 (= c______ left-to-center)))
 (let (($x916 (and $x915 $x912)))
 (ite $x916 $x920 $x945)))))))))))))))))))))))))))))))
(assert
 (let ((?x754 (center s______)))
 (let ((?x892 (center s_______)))
 (let (($x930 (= ?x892 ?x754)))
 (let ((?x568 (right s______)))
 (let ((?x899 (top ?x568)))
 (let ((?x901 (stack ?x899 ?x754)))
 (let (($x927 (= ?x892 ?x901)))
 (let (($x902 ((_ is stack ) ?x568)))
 (let (($x903 (= c______ right-to-center)))
 (let (($x904 (and $x903 $x902)))
 (let (($x905 (= c______ right-to-left)))
 (let (($x906 (and $x905 $x902)))
 (let ((?x894 (rest ?x754)))
 (let (($x922 (= ?x892 ?x894)))
 (let (($x907 ((_ is stack ) ?x754)))
 (let (($x908 (= c______ center-to-right)))
 (let (($x909 (and $x908 $x907)))
 (let (($x910 (= c______ center-to-left)))
 (let (($x911 (and $x910 $x907)))
 (let ((?x534 (left s______)))
 (let ((?x752 (top ?x534)))
 (let ((?x893 (stack ?x752 ?x754)))
 (let (($x921 (= ?x892 ?x893)))
 (let (($x912 ((_ is stack ) ?x534)))
 (let (($x913 (= c______ left-to-right)))
 (let (($x914 (and $x913 $x912)))
 (let (($x944 (ite $x914 $x921 (ite $x911 $x922 (ite $x909 $x922 (ite $x906 $x930 (ite $x904 $x927 $x930)))))))
 (let (($x915 (= c______ left-to-center)))
 (let (($x916 (and $x915 $x912)))
 (ite $x916 $x930 $x944)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x672 (left s_______)))
 (let ((?x810 (left s________)))
 (let (($x1070 (= ?x810 ?x672)))
 (let ((?x706 (right s_______)))
 (let ((?x1037 (top ?x706)))
 (let ((?x1038 (stack ?x1037 ?x672)))
 (let (($x1064 (= ?x810 ?x1038)))
 (let (($x1040 ((_ is stack ) ?x706)))
 (let (($x1043 (= c_______ right-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x892 (center s_______)))
 (let (($x1045 ((_ is stack ) ?x892)))
 (let (($x1046 (= c_______ center-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let ((?x1033 (top ?x892)))
 (let ((?x1034 (stack ?x1033 ?x672)))
 (let (($x1061 (= ?x810 ?x1034)))
 (let (($x1048 (= c_______ center-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x843 (rest ?x672)))
 (let (($x1057 (= ?x810 ?x843)))
 (let (($x1050 ((_ is stack ) ?x672)))
 (let (($x1051 (= c_______ left-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let (($x1053 (= c_______ left-to-center)))
 (let (($x1054 (and $x1053 $x1050)))
 (ite $x1054 $x1057 (ite $x1052 $x1057 (ite $x1049 $x1061 (ite $x1047 $x1070 (ite $x1044 $x1064 $x1070))))))))))))))))))))))))))))))))
(assert
 (let ((?x706 (right s_______)))
 (let ((?x844 (right s________)))
 (let (($x1066 (= ?x844 ?x706)))
 (let ((?x1036 (rest ?x706)))
 (let (($x1063 (= ?x844 ?x1036)))
 (let (($x1040 ((_ is stack ) ?x706)))
 (let (($x1041 (= c_______ right-to-center)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1043 (= c_______ right-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x892 (center s_______)))
 (let ((?x1033 (top ?x892)))
 (let ((?x1035 (stack ?x1033 ?x706)))
 (let (($x1062 (= ?x844 ?x1035)))
 (let (($x1045 ((_ is stack ) ?x892)))
 (let (($x1046 (= c_______ center-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1048 (= c_______ center-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x672 (left s_______)))
 (let (($x1050 ((_ is stack ) ?x672)))
 (let (($x1051 (= c_______ left-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let (($x1083 (ite $x1052 $x1066 (ite $x1049 $x1066 (ite $x1047 $x1062 (ite $x1044 $x1063 (ite $x1042 $x1063 $x1066)))))))
 (let ((?x890 (top ?x672)))
 (let ((?x1029 (stack ?x890 ?x706)))
 (let (($x1058 (= ?x844 ?x1029)))
 (let (($x1053 (= c_______ left-to-center)))
 (let (($x1054 (and $x1053 $x1050)))
 (ite $x1054 $x1058 $x1083)))))))))))))))))))))))))))))))
(assert
 (let ((?x892 (center s_______)))
 (let ((?x1030 (center s________)))
 (let (($x1068 (= ?x1030 ?x892)))
 (let ((?x706 (right s_______)))
 (let ((?x1037 (top ?x706)))
 (let ((?x1039 (stack ?x1037 ?x892)))
 (let (($x1065 (= ?x1030 ?x1039)))
 (let (($x1040 ((_ is stack ) ?x706)))
 (let (($x1041 (= c_______ right-to-center)))
 (let (($x1042 (and $x1041 $x1040)))
 (let (($x1043 (= c_______ right-to-left)))
 (let (($x1044 (and $x1043 $x1040)))
 (let ((?x1032 (rest ?x892)))
 (let (($x1060 (= ?x1030 ?x1032)))
 (let (($x1045 ((_ is stack ) ?x892)))
 (let (($x1046 (= c_______ center-to-right)))
 (let (($x1047 (and $x1046 $x1045)))
 (let (($x1048 (= c_______ center-to-left)))
 (let (($x1049 (and $x1048 $x1045)))
 (let ((?x672 (left s_______)))
 (let ((?x890 (top ?x672)))
 (let ((?x1031 (stack ?x890 ?x892)))
 (let (($x1059 (= ?x1030 ?x1031)))
 (let (($x1050 ((_ is stack ) ?x672)))
 (let (($x1051 (= c_______ left-to-right)))
 (let (($x1052 (and $x1051 $x1050)))
 (let (($x1082 (ite $x1052 $x1059 (ite $x1049 $x1060 (ite $x1047 $x1060 (ite $x1044 $x1068 (ite $x1042 $x1065 $x1068)))))))
 (let (($x1053 (= c_______ left-to-center)))
 (let (($x1054 (and $x1053 $x1050)))
 (ite $x1054 $x1068 $x1082)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x810 (left s________)))
 (let ((?x948 (left s_________)))
 (let (($x1208 (= ?x948 ?x810)))
 (let ((?x844 (right s________)))
 (let ((?x1175 (top ?x844)))
 (let ((?x1176 (stack ?x1175 ?x810)))
 (let (($x1202 (= ?x948 ?x1176)))
 (let (($x1178 ((_ is stack ) ?x844)))
 (let (($x1181 (= c________ right-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x1030 (center s________)))
 (let (($x1183 ((_ is stack ) ?x1030)))
 (let (($x1184 (= c________ center-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let ((?x1171 (top ?x1030)))
 (let ((?x1172 (stack ?x1171 ?x810)))
 (let (($x1199 (= ?x948 ?x1172)))
 (let (($x1186 (= c________ center-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x981 (rest ?x810)))
 (let (($x1195 (= ?x948 ?x981)))
 (let (($x1188 ((_ is stack ) ?x810)))
 (let (($x1189 (= c________ left-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let (($x1191 (= c________ left-to-center)))
 (let (($x1192 (and $x1191 $x1188)))
 (ite $x1192 $x1195 (ite $x1190 $x1195 (ite $x1187 $x1199 (ite $x1185 $x1208 (ite $x1182 $x1202 $x1208))))))))))))))))))))))))))))))))
(assert
 (let ((?x844 (right s________)))
 (let ((?x982 (right s_________)))
 (let (($x1204 (= ?x982 ?x844)))
 (let ((?x1174 (rest ?x844)))
 (let (($x1201 (= ?x982 ?x1174)))
 (let (($x1178 ((_ is stack ) ?x844)))
 (let (($x1179 (= c________ right-to-center)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1181 (= c________ right-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x1030 (center s________)))
 (let ((?x1171 (top ?x1030)))
 (let ((?x1173 (stack ?x1171 ?x844)))
 (let (($x1200 (= ?x982 ?x1173)))
 (let (($x1183 ((_ is stack ) ?x1030)))
 (let (($x1184 (= c________ center-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1186 (= c________ center-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x810 (left s________)))
 (let (($x1188 ((_ is stack ) ?x810)))
 (let (($x1189 (= c________ left-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let (($x1221 (ite $x1190 $x1204 (ite $x1187 $x1204 (ite $x1185 $x1200 (ite $x1182 $x1201 (ite $x1180 $x1201 $x1204)))))))
 (let ((?x1028 (top ?x810)))
 (let ((?x1167 (stack ?x1028 ?x844)))
 (let (($x1196 (= ?x982 ?x1167)))
 (let (($x1191 (= c________ left-to-center)))
 (let (($x1192 (and $x1191 $x1188)))
 (ite $x1192 $x1196 $x1221)))))))))))))))))))))))))))))))
(assert
 (let ((?x1030 (center s________)))
 (let ((?x1168 (center s_________)))
 (let (($x1206 (= ?x1168 ?x1030)))
 (let ((?x844 (right s________)))
 (let ((?x1175 (top ?x844)))
 (let ((?x1177 (stack ?x1175 ?x1030)))
 (let (($x1203 (= ?x1168 ?x1177)))
 (let (($x1178 ((_ is stack ) ?x844)))
 (let (($x1179 (= c________ right-to-center)))
 (let (($x1180 (and $x1179 $x1178)))
 (let (($x1181 (= c________ right-to-left)))
 (let (($x1182 (and $x1181 $x1178)))
 (let ((?x1170 (rest ?x1030)))
 (let (($x1198 (= ?x1168 ?x1170)))
 (let (($x1183 ((_ is stack ) ?x1030)))
 (let (($x1184 (= c________ center-to-right)))
 (let (($x1185 (and $x1184 $x1183)))
 (let (($x1186 (= c________ center-to-left)))
 (let (($x1187 (and $x1186 $x1183)))
 (let ((?x810 (left s________)))
 (let ((?x1028 (top ?x810)))
 (let ((?x1169 (stack ?x1028 ?x1030)))
 (let (($x1197 (= ?x1168 ?x1169)))
 (let (($x1188 ((_ is stack ) ?x810)))
 (let (($x1189 (= c________ left-to-right)))
 (let (($x1190 (and $x1189 $x1188)))
 (let (($x1220 (ite $x1190 $x1197 (ite $x1187 $x1198 (ite $x1185 $x1198 (ite $x1182 $x1206 (ite $x1180 $x1203 $x1206)))))))
 (let (($x1191 (= c________ left-to-center)))
 (let (($x1192 (and $x1191 $x1188)))
 (ite $x1192 $x1206 $x1220)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x948 (left s_________)))
 (let ((?x1086 (left s__________)))
 (let (($x1346 (= ?x1086 ?x948)))
 (let ((?x982 (right s_________)))
 (let ((?x1313 (top ?x982)))
 (let ((?x1314 (stack ?x1313 ?x948)))
 (let (($x1340 (= ?x1086 ?x1314)))
 (let (($x1316 ((_ is stack ) ?x982)))
 (let (($x1319 (= c_________ right-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x1168 (center s_________)))
 (let (($x1321 ((_ is stack ) ?x1168)))
 (let (($x1322 (= c_________ center-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let ((?x1309 (top ?x1168)))
 (let ((?x1310 (stack ?x1309 ?x948)))
 (let (($x1337 (= ?x1086 ?x1310)))
 (let (($x1324 (= c_________ center-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x1119 (rest ?x948)))
 (let (($x1333 (= ?x1086 ?x1119)))
 (let (($x1326 ((_ is stack ) ?x948)))
 (let (($x1327 (= c_________ left-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let (($x1329 (= c_________ left-to-center)))
 (let (($x1330 (and $x1329 $x1326)))
 (ite $x1330 $x1333 (ite $x1328 $x1333 (ite $x1325 $x1337 (ite $x1323 $x1346 (ite $x1320 $x1340 $x1346))))))))))))))))))))))))))))))))
(assert
 (let ((?x982 (right s_________)))
 (let ((?x1120 (right s__________)))
 (let (($x1342 (= ?x1120 ?x982)))
 (let ((?x1312 (rest ?x982)))
 (let (($x1339 (= ?x1120 ?x1312)))
 (let (($x1316 ((_ is stack ) ?x982)))
 (let (($x1317 (= c_________ right-to-center)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1319 (= c_________ right-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x1168 (center s_________)))
 (let ((?x1309 (top ?x1168)))
 (let ((?x1311 (stack ?x1309 ?x982)))
 (let (($x1338 (= ?x1120 ?x1311)))
 (let (($x1321 ((_ is stack ) ?x1168)))
 (let (($x1322 (= c_________ center-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1324 (= c_________ center-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x948 (left s_________)))
 (let (($x1326 ((_ is stack ) ?x948)))
 (let (($x1327 (= c_________ left-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let (($x1359 (ite $x1328 $x1342 (ite $x1325 $x1342 (ite $x1323 $x1338 (ite $x1320 $x1339 (ite $x1318 $x1339 $x1342)))))))
 (let ((?x1166 (top ?x948)))
 (let ((?x1305 (stack ?x1166 ?x982)))
 (let (($x1334 (= ?x1120 ?x1305)))
 (let (($x1329 (= c_________ left-to-center)))
 (let (($x1330 (and $x1329 $x1326)))
 (ite $x1330 $x1334 $x1359)))))))))))))))))))))))))))))))
(assert
 (let ((?x1168 (center s_________)))
 (let ((?x1306 (center s__________)))
 (let (($x1344 (= ?x1306 ?x1168)))
 (let ((?x982 (right s_________)))
 (let ((?x1313 (top ?x982)))
 (let ((?x1315 (stack ?x1313 ?x1168)))
 (let (($x1341 (= ?x1306 ?x1315)))
 (let (($x1316 ((_ is stack ) ?x982)))
 (let (($x1317 (= c_________ right-to-center)))
 (let (($x1318 (and $x1317 $x1316)))
 (let (($x1319 (= c_________ right-to-left)))
 (let (($x1320 (and $x1319 $x1316)))
 (let ((?x1308 (rest ?x1168)))
 (let (($x1336 (= ?x1306 ?x1308)))
 (let (($x1321 ((_ is stack ) ?x1168)))
 (let (($x1322 (= c_________ center-to-right)))
 (let (($x1323 (and $x1322 $x1321)))
 (let (($x1324 (= c_________ center-to-left)))
 (let (($x1325 (and $x1324 $x1321)))
 (let ((?x948 (left s_________)))
 (let ((?x1166 (top ?x948)))
 (let ((?x1307 (stack ?x1166 ?x1168)))
 (let (($x1335 (= ?x1306 ?x1307)))
 (let (($x1326 ((_ is stack ) ?x948)))
 (let (($x1327 (= c_________ left-to-right)))
 (let (($x1328 (and $x1327 $x1326)))
 (let (($x1358 (ite $x1328 $x1335 (ite $x1325 $x1336 (ite $x1323 $x1336 (ite $x1320 $x1344 (ite $x1318 $x1341 $x1344)))))))
 (let (($x1329 (= c_________ left-to-center)))
 (let (($x1330 (and $x1329 $x1326)))
 (ite $x1330 $x1344 $x1358)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1086 (left s__________)))
 (let ((?x1224 (left s___________)))
 (let (($x1484 (= ?x1224 ?x1086)))
 (let ((?x1120 (right s__________)))
 (let ((?x1451 (top ?x1120)))
 (let ((?x1452 (stack ?x1451 ?x1086)))
 (let (($x1478 (= ?x1224 ?x1452)))
 (let (($x1454 ((_ is stack ) ?x1120)))
 (let (($x1457 (= c__________ right-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1306 (center s__________)))
 (let (($x1459 ((_ is stack ) ?x1306)))
 (let (($x1460 (= c__________ center-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let ((?x1447 (top ?x1306)))
 (let ((?x1448 (stack ?x1447 ?x1086)))
 (let (($x1475 (= ?x1224 ?x1448)))
 (let (($x1462 (= c__________ center-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1257 (rest ?x1086)))
 (let (($x1471 (= ?x1224 ?x1257)))
 (let (($x1464 ((_ is stack ) ?x1086)))
 (let (($x1465 (= c__________ left-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let (($x1467 (= c__________ left-to-center)))
 (let (($x1468 (and $x1467 $x1464)))
 (ite $x1468 $x1471 (ite $x1466 $x1471 (ite $x1463 $x1475 (ite $x1461 $x1484 (ite $x1458 $x1478 $x1484))))))))))))))))))))))))))))))))
(assert
 (let ((?x1120 (right s__________)))
 (let ((?x1258 (right s___________)))
 (let (($x1480 (= ?x1258 ?x1120)))
 (let ((?x1450 (rest ?x1120)))
 (let (($x1477 (= ?x1258 ?x1450)))
 (let (($x1454 ((_ is stack ) ?x1120)))
 (let (($x1455 (= c__________ right-to-center)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1457 (= c__________ right-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1306 (center s__________)))
 (let ((?x1447 (top ?x1306)))
 (let ((?x1449 (stack ?x1447 ?x1120)))
 (let (($x1476 (= ?x1258 ?x1449)))
 (let (($x1459 ((_ is stack ) ?x1306)))
 (let (($x1460 (= c__________ center-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1462 (= c__________ center-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1086 (left s__________)))
 (let (($x1464 ((_ is stack ) ?x1086)))
 (let (($x1465 (= c__________ left-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let (($x1497 (ite $x1466 $x1480 (ite $x1463 $x1480 (ite $x1461 $x1476 (ite $x1458 $x1477 (ite $x1456 $x1477 $x1480)))))))
 (let ((?x1304 (top ?x1086)))
 (let ((?x1443 (stack ?x1304 ?x1120)))
 (let (($x1472 (= ?x1258 ?x1443)))
 (let (($x1467 (= c__________ left-to-center)))
 (let (($x1468 (and $x1467 $x1464)))
 (ite $x1468 $x1472 $x1497)))))))))))))))))))))))))))))))
(assert
 (let ((?x1306 (center s__________)))
 (let ((?x1444 (center s___________)))
 (let (($x1482 (= ?x1444 ?x1306)))
 (let ((?x1120 (right s__________)))
 (let ((?x1451 (top ?x1120)))
 (let ((?x1453 (stack ?x1451 ?x1306)))
 (let (($x1479 (= ?x1444 ?x1453)))
 (let (($x1454 ((_ is stack ) ?x1120)))
 (let (($x1455 (= c__________ right-to-center)))
 (let (($x1456 (and $x1455 $x1454)))
 (let (($x1457 (= c__________ right-to-left)))
 (let (($x1458 (and $x1457 $x1454)))
 (let ((?x1446 (rest ?x1306)))
 (let (($x1474 (= ?x1444 ?x1446)))
 (let (($x1459 ((_ is stack ) ?x1306)))
 (let (($x1460 (= c__________ center-to-right)))
 (let (($x1461 (and $x1460 $x1459)))
 (let (($x1462 (= c__________ center-to-left)))
 (let (($x1463 (and $x1462 $x1459)))
 (let ((?x1086 (left s__________)))
 (let ((?x1304 (top ?x1086)))
 (let ((?x1445 (stack ?x1304 ?x1306)))
 (let (($x1473 (= ?x1444 ?x1445)))
 (let (($x1464 ((_ is stack ) ?x1086)))
 (let (($x1465 (= c__________ left-to-right)))
 (let (($x1466 (and $x1465 $x1464)))
 (let (($x1496 (ite $x1466 $x1473 (ite $x1463 $x1474 (ite $x1461 $x1474 (ite $x1458 $x1482 (ite $x1456 $x1479 $x1482)))))))
 (let (($x1467 (= c__________ left-to-center)))
 (let (($x1468 (and $x1467 $x1464)))
 (ite $x1468 $x1482 $x1496)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1224 (left s___________)))
 (let ((?x1362 (left s____________)))
 (let (($x1622 (= ?x1362 ?x1224)))
 (let ((?x1258 (right s___________)))
 (let ((?x1589 (top ?x1258)))
 (let ((?x1590 (stack ?x1589 ?x1224)))
 (let (($x1616 (= ?x1362 ?x1590)))
 (let (($x1592 ((_ is stack ) ?x1258)))
 (let (($x1595 (= c___________ right-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1444 (center s___________)))
 (let (($x1597 ((_ is stack ) ?x1444)))
 (let (($x1598 (= c___________ center-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let ((?x1585 (top ?x1444)))
 (let ((?x1586 (stack ?x1585 ?x1224)))
 (let (($x1613 (= ?x1362 ?x1586)))
 (let (($x1600 (= c___________ center-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1395 (rest ?x1224)))
 (let (($x1609 (= ?x1362 ?x1395)))
 (let (($x1602 ((_ is stack ) ?x1224)))
 (let (($x1603 (= c___________ left-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let (($x1605 (= c___________ left-to-center)))
 (let (($x1606 (and $x1605 $x1602)))
 (ite $x1606 $x1609 (ite $x1604 $x1609 (ite $x1601 $x1613 (ite $x1599 $x1622 (ite $x1596 $x1616 $x1622))))))))))))))))))))))))))))))))
(assert
 (let ((?x1258 (right s___________)))
 (let ((?x1396 (right s____________)))
 (let (($x1618 (= ?x1396 ?x1258)))
 (let ((?x1588 (rest ?x1258)))
 (let (($x1615 (= ?x1396 ?x1588)))
 (let (($x1592 ((_ is stack ) ?x1258)))
 (let (($x1593 (= c___________ right-to-center)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1595 (= c___________ right-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1444 (center s___________)))
 (let ((?x1585 (top ?x1444)))
 (let ((?x1587 (stack ?x1585 ?x1258)))
 (let (($x1614 (= ?x1396 ?x1587)))
 (let (($x1597 ((_ is stack ) ?x1444)))
 (let (($x1598 (= c___________ center-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1600 (= c___________ center-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1224 (left s___________)))
 (let (($x1602 ((_ is stack ) ?x1224)))
 (let (($x1603 (= c___________ left-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let (($x1635 (ite $x1604 $x1618 (ite $x1601 $x1618 (ite $x1599 $x1614 (ite $x1596 $x1615 (ite $x1594 $x1615 $x1618)))))))
 (let ((?x1442 (top ?x1224)))
 (let ((?x1581 (stack ?x1442 ?x1258)))
 (let (($x1610 (= ?x1396 ?x1581)))
 (let (($x1605 (= c___________ left-to-center)))
 (let (($x1606 (and $x1605 $x1602)))
 (ite $x1606 $x1610 $x1635)))))))))))))))))))))))))))))))
(assert
 (let ((?x1444 (center s___________)))
 (let ((?x1582 (center s____________)))
 (let (($x1620 (= ?x1582 ?x1444)))
 (let ((?x1258 (right s___________)))
 (let ((?x1589 (top ?x1258)))
 (let ((?x1591 (stack ?x1589 ?x1444)))
 (let (($x1617 (= ?x1582 ?x1591)))
 (let (($x1592 ((_ is stack ) ?x1258)))
 (let (($x1593 (= c___________ right-to-center)))
 (let (($x1594 (and $x1593 $x1592)))
 (let (($x1595 (= c___________ right-to-left)))
 (let (($x1596 (and $x1595 $x1592)))
 (let ((?x1584 (rest ?x1444)))
 (let (($x1612 (= ?x1582 ?x1584)))
 (let (($x1597 ((_ is stack ) ?x1444)))
 (let (($x1598 (= c___________ center-to-right)))
 (let (($x1599 (and $x1598 $x1597)))
 (let (($x1600 (= c___________ center-to-left)))
 (let (($x1601 (and $x1600 $x1597)))
 (let ((?x1224 (left s___________)))
 (let ((?x1442 (top ?x1224)))
 (let ((?x1583 (stack ?x1442 ?x1444)))
 (let (($x1611 (= ?x1582 ?x1583)))
 (let (($x1602 ((_ is stack ) ?x1224)))
 (let (($x1603 (= c___________ left-to-right)))
 (let (($x1604 (and $x1603 $x1602)))
 (let (($x1634 (ite $x1604 $x1611 (ite $x1601 $x1612 (ite $x1599 $x1612 (ite $x1596 $x1620 (ite $x1594 $x1617 $x1620)))))))
 (let (($x1605 (= c___________ left-to-center)))
 (let (($x1606 (and $x1605 $x1602)))
 (ite $x1606 $x1620 $x1634)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1362 (left s____________)))
 (let ((?x1500 (left s_____________)))
 (let (($x1760 (= ?x1500 ?x1362)))
 (let ((?x1396 (right s____________)))
 (let ((?x1727 (top ?x1396)))
 (let ((?x1728 (stack ?x1727 ?x1362)))
 (let (($x1754 (= ?x1500 ?x1728)))
 (let (($x1730 ((_ is stack ) ?x1396)))
 (let (($x1733 (= c____________ right-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1582 (center s____________)))
 (let (($x1735 ((_ is stack ) ?x1582)))
 (let (($x1736 (= c____________ center-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let ((?x1723 (top ?x1582)))
 (let ((?x1724 (stack ?x1723 ?x1362)))
 (let (($x1751 (= ?x1500 ?x1724)))
 (let (($x1738 (= c____________ center-to-left)))
 (let (($x1739 (and $x1738 $x1735)))
 (let ((?x1533 (rest ?x1362)))
 (let (($x1747 (= ?x1500 ?x1533)))
 (let (($x1740 ((_ is stack ) ?x1362)))
 (let (($x1741 (= c____________ left-to-right)))
 (let (($x1742 (and $x1741 $x1740)))
 (let (($x1743 (= c____________ left-to-center)))
 (let (($x1744 (and $x1743 $x1740)))
 (ite $x1744 $x1747 (ite $x1742 $x1747 (ite $x1739 $x1751 (ite $x1737 $x1760 (ite $x1734 $x1754 $x1760))))))))))))))))))))))))))))))))
(assert
 (let ((?x1396 (right s____________)))
 (let ((?x1534 (right s_____________)))
 (let (($x1756 (= ?x1534 ?x1396)))
 (let ((?x1726 (rest ?x1396)))
 (let (($x1753 (= ?x1534 ?x1726)))
 (let (($x1730 ((_ is stack ) ?x1396)))
 (let (($x1731 (= c____________ right-to-center)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1733 (= c____________ right-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1582 (center s____________)))
 (let ((?x1723 (top ?x1582)))
 (let ((?x1725 (stack ?x1723 ?x1396)))
 (let (($x1752 (= ?x1534 ?x1725)))
 (let (($x1735 ((_ is stack ) ?x1582)))
 (let (($x1736 (= c____________ center-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let (($x1738 (= c____________ center-to-left)))
 (let (($x1739 (and $x1738 $x1735)))
 (let ((?x1362 (left s____________)))
 (let (($x1740 ((_ is stack ) ?x1362)))
 (let (($x1741 (= c____________ left-to-right)))
 (let (($x1742 (and $x1741 $x1740)))
 (let (($x1773 (ite $x1742 $x1756 (ite $x1739 $x1756 (ite $x1737 $x1752 (ite $x1734 $x1753 (ite $x1732 $x1753 $x1756)))))))
 (let ((?x1580 (top ?x1362)))
 (let ((?x1719 (stack ?x1580 ?x1396)))
 (let (($x1748 (= ?x1534 ?x1719)))
 (let (($x1743 (= c____________ left-to-center)))
 (let (($x1744 (and $x1743 $x1740)))
 (ite $x1744 $x1748 $x1773)))))))))))))))))))))))))))))))
(assert
 (let ((?x1582 (center s____________)))
 (let ((?x1720 (center s_____________)))
 (let (($x1758 (= ?x1720 ?x1582)))
 (let ((?x1396 (right s____________)))
 (let ((?x1727 (top ?x1396)))
 (let ((?x1729 (stack ?x1727 ?x1582)))
 (let (($x1755 (= ?x1720 ?x1729)))
 (let (($x1730 ((_ is stack ) ?x1396)))
 (let (($x1731 (= c____________ right-to-center)))
 (let (($x1732 (and $x1731 $x1730)))
 (let (($x1733 (= c____________ right-to-left)))
 (let (($x1734 (and $x1733 $x1730)))
 (let ((?x1722 (rest ?x1582)))
 (let (($x1750 (= ?x1720 ?x1722)))
 (let (($x1735 ((_ is stack ) ?x1582)))
 (let (($x1736 (= c____________ center-to-right)))
 (let (($x1737 (and $x1736 $x1735)))
 (let (($x1738 (= c____________ center-to-left)))
 (let (($x1739 (and $x1738 $x1735)))
 (let ((?x1362 (left s____________)))
 (let ((?x1580 (top ?x1362)))
 (let ((?x1721 (stack ?x1580 ?x1582)))
 (let (($x1749 (= ?x1720 ?x1721)))
 (let (($x1740 ((_ is stack ) ?x1362)))
 (let (($x1741 (= c____________ left-to-right)))
 (let (($x1742 (and $x1741 $x1740)))
 (let (($x1772 (ite $x1742 $x1749 (ite $x1739 $x1750 (ite $x1737 $x1750 (ite $x1734 $x1758 (ite $x1732 $x1755 $x1758)))))))
 (let (($x1743 (= c____________ left-to-center)))
 (let (($x1744 (and $x1743 $x1740)))
 (ite $x1744 $x1758 $x1772)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1500 (left s_____________)))
 (let ((?x1638 (left s______________)))
 (let (($x1898 (= ?x1638 ?x1500)))
 (let ((?x1534 (right s_____________)))
 (let ((?x1865 (top ?x1534)))
 (let ((?x1866 (stack ?x1865 ?x1500)))
 (let (($x1892 (= ?x1638 ?x1866)))
 (let (($x1868 ((_ is stack ) ?x1534)))
 (let (($x1871 (= c_____________ right-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1720 (center s_____________)))
 (let (($x1873 ((_ is stack ) ?x1720)))
 (let (($x1874 (= c_____________ center-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let ((?x1861 (top ?x1720)))
 (let ((?x1862 (stack ?x1861 ?x1500)))
 (let (($x1889 (= ?x1638 ?x1862)))
 (let (($x1876 (= c_____________ center-to-left)))
 (let (($x1877 (and $x1876 $x1873)))
 (let ((?x1671 (rest ?x1500)))
 (let (($x1885 (= ?x1638 ?x1671)))
 (let (($x1878 ((_ is stack ) ?x1500)))
 (let (($x1879 (= c_____________ left-to-right)))
 (let (($x1880 (and $x1879 $x1878)))
 (let (($x1881 (= c_____________ left-to-center)))
 (let (($x1882 (and $x1881 $x1878)))
 (ite $x1882 $x1885 (ite $x1880 $x1885 (ite $x1877 $x1889 (ite $x1875 $x1898 (ite $x1872 $x1892 $x1898))))))))))))))))))))))))))))))))
(assert
 (let ((?x1534 (right s_____________)))
 (let ((?x1672 (right s______________)))
 (let (($x1894 (= ?x1672 ?x1534)))
 (let ((?x1864 (rest ?x1534)))
 (let (($x1891 (= ?x1672 ?x1864)))
 (let (($x1868 ((_ is stack ) ?x1534)))
 (let (($x1869 (= c_____________ right-to-center)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1871 (= c_____________ right-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1720 (center s_____________)))
 (let ((?x1861 (top ?x1720)))
 (let ((?x1863 (stack ?x1861 ?x1534)))
 (let (($x1890 (= ?x1672 ?x1863)))
 (let (($x1873 ((_ is stack ) ?x1720)))
 (let (($x1874 (= c_____________ center-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let (($x1876 (= c_____________ center-to-left)))
 (let (($x1877 (and $x1876 $x1873)))
 (let ((?x1500 (left s_____________)))
 (let (($x1878 ((_ is stack ) ?x1500)))
 (let (($x1879 (= c_____________ left-to-right)))
 (let (($x1880 (and $x1879 $x1878)))
 (let (($x1911 (ite $x1880 $x1894 (ite $x1877 $x1894 (ite $x1875 $x1890 (ite $x1872 $x1891 (ite $x1870 $x1891 $x1894)))))))
 (let ((?x1718 (top ?x1500)))
 (let ((?x1857 (stack ?x1718 ?x1534)))
 (let (($x1886 (= ?x1672 ?x1857)))
 (let (($x1881 (= c_____________ left-to-center)))
 (let (($x1882 (and $x1881 $x1878)))
 (ite $x1882 $x1886 $x1911)))))))))))))))))))))))))))))))
(assert
 (let ((?x1720 (center s_____________)))
 (let ((?x1858 (center s______________)))
 (let (($x1896 (= ?x1858 ?x1720)))
 (let ((?x1534 (right s_____________)))
 (let ((?x1865 (top ?x1534)))
 (let ((?x1867 (stack ?x1865 ?x1720)))
 (let (($x1893 (= ?x1858 ?x1867)))
 (let (($x1868 ((_ is stack ) ?x1534)))
 (let (($x1869 (= c_____________ right-to-center)))
 (let (($x1870 (and $x1869 $x1868)))
 (let (($x1871 (= c_____________ right-to-left)))
 (let (($x1872 (and $x1871 $x1868)))
 (let ((?x1860 (rest ?x1720)))
 (let (($x1888 (= ?x1858 ?x1860)))
 (let (($x1873 ((_ is stack ) ?x1720)))
 (let (($x1874 (= c_____________ center-to-right)))
 (let (($x1875 (and $x1874 $x1873)))
 (let (($x1876 (= c_____________ center-to-left)))
 (let (($x1877 (and $x1876 $x1873)))
 (let ((?x1500 (left s_____________)))
 (let ((?x1718 (top ?x1500)))
 (let ((?x1859 (stack ?x1718 ?x1720)))
 (let (($x1887 (= ?x1858 ?x1859)))
 (let (($x1878 ((_ is stack ) ?x1500)))
 (let (($x1879 (= c_____________ left-to-right)))
 (let (($x1880 (and $x1879 $x1878)))
 (let (($x1910 (ite $x1880 $x1887 (ite $x1877 $x1888 (ite $x1875 $x1888 (ite $x1872 $x1896 (ite $x1870 $x1893 $x1896)))))))
 (let (($x1881 (= c_____________ left-to-center)))
 (let (($x1882 (and $x1881 $x1878)))
 (ite $x1882 $x1896 $x1910)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1638 (left s______________)))
 (let ((?x1776 (left s_______________)))
 (let (($x2036 (= ?x1776 ?x1638)))
 (let ((?x1672 (right s______________)))
 (let ((?x2003 (top ?x1672)))
 (let ((?x2004 (stack ?x2003 ?x1638)))
 (let (($x2030 (= ?x1776 ?x2004)))
 (let (($x2006 ((_ is stack ) ?x1672)))
 (let (($x2009 (= c______________ right-to-left)))
 (let (($x2010 (and $x2009 $x2006)))
 (let ((?x1858 (center s______________)))
 (let (($x2011 ((_ is stack ) ?x1858)))
 (let (($x2012 (= c______________ center-to-right)))
 (let (($x2013 (and $x2012 $x2011)))
 (let ((?x1999 (top ?x1858)))
 (let ((?x2000 (stack ?x1999 ?x1638)))
 (let (($x2027 (= ?x1776 ?x2000)))
 (let (($x2014 (= c______________ center-to-left)))
 (let (($x2015 (and $x2014 $x2011)))
 (let ((?x1809 (rest ?x1638)))
 (let (($x2023 (= ?x1776 ?x1809)))
 (let (($x2016 ((_ is stack ) ?x1638)))
 (let (($x2017 (= c______________ left-to-right)))
 (let (($x2018 (and $x2017 $x2016)))
 (let (($x2019 (= c______________ left-to-center)))
 (let (($x2020 (and $x2019 $x2016)))
 (ite $x2020 $x2023 (ite $x2018 $x2023 (ite $x2015 $x2027 (ite $x2013 $x2036 (ite $x2010 $x2030 $x2036))))))))))))))))))))))))))))))))
(assert
 (let ((?x1672 (right s______________)))
 (let ((?x1810 (right s_______________)))
 (let (($x2032 (= ?x1810 ?x1672)))
 (let ((?x2002 (rest ?x1672)))
 (let (($x2029 (= ?x1810 ?x2002)))
 (let (($x2006 ((_ is stack ) ?x1672)))
 (let (($x2007 (= c______________ right-to-center)))
 (let (($x2008 (and $x2007 $x2006)))
 (let (($x2009 (= c______________ right-to-left)))
 (let (($x2010 (and $x2009 $x2006)))
 (let ((?x1858 (center s______________)))
 (let ((?x1999 (top ?x1858)))
 (let ((?x2001 (stack ?x1999 ?x1672)))
 (let (($x2028 (= ?x1810 ?x2001)))
 (let (($x2011 ((_ is stack ) ?x1858)))
 (let (($x2012 (= c______________ center-to-right)))
 (let (($x2013 (and $x2012 $x2011)))
 (let (($x2014 (= c______________ center-to-left)))
 (let (($x2015 (and $x2014 $x2011)))
 (let ((?x1638 (left s______________)))
 (let (($x2016 ((_ is stack ) ?x1638)))
 (let (($x2017 (= c______________ left-to-right)))
 (let (($x2018 (and $x2017 $x2016)))
 (let (($x2049 (ite $x2018 $x2032 (ite $x2015 $x2032 (ite $x2013 $x2028 (ite $x2010 $x2029 (ite $x2008 $x2029 $x2032)))))))
 (let ((?x1856 (top ?x1638)))
 (let ((?x1995 (stack ?x1856 ?x1672)))
 (let (($x2024 (= ?x1810 ?x1995)))
 (let (($x2019 (= c______________ left-to-center)))
 (let (($x2020 (and $x2019 $x2016)))
 (ite $x2020 $x2024 $x2049)))))))))))))))))))))))))))))))
(assert
 (let ((?x1858 (center s______________)))
 (let ((?x1996 (center s_______________)))
 (let (($x2034 (= ?x1996 ?x1858)))
 (let ((?x1672 (right s______________)))
 (let ((?x2003 (top ?x1672)))
 (let ((?x2005 (stack ?x2003 ?x1858)))
 (let (($x2031 (= ?x1996 ?x2005)))
 (let (($x2006 ((_ is stack ) ?x1672)))
 (let (($x2007 (= c______________ right-to-center)))
 (let (($x2008 (and $x2007 $x2006)))
 (let (($x2009 (= c______________ right-to-left)))
 (let (($x2010 (and $x2009 $x2006)))
 (let ((?x1998 (rest ?x1858)))
 (let (($x2026 (= ?x1996 ?x1998)))
 (let (($x2011 ((_ is stack ) ?x1858)))
 (let (($x2012 (= c______________ center-to-right)))
 (let (($x2013 (and $x2012 $x2011)))
 (let (($x2014 (= c______________ center-to-left)))
 (let (($x2015 (and $x2014 $x2011)))
 (let ((?x1638 (left s______________)))
 (let ((?x1856 (top ?x1638)))
 (let ((?x1997 (stack ?x1856 ?x1858)))
 (let (($x2025 (= ?x1996 ?x1997)))
 (let (($x2016 ((_ is stack ) ?x1638)))
 (let (($x2017 (= c______________ left-to-right)))
 (let (($x2018 (and $x2017 $x2016)))
 (let (($x2048 (ite $x2018 $x2025 (ite $x2015 $x2026 (ite $x2013 $x2026 (ite $x2010 $x2034 (ite $x2008 $x2031 $x2034)))))))
 (let (($x2019 (= c______________ left-to-center)))
 (let (($x2020 (and $x2019 $x2016)))
 (ite $x2020 $x2034 $x2048)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1776 (left s_______________)))
 (let ((?x1914 (left s________________)))
 (let (($x2174 (= ?x1914 ?x1776)))
 (let ((?x1810 (right s_______________)))
 (let ((?x2141 (top ?x1810)))
 (let ((?x2142 (stack ?x2141 ?x1776)))
 (let (($x2168 (= ?x1914 ?x2142)))
 (let (($x2144 ((_ is stack ) ?x1810)))
 (let (($x2147 (= c_______________ right-to-left)))
 (let (($x2148 (and $x2147 $x2144)))
 (let ((?x1996 (center s_______________)))
 (let (($x2149 ((_ is stack ) ?x1996)))
 (let (($x2150 (= c_______________ center-to-right)))
 (let (($x2151 (and $x2150 $x2149)))
 (let ((?x2137 (top ?x1996)))
 (let ((?x2138 (stack ?x2137 ?x1776)))
 (let (($x2165 (= ?x1914 ?x2138)))
 (let (($x2152 (= c_______________ center-to-left)))
 (let (($x2153 (and $x2152 $x2149)))
 (let ((?x1947 (rest ?x1776)))
 (let (($x2161 (= ?x1914 ?x1947)))
 (let (($x2154 ((_ is stack ) ?x1776)))
 (let (($x2155 (= c_______________ left-to-right)))
 (let (($x2156 (and $x2155 $x2154)))
 (let (($x2157 (= c_______________ left-to-center)))
 (let (($x2158 (and $x2157 $x2154)))
 (ite $x2158 $x2161 (ite $x2156 $x2161 (ite $x2153 $x2165 (ite $x2151 $x2174 (ite $x2148 $x2168 $x2174))))))))))))))))))))))))))))))))
(assert
 (let ((?x1810 (right s_______________)))
 (let ((?x1948 (right s________________)))
 (let (($x2170 (= ?x1948 ?x1810)))
 (let ((?x2140 (rest ?x1810)))
 (let (($x2167 (= ?x1948 ?x2140)))
 (let (($x2144 ((_ is stack ) ?x1810)))
 (let (($x2145 (= c_______________ right-to-center)))
 (let (($x2146 (and $x2145 $x2144)))
 (let (($x2147 (= c_______________ right-to-left)))
 (let (($x2148 (and $x2147 $x2144)))
 (let ((?x1996 (center s_______________)))
 (let ((?x2137 (top ?x1996)))
 (let ((?x2139 (stack ?x2137 ?x1810)))
 (let (($x2166 (= ?x1948 ?x2139)))
 (let (($x2149 ((_ is stack ) ?x1996)))
 (let (($x2150 (= c_______________ center-to-right)))
 (let (($x2151 (and $x2150 $x2149)))
 (let (($x2152 (= c_______________ center-to-left)))
 (let (($x2153 (and $x2152 $x2149)))
 (let ((?x1776 (left s_______________)))
 (let (($x2154 ((_ is stack ) ?x1776)))
 (let (($x2155 (= c_______________ left-to-right)))
 (let (($x2156 (and $x2155 $x2154)))
 (let (($x2187 (ite $x2156 $x2170 (ite $x2153 $x2170 (ite $x2151 $x2166 (ite $x2148 $x2167 (ite $x2146 $x2167 $x2170)))))))
 (let ((?x1994 (top ?x1776)))
 (let ((?x2133 (stack ?x1994 ?x1810)))
 (let (($x2162 (= ?x1948 ?x2133)))
 (let (($x2157 (= c_______________ left-to-center)))
 (let (($x2158 (and $x2157 $x2154)))
 (ite $x2158 $x2162 $x2187)))))))))))))))))))))))))))))))
(assert
 (let ((?x1996 (center s_______________)))
 (let ((?x2134 (center s________________)))
 (let (($x2172 (= ?x2134 ?x1996)))
 (let ((?x1810 (right s_______________)))
 (let ((?x2141 (top ?x1810)))
 (let ((?x2143 (stack ?x2141 ?x1996)))
 (let (($x2169 (= ?x2134 ?x2143)))
 (let (($x2144 ((_ is stack ) ?x1810)))
 (let (($x2145 (= c_______________ right-to-center)))
 (let (($x2146 (and $x2145 $x2144)))
 (let (($x2147 (= c_______________ right-to-left)))
 (let (($x2148 (and $x2147 $x2144)))
 (let ((?x2136 (rest ?x1996)))
 (let (($x2164 (= ?x2134 ?x2136)))
 (let (($x2149 ((_ is stack ) ?x1996)))
 (let (($x2150 (= c_______________ center-to-right)))
 (let (($x2151 (and $x2150 $x2149)))
 (let (($x2152 (= c_______________ center-to-left)))
 (let (($x2153 (and $x2152 $x2149)))
 (let ((?x1776 (left s_______________)))
 (let ((?x1994 (top ?x1776)))
 (let ((?x2135 (stack ?x1994 ?x1996)))
 (let (($x2163 (= ?x2134 ?x2135)))
 (let (($x2154 ((_ is stack ) ?x1776)))
 (let (($x2155 (= c_______________ left-to-right)))
 (let (($x2156 (and $x2155 $x2154)))
 (let (($x2186 (ite $x2156 $x2163 (ite $x2153 $x2164 (ite $x2151 $x2164 (ite $x2148 $x2172 (ite $x2146 $x2169 $x2172)))))))
 (let (($x2157 (= c_______________ left-to-center)))
 (let (($x2158 (and $x2157 $x2154)))
 (ite $x2158 $x2172 $x2186)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1914 (left s________________)))
 (let ((?x2052 (left s_________________)))
 (let (($x2312 (= ?x2052 ?x1914)))
 (let ((?x1948 (right s________________)))
 (let ((?x2279 (top ?x1948)))
 (let ((?x2280 (stack ?x2279 ?x1914)))
 (let (($x2306 (= ?x2052 ?x2280)))
 (let (($x2282 ((_ is stack ) ?x1948)))
 (let (($x2285 (= c________________ right-to-left)))
 (let (($x2286 (and $x2285 $x2282)))
 (let ((?x2134 (center s________________)))
 (let (($x2287 ((_ is stack ) ?x2134)))
 (let (($x2288 (= c________________ center-to-right)))
 (let (($x2289 (and $x2288 $x2287)))
 (let ((?x2275 (top ?x2134)))
 (let ((?x2276 (stack ?x2275 ?x1914)))
 (let (($x2303 (= ?x2052 ?x2276)))
 (let (($x2290 (= c________________ center-to-left)))
 (let (($x2291 (and $x2290 $x2287)))
 (let ((?x2085 (rest ?x1914)))
 (let (($x2299 (= ?x2052 ?x2085)))
 (let (($x2292 ((_ is stack ) ?x1914)))
 (let (($x2293 (= c________________ left-to-right)))
 (let (($x2294 (and $x2293 $x2292)))
 (let (($x2295 (= c________________ left-to-center)))
 (let (($x2296 (and $x2295 $x2292)))
 (ite $x2296 $x2299 (ite $x2294 $x2299 (ite $x2291 $x2303 (ite $x2289 $x2312 (ite $x2286 $x2306 $x2312))))))))))))))))))))))))))))))))
(assert
 (let ((?x1948 (right s________________)))
 (let ((?x2086 (right s_________________)))
 (let (($x2308 (= ?x2086 ?x1948)))
 (let ((?x2278 (rest ?x1948)))
 (let (($x2305 (= ?x2086 ?x2278)))
 (let (($x2282 ((_ is stack ) ?x1948)))
 (let (($x2283 (= c________________ right-to-center)))
 (let (($x2284 (and $x2283 $x2282)))
 (let (($x2285 (= c________________ right-to-left)))
 (let (($x2286 (and $x2285 $x2282)))
 (let ((?x2134 (center s________________)))
 (let ((?x2275 (top ?x2134)))
 (let ((?x2277 (stack ?x2275 ?x1948)))
 (let (($x2304 (= ?x2086 ?x2277)))
 (let (($x2287 ((_ is stack ) ?x2134)))
 (let (($x2288 (= c________________ center-to-right)))
 (let (($x2289 (and $x2288 $x2287)))
 (let (($x2290 (= c________________ center-to-left)))
 (let (($x2291 (and $x2290 $x2287)))
 (let ((?x1914 (left s________________)))
 (let (($x2292 ((_ is stack ) ?x1914)))
 (let (($x2293 (= c________________ left-to-right)))
 (let (($x2294 (and $x2293 $x2292)))
 (let (($x2325 (ite $x2294 $x2308 (ite $x2291 $x2308 (ite $x2289 $x2304 (ite $x2286 $x2305 (ite $x2284 $x2305 $x2308)))))))
 (let ((?x2132 (top ?x1914)))
 (let ((?x2271 (stack ?x2132 ?x1948)))
 (let (($x2300 (= ?x2086 ?x2271)))
 (let (($x2295 (= c________________ left-to-center)))
 (let (($x2296 (and $x2295 $x2292)))
 (ite $x2296 $x2300 $x2325)))))))))))))))))))))))))))))))
(assert
 (let ((?x2134 (center s________________)))
 (let ((?x2272 (center s_________________)))
 (let (($x2310 (= ?x2272 ?x2134)))
 (let ((?x1948 (right s________________)))
 (let ((?x2279 (top ?x1948)))
 (let ((?x2281 (stack ?x2279 ?x2134)))
 (let (($x2307 (= ?x2272 ?x2281)))
 (let (($x2282 ((_ is stack ) ?x1948)))
 (let (($x2283 (= c________________ right-to-center)))
 (let (($x2284 (and $x2283 $x2282)))
 (let (($x2285 (= c________________ right-to-left)))
 (let (($x2286 (and $x2285 $x2282)))
 (let ((?x2274 (rest ?x2134)))
 (let (($x2302 (= ?x2272 ?x2274)))
 (let (($x2287 ((_ is stack ) ?x2134)))
 (let (($x2288 (= c________________ center-to-right)))
 (let (($x2289 (and $x2288 $x2287)))
 (let (($x2290 (= c________________ center-to-left)))
 (let (($x2291 (and $x2290 $x2287)))
 (let ((?x1914 (left s________________)))
 (let ((?x2132 (top ?x1914)))
 (let ((?x2273 (stack ?x2132 ?x2134)))
 (let (($x2301 (= ?x2272 ?x2273)))
 (let (($x2292 ((_ is stack ) ?x1914)))
 (let (($x2293 (= c________________ left-to-right)))
 (let (($x2294 (and $x2293 $x2292)))
 (let (($x2324 (ite $x2294 $x2301 (ite $x2291 $x2302 (ite $x2289 $x2302 (ite $x2286 $x2310 (ite $x2284 $x2307 $x2310)))))))
 (let (($x2295 (= c________________ left-to-center)))
 (let (($x2296 (and $x2295 $x2292)))
 (ite $x2296 $x2310 $x2324)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2052 (left s_________________)))
 (let ((?x2190 (left s__________________)))
 (let (($x2450 (= ?x2190 ?x2052)))
 (let ((?x2086 (right s_________________)))
 (let ((?x2417 (top ?x2086)))
 (let ((?x2418 (stack ?x2417 ?x2052)))
 (let (($x2444 (= ?x2190 ?x2418)))
 (let (($x2420 ((_ is stack ) ?x2086)))
 (let (($x2423 (= c_________________ right-to-left)))
 (let (($x2424 (and $x2423 $x2420)))
 (let ((?x2272 (center s_________________)))
 (let (($x2425 ((_ is stack ) ?x2272)))
 (let (($x2426 (= c_________________ center-to-right)))
 (let (($x2427 (and $x2426 $x2425)))
 (let ((?x2413 (top ?x2272)))
 (let ((?x2414 (stack ?x2413 ?x2052)))
 (let (($x2441 (= ?x2190 ?x2414)))
 (let (($x2428 (= c_________________ center-to-left)))
 (let (($x2429 (and $x2428 $x2425)))
 (let ((?x2223 (rest ?x2052)))
 (let (($x2437 (= ?x2190 ?x2223)))
 (let (($x2430 ((_ is stack ) ?x2052)))
 (let (($x2431 (= c_________________ left-to-right)))
 (let (($x2432 (and $x2431 $x2430)))
 (let (($x2433 (= c_________________ left-to-center)))
 (let (($x2434 (and $x2433 $x2430)))
 (ite $x2434 $x2437 (ite $x2432 $x2437 (ite $x2429 $x2441 (ite $x2427 $x2450 (ite $x2424 $x2444 $x2450))))))))))))))))))))))))))))))))
(assert
 (let ((?x2086 (right s_________________)))
 (let ((?x2224 (right s__________________)))
 (let (($x2446 (= ?x2224 ?x2086)))
 (let ((?x2416 (rest ?x2086)))
 (let (($x2443 (= ?x2224 ?x2416)))
 (let (($x2420 ((_ is stack ) ?x2086)))
 (let (($x2421 (= c_________________ right-to-center)))
 (let (($x2422 (and $x2421 $x2420)))
 (let (($x2423 (= c_________________ right-to-left)))
 (let (($x2424 (and $x2423 $x2420)))
 (let ((?x2272 (center s_________________)))
 (let ((?x2413 (top ?x2272)))
 (let ((?x2415 (stack ?x2413 ?x2086)))
 (let (($x2442 (= ?x2224 ?x2415)))
 (let (($x2425 ((_ is stack ) ?x2272)))
 (let (($x2426 (= c_________________ center-to-right)))
 (let (($x2427 (and $x2426 $x2425)))
 (let (($x2428 (= c_________________ center-to-left)))
 (let (($x2429 (and $x2428 $x2425)))
 (let ((?x2052 (left s_________________)))
 (let (($x2430 ((_ is stack ) ?x2052)))
 (let (($x2431 (= c_________________ left-to-right)))
 (let (($x2432 (and $x2431 $x2430)))
 (let (($x2463 (ite $x2432 $x2446 (ite $x2429 $x2446 (ite $x2427 $x2442 (ite $x2424 $x2443 (ite $x2422 $x2443 $x2446)))))))
 (let ((?x2270 (top ?x2052)))
 (let ((?x2409 (stack ?x2270 ?x2086)))
 (let (($x2438 (= ?x2224 ?x2409)))
 (let (($x2433 (= c_________________ left-to-center)))
 (let (($x2434 (and $x2433 $x2430)))
 (ite $x2434 $x2438 $x2463)))))))))))))))))))))))))))))))
(assert
 (let ((?x2272 (center s_________________)))
 (let ((?x2410 (center s__________________)))
 (let (($x2448 (= ?x2410 ?x2272)))
 (let ((?x2086 (right s_________________)))
 (let ((?x2417 (top ?x2086)))
 (let ((?x2419 (stack ?x2417 ?x2272)))
 (let (($x2445 (= ?x2410 ?x2419)))
 (let (($x2420 ((_ is stack ) ?x2086)))
 (let (($x2421 (= c_________________ right-to-center)))
 (let (($x2422 (and $x2421 $x2420)))
 (let (($x2423 (= c_________________ right-to-left)))
 (let (($x2424 (and $x2423 $x2420)))
 (let ((?x2412 (rest ?x2272)))
 (let (($x2440 (= ?x2410 ?x2412)))
 (let (($x2425 ((_ is stack ) ?x2272)))
 (let (($x2426 (= c_________________ center-to-right)))
 (let (($x2427 (and $x2426 $x2425)))
 (let (($x2428 (= c_________________ center-to-left)))
 (let (($x2429 (and $x2428 $x2425)))
 (let ((?x2052 (left s_________________)))
 (let ((?x2270 (top ?x2052)))
 (let ((?x2411 (stack ?x2270 ?x2272)))
 (let (($x2439 (= ?x2410 ?x2411)))
 (let (($x2430 ((_ is stack ) ?x2052)))
 (let (($x2431 (= c_________________ left-to-right)))
 (let (($x2432 (and $x2431 $x2430)))
 (let (($x2462 (ite $x2432 $x2439 (ite $x2429 $x2440 (ite $x2427 $x2440 (ite $x2424 $x2448 (ite $x2422 $x2445 $x2448)))))))
 (let (($x2433 (= c_________________ left-to-center)))
 (let (($x2434 (and $x2433 $x2430)))
 (ite $x2434 $x2448 $x2462)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2190 (left s__________________)))
 (let ((?x2328 (left s___________________)))
 (let (($x2588 (= ?x2328 ?x2190)))
 (let ((?x2224 (right s__________________)))
 (let ((?x2555 (top ?x2224)))
 (let ((?x2556 (stack ?x2555 ?x2190)))
 (let (($x2582 (= ?x2328 ?x2556)))
 (let (($x2558 ((_ is stack ) ?x2224)))
 (let (($x2561 (= c__________________ right-to-left)))
 (let (($x2562 (and $x2561 $x2558)))
 (let ((?x2410 (center s__________________)))
 (let (($x2563 ((_ is stack ) ?x2410)))
 (let (($x2564 (= c__________________ center-to-right)))
 (let (($x2565 (and $x2564 $x2563)))
 (let ((?x2551 (top ?x2410)))
 (let ((?x2552 (stack ?x2551 ?x2190)))
 (let (($x2579 (= ?x2328 ?x2552)))
 (let (($x2566 (= c__________________ center-to-left)))
 (let (($x2567 (and $x2566 $x2563)))
 (let ((?x2361 (rest ?x2190)))
 (let (($x2575 (= ?x2328 ?x2361)))
 (let (($x2568 ((_ is stack ) ?x2190)))
 (let (($x2569 (= c__________________ left-to-right)))
 (let (($x2570 (and $x2569 $x2568)))
 (let (($x2571 (= c__________________ left-to-center)))
 (let (($x2572 (and $x2571 $x2568)))
 (ite $x2572 $x2575 (ite $x2570 $x2575 (ite $x2567 $x2579 (ite $x2565 $x2588 (ite $x2562 $x2582 $x2588))))))))))))))))))))))))))))))))
(assert
 (let ((?x2224 (right s__________________)))
 (let ((?x2362 (right s___________________)))
 (let (($x2584 (= ?x2362 ?x2224)))
 (let ((?x2554 (rest ?x2224)))
 (let (($x2581 (= ?x2362 ?x2554)))
 (let (($x2558 ((_ is stack ) ?x2224)))
 (let (($x2559 (= c__________________ right-to-center)))
 (let (($x2560 (and $x2559 $x2558)))
 (let (($x2561 (= c__________________ right-to-left)))
 (let (($x2562 (and $x2561 $x2558)))
 (let ((?x2410 (center s__________________)))
 (let ((?x2551 (top ?x2410)))
 (let ((?x2553 (stack ?x2551 ?x2224)))
 (let (($x2580 (= ?x2362 ?x2553)))
 (let (($x2563 ((_ is stack ) ?x2410)))
 (let (($x2564 (= c__________________ center-to-right)))
 (let (($x2565 (and $x2564 $x2563)))
 (let (($x2566 (= c__________________ center-to-left)))
 (let (($x2567 (and $x2566 $x2563)))
 (let ((?x2190 (left s__________________)))
 (let (($x2568 ((_ is stack ) ?x2190)))
 (let (($x2569 (= c__________________ left-to-right)))
 (let (($x2570 (and $x2569 $x2568)))
 (let (($x2601 (ite $x2570 $x2584 (ite $x2567 $x2584 (ite $x2565 $x2580 (ite $x2562 $x2581 (ite $x2560 $x2581 $x2584)))))))
 (let ((?x2408 (top ?x2190)))
 (let ((?x2547 (stack ?x2408 ?x2224)))
 (let (($x2576 (= ?x2362 ?x2547)))
 (let (($x2571 (= c__________________ left-to-center)))
 (let (($x2572 (and $x2571 $x2568)))
 (ite $x2572 $x2576 $x2601)))))))))))))))))))))))))))))))
(assert
 (let ((?x2410 (center s__________________)))
 (let ((?x2548 (center s___________________)))
 (let (($x2586 (= ?x2548 ?x2410)))
 (let ((?x2224 (right s__________________)))
 (let ((?x2555 (top ?x2224)))
 (let ((?x2557 (stack ?x2555 ?x2410)))
 (let (($x2583 (= ?x2548 ?x2557)))
 (let (($x2558 ((_ is stack ) ?x2224)))
 (let (($x2559 (= c__________________ right-to-center)))
 (let (($x2560 (and $x2559 $x2558)))
 (let (($x2561 (= c__________________ right-to-left)))
 (let (($x2562 (and $x2561 $x2558)))
 (let ((?x2550 (rest ?x2410)))
 (let (($x2578 (= ?x2548 ?x2550)))
 (let (($x2563 ((_ is stack ) ?x2410)))
 (let (($x2564 (= c__________________ center-to-right)))
 (let (($x2565 (and $x2564 $x2563)))
 (let (($x2566 (= c__________________ center-to-left)))
 (let (($x2567 (and $x2566 $x2563)))
 (let ((?x2190 (left s__________________)))
 (let ((?x2408 (top ?x2190)))
 (let ((?x2549 (stack ?x2408 ?x2410)))
 (let (($x2577 (= ?x2548 ?x2549)))
 (let (($x2568 ((_ is stack ) ?x2190)))
 (let (($x2569 (= c__________________ left-to-right)))
 (let (($x2570 (and $x2569 $x2568)))
 (let (($x2600 (ite $x2570 $x2577 (ite $x2567 $x2578 (ite $x2565 $x2578 (ite $x2562 $x2586 (ite $x2560 $x2583 $x2586)))))))
 (let (($x2571 (= c__________________ left-to-center)))
 (let (($x2572 (and $x2571 $x2568)))
 (ite $x2572 $x2586 $x2600)))))))))))))))))))))))))))))))
(assert
 (= c____________________ c!19))
(assert
 (let ((?x2328 (left s___________________)))
 (let ((?x2466 (left s____________________)))
 (let (($x2726 (= ?x2466 ?x2328)))
 (let ((?x2362 (right s___________________)))
 (let ((?x2693 (top ?x2362)))
 (let ((?x2694 (stack ?x2693 ?x2328)))
 (let (($x2720 (= ?x2466 ?x2694)))
 (let (($x2696 ((_ is stack ) ?x2362)))
 (let (($x2699 (= c___________________ right-to-left)))
 (let (($x2700 (and $x2699 $x2696)))
 (let ((?x2548 (center s___________________)))
 (let (($x2701 ((_ is stack ) ?x2548)))
 (let (($x2702 (= c___________________ center-to-right)))
 (let (($x2703 (and $x2702 $x2701)))
 (let ((?x2689 (top ?x2548)))
 (let ((?x2690 (stack ?x2689 ?x2328)))
 (let (($x2717 (= ?x2466 ?x2690)))
 (let (($x2704 (= c___________________ center-to-left)))
 (let (($x2705 (and $x2704 $x2701)))
 (let ((?x2499 (rest ?x2328)))
 (let (($x2713 (= ?x2466 ?x2499)))
 (let (($x2706 ((_ is stack ) ?x2328)))
 (let (($x2707 (= c___________________ left-to-right)))
 (let (($x2708 (and $x2707 $x2706)))
 (let (($x2709 (= c___________________ left-to-center)))
 (let (($x2710 (and $x2709 $x2706)))
 (ite $x2710 $x2713 (ite $x2708 $x2713 (ite $x2705 $x2717 (ite $x2703 $x2726 (ite $x2700 $x2720 $x2726))))))))))))))))))))))))))))))))
(assert
 (let ((?x2362 (right s___________________)))
 (let ((?x2500 (right s____________________)))
 (let (($x2722 (= ?x2500 ?x2362)))
 (let ((?x2692 (rest ?x2362)))
 (let (($x2719 (= ?x2500 ?x2692)))
 (let (($x2696 ((_ is stack ) ?x2362)))
 (let (($x2697 (= c___________________ right-to-center)))
 (let (($x2698 (and $x2697 $x2696)))
 (let (($x2699 (= c___________________ right-to-left)))
 (let (($x2700 (and $x2699 $x2696)))
 (let ((?x2548 (center s___________________)))
 (let ((?x2689 (top ?x2548)))
 (let ((?x2691 (stack ?x2689 ?x2362)))
 (let (($x2718 (= ?x2500 ?x2691)))
 (let (($x2701 ((_ is stack ) ?x2548)))
 (let (($x2702 (= c___________________ center-to-right)))
 (let (($x2703 (and $x2702 $x2701)))
 (let (($x2704 (= c___________________ center-to-left)))
 (let (($x2705 (and $x2704 $x2701)))
 (let ((?x2328 (left s___________________)))
 (let (($x2706 ((_ is stack ) ?x2328)))
 (let (($x2707 (= c___________________ left-to-right)))
 (let (($x2708 (and $x2707 $x2706)))
 (let (($x2739 (ite $x2708 $x2722 (ite $x2705 $x2722 (ite $x2703 $x2718 (ite $x2700 $x2719 (ite $x2698 $x2719 $x2722)))))))
 (let ((?x2546 (top ?x2328)))
 (let ((?x2685 (stack ?x2546 ?x2362)))
 (let (($x2714 (= ?x2500 ?x2685)))
 (let (($x2709 (= c___________________ left-to-center)))
 (let (($x2710 (and $x2709 $x2706)))
 (ite $x2710 $x2714 $x2739)))))))))))))))))))))))))))))))
(assert
 (let ((?x2548 (center s___________________)))
 (let ((?x2686 (center s____________________)))
 (let (($x2724 (= ?x2686 ?x2548)))
 (let ((?x2362 (right s___________________)))
 (let ((?x2693 (top ?x2362)))
 (let ((?x2695 (stack ?x2693 ?x2548)))
 (let (($x2721 (= ?x2686 ?x2695)))
 (let (($x2696 ((_ is stack ) ?x2362)))
 (let (($x2697 (= c___________________ right-to-center)))
 (let (($x2698 (and $x2697 $x2696)))
 (let (($x2699 (= c___________________ right-to-left)))
 (let (($x2700 (and $x2699 $x2696)))
 (let ((?x2688 (rest ?x2548)))
 (let (($x2716 (= ?x2686 ?x2688)))
 (let (($x2701 ((_ is stack ) ?x2548)))
 (let (($x2702 (= c___________________ center-to-right)))
 (let (($x2703 (and $x2702 $x2701)))
 (let (($x2704 (= c___________________ center-to-left)))
 (let (($x2705 (and $x2704 $x2701)))
 (let ((?x2328 (left s___________________)))
 (let ((?x2546 (top ?x2328)))
 (let ((?x2687 (stack ?x2546 ?x2548)))
 (let (($x2715 (= ?x2686 ?x2687)))
 (let (($x2706 ((_ is stack ) ?x2328)))
 (let (($x2707 (= c___________________ left-to-right)))
 (let (($x2708 (and $x2707 $x2706)))
 (let (($x2738 (ite $x2708 $x2715 (ite $x2705 $x2716 (ite $x2703 $x2716 (ite $x2700 $x2724 (ite $x2698 $x2721 $x2724)))))))
 (let (($x2709 (= c___________________ left-to-center)))
 (let (($x2710 (and $x2709 $x2706)))
 (ite $x2710 $x2724 $x2738)))))))))))))))))))))))))))))))
(assert
 (let ((?x49 (stack K (stack J (stack I (stack H (stack F (stack B empty))))))))
 (let ((?x50 (stack M ?x49)))
 (let ((?x2500 (right s____________________)))
 (let (($x2742 (= ?x2500 ?x50)))
 (let ((?x43 (stack A (stack D (stack G empty)))))
 (let ((?x2686 (center s____________________)))
 (let (($x2773 (= ?x2686 ?x43)))
 (let ((?x40 (stack E (stack L (stack C empty)))))
 (let ((?x2466 (left s____________________)))
 (let (($x2774 (= ?x2466 ?x40)))
 (let (($x2776 (not (and $x2774 $x2773 $x2742))))
 (not $x2776)))))))))))))
(check-sat)
(exit)
