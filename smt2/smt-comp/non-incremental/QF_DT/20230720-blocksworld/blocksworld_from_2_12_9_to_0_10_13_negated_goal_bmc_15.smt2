(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S) (T) (U) (V) (W))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S_T_U_V_W) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x36 (stack J empty)))
 (let ((?x35 (stack T ?x36)))
 (let ((?x125 (left s_tmp_)))
 (= ?x125 ?x35)))))
(assert
 (let ((?x37 (stack M empty)))
 (let ((?x38 (stack O ?x37)))
 (let ((?x39 (stack D ?x38)))
 (let ((?x40 (stack Q ?x39)))
 (let ((?x41 (stack U ?x40)))
 (let ((?x42 (stack H ?x41)))
 (let ((?x43 (stack K ?x42)))
 (let ((?x44 (stack G ?x43)))
 (let ((?x45 (stack F ?x44)))
 (let ((?x46 (stack W ?x45)))
 (let ((?x47 (stack B ?x46)))
 (let ((?x48 (stack V ?x47)))
 (let ((?x128 (center s_tmp__)))
 (= ?x128 ?x48)))))))))))))))
(assert
 (let ((?x49 (stack A empty)))
 (let ((?x50 (stack C ?x49)))
 (let ((?x51 (stack E ?x50)))
 (let ((?x52 (stack I ?x51)))
 (let ((?x53 (stack L ?x52)))
 (let ((?x54 (stack N ?x53)))
 (let ((?x55 (stack P ?x54)))
 (let ((?x56 (stack R ?x55)))
 (let ((?x57 (stack S ?x56)))
 (let ((?x131 (right s_tmp___)))
 (= ?x131 ?x57))))))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x158 (left s_tmp__)))
 (= (left s_tmp___) ?x158)))
(assert
 (let ((?x128 (center s_tmp__)))
 (= (center s_tmp___) ?x128)))
(assert
 (let ((?x162 (center s_tmp_)))
 (= ?x162 (center s_tmp))))
(assert
 (let ((?x165 (right s_tmp_)))
 (= ?x165 (right s_tmp))))
(assert
 (let ((?x125 (left s_tmp_)))
 (let ((?x158 (left s_tmp__)))
 (= ?x158 ?x125))))
(assert
 (let ((?x165 (right s_tmp_)))
 (let ((?x169 (right s_tmp__)))
 (= ?x169 ?x165))))
(assert
 (= c__ c!1))
(assert
 (let ((?x102 (left s_)))
 (let ((?x327 (left s__)))
 (let (($x303 (= ?x327 ?x102)))
 (let ((?x105 (right s_)))
 (let (($x300 ((_ is stack ) ?x105)))
 (let (($x315 (= c_ right-to-left)))
 (let (($x286 (and $x315 $x300)))
 (let ((?x107 (center s_)))
 (let (($x287 ((_ is stack ) ?x107)))
 (let (($x288 (= c_ center-to-right)))
 (let (($x307 (and $x288 $x287)))
 (let (($x308 (= c_ center-to-left)))
 (let (($x309 (and $x308 $x287)))
 (let (($x330 (ite $x309 (= ?x327 (stack (top ?x107) ?x102)) (ite $x307 $x303 (ite $x286 (= ?x327 (stack (top ?x105) ?x102)) $x303)))))
 (let (($x296 (= ?x327 (rest ?x102))))
 (let (($x283 ((_ is stack ) ?x102)))
 (let (($x284 (= c_ left-to-right)))
 (let (($x285 (and $x284 $x283)))
 (let (($x331 (= c_ left-to-center)))
 (let (($x332 (and $x331 $x283)))
 (ite $x332 $x296 (ite $x285 $x296 $x330)))))))))))))))))))))))
(assert
 (let ((?x105 (right s_)))
 (let ((?x290 (right s__)))
 (let (($x335 (= ?x290 ?x105)))
 (let (($x323 (= ?x290 (rest ?x105))))
 (let (($x300 ((_ is stack ) ?x105)))
 (let (($x313 (= c_ right-to-center)))
 (let (($x314 (and $x313 $x300)))
 (let (($x315 (= c_ right-to-left)))
 (let (($x286 (and $x315 $x300)))
 (let ((?x107 (center s_)))
 (let (($x287 ((_ is stack ) ?x107)))
 (let (($x288 (= c_ center-to-right)))
 (let (($x307 (and $x288 $x287)))
 (let (($x318 (ite $x307 (= ?x290 (stack (top ?x107) ?x105)) (ite $x286 $x323 (ite $x314 $x323 $x335)))))
 (let (($x308 (= c_ center-to-left)))
 (let (($x309 (and $x308 $x287)))
 (let ((?x102 (left s_)))
 (let (($x283 ((_ is stack ) ?x102)))
 (let (($x284 (= c_ left-to-right)))
 (let (($x285 (and $x284 $x283)))
 (let (($x331 (= c_ left-to-center)))
 (let (($x332 (and $x331 $x283)))
 (ite $x332 (= ?x290 (stack (top ?x102) ?x105)) (ite $x285 $x335 (ite $x309 $x335 $x318))))))))))))))))))))))))))
(assert
 (let ((?x107 (center s_)))
 (let ((?x305 (center s__)))
 (let (($x301 (= ?x305 ?x107)))
 (let ((?x105 (right s_)))
 (let (($x300 ((_ is stack ) ?x105)))
 (let (($x313 (= c_ right-to-center)))
 (let (($x314 (and $x313 $x300)))
 (let (($x315 (= c_ right-to-left)))
 (let (($x286 (and $x315 $x300)))
 (let (($x281 (= ?x305 (rest ?x107))))
 (let (($x287 ((_ is stack ) ?x107)))
 (let (($x288 (= c_ center-to-right)))
 (let (($x307 (and $x288 $x287)))
 (let (($x317 (ite $x307 $x281 (ite $x286 $x301 (ite $x314 (= ?x305 (stack (top ?x105) ?x107)) $x301)))))
 (let (($x308 (= c_ center-to-left)))
 (let (($x309 (and $x308 $x287)))
 (let ((?x102 (left s_)))
 (let (($x283 ((_ is stack ) ?x102)))
 (let (($x284 (= c_ left-to-right)))
 (let (($x285 (and $x284 $x283)))
 (let (($x331 (= c_ left-to-center)))
 (let (($x332 (and $x331 $x283)))
 (ite $x332 $x301 (ite $x285 (= ?x305 (stack (top ?x102) ?x107)) (ite $x309 $x281 $x317))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x327 (left s__)))
 (let ((?x172 (left s___)))
 (let (($x456 (= ?x172 ?x327)))
 (let ((?x290 (right s__)))
 (let ((?x423 (top ?x290)))
 (let ((?x424 (stack ?x423 ?x327)))
 (let (($x450 (= ?x172 ?x424)))
 (let (($x426 ((_ is stack ) ?x290)))
 (let (($x429 (= c__ right-to-left)))
 (let (($x430 (and $x429 $x426)))
 (let ((?x305 (center s__)))
 (let (($x431 ((_ is stack ) ?x305)))
 (let (($x432 (= c__ center-to-right)))
 (let (($x433 (and $x432 $x431)))
 (let ((?x419 (top ?x305)))
 (let ((?x420 (stack ?x419 ?x327)))
 (let (($x447 (= ?x172 ?x420)))
 (let (($x434 (= c__ center-to-left)))
 (let (($x435 (and $x434 $x431)))
 (let ((?x174 (rest ?x327)))
 (let (($x443 (= ?x172 ?x174)))
 (let (($x436 ((_ is stack ) ?x327)))
 (let (($x437 (= c__ left-to-right)))
 (let (($x438 (and $x437 $x436)))
 (let (($x439 (= c__ left-to-center)))
 (let (($x440 (and $x439 $x436)))
 (ite $x440 $x443 (ite $x438 $x443 (ite $x435 $x447 (ite $x433 $x456 (ite $x430 $x450 $x456))))))))))))))))))))))))))))))))
(assert
 (let ((?x290 (right s__)))
 (let ((?x175 (right s___)))
 (let (($x452 (= ?x175 ?x290)))
 (let ((?x422 (rest ?x290)))
 (let (($x449 (= ?x175 ?x422)))
 (let (($x426 ((_ is stack ) ?x290)))
 (let (($x427 (= c__ right-to-center)))
 (let (($x428 (and $x427 $x426)))
 (let (($x429 (= c__ right-to-left)))
 (let (($x430 (and $x429 $x426)))
 (let ((?x305 (center s__)))
 (let ((?x419 (top ?x305)))
 (let ((?x421 (stack ?x419 ?x290)))
 (let (($x448 (= ?x175 ?x421)))
 (let (($x431 ((_ is stack ) ?x305)))
 (let (($x432 (= c__ center-to-right)))
 (let (($x433 (and $x432 $x431)))
 (let (($x434 (= c__ center-to-left)))
 (let (($x435 (and $x434 $x431)))
 (let ((?x327 (left s__)))
 (let (($x436 ((_ is stack ) ?x327)))
 (let (($x437 (= c__ left-to-right)))
 (let (($x438 (and $x437 $x436)))
 (let (($x469 (ite $x438 $x452 (ite $x435 $x452 (ite $x433 $x448 (ite $x430 $x449 (ite $x428 $x449 $x452)))))))
 (let ((?x279 (top ?x327)))
 (let ((?x415 (stack ?x279 ?x290)))
 (let (($x444 (= ?x175 ?x415)))
 (let (($x439 (= c__ left-to-center)))
 (let (($x440 (and $x439 $x436)))
 (ite $x440 $x444 $x469)))))))))))))))))))))))))))))))
(assert
 (let ((?x305 (center s__)))
 (let ((?x416 (center s___)))
 (let (($x454 (= ?x416 ?x305)))
 (let ((?x290 (right s__)))
 (let ((?x423 (top ?x290)))
 (let ((?x425 (stack ?x423 ?x305)))
 (let (($x451 (= ?x416 ?x425)))
 (let (($x426 ((_ is stack ) ?x290)))
 (let (($x427 (= c__ right-to-center)))
 (let (($x428 (and $x427 $x426)))
 (let (($x429 (= c__ right-to-left)))
 (let (($x430 (and $x429 $x426)))
 (let ((?x418 (rest ?x305)))
 (let (($x446 (= ?x416 ?x418)))
 (let (($x431 ((_ is stack ) ?x305)))
 (let (($x432 (= c__ center-to-right)))
 (let (($x433 (and $x432 $x431)))
 (let (($x434 (= c__ center-to-left)))
 (let (($x435 (and $x434 $x431)))
 (let ((?x327 (left s__)))
 (let ((?x279 (top ?x327)))
 (let ((?x417 (stack ?x279 ?x305)))
 (let (($x445 (= ?x416 ?x417)))
 (let (($x436 ((_ is stack ) ?x327)))
 (let (($x437 (= c__ left-to-right)))
 (let (($x438 (and $x437 $x436)))
 (let (($x468 (ite $x438 $x445 (ite $x435 $x446 (ite $x433 $x446 (ite $x430 $x454 (ite $x428 $x451 $x454)))))))
 (let (($x439 (= c__ left-to-center)))
 (let (($x440 (and $x439 $x436)))
 (ite $x440 $x454 $x468)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x172 (left s___)))
 (let ((?x343 (left s____)))
 (let (($x594 (= ?x343 ?x172)))
 (let ((?x175 (right s___)))
 (let ((?x561 (top ?x175)))
 (let ((?x562 (stack ?x561 ?x172)))
 (let (($x588 (= ?x343 ?x562)))
 (let (($x564 ((_ is stack ) ?x175)))
 (let (($x567 (= c___ right-to-left)))
 (let (($x568 (and $x567 $x564)))
 (let ((?x416 (center s___)))
 (let (($x569 ((_ is stack ) ?x416)))
 (let (($x570 (= c___ center-to-right)))
 (let (($x571 (and $x570 $x569)))
 (let ((?x557 (top ?x416)))
 (let ((?x558 (stack ?x557 ?x172)))
 (let (($x585 (= ?x343 ?x558)))
 (let (($x572 (= c___ center-to-left)))
 (let (($x573 (and $x572 $x569)))
 (let ((?x385 (rest ?x172)))
 (let (($x581 (= ?x343 ?x385)))
 (let (($x574 ((_ is stack ) ?x172)))
 (let (($x575 (= c___ left-to-right)))
 (let (($x576 (and $x575 $x574)))
 (let (($x577 (= c___ left-to-center)))
 (let (($x578 (and $x577 $x574)))
 (ite $x578 $x581 (ite $x576 $x581 (ite $x573 $x585 (ite $x571 $x594 (ite $x568 $x588 $x594))))))))))))))))))))))))))))))))
(assert
 (let ((?x175 (right s___)))
 (let ((?x386 (right s____)))
 (let (($x590 (= ?x386 ?x175)))
 (let ((?x560 (rest ?x175)))
 (let (($x587 (= ?x386 ?x560)))
 (let (($x564 ((_ is stack ) ?x175)))
 (let (($x565 (= c___ right-to-center)))
 (let (($x566 (and $x565 $x564)))
 (let (($x567 (= c___ right-to-left)))
 (let (($x568 (and $x567 $x564)))
 (let ((?x416 (center s___)))
 (let ((?x557 (top ?x416)))
 (let ((?x559 (stack ?x557 ?x175)))
 (let (($x586 (= ?x386 ?x559)))
 (let (($x569 ((_ is stack ) ?x416)))
 (let (($x570 (= c___ center-to-right)))
 (let (($x571 (and $x570 $x569)))
 (let (($x572 (= c___ center-to-left)))
 (let (($x573 (and $x572 $x569)))
 (let ((?x172 (left s___)))
 (let (($x574 ((_ is stack ) ?x172)))
 (let (($x575 (= c___ left-to-right)))
 (let (($x576 (and $x575 $x574)))
 (let (($x607 (ite $x576 $x590 (ite $x573 $x590 (ite $x571 $x586 (ite $x568 $x587 (ite $x566 $x587 $x590)))))))
 (let ((?x414 (top ?x172)))
 (let ((?x553 (stack ?x414 ?x175)))
 (let (($x582 (= ?x386 ?x553)))
 (let (($x577 (= c___ left-to-center)))
 (let (($x578 (and $x577 $x574)))
 (ite $x578 $x582 $x607)))))))))))))))))))))))))))))))
(assert
 (let ((?x416 (center s___)))
 (let ((?x554 (center s____)))
 (let (($x592 (= ?x554 ?x416)))
 (let ((?x175 (right s___)))
 (let ((?x561 (top ?x175)))
 (let ((?x563 (stack ?x561 ?x416)))
 (let (($x589 (= ?x554 ?x563)))
 (let (($x564 ((_ is stack ) ?x175)))
 (let (($x565 (= c___ right-to-center)))
 (let (($x566 (and $x565 $x564)))
 (let (($x567 (= c___ right-to-left)))
 (let (($x568 (and $x567 $x564)))
 (let ((?x556 (rest ?x416)))
 (let (($x584 (= ?x554 ?x556)))
 (let (($x569 ((_ is stack ) ?x416)))
 (let (($x570 (= c___ center-to-right)))
 (let (($x571 (and $x570 $x569)))
 (let (($x572 (= c___ center-to-left)))
 (let (($x573 (and $x572 $x569)))
 (let ((?x172 (left s___)))
 (let ((?x414 (top ?x172)))
 (let ((?x555 (stack ?x414 ?x416)))
 (let (($x583 (= ?x554 ?x555)))
 (let (($x574 ((_ is stack ) ?x172)))
 (let (($x575 (= c___ left-to-right)))
 (let (($x576 (and $x575 $x574)))
 (let (($x606 (ite $x576 $x583 (ite $x573 $x584 (ite $x571 $x584 (ite $x568 $x592 (ite $x566 $x589 $x592)))))))
 (let (($x577 (= c___ left-to-center)))
 (let (($x578 (and $x577 $x574)))
 (ite $x578 $x592 $x606)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x343 (left s____)))
 (let ((?x472 (left s_____)))
 (let (($x732 (= ?x472 ?x343)))
 (let ((?x386 (right s____)))
 (let ((?x699 (top ?x386)))
 (let ((?x700 (stack ?x699 ?x343)))
 (let (($x726 (= ?x472 ?x700)))
 (let (($x702 ((_ is stack ) ?x386)))
 (let (($x705 (= c____ right-to-left)))
 (let (($x706 (and $x705 $x702)))
 (let ((?x554 (center s____)))
 (let (($x707 ((_ is stack ) ?x554)))
 (let (($x708 (= c____ center-to-right)))
 (let (($x709 (and $x708 $x707)))
 (let ((?x695 (top ?x554)))
 (let ((?x696 (stack ?x695 ?x343)))
 (let (($x723 (= ?x472 ?x696)))
 (let (($x710 (= c____ center-to-left)))
 (let (($x711 (and $x710 $x707)))
 (let ((?x505 (rest ?x343)))
 (let (($x719 (= ?x472 ?x505)))
 (let (($x712 ((_ is stack ) ?x343)))
 (let (($x713 (= c____ left-to-right)))
 (let (($x714 (and $x713 $x712)))
 (let (($x715 (= c____ left-to-center)))
 (let (($x716 (and $x715 $x712)))
 (ite $x716 $x719 (ite $x714 $x719 (ite $x711 $x723 (ite $x709 $x732 (ite $x706 $x726 $x732))))))))))))))))))))))))))))))))
(assert
 (let ((?x386 (right s____)))
 (let ((?x506 (right s_____)))
 (let (($x728 (= ?x506 ?x386)))
 (let ((?x698 (rest ?x386)))
 (let (($x725 (= ?x506 ?x698)))
 (let (($x702 ((_ is stack ) ?x386)))
 (let (($x703 (= c____ right-to-center)))
 (let (($x704 (and $x703 $x702)))
 (let (($x705 (= c____ right-to-left)))
 (let (($x706 (and $x705 $x702)))
 (let ((?x554 (center s____)))
 (let ((?x695 (top ?x554)))
 (let ((?x697 (stack ?x695 ?x386)))
 (let (($x724 (= ?x506 ?x697)))
 (let (($x707 ((_ is stack ) ?x554)))
 (let (($x708 (= c____ center-to-right)))
 (let (($x709 (and $x708 $x707)))
 (let (($x710 (= c____ center-to-left)))
 (let (($x711 (and $x710 $x707)))
 (let ((?x343 (left s____)))
 (let (($x712 ((_ is stack ) ?x343)))
 (let (($x713 (= c____ left-to-right)))
 (let (($x714 (and $x713 $x712)))
 (let (($x745 (ite $x714 $x728 (ite $x711 $x728 (ite $x709 $x724 (ite $x706 $x725 (ite $x704 $x725 $x728)))))))
 (let ((?x552 (top ?x343)))
 (let ((?x691 (stack ?x552 ?x386)))
 (let (($x720 (= ?x506 ?x691)))
 (let (($x715 (= c____ left-to-center)))
 (let (($x716 (and $x715 $x712)))
 (ite $x716 $x720 $x745)))))))))))))))))))))))))))))))
(assert
 (let ((?x554 (center s____)))
 (let ((?x692 (center s_____)))
 (let (($x730 (= ?x692 ?x554)))
 (let ((?x386 (right s____)))
 (let ((?x699 (top ?x386)))
 (let ((?x701 (stack ?x699 ?x554)))
 (let (($x727 (= ?x692 ?x701)))
 (let (($x702 ((_ is stack ) ?x386)))
 (let (($x703 (= c____ right-to-center)))
 (let (($x704 (and $x703 $x702)))
 (let (($x705 (= c____ right-to-left)))
 (let (($x706 (and $x705 $x702)))
 (let ((?x694 (rest ?x554)))
 (let (($x722 (= ?x692 ?x694)))
 (let (($x707 ((_ is stack ) ?x554)))
 (let (($x708 (= c____ center-to-right)))
 (let (($x709 (and $x708 $x707)))
 (let (($x710 (= c____ center-to-left)))
 (let (($x711 (and $x710 $x707)))
 (let ((?x343 (left s____)))
 (let ((?x552 (top ?x343)))
 (let ((?x693 (stack ?x552 ?x554)))
 (let (($x721 (= ?x692 ?x693)))
 (let (($x712 ((_ is stack ) ?x343)))
 (let (($x713 (= c____ left-to-right)))
 (let (($x714 (and $x713 $x712)))
 (let (($x744 (ite $x714 $x721 (ite $x711 $x722 (ite $x709 $x722 (ite $x706 $x730 (ite $x704 $x727 $x730)))))))
 (let (($x715 (= c____ left-to-center)))
 (let (($x716 (and $x715 $x712)))
 (ite $x716 $x730 $x744)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x472 (left s_____)))
 (let ((?x610 (left s______)))
 (let (($x870 (= ?x610 ?x472)))
 (let ((?x506 (right s_____)))
 (let ((?x837 (top ?x506)))
 (let ((?x838 (stack ?x837 ?x472)))
 (let (($x864 (= ?x610 ?x838)))
 (let (($x840 ((_ is stack ) ?x506)))
 (let (($x843 (= c_____ right-to-left)))
 (let (($x844 (and $x843 $x840)))
 (let ((?x692 (center s_____)))
 (let (($x845 ((_ is stack ) ?x692)))
 (let (($x846 (= c_____ center-to-right)))
 (let (($x847 (and $x846 $x845)))
 (let ((?x833 (top ?x692)))
 (let ((?x834 (stack ?x833 ?x472)))
 (let (($x861 (= ?x610 ?x834)))
 (let (($x848 (= c_____ center-to-left)))
 (let (($x849 (and $x848 $x845)))
 (let ((?x643 (rest ?x472)))
 (let (($x857 (= ?x610 ?x643)))
 (let (($x850 ((_ is stack ) ?x472)))
 (let (($x851 (= c_____ left-to-right)))
 (let (($x852 (and $x851 $x850)))
 (let (($x853 (= c_____ left-to-center)))
 (let (($x854 (and $x853 $x850)))
 (ite $x854 $x857 (ite $x852 $x857 (ite $x849 $x861 (ite $x847 $x870 (ite $x844 $x864 $x870))))))))))))))))))))))))))))))))
(assert
 (let ((?x506 (right s_____)))
 (let ((?x644 (right s______)))
 (let (($x866 (= ?x644 ?x506)))
 (let ((?x836 (rest ?x506)))
 (let (($x863 (= ?x644 ?x836)))
 (let (($x840 ((_ is stack ) ?x506)))
 (let (($x841 (= c_____ right-to-center)))
 (let (($x842 (and $x841 $x840)))
 (let (($x843 (= c_____ right-to-left)))
 (let (($x844 (and $x843 $x840)))
 (let ((?x692 (center s_____)))
 (let ((?x833 (top ?x692)))
 (let ((?x835 (stack ?x833 ?x506)))
 (let (($x862 (= ?x644 ?x835)))
 (let (($x845 ((_ is stack ) ?x692)))
 (let (($x846 (= c_____ center-to-right)))
 (let (($x847 (and $x846 $x845)))
 (let (($x848 (= c_____ center-to-left)))
 (let (($x849 (and $x848 $x845)))
 (let ((?x472 (left s_____)))
 (let (($x850 ((_ is stack ) ?x472)))
 (let (($x851 (= c_____ left-to-right)))
 (let (($x852 (and $x851 $x850)))
 (let (($x883 (ite $x852 $x866 (ite $x849 $x866 (ite $x847 $x862 (ite $x844 $x863 (ite $x842 $x863 $x866)))))))
 (let ((?x690 (top ?x472)))
 (let ((?x829 (stack ?x690 ?x506)))
 (let (($x858 (= ?x644 ?x829)))
 (let (($x853 (= c_____ left-to-center)))
 (let (($x854 (and $x853 $x850)))
 (ite $x854 $x858 $x883)))))))))))))))))))))))))))))))
(assert
 (let ((?x692 (center s_____)))
 (let ((?x830 (center s______)))
 (let (($x868 (= ?x830 ?x692)))
 (let ((?x506 (right s_____)))
 (let ((?x837 (top ?x506)))
 (let ((?x839 (stack ?x837 ?x692)))
 (let (($x865 (= ?x830 ?x839)))
 (let (($x840 ((_ is stack ) ?x506)))
 (let (($x841 (= c_____ right-to-center)))
 (let (($x842 (and $x841 $x840)))
 (let (($x843 (= c_____ right-to-left)))
 (let (($x844 (and $x843 $x840)))
 (let ((?x832 (rest ?x692)))
 (let (($x860 (= ?x830 ?x832)))
 (let (($x845 ((_ is stack ) ?x692)))
 (let (($x846 (= c_____ center-to-right)))
 (let (($x847 (and $x846 $x845)))
 (let (($x848 (= c_____ center-to-left)))
 (let (($x849 (and $x848 $x845)))
 (let ((?x472 (left s_____)))
 (let ((?x690 (top ?x472)))
 (let ((?x831 (stack ?x690 ?x692)))
 (let (($x859 (= ?x830 ?x831)))
 (let (($x850 ((_ is stack ) ?x472)))
 (let (($x851 (= c_____ left-to-right)))
 (let (($x852 (and $x851 $x850)))
 (let (($x882 (ite $x852 $x859 (ite $x849 $x860 (ite $x847 $x860 (ite $x844 $x868 (ite $x842 $x865 $x868)))))))
 (let (($x853 (= c_____ left-to-center)))
 (let (($x854 (and $x853 $x850)))
 (ite $x854 $x868 $x882)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x610 (left s______)))
 (let ((?x748 (left s_______)))
 (let (($x1008 (= ?x748 ?x610)))
 (let ((?x644 (right s______)))
 (let ((?x975 (top ?x644)))
 (let ((?x976 (stack ?x975 ?x610)))
 (let (($x1002 (= ?x748 ?x976)))
 (let (($x978 ((_ is stack ) ?x644)))
 (let (($x981 (= c______ right-to-left)))
 (let (($x982 (and $x981 $x978)))
 (let ((?x830 (center s______)))
 (let (($x983 ((_ is stack ) ?x830)))
 (let (($x984 (= c______ center-to-right)))
 (let (($x985 (and $x984 $x983)))
 (let ((?x971 (top ?x830)))
 (let ((?x972 (stack ?x971 ?x610)))
 (let (($x999 (= ?x748 ?x972)))
 (let (($x986 (= c______ center-to-left)))
 (let (($x987 (and $x986 $x983)))
 (let ((?x781 (rest ?x610)))
 (let (($x995 (= ?x748 ?x781)))
 (let (($x988 ((_ is stack ) ?x610)))
 (let (($x989 (= c______ left-to-right)))
 (let (($x990 (and $x989 $x988)))
 (let (($x991 (= c______ left-to-center)))
 (let (($x992 (and $x991 $x988)))
 (ite $x992 $x995 (ite $x990 $x995 (ite $x987 $x999 (ite $x985 $x1008 (ite $x982 $x1002 $x1008))))))))))))))))))))))))))))))))
(assert
 (let ((?x644 (right s______)))
 (let ((?x782 (right s_______)))
 (let (($x1004 (= ?x782 ?x644)))
 (let ((?x974 (rest ?x644)))
 (let (($x1001 (= ?x782 ?x974)))
 (let (($x978 ((_ is stack ) ?x644)))
 (let (($x979 (= c______ right-to-center)))
 (let (($x980 (and $x979 $x978)))
 (let (($x981 (= c______ right-to-left)))
 (let (($x982 (and $x981 $x978)))
 (let ((?x830 (center s______)))
 (let ((?x971 (top ?x830)))
 (let ((?x973 (stack ?x971 ?x644)))
 (let (($x1000 (= ?x782 ?x973)))
 (let (($x983 ((_ is stack ) ?x830)))
 (let (($x984 (= c______ center-to-right)))
 (let (($x985 (and $x984 $x983)))
 (let (($x986 (= c______ center-to-left)))
 (let (($x987 (and $x986 $x983)))
 (let ((?x610 (left s______)))
 (let (($x988 ((_ is stack ) ?x610)))
 (let (($x989 (= c______ left-to-right)))
 (let (($x990 (and $x989 $x988)))
 (let (($x1021 (ite $x990 $x1004 (ite $x987 $x1004 (ite $x985 $x1000 (ite $x982 $x1001 (ite $x980 $x1001 $x1004)))))))
 (let ((?x828 (top ?x610)))
 (let ((?x967 (stack ?x828 ?x644)))
 (let (($x996 (= ?x782 ?x967)))
 (let (($x991 (= c______ left-to-center)))
 (let (($x992 (and $x991 $x988)))
 (ite $x992 $x996 $x1021)))))))))))))))))))))))))))))))
(assert
 (let ((?x830 (center s______)))
 (let ((?x968 (center s_______)))
 (let (($x1006 (= ?x968 ?x830)))
 (let ((?x644 (right s______)))
 (let ((?x975 (top ?x644)))
 (let ((?x977 (stack ?x975 ?x830)))
 (let (($x1003 (= ?x968 ?x977)))
 (let (($x978 ((_ is stack ) ?x644)))
 (let (($x979 (= c______ right-to-center)))
 (let (($x980 (and $x979 $x978)))
 (let (($x981 (= c______ right-to-left)))
 (let (($x982 (and $x981 $x978)))
 (let ((?x970 (rest ?x830)))
 (let (($x998 (= ?x968 ?x970)))
 (let (($x983 ((_ is stack ) ?x830)))
 (let (($x984 (= c______ center-to-right)))
 (let (($x985 (and $x984 $x983)))
 (let (($x986 (= c______ center-to-left)))
 (let (($x987 (and $x986 $x983)))
 (let ((?x610 (left s______)))
 (let ((?x828 (top ?x610)))
 (let ((?x969 (stack ?x828 ?x830)))
 (let (($x997 (= ?x968 ?x969)))
 (let (($x988 ((_ is stack ) ?x610)))
 (let (($x989 (= c______ left-to-right)))
 (let (($x990 (and $x989 $x988)))
 (let (($x1020 (ite $x990 $x997 (ite $x987 $x998 (ite $x985 $x998 (ite $x982 $x1006 (ite $x980 $x1003 $x1006)))))))
 (let (($x991 (= c______ left-to-center)))
 (let (($x992 (and $x991 $x988)))
 (ite $x992 $x1006 $x1020)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x748 (left s_______)))
 (let ((?x886 (left s________)))
 (let (($x1146 (= ?x886 ?x748)))
 (let ((?x782 (right s_______)))
 (let ((?x1113 (top ?x782)))
 (let ((?x1114 (stack ?x1113 ?x748)))
 (let (($x1140 (= ?x886 ?x1114)))
 (let (($x1116 ((_ is stack ) ?x782)))
 (let (($x1119 (= c_______ right-to-left)))
 (let (($x1120 (and $x1119 $x1116)))
 (let ((?x968 (center s_______)))
 (let (($x1121 ((_ is stack ) ?x968)))
 (let (($x1122 (= c_______ center-to-right)))
 (let (($x1123 (and $x1122 $x1121)))
 (let ((?x1109 (top ?x968)))
 (let ((?x1110 (stack ?x1109 ?x748)))
 (let (($x1137 (= ?x886 ?x1110)))
 (let (($x1124 (= c_______ center-to-left)))
 (let (($x1125 (and $x1124 $x1121)))
 (let ((?x919 (rest ?x748)))
 (let (($x1133 (= ?x886 ?x919)))
 (let (($x1126 ((_ is stack ) ?x748)))
 (let (($x1127 (= c_______ left-to-right)))
 (let (($x1128 (and $x1127 $x1126)))
 (let (($x1129 (= c_______ left-to-center)))
 (let (($x1130 (and $x1129 $x1126)))
 (ite $x1130 $x1133 (ite $x1128 $x1133 (ite $x1125 $x1137 (ite $x1123 $x1146 (ite $x1120 $x1140 $x1146))))))))))))))))))))))))))))))))
(assert
 (let ((?x782 (right s_______)))
 (let ((?x920 (right s________)))
 (let (($x1142 (= ?x920 ?x782)))
 (let ((?x1112 (rest ?x782)))
 (let (($x1139 (= ?x920 ?x1112)))
 (let (($x1116 ((_ is stack ) ?x782)))
 (let (($x1117 (= c_______ right-to-center)))
 (let (($x1118 (and $x1117 $x1116)))
 (let (($x1119 (= c_______ right-to-left)))
 (let (($x1120 (and $x1119 $x1116)))
 (let ((?x968 (center s_______)))
 (let ((?x1109 (top ?x968)))
 (let ((?x1111 (stack ?x1109 ?x782)))
 (let (($x1138 (= ?x920 ?x1111)))
 (let (($x1121 ((_ is stack ) ?x968)))
 (let (($x1122 (= c_______ center-to-right)))
 (let (($x1123 (and $x1122 $x1121)))
 (let (($x1124 (= c_______ center-to-left)))
 (let (($x1125 (and $x1124 $x1121)))
 (let ((?x748 (left s_______)))
 (let (($x1126 ((_ is stack ) ?x748)))
 (let (($x1127 (= c_______ left-to-right)))
 (let (($x1128 (and $x1127 $x1126)))
 (let (($x1159 (ite $x1128 $x1142 (ite $x1125 $x1142 (ite $x1123 $x1138 (ite $x1120 $x1139 (ite $x1118 $x1139 $x1142)))))))
 (let ((?x966 (top ?x748)))
 (let ((?x1105 (stack ?x966 ?x782)))
 (let (($x1134 (= ?x920 ?x1105)))
 (let (($x1129 (= c_______ left-to-center)))
 (let (($x1130 (and $x1129 $x1126)))
 (ite $x1130 $x1134 $x1159)))))))))))))))))))))))))))))))
(assert
 (let ((?x968 (center s_______)))
 (let ((?x1106 (center s________)))
 (let (($x1144 (= ?x1106 ?x968)))
 (let ((?x782 (right s_______)))
 (let ((?x1113 (top ?x782)))
 (let ((?x1115 (stack ?x1113 ?x968)))
 (let (($x1141 (= ?x1106 ?x1115)))
 (let (($x1116 ((_ is stack ) ?x782)))
 (let (($x1117 (= c_______ right-to-center)))
 (let (($x1118 (and $x1117 $x1116)))
 (let (($x1119 (= c_______ right-to-left)))
 (let (($x1120 (and $x1119 $x1116)))
 (let ((?x1108 (rest ?x968)))
 (let (($x1136 (= ?x1106 ?x1108)))
 (let (($x1121 ((_ is stack ) ?x968)))
 (let (($x1122 (= c_______ center-to-right)))
 (let (($x1123 (and $x1122 $x1121)))
 (let (($x1124 (= c_______ center-to-left)))
 (let (($x1125 (and $x1124 $x1121)))
 (let ((?x748 (left s_______)))
 (let ((?x966 (top ?x748)))
 (let ((?x1107 (stack ?x966 ?x968)))
 (let (($x1135 (= ?x1106 ?x1107)))
 (let (($x1126 ((_ is stack ) ?x748)))
 (let (($x1127 (= c_______ left-to-right)))
 (let (($x1128 (and $x1127 $x1126)))
 (let (($x1158 (ite $x1128 $x1135 (ite $x1125 $x1136 (ite $x1123 $x1136 (ite $x1120 $x1144 (ite $x1118 $x1141 $x1144)))))))
 (let (($x1129 (= c_______ left-to-center)))
 (let (($x1130 (and $x1129 $x1126)))
 (ite $x1130 $x1144 $x1158)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x886 (left s________)))
 (let ((?x1024 (left s_________)))
 (let (($x1284 (= ?x1024 ?x886)))
 (let ((?x920 (right s________)))
 (let ((?x1251 (top ?x920)))
 (let ((?x1252 (stack ?x1251 ?x886)))
 (let (($x1278 (= ?x1024 ?x1252)))
 (let (($x1254 ((_ is stack ) ?x920)))
 (let (($x1257 (= c________ right-to-left)))
 (let (($x1258 (and $x1257 $x1254)))
 (let ((?x1106 (center s________)))
 (let (($x1259 ((_ is stack ) ?x1106)))
 (let (($x1260 (= c________ center-to-right)))
 (let (($x1261 (and $x1260 $x1259)))
 (let ((?x1247 (top ?x1106)))
 (let ((?x1248 (stack ?x1247 ?x886)))
 (let (($x1275 (= ?x1024 ?x1248)))
 (let (($x1262 (= c________ center-to-left)))
 (let (($x1263 (and $x1262 $x1259)))
 (let ((?x1057 (rest ?x886)))
 (let (($x1271 (= ?x1024 ?x1057)))
 (let (($x1264 ((_ is stack ) ?x886)))
 (let (($x1265 (= c________ left-to-right)))
 (let (($x1266 (and $x1265 $x1264)))
 (let (($x1267 (= c________ left-to-center)))
 (let (($x1268 (and $x1267 $x1264)))
 (ite $x1268 $x1271 (ite $x1266 $x1271 (ite $x1263 $x1275 (ite $x1261 $x1284 (ite $x1258 $x1278 $x1284))))))))))))))))))))))))))))))))
(assert
 (let ((?x920 (right s________)))
 (let ((?x1058 (right s_________)))
 (let (($x1280 (= ?x1058 ?x920)))
 (let ((?x1250 (rest ?x920)))
 (let (($x1277 (= ?x1058 ?x1250)))
 (let (($x1254 ((_ is stack ) ?x920)))
 (let (($x1255 (= c________ right-to-center)))
 (let (($x1256 (and $x1255 $x1254)))
 (let (($x1257 (= c________ right-to-left)))
 (let (($x1258 (and $x1257 $x1254)))
 (let ((?x1106 (center s________)))
 (let ((?x1247 (top ?x1106)))
 (let ((?x1249 (stack ?x1247 ?x920)))
 (let (($x1276 (= ?x1058 ?x1249)))
 (let (($x1259 ((_ is stack ) ?x1106)))
 (let (($x1260 (= c________ center-to-right)))
 (let (($x1261 (and $x1260 $x1259)))
 (let (($x1262 (= c________ center-to-left)))
 (let (($x1263 (and $x1262 $x1259)))
 (let ((?x886 (left s________)))
 (let (($x1264 ((_ is stack ) ?x886)))
 (let (($x1265 (= c________ left-to-right)))
 (let (($x1266 (and $x1265 $x1264)))
 (let (($x1297 (ite $x1266 $x1280 (ite $x1263 $x1280 (ite $x1261 $x1276 (ite $x1258 $x1277 (ite $x1256 $x1277 $x1280)))))))
 (let ((?x1104 (top ?x886)))
 (let ((?x1243 (stack ?x1104 ?x920)))
 (let (($x1272 (= ?x1058 ?x1243)))
 (let (($x1267 (= c________ left-to-center)))
 (let (($x1268 (and $x1267 $x1264)))
 (ite $x1268 $x1272 $x1297)))))))))))))))))))))))))))))))
(assert
 (let ((?x1106 (center s________)))
 (let ((?x1244 (center s_________)))
 (let (($x1282 (= ?x1244 ?x1106)))
 (let ((?x920 (right s________)))
 (let ((?x1251 (top ?x920)))
 (let ((?x1253 (stack ?x1251 ?x1106)))
 (let (($x1279 (= ?x1244 ?x1253)))
 (let (($x1254 ((_ is stack ) ?x920)))
 (let (($x1255 (= c________ right-to-center)))
 (let (($x1256 (and $x1255 $x1254)))
 (let (($x1257 (= c________ right-to-left)))
 (let (($x1258 (and $x1257 $x1254)))
 (let ((?x1246 (rest ?x1106)))
 (let (($x1274 (= ?x1244 ?x1246)))
 (let (($x1259 ((_ is stack ) ?x1106)))
 (let (($x1260 (= c________ center-to-right)))
 (let (($x1261 (and $x1260 $x1259)))
 (let (($x1262 (= c________ center-to-left)))
 (let (($x1263 (and $x1262 $x1259)))
 (let ((?x886 (left s________)))
 (let ((?x1104 (top ?x886)))
 (let ((?x1245 (stack ?x1104 ?x1106)))
 (let (($x1273 (= ?x1244 ?x1245)))
 (let (($x1264 ((_ is stack ) ?x886)))
 (let (($x1265 (= c________ left-to-right)))
 (let (($x1266 (and $x1265 $x1264)))
 (let (($x1296 (ite $x1266 $x1273 (ite $x1263 $x1274 (ite $x1261 $x1274 (ite $x1258 $x1282 (ite $x1256 $x1279 $x1282)))))))
 (let (($x1267 (= c________ left-to-center)))
 (let (($x1268 (and $x1267 $x1264)))
 (ite $x1268 $x1282 $x1296)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x1024 (left s_________)))
 (let ((?x1162 (left s__________)))
 (let (($x1422 (= ?x1162 ?x1024)))
 (let ((?x1058 (right s_________)))
 (let ((?x1389 (top ?x1058)))
 (let ((?x1390 (stack ?x1389 ?x1024)))
 (let (($x1416 (= ?x1162 ?x1390)))
 (let (($x1392 ((_ is stack ) ?x1058)))
 (let (($x1395 (= c_________ right-to-left)))
 (let (($x1396 (and $x1395 $x1392)))
 (let ((?x1244 (center s_________)))
 (let (($x1397 ((_ is stack ) ?x1244)))
 (let (($x1398 (= c_________ center-to-right)))
 (let (($x1399 (and $x1398 $x1397)))
 (let ((?x1385 (top ?x1244)))
 (let ((?x1386 (stack ?x1385 ?x1024)))
 (let (($x1413 (= ?x1162 ?x1386)))
 (let (($x1400 (= c_________ center-to-left)))
 (let (($x1401 (and $x1400 $x1397)))
 (let ((?x1195 (rest ?x1024)))
 (let (($x1409 (= ?x1162 ?x1195)))
 (let (($x1402 ((_ is stack ) ?x1024)))
 (let (($x1403 (= c_________ left-to-right)))
 (let (($x1404 (and $x1403 $x1402)))
 (let (($x1405 (= c_________ left-to-center)))
 (let (($x1406 (and $x1405 $x1402)))
 (ite $x1406 $x1409 (ite $x1404 $x1409 (ite $x1401 $x1413 (ite $x1399 $x1422 (ite $x1396 $x1416 $x1422))))))))))))))))))))))))))))))))
(assert
 (let ((?x1058 (right s_________)))
 (let ((?x1196 (right s__________)))
 (let (($x1418 (= ?x1196 ?x1058)))
 (let ((?x1388 (rest ?x1058)))
 (let (($x1415 (= ?x1196 ?x1388)))
 (let (($x1392 ((_ is stack ) ?x1058)))
 (let (($x1393 (= c_________ right-to-center)))
 (let (($x1394 (and $x1393 $x1392)))
 (let (($x1395 (= c_________ right-to-left)))
 (let (($x1396 (and $x1395 $x1392)))
 (let ((?x1244 (center s_________)))
 (let ((?x1385 (top ?x1244)))
 (let ((?x1387 (stack ?x1385 ?x1058)))
 (let (($x1414 (= ?x1196 ?x1387)))
 (let (($x1397 ((_ is stack ) ?x1244)))
 (let (($x1398 (= c_________ center-to-right)))
 (let (($x1399 (and $x1398 $x1397)))
 (let (($x1400 (= c_________ center-to-left)))
 (let (($x1401 (and $x1400 $x1397)))
 (let ((?x1024 (left s_________)))
 (let (($x1402 ((_ is stack ) ?x1024)))
 (let (($x1403 (= c_________ left-to-right)))
 (let (($x1404 (and $x1403 $x1402)))
 (let (($x1435 (ite $x1404 $x1418 (ite $x1401 $x1418 (ite $x1399 $x1414 (ite $x1396 $x1415 (ite $x1394 $x1415 $x1418)))))))
 (let ((?x1242 (top ?x1024)))
 (let ((?x1381 (stack ?x1242 ?x1058)))
 (let (($x1410 (= ?x1196 ?x1381)))
 (let (($x1405 (= c_________ left-to-center)))
 (let (($x1406 (and $x1405 $x1402)))
 (ite $x1406 $x1410 $x1435)))))))))))))))))))))))))))))))
(assert
 (let ((?x1244 (center s_________)))
 (let ((?x1382 (center s__________)))
 (let (($x1420 (= ?x1382 ?x1244)))
 (let ((?x1058 (right s_________)))
 (let ((?x1389 (top ?x1058)))
 (let ((?x1391 (stack ?x1389 ?x1244)))
 (let (($x1417 (= ?x1382 ?x1391)))
 (let (($x1392 ((_ is stack ) ?x1058)))
 (let (($x1393 (= c_________ right-to-center)))
 (let (($x1394 (and $x1393 $x1392)))
 (let (($x1395 (= c_________ right-to-left)))
 (let (($x1396 (and $x1395 $x1392)))
 (let ((?x1384 (rest ?x1244)))
 (let (($x1412 (= ?x1382 ?x1384)))
 (let (($x1397 ((_ is stack ) ?x1244)))
 (let (($x1398 (= c_________ center-to-right)))
 (let (($x1399 (and $x1398 $x1397)))
 (let (($x1400 (= c_________ center-to-left)))
 (let (($x1401 (and $x1400 $x1397)))
 (let ((?x1024 (left s_________)))
 (let ((?x1242 (top ?x1024)))
 (let ((?x1383 (stack ?x1242 ?x1244)))
 (let (($x1411 (= ?x1382 ?x1383)))
 (let (($x1402 ((_ is stack ) ?x1024)))
 (let (($x1403 (= c_________ left-to-right)))
 (let (($x1404 (and $x1403 $x1402)))
 (let (($x1434 (ite $x1404 $x1411 (ite $x1401 $x1412 (ite $x1399 $x1412 (ite $x1396 $x1420 (ite $x1394 $x1417 $x1420)))))))
 (let (($x1405 (= c_________ left-to-center)))
 (let (($x1406 (and $x1405 $x1402)))
 (ite $x1406 $x1420 $x1434)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1162 (left s__________)))
 (let ((?x1300 (left s___________)))
 (let (($x1560 (= ?x1300 ?x1162)))
 (let ((?x1196 (right s__________)))
 (let ((?x1527 (top ?x1196)))
 (let ((?x1528 (stack ?x1527 ?x1162)))
 (let (($x1554 (= ?x1300 ?x1528)))
 (let (($x1530 ((_ is stack ) ?x1196)))
 (let (($x1533 (= c__________ right-to-left)))
 (let (($x1534 (and $x1533 $x1530)))
 (let ((?x1382 (center s__________)))
 (let (($x1535 ((_ is stack ) ?x1382)))
 (let (($x1536 (= c__________ center-to-right)))
 (let (($x1537 (and $x1536 $x1535)))
 (let ((?x1523 (top ?x1382)))
 (let ((?x1524 (stack ?x1523 ?x1162)))
 (let (($x1551 (= ?x1300 ?x1524)))
 (let (($x1538 (= c__________ center-to-left)))
 (let (($x1539 (and $x1538 $x1535)))
 (let ((?x1333 (rest ?x1162)))
 (let (($x1547 (= ?x1300 ?x1333)))
 (let (($x1540 ((_ is stack ) ?x1162)))
 (let (($x1541 (= c__________ left-to-right)))
 (let (($x1542 (and $x1541 $x1540)))
 (let (($x1543 (= c__________ left-to-center)))
 (let (($x1544 (and $x1543 $x1540)))
 (ite $x1544 $x1547 (ite $x1542 $x1547 (ite $x1539 $x1551 (ite $x1537 $x1560 (ite $x1534 $x1554 $x1560))))))))))))))))))))))))))))))))
(assert
 (let ((?x1196 (right s__________)))
 (let ((?x1334 (right s___________)))
 (let (($x1556 (= ?x1334 ?x1196)))
 (let ((?x1526 (rest ?x1196)))
 (let (($x1553 (= ?x1334 ?x1526)))
 (let (($x1530 ((_ is stack ) ?x1196)))
 (let (($x1531 (= c__________ right-to-center)))
 (let (($x1532 (and $x1531 $x1530)))
 (let (($x1533 (= c__________ right-to-left)))
 (let (($x1534 (and $x1533 $x1530)))
 (let ((?x1382 (center s__________)))
 (let ((?x1523 (top ?x1382)))
 (let ((?x1525 (stack ?x1523 ?x1196)))
 (let (($x1552 (= ?x1334 ?x1525)))
 (let (($x1535 ((_ is stack ) ?x1382)))
 (let (($x1536 (= c__________ center-to-right)))
 (let (($x1537 (and $x1536 $x1535)))
 (let (($x1538 (= c__________ center-to-left)))
 (let (($x1539 (and $x1538 $x1535)))
 (let ((?x1162 (left s__________)))
 (let (($x1540 ((_ is stack ) ?x1162)))
 (let (($x1541 (= c__________ left-to-right)))
 (let (($x1542 (and $x1541 $x1540)))
 (let (($x1573 (ite $x1542 $x1556 (ite $x1539 $x1556 (ite $x1537 $x1552 (ite $x1534 $x1553 (ite $x1532 $x1553 $x1556)))))))
 (let ((?x1380 (top ?x1162)))
 (let ((?x1519 (stack ?x1380 ?x1196)))
 (let (($x1548 (= ?x1334 ?x1519)))
 (let (($x1543 (= c__________ left-to-center)))
 (let (($x1544 (and $x1543 $x1540)))
 (ite $x1544 $x1548 $x1573)))))))))))))))))))))))))))))))
(assert
 (let ((?x1382 (center s__________)))
 (let ((?x1520 (center s___________)))
 (let (($x1558 (= ?x1520 ?x1382)))
 (let ((?x1196 (right s__________)))
 (let ((?x1527 (top ?x1196)))
 (let ((?x1529 (stack ?x1527 ?x1382)))
 (let (($x1555 (= ?x1520 ?x1529)))
 (let (($x1530 ((_ is stack ) ?x1196)))
 (let (($x1531 (= c__________ right-to-center)))
 (let (($x1532 (and $x1531 $x1530)))
 (let (($x1533 (= c__________ right-to-left)))
 (let (($x1534 (and $x1533 $x1530)))
 (let ((?x1522 (rest ?x1382)))
 (let (($x1550 (= ?x1520 ?x1522)))
 (let (($x1535 ((_ is stack ) ?x1382)))
 (let (($x1536 (= c__________ center-to-right)))
 (let (($x1537 (and $x1536 $x1535)))
 (let (($x1538 (= c__________ center-to-left)))
 (let (($x1539 (and $x1538 $x1535)))
 (let ((?x1162 (left s__________)))
 (let ((?x1380 (top ?x1162)))
 (let ((?x1521 (stack ?x1380 ?x1382)))
 (let (($x1549 (= ?x1520 ?x1521)))
 (let (($x1540 ((_ is stack ) ?x1162)))
 (let (($x1541 (= c__________ left-to-right)))
 (let (($x1542 (and $x1541 $x1540)))
 (let (($x1572 (ite $x1542 $x1549 (ite $x1539 $x1550 (ite $x1537 $x1550 (ite $x1534 $x1558 (ite $x1532 $x1555 $x1558)))))))
 (let (($x1543 (= c__________ left-to-center)))
 (let (($x1544 (and $x1543 $x1540)))
 (ite $x1544 $x1558 $x1572)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1300 (left s___________)))
 (let ((?x1438 (left s____________)))
 (let (($x1698 (= ?x1438 ?x1300)))
 (let ((?x1334 (right s___________)))
 (let ((?x1665 (top ?x1334)))
 (let ((?x1666 (stack ?x1665 ?x1300)))
 (let (($x1692 (= ?x1438 ?x1666)))
 (let (($x1668 ((_ is stack ) ?x1334)))
 (let (($x1671 (= c___________ right-to-left)))
 (let (($x1672 (and $x1671 $x1668)))
 (let ((?x1520 (center s___________)))
 (let (($x1673 ((_ is stack ) ?x1520)))
 (let (($x1674 (= c___________ center-to-right)))
 (let (($x1675 (and $x1674 $x1673)))
 (let ((?x1661 (top ?x1520)))
 (let ((?x1662 (stack ?x1661 ?x1300)))
 (let (($x1689 (= ?x1438 ?x1662)))
 (let (($x1676 (= c___________ center-to-left)))
 (let (($x1677 (and $x1676 $x1673)))
 (let ((?x1471 (rest ?x1300)))
 (let (($x1685 (= ?x1438 ?x1471)))
 (let (($x1678 ((_ is stack ) ?x1300)))
 (let (($x1679 (= c___________ left-to-right)))
 (let (($x1680 (and $x1679 $x1678)))
 (let (($x1681 (= c___________ left-to-center)))
 (let (($x1682 (and $x1681 $x1678)))
 (ite $x1682 $x1685 (ite $x1680 $x1685 (ite $x1677 $x1689 (ite $x1675 $x1698 (ite $x1672 $x1692 $x1698))))))))))))))))))))))))))))))))
(assert
 (let ((?x1334 (right s___________)))
 (let ((?x1472 (right s____________)))
 (let (($x1694 (= ?x1472 ?x1334)))
 (let ((?x1664 (rest ?x1334)))
 (let (($x1691 (= ?x1472 ?x1664)))
 (let (($x1668 ((_ is stack ) ?x1334)))
 (let (($x1669 (= c___________ right-to-center)))
 (let (($x1670 (and $x1669 $x1668)))
 (let (($x1671 (= c___________ right-to-left)))
 (let (($x1672 (and $x1671 $x1668)))
 (let ((?x1520 (center s___________)))
 (let ((?x1661 (top ?x1520)))
 (let ((?x1663 (stack ?x1661 ?x1334)))
 (let (($x1690 (= ?x1472 ?x1663)))
 (let (($x1673 ((_ is stack ) ?x1520)))
 (let (($x1674 (= c___________ center-to-right)))
 (let (($x1675 (and $x1674 $x1673)))
 (let (($x1676 (= c___________ center-to-left)))
 (let (($x1677 (and $x1676 $x1673)))
 (let ((?x1300 (left s___________)))
 (let (($x1678 ((_ is stack ) ?x1300)))
 (let (($x1679 (= c___________ left-to-right)))
 (let (($x1680 (and $x1679 $x1678)))
 (let (($x1711 (ite $x1680 $x1694 (ite $x1677 $x1694 (ite $x1675 $x1690 (ite $x1672 $x1691 (ite $x1670 $x1691 $x1694)))))))
 (let ((?x1518 (top ?x1300)))
 (let ((?x1657 (stack ?x1518 ?x1334)))
 (let (($x1686 (= ?x1472 ?x1657)))
 (let (($x1681 (= c___________ left-to-center)))
 (let (($x1682 (and $x1681 $x1678)))
 (ite $x1682 $x1686 $x1711)))))))))))))))))))))))))))))))
(assert
 (let ((?x1520 (center s___________)))
 (let ((?x1658 (center s____________)))
 (let (($x1696 (= ?x1658 ?x1520)))
 (let ((?x1334 (right s___________)))
 (let ((?x1665 (top ?x1334)))
 (let ((?x1667 (stack ?x1665 ?x1520)))
 (let (($x1693 (= ?x1658 ?x1667)))
 (let (($x1668 ((_ is stack ) ?x1334)))
 (let (($x1669 (= c___________ right-to-center)))
 (let (($x1670 (and $x1669 $x1668)))
 (let (($x1671 (= c___________ right-to-left)))
 (let (($x1672 (and $x1671 $x1668)))
 (let ((?x1660 (rest ?x1520)))
 (let (($x1688 (= ?x1658 ?x1660)))
 (let (($x1673 ((_ is stack ) ?x1520)))
 (let (($x1674 (= c___________ center-to-right)))
 (let (($x1675 (and $x1674 $x1673)))
 (let (($x1676 (= c___________ center-to-left)))
 (let (($x1677 (and $x1676 $x1673)))
 (let ((?x1300 (left s___________)))
 (let ((?x1518 (top ?x1300)))
 (let ((?x1659 (stack ?x1518 ?x1520)))
 (let (($x1687 (= ?x1658 ?x1659)))
 (let (($x1678 ((_ is stack ) ?x1300)))
 (let (($x1679 (= c___________ left-to-right)))
 (let (($x1680 (and $x1679 $x1678)))
 (let (($x1710 (ite $x1680 $x1687 (ite $x1677 $x1688 (ite $x1675 $x1688 (ite $x1672 $x1696 (ite $x1670 $x1693 $x1696)))))))
 (let (($x1681 (= c___________ left-to-center)))
 (let (($x1682 (and $x1681 $x1678)))
 (ite $x1682 $x1696 $x1710)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1438 (left s____________)))
 (let ((?x1576 (left s_____________)))
 (let (($x1836 (= ?x1576 ?x1438)))
 (let ((?x1472 (right s____________)))
 (let ((?x1803 (top ?x1472)))
 (let ((?x1804 (stack ?x1803 ?x1438)))
 (let (($x1830 (= ?x1576 ?x1804)))
 (let (($x1806 ((_ is stack ) ?x1472)))
 (let (($x1809 (= c____________ right-to-left)))
 (let (($x1810 (and $x1809 $x1806)))
 (let ((?x1658 (center s____________)))
 (let (($x1811 ((_ is stack ) ?x1658)))
 (let (($x1812 (= c____________ center-to-right)))
 (let (($x1813 (and $x1812 $x1811)))
 (let ((?x1799 (top ?x1658)))
 (let ((?x1800 (stack ?x1799 ?x1438)))
 (let (($x1827 (= ?x1576 ?x1800)))
 (let (($x1814 (= c____________ center-to-left)))
 (let (($x1815 (and $x1814 $x1811)))
 (let ((?x1609 (rest ?x1438)))
 (let (($x1823 (= ?x1576 ?x1609)))
 (let (($x1816 ((_ is stack ) ?x1438)))
 (let (($x1817 (= c____________ left-to-right)))
 (let (($x1818 (and $x1817 $x1816)))
 (let (($x1819 (= c____________ left-to-center)))
 (let (($x1820 (and $x1819 $x1816)))
 (ite $x1820 $x1823 (ite $x1818 $x1823 (ite $x1815 $x1827 (ite $x1813 $x1836 (ite $x1810 $x1830 $x1836))))))))))))))))))))))))))))))))
(assert
 (let ((?x1472 (right s____________)))
 (let ((?x1610 (right s_____________)))
 (let (($x1832 (= ?x1610 ?x1472)))
 (let ((?x1802 (rest ?x1472)))
 (let (($x1829 (= ?x1610 ?x1802)))
 (let (($x1806 ((_ is stack ) ?x1472)))
 (let (($x1807 (= c____________ right-to-center)))
 (let (($x1808 (and $x1807 $x1806)))
 (let (($x1809 (= c____________ right-to-left)))
 (let (($x1810 (and $x1809 $x1806)))
 (let ((?x1658 (center s____________)))
 (let ((?x1799 (top ?x1658)))
 (let ((?x1801 (stack ?x1799 ?x1472)))
 (let (($x1828 (= ?x1610 ?x1801)))
 (let (($x1811 ((_ is stack ) ?x1658)))
 (let (($x1812 (= c____________ center-to-right)))
 (let (($x1813 (and $x1812 $x1811)))
 (let (($x1814 (= c____________ center-to-left)))
 (let (($x1815 (and $x1814 $x1811)))
 (let ((?x1438 (left s____________)))
 (let (($x1816 ((_ is stack ) ?x1438)))
 (let (($x1817 (= c____________ left-to-right)))
 (let (($x1818 (and $x1817 $x1816)))
 (let (($x1849 (ite $x1818 $x1832 (ite $x1815 $x1832 (ite $x1813 $x1828 (ite $x1810 $x1829 (ite $x1808 $x1829 $x1832)))))))
 (let ((?x1656 (top ?x1438)))
 (let ((?x1795 (stack ?x1656 ?x1472)))
 (let (($x1824 (= ?x1610 ?x1795)))
 (let (($x1819 (= c____________ left-to-center)))
 (let (($x1820 (and $x1819 $x1816)))
 (ite $x1820 $x1824 $x1849)))))))))))))))))))))))))))))))
(assert
 (let ((?x1658 (center s____________)))
 (let ((?x1796 (center s_____________)))
 (let (($x1834 (= ?x1796 ?x1658)))
 (let ((?x1472 (right s____________)))
 (let ((?x1803 (top ?x1472)))
 (let ((?x1805 (stack ?x1803 ?x1658)))
 (let (($x1831 (= ?x1796 ?x1805)))
 (let (($x1806 ((_ is stack ) ?x1472)))
 (let (($x1807 (= c____________ right-to-center)))
 (let (($x1808 (and $x1807 $x1806)))
 (let (($x1809 (= c____________ right-to-left)))
 (let (($x1810 (and $x1809 $x1806)))
 (let ((?x1798 (rest ?x1658)))
 (let (($x1826 (= ?x1796 ?x1798)))
 (let (($x1811 ((_ is stack ) ?x1658)))
 (let (($x1812 (= c____________ center-to-right)))
 (let (($x1813 (and $x1812 $x1811)))
 (let (($x1814 (= c____________ center-to-left)))
 (let (($x1815 (and $x1814 $x1811)))
 (let ((?x1438 (left s____________)))
 (let ((?x1656 (top ?x1438)))
 (let ((?x1797 (stack ?x1656 ?x1658)))
 (let (($x1825 (= ?x1796 ?x1797)))
 (let (($x1816 ((_ is stack ) ?x1438)))
 (let (($x1817 (= c____________ left-to-right)))
 (let (($x1818 (and $x1817 $x1816)))
 (let (($x1848 (ite $x1818 $x1825 (ite $x1815 $x1826 (ite $x1813 $x1826 (ite $x1810 $x1834 (ite $x1808 $x1831 $x1834)))))))
 (let (($x1819 (= c____________ left-to-center)))
 (let (($x1820 (and $x1819 $x1816)))
 (ite $x1820 $x1834 $x1848)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1576 (left s_____________)))
 (let ((?x1714 (left s______________)))
 (let (($x1974 (= ?x1714 ?x1576)))
 (let ((?x1610 (right s_____________)))
 (let ((?x1941 (top ?x1610)))
 (let ((?x1942 (stack ?x1941 ?x1576)))
 (let (($x1968 (= ?x1714 ?x1942)))
 (let (($x1944 ((_ is stack ) ?x1610)))
 (let (($x1947 (= c_____________ right-to-left)))
 (let (($x1948 (and $x1947 $x1944)))
 (let ((?x1796 (center s_____________)))
 (let (($x1949 ((_ is stack ) ?x1796)))
 (let (($x1950 (= c_____________ center-to-right)))
 (let (($x1951 (and $x1950 $x1949)))
 (let ((?x1937 (top ?x1796)))
 (let ((?x1938 (stack ?x1937 ?x1576)))
 (let (($x1965 (= ?x1714 ?x1938)))
 (let (($x1952 (= c_____________ center-to-left)))
 (let (($x1953 (and $x1952 $x1949)))
 (let ((?x1747 (rest ?x1576)))
 (let (($x1961 (= ?x1714 ?x1747)))
 (let (($x1954 ((_ is stack ) ?x1576)))
 (let (($x1955 (= c_____________ left-to-right)))
 (let (($x1956 (and $x1955 $x1954)))
 (let (($x1957 (= c_____________ left-to-center)))
 (let (($x1958 (and $x1957 $x1954)))
 (ite $x1958 $x1961 (ite $x1956 $x1961 (ite $x1953 $x1965 (ite $x1951 $x1974 (ite $x1948 $x1968 $x1974))))))))))))))))))))))))))))))))
(assert
 (let ((?x1610 (right s_____________)))
 (let ((?x1748 (right s______________)))
 (let (($x1970 (= ?x1748 ?x1610)))
 (let ((?x1940 (rest ?x1610)))
 (let (($x1967 (= ?x1748 ?x1940)))
 (let (($x1944 ((_ is stack ) ?x1610)))
 (let (($x1945 (= c_____________ right-to-center)))
 (let (($x1946 (and $x1945 $x1944)))
 (let (($x1947 (= c_____________ right-to-left)))
 (let (($x1948 (and $x1947 $x1944)))
 (let ((?x1796 (center s_____________)))
 (let ((?x1937 (top ?x1796)))
 (let ((?x1939 (stack ?x1937 ?x1610)))
 (let (($x1966 (= ?x1748 ?x1939)))
 (let (($x1949 ((_ is stack ) ?x1796)))
 (let (($x1950 (= c_____________ center-to-right)))
 (let (($x1951 (and $x1950 $x1949)))
 (let (($x1952 (= c_____________ center-to-left)))
 (let (($x1953 (and $x1952 $x1949)))
 (let ((?x1576 (left s_____________)))
 (let (($x1954 ((_ is stack ) ?x1576)))
 (let (($x1955 (= c_____________ left-to-right)))
 (let (($x1956 (and $x1955 $x1954)))
 (let (($x1987 (ite $x1956 $x1970 (ite $x1953 $x1970 (ite $x1951 $x1966 (ite $x1948 $x1967 (ite $x1946 $x1967 $x1970)))))))
 (let ((?x1794 (top ?x1576)))
 (let ((?x1933 (stack ?x1794 ?x1610)))
 (let (($x1962 (= ?x1748 ?x1933)))
 (let (($x1957 (= c_____________ left-to-center)))
 (let (($x1958 (and $x1957 $x1954)))
 (ite $x1958 $x1962 $x1987)))))))))))))))))))))))))))))))
(assert
 (let ((?x1796 (center s_____________)))
 (let ((?x1934 (center s______________)))
 (let (($x1972 (= ?x1934 ?x1796)))
 (let ((?x1610 (right s_____________)))
 (let ((?x1941 (top ?x1610)))
 (let ((?x1943 (stack ?x1941 ?x1796)))
 (let (($x1969 (= ?x1934 ?x1943)))
 (let (($x1944 ((_ is stack ) ?x1610)))
 (let (($x1945 (= c_____________ right-to-center)))
 (let (($x1946 (and $x1945 $x1944)))
 (let (($x1947 (= c_____________ right-to-left)))
 (let (($x1948 (and $x1947 $x1944)))
 (let ((?x1936 (rest ?x1796)))
 (let (($x1964 (= ?x1934 ?x1936)))
 (let (($x1949 ((_ is stack ) ?x1796)))
 (let (($x1950 (= c_____________ center-to-right)))
 (let (($x1951 (and $x1950 $x1949)))
 (let (($x1952 (= c_____________ center-to-left)))
 (let (($x1953 (and $x1952 $x1949)))
 (let ((?x1576 (left s_____________)))
 (let ((?x1794 (top ?x1576)))
 (let ((?x1935 (stack ?x1794 ?x1796)))
 (let (($x1963 (= ?x1934 ?x1935)))
 (let (($x1954 ((_ is stack ) ?x1576)))
 (let (($x1955 (= c_____________ left-to-right)))
 (let (($x1956 (and $x1955 $x1954)))
 (let (($x1986 (ite $x1956 $x1963 (ite $x1953 $x1964 (ite $x1951 $x1964 (ite $x1948 $x1972 (ite $x1946 $x1969 $x1972)))))))
 (let (($x1957 (= c_____________ left-to-center)))
 (let (($x1958 (and $x1957 $x1954)))
 (ite $x1958 $x1972 $x1986)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1714 (left s______________)))
 (let ((?x1852 (left s_______________)))
 (let (($x2112 (= ?x1852 ?x1714)))
 (let ((?x1748 (right s______________)))
 (let ((?x2079 (top ?x1748)))
 (let ((?x2080 (stack ?x2079 ?x1714)))
 (let (($x2106 (= ?x1852 ?x2080)))
 (let (($x2082 ((_ is stack ) ?x1748)))
 (let (($x2085 (= c______________ right-to-left)))
 (let (($x2086 (and $x2085 $x2082)))
 (let ((?x1934 (center s______________)))
 (let (($x2087 ((_ is stack ) ?x1934)))
 (let (($x2088 (= c______________ center-to-right)))
 (let (($x2089 (and $x2088 $x2087)))
 (let ((?x2075 (top ?x1934)))
 (let ((?x2076 (stack ?x2075 ?x1714)))
 (let (($x2103 (= ?x1852 ?x2076)))
 (let (($x2090 (= c______________ center-to-left)))
 (let (($x2091 (and $x2090 $x2087)))
 (let ((?x1885 (rest ?x1714)))
 (let (($x2099 (= ?x1852 ?x1885)))
 (let (($x2092 ((_ is stack ) ?x1714)))
 (let (($x2093 (= c______________ left-to-right)))
 (let (($x2094 (and $x2093 $x2092)))
 (let (($x2095 (= c______________ left-to-center)))
 (let (($x2096 (and $x2095 $x2092)))
 (ite $x2096 $x2099 (ite $x2094 $x2099 (ite $x2091 $x2103 (ite $x2089 $x2112 (ite $x2086 $x2106 $x2112))))))))))))))))))))))))))))))))
(assert
 (let ((?x1748 (right s______________)))
 (let ((?x1886 (right s_______________)))
 (let (($x2108 (= ?x1886 ?x1748)))
 (let ((?x2078 (rest ?x1748)))
 (let (($x2105 (= ?x1886 ?x2078)))
 (let (($x2082 ((_ is stack ) ?x1748)))
 (let (($x2083 (= c______________ right-to-center)))
 (let (($x2084 (and $x2083 $x2082)))
 (let (($x2085 (= c______________ right-to-left)))
 (let (($x2086 (and $x2085 $x2082)))
 (let ((?x1934 (center s______________)))
 (let ((?x2075 (top ?x1934)))
 (let ((?x2077 (stack ?x2075 ?x1748)))
 (let (($x2104 (= ?x1886 ?x2077)))
 (let (($x2087 ((_ is stack ) ?x1934)))
 (let (($x2088 (= c______________ center-to-right)))
 (let (($x2089 (and $x2088 $x2087)))
 (let (($x2090 (= c______________ center-to-left)))
 (let (($x2091 (and $x2090 $x2087)))
 (let ((?x1714 (left s______________)))
 (let (($x2092 ((_ is stack ) ?x1714)))
 (let (($x2093 (= c______________ left-to-right)))
 (let (($x2094 (and $x2093 $x2092)))
 (let (($x2125 (ite $x2094 $x2108 (ite $x2091 $x2108 (ite $x2089 $x2104 (ite $x2086 $x2105 (ite $x2084 $x2105 $x2108)))))))
 (let ((?x1932 (top ?x1714)))
 (let ((?x2071 (stack ?x1932 ?x1748)))
 (let (($x2100 (= ?x1886 ?x2071)))
 (let (($x2095 (= c______________ left-to-center)))
 (let (($x2096 (and $x2095 $x2092)))
 (ite $x2096 $x2100 $x2125)))))))))))))))))))))))))))))))
(assert
 (let ((?x1934 (center s______________)))
 (let ((?x2072 (center s_______________)))
 (let (($x2110 (= ?x2072 ?x1934)))
 (let ((?x1748 (right s______________)))
 (let ((?x2079 (top ?x1748)))
 (let ((?x2081 (stack ?x2079 ?x1934)))
 (let (($x2107 (= ?x2072 ?x2081)))
 (let (($x2082 ((_ is stack ) ?x1748)))
 (let (($x2083 (= c______________ right-to-center)))
 (let (($x2084 (and $x2083 $x2082)))
 (let (($x2085 (= c______________ right-to-left)))
 (let (($x2086 (and $x2085 $x2082)))
 (let ((?x2074 (rest ?x1934)))
 (let (($x2102 (= ?x2072 ?x2074)))
 (let (($x2087 ((_ is stack ) ?x1934)))
 (let (($x2088 (= c______________ center-to-right)))
 (let (($x2089 (and $x2088 $x2087)))
 (let (($x2090 (= c______________ center-to-left)))
 (let (($x2091 (and $x2090 $x2087)))
 (let ((?x1714 (left s______________)))
 (let ((?x1932 (top ?x1714)))
 (let ((?x2073 (stack ?x1932 ?x1934)))
 (let (($x2101 (= ?x2072 ?x2073)))
 (let (($x2092 ((_ is stack ) ?x1714)))
 (let (($x2093 (= c______________ left-to-right)))
 (let (($x2094 (and $x2093 $x2092)))
 (let (($x2124 (ite $x2094 $x2101 (ite $x2091 $x2102 (ite $x2089 $x2102 (ite $x2086 $x2110 (ite $x2084 $x2107 $x2110)))))))
 (let (($x2095 (= c______________ left-to-center)))
 (let (($x2096 (and $x2095 $x2092)))
 (ite $x2096 $x2110 $x2124)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1852 (left s_______________)))
 (let ((?x1990 (left s________________)))
 (let (($x2250 (= ?x1990 ?x1852)))
 (let ((?x1886 (right s_______________)))
 (let ((?x2217 (top ?x1886)))
 (let ((?x2218 (stack ?x2217 ?x1852)))
 (let (($x2244 (= ?x1990 ?x2218)))
 (let (($x2220 ((_ is stack ) ?x1886)))
 (let (($x2223 (= c_______________ right-to-left)))
 (let (($x2224 (and $x2223 $x2220)))
 (let ((?x2072 (center s_______________)))
 (let (($x2225 ((_ is stack ) ?x2072)))
 (let (($x2226 (= c_______________ center-to-right)))
 (let (($x2227 (and $x2226 $x2225)))
 (let ((?x2213 (top ?x2072)))
 (let ((?x2214 (stack ?x2213 ?x1852)))
 (let (($x2241 (= ?x1990 ?x2214)))
 (let (($x2228 (= c_______________ center-to-left)))
 (let (($x2229 (and $x2228 $x2225)))
 (let ((?x2023 (rest ?x1852)))
 (let (($x2237 (= ?x1990 ?x2023)))
 (let (($x2230 ((_ is stack ) ?x1852)))
 (let (($x2231 (= c_______________ left-to-right)))
 (let (($x2232 (and $x2231 $x2230)))
 (let (($x2233 (= c_______________ left-to-center)))
 (let (($x2234 (and $x2233 $x2230)))
 (ite $x2234 $x2237 (ite $x2232 $x2237 (ite $x2229 $x2241 (ite $x2227 $x2250 (ite $x2224 $x2244 $x2250))))))))))))))))))))))))))))))))
(assert
 (let ((?x1886 (right s_______________)))
 (let ((?x2024 (right s________________)))
 (let (($x2246 (= ?x2024 ?x1886)))
 (let ((?x2216 (rest ?x1886)))
 (let (($x2243 (= ?x2024 ?x2216)))
 (let (($x2220 ((_ is stack ) ?x1886)))
 (let (($x2221 (= c_______________ right-to-center)))
 (let (($x2222 (and $x2221 $x2220)))
 (let (($x2223 (= c_______________ right-to-left)))
 (let (($x2224 (and $x2223 $x2220)))
 (let ((?x2072 (center s_______________)))
 (let ((?x2213 (top ?x2072)))
 (let ((?x2215 (stack ?x2213 ?x1886)))
 (let (($x2242 (= ?x2024 ?x2215)))
 (let (($x2225 ((_ is stack ) ?x2072)))
 (let (($x2226 (= c_______________ center-to-right)))
 (let (($x2227 (and $x2226 $x2225)))
 (let (($x2228 (= c_______________ center-to-left)))
 (let (($x2229 (and $x2228 $x2225)))
 (let ((?x1852 (left s_______________)))
 (let (($x2230 ((_ is stack ) ?x1852)))
 (let (($x2231 (= c_______________ left-to-right)))
 (let (($x2232 (and $x2231 $x2230)))
 (let (($x2263 (ite $x2232 $x2246 (ite $x2229 $x2246 (ite $x2227 $x2242 (ite $x2224 $x2243 (ite $x2222 $x2243 $x2246)))))))
 (let ((?x2070 (top ?x1852)))
 (let ((?x2209 (stack ?x2070 ?x1886)))
 (let (($x2238 (= ?x2024 ?x2209)))
 (let (($x2233 (= c_______________ left-to-center)))
 (let (($x2234 (and $x2233 $x2230)))
 (ite $x2234 $x2238 $x2263)))))))))))))))))))))))))))))))
(assert
 (let ((?x2072 (center s_______________)))
 (let ((?x2210 (center s________________)))
 (let (($x2248 (= ?x2210 ?x2072)))
 (let ((?x1886 (right s_______________)))
 (let ((?x2217 (top ?x1886)))
 (let ((?x2219 (stack ?x2217 ?x2072)))
 (let (($x2245 (= ?x2210 ?x2219)))
 (let (($x2220 ((_ is stack ) ?x1886)))
 (let (($x2221 (= c_______________ right-to-center)))
 (let (($x2222 (and $x2221 $x2220)))
 (let (($x2223 (= c_______________ right-to-left)))
 (let (($x2224 (and $x2223 $x2220)))
 (let ((?x2212 (rest ?x2072)))
 (let (($x2240 (= ?x2210 ?x2212)))
 (let (($x2225 ((_ is stack ) ?x2072)))
 (let (($x2226 (= c_______________ center-to-right)))
 (let (($x2227 (and $x2226 $x2225)))
 (let (($x2228 (= c_______________ center-to-left)))
 (let (($x2229 (and $x2228 $x2225)))
 (let ((?x1852 (left s_______________)))
 (let ((?x2070 (top ?x1852)))
 (let ((?x2211 (stack ?x2070 ?x2072)))
 (let (($x2239 (= ?x2210 ?x2211)))
 (let (($x2230 ((_ is stack ) ?x1852)))
 (let (($x2231 (= c_______________ left-to-right)))
 (let (($x2232 (and $x2231 $x2230)))
 (let (($x2262 (ite $x2232 $x2239 (ite $x2229 $x2240 (ite $x2227 $x2240 (ite $x2224 $x2248 (ite $x2222 $x2245 $x2248)))))))
 (let (($x2233 (= c_______________ left-to-center)))
 (let (($x2234 (and $x2233 $x2230)))
 (ite $x2234 $x2248 $x2262)))))))))))))))))))))))))))))))
(assert
 (let ((?x71 (stack K (stack J (stack G (stack F (stack C (stack A empty))))))))
 (let ((?x77 (stack V (stack U (stack R (stack O (stack N (stack L ?x71))))))))
 (let ((?x78 (stack W ?x77)))
 (let ((?x2024 (right s________________)))
 (let (($x2266 (= ?x2024 ?x78)))
 (let ((?x63 (stack E (stack I (stack M (stack H (stack S (stack B empty))))))))
 (let ((?x67 (stack Q (stack P (stack D (stack T ?x63))))))
 (let ((?x2210 (center s________________)))
 (let (($x2297 (= ?x2210 ?x67)))
 (let ((?x1990 (left s________________)))
 (let (($x2298 (= ?x1990 empty)))
 (let (($x2300 (not (and $x2298 $x2297 $x2266))))
 (not $x2300))))))))))))))
(check-sat)
(exit)
