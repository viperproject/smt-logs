(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x23 (stack C empty)))
 (let ((?x22 (stack B ?x23)))
 (let ((?x24 (stack H ?x22)))
 (let ((?x25 (stack F ?x24)))
 (let ((?x26 (stack A ?x25)))
 (let ((?x88 (left s_tmp_)))
 (= ?x88 ?x26))))))))
(assert
 (let ((?x91 (center s_tmp__)))
 (= ?x91 empty)))
(assert
 (let ((?x27 (stack D empty)))
 (let ((?x28 (stack E ?x27)))
 (let ((?x29 (stack G ?x28)))
 (let ((?x30 (stack I ?x29)))
 (let ((?x31 (stack J ?x30)))
 (let ((?x94 (right s_tmp___)))
 (= ?x94 ?x31))))))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x121 (left s_tmp__)))
 (= (left s_tmp___) ?x121)))
(assert
 (let ((?x91 (center s_tmp__)))
 (= (center s_tmp___) ?x91)))
(assert
 (let ((?x125 (center s_tmp_)))
 (= ?x125 (center s_tmp))))
(assert
 (let ((?x128 (right s_tmp_)))
 (= ?x128 (right s_tmp))))
(assert
 (let ((?x88 (left s_tmp_)))
 (let ((?x121 (left s_tmp__)))
 (= ?x121 ?x88))))
(assert
 (let ((?x128 (right s_tmp_)))
 (let ((?x132 (right s_tmp__)))
 (= ?x132 ?x128))))
(assert
 (= c__ c!1))
(assert
 (let ((?x65 (left s_)))
 (let ((?x206 (left s__)))
 (let (($x251 (= ?x206 ?x65)))
 (let ((?x68 (right s_)))
 (let (($x221 ((_ is stack ) ?x68)))
 (let (($x215 (= c_ right-to-left)))
 (let (($x225 (and $x215 $x221)))
 (let ((?x70 (center s_)))
 (let (($x226 ((_ is stack ) ?x70)))
 (let (($x228 (and (= c_ center-to-right) $x226)))
 (let (($x230 (and (= c_ center-to-left) $x226)))
 (let (($x260 (ite $x230 (= ?x206 (stack (top ?x70) ?x65)) (ite $x228 $x251 (ite $x225 (= ?x206 (stack (top ?x68) ?x65)) $x251)))))
 (let (($x238 (= ?x206 (rest ?x65))))
 (let (($x231 ((_ is stack ) ?x65)))
 (let (($x232 (= c_ left-to-right)))
 (let (($x233 (and $x232 $x231)))
 (let (($x234 (= c_ left-to-center)))
 (let (($x235 (and $x234 $x231)))
 (ite $x235 $x238 (ite $x233 $x238 $x260)))))))))))))))))))))
(assert
 (let ((?x68 (right s_)))
 (let ((?x208 (right s__)))
 (let (($x247 (= ?x208 ?x68)))
 (let (($x244 (= ?x208 (rest ?x68))))
 (let (($x221 ((_ is stack ) ?x68)))
 (let (($x213 (= c_ right-to-center)))
 (let (($x214 (and $x213 $x221)))
 (let (($x215 (= c_ right-to-left)))
 (let (($x225 (and $x215 $x221)))
 (let ((?x70 (center s_)))
 (let (($x226 ((_ is stack ) ?x70)))
 (let (($x228 (and (= c_ center-to-right) $x226)))
 (let (($x257 (ite $x228 (= ?x208 (stack (top ?x70) ?x68)) (ite $x225 $x244 (ite $x214 $x244 $x247)))))
 (let (($x230 (and (= c_ center-to-left) $x226)))
 (let ((?x65 (left s_)))
 (let (($x231 ((_ is stack ) ?x65)))
 (let (($x232 (= c_ left-to-right)))
 (let (($x233 (and $x232 $x231)))
 (let (($x234 (= c_ left-to-center)))
 (let (($x235 (and $x234 $x231)))
 (ite $x235 (= ?x208 (stack (top ?x65) ?x68)) (ite $x233 $x247 (ite $x230 $x247 $x257))))))))))))))))))))))))
(assert
 (let ((?x70 (center s_)))
 (let ((?x223 (center s__)))
 (let (($x249 (= ?x223 ?x70)))
 (let ((?x68 (right s_)))
 (let (($x221 ((_ is stack ) ?x68)))
 (let (($x213 (= c_ right-to-center)))
 (let (($x214 (and $x213 $x221)))
 (let (($x215 (= c_ right-to-left)))
 (let (($x225 (and $x215 $x221)))
 (let (($x241 (= ?x223 (rest ?x70))))
 (let (($x226 ((_ is stack ) ?x70)))
 (let (($x228 (and (= c_ center-to-right) $x226)))
 (let (($x256 (ite $x228 $x241 (ite $x225 $x249 (ite $x214 (= ?x223 (stack (top ?x68) ?x70)) $x249)))))
 (let (($x230 (and (= c_ center-to-left) $x226)))
 (let ((?x65 (left s_)))
 (let (($x231 ((_ is stack ) ?x65)))
 (let (($x232 (= c_ left-to-right)))
 (let (($x233 (and $x232 $x231)))
 (let (($x234 (= c_ left-to-center)))
 (let (($x235 (and $x234 $x231)))
 (ite $x235 $x249 (ite $x233 (= ?x223 (stack (top ?x65) ?x70)) (ite $x230 $x241 $x256))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x206 (left s__)))
 (let ((?x135 (left s___)))
 (let (($x362 (= ?x135 ?x206)))
 (let ((?x208 (right s__)))
 (let ((?x329 (top ?x208)))
 (let ((?x330 (stack ?x329 ?x206)))
 (let (($x356 (= ?x135 ?x330)))
 (let (($x332 ((_ is stack ) ?x208)))
 (let (($x335 (= c__ right-to-left)))
 (let (($x336 (and $x335 $x332)))
 (let ((?x223 (center s__)))
 (let (($x337 ((_ is stack ) ?x223)))
 (let (($x338 (= c__ center-to-right)))
 (let (($x339 (and $x338 $x337)))
 (let ((?x325 (top ?x223)))
 (let ((?x326 (stack ?x325 ?x206)))
 (let (($x353 (= ?x135 ?x326)))
 (let (($x340 (= c__ center-to-left)))
 (let (($x341 (and $x340 $x337)))
 (let ((?x137 (rest ?x206)))
 (let (($x349 (= ?x135 ?x137)))
 (let (($x342 ((_ is stack ) ?x206)))
 (let (($x343 (= c__ left-to-right)))
 (let (($x344 (and $x343 $x342)))
 (let (($x345 (= c__ left-to-center)))
 (let (($x346 (and $x345 $x342)))
 (ite $x346 $x349 (ite $x344 $x349 (ite $x341 $x353 (ite $x339 $x362 (ite $x336 $x356 $x362))))))))))))))))))))))))))))))))
(assert
 (let ((?x208 (right s__)))
 (let ((?x138 (right s___)))
 (let (($x358 (= ?x138 ?x208)))
 (let ((?x328 (rest ?x208)))
 (let (($x355 (= ?x138 ?x328)))
 (let (($x332 ((_ is stack ) ?x208)))
 (let (($x333 (= c__ right-to-center)))
 (let (($x334 (and $x333 $x332)))
 (let (($x335 (= c__ right-to-left)))
 (let (($x336 (and $x335 $x332)))
 (let ((?x223 (center s__)))
 (let ((?x325 (top ?x223)))
 (let ((?x327 (stack ?x325 ?x208)))
 (let (($x354 (= ?x138 ?x327)))
 (let (($x337 ((_ is stack ) ?x223)))
 (let (($x338 (= c__ center-to-right)))
 (let (($x339 (and $x338 $x337)))
 (let (($x340 (= c__ center-to-left)))
 (let (($x341 (and $x340 $x337)))
 (let ((?x206 (left s__)))
 (let (($x342 ((_ is stack ) ?x206)))
 (let (($x343 (= c__ left-to-right)))
 (let (($x344 (and $x343 $x342)))
 (let (($x375 (ite $x344 $x358 (ite $x341 $x358 (ite $x339 $x354 (ite $x336 $x355 (ite $x334 $x355 $x358)))))))
 (let ((?x203 (top ?x206)))
 (let ((?x321 (stack ?x203 ?x208)))
 (let (($x350 (= ?x138 ?x321)))
 (let (($x345 (= c__ left-to-center)))
 (let (($x346 (and $x345 $x342)))
 (ite $x346 $x350 $x375)))))))))))))))))))))))))))))))
(assert
 (let ((?x223 (center s__)))
 (let ((?x322 (center s___)))
 (let (($x360 (= ?x322 ?x223)))
 (let ((?x208 (right s__)))
 (let ((?x329 (top ?x208)))
 (let ((?x331 (stack ?x329 ?x223)))
 (let (($x357 (= ?x322 ?x331)))
 (let (($x332 ((_ is stack ) ?x208)))
 (let (($x333 (= c__ right-to-center)))
 (let (($x334 (and $x333 $x332)))
 (let (($x335 (= c__ right-to-left)))
 (let (($x336 (and $x335 $x332)))
 (let ((?x324 (rest ?x223)))
 (let (($x352 (= ?x322 ?x324)))
 (let (($x337 ((_ is stack ) ?x223)))
 (let (($x338 (= c__ center-to-right)))
 (let (($x339 (and $x338 $x337)))
 (let (($x340 (= c__ center-to-left)))
 (let (($x341 (and $x340 $x337)))
 (let ((?x206 (left s__)))
 (let ((?x203 (top ?x206)))
 (let ((?x323 (stack ?x203 ?x223)))
 (let (($x351 (= ?x322 ?x323)))
 (let (($x342 ((_ is stack ) ?x206)))
 (let (($x343 (= c__ left-to-right)))
 (let (($x344 (and $x343 $x342)))
 (let (($x374 (ite $x344 $x351 (ite $x341 $x352 (ite $x339 $x352 (ite $x336 $x360 (ite $x334 $x357 $x360)))))))
 (let (($x345 (= c__ left-to-center)))
 (let (($x346 (and $x345 $x342)))
 (ite $x346 $x360 $x374)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x135 (left s___)))
 (let ((?x267 (left s____)))
 (let (($x500 (= ?x267 ?x135)))
 (let ((?x138 (right s___)))
 (let ((?x467 (top ?x138)))
 (let ((?x468 (stack ?x467 ?x135)))
 (let (($x494 (= ?x267 ?x468)))
 (let (($x470 ((_ is stack ) ?x138)))
 (let (($x473 (= c___ right-to-left)))
 (let (($x474 (and $x473 $x470)))
 (let ((?x322 (center s___)))
 (let (($x475 ((_ is stack ) ?x322)))
 (let (($x476 (= c___ center-to-right)))
 (let (($x477 (and $x476 $x475)))
 (let ((?x463 (top ?x322)))
 (let ((?x464 (stack ?x463 ?x135)))
 (let (($x491 (= ?x267 ?x464)))
 (let (($x478 (= c___ center-to-left)))
 (let (($x479 (and $x478 $x475)))
 (let ((?x298 (rest ?x135)))
 (let (($x487 (= ?x267 ?x298)))
 (let (($x480 ((_ is stack ) ?x135)))
 (let (($x481 (= c___ left-to-right)))
 (let (($x482 (and $x481 $x480)))
 (let (($x483 (= c___ left-to-center)))
 (let (($x484 (and $x483 $x480)))
 (ite $x484 $x487 (ite $x482 $x487 (ite $x479 $x491 (ite $x477 $x500 (ite $x474 $x494 $x500))))))))))))))))))))))))))))))))
(assert
 (let ((?x138 (right s___)))
 (let ((?x299 (right s____)))
 (let (($x496 (= ?x299 ?x138)))
 (let ((?x466 (rest ?x138)))
 (let (($x493 (= ?x299 ?x466)))
 (let (($x470 ((_ is stack ) ?x138)))
 (let (($x471 (= c___ right-to-center)))
 (let (($x472 (and $x471 $x470)))
 (let (($x473 (= c___ right-to-left)))
 (let (($x474 (and $x473 $x470)))
 (let ((?x322 (center s___)))
 (let ((?x463 (top ?x322)))
 (let ((?x465 (stack ?x463 ?x138)))
 (let (($x492 (= ?x299 ?x465)))
 (let (($x475 ((_ is stack ) ?x322)))
 (let (($x476 (= c___ center-to-right)))
 (let (($x477 (and $x476 $x475)))
 (let (($x478 (= c___ center-to-left)))
 (let (($x479 (and $x478 $x475)))
 (let ((?x135 (left s___)))
 (let (($x480 ((_ is stack ) ?x135)))
 (let (($x481 (= c___ left-to-right)))
 (let (($x482 (and $x481 $x480)))
 (let (($x513 (ite $x482 $x496 (ite $x479 $x496 (ite $x477 $x492 (ite $x474 $x493 (ite $x472 $x493 $x496)))))))
 (let ((?x320 (top ?x135)))
 (let ((?x459 (stack ?x320 ?x138)))
 (let (($x488 (= ?x299 ?x459)))
 (let (($x483 (= c___ left-to-center)))
 (let (($x484 (and $x483 $x480)))
 (ite $x484 $x488 $x513)))))))))))))))))))))))))))))))
(assert
 (let ((?x322 (center s___)))
 (let ((?x460 (center s____)))
 (let (($x498 (= ?x460 ?x322)))
 (let ((?x138 (right s___)))
 (let ((?x467 (top ?x138)))
 (let ((?x469 (stack ?x467 ?x322)))
 (let (($x495 (= ?x460 ?x469)))
 (let (($x470 ((_ is stack ) ?x138)))
 (let (($x471 (= c___ right-to-center)))
 (let (($x472 (and $x471 $x470)))
 (let (($x473 (= c___ right-to-left)))
 (let (($x474 (and $x473 $x470)))
 (let ((?x462 (rest ?x322)))
 (let (($x490 (= ?x460 ?x462)))
 (let (($x475 ((_ is stack ) ?x322)))
 (let (($x476 (= c___ center-to-right)))
 (let (($x477 (and $x476 $x475)))
 (let (($x478 (= c___ center-to-left)))
 (let (($x479 (and $x478 $x475)))
 (let ((?x135 (left s___)))
 (let ((?x320 (top ?x135)))
 (let ((?x461 (stack ?x320 ?x322)))
 (let (($x489 (= ?x460 ?x461)))
 (let (($x480 ((_ is stack ) ?x135)))
 (let (($x481 (= c___ left-to-right)))
 (let (($x482 (and $x481 $x480)))
 (let (($x512 (ite $x482 $x489 (ite $x479 $x490 (ite $x477 $x490 (ite $x474 $x498 (ite $x472 $x495 $x498)))))))
 (let (($x483 (= c___ left-to-center)))
 (let (($x484 (and $x483 $x480)))
 (ite $x484 $x498 $x512)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x267 (left s____)))
 (let ((?x378 (left s_____)))
 (let (($x638 (= ?x378 ?x267)))
 (let ((?x299 (right s____)))
 (let ((?x605 (top ?x299)))
 (let ((?x606 (stack ?x605 ?x267)))
 (let (($x632 (= ?x378 ?x606)))
 (let (($x608 ((_ is stack ) ?x299)))
 (let (($x611 (= c____ right-to-left)))
 (let (($x612 (and $x611 $x608)))
 (let ((?x460 (center s____)))
 (let (($x613 ((_ is stack ) ?x460)))
 (let (($x614 (= c____ center-to-right)))
 (let (($x615 (and $x614 $x613)))
 (let ((?x601 (top ?x460)))
 (let ((?x602 (stack ?x601 ?x267)))
 (let (($x629 (= ?x378 ?x602)))
 (let (($x616 (= c____ center-to-left)))
 (let (($x617 (and $x616 $x613)))
 (let ((?x411 (rest ?x267)))
 (let (($x625 (= ?x378 ?x411)))
 (let (($x618 ((_ is stack ) ?x267)))
 (let (($x619 (= c____ left-to-right)))
 (let (($x620 (and $x619 $x618)))
 (let (($x621 (= c____ left-to-center)))
 (let (($x622 (and $x621 $x618)))
 (ite $x622 $x625 (ite $x620 $x625 (ite $x617 $x629 (ite $x615 $x638 (ite $x612 $x632 $x638))))))))))))))))))))))))))))))))
(assert
 (let ((?x299 (right s____)))
 (let ((?x412 (right s_____)))
 (let (($x634 (= ?x412 ?x299)))
 (let ((?x604 (rest ?x299)))
 (let (($x631 (= ?x412 ?x604)))
 (let (($x608 ((_ is stack ) ?x299)))
 (let (($x609 (= c____ right-to-center)))
 (let (($x610 (and $x609 $x608)))
 (let (($x611 (= c____ right-to-left)))
 (let (($x612 (and $x611 $x608)))
 (let ((?x460 (center s____)))
 (let ((?x601 (top ?x460)))
 (let ((?x603 (stack ?x601 ?x299)))
 (let (($x630 (= ?x412 ?x603)))
 (let (($x613 ((_ is stack ) ?x460)))
 (let (($x614 (= c____ center-to-right)))
 (let (($x615 (and $x614 $x613)))
 (let (($x616 (= c____ center-to-left)))
 (let (($x617 (and $x616 $x613)))
 (let ((?x267 (left s____)))
 (let (($x618 ((_ is stack ) ?x267)))
 (let (($x619 (= c____ left-to-right)))
 (let (($x620 (and $x619 $x618)))
 (let (($x651 (ite $x620 $x634 (ite $x617 $x634 (ite $x615 $x630 (ite $x612 $x631 (ite $x610 $x631 $x634)))))))
 (let ((?x458 (top ?x267)))
 (let ((?x597 (stack ?x458 ?x299)))
 (let (($x626 (= ?x412 ?x597)))
 (let (($x621 (= c____ left-to-center)))
 (let (($x622 (and $x621 $x618)))
 (ite $x622 $x626 $x651)))))))))))))))))))))))))))))))
(assert
 (let ((?x460 (center s____)))
 (let ((?x598 (center s_____)))
 (let (($x636 (= ?x598 ?x460)))
 (let ((?x299 (right s____)))
 (let ((?x605 (top ?x299)))
 (let ((?x607 (stack ?x605 ?x460)))
 (let (($x633 (= ?x598 ?x607)))
 (let (($x608 ((_ is stack ) ?x299)))
 (let (($x609 (= c____ right-to-center)))
 (let (($x610 (and $x609 $x608)))
 (let (($x611 (= c____ right-to-left)))
 (let (($x612 (and $x611 $x608)))
 (let ((?x600 (rest ?x460)))
 (let (($x628 (= ?x598 ?x600)))
 (let (($x613 ((_ is stack ) ?x460)))
 (let (($x614 (= c____ center-to-right)))
 (let (($x615 (and $x614 $x613)))
 (let (($x616 (= c____ center-to-left)))
 (let (($x617 (and $x616 $x613)))
 (let ((?x267 (left s____)))
 (let ((?x458 (top ?x267)))
 (let ((?x599 (stack ?x458 ?x460)))
 (let (($x627 (= ?x598 ?x599)))
 (let (($x618 ((_ is stack ) ?x267)))
 (let (($x619 (= c____ left-to-right)))
 (let (($x620 (and $x619 $x618)))
 (let (($x650 (ite $x620 $x627 (ite $x617 $x628 (ite $x615 $x628 (ite $x612 $x636 (ite $x610 $x633 $x636)))))))
 (let (($x621 (= c____ left-to-center)))
 (let (($x622 (and $x621 $x618)))
 (ite $x622 $x636 $x650)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x378 (left s_____)))
 (let ((?x516 (left s______)))
 (let (($x776 (= ?x516 ?x378)))
 (let ((?x412 (right s_____)))
 (let ((?x743 (top ?x412)))
 (let ((?x744 (stack ?x743 ?x378)))
 (let (($x770 (= ?x516 ?x744)))
 (let (($x746 ((_ is stack ) ?x412)))
 (let (($x749 (= c_____ right-to-left)))
 (let (($x750 (and $x749 $x746)))
 (let ((?x598 (center s_____)))
 (let (($x751 ((_ is stack ) ?x598)))
 (let (($x752 (= c_____ center-to-right)))
 (let (($x753 (and $x752 $x751)))
 (let ((?x739 (top ?x598)))
 (let ((?x740 (stack ?x739 ?x378)))
 (let (($x767 (= ?x516 ?x740)))
 (let (($x754 (= c_____ center-to-left)))
 (let (($x755 (and $x754 $x751)))
 (let ((?x549 (rest ?x378)))
 (let (($x763 (= ?x516 ?x549)))
 (let (($x756 ((_ is stack ) ?x378)))
 (let (($x757 (= c_____ left-to-right)))
 (let (($x758 (and $x757 $x756)))
 (let (($x759 (= c_____ left-to-center)))
 (let (($x760 (and $x759 $x756)))
 (ite $x760 $x763 (ite $x758 $x763 (ite $x755 $x767 (ite $x753 $x776 (ite $x750 $x770 $x776))))))))))))))))))))))))))))))))
(assert
 (let ((?x412 (right s_____)))
 (let ((?x550 (right s______)))
 (let (($x772 (= ?x550 ?x412)))
 (let ((?x742 (rest ?x412)))
 (let (($x769 (= ?x550 ?x742)))
 (let (($x746 ((_ is stack ) ?x412)))
 (let (($x747 (= c_____ right-to-center)))
 (let (($x748 (and $x747 $x746)))
 (let (($x749 (= c_____ right-to-left)))
 (let (($x750 (and $x749 $x746)))
 (let ((?x598 (center s_____)))
 (let ((?x739 (top ?x598)))
 (let ((?x741 (stack ?x739 ?x412)))
 (let (($x768 (= ?x550 ?x741)))
 (let (($x751 ((_ is stack ) ?x598)))
 (let (($x752 (= c_____ center-to-right)))
 (let (($x753 (and $x752 $x751)))
 (let (($x754 (= c_____ center-to-left)))
 (let (($x755 (and $x754 $x751)))
 (let ((?x378 (left s_____)))
 (let (($x756 ((_ is stack ) ?x378)))
 (let (($x757 (= c_____ left-to-right)))
 (let (($x758 (and $x757 $x756)))
 (let (($x789 (ite $x758 $x772 (ite $x755 $x772 (ite $x753 $x768 (ite $x750 $x769 (ite $x748 $x769 $x772)))))))
 (let ((?x596 (top ?x378)))
 (let ((?x735 (stack ?x596 ?x412)))
 (let (($x764 (= ?x550 ?x735)))
 (let (($x759 (= c_____ left-to-center)))
 (let (($x760 (and $x759 $x756)))
 (ite $x760 $x764 $x789)))))))))))))))))))))))))))))))
(assert
 (let ((?x598 (center s_____)))
 (let ((?x736 (center s______)))
 (let (($x774 (= ?x736 ?x598)))
 (let ((?x412 (right s_____)))
 (let ((?x743 (top ?x412)))
 (let ((?x745 (stack ?x743 ?x598)))
 (let (($x771 (= ?x736 ?x745)))
 (let (($x746 ((_ is stack ) ?x412)))
 (let (($x747 (= c_____ right-to-center)))
 (let (($x748 (and $x747 $x746)))
 (let (($x749 (= c_____ right-to-left)))
 (let (($x750 (and $x749 $x746)))
 (let ((?x738 (rest ?x598)))
 (let (($x766 (= ?x736 ?x738)))
 (let (($x751 ((_ is stack ) ?x598)))
 (let (($x752 (= c_____ center-to-right)))
 (let (($x753 (and $x752 $x751)))
 (let (($x754 (= c_____ center-to-left)))
 (let (($x755 (and $x754 $x751)))
 (let ((?x378 (left s_____)))
 (let ((?x596 (top ?x378)))
 (let ((?x737 (stack ?x596 ?x598)))
 (let (($x765 (= ?x736 ?x737)))
 (let (($x756 ((_ is stack ) ?x378)))
 (let (($x757 (= c_____ left-to-right)))
 (let (($x758 (and $x757 $x756)))
 (let (($x788 (ite $x758 $x765 (ite $x755 $x766 (ite $x753 $x766 (ite $x750 $x774 (ite $x748 $x771 $x774)))))))
 (let (($x759 (= c_____ left-to-center)))
 (let (($x760 (and $x759 $x756)))
 (ite $x760 $x774 $x788)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x516 (left s______)))
 (let ((?x654 (left s_______)))
 (let (($x914 (= ?x654 ?x516)))
 (let ((?x550 (right s______)))
 (let ((?x881 (top ?x550)))
 (let ((?x882 (stack ?x881 ?x516)))
 (let (($x908 (= ?x654 ?x882)))
 (let (($x884 ((_ is stack ) ?x550)))
 (let (($x887 (= c______ right-to-left)))
 (let (($x888 (and $x887 $x884)))
 (let ((?x736 (center s______)))
 (let (($x889 ((_ is stack ) ?x736)))
 (let (($x890 (= c______ center-to-right)))
 (let (($x891 (and $x890 $x889)))
 (let ((?x877 (top ?x736)))
 (let ((?x878 (stack ?x877 ?x516)))
 (let (($x905 (= ?x654 ?x878)))
 (let (($x892 (= c______ center-to-left)))
 (let (($x893 (and $x892 $x889)))
 (let ((?x687 (rest ?x516)))
 (let (($x901 (= ?x654 ?x687)))
 (let (($x894 ((_ is stack ) ?x516)))
 (let (($x895 (= c______ left-to-right)))
 (let (($x896 (and $x895 $x894)))
 (let (($x897 (= c______ left-to-center)))
 (let (($x898 (and $x897 $x894)))
 (ite $x898 $x901 (ite $x896 $x901 (ite $x893 $x905 (ite $x891 $x914 (ite $x888 $x908 $x914))))))))))))))))))))))))))))))))
(assert
 (let ((?x550 (right s______)))
 (let ((?x688 (right s_______)))
 (let (($x910 (= ?x688 ?x550)))
 (let ((?x880 (rest ?x550)))
 (let (($x907 (= ?x688 ?x880)))
 (let (($x884 ((_ is stack ) ?x550)))
 (let (($x885 (= c______ right-to-center)))
 (let (($x886 (and $x885 $x884)))
 (let (($x887 (= c______ right-to-left)))
 (let (($x888 (and $x887 $x884)))
 (let ((?x736 (center s______)))
 (let ((?x877 (top ?x736)))
 (let ((?x879 (stack ?x877 ?x550)))
 (let (($x906 (= ?x688 ?x879)))
 (let (($x889 ((_ is stack ) ?x736)))
 (let (($x890 (= c______ center-to-right)))
 (let (($x891 (and $x890 $x889)))
 (let (($x892 (= c______ center-to-left)))
 (let (($x893 (and $x892 $x889)))
 (let ((?x516 (left s______)))
 (let (($x894 ((_ is stack ) ?x516)))
 (let (($x895 (= c______ left-to-right)))
 (let (($x896 (and $x895 $x894)))
 (let (($x927 (ite $x896 $x910 (ite $x893 $x910 (ite $x891 $x906 (ite $x888 $x907 (ite $x886 $x907 $x910)))))))
 (let ((?x734 (top ?x516)))
 (let ((?x873 (stack ?x734 ?x550)))
 (let (($x902 (= ?x688 ?x873)))
 (let (($x897 (= c______ left-to-center)))
 (let (($x898 (and $x897 $x894)))
 (ite $x898 $x902 $x927)))))))))))))))))))))))))))))))
(assert
 (let ((?x736 (center s______)))
 (let ((?x874 (center s_______)))
 (let (($x912 (= ?x874 ?x736)))
 (let ((?x550 (right s______)))
 (let ((?x881 (top ?x550)))
 (let ((?x883 (stack ?x881 ?x736)))
 (let (($x909 (= ?x874 ?x883)))
 (let (($x884 ((_ is stack ) ?x550)))
 (let (($x885 (= c______ right-to-center)))
 (let (($x886 (and $x885 $x884)))
 (let (($x887 (= c______ right-to-left)))
 (let (($x888 (and $x887 $x884)))
 (let ((?x876 (rest ?x736)))
 (let (($x904 (= ?x874 ?x876)))
 (let (($x889 ((_ is stack ) ?x736)))
 (let (($x890 (= c______ center-to-right)))
 (let (($x891 (and $x890 $x889)))
 (let (($x892 (= c______ center-to-left)))
 (let (($x893 (and $x892 $x889)))
 (let ((?x516 (left s______)))
 (let ((?x734 (top ?x516)))
 (let ((?x875 (stack ?x734 ?x736)))
 (let (($x903 (= ?x874 ?x875)))
 (let (($x894 ((_ is stack ) ?x516)))
 (let (($x895 (= c______ left-to-right)))
 (let (($x896 (and $x895 $x894)))
 (let (($x926 (ite $x896 $x903 (ite $x893 $x904 (ite $x891 $x904 (ite $x888 $x912 (ite $x886 $x909 $x912)))))))
 (let (($x897 (= c______ left-to-center)))
 (let (($x898 (and $x897 $x894)))
 (ite $x898 $x912 $x926)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x654 (left s_______)))
 (let ((?x792 (left s________)))
 (let (($x1052 (= ?x792 ?x654)))
 (let ((?x688 (right s_______)))
 (let ((?x1019 (top ?x688)))
 (let ((?x1020 (stack ?x1019 ?x654)))
 (let (($x1046 (= ?x792 ?x1020)))
 (let (($x1022 ((_ is stack ) ?x688)))
 (let (($x1025 (= c_______ right-to-left)))
 (let (($x1026 (and $x1025 $x1022)))
 (let ((?x874 (center s_______)))
 (let (($x1027 ((_ is stack ) ?x874)))
 (let (($x1028 (= c_______ center-to-right)))
 (let (($x1029 (and $x1028 $x1027)))
 (let ((?x1015 (top ?x874)))
 (let ((?x1016 (stack ?x1015 ?x654)))
 (let (($x1043 (= ?x792 ?x1016)))
 (let (($x1030 (= c_______ center-to-left)))
 (let (($x1031 (and $x1030 $x1027)))
 (let ((?x825 (rest ?x654)))
 (let (($x1039 (= ?x792 ?x825)))
 (let (($x1032 ((_ is stack ) ?x654)))
 (let (($x1033 (= c_______ left-to-right)))
 (let (($x1034 (and $x1033 $x1032)))
 (let (($x1035 (= c_______ left-to-center)))
 (let (($x1036 (and $x1035 $x1032)))
 (ite $x1036 $x1039 (ite $x1034 $x1039 (ite $x1031 $x1043 (ite $x1029 $x1052 (ite $x1026 $x1046 $x1052))))))))))))))))))))))))))))))))
(assert
 (let ((?x688 (right s_______)))
 (let ((?x826 (right s________)))
 (let (($x1048 (= ?x826 ?x688)))
 (let ((?x1018 (rest ?x688)))
 (let (($x1045 (= ?x826 ?x1018)))
 (let (($x1022 ((_ is stack ) ?x688)))
 (let (($x1023 (= c_______ right-to-center)))
 (let (($x1024 (and $x1023 $x1022)))
 (let (($x1025 (= c_______ right-to-left)))
 (let (($x1026 (and $x1025 $x1022)))
 (let ((?x874 (center s_______)))
 (let ((?x1015 (top ?x874)))
 (let ((?x1017 (stack ?x1015 ?x688)))
 (let (($x1044 (= ?x826 ?x1017)))
 (let (($x1027 ((_ is stack ) ?x874)))
 (let (($x1028 (= c_______ center-to-right)))
 (let (($x1029 (and $x1028 $x1027)))
 (let (($x1030 (= c_______ center-to-left)))
 (let (($x1031 (and $x1030 $x1027)))
 (let ((?x654 (left s_______)))
 (let (($x1032 ((_ is stack ) ?x654)))
 (let (($x1033 (= c_______ left-to-right)))
 (let (($x1034 (and $x1033 $x1032)))
 (let (($x1065 (ite $x1034 $x1048 (ite $x1031 $x1048 (ite $x1029 $x1044 (ite $x1026 $x1045 (ite $x1024 $x1045 $x1048)))))))
 (let ((?x872 (top ?x654)))
 (let ((?x1011 (stack ?x872 ?x688)))
 (let (($x1040 (= ?x826 ?x1011)))
 (let (($x1035 (= c_______ left-to-center)))
 (let (($x1036 (and $x1035 $x1032)))
 (ite $x1036 $x1040 $x1065)))))))))))))))))))))))))))))))
(assert
 (let ((?x874 (center s_______)))
 (let ((?x1012 (center s________)))
 (let (($x1050 (= ?x1012 ?x874)))
 (let ((?x688 (right s_______)))
 (let ((?x1019 (top ?x688)))
 (let ((?x1021 (stack ?x1019 ?x874)))
 (let (($x1047 (= ?x1012 ?x1021)))
 (let (($x1022 ((_ is stack ) ?x688)))
 (let (($x1023 (= c_______ right-to-center)))
 (let (($x1024 (and $x1023 $x1022)))
 (let (($x1025 (= c_______ right-to-left)))
 (let (($x1026 (and $x1025 $x1022)))
 (let ((?x1014 (rest ?x874)))
 (let (($x1042 (= ?x1012 ?x1014)))
 (let (($x1027 ((_ is stack ) ?x874)))
 (let (($x1028 (= c_______ center-to-right)))
 (let (($x1029 (and $x1028 $x1027)))
 (let (($x1030 (= c_______ center-to-left)))
 (let (($x1031 (and $x1030 $x1027)))
 (let ((?x654 (left s_______)))
 (let ((?x872 (top ?x654)))
 (let ((?x1013 (stack ?x872 ?x874)))
 (let (($x1041 (= ?x1012 ?x1013)))
 (let (($x1032 ((_ is stack ) ?x654)))
 (let (($x1033 (= c_______ left-to-right)))
 (let (($x1034 (and $x1033 $x1032)))
 (let (($x1064 (ite $x1034 $x1041 (ite $x1031 $x1042 (ite $x1029 $x1042 (ite $x1026 $x1050 (ite $x1024 $x1047 $x1050)))))))
 (let (($x1035 (= c_______ left-to-center)))
 (let (($x1036 (and $x1035 $x1032)))
 (ite $x1036 $x1050 $x1064)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x792 (left s________)))
 (let ((?x930 (left s_________)))
 (let (($x1190 (= ?x930 ?x792)))
 (let ((?x826 (right s________)))
 (let ((?x1157 (top ?x826)))
 (let ((?x1158 (stack ?x1157 ?x792)))
 (let (($x1184 (= ?x930 ?x1158)))
 (let (($x1160 ((_ is stack ) ?x826)))
 (let (($x1163 (= c________ right-to-left)))
 (let (($x1164 (and $x1163 $x1160)))
 (let ((?x1012 (center s________)))
 (let (($x1165 ((_ is stack ) ?x1012)))
 (let (($x1166 (= c________ center-to-right)))
 (let (($x1167 (and $x1166 $x1165)))
 (let ((?x1153 (top ?x1012)))
 (let ((?x1154 (stack ?x1153 ?x792)))
 (let (($x1181 (= ?x930 ?x1154)))
 (let (($x1168 (= c________ center-to-left)))
 (let (($x1169 (and $x1168 $x1165)))
 (let ((?x963 (rest ?x792)))
 (let (($x1177 (= ?x930 ?x963)))
 (let (($x1170 ((_ is stack ) ?x792)))
 (let (($x1171 (= c________ left-to-right)))
 (let (($x1172 (and $x1171 $x1170)))
 (let (($x1173 (= c________ left-to-center)))
 (let (($x1174 (and $x1173 $x1170)))
 (ite $x1174 $x1177 (ite $x1172 $x1177 (ite $x1169 $x1181 (ite $x1167 $x1190 (ite $x1164 $x1184 $x1190))))))))))))))))))))))))))))))))
(assert
 (let ((?x826 (right s________)))
 (let ((?x964 (right s_________)))
 (let (($x1186 (= ?x964 ?x826)))
 (let ((?x1156 (rest ?x826)))
 (let (($x1183 (= ?x964 ?x1156)))
 (let (($x1160 ((_ is stack ) ?x826)))
 (let (($x1161 (= c________ right-to-center)))
 (let (($x1162 (and $x1161 $x1160)))
 (let (($x1163 (= c________ right-to-left)))
 (let (($x1164 (and $x1163 $x1160)))
 (let ((?x1012 (center s________)))
 (let ((?x1153 (top ?x1012)))
 (let ((?x1155 (stack ?x1153 ?x826)))
 (let (($x1182 (= ?x964 ?x1155)))
 (let (($x1165 ((_ is stack ) ?x1012)))
 (let (($x1166 (= c________ center-to-right)))
 (let (($x1167 (and $x1166 $x1165)))
 (let (($x1168 (= c________ center-to-left)))
 (let (($x1169 (and $x1168 $x1165)))
 (let ((?x792 (left s________)))
 (let (($x1170 ((_ is stack ) ?x792)))
 (let (($x1171 (= c________ left-to-right)))
 (let (($x1172 (and $x1171 $x1170)))
 (let (($x1203 (ite $x1172 $x1186 (ite $x1169 $x1186 (ite $x1167 $x1182 (ite $x1164 $x1183 (ite $x1162 $x1183 $x1186)))))))
 (let ((?x1010 (top ?x792)))
 (let ((?x1149 (stack ?x1010 ?x826)))
 (let (($x1178 (= ?x964 ?x1149)))
 (let (($x1173 (= c________ left-to-center)))
 (let (($x1174 (and $x1173 $x1170)))
 (ite $x1174 $x1178 $x1203)))))))))))))))))))))))))))))))
(assert
 (let ((?x1012 (center s________)))
 (let ((?x1150 (center s_________)))
 (let (($x1188 (= ?x1150 ?x1012)))
 (let ((?x826 (right s________)))
 (let ((?x1157 (top ?x826)))
 (let ((?x1159 (stack ?x1157 ?x1012)))
 (let (($x1185 (= ?x1150 ?x1159)))
 (let (($x1160 ((_ is stack ) ?x826)))
 (let (($x1161 (= c________ right-to-center)))
 (let (($x1162 (and $x1161 $x1160)))
 (let (($x1163 (= c________ right-to-left)))
 (let (($x1164 (and $x1163 $x1160)))
 (let ((?x1152 (rest ?x1012)))
 (let (($x1180 (= ?x1150 ?x1152)))
 (let (($x1165 ((_ is stack ) ?x1012)))
 (let (($x1166 (= c________ center-to-right)))
 (let (($x1167 (and $x1166 $x1165)))
 (let (($x1168 (= c________ center-to-left)))
 (let (($x1169 (and $x1168 $x1165)))
 (let ((?x792 (left s________)))
 (let ((?x1010 (top ?x792)))
 (let ((?x1151 (stack ?x1010 ?x1012)))
 (let (($x1179 (= ?x1150 ?x1151)))
 (let (($x1170 ((_ is stack ) ?x792)))
 (let (($x1171 (= c________ left-to-right)))
 (let (($x1172 (and $x1171 $x1170)))
 (let (($x1202 (ite $x1172 $x1179 (ite $x1169 $x1180 (ite $x1167 $x1180 (ite $x1164 $x1188 (ite $x1162 $x1185 $x1188)))))))
 (let (($x1173 (= c________ left-to-center)))
 (let (($x1174 (and $x1173 $x1170)))
 (ite $x1174 $x1188 $x1202)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x930 (left s_________)))
 (let ((?x1068 (left s__________)))
 (let (($x1328 (= ?x1068 ?x930)))
 (let ((?x964 (right s_________)))
 (let ((?x1295 (top ?x964)))
 (let ((?x1296 (stack ?x1295 ?x930)))
 (let (($x1322 (= ?x1068 ?x1296)))
 (let (($x1298 ((_ is stack ) ?x964)))
 (let (($x1301 (= c_________ right-to-left)))
 (let (($x1302 (and $x1301 $x1298)))
 (let ((?x1150 (center s_________)))
 (let (($x1303 ((_ is stack ) ?x1150)))
 (let (($x1304 (= c_________ center-to-right)))
 (let (($x1305 (and $x1304 $x1303)))
 (let ((?x1291 (top ?x1150)))
 (let ((?x1292 (stack ?x1291 ?x930)))
 (let (($x1319 (= ?x1068 ?x1292)))
 (let (($x1306 (= c_________ center-to-left)))
 (let (($x1307 (and $x1306 $x1303)))
 (let ((?x1101 (rest ?x930)))
 (let (($x1315 (= ?x1068 ?x1101)))
 (let (($x1308 ((_ is stack ) ?x930)))
 (let (($x1309 (= c_________ left-to-right)))
 (let (($x1310 (and $x1309 $x1308)))
 (let (($x1311 (= c_________ left-to-center)))
 (let (($x1312 (and $x1311 $x1308)))
 (ite $x1312 $x1315 (ite $x1310 $x1315 (ite $x1307 $x1319 (ite $x1305 $x1328 (ite $x1302 $x1322 $x1328))))))))))))))))))))))))))))))))
(assert
 (let ((?x964 (right s_________)))
 (let ((?x1102 (right s__________)))
 (let (($x1324 (= ?x1102 ?x964)))
 (let ((?x1294 (rest ?x964)))
 (let (($x1321 (= ?x1102 ?x1294)))
 (let (($x1298 ((_ is stack ) ?x964)))
 (let (($x1299 (= c_________ right-to-center)))
 (let (($x1300 (and $x1299 $x1298)))
 (let (($x1301 (= c_________ right-to-left)))
 (let (($x1302 (and $x1301 $x1298)))
 (let ((?x1150 (center s_________)))
 (let ((?x1291 (top ?x1150)))
 (let ((?x1293 (stack ?x1291 ?x964)))
 (let (($x1320 (= ?x1102 ?x1293)))
 (let (($x1303 ((_ is stack ) ?x1150)))
 (let (($x1304 (= c_________ center-to-right)))
 (let (($x1305 (and $x1304 $x1303)))
 (let (($x1306 (= c_________ center-to-left)))
 (let (($x1307 (and $x1306 $x1303)))
 (let ((?x930 (left s_________)))
 (let (($x1308 ((_ is stack ) ?x930)))
 (let (($x1309 (= c_________ left-to-right)))
 (let (($x1310 (and $x1309 $x1308)))
 (let (($x1341 (ite $x1310 $x1324 (ite $x1307 $x1324 (ite $x1305 $x1320 (ite $x1302 $x1321 (ite $x1300 $x1321 $x1324)))))))
 (let ((?x1148 (top ?x930)))
 (let ((?x1287 (stack ?x1148 ?x964)))
 (let (($x1316 (= ?x1102 ?x1287)))
 (let (($x1311 (= c_________ left-to-center)))
 (let (($x1312 (and $x1311 $x1308)))
 (ite $x1312 $x1316 $x1341)))))))))))))))))))))))))))))))
(assert
 (let ((?x1150 (center s_________)))
 (let ((?x1288 (center s__________)))
 (let (($x1326 (= ?x1288 ?x1150)))
 (let ((?x964 (right s_________)))
 (let ((?x1295 (top ?x964)))
 (let ((?x1297 (stack ?x1295 ?x1150)))
 (let (($x1323 (= ?x1288 ?x1297)))
 (let (($x1298 ((_ is stack ) ?x964)))
 (let (($x1299 (= c_________ right-to-center)))
 (let (($x1300 (and $x1299 $x1298)))
 (let (($x1301 (= c_________ right-to-left)))
 (let (($x1302 (and $x1301 $x1298)))
 (let ((?x1290 (rest ?x1150)))
 (let (($x1318 (= ?x1288 ?x1290)))
 (let (($x1303 ((_ is stack ) ?x1150)))
 (let (($x1304 (= c_________ center-to-right)))
 (let (($x1305 (and $x1304 $x1303)))
 (let (($x1306 (= c_________ center-to-left)))
 (let (($x1307 (and $x1306 $x1303)))
 (let ((?x930 (left s_________)))
 (let ((?x1148 (top ?x930)))
 (let ((?x1289 (stack ?x1148 ?x1150)))
 (let (($x1317 (= ?x1288 ?x1289)))
 (let (($x1308 ((_ is stack ) ?x930)))
 (let (($x1309 (= c_________ left-to-right)))
 (let (($x1310 (and $x1309 $x1308)))
 (let (($x1340 (ite $x1310 $x1317 (ite $x1307 $x1318 (ite $x1305 $x1318 (ite $x1302 $x1326 (ite $x1300 $x1323 $x1326)))))))
 (let (($x1311 (= c_________ left-to-center)))
 (let (($x1312 (and $x1311 $x1308)))
 (ite $x1312 $x1326 $x1340)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1068 (left s__________)))
 (let ((?x1206 (left s___________)))
 (let (($x1466 (= ?x1206 ?x1068)))
 (let ((?x1102 (right s__________)))
 (let ((?x1433 (top ?x1102)))
 (let ((?x1434 (stack ?x1433 ?x1068)))
 (let (($x1460 (= ?x1206 ?x1434)))
 (let (($x1436 ((_ is stack ) ?x1102)))
 (let (($x1439 (= c__________ right-to-left)))
 (let (($x1440 (and $x1439 $x1436)))
 (let ((?x1288 (center s__________)))
 (let (($x1441 ((_ is stack ) ?x1288)))
 (let (($x1442 (= c__________ center-to-right)))
 (let (($x1443 (and $x1442 $x1441)))
 (let ((?x1429 (top ?x1288)))
 (let ((?x1430 (stack ?x1429 ?x1068)))
 (let (($x1457 (= ?x1206 ?x1430)))
 (let (($x1444 (= c__________ center-to-left)))
 (let (($x1445 (and $x1444 $x1441)))
 (let ((?x1239 (rest ?x1068)))
 (let (($x1453 (= ?x1206 ?x1239)))
 (let (($x1446 ((_ is stack ) ?x1068)))
 (let (($x1447 (= c__________ left-to-right)))
 (let (($x1448 (and $x1447 $x1446)))
 (let (($x1449 (= c__________ left-to-center)))
 (let (($x1450 (and $x1449 $x1446)))
 (ite $x1450 $x1453 (ite $x1448 $x1453 (ite $x1445 $x1457 (ite $x1443 $x1466 (ite $x1440 $x1460 $x1466))))))))))))))))))))))))))))))))
(assert
 (let ((?x1102 (right s__________)))
 (let ((?x1240 (right s___________)))
 (let (($x1462 (= ?x1240 ?x1102)))
 (let ((?x1432 (rest ?x1102)))
 (let (($x1459 (= ?x1240 ?x1432)))
 (let (($x1436 ((_ is stack ) ?x1102)))
 (let (($x1437 (= c__________ right-to-center)))
 (let (($x1438 (and $x1437 $x1436)))
 (let (($x1439 (= c__________ right-to-left)))
 (let (($x1440 (and $x1439 $x1436)))
 (let ((?x1288 (center s__________)))
 (let ((?x1429 (top ?x1288)))
 (let ((?x1431 (stack ?x1429 ?x1102)))
 (let (($x1458 (= ?x1240 ?x1431)))
 (let (($x1441 ((_ is stack ) ?x1288)))
 (let (($x1442 (= c__________ center-to-right)))
 (let (($x1443 (and $x1442 $x1441)))
 (let (($x1444 (= c__________ center-to-left)))
 (let (($x1445 (and $x1444 $x1441)))
 (let ((?x1068 (left s__________)))
 (let (($x1446 ((_ is stack ) ?x1068)))
 (let (($x1447 (= c__________ left-to-right)))
 (let (($x1448 (and $x1447 $x1446)))
 (let (($x1479 (ite $x1448 $x1462 (ite $x1445 $x1462 (ite $x1443 $x1458 (ite $x1440 $x1459 (ite $x1438 $x1459 $x1462)))))))
 (let ((?x1286 (top ?x1068)))
 (let ((?x1425 (stack ?x1286 ?x1102)))
 (let (($x1454 (= ?x1240 ?x1425)))
 (let (($x1449 (= c__________ left-to-center)))
 (let (($x1450 (and $x1449 $x1446)))
 (ite $x1450 $x1454 $x1479)))))))))))))))))))))))))))))))
(assert
 (let ((?x1288 (center s__________)))
 (let ((?x1426 (center s___________)))
 (let (($x1464 (= ?x1426 ?x1288)))
 (let ((?x1102 (right s__________)))
 (let ((?x1433 (top ?x1102)))
 (let ((?x1435 (stack ?x1433 ?x1288)))
 (let (($x1461 (= ?x1426 ?x1435)))
 (let (($x1436 ((_ is stack ) ?x1102)))
 (let (($x1437 (= c__________ right-to-center)))
 (let (($x1438 (and $x1437 $x1436)))
 (let (($x1439 (= c__________ right-to-left)))
 (let (($x1440 (and $x1439 $x1436)))
 (let ((?x1428 (rest ?x1288)))
 (let (($x1456 (= ?x1426 ?x1428)))
 (let (($x1441 ((_ is stack ) ?x1288)))
 (let (($x1442 (= c__________ center-to-right)))
 (let (($x1443 (and $x1442 $x1441)))
 (let (($x1444 (= c__________ center-to-left)))
 (let (($x1445 (and $x1444 $x1441)))
 (let ((?x1068 (left s__________)))
 (let ((?x1286 (top ?x1068)))
 (let ((?x1427 (stack ?x1286 ?x1288)))
 (let (($x1455 (= ?x1426 ?x1427)))
 (let (($x1446 ((_ is stack ) ?x1068)))
 (let (($x1447 (= c__________ left-to-right)))
 (let (($x1448 (and $x1447 $x1446)))
 (let (($x1478 (ite $x1448 $x1455 (ite $x1445 $x1456 (ite $x1443 $x1456 (ite $x1440 $x1464 (ite $x1438 $x1461 $x1464)))))))
 (let (($x1449 (= c__________ left-to-center)))
 (let (($x1450 (and $x1449 $x1446)))
 (ite $x1450 $x1464 $x1478)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1206 (left s___________)))
 (let ((?x1344 (left s____________)))
 (let (($x1604 (= ?x1344 ?x1206)))
 (let ((?x1240 (right s___________)))
 (let ((?x1571 (top ?x1240)))
 (let ((?x1572 (stack ?x1571 ?x1206)))
 (let (($x1598 (= ?x1344 ?x1572)))
 (let (($x1574 ((_ is stack ) ?x1240)))
 (let (($x1577 (= c___________ right-to-left)))
 (let (($x1578 (and $x1577 $x1574)))
 (let ((?x1426 (center s___________)))
 (let (($x1579 ((_ is stack ) ?x1426)))
 (let (($x1580 (= c___________ center-to-right)))
 (let (($x1581 (and $x1580 $x1579)))
 (let ((?x1567 (top ?x1426)))
 (let ((?x1568 (stack ?x1567 ?x1206)))
 (let (($x1595 (= ?x1344 ?x1568)))
 (let (($x1582 (= c___________ center-to-left)))
 (let (($x1583 (and $x1582 $x1579)))
 (let ((?x1377 (rest ?x1206)))
 (let (($x1591 (= ?x1344 ?x1377)))
 (let (($x1584 ((_ is stack ) ?x1206)))
 (let (($x1585 (= c___________ left-to-right)))
 (let (($x1586 (and $x1585 $x1584)))
 (let (($x1587 (= c___________ left-to-center)))
 (let (($x1588 (and $x1587 $x1584)))
 (ite $x1588 $x1591 (ite $x1586 $x1591 (ite $x1583 $x1595 (ite $x1581 $x1604 (ite $x1578 $x1598 $x1604))))))))))))))))))))))))))))))))
(assert
 (let ((?x1240 (right s___________)))
 (let ((?x1378 (right s____________)))
 (let (($x1600 (= ?x1378 ?x1240)))
 (let ((?x1570 (rest ?x1240)))
 (let (($x1597 (= ?x1378 ?x1570)))
 (let (($x1574 ((_ is stack ) ?x1240)))
 (let (($x1575 (= c___________ right-to-center)))
 (let (($x1576 (and $x1575 $x1574)))
 (let (($x1577 (= c___________ right-to-left)))
 (let (($x1578 (and $x1577 $x1574)))
 (let ((?x1426 (center s___________)))
 (let ((?x1567 (top ?x1426)))
 (let ((?x1569 (stack ?x1567 ?x1240)))
 (let (($x1596 (= ?x1378 ?x1569)))
 (let (($x1579 ((_ is stack ) ?x1426)))
 (let (($x1580 (= c___________ center-to-right)))
 (let (($x1581 (and $x1580 $x1579)))
 (let (($x1582 (= c___________ center-to-left)))
 (let (($x1583 (and $x1582 $x1579)))
 (let ((?x1206 (left s___________)))
 (let (($x1584 ((_ is stack ) ?x1206)))
 (let (($x1585 (= c___________ left-to-right)))
 (let (($x1586 (and $x1585 $x1584)))
 (let (($x1617 (ite $x1586 $x1600 (ite $x1583 $x1600 (ite $x1581 $x1596 (ite $x1578 $x1597 (ite $x1576 $x1597 $x1600)))))))
 (let ((?x1424 (top ?x1206)))
 (let ((?x1563 (stack ?x1424 ?x1240)))
 (let (($x1592 (= ?x1378 ?x1563)))
 (let (($x1587 (= c___________ left-to-center)))
 (let (($x1588 (and $x1587 $x1584)))
 (ite $x1588 $x1592 $x1617)))))))))))))))))))))))))))))))
(assert
 (let ((?x1426 (center s___________)))
 (let ((?x1564 (center s____________)))
 (let (($x1602 (= ?x1564 ?x1426)))
 (let ((?x1240 (right s___________)))
 (let ((?x1571 (top ?x1240)))
 (let ((?x1573 (stack ?x1571 ?x1426)))
 (let (($x1599 (= ?x1564 ?x1573)))
 (let (($x1574 ((_ is stack ) ?x1240)))
 (let (($x1575 (= c___________ right-to-center)))
 (let (($x1576 (and $x1575 $x1574)))
 (let (($x1577 (= c___________ right-to-left)))
 (let (($x1578 (and $x1577 $x1574)))
 (let ((?x1566 (rest ?x1426)))
 (let (($x1594 (= ?x1564 ?x1566)))
 (let (($x1579 ((_ is stack ) ?x1426)))
 (let (($x1580 (= c___________ center-to-right)))
 (let (($x1581 (and $x1580 $x1579)))
 (let (($x1582 (= c___________ center-to-left)))
 (let (($x1583 (and $x1582 $x1579)))
 (let ((?x1206 (left s___________)))
 (let ((?x1424 (top ?x1206)))
 (let ((?x1565 (stack ?x1424 ?x1426)))
 (let (($x1593 (= ?x1564 ?x1565)))
 (let (($x1584 ((_ is stack ) ?x1206)))
 (let (($x1585 (= c___________ left-to-right)))
 (let (($x1586 (and $x1585 $x1584)))
 (let (($x1616 (ite $x1586 $x1593 (ite $x1583 $x1594 (ite $x1581 $x1594 (ite $x1578 $x1602 (ite $x1576 $x1599 $x1602)))))))
 (let (($x1587 (= c___________ left-to-center)))
 (let (($x1588 (and $x1587 $x1584)))
 (ite $x1588 $x1602 $x1616)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1344 (left s____________)))
 (let ((?x1482 (left s_____________)))
 (let (($x1742 (= ?x1482 ?x1344)))
 (let ((?x1378 (right s____________)))
 (let ((?x1709 (top ?x1378)))
 (let ((?x1710 (stack ?x1709 ?x1344)))
 (let (($x1736 (= ?x1482 ?x1710)))
 (let (($x1712 ((_ is stack ) ?x1378)))
 (let (($x1715 (= c____________ right-to-left)))
 (let (($x1716 (and $x1715 $x1712)))
 (let ((?x1564 (center s____________)))
 (let (($x1717 ((_ is stack ) ?x1564)))
 (let (($x1718 (= c____________ center-to-right)))
 (let (($x1719 (and $x1718 $x1717)))
 (let ((?x1705 (top ?x1564)))
 (let ((?x1706 (stack ?x1705 ?x1344)))
 (let (($x1733 (= ?x1482 ?x1706)))
 (let (($x1720 (= c____________ center-to-left)))
 (let (($x1721 (and $x1720 $x1717)))
 (let ((?x1515 (rest ?x1344)))
 (let (($x1729 (= ?x1482 ?x1515)))
 (let (($x1722 ((_ is stack ) ?x1344)))
 (let (($x1723 (= c____________ left-to-right)))
 (let (($x1724 (and $x1723 $x1722)))
 (let (($x1725 (= c____________ left-to-center)))
 (let (($x1726 (and $x1725 $x1722)))
 (ite $x1726 $x1729 (ite $x1724 $x1729 (ite $x1721 $x1733 (ite $x1719 $x1742 (ite $x1716 $x1736 $x1742))))))))))))))))))))))))))))))))
(assert
 (let ((?x1378 (right s____________)))
 (let ((?x1516 (right s_____________)))
 (let (($x1738 (= ?x1516 ?x1378)))
 (let ((?x1708 (rest ?x1378)))
 (let (($x1735 (= ?x1516 ?x1708)))
 (let (($x1712 ((_ is stack ) ?x1378)))
 (let (($x1713 (= c____________ right-to-center)))
 (let (($x1714 (and $x1713 $x1712)))
 (let (($x1715 (= c____________ right-to-left)))
 (let (($x1716 (and $x1715 $x1712)))
 (let ((?x1564 (center s____________)))
 (let ((?x1705 (top ?x1564)))
 (let ((?x1707 (stack ?x1705 ?x1378)))
 (let (($x1734 (= ?x1516 ?x1707)))
 (let (($x1717 ((_ is stack ) ?x1564)))
 (let (($x1718 (= c____________ center-to-right)))
 (let (($x1719 (and $x1718 $x1717)))
 (let (($x1720 (= c____________ center-to-left)))
 (let (($x1721 (and $x1720 $x1717)))
 (let ((?x1344 (left s____________)))
 (let (($x1722 ((_ is stack ) ?x1344)))
 (let (($x1723 (= c____________ left-to-right)))
 (let (($x1724 (and $x1723 $x1722)))
 (let (($x1755 (ite $x1724 $x1738 (ite $x1721 $x1738 (ite $x1719 $x1734 (ite $x1716 $x1735 (ite $x1714 $x1735 $x1738)))))))
 (let ((?x1562 (top ?x1344)))
 (let ((?x1701 (stack ?x1562 ?x1378)))
 (let (($x1730 (= ?x1516 ?x1701)))
 (let (($x1725 (= c____________ left-to-center)))
 (let (($x1726 (and $x1725 $x1722)))
 (ite $x1726 $x1730 $x1755)))))))))))))))))))))))))))))))
(assert
 (let ((?x1564 (center s____________)))
 (let ((?x1702 (center s_____________)))
 (let (($x1740 (= ?x1702 ?x1564)))
 (let ((?x1378 (right s____________)))
 (let ((?x1709 (top ?x1378)))
 (let ((?x1711 (stack ?x1709 ?x1564)))
 (let (($x1737 (= ?x1702 ?x1711)))
 (let (($x1712 ((_ is stack ) ?x1378)))
 (let (($x1713 (= c____________ right-to-center)))
 (let (($x1714 (and $x1713 $x1712)))
 (let (($x1715 (= c____________ right-to-left)))
 (let (($x1716 (and $x1715 $x1712)))
 (let ((?x1704 (rest ?x1564)))
 (let (($x1732 (= ?x1702 ?x1704)))
 (let (($x1717 ((_ is stack ) ?x1564)))
 (let (($x1718 (= c____________ center-to-right)))
 (let (($x1719 (and $x1718 $x1717)))
 (let (($x1720 (= c____________ center-to-left)))
 (let (($x1721 (and $x1720 $x1717)))
 (let ((?x1344 (left s____________)))
 (let ((?x1562 (top ?x1344)))
 (let ((?x1703 (stack ?x1562 ?x1564)))
 (let (($x1731 (= ?x1702 ?x1703)))
 (let (($x1722 ((_ is stack ) ?x1344)))
 (let (($x1723 (= c____________ left-to-right)))
 (let (($x1724 (and $x1723 $x1722)))
 (let (($x1754 (ite $x1724 $x1731 (ite $x1721 $x1732 (ite $x1719 $x1732 (ite $x1716 $x1740 (ite $x1714 $x1737 $x1740)))))))
 (let (($x1725 (= c____________ left-to-center)))
 (let (($x1726 (and $x1725 $x1722)))
 (ite $x1726 $x1740 $x1754)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1482 (left s_____________)))
 (let ((?x1620 (left s______________)))
 (let (($x1880 (= ?x1620 ?x1482)))
 (let ((?x1516 (right s_____________)))
 (let ((?x1847 (top ?x1516)))
 (let ((?x1848 (stack ?x1847 ?x1482)))
 (let (($x1874 (= ?x1620 ?x1848)))
 (let (($x1850 ((_ is stack ) ?x1516)))
 (let (($x1853 (= c_____________ right-to-left)))
 (let (($x1854 (and $x1853 $x1850)))
 (let ((?x1702 (center s_____________)))
 (let (($x1855 ((_ is stack ) ?x1702)))
 (let (($x1856 (= c_____________ center-to-right)))
 (let (($x1857 (and $x1856 $x1855)))
 (let ((?x1843 (top ?x1702)))
 (let ((?x1844 (stack ?x1843 ?x1482)))
 (let (($x1871 (= ?x1620 ?x1844)))
 (let (($x1858 (= c_____________ center-to-left)))
 (let (($x1859 (and $x1858 $x1855)))
 (let ((?x1653 (rest ?x1482)))
 (let (($x1867 (= ?x1620 ?x1653)))
 (let (($x1860 ((_ is stack ) ?x1482)))
 (let (($x1861 (= c_____________ left-to-right)))
 (let (($x1862 (and $x1861 $x1860)))
 (let (($x1863 (= c_____________ left-to-center)))
 (let (($x1864 (and $x1863 $x1860)))
 (ite $x1864 $x1867 (ite $x1862 $x1867 (ite $x1859 $x1871 (ite $x1857 $x1880 (ite $x1854 $x1874 $x1880))))))))))))))))))))))))))))))))
(assert
 (let ((?x1516 (right s_____________)))
 (let ((?x1654 (right s______________)))
 (let (($x1876 (= ?x1654 ?x1516)))
 (let ((?x1846 (rest ?x1516)))
 (let (($x1873 (= ?x1654 ?x1846)))
 (let (($x1850 ((_ is stack ) ?x1516)))
 (let (($x1851 (= c_____________ right-to-center)))
 (let (($x1852 (and $x1851 $x1850)))
 (let (($x1853 (= c_____________ right-to-left)))
 (let (($x1854 (and $x1853 $x1850)))
 (let ((?x1702 (center s_____________)))
 (let ((?x1843 (top ?x1702)))
 (let ((?x1845 (stack ?x1843 ?x1516)))
 (let (($x1872 (= ?x1654 ?x1845)))
 (let (($x1855 ((_ is stack ) ?x1702)))
 (let (($x1856 (= c_____________ center-to-right)))
 (let (($x1857 (and $x1856 $x1855)))
 (let (($x1858 (= c_____________ center-to-left)))
 (let (($x1859 (and $x1858 $x1855)))
 (let ((?x1482 (left s_____________)))
 (let (($x1860 ((_ is stack ) ?x1482)))
 (let (($x1861 (= c_____________ left-to-right)))
 (let (($x1862 (and $x1861 $x1860)))
 (let (($x1893 (ite $x1862 $x1876 (ite $x1859 $x1876 (ite $x1857 $x1872 (ite $x1854 $x1873 (ite $x1852 $x1873 $x1876)))))))
 (let ((?x1700 (top ?x1482)))
 (let ((?x1839 (stack ?x1700 ?x1516)))
 (let (($x1868 (= ?x1654 ?x1839)))
 (let (($x1863 (= c_____________ left-to-center)))
 (let (($x1864 (and $x1863 $x1860)))
 (ite $x1864 $x1868 $x1893)))))))))))))))))))))))))))))))
(assert
 (let ((?x1702 (center s_____________)))
 (let ((?x1840 (center s______________)))
 (let (($x1878 (= ?x1840 ?x1702)))
 (let ((?x1516 (right s_____________)))
 (let ((?x1847 (top ?x1516)))
 (let ((?x1849 (stack ?x1847 ?x1702)))
 (let (($x1875 (= ?x1840 ?x1849)))
 (let (($x1850 ((_ is stack ) ?x1516)))
 (let (($x1851 (= c_____________ right-to-center)))
 (let (($x1852 (and $x1851 $x1850)))
 (let (($x1853 (= c_____________ right-to-left)))
 (let (($x1854 (and $x1853 $x1850)))
 (let ((?x1842 (rest ?x1702)))
 (let (($x1870 (= ?x1840 ?x1842)))
 (let (($x1855 ((_ is stack ) ?x1702)))
 (let (($x1856 (= c_____________ center-to-right)))
 (let (($x1857 (and $x1856 $x1855)))
 (let (($x1858 (= c_____________ center-to-left)))
 (let (($x1859 (and $x1858 $x1855)))
 (let ((?x1482 (left s_____________)))
 (let ((?x1700 (top ?x1482)))
 (let ((?x1841 (stack ?x1700 ?x1702)))
 (let (($x1869 (= ?x1840 ?x1841)))
 (let (($x1860 ((_ is stack ) ?x1482)))
 (let (($x1861 (= c_____________ left-to-right)))
 (let (($x1862 (and $x1861 $x1860)))
 (let (($x1892 (ite $x1862 $x1869 (ite $x1859 $x1870 (ite $x1857 $x1870 (ite $x1854 $x1878 (ite $x1852 $x1875 $x1878)))))))
 (let (($x1863 (= c_____________ left-to-center)))
 (let (($x1864 (and $x1863 $x1860)))
 (ite $x1864 $x1878 $x1892)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1620 (left s______________)))
 (let ((?x1758 (left s_______________)))
 (let (($x2018 (= ?x1758 ?x1620)))
 (let ((?x1654 (right s______________)))
 (let ((?x1985 (top ?x1654)))
 (let ((?x1986 (stack ?x1985 ?x1620)))
 (let (($x2012 (= ?x1758 ?x1986)))
 (let (($x1988 ((_ is stack ) ?x1654)))
 (let (($x1991 (= c______________ right-to-left)))
 (let (($x1992 (and $x1991 $x1988)))
 (let ((?x1840 (center s______________)))
 (let (($x1993 ((_ is stack ) ?x1840)))
 (let (($x1994 (= c______________ center-to-right)))
 (let (($x1995 (and $x1994 $x1993)))
 (let ((?x1981 (top ?x1840)))
 (let ((?x1982 (stack ?x1981 ?x1620)))
 (let (($x2009 (= ?x1758 ?x1982)))
 (let (($x1996 (= c______________ center-to-left)))
 (let (($x1997 (and $x1996 $x1993)))
 (let ((?x1791 (rest ?x1620)))
 (let (($x2005 (= ?x1758 ?x1791)))
 (let (($x1998 ((_ is stack ) ?x1620)))
 (let (($x1999 (= c______________ left-to-right)))
 (let (($x2000 (and $x1999 $x1998)))
 (let (($x2001 (= c______________ left-to-center)))
 (let (($x2002 (and $x2001 $x1998)))
 (ite $x2002 $x2005 (ite $x2000 $x2005 (ite $x1997 $x2009 (ite $x1995 $x2018 (ite $x1992 $x2012 $x2018))))))))))))))))))))))))))))))))
(assert
 (let ((?x1654 (right s______________)))
 (let ((?x1792 (right s_______________)))
 (let (($x2014 (= ?x1792 ?x1654)))
 (let ((?x1984 (rest ?x1654)))
 (let (($x2011 (= ?x1792 ?x1984)))
 (let (($x1988 ((_ is stack ) ?x1654)))
 (let (($x1989 (= c______________ right-to-center)))
 (let (($x1990 (and $x1989 $x1988)))
 (let (($x1991 (= c______________ right-to-left)))
 (let (($x1992 (and $x1991 $x1988)))
 (let ((?x1840 (center s______________)))
 (let ((?x1981 (top ?x1840)))
 (let ((?x1983 (stack ?x1981 ?x1654)))
 (let (($x2010 (= ?x1792 ?x1983)))
 (let (($x1993 ((_ is stack ) ?x1840)))
 (let (($x1994 (= c______________ center-to-right)))
 (let (($x1995 (and $x1994 $x1993)))
 (let (($x1996 (= c______________ center-to-left)))
 (let (($x1997 (and $x1996 $x1993)))
 (let ((?x1620 (left s______________)))
 (let (($x1998 ((_ is stack ) ?x1620)))
 (let (($x1999 (= c______________ left-to-right)))
 (let (($x2000 (and $x1999 $x1998)))
 (let (($x2031 (ite $x2000 $x2014 (ite $x1997 $x2014 (ite $x1995 $x2010 (ite $x1992 $x2011 (ite $x1990 $x2011 $x2014)))))))
 (let ((?x1838 (top ?x1620)))
 (let ((?x1977 (stack ?x1838 ?x1654)))
 (let (($x2006 (= ?x1792 ?x1977)))
 (let (($x2001 (= c______________ left-to-center)))
 (let (($x2002 (and $x2001 $x1998)))
 (ite $x2002 $x2006 $x2031)))))))))))))))))))))))))))))))
(assert
 (let ((?x1840 (center s______________)))
 (let ((?x1978 (center s_______________)))
 (let (($x2016 (= ?x1978 ?x1840)))
 (let ((?x1654 (right s______________)))
 (let ((?x1985 (top ?x1654)))
 (let ((?x1987 (stack ?x1985 ?x1840)))
 (let (($x2013 (= ?x1978 ?x1987)))
 (let (($x1988 ((_ is stack ) ?x1654)))
 (let (($x1989 (= c______________ right-to-center)))
 (let (($x1990 (and $x1989 $x1988)))
 (let (($x1991 (= c______________ right-to-left)))
 (let (($x1992 (and $x1991 $x1988)))
 (let ((?x1980 (rest ?x1840)))
 (let (($x2008 (= ?x1978 ?x1980)))
 (let (($x1993 ((_ is stack ) ?x1840)))
 (let (($x1994 (= c______________ center-to-right)))
 (let (($x1995 (and $x1994 $x1993)))
 (let (($x1996 (= c______________ center-to-left)))
 (let (($x1997 (and $x1996 $x1993)))
 (let ((?x1620 (left s______________)))
 (let ((?x1838 (top ?x1620)))
 (let ((?x1979 (stack ?x1838 ?x1840)))
 (let (($x2007 (= ?x1978 ?x1979)))
 (let (($x1998 ((_ is stack ) ?x1620)))
 (let (($x1999 (= c______________ left-to-right)))
 (let (($x2000 (and $x1999 $x1998)))
 (let (($x2030 (ite $x2000 $x2007 (ite $x1997 $x2008 (ite $x1995 $x2008 (ite $x1992 $x2016 (ite $x1990 $x2013 $x2016)))))))
 (let (($x2001 (= c______________ left-to-center)))
 (let (($x2002 (and $x2001 $x1998)))
 (ite $x2002 $x2016 $x2030)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1758 (left s_______________)))
 (let ((?x1896 (left s________________)))
 (let (($x2156 (= ?x1896 ?x1758)))
 (let ((?x1792 (right s_______________)))
 (let ((?x2123 (top ?x1792)))
 (let ((?x2124 (stack ?x2123 ?x1758)))
 (let (($x2150 (= ?x1896 ?x2124)))
 (let (($x2126 ((_ is stack ) ?x1792)))
 (let (($x2129 (= c_______________ right-to-left)))
 (let (($x2130 (and $x2129 $x2126)))
 (let ((?x1978 (center s_______________)))
 (let (($x2131 ((_ is stack ) ?x1978)))
 (let (($x2132 (= c_______________ center-to-right)))
 (let (($x2133 (and $x2132 $x2131)))
 (let ((?x2119 (top ?x1978)))
 (let ((?x2120 (stack ?x2119 ?x1758)))
 (let (($x2147 (= ?x1896 ?x2120)))
 (let (($x2134 (= c_______________ center-to-left)))
 (let (($x2135 (and $x2134 $x2131)))
 (let ((?x1929 (rest ?x1758)))
 (let (($x2143 (= ?x1896 ?x1929)))
 (let (($x2136 ((_ is stack ) ?x1758)))
 (let (($x2137 (= c_______________ left-to-right)))
 (let (($x2138 (and $x2137 $x2136)))
 (let (($x2139 (= c_______________ left-to-center)))
 (let (($x2140 (and $x2139 $x2136)))
 (ite $x2140 $x2143 (ite $x2138 $x2143 (ite $x2135 $x2147 (ite $x2133 $x2156 (ite $x2130 $x2150 $x2156))))))))))))))))))))))))))))))))
(assert
 (let ((?x1792 (right s_______________)))
 (let ((?x1930 (right s________________)))
 (let (($x2152 (= ?x1930 ?x1792)))
 (let ((?x2122 (rest ?x1792)))
 (let (($x2149 (= ?x1930 ?x2122)))
 (let (($x2126 ((_ is stack ) ?x1792)))
 (let (($x2127 (= c_______________ right-to-center)))
 (let (($x2128 (and $x2127 $x2126)))
 (let (($x2129 (= c_______________ right-to-left)))
 (let (($x2130 (and $x2129 $x2126)))
 (let ((?x1978 (center s_______________)))
 (let ((?x2119 (top ?x1978)))
 (let ((?x2121 (stack ?x2119 ?x1792)))
 (let (($x2148 (= ?x1930 ?x2121)))
 (let (($x2131 ((_ is stack ) ?x1978)))
 (let (($x2132 (= c_______________ center-to-right)))
 (let (($x2133 (and $x2132 $x2131)))
 (let (($x2134 (= c_______________ center-to-left)))
 (let (($x2135 (and $x2134 $x2131)))
 (let ((?x1758 (left s_______________)))
 (let (($x2136 ((_ is stack ) ?x1758)))
 (let (($x2137 (= c_______________ left-to-right)))
 (let (($x2138 (and $x2137 $x2136)))
 (let (($x2169 (ite $x2138 $x2152 (ite $x2135 $x2152 (ite $x2133 $x2148 (ite $x2130 $x2149 (ite $x2128 $x2149 $x2152)))))))
 (let ((?x1976 (top ?x1758)))
 (let ((?x2115 (stack ?x1976 ?x1792)))
 (let (($x2144 (= ?x1930 ?x2115)))
 (let (($x2139 (= c_______________ left-to-center)))
 (let (($x2140 (and $x2139 $x2136)))
 (ite $x2140 $x2144 $x2169)))))))))))))))))))))))))))))))
(assert
 (let ((?x1978 (center s_______________)))
 (let ((?x2116 (center s________________)))
 (let (($x2154 (= ?x2116 ?x1978)))
 (let ((?x1792 (right s_______________)))
 (let ((?x2123 (top ?x1792)))
 (let ((?x2125 (stack ?x2123 ?x1978)))
 (let (($x2151 (= ?x2116 ?x2125)))
 (let (($x2126 ((_ is stack ) ?x1792)))
 (let (($x2127 (= c_______________ right-to-center)))
 (let (($x2128 (and $x2127 $x2126)))
 (let (($x2129 (= c_______________ right-to-left)))
 (let (($x2130 (and $x2129 $x2126)))
 (let ((?x2118 (rest ?x1978)))
 (let (($x2146 (= ?x2116 ?x2118)))
 (let (($x2131 ((_ is stack ) ?x1978)))
 (let (($x2132 (= c_______________ center-to-right)))
 (let (($x2133 (and $x2132 $x2131)))
 (let (($x2134 (= c_______________ center-to-left)))
 (let (($x2135 (and $x2134 $x2131)))
 (let ((?x1758 (left s_______________)))
 (let ((?x1976 (top ?x1758)))
 (let ((?x2117 (stack ?x1976 ?x1978)))
 (let (($x2145 (= ?x2116 ?x2117)))
 (let (($x2136 ((_ is stack ) ?x1758)))
 (let (($x2137 (= c_______________ left-to-right)))
 (let (($x2138 (and $x2137 $x2136)))
 (let (($x2168 (ite $x2138 $x2145 (ite $x2135 $x2146 (ite $x2133 $x2146 (ite $x2130 $x2154 (ite $x2128 $x2151 $x2154)))))))
 (let (($x2139 (= c_______________ left-to-center)))
 (let (($x2140 (and $x2139 $x2136)))
 (ite $x2140 $x2154 $x2168)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1896 (left s________________)))
 (let ((?x2034 (left s_________________)))
 (let (($x2294 (= ?x2034 ?x1896)))
 (let ((?x1930 (right s________________)))
 (let ((?x2261 (top ?x1930)))
 (let ((?x2262 (stack ?x2261 ?x1896)))
 (let (($x2288 (= ?x2034 ?x2262)))
 (let (($x2264 ((_ is stack ) ?x1930)))
 (let (($x2267 (= c________________ right-to-left)))
 (let (($x2268 (and $x2267 $x2264)))
 (let ((?x2116 (center s________________)))
 (let (($x2269 ((_ is stack ) ?x2116)))
 (let (($x2270 (= c________________ center-to-right)))
 (let (($x2271 (and $x2270 $x2269)))
 (let ((?x2257 (top ?x2116)))
 (let ((?x2258 (stack ?x2257 ?x1896)))
 (let (($x2285 (= ?x2034 ?x2258)))
 (let (($x2272 (= c________________ center-to-left)))
 (let (($x2273 (and $x2272 $x2269)))
 (let ((?x2067 (rest ?x1896)))
 (let (($x2281 (= ?x2034 ?x2067)))
 (let (($x2274 ((_ is stack ) ?x1896)))
 (let (($x2275 (= c________________ left-to-right)))
 (let (($x2276 (and $x2275 $x2274)))
 (let (($x2277 (= c________________ left-to-center)))
 (let (($x2278 (and $x2277 $x2274)))
 (ite $x2278 $x2281 (ite $x2276 $x2281 (ite $x2273 $x2285 (ite $x2271 $x2294 (ite $x2268 $x2288 $x2294))))))))))))))))))))))))))))))))
(assert
 (let ((?x1930 (right s________________)))
 (let ((?x2068 (right s_________________)))
 (let (($x2290 (= ?x2068 ?x1930)))
 (let ((?x2260 (rest ?x1930)))
 (let (($x2287 (= ?x2068 ?x2260)))
 (let (($x2264 ((_ is stack ) ?x1930)))
 (let (($x2265 (= c________________ right-to-center)))
 (let (($x2266 (and $x2265 $x2264)))
 (let (($x2267 (= c________________ right-to-left)))
 (let (($x2268 (and $x2267 $x2264)))
 (let ((?x2116 (center s________________)))
 (let ((?x2257 (top ?x2116)))
 (let ((?x2259 (stack ?x2257 ?x1930)))
 (let (($x2286 (= ?x2068 ?x2259)))
 (let (($x2269 ((_ is stack ) ?x2116)))
 (let (($x2270 (= c________________ center-to-right)))
 (let (($x2271 (and $x2270 $x2269)))
 (let (($x2272 (= c________________ center-to-left)))
 (let (($x2273 (and $x2272 $x2269)))
 (let ((?x1896 (left s________________)))
 (let (($x2274 ((_ is stack ) ?x1896)))
 (let (($x2275 (= c________________ left-to-right)))
 (let (($x2276 (and $x2275 $x2274)))
 (let (($x2307 (ite $x2276 $x2290 (ite $x2273 $x2290 (ite $x2271 $x2286 (ite $x2268 $x2287 (ite $x2266 $x2287 $x2290)))))))
 (let ((?x2114 (top ?x1896)))
 (let ((?x2253 (stack ?x2114 ?x1930)))
 (let (($x2282 (= ?x2068 ?x2253)))
 (let (($x2277 (= c________________ left-to-center)))
 (let (($x2278 (and $x2277 $x2274)))
 (ite $x2278 $x2282 $x2307)))))))))))))))))))))))))))))))
(assert
 (let ((?x2116 (center s________________)))
 (let ((?x2254 (center s_________________)))
 (let (($x2292 (= ?x2254 ?x2116)))
 (let ((?x1930 (right s________________)))
 (let ((?x2261 (top ?x1930)))
 (let ((?x2263 (stack ?x2261 ?x2116)))
 (let (($x2289 (= ?x2254 ?x2263)))
 (let (($x2264 ((_ is stack ) ?x1930)))
 (let (($x2265 (= c________________ right-to-center)))
 (let (($x2266 (and $x2265 $x2264)))
 (let (($x2267 (= c________________ right-to-left)))
 (let (($x2268 (and $x2267 $x2264)))
 (let ((?x2256 (rest ?x2116)))
 (let (($x2284 (= ?x2254 ?x2256)))
 (let (($x2269 ((_ is stack ) ?x2116)))
 (let (($x2270 (= c________________ center-to-right)))
 (let (($x2271 (and $x2270 $x2269)))
 (let (($x2272 (= c________________ center-to-left)))
 (let (($x2273 (and $x2272 $x2269)))
 (let ((?x1896 (left s________________)))
 (let ((?x2114 (top ?x1896)))
 (let ((?x2255 (stack ?x2114 ?x2116)))
 (let (($x2283 (= ?x2254 ?x2255)))
 (let (($x2274 ((_ is stack ) ?x1896)))
 (let (($x2275 (= c________________ left-to-right)))
 (let (($x2276 (and $x2275 $x2274)))
 (let (($x2306 (ite $x2276 $x2283 (ite $x2273 $x2284 (ite $x2271 $x2284 (ite $x2268 $x2292 (ite $x2266 $x2289 $x2292)))))))
 (let (($x2277 (= c________________ left-to-center)))
 (let (($x2278 (and $x2277 $x2274)))
 (ite $x2278 $x2292 $x2306)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2034 (left s_________________)))
 (let ((?x2172 (left s__________________)))
 (let (($x2432 (= ?x2172 ?x2034)))
 (let ((?x2068 (right s_________________)))
 (let ((?x2399 (top ?x2068)))
 (let ((?x2400 (stack ?x2399 ?x2034)))
 (let (($x2426 (= ?x2172 ?x2400)))
 (let (($x2402 ((_ is stack ) ?x2068)))
 (let (($x2405 (= c_________________ right-to-left)))
 (let (($x2406 (and $x2405 $x2402)))
 (let ((?x2254 (center s_________________)))
 (let (($x2407 ((_ is stack ) ?x2254)))
 (let (($x2408 (= c_________________ center-to-right)))
 (let (($x2409 (and $x2408 $x2407)))
 (let ((?x2395 (top ?x2254)))
 (let ((?x2396 (stack ?x2395 ?x2034)))
 (let (($x2423 (= ?x2172 ?x2396)))
 (let (($x2410 (= c_________________ center-to-left)))
 (let (($x2411 (and $x2410 $x2407)))
 (let ((?x2205 (rest ?x2034)))
 (let (($x2419 (= ?x2172 ?x2205)))
 (let (($x2412 ((_ is stack ) ?x2034)))
 (let (($x2413 (= c_________________ left-to-right)))
 (let (($x2414 (and $x2413 $x2412)))
 (let (($x2415 (= c_________________ left-to-center)))
 (let (($x2416 (and $x2415 $x2412)))
 (ite $x2416 $x2419 (ite $x2414 $x2419 (ite $x2411 $x2423 (ite $x2409 $x2432 (ite $x2406 $x2426 $x2432))))))))))))))))))))))))))))))))
(assert
 (let ((?x2068 (right s_________________)))
 (let ((?x2206 (right s__________________)))
 (let (($x2428 (= ?x2206 ?x2068)))
 (let ((?x2398 (rest ?x2068)))
 (let (($x2425 (= ?x2206 ?x2398)))
 (let (($x2402 ((_ is stack ) ?x2068)))
 (let (($x2403 (= c_________________ right-to-center)))
 (let (($x2404 (and $x2403 $x2402)))
 (let (($x2405 (= c_________________ right-to-left)))
 (let (($x2406 (and $x2405 $x2402)))
 (let ((?x2254 (center s_________________)))
 (let ((?x2395 (top ?x2254)))
 (let ((?x2397 (stack ?x2395 ?x2068)))
 (let (($x2424 (= ?x2206 ?x2397)))
 (let (($x2407 ((_ is stack ) ?x2254)))
 (let (($x2408 (= c_________________ center-to-right)))
 (let (($x2409 (and $x2408 $x2407)))
 (let (($x2410 (= c_________________ center-to-left)))
 (let (($x2411 (and $x2410 $x2407)))
 (let ((?x2034 (left s_________________)))
 (let (($x2412 ((_ is stack ) ?x2034)))
 (let (($x2413 (= c_________________ left-to-right)))
 (let (($x2414 (and $x2413 $x2412)))
 (let (($x2445 (ite $x2414 $x2428 (ite $x2411 $x2428 (ite $x2409 $x2424 (ite $x2406 $x2425 (ite $x2404 $x2425 $x2428)))))))
 (let ((?x2252 (top ?x2034)))
 (let ((?x2391 (stack ?x2252 ?x2068)))
 (let (($x2420 (= ?x2206 ?x2391)))
 (let (($x2415 (= c_________________ left-to-center)))
 (let (($x2416 (and $x2415 $x2412)))
 (ite $x2416 $x2420 $x2445)))))))))))))))))))))))))))))))
(assert
 (let ((?x2254 (center s_________________)))
 (let ((?x2392 (center s__________________)))
 (let (($x2430 (= ?x2392 ?x2254)))
 (let ((?x2068 (right s_________________)))
 (let ((?x2399 (top ?x2068)))
 (let ((?x2401 (stack ?x2399 ?x2254)))
 (let (($x2427 (= ?x2392 ?x2401)))
 (let (($x2402 ((_ is stack ) ?x2068)))
 (let (($x2403 (= c_________________ right-to-center)))
 (let (($x2404 (and $x2403 $x2402)))
 (let (($x2405 (= c_________________ right-to-left)))
 (let (($x2406 (and $x2405 $x2402)))
 (let ((?x2394 (rest ?x2254)))
 (let (($x2422 (= ?x2392 ?x2394)))
 (let (($x2407 ((_ is stack ) ?x2254)))
 (let (($x2408 (= c_________________ center-to-right)))
 (let (($x2409 (and $x2408 $x2407)))
 (let (($x2410 (= c_________________ center-to-left)))
 (let (($x2411 (and $x2410 $x2407)))
 (let ((?x2034 (left s_________________)))
 (let ((?x2252 (top ?x2034)))
 (let ((?x2393 (stack ?x2252 ?x2254)))
 (let (($x2421 (= ?x2392 ?x2393)))
 (let (($x2412 ((_ is stack ) ?x2034)))
 (let (($x2413 (= c_________________ left-to-right)))
 (let (($x2414 (and $x2413 $x2412)))
 (let (($x2444 (ite $x2414 $x2421 (ite $x2411 $x2422 (ite $x2409 $x2422 (ite $x2406 $x2430 (ite $x2404 $x2427 $x2430)))))))
 (let (($x2415 (= c_________________ left-to-center)))
 (let (($x2416 (and $x2415 $x2412)))
 (ite $x2416 $x2430 $x2444)))))))))))))))))))))))))))))))
(assert
 (let ((?x41 (stack E (stack B empty))))
 (let ((?x2206 (right s__________________)))
 (let (($x2448 (= ?x2206 ?x41)))
 (let ((?x39 (stack C (stack G (stack H empty)))))
 (let ((?x2392 (center s__________________)))
 (let (($x2479 (= ?x2392 ?x39)))
 (let ((?x36 (stack F (stack I (stack A (stack D (stack J empty)))))))
 (let ((?x2172 (left s__________________)))
 (let (($x2480 (= ?x2172 ?x36)))
 (let (($x2482 (not (and $x2480 $x2479 $x2448))))
 (not $x2482))))))))))))
(check-sat)
(exit)
