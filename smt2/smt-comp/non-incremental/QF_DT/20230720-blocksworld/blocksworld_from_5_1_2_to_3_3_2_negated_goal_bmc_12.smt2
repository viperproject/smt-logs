(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H 0)) (((A) (B) (C) (D) (E) (F) (G) (H))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x20 (stack F empty)))
 (let ((?x21 (stack B ?x20)))
 (let ((?x22 (stack G ?x21)))
 (let ((?x23 (stack H ?x22)))
 (let ((?x24 (stack D ?x23)))
 (let ((?x82 (left s_tmp_)))
 (= ?x82 ?x24))))))))
(assert
 (let ((?x25 (stack E empty)))
 (let ((?x85 (center s_tmp__)))
 (= ?x85 ?x25))))
(assert
 (let ((?x26 (stack A empty)))
 (let ((?x27 (stack C ?x26)))
 (let ((?x88 (right s_tmp___)))
 (= ?x88 ?x27)))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x115 (left s_tmp__)))
 (= (left s_tmp___) ?x115)))
(assert
 (let ((?x85 (center s_tmp__)))
 (= (center s_tmp___) ?x85)))
(assert
 (let ((?x119 (center s_tmp_)))
 (= ?x119 (center s_tmp))))
(assert
 (let ((?x122 (right s_tmp_)))
 (= ?x122 (right s_tmp))))
(assert
 (let ((?x82 (left s_tmp_)))
 (let ((?x115 (left s_tmp__)))
 (= ?x115 ?x82))))
(assert
 (let ((?x122 (right s_tmp_)))
 (let ((?x126 (right s_tmp__)))
 (= ?x126 ?x122))))
(assert
 (= c__ c!1))
(assert
 (let ((?x59 (left s_)))
 (let ((?x194 (left s__)))
 (let (($x239 (= ?x194 ?x59)))
 (let ((?x62 (right s_)))
 (let (($x209 ((_ is stack ) ?x62)))
 (let (($x212 (= c_ right-to-left)))
 (let (($x213 (and $x212 $x209)))
 (let ((?x64 (center s_)))
 (let (($x214 ((_ is stack ) ?x64)))
 (let (($x215 (= c_ center-to-right)))
 (let (($x216 (and $x215 $x214)))
 (let (($x217 (= c_ center-to-left)))
 (let (($x218 (and $x217 $x214)))
 (let (($x248 (ite $x218 (= ?x194 (stack (top ?x64) ?x59)) (ite $x216 $x239 (ite $x213 (= ?x194 (stack (top ?x62) ?x59)) $x239)))))
 (let (($x226 (= ?x194 (rest ?x59))))
 (let (($x219 ((_ is stack ) ?x59)))
 (let (($x220 (= c_ left-to-right)))
 (let (($x221 (and $x220 $x219)))
 (let (($x222 (= c_ left-to-center)))
 (let (($x223 (and $x222 $x219)))
 (ite $x223 $x226 (ite $x221 $x226 $x248)))))))))))))))))))))))
(assert
 (let ((?x62 (right s_)))
 (let ((?x202 (right s__)))
 (let (($x235 (= ?x202 ?x62)))
 (let (($x232 (= ?x202 (rest ?x62))))
 (let (($x209 ((_ is stack ) ?x62)))
 (let (($x210 (= c_ right-to-center)))
 (let (($x211 (and $x210 $x209)))
 (let (($x212 (= c_ right-to-left)))
 (let (($x213 (and $x212 $x209)))
 (let ((?x64 (center s_)))
 (let (($x214 ((_ is stack ) ?x64)))
 (let (($x215 (= c_ center-to-right)))
 (let (($x216 (and $x215 $x214)))
 (let (($x245 (ite $x216 (= ?x202 (stack (top ?x64) ?x62)) (ite $x213 $x232 (ite $x211 $x232 $x235)))))
 (let (($x217 (= c_ center-to-left)))
 (let (($x218 (and $x217 $x214)))
 (let ((?x59 (left s_)))
 (let (($x219 ((_ is stack ) ?x59)))
 (let (($x220 (= c_ left-to-right)))
 (let (($x221 (and $x220 $x219)))
 (let (($x222 (= c_ left-to-center)))
 (let (($x223 (and $x222 $x219)))
 (ite $x223 (= ?x202 (stack (top ?x59) ?x62)) (ite $x221 $x235 (ite $x218 $x235 $x245))))))))))))))))))))))))))
(assert
 (let ((?x64 (center s_)))
 (let ((?x205 (center s__)))
 (let (($x237 (= ?x205 ?x64)))
 (let ((?x62 (right s_)))
 (let (($x209 ((_ is stack ) ?x62)))
 (let (($x210 (= c_ right-to-center)))
 (let (($x211 (and $x210 $x209)))
 (let (($x212 (= c_ right-to-left)))
 (let (($x213 (and $x212 $x209)))
 (let (($x229 (= ?x205 (rest ?x64))))
 (let (($x214 ((_ is stack ) ?x64)))
 (let (($x215 (= c_ center-to-right)))
 (let (($x216 (and $x215 $x214)))
 (let (($x244 (ite $x216 $x229 (ite $x213 $x237 (ite $x211 (= ?x205 (stack (top ?x62) ?x64)) $x237)))))
 (let (($x217 (= c_ center-to-left)))
 (let (($x218 (and $x217 $x214)))
 (let ((?x59 (left s_)))
 (let (($x219 ((_ is stack ) ?x59)))
 (let (($x220 (= c_ left-to-right)))
 (let (($x221 (and $x220 $x219)))
 (let (($x222 (= c_ left-to-center)))
 (let (($x223 (and $x222 $x219)))
 (ite $x223 $x237 (ite $x221 (= ?x205 (stack (top ?x59) ?x64)) (ite $x218 $x229 $x244))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x194 (left s__)))
 (let ((?x129 (left s___)))
 (let (($x368 (= ?x129 ?x194)))
 (let ((?x202 (right s__)))
 (let ((?x335 (top ?x202)))
 (let ((?x336 (stack ?x335 ?x194)))
 (let (($x362 (= ?x129 ?x336)))
 (let (($x338 ((_ is stack ) ?x202)))
 (let (($x341 (= c__ right-to-left)))
 (let (($x342 (and $x341 $x338)))
 (let ((?x205 (center s__)))
 (let (($x343 ((_ is stack ) ?x205)))
 (let (($x344 (= c__ center-to-right)))
 (let (($x345 (and $x344 $x343)))
 (let ((?x331 (top ?x205)))
 (let ((?x332 (stack ?x331 ?x194)))
 (let (($x359 (= ?x129 ?x332)))
 (let (($x346 (= c__ center-to-left)))
 (let (($x347 (and $x346 $x343)))
 (let ((?x131 (rest ?x194)))
 (let (($x355 (= ?x129 ?x131)))
 (let (($x348 ((_ is stack ) ?x194)))
 (let (($x349 (= c__ left-to-right)))
 (let (($x350 (and $x349 $x348)))
 (let (($x351 (= c__ left-to-center)))
 (let (($x352 (and $x351 $x348)))
 (ite $x352 $x355 (ite $x350 $x355 (ite $x347 $x359 (ite $x345 $x368 (ite $x342 $x362 $x368))))))))))))))))))))))))))))))))
(assert
 (let ((?x202 (right s__)))
 (let ((?x132 (right s___)))
 (let (($x364 (= ?x132 ?x202)))
 (let ((?x334 (rest ?x202)))
 (let (($x361 (= ?x132 ?x334)))
 (let (($x338 ((_ is stack ) ?x202)))
 (let (($x339 (= c__ right-to-center)))
 (let (($x340 (and $x339 $x338)))
 (let (($x341 (= c__ right-to-left)))
 (let (($x342 (and $x341 $x338)))
 (let ((?x205 (center s__)))
 (let ((?x331 (top ?x205)))
 (let ((?x333 (stack ?x331 ?x202)))
 (let (($x360 (= ?x132 ?x333)))
 (let (($x343 ((_ is stack ) ?x205)))
 (let (($x344 (= c__ center-to-right)))
 (let (($x345 (and $x344 $x343)))
 (let (($x346 (= c__ center-to-left)))
 (let (($x347 (and $x346 $x343)))
 (let ((?x194 (left s__)))
 (let (($x348 ((_ is stack ) ?x194)))
 (let (($x349 (= c__ left-to-right)))
 (let (($x350 (and $x349 $x348)))
 (let (($x381 (ite $x350 $x364 (ite $x347 $x364 (ite $x345 $x360 (ite $x342 $x361 (ite $x340 $x361 $x364)))))))
 (let ((?x191 (top ?x194)))
 (let ((?x327 (stack ?x191 ?x202)))
 (let (($x356 (= ?x132 ?x327)))
 (let (($x351 (= c__ left-to-center)))
 (let (($x352 (and $x351 $x348)))
 (ite $x352 $x356 $x381)))))))))))))))))))))))))))))))
(assert
 (let ((?x205 (center s__)))
 (let ((?x328 (center s___)))
 (let (($x366 (= ?x328 ?x205)))
 (let ((?x202 (right s__)))
 (let ((?x335 (top ?x202)))
 (let ((?x337 (stack ?x335 ?x205)))
 (let (($x363 (= ?x328 ?x337)))
 (let (($x338 ((_ is stack ) ?x202)))
 (let (($x339 (= c__ right-to-center)))
 (let (($x340 (and $x339 $x338)))
 (let (($x341 (= c__ right-to-left)))
 (let (($x342 (and $x341 $x338)))
 (let ((?x330 (rest ?x205)))
 (let (($x358 (= ?x328 ?x330)))
 (let (($x343 ((_ is stack ) ?x205)))
 (let (($x344 (= c__ center-to-right)))
 (let (($x345 (and $x344 $x343)))
 (let (($x346 (= c__ center-to-left)))
 (let (($x347 (and $x346 $x343)))
 (let ((?x194 (left s__)))
 (let ((?x191 (top ?x194)))
 (let ((?x329 (stack ?x191 ?x205)))
 (let (($x357 (= ?x328 ?x329)))
 (let (($x348 ((_ is stack ) ?x194)))
 (let (($x349 (= c__ left-to-right)))
 (let (($x350 (and $x349 $x348)))
 (let (($x380 (ite $x350 $x357 (ite $x347 $x358 (ite $x345 $x358 (ite $x342 $x366 (ite $x340 $x363 $x366)))))))
 (let (($x351 (= c__ left-to-center)))
 (let (($x352 (and $x351 $x348)))
 (ite $x352 $x366 $x380)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x129 (left s___)))
 (let ((?x255 (left s____)))
 (let (($x506 (= ?x255 ?x129)))
 (let ((?x132 (right s___)))
 (let ((?x473 (top ?x132)))
 (let ((?x474 (stack ?x473 ?x129)))
 (let (($x500 (= ?x255 ?x474)))
 (let (($x476 ((_ is stack ) ?x132)))
 (let (($x479 (= c___ right-to-left)))
 (let (($x480 (and $x479 $x476)))
 (let ((?x328 (center s___)))
 (let (($x481 ((_ is stack ) ?x328)))
 (let (($x482 (= c___ center-to-right)))
 (let (($x483 (and $x482 $x481)))
 (let ((?x469 (top ?x328)))
 (let ((?x470 (stack ?x469 ?x129)))
 (let (($x497 (= ?x255 ?x470)))
 (let (($x484 (= c___ center-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x299 (rest ?x129)))
 (let (($x493 (= ?x255 ?x299)))
 (let (($x486 ((_ is stack ) ?x129)))
 (let (($x487 (= c___ left-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let (($x489 (= c___ left-to-center)))
 (let (($x490 (and $x489 $x486)))
 (ite $x490 $x493 (ite $x488 $x493 (ite $x485 $x497 (ite $x483 $x506 (ite $x480 $x500 $x506))))))))))))))))))))))))))))))))
(assert
 (let ((?x132 (right s___)))
 (let ((?x300 (right s____)))
 (let (($x502 (= ?x300 ?x132)))
 (let ((?x472 (rest ?x132)))
 (let (($x499 (= ?x300 ?x472)))
 (let (($x476 ((_ is stack ) ?x132)))
 (let (($x477 (= c___ right-to-center)))
 (let (($x478 (and $x477 $x476)))
 (let (($x479 (= c___ right-to-left)))
 (let (($x480 (and $x479 $x476)))
 (let ((?x328 (center s___)))
 (let ((?x469 (top ?x328)))
 (let ((?x471 (stack ?x469 ?x132)))
 (let (($x498 (= ?x300 ?x471)))
 (let (($x481 ((_ is stack ) ?x328)))
 (let (($x482 (= c___ center-to-right)))
 (let (($x483 (and $x482 $x481)))
 (let (($x484 (= c___ center-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x129 (left s___)))
 (let (($x486 ((_ is stack ) ?x129)))
 (let (($x487 (= c___ left-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let (($x519 (ite $x488 $x502 (ite $x485 $x502 (ite $x483 $x498 (ite $x480 $x499 (ite $x478 $x499 $x502)))))))
 (let ((?x326 (top ?x129)))
 (let ((?x465 (stack ?x326 ?x132)))
 (let (($x494 (= ?x300 ?x465)))
 (let (($x489 (= c___ left-to-center)))
 (let (($x490 (and $x489 $x486)))
 (ite $x490 $x494 $x519)))))))))))))))))))))))))))))))
(assert
 (let ((?x328 (center s___)))
 (let ((?x466 (center s____)))
 (let (($x504 (= ?x466 ?x328)))
 (let ((?x132 (right s___)))
 (let ((?x473 (top ?x132)))
 (let ((?x475 (stack ?x473 ?x328)))
 (let (($x501 (= ?x466 ?x475)))
 (let (($x476 ((_ is stack ) ?x132)))
 (let (($x477 (= c___ right-to-center)))
 (let (($x478 (and $x477 $x476)))
 (let (($x479 (= c___ right-to-left)))
 (let (($x480 (and $x479 $x476)))
 (let ((?x468 (rest ?x328)))
 (let (($x496 (= ?x466 ?x468)))
 (let (($x481 ((_ is stack ) ?x328)))
 (let (($x482 (= c___ center-to-right)))
 (let (($x483 (and $x482 $x481)))
 (let (($x484 (= c___ center-to-left)))
 (let (($x485 (and $x484 $x481)))
 (let ((?x129 (left s___)))
 (let ((?x326 (top ?x129)))
 (let ((?x467 (stack ?x326 ?x328)))
 (let (($x495 (= ?x466 ?x467)))
 (let (($x486 ((_ is stack ) ?x129)))
 (let (($x487 (= c___ left-to-right)))
 (let (($x488 (and $x487 $x486)))
 (let (($x518 (ite $x488 $x495 (ite $x485 $x496 (ite $x483 $x496 (ite $x480 $x504 (ite $x478 $x501 $x504)))))))
 (let (($x489 (= c___ left-to-center)))
 (let (($x490 (and $x489 $x486)))
 (ite $x490 $x504 $x518)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x255 (left s____)))
 (let ((?x384 (left s_____)))
 (let (($x644 (= ?x384 ?x255)))
 (let ((?x300 (right s____)))
 (let ((?x611 (top ?x300)))
 (let ((?x612 (stack ?x611 ?x255)))
 (let (($x638 (= ?x384 ?x612)))
 (let (($x614 ((_ is stack ) ?x300)))
 (let (($x617 (= c____ right-to-left)))
 (let (($x618 (and $x617 $x614)))
 (let ((?x466 (center s____)))
 (let (($x619 ((_ is stack ) ?x466)))
 (let (($x620 (= c____ center-to-right)))
 (let (($x621 (and $x620 $x619)))
 (let ((?x607 (top ?x466)))
 (let ((?x608 (stack ?x607 ?x255)))
 (let (($x635 (= ?x384 ?x608)))
 (let (($x622 (= c____ center-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x417 (rest ?x255)))
 (let (($x631 (= ?x384 ?x417)))
 (let (($x624 ((_ is stack ) ?x255)))
 (let (($x625 (= c____ left-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let (($x627 (= c____ left-to-center)))
 (let (($x628 (and $x627 $x624)))
 (ite $x628 $x631 (ite $x626 $x631 (ite $x623 $x635 (ite $x621 $x644 (ite $x618 $x638 $x644))))))))))))))))))))))))))))))))
(assert
 (let ((?x300 (right s____)))
 (let ((?x418 (right s_____)))
 (let (($x640 (= ?x418 ?x300)))
 (let ((?x610 (rest ?x300)))
 (let (($x637 (= ?x418 ?x610)))
 (let (($x614 ((_ is stack ) ?x300)))
 (let (($x615 (= c____ right-to-center)))
 (let (($x616 (and $x615 $x614)))
 (let (($x617 (= c____ right-to-left)))
 (let (($x618 (and $x617 $x614)))
 (let ((?x466 (center s____)))
 (let ((?x607 (top ?x466)))
 (let ((?x609 (stack ?x607 ?x300)))
 (let (($x636 (= ?x418 ?x609)))
 (let (($x619 ((_ is stack ) ?x466)))
 (let (($x620 (= c____ center-to-right)))
 (let (($x621 (and $x620 $x619)))
 (let (($x622 (= c____ center-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x255 (left s____)))
 (let (($x624 ((_ is stack ) ?x255)))
 (let (($x625 (= c____ left-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let (($x657 (ite $x626 $x640 (ite $x623 $x640 (ite $x621 $x636 (ite $x618 $x637 (ite $x616 $x637 $x640)))))))
 (let ((?x464 (top ?x255)))
 (let ((?x603 (stack ?x464 ?x300)))
 (let (($x632 (= ?x418 ?x603)))
 (let (($x627 (= c____ left-to-center)))
 (let (($x628 (and $x627 $x624)))
 (ite $x628 $x632 $x657)))))))))))))))))))))))))))))))
(assert
 (let ((?x466 (center s____)))
 (let ((?x604 (center s_____)))
 (let (($x642 (= ?x604 ?x466)))
 (let ((?x300 (right s____)))
 (let ((?x611 (top ?x300)))
 (let ((?x613 (stack ?x611 ?x466)))
 (let (($x639 (= ?x604 ?x613)))
 (let (($x614 ((_ is stack ) ?x300)))
 (let (($x615 (= c____ right-to-center)))
 (let (($x616 (and $x615 $x614)))
 (let (($x617 (= c____ right-to-left)))
 (let (($x618 (and $x617 $x614)))
 (let ((?x606 (rest ?x466)))
 (let (($x634 (= ?x604 ?x606)))
 (let (($x619 ((_ is stack ) ?x466)))
 (let (($x620 (= c____ center-to-right)))
 (let (($x621 (and $x620 $x619)))
 (let (($x622 (= c____ center-to-left)))
 (let (($x623 (and $x622 $x619)))
 (let ((?x255 (left s____)))
 (let ((?x464 (top ?x255)))
 (let ((?x605 (stack ?x464 ?x466)))
 (let (($x633 (= ?x604 ?x605)))
 (let (($x624 ((_ is stack ) ?x255)))
 (let (($x625 (= c____ left-to-right)))
 (let (($x626 (and $x625 $x624)))
 (let (($x656 (ite $x626 $x633 (ite $x623 $x634 (ite $x621 $x634 (ite $x618 $x642 (ite $x616 $x639 $x642)))))))
 (let (($x627 (= c____ left-to-center)))
 (let (($x628 (and $x627 $x624)))
 (ite $x628 $x642 $x656)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x384 (left s_____)))
 (let ((?x522 (left s______)))
 (let (($x782 (= ?x522 ?x384)))
 (let ((?x418 (right s_____)))
 (let ((?x749 (top ?x418)))
 (let ((?x750 (stack ?x749 ?x384)))
 (let (($x776 (= ?x522 ?x750)))
 (let (($x752 ((_ is stack ) ?x418)))
 (let (($x755 (= c_____ right-to-left)))
 (let (($x756 (and $x755 $x752)))
 (let ((?x604 (center s_____)))
 (let (($x757 ((_ is stack ) ?x604)))
 (let (($x758 (= c_____ center-to-right)))
 (let (($x759 (and $x758 $x757)))
 (let ((?x745 (top ?x604)))
 (let ((?x746 (stack ?x745 ?x384)))
 (let (($x773 (= ?x522 ?x746)))
 (let (($x760 (= c_____ center-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x555 (rest ?x384)))
 (let (($x769 (= ?x522 ?x555)))
 (let (($x762 ((_ is stack ) ?x384)))
 (let (($x763 (= c_____ left-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let (($x765 (= c_____ left-to-center)))
 (let (($x766 (and $x765 $x762)))
 (ite $x766 $x769 (ite $x764 $x769 (ite $x761 $x773 (ite $x759 $x782 (ite $x756 $x776 $x782))))))))))))))))))))))))))))))))
(assert
 (let ((?x418 (right s_____)))
 (let ((?x556 (right s______)))
 (let (($x778 (= ?x556 ?x418)))
 (let ((?x748 (rest ?x418)))
 (let (($x775 (= ?x556 ?x748)))
 (let (($x752 ((_ is stack ) ?x418)))
 (let (($x753 (= c_____ right-to-center)))
 (let (($x754 (and $x753 $x752)))
 (let (($x755 (= c_____ right-to-left)))
 (let (($x756 (and $x755 $x752)))
 (let ((?x604 (center s_____)))
 (let ((?x745 (top ?x604)))
 (let ((?x747 (stack ?x745 ?x418)))
 (let (($x774 (= ?x556 ?x747)))
 (let (($x757 ((_ is stack ) ?x604)))
 (let (($x758 (= c_____ center-to-right)))
 (let (($x759 (and $x758 $x757)))
 (let (($x760 (= c_____ center-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x384 (left s_____)))
 (let (($x762 ((_ is stack ) ?x384)))
 (let (($x763 (= c_____ left-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let (($x795 (ite $x764 $x778 (ite $x761 $x778 (ite $x759 $x774 (ite $x756 $x775 (ite $x754 $x775 $x778)))))))
 (let ((?x602 (top ?x384)))
 (let ((?x741 (stack ?x602 ?x418)))
 (let (($x770 (= ?x556 ?x741)))
 (let (($x765 (= c_____ left-to-center)))
 (let (($x766 (and $x765 $x762)))
 (ite $x766 $x770 $x795)))))))))))))))))))))))))))))))
(assert
 (let ((?x604 (center s_____)))
 (let ((?x742 (center s______)))
 (let (($x780 (= ?x742 ?x604)))
 (let ((?x418 (right s_____)))
 (let ((?x749 (top ?x418)))
 (let ((?x751 (stack ?x749 ?x604)))
 (let (($x777 (= ?x742 ?x751)))
 (let (($x752 ((_ is stack ) ?x418)))
 (let (($x753 (= c_____ right-to-center)))
 (let (($x754 (and $x753 $x752)))
 (let (($x755 (= c_____ right-to-left)))
 (let (($x756 (and $x755 $x752)))
 (let ((?x744 (rest ?x604)))
 (let (($x772 (= ?x742 ?x744)))
 (let (($x757 ((_ is stack ) ?x604)))
 (let (($x758 (= c_____ center-to-right)))
 (let (($x759 (and $x758 $x757)))
 (let (($x760 (= c_____ center-to-left)))
 (let (($x761 (and $x760 $x757)))
 (let ((?x384 (left s_____)))
 (let ((?x602 (top ?x384)))
 (let ((?x743 (stack ?x602 ?x604)))
 (let (($x771 (= ?x742 ?x743)))
 (let (($x762 ((_ is stack ) ?x384)))
 (let (($x763 (= c_____ left-to-right)))
 (let (($x764 (and $x763 $x762)))
 (let (($x794 (ite $x764 $x771 (ite $x761 $x772 (ite $x759 $x772 (ite $x756 $x780 (ite $x754 $x777 $x780)))))))
 (let (($x765 (= c_____ left-to-center)))
 (let (($x766 (and $x765 $x762)))
 (ite $x766 $x780 $x794)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x522 (left s______)))
 (let ((?x660 (left s_______)))
 (let (($x920 (= ?x660 ?x522)))
 (let ((?x556 (right s______)))
 (let ((?x887 (top ?x556)))
 (let ((?x888 (stack ?x887 ?x522)))
 (let (($x914 (= ?x660 ?x888)))
 (let (($x890 ((_ is stack ) ?x556)))
 (let (($x893 (= c______ right-to-left)))
 (let (($x894 (and $x893 $x890)))
 (let ((?x742 (center s______)))
 (let (($x895 ((_ is stack ) ?x742)))
 (let (($x896 (= c______ center-to-right)))
 (let (($x897 (and $x896 $x895)))
 (let ((?x883 (top ?x742)))
 (let ((?x884 (stack ?x883 ?x522)))
 (let (($x911 (= ?x660 ?x884)))
 (let (($x898 (= c______ center-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x693 (rest ?x522)))
 (let (($x907 (= ?x660 ?x693)))
 (let (($x900 ((_ is stack ) ?x522)))
 (let (($x901 (= c______ left-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let (($x903 (= c______ left-to-center)))
 (let (($x904 (and $x903 $x900)))
 (ite $x904 $x907 (ite $x902 $x907 (ite $x899 $x911 (ite $x897 $x920 (ite $x894 $x914 $x920))))))))))))))))))))))))))))))))
(assert
 (let ((?x556 (right s______)))
 (let ((?x694 (right s_______)))
 (let (($x916 (= ?x694 ?x556)))
 (let ((?x886 (rest ?x556)))
 (let (($x913 (= ?x694 ?x886)))
 (let (($x890 ((_ is stack ) ?x556)))
 (let (($x891 (= c______ right-to-center)))
 (let (($x892 (and $x891 $x890)))
 (let (($x893 (= c______ right-to-left)))
 (let (($x894 (and $x893 $x890)))
 (let ((?x742 (center s______)))
 (let ((?x883 (top ?x742)))
 (let ((?x885 (stack ?x883 ?x556)))
 (let (($x912 (= ?x694 ?x885)))
 (let (($x895 ((_ is stack ) ?x742)))
 (let (($x896 (= c______ center-to-right)))
 (let (($x897 (and $x896 $x895)))
 (let (($x898 (= c______ center-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x522 (left s______)))
 (let (($x900 ((_ is stack ) ?x522)))
 (let (($x901 (= c______ left-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let (($x933 (ite $x902 $x916 (ite $x899 $x916 (ite $x897 $x912 (ite $x894 $x913 (ite $x892 $x913 $x916)))))))
 (let ((?x740 (top ?x522)))
 (let ((?x879 (stack ?x740 ?x556)))
 (let (($x908 (= ?x694 ?x879)))
 (let (($x903 (= c______ left-to-center)))
 (let (($x904 (and $x903 $x900)))
 (ite $x904 $x908 $x933)))))))))))))))))))))))))))))))
(assert
 (let ((?x742 (center s______)))
 (let ((?x880 (center s_______)))
 (let (($x918 (= ?x880 ?x742)))
 (let ((?x556 (right s______)))
 (let ((?x887 (top ?x556)))
 (let ((?x889 (stack ?x887 ?x742)))
 (let (($x915 (= ?x880 ?x889)))
 (let (($x890 ((_ is stack ) ?x556)))
 (let (($x891 (= c______ right-to-center)))
 (let (($x892 (and $x891 $x890)))
 (let (($x893 (= c______ right-to-left)))
 (let (($x894 (and $x893 $x890)))
 (let ((?x882 (rest ?x742)))
 (let (($x910 (= ?x880 ?x882)))
 (let (($x895 ((_ is stack ) ?x742)))
 (let (($x896 (= c______ center-to-right)))
 (let (($x897 (and $x896 $x895)))
 (let (($x898 (= c______ center-to-left)))
 (let (($x899 (and $x898 $x895)))
 (let ((?x522 (left s______)))
 (let ((?x740 (top ?x522)))
 (let ((?x881 (stack ?x740 ?x742)))
 (let (($x909 (= ?x880 ?x881)))
 (let (($x900 ((_ is stack ) ?x522)))
 (let (($x901 (= c______ left-to-right)))
 (let (($x902 (and $x901 $x900)))
 (let (($x932 (ite $x902 $x909 (ite $x899 $x910 (ite $x897 $x910 (ite $x894 $x918 (ite $x892 $x915 $x918)))))))
 (let (($x903 (= c______ left-to-center)))
 (let (($x904 (and $x903 $x900)))
 (ite $x904 $x918 $x932)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x660 (left s_______)))
 (let ((?x798 (left s________)))
 (let (($x1058 (= ?x798 ?x660)))
 (let ((?x694 (right s_______)))
 (let ((?x1025 (top ?x694)))
 (let ((?x1026 (stack ?x1025 ?x660)))
 (let (($x1052 (= ?x798 ?x1026)))
 (let (($x1028 ((_ is stack ) ?x694)))
 (let (($x1031 (= c_______ right-to-left)))
 (let (($x1032 (and $x1031 $x1028)))
 (let ((?x880 (center s_______)))
 (let (($x1033 ((_ is stack ) ?x880)))
 (let (($x1034 (= c_______ center-to-right)))
 (let (($x1035 (and $x1034 $x1033)))
 (let ((?x1021 (top ?x880)))
 (let ((?x1022 (stack ?x1021 ?x660)))
 (let (($x1049 (= ?x798 ?x1022)))
 (let (($x1036 (= c_______ center-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x831 (rest ?x660)))
 (let (($x1045 (= ?x798 ?x831)))
 (let (($x1038 ((_ is stack ) ?x660)))
 (let (($x1039 (= c_______ left-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let (($x1041 (= c_______ left-to-center)))
 (let (($x1042 (and $x1041 $x1038)))
 (ite $x1042 $x1045 (ite $x1040 $x1045 (ite $x1037 $x1049 (ite $x1035 $x1058 (ite $x1032 $x1052 $x1058))))))))))))))))))))))))))))))))
(assert
 (let ((?x694 (right s_______)))
 (let ((?x832 (right s________)))
 (let (($x1054 (= ?x832 ?x694)))
 (let ((?x1024 (rest ?x694)))
 (let (($x1051 (= ?x832 ?x1024)))
 (let (($x1028 ((_ is stack ) ?x694)))
 (let (($x1029 (= c_______ right-to-center)))
 (let (($x1030 (and $x1029 $x1028)))
 (let (($x1031 (= c_______ right-to-left)))
 (let (($x1032 (and $x1031 $x1028)))
 (let ((?x880 (center s_______)))
 (let ((?x1021 (top ?x880)))
 (let ((?x1023 (stack ?x1021 ?x694)))
 (let (($x1050 (= ?x832 ?x1023)))
 (let (($x1033 ((_ is stack ) ?x880)))
 (let (($x1034 (= c_______ center-to-right)))
 (let (($x1035 (and $x1034 $x1033)))
 (let (($x1036 (= c_______ center-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x660 (left s_______)))
 (let (($x1038 ((_ is stack ) ?x660)))
 (let (($x1039 (= c_______ left-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let (($x1071 (ite $x1040 $x1054 (ite $x1037 $x1054 (ite $x1035 $x1050 (ite $x1032 $x1051 (ite $x1030 $x1051 $x1054)))))))
 (let ((?x878 (top ?x660)))
 (let ((?x1017 (stack ?x878 ?x694)))
 (let (($x1046 (= ?x832 ?x1017)))
 (let (($x1041 (= c_______ left-to-center)))
 (let (($x1042 (and $x1041 $x1038)))
 (ite $x1042 $x1046 $x1071)))))))))))))))))))))))))))))))
(assert
 (let ((?x880 (center s_______)))
 (let ((?x1018 (center s________)))
 (let (($x1056 (= ?x1018 ?x880)))
 (let ((?x694 (right s_______)))
 (let ((?x1025 (top ?x694)))
 (let ((?x1027 (stack ?x1025 ?x880)))
 (let (($x1053 (= ?x1018 ?x1027)))
 (let (($x1028 ((_ is stack ) ?x694)))
 (let (($x1029 (= c_______ right-to-center)))
 (let (($x1030 (and $x1029 $x1028)))
 (let (($x1031 (= c_______ right-to-left)))
 (let (($x1032 (and $x1031 $x1028)))
 (let ((?x1020 (rest ?x880)))
 (let (($x1048 (= ?x1018 ?x1020)))
 (let (($x1033 ((_ is stack ) ?x880)))
 (let (($x1034 (= c_______ center-to-right)))
 (let (($x1035 (and $x1034 $x1033)))
 (let (($x1036 (= c_______ center-to-left)))
 (let (($x1037 (and $x1036 $x1033)))
 (let ((?x660 (left s_______)))
 (let ((?x878 (top ?x660)))
 (let ((?x1019 (stack ?x878 ?x880)))
 (let (($x1047 (= ?x1018 ?x1019)))
 (let (($x1038 ((_ is stack ) ?x660)))
 (let (($x1039 (= c_______ left-to-right)))
 (let (($x1040 (and $x1039 $x1038)))
 (let (($x1070 (ite $x1040 $x1047 (ite $x1037 $x1048 (ite $x1035 $x1048 (ite $x1032 $x1056 (ite $x1030 $x1053 $x1056)))))))
 (let (($x1041 (= c_______ left-to-center)))
 (let (($x1042 (and $x1041 $x1038)))
 (ite $x1042 $x1056 $x1070)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x798 (left s________)))
 (let ((?x936 (left s_________)))
 (let (($x1196 (= ?x936 ?x798)))
 (let ((?x832 (right s________)))
 (let ((?x1163 (top ?x832)))
 (let ((?x1164 (stack ?x1163 ?x798)))
 (let (($x1190 (= ?x936 ?x1164)))
 (let (($x1166 ((_ is stack ) ?x832)))
 (let (($x1169 (= c________ right-to-left)))
 (let (($x1170 (and $x1169 $x1166)))
 (let ((?x1018 (center s________)))
 (let (($x1171 ((_ is stack ) ?x1018)))
 (let (($x1172 (= c________ center-to-right)))
 (let (($x1173 (and $x1172 $x1171)))
 (let ((?x1159 (top ?x1018)))
 (let ((?x1160 (stack ?x1159 ?x798)))
 (let (($x1187 (= ?x936 ?x1160)))
 (let (($x1174 (= c________ center-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x969 (rest ?x798)))
 (let (($x1183 (= ?x936 ?x969)))
 (let (($x1176 ((_ is stack ) ?x798)))
 (let (($x1177 (= c________ left-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let (($x1179 (= c________ left-to-center)))
 (let (($x1180 (and $x1179 $x1176)))
 (ite $x1180 $x1183 (ite $x1178 $x1183 (ite $x1175 $x1187 (ite $x1173 $x1196 (ite $x1170 $x1190 $x1196))))))))))))))))))))))))))))))))
(assert
 (let ((?x832 (right s________)))
 (let ((?x970 (right s_________)))
 (let (($x1192 (= ?x970 ?x832)))
 (let ((?x1162 (rest ?x832)))
 (let (($x1189 (= ?x970 ?x1162)))
 (let (($x1166 ((_ is stack ) ?x832)))
 (let (($x1167 (= c________ right-to-center)))
 (let (($x1168 (and $x1167 $x1166)))
 (let (($x1169 (= c________ right-to-left)))
 (let (($x1170 (and $x1169 $x1166)))
 (let ((?x1018 (center s________)))
 (let ((?x1159 (top ?x1018)))
 (let ((?x1161 (stack ?x1159 ?x832)))
 (let (($x1188 (= ?x970 ?x1161)))
 (let (($x1171 ((_ is stack ) ?x1018)))
 (let (($x1172 (= c________ center-to-right)))
 (let (($x1173 (and $x1172 $x1171)))
 (let (($x1174 (= c________ center-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x798 (left s________)))
 (let (($x1176 ((_ is stack ) ?x798)))
 (let (($x1177 (= c________ left-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let (($x1209 (ite $x1178 $x1192 (ite $x1175 $x1192 (ite $x1173 $x1188 (ite $x1170 $x1189 (ite $x1168 $x1189 $x1192)))))))
 (let ((?x1016 (top ?x798)))
 (let ((?x1155 (stack ?x1016 ?x832)))
 (let (($x1184 (= ?x970 ?x1155)))
 (let (($x1179 (= c________ left-to-center)))
 (let (($x1180 (and $x1179 $x1176)))
 (ite $x1180 $x1184 $x1209)))))))))))))))))))))))))))))))
(assert
 (let ((?x1018 (center s________)))
 (let ((?x1156 (center s_________)))
 (let (($x1194 (= ?x1156 ?x1018)))
 (let ((?x832 (right s________)))
 (let ((?x1163 (top ?x832)))
 (let ((?x1165 (stack ?x1163 ?x1018)))
 (let (($x1191 (= ?x1156 ?x1165)))
 (let (($x1166 ((_ is stack ) ?x832)))
 (let (($x1167 (= c________ right-to-center)))
 (let (($x1168 (and $x1167 $x1166)))
 (let (($x1169 (= c________ right-to-left)))
 (let (($x1170 (and $x1169 $x1166)))
 (let ((?x1158 (rest ?x1018)))
 (let (($x1186 (= ?x1156 ?x1158)))
 (let (($x1171 ((_ is stack ) ?x1018)))
 (let (($x1172 (= c________ center-to-right)))
 (let (($x1173 (and $x1172 $x1171)))
 (let (($x1174 (= c________ center-to-left)))
 (let (($x1175 (and $x1174 $x1171)))
 (let ((?x798 (left s________)))
 (let ((?x1016 (top ?x798)))
 (let ((?x1157 (stack ?x1016 ?x1018)))
 (let (($x1185 (= ?x1156 ?x1157)))
 (let (($x1176 ((_ is stack ) ?x798)))
 (let (($x1177 (= c________ left-to-right)))
 (let (($x1178 (and $x1177 $x1176)))
 (let (($x1208 (ite $x1178 $x1185 (ite $x1175 $x1186 (ite $x1173 $x1186 (ite $x1170 $x1194 (ite $x1168 $x1191 $x1194)))))))
 (let (($x1179 (= c________ left-to-center)))
 (let (($x1180 (and $x1179 $x1176)))
 (ite $x1180 $x1194 $x1208)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x936 (left s_________)))
 (let ((?x1074 (left s__________)))
 (let (($x1334 (= ?x1074 ?x936)))
 (let ((?x970 (right s_________)))
 (let ((?x1301 (top ?x970)))
 (let ((?x1302 (stack ?x1301 ?x936)))
 (let (($x1328 (= ?x1074 ?x1302)))
 (let (($x1304 ((_ is stack ) ?x970)))
 (let (($x1307 (= c_________ right-to-left)))
 (let (($x1308 (and $x1307 $x1304)))
 (let ((?x1156 (center s_________)))
 (let (($x1309 ((_ is stack ) ?x1156)))
 (let (($x1310 (= c_________ center-to-right)))
 (let (($x1311 (and $x1310 $x1309)))
 (let ((?x1297 (top ?x1156)))
 (let ((?x1298 (stack ?x1297 ?x936)))
 (let (($x1325 (= ?x1074 ?x1298)))
 (let (($x1312 (= c_________ center-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x1107 (rest ?x936)))
 (let (($x1321 (= ?x1074 ?x1107)))
 (let (($x1314 ((_ is stack ) ?x936)))
 (let (($x1315 (= c_________ left-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let (($x1317 (= c_________ left-to-center)))
 (let (($x1318 (and $x1317 $x1314)))
 (ite $x1318 $x1321 (ite $x1316 $x1321 (ite $x1313 $x1325 (ite $x1311 $x1334 (ite $x1308 $x1328 $x1334))))))))))))))))))))))))))))))))
(assert
 (let ((?x970 (right s_________)))
 (let ((?x1108 (right s__________)))
 (let (($x1330 (= ?x1108 ?x970)))
 (let ((?x1300 (rest ?x970)))
 (let (($x1327 (= ?x1108 ?x1300)))
 (let (($x1304 ((_ is stack ) ?x970)))
 (let (($x1305 (= c_________ right-to-center)))
 (let (($x1306 (and $x1305 $x1304)))
 (let (($x1307 (= c_________ right-to-left)))
 (let (($x1308 (and $x1307 $x1304)))
 (let ((?x1156 (center s_________)))
 (let ((?x1297 (top ?x1156)))
 (let ((?x1299 (stack ?x1297 ?x970)))
 (let (($x1326 (= ?x1108 ?x1299)))
 (let (($x1309 ((_ is stack ) ?x1156)))
 (let (($x1310 (= c_________ center-to-right)))
 (let (($x1311 (and $x1310 $x1309)))
 (let (($x1312 (= c_________ center-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x936 (left s_________)))
 (let (($x1314 ((_ is stack ) ?x936)))
 (let (($x1315 (= c_________ left-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let (($x1347 (ite $x1316 $x1330 (ite $x1313 $x1330 (ite $x1311 $x1326 (ite $x1308 $x1327 (ite $x1306 $x1327 $x1330)))))))
 (let ((?x1154 (top ?x936)))
 (let ((?x1293 (stack ?x1154 ?x970)))
 (let (($x1322 (= ?x1108 ?x1293)))
 (let (($x1317 (= c_________ left-to-center)))
 (let (($x1318 (and $x1317 $x1314)))
 (ite $x1318 $x1322 $x1347)))))))))))))))))))))))))))))))
(assert
 (let ((?x1156 (center s_________)))
 (let ((?x1294 (center s__________)))
 (let (($x1332 (= ?x1294 ?x1156)))
 (let ((?x970 (right s_________)))
 (let ((?x1301 (top ?x970)))
 (let ((?x1303 (stack ?x1301 ?x1156)))
 (let (($x1329 (= ?x1294 ?x1303)))
 (let (($x1304 ((_ is stack ) ?x970)))
 (let (($x1305 (= c_________ right-to-center)))
 (let (($x1306 (and $x1305 $x1304)))
 (let (($x1307 (= c_________ right-to-left)))
 (let (($x1308 (and $x1307 $x1304)))
 (let ((?x1296 (rest ?x1156)))
 (let (($x1324 (= ?x1294 ?x1296)))
 (let (($x1309 ((_ is stack ) ?x1156)))
 (let (($x1310 (= c_________ center-to-right)))
 (let (($x1311 (and $x1310 $x1309)))
 (let (($x1312 (= c_________ center-to-left)))
 (let (($x1313 (and $x1312 $x1309)))
 (let ((?x936 (left s_________)))
 (let ((?x1154 (top ?x936)))
 (let ((?x1295 (stack ?x1154 ?x1156)))
 (let (($x1323 (= ?x1294 ?x1295)))
 (let (($x1314 ((_ is stack ) ?x936)))
 (let (($x1315 (= c_________ left-to-right)))
 (let (($x1316 (and $x1315 $x1314)))
 (let (($x1346 (ite $x1316 $x1323 (ite $x1313 $x1324 (ite $x1311 $x1324 (ite $x1308 $x1332 (ite $x1306 $x1329 $x1332)))))))
 (let (($x1317 (= c_________ left-to-center)))
 (let (($x1318 (and $x1317 $x1314)))
 (ite $x1318 $x1332 $x1346)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1074 (left s__________)))
 (let ((?x1212 (left s___________)))
 (let (($x1472 (= ?x1212 ?x1074)))
 (let ((?x1108 (right s__________)))
 (let ((?x1439 (top ?x1108)))
 (let ((?x1440 (stack ?x1439 ?x1074)))
 (let (($x1466 (= ?x1212 ?x1440)))
 (let (($x1442 ((_ is stack ) ?x1108)))
 (let (($x1445 (= c__________ right-to-left)))
 (let (($x1446 (and $x1445 $x1442)))
 (let ((?x1294 (center s__________)))
 (let (($x1447 ((_ is stack ) ?x1294)))
 (let (($x1448 (= c__________ center-to-right)))
 (let (($x1449 (and $x1448 $x1447)))
 (let ((?x1435 (top ?x1294)))
 (let ((?x1436 (stack ?x1435 ?x1074)))
 (let (($x1463 (= ?x1212 ?x1436)))
 (let (($x1450 (= c__________ center-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1245 (rest ?x1074)))
 (let (($x1459 (= ?x1212 ?x1245)))
 (let (($x1452 ((_ is stack ) ?x1074)))
 (let (($x1453 (= c__________ left-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let (($x1455 (= c__________ left-to-center)))
 (let (($x1456 (and $x1455 $x1452)))
 (ite $x1456 $x1459 (ite $x1454 $x1459 (ite $x1451 $x1463 (ite $x1449 $x1472 (ite $x1446 $x1466 $x1472))))))))))))))))))))))))))))))))
(assert
 (let ((?x1108 (right s__________)))
 (let ((?x1246 (right s___________)))
 (let (($x1468 (= ?x1246 ?x1108)))
 (let ((?x1438 (rest ?x1108)))
 (let (($x1465 (= ?x1246 ?x1438)))
 (let (($x1442 ((_ is stack ) ?x1108)))
 (let (($x1443 (= c__________ right-to-center)))
 (let (($x1444 (and $x1443 $x1442)))
 (let (($x1445 (= c__________ right-to-left)))
 (let (($x1446 (and $x1445 $x1442)))
 (let ((?x1294 (center s__________)))
 (let ((?x1435 (top ?x1294)))
 (let ((?x1437 (stack ?x1435 ?x1108)))
 (let (($x1464 (= ?x1246 ?x1437)))
 (let (($x1447 ((_ is stack ) ?x1294)))
 (let (($x1448 (= c__________ center-to-right)))
 (let (($x1449 (and $x1448 $x1447)))
 (let (($x1450 (= c__________ center-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1074 (left s__________)))
 (let (($x1452 ((_ is stack ) ?x1074)))
 (let (($x1453 (= c__________ left-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let (($x1485 (ite $x1454 $x1468 (ite $x1451 $x1468 (ite $x1449 $x1464 (ite $x1446 $x1465 (ite $x1444 $x1465 $x1468)))))))
 (let ((?x1292 (top ?x1074)))
 (let ((?x1431 (stack ?x1292 ?x1108)))
 (let (($x1460 (= ?x1246 ?x1431)))
 (let (($x1455 (= c__________ left-to-center)))
 (let (($x1456 (and $x1455 $x1452)))
 (ite $x1456 $x1460 $x1485)))))))))))))))))))))))))))))))
(assert
 (let ((?x1294 (center s__________)))
 (let ((?x1432 (center s___________)))
 (let (($x1470 (= ?x1432 ?x1294)))
 (let ((?x1108 (right s__________)))
 (let ((?x1439 (top ?x1108)))
 (let ((?x1441 (stack ?x1439 ?x1294)))
 (let (($x1467 (= ?x1432 ?x1441)))
 (let (($x1442 ((_ is stack ) ?x1108)))
 (let (($x1443 (= c__________ right-to-center)))
 (let (($x1444 (and $x1443 $x1442)))
 (let (($x1445 (= c__________ right-to-left)))
 (let (($x1446 (and $x1445 $x1442)))
 (let ((?x1434 (rest ?x1294)))
 (let (($x1462 (= ?x1432 ?x1434)))
 (let (($x1447 ((_ is stack ) ?x1294)))
 (let (($x1448 (= c__________ center-to-right)))
 (let (($x1449 (and $x1448 $x1447)))
 (let (($x1450 (= c__________ center-to-left)))
 (let (($x1451 (and $x1450 $x1447)))
 (let ((?x1074 (left s__________)))
 (let ((?x1292 (top ?x1074)))
 (let ((?x1433 (stack ?x1292 ?x1294)))
 (let (($x1461 (= ?x1432 ?x1433)))
 (let (($x1452 ((_ is stack ) ?x1074)))
 (let (($x1453 (= c__________ left-to-right)))
 (let (($x1454 (and $x1453 $x1452)))
 (let (($x1484 (ite $x1454 $x1461 (ite $x1451 $x1462 (ite $x1449 $x1462 (ite $x1446 $x1470 (ite $x1444 $x1467 $x1470)))))))
 (let (($x1455 (= c__________ left-to-center)))
 (let (($x1456 (and $x1455 $x1452)))
 (ite $x1456 $x1470 $x1484)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1212 (left s___________)))
 (let ((?x1350 (left s____________)))
 (let (($x1610 (= ?x1350 ?x1212)))
 (let ((?x1246 (right s___________)))
 (let ((?x1577 (top ?x1246)))
 (let ((?x1578 (stack ?x1577 ?x1212)))
 (let (($x1604 (= ?x1350 ?x1578)))
 (let (($x1580 ((_ is stack ) ?x1246)))
 (let (($x1583 (= c___________ right-to-left)))
 (let (($x1584 (and $x1583 $x1580)))
 (let ((?x1432 (center s___________)))
 (let (($x1585 ((_ is stack ) ?x1432)))
 (let (($x1586 (= c___________ center-to-right)))
 (let (($x1587 (and $x1586 $x1585)))
 (let ((?x1573 (top ?x1432)))
 (let ((?x1574 (stack ?x1573 ?x1212)))
 (let (($x1601 (= ?x1350 ?x1574)))
 (let (($x1588 (= c___________ center-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1383 (rest ?x1212)))
 (let (($x1597 (= ?x1350 ?x1383)))
 (let (($x1590 ((_ is stack ) ?x1212)))
 (let (($x1591 (= c___________ left-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let (($x1593 (= c___________ left-to-center)))
 (let (($x1594 (and $x1593 $x1590)))
 (ite $x1594 $x1597 (ite $x1592 $x1597 (ite $x1589 $x1601 (ite $x1587 $x1610 (ite $x1584 $x1604 $x1610))))))))))))))))))))))))))))))))
(assert
 (let ((?x1246 (right s___________)))
 (let ((?x1384 (right s____________)))
 (let (($x1606 (= ?x1384 ?x1246)))
 (let ((?x1576 (rest ?x1246)))
 (let (($x1603 (= ?x1384 ?x1576)))
 (let (($x1580 ((_ is stack ) ?x1246)))
 (let (($x1581 (= c___________ right-to-center)))
 (let (($x1582 (and $x1581 $x1580)))
 (let (($x1583 (= c___________ right-to-left)))
 (let (($x1584 (and $x1583 $x1580)))
 (let ((?x1432 (center s___________)))
 (let ((?x1573 (top ?x1432)))
 (let ((?x1575 (stack ?x1573 ?x1246)))
 (let (($x1602 (= ?x1384 ?x1575)))
 (let (($x1585 ((_ is stack ) ?x1432)))
 (let (($x1586 (= c___________ center-to-right)))
 (let (($x1587 (and $x1586 $x1585)))
 (let (($x1588 (= c___________ center-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1212 (left s___________)))
 (let (($x1590 ((_ is stack ) ?x1212)))
 (let (($x1591 (= c___________ left-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let (($x1623 (ite $x1592 $x1606 (ite $x1589 $x1606 (ite $x1587 $x1602 (ite $x1584 $x1603 (ite $x1582 $x1603 $x1606)))))))
 (let ((?x1430 (top ?x1212)))
 (let ((?x1569 (stack ?x1430 ?x1246)))
 (let (($x1598 (= ?x1384 ?x1569)))
 (let (($x1593 (= c___________ left-to-center)))
 (let (($x1594 (and $x1593 $x1590)))
 (ite $x1594 $x1598 $x1623)))))))))))))))))))))))))))))))
(assert
 (let ((?x1432 (center s___________)))
 (let ((?x1570 (center s____________)))
 (let (($x1608 (= ?x1570 ?x1432)))
 (let ((?x1246 (right s___________)))
 (let ((?x1577 (top ?x1246)))
 (let ((?x1579 (stack ?x1577 ?x1432)))
 (let (($x1605 (= ?x1570 ?x1579)))
 (let (($x1580 ((_ is stack ) ?x1246)))
 (let (($x1581 (= c___________ right-to-center)))
 (let (($x1582 (and $x1581 $x1580)))
 (let (($x1583 (= c___________ right-to-left)))
 (let (($x1584 (and $x1583 $x1580)))
 (let ((?x1572 (rest ?x1432)))
 (let (($x1600 (= ?x1570 ?x1572)))
 (let (($x1585 ((_ is stack ) ?x1432)))
 (let (($x1586 (= c___________ center-to-right)))
 (let (($x1587 (and $x1586 $x1585)))
 (let (($x1588 (= c___________ center-to-left)))
 (let (($x1589 (and $x1588 $x1585)))
 (let ((?x1212 (left s___________)))
 (let ((?x1430 (top ?x1212)))
 (let ((?x1571 (stack ?x1430 ?x1432)))
 (let (($x1599 (= ?x1570 ?x1571)))
 (let (($x1590 ((_ is stack ) ?x1212)))
 (let (($x1591 (= c___________ left-to-right)))
 (let (($x1592 (and $x1591 $x1590)))
 (let (($x1622 (ite $x1592 $x1599 (ite $x1589 $x1600 (ite $x1587 $x1600 (ite $x1584 $x1608 (ite $x1582 $x1605 $x1608)))))))
 (let (($x1593 (= c___________ left-to-center)))
 (let (($x1594 (and $x1593 $x1590)))
 (ite $x1594 $x1608 $x1622)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1350 (left s____________)))
 (let ((?x1488 (left s_____________)))
 (let (($x1748 (= ?x1488 ?x1350)))
 (let ((?x1384 (right s____________)))
 (let ((?x1715 (top ?x1384)))
 (let ((?x1716 (stack ?x1715 ?x1350)))
 (let (($x1742 (= ?x1488 ?x1716)))
 (let (($x1718 ((_ is stack ) ?x1384)))
 (let (($x1721 (= c____________ right-to-left)))
 (let (($x1722 (and $x1721 $x1718)))
 (let ((?x1570 (center s____________)))
 (let (($x1723 ((_ is stack ) ?x1570)))
 (let (($x1724 (= c____________ center-to-right)))
 (let (($x1725 (and $x1724 $x1723)))
 (let ((?x1711 (top ?x1570)))
 (let ((?x1712 (stack ?x1711 ?x1350)))
 (let (($x1739 (= ?x1488 ?x1712)))
 (let (($x1726 (= c____________ center-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1521 (rest ?x1350)))
 (let (($x1735 (= ?x1488 ?x1521)))
 (let (($x1728 ((_ is stack ) ?x1350)))
 (let (($x1729 (= c____________ left-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let (($x1731 (= c____________ left-to-center)))
 (let (($x1732 (and $x1731 $x1728)))
 (ite $x1732 $x1735 (ite $x1730 $x1735 (ite $x1727 $x1739 (ite $x1725 $x1748 (ite $x1722 $x1742 $x1748))))))))))))))))))))))))))))))))
(assert
 (let ((?x1384 (right s____________)))
 (let ((?x1522 (right s_____________)))
 (let (($x1744 (= ?x1522 ?x1384)))
 (let ((?x1714 (rest ?x1384)))
 (let (($x1741 (= ?x1522 ?x1714)))
 (let (($x1718 ((_ is stack ) ?x1384)))
 (let (($x1719 (= c____________ right-to-center)))
 (let (($x1720 (and $x1719 $x1718)))
 (let (($x1721 (= c____________ right-to-left)))
 (let (($x1722 (and $x1721 $x1718)))
 (let ((?x1570 (center s____________)))
 (let ((?x1711 (top ?x1570)))
 (let ((?x1713 (stack ?x1711 ?x1384)))
 (let (($x1740 (= ?x1522 ?x1713)))
 (let (($x1723 ((_ is stack ) ?x1570)))
 (let (($x1724 (= c____________ center-to-right)))
 (let (($x1725 (and $x1724 $x1723)))
 (let (($x1726 (= c____________ center-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1350 (left s____________)))
 (let (($x1728 ((_ is stack ) ?x1350)))
 (let (($x1729 (= c____________ left-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let (($x1761 (ite $x1730 $x1744 (ite $x1727 $x1744 (ite $x1725 $x1740 (ite $x1722 $x1741 (ite $x1720 $x1741 $x1744)))))))
 (let ((?x1568 (top ?x1350)))
 (let ((?x1707 (stack ?x1568 ?x1384)))
 (let (($x1736 (= ?x1522 ?x1707)))
 (let (($x1731 (= c____________ left-to-center)))
 (let (($x1732 (and $x1731 $x1728)))
 (ite $x1732 $x1736 $x1761)))))))))))))))))))))))))))))))
(assert
 (let ((?x1570 (center s____________)))
 (let ((?x1708 (center s_____________)))
 (let (($x1746 (= ?x1708 ?x1570)))
 (let ((?x1384 (right s____________)))
 (let ((?x1715 (top ?x1384)))
 (let ((?x1717 (stack ?x1715 ?x1570)))
 (let (($x1743 (= ?x1708 ?x1717)))
 (let (($x1718 ((_ is stack ) ?x1384)))
 (let (($x1719 (= c____________ right-to-center)))
 (let (($x1720 (and $x1719 $x1718)))
 (let (($x1721 (= c____________ right-to-left)))
 (let (($x1722 (and $x1721 $x1718)))
 (let ((?x1710 (rest ?x1570)))
 (let (($x1738 (= ?x1708 ?x1710)))
 (let (($x1723 ((_ is stack ) ?x1570)))
 (let (($x1724 (= c____________ center-to-right)))
 (let (($x1725 (and $x1724 $x1723)))
 (let (($x1726 (= c____________ center-to-left)))
 (let (($x1727 (and $x1726 $x1723)))
 (let ((?x1350 (left s____________)))
 (let ((?x1568 (top ?x1350)))
 (let ((?x1709 (stack ?x1568 ?x1570)))
 (let (($x1737 (= ?x1708 ?x1709)))
 (let (($x1728 ((_ is stack ) ?x1350)))
 (let (($x1729 (= c____________ left-to-right)))
 (let (($x1730 (and $x1729 $x1728)))
 (let (($x1760 (ite $x1730 $x1737 (ite $x1727 $x1738 (ite $x1725 $x1738 (ite $x1722 $x1746 (ite $x1720 $x1743 $x1746)))))))
 (let (($x1731 (= c____________ left-to-center)))
 (let (($x1732 (and $x1731 $x1728)))
 (ite $x1732 $x1746 $x1760)))))))))))))))))))))))))))))))
(assert
 (let ((?x35 (stack C (stack B empty))))
 (let ((?x1522 (right s_____________)))
 (let (($x1764 (= ?x1522 ?x35)))
 (let ((?x33 (stack A (stack D (stack G empty)))))
 (let ((?x1708 (center s_____________)))
 (let (($x1795 (= ?x1708 ?x33)))
 (let ((?x30 (stack E (stack F (stack H empty)))))
 (let ((?x1488 (left s_____________)))
 (let (($x1796 (= ?x1488 ?x30)))
 (let (($x1798 (not (and $x1796 $x1795 $x1764))))
 (not $x1798))))))))))))
(check-sat)
(exit)
