(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x27 (stack N empty)))
 (let ((?x26 (stack I ?x27)))
 (let ((?x28 (stack A ?x26)))
 (let ((?x29 (stack K ?x28)))
 (let ((?x30 (stack C ?x29)))
 (let ((?x31 (stack D ?x30)))
 (let ((?x32 (stack B ?x31)))
 (let ((?x33 (stack F ?x32)))
 (let ((?x34 (stack M ?x33)))
 (let ((?x100 (left s_tmp_)))
 (= ?x100 ?x34))))))))))))
(assert
 (let ((?x35 (stack E empty)))
 (let ((?x36 (stack L ?x35)))
 (let ((?x37 (stack G ?x36)))
 (let ((?x38 (stack H ?x37)))
 (let ((?x103 (center s_tmp__)))
 (= ?x103 ?x38)))))))
(assert
 (let ((?x39 (stack J empty)))
 (let ((?x106 (right s_tmp___)))
 (= ?x106 ?x39))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x133 (left s_tmp__)))
 (= (left s_tmp___) ?x133)))
(assert
 (let ((?x103 (center s_tmp__)))
 (= (center s_tmp___) ?x103)))
(assert
 (let ((?x137 (center s_tmp_)))
 (= ?x137 (center s_tmp))))
(assert
 (let ((?x140 (right s_tmp_)))
 (= ?x140 (right s_tmp))))
(assert
 (let ((?x100 (left s_tmp_)))
 (let ((?x133 (left s_tmp__)))
 (= ?x133 ?x100))))
(assert
 (let ((?x140 (right s_tmp_)))
 (let ((?x144 (right s_tmp__)))
 (= ?x144 ?x140))))
(assert
 (= c__ c!1))
(assert
 (let ((?x77 (left s_)))
 (let ((?x236 (left s__)))
 (let (($x275 (= ?x236 ?x77)))
 (let ((?x80 (right s_)))
 (let (($x245 ((_ is stack ) ?x80)))
 (let (($x248 (= c_ right-to-left)))
 (let (($x249 (and $x248 $x245)))
 (let ((?x82 (center s_)))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x251 (= c_ center-to-right)))
 (let (($x252 (and $x251 $x250)))
 (let (($x253 (= c_ center-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let (($x284 (ite $x254 (= ?x236 (stack (top ?x82) ?x77)) (ite $x252 $x275 (ite $x249 (= ?x236 (stack (top ?x80) ?x77)) $x275)))))
 (let (($x262 (= ?x236 (rest ?x77))))
 (let (($x255 ((_ is stack ) ?x77)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x258 (= c_ left-to-center)))
 (let (($x259 (and $x258 $x255)))
 (ite $x259 $x262 (ite $x257 $x262 $x284)))))))))))))))))))))))
(assert
 (let ((?x80 (right s_)))
 (let ((?x232 (right s__)))
 (let (($x271 (= ?x232 ?x80)))
 (let (($x268 (= ?x232 (rest ?x80))))
 (let (($x245 ((_ is stack ) ?x80)))
 (let (($x246 (= c_ right-to-center)))
 (let (($x247 (and $x246 $x245)))
 (let (($x248 (= c_ right-to-left)))
 (let (($x249 (and $x248 $x245)))
 (let ((?x82 (center s_)))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x251 (= c_ center-to-right)))
 (let (($x252 (and $x251 $x250)))
 (let (($x281 (ite $x252 (= ?x232 (stack (top ?x82) ?x80)) (ite $x249 $x268 (ite $x247 $x268 $x271)))))
 (let (($x253 (= c_ center-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let ((?x77 (left s_)))
 (let (($x255 ((_ is stack ) ?x77)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x258 (= c_ left-to-center)))
 (let (($x259 (and $x258 $x255)))
 (ite $x259 (= ?x232 (stack (top ?x77) ?x80)) (ite $x257 $x271 (ite $x254 $x271 $x281))))))))))))))))))))))))))
(assert
 (let ((?x82 (center s_)))
 (let ((?x238 (center s__)))
 (let (($x273 (= ?x238 ?x82)))
 (let ((?x80 (right s_)))
 (let (($x245 ((_ is stack ) ?x80)))
 (let (($x246 (= c_ right-to-center)))
 (let (($x247 (and $x246 $x245)))
 (let (($x248 (= c_ right-to-left)))
 (let (($x249 (and $x248 $x245)))
 (let (($x265 (= ?x238 (rest ?x82))))
 (let (($x250 ((_ is stack ) ?x82)))
 (let (($x251 (= c_ center-to-right)))
 (let (($x252 (and $x251 $x250)))
 (let (($x280 (ite $x252 $x265 (ite $x249 $x273 (ite $x247 (= ?x238 (stack (top ?x80) ?x82)) $x273)))))
 (let (($x253 (= c_ center-to-left)))
 (let (($x254 (and $x253 $x250)))
 (let ((?x77 (left s_)))
 (let (($x255 ((_ is stack ) ?x77)))
 (let (($x256 (= c_ left-to-right)))
 (let (($x257 (and $x256 $x255)))
 (let (($x258 (= c_ left-to-center)))
 (let (($x259 (and $x258 $x255)))
 (ite $x259 $x273 (ite $x257 (= ?x238 (stack (top ?x77) ?x82)) (ite $x254 $x265 $x280))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x236 (left s__)))
 (let ((?x147 (left s___)))
 (let (($x404 (= ?x147 ?x236)))
 (let ((?x232 (right s__)))
 (let ((?x371 (top ?x232)))
 (let ((?x372 (stack ?x371 ?x236)))
 (let (($x398 (= ?x147 ?x372)))
 (let (($x374 ((_ is stack ) ?x232)))
 (let (($x377 (= c__ right-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x238 (center s__)))
 (let (($x379 ((_ is stack ) ?x238)))
 (let (($x380 (= c__ center-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let ((?x367 (top ?x238)))
 (let ((?x368 (stack ?x367 ?x236)))
 (let (($x395 (= ?x147 ?x368)))
 (let (($x382 (= c__ center-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x149 (rest ?x236)))
 (let (($x391 (= ?x147 ?x149)))
 (let (($x384 ((_ is stack ) ?x236)))
 (let (($x385 (= c__ left-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let (($x387 (= c__ left-to-center)))
 (let (($x388 (and $x387 $x384)))
 (ite $x388 $x391 (ite $x386 $x391 (ite $x383 $x395 (ite $x381 $x404 (ite $x378 $x398 $x404))))))))))))))))))))))))))))))))
(assert
 (let ((?x232 (right s__)))
 (let ((?x150 (right s___)))
 (let (($x400 (= ?x150 ?x232)))
 (let ((?x370 (rest ?x232)))
 (let (($x397 (= ?x150 ?x370)))
 (let (($x374 ((_ is stack ) ?x232)))
 (let (($x375 (= c__ right-to-center)))
 (let (($x376 (and $x375 $x374)))
 (let (($x377 (= c__ right-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x238 (center s__)))
 (let ((?x367 (top ?x238)))
 (let ((?x369 (stack ?x367 ?x232)))
 (let (($x396 (= ?x150 ?x369)))
 (let (($x379 ((_ is stack ) ?x238)))
 (let (($x380 (= c__ center-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let (($x382 (= c__ center-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x236 (left s__)))
 (let (($x384 ((_ is stack ) ?x236)))
 (let (($x385 (= c__ left-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let (($x417 (ite $x386 $x400 (ite $x383 $x400 (ite $x381 $x396 (ite $x378 $x397 (ite $x376 $x397 $x400)))))))
 (let ((?x227 (top ?x236)))
 (let ((?x363 (stack ?x227 ?x232)))
 (let (($x392 (= ?x150 ?x363)))
 (let (($x387 (= c__ left-to-center)))
 (let (($x388 (and $x387 $x384)))
 (ite $x388 $x392 $x417)))))))))))))))))))))))))))))))
(assert
 (let ((?x238 (center s__)))
 (let ((?x364 (center s___)))
 (let (($x402 (= ?x364 ?x238)))
 (let ((?x232 (right s__)))
 (let ((?x371 (top ?x232)))
 (let ((?x373 (stack ?x371 ?x238)))
 (let (($x399 (= ?x364 ?x373)))
 (let (($x374 ((_ is stack ) ?x232)))
 (let (($x375 (= c__ right-to-center)))
 (let (($x376 (and $x375 $x374)))
 (let (($x377 (= c__ right-to-left)))
 (let (($x378 (and $x377 $x374)))
 (let ((?x366 (rest ?x238)))
 (let (($x394 (= ?x364 ?x366)))
 (let (($x379 ((_ is stack ) ?x238)))
 (let (($x380 (= c__ center-to-right)))
 (let (($x381 (and $x380 $x379)))
 (let (($x382 (= c__ center-to-left)))
 (let (($x383 (and $x382 $x379)))
 (let ((?x236 (left s__)))
 (let ((?x227 (top ?x236)))
 (let ((?x365 (stack ?x227 ?x238)))
 (let (($x393 (= ?x364 ?x365)))
 (let (($x384 ((_ is stack ) ?x236)))
 (let (($x385 (= c__ left-to-right)))
 (let (($x386 (and $x385 $x384)))
 (let (($x416 (ite $x386 $x393 (ite $x383 $x394 (ite $x381 $x394 (ite $x378 $x402 (ite $x376 $x399 $x402)))))))
 (let (($x387 (= c__ left-to-center)))
 (let (($x388 (and $x387 $x384)))
 (ite $x388 $x402 $x416)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x147 (left s___)))
 (let ((?x291 (left s____)))
 (let (($x542 (= ?x291 ?x147)))
 (let ((?x150 (right s___)))
 (let ((?x509 (top ?x150)))
 (let ((?x510 (stack ?x509 ?x147)))
 (let (($x536 (= ?x291 ?x510)))
 (let (($x512 ((_ is stack ) ?x150)))
 (let (($x515 (= c___ right-to-left)))
 (let (($x516 (and $x515 $x512)))
 (let ((?x364 (center s___)))
 (let (($x517 ((_ is stack ) ?x364)))
 (let (($x518 (= c___ center-to-right)))
 (let (($x519 (and $x518 $x517)))
 (let ((?x505 (top ?x364)))
 (let ((?x506 (stack ?x505 ?x147)))
 (let (($x533 (= ?x291 ?x506)))
 (let (($x520 (= c___ center-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x335 (rest ?x147)))
 (let (($x529 (= ?x291 ?x335)))
 (let (($x522 ((_ is stack ) ?x147)))
 (let (($x523 (= c___ left-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let (($x525 (= c___ left-to-center)))
 (let (($x526 (and $x525 $x522)))
 (ite $x526 $x529 (ite $x524 $x529 (ite $x521 $x533 (ite $x519 $x542 (ite $x516 $x536 $x542))))))))))))))))))))))))))))))))
(assert
 (let ((?x150 (right s___)))
 (let ((?x336 (right s____)))
 (let (($x538 (= ?x336 ?x150)))
 (let ((?x508 (rest ?x150)))
 (let (($x535 (= ?x336 ?x508)))
 (let (($x512 ((_ is stack ) ?x150)))
 (let (($x513 (= c___ right-to-center)))
 (let (($x514 (and $x513 $x512)))
 (let (($x515 (= c___ right-to-left)))
 (let (($x516 (and $x515 $x512)))
 (let ((?x364 (center s___)))
 (let ((?x505 (top ?x364)))
 (let ((?x507 (stack ?x505 ?x150)))
 (let (($x534 (= ?x336 ?x507)))
 (let (($x517 ((_ is stack ) ?x364)))
 (let (($x518 (= c___ center-to-right)))
 (let (($x519 (and $x518 $x517)))
 (let (($x520 (= c___ center-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x147 (left s___)))
 (let (($x522 ((_ is stack ) ?x147)))
 (let (($x523 (= c___ left-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let (($x555 (ite $x524 $x538 (ite $x521 $x538 (ite $x519 $x534 (ite $x516 $x535 (ite $x514 $x535 $x538)))))))
 (let ((?x362 (top ?x147)))
 (let ((?x501 (stack ?x362 ?x150)))
 (let (($x530 (= ?x336 ?x501)))
 (let (($x525 (= c___ left-to-center)))
 (let (($x526 (and $x525 $x522)))
 (ite $x526 $x530 $x555)))))))))))))))))))))))))))))))
(assert
 (let ((?x364 (center s___)))
 (let ((?x502 (center s____)))
 (let (($x540 (= ?x502 ?x364)))
 (let ((?x150 (right s___)))
 (let ((?x509 (top ?x150)))
 (let ((?x511 (stack ?x509 ?x364)))
 (let (($x537 (= ?x502 ?x511)))
 (let (($x512 ((_ is stack ) ?x150)))
 (let (($x513 (= c___ right-to-center)))
 (let (($x514 (and $x513 $x512)))
 (let (($x515 (= c___ right-to-left)))
 (let (($x516 (and $x515 $x512)))
 (let ((?x504 (rest ?x364)))
 (let (($x532 (= ?x502 ?x504)))
 (let (($x517 ((_ is stack ) ?x364)))
 (let (($x518 (= c___ center-to-right)))
 (let (($x519 (and $x518 $x517)))
 (let (($x520 (= c___ center-to-left)))
 (let (($x521 (and $x520 $x517)))
 (let ((?x147 (left s___)))
 (let ((?x362 (top ?x147)))
 (let ((?x503 (stack ?x362 ?x364)))
 (let (($x531 (= ?x502 ?x503)))
 (let (($x522 ((_ is stack ) ?x147)))
 (let (($x523 (= c___ left-to-right)))
 (let (($x524 (and $x523 $x522)))
 (let (($x554 (ite $x524 $x531 (ite $x521 $x532 (ite $x519 $x532 (ite $x516 $x540 (ite $x514 $x537 $x540)))))))
 (let (($x525 (= c___ left-to-center)))
 (let (($x526 (and $x525 $x522)))
 (ite $x526 $x540 $x554)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x291 (left s____)))
 (let ((?x420 (left s_____)))
 (let (($x680 (= ?x420 ?x291)))
 (let ((?x336 (right s____)))
 (let ((?x647 (top ?x336)))
 (let ((?x648 (stack ?x647 ?x291)))
 (let (($x674 (= ?x420 ?x648)))
 (let (($x650 ((_ is stack ) ?x336)))
 (let (($x653 (= c____ right-to-left)))
 (let (($x654 (and $x653 $x650)))
 (let ((?x502 (center s____)))
 (let (($x655 ((_ is stack ) ?x502)))
 (let (($x656 (= c____ center-to-right)))
 (let (($x657 (and $x656 $x655)))
 (let ((?x643 (top ?x502)))
 (let ((?x644 (stack ?x643 ?x291)))
 (let (($x671 (= ?x420 ?x644)))
 (let (($x658 (= c____ center-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x453 (rest ?x291)))
 (let (($x667 (= ?x420 ?x453)))
 (let (($x660 ((_ is stack ) ?x291)))
 (let (($x661 (= c____ left-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let (($x663 (= c____ left-to-center)))
 (let (($x664 (and $x663 $x660)))
 (ite $x664 $x667 (ite $x662 $x667 (ite $x659 $x671 (ite $x657 $x680 (ite $x654 $x674 $x680))))))))))))))))))))))))))))))))
(assert
 (let ((?x336 (right s____)))
 (let ((?x454 (right s_____)))
 (let (($x676 (= ?x454 ?x336)))
 (let ((?x646 (rest ?x336)))
 (let (($x673 (= ?x454 ?x646)))
 (let (($x650 ((_ is stack ) ?x336)))
 (let (($x651 (= c____ right-to-center)))
 (let (($x652 (and $x651 $x650)))
 (let (($x653 (= c____ right-to-left)))
 (let (($x654 (and $x653 $x650)))
 (let ((?x502 (center s____)))
 (let ((?x643 (top ?x502)))
 (let ((?x645 (stack ?x643 ?x336)))
 (let (($x672 (= ?x454 ?x645)))
 (let (($x655 ((_ is stack ) ?x502)))
 (let (($x656 (= c____ center-to-right)))
 (let (($x657 (and $x656 $x655)))
 (let (($x658 (= c____ center-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x291 (left s____)))
 (let (($x660 ((_ is stack ) ?x291)))
 (let (($x661 (= c____ left-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let (($x693 (ite $x662 $x676 (ite $x659 $x676 (ite $x657 $x672 (ite $x654 $x673 (ite $x652 $x673 $x676)))))))
 (let ((?x500 (top ?x291)))
 (let ((?x639 (stack ?x500 ?x336)))
 (let (($x668 (= ?x454 ?x639)))
 (let (($x663 (= c____ left-to-center)))
 (let (($x664 (and $x663 $x660)))
 (ite $x664 $x668 $x693)))))))))))))))))))))))))))))))
(assert
 (let ((?x502 (center s____)))
 (let ((?x640 (center s_____)))
 (let (($x678 (= ?x640 ?x502)))
 (let ((?x336 (right s____)))
 (let ((?x647 (top ?x336)))
 (let ((?x649 (stack ?x647 ?x502)))
 (let (($x675 (= ?x640 ?x649)))
 (let (($x650 ((_ is stack ) ?x336)))
 (let (($x651 (= c____ right-to-center)))
 (let (($x652 (and $x651 $x650)))
 (let (($x653 (= c____ right-to-left)))
 (let (($x654 (and $x653 $x650)))
 (let ((?x642 (rest ?x502)))
 (let (($x670 (= ?x640 ?x642)))
 (let (($x655 ((_ is stack ) ?x502)))
 (let (($x656 (= c____ center-to-right)))
 (let (($x657 (and $x656 $x655)))
 (let (($x658 (= c____ center-to-left)))
 (let (($x659 (and $x658 $x655)))
 (let ((?x291 (left s____)))
 (let ((?x500 (top ?x291)))
 (let ((?x641 (stack ?x500 ?x502)))
 (let (($x669 (= ?x640 ?x641)))
 (let (($x660 ((_ is stack ) ?x291)))
 (let (($x661 (= c____ left-to-right)))
 (let (($x662 (and $x661 $x660)))
 (let (($x692 (ite $x662 $x669 (ite $x659 $x670 (ite $x657 $x670 (ite $x654 $x678 (ite $x652 $x675 $x678)))))))
 (let (($x663 (= c____ left-to-center)))
 (let (($x664 (and $x663 $x660)))
 (ite $x664 $x678 $x692)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x420 (left s_____)))
 (let ((?x558 (left s______)))
 (let (($x818 (= ?x558 ?x420)))
 (let ((?x454 (right s_____)))
 (let ((?x785 (top ?x454)))
 (let ((?x786 (stack ?x785 ?x420)))
 (let (($x812 (= ?x558 ?x786)))
 (let (($x788 ((_ is stack ) ?x454)))
 (let (($x791 (= c_____ right-to-left)))
 (let (($x792 (and $x791 $x788)))
 (let ((?x640 (center s_____)))
 (let (($x793 ((_ is stack ) ?x640)))
 (let (($x794 (= c_____ center-to-right)))
 (let (($x795 (and $x794 $x793)))
 (let ((?x781 (top ?x640)))
 (let ((?x782 (stack ?x781 ?x420)))
 (let (($x809 (= ?x558 ?x782)))
 (let (($x796 (= c_____ center-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x591 (rest ?x420)))
 (let (($x805 (= ?x558 ?x591)))
 (let (($x798 ((_ is stack ) ?x420)))
 (let (($x799 (= c_____ left-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let (($x801 (= c_____ left-to-center)))
 (let (($x802 (and $x801 $x798)))
 (ite $x802 $x805 (ite $x800 $x805 (ite $x797 $x809 (ite $x795 $x818 (ite $x792 $x812 $x818))))))))))))))))))))))))))))))))
(assert
 (let ((?x454 (right s_____)))
 (let ((?x592 (right s______)))
 (let (($x814 (= ?x592 ?x454)))
 (let ((?x784 (rest ?x454)))
 (let (($x811 (= ?x592 ?x784)))
 (let (($x788 ((_ is stack ) ?x454)))
 (let (($x789 (= c_____ right-to-center)))
 (let (($x790 (and $x789 $x788)))
 (let (($x791 (= c_____ right-to-left)))
 (let (($x792 (and $x791 $x788)))
 (let ((?x640 (center s_____)))
 (let ((?x781 (top ?x640)))
 (let ((?x783 (stack ?x781 ?x454)))
 (let (($x810 (= ?x592 ?x783)))
 (let (($x793 ((_ is stack ) ?x640)))
 (let (($x794 (= c_____ center-to-right)))
 (let (($x795 (and $x794 $x793)))
 (let (($x796 (= c_____ center-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x420 (left s_____)))
 (let (($x798 ((_ is stack ) ?x420)))
 (let (($x799 (= c_____ left-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let (($x831 (ite $x800 $x814 (ite $x797 $x814 (ite $x795 $x810 (ite $x792 $x811 (ite $x790 $x811 $x814)))))))
 (let ((?x638 (top ?x420)))
 (let ((?x777 (stack ?x638 ?x454)))
 (let (($x806 (= ?x592 ?x777)))
 (let (($x801 (= c_____ left-to-center)))
 (let (($x802 (and $x801 $x798)))
 (ite $x802 $x806 $x831)))))))))))))))))))))))))))))))
(assert
 (let ((?x640 (center s_____)))
 (let ((?x778 (center s______)))
 (let (($x816 (= ?x778 ?x640)))
 (let ((?x454 (right s_____)))
 (let ((?x785 (top ?x454)))
 (let ((?x787 (stack ?x785 ?x640)))
 (let (($x813 (= ?x778 ?x787)))
 (let (($x788 ((_ is stack ) ?x454)))
 (let (($x789 (= c_____ right-to-center)))
 (let (($x790 (and $x789 $x788)))
 (let (($x791 (= c_____ right-to-left)))
 (let (($x792 (and $x791 $x788)))
 (let ((?x780 (rest ?x640)))
 (let (($x808 (= ?x778 ?x780)))
 (let (($x793 ((_ is stack ) ?x640)))
 (let (($x794 (= c_____ center-to-right)))
 (let (($x795 (and $x794 $x793)))
 (let (($x796 (= c_____ center-to-left)))
 (let (($x797 (and $x796 $x793)))
 (let ((?x420 (left s_____)))
 (let ((?x638 (top ?x420)))
 (let ((?x779 (stack ?x638 ?x640)))
 (let (($x807 (= ?x778 ?x779)))
 (let (($x798 ((_ is stack ) ?x420)))
 (let (($x799 (= c_____ left-to-right)))
 (let (($x800 (and $x799 $x798)))
 (let (($x830 (ite $x800 $x807 (ite $x797 $x808 (ite $x795 $x808 (ite $x792 $x816 (ite $x790 $x813 $x816)))))))
 (let (($x801 (= c_____ left-to-center)))
 (let (($x802 (and $x801 $x798)))
 (ite $x802 $x816 $x830)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x558 (left s______)))
 (let ((?x696 (left s_______)))
 (let (($x956 (= ?x696 ?x558)))
 (let ((?x592 (right s______)))
 (let ((?x923 (top ?x592)))
 (let ((?x924 (stack ?x923 ?x558)))
 (let (($x950 (= ?x696 ?x924)))
 (let (($x926 ((_ is stack ) ?x592)))
 (let (($x929 (= c______ right-to-left)))
 (let (($x930 (and $x929 $x926)))
 (let ((?x778 (center s______)))
 (let (($x931 ((_ is stack ) ?x778)))
 (let (($x932 (= c______ center-to-right)))
 (let (($x933 (and $x932 $x931)))
 (let ((?x919 (top ?x778)))
 (let ((?x920 (stack ?x919 ?x558)))
 (let (($x947 (= ?x696 ?x920)))
 (let (($x934 (= c______ center-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x729 (rest ?x558)))
 (let (($x943 (= ?x696 ?x729)))
 (let (($x936 ((_ is stack ) ?x558)))
 (let (($x937 (= c______ left-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let (($x939 (= c______ left-to-center)))
 (let (($x940 (and $x939 $x936)))
 (ite $x940 $x943 (ite $x938 $x943 (ite $x935 $x947 (ite $x933 $x956 (ite $x930 $x950 $x956))))))))))))))))))))))))))))))))
(assert
 (let ((?x592 (right s______)))
 (let ((?x730 (right s_______)))
 (let (($x952 (= ?x730 ?x592)))
 (let ((?x922 (rest ?x592)))
 (let (($x949 (= ?x730 ?x922)))
 (let (($x926 ((_ is stack ) ?x592)))
 (let (($x927 (= c______ right-to-center)))
 (let (($x928 (and $x927 $x926)))
 (let (($x929 (= c______ right-to-left)))
 (let (($x930 (and $x929 $x926)))
 (let ((?x778 (center s______)))
 (let ((?x919 (top ?x778)))
 (let ((?x921 (stack ?x919 ?x592)))
 (let (($x948 (= ?x730 ?x921)))
 (let (($x931 ((_ is stack ) ?x778)))
 (let (($x932 (= c______ center-to-right)))
 (let (($x933 (and $x932 $x931)))
 (let (($x934 (= c______ center-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x558 (left s______)))
 (let (($x936 ((_ is stack ) ?x558)))
 (let (($x937 (= c______ left-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let (($x969 (ite $x938 $x952 (ite $x935 $x952 (ite $x933 $x948 (ite $x930 $x949 (ite $x928 $x949 $x952)))))))
 (let ((?x776 (top ?x558)))
 (let ((?x915 (stack ?x776 ?x592)))
 (let (($x944 (= ?x730 ?x915)))
 (let (($x939 (= c______ left-to-center)))
 (let (($x940 (and $x939 $x936)))
 (ite $x940 $x944 $x969)))))))))))))))))))))))))))))))
(assert
 (let ((?x778 (center s______)))
 (let ((?x916 (center s_______)))
 (let (($x954 (= ?x916 ?x778)))
 (let ((?x592 (right s______)))
 (let ((?x923 (top ?x592)))
 (let ((?x925 (stack ?x923 ?x778)))
 (let (($x951 (= ?x916 ?x925)))
 (let (($x926 ((_ is stack ) ?x592)))
 (let (($x927 (= c______ right-to-center)))
 (let (($x928 (and $x927 $x926)))
 (let (($x929 (= c______ right-to-left)))
 (let (($x930 (and $x929 $x926)))
 (let ((?x918 (rest ?x778)))
 (let (($x946 (= ?x916 ?x918)))
 (let (($x931 ((_ is stack ) ?x778)))
 (let (($x932 (= c______ center-to-right)))
 (let (($x933 (and $x932 $x931)))
 (let (($x934 (= c______ center-to-left)))
 (let (($x935 (and $x934 $x931)))
 (let ((?x558 (left s______)))
 (let ((?x776 (top ?x558)))
 (let ((?x917 (stack ?x776 ?x778)))
 (let (($x945 (= ?x916 ?x917)))
 (let (($x936 ((_ is stack ) ?x558)))
 (let (($x937 (= c______ left-to-right)))
 (let (($x938 (and $x937 $x936)))
 (let (($x968 (ite $x938 $x945 (ite $x935 $x946 (ite $x933 $x946 (ite $x930 $x954 (ite $x928 $x951 $x954)))))))
 (let (($x939 (= c______ left-to-center)))
 (let (($x940 (and $x939 $x936)))
 (ite $x940 $x954 $x968)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x696 (left s_______)))
 (let ((?x834 (left s________)))
 (let (($x1094 (= ?x834 ?x696)))
 (let ((?x730 (right s_______)))
 (let ((?x1061 (top ?x730)))
 (let ((?x1062 (stack ?x1061 ?x696)))
 (let (($x1088 (= ?x834 ?x1062)))
 (let (($x1064 ((_ is stack ) ?x730)))
 (let (($x1067 (= c_______ right-to-left)))
 (let (($x1068 (and $x1067 $x1064)))
 (let ((?x916 (center s_______)))
 (let (($x1069 ((_ is stack ) ?x916)))
 (let (($x1070 (= c_______ center-to-right)))
 (let (($x1071 (and $x1070 $x1069)))
 (let ((?x1057 (top ?x916)))
 (let ((?x1058 (stack ?x1057 ?x696)))
 (let (($x1085 (= ?x834 ?x1058)))
 (let (($x1072 (= c_______ center-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x867 (rest ?x696)))
 (let (($x1081 (= ?x834 ?x867)))
 (let (($x1074 ((_ is stack ) ?x696)))
 (let (($x1075 (= c_______ left-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1077 (= c_______ left-to-center)))
 (let (($x1078 (and $x1077 $x1074)))
 (ite $x1078 $x1081 (ite $x1076 $x1081 (ite $x1073 $x1085 (ite $x1071 $x1094 (ite $x1068 $x1088 $x1094))))))))))))))))))))))))))))))))
(assert
 (let ((?x730 (right s_______)))
 (let ((?x868 (right s________)))
 (let (($x1090 (= ?x868 ?x730)))
 (let ((?x1060 (rest ?x730)))
 (let (($x1087 (= ?x868 ?x1060)))
 (let (($x1064 ((_ is stack ) ?x730)))
 (let (($x1065 (= c_______ right-to-center)))
 (let (($x1066 (and $x1065 $x1064)))
 (let (($x1067 (= c_______ right-to-left)))
 (let (($x1068 (and $x1067 $x1064)))
 (let ((?x916 (center s_______)))
 (let ((?x1057 (top ?x916)))
 (let ((?x1059 (stack ?x1057 ?x730)))
 (let (($x1086 (= ?x868 ?x1059)))
 (let (($x1069 ((_ is stack ) ?x916)))
 (let (($x1070 (= c_______ center-to-right)))
 (let (($x1071 (and $x1070 $x1069)))
 (let (($x1072 (= c_______ center-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x696 (left s_______)))
 (let (($x1074 ((_ is stack ) ?x696)))
 (let (($x1075 (= c_______ left-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1107 (ite $x1076 $x1090 (ite $x1073 $x1090 (ite $x1071 $x1086 (ite $x1068 $x1087 (ite $x1066 $x1087 $x1090)))))))
 (let ((?x914 (top ?x696)))
 (let ((?x1053 (stack ?x914 ?x730)))
 (let (($x1082 (= ?x868 ?x1053)))
 (let (($x1077 (= c_______ left-to-center)))
 (let (($x1078 (and $x1077 $x1074)))
 (ite $x1078 $x1082 $x1107)))))))))))))))))))))))))))))))
(assert
 (let ((?x916 (center s_______)))
 (let ((?x1054 (center s________)))
 (let (($x1092 (= ?x1054 ?x916)))
 (let ((?x730 (right s_______)))
 (let ((?x1061 (top ?x730)))
 (let ((?x1063 (stack ?x1061 ?x916)))
 (let (($x1089 (= ?x1054 ?x1063)))
 (let (($x1064 ((_ is stack ) ?x730)))
 (let (($x1065 (= c_______ right-to-center)))
 (let (($x1066 (and $x1065 $x1064)))
 (let (($x1067 (= c_______ right-to-left)))
 (let (($x1068 (and $x1067 $x1064)))
 (let ((?x1056 (rest ?x916)))
 (let (($x1084 (= ?x1054 ?x1056)))
 (let (($x1069 ((_ is stack ) ?x916)))
 (let (($x1070 (= c_______ center-to-right)))
 (let (($x1071 (and $x1070 $x1069)))
 (let (($x1072 (= c_______ center-to-left)))
 (let (($x1073 (and $x1072 $x1069)))
 (let ((?x696 (left s_______)))
 (let ((?x914 (top ?x696)))
 (let ((?x1055 (stack ?x914 ?x916)))
 (let (($x1083 (= ?x1054 ?x1055)))
 (let (($x1074 ((_ is stack ) ?x696)))
 (let (($x1075 (= c_______ left-to-right)))
 (let (($x1076 (and $x1075 $x1074)))
 (let (($x1106 (ite $x1076 $x1083 (ite $x1073 $x1084 (ite $x1071 $x1084 (ite $x1068 $x1092 (ite $x1066 $x1089 $x1092)))))))
 (let (($x1077 (= c_______ left-to-center)))
 (let (($x1078 (and $x1077 $x1074)))
 (ite $x1078 $x1092 $x1106)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x834 (left s________)))
 (let ((?x972 (left s_________)))
 (let (($x1232 (= ?x972 ?x834)))
 (let ((?x868 (right s________)))
 (let ((?x1199 (top ?x868)))
 (let ((?x1200 (stack ?x1199 ?x834)))
 (let (($x1226 (= ?x972 ?x1200)))
 (let (($x1202 ((_ is stack ) ?x868)))
 (let (($x1205 (= c________ right-to-left)))
 (let (($x1206 (and $x1205 $x1202)))
 (let ((?x1054 (center s________)))
 (let (($x1207 ((_ is stack ) ?x1054)))
 (let (($x1208 (= c________ center-to-right)))
 (let (($x1209 (and $x1208 $x1207)))
 (let ((?x1195 (top ?x1054)))
 (let ((?x1196 (stack ?x1195 ?x834)))
 (let (($x1223 (= ?x972 ?x1196)))
 (let (($x1210 (= c________ center-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x1005 (rest ?x834)))
 (let (($x1219 (= ?x972 ?x1005)))
 (let (($x1212 ((_ is stack ) ?x834)))
 (let (($x1213 (= c________ left-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1215 (= c________ left-to-center)))
 (let (($x1216 (and $x1215 $x1212)))
 (ite $x1216 $x1219 (ite $x1214 $x1219 (ite $x1211 $x1223 (ite $x1209 $x1232 (ite $x1206 $x1226 $x1232))))))))))))))))))))))))))))))))
(assert
 (let ((?x868 (right s________)))
 (let ((?x1006 (right s_________)))
 (let (($x1228 (= ?x1006 ?x868)))
 (let ((?x1198 (rest ?x868)))
 (let (($x1225 (= ?x1006 ?x1198)))
 (let (($x1202 ((_ is stack ) ?x868)))
 (let (($x1203 (= c________ right-to-center)))
 (let (($x1204 (and $x1203 $x1202)))
 (let (($x1205 (= c________ right-to-left)))
 (let (($x1206 (and $x1205 $x1202)))
 (let ((?x1054 (center s________)))
 (let ((?x1195 (top ?x1054)))
 (let ((?x1197 (stack ?x1195 ?x868)))
 (let (($x1224 (= ?x1006 ?x1197)))
 (let (($x1207 ((_ is stack ) ?x1054)))
 (let (($x1208 (= c________ center-to-right)))
 (let (($x1209 (and $x1208 $x1207)))
 (let (($x1210 (= c________ center-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x834 (left s________)))
 (let (($x1212 ((_ is stack ) ?x834)))
 (let (($x1213 (= c________ left-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1245 (ite $x1214 $x1228 (ite $x1211 $x1228 (ite $x1209 $x1224 (ite $x1206 $x1225 (ite $x1204 $x1225 $x1228)))))))
 (let ((?x1052 (top ?x834)))
 (let ((?x1191 (stack ?x1052 ?x868)))
 (let (($x1220 (= ?x1006 ?x1191)))
 (let (($x1215 (= c________ left-to-center)))
 (let (($x1216 (and $x1215 $x1212)))
 (ite $x1216 $x1220 $x1245)))))))))))))))))))))))))))))))
(assert
 (let ((?x1054 (center s________)))
 (let ((?x1192 (center s_________)))
 (let (($x1230 (= ?x1192 ?x1054)))
 (let ((?x868 (right s________)))
 (let ((?x1199 (top ?x868)))
 (let ((?x1201 (stack ?x1199 ?x1054)))
 (let (($x1227 (= ?x1192 ?x1201)))
 (let (($x1202 ((_ is stack ) ?x868)))
 (let (($x1203 (= c________ right-to-center)))
 (let (($x1204 (and $x1203 $x1202)))
 (let (($x1205 (= c________ right-to-left)))
 (let (($x1206 (and $x1205 $x1202)))
 (let ((?x1194 (rest ?x1054)))
 (let (($x1222 (= ?x1192 ?x1194)))
 (let (($x1207 ((_ is stack ) ?x1054)))
 (let (($x1208 (= c________ center-to-right)))
 (let (($x1209 (and $x1208 $x1207)))
 (let (($x1210 (= c________ center-to-left)))
 (let (($x1211 (and $x1210 $x1207)))
 (let ((?x834 (left s________)))
 (let ((?x1052 (top ?x834)))
 (let ((?x1193 (stack ?x1052 ?x1054)))
 (let (($x1221 (= ?x1192 ?x1193)))
 (let (($x1212 ((_ is stack ) ?x834)))
 (let (($x1213 (= c________ left-to-right)))
 (let (($x1214 (and $x1213 $x1212)))
 (let (($x1244 (ite $x1214 $x1221 (ite $x1211 $x1222 (ite $x1209 $x1222 (ite $x1206 $x1230 (ite $x1204 $x1227 $x1230)))))))
 (let (($x1215 (= c________ left-to-center)))
 (let (($x1216 (and $x1215 $x1212)))
 (ite $x1216 $x1230 $x1244)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x972 (left s_________)))
 (let ((?x1110 (left s__________)))
 (let (($x1370 (= ?x1110 ?x972)))
 (let ((?x1006 (right s_________)))
 (let ((?x1337 (top ?x1006)))
 (let ((?x1338 (stack ?x1337 ?x972)))
 (let (($x1364 (= ?x1110 ?x1338)))
 (let (($x1340 ((_ is stack ) ?x1006)))
 (let (($x1343 (= c_________ right-to-left)))
 (let (($x1344 (and $x1343 $x1340)))
 (let ((?x1192 (center s_________)))
 (let (($x1345 ((_ is stack ) ?x1192)))
 (let (($x1346 (= c_________ center-to-right)))
 (let (($x1347 (and $x1346 $x1345)))
 (let ((?x1333 (top ?x1192)))
 (let ((?x1334 (stack ?x1333 ?x972)))
 (let (($x1361 (= ?x1110 ?x1334)))
 (let (($x1348 (= c_________ center-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x1143 (rest ?x972)))
 (let (($x1357 (= ?x1110 ?x1143)))
 (let (($x1350 ((_ is stack ) ?x972)))
 (let (($x1351 (= c_________ left-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1353 (= c_________ left-to-center)))
 (let (($x1354 (and $x1353 $x1350)))
 (ite $x1354 $x1357 (ite $x1352 $x1357 (ite $x1349 $x1361 (ite $x1347 $x1370 (ite $x1344 $x1364 $x1370))))))))))))))))))))))))))))))))
(assert
 (let ((?x1006 (right s_________)))
 (let ((?x1144 (right s__________)))
 (let (($x1366 (= ?x1144 ?x1006)))
 (let ((?x1336 (rest ?x1006)))
 (let (($x1363 (= ?x1144 ?x1336)))
 (let (($x1340 ((_ is stack ) ?x1006)))
 (let (($x1341 (= c_________ right-to-center)))
 (let (($x1342 (and $x1341 $x1340)))
 (let (($x1343 (= c_________ right-to-left)))
 (let (($x1344 (and $x1343 $x1340)))
 (let ((?x1192 (center s_________)))
 (let ((?x1333 (top ?x1192)))
 (let ((?x1335 (stack ?x1333 ?x1006)))
 (let (($x1362 (= ?x1144 ?x1335)))
 (let (($x1345 ((_ is stack ) ?x1192)))
 (let (($x1346 (= c_________ center-to-right)))
 (let (($x1347 (and $x1346 $x1345)))
 (let (($x1348 (= c_________ center-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x972 (left s_________)))
 (let (($x1350 ((_ is stack ) ?x972)))
 (let (($x1351 (= c_________ left-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1383 (ite $x1352 $x1366 (ite $x1349 $x1366 (ite $x1347 $x1362 (ite $x1344 $x1363 (ite $x1342 $x1363 $x1366)))))))
 (let ((?x1190 (top ?x972)))
 (let ((?x1329 (stack ?x1190 ?x1006)))
 (let (($x1358 (= ?x1144 ?x1329)))
 (let (($x1353 (= c_________ left-to-center)))
 (let (($x1354 (and $x1353 $x1350)))
 (ite $x1354 $x1358 $x1383)))))))))))))))))))))))))))))))
(assert
 (let ((?x1192 (center s_________)))
 (let ((?x1330 (center s__________)))
 (let (($x1368 (= ?x1330 ?x1192)))
 (let ((?x1006 (right s_________)))
 (let ((?x1337 (top ?x1006)))
 (let ((?x1339 (stack ?x1337 ?x1192)))
 (let (($x1365 (= ?x1330 ?x1339)))
 (let (($x1340 ((_ is stack ) ?x1006)))
 (let (($x1341 (= c_________ right-to-center)))
 (let (($x1342 (and $x1341 $x1340)))
 (let (($x1343 (= c_________ right-to-left)))
 (let (($x1344 (and $x1343 $x1340)))
 (let ((?x1332 (rest ?x1192)))
 (let (($x1360 (= ?x1330 ?x1332)))
 (let (($x1345 ((_ is stack ) ?x1192)))
 (let (($x1346 (= c_________ center-to-right)))
 (let (($x1347 (and $x1346 $x1345)))
 (let (($x1348 (= c_________ center-to-left)))
 (let (($x1349 (and $x1348 $x1345)))
 (let ((?x972 (left s_________)))
 (let ((?x1190 (top ?x972)))
 (let ((?x1331 (stack ?x1190 ?x1192)))
 (let (($x1359 (= ?x1330 ?x1331)))
 (let (($x1350 ((_ is stack ) ?x972)))
 (let (($x1351 (= c_________ left-to-right)))
 (let (($x1352 (and $x1351 $x1350)))
 (let (($x1382 (ite $x1352 $x1359 (ite $x1349 $x1360 (ite $x1347 $x1360 (ite $x1344 $x1368 (ite $x1342 $x1365 $x1368)))))))
 (let (($x1353 (= c_________ left-to-center)))
 (let (($x1354 (and $x1353 $x1350)))
 (ite $x1354 $x1368 $x1382)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1110 (left s__________)))
 (let ((?x1248 (left s___________)))
 (let (($x1508 (= ?x1248 ?x1110)))
 (let ((?x1144 (right s__________)))
 (let ((?x1475 (top ?x1144)))
 (let ((?x1476 (stack ?x1475 ?x1110)))
 (let (($x1502 (= ?x1248 ?x1476)))
 (let (($x1478 ((_ is stack ) ?x1144)))
 (let (($x1481 (= c__________ right-to-left)))
 (let (($x1482 (and $x1481 $x1478)))
 (let ((?x1330 (center s__________)))
 (let (($x1483 ((_ is stack ) ?x1330)))
 (let (($x1484 (= c__________ center-to-right)))
 (let (($x1485 (and $x1484 $x1483)))
 (let ((?x1471 (top ?x1330)))
 (let ((?x1472 (stack ?x1471 ?x1110)))
 (let (($x1499 (= ?x1248 ?x1472)))
 (let (($x1486 (= c__________ center-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1281 (rest ?x1110)))
 (let (($x1495 (= ?x1248 ?x1281)))
 (let (($x1488 ((_ is stack ) ?x1110)))
 (let (($x1489 (= c__________ left-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1491 (= c__________ left-to-center)))
 (let (($x1492 (and $x1491 $x1488)))
 (ite $x1492 $x1495 (ite $x1490 $x1495 (ite $x1487 $x1499 (ite $x1485 $x1508 (ite $x1482 $x1502 $x1508))))))))))))))))))))))))))))))))
(assert
 (let ((?x1144 (right s__________)))
 (let ((?x1282 (right s___________)))
 (let (($x1504 (= ?x1282 ?x1144)))
 (let ((?x1474 (rest ?x1144)))
 (let (($x1501 (= ?x1282 ?x1474)))
 (let (($x1478 ((_ is stack ) ?x1144)))
 (let (($x1479 (= c__________ right-to-center)))
 (let (($x1480 (and $x1479 $x1478)))
 (let (($x1481 (= c__________ right-to-left)))
 (let (($x1482 (and $x1481 $x1478)))
 (let ((?x1330 (center s__________)))
 (let ((?x1471 (top ?x1330)))
 (let ((?x1473 (stack ?x1471 ?x1144)))
 (let (($x1500 (= ?x1282 ?x1473)))
 (let (($x1483 ((_ is stack ) ?x1330)))
 (let (($x1484 (= c__________ center-to-right)))
 (let (($x1485 (and $x1484 $x1483)))
 (let (($x1486 (= c__________ center-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1110 (left s__________)))
 (let (($x1488 ((_ is stack ) ?x1110)))
 (let (($x1489 (= c__________ left-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1521 (ite $x1490 $x1504 (ite $x1487 $x1504 (ite $x1485 $x1500 (ite $x1482 $x1501 (ite $x1480 $x1501 $x1504)))))))
 (let ((?x1328 (top ?x1110)))
 (let ((?x1467 (stack ?x1328 ?x1144)))
 (let (($x1496 (= ?x1282 ?x1467)))
 (let (($x1491 (= c__________ left-to-center)))
 (let (($x1492 (and $x1491 $x1488)))
 (ite $x1492 $x1496 $x1521)))))))))))))))))))))))))))))))
(assert
 (let ((?x1330 (center s__________)))
 (let ((?x1468 (center s___________)))
 (let (($x1506 (= ?x1468 ?x1330)))
 (let ((?x1144 (right s__________)))
 (let ((?x1475 (top ?x1144)))
 (let ((?x1477 (stack ?x1475 ?x1330)))
 (let (($x1503 (= ?x1468 ?x1477)))
 (let (($x1478 ((_ is stack ) ?x1144)))
 (let (($x1479 (= c__________ right-to-center)))
 (let (($x1480 (and $x1479 $x1478)))
 (let (($x1481 (= c__________ right-to-left)))
 (let (($x1482 (and $x1481 $x1478)))
 (let ((?x1470 (rest ?x1330)))
 (let (($x1498 (= ?x1468 ?x1470)))
 (let (($x1483 ((_ is stack ) ?x1330)))
 (let (($x1484 (= c__________ center-to-right)))
 (let (($x1485 (and $x1484 $x1483)))
 (let (($x1486 (= c__________ center-to-left)))
 (let (($x1487 (and $x1486 $x1483)))
 (let ((?x1110 (left s__________)))
 (let ((?x1328 (top ?x1110)))
 (let ((?x1469 (stack ?x1328 ?x1330)))
 (let (($x1497 (= ?x1468 ?x1469)))
 (let (($x1488 ((_ is stack ) ?x1110)))
 (let (($x1489 (= c__________ left-to-right)))
 (let (($x1490 (and $x1489 $x1488)))
 (let (($x1520 (ite $x1490 $x1497 (ite $x1487 $x1498 (ite $x1485 $x1498 (ite $x1482 $x1506 (ite $x1480 $x1503 $x1506)))))))
 (let (($x1491 (= c__________ left-to-center)))
 (let (($x1492 (and $x1491 $x1488)))
 (ite $x1492 $x1506 $x1520)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1248 (left s___________)))
 (let ((?x1386 (left s____________)))
 (let (($x1646 (= ?x1386 ?x1248)))
 (let ((?x1282 (right s___________)))
 (let ((?x1613 (top ?x1282)))
 (let ((?x1614 (stack ?x1613 ?x1248)))
 (let (($x1640 (= ?x1386 ?x1614)))
 (let (($x1616 ((_ is stack ) ?x1282)))
 (let (($x1619 (= c___________ right-to-left)))
 (let (($x1620 (and $x1619 $x1616)))
 (let ((?x1468 (center s___________)))
 (let (($x1621 ((_ is stack ) ?x1468)))
 (let (($x1622 (= c___________ center-to-right)))
 (let (($x1623 (and $x1622 $x1621)))
 (let ((?x1609 (top ?x1468)))
 (let ((?x1610 (stack ?x1609 ?x1248)))
 (let (($x1637 (= ?x1386 ?x1610)))
 (let (($x1624 (= c___________ center-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1419 (rest ?x1248)))
 (let (($x1633 (= ?x1386 ?x1419)))
 (let (($x1626 ((_ is stack ) ?x1248)))
 (let (($x1627 (= c___________ left-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1629 (= c___________ left-to-center)))
 (let (($x1630 (and $x1629 $x1626)))
 (ite $x1630 $x1633 (ite $x1628 $x1633 (ite $x1625 $x1637 (ite $x1623 $x1646 (ite $x1620 $x1640 $x1646))))))))))))))))))))))))))))))))
(assert
 (let ((?x1282 (right s___________)))
 (let ((?x1420 (right s____________)))
 (let (($x1642 (= ?x1420 ?x1282)))
 (let ((?x1612 (rest ?x1282)))
 (let (($x1639 (= ?x1420 ?x1612)))
 (let (($x1616 ((_ is stack ) ?x1282)))
 (let (($x1617 (= c___________ right-to-center)))
 (let (($x1618 (and $x1617 $x1616)))
 (let (($x1619 (= c___________ right-to-left)))
 (let (($x1620 (and $x1619 $x1616)))
 (let ((?x1468 (center s___________)))
 (let ((?x1609 (top ?x1468)))
 (let ((?x1611 (stack ?x1609 ?x1282)))
 (let (($x1638 (= ?x1420 ?x1611)))
 (let (($x1621 ((_ is stack ) ?x1468)))
 (let (($x1622 (= c___________ center-to-right)))
 (let (($x1623 (and $x1622 $x1621)))
 (let (($x1624 (= c___________ center-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1248 (left s___________)))
 (let (($x1626 ((_ is stack ) ?x1248)))
 (let (($x1627 (= c___________ left-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1659 (ite $x1628 $x1642 (ite $x1625 $x1642 (ite $x1623 $x1638 (ite $x1620 $x1639 (ite $x1618 $x1639 $x1642)))))))
 (let ((?x1466 (top ?x1248)))
 (let ((?x1605 (stack ?x1466 ?x1282)))
 (let (($x1634 (= ?x1420 ?x1605)))
 (let (($x1629 (= c___________ left-to-center)))
 (let (($x1630 (and $x1629 $x1626)))
 (ite $x1630 $x1634 $x1659)))))))))))))))))))))))))))))))
(assert
 (let ((?x1468 (center s___________)))
 (let ((?x1606 (center s____________)))
 (let (($x1644 (= ?x1606 ?x1468)))
 (let ((?x1282 (right s___________)))
 (let ((?x1613 (top ?x1282)))
 (let ((?x1615 (stack ?x1613 ?x1468)))
 (let (($x1641 (= ?x1606 ?x1615)))
 (let (($x1616 ((_ is stack ) ?x1282)))
 (let (($x1617 (= c___________ right-to-center)))
 (let (($x1618 (and $x1617 $x1616)))
 (let (($x1619 (= c___________ right-to-left)))
 (let (($x1620 (and $x1619 $x1616)))
 (let ((?x1608 (rest ?x1468)))
 (let (($x1636 (= ?x1606 ?x1608)))
 (let (($x1621 ((_ is stack ) ?x1468)))
 (let (($x1622 (= c___________ center-to-right)))
 (let (($x1623 (and $x1622 $x1621)))
 (let (($x1624 (= c___________ center-to-left)))
 (let (($x1625 (and $x1624 $x1621)))
 (let ((?x1248 (left s___________)))
 (let ((?x1466 (top ?x1248)))
 (let ((?x1607 (stack ?x1466 ?x1468)))
 (let (($x1635 (= ?x1606 ?x1607)))
 (let (($x1626 ((_ is stack ) ?x1248)))
 (let (($x1627 (= c___________ left-to-right)))
 (let (($x1628 (and $x1627 $x1626)))
 (let (($x1658 (ite $x1628 $x1635 (ite $x1625 $x1636 (ite $x1623 $x1636 (ite $x1620 $x1644 (ite $x1618 $x1641 $x1644)))))))
 (let (($x1629 (= c___________ left-to-center)))
 (let (($x1630 (and $x1629 $x1626)))
 (ite $x1630 $x1644 $x1658)))))))))))))))))))))))))))))))
(assert
 (let ((?x53 (stack K empty)))
 (let ((?x1420 (right s____________)))
 (let (($x1662 (= ?x1420 ?x53)))
 (let ((?x45 (stack F (stack M (stack N (stack I (stack G (stack L empty))))))))
 (let ((?x51 (stack B (stack E (stack D (stack H (stack C (stack J ?x45))))))))
 (let ((?x52 (stack A ?x51)))
 (let ((?x1606 (center s____________)))
 (let (($x1693 (= ?x1606 ?x52)))
 (let ((?x1386 (left s____________)))
 (let (($x1694 (= ?x1386 empty)))
 (let (($x1696 (not (and $x1694 $x1693 $x1662))))
 (not $x1696)))))))))))))
(check-sat)
(exit)
