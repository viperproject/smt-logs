(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K) (L) (M) (N) (O) (P) (Q) (R) (S))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_P_Q_R_S) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x115 (left s_tmp_)))
 (= ?x115 empty)))
(assert
 (let ((?x32 (stack O empty)))
 (let ((?x31 (stack S ?x32)))
 (let ((?x33 (stack C ?x31)))
 (let ((?x34 (stack D ?x33)))
 (let ((?x35 (stack F ?x34)))
 (let ((?x36 (stack A ?x35)))
 (let ((?x37 (stack K ?x36)))
 (let ((?x38 (stack J ?x37)))
 (let ((?x39 (stack E ?x38)))
 (let ((?x40 (stack N ?x39)))
 (let ((?x41 (stack R ?x40)))
 (let ((?x42 (stack L ?x41)))
 (let ((?x43 (stack I ?x42)))
 (let ((?x44 (stack Q ?x43)))
 (let ((?x45 (stack H ?x44)))
 (let ((?x46 (stack B ?x45)))
 (let ((?x47 (stack M ?x46)))
 (let ((?x48 (stack P ?x47)))
 (let ((?x118 (center s_tmp__)))
 (= ?x118 ?x48)))))))))))))))))))))
(assert
 (let ((?x49 (stack G empty)))
 (let ((?x121 (right s_tmp___)))
 (= ?x121 ?x49))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x148 (left s_tmp__)))
 (= (left s_tmp___) ?x148)))
(assert
 (let ((?x118 (center s_tmp__)))
 (= (center s_tmp___) ?x118)))
(assert
 (let ((?x152 (center s_tmp_)))
 (= ?x152 (center s_tmp))))
(assert
 (let ((?x155 (right s_tmp_)))
 (= ?x155 (right s_tmp))))
(assert
 (let ((?x115 (left s_tmp_)))
 (let ((?x148 (left s_tmp__)))
 (= ?x148 ?x115))))
(assert
 (let ((?x155 (right s_tmp_)))
 (let ((?x159 (right s_tmp__)))
 (= ?x159 ?x155))))
(assert
 (= c__ c!1))
(assert
 (let ((?x92 (left s_)))
 (let ((?x260 (left s__)))
 (let (($x305 (= ?x260 ?x92)))
 (let ((?x95 (right s_)))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x279 (and $x278 $x275)))
 (let ((?x97 (center s_)))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x281 (= c_ center-to-right)))
 (let (($x282 (and $x281 $x280)))
 (let (($x283 (= c_ center-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let (($x314 (ite $x284 (= ?x260 (stack (top ?x97) ?x92)) (ite $x282 $x305 (ite $x279 (= ?x260 (stack (top ?x95) ?x92)) $x305)))))
 (let (($x292 (= ?x260 (rest ?x92))))
 (let (($x285 ((_ is stack ) ?x92)))
 (let (($x287 (and (= c_ left-to-right) $x285)))
 (let (($x289 (and (= c_ left-to-center) $x285)))
 (ite $x289 $x292 (ite $x287 $x292 $x314)))))))))))))))))))))
(assert
 (let ((?x95 (right s_)))
 (let ((?x262 (right s__)))
 (let (($x301 (= ?x262 ?x95)))
 (let (($x298 (= ?x262 (rest ?x95))))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ right-to-center)))
 (let (($x277 (and $x276 $x275)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x279 (and $x278 $x275)))
 (let ((?x97 (center s_)))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x281 (= c_ center-to-right)))
 (let (($x282 (and $x281 $x280)))
 (let (($x311 (ite $x282 (= ?x262 (stack (top ?x97) ?x95)) (ite $x279 $x298 (ite $x277 $x298 $x301)))))
 (let (($x283 (= c_ center-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let ((?x92 (left s_)))
 (let (($x285 ((_ is stack ) ?x92)))
 (let (($x287 (and (= c_ left-to-right) $x285)))
 (let (($x289 (and (= c_ left-to-center) $x285)))
 (ite $x289 (= ?x262 (stack (top ?x92) ?x95)) (ite $x287 $x301 (ite $x284 $x301 $x311))))))))))))))))))))))))
(assert
 (let ((?x97 (center s_)))
 (let ((?x265 (center s__)))
 (let (($x303 (= ?x265 ?x97)))
 (let ((?x95 (right s_)))
 (let (($x275 ((_ is stack ) ?x95)))
 (let (($x276 (= c_ right-to-center)))
 (let (($x277 (and $x276 $x275)))
 (let (($x278 (= c_ right-to-left)))
 (let (($x279 (and $x278 $x275)))
 (let (($x295 (= ?x265 (rest ?x97))))
 (let (($x280 ((_ is stack ) ?x97)))
 (let (($x281 (= c_ center-to-right)))
 (let (($x282 (and $x281 $x280)))
 (let (($x310 (ite $x282 $x295 (ite $x279 $x303 (ite $x277 (= ?x265 (stack (top ?x95) ?x97)) $x303)))))
 (let (($x283 (= c_ center-to-left)))
 (let (($x284 (and $x283 $x280)))
 (let ((?x92 (left s_)))
 (let (($x285 ((_ is stack ) ?x92)))
 (let (($x287 (and (= c_ left-to-right) $x285)))
 (let (($x289 (and (= c_ left-to-center) $x285)))
 (ite $x289 $x303 (ite $x287 (= ?x265 (stack (top ?x92) ?x97)) (ite $x284 $x295 $x310))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x260 (left s__)))
 (let ((?x162 (left s___)))
 (let (($x412 (= ?x162 ?x260)))
 (let ((?x262 (right s__)))
 (let ((?x379 (top ?x262)))
 (let ((?x380 (stack ?x379 ?x260)))
 (let (($x406 (= ?x162 ?x380)))
 (let (($x382 ((_ is stack ) ?x262)))
 (let (($x385 (= c__ right-to-left)))
 (let (($x386 (and $x385 $x382)))
 (let ((?x265 (center s__)))
 (let (($x387 ((_ is stack ) ?x265)))
 (let (($x388 (= c__ center-to-right)))
 (let (($x389 (and $x388 $x387)))
 (let ((?x375 (top ?x265)))
 (let ((?x376 (stack ?x375 ?x260)))
 (let (($x403 (= ?x162 ?x376)))
 (let (($x390 (= c__ center-to-left)))
 (let (($x391 (and $x390 $x387)))
 (let ((?x164 (rest ?x260)))
 (let (($x399 (= ?x162 ?x164)))
 (let (($x392 ((_ is stack ) ?x260)))
 (let (($x393 (= c__ left-to-right)))
 (let (($x394 (and $x393 $x392)))
 (let (($x395 (= c__ left-to-center)))
 (let (($x396 (and $x395 $x392)))
 (ite $x396 $x399 (ite $x394 $x399 (ite $x391 $x403 (ite $x389 $x412 (ite $x386 $x406 $x412))))))))))))))))))))))))))))))))
(assert
 (let ((?x262 (right s__)))
 (let ((?x165 (right s___)))
 (let (($x408 (= ?x165 ?x262)))
 (let ((?x378 (rest ?x262)))
 (let (($x405 (= ?x165 ?x378)))
 (let (($x382 ((_ is stack ) ?x262)))
 (let (($x383 (= c__ right-to-center)))
 (let (($x384 (and $x383 $x382)))
 (let (($x385 (= c__ right-to-left)))
 (let (($x386 (and $x385 $x382)))
 (let ((?x265 (center s__)))
 (let ((?x375 (top ?x265)))
 (let ((?x377 (stack ?x375 ?x262)))
 (let (($x404 (= ?x165 ?x377)))
 (let (($x387 ((_ is stack ) ?x265)))
 (let (($x388 (= c__ center-to-right)))
 (let (($x389 (and $x388 $x387)))
 (let (($x390 (= c__ center-to-left)))
 (let (($x391 (and $x390 $x387)))
 (let ((?x260 (left s__)))
 (let (($x392 ((_ is stack ) ?x260)))
 (let (($x393 (= c__ left-to-right)))
 (let (($x394 (and $x393 $x392)))
 (let (($x425 (ite $x394 $x408 (ite $x391 $x408 (ite $x389 $x404 (ite $x386 $x405 (ite $x384 $x405 $x408)))))))
 (let ((?x257 (top ?x260)))
 (let ((?x371 (stack ?x257 ?x262)))
 (let (($x400 (= ?x165 ?x371)))
 (let (($x395 (= c__ left-to-center)))
 (let (($x396 (and $x395 $x392)))
 (ite $x396 $x400 $x425)))))))))))))))))))))))))))))))
(assert
 (let ((?x265 (center s__)))
 (let ((?x372 (center s___)))
 (let (($x410 (= ?x372 ?x265)))
 (let ((?x262 (right s__)))
 (let ((?x379 (top ?x262)))
 (let ((?x381 (stack ?x379 ?x265)))
 (let (($x407 (= ?x372 ?x381)))
 (let (($x382 ((_ is stack ) ?x262)))
 (let (($x383 (= c__ right-to-center)))
 (let (($x384 (and $x383 $x382)))
 (let (($x385 (= c__ right-to-left)))
 (let (($x386 (and $x385 $x382)))
 (let ((?x374 (rest ?x265)))
 (let (($x402 (= ?x372 ?x374)))
 (let (($x387 ((_ is stack ) ?x265)))
 (let (($x388 (= c__ center-to-right)))
 (let (($x389 (and $x388 $x387)))
 (let (($x390 (= c__ center-to-left)))
 (let (($x391 (and $x390 $x387)))
 (let ((?x260 (left s__)))
 (let ((?x257 (top ?x260)))
 (let ((?x373 (stack ?x257 ?x265)))
 (let (($x401 (= ?x372 ?x373)))
 (let (($x392 ((_ is stack ) ?x260)))
 (let (($x393 (= c__ left-to-right)))
 (let (($x394 (and $x393 $x392)))
 (let (($x424 (ite $x394 $x401 (ite $x391 $x402 (ite $x389 $x402 (ite $x386 $x410 (ite $x384 $x407 $x410)))))))
 (let (($x395 (= c__ left-to-center)))
 (let (($x396 (and $x395 $x392)))
 (ite $x396 $x410 $x424)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x162 (left s___)))
 (let ((?x350 (left s____)))
 (let (($x551 (= ?x350 ?x162)))
 (let ((?x165 (right s___)))
 (let ((?x518 (top ?x165)))
 (let ((?x519 (stack ?x518 ?x162)))
 (let (($x545 (= ?x350 ?x519)))
 (let (($x521 ((_ is stack ) ?x165)))
 (let (($x524 (= c___ right-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x372 (center s___)))
 (let (($x526 ((_ is stack ) ?x372)))
 (let (($x527 (= c___ center-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let ((?x514 (top ?x372)))
 (let ((?x515 (stack ?x514 ?x162)))
 (let (($x542 (= ?x350 ?x515)))
 (let (($x529 (= c___ center-to-left)))
 (let (($x530 (and $x529 $x526)))
 (let ((?x351 (rest ?x162)))
 (let (($x538 (= ?x350 ?x351)))
 (let (($x531 ((_ is stack ) ?x162)))
 (let (($x532 (= c___ left-to-right)))
 (let (($x533 (and $x532 $x531)))
 (let (($x534 (= c___ left-to-center)))
 (let (($x535 (and $x534 $x531)))
 (ite $x535 $x538 (ite $x533 $x538 (ite $x530 $x542 (ite $x528 $x551 (ite $x525 $x545 $x551))))))))))))))))))))))))))))))))
(assert
 (let ((?x165 (right s___)))
 (let ((?x370 (right s____)))
 (let (($x547 (= ?x370 ?x165)))
 (let ((?x517 (rest ?x165)))
 (let (($x544 (= ?x370 ?x517)))
 (let (($x521 ((_ is stack ) ?x165)))
 (let (($x522 (= c___ right-to-center)))
 (let (($x523 (and $x522 $x521)))
 (let (($x524 (= c___ right-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x372 (center s___)))
 (let ((?x514 (top ?x372)))
 (let ((?x516 (stack ?x514 ?x165)))
 (let (($x543 (= ?x370 ?x516)))
 (let (($x526 ((_ is stack ) ?x372)))
 (let (($x527 (= c___ center-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let (($x529 (= c___ center-to-left)))
 (let (($x530 (and $x529 $x526)))
 (let ((?x162 (left s___)))
 (let (($x531 ((_ is stack ) ?x162)))
 (let (($x532 (= c___ left-to-right)))
 (let (($x533 (and $x532 $x531)))
 (let (($x564 (ite $x533 $x547 (ite $x530 $x547 (ite $x528 $x543 (ite $x525 $x544 (ite $x523 $x544 $x547)))))))
 (let ((?x509 (top ?x162)))
 (let ((?x510 (stack ?x509 ?x165)))
 (let (($x539 (= ?x370 ?x510)))
 (let (($x534 (= c___ left-to-center)))
 (let (($x535 (and $x534 $x531)))
 (ite $x535 $x539 $x564)))))))))))))))))))))))))))))))
(assert
 (let ((?x372 (center s___)))
 (let ((?x511 (center s____)))
 (let (($x549 (= ?x511 ?x372)))
 (let ((?x165 (right s___)))
 (let ((?x518 (top ?x165)))
 (let ((?x520 (stack ?x518 ?x372)))
 (let (($x546 (= ?x511 ?x520)))
 (let (($x521 ((_ is stack ) ?x165)))
 (let (($x522 (= c___ right-to-center)))
 (let (($x523 (and $x522 $x521)))
 (let (($x524 (= c___ right-to-left)))
 (let (($x525 (and $x524 $x521)))
 (let ((?x513 (rest ?x372)))
 (let (($x541 (= ?x511 ?x513)))
 (let (($x526 ((_ is stack ) ?x372)))
 (let (($x527 (= c___ center-to-right)))
 (let (($x528 (and $x527 $x526)))
 (let (($x529 (= c___ center-to-left)))
 (let (($x530 (and $x529 $x526)))
 (let ((?x162 (left s___)))
 (let ((?x509 (top ?x162)))
 (let ((?x512 (stack ?x509 ?x372)))
 (let (($x540 (= ?x511 ?x512)))
 (let (($x531 ((_ is stack ) ?x162)))
 (let (($x532 (= c___ left-to-right)))
 (let (($x533 (and $x532 $x531)))
 (let (($x563 (ite $x533 $x540 (ite $x530 $x541 (ite $x528 $x541 (ite $x525 $x549 (ite $x523 $x546 $x549)))))))
 (let (($x534 (= c___ left-to-center)))
 (let (($x535 (and $x534 $x531)))
 (ite $x535 $x549 $x563)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x350 (left s____)))
 (let ((?x428 (left s_____)))
 (let (($x689 (= ?x428 ?x350)))
 (let ((?x370 (right s____)))
 (let ((?x656 (top ?x370)))
 (let ((?x657 (stack ?x656 ?x350)))
 (let (($x683 (= ?x428 ?x657)))
 (let (($x659 ((_ is stack ) ?x370)))
 (let (($x662 (= c____ right-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x511 (center s____)))
 (let (($x664 ((_ is stack ) ?x511)))
 (let (($x665 (= c____ center-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let ((?x652 (top ?x511)))
 (let ((?x653 (stack ?x652 ?x350)))
 (let (($x680 (= ?x428 ?x653)))
 (let (($x667 (= c____ center-to-left)))
 (let (($x668 (and $x667 $x664)))
 (let ((?x461 (rest ?x350)))
 (let (($x676 (= ?x428 ?x461)))
 (let (($x669 ((_ is stack ) ?x350)))
 (let (($x670 (= c____ left-to-right)))
 (let (($x671 (and $x670 $x669)))
 (let (($x672 (= c____ left-to-center)))
 (let (($x673 (and $x672 $x669)))
 (ite $x673 $x676 (ite $x671 $x676 (ite $x668 $x680 (ite $x666 $x689 (ite $x663 $x683 $x689))))))))))))))))))))))))))))))))
(assert
 (let ((?x370 (right s____)))
 (let ((?x462 (right s_____)))
 (let (($x685 (= ?x462 ?x370)))
 (let ((?x655 (rest ?x370)))
 (let (($x682 (= ?x462 ?x655)))
 (let (($x659 ((_ is stack ) ?x370)))
 (let (($x660 (= c____ right-to-center)))
 (let (($x661 (and $x660 $x659)))
 (let (($x662 (= c____ right-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x511 (center s____)))
 (let ((?x652 (top ?x511)))
 (let ((?x654 (stack ?x652 ?x370)))
 (let (($x681 (= ?x462 ?x654)))
 (let (($x664 ((_ is stack ) ?x511)))
 (let (($x665 (= c____ center-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let (($x667 (= c____ center-to-left)))
 (let (($x668 (and $x667 $x664)))
 (let ((?x350 (left s____)))
 (let (($x669 ((_ is stack ) ?x350)))
 (let (($x670 (= c____ left-to-right)))
 (let (($x671 (and $x670 $x669)))
 (let (($x702 (ite $x671 $x685 (ite $x668 $x685 (ite $x666 $x681 (ite $x663 $x682 (ite $x661 $x682 $x685)))))))
 (let ((?x508 (top ?x350)))
 (let ((?x648 (stack ?x508 ?x370)))
 (let (($x677 (= ?x462 ?x648)))
 (let (($x672 (= c____ left-to-center)))
 (let (($x673 (and $x672 $x669)))
 (ite $x673 $x677 $x702)))))))))))))))))))))))))))))))
(assert
 (let ((?x511 (center s____)))
 (let ((?x649 (center s_____)))
 (let (($x687 (= ?x649 ?x511)))
 (let ((?x370 (right s____)))
 (let ((?x656 (top ?x370)))
 (let ((?x658 (stack ?x656 ?x511)))
 (let (($x684 (= ?x649 ?x658)))
 (let (($x659 ((_ is stack ) ?x370)))
 (let (($x660 (= c____ right-to-center)))
 (let (($x661 (and $x660 $x659)))
 (let (($x662 (= c____ right-to-left)))
 (let (($x663 (and $x662 $x659)))
 (let ((?x651 (rest ?x511)))
 (let (($x679 (= ?x649 ?x651)))
 (let (($x664 ((_ is stack ) ?x511)))
 (let (($x665 (= c____ center-to-right)))
 (let (($x666 (and $x665 $x664)))
 (let (($x667 (= c____ center-to-left)))
 (let (($x668 (and $x667 $x664)))
 (let ((?x350 (left s____)))
 (let ((?x508 (top ?x350)))
 (let ((?x650 (stack ?x508 ?x511)))
 (let (($x678 (= ?x649 ?x650)))
 (let (($x669 ((_ is stack ) ?x350)))
 (let (($x670 (= c____ left-to-right)))
 (let (($x671 (and $x670 $x669)))
 (let (($x701 (ite $x671 $x678 (ite $x668 $x679 (ite $x666 $x679 (ite $x663 $x687 (ite $x661 $x684 $x687)))))))
 (let (($x672 (= c____ left-to-center)))
 (let (($x673 (and $x672 $x669)))
 (ite $x673 $x687 $x701)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x428 (left s_____)))
 (let ((?x567 (left s______)))
 (let (($x827 (= ?x567 ?x428)))
 (let ((?x462 (right s_____)))
 (let ((?x794 (top ?x462)))
 (let ((?x795 (stack ?x794 ?x428)))
 (let (($x821 (= ?x567 ?x795)))
 (let (($x797 ((_ is stack ) ?x462)))
 (let (($x800 (= c_____ right-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x649 (center s_____)))
 (let (($x802 ((_ is stack ) ?x649)))
 (let (($x803 (= c_____ center-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let ((?x790 (top ?x649)))
 (let ((?x791 (stack ?x790 ?x428)))
 (let (($x818 (= ?x567 ?x791)))
 (let (($x805 (= c_____ center-to-left)))
 (let (($x806 (and $x805 $x802)))
 (let ((?x600 (rest ?x428)))
 (let (($x814 (= ?x567 ?x600)))
 (let (($x807 ((_ is stack ) ?x428)))
 (let (($x808 (= c_____ left-to-right)))
 (let (($x809 (and $x808 $x807)))
 (let (($x810 (= c_____ left-to-center)))
 (let (($x811 (and $x810 $x807)))
 (ite $x811 $x814 (ite $x809 $x814 (ite $x806 $x818 (ite $x804 $x827 (ite $x801 $x821 $x827))))))))))))))))))))))))))))))))
(assert
 (let ((?x462 (right s_____)))
 (let ((?x601 (right s______)))
 (let (($x823 (= ?x601 ?x462)))
 (let ((?x793 (rest ?x462)))
 (let (($x820 (= ?x601 ?x793)))
 (let (($x797 ((_ is stack ) ?x462)))
 (let (($x798 (= c_____ right-to-center)))
 (let (($x799 (and $x798 $x797)))
 (let (($x800 (= c_____ right-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x649 (center s_____)))
 (let ((?x790 (top ?x649)))
 (let ((?x792 (stack ?x790 ?x462)))
 (let (($x819 (= ?x601 ?x792)))
 (let (($x802 ((_ is stack ) ?x649)))
 (let (($x803 (= c_____ center-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let (($x805 (= c_____ center-to-left)))
 (let (($x806 (and $x805 $x802)))
 (let ((?x428 (left s_____)))
 (let (($x807 ((_ is stack ) ?x428)))
 (let (($x808 (= c_____ left-to-right)))
 (let (($x809 (and $x808 $x807)))
 (let (($x840 (ite $x809 $x823 (ite $x806 $x823 (ite $x804 $x819 (ite $x801 $x820 (ite $x799 $x820 $x823)))))))
 (let ((?x647 (top ?x428)))
 (let ((?x786 (stack ?x647 ?x462)))
 (let (($x815 (= ?x601 ?x786)))
 (let (($x810 (= c_____ left-to-center)))
 (let (($x811 (and $x810 $x807)))
 (ite $x811 $x815 $x840)))))))))))))))))))))))))))))))
(assert
 (let ((?x649 (center s_____)))
 (let ((?x787 (center s______)))
 (let (($x825 (= ?x787 ?x649)))
 (let ((?x462 (right s_____)))
 (let ((?x794 (top ?x462)))
 (let ((?x796 (stack ?x794 ?x649)))
 (let (($x822 (= ?x787 ?x796)))
 (let (($x797 ((_ is stack ) ?x462)))
 (let (($x798 (= c_____ right-to-center)))
 (let (($x799 (and $x798 $x797)))
 (let (($x800 (= c_____ right-to-left)))
 (let (($x801 (and $x800 $x797)))
 (let ((?x789 (rest ?x649)))
 (let (($x817 (= ?x787 ?x789)))
 (let (($x802 ((_ is stack ) ?x649)))
 (let (($x803 (= c_____ center-to-right)))
 (let (($x804 (and $x803 $x802)))
 (let (($x805 (= c_____ center-to-left)))
 (let (($x806 (and $x805 $x802)))
 (let ((?x428 (left s_____)))
 (let ((?x647 (top ?x428)))
 (let ((?x788 (stack ?x647 ?x649)))
 (let (($x816 (= ?x787 ?x788)))
 (let (($x807 ((_ is stack ) ?x428)))
 (let (($x808 (= c_____ left-to-right)))
 (let (($x809 (and $x808 $x807)))
 (let (($x839 (ite $x809 $x816 (ite $x806 $x817 (ite $x804 $x817 (ite $x801 $x825 (ite $x799 $x822 $x825)))))))
 (let (($x810 (= c_____ left-to-center)))
 (let (($x811 (and $x810 $x807)))
 (ite $x811 $x825 $x839)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x567 (left s______)))
 (let ((?x705 (left s_______)))
 (let (($x965 (= ?x705 ?x567)))
 (let ((?x601 (right s______)))
 (let ((?x932 (top ?x601)))
 (let ((?x933 (stack ?x932 ?x567)))
 (let (($x959 (= ?x705 ?x933)))
 (let (($x935 ((_ is stack ) ?x601)))
 (let (($x938 (= c______ right-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x787 (center s______)))
 (let (($x940 ((_ is stack ) ?x787)))
 (let (($x941 (= c______ center-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let ((?x928 (top ?x787)))
 (let ((?x929 (stack ?x928 ?x567)))
 (let (($x956 (= ?x705 ?x929)))
 (let (($x943 (= c______ center-to-left)))
 (let (($x944 (and $x943 $x940)))
 (let ((?x738 (rest ?x567)))
 (let (($x952 (= ?x705 ?x738)))
 (let (($x945 ((_ is stack ) ?x567)))
 (let (($x946 (= c______ left-to-right)))
 (let (($x947 (and $x946 $x945)))
 (let (($x948 (= c______ left-to-center)))
 (let (($x949 (and $x948 $x945)))
 (ite $x949 $x952 (ite $x947 $x952 (ite $x944 $x956 (ite $x942 $x965 (ite $x939 $x959 $x965))))))))))))))))))))))))))))))))
(assert
 (let ((?x601 (right s______)))
 (let ((?x739 (right s_______)))
 (let (($x961 (= ?x739 ?x601)))
 (let ((?x931 (rest ?x601)))
 (let (($x958 (= ?x739 ?x931)))
 (let (($x935 ((_ is stack ) ?x601)))
 (let (($x936 (= c______ right-to-center)))
 (let (($x937 (and $x936 $x935)))
 (let (($x938 (= c______ right-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x787 (center s______)))
 (let ((?x928 (top ?x787)))
 (let ((?x930 (stack ?x928 ?x601)))
 (let (($x957 (= ?x739 ?x930)))
 (let (($x940 ((_ is stack ) ?x787)))
 (let (($x941 (= c______ center-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let (($x943 (= c______ center-to-left)))
 (let (($x944 (and $x943 $x940)))
 (let ((?x567 (left s______)))
 (let (($x945 ((_ is stack ) ?x567)))
 (let (($x946 (= c______ left-to-right)))
 (let (($x947 (and $x946 $x945)))
 (let (($x978 (ite $x947 $x961 (ite $x944 $x961 (ite $x942 $x957 (ite $x939 $x958 (ite $x937 $x958 $x961)))))))
 (let ((?x785 (top ?x567)))
 (let ((?x924 (stack ?x785 ?x601)))
 (let (($x953 (= ?x739 ?x924)))
 (let (($x948 (= c______ left-to-center)))
 (let (($x949 (and $x948 $x945)))
 (ite $x949 $x953 $x978)))))))))))))))))))))))))))))))
(assert
 (let ((?x787 (center s______)))
 (let ((?x925 (center s_______)))
 (let (($x963 (= ?x925 ?x787)))
 (let ((?x601 (right s______)))
 (let ((?x932 (top ?x601)))
 (let ((?x934 (stack ?x932 ?x787)))
 (let (($x960 (= ?x925 ?x934)))
 (let (($x935 ((_ is stack ) ?x601)))
 (let (($x936 (= c______ right-to-center)))
 (let (($x937 (and $x936 $x935)))
 (let (($x938 (= c______ right-to-left)))
 (let (($x939 (and $x938 $x935)))
 (let ((?x927 (rest ?x787)))
 (let (($x955 (= ?x925 ?x927)))
 (let (($x940 ((_ is stack ) ?x787)))
 (let (($x941 (= c______ center-to-right)))
 (let (($x942 (and $x941 $x940)))
 (let (($x943 (= c______ center-to-left)))
 (let (($x944 (and $x943 $x940)))
 (let ((?x567 (left s______)))
 (let ((?x785 (top ?x567)))
 (let ((?x926 (stack ?x785 ?x787)))
 (let (($x954 (= ?x925 ?x926)))
 (let (($x945 ((_ is stack ) ?x567)))
 (let (($x946 (= c______ left-to-right)))
 (let (($x947 (and $x946 $x945)))
 (let (($x977 (ite $x947 $x954 (ite $x944 $x955 (ite $x942 $x955 (ite $x939 $x963 (ite $x937 $x960 $x963)))))))
 (let (($x948 (= c______ left-to-center)))
 (let (($x949 (and $x948 $x945)))
 (ite $x949 $x963 $x977)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x705 (left s_______)))
 (let ((?x843 (left s________)))
 (let (($x1103 (= ?x843 ?x705)))
 (let ((?x739 (right s_______)))
 (let ((?x1070 (top ?x739)))
 (let ((?x1071 (stack ?x1070 ?x705)))
 (let (($x1097 (= ?x843 ?x1071)))
 (let (($x1073 ((_ is stack ) ?x739)))
 (let (($x1076 (= c_______ right-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x925 (center s_______)))
 (let (($x1078 ((_ is stack ) ?x925)))
 (let (($x1079 (= c_______ center-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let ((?x1066 (top ?x925)))
 (let ((?x1067 (stack ?x1066 ?x705)))
 (let (($x1094 (= ?x843 ?x1067)))
 (let (($x1081 (= c_______ center-to-left)))
 (let (($x1082 (and $x1081 $x1078)))
 (let ((?x876 (rest ?x705)))
 (let (($x1090 (= ?x843 ?x876)))
 (let (($x1083 ((_ is stack ) ?x705)))
 (let (($x1084 (= c_______ left-to-right)))
 (let (($x1085 (and $x1084 $x1083)))
 (let (($x1086 (= c_______ left-to-center)))
 (let (($x1087 (and $x1086 $x1083)))
 (ite $x1087 $x1090 (ite $x1085 $x1090 (ite $x1082 $x1094 (ite $x1080 $x1103 (ite $x1077 $x1097 $x1103))))))))))))))))))))))))))))))))
(assert
 (let ((?x739 (right s_______)))
 (let ((?x877 (right s________)))
 (let (($x1099 (= ?x877 ?x739)))
 (let ((?x1069 (rest ?x739)))
 (let (($x1096 (= ?x877 ?x1069)))
 (let (($x1073 ((_ is stack ) ?x739)))
 (let (($x1074 (= c_______ right-to-center)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1076 (= c_______ right-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x925 (center s_______)))
 (let ((?x1066 (top ?x925)))
 (let ((?x1068 (stack ?x1066 ?x739)))
 (let (($x1095 (= ?x877 ?x1068)))
 (let (($x1078 ((_ is stack ) ?x925)))
 (let (($x1079 (= c_______ center-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let (($x1081 (= c_______ center-to-left)))
 (let (($x1082 (and $x1081 $x1078)))
 (let ((?x705 (left s_______)))
 (let (($x1083 ((_ is stack ) ?x705)))
 (let (($x1084 (= c_______ left-to-right)))
 (let (($x1085 (and $x1084 $x1083)))
 (let (($x1116 (ite $x1085 $x1099 (ite $x1082 $x1099 (ite $x1080 $x1095 (ite $x1077 $x1096 (ite $x1075 $x1096 $x1099)))))))
 (let ((?x923 (top ?x705)))
 (let ((?x1062 (stack ?x923 ?x739)))
 (let (($x1091 (= ?x877 ?x1062)))
 (let (($x1086 (= c_______ left-to-center)))
 (let (($x1087 (and $x1086 $x1083)))
 (ite $x1087 $x1091 $x1116)))))))))))))))))))))))))))))))
(assert
 (let ((?x925 (center s_______)))
 (let ((?x1063 (center s________)))
 (let (($x1101 (= ?x1063 ?x925)))
 (let ((?x739 (right s_______)))
 (let ((?x1070 (top ?x739)))
 (let ((?x1072 (stack ?x1070 ?x925)))
 (let (($x1098 (= ?x1063 ?x1072)))
 (let (($x1073 ((_ is stack ) ?x739)))
 (let (($x1074 (= c_______ right-to-center)))
 (let (($x1075 (and $x1074 $x1073)))
 (let (($x1076 (= c_______ right-to-left)))
 (let (($x1077 (and $x1076 $x1073)))
 (let ((?x1065 (rest ?x925)))
 (let (($x1093 (= ?x1063 ?x1065)))
 (let (($x1078 ((_ is stack ) ?x925)))
 (let (($x1079 (= c_______ center-to-right)))
 (let (($x1080 (and $x1079 $x1078)))
 (let (($x1081 (= c_______ center-to-left)))
 (let (($x1082 (and $x1081 $x1078)))
 (let ((?x705 (left s_______)))
 (let ((?x923 (top ?x705)))
 (let ((?x1064 (stack ?x923 ?x925)))
 (let (($x1092 (= ?x1063 ?x1064)))
 (let (($x1083 ((_ is stack ) ?x705)))
 (let (($x1084 (= c_______ left-to-right)))
 (let (($x1085 (and $x1084 $x1083)))
 (let (($x1115 (ite $x1085 $x1092 (ite $x1082 $x1093 (ite $x1080 $x1093 (ite $x1077 $x1101 (ite $x1075 $x1098 $x1101)))))))
 (let (($x1086 (= c_______ left-to-center)))
 (let (($x1087 (and $x1086 $x1083)))
 (ite $x1087 $x1101 $x1115)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x843 (left s________)))
 (let ((?x981 (left s_________)))
 (let (($x1241 (= ?x981 ?x843)))
 (let ((?x877 (right s________)))
 (let ((?x1208 (top ?x877)))
 (let ((?x1209 (stack ?x1208 ?x843)))
 (let (($x1235 (= ?x981 ?x1209)))
 (let (($x1211 ((_ is stack ) ?x877)))
 (let (($x1214 (= c________ right-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x1063 (center s________)))
 (let (($x1216 ((_ is stack ) ?x1063)))
 (let (($x1217 (= c________ center-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let ((?x1204 (top ?x1063)))
 (let ((?x1205 (stack ?x1204 ?x843)))
 (let (($x1232 (= ?x981 ?x1205)))
 (let (($x1219 (= c________ center-to-left)))
 (let (($x1220 (and $x1219 $x1216)))
 (let ((?x1014 (rest ?x843)))
 (let (($x1228 (= ?x981 ?x1014)))
 (let (($x1221 ((_ is stack ) ?x843)))
 (let (($x1222 (= c________ left-to-right)))
 (let (($x1223 (and $x1222 $x1221)))
 (let (($x1224 (= c________ left-to-center)))
 (let (($x1225 (and $x1224 $x1221)))
 (ite $x1225 $x1228 (ite $x1223 $x1228 (ite $x1220 $x1232 (ite $x1218 $x1241 (ite $x1215 $x1235 $x1241))))))))))))))))))))))))))))))))
(assert
 (let ((?x877 (right s________)))
 (let ((?x1015 (right s_________)))
 (let (($x1237 (= ?x1015 ?x877)))
 (let ((?x1207 (rest ?x877)))
 (let (($x1234 (= ?x1015 ?x1207)))
 (let (($x1211 ((_ is stack ) ?x877)))
 (let (($x1212 (= c________ right-to-center)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1214 (= c________ right-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x1063 (center s________)))
 (let ((?x1204 (top ?x1063)))
 (let ((?x1206 (stack ?x1204 ?x877)))
 (let (($x1233 (= ?x1015 ?x1206)))
 (let (($x1216 ((_ is stack ) ?x1063)))
 (let (($x1217 (= c________ center-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let (($x1219 (= c________ center-to-left)))
 (let (($x1220 (and $x1219 $x1216)))
 (let ((?x843 (left s________)))
 (let (($x1221 ((_ is stack ) ?x843)))
 (let (($x1222 (= c________ left-to-right)))
 (let (($x1223 (and $x1222 $x1221)))
 (let (($x1254 (ite $x1223 $x1237 (ite $x1220 $x1237 (ite $x1218 $x1233 (ite $x1215 $x1234 (ite $x1213 $x1234 $x1237)))))))
 (let ((?x1061 (top ?x843)))
 (let ((?x1200 (stack ?x1061 ?x877)))
 (let (($x1229 (= ?x1015 ?x1200)))
 (let (($x1224 (= c________ left-to-center)))
 (let (($x1225 (and $x1224 $x1221)))
 (ite $x1225 $x1229 $x1254)))))))))))))))))))))))))))))))
(assert
 (let ((?x1063 (center s________)))
 (let ((?x1201 (center s_________)))
 (let (($x1239 (= ?x1201 ?x1063)))
 (let ((?x877 (right s________)))
 (let ((?x1208 (top ?x877)))
 (let ((?x1210 (stack ?x1208 ?x1063)))
 (let (($x1236 (= ?x1201 ?x1210)))
 (let (($x1211 ((_ is stack ) ?x877)))
 (let (($x1212 (= c________ right-to-center)))
 (let (($x1213 (and $x1212 $x1211)))
 (let (($x1214 (= c________ right-to-left)))
 (let (($x1215 (and $x1214 $x1211)))
 (let ((?x1203 (rest ?x1063)))
 (let (($x1231 (= ?x1201 ?x1203)))
 (let (($x1216 ((_ is stack ) ?x1063)))
 (let (($x1217 (= c________ center-to-right)))
 (let (($x1218 (and $x1217 $x1216)))
 (let (($x1219 (= c________ center-to-left)))
 (let (($x1220 (and $x1219 $x1216)))
 (let ((?x843 (left s________)))
 (let ((?x1061 (top ?x843)))
 (let ((?x1202 (stack ?x1061 ?x1063)))
 (let (($x1230 (= ?x1201 ?x1202)))
 (let (($x1221 ((_ is stack ) ?x843)))
 (let (($x1222 (= c________ left-to-right)))
 (let (($x1223 (and $x1222 $x1221)))
 (let (($x1253 (ite $x1223 $x1230 (ite $x1220 $x1231 (ite $x1218 $x1231 (ite $x1215 $x1239 (ite $x1213 $x1236 $x1239)))))))
 (let (($x1224 (= c________ left-to-center)))
 (let (($x1225 (and $x1224 $x1221)))
 (ite $x1225 $x1239 $x1253)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x981 (left s_________)))
 (let ((?x1119 (left s__________)))
 (let (($x1379 (= ?x1119 ?x981)))
 (let ((?x1015 (right s_________)))
 (let ((?x1346 (top ?x1015)))
 (let ((?x1347 (stack ?x1346 ?x981)))
 (let (($x1373 (= ?x1119 ?x1347)))
 (let (($x1349 ((_ is stack ) ?x1015)))
 (let (($x1352 (= c_________ right-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x1201 (center s_________)))
 (let (($x1354 ((_ is stack ) ?x1201)))
 (let (($x1355 (= c_________ center-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let ((?x1342 (top ?x1201)))
 (let ((?x1343 (stack ?x1342 ?x981)))
 (let (($x1370 (= ?x1119 ?x1343)))
 (let (($x1357 (= c_________ center-to-left)))
 (let (($x1358 (and $x1357 $x1354)))
 (let ((?x1152 (rest ?x981)))
 (let (($x1366 (= ?x1119 ?x1152)))
 (let (($x1359 ((_ is stack ) ?x981)))
 (let (($x1360 (= c_________ left-to-right)))
 (let (($x1361 (and $x1360 $x1359)))
 (let (($x1362 (= c_________ left-to-center)))
 (let (($x1363 (and $x1362 $x1359)))
 (ite $x1363 $x1366 (ite $x1361 $x1366 (ite $x1358 $x1370 (ite $x1356 $x1379 (ite $x1353 $x1373 $x1379))))))))))))))))))))))))))))))))
(assert
 (let ((?x1015 (right s_________)))
 (let ((?x1153 (right s__________)))
 (let (($x1375 (= ?x1153 ?x1015)))
 (let ((?x1345 (rest ?x1015)))
 (let (($x1372 (= ?x1153 ?x1345)))
 (let (($x1349 ((_ is stack ) ?x1015)))
 (let (($x1350 (= c_________ right-to-center)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1352 (= c_________ right-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x1201 (center s_________)))
 (let ((?x1342 (top ?x1201)))
 (let ((?x1344 (stack ?x1342 ?x1015)))
 (let (($x1371 (= ?x1153 ?x1344)))
 (let (($x1354 ((_ is stack ) ?x1201)))
 (let (($x1355 (= c_________ center-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let (($x1357 (= c_________ center-to-left)))
 (let (($x1358 (and $x1357 $x1354)))
 (let ((?x981 (left s_________)))
 (let (($x1359 ((_ is stack ) ?x981)))
 (let (($x1360 (= c_________ left-to-right)))
 (let (($x1361 (and $x1360 $x1359)))
 (let (($x1392 (ite $x1361 $x1375 (ite $x1358 $x1375 (ite $x1356 $x1371 (ite $x1353 $x1372 (ite $x1351 $x1372 $x1375)))))))
 (let ((?x1199 (top ?x981)))
 (let ((?x1338 (stack ?x1199 ?x1015)))
 (let (($x1367 (= ?x1153 ?x1338)))
 (let (($x1362 (= c_________ left-to-center)))
 (let (($x1363 (and $x1362 $x1359)))
 (ite $x1363 $x1367 $x1392)))))))))))))))))))))))))))))))
(assert
 (let ((?x1201 (center s_________)))
 (let ((?x1339 (center s__________)))
 (let (($x1377 (= ?x1339 ?x1201)))
 (let ((?x1015 (right s_________)))
 (let ((?x1346 (top ?x1015)))
 (let ((?x1348 (stack ?x1346 ?x1201)))
 (let (($x1374 (= ?x1339 ?x1348)))
 (let (($x1349 ((_ is stack ) ?x1015)))
 (let (($x1350 (= c_________ right-to-center)))
 (let (($x1351 (and $x1350 $x1349)))
 (let (($x1352 (= c_________ right-to-left)))
 (let (($x1353 (and $x1352 $x1349)))
 (let ((?x1341 (rest ?x1201)))
 (let (($x1369 (= ?x1339 ?x1341)))
 (let (($x1354 ((_ is stack ) ?x1201)))
 (let (($x1355 (= c_________ center-to-right)))
 (let (($x1356 (and $x1355 $x1354)))
 (let (($x1357 (= c_________ center-to-left)))
 (let (($x1358 (and $x1357 $x1354)))
 (let ((?x981 (left s_________)))
 (let ((?x1199 (top ?x981)))
 (let ((?x1340 (stack ?x1199 ?x1201)))
 (let (($x1368 (= ?x1339 ?x1340)))
 (let (($x1359 ((_ is stack ) ?x981)))
 (let (($x1360 (= c_________ left-to-right)))
 (let (($x1361 (and $x1360 $x1359)))
 (let (($x1391 (ite $x1361 $x1368 (ite $x1358 $x1369 (ite $x1356 $x1369 (ite $x1353 $x1377 (ite $x1351 $x1374 $x1377)))))))
 (let (($x1362 (= c_________ left-to-center)))
 (let (($x1363 (and $x1362 $x1359)))
 (ite $x1363 $x1377 $x1391)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1119 (left s__________)))
 (let ((?x1257 (left s___________)))
 (let (($x1517 (= ?x1257 ?x1119)))
 (let ((?x1153 (right s__________)))
 (let ((?x1484 (top ?x1153)))
 (let ((?x1485 (stack ?x1484 ?x1119)))
 (let (($x1511 (= ?x1257 ?x1485)))
 (let (($x1487 ((_ is stack ) ?x1153)))
 (let (($x1490 (= c__________ right-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1339 (center s__________)))
 (let (($x1492 ((_ is stack ) ?x1339)))
 (let (($x1493 (= c__________ center-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let ((?x1480 (top ?x1339)))
 (let ((?x1481 (stack ?x1480 ?x1119)))
 (let (($x1508 (= ?x1257 ?x1481)))
 (let (($x1495 (= c__________ center-to-left)))
 (let (($x1496 (and $x1495 $x1492)))
 (let ((?x1290 (rest ?x1119)))
 (let (($x1504 (= ?x1257 ?x1290)))
 (let (($x1497 ((_ is stack ) ?x1119)))
 (let (($x1498 (= c__________ left-to-right)))
 (let (($x1499 (and $x1498 $x1497)))
 (let (($x1500 (= c__________ left-to-center)))
 (let (($x1501 (and $x1500 $x1497)))
 (ite $x1501 $x1504 (ite $x1499 $x1504 (ite $x1496 $x1508 (ite $x1494 $x1517 (ite $x1491 $x1511 $x1517))))))))))))))))))))))))))))))))
(assert
 (let ((?x1153 (right s__________)))
 (let ((?x1291 (right s___________)))
 (let (($x1513 (= ?x1291 ?x1153)))
 (let ((?x1483 (rest ?x1153)))
 (let (($x1510 (= ?x1291 ?x1483)))
 (let (($x1487 ((_ is stack ) ?x1153)))
 (let (($x1488 (= c__________ right-to-center)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1490 (= c__________ right-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1339 (center s__________)))
 (let ((?x1480 (top ?x1339)))
 (let ((?x1482 (stack ?x1480 ?x1153)))
 (let (($x1509 (= ?x1291 ?x1482)))
 (let (($x1492 ((_ is stack ) ?x1339)))
 (let (($x1493 (= c__________ center-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let (($x1495 (= c__________ center-to-left)))
 (let (($x1496 (and $x1495 $x1492)))
 (let ((?x1119 (left s__________)))
 (let (($x1497 ((_ is stack ) ?x1119)))
 (let (($x1498 (= c__________ left-to-right)))
 (let (($x1499 (and $x1498 $x1497)))
 (let (($x1530 (ite $x1499 $x1513 (ite $x1496 $x1513 (ite $x1494 $x1509 (ite $x1491 $x1510 (ite $x1489 $x1510 $x1513)))))))
 (let ((?x1337 (top ?x1119)))
 (let ((?x1476 (stack ?x1337 ?x1153)))
 (let (($x1505 (= ?x1291 ?x1476)))
 (let (($x1500 (= c__________ left-to-center)))
 (let (($x1501 (and $x1500 $x1497)))
 (ite $x1501 $x1505 $x1530)))))))))))))))))))))))))))))))
(assert
 (let ((?x1339 (center s__________)))
 (let ((?x1477 (center s___________)))
 (let (($x1515 (= ?x1477 ?x1339)))
 (let ((?x1153 (right s__________)))
 (let ((?x1484 (top ?x1153)))
 (let ((?x1486 (stack ?x1484 ?x1339)))
 (let (($x1512 (= ?x1477 ?x1486)))
 (let (($x1487 ((_ is stack ) ?x1153)))
 (let (($x1488 (= c__________ right-to-center)))
 (let (($x1489 (and $x1488 $x1487)))
 (let (($x1490 (= c__________ right-to-left)))
 (let (($x1491 (and $x1490 $x1487)))
 (let ((?x1479 (rest ?x1339)))
 (let (($x1507 (= ?x1477 ?x1479)))
 (let (($x1492 ((_ is stack ) ?x1339)))
 (let (($x1493 (= c__________ center-to-right)))
 (let (($x1494 (and $x1493 $x1492)))
 (let (($x1495 (= c__________ center-to-left)))
 (let (($x1496 (and $x1495 $x1492)))
 (let ((?x1119 (left s__________)))
 (let ((?x1337 (top ?x1119)))
 (let ((?x1478 (stack ?x1337 ?x1339)))
 (let (($x1506 (= ?x1477 ?x1478)))
 (let (($x1497 ((_ is stack ) ?x1119)))
 (let (($x1498 (= c__________ left-to-right)))
 (let (($x1499 (and $x1498 $x1497)))
 (let (($x1529 (ite $x1499 $x1506 (ite $x1496 $x1507 (ite $x1494 $x1507 (ite $x1491 $x1515 (ite $x1489 $x1512 $x1515)))))))
 (let (($x1500 (= c__________ left-to-center)))
 (let (($x1501 (and $x1500 $x1497)))
 (ite $x1501 $x1515 $x1529)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1257 (left s___________)))
 (let ((?x1395 (left s____________)))
 (let (($x1655 (= ?x1395 ?x1257)))
 (let ((?x1291 (right s___________)))
 (let ((?x1622 (top ?x1291)))
 (let ((?x1623 (stack ?x1622 ?x1257)))
 (let (($x1649 (= ?x1395 ?x1623)))
 (let (($x1625 ((_ is stack ) ?x1291)))
 (let (($x1628 (= c___________ right-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1477 (center s___________)))
 (let (($x1630 ((_ is stack ) ?x1477)))
 (let (($x1631 (= c___________ center-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let ((?x1618 (top ?x1477)))
 (let ((?x1619 (stack ?x1618 ?x1257)))
 (let (($x1646 (= ?x1395 ?x1619)))
 (let (($x1633 (= c___________ center-to-left)))
 (let (($x1634 (and $x1633 $x1630)))
 (let ((?x1428 (rest ?x1257)))
 (let (($x1642 (= ?x1395 ?x1428)))
 (let (($x1635 ((_ is stack ) ?x1257)))
 (let (($x1636 (= c___________ left-to-right)))
 (let (($x1637 (and $x1636 $x1635)))
 (let (($x1638 (= c___________ left-to-center)))
 (let (($x1639 (and $x1638 $x1635)))
 (ite $x1639 $x1642 (ite $x1637 $x1642 (ite $x1634 $x1646 (ite $x1632 $x1655 (ite $x1629 $x1649 $x1655))))))))))))))))))))))))))))))))
(assert
 (let ((?x1291 (right s___________)))
 (let ((?x1429 (right s____________)))
 (let (($x1651 (= ?x1429 ?x1291)))
 (let ((?x1621 (rest ?x1291)))
 (let (($x1648 (= ?x1429 ?x1621)))
 (let (($x1625 ((_ is stack ) ?x1291)))
 (let (($x1626 (= c___________ right-to-center)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1628 (= c___________ right-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1477 (center s___________)))
 (let ((?x1618 (top ?x1477)))
 (let ((?x1620 (stack ?x1618 ?x1291)))
 (let (($x1647 (= ?x1429 ?x1620)))
 (let (($x1630 ((_ is stack ) ?x1477)))
 (let (($x1631 (= c___________ center-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let (($x1633 (= c___________ center-to-left)))
 (let (($x1634 (and $x1633 $x1630)))
 (let ((?x1257 (left s___________)))
 (let (($x1635 ((_ is stack ) ?x1257)))
 (let (($x1636 (= c___________ left-to-right)))
 (let (($x1637 (and $x1636 $x1635)))
 (let (($x1668 (ite $x1637 $x1651 (ite $x1634 $x1651 (ite $x1632 $x1647 (ite $x1629 $x1648 (ite $x1627 $x1648 $x1651)))))))
 (let ((?x1475 (top ?x1257)))
 (let ((?x1614 (stack ?x1475 ?x1291)))
 (let (($x1643 (= ?x1429 ?x1614)))
 (let (($x1638 (= c___________ left-to-center)))
 (let (($x1639 (and $x1638 $x1635)))
 (ite $x1639 $x1643 $x1668)))))))))))))))))))))))))))))))
(assert
 (let ((?x1477 (center s___________)))
 (let ((?x1615 (center s____________)))
 (let (($x1653 (= ?x1615 ?x1477)))
 (let ((?x1291 (right s___________)))
 (let ((?x1622 (top ?x1291)))
 (let ((?x1624 (stack ?x1622 ?x1477)))
 (let (($x1650 (= ?x1615 ?x1624)))
 (let (($x1625 ((_ is stack ) ?x1291)))
 (let (($x1626 (= c___________ right-to-center)))
 (let (($x1627 (and $x1626 $x1625)))
 (let (($x1628 (= c___________ right-to-left)))
 (let (($x1629 (and $x1628 $x1625)))
 (let ((?x1617 (rest ?x1477)))
 (let (($x1645 (= ?x1615 ?x1617)))
 (let (($x1630 ((_ is stack ) ?x1477)))
 (let (($x1631 (= c___________ center-to-right)))
 (let (($x1632 (and $x1631 $x1630)))
 (let (($x1633 (= c___________ center-to-left)))
 (let (($x1634 (and $x1633 $x1630)))
 (let ((?x1257 (left s___________)))
 (let ((?x1475 (top ?x1257)))
 (let ((?x1616 (stack ?x1475 ?x1477)))
 (let (($x1644 (= ?x1615 ?x1616)))
 (let (($x1635 ((_ is stack ) ?x1257)))
 (let (($x1636 (= c___________ left-to-right)))
 (let (($x1637 (and $x1636 $x1635)))
 (let (($x1667 (ite $x1637 $x1644 (ite $x1634 $x1645 (ite $x1632 $x1645 (ite $x1629 $x1653 (ite $x1627 $x1650 $x1653)))))))
 (let (($x1638 (= c___________ left-to-center)))
 (let (($x1639 (and $x1638 $x1635)))
 (ite $x1639 $x1653 $x1667)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1395 (left s____________)))
 (let ((?x1533 (left s_____________)))
 (let (($x1793 (= ?x1533 ?x1395)))
 (let ((?x1429 (right s____________)))
 (let ((?x1760 (top ?x1429)))
 (let ((?x1761 (stack ?x1760 ?x1395)))
 (let (($x1787 (= ?x1533 ?x1761)))
 (let (($x1763 ((_ is stack ) ?x1429)))
 (let (($x1766 (= c____________ right-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1615 (center s____________)))
 (let (($x1768 ((_ is stack ) ?x1615)))
 (let (($x1769 (= c____________ center-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let ((?x1756 (top ?x1615)))
 (let ((?x1757 (stack ?x1756 ?x1395)))
 (let (($x1784 (= ?x1533 ?x1757)))
 (let (($x1771 (= c____________ center-to-left)))
 (let (($x1772 (and $x1771 $x1768)))
 (let ((?x1566 (rest ?x1395)))
 (let (($x1780 (= ?x1533 ?x1566)))
 (let (($x1773 ((_ is stack ) ?x1395)))
 (let (($x1774 (= c____________ left-to-right)))
 (let (($x1775 (and $x1774 $x1773)))
 (let (($x1776 (= c____________ left-to-center)))
 (let (($x1777 (and $x1776 $x1773)))
 (ite $x1777 $x1780 (ite $x1775 $x1780 (ite $x1772 $x1784 (ite $x1770 $x1793 (ite $x1767 $x1787 $x1793))))))))))))))))))))))))))))))))
(assert
 (let ((?x1429 (right s____________)))
 (let ((?x1567 (right s_____________)))
 (let (($x1789 (= ?x1567 ?x1429)))
 (let ((?x1759 (rest ?x1429)))
 (let (($x1786 (= ?x1567 ?x1759)))
 (let (($x1763 ((_ is stack ) ?x1429)))
 (let (($x1764 (= c____________ right-to-center)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1766 (= c____________ right-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1615 (center s____________)))
 (let ((?x1756 (top ?x1615)))
 (let ((?x1758 (stack ?x1756 ?x1429)))
 (let (($x1785 (= ?x1567 ?x1758)))
 (let (($x1768 ((_ is stack ) ?x1615)))
 (let (($x1769 (= c____________ center-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let (($x1771 (= c____________ center-to-left)))
 (let (($x1772 (and $x1771 $x1768)))
 (let ((?x1395 (left s____________)))
 (let (($x1773 ((_ is stack ) ?x1395)))
 (let (($x1774 (= c____________ left-to-right)))
 (let (($x1775 (and $x1774 $x1773)))
 (let (($x1806 (ite $x1775 $x1789 (ite $x1772 $x1789 (ite $x1770 $x1785 (ite $x1767 $x1786 (ite $x1765 $x1786 $x1789)))))))
 (let ((?x1613 (top ?x1395)))
 (let ((?x1752 (stack ?x1613 ?x1429)))
 (let (($x1781 (= ?x1567 ?x1752)))
 (let (($x1776 (= c____________ left-to-center)))
 (let (($x1777 (and $x1776 $x1773)))
 (ite $x1777 $x1781 $x1806)))))))))))))))))))))))))))))))
(assert
 (let ((?x1615 (center s____________)))
 (let ((?x1753 (center s_____________)))
 (let (($x1791 (= ?x1753 ?x1615)))
 (let ((?x1429 (right s____________)))
 (let ((?x1760 (top ?x1429)))
 (let ((?x1762 (stack ?x1760 ?x1615)))
 (let (($x1788 (= ?x1753 ?x1762)))
 (let (($x1763 ((_ is stack ) ?x1429)))
 (let (($x1764 (= c____________ right-to-center)))
 (let (($x1765 (and $x1764 $x1763)))
 (let (($x1766 (= c____________ right-to-left)))
 (let (($x1767 (and $x1766 $x1763)))
 (let ((?x1755 (rest ?x1615)))
 (let (($x1783 (= ?x1753 ?x1755)))
 (let (($x1768 ((_ is stack ) ?x1615)))
 (let (($x1769 (= c____________ center-to-right)))
 (let (($x1770 (and $x1769 $x1768)))
 (let (($x1771 (= c____________ center-to-left)))
 (let (($x1772 (and $x1771 $x1768)))
 (let ((?x1395 (left s____________)))
 (let ((?x1613 (top ?x1395)))
 (let ((?x1754 (stack ?x1613 ?x1615)))
 (let (($x1782 (= ?x1753 ?x1754)))
 (let (($x1773 ((_ is stack ) ?x1395)))
 (let (($x1774 (= c____________ left-to-right)))
 (let (($x1775 (and $x1774 $x1773)))
 (let (($x1805 (ite $x1775 $x1782 (ite $x1772 $x1783 (ite $x1770 $x1783 (ite $x1767 $x1791 (ite $x1765 $x1788 $x1791)))))))
 (let (($x1776 (= c____________ left-to-center)))
 (let (($x1777 (and $x1776 $x1773)))
 (ite $x1777 $x1791 $x1805)))))))))))))))))))))))))))))))
(assert
 (let ((?x1567 (right s_____________)))
 (let (($x1809 (= ?x1567 empty)))
 (let ((?x68 (stack O (stack C empty))))
 (let ((?x1753 (center s_____________)))
 (let (($x1840 (= ?x1753 ?x68)))
 (let ((?x55 (stack S (stack I (stack A (stack M (stack D (stack B empty))))))))
 (let ((?x61 (stack K (stack F (stack E (stack N (stack L (stack P ?x55))))))))
 (let ((?x66 (stack G (stack Q (stack H (stack R (stack J ?x61)))))))
 (let ((?x1533 (left s_____________)))
 (let (($x1841 (= ?x1533 ?x66)))
 (let (($x1843 (not (and $x1841 $x1840 $x1809))))
 (not $x1843)))))))))))))
(check-sat)
(exit)
