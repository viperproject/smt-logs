(set-info :smt-lib-version 2.6)
(set-logic QF_DT)
(set-info :source |
Generated by: Federico Mora
Generated on: 2023-07-20
Generator: z3 Python bindings via UCLID5 Python API
Application: Blocksworld Automated Reasoning Problems.
Target solvers: Algaroba, cvc5, Z3, Princess
Publications: Shah, Mora and Seshia. An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. AAAI â€™24 |)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown) 
(declare-datatypes ((Enum_A_B_C_D_E_F_G_H_I_J_K 0)) (((A) (B) (C) (D) (E) (F) (G) (H) (I) (J) (K))))
(declare-datatypes ((Tower 0)) (((stack (top Enum_A_B_C_D_E_F_G_H_I_J_K) (rest Tower)) (empty))))
(declare-datatypes ((Record_left_center_right 0)) (((Record_left_center_right (left Tower) (center Tower) (right Tower)))))
(declare-datatypes ((Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center 0)) (((left-to-center) (left-to-right) (center-to-left) (center-to-right) (right-to-left) (right-to-center))))
(declare-fun s () Record_left_center_right)
(declare-fun s_tmp () Record_left_center_right)
(declare-fun c () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_tmp_ () Record_left_center_right)
(declare-fun s_tmp__ () Record_left_center_right)
(declare-fun s_tmp___ () Record_left_center_right)
(declare-fun c!0 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_tmp____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_ () Record_left_center_right)
(declare-fun c_ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c!1 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__ () Record_left_center_right)
(declare-fun c!2 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___ () Record_left_center_right)
(declare-fun c!3 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____ () Record_left_center_right)
(declare-fun c!4 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____ () Record_left_center_right)
(declare-fun c!5 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______ () Record_left_center_right)
(declare-fun c!6 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______ () Record_left_center_right)
(declare-fun c!7 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________ () Record_left_center_right)
(declare-fun c!8 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________ () Record_left_center_right)
(declare-fun c!9 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________ () Record_left_center_right)
(declare-fun c!10 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________ () Record_left_center_right)
(declare-fun c!11 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s____________ () Record_left_center_right)
(declare-fun c!12 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_____________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_____________ () Record_left_center_right)
(declare-fun c!13 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s______________ () Record_left_center_right)
(declare-fun c!14 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_______________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_______________ () Record_left_center_right)
(declare-fun c!15 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s________________ () Record_left_center_right)
(declare-fun c!16 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c_________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s_________________ () Record_left_center_right)
(declare-fun c!17 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c__________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s__________________ () Record_left_center_right)
(declare-fun c!18 () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun c___________________ () Enum_left-to-center_left-to-right_center-to-left_center-to-right_right-to-left_right-to-center)
(declare-fun s___________________ () Record_left_center_right)
(assert
 (= s_tmp s))
(assert
 (= c_tmp c))
(assert
 (let ((?x23 (stack G empty)))
 (let ((?x24 (stack D ?x23)))
 (let ((?x91 (left s_tmp_)))
 (= ?x91 ?x24)))))
(assert
 (let ((?x25 (stack F empty)))
 (let ((?x26 (stack A ?x25)))
 (let ((?x27 (stack E ?x26)))
 (let ((?x28 (stack B ?x27)))
 (let ((?x29 (stack C ?x28)))
 (let ((?x30 (stack I ?x29)))
 (let ((?x31 (stack J ?x30)))
 (let ((?x94 (center s_tmp__)))
 (= ?x94 ?x31))))))))))
(assert
 (let ((?x32 (stack H empty)))
 (let ((?x33 (stack K ?x32)))
 (let ((?x97 (right s_tmp___)))
 (= ?x97 ?x33)))))
(assert
 (= c_tmp____ c!0))
(assert
 (= s_ s_tmp___))
(assert
 (= c_ c_tmp____))
(assert
 (let ((?x124 (left s_tmp__)))
 (= (left s_tmp___) ?x124)))
(assert
 (let ((?x94 (center s_tmp__)))
 (= (center s_tmp___) ?x94)))
(assert
 (let ((?x128 (center s_tmp_)))
 (= ?x128 (center s_tmp))))
(assert
 (let ((?x131 (right s_tmp_)))
 (= ?x131 (right s_tmp))))
(assert
 (let ((?x91 (left s_tmp_)))
 (let ((?x124 (left s_tmp__)))
 (= ?x124 ?x91))))
(assert
 (let ((?x131 (right s_tmp_)))
 (let ((?x135 (right s_tmp__)))
 (= ?x135 ?x131))))
(assert
 (= c__ c!1))
(assert
 (let ((?x68 (left s_)))
 (let ((?x221 (left s__)))
 (let (($x257 (= ?x221 ?x68)))
 (let ((?x71 (right s_)))
 (let (($x218 ((_ is stack ) ?x71)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x231 (and $x227 $x218)))
 (let ((?x73 (center s_)))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x233 (= c_ center-to-right)))
 (let (($x234 (and $x233 $x232)))
 (let (($x235 (= c_ center-to-left)))
 (let (($x236 (and $x235 $x232)))
 (let (($x266 (ite $x236 (= ?x221 (stack (top ?x73) ?x68)) (ite $x234 $x257 (ite $x231 (= ?x221 (stack (top ?x71) ?x68)) $x257)))))
 (let (($x244 (= ?x221 (rest ?x68))))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 $x244 (ite $x239 $x244 $x266)))))))))))))))))))))))
(assert
 (let ((?x71 (right s_)))
 (let ((?x223 (right s__)))
 (let (($x253 (= ?x223 ?x71)))
 (let (($x250 (= ?x223 (rest ?x71))))
 (let (($x218 ((_ is stack ) ?x71)))
 (let (($x225 (= c_ right-to-center)))
 (let (($x226 (and $x225 $x218)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x231 (and $x227 $x218)))
 (let ((?x73 (center s_)))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x233 (= c_ center-to-right)))
 (let (($x234 (and $x233 $x232)))
 (let (($x263 (ite $x234 (= ?x223 (stack (top ?x73) ?x71)) (ite $x231 $x250 (ite $x226 $x250 $x253)))))
 (let (($x235 (= c_ center-to-left)))
 (let (($x236 (and $x235 $x232)))
 (let ((?x68 (left s_)))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 (= ?x223 (stack (top ?x68) ?x71)) (ite $x239 $x253 (ite $x236 $x253 $x263))))))))))))))))))))))))))
(assert
 (let ((?x73 (center s_)))
 (let ((?x211 (center s__)))
 (let (($x255 (= ?x211 ?x73)))
 (let ((?x71 (right s_)))
 (let (($x218 ((_ is stack ) ?x71)))
 (let (($x225 (= c_ right-to-center)))
 (let (($x226 (and $x225 $x218)))
 (let (($x227 (= c_ right-to-left)))
 (let (($x231 (and $x227 $x218)))
 (let (($x247 (= ?x211 (rest ?x73))))
 (let (($x232 ((_ is stack ) ?x73)))
 (let (($x233 (= c_ center-to-right)))
 (let (($x234 (and $x233 $x232)))
 (let (($x262 (ite $x234 $x247 (ite $x231 $x255 (ite $x226 (= ?x211 (stack (top ?x71) ?x73)) $x255)))))
 (let (($x235 (= c_ center-to-left)))
 (let (($x236 (and $x235 $x232)))
 (let ((?x68 (left s_)))
 (let (($x237 ((_ is stack ) ?x68)))
 (let (($x238 (= c_ left-to-right)))
 (let (($x239 (and $x238 $x237)))
 (let (($x240 (= c_ left-to-center)))
 (let (($x241 (and $x240 $x237)))
 (ite $x241 $x255 (ite $x239 (= ?x211 (stack (top ?x68) ?x73)) (ite $x236 $x247 $x262))))))))))))))))))))))))))
(assert
 (= c___ c!2))
(assert
 (let ((?x221 (left s__)))
 (let ((?x138 (left s___)))
 (let (($x386 (= ?x138 ?x221)))
 (let ((?x223 (right s__)))
 (let ((?x353 (top ?x223)))
 (let ((?x354 (stack ?x353 ?x221)))
 (let (($x380 (= ?x138 ?x354)))
 (let (($x356 ((_ is stack ) ?x223)))
 (let (($x359 (= c__ right-to-left)))
 (let (($x360 (and $x359 $x356)))
 (let ((?x211 (center s__)))
 (let (($x361 ((_ is stack ) ?x211)))
 (let (($x362 (= c__ center-to-right)))
 (let (($x363 (and $x362 $x361)))
 (let ((?x349 (top ?x211)))
 (let ((?x350 (stack ?x349 ?x221)))
 (let (($x377 (= ?x138 ?x350)))
 (let (($x364 (= c__ center-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x140 (rest ?x221)))
 (let (($x373 (= ?x138 ?x140)))
 (let (($x366 ((_ is stack ) ?x221)))
 (let (($x367 (= c__ left-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let (($x369 (= c__ left-to-center)))
 (let (($x370 (and $x369 $x366)))
 (ite $x370 $x373 (ite $x368 $x373 (ite $x365 $x377 (ite $x363 $x386 (ite $x360 $x380 $x386))))))))))))))))))))))))))))))))
(assert
 (let ((?x223 (right s__)))
 (let ((?x141 (right s___)))
 (let (($x382 (= ?x141 ?x223)))
 (let ((?x352 (rest ?x223)))
 (let (($x379 (= ?x141 ?x352)))
 (let (($x356 ((_ is stack ) ?x223)))
 (let (($x357 (= c__ right-to-center)))
 (let (($x358 (and $x357 $x356)))
 (let (($x359 (= c__ right-to-left)))
 (let (($x360 (and $x359 $x356)))
 (let ((?x211 (center s__)))
 (let ((?x349 (top ?x211)))
 (let ((?x351 (stack ?x349 ?x223)))
 (let (($x378 (= ?x141 ?x351)))
 (let (($x361 ((_ is stack ) ?x211)))
 (let (($x362 (= c__ center-to-right)))
 (let (($x363 (and $x362 $x361)))
 (let (($x364 (= c__ center-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x221 (left s__)))
 (let (($x366 ((_ is stack ) ?x221)))
 (let (($x367 (= c__ left-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let (($x399 (ite $x368 $x382 (ite $x365 $x382 (ite $x363 $x378 (ite $x360 $x379 (ite $x358 $x379 $x382)))))))
 (let ((?x209 (top ?x221)))
 (let ((?x345 (stack ?x209 ?x223)))
 (let (($x374 (= ?x141 ?x345)))
 (let (($x369 (= c__ left-to-center)))
 (let (($x370 (and $x369 $x366)))
 (ite $x370 $x374 $x399)))))))))))))))))))))))))))))))
(assert
 (let ((?x211 (center s__)))
 (let ((?x346 (center s___)))
 (let (($x384 (= ?x346 ?x211)))
 (let ((?x223 (right s__)))
 (let ((?x353 (top ?x223)))
 (let ((?x355 (stack ?x353 ?x211)))
 (let (($x381 (= ?x346 ?x355)))
 (let (($x356 ((_ is stack ) ?x223)))
 (let (($x357 (= c__ right-to-center)))
 (let (($x358 (and $x357 $x356)))
 (let (($x359 (= c__ right-to-left)))
 (let (($x360 (and $x359 $x356)))
 (let ((?x348 (rest ?x211)))
 (let (($x376 (= ?x346 ?x348)))
 (let (($x361 ((_ is stack ) ?x211)))
 (let (($x362 (= c__ center-to-right)))
 (let (($x363 (and $x362 $x361)))
 (let (($x364 (= c__ center-to-left)))
 (let (($x365 (and $x364 $x361)))
 (let ((?x221 (left s__)))
 (let ((?x209 (top ?x221)))
 (let ((?x347 (stack ?x209 ?x211)))
 (let (($x375 (= ?x346 ?x347)))
 (let (($x366 ((_ is stack ) ?x221)))
 (let (($x367 (= c__ left-to-right)))
 (let (($x368 (and $x367 $x366)))
 (let (($x398 (ite $x368 $x375 (ite $x365 $x376 (ite $x363 $x376 (ite $x360 $x384 (ite $x358 $x381 $x384)))))))
 (let (($x369 (= c__ left-to-center)))
 (let (($x370 (and $x369 $x366)))
 (ite $x370 $x384 $x398)))))))))))))))))))))))))))))))
(assert
 (= c____ c!3))
(assert
 (let ((?x138 (left s___)))
 (let ((?x273 (left s____)))
 (let (($x524 (= ?x273 ?x138)))
 (let ((?x141 (right s___)))
 (let ((?x491 (top ?x141)))
 (let ((?x492 (stack ?x491 ?x138)))
 (let (($x518 (= ?x273 ?x492)))
 (let (($x494 ((_ is stack ) ?x141)))
 (let (($x497 (= c___ right-to-left)))
 (let (($x498 (and $x497 $x494)))
 (let ((?x346 (center s___)))
 (let (($x499 ((_ is stack ) ?x346)))
 (let (($x500 (= c___ center-to-right)))
 (let (($x501 (and $x500 $x499)))
 (let ((?x487 (top ?x346)))
 (let ((?x488 (stack ?x487 ?x138)))
 (let (($x515 (= ?x273 ?x488)))
 (let (($x502 (= c___ center-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x317 (rest ?x138)))
 (let (($x511 (= ?x273 ?x317)))
 (let (($x504 ((_ is stack ) ?x138)))
 (let (($x505 (= c___ left-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let (($x507 (= c___ left-to-center)))
 (let (($x508 (and $x507 $x504)))
 (ite $x508 $x511 (ite $x506 $x511 (ite $x503 $x515 (ite $x501 $x524 (ite $x498 $x518 $x524))))))))))))))))))))))))))))))))
(assert
 (let ((?x141 (right s___)))
 (let ((?x318 (right s____)))
 (let (($x520 (= ?x318 ?x141)))
 (let ((?x490 (rest ?x141)))
 (let (($x517 (= ?x318 ?x490)))
 (let (($x494 ((_ is stack ) ?x141)))
 (let (($x495 (= c___ right-to-center)))
 (let (($x496 (and $x495 $x494)))
 (let (($x497 (= c___ right-to-left)))
 (let (($x498 (and $x497 $x494)))
 (let ((?x346 (center s___)))
 (let ((?x487 (top ?x346)))
 (let ((?x489 (stack ?x487 ?x141)))
 (let (($x516 (= ?x318 ?x489)))
 (let (($x499 ((_ is stack ) ?x346)))
 (let (($x500 (= c___ center-to-right)))
 (let (($x501 (and $x500 $x499)))
 (let (($x502 (= c___ center-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x138 (left s___)))
 (let (($x504 ((_ is stack ) ?x138)))
 (let (($x505 (= c___ left-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let (($x537 (ite $x506 $x520 (ite $x503 $x520 (ite $x501 $x516 (ite $x498 $x517 (ite $x496 $x517 $x520)))))))
 (let ((?x344 (top ?x138)))
 (let ((?x483 (stack ?x344 ?x141)))
 (let (($x512 (= ?x318 ?x483)))
 (let (($x507 (= c___ left-to-center)))
 (let (($x508 (and $x507 $x504)))
 (ite $x508 $x512 $x537)))))))))))))))))))))))))))))))
(assert
 (let ((?x346 (center s___)))
 (let ((?x484 (center s____)))
 (let (($x522 (= ?x484 ?x346)))
 (let ((?x141 (right s___)))
 (let ((?x491 (top ?x141)))
 (let ((?x493 (stack ?x491 ?x346)))
 (let (($x519 (= ?x484 ?x493)))
 (let (($x494 ((_ is stack ) ?x141)))
 (let (($x495 (= c___ right-to-center)))
 (let (($x496 (and $x495 $x494)))
 (let (($x497 (= c___ right-to-left)))
 (let (($x498 (and $x497 $x494)))
 (let ((?x486 (rest ?x346)))
 (let (($x514 (= ?x484 ?x486)))
 (let (($x499 ((_ is stack ) ?x346)))
 (let (($x500 (= c___ center-to-right)))
 (let (($x501 (and $x500 $x499)))
 (let (($x502 (= c___ center-to-left)))
 (let (($x503 (and $x502 $x499)))
 (let ((?x138 (left s___)))
 (let ((?x344 (top ?x138)))
 (let ((?x485 (stack ?x344 ?x346)))
 (let (($x513 (= ?x484 ?x485)))
 (let (($x504 ((_ is stack ) ?x138)))
 (let (($x505 (= c___ left-to-right)))
 (let (($x506 (and $x505 $x504)))
 (let (($x536 (ite $x506 $x513 (ite $x503 $x514 (ite $x501 $x514 (ite $x498 $x522 (ite $x496 $x519 $x522)))))))
 (let (($x507 (= c___ left-to-center)))
 (let (($x508 (and $x507 $x504)))
 (ite $x508 $x522 $x536)))))))))))))))))))))))))))))))
(assert
 (= c_____ c!4))
(assert
 (let ((?x273 (left s____)))
 (let ((?x402 (left s_____)))
 (let (($x662 (= ?x402 ?x273)))
 (let ((?x318 (right s____)))
 (let ((?x629 (top ?x318)))
 (let ((?x630 (stack ?x629 ?x273)))
 (let (($x656 (= ?x402 ?x630)))
 (let (($x632 ((_ is stack ) ?x318)))
 (let (($x635 (= c____ right-to-left)))
 (let (($x636 (and $x635 $x632)))
 (let ((?x484 (center s____)))
 (let (($x637 ((_ is stack ) ?x484)))
 (let (($x638 (= c____ center-to-right)))
 (let (($x639 (and $x638 $x637)))
 (let ((?x625 (top ?x484)))
 (let ((?x626 (stack ?x625 ?x273)))
 (let (($x653 (= ?x402 ?x626)))
 (let (($x640 (= c____ center-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x435 (rest ?x273)))
 (let (($x649 (= ?x402 ?x435)))
 (let (($x642 ((_ is stack ) ?x273)))
 (let (($x643 (= c____ left-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let (($x645 (= c____ left-to-center)))
 (let (($x646 (and $x645 $x642)))
 (ite $x646 $x649 (ite $x644 $x649 (ite $x641 $x653 (ite $x639 $x662 (ite $x636 $x656 $x662))))))))))))))))))))))))))))))))
(assert
 (let ((?x318 (right s____)))
 (let ((?x436 (right s_____)))
 (let (($x658 (= ?x436 ?x318)))
 (let ((?x628 (rest ?x318)))
 (let (($x655 (= ?x436 ?x628)))
 (let (($x632 ((_ is stack ) ?x318)))
 (let (($x633 (= c____ right-to-center)))
 (let (($x634 (and $x633 $x632)))
 (let (($x635 (= c____ right-to-left)))
 (let (($x636 (and $x635 $x632)))
 (let ((?x484 (center s____)))
 (let ((?x625 (top ?x484)))
 (let ((?x627 (stack ?x625 ?x318)))
 (let (($x654 (= ?x436 ?x627)))
 (let (($x637 ((_ is stack ) ?x484)))
 (let (($x638 (= c____ center-to-right)))
 (let (($x639 (and $x638 $x637)))
 (let (($x640 (= c____ center-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x273 (left s____)))
 (let (($x642 ((_ is stack ) ?x273)))
 (let (($x643 (= c____ left-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let (($x675 (ite $x644 $x658 (ite $x641 $x658 (ite $x639 $x654 (ite $x636 $x655 (ite $x634 $x655 $x658)))))))
 (let ((?x482 (top ?x273)))
 (let ((?x621 (stack ?x482 ?x318)))
 (let (($x650 (= ?x436 ?x621)))
 (let (($x645 (= c____ left-to-center)))
 (let (($x646 (and $x645 $x642)))
 (ite $x646 $x650 $x675)))))))))))))))))))))))))))))))
(assert
 (let ((?x484 (center s____)))
 (let ((?x622 (center s_____)))
 (let (($x660 (= ?x622 ?x484)))
 (let ((?x318 (right s____)))
 (let ((?x629 (top ?x318)))
 (let ((?x631 (stack ?x629 ?x484)))
 (let (($x657 (= ?x622 ?x631)))
 (let (($x632 ((_ is stack ) ?x318)))
 (let (($x633 (= c____ right-to-center)))
 (let (($x634 (and $x633 $x632)))
 (let (($x635 (= c____ right-to-left)))
 (let (($x636 (and $x635 $x632)))
 (let ((?x624 (rest ?x484)))
 (let (($x652 (= ?x622 ?x624)))
 (let (($x637 ((_ is stack ) ?x484)))
 (let (($x638 (= c____ center-to-right)))
 (let (($x639 (and $x638 $x637)))
 (let (($x640 (= c____ center-to-left)))
 (let (($x641 (and $x640 $x637)))
 (let ((?x273 (left s____)))
 (let ((?x482 (top ?x273)))
 (let ((?x623 (stack ?x482 ?x484)))
 (let (($x651 (= ?x622 ?x623)))
 (let (($x642 ((_ is stack ) ?x273)))
 (let (($x643 (= c____ left-to-right)))
 (let (($x644 (and $x643 $x642)))
 (let (($x674 (ite $x644 $x651 (ite $x641 $x652 (ite $x639 $x652 (ite $x636 $x660 (ite $x634 $x657 $x660)))))))
 (let (($x645 (= c____ left-to-center)))
 (let (($x646 (and $x645 $x642)))
 (ite $x646 $x660 $x674)))))))))))))))))))))))))))))))
(assert
 (= c______ c!5))
(assert
 (let ((?x402 (left s_____)))
 (let ((?x540 (left s______)))
 (let (($x800 (= ?x540 ?x402)))
 (let ((?x436 (right s_____)))
 (let ((?x767 (top ?x436)))
 (let ((?x768 (stack ?x767 ?x402)))
 (let (($x794 (= ?x540 ?x768)))
 (let (($x770 ((_ is stack ) ?x436)))
 (let (($x773 (= c_____ right-to-left)))
 (let (($x774 (and $x773 $x770)))
 (let ((?x622 (center s_____)))
 (let (($x775 ((_ is stack ) ?x622)))
 (let (($x776 (= c_____ center-to-right)))
 (let (($x777 (and $x776 $x775)))
 (let ((?x763 (top ?x622)))
 (let ((?x764 (stack ?x763 ?x402)))
 (let (($x791 (= ?x540 ?x764)))
 (let (($x778 (= c_____ center-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x573 (rest ?x402)))
 (let (($x787 (= ?x540 ?x573)))
 (let (($x780 ((_ is stack ) ?x402)))
 (let (($x781 (= c_____ left-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let (($x783 (= c_____ left-to-center)))
 (let (($x784 (and $x783 $x780)))
 (ite $x784 $x787 (ite $x782 $x787 (ite $x779 $x791 (ite $x777 $x800 (ite $x774 $x794 $x800))))))))))))))))))))))))))))))))
(assert
 (let ((?x436 (right s_____)))
 (let ((?x574 (right s______)))
 (let (($x796 (= ?x574 ?x436)))
 (let ((?x766 (rest ?x436)))
 (let (($x793 (= ?x574 ?x766)))
 (let (($x770 ((_ is stack ) ?x436)))
 (let (($x771 (= c_____ right-to-center)))
 (let (($x772 (and $x771 $x770)))
 (let (($x773 (= c_____ right-to-left)))
 (let (($x774 (and $x773 $x770)))
 (let ((?x622 (center s_____)))
 (let ((?x763 (top ?x622)))
 (let ((?x765 (stack ?x763 ?x436)))
 (let (($x792 (= ?x574 ?x765)))
 (let (($x775 ((_ is stack ) ?x622)))
 (let (($x776 (= c_____ center-to-right)))
 (let (($x777 (and $x776 $x775)))
 (let (($x778 (= c_____ center-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x402 (left s_____)))
 (let (($x780 ((_ is stack ) ?x402)))
 (let (($x781 (= c_____ left-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let (($x813 (ite $x782 $x796 (ite $x779 $x796 (ite $x777 $x792 (ite $x774 $x793 (ite $x772 $x793 $x796)))))))
 (let ((?x620 (top ?x402)))
 (let ((?x759 (stack ?x620 ?x436)))
 (let (($x788 (= ?x574 ?x759)))
 (let (($x783 (= c_____ left-to-center)))
 (let (($x784 (and $x783 $x780)))
 (ite $x784 $x788 $x813)))))))))))))))))))))))))))))))
(assert
 (let ((?x622 (center s_____)))
 (let ((?x760 (center s______)))
 (let (($x798 (= ?x760 ?x622)))
 (let ((?x436 (right s_____)))
 (let ((?x767 (top ?x436)))
 (let ((?x769 (stack ?x767 ?x622)))
 (let (($x795 (= ?x760 ?x769)))
 (let (($x770 ((_ is stack ) ?x436)))
 (let (($x771 (= c_____ right-to-center)))
 (let (($x772 (and $x771 $x770)))
 (let (($x773 (= c_____ right-to-left)))
 (let (($x774 (and $x773 $x770)))
 (let ((?x762 (rest ?x622)))
 (let (($x790 (= ?x760 ?x762)))
 (let (($x775 ((_ is stack ) ?x622)))
 (let (($x776 (= c_____ center-to-right)))
 (let (($x777 (and $x776 $x775)))
 (let (($x778 (= c_____ center-to-left)))
 (let (($x779 (and $x778 $x775)))
 (let ((?x402 (left s_____)))
 (let ((?x620 (top ?x402)))
 (let ((?x761 (stack ?x620 ?x622)))
 (let (($x789 (= ?x760 ?x761)))
 (let (($x780 ((_ is stack ) ?x402)))
 (let (($x781 (= c_____ left-to-right)))
 (let (($x782 (and $x781 $x780)))
 (let (($x812 (ite $x782 $x789 (ite $x779 $x790 (ite $x777 $x790 (ite $x774 $x798 (ite $x772 $x795 $x798)))))))
 (let (($x783 (= c_____ left-to-center)))
 (let (($x784 (and $x783 $x780)))
 (ite $x784 $x798 $x812)))))))))))))))))))))))))))))))
(assert
 (= c_______ c!6))
(assert
 (let ((?x540 (left s______)))
 (let ((?x678 (left s_______)))
 (let (($x938 (= ?x678 ?x540)))
 (let ((?x574 (right s______)))
 (let ((?x905 (top ?x574)))
 (let ((?x906 (stack ?x905 ?x540)))
 (let (($x932 (= ?x678 ?x906)))
 (let (($x908 ((_ is stack ) ?x574)))
 (let (($x911 (= c______ right-to-left)))
 (let (($x912 (and $x911 $x908)))
 (let ((?x760 (center s______)))
 (let (($x913 ((_ is stack ) ?x760)))
 (let (($x914 (= c______ center-to-right)))
 (let (($x915 (and $x914 $x913)))
 (let ((?x901 (top ?x760)))
 (let ((?x902 (stack ?x901 ?x540)))
 (let (($x929 (= ?x678 ?x902)))
 (let (($x916 (= c______ center-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x711 (rest ?x540)))
 (let (($x925 (= ?x678 ?x711)))
 (let (($x918 ((_ is stack ) ?x540)))
 (let (($x919 (= c______ left-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let (($x921 (= c______ left-to-center)))
 (let (($x922 (and $x921 $x918)))
 (ite $x922 $x925 (ite $x920 $x925 (ite $x917 $x929 (ite $x915 $x938 (ite $x912 $x932 $x938))))))))))))))))))))))))))))))))
(assert
 (let ((?x574 (right s______)))
 (let ((?x712 (right s_______)))
 (let (($x934 (= ?x712 ?x574)))
 (let ((?x904 (rest ?x574)))
 (let (($x931 (= ?x712 ?x904)))
 (let (($x908 ((_ is stack ) ?x574)))
 (let (($x909 (= c______ right-to-center)))
 (let (($x910 (and $x909 $x908)))
 (let (($x911 (= c______ right-to-left)))
 (let (($x912 (and $x911 $x908)))
 (let ((?x760 (center s______)))
 (let ((?x901 (top ?x760)))
 (let ((?x903 (stack ?x901 ?x574)))
 (let (($x930 (= ?x712 ?x903)))
 (let (($x913 ((_ is stack ) ?x760)))
 (let (($x914 (= c______ center-to-right)))
 (let (($x915 (and $x914 $x913)))
 (let (($x916 (= c______ center-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x540 (left s______)))
 (let (($x918 ((_ is stack ) ?x540)))
 (let (($x919 (= c______ left-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let (($x951 (ite $x920 $x934 (ite $x917 $x934 (ite $x915 $x930 (ite $x912 $x931 (ite $x910 $x931 $x934)))))))
 (let ((?x758 (top ?x540)))
 (let ((?x897 (stack ?x758 ?x574)))
 (let (($x926 (= ?x712 ?x897)))
 (let (($x921 (= c______ left-to-center)))
 (let (($x922 (and $x921 $x918)))
 (ite $x922 $x926 $x951)))))))))))))))))))))))))))))))
(assert
 (let ((?x760 (center s______)))
 (let ((?x898 (center s_______)))
 (let (($x936 (= ?x898 ?x760)))
 (let ((?x574 (right s______)))
 (let ((?x905 (top ?x574)))
 (let ((?x907 (stack ?x905 ?x760)))
 (let (($x933 (= ?x898 ?x907)))
 (let (($x908 ((_ is stack ) ?x574)))
 (let (($x909 (= c______ right-to-center)))
 (let (($x910 (and $x909 $x908)))
 (let (($x911 (= c______ right-to-left)))
 (let (($x912 (and $x911 $x908)))
 (let ((?x900 (rest ?x760)))
 (let (($x928 (= ?x898 ?x900)))
 (let (($x913 ((_ is stack ) ?x760)))
 (let (($x914 (= c______ center-to-right)))
 (let (($x915 (and $x914 $x913)))
 (let (($x916 (= c______ center-to-left)))
 (let (($x917 (and $x916 $x913)))
 (let ((?x540 (left s______)))
 (let ((?x758 (top ?x540)))
 (let ((?x899 (stack ?x758 ?x760)))
 (let (($x927 (= ?x898 ?x899)))
 (let (($x918 ((_ is stack ) ?x540)))
 (let (($x919 (= c______ left-to-right)))
 (let (($x920 (and $x919 $x918)))
 (let (($x950 (ite $x920 $x927 (ite $x917 $x928 (ite $x915 $x928 (ite $x912 $x936 (ite $x910 $x933 $x936)))))))
 (let (($x921 (= c______ left-to-center)))
 (let (($x922 (and $x921 $x918)))
 (ite $x922 $x936 $x950)))))))))))))))))))))))))))))))
(assert
 (= c________ c!7))
(assert
 (let ((?x678 (left s_______)))
 (let ((?x816 (left s________)))
 (let (($x1076 (= ?x816 ?x678)))
 (let ((?x712 (right s_______)))
 (let ((?x1043 (top ?x712)))
 (let ((?x1044 (stack ?x1043 ?x678)))
 (let (($x1070 (= ?x816 ?x1044)))
 (let (($x1046 ((_ is stack ) ?x712)))
 (let (($x1049 (= c_______ right-to-left)))
 (let (($x1050 (and $x1049 $x1046)))
 (let ((?x898 (center s_______)))
 (let (($x1051 ((_ is stack ) ?x898)))
 (let (($x1052 (= c_______ center-to-right)))
 (let (($x1053 (and $x1052 $x1051)))
 (let ((?x1039 (top ?x898)))
 (let ((?x1040 (stack ?x1039 ?x678)))
 (let (($x1067 (= ?x816 ?x1040)))
 (let (($x1054 (= c_______ center-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x849 (rest ?x678)))
 (let (($x1063 (= ?x816 ?x849)))
 (let (($x1056 ((_ is stack ) ?x678)))
 (let (($x1057 (= c_______ left-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let (($x1059 (= c_______ left-to-center)))
 (let (($x1060 (and $x1059 $x1056)))
 (ite $x1060 $x1063 (ite $x1058 $x1063 (ite $x1055 $x1067 (ite $x1053 $x1076 (ite $x1050 $x1070 $x1076))))))))))))))))))))))))))))))))
(assert
 (let ((?x712 (right s_______)))
 (let ((?x850 (right s________)))
 (let (($x1072 (= ?x850 ?x712)))
 (let ((?x1042 (rest ?x712)))
 (let (($x1069 (= ?x850 ?x1042)))
 (let (($x1046 ((_ is stack ) ?x712)))
 (let (($x1047 (= c_______ right-to-center)))
 (let (($x1048 (and $x1047 $x1046)))
 (let (($x1049 (= c_______ right-to-left)))
 (let (($x1050 (and $x1049 $x1046)))
 (let ((?x898 (center s_______)))
 (let ((?x1039 (top ?x898)))
 (let ((?x1041 (stack ?x1039 ?x712)))
 (let (($x1068 (= ?x850 ?x1041)))
 (let (($x1051 ((_ is stack ) ?x898)))
 (let (($x1052 (= c_______ center-to-right)))
 (let (($x1053 (and $x1052 $x1051)))
 (let (($x1054 (= c_______ center-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x678 (left s_______)))
 (let (($x1056 ((_ is stack ) ?x678)))
 (let (($x1057 (= c_______ left-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let (($x1089 (ite $x1058 $x1072 (ite $x1055 $x1072 (ite $x1053 $x1068 (ite $x1050 $x1069 (ite $x1048 $x1069 $x1072)))))))
 (let ((?x896 (top ?x678)))
 (let ((?x1035 (stack ?x896 ?x712)))
 (let (($x1064 (= ?x850 ?x1035)))
 (let (($x1059 (= c_______ left-to-center)))
 (let (($x1060 (and $x1059 $x1056)))
 (ite $x1060 $x1064 $x1089)))))))))))))))))))))))))))))))
(assert
 (let ((?x898 (center s_______)))
 (let ((?x1036 (center s________)))
 (let (($x1074 (= ?x1036 ?x898)))
 (let ((?x712 (right s_______)))
 (let ((?x1043 (top ?x712)))
 (let ((?x1045 (stack ?x1043 ?x898)))
 (let (($x1071 (= ?x1036 ?x1045)))
 (let (($x1046 ((_ is stack ) ?x712)))
 (let (($x1047 (= c_______ right-to-center)))
 (let (($x1048 (and $x1047 $x1046)))
 (let (($x1049 (= c_______ right-to-left)))
 (let (($x1050 (and $x1049 $x1046)))
 (let ((?x1038 (rest ?x898)))
 (let (($x1066 (= ?x1036 ?x1038)))
 (let (($x1051 ((_ is stack ) ?x898)))
 (let (($x1052 (= c_______ center-to-right)))
 (let (($x1053 (and $x1052 $x1051)))
 (let (($x1054 (= c_______ center-to-left)))
 (let (($x1055 (and $x1054 $x1051)))
 (let ((?x678 (left s_______)))
 (let ((?x896 (top ?x678)))
 (let ((?x1037 (stack ?x896 ?x898)))
 (let (($x1065 (= ?x1036 ?x1037)))
 (let (($x1056 ((_ is stack ) ?x678)))
 (let (($x1057 (= c_______ left-to-right)))
 (let (($x1058 (and $x1057 $x1056)))
 (let (($x1088 (ite $x1058 $x1065 (ite $x1055 $x1066 (ite $x1053 $x1066 (ite $x1050 $x1074 (ite $x1048 $x1071 $x1074)))))))
 (let (($x1059 (= c_______ left-to-center)))
 (let (($x1060 (and $x1059 $x1056)))
 (ite $x1060 $x1074 $x1088)))))))))))))))))))))))))))))))
(assert
 (= c_________ c!8))
(assert
 (let ((?x816 (left s________)))
 (let ((?x954 (left s_________)))
 (let (($x1214 (= ?x954 ?x816)))
 (let ((?x850 (right s________)))
 (let ((?x1181 (top ?x850)))
 (let ((?x1182 (stack ?x1181 ?x816)))
 (let (($x1208 (= ?x954 ?x1182)))
 (let (($x1184 ((_ is stack ) ?x850)))
 (let (($x1187 (= c________ right-to-left)))
 (let (($x1188 (and $x1187 $x1184)))
 (let ((?x1036 (center s________)))
 (let (($x1189 ((_ is stack ) ?x1036)))
 (let (($x1190 (= c________ center-to-right)))
 (let (($x1191 (and $x1190 $x1189)))
 (let ((?x1177 (top ?x1036)))
 (let ((?x1178 (stack ?x1177 ?x816)))
 (let (($x1205 (= ?x954 ?x1178)))
 (let (($x1192 (= c________ center-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x987 (rest ?x816)))
 (let (($x1201 (= ?x954 ?x987)))
 (let (($x1194 ((_ is stack ) ?x816)))
 (let (($x1195 (= c________ left-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let (($x1197 (= c________ left-to-center)))
 (let (($x1198 (and $x1197 $x1194)))
 (ite $x1198 $x1201 (ite $x1196 $x1201 (ite $x1193 $x1205 (ite $x1191 $x1214 (ite $x1188 $x1208 $x1214))))))))))))))))))))))))))))))))
(assert
 (let ((?x850 (right s________)))
 (let ((?x988 (right s_________)))
 (let (($x1210 (= ?x988 ?x850)))
 (let ((?x1180 (rest ?x850)))
 (let (($x1207 (= ?x988 ?x1180)))
 (let (($x1184 ((_ is stack ) ?x850)))
 (let (($x1185 (= c________ right-to-center)))
 (let (($x1186 (and $x1185 $x1184)))
 (let (($x1187 (= c________ right-to-left)))
 (let (($x1188 (and $x1187 $x1184)))
 (let ((?x1036 (center s________)))
 (let ((?x1177 (top ?x1036)))
 (let ((?x1179 (stack ?x1177 ?x850)))
 (let (($x1206 (= ?x988 ?x1179)))
 (let (($x1189 ((_ is stack ) ?x1036)))
 (let (($x1190 (= c________ center-to-right)))
 (let (($x1191 (and $x1190 $x1189)))
 (let (($x1192 (= c________ center-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x816 (left s________)))
 (let (($x1194 ((_ is stack ) ?x816)))
 (let (($x1195 (= c________ left-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let (($x1227 (ite $x1196 $x1210 (ite $x1193 $x1210 (ite $x1191 $x1206 (ite $x1188 $x1207 (ite $x1186 $x1207 $x1210)))))))
 (let ((?x1034 (top ?x816)))
 (let ((?x1173 (stack ?x1034 ?x850)))
 (let (($x1202 (= ?x988 ?x1173)))
 (let (($x1197 (= c________ left-to-center)))
 (let (($x1198 (and $x1197 $x1194)))
 (ite $x1198 $x1202 $x1227)))))))))))))))))))))))))))))))
(assert
 (let ((?x1036 (center s________)))
 (let ((?x1174 (center s_________)))
 (let (($x1212 (= ?x1174 ?x1036)))
 (let ((?x850 (right s________)))
 (let ((?x1181 (top ?x850)))
 (let ((?x1183 (stack ?x1181 ?x1036)))
 (let (($x1209 (= ?x1174 ?x1183)))
 (let (($x1184 ((_ is stack ) ?x850)))
 (let (($x1185 (= c________ right-to-center)))
 (let (($x1186 (and $x1185 $x1184)))
 (let (($x1187 (= c________ right-to-left)))
 (let (($x1188 (and $x1187 $x1184)))
 (let ((?x1176 (rest ?x1036)))
 (let (($x1204 (= ?x1174 ?x1176)))
 (let (($x1189 ((_ is stack ) ?x1036)))
 (let (($x1190 (= c________ center-to-right)))
 (let (($x1191 (and $x1190 $x1189)))
 (let (($x1192 (= c________ center-to-left)))
 (let (($x1193 (and $x1192 $x1189)))
 (let ((?x816 (left s________)))
 (let ((?x1034 (top ?x816)))
 (let ((?x1175 (stack ?x1034 ?x1036)))
 (let (($x1203 (= ?x1174 ?x1175)))
 (let (($x1194 ((_ is stack ) ?x816)))
 (let (($x1195 (= c________ left-to-right)))
 (let (($x1196 (and $x1195 $x1194)))
 (let (($x1226 (ite $x1196 $x1203 (ite $x1193 $x1204 (ite $x1191 $x1204 (ite $x1188 $x1212 (ite $x1186 $x1209 $x1212)))))))
 (let (($x1197 (= c________ left-to-center)))
 (let (($x1198 (and $x1197 $x1194)))
 (ite $x1198 $x1212 $x1226)))))))))))))))))))))))))))))))
(assert
 (= c__________ c!9))
(assert
 (let ((?x954 (left s_________)))
 (let ((?x1092 (left s__________)))
 (let (($x1352 (= ?x1092 ?x954)))
 (let ((?x988 (right s_________)))
 (let ((?x1319 (top ?x988)))
 (let ((?x1320 (stack ?x1319 ?x954)))
 (let (($x1346 (= ?x1092 ?x1320)))
 (let (($x1322 ((_ is stack ) ?x988)))
 (let (($x1325 (= c_________ right-to-left)))
 (let (($x1326 (and $x1325 $x1322)))
 (let ((?x1174 (center s_________)))
 (let (($x1327 ((_ is stack ) ?x1174)))
 (let (($x1328 (= c_________ center-to-right)))
 (let (($x1329 (and $x1328 $x1327)))
 (let ((?x1315 (top ?x1174)))
 (let ((?x1316 (stack ?x1315 ?x954)))
 (let (($x1343 (= ?x1092 ?x1316)))
 (let (($x1330 (= c_________ center-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x1125 (rest ?x954)))
 (let (($x1339 (= ?x1092 ?x1125)))
 (let (($x1332 ((_ is stack ) ?x954)))
 (let (($x1333 (= c_________ left-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let (($x1335 (= c_________ left-to-center)))
 (let (($x1336 (and $x1335 $x1332)))
 (ite $x1336 $x1339 (ite $x1334 $x1339 (ite $x1331 $x1343 (ite $x1329 $x1352 (ite $x1326 $x1346 $x1352))))))))))))))))))))))))))))))))
(assert
 (let ((?x988 (right s_________)))
 (let ((?x1126 (right s__________)))
 (let (($x1348 (= ?x1126 ?x988)))
 (let ((?x1318 (rest ?x988)))
 (let (($x1345 (= ?x1126 ?x1318)))
 (let (($x1322 ((_ is stack ) ?x988)))
 (let (($x1323 (= c_________ right-to-center)))
 (let (($x1324 (and $x1323 $x1322)))
 (let (($x1325 (= c_________ right-to-left)))
 (let (($x1326 (and $x1325 $x1322)))
 (let ((?x1174 (center s_________)))
 (let ((?x1315 (top ?x1174)))
 (let ((?x1317 (stack ?x1315 ?x988)))
 (let (($x1344 (= ?x1126 ?x1317)))
 (let (($x1327 ((_ is stack ) ?x1174)))
 (let (($x1328 (= c_________ center-to-right)))
 (let (($x1329 (and $x1328 $x1327)))
 (let (($x1330 (= c_________ center-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x954 (left s_________)))
 (let (($x1332 ((_ is stack ) ?x954)))
 (let (($x1333 (= c_________ left-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let (($x1365 (ite $x1334 $x1348 (ite $x1331 $x1348 (ite $x1329 $x1344 (ite $x1326 $x1345 (ite $x1324 $x1345 $x1348)))))))
 (let ((?x1172 (top ?x954)))
 (let ((?x1311 (stack ?x1172 ?x988)))
 (let (($x1340 (= ?x1126 ?x1311)))
 (let (($x1335 (= c_________ left-to-center)))
 (let (($x1336 (and $x1335 $x1332)))
 (ite $x1336 $x1340 $x1365)))))))))))))))))))))))))))))))
(assert
 (let ((?x1174 (center s_________)))
 (let ((?x1312 (center s__________)))
 (let (($x1350 (= ?x1312 ?x1174)))
 (let ((?x988 (right s_________)))
 (let ((?x1319 (top ?x988)))
 (let ((?x1321 (stack ?x1319 ?x1174)))
 (let (($x1347 (= ?x1312 ?x1321)))
 (let (($x1322 ((_ is stack ) ?x988)))
 (let (($x1323 (= c_________ right-to-center)))
 (let (($x1324 (and $x1323 $x1322)))
 (let (($x1325 (= c_________ right-to-left)))
 (let (($x1326 (and $x1325 $x1322)))
 (let ((?x1314 (rest ?x1174)))
 (let (($x1342 (= ?x1312 ?x1314)))
 (let (($x1327 ((_ is stack ) ?x1174)))
 (let (($x1328 (= c_________ center-to-right)))
 (let (($x1329 (and $x1328 $x1327)))
 (let (($x1330 (= c_________ center-to-left)))
 (let (($x1331 (and $x1330 $x1327)))
 (let ((?x954 (left s_________)))
 (let ((?x1172 (top ?x954)))
 (let ((?x1313 (stack ?x1172 ?x1174)))
 (let (($x1341 (= ?x1312 ?x1313)))
 (let (($x1332 ((_ is stack ) ?x954)))
 (let (($x1333 (= c_________ left-to-right)))
 (let (($x1334 (and $x1333 $x1332)))
 (let (($x1364 (ite $x1334 $x1341 (ite $x1331 $x1342 (ite $x1329 $x1342 (ite $x1326 $x1350 (ite $x1324 $x1347 $x1350)))))))
 (let (($x1335 (= c_________ left-to-center)))
 (let (($x1336 (and $x1335 $x1332)))
 (ite $x1336 $x1350 $x1364)))))))))))))))))))))))))))))))
(assert
 (= c___________ c!10))
(assert
 (let ((?x1092 (left s__________)))
 (let ((?x1230 (left s___________)))
 (let (($x1490 (= ?x1230 ?x1092)))
 (let ((?x1126 (right s__________)))
 (let ((?x1457 (top ?x1126)))
 (let ((?x1458 (stack ?x1457 ?x1092)))
 (let (($x1484 (= ?x1230 ?x1458)))
 (let (($x1460 ((_ is stack ) ?x1126)))
 (let (($x1463 (= c__________ right-to-left)))
 (let (($x1464 (and $x1463 $x1460)))
 (let ((?x1312 (center s__________)))
 (let (($x1465 ((_ is stack ) ?x1312)))
 (let (($x1466 (= c__________ center-to-right)))
 (let (($x1467 (and $x1466 $x1465)))
 (let ((?x1453 (top ?x1312)))
 (let ((?x1454 (stack ?x1453 ?x1092)))
 (let (($x1481 (= ?x1230 ?x1454)))
 (let (($x1468 (= c__________ center-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1263 (rest ?x1092)))
 (let (($x1477 (= ?x1230 ?x1263)))
 (let (($x1470 ((_ is stack ) ?x1092)))
 (let (($x1471 (= c__________ left-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let (($x1473 (= c__________ left-to-center)))
 (let (($x1474 (and $x1473 $x1470)))
 (ite $x1474 $x1477 (ite $x1472 $x1477 (ite $x1469 $x1481 (ite $x1467 $x1490 (ite $x1464 $x1484 $x1490))))))))))))))))))))))))))))))))
(assert
 (let ((?x1126 (right s__________)))
 (let ((?x1264 (right s___________)))
 (let (($x1486 (= ?x1264 ?x1126)))
 (let ((?x1456 (rest ?x1126)))
 (let (($x1483 (= ?x1264 ?x1456)))
 (let (($x1460 ((_ is stack ) ?x1126)))
 (let (($x1461 (= c__________ right-to-center)))
 (let (($x1462 (and $x1461 $x1460)))
 (let (($x1463 (= c__________ right-to-left)))
 (let (($x1464 (and $x1463 $x1460)))
 (let ((?x1312 (center s__________)))
 (let ((?x1453 (top ?x1312)))
 (let ((?x1455 (stack ?x1453 ?x1126)))
 (let (($x1482 (= ?x1264 ?x1455)))
 (let (($x1465 ((_ is stack ) ?x1312)))
 (let (($x1466 (= c__________ center-to-right)))
 (let (($x1467 (and $x1466 $x1465)))
 (let (($x1468 (= c__________ center-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1092 (left s__________)))
 (let (($x1470 ((_ is stack ) ?x1092)))
 (let (($x1471 (= c__________ left-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let (($x1503 (ite $x1472 $x1486 (ite $x1469 $x1486 (ite $x1467 $x1482 (ite $x1464 $x1483 (ite $x1462 $x1483 $x1486)))))))
 (let ((?x1310 (top ?x1092)))
 (let ((?x1449 (stack ?x1310 ?x1126)))
 (let (($x1478 (= ?x1264 ?x1449)))
 (let (($x1473 (= c__________ left-to-center)))
 (let (($x1474 (and $x1473 $x1470)))
 (ite $x1474 $x1478 $x1503)))))))))))))))))))))))))))))))
(assert
 (let ((?x1312 (center s__________)))
 (let ((?x1450 (center s___________)))
 (let (($x1488 (= ?x1450 ?x1312)))
 (let ((?x1126 (right s__________)))
 (let ((?x1457 (top ?x1126)))
 (let ((?x1459 (stack ?x1457 ?x1312)))
 (let (($x1485 (= ?x1450 ?x1459)))
 (let (($x1460 ((_ is stack ) ?x1126)))
 (let (($x1461 (= c__________ right-to-center)))
 (let (($x1462 (and $x1461 $x1460)))
 (let (($x1463 (= c__________ right-to-left)))
 (let (($x1464 (and $x1463 $x1460)))
 (let ((?x1452 (rest ?x1312)))
 (let (($x1480 (= ?x1450 ?x1452)))
 (let (($x1465 ((_ is stack ) ?x1312)))
 (let (($x1466 (= c__________ center-to-right)))
 (let (($x1467 (and $x1466 $x1465)))
 (let (($x1468 (= c__________ center-to-left)))
 (let (($x1469 (and $x1468 $x1465)))
 (let ((?x1092 (left s__________)))
 (let ((?x1310 (top ?x1092)))
 (let ((?x1451 (stack ?x1310 ?x1312)))
 (let (($x1479 (= ?x1450 ?x1451)))
 (let (($x1470 ((_ is stack ) ?x1092)))
 (let (($x1471 (= c__________ left-to-right)))
 (let (($x1472 (and $x1471 $x1470)))
 (let (($x1502 (ite $x1472 $x1479 (ite $x1469 $x1480 (ite $x1467 $x1480 (ite $x1464 $x1488 (ite $x1462 $x1485 $x1488)))))))
 (let (($x1473 (= c__________ left-to-center)))
 (let (($x1474 (and $x1473 $x1470)))
 (ite $x1474 $x1488 $x1502)))))))))))))))))))))))))))))))
(assert
 (= c____________ c!11))
(assert
 (let ((?x1230 (left s___________)))
 (let ((?x1368 (left s____________)))
 (let (($x1628 (= ?x1368 ?x1230)))
 (let ((?x1264 (right s___________)))
 (let ((?x1595 (top ?x1264)))
 (let ((?x1596 (stack ?x1595 ?x1230)))
 (let (($x1622 (= ?x1368 ?x1596)))
 (let (($x1598 ((_ is stack ) ?x1264)))
 (let (($x1601 (= c___________ right-to-left)))
 (let (($x1602 (and $x1601 $x1598)))
 (let ((?x1450 (center s___________)))
 (let (($x1603 ((_ is stack ) ?x1450)))
 (let (($x1604 (= c___________ center-to-right)))
 (let (($x1605 (and $x1604 $x1603)))
 (let ((?x1591 (top ?x1450)))
 (let ((?x1592 (stack ?x1591 ?x1230)))
 (let (($x1619 (= ?x1368 ?x1592)))
 (let (($x1606 (= c___________ center-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1401 (rest ?x1230)))
 (let (($x1615 (= ?x1368 ?x1401)))
 (let (($x1608 ((_ is stack ) ?x1230)))
 (let (($x1609 (= c___________ left-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let (($x1611 (= c___________ left-to-center)))
 (let (($x1612 (and $x1611 $x1608)))
 (ite $x1612 $x1615 (ite $x1610 $x1615 (ite $x1607 $x1619 (ite $x1605 $x1628 (ite $x1602 $x1622 $x1628))))))))))))))))))))))))))))))))
(assert
 (let ((?x1264 (right s___________)))
 (let ((?x1402 (right s____________)))
 (let (($x1624 (= ?x1402 ?x1264)))
 (let ((?x1594 (rest ?x1264)))
 (let (($x1621 (= ?x1402 ?x1594)))
 (let (($x1598 ((_ is stack ) ?x1264)))
 (let (($x1599 (= c___________ right-to-center)))
 (let (($x1600 (and $x1599 $x1598)))
 (let (($x1601 (= c___________ right-to-left)))
 (let (($x1602 (and $x1601 $x1598)))
 (let ((?x1450 (center s___________)))
 (let ((?x1591 (top ?x1450)))
 (let ((?x1593 (stack ?x1591 ?x1264)))
 (let (($x1620 (= ?x1402 ?x1593)))
 (let (($x1603 ((_ is stack ) ?x1450)))
 (let (($x1604 (= c___________ center-to-right)))
 (let (($x1605 (and $x1604 $x1603)))
 (let (($x1606 (= c___________ center-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1230 (left s___________)))
 (let (($x1608 ((_ is stack ) ?x1230)))
 (let (($x1609 (= c___________ left-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let (($x1641 (ite $x1610 $x1624 (ite $x1607 $x1624 (ite $x1605 $x1620 (ite $x1602 $x1621 (ite $x1600 $x1621 $x1624)))))))
 (let ((?x1448 (top ?x1230)))
 (let ((?x1587 (stack ?x1448 ?x1264)))
 (let (($x1616 (= ?x1402 ?x1587)))
 (let (($x1611 (= c___________ left-to-center)))
 (let (($x1612 (and $x1611 $x1608)))
 (ite $x1612 $x1616 $x1641)))))))))))))))))))))))))))))))
(assert
 (let ((?x1450 (center s___________)))
 (let ((?x1588 (center s____________)))
 (let (($x1626 (= ?x1588 ?x1450)))
 (let ((?x1264 (right s___________)))
 (let ((?x1595 (top ?x1264)))
 (let ((?x1597 (stack ?x1595 ?x1450)))
 (let (($x1623 (= ?x1588 ?x1597)))
 (let (($x1598 ((_ is stack ) ?x1264)))
 (let (($x1599 (= c___________ right-to-center)))
 (let (($x1600 (and $x1599 $x1598)))
 (let (($x1601 (= c___________ right-to-left)))
 (let (($x1602 (and $x1601 $x1598)))
 (let ((?x1590 (rest ?x1450)))
 (let (($x1618 (= ?x1588 ?x1590)))
 (let (($x1603 ((_ is stack ) ?x1450)))
 (let (($x1604 (= c___________ center-to-right)))
 (let (($x1605 (and $x1604 $x1603)))
 (let (($x1606 (= c___________ center-to-left)))
 (let (($x1607 (and $x1606 $x1603)))
 (let ((?x1230 (left s___________)))
 (let ((?x1448 (top ?x1230)))
 (let ((?x1589 (stack ?x1448 ?x1450)))
 (let (($x1617 (= ?x1588 ?x1589)))
 (let (($x1608 ((_ is stack ) ?x1230)))
 (let (($x1609 (= c___________ left-to-right)))
 (let (($x1610 (and $x1609 $x1608)))
 (let (($x1640 (ite $x1610 $x1617 (ite $x1607 $x1618 (ite $x1605 $x1618 (ite $x1602 $x1626 (ite $x1600 $x1623 $x1626)))))))
 (let (($x1611 (= c___________ left-to-center)))
 (let (($x1612 (and $x1611 $x1608)))
 (ite $x1612 $x1626 $x1640)))))))))))))))))))))))))))))))
(assert
 (= c_____________ c!12))
(assert
 (let ((?x1368 (left s____________)))
 (let ((?x1506 (left s_____________)))
 (let (($x1766 (= ?x1506 ?x1368)))
 (let ((?x1402 (right s____________)))
 (let ((?x1733 (top ?x1402)))
 (let ((?x1734 (stack ?x1733 ?x1368)))
 (let (($x1760 (= ?x1506 ?x1734)))
 (let (($x1736 ((_ is stack ) ?x1402)))
 (let (($x1739 (= c____________ right-to-left)))
 (let (($x1740 (and $x1739 $x1736)))
 (let ((?x1588 (center s____________)))
 (let (($x1741 ((_ is stack ) ?x1588)))
 (let (($x1742 (= c____________ center-to-right)))
 (let (($x1743 (and $x1742 $x1741)))
 (let ((?x1729 (top ?x1588)))
 (let ((?x1730 (stack ?x1729 ?x1368)))
 (let (($x1757 (= ?x1506 ?x1730)))
 (let (($x1744 (= c____________ center-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1539 (rest ?x1368)))
 (let (($x1753 (= ?x1506 ?x1539)))
 (let (($x1746 ((_ is stack ) ?x1368)))
 (let (($x1747 (= c____________ left-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let (($x1749 (= c____________ left-to-center)))
 (let (($x1750 (and $x1749 $x1746)))
 (ite $x1750 $x1753 (ite $x1748 $x1753 (ite $x1745 $x1757 (ite $x1743 $x1766 (ite $x1740 $x1760 $x1766))))))))))))))))))))))))))))))))
(assert
 (let ((?x1402 (right s____________)))
 (let ((?x1540 (right s_____________)))
 (let (($x1762 (= ?x1540 ?x1402)))
 (let ((?x1732 (rest ?x1402)))
 (let (($x1759 (= ?x1540 ?x1732)))
 (let (($x1736 ((_ is stack ) ?x1402)))
 (let (($x1737 (= c____________ right-to-center)))
 (let (($x1738 (and $x1737 $x1736)))
 (let (($x1739 (= c____________ right-to-left)))
 (let (($x1740 (and $x1739 $x1736)))
 (let ((?x1588 (center s____________)))
 (let ((?x1729 (top ?x1588)))
 (let ((?x1731 (stack ?x1729 ?x1402)))
 (let (($x1758 (= ?x1540 ?x1731)))
 (let (($x1741 ((_ is stack ) ?x1588)))
 (let (($x1742 (= c____________ center-to-right)))
 (let (($x1743 (and $x1742 $x1741)))
 (let (($x1744 (= c____________ center-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1368 (left s____________)))
 (let (($x1746 ((_ is stack ) ?x1368)))
 (let (($x1747 (= c____________ left-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let (($x1779 (ite $x1748 $x1762 (ite $x1745 $x1762 (ite $x1743 $x1758 (ite $x1740 $x1759 (ite $x1738 $x1759 $x1762)))))))
 (let ((?x1586 (top ?x1368)))
 (let ((?x1725 (stack ?x1586 ?x1402)))
 (let (($x1754 (= ?x1540 ?x1725)))
 (let (($x1749 (= c____________ left-to-center)))
 (let (($x1750 (and $x1749 $x1746)))
 (ite $x1750 $x1754 $x1779)))))))))))))))))))))))))))))))
(assert
 (let ((?x1588 (center s____________)))
 (let ((?x1726 (center s_____________)))
 (let (($x1764 (= ?x1726 ?x1588)))
 (let ((?x1402 (right s____________)))
 (let ((?x1733 (top ?x1402)))
 (let ((?x1735 (stack ?x1733 ?x1588)))
 (let (($x1761 (= ?x1726 ?x1735)))
 (let (($x1736 ((_ is stack ) ?x1402)))
 (let (($x1737 (= c____________ right-to-center)))
 (let (($x1738 (and $x1737 $x1736)))
 (let (($x1739 (= c____________ right-to-left)))
 (let (($x1740 (and $x1739 $x1736)))
 (let ((?x1728 (rest ?x1588)))
 (let (($x1756 (= ?x1726 ?x1728)))
 (let (($x1741 ((_ is stack ) ?x1588)))
 (let (($x1742 (= c____________ center-to-right)))
 (let (($x1743 (and $x1742 $x1741)))
 (let (($x1744 (= c____________ center-to-left)))
 (let (($x1745 (and $x1744 $x1741)))
 (let ((?x1368 (left s____________)))
 (let ((?x1586 (top ?x1368)))
 (let ((?x1727 (stack ?x1586 ?x1588)))
 (let (($x1755 (= ?x1726 ?x1727)))
 (let (($x1746 ((_ is stack ) ?x1368)))
 (let (($x1747 (= c____________ left-to-right)))
 (let (($x1748 (and $x1747 $x1746)))
 (let (($x1778 (ite $x1748 $x1755 (ite $x1745 $x1756 (ite $x1743 $x1756 (ite $x1740 $x1764 (ite $x1738 $x1761 $x1764)))))))
 (let (($x1749 (= c____________ left-to-center)))
 (let (($x1750 (and $x1749 $x1746)))
 (ite $x1750 $x1764 $x1778)))))))))))))))))))))))))))))))
(assert
 (= c______________ c!13))
(assert
 (let ((?x1506 (left s_____________)))
 (let ((?x1644 (left s______________)))
 (let (($x1904 (= ?x1644 ?x1506)))
 (let ((?x1540 (right s_____________)))
 (let ((?x1871 (top ?x1540)))
 (let ((?x1872 (stack ?x1871 ?x1506)))
 (let (($x1898 (= ?x1644 ?x1872)))
 (let (($x1874 ((_ is stack ) ?x1540)))
 (let (($x1877 (= c_____________ right-to-left)))
 (let (($x1878 (and $x1877 $x1874)))
 (let ((?x1726 (center s_____________)))
 (let (($x1879 ((_ is stack ) ?x1726)))
 (let (($x1880 (= c_____________ center-to-right)))
 (let (($x1881 (and $x1880 $x1879)))
 (let ((?x1867 (top ?x1726)))
 (let ((?x1868 (stack ?x1867 ?x1506)))
 (let (($x1895 (= ?x1644 ?x1868)))
 (let (($x1882 (= c_____________ center-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1677 (rest ?x1506)))
 (let (($x1891 (= ?x1644 ?x1677)))
 (let (($x1884 ((_ is stack ) ?x1506)))
 (let (($x1885 (= c_____________ left-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let (($x1887 (= c_____________ left-to-center)))
 (let (($x1888 (and $x1887 $x1884)))
 (ite $x1888 $x1891 (ite $x1886 $x1891 (ite $x1883 $x1895 (ite $x1881 $x1904 (ite $x1878 $x1898 $x1904))))))))))))))))))))))))))))))))
(assert
 (let ((?x1540 (right s_____________)))
 (let ((?x1678 (right s______________)))
 (let (($x1900 (= ?x1678 ?x1540)))
 (let ((?x1870 (rest ?x1540)))
 (let (($x1897 (= ?x1678 ?x1870)))
 (let (($x1874 ((_ is stack ) ?x1540)))
 (let (($x1875 (= c_____________ right-to-center)))
 (let (($x1876 (and $x1875 $x1874)))
 (let (($x1877 (= c_____________ right-to-left)))
 (let (($x1878 (and $x1877 $x1874)))
 (let ((?x1726 (center s_____________)))
 (let ((?x1867 (top ?x1726)))
 (let ((?x1869 (stack ?x1867 ?x1540)))
 (let (($x1896 (= ?x1678 ?x1869)))
 (let (($x1879 ((_ is stack ) ?x1726)))
 (let (($x1880 (= c_____________ center-to-right)))
 (let (($x1881 (and $x1880 $x1879)))
 (let (($x1882 (= c_____________ center-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1506 (left s_____________)))
 (let (($x1884 ((_ is stack ) ?x1506)))
 (let (($x1885 (= c_____________ left-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let (($x1917 (ite $x1886 $x1900 (ite $x1883 $x1900 (ite $x1881 $x1896 (ite $x1878 $x1897 (ite $x1876 $x1897 $x1900)))))))
 (let ((?x1724 (top ?x1506)))
 (let ((?x1863 (stack ?x1724 ?x1540)))
 (let (($x1892 (= ?x1678 ?x1863)))
 (let (($x1887 (= c_____________ left-to-center)))
 (let (($x1888 (and $x1887 $x1884)))
 (ite $x1888 $x1892 $x1917)))))))))))))))))))))))))))))))
(assert
 (let ((?x1726 (center s_____________)))
 (let ((?x1864 (center s______________)))
 (let (($x1902 (= ?x1864 ?x1726)))
 (let ((?x1540 (right s_____________)))
 (let ((?x1871 (top ?x1540)))
 (let ((?x1873 (stack ?x1871 ?x1726)))
 (let (($x1899 (= ?x1864 ?x1873)))
 (let (($x1874 ((_ is stack ) ?x1540)))
 (let (($x1875 (= c_____________ right-to-center)))
 (let (($x1876 (and $x1875 $x1874)))
 (let (($x1877 (= c_____________ right-to-left)))
 (let (($x1878 (and $x1877 $x1874)))
 (let ((?x1866 (rest ?x1726)))
 (let (($x1894 (= ?x1864 ?x1866)))
 (let (($x1879 ((_ is stack ) ?x1726)))
 (let (($x1880 (= c_____________ center-to-right)))
 (let (($x1881 (and $x1880 $x1879)))
 (let (($x1882 (= c_____________ center-to-left)))
 (let (($x1883 (and $x1882 $x1879)))
 (let ((?x1506 (left s_____________)))
 (let ((?x1724 (top ?x1506)))
 (let ((?x1865 (stack ?x1724 ?x1726)))
 (let (($x1893 (= ?x1864 ?x1865)))
 (let (($x1884 ((_ is stack ) ?x1506)))
 (let (($x1885 (= c_____________ left-to-right)))
 (let (($x1886 (and $x1885 $x1884)))
 (let (($x1916 (ite $x1886 $x1893 (ite $x1883 $x1894 (ite $x1881 $x1894 (ite $x1878 $x1902 (ite $x1876 $x1899 $x1902)))))))
 (let (($x1887 (= c_____________ left-to-center)))
 (let (($x1888 (and $x1887 $x1884)))
 (ite $x1888 $x1902 $x1916)))))))))))))))))))))))))))))))
(assert
 (= c_______________ c!14))
(assert
 (let ((?x1644 (left s______________)))
 (let ((?x1782 (left s_______________)))
 (let (($x2042 (= ?x1782 ?x1644)))
 (let ((?x1678 (right s______________)))
 (let ((?x2009 (top ?x1678)))
 (let ((?x2010 (stack ?x2009 ?x1644)))
 (let (($x2036 (= ?x1782 ?x2010)))
 (let (($x2012 ((_ is stack ) ?x1678)))
 (let (($x2015 (= c______________ right-to-left)))
 (let (($x2016 (and $x2015 $x2012)))
 (let ((?x1864 (center s______________)))
 (let (($x2017 ((_ is stack ) ?x1864)))
 (let (($x2018 (= c______________ center-to-right)))
 (let (($x2019 (and $x2018 $x2017)))
 (let ((?x2005 (top ?x1864)))
 (let ((?x2006 (stack ?x2005 ?x1644)))
 (let (($x2033 (= ?x1782 ?x2006)))
 (let (($x2020 (= c______________ center-to-left)))
 (let (($x2021 (and $x2020 $x2017)))
 (let ((?x1815 (rest ?x1644)))
 (let (($x2029 (= ?x1782 ?x1815)))
 (let (($x2022 ((_ is stack ) ?x1644)))
 (let (($x2023 (= c______________ left-to-right)))
 (let (($x2024 (and $x2023 $x2022)))
 (let (($x2025 (= c______________ left-to-center)))
 (let (($x2026 (and $x2025 $x2022)))
 (ite $x2026 $x2029 (ite $x2024 $x2029 (ite $x2021 $x2033 (ite $x2019 $x2042 (ite $x2016 $x2036 $x2042))))))))))))))))))))))))))))))))
(assert
 (let ((?x1678 (right s______________)))
 (let ((?x1816 (right s_______________)))
 (let (($x2038 (= ?x1816 ?x1678)))
 (let ((?x2008 (rest ?x1678)))
 (let (($x2035 (= ?x1816 ?x2008)))
 (let (($x2012 ((_ is stack ) ?x1678)))
 (let (($x2013 (= c______________ right-to-center)))
 (let (($x2014 (and $x2013 $x2012)))
 (let (($x2015 (= c______________ right-to-left)))
 (let (($x2016 (and $x2015 $x2012)))
 (let ((?x1864 (center s______________)))
 (let ((?x2005 (top ?x1864)))
 (let ((?x2007 (stack ?x2005 ?x1678)))
 (let (($x2034 (= ?x1816 ?x2007)))
 (let (($x2017 ((_ is stack ) ?x1864)))
 (let (($x2018 (= c______________ center-to-right)))
 (let (($x2019 (and $x2018 $x2017)))
 (let (($x2020 (= c______________ center-to-left)))
 (let (($x2021 (and $x2020 $x2017)))
 (let ((?x1644 (left s______________)))
 (let (($x2022 ((_ is stack ) ?x1644)))
 (let (($x2023 (= c______________ left-to-right)))
 (let (($x2024 (and $x2023 $x2022)))
 (let (($x2055 (ite $x2024 $x2038 (ite $x2021 $x2038 (ite $x2019 $x2034 (ite $x2016 $x2035 (ite $x2014 $x2035 $x2038)))))))
 (let ((?x1862 (top ?x1644)))
 (let ((?x2001 (stack ?x1862 ?x1678)))
 (let (($x2030 (= ?x1816 ?x2001)))
 (let (($x2025 (= c______________ left-to-center)))
 (let (($x2026 (and $x2025 $x2022)))
 (ite $x2026 $x2030 $x2055)))))))))))))))))))))))))))))))
(assert
 (let ((?x1864 (center s______________)))
 (let ((?x2002 (center s_______________)))
 (let (($x2040 (= ?x2002 ?x1864)))
 (let ((?x1678 (right s______________)))
 (let ((?x2009 (top ?x1678)))
 (let ((?x2011 (stack ?x2009 ?x1864)))
 (let (($x2037 (= ?x2002 ?x2011)))
 (let (($x2012 ((_ is stack ) ?x1678)))
 (let (($x2013 (= c______________ right-to-center)))
 (let (($x2014 (and $x2013 $x2012)))
 (let (($x2015 (= c______________ right-to-left)))
 (let (($x2016 (and $x2015 $x2012)))
 (let ((?x2004 (rest ?x1864)))
 (let (($x2032 (= ?x2002 ?x2004)))
 (let (($x2017 ((_ is stack ) ?x1864)))
 (let (($x2018 (= c______________ center-to-right)))
 (let (($x2019 (and $x2018 $x2017)))
 (let (($x2020 (= c______________ center-to-left)))
 (let (($x2021 (and $x2020 $x2017)))
 (let ((?x1644 (left s______________)))
 (let ((?x1862 (top ?x1644)))
 (let ((?x2003 (stack ?x1862 ?x1864)))
 (let (($x2031 (= ?x2002 ?x2003)))
 (let (($x2022 ((_ is stack ) ?x1644)))
 (let (($x2023 (= c______________ left-to-right)))
 (let (($x2024 (and $x2023 $x2022)))
 (let (($x2054 (ite $x2024 $x2031 (ite $x2021 $x2032 (ite $x2019 $x2032 (ite $x2016 $x2040 (ite $x2014 $x2037 $x2040)))))))
 (let (($x2025 (= c______________ left-to-center)))
 (let (($x2026 (and $x2025 $x2022)))
 (ite $x2026 $x2040 $x2054)))))))))))))))))))))))))))))))
(assert
 (= c________________ c!15))
(assert
 (let ((?x1782 (left s_______________)))
 (let ((?x1920 (left s________________)))
 (let (($x2180 (= ?x1920 ?x1782)))
 (let ((?x1816 (right s_______________)))
 (let ((?x2147 (top ?x1816)))
 (let ((?x2148 (stack ?x2147 ?x1782)))
 (let (($x2174 (= ?x1920 ?x2148)))
 (let (($x2150 ((_ is stack ) ?x1816)))
 (let (($x2153 (= c_______________ right-to-left)))
 (let (($x2154 (and $x2153 $x2150)))
 (let ((?x2002 (center s_______________)))
 (let (($x2155 ((_ is stack ) ?x2002)))
 (let (($x2156 (= c_______________ center-to-right)))
 (let (($x2157 (and $x2156 $x2155)))
 (let ((?x2143 (top ?x2002)))
 (let ((?x2144 (stack ?x2143 ?x1782)))
 (let (($x2171 (= ?x1920 ?x2144)))
 (let (($x2158 (= c_______________ center-to-left)))
 (let (($x2159 (and $x2158 $x2155)))
 (let ((?x1953 (rest ?x1782)))
 (let (($x2167 (= ?x1920 ?x1953)))
 (let (($x2160 ((_ is stack ) ?x1782)))
 (let (($x2161 (= c_______________ left-to-right)))
 (let (($x2162 (and $x2161 $x2160)))
 (let (($x2163 (= c_______________ left-to-center)))
 (let (($x2164 (and $x2163 $x2160)))
 (ite $x2164 $x2167 (ite $x2162 $x2167 (ite $x2159 $x2171 (ite $x2157 $x2180 (ite $x2154 $x2174 $x2180))))))))))))))))))))))))))))))))
(assert
 (let ((?x1816 (right s_______________)))
 (let ((?x1954 (right s________________)))
 (let (($x2176 (= ?x1954 ?x1816)))
 (let ((?x2146 (rest ?x1816)))
 (let (($x2173 (= ?x1954 ?x2146)))
 (let (($x2150 ((_ is stack ) ?x1816)))
 (let (($x2151 (= c_______________ right-to-center)))
 (let (($x2152 (and $x2151 $x2150)))
 (let (($x2153 (= c_______________ right-to-left)))
 (let (($x2154 (and $x2153 $x2150)))
 (let ((?x2002 (center s_______________)))
 (let ((?x2143 (top ?x2002)))
 (let ((?x2145 (stack ?x2143 ?x1816)))
 (let (($x2172 (= ?x1954 ?x2145)))
 (let (($x2155 ((_ is stack ) ?x2002)))
 (let (($x2156 (= c_______________ center-to-right)))
 (let (($x2157 (and $x2156 $x2155)))
 (let (($x2158 (= c_______________ center-to-left)))
 (let (($x2159 (and $x2158 $x2155)))
 (let ((?x1782 (left s_______________)))
 (let (($x2160 ((_ is stack ) ?x1782)))
 (let (($x2161 (= c_______________ left-to-right)))
 (let (($x2162 (and $x2161 $x2160)))
 (let (($x2193 (ite $x2162 $x2176 (ite $x2159 $x2176 (ite $x2157 $x2172 (ite $x2154 $x2173 (ite $x2152 $x2173 $x2176)))))))
 (let ((?x2000 (top ?x1782)))
 (let ((?x2139 (stack ?x2000 ?x1816)))
 (let (($x2168 (= ?x1954 ?x2139)))
 (let (($x2163 (= c_______________ left-to-center)))
 (let (($x2164 (and $x2163 $x2160)))
 (ite $x2164 $x2168 $x2193)))))))))))))))))))))))))))))))
(assert
 (let ((?x2002 (center s_______________)))
 (let ((?x2140 (center s________________)))
 (let (($x2178 (= ?x2140 ?x2002)))
 (let ((?x1816 (right s_______________)))
 (let ((?x2147 (top ?x1816)))
 (let ((?x2149 (stack ?x2147 ?x2002)))
 (let (($x2175 (= ?x2140 ?x2149)))
 (let (($x2150 ((_ is stack ) ?x1816)))
 (let (($x2151 (= c_______________ right-to-center)))
 (let (($x2152 (and $x2151 $x2150)))
 (let (($x2153 (= c_______________ right-to-left)))
 (let (($x2154 (and $x2153 $x2150)))
 (let ((?x2142 (rest ?x2002)))
 (let (($x2170 (= ?x2140 ?x2142)))
 (let (($x2155 ((_ is stack ) ?x2002)))
 (let (($x2156 (= c_______________ center-to-right)))
 (let (($x2157 (and $x2156 $x2155)))
 (let (($x2158 (= c_______________ center-to-left)))
 (let (($x2159 (and $x2158 $x2155)))
 (let ((?x1782 (left s_______________)))
 (let ((?x2000 (top ?x1782)))
 (let ((?x2141 (stack ?x2000 ?x2002)))
 (let (($x2169 (= ?x2140 ?x2141)))
 (let (($x2160 ((_ is stack ) ?x1782)))
 (let (($x2161 (= c_______________ left-to-right)))
 (let (($x2162 (and $x2161 $x2160)))
 (let (($x2192 (ite $x2162 $x2169 (ite $x2159 $x2170 (ite $x2157 $x2170 (ite $x2154 $x2178 (ite $x2152 $x2175 $x2178)))))))
 (let (($x2163 (= c_______________ left-to-center)))
 (let (($x2164 (and $x2163 $x2160)))
 (ite $x2164 $x2178 $x2192)))))))))))))))))))))))))))))))
(assert
 (= c_________________ c!16))
(assert
 (let ((?x1920 (left s________________)))
 (let ((?x2058 (left s_________________)))
 (let (($x2318 (= ?x2058 ?x1920)))
 (let ((?x1954 (right s________________)))
 (let ((?x2285 (top ?x1954)))
 (let ((?x2286 (stack ?x2285 ?x1920)))
 (let (($x2312 (= ?x2058 ?x2286)))
 (let (($x2288 ((_ is stack ) ?x1954)))
 (let (($x2291 (= c________________ right-to-left)))
 (let (($x2292 (and $x2291 $x2288)))
 (let ((?x2140 (center s________________)))
 (let (($x2293 ((_ is stack ) ?x2140)))
 (let (($x2294 (= c________________ center-to-right)))
 (let (($x2295 (and $x2294 $x2293)))
 (let ((?x2281 (top ?x2140)))
 (let ((?x2282 (stack ?x2281 ?x1920)))
 (let (($x2309 (= ?x2058 ?x2282)))
 (let (($x2296 (= c________________ center-to-left)))
 (let (($x2297 (and $x2296 $x2293)))
 (let ((?x2091 (rest ?x1920)))
 (let (($x2305 (= ?x2058 ?x2091)))
 (let (($x2298 ((_ is stack ) ?x1920)))
 (let (($x2299 (= c________________ left-to-right)))
 (let (($x2300 (and $x2299 $x2298)))
 (let (($x2301 (= c________________ left-to-center)))
 (let (($x2302 (and $x2301 $x2298)))
 (ite $x2302 $x2305 (ite $x2300 $x2305 (ite $x2297 $x2309 (ite $x2295 $x2318 (ite $x2292 $x2312 $x2318))))))))))))))))))))))))))))))))
(assert
 (let ((?x1954 (right s________________)))
 (let ((?x2092 (right s_________________)))
 (let (($x2314 (= ?x2092 ?x1954)))
 (let ((?x2284 (rest ?x1954)))
 (let (($x2311 (= ?x2092 ?x2284)))
 (let (($x2288 ((_ is stack ) ?x1954)))
 (let (($x2289 (= c________________ right-to-center)))
 (let (($x2290 (and $x2289 $x2288)))
 (let (($x2291 (= c________________ right-to-left)))
 (let (($x2292 (and $x2291 $x2288)))
 (let ((?x2140 (center s________________)))
 (let ((?x2281 (top ?x2140)))
 (let ((?x2283 (stack ?x2281 ?x1954)))
 (let (($x2310 (= ?x2092 ?x2283)))
 (let (($x2293 ((_ is stack ) ?x2140)))
 (let (($x2294 (= c________________ center-to-right)))
 (let (($x2295 (and $x2294 $x2293)))
 (let (($x2296 (= c________________ center-to-left)))
 (let (($x2297 (and $x2296 $x2293)))
 (let ((?x1920 (left s________________)))
 (let (($x2298 ((_ is stack ) ?x1920)))
 (let (($x2299 (= c________________ left-to-right)))
 (let (($x2300 (and $x2299 $x2298)))
 (let (($x2331 (ite $x2300 $x2314 (ite $x2297 $x2314 (ite $x2295 $x2310 (ite $x2292 $x2311 (ite $x2290 $x2311 $x2314)))))))
 (let ((?x2138 (top ?x1920)))
 (let ((?x2277 (stack ?x2138 ?x1954)))
 (let (($x2306 (= ?x2092 ?x2277)))
 (let (($x2301 (= c________________ left-to-center)))
 (let (($x2302 (and $x2301 $x2298)))
 (ite $x2302 $x2306 $x2331)))))))))))))))))))))))))))))))
(assert
 (let ((?x2140 (center s________________)))
 (let ((?x2278 (center s_________________)))
 (let (($x2316 (= ?x2278 ?x2140)))
 (let ((?x1954 (right s________________)))
 (let ((?x2285 (top ?x1954)))
 (let ((?x2287 (stack ?x2285 ?x2140)))
 (let (($x2313 (= ?x2278 ?x2287)))
 (let (($x2288 ((_ is stack ) ?x1954)))
 (let (($x2289 (= c________________ right-to-center)))
 (let (($x2290 (and $x2289 $x2288)))
 (let (($x2291 (= c________________ right-to-left)))
 (let (($x2292 (and $x2291 $x2288)))
 (let ((?x2280 (rest ?x2140)))
 (let (($x2308 (= ?x2278 ?x2280)))
 (let (($x2293 ((_ is stack ) ?x2140)))
 (let (($x2294 (= c________________ center-to-right)))
 (let (($x2295 (and $x2294 $x2293)))
 (let (($x2296 (= c________________ center-to-left)))
 (let (($x2297 (and $x2296 $x2293)))
 (let ((?x1920 (left s________________)))
 (let ((?x2138 (top ?x1920)))
 (let ((?x2279 (stack ?x2138 ?x2140)))
 (let (($x2307 (= ?x2278 ?x2279)))
 (let (($x2298 ((_ is stack ) ?x1920)))
 (let (($x2299 (= c________________ left-to-right)))
 (let (($x2300 (and $x2299 $x2298)))
 (let (($x2330 (ite $x2300 $x2307 (ite $x2297 $x2308 (ite $x2295 $x2308 (ite $x2292 $x2316 (ite $x2290 $x2313 $x2316)))))))
 (let (($x2301 (= c________________ left-to-center)))
 (let (($x2302 (and $x2301 $x2298)))
 (ite $x2302 $x2316 $x2330)))))))))))))))))))))))))))))))
(assert
 (= c__________________ c!17))
(assert
 (let ((?x2058 (left s_________________)))
 (let ((?x2196 (left s__________________)))
 (let (($x2456 (= ?x2196 ?x2058)))
 (let ((?x2092 (right s_________________)))
 (let ((?x2423 (top ?x2092)))
 (let ((?x2424 (stack ?x2423 ?x2058)))
 (let (($x2450 (= ?x2196 ?x2424)))
 (let (($x2426 ((_ is stack ) ?x2092)))
 (let (($x2429 (= c_________________ right-to-left)))
 (let (($x2430 (and $x2429 $x2426)))
 (let ((?x2278 (center s_________________)))
 (let (($x2431 ((_ is stack ) ?x2278)))
 (let (($x2432 (= c_________________ center-to-right)))
 (let (($x2433 (and $x2432 $x2431)))
 (let ((?x2419 (top ?x2278)))
 (let ((?x2420 (stack ?x2419 ?x2058)))
 (let (($x2447 (= ?x2196 ?x2420)))
 (let (($x2434 (= c_________________ center-to-left)))
 (let (($x2435 (and $x2434 $x2431)))
 (let ((?x2229 (rest ?x2058)))
 (let (($x2443 (= ?x2196 ?x2229)))
 (let (($x2436 ((_ is stack ) ?x2058)))
 (let (($x2437 (= c_________________ left-to-right)))
 (let (($x2438 (and $x2437 $x2436)))
 (let (($x2439 (= c_________________ left-to-center)))
 (let (($x2440 (and $x2439 $x2436)))
 (ite $x2440 $x2443 (ite $x2438 $x2443 (ite $x2435 $x2447 (ite $x2433 $x2456 (ite $x2430 $x2450 $x2456))))))))))))))))))))))))))))))))
(assert
 (let ((?x2092 (right s_________________)))
 (let ((?x2230 (right s__________________)))
 (let (($x2452 (= ?x2230 ?x2092)))
 (let ((?x2422 (rest ?x2092)))
 (let (($x2449 (= ?x2230 ?x2422)))
 (let (($x2426 ((_ is stack ) ?x2092)))
 (let (($x2427 (= c_________________ right-to-center)))
 (let (($x2428 (and $x2427 $x2426)))
 (let (($x2429 (= c_________________ right-to-left)))
 (let (($x2430 (and $x2429 $x2426)))
 (let ((?x2278 (center s_________________)))
 (let ((?x2419 (top ?x2278)))
 (let ((?x2421 (stack ?x2419 ?x2092)))
 (let (($x2448 (= ?x2230 ?x2421)))
 (let (($x2431 ((_ is stack ) ?x2278)))
 (let (($x2432 (= c_________________ center-to-right)))
 (let (($x2433 (and $x2432 $x2431)))
 (let (($x2434 (= c_________________ center-to-left)))
 (let (($x2435 (and $x2434 $x2431)))
 (let ((?x2058 (left s_________________)))
 (let (($x2436 ((_ is stack ) ?x2058)))
 (let (($x2437 (= c_________________ left-to-right)))
 (let (($x2438 (and $x2437 $x2436)))
 (let (($x2469 (ite $x2438 $x2452 (ite $x2435 $x2452 (ite $x2433 $x2448 (ite $x2430 $x2449 (ite $x2428 $x2449 $x2452)))))))
 (let ((?x2276 (top ?x2058)))
 (let ((?x2415 (stack ?x2276 ?x2092)))
 (let (($x2444 (= ?x2230 ?x2415)))
 (let (($x2439 (= c_________________ left-to-center)))
 (let (($x2440 (and $x2439 $x2436)))
 (ite $x2440 $x2444 $x2469)))))))))))))))))))))))))))))))
(assert
 (let ((?x2278 (center s_________________)))
 (let ((?x2416 (center s__________________)))
 (let (($x2454 (= ?x2416 ?x2278)))
 (let ((?x2092 (right s_________________)))
 (let ((?x2423 (top ?x2092)))
 (let ((?x2425 (stack ?x2423 ?x2278)))
 (let (($x2451 (= ?x2416 ?x2425)))
 (let (($x2426 ((_ is stack ) ?x2092)))
 (let (($x2427 (= c_________________ right-to-center)))
 (let (($x2428 (and $x2427 $x2426)))
 (let (($x2429 (= c_________________ right-to-left)))
 (let (($x2430 (and $x2429 $x2426)))
 (let ((?x2418 (rest ?x2278)))
 (let (($x2446 (= ?x2416 ?x2418)))
 (let (($x2431 ((_ is stack ) ?x2278)))
 (let (($x2432 (= c_________________ center-to-right)))
 (let (($x2433 (and $x2432 $x2431)))
 (let (($x2434 (= c_________________ center-to-left)))
 (let (($x2435 (and $x2434 $x2431)))
 (let ((?x2058 (left s_________________)))
 (let ((?x2276 (top ?x2058)))
 (let ((?x2417 (stack ?x2276 ?x2278)))
 (let (($x2445 (= ?x2416 ?x2417)))
 (let (($x2436 ((_ is stack ) ?x2058)))
 (let (($x2437 (= c_________________ left-to-right)))
 (let (($x2438 (and $x2437 $x2436)))
 (let (($x2468 (ite $x2438 $x2445 (ite $x2435 $x2446 (ite $x2433 $x2446 (ite $x2430 $x2454 (ite $x2428 $x2451 $x2454)))))))
 (let (($x2439 (= c_________________ left-to-center)))
 (let (($x2440 (and $x2439 $x2436)))
 (ite $x2440 $x2454 $x2468)))))))))))))))))))))))))))))))
(assert
 (= c___________________ c!18))
(assert
 (let ((?x2196 (left s__________________)))
 (let ((?x2334 (left s___________________)))
 (let (($x2594 (= ?x2334 ?x2196)))
 (let ((?x2230 (right s__________________)))
 (let ((?x2561 (top ?x2230)))
 (let ((?x2562 (stack ?x2561 ?x2196)))
 (let (($x2588 (= ?x2334 ?x2562)))
 (let (($x2564 ((_ is stack ) ?x2230)))
 (let (($x2567 (= c__________________ right-to-left)))
 (let (($x2568 (and $x2567 $x2564)))
 (let ((?x2416 (center s__________________)))
 (let (($x2569 ((_ is stack ) ?x2416)))
 (let (($x2570 (= c__________________ center-to-right)))
 (let (($x2571 (and $x2570 $x2569)))
 (let ((?x2557 (top ?x2416)))
 (let ((?x2558 (stack ?x2557 ?x2196)))
 (let (($x2585 (= ?x2334 ?x2558)))
 (let (($x2572 (= c__________________ center-to-left)))
 (let (($x2573 (and $x2572 $x2569)))
 (let ((?x2367 (rest ?x2196)))
 (let (($x2581 (= ?x2334 ?x2367)))
 (let (($x2574 ((_ is stack ) ?x2196)))
 (let (($x2575 (= c__________________ left-to-right)))
 (let (($x2576 (and $x2575 $x2574)))
 (let (($x2577 (= c__________________ left-to-center)))
 (let (($x2578 (and $x2577 $x2574)))
 (ite $x2578 $x2581 (ite $x2576 $x2581 (ite $x2573 $x2585 (ite $x2571 $x2594 (ite $x2568 $x2588 $x2594))))))))))))))))))))))))))))))))
(assert
 (let ((?x2230 (right s__________________)))
 (let ((?x2368 (right s___________________)))
 (let (($x2590 (= ?x2368 ?x2230)))
 (let ((?x2560 (rest ?x2230)))
 (let (($x2587 (= ?x2368 ?x2560)))
 (let (($x2564 ((_ is stack ) ?x2230)))
 (let (($x2565 (= c__________________ right-to-center)))
 (let (($x2566 (and $x2565 $x2564)))
 (let (($x2567 (= c__________________ right-to-left)))
 (let (($x2568 (and $x2567 $x2564)))
 (let ((?x2416 (center s__________________)))
 (let ((?x2557 (top ?x2416)))
 (let ((?x2559 (stack ?x2557 ?x2230)))
 (let (($x2586 (= ?x2368 ?x2559)))
 (let (($x2569 ((_ is stack ) ?x2416)))
 (let (($x2570 (= c__________________ center-to-right)))
 (let (($x2571 (and $x2570 $x2569)))
 (let (($x2572 (= c__________________ center-to-left)))
 (let (($x2573 (and $x2572 $x2569)))
 (let ((?x2196 (left s__________________)))
 (let (($x2574 ((_ is stack ) ?x2196)))
 (let (($x2575 (= c__________________ left-to-right)))
 (let (($x2576 (and $x2575 $x2574)))
 (let (($x2607 (ite $x2576 $x2590 (ite $x2573 $x2590 (ite $x2571 $x2586 (ite $x2568 $x2587 (ite $x2566 $x2587 $x2590)))))))
 (let ((?x2414 (top ?x2196)))
 (let ((?x2553 (stack ?x2414 ?x2230)))
 (let (($x2582 (= ?x2368 ?x2553)))
 (let (($x2577 (= c__________________ left-to-center)))
 (let (($x2578 (and $x2577 $x2574)))
 (ite $x2578 $x2582 $x2607)))))))))))))))))))))))))))))))
(assert
 (let ((?x2416 (center s__________________)))
 (let ((?x2554 (center s___________________)))
 (let (($x2592 (= ?x2554 ?x2416)))
 (let ((?x2230 (right s__________________)))
 (let ((?x2561 (top ?x2230)))
 (let ((?x2563 (stack ?x2561 ?x2416)))
 (let (($x2589 (= ?x2554 ?x2563)))
 (let (($x2564 ((_ is stack ) ?x2230)))
 (let (($x2565 (= c__________________ right-to-center)))
 (let (($x2566 (and $x2565 $x2564)))
 (let (($x2567 (= c__________________ right-to-left)))
 (let (($x2568 (and $x2567 $x2564)))
 (let ((?x2556 (rest ?x2416)))
 (let (($x2584 (= ?x2554 ?x2556)))
 (let (($x2569 ((_ is stack ) ?x2416)))
 (let (($x2570 (= c__________________ center-to-right)))
 (let (($x2571 (and $x2570 $x2569)))
 (let (($x2572 (= c__________________ center-to-left)))
 (let (($x2573 (and $x2572 $x2569)))
 (let ((?x2196 (left s__________________)))
 (let ((?x2414 (top ?x2196)))
 (let ((?x2555 (stack ?x2414 ?x2416)))
 (let (($x2583 (= ?x2554 ?x2555)))
 (let (($x2574 ((_ is stack ) ?x2196)))
 (let (($x2575 (= c__________________ left-to-right)))
 (let (($x2576 (and $x2575 $x2574)))
 (let (($x2606 (ite $x2576 $x2583 (ite $x2573 $x2584 (ite $x2571 $x2584 (ite $x2568 $x2592 (ite $x2566 $x2589 $x2592)))))))
 (let (($x2577 (= c__________________ left-to-center)))
 (let (($x2578 (and $x2577 $x2574)))
 (ite $x2578 $x2592 $x2606)))))))))))))))))))))))))))))))
(assert
 (let ((?x44 (stack I (stack H (stack G (stack A empty))))))
 (let ((?x2368 (right s___________________)))
 (let (($x2610 (= ?x2368 ?x44)))
 (let ((?x40 (stack D (stack F (stack K empty)))))
 (let ((?x2554 (center s___________________)))
 (let (($x2641 (= ?x2554 ?x40)))
 (let ((?x37 (stack C (stack E (stack J (stack B empty))))))
 (let ((?x2334 (left s___________________)))
 (let (($x2642 (= ?x2334 ?x37)))
 (let (($x2644 (not (and $x2642 $x2641 $x2610))))
 (not $x2644))))))))))))
(check-sat)
(exit)
