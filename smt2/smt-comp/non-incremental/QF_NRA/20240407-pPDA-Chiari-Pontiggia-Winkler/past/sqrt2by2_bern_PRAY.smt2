(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |
Generated by: Tobias Winkler
Generated on: 2024-04-07
Generator: PRAY - Probabilistic Recursion Analyzer (https://doi.org/10.5281/zenodo.7506305)
Application: Termination analysis of probabilistic pushdown automata (pPDA)
Target solver: Z3
Publications:
  [1] Tobias Winkler, Joost-Pieter Katoen: On Certificates, Expected Runtimes, and Termination in Probabilistic Pushdown Automata. LICS 2023: 1-13

This benchmark encodes positive almost sure termination (PAST; reaching the empty stack in finite expected time) of a probabilistic pushdown automaton (pPDA) modelling a symmetric random walk on the non-negative integers. The walk is started at position 1 and flips a bit every time it moves towards 0. When it reaches 0, the bit is distributed according to a Bernoulli-sqrt(2)/2 distribution. However, 0 is only reached after infinitely many steps on average.

The SMT formula results from applying Theorem 8 from [1]. The SMT formula is SAT iff the automaton is PAST.

|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)

(declare-fun |(p,Z,q)| () Real)
(declare-fun |(q,Z,q)| () Real)
(declare-fun |(p,Z,p)| () Real)
(declare-fun |(q,Z,p)| () Real)
(declare-fun |(p, Z)| () Real)
(declare-fun |(q, Z)| () Real)
(assert (>= |(p,Z,q)| 0.0))
(assert (>= |(p,Z,q)|
    (+ 0.0
       (/ 1.0 2.0)
       (* |(p,Z,q)| |(p,Z,p)| (/ 1.0 2.0))
       (* |(q,Z,q)| |(p,Z,q)| (/ 1.0 2.0)))))
(assert (>= |(q,Z,p)| 0.0))
(assert (>= |(q,Z,p)|
    (+ 0.0
       (/ 1.0 2.0)
       (* |(p,Z,p)| |(q,Z,p)| (/ 1.0 2.0))
       (* |(q,Z,p)| |(q,Z,q)| (/ 1.0 2.0)))))
(assert (>= |(p, Z)| 0.0))
(assert (>= |(p, Z)|
    (+ 0.0
       1.0
       (* |(p, Z)| (/ 1.0 2.0))
       (* |(p, Z)| |(p,Z,p)| (/ 1.0 2.0))
       (* |(q, Z)| |(p,Z,q)| (/ 1.0 2.0)))))
(assert (>= |(q,Z,q)| 0.0))
(assert (>= |(q,Z,q)|
    (+ 0.0
       (* |(p,Z,q)| |(q,Z,p)| (/ 1.0 2.0))
       (* |(q,Z,q)| |(q,Z,q)| (/ 1.0 2.0)))))
(assert (>= |(p,Z,p)| 0.0))
(assert (>= |(p,Z,p)|
    (+ 0.0
       (* |(p,Z,p)| |(p,Z,p)| (/ 1.0 2.0))
       (* |(q,Z,p)| |(p,Z,q)| (/ 1.0 2.0)))))
(assert (>= |(q, Z)| 0.0))
(assert (>= |(q, Z)|
    (+ 0.0
       1.0
       (* |(q, Z)| (/ 1.0 2.0))
       (* |(p, Z)| |(q,Z,p)| (/ 1.0 2.0))
       (* |(q, Z)| |(q,Z,q)| (/ 1.0 2.0)))))
(check-sat)
(exit)
