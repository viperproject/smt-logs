(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x546 () Bool)
(declare-fun x934 () Bool)
(declare-fun x560 () Int)
(declare-fun x914 () Int)
(declare-fun x477 () Bool)
(declare-fun x103 () Int)
(declare-fun x611 () Int)
(declare-fun x442 () Int)
(declare-fun x39 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1016 () Int)
(declare-fun x195 (Int Int Int) Int)
(declare-fun x1131 () Bool)
(declare-fun x1048 () Int)
(declare-fun x175 () Int)
(declare-fun x19 () Int)
(declare-fun x659 () Int)
(declare-fun x898 () Int)
(declare-fun x467 () Int)
(declare-fun x71 () Bool)
(declare-fun x518 () Bool)
(declare-fun x228 () Int)
(declare-fun x157 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x1056 () Int)
(declare-fun x203 () Int)
(declare-fun x1188 () Bool)
(declare-fun x284 () Int)
(declare-fun x1162 () Int)
(declare-fun x217 () Bool)
(declare-fun x732 () Bool)
(declare-fun x7 () Int)
(declare-fun x383 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x876 () Bool)
(declare-fun x319 () Int)
(declare-fun x964 () Int)
(declare-fun x879 () Int)
(declare-fun x132 () Bool)
(declare-fun x239 () Int)
(declare-fun x1252 () Bool)
(declare-fun x871 () Int)
(declare-fun x34 () Bool)
(declare-fun x465 () Bool)
(declare-fun x772 () Int)
(declare-fun x134 () Bool)
(declare-fun x443 () Int)
(declare-fun x675 () Int)
(declare-fun x1013 () Int)
(declare-fun x99 () Int)
(declare-fun x206 () Bool)
(declare-fun x58 () Int)
(declare-fun x576 () Bool)
(declare-fun x593 () Int)
(declare-fun x1200 () Bool)
(declare-fun x394 () Bool)
(declare-fun x360 () Int)
(declare-fun x646 () Bool)
(declare-fun x116 () Int)
(declare-fun x1156 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x317 () Int)
(declare-fun x579 () Int)
(declare-fun x551 () Int)
(declare-fun x1076 () Bool)
(declare-fun x657 () Int)
(declare-fun x663 () Int)
(declare-fun x527 () Int)
(declare-fun x1066 () Bool)
(declare-fun x539 () Bool)
(declare-fun x310 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x965 () Int)
(declare-fun x29 () Int)
(declare-fun x188 () Bool)
(declare-fun x724 () Bool)
(declare-fun x330 () Int)
(declare-fun x974 () Int)
(declare-fun x805 () Int)
(declare-fun x17 () Int)
(declare-fun x95 () Int)
(declare-fun x961 () Int)
(declare-fun x1303 () Int)
(declare-fun x1207 () Int)
(declare-fun x773 () Int)
(declare-fun x481 () Int)
(declare-fun x431 () Int)
(declare-fun x575 () Int)
(declare-fun x521 () Int)
(declare-fun x304 () Int)
(declare-fun x615 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x218 () Bool)
(declare-fun x970 () Int)
(declare-fun x332 () Bool)
(declare-fun x753 () Bool)
(declare-fun x182 () Int)
(declare-fun x173 () Int)
(declare-fun x778 () Int)
(declare-fun x543 () Bool)
(declare-fun x198 () Int)
(declare-fun x842 () Int)
(declare-fun x1070 () Int)
(declare-fun x573 () Bool)
(declare-fun x650 () Int)
(declare-fun x721 () Bool)
(declare-fun x473 () Int)
(declare-fun x1287 () Bool)
(declare-fun x815 () Int)
(declare-fun x1266 () Int)
(declare-fun x887 () Int)
(declare-fun x417 () Bool)
(declare-fun x988 () Int)
(declare-fun x78 () Bool)
(declare-fun x370 () Bool)
(declare-fun x91 () Int)
(declare-fun x1069 () Int)
(declare-fun x399 () Bool)
(declare-fun x408 () Int)
(declare-fun x207 () Int)
(declare-fun x796 () Int)
(declare-fun x811 () Int)
(declare-fun x996 () Int)
(declare-fun x27 () Bool)
(declare-fun x655 () Bool)
(declare-fun x459 () Int)
(declare-fun x823 () Int)
(declare-fun x1084 () Bool)
(declare-fun x558 () Int)
(declare-fun x1003 () Int)
(declare-fun x801 () Int)
(declare-fun x425 () Bool)
(declare-fun x950 () Int)
(declare-fun x599 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x402 () Int)
(declare-fun x631 () Int)
(declare-fun x455 () Int)
(declare-fun x678 () Int)
(declare-fun x918 () Bool)
(declare-fun x294 () Int)
(declare-fun x658 () Int)
(declare-fun x1149 () Int)
(declare-fun x1195 () Int)
(declare-fun x684 () Int)
(declare-fun x782 () Bool)
(declare-fun x54 () Int)
(declare-fun x858 () Bool)
(declare-fun x917 () Bool)
(declare-fun x777 () Bool)
(declare-fun x758 () Bool)
(declare-fun x977 () Int)
(declare-fun x666 () Int)
(declare-fun x767 () Bool)
(declare-fun x510 () Int)
(declare-fun x702 () Int)
(declare-fun x47 () Bool)
(declare-fun x1138 () Int)
(declare-fun x245 () Int)
(declare-fun x498 () Int)
(declare-fun x147 () Bool)
(declare-fun x1217 () Int)
(declare-fun x454 () Bool)
(declare-fun x913 () Bool)
(declare-fun x808 () Bool)
(declare-fun x600 () Int)
(declare-fun x1002 () Int)
(declare-fun x352 (Int Int) Int)
(declare-fun x418 () Int)
(declare-fun x563 () Int)
(declare-fun x828 () Int)
(declare-fun x1296 () Int)
(declare-fun x800 () Int)
(declare-fun x140 () Int)
(declare-fun x592 () Int)
(declare-fun x730 () Int)
(declare-fun x1116 () Int)
(declare-fun x849 () Bool)
(declare-fun x1086 () Int)
(declare-fun x929 () Bool)
(declare-fun x142 () Int)
(declare-fun x606 () Int)
(declare-fun x654 () Int)
(declare-fun x407 () Int)
(declare-fun x930 () Int)
(declare-fun x333 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x37 () Int)
(declare-fun x1214 () Int)
(declare-fun x997 () Int)
(declare-fun x1183 () Int)
(declare-fun x877 () Bool)
(declare-fun x277 () Int)
(declare-fun x824 () Int)
(declare-fun x688 (Int Int) Int)
(declare-fun x513 () Int)
(declare-fun x449 () Int)
(declare-fun x483 () Int)
(declare-fun x731 () Int)
(declare-fun x958 () Bool)
(declare-fun x1092 () Int)
(declare-fun x21 () Int)
(declare-fun x421 () Bool)
(declare-fun x1236 () Int)
(declare-fun x232 () Int)
(declare-fun x72 () Bool)
(declare-fun x589 () Int)
(declare-fun x1218 () Bool)
(declare-fun x2 () Int)
(declare-fun x1064 () Int)
(declare-fun x685 () Bool)
(declare-fun x844 () Int)
(declare-fun x945 () Int)
(declare-fun x1155 () Bool)
(declare-fun x260 () Int)
(declare-fun x1272 () Int)
(declare-fun x104 () Int)
(declare-fun x865 () Int)
(declare-fun x395 () Int)
(declare-fun x1290 () Int)
(declare-fun x238 () Int)
(declare-fun x152 () Bool)
(declare-fun x1041 () Int)
(declare-fun x781 () Bool)
(declare-fun x16 () Int)
(declare-fun x648 () Bool)
(declare-fun x410 () Int)
(declare-fun x577 () Bool)
(declare-fun x562 () Int)
(declare-fun x52 () Int)
(declare-fun x1311 () Bool)
(declare-fun x987 () Bool)
(declare-fun x617 () Int)
(declare-fun x197 () Int)
(declare-fun x565 () Int)
(declare-fun x748 () Bool)
(declare-fun x634 () Bool)
(declare-fun x144 () Int)
(declare-fun x784 () Int)
(declare-fun x1196 () Int)
(declare-fun x357 () Bool)
(declare-fun x57 (Int) Int)
(declare-fun x1027 () Int)
(declare-fun x344 () Int)
(declare-fun x1049 () Int)
(declare-fun x251 () Int)
(declare-fun x1005 () Int)
(declare-fun x968 () Int)
(declare-fun x158 () Int)
(declare-fun x972 () Int)
(declare-fun x728 () Int)
(declare-fun x155 () Bool)
(declare-fun x827 () Bool)
(declare-fun x757 () Int)
(declare-fun x532 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1172 () Int)
(declare-fun x270 () Int)
(declare-fun x138 () Int)
(declare-fun x490 () Int)
(declare-fun x1112 () Int)
(declare-fun x211 () Int)
(declare-fun x1180 () Int)
(declare-fun x847 () Int)
(declare-fun x889 () Int)
(declare-fun x280 () Int)
(declare-fun x698 () Bool)
(declare-fun x882 () Int)
(declare-fun x1177 () Int)
(declare-fun x86 () Bool)
(declare-fun x922 () Int)
(declare-fun x676 () Int)
(declare-fun x1039 () Int)
(declare-fun x716 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1251 () Int)
(declare-fun x437 () Int)
(declare-fun x288 () Int)
(declare-fun x770 () Bool)
(declare-fun x362 () Int)
(declare-fun x554 () Int)
(declare-fun x718 () Int)
(declare-fun x896 () Bool)
(declare-fun x1191 () Int)
(declare-fun x850 () Bool)
(declare-fun x982 () Int)
(declare-fun x681 () Bool)
(declare-fun x61 () Int)
(declare-fun x1007 () Int)
(declare-fun x236 () Int)
(declare-fun x384 () Int)
(declare-fun x723 () Int)
(declare-fun x715 () Int)
(declare-fun x191 () Int)
(declare-fun x237 () Int)
(declare-fun x476 () Int)
(declare-fun x897 () Int)
(declare-fun x647 () Bool)
(declare-fun x831 () Int)
(declare-fun x841 () Int)
(declare-fun x1264 () Bool)
(declare-fun x128 () Int)
(declare-fun x109 () Int)
(declare-fun x489 () Int)
(declare-fun x300 () Int)
(declare-fun x92 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1267 () Int)
(declare-fun x861 () Int)
(declare-fun x461 () Int)
(declare-fun x463 () Int)
(declare-fun x540 () Bool)
(declare-fun x754 (Int) Int)
(declare-fun x287 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x49 () Int)
(declare-fun x151 () Int)
(declare-fun x1190 () Bool)
(declare-fun x756 () Int)
(declare-fun x1175 () Int)
(declare-fun x886 () Bool)
(declare-fun x597 () Int)
(declare-fun x1028 () Int)
(declare-fun x1096 () Bool)
(declare-fun x687 () Bool)
(declare-fun x199 () Int)
(declare-fun x108 () Bool)
(declare-fun x856 () Bool)
(declare-fun x204 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x547 () Int)
(declare-fun x1121 () Int)
(declare-fun x171 () Int)
(declare-fun x180 () Bool)
(declare-fun x1232 () Int)
(declare-fun x939 () Bool)
(declare-fun x205 () Int)
(declare-fun x785 () Int)
(declare-fun x1285 () Bool)
(declare-fun x1173 () Int)
(declare-fun x671 () Int)
(declare-fun x1261 () Int)
(declare-fun x1008 () Bool)
(declare-fun x516 () Bool)
(declare-fun x170 () Int)
(declare-fun x85 () Int)
(declare-fun x340 () Int)
(declare-fun x779 () Bool)
(declare-fun x706 () Bool)
(declare-fun x1220 () Int)
(declare-fun x511 () Int)
(declare-fun x500 () Int)
(declare-fun x113 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x1259 () Int)
(declare-fun x474 () Int)
(declare-fun x1269 () Bool)
(declare-fun x398 () Bool)
(declare-fun x525 () Int)
(declare-fun x737 () Int)
(declare-fun x1297 () Bool)
(declare-fun x570 () Bool)
(declare-fun x36 () Int)
(declare-fun x520 () Int)
(declare-fun x45 () Int)
(declare-fun x62 () Int)
(declare-fun x830 () Int)
(declare-fun x609 () Bool)
(declare-fun x1141 () Int)
(declare-fun x268 () Int)
(declare-fun x607 () Int)
(declare-fun x873 () Bool)
(declare-fun x959 () Bool)
(declare-fun x457 () Int)
(declare-fun x652 () Bool)
(declare-fun x423 () Int)
(declare-fun x225 () Int)
(declare-fun x885 () Bool)
(declare-fun x448 () Int)
(declare-fun x356 () Bool)
(declare-fun x616 () Int)
(declare-fun x307 () Bool)
(declare-fun x1238 () Int)
(declare-fun x920 () Bool)
(declare-fun x297 () Bool)
(declare-fun x955 () Bool)
(declare-fun x989 () Int)
(declare-fun x26 () Int)
(declare-fun x214 () Int)
(declare-fun x903 () Int)
(declare-fun x643 () Bool)
(declare-fun x848 () Bool)
(declare-fun x1080 () Int)
(declare-fun x701 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1023 () Bool)
(declare-fun x506 () Int)
(declare-fun x868 () Int)
(declare-fun x478 () Int)
(declare-fun x1090 () Int)
(declare-fun x571 () Int)
(declare-fun x453 () Int)
(declare-fun x690 () Int)
(declare-fun x553 () Bool)
(declare-fun x826 (Int) Int)
(declare-fun x984 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1105 () Int)
(declare-fun x1304 () Int)
(declare-fun x276 () Int)
(declare-fun x318 () Int)
(declare-fun x739 () Int)
(declare-fun x534 () Int)
(declare-fun x451 () Int)
(declare-fun x248 () Int)
(declare-fun x541 () Int)
(declare-fun x445 () Int)
(declare-fun x692 () Int)
(declare-fun x105 () Bool)
(declare-fun x760 () Int)
(declare-fun x1194 () Bool)
(declare-fun x892 () Bool)
(declare-fun x301 () Bool)
(declare-fun x669 () Int)
(declare-fun x1294 () Bool)
(declare-fun x840 () Bool)
(declare-fun x878 () Int)
(declare-fun x765 () Bool)
(declare-fun x906 (Int) Int)
(declare-fun x123 () Int)
(declare-fun x492 () Int)
(declare-fun x44 () Bool)
(declare-fun x1091 () Int)
(declare-fun x909 () Bool)
(declare-fun x711 () Int)
(declare-fun x1133 () Int)
(declare-fun x183 () Int)
(declare-fun x550 () Int)
(declare-fun x836 (Int) Int)
(declare-fun x1306 () Bool)
(declare-fun x12 () Bool)
(declare-fun x186 () Int)
(declare-fun x94 () Int)
(declare-fun x305 () Bool)
(declare-fun x200 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x530 () Int)
(declare-fun x31 () Bool)
(declare-fun x81 () Int)
(declare-fun x303 () Int)
(declare-fun x1184 () Bool)
(declare-fun x181 () Int)
(declare-fun x409 () Bool)
(declare-fun x265 () Bool)
(declare-fun x359 () Bool)
(declare-fun x496 () Int)
(declare-fun x1225 () Int)
(declare-fun x229 () Int)
(declare-fun x365 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x766 () Bool)
(declare-fun x947 () Int)
(declare-fun x84 () Bool)
(declare-fun x802 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x1020 () Int)
(declare-fun x926 () Int)
(declare-fun x1170 () Int)
(declare-fun x1206 () Int)
(declare-fun x422 () Bool)
(declare-fun x468 () Int)
(declare-fun x327 () Int)
(declare-fun x1135 (Int) Int)
(declare-fun x1305 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x584 () Bool)
(declare-fun x306 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x3 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x215 () Int)
(declare-fun x1282 () Int)
(declare-fun x127 () Int)
(declare-fun x1211 () Bool)
(declare-fun x471 () Bool)
(declare-fun x893 () Bool)
(declare-fun x381 () Int)
(declare-fun x923 () Bool)
(declare-fun x574 () Bool)
(declare-fun x855 () Bool)
(declare-fun x253 () Int)
(declare-fun x424 () Int)
(declare-fun x750 () Int)
(declare-fun x995 () Int)
(declare-fun x243 () Bool)
(declare-fun x1312 () Int)
(declare-fun x209 () Int)
(declare-fun x587 () Int)
(declare-fun x545 () Int)
(declare-fun x689 () Bool)
(declare-fun x957 (Int) Int)
(declare-fun x1136 () Bool)
(declare-fun x22 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x769 () Int)
(declare-fun x1000 () Int)
(declare-fun x567 () Bool)
(declare-fun x165 () Bool)
(declare-fun x954 () Int)
(declare-fun x667 () Bool)
(declare-fun x374 () Int)
(declare-fun x1078 () Bool)
(declare-fun x952 () Bool)
(declare-fun x299 () Int)
(declare-fun x921 () Bool)
(declare-fun x53 () Int)
(declare-fun x680 () Int)
(declare-fun x40 () Bool)
(declare-fun x372 () Int)
(declare-fun x807 () Bool)
(declare-fun x484 () Bool)
(declare-fun x901 (Int) Int)
(declare-fun x1302 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1157 () Int)
(declare-fun x813 () Int)
(declare-fun x838 () Int)
(declare-fun x924 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x583 () Bool)
(declare-fun x73 () Bool)
(declare-fun x201 () Int)
(declare-fun x719 () Int)
(declare-fun x991 () Bool)
(declare-fun x1093 () Int)
(declare-fun x708 () Int)
(declare-fun x764 () Int)
(declare-fun x460 () Int)
(declare-fun x397 () Bool)
(declare-fun x1062 () Int)
(declare-fun x524 () Bool)
(declare-fun x74 () Int)
(declare-fun x733 () Int)
(declare-fun x311 () Bool)
(declare-fun x18 () Int)
(declare-fun x1109 () Bool)
(declare-fun x817 () Int)
(declare-fun x810 () Int)
(declare-fun x1178 () Int)
(declare-fun x1127 (Int Int Int Int) Int)
(declare-fun x621 () Int)
(declare-fun x691 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x1072 () Int)
(declare-fun x129 () Bool)
(declare-fun x790 () Int)
(declare-fun x279 () Int)
(declare-fun x735 () Bool)
(declare-fun x1271 () Int)
(declare-fun x908 () Bool)
(declare-fun x335 () Int)
(declare-fun x163 () Int)
(declare-fun x373 () Int)
(declare-fun x1283 () Bool)
(declare-fun x479 () Int)
(declare-fun x497 () Int)
(declare-fun x233 () Bool)
(declare-fun x695 () Int)
(declare-fun x1161 () Bool)
(declare-fun x273 () Int)
(declare-fun x392 () Bool)
(declare-fun x729 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1063 () Int)
(declare-fun x172 () Int)
(declare-fun x331 () Int)
(declare-fun x740 () Int)
(declare-fun x338 () Int)
(declare-fun x585 () Bool)
(declare-fun x256 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x979 () Int)
(declare-fun x946 () Int)
(declare-fun x1055 () Bool)
(declare-fun x985 () Int)
(declare-fun x98 () Int)
(declare-fun x1237 () Int)
(declare-fun x367 () Int)
(declare-fun x1101 () Int)
(declare-fun x351 () Bool)
(declare-fun x910 (Int Int) Int)
(declare-fun x820 () Int)
(declare-fun x406 () Bool)
(declare-fun x1244 () Int)
(declare-fun x564 () Bool)
(declare-fun x1182 () Int)
(declare-fun x722 () Int)
(declare-fun x537 () Bool)
(declare-fun x342 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1029 () Int)
(declare-fun x321 () Int)
(declare-fun x274 () Bool)
(declare-fun x953 () Bool)
(declare-fun x499 () Int)
(declare-fun x60 () Bool)
(declare-fun x20 () Int)
(declare-fun x35 () Int)
(declare-fun x515 () Int)
(declare-fun x627 () Bool)
(declare-fun x797 () Int)
(declare-fun x1073 () Int)
(declare-fun x1042 () Int)
(declare-fun x629 () Int)
(declare-fun x596 () Int)
(declare-fun x23 () Int)
(declare-fun x1299 () Int)
(declare-fun x601 () Bool)
(declare-fun x682 () Int)
(declare-fun x59 () Bool)
(declare-fun x1075 () Int)
(declare-fun x699 () Int)
(declare-fun x1115 () Int)
(declare-fun x241 () Bool)
(declare-fun x133 () Int)
(declare-fun x196 () Int)
(declare-fun x569 () Bool)
(declare-fun x413 () Int)
(declare-fun x1001 () Int)
(declare-fun x119 () Bool)
(declare-fun x791 () Int)
(declare-fun x1229 () Int)
(declare-fun x6 () Bool)
(declare-fun x664 () Int)
(declare-fun x994 () Int)
(declare-fun x645 () Int)
(declare-fun x136 () Int)
(declare-fun x286 () Int)
(declare-fun x526 () Int)
(declare-fun x638 () Int)
(declare-fun x38 () Bool)
(declare-fun x257 () Int)
(declare-fun x1065 () Int)
(declare-fun x1139 () Bool)
(declare-fun x931 () Bool)
(declare-fun x1254 () Int)
(declare-fun x249 () Bool)
(declare-fun x1185 () Int)
(declare-fun x572 () Int)
(declare-fun x488 () Int)
(declare-fun x1240 () Bool)
(declare-fun x628 () Bool)
(declare-fun x87 () Bool)
(declare-fun x712 () Int)
(declare-fun x126 () Int)
(declare-fun x786 () Int)
(declare-fun x825 () Int)
(declare-fun x1071 () Int)
(declare-fun x738 () Int)
(declare-fun x1 () Bool)
(declare-fun x602 () Int)
(declare-fun x42 () Int)
(declare-fun x761 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1053 () Int)
(declare-fun x710 () Bool)
(declare-fun x940 () Int)
(declare-fun x1130 () Int)
(declare-fun x694 () Int)
(declare-fun x112 () Int)
(declare-fun x115 () Bool)
(declare-fun x829 () Int)
(declare-fun x353 () Bool)
(declare-fun x117 () Int)
(declare-fun x162 () Int)
(declare-fun x1204 () Int)
(declare-fun x212 () Int)
(declare-fun x1128 () Int)
(declare-fun x1158 () Int)
(declare-fun x1309 () Int)
(declare-fun x272 () Int)
(declare-fun x65 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x533 () Bool)
(declare-fun x981 () Bool)
(declare-fun x832 () Int)
(declare-fun x462 () Int)
(declare-fun x916 () Int)
(declare-fun x178 () Int)
(declare-fun x354 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x15 () Int)
(declare-fun x751 () Int)
(declare-fun x385 () Int)
(declare-fun x289 () Bool)
(declare-fun x673 () Bool)
(declare-fun x439 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x608 () Bool)
(declare-fun x704 () Bool)
(declare-fun x975 () Bool)
(declare-fun x326 () Int)
(declare-fun x231 () Int)
(declare-fun x656 () Int)
(declare-fun x312 () Bool)
(declare-fun x291 () Int)
(declare-fun x1034 () Int)
(declare-fun x614 () Int)
(declare-fun x1212 () Int)
(declare-fun x915 () Int)
(declare-fun x230 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x382 () Int)
(declare-fun x153 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1045 (Int) Int)
(declare-fun x13 () Bool)
(declare-fun x845 (Int) Int)
(declare-fun x1159 () Int)
(declare-fun x220 () Int)
(declare-fun x145 () Int)
(declare-fun x620 () Bool)
(declare-fun x542 () Int)
(declare-fun x125 () Int)
(declare-fun x70 () Int)
(declare-fun x653 () Bool)
(declare-fun x1186 () Int)
(declare-fun x960 () Bool)
(declare-fun x275 () Int)
(declare-fun x234 () Int)
(declare-fun x588 () Int)
(declare-fun x1274 () Int)
(declare-fun x368 () Bool)
(declare-fun x622 () Int)
(declare-fun x833 () Int)
(declare-fun x895 () Bool)
(declare-fun x316 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x208 () Int)
(declare-fun x912 () Bool)
(declare-fun x535 () Bool)
(declare-fun x819 () Int)
(declare-fun x1015 () Int)
(declare-fun x24 () Int)
(declare-fun x1234 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1216 (Int) Int)
(declare-fun x149 () Int)
(declare-fun x1193 () Int)
(declare-fun x193 () Int)
(declare-fun x446 (Int) Int)
(declare-fun x1068 () Int)
(declare-fun x555 () Int)
(declare-fun x1318 () Int)
(declare-fun x1192 () Int)
(declare-fun x598 () Int)
(declare-fun x412 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1059 () Int)
(declare-fun x860 () Int)
(declare-fun x983 () Int)
(declare-fun x202 () Int)
(declare-fun x919 () Int)
(declare-fun x677 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x672 () Bool)
(declare-fun x971 () Bool)
(declare-fun x943 () Int)
(declare-fun x1052 () Bool)
(declare-fun x911 () Bool)
(declare-fun x252 () Int)
(declare-fun x107 () Int)
(declare-fun x41 () Int)
(declare-fun x1242 () Int)
(declare-fun x978 () Int)
(declare-fun x552 () Int)
(declare-fun x1300 () Int)
(declare-fun x803 () Int)
(declare-fun x14 () Int)
(declare-fun x1087 () Bool)
(declare-fun x559 () Bool)
(declare-fun x857 () Int)
(declare-fun x1228 () Int)
(declare-fun x447 () Int)
(declare-fun x174 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x863 () Int)
(declare-fun x1043 () Int)
(declare-fun x1120 () Int)
(declare-fun x221 () Bool)
(declare-fun x1098 () Int)
(declare-fun x167 () Int)
(declare-fun x33 () Int)
(declare-fun x290 () Int)
(declare-fun x420 () Int)
(declare-fun x635 () Bool)
(declare-fun x612 () Int)
(declare-fun x1320 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x240 () Int)
(declare-fun x293 () Int)
(declare-fun x184 () Int)
(declare-fun x502 () Int)
(declare-fun x862 () Bool)
(declare-fun x450 () Int)
(declare-fun x590 () Bool)
(declare-fun x295 () Int)
(declare-fun x503 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1032 () Int)
(declare-fun x1019 () Int)
(declare-fun x143 () Int)
(declare-fun x485 () Bool)
(declare-fun x250 () Bool)
(declare-fun x578 () Bool)
(declare-fun x604 () Int)
(declare-fun x375 (Int) Int)
(declare-fun x907 () Bool)
(declare-fun x557 () Int)
(declare-fun x110 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x146 () Int)
(declare-fun x1219 () Int)
(declare-fun x566 () Int)
(declare-fun x1310 () Bool)
(declare-fun x661 () Int)
(declare-fun x853 () Int)
(declare-fun x296 () Int)
(declare-fun x111 () Bool)
(declare-fun x364 () Int)
(declare-fun x949 () Bool)
(declare-fun x787 () Int)
(declare-fun x415 () Int)
(declare-fun x1025 () Bool)
(declare-fun x618 () Int)
(declare-fun x1124 () Bool)
(declare-fun x263 () Bool)
(declare-fun x990 () Int)
(declare-fun x523 () Int)
(declare-fun x1213 () Bool)
(declare-fun x904 () Bool)
(declare-fun x1153 () Int)
(declare-fun x508 () Int)
(declare-fun x1248 () Bool)
(declare-fun x720 () Int)
(declare-fun x32 () Int)
(declare-fun x258 () Int)
(declare-fun x438 () Bool)
(declare-fun x464 () Int)
(declare-fun x1181 () Int)
(declare-fun x482 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1088 () Int)
(declare-fun x639 () Int)
(declare-fun x1187 () Int)
(declare-fun x493 () Int)
(declare-fun x369 () Int)
(declare-fun x320 () Int)
(declare-fun x866 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x328 (Int) Bool)
(declare-fun x1122 () Int)
(declare-fun x665 () Int)
(declare-fun x343 () Int)
(declare-fun x271 () Int)
(declare-fun x595 () Int)
(declare-fun x1298 () Int)
(declare-fun x944 () Int)
(declare-fun x226 () Int)
(declare-fun x1246 () Int)
(declare-fun x101 () Int)
(declare-fun x1117 () Int)
(declare-fun x899 () Bool)
(declare-fun x806 () Int)
(declare-fun x509 () Int)
(declare-fun x948 () Int)
(declare-fun x1123 () Int)
(declare-fun x283 () Int)
(declare-fun x285 () Int)
(declare-fun x491 () Int)
(declare-fun x386 () Int)
(declare-fun x619 () Bool)
(declare-fun x441 () Bool)
(declare-fun x874 () Int)
(declare-fun x213 () Bool)
(declare-fun x339 () Int)
(declare-fun x298 () Bool)
(declare-fun x623 (Int) Int)
(declare-fun x894 () Int)
(declare-fun x187 () Int)
(declare-fun x727 () Int)
(declare-fun x538 () Bool)
(declare-fun x529 () Bool)
(declare-fun x429 () Bool)
(declare-fun x795 () Int)
(declare-fun x798 () Int)
(declare-fun x114 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1314 () Int)
(declare-fun x25 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x458 () Bool)
(declare-fun x192 () Int)
(declare-fun x1079 () Int)
(declare-fun x749 () Int)
(declare-fun x519 () Int)
(declare-fun x185 () Int)
(declare-fun x148 () Int)
(declare-fun x705 () Int)
(declare-fun x783 () Bool)
(declare-fun x792 () Int)
(declare-fun x812 () Int)
(declare-fun x1125 () Int)
(declare-fun x46 () Int)
(declare-fun x644 () Bool)
(declare-fun x1137 () Int)
(declare-fun x846 () Int)
(declare-fun x549 () Int)
(declare-fun x642 () Int)
(declare-fun x1263 () Int)
(declare-fun x1169 () Int)
(declare-fun x156 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x131 () Int)
(declare-fun x1243 () Int)
(declare-fun x494 () Bool)
(declare-fun x452 () Int)
(declare-fun x434 () Int)
(declare-fun x1210 () Int)
(declare-fun x1067 () Int)
(declare-fun x763 () Bool)
(declare-fun x227 () Int)
(declare-fun x345 () Int)
(declare-fun x97 () Int)
(declare-fun x247 () Int)
(declare-fun x561 () Int)
(declare-fun x956 () Int)
(declare-fun x242 () Int)
(declare-fun x269 () Int)
(declare-fun x686 () Bool)
(declare-fun x743 () Int)
(declare-fun x556 () Bool)
(declare-fun x603 () Int)
(declare-fun x528 () Bool)
(declare-fun x941 () Bool)
(declare-fun x883 () Int)
(declare-fun x697 () Int)
(declare-fun x1255 () Bool)
(declare-fun x980 () Int)
(declare-fun x594 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1315 () Int)
(declare-fun x1107 () Int)
(declare-fun x789 () Int)
(declare-fun x1171 () Int)
(declare-fun x378 () Int)
(declare-fun x962 () Int)
(declare-fun x1047 () Int)
(declare-fun x809 () Int)
(declare-fun x403 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1301 () Int)
(declare-fun x154 () Int)
(declare-fun x281 () Int)
(declare-fun x967 () Bool)
(declare-fun x1148 () Int)
(declare-fun x660 () Int)
(declare-fun x674 () Bool)
(declare-fun x350 () Int)
(declare-fun x28 () Int)
(declare-fun x1198 () Int)
(declare-fun x67 () Int)
(declare-fun x1317 () Int)
(declare-fun x76 () Int)
(declare-fun x745 () Int)
(declare-fun x822 () Bool)
(declare-fun x486 () Int)
(declare-fun x177 () Int)
(declare-fun x762 () Int)
(declare-fun x189 () Int)
(declare-fun x637 () Int)
(declare-fun x75 () Int)
(declare-fun x799 () Int)
(declare-fun x1058 () Bool)
(declare-fun x668 () Int)
(declare-fun x69 () Int)
(declare-fun x346 (Int) Int)
(declare-fun x937 () Int)
(declare-fun x416 () Int)
(declare-fun x404 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1307 () Int)
(declare-fun x1022 () Int)
(declare-fun x8 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1245 () Int)
(declare-fun x640 () Int)
(declare-fun x693 () Bool)
(declare-fun x774 () Int)
(declare-fun x814 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x867 () Int)
(declare-fun x973 () Int)
(declare-fun x190 () Int)
(declare-fun x118 () Bool)
(declare-fun x884 () Int)
(declare-fun x1095 () Int)
(declare-fun x487 () Int)
(declare-fun x1099 (Int) Int)
(declare-fun x1233 () Int)
(declare-fun x366 () Int)
(declare-fun x1160 () Bool)
(declare-fun x480 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1006 () Int)
(declare-fun x435 () Bool)
(declare-fun x137 () Int)
(declare-fun x176 () Bool)
(declare-fun x349 () Int)
(declare-fun x428 () Bool)
(declare-fun x141 () Bool)
(declare-fun x121 () Bool)
(declare-fun x179 () Int)
(declare-fun x1291 () Int)
(declare-fun x470 () Bool)
(declare-fun x261 () Int)
(declare-fun x5 () Bool)
(declare-fun x725 () Int)
(declare-fun x66 () Int)
(declare-fun x433 (Int) Int)
(declare-fun x130 () Bool)
(declare-fun x771 () Int)
(declare-fun x851 () Int)
(declare-fun x1286 () Int)
(declare-fun x775 () Bool)
(declare-fun x436 () Int)
(declare-fun x875 () Bool)
(declare-fun x1205 () Int)
(declare-fun x536 () Bool)
(declare-fun x625 () Int)
(declare-fun x703 () Int)
(declare-fun x605 () Int)
(declare-fun x377 () Int)
(declare-fun x1256 () Int)
(declare-fun x426 () Int)
(declare-fun x1230 () Int)
(declare-fun x255 () Int)
(declare-fun x224 () Bool)
(declare-fun x83 () Int)
(declare-fun x776 () Bool)
(declare-fun x324 () Int)
(declare-fun x1146 () Bool)
(declare-fun x135 () Int)
(declare-fun x323 () Int)
(declare-fun x1202 () Int)
(declare-fun x591 () Int)
(declare-fun x194 () Bool)
(declare-fun x902 () Int)
(declare-fun x466 () Int)
(declare-fun x1129 () Int)
(declare-fun x662 () Int)
(declare-fun x63 () Int)
(declare-fun x169 () Bool)
(declare-fun x993 () Int)
(declare-fun x1179 () Bool)
(declare-fun x726 () Int)
(declare-fun x1097 () Int)
(declare-fun x347 () Int)
(declare-fun x262 () Bool)
(declare-fun x793 () Int)
(declare-fun x159 () Int)
(declare-fun x1144 () Int)
(declare-fun x48 () Int)
(declare-fun x4 () Bool)
(declare-fun x292 () Int)
(declare-fun x1277 () Int)
(declare-fun x925 () Int)
(declare-fun x582 () Int)
(declare-fun x427 (Int) Int)
(declare-fun x348 () Int)
(declare-fun x736 () Int)
(declare-fun x329 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x82 () Int)
(declare-fun x376 () Int)
(declare-fun x1110 () Int)
(declare-fun x102 () Int)
(declare-fun x707 () Int)
(declare-fun x888 () Int)
(declare-fun x358 () Int)
(declare-fun x804 () Bool)
(declare-fun x713 () Int)
(declare-fun x1253 () Int)
(declare-fun x1151 () Int)
(declare-fun x244 () Bool)
(declare-fun x106 () Int)
(declare-fun x843 () Bool)
(declare-fun x77 () Bool)
(declare-fun x626 () Bool)
(declare-fun x313 () Int)
(declare-fun x852 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x992 () Int)
(declare-fun x835 () Int)
(declare-fun x859 () Int)
(declare-fun x613 () Int)
(declare-fun x1004 () Int)
(declare-fun x872 () Bool)
(declare-fun x1035 () Int)
(declare-fun x714 () Int)
(declare-fun x780 () Int)
(declare-fun x325 () Bool)
(declare-fun x472 () Int)
(declare-fun x495 () Bool)
(declare-fun x139 () Int)
(declare-fun x734 () Bool)
(declare-fun x839 () Int)
(declare-fun x891 () Int)
(declare-fun x308 () Bool)
(declare-fun x821 () Int)
(declare-fun x717 () Int)
(declare-fun x514 () Int)
(declare-fun x246 () Int)
(declare-fun x266 () Int)
(declare-fun x651 () Bool)
(declare-fun x278 () Int)
(declare-fun x64 () Bool)
(declare-fun x649 () Bool)
(declare-fun x341 () Bool)
(declare-fun x10 () Bool)
(declare-fun x755 () Int)
(declare-fun x976 () Int)
(declare-fun x834 () Bool)
(declare-fun x709 () Int)
(declare-fun x267 () Int)
(declare-fun x55 () Int)
(declare-fun x864 () Bool)
(declare-fun x405 () Bool)
(declare-fun x966 () Int)
(declare-fun x1319 () Int)
(declare-fun x679 () Bool)
(declare-fun x504 () Bool)
(declare-fun x355 () Int)
(declare-fun x951 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1050 () Int)
(declare-fun x881 () Int)
(declare-fun x1247 () Int)
(declare-fun x854 () Int)
(declare-fun x670 () Int)
(declare-fun x870 () Bool)
(declare-fun x264 () Int)
(declare-fun x505 () Int)
(declare-fun x544 () Int)
(declare-fun x1265 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1011 () Int)
(declare-fun x380 () Int)
(declare-fun x1147 () Int)
(declare-fun x160 () Int)
(declare-fun x1284 () Bool)
(declare-fun x927 () Int)
(declare-fun x744 () Int)
(declare-fun x166 () Int)
(declare-fun x942 () Int)
(declare-fun x96 () Int)
(declare-fun x400 () Int)
(declare-fun x818 () Int)
(declare-fun x837 () Int)
(declare-fun x517 () Int)
(declare-fun x1168 () Int)
(declare-fun x1241 () Int)
(declare-fun x1313 () Int)
(declare-fun x624 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x747 (Int) Int)
(declare-fun x444 () Int)
(declare-fun x581 () Bool)
(declare-fun x396 () Int)
(declare-fun x696 () Int)
(declare-fun x90 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1281 () Int)
(declare-fun x315 () Int)
(declare-fun x1262 () Int)
(declare-fun x122 () Int)
(declare-fun x1017 () Bool)
(declare-fun x387 () Int)
(declare-fun x1140 () Bool)
(declare-fun x219 () Int)
(declare-fun x512 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x580 () Bool)
(declare-fun x216 () Int)
(declare-fun x700 () Int)
(declare-fun x432 () Bool)
(declare-fun x259 () Bool)
(declare-fun x11 () Bool)
(declare-fun x223 () Int)
(declare-fun x1024 () Int)
(define-fun x1270 ((x969 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x969) (>= x969 0)) x969 (- x969 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x610 ((x969 Int)) Int (ite (and (< x969 0) (>= x969 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x969 115792089237316195423570985008687907853269984665640564039457584007913129639936) x969))
(define-fun x632 ((x501 Int)) Bool (and (>= x501 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x501)))
(define-fun x641 ((x501 Int)) Bool (and (= (x910 x501 115792089237316195423570985008687907853269984665640564039457584007913129639935) x501) (= (x910 115792089237316195423570985008687907853269984665640564039457584007913129639935 x501) x501)))
(define-fun x816 ((x501 Int)) Bool (and (= 0 (x910 x501 0)) (= (x910 0 x501) 0)))
(define-fun x880 ((x501 Int)) Bool (= (x910 x501 x501) x501))
(define-fun x363 ((x501 Int)) Bool (and (x880 x501) (x641 x501) (x816 x501)))
(define-fun x1215 ((x501 Int) (x379 Int)) Bool (= (x910 x501 x379) (x910 x379 x501)))
(define-fun x56 ((x501 Int) (x379 Int)) Bool (and (=> (>= x501 0) (>= x501 (x910 x501 x379))) (<= 0 (x910 x501 x379)) (=> (>= x379 0) (<= (x910 x501 x379) x379))))
(define-fun x411 ((x501 Int) (x379 Int)) Bool (and (x56 x501 x379) (x1215 x501 x379)))
(define-fun x337 ((x501 Int)) Bool (= (mod x501 26959946667150639794667015087019630673637144422540572481103610249216) (x910 x501 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x999 ((x501 Int)) Bool (and (x337 x501) (x411 x501 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x522 ((x501 Int)) Bool (= (x910 x501 340282366920938463463374607431768211455) (mod x501 340282366920938463463374607431768211456)))
(define-fun x371 ((x501 Int)) Bool (and (x522 x501) (x411 x501 340282366920938463463374607431768211455)))
(define-fun x469 ((x586 Int)) Int 0)
(define-fun x89 ((x586 Int)) Int 0)
(define-fun x164 ((x586 Int)) Int 0)
(define-fun x1227 ((x586 Int)) Int 0)
(define-fun x746 ((x586 Int)) Int 0)
(define-fun x1231 ((x586 Int)) Int 0)
(define-fun x430 ((x586 Int)) Int 0)
(define-fun x43 ((x586 Int)) Int 0)
(define-fun x1044 ((x586 Int)) Int 0)
(define-fun x254 ((x586 Int)) Int 0)
(define-fun x393 ((x586 Int)) Int 0)
(define-fun x1249 ((x586 Int)) Int 0)
(define-fun x1145 ((x586 Int)) Int 0)
(define-fun x1174 ((x586 Int)) Int (ite (< x586 x867) (x1216 x586) 0))
(define-fun x890 ((x586 Int)) Int (ite (and (>= x586 0) (< x586 x867)) (x1045 x586) (x1174 x586)))
(define-fun x1292 ((x586 Int)) Int (ite (= x586 x313) x616 (x901 x586)))
(define-fun x1258 ((x586 Int)) Int (ite (= x94 x586) x555 (x1292 x586)))
(define-fun x548 ((x586 Int)) Int (ite (= x586 164) x191 (x430 x586)))
(define-fun x401 ((x586 Int)) Int (ite (= x586 196) x94 (x548 x586)))
(define-fun x752 ((x586 Int)) Int (ite (= 228 x586) x550 (x401 x586)))
(define-fun x68 ((x586 Int)) Int (ite (= x586 128) 100 (x89 x586)))
(define-fun x636 ((x586 Int)) Int (ite (= x586 160) x1233 (x752 x586)))
(define-fun x79 ((x586 Int)) Int (ite (and (> (+ 324 x158) x586) (>= x586 324)) (x636 (- x586 164)) (x1145 x586)))
(define-fun x334 ((x586 Int)) Int (ite (= x586 x94) x376 (x1258 x586)))
(define-fun x390 ((x586 Int)) Int (ite (= x586 x1056) x541 (x334 x586)))
(define-fun x456 ((x586 Int)) Int (ite (= x186 x586) x159 (x1135 x586)))
(define-fun x414 ((x586 Int)) Int (ite (= x358 x586) x656 (x1099 x586)))
(define-fun x768 ((x586 Int)) Int (ite (= x722 x586) x476 (x826 x586)))
(define-fun x1223 ((x586 Int)) Int (ite (= x586 x722) x824 (x57 x586)))
(define-fun x742 ((x586 Int)) Int (ite (= x292 x586) x983 (x768 x586)))
(define-fun x124 ((x586 Int)) Int (ite (= x292 x586) x1282 (x1223 x586)))
(define-fun x963 ((x586 Int)) Int (ite (= x659 x586) x128 (x742 x586)))
(define-fun x1208 ((x586 Int)) Int (ite (= x586 x659) x281 (x124 x586)))
(define-fun x531 ((x586 Int)) Int (ite (= x586 x202) x135 (x963 x586)))
(define-fun x9 ((x586 Int)) Int (ite x119 (ite x155 (x531 x586) (x768 x586)) (x768 x586)))
(define-fun x986 ((x586 Int)) Int (ite (= x708 x586) x1095 (x9 x586)))
(define-fun x302 ((x586 Int)) Int (ite (= x586 x202) x1202 (x1208 x586)))
(define-fun x900 ((x586 Int)) Int (ite x119 (ite x155 (x302 x586) (x1223 x586)) (x1223 x586)))
(define-fun x1150 ((x586 Int)) Int (ite (= x708 x586) x197 (x900 x586)))
(define-fun x1082 ((x586 Int)) Int (ite (= x28 x586) x437 (x836 x586)))
(define-fun x314 ((x586 Int)) Int (ite (= x70 x586) x380 (x427 x586)))
(define-fun x759 ((x586 Int)) Int (ite x155 (x314 x586) (x427 x586)))
(define-fun x1279 ((x586 Int)) Int (ite x155 (x531 x586) (x768 x586)))
(define-fun x630 ((x586 Int)) Int (ite x155 (x302 x586) (x1223 x586)))
(define-fun x168 ((x586 Int)) Int (ite x155 (x1082 x586) (x836 x586)))
(define-fun x1163 ((x586 Int)) Int (ite x119 (ite x155 (x1082 x586) (x836 x586)) (x836 x586)))
(define-fun x1250 ((x586 Int)) Int (ite x119 (ite x155 (x314 x586) (x427 x586)) (x427 x586)))
(define-fun x419 ((x586 Int)) Int (ite (= x534 x586) x550 (x79 x586)))
(define-fun x100 ((x586 Int)) Int (ite (= x1062 x586) x1205 (x419 x586)))
(define-fun x1126 ((x586 Int)) Int (ite (= x719 x586) x17 (x100 x586)))
(define-fun x210 ((x586 Int)) Int (ite (= x323 x586) x1205 (x1126 x586)))
(define-fun x322 ((x586 Int)) Int (ite (= x1193 x586) x181 (x210 x586)))
(define-fun x1060 ((x586 Int)) Int (ite (= x996 x586) x780 (x322 x586)))
(define-fun x475 ((x586 Int)) Int (ite (= x199 x586) x191 (x164 x586)))
(define-fun x388 ((x586 Int)) Int (ite (= x586 x294) x181 (x475 x586)))
(define-fun x933 ((x586 Int)) Int (ite (= x586 x323) x712 (x393 x586)))
(define-fun x161 ((x586 Int)) Int (ite (= x586 x607) x151 (x388 x586)))
(define-fun x1239 ((x586 Int)) Int (ite (and (< x586 (+ x127 x219)) (>= x586 x219)) (x161 (- (+ x607 x586) x219)) (x1060 x586)))
(define-fun x932 ((x586 Int)) Int (ite (= x586 x94) x506 (x390 x586)))
(define-fun x282 ((x586 Int)) Int (ite (= x586 x658) x101 (x906 x586)))
(define-fun x938 ((x586 Int)) Int (ite (= x586 x925) x167 (x282 x586)))
(define-fun x50 ((x586 Int)) Int (ite x1161 (x938 x586) (x906 x586)))
(define-fun x1152 ((x586 Int)) Int (ite (= x586 x96) x448 (x50 x586)))
(define-fun x633 ((x586 Int)) Int (ite (= x586 x14) x452 (x1152 x586)))
(define-fun x1295 ((x586 Int)) Int (ite (= 0 x586) 1 (x747 x586)))
(define-fun x336 ((x586 Int)) Int (ite (= x801 x586) x944 (x754 x586)))
(define-fun x309 ((x586 Int)) Int (ite (= x1172 x586) x1302 (x336 x586)))
(define-fun x1061 ((x586 Int)) Int (ite x1161 (x754 x586) (x309 x586)))
(define-fun x1033 ((x586 Int)) Int (ite (= x1042 x586) x705 (x1061 x586)))
(define-fun x1316 ((x586 Int)) Int (ite (= x586 x617) x809 (x1033 x586)))
(define-fun x928 ((x586 Int)) Int (ite (= x586 0) 1 (x747 x586)))
(define-fun x935 ((x586 Int)) Int (ite (= x586 324) x481 (x1249 x586)))
(define-fun x905 ((x586 Int)) Int (ite (= 0 x586) 1 (x433 x586)))
(define-fun x391 ((x586 Int)) Int (ite (= x586 0) 1 (x433 x586)))
(define-fun x93 ((x586 Int)) Int (ite x1161 (x905 x586) (x391 x586)))
(define-fun x150 ((x586 Int)) Int (ite (and (>= x586 356) (> 388 x586)) (x93 (- x586 356)) (x43 x586)))
(define-fun x361 ((x586 Int)) Int (ite (= x219 x586) x156 (x935 x586)))
(define-fun x788 ((x586 Int)) Int (ite x518 (x1295 x586) (x928 x586)))
(define-fun x222 ((x586 Int)) Int (ite (and (<= x1230 x586) (< x586 (+ x1230 32))) (x788 (- x586 x1230)) (x469 x586)))
(assert (= x485 (=> (= x770 (= 0 (ite (> (ite (> (ite (< 0 (ite (> (ite (not (> x304 100)) (ite (not (> x304 100)) 1 0) (ite (not (< 100 x144)) 1 0)) 0) (ite (not (> x304 100)) (ite (not (< 100 x304)) 1 0) (ite (not (> x144 100)) 1 0)) (ite (not (> x258 100)) 1 0))) (ite (> (ite (not (> x304 100)) (ite (not (> x304 100)) 1 0) (ite (not (> x144 100)) 1 0)) 0) (ite (not (< 100 x304)) (ite (not (> x304 100)) 1 0) (ite (not (< 100 x144)) 1 0)) (ite (not (> x258 100)) 1 0)) (ite (not (> x500 100)) 1 0)) 0) (ite (< 0 (ite (< 0 (ite (not (< 100 x304)) (ite (not (> x304 100)) 1 0) (ite (not (> x144 100)) 1 0))) (ite (not (> x304 100)) (ite (not (< 100 x304)) 1 0) (ite (not (< 100 x144)) 1 0)) (ite (not (> x258 100)) 1 0))) (ite (> (ite (not (< 100 x304)) (ite (not (< 100 x304)) 1 0) (ite (not (< 100 x144)) 1 0)) 0) (ite (not (> x304 100)) (ite (not (> x304 100)) 1 0) (ite (not (> x144 100)) 1 0)) (ite (not (> x258 100)) 1 0)) (ite (not (< 100 x500)) 1 0)) (ite (not (< 100 x1149)) 1 0)) 0) (ite (> (ite (> (ite (< 0 (ite (not (< 100 x304)) (ite (not (> x304 100)) 1 0) (ite (not (> x144 100)) 1 0))) (ite (not (< 100 x304)) (ite (not (< 100 x304)) 1 0) (ite (not (> x144 100)) 1 0)) (ite (not (< 100 x258)) 1 0)) 0) (ite (< 0 (ite (not (> x304 100)) (ite (not (< 100 x304)) 1 0) (ite (not (< 100 x144)) 1 0))) (ite (not (> x304 100)) (ite (not (< 100 x304)) 1 0) (ite (not (> x144 100)) 1 0)) (ite (not (< 100 x258)) 1 0)) (ite (not (> x500 100)) 1 0)) 0) (ite (> (ite (> (ite (not (> x304 100)) (ite (not (< 100 x304)) 1 0) (ite (not (< 100 x144)) 1 0)) 0) (ite (not (< 100 x304)) (ite (not (> x304 100)) 1 0) (ite (not (> x144 100)) 1 0)) (ite (not (< 100 x258)) 1 0)) 0) (ite (> (ite (not (< 100 x304)) (ite (not (< 100 x304)) 1 0) (ite (not (< 100 x144)) 1 0)) 0) (ite (not (< 100 x304)) (ite (not (> x304 100)) 1 0) (ite (not (< 100 x144)) 1 0)) (ite (not (< 100 x258)) 1 0)) (ite (not (< 100 x500)) 1 0)) (ite (not (< 100 x1149)) 1 0)) (ite (not (< 100 x797)) 1 0)))) (and (=> (and x770 (and (and (= (mod (* x144 x1005) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x743) (>= x349 1) (= x349 (x1270 (+ x977 x1149))) (= x1073 (div x183 x349)) (>= x1262 1) (= x997 (+ x1005 x304)) (= (mod (* x1267 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x860) (= x1262 (x1270 (+ x258 x1267))) (>= x997 1) (= (mod (* x977 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x183) (= x709 (x688 x587 7)) (= x310 (or (and (= true (<= x290 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 100 x290)) (> x290 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1270 (+ x709 x460)) x606) (= (div x860 x1262) x977) (= (x610 (- x1073 x1005)) x290) (= x460 (x1270 (+ (mod (x688 x587 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x587))) (= x1267 (div x743 x997)) (= (x688 x606 1) x1005) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x997)) (or (and (= 0 x374) x310) (and (not x310) (and (= x374 (ite (or (and (> x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x560)) (and (< x290 x560) (= (<= x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x560 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= x1090 (+ x595 x258)) (= (x610 (- x35 x668)) x560) (= (+ 1000000000000000 x1005) x668) (= x246 (mod (* x797 x602) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x1090 115792089237316195423571325291054828791733448040247995807669039) (= x35 (div x246 x483)) (<= 1 x483) (= x483 (x1270 (+ x1149 x602))) (= x665 (mod (* x668 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x665 (+ x304 x668)) x595) (= (div x216 x1090) x602) (= x216 (mod (* x500 x595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x1090 1)))))) x287) (=> (and (not x770) (= x348 0)) x991)))))
(assert (= (or x1118 x155) x119))
(assert (x632 x464))
(assert (not (x328 (x1127 40 20 (x688 x699 96) (x688 x821 96)))))
(assert (= x585 (and x441 x310)))
(assert (= x626 (=> (and (and (= (x195 64 x1130 6) x473) (>= 340282366920938463463374607431768211455 x859) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x523)) (> x1185 x523) (= x859 (x986 x473)) (= x559 (= 0 x1201)) (= (x1270 (+ x523 64)) x1185) (= x579 (x1150 x473)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x523) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x523)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x523)) (<= x523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x579 340282366920938463463374607431768211455)) (or (and (and (= x884 x859) (= x725 x579)) x559) (and (not x559) (and (= x579 x884) (= x859 x725))))) x297)))
(assert (x632 x713))
(assert (x632 x1048))
(assert (x632 x444))
(assert (= (x446 (x195 64 x798 6)) 6))
(assert (x632 x1243))
(assert (x632 x509))
(assert (=> (>= 10000 x461) (= (x346 x461) 0)))
(assert (> (x195 64 x1220 1) 10000))
(assert (x632 x99))
(assert (x632 x613))
(assert (=> (= 0 x58) (= 0 (div x678 x58))))
(assert (=> (= 0 (+ x304 x1178)) (= (div x563 (+ x304 x1178)) 0)))
(assert (= 20 (x623 (x1127 40 20 (x688 x1261 96) (x688 x360 96)))))
(assert (x632 x582))
(assert (x632 x209))
(assert (= x974 (x623 (x195 64 x974 6))))
(assert (x632 x1301))
(assert (x632 x937))
(assert (= x931 (or x30 x1089)))
(assert (= (=> (and (= x833 (x195 64 x191 0)) (= x1009 false) (= x1302 (x1270 (+ x526 x550))) (= 32 x481) (= x748 false) (= x1022 (x754 x833)) (= x526 (x336 x1172)) (not (< x1022 x550)) (= (x195 64 x94 0) x1172) (not (> x944 x1022)) (= (x610 (- x1022 x550)) x944) (= x801 (x195 64 x191 0)) (= 1 x520) (not (< x1302 x526))) x92) x1111))
(assert (< (x1127 40 20 (x688 x1072 96) (x688 x449 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1200 (not x59)) x1142))
(assert (x363 x324))
(assert (x632 x944))
(assert (x632 x58))
(assert (=> (<= x191 10000) (= (x346 x191) 0)))
(assert (= (x346 (x195 64 x94 0)) (x195 64 x94 0)))
(assert (= (x346 (x195 64 x1286 6)) (x195 64 x1286 6)))
(assert (x632 x1120))
(assert (= (x1127 40 20 (x688 x1217 96) (x688 x207 96)) (x346 (x1127 40 20 (x688 x1217 96) (x688 x207 96)))))
(assert (= x92 (=> (and (and (= 324 x509) (= (= 0 x149) x1240) (= x149 (x935 324)) (= 1 x185)) (or (and (and (= x857 1) (<= 1 x517) (= (x957 x1056) x517)) x1240) (not x1240))) x259)))
(assert (x632 x264))
(assert (= 64 (x845 (x195 64 x1220 1))))
(assert (= (x195 64 x1291 6) (x346 (x195 64 x1291 6))))
(assert (x328 3343790536))
(assert (= (and x1268 x646) x121))
(assert (= (x346 4294967295) 0))
(assert (x632 x942))
(assert (x632 x177))
(assert (x632 x943))
(assert (x632 x587))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x227 96) (x688 x624 96))))
(assert (= x923 (=> (and (or (and (not x1268) (and (<= 1 x723) (= (div x75 x723) x1141) (= x1319 (mod (* x426 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x508 x637) x592) (= x637 (+ x258 x326)) (= (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x887) (<= x813 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x887 x813)) (and (> x887 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x813 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x1134) (= x75 (mod (* x797 x592) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423571325291054828791733448040247995807669039 x637) (= (+ x493 1000000000000000) x426) (= (x1270 (+ x592 x1149)) x723) (= x813 (x610 (- x1141 x426))) (= (div x1319 (+ x304 x426)) x326) (>= x637 1) (= (mod (* x326 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x508))) (and (= 0 x1134) x1268)) (and (= x19 (x1270 (+ x55 x258))) (= x443 (x1270 (+ x1241 x805))) (<= 1 x1063) (<= 1 x640) (= x146 (mod (* x144 x493) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (or (and (= true (<= x887 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 100 x887)) (> x887 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1268) (= x493 (x688 x443 1)) (= x55 (div x146 x1063)) (= x1237 (div x303 x640)) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x1063) (= x1063 (+ x493 x304)) (= (div x684 x19) x851) (= (mod (* x797 x851) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x303) (= x887 (x610 (- x1237 x493))) (= (mod (* x55 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x684) (= (x1270 (+ x1149 x851)) x640) (<= 1 x19))) x1310)))
(assert (x632 x1050))
(assert (= (or x1287 x399) x877))
(assert (x632 x1073))
(assert (= x51 (or x959 x1103)))
(assert (x632 x1300))
(assert (x632 x166))
(assert (=> (>= 10000 (x688 x253 96)) (= 0 (x346 (x688 x253 96)))))
(assert (= (div x395 79228162514264337593543950336) (x688 x395 96)))
(assert (= (and x1146 x949) x244))
(assert (> (x1127 40 20 (x688 x382 96) (x688 x565 96)) 10000))
(assert (= (x845 (x195 64 x1286 6)) 64))
(assert (= (=> (and (or (and (= 0 x16) x804) (and (not x804) (and (<= 1 x416) (= (div x838 (+ x823 x304)) x330) (<= 1 x212) (= x212 (+ x330 x258)) (= (mod (* x1050 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x229) (= x650 (div x229 x416)) (= x381 (mod (* x500 x330) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1050 (div x381 x212)) (= (x1270 (+ x1149 x1050)) x416) (>= 115792089237316195423571325291054828791733448040247995807669039 x212) (= (mod (* x144 x823) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x838) (= x878 (x610 (- x650 x823))) (= (ite (or (and (= (<= x878 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x711 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x878 x711)) (and (<= x878 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x711 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x16) (= x823 (+ x1092 1000000000000000))))) (and (= (div x557 x618) x1298) (<= 1 x160) (= (x1270 (+ x1149 x924)) x618) (= (x1270 (+ x258 x403)) x527) (= x740 (mod (* x144 x1092) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x160 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= (div x740 x160) x403) (>= x618 1) (= x1101 (mod (* x403 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1092 (x688 x315 1)) (= (x610 (- x1298 x1092)) x711) (>= x527 1) (= (mod (* x924 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x557) (= x804 (or (and (< x711 100) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x711))) (> x711 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x924 (div x1101 x527)) (= (+ x1092 x304) x160) (= (x1270 (+ x558 x490)) x315))) x634) x129))
(assert (x632 x481))
(assert (= (x346 (x195 64 x36 x366)) (x195 64 x36 x366)))
(assert (x632 x326))
(assert (=> (= x483 0) (= 0 (div x246 x483))))
(assert (x632 x1232))
(assert (x632 x857))
(assert (x632 x946))
(assert (x363 x664))
(assert (= (x623 (x195 64 x1130 6)) x1130))
(assert (x632 x558))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1117 96) (x688 x395 96))))
(assert (=> (= x729 0) (= 0 (div x1116 x729))))
(assert (x328 4294967295))
(assert (not (x328 (x195 64 x798 6))))
(assert (= (x1127 40 20 (x688 x91 96) (x688 x1098 96)) (x346 (x1127 40 20 (x688 x91 96) (x688 x1098 96)))))
(assert (x632 x103))
(assert (x632 x990))
(assert (x632 x1049))
(assert (x632 x181))
(assert (=> (>= 10000 (x688 x179 96)) (= 0 (x346 (x688 x179 96)))))
(assert (x632 x605))
(assert (=> (<= (x688 x842 96) 10000) (= 0 (x346 (x688 x842 96)))))
(assert (= (x346 (x1127 40 20 (x688 x131 96) (x688 x837 96))) (x1127 40 20 (x688 x131 96) (x688 x837 96))))
(assert (= (x375 (x1127 40 20 (x688 x253 96) (x688 x1039 96))) (x688 x1039 96)))
(assert (= x351 (=> (and (or (and (= 0 x598) x615) (and (and (= (div x563 (+ x1178 x304)) x331) (= x362 (+ x331 x258)) (= x1070 (mod (* x331 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x318 (mod (* x797 x350) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x989 (x1270 (+ x350 x1149))) (>= 115792089237316195423571325291054828791733448040247995807669039 x362) (= (ite (or (and (< x718 x622) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x622))) (and (<= x622 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x718 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x598) (>= x989 1) (>= x362 1) (= (+ x604 1000000000000000) x1178) (= x350 (div x1070 x362)) (= (x610 (- x1158 x1178)) x622) (= (mod (* x1178 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x563) (= x1158 (div x318 x989))) (not x615))) (and (<= 1 x178) (= (+ x304 x604) x692) (= x604 (x688 x53 1)) (= (mod (* x604 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x750) (= x1257 (div x750 x692)) (= (x1270 (+ x571 x1149)) x178) (<= 1 x317) (= (mod (* x797 x571) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x979) (= x615 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718)) (< x718 100)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718))) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x692) (= (mod (* x500 x1257) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x497) (= (x1270 (+ x789 x1186)) x53) (= (div x979 x178) x713) (= (x610 (- x713 x604)) x718) (= (div x497 x317) x571) (<= 1 x692) (= (x1270 (+ x258 x1257)) x317))) x141)))
(assert (= (x688 x237 96) (div x237 79228162514264337593543950336)))
(assert (x632 x637))
(assert (x632 x1006))
(assert (= 20 (x623 (x1127 40 20 (x688 x1117 96) (x688 x395 96)))))
(assert (x632 x749))
(assert (= x687 (and (not x412) x876)))
(assert (x632 x1186))
(assert (= (x623 (x195 64 x1220 1)) x1220))
(assert (x632 x1011))
(assert (= (x688 x1261 96) (x446 (x1127 40 20 (x688 x1261 96) (x688 x360 96)))))
(assert (= (and x893 (not x1184)) x1012))
(assert (x328 115792089237316195423570985008687907853269984665640564039457584007913129639864))
(assert (x632 x819))
(assert (x632 x1098))
(assert (= (x1127 40 20 (x688 x1117 96) (x688 x395 96)) (x346 (x1127 40 20 (x688 x1117 96) (x688 x395 96)))))
(assert (= (x688 x1313 96) (div x1313 79228162514264337593543950336)))
(assert (x328 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= x777 (=> (and (or (and (and (= x1180 (x1270 (+ x1049 32))) (= (x1270 (+ x1180 20)) x32) (= (* x972 79228162514264337593543950336) x355) (= x408 1) (= (* 79228162514264337593543950336 x36) x1256) (= x1315 x1153) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x545 x445) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1049) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049)) (> x1153 x1049) (= (x1270 (+ 20 x32)) x1153) (= (x1127 40 20 (x688 x1256 96) (x688 x355 96)) x545) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049))) x176) (and (and (= x1315 x2) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049)) (= 0 x408) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049)) (> x2 x1049) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* x36 79228162514264337593543950336) x624) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1127 40 20 (x688 x227 96) (x688 x624 96)) x413) (= x2 (x1270 (+ x591 20))) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x1049)) (= (* x972 79228162514264337593543950336) x227) (= x445 x413) (= x591 (x1270 (+ 20 x1177))) (= x1177 (x1270 (+ 32 x1049)))) (not x176))) (= x176 (< x36 x972))) x1284)))
(assert (x632 x966))
(assert (x632 x247))
(assert (= 0 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x632 x76))
(assert (=> (<= (x688 x1117 96) 10000) (= 0 (x346 (x688 x1117 96)))))
(assert (= (=> (and (= x1055 (= 0 x598)) (or (and (not x1055) (and (= x1186 x1110) (= x209 x604))) (and x1055 (and (= x789 x209) (= x604 x1110))))) x383) x141))
(assert (not (x328 (x195 64 x191 1))))
(assert (=> (>= 10000 (x688 x1261 96)) (= 0 (x346 (x688 x1261 96)))))
(assert (x632 x642))
(assert (x632 x695))
(assert (x632 x791))
(assert (= (and x840 (not x217)) x132))
(assert (x632 x324))
(assert (x632 x1205))
(assert (x632 x700))
(assert (x632 x1271))
(assert (=> (>= 10000 x818) (= (x346 x818) 0)))
(assert (= (=> (and (and (= x1062 (x1270 (+ x534 32))) (= x719 (x1270 (+ 32 x1062))) (= x217 (> x988 x883))) (or (and (not x217) (and (= x116 (* x988 79228162514264337593543950336)) (= 0 x980) (= (x1270 (+ 32 x534)) x582) (not (= x534 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x534) (= (x1270 (+ 20 x582)) x286) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x534) (= (* 79228162514264337593543950336 x883) x1313) (= (x1127 40 20 (x688 x116 96) (x688 x1313 96)) x1229) (= x792 x1229) (= x985 x215) (> x985 x534) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1270 (+ 20 x286)) x985) (not (= x534 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x534)))) (and x217 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x534) (= 1 x980) (= (x1270 (+ 20 x99)) x1168) (= x505 (x1270 (+ 32 x534))) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1168 x215) (= x207 (* x988 79228162514264337593543950336)) (not (= x534 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x534 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x142 (x1127 40 20 (x688 x1217 96) (x688 x207 96))) (= (* x883 79228162514264337593543950336) x1217) (< x534 x1168) (not (= x534 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x142 x792) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x534) (= (x1270 (+ x505 20)) x99))))) x307) x230))
(assert (= 0 (x346 599290589)))
(assert (x632 x868))
(assert (x632 x1134))
(assert (= x325 (or x64 x585)))
(assert (x632 x835))
(assert (=> (= (+ x304 x736) 0) (= (div x266 (+ x736 x304)) 0)))
(assert (x632 x1137))
(assert (x632 x773))
(assert (= (x195 64 x191 1) (x346 (x195 64 x191 1))))
(assert (x632 x796))
(assert (< 10000 (x195 64 x94 x841)))
(assert (< (x195 64 x36 x366) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x705))
(assert (= (x1127 40 20 (x688 x1195 96) (x688 x676 96)) (x346 (x1127 40 20 (x688 x1195 96) (x688 x676 96)))))
(assert (= (x195 64 x792 6) (x346 (x195 64 x792 6))))
(assert (=> (<= (x688 x1072 96) 10000) (= 0 (x346 (x688 x1072 96)))))
(assert (x632 x994))
(assert (< 10000 (x195 64 x974 6)))
(assert (x632 x810))
(assert (x632 x178))
(assert (x632 x54))
(assert (x632 x45))
(assert (x328 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x688 x926 96) (div x926 79228162514264337593543950336)))
(assert (x632 x35))
(assert (x632 x631))
(assert (= (x1127 40 20 (x688 x861 96) (x688 x237 96)) (x346 (x1127 40 20 (x688 x861 96) (x688 x237 96)))))
(assert (x632 x757))
(assert (x632 x1047))
(assert (not (x328 (x1127 40 20 (x688 x861 96) (x688 x237 96)))))
(assert (= (or x1132 x308) x22))
(assert (x632 x670))
(assert (x632 x109))
(assert (x632 x281))
(assert (x371 x785))
(assert (x632 x15))
(assert (= (and (not x644) x1224) x354))
(assert (x632 x680))
(assert (= (=> (and (= x1218 (< 0 x7)) (= (ite (not (> 100 x1245)) (ite (not (> 100 x67)) 1 0) (ite (not (> 100 x1245)) 1 0)) x205) (= x7 (x610 (- x988 x36))) (= x197 (x910 340282366920938463463374607431768211455 x67)) (not (> x255 x181)) (= x205 1) (= (x910 340282366920938463463374607431768211455 x1245) x1095)) (and (=> (and (and (= x1312 x1205) (= x52 x215)) (not x1218)) x482) (=> (and x1218 (and (or (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x215)) (= x182 x1130) (not (= x215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= 1 x1201) (= (x1270 (+ 20 x1053)) x755) (= (x1270 (+ 32 x215)) x242) (= x523 x755) (> x755 x215) (= (* 79228162514264337593543950336 x36) x491) (= (x1127 40 20 (x688 x1303 96) (x688 x491 96)) x182) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x215) (not (= x215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1053 (x1270 (+ x242 20))) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1303 (* x988 79228162514264337593543950336)) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x1280) (and (and (= x523 x799) (= x1130 x948) (= (* x36 79228162514264337593543950336) x486) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 0 x1201) (= x1034 (x1270 (+ 32 x215))) (= x948 (x1127 40 20 (x688 x486 96) (x688 x1088 96))) (= (* x988 79228162514264337593543950336) x1088) (< x215 x799) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x215) (not (= x215 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x799 (x1270 (+ x273 20))) (= x273 (x1270 (+ x1034 20))) (not (= x215 115792089237316195423570985008687907853269984665640564039457584007913129639864))) (not x1280))) (= (< x988 x36) x1280))) x626))) x619))
(assert (= true x681))
(assert (x632 x37))
(assert (x632 x560))
(assert (= (or x47 (and (not x1240) x1160)) x512))
(assert (x632 x1059))
(assert (x999 x1057))
(assert (=> (= x1063 0) (= (div x146 x1063) 0)))
(assert (x632 x712))
(assert (x632 x340))
(assert (not (x328 (x195 64 x94 x48))))
(assert (x632 x1247))
(assert (= x342 (and x570 x849)))
(assert (= (and (not x1066) x1074) x569))
(assert (=> (<= (x688 x131 96) 10000) (= 0 (x346 (x688 x131 96)))))
(assert (= 64 (x845 (x195 64 x94 x879))))
(assert (x632 x418))
(assert (= (x845 (x1127 40 20 (x688 x1117 96) (x688 x395 96))) 40))
(assert (x371 x104))
(assert (x632 x1282))
(assert (= x422 (and (not x647) x776)))
(assert (= x1308 (or x22 x188)))
(assert (= (x375 (x1127 40 20 (x688 x861 96) (x688 x237 96))) (x688 x237 96)))
(assert (=> (>= 10000 x812) (= 0 (x346 x812))))
(assert (=> (<= (x688 x395 96) 10000) (= (x346 (x688 x395 96)) 0)))
(assert (x632 x665))
(assert (x632 x1086))
(assert (x632 x1225))
(assert (= (or x987 x1188) x580))
(assert (x632 x837))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1303 96) (x688 x491 96))))
(assert (x632 x1318))
(assert (= (x688 x842 96) (div x842 79228162514264337593543950336)))
(assert (= (and x241 x494) x120))
(assert (x632 x1032))
(assert (= (and (not x537) x1087) x620))
(assert (not (x328 (x195 64 x36 x366))))
(assert (x632 x842))
(assert (x328 57896044618658097711785492504343953926975274699741220483192166611388333031422))
(assert (x328 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x632 x158))
(assert (= (=> (and (and (= x340 (ite (not (< x1002 100)) (ite (not (> 100 x894)) 1 0) (ite (not (< x1002 100)) 1 0))) (= x708 (x195 64 x792 6)) (<= x1002 340282366920938463463374607431768211455) (= x1002 (x9 x708)) (= (x900 x708) x894) (<= x894 340282366920938463463374607431768211455) (= x340 1) (= x672 (= x980 0))) (or (and (not x672) (and (not (> x1133 x1002)) (<= x66 340282366920938463463374607431768211455) (= x66 x181) (= (* x1205 x1002) x367) (<= x367 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1133 340282366920938463463374607431768211455) (= x67 x344) (= (x610 (- x1002 x66)) x1133) (= (div x367 x344) x66) (<= x344 680564733841876926926749214863536422910) (= x344 (+ x894 x1205)) (= x1133 x1245) (<= 1 x344) (<= 0 x367))) (and (and (not (< x894 x1225)) (<= 1 x385) (= x385 (+ x1002 x1205)) (>= 340282366920938463463374607431768211455 x629) (= x1225 (x610 (- x894 x629))) (= x67 x1225) (= (div x126 x385) x629) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126) (= x181 x629) (>= 340282366920938463463374607431768211455 x1225) (<= x385 680564733841876926926749214863536422910) (= (* x1205 x894) x126) (<= 0 x126) (= x1245 x385)) x672))) x619) x307))
(assert (x632 x237))
(assert (> (x1127 40 20 (x688 x1072 96) (x688 x449 96)) 10000))
(assert (=> (= 0 x145) (= 0 (div x479 x145))))
(assert (x632 x1267))
(assert (< (x195 64 x94 x879) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x616))
(assert (x632 x778))
(assert (= (and x1074 x1066) x643))
(assert (= (x346 (x1127 40 20 (x688 x382 96) (x688 x565 96))) (x1127 40 20 (x688 x382 96) (x688 x565 96))))
(assert (x632 x891))
(assert (= x1008 (or x518 x84)))
(assert (x632 x772))
(assert (x371 x1007))
(assert (x632 x675))
(assert (x632 x1057))
(assert (x632 x175))
(assert (= (or (and x647 x776) x960) x1109))
(assert (= (and (not x39) x152) x110))
(assert (x632 x272))
(assert (x632 x571))
(assert (x632 x452))
(assert (= (and x1083 (not x615)) x655))
(assert (x632 x331))
(assert (x632 x1071))
(assert (x632 x606))
(assert (= (x1127 40 20 (x688 x842 96) (x688 x1148 96)) (x346 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (x632 x46))
(assert (= (x346 (x195 64 x94 x48)) (x195 64 x94 x48)))
(assert (x632 x192))
(assert (= (and x329 (not x741)) x753))
(assert (x632 x488))
(assert (x632 x279))
(assert (= (x446 (x195 64 x445 6)) 6))
(assert (x632 x215))
(assert (x632 x131))
(assert (x632 x323))
(assert (=> (= 0 x1175) (= (div x453 x1175) 0)))
(assert (= (div x1015 2) (x688 x1015 1)))
(assert (< (x195 64 x94 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 40 (x845 (x1127 40 20 (x688 x91 96) (x688 x1098 96)))))
(assert (x632 x1092))
(assert (< 10000 (x195 64 x445 6)))
(assert (x632 x902))
(assert (x632 x416))
(assert (= (or x1166 x539) x876))
(assert (= (x845 (x1127 40 20 (x688 x861 96) (x688 x237 96))) 40))
(assert (= x779 (and x1264 (not x553))))
(assert (= (and x679 x1055) x807))
(assert (x632 x562))
(assert (= (=> (and (or (and (not x574) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x74) (not (= x74 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* 79228162514264337593543950336 x972) x926) (= (x1270 (+ 20 x232)) x968) (= x707 (x1270 (+ x74 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x74) (= x964 (x1127 40 20 (x688 x787 96) (x688 x926 96))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x74)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x74) (not (= x74 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1157 x968) (= x232 (x1270 (+ x707 20))) (> x968 x74) (= x964 x1220) (= x787 (* 79228162514264337593543950336 x820)))) (and (and (= x251 x1157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x74) (= x251 (x1270 (+ x956 20))) (<= x74 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x956 (x1270 (+ 20 x284))) (= x806 (x1127 40 20 (x688 x699 96) (x688 x821 96))) (= x1220 x806) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x74)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x74) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x74)) (= (* x972 79228162514264337593543950336) x699) (= x284 (x1270 (+ 32 x74))) (< x74 x251) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x74)) (= (* 79228162514264337593543950336 x820) x821)) x574)) (and (>= 1461501637330902918203684832716283019655932542975 x139) (= x574 (> x820 x972)) (= (x195 64 x36 x366) x28) (= (x610 (- x1169 x348)) x819) (>= 340282366920938463463374607431768211455 x819) (= x135 (x910 340282366920938463463374607431768211455 x324)) (= x437 (x1270 (+ x717 x819))) (not (>= (+ x717 x819) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (not (< x324 100)) (ite (not (> 100 x785)) 1 0) (ite (not (> 100 x324)) 1 0)) x285) (not (< x1169 x819)) (= x366 (x195 64 x139 7)) (= x717 (x836 x28)) (= x285 1) (= (x910 340282366920938463463374607431768211455 x785) x1202))) x934) x1275))
(assert (x632 x294))
(assert (=> (= 0 x196) (= (div x1183 x196) 0)))
(assert (x632 x1129))
(assert (x632 x889))
(assert (x632 x1115))
(assert (= (=> (and (or (and x1030 (and (= x946 x1029) (not (= x902 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1270 (+ 20 x733)) x749) (not (= x902 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* 79228162514264337593543950336 x972) x842) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x902)) (<= x902 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x499 (x1127 40 20 (x688 x842 96) (x688 x1148 96))) (> x1029 x902) (= (x1270 (+ x749 20)) x1029) (= x1148 (* x820 79228162514264337593543950336)) (= x1291 x499) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x902) (= x306 1) (= (x1270 (+ 32 x902)) x733) (<= x902 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (and (not (= x902 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (<= x902 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x902) (= (* 79228162514264337593543950336 x820) x1072) (= (x1270 (+ 20 x277)) x171) (not (= x902 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1270 (+ 32 x902)) x277) (= (x1270 (+ x171 20)) x871) (not (= x902 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (<= x902 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 0 x306) (> x871 x902) (= x871 x946) (= (* x972 79228162514264337593543950336) x449) (= x1291 x496) (= x496 (x1127 40 20 (x688 x1072 96) (x688 x449 96)))) (not x1030))) (= x1030 (> x820 x972))) x686) x12))
(assert (= x1100 (=> (and (and (>= x729 1) (= x1013 (x610 (- x466 x279))) (= (+ x304 x279) x498) (= x1244 (x1270 (+ x1149 x835))) (= (div x943 x1244) x466) (= (x688 x756 1) x279) (= x1116 (mod (* x500 x728) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x729 (x1270 (+ x258 x728))) (= x835 (div x1116 x729)) (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x498) (= x1226 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1013) (and (> 100 x1013) (= (<= x1013 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= (x1270 (+ x238 x257)) x756) (= (mod (* x279 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1080) (<= 1 x1244) (= x943 (mod (* x797 x835) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x498 1) (= x728 (div x1080 x498))) (or (and (and (= (div x1182 (+ x694 x304)) x21) (= x566 (x610 (- x784 x694))) (<= 1 x444) (= x1069 (ite (or (and (< x1013 x566) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1013) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x566))) (and (<= x566 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1013))) 1 0)) (= (+ x279 1000000000000000) x694) (= x611 (mod (* x797 x1206) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x457 x444) x1206) (= (x1270 (+ x1206 x1149)) x1115) (= (mod (* x144 x694) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1182) (= (+ x21 x258) x444) (= (mod (* x21 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x457) (<= 1 x1115) (>= 115792089237316195423571325291054828791733448040247995807669039 x444) (= (div x611 x1115) x784)) (not x1226)) (and x1226 (= 0 x1069)))) x458)))
(assert (= (x688 x410 96) (div x410 79228162514264337593543950336)))
(assert (= (div x253 79228162514264337593543950336) (x688 x253 96)))
(assert (x632 x597))
(assert (= x590 (and x495 (not x559))))
(assert (= (x623 (x195 64 x798 6)) x798))
(assert (x632 x979))
(assert (x632 x526))
(assert (= (x375 (x1127 40 20 (x688 x1261 96) (x688 x360 96))) (x688 x360 96)))
(assert (x632 x884))
(assert (x632 x640))
(assert (x328 599290589))
(assert (x632 x541))
(assert (= (x688 x486 96) (div x486 79228162514264337593543950336)))
(assert (= (and x1308 (not x1)) x1118))
(assert (x632 x515))
(assert (x632 x992))
(assert (x632 x1144))
(assert (< 10000 (x195 64 x94 0)))
(assert (x632 x803))
(assert (= (x623 (x1127 40 20 (x688 x116 96) (x688 x1313 96))) 20))
(assert (= (and x39 x152) x1167))
(assert (x632 x1162))
(assert (= x1108 (or x34 x753)))
(assert (not (x328 (x195 64 x792 6))))
(assert (x632 x1196))
(assert (= (x688 x842 96) (x446 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (x632 x832))
(assert (= (x1127 40 20 (x688 x1072 96) (x688 x449 96)) (x346 (x1127 40 20 (x688 x1072 96) (x688 x449 96)))))
(assert (= (or x119 x583) x840))
(assert (x632 x663))
(assert (x632 x327))
(assert (= 64 (x845 (x195 64 x94 x841))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x861 96) (x688 x237 96))))
(assert (x632 x197))
(assert (=> (= x723 0) (= (div x75 x723) 0)))
(assert (x632 x691))
(assert (x632 x1177))
(assert (x632 x1195))
(assert (x632 x894))
(assert (= (and x876 x412) x111))
(assert (= (x346 57896044618658097711785492504343953926975274699741220483192166611388333031422) 0))
(assert (not (x328 (x195 64 x1286 6))))
(assert (x632 x207))
(assert (= (or x8 x354) x152))
(assert (= (x688 x355 96) (x375 (x1127 40 20 (x688 x1256 96) (x688 x355 96)))))
(assert (= (x446 (x1127 40 20 (x688 x1217 96) (x688 x207 96))) (x688 x1217 96)))
(assert (x632 x707))
(assert (= 64 (x845 (x195 64 x798 6))))
(assert (x632 x1157))
(assert (= 20 (x623 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (x632 x1070))
(assert (= (x346 (x1127 40 20 (x688 x1122 96) (x688 x81 96))) (x1127 40 20 (x688 x1122 96) (x688 x81 96))))
(assert (x363 340282366920938463463374607431768211455))
(assert (= x1166 (and x804 x802)))
(assert (x328 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x446 (x195 64 x36 x366)) x366))
(assert (= (or x244 x289) x939))
(assert (x632 x542))
(assert (x632 x434))
(assert (x632 x678))
(assert (= (or x10 x4) x495))
(assert (x632 x283))
(assert (= 64 (x845 (x195 64 x1291 6))))
(assert (x632 x260))
(assert (=> (= 0 x1219) (= 0 (div x236 x1219))))
(assert (x632 x830))
(assert (not (x328 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (= (x446 (x195 64 x1159 6)) 6))
(assert (=> (>= 10000 (x688 x491 96)) (= 0 (x346 (x688 x491 96)))))
(assert (=> (>= 10000 (x688 x1098 96)) (= (x346 (x688 x1098 96)) 0)))
(assert (x632 x286))
(assert (x632 x554))
(assert (= x693 (and x422 (not x25))))
(assert (= (and x1021 (not x6)) x1119))
(assert (= (div x382 79228162514264337593543950336) (x688 x382 96)))
(assert (x632 x295))
(assert (= (=> (and (and (= x1085 (ite (not (< x1097 100)) (ite (not (> 100 x1007)) 1 0) (ite (not (> 100 x1097)) 1 0))) (= x39 (< x36 x972)) (= 1 x1085) (= (x910 340282366920938463463374607431768211455 x1007) x281) (= x128 (x910 340282366920938463463374607431768211455 x1097))) (or (and (not x39) (and (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x69 x621) (= (x1270 (+ 20 x487)) x631) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x133)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x133)) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 79228162514264337593543950336 x36) x1098) (= x91 (* 79228162514264337593543950336 x972)) (= (x1127 40 20 (x688 x91 96) (x688 x1098 96)) x69) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x189 (x1270 (+ x133 32))) (= x631 x74) (= x487 (x1270 (+ 20 x189))) (< x133 x631) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x133)) (= x1000 0))) (and x39 (and (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x201 (x1270 (+ x638 20))) (= x177 (* 79228162514264337593543950336 x972)) (<= x133 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x680 (x1270 (+ x133 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x133)) (not (= x133 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (> x201 x133) (= x1128 x621) (= (* x36 79228162514264337593543950336) x179) (= (x1270 (+ x680 20)) x638) (= x1128 (x1127 40 20 (x688 x179 96) (x688 x177 96))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x133) (not (= x133 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x74 x201) (= x1000 1))))) x848) x955))
(assert (= (and x1184 x893) x1046))
(assert (x632 x874))
(assert (= (x688 x355 96) (div x355 79228162514264337593543950336)))
(assert (= (or x576 x998) x409))
(assert (=> (<= x883 10000) (= 0 (x346 x883))))
(assert (x632 x517))
(assert (x632 x442))
(assert (not (x328 (x195 64 x94 x1138))))
(assert (x632 x771))
(assert (x632 x1314))
(assert (=> (= x692 0) (= (div x750 x692) 0)))
(assert (x632 x1207))
(assert (x632 x246))
(assert (= x47 (and x1160 x1240)))
(assert (x632 x385))
(assert (x632 x19))
(assert (x632 x462))
(assert (x999 x695))
(assert (x632 x1016))
(assert (= 0 (x346 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (> (x195 64 x738 6) 10000))
(assert (x632 x1303))
(assert (=> (>= 10000 (x688 x1122 96)) (= (x346 (x688 x1122 96)) 0)))
(assert (x632 x321))
(assert (> (x1127 40 20 (x688 x1256 96) (x688 x355 96)) 10000))
(assert (= 0 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639864)))
(assert (=> (= x436 0) (= (div x1266 x436) 0)))
(assert (x632 x1257))
(assert (x632 x888))
(assert (=> (= 0 x605) (= (div x211 x605) 0)))
(assert (x632 x128))
(assert (x632 x457))
(assert (x632 x426))
(assert (= x333 (and x917 x409)))
(assert (= (x195 64 x94 x841) (x346 (x195 64 x94 x841))))
(assert (=> (= x321 0) (= 0 (div x945 x321))))
(assert (x632 x1147))
(assert (= (x623 (x195 64 x94 x841)) x94))
(assert (= x674 (and x794 x1140)))
(assert (= (and x1255 x931) x1102))
(assert (= 0 (x346 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (= 64 (x845 (x195 64 x36 x366))))
(assert (=> (= x498 0) (= 0 (div x1080 x498))))
(assert (= x539 (and x802 (not x804))))
(assert (= x4 (and (not x1280) x981)))
(assert (x632 x483))
(assert (x632 x575))
(assert (= (x688 x1195 96) (x446 (x1127 40 20 (x688 x1195 96) (x688 x676 96)))))
(assert (< 10000 (x195 64 x94 x48)))
(assert (= (or x1096 x120) x556))
(assert (x632 x162))
(assert (x632 x854))
(assert (= x155 (or x1143 x1113)))
(assert (x632 x362))
(assert (= 40 (x845 (x1127 40 20 (x688 x382 96) (x688 x565 96)))))
(assert (x632 x1064))
(assert (= (and x1030 x939) x30))
(assert (x632 x320))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1256 96) (x688 x355 96))))
(assert (= x84 (and (not x683) x716)))
(assert (> (x1127 40 20 (x688 x1303 96) (x688 x491 96)) 10000))
(assert (x632 x1234))
(assert (x632 x171))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x1291 6)))
(assert (= (x195 64 x974 6) (x346 (x195 64 x974 6))))
(assert (x632 x1298))
(assert (x632 x291))
(assert (x632 x277))
(assert (< (x1127 40 20 (x688 x131 96) (x688 x837 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x335))
(assert (x632 x153))
(assert (x632 x505))
(assert (x632 x795))
(assert (= (and x840 x217) x609))
(assert (x632 x996))
(assert (= x912 (=> (and (= x6 (= (ite (< x272 100) (ite (< x272 100) 1 0) (ite (> 100 x914) 1 0)) 0)) (or (and (and (= x832 x774) (= x587 0)) (not x6)) (and x6 (and (= (ite (> x343 100) x343 0) x587) (<= x1307 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1307 0) (= x1307 (* x272 x550)) (>= x914 1) (< (* x272 x550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x832 x774) (<= x914 340282366920938463463374607431768211455) (= x343 (div x1307 x914)))))) x1052)))
(assert (x632 x1230))
(assert (x632 x98))
(assert (=> (>= 10000 (x688 x410 96)) (= (x346 (x688 x410 96)) 0)))
(assert (x632 x360))
(assert (= (x446 (x195 64 x621 6)) 6))
(assert (x632 x1281))
(assert (x632 x1153))
(assert (=> (<= (x688 x486 96) 10000) (= (x346 (x688 x486 96)) 0)))
(assert (x632 x793))
(assert (not (x328 (x1127 40 20 (x688 x486 96) (x688 x1088 96)))))
(assert (= x998 (and x877 x1051)))
(assert (=> (>= 10000 (x688 x1148 96)) (= (x346 (x688 x1148 96)) 0)))
(assert (x632 x313))
(assert (x632 x1241))
(assert (not (x328 (x1127 40 20 (x688 x116 96) (x688 x1313 96)))))
(assert (= (div x53 2) (x688 x53 1)))
(assert (= (=> (and (= (= 0 x335) x866) (or (and (not x866) (and (= x257 x431) (= x238 x760))) (and (and (= x257 x760) (= x238 x234)) x866))) x1100) x564))
(assert (= x157 (and x679 (not x1055))))
(assert (x632 x977))
(assert (x632 x1262))
(assert (x632 x461))
(assert (x632 x104))
(assert (x632 x185))
(assert (= x399 (and (not x1025) x218)))
(assert (x632 x474))
(assert (x632 x1041))
(assert (= 0 (x346 680564733841876926926749214863536422910)))
(assert (x632 x136))
(assert (x363 x67))
(assert (x632 x1173))
(assert (= x599 (=> (and (= x824 (x910 340282366920938463463374607431768211455 x664)) (= (x610 (- x1056 x36)) x720) (= x476 (x910 340282366920938463463374607431768211455 x104)) (= x1296 (ite (not (< x104 100)) (ite (not (< x664 100)) 1 0) (ite (not (> 100 x104)) 1 0))) (= x1296 1) (= (< 0 x720) x249)) (and (=> (and (not x249) (and (= x832 x125) (= x587 x550))) x1052) (=> (and (and (= x741 (> x36 x1056)) (or (and x741 (and (= 1 x662) (not (= x125 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x45 (x1270 (+ x125 32))) (= x675 x76) (= x291 (x1270 (+ 20 x45))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x125) (< x125 x675) (= x1261 (* x1056 79228162514264337593543950336)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x125)) (= (x1127 40 20 (x688 x1261 96) (x688 x360 96)) x1246) (= x360 (* 79228162514264337593543950336 x36)) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x125)) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1246 x974) (= (x1270 (+ 20 x291)) x675))) (and (and (= (x1270 (+ 32 x125)) x854) (= 0 x662) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x125) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x125)) (= (* x1056 79228162514264337593543950336) x1039) (not (= x125 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x974 x839) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x839 (x1127 40 20 (x688 x253 96) (x688 x1039 96))) (= (x1270 (+ 20 x854)) x82) (not (= x125 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (* x36 79228162514264337593543950336) x253) (= x891 x76) (> x891 x125) (= (x1270 (+ x82 20)) x891)) (not x741)))) x249) x169)))))
(assert (< (x195 64 x94 x48) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x363 x104))
(assert (x632 x231))
(assert (x632 x348))
(assert (x632 x66))
(assert (= (and x1087 x537) x353))
(assert (= x370 (and (not x176) x1054)))
(assert (= (x346 2835717307) 0))
(assert (> (x195 64 x191 0) 10000))
(assert (x632 x258))
(assert (x371 x239))
(assert (= (x688 x549 96) (div x549 79228162514264337593543950336)))
(assert (= x94 (x623 (x195 64 x94 x48))))
(assert (x632 x1148))
(assert (x632 x915))
(assert (x632 x288))
(assert (= x781 (=> (and (>= x818 1) (<= 1 x461) (not (= x1272 x468)) (= (< 0 (x957 x1301)) x298) (= x86 false) x984 (= x1091 x950) (= (< 0 (x957 x94)) x855) (<= 1 x1301) (>= 1461501637330902918203684832716283019655932542975 x154) (>= x1238 0) (<= x462 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x461) (<= x255 340282366920938463463374607431768211455) (not (= x812 x94)) (<= x1204 1461501637330902918203684832716283019655932542975) (<= x231 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x63) (= x967 false) (<= x1189 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x94 1461501637330902918203684832716283019655932542975) (not (= x468 x818)) (>= 1461501637330902918203684832716283019655932542975 x384) (not (= x1272 x461)) x892 (>= x815 1) (>= 1461501637330902918203684832716283019655932542975 x193) (= x283 2) (= x1056 (x1045 4)) (not (= x468 x594)) (<= 0 x1067) (= (x1045 36) x988) (not (= x1028 2)) (>= 127 x345) (= x262 (> (x957 x818) 0)) (<= x137 1461501637330902918203684832716283019655932542975) (not (= x468 x461)) (not (= x1272 x594)) (not (= x94 x1301)) (= x24 x874) (= x255 (x1045 132)) (<= 0 x1189) (not (< x442 x1024)) (not (= x1272 x812)) (>= 1461501637330902918203684832716283019655932542975 x468) (= 100 x513) (not (= x94 x1272)) (not (= x594 x818)) x77 (>= 1461501637330902918203684832716283019655932542975 x1210) (<= x961 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1181) (= x541 x994) (>= 1461501637330902918203684832716283019655932542975 x1238) (not (= x818 x1301)) x855 (>= 1461501637330902918203684832716283019655932542975 x818) (= (x334 x1056) x994) (= (x1045 0) x947) (= x29 x264) (= 3343790536 x727) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x817) (= x1198 0) (= x313 x815) (>= 1461501637330902918203684832716283019655932542975 x988) (<= x1075 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x702) (= x459 3343790536) (>= x23 0) (= x1027 x947) (<= 1 x94) (= (x1045 100) x550) (<= x594 1461501637330902918203684832716283019655932542975) (= x758 (= x1056 x461)) (= x883 x29) (= (x957 x94) x715) (>= 1461501637330902918203684832716283019655932542975 x1191) (not (= x1301 x468)) (= false x88) x822 (>= x106 0) (not (= x461 x594)) x1136 (= x825 x1048) (not (= x594 x812)) (<= x23 4294967295) (<= x1301 1461501637330902918203684832716283019655932542975) (= (x1045 68) x883) (<= 0 x193) (= x988 x267) (= x1305 324) (= x513 (x610 (- x1162 324))) (not (= x818 x94)) (= x616 (x901 x313)) (= x950 x255) (<= 1 x812) (= x1136 (> (x957 x461) 0)) (<= x278 1461501637330902918203684832716283019655932542975) (= (> (x957 x812) 0) x77) (<= 1 x1272) (<= 1 x594) (>= 1461501637330902918203684832716283019655932542975 x795) (= (x1292 x94) x791) (<= x1064 1461501637330902918203684832716283019655932542975) (= (< 0 (x957 x1272)) x822) (>= x715 1) (not (= x812 x1301)) (not (= x94 x594)) (not (= x468 x812)) (>= x1001 0) (not (= x461 x1301)) (<= x1212 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1233 (+ x811 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (<= x812 1461501637330902918203684832716283019655932542975) (<= 0 x1123) (>= 1461501637330902918203684832716283019655932542975 x769) (= x1067 x1024) (<= x345 127) (<= x654 1461501637330902918203684832716283019655932542975) (<= x1129 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x547) (>= 1461501637330902918203684832716283019655932542975 x1300) (>= 1461501637330902918203684832716283019655932542975 x26) (<= x1272 1461501637330902918203684832716283019655932542975) (<= x1123 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1056) (>= x867 196) (<= 0 x1212) (<= 1 x468) (= (x910 26959946667150639794667015087019630673637144422540572481103610249215 x695) x811) (<= x1093 1461501637330902918203684832716283019655932542975) (= x555 x791) (<= x551 1461501637330902918203684832716283019655932542975) (= x627 false) (<= x666 1461501637330902918203684832716283019655932542975) (= x882 6) (= x158 (x68 128)) (= x892 (< 0 (x957 x594))) (= x376 (x1258 x94)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1001) x298 (not (= x461 x94)) (<= x106 1461501637330902918203684832716283019655932542975) (= false x394) (>= 1461501637330902918203684832716283019655932542975 x46) (= (x752 160) x695) (not (= x1272 x1301)) (not (= x94 x468)) (= x442 (x1045 164)) (not (= x812 x818)) (<= x1214 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067) (= (x1270 (+ x158 324)) x1162) (<= x140 1461501637330902918203684832716283019655932542975) (<= x867 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 1461501637330902918203684832716283019655932542975 x815) (= (< 0 (x957 x468)) x984) x262 (= x815 x191) (= 128 x1041) (>= 1461501637330902918203684832716283019655932542975 x1016) (= x601 false) (= x1048 x550) (= x1056 x24) (>= 1461501637330902918203684832716283019655932542975 x889) (= x94 x1068) (= x865 0) (not (= x461 x812)) (not (= x1272 x818)) (not (= x461 x818)) (<= x883 1461501637330902918203684832716283019655932542975) (<= 0 x625) (not (= x594 x1301)) (= x1254 260) (= x293 x267) (= x524 false) (<= 0 x817) (>= 1461501637330902918203684832716283019655932542975 x36) (= x660 x442) (>= 1461501637330902918203684832716283019655932542975 x739)) (and (=> (and (and (and (= false x850) (= x402 x288) (= x825 x109) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x639) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x671) x1066) (= 599290589 x778) (= x123 100) (= x976 x915) (<= x552 127) (= x502 (x195 64 x94 x879)) (= x94 x915) (= x423 x109) (= (x957 x461) x853) (= x1211 false) (>= x853 1) (= x191 x288) (>= 127 x552) (= x879 (x195 64 x191 1)) (= x671 (x1135 x502))) (or (and (and (= x1138 (x195 64 x191 1)) (= (x195 64 x94 x1138) x186) (not (< x671 x550)) (= (x610 (- x671 x550)) x159) (not (< x671 x159))) (not x1066)) x1066)) x758) x864) (=> (and (and (and (<= x1056 1461501637330902918203684832716283019655932542975) (= x825 x102) (= x661 599290589) (= x269 x521) (= x357 (= x803 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x276 x191) (= x122 100) (<= 1 x37) (>= 127 x764) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1173) (<= x764 127) (>= x1056 1) (= x102 x992) (= false x368) (= x812 x1056) (= x572 (x195 64 x94 x841)) (= (x195 64 x191 1) x841) (= x223 x276) (= x37 (x957 x812)) (= x269 x94) (= x803 (x1099 x572)) (= false x1179)) (or (and (and (= (x195 64 x191 1) x48) (not (< x803 x550)) (= (x195 64 x94 x48) x358) (= (x610 (- x803 x550)) x656) (not (< x803 x656))) (not x357)) x357)) (not x758)) x1111)))))
(assert (x632 x956))
(assert (x632 x883))
(assert (= (x688 x91 96) (x446 (x1127 40 20 (x688 x91 96) (x688 x1098 96)))))
(assert (= (div x42 2) (x688 x42 1)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x191 1)))
(assert (x632 x75))
(assert (not (x328 (x195 64 x1130 6))))
(assert (= x329 (and x1038 x249)))
(assert (x632 x561))
(assert (=> (= 0 x450) (= 0 (div x97 x450))))
(assert (= x1224 (or x333 x543)))
(assert (=> (= x1314 0) (= (div x1032 x1314) 0)))
(assert (= x1058 (=> (and (= (= x642 0) x1140) (or (and (not x1140) (and (= x805 x136) (= x1241 x593))) (and (and (= x136 x1241) (= x805 x612)) x1140))) x923)))
(assert (x632 x744))
(assert (x632 x664))
(assert (x632 x662))
(assert (=> (= 0 x937) (= 0 (div x930 x937))))
(assert (=> (<= x313 10000) (= (x346 x313) 0)))
(assert (=> (<= x1301 10000) (= (x346 x1301) 0)))
(assert (= x259 (=> (and (and (= x118 (= 0 x163)) (= x1242 324) (= x982 324) (= x1299 (ite x118 1 0)) (= 324 x1207) (= x163 (x935 324))) (or (and (and (<= 32 x726) (<= x726 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x726 (x935 324)) (= x793 1) (= (x150 356) x793)) (not x118)) (and (= x1299 1) x118))) x1278)))
(assert (= (x623 (x1127 40 20 (x688 x861 96) (x688 x237 96))) 20))
(assert (= (and x1176 x1008) x147))
(assert (= x429 (and (not x573) x1108)))
(assert (= (x845 (x195 64 x974 6)) 64))
(assert (x632 x805))
(assert (x632 x976))
(assert (x632 x317))
(assert (x632 x723))
(assert (x632 x410))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x1220 1)))
(assert (not x781))
(assert (< 10000 (x1127 40 20 (x688 x116 96) (x688 x1313 96))))
(assert (x632 x600))
(assert (=> (>= 10000 (x688 x116 96)) (= (x346 (x688 x116 96)) 0)))
(assert (x632 x789))
(assert (=> (<= (x688 x382 96) 10000) (= 0 (x346 (x688 x382 96)))))
(assert (=> (= x1090 0) (= 0 (div x216 x1090))))
(assert (=> (>= 10000 x594) (= 0 (x346 x594))))
(assert (x632 x299))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x116 96) (x688 x1313 96))))
(assert (x632 x266))
(assert (x632 x116))
(assert (x632 x718))
(assert (= x441 (and x770 x556)))
(assert (=> (= (+ x304 x668) 0) (= 0 (div x665 (+ x304 x668)))))
(assert (x632 x1309))
(assert (= (x346 340282366920938463463374607431768211455) 0))
(assert (x632 x123))
(assert (= (x346 (x195 64 x139 7)) (x195 64 x139 7)))
(assert (x632 x493))
(assert (x632 x407))
(assert (x632 x565))
(assert (= (x195 64 x798 6) (x346 (x195 64 x798 6))))
(assert (not (x328 (x195 64 x974 6))))
(assert (x371 x664))
(assert (x632 x420))
(assert (x632 x486))
(assert (x632 x431))
(assert (not (x328 (x1127 40 20 (x688 x91 96) (x688 x1098 96)))))
(assert (= (x688 x926 96) (x375 (x1127 40 20 (x688 x787 96) (x688 x926 96)))))
(assert (= (x688 x207 96) (div x207 79228162514264337593543950336)))
(assert (x632 x730))
(assert (x632 x300))
(assert (x632 x284))
(assert (x632 x261))
(assert (x632 x1151))
(assert (= (x195 64 x1159 6) (x346 (x195 64 x1159 6))))
(assert (x632 x851))
(assert (= 40 (x845 (x1127 40 20 (x688 x787 96) (x688 x926 96)))))
(assert (x363 x85))
(assert (= (x623 (x195 64 x738 6)) x738))
(assert (=> (>= 10000 (x688 x926 96)) (= 0 (x346 (x688 x926 96)))))
(assert (= (x688 x1148 96) (x375 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (x632 x149))
(assert (x363 x1007))
(assert (x371 x85))
(assert (x632 x1206))
(assert (x632 x450))
(assert (x632 x238))
(assert (x632 x1024))
(assert (< 10000 (x195 64 x792 6)))
(assert (x632 x344))
(assert (= (or x1142 x532) x1038))
(assert (= 40 (x845 (x1127 40 20 (x688 x116 96) (x688 x1313 96)))))
(assert (x632 x563))
(assert (not (x328 (x1127 40 20 (x688 x1117 96) (x688 x395 96)))))
(assert (= x1017 (or x504 x677)))
(assert (= (x375 (x1127 40 20 (x688 x1122 96) (x688 x81 96))) (x688 x81 96)))
(assert (=> (= 0 x527) (= (div x1101 x527) 0)))
(assert (=> (= x997 0) (= (div x743 x997) 0)))
(assert (not (x328 (x195 64 x1159 6))))
(assert (x632 x871))
(assert (x632 x280))
(assert (= (x1127 40 20 (x688 x699 96) (x688 x821 96)) (x346 (x1127 40 20 (x688 x699 96) (x688 x821 96)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x382 96) (x688 x565 96))))
(assert (x632 x270))
(assert (= (x346 (x1127 40 20 (x688 x227 96) (x688 x624 96))) (x1127 40 20 (x688 x227 96) (x688 x624 96))))
(assert (= x289 (and x949 (not x1146))))
(assert (x632 x622))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x549 96) (x688 x15 96))))
(assert (x632 x1062))
(assert (x632 x468))
(assert (= (x1127 40 20 (x688 x486 96) (x688 x1088 96)) (x346 (x1127 40 20 (x688 x486 96) (x688 x1088 96)))))
(assert (x632 x101))
(assert (x632 x555))
(assert (x632 x248))
(assert (=> (<= (x688 x177 96) 10000) (= (x346 (x688 x177 96)) 0)))
(assert (= x567 (=> (and (= (mod (* x500 x562) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x271) (= (div x678 x58) x18) (= x1015 (x1270 (+ x916 x657))) (= x58 (x1270 (+ x1149 x1318))) (= (x610 (- x18 x829)) x103) (<= 1 x83) (>= x145 1) (<= 1 x58) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) (and (> 100 x103) (= (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) 0 x829) x348) (= (mod (* x1318 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x678) (= (mod (* x829 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x479) (= x1318 (div x271 x83)) (= (div x479 x145) x562) (= x83 (x1270 (+ x258 x562))) (<= x145 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x145 (+ x304 x829)) (= (x688 x1015 1) x829)) x991)))
(assert (= (x375 (x1127 40 20 (x688 x1303 96) (x688 x491 96))) (x688 x491 96)))
(assert (= (x688 x837 96) (x375 (x1127 40 20 (x688 x131 96) (x688 x837 96)))))
(assert (= x180 (or x609 x132)))
(assert (x632 x997))
(assert (x632 x859))
(assert (= (x688 x1256 96) (div x1256 79228162514264337593543950336)))
(assert (= x439 (or x353 (and x1109 x765))))
(assert (not (x328 (x1127 40 20 (x688 x1261 96) (x688 x360 96)))))
(assert (x632 x780))
(assert (x632 x510))
(assert (= 0 (x346 1461501637330902918203684832716283019655932542975)))
(assert (= x445 (x623 (x195 64 x445 6))))
(assert (= (and (not x1218) x51) x265))
(assert (x363 x1057))
(assert (x632 x702))
(assert (=> (>= 10000 (x688 x81 96)) (= (x346 (x688 x81 96)) 0)))
(assert (x632 x275))
(assert (not (x328 (x1127 40 20 (x688 x1256 96) (x688 x355 96)))))
(assert (= (x688 x443 1) (div x443 2)))
(assert (= 20 (x623 (x1127 40 20 (x688 x410 96) (x688 x863 96)))))
(assert (= (and (not x1209) x389) x134))
(assert (= (and x1294 (not x1306)) x504))
(assert (> (x1127 40 20 (x688 x131 96) (x688 x837 96)) 10000))
(assert (=> (>= 10000 x36) (= (x346 x36) 0)))
(assert (= (and x6 x1021) x1084))
(assert (= (and (not x357) x706) x256))
(assert (x632 x690))
(assert (x632 x715))
(assert (=> (= x1259 0) (= 0 (div x451 x1259))))
(assert (x632 x1290))
(assert (x632 x315))
(assert (= (x845 (x195 64 x738 6)) 64))
(assert (x632 x154))
(assert (= (x446 (x1127 40 20 (x688 x116 96) (x688 x1313 96))) (x688 x116 96)))
(assert (x632 x1178))
(assert (= (x845 (x195 64 x621 6)) 64))
(assert (not (x328 (x195 64 x191 0))))
(assert (= (div x1261 79228162514264337593543950336) (x688 x1261 96)))
(assert (x632 x828))
(assert (= (and x325 (not x1213)) x200))
(assert (= (x688 x676 96) (x375 (x1127 40 20 (x688 x1195 96) (x688 x676 96)))))
(assert (= (x375 (x1127 40 20 (x688 x179 96) (x688 x177 96))) (x688 x177 96)))
(assert (= (x845 (x195 64 x191 0)) 64))
(assert (= x8 (and x644 x1224)))
(assert (< (x195 64 x621 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x604))
(assert (= 40 (x845 (x1127 40 20 (x688 x549 96) (x688 x15 96)))))
(assert (x632 x588))
(assert (x632 x1191))
(assert (= (div x260 2) (x688 x260 1)))
(assert (= (x375 (x1127 40 20 (x688 x1072 96) (x688 x449 96))) (x688 x449 96)))
(assert (x632 x384))
(assert (x632 x812))
(assert (x632 x376))
(assert (x632 x448))
(assert (= (x446 (x195 64 x738 6)) 6))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x486 96) (x688 x1088 96))))
(assert (x632 x373))
(assert (= (x845 (x1127 40 20 (x688 x1303 96) (x688 x491 96))) 40))
(assert (x632 x809))
(assert (= 20 (x623 (x1127 40 20 (x688 x1217 96) (x688 x207 96)))))
(assert (=> (<= (x688 x1195 96) 10000) (= 0 (x346 (x688 x1195 96)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x798 6)))
(assert (x632 x736))
(assert (= (and x176 x1054) x5))
(assert (= (x195 64 x445 6) (x346 (x195 64 x445 6))))
(assert (x632 x82))
(assert (= (or x5 x370) x494))
(assert (x328 115792089237316195423570985008687907853269984665640564039457584007913129639836))
(assert (=> (= 0 x83) (= (div x271 x83) 0)))
(assert (x632 x133))
(assert (= (x845 (x195 64 x792 6)) 64))
(assert (x632 x985))
(assert (= x10 (and x1280 x981)))
(assert (= (x375 (x1127 40 20 (x688 x486 96) (x688 x1088 96))) (x688 x1088 96)))
(assert (=> (= x444 0) (= (div x457 x444) 0)))
(assert (x632 x657))
(assert (x632 x350))
(assert (= (x346 (x195 64 x94 x879)) (x195 64 x94 x879)))
(assert (= 0 (x346 79228162514264337593543950336)))
(assert (= x1089 (and x939 (not x1030))))
(assert (=> (>= 10000 (x688 x821 96)) (= 0 (x346 (x688 x821 96)))))
(assert (x632 x1254))
(assert (=> (= x362 0) (= (div x1070 x362) 0)))
(assert (x632 x1056))
(assert (x632 x20))
(assert (> (x1127 40 20 (x688 x410 96) (x688 x863 96)) 10000))
(assert (x328 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x632 x506))
(assert (= x918 (or x516 x953)))
(assert (< 10000 (x1127 40 20 (x688 x227 96) (x688 x624 96))))
(assert (= x1138 (x446 (x195 64 x94 x1138))))
(assert (x632 x978))
(assert (x632 x1020))
(assert (x632 x1169))
(assert (= (div x1088 79228162514264337593543950336) (x688 x1088 96)))
(assert (x632 x285))
(assert (x632 x276))
(assert (= (x688 x1117 96) (x446 (x1127 40 20 (x688 x1117 96) (x688 x395 96)))))
(assert (= x1197 (and (not x1283) x704)))
(assert (x632 x523))
(assert (=> (<= (x688 x360 96) 10000) (= (x346 (x688 x360 96)) 0)))
(assert (=> (= 0 x98) (= (div x1263 x98) 0)))
(assert (= (and x494 (not x241)) x1096))
(assert (= (x623 (x195 64 x1159 6)) x1159))
(assert (= x1194 (and x1081 x858)))
(assert (= (x688 x1122 96) (x446 (x1127 40 20 (x688 x1122 96) (x688 x81 96)))))
(assert (x371 x324))
(assert (= (x688 x395 96) (x375 (x1127 40 20 (x688 x1117 96) (x688 x395 96)))))
(assert (x632 x112))
(assert (x632 x514))
(assert (x632 x253))
(assert (not (x328 (x1127 40 20 (x688 x1122 96) (x688 x81 96)))))
(assert (x632 x1304))
(assert (not (x328 (x195 64 x621 6))))
(assert (x632 x190))
(assert (x632 x339))
(assert (= x909 (and x952 (not x866))))
(assert (= (div x861 79228162514264337593543950336) (x688 x861 96)))
(assert (= (x845 (x1127 40 20 (x688 x227 96) (x688 x624 96))) 40))
(assert (= (x375 (x1127 40 20 (x688 x116 96) (x688 x1313 96))) (x688 x1313 96)))
(assert (x632 x355))
(assert (= 6 (x446 (x195 64 x974 6))))
(assert (= x1284 (=> (and (or (and (and (= x1288 x1149) (= x1247 x797)) (not x241)) (and (and (= x1288 x797) (= x1149 x1247)) x241)) (and (< x1315 x796) (= x1288 (x1223 x187)) (= (= 0 x408) x241) (<= x1315 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x768 x187) x1247) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1315) (not (= x1315 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 340282366920938463463374607431768211455 x1288) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1315) (>= 340282366920938463463374607431768211455 x1247) (= x187 (x195 64 x445 6)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1315)) (= x796 (x1270 (+ 64 x1315))) (not (= x1315 115792089237316195423570985008687907853269984665640564039457584007913129639872)))) x485)))
(assert (x632 x983))
(assert (= (x623 (x1127 40 20 (x688 x1256 96) (x688 x355 96))) 20))
(assert (x632 x42))
(assert (x632 x725))
(assert (x632 x242))
(assert (= (x845 (x195 64 x94 0)) 64))
(assert (x632 x760))
(assert (< (x195 64 x1159 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x1302))
(assert (x632 x897))
(assert (x632 x1219))
(assert (= x114 (=> (and (and (= x596 (x1223 x844)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x737) (= x1146 (= 0 x1125)) (= x844 (x195 64 x798 6)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x737)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x737)) (= (x768 x844) x198) (<= x737 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x902 (x1270 (+ 64 x737))) (<= x198 340282366920938463463374607431768211455) (> x902 x737) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x737) (not (= x737 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 340282366920938463463374607431768211455 x596)) (or (and (and (= x198 x304) (= x596 x144)) x1146) (and (and (= x198 x144) (= x304 x596)) (not x1146)))) x12)))
(assert (x632 x1175))
(assert (x632 x1002))
(assert (= (and x495 x559) x421))
(assert (x632 x17))
(assert (x632 x719))
(assert (=> (= 0 x338) (= (div x138 x338) 0)))
(assert (x632 x550))
(assert (= (and (not x113) x918) x1076))
(assert (=> (<= x94 10000) (= 0 (x346 x94))))
(assert (x632 x225))
(assert (x632 x191))
(assert (= (and x536 x204) x583))
(assert (= (or x1046 x1012) x802))
(assert (= (or x590 x421) x858))
(assert (x632 x290))
(assert (= (and x1038 (not x249)) x454))
(assert (= (div x863 79228162514264337593543950336) (x688 x863 96)))
(assert (= x570 (and x439 x1273)))
(assert (x632 x1317))
(assert (= (div x1303 79228162514264337593543950336) (x688 x1303 96)))
(assert (=> (<= (x688 x624 96) 10000) (= (x346 (x688 x624 96)) 0)))
(assert (x632 x18))
(assert (x632 x1236))
(assert (x632 x611))
(assert (x632 x199))
(assert (x632 x551))
(assert (x632 x167))
(assert (x632 x671))
(assert (> (x1127 40 20 (x688 x1117 96) (x688 x395 96)) 10000))
(assert (= x221 (and x952 x866)))
(assert (x632 x478))
(assert (= x1143 (and x1017 x574)))
(assert (x632 x1007))
(assert (x632 x527))
(assert (= (or x115 x1161) x1160))
(assert (=> (>= 10000 (x688 x1088 96)) (= 0 (x346 (x688 x1088 96)))))
(assert (= (div x676 79228162514264337593543950336) (x688 x676 96)))
(assert (x328 340282366920938463463374607431768211455))
(assert (x632 x170))
(assert (= x213 (and x858 (not x1081))))
(assert (x632 x924))
(assert (= (div x360 79228162514264337593543950336) (x688 x360 96)))
(assert (x632 x1121))
(assert (x632 x83))
(assert (= (and x59 x1200) x532))
(assert (x632 x1237))
(assert (x632 x107))
(assert (x632 x1035))
(assert (=> (>= 10000 (x688 x861 96)) (= 0 (x346 (x688 x861 96)))))
(assert (x632 x951))
(assert (= x1188 (and (not x538) x896)))
(assert (= (x346 (x1127 40 20 (x688 x1303 96) (x688 x491 96))) (x1127 40 20 (x688 x1303 96) (x688 x491 96))))
(assert (x632 x395))
(assert (= (x446 (x1127 40 20 (x688 x179 96) (x688 x177 96))) (x688 x179 96)))
(assert (= x1083 (or x200 x356)))
(assert (= (and x553 x1264) x438))
(assert (x632 x179))
(assert (= x332 (and x1108 x573)))
(assert (x632 x1315))
(assert (= 40 (x845 (x1127 40 20 (x688 x486 96) (x688 x1088 96)))))
(assert (not (x328 (x195 64 x94 0))))
(assert (= 40 (x845 (x1127 40 20 (x688 x253 96) (x688 x1039 96)))))
(assert (= (or x110 x1167) x1294))
(assert (x632 x566))
(assert (= (x446 (x1127 40 20 (x688 x1303 96) (x688 x491 96))) (x688 x1303 96)))
(assert (x632 x756))
(assert (=> (= 0 x407) (= 0 (div x970 x407))))
(assert (< 10000 (x1127 40 20 (x688 x253 96) (x688 x1039 96))))
(assert (= 40 (x845 (x1127 40 20 (x688 x410 96) (x688 x863 96)))))
(assert (= (and x1 x1308) x218))
(assert (= x646 (or x243 x674)))
(assert (= (and x180 (not x672)) x1103))
(assert (= (x446 (x1127 40 20 (x688 x382 96) (x688 x565 96))) (x688 x382 96)))
(assert (x632 x436))
(assert (x632 x1101))
(assert (= (x688 x1217 96) (div x1217 79228162514264337593543950336)))
(assert (x632 x762))
(assert (x328 1461501637330902918203684832716283019655932542975))
(assert (x632 x1187))
(assert (= 40 (x845 (x1127 40 20 (x688 x1256 96) (x688 x355 96)))))
(assert (=> (= 0 x637) (= (div x508 x637) 0)))
(assert (x632 x813))
(assert (= x48 (x446 (x195 64 x94 x48))))
(assert (= x896 (or x147 (and (not x1176) x1008))))
(assert (x632 x594))
(assert (= (x346 (x1127 40 20 (x688 x179 96) (x688 x177 96))) (x1127 40 20 (x688 x179 96) (x688 x177 96))))
(assert (x632 x490))
(assert (= (x623 (x195 64 x94 x879)) x94))
(assert (x632 x223))
(assert (=> (<= x1272 10000) (= (x346 x1272) 0)))
(assert (< 10000 (x1127 40 20 (x688 x842 96) (x688 x1148 96))))
(assert (x632 x196))
(assert (x632 x511))
(assert (= x959 (and x672 x180)))
(assert (=> (= 0 x317) (= 0 (div x497 x317))))
(assert (= (x446 (x1127 40 20 (x688 x1256 96) (x688 x355 96))) (x688 x1256 96)))
(assert (= (div x131 79228162514264337593543950336) (x688 x131 96)))
(assert (= (x346 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (x632 x205))
(assert (x632 x919))
(assert (x632 x52))
(assert (=> (= 0 x989) (= 0 (div x318 x989))))
(assert (= (x1127 40 20 (x688 x787 96) (x688 x926 96)) (x346 (x1127 40 20 (x688 x787 96) (x688 x926 96)))))
(assert (x632 x824))
(assert (= x1287 (and x1025 x218)))
(assert (= (=> (and (or (and (not x644) (and (>= x1183 0) (= x196 x1007) (= x730 x645) (= (x610 (- x1187 x645)) x1137) (<= x1137 340282366920938463463374607431768211455) (= (* x107 x1187) x1183) (<= x196 680564733841876926926749214863536422910) (= (div x1183 x196) x645) (= x1137 x1097) (not (> x1137 x1187)) (<= x1183 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x196 (+ x143 x107)) (<= 1 x196) (<= x645 340282366920938463463374607431768211455))) (and (and (>= 340282366920938463463374607431768211455 x434) (not (< x143 x927)) (>= x138 0) (= (* x107 x143) x138) (<= x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (div x138 x338) x434) (= x338 (+ x107 x1187)) (= x1007 x927) (= x730 x434) (>= 340282366920938463463374607431768211455 x927) (= (x610 (- x143 x434)) x927) (>= 680564733841876926926749214863536422910 x338) (>= x338 1) (= x1097 x338)) x644)) (and (>= 340282366920938463463374607431768211455 x143) (= x1187 (x742 x659)) (= (x195 64 x1286 6) x659) (= x143 (x124 x659)) (= (ite (not (> 100 x1187)) (ite (not (> 100 x143)) 1 0) (ite (not (< x1187 100)) 1 0)) x603) (= (= x762 0) x644) (>= 340282366920938463463374607431768211455 x1187) (= x603 1))) x955) x108))
(assert (= (x688 x91 96) (div x91 79228162514264337593543950336)))
(assert (= (and x918 x113) x1037))
(assert (x632 x797))
(assert (x632 x1039))
(assert (x632 x711))
(assert (x632 x1095))
(assert (= (x688 x699 96) (x446 (x1127 40 20 (x688 x699 96) (x688 x821 96)))))
(assert (=> (<= (x688 x1256 96) 10000) (= (x346 (x688 x1256 96)) 0)))
(assert (= x34 (and x329 x741)))
(assert (x632 x1022))
(assert (x632 x386))
(assert (x632 x211))
(assert (=> (<= (x688 x1313 96) 10000) (= (x346 (x688 x1313 96)) 0)))
(assert (= x635 (=> (and (and (= x1274 (x57 x722)) (= (ite (not (> 100 x731)) (ite (not (> 100 x1274)) 1 0) (ite (not (> 100 x731)) 1 0)) x1077) (= (x195 64 x738 6) x722) (= (= x597 0) x59) (= x1077 1) (>= 340282366920938463463374607431768211455 x1274) (= (x826 x722) x731) (<= x731 340282366920938463463374607431768211455)) (or (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x97) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x731 x550))) (<= 1 x450) (not (> x369 x1274)) (<= x225 340282366920938463463374607431768211455) (= x104 x450) (= x369 (x610 (- x1274 x225))) (>= 340282366920938463463374607431768211455 x369) (= x664 x369) (= x225 (div x97 x450)) (< (* x550 x1274) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x97) (= x225 x1205) (= (* x1274 x550) x97) (= x450 (x1270 (+ x731 x550)))) x59) (and (not x59) (and (<= x786 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1274 x550))) (>= 340282366920938463463374607431768211455 x544) (= x664 x810) (not (< x731 x424)) (>= 340282366920938463463374607431768211455 x424) (= (x610 (- x731 x544)) x424) (< (* x731 x550) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x424 x104) (= x544 (div x786 x810)) (= x1205 x544) (<= 1 x810) (= (x1270 (+ x550 x1274)) x810) (<= 0 x786) (= x786 (* x731 x550)))))) x599)))
(assert (x632 x203))
(assert (= (x688 x787 96) (x446 (x1127 40 20 (x688 x787 96) (x688 x926 96)))))
(assert (x632 x737))
(assert (= x1132 (and x869 x65)))
(assert (x632 x117))
(assert (x632 x306))
(assert (> (x195 64 x1286 6) 10000))
(assert (= (x623 (x195 64 x792 6)) x792))
(assert (x632 x696))
(assert (x632 x1296))
(assert (= (x346 115792089237316195423571325291054828791733448040247995807669039) 0))
(assert (= (and x1283 x704) x206))
(assert (x632 x1077))
(assert (x632 x530))
(assert (= x848 (=> (and (or (and x1306 (and (= x1169 x20) (= x1251 (x610 (- x464 x20))) (= x20 (div x945 x321)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x945) (>= 340282366920938463463374607431768211455 x20) (<= 1 x321) (= x785 x1251) (not (< x464 x1251)) (>= 680564733841876926926749214863536422910 x321) (= x321 x324) (= (+ x954 x730) x321) (<= x1251 340282366920938463463374607431768211455) (<= 0 x945) (= (* x730 x464) x945))) (and (and (= x1086 x324) (<= x1059 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211455 x1086) (>= 680564733841876926926749214863536422910 x937) (= x937 (+ x730 x464)) (not (< x954 x1086)) (= x1059 x1169) (<= 0 x930) (<= 1 x937) (<= x930 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x930 (* x954 x730)) (= x785 x937) (= x1059 (div x930 x937)) (= x1086 (x610 (- x954 x1059)))) (not x1306))) (and (= x488 (ite (not (< x954 100)) (ite (not (> 100 x464)) 1 0) (ite (not (> 100 x954)) 1 0))) (= x202 (x195 64 x621 6)) (>= 340282366920938463463374607431768211455 x954) (= x954 (x963 x202)) (= x488 1) (>= 340282366920938463463374607431768211455 x464) (= (= 0 x1000) x1306) (= (x1208 x202) x464))) x1275)))
(assert (x632 x666))
(assert (x632 x692))
(assert (x632 x703))
(assert (=> (>= 10000 (x688 x1039 96)) (= 0 (x346 (x688 x1039 96)))))
(assert (x632 x234))
(assert (= (x688 x624 96) (x375 (x1127 40 20 (x688 x227 96) (x688 x624 96)))))
(assert (x632 x183))
(assert (x632 x1217))
(assert (= 20 (x623 (x1127 40 20 (x688 x1122 96) (x688 x81 96)))))
(assert (x632 x304))
(assert (x632 x525))
(assert (x632 x1164))
(assert (= x13 (and x653 x1226)))
(assert (x632 x74))
(assert (x632 x831))
(assert (= (x688 x116 96) (div x116 79228162514264337593543950336)))
(assert (x632 x697))
(assert (x632 x1141))
(assert (x632 x508))
(assert (< (x195 64 x1286 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (= 0 x212) (= 0 (div x381 x212))))
(assert (x632 x212))
(assert (x632 x743))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x91 96) (x688 x1098 96))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1195 96) (x688 x676 96))))
(assert (x632 x1085))
(assert (= 40 (x845 (x1127 40 20 (x688 x1261 96) (x688 x360 96)))))
(assert (x363 x239))
(assert (x632 x661))
(assert (x632 x273))
(assert (x632 x818))
(assert (not (x328 (x195 64 x139 7))))
(assert (x632 x1005))
(assert (x632 x1093))
(assert (x632 x1080))
(assert (x632 x825))
(assert (x632 x251))
(assert (x363 x1097))
(assert (=> (= 0 (+ x823 x304)) (= 0 (div x838 (+ x304 x823)))))
(assert (x632 x144))
(assert (=> (>= 10000 (x688 x355 96)) (= 0 (x346 (x688 x355 96)))))
(assert (x632 x1090))
(assert (= (x688 x449 96) (div x449 79228162514264337593543950336)))
(assert (= (x623 (x1127 40 20 (x688 x787 96) (x688 x926 96))) 20))
(assert (= (x346 115792089237316195423570985008687907853269984665640564039457584007913129639836) 0))
(assert (x632 x232))
(assert (=> (<= (x688 x837 96) 10000) (= (x346 (x688 x837 96)) 0)))
(assert (x632 x62))
(assert (= (x623 (x1127 40 20 (x688 x253 96) (x688 x1039 96))) 20))
(assert (x632 x278))
(assert (= (x688 x1072 96) (x446 (x1127 40 20 (x688 x1072 96) (x688 x449 96)))))
(assert (x632 x53))
(assert (= (x845 (x195 64 x1130 6)) 64))
(assert (x632 x739))
(assert (= (x446 (x1127 40 20 (x688 x253 96) (x688 x1039 96))) (x688 x253 96)))
(assert (x632 x449))
(assert (= (or x221 x909) x653))
(assert (x632 x94))
(assert (x632 x239))
(assert (x632 x479))
(assert (x632 x189))
(assert (= (=> (= x1 (> x348 0)) (and (=> (and (and (= x888 x796) (= x973 0)) (not x1)) x827) (=> (and x1 (and (and (= (< x820 x36) x1025) (>= 340282366920938463463374607431768211455 x348)) (or (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x796)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x796) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x796) (= x296 (x1270 (+ x347 20))) (= (x1270 (+ 20 x296)) x919) (= (* x820 79228162514264337593543950336) x837) (= x919 x240) (= (x1270 (+ 32 x796)) x347) (> x919 x796) (not (= x796 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x1159 x208) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x796)) (= x208 (x1127 40 20 (x688 x131 96) (x688 x837 96))) (<= x796 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1004 0) (= (* 79228162514264337593543950336 x36) x131)) (not x1025)) (and x1025 (and (< x796 x519) (= x863 (* x36 79228162514264337593543950336)) (= 1 x1004) (= x519 x240) (= x682 x1159) (<= x796 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x796) (= (x1270 (+ 32 x796)) x1112) (= (x1270 (+ x1112 20)) x214) (<= x796 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x796 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x796 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x796 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x682 (x1127 40 20 (x688 x410 96) (x688 x863 96))) (= x519 (x1270 (+ x214 20))) (= x410 (* x820 79228162514264337593543950336))))))) x732))) x991))
(assert (= (=> (and (= x936 (> x36 x820)) (or (and (not x936) (and (= x190 (x1270 (+ 20 x62))) (> x1236 x832) (= x62 (x1270 (+ 32 x832))) (= (* 79228162514264337593543950336 x820) x565) (= x737 x1236) (not (= x832 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x382 (* 79228162514264337593543950336 x36)) (not (= x832 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x832) (= (x1270 (+ x190 20)) x1236) (<= x832 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x832)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x832) (= 0 x1125) (= x798 x378) (= x378 (x1127 40 20 (x688 x382 96) (x688 x565 96))))) (and x936 (and (= x798 x790) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x832) (= (x1270 (+ x744 20)) x247) (<= x832 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 1 x1125) (not (= x832 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1127 40 20 (x688 x549 96) (x688 x15 96)) x790) (not (= x832 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= (x1270 (+ x832 32)) x1253) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x832)) (= (* 79228162514264337593543950336 x36) x15) (= (* 79228162514264337593543950336 x820) x549) (< x832 x247) (<= x832 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1270 (+ x1253 20)) x744) (= x737 x247))))) x114) x701))
(assert (x632 x455))
(assert (= 0 (x346 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x632 x878))
(assert (x632 x980))
(assert (x328 79228162514264337593543950336))
(assert (x632 x1305))
(assert (x632 x492))
(assert (x632 x552))
(assert (=> (= 0 x640) (= (div x303 x640) 0)))
(assert (x632 x140))
(assert (x632 x1182))
(assert (x632 x487))
(assert (x632 x1181))
(assert (x632 x1043))
(assert (x632 x345))
(assert (> (x1127 40 20 (x688 x486 96) (x688 x1088 96)) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1122 96) (x688 x81 96))))
(assert (x632 x1233))
(assert (= 1 (x446 (x195 64 x191 1))))
(assert (=> (= x160 0) (= 0 (div x740 x160))))
(assert (x632 x33))
(assert (x632 x598))
(assert (x632 x447))
(assert (x632 x1028))
(assert (x632 x125))
(assert (x632 x216))
(assert (not (x328 (x195 64 x94 x841))))
(assert (= (x346 1000000000000000) 0))
(assert (x632 x476))
(assert (=> (<= (x688 x565 96) 10000) (= (x346 (x688 x565 96)) 0)))
(assert (= (=> (and (or (and (not x766) (and (= x478 (div x474 x117)) (<= x117 115792089237316195423571325291054828791733448040247995807669039) (= x1228 (ite (or (and (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x940)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x940)) (> x940 x339))) 1 0)) (= (x610 (- x515 x736)) x940) (= (+ 1000000000000000 x1043) x736) (= x474 (mod (* x1290 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x962 x400) x515) (= x400 (x1270 (+ x478 x1149))) (= x266 (mod (* x144 x736) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 1 x117) (>= x400 1) (= x1290 (div x266 (+ x736 x304))) (= x117 (+ x1290 x258)) (= (mod (* x797 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x962))) (and (= x1228 0) x766)) (and (>= 57896044618658097711785492504343953926975274699741220483192166611388333031422 x897) (= (x1270 (+ x1149 x245)) x98) (= x245 (div x211 x605)) (= x897 (+ x304 x1043)) (= (mod (* x144 x1043) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x386) (= (x1270 (+ x418 x258)) x605) (= (x610 (- x1196 x1043)) x339) (= (div x386 x897) x418) (<= 1 x605) (<= 1 x98) (= x260 (x1270 (+ x1110 x209))) (= (mod (* x500 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x211) (= x1263 (mod (* x245 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1196 (div x1263 x98)) (= x766 (or (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x339 100) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339))))) (= x1043 (x688 x260 1)) (<= 1 x897))) x1260) x383))
(assert (x632 x861))
(assert (x371 x1097))
(assert (x632 x829))
(assert (x632 x145))
(assert (x632 x549))
(assert (= (x845 (x1127 40 20 (x688 x1072 96) (x688 x449 96))) 40))
(assert (x371 x1245))
(assert (x632 x380))
(assert (= 40 (x845 (x1127 40 20 (x688 x842 96) (x688 x1148 96)))))
(assert (= (x688 x1098 96) (div x1098 79228162514264337593543950336)))
(assert (not (x328 (x1127 40 20 (x688 x787 96) (x688 x926 96)))))
(assert (= x634 (=> (and (= (= x16 0) x412) (or (and (and (= x431 x490) (= x1092 x234)) (not x412)) (and (and (= x1092 x431) (= x558 x234)) x412))) x581)))
(assert (= 40 (x845 (x1127 40 20 (x688 x699 96) (x688 x821 96)))))
(assert (x632 x127))
(assert (x632 x160))
(assert (= (and x931 (not x1255)) x685))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x139 7)))
(assert (x632 x1274))
(assert (x632 x36))
(assert (x632 x374))
(assert (x632 x534))
(assert (= (x346 (x195 64 x1130 6)) (x195 64 x1130 6)))
(assert (x632 x593))
(assert (x632 x184))
(assert (= (and (not x849) x570) x921))
(assert (= (x688 x227 96) (div x227 79228162514264337593543950336)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x787 96) (x688 x926 96))))
(assert (< 10000 (x1127 40 20 (x688 x1217 96) (x688 x207 96))))
(assert (> (x1127 40 20 (x688 x1195 96) (x688 x676 96)) 10000))
(assert (=> (<= (x688 x787 96) 10000) (= (x346 (x688 x787 96)) 0)))
(assert (= (x623 (x195 64 x94 x1138)) x94))
(assert (x632 x887))
(assert (= x308 (and (not x869) x65)))
(assert (> (x1127 40 20 (x688 x699 96) (x688 x821 96)) 10000))
(assert (=> (<= (x688 x91 96) 10000) (= (x346 (x688 x91 96)) 0)))
(assert (x632 x903))
(assert (not (x328 (x1127 40 20 (x688 x1072 96) (x688 x449 96)))))
(assert (x632 x544))
(assert (= x1248 (=> (and (and (= x1273 (> x162 0)) (= (x610 (- x1056 x36)) x162)) (or (and (and (or (and x849 (and (= x820 x988) (= x1056 x972))) (and (and (= x1056 x820) (= x972 x278)) (not x849))) (and (= x561 (x610 (- x988 x36))) (= x849 (< 0 x561)))) x1273) (and (and (= x820 x278) (= x988 x972)) (not x1273)))) x701)))
(assert (=> (>= 10000 (x688 x549 96)) (= (x346 (x688 x549 96)) 0)))
(assert (= (or x1119 x1084 x454) x204))
(assert (=> (>= 10000 x1056) (= (x346 x1056) 0)))
(assert (x632 x245))
(assert (x632 x2))
(assert (x632 x799))
(assert (x632 x381))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1261 96) (x688 x360 96))))
(assert (x632 x973))
(assert (x632 x1312))
(assert (= x359 (=> (and (and (= (ite (not (< x239 100)) (ite (not (> 100 x85)) 1 0) (ite (not (> 100 x239)) 1 0)) x33) (= x33 1) (= x983 (x910 340282366920938463463374607431768211455 x239)) (= (x910 340282366920938463463374607431768211455 x85) x1282) (= x917 (< x972 x820))) (or (and x917 (and (= x463 (x1127 40 20 (x688 x1195 96) (x688 x676 96))) (= (* x820 79228162514264337593543950336) x676) (= x1006 (x1270 (+ 20 x261))) (<= x240 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x240 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x240 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x762 1) (= (x1270 (+ 32 x240)) x1003) (= x463 x1286) (<= x240 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639864 x240)) (= (x1270 (+ 20 x1003)) x261) (= x133 x1006) (= (* x972 79228162514264337593543950336) x1195) (< x240 x1006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x240))) (and (not x917) (and (= (x1270 (+ x228 20)) x514) (= x1286 x745) (= (* 79228162514264337593543950336 x972) x395) (not (= x240 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x240 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (not (= x240 115792089237316195423570985008687907853269984665640564039457584007913129639864)) (= x228 (x1270 (+ x589 20))) (<= x240 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x589 (x1270 (+ 32 x240))) (<= x240 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x745 (x1127 40 20 (x688 x1117 96) (x688 x395 96))) (<= x240 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 79228162514264337593543950336 x820) x1117) (= x133 x514) (= 0 x762) (< x240 x514))))) x108)))
(assert (= x341 (and x38 x766)))
(assert (x632 x24))
(assert (x632 x227))
(assert (x632 x102))
(assert (=> (= (+ x694 x304) 0) (= 0 (div x1182 (+ x694 x304)))))
(assert (=> (>= 10000 (x688 x449 96)) (= (x346 (x688 x449 96)) 0)))
(assert (x632 x656))
(assert (x632 x750))
(assert (x371 x67))
(assert (x632 x579))
(assert (= (x623 (x195 64 x191 1)) x191))
(assert (x632 x1013))
(assert (x632 x214))
(assert (= (x845 (x195 64 x139 7)) 64))
(assert (not (x328 (x1127 40 20 (x688 x1195 96) (x688 x676 96)))))
(assert (> (x195 64 x94 x879) 10000))
(assert (= (x688 x606 1) (div x606 2)))
(assert (x632 x881))
(assert (x632 x595))
(assert (= x686 (=> (and (or (and (and (= x396 x258) (= x542 x500)) x1255) (and (not x1255) (and (= x542 x258) (= x396 x500)))) (and (= (x768 x226) x396) (> x1049 x946) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x946)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x946) (<= x396 340282366920938463463374607431768211455) (= x226 (x195 64 x1291 6)) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x542 340282366920938463463374607431768211455) (= x542 (x1223 x226)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x946) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x946)) (= (x1270 (+ 64 x946)) x1049) (= x1255 (= x306 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x946)))) x777)))
(assert (=> (>= 10000 (x688 x1217 96)) (= (x346 (x688 x1217 96)) 0)))
(assert (x632 x694))
(assert (x632 x916))
(assert (= 64 (x845 (x195 64 x191 1))))
(assert (= (=> (= x536 (= 0 x587)) (and (=> (and (and (= (x610 (- x1056 x278)) x1277) (= x647 (> x1277 0))) (not x536)) (and (=> x647 x1023) (=> (and (not x647) (and (= x25 (< 0 x175)) (= (x610 (- x988 x36)) x175))) (and (=> (and (not x25) (and (= x278 x820) (= x972 x140))) x701) (=> x25 x1023))))) (=> (and (and (= 0 x17) (= x832 x534)) x536) x230))) x1052))
(assert (= 20 (x623 (x1127 40 20 (x688 x1303 96) (x688 x491 96)))))
(assert (= (x375 (x1127 40 20 (x688 x549 96) (x688 x15 96))) (x688 x15 96)))
(assert (= (x446 (x1127 40 20 (x688 x486 96) (x688 x1088 96))) (x688 x486 96)))
(assert (= (x346 (x1127 40 20 (x688 x410 96) (x688 x863 96))) (x1127 40 20 (x688 x410 96) (x688 x863 96))))
(assert (x632 x811))
(assert (=> (= 0 (+ x300 x304)) (= 0 (div x489 (+ x300 x304)))))
(assert (x632 x709))
(assert (= (and (not x766) x38) x480))
(assert (x632 x1069))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x974 6)))
(assert (not (x328 (x1127 40 20 (x688 x382 96) (x688 x565 96)))))
(assert (= (x446 (x195 64 x1286 6)) 6))
(assert (x632 x1198))
(assert (> (x195 64 x621 6) 10000))
(assert (= (and x1218 x51) x981))
(assert (x632 x396))
(assert (x632 x654))
(assert (= 6 (x446 (x195 64 x1291 6))))
(assert (= (and x683 x716) x518))
(assert (= x1289 (=> (and (and (= x691 (mod (* x136 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1147 (div x451 x1259)) (= (div x691 x772) x1232) (>= x772 1) (= x1209 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x800) (and (< x800 100) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x800) true)))) (<= x772 57896044618658097711785492504343953926975274699741220483192166611388333031422) (= x1192 (x1270 (+ x593 x612))) (= (mod (* x500 x1232) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x451) (= (x1270 (+ x1147 x1149)) x1243) (>= x1243 1) (= (+ x304 x136) x772) (= (div x990 x1243) x669) (>= x1259 1) (= (x688 x1192 1) x136) (= x1259 (x1270 (+ x1232 x258))) (= x800 (x610 (- x669 x136))) (= (mod (* x1147 x797) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x990)) (or (and (and (= x453 (mod (* x270 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x1175 115792089237316195423571325291054828791733448040247995807669039) (= x492 (x1270 (+ x327 x1149))) (= (div x453 x1175) x327) (<= 1 x1175) (= (+ x136 1000000000000000) x300) (<= 1 x492) (= (ite (or (and (= (<= x295 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x800)) (> x295 x800)) (and (> x800 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x295))) 1 0) x642) (= x1019 (mod (* x797 x327) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x1019 x492) x377) (= x270 (div x489 (+ x300 x304))) (= (x610 (- x377 x300)) x295) (= x489 (mod (* x144 x300) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (+ x270 x258) x1175)) (not x1209)) (and (= 0 x642) x1209))) x1058)))
(assert (x632 x867))
(assert (x632 x1117))
(assert (x632 x172))
(assert (= (div x179 79228162514264337593543950336) (x688 x179 96)))
(assert (x632 x1158))
(assert (x632 x961))
(assert (x632 x32))
(assert (not (x328 (x1127 40 20 (x688 x1217 96) (x688 x207 96)))))
(assert (x632 x240))
(assert (x632 x717))
(assert (= x94 (x623 (x195 64 x94 0))))
(assert (x632 x638))
(assert (< 10000 (x1127 40 20 (x688 x179 96) (x688 x177 96))))
(assert (x632 x252))
(assert (= 6 (x446 (x195 64 x1130 6))))
(assert (x632 x255))
(assert (x632 x1133))
(assert (< (x195 64 x738 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x349))
(assert (x632 x1053))
(assert (= (and (not x936) x1222) x301))
(assert (= x577 (=> (and (and (= (x1270 (+ x219 64)) x1144) (not (= x219 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x1176 (= 0 x700)) (<= x219 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1281 1) (not (= x219 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x219 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x219 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1270 (+ x219 32)) x1230) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x219) (= x700 (x361 x219)) (< x219 x1144)) (or (not x1176) (and x1176 (and (<= 1 x1020) (= x1020 (x957 x883)) (= x1309 1))))) x808)))
(assert (x632 x347))
(assert (x632 x940))
(assert (x632 x198))
(assert (x632 x729))
(assert (x632 x296))
(assert (= x576 (and (not x1051) x877)))
(assert (not (x328 (x195 64 x445 6))))
(assert (x632 x460))
(assert (=> (<= (x688 x237 96) 10000) (= (x346 (x688 x237 96)) 0)))
(assert (x632 x67))
(assert (x632 x660))
(assert (=> (= 0 x1244) (= 0 (div x943 x1244))))
(assert (x632 x228))
(assert (not (x328 (x1127 40 20 (x688 x253 96) (x688 x1039 96)))))
(assert (x632 x1065))
(assert (x632 x972))
(assert (= (x688 x565 96) (x375 (x1127 40 20 (x688 x382 96) (x688 x565 96)))))
(assert (= (=> (and (or (and (not x1184) (and (= x490 x1241) (= x558 x493))) (and (and (= x558 x805) (= x490 x493)) x1184)) (= (= 0 x1134) x1184)) x129) x1310))
(assert (x632 x1091))
(assert (= x934 (=> (and (= x888 x1157) (= (x427 x70) x172) (= (x195 64 x1220 1) x70) (= x973 x819) (= x380 (x1270 (+ x819 x172))) (not (>= (+ x172 x819) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x827)))
(assert (=> (= x772 0) (= 0 (div x691 x772))))
(assert (x632 x922))
(assert (x632 x201))
(assert (x632 x731))
(assert (= (x623 (x195 64 x1286 6)) x1286))
(assert (= (x688 x549 96) (x446 (x1127 40 20 (x688 x549 96) (x688 x15 96)))))
(assert (=> (>= 10000 (x688 x227 96)) (= 0 (x346 (x688 x227 96)))))
(assert (=> (= 0 x725) (= (div x1105 x725) 0)))
(assert (= (or x256 x913) x115))
(assert (= (x688 x1117 96) (div x1117 79228162514264337593543950336)))
(assert (= (x346 (x1127 40 20 (x688 x1261 96) (x688 x360 96))) (x1127 40 20 (x688 x1261 96) (x688 x360 96))))
(assert (=> (<= (x688 x676 96) 10000) (= 0 (x346 (x688 x676 96)))))
(assert (x632 x989))
(assert (= x1074 (and x681 x758)))
(assert (= (x195 64 x621 6) (x346 (x195 64 x621 6))))
(assert (x632 x219))
(assert (x363 x695))
(assert (x632 x1171))
(assert (x632 x1214))
(assert (x632 x927))
(assert (= (x623 (x1127 40 20 (x688 x549 96) (x688 x15 96))) 20))
(assert (x632 x740))
(assert (not (x328 (x195 64 x94 x879))))
(assert (> (x1127 40 20 (x688 x787 96) (x688 x926 96)) 10000))
(assert (= 20 (x623 (x1127 40 20 (x688 x227 96) (x688 x624 96)))))
(assert (x328 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (not (x328 (x1127 40 20 (x688 x549 96) (x688 x15 96)))))
(assert (x632 x1277))
(assert (=> (= (+ x166 x304) 0) (= 0 (div x690 (+ x304 x166)))))
(assert (= (x845 (x195 64 x1159 6)) 64))
(assert (x632 x257))
(assert (= (or x807 x157) x38))
(assert (= 20 (x623 (x1127 40 20 (x688 x382 96) (x688 x565 96)))))
(assert (= (x375 (x1127 40 20 (x688 x1217 96) (x688 x207 96))) (x688 x207 96)))
(assert (= (x346 3343790536) 0))
(assert (x632 x61))
(assert (x632 x1110))
(assert (= (x845 (x195 64 x94 x1138)) 64))
(assert (x632 x1204))
(assert (x632 x364))
(assert (= x949 (or x971 x301)))
(assert (x632 x451))
(assert (x632 x520))
(assert (< 10000 (x195 64 x1159 6)))
(assert (< 10000 (x195 64 x1291 6)))
(assert (not (x328 (x1127 40 20 (x688 x179 96) (x688 x177 96)))))
(assert (= (div x565 79228162514264337593543950336) (x688 x565 96)))
(assert (> (x195 64 x1130 6) 10000))
(assert (x632 x372))
(assert (x632 x727))
(assert (= x65 (or x13 x862)))
(assert (x632 x1251))
(assert (= 7 (x446 (x195 64 x139 7))))
(assert (x632 x785))
(assert (= (=> (and (= x869 (= x1069 0)) (or (and (and (= x916 x238) (= x657 x279)) x869) (and (not x869) (and (= x279 x916) (= x257 x657))))) x567) x458))
(assert (x632 x1088))
(assert (not (x328 (x195 64 x738 6))))
(assert (=> (= x492 0) (= 0 (div x1019 x492))))
(assert (= x856 (and x1209 x389)))
(assert (x632 x1116))
(assert (x632 x821))
(assert (= (x845 (x1127 40 20 (x688 x131 96) (x688 x837 96))) 40))
(assert (x632 x1263))
(assert (= (x688 x756 1) (div x756 2)))
(assert (x632 x29))
(assert (x632 x714))
(assert (x632 x728))
(assert (= (x346 (x195 64 x1220 1)) (x195 64 x1220 1)))
(assert (x632 x820))
(assert (x632 x122))
(assert (x632 x21))
(assert (x632 x498))
(assert (= (x623 (x1127 40 20 (x688 x91 96) (x688 x1098 96))) 20))
(assert (x632 x513))
(assert (= x767 (and x439 (not x1273))))
(assert (not (x328 (x1127 40 20 (x688 x227 96) (x688 x624 96)))))
(assert (= (x623 (x1127 40 20 (x688 x179 96) (x688 x177 96))) 20))
(assert (x632 x557))
(assert (= (=> (and (or (and (and (= x1005 x789) (= x460 x1186)) (not x1213)) (and x1213 (and (= x709 x789) (= x1186 x1005)))) (= x1213 (= x374 0))) x351) x287))
(assert (= (x195 64 x738 6) (x346 (x195 64 x738 6))))
(assert (x632 x1259))
(assert (= x841 (x446 (x195 64 x94 x841))))
(assert (= x64 (and x441 (not x310))))
(assert (x632 x764))
(assert (x632 x547))
(assert (x632 x369))
(assert (= (=> (and (or (and (not x1081) (and (= x1185 x52) (= x1312 0))) (and x1081 (and (<= x1105 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x725 1) (= x364 (div x1105 x725)) (= x1185 x52) (<= x725 340282366920938463463374607431768211455) (<= 0 x1105) (= (* x1205 x884) x1105) (= (ite (< 100 x364) x364 0) x1312)))) (= x1081 (= 0 (ite (< x884 100) (ite (< x884 100) 1 0) (ite (< x725 100) 1 0))))) x482) x297))
(assert (= (x623 (x1127 40 20 (x688 x1072 96) (x688 x449 96))) 20))
(assert (x632 x81))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x191 0)))
(assert (x632 x1245))
(assert (> (x1127 40 20 (x688 x1122 96) (x688 x81 96)) 10000))
(assert (= x960 (and x25 x422)))
(assert (x632 x612))
(assert (=> (= 0 (+ x426 x304)) (= (div x1319 (+ x304 x426)) 0)))
(assert (x632 x1210))
(assert (= x36 (x623 (x195 64 x36 x366))))
(assert (x632 x1192))
(assert (x363 x785))
(assert (x632 x962))
(assert (x632 x838))
(assert (x632 x402))
(assert (x632 x1202))
(assert (x632 x229))
(assert (x632 x769))
(assert (not (x328 (x195 64 x1291 6))))
(assert (x632 x49))
(assert (= (x688 x624 96) (div x624 79228162514264337593543950336)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x445 6)))
(assert (= (x688 x491 96) (div x491 79228162514264337593543950336)))
(assert (x632 x591))
(assert (x632 x377))
(assert (x632 x965))
(assert (= (x346 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x632 x408))
(assert (= (x446 (x195 64 x1220 1)) 1))
(assert (x632 x863))
(assert (= 6 (x446 (x195 64 x792 6))))
(assert (not (x328 (x1127 40 20 (x688 x1303 96) (x688 x491 96)))))
(assert (= (=> (and (= x534 x888) (= x973 x17)) x230) x827))
(assert (= x194 (not (and (= x782 false) (= x405 false) (= false x721) (= 1 x1121) (= x958 false) (= false x1114) (= true x783)))))
(assert (x632 x968))
(assert (= x243 (and x794 (not x1140))))
(assert (=> (>= 10000 x468) (= 0 (x346 x468))))
(assert (=> (= 0 x220) (= (div x575 x220) 0)))
(assert (= x389 (or x779 x438)))
(assert (= (=> (and (= (< 0 x54) x765) (= x54 (x610 (- x1056 x36)))) (and (=> x765 x1248) (=> (and (not x765) (and (= x1035 (x610 (- x988 x278))) (= (< 0 x1035) x537))) (and (=> x537 x1248) (=> (and (not x537) (and (= x140 x820) (= x972 x278))) x701))))) x1023))
(assert (x632 x382))
(assert (x632 x159))
(assert (x632 x143))
(assert (> (x1127 40 20 (x688 x861 96) (x688 x237 96)) 10000))
(assert (=> (= x914 0) (= 0 (div x1307 x914))))
(assert (x632 x1003))
(assert (= x27 (and (not x1268) x646)))
(assert (=> (= 0 x19) (= (div x684 x19) 0)))
(assert (x632 x898))
(assert (x632 x1170))
(assert (= (x623 (x1127 40 20 (x688 x1195 96) (x688 x676 96))) 20))
(assert (x632 x914))
(assert (= (and (not x536) x204) x776))
(assert (x632 x415))
(assert (=> (= 0 x618) (= (div x557 x618) 0)))
(assert (= (x688 x1148 96) (div x1148 79228162514264337593543950336)))
(assert (x632 x1000))
(assert (= x794 (or x856 x134)))
(assert (=> (= 0 x385) (= (div x126 x385) 0)))
(assert (=> (= 0 x349) (= (div x183 x349) 0)))
(assert (x632 x91))
(assert (x632 x1097))
(assert (x632 x1125))
(assert (x632 x1185))
(assert (x632 x489))
(assert (x632 x988))
(assert (= (x623 (x195 64 x621 6)) x621))
(assert (x632 x847))
(assert (=> (= 0 x400) (= 0 (div x962 x400))))
(assert (= (div x81 79228162514264337593543950336) (x688 x81 96)))
(assert (x632 x1288))
(assert (= (or x332 x429) x1021))
(assert (x632 x1256))
(assert (= (x623 (x195 64 x191 0)) x191))
(assert (x632 x668))
(assert (x632 x602))
(assert (x632 x1261))
(assert (x632 x800))
(assert (x632 x1112))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x1217 96) (x688 x207 96))))
(assert (= (x623 (x1127 40 20 (x688 x699 96) (x688 x821 96))) 20))
(assert (=> (= 0 x117) (= (div x474 x117) 0)))
(assert (x632 x1266))
(assert (= 0 (x446 (x195 64 x94 0))))
(assert (x632 x1027))
(assert (x632 x1004))
(assert (x632 x137))
(assert (= x862 (and x653 (not x1226))))
(assert (x632 x303))
(assert (x632 x645))
(assert (x632 x139))
(assert (= 40 (x845 (x1127 40 20 (x688 x1195 96) (x688 x676 96)))))
(assert (=> (= x344 0) (= 0 (div x367 x344))))
(assert (= (x1127 40 20 (x688 x549 96) (x688 x15 96)) (x346 (x1127 40 20 (x688 x549 96) (x688 x15 96)))))
(assert (x632 x1244))
(assert (= x716 (or x1194 x213 x265)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x699 96) (x688 x821 96))))
(assert (x632 x443))
(assert (x632 x330))
(assert (x632 x151))
(assert (= x987 (and x538 x896)))
(assert (= (x688 x821 96) (div x821 79228162514264337593543950336)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x253 96) (x688 x1039 96))))
(assert (x632 x271))
(assert (x632 x497))
(assert (x632 x784))
(assert (x632 x853))
(assert (x632 x726))
(assert (= (x688 x863 96) (x375 (x1127 40 20 (x688 x410 96) (x688 x863 96)))))
(assert (= (and (not x770) x556) x188))
(assert (x632 x85))
(assert (x632 x1149))
(assert (x632 x787))
(assert (= x893 (or x121 x27)))
(assert (x632 x733))
(assert (= (x688 x1072 96) (div x1072 79228162514264337593543950336)))
(assert (= (and x1109 (not x765)) x1087))
(assert (=> (= 0 x416) (= 0 (div x229 x416))))
(assert (= (and x325 x1213) x356))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x1130 6)))
(assert (= x808 (=> (and (or (and (not x538) (and (= x387 (x222 x966)) (>= x1047 32) (= x387 1) (= (x1270 (+ x219 32)) x966) (= x1047 (x361 x219)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1047))) (and x538 (= x1011 1))) (and (= (ite x538 1 0) x1011) (= (x361 x219) x1164) (= x538 (= 0 x1164)))) x194)))
(assert (= (div x1192 2) (x688 x1192 1)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x792 6)))
(assert (= (=> (and (= (= x1228 0) x553) (or (and (and (= x593 x1043) (= x612 x209)) x553) (and (not x553) (and (= x1110 x593) (= x612 x1043))))) x1289) x1260))
(assert (x632 x269))
(assert (= x1161 (or x643 x569)))
(assert (x632 x755))
(assert (= x706 (and x681 (not x758))))
(assert (=> (= x1262 0) (= (div x860 x1262) 0)))
(assert (x632 x603))
(assert (x632 x1063))
(assert (=> (>= 10000 (x688 x15 96)) (= 0 (x346 (x688 x15 96)))))
(assert (x632 x823))
(assert (x632 x950))
(assert (x363 x1245))
(assert (= 64 (x845 (x195 64 x94 x48))))
(assert (=> (>= 10000 x139) (= (x346 x139) 0)))
(assert (= (x1127 40 20 (x688 x1256 96) (x688 x355 96)) (x346 (x1127 40 20 (x688 x1256 96) (x688 x355 96)))))
(assert (x632 x926))
(assert (x632 x607))
(assert (= (x688 x410 96) (x446 (x1127 40 20 (x688 x410 96) (x688 x863 96)))))
(assert (x632 x7))
(assert (= (x195 64 x191 0) (x346 (x195 64 x191 0))))
(assert (= (=> (and (or (and (and (= x846 (x195 64 x94 0)) (= (x195 64 x94 0) x1042) (= x614 76450787359836037641860180984291677749980919077056822294353438043884394381312) (>= x170 1) (= 68 x1151) (= false x648) (= x173 x588) (= false x1131) (= x809 (x1270 (+ x420 x181))) (= x472 x181) (= x1170 2835717307) (>= 1461501637330902918203684832716283019655932542975 x883) (= false x834) (= x191 x173) (>= x883 1) (<= x415 127) (= (x610 (- x703 x181)) x705) (= (x957 x812) x170) (not (< x703 x705)) (= x372 x472) (= false x425) (>= 127 x415) (= x617 (x195 64 x191 0)) (= x883 x812) (not (< x809 x420)) (= (x1033 x617) x420) (= x703 (x1061 x846)) (not (> x181 x703)) (= 32 x156) (= 1 x530)) (not x683)) (and (and (= false x920) (= (x50 x95) x881) (not (> x181 x881)) (= x153 2835717307) (= x181 x511) (= x447 x191) (= x448 (x610 (- x881 x181))) (not (< x452 x942)) (= x993 1) (= x96 (x195 64 x94 0)) (= (x957 x461) x898) (= (x1270 (+ x181 x942)) x452) (<= 1 x898) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x751) (= x61 x511) (= 32 x156) (= x447 x1079) (= false x1297) (= (x1152 x14) x942) (= 68 x1317) (>= 127 x192) (= x95 (x195 64 x94 0)) (= (x195 64 x191 0) x14) (>= 127 x192) (not (> x448 x881)) (= x316 false) (= x398 false)) x683)) (and (= x52 x323) (= (x1270 (+ x199 64)) x868) (= x294 (x1270 (+ 32 x199))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x323) (= 0 x780) (= (+ 76450787359836037641860180984291677749980919077056822294353438043884394381312 x49) x151) x886 (= x199 (x1270 (+ 36 x323))) (= x252 (x932 x883)) (< x323 x868) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x868)) (not (= x323 115792089237316195423570985008687907853269984665640564039457584007913129639836)) (not (= x868 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x868)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x868) (= x996 (x1270 (+ x1193 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639836 x323)) (= x607 (x1270 (+ 32 x323))) (= x1071 (x610 (- x868 x323))) (= x127 (x933 x323)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x323) (<= x868 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x248 x252) (= x697 0) (= x49 (x910 26959946667150639794667015087019630673637144422540572481103610249215 x1057)) (= (x1270 (+ 64 x868)) x219) (= 68 x127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x323) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x868) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639836 x323)) (= x1193 (x1270 (+ 32 x323))) (= (= x461 x883) x683) (> x219 x868) (= x506 (x390 x94)) (= x712 (x610 (- x1071 32))) (= x1057 (x388 x607)) (= (= x1312 0) x886))) x577) x482))
(assert (x632 x618))
(assert (= x677 (and x1294 x1306)))
(assert (x632 x521))
(assert (= x879 (x446 (x195 64 x94 x879))))
(assert (= (x845 (x1127 40 20 (x688 x179 96) (x688 x177 96))) 40))
(assert (> (x195 64 x139 7) 10000))
(assert (=> (= x897 0) (= (div x386 x897) 0)))
(assert (= 40 (x845 (x1127 40 20 (x688 x1122 96) (x688 x81 96)))))
(assert (= (x623 (x1127 40 20 (x688 x486 96) (x688 x1088 96))) 20))
(assert (x632 x519))
(assert (= x1291 (x623 (x195 64 x1291 6))))
(assert (= x1222 (or x693 x767 x921 x620 x342)))
(assert (= (div x837 79228162514264337593543950336) (x688 x837 96)))
(assert (x632 x466))
(assert (= (or x174 x655) x679))
(assert (x632 x624))
(assert (=> (= x1115 0) (= 0 (div x611 x1115))))
(assert (x632 x338))
(assert (x632 x1299))
(assert (x632 x982))
(assert (x632 x1272))
(assert (=> (= x184 0) (= (div x696 x184) 0)))
(assert (x632 x592))
(assert (x632 x1319))
(assert (= x169 (=> (and (and (not (= x76 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x76 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x830 340282366920938463463374607431768211455) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x76) (<= x510 340282366920938463463374607431768211455) (<= x76 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1223 x467) x830) (= (x195 64 x974 6) x467) (= x774 (x1270 (+ 64 x76))) (not (= x76 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (> x774 x76) (= x510 (x768 x467)) (= (= x662 0) x573) (not (= x76 115792089237316195423570985008687907853269984665640564039457584007913129639872))) (or (and (and (= x272 x830) (= x510 x914)) (not x573)) (and (and (= x272 x510) (= x914 x830)) x573))) x912)))
(assert (x632 x774))
(assert (x632 x751))
(assert (x632 x293))
(assert (x632 x491))
(assert (x632 x63))
(assert (= (x845 (x195 64 x445 6)) 64))
(assert (=> (= 0 x178) (= 0 (div x979 x178))))
(assert (< 10000 (x1127 40 20 (x688 x1261 96) (x688 x360 96))))
(assert (x632 x387))
(assert (= (x446 (x1127 40 20 (x688 x131 96) (x688 x837 96))) (x688 x131 96)))
(assert (x632 x676))
(assert (x632 x1072))
(assert (=> (= 0 x810) (= 0 (div x786 x810))))
(assert (= (x688 x1039 96) (div x1039 79228162514264337593543950336)))
(assert (x632 x1029))
(assert (x632 x947))
(assert (x632 x1015))
(assert (x632 x1180))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x410 96) (x688 x863 96))))
(assert (x632 x500))
(assert (= (x688 x787 96) (div x787 79228162514264337593543950336)))
(assert (= 20 (x623 (x1127 40 20 (x688 x131 96) (x688 x837 96)))))
(assert (x632 x1313))
(assert (x632 x650))
(assert (= 40 (x845 (x1127 40 20 (x688 x1217 96) (x688 x207 96)))))
(assert (x363 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x632 x1122))
(assert (x632 x1228))
(assert (=> (<= (x688 x1303 96) 10000) (= (x346 (x688 x1303 96)) 0)))
(assert (x632 x267))
(assert (= (=> (and (and (= (div x1266 x436) x203) (= x1266 (mod (* x760 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1270 (+ x258 x203)) x184) (= x436 (+ x304 x760)) (= x965 (mod (* x797 x714) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x688 x42 1) x760) (= (div x696 x184) x714) (<= 1 x184) (= (x610 (- x1120 x760)) x525) (= (x1270 (+ x234 x431)) x42) (= x696 (mod (* x500 x203) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 1 x436) (<= 1 x831) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x525) (and (> 100 x525) (= true (<= x525 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1283) (= (div x965 x831) x1120) (= (x1270 (+ x714 x1149)) x831) (<= x436 57896044618658097711785492504343953926975274699741220483192166611388333031422)) (or (and (= 0 x335) x1283) (and (and (= x335 (ite (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x525) (<= x1065 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1065 x525)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x525) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1065))) 1 0)) (<= 1 x1314) (= x922 (div x1032 x1314)) (= (+ 1000000000000000 x760) x166) (= x220 (+ x258 x268)) (= (mod (* x166 x144) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x690) (= x1032 (mod (* x797 x847) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= 1 x220) (= (x1270 (+ x847 x1149)) x1314) (= x847 (div x575 x220)) (= (mod (* x268 x500) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x575) (<= x220 115792089237316195423571325291054828791733448040247995807669039) (= x1065 (x610 (- x922 x166))) (= x268 (div x690 (+ x304 x166)))) (not x1283)))) x564) x581))
(assert (= (x446 (x195 64 x191 0)) 0))
(assert (= (=> (and (or (and (and (<= x773 340282366920938463463374607431768211455) (= (x610 (- x112 x773)) x1234) (= x970 (* x348 x112)) (= x107 x773) (= (+ x348 x280) x407) (<= 1 x407) (= x85 x407) (= x239 x1234) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970) (= (div x970 x407) x773) (<= x407 680564733841876926926749214863536422910) (>= 340282366920938463463374607431768211455 x1234) (<= 0 x970) (not (< x112 x1234))) (not x1051)) (and x1051 (and (= x236 (* x348 x280)) (<= x41 340282366920938463463374607431768211455) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x236) (= (div x236 x1219) x951) (= (x610 (- x280 x951)) x41) (>= x236 0) (= x951 x107) (= x239 x1219) (<= x951 340282366920938463463374607431768211455) (= x1219 (+ x348 x112)) (not (> x41 x280)) (<= 1 x1219) (= x41 x85) (<= x1219 680564733841876926926749214863536422910)))) (and (= x1271 (ite (not (> 100 x112)) (ite (not (< x280 100)) 1 0) (ite (not (> 100 x112)) 1 0))) (= x292 (x195 64 x1159 6)) (<= x280 340282366920938463463374607431768211455) (= x112 (x768 x292)) (>= 340282366920938463463374607431768211455 x112) (= (x1223 x292) x280) (= (= 0 x1004) x1051) (= x1271 1))) x359) x732))
(assert (x632 x472))
(assert (x632 x423))
(assert (x632 x699))
(assert (x328 2835717307))
(assert (< 10000 (x195 64 x36 x366)))
(assert (x632 x437))
(assert (= (div x177 79228162514264337593543950336) (x688 x177 96)))
(assert (x632 x1193))
(assert (= (x688 x1098 96) (x375 (x1127 40 20 (x688 x91 96) (x688 x1098 96)))))
(assert (= (or x687 x111) x704))
(assert (x328 115792089237316195423571325291054828791733448040247995807669039))
(assert (= (or x1197 x206) x952))
(assert (x632 x400))
(assert (x632 x614))
(assert (= (div x1122 79228162514264337593543950336) (x688 x1122 96)))
(assert (= (or x685 x1102) x1054))
(assert (= (div x587 4) (x688 x587 2)))
(assert (x328 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (div x699 79228162514264337593543950336) (x688 x699 96)))
(assert (x632 x1242))
(assert (x632 x639))
(assert (x632 x589))
(assert (= (x346 76450787359836037641860180984291677749980919077056822294353438043884394381312) 0))
(assert (x632 x173))
(assert (x632 x684))
(assert (= (div x15 79228162514264337593543950336) (x688 x15 96)))
(assert (x632 x954))
(assert (x328 680564733841876926926749214863536422910))
(assert (x632 x41))
(assert (= (or x1076 x1037) x1200))
(assert (x632 x318))
(assert (= (div x587 128) (x688 x587 7)))
(assert (x632 x1079))
(assert (> (x1127 40 20 (x688 x91 96) (x688 x1098 96)) 10000))
(assert (x632 x1253))
(assert (< 10000 (x195 64 x94 x1138)))
(assert (= x139 (x623 (x195 64 x139 7))))
(assert (= (x446 (x1127 40 20 (x688 x861 96) (x688 x237 96))) (x688 x861 96)))
(assert (= (div x315 2) (x688 x315 1)))
(assert (x632 x163))
(assert (x632 x1019))
(assert (= (x446 (x1127 40 20 (x688 x227 96) (x688 x624 96))) (x688 x227 96)))
(assert (=> (= x831 0) (= 0 (div x965 x831))))
(assert (=> (<= (x688 x207 96) 10000) (= (x346 (x688 x207 96)) 0)))
(assert (x632 x403))
(assert (= x543 (and x409 (not x917))))
(assert (x632 x55))
(assert (= x174 (and x615 x1083)))
(assert (= (x346 (x195 64 x94 x1138)) (x195 64 x94 x1138)))
(assert (x632 x1075))
(assert (= (or x341 x480) x1264))
(assert (= (and x512 x118) x516))
(assert (= (x346 (x1127 40 20 (x688 x253 96) (x688 x1039 96))) (x1127 40 20 (x688 x253 96) (x688 x1039 96))))
(assert (x632 x993))
(assert (> (x195 64 x798 6) 10000))
(assert (= x1113 (and x1017 (not x574))))
(assert (x632 x720))
(assert (= (and x1222 x936) x971))
(assert (x632 x596))
(assert (= (and (not x118) x512) x953))
(assert (x632 x453))
(assert (=> (= x1243 0) (= 0 (div x990 x1243))))
(assert (x632 x156))
(assert (x632 x135))
(assert (< 10000 (x195 64 x191 1)))
(assert (x632 x16))
(assert (x632 x319))
(assert (=> (>= 10000 (x688 x863 96)) (= (x346 (x688 x863 96)) 0)))
(assert (x632 x343))
(assert (=> (>= 10000 (x688 x699 96)) (= (x346 (x688 x699 96)) 0)))
(assert (= (x375 (x1127 40 20 (x688 x699 96) (x688 x821 96))) (x688 x821 96)))
(assert (> (x1127 40 20 (x688 x549 96) (x688 x15 96)) 10000))
(assert (not (x328 (x195 64 x1220 1))))
(assert (not (x328 (x1127 40 20 (x688 x410 96) (x688 x863 96)))))
(assert (x632 x669))
(assert (x632 x146))
(assert (x328 1000000000000000))
(assert (x632 x860))
(assert (x632 x424))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x94 x1138)))
(assert (x632 x26))
(assert (= (and x357 x706) x913))
(assert (= (div x1195 79228162514264337593543950336) (x688 x1195 96)))
(assert (x632 x1201))
(assert (x632 x268))
(assert (x632 x1034))
(assert (= (=> (and (or (and (not x113) (and (= 460 x125) (= x597 0) (= x81 (* 79228162514264337593543950336 x988)) (= x1122 (* 79228162514264337593543950336 x1056)) (= (x1127 40 20 (x688 x1122 96) (x688 x81 96)) x995) (= x738 x995))) (and x113 (and (= x148 (x1127 40 20 (x688 x861 96) (x688 x237 96))) (= x861 (* x988 79228162514264337593543950336)) (= x125 460) (= (* x1056 79228162514264337593543950336) x237) (= 1 x597) (= x148 x738)))) (and (= (> x1056 x988) x113) (= x757 0))) x635) x1278))
(assert (not (x328 (x1127 40 20 (x688 x131 96) (x688 x837 96)))))
(assert (= (=> (and (= (x195 64 x191 0) x658) (= x1040 false) (= x925 (x195 64 x94 0)) (not (< x167 x600)) (= 1 x978) (= (x195 64 x191 0) x1107) (= false x1104) (not (> x550 x663)) (= (x282 x925) x600) (= 32 x481) (= (x906 x1107) x663) (= x167 (x1270 (+ x550 x600))) (not (> x101 x663)) (= (x610 (- x663 x550)) x101)) x92) x864))
(assert (x632 x629))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x195 64 x94 x841)))
(assert (x632 x1168))
(assert (= (x346 (x1127 40 20 (x688 x116 96) (x688 x1313 96))) (x1127 40 20 (x688 x116 96) (x688 x1313 96))))
(assert (< (x1127 40 20 (x688 x179 96) (x688 x177 96)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x632 x220))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1127 40 20 (x688 x842 96) (x688 x1148 96))))
(check-sat)
(exit)
