(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x3155 () Int)
(declare-fun x3527 () Int)
(declare-fun x2168 () Int)
(declare-fun x1864 () Bool)
(declare-fun x2367 () Int)
(declare-fun x3997 () Int)
(declare-fun x910 () Int)
(declare-fun x1254 () Bool)
(declare-fun x3144 () Int)
(declare-fun x159 () Bool)
(declare-fun x2257 () Int)
(declare-fun x796 () Bool)
(declare-fun x1697 () Int)
(declare-fun x3510 () Int)
(declare-fun x1076 () Int)
(declare-fun x3876 () Int)
(declare-fun x1362 () Int)
(declare-fun x3544 () Int)
(declare-fun x940 () Bool)
(declare-fun x1062 () Int)
(declare-fun x3874 () Bool)
(declare-fun x1863 () Int)
(declare-fun x3782 () Int)
(declare-fun x3451 () Int)
(declare-fun x4240 () Int)
(declare-fun x730 () Bool)
(declare-fun x1942 () Int)
(declare-fun x4053 () Int)
(declare-fun x1564 () Int)
(declare-fun x476 () Bool)
(declare-fun x2918 () Int)
(declare-fun x812 () Bool)
(declare-fun x4154 () Int)
(declare-fun x1801 () Bool)
(declare-fun x3801 () Int)
(declare-fun x656 () Int)
(declare-fun x2454 () Int)
(declare-fun x3663 () Int)
(declare-fun x1531 () Int)
(declare-fun x1705 () Int)
(declare-fun x1267 () Int)
(declare-fun x410 () Bool)
(declare-fun x2004 () Int)
(declare-fun x355 () Bool)
(declare-fun x3034 () Int)
(declare-fun x1889 () Bool)
(declare-fun x1273 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1429 () Int)
(declare-fun x188 () Int)
(declare-fun x1692 () Int)
(declare-fun x3221 () Int)
(declare-fun x3072 () Int)
(declare-fun x3501 () Int)
(declare-fun x1998 () Int)
(declare-fun x3258 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1448 () Int)
(declare-fun x3974 () Bool)
(declare-fun x278 () Int)
(declare-fun x727 () Int)
(declare-fun x3075 () Int)
(declare-fun x2955 () Int)
(declare-fun x4072 () Int)
(declare-fun x902 () Int)
(declare-fun x823 () Int)
(declare-fun x2344 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x3382 () Int)
(declare-fun x3050 () Int)
(declare-fun x3675 () Int)
(declare-fun x507 () Int)
(declare-fun x2144 () Int)
(declare-fun x2433 () Bool)
(declare-fun x1830 (Int) Int)
(declare-fun x2165 () Int)
(declare-fun x697 () Int)
(declare-fun x3784 () Int)
(declare-fun x186 () Int)
(declare-fun x1711 () Int)
(declare-fun x2983 () Bool)
(declare-fun x1399 () Int)
(declare-fun x2892 () Bool)
(declare-fun x3795 () Int)
(declare-fun x231 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x3569 () Int)
(declare-fun x2549 () Bool)
(declare-fun x3116 () Int)
(declare-fun x2969 () Bool)
(declare-fun x2473 () Int)
(declare-fun x3219 () Bool)
(declare-fun x363 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x32 () Int)
(declare-fun x533 () Int)
(declare-fun x1245 () Int)
(declare-fun x3587 () Int)
(declare-fun x867 () Int)
(declare-fun x2457 () Bool)
(declare-fun x2313 () Int)
(declare-fun x3484 () Int)
(declare-fun x1732 () Int)
(declare-fun x1612 () Int)
(declare-fun x2486 () Int)
(declare-fun x1563 () Int)
(declare-fun x2893 () Int)
(declare-fun x343 () Int)
(declare-fun x3816 () Int)
(declare-fun x4138 () Int)
(declare-fun x4295 () Int)
(declare-fun x1030 () Int)
(declare-fun x2392 () Int)
(declare-fun x666 () Int)
(declare-fun x2826 () Int)
(declare-fun x3796 () Bool)
(declare-fun x749 () Int)
(declare-fun x1242 () Int)
(declare-fun x1473 () Int)
(declare-fun x3364 () Int)
(declare-fun x2625 () Int)
(declare-fun x970 () Int)
(declare-fun x2347 () Int)
(declare-fun x3570 () Int)
(declare-fun x3118 () Int)
(declare-fun x2342 () Int)
(declare-fun x1036 () Bool)
(declare-fun x2451 () Int)
(declare-fun x2452 () Bool)
(declare-fun x1670 () Int)
(declare-fun x4032 () Bool)
(declare-fun x4148 () Int)
(declare-fun x1180 () Int)
(declare-fun x2384 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x50 () Bool)
(declare-fun x3633 () Int)
(declare-fun x1214 () Int)
(declare-fun x1108 () Bool)
(declare-fun x175 () Int)
(declare-fun x2289 () Int)
(declare-fun x3108 () Int)
(declare-fun x456 () Int)
(declare-fun x2067 () Bool)
(declare-fun x3832 () Int)
(declare-fun x702 () Int)
(declare-fun x2080 () Bool)
(declare-fun x969 () Bool)
(declare-fun x327 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x443 () Int)
(declare-fun x1666 () Int)
(declare-fun x3630 () Int)
(declare-fun x1466 () Int)
(declare-fun x1794 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x4086 () Int)
(declare-fun x1884 () Int)
(declare-fun x2580 () Bool)
(declare-fun x3376 () Int)
(declare-fun x1244 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x309 () Int)
(declare-fun x2484 () Int)
(declare-fun x2419 () Bool)
(declare-fun x3148 () Int)
(declare-fun x1694 () Int)
(declare-fun x4212 () Int)
(declare-fun x853 () Bool)
(declare-fun x3359 (Int) Int)
(declare-fun x3678 () Int)
(declare-fun x638 () Int)
(declare-fun x2756 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x3511 () Int)
(declare-fun x2992 () Bool)
(declare-fun x707 () Int)
(declare-fun x3091 () Int)
(declare-fun x2014 () Int)
(declare-fun x1446 () Int)
(declare-fun x1915 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x31 () Int)
(declare-fun x4088 () Int)
(declare-fun x1662 () Int)
(declare-fun x546 () Int)
(declare-fun x3360 () Int)
(declare-fun x2585 () Int)
(declare-fun x3613 () Int)
(declare-fun x3032 () Int)
(declare-fun x2396 () Int)
(declare-fun x1510 () Int)
(declare-fun x3864 () Int)
(declare-fun x1637 () Int)
(declare-fun x3692 () Int)
(declare-fun x2084 () Int)
(declare-fun x2090 () Bool)
(declare-fun x2789 () Int)
(declare-fun x1893 () Int)
(declare-fun x4049 () Bool)
(declare-fun x365 () Int)
(declare-fun x1375 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x185 () Int)
(declare-fun x338 () Int)
(declare-fun x1634 () Int)
(declare-fun x3951 () Int)
(declare-fun x3650 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x828 () Bool)
(declare-fun x3046 () Int)
(declare-fun x1873 () Bool)
(declare-fun x3239 () Int)
(declare-fun x3385 (Int) Int)
(declare-fun x1833 (Int) Int)
(declare-fun x4290 () Int)
(declare-fun x1536 () Int)
(declare-fun x158 () Int)
(declare-fun x2439 () Bool)
(declare-fun x446 () Int)
(declare-fun x132 () Int)
(declare-fun x2002 () Int)
(declare-fun x4038 () Int)
(declare-fun x2593 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x2680 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1781 () Bool)
(declare-fun x559 () Int)
(declare-fun x3863 () Bool)
(declare-fun x2669 () Bool)
(declare-fun x2852 () Int)
(declare-fun x2605 () Int)
(declare-fun x4178 () Int)
(declare-fun x3799 () Bool)
(declare-fun x2036 () Int)
(declare-fun x152 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x3371 () Bool)
(declare-fun x2111 () Int)
(declare-fun x2069 () Int)
(declare-fun x661 () Int)
(declare-fun x2175 () Int)
(declare-fun x1789 () Int)
(declare-fun x1367 () Int)
(declare-fun x2388 () Int)
(declare-fun x1783 () Int)
(declare-fun x4256 () Int)
(declare-fun x2670 () Int)
(declare-fun x292 () Bool)
(declare-fun x6 () Int)
(declare-fun x3175 () Int)
(declare-fun x429 () Int)
(declare-fun x4284 () Int)
(declare-fun x3900 () Int)
(declare-fun x1266 () Int)
(declare-fun x837 () Bool)
(declare-fun x1626 () Int)
(declare-fun x4253 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x3733 () Int)
(declare-fun x1521 () Int)
(declare-fun x4162 (Int Int Int Int Int Int Int) Int)
(declare-fun x3777 () Int)
(declare-fun x938 () Int)
(declare-fun x3586 () Bool)
(declare-fun x766 () Int)
(declare-fun x2335 () Bool)
(declare-fun x2633 () Int)
(declare-fun x3985 () Bool)
(declare-fun x1374 () Int)
(declare-fun x2973 () Int)
(declare-fun x3051 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x197 () Bool)
(declare-fun x818 () Int)
(declare-fun x198 () Int)
(declare-fun x3121 () Int)
(declare-fun x180 () Int)
(declare-fun x499 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x4036 () Int)
(declare-fun x531 () Int)
(declare-fun x3303 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x3485 () Int)
(declare-fun x3578 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x2306 () Int)
(declare-fun x2577 () Int)
(declare-fun x4238 () Int)
(declare-fun x3971 () Int)
(declare-fun x1252 () Int)
(declare-fun x2213 () Int)
(declare-fun x1286 () Int)
(declare-fun x1146 () Int)
(declare-fun x3666 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x240 () Int)
(declare-fun x542 () Int)
(declare-fun x2219 () Bool)
(declare-fun x3416 () Int)
(declare-fun x1860 () Int)
(declare-fun x3841 () Int)
(declare-fun x2134 () Int)
(declare-fun x2092 () Int)
(declare-fun x1973 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1651 () Int)
(declare-fun x2932 () Int)
(declare-fun x3283 () Bool)
(declare-fun x2908 () Int)
(declare-fun x3346 (Int) Int)
(declare-fun x3749 (Int) Int)
(declare-fun x1096 () Int)
(declare-fun x1081 () Int)
(declare-fun x2178 () Int)
(declare-fun x2112 () Bool)
(declare-fun x667 () Bool)
(declare-fun x2025 () Int)
(declare-fun x561 () Int)
(declare-fun x3347 () Bool)
(declare-fun x581 () Int)
(declare-fun x2290 () Int)
(declare-fun x248 () Int)
(declare-fun x3199 () Bool)
(declare-fun x434 () Bool)
(declare-fun x2761 (Int Int Int Int Int Int) Int)
(declare-fun x3945 () Bool)
(declare-fun x942 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x2189 () Int)
(declare-fun x208 () Int)
(declare-fun x1361 (Int) Int)
(declare-fun x3225 () Bool)
(declare-fun x640 () Int)
(declare-fun x2 () Int)
(declare-fun x377 () Bool)
(declare-fun x3899 () Int)
(declare-fun x1818 () Int)
(declare-fun x1977 () Int)
(declare-fun x3695 () Int)
(declare-fun x1910 () Int)
(declare-fun x2784 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x3140 () Int)
(declare-fun x431 () Int)
(declare-fun x2056 () Int)
(declare-fun x2303 () Int)
(declare-fun x3887 () Bool)
(declare-fun x3191 () Bool)
(declare-fun x1202 () Int)
(declare-fun x1543 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x2377 () Int)
(declare-fun x3097 () Int)
(declare-fun x880 () Bool)
(declare-fun x2096 () Int)
(declare-fun x2649 () Int)
(declare-fun x1364 () Int)
(declare-fun x701 () Int)
(declare-fun x1788 () Int)
(declare-fun x3143 () Int)
(declare-fun x870 () Int)
(declare-fun x708 () Int)
(declare-fun x2982 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x1935 () Int)
(declare-fun x1330 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x1896 () Int)
(declare-fun x2856 () Int)
(declare-fun x1968 () Int)
(declare-fun x1353 () Int)
(declare-fun x3743 () Bool)
(declare-fun x971 () Int)
(declare-fun x4183 () Bool)
(declare-fun x442 () Int)
(declare-fun x2231 () Int)
(declare-fun x3498 () Bool)
(declare-fun x3693 () Int)
(declare-fun x379 () Int)
(declare-fun x4236 () Int)
(declare-fun x1169 () Int)
(declare-fun x761 () Int)
(declare-fun x3366 () Int)
(declare-fun x3855 () Int)
(declare-fun x3878 () Int)
(declare-fun x2897 () Bool)
(declare-fun x2687 () Int)
(declare-fun x2795 () Int)
(declare-fun x3448 () Bool)
(declare-fun x538 () Int)
(declare-fun x2017 () Int)
(declare-fun x2488 () Int)
(declare-fun x3735 () Int)
(declare-fun x2237 () Int)
(declare-fun x242 () Int)
(declare-fun x3846 () Bool)
(declare-fun x2171 () Int)
(declare-fun x1068 (Int) Int)
(declare-fun x4243 () Int)
(declare-fun x621 () Int)
(declare-fun x1743 () Int)
(declare-fun x3726 () Bool)
(declare-fun x213 () Int)
(declare-fun x4174 () Int)
(declare-fun x381 () Int)
(declare-fun x3411 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1410 () Int)
(declare-fun x399 () Int)
(declare-fun x2420 () Int)
(declare-fun x3245 () Int)
(declare-fun x2295 () Int)
(declare-fun x2801 () Int)
(declare-fun x1045 (Int) Int)
(declare-fun x3353 () Int)
(declare-fun x2085 () Int)
(declare-fun x3098 () Int)
(declare-fun x1097 () Int)
(declare-fun x2258 () Int)
(declare-fun x2629 () Bool)
(declare-fun x1766 () Int)
(declare-fun x1197 () Int)
(declare-fun x3642 () Bool)
(declare-fun x537 () Int)
(declare-fun x1690 () Int)
(declare-fun x3410 () Int)
(declare-fun x2326 () Int)
(declare-fun x1646 () Int)
(declare-fun x2314 () Int)
(declare-fun x1259 () Bool)
(declare-fun x1164 () Int)
(declare-fun x2586 () Bool)
(declare-fun x3515 () Int)
(declare-fun x39 () Int)
(declare-fun x1591 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x357 () Bool)
(declare-fun x2099 () Int)
(declare-fun x4068 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2192 () Int)
(declare-fun x1701 () Int)
(declare-fun x924 () Int)
(declare-fun x920 () Int)
(declare-fun x3905 () Int)
(declare-fun x1141 () Int)
(declare-fun x1928 () Int)
(declare-fun x3886 () Int)
(declare-fun x905 () Bool)
(declare-fun x775 () Int)
(declare-fun x3504 () Int)
(declare-fun x1544 () Int)
(declare-fun x2831 () Bool)
(declare-fun x2975 () Int)
(declare-fun x1349 () Int)
(declare-fun x1048 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x12 () Bool)
(declare-fun x3903 () Int)
(declare-fun x1895 () Int)
(declare-fun x2561 () Int)
(declare-fun x1551 () Bool)
(declare-fun x4286 () Int)
(declare-fun x4158 () Bool)
(declare-fun x2431 () Int)
(declare-fun x3783 () Bool)
(declare-fun x3057 () Int)
(declare-fun x3029 () Int)
(declare-fun x1862 () Int)
(declare-fun x2071 () Int)
(declare-fun x1231 () Int)
(declare-fun x868 () Int)
(declare-fun x786 () Int)
(declare-fun x1198 () Int)
(declare-fun x2947 () Bool)
(declare-fun x4091 () Int)
(declare-fun x793 () Bool)
(declare-fun x599 () Int)
(declare-fun x3119 () Int)
(declare-fun x629 () Int)
(declare-fun x3037 () Int)
(declare-fun x277 () Int)
(declare-fun x1337 () Int)
(declare-fun x2495 () Int)
(declare-fun x3321 () Int)
(declare-fun x2928 () Bool)
(declare-fun x2268 () Int)
(declare-fun x1764 () Int)
(declare-fun x4009 () Int)
(declare-fun x2814 (Int) Int)
(declare-fun x3616 () Bool)
(declare-fun x3496 () Int)
(declare-fun x2423 () Int)
(declare-fun x1149 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x3744 () Int)
(declare-fun x643 () Int)
(declare-fun x2022 () Int)
(declare-fun x371 () Int)
(declare-fun x150 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x2715 () Int)
(declare-fun x2864 () Bool)
(declare-fun x1569 () Int)
(declare-fun x3990 () Int)
(declare-fun x4128 () Int)
(declare-fun x2106 () Int)
(declare-fun x3808 () Int)
(declare-fun x565 () Int)
(declare-fun x2224 () Bool)
(declare-fun x3218 () Int)
(declare-fun x2780 () Int)
(declare-fun x2829 () Int)
(declare-fun x1341 () Int)
(declare-fun x1461 () Int)
(declare-fun x3517 () Bool)
(declare-fun x985 () Int)
(declare-fun x3044 () Bool)
(declare-fun x2828 () Int)
(declare-fun x3605 () Int)
(declare-fun x738 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1091 () Int)
(declare-fun x2291 () Int)
(declare-fun x2264 () Int)
(declare-fun x1123 () Int)
(declare-fun x519 () Int)
(declare-fun x3309 () Int)
(declare-fun x3948 () Int)
(declare-fun x686 () Int)
(declare-fun x1327 () Int)
(declare-fun x3908 () Int)
(declare-fun x3526 () Int)
(declare-fun x58 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x438 () Bool)
(declare-fun x996 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x3898 () Int)
(declare-fun x2476 () Bool)
(declare-fun x771 () Int)
(declare-fun x3389 () Int)
(declare-fun x3895 (Int) Int)
(declare-fun x760 () Int)
(declare-fun x1075 () Int)
(declare-fun x2261 () Int)
(declare-fun x992 () Int)
(declare-fun x1613 () Int)
(declare-fun x3338 () Int)
(declare-fun x3031 () Int)
(declare-fun x2149 () Int)
(declare-fun x3797 () Int)
(declare-fun x2494 () Int)
(declare-fun x2077 () Int)
(declare-fun x1944 () Bool)
(declare-fun x772 () Int)
(declare-fun x4042 () Int)
(declare-fun x1124 () Int)
(declare-fun x678 () Int)
(declare-fun x1529 () Bool)
(declare-fun x3916 () Int)
(declare-fun x1204 () Int)
(declare-fun x655 () Int)
(declare-fun x2127 () Int)
(declare-fun x3311 () Int)
(declare-fun x1511 () Int)
(declare-fun x728 () Int)
(declare-fun x2170 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x3825 () Int)
(declare-fun x1378 () Int)
(declare-fun x3706 () Int)
(declare-fun x3261 () Int)
(declare-fun x1927 () Int)
(declare-fun x4027 () Bool)
(declare-fun x2215 () Int)
(declare-fun x1246 () Bool)
(declare-fun x2138 () Int)
(declare-fun x3443 () Bool)
(declare-fun x4270 () Int)
(declare-fun x2242 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1796 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1763 () Int)
(declare-fun x2676 () Int)
(declare-fun x1886 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1359 () Bool)
(declare-fun x2058 () Int)
(declare-fun x498 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1314 () Int)
(declare-fun x3106 () Bool)
(declare-fun x528 () Int)
(declare-fun x430 () Bool)
(declare-fun x2674 () Int)
(declare-fun x1956 () Bool)
(declare-fun x3764 () Bool)
(declare-fun x3063 () Int)
(declare-fun x2156 () Bool)
(declare-fun x791 () Int)
(declare-fun x2203 () Int)
(declare-fun x1467 () Int)
(declare-fun x508 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x2523 () Int)
(declare-fun x143 () Int)
(declare-fun x2954 () Bool)
(declare-fun x1725 (Int) Int)
(declare-fun x2030 () Int)
(declare-fun x2356 () Bool)
(declare-fun x886 () Int)
(declare-fun x3282 () Bool)
(declare-fun x680 () Int)
(declare-fun x2906 () Bool)
(declare-fun x3470 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1831 () Int)
(declare-fun x2503 () Int)
(declare-fun x607 () Int)
(declare-fun x1038 () Int)
(declare-fun x3252 () Bool)
(declare-fun x3449 () Int)
(declare-fun x2867 () Int)
(declare-fun x3030 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x4109 () Int)
(declare-fun x1756 () Bool)
(declare-fun x282 () Int)
(declare-fun x3667 () Bool)
(declare-fun x1159 () Int)
(declare-fun x3287 () Bool)
(declare-fun x3090 () Int)
(declare-fun x1158 () Int)
(declare-fun x2971 () Int)
(declare-fun x1631 () Int)
(declare-fun x3275 () Bool)
(declare-fun x3538 () Int)
(declare-fun x3620 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x3539 () Int)
(declare-fun x2779 () Int)
(declare-fun x2110 () Int)
(declare-fun x1044 () Bool)
(declare-fun x4281 () Int)
(declare-fun x2205 () Bool)
(declare-fun x490 () Bool)
(declare-fun x298 () Int)
(declare-fun x3938 () Int)
(declare-fun x1795 () Int)
(declare-fun x2339 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x576 () Int)
(declare-fun x2565 () Int)
(declare-fun x3170 () Int)
(declare-fun x783 () Int)
(declare-fun x1047 () Int)
(declare-fun x1726 () Int)
(declare-fun x1346 () Int)
(declare-fun x674 () Int)
(declare-fun x2759 () Int)
(declare-fun x25 () Bool)
(declare-fun x3167 () Int)
(declare-fun x3594 () Bool)
(declare-fun x2283 () Int)
(declare-fun x403 () Int)
(declare-fun x2280 () Int)
(declare-fun x3136 () Bool)
(declare-fun x2963 () Int)
(declare-fun x2933 () Int)
(declare-fun x1691 () Int)
(declare-fun x4037 () Int)
(declare-fun x3114 () Int)
(declare-fun x4116 () Bool)
(declare-fun x1260 () Int)
(declare-fun x2619 () Bool)
(declare-fun x3383 () Bool)
(declare-fun x3621 () Int)
(declare-fun x1617 () Bool)
(declare-fun x2721 () Int)
(declare-fun x979 () Int)
(declare-fun x3198 () Int)
(declare-fun x3412 () Int)
(declare-fun x3896 () Bool)
(declare-fun x4257 () Int)
(declare-fun x1102 () Bool)
(declare-fun x2385 () Int)
(declare-fun x1105 () Int)
(declare-fun x4082 (Int) Int)
(declare-fun x4252 () Int)
(declare-fun x3608 () Bool)
(declare-fun x4002 () Int)
(declare-fun x1405 () Int)
(declare-fun x1641 () Int)
(declare-fun x1227 () Int)
(declare-fun x2903 () Bool)
(declare-fun x321 () Int)
(declare-fun x226 () Int)
(declare-fun x3445 () Int)
(declare-fun x3033 () Bool)
(declare-fun x2510 () Int)
(declare-fun x4268 () Int)
(declare-fun x2276 () Bool)
(declare-fun x91 () Int)
(declare-fun x2371 () Bool)
(declare-fun x1360 () Int)
(declare-fun x3815 () Int)
(declare-fun x2098 () Int)
(declare-fun x1497 (Int) Int)
(declare-fun x4201 () Int)
(declare-fun x1309 () Bool)
(declare-fun x4112 () Int)
(declare-fun x3615 () Bool)
(declare-fun x3995 () Int)
(declare-fun x3194 () Int)
(declare-fun x115 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x672 () Int)
(declare-fun x2819 () Int)
(declare-fun x1908 () Int)
(declare-fun x4207 () Bool)
(declare-fun x1845 () Int)
(declare-fun x3804 () Int)
(declare-fun x52 () Int)
(declare-fun x179 () Int)
(declare-fun x4292 () Int)
(declare-fun x2481 (Int) Int)
(declare-fun x3375 () Int)
(declare-fun x4070 () Bool)
(declare-fun x474 () Int)
(declare-fun x3861 () Int)
(declare-fun x1900 () Int)
(declare-fun x273 () Bool)
(declare-fun x806 () Int)
(declare-fun x1761 () Int)
(declare-fun x140 () Int)
(declare-fun x560 () Bool)
(declare-fun x3398 () Int)
(declare-fun x3872 () Int)
(declare-fun x3344 () Int)
(declare-fun x2348 () Bool)
(declare-fun x1085 () Int)
(declare-fun x3763 () Int)
(declare-fun x2179 () Bool)
(declare-fun x3754 () Int)
(declare-fun x351 (Int) Int)
(declare-fun x105 () Int)
(declare-fun x4291 () Int)
(declare-fun x4244 () Int)
(declare-fun x3009 () Int)
(declare-fun x3660 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2943 () Bool)
(declare-fun x887 () Int)
(declare-fun x2176 () Int)
(declare-fun x709 () Int)
(declare-fun x71 () Int)
(declare-fun x1867 () Int)
(declare-fun x513 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x3596 () Int)
(declare-fun x2483 () Int)
(declare-fun x73 () Int)
(declare-fun x3018 () Int)
(declare-fun x2647 () Int)
(declare-fun x2763 () Int)
(declare-fun x1724 () Int)
(declare-fun x3668 () Int)
(declare-fun x3255 () Int)
(declare-fun x287 () Int)
(declare-fun x961 () Int)
(declare-fun x3566 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x3556 () Int)
(declare-fun x3589 () Int)
(declare-fun x1210 () Int)
(declare-fun x1648 () Int)
(declare-fun x3803 () Int)
(declare-fun x3180 () Int)
(declare-fun x1392 () Bool)
(declare-fun x3914 () Int)
(declare-fun x2341 () Int)
(declare-fun x568 () Int)
(declare-fun x211 () Int)
(declare-fun x1140 () Int)
(declare-fun x1547 () Int)
(declare-fun x1126 () Int)
(declare-fun x1253 () Int)
(declare-fun x3417 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x3390 () Int)
(declare-fun x948 () Int)
(declare-fun x2044 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x2516 () Int)
(declare-fun x2752 () Int)
(declare-fun x3756 () Bool)
(declare-fun x1660 () Int)
(declare-fun x3600 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x3536 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x3957 () Int)
(declare-fun x2812 () Bool)
(declare-fun x3224 () Int)
(declare-fun x2382 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x2550 () Bool)
(declare-fun x1199 (Int) Int)
(declare-fun x1948 () Bool)
(declare-fun x4188 (Int) Int)
(declare-fun x2534 () Int)
(declare-fun x2884 () Int)
(declare-fun x1053 () Int)
(declare-fun x4056 () Int)
(declare-fun x973 () Int)
(declare-fun x2193 () Bool)
(declare-fun x61 () Int)
(declare-fun x1125 () Int)
(declare-fun x780 () Bool)
(declare-fun x2616 () Int)
(declare-fun x3998 () Int)
(declare-fun x933 () Bool)
(declare-fun x3674 () Int)
(declare-fun x387 () Bool)
(declare-fun x3835 () Int)
(declare-fun x1655 () Int)
(declare-fun x3125 () Int)
(declare-fun x4193 () Int)
(declare-fun x2671 () Int)
(declare-fun x1501 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1675 () Int)
(declare-fun x3657 () Bool)
(declare-fun x293 () Int)
(declare-fun x37 () Int)
(declare-fun x4214 () Int)
(declare-fun x1870 () Int)
(declare-fun x3758 () Int)
(declare-fun x951 () Int)
(declare-fun x1067 () Bool)
(declare-fun x842 () Int)
(declare-fun x3027 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x1165 () Int)
(declare-fun x2712 () Bool)
(declare-fun x2948 () Int)
(declare-fun x3656 () Int)
(declare-fun x2953 () Int)
(declare-fun x1618 (Int) Int)
(declare-fun x485 () Int)
(declare-fun x2872 () Int)
(declare-fun x424 () Int)
(declare-fun x1930 () Int)
(declare-fun x3007 () Int)
(declare-fun x1223 () Int)
(declare-fun x692 () Int)
(declare-fun x2354 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x161 () Bool)
(declare-fun x923 () Int)
(declare-fun x1049 () Int)
(declare-fun x1338 (Int Int Int) Int)
(declare-fun x879 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x2570 (Int) Int)
(declare-fun x168 () Int)
(declare-fun x1420 () Int)
(declare-fun x2657 () Int)
(declare-fun x2813 () Bool)
(declare-fun x3422 () Int)
(declare-fun x773 () Int)
(declare-fun x3265 (Int) Int)
(declare-fun x1996 () Int)
(declare-fun x1687 (Int) Int)
(declare-fun x3829 () Int)
(declare-fun x1269 () Int)
(declare-fun x3238 () Int)
(declare-fun x3377 () Int)
(declare-fun x3830 () Bool)
(declare-fun x1142 () Int)
(declare-fun x2135 () Int)
(declare-fun x3858 () Int)
(declare-fun x541 () Int)
(declare-fun x914 () Bool)
(declare-fun x2611 () Int)
(declare-fun x3016 () Int)
(declare-fun x998 () Bool)
(declare-fun x2751 () Int)
(declare-fun x2648 () Int)
(declare-fun x919 () Bool)
(declare-fun x2753 () Int)
(declare-fun x4258 () Int)
(declare-fun x704 () Int)
(declare-fun x3022 () Int)
(declare-fun x590 () Int)
(declare-fun x3160 () Int)
(declare-fun x3939 () Int)
(declare-fun x1454 () Int)
(declare-fun x2172 () Int)
(declare-fun x1850 (Int) Int)
(declare-fun x1215 () Int)
(declare-fun x2235 () Int)
(declare-fun x326 () Int)
(declare-fun x705 () Int)
(declare-fun x2340 () Int)
(declare-fun x1937 () Int)
(declare-fun x3651 () Int)
(declare-fun x2525 () Int)
(declare-fun x2957 () Int)
(declare-fun x2923 () Bool)
(declare-fun x628 () Int)
(declare-fun x2551 () Int)
(declare-fun x2853 () Int)
(declare-fun x571 () Int)
(declare-fun x3685 () Int)
(declare-fun x524 () Int)
(declare-fun x875 () Int)
(declare-fun x1566 () Int)
(declare-fun x889 () Int)
(declare-fun x734 () Int)
(declare-fun x1719 () Bool)
(declare-fun x392 () Bool)
(declare-fun x1874 () Int)
(declare-fun x149 () Bool)
(declare-fun x994 () Int)
(declare-fun x3523 () Int)
(declare-fun x2113 () Int)
(declare-fun x808 () Int)
(declare-fun x2177 () Int)
(declare-fun x3906 () Bool)
(declare-fun x428 () Bool)
(declare-fun x557 () Bool)
(declare-fun x2212 () Int)
(declare-fun x740 () Int)
(declare-fun x2039 () Int)
(declare-fun x4118 () Int)
(declare-fun x1293 () Int)
(declare-fun x3339 () Int)
(declare-fun x93 () Bool)
(declare-fun x1853 () Int)
(declare-fun x76 (Int) Int)
(declare-fun x1226 () Int)
(declare-fun x2514 () Int)
(declare-fun x1627 () Int)
(declare-fun x2079 () Bool)
(declare-fun x2208 () Int)
(declare-fun x85 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1495 () Int)
(declare-fun x3697 () Bool)
(declare-fun x3582 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x3599 () Int)
(declare-fun x2838 () Int)
(declare-fun x850 () Bool)
(declare-fun x518 () Int)
(declare-fun x2739 () Int)
(declare-fun x1729 () Int)
(declare-fun x2404 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x2441 () Int)
(declare-fun x4276 () Bool)
(declare-fun x418 () Bool)
(declare-fun x1276 () Int)
(declare-fun x2546 () Int)
(declare-fun x1907 () Bool)
(declare-fun x1059 () Int)
(declare-fun x1839 () Bool)
(declare-fun x2415 () Int)
(declare-fun x3302 () Int)
(declare-fun x4013 () Bool)
(declare-fun x1577 () Int)
(declare-fun x23 () Int)
(declare-fun x2895 () Int)
(declare-fun x715 () Int)
(declare-fun x1261 () Int)
(declare-fun x1750 () Int)
(declare-fun x1780 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x89 () Int)
(declare-fun x3823 () Int)
(declare-fun x1504 () Int)
(declare-fun x2277 () Bool)
(declare-fun x2524 () Int)
(declare-fun x3483 () Int)
(declare-fun x3840 (Int) Int)
(declare-fun x2074 () Int)
(declare-fun x1093 (Int) Int)
(declare-fun x509 () Int)
(declare-fun x266 () Int)
(declare-fun x1033 () Bool)
(declare-fun x100 () Int)
(declare-fun x1983 () Int)
(declare-fun x2781 () Bool)
(declare-fun x239 () Bool)
(declare-fun x1808 () Int)
(declare-fun x3574 () Bool)
(declare-fun x3074 () Int)
(declare-fun x319 () Int)
(declare-fun x2991 () Int)
(declare-fun x3865 () Int)
(declare-fun x207 () Int)
(declare-fun x2694 () Int)
(declare-fun x4021 () Bool)
(declare-fun x873 () Int)
(declare-fun x2122 () Int)
(declare-fun x1721 () Int)
(declare-fun x1476 () Int)
(declare-fun x1678 () Bool)
(declare-fun x763 () Bool)
(declare-fun x4180 () Int)
(declare-fun x1539 () Int)
(declare-fun x3975 () Int)
(declare-fun x3738 () Bool)
(declare-fun x182 () Int)
(declare-fun x3214 () Int)
(declare-fun x3737 () Bool)
(declare-fun x92 () Int)
(declare-fun x2909 () Int)
(declare-fun x2764 () Bool)
(declare-fun x831 () Bool)
(declare-fun x3572 () Int)
(declare-fun x897 () Bool)
(declare-fun x63 () Int)
(declare-fun x2210 (Int) Int)
(declare-fun x3374 () Int)
(declare-fun x1481 () Bool)
(declare-fun x582 () Int)
(declare-fun x259 () Int)
(declare-fun x3983 () Int)
(declare-fun x2418 () Int)
(declare-fun x4172 () Int)
(declare-fun x1373 () Int)
(declare-fun x3168 () Bool)
(declare-fun x2582 () Int)
(declare-fun x3592 () Int)
(declare-fun x1769 () Int)
(declare-fun x2321 () Int)
(declare-fun x3454 () Int)
(declare-fun x291 () Int)
(declare-fun x2531 () Int)
(declare-fun x1294 () Int)
(declare-fun x2054 () Int)
(declare-fun x2788 () Int)
(declare-fun x3086 () Int)
(declare-fun x3705 () Int)
(declare-fun x3163 () Bool)
(declare-fun x2707 () Int)
(declare-fun x1728 () Int)
(declare-fun x670 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x2994 () Int)
(declare-fun x4211 () Int)
(declare-fun x3101 () Bool)
(declare-fun x2878 () Int)
(declare-fun x3921 () Bool)
(declare-fun x1082 () Int)
(declare-fun x2401 () Int)
(declare-fun x1084 () Int)
(declare-fun x2198 () Int)
(declare-fun x2916 () Int)
(declare-fun x2374 () Int)
(declare-fun x3047 () Bool)
(declare-fun x2383 () Int)
(declare-fun x3549 () Int)
(declare-fun x4219 () Int)
(declare-fun x2802 () Int)
(declare-fun x2153 () Int)
(declare-fun x347 () Int)
(declare-fun x3171 () Int)
(declare-fun x2545 () Int)
(declare-fun x166 () Int)
(declare-fun x2956 () Int)
(declare-fun x1478 () Int)
(declare-fun x3391 () Int)
(declare-fun x1524 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x445 () Bool)
(declare-fun x1290 () Int)
(declare-fun x35 () Int)
(declare-fun x294 () Int)
(declare-fun x2581 () Bool)
(declare-fun x852 () Bool)
(declare-fun x2331 () Int)
(declare-fun x2952 () Int)
(declare-fun x696 () Bool)
(declare-fun x358 () Bool)
(declare-fun x285 () Int)
(declare-fun x3791 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1001 () Int)
(declare-fun x1207 (Int) Int)
(declare-fun x3752 () Int)
(declare-fun x1926 () Int)
(declare-fun x2972 () Int)
(declare-fun x2238 () Int)
(declare-fun x650 () Int)
(declare-fun x2868 () Int)
(declare-fun x2931 () Int)
(declare-fun x235 () Bool)
(declare-fun x3212 () Int)
(declare-fun x1760 () Bool)
(declare-fun x4254 () Bool)
(declare-fun x2376 () Int)
(declare-fun x1875 () Int)
(declare-fun x2387 () Bool)
(declare-fun x361 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x223 () Int)
(declare-fun x2792 () Int)
(declare-fun x891 () Int)
(declare-fun x1911 () Bool)
(declare-fun x2777 () Int)
(declare-fun x3095 () Int)
(declare-fun x4215 (Int) Int)
(declare-fun x300 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1608 () Int)
(declare-fun x2732 () Int)
(declare-fun x1887 () Bool)
(declare-fun x729 () Int)
(declare-fun x3497 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1471 () Int)
(declare-fun x3329 () Bool)
(declare-fun x1194 () Int)
(declare-fun x604 () Int)
(declare-fun x995 () Int)
(declare-fun x2120 () Int)
(declare-fun x1324 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x3420 () Bool)
(declare-fun x1605 () Int)
(declare-fun x3487 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1188 () Int)
(declare-fun x2847 () Int)
(declare-fun x2977 () Int)
(declare-fun x3875 () Int)
(declare-fun x2993 () Int)
(declare-fun x1562 (Int) Int)
(declare-fun x1185 () Int)
(declare-fun x2325 () Bool)
(declare-fun x3317 () Int)
(declare-fun x3882 () Int)
(declare-fun x1313 () Bool)
(declare-fun x827 () Int)
(declare-fun x3836 () Int)
(declare-fun x3614 () Int)
(declare-fun x66 () Int)
(declare-fun x1272 () Int)
(declare-fun x4132 () Int)
(declare-fun x3681 () Int)
(declare-fun x2359 () Int)
(declare-fun x811 (Int) Int)
(declare-fun x1643 () Int)
(declare-fun x3739 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x196 () Int)
(declare-fun x3513 () Bool)
(declare-fun x855 () Int)
(declare-fun x1383 () Int)
(declare-fun x47 () Bool)
(declare-fun x570 () Int)
(declare-fun x1281 () Int)
(declare-fun x1554 () Bool)
(declare-fun x3426 () Int)
(declare-fun x943 () Int)
(declare-fun x177 () Int)
(declare-fun x929 () Int)
(declare-fun x3593 () Int)
(declare-fun x264 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x926 () Int)
(declare-fun x2688 () Int)
(declare-fun x916 () Bool)
(declare-fun x801 () Int)
(declare-fun x2145 () Int)
(declare-fun x1496 () Bool)
(declare-fun x2027 () Int)
(declare-fun x1775 () Bool)
(declare-fun x2142 () Int)
(declare-fun x3757 () Int)
(declare-fun x1918 () Int)
(declare-fun x932 () Int)
(declare-fun x406 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x3968 () Int)
(declare-fun x3550 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x2713 () Int)
(declare-fun x1298 (Int) Int)
(declare-fun x3567 () Int)
(declare-fun x1592 () Int)
(declare-fun x148 () Int)
(declare-fun x2690 () Int)
(declare-fun x2822 () Bool)
(declare-fun x2602 () Int)
(declare-fun x1300 () Int)
(declare-fun x1209 () Bool)
(declare-fun x3638 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x3060 () Int)
(declare-fun x500 () Bool)
(declare-fun x3042 () Int)
(declare-fun x3083 () Int)
(declare-fun x1623 () Int)
(declare-fun x2502 () Int)
(declare-fun x1920 () Int)
(declare-fun x2858 () Int)
(declare-fun x2228 () Int)
(declare-fun x3080 () Int)
(declare-fun x3350 () Int)
(declare-fun x2743 () Bool)
(declare-fun x2959 () Int)
(declare-fun x2559 () Bool)
(declare-fun x3925 () Int)
(declare-fun x4014 () Bool)
(declare-fun x747 () Int)
(declare-fun x4299 () Int)
(declare-fun x2652 () Bool)
(declare-fun x305 () Int)
(declare-fun x228 () Int)
(declare-fun x1475 () Int)
(declare-fun x1963 () Int)
(declare-fun x3731 () Bool)
(declare-fun x2750 () Int)
(declare-fun x1921 () Int)
(declare-fun x254 () Int)
(declare-fun x990 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x2410 () Int)
(declare-fun x804 () Int)
(declare-fun x3555 () Int)
(declare-fun x1486 () Bool)
(declare-fun x2871 () Int)
(declare-fun x2547 () Int)
(declare-fun x145 () Bool)
(declare-fun x4181 () Int)
(declare-fun x1167 () Int)
(declare-fun x799 () Int)
(declare-fun x1350 () Int)
(declare-fun x2686 () Bool)
(declare-fun x2130 () Int)
(declare-fun x714 () Int)
(declare-fun x1905 () Int)
(declare-fun x3345 () Int)
(declare-fun x218 () Int)
(declare-fun x3056 () Int)
(declare-fun x1552 () Int)
(declare-fun x2497 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x404 () Int)
(declare-fun x1779 () Int)
(declare-fun x2904 () Bool)
(declare-fun x1161 () Int)
(declare-fun x2230 () Int)
(declare-fun x1195 () Int)
(declare-fun x3407 () Bool)
(declare-fun x3563 () Int)
(declare-fun x1840 () Bool)
(declare-fun x2698 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1849 () Int)
(declare-fun x122 () Int)
(declare-fun x574 () Int)
(declare-fun x4202 () Int)
(declare-fun x1319 () Bool)
(declare-fun x367 () Bool)
(declare-fun x3201 () Int)
(declare-fun x27 () Int)
(declare-fun x1817 () Int)
(declare-fun x4106 () Int)
(declare-fun x59 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1371 () Int)
(declare-fun x1798 () Bool)
(declare-fun x2434 () Int)
(declare-fun x917 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x81 () Bool)
(declare-fun x2970 () Bool)
(declare-fun x2381 () Int)
(declare-fun x2651 () Int)
(declare-fun x833 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1749 () Int)
(declare-fun x2701 () Int)
(declare-fun x206 () Int)
(declare-fun x2009 () Bool)
(declare-fun x529 () Int)
(declare-fun x247 () Int)
(declare-fun x4173 () Int)
(declare-fun x3126 () Bool)
(declare-fun x3431 () Int)
(declare-fun x1296 () Int)
(declare-fun x2796 () Int)
(declare-fun x2308 () Int)
(declare-fun x3458 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x1835 () Int)
(declare-fun x97 () Int)
(declare-fun x1002 () Bool)
(declare-fun x4124 () Int)
(declare-fun x3247 () Int)
(declare-fun x858 () Int)
(declare-fun x3077 () Int)
(declare-fun x2229 (Int) Int)
(declare-fun x1233 () Bool)
(declare-fun x4057 () Int)
(declare-fun x3714 () Int)
(declare-fun x405 () Int)
(declare-fun x41 () Bool)
(declare-fun x3153 () Int)
(declare-fun x2599 () Int)
(declare-fun x3236 () Int)
(declare-fun x415 () Int)
(declare-fun x460 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1043 () Bool)
(declare-fun x3209 () Int)
(declare-fun x820 () Int)
(declare-fun x3418 () Int)
(declare-fun x2083 () Int)
(declare-fun x472 () Int)
(declare-fun x4114 () Int)
(declare-fun x1767 () Int)
(declare-fun x3994 () Int)
(declare-fun x834 () Int)
(declare-fun x2574 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x3139 () Int)
(declare-fun x2944 () Int)
(declare-fun x302 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x972 () Bool)
(declare-fun x4184 () Int)
(declare-fun x3548 () Int)
(declare-fun x2934 () Int)
(declare-fun x1882 () Int)
(declare-fun x2912 () Int)
(declare-fun x2029 () Int)
(declare-fun x2040 () Bool)
(declare-fun x2702 () Int)
(declare-fun x3704 () Int)
(declare-fun x3264 () Bool)
(declare-fun x2087 () Int)
(declare-fun x563 () Int)
(declare-fun x1308 () Int)
(declare-fun x4237 () Int)
(declare-fun x2061 () Bool)
(declare-fun x3701 () Int)
(declare-fun x3611 () Int)
(declare-fun x312 () Bool)
(declare-fun x2050 () Int)
(declare-fun x1069 () Bool)
(declare-fun x2716 () Int)
(declare-fun x4000 () Int)
(declare-fun x2501 () Bool)
(declare-fun x3885 () Int)
(declare-fun x3590 () Bool)
(declare-fun x2406 () Int)
(declare-fun x3213 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x3335 () Int)
(declare-fun x3286 () Bool)
(declare-fun x2614 () Int)
(declare-fun x3367 () Int)
(declare-fun x1278 () Int)
(declare-fun x3085 () Int)
(declare-fun x890 () Int)
(declare-fun x202 () Int)
(declare-fun x1232 () Int)
(declare-fun x2790 () Int)
(declare-fun x142 () Int)
(declare-fun x4008 () Int)
(declare-fun x3054 () Bool)
(declare-fun x4028 () Bool)
(declare-fun x43 () Bool)
(declare-fun x3111 (Int) Int)
(declare-fun x1999 () Bool)
(declare-fun x2337 () Int)
(declare-fun x3207 () Int)
(declare-fun x805 () Int)
(declare-fun x2816 () Int)
(declare-fun x1538 () Int)
(declare-fun x3415 () Int)
(declare-fun x2990 () Int)
(declare-fun x553 () Int)
(declare-fun x3058 () Int)
(declare-fun x3185 () Int)
(declare-fun x2105 () Int)
(declare-fun x1861 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x3774 () Int)
(declare-fun x2787 () Bool)
(declare-fun x3576 () Int)
(declare-fun x4179 () Int)
(declare-fun x2453 () Int)
(declare-fun x2459 () Int)
(declare-fun x4152 () Int)
(declare-fun x1859 () Int)
(declare-fun x1961 () Int)
(declare-fun x4022 () Int)
(declare-fun x83 () Int)
(declare-fun x2765 () Int)
(declare-fun x3802 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x4005 () Int)
(declare-fun x1556 () Int)
(declare-fun x706 () Int)
(declare-fun x1708 () Int)
(declare-fun x1139 () Bool)
(declare-fun x391 () Bool)
(declare-fun x244 () Int)
(declare-fun x2222 () Int)
(declare-fun x723 () Bool)
(declare-fun x4034 () Bool)
(declare-fun x113 () Int)
(declare-fun x2851 () Bool)
(declare-fun x121 () Bool)
(declare-fun x949 () Int)
(declare-fun x3059 () Int)
(declare-fun x3290 () Bool)
(declare-fun x3673 () Int)
(declare-fun x2695 () Int)
(declare-fun x3814 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x3088 () Int)
(declare-fun x2703 () Int)
(declare-fun x4117 () Int)
(declare-fun x2378 () Bool)
(declare-fun x18 () Int)
(declare-fun x1397 () Bool)
(declare-fun x2556 () Int)
(declare-fun x1205 () Bool)
(declare-fun x2474 () Int)
(declare-fun x3130 () Int)
(declare-fun x585 () Bool)
(declare-fun x3545 () Int)
(declare-fun x1689 () Int)
(declare-fun x1541 () Int)
(declare-fun x1005 () Int)
(declare-fun x114 () Int)
(declare-fun x3014 () Int)
(declare-fun x3271 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x977 () Int)
(declare-fun x3852 () Int)
(declare-fun x1816 () Int)
(declare-fun x1730 () Int)
(declare-fun x1661 () Int)
(declare-fun x3381 (Int) Int)
(declare-fun x2571 () Int)
(declare-fun x2940 () Int)
(declare-fun x3304 () Int)
(declare-fun x2281 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x2478 () Int)
(declare-fun x1677 () Int)
(declare-fun x2028 () Int)
(declare-fun x2031 () Int)
(declare-fun x2284 () Bool)
(declare-fun x1157 () Int)
(declare-fun x927 () Int)
(declare-fun x2073 () Bool)
(declare-fun x3206 () Bool)
(declare-fun x335 () Int)
(declare-fun x3241 () Int)
(declare-fun x2978 () Int)
(declare-fun x3105 () Bool)
(declare-fun x1837 () Int)
(declare-fun x2865 () Int)
(declare-fun x3400 () Int)
(declare-fun x331 () Bool)
(declare-fun x2293 () Int)
(declare-fun x2317 () Bool)
(declare-fun x2013 () Int)
(declare-fun x797 () Int)
(declare-fun x1584 () Int)
(declare-fun x3300 () Bool)
(declare-fun x1021 () Int)
(declare-fun x2512 () Int)
(declare-fun x4216 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1892 () Int)
(declare-fun x2642 () Int)
(declare-fun x4136 () Int)
(declare-fun x2553 () Int)
(declare-fun x297 () Int)
(declare-fun x1485 () Int)
(declare-fun x2800 () Int)
(declare-fun x2021 () Bool)
(declare-fun x3866 () Int)
(declare-fun x126 () Int)
(declare-fun x2749 () Bool)
(declare-fun x82 () Int)
(declare-fun x1806 () Int)
(declare-fun x3930 () Int)
(declare-fun x1595 () Int)
(declare-fun x3129 () Int)
(declare-fun x4142 () Bool)
(declare-fun x1377 (Int) Int)
(declare-fun x1406 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x2505 () Int)
(declare-fun x681 () Bool)
(declare-fun x2530 () Int)
(declare-fun x3790 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2711 () Int)
(declare-fun x3984 () Int)
(declare-fun x2785 () Bool)
(declare-fun x1441 () Int)
(declare-fun x328 () Int)
(declare-fun x3787 () Bool)
(declare-fun x2542 () Int)
(declare-fun x4170 () Int)
(declare-fun x1132 () Int)
(declare-fun x1597 (Int) Int)
(declare-fun x469 () Bool)
(declare-fun x3267 () Int)
(declare-fun x612 () Int)
(declare-fun x258 () Int)
(declare-fun x2449 () Int)
(declare-fun x1137 () Int)
(declare-fun x4090 () Int)
(declare-fun x3992 () Int)
(declare-fun x803 () Int)
(declare-fun x1400 () Int)
(declare-fun x1393 () Int)
(declare-fun x1997 () Int)
(declare-fun x742 () Int)
(declare-fun x2059 () Int)
(declare-fun x3809 () Int)
(declare-fun x2887 () Int)
(declare-fun x1321 () Int)
(declare-fun x4234 () Bool)
(declare-fun x271 () Bool)
(declare-fun x3742 () Int)
(declare-fun x2898 () Int)
(declare-fun x3020 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x448 () Int)
(declare-fun x3944 () Int)
(declare-fun x4195 () Int)
(declare-fun x1533 () Int)
(declare-fun x1516 () Bool)
(declare-fun x2886 () Int)
(declare-fun x2901 () Int)
(declare-fun x1815 () Int)
(declare-fun x3082 () Int)
(declare-fun x2817 () Bool)
(declare-fun x1869 () Int)
(declare-fun x813 () Int)
(declare-fun x10 () Int)
(declare-fun x173 () Bool)
(declare-fun x906 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x4104 () Bool)
(declare-fun x2204 () Int)
(declare-fun x2888 () Int)
(declare-fun x3453 () Int)
(declare-fun x362 () Int)
(declare-fun x2658 () Bool)
(declare-fun x1946 () Int)
(declare-fun x2163 () Int)
(declare-fun x1240 () Int)
(declare-fun x4169 () Bool)
(declare-fun x1791 (Int) Int)
(declare-fun x1748 () Int)
(declare-fun x3015 () Int)
(declare-fun x2731 () Int)
(declare-fun x794 () Int)
(declare-fun x3438 () Int)
(declare-fun x2438 (Int) Int)
(declare-fun x1593 () Int)
(declare-fun x214 () Int)
(declare-fun x1088 () Bool)
(declare-fun x3509 () Int)
(declare-fun x872 () Bool)
(declare-fun x2386 () Int)
(declare-fun x3919 () Int)
(declare-fun x1843 () Bool)
(declare-fun x2498 () Int)
(declare-fun x1122 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x1389 () Int)
(declare-fun x1723 (Int Int) Int)
(declare-fun x3722 () Int)
(declare-fun x3176 () Bool)
(declare-fun x755 () Int)
(declare-fun x3399 () Int)
(declare-fun x1297 () Int)
(declare-fun x44 () Int)
(declare-fun x4225 () Int)
(declare-fun x1037 () Int)
(declare-fun x3658 (Int) Int)
(declare-fun x1369 () Int)
(declare-fun x688 () Int)
(declare-fun x1632 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x250 () Int)
(declare-fun x577 () Int)
(declare-fun x110 () Int)
(declare-fun x1560 () Int)
(declare-fun x1540 () Int)
(declare-fun x1119 () Int)
(declare-fun x356 () Int)
(declare-fun x1347 () Int)
(declare-fun x94 () Int)
(declare-fun x2894 () Int)
(declare-fun x984 () Int)
(declare-fun x2506 () Int)
(declare-fun x1642 () Bool)
(declare-fun x3891 () Bool)
(declare-fun x3486 () Int)
(declare-fun x1436 () Int)
(declare-fun x2818 () Bool)
(declare-fun x1489 () Int)
(declare-fun x36 () Int)
(declare-fun x4233 () Int)
(declare-fun x1877 () Int)
(declare-fun x215 () Int)
(declare-fun x668 () Bool)
(declare-fun x1567 () Int)
(declare-fun x521 () Bool)
(declare-fun x2881 () Int)
(declare-fun x3442 () Int)
(declare-fun x481 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1433 () Int)
(declare-fun x2999 () Int)
(declare-fun x3793 () Int)
(declare-fun x2327 () Int)
(declare-fun x918 () Bool)
(declare-fun x3723 () Int)
(declare-fun x548 () Int)
(declare-fun x651 () Bool)
(declare-fun x3455 (Int) Int)
(declare-fun x1193 () Int)
(declare-fun x3694 () Int)
(declare-fun x512 () Int)
(declare-fun x2447 () Int)
(declare-fun x2416 () Int)
(declare-fun x3843 () Bool)
(declare-fun x665 () Int)
(declare-fun x2166 () Bool)
(declare-fun x4251 () Int)
(declare-fun x1819 () Int)
(declare-fun x2843 () Int)
(declare-fun x3571 () Int)
(declare-fun x4010 () Int)
(declare-fun x3291 () Int)
(declare-fun x660 () Bool)
(declare-fun x1841 () Int)
(declare-fun x2305 () Bool)
(declare-fun x3786 () Int)
(declare-fun x3045 () Int)
(declare-fun x1114 () Bool)
(declare-fun x2180 () Int)
(declare-fun x127 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x1718 () Int)
(declare-fun x353 () Int)
(declare-fun x3588 () Int)
(declare-fun x3248 (Int) Int)
(declare-fun x909 () Int)
(declare-fun x687 () Int)
(declare-fun x1923 () Int)
(declare-fun x1746 () Int)
(declare-fun x4094 () Int)
(declare-fun x480 () Int)
(declare-fun x869 () Bool)
(declare-fun x4081 () Int)
(declare-fun x614 () Bool)
(declare-fun x4045 () Int)
(declare-fun x2579 () Int)
(declare-fun x14 () Int)
(declare-fun x425 () Int)
(declare-fun x2612 () Int)
(declare-fun x648 () Int)
(declare-fun x267 () Int)
(declare-fun x2429 () Int)
(declare-fun x2101 () Bool)
(declare-fun x1483 () Int)
(declare-fun x64 () Int)
(declare-fun x2915 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x2885 () Int)
(declare-fun x3403 () Int)
(declare-fun x2390 () Int)
(declare-fun x3936 () Bool)
(declare-fun x4196 () Int)
(declare-fun x3145 () Bool)
(declare-fun x210 () Bool)
(declare-fun x630 () Int)
(declare-fun x2003 () Bool)
(declare-fun x4030 () Int)
(declare-fun x2541 () Int)
(declare-fun x633 () Bool)
(declare-fun x1469 () Int)
(declare-fun x339 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x567 () Bool)
(declare-fun x2697 () Int)
(declare-fun x1028 () Bool)
(declare-fun x3254 () Int)
(declare-fun x3475 () Bool)
(declare-fun x3404 () Int)
(declare-fun x652 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x194 () Int)
(declare-fun x437 () Bool)
(declare-fun x3917 () Bool)
(declare-fun x330 () Int)
(declare-fun x2363 (Int) Int)
(declare-fun x1004 () Int)
(declare-fun x268 () Int)
(declare-fun x1109 () Int)
(declare-fun x3961 () Int)
(declare-fun x3461 () Int)
(declare-fun x2693 () Int)
(declare-fun x440 () Int)
(declare-fun x274 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x3928 () Bool)
(declare-fun x718 () Int)
(declare-fun x3671 () Int)
(declare-fun x502 () Int)
(declare-fun x1117 () Int)
(declare-fun x3429 () Int)
(declare-fun x726 () Bool)
(declare-fun x549 () Int)
(declare-fun x2489 () Int)
(declare-fun x3151 () Int)
(declare-fun x2578 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x719 () Bool)
(declare-fun x928 () Int)
(declare-fun x435 () Int)
(declare-fun x3138 () Int)
(declare-fun x253 () Bool)
(declare-fun x4033 () Int)
(declare-fun x3725 () Int)
(declare-fun x2315 () Int)
(declare-fun x125 () Int)
(declare-fun x3306 () Int)
(declare-fun x3746 () Int)
(declare-fun x1857 () Int)
(declare-fun x4041 () Int)
(declare-fun x3490 () Int)
(declare-fun x3856 () Bool)
(declare-fun x1885 () Int)
(declare-fun x1703 () Int)
(declare-fun x3161 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1652 () Int)
(declare-fun x162 () Int)
(declare-fun x3676 () Int)
(declare-fun x710 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x981 () Bool)
(declare-fun x84 () Int)
(declare-fun x2949 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1762 () Bool)
(declare-fun x3156 () Int)
(declare-fun x3314 () Bool)
(declare-fun x3190 () Int)
(declare-fun x695 () Int)
(declare-fun x2094 () Bool)
(declare-fun x4011 () Int)
(declare-fun x2720 () Int)
(declare-fun x4093 () Int)
(declare-fun x1277 () Int)
(declare-fun x980 () Int)
(declare-fun x2154 () Int)
(declare-fun x2211 () Int)
(declare-fun x3618 () Int)
(declare-fun x573 () Int)
(declare-fun x3748 () Int)
(declare-fun x4262 () Bool)
(declare-fun x265 (Int Int) Int)
(declare-fun x1170 () Int)
(declare-fun x313 () Bool)
(declare-fun x2155 () Int)
(declare-fun x1782 () Int)
(declare-fun x2158 () Int)
(declare-fun x847 () Int)
(declare-fun x2538 () Bool)
(declare-fun x790 () Int)
(declare-fun x1083 () Int)
(declare-fun x3762 () Int)
(declare-fun x3320 () Int)
(declare-fun x388 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1243 () Int)
(declare-fun x1449 () Int)
(declare-fun x2855 () Int)
(declare-fun x217 () Int)
(declare-fun x20 () Int)
(declare-fun x3270 () Int)
(declare-fun x3023 () Bool)
(declare-fun x907 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x2338 () Int)
(declare-fun x3313 () Int)
(declare-fun x3546 () Int)
(declare-fun x1073 () Bool)
(declare-fun x3734 () Bool)
(declare-fun x1744 () Int)
(declare-fun x3326 () Int)
(declare-fun x1622 () Int)
(declare-fun x1356 () Int)
(declare-fun x2691 () Int)
(declare-fun x503 () Int)
(declare-fun x453 () Int)
(declare-fun x1530 () Int)
(declare-fun x3004 () Int)
(declare-fun x1561 () Int)
(declare-fun x4131 () Int)
(declare-fun x3315 () Int)
(declare-fun x280 () Int)
(declare-fun x840 () Int)
(declare-fun x778 () Int)
(declare-fun x4054 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1698 () Int)
(declare-fun x3333 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x2400 () Int)
(declare-fun x1810 () Int)
(declare-fun x314 () Bool)
(declare-fun x556 () Int)
(declare-fun x3918 () Bool)
(declare-fun x2791 () Int)
(declare-fun x103 () Int)
(declare-fun x3632 () Int)
(declare-fun x1027 () Int)
(declare-fun x1130 () Int)
(declare-fun x1381 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x1988 () Int)
(declare-fun x800 () Int)
(declare-fun x2333 () Int)
(declare-fun x17 () Int)
(declare-fun x785 () Bool)
(declare-fun x1023 (Int) Int)
(declare-fun x87 () Int)
(declare-fun x3372 () Int)
(declare-fun x3491 () Int)
(declare-fun x135 () Int)
(declare-fun x1945 () Bool)
(declare-fun x3946 () Int)
(declare-fun x1291 () Int)
(declare-fun x1939 () Int)
(declare-fun x3813 () Bool)
(declare-fun x2508 () Bool)
(declare-fun x753 () Int)
(declare-fun x3208 () Int)
(declare-fun x639 () Int)
(declare-fun x1152 () Int)
(declare-fun x1868 () Int)
(declare-fun x732 () Int)
(declare-fun x2052 () Int)
(declare-fun x601 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x3305 () Bool)
(declare-fun x3972 () Bool)
(declare-fun x1447 (Int) Int)
(declare-fun x2592 () Bool)
(declare-fun x1331 () Int)
(declare-fun x3026 () Int)
(declare-fun x3471 () Bool)
(declare-fun x2519 () Int)
(declare-fun x526 () Int)
(declare-fun x1982 () Int)
(declare-fun x1016 () Bool)
(declare-fun x3468 () Int)
(declare-fun x1852 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x683 () Int)
(declare-fun x2126 () Int)
(declare-fun x317 () Int)
(declare-fun x736 () Int)
(declare-fun x4267 () Int)
(declare-fun x2010 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x3732 () Int)
(declare-fun x2221 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x322 () Int)
(declare-fun x1175 () Int)
(declare-fun x936 () Int)
(declare-fun x3174 () Bool)
(declare-fun x109 (Int) Int)
(declare-fun x899 () Int)
(declare-fun x3907 () Bool)
(declare-fun x3325 () Int)
(declare-fun x3811 () Bool)
(declare-fun x402 () Int)
(declare-fun x473 () Int)
(declare-fun x3142 () Int)
(declare-fun x1145 () Int)
(declare-fun x238 () Bool)
(declare-fun x1257 () Int)
(declare-fun x3745 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x251 () Int)
(declare-fun x2225 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x2461 () Int)
(declare-fun x2682 () Int)
(declare-fun x3013 () Int)
(declare-fun x3162 () Int)
(declare-fun x2272 () Int)
(declare-fun x721 () Int)
(declare-fun x290 () Int)
(declare-fun x1814 () Int)
(declare-fun x1984 () Int)
(declare-fun x3647 () Bool)
(declare-fun x3002 () Int)
(declare-fun x1714 () Int)
(declare-fun x1606 () Int)
(declare-fun x3794 () Bool)
(declare-fun x1106 () Int)
(declare-fun x2011 () Int)
(declare-fun x3967 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x359 () Int)
(declare-fun x2266 () Int)
(declare-fun x1842 () Int)
(declare-fun x4020 () Int)
(declare-fun x1251 () Int)
(declare-fun x395 () Int)
(declare-fun x133 () Int)
(declare-fun x3181 () Bool)
(declare-fun x1271 () Int)
(declare-fun x3396 () Int)
(declare-fun x279 () Int)
(declare-fun x1034 () Bool)
(declare-fun x3950 () Int)
(declare-fun x444 () Int)
(declare-fun x2617 () Int)
(declare-fun x619 () Int)
(declare-fun x3747 () Bool)
(declare-fun x334 () Bool)
(declare-fun x3637 () Int)
(declare-fun x2854 () Bool)
(declare-fun x1936 (Int) Int)
(declare-fun x2521 () Bool)
(declare-fun x1401 () Int)
(declare-fun x3696 (Int) Int)
(declare-fun x2394 () Int)
(declare-fun x1722 () Int)
(declare-fun x3205 () Int)
(declare-fun x1820 () Int)
(declare-fun x368 () Int)
(declare-fun x584 () Bool)
(declare-fun x1969 () Int)
(declare-fun x2740 () Int)
(declare-fun x407 () Int)
(declare-fun x1929 () Int)
(declare-fun x1032 () Int)
(declare-fun x2662 () Int)
(declare-fun x2989 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x2297 () Int)
(declare-fun x1700 () Bool)
(declare-fun x3001 () Int)
(declare-fun x243 () Int)
(declare-fun x2045 () Int)
(declare-fun x2637 () Int)
(declare-fun x2726 () Bool)
(declare-fun x1336 () Int)
(declare-fun x1382 () Bool)
(declare-fun x748 () Int)
(declare-fun x3040 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x685 () Int)
(declare-fun x765 () Int)
(declare-fun x1650 () Int)
(declare-fun x2493 (Int) Int)
(declare-fun x3115 () Int)
(declare-fun x1635 () Int)
(declare-fun x1222 () Bool)
(declare-fun x332 () Int)
(declare-fun x4226 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x3522 () Int)
(declare-fun x636 () Int)
(declare-fun x2437 () Bool)
(declare-fun x4199 () Bool)
(declare-fun x3750 () Int)
(declare-fun x3543 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1487 () Bool)
(declare-fun x433 () Int)
(declare-fun x2182 () Int)
(declare-fun x3768 () Int)
(declare-fun x3728 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x564 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x3203 () Int)
(declare-fun x1679 () Int)
(declare-fun x2557 () Int)
(declare-fun x3065 () Int)
(declare-fun x3622 () Int)
(declare-fun x613 () Bool)
(declare-fun x486 (Int) Int)
(declare-fun x4127 () Int)
(declare-fun x544 () Int)
(declare-fun x4165 () Int)
(declare-fun x2532 () Int)
(declare-fun x1625 () Bool)
(declare-fun x3893 () Int)
(declare-fun x1395 () Int)
(declare-fun x3070 () Bool)
(declare-fun x3392 () Int)
(declare-fun x333 () Int)
(declare-fun x2140 () Bool)
(declare-fun x2467 () Int)
(declare-fun x75 () Int)
(declare-fun x401 () Bool)
(declare-fun x2820 () Int)
(declare-fun x1971 () Bool)
(declare-fun x669 () Int)
(declare-fun x4210 () Int)
(declare-fun x2748 () Int)
(declare-fun x1856 () Int)
(declare-fun x1693 () Int)
(declare-fun x653 () Int)
(declare-fun x3506 () Int)
(declare-fun x1357 () Int)
(declare-fun x172 () Int)
(declare-fun x380 () Int)
(declare-fun x2240 () Int)
(declare-fun x1206 () Int)
(declare-fun x1506 (Int) Int)
(declare-fun x1758 () Int)
(declare-fun x4065 () Int)
(declare-fun x1771 () Bool)
(declare-fun x1136 () Int)
(declare-fun x1333 () Int)
(declare-fun x3280 () Int)
(declare-fun x649 () Int)
(declare-fun x876 () Int)
(declare-fun x1738 () Int)
(declare-fun x3842 () Int)
(declare-fun x1740 () Bool)
(declare-fun x623 () Int)
(declare-fun x382 () Int)
(declare-fun x2068 () Int)
(declare-fun x2430 () Bool)
(declare-fun x3807 () Int)
(declare-fun x1072 () Bool)
(declare-fun x4282 () Int)
(declare-fun x1056 () Int)
(declare-fun x463 () Int)
(declare-fun x2860 () Int)
(declare-fun x698 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x3844 () Int)
(declare-fun x1225 () Int)
(declare-fun x3324 () Int)
(declare-fun x4095 () Int)
(declare-fun x2942 () Int)
(declare-fun x3368 () Int)
(declare-fun x3561 () Int)
(declare-fun x616 (Int) Int)
(declare-fun x2414 () Int)
(declare-fun x3943 () Int)
(declare-fun x4023 () Int)
(declare-fun x432 () Int)
(declare-fun x598 () Int)
(declare-fun x233 () Bool)
(declare-fun x2857 (Int) Int)
(declare-fun x3365 () Int)
(declare-fun x421 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x2681 () Int)
(declare-fun x2413 () Bool)
(declare-fun x2159 (Int) Int)
(declare-fun x2729 () Int)
(declare-fun x492 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x3772 () Bool)
(declare-fun x4129 () Bool)
(declare-fun x1191 () Int)
(declare-fun x2346 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x4003 () Int)
(declare-fun x4012 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x4247 () Int)
(declare-fun x3276 () Int)
(declare-fun x3730 () Bool)
(declare-fun x494 () Bool)
(declare-fun x3331 () Int)
(declare-fun x555 () Bool)
(declare-fun x3227 () Bool)
(declare-fun x626 () Int)
(declare-fun x4192 () Int)
(declare-fun x466 () Int)
(declare-fun x558 () Int)
(declare-fun x1011 () Int)
(declare-fun x3166 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x691 () Int)
(declare-fun x603 () Int)
(declare-fun x2566 () Int)
(declare-fun x1941 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x439 () Int)
(declare-fun x2269 () Int)
(declare-fun x3319 () Bool)
(declare-fun x2774 () Int)
(declare-fun x4105 () Int)
(declare-fun x1431 () Int)
(declare-fun x2861 () Bool)
(declare-fun x1912 () Int)
(declare-fun x1872 () Bool)
(declare-fun x832 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x4280 () Int)
(declare-fun x1208 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x3552 () Int)
(declare-fun x369 () Bool)
(declare-fun x4194 () Int)
(declare-fun x510 () Int)
(declare-fun x2146 () Int)
(declare-fun x552 () Int)
(declare-fun x3273 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x2397 () Int)
(declare-fun x2479 () Bool)
(declare-fun x3989 () Int)
(declare-fun x1916 () Bool)
(declare-fun x236 () Int)
(declare-fun x455 () Int)
(declare-fun x1284 (Int) Int)
(declare-fun x2891 (Int) Int)
(declare-fun x4044 () Int)
(declare-fun x1848 (Int) Int)
(declare-fun x898 (Int Int Int Int Int) Int)
(declare-fun x1201 () Int)
(declare-fun x2089 () Int)
(declare-fun x2862 (Int) Int)
(declare-fun x3553 () Bool)
(declare-fun x1402 (Int) Int)
(declare-fun x2675 () Bool)
(declare-fun x3049 () Bool)
(declare-fun x164 () Int)
(declare-fun x4263 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x2265 () Int)
(declare-fun x3724 () Int)
(declare-fun x3334 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x505 () Int)
(declare-fun x1866 () Bool)
(declare-fun x4016 () Int)
(declare-fun x3113 () Int)
(declare-fun x679 () Int)
(declare-fun x3755 () Int)
(declare-fun x479 () Int)
(declare-fun x722 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1676 () Int)
(declare-fun x3819 () Bool)
(declare-fun x3336 () Int)
(declare-fun x1066 () Bool)
(declare-fun x2343 () Int)
(declare-fun x615 () Bool)
(declare-fun x2115 () Int)
(declare-fun x664 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x3274 () Int)
(declare-fun x2805 () Int)
(declare-fun x2917 () Int)
(declare-fun x4218 () Int)
(declare-fun x4078 () Int)
(declare-fun x3761 () Int)
(declare-fun x1095 () Int)
(declare-fun x504 () Int)
(declare-fun x4069 () Int)
(declare-fun x2941 () Int)
(declare-fun x2131 () Int)
(declare-fun x1919 () Int)
(declare-fun x3488 () Int)
(declare-fun x2053 () Int)
(declare-fun x3741 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x3654 (Int) Int)
(declare-fun x4147 () Int)
(declare-fun x3881 () Int)
(declare-fun x2722 () Int)
(declare-fun x1041 () Int)
(declare-fun x2086 () Int)
(declare-fun x1094 () Int)
(declare-fun x4122 () Bool)
(declare-fun x2035 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1241 () Int)
(declare-fun x174 () Bool)
(declare-fun x3980 () Int)
(declare-fun x2522 () Int)
(declare-fun x155 () Int)
(declare-fun x1964 () Int)
(declare-fun x139 () Int)
(declare-fun x2244 () Int)
(declare-fun x80 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1991 () Int)
(declare-fun x1216 () Int)
(declare-fun x2427 () Bool)
(declare-fun x1980 () Int)
(declare-fun x2273 () Bool)
(declare-fun x2650 () Int)
(declare-fun x2591 () Int)
(declare-fun x2324 () Int)
(declare-fun x1064 () Bool)
(declare-fun x2480 () Int)
(declare-fun x1809 () Bool)
(declare-fun x3860 () Int)
(declare-fun x1995 () Int)
(declare-fun x1712 () Int)
(declare-fun x45 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1458 () Int)
(declare-fun x677 () Int)
(declare-fun x2679 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x1672 () Int)
(declare-fun x4230 () Int)
(declare-fun x199 () Int)
(declare-fun x1482 () Int)
(declare-fun x1673 () Int)
(declare-fun x743 () Int)
(declare-fun x4125 () Bool)
(declare-fun x3386 () Int)
(declare-fun x2463 () Bool)
(declare-fun x2569 () Int)
(declare-fun x2706 () Int)
(declare-fun x2018 () Int)
(declare-fun x1755 () Bool)
(declare-fun x3665 () Int)
(declare-fun x2575 () Int)
(declare-fun x3853 () Int)
(declare-fun x2477 () Int)
(declare-fun x3532 () Int)
(declare-fun x3421 () Bool)
(declare-fun x192 () Int)
(declare-fun x3927 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1515 () Int)
(declare-fun x2199 () Int)
(declare-fun x3684 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x348 () Bool)
(declare-fun x1414 () Int)
(declare-fun x3332 () Int)
(declare-fun x3293 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x3211 () Int)
(declare-fun x2412 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x4143 () Int)
(declare-fun x3182 () Int)
(declare-fun x2421 () Int)
(declare-fun x3393 () Bool)
(declare-fun x1370 () Int)
(declare-fun x4087 () Int)
(declare-fun x991 () Int)
(declare-fun x3076 () Int)
(declare-fun x3292 () Int)
(declare-fun x1452 () Int)
(declare-fun x1100 () Int)
(declare-fun x3702 () Int)
(declare-fun x2108 () Bool)
(declare-fun x423 () Int)
(declare-fun x33 () Int)
(declare-fun x1665 () Bool)
(declare-fun x2500 () Int)
(declare-fun x1829 () Int)
(declare-fun x3298 () Int)
(declare-fun x3682 () Int)
(declare-fun x925 () Int)
(declare-fun x2632 () Bool)
(declare-fun x1174 () Int)
(declare-fun x3316 () Int)
(declare-fun x3299 () Int)
(declare-fun x2236 () Int)
(declare-fun x2804 () Int)
(declare-fun x854 () Int)
(declare-fun x934 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x3492 () Int)
(declare-fun x1834 () Int)
(declare-fun x1611 () Int)
(declare-fun x3838 () Int)
(declare-fun x540 () Int)
(declare-fun x2157 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x1620 () Int)
(declare-fun x436 () Int)
(declare-fun x77 () Int)
(declare-fun x1187 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1909 () Int)
(declare-fun x2472 () Int)
(declare-fun x2299 (Int) Int)
(declare-fun x189 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x3147 () Int)
(declare-fun x451 () Int)
(declare-fun x3330 () Bool)
(declare-fun x187 () Int)
(declare-fun x3909 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x900 () Bool)
(declare-fun x3687 () Int)
(declare-fun x79 () Int)
(declare-fun x814 () Int)
(declare-fun x4134 () Int)
(declare-fun x2226 (Int Int Int Int) Int)
(declare-fun x1993 () Int)
(declare-fun x989 () Int)
(declare-fun x138 () Int)
(declare-fun x144 () Int)
(declare-fun x1589 () Int)
(declare-fun x112 () Bool)
(declare-fun x3798 () Int)
(declare-fun x1664 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x3773 () Int)
(declare-fun x1113 () Int)
(declare-fun x1624 () Int)
(declare-fun x341 (Int) Int)
(declare-fun x1415 (Int) Int)
(declare-fun x420 () Int)
(declare-fun x717 () Int)
(declare-fun x1450 () Bool)
(declare-fun x3348 () Int)
(declare-fun x1581 () Int)
(declare-fun x3356 () Int)
(declare-fun x2217 () Int)
(declare-fun x2032 () Bool)
(declare-fun x779 () Bool)
(declare-fun x95 () Bool)
(declare-fun x774 () Int)
(declare-fun x146 () Int)
(declare-fun x3006 () Int)
(declare-fun x3384 () Bool)
(declare-fun x1474 () Int)
(declare-fun x2899 () Bool)
(declare-fun x4249 () Int)
(declare-fun x3740 () Int)
(declare-fun x2436 () Bool)
(declare-fun x1645 () Int)
(declare-fun x3902 () Int)
(declare-fun x1024 () Int)
(declare-fun x2312 () Int)
(declare-fun x123 () Int)
(declare-fun x3395 () Int)
(declare-fun x385 () Int)
(declare-fun x550 () Int)
(declare-fun x931 () Int)
(declare-fun x288 () Int)
(declare-fun x2737 () Int)
(declare-fun x3402 () Int)
(declare-fun x2734 () Int)
(declare-fun x3289 () Int)
(declare-fun x954 () Int)
(declare-fun x903 () Bool)
(declare-fun x3690 () Int)
(declare-fun x4294 () Bool)
(declare-fun x950 () Int)
(declare-fun x8 () Int)
(declare-fun x1301 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1582 () Int)
(declare-fun x724 () Int)
(declare-fun x3102 () Bool)
(declare-fun x2197 () Int)
(declare-fun x3104 () Int)
(declare-fun x4066 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x2833 () Int)
(declare-fun x3222 () Int)
(declare-fun x263 () Int)
(declare-fun x1184 () Bool)
(declare-fun x2262 () Int)
(declare-fun x156 () Bool)
(declare-fun x2006 () Int)
(declare-fun x1147 () Int)
(declare-fun x757 () Int)
(declare-fun x1009 () Bool)
(declare-fun x625 () Int)
(declare-fun x2393 () Bool)
(declare-fun x449 () Int)
(declare-fun x3955 () Int)
(declare-fun x1092 () Int)
(declare-fun x3285 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x3602 () Int)
(declare-fun x400 () Int)
(declare-fun x2654 () Int)
(declare-fun x1953 () Int)
(declare-fun x1575 () Int)
(declare-fun x1203 () Bool)
(declare-fun x1647 () Int)
(declare-fun x2778 () Int)
(declare-fun x3760 () Bool)
(declare-fun x3512 () Int)
(declare-fun x1550 () Int)
(declare-fun x1388 () Int)
(declare-fun x2049 () Int)
(declare-fun x384 () Int)
(declare-fun x1523 () Int)
(declare-fun x915 () Int)
(declare-fun x4084 () Int)
(declare-fun x1938 () Bool)
(declare-fun x844 () Int)
(declare-fun x2365 () Bool)
(declare-fun x2618 () Int)
(declare-fun x4203 () Int)
(declare-fun x3452 () Int)
(declare-fun x953 () Int)
(declare-fun x375 () Int)
(declare-fun x184 () Int)
(declare-fun x1876 () Int)
(declare-fun x4297 () Bool)
(declare-fun x4160 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x157 () Bool)
(declare-fun x281 () Bool)
(declare-fun x2444 () Int)
(declare-fun x2539 () Int)
(declare-fun x3434 () Int)
(declare-fun x3535 () Int)
(declare-fun x1770 () Int)
(declare-fun x966 () Int)
(declare-fun x2355 () Int)
(declare-fun x3626 () Int)
(declare-fun x2485 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x3640 () Int)
(declare-fun x2922 () Int)
(declare-fun x4064 () Int)
(declare-fun x3405 () Int)
(declare-fun x1663 () Int)
(declare-fun x3648 () Int)
(declare-fun x230 (Int) Int)
(declare-fun x2518 () Int)
(declare-fun x982 () Bool)
(declare-fun x2911 () Int)
(declare-fun x260 () Bool)
(declare-fun x124 () Bool)
(declare-fun x882 () Int)
(declare-fun x1614 () Int)
(declare-fun x578 () Int)
(declare-fun x1615 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x3230 () Int)
(declare-fun x617 () Int)
(declare-fun x1358 () Int)
(declare-fun x1010 () Int)
(declare-fun x2568 () Int)
(declare-fun x2677 () Bool)
(declare-fun x1671 () Int)
(declare-fun x350 () Int)
(declare-fun x976 () Int)
(declare-fun x1699 (Int) Int)
(declare-fun x2810 () Int)
(declare-fun x962 () Int)
(declare-fun x4149 () Int)
(declare-fun x3062 () Bool)
(declare-fun x26 () Int)
(declare-fun x3152 () Int)
(declare-fun x3041 () Bool)
(declare-fun x68 () Bool)
(declare-fun x501 () Int)
(declare-fun x1792 () Int)
(declare-fun x1354 () Int)
(declare-fun x530 () Int)
(declare-fun x4285 () Bool)
(declare-fun x2875 (Int) Int)
(declare-fun x475 () Int)
(declare-fun x344 () Int)
(declare-fun x2639 () Int)
(declare-fun x2735 () Bool)
(declare-fun x4135 () Int)
(declare-fun x325 () Int)
(declare-fun x3141 () Int)
(declare-fun x3929 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x1680 () Int)
(declare-fun x216 () Int)
(declare-fun x289 (Int) Int)
(declare-fun x3520 (Int) Int)
(declare-fun x3910 () Int)
(declare-fun x2986 () Bool)
(declare-fun x2610 () Int)
(declare-fun x777 () Int)
(declare-fun x4043 () Int)
(declare-fun x908 () Bool)
(declare-fun x1320 () Int)
(declare-fun x522 () Bool)
(declare-fun x2448 () Int)
(declare-fun x2874 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x921 () Int)
(declare-fun x960 () Int)
(declare-fun x2896 () Bool)
(declare-fun x1262 () Int)
(declare-fun x2311 () Int)
(declare-fun x1179 () Int)
(declare-fun x4220 () Int)
(declare-fun x4019 () Int)
(declare-fun x922 () Bool)
(declare-fun x4048 () Int)
(declare-fun x1424 () Int)
(declare-fun x3753 () Int)
(declare-fun x1741 () Int)
(declare-fun x200 () Int)
(declare-fun x376 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x3242 () Int)
(declare-fun x3612 () Int)
(declare-fun x3942 () Int)
(declare-fun x845 () Int)
(declare-fun x3482 () Int)
(declare-fun x3904 () Bool)
(declare-fun x3249 () Int)
(declare-fun x4198 () Int)
(declare-fun x733 () Int)
(declare-fun x1128 () Int)
(declare-fun x1950 () Int)
(declare-fun x874 () Int)
(declare-fun x3818 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1445 () Int)
(declare-fun x360 () Bool)
(declare-fun x768 () Bool)
(declare-fun x2873 () Int)
(declare-fun x3877 () Int)
(declare-fun x4046 () Bool)
(declare-fun x3423 () Int)
(declare-fun x4266 () Int)
(declare-fun x978 () Bool)
(declare-fun x4102 () Int)
(declare-fun x817 (Int) Int)
(declare-fun x535 () Bool)
(declare-fun x1702 () Int)
(declare-fun x3112 () Int)
(declare-fun x2665 () Bool)
(declare-fun x2769 () Int)
(declare-fun x151 () Bool)
(declare-fun x2345 () Int)
(declare-fun x1280 () Int)
(declare-fun x7 () Bool)
(declare-fun x987 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x4156 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1438 () Int)
(declare-fun x1163 () Int)
(declare-fun x2667 () Int)
(declare-fun x1607 () Bool)
(declare-fun x2104 () Int)
(declare-fun x1952 () Int)
(declare-fun x562 () Bool)
(declare-fun x3351 () Int)
(declare-fun x2173 () Bool)
(declare-fun x491 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x284 () Int)
(declare-fun x2353 () Bool)
(declare-fun x3688 () Int)
(declare-fun x3897 () Int)
(declare-fun x118 (Int) Int)
(declare-fun x2733 () Bool)
(declare-fun x2798 () Int)
(declare-fun x3186 (Int) Int)
(declare-fun x276 () Int)
(declare-fun x1654 () Bool)
(declare-fun x4113 () Int)
(declare-fun x3521 () Int)
(declare-fun x1902 () Bool)
(declare-fun x1 () Bool)
(declare-fun x662 () Int)
(declare-fun x3926 () Int)
(declare-fun x1143 () Int)
(declare-fun x3610 () Int)
(declare-fun x809 () Int)
(declare-fun x4166 () Bool)
(declare-fun x4287 () Int)
(declare-fun x798 () Bool)
(declare-fun x3028 () Int)
(declare-fun x1386 () Bool)
(declare-fun x204 () Bool)
(declare-fun x3188 () Int)
(declare-fun x1282 () Int)
(declare-fun x965 () Int)
(declare-fun x412 () Int)
(declare-fun x1555 () Int)
(declare-fun x4077 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1522 () Int)
(declare-fun x3941 () Int)
(declare-fun x1739 () Bool)
(declare-fun x830 () Int)
(declare-fun x3533 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x4217 () Int)
(declare-fun x1017 () Int)
(declare-fun x1121 () Int)
(declare-fun x28 () Int)
(declare-fun x3413 () Int)
(declare-fun x3094 () Bool)
(declare-fun x1959 () Int)
(declare-fun x821 () Int)
(declare-fun x450 () Int)
(declare-fun x1172 () Bool)
(declare-fun x3834 () Int)
(declare-fun x1828 () Int)
(declare-fun x569 () Int)
(declare-fun x2220 () Int)
(declare-fun x2849 () Int)
(declare-fun x3821 () Int)
(declare-fun x2594 () Bool)
(declare-fun x2624 () Int)
(declare-fun x3629 () Int)
(declare-fun x2613 () Int)
(declare-fun x720 () Int)
(declare-fun x3120 () Int)
(declare-fun x1328 (Int) Int)
(declare-fun x257 () Int)
(declare-fun x3017 () Int)
(declare-fun x3873 () Int)
(declare-fun x815 () Bool)
(declare-fun x851 () Bool)
(declare-fun x3465 () Int)
(declare-fun x892 () Bool)
(declare-fun x3953 () Int)
(declare-fun x595 () Int)
(declare-fun x345 () Bool)
(declare-fun x2391 () Int)
(declare-fun x712 () Int)
(declare-fun x246 () Int)
(declare-fun x731 () Bool)
(declare-fun x3307 () Int)
(declare-fun x2332 () Int)
(declare-fun x657 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2776 () Int)
(declare-fun x3193 () Int)
(declare-fun x3473 () Int)
(declare-fun x2455 () Int)
(declare-fun x2830 () Int)
(declare-fun x2407 () Int)
(declare-fun x99 () Int)
(declare-fun x478 () Bool)
(declare-fun x74 () Int)
(declare-fun x2965 (Int) Int)
(declare-fun x2076 () Int)
(declare-fun x2902 () Int)
(declare-fun x2389 () Int)
(declare-fun x2564 () Int)
(declare-fun x1649 () Bool)
(declare-fun x754 () Int)
(declare-fun x2638 () Int)
(declare-fun x303 () Int)
(declare-fun x2767 () Int)
(declare-fun x1537 () Int)
(declare-fun x3767 () Bool)
(declare-fun x2298 () Int)
(declare-fun x4250 () Int)
(declare-fun x1621 () Bool)
(declare-fun x306 () Int)
(declare-fun x2783 () Int)
(declare-fun x3010 () Int)
(declare-fun x3849 () Int)
(declare-fun x1644 () Bool)
(declare-fun x543 () Int)
(declare-fun x1087 () Int)
(declare-fun x3446 () Bool)
(declare-fun x3624 () Int)
(declare-fun x3672 () Int)
(declare-fun x2125 () Int)
(declare-fun x3195 () Bool)
(declare-fun x3322 (Int) Int)
(declare-fun x1098 () Bool)
(declare-fun x3357 () Int)
(declare-fun x641 () Int)
(declare-fun x4246 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x835 () Int)
(declare-fun x958 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x489 () Int)
(declare-fun x1736 (Int) Int)
(declare-fun x4168 () Int)
(declare-fun x735 () Int)
(declare-fun x4221 () Int)
(declare-fun x781 () Int)
(declare-fun x4061 () Int)
(declare-fun x4121 () Bool)
(declare-fun x2164 (Int) Int)
(declare-fun x1879 () Int)
(declare-fun x511 () Bool)
(declare-fun x4164 () Int)
(declare-fun x1020 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x1423 () Int)
(declare-fun x2836 () Int)
(declare-fun x2869 (Int) Int)
(declare-fun x3765 () Int)
(declare-fun x3770 () Int)
(declare-fun x2823 () Int)
(declare-fun x4099 () Int)
(declare-fun x4015 () Bool)
(declare-fun x618 () Int)
(declare-fun x3670 () Int)
(declare-fun x2746 () Bool)
(declare-fun x86 () Int)
(declare-fun x3679 () Int)
(declare-fun x3854 () Int)
(declare-fun x3295 () Int)
(declare-fun x3128 () Int)
(declare-fun x2012 () Int)
(declare-fun x4029 () Bool)
(declare-fun x1776 () Int)
(declare-fun x190 () Int)
(declare-fun x3259 () Bool)
(declare-fun x2001 () Bool)
(declare-fun x2641 () Int)
(declare-fun x393 () Int)
(declare-fun x694 () Int)
(declare-fun x737 () Int)
(declare-fun x4208 () Bool)
(declare-fun x824 () Int)
(declare-fun x1940 () Bool)
(declare-fun x3837 () Int)
(declare-fun x4063 () Int)
(declare-fun x3134 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x1217 () Int)
(declare-fun x787 () Int)
(declare-fun x4051 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x756 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x3806 () Int)
(declare-fun x2626 () Int)
(declare-fun x1352 () Int)
(declare-fun x3653 () Int)
(declare-fun x1074 () Int)
(declare-fun x1435 () Int)
(declare-fun x1917 () Int)
(declare-fun x3092 () Bool)
(declare-fun x2117 () Int)
(declare-fun x2630 () Int)
(declare-fun x2527 (Int) Int)
(declare-fun x848 () Int)
(declare-fun x2634 () Int)
(declare-fun x587 () Int)
(declare-fun x4229 () Int)
(declare-fun x4151 () Bool)
(declare-fun x3537 () Int)
(declare-fun x637 () Bool)
(declare-fun x2227 () Int)
(declare-fun x3655 () Int)
(declare-fun x3425 () Int)
(declare-fun x1688 () Bool)
(declare-fun x3178 () Int)
(declare-fun x352 () Int)
(declare-fun x3430 () Bool)
(declare-fun x4083 () Int)
(declare-fun x1629 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x4255 () Int)
(declare-fun x1799 () Int)
(declare-fun x2627 () Int)
(declare-fun x1526 () Int)
(declare-fun x3379 () Int)
(declare-fun x2907 () Bool)
(declare-fun x3707 () Bool)
(declare-fun x2877 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x3244 () Int)
(declare-fun x2635 () Bool)
(declare-fun x2655 () Int)
(declare-fun x4144 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x98 () Int)
(declare-fun x3606 () Int)
(declare-fun x1407 () Int)
(declare-fun x4272 () Bool)
(declare-fun x4223 () Int)
(declare-fun x3531 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x1025 () Int)
(declare-fun x594 () Int)
(declare-fun x2876 () Int)
(declare-fun x2102 () Bool)
(declare-fun x3669 () Bool)
(declare-fun x1391 () Int)
(declare-fun x1847 () Int)
(declare-fun x1604 () Int)
(declare-fun x1442 () Int)
(declare-fun x2278 () Int)
(declare-fun x2700 () Int)
(declare-fun x2710 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x3607 () Int)
(declare-fun x1480 () Bool)
(declare-fun x4140 () Int)
(declare-fun x3934 () Int)
(declare-fun x3924 () Int)
(declare-fun x1039 () Int)
(declare-fun x3659 () Int)
(declare-fun x1821 () Int)
(declare-fun x3149 () Int)
(declare-fun x944 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x2666 () Int)
(declare-fun x3263 () Int)
(declare-fun x3183 (Int) Int)
(declare-fun x3646 () Int)
(declare-fun x3502 () Int)
(declare-fun x1768 () Int)
(declare-fun x193 () Int)
(declare-fun x102 () Bool)
(declare-fun x4163 () Int)
(declare-fun x2528 () Int)
(declare-fun x964 () Bool)
(declare-fun x378 () Bool)
(declare-fun x4145 () Int)
(declare-fun x2745 () Int)
(declare-fun x2470 () Int)
(declare-fun x3644 () Int)
(declare-fun x566 () Bool)
(declare-fun x96 () Int)
(declare-fun x2239 () Int)
(declare-fun x3547 () Int)
(declare-fun x4176 () Int)
(declare-fun x523 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3039 () Int)
(declare-fun x3540 () Int)
(declare-fun x545 () Int)
(declare-fun x1363 () Bool)
(declare-fun x2988 () Int)
(declare-fun x3966 () Int)
(declare-fun x2186 () Int)
(declare-fun x4224 () Int)
(declare-fun x883 () Bool)
(declare-fun x4186 () Int)
(declare-fun x3698 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x2254 () Int)
(declare-fun x1512 () Int)
(declare-fun x997 () Int)
(declare-fun x1914 () Int)
(declare-fun x1990 () Bool)
(declare-fun x838 () Int)
(declare-fun x2757 () Int)
(declare-fun x1437 () Int)
(declare-fun x1451 (Int) Int)
(declare-fun x3817 () Int)
(declare-fun x843 () Int)
(declare-fun x1958 () Int)
(declare-fun x1931 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x4052 () Int)
(declare-fun x3343 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x2202 () Int)
(declare-fun x912 () Int)
(declare-fun x2883 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1181 () Int)
(declare-fun x2405 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x2587 () Int)
(declare-fun x3892 () Bool)
(declare-fun x3999 () Int)
(declare-fun x2870 () Bool)
(declare-fun x2082 (Int) Int)
(declare-fun x2742 () Int)
(declare-fun x642 () Int)
(declare-fun x3266 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x2241 () Int)
(declare-fun x3480 () Bool)
(declare-fun x3962 () Int)
(declare-fun x575 () Int)
(declare-fun x4187 () Bool)
(declare-fun x1571 () Int)
(declare-fun x2334 () Bool)
(declare-fun x2620 () Int)
(declare-fun x3800 () Bool)
(declare-fun x373 () Int)
(declare-fun x3081 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x3093 () Int)
(declare-fun x2167 () Int)
(declare-fun x134 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x3408 () Int)
(declare-fun x2985 () Int)
(declare-fun x3524 () Int)
(declare-fun x1008 () Int)
(declare-fun x2705 () Int)
(declare-fun x1409 () Bool)
(declare-fun x2728 () Int)
(declare-fun x3562 () Int)
(declare-fun x1311 () Int)
(declare-fun x1572 () Int)
(declare-fun x4062 () Bool)
(declare-fun x3713 () Int)
(declare-fun x1534 () Int)
(declare-fun x3362 () Int)
(declare-fun x1329 () Bool)
(declare-fun x4277 () Int)
(declare-fun x1558 () Int)
(declare-fun x860 () Int)
(declare-fun x1924 () Bool)
(declare-fun x878 () Bool)
(declare-fun x3828 () Int)
(declare-fun x51 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x2809 () Int)
(declare-fun x342 (Int) Int)
(declare-fun x2772 () Int)
(declare-fun x1685 (Int) Int)
(declare-fun x2300 () Int)
(declare-fun x2183 () Int)
(declare-fun x2007 () Int)
(declare-fun x536 () Int)
(declare-fun x3845 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1609 () Int)
(declare-fun x3100 () Int)
(declare-fun x1683 () Int)
(declare-fun x1710 () Int)
(declare-fun x596 () Int)
(declare-fun x458 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x3312 () Int)
(declare-fun x3625 () Int)
(declare-fun x514 () Int)
(declare-fun x372 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x620 () Bool)
(declare-fun x171 () Int)
(declare-fun x1500 () Int)
(declare-fun x2271 () Int)
(declare-fun x3766 () Bool)
(declare-fun x2653 () Int)
(declare-fun x3579 () Int)
(declare-fun x2927 () Int)
(declare-fun x3369 () Int)
(declare-fun x1759 () Int)
(declare-fun x4235 () Bool)
(declare-fun x3279 () Int)
(declare-fun x2968 () Int)
(declare-fun x2150 () Int)
(declare-fun x3956 () Int)
(declare-fun x2446 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1229 (Int) Bool)
(declare-fun x3419 (Int) Int)
(declare-fun x3414 () Int)
(declare-fun x2859 () Int)
(declare-fun x816 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x3150 () Int)
(declare-fun x2336 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x2636 () Int)
(declare-fun x2824 () Int)
(declare-fun x3954 () Int)
(declare-fun x181 () Int)
(declare-fun x426 () Int)
(declare-fun x2100 () Int)
(declare-fun x1288 () Int)
(declare-fun x394 () Int)
(declare-fun x29 () Bool)
(declare-fun x2535 () Int)
(declare-fun x635 () Int)
(declare-fun x3963 () Int)
(declare-fun x2807 () Int)
(declare-fun x675 () Int)
(declare-fun x1189 () Bool)
(declare-fun x2496 (Int) Int)
(declare-fun x904 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x55 () Int)
(declare-fun x245 () Int)
(declare-fun x517 () Int)
(declare-fun x1111 () Int)
(declare-fun x2128 () Int)
(declare-fun x136 () Int)
(declare-fun x2920 () Int)
(declare-fun x846 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x3736 () Bool)
(declare-fun x337 () Int)
(declare-fun x487 () Int)
(declare-fun x3631 () Bool)
(declare-fun x119 () Int)
(declare-fun x101 () Int)
(declare-fun x2136 () Int)
(declare-fun x3915 () Int)
(declare-fun x1657 () Int)
(declare-fun x956 () Int)
(declare-fun x2490 () Int)
(declare-fun x952 () Int)
(declare-fun x2143 () Int)
(declare-fun x3940 () Int)
(declare-fun x3217 () Int)
(declare-fun x2588 () Int)
(declare-fun x3361 () Int)
(declare-fun x2435 () Int)
(declare-fun x176 () Int)
(declare-fun x1499 () Int)
(declare-fun x1777 () Int)
(declare-fun x2245 (Int) Int)
(declare-fun x2606 () Bool)
(declare-fun x3623 () Int)
(declare-fun x3847 () Int)
(declare-fun x117 () Int)
(declare-fun x1457 () Bool)
(declare-fun x975 () Int)
(declare-fun x2097 () Int)
(declare-fun x2301 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x1160 () Int)
(declare-fun x2375 () Int)
(declare-fun x3355 () Int)
(declare-fun x4076 () Int)
(declare-fun x3342 () Int)
(declare-fun x3380 () Int)
(declare-fun x1213 () Int)
(declare-fun x2302 () Int)
(declare-fun x383 () Bool)
(declare-fun x1078 () Int)
(declare-fun x3871 () Int)
(declare-fun x520 () Int)
(declare-fun x4139 () Int)
(declare-fun x1985 () Int)
(declare-fun x3969 () Int)
(declare-fun x725 () Int)
(declare-fun x4071 () Int)
(declare-fun x4031 () Int)
(declare-fun x3890 () Int)
(declare-fun x1221 () Int)
(declare-fun x4098 () Int)
(declare-fun x2247 () Int)
(declare-fun x1099 () Bool)
(declare-fun x3061 () Int)
(declare-fun x2282 () Int)
(declare-fun x901 () Bool)
(declare-fun x2609 () Int)
(declare-fun x3008 () Int)
(declare-fun x1275 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1548 () Int)
(declare-fun x272 () Int)
(declare-fun x782 () Int)
(declare-fun x2747 () Int)
(declare-fun x2103 () Int)
(declare-fun x2329 () Int)
(declare-fun x3584 () Int)
(declare-fun x329 () Int)
(declare-fun x1080 () Int)
(declare-fun x88 () Int)
(declare-fun x739 () Bool)
(declare-fun x255 () Int)
(declare-fun x1427 (Int) Int)
(declare-fun x128 () Int)
(declare-fun x1994 () Bool)
(declare-fun x744 () Int)
(declare-fun x195 () Int)
(declare-fun x3284 () Int)
(declare-fun x2471 () Bool)
(declare-fun x894 () Int)
(declare-fun x2661 () Int)
(declare-fun x3988 () Int)
(declare-fun x822 () Int)
(declare-fun x2727 () Bool)
(declare-fun x968 () Bool)
(declare-fun x551 () Int)
(declare-fun x1600 () Int)
(declare-fun x3243 () Bool)
(declare-fun x3220 (Int) Int)
(declare-fun x4259 () Int)
(declare-fun x554 () Int)
(declare-fun x4157 () Bool)
(declare-fun x470 () Int)
(declare-fun x589 () Int)
(declare-fun x3048 () Int)
(declare-fun x3157 () Int)
(declare-fun x3441 () Int)
(declare-fun x1943 () Int)
(declare-fun x3518 () Int)
(declare-fun x1192 (Int) Int)
(declare-fun x2137 () Int)
(declare-fun x1894 () Int)
(declare-fun x3993 () Int)
(declare-fun x229 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2562 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x419 () Int)
(declare-fun x1899 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1528 () Int)
(declare-fun x4228 () Int)
(declare-fun x1468 () Int)
(declare-fun x2709 () Bool)
(declare-fun x1303 () Int)
(declare-fun x2668 () Bool)
(declare-fun x4232 () Int)
(declare-fun x3894 () Int)
(declare-fun x3424 () Int)
(declare-fun x1129 () Int)
(declare-fun x3439 () Bool)
(declare-fun x3883 () Int)
(declare-fun x69 () Bool)
(declare-fun x1323 () Int)
(declare-fun x3237 () Int)
(declare-fun x495 () Int)
(declare-fun x3456 () Int)
(declare-fun x4059 () Int)
(declare-fun x2233 () Int)
(declare-fun x2835 () Bool)
(declare-fun x3172 () Int)
(declare-fun x1709 () Int)
(declare-fun x4245 () Bool)
(declare-fun x1786 () Int)
(declare-fun x1653 () Int)
(declare-fun x2309 () Int)
(declare-fun x3603 () Int)
(declare-fun x1052 () Bool)
(declare-fun x592 () Int)
(declare-fun x1440 () Int)
(declare-fun x315 () Bool)
(declare-fun x1061 () Int)
(declare-fun x452 () Int)
(declare-fun x1070 () Int)
(declare-fun x863 () Bool)
(declare-fun x1345 () Int)
(declare-fun x1355 () Int)
(declare-fun x527 () Int)
(declare-fun x2589 () Int)
(declare-fun x767 () Bool)
(declare-fun x2322 () Int)
(declare-fun x62 () Int)
(declare-fun x4289 () Int)
(declare-fun x3122 () Bool)
(declare-fun x1459 () Int)
(declare-fun x4204 () Int)
(declare-fun x1565 () Bool)
(declare-fun x2152 () Int)
(declare-fun x2939 () Bool)
(declare-fun x370 () Int)
(declare-fun x3559 () Bool)
(declare-fun x13 () Bool)
(declare-fun x2775 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1578 () Int)
(declare-fun x2951 () Bool)
(declare-fun x2372 () Int)
(declare-fun x3055 () Int)
(declare-fun x2782 () Int)
(declare-fun x1183 () Int)
(declare-fun x2426 () Int)
(declare-fun x3716 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1230 () Int)
(declare-fun x857 () Int)
(declare-fun x3851 () Int)
(declare-fun x3645 () Int)
(declare-fun x2509 () Bool)
(declare-fun x3250 () Int)
(declare-fun x2133 () Int)
(declare-fun x3349 () Int)
(declare-fun x1508 () Int)
(declare-fun x3053 () Int)
(declare-fun x1851 () Int)
(declare-fun x56 () Bool)
(declare-fun x3394 () Int)
(declare-fun x301 () Int)
(declare-fun x4264 () Int)
(declare-fun x283 () Int)
(declare-fun x2034 (Int) Int)
(declare-fun x3169 () Int)
(declare-fun x1178 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x3573 () Int)
(declare-fun x703 () Int)
(declare-fun x4017 () Int)
(declare-fun x1897 () Int)
(declare-fun x2958 () Bool)
(declare-fun x2216 () Int)
(declare-fun x3432 () Int)
(declare-fun x2794 () Bool)
(declare-fun x2937 () Int)
(declare-fun x3965 () Int)
(declare-fun x1118 () Bool)
(declare-fun x3525 () Int)
(declare-fun x3597 () Int)
(declare-fun x1976 () Int)
(declare-fun x1156 () Int)
(declare-fun x3000 () Int)
(declare-fun x160 () Int)
(declare-fun x3192 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1838 () Int)
(declare-fun x269 () Int)
(declare-fun x864 () Int)
(declare-fun x2825 () Int)
(declare-fun x627 () Int)
(declare-fun x2033 () Int)
(declare-fun x3447 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x3641 () Int)
(declare-fun x3297 () Int)
(declare-fun x3519 () Bool)
(declare-fun x3196 () Int)
(declare-fun x1805 () Int)
(declare-fun x1520 () Int)
(declare-fun x959 () Int)
(declare-fun x1403 () Int)
(declare-fun x2456 () Int)
(declare-fun x2976 () Bool)
(declare-fun x752 () Int)
(declare-fun x4182 () Int)
(declare-fun x4097 () Int)
(declare-fun x488 () Bool)
(declare-fun x1456 () Int)
(declare-fun x2160 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x1913 () Int)
(declare-fun x209 () Bool)
(declare-fun x2250 () Int)
(declare-fun x3202 () Int)
(declare-fun x1598 () Int)
(declare-fun x605 () Int)
(declare-fun x3880 () Int)
(declare-fun x829 () Int)
(declare-fun x770 () Int)
(declare-fun x1057 () Int)
(declare-fun x4153 () Bool)
(declare-fun x3005 () Int)
(declare-fun x3235 () Int)
(declare-fun x2718 () Bool)
(declare-fun x644 () Int)
(declare-fun x1154 () Int)
(declare-fun x911 () Int)
(declare-fun x2358 () Bool)
(declare-fun x1013 () Int)
(declare-fun x871 () Int)
(declare-fun x865 () Int)
(declare-fun x3444 () Int)
(declare-fun x30 () Int)
(declare-fun x2924 () Int)
(declare-fun x130 () Int)
(declare-fun x3478 () Int)
(declare-fun x1825 () Bool)
(declare-fun x2736 () Int)
(declare-fun x2567 () Bool)
(declare-fun x3709 () Int)
(declare-fun x1925 () Int)
(declare-fun x3686 () Int)
(declare-fun x3123 () Int)
(declare-fun x4007 (Int) Int)
(declare-fun x416 () Bool)
(declare-fun x116 () Int)
(declare-fun x398 () Bool)
(declare-fun x888 () Int)
(declare-fun x3467 () Bool)
(declare-fun x3718 () Int)
(declare-fun x1505 () Bool)
(declare-fun x1800 () Int)
(declare-fun x1256 () Int)
(declare-fun x1590 () Int)
(declare-fun x593 () Int)
(declare-fun x825 () Int)
(declare-fun x3771 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1325 () Int)
(declare-fun x234 () Int)
(declare-fun x1586 () Int)
(declare-fun x930 () Bool)
(declare-fun x532 () Bool)
(declare-fun x2827 () Int)
(declare-fun x3986 () Bool)
(declare-fun x1443 () Int)
(declare-fun x525 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x3494 () Int)
(declare-fun x1822 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x1326 () Int)
(declare-fun x3987 () Bool)
(declare-fun x4150 () Int)
(declare-fun x457 () Int)
(declare-fun x3937 () Bool)
(declare-fun x467 () Int)
(declare-fun x877 () Int)
(declare-fun x2051 () Bool)
(declare-fun x3099 () Int)
(declare-fun x2914 () Int)
(declare-fun x256 () Bool)
(declare-fun x690 () Int)
(declare-fun x2253 () Bool)
(declare-fun x374 () Int)
(declare-fun x3477 () Bool)
(declare-fun x4200 () Int)
(declare-fun x1640 () Int)
(declare-fun x3078 () Int)
(declare-fun x2717 () Int)
(declare-fun x3011 () Int)
(declare-fun x165 () Int)
(declare-fun x2320 () Bool)
(declare-fun x3024 () Int)
(declare-fun x4067 () Bool)
(declare-fun x1249 () Int)
(declare-fun x3281 () Bool)
(declare-fun x5 () Bool)
(declare-fun x2450 () Int)
(declare-fun x2491 () Int)
(declare-fun x2499 (Int) Int)
(declare-fun x3781 () Int)
(declare-fun x646 () Int)
(declare-fun x1588 () Int)
(declare-fun x324 () Int)
(declare-fun x3337 () Bool)
(declare-fun x606 () Int)
(declare-fun x1176 () Int)
(declare-fun x673 () Bool)
(declare-fun x2124 () Int)
(declare-fun x3505 () Bool)
(declare-fun x974 () Int)
(declare-fun x1949 () Int)
(declare-fun x3466 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x2725 () Int)
(declare-fun x2492 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x784 () Bool)
(declare-fun x4001 () Int)
(declare-fun x1667 () Bool)
(declare-fun x2936 () Int)
(declare-fun x366 () Int)
(declare-fun x203 () Int)
(declare-fun x2925 () Int)
(declare-fun x1162 () Int)
(declare-fun x390 () Int)
(declare-fun x2623 () Int)
(declare-fun x3269 () Int)
(declare-fun x583 () Bool)
(declare-fun x275 () Int)
(declare-fun x3406 () Int)
(declare-fun x1979 () Bool)
(declare-fun x3850 () Int)
(declare-fun x1573 () Int)
(declare-fun x3187 () Int)
(declare-fun x3052 () Int)
(declare-fun x3788 () Int)
(declare-fun x1065 () Bool)
(declare-fun x153 () Int)
(declare-fun x3107 () Bool)
(declare-fun x751 () Int)
(declare-fun x483 () Bool)
(declare-fun x2628 () Int)
(declare-fun x3634 () Bool)
(declare-fun x296 () Int)
(declare-fun x2866 () Int)
(declare-fun x1975 () Int)
(declare-fun x1071 () Int)
(declare-fun x4288 () Int)
(declare-fun x3889 () Bool)
(declare-fun x4293 () Int)
(declare-fun x386 () Int)
(declare-fun x3437 () Bool)
(define-fun x1713 ((x2946 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2946) (>= x2946 0)) x2946 (- x2946 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x988 ((x2946 Int)) Int (ite (and (< x2946 0) (>= x2946 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x2946 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2946))
(define-fun x881 ((x1532 Int)) Bool (and (>= x1532 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1532)))
(define-fun x1570 ((x1532 Int)) Bool (and (= (x265 x1532 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1532) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1532) x1532)))
(define-fun x389 ((x1532 Int)) Bool (and (= 0 (x265 x1532 0)) (= (x265 0 x1532) 0)))
(define-fun x856 ((x1532 Int)) Bool (= (x265 x1532 x1532) x1532))
(define-fun x862 ((x1532 Int)) Bool (and (x856 x1532) (x1570 x1532) (x389 x1532)))
(define-fun x3920 ((x1532 Int) (x219 Int)) Bool (= (x265 x1532 x219) (x265 x219 x1532)))
(define-fun x1390 ((x1532 Int) (x219 Int)) Bool (and (=> (>= x1532 0) (>= x1532 (x265 x1532 x219))) (<= 0 (x265 x1532 x219)) (=> (>= x219 0) (<= (x265 x1532 x219) x219))))
(define-fun x1250 ((x1532 Int) (x219 Int)) Bool (and (x1390 x1532 x219) (x3920 x1532 x219)))
(define-fun x4241 ((x1532 Int)) Bool (= (mod x1532 2) (x265 x1532 1)))
(define-fun x1735 ((x1532 Int)) Bool (and (x4241 x1532) (x1250 x1532 1)))
(define-fun x3870 ((x1532 Int)) Bool (= (x265 x1532 127) (mod x1532 128)))
(define-fun x1517 ((x1532 Int)) Bool (and (x3870 x1532) (x1250 x1532 127)))
(define-fun x3575 ((x1532 Int)) Bool (= (mod x1532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x1532 256) (x265 x1532 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(define-fun x3043 ((x1532 Int)) Bool (and (x1250 x1532 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x3575 x1532)))
(define-fun x2696 ((x1532 Int)) Bool (= (mod x1532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x265 x1532 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x1532 32))))
(define-fun x320 ((x1532 Int)) Bool (and (x2696 x1532) (x1250 x1532 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x3699 ((x1532 Int)) Bool (= (x265 x1532 26959946667150639794667015087019630673637144422540572481103610249215) (mod x1532 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x741 ((x1532 Int)) Bool (and (x1250 x1532 26959946667150639794667015087019630673637144422540572481103610249215) (x3699 x1532)))
(define-fun x3200 ((x1639 Int)) Int 0)
(define-fun x2926 ((x1639 Int)) Int 0)
(define-fun x4060 ((x1639 Int)) Int 0)
(define-fun x2232 ((x1639 Int)) Int 0)
(define-fun x1826 ((x1639 Int)) Int (ite (> x855 x1639) (x1725 x1639) 0))
(define-fun x1417 ((x1639 Int)) Int (ite (< x1639 x4145) (x3749 x1639) 0))
(define-fun x3981 ((x1639 Int)) Int (ite (< x1639 x2881) (x1328 x1639) 0))
(define-fun x1772 ((x1639 Int)) Int (ite (> x4243 x1639) (x2159 x1639) 0))
(define-fun x1465 ((x1639 Int)) Int (ite (> x28 x1639) (x1687 x1639) 0))
(define-fun x947 ((x1639 Int)) Int (ite (< x1639 x2530) (x1497 x1639) 0))
(define-fun x1425 ((x1639 Int)) Int (ite (> x211 x1639) (x2082 x1639) 0))
(define-fun x3869 ((x1639 Int)) Int (ite (> x3612 x1639) (x3654 x1639) 0))
(define-fun x1668 ((x1639 Int)) Int (ite (> x703 x1639) (x2493 x1639) 0))
(define-fun x3179 ((x1639 Int)) Int (ite (< x1639 x2571) (x2210 x1639) 0))
(define-fun x2995 ((x1639 Int)) Int (ite (> x285 x1639) (x3322 x1639) 0))
(define-fun x1264 ((x1639 Int)) Int (ite (> x3501 x1639) (x2875 x1639) 0))
(define-fun x104 ((x1639 Int)) Int (ite (> x1652 x1639) (x1377 x1639) 0))
(define-fun x4167 ((x1639 Int)) Int (ite (> x1252 x1639) (x3381 x1639) 0))
(define-fun x170 ((x1639 Int)) Int 0)
(define-fun x1696 ((x1639 Int)) Int 0)
(define-fun x1343 ((x1639 Int)) Int 0)
(define-fun x654 ((x1639 Int)) Int 0)
(define-fun x2987 ((x1639 Int)) Int 0)
(define-fun x3363 ((x1639 Int)) Int 0)
(define-fun x414 ((x1639 Int)) Int 0)
(define-fun x4089 ((x1639 Int)) Int 0)
(define-fun x295 ((x1639 Int)) Int 0)
(define-fun x836 ((x1639 Int)) Int 0)
(define-fun x3507 ((x1639 Int)) Int 0)
(define-fun x2234 ((x1639 Int)) Int 0)
(define-fun x4108 ((x1639 Int)) Int 0)
(define-fun x2187 ((x1639 Int)) Int 0)
(define-fun x2803 ((x1639 Int)) Int 0)
(define-fun x4055 ((x1639 Int)) Int 0)
(define-fun x764 ((x1639 Int)) Int 0)
(define-fun x1960 ((x1639 Int)) Int 0)
(define-fun x2536 ((x1639 Int)) Int 0)
(define-fun x129 ((x1639 Int)) Int 0)
(define-fun x839 ((x1639 Int)) Int 0)
(define-fun x249 ((x1639 Int)) Int 0)
(define-fun x1790 ((x1639 Int)) Int 0)
(define-fun x1316 ((x1639 Int)) Int 0)
(define-fun x3721 ((x1639 Int)) Int 0)
(define-fun x671 ((x1639 Int)) Int 0)
(define-fun x1274 ((x1639 Int)) Int 0)
(define-fun x1658 ((x1639 Int)) Int 0)
(define-fun x1426 ((x1639 Int)) Int 0)
(define-fun x4101 ((x1639 Int)) Int 0)
(define-fun x1797 ((x1639 Int)) Int 0)
(define-fun x2811 ((x1639 Int)) Int 0)
(define-fun x21 ((x1639 Int)) Int 0)
(define-fun x3189 ((x1639 Int)) Int 0)
(define-fun x4133 ((x1639 Int)) Int 0)
(define-fun x2643 ((x1639 Int)) Int 0)
(define-fun x941 ((x1639 Int)) Int 0)
(define-fun x1587 ((x1639 Int)) Int 0)
(define-fun x422 ((x1639 Int)) Int 0)
(define-fun x4159 ((x1639 Int)) Int 0)
(define-fun x2515 ((x1639 Int)) Int 0)
(define-fun x3073 ((x1639 Int)) Int 0)
(define-fun x1018 ((x1639 Int)) Int 0)
(define-fun x1077 ((x1639 Int)) Int 0)
(define-fun x201 ((x1639 Int)) Int 0)
(define-fun x3159 ((x1639 Int)) Int 0)
(define-fun x471 ((x1639 Int)) Int 0)
(define-fun x1966 ((x1639 Int)) Int 0)
(define-fun x3812 ((x1639 Int)) Int 0)
(define-fun x1559 ((x1639 Int)) Int 0)
(define-fun x1727 ((x1639 Int)) Int 0)
(define-fun x3087 ((x1639 Int)) Int 0)
(define-fun x2533 ((x1639 Int)) Int 0)
(define-fun x46 ((x1639 Int)) Int 0)
(define-fun x2596 ((x1639 Int)) Int 0)
(define-fun x2174 ((x1639 Int)) Int 0)
(define-fun x2659 ((x1639 Int)) Int 0)
(define-fun x1947 ((x1639 Int)) Int 0)
(define-fun x3068 ((x1639 Int)) Int 0)
(define-fun x861 ((x1639 Int)) Int 0)
(define-fun x2408 ((x1639 Int)) Int 0)
(define-fun x1898 ((x1639 Int)) Int 0)
(define-fun x464 ((x1639 Int)) Int 0)
(define-fun x2548 ((x1639 Int)) Int 0)
(define-fun x711 ((x1639 Int)) Int 0)
(define-fun x2766 ((x1639 Int)) Int 0)
(define-fun x1063 ((x1639 Int)) Int 0)
(define-fun x4269 ((x1639 Int)) Int 0)
(define-fun x3493 ((x1639 Int)) Int 0)
(define-fun x1518 ((x1639 Int)) Int 0)
(define-fun x4035 ((x1639 Int)) Int 0)
(define-fun x22 ((x1639 Int)) Int 0)
(define-fun x3639 ((x1639 Int)) Int 0)
(define-fun x19 ((x1639 Int)) Int 0)
(define-fun x2132 ((x1639 Int)) Int 0)
(define-fun x3598 ((x1639 Int)) Int 0)
(define-fun x1144 ((x1639 Int)) Int 0)
(define-fun x3435 ((x1639 Int)) Int 0)
(define-fun x1090 ((x1639 Int)) Int 0)
(define-fun x2584 ((x1639 Int)) Int 0)
(define-fun x4103 ((x1639 Int)) Int 0)
(define-fun x2699 ((x1639 Int)) Int 0)
(define-fun x60 ((x1639 Int)) Int 0)
(define-fun x3857 ((x1639 Int)) Int 0)
(define-fun x2185 ((x1639 Int)) Int 0)
(define-fun x713 ((x1639 Int)) Int 0)
(define-fun x3251 ((x1639 Int)) Int 0)
(define-fun x2395 ((x1639 Int)) Int 0)
(define-fun x3103 ((x1639 Int)) Int 0)
(define-fun x120 ((x1639 Int)) Int 0)
(define-fun x1583 ((x1639 Int)) Int (ite (= x3511 x1639) x2262 (x3220 x1639)))
(define-fun x2310 ((x1639 Int)) Int (ite (= x1639 x1672) x2155 (x1583 x1639)))
(define-fun x1413 ((x1639 Int)) Int (ite (= 128 x1639) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x4133 x1639)))
(define-fun x3776 ((x1639 Int)) Int (ite (= 132 x1639) x3685 (x1413 x1639)))
(define-fun x497 ((x1639 Int)) Int (ite (= 0 x1639) x661 (x1833 x1639)))
(define-fun x3727 ((x1639 Int)) Int (ite (= x1639 128) x661 (x3776 x1639)))
(define-fun x1824 ((x1639 Int)) Int (ite (= x1639 0) x2843 (x1833 x1639)))
(define-fun x2037 ((x1639 Int)) Int (ite (= 128 x1639) x2843 (x3776 x1639)))
(define-fun x1196 ((x1639 Int)) Int (ite (= x1639 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x4133 x1639)))
(define-fun x611 ((x1639 Int)) Int (ite (= x1639 132) x3685 (x1196 x1639)))
(define-fun x2417 ((x1639 Int)) Int (ite (= x1639 0) x4134 (x3385 x1639)))
(define-fun x34 ((x1639 Int)) Int (ite (= 128 x1639) x4134 (x611 x1639)))
(define-fun x1986 ((x1639 Int)) Int (ite (= x1639 0) x2843 (x3385 x1639)))
(define-fun x4177 ((x1639 Int)) Int (ite (= 128 x1639) x2843 (x611 x1639)))
(define-fun x2724 ((x1639 Int)) Int (ite x2899 (ite x4104 (x34 x1639) (x4177 x1639)) (ite x377 (x3727 x1639) (x2037 x1639))))
(define-fun x4004 ((x1639 Int)) Int (ite (= x1639 x4203) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x2724 x1639)))
(define-fun x963 ((x1639 Int)) Int (ite (= x1721 x1639) x1672 (x4004 x1639)))
(define-fun x4024 ((x1639 Int)) Int (ite (= x1639 x1672) x2322 (x2310 x1639)))
(define-fun x2428 ((x1639 Int)) Int (ite (= x1639 x773) x251 (x4024 x1639)))
(define-fun x4205 ((x1639 Int)) Int (ite (= x808 x1639) x3535 (x1830 x1639)))
(define-fun x2608 ((x1639 Int)) Int (ite (= x1639 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2132 x1639)))
(define-fun x2935 ((x1639 Int)) Int (ite (= x1639 132) x3396 (x2608 x1639)))
(define-fun x2560 ((x1639 Int)) Int (ite (= x1639 164) x732 (x2935 x1639)))
(define-fun x3824 ((x1639 Int)) Int (ite (= x1639 196) x1613 (x2560 x1639)))
(define-fun x3500 ((x1639 Int)) Int (ite (= x1639 228) x3398 (x3824 x1639)))
(define-fun x227 ((x1639 Int)) Int (ite (= 128 x1639) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x2132 x1639)))
(define-fun x2078 ((x1639 Int)) Int (ite (= 132 x1639) x3877 (x227 x1639)))
(define-fun x1684 ((x1639 Int)) Int (ite (= 164 x1639) 128 (x2078 x1639)))
(define-fun x65 ((x1639 Int)) Int (ite (= x1639 260) x4270 (x1684 x1639)))
(define-fun x2398 ((x1639 Int)) Int (ite (= 292 x1639) x3515 (x65 x1639)))
(define-fun x3154 ((x1639 Int)) Int (ite (= x1639 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x2132 x1639)))
(define-fun x340 ((x1639 Int)) Int (ite (= x1639 132) x665 (x3154 x1639)))
(define-fun x2563 ((x1639 Int)) Int (ite (= x1639 164) 128 (x340 x1639)))
(define-fun x1351 ((x1639 Int)) Int (ite (= x1639 260) x857 (x2563 x1639)))
(define-fun x2841 ((x1639 Int)) Int (ite (= x1639 292) x2611 (x1351 x1639)))
(define-fun x2601 ((x1639 Int)) Int (ite (= x1639 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2132 x1639)))
(define-fun x2304 ((x1639 Int)) Int (ite (= 132 x1639) x3835 (x2601 x1639)))
(define-fun x3260 ((x1639 Int)) Int (ite (= 164 x1639) x2772 (x2304 x1639)))
(define-fun x1546 ((x1639 Int)) Int (ite (= x1639 x2566) 2 (x1427 x1639)))
(define-fun x3464 ((x1639 Int)) Int (ite (= x2138 x1639) x2772 (x3248 x1639)))
(define-fun x408 ((x1639 Int)) Int (ite (= x1639 128) x2772 (x21 x1639)))
(define-fun x3827 ((x1639 Int)) Int (ite (= x1639 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x408 x1639)))
(define-fun x1463 ((x1639 Int)) Int (ite (= x1639 132) x3835 (x3827 x1639)))
(define-fun x1387 ((x1639 Int)) Int (ite (= 164 x1639) 0 (x1463 x1639)))
(define-fun x1107 ((x1639 Int)) Int (ite (= x1639 196) 0 (x1387 x1639)))
(define-fun x3935 ((x1639 Int)) Int (ite (= x1639 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2132 x1639)))
(define-fun x4271 ((x1639 Int)) Int (ite (= x1639 132) x116 (x3935 x1639)))
(define-fun x1628 ((x1639 Int)) Int (ite (= x1639 164) 128 (x4271 x1639)))
(define-fun x4213 ((x1639 Int)) Int (ite (= 260 x1639) x3478 (x1628 x1639)))
(define-fun x3378 ((x1639 Int)) Int (ite (= 292 x1639) x3724 (x4213 x1639)))
(define-fun x3604 ((x1639 Int)) Int (ite (= 128 x1639) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2132 x1639)))
(define-fun x4185 ((x1639 Int)) Int (ite (= x1639 132) x4179 (x3604 x1639)))
(define-fun x2962 ((x1639 Int)) Int (ite (= x1639 164) x1370 (x4185 x1639)))
(define-fun x3677 ((x1639 Int)) Int (ite (= x1639 196) x1757 (x2962 x1639)))
(define-fun x600 ((x1639 Int)) Int (ite (= x876 x1639) x2386 (x2428 x1639)))
(define-fun x2945 ((x1639 Int)) Int (ite (= x2022 x1639) x2212 (x600 x1639)))
(define-fun x3508 ((x1639 Int)) Int (ite (= x1639 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2132 x1639)))
(define-fun x1599 ((x1639 Int)) Int (ite (= x1639 132) x1294 (x3508 x1639)))
(define-fun x3554 ((x1639 Int)) Int (ite (= x1672 x1639) x636 (x2428 x1639)))
(define-fun x2368 ((x1639 Int)) Int (ite (= x1639 x1294) x2819 (x3554 x1639)))
(define-fun x3234 ((x1639 Int)) Int (ite (= 128 x1639) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2132 x1639)))
(define-fun x222 ((x1639 Int)) Int (ite (= x1639 132) x2589 (x3234 x1639)))
(define-fun x937 ((x1639 Int)) Int (x1736 x1639))
(define-fun x2364 ((x1639 Int)) Int (ite (= x1639 x2676) x736 (x1597 x1639)))
(define-fun x1190 ((x1639 Int)) Int (ite x2371 (ite x2439 (x1597 x1639) (x2364 x1639)) (x1597 x1639)))
(define-fun x3978 ((x1639 Int)) Int (ite x2928 (x1597 x1639) (x1190 x1639)))
(define-fun x1334 ((x1639 Int)) Int (ite x3505 (x1936 x1639) (x3840 x1639)))
(define-fun x3691 ((x1639 Int)) Int (ite x1529 (x1936 x1639) (ite x1493 (x1334 x1639) (x1936 x1639))))
(define-fun x3565 ((x1639 Int)) Int (ite x2371 (ite x3102 (x2034 x1639) (x1936 x1639)) (ite x3210 (x1936 x1639) (x3691 x1639))))
(define-fun x3257 ((x1639 Int)) Int (ite x2928 (x1936 x1639) (x3565 x1639)))
(define-fun x1283 ((x1639 Int)) Int (x76 x1639))
(define-fun x40 ((x1639 Int)) Int (x2496 x1639))
(define-fun x1656 ((x1639 Int)) Int (ite x3505 (x351 x1639) (x811 x1639)))
(define-fun x967 ((x1639 Int)) Int (ite x1529 (x351 x1639) (ite x1493 (x1656 x1639) (x351 x1639))))
(define-fun x4107 ((x1639 Int)) Int (ite x2371 (ite x3102 (x2499 x1639) (x351 x1639)) (ite x3210 (x351 x1639) (x967 x1639))))
(define-fun x2296 ((x1639 Int)) Int (ite x2928 (x351 x1639) (x4107 x1639)))
(define-fun x588 ((x1639 Int)) Int (x342 x1639))
(define-fun x1171 ((x1639 Int)) Int (ite (= x3221 x1639) 3 (x1546 x1639)))
(define-fun x396 ((x1639 Int)) Int (ite x2576 (x1546 x1639) (x1171 x1639)))
(define-fun x1785 ((x1639 Int)) Int (ite (= x1639 x2220) 3 (x1427 x1639)))
(define-fun x1058 ((x1639 Int)) Int (ite x1529 (x1785 x1639) (x1427 x1639)))
(define-fun x1774 ((x1639 Int)) Int (ite x2371 (x1427 x1639) (ite x3210 (x396 x1639) (x1058 x1639))))
(define-fun x2572 ((x1639 Int)) Int (ite x2928 (x1427 x1639) (x1774 x1639)))
(define-fun x141 ((x1639 Int)) Int (ite x3102 (x2438 x1639) (x3419 x1639)))
(define-fun x2684 ((x1639 Int)) Int (ite x1493 (ite x3505 (x3419 x1639) (x2245 x1639)) (x3419 x1639)))
(define-fun x2399 ((x1639 Int)) Int (ite x3210 (x3419 x1639) (ite x1529 (x3419 x1639) (x2684 x1639))))
(define-fun x1503 ((x1639 Int)) Int (ite x2928 (x3419 x1639) (ite x2371 (x141 x1639) (x2399 x1639))))
(define-fun x1636 ((x1639 Int)) Int (ite x3505 (x2857 x1639) (x4007 x1639)))
(define-fun x2422 ((x1639 Int)) Int (ite x1529 (x2857 x1639) (ite x1493 (x1636 x1639) (x2857 x1639))))
(define-fun x261 ((x1639 Int)) Int (ite x2371 (ite x3102 (x1699 x1639) (x2857 x1639)) (ite x3210 (x2857 x1639) (x2422 x1639))))
(define-fun x212 ((x1639 Int)) Int (ite x2928 (x2857 x1639) (x261 x1639)))
(define-fun x2107 ((x1639 Int)) Int (ite x3505 (x3696 x1639) (x1447 x1639)))
(define-fun x2460 ((x1639 Int)) Int (ite x1529 (x3696 x1639) (ite x1493 (x2107 x1639) (x3696 x1639))))
(define-fun x2349 ((x1639 Int)) Int (ite x2371 (ite x3102 (x1093 x1639) (x3696 x1639)) (ite x3210 (x3696 x1639) (x2460 x1639))))
(define-fun x3822 ((x1639 Int)) Int (ite x2928 (x3696 x1639) (x2349 x1639)))
(define-fun x3789 ((x1639 Int)) Int (ite x3505 (x1284 x1639) (x341 x1639)))
(define-fun x3457 ((x1639 Int)) Int (ite x1529 (x1284 x1639) (ite x1493 (x3789 x1639) (x1284 x1639))))
(define-fun x3778 ((x1639 Int)) Int (ite x2371 (ite x3102 (x1562 x1639) (x1284 x1639)) (ite x3210 (x1284 x1639) (x3457 x1639))))
(define-fun x3019 ((x1639 Int)) Int (ite x2928 (x1284 x1639) (x3778 x1639)))
(define-fun x4040 ((x1639 Int)) Int (ite x3505 (x2299 x1639) (x1298 x1639)))
(define-fun x1299 ((x1639 Int)) Int (ite x1529 (x2299 x1639) (ite x1493 (x4040 x1639) (x2299 x1639))))
(define-fun x9 ((x1639 Int)) Int (ite x2371 (ite x3102 (x3346 x1639) (x2299 x1639)) (ite x3210 (x2299 x1639) (x1299 x1639))))
(define-fun x1585 ((x1639 Int)) Int (ite x2928 (x2299 x1639) (x9 x1639)))
(define-fun x441 ((x1639 Int)) Int (ite x3505 (x1199 x1639) (x1045 x1639)))
(define-fun x90 ((x1639 Int)) Int (ite x1529 (x1199 x1639) (ite x1493 (x441 x1639) (x1199 x1639))))
(define-fun x2248 ((x1639 Int)) Int (ite x2371 (ite x3102 (x616 x1639) (x1199 x1639)) (ite x3210 (x1199 x1639) (x90 x1639))))
(define-fun x1285 ((x1639 Int)) Int (ite x2928 (x1199 x1639) (x2248 x1639)))
(define-fun x2573 ((x1639 Int)) Int (ite x3505 (x3111 x1639) (x109 x1639)))
(define-fun x1235 ((x1639 Int)) Int (ite x1529 (x3111 x1639) (ite x1493 (x2573 x1639) (x3111 x1639))))
(define-fun x1734 ((x1639 Int)) Int (ite x2371 (ite x3102 (x2570 x1639) (x3111 x1639)) (ite x3210 (x3111 x1639) (x1235 x1639))))
(define-fun x3003 ((x1639 Int)) Int (ite x2928 (x3111 x1639) (x1734 x1639)))
(define-fun x178 ((x1639 Int)) Int (x486 x1639))
(define-fun x2930 ((x1639 Int)) Int (x3520 x1639))
(define-fun x591 ((x1639 Int)) Int (ite x3505 (x289 x1639) (x3265 x1639)))
(define-fun x2786 ((x1639 Int)) Int (ite x1529 (x289 x1639) (ite x1493 (x591 x1639) (x289 x1639))))
(define-fun x308 ((x1639 Int)) Int (ite x2371 (ite x3102 (x1685 x1639) (x289 x1639)) (ite x3210 (x289 x1639) (x2786 x1639))))
(define-fun x2005 ((x1639 Int)) Int (ite x2928 (x289 x1639) (x308 x1639)))
(define-fun x2008 ((x1639 Int)) Int (ite x3102 (x2965 x1639) (x4188 x1639)))
(define-fun x2379 ((x1639 Int)) Int (ite x1493 (ite x3505 (x4188 x1639) (x1848 x1639)) (x4188 x1639)))
(define-fun x4261 ((x1639 Int)) Int (ite x3210 (x4188 x1639) (ite x1529 (x4188 x1639) (x2379 x1639))))
(define-fun x2848 ((x1639 Int)) Int (ite x2928 (x4188 x1639) (ite x2371 (x2008 x1639) (x4261 x1639))))
(define-fun x3888 ((x1639 Int)) Int (ite x3505 (x2869 x1639) (x3186 x1639)))
(define-fun x769 ((x1639 Int)) Int (ite x1529 (x2869 x1639) (ite x1493 (x3888 x1639) (x2869 x1639))))
(define-fun x2402 ((x1639 Int)) Int (ite x2371 (ite x3102 (x230 x1639) (x2869 x1639)) (ite x3210 (x2869 x1639) (x769 x1639))))
(define-fun x4115 ((x1639 Int)) Int (ite x2928 (x2869 x1639) (x2402 x1639)))
(define-fun x3 ((x1639 Int)) Int (x2527 x1639))
(define-fun x3530 ((x1639 Int)) Int (ite x3505 (x1830 x1639) (x817 x1639)))
(define-fun x3831 ((x1639 Int)) Int (ite x1529 (x1830 x1639) (ite x1493 (x3530 x1639) (x1830 x1639))))
(define-fun x1212 ((x1639 Int)) Int (ite x2371 (ite x3102 (x3359 x1639) (x1830 x1639)) (ite x3210 (x1830 x1639) (x3831 x1639))))
(define-fun x2440 ((x1639 Int)) Int (ite x2928 (x1830 x1639) (x1212 x1639)))
(define-fun x2260 ((x1639 Int)) Int (ite x2371 (x3248 x1639) (ite x3210 (x3464 x1639) (x3248 x1639))))
(define-fun x1472 ((x1639 Int)) Int (ite x2928 (x3248 x1639) (x2260 x1639)))
(define-fun x2967 ((x1639 Int)) Int (ite x3102 (x1068 x1639) (x4215 x1639)))
(define-fun x2938 ((x1639 Int)) Int (ite x1493 (ite x3505 (x4215 x1639) (x2814 x1639)) (x4215 x1639)))
(define-fun x2366 ((x1639 Int)) Int (ite x3210 (x4215 x1639) (ite x1529 (x4215 x1639) (x2938 x1639))))
(define-fun x4273 ((x1639 Int)) Int (ite x2928 (x4215 x1639) (ite x2371 (x2967 x1639) (x2366 x1639))))
(define-fun x792 ((x1639 Int)) Int (x1736 x1639))
(define-fun x3495 ((x1639 Int)) Int (x2496 x1639))
(define-fun x1460 ((x1639 Int)) Int (x76 x1639))
(define-fun x3012 ((x1639 Int)) Int (ite x2371 (x141 x1639) (x2399 x1639)))
(define-fun x15 ((x1639 Int)) Int (x342 x1639))
(define-fun x3558 ((x1639 Int)) Int (x3520 x1639))
(define-fun x225 ((x1639 Int)) Int (x486 x1639))
(define-fun x4092 ((x1639 Int)) Int (ite x2371 (x2008 x1639) (x4261 x1639)))
(define-fun x3568 ((x1639 Int)) Int (x2527 x1639))
(define-fun x167 ((x1639 Int)) Int (ite x2371 (x2967 x1639) (x2366 x1639)))
(define-fun x609 ((x1639 Int)) Int (ite x3210 (x1199 x1639) (x90 x1639)))
(define-fun x1754 ((x1639 Int)) Int (ite x3210 (x1284 x1639) (x3457 x1639)))
(define-fun x2267 ((x1639 Int)) Int (x1736 x1639))
(define-fun x631 ((x1639 Int)) Int (x76 x1639))
(define-fun x3884 ((x1639 Int)) Int (ite x3210 (x351 x1639) (x967 x1639)))
(define-fun x2046 ((x1639 Int)) Int (x342 x1639))
(define-fun x795 ((x1639 Int)) Int (x2496 x1639))
(define-fun x1421 ((x1639 Int)) Int (x3520 x1639))
(define-fun x1967 ((x1639 Int)) Int (ite x3210 (x1936 x1639) (x3691 x1639)))
(define-fun x2116 ((x1639 Int)) Int (ite x3210 (x2857 x1639) (x2422 x1639)))
(define-fun x4298 ((x1639 Int)) Int (ite x3210 (x2299 x1639) (x1299 x1639)))
(define-fun x645 ((x1639 Int)) Int (x2527 x1639))
(define-fun x1014 ((x1639 Int)) Int (x486 x1639))
(define-fun x3661 ((x1639 Int)) Int (ite x3210 (x2869 x1639) (x769 x1639)))
(define-fun x2357 ((x1639 Int)) Int (ite x3210 (x289 x1639) (x2786 x1639)))
(define-fun x3680 ((x1639 Int)) Int (ite x3210 (x1830 x1639) (x3831 x1639)))
(define-fun x1978 ((x1639 Int)) Int (x1597 x1639))
(define-fun x53 ((x1639 Int)) Int (ite x3210 (x3111 x1639) (x1235 x1639)))
(define-fun x3922 ((x1639 Int)) Int (ite x3210 (x3696 x1639) (x2460 x1639)))
(define-fun x789 ((x1639 Int)) Int (ite x3210 (x396 x1639) (x1058 x1639)))
(define-fun x1315 ((x1639 Int)) Int (ite x3210 (x3464 x1639) (x3248 x1639)))
(define-fun x2604 ((x1639 Int)) Int (ite (= x876 x1639) x4154 (x2428 x1639)))
(define-fun x2689 ((x1639 Int)) Int (ite x1529 (x3419 x1639) (x2684 x1639)))
(define-fun x986 ((x1639 Int)) Int (ite x1529 (x4215 x1639) (x2938 x1639)))
(define-fun x220 ((x1639 Int)) Int (ite x1529 (x4188 x1639) (x2379 x1639)))
(define-fun x3341 ((x1639 Int)) Int (ite x1493 (x441 x1639) (x1199 x1639)))
(define-fun x3996 ((x1639 Int)) Int (ite x1493 (x3789 x1639) (x1284 x1639)))
(define-fun x299 ((x1639 Int)) Int (ite x1493 (x1656 x1639) (x351 x1639)))
(define-fun x1492 ((x1639 Int)) Int (ite x1493 (x1636 x1639) (x2857 x1639)))
(define-fun x1557 ((x1639 Int)) Int (ite x1493 (x1334 x1639) (x1936 x1639)))
(define-fun x3253 ((x1639 Int)) Int (ite x1493 (x2573 x1639) (x3111 x1639)))
(define-fun x1398 ((x1639 Int)) Int (ite x1493 (x3888 x1639) (x2869 x1639)))
(define-fun x3358 ((x1639 Int)) Int (ite x1493 (x591 x1639) (x289 x1639)))
(define-fun x689 ((x1639 Int)) Int (ite x1493 (x2107 x1639) (x3696 x1639)))
(define-fun x4171 ((x1639 Int)) Int (ite x1493 (x3530 x1639) (x1830 x1639)))
(define-fun x2181 ((x1639 Int)) Int (ite x1493 (x4040 x1639) (x2299 x1639)))
(define-fun x2318 ((x1639 Int)) Int (ite (= 292 x1639) x4036 (x4213 x1639)))
(define-fun x597 ((x1639 Int)) Int (ite x159 (ite x388 (x4213 x1639) (x2318 x1639)) (x3378 x1639)))
(define-fun x3775 ((x1639 Int)) Int (ite (= x1639 196) x3537 (x597 x1639)))
(define-fun x2660 ((x1639 Int)) Int (ite (= 228 x1639) x3897 (x3775 x1639)))
(define-fun x482 ((x1639 Int)) Int (ite (= x1639 x3157) x3214 (x2660 x1639)))
(define-fun x2621 ((x1639 Int)) Int (ite (= x3082 x1639) x2269 (x482 x1639)))
(define-fun x2762 ((x1639 Int)) Int (ite (= 292 x1639) x2477 (x65 x1639)))
(define-fun x3820 ((x1639 Int)) Int (ite (= x1639 292) x3161 (x1351 x1639)))
(define-fun x506 ((x1639 Int)) Int (ite x2346 (ite x1205 (x65 x1639) (x2762 x1639)) (x2398 x1639)))
(define-fun x946 ((x1639 Int)) Int (ite (= x1639 196) x4019 (x506 x1639)))
(define-fun x3959 ((x1639 Int)) Int (ite (= 228 x1639) x1096 (x946 x1639)))
(define-fun x3879 ((x1639 Int)) Int (ite (= x1639 x1469) x1435 (x3959 x1639)))
(define-fun x1255 ((x1639 Int)) Int (ite (= x1639 x294) x735 (x3879 x1639)))
(define-fun x3370 ((x1639 Int)) Int (ite x1184 (ite x1594 (x1351 x1639) (x3820 x1639)) (x2841 x1639)))
(define-fun x2065 ((x1639 Int)) Int (ite (= 196 x1639) x1976 (x3370 x1639)))
(define-fun x2195 ((x1639 Int)) Int (ite (= x1639 228) x1788 (x2065 x1639)))
(define-fun x2590 ((x1639 Int)) Int (ite (= x672 x1639) x1337 (x2195 x1639)))
(define-fun x3165 ((x1639 Int)) Int (ite (= x3506 x1639) x3602 (x2590 x1639)))
(define-fun x1686 ((x1639 Int)) Int (ite (= x3082 x1639) x2068 (x482 x1639)))
(define-fun x2201 ((x1639 Int)) Int (ite x1187 (ite x2851 (x482 x1639) (x2621 x1639)) (x1686 x1639)))
(define-fun x3635 ((x1639 Int)) Int (ite (= x1639 x876) x4214 (x2428 x1639)))
(define-fun x1103 ((x1639 Int)) Int (ite (and (< x1639 x1504) (>= x1639 164)) (x2201 (+ x1639 128)) (x3981 x1639)))
(define-fun x1751 ((x1639 Int)) Int (ite (and (< x1639 (+ 128 x247)) (<= 128 x1639)) (x1103 (+ x1639 36)) (x249 x1639)))
(define-fun x3712 ((x1639 Int)) Int (ite (= x920 x1639) 0 (x1751 x1639)))
(define-fun x2062 ((x1639 Int)) Int (ite (= x1639 x2421) x3614 (x3712 x1639)))
(define-fun x3069 ((x1639 Int)) Int (ite (and (< x1639 (+ x2503 128)) (>= x1639 128)) (x1103 (- (+ x3169 x1639) 128)) (x2062 x1639)))
(define-fun x999 ((x1639 Int)) Int (ite (= x1639 x4200) 0 (x3069 x1639)))
(define-fun x2520 ((x1639 Int)) Int (ite (and (<= 128 x1639) (< x1639 (+ x247 128))) (x1103 (+ x1639 36)) (x999 x1639)))
(define-fun x1513 ((x1639 Int)) Int (ite (= x702 x1639) 0 (x2520 x1639)))
(define-fun x1745 ((x1639 Int)) Int (ite (= x1841 x1639) x549 (x1513 x1639)))
(define-fun x1312 ((x1639 Int)) Int (ite (= x4106 x1639) 0 (x1597 x1639)))
(define-fun x3710 ((x1639 Int)) Int (ite (= 128 x1639) x247 (x1745 x1639)))
(define-fun x539 ((x1639 Int)) Int (ite (and (< x1639 (+ x247 160)) (<= 160 x1639)) (x1103 (+ 4 x1639)) (x3710 x1639)))
(define-fun x183 ((x1639 Int)) Int (ite (= x1600 x1639) 0 (x539 x1639)))
(define-fun x1715 ((x1639 Int)) Int (ite (= x2778 x1639) x2503 (x183 x1639)))
(define-fun x2445 ((x1639 Int)) Int (ite (and (< x1639 (+ x175 x2503)) (<= x175 x1639)) (x1103 (- (+ x1639 x3169) x175)) (x1715 x1639)))
(define-fun x1464 ((x1639 Int)) Int (ite (= x3624 x1639) 0 (x2445 x1639)))
(define-fun x4209 ((x1639 Int)) Int (ite (= x1639 x52) 1 (x3520 x1639)))
(define-fun x3462 ((x1639 Int)) Int (ite (= x1639 x294) x799 (x3879 x1639)))
(define-fun x24 ((x1639 Int)) Int (ite (= x3506 x1639) x1718 (x2590 x1639)))
(define-fun x3901 ((x1639 Int)) Int (ite x4015 (ite x3657 (x3879 x1639) (x1255 x1639)) (x3462 x1639)))
(define-fun x2663 ((x1639 Int)) Int (ite (and (<= 164 x1639) (> x3091 x1639)) (x3901 (+ x1639 128)) (x1826 x1639)))
(define-fun x2118 ((x1639 Int)) Int (ite (= x1639 128) x571 (x839 x1639)))
(define-fun x3636 ((x1639 Int)) Int (ite (= 160 x1639) x3414 (x2118 x1639)))
(define-fun x4279 ((x1639 Int)) Int (ite (= x1639 160) x4180 (x2118 x1639)))
(define-fun x3450 ((x1639 Int)) Int (ite x3896 (ite x3846 (x2590 x1639) (x3165 x1639)) (x24 x1639)))
(define-fun x311 ((x1639 Int)) Int (ite (and (> x3671 x1639) (>= x1639 164)) (x3450 (+ 128 x1639)) (x1417 x1639)))
(define-fun x4058 ((x1639 Int)) Int (ite (= x1639 x902) x2443 (x2643 x1639)))
(define-fun x2019 ((x1639 Int)) Int (ite (and (<= x888 x1639) (> (+ x888 x2443) x1639)) (x311 (- (+ x948 x1639) x888)) (x3721 x1639)))
(define-fun x3459 ((x1639 Int)) Int (ite (= x1639 x498) 0 (x2019 x1639)))
(define-fun x1089 ((x1639 Int)) Int (ite (= x932 x1639) 1 (x3520 x1639)))
(define-fun x286 ((x1639 Int)) Int (ite (= 192 x1639) x3858 (x3636 x1639)))
(define-fun x3577 ((x1639 Int)) Int (ite x907 (x2118 x1639) (ite x2433 (ite x253 (x3636 x1639) (x286 x1639)) (x4279 x1639))))
(define-fun x1035 ((x1639 Int)) Int (ite (and (> (+ x825 x569) x1639) (>= x1639 x825)) (x2663 (- (+ 164 x1639) x825)) (x3577 x1639)))
(define-fun x4047 ((x1639 Int)) Int (ite (= x3406 x1639) 0 (x1035 x1639)))
(define-fun x2270 ((x1639 Int)) Int (ite x3843 (x4047 x1639) (x3577 x1639)))
(define-fun x2263 ((x1639 Int)) Int (ite (= x825 x1639) x569 (x2270 x1639)))
(define-fun x4080 ((x1639 Int)) Int (ite (and (>= x1639 x296) (< x1639 (+ x296 x569))) (x2663 (- (+ 164 x1639) x296)) (x2263 x1639)))
(define-fun x1602 ((x1639 Int)) Int (ite (= x3692 x1639) 0 (x4080 x1639)))
(define-fun x2109 ((x1639 Int)) Int (ite (= x1080 x1639) x2400 (x1602 x1639)))
(define-fun x1318 ((x1639 Int)) Int (ite (and (< x1639 (+ x1004 x2400)) (<= x1004 x1639)) (x2663 (- (+ x1639 x3075) x1004)) (x2109 x1639)))
(define-fun x1954 ((x1639 Int)) Int (ite (= x1639 x827) 0 (x1318 x1639)))
(define-fun x1490 ((x1639 Int)) Int (ite (= x1639 x2359) x3877 (x1954 x1639)))
(define-fun x2770 ((x1639 Int)) Int (ite (= x1291 x1639) 128 (x1490 x1639)))
(define-fun x2622 ((x1639 Int)) Int (ite (= x834 x1639) x3873 (x2770 x1639)))
(define-fun x4191 ((x1639 Int)) Int (ite (= x1639 x1213) x3571 (x2622 x1639)))
(define-fun x163 ((x1639 Int)) Int (ite (= x1356 x1639) x974 (x4191 x1639)))
(define-fun x3729 ((x1639 Int)) Int (ite (= x2740 x1639) x2315 (x163 x1639)))
(define-fun x1003 ((x1639 Int)) Int (ite (= x1639 x2927) x2434 (x3729 x1639)))
(define-fun x468 ((x1639 Int)) Int (ite x1890 (x3729 x1639) (ite x2358 (x163 x1639) (ite x1046 (x4191 x1639) (ite x3371 (x2622 x1639) (x1003 x1639))))))
(define-fun x4050 ((x1639 Int)) Int (ite (= x1639 x2860) 0 (x468 x1639)))
(define-fun x1416 ((x1639 Int)) Int (ite (= x1639 x1062) x4019 (x4050 x1639)))
(define-fun x1340 ((x1639 Int)) Int (ite (= x1639 x3784) x1399 (x1416 x1639)))
(define-fun x304 ((x1639 Int)) Int (ite (= x1639 x3618) x2217 (x1340 x1639)))
(define-fun x221 ((x1639 Int)) Int (ite (= x1639 x3836) x1638 (x304 x1639)))
(define-fun x1773 ((x1639 Int)) Int (ite (= x1639 x685) x303 (x221 x1639)))
(define-fun x1342 ((x1639 Int)) Int (ite (= x1639 x3632) x472 (x1773 x1639)))
(define-fun x1304 ((x1639 Int)) Int (ite (= x1639 x3841) x4220 (x1342 x1639)))
(define-fun x1832 ((x1639 Int)) Int (ite x238 (x1342 x1639) (ite x3976 (x1773 x1639) (ite x3586 (x221 x1639) (ite x3275 (x304 x1639) (x1304 x1639))))))
(define-fun x3601 ((x1639 Int)) Int (ite (= x1639 x3295) 0 (x1832 x1639)))
(define-fun x477 ((x1639 Int)) Int (ite (= x1639 x2561) x187 (x3601 x1639)))
(define-fun x3301 ((x1639 Int)) Int (ite (= x1639 x2739) x1454 (x477 x1639)))
(define-fun x413 ((x1639 Int)) Int (ite (= x1204 x1639) 150 (x3301 x1639)))
(define-fun x659 ((x1639 Int)) Int (ite (and (<= x3882 x1639) (> (+ x3882 150) x1639)) (x2663 (- (+ x2059 x1639) x3882)) (x413 x1639)))
(define-fun x3534 ((x1639 Int)) Int (ite (and (> 0 x1639) (<= 0 x1639)) (x1618 x1639) (x659 x1639)))
(define-fun x2350 ((x1639 Int)) Int (ite x3102 (x3534 x1639) (x659 x1639)))
(define-fun x2664 ((x1639 Int)) Int (ite (= x1204 x1639) x1147 (x2350 x1639)))
(define-fun x895 ((x1639 Int)) Int (ite (and (> (+ x1147 x2703) x1639) (<= x2703 x1639)) (x1618 (- x1639 x2703)) (x2664 x1639)))
(define-fun x2738 ((x1639 Int)) Int (ite (= x1639 x3369) x991 (x895 x1639)))
(define-fun x4 ((x1639 Int)) Int (ite (= x1639 x20) x2230 (x2738 x1639)))
(define-fun x2793 ((x1639 Int)) Int (ite (= x587 x1639) x3490 (x4 x1639)))
(define-fun x3711 ((x1639 Int)) Int (ite x2439 (x1597 x1639) (x2364 x1639)))
(define-fun x1477 ((x1639 Int)) Int (ite (= x1136 x1639) x3773 (x2793 x1639)))
(define-fun x3780 ((x1639 Int)) Int (ite x940 (x2793 x1639) (ite x56 (x4 x1639) (ite x121 (x2738 x1639) (ite x1177 (x895 x1639) (x1477 x1639))))))
(define-fun x1752 ((x1639 Int)) Int (ite (= x215 x1639) 0 (x3780 x1639)))
(define-fun x1858 ((x1639 Int)) Int (ite (= x1639 x3362) x3742 (x1752 x1639)))
(define-fun x1883 ((x1639 Int)) Int (ite (= x1639 x3369) x3877 (x1858 x1639)))
(define-fun x427 ((x1639 Int)) Int (ite (= x2377 x1639) 160 (x1883 x1639)))
(define-fun x42 ((x1639 Int)) Int (ite (= x1639 x1030) x1013 (x427 x1639)))
(define-fun x2274 ((x1639 Int)) Int (ite (= x2825 x1639) x3115 (x42 x1639)))
(define-fun x3719 ((x1639 Int)) Int (ite (= x1857 x1639) x322 (x2274 x1639)))
(define-fun x4274 ((x1639 Int)) Int (ite (= x3876 x1639) x3607 (x3719 x1639)))
(define-fun x3931 ((x1639 Int)) Int (ite (= x4201 x1639) x166 (x4274 x1639)))
(define-fun x758 ((x1639 Int)) Int (ite x2743 (x4274 x1639) (ite x557 (x3719 x1639) (ite x81 (x2274 x1639) (ite x204 (x42 x1639) (x3931 x1639))))))
(define-fun x3135 ((x1639 Int)) Int (ite (= x1806 x1639) 0 (x758 x1639)))
(define-fun x454 ((x1639 Int)) Int (ite (= x1170 x1639) x4019 (x3135 x1639)))
(define-fun x3256 ((x1639 Int)) Int (ite (= x1639 x3442) x1281 (x454 x1639)))
(define-fun x1951 ((x1639 Int)) Int (ite (= x1905 x1639) x1057 (x3256 x1639)))
(define-fun x3769 ((x1639 Int)) Int (ite (= x1639 x729) x697 (x1951 x1639)))
(define-fun x716 ((x1639 Int)) Int (ite (= x2532 x1639) x3080 (x3769 x1639)))
(define-fun x3595 ((x1639 Int)) Int (ite (= x1639 x2827) x3763 (x716 x1639)))
(define-fun x1747 ((x1639 Int)) Int (ite (= x1639 x1834) x551 (x3595 x1639)))
(define-fun x693 ((x1639 Int)) Int (ite x2369 (x3595 x1639) (ite x3337 (x716 x1639) (ite x900 (x3769 x1639) (ite x2537 (x1951 x1639) (x1747 x1639))))))
(define-fun x131 ((x1639 Int)) Int (ite (= x1639 x1154) 0 (x693 x1639)))
(define-fun x1633 ((x1639 Int)) Int (ite (= x140 x1639) x4139 (x131 x1639)))
(define-fun x3177 ((x1639 Int)) Int (x1736 x1639))
(define-fun x3223 ((x1639 Int)) Int (x76 x1639))
(define-fun x4073 ((x1639 Int)) Int (x4215 x1639))
(define-fun x1823 ((x1639 Int)) Int (x2857 x1639))
(define-fun x3785 ((x1639 Int)) Int (x3696 x1639))
(define-fun x2252 ((x1639 Int)) Int (x3419 x1639))
(define-fun x2997 ((x1639 Int)) Int (x342 x1639))
(define-fun x3089 ((x1639 Int)) Int (x2496 x1639))
(define-fun x2513 ((x1639 Int)) Int (x3520 x1639))
(define-fun x676 ((x1639 Int)) Int (x3111 x1639))
(define-fun x3912 ((x1639 Int)) Int (x1284 x1639))
(define-fun x1891 ((x1639 Int)) Int (x4188 x1639))
(define-fun x3867 ((x1639 Int)) Int (x1830 x1639))
(define-fun x1135 ((x1639 Int)) Int (x2527 x1639))
(define-fun x3503 ((x1639 Int)) Int (x3464 x1639))
(define-fun x3958 ((x1639 Int)) Int (x2869 x1639))
(define-fun x547 ((x1639 Int)) Int (x486 x1639))
(define-fun x4026 ((x1639 Int)) Int (x1199 x1639))
(define-fun x826 ((x1639 Int)) Int (x351 x1639))
(define-fun x2042 ((x1639 Int)) Int (x1936 x1639))
(define-fun x169 ((x1639 Int)) Int (x289 x1639))
(define-fun x2842 ((x1639 Int)) Int (x1597 x1639))
(define-fun x1138 ((x1639 Int)) Int (x2299 x1639))
(define-fun x70 ((x1639 Int)) Int (ite (= 4 x1639) 33 (x2987 x1639)))
(define-fun x2294 ((x1639 Int)) Int (ite (and (< x1639 36) (>= x1639 0)) (x70 x1639) (x4082 x1639)))
(define-fun x3947 ((x1639 Int)) Int (ite (= 160 x1639) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1518 x1639)))
(define-fun x38 ((x1639 Int)) Int (ite (= 192 x1639) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3947 x1639)))
(define-fun x1042 ((x1639 Int)) Int (ite (= 128 x1639) 64 (x1018 x1639)))
(define-fun x3110 ((x1639 Int)) Int (ite (= x1639 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3200 x1639)))
(define-fun x3911 ((x1639 Int)) Int (ite (= x1639 258) x2104 (x3110 x1639)))
(define-fun x2910 ((x1639 Int)) Int (ite (= x1639 224) 34 (x4103 x1639)))
(define-fun x1006 ((x1639 Int)) Int (ite (= x1639 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x3598 x1639)))
(define-fun x2844 ((x1639 Int)) Int (ite (= 294 x1639) x4140 (x1006 x1639)))
(define-fun x1000 ((x1639 Int)) Int (ite (= x1639 326) x1672 (x2844 x1639)))
(define-fun x3328 ((x1639 Int)) Int (ite (= 358 x1639) 160 (x1000 x1639)))
(define-fun x841 ((x1639 Int)) Int (ite (= 454 x1639) x3883 (x3328 x1639)))
(define-fun x2251 ((x1639 Int)) Int (ite (and (< x1639 (+ x3883 486)) (>= x1639 486)) (x38 (- x1639 326)) (x841 x1639)))
(define-fun x3479 ((x1639 Int)) Int (ite (= 390 x1639) 0 (x2251 x1639)))
(define-fun x3528 ((x1639 Int)) Int (ite (= 422 x1639) x62 (x3479 x1639)))
(define-fun x580 ((x1639 Int)) Int (ite (= x1639 x3752) x192 (x3528 x1639)))
(define-fun x1430 ((x1639 Int)) Int (ite (and (< x1639 (+ x192 x1448)) (<= x1448 x1639)) (x3911 (- (+ 256 x1639) x1448)) (x580 x1639)))
(define-fun x3164 ((x1639 Int)) Int (ite (and (> x3755 x1639) (>= x1639 292)) (x1430 (+ 290 x1639)) (x1465 x1639)))
(define-fun x2504 ((x1639 Int)) Int (ite (= x1639 128) 0 (x4089 x1639)))
(define-fun x3826 ((x1639 Int)) Int (ite (= 160 x1639) 0 (x2504 x1639)))
(define-fun x3215 ((x1639 Int)) Int (ite (= 290 x1639) x2327 (x1430 x1639)))
(define-fun x3591 ((x1639 Int)) Int (ite (= x1639 322) x2852 (x3215 x1639)))
(define-fun x1717 ((x1639 Int)) Int (ite (= x1639 0) x1779 (x1791 x1639)))
(define-fun x3401 ((x1639 Int)) Int (ite (= x1639 32) x2824 (x1717 x1639)))
(define-fun x3913 ((x1639 Int)) Int (ite (= 128 x1639) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x2987 x1639)))
(define-fun x3066 ((x1639 Int)) Int (ite (and (> 4 x1639) (>= x1639 0)) (x3913 (+ x1639 128)) (x4082 x1639)))
(define-fun x1498 ((x1639 Int)) Int (ite (= 128 x1639) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x2987 x1639)))
(define-fun x534 ((x1639 Int)) Int (ite (and (<= 0 x1639) (< x1639 4)) (x1498 (+ 128 x1639)) (x4082 x1639)))
(define-fun x896 ((x1639 Int)) Int (ite (= 548 x1639) x2859 (x2185 x1639)))
(define-fun x1987 ((x1639 Int)) Int (ite (= x1639 580) x3487 (x896 x1639)))
(define-fun x48 ((x1639 Int)) Int (ite (= 548 x1639) x3925 (x2185 x1639)))
(define-fun x1807 ((x1639 Int)) Int (ite x1382 (x2659 x1639) (ite x2677 (ite x1617 (x896 x1639) (x1987 x1639)) (x48 x1639))))
(define-fun x3233 ((x1639 Int)) Int (ite (= 516 x1639) x1061 (x170 x1639)))
(define-fun x459 ((x1639 Int)) Int (ite (= x3934 x1639) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2987 x1639)))
(define-fun x663 ((x1639 Int)) Int (ite (= x2780 x1639) 32 (x459 x1639)))
(define-fun x807 ((x1639 Int)) Int (ite (= x2674 x1639) 48 (x663 x1639)))
(define-fun x106 ((x1639 Int)) Int (ite (= x1401 x1639) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x807 x1639)))
(define-fun x1525 ((x1639 Int)) Int (ite (= x1639 x2418) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x106 x1639)))
(define-fun x2846 ((x1639 Int)) Int (ite (and (<= 0 x1639) (< x1639 132)) (x1525 (+ x3934 x1639)) (x4082 x1639)))
(define-fun x1055 ((x1639 Int)) Int (ite (= x1639 354) 64 (x1426 x1639)))
(define-fun x3580 ((x1639 Int)) Int (ite (= x1639 x3934) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2987 x1639)))
(define-fun x72 ((x1639 Int)) Int (ite (= x1639 x2868) 32 (x3580 x1639)))
(define-fun x349 ((x1639 Int)) Int (ite (= x3403 x1639) 32 (x72 x1639)))
(define-fun x307 ((x1639 Int)) Int (ite (= x1639 x3965) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x349 x1639)))
(define-fun x2064 ((x1639 Int)) Int (ite (and (>= x1639 0) (> 100 x1639)) (x307 (+ x3934 x1639)) (x4082 x1639)))
(define-fun x3708 ((x1639 Int)) Int (ite x4051 (x1430 x1639) (x3591 x1639)))
(define-fun x2285 ((x1639 Int)) Int (ite (= x1639 x3934) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x3708 x1639)))
(define-fun x4075 ((x1639 Int)) Int (ite (= x1964 x1639) x4140 (x2285 x1639)))
(define-fun x2075 ((x1639 Int)) Int (ite (= x1071 x1639) 192 (x4075 x1639)))
(define-fun x1906 ((x1639 Int)) Int (ite (= x2343 x1639) x1711 (x2075 x1639)))
(define-fun x2047 ((x1639 Int)) Int (ite (and (<= x1176 x1639) (< x1639 (+ x1711 x1176))) (x1807 (- (+ 548 x1639) x1176)) (x1906 x1639)))
(define-fun x1248 ((x1639 Int)) Int (ite (= x1639 x3167) x3526 (x2047 x1639)))
(define-fun x4190 ((x1639 Int)) Int (ite (= x1639 x3315) x2690 (x1248 x1639)))
(define-fun x2380 ((x1639 Int)) Int (ite (= 386 x1639) x4176 (x422 x1639)))
(define-fun x462 ((x1639 Int)) Int (ite (= x1639 418) x2297 (x2380 x1639)))
(define-fun x409 ((x1639 Int)) Int (ite (and (<= x182 x1639) (< x1639 (+ x2690 x182))) (x462 (- (+ x1639 386) x182)) (x4190 x1639)))
(define-fun x1955 ((x1639 Int)) Int (ite (= x1639 x1253) x1672 (x409 x1639)))
(define-fun x2141 ((x1639 Int)) Int (ite (= x1639 x172) 0 (x1955 x1639)))
(define-fun x3848 ((x1639 Int)) Int (ite (= x1639 x3382) x582 (x2141 x1639)))
(define-fun x2607 ((x1639 Int)) Int (ite (= 450 x1639) 34 (x2234 x1639)))
(define-fun x634 ((x1639 Int)) Int (ite (= x2474 x1639) x3276 (x3848 x1639)))
(define-fun x1155 ((x1639 Int)) Int (ite (= x1639 482) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x4055 x1639)))
(define-fun x241 ((x1639 Int)) Int (ite (= 484 x1639) x2104 (x1155 x1639)))
(define-fun x2704 ((x1639 Int)) Int (ite (and (> (+ x3468 x3276) x1639) (>= x1639 x3468)) (x241 (- (+ 482 x1639) x3468)) (x634 x1639)))
(define-fun x586 ((x1639 Int)) Int (ite (= x1672 x1639) x2916 (x2428 x1639)))
(define-fun x2960 ((x1639 Int)) Int (ite (= x1639 x2002) x374 (x586 x1639)))
(define-fun x1706 ((x1639 Int)) Int (ite (and (<= 228 x1639) (< x1639 x2736)) (x2704 (- (+ x1639 (x1713 (+ x3934 228))) 228)) (x1772 x1639)))
(define-fun x1120 ((x1639 Int)) Int 0)
(define-fun x1542 ((x1639 Int)) Int (x1284 x1639))
(define-fun x1922 ((x1639 Int)) Int (x2857 x1639))
(define-fun x465 ((x1639 Int)) Int (x3111 x1639))
(define-fun x788 ((x1639 Int)) Int (x1936 x1639))
(define-fun x4039 ((x1639 Int)) Int (x4188 x1639))
(define-fun x1348 ((x1639 Int)) Int (x2299 x1639))
(define-fun x4239 ((x1639 Int)) Int (x1171 x1639))
(define-fun x1553 ((x1639 Int)) Int (x1736 x1639))
(define-fun x2243 ((x1639 Int)) Int (x342 x1639))
(define-fun x1127 ((x1639 Int)) Int (x4215 x1639))
(define-fun x2162 ((x1639 Int)) Int (x76 x1639))
(define-fun x1568 ((x1639 Int)) Int (x486 x1639))
(define-fun x2974 ((x1639 Int)) Int (x1830 x1639))
(define-fun x2060 ((x1639 Int)) Int (x1199 x1639))
(define-fun x2889 ((x1639 Int)) Int (x2869 x1639))
(define-fun x957 ((x1639 Int)) Int (x3464 x1639))
(define-fun x1802 ((x1639 Int)) Int (x2527 x1639))
(define-fun x2373 ((x1639 Int)) Int (x1597 x1639))
(define-fun x2832 ((x1639 Int)) Int (x351 x1639))
(define-fun x3689 ((x1639 Int)) Int (x289 x1639))
(define-fun x699 ((x1639 Int)) Int (x2496 x1639))
(define-fun x1682 ((x1639 Int)) Int (x3696 x1639))
(define-fun x3397 ((x1639 Int)) Int (x3520 x1639))
(define-fun x2656 ((x1639 Int)) Int (x3419 x1639))
(define-fun x2330 ((x1639 Int)) Int (x1284 x1639))
(define-fun x4146 ((x1639 Int)) Int (x2330 x1639))
(define-fun x1182 ((x1639 Int)) Int (x2857 x1639))
(define-fun x2900 ((x1639 Int)) Int (x1182 x1639))
(define-fun x318 ((x1639 Int)) Int (x289 x1639))
(define-fun x4189 ((x1639 Int)) Int (x318 x1639))
(define-fun x3469 ((x1639 Int)) Int (x1936 x1639))
(define-fun x54 ((x1639 Int)) Int (x3469 x1639))
(define-fun x849 ((x1639 Int)) Int (x4188 x1639))
(define-fun x2797 ((x1639 Int)) Int (x849 x1639))
(define-fun x1302 ((x1639 Int)) Int (x2299 x1639))
(define-fun x11 ((x1639 Int)) Int (x1302 x1639))
(define-fun x16 ((x1639 Int)) Int (x3111 x1639))
(define-fun x610 ((x1639 Int)) Int (x16 x1639))
(define-fun x1455 ((x1639 Int)) Int (x1171 x1639))
(define-fun x819 ((x1639 Int)) Int (x1736 x1639))
(define-fun x3197 ((x1639 Int)) Int (x819 x1639))
(define-fun x4123 ((x1639 Int)) Int (x4215 x1639))
(define-fun x1079 ((x1639 Int)) Int (x4123 x1639))
(define-fun x2095 ((x1639 Int)) Int (x342 x1639))
(define-fun x3833 ((x1639 Int)) Int (x2095 x1639))
(define-fun x1086 ((x1639 Int)) Int (x1199 x1639))
(define-fun x3327 ((x1639 Int)) Int (x1086 x1639))
(define-fun x224 ((x1639 Int)) Int (x2869 x1639))
(define-fun x2754 ((x1639 Int)) Int (x224 x1639))
(define-fun x1720 ((x1639 Int)) Int (x76 x1639))
(define-fun x745 ((x1639 Int)) Int (x1720 x1639))
(define-fun x1989 ((x1639 Int)) Int (x1830 x1639))
(define-fun x2773 ((x1639 Int)) Int (x1989 x1639))
(define-fun x3541 ((x1639 Int)) Int (x2527 x1639))
(define-fun x624 ((x1639 Int)) Int (x3541 x1639))
(define-fun x1040 ((x1639 Int)) Int (x1597 x1639))
(define-fun x2287 ((x1639 Int)) Int (x1040 x1639))
(define-fun x1270 ((x1639 Int)) Int (x3464 x1639))
(define-fun x1787 ((x1639 Int)) Int (x1270 x1639))
(define-fun x3308 ((x1639 Int)) Int (x351 x1639))
(define-fun x3977 ((x1639 Int)) Int (x3308 x1639))
(define-fun x2475 ((x1639 Int)) Int (x2496 x1639))
(define-fun x1970 ((x1639 Int)) Int (x2475 x1639))
(define-fun x4120 ((x1639 Int)) Int (x3696 x1639))
(define-fun x4260 ((x1639 Int)) Int (x4120 x1639))
(define-fun x4025 ((x1639 Int)) Int (x3419 x1639))
(define-fun x1811 ((x1639 Int)) Int (x4025 x1639))
(define-fun x3628 ((x1639 Int)) Int (x3520 x1639))
(define-fun x3216 ((x1639 Int)) Int (x3628 x1639))
(define-fun x3868 ((x1639 Int)) Int (x486 x1639))
(define-fun x2043 ((x1639 Int)) Int (x3868 x1639))
(define-fun x2487 ((x1639 Int)) Int (ite (= x2002 x1639) x2124 (x2960 x1639)))
(define-fun x1379 ((x1639 Int)) Int (ite (= x1672 x1639) x683 (x2487 x1639)))
(define-fun x310 ((x1639 Int)) Int (x1546 x1639))
(define-fun x4265 ((x1639 Int)) Int (ite x4051 (x1791 x1639) (x3401 x1639)))
(define-fun x2066 ((x1639 Int)) Int (ite (and (>= x1639 0) (> x3963 x1639)) (x4265 x1639) (x2987 x1639)))
(define-fun x2361 ((x1639 Int)) Int (ite (and (>= x1639 0) (< x1639 x3963)) (x2066 x1639) (x4082 x1639)))
(define-fun x1168 ((x1639 Int)) Int (ite (and (< x1639 354) (<= 290 x1639)) (x4265 (- x1639 290)) (x2766 x1639)))
(define-fun x2964 ((x1639 Int)) Int (ite (= 4 x1639) 34 (x2987 x1639)))
(define-fun x1151 ((x1639 Int)) Int (ite (and (<= 0 x1639) (> 36 x1639)) (x2964 x1639) (x4082 x1639)))
(define-fun x3229 ((x1639 Int)) Int (ite (= x1639 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4035 x1639)))
(define-fun x3560 ((x1639 Int)) Int (ite (= 192 x1639) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3229 x1639)))
(define-fun x2161 ((x1639 Int)) Int (ite (= 128 x1639) 64 (x1077 x1639)))
(define-fun x1932 ((x1639 Int)) Int (ite (= x1639 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2926 x1639)))
(define-fun x4085 ((x1639 Int)) Int (ite (= 258 x1639) x2894 (x1932 x1639)))
(define-fun x262 ((x1639 Int)) Int (ite (= x1639 224) 34 (x2699 x1639)))
(define-fun x3310 ((x1639 Int)) Int (ite (= 290 x1639) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x1144 x1639)))
(define-fun x2057 ((x1639 Int)) Int (ite (= x1639 294) x4140 (x3310 x1639)))
(define-fun x2148 ((x1639 Int)) Int (ite (= 326 x1639) x1672 (x2057 x1639)))
(define-fun x316 ((x1639 Int)) Int (ite (= 358 x1639) 160 (x2148 x1639)))
(define-fun x4206 ((x1639 Int)) Int (ite (= x1639 454) x359 (x316 x1639)))
(define-fun x1131 ((x1639 Int)) Int (ite (and (<= 486 x1639) (> (+ x359 486) x1639)) (x3560 (- x1639 326)) (x4206 x1639)))
(define-fun x364 ((x1639 Int)) Int (ite (= 390 x1639) 0 (x1131 x1639)))
(define-fun x1484 ((x1639 Int)) Int (ite (= 422 x1639) x961 (x364 x1639)))
(define-fun x3246 ((x1639 Int)) Int (ite (= x419 x1639) x3750 (x1484 x1639)))
(define-fun x684 ((x1639 Int)) Int (ite (and (<= x4216 x1639) (< x1639 (+ x4216 x3750))) (x4085 (- (+ 256 x1639) x4216)) (x3246 x1639)))
(define-fun x2631 ((x1639 Int)) Int (ite (and (< x1639 x1083) (>= x1639 292)) (x684 (+ x1639 290)) (x1425 x1639)))
(define-fun x354 ((x1639 Int)) Int (ite (= 128 x1639) 0 (x295 x1639)))
(define-fun x3096 ((x1639 Int)) Int (ite (= x1639 160) 0 (x354 x1639)))
(define-fun x3038 ((x1639 Int)) Int (ite (= 290 x1639) x337 (x684 x1639)))
(define-fun x2714 ((x1639 Int)) Int (ite (= 322 x1639) x17 (x3038 x1639)))
(define-fun x750 ((x1639 Int)) Int (ite (= 0 x1639) x1214 (x118 x1639)))
(define-fun x2583 ((x1639 Int)) Int (ite (= x1639 32) x4090 (x750 x1639)))
(define-fun x3652 ((x1639 Int)) Int (ite (and (>= x1639 290) (< x1639 354)) (x2583 (- x1639 290)) (x1063 x1639)))
(define-fun x647 ((x1639 Int)) Int (ite x3887 (x2714 x1639) (x46 x1639)))
(define-fun x2913 ((x1639 Int)) Int (ite (= x1639 x641) x3201 (x4159 x1639)))
(define-fun x2214 ((x1639 Int)) Int (ite (= x721 x1639) x2074 (x2913 x1639)))
(define-fun x3805 ((x1639 Int)) Int (ite (= x1639 x1365) x3663 (x4101 x1639)))
(define-fun x237 ((x1639 Int)) Int (ite (= x1639 x1539) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x764 x1639)))
(define-fun x2558 ((x1639 Int)) Int (ite (= x309 x1639) x2894 (x237 x1639)))
(define-fun x3991 ((x1639 Int)) Int (ite (= x1639 x110) x3825 (x4108 x1639)))
(define-fun x4111 ((x1639 Int)) Int (ite (= x1639 x3492) x2901 (x1696 x1639)))
(define-fun x1376 ((x1639 Int)) Int (ite (= x1267 x1639) x2579 (x713 x1639)))
(define-fun x4155 ((x1639 Int)) Int (ite (= x1267 x1639) x1641 (x713 x1639)))
(define-fun x2834 ((x1639 Int)) Int (ite (= x1639 x927) x2942 (x1376 x1639)))
(define-fun x3583 ((x1639 Int)) Int (ite x2041 (x1947 x1639) (ite x2580 (ite x300 (x1376 x1639) (x2834 x1639)) (x4155 x1639))))
(define-fun x49 ((x1639 Int)) Int (ite (= x1225 x1639) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x647 x1639)))
(define-fun x1855 ((x1639 Int)) Int (ite (= x1639 x707) x4140 (x49 x1639)))
(define-fun x3683 ((x1639 Int)) Int (ite (= x1639 x2547) 192 (x1855 x1639)))
(define-fun x137 ((x1639 Int)) Int (ite (= x4069 x1639) x1743 (x3683 x1639)))
(define-fun x2139 ((x1639 Int)) Int (ite (and (< x1639 (+ x1930 x1743)) (<= x1930 x1639)) (x3583 (- (+ x1267 x1639) x1930)) (x137 x1639)))
(define-fun x2555 ((x1639 Int)) Int (ite (= x1639 x1393) x4218 (x2139 x1639)))
(define-fun x2806 ((x1639 Int)) Int (ite (= x1639 x2484) x375 (x2555 x1639)))
(define-fun x1903 ((x1639 Int)) Int (ite (and (> (+ x375 x317) x1639) (<= x317 x1639)) (x2214 (- (+ x1639 x1766) x317)) (x2806 x1639)))
(define-fun x270 ((x1639 Int)) Int (ite (= x1639 x1626) x1672 (x1903 x1639)))
(define-fun x658 ((x1639 Int)) Int (ite (= x1639 x1534) 0 (x270 x1639)))
(define-fun x1812 ((x1639 Int)) Int (ite (= x3399 x1639) x3050 (x658 x1639)))
(define-fun x2640 ((x1639 Int)) Int (ite (= x1639 x3852) x845 (x1812 x1639)))
(define-fun x2070 ((x1639 Int)) Int (ite (and (>= x1639 x3473) (< x1639 (+ x3473 x845))) (x2558 (- (+ x1639 x864) x3473)) (x2640 x1639)))
(define-fun x2147 ((x1639 Int)) Int (ite (= x1639 x1672) x3940 (x2945 x1639)))
(define-fun x3949 ((x1639 Int)) Int (ite (= x1639 x1306) x2972 (x2147 x1639)))
(define-fun x1322 ((x1639 Int)) Int (ite (and (<= 228 x1639) (< x1639 x3149)) (x2070 (- (+ x1639 (x1713 (+ 228 x1225))) 228)) (x947 x1639)))
(define-fun x3131 ((x1639 Int)) Int (ite x3505 (x3419 x1639) (x2245 x1639)))
(define-fun x2760 ((x1639 Int)) Int (ite x3505 (x4215 x1639) (x2814 x1639)))
(define-fun x2088 ((x1639 Int)) Int (ite x3505 (x4188 x1639) (x1848 x1639)))
(define-fun x3067 ((x1639 Int)) Int (ite x3124 (x3248 x1639) (ite x2928 (x3248 x1639) (x2260 x1639))))
(define-fun x2288 ((x1639 Int)) Int (x3067 x1639))
(define-fun x3779 ((x1639 Int)) Int (ite x430 (x3067 x1639) (x2288 x1639)))
(define-fun x1015 ((x1639 Int)) Int (ite x3124 (x1427 x1639) (ite x2928 (x1427 x1639) (x1774 x1639))))
(define-fun x700 ((x1639 Int)) Int (ite x1313 (x1015 x1639) (x1850 x1639)))
(define-fun x107 ((x1639 Int)) Int (ite x430 (x1015 x1639) (x700 x1639)))
(define-fun x3516 ((x1639 Int)) Int (x342 x1639))
(define-fun x3433 ((x1639 Int)) Int (x3516 x1639))
(define-fun x1669 ((x1639 Int)) Int (ite x3124 (x1284 x1639) (ite x2928 (x1284 x1639) (x3778 x1639))))
(define-fun x3137 ((x1639 Int)) Int (ite x637 (x1023 x1639) (x1669 x1639)))
(define-fun x411 ((x1639 Int)) Int (ite x430 (x1669 x1639) (ite x1313 (x3137 x1639) (x2481 x1639))))
(define-fun x3117 ((x1639 Int)) Int (x3520 x1639))
(define-fun x3581 ((x1639 Int)) Int (x3117 x1639))
(define-fun x682 ((x1639 Int)) Int (ite (= 0 x1639) x380 (x2862 x1639)))
(define-fun x2730 ((x1639 Int)) Int (ite x3124 (x2299 x1639) (ite x2928 (x2299 x1639) (x9 x1639))))
(define-fun x1385 ((x1639 Int)) Int (ite (= 128 x1639) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x19 x1639)))
(define-fun x397 ((x1639 Int)) Int (ite (= 132 x1639) x3951 (x1385 x1639)))
(define-fun x3463 ((x1639 Int)) Int (ite (= x1639 164) 128 (x397 x1639)))
(define-fun x3720 ((x1639 Int)) Int (ite (= 260 x1639) x1056 (x3463 x1639)))
(define-fun x3354 ((x1639 Int)) Int (ite (= 292 x1639) x97 (x3720 x1639)))
(define-fun x1854 ((x1639 Int)) Int (ite (= x1639 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x19 x1639)))
(define-fun x2678 ((x1639 Int)) Int (ite (= x1639 132) x1910 (x1854 x1639)))
(define-fun x1029 ((x1639 Int)) Int (ite (= 164 x1639) 128 (x2678 x1639)))
(define-fun x1444 ((x1639 Int)) Int (ite (= 260 x1639) x2100 (x1029 x1639)))
(define-fun x1408 ((x1639 Int)) Int (ite (= 292 x1639) x3605 (x1444 x1639)))
(define-fun x3609 ((x1639 Int)) Int (ite x3124 (x3696 x1639) (ite x2928 (x3696 x1639) (x2349 x1639))))
(define-fun x1574 ((x1639 Int)) Int (ite (= x1639 292) x3449 (x3720 x1639)))
(define-fun x939 ((x1639 Int)) Int (ite x1866 (ite x3334 (x3720 x1639) (x3354 x1639)) (x1574 x1639)))
(define-fun x3318 ((x1639 Int)) Int (ite (= 196 x1639) x3878 (x939 x1639)))
(define-fun x2259 ((x1639 Int)) Int (ite (= 228 x1639) x2018 (x3318 x1639)))
(define-fun x3127 ((x1639 Int)) Int (ite (= x2728 x1639) x656 (x2259 x1639)))
(define-fun x2038 ((x1639 Int)) Int (ite (= x278 x1639) x467 (x3127 x1639)))
(define-fun x2529 ((x1639 Int)) Int (ite (= 292 x1639) x2480 (x1444 x1639)))
(define-fun x484 ((x1639 Int)) Int (ite x1065 (ite x2979 (x1444 x1639) (x1408 x1639)) (x2529 x1639)))
(define-fun x3071 ((x1639 Int)) Int (ite (= 196 x1639) x923 (x484 x1639)))
(define-fun x4130 ((x1639 Int)) Int (ite (= x1639 228) x4117 (x3071 x1639)))
(define-fun x2998 ((x1639 Int)) Int (ite (= x3816 x1639) x4192 (x4130 x1639)))
(define-fun x1491 ((x1639 Int)) Int (ite (= x2053 x1639) x687 (x2998 x1639)))
(define-fun x4074 ((x1639 Int)) Int (ite (= x278 x1639) x3871 (x3127 x1639)))
(define-fun x3021 ((x1639 Int)) Int (ite (= x2053 x1639) x321 (x2998 x1639)))
(define-fun x2091 ((x1639 Int)) Int (ite x1409 (ite x1756 (x3127 x1639) (x2038 x1639)) (x4074 x1639)))
(define-fun x2850 ((x1639 Int)) Int (ite (and (>= x1639 164) (< x1639 x3392)) (x2091 (+ x1639 128)) (x3869 x1639)))
(define-fun x884 ((x1639 Int)) Int (ite (= x1639 128) x2610 (x1790 x1639)))
(define-fun x4296 ((x1639 Int)) Int (ite (= x1639 160) x848 (x884 x1639)))
(define-fun x1865 ((x1639 Int)) Int (ite (= 160 x1639) x1828 (x884 x1639)))
(define-fun x1813 ((x1639 Int)) Int (ite x846 (ite x2413 (x2998 x1639) (x1491 x1639)) (x3021 x1639)))
(define-fun x2526 ((x1639 Int)) Int (ite (and (< x1639 x381) (>= x1639 164)) (x1813 (+ 128 x1639)) (x1668 x1639)))
(define-fun x2279 ((x1639 Int)) Int (ite (= x2614 x1639) x1198 (x941 x1639)))
(define-fun x1616 ((x1639 Int)) Int (ite (and (< x1639 (+ x1198 x2688)) (<= x2688 x1639)) (x2526 (- (+ x1639 x3956) x2688)) (x671 x1639)))
(define-fun x1793 ((x1639 Int)) Int (ite (= x1639 x1694) 0 (x1616 x1639)))
(define-fun x2741 ((x1639 Int)) Int (ite (= x1639 x2149) 1 (x3520 x1639)))
(define-fun x2543 ((x1639 Int)) Int (ite (= 192 x1639) x3584 (x4296 x1639)))
(define-fun x3146 ((x1639 Int)) Int (ite x2188 (x884 x1639) (ite x4160 (ite x2509 (x4296 x1639) (x2543 x1639)) (x1865 x1639))))
(define-fun x1514 ((x1639 Int)) Int (ite (and (<= x3690 x1639) (< x1639 (+ x3690 x2268))) (x2850 (- (+ x1639 164) x3690)) (x3146 x1639)))
(define-fun x4006 ((x1639 Int)) Int (ite (= x2341 x1639) 0 (x1514 x1639)))
(define-fun x3982 ((x1639 Int)) Int (ite x2079 (x4006 x1639) (x3146 x1639)))
(define-fun x4126 ((x1639 Int)) Int (ite (= x3690 x1639) x2268 (x3982 x1639)))
(define-fun x1488 ((x1639 Int)) Int (ite (and (> (+ x2268 x559) x1639) (>= x1639 x559)) (x2850 (- (+ 164 x1639) x559)) (x4126 x1639)))
(define-fun x496 ((x1639 Int)) Int (ite (= x1677 x1639) 0 (x1488 x1639)))
(define-fun x2919 ((x1639 Int)) Int (ite (= x1639 x503) x1297 (x496 x1639)))
(define-fun x1580 ((x1639 Int)) Int (ite (and (<= x2293 x1639) (< x1639 (+ x1297 x2293))) (x2850 (- (+ x1639 x3424) x2293)) (x2919 x1639)))
(define-fun x1394 ((x1639 Int)) Int (ite (= x223 x1639) 0 (x1580 x1639)))
(define-fun x232 ((x1639 Int)) Int (ite (= x1639 x2396) x3951 (x1394 x1639)))
(define-fun x579 ((x1639 Int)) Int (ite (= x3549 x1639) 128 (x232 x1639)))
(define-fun x572 ((x1639 Int)) Int (ite (= x4148 x1639) x306 (x579 x1639)))
(define-fun x57 ((x1639 Int)) Int (ite (= x2007 x1639) x754 (x572 x1639)))
(define-fun x2744 ((x1639 Int)) Int (ite (= x3704 x1639) x926 (x57 x1639)))
(define-fun x1116 ((x1639 Int)) Int (ite (= x2829 x1639) x1789 (x2744 x1639)))
(define-fun x2839 ((x1639 Int)) Int (ite (= x2486 x1639) x123 (x1116 x1639)))
(define-fun x336 ((x1639 Int)) Int (ite x2581 (x1116 x1639) (ite x2221 (x2744 x1639) (ite x2680 (x57 x1639) (ite x1992 (x572 x1639) (x2839 x1639))))))
(define-fun x3529 ((x1639 Int)) Int (ite (= x3950 x1639) 0 (x336 x1639)))
(define-fun x1104 ((x1639 Int)) Int (ite (= x1639 x2634) x3878 (x3529 x1639)))
(define-fun x2683 ((x1639 Int)) Int (ite (= x4244 x1639) x814 (x1104 x1639)))
(define-fun x3627 ((x1639 Int)) Int (ite (= x1639 x1598) x3648 (x2683 x1639)))
(define-fun x2482 ((x1639 Int)) Int (ite (= x1639 x4251) x1407 (x3627 x1639)))
(define-fun x1295 ((x1639 Int)) Int (ite (= x1639 x1424) x1643 (x2482 x1639)))
(define-fun x983 ((x1639 Int)) Int (ite (= x1639 x512) x2312 (x1295 x1639)))
(define-fun x1733 ((x1639 Int)) Int (ite (= x1639 x3919) x1782 (x983 x1639)))
(define-fun x602 ((x1639 Int)) Int (ite x1642 (x983 x1639) (ite x4158 (x1295 x1639) (ite x2883 (x2482 x1639) (ite x935 (x3627 x1639) (x1733 x1639))))))
(define-fun x802 ((x1639 Int)) Int (ite (= x3555 x1639) 0 (x602 x1639)))
(define-fun x2597 ((x1639 Int)) Int (ite (= x1639 x3180) x3143 (x802 x1639)))
(define-fun x2673 ((x1639 Int)) Int (ite (= x2056 x1639) x2720 (x2597 x1639)))
(define-fun x993 ((x1639 Int)) Int (ite (= x1639 x1750) 150 (x2673 x1639)))
(define-fun x866 ((x1639 Int)) Int (ite (and (<= x1388 x1639) (> (+ 150 x1388) x1639)) (x2850 (- (+ x36 x1639) x1388)) (x993 x1639)))
(define-fun x252 ((x1639 Int)) Int (ite (and (< x1639 0) (<= 0 x1639)) (x1361 x1639) (x866 x1639)))
(define-fun x493 ((x1639 Int)) Int (ite x637 (x252 x1639) (x866 x1639)))
(define-fun x3228 ((x1639 Int)) Int (ite (= x1639 x1750) x2448 (x493 x1639)))
(define-fun x1396 ((x1639 Int)) Int (ite (and (>= x1639 x1362) (< x1639 (+ x1362 x2448))) (x1361 (- x1639 x1362)) (x3228 x1639)))
(define-fun x2123 ((x1639 Int)) Int (ite (= x1639 x3429) x103 (x1396 x1639)))
(define-fun x2246 ((x1639 Int)) Int (ite (= x2625 x1639) x1925 (x2123 x1639)))
(define-fun x2015 ((x1639 Int)) Int (ite (= x1639 x2049) x3576 (x2246 x1639)))
(define-fun x1904 ((x1639 Int)) Int (ite x1313 (x3137 x1639) (x2481 x1639)))
(define-fun x67 ((x1639 Int)) Int (x3516 x1639))
(define-fun x3064 ((x1639 Int)) Int (x3117 x1639))
(define-fun x154 ((x1639 Int)) Int (ite (= x4172 x1639) x4211 (x2015 x1639)))
(define-fun x632 ((x1639 Int)) Int (ite x3660 (x2015 x1639) (ite x2632 (x2246 x1639) (ite x3448 (x2123 x1639) (ite x1665 (x1396 x1639) (x154 x1639))))))
(define-fun x2644 ((x1639 Int)) Int (ite (= x1639 x3018) 0 (x632 x1639)))
(define-fun x1981 ((x1639 Int)) Int (ite (= x1639 x1786) x2410 (x2644 x1639)))
(define-fun x447 ((x1639 Int)) Int (ite (= x3429 x1639) x3951 (x1981 x1639)))
(define-fun x4197 ((x1639 Int)) Int (ite (= x1639 x366) 160 (x447 x1639)))
(define-fun x2598 ((x1639 Int)) Int (ite (= x4031 x1639) x3656 (x4197 x1639)))
(define-fun x2645 ((x1639 Int)) Int (ite (= x1639 x4020) x3042 (x2598 x1639)))
(define-fun x1871 ((x1639 Int)) Int (ite (= x1639 x2925) x2653 (x2645 x1639)))
(define-fun x1888 ((x1639 Int)) Int (ite (= x1639 x1592) x3629 (x1871 x1639)))
(define-fun x1844 ((x1639 Int)) Int (ite (= x1639 x4041) x4168 (x1888 x1639)))
(define-fun x3514 ((x1639 Int)) Int (ite x3647 (x1888 x1639) (ite x3266 (x1871 x1639) (ite x719 (x2645 x1639) (ite x1524 (x2598 x1639) (x1844 x1639))))))
(define-fun x515 ((x1639 Int)) Int (ite (= x1819 x1639) 0 (x3514 x1639)))
(define-fun x2837 ((x1639 Int)) Int (ite (= x1639 x1908) x3878 (x515 x1639)))
(define-fun x2255 ((x1639 Int)) Int (ite (= x2737 x1639) x3990 (x2837 x1639)))
(define-fun x461 ((x1639 Int)) Int (ite (= x1540 x1639) x868 (x2255 x1639)))
(define-fun x762 ((x1639 Int)) Int (ite (= x1845 x1639) x3108 (x461 x1639)))
(define-fun x3388 ((x1639 Int)) Int (ite (= x2031 x1639) x3009 (x762 x1639)))
(define-fun x1549 ((x1639 Int)) Int (ite (= x1639 x1206) x218 (x3388 x1639)))
(define-fun x1153 ((x1639 Int)) Int (ite (= x3138 x1639) x1663 (x1549 x1639)))
(define-fun x4248 ((x1639 Int)) Int (ite x1603 (x1549 x1639) (ite x3730 (x3388 x1639) (ite x3790 (x762 x1639) (ite x901 (x461 x1639) (x1153 x1639))))))
(define-fun x3158 ((x1639 Int)) Int (ite (= x1639 x1458) 0 (x4248 x1639)))
(define-fun x2319 ((x1639 Int)) Int (ite (= x865 x1639) x1474 (x3158 x1639)))
(define-fun x3109 ((x1639 Int)) Int (ite x3124 (x1597 x1639) (ite x2928 (x1597 x1639) (x1190 x1639))))
(define-fun x2184 ((x1639 Int)) Int (ite (= x181 x1639) x3850 (x3109 x1639)))
(define-fun x1974 ((x1639 Int)) Int (ite x3124 (x2428 x1639) (ite x2928 (x2428 x1639) (ite x2371 (ite x3102 (x1402 x1639) (x2428 x1639)) (ite x3210 (ite x2576 (x2428 x1639) (ite x916 (x2960 x1639) (ite x1502 (x1379 x1639) (x2428 x1639)))) (ite x1529 (x3949 x1639) (ite x1493 (ite x3505 (x2428 x1639) (x3183 x1639)) (x2428 x1639))))))))
(define-fun x1200 ((x1639 Int)) Int (ite x3124 (x1936 x1639) (ite x2928 (x1936 x1639) (x3565 x1639))))
(define-fun x810 ((x1639 Int)) Int (ite (= x3289 x1639) x2058 (x1200 x1639)))
(define-fun x3810 ((x1639 Int)) Int (ite x3124 (x3111 x1639) (ite x2928 (x3111 x1639) (x1734 x1639))))
(define-fun x746 ((x1639 Int)) Int (ite (= x3279 x1639) x701 (x3810 x1639)))
(define-fun x3204 ((x1639 Int)) Int (ite x3124 (x351 x1639) (ite x2928 (x351 x1639) (x4107 x1639))))
(define-fun x78 ((x1639 Int)) Int (ite (= x1639 x439) x1672 (x3204 x1639)))
(define-fun x1265 ((x1639 Int)) Int (ite (= 0 x1639) x2605 (x2862 x1639)))
(define-fun x1535 ((x1639 Int)) Int (ite x3102 (x2499 x1639) (x351 x1639)))
(define-fun x913 ((x1639 Int)) Int (ite x3102 (x1562 x1639) (x1284 x1639)))
(define-fun x1263 ((x1639 Int)) Int (ite x3102 (x1685 x1639) (x289 x1639)))
(define-fun x2984 ((x1639 Int)) Int (ite x3102 (x230 x1639) (x2869 x1639)))
(define-fun x3839 ((x1639 Int)) Int (ite x3102 (x2570 x1639) (x3111 x1639)))
(define-fun x2323 ((x1639 Int)) Int (ite x3102 (x616 x1639) (x1199 x1639)))
(define-fun x417 ((x1639 Int)) Int (ite x3102 (x1093 x1639) (x3696 x1639)))
(define-fun x2024 ((x1639 Int)) Int (ite x3102 (x3359 x1639) (x1830 x1639)))
(define-fun x1384 ((x1639 Int)) Int (ite x3102 (x3346 x1639) (x2299 x1639)))
(define-fun x2275 ((x1639 Int)) Int (ite x3102 (x1699 x1639) (x2857 x1639)))
(define-fun x608 ((x1639 Int)) Int (ite x3102 (x2034 x1639) (x1936 x1639)))
(define-fun x1332 ((x1639 Int)) Int (ite x377 (x497 x1639) (x1824 x1639)))
(define-fun x2403 ((x1639 Int)) Int (ite (and (>= x1639 128) (< x1639 160)) (x1332 (- x1639 128)) (x129 x1639)))
(define-fun x2595 ((x1639 Int)) Int (ite x4104 (x2417 x1639) (x1986 x1639)))
(define-fun x3970 ((x1639 Int)) Int (ite (and (>= x1639 128) (> 160 x1639)) (x2595 (- x1639 128)) (x1587 x1639)))
(define-fun x4096 ((x1639 Int)) Int (x1736 x1639))
(define-fun x1292 ((x1639 Int)) Int (x76 x1639))
(define-fun x1339 ((x1639 Int)) Int (x2496 x1639))
(define-fun x2020 ((x1639 Int)) Int (ite x3124 (x4205 x1639) (ite x2928 (x1830 x1639) (x1212 x1639))))
(define-fun x1957 ((x1639 Int)) Int (ite x3124 (x3419 x1639) (x1503 x1639)))
(define-fun x4278 ((x1639 Int)) Int (x486 x1639))
(define-fun x516 ((x1639 Int)) Int (ite x3124 (x1199 x1639) (ite x2928 (x1199 x1639) (x2248 x1639))))
(define-fun x2151 ((x1639 Int)) Int (ite x3124 (x2857 x1639) (ite x2928 (x2857 x1639) (x261 x1639))))
(define-fun x108 ((x1639 Int)) Int (ite x3124 (x2869 x1639) (ite x2928 (x2869 x1639) (x2402 x1639))))
(define-fun x1962 ((x1639 Int)) Int (ite x3124 (x289 x1639) (ite x2928 (x289 x1639) (x308 x1639))))
(define-fun x2169 ((x1639 Int)) Int (x2527 x1639))
(define-fun x3979 ((x1639 Int)) Int (ite x3124 (x4188 x1639) (x2848 x1639)))
(define-fun x323 ((x1639 Int)) Int (ite x3124 (x4215 x1639) (x4273 x1639)))
(define-fun x2840 ((x1639 Int)) Int (ite (= x1639 x4203) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x963 x1639)))
(define-fun x2223 ((x1639 Int)) Int (ite (= x1639 x1369) x1275 (x2840 x1639)))
(define-fun x147 ((x1639 Int)) Int (ite (= x1639 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x19 x1639)))
(define-fun x885 ((x1639 Int)) Int (ite (= x1639 132) x3374 (x147 x1639)))
(define-fun x1630 ((x1639 Int)) Int (ite (= 164 x1639) x1443 (x885 x1639)))
(define-fun x2466 ((x1639 Int)) Int (ite (= x1639 196) x877 (x1630 x1639)))
(define-fun x1380 ((x1639 Int)) Int (ite (= 228 x1639) x3311 (x2466 x1639)))
(define-fun x4231 ((x1639 Int)) Int (ite x3700 (x3067 x1639) (ite x430 (x3067 x1639) (x2288 x1639))))
(define-fun x2328 ((x1639 Int)) Int (ite x3700 (x1015 x1639) (ite x430 (x1015 x1639) (x700 x1639))))
(define-fun x1228 ((x1639 Int)) Int (x3516 x1639))
(define-fun x2442 ((x1639 Int)) Int (x3117 x1639))
(define-fun x1234 ((x1639 Int)) Int (ite x3700 (x1265 x1639) (x682 x1639)))
(define-fun x3715 ((x1639 Int)) Int (ite (and (<= x4203 x1639) (< x1639 (+ x4203 32))) (x1234 (- x1639 x4203)) (x414 x1639)))
(define-fun x2194 ((x1639 Int)) Int (ite (= x1738 x1639) 0 (x3520 x1639)))
(define-fun x2469 ((x1639 Int)) Int (ite (= x1639 x2489) 1 (x2328 x1639)))
(define-fun x346 ((x1639 Int)) Int (ite (= x1639 x691) x3224 (x342 x1639)))
(define-fun x111 ((x1639 Int)) Int (ite (= x2630 x1639) 0 (x4231 x1639)))
(define-fun x776 ((x1639 Int)) Int 0)
(define-fun x2646 ((x1639 Int)) Int 0)
(define-fun x2821 ((x1639 Int)) Int (ite (= x1639 128) x1260 (x2584 x1639)))
(define-fun x1880 ((x1639 Int)) Int (ite (= 160 x1639) x804 (x2821 x1639)))
(define-fun x1317 ((x1639 Int)) Int (ite (= x1639 192) x2713 (x1880 x1639)))
(assert (x881 x1716))
(assert (> (x1723 x228 x3679) 10000))
(assert (= x3725 (x1415 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710))))
(assert (not (x1229 (x1338 64 x3297 36))))
(assert (= (x2363 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (= (x1338 64 x288 10) (x2363 (x1338 64 x288 10))))
(assert (x881 x1355))
(assert (x881 x563))
(assert (= (x1415 (x1338 x1241 x4030 x1619)) x4030))
(assert (=> (>= 10000 x26) (= (x2363 x26) 0)))
(assert (x881 x1746))
(assert (= 12 (x1451 (x1338 64 x2541 12))))
(assert (x881 x2944))
(assert (= (x2363 (x2226 x59 x561 x198 x4009)) (x2226 x59 x561 x198 x4009)))
(assert (= (x2229 (x2226 x569 x1325 x3903 x3355)) x569))
(assert (x881 x1213))
(assert (=> (>= 10000 x3368) (= (x2363 x3368) 0)))
(assert (= (and x3105 (not x2102)) x1450))
(assert (= (x2164 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) x3797))
(assert (x881 x4299))
(assert (x881 x2488))
(assert (= (and x1801 x2921) x2928))
(assert (x881 x297))
(assert (= x2949 (=> (= x1768 (+ x3506 x3190)) x1839)))
(assert (x881 x1223))
(assert (x881 x1730))
(assert (x881 x3405))
(assert (=> (<= x565 10000) (= (x2363 x565) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x89 6)))
(assert (= x3217 (x3455 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642))))
(assert (x881 x168))
(assert (x881 x573))
(assert (x881 x2830))
(assert (= (x2229 (x1338 64 x4179 11)) 64))
(assert (x881 x2321))
(assert (x881 x361))
(assert (x881 x927))
(assert (x881 x18))
(assert (x881 x1083))
(assert (= (x2363 (x1338 64 x4019 (ite (= x2790 0) x3808 (ite (<= x2790 32) x2788 (ite (<= x2790 64) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (<= x2790 160) x94 (ite (<= x2790 192) x3483 (ite (>= 224 x2790) x644 x3114)))))))))) (x1338 64 x4019 (ite (= x2790 0) x3808 (ite (>= 32 x2790) x2788 (ite (>= 64 x2790) x2627 (ite (>= 96 x2790) x2085 (ite (<= x2790 128) x3926 (ite (>= 160 x2790) x94 (ite (<= x2790 192) x3483 (ite (>= 224 x2790) x644 x3114)))))))))))
(assert (x881 x2014))
(assert (x881 x911))
(assert (= x203 (x1451 (x1338 x228 x2937 x203))))
(assert (= (x2761 x1241 x889 x3842 x4212 x3890 x1143) (x2363 (x2761 x1241 x889 x3842 x4212 x3890 x1143))))
(assert (x881 x3212))
(assert (= (and x145 x416) x430))
(assert (x881 x1001))
(assert (x1229 100000))
(assert (x881 x1095))
(assert (= (and x45 x833) x2983))
(assert (x881 x1147))
(assert (x881 x110))
(assert (> (x1338 64 x61 11) 10000))
(assert (x881 x3306))
(assert (x1517 x1286))
(assert (x881 x3292))
(assert (= x485 (x2164 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (=> (>= 10000 x598) (= (x2363 x598) 0)))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (=> (>= 10000 x2940) (= (x2363 x2940) 0)))
(assert (x862 x1286))
(assert (=> (>= 10000 x2804) (= (x2363 x2804) 0)))
(assert (x881 x505))
(assert (x881 x1097))
(assert (x881 x2634))
(assert (= (x2229 (x1338 64 x1672 2)) 64))
(assert (not (x1229 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735))))
(assert (x881 x2767))
(assert (=> (<= x4179 10000) (= 0 (x2363 x4179))))
(assert (=> (>= 10000 x290) (= (x2363 x290) 0)))
(assert (= x3675 (x3455 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (< (x1338 64 x576 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3866 10000) (= 0 (x2363 x3866))))
(assert (x881 x2308))
(assert (= (=> (and (or (and (= (ite x1843 1 0) x3518) (not x1843)) (and x1843 (and (= (ite (> x1038 0) 1 0) x3518) (= (x3577 128) x1038)))) (and (= (x3577 128) x1226) (= x1843 (= x1226 x569)))) x3830) x127))
(assert (= (and (not x1064) x998) x2193))
(assert (=> (<= x3217 10000) (= (x2363 x3217) 0)))
(assert (x881 x280))
(assert (= (x1338 x2115 x2650 x594) (x2363 (x1338 x2115 x2650 x594))))
(assert (x881 x71))
(assert (x881 x1600))
(assert (x881 x433))
(assert (x881 x1786))
(assert (x881 x101))
(assert (=> (>= 10000 x3297) (= (x2363 x3297) 0)))
(assert (= (and x2606 x1999) x1899))
(assert (= (x3455 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)) x3394))
(assert (x881 x128))
(assert (= (x1415 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284)) x3793))
(assert (not (x1229 (x1338 64 x288 10))))
(assert (x881 x3478))
(assert (x1229 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (x881 x2182))
(assert (x862 x2154))
(assert (> (x2226 x2115 x2944 x213 x404) 10000))
(assert (< (x1338 64 x39 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x3311))
(assert (x881 x3100))
(assert (x862 x3415))
(assert (x881 x4240))
(assert (= x1139 (and x3892 x1971)))
(assert (< (x1723 x1712 x1961) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x1311))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x59 x1512 x806 x1358 x3031 x835)))
(assert (= (x1415 (x2226 x655 x536 x2742 x635)) x536))
(assert (x881 x77))
(assert (< 10000 (x898 x1001 x733 x3095 x4259 x386)))
(assert (= x2048 (and x3802 x392)))
(assert (not (x1229 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849))))
(assert (= x813 (x2229 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849))))
(assert (= x2519 (x1451 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735))))
(assert (x881 x4238))
(assert (x881 x3098))
(assert (x881 x1569))
(assert (x862 x1627))
(assert (x881 x643))
(assert (x881 x3270))
(assert (= x2369 (and (not x1972) x2351)))
(assert (= (x2363 (x2761 x2115 x2128 x2435 x485 x1146 x326)) (x2761 x2115 x2128 x2435 x485 x1146 x326)))
(assert (x881 x1459))
(assert (x881 x1534))
(assert (= (x3658 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) x455))
(assert (x862 x3899))
(assert (= x3716 (or x1101 x535)))
(assert (=> (>= 10000 x642) (= 0 (x2363 x642))))
(assert (< (x1338 64 x1672 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x511 (= 0 x4156)) (or (and (not x511) (and (= x3600 x3470) (= x405 x2144) (= x1296 x1917) (= x2752 x2836) (= x2013 x3006) (= x2682 x3093) (= x3312 x2431) (= x4264 x2725) (= x712 x2722) (= x3207 x1047) (= x1240 x4156) (= x3523 x420) (= x775 x1473) (= x1395 x2182))) (and (and (= x1395 x2182) (= (+ x501 x1521) x977) (= x2013 x3006) (= x775 x1473) (= x712 x2722) (= x1240 x4156) (= x1047 x3207) (= x2144 x405) (= x1296 x1917) (= x420 x3523) (= x2836 x2752) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x977) (= (ite (= 0 x4156) x456 0) x1521) (= x4264 x2725) (= x683 x977) (= (- x3781 x1521) x2124) (>= x977 0) (= x2682 x3093) (= x3781 (x2960 x2002)) (= x3600 x3470) (= x3312 x2431) (= (x2487 x1672) x501) (< (+ x1521 x501) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x511))) x3531) x3213))
(assert (= x1631 (x3658 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291))))
(assert (= (x1338 64 x3878 (ite (= 0 x228) x1179 (ite (<= x228 32) x2035 (ite (<= x228 64) x190 (ite (>= 96 x228) x2681 (ite (<= x228 128) x1341 (ite (<= x228 160) x1799 (ite (>= 192 x228) x2809 (ite (<= x228 224) x171 x2180))))))))) (x2363 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (>= 32 x228) x2035 (ite (>= 64 x228) x190 (ite (<= x228 96) x2681 (ite (<= x228 128) x1341 (ite (>= 160 x228) x1799 (ite (>= 192 x228) x2809 (ite (>= 224 x228) x171 x2180))))))))))))
(assert (x881 x3452))
(assert (> (x1723 x1241 x1326) 10000))
(assert (= (x1451 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) x992))
(assert (= (=> (and (= x3891 (> x1953 0)) (= x1362 (x1713 (+ x1750 32))) (= (ite (> x563 150) 150 x563) x2448)) (and (=> x3891 x730) (=> (not x3891) x151))) x1755))
(assert (x881 x3752))
(assert (= (or x3505 x3542) x1493))
(assert (= (and x2746 x3145) x1122))
(assert (= (x1415 (x2761 x228 x565 x1946 x2505 x3139 x2202)) x565))
(assert (x881 x3367))
(assert (> (x1723 x59 x4093) 10000))
(assert (x881 x1215))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x881 x1949))
(assert (= (x2229 (x1338 64 x576 36)) 64))
(assert (= (x3658 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) x1920))
(assert (x881 x2691))
(assert (x881 x1226))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)))
(assert (= (x1723 x2790 x2655) (x2363 (x1723 x2790 x2655))))
(assert (x881 x822))
(assert (x881 x3099))
(assert (=> (<= x3786 10000) (= (x2363 x3786) 0)))
(assert (= (x2363 (x1723 x59 x4093)) (x1723 x59 x4093)))
(assert (x881 x3316))
(assert (not (x1229 (x1338 x228 x2937 x203))))
(assert (x881 x3521))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x4198 36)))
(assert (x881 x3160))
(assert (x881 x4065))
(assert (x881 x857))
(assert (=> (>= 10000 x3942) (= (x2363 x3942) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)))
(assert (x881 x2706))
(assert (x862 x619))
(assert (= (x3658 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) x2975))
(assert (x881 x603))
(assert (= x3497 (=> (and (= (x1713 (+ x760 x701)) x2058) (= x2404 false) (= (x1200 x3289) x760) (= (x1338 64 x2605 0) x3279) (= x2471 false) (= x1320 (+ 1 x2605)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2605) (= x3289 (x1338 64 x1672 2)) (not (< x2058 x760)) (= (+ x3279 1) x439) (= x1024 (+ 1 x2605))) x2023)))
(assert (x320 x1169))
(assert (x881 x3203))
(assert (= (and (not x511) x1268) x916))
(assert (x881 x4249))
(assert (=> (>= 10000 x132) (= (x2363 x132) 0)))
(assert (x881 x2203))
(assert (= (and x3184 x2242) x445))
(assert (=> (<= x1946 10000) (= 0 (x2363 x1946))))
(assert (x881 x1271))
(assert (= (x1415 (x2226 x2268 x526 x4292 x1748)) x526))
(assert (x881 x4219))
(assert (= x541 (x1415 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511))))
(assert (x881 x510))
(assert (= (x2363 (x2761 x3829 x2510 x1242 x495 x938 x3561)) (x2761 x3829 x2510 x1242 x495 x938 x3561)))
(assert (= x3368 (x1451 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (x881 x1841))
(assert (= (and x2072 x3907) x3845))
(assert (x881 x2670))
(assert (= (x2229 (x2226 x1949 x3121 x2734 x1084)) x1949))
(assert (x881 x2136))
(assert (=> (<= x158 10000) (= (x2363 x158) 0)))
(assert (= (and x1740 (not x1843)) x3933))
(assert (= (x2363 (x1338 64 x164 6)) (x1338 64 x164 6)))
(assert (= (x1338 64 x4140 5) (x2363 (x1338 64 x4140 5))))
(assert (= (x3658 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022)) x1053))
(assert (x881 x2888))
(assert (x881 x3821))
(assert (x881 x2782))
(assert (< (x1338 64 x1070 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x571))
(assert (x1229 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (x881 x2542))
(assert (x881 x2872))
(assert (x881 x1722))
(assert (=> (>= 10000 x3682) (= (x2363 x3682) 0)))
(assert (= (x2363 (x1338 x1712 x1433 x2126)) (x1338 x1712 x1433 x2126)))
(assert (= x3898 (x1415 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (= (x3658 (x2761 x1001 x3563 x1612 x1076 x2444 x840)) x2444))
(assert (= (and x2405 x2679) x1938))
(assert (=> (>= 10000 x1290) (= 0 (x2363 x1290))))
(assert (x881 x612))
(assert (x881 x2838))
(assert (not (x1229 (x1338 64 x576 36))))
(assert (not (x1229 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (x881 x581))
(assert (x881 x4118))
(assert (= (and x3731 x738) x1889))
(assert (= (x1451 (x1338 64 x3156 10)) 10))
(assert (x881 x2289))
(assert (= (x2229 (x1338 64 x33 2)) 64))
(assert (= (x2363 (x1338 64 x3059 2)) (x1338 64 x3059 2)))
(assert (x881 x1959))
(assert (= (x1451 (x1338 x3829 x2196 x2795)) x2795))
(assert (x881 x3321))
(assert (= x2509 (and (not x2325) x93)))
(assert (=> (>= 10000 x3954) (= 0 (x2363 x3954))))
(assert (= x3000 (x1451 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636))))
(assert (x881 x3753))
(assert (x881 x162))
(assert (= (x3658 (x898 x1001 x733 x3095 x4259 x386)) x386))
(assert (x881 x4182))
(assert (not (x1229 (x1338 64 x4140 4))))
(assert (x881 x4109))
(assert (x881 x3261))
(assert (= x688 (x3455 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849))))
(assert (= (x2761 x569 x2941 x4042 x1530 x2381 x2535) (x2363 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (x881 x1863))
(assert (x881 x139))
(assert (= (x1415 (x1338 64 x3537 (ite (= 0 x655) x4266 (ite (>= 32 x655) x4084 (ite (<= x655 64) x2227 (ite (<= x655 96) x3992 (ite (>= 128 x655) x160 (ite (>= 160 x655) x1877 (ite (>= 192 x655) x1383 (ite (<= x655 224) x761 x3914)))))))))) x3537))
(assert (= (x2164 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x766))
(assert (=> (<= x655 10000) (= (x2363 x655) 0)))
(assert (x1735 x2855))
(assert (x881 x105))
(assert (= x3603 (x1207 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231))))
(assert (= (x2229 (x898 x3829 x715 x4071 x3961 x4010)) x3829))
(assert (x881 x279))
(assert (=> (>= 10000 x1949) (= 0 (x2363 x1949))))
(assert (= x4291 (x2164 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017))))
(assert (not (x1229 (x1338 64 x33 2))))
(assert (= (x2164 (x2761 x228 x565 x1946 x2505 x3139 x2202)) x2505))
(assert (= (x2363 (x1723 x2791 x2171)) (x1723 x2791 x2171)))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (x881 x3194))
(assert (< (x2226 x1001 x3416 x153 x2807) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (and (= x1204 (x1713 (+ x3836 x666))) (not (= x1204 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x1713 (+ x2217 x3836)) x3295) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1204)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2561) (= (x988 (- x787 32)) x187) (= x666 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4173)) (= (x988 (- x1204 x2561)) x787) (> x1204 x2561) (<= x2561 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x659 x2561) x2775) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1204)) (<= 1 x1204) (= x3172 (x477 x2739)) (= (x1713 (+ 32 x2561)) x2739) (= x1454 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x3445)) (<= x1204 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x3369 x1204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2561) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1204) (= (x265 26959946667150639794667015087019630673637144422540572481103610249215 x3172) x3445) (<= x1204 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1713 (+ 31 x2217)) x4173) (= (x1713 (+ 32 x1204)) x3882) (= x3369 (x1713 (+ 192 x1204))) (= x1368 (> x2872 0))) (or (and x1368 (and (<= x623 4294967295) x3921 (= x3854 x2626) (= x4217 x1927) (= x629 x2337) (= x3434 x1137) (= x202 x1837) (= (x2428 x1672) x505) (= x1195 (x2428 x1672)) (= (>= (x1402 x1672) x505) x3921) (= x457 x1094) (= (= (x1402 x1672) x1195) x4227) x4227)) (and (not x1368) (and (= x629 x79) (= x202 x1125) (= x3854 x2843) (= x1137 (+ x2030 1)) (= x2693 x457) (= x2022 x1927))))) x3800) x3340))
(assert (x881 x3723))
(assert (x881 x2449))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (x881 x4033))
(assert (= (x2229 (x2761 x813 x3237 x1152 x545 x1582 x3085)) x813))
(assert (x881 x3941))
(assert (= (x1451 (x898 x1712 x1939 x3944 x1914 x954)) x3944))
(assert (=> (>= 10000 x136) (= 0 (x2363 x136))))
(assert (= x1659 (and x3281 x3738)))
(assert (x881 x301))
(assert (x881 x3704))
(assert (x881 x140))
(assert (= (=> (and x2409 (not (> x2283 x2059)) (= (= 0 x571) x3278) (= x3091 x2059) (= x12 false) (= (ite (> x3924 0) x722 (x265 127 x722)) x571) (= (x486 x3336) x1868) (= (x1338 64 x3877 3) x3336) (= 164 x3386) (>= 18446744073709551615 x2400) (= (+ 32 x2099) x3075) (= false x1222) (= (* 32 x2914) x1403) (= x3645 x4019) (= x3757 128) (= (x988 (- x3924 (mod (ite (> 32 x571) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3338) (= x3877 x444) (<= x2059 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (> x1197 x2059)) (= x4063 x1096) (= (+ 31 x2099) x1211) (= (x988 (- x921 128)) x3091) (or (= 1 x3338) (= x3338 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (+ x3075 x2400) x2283) (>= x2059 196) (>= 127 x1808) (>= 127 x1808) (= x2400 (x2663 x2099)) (= x3244 1914215) (= x3596 (x2891 x2022)) (= (+ x1096 4) x2099) (<= 1 x3943) (= x3924 (x265 1 x1868)) (>= x3596 1) (= (+ x1403 160) x825) (= x876 x1306) (>= 18446744073709551615 x569) (= x1441 128) (= x2914 (div (+ x571 31) 32)) (= (div x1868 2) x722) (= x3943 (x2891 x1672)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3091) (> x2059 x1211) (= x2409 (= x4270 (x1826 132))) (<= 196 x3091) (= 51607134309459761954548520284799282329936326410793501951915747293203005440 x1860) (= x569 (x2663 132)) (= (+ 164 x569) x1197)) (and (=> (and (= (< 31 x571) x2665) (not x3278)) (and (=> (and (and (= (div x2012 256) x517) (= (* 256 x517) x4180) (= (x486 x3336) x2012)) (not x2665)) x127) (=> (and x2665 (and (= (< 192 x2228) x562) (= x2228 (+ 160 x571)) (= (x1723 32 x3336) x2282) (= x3414 (x2496 x2282)) (= x3026 (+ x2282 1)))) (and (=> (not x562) x2225) (=> x562 x525))))) (=> x3278 x127))) x2947))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x1001 x733 x3095 x4259 x386)))
(assert (x881 x799))
(assert (x881 x3886))
(assert (x881 x1908))
(assert (x881 x865))
(assert (= x3945 (and (not x145) x416)))
(assert (x881 x2254))
(assert (= (x2229 (x1338 64 x371 36)) 64))
(assert (x881 x1091))
(assert (x881 x821))
(assert (x881 x2918))
(assert (x881 x1996))
(assert (x881 x3423))
(assert (x881 x2058))
(assert (x881 x3997))
(assert (= x1931 (and x4121 x615)))
(assert (x881 x2865))
(assert (x881 x1504))
(assert (= x710 x723))
(assert (=> (<= x2920 10000) (= (x2363 x2920) 0)))
(assert (= (and (not x2665) x3430) x3466))
(assert (x3043 x3592))
(assert (x881 x3681))
(assert (= x4122 (and x3101 x1915)))
(assert (x881 x4023))
(assert (x881 x3074))
(assert (x881 x804))
(assert (= (=> (= x2464 (= x1240 0)) (and (=> (and x2464 (and (= 0 x1671) (= x2586 false) (= true x1872))) x3489) (=> (and (and (= x1428 x1296) (= x775 x678) (= x4097 x2144) (= x4264 x1327) (= x4086 x1395) (= x420 x448) (= x1160 x3600) (= x1952 x2722) (= x3006 x2618) (= x2789 x2836) (= x3093 x2136) (= 1 x3860) (= x199 x3312) (= 0 x1311) (= x1047 x790)) (not x2464)) x491))) x3531))
(assert (x881 x3242))
(assert (= x250 (x1451 (x2226 x1712 x1290 x250 x2069))))
(assert (= x1010 (x1415 (x1338 64 x1010 100))))
(assert (x881 x2662))
(assert (= x3446 (or (and x3105 x2102) (and x4245 x1579))))
(assert (x881 x4173))
(assert (= (x3455 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)) x452))
(assert (= x2241 (x3658 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (x881 x3416))
(assert (=> (<= x18 10000) (= (x2363 x18) 0)))
(assert (x1229 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (=> (>= 10000 x3997) (= 0 (x2363 x3997))))
(assert (= (x3658 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) x240))
(assert (= (x1451 (x1338 64 x576 36)) 36))
(assert (x881 x1663))
(assert (x862 x2103))
(assert (> (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295) 10000))
(assert (< 10000 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)))
(assert (= x3139 (x3658 (x2761 x228 x565 x1946 x2505 x3139 x2202))))
(assert (= (and x3373 (not x555)) x2335))
(assert (= x266 (x1207 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (x862 x1169))
(assert (x881 x648))
(assert (x881 x514))
(assert (= x2387 (=> (and (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1420) x1777) (= (x988 (- x1905 x3369)) x1281) (= (> x1057 0) x2992) (= (x1713 (+ 31 x1013)) x1420) (= (x1713 (+ x2377 32)) x1170) (= (x3256 x1080) x1057) (= (x1713 (+ x1905 32)) x729) (= (x1713 (+ x1777 x2825)) x1905) (= x1806 (x1713 (+ x1013 x2825))) (= x3442 (x1713 (+ 32 x1170)))) (and (=> (not x2992) x3079) (=> (and x2992 (and (= x697 (x1951 x1004)) (= (< 32 x1057) x872))) (and (=> (and x872 (and (= x3613 (x1713 (+ 32 x1004))) (= (x1713 (+ x729 32)) x2532) (= x3080 (x3769 x3613)) (= x2273 (< 64 x1057)))) (and (=> (not x2273) x3079) (=> (and x2273 (and (= x2694 (x1713 (+ 64 x1004))) (= x3763 (x716 x2694)) (= x1972 (> x1057 96)) (= (x1713 (+ x729 64)) x2827))) (and (=> x1972 x2749) (=> (not x1972) x3079))))) (=> (not x872) x3079)))))))
(assert (=> (>= 10000 x2446) (= (x2363 x2446) 0)))
(assert (= (x2363 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)) (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)))
(assert (= x1031 (x1415 (x1338 x59 x1031 x2759))))
(assert (not (x1229 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (<= x228 32) x2035 (ite (>= 64 x228) x190 (ite (>= 96 x228) x2681 (ite (<= x228 128) x1341 (ite (>= 160 x228) x1799 (ite (>= 192 x228) x2809 (ite (<= x228 224) x171 x2180))))))))))))
(assert (x881 x332))
(assert (= x870 (x3658 (x4162 x569 x3001 x2865 x3178 x870 x452 x606))))
(assert (not (x1229 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (x881 x2302))
(assert (= (x2164 (x898 x2790 x305 x3753 x3113 x356)) x3113))
(assert (= x1358 (x2164 (x2761 x59 x1512 x806 x1358 x3031 x835))))
(assert (x881 x3858))
(assert (= x3718 (x1415 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017))))
(assert (x881 x3527))
(assert (x881 x1560))
(assert (x881 x92))
(assert (= (x3658 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) x4033))
(assert (> (x1338 64 1 x3804) 10000))
(assert (not (x1229 (x1338 x1001 x1968 x365))))
(assert (= x217 (x1451 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (< (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x924))
(assert (x1229 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x881 x1136))
(assert (not (x1229 (x2761 x655 x4280 x3527 x4136 x737 x3646))))
(assert (x881 x2911))
(assert (= x2781 (and x174 x1911)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x2268 x526 x4292 x1748)))
(assert (= (x2363 57896044618658097711785492504343953926634992332820282019728792003956) 0))
(assert (=> (<= x4010 10000) (= (x2363 x4010) 0)))
(assert (=> (<= x536 10000) (= (x2363 x536) 0)))
(assert (=> (<= x4299 10000) (= (x2363 x4299) 0)))
(assert (x320 x1541))
(assert (=> (<= x1495 10000) (= 0 (x2363 x1495))))
(assert (= (x1338 x1001 x1968 x365) (x2363 (x1338 x1001 x1968 x365))))
(assert (< (x1338 64 x39 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1451 (x1338 x59 x1031 x2759)) x2759))
(assert (=> (>= 10000 x3547) (= 0 (x2363 x3547))))
(assert (x881 x3807))
(assert (x881 x1912))
(assert (x881 x1275))
(assert (x881 x1564))
(assert (= (=> (and (= x3969 x805) (= x805 x4268)) x2156) x730))
(assert (=> (<= x1288 10000) (= (x2363 x1288) 0)))
(assert (x881 x1008))
(assert (= x3288 (=> (= x4289 (+ x4056 x278)) x2393)))
(assert (= x2923 (=> (and (= x4036 (x2299 x2331)) (= (not (< 32 x3478)) x2758)) (and x2758 (=> (= x1732 32) x1422)))))
(assert (= (x2363 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)) (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)))
(assert (x881 x1350))
(assert (x881 x518))
(assert (x881 x2972))
(assert (= 0 (x2363 34591783479076665122502074927488338969190252781858077677016911635275368785765)))
(assert (x881 x995))
(assert (not (x1229 (x898 x228 x1188 x2250 x3241 x3801))))
(assert (x881 x59))
(assert (= (=> (and (= x735 (x3696 x1608)) (= (not (> x1435 32)) x1066)) (and (=> (= 32 x3141) x3383) x1066)) x1418))
(assert (x881 x3623))
(assert (x881 x4072))
(assert (x320 x3211))
(assert (> (x898 x3866 x433 x155 x2455 x842) 10000))
(assert (x862 x3119))
(assert (x881 x4268))
(assert (> (x1723 x2791 x2171) 10000))
(assert (=> (>= 10000 x485) (= (x2363 x485) 0)))
(assert (x881 x247))
(assert (not (x1229 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (x881 x368))
(assert (= (x3455 (x2761 x569 x2941 x4042 x1530 x2381 x2535)) x2535))
(assert (= (x1451 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)) x4299))
(assert (x881 x3045))
(assert (x1229 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (= (and x880 (not x3329)) x1524))
(assert (=> (<= x3877 10000) (= (x2363 x3877) 0)))
(assert (x881 x2925))
(assert (x881 x2994))
(assert (= 64 (x2229 (x1338 64 x3951 7))))
(assert (x881 x843))
(assert (=> (<= x2519 10000) (= (x2363 x2519) 0)))
(assert (= (x2363 3812630263) 0))
(assert (= 0 (x2363 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (x881 x1027))
(assert (x881 x2074))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x881 x208))
(assert (< (x1338 64 x39 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4042) (= (x2363 x4042) 0)))
(assert (x881 x1702))
(assert (=> (>= 10000 x2734) (= (x2363 x2734) 0)))
(assert (x881 x1741))
(assert (x1517 x1085))
(assert (x881 x3042))
(assert (= (and x2845 x1965) x3033))
(assert (= x2435 (x1451 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (= (x898 x2115 x1500 x3170 x3008 x158) (x2363 (x898 x2115 x1500 x3170 x3008 x158))))
(assert (= (x1338 64 x3537 (ite (= 0 x3866) x2647 (ite (<= x3866 32) x3118 (ite (>= 64 x3866) x3834 (ite (>= 96 x3866) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (>= 192 x3866) x3968 (ite (<= x3866 224) x3746 x4290))))))))) (x2363 (x1338 64 x3537 (ite (= 0 x3866) x2647 (ite (>= 32 x3866) x3118 (ite (>= 64 x3866) x3834 (ite (>= 96 x3866) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (<= x3866 192) x3968 (ite (>= 224 x3866) x3746 x4290))))))))))))
(assert (x881 x2858))
(assert (x881 x1624))
(assert (x881 x765))
(assert (> (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383) 10000))
(assert (> (x898 x2790 x305 x3753 x3113 x356) 10000))
(assert (=> (<= x2268 10000) (= 0 (x2363 x2268))))
(assert (x881 x240))
(assert (x1229 1722637450))
(assert (= x3866 (x2229 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710))))
(assert (=> (<= x386 10000) (= (x2363 x386) 0)))
(assert (x881 x3908))
(assert (x881 x3675))
(assert (= 36 (x1451 (x1338 64 x371 36))))
(assert (x881 x1589))
(assert (x881 x412))
(assert (= (or x56 x622 x121 x1177 x940) x3472))
(assert (x881 x23))
(assert (x881 x2086))
(assert (x881 x3592))
(assert (x881 x3196))
(assert (x881 x902))
(assert (= (and x3084 x2273) x2351))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (<= x228 32) x2035 (ite (<= x228 64) x190 (ite (>= 96 x228) x2681 (ite (<= x228 128) x1341 (ite (>= 160 x228) x1799 (ite (<= x228 192) x2809 (ite (<= x228 224) x171 x2180)))))))))))
(assert (=> (>= 10000 x1146) (= (x2363 x1146) 0)))
(assert (x881 x2217))
(assert (= x2541 (x1415 (x1338 64 x2541 12))))
(assert (x881 x2291))
(assert (x881 x3552))
(assert (=> (<= x4291 10000) (= 0 (x2363 x4291))))
(assert (x881 x2828))
(assert (= x1816 (x1207 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816))))
(assert (x881 x3786))
(assert (x881 x3000))
(assert (= x1001 (x2229 (x1338 x1001 x1968 x365))))
(assert (not (x1229 (x2226 x1001 x3416 x153 x2807))))
(assert (x881 x3307))
(assert (> (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298) 10000))
(assert (= (x1415 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) x976))
(assert (= (x1415 (x1338 64 x3951 3)) x3951))
(assert (x881 x3095))
(assert (x881 x805))
(assert (x881 x4179))
(assert (x881 x153))
(assert (< (x1338 x1949 x3815 x290) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x921))
(assert (x881 x3678))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x228 x3679)))
(assert (=> (<= x3527 10000) (= (x2363 x3527) 0)))
(assert (=> (<= x1256 10000) (= (x2363 x1256) 0)))
(assert (x881 x576))
(assert (< (x2761 x1001 x3563 x1612 x1076 x2444 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1338 64 x288 10)))
(assert (x862 x1958))
(assert (= (and (not x1801) x2921) x273))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (= 64 (x2229 (x1338 64 x3156 10))))
(assert (x881 x236))
(assert (x881 x2444))
(assert (x881 x3829))
(assert (x881 x3022))
(assert (x881 x629))
(assert (= (and x3945 x1886) x613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x2804 10)))
(assert (x881 x3674))
(assert (x320 x1476))
(assert (= 100 (x1451 (x1338 64 x1010 100))))
(assert (x881 x431))
(assert (=> (>= 10000 x2991) (= 0 (x2363 x2991))))
(assert (x881 x3596))
(assert (= (x1451 (x2226 x228 x2933 x4131 x540)) x4131))
(assert (x881 x214))
(assert (x881 x2443))
(assert (=> (>= 10000 x1374) (= 0 (x2363 x1374))))
(assert (x881 x1399))
(assert (x881 x956))
(assert (x881 x1061))
(assert (x881 x2461))
(assert (x881 x1650))
(assert (x881 x2241))
(assert (x881 x3611))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3224 10)))
(assert (x881 x2657))
(assert (x881 x3473))
(assert (x881 x455))
(assert (= (x2363 (x1338 64 x3224 10)) (x1338 64 x3224 10)))
(assert (=> (<= x2196 10000) (= (x2363 x2196) 0)))
(assert (x881 x3185))
(assert (= x3287 x1375))
(assert (= (x2229 (x1723 x569 x1588)) x569))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3951 3)))
(assert (= (=> (and (= x2711 x1125) (= x3765 x3123) (= x2022 x188) (= x64 x2843) (= x3768 x2693) (= x1651 x79) (= x2886 x783)) x2685) x3634))
(assert (x881 x2375))
(assert (= (x3455 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x3171))
(assert (= x3739 (and x2351 x1972)))
(assert (x881 x951))
(assert (x881 x4228))
(assert (x881 x1829))
(assert (x881 x2931))
(assert (= x2080 (and x2958 (not x2063))))
(assert (x881 x1458))
(assert (= (x1207 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)) x3569))
(assert (x881 x598))
(assert (= (x2363 (x898 x1001 x733 x3095 x4259 x386)) (x898 x1001 x733 x3095 x4259 x386)))
(assert (= (and (not x1861) x620) x601))
(assert (x881 x2407))
(assert (= (x1207 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) x1926))
(assert (= x2680 (and x1999 (not x2606))))
(assert (= x4098 (x1451 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (x881 x2774))
(assert (x881 x2650))
(assert (x881 x3444))
(assert (x881 x1170))
(assert (x1229 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x881 x2013))
(assert (x881 x3205))
(assert (x881 x1782))
(assert (not (x1229 (x1723 x2115 x1893))))
(assert (x881 x86))
(assert (not (x1229 (x1338 64 x39 6))))
(assert (x881 x3082))
(assert (x881 x1461))
(assert (= x400 (x1415 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918))))
(assert (= x1087 (x1207 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291))))
(assert (x881 x30))
(assert (=> (>= 10000 x451) (= (x2363 x451) 0)))
(assert (x881 x1053))
(assert (x881 x1362))
(assert (=> (>= 10000 x4030) (= (x2363 x4030) 0)))
(assert (= (and (not x401) x3747) x1665))
(assert (= (or (and x815 x964) (and x3698 x1873) (and x2970 x410)) x2354))
(assert (= (x2363 (x1723 32 x3336)) (x1723 32 x3336)))
(assert (x881 x1391))
(assert (x881 x3034))
(assert (= (x2229 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) x655))
(assert (= (x1338 64 x4140 4) (x2363 (x1338 64 x4140 4))))
(assert (x881 x3116))
(assert (x881 x2199))
(assert (x881 x2648))
(assert (x881 x2435))
(assert (x881 x3058))
(assert (x881 x2616))
(assert (= (and x2958 x2063) x2190))
(assert (= x3206 (and x2768 x2508)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x4140 3)))
(assert (x881 x333))
(assert (x881 x1353))
(assert (x881 x794))
(assert (x881 x1297))
(assert (x881 x148))
(assert (x881 x177))
(assert (not (x1229 (x2226 x2791 x2936 x2539 x1767))))
(assert (=> (>= 10000 x2666) (= 0 (x2363 x2666))))
(assert (x881 x3009))
(assert (= (x2363 (+ x1217 2)) (x2363 x1217)))
(assert (x881 x3125))
(assert (x1229 1341992515))
(assert (x881 x3244))
(assert (= (x2164 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)) x352))
(assert (= x300 (and (not x3259) x3300)))
(assert (= x840 (x3455 (x2761 x1001 x3563 x1612 x1076 x2444 x840))))
(assert (= (and x1412 x3278) x907))
(assert (x881 x3143))
(assert (= (x1451 (x1338 64 x4140 3)) 3))
(assert (x881 x4127))
(assert (=> (<= x2655 10000) (= (x2363 x2655) 0)))
(assert (x881 x1939))
(assert (= (x2363 (x1723 x569 x1588)) (x1723 x569 x1588)))
(assert (= (x1415 (x1338 64 x39 36)) x39))
(assert (=> (<= x6 10000) (= 0 (x2363 x6))))
(assert (x881 x1194))
(assert (x881 x3013))
(assert (= (x1415 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295)) x4091))
(assert (x881 x3312))
(assert (x881 x317))
(assert (x862 x3412))
(assert (> (x1338 64 x214 36) 10000))
(assert (= x935 (and (not x2559) x1990)))
(assert (= x3170 (x1451 (x898 x2115 x1500 x3170 x3008 x158))))
(assert (x881 x2029))
(assert (= x39 (x1415 (x1338 64 x39 2))))
(assert (x881 x3835))
(assert (x881 x666))
(assert (x1229 3521034783))
(assert (x1229 310283853))
(assert (x881 x4095))
(assert (= (and x4275 x2686) x1864))
(assert (x881 x2028))
(assert (x881 x1031))
(assert (x881 x1805))
(assert (= (x2229 (x1723 32 x3032)) 32))
(assert (< (x1338 64 x1697 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3761 10000) (= (x2363 x3761) 0)))
(assert (=> (<= x911 10000) (= (x2363 x911) 0)))
(assert (x881 x3046))
(assert (= (or (and x2200 x4046) (and x197 x892) x3666 x2954 x3845 x2354 x4166) x664))
(assert (not (x1229 (x1723 x569 x1588))))
(assert (= (x2229 (x1338 64 x2030 12)) 64))
(assert (x881 x2575))
(assert (x881 x1976))
(assert (= (x1415 (x1723 x813 x3579)) x3579))
(assert (= 32 (x2229 (x1723 32 x3336))))
(assert (x881 x3349))
(assert (x881 x3860))
(assert (x881 x2434))
(assert (x881 x243))
(assert (x881 x1436))
(assert (=> (<= x1109 10000) (= 0 (x2363 x1109))))
(assert (= (x3455 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710)) x1256))
(assert (= (x2363 (x2761 x59 x1512 x806 x1358 x3031 x835)) (x2761 x59 x1512 x806 x1358 x3031 x835)))
(assert (= x3646 (x3455 (x2761 x655 x4280 x3527 x4136 x737 x3646))))
(assert (x881 x3295))
(assert (x881 x3377))
(assert (not (x1229 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (x881 x3083))
(assert (x881 x2264))
(assert (= x1084 (x2164 (x2226 x1949 x3121 x2734 x1084))))
(assert (= x3619 (and x998 x1064)))
(assert (x881 x744))
(assert (x881 x2130))
(assert (= x3877 (x1415 (x1338 64 x3877 7))))
(assert (= x655 (x2229 (x2761 x655 x4280 x3527 x4136 x737 x3646))))
(assert (=> (>= 10000 x3502) (= (x2363 x3502) 0)))
(assert (not (x1229 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291))))
(assert (x881 x3522))
(assert (=> (<= x540 10000) (= 0 (x2363 x540))))
(assert (< 10000 (x2226 x655 x536 x2742 x635)))
(assert (x881 x2280))
(assert (= (x2229 (x1338 64 x164 6)) 64))
(assert (x881 x3438))
(assert (= (or x1994 (and x4067 (not x972))) x1108))
(assert (= (x2229 (x1338 x2268 x3761 x590)) x2268))
(assert (= x213 (x1451 (x2226 x2115 x2944 x213 x404))))
(assert (x881 x1074))
(assert (x1229 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (x881 x3600))
(assert (< (x1338 64 x3525 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3023 x2193) x532))
(assert (=> (<= x2802 10000) (= (x2363 x2802) 0)))
(assert (x881 x1905))
(assert (x881 x1389))
(assert (=> (<= x1710 10000) (= (x2363 x1710) 0)))
(assert (= x2742 (x1451 (x2226 x655 x536 x2742 x635))))
(assert (x881 x1327))
(assert (x881 x594))
(assert (x881 x2096))
(assert (x881 x3641))
(assert (x881 x3461))
(assert (x881 x4002))
(assert (x881 x1446))
(assert (= (x1415 (x1723 x228 x3679)) x3679))
(assert (= (and (not x7) x3173) x4283))
(assert (x881 x1249))
(assert (x881 x2843))
(assert (not (x1229 (x1338 x569 x4204 x3280))))
(assert (x881 x509))
(assert (x881 x125))
(assert (x881 x2154))
(assert (x881 x544))
(assert (x881 x2701))
(assert (x881 x3815))
(assert (= (and x3472 (not x955)) x204))
(assert (= (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284) (x2363 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (= (or x2517 (and (not x3517) x3566)) x58))
(assert (not (x1229 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (x881 x175))
(assert (=> (<= x1900 10000) (= (x2363 x1900) 0)))
(assert (= (x2363 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (= (and (not x4054) x292) x3790))
(assert (= x4142 (and x3616 x2813)))
(assert (< 10000 (x1338 64 x628 11)))
(assert (x862 x2867))
(assert (= (x2164 (x2761 x1001 x3563 x1612 x1076 x2444 x840)) x1076))
(assert (= (x1338 64 x3537 (ite (= x655 0) x4266 (ite (>= 32 x655) x4084 (ite (<= x655 64) x2227 (ite (>= 96 x655) x3992 (ite (<= x655 128) x160 (ite (>= 160 x655) x1877 (ite (>= 192 x655) x1383 (ite (>= 224 x655) x761 x3914))))))))) (x2363 (x1338 64 x3537 (ite (= 0 x655) x4266 (ite (<= x655 32) x4084 (ite (<= x655 64) x2227 (ite (>= 96 x655) x3992 (ite (<= x655 128) x160 (ite (>= 160 x655) x1877 (ite (>= 192 x655) x1383 (ite (>= 224 x655) x761 x3914))))))))))))
(assert (x881 x3392))
(assert (x881 x2780))
(assert (= (x3658 (x898 x2791 x1950 x2087 x546 x4128)) x4128))
(assert (=> (<= x2716 10000) (= 0 (x2363 x2716))))
(assert (=> (<= x1358 10000) (= (x2363 x1358) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x813 x3055 x3250 x899)))
(assert (x881 x2208))
(assert (=> (>= 10000 x3156) (= (x2363 x3156) 0)))
(assert (= x2790 (x2229 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (= x460 (and x476 x438)))
(assert (= (and x3421 x3716) x3887))
(assert (x881 x2491))
(assert (x881 x3119))
(assert (x881 x3599))
(assert (= x3877 (x1415 (x1338 64 x3877 3))))
(assert (x881 x848))
(assert (not (x1229 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569))))
(assert (= x1065 (or x2979 x944)))
(assert (x881 x747))
(assert (= (x2229 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353)) x1712))
(assert (x881 x1627))
(assert (= x852 (or x3730 x1603 x2870 x3790 x901)))
(assert (< 10000 (x1338 64 x3059 2)))
(assert (= (x2363 (x1338 64 x2804 10)) (x1338 64 x2804 10)))
(assert (=> (<= x3573 10000) (= (x2363 x3573) 0)))
(assert (= (x2164 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)) x2697))
(assert (= x2790 (x2229 (x2226 x2790 x1526 x2920 x3098))))
(assert (= x44 (x3658 (x898 x569 x6 x553 x3235 x44))))
(assert (x881 x3732))
(assert (x881 x2388))
(assert (=> (<= x214 10000) (= 0 (x2363 x214))))
(assert (=> (<= x2250 10000) (= 0 (x2363 x2250))))
(assert (x881 x3925))
(assert (= 103 (x1415 (x1723 32 103))))
(assert (x881 x1325))
(assert (x881 x2326))
(assert (x862 x1885))
(assert (x881 x3954))
(assert (x881 x3115))
(assert (x881 x2641))
(assert (x320 x2103))
(assert (x881 x1611))
(assert (x881 x1714))
(assert (x881 x929))
(assert (x881 x949))
(assert (=> (>= 10000 x1227) (= (x2363 x1227) 0)))
(assert (x881 x322))
(assert (x881 x3445))
(assert (=> (>= 10000 x84) (= (x2363 x84) 0)))
(assert (= x3886 (x3658 (x898 x2268 x2314 x2591 x1124 x3886))))
(assert (x881 x3556))
(assert (= 0 (x2363 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (< (x1723 x59 x4093) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1229 (x1723 x3829 x3461))))
(assert (= 10 (x1451 (x1338 64 x1577 10))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x1573 12)))
(assert (x881 x365))
(assert (= x92 (x1451 (x2761 x2790 x2028 x92 x3705 x1183 x2991))))
(assert (x881 x864))
(assert (x881 x1520))
(assert (= (and x2679 (not x2405)) x731))
(assert (= (x1415 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)) x1569))
(assert (x881 x2059))
(assert (x881 x1323))
(assert (x881 x3993))
(assert (= (x2164 (x898 x1001 x733 x3095 x4259 x386)) x4259))
(assert (< (x1338 64 x288 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1207 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)) x3402))
(assert (=> (>= 10000 x2591) (= (x2363 x2591) 0)))
(assert (= (and x2727 (not x2121)) x3275))
(assert (= (and x555 x3373) x637))
(assert (= 64 (x2229 (x1338 64 x3573 6))))
(assert (x881 x512))
(assert (x881 x1286))
(assert (= (x1451 (x2761 x1241 x889 x3842 x4212 x3890 x1143)) x3842))
(assert (=> (>= 10000 x1031) (= (x2363 x1031) 0)))
(assert (not (x1229 (x1338 64 x3537 (ite (= x655 0) x4266 (ite (<= x655 32) x4084 (ite (>= 64 x655) x2227 (ite (>= 96 x655) x3992 (ite (>= 128 x655) x160 (ite (<= x655 160) x1877 (ite (>= 192 x655) x1383 (ite (<= x655 224) x761 x3914))))))))))))
(assert (> (x1338 64 x33 2) 10000))
(assert (= x4093 (x1415 (x1723 x59 x4093))))
(assert (=> (<= x3284 10000) (= (x2363 x3284) 0)))
(assert (x881 x1225))
(assert (= 64 (x2229 (x1338 64 x3835 11))))
(assert (= (and x1494 x1166) x13))
(assert (= x6 (x1415 (x898 x569 x6 x553 x3235 x44))))
(assert (x881 x193))
(assert (> (x1338 x655 x1109 x4109) 10000))
(assert (x881 x3866))
(assert (= (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735) (x2363 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735))))
(assert (< 10000 (x2761 x2791 x3954 x4112 x570 x2666 x136)))
(assert (= x2115 (x2229 (x1338 x2115 x2650 x594))))
(assert (= (x2363 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)) (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)))
(assert (= (x1451 (x1338 64 x3951 3)) 3))
(assert (x881 x2748))
(assert (= (x2363 (x1338 x813 x3309 x640)) (x1338 x813 x3309 x640)))
(assert (x881 x4223))
(assert (= (x2363 (x1192 0)) (x1192 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3156 10)))
(assert (x881 x3538))
(assert (= (x3658 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)) x2222))
(assert (x881 x891))
(assert (= (x2363 (x2226 x813 x3055 x3250 x899)) (x2226 x813 x3055 x3250 x899)))
(assert (=> (>= 10000 x2757) (= (x2363 x2757) 0)))
(assert (< 10000 (x1338 64 x3556 36)))
(assert (= (x2363 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)))
(assert (=> (>= 10000 x2535) (= 0 (x2363 x2535))))
(assert (x881 x2341))
(assert (x881 x3297))
(assert (> (x2226 x59 x561 x198 x4009) 10000))
(assert (=> (>= 10000 x2528) (= (x2363 x2528) 0)))
(assert (x881 x2534))
(assert (< 10000 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)))
(assert (x881 x1566))
(assert (x881 x2790))
(assert (x881 x3344))
(assert (x881 x83))
(assert (x881 x3120))
(assert (= x1044 (and x3590 (not x3859))))
(assert (x881 x3773))
(assert (x881 x818))
(assert (x881 x3366))
(assert (= x2921 (and (not x2733) x837)))
(assert (= x3007 (x1451 (x1338 64 1 x3007))))
(assert (= (and x1678 x879) x4121))
(assert (= (x1451 (x898 x3866 x433 x155 x2455 x842)) x155))
(assert (< (x2226 x3866 x858 x2769 x2522) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x3077))
(assert (> (x2226 x813 x3055 x3250 x899) 10000))
(assert (x881 x1614))
(assert (= (x1451 (x2761 x813 x3237 x1152 x545 x1582 x3085)) x1152))
(assert (x881 x3621))
(assert (x881 x706))
(assert (x881 x3890))
(assert (x881 x3852))
(assert (= x228 (x2229 (x1338 x228 x2937 x203))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x3829 x2510 x1242 x495 x938 x3561)))
(assert (x881 x3673))
(assert (= x81 (and x4018 (not x3987))))
(assert (x881 x1021))
(assert (x881 x440))
(assert (x881 x2557))
(assert (x881 x3324))
(assert (x862 x3211))
(assert (= x569 (x2229 (x898 x569 x6 x553 x3235 x44))))
(assert (x881 x2448))
(assert (= (x898 x655 x598 x3544 x451 x2977) (x2363 (x898 x655 x598 x3544 x451 x2977))))
(assert (x881 x3944))
(assert (x881 x855))
(assert (=> (<= x1202 10000) (= 0 (x2363 x1202))))
(assert (=> (<= x992 10000) (= (x2363 x992) 0)))
(assert (x881 x457))
(assert (x881 x2602))
(assert (x881 x1230))
(assert (x881 x466))
(assert (x862 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x881 x4148))
(assert (x881 x3682))
(assert (x881 x3793))
(assert (x881 x472))
(assert (= x681 (and (not x4021) x2009)))
(assert (x881 x2083))
(assert (> (x898 x3829 x715 x4071 x3961 x4010) 10000))
(assert (x881 x3097))
(assert (> (x1723 x3829 x3461) 10000))
(assert (=> (>= 10000 x2241) (= 0 (x2363 x2241))))
(assert (x881 x395))
(assert (x881 x2792))
(assert (=> (>= 10000 x3129) (= 0 (x2363 x3129))))
(assert (= (and x3472 x955) x4018))
(assert (x881 x3768))
(assert (x881 x1012))
(assert (= (x2363 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)))
(assert (= (and x2835 x1554) x410))
(assert (=> (<= x3890 10000) (= (x2363 x3890) 0)))
(assert (x881 x1837))
(assert (x881 x2541))
(assert (x881 x2886))
(assert (=> (>= 10000 x2092) (= 0 (x2363 x2092))))
(assert (=> (<= x2298 10000) (= 0 (x2363 x2298))))
(assert (x881 x3842))
(assert (x320 x4173))
(assert (x881 x1857))
(assert (x881 x2215))
(assert (= (and (not x2412) x2101) x1617))
(assert (=> (>= 10000 x2729) (= (x2363 x2729) 0)))
(assert (x881 x3951))
(assert (x881 x824))
(assert (= (x1338 64 x89 2) (x2363 (x1338 64 x89 2))))
(assert (=> (<= x4076 10000) (= (x2363 x4076) 0)))
(assert (= x1001 (x2229 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (x1229 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x881 x2))
(assert (x1229 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (< (x898 x2791 x1950 x2087 x546 x4128) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x288))
(assert (x881 x3422))
(assert (x320 x3899))
(assert (=> (>= 10000 x3675) (= 0 (x2363 x3675))))
(assert (x881 x3157))
(assert (= (x2363 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)))
(assert (= 10 (x1451 (x1338 64 x3224 10))))
(assert (x881 x887))
(assert (x881 x1575))
(assert (x881 x886))
(assert (x881 x2591))
(assert (x881 x2092))
(assert (=> (<= x509 10000) (= (x2363 x509) 0)))
(assert (=> (<= x2830 10000) (= (x2363 x2830) 0)))
(assert (= (x1415 (x1338 64 x39 6)) x39))
(assert (x881 x3325))
(assert (x881 x3374))
(assert (x881 x2745))
(assert (x881 x1106))
(assert (x1517 x3298))
(assert (= (x3455 (x2761 x1241 x889 x3842 x4212 x3890 x1143)) x1143))
(assert (=> (<= x1132 10000) (= 0 (x2363 x1132))))
(assert (= x244 (x3658 (x898 x813 x3017 x1180 x2298 x244))))
(assert (x320 x2506))
(assert (x881 x3672))
(assert (=> (>= 10000 x298) (= 0 (x2363 x298))))
(assert (< 10000 (x1338 64 x2804 10)))
(assert (= (x3455 (x2761 x228 x565 x1946 x2505 x3139 x2202)) x2202))
(assert (not (x1229 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653))))
(assert (=> (<= x2933 10000) (= (x2363 x2933) 0)))
(assert (x881 x4287))
(assert (= x2457 (and (not x1886) x3945)))
(assert (= (or x377 x2969) x1237))
(assert (= 36 (x1451 (x1338 64 x3297 36))))
(assert (x881 x3687))
(assert (=> (<= x3903 10000) (= 0 (x2363 x3903))))
(assert (= x3761 (x1415 (x1338 x2268 x3761 x590))))
(assert (x881 x319))
(assert (= x4112 (x1451 (x2761 x2791 x3954 x4112 x570 x2666 x136))))
(assert (x881 x3238))
(assert (=> (>= 10000 x561) (= (x2363 x561) 0)))
(assert (x881 x4210))
(assert (= (=> (and (= x3829 (x1396 x503)) (= (>= 224 x3829) x3717)) (and x3717 (=> (and (= x4099 (x1713 (+ 96 x2293))) (= x552 (x1713 (+ 96 x2293))) (= (x1713 (+ 128 x2293)) x2420) (= x2955 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)) (= (x1713 (+ 32 x2293)) x3723) (= x3461 (x1396 x2293)) (= x938 (x1396 x2695)) (= (x1713 (+ x2293 32)) x4023) (= x3588 (x2761 x3829 x2510 x1242 x495 x938 x3561)) (= x1631 (x1396 x4099)) (= (x1713 (+ 32 x2293)) x2347) (= x1569 (x1396 x2293)) (= (x1396 x30) x2302) (= (x1713 (+ 64 x2293)) x2908) (= x1650 (x1713 (+ 160 x2293))) (= (x1713 (+ x2293 64)) x30) (= (x1396 x2293) x2196) (= (x1396 x2908) x4182) (= x2795 (x1396 x3823)) (= x639 (x1713 (+ 128 x2293))) (= x1511 (x1396 x662)) (= x662 (x1713 (+ x2293 160))) (= x4059 (x1396 x2701)) (= (x1396 x639) x3394) (= (x1396 x3690) x886) (= x2291 (x1396 x2702)) (= x541 (x1396 x2293)) (= (> x886 0) x401) (= (x1396 x2293) x2510) (= x3961 (x1396 x2401)) (= x1245 (x898 x3829 x715 x4071 x3961 x4010)) (= x871 (x1396 x2347)) (= (x1396 x3723) x3083) (= x1673 (x1713 (+ x2293 32))) (= (x1396 x2293) x715) (= (x1396 x1673) x4071) (= x823 (x1713 (+ x2293 64))) (= x2401 (x1713 (+ 64 x2293))) (= (x1713 (+ 32 x2293)) x2701) (= (x1338 x3829 x2196 x2795) x2833) (= x2238 (x1723 x3829 x3461)) (= (x1713 (+ 96 x2293)) x2247) (= (x1713 (+ x2293 128)) x4230) (= (ite (= 0 x3829) x2332 (ite (<= x3829 32) x2238 (ite (<= x3829 64) x2833 (ite (<= x3829 96) x1776 (ite (>= 128 x3829) x1245 (ite (>= 160 x3829) x3588 (ite (<= x3829 192) x2955 (ite (<= x3829 224) x2551 x929)))))))) x3850) (= x1776 (x2226 x3829 x2706 x3083 x2302)) (= (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291) x2551) (= x3561 (x1396 x2420)) (= x2702 (x1713 (+ 192 x2293))) (= x2706 (x1396 x2293)) (= (x1396 x823) x495) (= x3823 (x1713 (+ x2293 32))) (= (x1713 (+ x2293 64)) x1728) (= x2695 (x1713 (+ x2293 96))) (= (x1396 x2247) x4010) (= x2410 (x1338 64 x3951 7)) (= x2649 (x1396 x1728)) (= (x1396 x4230) x575) (= x1242 (x1396 x4023)) (= x3637 (x1396 x552)) (= (x1192 0) x2332) (= x1087 (x1396 x1650))) (and (=> (and (and (= (x1396 x559) x103) (= (> x886 32) x339)) x401) (and (=> (and (and (= (> x886 64) x2746) (= x2625 (x1713 (+ x3429 32))) (= (x1713 (+ 32 x559)) x3320) (= x1925 (x2123 x3320))) x339) (and (=> (and (and (= (x2246 x744) x3576) (= (x1713 (+ x3429 64)) x2049) (= (> x886 96) x1233) (= (x1713 (+ 64 x559)) x744)) x2746) (and (=> x1233 x1224) (=> (not x1233) x2961))) (=> (not x2746) x2961))) (=> (not x339) x2961))) (=> (not x401) x2961))))) x151))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (=> (= (= x936 0) x1527) (and (=> (not x1527) x3918) (=> (and (= 1 x936) x1527) x614))) x3264))
(assert (< (x1723 x1241 x1326) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x584 x348) x2787))
(assert (x881 x64))
(assert (x881 x3910))
(assert (= x3521 (x3455 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816))))
(assert (x881 x2779))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)))
(assert (= (=> (and (>= x2213 0) (= x2467 x2213) (< (+ x3885 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x2213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1504 (x988 (- x504 128))) (= x3885 (x3635 x2022)) (not (> x1531 x4255)) (= (+ 164 x247) x801) (= x3728 (= x3478 (x3981 132))) (= x3806 x3537) (<= x4011 127) (<= x180 x2783) (= x4253 (<= x2115 224)) (<= x2503 18446744073709551615) (= x2115 (x988 (- x655 32))) (= 164 x4293) (= x3807 x3897) (<= 196 x1504) (= (x2428 x876) x2512) (<= x247 18446744073709551615) (= (+ 4 x3897) x206) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x3915) (= x1331 3521034783) (= x1531 (+ x3169 x2503)) (= x2767 (x2891 x2022)) (= false x2594) (= (x2891 x1672) x344) (= (x1338 64 x116 7) x3614) (>= x4255 196) (= x1257 (x2428 x2022)) (= x599 (+ 31 x206)) (= (x988 (- (mod (+ x2421 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x655) (= x2503 (x1103 x206)) (= (- x2512 x180) x4214) (= 128 x1702) (<= x1504 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= false x2032) (= (+ 128 x247) x920) (not (< x4255 x801)) (= x4255 x1504) (= (x2428 x876) x2783) (>= x344 1) x3728 (= x2637 x116) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4255) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1257 x180)) (= (+ 32 x206) x3169) (>= x2767 1) (= (+ 128 x247) x2421) (= (+ x180 x3885) x2213) (= (x1103 132) x247) (< x599 x4255) (= 128 x1442) (>= 127 x4011)) (and (=> (and (= x2866 (x1338 x2115 x2650 x594)) (= (x2062 256) x326) (= (x1723 x2115 x1893) x3622) (= x1288 (x2062 224)) (= x1988 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) (= x1163 (x1192 0)) (= x404 (x2062 192)) (= x2128 (x2062 128)) (= (x2062 288) x4295) (= x3793 (x2062 128)) (= (x2062 192) x3008) (= (x2062 160) x594) (= (x2062 160) x2940) (= (x2062 128) x1847) (= (x2062 224) x158) (= (x2062 128) x1893) (= x1146 (x2062 224)) (= (x2062 320) x3284) (= x1869 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284)) (= (x2062 160) x2435) (= x1759 (x2062 192)) (= (x2062 160) x3150) (= (x2062 256) x1227) (= x1977 (x2226 x2115 x2944 x213 x404)) (= x2650 (x2062 128)) (= x592 (x2761 x2115 x2128 x2435 x485 x1146 x326)) (= (x2062 192) x485) (= x3170 (x2062 160)) (= x1500 (x2062 128)) (= x4033 (x2062 224)) (= x568 (x898 x2115 x1500 x3170 x3008 x158)) (= (x2062 256) x1567) (= x3375 (x2062 288)) (= x2944 (x2062 128)) (= x1202 (x2062 192)) (= x213 (x2062 160)) (= x436 (ite (= x2115 0) x1163 (ite (<= x2115 32) x3622 (ite (>= 64 x2115) x2866 (ite (<= x2115 96) x1977 (ite (<= x2115 128) x568 (ite (>= 160 x2115) x592 (ite (<= x2115 192) x1988 (ite (>= 224 x2115) x1869 x3502))))))))) (= (>= 224 x655) x4012)) (and x4012 (=> (and (= x635 (x2062 192)) (= x160 (x898 x655 x598 x3544 x451 x2977)) (= x2564 (x1597 x1647)) (= x2742 (x2062 160)) (= (x2062 128) x1550) (= x4200 (+ 128 x2503)) (= (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231) x761) (= (x2062 128) x598) (= (x2062 128) x4280) (= x536 (x2062 128)) (= x4266 (x1192 0)) (= (x2062 224) x737) (= x3992 (x2226 x655 x536 x2742 x635)) (= x4287 (x2062 160)) (= x3321 (x2062 256)) (= (x2062 224) x2977) (= x3147 (x2062 128)) (= (x2062 320) x1231) (= x3686 (x2062 192)) (= (x2062 224) x2641) (= (x2062 256) x3646) (= (x2062 128) x626) (= (x1338 x655 x1109 x4109) x2227) (= x4084 (x1723 x655 x626)) (= (x1338 64 x3537 (ite (= 0 x655) x4266 (ite (>= 32 x655) x4084 (ite (>= 64 x655) x2227 (ite (<= x655 96) x3992 (ite (>= 128 x655) x160 (ite (<= x655 160) x1877 (ite (>= 192 x655) x1383 (ite (<= x655 224) x761 x3914))))))))) x1647) (= x3544 (x2062 160)) (= x451 (x2062 192)) (= (x988 (- x4200 128)) x2791) (= (x2062 160) x3527) (= x1877 (x2761 x655 x4280 x3527 x4136 x737 x3646)) (= (x2062 256) x2392) (= (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569) x1383) (= x3687 (x2062 224)) (= (x2062 192) x4136) (>= x2564 1) (= (x2062 288) x3603) (= x3569 (x2062 288)) (= (x2062 128) x1109) (= x352 (x2062 192)) (= (x2062 160) x3630) (= x2544 (>= 224 x2791)) (= (x2062 160) x4109)) (and (=> (and (= (x999 160) x1092) (= (x898 x2791 x1950 x2087 x546 x4128) x2565) (= (x999 160) x2087) (= (x999 288) x3022) (= (x999 128) x2171) (= x132 (x999 192)) (<= 1 x429) (= x2564 x429) (= (x999 128) x3954) (= x546 (x999 192)) (= x657 (>= 224 x813)) (= (x999 128) x3277) (= x2089 (x999 256)) (= x3798 (x999 192)) (= (x999 288) x1926) (= x63 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022)) (= (x999 256) x2528) (= x136 (x999 256)) (= x813 (x988 (- x3866 32))) (= x4005 (x999 320)) (= x443 (x999 128)) (= (x999 224) x455) (= x1841 (+ x247 128)) (= (x999 128) x1950) (= x4128 (x999 224)) (= (x999 192) x570) (= x2666 (x999 224)) (= (ite (= x2791 0) x234 (ite (>= 32 x2791) x2145 (ite (<= x2791 64) x556 (ite (>= 96 x2791) x3545 (ite (<= x2791 128) x2565 (ite (<= x2791 160) x399 (ite (>= 192 x2791) x63 (ite (<= x2791 224) x1683 x843)))))))) x429) (= (x999 224) x1053) (= x2936 (x999 128)) (= x556 (x1338 x2791 x3277 x3682)) (= x4112 (x999 160)) (= (x2761 x2791 x3954 x4112 x570 x2666 x136) x399) (= (x999 160) x3682) (= x1683 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) (= (x999 160) x2539) (= x702 (+ 128 x247)) (= x234 (x1192 0)) (= x2145 (x1723 x2791 x2171)) (= x2931 (x999 160)) (= (x1338 64 x116 7) x549) (= x3545 (x2226 x2791 x2936 x2539 x1767)) (= (x999 128) x4088) (= (x999 192) x1767) (= (x988 (- (mod (+ x1841 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x3866)) (and x657 (=> (and (= x953 (x1745 288)) (= x244 (x1745 224)) (= x2687 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) (= x4043 (x1745 192)) (= (x2761 x813 x3237 x1152 x545 x1582 x3085) x4064) (= (x1745 256) x688) (= x1180 (x1745 160)) (= (x1745 160) x1564) (= x3579 (x1745 128)) (= (x1745 160) x1152) (= x3237 (x1745 128)) (= (<= x3866 224) x1615) (= x1894 (x2226 x813 x3055 x3250 x899)) (= x1849 (x1745 320)) (= x2092 (x1745 288)) (= x4174 (x1338 x813 x3309 x640)) (= x1810 (x1723 x813 x3579)) (= (x1745 256) x3085) (= (x1745 160) x1929) (= x3269 (x898 x813 x3017 x1180 x2298 x244)) (= x240 (x1745 224)) (= x3484 (x1745 224)) (= x3309 (x1745 128)) (= (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953) x2810) (= x899 (x1745 192)) (= x545 (x1745 192)) (= x3250 (x1745 160)) (= (x1745 256) x4229) (= x1134 (x1745 192)) (= x2553 (ite (= 0 x813) x2127 (ite (<= x813 32) x1810 (ite (<= x813 64) x4174 (ite (>= 96 x813) x1894 (ite (>= 128 x813) x3269 (ite (<= x813 160) x4064 (ite (<= x813 192) x2810 (ite (<= x813 224) x2687 x1374))))))))) (= x1582 (x1745 224)) (= (x1745 160) x640) (= x2298 (x1745 192)) (= (x1745 128) x3055) (= (x1745 128) x1008) (= (x1745 128) x976) (= (x1745 128) x3017) (= (x1192 0) x2127)) (and x1615 (not (and (= (x1338 x3866 x1019 x2599) x3834) (= x3402 (x1745 288)) (= x3968 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710)) (= (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438) x3746) (= (* x3326 32) x2628) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2587) (= x1256 (x1745 256)) (= x3465 (x1464 x175)) (= x2599 (x1745 160)) (= (x1745 256) x3675) (= (x2226 x3866 x858 x2769 x2522) x844) (= x1276 (x1745 224)) (= x4247 (x1745 192)) (= (x1745 160) x155) (= x2800 (x1745 224)) (= (x1745 160) x992) (= x1710 (x1745 288)) (= x2778 (+ 160 x2628)) (= x175 (+ x2778 32)) (= x3786 (x1745 256)) (= x3570 (div (+ x2503 31) 32)) (= (x1745 160) x2769) (= x2820 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) (= (x1745 128) x858) (> x2454 x2778) (= x3438 (x1745 320)) (= x52 (x1338 64 x3465 10)) (= (+ x1943 x2778 32) x2454) (= x470 128) (= x1019 (x1745 128)) (= (x1745 128) x433) (= x842 (x1745 224)) (= x1943 (* x3570 32)) (= x200 (x1745 192)) (<= 32 x2587) (= x291 (x898 x3866 x433 x155 x2455 x842)) (= (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (>= 32 x3866) x3118 (ite (>= 64 x3866) x3834 (ite (>= 96 x3866) x844 (ite (<= x3866 128) x291 (ite (<= x3866 160) x2820 (ite (<= x3866 192) x3968 (ite (>= 224 x3866) x3746 x4290))))))))) x4106) (= (x1192 0) x2647) (= x3774 (x1745 224)) (= x2522 (x1745 192)) (= (x1745 192) x2455) (= (+ x175 x2503) x3624) (= x3706 (x1745 192)) (= (div (+ x247 31) 32) x3326) (= x2587 (x1464 x2778)) (= x4299 (x1745 160)) (= x3118 (x1723 x3866 x4076)) (= x2802 (x1745 128)) (= x4076 (x1745 128)) (= x3803 (x1745 128)) (= (x1745 128) x3725) (= (+ 160 x247) x1600) (= (x1745 160) x558))))))) x2544)))) x4253)) x1887))
(assert (= x2371 (or x2439 x2861)))
(assert (=> (<= x3170 10000) (= 0 (x2363 x3170))))
(assert (x881 x3276))
(assert (= (x2363 1722637450) 0))
(assert (= (x3895 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)) x3344))
(assert (=> (>= 10000 x3679) (= 0 (x2363 x3679))))
(assert (x881 x3679))
(assert (= (x2164 (x2761 x2791 x3954 x4112 x570 x2666 x136)) x570))
(assert (x881 x1360))
(assert (= x1241 (x2229 (x2761 x1241 x889 x3842 x4212 x3890 x1143))))
(assert (x881 x2547))
(assert (x881 x242))
(assert (=> (>= 10000 x33) (= (x2363 x33) 0)))
(assert (x881 x1631))
(assert (=> (>= 10000 x980) (= 0 (x2363 x980))))
(assert (x881 x2168))
(assert (=> (<= x4112 10000) (= (x2363 x4112) 0)))
(assert (= x1001 (x2229 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636))))
(assert (x881 x463))
(assert (x881 x2941))
(assert (= (x2363 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) (x2761 x3866 x2802 x992 x3706 x2800 x3786)))
(assert (not (x1229 (x1723 x228 x3679))))
(assert (x881 x4069))
(assert (x881 x3031))
(assert (< 10000 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)))
(assert (= (x1451 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) x3150))
(assert (x881 x1420))
(assert (x881 x2389))
(assert (x881 x1483))
(assert (x881 x3561))
(assert (= (=> (and (or (and (not x555) (= x3969 (+ 1 x1714))) (and x555 (and x3737 (= x1349 (x1974 x1672)) x1218 (= x3737 (= x1349 (x1506 x1672))) (= x3238 (x1974 x1672)) (= x3665 x3969) (= (>= (x1506 x1672) x3238) x1218) (>= 4294967295 x563)))) (and (= (> x1953 0) x555) (= (x1713 (+ x1750 32)) x1388) (= (x988 (- x1750 x3180)) x2203) (= (x1713 (+ 32 x3180)) x2056) (< x1750 x3429) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1750) (= x3429 (x1713 (+ x1750 192))) (>= x1750 1) (<= x3180 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3180 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3180) (= (x1713 (+ x4251 x1266)) x1750) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1750)) (> x1750 x3180) (not (= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2506) x1266) (= (x265 26959946667150639794667015087019630673637144422540572481103610249215 x1478) x4165) (not (= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1750) (= x3143 (x988 (- x2203 32))) (= (x1713 (+ 31 x3648)) x2506) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x4165) x2720) (= x3555 (x1713 (+ x4251 x3648))) (= x1185 (x866 x3180)) (= (x2597 x2056) x1478))) x1301) x387))
(assert (= (x1415 (x1338 64 x116 7)) x116))
(assert (x881 x3637))
(assert (x881 x519))
(assert (x881 x3569))
(assert (x881 x1336))
(assert (= x4072 (x2164 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (x881 x362))
(assert (not (x1229 (x1338 64 x2804 10))))
(assert (> (x2226 x1949 x3121 x2734 x1084) 10000))
(assert (x881 x2453))
(assert (x881 x1856))
(assert (x881 x3668))
(assert (not (x1229 (x1338 64 x89 2))))
(assert (x881 x2948))
(assert (= (x1415 (x2761 x1949 x2524 x2830 x1996 x1724 x1495)) x2524))
(assert (= (=> (and (= x4139 (x988 (- x3688 x3369))) (= x1154 (x1713 (+ x1057 x729))) (= x140 (x1713 (+ 32 x3442))) (= (> x1558 0) x1965) (= x3688 (x1713 (+ x2911 x729))) (= x1558 (x1633 x1204)) (= (x1713 (+ 31 x1057)) x168) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x168) x2911)) (and (=> (and (= (> x1558 32) x2980) x1965) (and (=> (and (= x4077 (> x1558 64)) x2980) (and (=> (and x4077 (= x3281 (< 96 x1558))) (and (=> (not x3281) x1236) (=> x3281 x3741))) (=> (not x4077) x1236))) (=> (not x2980) x1236))) (=> (not x1965) x1236))) x3079))
(assert (= (x2363 (x1338 64 x1672 2)) (x1338 64 x1672 2)))
(assert (= (and x3240 x1803) x2906))
(assert (= (x1451 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) x1564))
(assert (= (x2363 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)))
(assert (x881 x6))
(assert (x881 x4048))
(assert (x881 x662))
(assert (x881 x186))
(assert (=> (>= 10000 x3235) (= (x2363 x3235) 0)))
(assert (x881 x705))
(assert (x881 x1697))
(assert (x881 x2268))
(assert (x862 x1476))
(assert (x881 x1105))
(assert (x881 x116))
(assert (= x2944 (x1415 (x2226 x2115 x2944 x213 x404))))
(assert (= x1487 (or x1065 x4027)))
(assert (= x3022 (x1207 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (= x1184 (or x4161 x1594)))
(assert (x881 x3149))
(assert (x881 x250))
(assert (x881 x1056))
(assert (not (x1229 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (x881 x184))
(assert (= x416 (and (not x2382) x2432)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3556 36)))
(assert (x881 x1511))
(assert (= (and x1166 (not x1494)) x2358))
(assert (= x2991 (x3455 (x2761 x2790 x2028 x92 x3705 x1183 x2991))))
(assert (x881 x4114))
(assert (= 0 (x2363 1313998243)))
(assert (not (x1229 (x2226 x655 x536 x2742 x635))))
(assert (= x3334 (and x1591 (not x3286))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x1712 x1939 x3944 x1914 x954)))
(assert (x881 x748))
(assert (= x887 (x3658 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816))))
(assert (= x2791 (x2229 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005))))
(assert (= (x2229 (x1723 32 103)) 32))
(assert (=> (<= x2180 10000) (= 0 (x2363 x2180))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x2790 x1526 x2920 x3098)))
(assert (= (or x1007 x2928) x1629))
(assert (= (x3658 (x898 x1712 x1939 x3944 x1914 x954)) x954))
(assert (x881 x2191))
(assert (x881 x1692))
(assert (x881 x4293))
(assert (= (x2363 (x2761 x228 x565 x1946 x2505 x3139 x2202)) (x2761 x228 x565 x1946 x2505 x3139 x2202)))
(assert (x881 x899))
(assert (x881 x3376))
(assert (x881 x498))
(assert (x881 x2530))
(assert (x881 x3501))
(assert (x881 x1573))
(assert (=> (>= 10000 x594) (= (x2363 x594) 0)))
(assert (x881 x569))
(assert (x881 x3837))
(assert (= (x1338 64 x3525 100) (x2363 (x1338 64 x3525 100))))
(assert (x881 x551))
(assert (=> (<= x356 10000) (= (x2363 x356) 0)))
(assert (=> (<= x2498 10000) (= (x2363 x2498) 0)))
(assert (=> (>= 10000 x2931) (= 0 (x2363 x2931))))
(assert (x1229 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (= x2531 (x3658 (x898 x1241 x2959 x2355 x1515 x2531))))
(assert (< 10000 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)))
(assert (x881 x4059))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 32 x3032)))
(assert (< (x4162 x1241 x71 x217 x3948 x533 x1584 x1635) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2609))
(assert (x881 x971))
(assert (x881 x3640))
(assert (=> (<= x4003 10000) (= (x2363 x4003) 0)))
(assert (= x2000 (and (not x964) x815)))
(assert (x320 x1420))
(assert (< 10000 (x2761 x1241 x889 x3842 x4212 x3890 x1143)))
(assert (= x205 (and x1591 x3286)))
(assert (x881 x2855))
(assert (> (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291) 10000))
(assert (= (=> (and (or (and (not x5) (= x936 (ite x5 1 0))) (and (and (= (x3146 128) x379) (= x936 (ite (> x379 0) 1 0))) x5)) (and (= (= x1741 x2268) x5) (= x1741 (x3146 128)))) x3264) x3411))
(assert (=> (>= 10000 x3637) (= (x2363 x3637) 0)))
(assert (= x850 (=> (and (= (div x79 2) x4225) (= x3082 (+ x3157 32)) (= x3897 (- x3157 132)) (= (ite (< 0 x2994) x4225 (x265 127 x4225)) x3214) (= (= 0 x3524) x4294) (= (x988 (- x2994 (mod (ite (< x3214 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1701) (= (x265 1 x79) x3524) (or (= 1 x1701) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1701)) (= (x265 1 x79) x2994)) (and (=> (and x4294 (and (= x4094 (* (ite (not (= x3214 0)) 1 0) 32)) (or (= 32 x4094) (= x4094 0)) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x79) x2068) (= x504 (+ x3082 x4094)))) x1887) (=> (and (and (= x1803 (< 0 x3214)) (= (x1723 32 104) x2113)) (not x4294)) (and (=> (and (= 0 x3640) (not x1803)) x4137) (=> x1803 x1601)))))))
(assert (x881 x2651))
(assert (x881 x520))
(assert (= (x1451 (x1338 64 x4140 5)) 5))
(assert (= x830 (x3455 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (x881 x1961))
(assert (x881 x4093))
(assert (=> (<= x3010 10000) (= (x2363 x3010) 0)))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (not (x1229 (x1338 64 x3556 36))))
(assert (=> (>= 10000 x4290) (= 0 (x2363 x4290))))
(assert (= (and x2276 (not x1259)) x3266))
(assert (x881 x3128))
(assert (x881 x114))
(assert (x881 x1541))
(assert (x881 x690))
(assert (x881 x2290))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (> (x898 x1241 x2959 x2355 x1515 x2531) 10000))
(assert (=> (>= 10000 x1326) (= 0 (x2363 x1326))))
(assert (x881 x4001))
(assert (x881 x2233))
(assert (x881 x3612))
(assert (< 10000 (x1338 64 x3156 10)))
(assert (= (x2363 (x1338 64 x1573 12)) (x1338 64 x1573 12)))
(assert (=> (>= 10000 x200) (= 0 (x2363 x200))))
(assert (= x1422 (=> (= x3157 (+ x1732 292)) x850)))
(assert (x881 x4088))
(assert (= (x3455 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) x18))
(assert (= x1672 (x1415 (x1338 64 x1672 2))))
(assert (x881 x813))
(assert (not (x1229 (x898 x3829 x715 x4071 x3961 x4010))))
(assert (=> (>= 10000 x887) (= 0 (x2363 x887))))
(assert (= x495 (x2164 (x2761 x3829 x2510 x1242 x495 x938 x3561))))
(assert (x881 x3298))
(assert (= x3250 (x1451 (x2226 x813 x3055 x3250 x899))))
(assert (x881 x3724))
(assert (= x3617 (and x334 x1486)))
(assert (x881 x1175))
(assert (x881 x324))
(assert (= (x3658 (x898 x228 x1188 x2250 x3241 x3801)) x3801))
(assert (= x2830 (x1451 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (x881 x3148))
(assert (x881 x393))
(assert (= (x1415 (x1723 x2790 x2655)) x2655))
(assert (=> (<= x1277 10000) (= (x2363 x1277) 0)))
(assert (< 10000 (x1338 x3866 x1019 x2599)))
(assert (x881 x845))
(assert (x881 x2456))
(assert (= (x1207 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353)) x3353))
(assert (= (x2363 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)))
(assert (= x2256 (and (not x1368) x1632)))
(assert (x881 x443))
(assert (= (x1451 (x1338 64 x39 6)) 6))
(assert (x881 x1232))
(assert (x881 x790))
(assert (x881 x954))
(assert (x881 x1893))
(assert (x881 x2146))
(assert (= x3586 (and x3020 (not x1596))))
(assert (x881 x3017))
(assert (= x4003 (x1451 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997))))
(assert (= (x1451 (x1338 64 x1714 12)) 12))
(assert (= (x898 x569 x6 x553 x3235 x44) (x2363 (x898 x569 x6 x553 x3235 x44))))
(assert (=> (>= 10000 x3022) (= 0 (x2363 x3022))))
(assert (x881 x4131))
(assert (< (x2226 x3829 x2706 x3083 x2302) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1229 (x1338 64 x2030 12))))
(assert (x881 x3414))
(assert (x881 x526))
(assert (= (or x3887 x124) x173))
(assert (=> (<= x2441 10000) (= (x2363 x2441) 0)))
(assert (= x1363 (and x1247 x1439)))
(assert (= (and x1268 x511) x1502))
(assert (=> (>= 10000 x3537) (= 0 (x2363 x3537))))
(assert (x881 x1267))
(assert (x881 x542))
(assert (= (x2164 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) x3706))
(assert (x881 x1452))
(assert (= x2791 (x2229 (x898 x2791 x1950 x2087 x546 x4128))))
(assert (=> (<= x3438 10000) (= 0 (x2363 x3438))))
(assert (not (x1229 (x1723 x1001 x3828))))
(assert (x881 x3757))
(assert (x881 x718))
(assert (x881 x640))
(assert (x881 x2244))
(assert (= x858 (x1415 (x2226 x3866 x858 x2769 x2522))))
(assert (x881 x642))
(assert (= x1949 (x2229 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017))))
(assert (x881 x3841))
(assert (x881 x356))
(assert (= (x2229 (x1723 32 x1997)) 32))
(assert (x881 x2297))
(assert (x881 x4091))
(assert (= 11 (x1451 (x1338 64 x3835 11))))
(assert (< 10000 (x898 x813 x3017 x1180 x2298 x244)))
(assert (x881 x3169))
(assert (x881 x1728))
(assert (= (x2363 (x2226 x655 x536 x2742 x635)) (x2226 x655 x536 x2742 x635)))
(assert (x1735 x79))
(assert (= x1028 (and x2026 (not x3049))))
(assert (x881 x2917))
(assert (x1229 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x881 x285))
(assert (x881 x1859))
(assert (x862 x1420))
(assert (< (x1338 64 x3877 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1415 (x1338 x2791 x3277 x3682)) x3277))
(assert (x881 x4000))
(assert (= x1512 (x1415 (x2761 x59 x1512 x806 x1358 x3031 x835))))
(assert (x881 x425))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)))
(assert (= x1175 (x1451 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (= (x2229 (x1338 64 x39 6)) 64))
(assert (x881 x2721))
(assert (x881 x2825))
(assert (= x2356 x210))
(assert (= (x2229 (x1723 x2115 x1893)) x2115))
(assert (x881 x1258))
(assert (=> (>= 10000 x1950) (= (x2363 x1950) 0)))
(assert (= x1326 (x1415 (x1723 x1241 x1326))))
(assert (= x784 (and (not x1579) x4245)))
(assert (x881 x974))
(assert (x881 x2269))
(assert (=> (>= 10000 x435) (= 0 (x2363 x435))))
(assert (x881 x1152))
(assert (= (x2363 94926909962862326217726538024181891405690106632559804934698421914364834480128) 0))
(assert (x881 x4163))
(assert (= x3747 (and (not x3891) x2051)))
(assert (< 10000 (x2226 x2791 x2936 x2539 x1767)))
(assert (x881 x1349))
(assert (= (x3658 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) x2858))
(assert (x862 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x881 x697))
(assert (= x136 (x3455 (x2761 x2791 x3954 x4112 x570 x2666 x136))))
(assert (x881 x1059))
(assert (x1229 18446744073709551615))
(assert (x881 x2054))
(assert (x881 x2582))
(assert (= x1132 (x1451 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (x881 x3754))
(assert (=> (>= 10000 x3705) (= 0 (x2363 x3705))))
(assert (x881 x1721))
(assert (x881 x2956))
(assert (= x3136 (and x652 x264)))
(assert (x1229 3313512704))
(assert (= x3955 (x1451 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063))))
(assert (= x1409 (or x1742 x1756)))
(assert (x881 x3263))
(assert (x881 x3873))
(assert (=> (>= 10000 x4091) (= (x2363 x4091) 0)))
(assert (=> (>= 10000 x577) (= (x2363 x577) 0)))
(assert (x881 x3155))
(assert (x881 x4117))
(assert (=> (>= 10000 x3461) (= 0 (x2363 x3461))))
(assert (x881 x2309))
(assert (= (x1415 (x2761 x3829 x2510 x1242 x495 x938 x3561)) x2510))
(assert (x881 x2338))
(assert (x881 x2298))
(assert (x881 x1278))
(assert (=> (>= 10000 x1231) (= 0 (x2363 x1231))))
(assert (= x521 x2249))
(assert (= x4015 (or x3657 x1644)))
(assert (x881 x3342))
(assert (x881 x1892))
(assert (x881 x2804))
(assert (x881 x3072))
(assert (= (x1451 (x1338 64 x3573 6)) 6))
(assert (= x2365 (or x4160 x2188 x69)))
(assert (=> (<= x89 10000) (= (x2363 x89) 0)))
(assert (=> (<= x715 10000) (= (x2363 x715) 0)))
(assert (x881 x424))
(assert (x881 x2871))
(assert (= 0 (x2363 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1229 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (=> (<= x1087 10000) (= 0 (x2363 x1087))))
(assert (not (x1229 (x1723 x3866 x4076))))
(assert (x881 x2654))
(assert (< (x1338 64 x61 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x915))
(assert (x881 x1314))
(assert (x881 x4045))
(assert (> (x1723 x2115 x1893) 10000))
(assert (=> (<= x2308 10000) (= 0 (x2363 x2308))))
(assert (x881 x3093))
(assert (x881 x17))
(assert (x881 x3209))
(assert (= x815 (and x499 x3787)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x1241 x1037 x973 x502)))
(assert (x881 x3624))
(assert (= (x2229 (x1338 64 x4198 36)) 64))
(assert (x881 x2694))
(assert (x881 x303))
(assert (= (=> (and (= x114 x2711) (= x64 x2309) (= x3768 x1354) (= x1758 x188) (= x690 x3123) (= x2886 x3685) (= x2097 x1651)) x2685) x564))
(assert (= (and x1740 x1843) x2822))
(assert (=> (<= x2435 10000) (= 0 (x2363 x2435))))
(assert (=> (<= x2455 10000) (= 0 (x2363 x2455))))
(assert (< 10000 (x1338 64 x4140 3)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x1712 x1290 x250 x2069)))
(assert (=> (>= 10000 x1512) (= (x2363 x1512) 0)))
(assert (x881 x1159))
(assert (x881 x868))
(assert (=> (>= 10000 x144) (= 0 (x2363 x144))))
(assert (> (x2226 x569 x1325 x3903 x3355) 10000))
(assert (= x2023 (=> (and (and (= x3452 3672334990) (= (+ x2489 1) x691) (= false x2635) (= x2135 (x1713 (+ 96 x4249))) (= x628 x4252) (= x2191 x1577) (= 1 x2483) (= x2489 (x1338 64 x628 11)) (> x4249 x4203) (= (x3715 x4203) x628) (= (+ 1 x691) x2630) (<= x4203 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x1338 64 x1577 10) x952) (= 36 x2973) (= x1552 (x2194 x952)) (> x2135 x4249) (or (>= x4203 115792089237316195423570985008687907853269984665640564039457584007913129639905) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x4203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x4203)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x4203)) (= false x1386) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4203) (= x2588 0) (= false x2206) (= x277 x1577) (= x2588 (x2328 x2120)) (= x458 false) (= (x2891 x1672) x122) (<= x1552 255) (<= x4267 3) (= false x3314) (= x1753 false) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x4203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x4203)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x4203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x4203)) (= false x1496) (= x1901 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x4203) (= false x3952) (or (and (>= x4203 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x4203)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x4203) (>= x4203 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x1338 64 x628 11) x2120) (<= 1 x122) (= x1738 (x1338 64 x3224 10)) (= x4249 (x1713 (+ x4203 32))) (>= 127 x2763) (= (not (= x2721 0)) x2652) (= x2721 (ite (not (= 0 x1552)) 1 0)) (<= x2763 127) (= false x369)) (and (= x3249 (+ x1895 1)) (= (x2469 x1456) x1260) (= x1895 (+ x1456 1)) (= (x1317 128) x3653) (= false x372) (= (x346 x1895) x804) (= false x798) (>= 127 x3254) (= (and x851 x2603) x274) (>= 127 x3254) (<= 1 x2602) (= x61 x4252) (= false x779) (= false x2336) (= x851 (not x2652)) (= x1456 (x1338 64 x61 11)) (= x2713 (x111 x3249)) (= 2177969240 x98) (<= x1260 3) (= 36 x475) (= (x1317 160) x3644) (= (x2891 x1672) x2602) (= false x3814) (= x3893 (x1317 192)) (= x2209 false))) (and x274 (=> (and (= (and x3323 x919) x4263) (= (= x3644 x612) x919) (= x3323 (= 1 x3653)) (= x277 x612) (= (and x3417 x4263) x3081) (= (= x3893 0) x3417)) x3081)))))
(assert (= (x2363 59118985759084958080972419199848406897631161684926069324597705158744233476096) 0))
(assert (x881 x2763))
(assert (x881 x3470))
(assert (x881 x1666))
(assert (x881 x87))
(assert (x881 x3001))
(assert (x881 x2186))
(assert (= (=> (and (= x3377 (x1713 (+ x1369 32))) (= x2382 (= x3010 x2873)) (= (x1713 (+ x4203 4)) x1369) (= (x988 (- x3377 x4203)) x113) (= x113 36)) (and (=> (and (and (and (<= 1 x1729) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x3625) (= x3722 (* x1275 1000000000)) (= x1287 false) (= x41 false) (= x701 x3722) (<= x1913 127) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x1275) (= (ite x3929 1 0) x542) (= x1729 (x2891 x3010)) (= (x1200 x3053) x3672) (>= 127 x1913) (= 36 x143) (= x279 (x2020 x3733)) (= (x1338 64 x1672 2) x3053) (= (x1338 64 x1672 1) x3733) (= x1273 x1275) (= 3628442803 x3148) (= x1273 x3339) (= (< x279 x3672) x3929)) (or (and (and (= (x988 (- x279 x3672)) x3078) (not (< x3078 x701)) (not (< x279 x3078))) (not x3929)) (and (= 0 x542) x3929))) x2382) x3497) (=> (and (not x2382) (and (<= x1119 127) (>= 253 x1697) (= x2808 false) (= x3056 (+ 1 x1697)) (= x2873 x876) (= 36 x2406) (= x1275 x4132) (= (x2891 x876) x75) (<= x2873 1461501637330902918203684832716283019655932542975) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x949) (<= 1 x509) (= (= 0 x2948) x145) (= x2948 (x1669 x1466)) (= x179 3628442803) (= x89 (+ 1 x1697)) (>= x75 1) (= false x673) (= x1466 (x1338 64 x1697 36)) (= x509 x1672) (<= x509 1461501637330902918203684832716283019655932542975) (<= 1 x2873) (<= x1119 127))) (and (=> (and (not x145) (= x1886 (= 1 x2948))) (and (=> (and (and (= (+ x1714 1) x2612) (= x3878 (x1962 x694)) (= x3509 (x265 1 x3592)) (= x694 (x1338 64 x1714 12)) (= (= x1640 0) x3199) (= x3242 (x988 (- x3509 (mod (ite (> 32 x1056) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 253 x89) (= x1982 (+ 1 x89)) (= x3415 (div x3592 2)) (= (x108 x2133) x3951) (or (= x3242 1) (= x3242 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x265 1 x3592) x1640) (= x1714 (+ x89 1)) (<= x3878 18446744073709551615) (= (x1338 64 x89 6) x2133) (>= x89 1) (= x1056 (ite (> x3509 0) x3415 (x265 127 x3415))) (<= x3951 65535) (= (+ 1 x1714) x3930)) x1886) (and (=> (and x3199 (and (= (* 32 (ite (not (= x1056 0)) 1 0)) x714) (= x2728 (+ x714 292)) (or (= 32 x714) (= 0 x714)) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3592) x3449))) x1) (=> (and (and (= (x1723 32 103) x1548) (= x3286 (< 0 x1056))) (not x3199)) (and (=> x3286 x4153) (=> (and (= 0 x4127) (not x3286)) x756))))) (=> (and (not x1886) (and (<= x923 18446744073709551615) (or (= 1 x3016) (= x3016 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (+ 1 x2541) x809) (= (x265 1 x3592) x3239) (= (+ x89 1) x1838) (= x3714 (x1338 64 x89 6)) (>= 253 x89) (>= x89 1) (= (ite (< 0 x3247) x2823 (x265 127 x2823)) x2100) (= x2541 (+ x89 1)) x3664 (= (x988 (- x3247 (mod (ite (> 32 x2100) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3016) (= x3247 (x265 1 x3592)) (= x1910 (x108 x3714)) (= x1052 (= x3239 0)) (= x3664 (= 2 x2948)) (= x373 (+ x2541 1)) (= x2823 (div x3592 2)) (= x3971 (x1338 64 x2541 12)) (= (x1962 x3971) x923) (>= 65535 x1910))) (and (=> (and x1052 (and (= (+ 292 x2534) x3816) (or (= 0 x2534) (= 32 x2534)) (= x2534 (* (ite (not (= x2100 0)) 1 0) 32)) (= x2480 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3592)))) x271) (=> (and (not x1052) (and (= (< 0 x2100) x3642) (= x1876 (x1723 32 103)))) (and (=> (and (not x3642) (= x1308 0)) x1209) (=> x3642 x1072))))))) (=> (and x145 (and (= x4233 x1443) (= x3311 x1436) (= x3311 (x1669 x2033)) (= (+ 1 x576) x2838) (= x33 (+ 1 x1070)) (= x877 (x516 x3562)) (>= x89 1) (= (x108 x782) x1443) (= x412 (+ 1 x89)) (= (+ x1070 1) x82) (= (+ 1 x576) x4268) (= (+ 1 x576) x446) (= x2765 (x2891 x509)) (= (x1338 64 x33 2) x3562) (<= x3552 1461501637330902918203684832716283019655932542975) (= 132 x3130) (= (x1338 64 x89 2) x4152) (= x2882 false) (= x3510 (x108 x782)) (<= x757 127) (<= 1 x3552) (>= 1461501637330902918203684832716283019655932542975 x3374) (>= 127 x757) (= (x516 x4152) x4143) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x824) (<= x89 250) (= (+ x89 1) x1070) (= x194 3812630263) (<= x877 1461501637330902918203684832716283019655932542975) (= x2033 (x1338 64 x576 36)) (>= x2765 1) (= x2671 (x516 x3562)) (= 128 x3097) (= (+ 1 x33) x2208) (= (x2891 x1672) x1556) (>= 65535 x1443) (= x3374 (x516 x4152)) (>= x3311 100000) (= x3374 x3994) (= x4297 false) (= x1691 (x1669 x2033)) (= x877 x258) (>= x1556 1) (= (x1338 64 x1070 6) x782) (= (+ 1 x33) x576) (= x3552 x876))) x2156))))) x2501))
(assert (x881 x1758))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)))
(assert (x881 x910))
(assert (x881 x3548))
(assert (x881 x2703))
(assert (x881 x1070))
(assert (not (x1229 (x1338 64 x628 11))))
(assert (= x655 (x2229 (x898 x655 x598 x3544 x451 x2977))))
(assert (x881 x1770))
(assert (x881 x578))
(assert (x881 x928))
(assert (x881 x3104))
(assert (< (x2226 x2115 x2944 x213 x404) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x1188))
(assert (x881 x187))
(assert (x881 x2347))
(assert (=> (>= 10000 x2197) (= 0 (x2363 x2197))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1192 0)))
(assert (= (x3658 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x1882))
(assert (= (x2164 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) x2542))
(assert (x1229 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (not (x1229 (x2761 x3829 x2510 x1242 x495 x938 x3561))))
(assert (< 10000 (x1338 64 x89 2)))
(assert (x881 x2420))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x813 x3237 x1152 x545 x1582 x3085)))
(assert (x881 x3167))
(assert (x881 x528))
(assert (= (and x681 (not x3703)) x1765))
(assert (=> (<= x2742 10000) (= 0 (x2363 x2742))))
(assert (=> (>= 10000 x575) (= 0 (x2363 x575))))
(assert (= (=> (= x1469 (+ x1973 292)) x2090) x1516))
(assert (x881 x1039))
(assert (x881 x474))
(assert (x881 x2106))
(assert (= 64 (x2229 (x1338 64 x3297 36))))
(assert (x881 x3686))
(assert (x881 x2957))
(assert (x1517 x2823))
(assert (< 10000 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)))
(assert (=> (>= 10000 x2636) (= (x2363 x2636) 0)))
(assert (not (x1229 (x2761 x3866 x2802 x992 x3706 x2800 x3786))))
(assert (x881 x2374))
(assert (x881 x1694))
(assert (= 7 (x1451 (x1338 64 x3951 7))))
(assert (x881 x773))
(assert (x881 x100))
(assert (= x164 (x1415 (x1338 64 x164 6))))
(assert (= x2677 (or x1617 x2718)))
(assert (x881 x1884))
(assert (x881 x1796))
(assert (=> (<= x3569 10000) (= (x2363 x3569) 0)))
(assert (= (x1451 (x898 x2268 x2314 x2591 x1124 x3886)) x2591))
(assert (< 10000 (x2761 x813 x3237 x1152 x545 x1582 x3085)))
(assert (= (=> (and (= (not (> x1056 32)) x3973) (= x97 (x2730 x1548))) (and x3973 (=> (= 32 x4127) x756))) x4153))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x569 x4204 x3280)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)))
(assert (= (x1451 (x1338 x813 x3309 x640)) x640))
(assert (x881 x2539))
(assert (= (x2229 (x2761 x1949 x2524 x2830 x1996 x1724 x1495)) x1949))
(assert (> (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710) 10000))
(assert (=> (>= 10000 x3241) (= 0 (x2363 x3241))))
(assert (x881 x1191))
(assert (x881 x638))
(assert (x881 x2639))
(assert (x881 x2739))
(assert (= (x2363 (x1723 x2268 x3345)) (x1723 x2268 x3345)))
(assert (not (x1229 (x1338 x59 x1031 x2759))))
(assert (= x558 (x1451 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710))))
(assert (x881 x272))
(assert (x862 x1085))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3465 10)))
(assert (x881 x1100))
(assert (x881 x1041))
(assert (= (x1451 (x1338 64 x1672 1)) 1))
(assert (not (x1229 (x1338 64 x1010 100))))
(assert (x881 x1478))
(assert (x881 x1806))
(assert (> (x1338 64 x1573 12) 10000))
(assert (x881 x1164))
(assert (= (x1207 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)) x606))
(assert (x881 x3317))
(assert (x881 x604))
(assert (x881 x1038))
(assert (= 64 (x2229 (x1338 64 x1577 10))))
(assert (x881 x306))
(assert (= 32 (x2229 (x1723 32 104))))
(assert (=> (>= 10000 x3052) (= 0 (x2363 x3052))))
(assert (x1229 486791245))
(assert (=> (>= 10000 x558) (= 0 (x2363 x558))))
(assert (not (x1229 (x2226 x59 x561 x198 x4009))))
(assert (x881 x507))
(assert (x881 x4204))
(assert (x881 x2131))
(assert (=> (<= x870 10000) (= 0 (x2363 x870))))
(assert (x881 x1431))
(assert (=> (<= x1849 10000) (= (x2363 x1849) 0)))
(assert (= x3557 (and (not x1505) x3794)))
(assert (x881 x827))
(assert (= (x1338 64 x1010 100) (x2363 (x1338 64 x1010 100))))
(assert (x881 x2006))
(assert (x881 x687))
(assert (x881 x3150))
(assert (x881 x991))
(assert (=> (>= 10000 x546) (= 0 (x2363 x546))))
(assert (not (x1229 (x2226 x1712 x1290 x250 x2069))))
(assert (= (=> (and (= (x1713 (+ x1004 96)) x3037) (= (x1713 (+ 96 x729)) x1834) (= (x3595 x3037) x551) (= x229 (not (< 128 x1057)))) (and x3079 x229)) x2749))
(assert (x881 x4056))
(assert (= (x1451 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)) x2054))
(assert (= (and x987 (not x3578)) x1046))
(assert (x881 x3415))
(assert (=> (<= x4212 10000) (= (x2363 x4212) 0)))
(assert (x881 x3217))
(assert (> (x2226 x3829 x2706 x3083 x2302) 10000))
(assert (x881 x207))
(assert (=> (>= 10000 x840) (= 0 (x2363 x840))))
(assert (x881 x3060))
(assert (x881 x3832))
(assert (x881 x2152))
(assert (x881 x1896))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x655 x626)))
(assert (x862 x1868))
(assert (x1229 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x881 x402))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x3866 x4076)))
(assert (= (and x987 x3578) x1166))
(assert (= (and x2224 (not x1827)) x4068))
(assert (x881 x3380))
(assert (x881 x1474))
(assert (x881 x3864))
(assert (x881 x2638))
(assert (= (x2229 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x1712))
(assert (x881 x84))
(assert (x881 x1473))
(assert (= x1946 (x1451 (x2761 x228 x565 x1946 x2505 x3139 x2202))))
(assert (= x2718 (and x2412 x2101)))
(assert (x881 x2605))
(assert (x881 x2753))
(assert (= x3705 (x2164 (x2761 x2790 x2028 x92 x3705 x1183 x2991))))
(assert (x881 x1590))
(assert (x881 x2261))
(assert (=> (>= 10000 x2609) (= 0 (x2363 x2609))))
(assert (=> (>= 10000 x3151) (= 0 (x2363 x3151))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x228 x565 x1946 x2505 x3139 x2202)))
(assert (= x3467 (and (not x2200) x4046)))
(assert (= 0 (x2363 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x881 x3180))
(assert (x881 x1749))
(assert (=> (<= x3797 10000) (= (x2363 x3797) 0)))
(assert (x881 x325))
(assert (= (x2229 (x2761 x2790 x2028 x92 x3705 x1183 x2991)) x2790))
(assert (x881 x2451))
(assert (=> (<= x2495 10000) (= 0 (x2363 x2495))))
(assert (= x233 (=> (and (= x1555 x2657) (= (x2403 128) x1555) (= x4203 160)) x4226)))
(assert (x881 x2588))
(assert (x881 x630))
(assert (= (x1415 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)) x186))
(assert (= (x1338 x2791 x3277 x3682) (x2363 (x1338 x2791 x3277 x3682))))
(assert (x881 x541))
(assert (x881 x2376))
(assert (x881 x617))
(assert (=> (<= x1714 10000) (= (x2363 x1714) 0)))
(assert (=> (>= 10000 x3055) (= (x2363 x3055) 0)))
(assert (x881 x3865))
(assert (=> (>= 10000 x2222) (= (x2363 x2222) 0)))
(assert (not (x1229 (x2226 x2790 x1526 x2920 x3098))))
(assert (= (x1415 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x362))
(assert (x881 x858))
(assert (= (x1338 x228 x2937 x203) (x2363 (x1338 x228 x2937 x203))))
(assert (x881 x136))
(assert (= (x2363 (x898 x59 x4037 x1091 x577 x26)) (x898 x59 x4037 x1091 x577 x26)))
(assert (not (x1229 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005))))
(assert (x881 x1918))
(assert (not (x1229 (x1338 64 x214 36))))
(assert (=> (>= 10000 x2030) (= 0 (x2363 x2030))))
(assert (x881 x8))
(assert (= (x2164 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)) x1005))
(assert (x881 x3589))
(assert (x881 x1868))
(assert (x881 x3607))
(assert (x881 x3172))
(assert (=> (<= x2076 10000) (= 0 (x2363 x2076))))
(assert (= (x1415 (x1723 x655 x626)) x626))
(assert (x881 x3456))
(assert (x881 x3345))
(assert (x881 x35))
(assert (x881 x1930))
(assert (x881 x830))
(assert (= (x1415 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) x1550))
(assert (x881 x3663))
(assert (x881 x727))
(assert (x881 x3798))
(assert (= x2441 (x2164 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (< (x1338 64 x3059 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x661))
(assert (x881 x1291))
(assert (x881 x2993))
(assert (x1517 x4225))
(assert (< 10000 (x2761 x655 x4280 x3527 x4136 x737 x3646)))
(assert (= x1423 (x3455 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (=> (<= x1816 10000) (= (x2363 x1816) 0)))
(assert (x881 x1024))
(assert (= x4137 (=> (= (+ x3640 x3082) x504) x1887)))
(assert (=> (>= 10000 x806) (= 0 (x2363 x806))))
(assert (x881 x2711))
(assert (x881 x787))
(assert (x881 x3037))
(assert (x881 x2990))
(assert (x881 x695))
(assert (=> (<= x1635 10000) (= (x2363 x1635) 0)))
(assert (< (x898 x569 x6 x553 x3235 x44) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1229 (x1723 32 x2516))))
(assert (< 10000 (x2761 x2268 x518 x1132 x951 x3129 x2757)))
(assert (not (x1229 (x1338 64 x3156 10))))
(assert (= 12 (x1451 (x1338 64 x1573 12))))
(assert (=> (>= 10000 x1584) (= 0 (x2363 x1584))))
(assert (= x908 (=> (and (= x1716 (x1713 (+ 96 x2293))) (= (x1713 (+ x1845 96)) x3138) (= x1663 (x1549 x1716)) (= x2554 (not (> x868 128)))) (and x1173 x2554))))
(assert (x881 x2556))
(assert (= (x1415 (x2761 x813 x3237 x1152 x545 x1582 x3085)) x3237))
(assert (x881 x973))
(assert (x881 x1440))
(assert (x1735 x1125))
(assert (< (x1338 64 1 x3804) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1072 (=> (and (= x3605 (x2730 x1876)) (= x1335 (not (> x2100 32)))) (and x1335 (=> (= x1308 32) x1209)))))
(assert (x1517 x722))
(assert (x881 x783))
(assert (x881 x703))
(assert (x881 x202))
(assert (=> (>= 10000 x116) (= 0 (x2363 x116))))
(assert (x881 x733))
(assert (= (or x478 x3700) x1667))
(assert (= (x2363 (x2226 x2791 x2936 x2539 x1767)) (x2226 x2791 x2936 x2539 x1767)))
(assert (x881 x874))
(assert (= (x1451 (x1338 64 x3525 100)) 100))
(assert (=> (>= 10000 x244) (= (x2363 x244) 0)))
(assert (=> (<= x3561 10000) (= 0 (x2363 x3561))))
(assert (x881 x1395))
(assert (x881 x404))
(assert (x881 x2506))
(assert (< 10000 (x1338 64 x39 2)))
(assert (=> (<= x3774 10000) (= (x2363 x3774) 0)))
(assert (= (x2363 (x1338 x655 x1109 x4109)) (x1338 x655 x1109 x4109)))
(assert (x881 x1929))
(assert (x881 x1121))
(assert (= (and x1781 x1453) x584))
(assert (x881 x211))
(assert (x881 x2789))
(assert (x881 x117))
(assert (= (x2363 (x2761 x2790 x2028 x92 x3705 x1183 x2991)) (x2761 x2790 x2028 x92 x3705 x1183 x2991)))
(assert (= (=> (and (= x3439 (not (> x2777 612))) (= x3487 (x2496 x1220))) (and x3439 x3287)) x1933))
(assert (= (x1415 (x1338 64 x371 36)) x371))
(assert (= x3458 (=> (and (= (x1713 (+ 32 x1204)) x2703) (= (> x2872 0) x759) (= x1147 (ite (< 150 x623) 150 x623))) (and (=> (not x759) x2081) (=> x759 x905)))))
(assert (= x1798 (or x1411 x3617)))
(assert (x881 x3061))
(assert (x881 x2732))
(assert (= (x2363 (+ 1 x1895)) (x2363 x1895)))
(assert (< 10000 (x2761 x1949 x2524 x2830 x1996 x1724 x1495)))
(assert (x881 x635))
(assert (not (x1229 (x1338 64 x1714 12))))
(assert (x881 x155))
(assert (= (x2363 100000) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x116 7)))
(assert (= (x898 x1949 x2071 x530 x3208 x3405) (x2363 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (x881 x10))
(assert (x881 x1544))
(assert (x862 x4225))
(assert (< (x1723 x2790 x2655) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2291 (x3895 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291))))
(assert (= x3802 (and x3293 x583)))
(assert (= (or x698 x3471 x3638 x1203 x3446) x4051))
(assert (x881 x3817))
(assert (x881 x3274))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (< 10000 (x1338 64 x2605 0)))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x2061 (and (not x3929) x3796)))
(assert (x881 x938))
(assert (< (x898 x2268 x2314 x2591 x1124 x3886) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2457 x1052) x4027))
(assert (x881 x353))
(assert (x881 x2912))
(assert (x881 x269))
(assert (= (x3658 (x898 x655 x598 x3544 x451 x2977)) x2977))
(assert (= (x1415 (x898 x3866 x433 x155 x2455 x842)) x433))
(assert (=> (>= 10000 x628) (= (x2363 x628) 0)))
(assert (= 36 (x1451 (x1338 64 x4198 36))))
(assert (= x1173 (=> (and (= x2990 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1541)) (= (x1713 (+ 32 x2737)) x865) (= (x2319 x1750) x2342) (= x421 (< 0 x2342)) (= x1474 (x988 (- x3389 x3429))) (= x1541 (x1713 (+ 31 x868))) (= (x1713 (+ x1845 x868)) x1458) (= (x1713 (+ x1845 x2990)) x3389)) (and (=> (not x421) x1397) (=> (and (= (> x2342 32) x738) x421) (and (=> (not x738) x1397) (=> (and (= (< 64 x2342) x3927) x738) (and (=> (and x3927 (= x3551 (> x2342 96))) (and (=> (not x3551) x1397) (=> x3551 x3650))) (=> (not x3927) x1397)))))))))
(assert (=> (>= 10000 x2936) (= 0 (x2363 x2936))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x2790 x2028 x92 x3705 x1183 x2991)))
(assert (x881 x890))
(assert (= (x2363 (x1338 64 x2605 0)) (x1338 64 x2605 0)))
(assert (x881 x370))
(assert (= x1567 (x3455 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295))))
(assert (= (x1207 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) x1900))
(assert (not (x1229 (x1338 x2268 x3761 x590))))
(assert (< (x1338 64 x1714 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1723 32 x3336)))
(assert (x881 x4233))
(assert (x881 x1867))
(assert (x881 x475))
(assert (x881 x1584))
(assert (= (and x1576 (not x2003)) x901))
(assert (x881 x2222))
(assert (= (x3455 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353)) x3151))
(assert (= (x2164 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) x1759))
(assert (=> (<= x455 10000) (= 0 (x2363 x455))))
(assert (x881 x2937))
(assert (x881 x3584))
(assert (= (x1415 (x898 x1949 x2071 x530 x3208 x3405)) x2071))
(assert (= x3638 (and x1051 x968)))
(assert (x881 x561))
(assert (= x2790 (x2229 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (x881 x2637))
(assert (x881 x3016))
(assert (= (x2229 (x1723 32 x2516)) 32))
(assert (< (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2363 (x1338 64 x61 11)) (x1338 64 x61 11)))
(assert (x881 x1983))
(assert (x881 x3633))
(assert (= x968 (and x601 x2897)))
(assert (= (x2164 (x898 x228 x1188 x2250 x3241 x3801)) x3241))
(assert (x881 x2355))
(assert (= (ite (= x3866 0) x2647 (ite (>= 32 x3866) x3118 (ite (<= x3866 64) x3834 (ite (<= x3866 96) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (>= 192 x3866) x3968 (ite (>= 224 x3866) x3746 x4290)))))))) (x1451 (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (<= x3866 32) x3118 (ite (<= x3866 64) x3834 (ite (>= 96 x3866) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (<= x3866 192) x3968 (ite (<= x3866 224) x3746 x4290))))))))))))
(assert (not (x1229 (x1338 64 x3951 3))))
(assert (= 64 (x2229 (x1338 64 x2605 0))))
(assert (x881 x2796))
(assert (= (x2229 (x1338 64 x3059 2)) 64))
(assert (x881 x2069))
(assert (x881 x2953))
(assert (x881 x1499))
(assert (= x377 (and x2538 x1238)))
(assert (x881 x2942))
(assert (x881 x2734))
(assert (x881 x1743))
(assert (=> (>= 10000 x1847) (= (x2363 x1847) 0)))
(assert (x881 x4256))
(assert (x881 x3897))
(assert (x881 x126))
(assert (x881 x3625))
(assert (= (x898 x2268 x2314 x2591 x1124 x3886) (x2363 (x898 x2268 x2314 x2591 x1124 x3886))))
(assert (> (x1338 64 x1672 2) 10000))
(assert (= x298 (x1207 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298))))
(assert (= (x2363 (x2226 x2268 x526 x4292 x1748)) (x2226 x2268 x526 x4292 x1748)))
(assert (x862 x1541))
(assert (=> (>= 10000 x3801) (= (x2363 x3801) 0)))
(assert (x320 x2163))
(assert (x881 x2446))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x4019 (ite (= x2790 0) x3808 (ite (>= 32 x2790) x2788 (ite (<= x2790 64) x2627 (ite (>= 96 x2790) x2085 (ite (>= 128 x2790) x3926 (ite (<= x2790 160) x94 (ite (<= x2790 192) x3483 (ite (<= x2790 224) x644 x3114)))))))))))
(assert (x881 x2700))
(assert (= x667 (not (and (= x923 x2244) (= 1722637450 x2776) (= x1694 (+ x1198 x2688)) (>= x4057 196) (= x876 x1672) (= x3496 46442213778836376901753710468615024683576072693327014300388496345503314739200) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x83) (= x162 (+ x2614 32 x1162)) (= x3106 (= (x1668 132) x2100)) (= x3086 (x2891 x1672)) (= (x1338 64 x3156 10) x2149) (= (x2526 132) x3908) (= (x2279 x2614) x83) (<= 1 x1011) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x381) (= x3046 (div (+ x1198 31) 32)) (= false x327) (= 128 x1856) (= x4057 x381) x3106 (= x1910 x4102) (= x3956 (+ x3194 32)) (> x4057 x4232) (not (> x66 x4057)) (= (* x3057 32) x1437) (>= 18446744073709551615 x3908) (= false x4141) (= x1842 x4117) (= x860 128) (= (+ 32 x2614) x2688) (<= 32 x83) (= x3057 (div (+ 31 x3908) 32)) (<= x3422 127) (= x2614 (+ 160 x1437)) (= x3155 (+ x1198 x3956)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4057) (= x66 (+ x3908 164)) (= (x2526 x3194) x1198) (= 128 x3365) (= x3342 164) (= x1162 (* 32 x3046)) (= (x988 (- x3548 128)) x381) (= x3194 (+ x4117 4)) (= x1011 (x2891 x509)) (= x4232 (+ x3194 31)) (not (> x3155 x4057)) (= (x1793 x2688) x3156) (>= 127 x3422) (> x162 x2614) (>= x3086 1) (>= x381 196) (<= x1198 18446744073709551615)))))
(assert (=> (<= x1712 10000) (= (x2363 x1712) 0)))
(assert (x881 x4176))
(assert (= x2463 (=> (= x672 (+ 292 x284)) x3319)))
(assert (= (and (not x2464) x513) x500))
(assert (x881 x1586))
(assert (x881 x3348))
(assert (= x546 (x2164 (x898 x2791 x1950 x2087 x546 x4128))))
(assert (> (x1338 x59 x1031 x2759) 10000))
(assert (not (x1229 (x1338 64 1 x3007))))
(assert (x881 x4078))
(assert (= (x1415 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)) x3408))
(assert (= (and x2094 (not x2284)) x4158))
(assert (= (x2164 (x2226 x655 x536 x2742 x635)) x635))
(assert (=> (>= 10000 x2089) (= 0 (x2363 x2089))))
(assert (x881 x2247))
(assert (= (x3658 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) x2390))
(assert (x881 x1500))
(assert (x881 x2736))
(assert (x881 x3112))
(assert (= x260 (=> (and (or (and (and (= x3791 (= (x684 486) (x1425 196))) (= (x2631 164) x621) (= (+ 196 x621) x2004) (<= x621 18446744073709551615) x3791 (= x4048 x1083) (= (x3096 128) x337) (= 1084734224 x431) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1879) x924) (= x4178 (x3652 290)) (= x2805 (x1713 (+ x4216 x138))) (= false x3932) (= x17 (x3096 160)) (= (x1713 (+ 32 x419)) x4216) (= x1672 x2963) (= (+ 292 x1921) x1157) (= x1365 354) (= x1921 (x2631 260)) (= x1174 256) (= x2218 false) (= 0 x2306) (= x2785 (= (x1425 260) 34)) (= x419 (x1713 (+ x924 486))) (= x138 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x619)) x2465 (= x1214 (x3096 128)) (<= x2662 127) (<= 356 x4048) (= 0 x725) (= x1879 (x1713 (+ x359 31))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1083) (= x359 (x2161 128)) (<= 1 x1191) (= x961 (x988 (- x419 294))) (= 160 x282) (= x2465 (= 64 (x1425 164))) (= (x988 (- x2805 290)) x1083) (= x3486 x4140) (not (> x1157 x4048)) (= x3865 (x3652 322)) (= x208 290) (= x3099 29244376827073035548771643948814531551534385112760475998805679327281764368384) (not (< x4048 x2004)) (>= 18446744073709551615 x1921) (>= x1083 356) (= (x262 224) x3750) (>= 127 x2662) (= (x3096 160) x4090) x2785 (= x2552 false) (= x1022 false) (= x4223 x4178) (= x1191 (x2891 x1679)) x508 (<= x4048 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x508 (= (x1425 228) (x684 518))) (= x619 (x1713 (+ 31 x3750)))) x3421) (and (and (= x4223 x1757) (= x1365 128)) (not x3421))) (= x3421 (= x1757 0))) x50)))
(assert (x881 x3267))
(assert (x881 x2568))
(assert (x881 x3361))
(assert (x881 x2898))
(assert (x881 x4090))
(assert (= (x2363 (x2761 x2791 x3954 x4112 x570 x2666 x136)) (x2761 x2791 x3954 x4112 x570 x2666 x136)))
(assert (x881 x950))
(assert (x881 x446))
(assert (< 10000 (x1192 0)))
(assert (x881 x3871))
(assert (= 0 (x2363 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (>= 32 x3866) x3118 (ite (>= 64 x3866) x3834 (ite (<= x3866 96) x844 (ite (<= x3866 128) x291 (ite (>= 160 x3866) x2820 (ite (<= x3866 192) x3968 (ite (>= 224 x3866) x3746 x4290)))))))))))
(assert (x881 x278))
(assert (x881 x3280))
(assert (x881 x277))
(assert (x881 x2103))
(assert (=> (>= 10000 x3961) (= (x2363 x3961) 0)))
(assert (=> (>= 10000 x695) (= (x2363 x695) 0)))
(assert (x881 x909))
(assert (x881 x2824))
(assert (=> (>= 10000 x2539) (= 0 (x2363 x2539))))
(assert (x881 x290))
(assert (x881 x4257))
(assert (< 10000 (x1338 64 x2541 12)))
(assert (= (or x2413 x1864) x846))
(assert (x881 x501))
(assert (x881 x3008))
(assert (= (and x2943 x339) x3145))
(assert (= (=> (and (= (not (< 32 x4192)) x4246) (= (x3609 x3441) x687)) (and (=> (= 32 x3348) x2658) x4246)) x945))
(assert (x881 x1953))
(assert (x881 x3629))
(assert (< (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x329))
(assert (= x2516 (x1415 (x1723 32 x2516))))
(assert (not (x1229 (x898 x569 x6 x553 x3235 x44))))
(assert (not (x1229 (x1338 64 x4198 36))))
(assert (x881 x920))
(assert (x881 x2655))
(assert (< (x1723 32 x2516) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= x3734 (= 0 x3518)) (and (=> (and (= x3518 1) x3734) x2929) (=> (not x3734) x869))) x3830))
(assert (= (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022) (x2363 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (=> (<= x1748 10000) (= 0 (x2363 x1748))))
(assert (=> (<= x4109 10000) (= 0 (x2363 x4109))))
(assert (not (x1229 (x1338 64 x3465 10))))
(assert (> (x1338 64 x164 6) 10000))
(assert (= (x2229 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) x2268))
(assert (x881 x375))
(assert (= (x1451 (x2226 x2790 x1526 x2920 x3098)) x2920))
(assert (x881 x2176))
(assert (x881 x2472))
(assert (= (and x584 (not x348)) x934))
(assert (= x3566 (or x3102 x2256)))
(assert (< (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1229 2001815235))
(assert (x881 x4201))
(assert (x881 x294))
(assert (x881 x1928))
(assert (x881 x143))
(assert (= x2658 (=> (= (+ x3348 x2053) x3548) x667)))
(assert (= x3438 (x3895 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (= (x1451 (x1338 x655 x1109 x4109)) x4109))
(assert (= (and x1576 x2003) x292))
(assert (= (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511) (x2363 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511))))
(assert (= 2 (x1451 (x1338 64 x39 2))))
(assert (x881 x3389))
(assert (= (x1415 (x1723 x2268 x3345)) x3345))
(assert (not (x1229 (x898 x3866 x433 x155 x2455 x842))))
(assert (x881 x3451))
(assert (x881 x1241))
(assert (x881 x1526))
(assert (x881 x589))
(assert (= (x1415 (x1723 32 104)) 104))
(assert (=> (<= x3484 10000) (= 0 (x2363 x3484))))
(assert (x881 x3236))
(assert (= x1672 (x1415 (x1338 64 x1672 1))))
(assert (= (x1338 64 x4179 11) (x2363 (x1338 64 x4179 11))))
(assert (x881 x218))
(assert (= x3985 (and x1889 x3927)))
(assert (x881 x1712))
(assert (x881 x2908))
(assert (=> (>= 10000 x518) (= 0 (x2363 x518))))
(assert (= x705 (x2164 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (x881 x1252))
(assert (not (x1229 (x2226 x813 x3055 x3250 x899))))
(assert (= (x2229 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) x59))
(assert (x881 x330))
(assert (= (and x2080 x2712) x4161))
(assert (x881 x777))
(assert (x881 x1160))
(assert (not (x1229 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511))))
(assert (x881 x2105))
(assert (= x1026 (and x2119 x2578)))
(assert (x881 x2314))
(assert (= x2757 (x3455 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (= x1069 (and x1704 (not x1794))))
(assert (=> (<= x228 10000) (= 0 (x2363 x228))))
(assert (=> (>= 10000 x3002) (= 0 (x2363 x3002))))
(assert (= x998 (and x273 x3305)))
(assert (x881 x4218))
(assert (x881 x2752))
(assert (x881 x2450))
(assert (x881 x1927))
(assert (x881 x3626))
(assert (= (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063) (x2363 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063))))
(assert (=> (>= 10000 x2381) (= 0 (x2363 x2381))))
(assert (= x3738 (and x4077 x2864)))
(assert (x881 x3075))
(assert (= (x2363 x2489) (x2363 (+ 1 x2489))))
(assert (x881 x803))
(assert (x881 x2569))
(assert (= (and (not x2508) x2768) x3184))
(assert (= x3698 (and x3467 x785)))
(assert (= (and x1632 x1368) x3102))
(assert (=> (<= x1180 10000) (= (x2363 x1180) 0)))
(assert (x881 x3882))
(assert (x881 x3847))
(assert (x881 x590))
(assert (not (x1229 (x1338 64 x2605 0))))
(assert (=> (<= x1893 10000) (= 0 (x2363 x1893))))
(assert (= (x1338 64 x3951 3) (x2363 (x1338 64 x3951 3))))
(assert (x881 x2178))
(assert (x881 x1169))
(assert (=> (>= 10000 x3150) (= (x2363 x3150) 0)))
(assert (= x4037 (x1415 (x898 x59 x4037 x1091 x577 x26))))
(assert (x881 x371))
(assert (x881 x1242))
(assert (x881 x2778))
(assert (=> (<= x2977 10000) (= (x2363 x2977) 0)))
(assert (= x198 (x1451 (x2226 x59 x561 x198 x4009))))
(assert (= (and (not x2242) x3184) x3846))
(assert (not (x1229 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642))))
(assert (x881 x3555))
(assert (> (x1723 32 x1997) 10000))
(assert (x320 x3838))
(assert (x1229 65535))
(assert (x881 x2128))
(assert (= (x2363 (x1338 64 x2030 12)) (x1338 64 x2030 12)))
(assert (= (=> (and (= x1510 x1611) (= x280 x393) (= x1314 x3748) (= x1445 x1216) (= x3701 x1414) (= x301 x1145) (= x3539 x2176) (= x3205 x207) (= x10 x1429) (= x3837 x1303) (= x4150 x523) (= x1130 x3360) (= x1892 x2177)) x726) x1208))
(assert (x1735 x1958))
(assert (= x3231 (=> (and (= (x3729 x2876) x2434) (= x2876 (x1713 (+ 96 x296))) (= x3133 (not (> x3873 128))) (= x2927 (x1713 (+ 96 x1213)))) (and x2497 x3133))))
(assert (= (x3455 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) x2089))
(assert (not (x1229 (x2761 x228 x565 x1946 x2505 x3139 x2202))))
(assert (= (x3455 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)) x1584))
(assert (= (x3658 (x2761 x1241 x889 x3842 x4212 x3890 x1143)) x3890))
(assert (x881 x1555))
(assert (= (x1451 (x1338 x569 x4204 x3280)) x3280))
(assert (x881 x1698))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x2197 36)))
(assert (= x813 (x2229 (x1723 x813 x3579))))
(assert (=> (>= 10000 x1939) (= (x2363 x1939) 0)))
(assert (x881 x4113))
(assert (= x1820 (x1451 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (= (x1415 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) x3391))
(assert (= x3561 (x3455 (x2761 x3829 x2510 x1242 x495 x938 x3561))))
(assert (x881 x33))
(assert (x881 x1604))
(assert (< 10000 (x1723 x2790 x2655)))
(assert (x881 x3175))
(assert (> (x1338 x3829 x2196 x2795) 10000))
(assert (=> (>= 10000 x889) (= 0 (x2363 x889))))
(assert (x881 x2327))
(assert (x881 x3899))
(assert (x881 x4005))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x228 x2937 x203)))
(assert (x881 x293))
(assert (= (x3658 (x2761 x813 x3237 x1152 x545 x1582 x3085)) x1582))
(assert (= (x1415 (x898 x2790 x305 x3753 x3113 x356)) x305))
(assert (< (x1338 64 x4140 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2363 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (=> (>= 10000 x3008) (= (x2363 x3008) 0)))
(assert (=> (<= x4238 10000) (= 0 (x2363 x4238))))
(assert (x881 x2500))
(assert (= (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298) (x2363 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298))))
(assert (= (x1451 (x898 x2791 x1950 x2087 x546 x4128)) x2087))
(assert (x881 x3006))
(assert (x881 x702))
(assert (x881 x3570))
(assert (x881 x359))
(assert (x881 x1475))
(assert (= (x2164 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284)) x1202))
(assert (x881 x2636))
(assert (x881 x3156))
(assert (x881 x1561))
(assert (x881 x3524))
(assert (= (x2229 (x1338 64 x4140 4)) 64))
(assert (= 64 (x2229 (x1338 64 x3537 (ite (= 0 x3866) x2647 (ite (>= 32 x3866) x3118 (ite (>= 64 x3866) x3834 (ite (>= 96 x3866) x844 (ite (<= x3866 128) x291 (ite (<= x3866 160) x2820 (ite (<= x3866 192) x3968 (ite (>= 224 x3866) x3746 x4290))))))))))))
(assert (x881 x888))
(assert (=> (<= x1242 10000) (= 0 (x2363 x1242))))
(assert (=> (>= 10000 x3309) (= (x2363 x3309) 0)))
(assert (x881 x3512))
(assert (x881 x4145))
(assert (x881 x2747))
(assert (= (x2229 (x1338 64 x2804 10)) 64))
(assert (x881 x196))
(assert (= (x1415 (x2226 x59 x561 x198 x4009)) x561))
(assert (x881 x2728))
(assert (=> (<= x2599 10000) (= 0 (x2363 x2599))))
(assert (x881 x2589))
(assert (= (ite (= x2790 0) x3808 (ite (>= 32 x2790) x2788 (ite (<= x2790 64) x2627 (ite (>= 96 x2790) x2085 (ite (<= x2790 128) x3926 (ite (>= 160 x2790) x94 (ite (>= 192 x2790) x3483 (ite (>= 224 x2790) x644 x3114)))))))) (x1451 (x1338 64 x4019 (ite (= x2790 0) x3808 (ite (>= 32 x2790) x2788 (ite (>= 64 x2790) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (>= 160 x2790) x94 (ite (>= 192 x2790) x3483 (ite (<= x2790 224) x644 x3114))))))))))))
(assert (x881 x4149))
(assert (x881 x2406))
(assert (x881 x3818))
(assert (=> (<= x813 10000) (= 0 (x2363 x813))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)))
(assert (x881 x2007))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x3829 x2196 x2795)))
(assert (= (x1451 (x1338 64 x3877 3)) 3))
(assert (x881 x1080))
(assert (x881 x770))
(assert (not (x1229 (x1192 0))))
(assert (x881 x2805))
(assert (x881 x979))
(assert (not (x1229 (x898 x2791 x1950 x2087 x546 x4128))))
(assert (x881 x2039))
(assert (x881 x2115))
(assert (< 10000 (x1338 64 x3951 3)))
(assert (= (and (not x5) x2365) x1246))
(assert (x881 x1623))
(assert (x881 x1975))
(assert (x881 x223))
(assert (=> (<= x2392 10000) (= (x2363 x2392) 0)))
(assert (not (x1229 (x1338 64 x4179 11))))
(assert (x881 x3735))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x655 x4280 x3527 x4136 x737 x3646)))
(assert (x881 x2881))
(assert (= (or x1237 x2899) x837))
(assert (=> (>= 10000 x626) (= 0 (x2363 x626))))
(assert (x881 x2235))
(assert (x881 x1998))
(assert (= (or x2756 x4015) x1412))
(assert (= (x2363 (x898 x3829 x715 x4071 x3961 x4010)) (x898 x3829 x715 x4071 x3961 x4010)))
(assert (not (x1229 (x1338 64 x4140 5))))
(assert (= x4043 (x2164 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (= (x1415 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x997))
(assert (= x1106 (x1415 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636))))
(assert (x881 x1424))
(assert (x881 x3202))
(assert (x1229 4294967295))
(assert (= x3961 (x2164 (x898 x3829 x715 x4071 x3961 x4010))))
(assert (= (x2164 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710)) x200))
(assert (= x1530 (x2164 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (=> (<= x2115 10000) (= (x2363 x2115) 0)))
(assert (x881 x2737))
(assert (= x566 (=> (= (= x548 0) x3859) (and (=> (and (and (= x3963 x1671) (= x3856 false) (= true x906)) x3859) x3489) (=> (and (not x3859) (= x492 (> 64 x3963))) (and (=> (and (and (= x2258 (x1338 64 x3835 11)) (= 450 x3316) (= x2215 (x988 (- x139 (mod (ite (< x1061 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (> x139 0) x1085 (x265 127 x1085)) x1061) (= x139 (x265 1 x1958)) (= (x1168 290) x456) (= (x1168 322) x361) (= x2516 (x1338 64 x4140 3)) (= x1958 (x486 x2516)) (= x3221 (x1338 64 x3835 11)) (= (+ 1 x14) x734) (= x3267 0) (= x3964 (< 0 x2215)) (= x14 (x1338 64 x3835 11)) (= x1563 (+ 2 x2258)) (= x1085 (div x1958 2)) (= 354 x2165) (= (x342 x734) x4176) (= (x3464 x1563) x2297)) (not x492)) (and (=> (and (and (= false x2427) (= x1671 36) (= x1695 true)) (not x3964)) x3489) (=> (and x3964 (and (= (div (+ x1061 31) 32) x1693) (= (* 32 x1693) x3702) (= (= 0 x1061) x1505) (= (+ x3702 548) x3934))) (and (=> (and (= (> x1061 31) x1565) (not x1505)) (and (=> (and (and (= x4258 (x1723 32 x2516)) (= x2859 (x2496 x4258)) (= x2777 (+ x1061 548)) (= x2412 (< 580 x2777)) (= x1220 (+ x4258 1))) x1565) (and (=> (not x2412) x3287) (=> x2412 x1933))) (=> (and (and (= x3925 (* 256 x818)) (= x818 (div x1985 256)) (= (x486 x2516) x1985)) (not x1565)) x1375))) (=> x1505 x1375))))) (=> (and x492 (and (= 0 x1671) (= false x1406) (= x1470 true))) x3489)))))))
(assert (=> (<= x3331 10000) (= (x2363 x3331) 0)))
(assert (x881 x1032))
(assert (= (and (not x2574) x1108) x2813))
(assert (x881 x1202))
(assert (< 10000 (x1723 x569 x1588)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x655 x598 x3544 x451 x2977)))
(assert (x881 x2585))
(assert (=> (<= x4131 10000) (= 0 (x2363 x4131))))
(assert (= x2041 (and x173 x1148)))
(assert (x881 x1919))
(assert (x881 x3646))
(assert (= (or x2743 x81 x1931 x204 x557) x1279))
(assert (x881 x3152))
(assert (x881 x1165))
(assert (x881 x3836))
(assert (= (=> (and (= x972 (= x3860 0)) (or (not x972) x972)) x3550) x491))
(assert (not (x1229 (x2226 x2115 x2944 x213 x404))))
(assert (=> (<= x1620 10000) (= (x2363 x1620) 0)))
(assert (x881 x3403))
(assert (=> (<= x328 10000) (= 0 (x2363 x328))))
(assert (= (x1415 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) x2802))
(assert (< 10000 (x1338 64 x576 36)))
(assert (=> (<= x2017 10000) (= 0 (x2363 x2017))))
(assert (= x3331 (x1207 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (x881 x182))
(assert (> (x2761 x59 x1512 x806 x1358 x3031 x835) 10000))
(assert (x881 x3544))
(assert (x881 x4124))
(assert (=> (>= 10000 x3178) (= (x2363 x3178) 0)))
(assert (=> (>= 10000 x2314) (= (x2363 x2314) 0)))
(assert (x881 x3004))
(assert (x881 x840))
(assert (x881 x1792))
(assert (= x3129 (x3658 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (x881 x2027))
(assert (= x2117 (x3658 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (= (or x1305 x4283) x3811))
(assert (x881 x3121))
(assert (= (or x1529 x4272) x1462))
(assert (> (x1723 x2268 x3345) 10000))
(assert (x881 x479))
(assert (x881 x1964))
(assert (= (x2229 (x1338 64 x89 6)) 64))
(assert (x881 x1605))
(assert (x881 x179))
(assert (=> (>= 10000 x2975) (= 0 (x2363 x2975))))
(assert (x881 x1547))
(assert (x881 x997))
(assert (x881 x729))
(assert (x881 x558))
(assert (x881 x1303))
(assert (x881 x926))
(assert (= x1289 (and x410 (not x2970))))
(assert (= x2115 (x2229 (x2226 x2115 x2944 x213 x404))))
(assert (=> (>= 10000 x1276) (= (x2363 x1276) 0)))
(assert (=> (<= x843 10000) (= (x2363 x843) 0)))
(assert (= (x2164 (x2761 x655 x4280 x3527 x4136 x737 x3646)) x4136))
(assert (x881 x3255))
(assert (x881 x1198))
(assert (x881 x565))
(assert (x862 x4078))
(assert (= x158 (x3658 (x898 x2115 x1500 x3170 x3008 x158))))
(assert (= x3828 (x1415 (x1723 x1001 x3828))))
(assert (=> (>= 10000 x3175) (= 0 (x2363 x3175))))
(assert (x881 x2715))
(assert (= x1839 (not (and (= 128 x2968) (= x3090 x1976) (= x1039 (x311 132)) (= (div (+ 31 x2443) 32) x3817) (= (+ 4 x1788) x1622) (= x2266 (x2891 x2022)) (= (+ x2443 x948) x2500) (= x948 (+ x1622 32)) (= (div (+ 31 x1039) 32) x3454) (not (< x1300 x1544)) (= (x988 (- x1768 128)) x3671) (= (x4058 x902) x4236) (>= x4236 32) (= x1788 x2912) (<= x1039 18446744073709551615) (>= x3671 196) (= x1244 (= (x1417 132) x857)) (= x1181 (* x3817 32)) (= x2178 (+ x902 32 x1181)) (= x2568 (+ x1622 31)) (<= x3423 127) (= x888 (+ 32 x902)) (<= x4236 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 128 x3693) (= x638 46442213778836376901753710468615024683576072693327014300388496345503314739200) (= x665 x589) (= x288 (x3459 x888)) (<= x1300 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 128 x473) (= 164 x2374) (= 1722637450 x3872) (<= 196 x1300) (= x498 (+ x2443 x888)) x1244 (= (+ x3851 160) x902) (>= 127 x3423) (= x3851 (* x3454 32)) (< x2568 x1300) (= x1544 (+ 164 x1039)) (>= x2186 1) (> x2178 x902) (= x3671 x1300) (not (> x2500 x1300)) (= x1672 x876) (= false x2411) (<= 1 x2266) (= (x1338 64 x288 10) x932) (= (x2891 x1672) x2186) (= x2443 (x311 x1622)) (<= x2443 18446744073709551615) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3671) (= false x378)))))
(assert (> (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636) 10000))
(assert (< (x898 x1949 x2071 x530 x3208 x3405) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2276 (and x2360 x4151)))
(assert (x881 x3224))
(assert (< (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x862 x3172))
(assert (x881 x717))
(assert (= (x2761 x1712 x3175 x1121 x3013 x125 x980) (x2363 (x2761 x1712 x3175 x1121 x3013 x125 x980))))
(assert (x881 x1552))
(assert (x1517 x4078))
(assert (x881 x3893))
(assert (x881 x3781))
(assert (= x560 (and x5 x2365)))
(assert (x881 x1689))
(assert (= (and x837 x2733) x3124))
(assert (x881 x4225))
(assert (= x569 (x2229 (x4162 x569 x3001 x2865 x3178 x870 x452 x606))))
(assert (x881 x3055))
(assert (= (and x904 (not x2430)) x1642))
(assert (not (x1229 (x1338 64 x39 2))))
(assert (x881 x1973))
(assert (= (x3455 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022)) x2528))
(assert (= (and (not x3813) x4100) x3976))
(assert (x881 x3171))
(assert (x881 x4180))
(assert (x881 x3434))
(assert (= x2851 (and (not x1803) x3240)))
(assert (= (=> (and (= (x1713 (+ x1786 32)) x2798) (= (x988 (- x228 32)) x1001) (= x228 (x988 (- x2798 x3429))) (= (x1713 (+ x3429 x886)) x3018) (= x1060 (>= 224 x1001)) (= x1786 (x1713 (+ x886 x3429)))) (and x1060 (=> (and (= x2098 (x2761 x1001 x3563 x1612 x1076 x2444 x840)) (= (x1981 x3429) x1968) (= (x1981 x4224) x153) (= x3984 (x1713 (+ x3429 32))) (= (x2226 x1001 x3416 x153 x2807) x3140) (= (x1981 x1522) x386) (= x847 (x1713 (+ 160 x3429))) (= x328 (x1981 x3491)) (= x2241 (x1981 x3072)) (= (x1713 (+ x3429 64)) x1133) (= x2295 (x1981 x2236)) (= x3188 (x1713 (+ 128 x3429))) (= x2444 (x1981 x100)) (= x3488 (x1981 x23)) (= (x1713 (+ x3429 192)) x2236) (= (x1981 x4184) x2345) (= x269 (x1713 (+ 128 x3429))) (= x1612 (x1981 x3984)) (= (x1981 x994) x3000) (= x3676 (x1338 x1001 x1968 x365)) (= x3416 (x1981 x3429)) (= (x1713 (+ x3429 96)) x100) (= x708 (x898 x1001 x733 x3095 x4259 x386)) (= x23 (x1713 (+ 32 x3429))) (= x3900 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295)) (= x3621 (x1713 (+ x3429 160))) (= x4072 (x1981 x2648)) (= (x1981 x1194) x3095) (= (x1723 x1001 x3828) x3431) (= (x1713 (+ 32 x3429)) x994) (= (x1981 x3429) x3828) (= x3563 (x1981 x3429)) (= (x1713 (+ x3429 64)) x4184) (= (x1981 x269) x840) (= x3376 (x1713 (+ 64 x3429))) (= (x1981 x3429) x733) (= x4259 (x1981 x2134)) (= (x1981 x3429) x1106) (= x1676 (x1192 0)) (= (ite (= 0 x1001) x1676 (ite (>= 32 x1001) x3431 (ite (>= 64 x1001) x3676 (ite (>= 96 x1001) x3140 (ite (>= 128 x1001) x708 (ite (<= x1001 160) x2098 (ite (<= x1001 192) x1467 (ite (>= 224 x1001) x3900 x3547)))))))) x3777) (= x1522 (x1713 (+ x3429 96))) (= (x1713 (+ x3429 64)) x2134) (= (x1713 (+ 32 x3429)) x1194) (= (x1981 x3621) x266) (= x1076 (x1981 x1133)) (= (x1713 (+ x3429 96)) x3072) (= x1355 (x1713 (+ x3429 96))) (= x3491 (x1713 (+ 128 x3429))) (= x365 (x1981 x2192)) (= (<= x228 224) x3707) (= (x1981 x847) x2636) (= (x1713 (+ 64 x3429)) x2648) (= x4091 (x1981 x3429)) (= (x1981 x3188) x630) (= x2807 (x1981 x3376)) (= (x1713 (+ x3429 32)) x2192) (= (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636) x1467) (= x4224 (x1713 (+ 32 x3429))) (= (x1981 x1355) x2222)) (and (=> (and (= x2006 (x1713 (+ 64 x3429))) (= (x1713 (+ 96 x3429)) x2016) (= (x1981 x2300) x3410) (= (x2761 x228 x565 x1946 x2505 x3139 x2202) x1799) (= x2505 (x1981 x2006)) (= (x1981 x2077) x540) (= (x1713 (+ x4031 32)) x4020) (= x3735 (x1981 x3641)) (= (x1981 x3429) x2937) (= (x1981 x3429) x3679) (= (x1981 x1123) x766) (= x1341 (x898 x228 x1188 x2250 x3241 x3801)) (= x3391 (x1981 x3429)) (= x2933 (x1981 x3429)) (= (x1713 (+ x3429 32)) x1485) (= x544 (x1713 (+ 64 x3429))) (= x3052 (x1981 x2407)) (= (x1713 (+ 32 x3429)) x196) (= x2202 (x1981 x343)) (= (x1981 x1575) x4001) (= (x1713 (+ 128 x3429)) x2407) (= (x1981 x2016) x435) (= (x1713 (+ x3429 128)) x343) (= (x1713 (+ 96 x3429)) x3910) (= x4031 (x1713 (+ x3429 160))) (= x362 (x1981 x3429)) (= x463 (x1713 (+ x3429 32))) (= (x1713 (+ 32 x3429)) x1575) (= (x1723 x228 x3679) x2035) (= (x1713 (+ 32 x3429)) x407) (= (> x3656 0) x3329) (= (x1981 x3429) x1188) (= x171 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) (= x190 (x1338 x228 x2937 x203)) (= (x1981 x463) x2250) (= (x1981 x407) x1946) (= (x1981 x126) x3139) (= (x1981 x1485) x4131) (= x2519 (x1981 x196)) (= (x1713 (+ x3429 160)) x2130) (= (x1713 (+ x3429 32)) x366) (= (x1192 0) x1179) (= x565 (x1981 x3429)) (= x181 (x1338 64 x3878 (ite (= 0 x228) x1179 (ite (>= 32 x228) x2035 (ite (<= x228 64) x190 (ite (>= 96 x228) x2681 (ite (>= 128 x228) x1341 (ite (>= 160 x228) x1799 (ite (>= 192 x228) x2809 (ite (>= 224 x228) x171 x2180)))))))))) (= (x1713 (+ 128 x3429)) x962) (= x1675 (x1713 (+ 32 x3429))) (= x2809 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) (= (x1981 x2130) x653) (= x2077 (x1713 (+ x3429 64))) (= (x1981 x1158) x3241) (= x203 (x1981 x1675)) (= (x1713 (+ x3429 96)) x2451) (= x2300 (x1713 (+ x3429 160))) (= x2498 (x1981 x2451)) (= (x1981 x544) x3797) (= (x1981 x3910) x3801) (= (x1713 (+ 192 x3429)) x3641) (= (x1713 (+ x3429 96)) x126) (= (x1713 (+ x3429 64)) x1123) (= (x1981 x962) x3171) (= (x1713 (+ 64 x3429)) x1158) (= (x4197 x3690) x3656) (= (x2226 x228 x2933 x4131 x540) x2681)) (and (=> (and x3329 (and (= x3042 (x2598 x559)) (= x4151 (> x3656 32)))) (and (=> (and (and (= (x2645 x529) x2653) (= (x1713 (+ x4020 32)) x2925) (= x529 (x1713 (+ x559 32))) (= (< 64 x3656) x1259)) x4151) (and (=> (not x1259) x3191) (=> (and (and (= (x1713 (+ 64 x559)) x520) (= x3629 (x1871 x520)) (= x3122 (> x3656 96)) (= (x1713 (+ 64 x4020)) x1592)) x1259) (and (=> (not x3122) x3191) (=> x3122 x1501))))) (=> (not x4151) x3191))) (=> (not x3329) x3191))) x3707)))) x2961))
(assert (x881 x2626))
(assert (x881 x1897))
(assert (> (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642) 10000))
(assert (= x1690 (x2164 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997))))
(assert (=> (>= 10000 x3121) (= (x2363 x3121) 0)))
(assert (x881 x20))
(assert (= x1577 (x1415 (x1338 64 x1577 10))))
(assert (not (x1229 (x1338 64 x3525 100))))
(assert (= x3447 (=> (and (= x3185 x971) (= x1210 x246) (= x773 x2774) (= x777 x1829) (= x1874 x1049) (= x765 x749) (= x2569 x928) (= x1983 x2952) (= x2957 x1306) (= x778 x3060) (= x4163 x3202) (= x4140 x77) (= x3313 x2453)) x434)))
(assert (x881 x1693))
(assert (= (x2363 (x1338 64 x39 2)) (x1338 64 x39 2)))
(assert (x881 x2819))
(assert (=> (<= x61 10000) (= (x2363 x61) 0)))
(assert (x881 x2266))
(assert (= 64 (x2229 (x1338 64 x39 36))))
(assert (= (x3658 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) x2800))
(assert (=> (>= 10000 x4098) (= 0 (x2363 x4098))))
(assert (= (and x731 x2567) x1742))
(assert (=> (>= 10000 x1996) (= (x2363 x1996) 0)))
(assert (=> (<= x3085 10000) (= (x2363 x3085) 0)))
(assert (x881 x1373))
(assert (= x1712 (x2229 (x1723 x1712 x1961))))
(assert (x881 x3995))
(assert (< 10000 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)))
(assert (x881 x3018))
(assert (= (x1723 x1001 x3828) (x2363 (x1723 x1001 x3828))))
(assert (= x525 (=> (and (= (x2496 x3026) x3858) (= x2170 (not (< 224 x2228)))) (and x2225 x2170))))
(assert (x881 x1076))
(assert (= (x1415 (x1338 64 x1070 6)) x1070))
(assert (=> (<= x3878 10000) (= 0 (x2363 x3878))))
(assert (= x944 (and x3642 x3285)))
(assert (= (x2229 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) x2115))
(assert (=> (<= x44 10000) (= 0 (x2363 x44))))
(assert (= x3083 (x1451 (x2226 x3829 x2706 x3083 x2302))))
(assert (< (x1338 64 x2541 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3886 10000) (= 0 (x2363 x3886))))
(assert (x881 x379))
(assert (x881 x1946))
(assert (x881 x2759))
(assert (= (x2229 (x1338 64 1 x3804)) 64))
(assert (= (x1415 (x1338 64 x1714 12)) x1714))
(assert (= x1519 (and x4021 x2009)))
(assert (= 64 (x2229 (x1338 64 x1714 12))))
(assert (= (=> (and (= (= 0 x1953) x45) (or x45 (not x45))) x1755) x1301))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x881 x3331))
(assert (x881 x2002))
(assert (x881 x296))
(assert (= (and (not x1051) x968) x583))
(assert (x881 x423))
(assert (= (=> (and (= x1096 (- x1469 132)) (= (x265 1 x79) x1489) (= (= x1489 0) x367) (= x1435 (ite (> x3606 0) x1991 (x265 127 x1991))) (= x1634 (x988 (- x3606 (mod (ite (> 32 x1435) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3606 (x265 1 x79)) (or (= x1634 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1634)) (= x294 (+ 32 x1469)) (= (div x79 2) x1991)) (and (=> (and x367 (and (= x799 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x79)) (= x718 (* (ite (not (= x1435 0)) 1 0) 32)) (= x921 (+ x718 x294)) (or (= 32 x718) (= x718 0)))) x2947) (=> (and (and (= (x1723 32 104) x1608) (= (> x1435 0) x3536)) (not x367)) (and (=> (and (= x3141 0) (not x3536)) x3383) (=> x3536 x1418))))) x2090))
(assert (x881 x259))
(assert (= (x2363 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)))
(assert (= x3405 (x3658 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (x881 x1661))
(assert (x881 x825))
(assert (x881 x2337))
(assert (=> (>= 10000 x3391) (= 0 (x2363 x3391))))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= x174 (and x1899 x2629)))
(assert (=> (>= 10000 x352) (= (x2363 x352) 0)))
(assert (= (x2363 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (= x365 (x1451 (x1338 x1001 x1968 x365))))
(assert (x1229 3957931183))
(assert (x881 x2153))
(assert (x881 x3151))
(assert (x881 x4132))
(assert (= (=> (and (= (x2299 x2324) x3161) (= (not (> x857 32)) x3252)) (and (=> (= 32 x284) x2463) x3252)) x3697))
(assert (= (x1415 (x1723 x2791 x2171)) x2171))
(assert (> (x1338 64 x3835 11) 10000))
(assert (not (x1229 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636))))
(assert (x881 x4247))
(assert (x881 x251))
(assert (x881 x3429))
(assert (=> (>= 10000 x2028) (= (x2363 x2028) 0)))
(assert (= x2197 (x1415 (x1338 64 x2197 36))))
(assert (x881 x3201))
(assert (=> (<= x3725 10000) (= (x2363 x3725) 0)))
(assert (x881 x1726))
(assert (= (x2363 (x1723 x3866 x4076)) (x1723 x3866 x4076)))
(assert (x881 x405))
(assert (x881 x2480))
(assert (x881 x4230))
(assert (= (=> (and (= (= x2872 0) x3517) (or (not x3517) x3517)) x3458) x3800))
(assert (= x695 (x1415 (x1338 x2790 x695 x2651))))
(assert (= x2009 (and (not x476) x438)))
(assert (x881 x3610))
(assert (= (x2164 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x4282))
(assert (= x156 (=> (and (= x1700 (not (> x1337 32))) (= x3602 (x3696 x4286))) (and (=> (= 32 x3190) x2949) x1700))))
(assert (> (x1338 64 x371 36) 10000))
(assert (= (x1451 (x2761 x59 x1512 x806 x1358 x3031 x835)) x806))
(assert (x881 x1550))
(assert (=> (<= x630 10000) (= (x2363 x630) 0)))
(assert (x881 x97))
(assert (x881 x2381))
(assert (=> (>= 10000 x604) (= (x2363 x604) 0)))
(assert (x881 x3254))
(assert (x881 x3086))
(assert (= (x1451 (x2761 x1712 x3175 x1121 x3013 x125 x980)) x1121))
(assert (not (x1229 (x1338 64 x371 36))))
(assert (x881 x1874))
(assert (< (x1723 x2791 x2171) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2587))
(assert (= (or x2581 x1992 x2781 x2221 x2680) x1990))
(assert (x881 x1272))
(assert (x881 x1113))
(assert (x881 x3356))
(assert (= (x3895 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)) x4005))
(assert (= (or x3862 x1187) x831))
(assert (x881 x305))
(assert (= (and x613 (not x3199)) x1591))
(assert (x881 x1835))
(assert (x881 x309))
(assert (x881 x1062))
(assert (= x3896 (or x445 x3846)))
(assert (= (=> (and (= x1169 (x1713 (+ 31 x3656))) (= x1819 (x1713 (+ x3656 x4020))) (= x1479 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1169)) (= (x988 (- x1540 x3429)) x3990) (= x1845 (x1713 (+ 32 x1540))) (= (x1713 (+ x1479 x4020)) x1540) (= x868 (x2255 x503)) (= (< 0 x868) x2003) (= x1908 (x1713 (+ x366 32))) (= (x1713 (+ 32 x1908)) x2737)) (and (=> (not x2003) x1173) (=> (and (and (= (< 32 x868) x4054) (= x3108 (x461 x2293))) x2003) (and (=> (and (and (= x3909 (> x868 64)) (= (x1713 (+ x1845 32)) x2031) (= x2391 (x1713 (+ 32 x2293))) (= x3009 (x762 x2391))) x4054) (and (=> (not x3909) x1173) (=> (and x3909 (and (= x218 (x3388 x2871)) (= x2384 (> x868 96)) (= x1206 (x1713 (+ x1845 64))) (= x2871 (x1713 (+ 64 x2293))))) (and (=> (not x2384) x1173) (=> x2384 x908))))) (=> (not x4054) x1173))))) x3191))
(assert (not (x1229 (x898 x655 x598 x3544 x451 x2977))))
(assert (=> (<= x288 10000) (= (x2363 x288) 0)))
(assert (x881 x1326))
(assert (x881 x2795))
(assert (= x59 (x2229 (x1338 x59 x1031 x2759))))
(assert (= x1114 (and (not x367) x2619)))
(assert (< (x1338 64 x1577 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2705))
(assert (> (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017) 10000))
(assert (=> (>= 10000 x3718) (= (x2363 x3718) 0)))
(assert (x881 x1260))
(assert (not (x1229 (x898 x2268 x2314 x2591 x1124 x3886))))
(assert (x881 x3362))
(assert (< (x1338 64 x2605 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x934 (not x2462)) x388))
(assert (x881 x574))
(assert (x881 x3011))
(assert (x881 x3496))
(assert (x881 x641))
(assert (x881 x185))
(assert (x862 x2855))
(assert (x881 x1094))
(assert (x881 x3355))
(assert (=> (>= 10000 x153) (= 0 (x2363 x153))))
(assert (x881 x3898))
(assert (= 7 (x1451 (x1338 64 x3877 7))))
(assert (x881 x688))
(assert (x881 x3651))
(assert (= (x3658 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) x435))
(assert (x881 x2512))
(assert (x881 x1276))
(assert (not (x1229 (x1338 64 x1697 36))))
(assert (< (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3250 10000) (= 0 (x2363 x3250))))
(assert (x862 x1125))
(assert (not (x1229 (x898 x1001 x733 x3095 x4259 x386))))
(assert (x881 x3894))
(assert (= 64 (x2229 (x1338 64 x61 11))))
(assert (= x1037 (x1415 (x2226 x1241 x1037 x973 x502))))
(assert (=> (>= 10000 x3563) (= (x2363 x3563) 0)))
(assert (=> (>= 10000 x653) (= 0 (x2363 x653))))
(assert (> (x1723 x813 x3579) 10000))
(assert (x881 x470))
(assert (x881 x1448))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)))
(assert (x881 x2167))
(assert (= (x2363 (x1338 64 x39 36)) (x1338 64 x39 36)))
(assert (not (x1229 (x1338 64 x3835 11))))
(assert (= (x2363 (x1338 64 x3573 6)) (x1338 64 x3573 6)))
(assert (= x1001 (x2229 (x2761 x1001 x3563 x1612 x1076 x2444 x840))))
(assert (x881 x3090))
(assert (= (x1723 x2115 x1893) (x2363 (x1723 x2115 x1893))))
(assert (x881 x606))
(assert (= 64 (x2229 (x1338 64 x1697 36))))
(assert (= (x2363 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (= (=> (and (= x3768 x3202) (= x3313 x2886) (= x749 x64) (= x971 x3123) (= x2569 x2711) (= x1829 x1651) (= x1874 x188)) x3447) x2685))
(assert (=> (<= x4019 10000) (= (x2363 x4019) 0)))
(assert (= (and (not x652) x264) x438))
(assert (=> (<= x4128 10000) (= 0 (x2363 x4128))))
(assert (=> (<= x4140 10000) (= (x2363 x4140) 0)))
(assert (=> (<= x4204 10000) (= (x2363 x4204) 0)))
(assert (= (x2363 (+ x1456 1)) (x2363 x1456)))
(assert (= (x1415 (x2226 x569 x1325 x3903 x3355)) x1325))
(assert (= x1968 (x1415 (x1338 x1001 x1968 x365))))
(assert (x881 x704))
(assert (< 10000 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)))
(assert (x881 x3350))
(assert (x881 x1162))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x4268 36)))
(assert (x881 x3919))
(assert (x881 x2031))
(assert (= x696 (or (and x1889 (not x3927)) x4013 (and (not x738) x3731) (and x3985 (not x3551)) (and x852 (not x421)))))
(assert (x881 x2441))
(assert (x1229 1461501637330902918203684832716283019655932542975))
(assert (= (x1338 64 x2541 12) (x2363 (x1338 64 x2541 12))))
(assert (= (x1415 (x1338 x655 x1109 x4109)) x1109))
(assert (=> (>= 10000 x526) (= (x2363 x526) 0)))
(assert (= x2128 (x1415 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (x881 x4198))
(assert (x881 x1515))
(assert (=> (<= x4182 10000) (= 0 (x2363 x4182))))
(assert (= x3224 (x1415 (x1338 64 x3224 10))))
(assert (= (x1451 (x898 x2790 x305 x3753 x3113 x356)) x3753))
(assert (x881 x3946))
(assert (= (x1338 64 1 x3007) (x2363 (x1338 64 1 x3007))))
(assert (= 0 (x2363 310283853)))
(assert (= (=> (= x3816 (+ x1308 292)) x271) x1209))
(assert (x881 x4164))
(assert (=> (>= 10000 x4136) (= 0 (x2363 x4136))))
(assert (= (x3455 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) x3052))
(assert (= 36 (x1451 (x1338 64 x4268 36))))
(assert (x881 x2707))
(assert (not (x1229 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (= (x1338 64 x576 36) (x2363 (x1338 64 x576 36))))
(assert (= (x3658 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284)) x1288))
(assert (= (x3895 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) x3063))
(assert (x1229 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (=> (<= x1698 10000) (= (x2363 x1698) 0)))
(assert (x881 x2531))
(assert (x881 x2110))
(assert (= 12 (x1451 (x1338 64 x2030 12))))
(assert (x881 x3688))
(assert (=> (<= x3955 10000) (= 0 (x2363 x3955))))
(assert (x881 x3969))
(assert (x881 x3693))
(assert (= (x1415 (x1338 x1949 x3815 x290)) x3815))
(assert (= x2918 (x3895 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918))))
(assert (x881 x3484))
(assert (= x3988 (x1207 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (x881 x847))
(assert (=> (<= x3687 10000) (= 0 (x2363 x3687))))
(assert (x881 x2625))
(assert (= (x2363 (x1338 64 1 x3804)) (x1338 64 1 x3804)))
(assert (=> (<= x1697 10000) (= (x2363 x1697) 0)))
(assert (x881 x1358))
(assert (= x71 (x1415 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (x881 x1123))
(assert (=> (>= 10000 x3405) (= 0 (x2363 x3405))))
(assert (x881 x2959))
(assert (x881 x3950))
(assert (x881 x1227))
(assert (x881 x3702))
(assert (x881 x4194))
(assert (= x2221 (and x1899 (not x2629))))
(assert (x881 x480))
(assert (=> (<= x3114 10000) (= 0 (x2363 x3114))))
(assert (= x2675 (=> (and (= (not (> x3648 128)) x4262) (= x1782 (x983 x91)) (= (x1713 (+ 96 x2293)) x91) (= x3919 (x1713 (+ 96 x4251)))) (and x4262 x387))))
(assert (= (or x3266 x719 x3647 x2362 x1524) x1576))
(assert (x881 x540))
(assert (not (x1229 (x1338 64 x1672 1))))
(assert (= x2756 (and x367 x2619)))
(assert (x881 x2483))
(assert (x881 x3170))
(assert (=> (<= x2541 10000) (= 0 (x2363 x2541))))
(assert (= x3951 (x1415 (x1338 64 x3951 7))))
(assert (= (=> (and (= x4034 (not (> x656 32))) (= (x3609 x390) x467)) (and x4034 (=> (= 32 x4056) x3288))) x670))
(assert (=> (<= x1106 10000) (= 0 (x2363 x1106))))
(assert (x881 x3510))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)))
(assert (=> (>= 10000 x705) (= (x2363 x705) 0)))
(assert (x881 x1403))
(assert (= x1971 (and x58 (not x759))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x3866 x1019 x2599)))
(assert (=> (>= 10000 x2002) (= (x2363 x2002) 0)))
(assert (x881 x3854))
(assert (= x4042 (x1451 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (= x2497 (=> (and (= x2121 (< 0 x2217)) (= x3618 (x1713 (+ x275 x1213))) (= x1399 (x988 (- x3618 x2359))) (= x2153 (x1713 (+ 31 x3873))) (= x1062 (x1713 (+ x1291 32))) (= x275 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2153)) (= x3836 (x1713 (+ x3618 32))) (= x2217 (x1340 x1080)) (= (x1713 (+ x3873 x1213)) x2860) (= x3784 (x1713 (+ x1062 32)))) (and (=> (not x2121) x3340) (=> (and (and (= (> x2217 32) x1596) (= (x304 x1004) x1638)) x2121) (and (=> (and x1596 (and (= (x1713 (+ x3836 32)) x685) (= (< 64 x2217) x3813) (= (x221 x650) x303) (= (x1713 (+ 32 x1004)) x650))) (and (=> (and (and (= x3632 (x1713 (+ x3836 64))) (= (x1773 x133) x472) (= (< 96 x2217) x2316) (= x133 (x1713 (+ 64 x1004)))) x3813) (and (=> x2316 x4235) (=> (not x2316) x3340))) (=> (not x3813) x3340))) (=> (not x1596) x3340)))))))
(assert (= x2593 (or x314 x2879)))
(assert (=> (<= x2959 10000) (= 0 (x2363 x2959))))
(assert (= (x2363 x3279) (x2363 (+ x3279 1))))
(assert (x881 x3902))
(assert (x881 x537))
(assert (= x911 (x1451 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642))))
(assert (x881 x2867))
(assert (x881 x2230))
(assert (= x89 (x1415 (x1338 64 x89 6))))
(assert (= (x2363 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)) (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)))
(assert (= (and (not x2316) x1372) x238))
(assert (= (x2164 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)) x3942))
(assert (x881 x1870))
(assert (x881 x1788))
(assert (= x530 (x1451 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (x881 x4195))
(assert (not (x1229 (x2761 x2791 x3954 x4112 x570 x2666 x136))))
(assert (x881 x3540))
(assert (x881 x1512))
(assert (= x1662 (x3658 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (x881 x1958))
(assert (= x598 (x1415 (x898 x655 x598 x3544 x451 x2977))))
(assert (= (x1415 (x1338 64 x2804 10)) x2804))
(assert (=> (<= x31 10000) (= 0 (x2363 x31))))
(assert (= (and (not x4208) x4157) x2026))
(assert (x881 x2836))
(assert (x881 x994))
(assert (not (x1229 (x2761 x2790 x2028 x92 x3705 x1183 x2991))))
(assert (> (x1338 64 x3525 100) 10000))
(assert (x881 x2068))
(assert (x881 x2514))
(assert (< 10000 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353)))
(assert (x881 x1853))
(assert (=> (<= x4287 10000) (= 0 (x2363 x4287))))
(assert (= (and (not x3293) x583) x698))
(assert (x881 x3424))
(assert (= 4 (x1451 (x1338 64 x4140 4))))
(assert (x881 x4038))
(assert (=> (<= x553 10000) (= (x2363 x553) 0)))
(assert (=> (<= x3017 10000) (= 0 (x2363 x3017))))
(assert (= 64 (x2229 (x1338 64 x3877 3))))
(assert (> (x898 x2268 x2314 x2591 x1124 x3886) 10000))
(assert (=> (>= 10000 x3344) (= 0 (x2363 x3344))))
(assert (= (x2229 (x1338 64 x3951 3)) 64))
(assert (= (x1415 (x1338 x813 x3309 x640)) x3309))
(assert (= (x2226 x1241 x1037 x973 x502) (x2363 (x2226 x1241 x1037 x973 x502))))
(assert (= x905 x1236))
(assert (x881 x1130))
(assert (= (or x2061 x2818) x3700))
(assert (x881 x415))
(assert (=> (>= 10000 x1550) (= 0 (x2363 x1550))))
(assert (= (x2363 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)) (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)))
(assert (x881 x1815))
(assert (> (x2226 x228 x2933 x4131 x540) 10000))
(assert (x881 x2372))
(assert (x881 x2860))
(assert (= (x1451 (x2761 x1001 x3563 x1612 x1076 x2444 x840)) x1612))
(assert (x881 x2134))
(assert (x881 x1968))
(assert (x881 x4042))
(assert (= (x2229 (x1338 64 x116 7)) 64))
(assert (x881 x4267))
(assert (x881 x3410))
(assert (=> (<= x951 10000) (= (x2363 x951) 0)))
(assert (x881 x3161))
(assert (x881 x1320))
(assert (x881 x3506))
(assert (= x3542 (or x1026 x3736)))
(assert (x881 x814))
(assert (= 0 (x2363 65535)))
(assert (= (=> (and (and (= x4014 (= x1370 0)) (= x3975 (x1427 x1646)) (<= x4140 65535) (= (x1338 64 x4140 4) x3804) (= (x1338 64 1 x3804) x385) (= x1646 (x1338 64 x4179 11)) (= x3975 2) (= x1528 (x1736 x385))) (or (and (not x4014) (and (= x2894 x1370) (not (< x1370 x1528)))) (and (= x2894 x1528) x4014))) x260) x2815))
(assert (x881 x3523))
(assert (= (x2229 (x1723 x228 x3679)) x228))
(assert (> (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849) 10000))
(assert (x881 x1157))
(assert (= x545 (x2164 (x2761 x813 x3237 x1152 x545 x1582 x3085))))
(assert (x320 x2867))
(assert (= (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353) (x2363 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (= (and x2686 (not x4275)) x2413))
(assert (= (x2363 (x1338 64 x1697 36)) (x1338 64 x1697 36)))
(assert (x881 x1419))
(assert (x881 x1572))
(assert (x881 x1211))
(assert (x862 x2153))
(assert (x881 x4102))
(assert (x881 x2802))
(assert (x881 x709))
(assert (=> (<= x2605 10000) (= (x2363 x2605) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x59 x1031 x2759)))
(assert (= (x3658 (x2761 x3829 x2510 x1242 x495 x938 x3561)) x938))
(assert (not (x1229 (x1723 32 104))))
(assert (x881 x1660))
(assert (x881 x3078))
(assert (x881 x1845))
(assert (=> (>= 10000 x3793) (= (x2363 x3793) 0)))
(assert (x881 x2142))
(assert (=> (<= x4093 10000) (= (x2363 x4093) 0)))
(assert (=> (<= x4292 10000) (= 0 (x2363 x4292))))
(assert (= x89 (x1415 (x1338 64 x89 2))))
(assert (=> (>= 10000 x3488) (= 0 (x2363 x3488))))
(assert (x881 x504))
(assert (x881 x2237))
(assert (x881 x495))
(assert (x881 x3048))
(assert (x881 x2873))
(assert (x881 x3326))
(assert (x881 x1085))
(assert (x881 x3962))
(assert (x881 x2801))
(assert (x881 x1508))
(assert (x862 x772))
(assert (x881 x1364))
(assert (= x69 (and (not x4125) x768)))
(assert (x881 x2827))
(assert (x881 x467))
(assert (= x1177 (and (not x3892) x1971)))
(assert (< 10000 (x1338 64 x3877 7)))
(assert (x881 x3353))
(assert (x881 x3250))
(assert (= x1112 (and (not x3964) x2476)))
(assert (= (x2363 x4258) (x2363 (+ x4258 1))))
(assert (not (x1229 (x1338 x2790 x695 x2651))))
(assert (= x733 (x1415 (x898 x1001 x733 x3095 x4259 x386))))
(assert (x881 x2383))
(assert (=> (>= 10000 x640) (= (x2363 x640) 0)))
(assert (= (x2229 (x2761 x59 x1512 x806 x1358 x3031 x835)) x59))
(assert (x1735 x1868))
(assert (= (x2363 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)))
(assert (x881 x1709))
(assert (= (x1451 (x2761 x3829 x2510 x1242 x495 x938 x3561)) x1242))
(assert (x881 x2909))
(assert (x881 x3956))
(assert (x881 x3141))
(assert (x881 x1641))
(assert (x881 x451))
(assert (=> (<= x3944 10000) (= (x2363 x3944) 0)))
(assert (x881 x2807))
(assert (x881 x2236))
(assert (x881 x3511))
(assert (= (=> (and (= x928 x1428) (= x1049 x2789) (= x2957 x4097) (= x1160 x3185) (= x777 x1952) (= x1327 x4163) (= x2453 x2618) (= x77 x678) (= x199 x765) (= x778 x2136) (= x2774 x448) (= x1983 x790) (= x4086 x1210)) x434) x3262))
(assert (= (x2164 (x2226 x1001 x3416 x153 x2807)) x2807))
(assert (x881 x2847))
(assert (x3043 x2855))
(assert (> (x1338 64 x3465 10) 10000))
(assert (x881 x420))
(assert (=> (>= 10000 x4037) (= (x2363 x4037) 0)))
(assert (= x3352 (and x2462 x934)))
(assert (= x833 (or x2335 x637)))
(assert (x881 x2196))
(assert (= (x3455 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) x3321))
(assert (x881 x3547))
(assert (x881 x2757))
(assert (x881 x3838))
(assert (= x214 (x1415 (x1338 64 x214 36))))
(assert (= 64 (x2229 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (>= 32 x228) x2035 (ite (<= x228 64) x190 (ite (>= 96 x228) x2681 (ite (>= 128 x228) x1341 (ite (<= x228 160) x1799 (ite (<= x228 192) x2809 (ite (>= 224 x228) x171 x2180))))))))))))
(assert (= x905 (=> (and (= x3685 x2177) (= x3205 x3854) (= x4140 x1130) (= x457 x1510) (= x629 x1445) (= x2176 x246) (= x773 x1414) (= x1303 x1927) (= x2952 x280) (= x1314 x1306) (= x1145 x202) (= x1429 x1137) (= x4150 x3060)) x1208)))
(assert (x881 x3934))
(assert (x881 x1047))
(assert (= (and x1412 (not x3278)) x3430))
(assert (x881 x2546))
(assert (x881 x3823))
(assert (= x933 (and x1990 x2559)))
(assert (= x4140 (x1415 (x1338 64 x4140 3))))
(assert (= x3448 (and x2943 (not x339))))
(assert (x881 x1729))
(assert (= (=> (= x3771 (not (< 128 x2342))) (and x3771 x1397)) x3650))
(assert (not (x1229 (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (>= 32 x3866) x3118 (ite (<= x3866 64) x3834 (ite (>= 96 x3866) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (<= x3866 192) x3968 (ite (<= x3866 224) x3746 x4290))))))))))))
(assert (= (x2363 x2258) (x2363 (+ x2258 2))))
(assert (x881 x91))
(assert (= (x2363 (x1338 64 x4140 3)) (x1338 64 x4140 3)))
(assert (x881 x3915))
(assert (x881 x1388))
(assert (x881 x2887))
(assert (=> (>= 10000 x1623) (= (x2363 x1623) 0)))
(assert (=> (>= 10000 x1076) (= (x2363 x1076) 0)))
(assert (< 10000 (x2761 x1001 x3563 x1612 x1076 x2444 x840)))
(assert (x881 x931))
(assert (=> (>= 10000 x1588) (= (x2363 x1588) 0)))
(assert (x881 x1443))
(assert (x881 x1985))
(assert (x881 x3877))
(assert (= (or x3124 x1629) x2432))
(assert (= (x1451 (x1338 64 x2804 10)) 10))
(assert (x862 x168))
(assert (x881 x3039))
(assert (= x569 (x2229 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344))))
(assert (x881 x1296))
(assert (= (x3895 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x642))
(assert (= x3903 (x1451 (x2226 x569 x1325 x3903 x3355))))
(assert (=> (>= 10000 x3139) (= 0 (x2363 x3139))))
(assert (x881 x2613))
(assert (= (x1415 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (>= 32 x228) x2035 (ite (>= 64 x228) x190 (ite (<= x228 96) x2681 (ite (>= 128 x228) x1341 (ite (<= x228 160) x1799 (ite (<= x228 192) x2809 (ite (>= 224 x228) x171 x2180)))))))))) x3878))
(assert (x3043 x79))
(assert (x881 x3563))
(assert (= x3937 (and x292 x4054)))
(assert (= x1224 (=> (and (= (not (> x886 128)) x1545) (= x4211 (x2015 x165)) (= x165 (x1713 (+ x559 96))) (= x4172 (x1713 (+ 96 x3429)))) (and x1545 x2961))))
(assert (= (and (not x1150) x1069) x2879))
(assert (x881 x3878))
(assert (x881 x1109))
(assert (x881 x2228))
(assert (= x2791 (x2229 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (< (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x1240))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (= (x2229 (x1338 64 x288 10)) 64))
(assert (x881 x2924))
(assert (x881 x2474))
(assert (= x59 (x2229 (x2226 x59 x561 x198 x4009))))
(assert (= (and (not x1073) x897) x3505))
(assert (x881 x4011))
(assert (x881 x1920))
(assert (x881 x3788))
(assert (x881 x1374))
(assert (= (and x3590 x3859) x3481))
(assert (x881 x650))
(assert (x881 x444))
(assert (x881 x113))
(assert (= x3799 (and x3259 x3300)))
(assert (= x585 x3411))
(assert (= x2870 (and x2384 x3585)))
(assert (< 10000 (x2226 x1712 x1290 x250 x2069)))
(assert (= (x1415 (x1723 x1949 x3538)) x3538))
(assert (= (=> (and (= x3673 (x3970 128)) (= x2657 x1280) (= x4203 160) (not (< x1280 x3673))) x4226) x2996))
(assert (x881 x3182))
(assert (x881 x3816))
(assert (x881 x1567))
(assert (=> (<= x1084 10000) (= (x2363 x1084) 0)))
(assert (> (x2761 x1712 x3175 x1121 x3013 x125 x980) 10000))
(assert (= x2727 (or x3258 x1890 x1046 x3371 x2358)))
(assert (x881 x3465))
(assert (x881 x3579))
(assert (x881 x4196))
(assert (= x1712 (x2229 (x898 x1712 x1939 x3944 x1914 x954))))
(assert (x881 x1795))
(assert (x881 x3537))
(assert (=> (<= x2128 10000) (= 0 (x2363 x2128))))
(assert (x881 x1969))
(assert (= (x1415 (x1338 64 x3297 36)) x3297))
(assert (x881 x3515))
(assert (= 0 (x2363 29244376827073035548771643948814531551534385112760475998805679327281764368384)))
(assert (= (x2229 (x2226 x2268 x526 x4292 x1748)) x2268))
(assert (=> (<= x2531 10000) (= 0 (x2363 x2531))))
(assert (x881 x3056))
(assert (x881 x2688))
(assert (not (x1229 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (=> (>= 10000 x894) (= (x2363 x894) 0)))
(assert (x881 x2272))
(assert (= (x2229 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)) x3829))
(assert (x881 x2932))
(assert (= x2641 (x3658 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569))))
(assert (> (x1338 x1712 x1433 x2126) 10000))
(assert (= (and x3909 x3937) x3585))
(assert (x881 x3399))
(assert (x881 x554))
(assert (= (x1415 (x1338 64 x3573 6)) x3573))
(assert (x881 x3983))
(assert (not (x1229 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (x881 x3955))
(assert (=> (<= x954 10000) (= 0 (x2363 x954))))
(assert (< 10000 (x2226 x2268 x526 x4292 x1748)))
(assert (x881 x1352))
(assert (x881 x1917))
(assert (= x1704 (and x4029 (not x3553))))
(assert (= (=> (and (= x2615 (not (> x306 128))) (= (x1116 x2131) x123) (= x2131 (x1713 (+ x559 96))) (= x2486 (x1713 (+ x2007 96)))) (and x437 x2615)) x567))
(assert (= (x2229 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)) x2268))
(assert (= (x3455 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) x4238))
(assert (not (x1229 (x898 x1712 x1939 x3944 x1914 x954))))
(assert (x881 x44))
(assert (x1229 1000000000))
(assert (x881 x3509))
(assert (x881 x3938))
(assert (= x3662 (or x1246 x560)))
(assert (=> (<= x4247 10000) (= 0 (x2363 x4247))))
(assert (=> (>= 10000 x1961) (= 0 (x2363 x1961))))
(assert (= (x3455 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) x894))
(assert (x881 x2415))
(assert (x881 x876))
(assert (not (x1229 (x2226 x3829 x2706 x3083 x2302))))
(assert (= (x2226 x1001 x3416 x153 x2807) (x2363 (x2226 x1001 x3416 x153 x2807))))
(assert (x881 x2400))
(assert (x881 x2717))
(assert (= x3085 (x3455 (x2761 x813 x3237 x1152 x545 x1582 x3085))))
(assert (x881 x3207))
(assert (x881 x536))
(assert (=> (>= 10000 x2383) (= (x2363 x2383) 0)))
(assert (x881 x199))
(assert (x881 x1423))
(assert (x881 x1154))
(assert (x881 x1167))
(assert (=> (>= 10000 x2069) (= (x2363 x2069) 0)))
(assert (x881 x3222))
(assert (x881 x1528))
(assert (x881 x2377))
(assert (= (x1723 x1712 x1961) (x2363 (x1723 x1712 x1961))))
(assert (= x2599 (x1451 (x1338 x3866 x1019 x2599))))
(assert (= (x2229 (x898 x2115 x1500 x3170 x3008 x158)) x2115))
(assert (x881 x1847))
(assert (x881 x3468))
(assert (=> (>= 10000 x1325) (= (x2363 x1325) 0)))
(assert (not (x1229 (x1723 32 x3336))))
(assert (x881 x1748))
(assert (x881 x2725))
(assert (x1229 1313998243))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (< 10000 (x898 x1949 x2071 x530 x3208 x3405)))
(assert (=> (<= x250 10000) (= (x2363 x250) 0)))
(assert (= x2537 (and (not x2992) x1279)))
(assert (= (or x2580 x4068 x2041) x1529))
(assert (=> (<= x3224 10000) (= 0 (x2363 x3224))))
(assert (= (and x4121 (not x615)) x2743))
(assert (x881 x2729))
(assert (< 10000 (x1338 64 x4268 36)))
(assert (= 36 (x1451 (x1338 64 x2197 36))))
(assert (= (x1451 (x2761 x655 x4280 x3527 x4136 x737 x3646)) x3527))
(assert (= (and x1289 (not x990)) x4046))
(assert (< 10000 (x2226 x1241 x1037 x973 x502)))
(assert (x881 x2853))
(assert (> (x1338 x228 x2937 x203) 10000))
(assert (x881 x4147))
(assert (x881 x1469))
(assert (= (and (not x3643) x134) x2334))
(assert (= x2865 (x1451 (x4162 x569 x3001 x2865 x3178 x870 x452 x606))))
(assert (x881 x3618))
(assert (=> (>= 10000 x3408) (= 0 (x2363 x3408))))
(assert (x881 x3525))
(assert (x881 x3237))
(assert (= x813 (x2229 (x1338 x813 x3309 x640))))
(assert (=> (>= 10000 x3525) (= (x2363 x3525) 0)))
(assert (x881 x797))
(assert (=> (>= 10000 x2524) (= 0 (x2363 x2524))))
(assert (= 64 (x2229 (x1338 64 x4019 (ite (= 0 x2790) x3808 (ite (>= 32 x2790) x2788 (ite (>= 64 x2790) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (>= 160 x2790) x94 (ite (>= 192 x2790) x3483 (ite (<= x2790 224) x644 x3114))))))))))))
(assert (= (x2164 (x2226 x59 x561 x198 x4009)) x4009))
(assert (< (x1338 64 x3297 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2894))
(assert (= x677 (x3658 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (x881 x1808))
(assert (= (x2229 (x2226 x1712 x1290 x250 x2069)) x1712))
(assert (x1517 x3415))
(assert (x881 x1679))
(assert (= (x1451 (x898 x813 x3017 x1180 x2298 x244)) x1180))
(assert (x1229 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (or x253 x1681) x2433))
(assert (= (or x3976 x2219 x3586 x3275 x238) x1632))
(assert (not x3051))
(assert (= (x2363 x1800) (x2363 (+ x1800 1))))
(assert (=> (<= x3031 10000) (= 0 (x2363 x3031))))
(assert (x881 x3063))
(assert (x881 x992))
(assert (x881 x4086))
(assert (x881 x2978))
(assert (not (x1229 (x1723 x655 x626))))
(assert (= (x2164 (x2761 x2268 x518 x1132 x951 x3129 x2757)) x951))
(assert (=> (>= 10000 x4017) (= 0 (x2363 x4017))))
(assert (= x191 (and (not x3907) x2072)))
(assert (= (x1451 (x1338 64 x89 6)) 6))
(assert (x881 x1744))
(assert (x881 x771))
(assert (= x3948 (x2164 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (x881 x1261))
(assert (=> (<= x1152 10000) (= (x2363 x1152) 0)))
(assert (x881 x678))
(assert (x881 x1724))
(assert (> (x1723 x1949 x3538) 10000))
(assert (x881 x3247))
(assert (x881 x2693))
(assert (=> (>= 10000 x590) (= 0 (x2363 x590))))
(assert (= 0 (x1451 (x1338 64 x2605 0))))
(assert (x881 x966))
(assert (= x3284 (x3895 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (= (x2229 (x2761 x228 x565 x1946 x2505 x3139 x2202)) x228))
(assert (not (x1229 (x1338 64 x4140 3))))
(assert (x881 x2518))
(assert (x881 x593))
(assert (x881 x215))
(assert (x881 x4150))
(assert (x881 x266))
(assert (x881 x2231))
(assert (x881 x1084))
(assert (x881 x1680))
(assert (x881 x4193))
(assert (= (x1451 (x1338 64 x61 11)) 11))
(assert (=> (>= 10000 x3059) (= 0 (x2363 x3059))))
(assert (x881 x1337))
(assert (=> (<= x3686 10000) (= (x2363 x3686) 0)))
(assert (< (x2761 x1241 x889 x3842 x4212 x3890 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x1710))
(assert (x881 x3597))
(assert (= 64 (x2229 (x1338 64 x1070 6))))
(assert (= 64 (x2229 (x1338 64 x89 2))))
(assert (= x3918 (=> (and (= x3620 (<= x1949 224)) (= (x3146 128) x1949)) (and (=> (and (= (x3146 160) x2071) (= (x3146 192) x2446) (= x3405 (x3146 256)) (= (x3146 192) x2308) (= x4238 (x3146 288)) (= (x3146 160) x2524) (= (ite (= x1949 0) x2459 (ite (>= 32 x1949) x1581 (ite (<= x1949 64) x3413 (ite (>= 96 x1949) x1333 (ite (>= 128 x1949) x2429 (ite (>= 160 x1949) x3065 (ite (<= x1949 192) x984 (ite (>= 224 x1949) x1821 x2495)))))))) x646) (= (x3146 288) x1495) (= x3121 (x3146 160)) (= (x3146 224) x1084) (= x1581 (x1723 x1949 x3538)) (= x739 (<= x2268 224)) (= (x3146 160) x3815) (= x3413 (x1338 x1949 x3815 x290)) (= (x3146 224) x604) (= x984 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) (= x2459 (x1192 0)) (= x4017 (x3146 352)) (= (x3146 192) x530) (= x2014 (x3146 160)) (= (x2226 x1949 x3121 x2734 x1084) x1333) (= x1996 (x3146 224)) (= (x3146 288) x2076) (= (x3146 256) x1724) (= x298 (x3146 320)) (= (x898 x1949 x2071 x530 x3208 x3405) x2429) (= x3538 (x3146 160)) (= x2858 (x3146 256)) (= (x3146 160) x3718) (= x4291 (x3146 224)) (= (x3146 256) x2975) (= x1821 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) (= (x1713 (+ x2268 x3690)) x2341) (= x290 (x3146 192)) (= x144 (x3146 320)) (= (x3146 192) x2830) (= x2734 (x3146 192)) (= x3065 (x2761 x1949 x2524 x2830 x1996 x1724 x1495)) (= (x3146 224) x3208)) (and x739 (=> (and (= x951 (x4006 x1452)) (= (x1713 (+ x3690 128)) x770) (= (x898 x2268 x2314 x2591 x1124 x3886) x2751) (= (x1713 (+ x3690 192)) x1360) (= (x4006 x3690) x3345) (= x2397 (x1338 x2268 x3761 x590)) (= x675 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) (= x3886 (x4006 x875)) (= x3425 (x1713 (+ 32 x3690))) (= (x1713 (+ 160 x3690)) x1156) (= x2385 (x4006 x3690)) (= (x1713 (+ 128 x3690)) x3599) (= x259 (x1713 (+ x3690 96))) (= x3129 (x4006 x259)) (= (x4006 x3418) x3955) (= x1919 (x1713 (+ x3690 160))) (= x526 (x4006 x3690)) (= (x1713 (+ x3690 128)) x596) (= x646 x245) (= (x4006 x596) x2757) (= (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816) x1708) (= (x4006 x3690) x518) (= (x4006 x3690) x3761) (= (x1713 (+ x3690 32)) x3444) (= (x1713 (+ x3690 64)) x3589) (= (x1713 (+ 32 x3690)) x1590) (= x1132 (x4006 x3444)) (= x2542 (x4006 x3589)) (= (x1713 (+ x3690 64)) x1593) (= x4052 (x2761 x2268 x518 x1132 x951 x3129 x2757)) (= x88 (x1713 (+ x3690 32))) (= (x4006 x603) x2473) (= x4081 (x1723 x2268 x3345)) (= x2715 (x1713 (+ 96 x3690))) (= x3063 (x4006 x1360)) (= (x1713 (+ 32 x3690)) x2491) (= x245 (ite (= 0 x2268) x3005 (ite (<= x2268 32) x4081 (ite (<= x2268 64) x2397 (ite (>= 96 x2268) x3218 (ite (>= 128 x2268) x2751 (ite (<= x2268 160) x4052 (ite (>= 192 x2268) x1708 (ite (<= x2268 224) x675 x73))))))))) (= (x1192 0) x3005) (= x3218 (x2226 x2268 x526 x4292 x1748)) (= x3521 (x4006 x770)) (= (x4006 x3425) x4292) (= x2017 (x4006 x1919)) (= (x1713 (+ x3690 96)) x875) (= (x4006 x1025) x3942) (= (x4006 x1593) x1124) (= x887 (x4006 x2715)) (= x3418 (x1713 (+ x3690 32))) (= (x1713 (+ 64 x3690)) x1025) (= (x4006 x3599) x3002) (= (x4006 x88) x2054) (= (x4006 x1156) x1816) (= x1452 (x1713 (+ x3690 64))) (= x1748 (x4006 x2122)) (= (x4006 x1590) x590) (= x2122 (x1713 (+ 64 x3690))) (= x603 (x1713 (+ 96 x3690))) (= x2314 (x4006 x3690)) (= (x4006 x2491) x2591) (= x3864 (x4006 x3690))) x614))) x3620))))
(assert (x881 x123))
(assert (= 64 (x2229 (x1338 64 x39 2))))
(assert (x881 x1195))
(assert (x881 x625))
(assert (=> (<= x1968 10000) (= (x2363 x1968) 0)))
(assert (x881 x1882))
(assert (= 64 (x2229 (x1338 64 x1573 12))))
(assert (x881 x627))
(assert (x881 x4136))
(assert (= (x1451 (x898 x59 x4037 x1091 x577 x26)) x1091))
(assert (= (x2363 (x1338 64 x1714 12)) (x1338 64 x1714 12)))
(assert (not (x1229 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (x881 x781))
(assert (= x2072 (and x3703 x681)))
(assert (x881 x2315))
(assert (= x4019 (x1415 (x1338 64 x4019 (ite (= 0 x2790) x3808 (ite (<= x2790 32) x2788 (ite (>= 64 x2790) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (<= x2790 160) x94 (ite (>= 192 x2790) x3483 (ite (<= x2790 224) x644 x3114))))))))))))
(assert (x881 x2239))
(assert (x881 x3593))
(assert (x881 x1691))
(assert (= x3371 (and x383 (not x2073))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x2268 x518 x1132 x951 x3129 x2757)))
(assert (= (and x897 x1073) x2119))
(assert (=> (>= 10000 x3063) (= (x2363 x3063) 0)))
(assert (=> (>= 10000 x2126) (= 0 (x2363 x2126))))
(assert (= (x2229 (x1723 x1241 x1326)) x1241))
(assert (x881 x1626))
(assert (x881 x2077))
(assert (< (x1338 64 x3835 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2385 (x1415 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063))))
(assert (=> (>= 10000 x2291) (= 0 (x2363 x2291))))
(assert (x881 x1768))
(assert (= x628 (x1415 (x1338 64 x628 11))))
(assert (x881 x384))
(assert (x881 x4128))
(assert (=> (<= x1573 10000) (= (x2363 x1573) 0)))
(assert (=> (>= 10000 x1241) (= 0 (x2363 x1241))))
(assert (x881 x1174))
(assert (x881 x3851))
(assert (x881 x3029))
(assert (x881 x1885))
(assert (x881 x144))
(assert (=> (>= 10000 x2937) (= (x2363 x2937) 0)))
(assert (=> (>= 10000 x569) (= 0 (x2363 x569))))
(assert (x881 x3299))
(assert (= x1992 (and x2549 (not x4285))))
(assert (=> (<= x899 10000) (= (x2363 x899) 0)))
(assert (x881 x2697))
(assert (x881 x4099))
(assert (=> (<= x3914 10000) (= 0 (x2363 x3914))))
(assert (= (x2164 (x898 x1241 x2959 x2355 x1515 x2531)) x1515))
(assert (x881 x778))
(assert (= (x898 x228 x1188 x2250 x3241 x3801) (x2363 (x898 x228 x1188 x2250 x3241 x3801))))
(assert (= (x2761 x2268 x518 x1132 x951 x3129 x2757) (x2363 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x2268 x3345)))
(assert (< 10000 (x1338 64 x3951 7)))
(assert (=> (<= x1511 10000) (= (x2363 x1511) 0)))
(assert (x881 x3645))
(assert (x881 x321))
(assert (= 0 (x2363 97822624453686575479804928673988797637476738513438931194560248106084831592448)))
(assert (=> (<= x1449 10000) (= 0 (x2363 x1449))))
(assert (x881 x2612))
(assert (= x1188 (x1415 (x898 x228 x1188 x2250 x3241 x3801))))
(assert (=> (<= x3280 10000) (= 0 (x2363 x3280))))
(assert (x881 x194))
(assert (= (x1338 x3829 x2196 x2795) (x2363 (x1338 x3829 x2196 x2795))))
(assert (x881 x2927))
(assert (x881 x3365))
(assert (= (x1338 64 x214 36) (x2363 (x1338 64 x214 36))))
(assert (= (x2229 (x1192 0)) 0))
(assert (= (x1338 64 x4198 36) (x2363 (x1338 64 x4198 36))))
(assert (x881 x3994))
(assert (x881 x4172))
(assert (x862 x3592))
(assert (x881 x2486))
(assert (= (=> (and (= (<= x1712 224) x3347) (= (x895 x1080) x1712)) (and (=> (and (= x954 (x895 x891)) (= x1290 (x895 x1004)) (= x997 (x895 x1004)) (= (x1713 (+ x1004 64)) x1884) (= x3151 (x895 x2828)) (= x480 (x1713 (+ x1004 64))) (= (x1713 (+ x1004 128)) x2828) (= (x895 x480) x1914) (= (x1713 (+ x1004 128)) x2175) (= (x895 x2175) x3217) (= (x895 x1004) x1939) (= x3024 (x1713 (+ 96 x1004))) (= x736 (ite (= 0 x1712) x1269 (ite (>= 32 x1712) x1674 (ite (<= x1712 64) x3028 (ite (>= 96 x1712) x2895 (ite (>= 128 x1712) x2878 (ite (<= x1712 160) x3162 (ite (<= x1712 192) x1875 (ite (<= x1712 224) x1126 x2388))))))))) (= x3028 (x1338 x1712 x1433 x2126)) (= (x895 x3270) x125) (= x2011 (x1713 (+ 96 x1004))) (= x3270 (x1713 (+ 96 x1004))) (= (x895 x2240) x3353) (= x1674 (x1723 x1712 x1961)) (= (x895 x2577) x911) (= (x1713 (+ 192 x1004)) x2050) (= (x1713 (+ x1004 64)) x1561) (= x2340 (x1713 (+ 32 x1004))) (= (x895 x2340) x1121) (= x4282 (x895 x4196)) (= (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642) x1126) (= x2126 (x895 x2105)) (= x2878 (x898 x1712 x1939 x3944 x1914 x954)) (= x3367 (x1713 (+ 64 x1004))) (= x1875 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353)) (= x31 (x895 x1666)) (= x3175 (x895 x1004)) (= (x1338 64 x3877 7) x3742) (= x1269 (x1192 0)) (= x2577 (x1713 (+ x1004 32))) (= (x895 x2488) x250) (= (x1713 (+ x1004 160)) x1666) (= (x895 x1004) x2753) (= (x1713 (+ x1004 32)) x2105) (= (x895 x3024) x1882) (= (x895 x1561) x3013) (= (x895 x353) x980) (= (x1713 (+ 128 x1004)) x353) (= (x1713 (+ x1004 64)) x4196) (= (x895 x4083) x3944) (= x1662 (x895 x2011)) (= (x1713 (+ 96 x1004)) x891) (= x2895 (x2226 x1712 x1290 x250 x2069)) (= x642 (x895 x2050)) (= (> x581 0) x3892) (= x1193 (x1713 (+ 32 x1004))) (= x2240 (x1713 (+ x1004 160))) (= (x895 x3367) x705) (= x581 (x895 x825)) (= x4083 (x1713 (+ x1004 32))) (= x3162 (x2761 x1712 x3175 x1121 x3013 x125 x980)) (= x3368 (x895 x1193)) (= x2069 (x895 x1884)) (= (x1713 (+ x1004 32)) x2488) (= x1433 (x895 x1004)) (= x1961 (x895 x1004))) (and (=> (and x3892 (and (= x991 (x895 x296)) (= (> x581 32) x102))) (and (=> (and x102 (and (= (> x581 64) x3101) (= (x1713 (+ x3369 32)) x20) (= x2230 (x2738 x1483)) (= x1483 (x1713 (+ 32 x296))))) (and (=> (not x3101) x3667) (=> (and (and (= (< 96 x581) x1846) (= x3490 (x4 x2461)) (= (x1713 (+ 64 x296)) x2461) (= (x1713 (+ x3369 64)) x587)) x3101) (and (=> x1846 x1625) (=> (not x1846) x3667))))) (=> (not x102) x3667))) (=> (not x3892) x3667))) x3347)) x2081))
(assert (< (x1723 x1001 x3828) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2229 (x1723 x2791 x2171)) x2791))
(assert (x881 x1851))
(assert (= 64 (x2229 (x1338 64 x628 11))))
(assert (x881 x374))
(assert (x881 x2653))
(assert (x881 x55))
(assert (x881 x621))
(assert (=> (<= x3013 10000) (= (x2363 x3013) 0)))
(assert (= x2883 (and x933 (not x1324))))
(assert (= (x2164 (x898 x1712 x1939 x3944 x1914 x954)) x1914))
(assert (=> (<= x2944 10000) (= 0 (x2363 x2944))))
(assert (= x3258 (and x3330 x13)))
(assert (x881 x2702))
(assert (= (x898 x1712 x1939 x3944 x1914 x954) (x2363 (x898 x1712 x1939 x3944 x1914 x954))))
(assert (< (x1338 64 x3951 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2125))
(assert (x881 x1049))
(assert (x881 x1400))
(assert (= (x2363 (x1338 64 x4268 36)) (x1338 64 x4268 36)))
(assert (x881 x4236))
(assert (x881 x1057))
(assert (= x2791 (x2229 (x2226 x2791 x2936 x2539 x1767))))
(assert (x862 x4173))
(assert (= x737 (x3658 (x2761 x655 x4280 x3527 x4136 x737 x3646))))
(assert (= x124 (and (not x3421) x3716)))
(assert (x881 x2313))
(assert (=> (>= 10000 x3394) (= (x2363 x3394) 0)))
(assert (= (or x2593 x1493) x4272))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x881 x3284))
(assert (= x59 (x2229 (x1723 x59 x4093))))
(assert (x881 x3539))
(assert (x881 x4019))
(assert (=> (<= x1515 10000) (= 0 (x2363 x1515))))
(assert (= (and x4294 x3819) x3862))
(assert (x881 x2716))
(assert (=> (>= 10000 x737) (= (x2363 x737) 0)))
(assert (x881 x89))
(assert (x881 x2535))
(assert (x881 x489))
(assert (x881 x3386))
(assert (x881 x1842))
(assert (= (x2363 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383)) (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383)))
(assert (= x3095 (x1451 (x898 x1001 x733 x3095 x4259 x386))))
(assert (x881 x4037))
(assert (x881 x3706))
(assert (x1229 3672334990))
(assert (x881 x2682))
(assert (x881 x3406))
(assert (x881 x3939))
(assert (= x1227 (x3455 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (= (x1207 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x3410))
(assert (=> (>= 10000 x240) (= (x2363 x240) 0)))
(assert (= (x1451 (x1338 64 x628 11)) 11))
(assert (x881 x4016))
(assert (> (x1723 x1001 x3828) 10000))
(assert (x881 x1991))
(assert (x881 x3482))
(assert (= (x2363 (+ x1763 1)) (x2363 x1763)))
(assert (x881 x894))
(assert (= (x1207 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284)) x3375))
(assert (=> (>= 10000 x2302) (= 0 (x2363 x2302))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x2115 x1893)))
(assert (not (x1229 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017))))
(assert (x881 x2455))
(assert (= x2791 (x2229 (x1338 x2791 x3277 x3682))))
(assert (x881 x3567))
(assert (= (and x93 x2325) x1688))
(assert (x881 x715))
(assert (= (x1415 (x1338 x3829 x2196 x2795)) x2196))
(assert (x881 x2192))
(assert (x881 x258))
(assert (x881 x3338))
(assert (x881 x4212))
(assert (x881 x2742))
(assert (x881 x1331))
(assert (x881 x2503))
(assert (= x4198 (x1415 (x1338 64 x4198 36))))
(assert (x881 x3653))
(assert (= (x1415 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953)) x1008))
(assert (=> (>= 10000 x2650) (= 0 (x2363 x2650))))
(assert (x1229 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (x881 x1201))
(assert (x881 x4255))
(assert (= (x2363 3672334990) 0))
(assert (x881 x206))
(assert (x881 x1705))
(assert (x881 x1158))
(assert (x881 x655))
(assert (x881 x1982))
(assert (x881 x2524))
(assert (x881 x2306))
(assert (x881 x1643))
(assert (x881 x1913))
(assert (= (x3658 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)) x1620))
(assert (= x717 (x1451 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (x881 x485))
(assert (x881 x4083))
(assert (= (x3658 (x2761 x569 x2941 x4042 x1530 x2381 x2535)) x2381))
(assert (x881 x3914))
(assert (= (x2363 (x1338 64 x89 6)) (x1338 64 x89 6)))
(assert (x881 x2447))
(assert (x881 x2545))
(assert (=> (>= 10000 x1124) (= 0 (x2363 x1124))))
(assert (= (x2363 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)) (x4162 x569 x3001 x2865 x3178 x870 x452 x606)))
(assert (x881 x2502))
(assert (x881 x1011))
(assert (x881 x135))
(assert (< (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1450 x4051) x3590))
(assert (x881 x146))
(assert (x881 x2876))
(assert (= (x2363 (+ x14 1)) (x2363 x14)))
(assert (= (and x383 x2073) x987))
(assert (=> (<= x2651 10000) (= (x2363 x2651) 0)))
(assert (not (x1229 (x2226 x2268 x526 x4292 x1748))))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x881 x3632))
(assert (x881 x2971))
(assert (x881 x1133))
(assert (= x4212 (x2164 (x2761 x1241 x889 x3842 x4212 x3890 x1143))))
(assert (x862 x4114))
(assert (x881 x867))
(assert (x881 x3010))
(assert (x881 x4003))
(assert (= (and x3929 x3796) x2818))
(assert (= (x2363 (x1723 x655 x626)) (x1723 x655 x626)))
(assert (x881 x2478))
(assert (x881 x1030))
(assert (x881 x2022))
(assert (x881 x1914))
(assert (x881 x73))
(assert (= x2115 (x2229 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (> (x1338 x813 x3309 x640) 10000))
(assert (x881 x2564))
(assert (x881 x1675))
(assert (= (x2363 2770781680) 0))
(assert (x881 x2666))
(assert (x881 x3390))
(assert (= x2356 x4032))
(assert (x881 x559))
(assert (< (x1338 64 x4140 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1229 (x1723 32 x1997))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x2791 x2936 x2539 x1767)))
(assert (x881 x677))
(assert (x881 x1593))
(assert (=> (>= 10000 x3798) (= (x2363 x3798) 0)))
(assert (=> (>= 10000 x3828) (= 0 (x2363 x3828))))
(assert (x881 x3304))
(assert (x320 x1879))
(assert (=> (<= x2202 10000) (= (x2363 x2202) 0)))
(assert (x881 x3849))
(assert (x881 x3320))
(assert (x881 x1393))
(assert (x881 x1290))
(assert (= (and (not x3960) x2048) x4245))
(assert (=> (>= 10000 x3646) (= 0 (x2363 x3646))))
(assert (x881 x829))
(assert (x881 x2004))
(assert (=> (<= x2858 10000) (= 0 (x2363 x2858))))
(assert (< (x1723 x3829 x3461) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x4009) (= 0 (x2363 x4009))))
(assert (x862 x2163))
(assert (x862 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x881 x3139))
(assert (x881 x3748))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x881 x1759))
(assert (= x4140 (x1415 (x1338 64 x4140 5))))
(assert (= x577 (x2164 (x898 x59 x4037 x1091 x577 x26))))
(assert (x881 x96))
(assert (= x3001 (x1415 (x4162 x569 x3001 x2865 x3178 x870 x452 x606))))
(assert (x1229 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x881 x3368))
(assert (x881 x4289))
(assert (x881 x860))
(assert (= x1187 (or x2851 x2906)))
(assert (= x2864 (and x2980 x3033)))
(assert (=> (>= 10000 x1920) (= 0 (x2363 x1920))))
(assert (x881 x158))
(assert (x881 x2204))
(assert (=> (<= x3538 10000) (= 0 (x2363 x3538))))
(assert (= (x2761 x1001 x3563 x1612 x1076 x2444 x840) (x2363 (x2761 x1001 x3563 x1612 x1076 x2444 x840))))
(assert (not (x1229 (x1723 x2790 x2655))))
(assert (x1229 1084734224))
(assert (x881 x1141))
(assert (= x1411 (and (not x1486) x334)))
(assert (x881 x2099))
(assert (= (=> (and (= x876 x2183) (<= x2183 1461501637330902918203684832716283019655932542975) (= x4193 (+ x3424 x1297)) (= x1330 false) (= (+ x1661 32) x3424) (= false x3743) (= x2610 (ite (> x2416 0) x3298 (x265 127 x3298))) (= 164 x1648) (= x1730 (+ x1661 31)) (= x297 (div (+ 31 x2610) 32)) (= (= x2610 0) x3498) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3392) (or (= 1 x704) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x704)) (<= 196 x3392) (= x3032 (x1338 64 x3951 3)) (= x1082 51607134309459761954548520284799282329936326410793501951915747293203005440) (= (+ x272 160) x3690) (= x2887 128) (= (x486 x3032) x2389) (= x313 (= x1056 (x3869 132))) (>= 18446744073709551615 x2268) (= x272 (* x297 32)) (= (x265 1 x2389) x2416) (= x1645 (+ x2268 164)) (= x2556 1914215) (>= x1637 1) (<= x1881 127) (not (< x36 x1645)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x36) (< x1730 x36) (= (x2891 x1672) x1998) x313 (<= 1 x2183) (= x3299 x3951) (<= 1 x1998) (= (x2850 132) x2268) (= x747 128) (= (+ 4 x2018) x1661) (= x2018 x882) (= x3392 (x988 (- x4289 128))) (= x1297 (x2850 x1661)) (>= 18446744073709551615 x1297) (= (div x2389 2) x3298) (not (< x36 x4193)) (= x3878 x3039) (= x36 x3392) (>= 127 x1881) (>= x36 196) (= (x988 (- x2416 (mod (ite (> 32 x2610) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x704) (= (x2891 x509) x1637)) (and (=> x3498 x3411) (=> (and (= (< 31 x2610) x4125) (not x3498)) (and (=> (and (not x4125) (and (= (* x1097 256) x1828) (= (x486 x3032) x3623) (= (div x3623 256) x1097))) x3411) (=> (and (and (= x848 (x2496 x1763)) (= x2557 (+ 160 x2610)) (= (< 192 x2557) x2325) (= (+ 1 x1763) x1111) (= (x1723 32 x3032) x1763)) x4125) (and (=> (not x2325) x585) (=> x2325 x3092))))))) x2393))
(assert (x320 x3412))
(assert (x881 x4181))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 32 103)))
(assert (= x3084 (and x872 x3384)))
(assert (x881 x2934))
(assert (= (x1415 (x2761 x2791 x3954 x4112 x570 x2666 x136)) x3954))
(assert (= x2931 (x1451 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (x881 x4168))
(assert (=> (>= 10000 x362) (= 0 (x2363 x362))))
(assert (=> (>= 10000 x1526) (= (x2363 x1526) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x2115 x2650 x594)))
(assert (x881 x3375))
(assert (not (x1229 (x1338 64 x2541 12))))
(assert (not (x1229 (x1338 64 x4019 (ite (= x2790 0) x3808 (ite (>= 32 x2790) x2788 (ite (<= x2790 64) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (>= 160 x2790) x94 (ite (>= 192 x2790) x3483 (ite (<= x2790 224) x644 x3114))))))))))))
(assert (x881 x529))
(assert (x881 x1671))
(assert (x881 x1834))
(assert (x881 x871))
(assert (x881 x1482))
(assert (= x3055 (x1415 (x2226 x813 x3055 x3250 x899))))
(assert (x881 x3130))
(assert (< 10000 (x1338 64 x4019 (ite (= 0 x2790) x3808 (ite (<= x2790 32) x2788 (ite (>= 64 x2790) x2627 (ite (<= x2790 96) x2085 (ite (>= 128 x2790) x3926 (ite (<= x2790 160) x94 (ite (>= 192 x2790) x3483 (ite (<= x2790 224) x644 x3114)))))))))))
(assert (= (and x2276 x1259) x3243))
(assert (< 10000 (x1338 x2268 x3761 x590)))
(assert (= (x2363 (x898 x2790 x305 x3753 x3113 x356)) (x898 x2790 x305 x3753 x3113 x356)))
(assert (=> (>= 10000 x858) (= (x2363 x858) 0)))
(assert (x881 x989))
(assert (x881 x1935))
(assert (not (x1229 (x898 x1241 x2959 x2355 x1515 x2531))))
(assert (x881 x2940))
(assert (x881 x3885))
(assert (not (x1229 (x1723 x2791 x2171))))
(assert (x881 x1910))
(assert (not (x1229 (x1338 64 x164 6))))
(assert (< (x1338 x655 x1109 x4109) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x164 6)))
(assert (= (x1338 64 x1577 10) (x2363 (x1338 64 x1577 10))))
(assert (x881 x2856))
(assert (x881 x953))
(assert (= x655 (x2229 (x2226 x655 x536 x2742 x635))))
(assert (= (x1451 (x1338 x2115 x2650 x594)) x594))
(assert (= x3461 (x1415 (x1723 x3829 x3461))))
(assert (= (x2164 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)) x2345))
(assert (not (x1229 (x2226 x1241 x1037 x973 x502))))
(assert (x881 x3394))
(assert (x881 x4057))
(assert (=> (>= 10000 x73) (= (x2363 x73) 0)))
(assert (= (and x273 (not x3305)) x134))
(assert (x881 x550))
(assert (x881 x3613))
(assert (< (x2226 x655 x536 x2742 x635) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2271))
(assert (= (x1415 (x2761 x2268 x518 x1132 x951 x3129 x2757)) x518))
(assert (x881 x735))
(assert (x881 x570))
(assert (x881 x449))
(assert (x881 x2519))
(assert (= (x1451 (x1338 64 x89 2)) 2))
(assert (x881 x3828))
(assert (= (x1207 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)) x1635))
(assert (< 10000 (x1338 64 x3297 36)))
(assert (= (x3658 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)) x3774))
(assert (= (x3658 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) x3687))
(assert (x881 x1019))
(assert (x881 x1137))
(assert (x881 x1757))
(assert (= (and x601 (not x2897)) x3393))
(assert (=> (>= 10000 x576) (= 0 (x2363 x576))))
(assert (= (=> (and (= (>= 224 x1241) x3792) (= x2172 (x1713 (+ 32 x3362))) (= x2790 (x988 (- x2172 x3369))) (= x3362 (x1713 (+ x3369 x581))) (= x1241 (x988 (- x2790 32))) (= x215 (x1713 (+ x581 x3369)))) (and (=> (and (= (x1192 0) x1657) (= (x898 x1241 x2959 x2355 x1515 x2531) x1606) (= x2531 (x1858 x3274)) (= (x1858 x3261) x1143) (= x1584 (x1858 x617)) (= (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918) x1346) (= x617 (x1713 (+ 128 x3369))) (= (x1858 x3610) x973) (= (x1858 x3369) x1037) (= x338 (x1713 (+ x3369 32))) (= (x1723 x1241 x1326) x267) (= (x1713 (+ 128 x3369)) x3261) (= (x1338 x1241 x4030 x1619) x3198) (= x185 (x1713 (+ 64 x3369))) (= x2084 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)) (= (x1858 x3369) x71) (= (x1858 x3369) x2959) (= (x1713 (+ x3369 32)) x1095) (= x2884 (x2226 x1241 x1037 x973 x502)) (= x3610 (x1713 (+ 32 x3369))) (= x753 (x1858 x425)) (= x1920 (x1858 x3317)) (= x925 (ite (= x1241 0) x1657 (ite (>= 32 x1241) x267 (ite (<= x1241 64) x3198 (ite (>= 96 x1241) x2884 (ite (<= x1241 128) x1606 (ite (<= x1241 160) x2143 (ite (>= 192 x1241) x2084 (ite (<= x1241 224) x1346 x1419))))))))) (= (x1713 (+ x3369 32)) x1705) (= x425 (x1713 (+ 64 x3369))) (= (x1858 x185) x4212) (= (x1713 (+ x3369 160)) x3651) (= x2918 (x1858 x27)) (= (x1713 (+ 192 x3369)) x27) (= (x1858 x440) x533) (= x1900 (x1858 x3651)) (= x2672 (>= 224 x2790)) (= x4030 (x1858 x3369)) (= x3317 (x1713 (+ 96 x3369))) (= x3916 (x1713 (+ 32 x3369))) (= x1623 (x1858 x3916)) (= (x1713 (+ x3369 64)) x554) (= (x1858 x338) x3842) (= (x1713 (+ 128 x3369)) x2447) (= (x1858 x1032) x3948) (= x1326 (x1858 x3369)) (= (x1713 (+ x3369 96)) x440) (= x479 (x1713 (+ x3369 64))) (= (x1858 x2447) x894) (= (x1713 (+ 96 x3369)) x2329) (= (x1858 x479) x1515) (= x217 (x1858 x1705)) (= (x1713 (+ x3369 64)) x1032) (= x2355 (x1858 x1095)) (= x502 (x1858 x554)) (= x1586 (x1713 (+ 32 x3369))) (= x3890 (x1858 x2329)) (= (x1858 x3369) x889) (= (x2761 x1241 x889 x3842 x4212 x3890 x1143) x2143) (= x3274 (x1713 (+ 96 x3369))) (= x1619 (x1858 x1586)) (= x755 (x1713 (+ 160 x3369))) (= x1635 (x1858 x755)) (= (x1858 x3369) x400)) (and (=> (and (= x2426 (x1713 (+ x3369 64))) (= (x1713 (+ x3369 160)) x2667) (= x1709 (x1713 (+ 32 x3369))) (= x94 (x2761 x2790 x2028 x92 x3705 x1183 x2991)) (= (x1858 x3369) x2655) (= x3770 (x1858 x2971)) (= (x1713 (+ x1030 32)) x2825) (= x717 (x1858 x1709)) (= x305 (x1858 x3369)) (= x3098 (x1858 x3993)) (= x2920 (x1858 x669)) (= (x1858 x1655) x3753) (= x573 (x1713 (+ 128 x3369))) (= x356 (x1858 x2731)) (= (x1713 (+ 32 x3369)) x4256) (= x3404 (x1858 x3369)) (= x2971 (x1713 (+ x3369 64))) (= (x1713 (+ 160 x3369)) x1030) (= (x1858 x573) x2546) (= x3331 (x1858 x423)) (= (x1858 x2096) x677) (= x2085 (x2226 x2790 x1526 x2920 x3098)) (= x528 (x1713 (+ x3369 64))) (= x3705 (x1858 x2707)) (= x2518 (x1713 (+ 128 x3369))) (= x3926 (x898 x2790 x305 x3753 x3113 x356)) (= x2991 (x1858 x184)) (= x3483 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)) (= x695 (x1858 x3369)) (= x3408 (x1858 x3369)) (= (x1713 (+ x3369 32)) x1863) (= (x1723 x2790 x2655) x2788) (= x2609 (x1858 x2667)) (= (x427 x825) x1013) (= x751 (x1713 (+ 32 x3369))) (= (x1713 (+ x3369 96)) x2779) (= x3808 (x1192 0)) (= (x1858 x2779) x1183) (= (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383) x644) (= (x1858 x2426) x2697) (= (x1338 x2790 x695 x2651) x2627) (= (> x1013 0) x955) (= (x1858 x751) x2651) (= x2096 (x1713 (+ x3369 96))) (= (x1858 x1113) x1698) (= (x1713 (+ 64 x3369)) x3993) (= (x1713 (+ 32 x3369)) x1655) (= (x1858 x3369) x1526) (= x2383 (x1858 x3678)) (= x2676 (x1338 64 x4019 (ite (= 0 x2790) x3808 (ite (<= x2790 32) x2788 (ite (<= x2790 64) x2627 (ite (<= x2790 96) x2085 (ite (<= x2790 128) x3926 (ite (<= x2790 160) x94 (ite (<= x2790 192) x3483 (ite (>= 224 x2790) x644 x3114)))))))))) (= (x1858 x1863) x4098) (= (x1858 x2518) x1277) (= (x1713 (+ x3369 96)) x2731) (= x2377 (x1713 (+ x3369 32))) (= (x1713 (+ 128 x3369)) x184) (= (x1713 (+ 96 x3369)) x1113) (= x2028 (x1858 x3369)) (= (x1713 (+ x3369 64)) x2707) (= x3678 (x1713 (+ x3369 192))) (= (x1713 (+ 160 x3369)) x423) (= x669 (x1713 (+ 32 x3369))) (= (x1858 x528) x3113) (= (x1858 x4256) x92)) (and (=> (not x955) x2387) (=> (and x955 (and (= x3987 (> x1013 32)) (= (x42 x296) x3115))) (and (=> (not x3987) x2387) (=> (and (and (= (x1713 (+ x2825 32)) x1857) (= x3324 (x1713 (+ 32 x296))) (= x1678 (< 64 x1013)) (= x322 (x2274 x3324))) x3987) (and (=> (and (and (= (x1713 (+ 64 x2825)) x3876) (= (< 96 x1013) x615) (= (x3719 x4113) x3607) (= (x1713 (+ x296 64)) x4113)) x1678) (and (=> x615 x3772) (=> (not x615) x2387))) (=> (not x1678) x2387))))))) x2672)) x3792)) x3667))
(assert (x881 x653))
(assert (x881 x721))
(assert (=> (>= 10000 x3345) (= 0 (x2363 x3345))))
(assert (= x813 (x2229 (x898 x813 x3017 x1180 x2298 x244))))
(assert (=> (<= x59 10000) (= (x2363 x59) 0)))
(assert (> (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231) 10000))
(assert (= x4182 (x2164 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511))))
(assert (x881 x2477))
(assert (x881 x2056))
(assert (= (x3658 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x2498))
(assert (x881 x1923))
(assert (x881 x3502))
(assert (x881 x1925))
(assert (x881 x3442))
(assert (x881 x2418))
(assert (= x2576 (or x161 x1112 x1519 x3393 x3136 x2424 x3443 x2863 x460 x3481)))
(assert (=> (>= 10000 x733) (= (x2363 x733) 0)))
(assert (x881 x3486))
(assert (< (x1338 x2790 x695 x2651) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2363 (x1723 32 x3032)) (x1723 32 x3032)))
(assert (= (x2229 (x898 x2268 x2314 x2591 x1124 x3886)) x2268))
(assert (=> (<= x2522 10000) (= (x2363 x2522) 0)))
(assert (x881 x740))
(assert (= (x2363 (x898 x3866 x433 x155 x2455 x842)) (x898 x3866 x433 x155 x2455 x842)))
(assert (= 12 (x1451 (x1338 64 x2729 12))))
(assert (x881 x1838))
(assert (=> (>= 10000 x2117) (= (x2363 x2117) 0)))
(assert (not (x1229 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (x881 x4250))
(assert (> (x1723 32 103) 10000))
(assert (< (x1338 64 x3537 (ite (= 0 x655) x4266 (ite (>= 32 x655) x4084 (ite (>= 64 x655) x2227 (ite (>= 96 x655) x3992 (ite (<= x655 128) x160 (ite (>= 160 x655) x1877 (ite (<= x655 192) x1383 (ite (>= 224 x655) x761 x3914))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x1622))
(assert (x881 x1119))
(assert (= (=> (= x1457 (= x2083 0)) (and (=> (and (and (= x3936 false) (= x1671 4) (= true x239)) (not x1457)) x3489) (=> (and (and (= x2624 (x1546 x3088)) (= (x1338 64 x3835 11) x3088) (= x1861 (< 3 x2624)) (<= x2624 255)) x1457) (and (=> (and (and (= false x1239) (= x2976 true) (= x1671 36)) x1861) x3489) (=> (and (not x1861) (= x2897 (= 2 x2624))) (and (=> (and (not x2897) (and (= x2419 true) (= x1319 false) (= 4 x1671))) x3489) (=> (and x2897 (and x3296 (= (x988 (- x3752 294)) x62) (= x985 290) (= x3192 (= (x1430 486) (x1465 196))) (<= 1 x3941) (= x786 (x1713 (+ x975 x1448))) (>= x3755 356) (= (x1042 128) x3883) (= x975 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x772)) (>= 127 x1749) (= x3732 160) (= x3755 (x988 (- x786 290))) (= (x1713 (+ x426 486)) x3752) (= x47 (= 64 (x1465 164))) x3192 (= x3390 x1672) (= x2104 (x1736 x3494)) (= 256 x1165) (<= x1749 127) (= x1499 0) (<= 356 x3100) (= 0 x3633) (= (x1713 (+ 32 x3752)) x1448) (= (x1713 (+ x3883 31)) x1770) (= x1051 (or (> (- x3100 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= (- x3100 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< (- x3100 4) 160)))) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x1278) (= (x1338 64 1 x3007) x3494) (= x3044 false) (= 1084734224 x803) (= x3296 (= (x1465 228) (x1430 518))) (= (= 34 (x1465 260)) x1822) x1822 (= x3100 x3755) (= (x2891 x1679) x3941) (= (x2910 224) x192) (= x426 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1770)) (<= x4140 65535) (= x772 (x1713 (+ x192 31))) (= x3572 x4140) (= x3007 (x1338 64 x4140 4)) (= false x3409) x47)) (and (=> (and (not x1051) (= x3293 true)) (and (=> (and x3293 (= x392 (and (> x3100 195) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3100) true)))) (and (=> (not x392) x2356) (=> (and (and (= (< 18446744073709551615 x1459) x3960) (= x1459 (x3164 164))) x392) (and (=> x3960 x4032) (=> (and (and (= x1579 (> x1995 x3100)) (= x1995 (x1713 (+ x1459 196)))) (not x3960)) (and (=> x1579 x210) (=> (and (and (<= x3100 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x391 (> x931 18446744073709551615)) (<= 356 x3100) (= x931 (x3164 260))) (not x1579)) (and (=> (and (and (= x2102 (< x3100 x1523)) (= (x1713 (+ 292 x931)) x1523)) (not x391)) (and (=> x2102 x210) (=> (and (not x2102) (and (= x1306 x2002) (= x4222 false) (= (x3826 128) x2327) (= x246 x1159) (= x2843 x3788) (= x2824 (x3826 160)) (= x1125 x2545) (= x2952 x3995) (= (+ 1 x3525) x2) (= x773 x3482) (= 1 x548) (= x1128 x3060) (= x3963 64) (= x956 x79) (= x1350 x4140) (= x1779 (x3826 128)) (= x2993 x3685) (= x96 x2693) (= false x1840) (= x2022 x1835) (= (x3826 160) x2852))) x566))) (=> x391 x4032))))))))) (=> (not x3293) x2356))) (=> x1051 x2356))))))))) x3726))
(assert (x881 x2577))
(assert (x881 x707))
(assert (x881 x2791))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x2791 x3954 x4112 x570 x2666 x136)))
(assert (< 10000 (x1338 64 x1697 36)))
(assert (x881 x2385))
(assert (= x2856 (x1207 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (x881 x3080))
(assert (=> (<= x4170 10000) (= 0 (x2363 x4170))))
(assert (= (and x3813 x4100) x1372))
(assert (=> (>= 10000 x3948) (= (x2363 x3948) 0)))
(assert (x881 x3880))
(assert (= x897 (and x1704 x1794)))
(assert (x881 x3050))
(assert (x881 x2018))
(assert (=> (>= 10000 x3171) (= (x2363 x3171) 0)))
(assert (= x1707 (or x1804 x846)))
(assert (x881 x2390))
(assert (x881 x545))
(assert (x881 x4291))
(assert (x881 x962))
(assert (x881 x3372))
(assert (= x2580 (or x300 x3799)))
(assert (x881 x39))
(assert (=> (>= 10000 x1882) (= (x2363 x1882) 0)))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (> (x1338 64 x4179 11) 10000))
(assert (x881 x98))
(assert (= x2219 (and x2316 x1372)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x1949 x3538)))
(assert (= (and x513 x2464) x3443))
(assert (x881 x2720))
(assert (= (x1338 64 x3556 36) (x2363 (x1338 64 x3556 36))))
(assert (=> (>= 10000 x3864) (= (x2363 x3864) 0)))
(assert (= (x1415 (x1338 x2115 x2650 x594)) x2650))
(assert (x881 x2614))
(assert (= (=> (and (and (and (= x2086 (x3220 x2716)) (= x3546 x2716)) (and (and (and (and (= x1223 x1670) (and (or (and x2129 (and (= x2717 x2952) (>= 1461501637330902918203684832716283019655932542975 x2952))) (and (not x2129) (= x550 0))) (and (= x3522 x1280) (>= 127 x1345) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1223 x2691)) (= x2129 (not (= x2717 x1672))) (= false x3163) (= x1100 2) (<= 0 x674) (<= 1 x2639) (= 2001815235 x3432) (= x1344 false) (= (- x2167 x1223) x2262) (= x415 x3744) (= x1870 1) (<= x674 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 127 x1345) (= (ite x2129 1 0) x550) (= x3546 x3511) (= x2155 x674) (= x2691 (x1583 x1672)) (= (x2891 x1672) x2639) (= x674 (+ x1223 x2691)) (= x2167 (x3220 x3511))))) (= x3546 x2717)) (and (= x149 false) (= x3655 x1280))) (and (= 68 x489) (>= x2086 x1859) (= x1859 x1670) (= x3224 x3744)))) (and (= x357 false) (not (= x1672 x876)) (<= x3998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3291) (= false x4207) (<= x1818 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3520 x442) x2152) (<= x543 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x918 (> (x2891 x1672) 0)) (>= 1461501637330902918203684832716283019655932542975 x1679) (= x1679 x1306) (<= x3291 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 36 x3821) (>= 1461501637330902918203684832716283019655932542975 x1306) (not (= x3010 x876)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1670) (<= 0 x1670) (= x442 (x1338 64 x2804 10)) (<= 0 x3485) (= x1520 x2804) (<= 0 x3670) (= x791 (x2891 x1672)) (not (= x3010 x1679)) (= x2603 (not (= 0 x1389))) (>= x1306 1) (>= 1461501637330902918203684832716283019655932542975 x3546) (<= 0 x3998) (>= 127 x1271) (<= 0 x4044) (not (= x1679 x876)) (>= x2022 1) (<= 1 x791) x1551 (>= x1672 1) (>= 255 x2152) (= (> (x2891 x1679) 0) x315) (<= 0 x1862) x315 (>= 1461501637330902918203684832716283019655932542975 x1862) (not (= x1672 x1679)) (= x1672 x2022) (>= x543 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4044) x918 (<= x3010 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x876) (>= x1818 0) (>= x1679 1) (<= x2022 1461501637330902918203684832716283019655932542975) (= x277 x2804) (<= x1672 1461501637330902918203684832716283019655932542975) (= (ite (not (= 0 x2152)) 1 0) x1389) (<= x3485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3224 x277) (= false x345) (= x2353 false) (= false x4144) (>= x912 0) (<= 1 x876) (= x3998 x3655) (not (= x1672 x3010)) x4183 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3670) (= x1993 3672334990) (= x832 false) (= (< 0 (x2891 x3010)) x1551) (= (> (x2891 x876) 0) x4183) (<= x1271 127) (<= 1 x3010) (<= x912 1461501637330902918203684832716283019655932542975) (<= 0 x3546))) x363) x3051))
(assert (x881 x2171))
(assert (= 36 (x1451 (x1338 64 x3556 36))))
(assert (x881 x3705))
(assert (= (and x1565 x3557) x2101))
(assert (x881 x3957))
(assert (= x3730 (and (not x3909) x3937)))
(assert (= (x2363 (x1338 64 x3156 10)) (x1338 64 x3156 10)))
(assert (x881 x3694))
(assert (=> (<= x1001 10000) (= (x2363 x1001) 0)))
(assert (> (x2761 x2790 x2028 x92 x3705 x1183 x2991) 10000))
(assert (= x715 (x1415 (x898 x3829 x715 x4071 x3961 x4010))))
(assert (x881 x1369))
(assert (= x2522 (x2164 (x2226 x3866 x858 x2769 x2522))))
(assert (= (x1338 64 x3877 3) (x2363 (x1338 64 x3877 3))))
(assert (x881 x1071))
(assert (= x2546 (x3455 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331))))
(assert (< 10000 (x1723 x1712 x1961)))
(assert (x881 x3763))
(assert (x881 x2674))
(assert (x881 x4063))
(assert (x881 x752))
(assert (x881 x3453))
(assert (x881 x2783))
(assert (= x719 (and x2360 (not x4151))))
(assert (x881 x1849))
(assert (x881 x2454))
(assert (x881 x382))
(assert (< 10000 (x4162 x2790 x3408 x4098 x2697 x677 x2546 x3331)))
(assert (= (x1207 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)) x1511))
(assert (= (x1723 32 x2516) (x2363 (x1723 32 x2516))))
(assert (x881 x3239))
(assert (x881 x3142))
(assert (= (x1451 (x1338 64 x1070 6)) 6))
(assert (x881 x2367))
(assert (=> (<= x203 10000) (= 0 (x2363 x203))))
(assert (x881 x2343))
(assert (x881 x1640))
(assert (x881 x2988))
(assert (= x153 (x1451 (x2226 x1001 x3416 x153 x2807))))
(assert (= x1804 (and x1487 x2468)))
(assert (= x590 (x1451 (x1338 x2268 x3761 x590))))
(assert (= (x2363 (x1723 x228 x3679)) (x1723 x228 x3679)))
(assert (x881 x1013))
(assert (= (and x2382 x2432) x3796))
(assert (= (x2164 (x898 x3866 x433 x155 x2455 x842)) x2455))
(assert (= (or x1205 x532) x2346))
(assert (x881 x255))
(assert (x881 x2494))
(assert (= (x1415 (x2761 x655 x4280 x3527 x4136 x737 x3646)) x4280))
(assert (= (x1451 (x1338 64 x4179 11)) 11))
(assert (= (ite (= x655 0) x4266 (ite (>= 32 x655) x4084 (ite (>= 64 x655) x2227 (ite (>= 96 x655) x3992 (ite (<= x655 128) x160 (ite (>= 160 x655) x1877 (ite (>= 192 x655) x1383 (ite (>= 224 x655) x761 x3914)))))))) (x1451 (x1338 64 x3537 (ite (= x655 0) x4266 (ite (>= 32 x655) x4084 (ite (<= x655 64) x2227 (ite (>= 96 x655) x3992 (ite (>= 128 x655) x160 (ite (<= x655 160) x1877 (ite (>= 192 x655) x1383 (ite (<= x655 224) x761 x3914))))))))))))
(assert (not (x1229 (x1723 32 x3032))))
(assert (x881 x1288))
(assert (x1735 x1627))
(assert (x881 x1651))
(assert (=> (>= 10000 x3544) (= (x2363 x3544) 0)))
(assert (not (x1229 (x1723 x1712 x1961))))
(assert (x881 x834))
(assert (= (x2363 (x2226 x1712 x1290 x250 x2069)) (x2226 x1712 x1290 x250 x2069)))
(assert (x881 x217))
(assert (x881 x1005))
(assert (x881 x3315))
(assert (= (and (not x2273) x3084) x3337))
(assert (not (x1229 (x1338 64 x1573 12))))
(assert (=> (>= 10000 x830) (= (x2363 x830) 0)))
(assert (x881 x2852))
(assert (x881 x3193))
(assert (x881 x1143))
(assert (=> (<= x976 10000) (= (x2363 x976) 0)))
(assert (< (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4088 (x1415 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (=> (>= 10000 x2791) (= 0 (x2363 x2791))))
(assert (x881 x2977))
(assert (x881 x4229))
(assert (x881 x3572))
(assert (x881 x1582))
(assert (x881 x577))
(assert (= 0 (x2363 2001815235)))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (= (x3658 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710)) x1276))
(assert (=> (<= x1294 10000) (= 0 (x2363 x1294))))
(assert (=> (<= x1759 10000) (= (x2363 x1759) 0)))
(assert (> (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344) 10000))
(assert (not (x1229 (x1338 64 x2729 12))))
(assert (= (or x1313 x430) x478))
(assert (= (x1415 (x1338 64 x3059 2)) x3059))
(assert (x881 x3144))
(assert (x881 x3765))
(assert (x881 x4087))
(assert (= x2188 (and x3498 x1775)))
(assert (x881 x1831))
(assert (x881 x2505))
(assert (x881 x61))
(assert (= (x898 x813 x3017 x1180 x2298 x244) (x2363 (x898 x813 x3017 x1180 x2298 x244))))
(assert (x881 x1952))
(assert (x881 x1185))
(assert (=> (>= 10000 x1037) (= (x2363 x1037) 0)))
(assert (= x3731 (and x852 x421)))
(assert (x881 x1558))
(assert (x881 x216))
(assert (x881 x1539))
(assert (x881 x1449))
(assert (x881 x4221))
(assert (x881 x2775))
(assert (x881 x426))
(assert (=> (<= x973 10000) (= (x2363 x973) 0)))
(assert (= x197 (and (not x355) x942)))
(assert (x881 x4170))
(assert (not (x1229 (x1338 64 x1577 10))))
(assert (=> (>= 10000 x1019) (= (x2363 x1019) 0)))
(assert (= x1588 (x1415 (x1723 x569 x1588))))
(assert (=> (<= x213 10000) (= (x2363 x213) 0)))
(assert (= (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438) (x2363 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (x881 x1711))
(assert (= (x3895 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) x4017))
(assert (x881 x1401))
(assert (=> (<= x371 10000) (= 0 (x2363 x371))))
(assert (x881 x1321))
(assert (= (=> (and (= (x265 1 x79) x101) (= x1337 (ite (> x333 0) x4114 (x265 127 x4114))) (= (= x101 0) x2508) (= (x988 (- x333 (mod (ite (< x1337 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x324) (= x3506 (+ x672 32)) (= (- x672 132) x1788) (= x4114 (div x79 2)) (= x333 (x265 1 x79)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x324) (= 1 x324))) (and (=> (and x2508 (and (= (* 32 (ite (not (= 0 x1337)) 1 0)) x453) (= x1718 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x79)) (or (= 32 x453) (= 0 x453)) (= (+ x453 x3506) x1768))) x1839) (=> (and (not x2508) (and (= (x1723 32 104) x4286) (= (< 0 x1337) x2242))) (and (=> (and (not x2242) (= 0 x3190)) x2949) (=> x2242 x156))))) x3319))
(assert (= x1712 (x2229 (x1338 x1712 x1433 x2126))))
(assert (< 10000 (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (<= x3866 32) x3118 (ite (<= x3866 64) x3834 (ite (<= x3866 96) x844 (ite (>= 128 x3866) x291 (ite (<= x3866 160) x2820 (ite (>= 192 x3866) x3968 (ite (<= x3866 224) x3746 x4290)))))))))))
(assert (x881 x1942))
(assert (x881 x132))
(assert (x881 x1523))
(assert (=> (>= 10000 x2355) (= (x2363 x2355) 0)))
(assert (not (x1229 (x4162 x569 x3001 x2865 x3178 x870 x452 x606))))
(assert (= (x1451 (x1338 64 x214 36)) 36))
(assert (= (and x2334 (not x1621)) x1247))
(assert (x881 x3930))
(assert (= (and (not x3616) x2813) x481))
(assert (x881 x835))
(assert (= (and x13 (not x3330)) x1890))
(assert (x881 x1294))
(assert (x881 x176))
(assert (=> (>= 10000 x3237) (= (x2363 x3237) 0)))
(assert (not (x1229 (x1338 64 x3877 3))))
(assert (= (x2363 486791245) 0))
(assert (=> (<= x1914 10000) (= 0 (x2363 x1914))))
(assert (= (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295) (x2363 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (=> (<= x4059 10000) (= 0 (x2363 x4059))))
(assert (= (x2229 (x1723 x3829 x3461)) x3829))
(assert (x881 x1197))
(assert (x881 x1145))
(assert (x881 x4112))
(assert (=> (<= x1005 10000) (= (x2363 x1005) 0)))
(assert (= (or x696 (and x3891 x2051)) x1313))
(assert (=> (>= 10000 x400) (= (x2363 x400) 0)))
(assert (= (or (and x2550 x2000) (and x1289 x990) (and x355 x942)) x4166))
(assert (x881 x1216))
(assert (= x3355 (x2164 (x2226 x569 x1325 x3903 x3355))))
(assert (x881 x188))
(assert (x881 x3571))
(assert (= x2126 (x1451 (x1338 x1712 x1433 x2126))))
(assert (x881 x4031))
(assert (< (x1338 64 x33 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x2226 x3866 x858 x2769 x2522) 10000))
(assert (x881 x213))
(assert (= x622 (and x1846 x4122)))
(assert (=> (<= x2087 10000) (= (x2363 x2087) 0)))
(assert (= x2592 (=> (and (= x2425 (not (> x4202 x1566))) (= (x1713 (+ x927 32)) x1566) (= x2942 (x2496 x2999))) (and x2425 x521))))
(assert (= (and x3173 x7) x1305))
(assert (x881 x1489))
(assert (x881 x546))
(assert (x881 x1306))
(assert (= 0 (x2363 1766847064778384329583297500742918515827483896875618958121606201292619776)))
(assert (< (x898 x813 x3017 x1180 x2298 x244) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1241 (x2229 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (x881 x4224))
(assert (= x522 (and x904 x2430)))
(assert (= (x2229 (x1338 64 x4140 3)) 64))
(assert (x881 x3123))
(assert (x1229 3812630263))
(assert (= x1997 (x1415 (x1723 32 x1997))))
(assert (= (and (not x3734) x152) x3843))
(assert (x881 x2765))
(assert (x881 x3883))
(assert (x881 x2333))
(assert (x881 x1266))
(assert (= x2845 (or x900 x2537 x2369 x3337 x3739)))
(assert (= (x2363 (x1338 64 x39 6)) (x1338 64 x39 6)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x628 11)))
(assert (x881 x1429))
(assert (=> (>= 10000 x2473) (= (x2363 x2473) 0)))
(assert (= (x898 x1241 x2959 x2355 x1515 x2531) (x2363 (x898 x1241 x2959 x2355 x1515 x2531))))
(assert (= (x1415 (x1338 64 x3537 (ite (= x3866 0) x2647 (ite (<= x3866 32) x3118 (ite (>= 64 x3866) x3834 (ite (>= 96 x3866) x844 (ite (>= 128 x3866) x291 (ite (>= 160 x3866) x2820 (ite (>= 192 x3866) x3968 (ite (>= 224 x3866) x3746 x4290)))))))))) x3537))
(assert (not (x1229 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (= x56 (and x1915 (not x3101))))
(assert (= x2874 x723))
(assert (x881 x3091))
(assert (=> (<= x1690 10000) (= (x2363 x1690) 0)))
(assert (= x1849 (x3895 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849))))
(assert (x881 x3924))
(assert (x881 x122))
(assert (=> (>= 10000 x4033) (= 0 (x2363 x4033))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x813 x3309 x640)))
(assert (not (x1229 (x1338 64 1 x3804))))
(assert (= (x1415 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) x4170))
(assert (x881 x3369))
(assert (x881 x1075))
(assert (= (x2229 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653)) x228))
(assert (x881 x1407))
(assert (x862 x1991))
(assert (= 64 (x2229 (x1338 64 x3465 10))))
(assert (x881 x4043))
(assert (= x1432 (and x3557 (not x1565))))
(assert (=> (>= 10000 x635) (= 0 (x2363 x635))))
(assert (x881 x3332))
(assert (not (x1229 (x1338 64 x1070 6))))
(assert (x881 x680))
(assert (= x1495 (x3455 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (=> (<= x3416 10000) (= (x2363 x3416) 0)))
(assert (x881 x2750))
(assert (x881 x3382))
(assert (=> (>= 10000 x1419) (= (x2363 x1419) 0)))
(assert (= (x2363 (x1338 x2790 x695 x2651)) (x1338 x2790 x695 x2651)))
(assert (=> (>= 10000 x1672) (= (x2363 x1672) 0)))
(assert (=> (<= x2856 10000) (= 0 (x2363 x2856))))
(assert (x881 x4251))
(assert (x881 x3057))
(assert (= x3173 (and x3553 x4029)))
(assert (x881 x2025))
(assert (x881 x2936))
(assert (x881 x1354))
(assert (=> (<= x3355 10000) (= 0 (x2363 x3355))))
(assert (x881 x809))
(assert (x881 x3351))
(assert (not (x1229 (x2226 x228 x2933 x4131 x540))))
(assert (x881 x766))
(assert (= x2439 (and x58 x759)))
(assert (not (x1229 (x1338 64 x89 6))))
(assert (= (x3658 (x2761 x59 x1512 x806 x1358 x3031 x835)) x3031))
(assert (x881 x2777))
(assert (= (x3455 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383)) x1277))
(assert (= (and x1527 x3662) x1852))
(assert (=> (<= x198 10000) (= (x2363 x198) 0)))
(assert (=> (>= 10000 x1188) (= 0 (x2363 x1188))))
(assert (x881 x2868))
(assert (=> (<= x266 10000) (= (x2363 x266) 0)))
(assert (x881 x1540))
(assert (= (x1207 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953)) x953))
(assert (=> (<= x217 10000) (= (x2363 x217) 0)))
(assert (= (=> (and (= (x1713 (+ 32 x3852)) x3473) (= (+ x2372 31) x800) (= x2103 (x1713 (+ x1743 31))) (not (< x2654 x605)) (= x3818 (x1322 196)) (= x2709 (= x1743 (x947 196))) (= 192 x3361) (= x1125 x2569) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4223 x1321)) (>= 18446744073709551615 x8) (= 3313512704 x2853) (= x3149 x727) (<= 420 x3149) (>= 18446744073709551615 x692) (= x1321 (x2945 x1306)) (< x800 x727) (= (+ x3818 228) x3120) (= (x3805 x1365) x605) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3838) x2025) (= x2693 x3202) (not (< x727 x3966)) (= x2414 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= 0 x3292) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2163) x3366) (>= x727 420) (= (x1713 (+ x2025 x317)) x3852) (>= 18446744073709551615 x3818) (= x330 (+ 31 x1572)) (= (x4111 x3492) x1743) (= x4218 x105) (= x2972 x432) (= (x1713 (+ x2547 32)) x1393) (<= 1 x3153) (= x3399 (x1713 (+ x1534 32))) (= (x2945 x1672) x3125) (= x2484 (x1713 (+ x1930 x3504))) (<= x4223 x3212) (= x332 x4140) (= x242 (x2891 x1306)) (= (+ 4 x3050) x2372) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x432) (<= x727 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x8 (x1322 x1572)) (= (x1713 (+ 4 x1225)) x707) (= x317 (x1713 (+ x2484 32))) (= x3456 (+ 32 x692 x2372)) (>= x242 1) (= x2205 false) (= x971 (+ 1 x3297)) (= (x2891 x1679) x950) (= (x1713 (+ x1365 32)) x1766) (not (< x727 x3120)) (= x2547 (x1713 (+ 32 x707))) (>= 18446744073709551615 x3050) (= (x1713 (+ x110 32)) x864) (= x3940 (- x3125 x4223)) (= (x1713 (+ 32 x4069)) x1930) (= (x1713 (+ 31 x845)) x2163) (<= x3149 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 18446744073709551615 x4218) (= (x2147 x1306) x989) (< x330 x727) (= x3050 x4228) (= (x1322 x2372) x692) (= x1672 x510) (= x3966 (+ 32 x1572 x8)) (<= x2333 127) (= x3685 x3313) (< (+ x989 x4223) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1713 (+ 32 x1393)) x1626) (= x3153 (x4111 x3492)) (= (x988 (- x2484 x707)) x4218) (= (x1713 (+ x3473 x3366)) x752) (= x375 (x3805 x1365)) (not (> x3456 x727)) (= (x76 x1293) x226) (= x79 x1829) (= x845 (x3991 x110)) (= x1088 false) (= (x988 (- x3852 x707)) x3050) (= (x1713 (+ 192 x707)) x4069) (<= x2333 127) (= (x1338 64 x4140 5) x1293) (= (+ 4 x4218) x1572) (= x2843 x749) (= x3149 (x988 (- x752 x1225))) (= (x1713 (+ x1626 32)) x1534) (= x1874 x2022) (= x3838 (x1713 (+ x375 31))) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2103) x3504) (= (ite (= x226 0) 10000 x226) x2654) (= (+ x4223 x989) x432) x2709 (= x3212 (x2945 x1672)) (>= x432 0) (>= x950 1)) x3447) x2249))
(assert (=> (>= 10000 x4198) (= 0 (x2363 x4198))))
(assert (= x2768 (or x2190 x1184)))
(assert (x862 x3838))
(assert (x881 x1454))
(assert (x881 x1117))
(assert (=> (>= 10000 x2295) (= 0 (x2363 x2295))))
(assert (= (or x1409 x1938) x1775))
(assert (x881 x2510))
(assert (= (or x500 x2576) x4067))
(assert (= x3404 (x1415 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (= (x1451 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) x1623))
(assert (= (x1415 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569)) x3147))
(assert (x881 x2401))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 32 x3336)))
(assert (> (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063) 10000))
(assert (=> (<= x2054 10000) (= 0 (x2363 x2054))))
(assert (x881 x3761))
(assert (= (x1415 (x2761 x1712 x3175 x1121 x3013 x125 x980)) x3175))
(assert (x881 x2283))
(assert (x881 x1655))
(assert (x881 x3549))
(assert (x881 x2144))
(assert (= x1756 (and (not x2567) x731)))
(assert (= (x1451 (x1338 64 x3465 10)) 10))
(assert (not (x1229 (x1723 x2268 x3345))))
(assert (x881 x2197))
(assert (= (=> (= (< 0 (ite (= 0 x3860) x3860 1)) x2574) (and (=> (and (not x2574) (and (or (not x3616) x3616) (= x3616 (= 0 x1311)))) x2286) (=> x2574 x3262))) x3550))
(assert (= x1603 (and (not x2384) x3585)))
(assert (x881 x3774))
(assert (x881 x1766))
(assert (x881 x820))
(assert (= (x2761 x1949 x2524 x2830 x1996 x1724 x1495) (x2363 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (x881 x760))
(assert (=> (>= 10000 x1662) (= 0 (x2363 x1662))))
(assert (= x1681 (and x231 x562)))
(assert (= x2298 (x2164 (x898 x813 x3017 x1180 x2298 x244))))
(assert (=> (>= 10000 x1767) (= (x2363 x1767) 0)))
(assert (x881 x3606))
(assert (= (x2363 (x2226 x2115 x2944 x213 x404)) (x2226 x2115 x2944 x213 x404)))
(assert (=> (<= x2865 10000) (= (x2363 x2865) 0)))
(assert (x881 x943))
(assert (x881 x842))
(assert (= x132 (x2164 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (< 10000 (x1338 64 x3877 3)))
(assert (= (x1451 (x1338 64 x33 2)) 2))
(assert (= x3240 (and x3819 (not x4294))))
(assert (> (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295) 10000))
(assert (x881 x3188))
(assert (= (x1451 (x1338 64 x164 6)) 6))
(assert (x881 x1530))
(assert (x881 x3762))
(assert (not (x1229 (x1338 x1949 x3815 x290))))
(assert (x881 x1037))
(assert (= x2473 (x3658 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063))))
(assert (=> (<= x4280 10000) (= 0 (x2363 x4280))))
(assert (= (=> (and (= x2752 x1835) (= x970 2) (= x1128 x2682) (= x2431 x3788) (= false x4169) (= x3939 (+ x3525 1)) (= x2725 x96) (= x1350 x1473) (= x51 true) (= 0 x4156) (= x2002 x405) (= x2993 x2013) (= x712 x956) (= x3995 x3207) (= x1159 x2182) (= x3470 (+ x3525 1)) (= x3523 x3482) (= x1917 x2545)) x3213) x723))
(assert (= (x2363 (x1338 64 x2729 12)) (x1338 64 x2729 12)))
(assert (x881 x3418))
(assert (x881 x2698))
(assert (= x630 (x3455 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636))))
(assert (x881 x4202))
(assert (x881 x4264))
(assert (x881 x352))
(assert (x881 x3603))
(assert (< 10000 (x1338 64 x1672 1)))
(assert (x881 x3718))
(assert (= (x2363 3521034783) 0))
(assert (= (x1207 (x2915 x1712 x997 x911 x4282 x1882 x3217 x31 x642)) x31))
(assert (x881 x2117))
(assert (= (ite (= x228 0) x1179 (ite (<= x228 32) x2035 (ite (>= 64 x228) x190 (ite (<= x228 96) x2681 (ite (>= 128 x228) x1341 (ite (>= 160 x228) x1799 (ite (<= x228 192) x2809 (ite (>= 224 x228) x171 x2180)))))))) (x1451 (x1338 64 x3878 (ite (= x228 0) x1179 (ite (<= x228 32) x2035 (ite (<= x228 64) x190 (ite (<= x228 96) x2681 (ite (>= 128 x228) x1341 (ite (>= 160 x228) x1799 (ite (>= 192 x228) x2809 (ite (>= 224 x228) x171 x2180))))))))))))
(assert (= x3829 (x2229 (x1338 x3829 x2196 x2795))))
(assert (= (=> (and (= x1074 (x1713 (+ 96 x296))) (= x4201 (x1713 (+ x2825 96))) (= (not (< 128 x1013)) x209) (= x166 (x4274 x1074))) (and x209 x2387)) x3772))
(assert (x881 x3713))
(assert (< 10000 (x1338 64 x1010 100)))
(assert (x881 x2523))
(assert (x881 x2100))
(assert (x881 x2172))
(assert (x881 x3795))
(assert (= (x1451 (x1338 64 x1697 36)) 36))
(assert (= (x2226 x1949 x3121 x2734 x1084) (x2363 (x2226 x1949 x3121 x2734 x1084))))
(assert (x881 x619))
(assert (x881 x1110))
(assert (=> (>= 10000 x3404) (= (x2363 x3404) 0)))
(assert (=> (>= 10000 x3465) (= (x2363 x3465) 0)))
(assert (> (x1338 x569 x4204 x3280) 10000))
(assert (= 0 (x2363 1000000000)))
(assert (x881 x1637))
(assert (not (x1229 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (x881 x1214))
(assert (x881 x1438))
(assert (= (and (not x3023) x2193) x1205))
(assert (= (=> (and (= (> x3648 0) x2559) (= (x1713 (+ x306 x2007)) x3950) (= x3211 (x1713 (+ x306 31))) (= x3648 (x2683 x503)) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3211) x1959) (= x814 (x988 (- x1598 x2396))) (= (x1713 (+ x2007 x1959)) x1598) (= x4244 (x1713 (+ 32 x2634))) (= (x1713 (+ x1598 32)) x4251) (= x2634 (x1713 (+ x3549 32)))) (and (=> (not x2559) x387) (=> (and x2559 (and (= (x3627 x2293) x1407) (= x1324 (> x3648 32)))) (and (=> (not x1324) x387) (=> (and x1324 (and (= x2423 (x1713 (+ x2293 32))) (= (x2482 x2423) x1643) (= (< 64 x3648) x2284) (= (x1713 (+ 32 x4251)) x1424))) (and (=> (and x2284 (and (= x2312 (x1295 x2978)) (= (x1713 (+ 64 x4251)) x512) (= x2430 (> x3648 96)) (= (x1713 (+ 64 x2293)) x2978))) (and (=> x2430 x2675) (=> (not x2430) x387))) (=> (not x2284) x387))))))) x437))
(assert (x881 x3313))
(assert (=> (>= 10000 x4005) (= 0 (x2363 x4005))))
(assert (= (x1207 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383)) x2609))
(assert (x881 x1571))
(assert (= (x1451 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)) x4059))
(assert (= (x1451 (x2226 x2791 x2936 x2539 x1767)) x2539))
(assert (= (x1723 32 103) (x2363 (x1723 32 103))))
(assert (x881 x1764))
(assert (x881 x1645))
(assert (= (x1451 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231)) x4287))
(assert (x881 x130))
(assert (=> (>= 10000 x3556) (= 0 (x2363 x3556))))
(assert (=> (>= 10000 x4259) (= 0 (x2363 x4259))))
(assert (x881 x1652))
(assert (x881 x2137))
(assert (=> (<= x1619 10000) (= (x2363 x1619) 0)))
(assert (x881 x599))
(assert (x881 x283))
(assert (x881 x3784))
(assert (not (x1229 (x1723 x813 x3579))))
(assert (x881 x1365))
(assert (not (x1229 (x2761 x1712 x3175 x1121 x3013 x125 x980))))
(assert (x881 x3114))
(assert (= x1866 (or x3334 x205)))
(assert (> (x2226 x1001 x3416 x153 x2807) 10000))
(assert (x881 x672))
(assert (= (=> (and (= x4168 (x1888 x3349)) (= (x1713 (+ 96 x559)) x3349) (= (x1713 (+ 96 x4020)) x4041) (= (not (< 128 x3656)) x2904)) (and x2904 x3191)) x1501))
(assert (not (x1229 (x1338 64 x3224 10))))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639838) 0))
(assert (x881 x2467))
(assert (= x2706 (x1415 (x2226 x3829 x2706 x3083 x2302))))
(assert (=> (<= x125 10000) (= (x2363 x125) 0)))
(assert (= (and (not x492) x1044) x2476))
(assert (= 64 (x2229 (x1338 64 x4268 36))))
(assert (x881 x3630))
(assert (x1517 x2154))
(assert (= (x2363 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)) (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)))
(assert (= (x2164 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) x753))
(assert (=> (<= x4088 10000) (= (x2363 x4088) 0)))
(assert (x881 x2579))
(assert (=> (>= 10000 x1306) (= (x2363 x1306) 0)))
(assert (x881 x523))
(assert (x1229 4294967358))
(assert (=> (<= x1569 10000) (= (x2363 x1569) 0)))
(assert (x881 x2620))
(assert (x881 x4053))
(assert (> (x1338 x2791 x3277 x3682) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 x569 x1588)))
(assert (x881 x1345))
(assert (x881 x3916))
(assert (x881 x4220))
(assert (< 10000 (x1338 x2115 x2650 x594)))
(assert (x881 x772))
(assert (= (or x3466 x907 x2433) x1740))
(assert (x881 x3396))
(assert (=> (<= x2388 10000) (= (x2363 x2388) 0)))
(assert (x881 x4098))
(assert (= (x2363 (+ 1 x2282)) (x2363 x2282)))
(assert (x881 x3492))
(assert (< 10000 (x1338 x2790 x695 x2651)))
(assert (= (and x1122 (not x1233)) x3660))
(assert (=> (>= 10000 x766) (= (x2363 x766) 0)))
(assert (x881 x282))
(assert (= (x1451 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) x2308))
(assert (x881 x1025))
(assert (= x1238 (and x4157 x4208)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x2268 x3761 x590)))
(assert (> (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284) 10000))
(assert (x881 x873))
(assert (x881 x2599))
(assert (= x3020 (and x2727 x2121)))
(assert (x881 x1367))
(assert (= x2734 (x1451 (x2226 x1949 x3121 x2734 x1084))))
(assert (= x3786 (x3455 (x2761 x3866 x2802 x992 x3706 x2800 x3786))))
(assert (= x3649 (or x1462 x3210)))
(assert (x881 x553))
(assert (= x835 (x3455 (x2761 x59 x1512 x806 x1358 x3031 x835))))
(assert (= x2933 (x1415 (x2226 x228 x2933 x4131 x540))))
(assert (= (and x174 (not x1911)) x2581))
(assert (x881 x1468))
(assert (> (x898 x59 x4037 x1091 x577 x26) 10000))
(assert (x881 x3449))
(assert (= x2791 (x2229 (x2761 x2791 x3954 x4112 x570 x2666 x136))))
(assert (= (x1338 64 x3877 7) (x2363 (x1338 64 x3877 7))))
(assert (x881 x3644))
(assert (x881 x1750))
(assert (x881 x3535))
(assert (= x125 (x3658 (x2761 x1712 x3175 x1121 x3013 x125 x980))))
(assert (= x3906 (and x1122 x1233)))
(assert (= x1939 (x1415 (x898 x1712 x1939 x3944 x1914 x954))))
(assert (x320 x619))
(assert (= (x1415 (x1338 64 x2030 12)) x2030))
(assert (x1517 x1885))
(assert (= (and x1139 (not x102)) x121))
(assert (x881 x2642))
(assert (x881 x275))
(assert (x1229 2770781680))
(assert (x881 x4244))
(assert (x881 x1578))
(assert (x881 x2104))
(assert (x881 x88))
(assert (x881 x36))
(assert (x881 x4017))
(assert (x881 x1257))
(assert (< (x2226 x569 x1325 x3903 x3355) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2498))
(assert (x881 x757))
(assert (x881 x595))
(assert (=> (>= 10000 x717) (= 0 (x2363 x717))))
(assert (= (x1207 (x4162 x1001 x1106 x3000 x2345 x2222 x630 x2636)) x2636))
(assert (=> (>= 10000 x3095) (= 0 (x2363 x3095))))
(assert (= (x1451 (x2226 x2268 x526 x4292 x1748)) x4292))
(assert (x862 x3298))
(assert (x881 x870))
(assert (x881 x2740))
(assert (x881 x2391))
(assert (x881 x2798))
(assert (=> (>= 10000 x443) (= (x2363 x443) 0)))
(assert (= x2899 (or x4104 x1028)))
(assert (x881 x1817))
(assert (= (or x3564 x3282) x3210))
(assert (x881 x407))
(assert (=> (>= 10000 x3000) (= 0 (x2363 x3000))))
(assert (> (x1338 64 x1714 12) 10000))
(assert (x881 x701))
(assert (x881 x3402))
(assert (x881 x1004))
(assert (x881 x2690))
(assert (= (x1415 (x1723 32 x3032)) x3032))
(assert (x881 x3803))
(assert (x881 x2952))
(assert (x881 x328))
(assert (x881 x350))
(assert (x881 x714))
(assert (= 0 (x2363 1084734224)))
(assert (x881 x3052))
(assert (= x1664 (not (and (= x774 (x1338 64 x214 36)) (= x3112 (x1284 x2893)) (<= x39 252) (= (+ 1 x39) x595) (= x3593 (+ 1 x214)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2045 x3112)) (= (x2428 x876) x1969) (= (x2604 x2022) x2045) (= x1909 (+ 1 x214)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3112 x3048)) (= x214 (+ 1 x1010)) (<= 0 x960) (= x960 x709) (= (x1284 x774) x2613) (= x854 (x2857 x2885)) (= x3048 (x2428 x2022)) (>= x287 x3112) (= x960 (+ x3112 x2045)) (= (- x1969 x3112) x4154) (= (x1338 64 x39 36) x2893) (>= x39 1) (= (+ x39 1) x1010) (= x2189 (+ 1 x1010)) (= (x1338 64 x1010 100) x2885) (<= x960 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x287 (x2428 x876))))))
(assert (> (x1338 64 x89 6) 10000))
(assert (x320 x2153))
(assert (not (x1229 (x1723 x59 x4093))))
(assert (=> (<= x1053 10000) (= 0 (x2363 x1053))))
(assert (x881 x2257))
(assert (= x2679 (or x1948 x1866)))
(assert (> (x1723 32 x3032) 10000))
(assert (x881 x1142))
(assert (x881 x2212))
(assert (= x879 (and x4018 x3987)))
(assert (=> (>= 10000 x2795) (= 0 (x2363 x2795))))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (not (x1229 (x1338 x2791 x3277 x3682))))
(assert (x881 x679))
(assert (=> (>= 10000 x502) (= (x2363 x502) 0)))
(assert (= 0 (x2363 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x881 x712))
(assert (x881 x3825))
(assert (=> (>= 10000 x2171) (= 0 (x2363 x2171))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x228 x1188 x2250 x3241 x3801)))
(assert (x881 x74))
(assert (x881 x1609))
(assert (= x3336 (x1415 (x1723 32 x3336))))
(assert (x862 x79))
(assert (=> (<= x2390 10000) (= (x2363 x2390) 0)))
(assert (x881 x4071))
(assert (= (x1451 (x2226 x3866 x858 x2769 x2522)) x2769))
(assert (= x2649 (x2164 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291))))
(assert (x881 x3138))
(assert (x881 x3861))
(assert (x881 x3755))
(assert (x881 x1881))
(assert (= (x3455 (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291)) x575))
(assert (x881 x1414))
(assert (= (and x2992 x1279) x3384))
(assert (= x655 (x2229 (x1338 x655 x1109 x4109))))
(assert (= (x3658 (x898 x3829 x715 x4071 x3961 x4010)) x4010))
(assert (x881 x1638))
(assert (= x889 (x1415 (x2761 x1241 x889 x3842 x4212 x3890 x1143))))
(assert (x881 x517))
(assert (x881 x164))
(assert (= x3829 (x2229 (x2761 x3829 x2510 x1242 x495 x938 x3561))))
(assert (x881 x639))
(assert (not (x1229 (x1338 x655 x1109 x4109))))
(assert (x881 x403))
(assert (x881 x2713))
(assert (= x2314 (x1415 (x898 x2268 x2314 x2591 x1124 x3886))))
(assert (= (x2363 (x2761 x813 x3237 x1152 x545 x1582 x3085)) (x2761 x813 x3237 x1152 x545 x1582 x3085)))
(assert (= (x2229 (x1338 64 x214 36)) 64))
(assert (not (x1229 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710))))
(assert (= x3008 (x2164 (x898 x2115 x1500 x3170 x3008 x158))))
(assert (=> (>= 10000 x3835) (= 0 (x2363 x3835))))
(assert (= (x2164 (x2226 x228 x2933 x4131 x540)) x540))
(assert (x881 x450))
(assert (= (x2229 (x1338 64 x3877 7)) 64))
(assert (> (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022) 10000))
(assert (x881 x2416))
(assert (=> (>= 10000 x3603) (= (x2363 x3603) 0)))
(assert (=> (<= x186 10000) (= (x2363 x186) 0)))
(assert (x881 x1087))
(assert (x881 x1410))
(assert (x881 x961))
(assert (x881 x975))
(assert (x881 x2240))
(assert (= (x2363 46442213778836376901753710468615024683576072693327014300388496345503314739200) 0))
(assert (= (x2363 (x1338 64 x3951 7)) (x1338 64 x3951 7)))
(assert (x881 x1789))
(assert (< 10000 (x898 x228 x1188 x2250 x3241 x3801)))
(assert (= x404 (x2164 (x2226 x2115 x2944 x213 x404))))
(assert (x881 x4192))
(assert (x881 x3576))
(assert (= (x2229 (x1338 x569 x4204 x3280)) x569))
(assert (= (x1451 (x898 x655 x598 x3544 x451 x2977)) x3544))
(assert (x881 x1531))
(assert (x881 x2816))
(assert (x881 x3108))
(assert (= x3657 (and (not x3536) x1114)))
(assert (x881 x2633))
(assert (x881 x1556))
(assert (= x2632 (and (not x2746) x3145)))
(assert (x881 x1577))
(assert (= x1915 (and x102 x1139)))
(assert (x881 x2731))
(assert (=> (>= 10000 x2345) (= 0 (x2363 x2345))))
(assert (= (x1415 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) x2014))
(assert (x881 x4288))
(assert (x881 x3573))
(assert (=> (<= x3988 10000) (= 0 (x2363 x3988))))
(assert (= (x2164 (x2226 x2268 x526 x4292 x1748)) x1748))
(assert (= (x1451 (x898 x228 x1188 x2250 x3241 x3801)) x2250))
(assert (x881 x791))
(assert (= x1019 (x1415 (x1338 x3866 x1019 x2599))))
(assert (=> (>= 10000 x3001) (= (x2363 x3001) 0)))
(assert (= (=> (and (= x1078 (x1338 64 x4268 36)) (= false x68) (<= x4268 254) (= x2479 false) (= x3809 (+ 1 x4268)) (= x380 (x411 x1078)) (= (+ x4268 1) x2415)) x2023) x2156))
(assert (x881 x27))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)))
(assert (= (x3658 (x2761 x2790 x2028 x92 x3705 x1183 x2991)) x1183))
(assert (x881 x3656))
(assert (x881 x725))
(assert (x881 x649))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 32 104)))
(assert (x881 x2359))
(assert (< (x1723 x813 x3579) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x768 (and (not x3498) x1775)))
(assert (=> (>= 10000 x688) (= (x2363 x688) 0)))
(assert (not (x1229 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231))))
(assert (x881 x2011))
(assert (x881 x755))
(assert (=> (<= x842 10000) (= (x2363 x842) 0)))
(assert (x881 x3750))
(assert (= (x1415 (x1338 64 x61 11)) x61))
(assert (< 10000 (x898 x2115 x1500 x3170 x3008 x158)))
(assert (= x653 (x1207 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653))))
(assert (> (x898 x655 x598 x3544 x451 x2977) 10000))
(assert (= x1433 (x1415 (x1338 x1712 x1433 x2126))))
(assert (= (x2363 (x1338 64 x3297 36)) (x1338 64 x3297 36)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1723 32 x1997)))
(assert (x741 x3172))
(assert (=> (>= 10000 x2071) (= (x2363 x2071) 0)))
(assert (< 10000 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)))
(assert (x881 x3391))
(assert (x881 x1176))
(assert (= x2392 (x3455 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569))))
(assert (x881 x4008))
(assert (< 10000 (x1338 x1001 x1968 x365)))
(assert (x881 x2016))
(assert (=> (>= 10000 x3579) (= (x2363 x3579) 0)))
(assert (= x604 (x2164 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298))))
(assert (= x3471 (and x3802 (not x392))))
(assert (= x2069 (x2164 (x2226 x1712 x1290 x250 x2069))))
(assert (= (x2363 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (x881 x3404))
(assert (=> (<= x2641 10000) (= (x2363 x2641) 0)))
(assert (< 10000 (x1723 32 x2516)))
(assert (not (x1229 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063))))
(assert (= x2790 (x2229 (x898 x2790 x305 x3753 x3113 x356))))
(assert (> (x1338 64 x1070 6) 10000))
(assert (x881 x2278))
(assert (= x2941 (x1415 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (not (x1229 (x1338 64 x3951 7))))
(assert (= (=> (and (<= 0 x2216) (= (- x3681 x2657) x2322) (= x1853 (x2310 x773)) (= (x2310 x1672) x3668) (<= 1 x531) (= x531 (x2891 x773)) (= (+ x1167 x2657) x2216) (= (x1713 (+ x1721 32)) x2367) (= x3681 (x2310 x1672)) (= (x1713 (+ 4 x4203)) x1721) (= x2338 36) (< (+ x2657 x1167) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x2657 x1853) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (= x773 x3010) x2733) (= x1167 (x4024 x773)) (<= x2657 x3668) (<= x2216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2338 (x988 (- x2367 x4203))) (= x251 x2216)) (and (=> (and (not x2733) (and (= x3695 (x1338 64 x3556 36)) (= (x1284 x3695) x3152) (= x3307 1341992515) (= 36 x177) (<= 1 x773) (>= 127 x1722) (= false x43) (= x2375 (x2891 x876)) (= (= x3152 0) x1801) (>= 1461501637330902918203684832716283019655932542975 x773) (= x39 (+ 1 x3556)) (>= 254 x3556) (= x4210 x1672) (>= x2375 1) (= false x3759) (<= x1722 127) (= x2022 x1672) (= x876 x773) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x3014) (= (+ x3556 1) x1282))) (and (=> (and (= x3305 (= 1 x3152)) (not x1801)) (and (=> (and (= x3643 (= 2 x3152)) (not x3305)) (and (=> (and (not x3643) (= (= 3 x3152) x1621)) (and (=> (and (not x1621) (= (= 4 x3152) x1439)) (and (=> (and (not x1439) (= (= x3152 5) x1781)) (and (=> (and (= x3553 (= x3152 6)) (not x1781)) (and (=> (and x3553 (and (or (and (not x7) (= x2816 0)) (and x7 (and (= x876 x2952) (>= 1461501637330902918203684832716283019655932542975 x2952) (<= 1 x2952)))) (and (= x2617 (x2891 x1672)) (= x370 (x2428 x2022)) (<= 1 x1105) (= (ite x7 1 0) x2816) (= (x2428 x876) x1660) (= x2039 x1243) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x370 x2290)) (<= 1 x39) (>= 127 x3567) (= (x1338 64 x3297 36) x2849) (= (+ x371 1) x3297) (= x1792 x2582) (= x1757 x1251) (= (+ x371 1) x74) (= (x1338 64 x371 36) x2036) (= (x2428 x876) x822) (<= 0 x1538) (>= 127 x3567) (= x2386 (- x1660 x2290)) (>= 251 x39) (= x371 (+ x4198 1)) (= x1538 (+ x2290 x148)) (= x1336 128) (= x829 100) (>= x822 x2290) (= (+ 1 x3297) x1373) (= (x1284 x2114) x2290) (= x148 (x600 x2022)) (<= x1538 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x3297 1) x293) (= (x1338 64 x4198 36) x3230) (= (x2891 x2022) x1105) (= (x1284 x2036) x1370) (= x2114 (x1338 64 x39 36)) (= x4198 (+ x39 1)) (= x7 (not (= x876 x1672))) (= (x1284 x2849) x1757) (= x797 486791245) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x4257) (= x2985 x1251) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x148 x2290)) (= (x1284 x3230) x4179) (= x1370 x2582) (>= x2617 1) (= x2212 x1538) (= x2981 false) (= x4179 x2039) (= x1357 (+ x4198 1)) (= x2755 false) (= (+ 1 x39) x1726)))) x2815) (=> (and (= x1794 (= x3152 7)) (not x3553)) (and (=> (and x1794 (and (= x1294 x4000) (= 36 x625) (= x4135 2770781680) (= x876 x2952) (>= 127 x2924) (>= 127 x2924) (= x3225 false) (= x706 (+ x39 1)) (>= 254 x39) (<= x1294 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2952) (= 128 x910) (<= 1 x3077) (>= x39 1) (<= 1 x2952) (= x3847 (x2891 x1672)) (= x2231 (x2428 x1672)) (= x1073 (> x2231 0)) (>= x3847 1) (= (x2891 x2022) x3077) (= x1509 false) (= x2705 (+ x39 1)) (= x742 (x1338 64 x39 2)) (= x2125 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= (x1199 x742) x1294))) (and (=> (and (not x1073) (and (= x2693 x1354) (= x690 (+ x39 1)) (= x114 x1125) (= x2097 x79) (= x2022 x1758) (= x2309 x2843))) x564) (=> (and x1073 (and (and (>= x2478 1) (= x195 (x2428 x1294)) (= (>= (x3183 x1672) x3875) x4028) (= (x3554 x1294) x2237) (= x1021 (x2428 x1672)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x195 x2231)) (= x2578 (= 0 x4250)) (= x2819 x2265) (>= x2265 0) (= x2616 (x2428 x1672)) (= (x2368 x1672) x3875) x4028 (>= 4294967295 x4250) (= (x2368 x1294) x1764) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2265) (>= x2616 x2231) x4049 (< (+ x2231 x2237) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x2237 x2231) x2265) (= 128 x1400) (= (= (x3183 x1294) x1764) x4049) (= (- x1021 x2231) x636)) (or (and (and (= x2747 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3899)) (<= 1 x2747) (<= x2747 4294967358) (= (+ x4250 63) x3899)) (not x2578)) x2578))) x3436))) (=> (and (and (or (and (and (= (x1338 64 x39 36) x254) (= x783 x1410) (= (+ 1 x39) x2204) (= x3477 false) (<= x3980 127) (>= 1461501637330902918203684832716283019655932542975 x2952) (<= 1 x724) (= x2589 x466) (= 1313998243 x3795) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x424) (= x876 x2952) (>= x2952 1) (= (x1284 x254) x2589) (= x3611 (+ x39 1)) (>= x2589 100000) (= x1048 false) (>= x39 1) (= x2732 128) (<= x3980 127) (= x3160 36) (= x3765 (+ x39 1)) (= (x2891 x2022) x724) (<= x39 254) (<= 1 x3011) (= x3011 (x2891 x1672)) (= x1410 (x1284 x254))) x1150) (and (not x1150) (and (= x3685 x783) (= x39 x3765)))) (= (= 8 x3152) x1150)) (not x1794)) x3634))))) (=> (and x1781 (and (= x116 (x2869 x3245)) (= (x1338 64 x1573 12) x527) (= x3478 (ite (> x3881 0) x1689 (x265 127 x1689))) (= x180 (x1284 x1737)) (= x1689 (div x1125 2)) (= x99 (x988 (- x3881 (mod (ite (> 32 x3478) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x39 252) (>= 18446744073709551615 x3537) (>= x39 1) (= x2525 (+ x164 1)) (= (x1338 64 x164 6) x3245) (= x348 (= 0 x1746)) (= (+ x1573 1) x3325) (= x164 (+ 1 x39)) (<= x116 65535) (= (x289 x527) x3537) (= x1161 (+ x39 1)) (= x1746 (x265 1 x1125)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x99) (= 1 x99)) (= (x1338 64 x39 36) x1737) (= (+ x1573 1) x2909) (= x1573 (+ x164 1)) (= (x265 1 x1125) x3881))) (and (=> (and (not x348) (and (= x2331 (x1723 32 103)) (= (> x3478 0) x2462))) (and (=> x2462 x2923) (=> (and (not x2462) (= x1732 0)) x1422))) (=> (and x348 (and (= (+ 292 x3222) x3157) (or (= x3222 32) (= 0 x3222)) (= (* 32 (ite (not (= 0 x3478)) 1 0)) x3222) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1125) x3724))) x850))))) (=> x1439 x1664))) (=> (and (and (and (= x1117 68) (= x4016 3957931183) (= x773 x876) (= 100 x3395) (= 0 x276) (= x3061 x1928) (<= 1 x773) (= (x2891 x1672) x1605) (= x1604 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= (+ 1 x3525) x2271) (<= x2988 127) (= x643 (+ x3525 1)) (= false x1392) (= false x1940) (= 486791245 x1262) (>= x176 1) (= x487 (x1338 64 x39 36)) (= x2166 false) (= x1486 false) (= x1897 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x1963 (x1338 64 x3525 100)) (<= 1 x39) (= (+ x39 1) x1258) (>= 253 x39) (= (+ x39 1) x3525) (>= x1975 1) (= x3835 x4284) (= x2661 (x1338 64 x3835 11)) (= x3061 x538) (= x3835 (x1284 x487)) (= x538 x4284) (= (x1338 64 x3835 11) x2566) (= (x1338 64 x3835 11) x1703) (= x2812 false) (= x1201 0) (= x1975 (x2891 x2022)) (>= 1461501637330902918203684832716283019655932542975 x773) (>= x943 1) (= x1918 128) (>= 127 x2198) (= (x2857 x1963) x2772) (= x3144 0) (= x176 (x2891 x1672)) (>= 127 x2198) (= x4095 (x1427 x1703)) (= (+ x2661 2) x2138) (>= x1605 1) (= x2029 x2772) (>= 127 x2988) (= x35 128) (= x519 0) (= x4095 1) (= x943 (x2891 x1672))) (or (and x1486 (and (<= x2952 1461501637330902918203684832716283019655932542975) (= (ite (not (= x2952 x1672)) 1 0) x2083))) (and (= (ite x1486 1 0) x2083) (not x1486)))) x1621) x3726))) (=> (and (and (= (x988 (- x4087 (mod (ite (< x857 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4219) (= x3209 (+ 1 x2729)) (>= 18446744073709551615 x1976) (= (+ x2729 1) x257) (= (div x1125 2) x1885) (= x3074 (+ 1 x39)) (<= x39 253) (= (= x384 0) x2063) (= x384 (x265 1 x1125)) (= (x1338 64 x39 6) x1017) (or (= x4219 1) (= x4219 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x2729 (+ x39 1)) (= (x265 1 x1125) x4087) (= (ite (< 0 x4087) x1885 (x265 127 x1885)) x857) (= (x289 x1536) x1976) (= (x2869 x1017) x665) (= (x1338 64 x2729 12) x1536) (<= 1 x39) (<= x665 65535)) x3643) (and (=> (and (and (= (< 0 x857) x2712) (= x2324 (x1723 32 103))) (not x2063)) (and (=> (and (= 0 x284) (not x2712)) x2463) (=> x2712 x3697))) (=> (and x2063 (and (= x2888 (* 32 (ite (not (= x857 0)) 1 0))) (= x672 (+ 292 x2888)) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1125) x2611) (or (= x2888 32) (= 0 x2888)))) x3319))))) (=> (and (and (= x193 (x988 (- x3015 (mod (ite (< x4270 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3853 (x1338 64 x39 6)) (= x2642 (+ x2030 1)) (= x1867 (+ x2030 1)) (= (x1338 64 x2030 12) x4061) (or (= x193 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x193)) (= x3015 (x265 1 x1125)) (= x4270 (ite (> x3015 0) x4078 (x265 127 x4078))) (>= 253 x39) (= (x289 x4061) x4019) (<= x3877 65535) (= (+ 1 x39) x2030) (= x1537 (+ 1 x39)) (= (= x890 0) x1064) (= x4078 (div x1125 2)) (= (x2869 x3853) x3877) (<= 1 x39) (= (x265 1 x1125) x890) (<= x4019 18446744073709551615)) x3305) (and (=> (and (not x1064) (and (= (x1723 32 103) x1980) (= x3023 (< 0 x4270)))) (and (=> (and (= 0 x1973) (not x3023)) x1516) (=> x3023 x2507))) (=> (and (and (= (+ x3532 292) x1469) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1125) x3515) (or (= 0 x3532) (= 32 x3532)) (= x3532 (* 32 (ite (not (= x4270 0)) 1 0)))) x1064) x2090))))) (=> (and (and (= (x2869 x4237) x732) (>= 1461501637330902918203684832716283019655932542975 x2952) (>= x3398 100000) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x2523) (= x1851 x732) (= x2197 (+ 1 x3059)) (= x4237 (x1338 64 x3573 6)) (= (x1199 x1783) x395) (<= x771 127) (= x1216 x79) (= (+ x39 1) x3573) (<= 1 x4281) (= x3946 (+ x2197 1)) (= x1783 (x1338 64 x3059 2)) (<= x1613 1461501637330902918203684832716283019655932542975) (= x3060 x523) (= x4281 (x2891 x2022)) (= x1814 (+ x3059 1)) (= x2456 x1613) (>= x2952 1) (= x1125 x301) (= x207 x2843) (= x1769 (+ 1 x3573)) (= x1129 (x1338 64 x2197 36)) (= x1041 132) (= x3059 (+ 1 x3573)) (= (x1338 64 x39 2) x2158) (= x4118 x3396) (= x1892 x2146) (= x3396 (x1199 x2158)) (= false x660) (= x2494 3812630263) (= x3748 x2449) (= x2146 (x1284 x1129)) (= x393 x2952) (>= 65535 x732) (= x2693 x1611) (= x2585 (+ x39 1)) (= x3398 (x1284 x1129)) (= x395 x3701) (>= 1461501637330902918203684832716283019655932542975 x3396) (<= x771 127) (= (+ 1 x2197) x10) (= x876 x2952) (= x1613 (x1199 x1783)) (= x3360 x2289) (>= x39 1) (= (x2891 x1672) x1261) (= (x1199 x2158) x2449) (>= x1261 1) (= x4119 false) (= x2022 x3837) (= x2289 (x2869 x4237)) (= x3539 x246) (= 128 x2137) (>= 251 x39) (= x329 x3398) (= x1440 (+ x2197 1))) x1801) x726))) (=> (and (and (= x3832 x3060) (= x246 x2502) (>= 127 x2254) (= (x1713 (+ x2657 x649)) x3535) (= x2693 x2605) (= x4140 x995) (= (x1338 64 x1672 1) x808) (>= 127 x2254) (= x1589 36) (<= 1 x2150) (= x3556 x1697) (not (< x3535 x649)) (= (x1830 x808) x649) (= x509 x2022) (= x1275 x3685) (= x773 x2873) (= x2907 false) (= x1306 x2183) (= (x2891 x3010) x2150) (= x1142 1341992515) (= x1672 x3380) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x3379) (= x2843 x4149) (= x79 x2855) (= x2055 false) (= x2952 x3552) (= x3592 x1125)) x2733) x2501))) x4226))
(assert (x881 x1485))
(assert (not (x1229 (x1338 x2115 x2650 x594))))
(assert (=> (<= x3321 10000) (= (x2363 x3321) 0)))
(assert (< 10000 (x1723 x3866 x4076)))
(assert (x881 x2772))
(assert (x881 x801))
(assert (x881 x28))
(assert (= (x2363 4294967295) 0))
(assert (=> (<= x1008 10000) (= (x2363 x1008) 0)))
(assert (x881 x66))
(assert (not (x1229 (x1338 x1712 x1433 x2126))))
(assert (x881 x119))
(assert (= (x2363 (x2226 x3866 x858 x2769 x2522)) (x2226 x3866 x858 x2769 x2522)))
(assert (x881 x1588))
(assert (not (x1229 (x898 x813 x3017 x1180 x2298 x244))))
(assert (x862 x2506))
(assert (< 10000 (x1338 64 x39 6)))
(assert (x881 x338))
(assert (= (x3658 (x2761 x2791 x3954 x4112 x570 x2666 x136)) x2666))
(assert (x881 x3214))
(assert (x1517 x1689))
(assert (x881 x366))
(assert (= (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849) (x2363 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849))))
(assert (x881 x1125))
(assert (x881 x3425))
(assert (= (=> (and (= (not (< 128 x2217)) x1016) (= (x1342 x2745) x4220) (= x2745 (x1713 (+ x1004 96))) (= (x1713 (+ x3836 96)) x3841)) (and x3340 x1016)) x4235))
(assert (= (and (not x1781) x1453) x4029))
(assert (=> (>= 10000 x3147) (= (x2363 x3147) 0)))
(assert (x881 x3809))
(assert (= x900 (and (not x872) x3384)))
(assert (x881 x2150))
(assert (> (x1338 64 1 x3007) 10000))
(assert (x881 x1662))
(assert (> (x898 x569 x6 x553 x3235 x44) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x2790 x305 x3753 x3113 x356)))
(assert (= x4013 (and x3985 x3551)))
(assert (x881 x2431))
(assert (= (x3455 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) x2076))
(assert (=> (>= 10000 x433) (= (x2363 x433) 0)))
(assert (= x614 (=> (and (= x1653 150) (= (x1713 (+ x503 (mod (+ x1164 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3180) (= x306 (x579 x3690)) (= (* x2514 32) x3957) (= (x1713 (+ 32 x3690)) x559) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x503) (= (x1713 (+ x2396 32)) x3549) (>= x503 1) (= x2007 (x1713 (+ x4148 32))) (<= x3690 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x1713 (+ x1297 x2293)) x223) (= x3597 (div (+ x1297 31) 32)) (= x1164 (* 32 x3597)) (= x4148 (x1713 (+ 128 x2396))) (= (> x306 0) x4285) (= x503 (x1713 (+ (mod (+ 32 x3957) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3690))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3690) (= (x1713 (+ x503 32)) x2293) (< x3690 x503) (<= x3690 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x2396 (x1713 (+ x3180 36))) (< x503 x3180) (= x2514 (div (+ 31 x2268) 32)) (= x1677 (x1713 (+ x559 x2268))) (<= 2 x3180)) (and (=> (and (and (= (> x306 32) x2606) (= x754 (x572 x559))) x4285) (and (=> (and x2606 (and (= x2629 (< 64 x306)) (= x926 (x57 x3166)) (= (x1713 (+ x559 32)) x3166) (= (x1713 (+ x2007 32)) x3704))) (and (=> (not x2629) x437) (=> (and (and (= (x1713 (+ 64 x2007)) x2829) (= x1789 (x2744 x820)) (= x1911 (< 96 x306)) (= (x1713 (+ 64 x559)) x820)) x2629) (and (=> (not x1911) x437) (=> x1911 x567))))) (=> (not x2606) x437))) (=> (not x4285) x437)))))
(assert (x881 x2030))
(assert (= x1146 (x3658 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (=> (>= 10000 x3113) (= 0 (x2363 x3113))))
(assert (x881 x1357))
(assert (= (and x1150 x1069) x314))
(assert (x881 x1262))
(assert (not (x1229 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (= (x2229 (x898 x59 x4037 x1091 x577 x26)) x59))
(assert (=> (<= x2510 10000) (= (x2363 x2510) 0)))
(assert (= (and (not x1678) x879) x557))
(assert (= (x1723 32 104) (x2363 (x1723 32 104))))
(assert (= x1001 (x2229 (x898 x1001 x733 x3095 x4259 x386))))
(assert (x881 x4217))
(assert (x881 x1308))
(assert (= x3997 (x1207 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997))))
(assert (= (=> (and (= x928 x1145) (= x778 x4150) (= x2774 x1414) (= x3185 x1429) (= x77 x1130) (= x3205 x765) (= x280 x1983) (= x1303 x1049) (= x1210 x2176) (= x1445 x777) (= x2957 x1314) (= x2453 x2177) (= x1510 x4163)) x1208) x434))
(assert (x881 x2202))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005)))
(assert (= (x2229 (x1723 x1001 x3828)) x1001))
(assert (= (=> (and (= x3304 (x265 1 x2855)) (= x4117 (- x3816 132)) (= x2053 (+ x3816 32)) (= (= 0 x3029) x2468) (= x4192 (ite (> x3304 0) x3119 (x265 127 x3119))) (= (x265 1 x2855) x3029) (= x3119 (div x2855 2)) (= (x988 (- x3304 (mod (ite (< x4192 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x403) (or (= x403 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x403))) (and (=> (and x2468 (and (= x3364 (* 32 (ite (not (= 0 x4192)) 1 0))) (= x321 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2855)) (= x3548 (+ x3364 x2053)) (or (= 0 x3364) (= 32 x3364)))) x667) (=> (and (and (= x3441 (x1723 32 104)) (= x4275 (< 0 x4192))) (not x2468)) (and (=> x4275 x945) (=> (and (not x4275) (= 0 x3348)) x2658))))) x271))
(assert (= (x1451 (x898 x569 x6 x553 x3235 x44)) x553))
(assert (= (x2363 (x1723 x3829 x3461)) (x1723 x3829 x3461)))
(assert (= x161 (and x1861 x620)))
(assert (x881 x1814))
(assert (x881 x1521))
(assert (x881 x3659))
(assert (x881 x1613))
(assert (> (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569) 10000))
(assert (< 10000 (x1723 32 104)))
(assert (x881 x3015))
(assert (= (x2229 (x1338 64 x3556 36)) 64))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x881 x257))
(assert (=> (<= x1091 10000) (= 0 (x2363 x1091))))
(assert (x881 x226))
(assert (x881 x3963))
(assert (x881 x1921))
(assert (x881 x749))
(assert (= x1949 (x2229 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (x881 x2826))
(assert (x881 x326))
(assert (= (and (not x4014) x3811) x1101))
(assert (x881 x3059))
(assert (= x3835 (x1415 (x1338 64 x3835 11))))
(assert (= x4071 (x1451 (x898 x3829 x715 x4071 x3961 x4010))))
(assert (x881 x1537))
(assert (< 10000 (x898 x1712 x1939 x3944 x1914 x954)))
(assert (x881 x2901))
(assert (> (x1338 64 x4140 5) 10000))
(assert (x881 x3876))
(assert (= x1124 (x2164 (x898 x2268 x2314 x2591 x1124 x3886))))
(assert (x881 x3488))
(assert (x881 x203))
(assert (x881 x976))
(assert (x881 x3980))
(assert (= (=> (= (+ 292 x4127) x2728) x1) x756))
(assert (= (x2363 (x1723 x813 x3579)) (x1723 x813 x3579)))
(assert (x881 x1280))
(assert (= (x2229 (x898 x1241 x2959 x2355 x1515 x2531)) x1241))
(assert (= (x898 x2791 x1950 x2087 x546 x4128) (x2363 (x898 x2791 x1950 x2087 x546 x4128))))
(assert (x881 x1592))
(assert (= (x1451 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017)) x2446))
(assert (x881 x3309))
(assert (= (x3895 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295)) x2295))
(assert (= 64 (x2229 (x1338 64 x3224 10))))
(assert (< 10000 (x1338 64 x4198 36)))
(assert (x881 x3024))
(assert (= x1115 (or x3206 x3896)))
(assert (= (x1415 (x2226 x1001 x3416 x153 x2807)) x3416))
(assert (x881 x3999))
(assert (=> (<= x3842 10000) (= (x2363 x3842) 0)))
(assert (x881 x2528))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x881 x1769))
(assert (= (and x2129 x80) x2281))
(assert (x881 x1156))
(assert (= (x3658 (x898 x3866 x433 x155 x2455 x842)) x842))
(assert (not (x1229 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298))))
(assert (= 0 (x2363 1461501637330902918203684832716283019655932542975)))
(assert (x881 x2211))
(assert (< 10000 (x1723 x655 x626)))
(assert (x881 x3491))
(assert (= x1949 (x2229 (x1338 x1949 x3815 x290))))
(assert (= (x1451 (x1338 x1241 x4030 x1619)) x1619))
(assert (x881 x2342))
(assert (x881 x1161))
(assert (x881 x3190))
(assert (x881 x1860))
(assert (x881 x4139))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x4179 11)))
(assert (x881 x3178))
(assert (= x1697 (x1415 (x1338 64 x1697 36))))
(assert (x881 x3905))
(assert (x881 x1437))
(assert (= x451 (x2164 (x898 x655 x598 x3544 x451 x2977))))
(assert (x881 x1690))
(assert (x881 x3953))
(assert (x881 x4138))
(assert (x881 x2122))
(assert (=> (<= x1010 10000) (= 0 (x2363 x1010))))
(assert (=> (>= 10000 x4043) (= (x2363 x4043) 0)))
(assert (= x2940 (x1451 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (x881 x1010))
(assert (= (x2226 x2790 x1526 x2920 x3098) (x2363 (x2226 x2790 x1526 x2920 x3098))))
(assert (= (and x191 x302) x2835))
(assert (= 1 (x1415 (x1338 64 1 x3804))))
(assert (x881 x2561))
(assert (not (x1229 (x1338 64 x116 7))))
(assert (x881 x502))
(assert (x881 x1442))
(assert (> (x2761 x228 x565 x1946 x2505 x3139 x2202) 10000))
(assert (x881 x889))
(assert (= x3647 (and (not x3122) x3243)))
(assert (x881 x1146))
(assert (= x4160 (or x2509 x1688)))
(assert (x881 x2155))
(assert (= (x1338 64 x33 2) (x2363 (x1338 64 x33 2))))
(assert (=> (>= 10000 x3706) (= 0 (x2363 x3706))))
(assert (= x942 (and x3698 (not x1873))))
(assert (x881 x3648))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x1001 x1968 x365)))
(assert (= x3262 x2286))
(assert (= (x2164 (x2226 x2790 x1526 x2920 x3098)) x3098))
(assert (=> (>= 10000 x929) (= 0 (x2363 x929))))
(assert (x881 x2628))
(assert (= (x2363 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)) (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918)))
(assert (=> (>= 10000 x606) (= 0 (x2363 x606))))
(assert (x881 x1134))
(assert (= (x2363 3628442803) 0))
(assert (= x3121 (x1415 (x2226 x1949 x3121 x2734 x1084))))
(assert (= x144 (x1207 (x2915 x1949 x3718 x2446 x4291 x2858 x2076 x144 x4017))))
(assert (x881 x192))
(assert (x881 x4243))
(assert (< (x1338 64 x371 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x50 (=> (and (= (ite (< 0 x3983) x1286 (x265 127 x1286)) x2901) (= x1347 (div (+ 31 x2901) 32)) (<= x3492 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3492 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1338 64 x4179 11) x1140) (= x1232 (x988 (- x3983 (mod (ite (< x2901 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2074 (x3248 x618)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3492) (or (= x1232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1232)) (= (x1338 64 x4179 11) x1217) (= x1997 (x1338 64 x4140 3)) (= x3492 (x1713 (+ x309 32))) (= (x342 x4022) x3201) (= (x486 x1997) x1627) (= (x1713 (+ x721 32)) x110) (< x110 x3492) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1365) (= (* x1347 32) x2898) (= x3451 (x988 (- x3492 x110))) (= x618 (+ 2 x1217)) (= x3825 (x988 (- x3451 32))) (= (x1713 (+ x1539 2)) x309) (< x1365 x110) (= x1225 (x1713 (+ x3492 (mod (+ x2898 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1338 64 x4179 11) x2220) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1365) (= (= x2901 0) x1148) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1365) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1365) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1365)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1365) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1365)) (>= x1225 1) (= x4022 (+ 1 x1140)) (= (x988 (- x3740 32)) x3663) (= (x988 (- x110 x1365)) x3740) (= (x1713 (+ 32 x3492)) x1267) (= (div x1627 2) x1286) (> x1225 x3492) (= (x1713 (+ 32 x641)) x721) (= x641 (x1713 (+ 32 x1365))) (or (and (>= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639776) (<= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1365) (>= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x1365) (>= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639841) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x1365) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1365))) (= (x1713 (+ 32 x110)) x1539) (= x2698 0) (= (x265 1 x1627) x3983)) (and (=> x1148 x2249) (=> (and (not x1148) (= (< 31 x2901) x1827)) (and (=> (and (and (= x4194 (div x2934 256)) (= (* x4194 256) x1641) (= x2934 (x486 x1997))) (not x1827)) x2249) (=> (and (and (= (x2496 x1800) x2579) (= (x1713 (+ x2901 x1267)) x4202) (= (+ x1800 1) x2999) (= x927 (x1713 (+ 32 x1267))) (= (< x927 x4202) x3259) (= x1800 (x1723 32 x1997))) x1827) (and (=> x3259 x2592) (=> (not x3259) x521)))))))))
(assert (x1735 x2389))
(assert (x881 x1405))
(assert (x881 x985))
(assert (x881 x948))
(assert (= (x2229 (x1338 x3866 x1019 x2599)) x3866))
(assert (=> (>= 10000 x2790) (= (x2363 x2790) 0)))
(assert (= x3866 (x2229 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (= x3666 (and x191 (not x302))))
(assert (x881 x3395))
(assert (= x1961 (x1415 (x1723 x1712 x1961))))
(assert (x881 x4280))
(assert (< (x898 x1241 x2959 x2355 x1515 x2531) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1229 (x1338 x813 x3309 x640))))
(assert (< 10000 (x1338 64 x2197 36)))
(assert (=> (<= x3735 10000) (= (x2363 x3735) 0)))
(assert (not (x1229 (x898 x59 x4037 x1091 x577 x26))))
(assert (= x443 (x1415 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005))))
(assert (x881 x2968))
(assert (=> (<= x2014 10000) (= (x2363 x2014) 0)))
(assert (x881 x1993))
(assert (x881 x2985))
(assert (x881 x692))
(assert (x881 x2189))
(assert (= (x2363 x691) (x2363 (+ x691 1))))
(assert (< (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x4270))
(assert (x1735 x3592))
(assert (x881 x3903))
(assert (= x2383 (x3895 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (< (x898 x59 x4037 x1091 x577 x26) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x268))
(assert (x881 x970))
(assert (x881 x1479))
(assert (x881 x2484))
(assert (= x513 (or x1502 x916 x1765)))
(assert (=> (<= x1567 10000) (= 0 (x2363 x1567))))
(assert (= (=> (and (= x1098 (not (< 32 x3214))) (= (x3696 x2113) x2269)) (and x1098 (=> (= 32 x3640) x4137))) x1601))
(assert (x881 x4009))
(assert (= x356 (x3658 (x898 x2790 x305 x3753 x3113 x356))))
(assert (x881 x1620))
(assert (x881 x3408))
(assert (x881 x3725))
(assert (= x2753 (x1415 (x4162 x1712 x2753 x3368 x705 x1662 x3151 x3353))))
(assert (= (and x1108 x2574) x3282))
(assert (x1229 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (= x1375 (=> (and (= x652 (= 0 x3193)) (= (x3233 516) x3193)) (and (=> (and x652 (and (= x2452 false) (= x2780 (x1713 (+ x3934 4))) (= x2674 (x1713 (+ 32 x2780))) (= x1401 (x1713 (+ x2674 32))) (= 132 x1671) (= x4254 true) (= x2418 (x1713 (+ 32 x1401))))) x3489) (=> (and (and (= (x76 x2922) x3782) (= (> x2321 (ite (= 0 x3782) 10000 x3782)) x476) (= (x1338 64 x4140 5) x2922) (= (x1055 354) x2321)) (not x652)) (and (=> (and (not x476) (and (= (x2891 x2002) x1831) (= x3167 (x1713 (+ 32 x1071))) (= (x1713 (+ 31 x3276)) x3412) (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3412) x1110) (= (x988 (- x474 x3934)) x2736) (= x268 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2867)) (= x2867 (x1713 (+ 31 x1711))) (= (x1713 (+ x182 x146)) x2474) (= x3382 (x1713 (+ x172 32))) (= x2343 (x1713 (+ 192 x1964))) (= x1071 (x1713 (+ x1964 32))) (= (x1713 (+ 32 x1253)) x172) (= x1176 (x1713 (+ 32 x2343))) (= x2690 (x1055 354)) (= (x1713 (+ 4 x3934)) x1964) (= x3468 (x1713 (+ 32 x2474))) (= x474 (x1713 (+ x1110 x3468))) (= (x1713 (+ 32 x3167)) x1253) (= (x988 (- x2474 x1964)) x582) (= (x3233 516) x1711) (= x3276 (x2607 450)) (= x1476 (x1713 (+ 31 x2690))) (= x182 (x1713 (+ x3315 32))) (= x3526 (x988 (- x3315 x1964))) (= x3315 (x1713 (+ x268 x1176))) (= x146 (x265 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1476)) (= x4021 (= 0 x1831)))) (and (=> (and (and (= x873 (x2428 x1672)) (= (x2428 x2002) x1896) (= x469 (>= x873 x456)) (= x3219 (< (+ x1896 x456) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3703 (and x469 x3219))) (not x4021)) (and (=> (and (and (= x3142 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= 0 x867) (= (+ x1012 x456) x347) (>= 127 x135) (< (+ x1012 x456) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3440 (<= 0 x347) (= x350 x2736) (= x2792 3313512704) (= (- x3849 x456) x2916) (= false x633) (= x3526 x2264) (= (x2891 x1679) x1323) (= x1012 (x586 x2002)) (= x4140 x2826) (>= x350 420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x347) (= x2771 false) (= (= (x1772 196) x1711) x3440) (= (x2428 x1672) x3849) (<= x135 127) (>= x1323 1) (= x347 x374) (<= 420 x2736) (= x582 x3880) (= x37 192) (= x1672 x3182) (= (or (> (- x350 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= (- x350 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 192 (- x350 4)))) x3907)) x3703) (and (=> x3907 x723) (=> (and (not x3907) (= true x302)) (and (=> (and (= x1554 (and (< 227 x350) (= true (<= x350 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x302) (and (=> (and (and (= (x1706 196) x3626) (= x2970 (< 18446744073709551615 x3626))) x1554) (and (=> (and (not x2970) (and (= (x1713 (+ 228 x3626)) x1795) (= x990 (< x350 x1795)))) (and (=> (and (not x990) (= (< 18446744073709551615 x3526) x2200)) (and (=> (and (and (= (x1713 (+ x3302 31)) x1438) (= x785 (or (and (= (<= x350 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1438 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x350 x1438)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x350) (> x1438 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x1713 (+ x3526 4)) x3302)) (not x2200)) (and (=> (not x785) x863) (=> (and x785 (and (= x1873 (> x449 18446744073709551615)) (= x449 (x1706 x3302)))) (and (=> x1873 x710) (=> (and (and (= (x1713 (+ 32 x3302)) x236) (= x355 (< x350 x3335)) (= (x1713 (+ x449 x236)) x3335)) (not x1873)) (and (=> (and (not x355) (= (> x582 18446744073709551615) x892)) (and (=> x892 x723) (=> (and (and (= (x1713 (+ x1141 31)) x243) (= (or (and (= (<= x350 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243)) (> x350 x243)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243) (<= x350 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x3787) (= (x1713 (+ 4 x582)) x1141)) (not x892)) (and (=> (and x3787 (and (= x964 (> x2261 18446744073709551615)) (= x2261 (x1706 x1141)))) (and (=> (and (not x964) (and (= x2239 (x1713 (+ x1141 32))) (= x1796 (x1713 (+ x2239 x2261))) (= (> x1796 x350) x2550))) (and (=> (and (and (= x1350 x1473) (= x1159 x2182) (= x2752 x1835) (= x2431 x3788) (= x2 x3470) (= x3482 x3523) (= x96 x2725) (= x956 x712) (= x1917 x2545) (= x3207 x3995) (= x2682 x1128) (= x2993 x2013) (= 1 x4156) (= x405 x2002)) (not x2550)) x3213) (=> x2550 x2874))) (=> x964 x710))) (=> (not x3787) x863))))) (=> x355 x2874))))))) (=> x2200 x723))) (=> x990 x2874))) (=> x2970 x710))) (=> (not x1554) x863))) (=> (not x302) x723))))) (=> (and (not x3703) (and (= x2722 x956) (= x1296 x2545) (= x420 x3482) (= x1350 x775) (= x2 x3600) (= x1395 x1159) (= x3995 x1047) (= x2993 x3006) (= x4264 x96) (= 0 x1240) (= x1128 x3093) (= x2144 x2002) (= x3312 x3788) (= x2836 x1835))) x3531))) (=> (and x4021 (and (= x1002 true) (= 0 x1671) (= false x1607))) x3489))) (=> (and (and (= true x982) (= (x1713 (+ 32 x3403)) x3965) (= x3403 (x1713 (+ x2868 32))) (= x2868 (x1713 (+ x3934 4))) (= x1671 100) (= x3387 false)) x476) x3489)))))))
(assert (x881 x2312))
(assert (= 0 (x2363 35425322552009646506518338594398286811668114190755561836384294568426616127488)))
(assert (x881 x3770))
(assert (x881 x2671))
(assert (= (and x3794 x1505) x1382))
(assert (x881 x198))
(assert (= (x2164 (x2226 x813 x3055 x3250 x899)) x899))
(assert (x881 x172))
(assert (= (x1415 (x1338 64 x2729 12)) x2729))
(assert (not (x1229 (x1338 64 x39 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)))
(assert (x881 x1820))
(assert (x881 x337))
(assert (= x4268 (x1415 (x1338 64 x4268 36))))
(assert (x881 x2097))
(assert (x881 x1180))
(assert (x881 x2329))
(assert (x881 x1277))
(assert (x881 x548))
(assert (x881 x628))
(assert (x881 x1433))
(assert (= 7 (x1451 (x1338 64 x116 7))))
(assert (x881 x2963))
(assert (=> (<= x2444 10000) (= (x2363 x2444) 0)))
(assert (= x4001 (x1451 (x4162 x228 x3391 x4001 x3797 x435 x3052 x653))))
(assert (= x334 (and x1621 x2334)))
(assert (x881 x62))
(assert (x862 x2389))
(assert (x881 x165))
(assert (= x3013 (x2164 (x2761 x1712 x3175 x1121 x3013 x125 x980))))
(assert (not (x1229 (x2761 x813 x3237 x1152 x545 x1582 x3085))))
(assert (x881 x923))
(assert (=> (>= 10000 x1121) (= 0 (x2363 x1121))))
(assert (= 1 (x1415 (x1338 64 1 x3007))))
(assert (= (x2229 (x1338 64 x1010 100)) 64))
(assert (x881 x1281))
(assert (x881 x686))
(assert (< 10000 (x2761 x3829 x2510 x1242 x495 x938 x3561)))
(assert (x881 x2049))
(assert (= 0 (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x2226 x569 x1325 x3903 x3355) (x2363 (x2226 x569 x1325 x3903 x3355))))
(assert (x881 x530))
(assert (< 10000 (x2226 x2790 x1526 x2920 x3098)))
(assert (= (x1415 (x1338 x569 x4204 x3280)) x4204))
(assert (= 0 (x2363 2177969240)))
(assert (= x1241 (x2229 (x1338 x1241 x4030 x1619))))
(assert (= x1203 (or (and x391 x784) (and x2048 x3960))))
(assert (= x533 (x3658 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635))))
(assert (=> (<= x326 10000) (= (x2363 x326) 0)))
(assert (= x2424 (and x1798 (not x1457))))
(assert (not (x1229 (x1338 64 x2197 36))))
(assert (x881 x720))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2226 x59 x561 x198 x4009)))
(assert (x881 x2017))
(assert (x881 x1510))
(assert (= 0 (x2363 3313512704)))
(assert (x881 x1428))
(assert (= x33 (x1415 (x1338 64 x33 2))))
(assert (x881 x1210))
(assert (x320 x168))
(assert (x1229 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= x813 (x2229 (x2226 x813 x3055 x3250 x899))))
(assert (= x2302 (x2164 (x2226 x3829 x2706 x3083 x2302))))
(assert (x881 x2776))
(assert (x881 x1816))
(assert (x881 x1900))
(assert (=> (>= 10000 x3803) (= 0 (x2363 x3803))))
(assert (x881 x800))
(assert (= (x2229 (x2761 x3866 x2802 x992 x3706 x2800 x3786)) x3866))
(assert (x881 x2045))
(assert (x881 x1132))
(assert (= x1847 (x1415 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295))))
(assert (= (x2363 3957931183) 0))
(assert (x881 x2667))
(assert (x881 x103))
(assert (x881 x2532))
(assert (=> (>= 10000 x2918) (= 0 (x2363 x2918))))
(assert (=> (>= 10000 x545) (= 0 (x2363 x545))))
(assert (x881 x3942))
(assert (x881 x166))
(assert (x881 x1779))
(assert (x881 x1282))
(assert (x881 x4232))
(assert (x881 x1732))
(assert (= x3556 (x1415 (x1338 64 x3556 36))))
(assert (x881 x4094))
(assert (x881 x503))
(assert (x881 x3806))
(assert (= (x3658 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383)) x1698))
(assert (x881 x605))
(assert (= x3637 (x3658 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511))))
(assert (x881 x1672))
(assert (= x3092 (=> (and (= (x2496 x1111) x3584) (= x3107 (not (> x2557 224)))) (and x585 x3107))))
(assert (= x2268 (x2229 (x2761 x2268 x518 x1132 x951 x3129 x2757))))
(assert (= (and (not x562) x231) x253))
(assert (= 0 (x2363 1914215)))
(assert (= (x2229 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x228))
(assert (= x2937 (x1415 (x1338 x228 x2937 x203))))
(assert (x881 x753))
(assert (=> (>= 10000 x2706) (= (x2363 x2706) 0)))
(assert (x881 x3961))
(assert (=> (>= 10000 x677) (= 0 (x2363 x677))))
(assert (= x3829 (x2229 (x2226 x3829 x2706 x3083 x2302))))
(assert (=> (<= x1508 10000) (= 0 (x2363 x1508))))
(assert (= (and x3536 x1114) x1644))
(assert (= (and x1798 x1457) x620))
(assert (= x3630 (x1451 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569))))
(assert (= x26 (x3658 (x898 x59 x4037 x1091 x577 x26))))
(assert (x881 x2473))
(assert (= x2651 (x1451 (x1338 x2790 x695 x2651))))
(assert (x881 x3129))
(assert (=> (<= x164 10000) (= (x2363 x164) 0)))
(assert (= (x2229 (x1338 64 x2729 12)) 64))
(assert (x881 x3518))
(assert (=> (<= x92 10000) (= (x2363 x92) 0)))
(assert (=> (>= 10000 x997) (= 0 (x2363 x997))))
(assert (x881 x26))
(assert (x881 x1718))
(assert (x881 x344))
(assert (=> (<= x2759 10000) (= 0 (x2363 x2759))))
(assert (< 10000 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953)))
(assert (=> (<= x3098 10000) (= 0 (x2363 x3098))))
(assert (x881 x2071))
(assert (not (x1229 (x1338 x1241 x4030 x1619))))
(assert (x881 x2914))
(assert (= (x2229 (x1338 64 x2197 36)) 64))
(assert (= (or x481 x4142) x3564))
(assert (= x569 (x2229 (x2761 x569 x2941 x4042 x1530 x2381 x2535))))
(assert (= (x3455 (x2761 x1712 x3175 x1121 x3013 x125 x980)) x980))
(assert (=> (<= x3511 10000) (= 0 (x2363 x3511))))
(assert (= (and x2284 x2094) x904))
(assert (= (x1415 (x1338 64 x3156 10)) x3156))
(assert (< (x1338 64 x2030 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x2800))
(assert (=> (<= x1092 10000) (= (x2363 x1092) 0)))
(assert (not (x1229 (x1338 64 x3059 2))))
(assert (=> (<= x2542 10000) (= 0 (x2363 x2542))))
(assert (x881 x3147))
(assert (x881 x754))
(assert (x881 x724))
(assert (=> (<= x1175 10000) (= 0 (x2363 x1175))))
(assert (= (x1338 64 x371 36) (x2363 (x1338 64 x371 36))))
(assert (=> (<= x3898 10000) (= 0 (x2363 x3898))))
(assert (x881 x2933))
(assert (x881 x4290))
(assert (x1229 2177969240))
(assert (= x3682 (x1451 (x1338 x2791 x3277 x3682))))
(assert (x881 x823))
(assert (x881 x79))
(assert (x881 x456))
(assert (< (x1338 x2791 x3277 x3682) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x541) (= (x2363 x541) 0)))
(assert (not (x1229 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918))))
(assert (x881 x3398))
(assert (= (x1451 (x1338 64 1 x3804)) x3804))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)))
(assert (= (or x1852 x2079) x2549))
(assert (x881 x419))
(assert (x881 x1206))
(assert (= (x1207 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) x2017))
(assert (x881 x3965))
(assert (= (and x4122 (not x1846)) x940))
(assert (x881 x3379))
(assert (x881 x3166))
(assert (x881 x75))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x89 2)))
(assert (=> (>= 10000 x4282) (= 0 (x2363 x4282))))
(assert (x881 x1300))
(assert (= (or x2632 x3448 x3660 x3906 x1665) x880))
(assert (< 10000 (x1338 x1949 x3815 x290)))
(assert (= (x2363 (x1723 x1241 x1326)) (x1723 x1241 x1326)))
(assert (= (x2363 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= (x1415 (x898 x813 x3017 x1180 x2298 x244)) x3017))
(assert (x881 x3241))
(assert (not (x1229 (x1338 64 x3877 7))))
(assert (= (or x1659 (and (not x2980) x3033) (and x2864 (not x4077)) (and (not x1965) x2845) (and (not x3281) x3738)) x2861))
(assert (x881 x448))
(assert (not (x1229 (x898 x2115 x1500 x3170 x3008 x158))))
(assert (x881 x2610))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x1712 x3175 x1121 x3013 x125 x980)))
(assert (x881 x2649))
(assert (x881 x1181))
(assert (x881 x1193))
(assert (not (x1229 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295))))
(assert (= (and x3811 x4014) x535))
(assert (=> (<= x1612 10000) (= (x2363 x1612) 0)))
(assert (x881 x32))
(assert (= x2355 (x1451 (x898 x1241 x2959 x2355 x1515 x2531))))
(assert (= x2790 (x2229 (x1338 x2790 x695 x2651))))
(assert (x881 x380))
(assert (x881 x2175))
(assert (x881 x3872))
(assert (x881 x3235))
(assert (= (x1451 (x1338 64 x3059 2)) 2))
(assert (x881 x2293))
(assert (=> (>= 10000 x3277) (= (x2363 x3277) 0)))
(assert (not (x1229 (x2226 x569 x1325 x3903 x3355))))
(assert (x881 x2859))
(assert (= (x2363 (x1338 x1241 x4030 x1619)) (x1338 x1241 x4030 x1619)))
(assert (x881 x2611))
(assert (x881 x3948))
(assert (= x2115 (x2229 (x2915 x2115 x3793 x2940 x1202 x1288 x1227 x3375 x3284))))
(assert (= true x80))
(assert (= (x1207 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710)) x1710))
(assert (= x2929 (=> (and (= x514 150) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x825) (<= x1080 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2770 x825) x3873) (= (* x1533 32) x3953) (>= x2561 2) (>= x1080 1) (= x1080 (x1713 (+ x825 (mod (+ x3426 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x825 115792089237316195423570985008687907853269984665640564039457584007913129639933) (< x1080 x2561) (= x834 (x1713 (+ 128 x2359))) (= (x1713 (+ x2561 36)) x2359) (= x1213 (x1713 (+ 32 x834))) (= x2561 (x1713 (+ (mod (+ 32 x3953) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1080))) (= x627 (div (+ x569 31) 32)) (= (* 32 x627) x3426) (= x1291 (x1713 (+ 32 x2359))) (= x827 (x1713 (+ x2400 x1004))) (= (x1713 (+ x825 32)) x296) (= x3692 (x1713 (+ x569 x296))) (= x1533 (div (+ x2400 31) 32)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x825) (> x1080 x825) (= (> x3873 0) x2073) (= x1004 (x1713 (+ x1080 32)))) (and (=> (and (and (= (x2622 x296) x3571) (= (< 32 x3873) x3578)) x2073) (and (=> (and x3578 (and (= x974 (x4191 x593)) (= x593 (x1713 (+ x296 32))) (= (x1713 (+ 32 x1213)) x1356) (= (> x3873 64) x1494))) (and (=> (and (and (= x1744 (x1713 (+ 64 x296))) (= (< 96 x3873) x3330) (= x2315 (x163 x1744)) (= x2740 (x1713 (+ 64 x1213)))) x1494) (and (=> x3330 x3231) (=> (not x3330) x2497))) (=> (not x1494) x2497))) (=> (not x3578) x2497))) (=> (not x2073) x2497)))))
(assert (= (and (not x2578) x2119) x3736))
(assert (x881 x1950))
(assert (not (x1229 (x1338 64 x4268 36))))
(assert (x881 x683))
(assert (not (x1229 (x2761 x59 x1512 x806 x1358 x3031 x835))))
(assert (=> (<= x1134 10000) (= 0 (x2363 x1134))))
(assert (not (x1229 (x2226 x3866 x858 x2769 x2522))))
(assert (= (x2164 (x2226 x2791 x2936 x2539 x1767)) x1767))
(assert (= 64 (x2229 (x1338 64 x3537 (ite (= x655 0) x4266 (ite (>= 32 x655) x4084 (ite (>= 64 x655) x2227 (ite (>= 96 x655) x3992 (ite (<= x655 128) x160 (ite (>= 160 x655) x1877 (ite (<= x655 192) x1383 (ite (>= 224 x655) x761 x3914))))))))))))
(assert (x881 x1445))
(assert (x881 x2829))
(assert (=> (<= x1183 10000) (= 0 (x2363 x1183))))
(assert (=> (<= x1143 10000) (= 0 (x2363 x1143))))
(assert (not (x1229 (x1338 64 x3573 6))))
(assert (x881 x3153))
(assert (=> (<= x4295 10000) (= 0 (x2363 x4295))))
(assert (= x3866 (x2229 (x898 x3866 x433 x155 x2455 x842))))
(assert (= (x1415 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438)) x3803))
(assert (< 10000 (x1338 64 x39 36)))
(assert (x881 x3990))
(assert (x881 x4097))
(assert (= (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953) (x2363 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (= x1268 (or x4062 x664)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)))
(assert (< (x2915 x3829 x1569 x4059 x2649 x1631 x575 x1087 x2291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2363 x1140) (x2363 (+ 1 x1140))))
(assert (x881 x1648))
(assert (x881 x3335))
(assert (x881 x195))
(assert (= (x2363 (x1723 x1949 x3538)) (x1723 x1949 x3538)))
(assert (x881 x3671))
(assert (x881 x2991))
(assert (x862 x1879))
(assert (x881 x751))
(assert (x881 x4134))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3877 7)))
(assert (x862 x2823))
(assert (= (x2363 1341992515) 0))
(assert (x881 x4281))
(assert (x1517 x3119))
(assert (x881 x2087))
(assert (= x2954 (or (and (not x785) x3467) (and x499 (not x3787)) (and (not x1554) x2835))))
(assert (x881 x3984))
(assert (= x3285 (and (not x1052) x2457)))
(assert (x881 x3211))
(assert (x881 x2522))
(assert (x881 x2571))
(assert (=> (<= x1070 10000) (= (x2363 x1070) 0)))
(assert (x881 x656))
(assert (x881 x4156))
(assert (x881 x2340))
(assert (x881 x1635))
(assert (x881 x2525))
(assert (x881 x1471))
(assert (= (x1415 (x1723 x3866 x4076)) x4076))
(assert (x881 x3844))
(assert (x881 x4030))
(assert (x881 x4041))
(assert (= (x1415 (x2226 x2791 x2936 x2539 x1767)) x2936))
(assert (not (x1229 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997))))
(assert (= (x1451 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)) x871))
(assert (< (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2229 (x1723 x2790 x2655)) x2790))
(assert (x881 x4178))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x1010 100)))
(assert (= x1092 (x1451 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005))))
(assert (x1229 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x881 x3692))
(assert (= (x2229 (x1338 64 x2541 12)) 64))
(assert (=> (<= x4071 10000) (= 0 (x2363 x4071))))
(assert (= (and (not x3642) x3285) x2979))
(assert (= x3798 (x2164 (x2915 x2791 x443 x1092 x3798 x455 x2089 x1926 x4005))))
(assert (x881 x877))
(assert (< (x2761 x2115 x2128 x2435 x485 x1146 x326) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2164 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)) x3178))
(assert (= x3864 (x1415 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816))))
(assert (= (x1338 64 x1070 6) (x2363 (x1338 64 x1070 6))))
(assert (= (=> (and (= (>= 224 x59) x3132) (= (x3577 128) x59)) (and x3132 (=> (and (= x1091 (x3577 192)) (= x1595 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)) (= x1820 (x3577 192)) (= (x3577 352) x1508) (= x806 (x3577 192)) (= x524 (x898 x59 x4037 x1091 x577 x26)) (= x1649 (>= 224 x569)) (= x830 (x3577 288)) (= x1620 (x3577 256)) (= (x3577 160) x4093) (= x18 (x3577 288)) (= (x2226 x59 x561 x198 x4009) x248) (= x4277 (x1192 0)) (= x1690 (x3577 224)) (= (x3577 192) x198) (= (x3577 224) x577) (= x4105 (ite (= 0 x59) x4277 (ite (<= x59 32) x1984 (ite (>= 64 x59) x3758 (ite (<= x59 96) x248 (ite (>= 128 x59) x524 (ite (>= 160 x59) x728 (ite (<= x59 192) x1595 (ite (>= 224 x59) x3076 x1449))))))))) (= x3031 (x3577 256)) (= (x3577 256) x2390) (= (x3577 160) x4170) (= x835 (x3577 288)) (= (x1723 x59 x4093) x1984) (= x4003 (x3577 192)) (= x4037 (x3577 160)) (= x4009 (x3577 224)) (= x3076 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)) (= x2441 (x3577 224)) (= x3758 (x1338 x59 x1031 x2759)) (= x561 (x3577 160)) (= x186 (x3577 160)) (= (x3577 192) x2759) (= x3997 (x3577 320)) (= (x2761 x59 x1512 x806 x1358 x3031 x835) x728) (= (x3577 320) x2856) (= x3406 (x1713 (+ x569 x825))) (= x1031 (x3577 160)) (= x1512 (x3577 160)) (= x26 (x3577 256)) (= (x3577 224) x1358)) (and (=> (and (= x2623 x4105) (= (x1723 x569 x1588) x607) (= x2117 (x4047 x740)) (= x2106 (x1713 (+ x825 160))) (= x4204 (x4047 x825)) (= (x1713 (+ 64 x825)) x966) (= x6 (x4047 x825)) (= (x1713 (+ 96 x825)) x3512) (= x1530 (x4047 x2796)) (= (x1713 (+ 128 x825)) x3694) (= x3355 (x4047 x2902)) (= (x4047 x2750) x1423) (= x2052 (x4162 x569 x3001 x2865 x3178 x870 x452 x606)) (= x3280 (x4047 x3453)) (= (x1713 (+ x825 64)) x2902) (= x1081 (x1713 (+ x825 96))) (= x3988 (x4047 x2106)) (= (x1192 0) x3187) (= (x4047 x2326) x452) (= (x1713 (+ 128 x825)) x2326) (= (x1713 (+ 32 x825)) x2199) (= (x1713 (+ x825 160)) x86) (= x2796 (x1713 (+ 64 x825))) (= x2535 (x4047 x3694)) (= x3898 (x4047 x825)) (= (x4047 x2199) x4042) (= (x1713 (+ 64 x825)) x578) (= x3855 (x1338 x569 x4204 x3280)) (= (x1713 (+ 32 x825)) x2801) (= (x4047 x2801) x1175) (= x2303 (x898 x569 x6 x553 x3235 x44)) (= x4002 (x1713 (+ 64 x825))) (= (x4047 x4288) x3903) (= (x4047 x1578) x3344) (= (x1713 (+ x825 96)) x740) (= x2750 (x1713 (+ x825 128))) (= (x1713 (+ x825 32)) x3999) (= x2311 (x2915 x569 x3898 x1175 x1005 x2117 x1423 x3988 x3344)) (= x3235 (x4047 x966)) (= (ite (= x569 0) x3187 (ite (>= 32 x569) x607 (ite (>= 64 x569) x3855 (ite (>= 96 x569) x335 (ite (<= x569 128) x2303 (ite (<= x569 160) x2111 (ite (>= 192 x569) x2052 (ite (<= x569 224) x2311 x84)))))))) x2623) (= (x1713 (+ 32 x825)) x838) (= x1005 (x4047 x578)) (= (x2761 x569 x2941 x4042 x1530 x2381 x2535) x2111) (= (x4047 x1081) x44) (= (x4047 x825) x3001) (= x2941 (x4047 x825)) (= (x1713 (+ x825 32)) x3453) (= x2381 (x4047 x3512)) (= (x1713 (+ 32 x825)) x4288) (= (x2226 x569 x1325 x3903 x3355) x335) (= x1912 (x1713 (+ 96 x825))) (= x870 (x4047 x1912)) (= (x4047 x4002) x3178) (= x1325 (x4047 x825)) (= (x4047 x86) x606) (= (x4047 x3999) x553) (= (x4047 x838) x2865) (= (x1713 (+ 192 x825)) x1578) (= (x4047 x825) x1588)) x2929) x1649)))) x869))
(assert (> (x2761 x569 x2941 x4042 x1530 x2381 x2535) 10000))
(assert (=> (>= 10000 x2546) (= 0 (x2363 x2546))))
(assert (= 64 (x2229 (x1338 64 x3525 100))))
(assert (x881 x722))
(assert (x881 x3881))
(assert (x881 x3797))
(assert (x881 x2920))
(assert (x881 x1926))
(assert (x881 x786))
(assert (= x4247 (x2164 (x2915 x3866 x3803 x4299 x4247 x3774 x3675 x3402 x3438))))
(assert (= x4062 (and x2000 (not x2550))))
(assert (x881 x2135))
(assert (x881 x4203))
(assert (x881 x980))
(assert (x881 x452))
(assert (x881 x138))
(assert (x881 x2421))
(assert (not (x1229 (x1338 64 x61 11))))
(assert (= (=> (and (= x246 x1159) (= x3995 x2952) (= x930 false) (= x2 (+ 1 x3525)) (= 0 x3963) (= true x1654) (= x1571 2) (= x2843 x3788) (= x3060 x1128) (= x2022 x1835) (= x96 x2693) (= x79 x956) (= x1125 x2545) (= x1350 x4140) (= x1352 (+ x3525 1)) (= x773 x3482) (= 0 x548) (= x3685 x2993) (= x1306 x2002)) x566) x2356))
(assert (= x3208 (x2164 (x898 x1949 x2071 x530 x3208 x3405))))
(assert (> (x1338 64 x3224 10) 10000))
(assert (= (x3895 (x2915 x228 x362 x2519 x766 x2498 x3171 x3410 x3735)) x3735))
(assert (= x2619 (or x2346 x3619)))
(assert (x1229 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x881 x936))
(assert (x881 x3801))
(assert (= (and x2080 (not x2712)) x1594))
(assert (= x2225 x127))
(assert (> (x1338 64 x116 7) 10000))
(assert (= (and x134 x3643) x2958))
(assert (=> (<= x1929 10000) (= 0 (x2363 x1929))))
(assert (x881 x4292))
(assert (not (x1229 (x1338 x3866 x1019 x2599))))
(assert (x881 x4259))
(assert (= (and (not x2129) x80) x2794))
(assert (= (x2363 x2661) (x2363 (+ x2661 2))))
(assert (x881 x1761))
(assert (x881 x587))
(assert (= (x1451 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295)) x3488))
(assert (x881 x854))
(assert (not (x1229 (x1723 32 103))))
(assert (x881 x2624))
(assert (not (x1229 (x1338 64 x1672 2))))
(assert (= (x1207 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) x2092))
(assert (= x59 (x2229 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (x881 x737))
(assert (x881 x1612))
(assert (x881 x2423))
(assert (= (x1415 (x1338 64 x2605 0)) x2605))
(assert (not (x1229 (x1723 x1949 x3538))))
(assert (= (x2761 x655 x4280 x3527 x4136 x737 x3646) (x2363 (x2761 x655 x4280 x3527 x4136 x737 x3646))))
(assert (< (x898 x3829 x715 x4071 x3961 x4010) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3753 10000) (= 0 (x2363 x3753))))
(assert (= (x2229 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)) x3829))
(assert (=> (>= 10000 x1423) (= 0 (x2363 x1423))))
(assert (x881 x665))
(assert (x881 x1378))
(assert (=> (<= x4268 10000) (= (x2363 x4268) 0)))
(assert (x320 x772))
(assert (= x1999 (and x2549 x4285)))
(assert (x881 x775))
(assert (x881 x1096))
(assert (= (x2363 (x1338 x1949 x3815 x290)) (x1338 x1949 x3815 x290)))
(assert (x881 x1441))
(assert (x881 x531))
(assert (x881 x3302))
(assert (= x3866 (x2229 (x1723 x3866 x4076))))
(assert (x881 x3988))
(assert (= (x1207 (x4162 x2115 x1847 x3150 x1759 x4033 x1567 x4295)) x4295))
(assert (x881 x3943))
(assert (x881 x1476))
(assert (x881 x685))
(assert (= (x1338 x59 x1031 x2759) (x2363 (x1338 x59 x1031 x2759))))
(assert (x881 x1081))
(assert (= (and x197 (not x892)) x499))
(assert (= x264 (or x2677 x1382 x1432)))
(assert (x881 x1701))
(assert (x881 x386))
(assert (x1229 3628442803))
(assert (= x159 (or x388 x3352)))
(assert (=> (>= 10000 x3375) (= (x2363 x3375) 0)))
(assert (= x231 (and x2665 x3430)))
(assert (x881 x2089))
(assert (=> (>= 10000 x876) (= 0 (x2363 x876))))
(assert (= x973 (x1451 (x2226 x1241 x1037 x973 x502))))
(assert (x881 x2426))
(assert (= x1996 (x2164 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (= (x2164 (x898 x569 x6 x553 x3235 x44)) x3235))
(assert (x881 x3113))
(assert (= (x1338 64 x116 7) (x2363 (x1338 64 x116 7))))
(assert (x881 x2396))
(assert (x741 x1478))
(assert (=> (>= 10000 x3353) (= (x2363 x3353) 0)))
(assert (=> (>= 10000 x2769) (= 0 (x2363 x2769))))
(assert (x881 x959))
(assert (= (and (not x1148) x173) x2224))
(assert (x881 x1767))
(assert (x881 x1243))
(assert (= (x2229 (x1338 64 x4140 5)) 64))
(assert (x881 x623))
(assert (=> (<= x305 10000) (= 0 (x2363 x305))))
(assert (x881 x965))
(assert (x881 x806))
(assert (= (and x933 x1324) x2094))
(assert (=> (>= 10000 x871) (= 0 (x2363 x871))))
(assert (x881 x1673))
(assert (=> (<= x530 10000) (= 0 (x2363 x530))))
(assert (x881 x263))
(assert (x881 x626))
(assert (= x3741 (=> (= (not (< 128 x1558)) x235) (and x235 x1236))))
(assert (x881 x2183))
(assert (=> (<= x1582 10000) (= 0 (x2363 x1582))))
(assert (not (x1229 (x898 x2790 x305 x3753 x3113 x356))))
(assert (x881 x1653))
(assert (=> (<= x3815 10000) (= (x2363 x3815) 0)))
(assert (not (x1229 (x2226 x1949 x3121 x2734 x1084))))
(assert (= x1950 (x1415 (x898 x2791 x1950 x2087 x546 x4128))))
(assert (= x383 (or x3843 x2179)))
(assert (= (and x880 x3329) x2360))
(assert (< 10000 (x1338 x1241 x4030 x1619)))
(assert (x881 x298))
(assert (x881 x1677))
(assert (x881 x4186))
(assert (x881 x669))
(assert (= (=> (and (= x4097 x1306) (= x4140 x678) (= x1311 x1671) (= x1952 x79) (= x773 x448) (= (+ x3525 1) x3203) (= x2693 x1327) (= x1428 x1125) (= x2952 x790) (= x2618 x3685) (= 0 x3860) (= x4086 x246) (= x3060 x2136) (= x2789 x2022) (= x794 2) (= x199 x2843) (= x1160 (+ x3525 1))) x491) x3489))
(assert (x881 x1092))
(assert (x862 127))
(assert (= x4179 (x1415 (x1338 64 x4179 11))))
(assert (not (x1229 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (= (or x935 x522 x4158 x2883 x1642) x3373))
(assert (=> (>= 10000 x4001) (= (x2363 x4001) 0)))
(assert (=> (>= 10000 x3829) (= 0 (x2363 x3829))))
(assert (= (x2229 (x2226 x1001 x3416 x153 x2807)) x1001))
(assert (=> (>= 10000 x2941) (= 0 (x2363 x2941))))
(assert (x881 x4211))
(assert (=> (>= 10000 x3770) (= (x2363 x3770) 0)))
(assert (=> (<= x2649 10000) (= (x2363 x2649) 0)))
(assert (= (x1415 (x1338 64 x576 36)) x576))
(assert (x881 x2345))
(assert (x881 x2250))
(assert (x881 x3339))
(assert (=> (>= 10000 x1500) (= 0 (x2363 x1500))))
(assert (= (x2363 (x1338 64 x3835 11)) (x1338 64 x3835 11)))
(assert (x881 x2769))
(assert (x862 1))
(assert (= (x2363 (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)) (x4162 x1241 x71 x217 x3948 x533 x1584 x1635)))
(assert (x881 x228))
(assert (=> (>= 10000 x365) (= (x2363 x365) 0)))
(assert (not (x1229 (x4162 x2791 x4088 x2931 x132 x1053 x2528 x3022))))
(assert (x881 x1253))
(assert (=> (>= 10000 x2807) (= 0 (x2363 x2807))))
(assert (=> (>= 10000 x495) (= (x2363 x495) 0)))
(assert (= (x2226 x3829 x2706 x3083 x2302) (x2363 (x2226 x3829 x2706 x3083 x2302))))
(assert (x881 x882))
(assert (x881 x743))
(assert (x881 x732))
(assert (= x228 (x2229 (x898 x228 x1188 x2250 x3241 x3801))))
(assert (x862 x722))
(assert (not (x1229 (x1338 x3829 x2196 x2795))))
(assert (= x1929 (x1451 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (= x4157 (or x2794 x2281)))
(assert (= (and x3243 x3122) x2362))
(assert (= (x1415 (x2761 x1001 x3563 x1612 x1076 x2444 x840)) x3563))
(assert (x881 x4295))
(assert (=> (>= 10000 x3410) (= (x2363 x3410) 0)))
(assert (=> (>= 10000 x2697) (= (x2363 x2697) 0)))
(assert (x881 x2495))
(assert (x881 x1273))
(assert (x881 x3364))
(assert (= (x2363 (x1338 x2268 x3761 x590)) (x1338 x2268 x3761 x590)))
(assert (x881 x3587))
(assert (x881 x2470))
(assert (=> (>= 10000 x2753) (= 0 (x2363 x2753))))
(assert (x881 x2722))
(assert (= (and x1487 (not x2468)) x2686))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x1672 1)))
(assert (= x328 (x3455 (x2915 x1001 x4091 x3488 x4072 x2241 x328 x266 x2295))))
(assert (< 10000 (x1338 64 x1577 10)))
(assert (> (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997) 10000))
(assert (x881 x2180))
(assert (x881 x2295))
(assert (= (x1415 (x1338 64 x288 10)) x288))
(assert (x881 x1909))
(assert (x881 x2300))
(assert (=> (>= 10000 x404) (= (x2363 x404) 0)))
(assert (x881 x4020))
(assert (=> (<= x1433 10000) (= (x2363 x1433) 0)))
(assert (x881 x3685))
(assert (x881 x400))
(assert (x881 x3400))
(assert (x881 x596))
(assert (= x326 (x3455 (x2761 x2115 x2128 x2435 x485 x1146 x326))))
(assert (=> (<= x773 10000) (= (x2363 x773) 0)))
(assert (x881 x373))
(assert (x881 x2163))
(assert (= (x2363 (x1338 64 x2197 36)) (x1338 64 x2197 36)))
(assert (x881 x244))
(assert (x881 x4216))
(assert (=> (<= x3521 10000) (= (x2363 x3521) 0)))
(assert (x881 x3487))
(assert (=> (<= x1926 10000) (= 0 (x2363 x1926))))
(assert (= x1508 (x3895 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508))))
(assert (x881 x2392))
(assert (=> (>= 10000 x39) (= (x2363 x39) 0)))
(assert (< (x1338 64 x2729 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x972 x4067) x1994))
(assert (x881 x1128))
(assert (= x1241 (x2229 (x2226 x1241 x1037 x973 x502))))
(assert (= (or x2787 x159) x3819))
(assert (= x3105 (and (not x391) x784)))
(assert (x881 x200))
(assert (x881 x2198))
(assert (x881 x1256))
(assert (> (x898 x2791 x1950 x2087 x546 x4128) 10000))
(assert (= x2517 (and x3566 x3517)))
(assert (=> (>= 10000 x570) (= (x2363 x570) 0)))
(assert (< 10000 (x2761 x2115 x2128 x2435 x485 x1146 x326)))
(assert (= x863 x723))
(assert (= x2051 (or x2983 (and (not x45) x833))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x898 x2115 x1500 x3170 x3008 x158)))
(assert (x881 x538))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x59 x4170 x4003 x1690 x2390 x18 x3997)))
(assert (=> (<= x3208 10000) (= (x2363 x3208) 0)))
(assert (=> (>= 10000 x753) (= (x2363 x753) 0)))
(assert (x881 x2973))
(assert (x881 x4200))
(assert (=> (>= 10000 x953) (= 0 (x2363 x953))))
(assert (= x3436 (=> (and (= x1354 x3989) (= x1461 x2097) (= x4124 x690) (= x1935 x1758) (= x3540 x114) (= x2309 x1560)) x564)))
(assert (= x1007 (or x2371 x3649)))
(assert (= x2268 (x2229 (x1723 x2268 x3345))))
(assert (= x655 (x2229 (x1723 x655 x626))))
(assert (= (x1415 (x1338 64 x3465 10)) x3465))
(assert (= (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710) (x2363 (x4162 x3866 x3725 x558 x200 x1276 x1256 x1710))))
(assert (x881 x1495))
(assert (= (x1415 (x2226 x2790 x1526 x2920 x3098)) x1526))
(assert (x881 x3744))
(assert (x862 x1770))
(assert (x881 x1598))
(assert (x881 x3875))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 x3573 6)))
(assert (x881 x1370))
(assert (x881 x1082))
(assert (= x1724 (x3658 (x2761 x1949 x2524 x2830 x1996 x1724 x1495))))
(assert (x881 x1231))
(assert (x320 x1770))
(assert (x881 x3490))
(assert (x1229 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (= x3484 (x3658 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (< 10000 (x2915 x59 x186 x1820 x2441 x1620 x830 x2856 x1508)))
(assert (=> (>= 10000 x3083) (= 0 (x2363 x3083))))
(assert (x881 x3966))
(assert (< 10000 (x1338 64 x3537 (ite (= 0 x655) x4266 (ite (>= 32 x655) x4084 (ite (>= 64 x655) x2227 (ite (>= 96 x655) x3992 (ite (>= 128 x655) x160 (ite (<= x655 160) x1877 (ite (>= 192 x655) x1383 (ite (>= 224 x655) x761 x3914)))))))))))
(assert (x881 x1879))
(assert (< 10000 (x1338 64 x3573 6)))
(assert (x881 x142))
(assert (=> (<= x2505 10000) (= (x2363 x2505) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 x1241 x4030 x1619)))
(assert (x1517 x1991))
(assert (x1517 x4114))
(assert (x881 x1828))
(assert (= 2 (x1451 (x1338 64 x1672 2))))
(assert (=> (<= x3630 10000) (= (x2363 x3630) 0)))
(assert (< (x2226 x228 x2933 x4131 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4162 x3829 x541 x871 x4182 x3637 x3394 x1511)))
(assert (= (or x2822 x3933) x152))
(assert (= (=> (and (= (not (> x581 128)) x4129) (= x255 (x1713 (+ 96 x296))) (= (x1713 (+ x3369 96)) x1136) (= x3773 (x2793 x255))) (and x3667 x4129)) x1625))
(assert (= (x1451 (x1338 x1949 x3815 x290)) x290))
(assert (x881 x381))
(assert (x881 x4165))
(assert (x881 x3605))
(assert (= (and x152 x3734) x2179))
(assert (x3043 x1125))
(assert (x881 x2177))
(assert (x881 x2394))
(assert (x881 x552))
(assert (x881 x3690))
(assert (x881 x2490))
(assert (x881 x3782))
(assert (= (x1415 (x1338 64 x4140 4)) x4140))
(assert (x881 x4184))
(assert (= x1948 (and x613 x3199)))
(assert (=> (>= 10000 x3402) (= (x2363 x3402) 0)))
(assert (= x3300 (and x1827 x2224)))
(assert (x881 x1221))
(assert (= (and (not x1439) x1247) x1453))
(assert (= x2507 (=> (and (= (x2299 x1980) x2477) (= (not (> x4270 32)) x3047)) (and (=> (= x1973 32) x1516) x3047))))
(assert (=> (>= 10000 x2385) (= 0 (x2363 x2385))))
(assert (x881 x1522))
(assert (x881 x1204))
(assert (x881 x1251))
(assert (x881 x4135))
(assert (x881 x453))
(assert (not (x1229 (x2761 x1241 x889 x3842 x4212 x3890 x1143))))
(assert (= (x2229 (x4162 x1949 x2014 x2308 x604 x2975 x4238 x298)) x1949))
(assert (= (x1415 (x2761 x2790 x2028 x92 x3705 x1183 x2991)) x2028))
(assert (x881 x4143))
(assert (= (x2363 18446744073709551615) 0))
(assert (= (and x1044 x492) x2863))
(assert (x881 x2050))
(assert (= 36 (x1451 (x1338 64 x39 36))))
(assert (x881 x1124))
(assert (= 0 (x2363 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (=> (<= x938 10000) (= 0 (x2363 x938))))
(assert (x881 x1356))
(assert (= (x2363 (x1723 32 x1997)) (x1723 32 x1997)))
(assert (=> (>= 10000 x155) (= 0 (x2363 x155))))
(assert (=> (<= x3951 10000) (= 0 (x2363 x3951))))
(assert (=> (<= x835 10000) (= 0 (x2363 x835))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x569 x2941 x4042 x1530 x2381 x2535)))
(assert (< 10000 (x2761 x3866 x2802 x992 x3706 x2800 x3786)))
(assert (x881 x473))
(assert (=> (<= x452 10000) (= 0 (x2363 x452))))
(assert (x862 x1478))
(assert (= x2959 (x1415 (x898 x1241 x2959 x2355 x1515 x2531))))
(assert (x881 x4140))
(assert (= x4100 (and x3020 x1596)))
(assert (= x228 (x2229 (x2226 x228 x2933 x4131 x540))))
(assert (= x3686 (x2164 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231))))
(assert (x881 x246))
(assert (x881 x582))
(assert (x881 x838))
(assert (< (x1338 x1712 x1433 x2126) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x3014))
(assert (x881 x2076))
(assert (= (x1415 (x1338 64 x1573 12)) x1573))
(assert (x881 x1533))
(assert (x881 x1819))
(assert (= (=> (and (= x301 x3592) (= x509 x3837) (= x1611 x2605) (= x3832 x523) (= x207 x4149) (= x2873 x3701) (= x393 x3552) (= x2502 x3539) (= x995 x3360) (= x10 x1697) (= x1275 x1892) (= x2855 x1216) (= x3748 x2183)) x2501) x726))
(assert (x881 x3208))
(assert (= (x2363 (x2226 x228 x2933 x4131 x540)) (x2226 x228 x2933 x4131 x540)))
(assert (x881 x276))
(assert (> (x1338 64 x3878 (ite (= x228 0) x1179 (ite (<= x228 32) x2035 (ite (<= x228 64) x190 (ite (<= x228 96) x2681 (ite (>= 128 x228) x1341 (ite (>= 160 x228) x1799 (ite (<= x228 192) x2809 (ite (<= x228 224) x171 x2180))))))))) 10000))
(assert (x881 x1937))
(assert (=> (<= x1631 10000) (= (x2363 x1631) 0)))
(assert (=> (>= 10000 x4229) (= 0 (x2363 x4229))))
(assert (=> (<= x1577 10000) (= (x2363 x1577) 0)))
(assert (x881 x82))
(assert (x881 x533))
(assert (= x1 (=> (and (= (+ x2728 32) x278) (= x4138 (x265 1 x2855)) (= (ite (> x4138 0) x2154 (x265 127 x2154)) x656) (= (= 0 x263) x2405) (= x263 (x265 1 x2855)) (= (x988 (- x4138 (mod (ite (< x656 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2142) (or (= x2142 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x2142)) (= (div x2855 2) x2154) (= (- x2728 132) x2018)) (and (=> (and (and (= x390 (x1723 32 104)) (= (> x656 0) x2567)) (not x2405)) (and (=> x2567 x670) (=> (and (= x4056 0) (not x2567)) x3288))) (=> (and x2405 (and (= (x265 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2855) x3871) (= x4289 (+ x2575 x278)) (= (* (ite (not (= x656 0)) 1 0) 32) x2575) (or (= x2575 0) (= x2575 32)))) x2393)))))
(assert (x881 x2823))
(assert (x881 x575))
(assert (< (x2761 x1949 x2524 x2830 x1996 x1724 x1495) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1415 (x1338 64 x3525 100)) x3525))
(assert (= 10 (x1451 (x1338 64 x288 10))))
(assert (x881 x3360))
(assert (= (x2229 (x1338 64 1 x3007)) 64))
(assert (x881 x394))
(assert (x881 x2617))
(assert (x881 x2975))
(assert (x881 x37))
(assert (x881 x4282))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1338 64 1 x3007)))
(assert (=> (<= x1679 10000) (= 0 (x2363 x1679))))
(assert (= x813 (x2229 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (x881 x4010))
(assert (x881 x1777))
(assert (x881 x875))
(assert (< (x898 x3866 x433 x155 x2455 x842) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x768 x4125) x93))
(assert (x881 x4076))
(assert (x881 x287))
(assert (x881 x3665))
(assert (= (=> (= x921 (+ x294 x3141)) x2947) x3383))
(assert (=> (>= 10000 x1724) (= 0 (x2363 x1724))))
(assert (=> (>= 10000 x4072) (= 0 (x2363 x4072))))
(assert (=> (>= 10000 x1564) (= 0 (x2363 x1564))))
(assert (x881 x1995))
(assert (= (x2229 (x1338 64 x1672 1)) 64))
(assert (x881 x3740))
(assert (x881 x1183))
(assert (x881 x4036))
(assert (= (and x3747 x401) x2943))
(assert (not (x1229 (x1723 x1241 x1326))))
(assert (x881 x3426))
(assert (x881 x2414))
(assert (x1229 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (x881 x3504))
(assert (> (x1338 64 x4140 4) 10000))
(assert (x881 x3412))
(assert (= 0 (x2363 4294967358)))
(assert (x881 x3989))
(assert (x862 x1689))
(assert (x881 x3432))
(assert (x881 x3002))
(assert (= (and x2476 x3964) x3794))
(assert (= (x1415 (x1723 x2115 x1893)) x1893))
(assert (x881 x2165))
(assert (x881 x2695))
(assert (= (x2164 (x2226 x1241 x1037 x973 x502)) x502))
(assert (x881 x1634))
(assert (= (x1338 64 x628 11) (x2363 (x1338 64 x628 11))))
(assert (= (x3455 (x2915 x2268 x2385 x3955 x2542 x2473 x3002 x2017 x3063)) x3002))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2761 x3866 x2802 x992 x3706 x2800 x3786)))
(assert (= (x1415 (x898 x2115 x1500 x3170 x3008 x158)) x1500))
(assert (x881 x180))
(assert (x881 x3454))
(assert (= x730 x1397))
(assert (x1229 1914215))
(assert (> (x1338 64 x2030 12) 10000))
(assert (x881 x2618))
(assert (x881 x1435))
(assert (x881 x2053))
(assert (x881 x99))
(assert (x881 x435))
(assert (x881 x133))
(assert (x881 x343))
(assert (x881 x284))
(assert (= (x2229 (x2761 x1712 x3175 x1121 x3013 x125 x980)) x1712))
(assert (= x1290 (x1415 (x2226 x1712 x1290 x250 x2069))))
(assert (= 0 (x2363 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (=> (<= x2022 10000) (= (x2363 x2022) 0)))
(assert (= x3866 (x2229 (x2226 x3866 x858 x2769 x2522))))
(assert (x881 x3085))
(assert (=> (<= x71 10000) (= (x2363 x71) 0)))
(assert (= (and x2026 x3049) x4104))
(assert (x881 x3526))
(assert (x881 x2012))
(assert (< (x1338 64 x214 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x881 x4284))
(assert (=> (<= x533 10000) (= 0 (x2363 x533))))
(assert (= (=> (and (<= 1 x325) (<= x325 255) (= x325 (x3520 x1371)) (= x4208 (= 0 x1280)) (= (x1338 64 x3224 10) x1371)) (and (=> (and (and (or (and (and (= x4134 x3709) (= x1468 x3685) (= false x406) (= x3351 (x2891 x3010)) (= x2700 310283853) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x3263) (= x29 false) (= x1468 x1475) (>= 127 x4195) (<= x3685 57896044618658097711785492504343953926634992332820282019728792003956) (= 36 x2472) (= x1381 false) (= false x1034) (= x3709 (* x3685 1000000000)) (<= 1 x3351) (>= 127 x4195)) x3049) (and (and (= x117 8365236128558009046904410293209581292053118695343348878262597880337030709248) (<= x1367 127) (= x773 x876) (= 36 x1215) (>= 1461501637330902918203684832716283019655932542975 x773) (= x2638 310283853) (= x3559 false) (<= x1367 127) (<= 1 x773) (>= x3905 1) (= (x2891 x876) x3905) (= x1878 false) (= x3004 x3685) (= x3476 false) (= x1507 false)) (not x3049))) (and (= (= x773 x3010) x3049) (= x1614 128) (<= x773 1461501637330902918203684832716283019655932542975))) (not x4208)) x2996) (=> (and (and (or (and x2538 (and (= x3356 310283853) (>= 127 x450) (= (* x3685 1000000000) x3357) (= false x2966) (= x4186 x3685) (= x1405 36) (= x368 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x3685) (= (x2891 x3010) x1761) (= x3874 false) (= x3357 x661) (>= 127 x450) (= x4186 x2394) (= false x2896) (>= x1761 1) (= x2890 false))) (and (not x2538) (and (<= 1 x959) (= x915 36) (<= x773 1461501637330902918203684832716283019655932542975) (>= 127 x3128) (= false x2305) (= false x3195) (= false x360) (= 310283853 x648) (= x1609 x3685) (= x679 8365236128558009046904410293209581292053118695343348878262597880337030709248) (<= x3128 127) (= x773 x876) (= false x3407) (= (x2891 x876) x959) (<= 1 x773)))) (and (= x4053 128) (>= 1461501637330902918203684832716283019655932542975 x773) (= x2538 (= x3010 x773)))) x4208) x233))) x363))
(assert (= (x1338 64 x1672 1) (x2363 (x1338 64 x1672 1))))
(assert (= x3770 (x2164 (x2915 x2790 x3404 x717 x3770 x1698 x1277 x2609 x2383))))
(assert (= x2079 (and (not x1527) x3662)))
(assert (< 10000 (x1338 64 x2729 12)))
(assert (= (x1338 x3866 x1019 x2599) (x2363 (x1338 x3866 x1019 x2599))))
(assert (= x4229 (x3455 (x4162 x813 x1008 x1929 x4043 x3484 x4229 x953))))
(assert (x881 x31))
(assert (x881 x3532))
(assert (> (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918) 10000))
(assert (x881 x3701))
(assert (x881 x2902))
(assert (= x1949 (x2229 (x1723 x1949 x3538))))
(assert (not (x1229 (x2761 x1001 x3563 x1612 x1076 x2444 x840))))
(assert (< (x2226 x1949 x3121 x2734 x1084) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2363 (x1338 64 x3465 10)) (x1338 64 x3465 10)))
(assert (= (x2164 (x2915 x813 x976 x1564 x1134 x240 x688 x2092 x1849)) x1134))
(assert (=> (>= 10000 x2800) (= 0 (x2363 x2800))))
(assert (= x2969 (and x1238 (not x2538))))
(assert (= x1241 (x2229 (x2915 x1241 x400 x1623 x753 x1920 x894 x1900 x2918))))
(assert (x881 x1943))
(assert (x881 x3975))
(assert (= (x1338 x569 x4204 x3280) (x2363 (x1338 x569 x4204 x3280))))
(assert (x881 x3602))
(assert (= x1231 (x3895 (x2915 x655 x1550 x4287 x3686 x3687 x3321 x3603 x1231))))
(assert (= (x2363 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)) (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816)))
(assert (=> (<= x1530 10000) (= (x2363 x1530) 0)))
(assert (x881 x1619))
(assert (not (x1229 (x4162 x2268 x3864 x2054 x3942 x887 x3521 x1816))))
(assert (x881 x3277))
(assert (=> (>= 10000 x1820) (= 0 (x2363 x1820))))
(assert (= x655 (x2229 (x4162 x655 x3147 x3630 x352 x2641 x2392 x3569))))
(assert (x881 x1347))
(assert (x881 x2126))
(check-sat)
(exit)
