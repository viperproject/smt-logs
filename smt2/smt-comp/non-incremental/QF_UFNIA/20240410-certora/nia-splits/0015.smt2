(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x125 () Int)
(declare-fun x1092 () Bool)
(declare-fun x671 () Int)
(declare-fun x1010 () Int)
(declare-fun x30 () Int)
(declare-fun x344 () Int)
(declare-fun x25 () Int)
(declare-fun x14 () Int)
(declare-fun x982 () Int)
(declare-fun x624 () Int)
(declare-fun x1174 () Int)
(declare-fun x908 () Int)
(declare-fun x698 () Int)
(declare-fun x459 () Int)
(declare-fun x36 () Int)
(declare-fun x711 () Int)
(declare-fun x812 () Int)
(declare-fun x1212 () Int)
(declare-fun x256 () Int)
(declare-fun x372 () Int)
(declare-fun x697 () Bool)
(declare-fun x491 () Int)
(declare-fun x463 () Int)
(declare-fun x505 () Int)
(declare-fun x41 () Int)
(declare-fun x481 () Int)
(declare-fun x280 () Int)
(declare-fun x1195 () Int)
(declare-fun x857 (Int) Int)
(declare-fun x1 () Bool)
(declare-fun x688 () Int)
(declare-fun x37 () Int)
(declare-fun x86 () Int)
(declare-fun x191 () Int)
(declare-fun x88 (Int) Int)
(declare-fun x1395 () Int)
(declare-fun x565 () Int)
(declare-fun x1081 () Int)
(declare-fun x756 () Int)
(declare-fun x1256 () Int)
(declare-fun x828 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1124 () Int)
(declare-fun x1157 () Int)
(declare-fun x1158 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x891 () Int)
(declare-fun x1462 () Int)
(declare-fun x138 () Int)
(declare-fun x1058 () Int)
(declare-fun x141 () Int)
(declare-fun x657 () Int)
(declare-fun x765 () Int)
(declare-fun x1182 () Bool)
(declare-fun x1111 () Int)
(declare-fun x983 () Int)
(declare-fun x457 () Int)
(declare-fun x1251 () Int)
(declare-fun x192 () Int)
(declare-fun x1314 () Int)
(declare-fun x483 () Int)
(declare-fun x993 () Int)
(declare-fun x728 () Int)
(declare-fun x239 () Int)
(declare-fun x477 () Int)
(declare-fun x971 () Int)
(declare-fun x169 () Int)
(declare-fun x358 () Int)
(declare-fun x210 () Int)
(declare-fun x1252 () Int)
(declare-fun x1140 () Int)
(declare-fun x1300 () Int)
(declare-fun x1426 () Int)
(declare-fun x1353 () Int)
(declare-fun x220 () Bool)
(declare-fun x195 () Int)
(declare-fun x162 (Int) Int)
(declare-fun x1185 () Int)
(declare-fun x1460 () Int)
(declare-fun x1211 () Int)
(declare-fun x1464 () Int)
(declare-fun x77 () Int)
(declare-fun x720 () Bool)
(declare-fun x232 () Int)
(declare-fun x801 () Int)
(declare-fun x376 () Int)
(declare-fun x935 () Int)
(declare-fun x276 (Int) Int)
(declare-fun x670 () Bool)
(declare-fun x356 () Int)
(declare-fun x241 () Int)
(declare-fun x1307 () Int)
(declare-fun x651 () Int)
(declare-fun x1266 () Int)
(declare-fun x1216 () Int)
(declare-fun x686 () Int)
(declare-fun x1254 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1370 () Int)
(declare-fun x793 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1020 () Int)
(declare-fun x1257 () Int)
(declare-fun x279 () Int)
(declare-fun x1073 () Int)
(declare-fun x1046 () Int)
(declare-fun x1122 () Int)
(declare-fun x1024 () Int)
(declare-fun x964 () Int)
(declare-fun x1471 () Int)
(declare-fun x1145 () Bool)
(declare-fun x852 () Int)
(declare-fun x486 () Int)
(declare-fun x406 () Int)
(declare-fun x648 () Int)
(declare-fun x1231 () Bool)
(declare-fun x217 () Int)
(declare-fun x119 () Int)
(declare-fun x272 () Int)
(declare-fun x53 () Bool)
(declare-fun x229 () Int)
(declare-fun x116 () Int)
(declare-fun x495 () Bool)
(declare-fun x1371 () Int)
(declare-fun x664 () Int)
(declare-fun x201 () Int)
(declare-fun x74 () Int)
(declare-fun x303 () Int)
(declare-fun x1324 () Int)
(declare-fun x902 () Int)
(declare-fun x774 () Int)
(declare-fun x1375 () Int)
(declare-fun x638 () Int)
(declare-fun x456 () Int)
(declare-fun x442 () Bool)
(declare-fun x8 () Int)
(declare-fun x113 () Int)
(declare-fun x252 () Int)
(declare-fun x1356 () Int)
(declare-fun x1465 () Bool)
(declare-fun x94 () Int)
(declare-fun x1246 () Int)
(declare-fun x944 () Bool)
(declare-fun x58 () Int)
(declare-fun x324 () Int)
(declare-fun x202 () Int)
(declare-fun x15 () Int)
(declare-fun x1225 () Int)
(declare-fun x1335 () Int)
(declare-fun x1135 () Int)
(declare-fun x635 (Int) Int)
(declare-fun x236 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1378 () Int)
(declare-fun x1326 () Int)
(declare-fun x1032 () Int)
(declare-fun x1347 () Int)
(declare-fun x1292 () Int)
(declare-fun x18 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1060 () Int)
(declare-fun x751 () Int)
(declare-fun x1389 () Int)
(declare-fun x726 () Int)
(declare-fun x1038 () Int)
(declare-fun x56 () Int)
(declare-fun x991 () Int)
(declare-fun x734 () Int)
(declare-fun x1208 () Int)
(declare-fun x444 () Int)
(declare-fun x1296 () Int)
(declare-fun x315 () Int)
(declare-fun x903 () Int)
(declare-fun x866 () Int)
(declare-fun x305 () Int)
(declare-fun x1406 () Int)
(declare-fun x1303 () Int)
(declare-fun x798 () Int)
(declare-fun x222 () Bool)
(declare-fun x1434 () Int)
(declare-fun x1168 () Int)
(declare-fun x186 () Bool)
(declare-fun x212 () Int)
(declare-fun x620 () Int)
(declare-fun x946 () Int)
(declare-fun x170 () Int)
(declare-fun x1449 () Int)
(declare-fun x607 () Int)
(declare-fun x1417 () Int)
(declare-fun x899 () Int)
(declare-fun x471 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x876 () Bool)
(declare-fun x593 () Int)
(declare-fun x1422 () Int)
(declare-fun x873 () Int)
(declare-fun x299 () Int)
(declare-fun x198 () Int)
(declare-fun x108 () Int)
(declare-fun x1034 (Int Int) Int)
(declare-fun x278 () Int)
(declare-fun x385 () Int)
(declare-fun x1325 () Int)
(declare-fun x1222 () Bool)
(declare-fun x732 () Int)
(declare-fun x264 () Int)
(declare-fun x142 () Int)
(declare-fun x978 () Int)
(declare-fun x1412 () Int)
(declare-fun x1196 () Int)
(declare-fun x708 () Int)
(declare-fun x1354 () Int)
(declare-fun x1065 () Bool)
(declare-fun x654 () Int)
(declare-fun x690 () Int)
(declare-fun x948 () Int)
(declare-fun x394 () Int)
(declare-fun x388 () Int)
(declare-fun x1126 () Bool)
(declare-fun x860 () Int)
(declare-fun x45 () Int)
(declare-fun x298 () Int)
(declare-fun x830 () Int)
(declare-fun x110 () Int)
(declare-fun x615 () Int)
(declare-fun x333 () Bool)
(declare-fun x1490 () Int)
(declare-fun x71 (Int Int) Int)
(declare-fun x1330 () Bool)
(declare-fun x164 () Int)
(declare-fun x714 () Bool)
(declare-fun x1084 () Int)
(declare-fun x87 () Int)
(declare-fun x1477 () Int)
(declare-fun x689 () Int)
(declare-fun x863 () Int)
(declare-fun x1009 () Int)
(declare-fun x1428 () Int)
(declare-fun x567 (Int) Int)
(declare-fun x1317 (Int Int Int Int) Int)
(declare-fun x1467 () Bool)
(declare-fun x958 () Int)
(declare-fun x95 () Bool)
(declare-fun x339 () Int)
(declare-fun x640 () Int)
(declare-fun x1004 () Int)
(declare-fun x334 () Int)
(declare-fun x1320 () Int)
(declare-fun x140 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1322 () Int)
(declare-fun x167 () Int)
(declare-fun x161 () Int)
(declare-fun x936 () Bool)
(declare-fun x1376 () Int)
(declare-fun x631 () Int)
(declare-fun x1262 () Int)
(declare-fun x1008 () Int)
(declare-fun x1048 () Int)
(declare-fun x1277 () Int)
(declare-fun x420 () Int)
(declare-fun x530 () Int)
(declare-fun x1387 () Int)
(declare-fun x1440 () Int)
(declare-fun x1452 () Int)
(declare-fun x1221 () Int)
(declare-fun x1080 () Int)
(declare-fun x701 () Int)
(declare-fun x781 () Int)
(declare-fun x1219 () Bool)
(declare-fun x629 () Int)
(declare-fun x529 () Int)
(declare-fun x770 () Int)
(declare-fun x387 () Int)
(declare-fun x787 () Bool)
(declare-fun x1019 () Int)
(declare-fun x776 () Int)
(declare-fun x361 () Int)
(declare-fun x292 () Bool)
(declare-fun x382 () Int)
(declare-fun x1055 () Int)
(declare-fun x920 () Int)
(declare-fun x20 () Bool)
(declare-fun x472 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1204 () Int)
(declare-fun x592 () Bool)
(declare-fun x627 () Int)
(declare-fun x909 () Int)
(declare-fun x29 () Int)
(declare-fun x929 () Int)
(declare-fun x694 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x591 () Int)
(declare-fun x1076 () Int)
(declare-fun x348 () Int)
(declare-fun x1005 () Int)
(declare-fun x893 () Bool)
(declare-fun x1247 () Int)
(declare-fun x349 () Int)
(declare-fun x163 () Int)
(declare-fun x454 () Int)
(declare-fun x1095 () Bool)
(declare-fun x818 () Int)
(declare-fun x715 () Int)
(declare-fun x294 () Int)
(declare-fun x1439 () Int)
(declare-fun x1093 () Int)
(declare-fun x1328 () Int)
(declare-fun x408 () Bool)
(declare-fun x451 () Int)
(declare-fun x1457 () Int)
(declare-fun x817 () Int)
(declare-fun x508 () Int)
(declare-fun x391 (Int) Int)
(declare-fun x985 () Int)
(declare-fun x1297 () Int)
(declare-fun x1413 () Int)
(declare-fun x967 () Bool)
(declare-fun x352 () Bool)
(declare-fun x101 () Int)
(declare-fun x1291 () Int)
(declare-fun x271 () Int)
(declare-fun x699 () Int)
(declare-fun x713 () Int)
(declare-fun x1239 () Bool)
(declare-fun x923 () Int)
(declare-fun x1230 () Bool)
(declare-fun x319 () Bool)
(declare-fun x96 () Int)
(declare-fun x257 () Int)
(declare-fun x424 () Int)
(declare-fun x157 () Int)
(declare-fun x343 () Int)
(declare-fun x1162 () Bool)
(declare-fun x507 () Int)
(declare-fun x1139 () Int)
(declare-fun x707 () Int)
(declare-fun x892 () Int)
(declare-fun x1438 () Int)
(declare-fun x1051 () Int)
(declare-fun x870 () Int)
(declare-fun x681 () Int)
(declare-fun x1343 () Int)
(declare-fun x1341 () Int)
(declare-fun x1250 () Int)
(declare-fun x623 () Int)
(declare-fun x1068 () Int)
(declare-fun x799 () Int)
(declare-fun x515 () Int)
(declare-fun x1414 () Int)
(declare-fun x389 () Bool)
(declare-fun x227 () Int)
(declare-fun x832 () Int)
(declare-fun x1179 () Int)
(declare-fun x1235 () Int)
(declare-fun x934 () Bool)
(declare-fun x762 () Int)
(declare-fun x1396 () Int)
(declare-fun x1442 () Int)
(declare-fun x1365 () Int)
(declare-fun x1015 () Int)
(declare-fun x658 () Int)
(declare-fun x325 () Int)
(declare-fun x42 () Bool)
(declare-fun x1031 () Int)
(declare-fun x815 () Int)
(declare-fun x289 () Int)
(declare-fun x165 () Int)
(declare-fun x353 () Int)
(declare-fun x545 () Int)
(declare-fun x850 () Bool)
(declare-fun x1313 () Int)
(declare-fun x396 () Int)
(declare-fun x479 () Bool)
(declare-fun x782 () Int)
(declare-fun x369 () Int)
(declare-fun x288 () Int)
(declare-fun x597 () Int)
(declare-fun x800 () Int)
(declare-fun x656 () Int)
(declare-fun x1468 () Int)
(declare-fun x1489 () Bool)
(declare-fun x855 () Int)
(declare-fun x214 () Int)
(declare-fun x168 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1470 () Int)
(declare-fun x820 () Int)
(declare-fun x779 () Int)
(declare-fun x883 () Int)
(declare-fun x647 () Int)
(declare-fun x1338 () Int)
(declare-fun x246 () Int)
(declare-fun x1411 () Int)
(declare-fun x363 () Int)
(declare-fun x193 () Bool)
(declare-fun x380 () Int)
(declare-fun x1123 () Int)
(declare-fun x1271 () Bool)
(declare-fun x429 () Bool)
(declare-fun x1075 () Int)
(declare-fun x660 () Int)
(declare-fun x245 () Bool)
(declare-fun x560 () Int)
(declare-fun x1290 () Int)
(declare-fun x67 () Int)
(declare-fun x1388 () Int)
(declare-fun x1059 () Int)
(declare-fun x360 () Int)
(declare-fun x724 (Int) Int)
(declare-fun x1130 () Int)
(declare-fun x66 () Int)
(declare-fun x277 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1062 () Int)
(declare-fun x331 () Int)
(declare-fun x878 () Int)
(declare-fun x178 () Bool)
(declare-fun x1420 () Int)
(declare-fun x749 () Int)
(declare-fun x1071 () Int)
(declare-fun x783 () Int)
(declare-fun x297 () Bool)
(declare-fun x1097 () Int)
(declare-fun x904 () Int)
(declare-fun x739 () Int)
(declare-fun x851 () Bool)
(declare-fun x1223 () Int)
(declare-fun x336 () Int)
(declare-fun x1125 () Bool)
(declare-fun x105 () Bool)
(declare-fun x34 () Int)
(declare-fun x557 () Int)
(declare-fun x230 () Int)
(declare-fun x1104 () Int)
(declare-fun x554 () Int)
(declare-fun x121 () Int)
(declare-fun x561 (Int) Int)
(declare-fun x1289 () Int)
(declare-fun x357 () Int)
(declare-fun x211 () Int)
(declare-fun x1450 () Int)
(declare-fun x148 () Bool)
(declare-fun x752 () Int)
(declare-fun x887 () Int)
(declare-fun x930 () Int)
(declare-fun x972 () Int)
(declare-fun x283 () Int)
(declare-fun x868 () Int)
(declare-fun x611 () Int)
(declare-fun x683 () Int)
(declare-fun x79 () Bool)
(declare-fun x314 () Int)
(declare-fun x586 () Int)
(declare-fun x1346 () Bool)
(declare-fun x644 () Int)
(declare-fun x1287 () Int)
(declare-fun x1214 () Int)
(declare-fun x534 () Int)
(declare-fun x1152 () Int)
(declare-fun x511 () Int)
(declare-fun x722 () Int)
(declare-fun x1105 () Int)
(declare-fun x956 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x797 () Int)
(declare-fun x431 () Int)
(declare-fun x771 () Int)
(declare-fun x705 () Int)
(declare-fun x641 () Int)
(declare-fun x890 () Bool)
(declare-fun x216 () Bool)
(declare-fun x1193 () Int)
(declare-fun x301 () Int)
(declare-fun x461 () Bool)
(declare-fun x13 () Bool)
(declare-fun x758 () Int)
(declare-fun x522 () Bool)
(declare-fun x103 (Int) Int)
(declare-fun x225 () Int)
(declare-fun x32 () Int)
(declare-fun x574 () Bool)
(declare-fun x743 () Int)
(declare-fun x1404 () Int)
(declare-fun x791 () Bool)
(declare-fun x886 () Int)
(declare-fun x254 () Int)
(declare-fun x1403 () Int)
(declare-fun x747 () Int)
(declare-fun x127 () Int)
(declare-fun x384 () Int)
(declare-fun x877 () Int)
(declare-fun x1308 () Int)
(declare-fun x1118 () Int)
(declare-fun x1409 () Int)
(declare-fun x1096 () Int)
(declare-fun x1066 () Int)
(declare-fun x154 () Int)
(declare-fun x1022 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x97 () Int)
(declare-fun x128 () Int)
(declare-fun x501 () Int)
(declare-fun x40 () Bool)
(declare-fun x547 () Int)
(declare-fun x911 () Int)
(declare-fun x306 () Int)
(declare-fun x998 () Int)
(declare-fun x1351 () Int)
(declare-fun x997 () Int)
(declare-fun x1170 () Int)
(declare-fun x235 () Int)
(declare-fun x578 () Int)
(declare-fun x778 () Int)
(declare-fun x1238 () Int)
(declare-fun x963 () Int)
(declare-fun x378 () Bool)
(declare-fun x609 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1363 () Int)
(declare-fun x181 () Int)
(declare-fun x9 () Bool)
(declare-fun x1309 (Int) Bool)
(declare-fun x238 () Int)
(declare-fun x1453 () Int)
(declare-fun x757 () Int)
(declare-fun x1295 () Int)
(declare-fun x861 () Int)
(declare-fun x831 () Int)
(declare-fun x933 () Bool)
(declare-fun x1007 () Int)
(declare-fun x173 () Int)
(declare-fun x21 () Int)
(declare-fun x151 () Int)
(declare-fun x1498 () Int)
(declare-fun x65 () Bool)
(declare-fun x309 () Int)
(declare-fun x31 () Int)
(declare-fun x1482 () Int)
(declare-fun x695 () Int)
(declare-fun x568 () Int)
(declare-fun x275 () Int)
(declare-fun x1012 () Int)
(declare-fun x764 () Int)
(declare-fun x48 () Int)
(declare-fun x307 () Bool)
(declare-fun x281 () Int)
(declare-fun x421 () Int)
(declare-fun x539 () Int)
(declare-fun x476 () Int)
(declare-fun x1361 () Int)
(declare-fun x584 () Int)
(declare-fun x253 () Int)
(declare-fun x915 () Int)
(declare-fun x1016 () Int)
(declare-fun x1069 () Int)
(declare-fun x345 () Int)
(declare-fun x1276 () Bool)
(declare-fun x969 () Int)
(declare-fun x274 () Int)
(declare-fun x250 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x438 () Int)
(declare-fun x604 () Int)
(declare-fun x795 () Int)
(declare-fun x805 () Int)
(declare-fun x856 () Int)
(declare-fun x468 () Int)
(declare-fun x219 () Int)
(declare-fun x1424 () Int)
(declare-fun x1029 () Bool)
(declare-fun x537 () Int)
(declare-fun x1050 () Bool)
(declare-fun x473 () Int)
(declare-fun x913 () Int)
(declare-fun x1207 () Int)
(declare-fun x637 () Int)
(declare-fun x1473 (Int) Int)
(declare-fun x1027 () Int)
(declare-fun x273 () Int)
(declare-fun x118 () Int)
(declare-fun x328 () Int)
(declare-fun x417 () Int)
(declare-fun x626 () Int)
(declare-fun x864 () Int)
(declare-fun x673 (Int) Int)
(declare-fun x858 () Int)
(declare-fun x875 (Int) Int)
(declare-fun x841 () Int)
(declare-fun x678 () Int)
(declare-fun x231 () Int)
(declare-fun x661 () Int)
(declare-fun x1229 () Int)
(declare-fun x1344 () Int)
(declare-fun x189 () Int)
(declare-fun x1447 () Int)
(declare-fun x290 (Int) Int)
(declare-fun x896 () Int)
(declare-fun x733 () Int)
(declare-fun x122 () Int)
(declare-fun x989 () Int)
(declare-fun x1304 () Int)
(declare-fun x12 () Int)
(declare-fun x819 () Int)
(declare-fun x24 () Int)
(declare-fun x906 () Int)
(declare-fun x970 () Int)
(declare-fun x553 () Int)
(declare-fun x10 () Int)
(declare-fun x925 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1436 () Int)
(declare-fun x585 (Int Int) Int)
(declare-fun x259 () Bool)
(declare-fun x1098 () Int)
(declare-fun x569 () Int)
(declare-fun x1279 () Int)
(declare-fun x824 () Int)
(declare-fun x761 () Int)
(declare-fun x1161 () Int)
(declare-fun x737 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1483 () Int)
(declare-fun x922 () Int)
(declare-fun x106 () Int)
(declare-fun x188 () Int)
(declare-fun x931 () Int)
(declare-fun x1047 () Bool)
(declare-fun x848 () Int)
(declare-fun x602 () Int)
(declare-fun x38 (Int Int Int Int) Int)
(declare-fun x93 () Int)
(declare-fun x1400 () Int)
(declare-fun x926 () Int)
(declare-fun x496 () Int)
(declare-fun x470 () Int)
(declare-fun x1143 () Int)
(declare-fun x28 () Int)
(declare-fun x19 () Int)
(declare-fun x346 () Int)
(declare-fun x196 () Int)
(declare-fun x1488 () Int)
(declare-fun x1476 () Bool)
(declare-fun x846 (Int) Int)
(declare-fun x490 () Int)
(declare-fun x1137 () Int)
(declare-fun x520 () Int)
(declare-fun x559 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1129 () Int)
(declare-fun x137 () Int)
(declare-fun x1178 () Int)
(declare-fun x1159 () Int)
(declare-fun x1169 () Int)
(declare-fun x1101 () Int)
(declare-fun x1085 () Int)
(declare-fun x443 () Int)
(declare-fun x525 () Int)
(declare-fun x240 () Int)
(declare-fun x427 () Int)
(declare-fun x347 () Int)
(declare-fun x1423 () Int)
(declare-fun x632 () Int)
(declare-fun x209 () Int)
(declare-fun x326 () Int)
(declare-fun x965 () Int)
(declare-fun x1021 () Int)
(declare-fun x1228 () Int)
(declare-fun x1348 () Int)
(declare-fun x1374 () Bool)
(declare-fun x208 () Int)
(declare-fun x26 () Int)
(declare-fun x548 () Int)
(declare-fun x975 () Int)
(declare-fun x517 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1138 () Int)
(declare-fun x790 (Int Int Int Int Int Int Int) Int)
(declare-fun x1074 () Int)
(declare-fun x1393 () Int)
(declare-fun x1336 () Bool)
(declare-fun x662 () Int)
(declare-fun x1306 () Int)
(declare-fun x228 () Int)
(declare-fun x1242 () Bool)
(declare-fun x552 (Int Int Int) Int)
(declare-fun x951 () Int)
(declare-fun x789 () Int)
(declare-fun x338 () Int)
(declare-fun x677 () Int)
(declare-fun x1144 () Int)
(declare-fun x952 () Int)
(declare-fun x736 () Int)
(declare-fun x234 () Int)
(declare-fun x777 () Int)
(declare-fun x1270 () Int)
(declare-fun x197 (Int Int Int Int Int Int) Int)
(declare-fun x932 () Int)
(declare-fun x727 () Int)
(declare-fun x205 () Int)
(declare-fun x136 () Int)
(declare-fun x1264 () Int)
(declare-fun x1156 () Int)
(declare-fun x663 () Int)
(declare-fun x469 () Int)
(declare-fun x1267 () Int)
(declare-fun x1384 () Bool)
(declare-fun x941 () Int)
(declare-fun x645 () Int)
(declare-fun x1072 () Int)
(declare-fun x792 () Int)
(declare-fun x295 () Int)
(declare-fun x1064 () Int)
(declare-fun x564 () Bool)
(declare-fun x485 () Int)
(declare-fun x1427 () Int)
(declare-fun x1014 () Int)
(declare-fun x867 () Int)
(declare-fun x953 () Int)
(declare-fun x1350 () Bool)
(declare-fun x1154 () Int)
(declare-fun x754 () Int)
(declare-fun x1244 () Bool)
(declare-fun x526 (Int) Int)
(declare-fun x809 () Int)
(declare-fun x1203 () Int)
(declare-fun x183 () Int)
(declare-fun x650 () Int)
(declare-fun x700 (Int) Int)
(declare-fun x1285 () Int)
(declare-fun x321 () Int)
(declare-fun x502 () Bool)
(declare-fun x1391 () Int)
(declare-fun x419 () Int)
(declare-fun x184 () Int)
(declare-fun x69 () Int)
(declare-fun x579 () Int)
(declare-fun x949 () Int)
(declare-fun x999 () Int)
(declare-fun x1435 () Int)
(declare-fun x961 () Int)
(declare-fun x1061 () Bool)
(declare-fun x881 () Int)
(declare-fun x556 () Int)
(declare-fun x311 (Int) Int)
(declare-fun x1192 () Int)
(declare-fun x1298 () Int)
(declare-fun x535 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1040 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1177 () Int)
(declare-fun x423 () Bool)
(declare-fun x1461 () Int)
(declare-fun x474 () Int)
(declare-fun x1142 () Int)
(declare-fun x366 () Int)
(declare-fun x1037 () Int)
(declare-fun x102 () Int)
(declare-fun x510 () Int)
(declare-fun x880 () Int)
(declare-fun x455 () Bool)
(declare-fun x755 (Int) Int)
(declare-fun x1408 () Int)
(declare-fun x243 () Int)
(declare-fun x1253 () Bool)
(declare-fun x1200 () Int)
(declare-fun x49 () Int)
(declare-fun x401 () Int)
(declare-fun x430 () Int)
(declare-fun x1272 () Int)
(declare-fun x425 () Int)
(declare-fun x519 () Int)
(declare-fun x80 () Int)
(declare-fun x731 () Int)
(declare-fun x685 () Int)
(declare-fun x703 () Int)
(declare-fun x541 () Int)
(declare-fun x262 () Int)
(declare-fun x104 () Int)
(declare-fun x976 () Bool)
(declare-fun x835 () Bool)
(declare-fun x910 () Int)
(declare-fun x441 () Int)
(declare-fun x676 () Int)
(declare-fun x693 () Int)
(declare-fun x130 () Int)
(declare-fun x1492 () Int)
(declare-fun x937 () Int)
(declare-fun x786 () Int)
(declare-fun x156 () Int)
(declare-fun x114 () Int)
(declare-fun x1480 () Int)
(declare-fun x1399 () Int)
(declare-fun x155 () Int)
(declare-fun x1377 () Int)
(declare-fun x1131 () Int)
(declare-fun x1089 () Int)
(declare-fun x174 () Int)
(declare-fun x1113 () Int)
(declare-fun x50 () Int)
(declare-fun x1381 () Int)
(declare-fun x52 () Int)
(declare-fun x524 () Bool)
(declare-fun x702 () Int)
(declare-fun x618 () Int)
(declare-fun x260 () Int)
(declare-fun x634 () Int)
(declare-fun x888 () Int)
(declare-fun x669 () Int)
(declare-fun x1402 () Int)
(declare-fun x639 () Int)
(declare-fun x81 () Int)
(declare-fun x659 () Int)
(declare-fun x968 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1494 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1425 () Int)
(declare-fun x1259 () Int)
(declare-fun x492 () Int)
(declare-fun x759 () Int)
(declare-fun x885 () Int)
(declare-fun x43 () Int)
(declare-fun x373 () Int)
(declare-fun x1333 () Int)
(declare-fun x1258 () Int)
(declare-fun x682 () Int)
(declare-fun x1183 () Int)
(declare-fun x680 () Int)
(declare-fun x845 () Int)
(declare-fun x1458 () Int)
(declare-fun x942 () Int)
(declare-fun x962 () Bool)
(declare-fun x160 () Bool)
(declare-fun x1366 () Int)
(declare-fun x814 () Bool)
(declare-fun x213 () Int)
(declare-fun x266 () Bool)
(declare-fun x499 () Int)
(declare-fun x1355 () Bool)
(declare-fun x132 () Int)
(declare-fun x484 () Int)
(declare-fun x1236 () Int)
(declare-fun x1274 () Int)
(declare-fun x171 () Int)
(declare-fun x1339 () Int)
(declare-fun x258 (Int) Int)
(declare-fun x109 () Int)
(declare-fun x1110 () Bool)
(declare-fun x833 () Int)
(declare-fun x135 () Int)
(declare-fun x54 () Int)
(declare-fun x362 () Int)
(declare-fun x619 () Int)
(declare-fun x914 () Int)
(declare-fun x182 () Bool)
(declare-fun x249 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1107 () Int)
(declare-fun x573 () Int)
(declare-fun x215 () Int)
(declare-fun x194 () Int)
(declare-fun x224 () Int)
(declare-fun x1088 () Int)
(declare-fun x316 () Bool)
(declare-fun x317 () Int)
(declare-fun x1286 () Int)
(declare-fun x1357 () Int)
(declare-fun x410 () Int)
(declare-fun x1269 () Int)
(declare-fun x918 () Int)
(declare-fun x411 () Int)
(declare-fun x1049 () Int)
(declare-fun x973 () Int)
(declare-fun x1451 () Bool)
(declare-fun x630 () Int)
(declare-fun x514 () Int)
(declare-fun x1026 () Int)
(declare-fun x1265 () Int)
(declare-fun x1386 () Int)
(declare-fun x402 () Int)
(declare-fun x1283 () Int)
(declare-fun x1315 () Int)
(declare-fun x827 () Int)
(declare-fun x1006 () Int)
(declare-fun x371 () Int)
(declare-fun x804 () Int)
(declare-fun x335 () Int)
(declare-fun x434 () Int)
(declare-fun x889 () Bool)
(declare-fun x340 () Bool)
(declare-fun x11 () Int)
(declare-fun x509 () Int)
(declare-fun x55 () Int)
(declare-fun x741 () Int)
(declare-fun x370 () Int)
(declare-fun x91 () Int)
(declare-fun x1293 () Bool)
(declare-fun x735 () Int)
(declare-fun x1039 () Int)
(declare-fun x854 () Int)
(declare-fun x1305 () Bool)
(declare-fun x1218 () Int)
(declare-fun x583 () Int)
(declare-fun x551 () Int)
(declare-fun x518 () Int)
(declare-fun x146 () Int)
(declare-fun x342 () Bool)
(declare-fun x528 () Int)
(declare-fun x966 (Int) Int)
(declare-fun x1358 () Int)
(declare-fun x1197 () Int)
(declare-fun x368 () Int)
(declare-fun x1491 () Int)
(declare-fun x600 () Int)
(declare-fun x767 () Int)
(declare-fun x806 () Bool)
(declare-fun x874 () Bool)
(declare-fun x351 () Int)
(declare-fun x1337 () Int)
(declare-fun x1496 () Int)
(declare-fun x807 () Int)
(declare-fun x90 () Int)
(declare-fun x555 () Int)
(declare-fun x367 () Int)
(declare-fun x1364 () Int)
(declare-fun x1429 () Bool)
(declare-fun x917 () Int)
(declare-fun x1206 () Int)
(declare-fun x145 () Int)
(declare-fun x882 () Bool)
(declare-fun x1188 () Int)
(declare-fun x995 () Int)
(declare-fun x377 () Int)
(declare-fun x99 () Int)
(declare-fun x1474 () Int)
(declare-fun x270 () Int)
(declare-fun x550 () Int)
(declare-fun x748 () Int)
(declare-fun x1398 () Bool)
(declare-fun x796 () Int)
(declare-fun x1486 () Int)
(declare-fun x497 () Int)
(declare-fun x204 () Bool)
(declare-fun x706 () Int)
(declare-fun x616 () Int)
(declare-fun x596 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1189 () Int)
(declare-fun x310 () Int)
(declare-fun x465 () Int)
(declare-fun x740 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1184 () Int)
(declare-fun x608 () Int)
(declare-fun x849 () Bool)
(declare-fun x760 () Bool)
(declare-fun x905 () Int)
(declare-fun x803 () Int)
(declare-fun x865 () Int)
(declare-fun x293 () Int)
(declare-fun x1390 () Int)
(declare-fun x409 () Int)
(declare-fun x428 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1224 () Int)
(declare-fun x576 () Int)
(declare-fun x330 () Int)
(declare-fun x152 () Bool)
(declare-fun x1132 () Int)
(declare-fun x992 () Int)
(declare-fun x1255 () Bool)
(declare-fun x1432 () Int)
(declare-fun x816 () Int)
(declare-fun x1448 () Bool)
(declare-fun x716 () Int)
(declare-fun x558 () Bool)
(declare-fun x365 () Int)
(declare-fun x1312 () Bool)
(declare-fun x916 () Int)
(declare-fun x78 () Int)
(declare-fun x124 () Int)
(declare-fun x1495 () Int)
(declare-fun x605 () Int)
(declare-fun x730 () Int)
(declare-fun x1002 () Int)
(declare-fun x302 () Int)
(declare-fun x1056 () Int)
(declare-fun x1079 () Bool)
(declare-fun x987 () Bool)
(declare-fun x712 () Int)
(declare-fun x532 () Bool)
(declare-fun x542 () Int)
(declare-fun x546 () Int)
(declare-fun x1146 () Int)
(declare-fun x675 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1215 () Int)
(declare-fun x575 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1078 () Int)
(declare-fun x1043 () Int)
(declare-fun x871 () Int)
(declare-fun x341 () Int)
(declare-fun x709 () Int)
(declare-fun x172 () Bool)
(declare-fun x1497 () Int)
(declare-fun x413 () Int)
(declare-fun x405 () Int)
(declare-fun x1360 () Bool)
(declare-fun x572 () Int)
(declare-fun x7 () Bool)
(declare-fun x563 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1017 () Bool)
(declare-fun x822 () Int)
(declare-fun x843 () Bool)
(declare-fun x453 () Int)
(declare-fun x1013 () Int)
(declare-fun x285 () Int)
(declare-fun x667 () Int)
(declare-fun x332 () Bool)
(declare-fun x354 () Int)
(declare-fun x986 () Int)
(declare-fun x133 () Int)
(declare-fun x16 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x1301 () Int)
(declare-fun x738 () Int)
(declare-fun x1106 () Int)
(declare-fun x158 () Bool)
(declare-fun x580 () Int)
(declare-fun x924 () Int)
(declare-fun x825 () Bool)
(declare-fun x1487 () Int)
(declare-fun x82 () Int)
(declare-fun x398 () Int)
(declare-fun x543 () Int)
(declare-fun x422 () Int)
(declare-fun x1044 () Int)
(declare-fun x829 () Int)
(declare-fun x666 () Int)
(declare-fun x488 () Int)
(declare-fun x1103 () Int)
(declare-fun x190 () Int)
(declare-fun x426 () Bool)
(declare-fun x1202 () Int)
(declare-fun x383 () Int)
(declare-fun x1175 () Int)
(declare-fun x1191 () Int)
(declare-fun x6 (Int) Int)
(declare-fun x672 () Int)
(declare-fun x393 () Int)
(declare-fun x1181 () Bool)
(declare-fun x729 () Int)
(declare-fun x493 () Bool)
(declare-fun x1445 () Int)
(declare-fun x665 () Int)
(declare-fun x187 () Int)
(declare-fun x1410 () Int)
(declare-fun x437 () Int)
(declare-fun x175 () Bool)
(declare-fun x112 () Int)
(declare-fun x22 () Int)
(declare-fun x72 () Bool)
(declare-fun x1319 () Int)
(declare-fun x179 () Int)
(declare-fun x1166 () Int)
(declare-fun x947 () Int)
(declare-fun x480 () Int)
(declare-fun x1481 () Int)
(declare-fun x147 () Bool)
(declare-fun x70 () Int)
(declare-fun x1261 () Int)
(declare-fun x763 () Int)
(declare-fun x719 () Int)
(declare-fun x1115 () Int)
(declare-fun x407 () Int)
(declare-fun x1180 () Int)
(declare-fun x744 () Int)
(declare-fun x1430 () Int)
(declare-fun x1385 () Bool)
(declare-fun x329 () Int)
(declare-fun x919 () Int)
(declare-fun x1077 () Int)
(declare-fun x808 () Int)
(declare-fun x1018 () Int)
(declare-fun x62 () Int)
(declare-fun x134 () Bool)
(declare-fun x742 () Int)
(declare-fun x500 () Bool)
(declare-fun x498 () Int)
(declare-fun x1134 () Int)
(declare-fun x379 () Int)
(declare-fun x606 () Int)
(declare-fun x1455 () Int)
(declare-fun x233 () Int)
(declare-fun x35 () Int)
(declare-fun x668 () Int)
(declare-fun x1340 () Int)
(declare-fun x521 () Bool)
(declare-fun x395 () Int)
(declare-fun x840 () Int)
(declare-fun x39 () Int)
(declare-fun x445 () Int)
(declare-fun x464 () Int)
(declare-fun x900 () Int)
(declare-fun x1237 () Int)
(declare-fun x1299 () Int)
(declare-fun x513 () Int)
(declare-fun x772 () Int)
(declare-fun x107 () Int)
(declare-fun x115 () Bool)
(declare-fun x955 () Int)
(declare-fun x392 () Int)
(declare-fun x879 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1421 () Int)
(declare-fun x1282 () Int)
(declare-fun x1194 () Int)
(declare-fun x85 () Int)
(declare-fun x601 () Int)
(declare-fun x1042 () Int)
(declare-fun x836 () Int)
(declare-fun x1331 () Int)
(declare-fun x83 () Int)
(declare-fun x433 () Int)
(declare-fun x268 () Int)
(declare-fun x1280 () Int)
(declare-fun x73 () Int)
(declare-fun x57 () Int)
(declare-fun x1045 () Int)
(declare-fun x1248 () Int)
(declare-fun x1119 () Int)
(declare-fun x1294 () Int)
(declare-fun x143 () Int)
(declare-fun x478 () Int)
(declare-fun x75 () Int)
(declare-fun x412 () Int)
(declare-fun x27 () Int)
(declare-fun x1028 () Int)
(declare-fun x1459 () Int)
(declare-fun x1102 () Int)
(declare-fun x4 () Bool)
(declare-fun x533 () Int)
(declare-fun x834 () Int)
(declare-fun x1054 () Int)
(declare-fun x622 () Bool)
(declare-fun x111 () Bool)
(declare-fun x291 () Int)
(declare-fun x1380 () Int)
(declare-fun x458 () Int)
(declare-fun x907 () Int)
(declare-fun x200 () Int)
(declare-fun x1091 () Bool)
(declare-fun x89 () Bool)
(declare-fun x364 () Int)
(declare-fun x467 () Int)
(declare-fun x251 () Int)
(declare-fun x44 () Int)
(declare-fun x350 () Int)
(declare-fun x381 () Int)
(declare-fun x746 () Int)
(declare-fun x180 () Int)
(declare-fun x710 () Int)
(declare-fun x571 () Int)
(declare-fun x375 () Bool)
(declare-fun x1209 () Int)
(declare-fun x337 () Bool)
(declare-fun x718 () Int)
(declare-fun x595 () Bool)
(declare-fun x1201 () Int)
(declare-fun x544 () Int)
(declare-fun x3 () Int)
(declare-fun x1025 () Int)
(declare-fun x1173 () Int)
(declare-fun x1275 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1278 () Int)
(declare-fun x120 () Int)
(declare-fun x1401 () Int)
(declare-fun x1210 () Int)
(declare-fun x1053 () Int)
(declare-fun x63 () Int)
(declare-fun x773 () Bool)
(declare-fun x844 () Int)
(declare-fun x898 () Int)
(declare-fun x1023 () Int)
(declare-fun x404 () Bool)
(declare-fun x957 () Int)
(declare-fun x1419 (Int) Int)
(declare-fun x594 () Int)
(declare-fun x418 (Int) Int)
(declare-fun x589 () Int)
(declare-fun x399 () Int)
(declare-fun x1394 () Int)
(declare-fun x1155 () Int)
(declare-fun x203 () Int)
(declare-fun x153 () Int)
(declare-fun x940 () Int)
(declare-fun x837 () Int)
(declare-fun x938 () Int)
(declare-fun x374 () Int)
(declare-fun x1493 () Int)
(declare-fun x810 () Bool)
(declare-fun x633 () Int)
(declare-fun x1220 () Int)
(declare-fun x265 () Int)
(declare-fun x1368 () Int)
(declare-fun x92 () Bool)
(declare-fun x1127 () Int)
(declare-fun x284 () Int)
(declare-fun x144 () Int)
(declare-fun x1485 () Bool)
(declare-fun x950 (Int) Int)
(declare-fun x1001 () Int)
(declare-fun x149 () Int)
(declare-fun x1418 () Int)
(declare-fun x847 () Int)
(declare-fun x207 () Int)
(declare-fun x768 () Bool)
(declare-fun x1083 () Int)
(declare-fun x489 () Int)
(declare-fun x466 () Int)
(declare-fun x323 () Int)
(declare-fun x921 () Int)
(declare-fun x1352 () Int)
(declare-fun x1260 () Int)
(declare-fun x780 () Int)
(declare-fun x439 () Bool)
(declare-fun x300 () Int)
(declare-fun x416 () Int)
(declare-fun x159 () Int)
(declare-fun x1082 () Int)
(declare-fun x826 () Int)
(declare-fun x1087 () Int)
(declare-fun x1067 () Int)
(declare-fun x1484 (Int) Int)
(declare-fun x588 () Int)
(declare-fun x242 () Int)
(declare-fun x226 () Int)
(declare-fun x504 () Int)
(declare-fun x448 () Int)
(declare-fun x912 () Int)
(declare-fun x614 () Int)
(declare-fun x613 () Bool)
(declare-fun x503 () Int)
(declare-fun x721 () Int)
(declare-fun x1171 () Int)
(declare-fun x612 () Int)
(declare-fun x1094 () Int)
(declare-fun x33 () Int)
(declare-fun x939 () Int)
(declare-fun x415 () Int)
(declare-fun x823 () Int)
(declare-fun x785 () Int)
(declare-fun x23 () Int)
(declare-fun x17 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1499 () Int)
(declare-fun x784 () Int)
(declare-fun x440 () Bool)
(declare-fun x788 () Int)
(declare-fun x610 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x536 (Int Int Int Int Int) Int)
(declare-fun x435 () Int)
(declare-fun x590 () Int)
(declare-fun x1128 () Int)
(declare-fun x1345 () Int)
(declare-fun x1416 () Bool)
(declare-fun x312 () Int)
(declare-fun x1176 () Int)
(declare-fun x261 () Int)
(declare-fun x512 () Bool)
(declare-fun x1147 () Int)
(declare-fun x599 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1033 () Int)
(declare-fun x581 () Bool)
(declare-fun x842 () Int)
(declare-fun x1302 () Int)
(declare-fun x1090 () Int)
(declare-fun x980 () Int)
(define-fun x450 ((x494 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x494) (>= x494 0)) x494 (- x494 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x901 ((x494 Int)) Int (ite (and (< x494 0) (>= x494 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x494 115792089237316195423570985008687907853269984665640564039457584007913129639936) x494))
(define-fun x577 ((x603 Int)) Bool (and (>= x603 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x603)))
(define-fun x1036 ((x603 Int)) Bool (and (= (x1034 x603 115792089237316195423570985008687907853269984665640564039457584007913129639935) x603) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639935 x603) x603)))
(define-fun x1240 ((x603 Int)) Bool (and (= 0 (x1034 x603 0)) (= (x1034 0 x603) 0)))
(define-fun x1444 ((x603 Int)) Bool (= (x1034 x603 x603) x603))
(define-fun x51 ((x603 Int)) Bool (and (x1444 x603) (x1036 x603) (x1240 x603)))
(define-fun x646 ((x603 Int) (x60 Int)) Bool (= (x1034 x603 x60) (x1034 x60 x603)))
(define-fun x2 ((x603 Int) (x60 Int)) Bool (and (=> (>= x603 0) (>= x603 (x1034 x603 x60))) (<= 0 (x1034 x603 x60)) (=> (>= x60 0) (<= (x1034 x603 x60) x60))))
(define-fun x717 ((x603 Int) (x60 Int)) Bool (and (x2 x603 x60) (x646 x603 x60)))
(define-fun x1172 ((x603 Int)) Bool (= (mod x603 1461501637330902918203684832716283019655932542976) (x1034 x603 1461501637330902918203684832716283019655932542975)))
(define-fun x696 ((x603 Int)) Bool (and (x1172 x603) (x717 x603 1461501637330902918203684832716283019655932542975)))
(define-fun x64 ((x603 Int)) Bool (= (+ (x1034 x603 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x603 32)) (mod x603 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x129 ((x603 Int)) Bool (and (x64 x603) (x717 x603 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1379 ((x897 Int)) Int (ite (< x897 x551) (x673 x897) 0))
(define-fun x566 ((x897 Int)) Int 0)
(define-fun x750 ((x897 Int)) Int (x391 x897))
(define-fun x318 ((x897 Int)) Int (x1419 x897))
(define-fun x117 ((x897 Int)) Int (x724 x897))
(define-fun x1407 ((x897 Int)) Int (x276 x897))
(define-fun x1003 ((x897 Int)) Int (x966 x897))
(define-fun x990 ((x897 Int)) Int 0)
(define-fun x221 ((x897 Int)) Int (ite (= x897 x1343) x234 (x418 x897)))
(define-fun x821 ((x897 Int)) Int (ite (= x1347 x897) x644 (x221 x897)))
(define-fun x642 ((x897 Int)) Int 0)
(define-fun x1099 ((x897 Int)) Int (ite (= x897 4) 32 (x642 x897)))
(define-fun x862 ((x897 Int)) Int (ite (= x897 36) x924 (x1099 x897)))
(define-fun x177 ((x897 Int)) Int (ite (= x897 68) x932 (x862 x897)))
(define-fun x1466 ((x897 Int)) Int (ite (= 100 x897) x503 (x177 x897)))
(define-fun x482 ((x897 Int)) Int (ite (= 132 x897) 352 (x1466 x897)))
(define-fun x218 ((x897 Int)) Int (ite (= x897 388) x1265 (x482 x897)))
(define-fun x1441 ((x897 Int)) Int (ite (and (< x897 (+ x940 420)) (<= 420 x897)) (x750 (- x897 420)) (x218 x897)))
(define-fun x1327 ((x897 Int)) Int (ite (= 164 x897) x508 (x1441 x897)))
(define-fun x475 ((x897 Int)) Int (ite (= x897 x616) x986 (x1327 x897)))
(define-fun x516 ((x897 Int)) Int (ite (and (>= x897 x143) (< x897 (+ x143 x615))) (x318 (- x897 x143)) (x475 x897)))
(define-fun x853 ((x897 Int)) Int (ite (= 196 x897) x1175 (x516 x897)))
(define-fun x1311 ((x897 Int)) Int (ite (= x364 x897) x907 (x853 x897)))
(define-fun x895 ((x897 Int)) Int (ite (and (>= x897 x1039) (< x897 (+ x1039 x472))) (x117 (- x897 x1039)) (x1311 x897)))
(define-fun x869 ((x897 Int)) Int (ite (= 228 x897) x473 (x895 x897)))
(define-fun x994 ((x897 Int)) Int (ite (= x363 x897) x431 (x869 x897)))
(define-fun x139 ((x897 Int)) Int (ite (and (>= x897 x419) (> (+ x431 x419) x897)) (x1407 (- x897 x419)) (x994 x897)))
(define-fun x674 ((x897 Int)) Int (ite (= x897 260) x877 (x139 x897)))
(define-fun x462 ((x897 Int)) Int (ite (= x904 x897) x554 (x674 x897)))
(define-fun x1151 ((x897 Int)) Int (ite (and (< x897 (+ x1387 x44)) (>= x897 x44)) (x1003 (- x897 x44)) (x462 x897)))
(define-fun x166 ((x897 Int)) Int (ite (= x897 292) x1474 (x1151 x897)))
(define-fun x223 ((x897 Int)) Int (ite (= 324 x897) x1264 (x166 x897)))
(define-fun x598 ((x897 Int)) Int (ite (= 356 x897) x798 (x223 x897)))
(define-fun x1226 ((x897 Int)) Int (ite (= x897 x937) x963 (x821 x897)))
(define-fun x84 ((x897 Int)) Int (ite (= x125 x897) x1258 (x1226 x897)))
(define-fun x1332 ((x897 Int)) Int (ite (= x897 128) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x566 x897)))
(define-fun x282 ((x897 Int)) Int (ite (= 132 x897) x639 (x1332 x897)))
(define-fun x1030 ((x897 Int)) Int (ite (= x897 164) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x282 x897)))
(define-fun x704 ((x897 Int)) Int (ite (and (< x897 160) (<= 128 x897)) (x950 (- x897 128)) (x1030 x897)))
(define-fun x655 ((x897 Int)) Int (ite x375 (x704 x897) (x1030 x897)))
(define-fun x1263 ((x897 Int)) Int (ite (and (>= x897 128) (< x897 160)) (x950 (- x897 128)) (x655 x897)))
(define-fun x527 ((x897 Int)) Int (ite (= x897 288) x154 (x1263 x897)))
(define-fun x977 ((x897 Int)) Int (ite (= x897 160) 288 (x527 x897)))
(define-fun x1329 ((x897 Int)) Int (ite (= x897 320) x534 (x977 x897)))
(define-fun x1281 ((x897 Int)) Int (ite (= 352 x897) x980 (x1329 x897)))
(define-fun x643 ((x897 Int)) Int (ite (= 448 x897) x1166 (x1281 x897)))
(define-fun x1150 ((x897 Int)) Int (ite (= x897 x69) x1426 (x643 x897)))
(define-fun x884 ((x897 Int)) Int (ite (= x897 x608) x230 (x1150 x897)))
(define-fun x540 ((x897 Int)) Int (ite (= x897 x1498) x1404 (x884 x897)))
(define-fun x447 ((x897 Int)) Int (ite (and (<= x831 x897) (< x897 (+ x1404 x831))) (x598 (- (+ x1357 x897) x831)) (x540 x897)))
(define-fun x872 ((x897 Int)) Int (ite (= x897 x459) 0 (x447 x897)))
(define-fun x322 ((x897 Int)) Int (ite (= x293 x897) x1498 (x872 x897)))
(define-fun x1117 ((x897 Int)) Int (ite (= 480 x897) x69 (x322 x897)))
(define-fun x1273 ((x897 Int)) Int (ite x1061 (x643 x897) (x1117 x897)))
(define-fun x1446 ((x897 Int)) Int (ite (= 384 x897) 448 (x1273 x897)))
(define-fun x636 ((x897 Int)) Int (ite (= x891 x897) x112 (x1446 x897)))
(define-fun x617 ((x897 Int)) Int (ite (and (<= x998 x897) (< x897 (+ x112 x998))) (x598 (- (+ x85 x897) x998)) (x636 x897)))
(define-fun x150 ((x897 Int)) Int (ite (= x1176 x897) 0 (x617 x897)))
(define-fun x582 ((x897 Int)) Int (ite (= x897 416) x891 (x150 x897)))
(define-fun x745 ((x897 Int)) Int (ite (= x897 192) 320 (x582 x897)))
(define-fun x286 ((x897 Int)) Int (ite (= 224 x897) x130 (x745 x897)))
(define-fun x725 ((x897 Int)) Int (ite (= x897 256) x25 (x286 x897)))
(define-fun x649 ((x897 Int)) Int (ite (= x897 x396) x1211 (x725 x897)))
(define-fun x1133 ((x897 Int)) Int (ite (and (> (+ x728 x1211) x897) (<= x728 x897)) (x598 (- (+ x86 x897) x728)) (x649 x897)))
(define-fun x304 ((x897 Int)) Int (ite (= x897 x1049) 0 (x1133 x897)))
(define-fun x452 ((x897 Int)) Int (ite (= x328 x897) x1037 (x304 x897)))
(define-fun x1433 ((x897 Int)) Int (ite (= x398 x897) x265 (x452 x897)))
(define-fun x255 ((x897 Int)) Int (ite (= x731 x897) x920 (x1433 x897)))
(define-fun x838 ((x897 Int)) Int (ite (= x1262 x897) x465 (x255 x897)))
(define-fun x1165 ((x897 Int)) Int (ite (= x278 x897) x651 (x838 x897)))
(define-fun x570 ((x897 Int)) Int (ite (= x897 x1169) x1016 (x1165 x897)))
(define-fun x263 ((x897 Int)) Int (ite (= x897 x782) x726 (x570 x897)))
(define-fun x1472 ((x897 Int)) Int (ite (= x897 x848) x1262 (x263 x897)))
(define-fun x206 ((x897 Int)) Int (ite x1000 (x255 x897) (x1472 x897)))
(define-fun x984 ((x897 Int)) Int (ite (= x8 x897) x731 (x206 x897)))
(define-fun x523 ((x897 Int)) Int (ite (= x885 x897) x1180 (x984 x897)))
(define-fun x1217 ((x897 Int)) Int (ite (= x29 x897) x21 (x523 x897)))
(define-fun x1163 ((x897 Int)) Int (ite (= x897 x743) x285 (x1217 x897)))
(define-fun x943 ((x897 Int)) Int (ite (= x897 x1190) x1307 (x1163 x897)))
(define-fun x1362 ((x897 Int)) Int (ite (= x252 x897) x341 (x943 x897)))
(define-fun x988 ((x897 Int)) Int (ite (= x262 x897) x481 (x1362 x897)))
(define-fun x1373 ((x897 Int)) Int (ite (= x264 x897) x29 (x988 x897)))
(define-fun x1349 ((x897 Int)) Int (ite x160 (x523 x897) (x1373 x897)))
(define-fun x979 ((x897 Int)) Int (ite (= x528 x897) x885 (x1349 x897)))
(define-fun x414 ((x897 Int)) Int (ite (= x1207 x897) x1197 (x979 x897)))
(define-fun x267 ((x897 Int)) Int (ite (= x897 x779) x1365 (x414 x897)))
(define-fun x1114 ((x897 Int)) Int (ite (= x991 x897) x633 (x267 x897)))
(define-fun x1241 ((x897 Int)) Int (ite (= x772 x897) x1425 (x1114 x897)))
(define-fun x1148 ((x897 Int)) Int (ite (= x897 x654) x658 (x1241 x897)))
(define-fun x313 ((x897 Int)) Int (ite (= x246 x897) x209 (x1148 x897)))
(define-fun x308 ((x897 Int)) Int (ite (= x201 x897) x779 (x313 x897)))
(define-fun x927 ((x897 Int)) Int (ite x1451 (x414 x897) (x308 x897)))
(define-fun x794 ((x897 Int)) Int (ite (= x897 x896) x1207 (x927 x897)))
(define-fun x802 ((x897 Int)) Int (ite (= x480 x897) x1299 (x794 x897)))
(define-fun x954 ((x897 Int)) Int (ite (= x897 x485) x1295 (x802 x897)))
(define-fun x1359 ((x897 Int)) Int (ite (= x897 x362) x497 (x954 x897)))
(define-fun x46 ((x897 Int)) Int (ite (= x897 x660) x433 (x1359 x897)))
(define-fun x1116 ((x897 Int)) Int (ite (= x1008 x897) x1453 (x46 x897)))
(define-fun x1469 ((x897 Int)) Int (ite (= x1408 x897) x607 (x1116 x897)))
(define-fun x1383 ((x897 Int)) Int (ite (and (> (+ x1486 x379) x897) (<= x1486 x897)) (x598 (- (+ x897 x662) x1486)) (x1469 x897)))
(define-fun x327 ((x897 Int)) Int (ite x53 (x1469 x897) (x1383 x897)))
(define-fun x1437 ((x897 Int)) Int (ite (= x897 x1460) x370 (x327 x897)))
(define-fun x1456 ((x897 Int)) Int (ite (= x897 x1143) x1391 (x1437 x897)))
(define-fun x397 ((x897 Int)) Int (ite (= x897 x748) x1224 (x1456 x897)))
(define-fun x1112 ((x897 Int)) Int (ite (= x464 x897) 128 (x397 x897)))
(define-fun x1035 ((x897 Int)) Int (ite (= x897 x365) x202 (x1112 x897)))
(define-fun x538 ((x897 Int)) Int (ite (= x897 x1066) x1040 (x1035 x897)))
(define-fun x199 ((x897 Int)) Int (ite x307 (x538 x897) (ite x1476 (x1035 x897) (x1484 x897))))
(define-fun x390 ((x897 Int)) Int (ite (= x897 x1289) 0 (x199 x897)))
(define-fun x123 ((x897 Int)) Int (ite (= x829 x897) x903 (x390 x897)))
(define-fun x981 ((x897 Int)) Int (ite (= x897 x708) x1089 (x123 x897)))
(define-fun x1121 ((x897 Int)) Int (ite x769 (x327 x897) (x981 x897)))
(define-fun x5 ((x897 Int)) Int (ite (= x376 x897) x1328 (x1121 x897)))
(define-fun x652 ((x897 Int)) Int (ite x1029 (x5 x897) (ite x250 (x1121 x897) (x526 x897))))
(define-fun x859 ((x897 Int)) Int (ite (= x897 x169) x845 (x652 x897)))
(define-fun x386 ((x897 Int)) Int (ite (= x406 x897) x87 (x859 x897)))
(define-fun x1284 ((x897 Int)) Int (ite (= x830 x897) x1210 (x386 x897)))
(define-fun x1052 ((x897 Int)) Int (ite (= x897 x661) x1218 (x1284 x897)))
(define-fun x687 ((x897 Int)) Int (ite (= x897 x108) x1410 (x1052 x897)))
(define-fun x839 ((x897 Int)) Int (ite (= x191 x897) x1194 (x687 x897)))
(define-fun x247 ((x897 Int)) Int (ite (= x541 x897) x837 (x839 x897)))
(define-fun x1108 ((x897 Int)) Int (ite (= x1394 x897) x1042 (x247 x897)))
(define-fun x1443 ((x897 Int)) Int (ite (= x897 x935) x22 (x1108 x897)))
(define-fun x460 ((x897 Int)) Int (ite (= x135 x897) x957 (x1443 x897)))
(define-fun x766 ((x897 Int)) Int (ite (= x897 x926) x763 (x460 x897)))
(define-fun x1232 ((x897 Int)) Int (ite (= x897 x232) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x766 x897)))
(define-fun x684 ((x897 Int)) Int (ite (= x982 x897) x1414 (x1232 x897)))
(define-fun x531 ((x897 Int)) Int (ite (= x897 x1247) x705 (x684 x897)))
(define-fun x320 ((x897 Int)) Int (ite (= x232 x897) 0 (x531 x897)))
(define-fun x1234 ((x897 Int)) Int (ite (= x783 x897) x184 (x320 x897)))
(define-fun x126 ((x897 Int)) Int (ite (= x897 x343) x1006 (x1234 x897)))
(define-fun x61 ((x897 Int)) Int (ite (= x897 x466) x387 (x126 x897)))
(define-fun x692 ((x897 Int)) Int (ite (= x897 x817) x149 (x61 x897)))
(define-fun x68 ((x897 Int)) Int (ite (= x235 x897) x781 (x692 x897)))
(define-fun x506 ((x897 Int)) Int (ite x193 (ite x581 (x68 x897) (ite x1230 (x68 x897) (x531 x897))) (x531 x897)))
(define-fun x432 ((x897 Int)) Int (ite (= x897 x1354) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x506 x897)))
(define-fun x287 ((x897 Int)) Int (ite (= x505 x897) x547 (x432 x897)))
(define-fun x269 ((x897 Int)) Int (ite (= x897 x190) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x287 x897)))
(define-fun x296 ((x897 Int)) Int (ite (and (> (+ 32 x1354) x897) (>= x897 x1354)) (x1473 (- x897 x1354)) (x269 x897)))
(define-fun x446 ((x897 Int)) Int (ite x65 (x296 x897) (x269 x897)))
(define-fun x1367 ((x897 Int)) Int (ite (and (<= x1354 x897) (> (+ 32 x1354) x897)) (x1473 (- x897 x1354)) (x446 x897)))
(define-fun x813 ((x897 Int)) Int (ite (= x897 x672) x1152 (x1367 x897)))
(define-fun x723 ((x897 Int)) Int (ite (and (<= x194 x897) (< x897 (+ x1068 x194))) (x598 (- (+ x662 x897) x194)) (x813 x897)))
(define-fun x1397 ((x897 Int)) Int (ite x512 (x813 x897) (x723 x897)))
(define-fun x928 ((x897 Int)) Int (ite (= x897 x1156) x370 (x1397 x897)))
(define-fun x959 ((x897 Int)) Int (ite (= x897 x1422) x467 (x928 x897)))
(define-fun x400 ((x897 Int)) Int (ite (= x897 x1072) x1409 (x959 x897)))
(define-fun x621 ((x897 Int)) Int (ite (= x897 x281) 128 (x400 x897)))
(define-fun x1288 ((x897 Int)) Int (ite (= x897 x93) x77 (x621 x897)))
(define-fun x996 ((x897 Int)) Int (ite (= x897 x383) x1393 (x1288 x897)))
(define-fun x653 ((x897 Int)) Int (ite x378 (x996 x897) (ite x849 (x1288 x897) (x162 x897))))
(define-fun x625 ((x897 Int)) Int (ite (= x897 x589) 0 (x653 x897)))
(define-fun x47 ((x897 Int)) Int (ite (= x923 x897) x886 (x625 x897)))
(define-fun x1405 ((x897 Int)) Int (ite (= x347 x897) x1170 (x47 x897)))
(define-fun x1205 ((x897 Int)) Int (ite x92 (x1397 x897) (x1405 x897)))
(define-fun x894 ((x897 Int)) Int (ite (= x897 x305) x1192 (x1205 x897)))
(define-fun x811 ((x897 Int)) Int (ite (= x1206 x897) x1499 (x894 x897)))
(define-fun x1149 ((x897 Int)) Int (ite (= x107 x897) x463 (x811 x897)))
(define-fun x1199 ((x897 Int)) Int (ite (= x897 x1319) x309 (x1149 x897)))
(define-fun x487 ((x897 Int)) Int (ite x1384 (x1149 x897) (ite x1467 (x811 x897) (ite x1095 (x894 x897) (ite x1160 (x1205 x897) (x1199 x897))))))
(define-fun x359 ((x897 Int)) Int (ite (= x1452 x897) x1480 (x487 x897)))
(define-fun x628 ((x897 Int)) Int (ite (= x897 x695) x87 (x359 x897)))
(define-fun x1141 ((x897 Int)) Int (ite (= x930 x897) x809 (x628 x897)))
(define-fun x549 ((x897 Int)) Int (ite (= x50 x897) x739 (x1141 x897)))
(define-fun x1198 ((x897 Int)) Int (ite (= x897 x539) x369 (x549 x897)))
(define-fun x1011 ((x897 Int)) Int (ite (= x897 x1221) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x1198 x897)))
(define-fun x753 ((x897 Int)) Int (ite (= x256 x897) x1261 (x1011 x897)))
(define-fun x98 ((x897 Int)) Int (ite (and (<= x1221 x897) (< x897 (+ 32 x1221))) (x88 (- x897 x1221)) (x753 x897)))
(define-fun x974 ((x897 Int)) Int (ite x352 (x98 x897) (x753 x897)))
(define-fun x960 ((x897 Int)) Int (ite (and (<= x1221 x897) (> (+ 32 x1221) x897)) (x88 (- x897 x1221)) (x974 x897)))
(define-fun x100 ((x897 Int)) Int (ite (= x1266 x897) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x960 x897)))
(define-fun x59 ((x897 Int)) Int (ite (= x897 x906) x576 (x100 x897)))
(define-fun x775 ((x897 Int)) Int (ite (and (> (+ x1266 32) x897) (>= x897 x1266)) (x561 (- x897 x1266)) (x59 x897)))
(define-fun x679 ((x897 Int)) Int (ite x500 (x775 x897) (x59 x897)))
(define-fun x1431 ((x897 Int)) Int (ite (and (<= x1266 x897) (< x897 (+ 32 x1266))) (x561 (- x897 x1266)) (x679 x897)))
(define-fun x248 ((x897 Int)) Int (ite (= x153 x897) x217 (x1431 x897)))
(define-fun x237 ((x897 Int)) Int (ite (= x897 x10) 0 (x248 x897)))
(define-fun x244 ((x897 Int)) Int (ite (= x897 x171) 0 (x237 x897)))
(define-fun x587 ((x897 Int)) Int (ite (= x897 x233) 0 (x244 x897)))
(define-fun x1310 ((x897 Int)) Int (ite (= x1064 x897) 0 (x587 x897)))
(define-fun x76 ((x897 Int)) Int (ite (= x1377 x897) 0 (x1310 x897)))
(define-fun x1342 ((x897 Int)) Int (ite (= x897 x32) x10 (x76 x897)))
(define-fun x449 ((x897 Int)) Int (ite (= x897 x815) 0 (x1342 x897)))
(define-fun x436 ((x897 Int)) Int (ite (= x897 x1045) 0 (x449 x897)))
(define-fun x403 ((x897 Int)) Int (ite (= x897 x864) 0 (x436 x897)))
(define-fun x355 ((x897 Int)) Int (ite (= x1396 x897) 0 (x403 x897)))
(define-fun x185 ((x897 Int)) Int (ite (= x1250 x897) 0 (x355 x897)))
(define-fun x1454 ((x897 Int)) Int (ite (= x1252 x897) x815 (x185 x897)))
(define-fun x176 ((x897 Int)) Int (x1379 x897))
(assert (=> (>= 10000 x1475) (= (x857 x1475) 0)))
(assert (x577 x80))
(assert (x577 x86))
(assert (not (x1309 (x552 x335 x749 x1257))))
(assert (=> (>= 10000 x1390) (= 0 (x857 x1390))))
(assert (> (x197 x1331 x841 x151 x1275 x54 x1134) 10000))
(assert (=> (<= x1132 10000) (= (x857 x1132) 0)))
(assert (x577 x1442))
(assert (x577 x1387))
(assert (=> (>= 10000 x411) (= (x857 x411) 0)))
(assert (= x1331 (x311 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (x577 x1303))
(assert (= (x635 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)) x1074))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (= 0 (x857 2065879269316)))
(assert (=> (>= 10000 x14) (= (x857 x14) 0)))
(assert (x577 x140))
(assert (=> (<= x1140 10000) (= (x857 x1140) 0)))
(assert (x577 x163))
(assert (x577 x731))
(assert (= (and x1485 x172) x1392))
(assert (= x682 (x103 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41))))
(assert (= x1353 (x635 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (= x863 (x6 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (x577 x1171))
(assert (x577 x600))
(assert (=> (<= x1228 10000) (= 0 (x857 x1228))))
(assert (x577 x1101))
(assert (x577 x815))
(assert (> (x536 x836 x1248 x1212 x911 x501) 10000))
(assert (x577 x1118))
(assert (x577 x159))
(assert (x696 x1009))
(assert (< 10000 (x552 x1315 x530 x698)))
(assert (x577 x413))
(assert (x577 x465))
(assert (x577 x819))
(assert (= x335 (x311 (x552 x335 x749 x1257))))
(assert (x577 x1080))
(assert (x577 x970))
(assert (x577 x899))
(assert (=> (>= 10000 x430) (= 0 (x857 x430))))
(assert (=> (<= x368 10000) (= (x857 x368) 0)))
(assert (x577 x651))
(assert (x577 x1015))
(assert (x577 x1411))
(assert (x577 x1272))
(assert (x577 x358))
(assert (x577 x1298))
(assert (= (x755 (x197 x1115 x75 x1098 x430 x1082 x902)) x1098))
(assert (= x1459 (x103 (x552 x1115 x1459 x1053))))
(assert (x577 x478))
(assert (x577 x1471))
(assert (x577 x1302))
(assert (= (x700 (x197 x335 x548 x210 x420 x1154 x938)) x1154))
(assert (= x80 (x700 (x197 x836 x1184 x914 x1298 x80 x1174))))
(assert (< (x790 x388 x339 x919 x713 x1302 x120 x336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x552 64 x491 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x875 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x860))
(assert (< (x1317 x1315 x323 x1127 x1297) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1239 x426) x65))
(assert (= (x857 (x536 x335 x1403 x832 x14 x1348)) (x536 x335 x1403 x832 x14 x1348)))
(assert (x577 x192))
(assert (= x786 (x103 (x197 x1390 x786 x321 x627 x1277 x560))))
(assert (= (x700 (x197 x1390 x786 x321 x627 x1277 x560)) x1277))
(assert (= (x857 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)))
(assert (x577 x200))
(assert (< (x197 x1331 x841 x151 x1275 x54 x1134) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x302 10000) (= (x857 x302) 0)))
(assert (=> (>= 10000 x803) (= 0 (x857 x803))))
(assert (x51 x693))
(assert (= (x311 (x585 x388 x631)) x388))
(assert (x577 x1418))
(assert (=> (>= 10000 x1026) (= (x857 x1026) 0)))
(assert (=> (<= x212 10000) (= 0 (x857 x212))))
(assert (x51 x1009))
(assert (not (x1309 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (x577 x1188))
(assert (x577 x1434))
(assert (= (x635 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002)) x214))
(assert (x577 x829))
(assert (= (x635 (x197 x260 x511 x275 x1481 x102 x542)) x1481))
(assert (=> (<= x681 10000) (= 0 (x857 x681))))
(assert (= (x552 x836 x31 x279) (x857 (x552 x836 x31 x279))))
(assert (x577 x1206))
(assert (=> (>= 10000 x1315) (= 0 (x857 x1315))))
(assert (=> (>= 10000 x764) (= 0 (x857 x764))))
(assert (x577 x1320))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (=> (<= x141 10000) (= 0 (x857 x141))))
(assert (x577 x916))
(assert (x577 x519))
(assert (= x627 (x635 (x197 x1390 x786 x321 x627 x1277 x560))))
(assert (=> (>= 10000 x569) (= 0 (x857 x569))))
(assert (x577 x143))
(assert (x577 x1186))
(assert (= (x857 57896044618658097711785492504343953926634992332820282019728792003956564820645) 0))
(assert (x577 x1212))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x836 x1248 x1212 x911 x501)))
(assert (x1309 18446744073709551518))
(assert (= (x857 18446746139588821059) 0))
(assert (= (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863) (x857 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (= (x857 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x577 x180))
(assert (x577 x1299))
(assert (x577 x1013))
(assert (=> (>= 10000 x818) (= (x857 x818) 0)))
(assert (=> (<= x1002 10000) (= (x857 x1002) 0)))
(assert (x577 x473))
(assert (x577 x467))
(assert (=> (>= 10000 x914) (= 0 (x857 x914))))
(assert (= x493 (and x408 (not x134))))
(assert (x577 x190))
(assert (x577 x116))
(assert (x51 x1119))
(assert (x577 x602))
(assert (= (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023) (x857 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (= x1331 (x311 (x585 x1331 x212))))
(assert (x577 x1051))
(assert (= (x536 x1331 x489 x1129 x803 x67) (x857 (x536 x1331 x489 x1129 x803 x67))))
(assert (x577 x1098))
(assert (= 0 (x311 (x846 0))))
(assert (= x384 (x700 (x536 x1390 x411 x136 x1292 x384))))
(assert (x577 x262))
(assert (=> (<= x80 10000) (= 0 (x857 x80))))
(assert (=> (<= x54 10000) (= (x857 x54) 0)))
(assert (x577 x125))
(assert (> (x585 x388 x631) 10000))
(assert (= x1182 (=> (and (= x298 (x450 (+ x543 x383))) (= (x47 x923) x1115) (= x886 (x901 (- x1007 32))) (= x1385 (<= x1115 224)) (= x553 (x450 (+ 32 x923))) (= (x450 (+ x77 31)) x399) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x399) x543) (< x923 x298) (<= x923 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x923) (= x1007 (x901 (- x298 x923))) (<= x923 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x589 (x450 (+ x77 x383))) (<= 1 x298)) (and x1385 (=> (and (= (x47 x553) x52) (= (x47 x257) x413) (= x1082 (x47 x709)) (= x902 (x47 x1440)) (= (x47 x1280) x860) (= (x47 x797) x165) (= x302 (x47 x553)) (= (ite (= x1115 0) x106 (ite (>= 32 x1115) x1351 (ite (<= x1115 64) x167 (ite (>= 96 x1115) x879 (ite (<= x1115 128) x657 (ite (<= x1115 160) x189 (ite (<= x1115 192) x242 (ite (>= 224 x1115) x629 x1124)))))))) x1170) (= x799 (x450 (+ 64 x553))) (= x338 (x450 (+ 32 x553))) (= (not (< 1 x70)) x945) (= x257 (x450 (+ 128 x553))) (= x167 (x552 x1115 x1459 x1053)) (= (x47 x716) x878) (= (x47 x1269) x1098) (>= x1363 1) (= (x47 x553) x671) (= x1351 (x585 x1115 x1214)) (= x157 (x47 x338)) (= x499 (x450 (+ x553 192))) (= x1111 (x450 (+ 32 x553))) (= (x450 (+ x553 32)) x205) (= (x450 (+ x553 64)) x3) (= x1214 (x47 x553)) (= x1450 (x450 (+ 96 x553))) (= x361 (x450 (+ x553 128))) (= (x47 x553) x75) (= x735 (x450 (+ 64 x553))) (= (x47 x735) x430) (= x1269 (x450 (+ 32 x553))) (= x569 (x47 x799)) (= (x450 (+ 32 x553)) x371) (= (x47 x205) x1053) (= x70 (x1405 x451)) (= x324 (x47 x3)) (= x688 (x47 x371)) (= (x610 x1115 x52 x157 x823 x1188 x413 x860 x345) x629) (= (x790 x1115 x1209 x1399 x569 x880 x56 x165) x242) (= (x450 (+ 32 x672)) x347) (= (x450 (+ 32 x553)) x678) (= x1209 (x47 x553)) (= x777 (x450 (+ 64 x553))) (= x797 (x450 (+ x553 160))) (= x1188 (x47 x1488)) (= (x450 (+ x553 128)) x1440) (= x879 (x1317 x1115 x302 x688 x324)) (= x226 (x47 x330)) (= x1488 (x450 (+ x553 96))) (= x1459 (x47 x553)) (= (x47 x361) x56) (= x189 (x197 x1115 x75 x1098 x430 x1082 x902)) (= (x536 x1115 x671 x666 x226 x878) x657) (= x330 (x450 (+ x553 64))) (= x880 (x47 x1450)) (= x106 (x846 0)) (= x1280 (x450 (+ 160 x553))) (= x451 (x1405 x1493)) (= (x47 x672) x1363) (= x709 (x450 (+ 96 x553))) (= (x47 x499) x345) (= (x47 x777) x823) (= (x450 (+ 96 x553)) x716) (= (x47 x678) x666) (= x1399 (x47 x1111))) (and (=> (= x298 x1452) x1244) x945))))))
(assert (x577 x367))
(assert (x577 x912))
(assert (x577 x584))
(assert (= (x755 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) x1059))
(assert (not (x1309 (x552 x1331 x251 x1004))))
(assert (=> (<= x978 10000) (= (x857 x978) 0)))
(assert (= x1314 (x6 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (x696 x1274))
(assert (x577 x1100))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x197 x1315 x1215 x402 x812 x776 x317)))
(assert (< 10000 (x585 x335 x1055)))
(assert (x577 x278))
(assert (x577 x1046))
(assert (=> (<= x833 10000) (= (x857 x833) 0)))
(assert (=> (<= x688 10000) (= (x857 x688) 0)))
(assert (= (x857 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)))
(assert (= x773 (=> (and (= x43 1) (= (x450 (+ x1358 128)) x1340) (= x545 x146) (= x1100 (x1431 x1340)) (= (x1034 1461501637330902918203684832716283019655932542975 x756) x146) (= (x1034 1461501637330902918203684832716283019655932542975 x1100) x545)) x564)))
(assert (x577 x1201))
(assert (< (x790 x836 x751 x997 x792 x1161 x142 x520) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and (not x1448) (= x1155 x181)) (and x1448 (and (<= 32 x913) (>= 4294967295 x913) (= 1 x1155)))) (and (= x1448 (< 0 x181)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1221) (not (= x1221 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1266 (x450 (+ x1221 32))) (> x1266 x1221) (= (x450 (+ x1266 4)) x906) (>= x634 1) (<= x1221 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1088 1) (not (= x1221 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x1221 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x913) (= (x960 x1221) x634) (= (x1034 1461501637330902918203684832716283019655932542975 x1060) x1067) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1221)) (<= 32 x913) (= (x1034 1461501637330902918203684832716283019655932542975 x1009) x576))) x297) x1321))
(assert (x577 x993))
(assert (x577 x402))
(assert (= (x552 x260 x243 x667) (x857 (x552 x260 x243 x667))))
(assert (x577 x1423))
(assert (not (x1309 (x197 x1115 x75 x1098 x430 x1082 x902))))
(assert (= (x103 (x790 x388 x339 x919 x713 x1302 x120 x336)) x339))
(assert (x577 x848))
(assert (x577 x686))
(assert (x577 x435))
(assert (=> (>= 10000 x826) (= (x857 x826) 0)))
(assert (not (x1309 (x790 x388 x339 x919 x713 x1302 x120 x336))))
(assert (x577 x1376))
(assert (x577 x1102))
(assert (=> (>= 10000 x1043) (= 0 (x857 x1043))))
(assert (x577 x112))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (= x1331 (x311 (x552 x1331 x251 x1004))))
(assert (x577 x496))
(assert (=> (>= 10000 x127) (= 0 (x857 x127))))
(assert (x577 x982))
(assert (=> (>= 10000 x270) (= (x857 x270) 0)))
(assert (=> (>= 10000 x1298) (= 0 (x857 x1298))))
(assert (not (x1309 (x536 x1315 x372 x632 x11 x1259))))
(assert (= x638 (x755 (x1317 x1390 x900 x638 x219))))
(assert (= (x755 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002)) x457))
(assert (x577 x961))
(assert (x577 x1134))
(assert (= (x755 (x790 x388 x339 x919 x713 x1302 x120 x336)) x919))
(assert (x577 x181))
(assert (x129 x399))
(assert (x577 x1319))
(assert (=> (>= 10000 x1399) (= (x857 x1399) 0)))
(assert (=> (<= x477 10000) (= 0 (x857 x477))))
(assert (x577 x626))
(assert (x577 x1009))
(assert (x577 x351))
(assert (x577 x1389))
(assert (x577 x136))
(assert (= x1451 (and (not x1276) x1110)))
(assert (=> (<= x682 10000) (= 0 (x857 x682))))
(assert (x577 x803))
(assert (= x902 (x290 (x197 x1115 x75 x1098 x430 x1082 x902))))
(assert (x577 x759))
(assert (x577 x361))
(assert (> (x1317 x1115 x302 x688 x324) 10000))
(assert (x577 x612))
(assert (x577 x972))
(assert (=> (<= x542 10000) (= (x857 x542) 0)))
(assert (x577 x26))
(assert (= (x103 (x536 x388 x1140 x647 x600 x1470)) x1140))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x577 x1257))
(assert (x577 x1368))
(assert (x577 x786))
(assert (= x413 (x290 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345))))
(assert (= (x857 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (=> (<= x548 10000) (= 0 (x857 x548))))
(assert (x577 x1453))
(assert (x577 x424))
(assert (x577 x579))
(assert (x577 x1458))
(assert (= (x311 (x1317 x388 x1019 x514 x385)) x388))
(assert (= x277 (or x216 x512)))
(assert (not (x1309 (x536 x1390 x411 x136 x1292 x384))))
(assert (x577 x275))
(assert (x577 x377))
(assert (x577 x364))
(assert (< (x1317 x1115 x302 x688 x324) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x1403))
(assert (=> (<= x511 10000) (= 0 (x857 x511))))
(assert (x1309 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (= (x1317 66 x441 x12 x312) (x857 (x1317 66 x441 x12 x312))))
(assert (x577 x940))
(assert (x1309 18446744073709551487))
(assert (x577 x284))
(assert (x577 x497))
(assert (x577 x314))
(assert (< 10000 (x552 x1331 x251 x1004)))
(assert (x577 x511))
(assert (x577 x747))
(assert (x577 x30))
(assert (=> (>= 10000 x457) (= 0 (x857 x457))))
(assert (= (x311 (x552 x388 x972 x584)) x388))
(assert (x577 x711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x585 x388 x631)))
(assert (x577 x187))
(assert (=> (<= x1259 10000) (= (x857 x1259) 0)))
(assert (x577 x789))
(assert (x577 x1358))
(assert (= x1000 (and (not x1245) x850)))
(assert (= 0 (x857 18446744073709551518)))
(assert (= (x635 (x197 x335 x548 x210 x420 x1154 x938)) x420))
(assert (=> (>= 10000 x1138) (= 0 (x857 x1138))))
(assert (= x1312 (=> (and (< x1262 x138) (= x726 (x598 x915)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1262) (= (x450 (+ x1090 32)) x1104) (>= 5 x465) (= x915 (x450 (+ x1012 32))) (= (x450 (+ 32 x1104)) x1012) (<= x651 1461501637330902918203684832716283019655932542975) (= x1169 (x450 (+ x278 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1262)) (<= x101 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x598 x1012) x1016) (= x782 (x450 (+ 32 x1169))) (>= 18446744073709551615 x1262) (= x101 (x901 (- x662 x1090))) (= (not (> x920 1)) x737) (= x465 (x598 x1090)) (= (x450 (+ x1262 32)) x278) (or (>= 18446744073709551487 x1262) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x1262)) (or (<= x1262 18446744073709551487) (>= x1262 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (>= 18446744073709551614 x1262) (or (<= x1090 2065879269316) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x1090)) (not (> x1262 x138)) (= (x598 x1104) x651) (<= x1262 18446744073709551614) (= x138 (x450 (+ 128 x1262))) (>= x101 128) (>= 18446744073709551615 x1262)) (and x737 (=> (= x138 x885) x835)))))
(assert (= x1041 (or x378 x849)))
(assert (x577 x430))
(assert (< 10000 (x1317 x1390 x900 x638 x219)))
(assert (= x148 (or x92 x1041)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x335 x749 x1257)))
(assert (x577 x230))
(assert (x577 x171))
(assert (= x836 (x311 (x536 x836 x1248 x1212 x911 x501))))
(assert (< (x790 x1315 x861 x438 x484 x163 x834 x712) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x755 (x790 x1115 x1209 x1399 x569 x880 x56 x165)) x1399))
(assert (x577 x191))
(assert (= (x635 (x1317 x260 x478 x168 x1105)) x1105))
(assert (x577 x903))
(assert (= (x857 111717504842162250273123531270270194031611963357183166590777697365354585522176) 0))
(assert (= (x103 (x552 64 x491 1)) x491))
(assert (x577 x735))
(assert (= (x311 (x585 x836 x1366)) x836))
(assert (x577 x870))
(assert (x577 x1060))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x197 x335 x548 x210 x420 x1154 x938)))
(assert (x577 x1106))
(assert (x577 x254))
(assert (= x1115 (x311 (x536 x1115 x671 x666 x226 x878))))
(assert (x577 x93))
(assert (x577 x483))
(assert (x577 x627))
(assert (=> (<= x1215 10000) (= 0 (x857 x1215))))
(assert (< 10000 (x536 x1331 x489 x1129 x803 x67)))
(assert (= x681 (x875 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (x577 x560))
(assert (x577 x1296))
(assert (x577 x842))
(assert (x577 x1019))
(assert (x577 x232))
(assert (= x970 (x6 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (x696 x1492))
(assert (x1309 18446746139588821027))
(assert (=> (<= x1417 10000) (= (x857 x1417) 0)))
(assert (< 10000 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)))
(assert (= x564 (=> (and (= x240 (x1431 x474)) (= (not (> x240 1)) x502)) (and x502 x592))))
(assert (= x1228 (x290 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (= (x585 x335 x1055) (x857 (x585 x335 x1055))))
(assert (=> (>= 10000 x1154) (= (x857 x1154) 0)))
(assert (= x546 (x635 (x1317 x1331 x96 x1056 x546))))
(assert (x577 x299))
(assert (< 10000 (x1317 x836 x665 x833 x867)))
(assert (=> (<= x354 10000) (= 0 (x857 x354))))
(assert (x577 x225))
(assert (x577 x239))
(assert (x577 x1043))
(assert (x577 x1115))
(assert (= x770 (x700 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41))))
(assert (x577 x788))
(assert (< 10000 (x536 x1115 x671 x666 x226 x878)))
(assert (x577 x827))
(assert (x577 x317))
(assert (= x251 (x103 (x552 x1331 x251 x1004))))
(assert (x577 x1474))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (x577 x545))
(assert (< 10000 (x197 x335 x548 x210 x420 x1154 x938)))
(assert (=> (<= x372 10000) (= 0 (x857 x372))))
(assert (=> (>= 10000 x324) (= 0 (x857 x324))))
(assert (=> (>= 10000 x836) (= (x857 x836) 0)))
(assert (= x914 (x755 (x197 x836 x1184 x914 x1298 x80 x1174))))
(assert (x577 x645))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x1331 x251 x1004)))
(assert (=> (<= x478 10000) (= (x857 x478) 0)))
(assert (=> (<= x1287 10000) (= (x857 x1287) 0)))
(assert (x577 x63))
(assert (x577 x729))
(assert (not (x1309 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345))))
(assert (x577 x1166))
(assert (x577 x264))
(assert (x577 x867))
(assert (= (and x340 x1448) x500))
(assert (> (x1317 x1315 x323 x1127 x1297) 10000))
(assert (= (x290 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)) x1102))
(assert (= (x635 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)) x1071))
(assert (= x151 (x755 (x197 x1331 x841 x151 x1275 x54 x1134))))
(assert (x577 x1144))
(assert (x577 x783))
(assert (=> (<= x1347 10000) (= (x857 x1347) 0)))
(assert (x577 x234))
(assert (> (x552 x388 x972 x584) 10000))
(assert (x577 x1417))
(assert (=> (>= 10000 x31) (= 0 (x857 x31))))
(assert (x577 x75))
(assert (x577 x949))
(assert (x577 x804))
(assert (x577 x668))
(assert (= x713 (x635 (x790 x388 x339 x919 x713 x1302 x120 x336))))
(assert (x577 x1401))
(assert (x577 x573))
(assert (= x275 (x755 (x197 x260 x511 x275 x1481 x102 x542))))
(assert (x577 x1164))
(assert (x577 x878))
(assert (x577 x349))
(assert (x577 x942))
(assert (x577 x1185))
(assert (> (x790 x1115 x1209 x1399 x569 x880 x56 x165) 10000))
(assert (not (x1309 (x1317 x1331 x96 x1056 x546))))
(assert (=> (>= 10000 x1421) (= (x857 x1421) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x585 x836 x1366)))
(assert (x577 x260))
(assert (x577 x170))
(assert (=> (<= x1236 10000) (= (x857 x1236) 0)))
(assert (x129 x693))
(assert (=> (>= 10000 x120) (= 0 (x857 x120))))
(assert (= x1366 (x103 (x585 x836 x1366))))
(assert (x577 x1497))
(assert (= x1384 (and x461 (not x266))))
(assert (x577 x395))
(assert (< (x1317 x1390 x900 x638 x219) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x1135))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (x577 x1010))
(assert (x577 x1406))
(assert (x577 x1037))
(assert (=> (<= x310 10000) (= (x857 x310) 0)))
(assert (=> (<= x671 10000) (= 0 (x857 x671))))
(assert (x577 x991))
(assert (x577 x1254))
(assert (x577 x1059))
(assert (x577 x1256))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x577 x863))
(assert (x577 x335))
(assert (=> (>= 10000 x1053) (= 0 (x857 x1053))))
(assert (=> (<= x931 10000) (= 0 (x857 x931))))
(assert (x577 x948))
(assert (= (x290 (x790 x388 x339 x919 x713 x1302 x120 x336)) x120))
(assert (=> (<= x1195 10000) (= (x857 x1195) 0)))
(assert (x577 x198))
(assert (= x321 (x755 (x197 x1390 x786 x321 x627 x1277 x560))))
(assert (x577 x659))
(assert (x577 x898))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x790 x1115 x1209 x1399 x569 x880 x56 x165)))
(assert (x577 x1491))
(assert (< 10000 (x790 x260 x145 x1038 x995 x78 x1070 x1014)))
(assert (=> (<= x226 10000) (= 0 (x857 x226))))
(assert (x577 x533))
(assert (= x1467 (and (not x1086) x1219)))
(assert (=> (<= x203 10000) (= (x857 x203) 0)))
(assert (x577 x110))
(assert (= x1390 (x311 (x585 x1390 x858))))
(assert (=> (<= x1380 10000) (= (x857 x1380) 0)))
(assert (= x1015 (x755 (x1317 x335 x354 x1015 x1381))))
(assert (x577 x856))
(assert (x577 x83))
(assert (x577 x871))
(assert (= (x857 4294967295) 0))
(assert (x577 x44))
(assert (= x574 (and (not x1448) x340)))
(assert (x577 x955))
(assert (x577 x1393))
(assert (x577 x205))
(assert (x577 x514))
(assert (x577 x1294))
(assert (x577 x712))
(assert (= (x197 x335 x548 x210 x420 x1154 x938) (x857 (x197 x335 x548 x210 x420 x1154 x938))))
(assert (x577 x433))
(assert (= (=> (and (or (and (and (= (> x916 1) x1360) (= x30 x108) (not x1360) (= (x1121 x759) x1328) (= x30 (x450 (+ 32 x376))) (= (x450 (+ 32 x759)) x624) (= x685 x624) (= x1027 1)) x670) (and (and (= x685 x759) (= x376 x108) (= 0 x1027)) (not x670))) (and (= (x450 (+ 32 x169)) x376) (= (x1121 x1408) x916) (= x670 (< 0 x916)) (= x1210 (x1121 x942)) (= (x450 (+ 32 x1447)) x942) (= (x450 (+ 32 x1408)) x759))) x147) x175))
(assert (x129 x1294))
(assert (x577 x1266))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x1315 x530 x698)))
(assert (= (x103 (x585 x1315 x800)) x800))
(assert (= (x290 (x197 x260 x511 x275 x1481 x102 x542)) x542))
(assert (x696 x1060))
(assert (x577 x1159))
(assert (= x67 (x700 (x536 x1331 x489 x1129 x803 x67))))
(assert (= x1160 (and x148 (not x691))))
(assert (x577 x1140))
(assert (= (x700 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389)) x83))
(assert (=> (<= x937 10000) (= (x857 x937) 0)))
(assert (x577 x1007))
(assert (x577 x1326))
(assert (x577 x1076))
(assert (=> (<= x219 10000) (= (x857 x219) 0)))
(assert (x577 x1044))
(assert (x577 x196))
(assert (=> (>= 10000 x938) (= (x857 x938) 0)))
(assert (x577 x1499))
(assert (x577 x939))
(assert (not (x1309 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (x577 x590))
(assert (x577 x489))
(assert (=> (<= x125 10000) (= (x857 x125) 0)))
(assert (x577 x371))
(assert (x577 x1440))
(assert (x577 x1156))
(assert (< (x197 x260 x511 x275 x1481 x102 x542) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x1425))
(assert (= (x755 (x552 64 x491 1)) 1))
(assert (not (x1309 (x585 x335 x1055))))
(assert (= (x857 (x1317 x1390 x900 x638 x219)) (x1317 x1390 x900 x638 x219)))
(assert (=> (<= x438 10000) (= 0 (x857 x438))))
(assert (= (or x250 x1029) x408))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x260 x1421 x1026 x141 x1048)))
(assert (= (x875 (x790 x1315 x861 x438 x484 x163 x834 x712)) x712))
(assert (x51 x425))
(assert (= (x197 x1331 x841 x151 x1275 x54 x1134) (x857 (x197 x1331 x841 x151 x1275 x54 x1134))))
(assert (not (x1309 (x552 x836 x31 x279))))
(assert (x577 x8))
(assert (=> (<= x1115 10000) (= (x857 x1115) 0)))
(assert (x577 x486))
(assert (not (x1309 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (=> (<= x357 10000) (= 0 (x857 x357))))
(assert (x577 x1173))
(assert (=> (<= x514 10000) (= (x857 x514) 0)))
(assert (x577 x909))
(assert (x577 x346))
(assert (x577 x127))
(assert (x577 x1194))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039439137263839420088228) 0))
(assert (not (x1309 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002))))
(assert (x577 x1064))
(assert (=> (<= x1272 10000) (= (x857 x1272) 0)))
(assert (= (x635 (x536 x1390 x411 x136 x1292 x384)) x1292))
(assert (x577 x1157))
(assert (= x1475 (x635 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434))))
(assert (x1309 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (= (x875 (x790 x335 x203 x422 x1204 x127 x1058 x826)) x826))
(assert (x577 x807))
(assert (< (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1235) (= 0 (x857 x1235))))
(assert (x577 x227))
(assert (= (x857 (x536 x836 x1248 x1212 x911 x501)) (x536 x836 x1248 x1212 x911 x501)))
(assert (x577 x240))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (=> (<= x1174 10000) (= 0 (x857 x1174))))
(assert (> (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434) 10000))
(assert (= (x103 (x552 x1390 x1380 x140)) x1380))
(assert (= (or x1000 x987) x522))
(assert (x129 x1468))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (=> (>= 10000 x409) (= 0 (x857 x409))))
(assert (= x219 (x635 (x1317 x1390 x900 x638 x219))))
(assert (= (x103 (x197 x260 x511 x275 x1481 x102 x542)) x511))
(assert (x577 x809))
(assert (x577 x1154))
(assert (x577 x695))
(assert (x577 x272))
(assert (x577 x457))
(assert (x577 x609))
(assert (= (=> (and (and (= (x1367 x1493) x1308) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1354) (or (>= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (> x672 x1354) (= (x450 (+ (mod (+ 32 x758) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x672)) x923) (= x483 (x1367 x208)) (<= x1152 18446744073709551615) (= (x1367 x1308) x1152) (= (x450 (+ 32 x1354)) x672) (or (>= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (<= 1 x483) (= (x1367 x398) x1122) (< x672 x923) (<= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x73 (x1367 192)) (= (x1367 x1354) x224) (<= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (= 0 x1152) x1305) (= (x450 (+ x208 32)) x1493) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x1354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x1354)) (>= x923 2) (<= 1 x754) (= x224 1) (= x758 (* 32 x1152)) (= (x450 (+ x73 32)) x208)) (or (and (not x1305) (and (= x194 (x450 (+ x672 32))) (= (* 32 x1152) x1068))) x1305)) x1125) x1374))
(assert (x577 x1202))
(assert (x577 x685))
(assert (= x372 (x103 (x536 x1315 x372 x632 x11 x1259))))
(assert (x577 x1381))
(assert (x577 x1022))
(assert (= (x290 (x790 x1315 x861 x438 x484 x163 x834 x712)) x834))
(assert (x577 x1265))
(assert (= x751 (x103 (x790 x836 x751 x997 x792 x1161 x142 x520))))
(assert (=> (<= x1127 10000) (= 0 (x857 x1127))))
(assert (= x850 (or x1061 x1336)))
(assert (x577 x580))
(assert (x577 x660))
(assert (< (x197 x1390 x786 x321 x627 x1277 x560) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1215 (x103 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (x577 x1340))
(assert (x577 x650))
(assert (< 10000 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)))
(assert (= x259 (and (not x319) x1465)))
(assert (x577 x155))
(assert (x577 x1486))
(assert (=> (>= 10000 x970) (= 0 (x857 x970))))
(assert (x577 x547))
(assert (x577 x261))
(assert (x577 x910))
(assert (= x147 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x169) (= (>= 224 x1331) x1372) (= x241 (x450 (+ x759 x1093))) (= x509 x108) (>= x108 1) (<= x169 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x685 x241) (= x1331 (x859 x169)) (= (* 32 x916) x733) (>= x509 1) (< x169 x108) (<= x169 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1027 x916) (<= x916 4) (= x845 (x901 (- x1123 32))) (= x1093 (* x916 32)) (= x1147 (x450 (+ 32 x169))) (= (x450 (+ x733 x376)) x509) (= (x901 (- x108 x169)) x1123)) (and (=> (and (= (x859 x159) x546) (= x1018 (x450 (+ 96 x1147))) (= x453 (x450 (+ 64 x1147))) (= (x859 x90) x764) (= (x687 x108) x1390) (= x67 (x859 x1487)) (= x294 (x450 (+ x1147 128))) (= (x859 x63) x736) (= (x450 (+ x1147 64)) x159) (= (x450 (+ x1147 64)) x710) (= x958 (x450 (+ 96 x1147))) (= (x859 x710) x803) (> x926 x108) (= (x197 x1331 x841 x151 x1275 x54 x1134) x188) (= x1185 (x450 (+ x1147 32))) (= (x450 (+ 32 x1147)) x63) (= (x901 (- x605 32)) x1410) (= (>= 224 x1390) x423) (= (x859 x1278) x83) (= x1134 (x859 x294)) (= (x859 x1147) x841) (= (ite (= x1331 0) x57 (ite (<= x1331 32) x291 (ite (>= 64 x1331) x908 (ite (>= 96 x1331) x888 (ite (<= x1331 128) x48 (ite (<= x1331 160) x188 (ite (<= x1331 192) x866 (ite (<= x1331 224) x81 x1406)))))))) x1218) (= x1085 (x859 x752)) (= (x859 x254) x299) (= (x450 (+ 96 x406)) x926) (= (x450 (+ 64 x1147)) x752) (= x908 (x552 x1331 x251 x1004)) (= x1129 (x859 x1185)) (= x57 (x846 0)) (= (x901 (- x926 x108)) x605) (= (x859 x1025) x1004) (= x888 (x1317 x1331 x96 x1056 x546)) (= x1278 (x450 (+ x1147 96))) (= (x859 x1147) x640) (= (x450 (+ 32 x1147)) x964) (= x830 (x450 (+ 32 x406))) (= x978 (x859 x104)) (= (x585 x1331 x212) x291) (= x406 (x450 (+ x108 32))) (= (x859 x1147) x489) (= x1056 (x859 x1449)) (= x1275 (x859 x453)) (= (x450 (+ 128 x1147)) x973) (= (x450 (+ x1147 64)) x104) (= (x450 (+ x1147 32)) x1449) (= (x859 x898) x681) (= (x450 (+ 96 x1147)) x1487) (= (x859 x1147) x251) (= (x859 x964) x192) (or (and (>= x108 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x108)) (and (<= 1 x108) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x108))) (= (x536 x1331 x489 x1129 x803 x67) x48) (= (x859 x955) x1389) (= (x610 x1331 x620 x192 x978 x83 x764 x681 x1389) x81) (= (x790 x1331 x640 x736 x1085 x1236 x498 x299) x866) (= (x859 x973) x498) (= x1025 (x450 (+ x1147 32))) (= x898 (x450 (+ 160 x1147))) (= x254 (x450 (+ x1147 160))) (= x955 (x450 (+ 192 x1147))) (= (x450 (+ 32 x1147)) x1233) (= (x450 (+ 32 x830)) x661) (= (x450 (+ 128 x1147)) x90) (= (x450 (+ x108 32)) x999) (= x620 (x859 x1147)) (= (x859 x1233) x151) (= x96 (x859 x1147)) (= x1236 (x859 x1018)) (= (x859 x958) x54) (= (x859 x1147) x212)) (and (=> (and (= (x450 (+ x999 64)) x719) (= x992 (x687 x488)) (= x786 (x687 x999)) (= (x687 x614) x219) (= (x687 x744) x1132) (= x135 (x450 (+ x935 32))) (= x1320 (x450 (+ 128 x999))) (= x1235 (x687 x1320)) (= x638 (x687 x1442)) (= x1361 (x846 0)) (= x1042 (ite (= 0 x1390) x1361 (ite (>= 32 x1390) x164 (ite (>= 64 x1390) x373 (ite (>= 96 x1390) x445 (ite (<= x1390 128) x1260 (ite (<= x1390 160) x690 (ite (>= 192 x1390) x989 (ite (>= 224 x1390) x816 x1430))))))))) (= x214 (x687 x492)) (= (x450 (+ 32 x541)) x1394) (= (x687 x1254) x1292) (= x1315 (x766 x926)) (= x28 (x450 (+ x999 96))) (= (x450 (+ x999 160)) x119) (= (x450 (+ x999 96)) x744) (= (x687 x999) x1380) (= (x450 (+ x999 32)) x1304) (= x310 (x687 x1432)) (= (x450 (+ x999 128)) x881) (= x541 (x450 (+ x191 32))) (= x488 (x450 (+ x999 160))) (= x627 (x687 x1458)) (= x909 (x687 x1497)) (= x614 (x450 (+ x999 64))) (= x272 (x687 x999)) (or (and (>= x926 115792089237316195423570985008687907853269984665640564039457584007913129639747) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x926)) (and (<= 129 x926) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639743)) (and (<= 2 x926) (>= 126 x926))) (= x619 (x687 x719)) (= (x450 (+ x999 96)) x215) (= x164 (x585 x1390 x858)) (= x774 (x901 (- x232 x926))) (= x457 (x687 x39)) (= (x687 x999) x411) (= x136 (x687 x62)) (= (x450 (+ x1394 32)) x935) (= (x450 (+ 64 x999)) x1254) (= (x450 (+ 32 x926)) x191) (= (>= 224 x1315) x1227) (= (x450 (+ 160 x191)) x232) (= (x450 (+ 32 x999)) x39) (= (x687 x1304) x140) (> x232 x926) (= (x450 (+ 32 x999)) x366) (= (x450 (+ x999 32)) x1432) (= (x450 (+ x999 192)) x1196) (= (x687 x881) x1490) (= x1002 (x687 x119)) (= (x610 x1390 x272 x310 x619 x909 x1490 x992 x970) x816) (= (x450 (+ x999 96)) x1497) (= x900 (x687 x999)) (= x492 (x450 (+ x999 64))) (= (x687 x999) x1417) (= (x450 (+ 64 x999)) x1458) (= x445 (x1317 x1390 x900 x638 x219)) (= (x901 (- x774 32)) x763) (= x970 (x687 x1196)) (= x588 (x450 (+ x999 128))) (= x195 (x450 (+ x926 32))) (= (x450 (+ x999 32)) x1442) (= (x687 x215) x1277) (= x62 (x450 (+ x999 32))) (= (x687 x366) x321) (= x858 (x687 x999)) (= x957 (x1034 1461501637330902918203684832716283019655932542975 x1388)) (= (x687 x588) x560) (= x989 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002)) (= x1260 (x536 x1390 x411 x136 x1292 x384)) (= x690 (x197 x1390 x786 x321 x627 x1277 x560)) (= x373 (x552 x1390 x1380 x140)) (= x1388 (x687 256)) (= (x687 x28) x384) (= (x687 224) x22)) (and x1227 (=> (and (= (x766 x195) x530) (= x795 (x450 (+ x195 32))) (= (x531 x396) x401) (= x705 (ite (= x1315 0) x124 (ite (>= 32 x1315) x1267 (ite (>= 64 x1315) x416 (ite (>= 96 x1315) x1001 (ite (<= x1315 128) x778 (ite (>= 160 x1315) x380 (ite (<= x1315 192) x1412 (ite (<= x1315 224) x23 x409))))))))) (= (x766 x1183) x1259) (= (x531 x19) x12) (= (x846 0) x124) (= (x766 x415) x1138) (= (x450 (+ 64 x232)) x1097) (= x441 (x531 x232)) (= (x450 (+ 32 x195)) x253) (= x623 (x450 (+ 32 x195))) (= x834 (x766 x1220)) (= (x766 x195) x861) (= x712 (x766 x196)) (= x1013 (x450 (+ 32 x195))) (= (x450 (+ 96 x195)) x121) (= x1001 (x1317 x1315 x323 x1127 x1297)) (= (x766 x1208) x1297) (= (x766 x623) x1127) (= x416 (x552 x1315 x530 x698)) (= x778 (x536 x1315 x372 x632 x11 x1259)) (= x664 (x766 x271)) (= (x450 (+ x195 160)) x196) (= (x450 (+ x982 32)) x1247) (= x23 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) (= x812 (x766 x1435)) (= x1195 (x766 x231)) (= (x766 x195) x800) (= (x450 (+ 96 x195)) x1375) (= (x766 x195) x1215) (= x931 (x766 x1013)) (= (x766 x74) x41) (= x819 (x450 (+ x195 96))) (= x11 (x766 x1286)) (= (x766 x1054) x698) (= x402 (x766 x253)) (= (x766 x626) x317) (= (x766 x819) x770) (= (x450 (+ x195 32)) x1054) (= (x766 x195) x323) (= (x450 (+ 64 x195)) x1075) (= (x790 x1315 x861 x438 x484 x163 x834 x712) x1412) (= x184 (x1317 66 x441 x12 x312)) (= x134 (= 65 x401)) (= x1435 (x450 (+ x195 64))) (= x682 (x766 x195)) (= (x766 x1375) x163) (= (x450 (+ x195 128)) x1220) (= (x197 x1315 x1215 x402 x812 x776 x317) x380) (= (x450 (+ 64 x195)) x1208) (= x312 (x531 x1097)) (= x776 (x766 x121)) (= (x450 (+ x195 96)) x1183) (= (x450 (+ x195 64)) x1286) (= (x585 x1315 x800) x1267) (= x438 (x766 x795)) (= x372 (x766 x195)) (= x982 (x450 (+ x232 2))) (= x484 (x766 x1075)) (= x74 (x450 (+ x195 192))) (= x892 (x450 (+ x195 32))) (= (x450 (+ x232 32)) x19) (= x415 (x450 (+ x195 160))) (= x632 (x766 x892)) (= x271 (x450 (+ x195 128))) (= (x450 (+ x195 128)) x626) (= x231 (x450 (+ x195 64)))) (and (=> (and x134 (and (or (and (and (= x232 x510) (= x1201 3) (= x722 x149) (= x971 0)) x13) (and (and (or (and (and (= 0 x722) (= x510 x783) (= x1201 0) (= x326 x971)) (not x563)) (and x563 (and (= x1201 1) (= x510 x783) (= x971 0) (= x722 0)))) (and (not (= x232 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x781 1461501637330902918203684832716283019655932542975) (= x235 (x901 (- x783 32))) (= (x692 x783) x905) (= (x450 (+ x343 32)) x466) (= (x450 (+ 32 x466)) x817) (= (x692 (x450 (+ 64 x783))) x1094) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x232)) (= x1087 (x1034 1461501637330902918203684832716283019655932542975 x326)) (= (x38 x905 x711 x1094 x746) x781) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x232)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x232) (= (x692 (x450 (+ 96 x783))) x746) (= x847 (x901 (- x783 32))) (<= x232 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x692 (x450 (+ x783 32))) x711) (= x783 (x450 (+ x232 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x232) (= (= x1087 0) x563) (= x343 (x450 (+ 32 x783))) (= x350 128) (= x326 (x68 x847)) (> x783 x232))) (not x13))) (and (= x387 (x531 x728)) (= x149 (x531 x198)) (= (x71 x715 248) x1006) (= (+ 32 x728) x198) (= x13 (> x149 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= x715 (x531 x427)) (= (+ x198 32) x427)))) x976) (=> (and (not x134) (and (= x517 (x531 x396)) (= x1492 0) (= x1471 x517) (= x865 2) (= x1354 x232))) x882))))) x423)) x1372))))
(assert (x577 x534))
(assert (x577 x1119))
(assert (= x1184 (x103 (x197 x836 x1184 x914 x1298 x80 x1174))))
(assert (= (x790 x1331 x640 x736 x1085 x1236 x498 x299) (x857 (x790 x1331 x640 x736 x1085 x1236 x498 x299))))
(assert (= (x290 (x790 x335 x203 x422 x1204 x127 x1058 x826)) x1058))
(assert (x577 x548))
(assert (=> (>= 10000 x1495) (= 0 (x857 x1495))))
(assert (= x97 (x700 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (= (x103 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970)) x272))
(assert (= (or x581 x1255 x1230) x193))
(assert (x577 x407))
(assert (x577 x289))
(assert (< (x552 x388 x972 x584) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x1122))
(assert (< 10000 (x790 x1315 x861 x438 x484 x163 x834 x712)))
(assert (x577 x757))
(assert (= (and x1239 (not x426)) x760))
(assert (x577 x998))
(assert (x577 x1142))
(assert (x577 x323))
(assert (= x31 (x103 (x552 x836 x31 x279))))
(assert (x577 x719))
(assert (= (x103 (x1317 x1331 x96 x1056 x546)) x96))
(assert (= x736 (x755 (x790 x1331 x640 x736 x1085 x1236 x498 x299))))
(assert (=> (>= 10000 x1118) (= (x857 x1118) 0)))
(assert (=> (<= x665 10000) (= 0 (x857 x665))))
(assert (= x1255 (and x316 x13)))
(assert (=> (>= 10000 x1098) (= 0 (x857 x1098))))
(assert (x577 x1208))
(assert (x577 x121))
(assert (x577 x1258))
(assert (=> (<= x786 10000) (= (x857 x786) 0)))
(assert (x577 x947))
(assert (x577 x224))
(assert (not (x1309 (x1317 x1315 x323 x1127 x1297))))
(assert (= (x700 (x790 x388 x339 x919 x713 x1302 x120 x336)) x1302))
(assert (= (x635 (x536 x1115 x671 x666 x226 x878)) x226))
(assert (x577 x1352))
(assert (x577 x818))
(assert (x577 x1388))
(assert (x577 x730))
(assert (=> (>= 10000 x272) (= 0 (x857 x272))))
(assert (= x1002 (x875 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002))))
(assert (x577 x1304))
(assert (x577 x146))
(assert (x577 x1280))
(assert (x577 x490))
(assert (< (x585 x1115 x1214) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x290 (x197 x836 x1184 x914 x1298 x80 x1174)) x1174))
(assert (x577 x1190))
(assert (x577 x906))
(assert (x577 x226))
(assert (=> (<= x878 10000) (= (x857 x878) 0)))
(assert (x577 x957))
(assert (x577 x1027))
(assert (x577 x3))
(assert (=> (>= 10000 x498) (= 0 (x857 x498))))
(assert (x577 x761))
(assert (< 10000 (x1317 x335 x354 x1015 x1381)))
(assert (=> (<= x1455 10000) (= 0 (x857 x1455))))
(assert (x577 x154))
(assert (x577 x698))
(assert (x577 x1191))
(assert (< (x585 x1315 x800) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x71 x715 248) (div x715 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x577 x1457))
(assert (x577 x662))
(assert (x577 x399))
(assert (= x1048 (x700 (x536 x260 x1421 x1026 x141 x1048))))
(assert (=> (>= 10000 x323) (= (x857 x323) 0)))
(assert (=> (>= 10000 x1490) (= 0 (x857 x1490))))
(assert (x577 x953))
(assert (=> (<= x1188 10000) (= (x857 x1188) 0)))
(assert (= x302 (x103 (x1317 x1115 x302 x688 x324))))
(assert (x577 x664))
(assert (=> (>= 10000 x11) (= 0 (x857 x11))))
(assert (x577 x999))
(assert (x577 x257))
(assert (> (x536 x260 x1421 x1026 x141 x1048) 10000))
(assert (x51 x1100))
(assert (= (x6 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) x1434))
(assert (= (x290 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)) x1178))
(assert (x577 x210))
(assert (x696 x358))
(assert (=> (>= 10000 x586) (= (x857 x586) 0)))
(assert (x577 x1438))
(assert (x577 x1200))
(assert (=> (>= 10000 x41) (= (x857 x41) 0)))
(assert (x577 x504))
(assert (= (x857 (x585 x1331 x212)) (x585 x1331 x212)))
(assert (=> (<= x225 10000) (= (x857 x225) 0)))
(assert (x577 x1113))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (< 10000 (x552 x335 x749 x1257)))
(assert (x577 x638))
(assert (= x260 (x311 (x552 x260 x243 x667))))
(assert (not (x1309 (x790 x335 x203 x422 x1204 x127 x1058 x826))))
(assert (= 0 (x857 134217728)))
(assert (x577 x1348))
(assert (x577 x325))
(assert (x577 x1129))
(assert (x577 x334))
(assert (x577 x409))
(assert (= (and x1392 (not x1489)) x1476))
(assert (x577 x554))
(assert (=> (<= x382 10000) (= 0 (x857 x382))))
(assert (= x1056 (x755 (x1317 x1331 x96 x1056 x546))))
(assert (x577 x1131))
(assert (< (x1317 x335 x354 x1015 x1381) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970)))
(assert (x577 x246))
(assert (x51 x1128))
(assert (x577 x1464))
(assert (= (x311 (x790 x335 x203 x422 x1204 x127 x1058 x826)) x335))
(assert (= x698 (x755 (x552 x1315 x530 x698))))
(assert (=> (<= x1291 10000) (= 0 (x857 x1291))))
(assert (> (x197 x1390 x786 x321 x627 x1277 x560) 10000))
(assert (x696 x756))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x489 (x103 (x536 x1331 x489 x1129 x803 x67))))
(assert (=> (<= x1085 10000) (= (x857 x1085) 0)))
(assert (x577 x935))
(assert (= (or x493 x193) x204))
(assert (x577 x1314))
(assert (= x938 (x290 (x197 x335 x548 x210 x420 x1154 x938))))
(assert (x577 x520))
(assert (< 10000 (x197 x260 x511 x275 x1481 x102 x542)))
(assert (=> (<= x1343 10000) (= (x857 x1343) 0)))
(assert (= x632 (x755 (x536 x1315 x372 x632 x11 x1259))))
(assert (=> (>= 10000 x1004) (= (x857 x1004) 0)))
(assert (not (x1309 (x846 0))))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x577 x1192))
(assert (x577 x681))
(assert (= x1390 (x311 (x536 x1390 x411 x136 x1292 x384))))
(assert (x577 x194))
(assert (= (x857 30450320296159908085414496432607297912280636920234228256796789313041262968832) 0))
(assert (=> (<= x501 10000) (= (x857 x501) 0)))
(assert (x577 x1195))
(assert (x577 x551))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x260 (x311 (x790 x260 x145 x1038 x995 x78 x1070 x1014))))
(assert (= (x857 (x790 x260 x145 x1038 x995 x78 x1070 x1014)) (x790 x260 x145 x1038 x995 x78 x1070 x1014)))
(assert (= x317 (x290 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (=> (<= x909 10000) (= 0 (x857 x909))))
(assert (=> (>= 10000 x1071) (= 0 (x857 x1071))))
(assert (x696 x1069))
(assert (x577 x796))
(assert (= x1421 (x103 (x536 x260 x1421 x1026 x141 x1048))))
(assert (x577 x459))
(assert (x129 x1301))
(assert (x577 x1111))
(assert (x1309 2065879269444))
(assert (x577 x384))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= (x635 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x823))
(assert (= x1222 (=> (and (and (= (x450 (+ 4 x1354)) x505) (<= x1338 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (< 0 x590) x426) (= x547 (x1034 1461501637330902918203684832716283019655932542975 x1492)) (= (x450 (+ x505 32)) x190) (= x407 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x840 30450320296159908085414496432607297912280636920234228256796789313041262968832) (<= 32 x1338)) (or (and x426 (and (<= 32 x1338) (<= x1338 4294967295) (= x754 1))) (and (= x590 x754) (not x426)))) x1374)))
(assert (not (x1309 (x552 x1115 x1459 x1053))))
(assert (x577 x422))
(assert (=> (>= 10000 x520) (= (x857 x520) 0)))
(assert (x577 x37))
(assert (x577 x812))
(assert (x577 x1207))
(assert (x577 x1488))
(assert (=> (>= 10000 x1368) (= (x857 x1368) 0)))
(assert (x577 x1090))
(assert (not (x1309 (x790 x260 x145 x1038 x995 x78 x1070 x1014))))
(assert (x577 x32))
(assert (x577 x1147))
(assert (= (and x1465 x319) x1463))
(assert (x577 x484))
(assert (x577 x1420))
(assert (=> (<= x484 10000) (= (x857 x484) 0)))
(assert (x577 x640))
(assert (x577 x174))
(assert (x577 x1313))
(assert (x696 x1119))
(assert (=> (>= 10000 x1134) (= 0 (x857 x1134))))
(assert (x577 x576))
(assert (x51 x1294))
(assert (= (=> (and (= x24 (x450 (+ 32 x822))) (= x456 (* x1180 160)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x885) (= (x598 164) x1164) (<= x1180 18446744073709551615) (>= x29 1) (= x822 (x450 (+ x1164 36))) (= (x598 x822) x1180) (or (<= x1164 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1164)) (= x650 (x901 (- x662 x456))) (or (and (<= x706 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1164)) (and (> x706 x1164) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706) (<= x1164 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (* x1180 32) x1153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x885) (= (< 0 x1180) x675) (not (or (and (< x650 x24) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x24) (<= x650 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x650 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x24 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x450 (+ 32 x885)) x264) (<= x885 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x528 (+ x8 32)) (= x29 (x450 (+ (mod (+ x1153 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x885))) (< x885 x29)) (and (=> x675 x968) (=> (and (not x675) (= x1207 x29)) x333))) x835))
(assert (= (x610 x1331 x620 x192 x978 x83 x764 x681 x1389) (x857 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (x577 x861))
(assert (x577 x1033))
(assert (x577 x1161))
(assert (x51 x1301))
(assert (x577 x1430))
(assert (= (x700 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x1188))
(assert (= x806 (and x204 (not x889))))
(assert (x577 x1247))
(assert (= (x536 x260 x1421 x1026 x141 x1048) (x857 (x536 x260 x1421 x1026 x141 x1048))))
(assert (x577 x542))
(assert (> (x197 x1315 x1215 x402 x812 x776 x317) 10000))
(assert (=> (>= 10000 x1161) (= (x857 x1161) 0)))
(assert (= (x311 (x552 64 x491 1)) 64))
(assert (= (x857 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (x577 x1071))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x585 x260 x174)))
(assert (= x316 (and x134 x408)))
(assert (= 0 (x857 18446746139588821027)))
(assert (=> (>= 10000 x1082) (= 0 (x857 x1082))))
(assert (x577 x740))
(assert (> (x197 x388 x1118 x325 x818 x477 x382) 10000))
(assert (x577 x114))
(assert (x577 x510))
(assert (x577 x820))
(assert (x577 x372))
(assert (not (x1309 (x1317 x1390 x900 x638 x219))))
(assert (= (x700 (x790 x260 x145 x1038 x995 x78 x1070 x1014)) x78))
(assert (x577 x671))
(assert (x577 x952))
(assert (< (x585 x1390 x858) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x569))
(assert (= (x103 (x790 x1315 x861 x438 x484 x163 x834 x712)) x861))
(assert (x577 x41))
(assert (x577 x293))
(assert (x577 x541))
(assert (= x1134 (x290 (x197 x1331 x841 x151 x1275 x54 x1134))))
(assert (= x236 (=> (and (= (x327 x1031) x1189) (= x1485 (> x1189 0)) (= (x327 x602) x1031)) (and (=> (and (not x1485) (= x169 x829)) x175) (=> (and x1485 (and (or (and x1489 (and (= x595 (> x202 32)) (= x1040 (x1035 x1073)) (not x595))) (not x1489)) (and (= x202 (x1112 x1386)) (= x1119 (x327 x918)) (= x730 (x450 (+ 32 x918))) (= (x327 x1339) x918) (= x1224 (x327 x730)) (= (x327 x1225) x557) (= x464 (x450 (+ 32 x748))) (= (< 0 x202) x1489) (= (x1034 1461501637330902918203684832716283019655932542975 x1119) x1391) (= (x327 x738) x1386) (= x1339 (x450 (+ x1225 32))) (= x365 (x450 (+ 128 x1460))) (<= 1 x557) (= x748 (x450 (+ x1143 32))) (= x738 (x450 (+ 32 x730))) (= (x450 (+ x1460 32)) x1143) (= (x327 x602) x1225) (= (x450 (+ x365 32)) x1066) (= (x450 (+ x829 32)) x1460) (= x1073 (x450 (+ 32 x1386)))))) x1145)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x197 x388 x1118 x325 x818 x477 x382)))
(assert (= (x700 (x197 x1331 x841 x151 x1275 x54 x1134)) x54))
(assert (x577 x113))
(assert (x577 x1259))
(assert (x577 x1428))
(assert (x577 x618))
(assert (=> (<= x1403 10000) (= (x857 x1403) 0)))
(assert (x577 x268))
(assert (=> (>= 10000 x666) (= (x857 x666) 0)))
(assert (x577 x168))
(assert (x577 x350))
(assert (x577 x1193))
(assert (= (x635 (x536 x260 x1421 x1026 x141 x1048)) x141))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (=> (<= x1178 10000) (= 0 (x857 x1178))))
(assert (=> (<= x1353 10000) (= 0 (x857 x1353))))
(assert (=> (>= 10000 x664) (= (x857 x664) 0)))
(assert (= 0 (x857 1889567281)))
(assert (x577 x715))
(assert (x51 x756))
(assert (= (x635 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) x1195))
(assert (= x1219 (and x1091 x292)))
(assert (x577 x900))
(assert (= x165 (x875 (x790 x1115 x1209 x1399 x569 x880 x56 x165))))
(assert (x577 x615))
(assert (x577 x937))
(assert (x577 x880))
(assert (x577 x87))
(assert (= (and x172 (not x1485)) x769))
(assert (x577 x1306))
(assert (x577 x1460))
(assert (=> (>= 10000 x83) (= 0 (x857 x83))))
(assert (= (x635 (x1317 x836 x665 x833 x867)) x867))
(assert (= (x635 (x536 x388 x1140 x647 x600 x1470)) x600))
(assert (x577 x764))
(assert (x577 x782))
(assert (=> (<= x1297 10000) (= (x857 x1297) 0)))
(assert (= (and x1050 x1305) x512))
(assert (x577 x428))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (x577 x1292))
(assert (x577 x1229))
(assert (x577 x1152))
(assert (x577 x1123))
(assert (=> (>= 10000 x1058) (= 0 (x857 x1058))))
(assert (=> (<= x1411 10000) (= (x857 x1411) 0)))
(assert (x577 x525))
(assert (=> (>= 10000 x841) (= 0 (x857 x841))))
(assert (x577 x709))
(assert (= (x857 (x536 x1390 x411 x136 x1292 x384)) (x536 x1390 x411 x136 x1292 x384)))
(assert (= x260 (x311 (x197 x260 x511 x275 x1481 x102 x542))))
(assert (x577 x831))
(assert (= x1455 (x103 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (=> (<= x647 10000) (= (x857 x647) 0)))
(assert (x577 x135))
(assert (= x1145 (=> (and (= (x450 (+ x829 32)) x1113) (= (x450 (+ x421 x1066)) x284) (= (x450 (+ 31 x202)) x1333) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1333) x421) (= (x901 (- x180 32)) x903) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x829) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x829) (<= x829 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x284 1) (= (x123 x829) x260) (= x1289 (x450 (+ x202 x1066))) (= x180 (x901 (- x284 x829))) (= (>= 224 x260) x105) (< x829 x284)) (and (=> (and (= (x450 (+ x1408 32)) x708) (= (x123 x572) x995) (= x1026 (x123 x468)) (= x1171 (x450 (+ 96 x1113))) (= x519 (x450 (+ x1113 96))) (= x329 (x123 x1113)) (= x434 (x450 (+ 192 x1113))) (= (x450 (+ x1113 128)) x1223) (= x1178 (x123 x1223)) (= x27 (x197 x260 x511 x275 x1481 x102 x542)) (= (x123 x1113) x243) (= (x123 x288) x667) (= x275 (x123 x1021)) (= (not (< 1 x645)) x1162) (= (x536 x260 x1421 x1026 x141 x1048) x1402) (= x1033 (x450 (+ 96 x1113))) (= (x450 (+ 96 x1113)) x762) (= x280 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)) (= x179 (x846 0)) (= (x585 x260 x174) x683) (= (x123 x947) x1105) (= x141 (x123 x45)) (= x863 (x123 x434)) (= x1291 (x123 x533)) (= (x450 (+ x1113 64)) x947) (= (x123 x1113) x174) (= (x450 (+ x1113 128)) x1462) (= (x450 (+ 32 x1113)) x1200) (= x533 (x450 (+ 160 x1113))) (= x1364 (x123 x1200)) (= (x123 x659) x1071) (= (x450 (+ 160 x1113)) x556) (= (ite (= x260 0) x179 (ite (>= 32 x260) x683 (ite (>= 64 x260) x518 (ite (>= 96 x260) x699 (ite (<= x260 128) x1402 (ite (>= 160 x260) x27 (ite (>= 192 x260) x35 (ite (<= x260 224) x280 x1411)))))))) x1089) (= (x123 x1113) x145) (= (x450 (+ 128 x1113)) x1461) (= x542 (x123 x1462)) (= (x981 x602) x1318) (= x511 (x123 x1113)) (= x699 (x1317 x260 x478 x168 x1105)) (<= 1 x356) (= (x450 (+ 64 x1113)) x1356) (= (x981 x1318) x645) (= x659 (x450 (+ x1113 64))) (= x593 (x450 (+ 32 x1113))) (= (x123 x1033) x102) (= (x123 x762) x78) (= (x450 (+ 64 x1113)) x572) (= (x552 x260 x243 x667) x518) (= x1021 (x450 (+ x1113 32))) (= x1048 (x123 x519)) (= (x123 x1171) x94) (= x168 (x123 x1159)) (= x1159 (x450 (+ x1113 32))) (= x1038 (x123 x593)) (= (x123 x556) x1014) (= x45 (x450 (+ x1113 64))) (= (x450 (+ 32 x1113)) x468) (= (x123 x1461) x1070) (= (x123 x1113) x478) (= (x123 x1113) x1421) (= x35 (x790 x260 x145 x1038 x995 x78 x1070 x1014)) (= x356 (x123 x1408)) (= (x450 (+ x1113 32)) x288) (= (x123 x1356) x1481)) (and (=> (= x169 x284) x175) x1162)) x105))))
(assert (not (x1309 (x1317 x260 x478 x168 x1105))))
(assert (x577 x777))
(assert (x577 x108))
(assert (= (x311 (x1317 x1315 x323 x1127 x1297)) x1315))
(assert (= (x857 (x552 64 x491 1)) (x552 64 x491 1)))
(assert (x577 x233))
(assert (x577 x1343))
(assert (x577 x1053))
(assert (= (x311 (x790 x388 x339 x919 x713 x1302 x120 x336)) x388))
(assert (x577 x1404))
(assert (x577 x971))
(assert (not (x1309 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (x577 x1493))
(assert (x577 x1210))
(assert (=> (>= 10000 x213) (= 0 (x857 x213))))
(assert (x577 x795))
(assert (=> (<= x1070 10000) (= (x857 x1070) 0)))
(assert (= (x857 (x585 x260 x174)) (x585 x260 x174)))
(assert (= x1244 (=> (and (= x305 (x450 (+ 32 x1452))) (= (x1205 x672) x515) (= x809 (x1205 x208)) (= x1344 (x450 (+ 32 x672))) (= x691 (> x515 0))) (and (=> (and (and (= x1445 x1344) (= x305 x539) (= x969 0)) (not x691)) x1271) (=> (and (and (= (x450 (+ 32 x305)) x1206) (= (> x515 1) x1091) (= (x450 (+ x1344 32)) x238) (= x1192 (x1205 x1344))) x691) (and (=> (and (and (= (x450 (+ 32 x1206)) x107) (= x1086 (< 2 x515)) (= (x894 x238) x1499) (= x1010 (x450 (+ x238 32)))) x1091) (and (=> (and (and (= x1319 (x450 (+ 32 x107))) (= x883 (x450 (+ 32 x1010))) (= x463 (x811 x1010)) (= (> x515 3) x266)) x1086) (and (=> (and (not x266) (and (= x883 x1445) (= 3 x969) (= x1319 x539))) x1271) (=> x266 x1047))) (=> (and (and (= x539 x107) (= 2 x969) (= x1445 x1010)) (not x1086)) x1271))) (=> (and (not x1091) (and (= x238 x1445) (= x1206 x539) (= x969 1))) x1271)))))))
(assert (< (x1317 x388 x1019 x514 x385) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x104))
(assert (= (and x1253 x1063) x1465))
(assert (x577 x693))
(assert (x577 x1391))
(assert (x1309 2189116922))
(assert (x577 x865))
(assert (x577 x468))
(assert (= x11 (x635 (x536 x1315 x372 x632 x11 x1259))))
(assert (x577 x1211))
(assert (=> (>= 10000 x321) (= 0 (x857 x321))))
(assert (x577 x758))
(assert (x577 x583))
(assert (=> (<= x491 10000) (= 0 (x857 x491))))
(assert (= (x857 (x552 x335 x749 x1257)) (x552 x335 x749 x1257)))
(assert (= x352 (and x1382 x1249)))
(assert (x577 x1077))
(assert (x577 x873))
(assert (x577 x661))
(assert (x577 x183))
(assert (> (x610 x1331 x620 x192 x978 x83 x764 x681 x1389) 10000))
(assert (not (x1309 (x536 x335 x1403 x832 x14 x1348))))
(assert (= (x846 0) (x857 (x846 0))))
(assert (= x438 (x755 (x790 x1315 x861 x438 x484 x163 x834 x712))))
(assert (x577 x45))
(assert (= (x103 (x552 x335 x749 x1257)) x749))
(assert (x577 x1482))
(assert (= (x857 (x197 x1115 x75 x1098 x430 x1082 x902)) (x197 x1115 x75 x1098 x430 x1082 x902)))
(assert (= (x857 (x552 x1115 x1459 x1053)) (x552 x1115 x1459 x1053)))
(assert (x577 x620))
(assert (=> (<= x1048 10000) (= (x857 x1048) 0)))
(assert (x577 x770))
(assert (= 0 (x857 18446744073709551614)))
(assert (= (x755 (x536 x335 x1403 x832 x14 x1348)) x832))
(assert (= x972 (x103 (x552 x388 x972 x584))))
(assert (= (and (not x1167) x158) x849))
(assert (= x925 (and x1110 x1276)))
(assert (x577 x509))
(assert (= (x755 (x552 x1331 x251 x1004)) x1004))
(assert (x577 x288))
(assert (not (x1309 (x1317 x1115 x302 x688 x324))))
(assert (= (=> (and (= x309 (x1149 x883)) (= (not (< 4 x515)) x1479) (= x609 (x450 (+ 32 x883))) (= x952 (x450 (+ x1319 32)))) (and (=> (and (= x952 x539) (= x1445 x609) (= x969 4)) x1271) x1479)) x1047))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (=> (<= x251 10000) (= 0 (x857 x251))))
(assert (x577 x591))
(assert (= (and x522 x675) x1))
(assert (= (and x471 (not x563)) x581))
(assert (= (x103 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x52))
(assert (x577 x507))
(assert (= x102 (x700 (x197 x260 x511 x275 x1481 x102 x542))))
(assert (x577 x847))
(assert (= x1212 (x755 (x536 x836 x1248 x1212 x911 x501))))
(assert (x577 x169))
(assert (x577 x1097))
(assert (= x1181 (and x1463 x40)))
(assert (=> (>= 10000 x600) (= 0 (x857 x600))))
(assert (x577 x301))
(assert (x577 x607))
(assert (x577 x488))
(assert (= (x857 (x536 x1115 x671 x666 x226 x878)) (x536 x1115 x671 x666 x226 x878)))
(assert (x577 x931))
(assert (< 10000 (x536 x388 x1140 x647 x600 x1470)))
(assert (=> (>= 10000 x279) (= 0 (x857 x279))))
(assert (=> (<= x67 10000) (= (x857 x67) 0)))
(assert (= 0 (x857 18446744073709551615)))
(assert (x577 x624))
(assert (x577 x1354))
(assert (x577 x499))
(assert (x51 x1388))
(assert (= (x311 (x585 x1115 x1214)) x1115))
(assert (x577 x1447))
(assert (x577 x1468))
(assert (= (x635 (x197 x1315 x1215 x402 x812 x776 x317)) x812))
(assert (x577 x586))
(assert (=> (<= x919 10000) (= 0 (x857 x919))))
(assert (x577 x215))
(assert (x51 x1492))
(assert (=> (<= x667 10000) (= 0 (x857 x667))))
(assert (= (x755 (x1317 x1115 x302 x688 x324)) x688))
(assert (x577 x144))
(assert (= (x635 (x536 x836 x1248 x1212 x911 x501)) x911))
(assert (x577 x19))
(assert (=> (>= 10000 x776) (= (x857 x776) 0)))
(assert (= x1417 (x103 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002))))
(assert (x577 x710))
(assert (x577 x368))
(assert (x577 x958))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x790 x260 x145 x1038 x995 x78 x1070 x1014)))
(assert (x577 x356))
(assert (x577 x930))
(assert (not (x1309 (x1317 x335 x354 x1015 x1381))))
(assert (x577 x1496))
(assert (x577 x1378))
(assert (x696 x1388))
(assert (=> (>= 10000 x546) (= (x857 x546) 0)))
(assert (x577 x1301))
(assert (= (or x389 x1181) x1429))
(assert (=> (<= x972 10000) (= (x857 x972) 0)))
(assert (x577 x565))
(assert (x577 x1070))
(assert (x577 x1459))
(assert (x577 x451))
(assert (x577 x689))
(assert (= (=> (and (not (= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x474 (x1431 x896)) (> x153 x1266) (= x703 (x1431 x1266)) (<= 1 x1155) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1266) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1266) (= (x450 (+ x1266 32)) x153) (= x953 (x1431 x474)) (= x1253 (> x953 0)) (= x703 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1266)) (not (= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1431 x490) x756) (= (x1431 160) x490) (<= x1266 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (not x1253) x592) (=> (and (and (= (ite (= 1 x283) 1 0) x351) (>= 5 x283) (= (x1431 x474) x128) (= (x1431 x1358) x283) (<= 1 x128) (= x707 (x450 (+ 32 x474))) (= (= 0 x351) x319) (= x1358 (x1431 x707))) x1253) (and (=> (and (not x319) (and (= x668 x1306) (= x1069 (x1431 x114)) (= (x450 (+ 128 x1358)) x114) (>= x668 1) (>= 1461501637330902918203684832716283019655932542975 x668) (= (x1034 1461501637330902918203684832716283019655932542975 x1069) x668))) x564) (=> (and x319 (and (and (= x805 (ite (= 2 x1135) 1 0)) (= (< 0 x805) x40) (= x1135 (x1431 x1358)) (<= x1135 5)) (or (and x40 (= x805 1)) (and (and (= 3 x767) (= 1 x785) (= (x1431 x1358) x767)) (not x40))))) x773))))) x297))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x577 x1058))
(assert (x577 x995))
(assert (= x1055 (x103 (x585 x335 x1055))))
(assert (=> (<= x1212 10000) (= (x857 x1212) 0)))
(assert (=> (>= 10000 x1102) (= (x857 x1102) 0)))
(assert (=> (<= x312 10000) (= 0 (x857 x312))))
(assert (= (x103 (x790 x1115 x1209 x1399 x569 x880 x56 x165)) x1209))
(assert (= (x755 (x536 x260 x1421 x1026 x141 x1048)) x1026))
(assert (= (x790 x335 x203 x422 x1204 x127 x1058 x826) (x857 (x790 x335 x203 x422 x1204 x127 x1058 x826))))
(assert (x577 x448))
(assert (=> (>= 10000 x550) (= (x857 x550) 0)))
(assert (x577 x437))
(assert (not (x1309 (x1317 66 x441 x12 x312))))
(assert (x577 x915))
(assert (not (x1309 (x197 x836 x1184 x914 x1298 x80 x1174))))
(assert (x577 x1325))
(assert (x577 x1088))
(assert (x577 x1371))
(assert (x577 x50))
(assert (x577 x492))
(assert (x51 x747))
(assert (x577 x597))
(assert (= x430 (x635 (x197 x1115 x75 x1098 x430 x1082 x902))))
(assert (< (x1317 x1331 x96 x1056 x546) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1063 (or x574 x500)))
(assert (= 0 (x857 18446744073709551613)))
(assert (x1309 2065879269376))
(assert (= (or (and x204 x889) x806) x1239))
(assert (=> (>= 10000 x867) (= 0 (x857 x867))))
(assert (= x1259 (x700 (x536 x1315 x372 x632 x11 x1259))))
(assert (= (x755 (x790 x335 x203 x422 x1204 x127 x1058 x826)) x422))
(assert (x577 x271))
(assert (= (x857 (x790 x388 x339 x919 x713 x1302 x120 x336)) (x790 x388 x339 x919 x713 x1302 x120 x336)))
(assert (x577 x992))
(assert (x577 x1196))
(assert (x577 x385))
(assert (x577 x427))
(assert (= x818 (x635 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (x577 x800))
(assert (=> (<= x1044 10000) (= (x857 x1044) 0)))
(assert (x577 x1337))
(assert (x577 x914))
(assert (x577 x441))
(assert (= (or x925 x1451) x17))
(assert (x577 x1078))
(assert (x51 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x476 10000) (= (x857 x476) 0)))
(assert (= (x103 (x1317 x1390 x900 x638 x219)) x900))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x1331 x489 x1129 x803 x67)))
(assert (x577 x273))
(assert (x577 x1081))
(assert (x577 x310))
(assert (x577 x568))
(assert (< 10000 (x790 x388 x339 x919 x713 x1302 x120 x336)))
(assert (x577 x52))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x577 x918))
(assert (x577 x1056))
(assert (< (x790 x1390 x1417 x457 x214 x1132 x1235 x1002) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x241))
(assert (x577 x797))
(assert (x577 x243))
(assert (=> (>= 10000 x75) (= (x857 x75) 0)))
(assert (x577 x1004))
(assert (x577 x751))
(assert (x577 x1175))
(assert (= (x311 (x585 x260 x174)) x260))
(assert (x577 x456))
(assert (= (x700 (x536 x836 x1248 x1212 x911 x501)) x501))
(assert (= (x790 x1390 x1417 x457 x214 x1132 x1235 x1002) (x857 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002))))
(assert (x577 x24))
(assert (=> (<= x823 10000) (= 0 (x857 x823))))
(assert (x577 x463))
(assert (x577 x763))
(assert (x1309 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (= (and x1086 x1219) x461))
(assert (x577 x921))
(assert (x577 x1377))
(assert (x577 x1139))
(assert (= x836 (x311 (x552 x836 x31 x279))))
(assert (= (x311 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023)) x836))
(assert (x577 x543))
(assert (= (x290 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) x368))
(assert (=> (<= x275 10000) (= 0 (x857 x275))))
(assert (not (x1309 (x536 x260 x1421 x1026 x141 x1048))))
(assert (x1309 18446744073709551167))
(assert (x577 x1286))
(assert (not (x1309 (x790 x1315 x861 x438 x484 x163 x834 x712))))
(assert (x577 x69))
(assert (x577 x43))
(assert (=> (>= 10000 x631) (= (x857 x631) 0)))
(assert (=> (>= 10000 x1406) (= (x857 x1406) 0)))
(assert (=> (<= x832 10000) (= 0 (x857 x832))))
(assert (not (x1309 (x552 x1390 x1380 x140))))
(assert (=> (>= 10000 x136) (= 0 (x857 x136))))
(assert (x577 x165))
(assert (= x1322 (x700 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (x577 x1020))
(assert (= x310 (x755 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (= (and (not x532) x1242) x851))
(assert (x577 x1233))
(assert (x577 x666))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x1315 x372 x632 x11 x1259)))
(assert (x577 x1068))
(assert (x577 x833))
(assert (= 0 (x857 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (x857 18446744073709551455) 0))
(assert (x577 x438))
(assert (x577 x716))
(assert (x577 x387))
(assert (x577 x799))
(assert (= x1095 (and (not x1091) x292)))
(assert (x577 x366))
(assert (x577 x474))
(assert (x577 x1045))
(assert (x577 x321))
(assert (= x833 (x755 (x1317 x836 x665 x833 x867))))
(assert (x577 x611))
(assert (= (x755 (x1317 x1315 x323 x1127 x1297)) x1127))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x696 x686))
(assert (x577 x1282))
(assert (x577 x1075))
(assert (= x1161 (x700 (x790 x836 x751 x997 x792 x1161 x142 x520))))
(assert (> (x552 x1115 x1459 x1053) 10000))
(assert (not (x1309 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x260 x243 x667)))
(assert (=> (>= 10000 x1322) (= (x857 x1322) 0)))
(assert (= x569 (x635 (x790 x1115 x1209 x1399 x569 x880 x56 x165))))
(assert (x577 x702))
(assert (x577 x1386))
(assert (= (x790 x1315 x861 x438 x484 x163 x834 x712) (x857 (x790 x1315 x861 x438 x484 x163 x834 x712))))
(assert (x577 x840))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)))
(assert (x129 x1333))
(assert (x577 x784))
(assert (= x1070 (x290 (x790 x260 x145 x1038 x995 x78 x1070 x1014))))
(assert (x577 x1215))
(assert (=> (<= x800 10000) (= (x857 x800) 0)))
(assert (x51 x1060))
(assert (= (x103 (x1317 66 x441 x12 x312)) x441))
(assert (x577 x1436))
(assert (=> (<= x584 10000) (= (x857 x584) 0)))
(assert (x577 x209))
(assert (= (or x1476 x307) x111))
(assert (x577 x369))
(assert (x577 x1179))
(assert (= x429 (=> (and (and (and (= x454 x491) (= false x42)) (and (and (= x932 x55) (and (and (and (and (= false x890) (= x1313 x662) (= x1264 x1439)) (and (and (and (and (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x1173) (= x934 false) (= x874 false) (= (x258 x125) x824) (<= x780 127) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x535) (= (x1226 x125) x1130) (= (x821 x937) x963) (<= 32 x1290) (<= x1290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1258 x1130) (<= x780 127) (= 2189116922 x1101) (= x937 x393) (= x761 128) (= (> x1057 0) x532) (>= x824 1) (<= x1496 1461501637330902918203684832716283019655932542975)) (or (and (and (= x155 1) (<= x1290 4294967295) (<= 32 x1290)) x532) (and (= x1057 x155) (not x532)))) (= x211 x443)) (= x639 x393))) (= x1096 x1474)) (and (= x904 (+ x983 x363 32)) (= (+ x472 x364 32) x363) (= (- x363 36) x473) (<= 0 x1335) (= (- x904 36) x877) (= x508 (- x616 36)) (= x1175 (- x364 36)) (= x364 (+ 32 x616 x615)) (= (* 32 x554) x1387) (= x143 (+ x616 32)) (= (+ x904 32) x44) (= x1039 (+ x364 32)) (<= x99 x983) (= (+ x363 32) x419) (= x615 (* 160 x986)) (< x1177 x99) (= (+ x940 420) x616) (= x503 x1005) (= x431 x99) (= x472 (* 160 x907)) (= x1313 (+ x1387 x904 32)) (= x1177 (* 32 (- x1335 1))) (= x940 (* x1265 128)) (= (* 32 x1335) x983) (>= 134217728 x1335)))) (and (= x1065 false) (>= x1107 1) (= x929 32) (= x1378 (x567 x1324)) (= x207 (x221 x1347)) (= false x1017) (= (x258 x1347) x1107) (<= x662 2065879269444) (>= x662 676) (= (x418 x1343) x234) (= x1202 1889567281) (= x1378 x854) (>= 127 x300) (= x131 false) (= x79 false) (= false x599) (= x207 x644) (= x393 x1343) (>= 127 x300) (= false x694) (= (x552 64 x491 1) x1324)))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1096) (not (= x213 x476)) (= (< 0 (x258 x1347)) x72) (not (= x213 x125)) (not (= x1103 x476)) (<= 0 x393) (not (= x1043 x476)) x575 (<= x405 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x410) (<= 0 x742) (<= x1103 1461501637330902918203684832716283019655932542975) (<= x907 4294967295) (<= x951 1461501637330902918203684832716283019655932542975) (<= 0 x55) (not (= x1103 x1043)) (<= x1306 1461501637330902918203684832716283019655932542975) (not (= x1347 x213)) (>= x1347 1) x1478 x182 (>= x273 64) (= (> (x258 x357) 0) x1478) (>= x899 1) (not (= x899 x1103)) (not (= x1043 x125)) (>= x228 0) (not (= x476 x357)) (>= 1461501637330902918203684832716283019655932542975 x1005) (= x213 x454) (not (= x357 x1103)) (>= x951 0) (= x732 x899) (<= 1 x405) (>= 1461501637330902918203684832716283019655932542975 x357) (= (< 0 (x258 x125)) x182) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1216) (>= x357 1) (not (= x899 x213)) (= x922 (x750 32)) (<= 1 x1265) (>= x732 1) (<= x33 1461501637330902918203684832716283019655932542975) x768 x1330 (>= x1216 0) (>= 1461501637330902918203684832716283019655932542975 x393) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x228) (= x122 36) (<= 1 x476) (<= x213 1461501637330902918203684832716283019655932542975) (= x768 (< 0 (x258 x476))) (>= 4294967295 x273) (<= x431 4294967295) (= (> (x258 x1103) 0) x1330) (not (= x1347 x125)) (not (= x899 x1043)) (not (= x213 x1103)) (<= x443 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1103 1) (not (= x357 x899)) (= 0 x229) (= x1092 (> (x258 x1043) 0)) x1092 (>= 4294967295 x868) (= x1483 x1347) (<= x742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 4294967295 x1265) (>= x922 1) (<= x1439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 (x258 x213)) x962) (>= 1461501637330902918203684832716283019655932542975 x922) (<= x55 1461501637330902918203684832716283019655932542975) (<= 0 x1439) (<= 1 x1306) x72 (<= 1 x125) (<= x554 4294967295) (not (= x213 x1043)) (not (= x476 x125)) (not (= x357 x1043)) (not (= x125 x357)) (>= 1461501637330902918203684832716283019655932542975 x1347) (not (= x1103 x1347)) (= x814 (> (x258 x899) 0)) (not (= x899 x476)) (<= 0 x1096) (not (= x213 x357)) x814 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x58) (<= x899 1461501637330902918203684832716283019655932542975) (<= x1345 1461501637330902918203684832716283019655932542975) (not (= x476 x1347)) (not (= x1043 x1347)) (>= 4294967295 x796) (>= 4294967295 x986) (<= 0 x410) (<= 0 x58) (= x213 x1306) (>= x443 0) (not (= x899 x1347)) (not (= x357 x1347)) (<= x476 1461501637330902918203684832716283019655932542975) (<= x295 1461501637330902918203684832716283019655932542975) (not (= x125 x1103)) (= x1103 x405) (>= x1043 1) (>= 1461501637330902918203684832716283019655932542975 x125) (<= x1043 1461501637330902918203684832716283019655932542975) (>= x295 0) (<= x732 1461501637330902918203684832716283019655932542975) (= x575 (= x1347 x922)) (>= x1005 0) (not (= x125 x899)) (= x808 0) (>= x213 1) x962)) x332)))
(assert (=> (>= 10000 x1023) (= (x857 x1023) 0)))
(assert (= (x700 (x197 x1315 x1215 x402 x812 x776 x317)) x776))
(assert (= (x700 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970)) x909))
(assert (x577 x363))
(assert (x577 x300))
(assert (= 0 (x857 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (x577 x822))
(assert (x577 x623))
(assert (= (x311 (x536 x1331 x489 x1129 x803 x67)) x1331))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)))
(assert (=> (>= 10000 x1459) (= (x857 x1459) 0)))
(assert (= x388 (x311 (x536 x388 x1140 x647 x600 x1470))))
(assert (= (x635 (x1317 x1315 x323 x1127 x1297)) x1297))
(assert (= (x857 (x536 x1315 x372 x632 x11 x1259)) (x536 x1315 x372 x632 x11 x1259)))
(assert (= (x700 (x790 x1331 x640 x736 x1085 x1236 x498 x299)) x1236))
(assert (x577 x274))
(assert (=> (<= x329 10000) (= 0 (x857 x329))))
(assert (not (x1309 (x197 x260 x511 x275 x1481 x102 x542))))
(assert (=> (>= 10000 x299) (= (x857 x299) 0)))
(assert (= (x311 (x790 x1331 x640 x736 x1085 x1236 x498 x299)) x1331))
(assert (x577 x1364))
(assert (= (x6 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x345))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x1115 x1459 x1053)))
(assert (= x250 (and x178 (not x670))))
(assert (x577 x1461))
(assert (x577 x383))
(assert (= (x700 (x790 x1115 x1209 x1399 x569 x880 x56 x165)) x880))
(assert (=> (<= x1015 10000) (= 0 (x857 x1015))))
(assert (= x620 (x103 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (= (x103 (x1317 x836 x665 x833 x867)) x665))
(assert (= (x755 (x790 x836 x751 x997 x792 x1161 x142 x520)) x997))
(assert (= 0 (x857 2065879269444)))
(assert (=> (<= x751 10000) (= 0 (x857 x751))))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= (x311 (x197 x388 x1118 x325 x818 x477 x382)) x388))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1317 x836 x665 x833 x867)))
(assert (not (x1309 (x197 x335 x548 x210 x420 x1154 x938))))
(assert (> (x1317 x388 x1019 x514 x385) 10000))
(assert (= (x103 (x197 x1331 x841 x151 x1275 x54 x1134)) x841))
(assert (x577 x21))
(assert (x577 x1421))
(assert (x577 x913))
(assert (x1309 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (= (=> (and (or (and (= x865 0) (not x889)) x889) (= x889 (= x865 0))) x1222) x882))
(assert (x577 x1250))
(assert (x577 x1176))
(assert (= 0 (x857 2189116922)))
(assert (x577 x1040))
(assert (x577 x619))
(assert (x577 x772))
(assert (= (and x1050 (not x1305)) x216))
(assert (x577 x1105))
(assert (=> (<= x997 10000) (= (x857 x997) 0)))
(assert (=> (<= x243 10000) (= 0 (x857 x243))))
(assert (x577 x392))
(assert (< (x610 x1331 x620 x192 x978 x83 x764 x681 x1389) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x529))
(assert (x577 x544))
(assert (= x1315 (x311 (x790 x1315 x861 x438 x484 x163 x834 x712))))
(assert (x577 x546))
(assert (= x1275 (x635 (x197 x1331 x841 x151 x1275 x54 x1134))))
(assert (= (x103 (x1317 x388 x1019 x514 x385)) x1019))
(assert (x577 x85))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x197 x1115 x75 x1098 x430 x1082 x902)))
(assert (x577 x713))
(assert (x577 x78))
(assert (x577 x1062))
(assert (x577 x1184))
(assert (x577 x498))
(assert (< 10000 (x197 x1115 x75 x1098 x430 x1082 x902)))
(assert (x577 x1322))
(assert (x577 x1414))
(assert (x577 x663))
(assert (x577 x33))
(assert (< 10000 (x585 x836 x1366)))
(assert (< (x536 x388 x1140 x647 x600 x1470) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x1153))
(assert (= (and x933 x277) x158))
(assert (x577 x270))
(assert (= (x6 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389)) x1389))
(assert (= (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41) (x857 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41))))
(assert (x577 x688))
(assert (x577 x425))
(assert (x577 x817))
(assert (x577 x118))
(assert (x577 x722))
(assert (x577 x1338))
(assert (= (x311 (x790 x836 x751 x997 x792 x1161 x142 x520)) x836))
(assert (< 10000 (x846 0)))
(assert (= x530 (x103 (x552 x1315 x530 x698))))
(assert (x577 x736))
(assert (= x619 (x635 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (< (x536 x335 x1403 x832 x14 x1348) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x746))
(assert (x577 x379))
(assert (x577 x917))
(assert (x577 x388))
(assert (x577 x728))
(assert (x129 x425))
(assert (not (x1309 (x1317 x836 x665 x833 x867))))
(assert (= x471 (and x316 (not x13))))
(assert (= 0 (x857 57896044618658097711785492504343953926634992332820282019728792003956564820036)))
(assert (= (x635 (x536 x335 x1403 x832 x14 x1348)) x14))
(assert (x577 x1328))
(assert (x577 x1224))
(assert (= (x635 (x790 x1315 x861 x438 x484 x163 x834 x712)) x484))
(assert (< 10000 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023)))
(assert (x577 x654))
(assert (x577 x1120))
(assert (x577 x344))
(assert (= (x755 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023)) x550))
(assert (x577 x1223))
(assert (x577 x12))
(assert (= (and (not x1249) x1382) x1293))
(assert (= (x857 (x790 x1115 x1209 x1399 x569 x880 x56 x165)) (x790 x1115 x1209 x1399 x569 x880 x56 x165)))
(assert (= (=> (and (= x1354 x510) (= x1201 x865) (= x1492 x971) (= x722 x1471)) x882) x976))
(assert (=> (<= x165 10000) (= (x857 x165) 0)))
(assert (= x1390 (x311 (x197 x1390 x786 x321 x627 x1277 x560))))
(assert (x577 x1248))
(assert (x577 x1307))
(assert (x577 x601))
(assert (x577 x62))
(assert (= (x857 (x585 x1390 x858)) (x585 x1390 x858)))
(assert (x577 x834))
(assert (x1309 18446744073709551614))
(assert (x577 x823))
(assert (x577 x419))
(assert (x577 x360))
(assert (x577 x1366))
(assert (x577 x39))
(assert (x577 x886))
(assert (x51 x686))
(assert (=> (<= x1430 10000) (= 0 (x857 x1430))))
(assert (= (x103 (x197 x335 x548 x210 x420 x1154 x938)) x548))
(assert (x577 x173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x1115 x671 x666 x226 x878)))
(assert (= x477 (x700 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (= (and x532 x1242) x375))
(assert (= (x552 x1390 x1380 x140) (x857 (x552 x1390 x1380 x140))))
(assert (= x978 (x635 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (< (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x431))
(assert (not (x1309 (x536 x1115 x671 x666 x226 x878))))
(assert (x577 x1246))
(assert (= x127 (x700 (x790 x335 x203 x422 x1204 x127 x1058 x826))))
(assert (not (x1309 (x790 x1115 x1209 x1399 x569 x880 x56 x165))))
(assert (x577 x330))
(assert (x577 x667))
(assert (x577 x1462))
(assert (= (x700 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)) x94))
(assert (x577 x1399))
(assert (x577 x212))
(assert (= 66 (x311 (x1317 66 x441 x12 x312))))
(assert (x577 x1209))
(assert (x577 x1275))
(assert (= x858 (x103 (x585 x1390 x858))))
(assert (x577 x1287))
(assert (= x1291 (x875 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (= x1126 (or x851 x375)))
(assert (x577 x926))
(assert (x577 x571))
(assert (x577 x28))
(assert (x577 x1268))
(assert (x577 x904))
(assert (x577 x476))
(assert (=> (>= 10000 x151) (= (x857 x151) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x197 x836 x1184 x914 x1298 x80 x1174)))
(assert (x577 x339))
(assert (= (x290 (x197 x1390 x786 x321 x627 x1277 x560)) x560))
(assert (x577 x997))
(assert (=> (>= 10000 x902) (= (x857 x902) 0)))
(assert (x577 x781))
(assert (= (x635 (x1317 66 x441 x12 x312)) x312))
(assert (x577 x707))
(assert (= (x311 (x585 x1315 x800)) x1315))
(assert (=> (>= 10000 x1059) (= 0 (x857 x1059))))
(assert (= (x103 (x1317 x260 x478 x168 x1105)) x478))
(assert (x577 x101))
(assert (x577 x539))
(assert (=> (<= x858 10000) (= (x857 x858) 0)))
(assert (= (and x691 x148) x292))
(assert (x577 x1178))
(assert (x577 x132))
(assert (not x429))
(assert (x577 x1357))
(assert (= x145 (x103 (x790 x260 x145 x1038 x995 x78 x1070 x1014))))
(assert (= (x197 x1315 x1215 x402 x812 x776 x317) (x857 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (x577 x682))
(assert (x129 x1128))
(assert (x577 x25))
(assert (= 0 (x857 1461501637330902918203684832716283019655932542975)))
(assert (x577 x1094))
(assert (x577 x201))
(assert (= x157 (x755 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345))))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x577 x1449))
(assert (x577 x883))
(assert (x577 x1103))
(assert (= x1061 (and x1126 (not x1231))))
(assert (x577 x279))
(assert (x1309 1889567281))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (= (x103 (x1317 x1315 x323 x1127 x1297)) x323))
(assert (x577 x1394))
(assert (x577 x1290))
(assert (x129 x1024))
(assert (x577 x1477))
(assert (x577 x107))
(assert (= (or x1384 x1467 x1095 x1160 x337) x1382))
(assert (= (x857 (x552 x388 x972 x584)) (x552 x388 x972 x584)))
(assert (x577 x1237))
(assert (x577 x1308))
(assert (=> (>= 10000 x413) (= (x857 x413) 0)))
(assert (x577 x133))
(assert (x577 x776))
(assert (> (x610 x1390 x272 x310 x619 x909 x1490 x992 x970) 10000))
(assert (x577 x374))
(assert (x577 x639))
(assert (x577 x1074))
(assert (< 10000 (x536 x335 x1403 x832 x14 x1348)))
(assert (= (x311 (x552 x1315 x530 x698)) x1315))
(assert (=> (>= 10000 x317) (= (x857 x317) 0)))
(assert (=> (<= x325 10000) (= 0 (x857 x325))))
(assert (x577 x634))
(assert (x577 x66))
(assert (=> (>= 10000 x1257) (= (x857 x1257) 0)))
(assert (x577 x472))
(assert (x577 x530))
(assert (x577 x195))
(assert (not (x1309 (x197 x1390 x786 x321 x627 x1277 x560))))
(assert (=> (<= x1019 10000) (= (x857 x1019) 0)))
(assert (x577 x1339))
(assert (x577 x798))
(assert (=> (<= x168 10000) (= 0 (x857 x168))))
(assert (x577 x980))
(assert (= x140 (x755 (x552 x1390 x1380 x140))))
(assert (= true x1242))
(assert (x577 x706))
(assert (= x514 (x755 (x1317 x388 x1019 x514 x385))))
(assert (=> (>= 10000 x1381) (= 0 (x857 x1381))))
(assert (=> (<= x1348 10000) (= (x857 x1348) 0)))
(assert (= x995 (x635 (x790 x260 x145 x1038 x995 x78 x1070 x1014))))
(assert (x577 x1236))
(assert (x51 x326))
(assert (x51 x1274))
(assert (=> (<= x640 10000) (= 0 (x857 x640))))
(assert (< 10000 (x585 x1331 x212)))
(assert (x577 x1475))
(assert (= x335 (x311 (x1317 x335 x354 x1015 x1381))))
(assert (x577 x238))
(assert (x696 x747))
(assert (x577 x128))
(assert (x577 x70))
(assert (= x1079 (or x1429 x259)))
(assert (x577 x149))
(assert (=> (>= 10000 x1038) (= (x857 x1038) 0)))
(assert (not (x1309 (x552 64 x491 1))))
(assert (x577 x265))
(assert (x577 x1014))
(assert (x577 x1315))
(assert (= (x552 x1315 x530 x698) (x857 (x552 x1315 x530 x698))))
(assert (x577 x122))
(assert (x577 x145))
(assert (> (x585 x1115 x1214) 10000))
(assert (=> (>= 10000 x880) (= 0 (x857 x880))))
(assert (=> (<= x900 10000) (= 0 (x857 x900))))
(assert (=> (>= 10000 x1314) (= 0 (x857 x1314))))
(assert (=> (>= 10000 x1275) (= (x857 x1275) 0)))
(assert (= x178 (or x111 x769)))
(assert (=> (>= 10000 x627) (= 0 (x857 x627))))
(assert (x51 x1468))
(assert (= x1390 (x311 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (x577 x513))
(assert (x577 x406))
(assert (x577 x252))
(assert (x577 x852))
(assert (=> (>= 10000 x1055) (= (x857 x1055) 0)))
(assert (x577 x785))
(assert (= x592 (not (and (= x1045 (x450 (+ 32 x815))) (not x793) (= x1352 (x1431 x289)) (= (x1431 x528) x656) (not (= x10 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x289 (x1431 192)) (= x1270 (x1431 x656)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x815) (= x1136 (= 1 x680)) (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x815 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x815 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x815 (x450 (+ x10 160))) (not x1334) (not x1136) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x153) (= (x901 (- x217 1)) x680) (= x1334 (= x217 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x10)) (<= x10 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x450 (+ x864 32)) x1396) (= x233 (x450 (+ x171 32))) (< x10 x815) (= x1457 (x1431 x873)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1270 x1457))) (> x784 x815) (= x10 (x450 (+ (mod (+ 32 x1080) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x153))) (> x10 x153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x10) (= (x450 (+ 32 x233)) x1064) (= x1252 (x450 (+ 32 x32))) (= x1080 (* 32 x217)) (= (x450 (+ 160 x815)) x784) (= x864 (x450 (+ x1045 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x815)) (= (x450 (+ 32 x10)) x171) (= x217 (x450 (+ x1270 x1457))) (= (x450 (+ x153 32)) x32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x10) (<= 1 x10) (not (= x815 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x450 (+ x1396 32)) x1250) (>= 18446744073709551615 x217) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x10)) (= (x1431 x8) x873) (= x1377 (x450 (+ x1064 32))) (<= x815 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= x217 1) x793)))))
(assert (not (x1309 (x585 x260 x174))))
(assert (x577 x1470))
(assert (x577 x253))
(assert (=> (<= x638 10000) (= (x857 x638) 0)))
(assert (x577 x964))
(assert (x577 x15))
(assert (=> (>= 10000 x489) (= (x857 x489) 0)))
(assert (x577 x824))
(assert (= x136 (x755 (x536 x1390 x411 x136 x1292 x384))))
(assert (=> (<= x335 10000) (= 0 (x857 x335))))
(assert (x577 x1277))
(assert (=> (>= 10000 x995) (= (x857 x995) 0)))
(assert (x577 x1427))
(assert (= (x311 (x197 x335 x548 x210 x420 x1154 x938)) x335))
(assert (x577 x109))
(assert (x577 x312))
(assert (= x1287 (x875 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (x577 x1481))
(assert (=> (>= 10000 x260) (= 0 (x857 x260))))
(assert (= (x6 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) x41))
(assert (> (x536 x1315 x372 x632 x11 x1259) 10000))
(assert (= x378 (and x1167 x158)))
(assert (x577 x1380))
(assert (= x1044 (x755 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (x696 x1100))
(assert (x577 x214))
(assert (not (x1309 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41))))
(assert (=> (<= x860 10000) (= (x857 x860) 0)))
(assert (= x340 (or x1293 x352)))
(assert (=> (>= 10000 x899) (= 0 (x857 x899))))
(assert (x577 x1331))
(assert (x577 x924))
(assert (= (x103 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) x1368))
(assert (=> (<= x441 10000) (= 0 (x857 x441))))
(assert (=> (<= x632 10000) (= (x857 x632) 0)))
(assert (x577 x1025))
(assert (< 10000 (x585 x260 x174)))
(assert (x577 x858))
(assert (x577 x885))
(assert (x577 x96))
(assert (= x1129 (x755 (x536 x1331 x489 x1129 x803 x67))))
(assert (not (x1309 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434))))
(assert (= x168 (x755 (x1317 x260 x478 x168 x1105))))
(assert (= x836 (x311 (x1317 x836 x665 x833 x867))))
(assert (x577 x1356))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x585 x1331 x212)))
(assert (not (x1309 (x197 x1331 x841 x151 x1275 x54 x1134))))
(assert (x577 x1295))
(assert (x577 x680))
(assert (= (x311 (x536 x1315 x372 x632 x11 x1259)) x1315))
(assert (= x1118 (x103 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1207) (= (> x1197 0) x1276) (= (x450 (+ x1207 32)) x201) (= (x450 (+ x1207 (mod (+ 32 x1337) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x779) (= (* x1197 32) x1337) (= (x598 x306) x1197) (> x779 x1207) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706)) (< x49 x706)) (and (> x49 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706))) (= (x901 (- x662 x1081)) x1139) (= x113 (x450 (+ 32 x306))) (= (x450 (+ 36 x49)) x306) (= x896 (+ x528 32)) (>= x779 1) (not (or (and (> x1139 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x113 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1139) (<= x113 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1139 x113)))) (= (x598 196) x49) (<= x1207 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1207) (= (* 160 x1197) x1081) (>= 18446744073709551615 x1197) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x49) (>= 2065879269376 x49))) (and (=> x1276 x1109) (=> (and (= x1008 x779) (not x1276)) x697))) x333))
(assert (x577 x771))
(assert (x577 x82))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x857 (x1317 x260 x478 x168 x1105)) (x1317 x260 x478 x168 x1105)))
(assert (=> (>= 10000 x192) (= 0 (x857 x192))))
(assert (x577 x762))
(assert (x577 x892))
(assert (=> (<= x142 10000) (= (x857 x142) 0)))
(assert (= x1214 (x103 (x585 x1115 x1214))))
(assert (x577 x1028))
(assert (x577 x481))
(assert (x577 x1204))
(assert (x577 x701))
(assert (x577 x911))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)))
(assert (x577 x1168))
(assert (= x203 (x103 (x790 x335 x203 x422 x1204 x127 x1058 x826))))
(assert (=> (>= 10000 x102) (= 0 (x857 x102))))
(assert (x577 x1132))
(assert (=> (<= x770 10000) (= (x857 x770) 0)))
(assert (x577 x130))
(assert (=> (>= 10000 x94) (= (x857 x94) 0)))
(assert (not (x1309 (x585 x1390 x858))))
(assert (= 0 (x857 18446744073709551487)))
(assert (x577 x491))
(assert (x51 x1024))
(assert (x577 x77))
(assert (=> (>= 10000 x78) (= (x857 x78) 0)))
(assert (x577 x1183))
(assert (x577 x1137))
(assert (x577 x1413))
(assert (x577 x1169))
(assert (x577 x470))
(assert (x577 x669))
(assert (=> (<= x1277 10000) (= (x857 x1277) 0)))
(assert (=> (>= 10000 x713) (= (x857 x713) 0)))
(assert (x577 x985))
(assert (x577 x1396))
(assert (x51 x1069))
(assert (x577 x1345))
(assert (x577 x1008))
(assert (x577 x877))
(assert (= (x875 (x790 x388 x339 x919 x713 x1302 x120 x336)) x336))
(assert (x51 x358))
(assert (x1309 18446746139588821059))
(assert (= (and x1463 (not x40)) x389))
(assert (= x279 (x755 (x552 x836 x31 x279))))
(assert (= (x857 (x197 x260 x511 x275 x1481 x102 x542)) (x197 x260 x511 x275 x1481 x102 x542)))
(assert (= x335 (x311 (x585 x335 x1055))))
(assert (= (x290 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) x664))
(assert (< 10000 (x790 x836 x751 x997 x792 x1161 x142 x520)))
(assert (= 0 (x857 2065879269376)))
(assert (=> (>= 10000 x1184) (= (x857 x1184) 0)))
(assert (x577 x743))
(assert (= (x635 (x790 x335 x203 x422 x1204 x127 x1058 x826)) x1204))
(assert (x577 x1024))
(assert (x577 x306))
(assert (x577 x919))
(assert (x1309 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= x1029 (and x670 x178)))
(assert (x577 x555))
(assert (x577 x1038))
(assert (x577 x1066))
(assert (= x1390 (x311 (x1317 x1390 x900 x638 x219))))
(assert (x1309 2065879269316))
(assert (x577 x792))
(assert (x577 x633))
(assert (x577 x1487))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (=> (<= x1434 10000) (= (x857 x1434) 0)))
(assert (> (x585 x1390 x858) 10000))
(assert (=> (<= x1103 10000) (= (x857 x1103) 0)))
(assert (x577 x1174))
(assert (= (x1317 x1115 x302 x688 x324) (x857 (x1317 x1115 x302 x688 x324))))
(assert (x577 x887))
(assert (x577 x1410))
(assert (=> (>= 10000 x157) (= (x857 x157) 0)))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (= x1315 (x311 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (> (x790 x1331 x640 x736 x1085 x1236 x498 x299) 10000))
(assert (= x1125 (=> (and (= x933 (< 0 x15)) (= x580 (x1397 x1493)) (= x15 (x1397 x580))) (and (=> (and (and (or (and (and (not x559) (= x559 (> x77 32)) (= x1393 (x1288 x606))) x1167) (not x1167)) (and (= x1193 (x1397 x360)) (= x116 (x1397 x1493)) (= x467 (x1034 1461501637330902918203684832716283019655932542975 x686)) (= x1422 (x450 (+ x1156 32))) (<= 1 x173) (= (x1397 x1193) x686) (= x1157 (x1397 x486)) (= x360 (x450 (+ x116 32))) (= x77 (x621 x1157)) (= (x450 (+ x1193 32)) x1076) (= x383 (x450 (+ x93 32))) (= (x450 (+ x1072 32)) x281) (= (x450 (+ x923 32)) x1156) (= (x450 (+ x1157 32)) x606) (= (x1397 x116) x173) (= x1167 (< 0 x77)) (= (x450 (+ 32 x1076)) x486) (= (x450 (+ x1156 128)) x93) (= (x1397 x1076) x1409) (= (x450 (+ x1422 32)) x1072))) x933) x1182) (=> (and (not x933) (= x1452 x923)) x1244)))))
(assert (= x1115 (x311 (x790 x1115 x1209 x1399 x569 x880 x56 x165))))
(assert (= (x311 (x552 x1115 x1459 x1053)) x1115))
(assert (x577 x1365))
(assert (not (x1309 (x790 x1331 x640 x736 x1085 x1236 x498 x299))))
(assert (= (x700 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434)) x586))
(assert (=> (>= 10000 x210) (= (x857 x210) 0)))
(assert (= x260 (x311 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (x577 x415))
(assert (x577 x217))
(assert (= x402 (x755 (x197 x1315 x1215 x402 x812 x776 x317))))
(assert (x577 x572))
(assert (x577 x303))
(assert (x577 x381))
(assert (< 10000 (x585 x1315 x800)))
(assert (not (x1309 (x552 x388 x972 x584))))
(assert (=> (<= x1129 10000) (= (x857 x1129) 0)))
(assert (x577 x357))
(assert (= (x311 (x536 x260 x1421 x1026 x141 x1048)) x260))
(assert (x577 x605))
(assert (x577 x324))
(assert (x577 x727))
(assert (x577 x860))
(assert (=> (>= 10000 x174) (= 0 (x857 x174))))
(assert (x577 x631))
(assert (= (x103 (x585 x260 x174)) x174))
(assert (not (x1309 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (x577 x907))
(assert (=> (<= x1204 10000) (= (x857 x1204) 0)))
(assert (x577 x477))
(assert (= (x755 (x536 x1115 x671 x666 x226 x878)) x666))
(assert (x577 x341))
(assert (x577 x1067))
(assert (x577 x102))
(assert (x577 x1085))
(assert (x577 x417))
(assert (= x1082 (x700 (x197 x1115 x75 x1098 x430 x1082 x902))))
(assert (=> (<= x749 10000) (= (x857 x749) 0)))
(assert (= x210 (x755 (x197 x335 x548 x210 x420 x1154 x938))))
(assert (x577 x354))
(assert (x577 x18))
(assert (x577 x1375))
(assert (x577 x1492))
(assert (x577 x845))
(assert (x577 x616))
(assert (x577 x503))
(assert (x577 x1390))
(assert (x577 x648))
(assert (x577 x1261))
(assert (=> (<= x52 10000) (= (x857 x52) 0)))
(assert (= (x610 x1390 x272 x310 x619 x909 x1490 x992 x970) (x857 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (x577 x231))
(assert (x577 x1409))
(assert (x577 x508))
(assert (x577 x963))
(assert (x577 x202))
(assert (x577 x630))
(assert (x577 x153))
(assert (x577 x969))
(assert (x577 x515))
(assert (x577 x328))
(assert (= (x311 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)) x335))
(assert (x577 x1146))
(assert (x577 x1426))
(assert (x577 x302))
(assert (=> (>= 10000 x420) (= (x857 x420) 0)))
(assert (=> (>= 10000 x619) (= (x857 x619) 0)))
(assert (x577 x965))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (= (x755 (x790 x260 x145 x1038 x995 x78 x1070 x1014)) x1038))
(assert (x577 x932))
(assert (x577 x1107))
(assert (= x382 (x290 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (= (x857 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)) (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314)))
(assert (x577 x905))
(assert (=> (<= x422 10000) (= 0 (x857 x422))))
(assert (=> (>= 10000 x834) (= (x857 x834) 0)))
(assert (= (x700 (x790 x1315 x861 x438 x484 x163 x834 x712)) x163))
(assert (x577 x151))
(assert (< 10000 (x552 x1390 x1380 x140)))
(assert (x577 x207))
(assert (x577 x343))
(assert (= (x552 x1331 x251 x1004) (x857 (x552 x1331 x251 x1004))))
(assert (x577 x941))
(assert (x577 x656))
(assert (< 10000 (x1317 x1331 x96 x1056 x546)))
(assert (x577 x1197))
(assert (x577 x774))
(assert (= (x290 (x790 x1331 x640 x736 x1085 x1236 x498 x299)) x498))
(assert (x577 x94))
(assert (x1309 2065879269284))
(assert (x577 x1264))
(assert (x577 x841))
(assert (=> (<= x736 10000) (= 0 (x857 x736))))
(assert (= (x857 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (=> (>= 10000 x1014) (= 0 (x857 x1014))))
(assert (x577 x744))
(assert (x577 x235))
(assert (= (x700 (x536 x388 x1140 x647 x600 x1470)) x1470))
(assert (= x12 (x755 (x1317 66 x441 x12 x312))))
(assert (x577 x283))
(assert (x51 x399))
(assert (> (x790 x1390 x1417 x457 x214 x1132 x1235 x1002) 10000))
(assert (x577 x157))
(assert (x577 x588))
(assert (= (=> (and (>= 18446744073709551613 x69) (<= x1404 18446744073709551615) (>= 18446744073709551614 x69) (or (>= 18446746139588821027 x871) (>= x871 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= (x450 (+ 96 x69)) x1498) (= x1426 (x598 x377)) (not (< x1498 x69)) (= x727 (x598 x804)) (<= 2 x367) (not (> x346 x1296)) (>= 18446744073709551613 x69) (= x1427 (x598 x985)) (= (x450 (+ x69 32)) x608) (= x1404 (x598 x871)) (or (>= x985 57896044618658097711785492504343953926634992332820282019728792003956564820068) (>= 18446746139588821027 x985)) (= x787 (not (< x591 x1237))) (<= x1168 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x450 (+ x985 32)) x591) (= (+ x831 x1404) x459) (or (<= x69 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x69)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x69) (<= x69 18446744073709551518)) (>= x1168 96) (= (x450 (+ x377 x727)) x871) (<= x1426 1461501637330902918203684832716283019655932542975) (or (and (> x565 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1296)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1296) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x565)) (> x1296 x565))) (= (+ x537 x1498) x367) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x377) (>= 18446746139588821027 x377)) (= x831 (+ x1498 32)) (= (x450 (+ 32 x608)) x293) (= (x450 (+ 31 x871)) x565) (<= x69 18446744073709551614) (< x69 x1498) (= x230 (x598 x1482)) (not (> x1498 x367)) (= x1168 (x901 (- x1296 x377))) (= x1468 (+ 63 x1376)) (= x804 (x450 (+ x1482 32))) (<= x727 18446744073709551615) (> x367 x1498) (or (>= x1296 57896044618658097711785492504343953926634992332820282019728792003956564820100) (<= x1296 18446746139588821059)) (>= 18446744073709551615 x367) (<= x69 18446744073709551613) (= x1376 (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1294)) (>= 18446744073709551614 x537) (= (x450 (+ x985 x1427)) x377) (= x1357 (x450 (+ x871 32))) (= (x450 (+ x1357 x1404)) x346) (= (x450 (+ 32 x377)) x1482) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x69) (<= x69 18446744073709551518)) (<= x69 18446744073709551614) (= (+ 31 x1404) x1294) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1468) x537) (>= 18446744073709551615 x1427)) (and (=> (= x891 x367) x843) x787)) x936))
(assert (= (x311 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002)) x1390))
(assert (= (x857 37664329658542632380461339884011895550187483938955784695590509376205521682432) 0))
(assert (x577 x1333))
(assert (x577 x14))
(assert (not (x1309 (x536 x836 x1248 x1212 x911 x501))))
(assert (x577 x644))
(assert (x577 x920))
(assert (x577 x1452))
(assert (= (x290 (x790 x1115 x1209 x1399 x569 x880 x56 x165)) x56))
(assert (x577 x1021))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x577 x1128))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 x1390 x411 x136 x1292 x384)))
(assert (x577 x22))
(assert (x1309 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (=> (>= 10000 x620) (= 0 (x857 x620))))
(assert (= x992 (x875 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970))))
(assert (x577 x637))
(assert (= x243 (x103 (x552 x260 x243 x667))))
(assert (x577 x90))
(assert (= (x875 (x790 x1331 x640 x736 x1085 x1236 x498 x299)) x299))
(assert (= x1023 (x6 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023))))
(assert (x1309 18446744073709551613))
(assert (x577 x1002))
(assert (= x1348 (x700 (x536 x335 x1403 x832 x14 x1348))))
(assert (=> (<= x339 10000) (= (x857 x339) 0)))
(assert (not (x1309 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (x577 x767))
(assert (x577 x370))
(assert (=> (>= 10000 x385) (= (x857 x385) 0)))
(assert (=> (>= 10000 x1105) (= 0 (x857 x1105))))
(assert (x577 x749))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x790 x1331 x640 x736 x1085 x1236 x498 x299)))
(assert (= x142 (x290 (x790 x836 x751 x997 x792 x1161 x142 x520))))
(assert (x577 x1344))
(assert (not (x1309 (x585 x388 x631))))
(assert (x1309 18446744073709551455))
(assert (= x968 (=> (and (= x1179 (x901 (- x662 x24))) (= x525 (x450 (+ x757 32))) (= x1051 (x450 (+ x29 160))) (<= x29 18446744073709551615) (= (x598 x757) x285) (or (<= x24 2065879269284) (>= x24 57896044618658097711785492504343953926634992332820282019728792003956564820645)) (> x1051 x29) (or (>= 18446744073709551455 x29) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x29)) (>= 18446744073709551615 x29) (= (x598 x525) x1307) (= (x450 (+ 32 x1020)) x496) (= (x450 (+ x29 32)) x743) (= (x598 x1020) x341) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x29) (<= x29 18446744073709551455)) (>= 5 x21) (= x252 (x450 (+ 32 x1190))) (<= x481 1461501637330902918203684832716283019655932542975) (not (= x29 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 1461501637330902918203684832716283019655932542975 x285) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x29) (not (< x1051 x29)) (= x262 (x450 (+ 32 x252))) (>= x1179 160) (= x1020 (x450 (+ 32 x525))) (= (not (< 1 x1180)) x342) (<= x29 18446744073709551614) (>= 18446744073709551614 x29) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1179) (= (x598 x496) x481) (= x21 (x598 x24)) (= x757 (x450 (+ 32 x24))) (= (x450 (+ x743 32)) x1190)) (and (=> (= x1051 x1207) x333) x342))))
(assert (x577 x517))
(assert (=> (<= x12 10000) (= (x857 x12) 0)))
(assert (=> (<= x1470 10000) (= 0 (x857 x1470))))
(assert (x577 x718))
(assert (x577 x589))
(assert (x577 x604))
(assert (x577 x557))
(assert (x577 x1048))
(assert (= (x857 (x1317 x1331 x96 x1056 x546)) (x1317 x1331 x96 x1056 x546)))
(assert (=> (<= x402 10000) (= (x857 x402) 0)))
(assert (=> (>= 10000 x384) (= 0 (x857 x384))))
(assert (= (x311 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) x1315))
(assert (= x648 (x103 (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314))))
(assert (x577 x505))
(assert (x577 x1073))
(assert (x577 x138))
(assert (=> (<= x530 10000) (= (x857 x530) 0)))
(assert (=> (<= x96 10000) (= (x857 x96) 0)))
(assert (x577 x537))
(assert (= x803 (x635 (x536 x1331 x489 x1129 x803 x67))))
(assert (x577 x754))
(assert (x577 x1370))
(assert (= (and x461 x266) x337))
(assert (x577 x401))
(assert (x577 x938))
(assert (x577 x329))
(assert (x577 x501))
(assert (= (x875 (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023)) x392))
(assert (=> (>= 10000 x97) (= 0 (x857 x97))))
(assert (x577 x1270))
(assert (=> (<= x163 10000) (= (x857 x163) 0)))
(assert (x577 x550))
(assert (x577 x398))
(assert (x577 x203))
(assert (=> (<= x1214 10000) (= 0 (x857 x1214))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1317 x260 x478 x168 x1105)))
(assert (x577 x315))
(assert (x577 x1221))
(assert (x1309 1461501637330902918203684832716283019655932542975))
(assert (x577 x836))
(assert (=> (>= 10000 x863) (= 0 (x857 x863))))
(assert (= x385 (x635 (x1317 x388 x1019 x514 x385))))
(assert (x1309 18446744073709551615))
(assert (x1309 134217728))
(assert (x577 x868))
(assert (= x1271 (=> (and (= x1418 (* 32 x515)) (<= x1452 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x515 x969) (= (x450 (+ x965 x305)) x513) (>= x539 1) (= x118 (x450 (+ x1418 x1344))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1452) (= x1480 (x901 (- x1268 32))) (= x1268 (x901 (- x539 x1452))) (= x504 (x450 (+ 32 x1452))) (= (x359 x1452) x388) (<= 1 x513) (= x1445 x118) (= x539 x513) (< x1452 x539) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1452) (= (* 32 x515) x965) (= x249 (<= x388 224)) (<= x515 4)) (and (=> (and (= x669 (x450 (+ x504 64))) (= x477 (x359 x1131)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x539) (<= 1 x539)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x539) (<= x539 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= (x359 x504) x339) (= (x359 x504) x972) (= x1423 (x450 (+ x504 96))) (= x239 (x450 (+ x504 160))) (= x368 (x359 x1436)) (= x600 (x359 x820)) (= x1434 (x359 x1032)) (= x369 (x901 (- x1146 32))) (= (x359 x504) x1118) (= (<= x335 224) x524) (= (x450 (+ 128 x504)) x268) (= x1221 (x450 (+ 96 x695))) (= x1285 (x536 x388 x1140 x647 x600 x1470)) (= (x359 x504) x1019) (= (x1198 x539) x335) (= x1144 (x450 (+ 32 x504))) (= x50 (x450 (+ 32 x930))) (= x382 (x359 x268)) (= (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434) x161) (= (ite (= x388 0) x91 (ite (<= x388 32) x137 (ite (>= 64 x388) x1400 (ite (<= x388 96) x1238 (ite (>= 128 x388) x1285 (ite (>= 160 x388) x412 (ite (>= 192 x388) x721 (ite (>= 224 x388) x161 x1272)))))))) x739) (= (x846 0) x91) (= (x450 (+ 192 x504)) x1032) (= (x1317 x388 x1019 x514 x385) x1238) (= (x450 (+ x504 32)) x1106) (= (x450 (+ x504 64)) x689) (= x586 (x359 x1423)) (= x771 (x450 (+ 32 x504))) (= (x450 (+ 32 x539)) x1420) (= (x359 x921) x325) (> x1221 x539) (= (x359 x504) x1368) (= (x450 (+ x504 32)) x187) (= x137 (x585 x388 x631)) (= (x359 x771) x647) (= (x359 x788) x120) (= (x359 x239) x270) (= (x359 x458) x1059) (= (x450 (+ 128 x504)) x1436) (= (x359 x187) x514) (= x385 (x359 x701)) (= x919 (x359 x1144)) (= x435 (x450 (+ x504 96))) (= (x450 (+ 32 x504)) x458) (= x930 (x450 (+ x695 32))) (= x630 (x450 (+ 64 x504))) (= x336 (x359 x132)) (= x631 (x359 x504)) (= x412 (x197 x388 x1118 x325 x818 x477 x382)) (= (x450 (+ x504 160)) x132) (= x788 (x450 (+ 128 x504))) (= (x450 (+ 64 x504)) x820) (= x1302 (x359 x435)) (= x1131 (x450 (+ x504 96))) (= x818 (x359 x630)) (= (x450 (+ 96 x504)) x381) (= (x359 x504) x1140) (= (x359 x689) x1475) (= (x552 x388 x972 x584) x1400) (= x721 (x790 x388 x339 x919 x713 x1302 x120 x336)) (= x695 (x450 (+ 32 x539))) (= x713 (x359 x669)) (= (x359 x1106) x584) (= x701 (x450 (+ x504 64))) (= x921 (x450 (+ x504 32))) (= x1146 (x901 (- x1221 x539))) (= x1470 (x359 x381))) (and x524 (=> (and (or (and x1249 (and (= 1 x1088) (<= x1464 4294967295) (>= x1464 32))) (and (= x961 x1088) (not x1249))) (and (= x548 (x1198 x1420)) (= x1204 (x1198 x261)) (= x1102 (x1198 x597)) (= x1154 (x1198 x1279)) (= (x1198 x1477) x1044) (= (x1198 x1420) x1055) (= x200 (x450 (+ 128 x1420))) (= x444 (x552 x335 x749 x1257)) (= x826 (x1198 x1251)) (= (x1198 x480) x1009) (>= x1464 32) (= (x1198 x18) x422) (= (x1198 x941) x1015) (= x1060 (x1198 x789)) (= x331 (x197 x335 x548 x210 x420 x1154 x938)) (= x1279 (x450 (+ 96 x1420))) (= (x450 (+ x1420 96)) x395) (= (x1198 x1395) x420) (= (x450 (+ 96 x1420)) x855) (= (x450 (+ x1420 32)) x1477) (= x203 (x1198 x1420)) (= (x1198 x912) x1074) (= (x846 0) x156) (= (x450 (+ x1420 128)) x274) (= (x1317 x335 x354 x1015 x1381) x34) (= x597 (x450 (+ x1420 128))) (= (x1198 x1229) x14) (= x912 (x450 (+ 64 x1420))) (= (x1198 x917) x1287) (= (x536 x335 x1403 x832 x14 x1348) x1084) (= x1395 (x450 (+ x1420 64))) (= x917 (x450 (+ x1420 160))) (= x1314 (x1198 x1325)) (= (x1198 x274) x1058) (= (x450 (+ x1221 4)) x256) (= x887 (x450 (+ 32 x1420))) (= (x610 x335 x648 x1044 x1074 x97 x1102 x1287 x1314) x1203) (= (x1198 x1420) x1403) (= x1381 (x1198 x573)) (= x573 (x450 (+ x1420 64))) (= (x585 x335 x1055) x676) (= (x1198 x1420) x648) (<= x1464 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1198 x82) x127) (= x1249 (> x961 0)) (= x1261 (x1034 1461501637330902918203684832716283019655932542975 x1060)) (= (x1198 x887) x210) (= (x450 (+ x1420 32)) x941) (= x749 (x1198 x1420)) (= x1122 x801) (= x1257 (x1198 x424)) (= x663 (x450 (+ x1420 32))) (= (x1198 x663) x832) (= (x450 (+ 64 x1420)) x1229) (= (x450 (+ 160 x1420)) x1251) (= x424 (x450 (+ 32 x1420))) (= (x450 (+ 64 x1420)) x261) (= (x1198 x395) x97) (= (x1198 x1420) x354) (= (x450 (+ 96 x1420)) x82) (= (x450 (+ x1420 32)) x18) (= x1325 (x450 (+ 192 x1420))) (= x1348 (x1198 x855)) (= x353 (x790 x335 x203 x422 x1204 x127 x1058 x826)) (= (x1198 160) x789) (= x801 (ite (= 0 x335) x156 (ite (<= x335 32) x676 (ite (>= 64 x335) x444 (ite (>= 96 x335) x34 (ite (>= 128 x335) x1084 (ite (>= 160 x335) x331 (ite (>= 192 x335) x353 (ite (<= x335 224) x1203 x225))))))))) (= x938 (x1198 x200)))) x1321))) x249))))
(assert (=> (>= 10000 x1331) (= 0 (x857 x1331))))
(assert (x577 x1363))
(assert (x577 x830))
(assert (x577 x741))
(assert (< (x610 x1115 x52 x157 x823 x1188 x413 x860 x345) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x577 x734))
(assert (x577 x973))
(assert (x1309 4294967295))
(assert (x577 x396))
(assert (x577 x1049))
(assert (x577 x1055))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (> (x552 x836 x31 x279) 10000))
(assert (x1309 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= (x857 (x1317 x1315 x323 x1127 x1297)) (x1317 x1315 x323 x1127 x1297)))
(assert (x577 x382))
(assert (x577 x36))
(assert (x577 x978))
(assert (=> (<= x388 10000) (= (x857 x388) 0)))
(assert (x577 x832))
(assert (x577 x1291))
(assert (=> (<= x1389 10000) (= 0 (x857 x1389))))
(assert (x577 x1269))
(assert (x577 x1072))
(assert (= x152 (and (not x1158) x17)))
(assert (= (or x1 x160) x1110))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x790 x335 x203 x422 x1204 x127 x1058 x826)))
(assert (not (x1309 (x585 x1115 x1214))))
(assert (x577 x394))
(assert (= (x585 x1315 x800) (x857 (x585 x1315 x800))))
(assert (x577 x458))
(assert (x577 x1279))
(assert (x577 x1445))
(assert (= (x857 (x1317 x388 x1019 x514 x385)) (x1317 x388 x1019 x514 x385)))
(assert (= (x103 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863)) x329))
(assert (= x631 (x103 (x585 x388 x631))))
(assert (x577 x606))
(assert (x577 x1012))
(assert (= (x857 (x790 x836 x751 x997 x792 x1161 x142 x520)) (x790 x836 x751 x997 x792 x1161 x142 x520)))
(assert (x577 x142))
(assert (= (x290 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002)) x1235))
(assert (x577 x1057))
(assert (= (or x65 x760) x1050))
(assert (x577 x805))
(assert (=> (>= 10000 x1292) (= (x857 x1292) 0)))
(assert (= (x857 (x585 x1115 x1214)) (x585 x1115 x1214)))
(assert (x577 x1069))
(assert (= (x311 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)) x1115))
(assert (x577 x1422))
(assert (x577 x1189))
(assert (x577 x864))
(assert (= x1115 (x311 (x197 x1115 x75 x1098 x430 x1082 x902))))
(assert (=> (<= x1481 10000) (= (x857 x1481) 0)))
(assert (=> (>= 10000 x1124) (= 0 (x857 x1124))))
(assert (> (x1317 x260 x478 x168 x1105) 10000))
(assert (x577 x119))
(assert (x577 x1480))
(assert (x577 x553))
(assert (x577 x1490))
(assert (= (x311 (x1317 x260 x478 x168 x1105)) x260))
(assert (x577 x1455))
(assert (=> (>= 10000 x145) (= (x857 x145) 0)))
(assert (not (x1309 (x585 x836 x1366))))
(assert (= (x857 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (x577 x1155))
(assert (> (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41) 10000))
(assert (x577 x338))
(assert (= x640 (x103 (x790 x1331 x640 x736 x1085 x1236 x498 x299))))
(assert (x577 x1318))
(assert (x577 x881))
(assert (x577 x1297))
(assert (x577 x658))
(assert (x577 x703))
(assert (= (x635 (x790 x1331 x640 x736 x1085 x1236 x498 x299)) x1085))
(assert (= x1132 (x700 (x790 x1390 x1417 x457 x214 x1132 x1235 x1002))))
(assert (x577 x213))
(assert (=> (<= x560 10000) (= (x857 x560) 0)))
(assert (= (x875 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41)) x1138))
(assert (x577 x614))
(assert (= (x635 (x790 x836 x751 x997 x792 x1161 x142 x520)) x792))
(assert (= (x311 (x197 x836 x1184 x914 x1298 x80 x1174)) x836))
(assert (x577 x929))
(assert (not (x1309 (x585 x1315 x800))))
(assert (x577 x97))
(assert (x577 x74))
(assert (x577 x733))
(assert (not (x1309 (x552 x1315 x530 x698))))
(assert (= (x875 (x790 x260 x145 x1038 x995 x78 x1070 x1014)) x1014))
(assert (x577 x1228))
(assert (= x172 (or x53 x152)))
(assert (= x1381 (x635 (x1317 x335 x354 x1015 x1381))))
(assert (= (and x850 x1245) x987))
(assert (x577 x1395))
(assert (> (x552 x260 x243 x667) 10000))
(assert (x577 x1432))
(assert (= 0 (x857 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= x931 (x755 (x610 x1315 x682 x931 x1195 x770 x664 x1138 x41))))
(assert (x577 x826))
(assert (< (x585 x335 x1055) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x290 (x610 x1390 x272 x310 x619 x909 x1490 x992 x970)) x1490))
(assert (= x764 (x290 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389))))
(assert (=> (<= x1209 10000) (= (x857 x1209) 0)))
(assert (x577 x708))
(assert (x51 x1333))
(assert (x577 x535))
(assert (x577 x1341))
(assert (x577 x1498))
(assert (= (x103 (x1317 x335 x354 x1015 x1381)) x354))
(assert (= (x103 (x536 x1390 x411 x136 x1292 x384)) x411))
(assert (x577 x336))
(assert (not (x1309 (x585 x1331 x212))))
(assert (x577 x593))
(assert (x577 x1039))
(assert (=> (>= 10000 x1248) (= (x857 x1248) 0)))
(assert (=> (<= x911 10000) (= (x857 x911) 0)))
(assert (x577 x294))
(assert (not (x1309 (x790 x836 x751 x997 x792 x1161 x142 x520))))
(assert (= x92 (and x277 (not x933))))
(assert (x577 x779))
(assert (x577 x298))
(assert (x577 x896))
(assert (= (x103 (x585 x1331 x212)) x212))
(assert (x577 x1289))
(assert (=> (>= 10000 x214) (= 0 (x857 x214))))
(assert (= x647 (x755 (x536 x388 x1140 x647 x600 x1470))))
(assert (=> (<= x712 10000) (= 0 (x857 x712))))
(assert (x577 x902))
(assert (=> (<= x336 10000) (= (x857 x336) 0)))
(assert (= (x311 (x1317 x1331 x96 x1056 x546)) x1331))
(assert (not (x1309 (x1317 x388 x1019 x514 x385))))
(assert (x577 x1251))
(assert (= x270 (x875 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434))))
(assert (x1309 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (= (x755 (x610 x1331 x620 x192 x978 x83 x764 x681 x1389)) x192))
(assert (x577 x726))
(assert (x577 x738))
(assert (x577 x1408))
(assert (= (and x522 (not x675)) x160))
(assert (x577 x748))
(assert (x577 x376))
(assert (= (x755 (x552 x260 x243 x667)) x667))
(assert (=> (>= 10000 x698) (= (x857 x698) 0)))
(assert (x577 x946))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x577 x405))
(assert (> (x197 x836 x1184 x914 x1298 x80 x1174) 10000))
(assert (= x335 (x311 (x536 x335 x1403 x832 x14 x1348))))
(assert (= x1390 (x311 (x552 x1390 x1380 x140))))
(assert (x577 x1023))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x25) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1301) x827) (= (< 0 x920) x1245) (<= x891 18446744073709551614) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x891) (>= 18446744073709551614 x891)) (>= x396 1) (not (> x396 x328)) (not (< x396 x891)) (<= x729 18446744073709551615) (or (>= 18446746139588821027 x417) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x417)) (= x729 (x598 x571)) (= x1049 (+ x728 x1211)) (= (+ 32 x328) x398) (= (x598 36) x1037) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1128) x611) (or (and (<= x1296 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1187 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1187) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1296)) (< x1187 x1296))) (<= x396 18446744073709551614) (= x731 (+ 224 x328)) (<= x891 18446744073709551613) (= x848 (+ x731 32)) (= x130 (x598 x939)) (or (>= 18446746139588821027 x579) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x579)) (< x891 x396) (= x265 (x598 356)) (= (x598 x975) x25) (>= 18446744073709551615 x1211) (<= x827 18446744073709551614) (= x939 (x450 (+ x374 32))) (<= x328 18446744073709551615) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x109) (>= 2065879269376 x109)) (>= 18446744073709551614 x891) (= (x450 (+ x1078 32)) x571) (= x36 (x598 x601)) (>= 18446744073709551613 x891) (= (+ 32 x852 x731) x1262) (or (and (= (<= x1296 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x740 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1296 x740)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1296) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x740))) (= (x598 x579) x1211) (= x1176 (x450 (+ x112 x998))) (= x975 (x450 (+ x939 32))) (not (< x1296 x741)) (= x998 (x450 (+ 32 x891))) (= x601 (x450 (+ 32 x110))) (= (+ 31 x1211) x1024) (= (x450 (+ x112 x85)) x741) (<= x891 18446744073709551614) (not (or (and (> x1090 x349) (= (<= x349 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x349 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1090)))) (= (x450 (+ 31 x579)) x1187) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1024) x1341) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x891) (<= x891 18446744073709551614)) (or (and (< x109 x706) (= (<= x109 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706))) (and (<= x706 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x109))) (= (+ x112 31) x1128) (= (x901 (- x662 x946)) x349) (= x693 (+ 63 x611)) (> x328 x396) (= x8 (+ 32 x398)) (= (x598 x417) x112) (<= x891 18446744073709551613) (= (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x693) x734) (= x109 (x598 132)) (= x85 (x450 (+ 32 x417))) (<= 2 x328) (= x396 (x450 (+ x891 x734))) (= x86 (x450 (+ x579 32))) (= x740 (x450 (+ x417 31))) (= x1424 (x450 (+ x109 36))) (>= 18446744073709551615 x920) (= x852 (* 32 x920)) (= (+ x1341 63) x1301) (< x731 x1262) (> x731 x328) (= x544 (x450 (+ x86 x1211))) (= (+ x396 32) x728) (= (x450 (+ x1424 32)) x1090) (= x417 (x450 (+ x729 x856))) (= (x450 (+ x36 x110)) x579) (= (x598 x1424) x920) (or (<= x891 18446744073709551614) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x891)) (= x946 (* 128 x920)) (= (+ x827 x396) x328) (<= x112 18446744073709551615) (not (< x1296 x544)) (>= 18446744073709551615 x36)) (and (=> x1245 x1312) (=> (and (not x1245) (= x1262 x885)) x835))) x843))
(assert (x577 x975))
(assert (x577 x345))
(assert (= (x857 18446744073709551167) 0))
(assert (x577 x632))
(assert (= x1109 (=> (and (= x993 (x450 (+ 160 x779))) (= (x450 (+ x779 32)) x991) (= (x450 (+ 32 x1137)) x1046) (= (x450 (+ 32 x772)) x654) (= x1425 (x598 x718)) (not (= x779 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x113) (<= x113 2065879269284)) (<= x779 18446744073709551614) (<= x779 18446744073709551614) (= x1365 (x598 x113)) (= x658 (x598 x1137)) (= (x450 (+ x113 32)) x1028) (= (x598 x1046) x209) (<= x779 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1137 (x450 (+ 32 x718))) (>= 18446744073709551615 x779) (<= 160 x1120) (<= x1365 5) (<= x1120 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (>= 18446744073709551455 x779) (>= x779 115792089237316195423570985008687907853269984665640564039457584007913129639777)) (not (> x779 x993)) (= x1120 (x901 (- x662 x113))) (= (x450 (+ 32 x991)) x772) (>= 1461501637330902918203684832716283019655932542975 x633) (= x1369 (not (> x1197 1))) (= x246 (x450 (+ x654 32))) (= (x598 x1028) x633) (or (>= x779 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x779 18446744073709551455)) (= x718 (x450 (+ x1028 32))) (<= x779 18446744073709551615) (<= x209 1461501637330902918203684832716283019655932542975) (> x993 x779)) (and x1369 (=> (= x993 x1008) x697)))))
(assert (not (x1309 (x536 x1331 x489 x1129 x803 x67))))
(assert (x577 x1435))
(assert (x577 x1187))
(assert (x577 x1031))
(assert (= (x1317 x836 x665 x833 x867) (x857 (x1317 x836 x665 x833 x867))))
(assert (x577 x556))
(assert (= 0 (x857 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x577 x647))
(assert (x577 x923))
(assert (x577 x1130))
(assert (= (x857 (x197 x836 x1184 x914 x1298 x80 x1174)) (x197 x836 x1184 x914 x1298 x80 x1174)))
(assert (x577 x1225))
(assert (x577 x1006))
(assert (x577 x485))
(assert (= (x857 (x585 x836 x1366)) (x585 x836 x1366)))
(assert (=> (<= x792 10000) (= 0 (x857 x792))))
(assert (x577 x480))
(assert (x577 x1353))
(assert (x577 x285))
(assert (x577 x251))
(assert (x577 x1214))
(assert (x577 x211))
(assert (x577 x67))
(assert (x577 x1143))
(assert (x577 x1347))
(assert (x577 x421))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x846 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x836 x31 x279)))
(assert (x577 x780))
(assert (x577 x1026))
(assert (x577 x1424))
(assert (x577 x56))
(assert (x577 x672))
(assert (=> (>= 10000 x56) (= 0 (x857 x56))))
(assert (x577 x11))
(assert (x577 x986))
(assert (x577 x1138))
(assert (x577 x1104))
(assert (=> (>= 10000 x1364) (= (x857 x1364) 0)))
(assert (x577 x281))
(assert (= (x103 (x536 x335 x1403 x832 x14 x1348)) x1403))
(assert (x577 x120))
(assert (x577 x365))
(assert (x577 x1235))
(assert (x577 x208))
(assert (x577 x756))
(assert (=> (<= x1366 10000) (= (x857 x1366) 0)))
(assert (> (x552 64 x491 1) 10000))
(assert (= x1257 (x755 (x552 x335 x749 x1257))))
(assert (x1309 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= (x635 (x1317 x1115 x302 x688 x324)) x324))
(assert (= (=> (and (= x26 (x450 (+ 32 x856))) (<= x1246 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (< x985 x1237) x1231) (= (x598 x110) x1401) (= (x450 (+ x612 32)) x374) (= x315 (* 32 x1166)) (<= x1166 18446744073709551615) (= x303 (x598 228)) (= (x598 x948) x1246) (<= x1401 18446744073709551615) (= (x598 x374) x677) (= (+ 448 x448) x69) (= x448 (x1034 115792089237316195423570985008687907853269984665640564039457584007913129639904 x425)) (= x948 (x450 (+ 36 x303))) (= (x598 x612) x154) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x303) (>= 2065879269376 x303)) (= x110 (x450 (+ x948 32))) (or (>= 18446746139588821027 x856) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x856)) (>= 18446744073709551615 x677) (= x144 160) (= x568 (x901 (- x1296 x856))) (>= x448 1) (or (and (> x303 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x706 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x706 x303) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x303) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706)))) (= (x598 x618) x1166) (= (x598 x26) x980) (or (<= x618 18446746139588821027) (>= x618 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (= x334 (x450 (+ x618 31))) (not (< x1296 x1237)) (= x1077 (x598 x1078)) (= x534 (x598 x856)) (>= 18446744073709551615 x1246) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x314) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x110)) (and (< x314 x110) (= (<= x110 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x314 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x450 (+ x110 x1401)) x612) (<= x1077 18446744073709551615) (= x314 (x901 (- x662 x1246))) (= (x1263 128) x1062) (<= 64 x1246) (= x618 (x450 (+ x856 x1077))) (= x706 (- x662 67)) (>= 18446744073709551167 x448) (or (>= x1296 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x1296 18446746139588821059)) (>= 2 x534) (>= x428 128) (= (+ 63 x315) x425) (= x428 (x901 (- x1296 x612))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x334) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1296)) (and (= (<= x334 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1296 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1296 x334))) (= (x450 (+ x110 x1246)) x1296) (= x856 (x450 (+ x612 x677))) (<= x428 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x450 (+ x618 32)) x985) (>= x155 1) (= 1 x1062) (= x1078 (x450 (+ x26 32))) (= x1237 (x450 (+ x985 x1371))) (>= x568 128) (or (>= x612 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x612)) (= (* 32 x1166) x1371) (<= x154 1461501637330902918203684832716283019655932542975) (<= x568 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (=> x1231 x936) (=> (and (= x69 x891) (not x1231)) x843))) x332))
(assert (=> (>= 10000 x861) (= 0 (x857 x861))))
(assert (=> (>= 10000 x1302) (= 0 (x857 x1302))))
(assert (x577 x1262))
(assert (=> (<= x648 10000) (= 0 (x857 x648))))
(assert (< 10000 (x536 x1390 x411 x136 x1292 x384)))
(assert (x577 x678))
(assert (= (x857 (x197 x1390 x786 x321 x627 x1277 x560)) (x197 x1390 x786 x321 x627 x1277 x560)))
(assert (=> (>= 10000 x1074) (= 0 (x857 x1074))))
(assert (x577 x1450))
(assert (= (x857 (x585 x388 x631)) (x585 x388 x631)))
(assert (= x671 (x103 (x536 x1115 x671 x666 x226 x878))))
(assert (x577 x1087))
(assert (x577 x1180))
(assert (x577 x31))
(assert (x577 x1278))
(assert (x577 x10))
(assert (x577 x1082))
(assert (= (x311 (x197 x1331 x841 x151 x1275 x54 x1134)) x1331))
(assert (=> (>= 10000 x1056) (= 0 (x857 x1056))))
(assert (= (x857 (x536 x388 x1140 x647 x600 x1470)) (x536 x388 x1140 x647 x600 x1470)))
(assert (x577 x1018))
(assert (x577 x54))
(assert (< 10000 (x790 x335 x203 x422 x1204 x127 x1058 x826)))
(assert (x577 x1054))
(assert (= x584 (x755 (x552 x388 x972 x584))))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (= (x1317 x335 x354 x1015 x1381) (x857 (x1317 x335 x354 x1015 x1381))))
(assert (x577 x326))
(assert (x577 x141))
(assert (= (x755 (x552 x1115 x1459 x1053)) x1053))
(assert (x577 x1274))
(assert (x577 x677))
(assert (x577 x1016))
(assert (x577 x305))
(assert (= (x875 (x790 x836 x751 x997 x792 x1161 x142 x520)) x520))
(assert (= (x103 (x536 x836 x1248 x1212 x911 x501)) x1248))
(assert (= x1336 (and x1126 x1231)))
(assert (x577 x362))
(assert (x577 x347))
(assert (x577 x665))
(assert (= x876 (or (and (not x1253) x1063) x1079)))
(assert (x577 x528))
(assert (x577 x256))
(assert (x577 x641))
(assert (x577 x732))
(assert (< 10000 (x1317 66 x441 x12 x312)))
(assert (= (and x1489 x1392) x307))
(assert (= x325 (x755 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1295) (= (x1034 1461501637330902918203684832716283019655932542975 x1274) x433) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1008)) (= (x450 (+ 32 x1008)) x1491) (<= x1008 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x598 68) x1299) (= x470 (x1034 1461501637330902918203684832716283019655932542975 x747)) (<= x1299 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1008) (= x967 (<= x836 224)) (< x1008 x1408) (= x358 (x954 x480)) (= (x954 160) x507) (= (+ x480 32) x485) (= (x954 224) x301) (= (x450 (+ 32 x1008)) x362) (= x1453 (x901 (- x583 32))) (= (x901 (- x1408 x1008)) x583) (not (> x211 x301)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1008)) (= x170 x470) (= (x1116 x1008) x836) (= (x1034 1461501637330902918203684832716283019655932542975 x358) x170) (= (x450 (+ 32 x362)) x660) (= x1274 (x954 x507)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1008) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1008)) (= x1295 (x598 100)) (= x1408 (x450 (+ 64 x362))) (= (+ x896 32) x480) (= x747 (x954 256))) (and (=> (and (and (= x1366 (x1116 x1491)) (= (x610 x836 x1455 x550 x1353 x1322 x1228 x392 x1023) x469) (= (x1116 x870) x1353) (<= 2 x829) (= x1083 (x585 x836 x1366)) (= x594 (x536 x836 x1248 x1212 x911 x501)) (= (x1116 x641) x997) (= (x1116 x1491) x1248) (= x1212 (x1116 x910)) (= (x450 (+ x1491 32)) x807) (= (x1116 x949) x607) (= x133 (x450 (+ x1491 96))) (= (x1116 x1256) x1023) (<= 1 x1408) (= x1428 (x450 (+ 64 x1491))) (= (x1116 x1428) x867) (= (x450 (+ x1491 64)) x37) (= x279 (x1116 x529)) (= x66 (x450 (+ 160 x1491))) (= x602 (x450 (+ x1447 64))) (= x833 (x1116 x437)) (= (x1116 x1186) x1161) (= x1022 (* 32 x607)) (= (x1116 x183) x1174) (= x1455 (x1116 x1491)) (= (x450 (+ 128 x1491)) x183) (= x1184 (x1116 x1491)) (= x1298 (x1116 x842)) (= (x552 x836 x31 x279) x348) (<= x1408 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x520 (x1116 x66)) (= (x197 x836 x1184 x914 x1298 x80 x1174) x765) (= x1300 (x790 x836 x751 x997 x792 x1161 x142 x520)) (= (x450 (+ x1491 160)) x1326) (= x142 (x1116 x1370)) (= x665 (x1116 x1491)) (>= 18446744073709551615 x607) (= (x1116 x1326) x392) (= (x450 (+ 96 x1491)) x1413) (= x1322 (x1116 x133)) (= (x450 (+ (mod (+ x1022 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1408)) x829) (= x529 (x450 (+ 32 x1491))) (= (x450 (+ 64 x1491)) x702) (= x751 (x1116 x1491)) (= x949 (x1116 x602)) (= x914 (x1116 x844)) (= (x1116 x37) x911) (= x870 (x450 (+ x1491 64))) (= x578 (x846 0)) (= (x450 (+ x1491 128)) x1370) (= x80 (x1116 x1438)) (= x842 (x450 (+ 64 x1491))) (= (x1116 x1491) x31) (= x837 (ite (= 0 x836) x578 (ite (>= 32 x836) x1083 (ite (<= x836 64) x348 (ite (<= x836 96) x1283 (ite (<= x836 128) x594 (ite (>= 160 x836) x765 (ite (>= 192 x836) x1300 (ite (>= 224 x836) x469 x1495))))))))) (= (x450 (+ x1491 96)) x1186) (= x1256 (x450 (+ x1491 192))) (= x641 (x450 (+ x1491 32))) (= x550 (x1116 x807)) (> x829 x1408) (= (x450 (+ 128 x1491)) x555) (= x437 (x450 (+ x1491 32))) (= (x1317 x836 x665 x833 x867) x1283) (= x792 (x1116 x702)) (= (x450 (+ 32 x1491)) x910) (= x1438 (x450 (+ x1491 96))) (= (x1116 192) x1447) (= x501 (x1116 x1413)) (= (= x607 0) x1158) (= (x450 (+ 32 x1491)) x844) (= (x1116 x555) x1228)) (or x1158 (and (not x1158) (and (= x379 (* x607 32)) (= (x450 (+ 32 x1408)) x1486))))) x236) x967)) x697))
(assert (x577 x219))
(assert (not (x1309 (x536 x388 x1140 x647 x600 x1470))))
(assert (= (x857 2065879269284) 0))
(assert (=> (>= 10000 x812) (= 0 (x857 x812))))
(assert (x577 x1220))
(assert (x696 x326))
(assert (x577 x1093))
(assert (x577 x29))
(assert (x577 x891))
(assert (= (x700 (x536 x1115 x671 x666 x226 x878)) x878))
(assert (x577 x1252))
(assert (= x1364 (x755 (x610 x260 x329 x1364 x1071 x94 x1178 x1291 x863))))
(assert (= x1230 (and x471 x563)))
(assert (= (x857 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x577 x453))
(assert (=> (<= x140 10000) (= (x857 x140) 0)))
(assert (x577 x464))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x577 x844))
(assert (x51 1461501637330902918203684832716283019655932542975))
(assert (x577 x434))
(assert (=> (>= 10000 x992) (= (x857 x992) 0)))
(assert (=> (>= 10000 x392) (= (x857 x392) 0)))
(assert (x577 x466))
(assert (x577 x752))
(assert (x577 x1127))
(assert (x577 x1032))
(assert (< 10000 (x610 x1115 x52 x157 x823 x1188 x413 x860 x345)))
(assert (x577 x49))
(assert (not (x1309 (x552 x260 x243 x667))))
(assert (= (x103 (x197 x1115 x75 x1098 x430 x1082 x902)) x75))
(assert (= (and x1158 x17) x53))
(assert (x577 x420))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x552 x1390 x1380 x140)))
(assert (x577 x1495))
(assert (x577 x1124))
(assert (=> (<= x345 10000) (= (x857 x345) 0)))
(assert (x577 x922))
(assert (x577 x411))
(assert (x577 x73))
(assert (x577 x855))
(assert (x577 x309))
(assert (x577 x608))
(assert (< (x1317 66 x441 x12 x312) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x197 x388 x1118 x325 x818 x477 x382) (x857 (x197 x388 x1118 x325 x818 x477 x382))))
(assert (= x1115 (x311 (x1317 x1115 x302 x688 x324))))
(assert (= x1298 (x635 (x197 x836 x1184 x914 x1298 x80 x1174))))
(assert (= x388 (x311 (x610 x388 x1368 x1059 x1475 x586 x368 x270 x1434))))
(check-sat)
(exit)
