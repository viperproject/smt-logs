(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x149 () Int)
(declare-fun x824 () Int)
(declare-fun x156 () Int)
(declare-fun x1355 () Int)
(declare-fun x684 () Bool)
(declare-fun x1597 () Int)
(declare-fun x1693 () Bool)
(declare-fun x897 () Int)
(declare-fun x778 () Int)
(declare-fun x525 () Int)
(declare-fun x1780 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x214 () Int)
(declare-fun x1730 () Int)
(declare-fun x1404 () Int)
(declare-fun x317 () Int)
(declare-fun x826 () Int)
(declare-fun x256 (Int) Int)
(declare-fun x1307 () Int)
(declare-fun x1106 () Int)
(declare-fun x1219 () Int)
(declare-fun x1043 () Int)
(declare-fun x245 () Int)
(declare-fun x1156 () Int)
(declare-fun x1713 () Bool)
(declare-fun x207 () Int)
(declare-fun x1720 () Bool)
(declare-fun x845 () Bool)
(declare-fun x1565 () Int)
(declare-fun x508 () Int)
(declare-fun x1181 () Int)
(declare-fun x391 () Int)
(declare-fun x1492 () Int)
(declare-fun x853 () Int)
(declare-fun x1380 () Bool)
(declare-fun x228 () Int)
(declare-fun x1417 () Int)
(declare-fun x1094 () Int)
(declare-fun x1096 () Int)
(declare-fun x97 () Int)
(declare-fun x860 () Bool)
(declare-fun x815 () Int)
(declare-fun x766 () Int)
(declare-fun x55 () Int)
(declare-fun x1544 () Int)
(declare-fun x400 () Int)
(declare-fun x321 () Int)
(declare-fun x1022 () Int)
(declare-fun x1714 () Int)
(declare-fun x712 () Bool)
(declare-fun x250 () Int)
(declare-fun x433 () Int)
(declare-fun x1451 () Int)
(declare-fun x1664 () Int)
(declare-fun x115 () Bool)
(declare-fun x19 () Int)
(declare-fun x822 () Int)
(declare-fun x531 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1437 () Int)
(declare-fun x1744 () Int)
(declare-fun x1609 () Int)
(declare-fun x5 () Int)
(declare-fun x1739 () Int)
(declare-fun x557 () Int)
(declare-fun x1580 () Bool)
(declare-fun x583 () Int)
(declare-fun x352 () Int)
(declare-fun x390 () Int)
(declare-fun x464 () Bool)
(declare-fun x133 () Int)
(declare-fun x1513 () Int)
(declare-fun x114 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1125 () Int)
(declare-fun x434 () Int)
(declare-fun x515 () Int)
(declare-fun x238 () Int)
(declare-fun x526 () Int)
(declare-fun x962 (Int) Int)
(declare-fun x1642 () Int)
(declare-fun x1081 () Int)
(declare-fun x1202 () Bool)
(declare-fun x487 () Int)
(declare-fun x1280 () Int)
(declare-fun x1132 () Int)
(declare-fun x1302 () Int)
(declare-fun x1270 () Bool)
(declare-fun x68 () Bool)
(declare-fun x329 () Int)
(declare-fun x1504 () Int)
(declare-fun x277 () Int)
(declare-fun x810 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x667 () Int)
(declare-fun x1241 () Int)
(declare-fun x1447 () Int)
(declare-fun x466 () Int)
(declare-fun x116 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1290 () Int)
(declare-fun x288 () Int)
(declare-fun x411 () Bool)
(declare-fun x1702 () Int)
(declare-fun x1103 () Int)
(declare-fun x985 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x1337 () Int)
(declare-fun x1279 () Bool)
(declare-fun x692 () Int)
(declare-fun x1710 () Int)
(declare-fun x1696 () Int)
(declare-fun x1188 () Int)
(declare-fun x788 () Int)
(declare-fun x562 () Bool)
(declare-fun x1651 () Int)
(declare-fun x1629 () Int)
(declare-fun x1441 () Int)
(declare-fun x1353 () Int)
(declare-fun x1436 () Int)
(declare-fun x460 () Int)
(declare-fun x1374 () Int)
(declare-fun x1655 () Int)
(declare-fun x1757 () Int)
(declare-fun x52 () Int)
(declare-fun x1748 () Int)
(declare-fun x883 () Int)
(declare-fun x1141 () Int)
(declare-fun x294 () Int)
(declare-fun x313 () Bool)
(declare-fun x702 () Int)
(declare-fun x647 () Int)
(declare-fun x1038 () Int)
(declare-fun x1032 () Int)
(declare-fun x1051 () Bool)
(declare-fun x725 () Int)
(declare-fun x751 () Int)
(declare-fun x1774 () Int)
(declare-fun x482 () Int)
(declare-fun x976 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1577 () Int)
(declare-fun x1352 () Int)
(declare-fun x833 () Bool)
(declare-fun x858 () Int)
(declare-fun x1481 (Int) Int)
(declare-fun x298 () Int)
(declare-fun x255 () Int)
(declare-fun x1728 () Int)
(declare-fun x429 () Int)
(declare-fun x1456 () Bool)
(declare-fun x1301 () Int)
(declare-fun x688 () Int)
(declare-fun x1701 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1765 () Int)
(declare-fun x1566 () Int)
(declare-fun x380 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x273 () Int)
(declare-fun x1666 () Int)
(declare-fun x1170 () Int)
(declare-fun x1755 () Int)
(declare-fun x625 () Int)
(declare-fun x382 () Int)
(declare-fun x923 () Int)
(declare-fun x134 () Int)
(declare-fun x218 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1431 () Int)
(declare-fun x31 () Int)
(declare-fun x630 (Int) Int)
(declare-fun x1488 () Int)
(declare-fun x1370 () Int)
(declare-fun x1129 () Int)
(declare-fun x598 () Bool)
(declare-fun x1671 () Int)
(declare-fun x271 () Int)
(declare-fun x1246 () Bool)
(declare-fun x61 () Bool)
(declare-fun x999 () Int)
(declare-fun x1768 () Int)
(declare-fun x489 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x715 () Int)
(declare-fun x585 () Int)
(declare-fun x901 () Int)
(declare-fun x1217 () Int)
(declare-fun x338 () Int)
(declare-fun x807 () Int)
(declare-fun x722 () Int)
(declare-fun x1773 () Int)
(declare-fun x895 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1006 () Int)
(declare-fun x800 () Int)
(declare-fun x1482 () Int)
(declare-fun x588 () Int)
(declare-fun x749 () Int)
(declare-fun x1760 () Bool)
(declare-fun x569 () Int)
(declare-fun x1652 () Int)
(declare-fun x978 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1191 () Int)
(declare-fun x552 () Int)
(declare-fun x587 () Bool)
(declare-fun x948 () Int)
(declare-fun x1466 () Int)
(declare-fun x220 () Int)
(declare-fun x828 () Int)
(declare-fun x286 () Bool)
(declare-fun x494 () Int)
(declare-fun x1099 () Int)
(declare-fun x172 () Int)
(declare-fun x1316 () Int)
(declare-fun x1336 () Int)
(declare-fun x915 () Bool)
(declare-fun x1657 () Int)
(declare-fun x335 () Bool)
(declare-fun x887 () Int)
(declare-fun x309 () Int)
(declare-fun x1409 () Int)
(declare-fun x154 () Int)
(declare-fun x1369 () Int)
(declare-fun x934 () Int)
(declare-fun x1232 () Int)
(declare-fun x430 () Int)
(declare-fun x1127 () Int)
(declare-fun x628 () Int)
(declare-fun x1122 () Int)
(declare-fun x714 () Int)
(declare-fun x790 (Int) Int)
(declare-fun x1220 () Int)
(declare-fun x1298 () Bool)
(declare-fun x1019 () Int)
(declare-fun x633 () Bool)
(declare-fun x300 () Int)
(declare-fun x1425 () Int)
(declare-fun x1563 (Int) Int)
(declare-fun x1297 () Int)
(declare-fun x738 () Bool)
(declare-fun x1596 () Int)
(declare-fun x159 () Int)
(declare-fun x831 () Int)
(declare-fun x1468 () Int)
(declare-fun x1185 () Int)
(declare-fun x765 () Int)
(declare-fun x894 () Int)
(declare-fun x458 () Int)
(declare-fun x695 () Int)
(declare-fun x1164 () Int)
(declare-fun x1746 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1388 () Int)
(declare-fun x1598 () Int)
(declare-fun x797 () Bool)
(declare-fun x657 () Int)
(declare-fun x262 () Int)
(declare-fun x1294 () Int)
(declare-fun x1284 () Int)
(declare-fun x787 () Int)
(declare-fun x928 () Int)
(declare-fun x1116 () Int)
(declare-fun x1162 () Int)
(declare-fun x756 () Bool)
(declare-fun x1461 () Int)
(declare-fun x169 () Int)
(declare-fun x344 () Int)
(declare-fun x279 () Bool)
(declare-fun x540 () Int)
(declare-fun x1677 () Int)
(declare-fun x405 () Int)
(declare-fun x366 () Int)
(declare-fun x770 () Int)
(declare-fun x671 () Int)
(declare-fun x117 () Int)
(declare-fun x1699 () Int)
(declare-fun x280 () Int)
(declare-fun x910 () Int)
(declare-fun x85 () Int)
(declare-fun x631 () Int)
(declare-fun x844 (Int) Int)
(declare-fun x735 () Int)
(declare-fun x293 () Bool)
(declare-fun x1384 () Int)
(declare-fun x752 () Int)
(declare-fun x1119 () Int)
(declare-fun x603 () Int)
(declare-fun x1121 () Int)
(declare-fun x174 () Int)
(declare-fun x938 () Bool)
(declare-fun x146 () Int)
(declare-fun x451 () Int)
(declare-fun x792 () Int)
(declare-fun x955 () Int)
(declare-fun x1066 () Int)
(declare-fun x34 () Int)
(declare-fun x1718 () Bool)
(declare-fun x372 () Int)
(declare-fun x199 () Int)
(declare-fun x876 () Bool)
(declare-fun x572 () Bool)
(declare-fun x106 () Bool)
(declare-fun x73 () Int)
(declare-fun x129 () Int)
(declare-fun x869 () Int)
(declare-fun x840 () Int)
(declare-fun x33 () Int)
(declare-fun x1211 () Int)
(declare-fun x1331 () Int)
(declare-fun x181 () Bool)
(declare-fun x442 () Int)
(declare-fun x743 () Int)
(declare-fun x1382 () Int)
(declare-fun x1675 () Int)
(declare-fun x386 () Int)
(declare-fun x322 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1138 () Int)
(declare-fun x596 () Bool)
(declare-fun x1524 (Int) Int)
(declare-fun x878 () Int)
(declare-fun x354 () Int)
(declare-fun x87 () Int)
(declare-fun x299 () Int)
(declare-fun x1463 () Bool)
(declare-fun x919 (Int) Int)
(declare-fun x130 () Bool)
(declare-fun x1595 () Int)
(declare-fun x716 () Int)
(declare-fun x640 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x1112 () Int)
(declare-fun x881 () Int)
(declare-fun x903 () Int)
(declare-fun x331 () Int)
(declare-fun x1589 () Int)
(declare-fun x423 () Int)
(declare-fun x1695 () Int)
(declare-fun x943 () Int)
(declare-fun x88 () Int)
(declare-fun x1751 () Int)
(declare-fun x1740 () Int)
(declare-fun x675 () Int)
(declare-fun x443 () Bool)
(declare-fun x595 () Int)
(declare-fun x105 () Int)
(declare-fun x830 () Int)
(declare-fun x992 () Int)
(declare-fun x1401 () Int)
(declare-fun x1469 () Int)
(declare-fun x378 () Int)
(declare-fun x472 () Int)
(declare-fun x48 () Int)
(declare-fun x561 () Int)
(declare-fun x1559 () Int)
(declare-fun x936 () Int)
(declare-fun x414 () Int)
(declare-fun x670 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x78 () Int)
(declare-fun x763 () Int)
(declare-fun x209 () Int)
(declare-fun x1477 () Int)
(declare-fun x996 () Int)
(declare-fun x1110 () Int)
(declare-fun x1667 () Int)
(declare-fun x1082 () Int)
(declare-fun x257 () Int)
(declare-fun x1054 () Int)
(declare-fun x468 () Int)
(declare-fun x973 () Int)
(declare-fun x612 () Bool)
(declare-fun x326 () Int)
(declare-fun x1338 () Int)
(declare-fun x1433 () Int)
(declare-fun x794 () Int)
(declare-fun x563 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x593 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1772 () Int)
(declare-fun x1018 () Int)
(declare-fun x952 () Int)
(declare-fun x760 () Int)
(declare-fun x516 () Int)
(declare-fun x343 () Int)
(declare-fun x1649 () Int)
(declare-fun x1499 () Int)
(declare-fun x459 () Int)
(declare-fun x1245 (Int) Int)
(declare-fun x937 () Int)
(declare-fun x1186 () Int)
(declare-fun x212 () Int)
(declare-fun x1233 () Int)
(declare-fun x1264 () Int)
(declare-fun x1770 () Int)
(declare-fun x1303 () Int)
(declare-fun x1741 () Int)
(declare-fun x723 () Int)
(declare-fun x1183 () Bool)
(declare-fun x523 () Int)
(declare-fun x182 () Int)
(declare-fun x1554 () Int)
(declare-fun x230 () Int)
(declare-fun x1514 () Int)
(declare-fun x1439 () Int)
(declare-fun x519 () Bool)
(declare-fun x532 () Int)
(declare-fun x701 () Int)
(declare-fun x431 () Int)
(declare-fun x733 () Int)
(declare-fun x1224 () Int)
(declare-fun x1287 () Bool)
(declare-fun x1719 () Int)
(declare-fun x852 () Int)
(declare-fun x1557 () Int)
(declare-fun x1512 () Int)
(declare-fun x764 () Int)
(declare-fun x1623 () Bool)
(declare-fun x143 () Int)
(declare-fun x1735 () Int)
(declare-fun x862 () Int)
(declare-fun x690 () Int)
(declare-fun x1429 () Int)
(declare-fun x653 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1087 () Int)
(declare-fun x200 () Int)
(declare-fun x980 () Int)
(declare-fun x888 () Bool)
(declare-fun x966 () Int)
(declare-fun x739 () Int)
(declare-fun x600 () Bool)
(declare-fun x101 () Int)
(declare-fun x457 () Bool)
(declare-fun x357 () Int)
(declare-fun x355 () Int)
(declare-fun x1383 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x1036 () Int)
(declare-fun x210 () Bool)
(declare-fun x1627 () Int)
(declare-fun x944 () Int)
(declare-fun x1626 () Int)
(declare-fun x1218 () Bool)
(declare-fun x746 () Int)
(declare-fun x348 () Int)
(declare-fun x1505 () Int)
(declare-fun x995 () Int)
(declare-fun x1130 () Int)
(declare-fun x1485 () Int)
(declare-fun x1501 () Bool)
(declare-fun x905 () Int)
(declare-fun x1074 (Int Int Int Int Int) Int)
(declare-fun x249 () Bool)
(declare-fun x994 () Int)
(declare-fun x276 () Int)
(declare-fun x742 () Int)
(declare-fun x796 (Int) Int)
(declare-fun x586 () Bool)
(declare-fun x556 () Int)
(declare-fun x1118 () Int)
(declare-fun x358 () Bool)
(declare-fun x188 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1639 () Bool)
(declare-fun x340 () Int)
(declare-fun x1357 () Int)
(declare-fun x875 () Int)
(declare-fun x1395 () Int)
(declare-fun x1533 () Int)
(declare-fun x711 () Bool)
(declare-fun x1114 () Int)
(declare-fun x899 () Int)
(declare-fun x1494 () Int)
(declare-fun x1314 () Int)
(declare-fun x1041 () Int)
(declare-fun x1088 () Int)
(declare-fun x27 () Int)
(declare-fun x1031 () Int)
(declare-fun x1575 () Int)
(declare-fun x316 () Bool)
(declare-fun x1460 () Int)
(declare-fun x993 () Int)
(declare-fun x1198 () Int)
(declare-fun x776 () Int)
(declare-fun x1020 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1571 () Int)
(declare-fun x605 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1622 () Int)
(declare-fun x1536 () Bool)
(declare-fun x455 () Bool)
(declare-fun x96 () Int)
(declare-fun x816 () Int)
(declare-fun x1009 () Int)
(declare-fun x1630 () Int)
(declare-fun x1487 () Int)
(declare-fun x225 () Bool)
(declare-fun x560 () Int)
(declare-fun x977 (Int) Int)
(declare-fun x987 () Int)
(declare-fun x1247 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1777 () Int)
(declare-fun x1271 () Int)
(declare-fun x196 () Int)
(declare-fun x1539 () Int)
(declare-fun x446 () Int)
(declare-fun x1396 () Int)
(declare-fun x1399 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x608 () Int)
(declare-fun x1363 () Int)
(declare-fun x291 () Int)
(declare-fun x547 () Int)
(declare-fun x650 () Bool)
(declare-fun x498 () Int)
(declare-fun x306 () Int)
(declare-fun x829 () Int)
(declare-fun x1176 () Int)
(declare-fun x1262 () Int)
(declare-fun x1432 () Int)
(declare-fun x243 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1419 () Int)
(declare-fun x642 () Int)
(declare-fun x837 () Int)
(declare-fun x908 () Int)
(declare-fun x1010 () Int)
(declare-fun x528 () Int)
(declare-fun x534 () Int)
(declare-fun x651 () Int)
(declare-fun x589 () Int)
(declare-fun x931 () Int)
(declare-fun x112 () Int)
(declare-fun x497 () Int)
(declare-fun x201 () Int)
(declare-fun x189 () Int)
(declare-fun x102 () Int)
(declare-fun x229 () Int)
(declare-fun x834 () Bool)
(declare-fun x512 () Int)
(declare-fun x890 () Int)
(declare-fun x1115 () Int)
(declare-fun x818 () Int)
(declare-fun x25 () Int)
(declare-fun x1207 () Bool)
(declare-fun x481 () Int)
(declare-fun x334 () Bool)
(declare-fun x1679 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x70 () Int)
(declare-fun x1707 () Int)
(declare-fun x1732 () Int)
(declare-fun x1203 () Int)
(declare-fun x819 (Int) Int)
(declare-fun x537 () Int)
(declare-fun x392 () Int)
(declare-fun x1458 () Int)
(declare-fun x698 () Bool)
(declare-fun x836 () Int)
(declare-fun x118 () Int)
(declare-fun x704 () Bool)
(declare-fun x84 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x1148 () Int)
(declare-fun x1060 () Int)
(declare-fun x1047 () Int)
(declare-fun x1306 () Int)
(declare-fun x147 () Int)
(declare-fun x1004 () Int)
(declare-fun x527 () Int)
(declare-fun x1350 () Int)
(declare-fun x775 () Int)
(declare-fun x71 () Int)
(declare-fun x375 () Int)
(declare-fun x350 () Int)
(declare-fun x59 () Int)
(declare-fun x477 () Int)
(declare-fun x1465 () Int)
(declare-fun x1428 () Int)
(declare-fun x880 () Int)
(declare-fun x435 () Bool)
(declare-fun x183 () Int)
(declare-fun x1173 () Int)
(declare-fun x871 () Int)
(declare-fun x864 () Int)
(declare-fun x902 () Int)
(declare-fun x471 () Int)
(declare-fun x1516 () Int)
(declare-fun x1653 () Int)
(declare-fun x1484 () Bool)
(declare-fun x138 () Int)
(declare-fun x1315 () Int)
(declare-fun x389 () Int)
(declare-fun x289 () Int)
(declare-fun x185 () Int)
(declare-fun x636 () Int)
(declare-fun x1412 () Int)
(declare-fun x258 () Int)
(declare-fun x1089 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1037 () Int)
(declare-fun x802 () Int)
(declare-fun x232 () Int)
(declare-fun x1345 () Int)
(declare-fun x1091 () Int)
(declare-fun x253 () Int)
(declare-fun x1228 () Int)
(declare-fun x986 () Int)
(declare-fun x1619 () Int)
(declare-fun x1729 () Int)
(declare-fun x644 () Int)
(declare-fun x1440 () Bool)
(declare-fun x216 () Int)
(declare-fun x462 () Int)
(declare-fun x921 () Int)
(declare-fun x838 () Bool)
(declare-fun x974 () Bool)
(declare-fun x649 () Int)
(declare-fun x1076 () Int)
(declare-fun x1100 () Int)
(declare-fun x1289 () Int)
(declare-fun x11 () Int)
(declare-fun x1013 () Int)
(declare-fun x734 () Int)
(declare-fun x1584 () Bool)
(declare-fun x342 () Int)
(declare-fun x1694 () Int)
(declare-fun x310 () Int)
(declare-fun x1444 () Bool)
(declare-fun x82 () Int)
(declare-fun x152 () Bool)
(declare-fun x652 () Int)
(declare-fun x1166 () Int)
(declare-fun x422 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x892 () Int)
(declare-fun x1387 () Int)
(declare-fun x1656 () Bool)
(declare-fun x1195 () Int)
(declare-fun x825 () Int)
(declare-fun x958 () Int)
(declare-fun x1601 () Int)
(declare-fun x1078 () Int)
(declare-fun x128 () Int)
(declare-fun x1274 () Bool)
(declare-fun x208 () Int)
(declare-fun x614 () Int)
(declare-fun x505 () Int)
(declare-fun x1578 () Int)
(declare-fun x470 () Int)
(declare-fun x1743 () Int)
(declare-fun x1749 () Int)
(declare-fun x356 () Int)
(declare-fun x660 () Int)
(declare-fun x730 () Int)
(declare-fun x1776 () Int)
(declare-fun x1101 () Int)
(declare-fun x1193 () Int)
(declare-fun x1470 () Int)
(declare-fun x1016 () Int)
(declare-fun x666 () Int)
(declare-fun x1108 () Int)
(declare-fun x1341 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1055 () Int)
(declare-fun x665 () Int)
(declare-fun x916 () Int)
(declare-fun x1573 () Int)
(declare-fun x1614 () Bool)
(declare-fun x567 () Int)
(declare-fun x565 () Int)
(declare-fun x773 () Int)
(declare-fun x1756 () Int)
(declare-fun x896 () Int)
(declare-fun x536 (Int Int Int) Int)
(declare-fun x1007 () Int)
(declare-fun x444 () Int)
(declare-fun x1171 () Int)
(declare-fun x1418 () Int)
(declare-fun x1685 () Int)
(declare-fun x983 () Int)
(declare-fun x167 () Int)
(declare-fun x315 () Int)
(declare-fun x1308 () Int)
(declare-fun x663 () Bool)
(declare-fun x236 () Int)
(declare-fun x417 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1697 () Int)
(declare-fun x1632 () Int)
(declare-fun x520 () Int)
(declare-fun x1221 () Int)
(declare-fun x1309 () Int)
(declare-fun x1180 () Int)
(declare-fun x968 () Int)
(declare-fun x1635 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1000 () Int)
(declare-fun x1397 () Int)
(declare-fun x484 (Int) Int)
(declare-fun x1098 () Int)
(declare-fun x110 () Int)
(declare-fun x217 () Int)
(declare-fun x1175 () Int)
(declare-fun x240 () Int)
(declare-fun x868 () Int)
(declare-fun x1658 () Int)
(declare-fun x1764 () Int)
(declare-fun x1763 () Int)
(declare-fun x513 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1373 () Int)
(declare-fun x1277 () Int)
(declare-fun x661 () Bool)
(declare-fun x693 () Int)
(declare-fun x679 () Int)
(declare-fun x226 () Int)
(declare-fun x918 () Int)
(declare-fun x522 () Int)
(declare-fun x1414 () Int)
(declare-fun x99 () Int)
(declare-fun x1496 () Int)
(declare-fun x1475 () Int)
(declare-fun x627 () Int)
(declare-fun x539 () Int)
(declare-fun x727 () Int)
(declare-fun x1117 () Int)
(declare-fun x638 () Int)
(declare-fun x282 () Int)
(declare-fun x312 () Bool)
(declare-fun x409 () Int)
(declare-fun x454 () Int)
(declare-fun x1570 () Int)
(declare-fun x1402 () Int)
(declare-fun x383 () Int)
(declare-fun x1158 () Bool)
(declare-fun x440 () Int)
(declare-fun x1071 () Int)
(declare-fun x1435 () Int)
(declare-fun x610 () Int)
(declare-fun x579 () Int)
(declare-fun x83 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x377 () Int)
(declare-fun x241 () Int)
(declare-fun x1267 () Bool)
(declare-fun x333 () Int)
(declare-fun x597 () Int)
(declare-fun x141 () Int)
(declare-fun x1028 () Int)
(declare-fun x21 () Bool)
(declare-fun x301 () Bool)
(declare-fun x29 () Bool)
(declare-fun x503 () Int)
(declare-fun x581 () Int)
(declare-fun x573 () Int)
(declare-fun x119 () Int)
(declare-fun x648 () Int)
(declare-fun x970 () Int)
(declare-fun x1107 () Int)
(declare-fun x239 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1165 () Bool)
(declare-fun x365 () Int)
(declare-fun x1709 () Int)
(declare-fun x213 () Int)
(declare-fun x706 () Int)
(declare-fun x1659 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1493 () Int)
(declare-fun x1682 () Int)
(declare-fun x1062 () Int)
(declare-fun x801 () Int)
(declare-fun x6 () Bool)
(declare-fun x1631 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1296 () Int)
(declare-fun x1688 () Int)
(declare-fun x1607 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1014 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1529 () Int)
(declare-fun x387 () Int)
(declare-fun x1711 () Bool)
(declare-fun x66 () Int)
(declare-fun x1364 () Int)
(declare-fun x865 () Int)
(declare-fun x736 () Int)
(declare-fun x1703 () Int)
(declare-fun x747 () Int)
(declare-fun x590 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1450 () Int)
(declare-fun x1044 () Int)
(declare-fun x1046 () Int)
(declare-fun x1471 () Int)
(declare-fun x264 () Int)
(declare-fun x682 (Int) Int)
(declare-fun x950 () Int)
(declare-fun x190 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1067 () Int)
(declare-fun x521 () Int)
(declare-fun x863 () Int)
(declare-fun x1157 () Bool)
(declare-fun x4 () Bool)
(declare-fun x674 () Int)
(declare-fun x799 () Int)
(declare-fun x1717 () Int)
(declare-fun x632 () Int)
(declare-fun x850 () Int)
(declare-fun x1681 () Int)
(declare-fun x861 () Int)
(declare-fun x769 () Int)
(declare-fun x782 () Int)
(declare-fun x741 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x1065 () Int)
(declare-fun x965 () Int)
(declare-fun x142 () Int)
(declare-fun x656 () Int)
(declare-fun x267 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1530 () Int)
(declare-fun x177 () Int)
(declare-fun x1502 () Int)
(declare-fun x62 () Int)
(declare-fun x103 () Int)
(declare-fun x1420 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1208 () Int)
(declare-fun x1661 () Int)
(declare-fun x168 () Int)
(declare-fun x261 () Bool)
(declare-fun x1285 () Int)
(declare-fun x278 (Int) Int)
(declare-fun x1543 () Int)
(declare-fun x793 () Int)
(declare-fun x1712 () Int)
(declare-fun x672 () Int)
(declare-fun x842 () Int)
(declare-fun x145 () Int)
(declare-fun x1080 () Int)
(declare-fun x1197 () Bool)
(declare-fun x151 () Int)
(declare-fun x215 () Int)
(declare-fun x678 () Int)
(declare-fun x195 () Int)
(declare-fun x486 () Int)
(declare-fun x662 () Int)
(declare-fun x1226 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x806 () Bool)
(declare-fun x467 () Bool)
(declare-fun x165 () Int)
(declare-fun x319 () Int)
(declare-fun x1691 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x77 () Int)
(declare-fun x1606 () Int)
(declare-fun x1361 () Int)
(declare-fun x1779 () Int)
(declare-fun x514 (Int Int Int Int Int Int) Int)
(declare-fun x548 () Bool)
(declare-fun x891 () Int)
(declare-fun x1700 () Int)
(declare-fun x616 () Int)
(declare-fun x1362 () Int)
(declare-fun x812 () Int)
(declare-fun x1343 () Int)
(declare-fun x1200 () Int)
(declare-fun x144 () Int)
(declare-fun x1206 () Int)
(declare-fun x998 () Bool)
(declare-fun x719 () Int)
(declare-fun x504 () Int)
(declare-fun x913 () Int)
(declare-fun x1605 (Int Int) Int)
(declare-fun x798 () Int)
(declare-fun x1075 () Int)
(declare-fun x1168 () Int)
(declare-fun x1736 (Int) Bool)
(declare-fun x1778 () Int)
(declare-fun x1567 () Int)
(declare-fun x252 () Int)
(declare-fun x30 () Int)
(declare-fun x162 () Int)
(declare-fun x221 () Int)
(declare-fun x991 () Int)
(declare-fun x884 () Bool)
(declare-fun x1152 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x137 () Int)
(declare-fun x1109 () Int)
(declare-fun x447 () Int)
(declare-fun x658 () Int)
(declare-fun x265 () Int)
(declare-fun x705 () Int)
(declare-fun x307 () Int)
(declare-fun x324 () Int)
(declare-fun x1242 () Int)
(declare-fun x1594 () Int)
(declare-fun x1467 () Bool)
(declare-fun x1366 () Int)
(declare-fun x967 () Int)
(declare-fun x496 () Int)
(declare-fun x1737 () Int)
(declare-fun x1272 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1344 () Int)
(declare-fun x1599 () Int)
(declare-fun x1706 () Int)
(declare-fun x997 () Int)
(declare-fun x686 () Int)
(declare-fun x1215 () Int)
(declare-fun x988 () Int)
(declare-fun x1072 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1330 () Int)
(declare-fun x917 () Int)
(declare-fun x1154 () Int)
(declare-fun x254 () Int)
(declare-fun x872 () Int)
(declare-fun x1326 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1235 () Int)
(declare-fun x132 () Bool)
(declare-fun x502 () Bool)
(declare-fun x339 () Int)
(declare-fun x659 () Int)
(declare-fun x1329 () Int)
(declare-fun x1252 () Int)
(declare-fun x285 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x758 () Int)
(declare-fun x1139 () Int)
(declare-fun x1260 () Int)
(declare-fun x198 () Int)
(declare-fun x1518 () Bool)
(declare-fun x963 () Int)
(declare-fun x1243 () Bool)
(declare-fun x874 () Int)
(declare-fun x135 () Int)
(declare-fun x1686 () Bool)
(declare-fun x12 () Int)
(declare-fun x308 () Int)
(declare-fun x46 () Int)
(declare-fun x607 () Int)
(declare-fun x148 () Int)
(declare-fun x107 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x524 () Int)
(declare-fun x381 () Int)
(declare-fun x643 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1288 () Int)
(declare-fun x1182 () Int)
(declare-fun x86 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x859 () Bool)
(declare-fun x456 () Bool)
(declare-fun x408 () Int)
(declare-fun x368 () Int)
(declare-fun x1378 () Int)
(declare-fun x1398 () Int)
(declare-fun x777 () Bool)
(declare-fun x571 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1143 () Int)
(declare-fun x410 () Int)
(declare-fun x1266 () Int)
(declare-fun x641 () Int)
(declare-fun x1084 () Bool)
(declare-fun x762 () Bool)
(declare-fun x268 () Bool)
(declare-fun x26 () Int)
(declare-fun x219 () Bool)
(declare-fun x981 () Int)
(declare-fun x914 () Int)
(declare-fun x121 () Int)
(declare-fun x407 () Int)
(declare-fun x617 () Int)
(declare-fun x1011 () Int)
(declare-fun x559 () Bool)
(declare-fun x924 () Bool)
(declare-fun x575 () Int)
(declare-fun x619 () Int)
(declare-fun x1525 () Int)
(declare-fun x184 () Int)
(declare-fun x1537 () Int)
(declare-fun x827 () Int)
(declare-fun x233 () Bool)
(declare-fun x1406 () Int)
(declare-fun x696 () Int)
(declare-fun x1097 () Int)
(declare-fun x1662 () Int)
(declare-fun x729 () Int)
(declare-fun x1510 () Bool)
(declare-fun x283 () Int)
(declare-fun x304 () Int)
(declare-fun x1676 () Bool)
(declare-fun x1265 () Int)
(declare-fun x1061 () Bool)
(declare-fun x418 () Int)
(declare-fun x292 () Int)
(declare-fun x1668 () Int)
(declare-fun x774 () Int)
(declare-fun x20 () Int)
(declare-fun x379 () Int)
(declare-fun x473 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1423 (Int) Int)
(declare-fun x780 () Int)
(declare-fun x1049 () Bool)
(declare-fun x803 () Int)
(declare-fun x909 () Int)
(declare-fun x1489 () Int)
(declare-fun x327 () Int)
(declare-fun x1515 () Int)
(declare-fun x1479 () Int)
(declare-fun x224 () Int)
(declare-fun x626 () Int)
(declare-fun x1149 () Int)
(declare-fun x1317 () Bool)
(declare-fun x58 () Int)
(declare-fun x1042 () Int)
(declare-fun x549 (Int) Int)
(declare-fun x584 () Int)
(declare-fun x578 () Bool)
(declare-fun x668 () Int)
(declare-fun x244 () Int)
(declare-fun x416 () Bool)
(declare-fun x813 () Int)
(declare-fun x728 () Int)
(declare-fun x809 () Bool)
(declare-fun x123 () Int)
(declare-fun x1291 () Int)
(declare-fun x266 () Int)
(declare-fun x295 () Int)
(declare-fun x1455 () Int)
(declare-fun x856 () Bool)
(declare-fun x1448 () Int)
(declare-fun x373 () Int)
(declare-fun x89 () Int)
(declare-fun x1381 () Int)
(declare-fun x877 () Int)
(declare-fun x949 () Bool)
(declare-fun x1426 () Int)
(declare-fun x732 () Int)
(declare-fun x80 () Int)
(declare-fun x541 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1442 () Int)
(declare-fun x35 () Int)
(declare-fun x1486 () Bool)
(declare-fun x235 () Int)
(declare-fun x781 () Int)
(declare-fun x17 () Int)
(declare-fun x1 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1498 () Int)
(declare-fun x543 () Int)
(declare-fun x360 () Int)
(declare-fun x1105 () Int)
(declare-fun x1520 () Int)
(declare-fun x251 () Int)
(declare-fun x1322 () Int)
(declare-fun x2 () Int)
(declare-fun x1251 () Bool)
(declare-fun x412 () Int)
(declare-fun x604 () Int)
(declare-fun x724 () Int)
(declare-fun x1500 () Int)
(declare-fun x1643 () Int)
(declare-fun x1672 () Int)
(declare-fun x533 () Int)
(declare-fun x7 (Int) Int)
(declare-fun x330 () Int)
(declare-fun x419 () Int)
(declare-fun x1424 () Int)
(declare-fun x1146 () Int)
(declare-fun x311 () Int)
(declare-fun x664 () Int)
(declare-fun x866 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1064 () Int)
(declare-fun x171 () Int)
(declare-fun x155 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1083 () Int)
(declare-fun x940 () Int)
(declare-fun x1239 () Int)
(declare-fun x1321 () Int)
(declare-fun x501 () Int)
(declare-fun x885 () Int)
(declare-fun x1574 () Int)
(declare-fun x1526 () Int)
(declare-fun x1560 () Int)
(declare-fun x1151 () Int)
(declare-fun x1687 () Int)
(declare-fun x768 () Int)
(declare-fun x1313 () Int)
(declare-fun x1523 () Int)
(declare-fun x748 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1169 (Int) Int)
(declare-fun x1209 () Int)
(declare-fun x1187 (Int) Int)
(declare-fun x882 () Int)
(declare-fun x1478 () Int)
(declare-fun x832 () Bool)
(declare-fun x1762 () Int)
(declare-fun x925 () Int)
(declare-fun x1390 () Bool)
(declare-fun x436 () Int)
(declare-fun x95 () Int)
(declare-fun x98 () Int)
(declare-fun x100 () Int)
(declare-fun x426 () Int)
(declare-fun x1761 () Int)
(declare-fun x889 () Int)
(declare-fun x1416 () Int)
(declare-fun x972 () Int)
(declare-fun x699 () Int)
(declare-fun x424 () Int)
(declare-fun x202 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1483 () Int)
(declare-fun x1422 () Int)
(declare-fun x242 () Bool)
(declare-fun x150 () Int)
(declare-fun x870 () Int)
(declare-fun x1590 () Bool)
(declare-fun x272 () Int)
(declare-fun x551 () Int)
(declare-fun x783 () Int)
(declare-fun x394 () Bool)
(declare-fun x846 () Int)
(declare-fun x94 () Int)
(declare-fun x1604 () Int)
(declare-fun x1438 () Int)
(declare-fun x351 () Int)
(declare-fun x1673 () Int)
(declare-fun x754 () Int)
(declare-fun x530 () Int)
(declare-fun x1766 () Bool)
(declare-fun x1375 () Int)
(declare-fun x1230 () Int)
(declare-fun x260 () Int)
(declare-fun x1704 () Int)
(declare-fun x161 () Bool)
(declare-fun x179 () Int)
(declare-fun x1548 () Int)
(declare-fun x935 () Bool)
(declare-fun x1073 () Int)
(declare-fun x927 () Bool)
(declare-fun x204 () Int)
(declare-fun x1295 () Int)
(declare-fun x979 () Int)
(declare-fun x1368 () Int)
(declare-fun x1367 () Int)
(declare-fun x1282 () Int)
(declare-fun x336 () Int)
(declare-fun x197 () Int)
(declare-fun x421 () Int)
(declare-fun x1519 () Bool)
(declare-fun x140 () Int)
(declare-fun x1104 (Int) Int)
(declare-fun x1427 () Int)
(declare-fun x1212 () Int)
(declare-fun x629 () Bool)
(declare-fun x580 () Int)
(declare-fun x1611 () Int)
(declare-fun x1167 () Int)
(declare-fun x1476 () Int)
(declare-fun x478 () Int)
(declare-fun x139 () Int)
(declare-fun x1258 () Bool)
(declare-fun x930 () Int)
(declare-fun x613 (Int) Int)
(declare-fun x305 () Bool)
(declare-fun x750 () Int)
(declare-fun x1593 () Bool)
(declare-fun x60 () Bool)
(declare-fun x127 () Int)
(declare-fun x1275 () Int)
(declare-fun x1300 () Int)
(declare-fun x1407 () Int)
(declare-fun x1592 () Int)
(declare-fun x1214 () Int)
(declare-fun x1568 () Int)
(declare-fun x811 () Int)
(declare-fun x857 () Int)
(declare-fun x1194 () Int)
(declare-fun x1052 () Int)
(declare-fun x957 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1459 () Int)
(declare-fun x178 () Int)
(declare-fun x1133 () Int)
(declare-fun x893 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1093 () Int)
(declare-fun x1684 () Int)
(declare-fun x485 () Int)
(declare-fun x1253 () Int)
(declare-fun x1636 () Bool)
(declare-fun x574 () Bool)
(declare-fun x1581 () Int)
(declare-fun x270 () Int)
(declare-fun x403 () Int)
(declare-fun x42 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1551 () Int)
(declare-fun x1184 () Int)
(declare-fun x1591 () Int)
(declare-fun x320 () Int)
(declare-fun x789 () Bool)
(declare-fun x1767 () Int)
(declare-fun x904 () Int)
(declare-fun x413 (Int) Int)
(declare-fun x1236 () Int)
(declare-fun x1678 () Int)
(declare-fun x274 () Int)
(declare-fun x49 () Bool)
(declare-fun x592 () Int)
(declare-fun x960 () Int)
(declare-fun x483 () Bool)
(declare-fun x341 () Int)
(declare-fun x36 () Int)
(declare-fun x79 () Int)
(declare-fun x1379 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1531 () Int)
(declare-fun x1731 () Int)
(declare-fun x568 () Int)
(declare-fun x290 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1310 () Int)
(declare-fun x1538 () Bool)
(declare-fun x194 (Int Int) Int)
(declare-fun x757 () Int)
(declare-fun x488 () Int)
(declare-fun x1305 () Int)
(declare-fun x376 () Int)
(declare-fun x1600 () Bool)
(declare-fun x1095 () Int)
(declare-fun x475 () Bool)
(declare-fun x1665 () Int)
(declare-fun x1179 () Int)
(declare-fun x397 () Int)
(declare-fun x1299 () Int)
(declare-fun x538 () Int)
(declare-fun x1633 () Int)
(declare-fun x1497 () Bool)
(declare-fun x222 () Int)
(declare-fun x879 () Int)
(declare-fun x393 () Int)
(declare-fun x555 () Int)
(declare-fun x673 () Int)
(declare-fun x1040 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1517 () Int)
(declare-fun x399 () Int)
(declare-fun x269 () Int)
(declare-fun x740 () Bool)
(declare-fun x1135 () Int)
(declare-fun x113 () Bool)
(declare-fun x507 (Int) Int)
(declare-fun x1015 () Int)
(declare-fun x709 () Int)
(declare-fun x1430 () Int)
(declare-fun x1449 () Int)
(declare-fun x1561 () Int)
(declare-fun x364 () Bool)
(declare-fun x1254 () Int)
(declare-fun x297 () Int)
(declare-fun x192 () Int)
(declare-fun x602 () Int)
(declare-fun x1443 () Int)
(declare-fun x1304 () Bool)
(declare-fun x926 () Int)
(declare-fun x710 () Bool)
(declare-fun x92 () Int)
(declare-fun x1542 () Int)
(declare-fun x839 () Int)
(declare-fun x1231 () Int)
(declare-fun x786 () Int)
(declare-fun x22 () Bool)
(declare-fun x248 () Int)
(declare-fun x1023 () Bool)
(declare-fun x510 () Int)
(declare-fun x398 () Int)
(declare-fun x14 () Int)
(declare-fun x346 () Int)
(declare-fun x989 () Int)
(declare-fun x328 () Int)
(declare-fun x761 () Int)
(declare-fun x848 () Int)
(declare-fun x1281 () Int)
(declare-fun x476 () Int)
(declare-fun x1509 () Int)
(declare-fun x1726 () Bool)
(declare-fun x47 () Int)
(declare-fun x1490 () Int)
(declare-fun x646 () Int)
(declare-fun x495 () Int)
(declare-fun x1385 () Int)
(declare-fun x158 () Int)
(declare-fun x1727 () Int)
(declare-fun x680 () Int)
(declare-fun x683 () Bool)
(declare-fun x1090 () Int)
(declare-fun x303 () Int)
(declare-fun x982 () Int)
(declare-fun x465 () Int)
(declare-fun x703 () Bool)
(declare-fun x37 () Int)
(declare-fun x1564 () Int)
(declare-fun x1413 () Int)
(declare-fun x959 () Int)
(declare-fun x38 () Int)
(declare-fun x479 () Int)
(declare-fun x1012 () Int)
(declare-fun x347 () Int)
(declare-fun x932 () Int)
(declare-fun x104 () Int)
(declare-fun x1349 () Bool)
(declare-fun x93 () Int)
(declare-fun x187 () Int)
(declare-fun x669 () Bool)
(declare-fun x953 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1507 () Int)
(declare-fun x817 () Int)
(declare-fun x975 () Int)
(declare-fun x886 () Int)
(declare-fun x370 () Int)
(declare-fun x637 () Int)
(declare-fun x689 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1545 () Int)
(declare-fun x550 () Int)
(declare-fun x1620 () Int)
(declare-fun x1625 () Int)
(declare-fun x1753 () Int)
(declare-fun x1771 () Int)
(declare-fun x545 () Int)
(declare-fun x849 () Bool)
(declare-fun x676 () Int)
(declare-fun x954 () Int)
(declare-fun x1602 () Int)
(declare-fun x367 () Int)
(declare-fun x1391 () Int)
(declare-fun x577 () Int)
(declare-fun x1549 () Int)
(declare-fun x41 () Int)
(declare-fun x700 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1059 () Int)
(declare-fun x499 () Int)
(declare-fun x211 () Int)
(declare-fun x961 () Bool)
(declare-fun x374 () Bool)
(declare-fun x621 () Int)
(declare-fun x1583 () Int)
(declare-fun x1144 () Int)
(declare-fun x720 () Bool)
(declare-fun x160 () Int)
(declare-fun x445 (Int) Int)
(declare-fun x1618 () Bool)
(declare-fun x491 () Int)
(declare-fun x1256 () Int)
(declare-fun x814 () Int)
(declare-fun x1454 () Int)
(declare-fun x1189 () Int)
(declare-fun x1386 () Bool)
(declare-fun x287 () Int)
(declare-fun x821 () Int)
(declare-fun x63 () Int)
(declare-fun x566 () Int)
(declare-fun x854 () Int)
(declare-fun x180 () Bool)
(declare-fun x1222 () Int)
(declare-fun x111 () Int)
(declare-fun x1552 () Bool)
(declare-fun x707 () Int)
(declare-fun x1286 () Int)
(declare-fun x371 () Int)
(declare-fun x1346 () Int)
(declare-fun x873 () Int)
(declare-fun x385 () Int)
(declare-fun x708 () Int)
(declare-fun x1758 () Int)
(declare-fun x1348 () Int)
(declare-fun x125 () Int)
(declare-fun x65 () Bool)
(declare-fun x1733 () Int)
(declare-fun x582 () Int)
(declare-fun x1026 () Int)
(declare-fun x420 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1005 () Int)
(declare-fun x1403 () Int)
(declare-fun x691 () Int)
(declare-fun x654 () Int)
(declare-fun x1754 () Int)
(declare-fun x247 () Int)
(declare-fun x1347 () Int)
(declare-fun x1742 () Int)
(declare-fun x1541 () Int)
(declare-fun x1199 () Int)
(declare-fun x1190 (Int) Int)
(declare-fun x1722 () Int)
(declare-fun x1111 () Int)
(declare-fun x461 () Int)
(declare-fun x1615 () Int)
(declare-fun x1389 () Int)
(declare-fun x771 () Bool)
(declare-fun x898 () Int)
(declare-fun x1002 () Int)
(declare-fun x1086 () Int)
(declare-fun x1365 () Int)
(declare-fun x314 () Int)
(declare-fun x1128 () Bool)
(declare-fun x469 () Bool)
(declare-fun x425 () Int)
(declare-fun x1394 () Int)
(declare-fun x929 () Int)
(declare-fun x599 () Int)
(declare-fun x622 () Int)
(declare-fun x1160 () Bool)
(declare-fun x1511 () Int)
(declare-fun x463 () Int)
(declare-fun x1250 () Int)
(declare-fun x173 () Bool)
(declare-fun x323 () Int)
(declare-fun x1586 () Int)
(declare-fun x1495 (Int) Int)
(declare-fun x109 (Int Int Int Int) Int)
(declare-fun x74 () Bool)
(declare-fun x1670 () Int)
(declare-fun x23 () Bool)
(declare-fun x1721 () Int)
(declare-fun x1136 () Int)
(declare-fun x847 (Int) Int)
(declare-fun x388 () Int)
(declare-fun x606 () Int)
(declare-fun x687 () Int)
(declare-fun x594 () Int)
(declare-fun x745 () Int)
(declare-fun x1008 () Int)
(declare-fun x76 () Int)
(declare-fun x363 () Int)
(declare-fun x1240 () Int)
(declare-fun x302 () Int)
(declare-fun x855 () Int)
(declare-fun x635 () Int)
(declare-fun x126 () Int)
(declare-fun x120 () Int)
(declare-fun x620 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1238 () Int)
(declare-fun x1452 () Int)
(declare-fun x1085 () Int)
(declare-fun x45 (Int Int Int Int Int Int Int) Int)
(declare-fun x920 () Int)
(declare-fun x1647 (Int Int Int Int) Int)
(declare-fun x1708 () Int)
(declare-fun x157 () Int)
(declare-fun x755 () Int)
(declare-fun x1683 () Bool)
(declare-fun x1045 () Int)
(declare-fun x655 () Int)
(declare-fun x1335 () Int)
(declare-fun x396 () Int)
(declare-fun x345 () Int)
(declare-fun x1001 () Int)
(declare-fun x231 () Int)
(declare-fun x449 () Int)
(declare-fun x1522 () Int)
(declare-fun x223 () Int)
(declare-fun x166 () Int)
(declare-fun x718 () Bool)
(declare-fun x318 () Bool)
(declare-fun x1068 () Int)
(declare-fun x939 () Int)
(declare-fun x203 () Bool)
(declare-fun x1312 () Int)
(declare-fun x441 () Int)
(declare-fun x911 () Int)
(declare-fun x1491 () Int)
(declare-fun x39 () Int)
(declare-fun x964 () Int)
(declare-fun x16 () Int)
(declare-fun x808 () Int)
(declare-fun x623 () Int)
(declare-fun x922 () Int)
(declare-fun x1150 () Int)
(declare-fun x1716 () Int)
(declare-fun x553 () Int)
(declare-fun x772 () Int)
(define-fun x1324 ((x1745 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1745) (>= x1745 0)) x1745 (- x1745 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x912 ((x1745 Int)) Int (ite (and (< x1745 0) (>= x1745 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1745 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1745))
(define-fun x1276 ((x697 Int)) Bool (and (>= x697 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x697)))
(define-fun x263 ((x697 Int)) Bool (and (= (x194 x697 115792089237316195423570985008687907853269984665640564039457584007913129639935) x697) (= (x194 115792089237316195423570985008687907853269984665640564039457584007913129639935 x697) x697)))
(define-fun x9 ((x697 Int)) Bool (and (= 0 (x194 x697 0)) (= (x194 0 x697) 0)))
(define-fun x717 ((x697 Int)) Bool (= (x194 x697 x697) x697))
(define-fun x639 ((x697 Int)) Bool (and (x717 x697) (x263 x697) (x9 x697)))
(define-fun x259 ((x697 Int) (x1556 Int)) Bool (= (x194 x697 x1556) (x194 x1556 x697)))
(define-fun x1705 ((x697 Int) (x1556 Int)) Bool (and (=> (>= x697 0) (>= x697 (x194 x697 x1556))) (<= 0 (x194 x697 x1556)) (=> (>= x1556 0) (<= (x194 x697 x1556) x1556))))
(define-fun x1213 ((x697 Int) (x1556 Int)) Bool (and (x1705 x697 x1556) (x259 x697 x1556)))
(define-fun x492 ((x697 Int)) Bool (= (+ (mod x697 32) (x194 x697 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x697 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1131 ((x697 Int)) Bool (and (x1213 x697 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x492 x697)))
(define-fun x1576 ((x697 Int)) Bool (= (x194 x697 1461501637330902918203684832716283019655932542975) (mod x697 1461501637330902918203684832716283019655932542976)))
(define-fun x1030 ((x697 Int)) Bool (and (x1576 x697) (x1213 x697 1461501637330902918203684832716283019655932542975)))
(define-fun x1689 ((x697 Int)) Bool (= (mod x697 1099511627776) (x194 x697 1099511627775)))
(define-fun x984 ((x697 Int)) Bool (and (x1213 x697 1099511627775) (x1689 x697)))
(define-fun x1698 ((x1053 Int)) Int (ite (< x1053 x730) (x484 x1053) 0))
(define-fun x136 ((x1053 Int)) Int 0)
(define-fun x969 ((x1053 Int)) Int 0)
(define-fun x1255 ((x1053 Int)) Int 0)
(define-fun x428 ((x1053 Int)) Int 0)
(define-fun x956 ((x1053 Int)) Int 0)
(define-fun x1205 ((x1053 Int)) Int 0)
(define-fun x713 ((x1053 Int)) Int 0)
(define-fun x1503 ((x1053 Int)) Int 0)
(define-fun x24 ((x1053 Int)) Int 0)
(define-fun x1644 ((x1053 Int)) Int 0)
(define-fun x438 ((x1053 Int)) Int 0)
(define-fun x50 ((x1053 Int)) Int 0)
(define-fun x1192 ((x1053 Int)) Int (ite (= 704 x1053) x1091 (x956 x1053)))
(define-fun x1660 ((x1053 Int)) Int (ite (= 736 x1053) x288 (x1192 x1053)))
(define-fun x1134 ((x1053 Int)) Int (ite (= 768 x1053) x1441 (x1660 x1053)))
(define-fun x1603 ((x1053 Int)) Int (ite (= 800 x1053) x952 (x1134 x1053)))
(define-fun x10 ((x1053 Int)) Int (ite (= 832 x1053) x822 (x1603 x1053)))
(define-fun x1334 ((x1053 Int)) Int (ite (= 864 x1053) x916 (x10 x1053)))
(define-fun x1147 ((x1053 Int)) Int (ite (= x1053 896) x379 (x1334 x1053)))
(define-fun x804 ((x1053 Int)) Int (ite (= x1053 928) x982 (x1147 x1053)))
(define-fun x361 ((x1053 Int)) Int (ite (= 960 x1053) x1544 (x804 x1053)))
(define-fun x1340 ((x1053 Int)) Int 0)
(define-fun x246 ((x1053 Int)) Int (ite (= x1053 256) x1008 (x136 x1053)))
(define-fun x51 ((x1053 Int)) Int (ite (= x1053 288) x1616 (x246 x1053)))
(define-fun x54 ((x1053 Int)) Int 0)
(define-fun x75 ((x1053 Int)) Int (ite (= 704 x1053) x1460 (x1205 x1053)))
(define-fun x415 ((x1053 Int)) Int (ite (= 736 x1053) x691 (x75 x1053)))
(define-fun x618 ((x1053 Int)) Int (ite (= 768 x1053) x1401 (x415 x1053)))
(define-fun x1546 ((x1053 Int)) Int (ite (= x1053 800) x468 (x618 x1053)))
(define-fun x529 ((x1053 Int)) Int (ite (= 832 x1053) x169 (x1546 x1053)))
(define-fun x1612 ((x1053 Int)) Int (ite (= 864 x1053) x449 (x529 x1053)))
(define-fun x554 ((x1053 Int)) Int (ite (= 896 x1053) x14 (x1612 x1053)))
(define-fun x275 ((x1053 Int)) Int (ite (= x1053 928) x351 (x554 x1053)))
(define-fun x1204 ((x1053 Int)) Int (ite (= x1053 960) x430 (x275 x1053)))
(define-fun x281 ((x1053 Int)) Int 0)
(define-fun x53 ((x1053 Int)) Int (ite (= x1053 704) x660 (x713 x1053)))
(define-fun x1035 ((x1053 Int)) Int (ite (= 736 x1053) x370 (x53 x1053)))
(define-fun x237 ((x1053 Int)) Int (ite (= 768 x1053) x911 (x1035 x1053)))
(define-fun x726 ((x1053 Int)) Int (ite (= 800 x1053) x811 (x237 x1053)))
(define-fun x731 ((x1053 Int)) Int (ite (= x1053 832) x1094 (x726 x1053)))
(define-fun x72 ((x1053 Int)) Int (ite (= 864 x1053) x127 (x731 x1053)))
(define-fun x1311 ((x1053 Int)) Int (ite (= 896 x1053) x999 (x72 x1053)))
(define-fun x1249 ((x1053 Int)) Int (ite (= 928 x1053) x417 (x1311 x1053)))
(define-fun x1648 ((x1053 Int)) Int (ite (= 960 x1053) x1403 (x1249 x1053)))
(define-fun x205 ((x1053 Int)) Int 0)
(define-fun x1058 ((x1053 Int)) Int (ite (= x1053 704) x569 (x1503 x1053)))
(define-fun x1434 ((x1053 Int)) Int (ite (= 736 x1053) x1292 (x1058 x1053)))
(define-fun x384 ((x1053 Int)) Int (ite (= 768 x1053) x1240 (x1434 x1053)))
(define-fun x91 ((x1053 Int)) Int (ite (= x1053 800) x258 (x384 x1053)))
(define-fun x506 ((x1053 Int)) Int (ite (= 832 x1053) x1068 (x91 x1053)))
(define-fun x1325 ((x1053 Int)) Int (ite (= x1053 864) x1557 (x506 x1053)))
(define-fun x406 ((x1053 Int)) Int (ite (= 896 x1053) x926 (x1325 x1053)))
(define-fun x906 ((x1053 Int)) Int (ite (= x1053 928) x1167 (x406 x1053)))
(define-fun x591 ((x1053 Int)) Int (ite (= x1053 960) x597 (x906 x1053)))
(define-fun x227 ((x1053 Int)) Int 0)
(define-fun x823 ((x1053 Int)) Int (ite (= 256 x1053) x1148 (x969 x1053)))
(define-fun x1405 ((x1053 Int)) Int (ite (= x1053 288) x19 (x823 x1053)))
(define-fun x1029 ((x1053 Int)) Int (ite (> x1348 x1053) (x682 x1053) 0))
(define-fun x44 ((x1053 Int)) Int (ite (and (> x1348 x1053) (<= 0 x1053)) (x1245 x1053) (x1029 x1053)))
(define-fun x40 ((x1053 Int)) Int (ite (= x1053 x749) x1149 (x549 x1053)))
(define-fun x353 ((x1053 Int)) Int (ite (= 128 x1053) x818 (x428 x1053)))
(define-fun x1415 ((x1053 Int)) Int (ite (and (< x1053 (+ 160 x818)) (>= x1053 160)) (x44 (- (+ x1053 x310) 160)) (x353 x1053)))
(define-fun x518 ((x1053 Int)) Int (ite (= x494 x1053) 0 (x1415 x1053)))
(define-fun x615 ((x1053 Int)) Int (ite (= x1053 x1677) x1228 (x518 x1053)))
(define-fun x15 ((x1053 Int)) Int (ite (and (<= x534 x1053) (> (+ x534 x708) x1053)) (x44 (- (+ x1053 x1348) x534)) (x615 x1053)))
(define-fun x8 ((x1053 Int)) Int 0)
(define-fun x337 ((x1053 Int)) Int (ite (= x1053 x648) x262 (x7 x1053)))
(define-fun x791 ((x1053 Int)) Int (ite x712 (x7 x1053) (x337 x1053)))
(define-fun x404 ((x1053 Int)) Int (ite (= x1082 x1053) x308 (x413 x1053)))
(define-fun x784 ((x1053 Int)) Int (ite x712 (x404 x1053) (x413 x1053)))
(define-fun x1153 ((x1053 Int)) Int (ite (= x1053 704) x968 (x1644 x1053)))
(define-fun x1079 ((x1053 Int)) Int (ite (= 736 x1053) x1180 (x1153 x1053)))
(define-fun x359 ((x1053 Int)) Int (ite (= x1053 768) x1522 (x1079 x1053)))
(define-fun x576 ((x1053 Int)) Int (ite (= x1053 800) x221 (x359 x1053)))
(define-fun x1259 ((x1053 Int)) Int (ite (= x1053 832) x31 (x576 x1053)))
(define-fun x1137 ((x1053 Int)) Int (ite (= 864 x1053) x1631 (x1259 x1053)))
(define-fun x296 ((x1053 Int)) Int (ite (= x1053 896) x1597 (x1137 x1053)))
(define-fun x1750 ((x1053 Int)) Int (ite (= x1053 928) x1586 (x296 x1053)))
(define-fun x193 ((x1053 Int)) Int (ite (= x1053 960) x118 (x1750 x1053)))
(define-fun x785 ((x1053 Int)) Int 0)
(define-fun x163 ((x1053 Int)) Int (ite (= x1053 704) x70 (x438 x1053)))
(define-fun x1244 ((x1053 Int)) Int (ite (= 736 x1053) x1611 (x163 x1053)))
(define-fun x122 ((x1053 Int)) Int (ite (= 768 x1053) x862 (x1244 x1053)))
(define-fun x124 ((x1053 Int)) Int (ite (= 800 x1053) x846 (x122 x1053)))
(define-fun x1048 ((x1053 Int)) Int (ite (= x1053 832) x786 (x124 x1053)))
(define-fun x1453 ((x1053 Int)) Int (ite (= x1053 864) x1296 (x1048 x1053)))
(define-fun x402 ((x1053 Int)) Int (ite (= x1053 896) x1568 (x1453 x1053)))
(define-fun x1323 ((x1053 Int)) Int (ite (= 928 x1053) x166 (x402 x1053)))
(define-fun x681 ((x1053 Int)) Int (ite (= 960 x1053) x802 (x1323 x1053)))
(define-fun x1234 ((x1053 Int)) Int 0)
(define-fun x1360 ((x1053 Int)) Int (ite (= x1053 256) x1773 (x1255 x1053)))
(define-fun x941 ((x1053 Int)) Int (ite (= x1053 288) x1252 (x1360 x1053)))
(define-fun x186 ((x1053 Int)) Int (ite x1158 (x615 x1053) (x15 x1053)))
(define-fun x1540 ((x1053 Int)) Int (ite (= x1053 x801) 57 (x186 x1053)))
(define-fun x1621 ((x1053 Int)) Int (ite (= x287 x1053) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x1540 x1053)))
(define-fun x332 ((x1053 Int)) Int (ite (= x1053 x810) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1621 x1053)))
(define-fun x1225 ((x1053 Int)) Int (ite (= x1053 x273) x1236 (x332 x1053)))
(define-fun x1050 ((x1053 Int)) Int (ite x845 (x1225 x1053) (ite x893 (x332 x1053) (x844 x1053))))
(define-fun x517 ((x1053 Int)) Int (ite (= x1681 x1053) 0 (x1050 x1053)))
(define-fun x744 ((x1053 Int)) Int (ite (= x1053 x199) x745 (x517 x1053)))
(define-fun x1645 ((x1053 Int)) Int (ite (= x1053 x816) x1602 (x744 x1053)))
(define-fun x1769 ((x1053 Int)) Int (ite (= x1754 x1053) x436 (x1645 x1053)))
(define-fun x1680 ((x1053 Int)) Int (ite (= x1154 x1053) x375 (x1769 x1053)))
(define-fun x13 ((x1053 Int)) Int (ite (= x1681 x1053) x751 (x1680 x1053)))
(define-fun x1723 ((x1053 Int)) Int (ite (= x1053 x1215) x1478 (x13 x1053)))
(define-fun x1534 ((x1053 Int)) Int (ite x593 (x186 x1053) (x1723 x1053)))
(define-fun x1752 ((x1053 Int)) Int (ite (= x1514 x1053) 57 (x1534 x1053)))
(define-fun x490 ((x1053 Int)) Int (ite (= x1053 x1382) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x1752 x1053)))
(define-fun x450 ((x1053 Int)) Int (ite (= x342 x1053) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x490 x1053)))
(define-fun x1553 ((x1053 Int)) Int (ite (= x195 x1053) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x450 x1053)))
(define-fun x1445 ((x1053 Int)) Int (ite (= x1053 x447) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x1553 x1053)))
(define-fun x1462 ((x1053 Int)) Int (ite (= x178 x1053) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x1445 x1053)))
(define-fun x1077 ((x1053 Int)) Int (ite (= x235 x1053) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x1462 x1053)))
(define-fun x759 ((x1053 Int)) Int (ite (= x1485 x1053) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x1077 x1053)))
(define-fun x645 ((x1053 Int)) Int (ite (= x1053 x1431) x1591 (x759 x1053)))
(define-fun x175 ((x1053 Int)) Int (ite (= x1451 x1053) x137 (x645 x1053)))
(define-fun x1161 ((x1053 Int)) Int (ite (= x1053 x690) x792 (x175 x1053)))
(define-fun x677 ((x1053 Int)) Int (ite (= x1053 x1012) x1170 (x1161 x1053)))
(define-fun x951 ((x1053 Int)) Int (ite x21 (x1161 x1053) (ite x456 (x175 x1053) (ite x316 (x645 x1053) (ite x132 (x759 x1053) (x677 x1053))))))
(define-fun x1747 ((x1053 Int)) Int (ite (= x1053 x763) 0 (x951 x1053)))
(define-fun x401 ((x1053 Int)) Int (ite (= x482 x1053) x1627 (x1747 x1053)))
(define-fun x1474 ((x1053 Int)) Int (ite (= x992 x1053) x27 (x401 x1053)))
(define-fun x795 ((x1053 Int)) Int (ite (= x1701 x1053) x585 (x1474 x1053)))
(define-fun x325 ((x1053 Int)) Int (ite (= x1053 x1257) x934 (x795 x1053)))
(define-fun x1457 ((x1053 Int)) Int (ite (= x1053 x1036) x890 (x325 x1053)))
(define-fun x933 ((x1053 Int)) Int (ite x1536 (x325 x1053) (ite x663 (x795 x1053) (ite x334 (x1474 x1053) (ite x305 (x401 x1053) (x1457 x1053))))))
(define-fun x369 ((x1053 Int)) Int (ite (= x1053 x763) x527 (x933 x1053)))
(define-fun x1480 ((x1053 Int)) Int (ite (= x1053 x642) x948 (x369 x1053)))
(define-fun x546 ((x1053 Int)) Int (ite (= x914 x1053) x1748 (x1480 x1053)))
(define-fun x1628 ((x1053 Int)) Int (ite (= x1053 x975) x1664 (x546 x1053)))
(define-fun x867 ((x1053 Int)) Int (ite (= x73 x1053) x1203 (x1628 x1053)))
(define-fun x1278 ((x1053 Int)) Int (ite (= x886 x1053) x1168 (x867 x1053)))
(define-fun x1120 ((x1053 Int)) Int (ite (= x236 x1053) x1195 (x1278 x1053)))
(define-fun x28 ((x1053 Int)) Int (ite (= x1053 x1189) x2 (x1120 x1053)))
(define-fun x206 ((x1053 Int)) Int (ite (= x1053 x409) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x28 x1053)))
(define-fun x1472 ((x1053 Int)) Int (ite (= x1053 x1031) x528 (x206 x1053)))
(define-fun x395 ((x1053 Int)) Int (ite (= x1053 x1219) x47 (x1472 x1053)))
(define-fun x851 ((x1053 Int)) Int (ite (= x1053 x1626) x234 (x395 x1053)))
(define-fun x474 ((x1053 Int)) Int (ite (= x1053 x803) x748 (x851 x1053)))
(define-fun x843 ((x1053 Int)) Int (ite (= x62 x1053) x920 (x474 x1053)))
(define-fun x737 ((x1053 Int)) Int (ite x1456 (x843 x1053) (x28 x1053)))
(define-fun x69 ((x1053 Int)) Int (ite (= x1413 x1053) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x737 x1053)))
(define-fun x564 ((x1053 Int)) Int (ite (= x1768 x1053) x1275 (x69 x1053)))
(define-fun x437 ((x1053 Int)) Int (ite (= x1053 x1127) x1156 (x564 x1053)))
(define-fun x694 ((x1053 Int)) Int (ite (= x1053 x1413) 0 (x437 x1053)))
(define-fun x1535 ((x1053 Int)) Int (ite (= x1053 x959) x628 (x694 x1053)))
(define-fun x1034 ((x1053 Int)) Int (ite (= x857 x1053) x632 (x1535 x1053)))
(define-fun x609 ((x1053 Int)) Int (ite (= x1053 x1146) x1668 (x1034 x1053)))
(define-fun x1172 ((x1053 Int)) Int (ite (= x1053 x674) x192 (x609 x1053)))
(define-fun x721 ((x1053 Int)) Int (x1698 x1053))
(define-fun x67 ((x1053 Int)) Int (ite (= x146 x1053) x1083 (x1172 x1053)))
(define-fun x362 ((x1053 Int)) Int (ite x1089 (x67 x1053) (ite x598 (x67 x1053) (x437 x1053))))
(define-fun x1582 ((x1053 Int)) Int (ite (= x1053 x1297) 2 (x362 x1053)))
(define-fun x624 ((x1053 Int)) Int (ite (= x526 x1053) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x1582 x1053)))
(define-fun x947 ((x1053 Int)) Int (ite (= x1053 x179) 2 (x624 x1053)))
(define-fun x820 ((x1053 Int)) Int (ite (= x363 x1053) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x947 x1053)))
(define-fun x1464 ((x1053 Int)) Int (ite (= x220 x1053) x1664 (x820 x1053)))
(define-fun x1663 ((x1053 Int)) Int (ite (= x1053 x764) 9 (x1464 x1053)))
(define-fun x1400 ((x1053 Int)) Int (ite (= x1416 x1053) x1502 (x1663 x1053)))
(define-fun x3 ((x1053 Int)) Int (ite (= x1053 x1548) x234 (x1400 x1053)))
(define-fun x284 ((x1053 Int)) Int (ite (= x1053 x224) x177 (x3 x1053)))
(define-fun x448 ((x1053 Int)) Int (ite (= x1053 x953) x1281 (x284 x1053)))
(define-fun x1339 ((x1053 Int)) Int (ite (= x1053 x765) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x448 x1053)))
(define-fun x900 ((x1053 Int)) Int (ite (= x565 x1053) x147 (x1339 x1053)))
(define-fun x452 ((x1053 Int)) Int (ite (= x35 x1053) x1040 (x900 x1053)))
(define-fun x990 ((x1053 Int)) Int (ite (= x1053 x196) x672 (x452 x1053)))
(define-fun x480 ((x1053 Int)) Int (ite (= x1053 x781) 128 (x990 x1053)))
(define-fun x1177 ((x1053 Int)) Int (ite (= x1053 x702) x1388 (x480 x1053)))
(define-fun x493 ((x1053 Int)) Int (ite (= x1053 x556) x290 (x1177 x1053)))
(define-fun x57 ((x1053 Int)) Int (ite (= x1053 x950) x850 (x493 x1053)))
(define-fun x570 ((x1053 Int)) Int (ite (= x1053 x172) x1346 (x57 x1053)))
(define-fun x108 ((x1053 Int)) Int (ite (= x1214 x1053) x1398 (x570 x1053)))
(define-fun x153 ((x1053 Int)) Int (ite x489 (x570 x1053) (ite x856 (x57 x1053) (ite x239 (x493 x1053) (ite x1261 (x1177 x1053) (x108 x1053))))))
(define-fun x453 ((x1053 Int)) Int (ite (= x1053 x1022) 0 (x153 x1053)))
(define-fun x90 ((x1053 Int)) Int (ite (and (<= x765 x1053) (< x1053 (+ 64 x765))) (x164 (- x1053 x765)) (x453 x1053)))
(define-fun x1588 ((x1053 Int)) Int (ite x1371 (x90 x1053) (x453 x1053)))
(define-fun x1372 ((x1053 Int)) Int (ite (and (> (+ x765 64) x1053) (<= x765 x1053)) (x164 (- x1053 x765)) (x1588 x1053)))
(define-fun x32 ((x1053 Int)) Int (ite (= x333 x1053) 2 (x1372 x1053)))
(define-fun x1027 ((x1053 Int)) Int (ite (= x1053 x1341) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x32 x1053)))
(define-fun x509 ((x1053 Int)) Int (ite (= x1053 x1076) 2 (x1027 x1053)))
(define-fun x43 ((x1053 Int)) Int (ite (= x1053 x311) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x509 x1053)))
(define-fun x349 ((x1053 Int)) Int (ite (= x522 x1053) 2 (x43 x1053)))
(define-fun x176 ((x1053 Int)) Int (ite (= x1103 x1053) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x349 x1053)))
(define-fun x1039 ((x1053 Int)) Int (ite (= x1067 x1053) 2 (x176 x1053)))
(define-fun x1521 ((x1053 Int)) Int (ite (= x391 x1053) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x1039 x1053)))
(define-fun x1634 ((x1053 Int)) Int (ite x559 (x176 x1053) (x1521 x1053)))
(define-fun x81 ((x1053 Int)) Int (ite (= x1053 x987) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1634 x1053)))
(define-fun x1759 ((x1053 Int)) Int (ite (= x1053 x11) x79 (x81 x1053)))
(define-fun x535 ((x1053 Int)) Int (ite (= x1053 x1492) x348 (x1759 x1053)))
(define-fun x1558 ((x1053 Int)) Int (ite (= x656 x1053) x1508 (x535 x1053)))
(define-fun x1506 ((x1053 Int)) Int (ite (= x1053 x928) 128 (x1558 x1053)))
(define-fun x1550 ((x1053 Int)) Int (ite (= x1053 x1424) x1583 (x1506 x1053)))
(define-fun x753 ((x1053 Int)) Int (ite (and (> (+ x1583 x76) x1053) (>= x1053 x76)) (x44 (- (+ x208 x1053) x76)) (x1550 x1053)))
(define-fun x427 ((x1053 Int)) Int (ite (= x1672 x1053) 0 (x753 x1053)))
(define-fun x558 ((x1053 Int)) Int (ite (and (<= x987 x1053) (> (+ 64 x987) x1053)) (x819 (- x1053 x987)) (x427 x1053)))
(define-fun x835 ((x1053 Int)) Int (ite (= x532 x1053) x355 (x1169 x1053)))
(define-fun x1715 ((x1053 Int)) Int (ite (= x1053 x532) x508 (x847 x1053)))
(define-fun x971 ((x1053 Int)) Int 0)
(define-fun x1057 ((x1053 Int)) Int (ite (= 704 x1053) x879 (x24 x1053)))
(define-fun x841 ((x1053 Int)) Int (ite (= 736 x1053) x1425 (x1057 x1053)))
(define-fun x18 ((x1053 Int)) Int (ite (= 768 x1053) x719 (x841 x1053)))
(define-fun x544 ((x1053 Int)) Int (ite (= x1053 800) x780 (x18 x1053)))
(define-fun x1613 ((x1053 Int)) Int (ite (= x1053 832) x1185 (x544 x1053)))
(define-fun x511 ((x1053 Int)) Int (ite (= 864 x1053) x821 (x1613 x1053)))
(define-fun x767 ((x1053 Int)) Int (ite (= x1053 896) x1749 (x511 x1053)))
(define-fun x1724 ((x1053 Int)) Int (ite (= x1053 928) x1109 (x767 x1053)))
(define-fun x601 ((x1053 Int)) Int (ite (= 960 x1053) x1778 (x1724 x1053)))
(define-fun x170 ((x1053 Int)) Int (ite x180 (x558 x1053) (x427 x1053)))
(define-fun x64 ((x1053 Int)) Int (ite (and (> (+ x987 64) x1053) (>= x1053 x987)) (x819 (- x1053 x987)) (x170 x1053)))
(define-fun x945 ((x1053 Int)) Int (ite (= x1174 x1053) 2 (x64 x1053)))
(define-fun x432 ((x1053 Int)) Int (ite (= x110 x1053) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x945 x1053)))
(define-fun x1617 ((x1053 Int)) Int (ite (= x1053 x1652) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x432 x1053)))
(define-fun x611 ((x1053 Int)) Int (ite (= x1053 x1695) x960 (x1617 x1053)))
(define-fun x1113 ((x1053 Int)) Int (ite (= x577 x1053) x1009 (x611 x1053)))
(define-fun x1333 ((x1053 Int)) Int (ite (= x371 x1053) x989 (x1113 x1053)))
(define-fun x1638 ((x1053 Int)) Int (ite (= x994 x1053) x348 (x1333 x1053)))
(define-fun x439 ((x1053 Int)) Int (ite (and (> (+ x1652 32) x1053) (>= x1053 x1652)) (x630 (- x1053 x1652)) (x1638 x1053)))
(define-fun x942 ((x1053 Int)) Int (ite x1760 (x439 x1053) (x1638 x1053)))
(define-fun x191 ((x1053 Int)) Int (ite (and (> (+ x1652 32) x1053) (<= x1652 x1053)) (x630 (- x1053 x1652)) (x942 x1053)))
(assert (= (x1190 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118)) x736))
(assert (= (x1563 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x555))
(assert (x639 x1609))
(assert (= x70 (x1495 (x536 64 x70 3))))
(assert (< 10000 (x536 64 x968 3)))
(assert (x1276 x1370))
(assert (= (x613 x954) (x613 (+ x954 1))))
(assert (x1276 x253))
(assert (= (x613 (+ x581 1)) (x613 x581)))
(assert (x1276 x732))
(assert (x1276 x212))
(assert (< 10000 (x514 x100 x396 x616 x304 x1285 x861)))
(assert (=> (>= 10000 x320) (= 0 (x613 x320))))
(assert (= x559 (and x1420 (not x1624))))
(assert (x1276 x1291))
(assert (x1276 x980))
(assert (x1276 x470))
(assert (= (x536 64 x879 3) (x613 (x536 64 x879 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x45 x1310 x260 x321 x167 x1426 x270 x255)))
(assert (x1276 x665))
(assert (=> (<= x1198 10000) (= (x613 x1198) 0)))
(assert (= (x536 64 x1460 3) (x613 (x536 64 x1460 3))))
(assert (x639 x418))
(assert (=> (<= x1404 10000) (= 0 (x613 x1404))))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1276 x277))
(assert (x1276 x1220))
(assert (x1276 x1424))
(assert (=> (>= 10000 x1771) (= 0 (x613 x1771))))
(assert (= (x1187 (x536 x1385 x965 x315)) x1385))
(assert (=> (>= 10000 x909) (= 0 (x613 x909))))
(assert (x1276 x1719))
(assert (=> (<= x1299 10000) (= 0 (x613 x1299))))
(assert (=> (<= x398 10000) (= (x613 x398) 0)))
(assert (=> (<= x894 10000) (= (x613 x894) 0)))
(assert (= (x536 64 x1748 3) (x613 (x536 64 x1748 3))))
(assert (x1276 x1198))
(assert (x1276 x1247))
(assert (=> (<= x1111 10000) (= 0 (x613 x1111))))
(assert (=> (>= 10000 x497) (= 0 (x613 x497))))
(assert (x1276 x1452))
(assert (=> (>= 10000 x1767) (= 0 (x613 x1767))))
(assert (x1276 x808))
(assert (x1276 x36))
(assert (x1276 x1193))
(assert (= (x1563 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)) x675))
(assert (x1276 x1087))
(assert (= (x1563 (x536 x145 x37 x59)) x59))
(assert (< 10000 (x1074 x145 x667 x560 x693 x620)))
(assert (= x1385 (x1187 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (x1276 x347))
(assert (x1276 x1609))
(assert (x1276 x1666))
(assert (x1276 x848))
(assert (x1276 x688))
(assert (> (x1605 x1310 x1182) 10000))
(assert (x1276 x934))
(assert (x1276 x1530))
(assert (x1276 x491))
(assert (= x128 (x1423 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071))))
(assert (x1276 x1749))
(assert (= (x613 (x536 64 x569 3)) (x536 64 x569 3)))
(assert (not (x1736 (x45 x1310 x260 x321 x167 x1426 x270 x255))))
(assert (< 10000 (x536 x766 x1033 x250)))
(assert (x1276 x1119))
(assert (=> (>= 10000 x1080) (= (x613 x1080) 0)))
(assert (x1736 1099511627775))
(assert (x1276 x1426))
(assert (= (and (not x978) x809) x1637))
(assert (= (x1563 (x536 x1310 x1707 x1687)) x1687))
(assert (x1276 x1358))
(assert (= (x536 x1755 x1529 x1315) (x613 (x536 x1755 x1529 x1315))))
(assert (= x799 (x1423 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (x1276 x1395))
(assert (= true x84))
(assert (=> (>= 10000 x1141) (= (x613 x1141) 0)))
(assert (x1276 x288))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x1276 x5))
(assert (< (x1074 x1271 x1679 x92 x197 x1727) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x613 (x1647 x145 x617 x732 x89)) (x1647 x145 x617 x732 x89)))
(assert (= (and x61 x1593) x1608))
(assert (x1276 x1431))
(assert (= (x613 x1286) (x613 (+ 1 x1286))))
(assert (= (x536 64 x1748 4) (x613 (x536 64 x1748 4))))
(assert (x1736 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (=> (>= 10000 x1565) (= 0 (x613 x1565))))
(assert (=> (>= 10000 x1688) (= 0 (x613 x1688))))
(assert (x1736 16777215))
(assert (=> (>= 10000 x555) (= (x613 x555) 0)))
(assert (= (x1187 (x1647 x1047 x1688 x1212 x341)) x1047))
(assert (=> (>= 10000 x171) (= 0 (x613 x171))))
(assert (x1276 x959))
(assert (< 10000 (x536 64 x660 3)))
(assert (x1276 x903))
(assert (x1276 x1522))
(assert (x1276 x216))
(assert (not (x1736 (x1605 x100 x543))))
(assert (= 3 (x1563 (x536 64 x968 3))))
(assert (not (x1736 (x1605 x1047 x1499))))
(assert (= (x1187 (x45 x145 x1235 x687 x1200 x1734 x1290 x967)) x145))
(assert (= (x1190 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x423))
(assert (x1276 x973))
(assert (x1276 x583))
(assert (x1276 x37))
(assert (x1276 x674))
(assert (x1276 x1103))
(assert (= x557 (x507 (x45 x766 x1052 x451 x557 x1633 x162 x1026))))
(assert (= (x613 (x45 x766 x1052 x451 x557 x1633 x162 x1026)) (x45 x766 x1052 x451 x557 x1633 x162 x1026)))
(assert (x1276 x979))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1605 x100 x543)))
(assert (x1276 x1026))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x100 x396 x616 x304 x1285 x861)))
(assert (= (x1190 (x45 x1310 x260 x321 x167 x1426 x270 x255)) x1426))
(assert (= x866 (and (not x467) x720)))
(assert (x1276 x1005))
(assert (x1276 x1728))
(assert (> (x514 x1755 x1209 x1377 x390 x165 x1303) 10000))
(assert (x1276 x482))
(assert (x1276 x1765))
(assert (=> (<= x858 10000) (= 0 (x613 x858))))
(assert (= (x1187 (x536 64 x1748 4)) 64))
(assert (=> (>= 10000 x579) (= 0 (x613 x579))))
(assert (= (x1563 (x1074 x1271 x1679 x92 x197 x1727)) x92))
(assert (not (x1736 (x536 x766 x1033 x250))))
(assert (x1276 x314))
(assert (x1276 x981))
(assert (= (x1187 (x514 x100 x396 x616 x304 x1285 x861)) x100))
(assert (= x1385 (x1187 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (x1276 x372))
(assert (= (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758) (x613 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x1748 3)))
(assert (= x1271 (x1187 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (=> (<= x1661 10000) (= (x613 x1661) 0)))
(assert (x1276 x179))
(assert (x1276 x1504))
(assert (x1276 x709))
(assert (x1276 x877))
(assert (x1276 x728))
(assert (=> (<= x1507 10000) (= (x613 x1507) 0)))
(assert (x1276 x1081))
(assert (x1276 x752))
(assert (x1276 x922))
(assert (= (x1563 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118)) x1665))
(assert (< (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x613 (+ x104 1)) (x613 x104)))
(assert (=> (>= 10000 x357) (= (x613 x357) 0)))
(assert (= (x1563 (x1074 x100 x1511 x248 x347 x1043)) x248))
(assert (= x154 (x1563 (x1074 x1385 x454 x154 x896 x734))))
(assert (x1276 x1476))
(assert (x1276 x93))
(assert (=> (>= 10000 x1208) (= (x613 x1208) 0)))
(assert (x1276 x1704))
(assert (x1276 x11))
(assert (=> (<= x248 10000) (= (x613 x248) 0)))
(assert (= (x1423 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)) x1450))
(assert (< 10000 (x536 x145 x37 x59)))
(assert (= (x278 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)) x1330))
(assert (= (x613 22264039863272420937079131806861516217942124584529674491290359742488301797376) 0))
(assert (x1276 x870))
(assert (=> (>= 10000 x17) (= 0 (x613 x17))))
(assert (< (x536 x1271 x807 x142) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1187 (x1605 x1310 x1182)) x1310))
(assert (x1276 x918))
(assert (= x668 (x507 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (x1276 x592))
(assert (x1276 x1355))
(assert (x1276 x1712))
(assert (= (x613 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x1276 x220))
(assert (= x1047 (x1187 (x45 x1047 x1395 x986 x619 x579 x470 x1739))))
(assert (= (x1563 (x514 x1047 x254 x794 x1020 x1564 x1364)) x794))
(assert (x1276 x846))
(assert (< 10000 (x1074 x1755 x635 x1389 x1574 x458)))
(assert (x1736 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (= (x1423 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x944))
(assert (x1276 x449))
(assert (x1276 x1055))
(assert (= (x1563 (x514 x766 x701 x344 x746 x1659 x497)) x344))
(assert (= x1618 (=> (and (= (x1324 (+ x763 32)) x1655) (>= 4 x727) (= x716 (* 32 x727)) (= x808 (x912 (- x1189 x763))) (>= x1189 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x763) (< x763 x1189) (<= x763 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1230) (= (+ x793 x393) x327) (= x1046 x327) (<= x763 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x369 x763) x1271) (= x793 (* x727 32)) (= (x1324 (+ x716 x992)) x1230) (= (>= 224 x1271) x1587) (= x824 x727) (= x527 (x912 (- x808 32))) (= x1230 x1189)) (and (=> (and (= x1541 (x369 x649)) (= (ite (= 0 x1271) x1254 (ite (>= 32 x1271) x412 (ite (>= 64 x1271) x367 (ite (<= x1271 96) x725 (ite (<= x1271 128) x904 (ite (<= x1271 160) x1458 (ite (>= 192 x1271) x306 (ite (>= 224 x1271) x48 x1042)))))))) x1195) (= x892 (x1324 (+ x1189 32))) (= (x369 x699) x501) (= x2 (x912 (- x381 32))) (= x55 (x369 x491)) (= (x369 x848) x1045) (= x73 (x1324 (+ 32 x975))) (= x1407 (x1324 (+ x1655 160))) (= (x369 x1562) x1404) (= x914 (x1324 (+ 32 x642))) (= (x369 x1143) x121) (= (x369 x119) x917) (= x555 (x369 x883)) (= (x369 x101) x142) (= x1143 (x1324 (+ 32 x1655))) (= (x912 (- x62 x1189)) x381) (= (x369 x1655) x1771) (= (x1324 (+ x1189 32)) x642) (= x1504 (x1324 (+ x1655 96))) (= (x1324 (+ 32 x1655)) x883) (= x902 (x369 x1655)) (= (x369 x388) x373) (= x807 (x369 x1655)) (= x904 (x1074 x1271 x1679 x92 x197 x1727)) (= x222 (x1324 (+ 128 x1655))) (= (x514 x1271 x1771 x373 x1541 x365 x1045) x1458) (= (x1324 (+ 192 x1655)) x776) (= (x1324 (+ x642 192)) x62) (= (x369 x1312) x1727) (= (x1324 (+ 64 x1655)) x649) (= x1417 (x1324 (+ x1655 96))) (= (x1324 (+ x1655 32)) x101) (= x1455 (x1324 (+ x1655 128))) (= (x1324 (+ x1655 32)) x283) (= (x369 x1455) x646) (= (x369 x1655) x722) (= (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117) x48) (= x1126 (x1324 (+ x1655 64))) (= (x1324 (+ x1655 128)) x848) (= (x1647 x1271 x1352 x121 x1119) x725) (= x367 (x536 x1271 x807 x142)) (= x388 (x1324 (+ 32 x1655))) (= x1562 (x1324 (+ 64 x1655))) (= (x369 x1407) x1509) (= (x369 x222) x944) (= x197 (x369 x1126)) (= x1385 (x28 x1189)) (= (x369 x1655) x1409) (= x236 (x1324 (+ 32 x886))) (= (>= 224 x1385) x741) (= (x1324 (+ 160 x1655)) x1384) (= x306 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) (= x365 (x369 x1504)) (< x1189 x62) (= x1679 (x369 x1655)) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x1189) (<= x1189 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x1189) (<= 1 x1189))) (= (x1324 (+ 64 x1655)) x1719) (= x412 (x1605 x1271 x1409)) (= x491 (x1324 (+ x1655 32))) (= x1119 (x369 x1719)) (= (x369 x1384) x1601) (= x975 (x1324 (+ x914 32))) (= x92 (x369 x283)) (= (x1324 (+ 32 x73)) x886) (= (x1324 (+ x1655 64)) x119) (= x699 (x1324 (+ 96 x1655))) (= x423 (x369 x1417)) (= x1168 (ite (not (= 0 x1581)) 1 0)) (= x1312 (x1324 (+ 96 x1655))) (= (x369 x1655) x1352) (= (x962 0) x1254) (= (x369 x776) x117)) (and (=> (and (and (= x331 (x1324 (+ 32 x892))) (= x1684 (x28 x750)) (= (x1324 (+ x892 128)) x1542) (= (x1324 (+ x892 96)) x498) (= x17 (x28 x1191)) (= x734 (x28 x498)) (= (x514 x1385 x264 x320 x668 x798 x988) x1429) (= x1001 (x28 x892)) (= x1356 (x28 x892)) (= (x28 x200) x1144) (= (x1324 (+ x892 160)) x245) (= x1632 (x1605 x1385 x1461)) (= x289 (x1324 (+ 64 x892))) (= x1482 (x1324 (+ 192 x892))) (= (x28 x696) x798) (= (x1324 (+ 160 x892)) x567) (= (x1324 (+ 96 x892)) x541) (= x668 (x28 x228)) (= (x1324 (+ 32 x892)) x253) (= x1461 (x28 x892)) (= x652 (x1074 x1385 x454 x154 x896 x734)) (= x102 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575)) (= x154 (x28 x1129)) (= (x28 x187) x988) (= (x28 x892) x965) (= x750 (x1324 (+ x892 32))) (= x553 (x28 x245)) (= x264 (x28 x892)) (= (x1324 (+ x892 96)) x696) (= (x28 x322) x896) (= x1080 (x28 x541)) (= (x28 x1482) x1575) (= (x1324 (+ 128 x892)) x864) (= (x1324 (+ x892 64)) x228) (= (x28 x289) x16) (= (x1324 (+ 64 x892)) x200) (= x251 (x28 x567)) (= (x28 x331) x1141) (= x830 (x28 x864)) (= x1308 (x28 x530)) (= (x28 x253) x320) (= x1129 (x1324 (+ x892 32))) (= x868 (x28 x1542)) (= x937 (x962 0)) (= (x1324 (+ x892 64)) x322) (= (x45 x1385 x1356 x17 x16 x1308 x830 x251) x1194) (= (x1324 (+ x892 32)) x891) (= (= x94 x748) x467) (= (x1324 (+ x892 32)) x1191) (= x315 (x28 x891)) (= x187 (x1324 (+ x892 128))) (= (x536 x1385 x965 x315) x276) (= (x1324 (+ x892 96)) x530) (= (ite (= 0 x1385) x937 (ite (>= 32 x1385) x1632 (ite (<= x1385 64) x276 (ite (>= 96 x1385) x378 (ite (>= 128 x1385) x652 (ite (<= x1385 160) x1429 (ite (<= x1385 192) x1194 (ite (<= x1385 224) x102 x1767)))))))) x1156) (= x454 (x28 x892)) (= x360 (x28 x892)) (= x378 (x1647 x1385 x360 x1141 x1004)) (= x1004 (x28 x1066)) (= x1066 (x1324 (+ 64 x892)))) (or (and (not x467) (= x1756 (ite x467 1 0))) (and x467 (= (ite (= x234 x873) 1 0) x1756)))) x685) x741)) x1587))))
(assert (x1276 x1780))
(assert (< (x536 64 x1748 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x165 (x1190 (x514 x1755 x1209 x1377 x390 x165 x1303))))
(assert (not (x1736 (x962 0))))
(assert (= x1734 (x1190 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (x1276 x616))
(assert (x1276 x468))
(assert (= (x1190 (x45 x100 x1283 x913 x211 x477 x799 x575)) x477))
(assert (=> (>= 10000 x1727) (= (x613 x1727) 0)))
(assert (= (x1495 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118)) x465))
(assert (not (x1736 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573))))
(assert (x1276 x1394))
(assert (x1276 x66))
(assert (not (x1736 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (x1276 x1491))
(assert (x1276 x1557))
(assert (x1276 x1640))
(assert (= x1771 (x1495 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (= (x1187 (x1074 x1047 x1477 x247 x505 x1198)) x1047))
(assert (= x22 (=> (and (or (and (not x219) (= 0 x1466)) x219) (= x219 (= 0 x1466))) x915)))
(assert (x1276 x679))
(assert (x1276 x667))
(assert (=> (>= 10000 x749) (= 0 (x613 x749))))
(assert (x1276 x1436))
(assert (x1276 x1038))
(assert (x1276 x155))
(assert (> (x45 x1047 x1395 x986 x619 x579 x470 x1739) 10000))
(assert (= (=> (and (= x961 (not (> x727 4))) (= (x325 x739) x890) (= x382 (x1324 (+ 32 x1036)))) (and x961 (=> (and (= x382 x1189) (= (+ x739 32) x1046) (= 4 x824)) x1618))) x483))
(assert (= x148 (x1495 (x1605 x1755 x148))))
(assert (=> (<= x1366 10000) (= 0 (x613 x1366))))
(assert (= (x613 (x1647 x100 x754 x1545 x899)) (x1647 x100 x754 x1545 x899)))
(assert (= (and (not x1593) x61) x1017))
(assert (= x52 (x1190 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (x1276 x821))
(assert (x1276 x1289))
(assert (> (x514 x1385 x264 x320 x668 x798 x988) 10000))
(assert (not (x1736 (x536 x1271 x807 x142))))
(assert (=> (<= x52 10000) (= 0 (x613 x52))))
(assert (= (x1605 x766 x580) (x613 (x1605 x766 x580))))
(assert (x1276 x799))
(assert (< 10000 (x536 64 x1091 3)))
(assert (x1276 x1283))
(assert (= (x1563 (x536 64 x1748 4)) 4))
(assert (x1276 x1523))
(assert (x1276 x1739))
(assert (< 10000 (x536 64 x1378 4)))
(assert (x1276 x991))
(assert (< 10000 (x1647 x1047 x1688 x1212 x341)))
(assert (x1276 x693))
(assert (x1276 x1681))
(assert (=> (>= 10000 x1755) (= 0 (x613 x1755))))
(assert (x1276 x1622))
(assert (= (x507 (x514 x1271 x1771 x373 x1541 x365 x1045)) x1541))
(assert (= x1489 (x1190 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071))))
(assert (= (x1190 (x1074 x1310 x424 x918 x826 x299)) x299))
(assert (= (x1495 (x536 x1385 x965 x315)) x965))
(assert (x1276 x343))
(assert (= x1575 (x796 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (< 10000 (x1647 x766 x1530 x376 x198)))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x1276 x302))
(assert (=> (<= x105 10000) (= (x613 x105) 0)))
(assert (x1736 18446744073709551615))
(assert (=> (>= 10000 x1633) (= (x613 x1633) 0)))
(assert (x1276 x1083))
(assert (x1276 x398))
(assert (x1276 x1658))
(assert (x1276 x120))
(assert (x1276 x73))
(assert (x1276 x1471))
(assert (x1276 x396))
(assert (x1276 x30))
(assert (x1276 x641))
(assert (=> (<= x184 10000) (= (x613 x184) 0)))
(assert (x1276 x746))
(assert (x1276 x695))
(assert (x1276 x1498))
(assert (x1276 x1731))
(assert (x1276 x575))
(assert (not (x1736 (x514 x1047 x254 x794 x1020 x1564 x1364))))
(assert (> (x45 x1310 x260 x321 x167 x1426 x270 x255) 10000))
(assert (x1276 x321))
(assert (=> (>= 10000 x1182) (= 0 (x613 x1182))))
(assert (=> (>= 10000 x30) (= (x613 x30) 0)))
(assert (< (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x569 3)))
(assert (= x746 (x507 (x514 x766 x701 x344 x746 x1659 x497))))
(assert (x1276 x1337))
(assert (x1276 x1596))
(assert (not (x1736 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (x1276 x1072))
(assert (x1276 x515))
(assert (x1276 x1451))
(assert (x1276 x1626))
(assert (x1276 x970))
(assert (= (x613 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)))
(assert (= 4 (x1563 (x536 64 x1378 4))))
(assert (x1276 x526))
(assert (x1276 x204))
(assert (not (x1736 (x1074 x1755 x635 x1389 x1574 x458))))
(assert (x1276 x997))
(assert (x1276 x298))
(assert (x1276 x340))
(assert (= (or x502 x938) x683))
(assert (x1276 x1778))
(assert (= (x1495 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)) x155))
(assert (=> (>= 10000 x1684) (= 0 (x613 x1684))))
(assert (x1276 x508))
(assert (x1276 x1064))
(assert (x1276 x310))
(assert (x1276 x1756))
(assert (x1276 x902))
(assert (= (x1563 (x536 x1755 x1529 x1315)) x1315))
(assert (> (x1074 x1310 x424 x918 x826 x299) 10000))
(assert (x1276 x1176))
(assert (x1276 x646))
(assert (= (x514 x100 x396 x616 x304 x1285 x861) (x613 (x514 x100 x396 x616 x304 x1285 x861))))
(assert (x1276 x1425))
(assert (= x100 (x1187 (x1647 x100 x754 x1545 x899))))
(assert (x1276 x1310))
(assert (< (x1647 x145 x617 x732 x89) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x55 (x1563 (x45 x1271 x902 x55 x1404 x501 x646 x1509))))
(assert (x1276 x178))
(assert (=> (<= x145 10000) (= (x613 x145) 0)))
(assert (x1276 x1630))
(assert (= x1538 (and x1446 x1547)))
(assert (not (x1736 (x536 x145 x37 x59))))
(assert (x1276 x168))
(assert (x1276 x1706))
(assert (= (x1495 (x45 x145 x1235 x687 x1200 x1734 x1290 x967)) x1235))
(assert (x1276 x414))
(assert (< 10000 (x536 x1755 x1529 x1315)))
(assert (= x1659 (x1190 (x514 x766 x701 x344 x746 x1659 x497))))
(assert (= (or x132 x456 x1298 x21 x316) x279))
(assert (x1276 x1541))
(assert (x1276 x1001))
(assert (x639 x433))
(assert (x1276 x1581))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639870) 0))
(assert (= (x507 (x1647 x1271 x1352 x121 x1119)) x1119))
(assert (= x634 (=> (and (<= x150 1099511627775) (= (x194 1099511627775 x931) x112) (or (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x1076) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x1076) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x1076) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639805)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1076) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639868))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x333) (> x25 x522) (< x333 x1076) (or (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639805) (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (and (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639868) (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639742) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x1076)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1076)) (= x333 (+ x426 64)) (>= 1099511627775 x524) (or (>= x765 115792089237316195423570985008687907853269984665640564039457584007913129639873) (>= 18446744073709551487 x765)) (= (x1372 x765) x875) (= (x1324 (+ x1166 64)) x1067) (= x1777 (x847 x532)) (= x836 (x536 64 x1748 3)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x765) (<= x765 18446744073709551487)) (= x1342 (ite (= x929 x1203) (ite (not (= 0 x1203)) 1 0) (ite (= x1203 x929) 1 0))) (< x25 x1166) (= (x1324 (+ 64 x765)) x426) (= x524 (x1383 x648)) (= (+ x836 5) x1357) (= x25 (x1324 (+ x522 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639870 x765) (= x1742 x875) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x333)) (> x522 x1076) (= x1241 (x256 x309)) (<= 1 x524) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639931) (>= x168 1) (<= x765 18446744073709551550) (= x1103 (x1324 (+ x522 32))) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (>= x765 115792089237316195423570985008687907853269984665640564039457584007913129639873) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x765)) (> x333 x426) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x333)) (= x311 (x1324 (+ x1076 32))) (not (> x112 x150)) (> x426 x765) (= x418 (x1372 x1186)) (= (x1324 (+ x333 64)) x1076) (= (> x1228 0) x1267) (<= x875 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x1076) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x333)) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639931) (= x1342 1) (= (+ 1 x836) x648) (= x1341 (x1324 (+ x333 32))) (= (x1324 (+ 64 x25)) x1166) (= 0 x1777) (= x1186 (x1324 (+ 32 x765))) (= x348 (x1524 x538)) (= x522 (x1324 (+ x1076 64))) (>= 18446744073709551550 x765) (> x1067 x1166) (= x150 (x1383 x648)) (>= 16777215 x1241) (= x929 (x194 1461501637330902918203684832716283019655932542975 x418)) (= (+ x309 1) x538) (or (and (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639742) (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639684)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x1076) (and (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639868)) (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639805) (>= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= (x536 64 x1664 x1357) x532) (not (> x426 x333)) (= (x536 64 x1748 4) x309) (= x1345 1) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1742 (ite (not (= 0 x875)) 1 0))) (and (=> (and (and (= x1624 (> x1228 1)) (<= 1 x1228) (>= 18446744073709551615 x1228)) x1267) (and (=> (and x1624 (and (and (= (x44 x434) x607) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x887) (<= x887 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x33 (+ 32 x1250)) (= (x912 (- x678 95)) x1666) (or (and (> x1666 x887) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666) (<= x887 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1666 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x887 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 340282366920938463463374607431768211455 x607) (<= x125 340282366920938463463374607431768211455) (= (x44 x1250) x592) (= (not (= x607 x125)) x1021) (= (x1324 (+ x592 x1250)) x472) (= x887 (x44 x33)) (= x678 (x912 (- x1348 x1250))) (= x125 (x44 x515)) (= (x1324 (+ 32 x472)) x515) (= x1706 (x1324 (+ x887 x1250))) (= x705 (ite x1021 1 0)) (>= x1228 2) (<= x1228 18446744073709551615) (= (x1324 (+ x1706 32)) x434) (or (and (= (<= x592 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666)) (< x592 x1666)) (and (> x592 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666))) (or (<= x592 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x592))) (or (and (not x1021) (and (= (x44 x1250) x1772) (not (= x368 x1231)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1772)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1772) (<= x1666 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1772 x1666))) (= (x44 x898) x368) (>= 1461501637330902918203684832716283019655932542975 x368) (= x476 (x44 x33)) (= (x44 x510) x1231) (or (and (> x1666 x476) (= (<= x1666 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x476))) (and (> x476 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666))) (or (>= x476 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x476)) (= x510 (x1324 (+ x1250 x476))) (= (x1324 (+ x1250 x1772)) x898) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1772) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1772)) (>= 1461501637330902918203684832716283019655932542975 x1231))) (and x1021 (= x705 1))))) x513) (=> (and (not x1624) (= x987 x1067)) x1600))) (=> (and (not x1267) (and (= x605 x1067) (= 0 x1262))) x74)))))
(assert (x1276 x12))
(assert (x1276 x1217))
(assert (=> (<= x902 10000) (= 0 (x613 x902))))
(assert (=> (>= 10000 x92) (= 0 (x613 x92))))
(assert (x1276 x272))
(assert (x1276 x2))
(assert (x1276 x1492))
(assert (x1276 x429))
(assert (x1276 x1307))
(assert (x1276 x916))
(assert (=> (<= x250 10000) (= 0 (x613 x250))))
(assert (x1276 x19))
(assert (= x612 (and x1 x56)))
(assert (x1276 x1377))
(assert (x1276 x1717))
(assert (x1276 x1253))
(assert (x1276 x1302))
(assert (< (x536 x1755 x1529 x1315) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x967 (x278 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (x1276 x868))
(assert (= (x1495 (x514 x100 x396 x616 x304 x1285 x861)) x396))
(assert (= x754 (x1495 (x1647 x100 x754 x1545 x899))))
(assert (x1276 x458))
(assert (= x1702 (x507 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071))))
(assert (x639 x1412))
(assert (x1276 x815))
(assert (x1276 x858))
(assert (= x1298 (and x420 x161)))
(assert (= (x1423 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758)) x1507))
(assert (x1276 x1315))
(assert (= x562 (=> (and (and (= (x1245 132) x1132) (<= x1132 18446744073709551615) (= x1668 x1500) (= (ite x1775 x1440 x60) x268) (= x1132 x1399) (= (x1245 36) x1664) (= (x1245 4) x1748) (= (x1245 228) x1668) (= x1581 (x1245 100)) (= x1549 x1748) (= x1625 x1306) (= false x669) (= x1630 x632) (>= 18446744073709551615 x216) (>= 1461501637330902918203684832716283019655932542975 x1664) (= x1520 x1664) (= x632 (x1245 196)) (= x1203 x271) (= x216 x1551) (>= 255 x632) x268 (= x230 x1581) (= x1203 (x1245 68)) (= x192 x1221) (= (x1245 164) x216) (= (x1245 260) x192) (= x1625 (x1245 0)) (>= 1461501637330902918203684832716283019655932542975 x1203)) (and (= x487 x931) (and (or (and (not x834) (and (= x708 (* 32 x1228)) (= (+ x1677 32) x534))) x834) (and (= x399 x1500) (= x706 (* x1228 32)) (= (x44 x12) x818) (= x1117 x657) (< x1677 x801) (not (< x1348 x955)) (= x1149 (x549 x749)) (= x1105 (+ x770 63)) (= x280 (+ x157 31)) (>= 18446744073709551615 x818) (= 128 x1491) (= x595 (* 32 x1228)) (= x1221 x350) (< x34 x1677) (= (+ 4 x1132) x12) (= x770 (x194 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1609)) (= x5 x271) (= x328 x1549) (= x657 (x40 x748)) (= (+ x818 x310) x1291) (= x1520 x814) (= x955 (+ x1250 x595)) (= x1476 3686331914) (= (+ 31 x818) x1609) (= x1677 (+ x34 96)) (= x1387 x749) (<= 1 x1473) (> x1348 x280) (<= 1 x831) (= x1753 x1630) (= x783 (+ x12 31)) (= x1250 (+ x157 32)) (<= x1606 127) (not (< x1348 x1291)) (= x494 (+ 160 x818)) (= (+ 32 x12) x310) (<= x1228 18446744073709551615) (= (+ x1473 128) x34) (= x834 (= x1228 0)) (= x831 (x1481 x748)) (= (x44 x157) x1228) (= x801 (+ x1677 x706 32)) (= x1473 (x194 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1105)) (= x336 x230) (> x1348 x783) (= x157 (+ x216 4)) (>= 127 x1606) (not (> x34 x1677)) (= false x202) (= x1519 false) (>= 18446744073709551391 x1473))))) x203)))
(assert (x1276 x63))
(assert (= (x1495 (x514 x1310 x357 x1224 x1060 x1710 x1366)) x357))
(assert (x1276 x327))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (= x1460 (x1495 (x536 64 x1460 3))))
(assert (x1276 x1306))
(assert (x1276 x308))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639684) 0))
(assert (not (x1736 (x536 x1047 x171 x1690))))
(assert (not (x1736 (x1605 x1385 x1461))))
(assert (x1276 x390))
(assert (x1276 x1154))
(assert (=> (>= 10000 x1499) (= 0 (x613 x1499))))
(assert (= (x1187 (x536 x1755 x1529 x1315)) x1755))
(assert (x1276 x1740))
(assert (x1276 x955))
(assert (x1276 x557))
(assert (= x233 (and x422 x895)))
(assert (x1276 x160))
(assert (= x913 (x1563 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (= (x278 (x45 x1047 x1395 x986 x619 x579 x470 x1739)) x1739))
(assert (= x949 (and (not x834) x683)))
(assert (x1276 x1112))
(assert (x1276 x952))
(assert (x1276 x1385))
(assert (= (x1605 x1310 x1182) (x613 (x1605 x1310 x1182))))
(assert (=> (>= 10000 x1378) (= 0 (x613 x1378))))
(assert (= x502 (and x464 x1775)))
(assert (not (x1736 (x536 x1385 x965 x315))))
(assert (x1276 x226))
(assert (x1276 x1409))
(assert (x1276 x1224))
(assert (< (x514 x1310 x357 x1224 x1060 x1710 x1366) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x300))
(assert (=> (>= 10000 x807) (= 0 (x613 x807))))
(assert (= (x1563 (x536 64 x1748 3)) 3))
(assert (= 0 (x613 103603067176188370116793463780953604340491603117933565163376133325037439549440)))
(assert (x1276 x1118))
(assert (x1276 x656))
(assert (= (and x1237 x1386) x710))
(assert (x1276 x1336))
(assert (not (x1736 (x536 64 x70 3))))
(assert (x1276 x1232))
(assert (= x1135 (x278 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071))))
(assert (= (x1495 (x536 64 x1748 3)) x1748))
(assert (x1276 x989))
(assert (x1276 x552))
(assert (not (x1736 (x536 64 x1091 3))))
(assert (x1276 x620))
(assert (= x1271 (x1187 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117))))
(assert (=> (<= x1716 10000) (= 0 (x613 x1716))))
(assert (= (x613 (x1647 x766 x1530 x376 x198)) (x1647 x766 x1530 x376 x198)))
(assert (= (x1495 (x1074 x1385 x454 x154 x896 x734)) x454))
(assert (> (x1647 x1271 x1352 x121 x1119) 10000))
(assert (= (and (not x1738) x740) x1683))
(assert (= x1755 (x1187 (x1074 x1755 x635 x1389 x1574 x458))))
(assert (x1276 x172))
(assert (x1276 x1545))
(assert (=> (<= x1687 10000) (= (x613 x1687) 0)))
(assert (x1276 x1139))
(assert (x1276 x307))
(assert (x1276 x336))
(assert (x1276 x996))
(assert (not (x1736 (x1647 x766 x1530 x376 x198))))
(assert (= (or x173 x180) x740))
(assert (= (=> (and (not (= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x358 (not (> x1228 1))) (= x1394 (x191 x1652)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1652)) (< x1652 x1430) (<= 1 x1223) (= (x1324 (+ 32 x1652)) x1430) (<= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1652) (not (= x1652 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (and (=> (and (= x1430 x605) (= x1394 x1262)) x74) x358)) x700))
(assert (x639 x1105))
(assert (= 3 (x1563 (x536 64 x879 3))))
(assert (= x1572 (=> (and (= x803 (x1324 (+ 32 x1626))) (= x1610 (>= 224 x145)) (= (x1324 (+ 32 x62)) x409) (= x145 (x843 x62)) (not (= x62 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x1626 (x1324 (+ 32 x1219))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x62) (= (x1324 (+ x1031 32)) x1219) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x62) (= x920 (x912 (- x386 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x62) (= x429 (x1324 (+ 160 x409))) (= (x912 (- x429 x62)) x386) (= x606 (x1324 (+ 32 x62))) (= (x1324 (+ 32 x409)) x1031) (< x62 x429) (not (= x62 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x62))) (and x1610 (=> (and (= x1761 (x1324 (+ x606 32))) (= x1200 (x843 x1044)) (= (x843 x606) x37) (= x1708 (x45 x145 x1235 x687 x1200 x1734 x1290 x967)) (= x105 (x843 x1247)) (= (x1324 (+ x606 128)) x238) (= (x1324 (+ x606 96)) x651) (= (x962 0) x1116) (= x839 (x1324 (+ 160 x606))) (= (x1324 (+ 64 x606)) x1044) (= (x1324 (+ 160 x606)) x88) (= x1413 x429) (= (x843 x372) x1290) (= (x843 x869) x620) (= (x843 x204) x1731) (= x1734 (x843 x651)) (= (x536 x145 x37 x59) x537) (= x89 (x843 x1093)) (= x827 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) (= x664 (x1605 x145 x1571)) (= x1365 (x1324 (+ 32 x606))) (= x1447 (x514 x145 x665 x858 x105 x99 x1318)) (= x688 (x1324 (+ 96 x606))) (= x869 (x1324 (+ 96 x606))) (= x30 (x843 x606)) (= x1615 (x1324 (+ x606 32))) (= (x843 x1406) x693) (= (x1324 (+ 32 x606)) x980) (= x1493 (x843 x828)) (= x95 x1275) (= x1179 (x843 x1533)) (= (x843 x88) x967) (= (x843 x813) x858) (= (x1324 (+ 128 x606)) x372) (= (x843 x1615) x59) (= (x1324 (+ x606 64)) x1247) (= (x843 x1523) x97) (= (x843 x1365) x732) (= x813 (x1324 (+ x606 32))) (= (x1074 x145 x667 x560 x693 x620) x707) (= x95 (ite (= 0 x145) x1116 (ite (>= 32 x145) x664 (ite (<= x145 64) x537 (ite (>= 96 x145) x1700 (ite (>= 128 x145) x707 (ite (<= x145 160) x1447 (ite (<= x145 192) x1708 (ite (<= x145 224) x827 x1728))))))))) (= x1700 (x1647 x145 x617 x732 x89)) (= (x1324 (+ 64 x606)) x1093) (= (x843 x606) x667) (= x617 (x843 x606)) (= (x843 x1761) x687) (= x1571 (x843 x606)) (= x1533 (x1324 (+ 32 x606))) (= x226 (x843 x839)) (= (x843 x688) x116) (= (x843 x238) x1318) (= x560 (x843 x980)) (= x828 (x1324 (+ 192 x606))) (= (x843 x606) x1235) (= (x1324 (+ x606 64)) x1406) (= (x1324 (+ x606 128)) x1523) (= (x843 x392) x99) (= x392 (x1324 (+ x606 96))) (= (x1324 (+ x606 64)) x204) (= (x843 x606) x665)) x1270)))))
(assert (=> (>= 10000 x1450) (= 0 (x613 x1450))))
(assert (not (x1736 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (< 10000 (x1647 x100 x754 x1545 x899)))
(assert (x1276 x462))
(assert (= (x1190 (x1074 x1385 x454 x154 x896 x734)) x734))
(assert (x1736 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (=> (<= x167 10000) (= 0 (x613 x167))))
(assert (=> (>= 10000 x799) (= 0 (x613 x799))))
(assert (x1276 x436))
(assert (x1276 x1345))
(assert (=> (>= 10000 x896) (= (x613 x896) 0)))
(assert (x1276 x419))
(assert (not (x1736 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (= (=> (and (and (and (= false x974) (= (x1648 800) x295) (= x1003 false) (= (+ x387 1) x352) (= (x445 x303) x1438) (= 911662625 x1494) (= x1758 x1331) (<= x811 1099511627775) (= (x790 x303) x911) (= x1005 36) (= (x1104 x352) x1403) (= x829 (x1648 896)) (= x111 x547) (= (x1648 960) x1740) (= x1201 x1673) (= (x1648 832) x1331) (= x1100 x660) (= (+ 1 x330) x303) (= (x7 x303) x127) (= false x1614) (= x1321 x1740) (= x111 (x1648 928)) (= false x976) (= x602 x829) (<= x911 1099511627775) (= x1662 x812) (<= x1094 1099511627775) (<= x389 127) (>= x1531 1) (<= x1438 255) (= x370 (ite (not (= (ite (not (= 0 x1438)) 1 0) 0)) 1 0)) (= (x919 x387) x417) (= (x536 64 x660 3) x330) (= x1735 x295) (>= 340282366920938463463374607431768211455 x127) (= x1013 x852) (= x1018 (+ 1 x303)) (<= x999 340282366920938463463374607431768211455) (= x1531 (x1481 x748)) (= x1619 x1248) (= (x1648 864) x1013) (= x588 x1248) (= x1619 x461) (= x1094 (x977 x303)) (>= 127 x389) (= false x838) (= x1673 (x1648 768)) (= (x1383 x303) x811) (= (x413 x1018) x999) (= x812 (x1648 704)) (= x387 (+ x1018 1)) (= x1061 false)) (and (and (= x1440 x210) (= x60 x789) (>= x531 1) (>= 127 x1654) (= false x1124) (>= 127 x1654) (= x991 x141) (= (x1405 256) x991) (= false x771) (= x1279 false) (= false x849) (= (+ 1 x294) x1694) (= (x256 x294) x1148) (>= 16777215 x1148) (= (x536 64 x1378 4) x294) (= x855 4067465820) (= x860 false) (= x19 (x1524 x1694)) (= x210 (= x1735 x1516)) (= false x86) (= x531 (x1481 x748)) (= x1378 x1075) (= x1516 (+ x1181 x141))) (and (= (x919 x1468) x1167) (= x39 x1238) (= x1010 (x591 768)) (= 911662625 x1649) (= x1062 x1435) (= x1561 (+ x954 1)) (= false x1328) (= false x1766) (= 36 x462) (= (x413 x1561) x926) (= x1238 x461) (= (x591 960) x1256) (= x258 (x1383 x954)) (>= 1099511627775 x1068) (= (x790 x954) x1240) (= x1264 x853) (= x1075 x39) (>= 255 x1015) (= x1227 false) (= x569 x588) (<= x1240 1099511627775) (= x1002 x403) (= x1010 x1181) (= (x591 704) x1217) (= (x977 x954) x1068) (= x1015 (x445 x954)) (= (x591 832) x853) (= x1468 (+ x1561 1)) (>= 127 x223) (= x1062 (x591 864)) (= x870 x1578) (<= x258 1099511627775) (= x772 x1256) (= x870 (x591 928)) (= x1292 (ite (not (= (ite (not (= x1015 0)) 1 0) 0)) 1 0)) (= false x68) (= x1300 x905) (>= 127 x223) (= (x536 64 x569 3) x1512) (>= 340282366920938463463374607431768211455 x926) (<= 1 x752) (= (x1104 x647) x597) (= x647 (+ 1 x1468)) (= x548 false) (= (x1481 x748) x752) (= false x113) (= x905 (x591 800)) (= x1199 x1217) (= x954 (+ x1512 1)) (= (x591 896) x1002) (<= x1557 340282366920938463463374607431768211455) (= (x7 x954) x1557)))) (and (= x461 x292) (= 36 x1242) (= x963 x292) (= x1100 x963))) x562) x29))
(assert (< (x45 x145 x1235 x687 x1200 x1734 x1290 x967) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1131 x1105))
(assert (x1276 x512))
(assert (= x1755 (x1187 (x514 x1755 x1209 x1377 x390 x165 x1303))))
(assert (= (x1605 x1385 x1461) (x613 (x1605 x1385 x1461))))
(assert (x1276 x119))
(assert (=> (<= x424 10000) (= (x613 x424) 0)))
(assert (< 10000 (x536 x1047 x171 x1690)))
(assert (=> (<= x1135 10000) (= 0 (x613 x1135))))
(assert (x1276 x1672))
(assert (< (x536 64 x879 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x326))
(assert (=> (>= 10000 x477) (= 0 (x613 x477))))
(assert (x1276 x1346))
(assert (x1276 x516))
(assert (= (x1074 x1385 x454 x154 x896 x734) (x613 (x1074 x1385 x454 x154 x896 x734))))
(assert (x1276 x875))
(assert (x1276 x214))
(assert (not (x1736 (x536 64 x140 4))))
(assert (= (x1190 (x1074 x1047 x1477 x247 x505 x1198)) x1198))
(assert (x1276 x1664))
(assert (< 10000 (x514 x1310 x357 x1224 x1060 x1710 x1366)))
(assert (= (x613 x1487) (x613 (+ 1 x1487))))
(assert (=> (<= x722 10000) (= (x613 x722) 0)))
(assert (x1276 x1655))
(assert (= x968 (x1495 (x536 64 x968 3))))
(assert (=> (<= x1665 10000) (= (x613 x1665) 0)))
(assert (= (x1423 (x514 x100 x396 x616 x304 x1285 x861)) x861))
(assert (x1276 x1604))
(assert (= x1196 (and x1229 x1049)))
(assert (=> (>= 10000 x59) (= 0 (x613 x59))))
(assert (x1276 x116))
(assert (< (x1074 x1385 x454 x154 x896 x734) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1423 (x514 x1047 x254 x794 x1020 x1564 x1364)) x1364))
(assert (x1276 x651))
(assert (= (x613 (+ 1 x499)) (x613 x499)))
(assert (x1276 x498))
(assert (x1736 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x1276 x1601))
(assert (x1276 x366))
(assert (=> (>= 10000 x211) (= (x613 x211) 0)))
(assert (x1276 x988))
(assert (= (x796 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)) x1071))
(assert (= (and (not x1267) x1650) x1165))
(assert (x1276 x701))
(assert (< (x45 x1047 x1395 x986 x619 x579 x470 x1739) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1196 (not x1501)) x1536))
(assert (x1276 x1427))
(assert (x1276 x1744))
(assert (x1736 18446744073709551391))
(assert (x1276 x408))
(assert (x1276 x642))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= x1308 (x1190 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (x1276 x687))
(assert (x639 1099511627775))
(assert (x1276 x371))
(assert (x1276 x567))
(assert (x1276 x1382))
(assert (x1276 x1069))
(assert (x1276 x599))
(assert (x1276 x1583))
(assert (x1276 x1654))
(assert (= (x1495 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)) x1338))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1514)) (= (x1324 (+ x1514 32)) x1382) (= x149 (x759 x1514)) (= (> x149 0) x469) (= x178 (x1324 (+ 32 x447))) (not (= x1514 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x1514 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1324 (+ 96 x1514)) x482) (= x342 (x1324 (+ x1382 32))) (= (x1324 (+ x235 32)) x1485) (< x1514 x482) (= (x1324 (+ x195 139)) x1431) (= x195 (x1324 (+ 32 x482))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1514)) (= x447 (x1324 (+ 32 x195))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1514) (= (x1324 (+ 32 x178)) x235) (<= x1514 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (and (= (> x149 32) x1) (= x1591 (x759 x1382))) x469) (and (=> (and x1 (and (= (x645 x936) x137) (= (x1324 (+ 32 x1382)) x936) (= x738 (> x149 64)) (= x1451 (x1324 (+ x1431 32))))) (and (=> (not x738) x1380) (=> (and (and (= (x1324 (+ 64 x1382)) x1751) (= x420 (< 96 x149)) (= (x175 x1751) x792) (= (x1324 (+ 64 x1431)) x690)) x738) (and (=> x420 x1711) (=> (not x420) x1380))))) (=> (not x1) x1380))) (=> (not x469) x1380))) x435))
(assert (=> (>= 10000 x1505) (= (x613 x1505) 0)))
(assert (x1276 x425))
(assert (= x1271 (x1187 (x1605 x1271 x1409))))
(assert (x1736 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (=> (<= x543 10000) (= 0 (x613 x543))))
(assert (= (x507 (x514 x145 x665 x858 x105 x99 x1318)) x105))
(assert (not (x1736 (x1647 x1385 x360 x1141 x1004))))
(assert (= (x613 (x536 x766 x1033 x250)) (x536 x766 x1033 x250)))
(assert (=> (>= 10000 x826) (= 0 (x613 x826))))
(assert (= x74 (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x605)) (>= 340282366920938463463374607431768211455 x1262) (not (= x605 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x578 (= x1581 0)) (> x1374 x605) (<= x605 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x605)) (= (x1324 (+ x605 64)) x1374) (>= x1262 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x605) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x605)) (or (and (and (<= 1 x308) (<= x308 340282366920938463463374607431768211455) (= x1262 x508) (<= x939 340282366920938463463374607431768211454) (= x1082 (+ x648 1)) (= (x413 x1082) x939) (= (+ x939 x1262) x308)) x578) (and (not x578) (and (>= x262 1) (>= 340282366920938463463374607431768211454 x1288) (= x262 (+ x1262 x1288)) (<= x262 340282366920938463463374607431768211455) (= (x7 x648) x1288) (= x1262 x508))))) x542)))
(assert (x1276 x863))
(assert (= x909 (x507 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (= 0 (x613 39095828447348766818467541868648093896559026261938444753180772323039453799525)))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (not (x1736 (x536 64 x1378 4))))
(assert (x1276 x197))
(assert (= (x1563 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575)) x1684))
(assert (= x305 (and (not x457) x279)))
(assert (not (x1736 (x1074 x1385 x454 x154 x896 x734))))
(assert (= (x278 (x45 x100 x1283 x913 x211 x477 x799 x575)) x575))
(assert (x1276 x1684))
(assert (= (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118) (x613 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (= (x1187 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) x1755))
(assert (x1276 x983))
(assert (=> (>= 10000 x16) (= 0 (x613 x16))))
(assert (=> (>= 10000 x732) (= 0 (x613 x732))))
(assert (< 10000 (x1074 x1385 x454 x154 x896 x734)))
(assert (x1276 x299))
(assert (= 0 (x613 18446744073709551487)))
(assert (= (and x1386 (not x1237)) x593))
(assert (x1276 x829))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (x1276 x240))
(assert (< (x1647 x1385 x360 x1141 x1004) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x71))
(assert (x1276 x1511))
(assert (x1276 x213))
(assert (= x1356 (x1495 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (x1276 x187))
(assert (x1276 x1696))
(assert (x1276 x1141))
(assert (= (x613 22700451088272681866486206289545017091351513107057952373946396474207578882048) 0))
(assert (x1276 x610))
(assert (x1276 x1042))
(assert (> (x536 64 x1309 4) 10000))
(assert (x1276 x1567))
(assert (x1276 x671))
(assert (x1276 x1454))
(assert (= 64 (x1187 (x536 64 x660 3))))
(assert (x1276 x34))
(assert (= (x1495 (x536 64 x1378 4)) x1378))
(assert (x1276 x1257))
(assert (x1736 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (= (x613 (+ x257 1)) (x613 x257)))
(assert (x1276 x1366))
(assert (= (x1563 (x45 x145 x1235 x687 x1200 x1734 x1290 x967)) x687))
(assert (=> (>= 10000 x1748) (= 0 (x613 x1748))))
(assert (=> (>= 10000 x215) (= (x613 x215) 0)))
(assert (< (x536 64 x70 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1190 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x116))
(assert (x1276 x444))
(assert (x1276 x1285))
(assert (x1276 x530))
(assert (x1276 x1633))
(assert (=> (>= 10000 x552) (= 0 (x613 x552))))
(assert (= x1371 (and x1226 x1607)))
(assert (x1276 x879))
(assert (x1736 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (x1276 x1568))
(assert (x1276 x27))
(assert (=> (>= 10000 x986) (= 0 (x613 x986))))
(assert (x1276 x635))
(assert (= 64 (x1187 (x536 64 x569 3))))
(assert (x1276 x1548))
(assert (x1276 x675))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x613 4294967295) 0))
(assert (= (x1563 (x514 x100 x396 x616 x304 x1285 x861)) x616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x45 x766 x1052 x451 x557 x1633 x162 x1026)))
(assert (x1736 1461501637330902918203684832716283019655932542975))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (x1276 x1215))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (x1276 x569))
(assert (x1276 x798))
(assert (= (x1495 (x514 x1755 x1209 x1377 x390 x165 x1303)) x1209))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x579 (x1190 (x45 x1047 x1395 x986 x619 x579 x470 x1739))))
(assert (x1276 x389))
(assert (= (x613 (x514 x1755 x1209 x1377 x390 x165 x1303)) (x514 x1755 x1209 x1377 x390 x165 x1303)))
(assert (= x667 (x1495 (x1074 x145 x667 x560 x693 x620))))
(assert (x1276 x1341))
(assert (=> (>= 10000 x70) (= 0 (x613 x70))))
(assert (x1276 x1203))
(assert (= 0 (x613 37749366859872002549862985897619888669665948435824635674531347399775013991474)))
(assert (x1276 x1146))
(assert (=> (>= 10000 x1541) (= (x613 x1541) 0)))
(assert (= x1151 (x1563 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (x1276 x1687))
(assert (x1276 x224))
(assert (=> (<= x569 10000) (= (x613 x569) 0)))
(assert (x1276 x238))
(assert (x1276 x1733))
(assert (= x1052 (x1495 (x45 x766 x1052 x451 x557 x1633 x162 x1026))))
(assert (= (x1647 x1310 x1111 x1780 x184) (x613 (x1647 x1310 x1111 x1780 x184))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (< 10000 (x45 x1385 x1356 x17 x16 x1308 x830 x251)))
(assert (x1276 x556))
(assert (x1276 x781))
(assert (= (and x1637 x927) x598))
(assert (= x61 (or x712 x1145)))
(assert (x1276 x1575))
(assert (= (x1187 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)) x1047))
(assert (x1276 x1514))
(assert (= (x613 x309) (x613 (+ x309 1))))
(assert (x1276 x595))
(assert (=> (>= 10000 x1595) (= 0 (x613 x1595))))
(assert (=> (>= 10000 x55) (= 0 (x613 x55))))
(assert (x1736 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (= (x507 (x1647 x1385 x360 x1141 x1004)) x1004))
(assert (< (x536 x1047 x171 x1690) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x1209))
(assert (not (x1736 (x536 64 x569 3))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (x1276 x545))
(assert (= (x278 (x45 x766 x1052 x451 x557 x1633 x162 x1026)) x1026))
(assert (= (x1563 (x536 x100 x36 x398)) x398))
(assert (not (x1736 (x536 64 x1664 x1357))))
(assert (=> (>= 10000 x121) (= (x613 x121) 0)))
(assert (not (x1736 (x514 x100 x396 x616 x304 x1285 x861))))
(assert (= x617 (x1495 (x1647 x145 x617 x732 x89))))
(assert (x1276 x1564))
(assert (x1276 x159))
(assert (x1276 x35))
(assert (= (and x1726 x578) x712))
(assert (x1276 x1097))
(assert (x1276 x496))
(assert (x1276 x926))
(assert (x1276 x223))
(assert (x1276 x1406))
(assert (x1276 x1526))
(assert (= x868 (x1423 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (= (x1187 (x536 64 x1309 4)) 64))
(assert (> (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071) 10000))
(assert (x1276 x1398))
(assert (< (x1074 x1047 x1477 x247 x505 x1198) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x580))
(assert (= (x1563 (x45 x1047 x1395 x986 x619 x579 x470 x1739)) x986))
(assert (x1276 x960))
(assert (x1276 x857))
(assert (x1276 x1531))
(assert (x1276 x1066))
(assert (x1276 x472))
(assert (= x1607 (or x1261 x489 x233 x856 x239)))
(assert (x1276 x147))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1605 x1310 x1182)))
(assert (=> (>= 10000 x868) (= 0 (x613 x868))))
(assert (x1276 x1551))
(assert (x1276 x1442))
(assert (=> (>= 10000 x340) (= (x613 x340) 0)))
(assert (= 0 (x613 22703984782402238635145372884546502928383168074851703611862639686610164121600)))
(assert (> (x514 x145 x665 x858 x105 x99 x1318) 10000))
(assert (=> (>= 10000 x1026) (= (x613 x1026) 0)))
(assert (x1736 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (x1276 x192))
(assert (x1276 x486))
(assert (x1276 x1032))
(assert (x1276 x1126))
(assert (= x162 (x1423 (x45 x766 x1052 x451 x557 x1633 x162 x1026))))
(assert (x1276 x430))
(assert (=> (>= 10000 x226) (= (x613 x226) 0)))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1276 x92))
(assert (=> (>= 10000 x1330) (= 0 (x613 x1330))))
(assert (x1276 x1024))
(assert (x1276 x1110))
(assert (= (x613 (x536 x1310 x1707 x1687)) (x536 x1310 x1707 x1687)))
(assert (=> (>= 10000 x1679) (= 0 (x613 x1679))))
(assert (x1276 x33))
(assert (= (x1495 (x1647 x766 x1530 x376 x198)) x1530))
(assert (=> (<= x197 10000) (= (x613 x197) 0)))
(assert (x1276 x1008))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639868)))
(assert (x1276 x331))
(assert (= x1212 (x1563 (x1647 x1047 x1688 x1212 x341))))
(assert (x1276 x1138))
(assert (x1276 x1560))
(assert (x1276 x101))
(assert (= (x1647 x1271 x1352 x121 x1119) (x613 (x1647 x1271 x1352 x121 x1119))))
(assert (= (x1423 (x514 x145 x665 x858 x105 x99 x1318)) x1318))
(assert (< (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x149))
(assert (x1276 x185))
(assert (x1276 x99))
(assert (x1276 x1714))
(assert (not (x1736 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (not (x1736 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071))))
(assert (x1276 x889))
(assert (= (x1187 (x536 64 x1091 3)) 64))
(assert (x1276 x967))
(assert (= (x1495 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) x902))
(assert (= x1047 (x1187 (x514 x1047 x254 x794 x1020 x1564 x1364))))
(assert (x1276 x1396))
(assert (= (x536 x100 x36 x398) (x613 (x536 x100 x36 x398))))
(assert (< 10000 (x1647 66 x1716 x815 x1396)))
(assert (= 3 (x1563 (x536 64 x70 3))))
(assert (= (x796 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)) x1573))
(assert (x1276 x1208))
(assert (x1276 x1352))
(assert (x1276 x476))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x1276 x1290))
(assert (=> (>= 10000 x1310) (= (x613 x1310) 0)))
(assert (=> (>= 10000 x766) (= (x613 x766) 0)))
(assert (x1276 x802))
(assert (x1276 x1461))
(assert (x1276 x232))
(assert (x1276 x525))
(assert (x1276 x1741))
(assert (=> (>= 10000 x1477) (= (x613 x1477) 0)))
(assert (x1276 x89))
(assert (=> (>= 10000 x1091) (= 0 (x613 x1091))))
(assert (=> (<= x198 10000) (= 0 (x613 x198))))
(assert (not (x1736 (x536 64 x1460 3))))
(assert (x1276 x70))
(assert (=> (>= 10000 x1283) (= 0 (x613 x1283))))
(assert (= x1141 (x1563 (x1647 x1385 x360 x1141 x1004))))
(assert (x1276 x1288))
(assert (= (x1074 x1755 x635 x1389 x1574 x458) (x613 (x1074 x1755 x635 x1389 x1574 x458))))
(assert (x1276 x1544))
(assert (x1276 x1716))
(assert (= (or x593 x1272) x590))
(assert (=> (<= x668 10000) (= (x613 x668) 0)))
(assert (x1276 x211))
(assert (= (x1495 (x514 x145 x665 x858 x105 x99 x1318)) x665))
(assert (x1276 x1499))
(assert (= x1045 (x1423 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (x1276 x117))
(assert (=> (<= x557 10000) (= (x613 x557) 0)))
(assert (x1276 x816))
(assert (x1276 x861))
(assert (x1276 x1671))
(assert (x1276 x739))
(assert (x1276 x1577))
(assert (> (x536 64 x569 3) 10000))
(assert (x1276 x1222))
(assert (x1276 x418))
(assert (= (x613 x387) (x613 (+ 1 x387))))
(assert (x1276 x994))
(assert (< (x1074 x145 x667 x560 x693 x620) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1736 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (= (x507 (x1074 x1047 x1477 x247 x505 x1198)) x505))
(assert (x1276 x1586))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x1271 x1771 x373 x1541 x365 x1045)))
(assert (x1276 x1132))
(assert (= (=> (and (= (x1324 (+ x556 96)) x1214) (= (not (> x1388 128)) x218) (= (x570 256) x1398)) (and x1411 x218)) x833))
(assert (= x360 (x1495 (x1647 x1385 x360 x1141 x1004))))
(assert (= x180 (and x106 x1332)))
(assert (x1276 x1460))
(assert (=> (>= 10000 x315) (= 0 (x613 x315))))
(assert (x1276 x1356))
(assert (x1276 x393))
(assert (= x464 (or x286 x1656)))
(assert (x1276 x589))
(assert (= (x1187 (x1074 x1385 x454 x154 x896 x734)) x1385))
(assert (x1276 x423))
(assert (= x63 (x1495 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (x1276 x1219))
(assert (x1276 x118))
(assert (> (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573) 10000))
(assert (= (=> (and (or (and (and (= x168 1) (<= 64 x1361) (>= 4294967295 x1361)) x1226) (and (not x1226) (= x1130 x168))) (and (= x1226 (> x1130 0)) (= (x912 (- x671 x765)) x1011) (>= x1361 64) (= x1022 (x1324 (+ x1388 x556))) (= (x194 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1412) x1355) (<= x1361 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1324 (+ x1388 31)) x1412) (= x671 (x1324 (+ x1355 x556))))) x634) x1411))
(assert (x1276 x1367))
(assert (x1276 x1404))
(assert (= (x1190 (x1074 x1271 x1679 x92 x197 x1727)) x1727))
(assert (= x631 (x507 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573))))
(assert (=> (<= x142 10000) (= 0 (x613 x142))))
(assert (< 10000 (x1074 x766 x1299 x885 x212 x908)))
(assert (=> (<= x314 10000) (= 0 (x613 x314))))
(assert (x1276 x1525))
(assert (x1276 x1762))
(assert (not (x1736 (x1074 x1047 x1477 x247 x505 x1198))))
(assert (x1276 x1179))
(assert (x1276 x247))
(assert (x1276 x573))
(assert (x1276 x77))
(assert (=> (<= x1389 10000) (= (x613 x1389) 0)))
(assert (x1736 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x1276 x1182))
(assert (x1276 x350))
(assert (=> (>= 10000 x817) (= (x613 x817) 0)))
(assert (x1276 x765))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x1276 x874))
(assert (x1276 x1635))
(assert (= (x796 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x117))
(assert (x1276 x801))
(assert (= (x1190 (x1074 x145 x667 x560 x693 x620)) x620))
(assert (= (x613 x252) (x613 (+ x252 1))))
(assert (=> (<= x454 10000) (= 0 (x613 x454))))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639715) 0))
(assert (=> (>= 10000 x619) (= 0 (x613 x619))))
(assert (= (x613 (x536 64 x660 3)) (x536 64 x660 3)))
(assert (= x1690 (x1563 (x536 x1047 x171 x1690))))
(assert (=> (>= 10000 x1060) (= 0 (x613 x1060))))
(assert (= 4 (x1563 (x536 64 x1309 4))))
(assert (x1276 x1659))
(assert (x1276 x1455))
(assert (= (x613 4067465820) 0))
(assert (x1276 x1417))
(assert (= (x1495 (x514 x1047 x254 x794 x1020 x1564 x1364)) x254))
(assert (x1276 x940))
(assert (= x569 (x1495 (x536 64 x569 3))))
(assert (x1276 x898))
(assert (x1276 x1755))
(assert (x1276 x1754))
(assert (x1276 x386))
(assert (x1276 x142))
(assert (=> (<= x1710 10000) (= 0 (x613 x1710))))
(assert (=> (>= 10000 x1047) (= 0 (x613 x1047))))
(assert (x1276 x1625))
(assert (x1276 x157))
(assert (= (x613 (+ 1 x1682)) (x613 x1682)))
(assert (x1276 x871))
(assert (= (and (not x1332) x106) x173))
(assert (x1276 x1543))
(assert (x1276 x262))
(assert (x1276 x333))
(assert (x1276 x315))
(assert (= x37 (x1495 (x536 x145 x37 x59))))
(assert (< 10000 (x536 64 x1460 3)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1605 x1047 x1499)))
(assert (=> (>= 10000 x748) (= 0 (x613 x748))))
(assert (= (x1423 (x514 x766 x701 x344 x746 x1659 x497)) x497))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758)))
(assert (=> (>= 10000 x1301) (= (x613 x1301) 0)))
(assert (x1276 x391))
(assert (=> (<= x861 10000) (= (x613 x861) 0)))
(assert (= (x1605 x1755 x148) (x613 (x1605 x1755 x148))))
(assert (x1276 x1191))
(assert (x1276 x1620))
(assert (=> (>= 10000 x470) (= (x613 x470) 0)))
(assert (x1276 x794))
(assert (= (and x1267 x1650) x1420))
(assert (=> (>= 10000 x754) (= 0 (x613 x754))))
(assert (x1276 x747))
(assert (x1276 x911))
(assert (x1276 x348))
(assert (= (=> (and (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x1297) (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x1297)) (and (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639869))) (= (x1324 (+ 32 x1416)) x220) (= x1115 (x1324 (+ 32 x1416))) (= x1310 (x1400 x1416)) (= (x194 1461501637330902918203684832716283019655932542975 x433) x658) (= x953 (x1324 (+ 32 x764))) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x1297) (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639869 x1297)) (and (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639715) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639806))) (= (x1324 (+ 32 x1297)) x526) (= (x1324 (+ 32 x179)) x363) (= (x1324 (+ x1297 64)) x179) (< x179 x1416) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x1297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x1297) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= x764 (x1324 (+ 32 x220))) (= x644 9) (= (+ x488 1) x82) (<= x1664 1461501637330902918203684832716283019655932542975) (= (x536 64 x1748 4) x488) (= x1390 (>= 224 x1310)) (> x179 x1297) (= (x1324 (+ 64 x179)) x1416) (= (x912 (- x953 x1416)) x1336) (> x953 x1416) (= (ite (= x658 x1203) (ite (not (= (x194 1461501637330902918203684832716283019655932542975 x433) 0)) 1 0) (ite (= x1203 x658) 1 0)) x729) (<= 1 x1664) (= 1 x729) (or (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639711) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x1297) (>= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639715)) (and (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1297)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1297)) (= (x1524 x82) x1040) (= (x912 (- x1336 32)) x1502)) (and (=> (and (= x1604 (x1324 (+ x1115 32))) (= x566 (x1605 x1310 x1182)) (= x1450 (x1400 x1471)) (= (x1400 x680) x52) (= (x1400 x930) x1060) (= (x1324 (+ 32 x1115)) x1764) (= x1707 (x1400 x1115)) (= (x1074 x1310 x424 x918 x826 x299) x1133) (= (x1400 x1762) x184) (= (x1324 (+ x1115 64)) x568) (= x1184 (x1324 (+ x1115 96))) (= (x1324 (+ 32 x953)) x1282) (= (x1400 x1115) x1182) (= (>= 224 x1755) x563) (= x1570 (x514 x1310 x357 x1224 x1060 x1710 x1366)) (= (x1400 x973) x321) (= x255 (x1400 x300)) (= (x912 (- x765 x953)) x825) (= x897 (x1324 (+ 128 x1115))) (= (x1400 x1115) x63) (= x1426 (x1400 x662)) (= x1710 (x1400 x525)) (= (x1400 x1764) x918) (= (x1400 x1184) x299) (= (x1324 (+ x1548 32)) x224) (= (x1647 x1310 x1111 x1780 x184) x1028) (= x662 (x1324 (+ x1115 96))) (= x1596 (x1324 (+ x1115 64))) (= x177 (ite (= x1310 0) x345 (ite (>= 32 x1310) x566 (ite (<= x1310 64) x338 (ite (>= 96 x1310) x1028 (ite (>= 128 x1310) x1133 (ite (>= 160 x1310) x1570 (ite (>= 192 x1310) x1233 (ite (<= x1310 224) x1173 x46))))))))) (= x1471 (x1324 (+ 128 x1115))) (= (x1400 x897) x270) (= (x1400 x743) x894) (= x1687 (x1400 x1604)) (= (x1400 x568) x167) (= (x1324 (+ 32 x1115)) x1539) (= (x1324 (+ x1115 32)) x973) (= x1173 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)) (= (x448 x953) x1755) (= x525 (x1324 (+ 96 x1115))) (= x1224 (x1400 x1539)) (= x680 (x1324 (+ 96 x1115))) (= (x1324 (+ x1115 160)) x1222) (= (x1324 (+ 32 x953)) x1548) (= (x1400 x1115) x1111) (= (x1324 (+ x1115 32)) x1670) (= (x1400 x1599) x1554) (= (x1324 (+ x224 32)) x765) (= x1599 (x1324 (+ x1115 192))) (= x826 (x1400 x1596)) (= x441 (x1324 (+ 32 x1115))) (< x953 x765) (= x533 (x1400 x1222)) (= (x1324 (+ x1115 64)) x1762) (= x1366 (x1400 x1721)) (= (x912 (- x825 32)) x1281) (= (x1400 x1670) x1780) (= (x1324 (+ x1115 64)) x930) (or (and (<= x953 157) (>= x953 98)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x953) (<= 161 x953)) (and (<= x953 94) (<= 3 x953)) (and (<= x953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639844 x953))) (= x260 (x1400 x1115)) (= (x1324 (+ 64 x1115)) x743) (= x1233 (x45 x1310 x260 x321 x167 x1426 x270 x255)) (= x1721 (x1324 (+ 128 x1115))) (= (x962 0) x345) (= (x1400 x441) x340) (= (x1324 (+ x1115 160)) x300) (= (x536 x1310 x1707 x1687) x338) (= x357 (x1400 x1115)) (= x424 (x1400 x1115))) (and (=> (and (= x556 (x1324 (+ x702 32))) (= x458 (x448 x120)) (= x120 (x1324 (+ x1282 96))) (= (x962 0) x442) (= (x1324 (+ x1282 128)) x408) (= x58 (x1324 (+ 32 x1282))) (= x209 (x1324 (+ 64 x1282))) (= (x1324 (+ 64 x1282)) x889) (= (x1324 (+ x1282 96)) x232) (= x1315 (x448 x217)) (= x465 (x448 x1282)) (= (x1324 (+ 64 x1282)) x1125) (= x1388 (x480 128)) (= x213 (x448 x58)) (= x1490 (x1324 (+ x1282 96))) (= x158 (x1605 x1755 x148)) (= (x448 x1280) x215) (= (x448 x1490) x1301) (= x1280 (x1324 (+ 160 x1282))) (= (x448 x496) x1377) (= (x1324 (+ 128 x1282)) x1070) (= (x1647 x1755 x414 x213 x638) x1470) (= x1543 (x1324 (+ x1282 32))) (= (x1324 (+ x1282 128)) x1019) (= (x1074 x1755 x635 x1389 x1574 x458) x1000) (= (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118) x561) (= x1697 (x1324 (+ 32 x1282))) (= x709 (x448 x1070)) (= x397 (x1324 (+ 32 x1282))) (= (x448 x1282) x414) (= x702 (x1324 (+ 128 x565))) (= x1529 (x448 x1282)) (= (x448 x654) x1118) (= x565 (x1324 (+ x765 4))) (= x552 (x448 x408)) (= x736 (x448 x232)) (= x217 (x1324 (+ 32 x1282))) (= x165 (x448 x440)) (= (x1324 (+ x1282 32)) x496) (= x1732 (x448 x1282)) (= x635 (x448 x1282)) (= x672 (ite (= 0 x1755) x442 (ite (<= x1755 32) x158 (ite (>= 64 x1755) x1099 (ite (>= 96 x1755) x1470 (ite (>= 128 x1755) x1000 (ite (>= 160 x1755) x356 (ite (<= x1755 192) x1073 (ite (<= x1755 224) x561 x1175))))))))) (= x1574 (x448 x503)) (= (x1324 (+ 32 x35)) x196) (= (x448 x1019) x1303) (= (x1324 (+ 64 x1282)) x503) (= (x1324 (+ 32 x196)) x781) (= (x448 x889) x390) (= (> x1388 0) x1446) (= (x448 x1696) x1661) (= x1099 (x536 x1755 x1529 x1315)) (= (x448 x397) x1665) (= (x448 x1282) x148) (= (x1324 (+ x1282 160)) x1774) (= x654 (x1324 (+ 192 x1282))) (= (x45 x1755 x1732 x103 x1661 x1301 x552 x1220) x1073) (= (x448 x1697) x103) (= (x448 x1282) x1209) (= x638 (x448 x1125)) (= x1389 (x448 x1543)) (= (x1324 (+ x1282 96)) x440) (= x1696 (x1324 (+ 64 x1282))) (= (x448 x209) x909) (= x356 (x514 x1755 x1209 x1377 x390 x165 x1303)) (= x1220 (x448 x1774)) (= (x1324 (+ 32 x565)) x35)) (and (=> (and x1446 (and (= (> x1388 32) x107) (= (x1177 160) x290))) (and (=> (not x107) x1411) (=> (and (and (= (> x1388 64) x1585) (= x950 (x1324 (+ x556 32))) (= (x493 192) x850)) x107) (and (=> (not x1585) x1411) (=> (and (and (= (x1324 (+ x556 64)) x172) (= (> x1388 96) x422) (= (x57 224) x1346)) x1585) (and (=> (not x422) x1411) (=> x422 x833))))))) (=> (not x1446) x1411))) x563)) x1390)) x915))
(assert (< (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x613 (+ 1 x471)) (x613 x471)))
(assert (x1276 x1136))
(assert (x1276 x716))
(assert (x1276 x604))
(assert (not (x1736 (x536 x1755 x1529 x1315))))
(assert (x1276 x1520))
(assert (x1276 x1565))
(assert (x1276 x183))
(assert (x1276 x1093))
(assert (= x212 (x507 (x1074 x766 x1299 x885 x212 x908))))
(assert (x1276 x339))
(assert (x1276 x1389))
(assert (= x893 (and (not x1269) x710)))
(assert (x1276 x1271))
(assert (= x1111 (x1495 (x1647 x1310 x1111 x1780 x184))))
(assert (x1276 x1040))
(assert (= (or x1158 x949) x1386))
(assert (x1131 x1136))
(assert (x1276 x1266))
(assert (x1276 x1542))
(assert (=> (<= x638 10000) (= 0 (x613 x638))))
(assert (=> (>= 10000 x675) (= (x613 x675) 0)))
(assert (x1276 x504))
(assert (= (x613 (+ 1 x1465)) (x613 x1465)))
(assert (x1276 x465))
(assert (x1276 x370))
(assert (x1276 x230))
(assert (x1276 x446))
(assert (> (x1074 x1047 x1477 x247 x505 x1198) 10000))
(assert (x1736 18446744073709551487))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1647 x100 x754 x1545 x899)))
(assert (x1276 x1164))
(assert (= (x1190 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)) x1208))
(assert (=> (>= 10000 x1511) (= (x613 x1511) 0)))
(assert (=> (<= x213 10000) (= 0 (x613 x213))))
(assert (x1276 x541))
(assert (< 10000 (x1074 x100 x1511 x248 x347 x1043)))
(assert (x1276 x251))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x1276 x621))
(assert (= 0 (x613 57896044618658097711785492504343953926634992332820282019728792003956564819835)))
(assert (= (x613 (+ x836 1)) (x613 x836)))
(assert (x1276 x59))
(assert (= x908 (x1190 (x1074 x766 x1299 x885 x212 x908))))
(assert (= (x613 (+ x1468 1)) (x613 x1468)))
(assert (x639 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1276 x1070))
(assert (=> (>= 10000 x1302) (= (x613 x1302) 0)))
(assert (=> (>= 10000 x981) (= (x613 x981) 0)))
(assert (x1276 x881))
(assert (x1276 x987))
(assert (x1276 x825))
(assert (= (x507 (x1074 x100 x1511 x248 x347 x1043)) x347))
(assert (not (x1736 (x1605 x1310 x1182))))
(assert (= (x1495 (x536 64 x140 4)) x140))
(assert (x1276 x743))
(assert (x1276 x1401))
(assert (= (x1423 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) x552))
(assert (not (x1736 (x536 64 x1748 3))))
(assert (x1276 x1228))
(assert (= (x278 (x45 x1385 x1356 x17 x16 x1308 x830 x251)) x251))
(assert (x1276 x1695))
(assert (x1736 4067465820))
(assert (x1276 x890))
(assert (x1276 x883))
(assert (=> (>= 10000 x1739) (= (x613 x1739) 0)))
(assert (x1276 x87))
(assert (x1276 x342))
(assert (x1276 x20))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x1378 4)))
(assert (x1276 x975))
(assert (x1276 x1412))
(assert (x1276 x1044))
(assert (x1276 x800))
(assert (= (x1495 (x536 64 x1664 x1357)) x1664))
(assert (x1276 x1500))
(assert (x1276 x1441))
(assert (x1276 x383))
(assert (=> (<= x1338 10000) (= 0 (x613 x1338))))
(assert (= x1158 (and x683 x834)))
(assert (=> (>= 10000 x501) (= 0 (x613 x501))))
(assert (x1276 x972))
(assert (= x798 (x1190 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (x1276 x1489))
(assert (< 10000 (x45 x145 x1235 x687 x1200 x1734 x1290 x967)))
(assert (x1276 x932))
(assert (x1276 x1175))
(assert (x1276 x46))
(assert (x1276 x597))
(assert (x1276 x792))
(assert (= (x45 x100 x1283 x913 x211 x477 x799 x575) (x613 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (=> (<= x1200 10000) (= 0 (x613 x1200))))
(assert (x1276 x1239))
(assert (x1276 x146))
(assert (=> (<= x1426 10000) (= 0 (x613 x1426))))
(assert (x1276 x289))
(assert (x1276 x691))
(assert (= 0 (x613 22702217935337460250815789587045760009867340590954827992904518080408871501824)))
(assert (= (x613 (x514 x1047 x254 x794 x1020 x1564 x1364)) (x514 x1047 x254 x794 x1020 x1564 x1364)))
(assert (x1276 x243))
(assert (x1276 x1677))
(assert (< (x514 x1755 x1209 x1377 x390 x165 x1303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x373 10000) (= (x613 x373) 0)))
(assert (= (x613 52672081143094129087634851003622940732604441515226977473621344926390909140992) 0))
(assert (x1276 x734))
(assert (< (x45 x100 x1283 x913 x211 x477 x799 x575) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x1657))
(assert (x1276 x817))
(assert (= 64 (x1187 (x536 64 x968 3))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (x1276 x826))
(assert (= (x1495 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575)) x1001))
(assert (x1276 x1365))
(assert (> (x1647 x1385 x360 x1141 x1004) 10000))
(assert (=> (<= x553 10000) (= (x613 x553) 0)))
(assert (x1276 x1148))
(assert (= (x1190 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758)) x314))
(assert (x1276 x764))
(assert (=> (<= x965 10000) (= (x613 x965) 0)))
(assert (x1276 x1772))
(assert (x1276 x644))
(assert (x1276 x763))
(assert (=> (>= 10000 x260) (= 0 (x613 x260))))
(assert (x1276 x1554))
(assert (=> (>= 10000 x1529) (= (x613 x1529) 0)))
(assert (not (x1736 (x1647 x1047 x1688 x1212 x341))))
(assert (= x826 (x507 (x1074 x1310 x424 x918 x826 x299))))
(assert (= x1393 (and x809 x978)))
(assert (x1276 x41))
(assert (= (x514 x766 x701 x344 x746 x1659 x497) (x613 (x514 x766 x701 x344 x746 x1659 x497))))
(assert (= x161 (and x612 x738)))
(assert (x1276 x1295))
(assert (not (x1736 (x536 64 x968 3))))
(assert (x1276 x156))
(assert (x1276 x454))
(assert (= (x613 (+ 1 x1561)) (x613 x1561)))
(assert (x1276 x531))
(assert (x1276 x199))
(assert (=> (>= 10000 x913) (= 0 (x613 x913))))
(assert (x1276 x873))
(assert (x1276 x654))
(assert (> (x1647 x1755 x414 x213 x638) 10000))
(assert (= (x1563 (x536 64 x1460 3)) 3))
(assert (= (=> (= x1237 (< 0 x1228)) (and (=> (and x1237 (and (and (= x810 (x1324 (+ x287 32))) (not (= x801 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x1269 (> x1369 0)) (= (x1324 (+ 32 x199)) x273) (not (= x801 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (not (= x801 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x801 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x199 (x1324 (+ 96 x801))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x801) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x801) (< x801 x199) (= (x332 x801) x1369) (= (x1324 (+ 32 x801)) x287)) (or (and (and (not x596) (= x596 (> x1369 32)) (= x1236 (x332 x287))) x1269) (not x1269)))) x661) (=> (and (not x1237) (= x801 x1514)) x435))) x203))
(assert (= x1272 (or x893 x845)))
(assert (x1276 x606))
(assert (x1276 x1240))
(assert (=> (<= x968 10000) (= (x613 x968) 0)))
(assert (x1276 x1135))
(assert (x1276 x769))
(assert (x1276 x1174))
(assert (x1276 x807))
(assert (x1276 x1517))
(assert (= (and x1607 (not x1226)) x935))
(assert (= 3 (x1563 (x536 64 x569 3))))
(assert (x1276 x138))
(assert (x1276 x1108))
(assert (=> (<= x1664 10000) (= (x613 x1664) 0)))
(assert (=> (<= x1212 10000) (= 0 (x613 x1212))))
(assert (not (x1736 (x1605 x1755 x148))))
(assert (= (x613 39095828447348766818467541868648093896559026265977760979361568868651215582053) 0))
(assert (= x106 (or x559 x1746)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x968 3)))
(assert (= (x1495 (x536 64 x1309 4)) x1309))
(assert (x1736 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (x1276 x928))
(assert (x1276 x1449))
(assert (x1276 x207))
(assert (x1736 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (x1276 x375))
(assert (= (x1190 (x1074 x1755 x635 x1389 x1574 x458)) x458))
(assert (x1276 x258))
(assert (= (x613 x1106) (x613 (+ x1106 1))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (x1276 x1037))
(assert (= x1352 (x1495 (x1647 x1271 x1352 x121 x1119))))
(assert (= x1456 (and x1392 x1552)))
(assert (x1276 x273))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1647 x766 x1530 x376 x198)))
(assert (= x373 (x1563 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (= x264 (x1495 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x962 0)))
(assert (= (x613 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x1276 x1710))
(assert (not (x1736 (x1605 x145 x1571))))
(assert (= (and x740 x1738) x1760))
(assert (=> (<= x1728 10000) (= 0 (x613 x1728))))
(assert (x1276 x914))
(assert (=> (<= x1220 10000) (= (x613 x1220) 0)))
(assert (x1276 x1007))
(assert (x1276 x1615))
(assert (=> (>= 10000 x1271) (= (x613 x1271) 0)))
(assert (x1276 x392))
(assert (< (x536 x1310 x1707 x1687) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1190 (x1074 x100 x1511 x248 x347 x1043)) x1043))
(assert (= (x613 (+ 1 x1512)) (x613 x1512)))
(assert (x1276 x1374))
(assert (= (x613 (x514 x145 x665 x858 x105 x99 x1318)) (x514 x145 x665 x858 x105 x99 x1318)))
(assert (< 10000 (x1605 x1271 x1409)))
(assert (< (x536 x145 x37 x59) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1190 (x45 x766 x1052 x451 x557 x1633 x162 x1026)) x1633))
(assert (x1276 x78))
(assert (> (x45 x1271 x902 x55 x1404 x501 x646 x1509) 10000))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639742)))
(assert (x1276 x1479))
(assert (x1736 340282366920938463463374607431768211454))
(assert (x1276 x999))
(assert (not (x1736 (x1647 x145 x617 x732 x89))))
(assert (= (x613 x1123) (x613 (+ 1 x1123))))
(assert (= (x1495 (x1074 x1271 x1679 x92 x197 x1727)) x1679))
(assert (not (x1736 (x1647 x1755 x414 x213 x638))))
(assert (x1276 x930))
(assert (= 0 (x613 24068214603859720034826088920346711864364023158142564334732402816841156945010)))
(assert (= (x1563 (x1647 x1310 x1111 x1780 x184)) x1780))
(assert (x1276 x1702))
(assert (=> (<= x885 10000) (= 0 (x613 x885))))
(assert (=> (<= x1364 10000) (= 0 (x613 x1364))))
(assert (= (x1190 (x514 x1310 x357 x1224 x1060 x1710 x1366)) x1710))
(assert (=> (>= 10000 x620) (= (x613 x620) 0)))
(assert (=> (<= x1545 10000) (= 0 (x613 x1545))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x1385 x264 x320 x668 x798 x988)))
(assert (< 10000 (x1647 x1310 x1111 x1780 x184)))
(assert (x1276 x929))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1074 x766 x1299 x885 x212 x908)))
(assert (x1276 x1505))
(assert (x1276 x522))
(assert (x1276 x1391))
(assert (x1276 x363))
(assert (=> (>= 10000 x917) (= (x613 x917) 0)))
(assert (= (and x895 (not x422)) x489))
(assert (x1276 x381))
(assert (x1276 x637))
(assert (x1736 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (=> (>= 10000 x879) (= (x613 x879) 0)))
(assert (x1276 x793))
(assert (x1276 x47))
(assert (= (x613 (x514 x1310 x357 x1224 x1060 x1710 x1366)) (x514 x1310 x357 x1224 x1060 x1710 x1366)))
(assert (< 10000 (x1605 x1755 x148)))
(assert (x1276 x200))
(assert (x1276 x248))
(assert (x1276 x85))
(assert (= 64 (x1187 (x536 64 x1748 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1605 x1271 x1409)))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (x1276 x923))
(assert (= (x1423 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x97))
(assert (x1276 x270))
(assert (x1276 x376))
(assert (= (x1187 (x514 x1310 x357 x1224 x1060 x1710 x1366)) x1310))
(assert (x1276 x510))
(assert (= (x1187 (x1647 x1385 x360 x1141 x1004)) x1385))
(assert (=> (<= x1209 10000) (= 0 (x613 x1209))))
(assert (= x766 (x1187 (x1647 x766 x1530 x376 x198))))
(assert (x1276 x1549))
(assert (= (x1495 (x536 x1310 x1707 x1687)) x1707))
(assert (x1276 x1721))
(assert (x1276 x754))
(assert (x1276 x1651))
(assert (= x390 (x507 (x514 x1755 x1209 x1377 x390 x165 x1303))))
(assert (x1276 x733))
(assert (= (x613 (+ 1 x431)) (x613 x431)))
(assert (x1276 x1369))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1605 x766 x580)))
(assert (x1276 x1185))
(assert (x1276 x1016))
(assert (= x1366 (x1423 (x514 x1310 x357 x1224 x1060 x1710 x1366))))
(assert (=> (>= 10000 x1574) (= 0 (x613 x1574))))
(assert (=> (>= 10000 x1253) (= (x613 x1253) 0)))
(assert (x1276 x1129))
(assert (x1276 x631))
(assert (x984 x931))
(assert (=> (<= x1573 10000) (= 0 (x613 x1573))))
(assert (x1276 x399))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1647 66 x1716 x815 x1396)))
(assert (x1276 x649))
(assert (x1276 x1729))
(assert (= x553 (x278 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (x1276 x426))
(assert (x1276 x783))
(assert (x1276 x169))
(assert (x1276 x662))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (= x1711 (=> (and (= x837 (x1324 (+ 96 x1382))) (= x1012 (x1324 (+ 96 x1431))) (= (x1161 x837) x1170) (= (not (> x149 128)) x380)) (and x1380 x380))))
(assert (= x1310 (x1187 (x536 x1310 x1707 x1687))))
(assert (x1736 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x1276 x1013))
(assert (=> (>= 10000 x988) (= (x613 x988) 0)))
(assert (x1276 x1347))
(assert (not (x1736 (x536 64 x1748 4))))
(assert (= x376 (x1563 (x1647 x766 x1530 x376 x198))))
(assert (=> (<= x1622 10000) (= 0 (x613 x1622))))
(assert (=> (>= 10000 x1489) (= (x613 x1489) 0)))
(assert (= x1271 (x1187 (x536 x1271 x807 x142))))
(assert (x1276 x1373))
(assert (= (x613 (x962 0)) (x962 0)))
(assert (x1276 x1599))
(assert (x1276 x360))
(assert (< (x1074 x1755 x635 x1389 x1574 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x99 10000) (= 0 (x613 x99))))
(assert (= x896 (x507 (x1074 x1385 x454 x154 x896 x734))))
(assert (< (x1647 x1047 x1688 x1212 x341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x638))
(assert (x1276 x320))
(assert (x1276 x271))
(assert (not (x1736 (x536 64 x879 3))))
(assert (=> (<= x451 10000) (= 0 (x613 x451))))
(assert (x1276 x1297))
(assert (=> (>= 10000 x908) (= (x613 x908) 0)))
(assert (= x918 (x1563 (x1074 x1310 x424 x918 x826 x299))))
(assert (= (x613 (+ 1 x761)) (x613 x761)))
(assert (x1276 x770))
(assert (x1276 x1221))
(assert (= (x613 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (x1276 x1020))
(assert (= x1160 (=> (and (and (>= x479 0) (not (= x1253 x748)) (<= x679 1461501637330902918203684832716283019655932542975) (= false x500) (= x1598 x748) (<= 0 x1387) (<= 0 x1211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x487) (= false x572) (>= 1461501637330902918203684832716283019655932542975 x1387) (>= 1461501637330902918203684832716283019655932542975 x265) (>= x1302 1) (>= 1461501637330902918203684832716283019655932542975 x1121) x1163 (>= x1348 356) x859 x83 (>= x1253 1) (not (= x769 x748)) (= x461 x1397) (= 7 x478) (= x1359 (< 0 (x1481 x1302))) (>= 1461501637330902918203684832716283019655932542975 x1253) (<= 0 x1757) (= x1343 x1443) (not (= x970 x1253)) (<= x769 1461501637330902918203684832716283019655932542975) x1359 (= 3686331914 x1515) (>= 4294967295 x26) (= x1484 false) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1348) (<= x147 1461501637330902918203684832716283019655932542975) (not (= x748 x1121)) (>= x1432 0) (<= 1 x748) (= false x1584) (= 36 x983) (>= x970 1) (<= 0 x265) (>= x1402 0) (>= 1461501637330902918203684832716283019655932542975 x748) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x80 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1397 x1343) (<= 0 x1414) (<= 0 x487) (= x83 (< 0 (x1481 x748))) (>= x151 0) (not (= x1302 x1121)) (not (= x1302 x769)) (<= x970 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1414) x832 (= x1163 (< 0 (x1481 x1121))) (<= x151 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x769 x1121)) (<= x461 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x970 x769)) (<= x1432 1461501637330902918203684832716283019655932542975) (not (= x1302 x748)) (<= x1757 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> (x1481 x769) 0) x859) (not (= x1302 x1253)) (not (= x769 x1253)) (not (= x970 x1121)) (>= x26 0) (not (= x970 x1302)) (<= 0 x80) (not (= x748 x970)) (>= x1121 1) (= x832 (> (x1481 x970) 0)) (<= x1402 1461501637330902918203684832716283019655932542975) (<= x479 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1121 x1253)) (<= x1302 1461501637330902918203684832716283019655932542975) (>= x461 0) (= (> (x1481 x1253) 0) x1527) x1527 (>= 1461501637330902918203684832716283019655932542975 x94) (= x1770 0) (>= x769 1)) (and (= x1678 0) (= (x7 x1699) x916) (= (x977 x1699) x822) (= (x1383 x1699) x952) (= x608 x1114) (= x377 x269) (>= 255 x636) (= 911662625 x1363) (= x1072 (x361 832)) (<= x952 1099511627775) (= (x536 64 x1091 3) x1487) (= (+ 1 x581) x1589) (<= x1441 1099511627775) (= false x998) (= x1419 (x1481 x748)) (= x1072 x144) (= x130 false) (= false x1243) (= x1114 (x361 896)) (= false x1410) (= x160 x622) (>= 1099511627775 x822) (= (x361 768) x623) (= (x445 x1699) x636) (= (x413 x581) x379) (= (not x1421) x1518) (= x1091 x1443) (= (= 0 x582) x1421) (= x1699 (+ x1487 1)) (= (x361 960) x123) (= (+ 1 x1589) x1428) (= x160 (x361 704)) (= x1441 (x790 x1699)) (= (ite (not (= 0 (ite (not (= x636 0)) 1 0))) 1 0) x288) (<= x995 127) (= false x4) (= (+ 1 x1699) x581) (= x123 x174) (= x1776 (x361 864)) (= x269 (x361 928)) (<= x379 340282366920938463463374607431768211455) (>= 127 x995) (= x666 x582) (= x982 (x919 x1589)) (= x1776 x1095) (= (x361 800) x666) (= x1317 false) (<= 1 x1419) (= (x1104 x1428) x1544) (= x655 x623) (>= 340282366920938463463374607431768211455 x916))) (and (=> (and (not x1518) (and (= x114 x285) (= x985 true) (= x293 x985))) x1207) (=> x1518 x1674)))))
(assert (x1276 x555))
(assert (=> (<= x533 10000) (= (x613 x533) 0)))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639844) 0))
(assert (= (=> (= (= 0 x1756) x1552) (and (=> (and (not x1552) (and (= x62 x1413) (= x1565 x1275))) x1270) (=> x1552 x1572))) x685))
(assert (=> (>= 10000 x255) (= 0 (x613 x255))))
(assert (= x100 (x1187 (x536 x100 x36 x398))))
(assert (x1276 x1025))
(assert (x639 1461501637330902918203684832716283019655932542975))
(assert (< 10000 (x536 64 x879 3)))
(assert (x1276 x1010))
(assert (x1736 18446744073709551550))
(assert (x1276 x722))
(assert (= x1385 (x1187 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (x1276 x505))
(assert (x1276 x660))
(assert (= (x514 x1271 x1771 x373 x1541 x365 x1045) (x613 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (x1276 x1773))
(assert (not (x1736 (x536 x100 x36 x398))))
(assert (x1276 x481))
(assert (x1276 x1327))
(assert (= x215 (x278 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (x1276 x1121))
(assert (= x895 (and x1585 x65)))
(assert (x1276 x1212))
(assert (=> (<= x1437 10000) (= 0 (x613 x1437))))
(assert (x1276 x1703))
(assert (< (x536 64 x1460 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x396) (= (x613 x396) 0)))
(assert (= 64 (x1187 (x536 64 x1664 x1357))))
(assert (x1276 x1597))
(assert (= (x613 (x1074 x1310 x424 x918 x826 x299)) (x1074 x1310 x424 x918 x826 x299)))
(assert (x1276 x1009))
(assert (x1276 x1379))
(assert (= (x1563 (x514 x1385 x264 x320 x668 x798 x988)) x320))
(assert (x1276 x1294))
(assert (x1276 x274))
(assert (= 0 (x613 18446744073709551550)))
(assert (x1276 x1149))
(assert (x1276 x1490))
(assert (not x1160))
(assert (= x1220 (x278 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220))))
(assert (= (x507 (x514 x1310 x357 x1224 x1060 x1710 x1366)) x1060))
(assert (= x99 (x1190 (x514 x145 x665 x858 x105 x99 x1318))))
(assert (x1276 x939))
(assert (= x211 (x507 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (= (x613 (+ 1 x1448)) (x613 x1448)))
(assert (not (x1736 (x45 x766 x1052 x451 x557 x1633 x162 x1026))))
(assert (x1276 x745))
(assert (x1276 x727))
(assert (= x286 (and x84 x1518)))
(assert (= (x1187 (x1605 x766 x580)) x766))
(assert (x1276 x280))
(assert (x1276 x209))
(assert (not (x1736 (x536 x1310 x1707 x1687))))
(assert (x1276 x97))
(assert (x1276 x1206))
(assert (x1276 x1771))
(assert (x1276 x1125))
(assert (= x456 (and x612 (not x738))))
(assert (= (x1187 (x1647 x1271 x1352 x121 x1119)) x1271))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x145 x665 x858 x105 x99 x1318)))
(assert (x1276 x702))
(assert (x1276 x373))
(assert (x1276 x678))
(assert (=> (<= x970 10000) (= (x613 x970) 0)))
(assert (= (x1495 (x1074 x1047 x1477 x247 x505 x1198)) x1477))
(assert (=> (<= x140 10000) (= (x613 x140) 0)))
(assert (x1276 x1184))
(assert (> (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118) 10000))
(assert (= (x1563 (x1647 x1755 x414 x213 x638)) x213))
(assert (< (x1605 x1755 x148) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x687 10000) (= (x613 x687) 0)))
(assert (= (and x1023 (not x219)) x519))
(assert (x1276 x1764))
(assert (=> (<= x1734 10000) (= (x613 x1734) 0)))
(assert (not (x1736 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220))))
(assert (= 0 (x613 25877242110744216891076975195880784582809329153640315260649044424131709239296)))
(assert (x1276 x1344))
(assert (= (x613 (+ x836 5)) (x613 x836)))
(assert (= x1023 (or x1089 x1393 x598)))
(assert (= (x1495 (x536 x100 x36 x398)) x36))
(assert (x1276 x1768))
(assert (< (x536 x766 x1033 x250) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x539))
(assert (not (x1736 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (< 10000 (x536 64 x1748 3)))
(assert (x1276 x1753))
(assert (x1276 x195))
(assert (x1276 x1047))
(assert (x1276 x171))
(assert (= (x1563 (x536 64 x140 4)) 4))
(assert (x1276 x579))
(assert (=> (>= 10000 x1144) (= 0 (x613 x1144))))
(assert (= (x1495 (x45 x100 x1283 x913 x211 x477 x799 x575)) x1283))
(assert (x1276 x1143))
(assert (x1276 x992))
(assert (= (x278 (x45 x1310 x260 x321 x167 x1426 x270 x255)) x255))
(assert (x1276 x750))
(assert (x1276 x1316))
(assert (x1276 x811))
(assert (x1276 x894))
(assert (x1276 x1350))
(assert (= x1261 (and (not x1446) x1547)))
(assert (=> (>= 10000 x918) (= (x613 x918) 0)))
(assert (x1276 x221))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (= (x613 22260506169142864168419965211860030380910469616735923253374116530085716557824) 0))
(assert (x1276 x1485))
(assert (x1276 x1574))
(assert (< 10000 (x536 x1271 x807 x142)))
(assert (= x1142 (and x1624 x1420)))
(assert (x1276 x748))
(assert (= (and x161 (not x420)) x21))
(assert (x1276 x837))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x45 x1385 x1356 x17 x16 x1308 x830 x251)))
(assert (= (x1187 (x1605 x145 x1571)) x145))
(assert (x1736 340282366920938463463374607431768211455))
(assert (= x1716 (x1495 (x1647 66 x1716 x815 x1396))))
(assert (x1276 x1265))
(assert (x1276 x1186))
(assert (x1276 x1748))
(assert (= x1529 (x1495 (x536 x1755 x1529 x1315))))
(assert (= (x613 (x1647 66 x1716 x815 x1396)) (x1647 66 x1716 x815 x1396)))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= (and x1501 x1196) x181))
(assert (x1030 x418))
(assert (=> (>= 10000 x465) (= 0 (x613 x465))))
(assert (= 0 (x613 18446744073709551615)))
(assert (=> (>= 10000 x667) (= 0 (x613 x667))))
(assert (= x720 (or x663 x1536 x181 x305 x334)))
(assert (x1276 x810))
(assert (= x1554 (x796 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (x1736 3686331914))
(assert (x1276 x1722))
(assert (x1276 x424))
(assert (x1276 x1151))
(assert (x1276 x140))
(assert (= (x1423 (x45 x1310 x260 x321 x167 x1426 x270 x255)) x270))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (x1276 x780))
(assert (x1276 x304))
(assert (x1276 x803))
(assert (x1276 x673))
(assert (x1276 x1098))
(assert (x1276 x758))
(assert (x1276 x1167))
(assert (= (x536 64 x968 3) (x613 (x536 64 x968 3))))
(assert (= x17 (x1563 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (x1276 x658))
(assert (=> (>= 10000 x922) (= (x613 x922) 0)))
(assert (x1276 x111))
(assert (x1276 x167))
(assert (= (x507 (x1074 x145 x667 x560 x693 x620)) x693))
(assert (> (x962 0) 10000))
(assert (=> (>= 10000 x616) (= 0 (x613 x616))))
(assert (= (x1187 (x1074 x766 x1299 x885 x212 x908)) x766))
(assert (x1276 x775))
(assert (x1276 x128))
(assert (= (x1647 x1385 x360 x1141 x1004) (x613 (x1647 x1385 x360 x1141 x1004))))
(assert (x1276 x560))
(assert (= x1310 (x1187 (x45 x1310 x260 x321 x167 x1426 x270 x255))))
(assert (x1276 x150))
(assert (x1276 x341))
(assert (x1276 x351))
(assert (> (x536 x100 x36 x398) 10000))
(assert (x1276 x626))
(assert (x1276 x1062))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (x1276 x1559))
(assert (x1276 x944))
(assert (x1276 x1252))
(assert (x1276 x1413))
(assert (= (x613 (+ x463 1)) (x613 x463)))
(assert (= x145 (x1187 (x1647 x145 x617 x732 x89))))
(assert (x1276 x94))
(assert (x1276 x786))
(assert (= (x613 (x536 64 x1091 3)) (x536 64 x1091 3)))
(assert (x1276 x1114))
(assert (=> (<= x1175 10000) (= 0 (x613 x1175))))
(assert (x1276 x1109))
(assert (x1276 x787))
(assert (not (x1736 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (= x830 (x1423 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (= x1224 (x1563 (x514 x1310 x357 x1224 x1060 x1710 x1366))))
(assert (x1276 x368))
(assert (x1276 x1751))
(assert (=> (<= x815 10000) (= (x613 x815) 0)))
(assert (x1276 x1368))
(assert (= (x278 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x226))
(assert (= x315 (x1563 (x536 x1385 x965 x315))))
(assert (= x1354 (and x1021 x1142)))
(assert (x1276 x1094))
(assert (= (x507 (x45 x1385 x1356 x17 x16 x1308 x830 x251)) x16))
(assert (x1276 x1022))
(assert (x1276 x950))
(assert (= (x507 (x1647 66 x1716 x815 x1396)) x1396))
(assert (< (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x328))
(assert (= x1145 (and (not x578) x1726)))
(assert (=> (<= x1780 10000) (= (x613 x1780) 0)))
(assert (x1276 x982))
(assert (=> (>= 10000 x1732) (= (x613 x1732) 0)))
(assert (x1276 x730))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639839) 0))
(assert (x1276 x477))
(assert (x1276 x405))
(assert (x1276 x1282))
(assert (=> (>= 10000 x458) (= (x613 x458) 0)))
(assert (x1276 x735))
(assert (= (x1495 (x536 x1271 x807 x142)) x807))
(assert (=> (<= x736 10000) (= 0 (x613 x736))))
(assert (= (=> (= x152 (ite x1593 x1713 x1014)) x152) x249))
(assert (=> (>= 10000 x1290) (= 0 (x613 x1290))))
(assert (= (x613 (+ x1699 1)) (x613 x1699)))
(assert (= 0 (x1187 (x962 0))))
(assert (= (x1563 (x536 64 x660 3)) 3))
(assert (x1276 x965))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118)))
(assert (=> (>= 10000 x1033) (= (x613 x1033) 0)))
(assert (x1276 x1214))
(assert (=> (<= x100 10000) (= 0 (x613 x100))))
(assert (= 3 (x1563 (x536 64 x1091 3))))
(assert (x1276 x1299))
(assert (= (x536 64 x1378 4) (x613 (x536 64 x1378 4))))
(assert (= (x1495 (x1605 x1385 x1461)) x1461))
(assert (=> (<= x1554 10000) (= (x613 x1554) 0)))
(assert (< (x536 64 x1309 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1151) (= 0 (x613 x1151))))
(assert (= x414 (x1495 (x1647 x1755 x414 x213 x638))))
(assert (> (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758) 10000))
(assert (x1276 x524))
(assert (x1276 x451))
(assert (= 0 (x613 45887579694954924622689847950937698470056863744033464196450664576267108643884)))
(assert (x1131 x1609))
(assert (x1276 x1763))
(assert (x1276 x459))
(assert (> (x536 x1310 x1707 x1687) 10000))
(assert (= x1144 (x507 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (> (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575) 10000))
(assert (x1276 x986))
(assert (=> (<= x212 10000) (= 0 (x613 x212))))
(assert (x1276 x447))
(assert (= (x507 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) x1661))
(assert (x1276 x494))
(assert (= (x507 (x45 x1047 x1395 x986 x619 x579 x470 x1739)) x619))
(assert (x1276 x105))
(assert (=> (>= 10000 x365) (= 0 (x613 x365))))
(assert (x1276 x264))
(assert (= x815 (x1563 (x1647 66 x1716 x815 x1396))))
(assert (x1276 x1416))
(assert (x1276 x897))
(assert (= x663 (and x1049 (not x1229))))
(assert (x1276 x1281))
(assert (not (x1736 (x45 x1047 x1395 x986 x619 x579 x470 x1739))))
(assert (x1276 x905))
(assert (x1276 x1459))
(assert (x1276 x409))
(assert (x1276 x887))
(assert (x1276 x953))
(assert (= x1732 (x1495 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220))))
(assert (x1276 x1308))
(assert (x1276 x736))
(assert (x1276 x1086))
(assert (= (x1563 (x514 x1755 x1209 x1377 x390 x165 x1303)) x1377))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639679) 0))
(assert (x1276 x824))
(assert (not (x1736 (x1647 x1271 x1352 x121 x1119))))
(assert (=> (<= x1001 10000) (= (x613 x1001) 0)))
(assert (x1276 x1403))
(assert (= x560 (x1563 (x1074 x145 x667 x560 x693 x620))))
(assert (= (or x1683 x1760) x1623))
(assert (x1276 x680))
(assert (= (=> (and (or (and (not x978) (and (and (<= x1083 1461501637330902918203684832716283019655932542975) (<= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x959 (x1324 (+ 32 x1413))) (= 128 x1266) (= x405 (x194 1461501637330902918203684832716283019655932542975 x626)) (= (x912 (- x959 32)) x1367) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1413) (= (x1324 (+ 32 x1146)) x674) (= x692 (x1172 (x1324 (+ x959 64)))) (= (= 0 x405) x927) (not (= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (> x959 x1413) (= (x1324 (+ 32 x857)) x1146) (= x1083 (x109 x1629 x878 x692 x1635)) (<= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1172 (x1324 (+ x959 32))) x878) (= x857 (x1324 (+ 32 x959))) (not (= x1413 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1629 (x1172 x959)) (= x626 (x67 x1367)) (= x146 (x912 (- x959 32))) (= x1635 (x1172 (x1324 (+ x959 96))))) (or (and x927 (and (= x959 x1297) (= x433 0) (= 1 x1466))) (and (not x927) (and (= x626 x433) (= 0 x1466) (= x959 x1297)))))) (and (and (= x1466 3) (= x433 0) (= x1297 x1413)) x978)) (and (= (x1324 (+ x1413 32)) x98) (= (x437 x589) x1396) (= x815 (x437 x98)) (= x1127 (x1324 (+ x1768 32))) (= x978 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x192)) (= x589 (x1324 (+ 64 x1413))) (= (x1647 66 x1716 x815 x1396) x628) (= (x1324 (+ x1413 2)) x1768) (= x1716 (x437 x1413)))) x22) x1270))
(assert (= (x613 x943) (x613 (+ 1 x943))))
(assert (x1276 x134))
(assert (=> (<= x165 10000) (= (x613 x165) 0)))
(assert (x1276 x831))
(assert (x1276 x1533))
(assert (x1736 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1736 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= (x613 (+ x303 1)) (x613 x303)))
(assert (x1276 x1611))
(assert (x639 x1136))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (x1276 x121))
(assert (x1276 x1318))
(assert (x1276 x1130))
(assert (=> (<= x1409 10000) (= (x613 x1409) 0)))
(assert (=> (>= 10000 x46) (= (x613 x46) 0)))
(assert (= x1200 (x507 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (=> (<= x769 10000) (= (x613 x769) 0)))
(assert (> (x1074 x1271 x1679 x92 x197 x1727) 10000))
(assert (x1276 x936))
(assert (x1276 x1701))
(assert (x1276 x749))
(assert (= (and (not x1552) x1392) x1686))
(assert (x1276 x466))
(assert (x1276 x1170))
(assert (x1276 x388))
(assert (x1276 x623))
(assert (=> (>= 10000 x103) (= 0 (x613 x103))))
(assert (x1276 x696))
(assert (x1276 x1707))
(assert (=> (>= 10000 x36) (= (x613 x36) 0)))
(assert (x1276 x528))
(assert (x1276 x1115))
(assert (x1276 x917))
(assert (x1276 x1494))
(assert (x1276 x1375))
(assert (=> (>= 10000 x1179) (= 0 (x613 x1179))))
(assert (= x239 (and x1538 (not x107))))
(assert (x1276 x760))
(assert (x1276 x126))
(assert (x1276 x708))
(assert (x1276 x182))
(assert (x1276 x909))
(assert (=> (<= x1396 10000) (= (x613 x1396) 0)))
(assert (x1276 x1144))
(assert (not (x1736 (x1074 x766 x1299 x885 x212 x908))))
(assert (=> (>= 10000 x1119) (= 0 (x613 x1119))))
(assert (x1276 x1670))
(assert (= (or x1579 x1354) x1746))
(assert (= (x613 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)) (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)))
(assert (= x171 (x1495 (x536 x1047 x171 x1690))))
(assert (=> (>= 10000 x128) (= 0 (x613 x128))))
(assert (=> (<= x1052 10000) (= (x613 x1052) 0)))
(assert (x1276 x1466))
(assert (x1276 x1642))
(assert (= x1033 (x1495 (x536 x766 x1033 x250))))
(assert (= (or x1165 x1623) x1726))
(assert (x1276 x1256))
(assert (= x1569 (or x1608 x1017)))
(assert (x1276 x1236))
(assert (x1276 x550))
(assert (x1276 x839))
(assert (=> (>= 10000 x1315) (= 0 (x613 x1315))))
(assert (=> (>= 10000 x1235) (= 0 (x613 x1235))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x766 x701 x344 x746 x1659 x497)))
(assert (x639 x626))
(assert (x1276 x1675))
(assert (x1276 x1761))
(assert (=> (<= x580 10000) (= 0 (x613 x580))))
(assert (= x1595 (x278 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (x1276 x433))
(assert (not (x1736 (x1074 x100 x1511 x248 x347 x1043))))
(assert (= (x1187 (x1074 x1310 x424 x918 x826 x299)) x1310))
(assert (x1276 x497))
(assert (x1276 x899))
(assert (x1276 x1330))
(assert (= (x613 (x1074 x1271 x1679 x92 x197 x1727)) (x1074 x1271 x1679 x92 x197 x1727)))
(assert (= (x613 340282366920938463463374607431768211454) 0))
(assert (x1276 x1019))
(assert (= x922 (x1423 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573))))
(assert (x1276 x853))
(assert (=> (<= x1460 10000) (= (x613 x1460) 0)))
(assert (x1276 x1767))
(assert (= x1574 (x507 (x1074 x1755 x635 x1389 x1574 x458))))
(assert (x1276 x714))
(assert (= 0 (x613 911662625)))
(assert (x1276 x1777))
(assert (=> (<= x154 10000) (= (x613 x154) 0)))
(assert (=> (>= 10000 x967) (= (x613 x967) 0)))
(assert (= (or x935 x1371) x1650))
(assert (= (x1187 (x536 64 x1378 4)) 64))
(assert (> (x514 x1047 x254 x794 x1020 x1564 x1364) 10000))
(assert (x1276 x1667))
(assert (=> (<= x1118 10000) (= 0 (x613 x1118))))
(assert (= (x796 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x1493))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x1091 3)))
(assert (= (x536 x1385 x965 x315) (x613 (x536 x1385 x965 x315))))
(assert (= (x613 (x536 x1271 x807 x142)) (x536 x1271 x807 x142)))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (= (x1495 (x45 x1047 x1395 x986 x619 x579 x470 x1739)) x1395))
(assert (x1276 x260))
(assert (=> (<= x162 10000) (= (x613 x162) 0)))
(assert (x1276 x355))
(assert (x1276 x1493))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x536 64 x660 3)))
(assert (= (x613 x1408) (x613 (+ 1 x1408))))
(assert (= (x613 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575)) (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575)))
(assert (= x732 (x1563 (x1647 x145 x617 x732 x89))))
(assert (> (x45 x1755 x1732 x103 x1661 x1301 x552 x1220) 10000))
(assert (x1276 x55))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639805) 0))
(assert (=> (<= x148 10000) (= 0 (x613 x148))))
(assert (=> (<= x423 10000) (= (x613 x423) 0)))
(assert (< 10000 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)))
(assert (< 10000 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)))
(assert (x1276 x828))
(assert (= x1731 (x507 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493))))
(assert (x1276 x1690))
(assert (x1736 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (= (x507 (x514 x1047 x254 x794 x1020 x1564 x1364)) x1020))
(assert (x1276 x52))
(assert (x1276 x995))
(assert (= (x1495 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x30))
(assert (= x988 (x1423 (x514 x1385 x264 x320 x668 x798 x988))))
(assert (x1276 x287))
(assert (x1276 x397))
(assert (x1276 x1737))
(assert (= (x613 x330) (x613 (+ 1 x330))))
(assert (= x184 (x507 (x1647 x1310 x1111 x1780 x184))))
(assert (x1276 x1606))
(assert (= (x1423 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) x646))
(assert (x1736 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (x1276 x1513))
(assert (=> (<= x1731 10000) (= 0 (x613 x1731))))
(assert (= x145 (x1187 (x536 x145 x37 x59))))
(assert (x1276 x619))
(assert (=> (>= 10000 x635) (= (x613 x635) 0)))
(assert (x1276 x776))
(assert (x1276 x1364))
(assert (=> (<= x560 10000) (= (x613 x560) 0)))
(assert (x1276 x1629))
(assert (= x756 (and x457 x279)))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (not (x1736 (x514 x766 x701 x344 x746 x1659 x497))))
(assert (x1276 x1469))
(assert (x1276 x88))
(assert (= (x613 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (x1276 x317))
(assert (= x100 (x1187 (x45 x100 x1283 x913 x211 x477 x799 x575))))
(assert (= (or x718 x866) x1392))
(assert (=> (>= 10000 x1303) (= 0 (x613 x1303))))
(assert (= (and x590 x469) x56))
(assert (= (x613 x1589) (x613 (+ 1 x1589))))
(assert (=> (>= 10000 x665) (= (x613 x665) 0)))
(assert (x1276 x417))
(assert (x1276 x1105))
(assert (x1276 x236))
(assert (= x145 (x1187 (x514 x145 x665 x858 x105 x99 x1318))))
(assert (x1276 x16))
(assert (x1276 x98))
(assert (x1276 x901))
(assert (x1276 x1036))
(assert (= x899 (x507 (x1647 x100 x754 x1545 x899))))
(assert (x1276 x62))
(assert (< 10000 (x1605 x766 x580)))
(assert (< 10000 (x536 64 x1664 x1357)))
(assert (= (x613 (x1605 x1047 x1499)) (x1605 x1047 x1499)))
(assert (= (x45 x1385 x1356 x17 x16 x1308 x830 x251) (x613 (x45 x1385 x1356 x17 x16 x1308 x830 x251))))
(assert (= (x613 x640) (x613 (+ x640 1))))
(assert (= (x278 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x1601))
(assert (x1276 x1697))
(assert (x1276 x1043))
(assert (x1276 x1338))
(assert (x1030 x433))
(assert (= x1725 (=> (and (and (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x385) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x385)) (<= x987 18446744073709551550) (not (< x1174 x1096)) (= x994 (x1324 (+ 32 x371))) (or (<= x1498 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1498)) (>= x989 1) (= (+ 64 x1174) x1652) (= x385 (x44 x1250)) (<= 1 x1294) (= (x1324 (+ x577 32)) x371) (= x599 (x1324 (+ 32 x1025))) (>= 18446744073709551550 x987) (= 1 x1239) (= (x44 x1250) x1498) (= (x1324 (+ x1695 32)) x577) (< x1174 x1652) (= (+ 64 x1096) x1174) (= x1738 (< 0 x1375)) (<= x1526 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ 32 x1174) x110) (= (x64 x274) x989) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x385) (<= x1007 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1007 x385)) (and (<= x1007 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x385))) (>= 1461501637330902918203684832716283019655932542975 x960) (= (x44 x621) x960) (or (<= x987 18446744073709551487) (>= x987 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (or (and (= (<= x1498 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1007)) (< x1498 x1007)) (and (> x1498 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1007 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x64 x987) x1239) (<= x987 115792089237316195423570985008687907853269984665640564039457584007913129639806) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x987) (<= x987 18446744073709551487)) (< x987 x1096) (= (x1324 (+ x987 64)) x1096) (<= x1009 340282366920938463463374607431768211455) (< x1096 x1174) (= x274 (x1324 (+ 32 x987))) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x987) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x987)) (= (x1324 (+ 4 x1652)) x1695) (= x1025 (x1324 (+ x1250 x1498))) (= x1009 (x44 x599)) (= (x1324 (+ x1250 x385)) x621) (<= 32 x1526)) (or (and x1738 (and (= x1223 1) (<= 32 x1526) (>= 4294967295 x1526))) (and (= x1375 x1223) (not x1738)))) x700)))
(assert (x1276 x1231))
(assert (x1276 x162))
(assert (x1276 x1649))
(assert (x1276 x222))
(assert (=> (<= x1043 10000) (= 0 (x613 x1043))))
(assert (x1276 x1475))
(assert (x1276 x1742))
(assert (=> (>= 10000 x758) (= 0 (x613 x758))))
(assert (x1276 x1309))
(assert (x1276 x543))
(assert (= (x613 x488) (x613 (+ x488 1))))
(assert (> (x1605 x100 x543) 10000))
(assert (=> (>= 10000 x575) (= 0 (x613 x575))))
(assert (= (x613 x1018) (x613 (+ 1 x1018))))
(assert (= (x1495 (x514 x766 x701 x344 x746 x1659 x497)) x701))
(assert (= (x613 340282366920938463463374607431768211455) 0))
(assert (=> (<= x376 10000) (= (x613 x376) 0)))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639873) 0))
(assert (= (x536 x1047 x171 x1690) (x613 (x536 x1047 x171 x1690))))
(assert (x1276 x1595))
(assert (x1276 x234))
(assert (x1276 x751))
(assert (x1276 x1679))
(assert (= x341 (x507 (x1647 x1047 x1688 x1212 x341))))
(assert (= (x1495 (x1605 x1310 x1182)) x1182))
(assert (= (x1495 (x1647 x1047 x1688 x1212 x341)) x1688))
(assert (x1276 x968))
(assert (x1276 x607))
(assert (=> (>= 10000 x390) (= 0 (x613 x390))))
(assert (x1276 x145))
(assert (x1276 x1230))
(assert (x1276 x1779))
(assert (x1276 x1388))
(assert (= (x1187 (x1074 x100 x1511 x248 x347 x1043)) x100))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x424 (x1495 (x1074 x1310 x424 x918 x826 x299))))
(assert (x1276 x295))
(assert (x1276 x1496))
(assert (x1276 x1348))
(assert (=> (>= 10000 x1377) (= (x613 x1377) 0)))
(assert (x1276 x1616))
(assert (x1276 x1235))
(assert (= (x613 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (x1276 x1262))
(assert (x1276 x501))
(assert (x1276 x154))
(assert (= (x1190 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) x1301))
(assert (=> (>= 10000 x1309) (= 0 (x613 x1309))))
(assert (= x635 (x1495 (x1074 x1755 x635 x1389 x1574 x458))))
(assert (x1276 x322))
(assert (x1276 x1488))
(assert (x1276 x1407))
(assert (= x709 (x1423 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (=> (<= x97 10000) (= (x613 x97) 0)))
(assert (not (x1736 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (x1276 x1591))
(assert (= (x1563 (x1074 x1755 x635 x1389 x1574 x458)) x1389))
(assert (< 10000 (x1605 x1385 x1461)))
(assert (x1276 x1378))
(assert (x1276 x1730))
(assert (x1276 x705))
(assert (x1276 x1122))
(assert (> (x45 x766 x1052 x451 x557 x1633 x162 x1026) 10000))
(assert (= (x1647 x1755 x414 x213 x638) (x613 (x1647 x1755 x414 x213 x638))))
(assert (=> (>= 10000 x414) (= (x613 x414) 0)))
(assert (= x316 (and (not x1) x56)))
(assert (= (x613 (x514 x1385 x264 x320 x668 x798 x988)) (x514 x1385 x264 x320 x668 x798 x988)))
(assert (x1276 x1331))
(assert (= (x1563 (x1647 x1271 x1352 x121 x1119)) x121))
(assert (x1276 x1433))
(assert (= (x507 (x1647 x145 x617 x732 x89)) x89))
(assert (x1276 x166))
(assert (=> (>= 10000 x1530) (= (x613 x1530) 0)))
(assert (x1276 x636))
(assert (x1276 x283))
(assert (x1276 x830))
(assert (x1276 x527))
(assert (x1276 x766))
(assert (x1276 x76))
(assert (x1276 x627))
(assert (= x132 (and (not x469) x590)))
(assert (not (x1736 (x1647 x1310 x1111 x1780 x184))))
(assert (x1276 x724))
(assert (= 0 (x613 51755322175217624492750805572474109157238378692794855914282927279451288895488)))
(assert (= (x613 63076024560530113402979550242307453568063438748328787417531900361828837441551) 0))
(assert (not (x1736 (x1074 x145 x667 x560 x693 x620))))
(assert (x1276 x533))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x1736 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1067)) (<= x1067 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1067) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1067) (= (not (< 2 x1228)) x1326) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1067)) (= x391 (x1324 (+ 32 x1067))) (= x87 (x1324 (+ 64 x1067))) (< x1067 x87) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1067))) (and (=> (= x987 x87) x1600) x1326)) x513))
(assert (x1276 x1002))
(assert (x1276 x1111))
(assert (=> (<= x709 10000) (= (x613 x709) 0)))
(assert (=> (<= x1659 10000) (= 0 (x613 x1659))))
(assert (=> (<= x341 10000) (= (x613 x341) 0)))
(assert (x1276 x1573))
(assert (x1276 x1509))
(assert (=> (>= 10000 x254) (= (x613 x254) 0)))
(assert (x1276 x1437))
(assert (not (x1736 (x1605 x1271 x1409))))
(assert (= (and (not x312) x756) x334))
(assert (= 64 (x1187 (x536 64 x70 3))))
(assert (x1276 x365))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (x1276 x1117))
(assert (=> (<= x1707 10000) (= 0 (x613 x1707))))
(assert (= x100 (x1187 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573))))
(assert (x1276 x1241))
(assert (< (x536 x1385 x965 x315) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x639 x931))
(assert (x1276 x594))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639869)))
(assert (= (=> (and (= (x1324 (+ x482 32)) x1055) (= x1646 (<= x1047 224)) (<= 1 x763) (= x1627 (x912 (- x604 32))) (= x763 (x1324 (+ x1431 x149))) (= x1047 (x401 x482)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x482) (= (x912 (- x763 x482)) x604) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x482) (> x763 x482) (<= x482 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (= x1364 (x401 x921)) (= (x401 x1496) x1690) (= (x1324 (+ 32 x1055)) x1496) (= (x401 x594) x505) (= (x401 x1016) x579) (= x619 (x401 x583)) (= x1592 (x1074 x1047 x1477 x247 x505 x1198)) (= (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071) x133) (= x128 (x401 x512)) (= (x1324 (+ x1055 64)) x241) (= (x401 x466) x1564) (= (x401 x1055) x155) (= (ite (= 0 x1047) x244 (ite (>= 32 x1047) x1059 (ite (>= 64 x1047) x1101 (ite (>= 96 x1047) x774 (ite (<= x1047 128) x1592 (ite (<= x1047 160) x189 (ite (<= x1047 192) x1381 (ite (<= x1047 224) x133 x1505)))))))) x948) (= x583 (x1324 (+ x1055 64))) (= x1059 (x1605 x1047 x1499)) (= x171 (x401 x1055)) (= (x401 x1055) x1477) (= (< 0 x727) x457) (= x466 (x1324 (+ 96 x1055))) (= x877 (x1324 (+ 32 x1055))) (= (x401 x1055) x1688) (= (x1324 (+ x1055 64)) x594) (= (x514 x1047 x254 x794 x1020 x1564 x1364) x189) (= (x1324 (+ 32 x1055)) x695) (= x774 (x1647 x1047 x1688 x1212 x341)) (= x1640 (x1324 (+ x1055 64))) (= (+ 32 x1677) x393) (= x921 (x1324 (+ 128 x1055))) (= (x401 x1722) x675) (= (x401 x760) x794) (= (x536 x1047 x171 x1690) x1101) (= x244 (x962 0)) (= (x1324 (+ 32 x1055)) x1722) (= x1164 (x1324 (+ x1055 96))) (= x1739 (x401 x126)) (= x1489 (x401 x1164)) (= x1135 (x401 x1316)) (= x1316 (x1324 (+ 160 x1055))) (= (x401 x1640) x1702) (= (x401 x1677) x727) (= (x1324 (+ x1055 192)) x346) (= (x401 x695) x1212) (= (x401 x241) x341) (= (x401 x1055) x254) (= x1198 (x401 x78)) (= x760 (x1324 (+ 32 x1055))) (= x1064 (x1324 (+ x1055 32))) (= (x401 x1055) x1499) (= (x1324 (+ x1055 128)) x1108) (= (x401 x1560) x1020) (= (x401 x1055) x1395) (= (x1324 (+ x1055 96)) x78) (= x1071 (x401 x346)) (= (x401 x877) x986) (= x1381 (x45 x1047 x1395 x986 x619 x579 x470 x1739)) (= (x1324 (+ 128 x1055)) x512) (= (x1324 (+ x1055 160)) x126) (= (x1324 (+ 96 x1055)) x1016) (= (x1324 (+ x763 32)) x992) (= x470 (x401 x1108)) (= (x1324 (+ 64 x1055)) x1560) (= x247 (x401 x1064))) (and (=> (and (not x457) (and (= x824 0) (= x1046 x393) (= x1189 x992))) x1618) (=> (and x457 (and (= x312 (< 1 x727)) (= x27 (x401 x393)) (= (x1324 (+ 32 x992)) x1701) (= (+ 32 x393) x979))) (and (=> (and (not x312) (and (= x1046 x979) (= 1 x824) (= x1189 x1701))) x1618) (=> (and (and (= x1295 (+ x979 32)) (= (> x727 2) x1229) (= (x1474 x979) x585) (= (x1324 (+ 32 x1701)) x1257)) x312) (and (=> (and (not x1229) (and (= x824 2) (= x1257 x1189) (= x1295 x1046))) x1618) (=> (and (and (= (> x727 3) x1501) (= (x1324 (+ 32 x1257)) x1036) (= x739 (+ x1295 32)) (= (x795 x1295) x934)) x1229) (and (=> (and (not x1501) (and (= x1046 x739) (= x1036 x1189) (= x824 3))) x1618) (=> x1501 x483))))))))) x1646)) x1380))
(assert (x1276 x148))
(assert (= x1271 (x1187 (x1074 x1271 x1679 x92 x197 x1727))))
(assert (=> (>= 10000 x321) (= 0 (x613 x321))))
(assert (x1276 x892))
(assert (= x766 (x1187 (x514 x766 x701 x344 x746 x1659 x497))))
(assert (x1276 x920))
(assert (x1276 x250))
(assert (= (and x84 (not x1518)) x1656))
(assert (= (x278 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)) x533))
(assert (x1276 x58))
(assert (= (x613 (x1605 x100 x543)) (x1605 x100 x543)))
(assert (x1276 x1011))
(assert (x1276 x217))
(assert (x1736 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (= (x1605 x1271 x1409) (x613 (x1605 x1271 x1409))))
(assert (= x856 (and x65 (not x1585))))
(assert (x1276 x1296))
(assert (x1276 x782))
(assert (= (x613 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)))
(assert (=> (>= 10000 x1702) (= 0 (x613 x1702))))
(assert (x1276 x1329))
(assert (= (x613 (x45 x1310 x260 x321 x167 x1426 x270 x255)) (x45 x1310 x260 x321 x167 x1426 x270 x255)))
(assert (= x1755 (x1187 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118))))
(assert (x1276 x908))
(assert (x1276 x1631))
(assert (= 64 (x1187 (x536 64 x1460 3))))
(assert (x1276 x913))
(assert (= (x1563 (x536 x1271 x807 x142)) x142))
(assert (x1276 x103))
(assert (= x451 (x1563 (x45 x766 x1052 x451 x557 x1633 x162 x1026))))
(assert (=> (<= x1308 10000) (= (x613 x1308) 0)))
(assert (=> (<= x1356 10000) (= 0 (x613 x1356))))
(assert (= x661 (=> (and (<= 1 x1681) (= x1642 (x1324 (+ 32 x199))) (= (x1324 (+ x273 x1369)) x1681) (= (x912 (- x134 32)) x745) (= x766 (x744 x199)) (= x134 (x912 (- x1681 x199))) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x199) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1528 (>= 224 x766)) (< x199 x1681)) (and (=> (and (= (x744 x71) x1622) (= x580 (x744 x1642)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1681) (<= 1 x1681)) (and (>= x1681 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1681))) (= x1633 (x744 x419)) (<= x1228 18446744073709551615) (= (x744 x1193) x1151) (= (x744 x1594) x758) (= x183 (x1324 (+ 32 x1642))) (= x746 (x744 x182)) (= x198 (x744 x728)) (= (x744 x673) x497) (= x1530 (x744 x1642)) (= (x1324 (+ x1642 32)) x1620) (= (x1324 (+ x1642 64)) x71) (= x1595 (x744 x997)) (= (x744 x183) x250) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x66) (>= x66 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x44 x302) x375) (= (x744 x1642) x1033) (= x885 (x744 x1667)) (= (x45 x766 x1052 x451 x557 x1633 x162 x1026) x521) (= (x1324 (+ x1642 64)) x182) (= x1779 (x1324 (+ x1642 64))) (= x871 (x1324 (+ x1657 x1250))) (= x212 (x744 x1779)) (= (x744 x747) x376) (= (x744 x1642) x701) (or (<= x1657 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1657 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x1647 x766 x1530 x376 x198) x603) (= x1754 (x1324 (+ 32 x816))) (= (x536 x766 x1033 x250) x1162) (= x1657 (x44 x1250)) (= (x1324 (+ x1642 32)) x243) (= (x1324 (+ x1642 128)) x733) (= (x744 x1704) x1026) (= (x1324 (+ x1642 160)) x997) (<= x436 1461501637330902918203684832716283019655932542975) (= (x1324 (+ 32 x1754)) x1154) (= (<= x100 224) x1691) (= x1193 (x1324 (+ x1642 32))) (= (x1074 x766 x1299 x885 x212 x908) x282) (= x1087 (x1324 (+ 96 x1642))) (= x817 (x744 x1642)) (= (x514 x766 x701 x344 x746 x1659 x497) x421) (= (x44 x871) x436) (= (x1324 (+ 96 x1642)) x539) (>= x1228 1) (= (x1324 (+ 96 x1642)) x1675) (= (x1324 (+ x1250 x66)) x1139) (= (x1324 (+ x1642 32)) x1667) (= (x1324 (+ 32 x1139)) x302) (or (and (<= x1517 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x66)) (and (= (<= x1517 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x66 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x66 x1517))) (= (x1324 (+ x1642 64)) x728) (= x344 (x744 x243)) (= (x744 x1087) x314) (= (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758) x460) (= (x1324 (+ x1681 32)) x816) (= x1176 (x912 (- x1348 x1250))) (= (x744 x1703) x557) (= (x13 x1681) x100) (= x162 (x744 x383)) (= (x1605 x766 x580) x540) (= x1299 (x744 x1642)) (= (x744 x1642) x1052) (= (x1324 (+ x1642 192)) x1594) (= x1098 (x912 (- x932 x1681))) (= (x744 x1675) x908) (<= x375 340282366920938463463374607431768211455) (= (x912 (- x1176 95)) x1517) (= x66 (x44 x1250)) (= x1602 (ite (= x766 0) x966 (ite (<= x766 32) x540 (ite (<= x766 64) x1162 (ite (<= x766 96) x603 (ite (<= x766 128) x282 (ite (>= 160 x766) x421 (ite (<= x766 192) x521 (ite (>= 224 x766) x460 x1475))))))))) (= (x1324 (+ x1642 128)) x383) (= x932 (x1324 (+ 96 x816))) (= (x1324 (+ 64 x1642)) x1703) (or (and (<= x1517 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1657)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1657)) (< x1657 x1517))) (= x747 (x1324 (+ 32 x1642))) (= x1704 (x1324 (+ 160 x1642))) (= (x1324 (+ x1642 128)) x673) (= x1659 (x744 x539)) (< x1681 x932) (= (x1324 (+ x1642 96)) x419) (= x451 (x744 x1620)) (= (x744 x733) x1507) (= x751 (x912 (- x1098 32))) (= x444 (x1324 (+ x1681 32))) (= x966 (x962 0))) (and x1691 (=> (and (= x304 (x13 x1566)) (= x861 (x13 x446)) (= (x13 x444) x396) (= (x1324 (+ x444 128)) x1442) (= (ite (= 0 x100) x882 (ite (>= 32 x100) x872 (ite (<= x100 64) x324 (ite (>= 96 x100) x231 (ite (>= 128 x100) x1537 (ite (<= x100 160) x614 (ite (<= x100 192) x495 (ite (<= x100 224) x1335 x1437)))))))) x1478) (= (x13 x1479) x1573) (= x477 (x13 x523)) (= x799 (x13 x1171)) (= (x1324 (+ x444 96)) x523) (= (x1324 (+ x444 64)) x641) (= (x13 x207) x211) (= (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573) x1335) (= x631 (x13 x1712)) (= x1545 (x13 x571)) (= (x1324 (+ x444 96)) x1469) (= (+ 32 x1677) x1215) (= x637 (x1324 (+ 160 x444))) (= (x13 x778) x398) (= (not (> x1228 1)) x335) (= (x1324 (+ x444 32)) x571) (= (x13 x1469) x1043) (= (x13 x481) x1330) (= x1763 (x1324 (+ x444 32))) (= (x1324 (+ x444 32)) x1717) (= x981 (x13 x1717)) (= x446 (x1324 (+ x444 128))) (= (x13 x444) x1511) (= (x13 x1110) x616) (= (x1324 (+ 64 x444)) x1566) (= (x1324 (+ 160 x444)) x481) (= (x13 x20) x1208) (= (x1324 (+ 64 x444)) x1069) (= x1479 (x1324 (+ x444 192))) (= (x962 0) x882) (= x231 (x1647 x100 x754 x1545 x899)) (= (x1324 (+ 96 x444)) x20) (= x1537 (x1074 x100 x1511 x248 x347 x1043)) (= (x13 x1763) x248) (= (x1324 (+ x444 64)) x1712) (<= 1 x735) (= (x13 x1442) x922) (= x1283 (x13 x444)) (= (x45 x100 x1283 x913 x211 x477 x799 x575) x495) (= x1338 (x13 x444)) (= (x1324 (+ 32 x444)) x1110) (= (x1324 (+ x444 128)) x1171) (= (x1324 (+ 32 x444)) x778) (= (x13 x444) x36) (= (x13 x1344) x913) (= x899 (x13 x1069)) (= (x1605 x100 x543) x872) (= x1327 (x1324 (+ x444 96))) (= x575 (x13 x637)) (= (x536 x100 x36 x398) x324) (= (x13 x641) x347) (= x1344 (x1324 (+ x444 32))) (= x754 (x13 x444)) (= (x514 x100 x396 x616 x304 x1285 x861) x614) (= x1285 (x13 x1327)) (= x543 (x13 x444)) (= (x13 x1677) x735) (= x207 (x1324 (+ 64 x444)))) (and (=> (= x932 x1514) x435) x335)))) x1528))))
(assert (x1736 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (x1276 x1473))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639931)))
(assert (x1276 x196))
(assert (< (x536 x100 x36 x398) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1495 (x1605 x100 x543)) x543))
(assert (x1276 x1292))
(assert (x1276 x1507))
(assert (=> (<= x505 10000) (= (x613 x505) 0)))
(assert (= (x1190 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) x501))
(assert (= (=> (and (and (and (and (= false x1178) (= (x681 704) x159) (= (x681 864) x1452) (= x1112 x1054) (= x1418 x461) (>= 1099511627775 x862) (= x166 (x919 x943)) (= x1123 (+ x1408 1)) (= x1641 false) (= x1709 x1488) (= (x681 800) x1112) (= x1088 x1452) (= (x536 64 x70 3) x1408) (>= 1099511627775 x846) (= (+ 1 x943) x1065) (= x1418 x1743) (= (x1383 x1123) x846) (= x901 (x681 896)) (= (x681 768) x1433) (<= x786 1099511627775) (= x240 x742) (= (ite (not (= 0 (ite (not (= 0 x1373)) 1 0))) 1 0) x1611) (= x257 (+ 1 x1123)) (>= 340282366920938463463374607431768211455 x1296) (= (x791 x1123) x1296) (= x1433 x1305) (= x972 36) (= (x681 960) x240) (= x159 x400) (= (x1104 x1065) x802) (= x1488 (x681 928)) (= x1658 x1362) (>= 340282366920938463463374607431768211455 x1568) (= x1743 x485) (= x1658 (x681 832)) (= 911662625 x41) (= x1373 (x445 x1123)) (= x1685 x901) (= x1202 false) (<= x1368 127) (= (x790 x1123) x862) (= (x784 x257) x1568) (<= x1373 255) (= x703 false) (<= 1 x1653) (= false x1218) (= x1653 (x1481 x748)) (= (+ x257 1) x943) (= x70 x584) (<= x1368 127) (= (x977 x1123) x786) (= false x131)) (and (= x1014 x6) (>= 16777215 x1773) (= x1351 false) (= false x704) (= (x536 64 x140 4) x1465) (= x643 x1713) (>= 127 x1379) (>= x1733 1) (= x443 false) (= x1733 (x1481 x748)) (<= x1379 127) (= (x256 x1465) x1773) (= x266 x782) (= x485 x140) (= x1439 (+ 1 x1465)) (= x1693 false) (= x473 false) (= x323 (+ x266 x1305)) (= x782 (x941 256)) (= 4067465820 x214) (= (= x865 x323) x643) (= x1246 false) (= x1252 (x1524 x1439)))) (and (= x968 x1260) (= (x193 800) x1744) (= x329 x520) (= x366 (x193 928)) (= x339 911662625) (<= x1631 340282366920938463463374607431768211455) (= x1744 x865) (<= x993 127) (= x1376 false) (>= 127 x993) (= x584 x96) (= x1180 (ite (not (= 0 (ite (not (= 0 x1038)) 1 0))) 1 0)) (= (x1383 x463) x221) (= x768 x1358) (<= x1522 1099511627775) (= x38 (x193 896)) (= (x193 960) x329) (= (x1104 x1150) x118) (= (x536 64 x968 3) x1106) (= x93 (x193 704)) (= x1463 false) (= x1353 x1567) (>= 1099511627775 x31) (<= x221 1099511627775) (= x201 (x1481 x748)) (= (+ 1 x1106) x463) (= (+ x463 1) x1286) (= (x193 832) x1358) (= x958 x461) (= x1631 (x791 x463)) (= x1150 (+ 1 x761)) (<= 1 x201) (= x1567 (x193 768)) (= x957 false) (= x1090 x93) (= false x1063) (= x958 x96) (= x1056 x550) (= x1522 (x790 x463)) (= x1038 (x445 x463)) (= (x784 x1286) x1597) (= x38 x773) (= x1586 (x919 x761)) (= x1322 x366) (<= x1038 255) (= (x977 x463) x31) (<= x1597 340282366920938463463374607431768211455) (= (+ 1 x1286) x761) (= (x193 864) x550) (= 36 x326) (= x23 false) (= x777 false))) (and (= 36 x1427) (= x788 x910) (= x910 x1260) (= x461 x788))) x249) x888))
(assert (= (x1187 (x1605 x1755 x148)) x1755))
(assert (= (x1187 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) x1271))
(assert (x1276 x1052))
(assert (> (x536 64 x70 3) 10000))
(assert (not (x1736 (x1647 66 x1716 x815 x1396))))
(assert (not (x1736 (x514 x1755 x1209 x1377 x390 x165 x1303))))
(assert (= (x613 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)) (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573)))
(assert (x1276 x1361))
(assert (= (x1187 (x1605 x1385 x1461)) x1385))
(assert (= (x613 (x536 64 x1309 4)) (x536 64 x1309 4)))
(assert (x1276 x1301))
(assert (x1276 x235))
(assert (= (x507 (x514 x100 x396 x616 x304 x1285 x861)) x304))
(assert (= x660 (x1495 (x536 64 x660 3))))
(assert (=> (>= 10000 x1224) (= 0 (x613 x1224))))
(assert (=> (>= 10000 x1285) (= 0 (x613 x1285))))
(assert (= x1755 (x1187 (x1647 x1755 x414 x213 x638))))
(assert (=> (>= 10000 x701) (= (x613 x701) 0)))
(assert (=> (>= 10000 x270) (= 0 (x613 x270))))
(assert (= (x1495 (x1605 x766 x580)) x580))
(assert (=> (<= x264 10000) (= 0 (x613 x264))))
(assert (=> (<= x693 10000) (= (x613 x693) 0)))
(assert (< (x1605 x1385 x1461) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1045 10000) (= (x613 x1045) 0)))
(assert (x1276 x1508))
(assert (not (x1736 (x45 x1271 x902 x55 x1404 x501 x646 x1509))))
(assert (=> (>= 10000 x1071) (= (x613 x1071) 0)))
(assert (x1276 x290))
(assert (x1276 x1539))
(assert (= (x1563 (x514 x145 x665 x858 x105 x99 x1318)) x858))
(assert (x1276 x1450))
(assert (= (x1074 x766 x1299 x885 x212 x908) (x613 (x1074 x766 x1299 x885 x212 x908))))
(assert (not (x1736 (x536 64 x660 3))))
(assert (=> (>= 10000 x734) (= 0 (x613 x734))))
(assert (=> (>= 10000 x360) (= (x613 x360) 0)))
(assert (= x247 (x1563 (x1074 x1047 x1477 x247 x505 x1198))))
(assert (x1276 x1594))
(assert (> (x1605 x145 x1571) 10000))
(assert (< (x536 64 x140 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1647 x1271 x1352 x121 x1119)))
(assert (x1276 x571))
(assert (x1736 911662625))
(assert (= (x1187 (x1605 x100 x543)) x100))
(assert (x1736 4294967295))
(assert (=> (<= x63 10000) (= 0 (x613 x63))))
(assert (x1276 x79))
(assert (x1276 x137))
(assert (= (x1495 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) x722))
(assert (= (and (not x927) x1637) x1089))
(assert (x1276 x385))
(assert (x1276 x719))
(assert (x1276 x1438))
(assert (x1276 x1168))
(assert (x1276 x632))
(assert (x1276 x553))
(assert (=> (<= x1564 10000) (= 0 (x613 x1564))))
(assert (x1276 x1004))
(assert (= x981 (x1563 (x1152 x100 x1338 x981 x631 x1208 x922 x1330 x1573))))
(assert (= (x613 x648) (x613 (+ x648 1))))
(assert (not (x1736 (x514 x145 x665 x858 x105 x99 x1318))))
(assert (x1276 x1562))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1152 x1047 x155 x675 x1702 x1489 x128 x1135 x1071)))
(assert (=> (>= 10000 x1509) (= (x613 x1509) 0)))
(assert (x1131 x1412))
(assert (x1276 x1727))
(assert (=> (<= x746 10000) (= 0 (x613 x746))))
(assert (=> (>= 10000 x1020) (= 0 (x613 x1020))))
(assert (x1276 x657))
(assert (x1276 x568))
(assert (x1276 x110))
(assert (x1276 x1732))
(assert (x1276 x1363))
(assert (x1276 x577))
(assert (= x1290 (x1423 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (= x1622 (x507 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (=> (<= x155 10000) (= 0 (x613 x155))))
(assert (x1276 x346))
(assert (= (x613 (x1605 x145 x1571)) (x1605 x145 x1571)))
(assert (= x718 (and x720 x467)))
(assert (x1276 x617))
(assert (< 10000 (x536 x1385 x965 x315)))
(assert (x1030 x626))
(assert (x1276 x880))
(assert (= x1299 (x1495 (x1074 x766 x1299 x885 x212 x908))))
(assert (= (=> (and (and (= x1024 (x1324 (+ x1206 32))) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819999 x1265)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1007) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319)) (< x319 x1007)) (and (<= x1007 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x319))) (= (< 0 x1671) x1332) (or (and (= (<= x854 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1007)) (> x1007 x854)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x854) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1007))) (= (x1324 (+ x1492 32)) x656) (= (x1324 (+ x1583 x76)) x1672) (= (x44 x1765) x1583) (= x1206 (x1324 (+ x1250 x1577))) (not (= x723 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1737 (x1324 (+ x903 x76))) (or (and (< x723 x880) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x880) (<= x723 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x880 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x723))) (= (x44 x425) x79) (= x425 (x1324 (+ x319 x1250))) (= (x912 (- x1265 31)) x880) (or (>= x319 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x319)) (= x854 (x44 x1250)) (= x1424 (x1324 (+ x11 128))) (or (and (> x1007 x1577) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1007) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1577))) (and (> x1577 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1007 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1577) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1577)) (= (x912 (- x77 95)) x1007) (= x1136 (+ x1583 31)) (= x1492 (x1324 (+ 32 x11))) (= (x1324 (+ 32 x656)) x928) (= x77 (x912 (- x1348 x1250))) (<= x1583 18446744073709551615) (= x11 (x1324 (+ 4 x987))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x185) (<= x208 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x185 x208)) (and (> x185 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x208)))) (= x1265 (x912 (- x1348 x1729))) (= (x1324 (+ x1765 32)) x208) (= (x194 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1136) x903) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x854) (>= x854 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x912 (- x1737 x987)) x1347) (= x1765 (x1324 (+ x1729 x723))) (= x185 (x912 (- x1348 x1583))) (= (x44 x1232) x723) (>= x863 64) (<= x79 1461501637330902918203684832716283019655932542975) (= (x1324 (+ x854 x1250)) x1729) (= (x44 x1024) x1350) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x863) (= x319 (x44 x1250)) (>= 340282366920938463463374607431768211455 x1350) (= (x1324 (+ x1424 32)) x76) (= x1232 (x1324 (+ x1729 64))) (= x1577 (x44 x1250))) (or (and (and (>= 4294967295 x863) (<= 64 x863) (= x1294 1)) x1332) (and (= x1671 x1294) (not x1332)))) x1725) x1600))
(assert (x1276 x123))
(assert (x1276 x931))
(assert (x1276 x241))
(assert (= (x507 (x45 x1310 x260 x321 x167 x1426 x270 x255)) x167))
(assert (= (and x1142 (not x1021)) x1579))
(assert (=> (<= x1385 10000) (= (x613 x1385) 0)))
(assert (= x321 (x1563 (x45 x1310 x260 x321 x167 x1426 x270 x255))))
(assert (= (=> (and (and (= x459 (x51 256)) (= x842 (+ x252 1)) (= x1616 (x1524 x842)) (= x1497 x114) (<= x1008 16777215) (= x455 false) (= x1304 false) (= x252 (x536 64 x1309 4)) (= x139 x1309) (= false x225) (<= x881 127) (= x1008 (x256 x252)) (= (x51 288) x1525) (= x1274 false) (= (x1481 x748) x343) (= (not x805) x1497) (= x1391 4067465820) (= x459 x1313) (<= x881 127) (>= x343 1) (= x293 x411) (= (= x1525 0) x805) (= false x374) (= x1720 false)) (and (= x996 36) (= x1277 x139) (= x1277 x297) (= x461 x297))) x1207) x1674))
(assert (= x917 (x507 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1647 x1310 x1111 x1780 x184)))
(assert (> (x514 x1271 x1771 x373 x1541 x365 x1045) 10000))
(assert (=> (<= x1493 10000) (= 0 (x613 x1493))))
(assert (x1276 x1068))
(assert (=> (>= 10000 x794) (= 0 (x613 x794))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1074 x100 x1511 x248 x347 x1043)))
(assert (not (x1736 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117))))
(assert (=> (<= x1601 10000) (= 0 (x613 x1601))))
(assert (x1276 x1566))
(assert (x1276 x357))
(assert (x1276 x818))
(assert (= x1404 (x507 (x45 x1271 x902 x55 x1404 x501 x646 x1509))))
(assert (=> (>= 10000 x1004) (= 0 (x613 x1004))))
(assert (= (x536 64 x140 4) (x613 (x536 64 x140 4))))
(assert (=> (>= 10000 x304) (= 0 (x613 x304))))
(assert (x1276 x1280))
(assert (x1276 x1734))
(assert (=> (<= x37 10000) (= 0 (x613 x37))))
(assert (x1736 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (x1736 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (= (x1187 (x536 64 x140 4)) 64))
(assert (x1276 x254))
(assert (= x758 (x796 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (=> (>= 10000 x1121) (= 0 (x613 x1121))))
(assert (x1276 x1046))
(assert (=> (>= 10000 x1352) (= 0 (x613 x1352))))
(assert (x1276 x1502))
(assert (x1276 x1071))
(assert (= 66 (x1187 (x1647 66 x1716 x815 x1396))))
(assert (=> (>= 10000 x798) (= (x613 x798) 0)))
(assert (x1276 x666))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (< (x1647 x1755 x414 x213 x638) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1456 x1686) x809))
(assert (= (x613 (x536 x145 x37 x59)) (x536 x145 x37 x59)))
(assert (= 0 (x613 3686331914)))
(assert (x1276 x1668))
(assert (x1276 x523))
(assert (= (x613 (x1074 x1047 x1477 x247 x505 x1198)) (x1074 x1047 x1477 x247 x505 x1198)))
(assert (x1276 x1652))
(assert (= (and x464 (not x1775)) x938))
(assert (= (x1495 (x1605 x1271 x1409)) x1409))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x514 x1047 x254 x794 x1020 x1564 x1364)))
(assert (=> (>= 10000 x1042) (= (x613 x1042) 0)))
(assert (x1276 x1242))
(assert (x1276 x1661))
(assert (x1276 x1015))
(assert (= (x1187 (x45 x766 x1052 x451 x557 x1633 x162 x1026)) x766))
(assert (= (x796 (x1152 x1755 x465 x1665 x909 x736 x709 x215 x1118)) x1118))
(assert (= x65 (and x1538 x107)))
(assert (= x1571 (x1495 (x1605 x145 x1571))))
(assert (= (x45 x1047 x1395 x986 x619 x579 x470 x1739) (x613 (x45 x1047 x1395 x986 x619 x579 x470 x1739))))
(assert (= (x1187 (x536 x1047 x171 x1690)) x1047))
(assert (x1276 x690))
(assert (not (x1736 (x1605 x766 x580))))
(assert (= x1049 (and x756 x312)))
(assert (x1276 x862))
(assert (x1276 x1688))
(assert (not (x1736 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493))))
(assert (x1276 x886))
(assert (x1276 x534))
(assert (< 10000 (x536 64 x140 4)))
(assert (x1276 x319))
(assert (x1276 x812))
(assert (= x340 (x1563 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (= x1179 (x1563 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493))))
(assert (x1276 x31))
(assert (=> (>= 10000 x1690) (= (x613 x1690) 0)))
(assert (= (x1563 (x1647 x100 x754 x1545 x899)) x1545))
(assert (=> (<= x116 10000) (= (x613 x116) 0)))
(assert (= x1310 (x1187 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (= 64 (x1187 (x536 64 x879 3))))
(assert (x1276 x864))
(assert (x1276 x878))
(assert (> (x1647 x145 x617 x732 x89) 10000))
(assert (x1276 x112))
(assert (x1276 x585))
(assert (x1276 x1223))
(assert (x1276 x729))
(assert (not (x1736 (x514 x1310 x357 x1224 x1060 x1710 x1366))))
(assert (x1276 x822))
(assert (x1276 x1430))
(assert (x1276 x215))
(assert (x1276 x921))
(assert (= x198 (x507 (x1647 x766 x1530 x376 x198))))
(assert (= x1564 (x1190 (x514 x1047 x254 x794 x1020 x1564 x1364))))
(assert (=> (<= x830 10000) (= (x613 x830) 0)))
(assert (x1276 x125))
(assert (= (x1495 (x536 64 x879 3)) x879))
(assert (x1276 x25))
(assert (= (or (and x219 x1023) x519) x1547))
(assert (= (x1495 (x536 64 x1091 3)) x1091))
(assert (= (and x1269 x710) x845))
(assert (> (x514 x766 x701 x344 x746 x1659 x497) 10000))
(assert (x1276 x1200))
(assert (x1276 x1312))
(assert (x1276 x1076))
(assert (x1276 x778))
(assert (=> (>= 10000 x344) (= 0 (x613 x344))))
(assert (= x885 (x1563 (x1074 x766 x1299 x885 x212 x908))))
(assert (= (x613 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x1276 x38))
(assert (x1276 x17))
(assert (x1276 x565))
(assert (x1276 x344))
(assert (= (x45 x145 x1235 x687 x1200 x1734 x1290 x967) (x613 (x45 x145 x1235 x687 x1200 x1734 x1290 x967))))
(assert (x1276 x551))
(assert (x1276 x1482))
(assert (x1276 x255))
(assert (x1276 x14))
(assert (=> (>= 10000 x646) (= (x613 x646) 0)))
(assert (= (x613 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)) (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)))
(assert (= x1509 (x278 (x45 x1271 x902 x55 x1404 x501 x646 x1509))))
(assert (x1276 x245))
(assert (= (x536 64 x1664 x1357) (x613 (x536 64 x1664 x1357))))
(assert (= 0 (x613 19198514131333069964808701557143768876432618777570657477111002777175690575872)))
(assert (> (x1605 x1047 x1499) 10000))
(assert (= (x613 (+ x294 1)) (x613 x294)))
(assert (x1276 x813))
(assert (= (x1423 (x514 x1755 x1209 x1377 x390 x165 x1303)) x1303))
(assert (= (x1187 (x1647 x1310 x1111 x1780 x184)) x1310))
(assert (=> (>= 10000 x347) (= (x613 x347) 0)))
(assert (x1276 x1045))
(assert (x1276 x1384))
(assert (= (x1187 (x1074 x145 x667 x560 x693 x620)) x145))
(assert (= (x613 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (x1276 x814))
(assert (= (x1187 (x1152 x145 x30 x1179 x1731 x116 x97 x226 x1493)) x145))
(assert (= (x507 (x1647 x1755 x414 x213 x638)) x638))
(assert (=> (>= 10000 x1575) (= (x613 x1575) 0)))
(assert (=> (>= 10000 x251) (= 0 (x613 x251))))
(assert (x1276 x441))
(assert (not (x1736 (x1074 x1310 x424 x918 x826 x299))))
(assert (x1736 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (< 10000 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554)))
(assert (=> (>= 10000 x117) (= 0 (x613 x117))))
(assert (= 0 (x613 1099511627775)))
(assert (x1276 x1171))
(assert (x1276 x267))
(assert (= x766 (x1187 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (= x1357 (x1563 (x536 64 x1664 x1357))))
(assert (= (x1074 x145 x667 x560 x693 x620) (x613 (x1074 x145 x667 x560 x693 x620))))
(assert (=> (>= 10000 x1571) (= (x613 x1571) 0)))
(assert (= x1748 (x1495 (x536 64 x1748 4))))
(assert (x1276 x269))
(assert (x1276 x1776))
(assert (x1276 x1250))
(assert (x1276 x135))
(assert (x1276 x1080))
(assert (x1276 x382))
(assert (< (x1605 x145 x1571) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x536 64 x70 3) (x613 (x536 64 x70 3))))
(assert (= x1285 (x1190 (x514 x100 x396 x616 x304 x1285 x861))))
(assert (x1276 x692))
(assert (= (x613 (+ x1188 1)) (x613 x1188)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1074 x1310 x424 x918 x826 x299)))
(assert (= (x613 18446744073709551391) 0))
(assert (x1276 x1096))
(assert (x1276 x1419))
(assert (= x894 (x507 (x1152 x1310 x63 x340 x894 x52 x1450 x533 x1554))))
(assert (x1276 x208))
(assert (x1276 x1774))
(assert (x1276 x1091))
(assert (= (x613 (x1647 x1047 x1688 x1212 x341)) (x1647 x1047 x1688 x1212 x341)))
(assert (x1276 x379))
(assert (x1276 x1067))
(assert (x1276 x1529))
(assert (= x1080 (x1190 (x1152 x1385 x1001 x1684 x1144 x1080 x868 x553 x1575))))
(assert (x1276 x201))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)))
(assert (=> (>= 10000 x1461) (= (x613 x1461) 0)))
(assert (=> (<= x660 10000) (= (x613 x660) 0)))
(assert (=> (>= 10000 x247) (= (x613 x247) 0)))
(assert (x1276 x1180))
(assert (x1276 x1673))
(assert (x1276 x1127))
(assert (x1276 x891))
(assert (= (x613 16777215) 0))
(assert (= (x1563 (x536 x766 x1033 x250)) x250))
(assert (x1276 x100))
(assert (x1276 x1399))
(assert (=> (<= x1475 10000) (= (x613 x1475) 0)))
(assert (x1276 x1477))
(assert (not (x1736 (x1074 x1271 x1679 x92 x197 x1727))))
(assert (x1276 x1012))
(assert (x1276 x706))
(assert (> (x45 x100 x1283 x913 x211 x477 x799 x575) 10000))
(assert (=> (>= 10000 x299) (= 0 (x613 x299))))
(assert (= 0 (x613 115792089237316195423570985008687907853269984665640564039457584007913129639806)))
(assert (x1276 x329))
(assert (= x365 (x1190 (x514 x1271 x1771 x373 x1541 x365 x1045))))
(assert (=> (>= 10000 x631) (= (x613 x631) 0)))
(assert (=> (>= 10000 x899) (= (x613 x899) 0)))
(assert (x1276 x993))
(assert (< 10000 (x536 64 x1748 4)))
(assert (x1276 x1665))
(assert (=> (<= x1318 10000) (= (x613 x1318) 0)))
(assert (= x1207 (=> (and (and (= x806 false) (>= 340282366920938463463374607431768211455 x14) (= x573 x407) (= x156 (x1204 768)) (= x468 (x1383 x1682)) (= (x919 x104) x351) (= (ite (not (= 0 (ite (not (= x1459 0)) 1 0))) 1 0) x691) (= x1436 (x1204 960)) (<= x169 1099511627775) (= (+ 1 x104) x291) (>= 1099511627775 x1401) (= x1459 (x445 x1682)) (>= 127 x272) (= x1251 false) (= x115 false) (= x627 (x1204 800)) (<= x468 1099511627775) (= x1460 x1422) (= x610 x143) (= x449 (x7 x1682)) (= x430 (x1104 x291)) (<= x449 340282366920938463463374607431768211455) (>= x1651 1) (= x1775 (not x711)) (= x1097 x715) (= x574 false) (= x787 x1284) (= x627 x410) (= 0 x229) (= (x536 64 x1460 3) x431) (= 911662625 x775) (= false x1102) (= x573 (x1204 928)) (= x104 (+ x499 1)) (= (x790 x1682) x1401) (= x711 (= x410 0)) (= x686 x135) (= x1097 (x1204 896)) (= (x413 x499) x14) (= x1682 (+ x431 1)) (>= 255 x1459) (= x156 x659) (= x135 (x1204 832)) (= x1436 x354) (= x610 (x1204 704)) (= x1651 (x1481 x748)) (<= x272 127) (= x587 false) (= (x1204 864) x787) (= x499 (+ x1682 1)) (= (x977 x1682) x169)) (and (= x724 36) (= x461 x840) x1159 (= (ite x1518 x114 x293) x1159) (= x964 x1422) (= x840 x964))) (and (=> x1775 x29) (=> (and (not x1775) (and (= x1440 x884) (= x394 x60) (= x394 true))) x562)))))
(assert (x1276 x1303))
(assert (x1276 x198))
(assert (= (x613 (x1074 x100 x1511 x248 x347 x1043)) (x1074 x100 x1511 x248 x347 x1043)))
(assert (= x817 (x1495 (x1152 x766 x817 x1151 x1622 x314 x1507 x1595 x758))))
(assert (x1276 x896))
(assert (< (x536 64 x1664 x1357) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1187 (x1605 x1047 x1499)) x1047))
(assert (= (x1187 (x536 x766 x1033 x250)) x766))
(assert (x1276 x850))
(assert (x1276 x855))
(assert (x1276 x1627))
(assert (x1276 x605))
(assert (x1276 x165))
(assert (x1276 x1571))
(assert (x1276 x755))
(assert (x1276 x127))
(assert (= (=> (and (and (= false x1263) (= x1590 false) (<= 1 x923) (<= x1749 340282366920938463463374607431768211455) (= (x601 800) x1559) (= x1122 (x601 960)) (<= x780 1099511627775) (= (x1383 x471) x780) (= (x1104 x925) x1778) (= x1188 (x536 64 x879 3)) (= x545 (x601 864)) (= x129 x1559) (= x1006 x267) (= x755 x757) (= x650 false) (= (+ x471 1) x1448) (= (x601 896) x277) (>= 1099511627775 x1185) (= x821 (x791 x471)) (= (x977 x471) x1185) (= (x601 704) x317) (= x1425 (ite (not (= (ite (not (= x940 0)) 1 0) 0)) 1 0)) (= x1593 (not x779)) (= x1483 x879) (= x277 x1085) (= (x601 768) x755) (= x1676 false) (= x317 x1041) (= x486 x1078) (>= 255 x940) (= x1320 false) (<= x138 127) (= x925 (+ x640 1)) (= (+ x1448 1) x640) (= x267 (x601 928)) (= x1122 x625) (= (x601 832) x486) (<= x138 127) (= x940 (x445 x471)) (= x676 x545) (= x1314 0) (= x551 911662625) (= (+ 1 x1188) x471) (= x1749 (x784 x1448)) (<= x719 1099511627775) (= false x1669) (= x1109 (x919 x640)) (>= 340282366920938463463374607431768211455 x821) (= x719 (x790 x471)) (= x923 (x1481 x748)) (= x779 (= 0 x129))) (and (= x1483 x1107) (= x1643 x1107) (= 36 x1086) (= x907 false) (= x1643 x461) (= (ite (not (= 0 x1581)) 1 0) x355) (= x1155 false))) (and (=> (and (not x1593) (and (= x1014 x1444) (= x1444 true) (= x1713 x261))) x249) (=> x1593 x888))) x542))
(assert (=> (<= x89 10000) (= 0 (x613 x89))))
(assert (x1276 x854))
(assert (not (x1736 (x536 64 x1309 4))))
(assert (x1276 x1060))
(assert (x1276 x869))
(assert (=> (>= 10000 x944) (= (x613 x944) 0)))
(assert (= x1499 (x1495 (x1605 x1047 x1499))))
(assert (x1276 x228))
(assert (x1276 x1189))
(assert (not (x1736 (x1647 x100 x754 x1545 x899))))
(assert (x1276 x503))
(assert (x1276 x885))
(assert (x1276 x668))
(assert (x1276 x440))
(assert (x1276 x1033))
(assert (= (x613 (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)) (x1152 x1271 x722 x555 x917 x423 x944 x1601 x117)))
(assert (= (x1495 (x1074 x100 x1511 x248 x347 x1043)) x1511))
(assert (x1276 x184))
(assert (= x260 (x1495 (x45 x1310 x260 x321 x167 x1426 x270 x255))))
(assert (x1276 x1342))
(assert (x1276 x311))
(assert (= x470 (x1423 (x45 x1047 x1395 x986 x619 x579 x470 x1739))))
(assert (=> (>= 10000 x617) (= (x613 x617) 0)))
(assert (= (x507 (x1074 x1271 x1679 x92 x197 x1727)) x197))
(assert (= (x613 (x45 x1271 x902 x55 x1404 x501 x646 x1509)) (x45 x1271 x902 x55 x1404 x501 x646 x1509)))
(assert (x1276 x434))
(assert (x1276 x1166))
(assert (= (x1563 (x45 x1755 x1732 x103 x1661 x1301 x552 x1220)) x103))
(assert (=> (>= 10000 x1395) (= 0 (x613 x1395))))
(assert (x1276 x723))
(assert (< (x45 x1271 x902 x55 x1404 x501 x646 x1509) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1276 x1653))
(assert (= 0 (x613 1461501637330902918203684832716283019655932542975)))
(assert (x1276 x1031))
(assert (x1276 x699))
(check-sat)
(exit)
