(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x371 () Int)
(declare-fun x650 () Int)
(declare-fun x583 () Int)
(declare-fun x448 () Int)
(declare-fun x577 () Bool)
(declare-fun x581 () Int)
(declare-fun x471 () Int)
(declare-fun x352 () Int)
(declare-fun x488 () Int)
(declare-fun x660 () Int)
(declare-fun x163 () Int)
(declare-fun x446 () Bool)
(declare-fun x637 () Int)
(declare-fun x500 () Int)
(declare-fun x474 () Bool)
(declare-fun x191 () Bool)
(declare-fun x614 () Int)
(declare-fun x322 () Int)
(declare-fun x509 () Bool)
(declare-fun x168 () Int)
(declare-fun x407 () Bool)
(declare-fun x119 () Bool)
(declare-fun x14 () Int)
(declare-fun x329 () Bool)
(declare-fun x445 () Bool)
(declare-fun x461 () Int)
(declare-fun x434 () Int)
(declare-fun x303 () Bool)
(declare-fun x549 () Int)
(declare-fun x379 () Bool)
(declare-fun x373 (Int) Int)
(declare-fun x424 () Int)
(declare-fun x416 () Bool)
(declare-fun x552 () Int)
(declare-fun x156 () Bool)
(declare-fun x36 () Int)
(declare-fun x41 () Int)
(declare-fun x376 () Int)
(declare-fun x86 () Bool)
(declare-fun x462 () Int)
(declare-fun x454 () Int)
(declare-fun x334 () Bool)
(declare-fun x73 () Int)
(declare-fun x1 () Int)
(declare-fun x414 () Int)
(declare-fun x464 () Int)
(declare-fun x384 () Bool)
(declare-fun x248 () Int)
(declare-fun x264 () Bool)
(declare-fun x280 () Int)
(declare-fun x627 () Int)
(declare-fun x66 () Int)
(declare-fun x418 () Int)
(declare-fun x655 () Int)
(declare-fun x312 () Int)
(declare-fun x26 () Int)
(declare-fun x664 () Int)
(declare-fun x331 () Int)
(declare-fun x399 () Int)
(declare-fun x222 () Int)
(declare-fun x388 () Bool)
(declare-fun x122 () Int)
(declare-fun x335 () Int)
(declare-fun x310 () Int)
(declare-fun x396 () Int)
(declare-fun x12 (Int) Int)
(declare-fun x164 () Bool)
(declare-fun x366 () Int)
(declare-fun x345 () Int)
(declare-fun x13 () Bool)
(declare-fun x654 () Int)
(declare-fun x284 () Int)
(declare-fun x617 () Int)
(declare-fun x501 () Int)
(declare-fun x219 () Int)
(declare-fun x173 () Int)
(declare-fun x656 () Bool)
(declare-fun x167 () Int)
(declare-fun x494 () Int)
(declare-fun x211 () Int)
(declare-fun x467 () Int)
(declare-fun x99 () Bool)
(declare-fun x408 () Int)
(declare-fun x601 () Int)
(declare-fun x263 () Int)
(declare-fun x154 () Int)
(declare-fun x658 () Int)
(declare-fun x481 (Int Int) Int)
(declare-fun x460 () Bool)
(declare-fun x628 () Int)
(declare-fun x83 () Int)
(declare-fun x485 () Bool)
(declare-fun x520 () Int)
(declare-fun x636 () Int)
(declare-fun x50 () Int)
(declare-fun x246 () Int)
(declare-fun x275 () Bool)
(declare-fun x317 () Bool)
(declare-fun x18 () Int)
(declare-fun x607 () Int)
(declare-fun x305 () Int)
(declare-fun x234 () Int)
(declare-fun x440 () Int)
(declare-fun x580 () Bool)
(declare-fun x125 () Int)
(declare-fun x361 () Int)
(declare-fun x49 () Int)
(declare-fun x426 () Bool)
(declare-fun x642 () Int)
(declare-fun x432 () Int)
(declare-fun x648 () Int)
(declare-fun x33 () Int)
(declare-fun x224 () Int)
(declare-fun x457 () Int)
(declare-fun x95 () Int)
(declare-fun x592 () Int)
(declare-fun x573 () Int)
(declare-fun x152 () Int)
(declare-fun x65 () Bool)
(declare-fun x171 () Bool)
(declare-fun x260 () Bool)
(declare-fun x52 () Int)
(declare-fun x121 (Int) Int)
(declare-fun x651 () Int)
(declare-fun x309 () Int)
(declare-fun x534 () Bool)
(declare-fun x531 () Int)
(declare-fun x148 () Int)
(declare-fun x40 () Int)
(declare-fun x24 () Int)
(declare-fun x144 () Int)
(declare-fun x586 () Int)
(declare-fun x493 () Int)
(declare-fun x59 (Int) Int)
(declare-fun x157 () Bool)
(declare-fun x57 () Bool)
(declare-fun x297 () Int)
(declare-fun x527 () Int)
(declare-fun x279 () Bool)
(declare-fun x351 () Int)
(declare-fun x645 () Bool)
(declare-fun x265 () Int)
(declare-fun x558 () Int)
(declare-fun x21 () Int)
(declare-fun x647 () Int)
(declare-fun x623 () Bool)
(declare-fun x392 () Bool)
(declare-fun x230 () Int)
(declare-fun x576 () Int)
(declare-fun x282 (Int) Int)
(declare-fun x669 () Bool)
(declare-fun x71 () Int)
(declare-fun x346 () Int)
(declare-fun x44 () Int)
(declare-fun x562 () Int)
(declare-fun x129 () Bool)
(declare-fun x228 () Int)
(declare-fun x649 () Int)
(declare-fun x557 () Int)
(declare-fun x556 () Int)
(declare-fun x289 () Int)
(declare-fun x548 () Int)
(declare-fun x257 () Bool)
(declare-fun x569 () Int)
(declare-fun x90 () Int)
(declare-fun x613 () Bool)
(declare-fun x400 () Int)
(declare-fun x545 () Int)
(declare-fun x318 () Int)
(declare-fun x162 () Int)
(declare-fun x632 (Int) Int)
(declare-fun x311 () Int)
(declare-fun x631 () Int)
(declare-fun x220 () Int)
(declare-fun x262 () Int)
(declare-fun x198 () Int)
(declare-fun x247 (Int) Int)
(declare-fun x108 () Int)
(declare-fun x478 () Int)
(declare-fun x340 () Int)
(declare-fun x185 () Bool)
(declare-fun x513 (Int) Int)
(declare-fun x143 () Bool)
(declare-fun x186 () Int)
(declare-fun x670 () Int)
(declare-fun x544 () Bool)
(declare-fun x530 () Int)
(declare-fun x668 () Bool)
(declare-fun x386 () Int)
(declare-fun x452 () Int)
(declare-fun x184 () Int)
(declare-fun x395 () Int)
(declare-fun x356 () Int)
(declare-fun x666 () Bool)
(declare-fun x76 () Int)
(declare-fun x417 () Int)
(declare-fun x128 () Bool)
(declare-fun x183 () Bool)
(declare-fun x117 () Int)
(declare-fun x595 () Bool)
(declare-fun x138 () Int)
(declare-fun x385 () Int)
(declare-fun x283 () Int)
(declare-fun x51 () Int)
(declare-fun x88 () Int)
(declare-fun x299 () Int)
(declare-fun x28 () Int)
(declare-fun x276 () Bool)
(declare-fun x161 () Int)
(declare-fun x286 (Int) Int)
(declare-fun x463 () Bool)
(declare-fun x410 () Int)
(declare-fun x93 () Int)
(declare-fun x472 () Int)
(declare-fun x419 (Int) Int)
(declare-fun x123 () Bool)
(declare-fun x174 () Int)
(declare-fun x116 () Bool)
(declare-fun x25 (Int) Int)
(declare-fun x618 () Int)
(declare-fun x274 () Int)
(declare-fun x271 () Bool)
(declare-fun x251 () Int)
(declare-fun x517 () Int)
(declare-fun x380 () Bool)
(declare-fun x324 () Int)
(declare-fun x137 () Int)
(declare-fun x147 () Int)
(declare-fun x630 () Bool)
(declare-fun x643 () Int)
(declare-fun x17 (Int Int Int) Int)
(declare-fun x571 () Int)
(declare-fun x106 () Int)
(declare-fun x487 () Int)
(declare-fun x438 () Bool)
(declare-fun x616 (Int Int) Int)
(declare-fun x190 () Bool)
(declare-fun x4 () Int)
(declare-fun x532 () Int)
(declare-fun x10 () Int)
(declare-fun x100 () Int)
(declare-fun x497 () Int)
(declare-fun x301 () Bool)
(declare-fun x45 () Bool)
(declare-fun x339 () Int)
(declare-fun x579 () Int)
(declare-fun x304 () Int)
(declare-fun x241 () Int)
(declare-fun x261 () Int)
(declare-fun x675 () Int)
(declare-fun x43 () Int)
(declare-fun x363 () Int)
(declare-fun x475 () Int)
(declare-fun x177 () Int)
(declare-fun x266 () Int)
(declare-fun x126 () Int)
(declare-fun x362 () Int)
(declare-fun x364 () Bool)
(declare-fun x413 () Bool)
(declare-fun x102 () Int)
(declare-fun x53 () Int)
(declare-fun x404 () Int)
(declare-fun x67 (Int) Int)
(declare-fun x229 () Int)
(declare-fun x225 () Int)
(declare-fun x292 () Int)
(declare-fun x359 () Int)
(declare-fun x136 () Bool)
(declare-fun x608 () Int)
(declare-fun x394 () Int)
(declare-fun x233 () Bool)
(declare-fun x499 () Int)
(declare-fun x480 () Bool)
(declare-fun x378 () Int)
(declare-fun x56 () Bool)
(declare-fun x422 () Int)
(declare-fun x94 () Int)
(declare-fun x503 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x383 () Int)
(declare-fun x277 () Bool)
(declare-fun x9 () Bool)
(declare-fun x231 () Int)
(declare-fun x409 () Bool)
(declare-fun x565 () Int)
(declare-fun x456 () Bool)
(declare-fun x258 () Int)
(declare-fun x237 () Int)
(declare-fun x267 () Int)
(declare-fun x506 () Int)
(declare-fun x221 () Int)
(declare-fun x212 () Bool)
(declare-fun x287 () Bool)
(declare-fun x338 () Bool)
(declare-fun x272 () Int)
(declare-fun x646 () Int)
(declare-fun x72 (Int) Int)
(declare-fun x313 () Int)
(declare-fun x118 () Int)
(declare-fun x536 () Int)
(declare-fun x97 () Int)
(declare-fun x85 () Int)
(declare-fun x210 () Int)
(declare-fun x227 () Int)
(declare-fun x78 () Bool)
(declare-fun x326 () Int)
(declare-fun x578 () Bool)
(declare-fun x166 () Int)
(declare-fun x63 () Int)
(declare-fun x146 () Bool)
(declare-fun x375 () Bool)
(declare-fun x370 () Int)
(declare-fun x397 () Int)
(declare-fun x256 () Int)
(declare-fun x431 () Bool)
(declare-fun x639 () Int)
(declare-fun x80 () Int)
(declare-fun x568 () Int)
(declare-fun x29 () Bool)
(declare-fun x402 () Int)
(declare-fun x603 () Int)
(declare-fun x563 () Int)
(declare-fun x415 () Int)
(declare-fun x429 () Int)
(declare-fun x214 () Int)
(declare-fun x550 () Int)
(declare-fun x546 () Int)
(declare-fun x180 () Int)
(declare-fun x336 () Int)
(declare-fun x236 () Int)
(declare-fun x202 () Bool)
(declare-fun x344 (Int) Bool)
(declare-fun x411 () Int)
(declare-fun x170 () Int)
(declare-fun x582 () Int)
(declare-fun x466 () Int)
(declare-fun x176 () Int)
(declare-fun x298 () Int)
(declare-fun x75 () Int)
(declare-fun x566 () Int)
(declare-fun x539 () Int)
(declare-fun x175 () Int)
(declare-fun x436 () Bool)
(declare-fun x226 () Int)
(declare-fun x285 () Int)
(declare-fun x291 () Int)
(declare-fun x496 () Bool)
(declare-fun x354 () Int)
(declare-fun x674 () Int)
(declare-fun x347 () Int)
(declare-fun x139 (Int) Int)
(declare-fun x181 () Int)
(declare-fun x300 () Int)
(declare-fun x103 () Bool)
(declare-fun x32 () Bool)
(declare-fun x306 () Bool)
(declare-fun x638 () Int)
(declare-fun x599 () Int)
(declare-fun x521 () Int)
(declare-fun x155 () Int)
(declare-fun x79 () Int)
(declare-fun x115 () Bool)
(declare-fun x525 () Int)
(declare-fun x7 (Int) Int)
(declare-fun x109 () Int)
(declare-fun x255 () Int)
(declare-fun x244 () Int)
(declare-fun x442 () Int)
(declare-fun x516 () Bool)
(declare-fun x58 () Int)
(declare-fun x333 () Int)
(declare-fun x667 () Int)
(declare-fun x131 () Int)
(declare-fun x19 () Bool)
(declare-fun x242 () Bool)
(declare-fun x188 () Int)
(declare-fun x343 () Int)
(declare-fun x11 () Int)
(declare-fun x8 (Int) Int)
(declare-fun x367 (Int) Int)
(declare-fun x489 () Int)
(declare-fun x232 () Int)
(declare-fun x160 () Int)
(declare-fun x133 () Int)
(declare-fun x355 () Int)
(declare-fun x295 () Bool)
(declare-fun x605 () Int)
(declare-fun x621 () Int)
(declare-fun x213 () Int)
(declare-fun x332 () Int)
(declare-fun x505 () Bool)
(declare-fun x342 () Bool)
(declare-fun x37 () Bool)
(declare-fun x439 () Int)
(declare-fun x615 () Int)
(declare-fun x453 () Bool)
(declare-fun x625 () Int)
(declare-fun x193 () Int)
(declare-fun x629 () Int)
(declare-fun x437 () Int)
(declare-fun x403 (Int) Int)
(declare-fun x491 () Int)
(declare-fun x372 () Int)
(declare-fun x598 () Bool)
(declare-fun x308 () Int)
(declare-fun x524 () Int)
(declare-fun x533 (Int) Int)
(declare-fun x635 () Int)
(declare-fun x70 () Int)
(declare-fun x671 () Int)
(declare-fun x159 () Int)
(declare-fun x469 () Bool)
(declare-fun x101 () Int)
(declare-fun x320 () Int)
(declare-fun x441 () Int)
(declare-fun x498 () Int)
(declare-fun x151 () Bool)
(declare-fun x201 () Bool)
(declare-fun x278 () Int)
(declare-fun x132 () Bool)
(declare-fun x327 (Int) Int)
(declare-fun x92 () Bool)
(declare-fun x182 (Int) Int)
(declare-fun x652 () Int)
(declare-fun x473 (Int) Int)
(declare-fun x369 () Int)
(declare-fun x673 () Bool)
(declare-fun x348 () Int)
(declare-fun x486 () Bool)
(declare-fun x574 () Int)
(declare-fun x158 () Bool)
(declare-fun x179 () Int)
(declare-fun x495 () Int)
(declare-fun x483 () Int)
(declare-fun x624 () Bool)
(declare-fun x589 () Int)
(declare-fun x514 () Int)
(declare-fun x315 () Int)
(declare-fun x465 () Int)
(declare-fun x197 () Bool)
(declare-fun x87 () Bool)
(declare-fun x217 () Int)
(declare-fun x60 () Int)
(declare-fun x508 () Int)
(declare-fun x328 () Int)
(declare-fun x81 (Int) Int)
(declare-fun x196 () Bool)
(declare-fun x252 () Int)
(declare-fun x455 () Bool)
(declare-fun x528 () Int)
(declare-fun x449 () Int)
(declare-fun x585 () Bool)
(declare-fun x640 () Int)
(declare-fun x15 () Bool)
(declare-fun x209 () Bool)
(declare-fun x189 () Int)
(declare-fun x665 () Int)
(declare-fun x479 () Int)
(declare-fun x368 () Int)
(declare-fun x150 () Int)
(declare-fun x124 () Bool)
(declare-fun x412 () Bool)
(declare-fun x239 () Int)
(declare-fun x89 () Bool)
(declare-fun x451 () Int)
(declare-fun x405 (Int) Int)
(declare-fun x662 () Int)
(declare-fun x502 () Int)
(declare-fun x423 () Bool)
(declare-fun x16 () Int)
(declare-fun x365 () Int)
(declare-fun x587 () Int)
(declare-fun x537 () Bool)
(declare-fun x612 () Int)
(declare-fun x459 () Int)
(declare-fun x561 () Int)
(declare-fun x389 () Int)
(declare-fun x114 () Bool)
(declare-fun x135 () Int)
(declare-fun x316 () Int)
(declare-fun x554 () Int)
(declare-fun x515 () Int)
(declare-fun x238 () Int)
(declare-fun x27 () Int)
(declare-fun x54 () Int)
(declare-fun x319 () Int)
(declare-fun x620 () Int)
(declare-fun x223 () Int)
(declare-fun x610 () Int)
(declare-fun x23 () Int)
(declare-fun x98 () Int)
(declare-fun x55 () Int)
(declare-fun x245 () Int)
(declare-fun x293 () Bool)
(declare-fun x588 () Int)
(declare-fun x127 () Bool)
(declare-fun x593 () Bool)
(declare-fun x504 () Bool)
(declare-fun x6 () Bool)
(declare-fun x235 () Bool)
(declare-fun x596 () Int)
(declare-fun x323 () Bool)
(declare-fun x325 () Bool)
(declare-fun x406 () Int)
(declare-fun x113 () Int)
(declare-fun x420 () Int)
(declare-fun x169 () Int)
(declare-fun x254 () Bool)
(declare-fun x105 () Int)
(declare-fun x357 () Bool)
(declare-fun x444 () Int)
(declare-fun x314 () Bool)
(declare-fun x206 () Int)
(declare-fun x529 () Bool)
(declare-fun x374 () Int)
(declare-fun x5 () Bool)
(declare-fun x68 () Int)
(declare-fun x140 () Bool)
(declare-fun x195 () Int)
(declare-fun x296 () Int)
(declare-fun x341 () Bool)
(declare-fun x604 () Int)
(declare-fun x567 () Int)
(declare-fun x240 () Int)
(declare-fun x281 () Int)
(declare-fun x430 () Int)
(declare-fun x555 () Int)
(declare-fun x30 () Int)
(declare-fun x307 () Int)
(declare-fun x597 () Int)
(declare-fun x510 () Int)
(declare-fun x553 () Int)
(declare-fun x619 () Int)
(declare-fun x141 () Bool)
(declare-fun x626 () Int)
(declare-fun x600 () Bool)
(declare-fun x200 () Int)
(declare-fun x468 () Int)
(declare-fun x428 () Int)
(declare-fun x112 () Int)
(declare-fun x172 () Int)
(declare-fun x194 (Int) Int)
(declare-fun x96 () Bool)
(declare-fun x253 () Int)
(declare-fun x2 () Int)
(declare-fun x490 () Bool)
(declare-fun x337 () Int)
(declare-fun x590 () Bool)
(declare-fun x543 () Int)
(declare-fun x3 () Bool)
(declare-fun x203 () Int)
(declare-fun x61 () Int)
(declare-fun x381 () Int)
(declare-fun x570 () Int)
(declare-fun x149 () Int)
(declare-fun x644 () Int)
(declare-fun x519 () Int)
(declare-fun x268 () Int)
(declare-fun x433 () Int)
(declare-fun x273 () Int)
(declare-fun x39 () Int)
(declare-fun x602 () Int)
(declare-fun x606 () Int)
(declare-fun x64 () Bool)
(declare-fun x243 () Int)
(declare-fun x470 () Int)
(define-fun x526 ((x31 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x31) (>= x31 0)) x31 (- x31 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x38 ((x31 Int)) Int (ite (and (< x31 0) (>= x31 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x31 115792089237316195423570985008687907853269984665640564039457584007913129639936) x31))
(define-fun x477 ((x421 Int)) Bool (and (>= x421 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x421)))
(define-fun x458 ((x421 Int)) Bool (and (= (x481 x421 115792089237316195423570985008687907853269984665640564039457584007913129639935) x421) (= (x481 115792089237316195423570985008687907853269984665640564039457584007913129639935 x421) x421)))
(define-fun x559 ((x421 Int)) Bool (and (= 0 (x481 x421 0)) (= (x481 0 x421) 0)))
(define-fun x387 ((x421 Int)) Bool (= (x481 x421 x421) x421))
(define-fun x35 ((x421 Int)) Bool (and (x387 x421) (x458 x421) (x559 x421)))
(define-fun x541 ((x421 Int) (x358 Int)) Bool (= (x481 x421 x358) (x481 x358 x421)))
(define-fun x512 ((x421 Int) (x358 Int)) Bool (and (=> (>= x421 0) (>= x421 (x481 x421 x358))) (<= 0 (x481 x421 x358)) (=> (>= x358 0) (<= (x481 x421 x358) x358))))
(define-fun x661 ((x421 Int) (x358 Int)) Bool (and (x512 x421 x358) (x541 x421 x358)))
(define-fun x634 ((x421 Int)) Bool (= (+ (mod x421 32) (x481 x421 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x421 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x294 ((x421 Int)) Bool (and (x661 x421 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x634 x421)))
(define-fun x584 ((x111 Int)) Int 0)
(define-fun x507 ((x111 Int)) Int 0)
(define-fun x542 ((x111 Int)) Int 0)
(define-fun x560 ((x111 Int)) Int 0)
(define-fun x518 ((x111 Int)) Int 0)
(define-fun x330 ((x111 Int)) Int 0)
(define-fun x270 ((x111 Int)) Int 0)
(define-fun x46 ((x111 Int)) Int 0)
(define-fun x564 ((x111 Int)) Int 0)
(define-fun x120 ((x111 Int)) Int 0)
(define-fun x288 ((x111 Int)) Int 0)
(define-fun x107 ((x111 Int)) Int (ite (> x583 x111) (x59 x111) 0))
(define-fun x208 ((x111 Int)) Int (ite (and (<= 0 x111) (< x111 x583)) (x81 x111) (x107 x111)))
(define-fun x84 ((x111 Int)) Int (ite (= x111 x549) x383 (x7 x111)))
(define-fun x641 ((x111 Int)) Int (ite (= x26 x111) x298 (x84 x111)))
(define-fun x205 ((x111 Int)) Int (ite (= 128 x111) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x560 x111)))
(define-fun x134 ((x111 Int)) Int (ite (= 132 x111) x626 (x205 x111)))
(define-fun x633 ((x111 Int)) Int (ite (= 0 x111) x654 (x327 x111)))
(define-fun x130 ((x111 Int)) Int (ite (= 128 x111) x654 (x134 x111)))
(define-fun x350 ((x111 Int)) Int (ite (and (> 160 x111) (>= x111 128)) (x633 (- x111 128)) (x584 x111)))
(define-fun x69 ((x111 Int)) Int (ite (= 160 x111) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x130 x111)))
(define-fun x204 ((x111 Int)) Int (ite (= 164 x111) x626 (x69 x111)))
(define-fun x551 ((x111 Int)) Int (ite (= 196 x111) x297 (x204 x111)))
(define-fun x611 ((x111 Int)) Int (ite (= x111 x376) x520 (x25 x111)))
(define-fun x20 ((x111 Int)) Int (ite (= x665 x111) x552 (x247 x111)))
(define-fun x522 ((x111 Int)) Int (ite (= x111 x243) x175 (x419 x111)))
(define-fun x484 ((x111 Int)) Int (ite (= x400 x111) x39 (x20 x111)))
(define-fun x110 ((x111 Int)) Int (ite (= x111 x243) x108 (x522 x111)))
(define-fun x425 ((x111 Int)) Int (ite (= 160 x111) x539 (x551 x111)))
(define-fun x391 ((x111 Int)) Int (ite (= 160 x111) 64 (x425 x111)))
(define-fun x547 ((x111 Int)) Int (ite (= x111 224) 17 (x391 x111)))
(define-fun x269 ((x111 Int)) Int (ite (= 256 x111) 38178759162904981154777317162179737633240071440092845849123895081988297588736 (x547 x111)))
(define-fun x321 ((x111 Int)) Int (ite (= x111 192) x651 (x269 x111)))
(define-fun x609 ((x111 Int)) Int (ite (= x111 160) 64 (x321 x111)))
(define-fun x653 ((x111 Int)) Int (ite (= x111 224) 17 (x609 x111)))
(define-fun x535 ((x111 Int)) Int (ite (= 256 x111) 38178759162904981154777317162179737633240071440092845849123895081988297588736 (x653 x111)))
(define-fun x77 ((x111 Int)) Int (ite (= x111 192) x18 (x535 x111)))
(define-fun x672 ((x111 Int)) Int (ite (= 160 x111) 64 (x77 x111)))
(define-fun x178 ((x111 Int)) Int (ite (= x111 224) 18 (x672 x111)))
(define-fun x398 ((x111 Int)) Int (ite (= 256 x111) 52652770317569505582723690288179980278421832830854738022242943883071457329152 (x178 x111)))
(define-fun x447 ((x111 Int)) Int (ite (= 192 x111) x418 (x398 x111)))
(define-fun x290 ((x111 Int)) Int (ite (= x365 x111) 64 (x447 x111)))
(define-fun x145 ((x111 Int)) Int (ite (= x111 x285) 24 (x290 x111)))
(define-fun x523 ((x111 Int)) Int (ite (= x299 x111) 52652770317569505582723690288202971708016756236235661301642808468541028696064 (x145 x111)))
(define-fun x250 ((x111 Int)) Int (ite (= x111 x648) x292 (x523 x111)))
(define-fun x215 ((x111 Int)) Int (ite (= x60 x111) 64 (x250 x111)))
(define-fun x249 ((x111 Int)) Int (ite (= x111 x362) 20 (x215 x111)))
(define-fun x42 ((x111 Int)) Int (ite (= x222 x111) 30943483695390580901524686680721538337311323332487717172979551506524230647808 (x249 x111)))
(define-fun x22 ((x111 Int)) Int (ite (= x220 x111) 2 (x42 x111)))
(define-fun x594 ((x111 Int)) Int (ite (= x111 x60) 13631007349276004527017518692750758492052087297179899401704261969112578654208 (x22 x111)))
(define-fun x401 ((x111 Int)) Int (ite (= x186 x111) x243 (x594 x111)))
(define-fun x393 ((x111 Int)) Int (ite (= x319 x111) x626 (x401 x111)))
(define-fun x540 ((x111 Int)) Int (ite (= x60 x111) 64 (x393 x111)))
(define-fun x302 ((x111 Int)) Int (ite (= x111 x261) 20 (x540 x111)))
(define-fun x34 ((x111 Int)) Int (ite (= x464 x111) 30943483695390580901524686680721538337311323332487717172979551506524230647808 (x302 x111)))
(define-fun x199 ((x111 Int)) Int (ite (= x111 x532) 3 (x34 x111)))
(define-fun x450 ((x111 Int)) Int (ite (= x111 x60) 45627974780704586707351216828358829940838126363994895170806983886167712202752 (x199 x111)))
(define-fun x216 ((x111 Int)) Int (ite (= x258 x111) x243 (x450 x111)))
(define-fun x390 ((x111 Int)) Int (x632 x111))
(define-fun x47 ((x111 Int)) Int (ite (= x111 x26) x214 (x390 x111)))
(define-fun x82 ((x111 Int)) Int (ite (= 128 x111) 34281561049507620868767402063515444926704054019041533150295743926309838913536 (x518 x111)))
(define-fun x207 ((x111 Int)) Int (ite (= 132 x111) x243 (x82 x111)))
(define-fun x659 ((x111 Int)) Int (ite (= x111 164) x315 (x207 x111)))
(define-fun x657 ((x111 Int)) Int (ite (= x111 x167) x652 (x484 x111)))
(define-fun x482 ((x111 Int)) Int (ite (= x111 0) x312 (x286 x111)))
(define-fun x435 ((x111 Int)) Int (ite (= x111 128) x312 (x659 x111)))
(define-fun x165 ((x111 Int)) Int (ite (and (<= 128 x111) (> 160 x111)) (x482 (- x111 128)) (x507 x111)))
(define-fun x538 ((x111 Int)) Int (ite (= x111 160) 10108558644833251074119516017929958740665184334561613918892077580020051083264 (x435 x111)))
(define-fun x62 ((x111 Int)) Int (ite (= 164 x111) x243 (x538 x111)))
(define-fun x218 ((x111 Int)) Int (ite (= x148 x111) x461 (x282 x111)))
(define-fun x377 ((x111 Int)) Int (ite (= x111 0) x562 (x182 x111)))
(define-fun x622 ((x111 Int)) Int (ite (and (> 192 x111) (>= x111 160)) (x377 (- x111 160)) (x270 x111)))
(define-fun x349 ((x111 Int)) Int (x473 x111))
(define-fun x259 ((x111 Int)) Int (ite (= x111 x670) x553 (x349 x111)))
(define-fun x360 ((x111 Int)) Int (ite (= x111 x243) x451 (x110 x111)))
(define-fun x187 ((x111 Int)) Int (ite (= x26 x111) x561 (x641 x111)))
(define-fun x382 ((x111 Int)) Int (ite (= x111 x626) x470 (x187 x111)))
(define-fun x663 ((x111 Int)) Int (ite (= x111 x26) x441 (x405 x111)))
(define-fun x153 ((x111 Int)) Int (ite (= x243 x111) x361 (x663 x111)))
(define-fun x91 ((x111 Int)) Int (x12 x111))
(define-fun x511 ((x111 Int)) Int (x67 x111))
(define-fun x476 ((x111 Int)) Int (x121 x111))
(define-fun x353 ((x111 Int)) Int (ite (= x111 x122) x531 (x511 x111)))
(define-fun x575 ((x111 Int)) Int (ite (= x111 128) 34281561049507620868767402063515444926704054019041533150295743926309838913536 (x46 x111)))
(define-fun x591 ((x111 Int)) Int (ite (= 132 x111) x243 (x575 x111)))
(define-fun x48 ((x111 Int)) Int (ite (= 164 x111) x626 (x591 x111)))
(define-fun x192 ((x111 Int)) Int (ite (= x111 0) x262 (x8 x111)))
(define-fun x443 ((x111 Int)) Int (ite (and (>= x111 128) (< x111 160)) (x192 (- x111 128)) (x330 x111)))
(define-fun x142 ((x111 Int)) Int (ite (= x111 x112) x579 (x91 x111)))
(define-fun x74 ((x111 Int)) Int (ite (= x111 x607) x243 (x476 x111)))
(define-fun x492 ((x111 Int)) Int 0)
(define-fun x572 ((x111 Int)) Int 0)
(define-fun x427 ((x111 Int)) Int 0)
(assert (not (x344 (x17 64 x243 18))))
(assert (x477 x454))
(assert (x477 x79))
(assert (x344 1889567281))
(assert (= (x72 (x17 64 x243 3)) 64))
(assert (x477 x525))
(assert (= (x533 (x17 64 x26 x449)) x26))
(assert (x477 x289))
(assert (= 5 (x104 (x17 64 x243 5))))
(assert (=> (= 0 x525) (= (div x24 x525) 0)))
(assert (> (x17 64 x243 17) 10000))
(assert (< 10000 (x17 64 x599 18)))
(assert (= (x533 (x616 32 x170)) x170))
(assert (> (x17 64 x105 17) 10000))
(assert (x477 x614))
(assert (x477 x440))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 x36)))
(assert (= (x72 (x17 64 x626 x159)) 64))
(assert (= (x72 (x17 64 x168 18)) 64))
(assert (not (x344 (x17 64 x93 x256))))
(assert (not (x344 (x17 64 x599 18))))
(assert (x477 x263))
(assert (= (x373 x647) (x373 (+ 1 x647))))
(assert (x35 x311))
(assert (x477 x468))
(assert (> (x17 64 x61 17) 10000))
(assert (x477 x429))
(assert (x477 x137))
(assert (x477 x428))
(assert (= (x72 (x17 64 x626 4)) 64))
(assert (x477 x266))
(assert (x477 x292))
(assert (= (x17 64 x26 x284) (x373 (x17 64 x26 x284))))
(assert (x477 x646))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x243 18)))
(assert (x477 x402))
(assert (x477 x642))
(assert (= (x72 (x17 64 x626 x410)) 64))
(assert (= (x104 (x17 64 x245 17)) 17))
(assert (= (x373 34281561049507620868767402063515444926704054019041533150295743926309838913536) 0))
(assert (x477 x168))
(assert (< 10000 (x17 64 x243 5)))
(assert (= (x373 (x17 64 x626 x36)) (x17 64 x626 x36)))
(assert (x477 x374))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 x596)))
(assert (x477 x195))
(assert (not (x344 (x17 64 x626 x596))))
(assert (< 10000 (x17 64 x26 x284)))
(assert (= 64 (x72 (x17 64 x315 x555))))
(assert (= x129 (or x6 x293)))
(assert (x477 x308))
(assert (x477 x14))
(assert (=> (<= x614 10000) (= 0 (x373 x614))))
(assert (= (or x455 x463) x323))
(assert (x477 x95))
(assert (x477 x149))
(assert (x477 x169))
(assert (not x275))
(assert (= (x17 64 x614 17) (x373 (x17 64 x614 17))))
(assert (> (x17 64 x26 x449) 10000))
(assert (x477 x237))
(assert (=> (>= 10000 x626) (= 0 (x373 x626))))
(assert (= (x17 64 x243 17) (x373 (x17 64 x243 17))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x554 x487)))
(assert (= 64 (x72 (x17 64 x626 x36))))
(assert (< 10000 (x17 64 x93 x256)))
(assert (= (x373 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x477 x664))
(assert (x477 x527))
(assert (x477 x589))
(assert (x477 x488))
(assert (x477 x226))
(assert (= (x533 (x17 64 x245 17)) x245))
(assert (x477 x60))
(assert (= (=> (and (or (and (and (= x68 x592) (= (+ x176 63) x311) (= (x481 115792089237316195423570985008687907853269984665640564039457584007913129639904 x311) x638) (>= x592 1) (<= x365 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x592 (x526 (+ x638 x365))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x365) (< x365 x592) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x365)) (not x375)) (and (= x68 x365) x375)) (and (>= x21 0) (= (x405 x26) x444) (= x21 x361) (= (x526 (+ x365 32)) x648) x287 (= (+ x483 x420) x21) (< (+ x420 x483) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x420 x11)) (= x441 (- x444 x420)) (= x285 (x526 (+ x365 64))) (= x287 (= x402 (x632 x243))) (= (x153 x243) x402) (<= x420 x125) (= (x663 x243) x483) (>= x366 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21) (= (x405 x243) x11) (>= 4294967295 x176) (= (x153 x26) x617) x157 (= (x526 (+ 32 x285)) x299) (= x375 (= x176 0)) (= (<= x617 (x632 x26)) x157) (= (x405 x26) x125))) x416) x57))
(assert (=> (<= x26 10000) (= 0 (x373 x26))))
(assert (not (x344 (x17 64 x243 5))))
(assert (= (x104 (x17 64 x626 x200)) x200))
(assert (x477 x313))
(assert (x477 x328))
(assert (x477 x517))
(assert (x477 x617))
(assert (= x459 (x533 (x17 64 x459 x80))))
(assert (x477 x604))
(assert (=> (<= x627 10000) (= (x373 x627) 0)))
(assert (= (x373 50942633119752846454219349998365661925608737367104304655302372697894809501696) 0))
(assert (x344 1461501637330902918203684832716283019655932542975))
(assert (= 0 (x373 4294967358)))
(assert (= (x373 (x17 64 x26 x462)) (x17 64 x26 x462)))
(assert (= (x533 (x17 64 x243 3)) x243))
(assert (not (x344 (x17 64 x105 17))))
(assert (= x112 (x533 (x616 32 x112))))
(assert (= (x373 (x17 64 x626 x410)) (x17 64 x626 x410)))
(assert (x477 x283))
(assert (= 0 (x373 1461501637330902918203684832716283019655932542975)))
(assert (= 64 (x72 (x17 64 x243 18))))
(assert (< 10000 (x17 64 x459 x80)))
(assert (x477 x33))
(assert (x477 x238))
(assert (not (x344 (x17 64 x168 18))))
(assert (=> (>= 10000 x245) (= (x373 x245) 0)))
(assert (= (x373 (x17 64 x315 x555)) (x17 64 x315 x555)))
(assert (x477 x582))
(assert (x477 x592))
(assert (= x140 (and x242 x271)))
(assert (not (x344 (x17 64 x626 x410))))
(assert (not (x344 (x616 32 x112))))
(assert (x477 x671))
(assert (= (x533 (x17 64 x243 16)) x243))
(assert (< 10000 (x17 64 x554 x487)))
(assert (=> (>= 10000 x587) (= (x373 x587) 0)))
(assert (= (x533 (x17 64 x61 17)) x61))
(assert (x477 x631))
(assert (= x487 (x104 (x17 64 x554 x487))))
(assert (x477 x432))
(assert (not (x344 (x17 64 x626 4))))
(assert (x477 x299))
(assert (x477 x147))
(assert (x477 x223))
(assert (x477 x365))
(assert (= x291 (x104 (x17 64 x26 x291))))
(assert (< 10000 (x17 64 x243 18)))
(assert (x477 x217))
(assert (x477 x528))
(assert (= (x17 64 x243 5) (x373 (x17 64 x243 5))))
(assert (x477 x166))
(assert (x344 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x477 x552))
(assert (= 0 (x373 505602163)))
(assert (x477 x368))
(assert (< 10000 (x17 64 x626 x386)))
(assert (= (x373 (+ 2 x546)) (x373 x546)))
(assert (x477 x28))
(assert (= x474 (or x276 x445)))
(assert (x477 x539))
(assert (= 0 (x373 38178759162904981154777317162179737633240071440092845849123895081988297588736)))
(assert (x477 x361))
(assert (x477 x626))
(assert (x477 x461))
(assert (= 64 (x72 (x17 64 x243 16))))
(assert (x477 x319))
(assert (< 10000 (x17 64 x26 x291)))
(assert (= (x373 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x477 x173))
(assert (x477 x383))
(assert (x477 x300))
(assert (x477 x198))
(assert (= (and (not x490) x323) x6))
(assert (= (x72 (x17 64 x599 18)) 64))
(assert (not (x344 (x17 64 x315 x555))))
(assert (x477 x155))
(assert (x477 x261))
(assert (x477 x437))
(assert (< (x17 64 x315 x555) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x533 (x17 64 x503 x571)) x503))
(assert (x477 x465))
(assert (= (=> (and (and (= x315 x568) (<= x68 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x68 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x68)) (> x371 x68) (not (= x68 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x68 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x60 x371) (= (x526 (+ x68 32)) x371) (= (> x658 0) x490) (not (= x68 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not x202)) (or (and (= (ite x490 1 0) x113) (not x490)) (and (= 1 x113) x490))) x409) x416))
(assert (x477 x549))
(assert (x344 4294967295))
(assert (x477 x83))
(assert (x477 x370))
(assert (= (x72 (x17 64 x626 x596)) 64))
(assert (x477 x501))
(assert (= (=> (and (and (= x5 (not x123)) (not (> x418 x18)) (= (= x231 x675) x123) (= x662 x244) (= x602 x135) (= x602 x231) (= false x413) (= 68 x343) (= x438 false) (= x126 x675)) (and (and (and (= x150 x105) (and (and (= (or (not x5) x496) x423) (= false x92) (= x102 (x218 x556)) (= x496 (>= x102 x352)) (= false x342) (= x16 (x194 x26)) (= false x89) (>= 127 x642) (= x168 x621) (= x556 (x17 64 x168 18)) (= 374947279 x589) (= x128 false) (= false x64) (= false x623) (<= x642 127) (<= 1 x16)) (and (= (+ x267 x40) x352) (= x503 x521) (= false x151) (= x267 (x657 x219)) (= false x485) (= (x17 64 x503 x571) x219) (= false x338) (>= 127 x434) (= x662 x621) (= false x578) (<= 1 x372) (= (x17 64 x105 17) x571) (<= x434 127) (= (x194 x26) x372) (= x341 false) (= false x380) (= 36 x33) (= 1271573771 x332)))) (and (= x1 (x17 64 x93 x256)) (= false x516) (= x150 x662) (= x334 false) (= x521 x126) (= 1271573771 x177) (>= 127 x581) (= x436 false) (= x598 false) (= (x657 x1) x40) (= false x412) (<= 1 x54) (= x135 x93) (= (x17 64 x61 17) x256) (>= 127 x581) (= (x194 x26) x54) (= 68 x465) (= x388 false))) (= x244 x61))) x423) x99))
(assert (= x449 (x104 (x17 64 x26 x449))))
(assert (not (x344 (x17 64 x26 x462))))
(assert (< (x17 64 x626 x410) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x373 16000) 0))
(assert (x477 x30))
(assert (= (x373 (+ x240 2)) (x373 x240)))
(assert (x477 x236))
(assert (x477 x644))
(assert (x477 x309))
(assert (x477 x10))
(assert (=> (>= 10000 x93) (= 0 (x373 x93))))
(assert (x477 x54))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x168 18)))
(assert (=> (>= 10000 x503) (= (x373 x503) 0)))
(assert (< 10000 (x17 64 x26 x462)))
(assert (< 10000 (x17 64 x614 17)))
(assert (= (x17 64 x459 x80) (x373 (x17 64 x459 x80))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x26 x449)))
(assert (x477 x652))
(assert (=> (>= 10000 x459) (= 0 (x373 x459))))
(assert (x344 2646777772))
(assert (= 0 (x373 374947279)))
(assert (= (x373 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= x409 (=> (= (= x113 0) x209) (and (=> x209 x99) (=> (and (not x209) (and (or (and x537 (and (= (x91 x112) x322) (= (+ x448 x322) x607) (= x448 (x616 32 x112)) (= (x17 64 x626 4) x112) (= x579 (x526 (+ x322 1))))) (not x537)) (and (= x118 x649) (= false x191) (= x428 13631007349276004527017518692750758492052087297179899401704261969112578654208) (= 68 x10) (= x241 x606) (= x506 (* 1000000000000000000 x631)) (>= 127 x433) (= 68 x569) (<= x315 1461501637330902918203684832716283019655932542975) (= x223 (x194 x26)) (>= 127 x629) (= x280 x118) (= x248 505602163) (= x631 (x443 128)) (= (x657 x489) x262) (= false x124) (= x612 x626) (= x489 (x17 64 x626 x36)) (= x582 x506) (= x531 (x349 x647)) (= x181 (x526 (+ 64 x186))) (>= 115792089237316195423570985008687907853269984665640564039457 x631) (= x392 false) (= (x526 (+ 32 x186)) x319) (= x236 1271573771) (= 68 x471) (= x71 (x194 x627)) (= x159 (+ 1 x647)) (>= x223 1) (= x37 false) (<= 1 x71) (= x75 x649) (<= x433 127) (= (x17 64 x243 3) x647) (= x612 x606) (= x234 128) (= 34281561049507620868767402063515444926704054019041533150295743926309838913536 x370) (= (< 0 x582) x537) (= x222 (x526 (+ 32 x362))) (= x264 false) (= x174 (x194 x315)) (= x580 false) (= x362 (x526 (+ 64 x60))) (= x569 (x38 (- x181 x60))) (= x220 (x526 (+ x60 32))) (= x137 (x194 x587)) (<= 1 x137) (>= x174 1) (= x186 (x526 (+ x60 4))) (= x36 (x17 64 x243 17)) (= x122 (x17 64 x626 x159)) (>= 127 x629)))) x141)))))
(assert (x344 13631007349276004527017518692750758492052087297179899401704261969112578654208))
(assert (= (x373 (x17 64 x554 x487)) (x17 64 x554 x487)))
(assert (x344 71356987572919795984103299673912204194632180251134163011139925636576289226752))
(assert (x294 x374))
(assert (x477 x51))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x243 16)))
(assert (> (x17 64 x315 x555) 10000))
(assert (x477 x138))
(assert (= (x373 1289673052) 0))
(assert (= (x616 32 x170) (x373 (x616 32 x170))))
(assert (x477 x272))
(assert (x477 x102))
(assert (> (x17 64 x168 18) 10000))
(assert (x477 x597))
(assert (x477 x553))
(assert (x477 x414))
(assert (x477 x579))
(assert (x477 x174))
(assert (= (x104 (x17 64 x626 x36)) x36))
(assert (x477 x568))
(assert (= (x373 45627974780704586707351216828358829940838126363994895170806983886167712202752) 0))
(assert (= (x373 (x17 64 x626 x200)) (x17 64 x626 x200)))
(assert (x477 x471))
(assert (= (x373 (x17 64 x61 17)) (x17 64 x61 17)))
(assert (x477 x262))
(assert (x35 x374))
(assert (x477 x206))
(assert (= (and x490 x323) x293))
(assert (=> (>= 10000 x554) (= (x373 x554) 0)))
(assert (x477 x49))
(assert (x344 16000))
(assert (= (x373 (+ x448 x322)) (x373 x448)))
(assert (x477 x210))
(assert (not (x344 (x17 64 x243 17))))
(assert (x477 x381))
(assert (> (x17 64 x626 x36) 10000))
(assert (x477 x466))
(assert (x477 x310))
(assert (x477 x467))
(assert (= 3 (x104 (x17 64 x243 3))))
(assert (= 0 (x373 2646777772)))
(assert (> (x17 64 x626 0) 10000))
(assert (= (or x140 x456) x624))
(assert (x477 x131))
(assert (< (x616 32 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x373 (x17 64 x599 18)) (x17 64 x599 18)))
(assert (= (x104 (x17 64 x243 17)) 17))
(assert (x477 x39))
(assert (= (or x164 x87) x271))
(assert (x477 x606))
(assert (=> (<= x105 10000) (= (x373 x105) 0)))
(assert (not (x344 (x17 64 x26 x291))))
(assert (= (=> (and (>= 127 x466) (= 45627974780704586707351216828358829940838126363994895170806983886167712202752 x660) (= x210 68) (= x272 (x194 x26)) (= false x279) (= x28 (x194 x26)) (<= 0 x161) (<= x296 127) (= x172 (x38 (- x184 x60))) (not (> x454 x49)) (= 1692435647 x213) (= x486 false) (= (x526 (+ x60 32)) x532) (= x671 34281561049507620868767402063515444926704054019041533150295743926309838913536) (= x289 (x194 x315)) (= (x17 64 x243 3) x670) (= 128 x85) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x586 x664)) (= x389 (x194 x587)) (= x312 (x657 x637)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (= false x201) (<= 1 x272) (= false x171) (= x158 false) (= (x165 128) x454) (= 36 x172) (= false x132) (<= 1 x232) (= x347 (x390 x26)) (= (x526 (+ 32 x258)) x184) (<= x610 127) (= x232 (x194 x627)) (= x161 x553) (>= 127 x466) (>= x336 x133) (= (x349 x670) x664) (= x346 36) (>= x28 1) (= false x529) (= false x254) (= (* x133 1000000000000000000) x24) (= x404 x253) (= x230 (+ x133 x437)) (>= 127 x296) (= (x526 (+ 4 x60)) x258) (= x637 (x17 64 x315 x555)) (= x206 1271573771) (= 10108558644833251074119516017929958740665184334561613918892077580020051083264 x574) (= (x17 64 x243 18) x229) (= (+ x664 x586) x161) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x133 x331)) (>= x307 1) (= (+ x664 x586) x566) (>= 115792089237316195423570985008687907853269984665640564039457 x655) (= x280 x300) (= x253 x300) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x230) (= x214 (- x347 x133)) (= false x86) (>= x566 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x586 x664)) (= x211 36) (= (x390 x627) x331) (>= x655 1) (= x274 (* 1000000000000000000 x655)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x437 x133)) (= 374947279 x472) (= (x526 (+ x261 32)) x464) (= x336 (x390 x26)) (= x73 x230) (>= x289 1) (= x348 160) (<= x161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x315 x318) (= x437 (x47 x627)) (= (x38 (- x49 x454)) x655) (<= 1 x389) (= x253 x95) (= x613 false) (= (x17 64 x243 17) x555) (<= x610 127) (= (div x24 x525) x586) (= x49 (x622 160)) (<= 0 x230) (= (x526 (+ x60 64)) x261) (= (x194 x315) x307) (= x562 (x218 x229)) (= x525 x274)) x99) x141))
(assert (x477 x550))
(assert (= x115 (and x537 x426)))
(assert (= 64 (x72 (x17 64 x61 17))))
(assert (x477 x483))
(assert (x344 10108558644833251074119516017929958740665184334561613918892077580020051083264))
(assert (x344 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x533 (x17 64 x315 x555)) x315))
(assert (> (x17 64 x626 19) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x105 17)))
(assert (= (x373 13631007349276004527017518692750758492052087297179899401704261969112578654208) 0))
(assert (x477 x172))
(assert (x294 x311))
(assert (x477 x336))
(assert (x477 x239))
(assert (> (x17 64 x503 x571) 10000))
(assert (x477 x366))
(assert (x344 505602163))
(assert (x477 x411))
(assert (x477 x88))
(assert (x477 x52))
(assert (x477 x610))
(assert (x477 x520))
(assert (x477 x322))
(assert (< (x17 64 x26 x284) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x344 (x17 64 x243 16))))
(assert (x477 x320))
(assert (= (x72 (x17 64 x626 x386)) 64))
(assert (x477 x243))
(assert (x477 x599))
(assert (> (x17 64 x626 4) 10000))
(assert (x477 x658))
(assert (x477 x586))
(assert (< (x17 64 x243 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x11))
(assert (x477 x70))
(assert (x477 x118))
(assert (x344 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x477 x248))
(assert (x477 x583))
(assert (= 0 (x373 1271573771)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 0)))
(assert (= (x104 (x17 64 x626 19)) 19))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x93 x256)))
(assert (not (x344 (x17 64 x26 x449))))
(assert (= (x72 (x17 64 x614 17)) 64))
(assert (x477 x245))
(assert (= (x373 (x17 64 x626 0)) (x17 64 x626 0)))
(assert (= (and x624 x202) x445))
(assert (= (x104 (x17 64 x626 x596)) x596))
(assert (= x426 (and (not x209) x129)))
(assert (x477 x563))
(assert (x477 x674))
(assert (x477 x234))
(assert (x477 x444))
(assert (x477 x464))
(assert (= x243 (x533 (x17 64 x243 5))))
(assert (x477 x332))
(assert (= (x373 (x17 64 x626 x596)) (x17 64 x626 x596)))
(assert (x477 x601))
(assert (= (x17 64 x93 x256) (x373 (x17 64 x93 x256))))
(assert (= x364 (or (and x209 x129) x357)))
(assert (= (and (not x505) x474) x13))
(assert (x477 x574))
(assert (= 64 (x72 (x17 64 x26 x284))))
(assert (= 64 (x72 (x17 64 x626 0))))
(assert (x477 x638))
(assert (= 17 (x104 (x17 64 x614 17))))
(assert (> (x17 64 x626 x200) 10000))
(assert (not (x344 (x17 64 x626 x200))))
(assert (x477 x296))
(assert (=> (>= 10000 x243) (= 0 (x373 x243))))
(assert (x477 x76))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x614 17)))
(assert (x477 x354))
(assert (x477 x41))
(assert (x477 x404))
(assert (= (x533 (x17 64 x614 17)) x614))
(assert (x477 x316))
(assert (x477 x655))
(assert (x477 x554))
(assert (x477 x503))
(assert (= (x373 4294967295) 0))
(assert (not (x344 (x17 64 x26 x284))))
(assert (x477 x389))
(assert (> (x17 64 x243 16) 10000))
(assert (x477 x184))
(assert (x477 x232))
(assert (< (x17 64 x626 19) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x475))
(assert (x477 x625))
(assert (x477 x26))
(assert (x477 x100))
(assert (> (x17 64 x626 x410) 10000))
(assert (= (x72 (x17 64 x503 x571)) 64))
(assert (x477 x608))
(assert (x477 x343))
(assert (= 64 (x72 (x17 64 x459 x80))))
(assert (=> (<= x315 10000) (= (x373 x315) 0)))
(assert (x477 x515))
(assert (x477 x565))
(assert (x477 x280))
(assert (=> (>= 10000 x599) (= (x373 x599) 0)))
(assert (= x26 (x533 (x17 64 x26 x462))))
(assert (= (x373 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x477 x125))
(assert (= (x104 (x17 64 x26 x462)) x462))
(assert (x477 x2))
(assert (x477 x532))
(assert (= (x373 30943483695390580901524686680721538337311323332487717172979551506524230647808) 0))
(assert (x477 x285))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x61 17)))
(assert (not (x344 (x17 64 x626 0))))
(assert (< 10000 (x17 64 x626 x596)))
(assert (x477 x654))
(assert (= 0 (x373 52652770317569505582723690288202971708016756236235661301642808468541028696064)))
(assert (x477 x162))
(assert (x477 x573))
(assert (not (x344 (x17 64 x626 x159))))
(assert (x477 x418))
(assert (x477 x420))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x503 x571)))
(assert (x477 x355))
(assert (x477 x94))
(assert (x344 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x373 (x17 64 x626 4)) (x17 64 x626 4)))
(assert (= 0 (x373 10108558644833251074119516017929958740665184334561613918892077580020051083264)))
(assert (x477 x61))
(assert (not (x344 (x17 64 x459 x80))))
(assert (< (x17 64 x626 x200) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x378))
(assert (x477 x385))
(assert (x477 x569))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x245 17)))
(assert (= 64 (x72 (x17 64 x105 17))))
(assert (x477 x311))
(assert (= x303 (or x509 x13)))
(assert (x477 x152))
(assert (x477 x408))
(assert (x477 x113))
(assert (x477 x186))
(assert (= (and x505 x474) x509))
(assert (= x284 (x104 (x17 64 x26 x284))))
(assert (x344 1000000000000000000))
(assert (x477 x649))
(assert (= (x373 (x17 64 x243 16)) (x17 64 x243 16)))
(assert (= (x533 (x17 64 x626 19)) x626))
(assert (x344 115792089237316195423570985008687907853269984665640564039457))
(assert (= 17 (x104 (x17 64 x105 17))))
(assert (= x555 (x104 (x17 64 x315 x555))))
(assert (x477 x627))
(assert (x344 34281561049507620868767402063515444926704054019041533150295743926309838913536))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 x386)))
(assert (= 64 (x72 (x17 64 x626 19))))
(assert (x477 x73))
(assert (not (x344 (x17 64 x245 17))))
(assert (= (x104 (x17 64 x503 x571)) x571))
(assert (x477 x347))
(assert (x477 x246))
(assert (not (x344 (x17 64 x243 3))))
(assert (= (x373 (x17 64 x26 x291)) (x17 64 x26 x291)))
(assert (not (x344 (x17 64 x503 x571))))
(assert (x477 x514))
(assert (x477 x497))
(assert (x344 4294967358))
(assert (x344 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x477 x265))
(assert (x477 x648))
(assert (x477 x71))
(assert (x477 x68))
(assert (= (and (not x233) x593) x164))
(assert (= (x373 (x17 64 x626 19)) (x17 64 x626 19)))
(assert (= (x373 1692435647) 0))
(assert (x477 x636))
(assert (x477 x531))
(assert (= x626 (x533 (x17 64 x626 0))))
(assert (= (x533 (x17 64 x26 x291)) x26))
(assert (x477 x176))
(assert (x477 x222))
(assert (= (x373 (x17 64 x626 x386)) (x17 64 x626 x386)))
(assert (= (x373 (x17 64 x26 x449)) (x17 64 x26 x449)))
(assert (> (x616 32 x170) 10000))
(assert (= (x533 (x17 64 x243 17)) x243))
(assert (x477 x4))
(assert (x477 x337))
(assert (= (x17 64 x245 17) (x373 (x17 64 x245 17))))
(assert (=> (>= 10000 x160) (= (x373 x160) 0)))
(assert (= (x373 115792089237316195423570985008687907853269984665640564039457) 0))
(assert (= 64 (x72 (x17 64 x245 17))))
(assert (= (x72 (x17 64 x26 x462)) 64))
(assert (x477 x369))
(assert (x344 1271573771))
(assert (x477 x587))
(assert (x477 x363))
(assert (x344 1692435647))
(assert (x477 x189))
(assert (= (x533 (x17 64 x168 18)) x168))
(assert (= x159 (x104 (x17 64 x626 x159))))
(assert (= x599 (x533 (x17 64 x599 18))))
(assert (x477 x106))
(assert (x477 x18))
(assert (= (x533 (x17 64 x626 x386)) x626))
(assert (= (=> (and (= (< 0 (ite (= x53 0) (ite (= x418 1) 1 0) (ite (= 0 x53) 1 0))) x242) (or (and (not x242) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x239 x44)) (= x163 x106) (= (+ x418 x2) x278) (= x674 x605) (= x628 (* x674 x50)) (< (* x50 x674) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ 1 x385) x50) (>= x53 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x605) (<= 0 x628) (<= x628 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x278 0) (= (* x278 2) x385) (= x239 (+ x53 x418)) (<= x53 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x278 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ x418 x2) x44) (= (div x628 6) x106) (= x2 (- x53 1)) (= x605 (* x44 x239)) (>= x605 0))) (and (= x163 0) x242))) x669) x19))
(assert (x477 x297))
(assert (x477 x620))
(assert (=> (>= 10000 x378) (= 0 (x373 x378))))
(assert (= 32 (x72 (x616 32 x170))))
(assert (< 10000 (x17 64 x243 3)))
(assert (x477 x335))
(assert (= (x533 (x17 64 x243 18)) x243))
(assert (x477 x470))
(assert (= (x533 (x17 64 x626 x200)) x626))
(assert (x477 x98))
(assert (=> (<= x549 10000) (= (x373 x549) 0)))
(assert (x477 x639))
(assert (x477 x508))
(assert (x477 x399))
(assert (= x669 (=> (and (and (< (* x368 x651) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x417 0) (= x166 (x484 x167)) (= (x38 (- x163 x328)) x536) (= x202 (not (= 0 x324))) (<= 0 x188) (= x280 x340) (<= 0 x154) (= (* x536 1000000000000000000) x619) (= x596 (x17 64 x243 17)) (< (* x651 x650) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x652 (x38 (- x166 x418))) (<= x536 115792089237316195423570985008687907853269984665640564039457) (= (x110 x243) x478) (not (< x18 x418)) (<= x558 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* x651 x368) x188) (= (+ x644 x625 x420 x133) x320) (= x558 (* x651 x658)) (= x280 x499) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (>= x558 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x658 x651)) (not (< x163 x328)) (= x417 (* x651 x650)) (= x457 (x17 64 x243 16)) (= x167 (x17 64 x626 x596)) (= x88 0) (not (> x418 x166)) (= x255 (+ x478 x652)) (= (x484 x167) x169) (= x451 (- x255 x169)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x651 x173)) (= (div x558 1000000000000000000) x133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x417) (= (x17 64 x243 18) x148) (= (div x417 1000000000000000000) x625) (= x651 (div x619 16000)) (>= 1461501637330902918203684832716283019655932542975 x324) (= (* x651 x173) x154) (= (x38 (- x18 x418)) x461) (= x644 (div x154 1000000000000000000)) (= (x513 x457) x324) (<= x154 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x420 (div x188 1000000000000000000))) (or (not x202) x202)) x257)))
(assert (= (and (not x242) x271) x456))
(assert (x477 x576))
(assert (x477 x105))
(assert (x477 x160))
(assert (= (x104 (x17 64 x626 x386)) x386))
(assert (= x87 (and x593 x233)))
(assert (x477 x163))
(assert (x477 x359))
(assert (x477 x651))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x616 32 x112)))
(assert (x477 x434))
(assert (=> (>= 10000 x168) (= (x373 x168) 0)))
(assert (x477 x372))
(assert (= (x17 64 x503 x571) (x373 (x17 64 x503 x571))))
(assert (= (x72 (x17 64 x243 5)) 64))
(assert (x477 x53))
(assert (x344 38178759162904981154777317162179737633240071440092845849123895081988297588736))
(assert (x477 x567))
(assert (= (x373 (x17 64 x243 3)) (x17 64 x243 3)))
(assert (= 64 (x72 (x17 64 x626 x200))))
(assert (x477 x193))
(assert (x477 x660))
(assert (= (x104 (x17 64 x93 x256)) x256))
(assert (= (and x303 x375) x463))
(assert (x477 x396))
(assert (x477 x27))
(assert (= 64 (x72 (x17 64 x554 x487))))
(assert (x477 x562))
(assert (= (x72 (x17 64 x243 17)) 64))
(assert (x477 x133))
(assert (= 0 (x373 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= (x533 (x17 64 x105 17)) x105))
(assert (x344 1289673052))
(assert (< (x17 64 x243 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x650))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 x159)))
(assert (x477 x315))
(assert (x477 x324))
(assert (x477 x493))
(assert (x477 x395))
(assert (< (x17 64 x599 18) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x570))
(assert (x477 x177))
(assert (x344 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x477 x318))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x26 x291)))
(assert (= x276 (and (not x202) x624)))
(assert (x477 x258))
(assert (x477 x44))
(assert (x477 x312))
(assert (=> (>= 10000 x61) (= 0 (x373 x61))))
(assert (not (x344 (x17 64 x626 x386))))
(assert (not (x344 (x616 32 x170))))
(assert (x477 x181))
(assert (x344 45627974780704586707351216828358829940838126363994895170806983886167712202752))
(assert (= (x17 64 x626 x159) (x373 (x17 64 x626 x159))))
(assert (x344 374947279))
(assert (x344 30943483695390580901524686680721538337311323332487717172979551506524230647808))
(assert (= x257 (=> (and (or (and (not x505) (and (<= x94 4294967358) (= x374 (+ 63 x369)) (= (+ x94 160) x365) (= (x481 115792089237316195423570985008687907853269984665640564039457584007913129639904 x374) x94) (>= x94 1))) (and x505 (= 160 x365))) (and (= x337 (x38 (- x238 x420))) (= (= x430 (x405 x626)) x32) (not (< x337 x644)) (<= 1 x429) (= (x38 (- x651 x625)) x238) (= x493 (x641 x26)) (= (x641 x626) x52) x32 (= x292 (x38 (- x23 x133))) (= (+ x292 x528) x557) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x528 x292)) (= x237 (x641 x26)) (not (> x420 x238)) (= x470 x557) (<= x557 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (<= x467 (x405 x26)) x96) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x292 x52)) (>= 4294967295 x369) (= (- x237 x292) x561) (= x430 (x382 x626)) (= x23 (x38 (- x337 x644))) (= (= x369 0) x505) (>= x557 0) (= (x187 x626) x528) (<= x292 x493) (= 160 x501) x96 (not (> x625 x651)) (not (< x23 x133)) (= (x382 x26) x467))) x57)))
(assert (= (x104 (x17 64 x243 16)) 16))
(assert (= (x373 (x17 64 x168 18)) (x17 64 x168 18)))
(assert (x477 x543))
(assert (= 64 (x72 (x17 64 x93 x256))))
(assert (= (x104 (x17 64 x599 18)) 18))
(assert (= (x373 (x17 64 x105 17)) (x17 64 x105 17)))
(assert (= (x533 (x17 64 x626 x159)) x626))
(assert (x477 x371))
(assert (x477 x442))
(assert (not (x344 (x17 64 x61 17))))
(assert (= x455 (and (not x375) x303)))
(assert (= 0 (x373 1000000000000000000)))
(assert (x477 x63))
(assert (x477 x331))
(assert (= x593 true))
(assert (x477 x479))
(assert (x477 x179))
(assert (= 18 (x104 (x17 64 x168 18))))
(assert (not (x344 (x17 64 x626 x36))))
(assert (= (x104 (x17 64 x243 18)) 18))
(assert (= x93 (x533 (x17 64 x93 x256))))
(assert (x477 x581))
(assert (x477 x85))
(assert (= x626 (x533 (x17 64 x626 x36))))
(assert (not (x344 (x17 64 x614 17))))
(assert (= (x72 (x616 32 x112)) 32))
(assert (x477 x494))
(assert (x477 x241))
(assert (= (x373 52652770317569505582723690288179980278421832830854738022242943883071457329152) 0))
(assert (x35 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x104 (x17 64 x626 0)) 0))
(assert (x477 x362))
(assert (x477 x433))
(assert (x477 x75))
(assert (x477 x430))
(assert (= (x104 (x17 64 x459 x80)) x80))
(assert (x477 x472))
(assert (x477 x629))
(assert (x477 x211))
(assert (not (x344 (x17 64 x626 19))))
(assert (= x410 (x104 (x17 64 x626 x410))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x459 x80)))
(assert (= (x72 (x17 64 x26 x291)) 64))
(assert (x477 x267))
(assert (x344 52652770317569505582723690288202971708016756236235661301642808468541028696064))
(assert (x477 x307))
(assert (x477 x415))
(assert (x477 x220))
(assert (x477 x346))
(assert (x477 x40))
(assert (x477 x348))
(assert (x344 52652770317569505582723690288179980278421832830854738022242943883071457329152))
(assert (x477 x251))
(assert (x477 x536))
(assert (x477 x253))
(assert (= 0 (x373 1889567281)))
(assert (x477 x298))
(assert (x477 x635))
(assert (= 0 (x373 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (= (x533 (x17 64 x26 x284)) x26))
(assert (x477 x643))
(assert (= (x72 (x17 64 x26 x449)) 64))
(assert (x477 x397))
(assert (< (x17 64 x26 x462) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x495))
(assert (x477 x422))
(assert (=> (<= x27 10000) (= 0 (x373 x27))))
(assert (x477 x50))
(assert (not (x344 (x17 64 x554 x487))))
(assert (x477 x221))
(assert (= x626 (x533 (x17 64 x626 4))))
(assert (= (x17 64 x243 18) (x373 (x17 64 x243 18))))
(assert (= (x533 (x17 64 x554 x487)) x554))
(assert (= (x373 (x616 32 x112)) (x616 32 x112)))
(assert (= (or (and x426 (not x537)) x115) x357))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x17 64 x626 4)))
(assert (x477 x213))
(assert (x477 x23))
(assert (x477 x459))
(assert (= x626 (x533 (x17 64 x626 x596))))
(assert (x477 x16))
(assert (> (x17 64 x245 17) 10000))
(assert (< 10000 (x17 64 x626 x159)))
(assert (= 17 (x104 (x17 64 x61 17))))
(assert (x477 x93))
(assert (< 10000 (x616 32 x112)))
(assert (< (x17 64 x243 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x477 x612))
(assert (= (x533 (x17 64 x626 x410)) x626))
(assert (= 4 (x104 (x17 64 x626 4))))
(assert (= (=> (and (and (= x614 x502) (and (and (<= x646 127) (= (x17 64 x459 x80) x498) (= x504 false) (= x459 x203) (= 68 x597) (= x662 x615) (= x83 (x247 x498)) (= 1271573771 x395) (<= 1 x251) (>= 127 x646) (= x439 x126) (= x251 (x194 x26)) (= false x585) (= false x301) (= false x453) (= x260 false) (= (x17 64 x614 17) x80) (= x673 false)) (and (and (and (= x379 false) (= (x17 64 x554 x487) x252) (= x554 x439) (= x114 false) (= x333 x662) (>= x308 1) (= (x194 x26) x308) (>= 127 x601) (<= x601 127) (= x335 1271573771) (= false x630) (= x138 (x247 x252)) (= x487 (x17 64 x245 17)) (= x43 (+ x138 x83)) (= 36 x217) (= x645 false) (= x235 false) (= false x15)) (and (and (and (or (and x233 (= 0 x328)) (and (not x233) (and (= (* x381 2) x189) (<= x228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x53 x381)) (>= x228 0) (= (- x53 1) x381) (<= 0 x144) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x442 x316)) (= x144 (* x316 x442)) (= x228 x316) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x144) (<= 1 x53) (= (* x381 x53) x228) (= (+ 1 x189) x442) (= x328 x79) (<= x53 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= x79 (div x144 6))))) (and (= x78 false) (= (x17 64 x26 x449) x304) (>= 127 x527) (>= x479 1) (= x109 (x17 64 x626 x410)) (not (< x643 x539)) x469 (>= 1461501637330902918203684832716283019655932542975 x479) (= 1289673052 x636) (= x27 x160) (= (x17 64 x626 x200) x281) (= x411 x468) (= x656 false) (= x543 71356987572919795984103299673912204194632180251134163011139925636576289226752) (>= x160 1) (= x280 x305) (>= 1461501637330902918203684832716283019655932542975 x283) (= x495 128) (= (x17 64 x626 0) x66) (>= 1461501637330902918203684832716283019655932542975 x160) (= (x282 x424) x18) (= x351 (x616 32 x170)) (= (x194 x160) x415) (= x497 0) (= x291 (x17 64 x243 17)) (= (x17 64 x243 17) x386) (= (x25 x588) x263) (= x626 x573) (= x280 x180) (= x432 68) (= x280 x345) (= false x29) (= x240 (x17 64 x243 5)) (= x666 (= x626 x26)) (<= 1 x515) (= x491 (x17 64 x26 x462)) (>= 127 x494) (= x39 x452) (= x108 (- x603 x440)) (= x280 x224) (= x277 false) (= (x17 64 x243 17) x410) (= (x17 64 x243 17) x449) (<= x30 1461501637330902918203684832716283019655932542975) (= (x7 x549) x383) (= (x17 64 x243 17) x284) (= x515 (x194 x160)) (= x539 (div x297 1000000000000000000)) (= x469 (= x283 x243)) (= x355 (x247 x491)) (< (+ x539 x98) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x600 false) (= (+ x240 2) x519) (not (< x639 x539)) (>= x422 1) (= x70 x567) (= x212 false) (= x76 (x38 (- x363 x297))) (= x313 (x38 (- x363 x297))) (= (x403 x519) x160) (>= x18 1) (> x18 x418) (= (x484 x281) x51) (= x546 (x17 64 x243 5)) (= x626 x411) (= x30 (x403 x640)) (not (< x355 x539)) (= (+ x552 x667) x530) (>= x198 1) (= (x419 x243) x667) (not (< x263 x297)) (= 2646777772 x309) (= x462 (x17 64 x243 17)) (= x640 (+ 2 x546)) (>= 127 x494) (<= x527 127) (= (x17 64 x626 0) x376) (= x588 (x17 64 x626 0)) (= x310 x570) (= x175 (- x530 x246)) (= x643 (x247 x339)) (= x195 (x194 x27)) (= x280 x620) x460 (= (x84 x26) x63) (= x339 (x17 64 x26 x284)) (= (x194 x27) x565) (= 0 x4) (<= x162 127) (= (x38 (- x643 x539)) x552) (= x14 (x350 128)) (= x497 (mod x297 1000000000000000000)) (= x603 (+ x406 x39)) (= x573 x193) (= (x20 x400) x440) (<= 1 x415) (= x266 (x139 x170)) (= x179 1889567281) (not x666) (= x27 x160) (= x406 (x522 x243)) (= x400 (x17 64 x626 x386)) (= x408 36) (= (x38 (- x263 x297)) x520) (= (= x53 0) x233) (= x98 (x20 x109)) (= x567 x570) (= (x17 64 x26 x291) x665) (not (< x51 x418)) (not (< x14 x297)) (<= 1 x565) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x226) (= x170 (x17 64 x626 19)) (= x422 (x139 x170)) (= (div x297 1000000000000000000) x418) (= x424 (x17 64 x243 18)) (= x654 (x25 x66)) (= x514 160) (>= x195 1) (= x479 x26) (not (> x418 x18)) (= (x247 x304) x639) (= x356 x549) (>= x30 1) (= x246 (x247 x665)) (= x200 (x17 64 x243 17)) (= x63 x298) (<= x162 127) (= (+ x98 x539) x452) (= (x367 x351) x283) (= (x38 (- x18 x418)) x53) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x452) (= x329 false) (= x131 0) (= (< 0 x266) x460) (= x9 false) (<= 0 x452) (= x198 (x194 x26)))) (= x626 x356)) (and (= false x146) (= false x544) (= x604 x397) (= x599 x333) (= x243 (x81 4)) (= x70 x297) (= false x190) (>= 127 x149) (= x306 false) (= x595 false) x446 (= x243 x620) (= false x185) (>= 127 x149) (= x397 (x81 0)) (= false x197) (>= x221 1) (= x446 (or x103 (not x3))) (= (x17 64 x599 18) x97) (<= x243 1461501637330902918203684832716283019655932542975) (= x221 (x194 x26)) (= (x81 36) x297) (= 374947279 x635) (= x265 (x282 x97)) (= x103 (>= x265 x43))))) (= x245 x615)))) (and (<= 0 x227) x196 (= x627 x587) (= x662 x502) (<= 0 x273) (not (= x26 x378)) (>= x394 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x227) (<= 0 x90) (>= x587 1) x183 (>= 1461501637330902918203684832716283019655932542975 x356) (= (< 0 (x194 x587)) x196) (= x548 x26) (>= 1461501637330902918203684832716283019655932542975 x602) (>= x55 0) (>= x26 1) (>= x662 0) (>= x326 0) (= x602 x203) (>= 1461501637330902918203684832716283019655932542975 x475) (<= x101 1461501637330902918203684832716283019655932542975) (= x26 x152) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x510) (= x399 68) (= (> (x194 x378) 0) x45) (= x602 x117) (= x475 x378) (<= x152 1461501637330902918203684832716283019655932542975) (<= 1 x627) x295 (= x534 false) (<= x225 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x394) (<= 1 x27) (<= x26 1461501637330902918203684832716283019655932542975) (<= x326 4294967295) (not (= x27 x587)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x268) (= x524 0) (<= 68 x583) (<= x90 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x627) (= 2 x618) (>= x356 1) (>= 1461501637330902918203684832716283019655932542975 x126) (= x58 x126) (>= x268 0) (not (= x587 x378)) (>= x101 0) (>= x378 1) (not (= x26 x27)) (<= x378 1461501637330902918203684832716283019655932542975) (= x136 false) (<= 0 x225) (>= x152 1) (>= x126 0) (<= 0 x602) (not (= x587 x26)) x45 (<= 0 x545) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583) (not (= x27 x378)) (>= 1461501637330902918203684832716283019655932542975 x662) (<= x587 1461501637330902918203684832716283019655932542975) (= x183 (> (x194 x26) 0)) (= x500 1289673052) (= (not x119) x3) (>= 1461501637330902918203684832716283019655932542975 x27) (>= x475 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x510) (<= x273 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x384 false) (= false x668) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x55) (= (> (x194 x27) 0) x295) (= (= x58 x117) x119))) x19) x275))
(check-sat)
(exit)
