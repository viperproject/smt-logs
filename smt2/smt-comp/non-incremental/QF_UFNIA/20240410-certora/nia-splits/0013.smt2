(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x62 () Int)
(declare-fun x673 () Bool)
(declare-fun x2702 () Int)
(declare-fun x2259 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x650 () Int)
(declare-fun x1943 () Int)
(declare-fun x635 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1716 () Int)
(declare-fun x503 () Bool)
(declare-fun x2936 () Int)
(declare-fun x2566 () Int)
(declare-fun x498 () Int)
(declare-fun x1846 () Int)
(declare-fun x2536 () Bool)
(declare-fun x558 () Bool)
(declare-fun x3274 () Int)
(declare-fun x3522 () Int)
(declare-fun x25 () Int)
(declare-fun x1497 () Int)
(declare-fun x333 () Bool)
(declare-fun x2332 () Int)
(declare-fun x2479 () Bool)
(declare-fun x932 () Int)
(declare-fun x1775 () Bool)
(declare-fun x476 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1293 () Bool)
(declare-fun x1573 () Int)
(declare-fun x3022 () Int)
(declare-fun x2822 () Int)
(declare-fun x757 () Int)
(declare-fun x3299 () Int)
(declare-fun x758 () Int)
(declare-fun x1415 () Int)
(declare-fun x960 () Int)
(declare-fun x793 () Int)
(declare-fun x2380 () Bool)
(declare-fun x282 () Bool)
(declare-fun x2843 () Int)
(declare-fun x2797 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x697 () Int)
(declare-fun x1904 () Int)
(declare-fun x1105 (Int) Int)
(declare-fun x1162 () Bool)
(declare-fun x2322 () Int)
(declare-fun x1297 () Int)
(declare-fun x1692 () Int)
(declare-fun x2075 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x350 () Int)
(declare-fun x1664 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x928 () Bool)
(declare-fun x3372 () Int)
(declare-fun x2189 () Bool)
(declare-fun x1985 () Int)
(declare-fun x2424 () Bool)
(declare-fun x294 () Bool)
(declare-fun x154 () Int)
(declare-fun x2847 () Bool)
(declare-fun x2047 () Int)
(declare-fun x3377 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x2210 () Int)
(declare-fun x1750 () Int)
(declare-fun x267 () Bool)
(declare-fun x590 (Int) Int)
(declare-fun x2266 () Int)
(declare-fun x2620 () Int)
(declare-fun x1940 () Int)
(declare-fun x517 () Int)
(declare-fun x3364 () Int)
(declare-fun x863 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x271 () Bool)
(declare-fun x2912 () Int)
(declare-fun x1120 () Int)
(declare-fun x2274 (Int) Int)
(declare-fun x2177 () Int)
(declare-fun x2778 () Int)
(declare-fun x2394 () Int)
(declare-fun x2589 () Bool)
(declare-fun x3241 () Int)
(declare-fun x1865 () Int)
(declare-fun x833 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x1898 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2867 () Int)
(declare-fun x339 (Int) Int)
(declare-fun x1291 () Bool)
(declare-fun x589 () Int)
(declare-fun x2831 () Int)
(declare-fun x1591 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x15 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x678 () Int)
(declare-fun x1306 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1204 () Bool)
(declare-fun x1308 () Int)
(declare-fun x89 () Int)
(declare-fun x1247 () Bool)
(declare-fun x292 () Bool)
(declare-fun x208 () Int)
(declare-fun x2714 () Bool)
(declare-fun x1713 () Int)
(declare-fun x3155 () Bool)
(declare-fun x1423 () Int)
(declare-fun x2522 () Int)
(declare-fun x3295 () Int)
(declare-fun x414 () Int)
(declare-fun x37 () Int)
(declare-fun x122 () Bool)
(declare-fun x799 () Int)
(declare-fun x1547 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x536 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2125 () Int)
(declare-fun x3457 () Int)
(declare-fun x1645 () Int)
(declare-fun x619 () Int)
(declare-fun x3411 () Int)
(declare-fun x2581 () Int)
(declare-fun x667 () Int)
(declare-fun x260 () Bool)
(declare-fun x403 () Bool)
(declare-fun x1604 () Int)
(declare-fun x3004 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x2384 () Int)
(declare-fun x3370 () Bool)
(declare-fun x1159 () Int)
(declare-fun x890 () Int)
(declare-fun x1386 () Bool)
(declare-fun x167 () Int)
(declare-fun x3305 () Bool)
(declare-fun x1859 () Int)
(declare-fun x2078 () Int)
(declare-fun x2311 () Int)
(declare-fun x2731 () Int)
(declare-fun x1511 () Int)
(declare-fun x11 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1264 () Int)
(declare-fun x2170 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x3410 () Bool)
(declare-fun x1783 () Int)
(declare-fun x3178 () Int)
(declare-fun x450 (Int) Int)
(declare-fun x168 () Bool)
(declare-fun x2592 (Int) Int)
(declare-fun x1244 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x3261 () Int)
(declare-fun x1757 () Int)
(declare-fun x693 () Int)
(declare-fun x3391 () Int)
(declare-fun x2049 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x2504 () Int)
(declare-fun x3562 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x3219 () Int)
(declare-fun x3023 () Int)
(declare-fun x802 () Bool)
(declare-fun x465 () Bool)
(declare-fun x493 () Int)
(declare-fun x312 () Int)
(declare-fun x1315 () Bool)
(declare-fun x3450 () Int)
(declare-fun x1759 () Int)
(declare-fun x1809 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x3232 () Int)
(declare-fun x1155 () Int)
(declare-fun x786 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x472 () Bool)
(declare-fun x2499 () Int)
(declare-fun x374 () Bool)
(declare-fun x428 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x2842 () Int)
(declare-fun x1536 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x69 () Int)
(declare-fun x1336 () Int)
(declare-fun x1963 () Int)
(declare-fun x2942 () Int)
(declare-fun x1816 () Int)
(declare-fun x3566 () Bool)
(declare-fun x366 () Int)
(declare-fun x2354 () Int)
(declare-fun x1455 () Int)
(declare-fun x2530 () Int)
(declare-fun x1558 () Int)
(declare-fun x3279 () Int)
(declare-fun x2338 () Int)
(declare-fun x2003 () Bool)
(declare-fun x109 () Int)
(declare-fun x2689 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x3603 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x1112 () Int)
(declare-fun x3546 () Int)
(declare-fun x3076 () Int)
(declare-fun x2200 () Bool)
(declare-fun x3083 () Int)
(declare-fun x2629 () Int)
(declare-fun x242 () Bool)
(declare-fun x3517 () Bool)
(declare-fun x1734 () Int)
(declare-fun x670 () Bool)
(declare-fun x3153 () Bool)
(declare-fun x3371 () Int)
(declare-fun x3561 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x66 () Int)
(declare-fun x2911 () Int)
(declare-fun x1652 () Int)
(declare-fun x2678 () Bool)
(declare-fun x1944 () Int)
(declare-fun x1060 () Int)
(declare-fun x239 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x3168 () Int)
(declare-fun x926 () Bool)
(declare-fun x3072 () Int)
(declare-fun x3170 () Bool)
(declare-fun x10 () Int)
(declare-fun x1380 () Int)
(declare-fun x3315 () Bool)
(declare-fun x2539 () Int)
(declare-fun x2902 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1724 () Int)
(declare-fun x380 () Int)
(declare-fun x2334 () Int)
(declare-fun x1935 () Int)
(declare-fun x2895 () Int)
(declare-fun x1314 () Int)
(declare-fun x1705 () Int)
(declare-fun x2301 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x827 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x1274 () Int)
(declare-fun x354 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x226 () Bool)
(declare-fun x3474 () Int)
(declare-fun x848 () Int)
(declare-fun x789 () Bool)
(declare-fun x2241 () Int)
(declare-fun x1577 () Int)
(declare-fun x2770 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2160 () Int)
(declare-fun x1642 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x2051 () Int)
(declare-fun x266 () Int)
(declare-fun x3534 () Bool)
(declare-fun x773 () Int)
(declare-fun x1908 () Int)
(declare-fun x352 () Int)
(declare-fun x2088 () Bool)
(declare-fun x897 () Bool)
(declare-fun x3379 () Int)
(declare-fun x1938 (Int) Int)
(declare-fun x2762 () Int)
(declare-fun x1829 () Bool)
(declare-fun x384 () Int)
(declare-fun x2070 () Int)
(declare-fun x686 () Int)
(declare-fun x3070 () Int)
(declare-fun x662 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x369 () Int)
(declare-fun x86 () Int)
(declare-fun x1735 () Int)
(declare-fun x2655 () Int)
(declare-fun x1183 () Bool)
(declare-fun x2478 () Int)
(declare-fun x54 () Bool)
(declare-fun x1412 () Int)
(declare-fun x1995 () Int)
(declare-fun x829 () Int)
(declare-fun x2248 () Int)
(declare-fun x2293 () Int)
(declare-fun x2173 () Int)
(declare-fun x552 () Int)
(declare-fun x2798 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x847 () Bool)
(declare-fun x3008 () Int)
(declare-fun x324 () Int)
(declare-fun x832 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x2595 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x418 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x3037 () Int)
(declare-fun x3354 () Int)
(declare-fun x656 () Int)
(declare-fun x2543 () Int)
(declare-fun x2251 () Int)
(declare-fun x775 () Bool)
(declare-fun x80 () Bool)
(declare-fun x3635 () Int)
(declare-fun x3528 () Int)
(declare-fun x1538 () Int)
(declare-fun x279 () Bool)
(declare-fun x114 () Bool)
(declare-fun x2042 () Int)
(declare-fun x351 () Int)
(declare-fun x429 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x959 () Bool)
(declare-fun x744 () Bool)
(declare-fun x2908 () Int)
(declare-fun x561 () Bool)
(declare-fun x395 () Int)
(declare-fun x3240 () Bool)
(declare-fun x3602 () Bool)
(declare-fun x910 () Bool)
(declare-fun x39 () Bool)
(declare-fun x3548 () Int)
(declare-fun x1675 () Int)
(declare-fun x105 () Bool)
(declare-fun x1103 () Int)
(declare-fun x2026 () Bool)
(declare-fun x1778 () Int)
(declare-fun x639 () Bool)
(declare-fun x3285 () Int)
(declare-fun x2086 () Int)
(declare-fun x436 () Bool)
(declare-fun x1970 (Int) Int)
(declare-fun x1798 () Bool)
(declare-fun x454 () Int)
(declare-fun x304 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1947 () Int)
(declare-fun x3189 () Bool)
(declare-fun x1708 () Int)
(declare-fun x599 () Int)
(declare-fun x3011 (Int) Int)
(declare-fun x570 (Int) Int)
(declare-fun x2321 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1804 () Int)
(declare-fun x263 () Bool)
(declare-fun x801 () Int)
(declare-fun x3543 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x3024 () Int)
(declare-fun x3449 () Bool)
(declare-fun x1138 () Int)
(declare-fun x2571 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x2820 () Int)
(declare-fun x2222 (Int) Int)
(declare-fun x2793 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x1125 () Int)
(declare-fun x2837 () Bool)
(declare-fun x1688 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x3200 () Int)
(declare-fun x2236 () Int)
(declare-fun x2326 () Int)
(declare-fun x2600 () Int)
(declare-fun x99 () Int)
(declare-fun x968 () Bool)
(declare-fun x93 () Int)
(declare-fun x3444 () Int)
(declare-fun x3401 () Int)
(declare-fun x1459 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x2373 () Int)
(declare-fun x94 () Bool)
(declare-fun x2111 () Int)
(declare-fun x2435 () Int)
(declare-fun x1254 () Int)
(declare-fun x448 () Int)
(declare-fun x2445 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x434 () Bool)
(declare-fun x2289 () Int)
(declare-fun x3466 () Bool)
(declare-fun x519 () Bool)
(declare-fun x2811 () Int)
(declare-fun x3150 () Bool)
(declare-fun x3361 () Int)
(declare-fun x1974 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x3510 () Int)
(declare-fun x2593 () Int)
(declare-fun x642 () Int)
(declare-fun x1234 () Int)
(declare-fun x855 () Int)
(declare-fun x2085 () Int)
(declare-fun x145 () Int)
(declare-fun x1081 () Bool)
(declare-fun x682 () Bool)
(declare-fun x3149 () Int)
(declare-fun x1828 () Int)
(declare-fun x2387 () Bool)
(declare-fun x998 () Int)
(declare-fun x882 () Int)
(declare-fun x1381 () Bool)
(declare-fun x284 () Bool)
(declare-fun x807 () Int)
(declare-fun x1273 () Bool)
(declare-fun x3477 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2647 () Int)
(declare-fun x306 () Int)
(declare-fun x861 () Int)
(declare-fun x117 () Bool)
(declare-fun x1951 () Int)
(declare-fun x2564 () Int)
(declare-fun x3527 () Bool)
(declare-fun x1176 () Int)
(declare-fun x2690 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x138 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x3558 () Int)
(declare-fun x756 () Int)
(declare-fun x1587 () Int)
(declare-fun x1143 () Int)
(declare-fun x691 () Bool)
(declare-fun x1050 () Int)
(declare-fun x129 () Bool)
(declare-fun x1240 () Int)
(declare-fun x3442 () Int)
(declare-fun x2234 () Bool)
(declare-fun x181 () Bool)
(declare-fun x2562 () Int)
(declare-fun x1179 () Bool)
(declare-fun x841 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x1457 () Int)
(declare-fun x2105 () Bool)
(declare-fun x2705 () Int)
(declare-fun x3201 () Int)
(declare-fun x1710 () Bool)
(declare-fun x2480 () Int)
(declare-fun x1270 () Int)
(declare-fun x3462 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x1890 (Int) Int)
(declare-fun x95 () Int)
(declare-fun x760 () Int)
(declare-fun x795 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x630 () Int)
(declare-fun x2658 (Int Int Int Int Int Int Int) Int)
(declare-fun x3188 () Int)
(declare-fun x401 () Bool)
(declare-fun x298 () Bool)
(declare-fun x326 () Int)
(declare-fun x3107 () Bool)
(declare-fun x2279 () Int)
(declare-fun x1027 () Bool)
(declare-fun x3185 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x945 () Int)
(declare-fun x2420 () Bool)
(declare-fun x3524 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2080 (Int) Int)
(declare-fun x466 () Int)
(declare-fun x2348 () Int)
(declare-fun x4 () Int)
(declare-fun x3113 () Int)
(declare-fun x2662 () Int)
(declare-fun x1844 () Int)
(declare-fun x920 () Bool)
(declare-fun x146 () Bool)
(declare-fun x816 () Int)
(declare-fun x372 (Int) Int)
(declare-fun x931 () Bool)
(declare-fun x3402 () Int)
(declare-fun x218 () Int)
(declare-fun x565 () Bool)
(declare-fun x3443 () Int)
(declare-fun x2053 () Bool)
(declare-fun x980 () Int)
(declare-fun x3583 () Int)
(declare-fun x1502 () Int)
(declare-fun x836 () Int)
(declare-fun x2883 () Int)
(declare-fun x487 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1983 () Bool)
(declare-fun x796 () Int)
(declare-fun x884 () Bool)
(declare-fun x1801 () Int)
(declare-fun x3322 () Int)
(declare-fun x3306 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x2610 () Int)
(declare-fun x3630 () Int)
(declare-fun x1527 () Bool)
(declare-fun x3099 () Int)
(declare-fun x811 () Int)
(declare-fun x986 () Bool)
(declare-fun x3366 () Int)
(declare-fun x3639 () Int)
(declare-fun x3122 () Int)
(declare-fun x1961 () Int)
(declare-fun x3610 () Int)
(declare-fun x798 () Int)
(declare-fun x899 () Bool)
(declare-fun x2328 () Int)
(declare-fun x3151 () Int)
(declare-fun x2626 () Int)
(declare-fun x906 () Int)
(declare-fun x3532 () Int)
(declare-fun x2989 () Int)
(declare-fun x579 () Int)
(declare-fun x166 () Int)
(declare-fun x136 () Int)
(declare-fun x1109 () Bool)
(declare-fun x318 () Int)
(declare-fun x2523 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1752 (Int) Int)
(declare-fun x1894 () Int)
(declare-fun x1338 () Int)
(declare-fun x3294 () Int)
(declare-fun x3505 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x580 () Int)
(declare-fun x156 () Int)
(declare-fun x2089 () Int)
(declare-fun x623 () Int)
(declare-fun x1320 () Int)
(declare-fun x3203 () Int)
(declare-fun x3339 () Int)
(declare-fun x1787 (Int) Int)
(declare-fun x2490 () Bool)
(declare-fun x2345 () Int)
(declare-fun x983 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x612 (Int) Int)
(declare-fun x2698 () Int)
(declare-fun x474 () Bool)
(declare-fun x2669 () Int)
(declare-fun x2945 () Int)
(declare-fun x3448 () Bool)
(declare-fun x1972 () Int)
(declare-fun x2237 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1184 () Int)
(declare-fun x3049 () Int)
(declare-fun x2400 () Int)
(declare-fun x2377 () Int)
(declare-fun x3137 () Bool)
(declare-fun x2720 (Int) Int)
(declare-fun x1180 () Bool)
(declare-fun x1956 () Int)
(declare-fun x2856 () Int)
(declare-fun x3237 () Int)
(declare-fun x3497 () Int)
(declare-fun x504 () Bool)
(declare-fun x3470 () Int)
(declare-fun x1026 () Int)
(declare-fun x3636 () Int)
(declare-fun x492 () Int)
(declare-fun x741 () Int)
(declare-fun x864 () Int)
(declare-fun x3609 () Bool)
(declare-fun x3441 () Int)
(declare-fun x3623 () Bool)
(declare-fun x219 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x2899 () Int)
(declare-fun x1744 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1889 () Int)
(declare-fun x974 () Int)
(declare-fun x2904 () Int)
(declare-fun x3087 () Bool)
(declare-fun x3184 () Int)
(declare-fun x874 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x3427 () Int)
(declare-fun x817 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x2068 () Int)
(declare-fun x3374 () Int)
(declare-fun x2557 () Int)
(declare-fun x1482 () Int)
(declare-fun x531 () Int)
(declare-fun x1206 () Int)
(declare-fun x3347 () Bool)
(declare-fun x1932 () Int)
(declare-fun x525 () Int)
(declare-fun x761 () Int)
(declare-fun x1803 () Bool)
(declare-fun x1163 () Int)
(declare-fun x1731 () Bool)
(declare-fun x217 () Int)
(declare-fun x815 () Bool)
(declare-fun x3455 () Int)
(declare-fun x1967 () Int)
(declare-fun x1200 () Int)
(declare-fun x447 () Int)
(declare-fun x1358 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x856 () Int)
(declare-fun x416 () Int)
(declare-fun x2570 () Int)
(declare-fun x2850 () Int)
(declare-fun x3215 () Bool)
(declare-fun x1901 () Int)
(declare-fun x1030 () Int)
(declare-fun x753 () Int)
(declare-fun x1896 () Int)
(declare-fun x2546 () Int)
(declare-fun x3533 () Bool)
(declare-fun x3013 () Int)
(declare-fun x3130 () Int)
(declare-fun x2355 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x79 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x3248 () Int)
(declare-fun x526 () Int)
(declare-fun x2910 () Int)
(declare-fun x3283 () Bool)
(declare-fun x2376 () Int)
(declare-fun x925 () Bool)
(declare-fun x2889 () Int)
(declare-fun x2716 () Int)
(declare-fun x1566 () Int)
(declare-fun x3484 () Int)
(declare-fun x3551 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x1295 () Int)
(declare-fun x2594 () Int)
(declare-fun x1436 () Int)
(declare-fun x545 () Int)
(declare-fun x2397 (Int) Int)
(declare-fun x327 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x2708 () Int)
(declare-fun x452 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2903 () Int)
(declare-fun x1981 () Int)
(declare-fun x2960 () Bool)
(declare-fun x1154 () Int)
(declare-fun x3190 () Int)
(declare-fun x1084 () Int)
(declare-fun x483 () Bool)
(declare-fun x2410 () Int)
(declare-fun x751 () Int)
(declare-fun x2416 () Bool)
(declare-fun x626 () Bool)
(declare-fun x243 () Int)
(declare-fun x718 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x473 () Int)
(declare-fun x1345 () Int)
(declare-fun x2916 () Int)
(declare-fun x3167 () Bool)
(declare-fun x1396 () Int)
(declare-fun x331 () Int)
(declare-fun x592 () Bool)
(declare-fun x415 () Bool)
(declare-fun x3536 () Int)
(declare-fun x375 () Int)
(declare-fun x2980 () Bool)
(declare-fun x3063 () Int)
(declare-fun x442 () Bool)
(declare-fun x3266 () Int)
(declare-fun x203 () Int)
(declare-fun x381 () Int)
(declare-fun x3409 () Int)
(declare-fun x103 () Int)
(declare-fun x399 () Int)
(declare-fun x1392 () Int)
(declare-fun x3009 () Bool)
(declare-fun x1368 () Int)
(declare-fun x2405 () Int)
(declare-fun x2606 () Int)
(declare-fun x3340 () Bool)
(declare-fun x1617 () Int)
(declare-fun x1141 (Int) Int)
(declare-fun x2780 () Bool)
(declare-fun x1076 () Int)
(declare-fun x3163 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x2429 () Int)
(declare-fun x3027 () Bool)
(declare-fun x3420 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1072 () Int)
(declare-fun x2483 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x2573 () Int)
(declare-fun x602 () Int)
(declare-fun x2327 () Bool)
(declare-fun x3218 () Int)
(declare-fun x803 () Int)
(declare-fun x3400 () Int)
(declare-fun x1811 () Bool)
(declare-fun x822 () Int)
(declare-fun x651 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x809 () Int)
(declare-fun x1066 () Bool)
(declare-fun x1256 () Int)
(declare-fun x3296 () Int)
(declare-fun x417 () Bool)
(declare-fun x1235 () Int)
(declare-fun x3143 () Int)
(declare-fun x2006 () Bool)
(declare-fun x1119 () Int)
(declare-fun x229 () Int)
(declare-fun x846 () Bool)
(declare-fun x1941 () Int)
(declare-fun x2442 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x520 () Int)
(declare-fun x2449 () Int)
(declare-fun x1521 () Int)
(declare-fun x1529 () Int)
(declare-fun x3570 () Bool)
(declare-fun x2335 () Int)
(declare-fun x361 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x250 () Bool)
(declare-fun x989 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1863 (Int) Int)
(declare-fun x1031 () Bool)
(declare-fun x137 () Int)
(declare-fun x211 () Int)
(declare-fun x2553 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x3086 () Int)
(declare-fun x2351 () Int)
(declare-fun x1937 () Int)
(declare-fun x444 () Bool)
(declare-fun x2684 (Int) Int)
(declare-fun x1806 () Bool)
(declare-fun x1808 () Int)
(declare-fun x3198 () Int)
(declare-fun x2159 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x3547 () Int)
(declare-fun x1349 () Int)
(declare-fun x1377 () Int)
(declare-fun x329 () Int)
(declare-fun x3357 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x3549 () Bool)
(declare-fun x13 () Int)
(declare-fun x1408 () Int)
(declare-fun x733 () Bool)
(declare-fun x227 (Int) Int)
(declare-fun x1610 () Int)
(declare-fun x1160 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x3125 () Int)
(declare-fun x1646 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x3116 () Bool)
(declare-fun x2712 (Int) Int)
(declare-fun x2250 () Bool)
(declare-fun x542 () Int)
(declare-fun x212 () Int)
(declare-fun x1223 () Int)
(declare-fun x1083 () Int)
(declare-fun x966 () Bool)
(declare-fun x1216 () Int)
(declare-fun x1074 () Bool)
(declare-fun x293 () Bool)
(declare-fun x302 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x247 () Int)
(declare-fun x501 () Int)
(declare-fun x1186 () Bool)
(declare-fun x2860 () Int)
(declare-fun x702 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x1835 () Int)
(declare-fun x2292 () Bool)
(declare-fun x2951 () Int)
(declare-fun x2106 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x2614 () Int)
(declare-fun x792 () Bool)
(declare-fun x2640 () Int)
(declare-fun x1414 () Int)
(declare-fun x152 () Int)
(declare-fun x1313 () Int)
(declare-fun x731 () Int)
(declare-fun x676 () Int)
(declare-fun x1648 () Int)
(declare-fun x2703 () Int)
(declare-fun x2371 () Int)
(declare-fun x330 () Bool)
(declare-fun x2846 () Int)
(declare-fun x522 () Int)
(declare-fun x3545 () Int)
(declare-fun x1129 () Int)
(declare-fun x118 () Bool)
(declare-fun x601 () Int)
(declare-fun x767 () Int)
(declare-fun x2419 () Int)
(declare-fun x3028 () Bool)
(declare-fun x1210 () Int)
(declare-fun x2628 () Int)
(declare-fun x1321 () Int)
(declare-fun x2190 () Int)
(declare-fun x1812 () Int)
(declare-fun x869 () Bool)
(declare-fun x462 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x963 () Int)
(declare-fun x1930 () Bool)
(declare-fun x1211 () Int)
(declare-fun x3244 () Int)
(declare-fun x1953 () Int)
(declare-fun x911 () Int)
(declare-fun x2178 () Int)
(declare-fun x3438 () Int)
(declare-fun x3516 () Bool)
(declare-fun x2390 () Int)
(declare-fun x2719 () Int)
(declare-fun x1858 () Bool)
(declare-fun x771 () Bool)
(declare-fun x419 () Int)
(declare-fun x769 () Int)
(declare-fun x3179 () Int)
(declare-fun x173 () Bool)
(declare-fun x1503 () Int)
(declare-fun x805 () Bool)
(declare-fun x420 () Int)
(declare-fun x2801 () Int)
(declare-fun x1994 () Int)
(declare-fun x272 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2444 () Bool)
(declare-fun x2525 () Int)
(declare-fun x659 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x3490 () Int)
(declare-fun x901 () Bool)
(declare-fun x2356 () Int)
(declare-fun x1385 () Int)
(declare-fun x1239 () Int)
(declare-fun x3432 () Bool)
(declare-fun x3301 () Int)
(declare-fun x234 () Int)
(declare-fun x2282 () Bool)
(declare-fun x715 () Int)
(declare-fun x46 () Int)
(declare-fun x2974 () Int)
(declare-fun x2462 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1826 () Bool)
(declare-fun x541 () Int)
(declare-fun x407 () Int)
(declare-fun x1499 () Bool)
(declare-fun x2694 () Int)
(declare-fun x2333 () Int)
(declare-fun x1912 () Int)
(declare-fun x3521 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1871 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x2057 () Int)
(declare-fun x2855 () Int)
(declare-fun x1906 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x373 () Int)
(declare-fun x2007 () Int)
(declare-fun x3182 () Int)
(declare-fun x2151 () Int)
(declare-fun x2511 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x3264 (Int) Int)
(declare-fun x2225 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x2206 () Int)
(declare-fun x1892 () Int)
(declare-fun x2517 () Int)
(declare-fun x1960 () Bool)
(declare-fun x1444 () Int)
(declare-fun x852 () Int)
(declare-fun x3642 () Int)
(declare-fun x1479 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x594 () Int)
(declare-fun x740 () Int)
(declare-fun x3275 () Bool)
(declare-fun x826 () Int)
(declare-fun x3601 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x2193 () Int)
(declare-fun x1907 () Bool)
(declare-fun x1185 () Int)
(declare-fun x967 () Int)
(declare-fun x2905 () Bool)
(declare-fun x1355 () Int)
(declare-fun x3059 () Int)
(declare-fun x735 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x2386 () Int)
(declare-fun x2350 () Int)
(declare-fun x1172 () Int)
(declare-fun x3627 () Int)
(declare-fun x937 () Bool)
(declare-fun x2851 () Int)
(declare-fun x2726 () Int)
(declare-fun x1029 () Bool)
(declare-fun x1417 () Int)
(declare-fun x2896 (Int) Int)
(declare-fun x2955 (Int) Int)
(declare-fun x2032 () Int)
(declare-fun x3523 () Bool)
(declare-fun x2637 () Int)
(declare-fun x2000 () Int)
(declare-fun x1830 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x2605 () Int)
(declare-fun x578 () Int)
(declare-fun x2036 () Int)
(declare-fun x49 () Bool)
(declare-fun x2434 () Int)
(declare-fun x55 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x348 () Bool)
(declare-fun x2824 () Bool)
(declare-fun x624 () Int)
(declare-fun x2001 () Bool)
(declare-fun x2485 () Int)
(declare-fun x337 () Int)
(declare-fun x2185 () Int)
(declare-fun x2346 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x588 () Int)
(declare-fun x213 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x231 () Bool)
(declare-fun x547 () Int)
(declare-fun x205 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x65 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1181 () Int)
(declare-fun x2711 () Int)
(declare-fun x2470 () Bool)
(declare-fun x1900 () Int)
(declare-fun x3032 () Bool)
(declare-fun x3349 () Int)
(declare-fun x3417 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1845 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x2918 () Int)
(declare-fun x199 () Bool)
(declare-fun x131 () Bool)
(declare-fun x866 () Int)
(declare-fun x1299 () Int)
(declare-fun x392 () Int)
(declare-fun x2624 () Int)
(declare-fun x2374 () Int)
(declare-fun x1843 () Int)
(declare-fun x1035 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x2437 () Int)
(declare-fun x360 () Int)
(declare-fun x2368 () Int)
(declare-fun x3147 () Int)
(declare-fun x1593 () Int)
(declare-fun x359 () Int)
(declare-fun x617 () Int)
(declare-fun x964 () Int)
(declare-fun x675 () Int)
(declare-fun x1134 () Bool)
(declare-fun x3325 () Int)
(declare-fun x396 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x3236 () Int)
(declare-fun x3249 () Int)
(declare-fun x3097 () Bool)
(declare-fun x3337 () Int)
(declare-fun x264 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x2701 () Int)
(declare-fun x3611 () Bool)
(declare-fun x334 () Int)
(declare-fun x379 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2226 () Int)
(declare-fun x3026 () Int)
(declare-fun x2372 () Bool)
(declare-fun x2296 () Int)
(declare-fun x2361 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x1632 () Int)
(declare-fun x398 () Bool)
(declare-fun x1014 () Int)
(declare-fun x3564 () Int)
(declare-fun x3593 () Int)
(declare-fun x2548 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x512 () Int)
(declare-fun x3177 () Int)
(declare-fun x1285 () Bool)
(declare-fun x1443 () Int)
(declare-fun x3145 () Int)
(declare-fun x2636 () Int)
(declare-fun x641 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x1868 () Int)
(declare-fun x532 () Int)
(declare-fun x3345 () Bool)
(declare-fun x3520 () Bool)
(declare-fun x3492 () Int)
(declare-fun x427 () Int)
(declare-fun x2515 () Int)
(declare-fun x3176 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x620 () Int)
(declare-fun x965 () Int)
(declare-fun x1509 () Int)
(declare-fun x930 () Int)
(declare-fun x2404 () Bool)
(declare-fun x984 () Int)
(declare-fun x63 () Int)
(declare-fun x2077 () Int)
(declare-fun x1639 () Bool)
(declare-fun x2755 () Int)
(declare-fun x3269 () Int)
(declare-fun x3159 () Bool)
(declare-fun x3580 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1464 () Int)
(declare-fun x2673 () Int)
(declare-fun x478 () Int)
(declare-fun x1089 () Int)
(declare-fun x2432 () Int)
(declare-fun x2209 () Bool)
(declare-fun x241 () Int)
(declare-fun x818 () Bool)
(declare-fun x3194 () Bool)
(declare-fun x1376 () Int)
(declare-fun x313 () Int)
(declare-fun x3243 () Bool)
(declare-fun x215 () Int)
(declare-fun x1751 () Int)
(declare-fun x3571 () Bool)
(declare-fun x347 () Int)
(declare-fun x2744 () Int)
(declare-fun x1374 () Bool)
(declare-fun x3078 () Int)
(declare-fun x1709 () Int)
(declare-fun x1006 () Int)
(declare-fun x990 () Int)
(declare-fun x1924 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1420 () Int)
(declare-fun x724 () Int)
(declare-fun x124 () Bool)
(declare-fun x3515 () Int)
(declare-fun x1928 () Int)
(declare-fun x3343 () Int)
(declare-fun x1288 () Bool)
(declare-fun x3446 () Int)
(declare-fun x283 () Int)
(declare-fun x747 () Bool)
(declare-fun x3006 (Int Int Int) Int)
(declare-fun x1704 () Int)
(declare-fun x2862 () Int)
(declare-fun x2913 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1501 () Int)
(declare-fun x1136 () Int)
(declare-fun x2625 () Int)
(declare-fun x174 () Int)
(declare-fun x3569 () Int)
(declare-fun x1145 () Int)
(declare-fun x2758 () Int)
(declare-fun x2304 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x200 () Int)
(declare-fun x2892 () Bool)
(declare-fun x1318 () Int)
(declare-fun x2949 () Bool)
(declare-fun x425 () Bool)
(declare-fun x2648 () Int)
(declare-fun x2863 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1847 () Bool)
(declare-fun x946 () Bool)
(declare-fun x33 () Bool)
(declare-fun x515 () Bool)
(declare-fun x3634 () Bool)
(declare-fun x3388 () Int)
(declare-fun x2506 () Bool)
(declare-fun x3413 () Int)
(declare-fun x134 () Bool)
(declare-fun x3563 (Int) Int)
(declare-fun x3458 () Bool)
(declare-fun x2172 () Int)
(declare-fun x2469 () Int)
(declare-fun x3084 () Int)
(declare-fun x2948 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1248 () Int)
(declare-fun x3378 () Bool)
(declare-fun x2500 () Int)
(declare-fun x540 () Int)
(declare-fun x914 () Bool)
(declare-fun x2554 () Int)
(declare-fun x3336 () Bool)
(declare-fun x1238 () Int)
(declare-fun x2844 () Int)
(declare-fun x764 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x999 () Int)
(declare-fun x1531 (Int) Int)
(declare-fun x3628 () Bool)
(declare-fun x19 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x320 () Int)
(declare-fun x875 () Bool)
(declare-fun x2130 () Int)
(declare-fun x1207 () Bool)
(declare-fun x521 () Int)
(declare-fun x644 () Int)
(declare-fun x3502 (Int) Int)
(declare-fun x2408 () Int)
(declare-fun x3038 () Int)
(declare-fun x698 () Int)
(declare-fun x3174 () Int)
(declare-fun x1289 () Int)
(declare-fun x821 () Bool)
(declare-fun x438 () Int)
(declare-fun x1087 () Int)
(declare-fun x3496 () Int)
(declare-fun x2663 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1977 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x449 () Int)
(declare-fun x3267 () Int)
(declare-fun x387 () Bool)
(declare-fun x2342 () Int)
(declare-fun x1897 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x102 () Int)
(declare-fun x1616 () Int)
(declare-fun x1875 (Int) Int)
(declare-fun x1469 () Int)
(declare-fun x1437 () Int)
(declare-fun x2423 () Int)
(declare-fun x1196 () Int)
(declare-fun x2917 () Int)
(declare-fun x2813 () Bool)
(declare-fun x3495 () Int)
(declare-fun x3445 () Int)
(declare-fun x3416 () Int)
(declare-fun x1876 () Int)
(declare-fun x2772 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1982 () Int)
(declare-fun x717 () Int)
(declare-fun x1913 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x862 () Int)
(declare-fun x3090 () Int)
(declare-fun x2590 () Int)
(declare-fun x586 () Bool)
(declare-fun x2679 () Int)
(declare-fun x3397 () Int)
(declare-fun x730 () Int)
(declare-fun x1758 () Int)
(declare-fun x787 () Int)
(declare-fun x2229 () Int)
(declare-fun x1987 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x513 () Int)
(declare-fun x2750 () Int)
(declare-fun x497 () Int)
(declare-fun x988 () Int)
(declare-fun x2138 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x3555 () Int)
(declare-fun x2670 () Int)
(declare-fun x3258 () Bool)
(declare-fun x275 () Int)
(declare-fun x1990 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x853 (Int) Int)
(declare-fun x286 () Int)
(declare-fun x1131 () Bool)
(declare-fun x42 () Bool)
(declare-fun x1851 () Int)
(declare-fun x1133 () Bool)
(declare-fun x830 () Bool)
(declare-fun x3434 () Int)
(declare-fun x1243 () Bool)
(declare-fun x2487 () Int)
(declare-fun x245 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2019 () Bool)
(declare-fun x2175 () Int)
(declare-fun x2243 () Bool)
(declare-fun x421 () Int)
(declare-fun x3406 () Bool)
(declare-fun x1728 () Int)
(declare-fun x44 () Int)
(declare-fun x58 () Int)
(declare-fun x1776 () Bool)
(declare-fun x3489 () Int)
(declare-fun x1621 () Int)
(declare-fun x3230 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x1237 () Int)
(declare-fun x3139 () Int)
(declare-fun x738 () Int)
(declare-fun x1203 () Int)
(declare-fun x18 () Int)
(declare-fun x3229 () Bool)
(declare-fun x496 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x2849 () Int)
(declare-fun x3183 () Int)
(declare-fun x479 () Int)
(declare-fun x31 () Int)
(declare-fun x3079 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x433 () Int)
(declare-fun x820 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x1877 () Int)
(declare-fun x660 () Int)
(declare-fun x2683 () Int)
(declare-fun x1276 () Bool)
(declare-fun x991 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x88 () Bool)
(declare-fun x603 () Int)
(declare-fun x238 () Int)
(declare-fun x739 () Int)
(declare-fun x3144 () Bool)
(declare-fun x232 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x781 () Bool)
(declare-fun x397 () Int)
(declare-fun x2382 () Bool)
(declare-fun x557 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x2463 () Int)
(declare-fun x2239 () Int)
(declare-fun x895 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x258 () Int)
(declare-fun x1426 (Int) Int)
(declare-fun x490 () Bool)
(declare-fun x488 () Bool)
(declare-fun x2602 () Int)
(declare-fun x1466 () Int)
(declare-fun x2452 () Int)
(declare-fun x106 () Bool)
(declare-fun x1711 () Int)
(declare-fun x609 (Int) Int)
(declare-fun x198 () Bool)
(declare-fun x701 () Bool)
(declare-fun x1701 () Int)
(declare-fun x1899 () Int)
(declare-fun x67 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1438 () Int)
(declare-fun x2474 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x2638 () Int)
(declare-fun x2461 () Int)
(declare-fun x3208 () Bool)
(declare-fun x2312 () Int)
(declare-fun x2923 () Int)
(declare-fun x953 () Bool)
(declare-fun x1627 () Int)
(declare-fun x400 () Bool)
(declare-fun x800 () Int)
(declare-fun x1488 () Int)
(declare-fun x1312 () Bool)
(declare-fun x61 (Int Int Int Int) Int)
(declare-fun x1697 () Int)
(declare-fun x1071 () Bool)
(declare-fun x3328 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x3077 () Int)
(declare-fun x3313 () Bool)
(declare-fun x2194 () Int)
(declare-fun x1730 () Int)
(declare-fun x1429 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x1772 () Int)
(declare-fun x3463 () Int)
(declare-fun x2872 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x261 () Bool)
(declare-fun x3514 () Int)
(declare-fun x2252 () Bool)
(declare-fun x2858 (Int) Int)
(declare-fun x2005 () Int)
(declare-fun x273 () Bool)
(declare-fun x873 () Bool)
(declare-fun x2830 () Int)
(declare-fun x1265 () Int)
(declare-fun x695 () Int)
(declare-fun x2040 () Bool)
(declare-fun x1607 () Int)
(declare-fun x482 () Int)
(declare-fun x778 () Int)
(declare-fun x927 () Int)
(declare-fun x315 () Bool)
(declare-fun x3228 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x2782 () Int)
(declare-fun x1157 () Int)
(declare-fun x1815 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x754 () Int)
(declare-fun x2497 () Bool)
(declare-fun x666 () Int)
(declare-fun x1560 () Int)
(declare-fun x51 () Int)
(declare-fun x149 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x338 () Bool)
(declare-fun x996 () Bool)
(declare-fun x2269 () Int)
(declare-fun x1849 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x430 () Bool)
(declare-fun x949 () Bool)
(declare-fun x3529 () Int)
(declare-fun x256 () Int)
(declare-fun x2988 () Int)
(declare-fun x893 () Int)
(declare-fun x837 () Int)
(declare-fun x3095 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x584 () Bool)
(declare-fun x494 () Int)
(declare-fun x2736 () Int)
(declare-fun x2751 () Int)
(declare-fun x3134 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1672 () Int)
(declare-fun x3342 () Int)
(declare-fun x41 () Bool)
(declare-fun x2257 () Int)
(declare-fun x995 () Int)
(declare-fun x2660 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x3398 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x2503 () Int)
(declare-fun x2607 () Int)
(declare-fun x3161 () Int)
(declare-fun x1049 () Int)
(declare-fun x1882 () Bool)
(declare-fun x2890 () Int)
(declare-fun x27 () Bool)
(declare-fun x34 () Int)
(declare-fun x3640 () Bool)
(declare-fun x887 () Int)
(declare-fun x3053 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x310 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x2743 () Int)
(declare-fun x3622 () Int)
(declare-fun x2520 () Int)
(declare-fun x618 (Int) Int)
(declare-fun x728 () Int)
(declare-fun x1874 () Int)
(declare-fun x71 () Int)
(declare-fun x2791 () Int)
(declare-fun x3067 () Int)
(declare-fun x2215 () Int)
(declare-fun x3500 () Int)
(declare-fun x2456 () Bool)
(declare-fun x684 () Bool)
(declare-fun x2631 () Int)
(declare-fun x936 () Int)
(declare-fun x814 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1557 () Int)
(declare-fun x1862 () Int)
(declare-fun x230 () Bool)
(declare-fun x1434 () Int)
(declare-fun x3234 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x2887 () Int)
(declare-fun x1921 () Int)
(declare-fun x2577 () Bool)
(declare-fun x3556 () Int)
(declare-fun x3196 () Int)
(declare-fun x383 () Int)
(declare-fun x692 () Int)
(declare-fun x2039 () Int)
(declare-fun x777 () Bool)
(declare-fun x1546 () Int)
(declare-fun x2448 () Int)
(declare-fun x405 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x3572 () Int)
(declare-fun x2428 () Int)
(declare-fun x704 () Int)
(declare-fun x3512 () Int)
(declare-fun x2609 () Bool)
(declare-fun x2495 () Int)
(declare-fun x3021 () Int)
(declare-fun x1018 () Bool)
(declare-fun x2021 () Int)
(declare-fun x1363 () Int)
(declare-fun x1335 () Int)
(declare-fun x977 () Int)
(declare-fun x197 () Bool)
(declare-fun x2833 () Bool)
(declare-fun x2233 () Int)
(declare-fun x2256 () Int)
(declare-fun x3384 () Int)
(declare-fun x1485 () Bool)
(declare-fun x2727 () Int)
(declare-fun x1915 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x1590 () Int)
(declare-fun x2453 () Int)
(declare-fun x3225 () Bool)
(declare-fun x3557 () Bool)
(declare-fun x2126 () Int)
(declare-fun x3091 () Bool)
(declare-fun x858 () Int)
(declare-fun x1422 () Int)
(declare-fun x2588 () Int)
(declare-fun x2391 () Bool)
(declare-fun x1328 () Int)
(declare-fun x2166 () Bool)
(declare-fun x2815 () Int)
(declare-fun x3526 () Int)
(declare-fun x1561 () Int)
(declare-fun x1167 () Int)
(declare-fun x2532 () Int)
(declare-fun x1 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x300 () Int)
(declare-fun x2367 () Int)
(declare-fun x646 () Int)
(declare-fun x2284 () Int)
(declare-fun x28 () Bool)
(declare-fun x281 () Bool)
(declare-fun x849 () Bool)
(declare-fun x2081 () Int)
(declare-fun x402 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x2489 () Int)
(declare-fun x113 () Int)
(declare-fun x696 () Int)
(declare-fun x2451 () Bool)
(declare-fun x1317 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1612 () Int)
(declare-fun x2385 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x3488 () Int)
(declare-fun x2238 () Bool)
(declare-fun x307 () Bool)
(declare-fun x2644 () Int)
(declare-fun x189 () Int)
(declare-fun x301 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x2986 () Int)
(declare-fun x2722 () Bool)
(declare-fun x2092 () Int)
(declare-fun x2767 () Bool)
(declare-fun x597 () Int)
(declare-fun x3259 () Int)
(declare-fun x2681 (Int) Int)
(declare-fun x1260 () Int)
(declare-fun x2866 () Bool)
(declare-fun x68 (Int) Int)
(declare-fun x3111 () Int)
(declare-fun x1187 () Int)
(declare-fun x2208 () Int)
(declare-fun x2439 () Int)
(declare-fun x311 () Bool)
(declare-fun x2516 () Int)
(declare-fun x654 () Int)
(declare-fun x288 () Int)
(declare-fun x346 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x2059 () Int)
(declare-fun x2176 (Int) Int)
(declare-fun x653 () Int)
(declare-fun x1869 () Bool)
(declare-fun x1984 () Int)
(declare-fun x2187 () Int)
(declare-fun x1926 () Bool)
(declare-fun x2033 () Int)
(declare-fun x606 () Int)
(declare-fun x3594 () Bool)
(declare-fun x2521 () Int)
(declare-fun x688 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1366 () Int)
(declare-fun x3321 () Bool)
(declare-fun x1698 () Int)
(declare-fun x1848 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x411 () Int)
(declare-fun x3615 () Bool)
(declare-fun x188 (Int) Int)
(declare-fun x1922 () Int)
(declare-fun x3311 () Int)
(declare-fun x722 () Int)
(declare-fun x1606 () Int)
(declare-fun x3100 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x56 () Bool)
(declare-fun x934 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x2440 (Int) Int)
(declare-fun x3453 () Int)
(declare-fun x1997 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x1929 () Int)
(declare-fun x3355 () Int)
(declare-fun x1193 () Bool)
(declare-fun x481 () Int)
(declare-fun x970 () Int)
(declare-fun x1854 () Int)
(declare-fun x3224 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x1761 () Int)
(declare-fun x276 () Int)
(declare-fun x3559 () Int)
(declare-fun x2062 () Int)
(declare-fun x20 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x2932 () Int)
(declare-fun x3579 (Int Int Int Int Int Int) Int)
(declare-fun x2362 () Bool)
(declare-fun x1747 () Int)
(declare-fun x3019 () Bool)
(declare-fun x3404 () Int)
(declare-fun x2409 () Bool)
(declare-fun x295 () Int)
(declare-fun x900 () Int)
(declare-fun x3035 () Int)
(declare-fun x878 () Bool)
(declare-fun x2300 () Int)
(declare-fun x1232 () Int)
(declare-fun x1394 () Bool)
(declare-fun x924 () Int)
(declare-fun x123 () Int)
(declare-fun x3233 () Bool)
(declare-fun x665 () Bool)
(declare-fun x2365 () Int)
(declare-fun x1213 (Int) Int)
(declare-fun x2412 () Bool)
(declare-fun x3592 () Int)
(declare-fun x2541 () Bool)
(declare-fun x1559 () Int)
(declare-fun x2168 () Bool)
(declare-fun x1633 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x916 () Bool)
(declare-fun x737 () Bool)
(declare-fun x3126 () Int)
(declare-fun x1879 () Bool)
(declare-fun x1743 () Int)
(declare-fun x3320 () Int)
(declare-fun x2739 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x917 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1149 () Int)
(declare-fun x3103 () Bool)
(declare-fun x1056 () Int)
(declare-fun x2013 () Bool)
(declare-fun x720 () Bool)
(declare-fun x2018 () Int)
(declare-fun x3044 () Int)
(declare-fun x2789 () Int)
(declare-fun x3480 () Bool)
(declare-fun x169 () Int)
(declare-fun x1280 () Int)
(declare-fun x1792 () Bool)
(declare-fun x652 () Int)
(declare-fun x712 () Bool)
(declare-fun x457 () Int)
(declare-fun x499 () Bool)
(declare-fun x1231 () Int)
(declare-fun x2204 () Bool)
(declare-fun x150 () Int)
(declare-fun x627 () Int)
(declare-fun x251 () Int)
(declare-fun x75 () Bool)
(declare-fun x2067 () Int)
(declare-fun x1212 () Int)
(declare-fun x1528 () Bool)
(declare-fun x3303 () Int)
(declare-fun x1562 () Int)
(declare-fun x2230 () Int)
(declare-fun x2759 () Bool)
(declare-fun x194 () Int)
(declare-fun x314 () Int)
(declare-fun x1192 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1969 () Bool)
(declare-fun x1452 () Int)
(declare-fun x680 () Bool)
(declare-fun x3020 () Int)
(declare-fun x543 () Int)
(declare-fun x825 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x622 () Int)
(declare-fun x952 () Int)
(declare-fun x518 () Int)
(declare-fun x3098 () Int)
(declare-fun x464 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x567 () Int)
(declare-fun x2496 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x929 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x391 () Bool)
(declare-fun x1337 () Int)
(declare-fun x2586 () Int)
(declare-fun x2933 () Int)
(declare-fun x64 () Bool)
(declare-fun x2140 () Int)
(declare-fun x1662 () Int)
(declare-fun x3255 () Bool)
(declare-fun x632 () Int)
(declare-fun x555 () Int)
(declare-fun x3109 () Int)
(declare-fun x716 () Int)
(declare-fun x1873 () Bool)
(declare-fun x1647 () Int)
(declare-fun x2363 () Int)
(declare-fun x1476 () Int)
(declare-fun x340 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x91 () Int)
(declare-fun x3380 () Int)
(declare-fun x2244 () Int)
(declare-fun x2551 (Int) Int)
(declare-fun x3412 () Bool)
(declare-fun x115 () Int)
(declare-fun x489 () Int)
(declare-fun x1046 () Bool)
(declare-fun x2406 () Int)
(declare-fun x1201 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x534 () Bool)
(declare-fun x3206 (Int) Int)
(declare-fun x2341 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x1962 () Int)
(declare-fun x1893 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1344 () Int)
(declare-fun x2969 () Int)
(declare-fun x511 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x915 () Int)
(declare-fun x2534 () Bool)
(declare-fun x3479 () Int)
(declare-fun x2132 () Bool)
(declare-fun x1208 () Int)
(declare-fun x3156 () Int)
(declare-fun x755 () Int)
(declare-fun x596 () Int)
(declare-fun x1954 () Int)
(declare-fun x2643 () Int)
(declare-fun x3135 () Int)
(declare-fun x1079 () Bool)
(declare-fun x2634 () Int)
(declare-fun x2604 () Int)
(declare-fun x1742 () Int)
(declare-fun x3148 () Int)
(declare-fun x3394 () Int)
(declare-fun x794 () Int)
(declare-fun x426 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x385 () Bool)
(declare-fun x157 () Int)
(declare-fun x672 () Int)
(declare-fun x2897 () Int)
(declare-fun x583 () Int)
(declare-fun x1934 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x1333 () Int)
(declare-fun x3000 () Int)
(declare-fun x3251 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x2746 () Int)
(declare-fun x1611 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1010 () Int)
(declare-fun x808 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x236 () Int)
(declare-fun x3428 () Int)
(declare-fun x3482 () Int)
(declare-fun x1822 () Bool)
(declare-fun x3508 () Int)
(declare-fun x104 () Int)
(declare-fun x2717 () Int)
(declare-fun x3246 () Int)
(declare-fun x3254 () Bool)
(declare-fun x274 () Int)
(declare-fun x2964 () Bool)
(declare-fun x881 () Int)
(declare-fun x885 () Int)
(declare-fun x537 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x838 () Int)
(declare-fun x2568 () Bool)
(declare-fun x3351 () Int)
(declare-fun x1690 () Bool)
(declare-fun x1602 () Int)
(declare-fun x3081 () Int)
(declare-fun x1448 () Int)
(declare-fun x2753 () Int)
(declare-fun x1263 () Int)
(declare-fun x1864 () Int)
(declare-fun x1640 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1539 (Int Int Int Int Int) Int)
(declare-fun x3302 () Int)
(declare-fun x30 () Bool)
(declare-fun x1400 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1013 () Int)
(declare-fun x2280 () Bool)
(declare-fun x1902 () Int)
(declare-fun x2263 () Int)
(declare-fun x625 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x657 () Bool)
(declare-fun x2133 () Int)
(declare-fun x2158 () Bool)
(declare-fun x357 () Int)
(declare-fun x2493 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x516 () Int)
(declare-fun x2888 () Bool)
(declare-fun x954 () Int)
(declare-fun x1682 () Bool)
(declare-fun x649 () Bool)
(declare-fun x2060 () Int)
(declare-fun x1098 () Int)
(declare-fun x3003 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x1483 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2217 () Int)
(declare-fun x2632 () Int)
(declare-fun x1175 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2953 () Int)
(declare-fun x544 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x210 () Int)
(declare-fun x3175 () Int)
(declare-fun x2741 (Int) Int)
(declare-fun x2560 () Bool)
(declare-fun x3281 () Int)
(declare-fun x1676 () Int)
(declare-fun x253 () Int)
(declare-fun x248 () Int)
(declare-fun x3513 () Int)
(declare-fun x455 () Bool)
(declare-fun x663 () Int)
(declare-fun x1227 () Bool)
(declare-fun x2710 () Bool)
(declare-fun x3101 () Int)
(declare-fun x2613 () Bool)
(declare-fun x714 () Bool)
(declare-fun x1800 () Int)
(declare-fun x336 () Int)
(declare-fun x2790 () Int)
(declare-fun x1327 () Int)
(declare-fun x1661 () Bool)
(declare-fun x2048 () Int)
(declare-fun x3620 () Int)
(declare-fun x3426 () Bool)
(declare-fun x3290 () Int)
(declare-fun x972 () Int)
(declare-fun x178 () Int)
(declare-fun x1988 () Int)
(declare-fun x3199 () Int)
(declare-fun x3362 () Int)
(declare-fun x1507 () Int)
(declare-fun x225 () Bool)
(declare-fun x3277 () Int)
(declare-fun x3333 () Int)
(declare-fun x502 () Int)
(declare-fun x3318 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x2977 () Int)
(declare-fun x1140 () Int)
(declare-fun x471 () Int)
(declare-fun x1086 () Int)
(declare-fun x2492 () Int)
(declare-fun x3585 () Int)
(declare-fun x491 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x2011 () Int)
(declare-fun x2265 () Bool)
(declare-fun x839 () Int)
(declare-fun x84 () Bool)
(declare-fun x60 () Int)
(declare-fun x1481 () Bool)
(declare-fun x151 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x1726 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x3539 () Int)
(declare-fun x3531 () Int)
(declare-fun x2131 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x2471 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1526 () Int)
(declare-fun x2307 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x404 () Int)
(declare-fun x879 () Int)
(declare-fun x2725 (Int) Int)
(declare-fun x784 () Int)
(declare-fun x257 () Bool)
(declare-fun x3226 () Int)
(declare-fun x1405 () Int)
(declare-fun x1147 () Bool)
(declare-fun x2050 () Int)
(declare-fun x3088 () Int)
(declare-fun x690 () Int)
(declare-fun x1799 () Bool)
(declare-fun x3456 () Int)
(declare-fun x1677 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1749 () Int)
(declare-fun x3506 () Bool)
(declare-fun x585 () Bool)
(declare-fun x1601 () Int)
(declare-fun x1267 () Bool)
(declare-fun x1261 () Int)
(declare-fun x2931 () Int)
(declare-fun x2231 () Int)
(declare-fun x116 () Int)
(declare-fun x1290 () Int)
(declare-fun x2582 () Int)
(declare-fun x2174 () Int)
(declare-fun x309 () Bool)
(declare-fun x2272 () Int)
(declare-fun x2615 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x763 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x2415 () Int)
(declare-fun x1463 () Int)
(declare-fun x2779 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1740 () Int)
(declare-fun x956 () Bool)
(declare-fun x843 () Int)
(declare-fun x3268 () Int)
(declare-fun x981 () Int)
(declare-fun x2087 () Bool)
(declare-fun x1673 () Int)
(declare-fun x987 () Int)
(declare-fun x2109 () Int)
(declare-fun x1298 () Bool)
(declare-fun x3272 () Int)
(declare-fun x180 () Bool)
(declare-fun x2973 () Int)
(declare-fun x582 () Int)
(declare-fun x3131 () Int)
(declare-fun x1571 () Int)
(declare-fun x919 () Int)
(declare-fun x2278 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1398 () Int)
(declare-fun x2411 () Bool)
(declare-fun x1923 () Int)
(declare-fun x2654 () Bool)
(declare-fun x81 () Bool)
(declare-fun x3064 (Int) Int)
(declare-fun x382 () Bool)
(declare-fun x121 (Int) Int)
(declare-fun x3550 () Int)
(declare-fun x2875 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x2103 () Int)
(declare-fun x2396 () Int)
(declare-fun x812 () Int)
(declare-fun x2859 () Bool)
(declare-fun x317 () Int)
(declare-fun x1152 () Bool)
(declare-fun x3507 () Int)
(declare-fun x2512 () Int)
(declare-fun x2519 () Bool)
(declare-fun x2008 () Int)
(declare-fun x1334 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1857 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x3625 () Bool)
(declare-fun x2715 () Int)
(declare-fun x978 () Int)
(declare-fun x1514 () Int)
(declare-fun x607 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x3486 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x171 () Int)
(declare-fun x1597 () Int)
(declare-fun x705 () Int)
(declare-fun x1255 () Int)
(declare-fun x3577 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1532 () Int)
(declare-fun x1007 () Int)
(declare-fun x3399 () Bool)
(declare-fun x1504 (Int) Int)
(declare-fun x1841 () Bool)
(declare-fun x742 () Int)
(declare-fun x2645 () Int)
(declare-fun x2330 () Int)
(declare-fun x2294 () Int)
(declare-fun x813 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x2979 () Int)
(declare-fun x2603 () Int)
(declare-fun x2869 (Int) Int)
(declare-fun x59 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x780 () Int)
(declare-fun x1229 () Int)
(declare-fun x2369 () Bool)
(declare-fun x155 () Int)
(declare-fun x1813 () Int)
(declare-fun x1102 () Int)
(declare-fun x1445 () Int)
(declare-fun x1287 () Bool)
(declare-fun x3596 () Int)
(declare-fun x1712 () Bool)
(declare-fun x3518 (Int) Int)
(declare-fun x1075 () Int)
(declare-fun x2691 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x677 () Int)
(declare-fun x3503 () Int)
(declare-fun x9 () Int)
(declare-fun x1665 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1411 () Int)
(declare-fun x637 () Int)
(declare-fun x908 () Int)
(declare-fun x3312 () Int)
(declare-fun x3387 () Bool)
(declare-fun x3005 () Int)
(declare-fun x2044 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x2877 () Int)
(declare-fun x362 () Bool)
(declare-fun x2145 () Int)
(declare-fun x164 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1473 () Int)
(declare-fun x3324 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x3389 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x872 () Bool)
(declare-fun x935 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x3210 () Int)
(declare-fun x3396 () Int)
(declare-fun x2807 () Int)
(declare-fun x1916 () Bool)
(declare-fun x1986 (Int) Int)
(declare-fun x1241 () Int)
(declare-fun x3166 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1004 (Int) Int)
(declare-fun x204 () Int)
(declare-fun x2966 () Int)
(declare-fun x1945 () Bool)
(declare-fun x913 () Int)
(declare-fun x938 () Int)
(declare-fun x2993 () Int)
(declare-fun x903 () Int)
(declare-fun x182 () Int)
(declare-fun x277 () Int)
(declare-fun x2597 () Bool)
(declare-fun x1598 () Int)
(declare-fun x3045 () Int)
(declare-fun x468 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1679 (Int) Int)
(declare-fun x2407 () Int)
(declare-fun x125 () Int)
(declare-fun x2460 () Int)
(declare-fun x3629 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1631 () Int)
(declare-fun x1555 () Bool)
(declare-fun x2823 () Int)
(declare-fun x1878 () Int)
(declare-fun x1763 () Int)
(declare-fun x748 () Bool)
(declare-fun x2427 () Int)
(declare-fun x446 () Bool)
(declare-fun x2433 () Int)
(declare-fun x2502 () Int)
(declare-fun x3538 () Int)
(declare-fun x1329 () Int)
(declare-fun x1722 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1097 () Int)
(declare-fun x2915 (Int) Int)
(declare-fun x3476 () Int)
(declare-fun x467 () Bool)
(declare-fun x1788 () Int)
(declare-fun x3578 () Int)
(declare-fun x1551 () Bool)
(declare-fun x3288 () Int)
(declare-fun x1548 () Int)
(declare-fun x2950 () Bool)
(declare-fun x1861 () Int)
(declare-fun x1958 () Bool)
(declare-fun x341 () Bool)
(declare-fun x165 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x148 () Int)
(declare-fun x721 () Int)
(declare-fun x566 () Int)
(declare-fun x2817 () Int)
(declare-fun x1626 () Int)
(declare-fun x2393 () Int)
(declare-fun x3467 () Bool)
(declare-fun x233 () Int)
(declare-fun x886 () Int)
(declare-fun x706 () Bool)
(declare-fun x3326 () Int)
(declare-fun x3338 () Int)
(declare-fun x2205 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x951 () Int)
(declare-fun x2761 () Int)
(declare-fun x3124 () Int)
(declare-fun x297 () Bool)
(declare-fun x1040 () Int)
(declare-fun x905 () Bool)
(declare-fun x994 () Int)
(declare-fun x2023 () Int)
(declare-fun x889 () Int)
(declare-fun x291 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x2814 () Int)
(declare-fun x363 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1000 () Int)
(declare-fun x3319 () Bool)
(declare-fun x2946 () Int)
(declare-fun x1785 () Int)
(declare-fun x1410 () Bool)
(declare-fun x2885 () Int)
(declare-fun x3181 () Bool)
(declare-fun x269 () Int)
(declare-fun x2378 () Int)
(declare-fun x1552 () Int)
(declare-fun x1132 () Bool)
(declare-fun x564 () Int)
(declare-fun x29 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x806 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x940 () Int)
(declare-fun x2218 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x3329 () Int)
(declare-fun x1028 () Int)
(declare-fun x610 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1917 () Int)
(declare-fun x2868 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x876 () Int)
(declare-fun x1852 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x388 () Int)
(declare-fun x1259 () Bool)
(declare-fun x112 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x2578 () Int)
(declare-fun x631 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x453 () Int)
(declare-fun x1198 () Int)
(declare-fun x2839 () Int)
(declare-fun x2302 () Bool)
(declare-fun x3191 () Int)
(declare-fun x1762 () Int)
(declare-fun x661 () Int)
(declare-fun x2768 () Bool)
(declare-fun x2022 () Int)
(declare-fun x3595 () Int)
(declare-fun x186 () Int)
(declare-fun x2037 () Int)
(declare-fun x2901 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x408 () Int)
(declare-fun x2320 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x1500 () Int)
(declare-fun x2137 () Int)
(declare-fun x3068 () Int)
(declare-fun x475 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x445 () Int)
(declare-fun x356 () Int)
(declare-fun x2749 () Int)
(declare-fun x207 () Bool)
(declare-fun x3018 () Int)
(declare-fun x2344 () Int)
(declare-fun x110 () Int)
(declare-fun x2773 () Int)
(declare-fun x3626 () Int)
(declare-fun x3605 () Int)
(declare-fun x2983 () Int)
(declare-fun x2542 () Int)
(declare-fun x1736 () Int)
(declare-fun x647 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x3186 () Int)
(declare-fun x1061 () Int)
(declare-fun x2010 () Int)
(declare-fun x648 () Int)
(declare-fun x1766 () Bool)
(declare-fun x3016 () Int)
(declare-fun x1666 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x3041 () Int)
(declare-fun x2370 () Int)
(declare-fun x1732 () Int)
(declare-fun x3253 () Int)
(declare-fun x655 () Int)
(declare-fun x1484 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x2090 (Int) Int)
(declare-fun x2271 () Int)
(declare-fun x1047 () Int)
(declare-fun x484 () Int)
(declare-fun x2665 () Bool)
(declare-fun x220 () Int)
(declare-fun x184 () Int)
(declare-fun x1082 () Bool)
(declare-fun x1971 () Int)
(declare-fun x240 () Int)
(declare-fun x2700 () Bool)
(declare-fun x975 () Int)
(declare-fun x1774 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x2120 () Int)
(declare-fun x1036 () Int)
(declare-fun x2804 () Int)
(declare-fun x2398 () Int)
(declare-fun x2707 () Int)
(declare-fun x1454 () Int)
(declare-fun x394 () Bool)
(declare-fun x2881 () Int)
(declare-fun x982 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1680 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x2760 () Int)
(declare-fun x3256 () Int)
(declare-fun x3403 () Int)
(declare-fun x844 () Int)
(declare-fun x804 () Bool)
(declare-fun x562 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x593 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1738 () Int)
(declare-fun x883 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x224 () Int)
(declare-fun x1850 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1360 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x955 () Int)
(declare-fun x1281 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x47 () Int)
(declare-fun x2623 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x776 () Bool)
(declare-fun x2928 () Bool)
(declare-fun x976 () Int)
(declare-fun x2186 () Int)
(declare-fun x3621 () Int)
(declare-fun x824 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x2565 () Int)
(declare-fun x2795 () Int)
(declare-fun x183 () Bool)
(declare-fun x3540 () Int)
(declare-fun x2925 () Int)
(declare-fun x1151 () Int)
(declare-fun x2796 () Int)
(declare-fun x1430 () Int)
(declare-fun x3197 () Int)
(declare-fun x2687 () Int)
(declare-fun x1693 () Int)
(declare-fun x681 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x1706 () Int)
(declare-fun x842 () Int)
(declare-fun x1781 () Int)
(declare-fun x2756 () Bool)
(declare-fun x1034 (Int) Int)
(declare-fun x1777 () Bool)
(declare-fun x303 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x2919 () Int)
(declare-fun x1307 () Int)
(declare-fun x1113 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x287 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x971 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x1589 () Int)
(declare-fun x2871 () Bool)
(declare-fun x85 () Int)
(declare-fun x1999 () Bool)
(declare-fun x3582 () Int)
(declare-fun x1498 () Int)
(declare-fun x3588 () Bool)
(declare-fun x2029 () Bool)
(declare-fun x3141 (Int) Int)
(declare-fun x2094 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x96 () Int)
(declare-fun x507 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x2696 () Int)
(declare-fun x1137 () Int)
(declare-fun x3407 () Int)
(declare-fun x3436 () Bool)
(declare-fun x774 () Int)
(declare-fun x3633 () Int)
(declare-fun x2275 () Bool)
(declare-fun x2476 (Int) Int)
(declare-fun x35 () Bool)
(declare-fun x621 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x3307 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x1496 () Int)
(declare-fun x942 () Int)
(declare-fun x3376 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x153 () Int)
(declare-fun x727 () Int)
(declare-fun x254 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x26 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x2447 () Int)
(declare-fun x2127 () Int)
(declare-fun x1620 () Int)
(declare-fun x1839 () Int)
(declare-fun x3382 () Bool)
(declare-fun x495 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x1389 () Int)
(declare-fun x573 () Bool)
(declare-fun x700 () Bool)
(declare-fun x21 () Int)
(declare-fun x3565 () Bool)
(declare-fun x126 () Int)
(declare-fun x2107 () Bool)
(declare-fun x142 () Int)
(declare-fun x1512 () Int)
(declare-fun x1197 () Bool)
(declare-fun x228 () Int)
(declare-fun x888 () Bool)
(declare-fun x2926 () Int)
(declare-fun x710 () Bool)
(declare-fun x1022 () Int)
(declare-fun x3335 () Bool)
(declare-fun x1249 () Int)
(declare-fun x3504 () Int)
(declare-fun x342 () Int)
(declare-fun x2574 () Int)
(declare-fun x614 () Int)
(declare-fun x2071 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1596 (Int) Int)
(declare-fun x2203 () Bool)
(declare-fun x3227 () Bool)
(declare-fun x3118 () Int)
(declare-fun x1635 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1717 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x1447 () Int)
(declare-fun x1055 () Int)
(declare-fun x2310 () Int)
(declare-fun x2025 () Bool)
(declare-fun x840 () Int)
(declare-fun x190 () Bool)
(declare-fun x2909 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x1755 () Int)
(declare-fun x76 () Bool)
(declare-fun x1533 () Int)
(declare-fun x3012 () Int)
(declare-fun x3089 () Int)
(declare-fun x2388 () Int)
(declare-fun x1563 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x2695 () Int)
(declare-fun x2016 () Int)
(declare-fun x78 () Int)
(declare-fun x1614 () Int)
(declare-fun x533 () Int)
(declare-fun x703 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x2141 () Int)
(declare-fun x2810 () Int)
(declare-fun x2970 () Int)
(declare-fun x3360 (Int) Int)
(declare-fun x2245 () Int)
(declare-fun x1205 () Int)
(declare-fun x175 (Int) Int)
(declare-fun x2699 () Int)
(declare-fun x1831 () Int)
(declare-fun x1933 () Int)
(declare-fun x1657 () Int)
(declare-fun x587 () Bool)
(declare-fun x3105 () Int)
(declare-fun x365 () Int)
(declare-fun x790 () Bool)
(declare-fun x2017 () Int)
(declare-fun x1793 () Int)
(declare-fun x2136 () Int)
(declare-fun x3308 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x2224 () Bool)
(declare-fun x1219 () Int)
(declare-fun x2601 () Int)
(declare-fun x1409 () Bool)
(declare-fun x3607 () Int)
(declare-fun x77 () Int)
(declare-fun x1003 () Int)
(declare-fun x262 () Bool)
(declare-fun x1301 () Int)
(declare-fun x2192 () Int)
(declare-fun x726 () Bool)
(declare-fun x992 () Bool)
(declare-fun x3292 () Int)
(declare-fun x514 () Int)
(declare-fun x2929 () Int)
(declare-fun x2223 () Int)
(declare-fun x3209 () Int)
(declare-fun x2572 () Int)
(declare-fun x880 () Bool)
(declare-fun x285 () Bool)
(declare-fun x364 () Int)
(declare-fun x1433 () Int)
(declare-fun x1780 () Int)
(declare-fun x2413 () Bool)
(declare-fun x734 () Int)
(declare-fun x3511 () Int)
(declare-fun x1202 () Bool)
(declare-fun x2149 () Int)
(declare-fun x1168 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x332 () Bool)
(declare-fun x196 () Int)
(declare-fun x1980 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x1567 () Int)
(declare-fun x857 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1435 () Int)
(declare-fun x3375 () Int)
(declare-fun x694 () Int)
(declare-fun x3187 () Int)
(declare-fun x1583 () Int)
(declare-fun x2357 () Int)
(declare-fun x1266 (Int) Int)
(declare-fun x1403 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x1836 (Int Int) Int)
(declare-fun x1714 () Bool)
(declare-fun x2 () Int)
(declare-fun x3300 (Int) Bool)
(declare-fun x82 () Int)
(declare-fun x1104 () Int)
(declare-fun x477 () Int)
(declare-fun x2575 () Int)
(declare-fun x3034 () Bool)
(declare-fun x2426 () Int)
(declare-fun x3600 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x3195 () Int)
(declare-fun x3368 () Bool)
(declare-fun x1814 () Int)
(declare-fun x3358 () Bool)
(declare-fun x788 () Int)
(declare-fun x3193 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1390 () Int)
(declare-fun x3421 () Bool)
(declare-fun x2298 () Int)
(declare-fun x1605 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x3106 () Int)
(declare-fun x1011 () Int)
(declare-fun x3383 () Int)
(declare-fun x439 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x1091 () Int)
(declare-fun x2401 () Int)
(declare-fun x83 () Int)
(declare-fun x2220 () Bool)
(declare-fun x2834 () Int)
(declare-fun x237 () Bool)
(declare-fun x2254 () Int)
(declare-fun x506 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1720 () Int)
(declare-fun x2616 () Bool)
(declare-fun x674 () Int)
(declare-fun x1150 () Bool)
(declare-fun x1939 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1262 () Int)
(declare-fun x3599 () Int)
(declare-fun x3390 () Int)
(declare-fun x1419 () Int)
(declare-fun x831 () Bool)
(declare-fun x216 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x1802 () Int)
(declare-fun x52 (Int Int) Int)
(declare-fun x2056 () Int)
(declare-fun x278 () Int)
(declare-fun x3289 () Int)
(declare-fun x435 () Bool)
(declare-fun x3278 () Int)
(declare-fun x1361 () Bool)
(declare-fun x577 () Int)
(declare-fun x2450 () Bool)
(declare-fun x43 () Bool)
(declare-fun x1978 () Int)
(declare-fun x2559 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x918 () Int)
(declare-fun x40 (Int) Int)
(declare-fun x1474 () Int)
(declare-fun x669 () Bool)
(declare-fun x745 () Int)
(declare-fun x3180 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1245 () Bool)
(declare-fun x3638 (Int) Int)
(declare-fun x2538 () Bool)
(declare-fun x2827 (Int) Int)
(declare-fun x2402 () Int)
(declare-fun x3039 () Bool)
(declare-fun x2799 () Int)
(declare-fun x1860 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1537 () Int)
(declare-fun x480 () Bool)
(declare-fun x2661 () Int)
(declare-fun x2395 () Bool)
(declare-fun x1325 () Int)
(declare-fun x2317 () Int)
(declare-fun x1957 () Int)
(declare-fun x3574 () Int)
(declare-fun x163 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1517 () Int)
(declare-fun x2733 () Int)
(declare-fun x1043 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x423 () Int)
(declare-fun x1508 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1012 () Int)
(declare-fun x2146 () Int)
(declare-fun x3472 () Bool)
(declare-fun x719 () Int)
(declare-fun x2585 () Bool)
(declare-fun x3473 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x598 () Int)
(declare-fun x2150 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x2893 () Int)
(declare-fun x3273 () Int)
(declare-fun x2803 () Int)
(declare-fun x323 () Int)
(declare-fun x235 () Bool)
(declare-fun x854 () Int)
(declare-fun x1441 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x3350 () Int)
(declare-fun x2099 () Int)
(declare-fun x3231 (Int) Int)
(declare-fun x1866 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x206 () Int)
(declare-fun x3393 () Bool)
(declare-fun x3575 () Int)
(declare-fun x689 () Bool)
(declare-fun x2098 () Int)
(declare-fun x3494 () Int)
(declare-fun x904 () Int)
(declare-fun x1699 () Int)
(declare-fun x3552 () Int)
(declare-fun x2992 () Int)
(declare-fun x1927 () Bool)
(declare-fun x611 () Int)
(declare-fun x2305 () Int)
(declare-fun x139 () Int)
(declare-fun x1827 () Int)
(declare-fun x3001 () Int)
(declare-fun x1613 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x933 () Bool)
(declare-fun x390 () Int)
(declare-fun x1456 () Int)
(declare-fun x2886 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1952 () Int)
(declare-fun x176 () Int)
(declare-fun x736 () Bool)
(declare-fun x3162 () Int)
(declare-fun x2723 () Int)
(declare-fun x1165 () Int)
(declare-fun x743 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x791 () Int)
(declare-fun x1215 () Int)
(declare-fun x2580 () Bool)
(declare-fun x1322 () Int)
(declare-fun x1339 () Int)
(declare-fun x2975 () Int)
(declare-fun x299 () Bool)
(declare-fun x671 () Int)
(declare-fun x3066 () Int)
(declare-fun x2165 () Int)
(declare-fun x3242 () Int)
(declare-fun x358 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x2054 () Int)
(declare-fun x2857 () Int)
(declare-fun x549 () Int)
(declare-fun x1020 () Int)
(declare-fun x72 () Bool)
(declare-fun x14 () Int)
(declare-fun x2507 () Bool)
(declare-fun x223 () Int)
(declare-fun x828 () Int)
(declare-fun x2682 () Bool)
(declare-fun x3060 () Int)
(declare-fun x2240 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x460 () Int)
(declare-fun x608 () Int)
(declare-fun x23 () Bool)
(declare-fun x923 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1684 () Int)
(declare-fun x2323 () Int)
(declare-fun x2184 () Int)
(declare-fun x2306 () Int)
(declare-fun x461 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x973 () Int)
(declare-fun x1689 () Bool)
(declare-fun x2981 () Int)
(declare-fun x1522 () Int)
(declare-fun x1037 () Int)
(declare-fun x845 () Bool)
(declare-fun x422 () Int)
(declare-fun x3073 () Int)
(declare-fun x349 () Int)
(declare-fun x3346 () Int)
(declare-fun x2650 () Int)
(declare-fun x221 () Int)
(declare-fun x2270 () Bool)
(declare-fun x2431 () Int)
(declare-fun x162 () Int)
(declare-fun x170 () Bool)
(declare-fun x3297 () Int)
(declare-fun x707 () Int)
(declare-fun x2283 () Bool)
(declare-fun x2730 () Int)
(declare-fun x268 () Int)
(declare-fun x2832 () Int)
(declare-fun x539 (Int) Int)
(declare-fun x962 () Int)
(declare-fun x2944 () Int)
(declare-fun x3608 () Int)
(declare-fun x2864 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x45 () Int)
(declare-fun x2118 () Int)
(declare-fun x2914 () Int)
(declare-fun x1540 () Bool)
(declare-fun x600 () Int)
(declare-fun x3363 () Bool)
(declare-fun x645 () Int)
(declare-fun x2035 () Bool)
(declare-fun x2724 () Int)
(declare-fun x192 () Int)
(declare-fun x3033 () Bool)
(declare-fun x2672 () Int)
(declare-fun x2066 () Int)
(declare-fun x941 () Int)
(declare-fun x1053 () Int)
(declare-fun x1880 (Int) Int)
(declare-fun x209 () Int)
(declare-fun x2688 () Int)
(declare-fun x3245 () Bool)
(declare-fun x2314 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1100 () Int)
(declare-fun x723 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1530 () Int)
(declare-fun x2963 () Bool)
(declare-fun x201 () Bool)
(declare-fun x3280 () Int)
(declare-fun x3631 () Int)
(declare-fun x1042 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x1579 () Int)
(declare-fun x2783 () Bool)
(declare-fun x2865 () Int)
(declare-fun x957 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x319 () Bool)
(declare-fun x1819 () Int)
(declare-fun x2734 () Int)
(declare-fun x898 () Int)
(declare-fun x2162 () Bool)
(declare-fun x2465 () Int)
(declare-fun x410 () Int)
(declare-fun x1745 () Int)
(declare-fun x353 () Int)
(declare-fun x393 () Bool)
(declare-fun x2481 () Int)
(declare-fun x3270 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x1351 () Int)
(declare-fun x3265 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1427 (Int) Int)
(declare-fun x3212 () Int)
(declare-fun x523 () Bool)
(declare-fun x1641 () Int)
(declare-fun x485 () Int)
(declare-fun x3263 () Int)
(declare-fun x3471 () Bool)
(declare-fun x2596 () Int)
(declare-fun x2073 () Int)
(declare-fun x2978 () Int)
(declare-fun x1996 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x2128 () Int)
(declare-fun x2611 () Bool)
(declare-fun x2674 () Int)
(declare-fun x2482 () Int)
(declare-fun x32 () Int)
(declare-fun x2528 () Int)
(declare-fun x2920 () Bool)
(declare-fun x3591 () Int)
(declare-fun x1453 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x1095 () Int)
(declare-fun x343 () Bool)
(declare-fun x1194 () Int)
(declare-fun x159 () Int)
(declare-fun x2213 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x948 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x222 () Bool)
(declare-fun x685 () Int)
(declare-fun x1910 (Int) Int)
(declare-fun x1574 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x12 () Int)
(declare-fun x1881 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x3287 () Bool)
(define-fun x3002 ((x1121 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1121) (>= x1121 0)) x1121 (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3498 ((x1121 Int)) Int (ite (and (< x1121 0) (>= x1121 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1121))
(define-fun x2052 ((x2633 Int)) Bool (and (>= x2633 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2633)))
(define-fun x2713 ((x2633 Int)) Bool (and (= (x52 x2633 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2633) (= (x52 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2633) x2633)))
(define-fun x770 ((x2633 Int)) Bool (and (= 0 (x52 x2633 0)) (= (x52 0 x2633) 0)))
(define-fun x2364 ((x2633 Int)) Bool (= (x52 x2633 x2633) x2633))
(define-fun x24 ((x2633 Int)) Bool (and (x2364 x2633) (x2713 x2633) (x770 x2633)))
(define-fun x2155 ((x2633 Int) (x389 Int)) Bool (= (x52 x2633 x389) (x52 x389 x2633)))
(define-fun x664 ((x2633 Int) (x389 Int)) Bool (and (=> (>= x2633 0) (>= x2633 (x52 x2633 x389))) (<= 0 (x52 x2633 x389)) (=> (>= x389 0) (<= (x52 x2633 x389) x389))))
(define-fun x640 ((x2633 Int) (x389 Int)) Bool (and (x664 x2633 x389) (x2155 x2633 x389)))
(define-fun x1505 ((x2633 Int)) Bool (= (mod x2633 2) (x52 x2633 1)))
(define-fun x2169 ((x2633 Int)) Bool (and (x1505 x2633) (x640 x2633 1)))
(define-fun x3419 ((x2633 Int)) Bool (= (x52 x2633 127) (mod x2633 128)))
(define-fun x2121 ((x2633 Int)) Bool (and (x3419 x2633) (x640 x2633 127)))
(define-fun x1669 ((x2633 Int)) Bool (= (mod x2633 256) (x52 x2633 255)))
(define-fun x1834 ((x2633 Int)) Bool (and (x1669 x2633) (x640 x2633 255)))
(define-fun x3431 ((x2633 Int)) Bool (= (+ (mod x2633 32) (x52 x2633 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x2633 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x850 ((x2633 Int)) Bool (and (x640 x2633 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3431 x2633)))
(define-fun x1217 ((x2633 Int)) Bool (= (x52 x2633 26959946667150639794667015087019630673637144422540572481103610249215) (mod x2633 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x2102 ((x2633 Int)) Bool (and (x1217 x2633) (x640 x2633 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2191 ((x2633 Int)) Bool (= (+ (x52 x2633 115792089237316195423570985008687907853269984665640564039457584007913129639680) (mod x2633 256)) (mod x2633 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3535 ((x2633 Int)) Bool (and (x2191 x2633) (x640 x2633 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x2854 ((x2900 Int)) Int 0)
(define-fun x252 ((x2900 Int)) Int 0)
(define-fun x2818 ((x2900 Int)) Int (ite (< x2900 x1198) (x1679 x2900) 0))
(define-fun x985 ((x2900 Int)) Int (ite (> x3066 x2900) (x1427 x2900) 0))
(define-fun x1024 ((x2900 Int)) Int (ite (> x3361 x2900) (x2592 x2900) 0))
(define-fun x2510 ((x2900 Int)) Int 0)
(define-fun x1370 ((x2900 Int)) Int 0)
(define-fun x2836 ((x2900 Int)) Int 0)
(define-fun x1570 ((x2900 Int)) Int 0)
(define-fun x3284 ((x2900 Int)) Int 0)
(define-fun x2117 ((x2900 Int)) Int 0)
(define-fun x2587 ((x2900 Int)) Int 0)
(define-fun x2769 ((x2900 Int)) Int 0)
(define-fun x2599 ((x2900 Int)) Int 0)
(define-fun x3138 ((x2900 Int)) Int 0)
(define-fun x859 ((x2900 Int)) Int 0)
(define-fun x2617 ((x2900 Int)) Int 0)
(define-fun x500 ((x2900 Int)) Int 0)
(define-fun x1311 ((x2900 Int)) Int 0)
(define-fun x316 ((x2900 Int)) Int 0)
(define-fun x1294 ((x2900 Int)) Int 0)
(define-fun x1153 ((x2900 Int)) Int 0)
(define-fun x1135 ((x2900 Int)) Int 0)
(define-fun x2425 ((x2900 Int)) Int 0)
(define-fun x1764 ((x2900 Int)) Int 0)
(define-fun x3386 ((x2900 Int)) Int 0)
(define-fun x3142 ((x2900 Int)) Int 0)
(define-fun x144 ((x2900 Int)) Int 0)
(define-fun x1460 ((x2900 Int)) Int 0)
(define-fun x2545 ((x2900 Int)) Int 0)
(define-fun x2576 ((x2900 Int)) Int 0)
(define-fun x3430 ((x2900 Int)) Int 0)
(define-fun x3042 ((x2900 Int)) Int 0)
(define-fun x2268 ((x2900 Int)) Int 0)
(define-fun x3618 ((x2900 Int)) Int 0)
(define-fun x2285 ((x2900 Int)) Int 0)
(define-fun x1525 ((x2900 Int)) Int 0)
(define-fun x133 ((x2900 Int)) Int 0)
(define-fun x2806 ((x2900 Int)) Int 0)
(define-fun x572 ((x2900 Int)) Int (ite (< x2900 x233) (x2827 x2900) 0))
(define-fun x2544 ((x2900 Int)) Int (ite (and (> x233 x2900) (<= 0 x2900)) (x1970 x2900) (x572 x2900)))
(define-fun x1600 ((x2900 Int)) Int (ite (= x2900 x1963) x1301 (x2741 x2900)))
(define-fun x896 ((x2900 Int)) Int (ite (= x2695 x2900) x2405 (x1600 x2900)))
(define-fun x2845 ((x2900 Int)) Int (ite (= x2900 128) x1647 (x2117 x2900)))
(define-fun x441 ((x2900 Int)) Int (ite (= x2900 160) x1441 (x2845 x2900)))
(define-fun x2853 ((x2900 Int)) Int (ite (= x2900 160) x723 (x2845 x2900)))
(define-fun x2104 ((x2900 Int)) Int (x2397 x2900))
(define-fun x2742 ((x2900 Int)) Int (ite (= 0 x2900) x686 (x539 x2900)))
(define-fun x1114 ((x2900 Int)) Int (ite (= x2900 4) 17 (x2510 x2900)))
(define-fun x1696 ((x2900 Int)) Int (ite (and (> 36 x2900) (<= 0 x2900)) (x1114 x2900) (x539 x2900)))
(define-fun x486 ((x2900 Int)) Int (ite (= 0 x2900) x1763 (x539 x2900)))
(define-fun x3560 ((x2900 Int)) Int (ite x3365 (x2742 x2900) (ite x3506 (x1696 x2900) (x486 x2900))))
(define-fun x2693 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> x3278 x2900)) (x3560 x2900) (x3042 x2900)))
(define-fun x708 ((x2900 Int)) Int (ite (and (< x2900 x3278) (<= 0 x2900)) (x2693 x2900) (x2090 x2900)))
(define-fun x1118 ((x2900 Int)) Int (ite (= x2900 192) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3042 x2900)))
(define-fun x1741 ((x2900 Int)) Int (ite (and (> 4 x2900) (>= x2900 0)) (x1118 (+ 192 x2900)) (x2090 x2900)))
(define-fun x524 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x500 x2900)))
(define-fun x2930 ((x2900 Int)) Int (ite (and (> 36 x2900) (<= 0 x2900)) (x524 x2900) (x68 x2900)))
(define-fun x2927 ((x2900 Int)) Int (ite (= x2900 128) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x500 x2900)))
(define-fun x2219 ((x2900 Int)) Int (ite (and (> 4 x2900) (>= x2900 0)) (x2927 (+ 128 x2900)) (x68 x2900)))
(define-fun x3029 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x500 x2900)))
(define-fun x2558 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 36)) (x3029 x2900) (x68 x2900)))
(define-fun x3478 ((x2900 Int)) Int (ite x1493 (x68 x2900) (ite x2907 (x2930 x2900) (ite x363 (x2219 x2900) (x2558 x2900)))))
(define-fun x1545 ((x2900 Int)) Int (ite (= x2900 0) x2530 (x68 x2900)))
(define-fun x1946 ((x2900 Int)) Int (ite x1907 (x3478 x2900) (x1545 x2900)))
(define-fun x2024 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1135 x2900)))
(define-fun x1524 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x2024 x2900)))
(define-fun x2891 ((x2900 Int)) Int (ite (= 164 x2900) 10 (x1524 x2900)))
(define-fun x3173 ((x2900 Int)) Int (ite (= x2900 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x2891 x2900)))
(define-fun x2142 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 100 x2900)) (x3173 (+ 128 x2900)) (x3141 x2900)))
(define-fun x100 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 100)) (x2142 x2900) (x1370 x2900)))
(define-fun x3172 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 100 x2900)) (x100 x2900) (x68 x2900)))
(define-fun x456 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x1370 x2900)))
(define-fun x1817 ((x2900 Int)) Int (ite (and (> 36 x2900) (>= x2900 0)) (x456 x2900) (x68 x2900)))
(define-fun x2247 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x1370 x2900)))
(define-fun x2785 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 36)) (x2247 x2900) (x68 x2900)))
(define-fun x2181 ((x2900 Int)) Int (ite (= x2900 4) 17 (x1370 x2900)))
(define-fun x1305 ((x2900 Int)) Int (ite (and (< x2900 36) (>= x2900 0)) (x2181 x2900) (x68 x2900)))
(define-fun x768 ((x2900 Int)) Int (ite (= x2900 4) 34 (x1370 x2900)))
(define-fun x3202 ((x2900 Int)) Int (ite (and (> 36 x2900) (<= 0 x2900)) (x768 x2900) (x68 x2900)))
(define-fun x2457 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x1370 x2900)))
(define-fun x870 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 36 x2900)) (x2457 x2900) (x68 x2900)))
(define-fun x1837 ((x2900 Int)) Int (ite (= x2900 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3430 x2900)))
(define-fun x527 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 4 x2900)) (x1837 (+ 128 x2900)) (x2684 x2900)))
(define-fun x2861 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3430 x2900)))
(define-fun x2038 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x2861 x2900)))
(define-fun x3211 ((x2900 Int)) Int (ite (= 164 x2900) 12 (x2038 x2900)))
(define-fun x2639 ((x2900 Int)) Int (ite (= x2900 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3211 x2900)))
(define-fun x160 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 100 x2900)) (x2639 (+ x2900 128)) (x2684 x2900)))
(define-fun x92 ((x2900 Int)) Int (ite x2541 (x527 x2900) (x160 x2900)))
(define-fun x1236 ((x2900 Int)) Int (ite x3447 (x92 x2900) (x2684 x2900)))
(define-fun x2752 ((x2900 Int)) Int (ite (and (>= x2900 0) (> x1734 x2900)) (x1236 x2900) (x1370 x2900)))
(define-fun x1721 ((x2900 Int)) Int (ite (and (> x1734 x2900) (>= x2900 0)) (x2752 x2900) (x68 x2900)))
(define-fun x3051 ((x2900 Int)) Int (ite (= x2900 4) 17 (x1370 x2900)))
(define-fun x97 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 36 x2900)) (x3051 x2900) (x68 x2900)))
(define-fun x1748 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x1370 x2900)))
(define-fun x2261 ((x2900 Int)) Int (ite (and (> 36 x2900) (<= 0 x2900)) (x1748 x2900) (x68 x2900)))
(define-fun x835 ((x2900 Int)) Int (ite x183 (x3172 x2900) (ite x884 (x1817 x2900) (ite x2287 (x2785 x2900) (ite x1655 (x1305 x2900) (ite x1842 (x3202 x2900) (ite x3025 (x870 x2900) (ite x260 (x68 x2900) (ite x703 (x68 x2900) (ite x1202 (x68 x2900) (ite x1974 (x1721 x2900) (ite x426 (x68 x2900) (ite x2308 (x97 x2900) (ite x821 (x2261 x2900) (x68 x2900)))))))))))))))
(define-fun x290 ((x2900 Int)) Int (ite (= 0 x2900) x3391 (x68 x2900)))
(define-fun x1064 ((x2900 Int)) Int (ite x1352 (x835 x2900) (x290 x2900)))
(define-fun x595 ((x2900 Int)) Int (ite x776 (x1946 x2900) (x1064 x2900)))
(define-fun x699 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 x3384)) (x595 x2900) (x3042 x2900)))
(define-fun x1634 ((x2900 Int)) Int (ite (and (< x2900 x3384) (>= x2900 0)) (x699 x2900) (x2090 x2900)))
(define-fun x1767 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x1294 x2900)))
(define-fun x3418 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 36 x2900)) (x1767 x2900) (x1105 x2900)))
(define-fun x1719 ((x2900 Int)) Int (ite x2213 (x3418 x2900) (x1105 x2900)))
(define-fun x376 ((x2900 Int)) Int (ite x710 (x1719 x2900) (x1105 x2900)))
(define-fun x638 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1153 x2900)))
(define-fun x2164 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x638 x2900)))
(define-fun x1058 ((x2900 Int)) Int (ite (= x2900 164) 10 (x2164 x2900)))
(define-fun x2591 ((x2900 Int)) Int (ite (= x2900 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x1058 x2900)))
(define-fun x2958 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 100)) (x2591 (+ x2900 128)) (x188 x2900)))
(define-fun x1622 ((x2900 Int)) Int (ite (and (< x2900 100) (>= x2900 0)) (x2958 x2900) (x2617 x2900)))
(define-fun x679 ((x2900 Int)) Int (ite (and (> 100 x2900) (<= 0 x2900)) (x1622 x2900) (x1105 x2900)))
(define-fun x2838 ((x2900 Int)) Int (ite (= x2900 4) 17 (x2617 x2900)))
(define-fun x443 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 36 x2900)) (x2838 x2900) (x1105 x2900)))
(define-fun x1139 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x2617 x2900)))
(define-fun x3451 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 36 x2900)) (x1139 x2900) (x1105 x2900)))
(define-fun x16 ((x2900 Int)) Int (ite (= x2900 4) 17 (x2617 x2900)))
(define-fun x2046 ((x2900 Int)) Int (ite (and (> 36 x2900) (>= x2900 0)) (x16 x2900) (x1105 x2900)))
(define-fun x943 ((x2900 Int)) Int (ite (= 4 x2900) 34 (x2617 x2900)))
(define-fun x947 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 36)) (x943 x2900) (x1105 x2900)))
(define-fun x1628 ((x2900 Int)) Int (ite (= x2900 4) 34 (x2617 x2900)))
(define-fun x3530 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 36)) (x1628 x2900) (x1105 x2900)))
(define-fun x633 ((x2900 Int)) Int (ite (= x2900 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x1460 x2900)))
(define-fun x2618 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 4)) (x633 (+ x2900 128)) (x3502 x2900)))
(define-fun x2403 ((x2900 Int)) Int (ite (= 128 x2900) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1460 x2900)))
(define-fun x98 ((x2900 Int)) Int (ite (= x2900 132) 32 (x2403 x2900)))
(define-fun x2961 ((x2900 Int)) Int (ite (= x2900 164) 12 (x98 x2900)))
(define-fun x574 ((x2900 Int)) Int (ite (= x2900 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2961 x2900)))
(define-fun x2316 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 100)) (x574 (+ 128 x2900)) (x3502 x2900)))
(define-fun x2884 ((x2900 Int)) Int (ite x2800 (x2618 x2900) (x2316 x2900)))
(define-fun x2438 ((x2900 Int)) Int (ite x379 (x2884 x2900) (x3502 x2900)))
(define-fun x3112 ((x2900 Int)) Int (ite (and (< x2900 x597) (<= 0 x2900)) (x2438 x2900) (x2617 x2900)))
(define-fun x244 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> x597 x2900)) (x3112 x2900) (x1105 x2900)))
(define-fun x1920 ((x2900 Int)) Int (ite (= x816 x2900) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x2268 x2900)))
(define-fun x1638 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 4 x2900)) (x1920 (+ x2900 x816)) (x2712 x2900)))
(define-fun x1382 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2268 x2900)))
(define-fun x296 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x1382 x2900)))
(define-fun x2816 ((x2900 Int)) Int (ite (= 164 x2900) 12 (x296 x2900)))
(define-fun x546 ((x2900 Int)) Int (ite (= 196 x2900) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2816 x2900)))
(define-fun x810 ((x2900 Int)) Int (ite (and (<= 0 x2900) (< x2900 100)) (x546 (+ 128 x2900)) (x2712 x2900)))
(define-fun x3613 ((x2900 Int)) Int (ite x2852 (x1638 x2900) (x810 x2900)))
(define-fun x1330 ((x2900 Int)) Int (ite x1279 (x3613 x2900) (x2712 x2900)))
(define-fun x1250 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> x645 x2900)) (x1330 x2900) (x2617 x2900)))
(define-fun x2641 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> x645 x2900)) (x1250 x2900) (x1105 x2900)))
(define-fun x2288 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2854 x2900)))
(define-fun x2157 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x2288 x2900)))
(define-fun x1782 ((x2900 Int)) Int (ite (= 164 x2900) 10 (x2157 x2900)))
(define-fun x158 ((x2900 Int)) Int (ite (= x2900 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x1782 x2900)))
(define-fun x1739 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 100 x2900)) (x158 (+ x2900 128)) (x3011 x2900)))
(define-fun x1480 ((x2900 Int)) Int 0)
(define-fun x1019 ((x2900 Int)) Int (ite x1304 (x1739 x2900) (x1480 x2900)))
(define-fun x1226 ((x2900 Int)) Int (ite (and (< x2900 x2877) (<= 0 x2900)) (x1019 x2900) (x2617 x2900)))
(define-fun x3414 ((x2900 Int)) Int (ite (and (< x2900 x2877) (<= 0 x2900)) (x1226 x2900) (x1105 x2900)))
(define-fun x2009 ((x2900 Int)) Int (ite (= 128 x2900) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2836 x2900)))
(define-fun x1362 ((x2900 Int)) Int (ite (= 132 x2900) x3338 (x2009 x2900)))
(define-fun x615 ((x2900 Int)) Int (ite (= x2900 164) 128 (x1362 x2900)))
(define-fun x111 ((x2900 Int)) Int (ite (= x2900 260) x3416 (x615 x2900)))
(define-fun x3415 ((x2900 Int)) Int (ite (= x2900 292) x2272 (x111 x2900)))
(define-fun x367 ((x2900 Int)) Int (ite (= 292 x2900) x148 (x111 x2900)))
(define-fun x1518 ((x2900 Int)) Int (ite x163 (ite x1062 (x111 x2900) (x3415 x2900)) (x367 x2900)))
(define-fun x424 ((x2900 Int)) Int (ite (= x2900 196) x1917 (x1518 x2900)))
(define-fun x1979 ((x2900 Int)) Int (ite (= 228 x2900) x787 (x424 x2900)))
(define-fun x1174 ((x2900 Int)) Int (ite (= x2900 x1864) x1613 (x1979 x2900)))
(define-fun x1629 ((x2900 Int)) Int (ite (= x2900 x1720) x3261 (x1174 x2900)))
(define-fun x3352 ((x2900 Int)) Int (ite (= x2900 x1720) x2192 (x1174 x2900)))
(define-fun x172 ((x2900 Int)) Int (ite x2777 (ite x435 (x1174 x2900) (x1629 x2900)) (x3352 x2900)))
(define-fun x1765 ((x2900 Int)) Int (ite (and (< x2900 x1923) (<= 164 x2900)) (x172 (+ x2900 128)) (x985 x2900)))
(define-fun x1578 ((x2900 Int)) Int (ite (and (>= x2900 128) (> (+ x936 128) x2900)) (x1765 (+ 36 x2900)) (x2587 x2900)))
(define-fun x2319 ((x2900 Int)) Int (ite (= x941 x2900) 0 (x1578 x2900)))
(define-fun x3452 ((x2900 Int)) Int (ite (= x2900 x2974) x102 (x2319 x2900)))
(define-fun x505 ((x2900 Int)) Int (ite (and (>= x2900 128) (> (+ 128 x69) x2900)) (x1765 (- (+ x704 x2900) 128)) (x3452 x2900)))
(define-fun x2486 ((x2900 Int)) Int (ite (= x2900 x408) 0 (x505 x2900)))
(define-fun x2709 ((x2900 Int)) Int (ite (= 128 x2900) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2486 x2900)))
(define-fun x1350 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x2709 x2900)))
(define-fun x1630 ((x2900 Int)) Int (ite (= x2900 164) 33 (x1350 x2900)))
(define-fun x1296 ((x2900 Int)) Int (ite (= x2900 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x1630 x2900)))
(define-fun x1378 ((x2900 Int)) Int (ite (= x2900 228) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x1296 x2900)))
(define-fun x1581 ((x2900 Int)) Int (ite (and (> 132 x2900) (<= 0 x2900)) (x1378 (+ x2900 128)) (x2274 x2900)))
(define-fun x1595 ((x2900 Int)) Int (ite (= 128 x2900) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3452 x2900)))
(define-fun x368 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x1595 x2900)))
(define-fun x377 ((x2900 Int)) Int (ite (= 164 x2900) 35 (x368 x2900)))
(define-fun x1914 ((x2900 Int)) Int (ite (= 196 x2900) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x377 x2900)))
(define-fun x1467 ((x2900 Int)) Int (ite (= x2900 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x1914 x2900)))
(define-fun x1887 ((x2900 Int)) Int (ite (and (<= 0 x2900) (> 132 x2900)) (x1467 (+ x2900 128)) (x2274 x2900)))
(define-fun x2991 ((x2900 Int)) Int (ite x2250 (x2274 x2900) (ite x1031 (x2274 x2900) (ite x565 (x2274 x2900) (ite x2909 (x2274 x2900) (ite x131 (x1581 x2900) (x1887 x2900)))))))
(define-fun x2084 ((x2900 Int)) Int 0)
(define-fun x2934 ((x2900 Int)) Int (ite x3308 (x2991 x2900) (x2084 x2900)))
(define-fun x2379 ((x2900 Int)) Int (ite (and (> x2790 x2900) (<= 0 x2900)) (x2934 x2900) (x2617 x2900)))
(define-fun x3525 ((x2900 Int)) Int (ite (and (< x2900 x2790) (<= 0 x2900)) (x2379 x2900) (x1105 x2900)))
(define-fun x2840 ((x2900 Int)) Int (ite (= x2900 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2576 x2900)))
(define-fun x1838 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 4 x2900)) (x2840 (+ x2900 128)) (x227 x2900)))
(define-fun x1818 ((x2900 Int)) Int (ite (= x2900 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2576 x2900)))
(define-fun x749 ((x2900 Int)) Int (ite (= x2900 132) 32 (x1818 x2900)))
(define-fun x3334 ((x2900 Int)) Int (ite (= 164 x2900) 12 (x749 x2900)))
(define-fun x1702 ((x2900 Int)) Int (ite (= x2900 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3334 x2900)))
(define-fun x2737 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 100)) (x1702 (+ 128 x2900)) (x227 x2900)))
(define-fun x2216 ((x2900 Int)) Int (ite x2369 (x1838 x2900) (x2737 x2900)))
(define-fun x922 ((x2900 Int)) Int (ite x3612 (x2216 x2900) (x227 x2900)))
(define-fun x3568 ((x2900 Int)) Int (ite (and (> x234 x2900) (>= x2900 0)) (x922 x2900) (x2617 x2900)))
(define-fun x891 ((x2900 Int)) Int (ite (and (< x2900 x234) (>= x2900 0)) (x3568 x2900) (x1105 x2900)))
(define-fun x865 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x2617 x2900)))
(define-fun x2498 ((x2900 Int)) Int (ite (and (< x2900 36) (<= 0 x2900)) (x865 x2900) (x1105 x2900)))
(define-fun x1347 ((x2900 Int)) Int (ite (= 4 x2900) 17 (x2617 x2900)))
(define-fun x1833 ((x2900 Int)) Int (ite (and (> 36 x2900) (<= 0 x2900)) (x1347 x2900) (x1105 x2900)))
(define-fun x1942 ((x2900 Int)) Int (ite x1043 (x679 x2900) (ite x1555 (x443 x2900) (ite x3095 (x3451 x2900) (ite x439 (x2046 x2900) (ite x3189 (x947 x2900) (ite x1131 (x3530 x2900) (ite x795 (x1105 x2900) (ite x2044 (x244 x2900) (ite x2012 (x1105 x2900) (ite x3205 (x2641 x2900) (ite x2218 (x1105 x2900) (ite x3377 (x3414 x2900) (ite x3448 (x1105 x2900) (ite x687 (x3525 x2900) (ite x2501 (x1105 x2900) (ite x64 (x1105 x2900) (ite x3406 (x1105 x2900) (ite x1180 (x1105 x2900) (ite x2748 (x1105 x2900) (ite x402 (x891 x2900) (ite x562 (x1105 x2900) (ite x733 (x2498 x2900) (ite x398 (x1833 x2900) (x1105 x2900)))))))))))))))))))))))))
(define-fun x130 ((x2900 Int)) Int (ite x1459 (x1942 x2900) (x1105 x2900)))
(define-fun x328 ((x2900 Int)) Int (ite x1162 (x376 x2900) (x130 x2900)))
(define-fun x2359 ((x2900 Int)) Int 0)
(define-fun x2583 ((x2900 Int)) Int (ite x515 (x328 x2900) (ite x3324 (x2359 x2900) (x328 x2900))))
(define-fun x246 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 x1750)) (x2583 x2900) (x3042 x2900)))
(define-fun x73 ((x2900 Int)) Int (ite (and (> x1750 x2900) (>= x2900 0)) (x246 x2900) (x2090 x2900)))
(define-fun x3017 ((x2900 Int)) Int (ite (= 128 x2900) 18563399957492015340621713183830377045030061062230639968016343144629396307968 (x3042 x2900)))
(define-fun x2794 ((x2900 Int)) Int (ite (and (> 4 x2900) (<= 0 x2900)) (x3017 (+ x2900 128)) (x2090 x2900)))
(define-fun x1292 ((x2900 Int)) Int (ite (= 128 x2900) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3042 x2900)))
(define-fun x1805 ((x2900 Int)) Int (ite (and (>= x2900 0) (> 4 x2900)) (x1292 (+ 128 x2900)) (x2090 x2900)))
(define-fun x1700 ((x2900 Int)) Int (ite (= 128 x2900) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3042 x2900)))
(define-fun x510 ((x2900 Int)) Int (ite (= x2900 132) 32 (x1700 x2900)))
(define-fun x3359 ((x2900 Int)) Int (ite (= x2900 164) 10 (x510 x2900)))
(define-fun x1644 ((x2900 Int)) Int (ite (= x2900 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x3359 x2900)))
(define-fun x2924 ((x2900 Int)) Int (ite (and (< x2900 100) (<= 0 x2900)) (x1644 (+ x2900 128)) (x2090 x2900)))
(define-fun x3554 ((x2900 Int)) Int (ite x1156 (x2090 x2900) (ite x2829 (x708 x2900) (ite x1479 (x1741 x2900) (ite x1113 (x1634 x2900) (ite x2470 (x73 x2900) (ite x1361 (x2794 x2900) (ite x465 (x1805 x2900) (x2924 x2900)))))))))
(define-fun x2943 ((x2900 Int)) Int (ite (= x2900 0) x809 (x2090 x2900)))
(define-fun x1425 ((x2900 Int)) Int (ite x1340 (x3554 x2900) (x2943 x2900)))
(define-fun x1553 ((x2900 Int)) Int (x2397 x2900))
(define-fun x2375 ((x2900 Int)) Int (ite (= 128 x2900) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1525 x2900)))
(define-fun x378 ((x2900 Int)) Int (ite (= 132 x2900) 32 (x2375 x2900)))
(define-fun x1790 ((x2900 Int)) Int (ite (= x2900 164) 38 (x378 x2900)))
(define-fun x1715 ((x2900 Int)) Int (ite (= 196 x2900) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x1790 x2900)))
(define-fun x860 ((x2900 Int)) Int (ite (= 228 x2900) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x1715 x2900)))
(define-fun x3154 ((x2900 Int)) Int (ite (and (>= x2900 0) (< x2900 132)) (x860 (+ 128 x2900)) (x339 x2900)))
(define-fun x1107 ((x2900 Int)) Int (ite x1017 (x339 x2900) (ite x946 (x339 x2900) (ite x1527 (x339 x2900) (ite x2598 (x339 x2900) (ite x287 (x3154 x2900) (x339 x2900)))))))
(define-fun x1718 ((x2900 Int)) Int (ite x3382 (x1107 x2900) (x339 x2900)))
(define-fun x1516 ((x2900 Int)) Int (ite (= 192 x2900) x1758 (x441 x2900)))
(define-fun x783 ((x2900 Int)) Int (ite x1695 (x2845 x2900) (ite x2341 (ite x1960 (x441 x2900) (x1516 x2900)) (x2853 x2900))))
(define-fun x576 ((x2900 Int)) Int (ite (and (> (+ x1929 x2245) x2900) (<= x2245 x2900)) (x2544 (- (+ x2900 x2294) x2245)) (x783 x2900)))
(define-fun x1332 ((x2900 Int)) Int (ite (= x2900 x381) 0 (x576 x2900)))
(define-fun x3369 ((x2900 Int)) Int (ite x1001 (x1332 x2900) (x783 x2900)))
(define-fun x1316 ((x2900 Int)) Int (ite (= x2245 x2900) x1929 (x3369 x2900)))
(define-fun x709 ((x2900 Int)) Int (ite (and (> (+ x2017 x1929) x2900) (>= x2900 x2017)) (x2544 (- (+ x2294 x2900) x2017)) (x1316 x2900)))
(define-fun x643 ((x2900 Int)) Int (ite (= x906 x2900) 0 (x709 x2900)))
(define-fun x3136 ((x2900 Int)) Int (ite (= x2900 x3605) x938 (x643 x2900)))
(define-fun x70 ((x2900 Int)) Int (ite (and (<= x3311 x2900) (> (+ x938 x3311) x2900)) (x2544 (- (+ x2900 x1351) x3311)) (x3136 x2900)))
(define-fun x101 ((x2900 Int)) Int (ite (= x2900 x159) 0 (x70 x2900)))
(define-fun x2652 ((x2900 Int)) Int (ite (= x2900 x1339) x2448 (x101 x2900)))
(define-fun x406 ((x2900 Int)) Int (ite (= x840 x2900) 128 (x2652 x2900)))
(define-fun x5 ((x2900 Int)) Int (ite (= x2900 x2750) x2636 (x406 x2900)))
(define-fun x1753 ((x2900 Int)) Int (ite (= x2900 x3375) x2628 (x5 x2900)))
(define-fun x1823 ((x2900 Int)) Int (ite (= x2406 x2900) x2727 (x1753 x2900)))
(define-fun x3499 ((x2900 Int)) Int (ite (= x2843 x2900) x2419 (x1823 x2900)))
(define-fun x2873 ((x2900 Int)) Int (ite (= x2629 x2900) 1 (x2681 x2900)))
(define-fun x2083 ((x2900 Int)) Int (ite (= x2900 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x2285 x2900)))
(define-fun x3310 ((x2900 Int)) Int (ite (= x2900 132) x589 (x2083 x2900)))
(define-fun x2556 ((x2900 Int)) Int (ite (= x2900 128) x686 (x3310 x2900)))
(define-fun x2171 ((x2900 Int)) Int (ite (= 128 x2900) x1763 (x3310 x2900)))
(define-fun x3207 ((x2900 Int)) Int (ite x1737 (x2176 x2900) (x2080 x2900)))
(define-fun x1659 ((x2900 Int)) Int (ite x895 (x2080 x2900) (ite x2597 (x3207 x2900) (ite x847 (x3207 x2900) (x2080 x2900)))))
(define-fun x1272 ((x2900 Int)) Int (ite x1934 (x2080 x2900) (ite x1279 (x2080 x2900) (x1659 x2900))))
(define-fun x2221 ((x2900 Int)) Int (ite x1459 (x2080 x2900) (ite x2866 (x1272 x2900) (x2080 x2900))))
(define-fun x1475 ((x2900 Int)) Int (ite x515 (ite x1162 (x2080 x2900) (x2221 x2900)) (ite x3324 (x2080 x2900) (ite x1162 (x2080 x2900) (x2221 x2900)))))
(define-fun x3082 ((x2900 Int)) Int (ite x1737 (x2896 x2900) (x2915 x2900)))
(define-fun x3460 ((x2900 Int)) Int (ite x895 (x2915 x2900) (ite x2597 (x3082 x2900) (ite x847 (x3082 x2900) (x2915 x2900)))))
(define-fun x255 ((x2900 Int)) Int (ite x1934 (x2915 x2900) (ite x1279 (x2915 x2900) (x3460 x2900))))
(define-fun x259 ((x2900 Int)) Int (ite x1459 (x2915 x2900) (ite x2866 (x255 x2900) (x2915 x2900))))
(define-fun x469 ((x2900 Int)) Int (ite x515 (ite x1162 (x2915 x2900) (x259 x2900)) (ite x3324 (x2915 x2900) (ite x1162 (x2915 x2900) (x259 x2900)))))
(define-fun x1658 ((x2900 Int)) Int (ite (= x3187 x2900) x3510 (x372 x2900)))
(define-fun x1391 ((x2900 Int)) Int (ite x710 (x372 x2900) (x1658 x2900)))
(define-fun x3257 ((x2900 Int)) Int (ite x1737 (x2869 x2900) (x372 x2900)))
(define-fun x2072 ((x2900 Int)) Int (ite x895 (x372 x2900) (ite x2597 (x3257 x2900) (ite x847 (x3257 x2900) (x372 x2900)))))
(define-fun x413 ((x2900 Int)) Int (ite x1934 (x372 x2900) (ite x1279 (x372 x2900) (x2072 x2900))))
(define-fun x2020 ((x2900 Int)) Int (ite x1459 (x372 x2900) (ite x2866 (x413 x2900) (x372 x2900))))
(define-fun x2246 ((x2900 Int)) Int (ite x515 (ite x1162 (x1391 x2900) (x2020 x2900)) (ite x3324 (x372 x2900) (ite x1162 (x1391 x2900) (x2020 x2900)))))
(define-fun x2207 ((x2900 Int)) Int (ite x1737 (x1890 x2900) (x2551 x2900)))
(define-fun x128 ((x2900 Int)) Int (ite x895 (x2551 x2900) (ite x2597 (x2207 x2900) (ite x847 (x2207 x2900) (x2551 x2900)))))
(define-fun x782 ((x2900 Int)) Int (ite x1934 (x2551 x2900) (ite x1279 (x2551 x2900) (x128 x2900))))
(define-fun x944 ((x2900 Int)) Int (ite x1459 (x2551 x2900) (ite x2866 (x782 x2900) (x2551 x2900))))
(define-fun x2299 ((x2900 Int)) Int (ite x515 (ite x1162 (x2551 x2900) (x944 x2900)) (ite x3324 (x2551 x2900) (ite x1162 (x2551 x2900) (x944 x2900)))))
(define-fun x1348 ((x2900 Int)) Int (ite x1737 (x3563 x2900) (x2720 x2900)))
(define-fun x2584 ((x2900 Int)) Int (ite x895 (x2720 x2900) (ite x2597 (x1348 x2900) (ite x847 (x1348 x2900) (x2720 x2900)))))
(define-fun x3096 ((x2900 Int)) Int (ite x1934 (x2720 x2900) (ite x1279 (x2720 x2900) (x2584 x2900))))
(define-fun x2180 ((x2900 Int)) Int (ite x1459 (x2720 x2900) (ite x2866 (x3096 x2900) (x2720 x2900))))
(define-fun x1078 ((x2900 Int)) Int (ite x515 (ite x1162 (x2720 x2900) (x2180 x2900)) (ite x3324 (x2720 x2900) (ite x1162 (x2720 x2900) (x2180 x2900)))))
(define-fun x3080 ((x2900 Int)) Int (ite x1737 (x1752 x2900) (x1596 x2900)))
(define-fun x2255 ((x2900 Int)) Int (ite x895 (x1596 x2900) (ite x2597 (x3080 x2900) (ite x847 (x3080 x2900) (x1596 x2900)))))
(define-fun x1300 ((x2900 Int)) Int (ite x1934 (x1596 x2900) (ite x1279 (x1596 x2900) (x2255 x2900))))
(define-fun x1856 ((x2900 Int)) Int (ite x1459 (x1596 x2900) (ite x2866 (x1300 x2900) (x1596 x2900))))
(define-fun x746 ((x2900 Int)) Int (ite x515 (ite x1162 (x1596 x2900) (x1856 x2900)) (ite x3324 (x1596 x2900) (ite x1162 (x1596 x2900) (x1856 x2900)))))
(define-fun x779 ((x2900 Int)) Int (x3206 x2900))
(define-fun x321 ((x2900 Int)) Int (x121 x2900))
(define-fun x604 ((x2900 Int)) Int (ite x1737 (x2222 x2900) (x618 x2900)))
(define-fun x2421 ((x2900 Int)) Int (ite x895 (x618 x2900) (ite x2597 (x604 x2900) (ite x847 (x604 x2900) (x618 x2900)))))
(define-fun x3129 ((x2900 Int)) Int (ite x1934 (x618 x2900) (ite x1279 (x618 x2900) (x2421 x2900))))
(define-fun x2295 ((x2900 Int)) Int (ite x1459 (x618 x2900) (ite x2866 (x3129 x2900) (x618 x2900))))
(define-fun x1282 ((x2900 Int)) Int (ite x515 (ite x1162 (x618 x2900) (x2295 x2900)) (ite x3324 (x618 x2900) (ite x1162 (x618 x2900) (x2295 x2900)))))
(define-fun x1278 ((x2900 Int)) Int (ite x1737 (x3264 x2900) (x1426 x2900)))
(define-fun x371 ((x2900 Int)) Int (ite x895 (x1426 x2900) (ite x2597 (x1278 x2900) (ite x847 (x1278 x2900) (x1426 x2900)))))
(define-fun x560 ((x2900 Int)) Int (ite x1934 (x1426 x2900) (ite x1279 (x1426 x2900) (x371 x2900))))
(define-fun x2202 ((x2900 Int)) Int (ite x1459 (x1426 x2900) (ite x2866 (x560 x2900) (x1426 x2900))))
(define-fun x2108 ((x2900 Int)) Int (ite x515 (ite x1162 (x1426 x2900) (x2202 x2900)) (ite x3324 (x1426 x2900) (ite x1162 (x1426 x2900) (x2202 x2900)))))
(define-fun x2680 ((x2900 Int)) Int (x853 x2900))
(define-fun x1101 ((x2900 Int)) Int (x1266 x2900))
(define-fun x2938 ((x2900 Int)) Int (ite x1737 (x1880 x2900) (x1004 x2900)))
(define-fun x1592 ((x2900 Int)) Int (ite x895 (x1004 x2900) (ite x2597 (x2938 x2900) (ite x847 (x2938 x2900) (x1004 x2900)))))
(define-fun x3216 ((x2900 Int)) Int (ite x1934 (x1004 x2900) (ite x1279 (x1004 x2900) (x1592 x2900))))
(define-fun x3074 ((x2900 Int)) Int (ite x1459 (x1004 x2900) (ite x2866 (x3216 x2900) (x1004 x2900))))
(define-fun x1199 ((x2900 Int)) Int (ite x515 (ite x1162 (x1004 x2900) (x3074 x2900)) (ite x3324 (x1004 x2900) (ite x1162 (x1004 x2900) (x3074 x2900)))))
(define-fun x2422 ((x2900 Int)) Int (ite x1737 (x609 x2900) (x1787 x2900)))
(define-fun x431 ((x2900 Int)) Int (ite x895 (x1787 x2900) (ite x2597 (x2422 x2900) (ite x847 (x2422 x2900) (x1787 x2900)))))
(define-fun x147 ((x2900 Int)) Int (ite x1934 (x1787 x2900) (ite x1279 (x1787 x2900) (x431 x2900))))
(define-fun x335 ((x2900 Int)) Int (ite x1459 (x1787 x2900) (ite x2866 (x147 x2900) (x1787 x2900))))
(define-fun x2666 ((x2900 Int)) Int (ite x515 (ite x1162 (x1787 x2900) (x335 x2900)) (ite x3324 (x1787 x2900) (ite x1162 (x1787 x2900) (x335 x2900)))))
(define-fun x2148 ((x2900 Int)) Int (ite x1737 (x2955 x2900) (x1531 x2900)))
(define-fun x1964 ((x2900 Int)) Int (ite x895 (x1531 x2900) (ite x2597 (x2148 x2900) (ite x847 (x2148 x2900) (x1531 x2900)))))
(define-fun x1535 ((x2900 Int)) Int (ite x1934 (x1531 x2900) (ite x1279 (x1531 x2900) (x1964 x2900))))
(define-fun x713 ((x2900 Int)) Int (ite x1459 (x1531 x2900) (ite x2866 (x1535 x2900) (x1531 x2900))))
(define-fun x3468 ((x2900 Int)) Int (ite x515 (ite x1162 (x1531 x2900) (x713 x2900)) (ite x3324 (x1531 x2900) (ite x1162 (x1531 x2900) (x713 x2900)))))
(define-fun x2091 ((x2900 Int)) Int (x3360 x2900))
(define-fun x939 ((x2900 Int)) Int (ite x1737 (x3518 x2900) (x3231 x2900)))
(define-fun x3327 ((x2900 Int)) Int (ite x895 (x3231 x2900) (ite x2597 (x939 x2900) (ite x847 (x939 x2900) (x3231 x2900)))))
(define-fun x2313 ((x2900 Int)) Int (ite x1934 (x3231 x2900) (ite x1279 (x3231 x2900) (x3327 x2900))))
(define-fun x432 ((x2900 Int)) Int (ite x1459 (x3231 x2900) (ite x2866 (x2313 x2900) (x3231 x2900))))
(define-fun x451 ((x2900 Int)) Int (ite x515 (ite x1162 (x3231 x2900) (x432 x2900)) (ite x3324 (x3231 x2900) (ite x1162 (x3231 x2900) (x432 x2900)))))
(define-fun x1458 ((x2900 Int)) Int (x612 x2900))
(define-fun x2972 ((x2900 Int)) Int (x590 x2900))
(define-fun x2276 ((x2900 Int)) Int (ite x1737 (x3638 x2900) (x1986 x2900)))
(define-fun x2041 ((x2900 Int)) Int (ite x895 (x1986 x2900) (ite x2597 (x2276 x2900) (ite x847 (x2276 x2900) (x1986 x2900)))))
(define-fun x834 ((x2900 Int)) Int (ite x1934 (x1986 x2900) (ite x1279 (x1986 x2900) (x2041 x2900))))
(define-fun x2337 ((x2900 Int)) Int (ite x1459 (x1986 x2900) (ite x2866 (x834 x2900) (x1986 x2900))))
(define-fun x2076 ((x2900 Int)) Int (ite x515 (ite x1162 (x1986 x2900) (x2337 x2900)) (ite x3324 (x1986 x2900) (ite x1162 (x1986 x2900) (x2337 x2900)))))
(define-fun x2264 ((x2900 Int)) Int (x570 x2900))
(define-fun x161 ((x2900 Int)) Int (ite x1737 (x3064 x2900) (x1034 x2900)))
(define-fun x628 ((x2900 Int)) Int (ite x895 (x1034 x2900) (ite x2597 (x161 x2900) (ite x847 (x161 x2900) (x1034 x2900)))))
(define-fun x1283 ((x2900 Int)) Int (ite x1934 (x1034 x2900) (ite x1279 (x1034 x2900) (x628 x2900))))
(define-fun x1949 ((x2900 Int)) Int (ite x1459 (x1034 x2900) (ite x2866 (x1283 x2900) (x1034 x2900))))
(define-fun x3204 ((x2900 Int)) Int (ite x515 (ite x1162 (x1034 x2900) (x1949 x2900)) (ite x3324 (x1034 x2900) (ite x1162 (x1034 x2900) (x1949 x2900)))))
(define-fun x2459 ((x2900 Int)) Int (x2873 x2900))
(define-fun x1182 ((x2900 Int)) Int (ite (= x2900 x2695) x2607 (x896 x2900)))
(define-fun x535 ((x2900 Int)) Int (ite (= x2889 x2900) x420 (x1182 x2900)))
(define-fun x2704 ((x2900 Int)) Int (ite (= x2900 x2695) x2932 (x535 x2900)))
(define-fun x2064 ((x2900 Int)) Int (ite (= x2900 x447) x1047 (x2704 x2900)))
(define-fun x877 ((x2900 Int)) Int (ite x1737 (x1910 x2900) (x2064 x2900)))
(define-fun x2990 ((x2900 Int)) Int (ite (= x447 x2900) x3249 (x877 x2900)))
(define-fun x1651 ((x2900 Int)) Int (ite (= x2695 x2900) x3366 (x2990 x2900)))
(define-fun x3069 ((x2900 Int)) Int (ite x1162 (x535 x2900) (ite x1459 (x535 x2900) (ite x2866 (ite x1934 (x535 x2900) (ite x1279 (x535 x2900) (ite x895 (x535 x2900) (ite x2597 (x877 x2900) (ite x847 (x1651 x2900) (x535 x2900)))))) (x535 x2900)))))
(define-fun x2656 ((x2900 Int)) Int (ite (= x2889 x2900) x268 (x3069 x2900)))
(define-fun x2116 ((x2900 Int)) Int (ite (= x2900 x2695) x2118 (x2656 x2900)))
(define-fun x2745 ((x2900 Int)) Int (ite x515 (x3069 x2900) (ite x3324 (x896 x2900) (x2116 x2900))))
(define-fun x3085 ((x2900 Int)) Int (x2397 x2900))
(define-fun x2358 ((x2900 Int)) Int (ite x3365 (x2556 x2900) (ite x3506 (x3310 x2900) (x2171 x2900))))
(define-fun x3617 ((x2900 Int)) Int (ite (= 160 x2900) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x2358 x2900)))
(define-fun x1687 ((x2900 Int)) Int (ite (= x2900 164) x2695 (x3617 x2900)))
(define-fun x195 ((x2900 Int)) Int (ite (= x2900 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x1687 x2900)))
(define-fun x2828 ((x2900 Int)) Int (ite (= 164 x2900) x954 (x195 x2900)))
(define-fun x1550 ((x2900 Int)) Int (ite (= x2900 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x133 x2900)))
(define-fun x143 ((x2900 Int)) Int (ite (= 132 x2900) x3279 (x1550 x2900)))
(define-fun x2262 ((x2900 Int)) Int (ite (= 164 x2900) x438 (x143 x2900)))
(define-fun x2635 ((x2900 Int)) Int (ite (= 196 x2900) x695 (x2262 x2900)))
(define-fun x797 ((x2900 Int)) Int (ite (= 228 x2900) x3556 (x2635 x2900)))
(define-fun x528 ((x2900 Int)) Int (ite (= x2900 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x133 x2900)))
(define-fun x871 ((x2900 Int)) Int (ite (= x2900 132) x1053 (x528 x2900)))
(define-fun x2249 ((x2900 Int)) Int (ite (= x2900 164) x1265 (x871 x2900)))
(define-fun x1032 ((x2900 Int)) Int (ite (and (> 192 x2900) (<= 160 x2900)) (x595 (- x2900 160)) (x1570 x2900)))
(define-fun x2809 ((x2900 Int)) Int (ite x515 (ite x1162 (x2440 x2900) (ite x1459 (x2440 x2900) (ite x2866 (ite x1934 (x2440 x2900) (ite x1279 (x2440 x2900) (ite x895 (x2440 x2900) (ite x2597 (ite x1737 (x2858 x2900) (x2440 x2900)) (ite x847 (ite x1737 (x2858 x2900) (x2440 x2900)) (x2440 x2900)))))) (x2440 x2900)))) (ite x3324 (x2440 x2900) (ite x1162 (x2440 x2900) (ite x1459 (x2440 x2900) (ite x2866 (ite x1934 (x2440 x2900) (ite x1279 (x2440 x2900) (ite x895 (x2440 x2900) (ite x2597 (ite x1737 (x2858 x2900) (x2440 x2900)) (ite x847 (ite x1737 (x2858 x2900) (x2440 x2900)) (x2440 x2900)))))) (x2440 x2900)))))))
(define-fun x759 ((x2900 Int)) Int (ite (= x445 x2900) 0 (x2873 x2900)))
(define-fun x3317 ((x2900 Int)) Int (ite (= x1289 x2900) 1 (x612 x2900)))
(define-fun x2967 ((x2900 Int)) Int (ite (= x809 x2900) 1 (x2809 x2900)))
(define-fun x3117 ((x2900 Int)) Int (ite (and (< x2900 (+ x3497 32)) (<= x3497 x2900)) (x1425 (- x2900 x3497)) (x316 x2900)))
(define-fun x1188 ((x2900 Int)) Int (ite (= x2900 x3394) x204 (x3499 x2900)))
(define-fun x725 ((x2900 Int)) Int (ite x1591 (x3499 x2900) (ite x827 (x1823 x2900) (ite x1310 (x1753 x2900) (ite x3573 (x5 x2900) (x1188 x2900))))))
(define-fun x193 ((x2900 Int)) Int (ite (= x1562 x2900) 0 (x725 x2900)))
(define-fun x3 ((x2900 Int)) Int (ite (= x2175 x2900) x855 (x193 x2900)))
(define-fun x3584 ((x2900 Int)) Int (ite (= x2217 x2900) x2042 (x3 x2900)))
(define-fun x907 ((x2900 Int)) Int (ite (= x2900 x1565) x2699 (x3584 x2900)))
(define-fun x1588 ((x2900 Int)) Int (ite (= x2370 x2900) x2914 (x907 x2900)))
(define-fun x616 ((x2900 Int)) Int (ite (= x2900 x2539) x2443 (x1588 x2900)))
(define-fun x2984 ((x2900 Int)) Int (ite (= x2900 x722) x2066 (x616 x2900)))
(define-fun x1520 ((x2900 Int)) Int (ite (= x1738 x2900) x2429 (x2984 x2900)))
(define-fun x3065 ((x2900 Int)) Int (ite x1039 (x2984 x2900) (ite x929 (x616 x2900) (ite x3240 (x1588 x2900) (ite x1148 (x907 x2900) (x1520 x2900))))))
(define-fun x1424 ((x2900 Int)) Int (ite (= x990 x2900) 0 (x3065 x2900)))
(define-fun x3316 ((x2900 Int)) Int (ite (= x2900 x2594) x1376 (x1424 x2900)))
(define-fun x3519 ((x2900 Int)) Int (ite (= x3572 x2900) x109 (x3316 x2900)))
(define-fun x132 ((x2900 Int)) Int (ite (= x2900 x2371) x2314 (x3519 x2900)))
(define-fun x3567 ((x2900 Int)) Int (ite (and (> (+ x2314 x2503) x2900) (>= x2900 x2503)) (x1718 (- x2900 x2503)) (x132 x2900)))
(define-fun x1584 ((x2900 Int)) Int (ite (= x1028 x2900) x212 (x3567 x2900)))
(define-fun x1966 ((x2900 Int)) Int (ite (= x2900 x1454) x1020 (x1584 x2900)))
(define-fun x1373 ((x2900 Int)) Int (ite (= x648 x2900) x186 (x1966 x2900)))
(define-fun x1065 ((x2900 Int)) Int (ite (= x2900 x200) x2951 (x1373 x2900)))
(define-fun x2232 ((x2900 Int)) Int (ite x2630 (x1373 x2900) (ite x1169 (x1966 x2900) (ite x114 (x1584 x2900) (ite x3551 (x3567 x2900) (x1065 x2900))))))
(define-fun x1543 ((x2900 Int)) Int (ite (= x2900 x602) 0 (x2232 x2900)))
(define-fun x1656 ((x2900 Int)) Int (ite (= x1225 x2900) x972 (x1543 x2900)))
(define-fun x2676 ((x2900 Int)) Int (ite (= x1028 x2900) x2448 (x1656 x2900)))
(define-fun x3222 ((x2900 Int)) Int (ite (= x2900 x2993) 160 (x2676 x2900)))
(define-fun x1855 ((x2900 Int)) Int (ite (= x2900 x2482) x1571 (x3222 x2900)))
(define-fun x762 ((x2900 Int)) Int (ite (= x283 x2900) x970 (x1855 x2900)))
(define-fun x2349 ((x2900 Int)) Int (ite (= x580 x2900) x3477 (x762 x2900)))
(define-fun x2167 ((x2900 Int)) Int (ite (= x1219 x2900) x3538 (x2349 x2900)))
(define-fun x732 ((x2900 Int)) Int (ite (= x3488 x2900) x2007 (x2167 x2900)))
(define-fun x2971 ((x2900 Int)) Int (ite x2538 (x2167 x2900) (ite x2471 (x2349 x2900) (ite x1416 (x762 x2900) (ite x1375 (x1855 x2900) (x732 x2900))))))
(define-fun x3127 ((x2900 Int)) Int (ite (= x3374 x2900) 0 (x2971 x2900)))
(define-fun x1015 ((x2900 Int)) Int (ite (= x2136 x2900) x855 (x3127 x2900)))
(define-fun x2061 ((x2900 Int)) Int (ite (= x2900 x2588) x2069 (x1015 x2900)))
(define-fun x48 ((x2900 Int)) Int (ite (= x2900 x1567) x3445 (x2061 x2900)))
(define-fun x3092 ((x2900 Int)) Int (ite (= x2970 x2900) x3631 (x48 x2900)))
(define-fun x581 ((x2900 Int)) Int (ite (= x2900 x350) x1083 (x3092 x2900)))
(define-fun x1671 ((x2900 Int)) Int (ite (= x2165 x2900) x3081 (x581 x2900)))
(define-fun x1572 ((x2900 Int)) Int (ite (= x2078 x2900) x2925 (x1671 x2900)))
(define-fun x2882 ((x2900 Int)) Int (ite x786 (x1671 x2900) (ite x2756 (x581 x2900) (ite x2389 (x3092 x2900) (ite x1271 (x48 x2900) (x1572 x2900))))))
(define-fun x2101 ((x2900 Int)) Int (ite (= x2439 x2900) 0 (x2882 x2900)))
(define-fun x2526 ((x2900 Int)) Int (ite (= x1935 x2900) x2310 (x2101 x2900)))
(define-fun x3314 ((x2900 Int)) Int (ite (= x1013 x2900) x1025 (x2397 x2900)))
(define-fun x1685 ((x2900 Int)) Int (ite (and (>= x2900 164) (< x2900 x1673)) (x3519 (- (+ x2900 (x3002 (+ 164 x3572))) 164)) (x2818 x2900)))
(define-fun x2196 ((x2900 Int)) Int (ite (= x2900 x2945) x940 (x1311 x2900)))
(define-fun x1541 ((x2900 Int)) Int (ite (and (< x2900 (+ x3296 x940)) (>= x2900 x3296)) (x1685 (- (+ x1735 x2900) x3296)) (x3284 x2900)))
(define-fun x711 ((x2900 Int)) Int (ite (= x2694 x2900) 0 (x1541 x2900)))
(define-fun x2045 ((x2900 Int)) Int (ite (= x2900 x3497) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x2806 x2900)))
(define-fun x36 ((x2900 Int)) Int (ite (= x2900 x2350) x745 (x2045 x2900)))
(define-fun x7 ((x2900 Int)) Int (ite (= x2469 x2900) 0 (x36 x2900)))
(define-fun x819 ((x2900 Int)) Int (ite x1162 (x2915 x2900) (x259 x2900)))
(define-fun x2015 ((x2900 Int)) Int (ite x1162 (x2720 x2900) (x2180 x2900)))
(define-fun x2954 ((x2900 Int)) Int (ite x1162 (x2551 x2900) (x944 x2900)))
(define-fun x2214 ((x2900 Int)) Int (ite x1162 (x1596 x2900) (x1856 x2900)))
(define-fun x141 ((x2900 Int)) Int (ite x1162 (x618 x2900) (x2295 x2900)))
(define-fun x2848 ((x2900 Int)) Int (x121 x2900))
(define-fun x3304 ((x2900 Int)) Int (x1266 x2900))
(define-fun x1950 ((x2900 Int)) Int (ite x1162 (x2080 x2900) (x2221 x2900)))
(define-fun x629 ((x2900 Int)) Int (x853 x2900))
(define-fun x3298 ((x2900 Int)) Int (ite x1162 (x3231 x2900) (x432 x2900)))
(define-fun x127 ((x2900 Int)) Int (ite x1162 (x1004 x2900) (x3074 x2900)))
(define-fun x437 ((x2900 Int)) Int (ite x1162 (x1787 x2900) (x335 x2900)))
(define-fun x191 ((x2900 Int)) Int (ite x1162 (x1391 x2900) (x2020 x2900)))
(define-fun x2552 ((x2900 Int)) Int (x3360 x2900))
(define-fun x1975 ((x2900 Int)) Int (ite x1162 (x1986 x2900) (x2337 x2900)))
(define-fun x458 ((x2900 Int)) Int (x612 x2900))
(define-fun x2464 ((x2900 Int)) Int (x590 x2900))
(define-fun x1178 ((x2900 Int)) Int (ite x1162 (x1426 x2900) (x2202 x2900)))
(define-fun x3459 ((x2900 Int)) Int (x570 x2900))
(define-fun x2505 ((x2900 Int)) Int (x3206 x2900))
(define-fun x2880 ((x2900 Int)) Int (ite x1162 (x1034 x2900) (x1949 x2900)))
(define-fun x2667 ((x2900 Int)) Int (x2873 x2900))
(define-fun x556 ((x2900 Int)) Int (x2397 x2900))
(define-fun x909 ((x2900 Int)) Int (ite x1162 (x1531 x2900) (x713 x2900)))
(define-fun x1796 ((x2900 Int)) Int (x3085 x2900))
(define-fun x1494 ((x2900 Int)) Int (x1458 x2900))
(define-fun x1110 ((x2900 Int)) Int (x779 x2900))
(define-fun x22 ((x2900 Int)) Int (x2972 x2900))
(define-fun x2147 ((x2900 Int)) Int (x2459 x2900))
(define-fun x2097 ((x2900 Int)) Int (x121 x2900))
(define-fun x1080 ((x2900 Int)) Int (x1266 x2900))
(define-fun x2446 ((x2900 Int)) Int (x853 x2900))
(define-fun x892 ((x2900 Int)) Int (x3360 x2900))
(define-fun x386 ((x2900 Int)) Int (x612 x2900))
(define-fun x2353 ((x2900 Int)) Int (x590 x2900))
(define-fun x1989 ((x2900 Int)) Int (x3206 x2900))
(define-fun x1341 ((x2900 Int)) Int (x2873 x2900))
(define-fun x2732 ((x2900 Int)) Int (x570 x2900))
(define-fun x1490 ((x2900 Int)) Int (x2397 x2900))
(define-fun x3250 ((x2900 Int)) Int (x612 x2900))
(define-fun x3015 ((x2900 Int)) Int (ite x2866 (x255 x2900) (x2915 x2900)))
(define-fun x3007 ((x2900 Int)) Int (ite x2866 (x147 x2900) (x1787 x2900)))
(define-fun x53 ((x2900 Int)) Int (x590 x2900))
(define-fun x961 ((x2900 Int)) Int (ite x2866 (x782 x2900) (x2551 x2900)))
(define-fun x553 ((x2900 Int)) Int (ite x2866 (x1535 x2900) (x1531 x2900)))
(define-fun x1388 ((x2900 Int)) Int (ite x2866 (x2313 x2900) (x3231 x2900)))
(define-fun x57 ((x2900 Int)) Int (ite x2866 (x1300 x2900) (x1596 x2900)))
(define-fun x2997 ((x2900 Int)) Int (x2397 x2900))
(define-fun x3586 ((x2900 Int)) Int (ite x2866 (x3129 x2900) (x618 x2900)))
(define-fun x1094 ((x2900 Int)) Int (ite x2866 (x413 x2900) (x372 x2900)))
(define-fun x344 ((x2900 Int)) Int (x570 x2900))
(define-fun x3553 ((x2900 Int)) Int (ite x2866 (x3096 x2900) (x2720 x2900)))
(define-fun x270 ((x2900 Int)) Int (x853 x2900))
(define-fun x3123 ((x2900 Int)) Int (ite x2866 (x1272 x2900) (x2080 x2900)))
(define-fun x38 ((x2900 Int)) Int (x2873 x2900))
(define-fun x3052 ((x2900 Int)) Int (x3206 x2900))
(define-fun x2336 ((x2900 Int)) Int (ite x2866 (x3216 x2900) (x1004 x2900)))
(define-fun x2112 ((x2900 Int)) Int (ite x2866 (x1283 x2900) (x1034 x2900)))
(define-fun x1931 ((x2900 Int)) Int (ite x2866 (x560 x2900) (x1426 x2900)))
(define-fun x2947 ((x2900 Int)) Int (x3360 x2900))
(define-fun x1534 ((x2900 Int)) Int (ite x2866 (x834 x2900) (x1986 x2900)))
(define-fun x1832 ((x2900 Int)) Int (x1266 x2900))
(define-fun x571 ((x2900 Int)) Int (x121 x2900))
(define-fun x1810 ((x2900 Int)) Int (ite (= x2919 x2900) x1665 (x535 x2900)))
(define-fun x1515 ((x2900 Int)) Int (x612 x2900))
(define-fun x1214 ((x2900 Int)) Int (x570 x2900))
(define-fun x1786 ((x2900 Int)) Int (x590 x2900))
(define-fun x508 ((x2900 Int)) Int (x2397 x2900))
(define-fun x563 ((x2900 Int)) Int (x121 x2900))
(define-fun x470 ((x2900 Int)) Int (x3206 x2900))
(define-fun x658 ((x2900 Int)) Int (x2873 x2900))
(define-fun x997 ((x2900 Int)) Int (x853 x2900))
(define-fun x2540 ((x2900 Int)) Int (x3360 x2900))
(define-fun x3221 ((x2900 Int)) Int (x1266 x2900))
(define-fun x90 ((x2900 Int)) Int (x1596 x2900))
(define-fun x3381 ((x2900 Int)) Int (x1531 x2900))
(define-fun x305 ((x2900 Int)) Int (x618 x2900))
(define-fun x2968 ((x2900 Int)) Int (x1986 x2900))
(define-fun x2697 ((x2900 Int)) Int (x2397 x2900))
(define-fun x50 ((x2900 Int)) Int (x372 x2900))
(define-fun x1619 ((x2900 Int)) Int (x3360 x2900))
(define-fun x2821 ((x2900 Int)) Int (x3206 x2900))
(define-fun x140 ((x2900 Int)) Int (x121 x2900))
(define-fun x1090 ((x2900 Int)) Int (x1266 x2900))
(define-fun x2343 ((x2900 Int)) Int (x2720 x2900))
(define-fun x3587 ((x2900 Int)) Int (x2915 x2900))
(define-fun x2529 ((x2900 Int)) Int (x612 x2900))
(define-fun x2123 ((x2900 Int)) Int (x590 x2900))
(define-fun x921 ((x2900 Int)) Int (x1004 x2900))
(define-fun x1723 ((x2900 Int)) Int (x1426 x2900))
(define-fun x3344 ((x2900 Int)) Int (x853 x2900))
(define-fun x2735 ((x2900 Int)) Int (x3231 x2900))
(define-fun x370 ((x2900 Int)) Int (x1787 x2900))
(define-fun x1158 ((x2900 Int)) Int (x1034 x2900))
(define-fun x2995 ((x2900 Int)) Int (x570 x2900))
(define-fun x2352 ((x2900 Int)) Int (x2080 x2900))
(define-fun x2277 ((x2900 Int)) Int (x2551 x2900))
(define-fun x1431 ((x2900 Int)) Int (x2873 x2900))
(define-fun x3493 ((x2900 Int)) Int (ite (= x2919 x2900) x1011 (x535 x2900)))
(define-fun x2771 ((x2900 Int)) Int (ite (= x2900 x728) x3463 (x3493 x2900)))
(define-fun x2096 ((x2900 Int)) Int (x2080 x2900))
(define-fun x2366 ((x2900 Int)) Int (x2096 x2900))
(define-fun x1326 ((x2900 Int)) Int (x612 x2900))
(define-fun x2952 ((x2900 Int)) Int (x1326 x2900))
(define-fun x1919 ((x2900 Int)) Int (x1531 x2900))
(define-fun x613 ((x2900 Int)) Int (x1919 x2900))
(define-fun x1471 ((x2900 Int)) Int (x1986 x2900))
(define-fun x894 ((x2900 Int)) Int (x1471 x2900))
(define-fun x3048 ((x2900 Int)) Int (x618 x2900))
(define-fun x2475 ((x2900 Int)) Int (x3048 x2900))
(define-fun x1510 ((x2900 Int)) Int (x570 x2900))
(define-fun x765 ((x2900 Int)) Int (x1510 x2900))
(define-fun x459 ((x2900 Int)) Int (x1596 x2900))
(define-fun x2179 ((x2900 Int)) Int (x459 x2900))
(define-fun x3062 ((x2900 Int)) Int (x372 x2900))
(define-fun x559 ((x2900 Int)) Int (x3062 x2900))
(define-fun x2792 ((x2900 Int)) Int (x121 x2900))
(define-fun x1228 ((x2900 Int)) Int (x2792 x2900))
(define-fun x3356 ((x2900 Int)) Int (x2551 x2900))
(define-fun x1918 ((x2900 Int)) Int (x3356 x2900))
(define-fun x3055 ((x2900 Int)) Int (x1426 x2900))
(define-fun x2212 ((x2900 Int)) Int (x3055 x2900))
(define-fun x2114 ((x2900 Int)) Int (x853 x2900))
(define-fun x2058 ((x2900 Int)) Int (x2114 x2900))
(define-fun x1108 ((x2900 Int)) Int (x2873 x2900))
(define-fun x1401 ((x2900 Int)) Int (x1108 x2900))
(define-fun x2143 ((x2900 Int)) Int (x2397 x2900))
(define-fun x1413 ((x2900 Int)) Int (x2143 x2900))
(define-fun x2728 ((x2900 Int)) Int (x1787 x2900))
(define-fun x766 ((x2900 Int)) Int (x2728 x2900))
(define-fun x867 ((x2900 Int)) Int (x3231 x2900))
(define-fun x1286 ((x2900 Int)) Int (x867 x2900))
(define-fun x1284 ((x2900 Int)) Int (x1034 x2900))
(define-fun x3606 ((x2900 Int)) Int (x1284 x2900))
(define-fun x3071 ((x2900 Int)) Int (x3360 x2900))
(define-fun x322 ((x2900 Int)) Int (x3071 x2900))
(define-fun x2937 ((x2900 Int)) Int (x2720 x2900))
(define-fun x2156 ((x2900 Int)) Int (x2937 x2900))
(define-fun x2563 ((x2900 Int)) Int (x3206 x2900))
(define-fun x214 ((x2900 Int)) Int (x2563 x2900))
(define-fun x3286 ((x2900 Int)) Int (x1266 x2900))
(define-fun x3262 ((x2900 Int)) Int (x3286 x2900))
(define-fun x2281 ((x2900 Int)) Int (x1004 x2900))
(define-fun x2649 ((x2900 Int)) Int (x2281 x2900))
(define-fun x551 ((x2900 Int)) Int (x2915 x2900))
(define-fun x3616 ((x2900 Int)) Int (x551 x2900))
(define-fun x2775 ((x2900 Int)) Int (x590 x2900))
(define-fun x3348 ((x2900 Int)) Int (x2775 x2900))
(define-fun x265 ((x2900 Int)) Int (ite (and (>= x2900 128) (> (+ 128 x936) x2900)) (x1765 (+ x2900 36)) (x2486 x2900)))
(define-fun x1992 ((x2900 Int)) Int (ite (= x2900 x2333) 0 (x265 x2900)))
(define-fun x1891 ((x2900 Int)) Int (ite (= x2736 x2900) x229 (x1992 x2900)))
(define-fun x2467 ((x2900 Int)) Int (ite (= x2900 x2923) 0 (x2397 x2900)))
(define-fun x2491 ((x2900 Int)) Int (ite (= x2900 128) x936 (x1891 x2900)))
(define-fun x2325 ((x2900 Int)) Int (ite (and (> (+ x936 160) x2900) (>= x2900 160)) (x1765 (+ 4 x2900)) (x2491 x2900)))
(define-fun x752 ((x2900 Int)) Int (ite (= x2900 x1889) 0 (x2325 x2900)))
(define-fun x683 ((x2900 Int)) Int (ite (= x918 x2900) x69 (x752 x2900)))
(define-fun x1663 ((x2900 Int)) Int (ite (and (> (+ x1254 x69) x2900) (<= x1254 x2900)) (x1765 (- (+ x704 x2900) x1254)) (x683 x2900)))
(define-fun x249 ((x2900 Int)) Int (ite (= x63 x2900) 0 (x1663 x2900)))
(define-fun x3146 ((x2900 Int)) Int (ite (= x3124 x2900) 1 (x2873 x2900)))
(define-fun x823 ((x2900 Int)) Int (x1326 x2900))
(define-fun x1729 ((x2900 Int)) Int (ite x1279 (x1034 x2900) (x628 x2900)))
(define-fun x1116 ((x2900 Int)) Int (ite x1279 (x2551 x2900) (x128 x2900)))
(define-fun x1033 ((x2900 Int)) Int (ite x1279 (x1531 x2900) (x1964 x2900)))
(define-fun x2740 ((x2900 Int)) Int (x1510 x2900))
(define-fun x1771 ((x2900 Int)) Int (ite x1279 (x3231 x2900) (x3327 x2900)))
(define-fun x1544 ((x2900 Int)) Int (ite x1279 (x1787 x2900) (x431 x2900)))
(define-fun x1608 ((x2900 Int)) Int (ite x1279 (x1596 x2900) (x2255 x2900)))
(define-fun x2531 ((x2900 Int)) Int (ite x1279 (x618 x2900) (x2421 x2900)))
(define-fun x1224 ((x2900 Int)) Int (ite x1279 (x2720 x2900) (x2584 x2900)))
(define-fun x2381 ((x2900 Int)) Int (x2792 x2900))
(define-fun x135 ((x2900 Int)) Int (x2143 x2900))
(define-fun x1054 ((x2900 Int)) Int (ite x1279 (x2080 x2900) (x1659 x2900)))
(define-fun x187 ((x2900 Int)) Int (ite x1279 (x1426 x2900) (x371 x2900)))
(define-fun x2962 ((x2900 Int)) Int (x1108 x2900))
(define-fun x1468 ((x2900 Int)) Int (ite x1279 (x372 x2900) (x2072 x2900)))
(define-fun x554 ((x2900 Int)) Int (ite x1279 (x1004 x2900) (x1592 x2900)))
(define-fun x636 ((x2900 Int)) Int (x2775 x2900))
(define-fun x1650 ((x2900 Int)) Int (x2563 x2900))
(define-fun x2235 ((x2900 Int)) Int (ite x1279 (x2915 x2900) (x3460 x2900)))
(define-fun x2763 ((x2900 Int)) Int (x3071 x2900))
(define-fun x2514 ((x2900 Int)) Int (ite x1279 (x1986 x2900) (x2041 x2900)))
(define-fun x2766 ((x2900 Int)) Int (x2114 x2900))
(define-fun x2508 ((x2900 Int)) Int (x3286 x2900))
(define-fun x2119 ((x2900 Int)) Int (ite x2597 (x161 x2900) (ite x847 (x161 x2900) (x1034 x2900))))
(define-fun x3093 ((x2900 Int)) Int (ite x2597 (x2148 x2900) (ite x847 (x2148 x2900) (x1531 x2900))))
(define-fun x530 ((x2900 Int)) Int (ite x2597 (x2276 x2900) (ite x847 (x2276 x2900) (x1986 x2900))))
(define-fun x177 ((x2900 Int)) Int (ite x2597 (x939 x2900) (ite x847 (x939 x2900) (x3231 x2900))))
(define-fun x1568 ((x2900 Int)) Int (ite x2597 (x2422 x2900) (ite x847 (x2422 x2900) (x1787 x2900))))
(define-fun x325 ((x2900 Int)) Int (ite x2597 (x604 x2900) (ite x847 (x604 x2900) (x618 x2900))))
(define-fun x3454 ((x2900 Int)) Int (ite x2597 (x3257 x2900) (ite x847 (x3257 x2900) (x372 x2900))))
(define-fun x2430 ((x2900 Int)) Int (ite x2597 (x3207 x2900) (ite x847 (x3207 x2900) (x2080 x2900))))
(define-fun x2161 ((x2900 Int)) Int (ite x2597 (x1278 x2900) (ite x847 (x1278 x2900) (x1426 x2900))))
(define-fun x1582 ((x2900 Int)) Int (ite x2597 (x1348 x2900) (ite x847 (x1348 x2900) (x2720 x2900))))
(define-fun x1251 ((x2900 Int)) Int (ite x2597 (x2938 x2900) (ite x847 (x2938 x2900) (x1004 x2900))))
(define-fun x1486 ((x2900 Int)) Int (ite x2597 (x3080 x2900) (ite x847 (x3080 x2900) (x1596 x2900))))
(define-fun x2093 ((x2900 Int)) Int (ite x2597 (x2207 x2900) (ite x847 (x2207 x2900) (x2551 x2900))))
(define-fun x1190 ((x2900 Int)) Int (ite x2597 (x3082 x2900) (ite x847 (x3082 x2900) (x2915 x2900))))
(define-fun x1594 ((x2900 Int)) Int (x459 x2900))
(define-fun x2668 ((x2900 Int)) Int (x1919 x2900))
(define-fun x1126 ((x2900 Int)) Int (x3048 x2900))
(define-fun x3424 ((x2900 Int)) Int (x2281 x2900))
(define-fun x2922 ((x2900 Int)) Int (x1471 x2900))
(define-fun x1209 ((x2900 Int)) Int (x2143 x2900))
(define-fun x1096 ((x2900 Int)) Int (x3071 x2900))
(define-fun x3353 ((x2900 Int)) Int (x3286 x2900))
(define-fun x409 ((x2900 Int)) Int (x2563 x2900))
(define-fun x3094 ((x2900 Int)) Int (x2792 x2900))
(define-fun x3542 ((x2900 Int)) Int (x551 x2900))
(define-fun x2764 ((x2900 Int)) Int (x3062 x2900))
(define-fun x2935 ((x2900 Int)) Int (x1326 x2900))
(define-fun x2627 ((x2900 Int)) Int (x2775 x2900))
(define-fun x2784 ((x2900 Int)) Int (x2937 x2900))
(define-fun x1867 ((x2900 Int)) Int (x3055 x2900))
(define-fun x1395 ((x2900 Int)) Int (x867 x2900))
(define-fun x1353 ((x2900 Int)) Int (x2114 x2900))
(define-fun x2417 ((x2900 Int)) Int (x2728 x2900))
(define-fun x2776 ((x2900 Int)) Int (x1510 x2900))
(define-fun x979 ((x2900 Int)) Int (x2096 x2900))
(define-fun x2664 ((x2900 Int)) Int (x3356 x2900))
(define-fun x1446 ((x2900 Int)) Int (x1284 x2900))
(define-fun x1678 ((x2900 Int)) Int (x1108 x2900))
(define-fun x1948 ((x2900 Int)) Int (x2143 x2900))
(define-fun x3115 ((x2900 Int)) Int (x1108 x2900))
(define-fun x568 ((x2900 Int)) Int (x2114 x2900))
(define-fun x750 ((x2900 Int)) Int (x459 x2900))
(define-fun x2524 ((x2900 Int)) Int (x867 x2900))
(define-fun x3487 ((x2900 Int)) Int (x2728 x2900))
(define-fun x1421 ((x2900 Int)) Int (x3055 x2900))
(define-fun x3043 ((x2900 Int)) Int (x2096 x2900))
(define-fun x2188 ((x2900 Int)) Int (x3071 x2900))
(define-fun x2163 ((x2900 Int)) Int (x1284 x2900))
(define-fun x3110 ((x2900 Int)) Int (x2775 x2900))
(define-fun x1372 ((x2900 Int)) Int (x2281 x2900))
(define-fun x3624 ((x2900 Int)) Int (x3286 x2900))
(define-fun x538 ((x2900 Int)) Int (x2937 x2900))
(define-fun x1770 ((x2900 Int)) Int (x1471 x2900))
(define-fun x851 ((x2900 Int)) Int (x2792 x2900))
(define-fun x3408 ((x2900 Int)) Int (x2563 x2900))
(define-fun x6 ((x2900 Int)) Int (x1919 x2900))
(define-fun x2622 ((x2900 Int)) Int (x1510 x2900))
(define-fun x1402 ((x2900 Int)) Int (x3048 x2900))
(define-fun x1009 ((x2900 Int)) Int (x1326 x2900))
(define-fun x3589 ((x2900 Int)) Int (x3356 x2900))
(define-fun x185 ((x2900 Int)) Int (x551 x2900))
(define-fun x591 ((x2900 Int)) Int (x1458 x2900))
(define-fun x1554 ((x2900 Int)) Int (x779 x2900))
(define-fun x1189 ((x2900 Int)) Int (x3085 x2900))
(define-fun x3330 ((x2900 Int)) Int (x2972 x2900))
(define-fun x1166 ((x2900 Int)) Int (x2459 x2900))
(define-fun x2982 ((x2900 Int)) Int (x1458 x2900))
(define-fun x3260 ((x2900 Int)) Int (x3085 x2900))
(define-fun x1269 ((x2900 Int)) Int (x779 x2900))
(define-fun x529 ((x2900 Int)) Int (x3468 x2900))
(define-fun x8 ((x2900 Int)) Int (x2459 x2900))
(define-fun x2031 ((x2900 Int)) Int (x2972 x2900))
(define-fun x1615 ((x2900 Int)) Int (x1458 x2900))
(define-fun x345 ((x2900 Int)) Int (x3468 x2900))
(define-fun x1277 ((x2900 Int)) Int (x3085 x2900))
(define-fun x2028 ((x2900 Int)) Int (x779 x2900))
(define-fun x3475 ((x2900 Int)) Int (x2459 x2900))
(define-fun x3050 ((x2900 Int)) Int (x2972 x2900))
(define-fun x1387 ((x2900 Int)) Int (x779 x2900))
(define-fun x1667 ((x2900 Int)) Int (x3085 x2900))
(define-fun x2055 ((x2900 Int)) Int (x2459 x2900))
(define-fun x2392 ((x2900 Int)) Int (x1458 x2900))
(define-fun x119 ((x2900 Int)) Int (x2972 x2900))
(define-fun x2441 ((x2900 Int)) Int (ite (= x2900 x3513) x3528 (x1078 x2900)))
(define-fun x1258 ((x2900 Int)) Int (ite (= x601 x2900) x1724 (x1282 x2900)))
(define-fun x3309 ((x2900 Int)) Int (ite (= x2900 x2251) x2695 (x1475 x2900)))
(define-fun x2940 ((x2900 Int)) Int (ite (= x2900 x44) x745 (x590 x2900)))
(define-fun x1909 ((x2900 Int)) Int (ite (= x223 x2900) 0 (x3206 x2900)))
(define-fun x107 ((x2900 Int)) Int (ite (and (> 160 x2900) (<= 128 x2900)) (x3560 (- x2900 128)) (x2599 x2900)))
(define-fun x280 ((x2900 Int)) Int (ite (= 128 x2900) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2836 x2900)))
(define-fun x2939 ((x2900 Int)) Int (ite (= x2900 132) x2478 (x280 x2900)))
(define-fun x729 ((x2900 Int)) Int (ite (= 164 x2900) x1652 (x2939 x2900)))
(define-fun x1233 ((x2900 Int)) Int (ite (= x2900 196) x2303 (x729 x2900)))
(define-fun x3120 ((x2900 Int)) Int (ite (= x2900 228) x2344 (x1233 x2900)))
(define-fun x3239 ((x2900 Int)) Int (ite (= x2900 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2836 x2900)))
(define-fun x575 ((x2900 Int)) Int (ite (= 132 x2900) x25 (x3239 x2900)))
(define-fun x1059 ((x2900 Int)) Int (ite (= x2900 164) x600 (x575 x2900)))
(define-fun x550 ((x2900 Int)) Int 0)
(define-fun x668 ((x2900 Int)) Int (ite (= x2900 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2836 x2900)))
(define-fun x412 ((x2900 Int)) Int (ite (= x2900 132) x1994 (x668 x2900)))
(define-fun x772 ((x2900 Int)) Int (ite (= x2900 164) x2719 (x412 x2900)))
(define-fun x2788 ((x2900 Int)) Int (ite (= x2900 196) x661 (x772 x2900)))
(define-fun x1703 ((x2900 Int)) Int (ite (= x2900 x2919) x1256 (x535 x2900)))
(define-fun x308 ((x2900 Int)) Int (ite (= x2900 x728) x1417 (x1703 x2900)))
(define-fun x3114 ((x2900 Int)) Int (ite (= x2900 x728) x1052 (x308 x2900)))
(define-fun x3119 ((x2900 Int)) Int (ite (= 128 x2900) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2836 x2900)))
(define-fun x1660 ((x2900 Int)) Int (ite (= x2900 132) x447 (x3119 x2900)))
(define-fun x87 ((x2900 Int)) Int 0)
(define-fun x355 ((x2900 Int)) Int (ite (= x2900 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2836 x2900)))
(define-fun x3036 ((x2900 Int)) Int (ite (= 132 x2900) x3122 (x355 x2900)))
(define-fun x1686 ((x2900 Int)) Int (ite (= x2900 x728) x3101 (x2771 x2900)))
(assert (x2052 x3503))
(assert (x2052 x918))
(assert (> (x3006 64 x2448 7) 10000))
(assert (< (x3006 x2402 x3232 x3407) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3300 (x61 x3322 x4 x399 x1688))))
(assert (x2052 x1255))
(assert (x2052 x2699))
(assert (x2052 x2883))
(assert (x2052 x2755))
(assert (=> (>= 10000 x3125) (= 0 (x1863 x3125))))
(assert (= (=> (and (= x1055 x3578) (= x2749 0) (= x2461 x2314) (= x1055 0)) x3465) x2805))
(assert (= (=> (= x496 (= 0 x2291)) (and (=> (and (and (= x2407 x942) (= x3592 x917) (= x2306 x3531) (= x2354 x2356) (= x2208 x1061) (= x3184 x1007) (= x1329 x1086) (= x1497 x1408) (= x3161 x3174) (= x3130 x2348) (= x526 x176) (= x2312 x337) (= x3000 x1940) (= x951 x2365)) (not x496)) x714) (=> (and (and (= true x271) (= x1895 false) (= x3329 x597)) x496) x1170))) x989))
(assert (x2052 x844))
(assert (x2052 x3366))
(assert (=> (>= 10000 x2885) (= (x1863 x2885) 0)))
(assert (x2052 x3383))
(assert (x2052 x2078))
(assert (x2052 x433))
(assert (x2052 x2795))
(assert (x2052 x196))
(assert (x2052 x2517))
(assert (x2052 x1125))
(assert (= x1195 (=> (and (or (and x3537 (and (= (- x236 x1840) x3249) (= x1399 x2398) (= x1590 x1104) (= x2022 (+ x2908 x1840)) (= x1701 x411) (= x1237 x3186) (= (x2990 x2695) x2908) (= (ite (= x1399 0) x2887 0) x1840) (>= x2022 0) (= x2437 x2620) (= x1533 x2185) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1840 x2908)) (= x753 x31) (= (x877 x447) x236) (<= x2022 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1537 x3263) (= x3366 x2022) (= x3089 x3402))) (and (and (= x1399 x2398) (= x3402 x3089) (= x2620 x2437) (= x1104 x1590) (= x1537 x3263) (= x1533 x2185) (= x3186 x1237) (= x411 x1701) (= x31 x753)) (not x3537))) (= x3537 (= x1399 0))) x1085)))
(assert (x2052 x3528))
(assert (=> (<= x3607 10000) (= 0 (x1863 x3607))))
(assert (x2052 x564))
(assert (x2052 x1075))
(assert (x2052 x579))
(assert (x2052 x2326))
(assert (= x1403 (and x815 x2547)))
(assert (x2052 x1742))
(assert (x3300 18446744073709551615))
(assert (x850 x397))
(assert (= (x1938 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x2396))
(assert (= (x1938 (x1836 x1929 x364)) x364))
(assert (x2052 x2378))
(assert (x2052 x323))
(assert (x3300 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (> (x3579 x1929 x3550 x1422 x2016 x1210 x1392) 10000))
(assert (= x2361 (or x391 (and x2754 (not x201)))))
(assert (x2052 x2843))
(assert (x2052 x1128))
(assert (=> (>= 10000 x1954) (= 0 (x1863 x1954))))
(assert (= x288 (x175 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060))))
(assert (x2052 x2210))
(assert (x2052 x2133))
(assert (= x2989 (x2476 (x61 x2989 x221 x2177 x715))))
(assert (x2052 x204))
(assert (= 0 (x1863 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (= x394 (=> (= (+ x761 x1720) x3149) x2646)))
(assert (= (=> (and (= (x3002 (+ 96 x283)) x3488) (= x2002 (not (> x1571 128))) (= (x2167 x2717) x2007) (= x2717 (x3002 (+ x2017 96)))) (and x2002 x558)) x3321))
(assert (x3300 2770781680))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x2695 1)))
(assert (x2052 x2184))
(assert (= (x3006 64 x3248 2) (x1863 (x3006 64 x3248 2))))
(assert (x2052 x3438))
(assert (= x1361 (and (not x1547) x2035)))
(assert (= (and x1779 x2474) x1160))
(assert (x2052 x46))
(assert (x2052 x3474))
(assert (x2052 x2400))
(assert (= (x1938 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x47))
(assert (x2052 x798))
(assert (= x776 (or x1907 x2458)))
(assert (x2052 x2628))
(assert (< (x3006 64 x2487 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2744) (= 0 (x1863 x2744))))
(assert (= 3 (x175 (x3006 64 x2448 3))))
(assert (x2052 x848))
(assert (= x827 (and (not x2473) x2132)))
(assert (=> (<= x1526 10000) (= (x1863 x1526) 0)))
(assert (= (x1875 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) x86))
(assert (x2052 x2492))
(assert (x2052 x3111))
(assert (= (or x515 x2623 x3324) x1857))
(assert (x2052 x3350))
(assert (= x1163 (x1938 (x3006 64 x1163 36))))
(assert (= x1712 (and x301 x2234)))
(assert (x2052 x3297))
(assert (x2052 x312))
(assert (> (x3006 64 x3441 12) 10000))
(assert (= (x2476 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) x2989))
(assert (= (x1539 x3511 x3209 x2059 x2223 x2230) (x1863 (x1539 x3511 x3209 x2059 x2223 x2230))))
(assert (= (x1938 (x3579 x769 x2979 x3379 x932 x1868 x1211)) x2979))
(assert (x2052 x1172))
(assert (x2052 x2504))
(assert (= (x1938 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) x2388))
(assert (x2052 x1616))
(assert (x2052 x2520))
(assert (=> (>= 10000 x650) (= 0 (x1863 x650))))
(assert (= (x1213 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) x3547))
(assert (=> (>= 10000 x3203) (= (x1863 x3203) 0)))
(assert (= (and (not x28) x3133) x1375))
(assert (x2052 x3001))
(assert (x2052 x1944))
(assert (= x1113 (and x146 x2224)))
(assert (= (x175 (x1539 x769 x1461 x734 x2730 x2983)) x734))
(assert (= (x450 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x893))
(assert (=> (<= x898 10000) (= 0 (x1863 x898))))
(assert (=> (>= 10000 x1924) (= 0 (x1863 x1924))))
(assert (x2052 x2572))
(assert (= 0 (x1863 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (=> (<= x1839 10000) (= 0 (x1863 x1839))))
(assert (= (x1938 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (<= x3511 32) x1496 (ite (>= 64 x3511) x1618 (ite (>= 96 x3511) x2111 (ite (<= x3511 128) x1988 (ite (>= 160 x3511) x3188 (ite (<= x3511 192) x1165 (ite (>= 224 x3511) x690 x1420)))))))))) x1917))
(assert (= (or x1737 x2685) x2320))
(assert (x3300 3812630263))
(assert (x2052 x2068))
(assert (x2052 x1768))
(assert (x2052 x1344))
(assert (x2052 x136))
(assert (x2052 x2908))
(assert (=> (<= x2814 10000) (= 0 (x1863 x2814))))
(assert (= (x1504 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) x1610))
(assert (x2052 x3339))
(assert (x2052 x3326))
(assert (< (x40 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x3201))
(assert (x2052 x1657))
(assert (x2052 x2944))
(assert (=> (<= x2791 10000) (= 0 (x1863 x2791))))
(assert (x2052 x176))
(assert (x2052 x3595))
(assert (x2052 x2007))
(assert (x2052 x2433))
(assert (=> (>= 10000 x1626) (= 0 (x1863 x1626))))
(assert (= (and x3641 x1744) x621))
(assert (x2052 x1758))
(assert (= x1111 (=> (and (= x1489 x1173) (= x2850 x1476) (= x448 x2127) (= x1507 x1443) (= x166 x1808) (= x2502 x2782) (= x620 x1561) (= x3427 x2485) (= x3210 x2904) (= x2145 x3583) (= x419 x318) (= x2674 x889) (= x2600 x2522) (= x123 x1423) (= x2692 x1589) (= x45 x1320)) x2568)))
(assert (not (x3300 (x1836 x769 x696))))
(assert (= (x1863 (x61 x2039 x2492 x2427 x3253)) (x61 x2039 x2492 x2427 x3253)))
(assert (= x3108 (=> (and (= (x3002 (+ x936 128)) x2333) (= x3511 (x3498 (- x1313 128))) (= x229 (x3006 64 x3338 7)) (= x2736 (x3002 (+ 128 x936))) (= (>= 224 x1740) x1811) (= (x3498 (- x3511 32)) x1740) (= (x3002 (+ x2736 32)) x1313)) (and x1811 (=> (and (= x156 (x1891 160)) (= x471 (x1891 128)) (= x2973 (x1891 160)) (= (x1891 160) x2814) (= (x1891 256) x375) (= x887 (ite (= x1740 0) x423 (ite (<= x1740 32) x3259 (ite (>= 64 x1740) x77 (ite (>= 96 x1740) x1295 (ite (<= x1740 128) x1947 (ite (<= x1740 160) x3312 (ite (>= 192 x1740) x1238 (ite (<= x1740 224) x1804 x3183))))))))) (= x2585 (<= x3511 224)) (= (x3579 x1740 x3242 x637 x1928 x904 x2624) x3312) (= (x1539 x1740 x60 x531 x2047 x3203) x1947) (= (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521) x1804) (= x1933 (x1891 128)) (= (x1891 160) x531) (= (x1836 x1740 x2698) x3259) (= (x1891 256) x2624) (= (x1891 192) x3125) (= x2435 (x1891 256)) (= x3203 (x1891 224)) (= x2865 (x1891 128)) (= x521 (x1891 320)) (= x2512 (x1891 192)) (= x423 (x40 0)) (= x1238 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337)) (= x1414 (x1891 192)) (= x1928 (x1891 192)) (= (x1891 288) x2687) (= (x1891 128) x60) (= (x1891 128) x807) (= x1337 (x1891 288)) (= (x1891 128) x2698) (= x637 (x1891 160)) (= (x1891 192) x2047) (= (x1891 160) x2085) (= (x1891 224) x1742) (= x1229 (x1891 224)) (= (x1891 224) x904) (= x77 (x3006 x1740 x807 x2973)) (= x3242 (x1891 128)) (= x1295 (x61 x1740 x1933 x2085 x2512))) (and x2585 (=> (and (= (x1891 192) x2223) (= x3380 (x1891 256)) (= x18 (x1891 128)) (= (x1891 128) x1716) (= (x1891 160) x2410) (= (x3002 (+ x936 160)) x1889) (= (x3002 (+ x1941 x918)) x2593) (= (x3002 (+ 32 x1200)) x1941) (= x1988 (x1539 x3511 x3209 x2059 x2223 x2230)) (= x1172 (x1891 192)) (= x1254 (x3002 (+ x918 32))) (= x2230 (x1891 224)) (= (x40 0) x2751) (= (+ 160 x1185) x918) (= x1706 (x1891 160)) (= x331 (x1891 128)) (= (x1891 128) x3209) (= x1618 (x3006 x3511 x331 x617)) (= x3470 (div x502 32)) (= (x1891 256) x1212) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x936) (<= x936 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x698 (x1891 288)) (= x2923 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (<= x3511 32) x1496 (ite (>= 64 x3511) x1618 (ite (<= x3511 96) x2111 (ite (<= x3511 128) x1988 (ite (<= x3511 160) x3188 (ite (>= 192 x3511) x1165 (ite (>= 224 x3511) x690 x1420)))))))))) (<= 161 x2593) (= (x1891 224) x2574) (= x1801 (x1891 160)) (= x3569 (x1891 192)) (= x2328 (x3002 (+ 31 x69))) (= x552 (x1891 192)) (= (x1891 288) x3547) (= (x1891 256) x1859) (> x2593 x918) (= (x1891 128) x1924) (= x3188 (x3579 x3511 x1924 x2410 x89 x3281 x3380)) (= x502 (x3002 (+ x936 31))) (= x1785 (x249 x918)) (= x1165 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) (= (x1836 x3511 x18) x1496) (= (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383) x690) (= (div x2328 32) x1184) (= x2059 (x1891 160)) (= x617 (x1891 160)) (= x1200 (* 32 x1184)) (= (x1891 160) x3320) (= x383 (x1891 320)) (= x1955 (or (> x1785 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1785) true) (> 32 x1785)))) (= x1598 (x1891 128)) (= (x1891 224) x3281) (= (* 32 x3470) x1185) (= (x3002 (+ x69 x1254)) x63) (= (x61 x3511 x1598 x1801 x552) x2111) (= x2173 (x1891 224)) (= (x1891 192) x89) (= 128 x2089) (= (x1891 128) x2778)) (and (=> (and (and (= x2477 true) (= x428 false) (= 0 x3246)) x1955) x1636) (=> (not x1955) x79)))))))))
(assert (=> (>= 10000 x3420) (= 0 (x1863 x3420))))
(assert (< (x1836 x1929 x364) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2573))
(assert (x2052 x773))
(assert (= x3520 false))
(assert (x2052 x1793))
(assert (x2052 x1232))
(assert (= (or (and x3417 x689) (and x2074 x418) (and x1849 x3040) (and x1192 x1315) (and x3625 x966) (and x2781 x1247) (and x1885 x934) (and x2329 x1432) (and x3358 x2297)) x733))
(assert (x2052 x578))
(assert (x2052 x3636))
(assert (= (x1213 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) x2817))
(assert (x2052 x932))
(assert (= (and x2360 x2902) x1974))
(assert (x2052 x1392))
(assert (= (=> (and (= x2428 x533) (= (x52 255 x2206) x498) (= x206 x533) (= x498 x2723) (= 2 x3580) (= 0 x1323) (= x1734 x977)) x3435) x2660))
(assert (< 10000 (x3579 x769 x2979 x3379 x932 x1868 x1211)))
(assert (=> (<= x492 10000) (= (x1863 x492) 0)))
(assert (x2052 x138))
(assert (= x1076 (x2476 (x1539 x1076 x1363 x1322 x96 x2434))))
(assert (= x1117 (=> (and (= true x1115) (= x2790 x3329) (= x1605 false)) x1170)))
(assert (= 0 (x2476 (x40 0))))
(assert (< 10000 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508)))
(assert (x2052 x2469))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1877 12)))
(assert (= x666 (x1938 (x1539 x3457 x666 x829 x3354 x3351))))
(assert (= (x2476 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508)) x3457))
(assert (= (x175 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) x1422))
(assert (= x2557 (x1875 (x3579 x2989 x366 x3118 x1610 x2557 x1089))))
(assert (x2052 x3199))
(assert (x2052 x2390))
(assert (x2052 x1363))
(assert (= (x1938 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) x1716))
(assert (x2052 x96))
(assert (= (x2476 (x3006 64 x1844 36)) 64))
(assert (= (and x2455 (not x2847)) x198))
(assert (x2052 x1675))
(assert (x2052 x1476))
(assert (= (x1213 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) x698))
(assert (= (x2476 (x3006 64 x3168 36)) 64))
(assert (x1834 x313))
(assert (= x2989 (x2476 (x3006 x2989 x705 x2377))))
(assert (x2052 x1389))
(assert (x2052 x1587))
(assert (x2052 x1239))
(assert (= x583 (x1504 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577))))
(assert (= 0 (x1863 38584857114614344130707641774870441135179346817440091772946614992565446901760)))
(assert (= (x2476 (x3006 x2402 x3232 x3407)) x2402))
(assert (= x2814 (x175 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (not (x3300 (x1836 x2402 x3639))))
(assert (=> (>= 10000 x2574) (= 0 (x1863 x2574))))
(assert (= x2250 (or (and x1465 x1306) (and x3102 x41))))
(assert (= (x1938 (x3006 64 x2184 2)) x2184))
(assert (x2052 x999))
(assert (> (x1836 32 103) 10000))
(assert (x2052 x2625))
(assert (x2052 x2590))
(assert (x2052 x2753))
(assert (x2052 x300))
(assert (< 10000 (x3579 x3457 x2662 x3474 x139 x485 x3277)))
(assert (x2052 x251))
(assert (=> (<= x2085 10000) (= (x1863 x2085) 0)))
(assert (= (x1863 (x3006 64 x1819 36)) (x3006 64 x1819 36)))
(assert (= (and x358 x338) x1066))
(assert (x2169 x1828))
(assert (= x3465 (=> (and (or x841 (not x841)) (= (= 0 x2749) x841)) x3230)))
(assert (= 64 (x2476 (x3006 64 x1819 36))))
(assert (x2052 x984))
(assert (x2052 x2903))
(assert (x2052 x2521))
(assert (not (x3300 (x3006 64 x945 36))))
(assert (= (x175 (x3006 64 x2631 36)) 36))
(assert (= x2410 (x175 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x2434))
(assert (= x3481 (=> (and (= x3078 (x3002 (+ 96 x3311))) (= (x3002 (+ 96 x2970)) x2078) (= (x1671 x3078) x2925) (= x1726 (not (> x3445 128)))) (and x1726 x267))))
(assert (x24 x3195))
(assert (= x2743 (x1938 (x1539 x2989 x2743 x2944 x674 x2050))))
(assert (x2052 x602))
(assert (= (x1938 (x1836 x3511 x18)) x18))
(assert (= x1152 (and x2686 (not x584))))
(assert (x2052 x47))
(assert (= (and x250 (not x673)) x3506))
(assert (= (x2476 (x3006 64 x3607 2)) 64))
(assert (= (and x1365 x1689) x2218))
(assert (x2052 x1014))
(assert (= 100 (x175 (x3006 64 x2140 100))))
(assert (= x818 (or x2613 x379)))
(assert (= (=> (and (= 150 x1745) (= x1339 (x3002 (+ 36 x2594))) (= x906 (x3002 (+ x2017 x1929))) (<= 1 x3605) (= (x3002 (+ x938 x3311)) x159) (= x3311 (x3002 (+ 32 x3605))) (< x3605 x2594) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2245) (= (* 32 x2400) x1560) (= x840 (x3002 (+ x1339 32))) (= x3605 (x3002 (+ x2245 (mod (+ 32 x2543) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x967 (div (+ 31 x1929) 32)) (= (x3002 (+ 32 x2750)) x3375) (= x2543 (* 32 x967)) (= x2017 (x3002 (+ x2245 32))) (>= x2594 2) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2245) (= x2594 (x3002 (+ x3605 (mod (+ 32 x1560) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2245) (= (div (+ 31 x938) 32) x2400) (> x3605 x2245) (= x2275 (> x2636 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3605) (= x2636 (x406 x2245)) (= x2750 (x3002 (+ 128 x1339)))) (and (=> (and x2275 (and (= (x5 x2017) x2628) (= x480 (< 32 x2636)))) (and (=> (and (and (= x2727 (x1753 x1783)) (= x2406 (x3002 (+ 32 x3375))) (= (> x2636 64) x2473) (= x1783 (x3002 (+ 32 x2017)))) x480) (and (=> (and (and (= (x3002 (+ 64 x2017)) x812) (= x2419 (x1823 x812)) (= (x3002 (+ x3375 64)) x2843) (= x1996 (< 96 x2636))) x2473) (and (=> (not x1996) x56) (=> x1996 x872))) (=> (not x2473) x56))) (=> (not x480) x56))) (=> (not x2275) x56))) x523))
(assert (= x3039 (and x3215 x1773)))
(assert (x3535 x3342))
(assert (= (x1539 x3457 x666 x829 x3354 x3351) (x1863 (x1539 x3457 x666 x829 x3354 x3351))))
(assert (= x3248 (x1938 (x3006 64 x3248 2))))
(assert (= x674 (x1504 (x1539 x2989 x2743 x2944 x674 x2050))))
(assert (x2052 x1647))
(assert (> (x3006 64 x3607 2) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1274 36)))
(assert (x2052 x1268))
(assert (= (and x3293 x3543) x1442))
(assert (x2052 x3113))
(assert (= 64 (x2476 (x3006 64 x2448 7))))
(assert (=> (<= x2054 10000) (= 0 (x1863 x2054))))
(assert (= (and x948 x1193) x544))
(assert (= 0 (x1863 44057028636630039105102054091366763171729008530599747929804322044178077843456)))
(assert (=> (<= x2715 10000) (= (x1863 x2715) 0)))
(assert (= (x1863 (x3006 64 x2695 2)) (x3006 64 x2695 2)))
(assert (x2052 x1962))
(assert (= (or x790 x1551) x3543))
(assert (= (or x1310 x1591 x846 x3573 x827) x3223))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)))
(assert (= (x450 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508)) x2190))
(assert (=> (<= x2386 10000) (= (x1863 x2386) 0)))
(assert (x2052 x3492))
(assert (x2052 x3244))
(assert (= x3471 (=> (and (= x2773 (x3498 (- x3600 (mod (ite (> 32 x2077) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x52 1 x342) x3600) (= x2077 (ite (> x3600 0) x1517 (x52 127 x1517))) (= (> x2773 0) x916) (= x1517 (div x342 2))) (and (=> (and x916 (and (= (= 0 x2969) x442) (= x2969 (x52 1 x342)))) (and (=> x442 x3003) (=> (and (= (> x2077 0) x2812) (not x442)) (and (=> (not x2812) x1930) (=> x2812 x257))))) (=> (not x916) x2413)))))
(assert (x2052 x3411))
(assert (x2052 x596))
(assert (= (x1863 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (= (x1863 (x1836 x2402 x3639)) (x1836 x2402 x3639)))
(assert (not (x3300 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (x2052 x3209))
(assert (not (x3300 (x3006 64 x2695 2))))
(assert (= (x1213 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x3147))
(assert (x1834 x2823))
(assert (= (x1504 (x1539 x1076 x1363 x1322 x96 x2434)) x96))
(assert (= x1487 (and x434 (not x1462))))
(assert (x2052 x3580))
(assert (x2052 x2942))
(assert (x2052 x125))
(assert (x2052 x757))
(assert (< (x1836 x3322 x3349) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2832))
(assert (x2052 x2885))
(assert (= (and x2985 x888) x2541))
(assert (= (x1863 (x1836 x1076 x1240)) (x1836 x1076 x1240)))
(assert (= (or x2797 x245) x2270))
(assert (= (x1938 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) x366))
(assert (= (and x2976 x1955) x2909))
(assert (x2052 x1754))
(assert (x2052 x3021))
(assert (= x1031 (or (and x2767 x1478) (and x1451 x1760))))
(assert (x2052 x3463))
(assert (< (x3006 64 x3248 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3368 x491) x3611))
(assert (= (x1539 x3322 x1526 x3539 x3420 x162) (x1863 (x1539 x3322 x1526 x3539 x3420 x162))))
(assert (= (x1875 (x1539 x2989 x2743 x2944 x674 x2050)) x2050))
(assert (> (x1539 x1740 x60 x531 x2047 x3203) 10000))
(assert (= x403 (=> (and (= 0 x2461) (= x455 false) (= true x2863)) x2805)))
(assert (=> (>= 10000 x2804) (= 0 (x1863 x2804))))
(assert (= (x175 (x3579 x769 x2979 x3379 x932 x1868 x1211)) x3379))
(assert (= x2772 (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x973) (>= x3585 0) (= x247 (x1970 36)) (= x2448 x692) (<= x384 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1325) (not (= x3482 x2695)) (= (x1970 100) x2701) (= x247 x2037) (= x2701 x2062) (<= 196 x233) (<= 0 x973) (>= 4294967295 x2334) (= x416 0) (<= 0 x2644) x1714 (= false x2183) (<= x2578 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x2893) (= x2893 x2695) (>= 1461501637330902918203684832716283019655932542975 x2695) (= false x3393) (= x1714 (> (x2725 x2695) 0)) (<= 1 x1768) x3637 (>= 1461501637330902918203684832716283019655932542975 x2644) (= (< 0 (x2725 x2919)) x720) (<= x247 18446744073709551615) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x233) (<= 1 x2695) (<= 1 x3482) (>= x2525 0) (<= x2919 1461501637330902918203684832716283019655932542975) (= x3482 x1768) (= false x474) (<= x3482 1461501637330902918203684832716283019655932542975) (not (= x2695 x2919)) (>= 1461501637330902918203684832716283019655932542975 x1768) (>= 18446744073709551615 x2701) (not (= x974 x2695)) x720 (<= 1 x974) (not (= x974 x3482)) (<= 0 x384) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2525) (<= 0 x2141) (<= x2448 65535) (<= 0 x543) x65 (<= 0 x2334) (= 0 x801) (= x258 x855) (>= x1072 0) (>= x1901 1) (<= 0 x1325) (= x1102 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3585) (>= x2893 1) (<= x1901 1461501637330902918203684832716283019655932542975) (= x747 false) (<= x974 1461501637330902918203684832716283019655932542975) (= x3280 4) (>= x2919 1) (not (= x2919 x974)) (>= 18446744073709551615 x855) (= 0 x3337) (not (= x2919 x3482)) (= x588 (x1970 0)) (= (< 0 (x2725 x974)) x3637) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2141) (= true x2444) (= 1914215 x336) (= (< 0 (x2725 x3482)) x65) (>= x2578 0) (= x2448 (x1970 4)) (= x2465 x2695) (= x588 x3303) (= false x3347) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x543 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x855 (x1970 68))) (and (= x798 x1901) (and (<= x2839 127) (> x233 x1788) (= (+ x1929 x2294) x520) (= x258 x3401) (= (x2741 x1963) x1301) (= x1828 (x121 x1522)) (not (< x233 x152)) (= x1522 (x3006 64 x2448 3)) (= (+ 32 x2916) x1351) (= (x2725 x2695) x278) (= x1963 x1901) (= x773 (x52 1 x1828)) (= x2739 false) (= (+ x2701 4) x2916) (= (= x1647 0) x506) (> x233 x3595) (= (+ 4 x247) x2056) (= false x639) (= (+ 31 x2916) x1788) (= (div x1828 2) x2832) (= x1768 x798) (= (* 32 x2572) x2271) (= (x2544 x2056) x1929) (not (< x233 x520)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x99) (= 1 x99)) (= x938 (x2544 x2916)) (= (+ x2056 31) x3595) (= x99 (x3498 (- x773 (mod (ite (< x1647 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1647 (ite (< 0 x773) x2832 (x52 127 x2832))) (= x2572 (div (+ 31 x1647) 32)) (<= x938 18446744073709551615) (>= x278 1) (= 1914215 x14) (= (+ x2056 32) x2294) (= (x1600 x2695) x2481) (= x2481 x2405) (<= x2839 127) (= x692 x12) (= (+ x938 x1351) x152) (>= 18446744073709551615 x1929) (= x2245 (+ 160 x2271))))) (and (=> (and (not x506) (= (> x1647 31) x3485)) (and (=> (and x3485 (and (= (+ x3301 1) x2936) (= x1441 (x3360 x3301)) (= (+ x1647 160) x988) (= x3429 (> x988 192)) (= x3301 (x1836 32 x1522)))) (and (=> (not x3429) x1406) (=> x3429 x343))) (=> (and (not x3485) (and (= x2683 (x121 x1522)) (= (div x2683 256) x37) (= x723 (* 256 x37)))) x2302))) (=> x506 x2302)))))
(assert (= x1076 (x2476 (x3006 x1076 x3627 x677))))
(assert (= (x2476 (x3006 64 x3248 36)) 64))
(assert (=> (<= x1957 10000) (= 0 (x1863 x1957))))
(assert (x2052 x3180))
(assert (not (x3300 (x3006 64 x1521 12))))
(assert (= (and x2686 x584) x117))
(assert (=> (>= 10000 x2229) (= (x1863 x2229) 0)))
(assert (not (x3300 (x1836 x1076 x1240))))
(assert (x24 x1708))
(assert (= (x1863 35477284059277649309253622239531857712935939630608236286772267603529442882419) 0))
(assert (= (and x2424 x971) x20))
(assert (= (=> (= (= x1323 0) x2360) (and (=> (and (and (= x84 (= x1819 255)) (= x2428 x3343) (= x2723 x1819) (<= x1819 255)) (not x2360)) (and (=> (and (not x84) (and (= false x1418) (= x2322 32) (= x1151 (x52 255 x693)) (= (x52 255 x693) x3023) (= x693 (+ 1 x1819)) (= x1368 x3343) (= x3391 (x529 x1759)) (= x1759 (x3006 64 x1819 36)) (= x3522 1) (= false x3137))) x42) (=> (and (and (= x672 36) (= true x1637) (= false x180)) x84) x1625))) (=> (and x2360 (and (= x792 false) (= true x315) (= x1734 x672))) x1625))) x883))
(assert (x2052 x1704))
(assert (= (x61 x3457 x981 x1498 x1757) (x1863 (x61 x3457 x981 x1498 x1757))))
(assert (=> (<= x1415 10000) (= (x1863 x1415) 0)))
(assert (= (x1938 (x1836 x3457 x1335)) x1335))
(assert (= (x1863 486791245) 0))
(assert (x24 x3455))
(assert (x2052 x864))
(assert (= (and (not x1710) x3140) x435))
(assert (= (and (not x293) x3270) x3602))
(assert (= (and x2153 x2518) x1304))
(assert (x2052 x1814))
(assert (= x585 (=> (and (= true x1870) (= x3461 false) (= x3329 36)) x1170)))
(assert (< (x3006 64 x3524 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x875 (and x748 (not x833))))
(assert (x2052 x3490))
(assert (= 64 (x2476 (x3006 64 x2140 100))))
(assert (< 10000 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)))
(assert (=> (>= 10000 x2512) (= 0 (x1863 x2512))))
(assert (x2052 x3237))
(assert (= (x1863 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) (x3579 x2989 x366 x3118 x1610 x2557 x1089)))
(assert (= (x1938 (x3006 64 x525 2)) x525))
(assert (=> (<= x1040 10000) (= (x1863 x1040) 0)))
(assert (= x1980 (=> (= x1177 (not (< 32 x3383))) (and x1829 x1177))))
(assert (x2052 x2717))
(assert (x1834 x984))
(assert (x2052 x3279))
(assert (x2052 x998))
(assert (x2052 x3610))
(assert (x2052 x3273))
(assert (= x625 (and x309 x3357)))
(assert (x2052 x1697))
(assert (= 64 (x2476 (x3006 64 x1755 10))))
(assert (=> (<= x1757 10000) (= (x1863 x1757) 0)))
(assert (x2052 x1924))
(assert (= (=> (and (= (x3498 (- x2137 x1028)) x2989) (= (x3002 (+ x3599 x1028)) x1225) (= (x3002 (+ x3599 x1028)) x602) (= x2039 (x3498 (- x2989 32))) (= x2137 (x3002 (+ 32 x1225))) (= x1302 (>= 224 x2039))) (and (=> (and (= (x1656 x1091) x2401) (= (ite (= x2039 0) x2338 (ite (>= 32 x2039) x2897 (ite (<= x2039 64) x2669 (ite (<= x2039 96) x2298 (ite (<= x2039 128) x915 (ite (<= x2039 160) x3139 (ite (>= 192 x2039) x3068 (ite (>= 224 x2039) x2614 x1377)))))))) x215) (= (x3002 (+ x1028 32)) x2903) (= (x3002 (+ x1028 32)) x3067) (= x3018 (x3002 (+ x1028 32))) (= x1839 (x1656 x2601)) (= (x3002 (+ 128 x1028)) x999) (= x1514 (x3002 (+ x1028 96))) (= x1831 (x1656 x724)) (= x3642 (x1656 x1028)) (= x751 (x1656 x1606)) (= x1747 (x1656 x3018)) (= (x3002 (+ x1028 32)) x1620) (= x915 (x1539 x2039 x1318 x1075 x2401 x2804)) (= x2614 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)) (= (x1656 x2903) x3041) (= (x1836 x2039 x2946) x2897) (= x964 (x3002 (+ x1028 192))) (= (x3002 (+ x1028 64)) x501) (= x707 (x3002 (+ x1028 32))) (= (x1656 x1514) x2804) (= (x3002 (+ x1028 96)) x1606) (= x2500 (x1656 x1851)) (= x489 (x1656 x3273)) (= x1532 (x1656 x2081)) (= x1389 (x1656 x619)) (= (x3002 (+ 160 x1028)) x1851) (= x606 (x3002 (+ 32 x1028))) (= (x3002 (+ x1028 128)) x2081) (= x724 (x3002 (+ x1028 128))) (= (x1656 x3512) x2051) (= (x1656 x3548) x963) (= x1761 (x1656 x1028)) (= x2298 (x61 x2039 x2492 x2427 x3253)) (= x3558 (x1656 x999)) (= x2669 (x3006 x2039 x630 x3041)) (= (>= 224 x2989) x2154) (= x2492 (x1656 x1028)) (= (x1656 x1620) x3545) (= (x3002 (+ x1028 64)) x2601) (= x2946 (x1656 x1028)) (= x2791 (x1656 x964)) (= x3139 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)) (= x1120 (x1656 x1028)) (= (x1656 x707) x3022) (= x1318 (x1656 x1028)) (= x1091 (x3002 (+ 64 x1028))) (= x3273 (x3002 (+ 160 x1028))) (= (x40 0) x2338) (= x3068 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500)) (= (x3002 (+ x1028 96)) x3512) (= (x1656 x3067) x2427) (= (x3002 (+ x1028 96)) x619) (= x2523 (x1656 x2363)) (= x3548 (x3002 (+ x1028 64))) (= (x3002 (+ 64 x1028)) x2363) (= (x1656 x606) x1075) (= x630 (x1656 x1028)) (= (x1656 x501) x3253)) (and (=> (and (= x2944 (x1656 x3404)) (= (x3002 (+ x1028 32)) x1248) (= x1597 (x1656 x9)) (= (x1539 x2989 x2743 x2944 x674 x2050) x189) (= (x1656 x3294) x962) (= x3088 (x1836 x2989 x857)) (= x1234 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) (= (x1656 x1028) x705) (= x674 (x1656 x2239)) (= (x3222 x2245) x1571) (= x1610 (x1656 x1136)) (= x2482 (x3002 (+ x1028 160))) (= (x1656 x1028) x2743) (= (x1656 x1157) x2557) (= x2050 (x1656 x1235)) (= x1846 (x61 x2989 x221 x2177 x715)) (= x1676 (x3002 (+ x1028 96))) (= (x1656 x2345) x893) (= (x3002 (+ 96 x1028)) x1157) (= (x1656 x1028) x366) (= x1136 (x3002 (+ 64 x1028))) (= x28 (< 0 x1571)) (= (x3002 (+ x1028 32)) x125) (= (x3002 (+ 64 x1028)) x2862) (= (x3006 x2989 x705 x2377) x62) (= (x3002 (+ x1028 96)) x1601) (= x2377 (x1656 x1248)) (= x3428 (x40 0)) (= (x3006 64 x855 (ite (= 0 x2989) x3428 (ite (<= x2989 32) x3088 (ite (>= 64 x2989) x62 (ite (>= 96 x2989) x1846 (ite (<= x2989 128) x189 (ite (>= 160 x2989) x3434 (ite (<= x2989 192) x1234 (ite (<= x2989 224) x2661 x2885))))))))) x1013) (= (x3002 (+ 32 x1028)) x960) (= x1235 (x3002 (+ x1028 96))) (= x2239 (x3002 (+ 64 x1028))) (= (x3002 (+ x1028 32)) x2018) (= (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449) x2661) (= (x3002 (+ 160 x1028)) x784) (= x2993 (x3002 (+ 32 x1028))) (= x1089 (x1656 x2351)) (= x715 (x1656 x2862)) (= (x3579 x2989 x366 x3118 x1610 x2557 x1089) x3434) (= x449 (x1656 x2367)) (= x924 (x1656 x3559)) (= (x3002 (+ x1028 64)) x2374) (= (x1656 x2648) x3118) (= x2263 (x1656 x960)) (= (x3002 (+ 64 x1028)) x3559) (= x857 (x1656 x1028)) (= x1438 (x1656 x1601)) (= x3294 (x3002 (+ 128 x1028))) (= (x3002 (+ 128 x1028)) x2345) (= (x3002 (+ x1028 32)) x3404) (= (x3002 (+ x2482 32)) x283) (= (x3002 (+ x1028 128)) x2351) (= (x1656 x2018) x2177) (= (x3002 (+ x1028 32)) x2648) (= x1338 (x1656 x784)) (= x410 (x1656 x1676)) (= x2396 (x1656 x1028)) (= (x3002 (+ x1028 192)) x2367) (= x221 (x1656 x1028)) (= x2187 (x1656 x2374)) (= (x3002 (+ x1028 160)) x9) (= x2388 (x1656 x1028)) (= x3450 (x1656 x125))) (and (=> (and (and (= x970 (x1855 x2017)) (= x2203 (< 32 x1571))) x28) (and (=> (and (and (= (x3002 (+ 32 x2017)) x2899) (= x2577 (> x1571 64)) (= (x3002 (+ x283 32)) x580) (= (x762 x2899) x3477)) x2203) (and (=> (not x2577) x558) (=> (and (and (= (x3002 (+ x2017 64)) x1181) (= x3538 (x2349 x1181)) (= (< 96 x1571) x681) (= x1219 (x3002 (+ 64 x283)))) x2577) (and (=> x681 x3321) (=> (not x681) x558))))) (=> (not x2203) x558))) (=> (not x28) x558))) x2154)) x1302)) x718))
(assert (=> (>= 10000 x809) (= (x1863 x809) 0)))
(assert (< 10000 (x1539 x3457 x666 x829 x3354 x3351)))
(assert (x24 x3098))
(assert (x2052 x1053))
(assert (= (and x1731 (not x2383)) x670))
(assert (= x3377 (or x1304 x1848)))
(assert (x2052 x1865))
(assert (= (and (not x2134) x1857) x3214))
(assert (x2052 x3174))
(assert (< (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2533 x3462) x2087))
(assert (= (x1141 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)) x2791))
(assert (= (x1504 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) x1452))
(assert (x2052 x2701))
(assert (= 0 (x1863 2001815235)))
(assert (x2052 x2983))
(assert (x1834 x3098))
(assert (x2052 x1349))
(assert (= x3641 (and x2301 (not x2197))))
(assert (x2052 x1939))
(assert (= (and x1623 (not x216)) x3363))
(assert (< (x1539 x1740 x60 x531 x2047 x3203) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x434 (and x3417 (not x689))))
(assert (x2052 x3148))
(assert (x2052 x3200))
(assert (= (x1213 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x2687))
(assert (= x748 (or x2999 x340)))
(assert (x2052 x2175))
(assert (= (x1836 x1740 x2698) (x1863 (x1836 x1740 x2698))))
(assert (x24 x2070))
(assert (x2052 x2023))
(assert (= x714 (=> (and (= x3484 x3592) (= x2356 x2126) (= x2365 x731) (= x3001 x2407) (= x3174 x978) (= x1940 x2178) (= x2348 x2248) (= x1007 x1155) (= x1497 x2981) (= x2795 x176) (= x1086 x1743) (= x2208 x1175) (= x3403 x2306) (= x1736 x2312)) x3220)))
(assert (= (x450 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)) x1831))
(assert (= (x3006 64 x945 36) (x1863 (x3006 64 x945 36))))
(assert (not (x3300 (x61 x3457 x981 x1498 x1757))))
(assert (x2052 x269))
(assert (not (x3300 (x1836 x1740 x2698))))
(assert (= x1171 (or x3345 x118)))
(assert (x2052 x2791))
(assert (x1834 x1261))
(assert (= (and x1911 x2714) x991))
(assert (x2052 x2723))
(assert (=> (<= x1049 10000) (= (x1863 x1049) 0)))
(assert (not (x3300 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111))))
(assert (= (or x1993 x1934) x2866))
(assert (= x471 (x1938 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (x2052 x1749))
(assert (x2052 x1839))
(assert (< (x3006 64 x2184 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x1859))
(assert (x2052 x2711))
(assert (not (x3300 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x855 (ite (= x2989 0) x3428 (ite (<= x2989 32) x3088 (ite (<= x2989 64) x62 (ite (<= x2989 96) x1846 (ite (<= x2989 128) x189 (ite (>= 160 x2989) x3434 (ite (<= x2989 192) x1234 (ite (>= 224 x2989) x2661 x2885)))))))))))
(assert (= (=> (and (= x166 x3325) (= x758 x123) (= x3236 x1443) (= x2516 x1489) (= x3555 x2502) (= x3633 x318) (= x2600 x1398) (= x2674 x608) (= x3427 x356) (= x1589 x3086) (= x2850 x1645) (= x3288 x2145) (= x3200 x1320) (= x2127 x1098) (= x3210 x3546) (= x3444 x620)) x2568) x2913))
(assert (= x650 (x450 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (= (x1863 (x3006 64 x1260 100)) (x3006 64 x1260 100)))
(assert (=> (<= x1498 10000) (= (x1863 x1498) 0)))
(assert (= x1120 (x1938 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (> (x3006 64 x2631 36) 10000))
(assert (< (x61 x2402 x3197 x1984 x2988) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1747) (= 0 (x1863 x1747))))
(assert (x2052 x1443))
(assert (x2052 x45))
(assert (< 10000 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)))
(assert (x850 x721))
(assert (= x2189 (=> (and (= x2670 x1428) (= x3575 x653) (= x3596 x3274) (= x1604 x2647) (= x1704 x2109) (= x645 0) (= x1100 x1060) (= x1290 x2376) (= x414 x2889) (= x1445 x1976) (= x998 x157) (= x421 x1672) (= x347 x2851) (= x352 x329) (= x1956 1) (= x654 x1333)) x511)))
(assert (= (x1213 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) x243))
(assert (= x3545 (x175 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (=> (<= x1532 10000) (= 0 (x1863 x1532))))
(assert (x2052 x2743))
(assert (x2052 x995))
(assert (=> (>= 10000 x1318) (= (x1863 x1318) 0)))
(assert (x2052 x660))
(assert (=> (>= 10000 x1260) (= (x1863 x1260) 0)))
(assert (x2052 x816))
(assert (x3300 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (x2052 x2842))
(assert (x2052 x2986))
(assert (= 0 (x1863 1914215)))
(assert (x2052 x2160))
(assert (= (x450 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337)) x2435))
(assert (x2052 x1521))
(assert (x2052 x478))
(assert (x2052 x648))
(assert (x2052 x1648))
(assert (< (x1539 x2039 x1318 x1075 x2401 x2804) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3300 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386))))
(assert (x3300 3521034783))
(assert (x2052 x906))
(assert (not (x3300 (x3006 64 x2184 6))))
(assert (x2052 x2889))
(assert (= (x2476 (x3006 x3457 x3582 x900)) x3457))
(assert (= (=> (and (or x3128 (not x3128)) (= x3128 (= x2415 0))) x2901) x165))
(assert (=> (>= 10000 x3524) (= (x1863 x3524) 0)))
(assert (x2052 x25))
(assert (= x1929 (x2476 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111))))
(assert (= (and x2019 (not x219)) x1795))
(assert (= (x1504 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) x1172))
(assert (= x742 (x1938 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622))))
(assert (x2052 x2822))
(assert (x2052 x1320))
(assert (not (x3300 (x1836 x3322 x3349))))
(assert (=> (>= 10000 x1430) (= (x1863 x1430) 0)))
(assert (x2052 x1511))
(assert (= (x1504 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) x1612))
(assert (= (x2476 (x1836 x2989 x857)) x2989))
(assert (= x1245 (and (not x701) x2280)))
(assert (x2052 x2370))
(assert (< 10000 (x3006 64 x1274 36)))
(assert (x2052 x3190))
(assert (x2052 x351))
(assert (= (and (not x3357) x309) x1062))
(assert (x2052 x2245))
(assert (= x2039 (x2476 (x1836 x2039 x2946))))
(assert (= x2395 (=> (and (= true x2014) (= 0 x2461) (= x75 false)) x2805)))
(assert (= (x1863 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622)) (x2658 x769 x742 x549 x1684 x2564 x2640 x3622)))
(assert (=> (<= x995 10000) (= (x1863 x995) 0)))
(assert (x2052 x2348))
(assert (x2052 x3109))
(assert (x2052 x1956))
(assert (not (x3300 (x1539 x3511 x3209 x2059 x2223 x2230))))
(assert (= x2613 (and (not x899) x808)))
(assert (x3300 4294967295))
(assert (x2052 x2762))
(assert (=> (>= 10000 x3490) (= (x1863 x3490) 0)))
(assert (= x307 (and x3133 x28)))
(assert (x2052 x728))
(assert (= x46 (x1875 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111))))
(assert (x24 x984))
(assert (=> (<= x976 10000) (= (x1863 x976) 0)))
(assert (x2052 x3303))
(assert (= x2468 (and x2267 x2595)))
(assert (=> (>= 10000 x1087) (= (x1863 x1087) 0)))
(assert (x2052 x1747))
(assert (x2052 x978))
(assert (= (x1504 (x61 x2402 x3197 x1984 x2988)) x2988))
(assert (x2052 x3427))
(assert (x2052 x2895))
(assert (< 10000 (x1539 x3511 x3209 x2059 x2223 x2230)))
(assert (< 10000 (x1539 x2039 x1318 x1075 x2401 x2804)))
(assert (= (x1539 x2989 x2743 x2944 x674 x2050) (x1863 (x1539 x2989 x2743 x2944 x674 x2050))))
(assert (x2052 x2018))
(assert (= (=> (= (= 0 x218) x1253) (and (=> (and x1253 (and (= (x2873 x2423) x3396) (>= 255 x3396) (= (< 0 x3396) x1547) (= (x3006 64 x745 10) x2423))) (and (=> (and (and (= x3449 true) (= x2645 4) (= false x2774)) (not x1547)) x3163) (=> (and x1547 (and (and (= 128 x3083) (>= 1461501637330902918203684832716283019655932542975 x2390) (= (= x2390 x974) x1312)) (or (and x1312 (and (or (and (not x673) (and (= x1881 true) (= x2099 x2521) (= x1904 x1713) (= x3342 x930) (= x1768 x1290) (= 0 x1904) (= x2532 x1976) (= x3443 2) (= x2690 0) (= x1060 x155) (= x347 x2834) (= x2893 x728) (= x1763 x803) (= x589 x1428) (= x2390 x2889) (= x1672 x838) (= x1513 false) (= x1344 x3496) (= x3278 36) (= x2926 x1893))) (and (and (= x1976 x2532) (>= x91 0) (= x1344 x3496) (= x1060 x155) (= x589 x1428) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x91) (= x803 x1763) (= x2834 x347) (= x728 x2893) (= x1768 x1290) (= x3278 32) (= x91 x686) (= false x207) (= x2099 x2521) (= x3342 x930) (= x1672 x838) (= x3398 false) (= x1893 x2926) (= x2889 x2390) (= 1 x2690) (= x416 x1713)) x673)) (and (= x110 x1617) (= 36 x3564) (= false x537) (= x1364 310283853) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000 x589)) x2770) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2830) (= x3399 (<= x91 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= 127 x844) (= x717 (x2725 x974)) (>= x717 1) (= false x2278) (= (and x2770 x3399) x673) (>= 127 x844) (= x589 x1617) (= (* x589 1000000000) x91)))) (and (not x1312) (and (= x2834 x347) (= x2521 x2099) (= x1893 x2926) (= x739 x589) (= x115 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x3496 x1344) (<= x1129 127) (= x1063 false) (= x2977 36) (= x589 x1428) (= x155 x1060) (<= x1129 127) (= x930 x3342) (= x2889 x2390) (<= x2390 1461501637330902918203684832716283019655932542975) (= x803 x1763) (= x1672 x838) (= x728 x2893) (= 1 x2690) (= x1713 x416) (= x1768 x1290) (= x306 (x2725 x2919)) (>= x306 1) (= false x467) (= false x2225) (= x2919 x2390) (= x1976 x2532) (<= 1 x2390) (= x3278 32) (= x88 false) (= x1981 310283853)))))) x2387))) (=> (and (not x1253) (and (= false x222) (= x3004 true) (= 4 x2645))) x3163))) x2747))
(assert (= x1149 (x1504 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (x2052 x2503))
(assert (< (x3006 64 x138 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x1437))
(assert (< 10000 (x1539 x1076 x1363 x1322 x96 x2434)))
(assert (= (x1863 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)) (x3579 x2039 x1761 x3022 x2523 x2051 x1831)))
(assert (x2052 x479))
(assert (not (x3300 (x1539 x2402 x1309 x2463 x116 x995))))
(assert (= x1416 (and x307 (not x2203))))
(assert (x2052 x2736))
(assert (x2052 x2988))
(assert (not (x3300 (x3006 64 x1626 6))))
(assert (=> (<= x3162 10000) (= 0 (x1863 x3162))))
(assert (x2052 x717))
(assert (x2052 x1457))
(assert (x2052 x653))
(assert (x2052 x588))
(assert (x24 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x2052 x1827))
(assert (x2052 x1778))
(assert (x2052 x408))
(assert (= 103 (x1938 (x1836 32 103))))
(assert (= (x1863 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (= (x3006 64 x1877 12) (x1863 (x3006 64 x1877 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)))
(assert (< (x3579 x2402 x2755 x1959 x2715 x1067 x1336) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1863 (x3006 64 x2140 100)) (x3006 64 x2140 100)))
(assert (=> (<= x1877 10000) (= (x1863 x1877) 0)))
(assert (x2052 x1951))
(assert (x2052 x3241))
(assert (= (x1504 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)) x740))
(assert (= (or (and (not x2267) x2595) (and x2026 (not x3208)) (and x1611 (not x916)) (and x3641 (not x1744))) x1842))
(assert (= (and (not x3019) x950) x2013))
(assert (= (x1863 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060)) (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060)))
(assert (= x1598 (x1938 (x61 x3511 x1598 x1801 x552))))
(assert (x2052 x110))
(assert (< (x3006 x3457 x3582 x900) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x953 (=> (= (= 0 x1956) x897) (and (=> (and x897 (and (= x202 false) (= x3329 x645) (= x2678 true))) x1170) (=> (and (and (= x3403 x414) (= x2851 x3001) (= x3596 x1743) (= x978 x653) (= x2981 x2376) (= x2126 x2670) (= x1704 x731) (= x3484 x1445) (= x2795 x1100) (= x998 x1175) (= x1155 x421) (= x1736 x329) (= x2248 x1604) (= x654 x2178)) (not x897)) x3220)))))
(assert (x2052 x1538))
(assert (= x807 (x1938 (x3006 x1740 x807 x2973))))
(assert (x3300 2001815235))
(assert (x24 x3073))
(assert (= (or x2597 x2871 x847) x2686))
(assert (= (x175 (x3006 x3511 x331 x617)) x617))
(assert (x2052 x656))
(assert (= x1859 (x450 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547))))
(assert (x2052 x1173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 x769 x696)))
(assert (=> (>= 10000 x903) (= (x1863 x903) 0)))
(assert (= x541 (x1875 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005))))
(assert (x2052 x3538))
(assert (= (x175 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x1463))
(assert (x2052 x3168))
(assert (x2052 x1889))
(assert (= (x1504 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x3490))
(assert (x2052 x1708))
(assert (= x11 (=> (and (= x3329 36) (= false x164) (= x684 true)) x1170)))
(assert (not (x3300 (x3006 64 x2140 100))))
(assert (= (=> (and (= x3255 true) (= x672 36) (= x1068 false)) x1625) x1374))
(assert (= (x1539 x769 x1461 x734 x2730 x2983) (x1863 (x1539 x769 x1461 x734 x2730 x2983))))
(assert (x2052 x2834))
(assert (=> (<= x893 10000) (= 0 (x1863 x893))))
(assert (=> (<= x1577 10000) (= 0 (x1863 x1577))))
(assert (= x1761 (x1938 (x3579 x2039 x1761 x3022 x2523 x2051 x1831))))
(assert (x2052 x1223))
(assert (= 0 (x1863 35477284059277649309253622239531857712935939529143554018288893216769000107873)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x745 10)))
(assert (= x808 (and x2053 x3318)))
(assert (x2052 x2632))
(assert (= x131 (and x3602 (not x2158))))
(assert (x2052 x970))
(assert (= x1414 (x1504 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (= x769 (x2476 (x1836 x769 x696))))
(assert (= (and x151 (not x2275)) x3573))
(assert (= (and (not x2399) x2442) x2324))
(assert (x2052 x3263))
(assert (= (x175 (x3006 x769 x610 x3196)) x3196))
(assert (=> (<= x2120 10000) (= 0 (x1863 x2120))))
(assert (x2052 x2037))
(assert (= x2569 (and x1343 (not x120))))
(assert (= x3225 (and x1845 x763)))
(assert (= x3607 (x1938 (x3006 64 x3607 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x3441 12)))
(assert (x2052 x1785))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 32 x1522)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x3607 2)))
(assert (=> (<= x139 10000) (= (x1863 x139) 0)))
(assert (= x1791 (=> (and (= true x2034) (= x2095 false) (= 36 x672)) x1625)))
(assert (=> (>= 10000 x1322) (= (x1863 x1322) 0)))
(assert (not (x3300 (x1539 x1929 x623 x477 x2229 x716))))
(assert (x24 x879))
(assert (= x706 (and x1913 x3271)))
(assert (x2052 x1419))
(assert (= x3111 (x1141 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111))))
(assert (= x2767 (and x2555 x3335)))
(assert (x2052 x1943))
(assert (x2052 x761))
(assert (= x3322 (x2476 (x3006 x3322 x1657 x1040))))
(assert (x2052 x1621))
(assert (= x2060 (x1213 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060))))
(assert (x2052 x2546))
(assert (=> (>= 10000 x1633) (= 0 (x1863 x1633))))
(assert (= (x2476 (x3006 64 x809 11)) 64))
(assert (x2052 x3453))
(assert (x2052 x288))
(assert (< (x3006 x769 x610 x3196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2463) (= 0 (x1863 x2463))))
(assert (x2052 x731))
(assert (x24 x2099))
(assert (= (x1863 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (x2052 x2439))
(assert (x2052 x1492))
(assert (x2052 x448))
(assert (=> (<= x1819 10000) (= (x1863 x1819) 0)))
(assert (x2052 x2310))
(assert (= x1479 (and x1795 (not x3166))))
(assert (= (x450 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) x1212))
(assert (= (x175 (x1539 x1076 x1363 x1322 x96 x2434)) x1322))
(assert (= x847 (and x2320 x3537)))
(assert (=> (>= 10000 x1898) (= (x1863 x1898) 0)))
(assert (x2052 x1313))
(assert (x2052 x1567))
(assert (=> (<= x3209 10000) (= (x1863 x3209) 0)))
(assert (x24 x2890))
(assert (= (and (not x2964) x1048) x2553))
(assert (> (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650) 10000))
(assert (< (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2384))
(assert (x24 x856))
(assert (= (=> (and (= (x3002 (+ 96 x3375)) x3394) (= x2048 (x3002 (+ x2017 96))) (= (x3499 x2048) x204) (= x2321 (not (> x2636 128)))) (and x56 x2321)) x872))
(assert (= (and x3571 x561) x245))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3579 x2989 x366 x3118 x1610 x2557 x1089)))
(assert (x24 x2021))
(assert (= (and (not x146) x2224) x2019))
(assert (x2052 x1489))
(assert (=> (>= 10000 x2060) (= (x1863 x2060) 0)))
(assert (x2052 x796))
(assert (x2052 x3022))
(assert (x24 x3148))
(assert (x2052 x1641))
(assert (x2052 x184))
(assert (x2052 x3450))
(assert (= (and x2270 (not x1691)) x1001))
(assert (= (x1863 (x61 x2402 x3197 x1984 x2988)) (x61 x2402 x3197 x1984 x2988)))
(assert (= (x1938 (x3006 x2039 x630 x3041)) x630))
(assert (x2052 x1194))
(assert (= x2402 (x2476 (x3579 x2402 x2755 x1959 x2715 x1067 x1336))))
(assert (x2052 x162))
(assert (x2052 x589))
(assert (= (x1504 (x61 x2039 x2492 x2427 x3253)) x3253))
(assert (= (x1875 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) x2574))
(assert (= (x3006 64 x2631 36) (x1863 (x3006 64 x2631 36))))
(assert (x2052 x3285))
(assert (x2052 x1724))
(assert (x2052 x2746))
(assert (=> (<= x583 10000) (= 0 (x1863 x583))))
(assert (x2052 x1900))
(assert (x850 x1662))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1539 x2402 x1309 x2463 x116 x995)))
(assert (x2052 x477))
(assert (x2052 x264))
(assert (= (=> (and (= (x52 1 x3342) x1967) (= x178 (x3498 (- x1967 (mod (ite (> 32 x1613) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (> x1967 0) x1878 (x52 127 x1878)) x1613) (= (- x1864 132) x787) (= x49 (> x178 0)) (= x1878 (div x3342 2))) (and (=> (not x49) x3467) (=> (and (and (= x1720 (+ x1864 32)) (= x1670 (= 0 x1675)) (= x1675 (x52 1 x3342))) x49) (and (=> (and (and (or (= x167 0) (= x167 32)) (= (* (ite (not (= 0 x1613)) 1 0) 32) x167) (= (+ x167 x1720) x3149) (= x2192 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3342))) x1670) x2646) (=> (and (and (= x3479 (x1836 32 104)) (= x1710 (> x1613 0))) (not x1670)) (and (=> x1710 x2659) (=> (and (= x761 0) (not x1710)) x394))))))) x2665))
(assert (x2052 x331))
(assert (= 0 (x1863 37212044363551391237827125972600881127463135526663889129579209803314629705728)))
(assert (< (x3006 64 x2448 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1062 x625) x163))
(assert (= 0 (x1863 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (x2052 x2631))
(assert (x2052 x3442))
(assert (x2052 x1235))
(assert (= x439 (or (and x3238 x1487) (and x2238 x1244) (and x2071 x1242))))
(assert (= x3252 (=> (and (= (+ x1289 1) x44) (= x3350 32) (= x652 1) (= x1142 false) (= 1 x2186) (= x927 x1366) (= (+ x44 1) x223) (= false x956)) x2168)))
(assert (x1834 x693))
(assert (x2052 x2401))
(assert (x2052 x1953))
(assert (x2052 x2047))
(assert (= (x1875 (x1539 x1076 x1363 x1322 x96 x2434)) x2434))
(assert (x1834 x3489))
(assert (< 10000 (x3006 64 x1260 100)))
(assert (= x1799 (and x2380 (not x1257))))
(assert (x2052 x1415))
(assert (x2052 x334))
(assert (x2052 x169))
(assert (= x3387 (or x3612 x401)))
(assert (x2052 x2226))
(assert (x2052 x1745))
(assert (x24 x2846))
(assert (= (x2476 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (<= x2402 32) x517 (ite (>= 64 x2402) x1698 (ite (<= x2402 96) x2638 (ite (>= 128 x2402) x1308 (ite (<= x2402 160) x1802 (ite (<= x2402 192) x1464 (ite (<= x2402 224) x3084 x1898)))))))))) 64))
(assert (= x3322 (x2476 (x1836 x3322 x3349))))
(assert (= x1879 (and x662 (not x1872))))
(assert (x2052 x1597))
(assert (x2052 x2351))
(assert (=> (>= 10000 x852) (= (x1863 x852) 0)))
(assert (=> (<= x3379 10000) (= (x1863 x3379) 0)))
(assert (x2052 x2931))
(assert (= x3474 (x175 (x3579 x3457 x2662 x3474 x139 x485 x3277))))
(assert (= x3511 (x2476 (x61 x3511 x1598 x1801 x552))))
(assert (x2052 x2067))
(assert (x2052 x1229))
(assert (= (x450 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x375))
(assert (= (x1938 (x3006 64 x809 11)) x809))
(assert (= (x1938 (x3006 64 x1877 12)) x1877))
(assert (= x3562 (or x341 x2777)))
(assert (= x1957 (x175 (x61 x1929 x3026 x1957 x2054))))
(assert (=> (>= 10000 x1962) (= (x1863 x1962) 0)))
(assert (= (x1863 (x3006 x2039 x630 x3041)) (x3006 x2039 x630 x3041)))
(assert (x2052 x12))
(assert (= x2999 (or (and x2331 (not x2812)) x873)))
(assert (= (and x1257 x2380) x934))
(assert (x2052 x1265))
(assert (= x634 (and x1432 (not x2329))))
(assert (x2052 x3546))
(assert (x2052 x2173))
(assert (x2052 x2703))
(assert (= x700 (and x2976 (not x1955))))
(assert (= (or x3464 x895) x3116))
(assert (x3300 1341992515))
(assert (x2052 x3149))
(assert (= (x1938 (x1539 x2402 x1309 x2463 x116 x995)) x1309))
(assert (= (x61 x2989 x221 x2177 x715) (x1863 (x61 x2989 x221 x2177 x715))))
(assert (not (x3300 (x3006 64 x2530 0))))
(assert (x2052 x1444))
(assert (= (x1875 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)) x1389))
(assert (not (x3300 (x3006 64 x2631 36))))
(assert (x2052 x1762))
(assert (=> (>= 10000 x3183) (= (x1863 x3183) 0)))
(assert (=> (>= 10000 x1239) (= (x1863 x1239) 0)))
(assert (= (x1863 (x3006 64 x138 36)) (x3006 64 x138 36)))
(assert (< (x3006 64 x2140 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x9))
(assert (x2052 x3147))
(assert (= x966 (and x935 x817)))
(assert (= x4 (x1938 (x61 x3322 x4 x399 x1688))))
(assert (x2052 x1377))
(assert (x2052 x582))
(assert (= x1954 (x1875 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386))))
(assert (x2052 x1673))
(assert (x2052 x686))
(assert (x2052 x623))
(assert (= (or x2369 x670) x3612))
(assert (= x2404 x3158))
(assert (x2052 x2314))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x61 x3457 x981 x1498 x1757)))
(assert (= 0 (x1863 310283853)))
(assert (x2052 x3274))
(assert (= (x1863 (x3579 x769 x2979 x3379 x932 x1868 x1211)) (x3579 x769 x2979 x3379 x932 x1868 x1211)))
(assert (= x1862 (x1875 (x3579 x1076 x594 x2753 x1239 x1862 x842))))
(assert (x2169 x342))
(assert (x2052 x787))
(assert (= x2779 (and x982 (not x2292))))
(assert (x1834 x2384))
(assert (x2052 x1912))
(assert (x2052 x2377))
(assert (= x1087 (x450 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577))))
(assert (= (x1863 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (= 32 (x2476 (x1836 32 103))))
(assert (x24 x342))
(assert (=> (<= x2039 10000) (= 0 (x1863 x2039))))
(assert (=> (>= 10000 x1274) (= (x1863 x1274) 0)))
(assert (= (x1863 65535) 0))
(assert (x2052 x2137))
(assert (= (x2476 (x1836 32 x1522)) 32))
(assert (x2052 x484))
(assert (x2052 x1438))
(assert (x2052 x2109))
(assert (x1834 x1902))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x61 x2039 x2492 x2427 x3253)))
(assert (x1834 x1708))
(assert (x2052 x1050))
(assert (x2052 x1006))
(assert (= (and x446 (not x272)) x2928))
(assert (x24 x2357))
(assert (x2052 x1338))
(assert (x2052 x2989))
(assert (= x1 (and (not x2714) x1911)))
(assert (x1834 x2590))
(assert (x2052 x2688))
(assert (x2052 x1219))
(assert (= (or x291 (and (not x1453) x3387)) x2442))
(assert (=> (<= x3511 10000) (= (x1863 x3511) 0)))
(assert (= (x175 (x3579 x1740 x3242 x637 x1928 x904 x2624)) x637))
(assert (x2052 x3060))
(assert (= (and (not x3087) x59) x3318))
(assert (not (x3300 (x3006 64 x2695 1))))
(assert (x2052 x2126))
(assert (x1834 x879))
(assert (x2052 x862))
(assert (x3300 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x24 x1754))
(assert (= x769 (x2476 (x3579 x769 x2979 x3379 x932 x1868 x1211))))
(assert (= x2530 (x1938 (x3006 64 x2530 0))))
(assert (x2052 x692))
(assert (x2052 x1589))
(assert (= (and x2621 (not x2027)) x515))
(assert (=> (<= x2687 10000) (= (x1863 x2687) 0)))
(assert (x2052 x3441))
(assert (= 2 (x175 (x3006 64 x3248 2))))
(assert (=> (>= 10000 x1943) (= 0 (x1863 x1943))))
(assert (= (x1938 (x1836 x1740 x2698)) x2698))
(assert (x2052 x2350))
(assert (=> (>= 10000 x1598) (= 0 (x1863 x1598))))
(assert (x2052 x1439))
(assert (x2052 x2236))
(assert (= x418 (and x1799 x3410)))
(assert (= (=> (and (and (= (x783 128) x3077) (= x3571 (= x3077 x1929))) (or (and x3571 (and (= x780 (ite (> x876 0) 1 0)) (= (x783 128) x876))) (and (= (ite x3571 1 0) x780) (not x3571)))) x1635) x2302))
(assert (= x2564 (x1875 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622))))
(assert (= x3271 (and (not x3425) x813)))
(assert (x2052 x803))
(assert (x2052 x3267))
(assert (x2052 x1398))
(assert (= (x1504 (x61 x3511 x1598 x1801 x552)) x552))
(assert (= (x175 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) x1793))
(assert (= (x175 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) x852))
(assert (x2052 x2229))
(assert (< 10000 (x61 x3457 x981 x1498 x1757)))
(assert (= 0 (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (x2052 x2705))
(assert (= 100 (x175 (x3006 64 x1260 100))))
(assert (x2052 x3477))
(assert (x2052 x1408))
(assert (=> (<= x2662 10000) (= 0 (x1863 x2662))))
(assert (x2052 x3162))
(assert (= x54 (and (not x1913) x3271)))
(assert (= x1807 (and x2094 x1273)))
(assert (x2052 x1552))
(assert (x2052 x1967))
(assert (x2052 x139))
(assert (= (and x3208 x2026) x446))
(assert (x2052 x421))
(assert (x2052 x1894))
(assert (< 10000 (x3006 64 x1896 12)))
(assert (x2052 x3203))
(assert (x2052 x481))
(assert (< (x3006 64 x1896 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= 36 x3329) (= false x3032) (= true x3505)) x1170) x509))
(assert (x2052 x1940))
(assert (=> (<= x1389 10000) (= 0 (x1863 x1389))))
(assert (= x1625 (=> (and (= x1466 x206) (= x3522 0) (= x1368 x1466) (= x2322 x672) (= 2 x1012)) x42)))
(assert (= x1623 (and x682 x1727)))
(assert (> (x3006 x1740 x807 x2973) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x61 x1740 x1933 x2085 x2512)))
(assert (x2052 x2398))
(assert (= (and x3523 x1038) x311))
(assert (x2052 x3151))
(assert (< 10000 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)))
(assert (= x1148 (and (not x1197) x3223)))
(assert (= (x2476 (x61 x1740 x1933 x2085 x2512)) x1740))
(assert (x2052 x2345))
(assert (x2052 x723))
(assert (= (x175 (x61 x1740 x1933 x2085 x2512)) x2085))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x2120 (x1213 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x2099))
(assert (= (and x425 x1569) x3046))
(assert (< (x3006 x1076 x3627 x677) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2322))
(assert (= (x1863 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577)) (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577)))
(assert (x2052 x383))
(assert (=> (<= x2151 10000) (= 0 (x1863 x2151))))
(assert (= x1888 (=> (and (= x2099 x3546) (= x758 x1060) (= x3555 x728) (= x1344 x3086) (= x1098 x864) (= 0 x3444) (= x356 x1976) (= x1645 x2889) (= x3325 x1290) (= x803 x3200) (= x1380 2) (= x1428 x1398) (= 0 x667) (= x3236 x347) (= x3288 x1672) (= x2926 x2516) (= x3342 x608) (= x667 x3633)) x2913)))
(assert (= (=> (= (not (> x1390 32)) x2780) (and x2030 x2780)) x1371))
(assert (= (x2476 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) x2989))
(assert (=> (>= 10000 x1716) (= 0 (x1863 x1716))))
(assert (> (x61 x769 x2744 x2867 x2231) 10000))
(assert (= (x2476 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)) x2039))
(assert (x2052 x2973))
(assert (= 64 (x2476 (x3006 64 x3248 6))))
(assert (x2052 x1653))
(assert (=> (>= 10000 x617) (= 0 (x1863 x617))))
(assert (x2052 x236))
(assert (not (x3300 (x3006 64 x3607 2))))
(assert (x2052 x2293))
(assert (not (x3300 (x3006 x1740 x807 x2973))))
(assert (< (x3006 64 x2695 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1172 10000) (= (x1863 x1172) 0)))
(assert (x3300 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (x2052 x962))
(assert (x2052 x3642))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x3248 6)))
(assert (=> (<= x3627 10000) (= 0 (x1863 x3627))))
(assert (x2052 x627))
(assert (= 11 (x175 (x3006 64 x809 11))))
(assert (x2052 x347))
(assert (x2052 x2974))
(assert (not (x3300 (x1539 x3457 x666 x829 x3354 x3351))))
(assert (x2052 x2103))
(assert (= 64 (x2476 (x3006 64 x138 36))))
(assert (x2052 x2978))
(assert (x2052 x1530))
(assert (x2052 x924))
(assert (not (x3300 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383))))
(assert (x2052 x3072))
(assert (=> (>= 10000 x3569) (= (x1863 x3569) 0)))
(assert (x2052 x3582))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= x2730 (x1504 (x1539 x769 x1461 x734 x2730 x2983))))
(assert (x2052 x3394))
(assert (= (x3006 64 x2530 0) (x1863 (x3006 64 x2530 0))))
(assert (x2052 x3489))
(assert (= (x1875 (x3579 x769 x2979 x3379 x932 x1868 x1211)) x1868))
(assert (x2052 x2801))
(assert (= 0 (x1863 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x2052 x3391))
(assert (x2052 x1491))
(assert (x2052 x166))
(assert (x2052 x3089))
(assert (x2052 x1040))
(assert (= (x2476 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060)) x3322))
(assert (x2052 x1216))
(assert (x2052 x1270))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 32 103)))
(assert (x2052 x3396))
(assert (x2052 x1355))
(assert (= (x1863 (x3006 64 x323 6)) (x3006 64 x323 6)))
(assert (x2052 x2530))
(assert (x1834 x2890))
(assert (< (x3006 x3511 x331 x617) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1230 (and (not x3040) x1849)))
(assert (x2052 x3253))
(assert (=> (>= 10000 x2743) (= (x1863 x2743) 0)))
(assert (x2052 x793))
(assert (= (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151) (x1863 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x2098))
(assert (= (x3006 64 x3248 6) (x1863 (x3006 64 x3248 6))))
(assert (x1834 x2846))
(assert (x2052 x457))
(assert (= x3511 (x2476 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383))))
(assert (= x2039 (x2476 (x61 x2039 x2492 x2427 x3253))))
(assert (= x769 (x2476 (x3006 x769 x610 x3196))))
(assert (x2052 x774))
(assert (x2052 x2396))
(assert (x2052 x3059))
(assert (x2052 x60))
(assert (x2052 x2662))
(assert (> (x1836 x1076 x1240) 10000))
(assert (x2052 x1957))
(assert (< (x3006 64 x2530 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x3420))
(assert (x2052 x3020))
(assert (x2052 x2048))
(assert (not (x3300 (x1539 x1076 x1363 x1322 x96 x2434))))
(assert (x2052 x855))
(assert (x1834 x85))
(assert (= x1017 (and x2152 x1008)))
(assert (= (and x2292 x982) x1655))
(assert (x2052 x275))
(assert (< 10000 (x3006 x1929 x2933 x2130)))
(assert (x2052 x3605))
(assert (= 36 (x175 (x3006 64 x945 36))))
(assert (= (and x1259 x1071) x2671))
(assert (= x284 (=> (and (= x3632 (>= 224 x1076)) (= (x3002 (+ 128 x69)) x408) (= x1076 (x3498 (- x408 128)))) (and (=> (and (= (x2486 160) x369) (= x2368 (x1836 x1076 x1240)) (= x861 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) (= x1322 (x2486 160)) (= (x2486 224) x2434) (= x1140 (x61 x1076 x1415 x369 x3162)) (= (x2486 192) x3162) (= (x2486 224) x1954) (= (= (ite (= x1076 0) x1145 (ite (>= 32 x1076) x2368 (ite (>= 64 x1076) x2495 (ite (<= x1076 96) x1140 (ite (>= 128 x1076) x3532 (ite (<= x1076 160) x1529 (ite (>= 192 x1076) x3038 (ite (<= x1076 224) x861 x885)))))))) x326) x2158) (= x842 (x2486 256)) (= (x3579 x1076 x594 x2753 x1239 x1862 x842) x1529) (= x2753 (x2486 160)) (= (x2486 160) x677) (= x3627 (x2486 128)) (= x1240 (x2486 128)) (= (x2486 192) x351) (= (x2486 256) x209) (= (x1539 x1076 x1363 x1322 x96 x2434) x3532) (= (x2486 160) x3514) (= (x2486 224) x1862) (= (x2486 288) x2386) (= (x3006 x1076 x3627 x677) x2495) (= (x2486 256) x1223) (= x1415 (x2486 128)) (= x1264 (x2486 128)) (= (x2486 160) x2626) (= x210 (x2486 320)) (= (x2486 224) x78) (= x1363 (x2486 128)) (= (x40 0) x1145) (= x594 (x2486 128)) (= (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386) x3038) (= (x2486 192) x96) (= (x2486 192) x740) (= x2817 (x2486 288)) (= x1239 (x2486 192)) (= (x2486 128) x1602)) (and (=> x2158 x3108) (=> (and (not x2158) (and (= x2571 false) (= x3246 132) (= x2888 true))) x1636))) x3632))))
(assert (< (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3579 x1740 x3242 x637 x1928 x904 x2624) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x983 (and x168 x621)))
(assert (x2052 x1022))
(assert (=> (<= x1223 10000) (= (x1863 x1223) 0)))
(assert (= (x3006 64 x1755 10) (x1863 (x3006 64 x1755 10))))
(assert (x2121 x1022))
(assert (x2052 x1448))
(assert (= 0 (x1863 18446744073709551615)))
(assert (= x476 (and x3251 (not x1858))))
(assert (x2052 x2865))
(assert (= (x1863 x3301) (x1863 (+ x3301 1))))
(assert (= x888 (and x387 x124)))
(assert (x2052 x2174))
(assert (x2052 x2773))
(assert (= 64 (x2476 (x3006 64 x1163 36))))
(assert (= (and (not x3485) x1897) x2391))
(assert (= 64 (x2476 (x3006 64 x2184 6))))
(assert (x2052 x399))
(assert (= (x1863 (x3006 64 x2184 36)) (x3006 64 x2184 36)))
(assert (x2052 x2596))
(assert (x2052 x1738))
(assert (= (x175 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x2263))
(assert (x2052 x3277))
(assert (x2052 x3198))
(assert (= x3209 (x1938 (x1539 x3511 x3209 x2059 x2223 x2230))))
(assert (= (=> (and (= x2941 (< 0 x1206)) (= (div x3342 2) x3455) (= x622 (x52 1 x3342)) (= x1390 (ite (> x622 0) x3455 (x52 127 x3455))) (= (x3498 (- x622 (mod (ite (> 32 x1390) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1206)) (and (=> (and (and (= (x52 1 x3342) x2269) (= x301 (= 0 x2269))) x2941) (and (=> x301 x3054) (=> (and (= x2094 (> x1390 0)) (not x301)) (and (=> (not x2094) x2030) (=> x2094 x1371))))) (=> (not x2941) x2878))) x149))
(assert (= (x1938 (x3006 64 x1274 36)) x1274))
(assert (x24 x253))
(assert (x2052 x2789))
(assert (x2052 x1461))
(assert (= x2976 (and x2158 x3602)))
(assert (x2052 x630))
(assert (=> (>= 10000 x2051) (= (x1863 x2051) 0)))
(assert (= (and (not x2082) x106) x3324))
(assert (= x1717 (=> (= (= 0 x2186) x1569) (and (=> (and (and (<= x3497 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3497)) (> x169 x3497) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3497)) (not (= x3497 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3497) (= (x3002 (+ 32 x3497)) x169) (= (> 32 x3350) x1609) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3497)) (not x1569)) (and (=> x1609 x2395) (=> (and (not x1609) (= (x3117 x3497) x3049)) x3291))) (=> (and (= 0 x2186) x1569) x3291)))))
(assert (=> (>= 10000 x3591) (= (x1863 x3591) 0)))
(assert (x2052 x2432))
(assert (= x901 (or x3079 x1459)))
(assert (x2052 x200))
(assert (= x1993 (and x2361 (not x897))))
(assert (x2052 x2844))
(assert (= (and x3233 (not x3581)) x2237))
(assert (= (x1875 (x1539 x1929 x623 x477 x2229 x716)) x716))
(assert (x2052 x1200))
(assert (x2052 x696))
(assert (x24 x2206))
(assert (= 0 (x1863 65459779515086145227071195481915504640854538040456829512690024447692440076288)))
(assert (x2052 x826))
(assert (x2052 x3106))
(assert (> (x3006 64 x1626 6) 10000))
(assert (x2052 x1020))
(assert (x2052 x1577))
(assert (x2052 x364))
(assert (= (x1938 (x3579 x1076 x594 x2753 x1239 x1862 x842)) x594))
(assert (x2052 x514))
(assert (< 10000 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)))
(assert (= x3450 (x175 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597))))
(assert (= x2624 (x450 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (x2052 x769))
(assert (< 10000 (x3006 64 x2695 2)))
(assert (x2052 x2059))
(assert (=> (>= 10000 x716) (= (x1863 x716) 0)))
(assert (=> (>= 10000 x3354) (= (x1863 x3354) 0)))
(assert (x2052 x256))
(assert (x2052 x3024))
(assert (x2052 x2502))
(assert (= x340 (and x442 x3091)))
(assert (x2052 x1610))
(assert (= x2675 (and x3594 x1789)))
(assert (x2052 x2388))
(assert (< 10000 (x3006 64 x2184 6)))
(assert (x2052 x1420))
(assert (x2052 x1317))
(assert (x2052 x4))
(assert (x2052 x637))
(assert (x2052 x2086))
(assert (= x1227 (and (not x2608) x17)))
(assert (x2052 x3063))
(assert (x2052 x356))
(assert (x24 x1972))
(assert (= (x2476 (x3006 64 x945 36)) 64))
(assert (= (and x818 x3623) x1945))
(assert (= 12 (x175 (x3006 64 x2487 12))))
(assert (= x1005 (and (not x1247) x2781)))
(assert (x2052 x3131))
(assert (= (x2476 (x1539 x3322 x1526 x3539 x3420 x162)) x3322))
(assert (< 10000 (x3006 64 x809 11)))
(assert (= x3079 (or x2866 x2324)))
(assert (=> (<= x3626 10000) (= (x1863 x3626) 0)))
(assert (x2052 x501))
(assert (= (=> (= x1803 (not (< 128 x837))) (and x319 x1803)) x2859))
(assert (x2052 x2376))
(assert (x2052 x1526))
(assert (= (x1938 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) x2801))
(assert (= (or x2541 x1599) x3447))
(assert (x2052 x1138))
(assert (x2052 x3278))
(assert (x2052 x2600))
(assert (x2052 x3508))
(assert (x2052 x938))
(assert (x2052 x1844))
(assert (=> (>= 10000 x3450) (= (x1863 x3450) 0)))
(assert (x2052 x3261))
(assert (x2052 x2516))
(assert (x24 x85))
(assert (= (and (not x496) x462) x3164))
(assert (= (x175 (x1539 x3322 x1526 x3539 x3420 x162)) x3539))
(assert (=> (>= 10000 x4) (= 0 (x1863 x4))))
(assert (x2052 x1828))
(assert (= (and x2270 x1691) x2199))
(assert (x2052 x1301))
(assert (= x2800 (and x899 x808)))
(assert (= 64 (x2476 (x3006 64 x525 2))))
(assert (x2052 x3049))
(assert (x1834 x2731))
(assert (= 64 (x2476 (x3006 64 x2631 36))))
(assert (x2052 x365))
(assert (x24 x796))
(assert (= (x175 (x3006 64 x2184 36)) 36))
(assert (x2052 x1548))
(assert (= (and x3166 x1795) x1048))
(assert (x2052 x2926))
(assert (not (x3300 (x3006 64 x3168 36))))
(assert (x2052 x566))
(assert (> (x1539 x2402 x1309 x2463 x116 x995) 10000))
(assert (x2052 x2272))
(assert (x2052 x2266))
(assert (x2052 x2461))
(assert (=> (>= 10000 x3457) (= (x1863 x3457) 0)))
(assert (= x60 (x1938 (x1539 x1740 x60 x531 x2047 x3203))))
(assert (x2052 x2929))
(assert (= (and (not x1042) x1646) x3240))
(assert (=> (<= x2817 10000) (= 0 (x1863 x2817))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)))
(assert (not (x3300 (x3579 x1076 x594 x2753 x1239 x1862 x842))))
(assert (x24 x2146))
(assert (= x2301 (and x706 (not x1576))))
(assert (=> (>= 10000 x3268) (= 0 (x1863 x3268))))
(assert (x2052 x2208))
(assert (x2052 x1612))
(assert (x2052 x3000))
(assert (=> (>= 10000 x666) (= 0 (x1863 x666))))
(assert (< 10000 (x3006 x2402 x3232 x3407)))
(assert (= (and x2567 (not x1044)) x2518))
(assert (x2052 x2679))
(assert (= (x1863 (x3006 64 x2448 3)) (x3006 64 x2448 3)))
(assert (x2052 x1336))
(assert (=> (<= x3248 10000) (= 0 (x1863 x3248))))
(assert (x24 x1474))
(assert (=> (<= x637 10000) (= (x1863 x637) 0)))
(assert (=> (<= x1959 10000) (= 0 (x1863 x1959))))
(assert (=> (<= x3022 10000) (= (x1863 x3022) 0)))
(assert (= x3340 (and x3251 x1858)))
(assert (= x631 (or x112 x3382)))
(assert (x1834 x2067))
(assert (= (x1875 (x1539 x3511 x3209 x2059 x2223 x2230)) x2230))
(assert (=> (<= x1684 10000) (= (x1863 x1684) 0)))
(assert (=> (<= x288 10000) (= (x1863 x288) 0)))
(assert (x2052 x1757))
(assert (x2052 x650))
(assert (x2052 x2033))
(assert (= x933 false))
(assert (x2052 x981))
(assert (= x357 (x1875 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x2918))
(assert (not (x3300 (x3006 64 x3248 6))))
(assert (= x1683 (or (and (not x338) x358) x1066)))
(assert (x2052 x1617))
(assert (=> (>= 10000 x2564) (= (x1863 x2564) 0)))
(assert (x2052 x3342))
(assert (x2052 x898))
(assert (x2052 x644))
(assert (x2052 x3596))
(assert (=> (>= 10000 x1437) (= (x1863 x1437) 0)))
(assert (= (and x2534 (not x2549)) x3551))
(assert (= x2777 (or x435 x2088)))
(assert (< (x3006 64 x1755 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3118 10000) (= 0 (x1863 x3118))))
(assert (x2052 x1743))
(assert (= (x3006 x1076 x3627 x677) (x1863 (x3006 x1076 x3627 x677))))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x2052 x3090))
(assert (< (x1836 x2989 x857) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x175 (x61 x3457 x981 x1498 x1757)) x1498))
(assert (x2052 x3507))
(assert (not (x3300 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (x2169 x3302))
(assert (= (x175 (x3006 x2039 x630 x3041)) x3041))
(assert (= (x2476 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x1740))
(assert (x2052 x210))
(assert (x2052 x3354))
(assert (< (x3006 64 x2184 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3006 64 x1755 10)))
(assert (= (x175 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)) x2626))
(assert (= (or x1340 x2416) x33))
(assert (x2052 x2429))
(assert (not (x3300 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005))))
(assert (x2052 x2427))
(assert (x2052 x217))
(assert (x2052 x2750))
(assert (> (x3006 64 x3248 6) 10000))
(assert (x2052 x1514))
(assert (x2052 x2734))
(assert (x2052 x3130))
(assert (x2052 x2406))
(assert (x2052 x980))
(assert (x2052 x3362))
(assert (=> (>= 10000 x2231) (= 0 (x1863 x2231))))
(assert (= (and x833 x748) x1202))
(assert (not (x3300 (x3006 x3457 x3582 x900))))
(assert (x2052 x2708))
(assert (< 10000 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (>= 32 x2402) x517 (ite (<= x2402 64) x1698 (ite (>= 96 x2402) x2638 (ite (<= x2402 128) x1308 (ite (<= x2402 160) x1802 (ite (>= 192 x2402) x1464 (ite (<= x2402 224) x3084 x1898)))))))))))
(assert (= x1056 (x1875 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577))))
(assert (x2052 x1896))
(assert (= (x1504 (x1539 x1929 x623 x477 x2229 x716)) x2229))
(assert (x2052 x2069))
(assert (x2052 x3522))
(assert (= (x1938 (x3006 64 x1896 12)) x1896))
(assert (x3300 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x2052 x715))
(assert (not (x3300 (x61 x769 x2744 x2867 x2231))))
(assert (x2052 x3488))
(assert (x2052 x940))
(assert (x2102 x1972))
(assert (= x250 (and x1312 x1499)))
(assert (=> (>= 10000 x2730) (= (x1863 x2730) 0)))
(assert (= x1801 (x175 (x61 x3511 x1598 x1801 x552))))
(assert (= (and x1383 x1369) x3247))
(assert (x2052 x2177))
(assert (= x1849 (and x3332 x1536)))
(assert (not (x3300 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449))))
(assert (= x2039 (x2476 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (= x2462 (x1875 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650))))
(assert (= x231 (and x2227 (not x2286))))
(assert (x2052 x1676))
(assert (x2052 x2981))
(assert (x2052 x3329))
(assert (x2052 x3232))
(assert (= x3464 (and x226 x3516)))
(assert (= x1193 (and (not x2152) x1008)))
(assert (x2052 x2979))
(assert (x2052 x580))
(assert (not (x3300 (x3006 x2039 x630 x3041))))
(assert (x2052 x2694))
(assert (= (x1938 (x3006 64 x2695 2)) x2695))
(assert (= x417 x2004))
(assert (x2052 x3559))
(assert (= x425 (or x1852 (and x33 (not x1123)))))
(assert (x2052 x1026))
(assert (x2052 x3524))
(assert (= (x1863 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337)) (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337)))
(assert (x2052 x3531))
(assert (= (or (and x818 (not x3623)) x1945) x462))
(assert (= (x1836 32 x1522) (x1863 (x1836 32 x1522))))
(assert (= x1689 (and (not x1885) x934)))
(assert (= x786 (and x1383 (not x1369))))
(assert (= x3365 (and x250 x673)))
(assert (= (=> (and (or (not x1123) x1123) (= x1123 (= x2186 0))) x1717) x2168))
(assert (x2052 x2192))
(assert (=> (<= x862 10000) (= (x1863 x862) 0)))
(assert (= x1455 (x450 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005))))
(assert (= x2016 (x1504 (x3579 x1929 x3550 x1422 x2016 x1210 x1392))))
(assert (= 36 (x175 (x3006 64 x1844 36))))
(assert (=> (<= x521 10000) (= 0 (x1863 x521))))
(assert (= (x175 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622)) x549))
(assert (= x2537 (and x504 x2905)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 x2039 x2946)))
(assert (= (and x681 x665) x2456))
(assert (x24 x3267))
(assert (=> (>= 10000 x364) (= (x1863 x364) 0)))
(assert (= (and x55 x1403) x1367))
(assert (not (x3300 (x3006 64 x1877 12))))
(assert (= (x175 (x3006 64 x745 10)) 10))
(assert (not (x3300 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597))))
(assert (x2052 x828))
(assert (= 12 (x175 (x3006 64 x1896 12))))
(assert (= 36 (x175 (x3006 64 x138 36))))
(assert (x2052 x951))
(assert (= (x175 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) x3514))
(assert (x2052 x2332))
(assert (= (and x1442 x605) x118))
(assert (= x1930 x3003))
(assert (= x1602 (x1938 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210))))
(assert (x2052 x2969))
(assert (x2052 x2899))
(assert (= (x175 (x3006 x2989 x705 x2377)) x2377))
(assert (x2052 x531))
(assert (x2052 x2810))
(assert (= x343 (=> (and (= x1758 (x3360 x2936)) (= (not (< 224 x988)) x2560)) (and x2560 x1406))))
(assert (x2052 x353))
(assert (x2052 x1003))
(assert (= x2151 (x1141 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (= x230 (=> (and (= (= x2291 0) x3623) (or x3623 (not x3623))) x989)))
(assert (= (=> (and (or x1453 (not x1453)) (= x1453 (= 0 x1621))) x400) x2559))
(assert (x2052 x1978))
(assert (x2052 x324))
(assert (=> (>= 10000 x1095) (= (x1863 x1095) 0)))
(assert (< (x3006 64 x809 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2294))
(assert (=> (<= x373 10000) (= 0 (x1863 x373))))
(assert (x2052 x2624))
(assert (= 2 (x175 (x3006 64 x3607 2))))
(assert (= (x1863 18563399957492015340621713183830377045030061062230639968016343144629396307968) 0))
(assert (x24 x2384))
(assert (x2052 x123))
(assert (= x778 (x175 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (x2052 x542))
(assert (x2052 x2912))
(assert (= 32 (x2476 (x1836 32 104))))
(assert (=> (>= 10000 x2919) (= 0 (x1863 x2919))))
(assert (x2052 x420))
(assert (= x929 (and x1481 (not x1088))))
(assert (=> (<= x2377 10000) (= (x1863 x2377) 0)))
(assert (x2052 x1893))
(assert (x2052 x1100))
(assert (x2052 x317))
(assert (= (and x536 x3340) x2506))
(assert (=> (>= 10000 x3550) (= 0 (x1863 x3550))))
(assert (x2052 x2528))
(assert (x2052 x2893))
(assert (< (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x2658 x769 x742 x549 x1684 x2564 x2640 x3622) 10000))
(assert (x2052 x3416))
(assert (x2052 x941))
(assert (= (x1863 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500)) (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500)))
(assert (x2052 x2407))
(assert (x2052 x1225))
(assert (= (x1863 48755886422350550937420582033662272622158303343164848365600209189876434731008) 0))
(assert (= (and x2765 x2237) x225))
(assert (= (x3579 x3322 x1430 x3109 x2734 x2822 x1633) (x1863 (x3579 x3322 x1430 x3109 x2734 x2822 x1633))))
(assert (> (x3006 64 x855 (ite (= x2989 0) x3428 (ite (>= 32 x2989) x3088 (ite (>= 64 x2989) x62 (ite (<= x2989 96) x1846 (ite (>= 128 x2989) x189 (ite (<= x2989 160) x3434 (ite (>= 192 x2989) x1234 (ite (>= 224 x2989) x2661 x2885))))))))) 10000))
(assert (x2052 x1423))
(assert (= x1459 (or x562 x1043 x733 x398 x687 x1131 x1180 x2044 x3189 x2012 x3406 x3205 x3377 x439 x2218 x3609 x3448 x2748 x64 x795 x2501 x3095 x402 x1555)))
(assert (=> (>= 10000 x366) (= 0 (x1863 x366))))
(assert (=> (>= 10000 x2755) (= (x1863 x2755) 0)))
(assert (= (x1213 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577)) x1577))
(assert (= (x1863 (+ 1 x601)) (x1863 x601)))
(assert (< (x2658 x769 x742 x549 x1684 x2564 x2640 x3622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x24 1))
(assert (= (=> (and (= x941 (x3002 (+ 128 x936))) (= (x3002 (+ x2974 32)) x1084) (= x102 (x3006 64 x3338 7)) (= x2974 (x3002 (+ x936 128))) (= x2402 (x3498 (- x1084 128))) (= x769 (x3498 (- x2402 32))) (= (<= x769 224) x2253)) (and (=> (and (= (x61 x769 x2744 x2867 x2231) x66) (= x1684 (x3452 192)) (= (x3452 192) x2231) (= (x3579 x769 x2979 x3379 x932 x1868 x1211) x2881) (= (x3452 224) x2462) (= (x3452 288) x3622) (= x3196 (x3452 160)) (= x1463 (x3452 160)) (= x1211 (x3452 256)) (= (x40 0) x1559) (= (x2658 x769 x742 x549 x1684 x2564 x2640 x3622) x545) (= (x3452 224) x2564) (= x1461 (x3452 128)) (= (x3452 160) x734) (= x2867 (x3452 160)) (= (x3452 160) x549) (= x395 (x3452 256)) (= x238 (x3006 x769 x610 x3196)) (= x2983 (x3452 224)) (= (x3452 192) x932) (= (x3452 288) x3147) (= x3490 (x3452 192)) (= (x3452 128) x696) (= (x3452 256) x2640) (= (x3452 128) x47) (= (x1836 x769 x696) x113) (= x1868 (x3452 224)) (= (x3452 192) x2730) (= (x1539 x769 x1461 x734 x2730 x2983) x3105) (= x742 (x3452 128)) (= (<= x2402 224) x2307) (= x2650 (x3452 320)) (= (x3452 128) x2744) (= (x3452 128) x2979) (= (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650) x1436) (= (x3452 128) x610) (= x2796 (ite (= 0 x769) x1559 (ite (<= x769 32) x113 (ite (>= 64 x769) x238 (ite (<= x769 96) x66 (ite (<= x769 128) x3105 (ite (>= 160 x769) x2881 (ite (>= 192 x769) x545 (ite (<= x769 224) x1436 x2210))))))))) (= x3379 (x3452 160))) (and (=> (and (= x1336 (x3452 256)) (= (x3452 128) x655) (= (x40 0) x955) (= x3407 (x3452 160)) (= (= 0 x326) x293) (= x21 (x3452 192)) (= x650 (x3452 256)) (= (x3452 224) x541) (= (x3452 128) x1309) (= (x3452 192) x116) (= x1698 (x3006 x2402 x3232 x3407)) (= (x3452 192) x2988) (= (x3452 224) x1067) (= (x3452 160) x1984) (= x1455 (x3452 256)) (= (x2658 x2402 x655 x2761 x21 x2542 x650 x898) x1464) (= (x3452 160) x373) (= x1802 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) (= x1452 (x3452 192)) (= x126 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (>= 32 x2402) x517 (ite (>= 64 x2402) x1698 (ite (>= 96 x2402) x2638 (ite (<= x2402 128) x1308 (ite (<= x2402 160) x1802 (ite (>= 192 x2402) x1464 (ite (>= 224 x2402) x3084 x1898)))))))))) (= x2761 (x3452 160)) (= x2542 (x3452 224)) (= (x3452 128) x862) (= (x3452 320) x3005) (= (x3452 128) x3197) (= (x3452 160) x1959) (= x3084 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) (= x2715 (x3452 192)) (= (x1539 x2402 x1309 x2463 x116 x995) x1308) (= (x3452 128) x3639) (= x2463 (x3452 160)) (= x326 (x2397 x126)) (= x3232 (x3452 128)) (= (x3452 128) x2755) (= x2638 (x61 x2402 x3197 x1984 x2988)) (= x517 (x1836 x2402 x3639)) (= (x3452 288) x2086) (= (x3452 288) x898) (= x995 (x3452 224))) (and (=> (and (and (= true x2304) (= 132 x3246) (= false x1756)) x293) x1636) (=> (not x293) x284))) x2307)) x2253)) x3217))
(assert (= x1611 (or x2536 x2548)))
(assert (= (or (and x2237 (not x2765)) x225) x790))
(assert (= x898 (x1213 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (x2052 x3122))
(assert (x2052 x2582))
(assert (x3300 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (x2052 x541))
(assert (x2052 x369))
(assert (= (x1875 (x1539 x2402 x1309 x2463 x116 x995)) x995))
(assert (x2052 x520))
(assert (= x1340 (or x2470 x1222 x1479 x2829 x465 x1156 x1361 x1113)))
(assert (> (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151) 10000))
(assert (= 36 (x175 (x3006 64 x3168 36))))
(assert (=> (>= 10000 x1755) (= (x1863 x1755) 0)))
(assert (> (x1539 x769 x1461 x734 x2730 x2983) 10000))
(assert (=> (<= x531 10000) (= (x1863 x531) 0)))
(assert (not (x3300 (x3006 64 x1274 36))))
(assert (=> (>= 10000 x18) (= (x1863 x18) 0)))
(assert (=> (>= 10000 x715) (= 0 (x1863 x715))))
(assert (= (x1938 (x3006 x3511 x331 x617)) x331))
(assert (x2052 x2862))
(assert (= x393 (and x1666 x2580)))
(assert (= x610 (x1938 (x3006 x769 x610 x3196))))
(assert (=> (>= 10000 x2059) (= (x1863 x2059) 0)))
(assert (x2052 x2523))
(assert (=> (>= 10000 x2530) (= 0 (x1863 x2530))))
(assert (= x3380 (x450 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x3443))
(assert (x2052 x2140))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508)))
(assert (< 10000 (x1539 x3322 x1526 x3539 x3420 x162)))
(assert (x2052 x974))
(assert (x850 x2300))
(assert (x24 x1517))
(assert (not (x3300 (x3006 64 x525 2))))
(assert (= x3385 false))
(assert (x2052 x567))
(assert (= 12 (x175 (x3006 64 x1521 12))))
(assert (x2169 x2099))
(assert (x2052 x879))
(assert (= (x1863 (x3006 64 x2487 12)) (x3006 64 x2487 12)))
(assert (< (x1836 x3511 x18) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2476 (x3006 x3511 x331 x617)) x3511))
(assert (x2052 x2300))
(assert (x2052 x1868))
(assert (x2052 x2356))
(assert (= (x3579 x1076 x594 x2753 x1239 x1862 x842) (x1863 (x3579 x1076 x594 x2753 x1239 x1862 x842))))
(assert (x2052 x3246))
(assert (= (and (not x3358) x2297) x1574))
(assert (x2052 x2606))
(assert (= (x2476 (x3006 64 x2448 3)) 64))
(assert (x2052 x3540))
(assert (x2052 x2485))
(assert (x2052 x2867))
(assert (= (and (not x168) x621) x358))
(assert (= x1337 (x1213 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (x2052 x3389))
(assert (x2052 x2051))
(assert (= (and (not x2153) x2518) x1848))
(assert (=> (>= 10000 x2650) (= 0 (x1863 x2650))))
(assert (=> (>= 10000 x842) (= 0 (x1863 x842))))
(assert (x3300 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (x2052 x942))
(assert (x2052 x2919))
(assert (= x2280 (and x2671 (not x3527))))
(assert (=> (<= x2177 10000) (= (x1863 x2177) 0)))
(assert (x2052 x2650))
(assert (x2052 x890))
(assert (= (x1938 (x3006 64 x2487 12)) x2487))
(assert (= x1397 (=> (= x2134 (= 0 x3574)) (and (=> (and (and (= false x430) (= x2645 x1750) (= true x548)) x2134) x3163) (=> (and (and (= x599 160) (= x726 (= x974 x1138))) (not x2134)) (and (=> (and (and (= 3628442803 x2449) (>= 127 x624) (= x2032 x194) (= x954 x2032) (>= x794 1) (= false x2957) (= x2920 false) (= (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x241) x1472) (= (< (* x954 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1906) (>= 127 x624) (= (x2725 x974) x794) (= x3229 (and x1472 x1906)) (= x1014 36) (= x1297 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= (* 1000000000 x954) x241)) x726) (and (=> (not x3229) x3437) (=> (and (and (= (x1078 x1327) x2966) (>= x241 0) (<= x241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (< x494 x2966) x310) (= (x3006 64 x2695 2) x1327) (= (x2246 x1631) x494) (= x1724 x241) (= x1631 (x3006 64 x2695 1))) x3229) (and (=> (and x310 (= (ite x310 1 0) x2810)) x239) (=> (and (and (= x473 (x3498 (- x494 x2966))) (= (> x473 x494) x2714)) (not x310)) (and (=> (and x2714 (and (= true x902) (= x1150 false) (= 36 x1119))) x2200) (=> (and (not x2714) (= x2810 (ite (< x473 x1724) 1 0))) x239))))))) (=> (and (and (= x1409 false) (>= 1461501637330902918203684832716283019655932542975 x1932) (= x1138 x2919) (<= x774 127) (= x1298 (= x2695 x1932)) (<= x1138 1461501637330902918203684832716283019655932542975) (= x2917 (x2725 x2919)) (= x2757 false) (<= 1 x2917) (= 36 x1762) (= x954 x2266) (<= 1 x1138) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2326) (>= 127 x774) (= x1728 3628442803)) (not x726)) (and (=> (and (not x1298) (and (= false x242) (= true x2654) (= 0 x672))) x1625) (=> (and x1298 (and (= (= 255 x138) x2608) (>= 255 x138))) (and (=> (and (and (= 36 x672) (= false x593) (= true x1661)) x2608) x1625) (=> (and (not x2608) (and (= x3289 (x3006 64 x138 36)) (= (x52 255 x2590) x2184) (= (= x2606 0) x3167) (= (+ 1 x138) x2590) (= x2606 (x3468 x3289)) (= (x52 255 x2590) x3390))) (and (=> (and (= (= x2184 255) x868) x3167) (and (=> x868 x1791) (=> (and (and (= x3021 (x52 255 x2842)) (>= 1461501637330902918203684832716283019655932542975 x3279) (= (x2108 x2092) x3279) (= (x3006 64 x2184 2) x2092) (= (+ 1 x2184) x2842) (= x120 (= x1626 255)) (= (x52 255 x2842) x1626)) (not x868)) (and (=> (and (not x120) (and (= x1187 (x52 255 x2953)) (= x438 (x1199 x3135)) (= (x52 255 x2953) x525) (= x3135 (x3006 64 x1626 6)) (= x2953 (+ 1 x1626)) (<= x438 65535) (= x3315 (= 255 x525)))) (and (=> (and (and (= x2655 (x3006 64 x525 2)) (= (x52 255 x879) x945) (= x2292 (= 255 x945)) (= (+ 1 x525) x879) (<= x695 1461501637330902918203684832716283019655932542975) (= (x52 255 x879) x2305) (= x695 (x2108 x2655))) (not x3315)) (and (=> (and (not x2292) (and (= (x3006 64 x945 36) x2603) (= 128 x264) (= x1892 (x52 255 x2206)) (= x3556 (x3468 x2603)) (= (+ 1 x945) x2206) (= x1835 (x2725 x1932)) (= (= x1835 0) x1381) (= x3070 (x52 255 x2206)))) (and (=> (and (and (= 0 x672) (= x1133 false) (= true x3258)) x1381) x1625) (=> (and (not x1381) (and (= x848 102788308552044517260959567728648622381392053106279845986800620074717893623808) (>= 127 x2883) (= x2596 x3279) (= x3556 x2226) (>= 127 x2883) (= 132 x1097) (>= 1461501637330902918203684832716283019655932542975 x3218) (= x387 (= x3218 x2919)) (<= 1 x269) (= x1668 false) (= x269 (x2725 x2695)) (= x3421 false) (= x438 x479) (= x1912 3812630263) (= x2393 x695))) (and (=> (and (not x387) (and (= true x3100) (= false x1987) (= 100 x977))) x2660) (=> (and (= (< x3556 100000) x2985) x387) (and (=> (and (not x2985) (and (= x1734 0) (= 1 x1323) (= (x2108 x2655) x2546) (= (x1199 x3135) x380) (= (x3468 x2603) x3526) (= x34 (x2108 x2092)) (= x2428 x206) (= x3070 x2723))) x3435) (=> (and x2985 (and (= x977 4) (= false x2921) (= x993 true))) x2660))))))) (=> (and (and (= 36 x672) (= true x3245) (= x81 false)) x2292) x1625))) (=> x3315 x232))) (=> x120 x1374))))) (=> (and (not x3167) (= (= 1 x2606) x3425)) (and (=> (and (= (= x2184 255) x2346) x3425) (and (=> (and (and (= (x1199 x3630) x407) (= (x52 255 x2846) x1896) (= (+ x2184 1) x2846) (= (= 255 x1896) x3640) (<= x407 65535) (= (x52 255 x2846) x1125) (= x3630 (x3006 64 x2184 6))) (not x2346)) (and (=> x3640 x232) (=> (and (not x3640) (and (= (x3498 (- x1314 (mod (ite (> 32 x3503) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1995) (= (x52 255 x3148) x1280) (= x1951 (x2666 x3608)) (= (x3006 64 x1896 12) x3608) (= (> x1995 0) x2267) (= x3148 (+ 1 x1896)) (= x2070 (div x3302 2)) (= (x52 1 x3302) x1314) (= (ite (> x1314 0) x2070 (x52 127 x2070)) x3503) (>= 18446744073709551615 x1951) (= (x52 255 x3148) x1705))) (and (=> (and x2267 (and (= (= 0 x3297) x3153) (= (x52 1 x3302) x3297))) (and (=> (and (not x3153) (= x2580 (< 0 x3503))) (and (=> (not x2580) x958) (=> x2580 x3185))) (=> (and x3153 (and (or (= x2068 0) (= x2068 32)) (= x2068 (* (ite (not (= x3503 0)) 1 0) 32)))) x3471))) (=> (not x2267) x2413))))) (=> x2346 x1791))) (=> (and (= x1913 (= 2 x2606)) (not x3425)) (and (=> (and x1913 (= (= 255 x2184) x1576)) (and (=> x1576 x1791) (=> (and (and (= (= x1877 255) x2197) (<= x1435 65535) (= x1877 (x52 255 x2731)) (= (x52 255 x2731) x1154) (= (x1199 x2570) x1435) (= x2731 (+ x2184 1)) (= (x3006 64 x2184 6) x2570)) (not x1576)) (and (=> (and (and (= x3195 (+ x1877 1)) (= x171 (x3498 (- x1587 (mod (ite (> 32 x1473) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x52 1 x3302) x1587) (= x83 (x52 255 x3195)) (= x1473 (ite (> x1587 0) x2021 (x52 127 x2021))) (= (div x3302 2) x2021) (= x2807 (x3006 64 x1877 12)) (<= x3295 18446744073709551615) (= x1744 (> x171 0)) (= (x52 255 x3195) x3035) (= x3295 (x2666 x2807))) (not x2197)) (and (=> (not x1744) x2413) (=> (and x1744 (and (= x168 (= 0 x2857)) (= x2857 (x52 1 x3302)))) (and (=> (and (not x168) (= x338 (< 0 x1473))) (and (=> (not x338) x1519) (=> x338 x2787))) (=> (and (and (or (= x3113 0) (= x3113 32)) (= x3113 (* (ite (not (= x1473 0)) 1 0) 32))) x168) x2819))))) (=> x2197 x232))))) (=> (and (and (= x1130 (= x2184 255)) (= (= 3 x2606) x3598) x3598) (not x1913)) (and (=> x1130 x1791) (=> (and (not x1130) (and (= (+ 1 x2184) x3409) (= x1607 (x52 255 x3409)) (= (= 255 x3524) x3019) (= (x52 255 x3409) x3524) (= x1053 (x3468 x2855)) (= x2855 (x3006 64 x2184 36)))) (and (=> (and (and (and (= (x2725 x1932) x1616) (= x2480 (x3006 64 x3524 100)) (= (= 0 x1616) x3544) (= (+ x3524 1) x3489) (= (x451 x2480) x1265) (= 128 x2912) (= (x52 255 x3489) x1641) (= x843 (x52 255 x3489))) (or (and (and (= x579 (x2725 x2695)) (= x2409 false) (= true x3373) (>= x579 1) (= x1722 false) (= 68 x1944) (>= 127 x799) (= x719 2) (= 3957931183 x3201) (= false x1824) (= x3244 (x52 255 x3489)) (= true x2110) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x1925) (= x3326 x1265) (= x1922 x1053) (= false x1649) (<= x799 127) (= x672 100)) (not x3544)) (and x3544 (and (= x333 true) (= 0 x672) (= false x949))))) (not x3019)) x1625) (=> x3019 x1374)))))))))))))))))))))
(assert (=> (<= x698 10000) (= 0 (x1863 x698))))
(assert (x2052 x521))
(assert (x2052 x3384))
(assert (x2052 x1000))
(assert (x2052 x2778))
(assert (x2052 x454))
(assert (x2052 x1345))
(assert (= (x1863 36180046632115354981904271164172418022085455641023445553456023893925156618240) 0))
(assert (> (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547) 10000))
(assert (x2052 x152))
(assert (x2052 x3026))
(assert (=> (>= 10000 x2230) (= 0 (x1863 x2230))))
(assert (= x2308 (or (and x2949 x2346) (and x1130 x54) (and x868 x303) (and x1576 x706))))
(assert (=> (>= 10000 x78) (= (x1863 x78) 0)))
(assert (x1834 x1474))
(assert (=> (<= x2410 10000) (= 0 (x1863 x2410))))
(assert (x2052 x3023))
(assert (=> (<= x1056 10000) (= 0 (x1863 x1056))))
(assert (> (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210) 10000))
(assert (=> (<= x1420 10000) (= 0 (x1863 x1420))))
(assert (< 10000 (x61 x2989 x221 x2177 x715)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)))
(assert (x2052 x3292))
(assert (= (or x3116 x1279) x2754))
(assert (x2052 x1899))
(assert (< (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x652))
(assert (x2052 x2296))
(assert (not (x3300 (x3579 x769 x2979 x3379 x932 x1868 x1211))))
(assert (= (x1938 (x3006 64 x1344 36)) x1344))
(assert (= x2761 (x175 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (x2052 x698))
(assert (x2052 x3574))
(assert (= (x2476 (x3006 64 x3338 7)) 64))
(assert (= x3354 (x1504 (x1539 x3457 x666 x829 x3354 x3351))))
(assert (= x2609 (and x631 x841)))
(assert (x2052 x3186))
(assert (x2052 x1260))
(assert (= (=> (= x2892 (not (> x2077 32))) (and x1930 x2892)) x257))
(assert (> (x3006 64 x1163 36) 10000))
(assert (x2052 x2500))
(assert (x2052 x3288))
(assert (= x2579 (or (and (not x2094) x1273) x1807)))
(assert (x2052 x755))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151)))
(assert (= (and x2029 (not x1774)) x2380))
(assert (= (x1504 (x3579 x3511 x1924 x2410 x89 x3281 x3380)) x89))
(assert (= (x1863 3957931183) 0))
(assert (= (x175 (x3006 64 x3248 36)) 36))
(assert (x2052 x3126))
(assert (x2052 x1137))
(assert (= x410 (x1875 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449))))
(assert (x2052 x1556))
(assert (x2052 x857))
(assert (x2052 x1864))
(assert (x2052 x3361))
(assert (x2052 x2410))
(assert (x2052 x3242))
(assert (x2052 x211))
(assert (< 10000 (x3006 64 x2530 0)))
(assert (x2052 x1633))
(assert (x2052 x277))
(assert (= (x1863 (x1836 x3511 x18)) (x1836 x3511 x18)))
(assert (=> (>= 10000 x2492) (= 0 (x1863 x2492))))
(assert (< 10000 (x1836 x1740 x2698)))
(assert (< (x1539 x1076 x1363 x1322 x96 x2434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x159))
(assert (x2052 x3037))
(assert (= (and (not x3315) x2569) x982))
(assert (x2052 x13))
(assert (x2052 x3143))
(assert (x2052 x2489))
(assert (x2052 x3552))
(assert (x2052 x3320))
(assert (not (x3300 (x3579 x2989 x366 x3118 x1610 x2557 x1089))))
(assert (=> (<= x60 10000) (= (x1863 x60) 0)))
(assert (x24 x1828))
(assert (= (x2476 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)) x3322))
(assert (=> (<= x525 10000) (= 0 (x1863 x525))))
(assert (= (x1863 (x61 x1929 x3026 x1957 x2054)) (x61 x1929 x3026 x1957 x2054)))
(assert (= 10 (x175 (x3006 64 x1755 10))))
(assert (not (x3300 (x3006 64 x1844 36))))
(assert (x2052 x722))
(assert (= (and x3335 (not x2555)) x327))
(assert (x2052 x3446))
(assert (= (x1863 (x3006 x769 x610 x3196)) (x3006 x769 x610 x3196)))
(assert (x2052 x552))
(assert (not (x3300 (x61 x2402 x3197 x1984 x2988))))
(assert (= (or (and x3144 x3611) (and x544 x1682)) x1527))
(assert (=> (<= x1742 10000) (= (x1863 x1742) 0)))
(assert (= (and (not x1996) x3395) x1591))
(assert (x2052 x1705))
(assert (= x2012 (and x59 x3087)))
(assert (x2052 x2564))
(assert (x2052 x1706))
(assert (= 0 (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x2052 x3484))
(assert (not (x3300 (x3006 64 x745 10))))
(assert (x2052 x380))
(assert (=> (<= x549 10000) (= 0 (x1863 x549))))
(assert (x2052 x1159))
(assert (x2052 x1314))
(assert (not (x3300 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (= x795 (and (not x2527) x129)))
(assert (=> (<= x3322 10000) (= 0 (x1863 x3322))))
(assert (= (x1938 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508)) x3536))
(assert (not (x3300 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (< 10000 (x3579 x3511 x1924 x2410 x89 x3281 x3380)))
(assert (x24 127))
(assert (= (x1938 (x3006 x1076 x3627 x677)) x3627))
(assert (= (and (not x2651) x3234) x401))
(assert (= (and x231 x3254) x1508))
(assert (x2052 x69))
(assert (x2052 x1954))
(assert (x2052 x842))
(assert (= x3320 (x175 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 x1076 x1240)))
(assert (not (x3300 (x3006 64 x2487 12))))
(assert (x2052 x3333))
(assert (not (x3300 (x1539 x1740 x60 x531 x2047 x3203))))
(assert (= x2140 (x1938 (x3006 64 x2140 100))))
(assert (x24 x397))
(assert (= 0 (x1863 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (x2052 x3512))
(assert (=> (<= x630 10000) (= (x1863 x630) 0)))
(assert (x2052 x3295))
(assert (not (x3300 (x3579 x3457 x2662 x3474 x139 x485 x3277))))
(assert (= (x1213 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x1338))
(assert (x2052 x1143))
(assert (x2052 x3086))
(assert (x2052 x1168))
(assert (< 10000 (x1836 x2402 x3639)))
(assert (x2052 x2782))
(assert (x2052 x2687))
(assert (x2052 x2066))
(assert (x2052 x2128))
(assert (= (x1875 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) x1210))
(assert (x2052 x3070))
(assert (x2052 x3296))
(assert (=> (<= x1463 10000) (= (x1863 x1463) 0)))
(assert (=> (>= 10000 x1089) (= 0 (x1863 x1089))))
(assert (x2052 x3041))
(assert (=> (<= x2989 10000) (= 0 (x1863 x2989))))
(assert (x2052 x3184))
(assert (= x3313 (and x3341 x2537)))
(assert (x2052 x2724))
(assert (= x3609 (and x1071 (not x1259))))
(assert (x2052 x1730))
(assert (x2052 x608))
(assert (= (=> (and (= (x3567 x3605) x3322) (= (>= 224 x3322) x3176)) (and (=> (and (= (x3002 (+ x3311 96)) x2581) (= (x3002 (+ 64 x3311)) x3389) (= (x3002 (+ 128 x3311)) x3346) (= (x3002 (+ x3311 32)) x1268) (= (x3567 x3636) x2373) (= x2120 (x3567 x1112)) (= x1437 (x3567 x136)) (= (x3002 (+ x3311 32)) x217) (= (x3567 x582) x1943) (= x288 (x3567 x513)) (= (x3002 (+ 192 x3311)) x2625) (= x1526 (x3567 x3311)) (= x3539 (x3567 x478)) (= x2060 (x3567 x3397)) (= (x3567 x2625) x2151) (= x2335 (x61 x3322 x4 x399 x1688)) (= x3212 (x3567 x3311)) (= (x3567 x3346) x2008) (= (x3567 x3311) x4) (= (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151) x836) (= (x3002 (+ x3311 96)) x3636) (= (x3002 (+ 32 x3311)) x513) (= (x3567 x1216) x3420) (= x478 (x3002 (+ 32 x3311))) (= x2566 (x3002 (+ x3311 96))) (= (x3002 (+ x3311 128)) x1854) (= (x3567 x2245) x3599) (= x453 (x1539 x3322 x1526 x3539 x3420 x162)) (= (x3567 x1268) x1040) (= (x3002 (+ x3311 64)) x3333) (= (> x3599 0) x2549) (= x822 (x3002 (+ x3311 32))) (= (x3002 (+ 64 x3311)) x1216) (= x162 (x3567 x2581)) (= x1095 (x3567 x1854)) (= x3109 (x3567 x822)) (= (x40 0) x286) (= (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060) x1482) (= (x3567 x154) x1633) (= x1709 (x3002 (+ x3311 96))) (= x3349 (x3567 x3311)) (= (x3002 (+ x3311 64)) x136) (= x2822 (x3567 x1709)) (= x2734 (x3567 x3333)) (= x154 (x3002 (+ x3311 128))) (= x582 (x3002 (+ x3311 32))) (= x1657 (x3567 x3311)) (= (x3567 x3311) x1430) (= (x3006 x3322 x1657 x1040) x203) (= x399 (x3567 x217)) (= (x3567 x1900) x1688) (= (x3567 x2566) x357) (= (x1836 x3322 x3349) x1780) (= (x3002 (+ 160 x3311)) x3397) (= (x3002 (+ 64 x3311)) x1900) (= (x3006 64 x2448 7) x972) (= x2758 (x3567 x3389)) (= (x3567 x3311) x324) (= x1112 (x3002 (+ x3311 160))) (= x1025 (ite (= x3322 0) x286 (ite (>= 32 x3322) x1780 (ite (>= 64 x3322) x203 (ite (<= x3322 96) x2335 (ite (<= x3322 128) x453 (ite (>= 160 x3322) x697 (ite (>= 192 x3322) x1482 (ite (<= x3322 224) x836 x903))))))))) (= (x3579 x3322 x1430 x3109 x2734 x2822 x1633) x697)) (and (=> (and (and (= (> x3599 32) x641) (= (x3567 x2017) x212)) x2549) (and (=> (and (and (= (x3002 (+ x1028 32)) x1454) (= x1020 (x1584 x2986)) (= x2474 (> x3599 64)) (= x2986 (x3002 (+ 32 x2017)))) x641) (and (=> (not x2474) x718) (=> (and (and (= (x1966 x422) x186) (= x648 (x3002 (+ 64 x1028))) (= (< 96 x3599) x2589) (= x422 (x3002 (+ x2017 64)))) x2474) (and (=> x2589 x3061) (=> (not x2589) x718))))) (=> (not x641) x718))) (=> (not x2549) x718))) x3176)) x1968))
(assert (not (x3300 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622))))
(assert (= x1085 (=> (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x598) (= x816 (+ 128 x598)) (= x721 (x3002 (+ 63 x1533))) (= (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x721) x598) (<= 1 x598)) (not x584)) (and (= 128 x816) x584)) (= (= x1533 0) x584)) x1070)))
(assert (x850 x3179))
(assert (x2052 x497))
(assert (= (and x2894 x2675) x2907))
(assert (=> (>= 10000 x221) (= (x1863 x221) 0)))
(assert (=> (>= 10000 x1612) (= (x1863 x1612) 0)))
(assert (=> (>= 10000 x2210) (= (x1863 x2210) 0)))
(assert (x2052 x2674))
(assert (x2052 x1206))
(assert (= x1740 (x2476 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (=> (>= 10000 x924) (= 0 (x1863 x924))))
(assert (= (and (not x1727) x682) x129))
(assert (x2052 x583))
(assert (x2052 x2715))
(assert (=> (>= 10000 x138) (= 0 (x1863 x138))))
(assert (x2052 x990))
(assert (= (and x1574 (not x635)) x3614))
(assert (= 7 (x175 (x3006 64 x3338 7))))
(assert (= x3251 (and (not x1365) x1689)))
(assert (=> (<= x1844 10000) (= (x1863 x1844) 0)))
(assert (= (x61 x1076 x1415 x369 x3162) (x1863 (x61 x1076 x1415 x369 x3162))))
(assert (= (x2476 (x3006 64 x1521 12)) 64))
(assert (= x3511 (x2476 (x1836 x3511 x18))))
(assert (x2052 x1083))
(assert (x2052 x1925))
(assert (x2052 x693))
(assert (= (x1863 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)) (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)))
(assert (= x3457 (x2476 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716))))
(assert (x2052 x2814))
(assert (= (x175 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) x373))
(assert (x3300 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (x2052 x1808))
(assert (= x3594 (or x1477 x1)))
(assert (= x489 (x1213 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (=> (<= x1377 10000) (= 0 (x1863 x1377))))
(assert (= (x1863 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) (x3579 x1929 x3550 x1422 x2016 x1210 x1392)))
(assert (= x2223 (x1504 (x1539 x3511 x3209 x2059 x2223 x2230))))
(assert (< 10000 (x61 x1740 x1933 x2085 x2512)))
(assert (x1834 x2357))
(assert (x2052 x2077))
(assert (x2052 x3236))
(assert (< 10000 (x1836 x3322 x3349)))
(assert (= (x1938 (x3006 64 x1917 (ite (= x2402 0) x955 (ite (<= x2402 32) x517 (ite (<= x2402 64) x1698 (ite (>= 96 x2402) x2638 (ite (<= x2402 128) x1308 (ite (>= 160 x2402) x1802 (ite (>= 192 x2402) x1464 (ite (>= 224 x2402) x3084 x1898)))))))))) x1917))
(assert (=> (>= 10000 x3642) (= (x1863 x3642) 0)))
(assert (x2052 x676))
(assert (x2052 x485))
(assert (x2052 x1454))
(assert (= x3508 (x1213 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (x2052 x78))
(assert (= x3270 (and x41 (not x3102))))
(assert (x2052 x2317))
(assert (= (and x2259 x937) x3417))
(assert (x2052 x1816))
(assert (=> (<= x2173 10000) (= (x1863 x2173) 0)))
(assert (x2052 x2206))
(assert (x2052 x2698))
(assert (x2052 x21))
(assert (x2052 x2730))
(assert (x2052 x3178))
(assert (= x2213 (and x662 x1872)))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (=> (<= x674 10000) (= (x1863 x674) 0)))
(assert (x2052 x1840))
(assert (= (and (not x468) x1319) x2071))
(assert (not (x3300 (x3006 64 x3248 36))))
(assert (=> (<= x1896 10000) (= 0 (x1863 x1896))))
(assert (= (and x1733 (not x1609)) x2718))
(assert (= (x1504 (x1539 x1740 x60 x531 x2047 x3203)) x2047))
(assert (x2052 x809))
(assert (x2052 x392))
(assert (= (x1504 (x61 x769 x2744 x2867 x2231)) x2231))
(assert (x2052 x220))
(assert (x2052 x2021))
(assert (x2052 x1995))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x3248 2)))
(assert (x2052 x908))
(assert (x2052 x1181))
(assert (x2052 x694))
(assert (=> (>= 10000 x2801) (= (x1863 x2801) 0)))
(assert (x2052 x2716))
(assert (=> (<= x1336 10000) (= (x1863 x1336) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337)))
(assert (x2052 x1428))
(assert (x24 x2300))
(assert (x2052 x2254))
(assert (x2052 x3401))
(assert (= (x2476 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x2989))
(assert (= (and x897 x2361) x3205))
(assert (x24 x353))
(assert (=> (<= x410 10000) (= 0 (x1863 x410))))
(assert (= (and (not x387) x124) x1599))
(assert (x24 x2832))
(assert (=> (>= 10000 x2427) (= (x1863 x2427) 0)))
(assert (=> (>= 10000 x963) (= (x1863 x963) 0)))
(assert (x24 x2590))
(assert (= x665 (and x2577 x712)))
(assert (=> (<= x383 10000) (= (x1863 x383) 0)))
(assert (=> (>= 10000 x2758) (= (x1863 x2758) 0)))
(assert (= (x175 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)) x1747))
(assert (= x2088 (and x3140 x1710)))
(assert (x2052 x3290))
(assert (= (x2476 (x3006 64 x2695 2)) 64))
(assert (=> (<= x981 10000) (= (x1863 x981) 0)))
(assert (= (x3006 x3511 x331 x617) (x1863 (x3006 x3511 x331 x617))))
(assert (> (x3006 64 x2695 1) 10000))
(assert (= x3376 (not (and (= (- x2073 x1546) x1665) (= (x535 x2919) x2073) (= (+ x1491 x1546) x1263) (= x1491 (x1810 x728)) (= x1263 x3292) (< (+ x1546 x1491) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1263) (>= x1263 0)))))
(assert (= (x175 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (>= 32 x2402) x517 (ite (<= x2402 64) x1698 (ite (>= 96 x2402) x2638 (ite (<= x2402 128) x1308 (ite (<= x2402 160) x1802 (ite (>= 192 x2402) x1464 (ite (>= 224 x2402) x3084 x1898)))))))))) (ite (= x2402 0) x955 (ite (>= 32 x2402) x517 (ite (<= x2402 64) x1698 (ite (>= 96 x2402) x2638 (ite (>= 128 x2402) x1308 (ite (<= x2402 160) x1802 (ite (<= x2402 192) x1464 (ite (>= 224 x2402) x3084 x1898))))))))))
(assert (x2052 x1565))
(assert (= (x1141 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) x449))
(assert (= x821 (and x17 x2608)))
(assert (= x1352 (or x1202 x884 x1842 x183 x2287 x1974 x821 x3426 x2308 x1655 x426 x703 x3025 x260)))
(assert (x2052 x3621))
(assert (x3300 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x3300 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (x2052 x1537))
(assert (= (x61 x1740 x1933 x2085 x2512) (x1863 (x61 x1740 x1933 x2085 x2512))))
(assert (x3300 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (< (x1836 x1740 x2698) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1836 x3457 x1335)))
(assert (=> (<= x1229 10000) (= (x1863 x1229) 0)))
(assert (= x2753 (x175 (x3579 x1076 x594 x2753 x1239 x1862 x842))))
(assert (=> (>= 10000 x2050) (= (x1863 x2050) 0)))
(assert (= x1499 (and x2035 x1547)))
(assert (= (and x3527 x2671) x398))
(assert (= (and x2087 (not x1253)) x465))
(assert (= (x2476 (x3006 64 x855 (ite (= x2989 0) x3428 (ite (>= 32 x2989) x3088 (ite (<= x2989 64) x62 (ite (<= x2989 96) x1846 (ite (<= x2989 128) x189 (ite (<= x2989 160) x3434 (ite (>= 192 x2989) x1234 (ite (<= x2989 224) x2661 x2885)))))))))) 64))
(assert (=> (<= x2086 10000) (= 0 (x1863 x2086))))
(assert (< (x3006 64 x1163 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x3006 64 x3168 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x1473))
(assert (x2052 x2916))
(assert (= x1229 (x1875 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521))))
(assert (=> (<= x829 10000) (= (x1863 x829) 0)))
(assert (x2052 x1191))
(assert (x2052 x1602))
(assert (=> (>= 10000 x3514) (= (x1863 x3514) 0)))
(assert (x2052 x3639))
(assert (= (x1863 (x3006 64 x1626 6)) (x3006 64 x1626 6)))
(assert (x2052 x2637))
(assert (x2052 x751))
(assert (=> (>= 10000 x369) (= (x1863 x369) 0)))
(assert (= (and x2275 x151) x396))
(assert (= (x1863 1722637450) 0))
(assert (x2052 x2256))
(assert (=> (<= x1455 10000) (= 0 (x1863 x1455))))
(assert (= (x1875 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) x1438))
(assert (= x1886 (and x1160 x2589)))
(assert (=> (<= x209 10000) (= (x1863 x209) 0)))
(assert (x2052 x186))
(assert (x2052 x1060))
(assert (= x2695 (x1938 (x3006 64 x2695 1))))
(assert (x2052 x1151))
(assert (< 10000 (x3006 64 x525 2)))
(assert (= (and x736 (not x641)) x114))
(assert (x24 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x24 x693))
(assert (x2052 x2951))
(assert (= (or (and (not x1873) x3423) (and x1769 (not x49))) x1131))
(assert (= (x1938 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) x2778))
(assert (= (x1141 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) x3005))
(assert (x2052 x3550))
(assert (x2052 x2749))
(assert (x2121 x2426))
(assert (= (x1938 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) x862))
(assert (= x2852 (and (not x3516) x226)))
(assert (x2052 x1963))
(assert (= x3189 (or (and x15 (not x2941)) (and x519 (not x1093)) (and (not x3293) x3543) (and x2144 (not x2451)))))
(assert (= (and (not x1809) x3171) x2685))
(assert (= x3591 (x1938 (x3006 64 x3591 6))))
(assert (= (x1863 (x3006 64 x1917 (ite (= x3511 0) x2751 (ite (<= x3511 32) x1496 (ite (>= 64 x3511) x1618 (ite (<= x3511 96) x2111 (ite (<= x3511 128) x1988 (ite (>= 160 x3511) x3188 (ite (<= x3511 192) x1165 (ite (>= 224 x3511) x690 x1420)))))))))) (x3006 64 x1917 (ite (= x3511 0) x2751 (ite (<= x3511 32) x1496 (ite (>= 64 x3511) x1618 (ite (<= x3511 96) x2111 (ite (<= x3511 128) x1988 (ite (<= x3511 160) x3188 (ite (<= x3511 192) x1165 (ite (>= 224 x3511) x690 x1420)))))))))))
(assert (= 0 (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (x2052 x1167))
(assert (x2052 x866))
(assert (=> (>= 10000 x1076) (= (x1863 x1076) 0)))
(assert (x2052 x724))
(assert (= (and x3107 (not x1221)) x3368))
(assert (= (x1938 (x61 x3457 x981 x1498 x1757)) x981))
(assert (< (x3006 x2039 x630 x3041) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3268 (x1504 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716))))
(assert (x2052 x1056))
(assert (x2052 x3511))
(assert (= (=> (and (= x660 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x397)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2371) (= (< 0 x2749) x647) (= x2503 (x3002 (+ x2371 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2371) (> x1028 x2371) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2371) (<= 1 x1028) (= (+ 63 x2314) x397) (= (x3002 (+ x660 x2371)) x1028)) (and (=> x647 x2906) (=> (not x647) x1968))) x3230))
(assert (< 10000 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)))
(assert (x2052 x375))
(assert (= (x175 (x3006 64 x2184 2)) 2))
(assert (x2052 x2178))
(assert (= (x1938 (x1539 x769 x1461 x734 x2730 x2983)) x1461))
(assert (= (x175 (x1539 x2402 x1309 x2463 x116 x995)) x2463))
(assert (x2052 x2333))
(assert (x2052 x2062))
(assert (x2052 x754))
(assert (= (and x888 (not x2985)) x298))
(assert (x2052 x3248))
(assert (x3300 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (x2052 x822))
(assert (x2052 x1688))
(assert (=> (>= 10000 x1963) (= 0 (x1863 x1963))))
(assert (> (x3006 64 x138 36) 10000))
(assert (= (ite (= 0 x2989) x3428 (ite (>= 32 x2989) x3088 (ite (<= x2989 64) x62 (ite (<= x2989 96) x1846 (ite (>= 128 x2989) x189 (ite (<= x2989 160) x3434 (ite (<= x2989 192) x1234 (ite (<= x2989 224) x2661 x2885)))))))) (x175 (x3006 64 x855 (ite (= x2989 0) x3428 (ite (<= x2989 32) x3088 (ite (>= 64 x2989) x62 (ite (>= 96 x2989) x1846 (ite (<= x2989 128) x189 (ite (<= x2989 160) x3434 (ite (>= 192 x2989) x1234 (ite (>= 224 x2989) x2661 x2885))))))))))))
(assert (x2052 x617))
(assert (x2052 x3413))
(assert (x2052 x1772))
(assert (x2052 x2731))
(assert (x2052 x3545))
(assert (x2052 x3197))
(assert (< (x3579 x1929 x3550 x1422 x2016 x1210 x1392) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2604))
(assert (x2052 x3504))
(assert (x2052 x2085))
(assert (x2052 x555))
(assert (= 100 (x175 (x3006 64 x3524 100))))
(assert (x2121 x1878))
(assert (not (x3300 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (>= 32 x2402) x517 (ite (<= x2402 64) x1698 (ite (<= x2402 96) x2638 (ite (<= x2402 128) x1308 (ite (<= x2402 160) x1802 (ite (<= x2402 192) x1464 (ite (<= x2402 224) x3084 x1898))))))))))))
(assert (> (x61 x2402 x3197 x1984 x2988) 10000))
(assert (x2052 x881))
(assert (x2052 x1632))
(assert (not (x3300 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (= (x3006 64 x1896 12) (x1863 (x3006 64 x1896 12))))
(assert (< (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x2658 x2402 x655 x2761 x21 x2542 x650 x898) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x1620))
(assert (= (=> (and (= (> x3552 0) x3293) (= x3552 (x3498 (- x2433 (mod (ite (> 32 x3012) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3241 (div x3342 2)) (= x2433 (x52 1 x3342)) (= (ite (> x2433 0) x3241 (x52 127 x3241)) x3012)) (and (=> (not x3293) x2878) (=> (and (and (= x952 (x52 1 x3342)) (= x605 (= 0 x952))) x3293) (and (=> (and (not x605) (= x3215 (> x3012 0))) (and (=> (not x3215) x417) (=> x3215 x2496))) (=> x605 x2004))))) x2404))
(assert (= (x2476 (x3006 64 x2487 12)) 64))
(assert (= (and x2928 x1903) x1144))
(assert (x2052 x1566))
(assert (x2052 x1560))
(assert (= (x1863 (x3006 64 x809 11)) (x3006 64 x809 11)))
(assert (= x1267 (and x3128 x2490)))
(assert (> (x3006 64 x745 10) 10000))
(assert (= x3435 (=> (and (or x27 (not x27)) (= x27 (= x1323 0))) x883)))
(assert (x2052 x1322))
(assert (x2052 x852))
(assert (x2052 x2217))
(assert (= (and x1725 (not x84)) x3565))
(assert (= (x1938 (x3006 64 x3248 6)) x3248))
(assert (= x3345 (or x3039 (and x1773 (not x3215)))))
(assert (x2052 x2761))
(assert (x2052 x1728))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3579 x3511 x1924 x2410 x89 x3281 x3380)))
(assert (= (x175 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577)) x3626))
(assert (x2052 x738))
(assert (x2052 x3514))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1539 x2989 x2743 x2944 x674 x2050)))
(assert (= (or x3046 x2718) x112))
(assert (x2052 x1672))
(assert (not (x3300 (x3006 x2989 x705 x2377))))
(assert (x2052 x1932))
(assert (= x3582 (x1938 (x3006 x3457 x3582 x900))))
(assert (x2052 x3482))
(assert (= x1958 (or x94 x1379)))
(assert (= (x1863 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (= (and x1451 (not x1760)) x41))
(assert (= 64 (x2476 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (>= 32 x3511) x1496 (ite (<= x3511 64) x1618 (ite (>= 96 x3511) x2111 (ite (<= x3511 128) x1988 (ite (<= x3511 160) x3188 (ite (<= x3511 192) x1165 (ite (>= 224 x3511) x690 x1420))))))))))))
(assert (= (x1863 (x3006 64 x3591 6)) (x3006 64 x3591 6)))
(assert (x2052 x2634))
(assert (= (x1938 (x3006 64 x3168 36)) x3168))
(assert (x2052 x1851))
(assert (= (x3006 64 x3168 36) (x1863 (x3006 64 x3168 36))))
(assert (= (x1863 (x3006 x2989 x705 x2377)) (x3006 x2989 x705 x2377)))
(assert (x2052 x1546))
(assert (x2052 x3457))
(assert (=> (<= x2140 10000) (= 0 (x1863 x2140))))
(assert (x2052 x3218))
(assert (= (x1938 (x3006 x2989 x705 x2377)) x705))
(assert (= x900 (x175 (x3006 x3457 x3582 x900))))
(assert (= (and (not x1242) x2071) x464))
(assert (x2052 x1788))
(assert (x24 x2067))
(assert (= (=> (and (= (= 0 x3578) x3597) (= false x332) (= x2561 false) (= 0 x2610)) x3597) x2906))
(assert (=> (<= x1240 10000) (= 0 (x1863 x1240))))
(assert (< 10000 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)))
(assert (x2052 x1892))
(assert (= x1264 (x1938 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386))))
(assert (x2052 x987))
(assert (x2052 x1735))
(assert (= (x450 (x3579 x1076 x594 x2753 x1239 x1862 x842)) x842))
(assert (=> (>= 10000 x1793) (= 0 (x1863 x1793))))
(assert (= (or (and x1585 x688) (and x2227 x2286)) x946))
(assert (= x2492 (x1938 (x61 x2039 x2492 x2427 x3253))))
(assert (= (x1875 (x1539 x3457 x666 x829 x3354 x3351)) x3351))
(assert (= x3639 (x1938 (x1836 x2402 x3639))))
(assert (= x1984 (x175 (x61 x2402 x3197 x1984 x2988))))
(assert (=> (>= 10000 x610) (= (x1863 x610) 0)))
(assert (= (x1875 (x2658 x2402 x655 x2761 x21 x2542 x650 x898)) x2542))
(assert (x2052 x3281))
(assert (= (and (not x1315) x1192) x3305))
(assert (=> (>= 10000 x21) (= 0 (x1863 x21))))
(assert (x2052 x373))
(assert (x1834 x3195))
(assert (x24 255))
(assert (x2052 x1557))
(assert (x2052 x3226))
(assert (x2052 x1430))
(assert (= x2829 (and x3566 x2507)))
(assert (= x2402 (x2476 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005))))
(assert (= (x1938 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060)) x324))
(assert (x2052 x547))
(assert (x2052 x3404))
(assert (x2052 x3564))
(assert (= x2402 (x2476 (x1539 x2402 x1309 x2463 x116 x995))))
(assert (x2052 x1136))
(assert (= (or x476 x2852) x1279))
(assert (x2052 x2695))
(assert (=> (>= 10000 x677) (= (x1863 x677) 0)))
(assert (x2052 x1104))
(assert (x2052 x1843))
(assert (x2052 x1445))
(assert (= (and x3577 x2139) x1624))
(assert (x2052 x1500))
(assert (= (x2476 (x61 x3322 x4 x399 x1688)) x3322))
(assert (=> (>= 10000 x210) (= (x1863 x210) 0)))
(assert (x24 x2731))
(assert (= (x1938 (x61 x2989 x221 x2177 x715)) x221))
(assert (x24 x3241))
(assert (= x374 (and x966 (not x3625))))
(assert (x2052 x2594))
(assert (x2052 x278))
(assert (= (x1863 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)))
(assert (x2052 x2758))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)))
(assert (x2052 x2565))
(assert (x2052 x1908))
(assert (= (x1836 x769 x696) (x1863 (x1836 x769 x696))))
(assert (=> (>= 10000 x3147) (= (x1863 x3147) 0)))
(assert (=> (>= 10000 x2946) (= (x1863 x2946) 0)))
(assert (x2052 x1488))
(assert (x2052 x3547))
(assert (= (x1213 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)) x2386))
(assert (= 0 (x1863 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (= (x450 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x395))
(assert (not (x3300 (x3006 64 x1260 100))))
(assert (= x3511 (x2476 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547))))
(assert (x2052 x512))
(assert (x2052 x1972))
(assert (x2052 x1037))
(assert (x2052 x1061))
(assert (= (=> (and (= x2340 x1976) (= x3342 x2023) (= x2918 x2889) (= x2311 x1060) (= 2 x839) (= x803 x1191) (= x3621 x728) (= x2799 x234) (= (x52 255 x95) x1503) (= x2926 x2724) (= x2705 x1672) (= x3228 x1290) (= 0 x913) (= x1814 x347) (= x1428 x3290) (= x1621 0) (= x913 x2554) (= x1503 x512) (= x2099 x1939)) x2559) x3155))
(assert (= (x1863 (x1539 x1740 x60 x531 x2047 x3203)) (x1539 x1740 x60 x531 x2047 x3203)))
(assert (= x884 (or (and x950 x3019) (and x120 x1343))))
(assert (x2052 x716))
(assert (= x1852 (and x1123 x33)))
(assert (not (x3300 (x3006 64 x1819 36))))
(assert (= x303 (and x3167 x1227)))
(assert (= (=> (= x74 (not (< 32 x2942))) (and x385 x74)) x785))
(assert (x2052 x502))
(assert (=> (>= 10000 x705) (= 0 (x1863 x705))))
(assert (=> (<= x2822 10000) (= 0 (x1863 x2822))))
(assert (x2052 x2190))
(assert (= (x2476 (x1836 x3457 x1335)) x3457))
(assert (x2052 x2039))
(assert (x2052 x2230))
(assert (=> (>= 10000 x1211) (= 0 (x1863 x1211))))
(assert (not (x3300 (x1836 x2989 x857))))
(assert (not (x3300 (x1836 32 104))))
(assert (x2052 x1692))
(assert (= (=> (and (= x2461 0) (= true x771) (= x2710 false)) x2805) x3075))
(assert (not (x3300 (x3006 64 x2184 36))))
(assert (= (x1863 (x3579 x1740 x3242 x637 x1928 x904 x2624)) (x3579 x1740 x3242 x637 x1928 x904 x2624)))
(assert (x2052 x2223))
(assert (x2052 x3593))
(assert (x2052 x1699))
(assert (= x2538 (and x665 (not x681))))
(assert (x2052 x3627))
(assert (=> (>= 10000 x156) (= 0 (x1863 x156))))
(assert (=> (<= x1761 10000) (= (x1863 x1761) 0)))
(assert (not (x3300 (x3579 x1929 x3550 x1422 x2016 x1210 x1392))))
(assert (x2052 x730))
(assert (= x976 (x1875 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (x2052 x1337))
(assert (x2052 x3268))
(assert (x2052 x2643))
(assert (x2052 x1751))
(assert (x2052 x2966))
(assert (= 6 (x175 (x3006 64 x3591 6))))
(assert (not (x3300 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x2271))
(assert (x2052 x2452))
(assert (x2052 x1579))
(assert (> (x3006 64 x323 6) 10000))
(assert (x2052 x2839))
(assert (= x2458 (and x444 (not x2653))))
(assert (x2052 x2602))
(assert (= (or x776 x3265) x2490))
(assert (= (x1863 (+ 1 x1289)) (x1863 x1289)))
(assert (x2052 x3044))
(assert (=> (>= 10000 x1461) (= (x1863 x1461) 0)))
(assert (=> (>= 10000 x900) (= 0 (x1863 x900))))
(assert (= true x2783))
(assert (= x3197 (x1938 (x61 x2402 x3197 x1984 x2988))))
(assert (= (and x2144 x2451) x3233))
(assert (= (x1863 (x1539 x2039 x1318 x1075 x2401 x2804)) (x1539 x2039 x1318 x1075 x2401 x2804)))
(assert (x2052 x3077))
(assert (=> (<= x3639 10000) (= 0 (x1863 x3639))))
(assert (> (x3006 64 x1877 12) 10000))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (= x1211 (x450 (x3579 x769 x2979 x3379 x932 x1868 x1211))))
(assert (=> (>= 10000 x2698) (= 0 (x1863 x2698))))
(assert (x2052 x2145))
(assert (x2052 x2291))
(assert (x1834 x3148))
(assert (=> (>= 10000 x2016) (= (x1863 x2016) 0)))
(assert (= x2227 (and x3611 (not x3144))))
(assert (= x2983 (x1875 (x1539 x769 x1461 x734 x2730 x2983))))
(assert (x3300 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (= (and x2468 x3153) x2548))
(assert (= x2129 (and x3429 x3275)))
(assert (x2052 x3210))
(assert (x2052 x1474))
(assert (= x1275 (=> (and (= x3329 36) (= false x2075) (= x2347 true)) x1170)))
(assert (= (x2476 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x769))
(assert (= (and (not x3466) x3562) x3335))
(assert (= (x2476 (x3006 64 x2695 1)) 64))
(assert (x3300 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x2052 x2016))
(assert (= x1928 (x1504 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (not (x3300 (x61 x2039 x2492 x2427 x3253))))
(assert (= (x3006 64 x1844 36) (x1863 (x3006 64 x1844 36))))
(assert (x2052 x156))
(assert (= x3031 (=> (= x1883 (not (< 32 x2103))) (and x3158 x1883))))
(assert (x2052 x3599))
(assert (= x565 (and (not x3014) x849)))
(assert (x2052 x1248))
(assert (= (x1938 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) x2755))
(assert (= x426 (and x2779 x1381)))
(assert (x3300 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (= (and x506 x2783) x1695))
(assert (x2052 x3583))
(assert (x2052 x194))
(assert (=> (>= 10000 x2778) (= (x1863 x2778) 0)))
(assert (x2052 x2239))
(assert (x2052 x1982))
(assert (= x2567 (and x2238 (not x1244))))
(assert (x24 x1261))
(assert (= x2906 x319))
(assert (x24 x2842))
(assert (x2052 x2581))
(assert (x2052 x740))
(assert (x2052 x2846))
(assert (= (and x1508 (not x2875)) x3604))
(assert (= 0 (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (not (x3300 (x3006 64 x1896 12))))
(assert (= (x1863 (x1836 x2989 x857)) (x1836 x2989 x857)))
(assert (> (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577) 10000))
(assert (x2052 x447))
(assert (=> (<= x3281 10000) (= 0 (x1863 x3281))))
(assert (x2052 x2000))
(assert (< (x1539 x1929 x623 x477 x2229 x716) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1636 (=> (and (= (- x1921 x1632) x3101) (= (x1686 x2919) x908) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x908 x1632)) (= x1030 x184) (= x2517 (x52 255 x1754)) (= (+ x908 x1632) x1030) (>= x1030 0) (= x3246 x2790) (= x1328 2) (= (x2771 x728) x1921)) x1117)))
(assert (x2052 x3445))
(assert (not (x3300 (x1836 x2039 x2946))))
(assert (x2052 x3390))
(assert (x2052 x1280))
(assert (= x1755 (x1938 (x3006 64 x1755 10))))
(assert (x2052 x876))
(assert (=> (<= x1862 10000) (= 0 (x1863 x1862))))
(assert (x2052 x2284))
(assert (x2052 x471))
(assert (x1834 x3409))
(assert (not (x3300 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (<= x3511 32) x1496 (ite (<= x3511 64) x1618 (ite (<= x3511 96) x2111 (ite (<= x3511 128) x1988 (ite (>= 160 x3511) x3188 (ite (>= 192 x3511) x1165 (ite (>= 224 x3511) x690 x1420))))))))))))
(assert (= (x1863 1461501637330902918203684832716283019655932542975) 0))
(assert (x2052 x2462))
(assert (x2052 x1380))
(assert (= x1437 (x1504 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060))))
(assert (= (and x3229 x1798) x2996))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1344 36)))
(assert (x2052 x1335))
(assert (= x2373 (x1875 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060))))
(assert (= (x175 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) x3118))
(assert (= (x1863 (x3006 64 x2448 7)) (x3006 64 x2448 7)))
(assert (x2052 x3005))
(assert (= (=> (and (= (x1986 x3479) x3261) (= (not (< 32 x1613)) x1124)) (and x1124 (=> (= 32 x761) x394))) x2659))
(assert (=> (>= 10000 x89) (= (x1863 x89) 0)))
(assert (x2052 x234))
(assert (x2052 x1334))
(assert (< (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3300 (x40 0))))
(assert (x2052 x964))
(assert (= x2413 (=> (and (= x1429 false) (= 36 x672) (= true x1079)) x1625)))
(assert (= x1731 (and (not x764) x464)))
(assert (x2052 x381))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x945 36)))
(assert (x2052 x1321))
(assert (x2052 x2925))
(assert (> (x3006 64 x1844 36) 10000))
(assert (x2052 x622))
(assert (= (x1863 (x3006 64 x1344 36)) (x3006 64 x1344 36)))
(assert (< 10000 (x3579 x1740 x3242 x637 x1928 x904 x2624)))
(assert (< 10000 (x1539 x1929 x623 x477 x2229 x716)))
(assert (= (=> (= (= x2690 0) x2507) (and (=> (and (and (= x3278 x2645) (= true x1449) (= false x483)) x2507) x3163) (=> (and (and (= (x896 x2695) x1751) (= (>= x1751 x1654) x72) (= x1081 (< (+ x1654 x3355) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (and x72 x1081) x2082) (= (x2725 x2889) x1262) (= (x107 128) x1654) (>= x1262 1) (= x3175 160) (= (x896 x2889) x3355)) (not x2507)) (and (=> (and (and (= x1290 x3190) (= x2099 x3302) (= x1344 x138) (= x1932 x728) (= x954 x1428) (= 0 x1750) (= x347 x1556) (= x2926 x2530) (= x1672 x3400) (= x1713 x206) (= x314 x1060) (= x803 x2586) (= x3574 0) (= x3218 x1976) (= x1138 x2889) (= x3342 x342)) (not x2082)) x1397) (=> (and x2082 (and (= (x1182 x2889) x603) (<= 0 x2342) (= x2607 (- x663 x1654)) (= x1727 (= x2889 x974)) (= x663 (x896 x2695)) (<= x2342 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2342 x420) (= x2342 (+ x603 x1654)) (< (+ x1654 x603) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (=> (and (and (= false x702) (<= x1128 127) (= x3045 (x2725 x2919)) (= x2432 36) (= x1003 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x2695 x1317) (= false x2124) (>= 1461501637330902918203684832716283019655932542975 x2889) (= 1341992515 x3362) (= x2527 true) (>= 127 x1128) (>= x2889 1) (>= x3045 1) (= x2889 x2919)) (not x1727)) (and (=> (and (= x1259 (= x2695 x728)) x2527) (and (=> (and x1259 (and (<= x1344 255) (= x3527 (= 255 x1344)))) (and (=> (and x3527 (and (= x3517 true) (= false x2040) (= x3329 36))) x1170) (=> (and (and (= (x52 255 x220) x3248) (= (x52 255 x220) x2860) (= x2241 (x3006 64 x1344 36)) (= (x1531 x2241) x1349) (= (= 0 x1349) x701) (= (+ x1344 1) x220)) (not x3527)) (and (=> (and (= (= x1349 1) x3227) (not x701)) (and (=> (and (= x1247 (= 255 x3248)) x3227) (and (=> x1247 x509) (=> (and (not x1247) (and (= x2657 (= 255 x2487)) (= x3198 (x52 255 x2890)) (= x2890 (+ x3248 1)) (= (x52 255 x2890) x2487) (>= 65535 x642) (= (x1004 x1573) x642) (= x1573 (x3006 64 x3248 6)))) (and (=> x2657 x1275) (=> (and (not x2657) (and (= x2573 (div x2099 2)) (= (x52 1 x2099) x532) (= (+ x2487 1) x3267) (= (x3498 (- x532 (mod (ite (< x2103 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x522) (= x2451 (< 0 x522)) (= x2103 (ite (< 0 x532) x2573 (x52 127 x2573))) (>= 18446744073709551615 x3178) (= x1876 (x3006 64 x2487 12)) (= x2831 (x52 255 x3267)) (= x224 (x52 255 x3267)) (= (x1787 x1876) x3178))) (and (=> (and x2451 (and (= x3581 (= x1334 0)) (= (x52 1 x2099) x1334))) (and (=> (and (not x3581) (= (< 0 x2103) x2765)) (and (=> (not x2765) x3158) (=> x2765 x3031))) (=> (and x3581 (and (= (* (ite (not (= x2103 0)) 1 0) 32) x1580) (or (= x1580 32) (= x1580 0)))) x2404))) (=> (not x2451) x2878))))))) (=> (and (not x3227) (= x3332 (= x1349 2))) (and (=> (and (= (= x3248 255) x3040) x3332) (and (=> (and (not x3040) (and (= x1521 (x52 255 x253)) (= x2837 (= x1521 255)) (= (x1004 x3371) x51) (= x644 (x52 255 x253)) (<= x51 65535) (= x3371 (x3006 64 x3248 6)) (= x253 (+ x3248 1)))) (and (=> x2837 x1275) (=> (and (and (= x2067 (+ 1 x1521)) (= (x52 1 x2099) x2708) (<= x2528 18446744073709551615) (= (x3006 64 x1521 12) x1813) (= x2098 (x3498 (- x2708 (mod (ite (> 32 x3383) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1093 (< 0 x2098)) (= x2528 (x1787 x1813)) (= x1022 (div x2099 2)) (= x3446 (x52 255 x2067)) (= x1653 (x52 255 x2067)) (= (ite (> x2708 0) x1022 (x52 127 x1022)) x3383)) (not x2837)) (and (=> (and (and (= (= x2634 0) x1845) (= x2634 (x52 1 x2099))) x1093) (and (=> (and x1845 (and (= (* (ite (not (= 0 x3383)) 1 0) 32) x1419) (or (= 32 x1419) (= x1419 0)))) x149) (=> (and (= x1029 (< 0 x3383)) (not x1845)) (and (=> (not x1029) x1829) (=> x1029 x1980))))) (=> (not x1093) x2878))))) (=> x3040 x509))) (=> (and (not x3332) (= x935 (= 3 x1349))) (and (=> (and (= (= x1349 4) x1997) (not x935)) (and (=> (and (= x937 (= 5 x1349)) (not x1997)) (and (=> (and x937 (= (= x3248 255) x689)) (and (=> x689 x509) (=> (and (not x689) (and (= x277 (x52 255 x1708)) (= (x3006 64 x3248 36) x1434) (= x323 (x52 255 x1708)) (= (= x323 255) x1462) (= x1632 (x1531 x1434)) (= (+ 1 x3248) x1708))) (and (=> x1462 x11) (=> (and (and (<= x3338 65535) (= x2172 (x3006 64 x323 6)) (= x3338 (x1004 x2172)) (= x3256 (x52 255 x856)) (= x3238 (= x3441 255)) (= x3441 (x52 255 x856)) (= x856 (+ x323 1))) (not x1462)) (and (=> (and (not x3238) (and (= x3226 (x52 255 x1754)) (= x3416 (ite (> x627 0) x2426 (x52 127 x2426))) (= x1307 (x3498 (- x627 (mod (ite (> 32 x3416) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3006 64 x3441 12) x3182) (= x1917 (x1787 x3182)) (= x627 (x52 1 x2099)) (= x1873 (> x1307 0)) (= (+ 1 x3441) x1754) (= x1899 (x52 255 x1754)) (= x2426 (div x2099 2)) (<= x1917 18446744073709551615))) (and (=> (not x1873) x3467) (=> (and x1873 (and (= (= x58 0) x3577) (= (x52 1 x2099) x58))) (and (=> (and (and (= (x52 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2099) x148) (= (* 32 (ite (not (= x3416 0)) 1 0)) x274) (= x1864 (+ x274 292)) (or (= x274 32) (= 0 x274))) x3577) x2665) (=> (and (and (= (x1836 32 103) x1400) (= x3357 (< 0 x3416))) (not x3577)) (and (=> (and (= 0 x251) (not x3357)) x330) (=> x3357 x789))))))) (=> x3238 x585))))))) (=> (and (not x937) (= x1774 (= x1349 6))) (and (=> (and x1774 (= x3358 (= 255 x3248))) (and (=> x3358 x509) (=> (and (not x3358) (and (= (x1531 x3219) x911) (= x564 (x52 255 x1474)) (= x1844 (x52 255 x1474)) (= (= 255 x1844) x635) (= x1474 (+ 1 x3248)) (= x3219 (x3006 64 x3248 36)))) (and (=> x635 x11) (=> (and (and (= (x52 255 x2823) x2244) (= x2823 (+ 1 x1844)) (= (x52 255 x2823) x3168) (= (x3006 64 x1844 36) x1103) (= (x1531 x1103) x1994) (= x1694 (= 255 x3168))) (not x635)) (and (=> x1694 x1275) (=> (and (not x1694) (and (= (+ 1 x3168) x984) (= x2631 (x52 255 x984)) (= x1244 (= 255 x2631)) (= (x52 255 x984) x196) (= x2719 (x1531 x886)) (= (x3006 64 x3168 36) x886))) (and (=> x1244 x585) (=> (and (not x1244) (and (= x1985 128) (= x890 (x52 255 x796)) (= (= 0 x3411) x1044) (= x3411 (x2725 x728)) (= (+ 1 x2631) x796) (= (x52 255 x796) x3090) (= x661 (x1531 x1512)) (= (x3006 64 x2631 36) x1512))) (and (=> (and (and (= x2494 false) (= x3329 0) (= x1784 true)) x1044) x1170) (=> (and (and (and (= x2153 (and x2642 x3157)) (= x3157 (>= x2057 x911)) (= x2057 (x535 x2919)) (= (x535 x728) x1952) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1952 x911)) x2642)) (or (and x2153 (and (= 486791245 x1196) (<= x349 127) (= x1256 (- x2279 x911)) (= x1331 true) (= x820 false) (= x1456 (+ x2789 x911)) (= x1558 x1456) (= false x1147) (= x3593 (x1703 x728)) (= x2789 (x3114 x2919)) (= x1994 x2679) (= (- x1396 x911) x1052) (<= 0 x1456) (= (x535 x2919) x2279) (<= 1 x1010) (= false x281) (< (+ x911 x2789) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2725 x2695) x1010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137) (= x3413 x2719) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1456) (< (+ x911 x3593) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1137 2) (= x433 x3413) (= x1396 (x308 x728)) (= x741 x2679) (= x1036 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= (x52 255 x796) x482) (= (+ x3593 x911) x137) (= x137 x1417) (= 100 x2877) (= x2702 100) (= x661 x454) (= x2975 x454) (<= x349 127) (<= 0 x137))) (and (= 0 x2877) (not x2153)))) (not x1044)) x304))))))))))) (=> (and (not x1774) (= x1257 (= 7 x1349))) (and (=> (and x1257 (= (= x3248 255) x1885)) (and (=> (and (not x1885) (and (= (x52 255 x2384) x2520) (= (= x300 0) x1365) (<= x447 1461501637330902918203684832716283019655932542975) (= (+ 1 x3248) x2384) (= (x2725 x728) x300) (= x447 (x1426 x1627)) (= x1627 (x3006 64 x3248 2)) (= x1971 128) (= (x52 255 x2384) x427))) (and (=> (and x1365 (and (= false x1850) (= 0 x3329) (= x3034 true))) x1170) (=> (and (and (<= x2257 127) (= false x2138) (= (x2725 x2695) x2844) (= x1894 36) (>= 127 x2257) (= 2770781680 x1749) (= x447 x2762) (= x1050 74700126319118050543342327103397598470879858733489597287354029460387927162880) (<= x1976 1461501637330902918203684832716283019655932542975) (= x878 false) (<= 1 x2844) (= (= x1976 x2919) x1858)) (not x1365)) (and (=> (and (not x1858) (and (= x1982 100) (= x1134 false) (= x992 true))) x297) (=> (and (and (= (x535 x2695) x2887) (= (< 0 x2887) x536)) x1858) (and (=> (and (and (= x3575 x3342) (= x1333 x2926) (= x728 x2647) (= x427 x3274) (= x2099 x2109) (= x352 x1713) (= x803 x157)) (not x536)) x2189) (=> (and x536 (and (= x1557 128) (= (and x1806 x2412) x1690) (= x919 (x535 x447)) (= x1806 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2887 x919))) (= (>= x555 x2887) x2412) (= x555 (x535 x2695)))) (and (=> (and x1690 (and (and (= (x2704 x447) x3540) (< (+ x3540 x2887) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1809 (< 0 x1399)) (= x1299 x1047) (= (+ x2887 x3540) x1299) (>= x1299 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1299) (= (x535 x2695) x1492) (= (- x1492 x2887) x2932)) (or (and (not x1809) (and (= x3186 x427) (= x1701 x1713) (= x728 x753) (= x3089 x803) (= x3342 x3263) (= x1590 x2099) (= x2926 x2437))) (and (and (= x3186 x854) (= x2332 x1590) (= x2437 x2323) (= (= x980 (x1910 x447)) x429) (= x2992 x1701) (= x2036 x753) x429 (= x980 (x2064 x447)) (= x320 (x2064 x2695)) (= x3047 (<= x320 (x1910 x2695))) (>= 4294967295 x2185) x3047 (= x248 x3263) (= x3089 x2602)) x1809)))) x1195) (=> (and (not x1690) (and (= x1533 0) (= x31 x728) (= x3342 x1537) (= x1237 x427) (= x1713 x411) (= x3402 x803) (= x1104 x2099) (= x2620 x2926) (= x2398 0))) x1085))))))))) (=> x1885 x509))) (=> (and (not x1257) (= (= x1349 8) x3410)) (and (=> (and (= x2074 (= 255 x3248)) x3410) (and (=> (and (not x2074) (and (= (x52 255 x85) x2193) (= x276 (x2725 x728)) (= x85 (+ x3248 1)) (= (= x276 0) x3087) (= (x3006 64 x3248 36) x192) (= x994 128) (= x3122 (x1531 x192)) (= (x52 255 x85) x1978))) (and (=> (and (not x3087) (and (>= x1405 1) (= x1405 (x2725 x2695)) (= false x1549) (= x1797 false) (>= 127 x466) (= 36 x457) (<= x1976 1461501637330902918203684832716283019655932542975) (= x2133 1313998243) (= x1937 35425322552009646506518338594398286811668114190755561836384294568426616127488) (<= x466 127) (= (= x1976 x2919) x2053) (= x1915 x3122))) (and (=> (and (= (< x3122 100000) x899) x2053) (and (=> (and (and (= x1978 x1329) (= 0 x597) (= x347 x942) (= x2889 x3531) (= x1672 x3184) (= x2291 1) (= x951 x2099) (= x2354 x2696) (= x1976 x917) (= x803 x1061) (= x2696 (x1531 x192)) (= x3161 x3342) (= x2926 x3000) (= x1713 x337) (= x3130 x728) (= x1290 x1408) (= x526 x1060)) (not x899)) x230) (=> (and x899 (and (= x2454 false) (= x3504 4) (= x1035 true))) x626))) (=> (and (and (= 100 x3504) (= false x2106) (= x1291 true)) (not x2053)) x626))) (=> (and x3087 (and (= true x263) (= x3329 0) (= false x806))) x1170))) (=> x2074 x509))) (=> (and (not x3410) (and (= x2407 x347) (= x2889 x2306) (= x2099 x2365) (= x2356 x1428) (= x3248 x1086) (= x728 x2348) (= x2208 x803) (= x1007 x1672) (= x1290 x1497) (= x3342 x3174) (= x1940 x2926) (= x3592 x1976) (= x176 x1060) (= x1713 x2312))) x714))))))))) (=> (and (= (= x3248 255) x2329) x1997) (and (=> x2329 x509) (=> (and (not x2329) (and (= x1546 (x1531 x2726)) (= x313 (+ 1 x3248)) (= (x52 255 x313) x1457) (= x2726 (x3006 64 x3248 36)) (= (= x2140 255) x3165) (= (x52 255 x313) x2140))) (and (=> x3165 x11) (=> (and (and (= x3073 (+ 1 x2140)) (= x676 (x3231 x3500)) (= x3500 (x3006 64 x2140 100)) (= (x52 255 x3073) x1163) (= (x52 255 x3073) x3060) (= x2847 (= 255 x1163))) (not x3165)) (and (=> x2847 x1275) (=> (and (not x2847) (and (= x1000 (x535 x728)) (= x1201 (and x957 x2411)) (= x1772 (x52 255 x3098)) (= (x535 x2919) x756) (= (+ x1163 1) x3098) (= x3076 (x3006 64 x1163 36)) (= x2411 (>= x756 x1546)) (= x957 (< (+ x1546 x1000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1531 x3076) x1006) (= (x52 255 x3098) x365))) (and (=> (and (and (= true x2729) (= 0 x3329) (= x2201 false)) (not x1201)) x1170) (=> x1201 x3376))))))))))) (=> (and x935 (= (= x3248 255) x3625)) (and (=> x3625 x509) (=> (and (not x3625) (and (= x1260 (x52 255 x1261)) (= (= x1260 255) x1822) (= x1843 (x52 255 x1261)) (= (+ 1 x3248) x1261) (= x2733 (x3006 64 x3248 36)) (= (x1531 x2733) x25))) (and (=> (and (not x1822) (and (or (and (and (= false x2786) (= x25 x757) (= 68 x317) (= false x1288) (<= 1 x3438) (= (x2725 x2695) x3438) (>= 127 x461) (= false x1882) (>= 127 x461) (= true x2327) (= x3329 100) (= x1511 x600) (= x1057 false) (= true x3134) (= 2 x404) (= (x52 255 x353) x2378) (= 3957931183 x1167) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x2317)) (not x824)) (and (and (= x3329 0) (= x3436 false) (= x1639 true)) x824)) (and (= (+ x1260 1) x353) (= (x2725 x728) x1241) (= (x3231 x1176) x600) (= x1176 (x3006 64 x1260 100)) (= (= x1241 0) x824) (= x1270 (x52 255 x353)) (= 128 x2582) (= x2820 (x52 255 x353))))) x1170) (=> x1822 x11))))))))))) (=> (and x701 (= x1315 (= x3248 255))) (and (=> x1315 x509) (=> (and (not x1315) (and (= x2452 (x52 255 x1902)) (= (x3006 64 x3248 2) x266) (<= x2478 1461501637330902918203684832716283019655932542975) (= x2478 (x1426 x266)) (= x382 (= x3591 255)) (= x1902 (+ x3248 1)) (= (x52 255 x1902) x3591))) (and (=> (and (and (<= x1652 65535) (= (x52 255 x2357) x1469) (= x468 (= 255 x3607)) (= (+ x3591 1) x2357) (= (x52 255 x2357) x3607) (= x1652 (x1004 x2453)) (= (x3006 64 x3591 6) x2453)) (not x382)) (and (=> (and (not x468) (and (= x452 (x52 255 x2575)) (= (= 255 x1274) x1242) (= x2303 (x1426 x685)) (= x685 (x3006 64 x3607 2)) (= x1274 (x52 255 x2575)) (>= 1461501637330902918203684832716283019655932542975 x2303) (= (+ 1 x3607) x2575))) (and (=> x1242 x585) (=> (and (not x1242) (and (= x95 (+ 1 x1274)) (= x764 (= x2233 0)) (= (x1531 x493) x2344) (= x2703 (x52 255 x95)) (= x3269 (x52 255 x95)) (= x2233 (x2725 x728)) (= 128 x866) (= (x3006 64 x1274 36) x493))) (and (=> (and (not x764) (and (= (x2725 x2695) x1827) (= (= x2919 x1976) x2383) (= x2478 x1502) (= x1161 false) (= x3307 132) (<= x13 127) (= x2303 x1444) (= 3812630263 x2910) (= x3193 false) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x2604) (>= 127 x13) (= x3126 x2344) (>= 1461501637330902918203684832716283019655932542975 x1976) (>= x1827 1) (= x1652 x1231))) (and (=> (and x2383 (= x2651 (> 100000 x2344))) (and (=> (and (and (= x1976 x2340) (= x2099 x1939) (= x2724 x2926) (= x803 x1191) (= x1621 1) (= x656 x3228) (= (x1426 x266) x656) (= x2554 x1713) (= x1060 x2311) (= x3342 x2023) (= x1069 x2918) (= 0 x234) (= x791 x3290) (= x1672 x2705) (= x3269 x512) (= x3621 x728) (= (x1426 x685) x1069) (= x1168 x1814) (= x791 (x1531 x493)) (= (x1004 x2453) x1168)) (not x2651)) x2559) (=> (and (and (= x1564 false) (= 4 x2799) (= x2209 true)) x2651) x3155))) (=> (and (not x2383) (and (= 100 x2799) (= true x931) (= x1707 false))) x3155))) (=> (and x764 (and (= 0 x3329) (= x2876 false) (= true x1775))) x1170))))) (=> x468 x1275))) (=> x382 x11))))))))) (=> (and (and (= 0 x3329) (= true x1990) (= false x499)) (not x1259)) x1170))) (=> (and (and (= x3329 0) (= true x23) (= x2240 false)) (not x2527)) x1170))) (=> (and (and (= x1345 36) (<= x2711 127) (= x2394 (x2725 x974)) (= x738 x2695) (= false x190) (>= x2394 1) (= x1027 false) (= 1341992515 x3008) (= x3131 36180046632115354981904271164172418022085455641023445553456023893925156618240) (>= 127 x2711) (= true x216)) x1727) (and (=> (and (not x216) (and (= x237 true) (= x864 0) (= false x2318))) x1888) (=> (and x216 (and (= (> x2672 x3510) x1872) (= x2672 (x372 x3187)) (= (x3002 (+ x2672 x1654)) x3510) (= (x3006 64 x2695 1) x3187))) (and (=> (and (and (= x347 x3236) (= x3444 1) (= 0 x1098) (= x1060 x758) (= x1713 x3633) (= x608 x3342) (= x3325 x1290) (= x2926 x2516) (= x1672 x3288) (= x3200 x803) (= x3086 x1344) (= x1398 x1428) (= x3555 x728) (= x2889 x1645) (= x1976 x356) (= x3546 x2099)) (not x1872)) x2913) (=> (and x1872 (and (= false x3570) (= true x488) (= x864 36))) x1888))))))))))) x2387))
(assert (x2052 x3045))
(assert (x2052 x171))
(assert (= (and x2826 x1958) x703))
(assert (= x1829 x149))
(assert (x2052 x2562))
(assert (= x385 x3170))
(assert (x2052 x1290))
(assert (x2052 x705))
(assert (x2052 x1984))
(assert (x2052 x3266))
(assert (=> (<= x2434 10000) (= (x1863 x2434) 0)))
(assert (x2052 x2231))
(assert (= (x1938 (x61 x1929 x3026 x1957 x2054)) x3026))
(assert (= x1911 (and x2996 (not x310))))
(assert (> (x61 x1076 x1415 x369 x3162) 10000))
(assert (= x2623 (and x2621 x2027)))
(assert (= x1076 (x2476 (x1836 x1076 x1240))))
(assert (= (x175 (x3006 64 x2184 6)) 6))
(assert (x2052 x2008))
(assert (= x855 (x1938 (x3006 64 x855 (ite (= 0 x2989) x3428 (ite (>= 32 x2989) x3088 (ite (>= 64 x2989) x62 (ite (>= 96 x2989) x1846 (ite (>= 128 x2989) x189 (ite (>= 160 x2989) x3434 (ite (>= 192 x2989) x1234 (ite (>= 224 x2989) x2661 x2885))))))))))))
(assert (x2052 x427))
(assert (= (x1504 (x61 x1740 x1933 x2085 x2512)) x2512))
(assert (x2052 x1435))
(assert (x2052 x3224))
(assert (x2052 x911))
(assert (x2052 x3631))
(assert (x850 x2146))
(assert (= (x2476 (x3006 x1740 x807 x2973)) x1740))
(assert (x2052 x1333))
(assert (= (and x2506 (not x1690)) x2871))
(assert (x2052 x619))
(assert (x2052 x952))
(assert (< (x3006 x1929 x2933 x2130) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1863 (x3579 x3457 x2662 x3474 x139 x485 x3277)) (x3579 x3457 x2662 x3474 x139 x485 x3277)))
(assert (x2052 x2042))
(assert (= (x1863 (x1836 32 103)) (x1836 32 103)))
(assert (x2052 x153))
(assert (x2052 x1254))
(assert (x2052 x1309))
(assert (x2052 x2405))
(assert (=> (>= 10000 x2889) (= 0 (x1863 x2889))))
(assert (=> (<= x1928 10000) (= (x1863 x1928) 0)))
(assert (x2052 x492))
(assert (= (and x2280 x701) x1192))
(assert (= x3212 (x1938 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x2447))
(assert (= x1293 (or x298 x3447)))
(assert (not (x3300 (x3006 x3322 x1657 x1040))))
(assert (= (=> (and (= (= x3156 0) x3458) (= x3156 (x2725 x728))) (and (=> (and (and (= x3329 0) (= true x2868) (= false x996)) x3458) x1170) (=> (not x3458) x1983))) x2004))
(assert (x2052 x1376))
(assert (= (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x2052 x2975))
(assert (x2052 x3083))
(assert (= x351 (x1504 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210))))
(assert (= x3382 (or x1017 x2598 x287 x1527 x3549 x946)))
(assert (x2052 x3402))
(assert (x2052 x2186))
(assert (=> (<= x2716 10000) (= 0 (x1863 x2716))))
(assert (= (x2476 (x1539 x769 x1461 x734 x2730 x2983)) x769))
(assert (= 0 (x1863 3812630263)))
(assert (= x2631 (x1938 (x3006 64 x2631 36))))
(assert (x2052 x2323))
(assert (x24 x3179))
(assert (=> (<= x3320 10000) (= 0 (x1863 x3320))))
(assert (x2052 x1231))
(assert (x2052 x1318))
(assert (= x3107 (and x1585 (not x688))))
(assert (x24 x150))
(assert (x2052 x1422))
(assert (> (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060) 10000))
(assert (= x2902 (or (and x1293 (not x27)) x3576)))
(assert (x2052 x780))
(assert (not x2772))
(assert (x2052 x2367))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 0 (x1863 2770781680)))
(assert (x2052 x314))
(assert (x2052 x1028))
(assert (x2052 x1329))
(assert (< 10000 (x1539 x2989 x2743 x2944 x674 x2050)))
(assert (x2052 x3269))
(assert (x2052 x3012))
(assert (x2052 x3338))
(assert (x24 x1878))
(assert (= (and x1731 x2383) x3234))
(assert (< 10000 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)))
(assert (x2052 x945))
(assert (= (and x354 (not x3640)) x2595))
(assert (x2052 x2165))
(assert (x2052 x606))
(assert (= (x1213 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) x2086))
(assert (= (and x3615 (not x1670)) x3140))
(assert (x2052 x2185))
(assert (= 0 (x1863 1341992515)))
(assert (= x873 (and x2331 x2812)))
(assert (x2052 x661))
(assert (not (x3300 (x3579 x2402 x2755 x1959 x2715 x1067 x1336))))
(assert (= (x1863 3628442803) 0))
(assert (= (x1938 (x1539 x1076 x1363 x1322 x96 x2434)) x1363))
(assert (not (x3300 (x3006 64 x3524 100))))
(assert (x2052 x2050))
(assert (x2052 x1129))
(assert (= 6 (x175 (x3006 64 x323 6))))
(assert (x2052 x1761))
(assert (= (x3006 x2402 x3232 x3407) (x1863 (x3006 x2402 x3232 x3407))))
(assert (x2052 x936))
(assert (x2052 x1155))
(assert (= x1626 (x1938 (x3006 64 x1626 6))))
(assert (= x1039 (and x971 (not x2424))))
(assert (= (or (and x311 (not x3367)) (and x2537 (not x3341)) (and (not x504) x2905) x3313 (and x3523 (not x1038))) x1440))
(assert (=> (>= 10000 x1075) (= (x1863 x1075) 0)))
(assert (= (x2476 (x3006 64 x3248 2)) 64))
(assert (=> (<= x1868 10000) (= 0 (x1863 x1868))))
(assert (x2052 x1801))
(assert (= x2054 (x1504 (x61 x1929 x3026 x1957 x2054))))
(assert (x2052 x306))
(assert (x1834 x353))
(assert (x2052 x778))
(assert (= x2130 (x175 (x3006 x1929 x2933 x2130))))
(assert (= x1769 (or x163 x1624)))
(assert (x2121 x3241))
(assert (x2052 x3575))
(assert (=> (>= 10000 x1212) (= (x1863 x1212) 0)))
(assert (x2052 x610))
(assert (= (x2476 (x61 x2402 x3197 x1984 x2988)) x2402))
(assert (= x1819 (x1938 (x3006 64 x1819 36))))
(assert (= x2402 (x2476 (x1836 x2402 x3639))))
(assert (= x3441 (x1938 (x3006 64 x3441 12))))
(assert (= (not (and (= (x249 x1254) x1755) (= (x3006 64 x1755 10) x3124))) x79))
(assert (x2052 x1593))
(assert (= (or x3506 x2864 x3365) x3566))
(assert (x2052 x2890))
(assert (x2052 x3572))
(assert (x2052 x2437))
(assert (= x1929 (x2476 (x61 x1929 x3026 x1957 x2054))))
(assert (= x751 (x1875 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (x2052 x2640))
(assert (=> (<= x1908 10000) (= (x1863 x1908) 0)))
(assert (=> (>= 10000 x3041) (= (x1863 x3041) 0)))
(assert (x1834 x220))
(assert (= (or x2579 x1712) x2220))
(assert (=> (<= x1917 10000) (= (x1863 x1917) 0)))
(assert (< 10000 (x3006 x1076 x3627 x677)))
(assert (= (x1863 (x3006 64 x1521 12)) (x3006 64 x1521 12)))
(assert (x2052 x1405))
(assert (x2052 x666))
(assert (not (x3300 (x1836 32 x1522))))
(assert (= x15 (or x2663 x3225)))
(assert (x2052 x2070))
(assert (x2052 x1755))
(assert (< (x1539 x769 x1461 x734 x2730 x2983) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3579 x2989 x366 x3118 x1610 x2557 x1089) 10000))
(assert (x2052 x734))
(assert (x2052 x1163))
(assert (x2052 x2672))
(assert (> (x3006 64 x2140 100) 10000))
(assert (x2052 x2130))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3579 x3457 x2662 x3474 x139 x485 x3277)))
(assert (= (x61 x3322 x4 x399 x1688) (x1863 (x61 x3322 x4 x399 x1688))))
(assert (< 10000 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)))
(assert (= x3523 (or x3247 x1271 x2389 x2756 x786)))
(assert (=> (>= 10000 x357) (= 0 (x1863 x357))))
(assert (x2052 x2279))
(assert (not (x3300 (x1539 x769 x1461 x734 x2730 x2983))))
(assert (x2052 x3322))
(assert (x1834 x2953))
(assert (= (x175 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x156))
(assert (= x1740 (x2476 (x1539 x1740 x60 x531 x2047 x3203))))
(assert (x3300 65535))
(assert (=> (>= 10000 x162) (= 0 (x1863 x162))))
(assert (x2052 x1716))
(assert (< 10000 (x1836 x3511 x18)))
(assert (not (x3300 (x3006 64 x2448 3))))
(assert (x2052 x2363))
(assert (= (x175 (x61 x769 x2744 x2867 x2231)) x2867))
(assert (x2052 x3558))
(assert (= x2787 (=> (= x3422 (not (> x1473 32))) (and x3422 x1519))))
(assert (= (x2658 x2402 x655 x2761 x21 x2542 x650 x898) (x1863 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (x2052 x1441))
(assert (x2052 x3272))
(assert (x2052 x1208))
(assert (x2052 x965))
(assert (=> (>= 10000 x885) (= 0 (x1863 x885))))
(assert (x2052 x1417))
(assert (x2052 x967))
(assert (x2052 x889))
(assert (= x1633 (x450 (x3579 x3322 x1430 x3109 x2734 x2822 x1633))))
(assert (x2052 x654))
(assert (=> (>= 10000 x2388) (= (x1863 x2388) 0)))
(assert (not (x3300 (x1836 x3457 x1335))))
(assert (x3300 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x2052 x452))
(assert (=> (<= x1984 10000) (= 0 (x1863 x1984))))
(assert (x2052 x3355))
(assert (< (x1836 x2402 x3639) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1863 x44) (x1863 (+ 1 x44))))
(assert (= x662 (and x216 x1623)))
(assert (x2052 x2719))
(assert (= x2139 (and x3423 x1873)))
(assert (x2052 x2408))
(assert (> (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (>= 32 x3511) x1496 (ite (>= 64 x3511) x1618 (ite (<= x3511 96) x2111 (ite (>= 128 x3511) x1988 (ite (>= 160 x3511) x3188 (ite (>= 192 x3511) x1165 (ite (>= 224 x3511) x690 x1420))))))))) 10000))
(assert (= x904 (x1875 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (x2052 x1961))
(assert (= x2039 (x2476 (x3006 x2039 x630 x3041))))
(assert (= (x1863 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)))
(assert (x2052 x3515))
(assert (= (x3006 64 x1274 36) (x1863 (x3006 64 x1274 36))))
(assert (= x1742 (x1875 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (= (x1836 x2039 x2946) (x1863 (x1836 x2039 x2946))))
(assert (x2052 x366))
(assert (= (x1863 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)))
(assert (x2052 x3400))
(assert (x2052 x2393))
(assert (x2052 x1036))
(assert (x2052 x3374))
(assert (x2052 x422))
(assert (x2052 x838))
(assert (x2052 x3635))
(assert (=> (>= 10000 x3536) (= 0 (x1863 x3536))))
(assert (< (x3006 64 x1521 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= x3395 (and x2473 x2132)))
(assert (> (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500) 10000))
(assert (x2052 x1249))
(assert (x2052 x1598))
(assert (= x1076 (x2476 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386))))
(assert (= (x1938 (x61 x1076 x1415 x369 x3162)) x1415))
(assert (=> (<= x2047 10000) (= (x1863 x2047) 0)))
(assert (= x1358 (or x1440 (and x647 x475))))
(assert (= x2044 (and x462 x496)))
(assert (> (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337) 10000))
(assert (= (x1863 (x40 0)) (x40 0)))
(assert (= x2640 (x450 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622))))
(assert (= x687 (or x3308 x327)))
(assert (= x94 (or x1144 (and x2928 (not x1903)))))
(assert (x2052 x1509))
(assert (= (and (not x647) x475) x2534))
(assert (x2052 x3073))
(assert (x3300 1000000000))
(assert (x2052 x1047))
(assert (x2052 x1390))
(assert (x2052 x2248))
(assert (x2052 x2371))
(assert (x2052 x1261))
(assert (x2121 x2070))
(assert (= (x1539 x2402 x1309 x2463 x116 x995) (x1863 (x1539 x2402 x1309 x2463 x116 x995))))
(assert (x2052 x1613))
(assert (=> (<= x1337 10000) (= (x1863 x1337) 0)))
(assert (not (x3300 (x61 x1740 x1933 x2085 x2512))))
(assert (=> (>= 10000 x974) (= 0 (x1863 x974))))
(assert (x2052 x494))
(assert (= (x1863 100000) 0))
(assert (x2052 x3497))
(assert (=> (>= 10000 x1859) (= (x1863 x1859) 0)))
(assert (= (and x129 x2527) x1071))
(assert (= (=> (and (= (not (< 32 x3416)) x262) (= x2272 (x1034 x1400))) (and x262 (=> (= 32 x251) x330))) x789))
(assert (=> (<= x2753 10000) (= (x1863 x2753) 0)))
(assert (= x2946 (x1938 (x1836 x2039 x2946))))
(assert (x3300 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x3300 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (= (x1863 (x1539 x1929 x623 x477 x2229 x716)) (x1539 x1929 x623 x477 x2229 x716)))
(assert (not (x3300 (x3006 64 x2448 7))))
(assert (= x1223 (x450 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386))))
(assert (= x1929 (x2476 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577))))
(assert (x2052 x532))
(assert (not (x3300 (x3006 64 x1755 10))))
(assert (x2052 x1763))
(assert (= x1379 (and x446 x272)))
(assert (not (x3300 (x3579 x3322 x1430 x3109 x2734 x2822 x1633))))
(assert (= x1169 (and (not x2474) x1779)))
(assert (= 0 (x175 (x3006 64 x2530 0))))
(assert (= (=> (and (= x978 x3442) (= x800 x1155) (= x392 x3001) (= x1215 x3403) (= x731 x596) (= x3484 x3020) (= x3476 x1736) (= x2293 x2126) (= x1175 x2811) (= x2248 x2408) (= x1743 x1566) (= x2178 x1203) (= x104 x2981) (= x3285 x2795)) x1016) x3220))
(assert (< 10000 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)))
(assert (= x1657 (x1938 (x3006 x3322 x1657 x1040))))
(assert (= (and x3091 (not x442)) x2331))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x3338 7)))
(assert (= (=> (= x3516 (> x2398 0)) (and (=> (and (and (= true x845) (= false x2959) (= x1982 4)) (not x3516)) x297) (=> (and (and (= x352 x411) (= x31 x2647) (= x1537 x3575) (= x1104 x2109) (= x3402 x157) (= x3274 x1237) (= x1333 x2620)) x3516) x2189))) x1070))
(assert (=> (>= 10000 x2973) (= (x1863 x2973) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (>= 32 x3511) x1496 (ite (>= 64 x3511) x1618 (ite (<= x3511 96) x2111 (ite (>= 128 x3511) x1988 (ite (<= x3511 160) x3188 (ite (>= 192 x3511) x1165 (ite (>= 224 x3511) x690 x1420)))))))))))
(assert (= (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597) (x1863 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597))))
(assert (= x1522 (x1938 (x1836 32 x1522))))
(assert (x2052 x2887))
(assert (=> (>= 10000 x1452) (= 0 (x1863 x1452))))
(assert (= x3291 (=> (and (= x927 x3578) (= 0 x2314) (= 1 x2749)) x3465)))
(assert (x2052 x1711))
(assert (x1834 x2206))
(assert (= x2029 (and x2259 (not x937))))
(assert (x2052 x704))
(assert (x2052 x2118))
(assert (x2052 x3118))
(assert (x2052 x1929))
(assert (x2052 x1517))
(assert (x2052 x3299))
(assert (= (and x3544 x2013) x260))
(assert (< 10000 (x3006 64 x3248 2)))
(assert (=> (<= x655 10000) (= 0 (x1863 x655))))
(assert (= 36 (x175 (x3006 64 x1163 36))))
(assert (= (=> (= (not (> x3012 32)) x2355) (and x2355 x417)) x2496))
(assert (= (=> (and (= x3329 36) (= false x2706) (= true x880)) x1170) x2878))
(assert (> (x3006 64 x3591 6) 10000))
(assert (x2052 x3156))
(assert (= x1924 (x1938 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x37))
(assert (x2052 x390))
(assert (x2052 x2953))
(assert (x2052 x3626))
(assert (=> (>= 10000 x751) (= 0 (x1863 x751))))
(assert (x2052 x756))
(assert (x2052 x3455))
(assert (> (x1836 32 x1522) 10000))
(assert (not (x3300 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577))))
(assert (= (and x1201 x198) x2150))
(assert (x2052 x3536))
(assert (x2052 x3592))
(assert (= (x450 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500)) x3558))
(assert (x2052 x2817))
(assert (x2052 x840))
(assert (= (and x815 (not x2547)) x1271))
(assert (= (and x3171 x1809) x1737))
(assert (= 0 (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2052 x1709))
(assert (= x829 (x175 (x1539 x3457 x666 x829 x3354 x3351))))
(assert (= x78 (x1875 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210))))
(assert (x2052 x3444))
(assert (= 2 (x175 (x3006 64 x525 2))))
(assert (= x197 (=> (and (= false x1643) (= true x487) (= x3246 0)) x1636)))
(assert (x2052 x295))
(assert (x2052 x1120))
(assert (x2052 x2431))
(assert (< (x61 x2989 x221 x2177 x715) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (or (and (not x2027) (and (= x1932 x2502) (= x1589 x138) (= x1556 x1443) (= x2600 x954) (= x3210 x3302) (= x1750 x2127) (= x206 x318) (= x1489 x2530) (= x2145 x3400) (= x314 x123) (= x620 x3574) (= x1138 x2850) (= x1320 x2586) (= x166 x3190) (= x342 x2674) (= x3427 x3218))) (and (and (= x3190 x166) (< (+ x1321 x1143) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x760 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x206 x318) (= x3400 x2145) (= x3218 x3427) (= x1321 (x2656 x2695)) (= x268 (- x1488 x1143)) (= x2850 x1138) (= x3210 x3302) (= x123 x314) (= x2118 x760) (= x342 x2674) (= x2600 x954) (= x1488 (x3069 x2889)) (= x2127 x1750) (= x3574 x620) (= x1489 x2530) (= x2586 x1320) (= x1556 x1443) (= x1932 x2502) (<= 0 x760) (= x760 (+ x1321 x1143)) (= x1589 x138) (= (ite (= x620 0) x1654 0) x1143)) x2027)) (= x2027 (= x620 0))) x1397) x2568))
(assert (= x2200 (=> (and (= x3529 x882) (= x2849 x1119) (= x206 x882) (= x3180 2) (= x3492 0)) x1820)))
(assert (=> (>= 10000 x447) (= (x1863 x447) 0)))
(assert (x2052 x1154))
(assert (x2052 x2263))
(assert (= (and x1670 x3615) x341))
(assert (=> (<= x3277 10000) (= (x1863 x3277) 0)))
(assert (x2121 x150))
(assert (x2052 x2187))
(assert (= (and x1611 x916) x3091))
(assert (= x2536 (or (and x1666 (not x2580)) x393)))
(assert (= (or x2553 x2065) x2416))
(assert (x3300 37212044363551391237827125972600881127463135526663889129579209803314629705728))
(assert (x2052 x1012))
(assert (x2052 x3548))
(assert (=> (<= x2487 10000) (= 0 (x1863 x2487))))
(assert (x2052 x1212))
(assert (= (and (not x2826) x1958) x2994))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1260 100)))
(assert (=> (<= x145 10000) (= 0 (x1863 x145))))
(assert (x2052 x3388))
(assert (= x1207 (and x3214 (not x726))))
(assert (x2052 x3397))
(assert (x2052 x243))
(assert (x2052 x221))
(assert (= x3322 (x2476 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x1601))
(assert (=> (>= 10000 x1392) (= 0 (x1863 x1392))))
(assert (x2052 x2120))
(assert (x2052 x350))
(assert (=> (<= x2396 10000) (= 0 (x1863 x2396))))
(assert (x2121 x2021))
(assert (x2052 x1175))
(assert (x2052 x1010))
(assert (=> (<= x477 10000) (= (x1863 x477) 0)))
(assert (= (x1863 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)))
(assert (x2052 x51))
(assert (x2052 x1203))
(assert (= x21 (x1504 (x2658 x2402 x655 x2761 x21 x2542 x650 x898))))
(assert (= 64 (x2476 (x3006 64 x2184 2))))
(assert (x2052 x2696))
(assert (= (x1504 (x3579 x3457 x2662 x3474 x139 x485 x3277)) x139))
(assert (=> (>= 10000 x1163) (= (x1863 x1163) 0)))
(assert (= x1733 (and x425 (not x1569))))
(assert (= x1844 (x1938 (x3006 64 x1844 36))))
(assert (x2052 x3375))
(assert (x2052 x1455))
(assert (=> (<= x47 10000) (= 0 (x1863 x47))))
(assert (= x2621 (or x1162 x901)))
(assert (= x710 (or x2213 x3363)))
(assert (x2052 x224))
(assert (x3300 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (=> (<= x778 10000) (= (x1863 x778) 0)))
(assert (=> (>= 10000 x1597) (= 0 (x1863 x1597))))
(assert (x2052 x839))
(assert (x2052 x58))
(assert (= (or x117 x1152) x226))
(assert (= (x2476 (x3006 64 x2184 36)) 64))
(assert (= (=> (and (= x1038 (< 0 x837)) (= (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1662) x1693) (= (x3002 (+ x3445 x2970)) x2439) (= (x3002 (+ x2588 32)) x1935) (= (x3002 (+ x3445 31)) x1662) (= x2310 (x3498 (- x3016 x1028))) (= (x2526 x2371) x837) (= x3016 (x3002 (+ x1693 x2970)))) (and (=> (and x1038 (= (> x837 32) x3367)) (and (=> (and (= x504 (< 64 x837)) x3367) (and (=> (and x504 (= x3341 (> x837 96))) (and (=> (not x3341) x319) (=> x3341 x2859))) (=> (not x504) x319))) (=> (not x3367) x319))) (=> (not x1038) x319))) x267))
(assert (x2052 x526))
(assert (x2052 x3294))
(assert (x2052 x274))
(assert (= (x450 (x3579 x2989 x366 x3118 x1610 x2557 x1089)) x1089))
(assert (x2052 x1149))
(assert (=> (>= 10000 x2448) (= 0 (x1863 x2448))))
(assert (= 0 (x1863 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (= (and x2964 x1048) x2065))
(assert (= (x1875 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) x2173))
(assert (x2052 x2831))
(assert (= (and (not x868) x303) x1343))
(assert (=> (<= x1120 10000) (= 0 (x1863 x1120))))
(assert (= (x1863 (x3006 64 x745 10)) (x3006 64 x745 10)))
(assert (x2052 x1211))
(assert (x2052 x1237))
(assert (= (x1938 (x3006 x2402 x3232 x3407)) x3232))
(assert (not (x3300 (x61 x1076 x1415 x369 x3162))))
(assert (= x1933 (x1938 (x61 x1740 x1933 x2085 x2512))))
(assert (x2052 x1069))
(assert (= (=> (and (= (x3002 (+ 96 x3311)) x334) (= x2429 (x2984 x334)) (= x959 (not (< 128 x2699))) (= (x3002 (+ x2370 96)) x1738)) (and x235 x959)) x2339))
(assert (x2052 x1922))
(assert (= (x450 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) x209))
(assert (= (and x2549 x2534) x736))
(assert (x2052 x1187))
(assert (= (x175 (x3006 64 x3248 6)) 6))
(assert (< (x1836 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3562 x3466) x2501))
(assert (= x3095 (or (and x2847 x2455) (and x2657 x1005) (and x1319 x468) (and x3614 x1694) (and x1230 x2837))))
(assert (= (x1938 (x1836 x1076 x1240)) x1240))
(assert (x2052 x1533))
(assert (x2052 x2481))
(assert (= (x1213 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622)) x3622))
(assert (=> (<= x3441 10000) (= (x1863 x3441) 0)))
(assert (= (x2476 (x3006 64 x3441 12)) 64))
(assert (= (x1504 (x61 x3457 x981 x1498 x1757)) x1757))
(assert (x2052 x2306))
(assert (not (x3300 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1539 x3511 x3209 x2059 x2223 x2230)))
(assert (x2052 x2073))
(assert (x2052 x2311))
(assert (< (x3006 x3322 x1657 x1040) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2512))
(assert (x2052 x1562))
(assert (x2052 x3067))
(assert (= (and x3234 x2651) x2369))
(assert (= x2184 (x1938 (x3006 64 x2184 36))))
(assert (x2052 x2233))
(assert (x2052 x1732))
(assert (= x1451 (and x849 x3014)))
(assert (x2052 x856))
(assert (x2052 x2344))
(assert (x2052 x672))
(assert (= x363 (and x3594 (not x1789))))
(assert (x2052 x620))
(assert (x2052 x2449))
(assert (= x1740 (x2476 (x2658 x1740 x471 x2814 x1414 x1742 x2435 x1337))))
(assert (= (x175 (x1539 x2989 x2743 x2944 x674 x2050)) x2944))
(assert (= (x3579 x2402 x2755 x1959 x2715 x1067 x1336) (x1863 (x3579 x2402 x2755 x1959 x2715 x1067 x1336))))
(assert (= (or (and x2653 x444) (and (not x3229) x1798)) x1493))
(assert (= (and x2139 (not x3577)) x309))
(assert (x2052 x1941))
(assert (x2052 x3307))
(assert (x2052 x85))
(assert (x2052 x885))
(assert (= x1526 (x1938 (x1539 x3322 x1526 x3539 x3420 x162))))
(assert (x2052 x1750))
(assert (x2052 x2857))
(assert (= x623 (x1938 (x1539 x1929 x623 x477 x2229 x716))))
(assert (x2052 x3302))
(assert (x2052 x1184))
(assert (x2052 x3161))
(assert (< (x61 x1076 x1415 x369 x3162) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x671))
(assert (=> (>= 10000 x1438) (= 0 (x1863 x1438))))
(assert (= x1536 (and (not x3227) x1245)))
(assert (= (x3006 64 x3524 100) (x1863 (x3006 64 x3524 100))))
(assert (x2052 x745))
(assert (not (x3300 (x3006 x769 x610 x3196))))
(assert (x2052 x2645))
(assert (= x2448 (x1938 (x3006 64 x2448 3))))
(assert (= x2389 (and x1403 (not x55))))
(assert (=> (>= 10000 x541) (= 0 (x1863 x541))))
(assert (= (x2476 (x3579 x3457 x2662 x3474 x139 x485 x3277)) x3457))
(assert (= (x450 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) x1336))
(assert (x2052 x3346))
(assert (x2052 x414))
(assert (x3300 1722637450))
(assert (= x3349 (x1938 (x1836 x3322 x3349))))
(assert (< 10000 (x3006 64 x3248 36)))
(assert (x2052 x155))
(assert (x2052 x758))
(assert (x2052 x2487))
(assert (=> (>= 10000 x3232) (= 0 (x1863 x3232))))
(assert (=> (<= x2500 10000) (= 0 (x1863 x2500))))
(assert (=> (>= 10000 x324) (= (x1863 x324) 0)))
(assert (= x592 (and x817 (not x935))))
(assert (x2052 x2478))
(assert (x2052 x2460))
(assert (= x932 (x1504 (x3579 x769 x2979 x3379 x932 x1868 x1211))))
(assert (x2052 x326))
(assert (=> (>= 10000 x3242) (= 0 (x1863 x3242))))
(assert (=> (<= x489 10000) (= (x1863 x489) 0)))
(assert (x2169 x3342))
(assert (=> (<= x2988 10000) (= 0 (x1863 x2988))))
(assert (x2052 x2626))
(assert (= x1555 (or (and x3305 x382) (and x1462 x434) (and x374 x1822) (and x634 x3165) (and x1574 x635))))
(assert (= (x1863 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)) (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449)))
(assert (not (x3300 (x1836 x1929 x364))))
(assert (x2052 x1119))
(assert (x2052 x2727))
(assert (= x3420 (x1504 (x1539 x3322 x1526 x3539 x3420 x162))))
(assert (= (x1863 (x1539 x1076 x1363 x1322 x96 x2434)) (x1539 x1076 x1363 x1322 x96 x2434)))
(assert (= (=> (= x1864 (+ 292 x251)) x2665) x330))
(assert (= (=> (= x1789 (= x2810 0)) (and (=> (and x1789 (and (= (> x295 x3528) x2894) (= x295 (x1078 x3513)) (= x3528 (x3002 (+ x295 x1724))) (= x3513 (x3006 64 x2695 2)))) (and (=> (and (and (= 36 x1119) (= x30 true) (= false x3027)) x2894) x2200) (=> (and (not x2894) (= x2653 (= x2530 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x206 x3529) (= false x2948) (= 1 x3492) (= (x3006 64 x2530 0) x601) (= (x3002 (+ x2530 1)) x2010) (= x775 false) (= x2849 32) (= (x3002 (+ 1 x2530)) x671) (= (+ 1 x601) x2251)) (not x2653)) x1820) (=> x2653 x3437))))) (=> (and (not x1789) (and (= 4 x1119) (= x3152 false) (= true x1681))) x2200))) x239))
(assert (> (x61 x3322 x4 x399 x1688) 10000))
(assert (= x2663 (or x923 (and (not x1029) x1927))))
(assert (< (x3006 64 x525 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x958 x3471))
(assert (x24 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2052 x1928))
(assert (= (x1863 (x3006 x3457 x3582 x900)) (x3006 x3457 x3582 x900)))
(assert (x2052 x721))
(assert (= x3109 (x175 (x3579 x3322 x1430 x3109 x2734 x2822 x1633))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x61 x3322 x4 x399 x1688)))
(assert (x2052 x2620))
(assert (= (and (not x1381) x2779) x124))
(assert (x2052 x14))
(assert (x2052 x1447))
(assert (> (x1836 x2039 x2946) 10000))
(assert (x2052 x1898))
(assert (x2052 x1323))
(assert (x2052 x1532))
(assert (x2052 x1210))
(assert (x3300 3957931183))
(assert (= 0 (x1863 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x2052 x247))
(assert (= (x1863 46442213778836376901753710468615024683576072693327014300388496345503314739200) 0))
(assert (= x3511 (x2476 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (= x2598 (or (and x1193 (not x948)) (and x3368 (not x491)))))
(assert (x2052 x1411))
(assert (x2052 x1580))
(assert (= (x1863 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)) (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547)))
(assert (< (x3006 64 x3591 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3300 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (x2052 x2811))
(assert (=> (<= x351 10000) (= (x1863 x351) 0)))
(assert (x2052 x1240))
(assert (x2052 x1146))
(assert (x24 x1022))
(assert (= (x1863 4294967295) 0))
(assert (= x3275 (and x3485 x1897)))
(assert (x2052 x522))
(assert (=> (<= x1344 10000) (= (x1863 x1344) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1819 36)))
(assert (=> (<= x1801 10000) (= 0 (x1863 x1801))))
(assert (=> (>= 10000 x3005) (= (x1863 x3005) 0)))
(assert (= 64 (x2476 (x3006 64 x1896 12))))
(assert (x2052 x2426))
(assert (=> (>= 10000 x3558) (= 0 (x1863 x3558))))
(assert (x2052 x707))
(assert (x2052 x674))
(assert (x2052 x2850))
(assert (=> (>= 10000 x740) (= 0 (x1863 x740))))
(assert (= (x1836 x3322 x3349) (x1863 (x1836 x3322 x3349))))
(assert (= (x3579 x3511 x1924 x2410 x89 x3281 x3380) (x1863 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x1645))
(assert (= x297 (=> (and (= 2 x211) (= x728 x1604) (= x654 x2926) (= x421 x1672) (= x414 x2889) (= x645 x1982) (= x803 x998) (= x329 x360) (= 0 x1956) (= x2851 x347) (= x1290 x2376) (= x1060 x1100) (= x653 x3342) (= x1704 x2099) (= x3515 (x52 255 x2384)) (= 0 x360) (= x1976 x1445) (= x3596 x3515) (= x2670 x1428)) x511)))
(assert (not (x3300 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716))))
(assert (= (x1863 1313998243) 0))
(assert (= (x1863 (x61 x769 x2744 x2867 x2231)) (x61 x769 x2744 x2867 x2231)))
(assert (> (x3006 x3457 x3582 x900) 10000))
(assert (= x815 (or x1375 x1416 x2456 x2471 x2538)))
(assert (=> (<= x3111 10000) (= (x1863 x3111) 0)))
(assert (x2052 x540))
(assert (x2052 x1994))
(assert (=> (<= x3338 10000) (= 0 (x1863 x3338))))
(assert (=> (<= x1610 10000) (= 0 (x1863 x1610))))
(assert (=> (<= x2130 10000) (= (x1863 x2130) 0)))
(assert (x1834 x796))
(assert (=> (<= x2402 10000) (= 0 (x1863 x2402))))
(assert (= (x175 (x1539 x3511 x3209 x2059 x2223 x2230)) x2059))
(assert (= x1180 (and x2220 x3028)))
(assert (= x1532 (x450 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (x24 x2953))
(assert (x2052 x741))
(assert (x2052 x794))
(assert (= x1688 (x1504 (x61 x3322 x4 x399 x1688))))
(assert (=> (<= x2626 10000) (= 0 (x1863 x2626))))
(assert (x2052 x739))
(assert (= (and x1857 x2134) x2470))
(assert (x2052 x1985))
(assert (= (x1938 (x61 x769 x2744 x2867 x2231)) x2744))
(assert (x2052 x349))
(assert (x2052 x1086))
(assert (x2052 x3510))
(assert (= (and x1453 x3387) x291))
(assert (= 12 (x175 (x3006 64 x3441 12))))
(assert (x3300 310283853))
(assert (= x2132 (and x396 x480)))
(assert (= (and x2013 (not x3544)) x183))
(assert (x2052 x1503))
(assert (x24 x2823))
(assert (x3300 53968831973089624780961702553170747426560148566936995398294956610382735605760))
(assert (x2052 x449))
(assert (x2052 x513))
(assert (not (x3300 (x3006 64 x3591 6))))
(assert (= x3406 (and x122 x824)))
(assert (=> (>= 10000 x2435) (= 0 (x1863 x2435))))
(assert (=> (<= x855 10000) (= (x1863 x855) 0)))
(assert (x2052 x2601))
(assert (x2052 x2683))
(assert (=> (>= 10000 x46) (= (x1863 x46) 0)))
(assert (x2052 x1693))
(assert (= (x2476 (x3006 64 x1626 6)) 64))
(assert (x3300 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (< (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x2435))
(assert (= x400 (=> (= x2399 (= x1621 0)) (and (=> (and (and (= true x3601) (= x586 false) (= x234 x3329)) x2399) x1170) (=> (and (and (= x2311 x3285) (= x1203 x2724) (= x2554 x3476) (= x3228 x104) (= x3442 x2023) (= x1814 x392) (= x2340 x3020) (= x2918 x1215) (= x3290 x2293) (= x1939 x596) (= x800 x2705) (= x512 x1566) (= x2408 x3621) (= x2811 x1191)) (not x2399)) x1016)))))
(assert (= x2302 x1406))
(assert (x2052 x1196))
(assert (x2052 x71))
(assert (x2052 x407))
(assert (= (or x2800 x2759) x379))
(assert (x2052 x258))
(assert (= (and x3340 (not x536)) x895))
(assert (=> (>= 10000 x2187) (= (x1863 x2187) 0)))
(assert (x2052 x2690))
(assert (= (=> (and (= false x405) (= true x2445) (= x2461 0)) x2805) x2195))
(assert (x2052 x228))
(assert (= (x175 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151)) x1943))
(assert (< 10000 (x3006 64 x945 36)))
(assert (< 10000 (x3579 x1076 x594 x2753 x1239 x1862 x842)))
(assert (x2052 x357))
(assert (= (x1863 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)))
(assert (= x1929 (x2476 (x3006 x1929 x2933 x2130))))
(assert (x2052 x1185))
(assert (x2052 x3325))
(assert (x2052 x1215))
(assert (x2052 x2402))
(assert (= (x1875 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) x1067))
(assert (=> (>= 10000 x3196) (= 0 (x1863 x3196))))
(assert (= x2039 (x2476 (x3579 x2039 x1761 x3022 x2523 x2051 x1831))))
(assert (> (x3006 64 x2487 12) 10000))
(assert (< 10000 (x1836 32 104)))
(assert (x2052 x104))
(assert (= (and x1171 x3458) x2748))
(assert (= x1983 false))
(assert (= x3480 (and (not x3028) x2220)))
(assert (x2052 x482))
(assert (not (x3300 (x3006 64 x809 11))))
(assert (x2052 x2089))
(assert (= (x1863 53968831973089624780961702553170747426560148566936995398294956610382735605760) 0))
(assert (=> (>= 10000 x3539) (= (x1863 x3539) 0)))
(assert (= (x175 (x3006 x3322 x1657 x1040)) x1040))
(assert (= x210 (x1141 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210))))
(assert (= x402 (and x2399 x2442)))
(assert (= (x1836 32 104) (x1863 (x1836 32 104))))
(assert (x2052 x811))
(assert (x2052 x598))
(assert (= (and x1487 (not x3238)) x3423))
(assert (= x2026 (or x983 x1683)))
(assert (x2052 x893))
(assert (x2052 x3228))
(assert (< (x3579 x769 x2979 x3379 x932 x1868 x1211) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x304 (=> (and (= x3329 x2877) (= false x1916) (= true x1991)) x1170)))
(assert (x2052 x3145))
(assert (x24 x2575))
(assert (= (x175 (x61 x2039 x2492 x2427 x3253)) x2427))
(assert (x2052 x800))
(assert (= (x1141 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x521))
(assert (= x354 (and (not x2346) x2949)))
(assert (x2052 x812))
(assert (x2052 x2557))
(assert (x2052 x2463))
(assert (=> (<= x3253 10000) (= (x1863 x3253) 0)))
(assert (x2052 x1971))
(assert (x2052 x2060))
(assert (=> (<= x1521 10000) (= 0 (x1863 x1521))))
(assert (=> (>= 10000 x485) (= (x1863 x485) 0)))
(assert (x2052 x2856))
(assert (x3300 18563399957492015340621713183830377045030061062230639968016343144629396307968))
(assert (not (x3300 (x3006 64 x1344 36))))
(assert (x2052 x1590))
(assert (= (x2476 (x3006 64 x1260 100)) 64))
(assert (= (and x1465 (not x1306)) x849))
(assert (x2052 x3008))
(assert (< 10000 (x3006 64 x1819 36)))
(assert (x2052 x2744))
(assert (> (x3006 64 x3338 7) 10000))
(assert (= (x2476 (x1836 x1929 x364)) x1929))
(assert (=> (<= x3407 10000) (= (x1863 x3407) 0)))
(assert (x2052 x1076))
(assert (= (and (not x743) x3604) x1222))
(assert (= 0 (x1863 3521034783)))
(assert (x2052 x2799))
(assert (x2052 x1098))
(assert (=> (>= 10000 x1929) (= (x1863 x1929) 0)))
(assert (=> (<= x3109 10000) (= 0 (x1863 x3109))))
(assert (=> (>= 10000 x3582) (= (x1863 x3582) 0)))
(assert (x2052 x3407))
(assert (x24 x3409))
(assert (x3300 1461501637330902918203684832716283019655932542975))
(assert (= x2341 (or x1960 x2129)))
(assert (x2052 x116))
(assert (= x769 (x2476 (x61 x769 x2744 x2867 x2231))))
(assert (x2052 x1783))
(assert (x2052 x1583))
(assert (= (x3006 64 x855 (ite (= x2989 0) x3428 (ite (>= 32 x2989) x3088 (ite (<= x2989 64) x62 (ite (<= x2989 96) x1846 (ite (>= 128 x2989) x189 (ite (<= x2989 160) x3434 (ite (>= 192 x2989) x1234 (ite (<= x2989 224) x2661 x2885))))))))) (x1863 (x3006 64 x855 (ite (= x2989 0) x3428 (ite (>= 32 x2989) x3088 (ite (>= 64 x2989) x62 (ite (<= x2989 96) x1846 (ite (<= x2989 128) x189 (ite (<= x2989 160) x3434 (ite (<= x2989 192) x1234 (ite (<= x2989 224) x2661 x2885))))))))))))
(assert (x2052 x3600))
(assert (x2052 x1819))
(assert (x2052 x1396))
(assert (= (=> (and (= false x2963) (= x1484 true) (= x1119 0)) x2200) x3437))
(assert (< (x1539 x3322 x1526 x3539 x3420 x162) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x175 (x1539 x2039 x1318 x1075 x2401 x2804)) x1075))
(assert (=> (<= x745 10000) (= (x1863 x745) 0)))
(assert (= (x2476 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622)) x769))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1917 (ite (= x2402 0) x955 (ite (>= 32 x2402) x517 (ite (>= 64 x2402) x1698 (ite (>= 96 x2402) x2638 (ite (<= x2402 128) x1308 (ite (<= x2402 160) x1802 (ite (<= x2402 192) x1464 (ite (>= 224 x2402) x3084 x1898)))))))))))
(assert (x2052 x145))
(assert (= (x1141 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) x2716))
(assert (= x122 (and x374 (not x1822))))
(assert (x2052 x1157))
(assert (= x1706 (x175 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383))))
(assert (=> (<= x2462 10000) (= (x1863 x2462) 0)))
(assert (= (and (not x1122) x1367) x2756))
(assert (not (x3300 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521))))
(assert (x2052 x34))
(assert (=> (>= 10000 x2933) (= (x1863 x2933) 0)))
(assert (x2052 x83))
(assert (=> (<= x2542 10000) (= (x1863 x2542) 0)))
(assert (= (x175 (x3006 x2402 x3232 x3407)) x3407))
(assert (x2052 x597))
(assert (< (x3006 64 x1844 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x450 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) x962))
(assert (= x2184 (x1938 (x3006 64 x2184 6))))
(assert (= x477 (x175 (x1539 x1929 x623 x477 x2229 x716))))
(assert (x2052 x2670))
(assert (x2052 x410))
(assert (x2052 x3380))
(assert (x2052 x2692))
(assert (not (x3300 (x3006 64 x2184 2))))
(assert (=> (>= 10000 x1932) (= (x1863 x1932) 0)))
(assert (= x3265 (or x1352 x3565)))
(assert (= (x1213 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500)) x2500))
(assert (not (x3300 (x3006 64 x3248 2))))
(assert (x2052 x2820))
(assert (=> (<= x323 10000) (= (x1863 x323) 0)))
(assert (= x3524 (x1938 (x3006 64 x3524 100))))
(assert (= x2177 (x175 (x61 x2989 x221 x2177 x715))))
(assert (=> (<= x904 10000) (= (x1863 x904) 0)))
(assert (x1834 x1754))
(assert (x3300 100000))
(assert (x2052 x115))
(assert (= x1016 (=> (and (= x3583 x800) (= x2408 x2782) (= x596 x2904) (= x1507 x392) (= x419 x3476) (= 0 x448) (= x889 x3442) (= x1566 x2692) (= x1476 x1215) (= x1203 x1173) (= x2522 x2293) (= x2485 x3020) (= x1561 1) (= x3285 x1423) (= x2811 x45) (= x104 x1808)) x1111)))
(assert (= (x2476 (x3006 64 x3524 100)) 64))
(assert (= (and x198 (not x1201)) x64))
(assert (x2052 x904))
(assert (x2052 x3555))
(assert (= (x1504 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) x2715))
(assert (=> (>= 10000 x2761) (= (x1863 x2761) 0)))
(assert (x2052 x3311))
(assert (= x2144 (and x1005 (not x2657))))
(assert (= (x1938 (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577)) x1697))
(assert (= x42 (=> (and (= x2322 x3384) (= x1368 x93) (= x3522 x2415)) x165)))
(assert (x2052 x1502))
(assert (x2052 x2056))
(assert (x2052 x3494))
(assert (x2052 x2305))
(assert (x2052 x3013))
(assert (= (=> (and (= (> x2699 0) x1197) (= x2175 (x3002 (+ x840 32))) (= (x3584 x3605) x2699) (= x2217 (x3002 (+ x2175 32))) (= (x3002 (+ x1565 32)) x2370) (= x1562 (x3002 (+ x3375 x2636))) (= x2215 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2300)) (= x2042 (x3498 (- x1565 x1339))) (= x2300 (x3002 (+ x2636 31))) (= x1565 (x3002 (+ x3375 x2215)))) (and (=> (not x1197) x235) (=> (and x1197 (and (= (> x2699 32) x1042) (= x2914 (x907 x3311)))) (and (=> (not x1042) x235) (=> (and x1042 (and (= (x3002 (+ x2370 32)) x2539) (= x1232 (x3002 (+ 32 x3311))) (= x1088 (< 64 x2699)) (= (x1588 x1232) x2443))) (and (=> (not x1088) x235) (=> (and (and (= x2424 (< 96 x2699)) (= x722 (x3002 (+ 64 x2370))) (= x1583 (x3002 (+ 64 x3311))) (= (x616 x1583) x2066)) x1088) (and (=> (not x2424) x235) (=> x2424 x2339))))))))) x56))
(assert (x2052 x63))
(assert (x24 x3489))
(assert (=> (>= 10000 x399) (= (x1863 x399) 0)))
(assert (x2052 x2917))
(assert (x1834 x2575))
(assert (= x963 (x1504 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (x2052 x3035))
(assert (x2052 x438))
(assert (x2052 x3196))
(assert (= 36 (x175 (x3006 64 x1274 36))))
(assert (x2052 x2146))
(assert (=> (>= 10000 x2263) (= (x1863 x2263) 0)))
(assert (=> (>= 10000 x2867) (= 0 (x1863 x2867))))
(assert (= (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791) (x1863 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (=> (<= x945 10000) (= 0 (x1863 x945))))
(assert (= x3022 (x175 (x3579 x2039 x1761 x3022 x2523 x2051 x1831))))
(assert (x2052 x3496))
(assert (= x817 (and x1536 (not x3332))))
(assert (= x802 (and (not x3458) x1171)))
(assert (= (x1938 (x3006 64 x945 36)) x945))
(assert (x3300 1313998243))
(assert (x2052 x1452))
(assert (= (x1836 x3457 x1335) (x1863 (x1836 x3457 x1335))))
(assert (> (x1836 x1929 x364) 10000))
(assert (not (x3300 (x3006 64 x855 (ite (= x2989 0) x3428 (ite (<= x2989 32) x3088 (ite (>= 64 x2989) x62 (ite (<= x2989 96) x1846 (ite (<= x2989 128) x189 (ite (>= 160 x2989) x3434 (ite (<= x2989 192) x1234 (ite (>= 224 x2989) x2661 x2885))))))))))))
(assert (x2052 x1933))
(assert (=> (>= 10000 x1338) (= (x1863 x1338) 0)))
(assert (< (x3579 x2039 x1761 x3022 x2523 x2051 x1831) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x558 (=> (and (= (< 0 x3445) x2547) (= (x3002 (+ x1571 x283)) x3374) (= x2970 (x3002 (+ 32 x1567))) (= x1146 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3179)) (= x1567 (x3002 (+ x283 x1146))) (= (x3002 (+ x2993 32)) x2136) (= x3445 (x2061 x3605)) (= (x3002 (+ x1571 31)) x3179) (= x2588 (x3002 (+ x2136 32))) (= x2069 (x3498 (- x1567 x1028)))) (and (=> (and (and (= x55 (< 32 x3445)) (= x3631 (x48 x3311))) x2547) (and (=> (not x55) x267) (=> (and x55 (and (= (x3002 (+ 32 x3311)) x1530) (= x1122 (> x3445 64)) (= (x3002 (+ 32 x2970)) x350) (= x1083 (x3092 x1530)))) (and (=> (not x1122) x267) (=> (and (and (= (< 96 x3445) x1369) (= x3081 (x581 x3177)) (= x2165 (x3002 (+ x2970 64))) (= (x3002 (+ x3311 64)) x3177)) x1122) (and (=> (not x1369) x267) (=> x1369 x3481))))))) (=> (not x2547) x267)))))
(assert (= x3003 (=> (and (= x858 (x2725 x1932)) (= x833 (= x858 0))) (and (=> (and x833 (and (= x1969 true) (= x672 0) (= false x2079))) x1625) (=> (not x833) x3385)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x1626 6)))
(assert (x2052 x460))
(assert (= (x1863 (x3006 x1929 x2933 x2130)) (x3006 x1929 x2933 x2130)))
(assert (= (x2476 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) x1076))
(assert (x2052 x2011))
(assert (= x3550 (x1938 (x3579 x1929 x3550 x1422 x2016 x1210 x1392))))
(assert (x2052 x917))
(assert (= x1907 (or x991 x2907 x1493 x363)))
(assert (x2052 x611))
(assert (x2052 x18))
(assert (x2052 x1463))
(assert (x2052 x600))
(assert (= (and x1044 x2567) x3448))
(assert (= x2901 (=> (= (= 0 x2415) x146) (and (=> (and (and (= x2645 x3384) (= true x3561) (= x1394 false)) x146) x3163) (=> (and (= (< x3384 32) x219) (not x146)) (and (=> (and (and (>= 3 x1730) (= x3224 (x612 x1800)) x2870 (= x809 (x1032 160)) (= x809 x2149) (= (x2809 x809) x1730) (>= 3 x3224) (= (= x3224 0) x3166) (= (= x3224 x1730) x2870) (= (x3006 64 x809 11) x1800)) (not x219)) (and (=> (and x3166 (and (or (and x2964 (and x2964 (= x1812 x1366) (= 1 x614) (= x1812 (+ x93 1)))) (and (not x2964) (and (= true x925) (= x93 x1366) (not x2964)))) (and (= x445 (x3006 64 x745 10)) (= (= x3620 0) x2001) (<= x3063 255) (= 0 x2) (= x3372 x809) (= 1 x2330) (= (x612 x1289) x3063) (= x2964 (not x2001)) (= 1 x2011) (= x1781 1) (= x1977 x3063) (= x3620 x1977) (= x2125 1) (= (x3006 64 x809 11) x1289)))) x3252) (=> (and (and (= false x2418) (= x2645 4) (= x43 true)) (not x3166)) x3163))) (=> (and x219 (and (= 0 x2645) (= x490 false) (= x2450 true))) x3163)))))))
(assert (= x3133 (or x2630 x1169 x114 x3551 x1886)))
(assert (=> (<= x331 10000) (= 0 (x1863 x331))))
(assert (x2052 x2328))
(assert (= x444 (and x2675 (not x2894))))
(assert (x2052 x2386))
(assert (x2052 x1339))
(assert (x2052 x1414))
(assert (x2052 x753))
(assert (= (x1863 (x3006 64 x2184 6)) (x3006 64 x2184 6)))
(assert (= (or x2609 (and (not x841) x631)) x475))
(assert (x2052 x2374))
(assert (x2052 x1923))
(assert (x2052 x854))
(assert (= (x1863 (x3006 64 x525 2)) (x3006 64 x525 2)))
(assert (< 10000 (x3006 64 x2184 36)))
(assert (x2052 x1084))
(assert (x2052 x900))
(assert (= (and x3233 x3581) x1551))
(assert (x2052 x2373))
(assert (x2052 x2054))
(assert (x2052 x2244))
(assert (=> (<= x3508 10000) (= 0 (x1863 x3508))))
(assert (not (x3300 (x61 x1929 x3026 x1957 x2054))))
(assert (x2052 x397))
(assert (=> (>= 10000 x742) (= (x1863 x742) 0)))
(assert (= x2234 (and x15 x2941)))
(assert (= x1773 (and (not x605) x1442)))
(assert (= x519 (and x1230 (not x2837))))
(assert (not (x3300 (x3006 64 x3441 12))))
(assert (x2052 x174))
(assert (x2052 x3556))
(assert (x2052 x182))
(assert (x2052 x837))
(assert (> (x61 x3511 x1598 x1801 x552) 10000))
(assert (x2052 x963))
(assert (x2052 x2127))
(assert (= (x1863 (x3006 64 x2695 1)) (x3006 64 x2695 1)))
(assert (=> (<= x86 10000) (= (x1863 x86) 0)))
(assert (=> (>= 10000 x1422) (= (x1863 x1422) 0)))
(assert (x3300 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (= (x2476 (x61 x3457 x981 x1498 x1757)) x3457))
(assert (= (x175 (x3006 64 x1917 (ite (= 0 x3511) x2751 (ite (<= x3511 32) x1496 (ite (<= x3511 64) x1618 (ite (<= x3511 96) x2111 (ite (<= x3511 128) x1988 (ite (<= x3511 160) x3188 (ite (>= 192 x3511) x1165 (ite (<= x3511 224) x690 x1420)))))))))) (ite (= 0 x3511) x2751 (ite (<= x3511 32) x1496 (ite (>= 64 x3511) x1618 (ite (>= 96 x3511) x2111 (ite (>= 128 x3511) x1988 (ite (<= x3511 160) x3188 (ite (<= x3511 192) x1165 (ite (<= x3511 224) x690 x1420))))))))))
(assert (x2052 x791))
(assert (=> (>= 10000 x1309) (= 0 (x1863 x1309))))
(assert (x2052 x3066))
(assert (= (or (and x2197 x2301) (and x2569 x3315) (and x354 x3640)) x2287))
(assert (= x2297 (and x2029 x1774)))
(assert (= (x2476 (x3006 64 x1344 36)) 64))
(assert (x2052 x2515))
(assert (=> (>= 10000 x2373) (= 0 (x1863 x2373))))
(assert (x2052 x624))
(assert (= (x1863 (x3006 x3322 x1657 x1040)) (x3006 x3322 x1657 x1040)))
(assert (x2052 x663))
(assert (x2052 x843))
(assert (x2052 x2419))
(assert (= x2488 (and (not x3410) x1799)))
(assert (= (x1875 (x1539 x1740 x60 x531 x2047 x3203)) x3203))
(assert (=> (<= x734 10000) (= 0 (x1863 x734))))
(assert (= x682 (and x106 x2082)))
(assert (x2052 x678))
(assert (x2052 x919))
(assert (= x745 (x1938 (x3006 64 x745 10))))
(assert (x2052 x1351))
(assert (x2052 x2354))
(assert (=> (>= 10000 x3026) (= (x1863 x3026) 0)))
(assert (x2052 x1007))
(assert (x2052 x677))
(assert (= (and (not x1298) x1207) x3426))
(assert (= (x2476 (x3006 64 x3591 6)) 64))
(assert (x2052 x2593))
(assert (x24 x2426))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x2184 36)))
(assert (x2052 x1917))
(assert (< (x61 x1929 x3026 x1957 x2054) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3168 10000) (= (x1863 x3168) 0)))
(assert (x2052 x829))
(assert (= x3338 (x1938 (x3006 64 x3338 7))))
(assert (x2052 x858))
(assert (x2052 x1640))
(assert (> (x3006 64 x1344 36) 10000))
(assert (x2052 x320))
(assert (x2052 x1241))
(assert (= (and x1197 x3223) x1646))
(assert (=> (>= 10000 x1688) (= 0 (x1863 x1688))))
(assert (=> (>= 10000 x1335) (= (x1863 x1335) 0)))
(assert (= x1839 (x1504 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791))))
(assert (= x3462 (and x2479 x19)))
(assert (x2052 x404))
(assert (= x1156 (and x219 x2019)))
(assert (= x2797 (and x561 (not x3571))))
(assert (> (x3006 x769 x610 x3196) 10000))
(assert (= (x175 (x1539 x1740 x60 x531 x2047 x3203)) x531))
(assert (x24 x220))
(assert (x2052 x2036))
(assert (x2052 x977))
(assert (=> (>= 10000 x3622) (= (x1863 x3622) 0)))
(assert (x3300 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x2052 x1626))
(assert (x2052 x3179))
(assert (x2052 x1734))
(assert (= x1481 (and x1646 x1042)))
(assert (not (x3300 (x1539 x3322 x1526 x3539 x3420 x162))))
(assert (= x712 (and x2203 x307)))
(assert (< 10000 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)))
(assert (x2121 x2573))
(assert (= x950 (and (not x1130) x54)))
(assert (= (and (not x2053) x3318) x2759))
(assert (not (x3300 (x3006 x2402 x3232 x3407))))
(assert (= (=> (and (= x2849 x3384) (= x3529 x93) (= x3492 x2415)) x165) x1820))
(assert (= x2933 (x1938 (x3006 x1929 x2933 x2130))))
(assert (= (x175 (x3006 64 x1344 36)) 36))
(assert (x2052 x903))
(assert (x2052 x2057))
(assert (= x562 (and x464 x764)))
(assert (x2052 x603))
(assert (= (and (not x3167) x1227) x813))
(assert (x2052 x3212))
(assert (x2052 x2851))
(assert (x1834 x3073))
(assert (= (and x1481 x1088) x971))
(assert (= x3615 (and x1769 x49)))
(assert (= (x3006 64 x3441 12) (x1863 (x3006 64 x3441 12))))
(assert (= x3242 (x1938 (x3579 x1740 x3242 x637 x1928 x904 x2624))))
(assert (= x235 (=> (and (>= x1412 196) (= (+ x1205 46442213778836376901753710468615024683576072693327014300388496345503314739200) x109) (= x12 x2000) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x811) (= x1673 (x3519 x2594)) (= x3401 x3635) (= (x2725 x2695) x2895) (= x2182 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2594) (= x1376 (x3498 (- x965 32))) (= (x3002 (+ x2370 x228)) x2371) (= (or (and (= true (<= (- x1412 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 (- x1412 4))) (> (- x1412 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2152) (= x1208 128) (< x2594 x2371) (= x228 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2146)) (= (= x2636 (x2818 132)) x3509) (<= 196 x1673) (= x481 x2042) (= 1722637450 x1732) (<= x2594 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1777 false) (= (x3002 (+ x2370 x2699)) x990) (<= 1 x2371) (= (x3316 x3572) x1972) (<= x2594 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 127 x1159) (= x1205 (x52 26959946667150639794667015087019630673637144422540572481103610249215 x1972)) (= x3572 (x3002 (+ x2594 32))) (= x2146 (x3002 (+ x2699 31))) (= x1412 x1673) x3509 (<= x1159 127) (= x965 (x3498 (- x2371 x2594))) (>= x2895 1)) (and (=> (and (and (= x1865 x2000) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1412) true) (> x1412 163)) x948)) (not x2152)) (and (=> (and x948 (and (= x1682 (< 18446744073709551615 x1961)) (= (x1685 132) x1961))) (and (=> (and (not x1682) (and (= x1411 164) (= (> x1099 x1412) x688) (= (x3002 (+ 164 x1961)) x1099))) (and (=> x688 x3075) (=> (and (and (= (< 18446744073709551615 x2042) x1221) (= x3635 x1255)) (not x688)) (and (=> x1221 x2395) (=> (and (and (= (x3002 (+ x2042 4)) x3495) (= (x3002 (+ x3495 31)) x3299) (= (or (and (= (<= x1412 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3299 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3299 x1412)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3299) (<= x1412 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x491)) (not x1221)) (and (=> (not x491) x403) (=> (and x491 (and (= x940 (x1685 x3495)) (= (> x940 18446744073709551615) x3144))) (and (=> (and (not x3144) (and (= (> x2632 x1412) x2286) (= x1735 (x3002 (+ 32 x3495))) (= x2632 (x3002 (+ x940 x1735))))) (and (=> x2286 x3075) (=> (and (not x2286) (= x3254 true)) (and (=> (and (and (= x1106 true) (= x1051 false) (= 132 x2461)) (not x3254)) x2805) (=> (and x3254 (and (= x2236 (* 32 x3364)) (or (>= x1961 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x1961 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (div x987 32) x3364) (= x142 (x2196 x2945)) (< x2945 x3497) (= x826 (* x2284 32)) (= (div x1692 32) x2284) (= (+ 160 x826) x2945) (= x1692 (x3002 (+ x1961 31))) (= x727 128) (= x3497 (x3002 (+ x3494 x2945))) (= x3296 (x3002 (+ x2945 32))) (<= 161 x3497) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x142)) (< x142 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x142)) x2875) (= x3494 (x3002 (+ x2236 32))) (= x987 (x3002 (+ x940 31))) (= (x3002 (+ x3296 x940)) x2694))) (and (=> x2875 x2395) (=> (and (and (= (x3002 (+ 64 x2350)) x32) (<= x2460 127) (= x2469 (x3002 (+ 32 x2350))) (= (= x1500 1) x743) (= x2350 (x3002 (+ x3497 4))) (= 68 x2296) (= x1953 x3143) (>= 127 x2460) (= x567 68) (= x182 0) (= x3143 x745) (= false x3336) (= (x3006 64 x745 10) x2629) (= x678 2001815235) (= x3106 (x2725 x2695)) (= x2296 (x3498 (- x32 x3497))) (<= 1 x3106) (= x1018 false) (= 0 x3191) (= x1778 53968831973089624780961702553170747426560148566936995398294956610382735605760) (= x745 (x711 x3296))) (not x2875)) (and (=> (and (and (or (and (and (= (ite (not (= x2695 x2532)) 1 0) x218) (>= 1461501637330902918203684832716283019655932542975 x2532)) x2479) (and (= (ite x2479 1 0) x218) (not x2479))) (and (= x577 2) (= false x2479))) x743) x2747) (=> (and (and (= false x2466) (= x2645 100) (= true x2833)) (not x743)) x3163))))))))) (=> x3144 x2195))))))))) (=> x1682 x2195))) (=> (not x948) x403))) (=> (and (and (= x3603 true) (= false x1041) (= x2461 0)) x2152) x2805)))))
(assert (= x2949 (and x813 x3425)))
(assert (=> (>= 10000 x594) (= (x1863 x594) 0)))
(assert (x2052 x1089))
(assert (x2052 x142))
(assert (x2052 x960))
(assert (=> (>= 10000 x395) (= (x1863 x395) 0)))
(assert (x2052 x248))
(assert (x2052 x2539))
(assert (= (x450 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151)) x2008))
(assert (=> (>= 10000 x2184) (= (x1863 x2184) 0)))
(assert (x2052 x3195))
(assert (x2052 x2542))
(assert (= 0 (x1863 106705613605932439001713296114446454776331749937047859905631657259250407702528)))
(assert (x2052 x1935))
(assert (x2052 x3081))
(assert (=> (>= 10000 x1210) (= (x1863 x1210) 0)))
(assert (= (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508) (x1863 (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508))))
(assert (not (x3300 (x3579 x2039 x1761 x3022 x2523 x2051 x1831))))
(assert (x2052 x2830))
(assert (= x3511 (x2476 (x1539 x3511 x3209 x2059 x2223 x2230))))
(assert (x2052 x1507))
(assert (< 10000 (x3006 x3511 x331 x617)))
(assert (= (x1863 (x61 x3511 x1598 x1801 x552)) (x61 x3511 x1598 x1801 x552)))
(assert (not (x3300 (x3006 64 x138 36))))
(assert (=> (>= 10000 x3547) (= (x1863 x3547) 0)))
(assert (= x503 (and x3270 x293)))
(assert (= (x1863 (x3006 64 x1917 (ite (= 0 x2402) x955 (ite (>= 32 x2402) x517 (ite (>= 64 x2402) x1698 (ite (<= x2402 96) x2638 (ite (>= 128 x2402) x1308 (ite (<= x2402 160) x1802 (ite (<= x2402 192) x1464 (ite (<= x2402 224) x3084 x1898)))))))))) (x3006 64 x1917 (ite (= x2402 0) x955 (ite (>= 32 x2402) x517 (ite (<= x2402 64) x1698 (ite (>= 96 x2402) x2638 (ite (>= 128 x2402) x1308 (ite (>= 160 x2402) x1802 (ite (<= x2402 192) x1464 (ite (>= 224 x2402) x3084 x1898)))))))))))
(assert (= (and x2087 x1253) x2035))
(assert (x2052 x1720))
(assert (= (x175 (x61 x3322 x4 x399 x1688)) x399))
(assert (=> (<= x3482 10000) (= 0 (x1863 x3482))))
(assert (< (x3006 64 x2631 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x2448 3)))
(assert (x2052 x3018))
(assert (x24 x3302))
(assert (= (and (not x480) x396) x1310))
(assert (x2052 x695))
(assert (x2052 x525))
(assert (=> (<= x116 10000) (= 0 (x1863 x116))))
(assert (x2052 x988))
(assert (= (x1863 (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)) (x2385 x1076 x1602 x3514 x351 x78 x209 x2817 x210)))
(assert (= 6 (x175 (x3006 64 x1626 6))))
(assert (< (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x2658 x1076 x1264 x2626 x740 x1954 x1223 x2386)))
(assert (x2052 x3379))
(assert (x2052 x3526))
(assert (not (x3300 (x3006 64 x323 6))))
(assert (> (x2658 x2402 x655 x2761 x21 x2542 x650 x898) 10000))
(assert (=> (>= 10000 x1657) (= 0 (x1863 x1657))))
(assert (x2052 x2303))
(assert (=> (>= 10000 x449) (= 0 (x1863 x449))))
(assert (= (x1863 (x3006 x1740 x807 x2973)) (x3006 x1740 x807 x2973)))
(assert (x2052 x2933))
(assert (=> (>= 10000 x807) (= 0 (x1863 x807))))
(assert (= 0 (x1863 107317874183463056701504662589741776198067464202343767264461527615735374807040)))
(assert (= x1076 (x2476 (x3579 x1076 x594 x2753 x1239 x1862 x842))))
(assert (x2052 x1099))
(assert (x2052 x276))
(assert (x2121 x3455))
(assert (x2052 x178))
(assert (= (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (=> (>= 10000 x2557) (= (x1863 x2557) 0)))
(assert (= 2 (x175 (x3006 64 x2695 2))))
(assert (x2052 x1835))
(assert (= (x1938 (x3006 64 x323 6)) x323))
(assert (x2052 x395))
(assert (> (x61 x1929 x3026 x1957 x2054) 10000))
(assert (= (x1504 (x3579 x1076 x594 x2753 x1239 x1862 x842)) x1239))
(assert (=> (>= 10000 x2640) (= (x1863 x2640) 0)))
(assert (= (x175 (x61 x1076 x1415 x369 x3162)) x369))
(assert (= (=> (and (= x672 36) (= x3439 false) (= x2808 true)) x1625) x232))
(assert (x2052 x1937))
(assert (not (x3300 (x3006 64 x3338 7))))
(assert (not (x3300 (x1836 32 103))))
(assert (x24 x721))
(assert (= x2865 (x1938 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521))))
(assert (x2052 x3191))
(assert (= (x450 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) x1049))
(assert (x2052 x2945))
(assert (x2052 x1854))
(assert (= (and x3214 x726) x1798))
(assert (x2052 x577))
(assert (=> (<= x3349 10000) (= (x1863 x3349) 0)))
(assert (= x485 (x1875 (x3579 x3457 x2662 x3474 x139 x485 x3277))))
(assert (x2052 x1469))
(assert (= 104 (x1938 (x1836 32 104))))
(assert (x3300 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x2052 x2815))
(assert (x2052 x3569))
(assert (< 10000 (x3006 64 x1521 12)))
(assert (= x2819 x1519))
(assert (= x1597 (x1213 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597))))
(assert (x2052 x655))
(assert (=> (>= 10000 x1697) (= (x1863 x1697) 0)))
(assert (= (=> (and (= x2186 0) (= x2645 x3350) (= x10 0) (= x10 x927)) x2168) x3163))
(assert (= (x2476 (x2658 x2402 x655 x2761 x21 x2542 x650 x898)) x2402))
(assert (=> (>= 10000 x2523) (= (x1863 x2523) 0)))
(assert (x2052 x208))
(assert (x2052 x1921))
(assert (= (or x1148 x20 x3240 x1039 x929) x1008))
(assert (x2052 x2193))
(assert (=> (<= x1149 10000) (= (x1863 x1149) 0)))
(assert (=> (<= x1831 10000) (= 0 (x1863 x1831))))
(assert (x1834 x3267))
(assert (=> (<= x1363 10000) (= 0 (x1863 x1363))))
(assert (= x3642 (x1938 (x2658 x2039 x3642 x3545 x963 x751 x3558 x2500))))
(assert (x2052 x342))
(assert (x2052 x2586))
(assert (x2052 x719))
(assert (x2052 x2860))
(assert (= (and (not x2360) x2902) x1725))
(assert (> (x61 x2039 x2492 x2427 x3253) 10000))
(assert (x2052 x209))
(assert (< 10000 (x3006 64 x3168 36)))
(assert (= (x3006 64 x3607 2) (x1863 (x3006 64 x3607 2))))
(assert (x2052 x212))
(assert (=> (>= 10000 x2223) (= 0 (x1863 x2223))))
(assert (=> (>= 10000 x471) (= 0 (x1863 x471))))
(assert (x2052 x2532))
(assert (x2052 x1385))
(assert (= (x2476 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) x1929))
(assert (= (=> (and (= x1344 x2692) (= x1428 x2522) (= x2565 2) (= x1173 x2926) (= x2485 x1976) (= x3583 x1672) (= x2099 x2904) (= x1290 x1808) (= x1423 x1060) (= x889 x3342) (= x1561 0) (= x448 x3329) (= x2889 x1476) (= x419 x2499) (= x1507 x347) (= 0 x2499) (= x2782 x728) (= x803 x45)) x1111) x1170))
(assert (= (x2476 (x1836 x1740 x2698)) x1740))
(assert (x2052 x1952))
(assert (= x151 (or x1001 x2199)))
(assert (= (and (not x3165) x634) x2455))
(assert (x2052 x1262))
(assert (x2052 x313))
(assert (x2052 x1412))
(assert (x2052 x2081))
(assert (x2052 x807))
(assert (= x3170 (=> (and (= (x2725 x1932) x1249) (= x2826 (= 0 x1249))) (and (=> (not x2826) x933) (=> (and x2826 (and (= x672 0) (= x1246 true) (= x1346 false))) x1625)))))
(assert (= x1273 (and x2234 (not x301))))
(assert (= (=> (and (= x201 (= 0 x1956)) (or (not x201) x201)) x953) x511))
(assert (= (and x1367 x1122) x1383))
(assert (= (x1504 (x2385 x1740 x2865 x156 x3125 x1229 x375 x2687 x521)) x3125))
(assert (= x626 (=> (and (= x942 x347) (= x1060 x526) (= 0 x2291) (= x3161 x3342) (= x728 x3130) (= x2174 x1329) (= x1976 x917) (= x2174 (x52 255 x85)) (= x3184 x1672) (= x1290 x1408) (= x3504 x597) (= x2673 x337) (= x1061 x803) (= x2099 x951) (= x1428 x2354) (= x3000 x2926) (= x2673 0) (= x1538 2) (= x3531 x2889)) x230)))
(assert (=> (>= 10000 x1740) (= 0 (x1863 x1740))))
(assert (x2052 x2543))
(assert (= (x1938 (x2658 x2402 x655 x2761 x21 x2542 x650 x898)) x655))
(assert (= x677 (x175 (x3006 x1076 x3627 x677))))
(assert (x2052 x3622))
(assert (x2052 x283))
(assert (= x3243 (=> (and (= x3457 (x783 128)) (= (<= x3457 224) x3192)) (and x3192 (=> (and (= x3582 (x783 160)) (= (x40 0) x2911) (= x900 (x783 192)) (= (x783 192) x778) (= x829 (x783 192)) (= x518 (x1539 x3457 x666 x829 x3354 x3351)) (= (x783 288) x1962) (= (x783 256) x86) (= x3104 (<= x1929 224)) (= (x783 224) x1149) (= (x783 320) x1699) (= x976 (x783 256)) (= x646 (x3006 x3457 x3582 x900)) (= x139 (x783 224)) (= x1874 (x3579 x3457 x2662 x3474 x139 x485 x3277)) (= x388 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716)) (= x2803 (ite (= 0 x3457) x2911 (ite (>= 32 x3457) x2707 (ite (<= x3457 64) x646 (ite (<= x3457 96) x767 (ite (<= x3457 128) x518 (ite (<= x3457 160) x1874 (ite (<= x3457 192) x240 (ite (<= x3457 224) x388 x1908))))))))) (= x1498 (x783 192)) (= x3508 (x783 320)) (= (x783 224) x3354) (= (x783 160) x981) (= x3277 (x783 288)) (= (x783 224) x3268) (= (x1836 x3457 x1335) x2707) (= x666 (x783 160)) (= x485 (x783 256)) (= (x783 160) x3536) (= (x783 160) x2801) (= x1335 (x783 160)) (= (x783 192) x3474) (= (x3002 (+ x2245 x1929)) x381) (= (x783 352) x2716) (= (x783 224) x1757) (= x2662 (x783 160)) (= x3351 (x783 256)) (= (x783 288) x2190) (= x1793 (x783 192)) (= (x2658 x3457 x3536 x778 x1149 x976 x2190 x3508) x240) (= (x61 x3457 x981 x1498 x1757) x767)) (and x3104 (=> (and (= x1483 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) (= x852 (x1332 x3072)) (= x2130 (x1332 x2515)) (= x788 x2803) (= (x3002 (+ 32 x2245)) x3072) (= (x1332 x2245) x492) (= (x3002 (+ x2245 64)) x3024) (= x3111 (x1332 x730)) (= x1577 (x1332 x1816)) (= x477 (x1332 x1593)) (= x2815 (x3002 (+ x2245 96))) (= x2194 (x3002 (+ 96 x2245))) (= (x1332 x2194) x716) (= x1087 (x1332 x484)) (= (x1332 x1509) x2016) (= (x1332 x359) x3626) (= x1439 (x3002 (+ 160 x2245))) (= x1056 (x1332 x2815)) (= (x1332 x540) x1210) (= x1612 (x1332 x3013)) (= x364 (x1332 x2245)) (= (ite (= 0 x1929) x516 (ite (>= 32 x1929) x82 (ite (>= 64 x1929) x1433 (ite (>= 96 x1929) x103 (ite (<= x1929 128) x1501 (ite (<= x1929 160) x3099 (ite (>= 192 x1929) x3456 (ite (>= 224 x1929) x1483 x145)))))))) x788) (= x623 (x1332 x2245)) (= x1509 (x3002 (+ 64 x2245))) (= x1049 (x1332 x2637)) (= x2289 (x3002 (+ 64 x2245))) (= x243 (x1332 x1439)) (= x547 (x3002 (+ 128 x2245))) (= x2229 (x1332 x2289)) (= x82 (x1836 x1929 x364)) (= (x3002 (+ 128 x2245)) x2637) (= (x1332 x2245) x3026) (= x359 (x3002 (+ 32 x2245))) (= (x3002 (+ x2245 32)) x2515) (= (x3002 (+ x2245 192)) x730) (= x516 (x40 0)) (= (x1332 x2245) x3550) (= x2933 (x1332 x2245)) (= (x3002 (+ x2245 32)) x1164) (= (x1332 x2245) x1697) (= x103 (x61 x1929 x3026 x1957 x2054)) (= (x2658 x1929 x1697 x3626 x583 x1056 x1087 x1577) x3456) (= (x3002 (+ x2245 128)) x484) (= (x1332 x3024) x583) (= x2054 (x1332 x2643)) (= x2562 (x3002 (+ 32 x2245))) (= x1816 (x3002 (+ x2245 160))) (= (x1332 x2562) x1422) (= (x1332 x1164) x1957) (= (x3002 (+ x2245 96)) x540) (= x2978 (x3002 (+ 96 x2245))) (= (x1332 x2978) x46) (= (x3002 (+ 32 x2245)) x1593) (= (x3002 (+ x2245 64)) x3013) (= x3099 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) (= (x3002 (+ 64 x2245)) x2643) (= (x1539 x1929 x623 x477 x2229 x716) x1501) (= (x3006 x1929 x2933 x2130) x1433) (= x1392 (x1332 x547))) x523)))))))
(assert (=> (>= 10000 x728) (= 0 (x1863 x728))))
(assert (x2052 x2032))
(assert (x2052 x3098))
(assert (x2052 x549))
(assert (= (and x311 x3367) x2905))
(assert (x2052 x1915))
(assert (= (and x2468 (not x3153)) x1666))
(assert (= (x1504 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)) x2523))
(assert (x2052 x3016))
(assert (x2052 x3539))
(assert (x2052 x3403))
(assert (x2052 x148))
(assert (x2052 x3495))
(assert (= x715 (x1504 (x61 x2989 x221 x2177 x715))))
(assert (x2052 x954))
(assert (= (x1141 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383)) x383))
(assert (= x1043 (and (not x824) x122)))
(assert (=> (>= 10000 x769) (= 0 (x1863 x769))))
(assert (= (x2476 (x1539 x2989 x2743 x2944 x674 x2050)) x2989))
(assert (x2052 x2849))
(assert (x2052 x2151))
(assert (x2052 x599))
(assert (> (x3006 64 x2184 2) 10000))
(assert (x2052 x2647))
(assert (=> (<= x3351 10000) (= (x1863 x3351) 0)))
(assert (= x1318 (x1938 (x1539 x2039 x1318 x1075 x2401 x2804))))
(assert (= (x450 (x3579 x1929 x3550 x1422 x2016 x1210 x1392)) x1392))
(assert (=> (>= 10000 x2979) (= 0 (x1863 x2979))))
(assert (= x2864 (and x1499 (not x1312))))
(assert (= (x1863 1000000000) 0))
(assert (x1834 x2842))
(assert (= (x1863 (x1836 x1929 x364)) (x1836 x1929 x364)))
(assert (= x924 (x1504 (x2385 x2989 x2396 x2263 x924 x410 x893 x1338 x449))))
(assert (x2052 x594))
(assert (x2052 x2482))
(assert (x2052 x1091))
(assert (= x2030 x3054))
(assert (x2052 x1264))
(assert (> (x1836 x769 x696) 10000))
(assert (= x2662 (x1938 (x3579 x3457 x2662 x3474 x139 x485 x3277))))
(assert (x2052 x3078))
(assert (x2052 x99))
(assert (x2052 x31))
(assert (=> (>= 10000 x1264) (= 0 (x1863 x1264))))
(assert (x2052 x1614))
(assert (= x1585 (and x544 (not x1682))))
(assert (= x763 (and x1093 x519)))
(assert (x2052 x784))
(assert (x2052 x3470))
(assert (= (and x712 (not x2577)) x2471))
(assert (x2052 x1274))
(assert (x2121 x2832))
(assert (= x162 (x1875 (x1539 x3322 x1526 x3539 x3420 x162))))
(assert (= x2401 (x1504 (x1539 x2039 x1318 x1075 x2401 x2804))))
(assert (> (x3006 64 x3524 100) 10000))
(assert (= (x1875 (x3579 x2039 x1761 x3022 x2523 x2051 x1831)) x2051))
(assert (= (x1863 35477284059277649309253622239531857712935939406416048698883813673932370764389) 0))
(assert (x2052 x2415))
(assert (x2052 x727))
(assert (x2052 x976))
(assert (= (x1863 45231284858326638837332416019018714005183587760015845327913118753091066265600) 0))
(assert (< (x61 x769 x2744 x2867 x2231) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2052 x645))
(assert (not (x3300 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151))))
(assert (x2052 x1662))
(assert (x24 x2573))
(assert (= x1076 (x2476 (x61 x1076 x1415 x369 x3162))))
(assert (= (x2476 (x3006 64 x745 10)) 64))
(assert (x2052 x2648))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 64 x323 6)))
(assert (= (x1504 (x61 x1076 x1415 x369 x3162)) x3162))
(assert (x2052 x3175))
(assert (= x2448 (x1938 (x3006 64 x2448 7))))
(assert (x2052 x1959))
(assert (=> (>= 10000 x3380) (= (x1863 x3380) 0)))
(assert (x2052 x167))
(assert (= (x3006 64 x1163 36) (x1863 (x3006 64 x1163 36))))
(assert (= x3281 (x1875 (x3579 x3511 x1924 x2410 x89 x3281 x3380))))
(assert (x2052 x3607))
(assert (x2052 x1095))
(assert (= x3054 (=> (and (= (= x1037 0) x3028) (= (x2725 x728) x1037)) (and (=> (not x3028) x3520) (=> (and (and (= x2879 false) (= x1776 true) (= 0 x3329)) x3028) x1170)))))
(assert (x3300 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x2052 x2340))
(assert (= (x1938 (x2385 x1929 x492 x852 x1612 x46 x1049 x243 x3111)) x492))
(assert (= (x1141 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)) x2650))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650)))
(assert (x2052 x2394))
(assert (< 10000 (x1836 x2989 x857)))
(assert (x2052 x473))
(assert (= (and x3275 (not x3429)) x1960))
(assert (= (x175 (x3006 64 x2448 7)) 7))
(assert (not (x3300 (x1836 x3511 x18))))
(assert (=> (>= 10000 x3212) (= 0 (x1863 x3212))))
(assert (= x2533 (and x19 (not x2479))))
(assert (x2052 x799))
(assert (x2052 x2005))
(assert (x2052 x2904))
(assert (x2052 x2357))
(assert (x2052 x1561))
(assert (= x138 (x1938 (x3006 64 x138 36))))
(assert (x2052 x1740))
(assert (= (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639680) 0))
(assert (=> (<= x2695 10000) (= (x1863 x2695) 0)))
(assert (= x923 (and x1029 x1927)))
(assert (x2052 x2790))
(assert (= x3171 (and x2506 x1690)))
(assert (x2052 x2877))
(assert (x2052 x3183))
(assert (=> (>= 10000 x2865) (= 0 (x1863 x2865))))
(assert (= x846 (and x1996 x3395)))
(assert (= x2238 (and (not x1694) x3614)))
(assert (= (x450 (x3579 x3457 x2662 x3474 x139 x485 x3277)) x3277))
(assert (x2052 x359))
(assert (= x1897 (and (not x506) x2783)))
(assert (x2052 x1307))
(assert (= (and x736 x641) x1779))
(assert (x2052 x2574))
(assert (x2052 x2010))
(assert (x2052 x150))
(assert (x2052 x2443))
(assert (> (x3006 x3322 x1657 x1040) 10000))
(assert (not (x3300 (x61 x2989 x221 x2177 x715))))
(assert (x3300 486791245))
(assert (x2052 x1164))
(assert (= (x1863 (x3006 64 x2184 2)) (x3006 64 x2184 2)))
(assert (x3535 x2099))
(assert (= (x1875 (x1539 x2039 x1318 x1075 x2401 x2804)) x2804))
(assert (x2052 x2702))
(assert (x2052 x2269))
(assert (= x1432 (and x592 x1997)))
(assert (= (x1938 (x3006 64 x1260 100)) x1260))
(assert (= (x3006 64 x3248 36) (x1863 (x3006 64 x3248 36))))
(assert (=> (<= x552 10000) (= (x1863 x552) 0)))
(assert (x2052 x1652))
(assert (= (x1863 (x3006 64 x3338 7)) (x3006 64 x3338 7)))
(assert (x2052 x3591))
(assert (not (x3300 (x3006 x1076 x3627 x677))))
(assert (x24 x313))
(assert (=> (<= x623 10000) (= 0 (x1863 x623))))
(assert (x2052 x742))
(assert (= (x175 (x3006 64 x2695 1)) 1))
(assert (=> (>= 10000 x2734) (= (x1863 x2734) 0)))
(assert (x2052 x1684))
(assert (= (x1504 (x2658 x2989 x2388 x3450 x2187 x1438 x962 x1597)) x2187))
(assert (= (and (not x1478) x2767) x1465))
(assert (not (x3300 (x1539 x2989 x2743 x2944 x674 x2050))))
(assert (x2052 x2588))
(assert (x2052 x1976))
(assert (x2052 x1861))
(assert (x2052 x1862))
(assert (=> (>= 10000 x696) (= 0 (x1863 x696))))
(assert (x3300 3628442803))
(assert (= (x2476 (x3006 64 x1274 36)) 64))
(assert (= x2259 (and x592 (not x1997))))
(assert (=> (<= x1933 10000) (= (x1863 x1933) 0)))
(assert (> (x40 0) 10000))
(assert (not (x3300 (x61 x3511 x1598 x1801 x552))))
(assert (x2121 x1517))
(assert (x2052 x489))
(assert (=> (>= 10000 x3474) (= (x1863 x3474) 0)))
(assert (= x17 (and x1298 x1207)))
(assert (=> (>= 10000 x2631) (= 0 (x1863 x2631))))
(assert (x2052 x2910))
(assert (= x3569 (x1504 (x2385 x3511 x2778 x1706 x3569 x2574 x1212 x698 x383))))
(assert (x2052 x2448))
(assert (x2052 x1205))
(assert (not (x3300 (x1539 x2039 x1318 x1075 x2401 x2804))))
(assert (= (x1875 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)) x2822))
(assert (x2052 x3256))
(assert (=> (<= x857 10000) (= 0 (x1863 x857))))
(assert (x2052 x2365))
(assert (=> (<= x2190 10000) (= 0 (x1863 x2190))))
(assert (x2052 x2946))
(assert (x2052 x975))
(assert (x2052 x2194))
(assert (=> (>= 10000 x2983) (= (x1863 x2983) 0)))
(assert (= x1699 (x1213 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716))))
(assert (not (x3300 (x2385 x769 x47 x1463 x3490 x2462 x395 x3147 x2650))))
(assert (x2052 x109))
(assert (=> (>= 10000 x2944) (= (x1863 x2944) 0)))
(assert (x2052 x2993))
(assert (x2052 x1087))
(assert (x2052 x2522))
(assert (x2052 x157))
(assert (x2052 x461))
(assert (x2052 x1981))
(assert (=> (>= 10000 x1706) (= 0 (x1863 x1706))))
(assert (= x3248 (x1938 (x3006 64 x3248 36))))
(assert (x2052 x1049))
(assert (= x3025 (and x1725 x84)))
(assert (x2052 x3364))
(assert (= (or x1879 x710) x1162))
(assert (=> (<= x3197 10000) (= 0 (x1863 x3197))))
(assert (not (x3300 (x3006 x1929 x2933 x2130))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3579 x1076 x594 x2753 x1239 x1862 x842)))
(assert (=> (<= x1067 10000) (= 0 (x1863 x1067))))
(assert (= x2224 (or x1267 (and x2490 (not x3128)))))
(assert (< 10000 (x2385 x2039 x1120 x1747 x1839 x1389 x1532 x489 x2791)))
(assert (x2052 x2017))
(assert (=> (>= 10000 x2008) (= (x1863 x2008) 0)))
(assert (x2052 x2575))
(assert (x2052 x2605))
(assert (= (and (not x1845) x763) x1927))
(assert (= (and x310 x2996) x1477))
(assert (= (and x27 x1293) x3576))
(assert (= (=> (= x1691 (= 0 x780)) (and (=> (and x1691 (= x780 1)) x523) (=> (not x1691) x3243))) x1635))
(assert (x2052 x2804))
(assert (x2052 x2257))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x61 x3511 x1598 x1801 x552)))
(assert (x2052 x1364))
(assert (x2052 x218))
(assert (x2052 x1112))
(assert (= 64 (x2476 (x3006 64 x323 6))))
(assert (x2052 x642))
(assert (x3300 1914215))
(assert (= x1934 (or x3164 x2488)))
(assert (x2052 x32))
(assert (x2052 x233))
(assert (= x106 (and (not x2507) x3566)))
(assert (= (x2476 (x1539 x3457 x666 x829 x3354 x3351)) x3457))
(assert (= (and x3604 x743) x19))
(assert (= (and (not x2074) x418) x59))
(assert (x2052 x1877))
(assert (=> (>= 10000 x375) (= 0 (x1863 x375))))
(assert (x3300 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x2052 x2977))
(assert (=> (>= 10000 x1699) (= (x1863 x1699) 0)))
(assert (x2052 x86))
(assert (= x1521 (x1938 (x3006 64 x1521 12))))
(assert (= x3308 (or x503 x1031 x131 x565 x2250 x2909)))
(assert (= x391 (and x2754 x201)))
(assert (x24 x1662))
(assert (x2052 x1607))
(assert (x2052 x1654))
(assert (< 10000 (x3006 x2989 x705 x2377)))
(assert (x2052 x1097))
(assert (= (and (not x382) x3305) x1319))
(assert (= 12 (x175 (x3006 64 x1877 12))))
(assert (x24 x1902))
(assert (= x2781 (and x1245 x3227)))
(assert (x2052 x1606))
(assert (x2052 x498))
(assert (x2052 x675))
(assert (x2052 x1498))
(assert (x2052 x1902))
(assert (x2052 x3177))
(assert (x3300 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x857 (x1938 (x1836 x2989 x857))))
(assert (x1834 x856))
(assert (not (x3300 (x2658 x3511 x1716 x3320 x1172 x2173 x1859 x3547))))
(assert (x2052 x2215))
(assert (= x2646 (=> (and (= x275 (x2725 x728)) (= x1923 (x3498 (- x3149 128))) (= (= x275 0) x3466) (= x2431 128)) (and (=> (and (not x3466) (and (= x2555 (and x2898 x3331)) (= (x535 x728) x3610) (= (>= x2256 x1632) x2898) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3610 x1632)) x3331) (= (x535 x2919) x2256))) (and (=> (and x2555 (and (= x2605 x1917) (= 3521034783 x3059) (= x3463 x632) (>= 127 x3237) (= x2128 (x535 x2919)) (= 128 x675) (= x3338 x2447) (<= x3388 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x787 x3037) (= (x2725 x2695) x1614) x105 (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1923) (= x936 (x1765 132)) (= x573 false) (<= 0 x632) (<= 196 x3388) (>= 127 x3237) (= x1923 x3388) (>= x1923 196) (= (> x936 18446744073709551615) x1478) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x1448) (>= x1614 1) (= (- x2128 x1632) x1011) (= x105 (= (x985 132) x3416)) (= false x1528) (= x566 (x3493 x728)) (= x632 (+ x566 x1632)) (< (+ x1632 x566) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x632 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= (x3002 (+ x936 164)) x1640) (= (< x3388 x1640) x1306) (= x3266 164)) (not x1478)) (and (=> x1306 x874) (=> (and (and (= (+ x787 4) x2254) (= x3014 (< (+ 31 x2254) x3388))) (not x1306)) (and (=> (and (and (= x1760 (> x69 18446744073709551615)) (= (x1765 x2254) x69)) x3014) (and (=> (and (and (= (x3002 (+ x704 x69)) x460) (= (< x3388 x460) x3102) (= x704 (+ 32 x2254))) (not x1760)) (and (=> (not x3102) x3217) (=> x3102 x874))) (=> x1760 x197))) (=> (and (not x3014) (and (= 0 x3246) (= true x285) (= x436 false))) x1636))))) (=> x1478 x197))) (=> (and (= x2790 0) (not x2555)) x1117))) (=> (and (and (= x3150 true) (= 0 x3329) (= false x831)) x3466) x1170)))))
(assert (= x3467 (=> (and (= true x1847) (= x910 false) (= x3329 36)) x1170)))
(assert (x2052 x2289))
(assert (= 64 (x2476 (x3006 64 x2530 0))))
(assert (x2052 x1297))
(assert (x2052 x2636))
(assert (=> (<= x2401 10000) (= (x1863 x2401) 0)))
(assert (x2052 x1571))
(assert (=> (>= 10000 x932) (= 0 (x1863 x932))))
(assert (x1834 x253))
(assert (x2052 x154))
(assert (= 64 (x2476 (x3006 64 x1877 12))))
(assert (x2052 x994))
(assert (= (and x231 (not x3254)) x287))
(assert (=> (>= 10000 x3545) (= 0 (x1863 x3545))))
(assert (< 10000 (x3006 64 x2448 3)))
(assert (= (x175 (x3579 x2402 x2755 x1959 x2715 x1067 x1336)) x1959))
(assert (= x2039 (x2476 (x1539 x2039 x1318 x1075 x2401 x2804))))
(assert (= x874 (=> (and (= 0 x3246) (= x1393 true) (= false x205)) x1636)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 x2989 x705 x2377)))
(assert (= (x1863 (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)) (x2385 x2402 x862 x373 x1452 x541 x1455 x2086 x3005)))
(assert (x24 x3342))
(assert (x2052 x1878))
(assert (x2052 x3125))
(assert (< (x1539 x3457 x666 x829 x3354 x3351) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x696 (x1938 (x1836 x769 x696))))
(assert (x2052 x1067))
(assert (x2052 x3351))
(assert (=> (<= x96 10000) (= (x1863 x96) 0)))
(assert (x2052 x2914))
(assert (x2052 x1604))
(assert (= (=> (and (= (not (> x3599 128)) x2619) (= x3145 (x3002 (+ 96 x2017))) (= (x1373 x3145) x2951) (= (x3002 (+ 96 x1028)) x200)) (and x718 x2619)) x3061))
(assert (not (x3300 (x3006 x3511 x331 x617))))
(assert (x2052 x2566))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3006 x1740 x807 x2973)))
(assert (= (x1504 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)) x2734))
(assert (x2052 x2136))
(assert (x2052 x89))
(assert (= (x1504 (x1539 x2402 x1309 x2463 x116 x995)) x116))
(assert (x2052 x1198))
(assert (=> (>= 10000 x2624) (= 0 (x1863 x2624))))
(assert (> (x3006 x2039 x630 x3041) 10000))
(assert (= (and x2320 (not x3537)) x2597))
(assert (not (x3300 (x3006 64 x1163 36))))
(assert (= (x175 (x3006 x1740 x807 x2973)) x2973))
(assert (x2052 x253))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1836 x3457 x1335)))
(assert (= 36 (x175 (x3006 64 x1819 36))))
(assert (= (=> (and (= (ite (< 0 x1447) x150 (x52 127 x150)) x2942) (= x150 (div x342 2)) (= x1447 (x52 1 x342)) (= x3208 (> x793 0)) (= x793 (x3498 (- x1447 (mod (ite (> 32 x2942) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (not x3208) x2413) (=> (and x3208 (and (= (x52 1 x342) x1385) (= x272 (= 0 x1385)))) (and (=> x272 x3170) (=> (and (not x272) (= (> x2942 0) x1903)) (and (=> x1903 x785) (=> (not x1903) x385))))))) x2819))
(assert (x2052 x1831))
(assert (=> (<= x1414 10000) (= 0 (x1863 x1414))))
(assert (x1834 x95))
(assert (x2052 x930))
(assert (= (x2476 (x1539 x1929 x623 x477 x2229 x716)) x1929))
(assert (= x1684 (x1504 (x2658 x769 x742 x549 x1684 x2564 x2640 x3622))))
(assert (x2052 x1497))
(assert (= x1962 (x450 (x2385 x3457 x2801 x1793 x3268 x86 x1962 x1699 x2716))))
(assert (= (x1504 (x2385 x3322 x3212 x1943 x2758 x357 x2008 x2120 x2151)) x2758))
(assert (x2052 x3349))
(assert (= (x450 (x2658 x3322 x324 x288 x1437 x2373 x1095 x2060)) x1095))
(assert (=> (<= x243 10000) (= (x1863 x243) 0)))
(assert (x2052 x466))
(assert (= (or (and x2875 x1508) (and x1609 x1733) (and x1221 x3107)) x3549))
(assert (=> (>= 10000 x1602) (= (x1863 x1602) 0)))
(assert (x2052 x2760))
(assert (= (=> (= (not (< 32 x3503)) x1936) (and x1936 x958)) x3185))
(assert (x2052 x3409))
(assert (x2052 x1558))
(assert (x2052 x2823))
(assert (= x2630 (and (not x2589) x1160)))
(assert (x2052 x2970))
(assert (x2052 x1328))
(assert (x24 x95))
(assert (= (or x2391 x2341 x1695) x561))
(assert (=> (>= 10000 x962) (= (x1863 x962) 0)))
(assert (x2052 x1399))
(assert (= (x1938 (x3579 x3322 x1430 x3109 x2734 x2822 x1633)) x1430))
(assert (x2052 x95))
(check-sat)
(exit)
