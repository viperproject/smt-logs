(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x85 () Int)
(declare-fun x207 () Int)
(declare-fun x43 () Bool)
(declare-fun x194 () Int)
(declare-fun x215 () Int)
(declare-fun x262 () Int)
(declare-fun x278 () Int)
(declare-fun x71 () Int)
(declare-fun x224 () Bool)
(declare-fun x258 () Bool)
(declare-fun x77 () Int)
(declare-fun x168 () Int)
(declare-fun x214 () Int)
(declare-fun x92 () Int)
(declare-fun x201 () Bool)
(declare-fun x193 () Bool)
(declare-fun x150 () Int)
(declare-fun x14 () Int)
(declare-fun x1 () Int)
(declare-fun x45 () Int)
(declare-fun x152 () Int)
(declare-fun x206 (Int) Int)
(declare-fun x129 () Bool)
(declare-fun x34 () Int)
(declare-fun x204 () Int)
(declare-fun x52 () Int)
(declare-fun x79 () Int)
(declare-fun x132 (Int) Int)
(declare-fun x41 () Int)
(declare-fun x248 () Int)
(declare-fun x160 () Int)
(declare-fun x117 () Int)
(declare-fun x53 () Int)
(declare-fun x141 () Bool)
(declare-fun x136 (Int) Int)
(declare-fun x197 () Int)
(declare-fun x186 () Int)
(declare-fun x167 () Int)
(declare-fun x60 () Int)
(declare-fun x40 () Int)
(declare-fun x144 () Int)
(declare-fun x203 () Bool)
(declare-fun x180 () Int)
(declare-fun x125 () Int)
(declare-fun x226 () Int)
(declare-fun x179 () Int)
(declare-fun x284 () Int)
(declare-fun x103 () Int)
(declare-fun x142 (Int) Int)
(declare-fun x54 () Int)
(declare-fun x42 () Bool)
(declare-fun x30 () Int)
(declare-fun x33 (Int) Int)
(declare-fun x229 () Int)
(declare-fun x149 () Int)
(declare-fun x108 () Int)
(declare-fun x116 () Int)
(declare-fun x127 () Int)
(declare-fun x135 () Int)
(declare-fun x158 () Int)
(declare-fun x96 () Int)
(declare-fun x156 () Int)
(declare-fun x137 () Bool)
(declare-fun x87 (Int Int Int) Int)
(declare-fun x11 () Int)
(declare-fun x219 () Bool)
(declare-fun x244 () Int)
(declare-fun x148 () Int)
(declare-fun x209 () Bool)
(declare-fun x90 () Bool)
(declare-fun x169 () Int)
(declare-fun x130 () Int)
(declare-fun x234 (Int) Int)
(declare-fun x72 () Int)
(declare-fun x56 () Int)
(declare-fun x121 () Int)
(declare-fun x162 () Bool)
(declare-fun x196 () Int)
(declare-fun x164 () Bool)
(declare-fun x128 () Bool)
(declare-fun x73 () Int)
(declare-fun x270 () Int)
(declare-fun x220 () Int)
(declare-fun x237 () Int)
(declare-fun x269 () Int)
(declare-fun x76 () Int)
(declare-fun x99 () Int)
(declare-fun x247 () Int)
(declare-fun x250 () Int)
(declare-fun x143 () Bool)
(declare-fun x112 () Bool)
(declare-fun x26 () Int)
(declare-fun x184 () Int)
(declare-fun x165 () Int)
(declare-fun x251 () Int)
(declare-fun x285 () Bool)
(declare-fun x159 () Bool)
(declare-fun x59 () Bool)
(declare-fun x65 () Bool)
(declare-fun x118 () Int)
(declare-fun x232 () Bool)
(declare-fun x82 () Int)
(declare-fun x263 (Int) Int)
(declare-fun x119 () Int)
(declare-fun x166 () Int)
(declare-fun x266 () Int)
(declare-fun x58 (Int) Int)
(declare-fun x230 () Int)
(declare-fun x17 () Int)
(declare-fun x107 () Int)
(declare-fun x145 (Int) Int)
(declare-fun x69 (Int) Int)
(declare-fun x16 () Int)
(declare-fun x80 () Int)
(declare-fun x283 () Bool)
(declare-fun x134 () Int)
(declare-fun x252 (Int Int) Int)
(declare-fun x146 () Int)
(declare-fun x191 () Int)
(declare-fun x227 () Int)
(declare-fun x18 () Int)
(declare-fun x32 () Int)
(declare-fun x198 () Int)
(declare-fun x5 () Int)
(declare-fun x259 () Int)
(declare-fun x275 (Int) Int)
(declare-fun x256 (Int) Int)
(declare-fun x81 () Int)
(declare-fun x24 (Int) Int)
(declare-fun x36 () Int)
(declare-fun x63 (Int Int) Int)
(declare-fun x265 () Int)
(declare-fun x236 () Int)
(declare-fun x48 () Bool)
(declare-fun x37 () Int)
(declare-fun x7 () Int)
(declare-fun x49 () Int)
(declare-fun x3 () Int)
(declare-fun x233 () Bool)
(declare-fun x218 () Int)
(declare-fun x176 () Int)
(declare-fun x273 () Int)
(declare-fun x115 () Int)
(declare-fun x261 (Int) Int)
(declare-fun x10 (Int) Int)
(declare-fun x276 (Int) Int)
(declare-fun x106 () Int)
(declare-fun x185 () Int)
(declare-fun x221 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x279 () Int)
(declare-fun x173 () Bool)
(declare-fun x199 () Int)
(declare-fun x28 () Int)
(declare-fun x210 () Bool)
(declare-fun x202 () Int)
(declare-fun x222 () Int)
(declare-fun x223 () Int)
(declare-fun x231 () Int)
(declare-fun x190 () Bool)
(declare-fun x67 () Int)
(declare-fun x100 (Int Int) Int)
(declare-fun x172 () Int)
(declare-fun x280 () Bool)
(declare-fun x123 () Int)
(declare-fun x64 () Int)
(declare-fun x105 () Int)
(declare-fun x249 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x61 () Int)
(declare-fun x19 () Int)
(declare-fun x177 () Int)
(declare-fun x66 () Int)
(declare-fun x212 () Int)
(declare-fun x120 () Int)
(declare-fun x86 () Int)
(declare-fun x240 () Int)
(declare-fun x140 (Int) Bool)
(declare-fun x138 () Int)
(declare-fun x241 () Int)
(declare-fun x253 () Int)
(declare-fun x93 (Int) Int)
(declare-fun x155 (Int Int) Int)
(declare-fun x188 () Int)
(declare-fun x153 () Bool)
(declare-fun x239 () Int)
(declare-fun x75 () Int)
(declare-fun x242 () Int)
(declare-fun x205 () Int)
(declare-fun x161 () Int)
(declare-fun x274 () Int)
(declare-fun x175 () Int)
(declare-fun x50 () Bool)
(declare-fun x21 (Int) Int)
(declare-fun x57 () Int)
(declare-fun x213 () Int)
(declare-fun x238 () Bool)
(declare-fun x281 () Int)
(declare-fun x133 () Bool)
(declare-fun x122 () Int)
(declare-fun x38 () Int)
(declare-fun x78 () Bool)
(declare-fun x257 () Int)
(declare-fun x254 () Int)
(declare-fun x46 () Bool)
(declare-fun x126 () Int)
(declare-fun x15 () Bool)
(declare-fun x89 () Int)
(declare-fun x235 () Int)
(declare-fun x114 () Int)
(declare-fun x189 () Bool)
(declare-fun x2 () Int)
(declare-fun x101 () Int)
(declare-fun x228 () Int)
(declare-fun x12 () Int)
(declare-fun x182 () Int)
(declare-fun x4 () Int)
(declare-fun x243 () Int)
(declare-fun x31 () Int)
(declare-fun x111 () Int)
(declare-fun x8 () Bool)
(declare-fun x183 () Int)
(declare-fun x88 () Int)
(declare-fun x163 () Bool)
(declare-fun x110 () Bool)
(declare-fun x113 (Int) Int)
(declare-fun x91 () Bool)
(declare-fun x151 () Int)
(declare-fun x109 () Int)
(declare-fun x20 () Int)
(declare-fun x84 () Int)
(declare-fun x124 () Int)
(declare-fun x255 () Int)
(declare-fun x268 () Int)
(declare-fun x277 () Int)
(declare-fun x211 () Int)
(declare-fun x98 () Int)
(declare-fun x94 () Bool)
(declare-fun x39 () Int)
(declare-fun x225 (Int) Int)
(declare-fun x29 () Int)
(declare-fun x260 (Int) Int)
(declare-fun x139 () Int)
(declare-fun x97 () Int)
(declare-fun x187 () Int)
(define-fun x217 ((x55 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x55) (>= x55 0)) x55 (- x55 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x23 ((x55 Int)) Int (ite (and (< x55 0) (>= x55 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x55 115792089237316195423570985008687907853269984665640564039457584007913129639936) x55))
(define-fun x62 ((x245 Int)) Bool (and (>= x245 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x245)))
(define-fun x47 ((x245 Int)) Bool (and (= (x155 x245 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x155 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x154 ((x245 Int)) Bool (and (= x245 (x155 x245 0)) (= (x155 0 x245) x245)))
(define-fun x131 ((x245 Int)) Bool (= (x155 x245 x245) x245))
(define-fun x95 ((x245 Int)) Bool (and (x131 x245) (x47 x245) (x154 x245)))
(define-fun x147 ((x245 Int) (x170 Int)) Bool (= (x155 x245 x170) (x155 x170 x245)))
(define-fun x44 ((x245 Int) (x170 Int)) Bool (and (<= (x155 x245 x170) (+ x245 x170)) (=> (>= x170 0) (>= (x155 x245 x170) x170)) (=> (>= x245 0) (<= x245 (x155 x245 x170)))))
(define-fun x25 ((x245 Int) (x170 Int)) Bool (and (x44 x245 x170) (x147 x245 x170)))
(define-fun x282 ((x245 Int)) Bool (and (= x245 (x100 x245 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x100 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) x245)))
(define-fun x51 ((x245 Int)) Bool (and (= 0 (x100 x245 0)) (= (x100 0 x245) 0)))
(define-fun x35 ((x245 Int)) Bool (= x245 (x100 x245 x245)))
(define-fun x83 ((x245 Int)) Bool (and (x35 x245) (x51 x245) (x282 x245)))
(define-fun x267 ((x245 Int) (x170 Int)) Bool (= (x100 x170 x245) (x100 x245 x170)))
(define-fun x192 ((x245 Int) (x170 Int)) Bool (and (=> (>= x170 0) (>= x170 (x100 x245 x170))) (=> (<= 0 x245) (<= (x100 x245 x170) x245)) (<= 0 (x100 x245 x170))))
(define-fun x102 ((x245 Int) (x170 Int)) Bool (and (x192 x245 x170) (x267 x245 x170)))
(define-fun x6 ((x245 Int)) Bool (and (= (x63 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) (x63 x245 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x271 ((x245 Int)) Bool (and (= (x63 0 x245) x245) (= (x63 x245 0) x245)))
(define-fun x9 ((x245 Int)) Bool (= 0 (x63 x245 x245)))
(define-fun x216 ((x245 Int)) Bool (and (x271 x245) (x9 x245) (x6 x245)))
(define-fun x70 ((x245 Int) (x170 Int)) Bool (= (x63 x245 x170) (x63 x170 x245)))
(define-fun x27 ((x245 Int) (x170 Int)) Bool (and (>= (x63 x245 x170) 0) (<= (x63 x245 x170) (+ x170 x245))))
(define-fun x13 ((x245 Int) (x170 Int)) Bool (and (x27 x245 x170) (x70 x245 x170)))
(define-fun x264 ((x195 Int)) Int 0)
(define-fun x246 ((x195 Int)) Int 0)
(define-fun x181 ((x195 Int)) Int (ite (> x257 x195) (x263 x195) 0))
(define-fun x178 ((x195 Int)) Int (ite (and (<= 0 x195) (< x195 x257)) (x142 x195) (x181 x195)))
(define-fun x157 ((x195 Int)) Int (ite (= x11 x195) x184 (x132 x195)))
(define-fun x200 ((x195 Int)) Int (ite x15 (x145 x195) (x261 x195)))
(define-fun x74 ((x195 Int)) Int (ite x15 (x275 x195) (x256 x195)))
(define-fun x68 ((x195 Int)) Int (ite x15 (x69 x195) (x260 x195)))
(define-fun x272 ((x195 Int)) Int (ite (= x38 x195) x82 (x68 x195)))
(define-fun x208 ((x195 Int)) Int (ite (= x195 x227) x19 (x74 x195)))
(define-fun x174 ((x195 Int)) Int (ite (= x195 x227) x160 (x208 x195)))
(define-fun x286 ((x195 Int)) Int (ite (= x26 x195) x130 (x225 x195)))
(define-fun x22 ((x195 Int)) Int (ite (= x195 x211) x36 (x21 x195)))
(assert (x62 x135))
(assert (x62 x1))
(assert (= (or x189 x43) x141))
(assert (> (x87 64 x229 1) 10000))
(assert (x62 x122))
(assert (> (x87 64 x218 2) 10000))
(assert (= (x136 (+ x265 1)) (x136 x265)))
(assert (x62 x152))
(assert (x13 x98 2))
(assert (< 10000 (x87 64 x79 3)))
(assert (= (x234 (x87 64 x122 2)) 64))
(assert (< 10000 (x87 64 x122 2)))
(assert (x95 x1))
(assert (x140 126144000))
(assert (x62 x270))
(assert (x62 x273))
(assert (x62 x212))
(assert (= (=> (and (and (= (x155 x1 x236) x16) (= 1 x16) (= (x217 (+ x250 x125)) x152) (= x156 (div x125 x125)) (= (ite (= x156 1) 1 0) x236) (= x203 (> x212 x152)) (not (> x125 x152)) (= x1 (ite (= 0 x125) 1 0)) (not (< x212 x239)) (= x212 (x217 (+ x239 x116)))) (or (and (= x49 x239) (not x203)) (and x203 (and (= (x23 (- x152 x116)) x85) (= x85 x49) (not (< x152 x85)))))) x159) x110))
(assert (= (x136 4294967295) 0))
(assert (x95 x236))
(assert (x62 x169))
(assert (=> (= 0 x168) (= (div x213 x168) 0)))
(assert (x62 x186))
(assert (x140 69185743945351922119161689019356421013382125510479073735908722411855439477079))
(assert (= (=> (and (and (not (= x221 x45)) (= x163 true) (<= x7 1461501637330902918203684832716283019655932542975) (<= x165 1461501637330902918203684832716283019655932542975) (= x202 0) (<= 0 x81) (>= x92 0) (<= 0 x214) (= (< 0 (x10 x221)) x173) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x81) (= x232 (> (x10 x45) 0)) (>= x185 0) (<= 36 x257) (= x91 false) (<= 0 x279) (<= x279 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x45 x187) (= x28 x52) (<= 0 x281) (<= x144 1461501637330902918203684832716283019655932542975) (<= 1 x45) (= 773316216 x108) (<= 0 x165) (= 1 x72) (= x78 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x207) (= x186 (x142 0)) (= 0 x135) (>= x188 0) (= x210 false) (= x249 0) (<= x114 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x92 1461501637330902918203684832716283019655932542975) (= x186 x56) x232 (>= 1461501637330902918203684832716283019655932542975 x221) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x281) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x257) (= x28 (x142 4)) (<= x45 1461501637330902918203684832716283019655932542975) (>= x7 0) (<= x214 4294967295) (>= 1461501637330902918203684832716283019655932542975 x29) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x188) (>= x221 1) x173 (<= x185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x94 false) (>= x207 0) (>= x114 0) (= false x59) (>= x29 0)) (and (= x165 x229) (and (and (and (= x148 (x171 x107)) (= x18 (x10 x45)) (= x122 x248) (= x175 (x87 64 x229 1)) (not (< x237 x148)) (not (< x130 x262)) (= x274 (+ x107 1)) (= x268 (x157 x45)) (<= 1 x248) (= (= x182 0) x50) (= (x171 x196) x40) (= x182 (ite x162 1 0)) (>= 127 x251) (= false x128) (= x137 false) (= (x24 x57) x259) (= x211 (+ x150 3)) (= (+ x211 1) x26) (= x150 (x87 64 x229 1)) (= x169 773316216) (= x54 x31) (= (mod (* x259 x97) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x109) (= x223 (x21 x211)) (not (> x97 x130)) (= x226 (x87 64 x122 2)) (= x244 (x23 (- x139 (mod (ite (< x119 x109) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (not x162) (<= 1 x253) (= (x145 x226) x240) (= x165 x11) (= x196 (+ 5 x175)) (< x218 x248) (= 31536000 x103) (not (< x34 x28)) (<= 1 x18) (= x79 (x276 x229)) (= (x23 (- x130 x284)) x97) x50 (= x123 (x217 (+ x240 604800))) (= x130 (x217 (+ x262 604800))) (<= x253 255) (<= x251 127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x218) (= x218 (x33 x274)) (not (> x240 x123)) (= (x87 64 x79 3) x115) (= (not (> x123 x237)) x162) (= x134 x268) (= (x87 64 x218 2) x265) (= x193 (= x244 0)) (= x34 (x24 x57)) (= x139 (x23 (- x119 x109))) (= x107 (+ 5 x150)) (= (x225 x26) x284) (= (x93 x115) x253) (= x184 (x132 x11)) (= (x200 x265) x262) (= (+ 1 x150) x57) (= (mod (* x97 x259) 115792089237316195423570985008687907853269984665640564039457584007913129639935) x119) (>= x40 1)) (or (and (not x193) (and (= (x23 (- x109 x146)) x12) (= x146 (mod (* x97 x259) 31536000)) (= x177 (mod (* x118 904625697166532776746648320380374280103671755200316906558262375061821325312) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x39 (div x12 128)) (= x118 (x23 (- x244 (mod (ite (< x109 x146) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x151 x239) (= (x217 (+ x39 x177)) x5) (>= 31535999 x244) (= x151 (mod (* 69185743945351922119161689019356421013382125510479073735908722411855439477079 x5) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and x193 (and (= x222 (div x109 31536000)) (= x222 x239))))) (= x237 x281)))) x219) x46))
(assert (x62 x86))
(assert (x62 x117))
(assert (x62 x222))
(assert (x62 x40))
(assert (= (x136 (+ 1 x107)) (x136 x107)))
(assert (x62 x183))
(assert (x62 x77))
(assert (=> (= x239 0) (= 0 (div x239 x239))))
(assert (x62 x103))
(assert (= (x234 (x87 64 x229 1)) 64))
(assert (x62 x41))
(assert (= (x136 69185743945351922119161689019356421013382125510479073735908722411855439477079) 0))
(assert (x62 x204))
(assert (x140 4294967295))
(assert (x62 x148))
(assert (x95 x198))
(assert (x62 x268))
(assert (x62 x241))
(assert (x140 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x62 x118))
(assert (=> (= 0 x126) (= (div x17 x126) 0)))
(assert (= x209 (and x141 (not x90))))
(assert (x62 x67))
(assert (x62 x230))
(assert (= 2 (x206 (x87 64 x218 2))))
(assert (= x218 (x104 (x87 64 x218 2))))
(assert (x62 x220))
(assert (x62 x236))
(assert (x95 x64))
(assert (x62 x244))
(assert (x62 x127))
(assert (x62 x205))
(assert (x62 x3))
(assert (= x219 (=> (and (or (and (and (= x71 (x217 (+ x180 x88))) (= x235 x125) (= x88 (mod (* 904625697166532776746648320380374280103671755200316906558262375061821325312 x220) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (div x197 128) x180) (= x235 (mod (* x71 69185743945351922119161689019356421013382125510479073735908722411855439477079) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x220 31535999)) (not x90)) (and x90 (and (= x125 x120) (= (div x197 31536000) x120)))) (and (= (x23 (- x121 (mod (ite (> x197 x3) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x220) (= x117 1) (= x3 (mod (* 126144000 x172) 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x116 (x21 x211)) (= (mod (* 126144000 x172) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x197) (= x14 (ite (= 1 x270) 1 0)) (= x198 (ite (= x239 0) 1 0)) (= x270 (div x239 x239)) (= (= x220 0) x90) (= x277 (+ x57 1)) (= (x23 (- x3 x197)) x121) (= 126144000 x243) (= x250 (x113 x277)) (= x172 (x24 x57)) (= x117 (x155 x198 x14)) (= 31536000 x106))) x110)))
(assert (x62 x266))
(assert (x62 x284))
(assert (x62 x197))
(assert (= (x136 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x140 1461501637330902918203684832716283019655932542975))
(assert (= (x136 1461501637330902918203684832716283019655932542975) 0))
(assert (x216 x98))
(assert (= (and x48 x42) x233))
(assert (x62 x106))
(assert (= 0 (x136 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x62 x116))
(assert (x62 x134))
(assert (= (x136 (x87 64 x218 2)) (x87 64 x218 2)))
(assert (x62 x39))
(assert (= (and (not x203) x238) x283))
(assert (x140 904625697166532776746648320380374280103671755200316906558262375061821325312))
(assert (x62 x250))
(assert (x216 2))
(assert (x62 x20))
(assert (x62 x257))
(assert (=> (>= 10000 x11) (= 0 (x136 x11))))
(assert (= (or x164 x209) x238))
(assert (= x122 (x104 (x87 64 x122 2))))
(assert (x62 x168))
(assert (not (x140 (x87 64 x122 2))))
(assert (x62 x52))
(assert (x62 x88))
(assert (x62 x82))
(assert (x62 x167))
(assert (= (x136 (+ x150 1)) (x136 x150)))
(assert (x62 x32))
(assert (x62 x235))
(assert (x62 x5))
(assert (x62 x259))
(assert (= 0 (x136 126144000)))
(assert (x83 x241))
(assert (not x46))
(assert (x62 x138))
(assert (x62 x60))
(assert (x62 x12))
(assert (x62 x124))
(assert (= true x15))
(assert (= (and x203 x238) x65))
(assert (= (x136 x265) (x136 (+ 2 x265))))
(assert (= (x136 x211) (x136 (+ 1 x211))))
(assert (x62 x215))
(assert (x62 x177))
(assert (not (x140 (x87 64 x229 1))))
(assert (x62 x194))
(assert (x25 x64 x176))
(assert (x62 x76))
(assert (= (x136 (x87 64 x79 3)) (x87 64 x79 3)))
(assert (< (x87 64 x79 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x62 x80))
(assert (x62 x11))
(assert (x62 x146))
(assert (x62 x56))
(assert (x62 x139))
(assert (= (x136 31535999) 0))
(assert (x62 x269))
(assert (not (x140 (x87 64 x218 2))))
(assert (=> (>= 10000 x221) (= 0 (x136 x221))))
(assert (x62 x278))
(assert (x62 x239))
(assert (x62 x151))
(assert (x62 x158))
(assert (=> (= x168 0) (= (div x4 x168) 0)))
(assert (= (x206 (x87 64 x229 1)) 1))
(assert (=> (= 0 x168) (= (div x126 x168) 0)))
(assert (x62 x14))
(assert (x83 x126))
(assert (x140 31535999))
(assert (x62 x221))
(assert (x62 x180))
(assert (x62 x89))
(assert (= (or x283 x65) x42))
(assert (x62 x121))
(assert (x62 x49))
(assert (x62 x119))
(assert (not (x140 (x87 64 x79 3))))
(assert (= (x136 31536000) 0))
(assert (= (x136 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x62 x144))
(assert (x62 x229))
(assert (x62 x262))
(assert (= (x136 773316216) 0))
(assert (x140 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x62 x179))
(assert (< (x87 64 x218 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x62 x98))
(assert (x62 x45))
(assert (x62 x53))
(assert (= (x136 (+ x150 3)) (x136 x150)))
(assert (x62 x85))
(assert (x62 x184))
(assert (x62 x228))
(assert (x140 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x62 x99))
(assert (x62 x4))
(assert (x62 x218))
(assert (x62 x105))
(assert (= (x234 (x87 64 x79 3)) 64))
(assert (x62 x247))
(assert (x62 x160))
(assert (x62 x111))
(assert (x62 x79))
(assert (= (x136 (+ x57 1)) (x136 x57)))
(assert (x62 x101))
(assert (= (and x15 x193) x189))
(assert (x62 x198))
(assert (x62 x30))
(assert (x62 x149))
(assert (= 3 (x206 (x87 64 x79 3))))
(assert (x62 x126))
(assert (x62 x120))
(assert (x62 x34))
(assert (x62 x240))
(assert (x62 x223))
(assert (= (x136 (x87 64 x229 1)) (x87 64 x229 1)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x87 64 x229 1)))
(assert (x62 x125))
(assert (x62 x213))
(assert (x140 31536000))
(assert (= x43 (and (not x193) x15)))
(assert (x140 604800))
(assert (= (x136 (+ 5 x150)) (x136 x150)))
(assert (=> (>= 10000 x122) (= 0 (x136 x122))))
(assert (= x112 (=> (and (= (- x54 x37) x84) (= (x68 x38) x77) (not (< x269 x160)) (not (> x82 x77)) (= x160 (x23 (- x269 x20))) (= x166 (+ x82 x84)) (= (x23 (- x77 x30)) x82) (= (x68 x38) x37) (= (not (> x248 (+ x218 1))) x280) (= x269 (x208 x227))) x280)))
(assert (= (and x42 (not x48)) x143))
(assert (x95 x14))
(assert (=> (<= x45 10000) (= 0 (x136 x45))))
(assert (= (x206 (x87 64 x122 2)) 2))
(assert (=> (= 0 x125) (= (div x125 x125) 0)))
(assert (x62 x28))
(assert (x62 x255))
(assert (x62 x96))
(assert (x62 x182))
(assert (x62 x36))
(assert (x62 x172))
(assert (x62 x2))
(assert (= (x234 (x87 64 x218 2)) 64))
(assert (x62 x61))
(assert (x62 x97))
(assert (x62 x123))
(assert (x62 x37))
(assert (x62 x130))
(assert (= (x136 (x87 64 x122 2)) (x87 64 x122 2)))
(assert (= x133 (or x233 x143)))
(assert (=> (>= 10000 x218) (= (x136 x218) 0)))
(assert (= 0 (x136 604800)))
(assert (x62 x248))
(assert (x62 x231))
(assert (x95 x176))
(assert (x62 x16))
(assert (= x164 (and x90 x141)))
(assert (x25 x1 x236))
(assert (x102 x126 x241))
(assert (x62 x254))
(assert (x62 x251))
(assert (x25 x198 x14))
(assert (= (x136 x175) (x136 (+ x175 5))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x87 64 x122 2)))
(assert (=> (<= x229 10000) (= (x136 x229) 0)))
(assert (= x159 (=> (and (and (= x96 (x74 x227)) (not (< x36 x255)) (= (x208 x227) x126) (= (mod (* x161 x20) 115792089237316195423570985008687907853269984665640564039457584007913129639935) x194) (>= x126 1) (= x48 (= x61 0)) (not (> x231 x278)) (= (x23 (- x194 x17)) x205) (= x20 (x217 (+ x53 x191))) (= x227 (+ x265 2)) (= (x217 (+ x231 x49)) x76) (= x61 (x23 (- x205 (mod (ite (> x17 x194) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x19 (x217 (+ x96 x49))) (= x255 (x21 x211)) (= x36 (x217 (+ x49 x255))) (= x191 (x22 x211)) (= (x21 x211) x111) (= x66 (- x75 x111)) (= x73 (+ x36 x66)) (= (mod (* x161 x20) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x17) (= (x217 (+ x49 x231)) x278) (not (> x96 x19)) (= x161 (x68 x38)) (not (< x20 x53)) (= x38 (+ x265 1)) (= x53 (x24 x57))) (or (and (and (= x242 (x23 (- 2 x179))) (= x41 (mod (* x32 x204) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x254 (mod (* x86 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x124 (x23 (- x61 (mod (ite (< x17 x127) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (mod (* x105 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x98) (> x126 x61) (= (div x4 x168) x64) (= x86 (mod (* x247 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x217 (+ 1 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x126) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x241) (= (div x213 x168) x228) (= (x23 (- x17 x127)) x4) (= x230 (x23 (- 2 x183))) (= x158 (x217 (+ x228 1))) (= (x63 2 x98) x247) (= x67 (mod (* x138 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x213 (x23 (- 0 x168))) (= (mod (* x199 x89) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x99) (= (x23 (- 2 x149)) x199) (= (x23 (- 2 x101)) x32) (= (mod (* x204 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x101) (= x179 (mod (* x99 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x89 (mod (* x273 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x23 (- 2 x254)) x266) (= (mod (* x242 x99) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x204) (<= x61 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x168 (x100 x126 x241)) (= (mod (* x41 (x155 x64 x176)) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x80) (= x105 (div x126 x168)) (= x176 (mod (* x158 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x105 x247) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x183) (= (mod (* x89 x105) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x149) (= x80 x30) (= (mod (* x20 x161) x126) x127) (= (x23 (- 2 x67)) x273) (= x138 (mod (* x266 x86) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x48)) (and x48 (and (= (div x17 x126) x60) (= x30 x60))))) x112)))
(assert (x62 x191))
(assert (x62 x242))
(assert (x62 x161))
(assert (x62 x237))
(assert (x140 773316216))
(assert (= (x104 (x87 64 x229 1)) x229))
(assert (= (x104 (x87 64 x79 3)) x79))
(assert (x62 x64))
(assert (x62 x17))
(assert (x62 x176))
(assert (= 0 (x136 904625697166532776746648320380374280103671755200316906558262375061821325312)))
(assert (x62 x109))
(assert (x62 x71))
(assert (x62 x243))
(assert (x62 x253))
(assert (=> (>= 10000 x79) (= 0 (x136 x79))))
(assert (x62 x199))
(assert (x62 x18))
(assert (x62 x19))
(assert (x62 x156))
(check-sat)
(exit)
