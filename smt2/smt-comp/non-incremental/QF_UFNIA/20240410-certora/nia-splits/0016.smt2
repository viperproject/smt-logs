(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x894 () Int)
(declare-fun x206 () Int)
(declare-fun x1086 () Int)
(declare-fun x1189 () Int)
(declare-fun x242 () Int)
(declare-fun x1051 () Int)
(declare-fun x166 () Int)
(declare-fun x900 () Int)
(declare-fun x515 () Int)
(declare-fun x366 () Int)
(declare-fun x956 () Bool)
(declare-fun x1264 () Int)
(declare-fun x729 () Int)
(declare-fun x251 () Bool)
(declare-fun x578 () Int)
(declare-fun x492 () Int)
(declare-fun x467 () Int)
(declare-fun x354 () Int)
(declare-fun x330 () Int)
(declare-fun x246 () Int)
(declare-fun x1060 () Int)
(declare-fun x167 () Bool)
(declare-fun x847 () Int)
(declare-fun x789 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1045 () Int)
(declare-fun x419 () Int)
(declare-fun x332 () Int)
(declare-fun x1113 () Bool)
(declare-fun x308 () Int)
(declare-fun x770 () Int)
(declare-fun x87 () Int)
(declare-fun x20 () Int)
(declare-fun x261 () Int)
(declare-fun x37 () Int)
(declare-fun x610 () Int)
(declare-fun x498 () Int)
(declare-fun x1156 () Int)
(declare-fun x229 () Int)
(declare-fun x1048 () Bool)
(declare-fun x911 () Int)
(declare-fun x994 () Int)
(declare-fun x959 () Int)
(declare-fun x529 () Int)
(declare-fun x49 () Int)
(declare-fun x954 () Int)
(declare-fun x1245 () Int)
(declare-fun x1112 () Bool)
(declare-fun x342 () Int)
(declare-fun x532 () Int)
(declare-fun x291 () Int)
(declare-fun x1177 () Bool)
(declare-fun x1141 () Int)
(declare-fun x326 () Int)
(declare-fun x1208 () Bool)
(declare-fun x524 () Int)
(declare-fun x304 () Int)
(declare-fun x418 (Int Int) Int)
(declare-fun x786 () Int)
(declare-fun x1221 () Int)
(declare-fun x1023 () Bool)
(declare-fun x914 () Int)
(declare-fun x272 () Int)
(declare-fun x1001 () Int)
(declare-fun x1154 () Int)
(declare-fun x466 () Int)
(declare-fun x93 () Int)
(declare-fun x1103 (Int Int Int Int Int Int Int) Int)
(declare-fun x196 () Int)
(declare-fun x1148 () Int)
(declare-fun x436 () Int)
(declare-fun x965 () Int)
(declare-fun x1006 () Int)
(declare-fun x463 () Bool)
(declare-fun x1285 () Int)
(declare-fun x477 () Int)
(declare-fun x109 () Int)
(declare-fun x444 () Int)
(declare-fun x1171 () Int)
(declare-fun x151 () Int)
(declare-fun x429 () Int)
(declare-fun x365 () Int)
(declare-fun x669 () Int)
(declare-fun x476 (Int) Int)
(declare-fun x827 () Int)
(declare-fun x344 () Int)
(declare-fun x1165 () Int)
(declare-fun x531 () Int)
(declare-fun x170 () Int)
(declare-fun x1077 () Int)
(declare-fun x1241 () Bool)
(declare-fun x2 () Bool)
(declare-fun x221 () Int)
(declare-fun x755 () Int)
(declare-fun x973 () Int)
(declare-fun x208 () Int)
(declare-fun x1011 () Int)
(declare-fun x976 () Int)
(declare-fun x346 () Int)
(declare-fun x535 () Bool)
(declare-fun x269 () Int)
(declare-fun x585 () Int)
(declare-fun x491 () Int)
(declare-fun x1157 () Bool)
(declare-fun x737 () Int)
(declare-fun x871 () Int)
(declare-fun x386 () Int)
(declare-fun x1111 () Int)
(declare-fun x30 () Int)
(declare-fun x1193 () Int)
(declare-fun x887 () Int)
(declare-fun x752 () Int)
(declare-fun x932 () Int)
(declare-fun x388 () Int)
(declare-fun x56 () Int)
(declare-fun x501 () Bool)
(declare-fun x598 () Bool)
(declare-fun x1191 () Int)
(declare-fun x150 () Bool)
(declare-fun x1172 () Int)
(declare-fun x1234 () Int)
(declare-fun x153 () Int)
(declare-fun x964 () Bool)
(declare-fun x343 () Int)
(declare-fun x688 () Bool)
(declare-fun x992 () Int)
(declare-fun x975 () Bool)
(declare-fun x1017 () Int)
(declare-fun x27 () Int)
(declare-fun x454 () Int)
(declare-fun x228 () Int)
(declare-fun x262 () Int)
(declare-fun x541 () Int)
(declare-fun x1025 () Int)
(declare-fun x657 () Int)
(declare-fun x510 () Int)
(declare-fun x187 () Int)
(declare-fun x792 () Bool)
(declare-fun x158 () Bool)
(declare-fun x558 () Int)
(declare-fun x495 (Int) Int)
(declare-fun x1251 () Bool)
(declare-fun x1184 () Int)
(declare-fun x253 () Int)
(declare-fun x402 () Int)
(declare-fun x1205 () Int)
(declare-fun x219 () Int)
(declare-fun x955 () Int)
(declare-fun x455 () Int)
(declare-fun x1273 () Int)
(declare-fun x1020 () Int)
(declare-fun x13 () Int)
(declare-fun x579 () Bool)
(declare-fun x803 () Int)
(declare-fun x319 () Int)
(declare-fun x1224 () Int)
(declare-fun x233 () Int)
(declare-fun x57 () Int)
(declare-fun x892 () Int)
(declare-fun x1012 () Int)
(declare-fun x160 () Int)
(declare-fun x1093 () Int)
(declare-fun x407 () Int)
(declare-fun x999 () Int)
(declare-fun x1192 () Int)
(declare-fun x11 () Int)
(declare-fun x1215 () Int)
(declare-fun x1253 () Int)
(declare-fun x218 () Int)
(declare-fun x1182 () Int)
(declare-fun x513 () Int)
(declare-fun x1179 () Int)
(declare-fun x1145 () Bool)
(declare-fun x174 (Int) Int)
(declare-fun x84 () Int)
(declare-fun x638 () Int)
(declare-fun x1007 () Int)
(declare-fun x877 () Int)
(declare-fun x565 () Int)
(declare-fun x1239 (Int) Int)
(declare-fun x774 () Int)
(declare-fun x380 () Int)
(declare-fun x260 () Bool)
(declare-fun x593 () Int)
(declare-fun x902 () Int)
(declare-fun x711 () Int)
(declare-fun x1164 (Int) Int)
(declare-fun x473 () Int)
(declare-fun x145 () Int)
(declare-fun x672 () Int)
(declare-fun x341 () Bool)
(declare-fun x1181 () Int)
(declare-fun x626 () Int)
(declare-fun x881 () Int)
(declare-fun x1257 () Int)
(declare-fun x1096 () Int)
(declare-fun x957 () Int)
(declare-fun x920 () Int)
(declare-fun x1124 () Int)
(declare-fun x177 () Int)
(declare-fun x1173 () Int)
(declare-fun x986 () Int)
(declare-fun x322 () Int)
(declare-fun x592 () Bool)
(declare-fun x144 () Int)
(declare-fun x490 () Int)
(declare-fun x554 () Int)
(declare-fun x848 () Int)
(declare-fun x315 () Int)
(declare-fun x590 () Int)
(declare-fun x562 () Int)
(declare-fun x698 () Int)
(declare-fun x1242 () Int)
(declare-fun x865 () Int)
(declare-fun x311 () Int)
(declare-fun x42 () Int)
(declare-fun x446 () Bool)
(declare-fun x1117 () Int)
(declare-fun x468 () Int)
(declare-fun x1288 () Bool)
(declare-fun x1143 () Int)
(declare-fun x854 () Int)
(declare-fun x623 () Int)
(declare-fun x741 () Int)
(declare-fun x243 () Int)
(declare-fun x746 () Int)
(declare-fun x398 () Int)
(declare-fun x367 () Int)
(declare-fun x966 () Int)
(declare-fun x832 () Int)
(declare-fun x912 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1249 () Int)
(declare-fun x619 () Int)
(declare-fun x400 () Int)
(declare-fun x1194 () Int)
(declare-fun x313 () Int)
(declare-fun x820 () Int)
(declare-fun x811 () Bool)
(declare-fun x40 () Int)
(declare-fun x1230 () Int)
(declare-fun x552 () Bool)
(declare-fun x857 () Int)
(declare-fun x1126 () Int)
(declare-fun x962 () Int)
(declare-fun x448 () Int)
(declare-fun x576 () Int)
(declare-fun x556 () Int)
(declare-fun x1064 () Int)
(declare-fun x1282 () Bool)
(declare-fun x856 () Int)
(declare-fun x735 () Bool)
(declare-fun x83 () Int)
(declare-fun x17 () Int)
(declare-fun x1053 () Int)
(declare-fun x627 () Int)
(declare-fun x874 () Int)
(declare-fun x226 () Int)
(declare-fun x617 () Int)
(declare-fun x543 () Int)
(declare-fun x889 () Int)
(declare-fun x758 () Int)
(declare-fun x335 () Int)
(declare-fun x25 () Int)
(declare-fun x301 () Int)
(declare-fun x512 () Int)
(declare-fun x179 () Int)
(declare-fun x1197 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x904 () Int)
(declare-fun x571 () Int)
(declare-fun x508 () Int)
(declare-fun x371 () Int)
(declare-fun x685 () Int)
(declare-fun x773 () Int)
(declare-fun x232 () Bool)
(declare-fun x440 () Int)
(declare-fun x926 () Int)
(declare-fun x381 () Int)
(declare-fun x234 () Int)
(declare-fun x227 () Int)
(declare-fun x178 () Int)
(declare-fun x721 () Int)
(declare-fun x316 (Int) Int)
(declare-fun x1127 () Int)
(declare-fun x1121 () Int)
(declare-fun x64 () Int)
(declare-fun x94 (Int) Int)
(declare-fun x795 () Bool)
(declare-fun x131 () Int)
(declare-fun x642 () Int)
(declare-fun x1162 () Int)
(declare-fun x1000 () Int)
(declare-fun x612 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1118 () Int)
(declare-fun x62 () Bool)
(declare-fun x1085 () Int)
(declare-fun x682 () Int)
(declare-fun x909 () Int)
(declare-fun x238 () Int)
(declare-fun x220 () Int)
(declare-fun x518 () Int)
(declare-fun x756 () Int)
(declare-fun x191 () Int)
(declare-fun x751 () Int)
(declare-fun x724 () Int)
(declare-fun x681 () Int)
(declare-fun x804 () Int)
(declare-fun x86 () Int)
(declare-fun x1180 () Int)
(declare-fun x28 () Int)
(declare-fun x1198 () Int)
(declare-fun x643 () Int)
(declare-fun x622 () Int)
(declare-fun x222 () Int)
(declare-fun x507 () Int)
(declare-fun x713 () Int)
(declare-fun x687 () Int)
(declare-fun x1039 () Int)
(declare-fun x762 () Int)
(declare-fun x984 () Int)
(declare-fun x686 () Int)
(declare-fun x161 () Int)
(declare-fun x1201 () Int)
(declare-fun x1108 () Int)
(declare-fun x843 () Int)
(declare-fun x1211 () Int)
(declare-fun x1109 () Int)
(declare-fun x1057 () Bool)
(declare-fun x355 () Bool)
(declare-fun x299 () Int)
(declare-fun x142 () Int)
(declare-fun x124 () Int)
(declare-fun x742 () Bool)
(declare-fun x1037 () Int)
(declare-fun x392 () Int)
(declare-fun x1139 () Int)
(declare-fun x95 () Bool)
(declare-fun x716 () Int)
(declare-fun x846 () Bool)
(declare-fun x288 () Int)
(declare-fun x855 () Int)
(declare-fun x858 () Int)
(declare-fun x305 () Int)
(declare-fun x1119 () Int)
(declare-fun x712 () Int)
(declare-fun x298 () Int)
(declare-fun x391 () Int)
(declare-fun x1152 () Bool)
(declare-fun x879 () Int)
(declare-fun x1078 () Int)
(declare-fun x605 () Int)
(declare-fun x845 () Int)
(declare-fun x1 () Int)
(declare-fun x589 () Int)
(declare-fun x521 () Int)
(declare-fun x757 () Int)
(declare-fun x10 () Int)
(declare-fun x1070 () Int)
(declare-fun x1104 () Bool)
(declare-fun x886 () Int)
(declare-fun x972 () Int)
(declare-fun x1038 () Bool)
(declare-fun x138 () Int)
(declare-fun x1142 () Bool)
(declare-fun x263 () Int)
(declare-fun x1163 () Int)
(declare-fun x557 (Int) Int)
(declare-fun x394 () Int)
(declare-fun x978 () Int)
(declare-fun x988 () Int)
(declare-fun x504 () Int)
(declare-fun x200 () Int)
(declare-fun x540 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1293 () Int)
(declare-fun x1133 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1032 () Int)
(declare-fun x21 () Int)
(declare-fun x1216 () Int)
(declare-fun x3 (Int) Int)
(declare-fun x646 () Bool)
(declare-fun x441 () Int)
(declare-fun x780 (Int) Int)
(declare-fun x1284 () Int)
(declare-fun x456 () Int)
(declare-fun x268 () Int)
(declare-fun x485 () Int)
(declare-fun x34 () Int)
(declare-fun x43 () Int)
(declare-fun x717 () Int)
(declare-fun x1065 () Int)
(declare-fun x850 () Bool)
(declare-fun x352 () Int)
(declare-fun x921 () Int)
(declare-fun x450 () Int)
(declare-fun x503 () Int)
(declare-fun x581 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1243 () Int)
(declare-fun x1005 () Bool)
(declare-fun x707 () Int)
(declare-fun x437 () Int)
(declare-fun x884 () Int)
(declare-fun x126 () Int)
(declare-fun x866 () Int)
(declare-fun x1106 () Int)
(declare-fun x101 () Bool)
(declare-fun x156 () Int)
(declare-fun x995 () Int)
(declare-fun x106 () Bool)
(declare-fun x1059 () Int)
(declare-fun x424 () Int)
(declare-fun x130 () Bool)
(declare-fun x375 () Bool)
(declare-fun x462 () Int)
(declare-fun x614 () Int)
(declare-fun x700 () Int)
(declare-fun x487 () Int)
(declare-fun x664 () Int)
(declare-fun x566 () Int)
(declare-fun x210 () Int)
(declare-fun x613 () Bool)
(declare-fun x385 () Int)
(declare-fun x838 () Int)
(declare-fun x361 () Int)
(declare-fun x583 () Int)
(declare-fun x946 () Int)
(declare-fun x817 () Int)
(declare-fun x898 () Int)
(declare-fun x530 () Int)
(declare-fun x929 () Int)
(declare-fun x1159 () Int)
(declare-fun x1107 () Int)
(declare-fun x293 () Int)
(declare-fun x41 () Int)
(declare-fun x68 () Int)
(declare-fun x38 () Int)
(declare-fun x245 () Int)
(declare-fun x297 () Int)
(declare-fun x283 () Int)
(declare-fun x98 () Int)
(declare-fun x582 () Int)
(declare-fun x715 () Int)
(declare-fun x489 () Int)
(declare-fun x544 () Int)
(declare-fun x749 () Int)
(declare-fun x1009 () Bool)
(declare-fun x482 () Bool)
(declare-fun x806 () Int)
(declare-fun x918 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x951 () Int)
(declare-fun x1246 () Int)
(declare-fun x1206 () Int)
(declare-fun x852 () Int)
(declare-fun x1291 () Int)
(declare-fun x1034 () Int)
(declare-fun x1083 () Int)
(declare-fun x661 () Int)
(declare-fun x708 () Int)
(declare-fun x1229 () Int)
(declare-fun x499 () Int)
(declare-fun x829 (Int) Int)
(declare-fun x445 () Int)
(declare-fun x868 () Int)
(declare-fun x488 () Int)
(declare-fun x71 () Int)
(declare-fun x190 () Int)
(declare-fun x696 () Int)
(declare-fun x641 () Bool)
(declare-fun x422 () Bool)
(declare-fun x393 () Bool)
(declare-fun x728 () Int)
(declare-fun x732 () Int)
(declare-fun x459 () Int)
(declare-fun x120 () Int)
(declare-fun x839 () Int)
(declare-fun x1279 () Bool)
(declare-fun x611 () Int)
(declare-fun x1102 () Int)
(declare-fun x869 () Bool)
(declare-fun x674 () Int)
(declare-fun x1260 () Int)
(declare-fun x396 () Int)
(declare-fun x162 () Int)
(declare-fun x853 () Bool)
(declare-fun x91 () Int)
(declare-fun x776 () Int)
(declare-fun x254 (Int) Int)
(declare-fun x1263 () Int)
(declare-fun x1129 () Int)
(declare-fun x111 () Int)
(declare-fun x452 () Int)
(declare-fun x435 () Int)
(declare-fun x699 () Int)
(declare-fun x108 () Bool)
(declare-fun x663 () Int)
(declare-fun x368 () Int)
(declare-fun x1043 () Int)
(declare-fun x650 () Int)
(declare-fun x1289 () Int)
(declare-fun x1084 () Int)
(declare-fun x204 () Bool)
(declare-fun x616 () Int)
(declare-fun x818 () Int)
(declare-fun x1175 (Int) Int)
(declare-fun x1169 () Int)
(declare-fun x525 () Int)
(declare-fun x141 () Int)
(declare-fun x9 () Int)
(declare-fun x890 () Int)
(declare-fun x1176 () Int)
(declare-fun x1247 () Int)
(declare-fun x970 () Int)
(declare-fun x768 () Int)
(declare-fun x533 () Int)
(declare-fun x1195 () Int)
(declare-fun x516 () Int)
(declare-fun x123 (Int) Int)
(declare-fun x621 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x785 () Int)
(declare-fun x377 (Int) Int)
(declare-fun x273 () Int)
(declare-fun x1160 () Bool)
(declare-fun x22 () Int)
(declare-fun x168 () Int)
(declare-fun x157 () Int)
(declare-fun x90 () Int)
(declare-fun x969 () Int)
(declare-fun x739 () Int)
(declare-fun x427 () Int)
(declare-fun x977 () Int)
(declare-fun x464 () Int)
(declare-fun x403 () Int)
(declare-fun x496 () Int)
(declare-fun x212 () Int)
(declare-fun x630 () Int)
(declare-fun x192 () Int)
(declare-fun x36 () Int)
(declare-fun x494 () Int)
(declare-fun x569 () Int)
(declare-fun x7 () Int)
(declare-fun x460 () Int)
(declare-fun x692 () Int)
(declare-fun x449 () Int)
(declare-fun x1041 () Int)
(declare-fun x258 () Int)
(declare-fun x247 () Int)
(declare-fun x202 () Int)
(declare-fun x19 () Int)
(declare-fun x704 () Int)
(declare-fun x514 () Int)
(declare-fun x1028 () Int)
(declare-fun x519 () Int)
(declare-fun x104 () Int)
(declare-fun x1262 () Int)
(declare-fun x765 () Int)
(declare-fun x563 () Int)
(declare-fun x453 () Bool)
(declare-fun x85 () Bool)
(declare-fun x474 () Int)
(declare-fun x128 () Int)
(declare-fun x1278 () Int)
(declare-fun x1214 (Int Int) Int)
(declare-fun x644 () Int)
(declare-fun x176 () Int)
(declare-fun x844 () Int)
(declare-fun x648 () Int)
(declare-fun x915 () Int)
(declare-fun x1235 () Int)
(declare-fun x15 () Bool)
(declare-fun x647 () Int)
(declare-fun x863 () Int)
(declare-fun x1022 () Int)
(declare-fun x936 () Int)
(declare-fun x155 () Int)
(declare-fun x775 () Bool)
(declare-fun x1248 () Int)
(declare-fun x376 () Int)
(declare-fun x723 () Int)
(declare-fun x560 () Bool)
(declare-fun x671 () Bool)
(declare-fun x1150 () Int)
(declare-fun x1110 () Int)
(declare-fun x277 () Int)
(declare-fun x1178 () Bool)
(declare-fun x230 () Int)
(declare-fun x637 () Bool)
(declare-fun x538 () Int)
(declare-fun x542 () Int)
(declare-fun x286 () Int)
(declare-fun x584 () Int)
(declare-fun x296 () Int)
(declare-fun x347 () Int)
(declare-fun x1294 () Int)
(declare-fun x328 () Int)
(declare-fun x397 () Int)
(declare-fun x1286 () Int)
(declare-fun x148 () Int)
(declare-fun x640 () Int)
(declare-fun x849 () Int)
(declare-fun x651 () Int)
(declare-fun x790 () Int)
(declare-fun x993 () Int)
(declare-fun x523 () Bool)
(declare-fun x300 () Bool)
(declare-fun x645 () Bool)
(declare-fun x325 () Bool)
(declare-fun x567 () Int)
(declare-fun x665 () Int)
(declare-fun x580 () Int)
(declare-fun x1212 () Int)
(declare-fun x748 () Int)
(declare-fun x433 () Int)
(declare-fun x594 () Int)
(declare-fun x537 () Int)
(declare-fun x547 () Bool)
(declare-fun x835 () Int)
(declare-fun x431 () Bool)
(declare-fun x747 (Int) Int)
(declare-fun x761 () Int)
(declare-fun x706 () Int)
(declare-fun x864 () Int)
(declare-fun x248 () Int)
(declare-fun x309 () Int)
(declare-fun x279 () Int)
(declare-fun x595 () Bool)
(declare-fun x340 () Int)
(declare-fun x143 () Bool)
(declare-fun x564 () Int)
(declare-fun x896 () Bool)
(declare-fun x266 () Int)
(declare-fun x624 () Int)
(declare-fun x82 () Int)
(declare-fun x597 () Int)
(declare-fun x409 () Bool)
(declare-fun x536 () Int)
(declare-fun x45 () Int)
(declare-fun x213 () Int)
(declare-fun x517 () Int)
(declare-fun x1266 () Int)
(declare-fun x26 () Int)
(declare-fun x350 () Int)
(declare-fun x139 () Int)
(declare-fun x591 () Int)
(declare-fun x362 () Bool)
(declare-fun x31 () Int)
(declare-fun x1125 () Int)
(declare-fun x937 () Int)
(declare-fun x1277 () Bool)
(declare-fun x505 () Bool)
(declare-fun x878 () Int)
(declare-fun x372 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x239 () Int)
(declare-fun x1033 () Int)
(declare-fun x1050 (Int) Int)
(declare-fun x930 () Int)
(declare-fun x434 () Int)
(declare-fun x841 () Bool)
(declare-fun x185 () Int)
(declare-fun x72 () Int)
(declare-fun x607 () Int)
(declare-fun x257 () Bool)
(declare-fun x799 () Bool)
(declare-fun x693 () Bool)
(declare-fun x788 () Int)
(declare-fun x1116 () Int)
(declare-fun x1016 () Int)
(declare-fun x135 () Int)
(declare-fun x1131 () Int)
(declare-fun x942 () Int)
(declare-fun x369 () Int)
(declare-fun x118 () Int)
(declare-fun x1092 () Int)
(declare-fun x840 () Int)
(declare-fun x295 () Int)
(declare-fun x1004 () Int)
(declare-fun x348 () Int)
(declare-fun x1167 () Int)
(declare-fun x891 () Bool)
(declare-fun x197 () Int)
(declare-fun x778 () Int)
(declare-fun x1135 () Int)
(declare-fun x636 () Bool)
(declare-fun x357 () Int)
(declare-fun x338 () Int)
(declare-fun x842 () Int)
(declare-fun x484 () Int)
(declare-fun x722 () Bool)
(declare-fun x1082 () Int)
(declare-fun x479 () Bool)
(declare-fun x548 () Int)
(declare-fun x509 () Int)
(declare-fun x1280 () Bool)
(declare-fun x824 (Int) Int)
(declare-fun x1074 () Int)
(declare-fun x154 () Int)
(declare-fun x703 () Int)
(declare-fun x1233 () Int)
(declare-fun x779 () Bool)
(declare-fun x345 () Int)
(declare-fun x633 () Int)
(declare-fun x599 () Int)
(declare-fun x442 () Bool)
(declare-fun x199 () Int)
(declare-fun x763 () Int)
(declare-fun x1255 () Int)
(declare-fun x6 () Int)
(declare-fun x23 () Int)
(declare-fun x183 () Int)
(declare-fun x836 () Int)
(declare-fun x740 () Int)
(declare-fun x710 () Int)
(declare-fun x137 () Int)
(declare-fun x1071 () Int)
(declare-fun x968 () Int)
(declare-fun x181 () Int)
(declare-fun x1003 () Int)
(declare-fun x938 () Int)
(declare-fun x314 () Int)
(declare-fun x312 () Int)
(declare-fun x416 () Int)
(declare-fun x310 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1044 () Int)
(declare-fun x180 () Int)
(declare-fun x782 () Int)
(declare-fun x51 () Int)
(declare-fun x359 () Int)
(declare-fun x117 () Int)
(declare-fun x1174 () Int)
(declare-fun x733 () Int)
(declare-fun x837 () Int)
(declare-fun x1015 () Int)
(declare-fun x553 () Int)
(declare-fun x1094 () Int)
(declare-fun x1136 () Int)
(declare-fun x873 () Int)
(declare-fun x1168 () Bool)
(declare-fun x133 () Int)
(declare-fun x822 () Int)
(declare-fun x796 () Int)
(declare-fun x534 () Int)
(declare-fun x1196 () Bool)
(declare-fun x255 () Int)
(declare-fun x317 () Int)
(declare-fun x374 () Int)
(declare-fun x960 () Int)
(declare-fun x324 () Int)
(declare-fun x1269 () Int)
(declare-fun x1236 () Int)
(declare-fun x1223 () Int)
(declare-fun x1185 () Bool)
(declare-fun x575 () Int)
(declare-fun x122 () Int)
(declare-fun x198 () Int)
(declare-fun x195 () Int)
(declare-fun x70 () Int)
(declare-fun x415 () Int)
(declare-fun x798 () Int)
(declare-fun x188 () Int)
(declare-fun x545 () Int)
(declare-fun x439 () Int)
(declare-fun x913 () Bool)
(declare-fun x744 () Int)
(declare-fun x823 () Bool)
(declare-fun x1213 () Int)
(declare-fun x333 () Int)
(declare-fun x339 () Bool)
(declare-fun x351 () Int)
(declare-fun x59 () Int)
(declare-fun x691 () Int)
(declare-fun x1072 () Int)
(declare-fun x927 () Int)
(declare-fun x1068 () Int)
(declare-fun x1134 () Bool)
(declare-fun x893 () Int)
(declare-fun x767 () Int)
(declare-fun x275 () Int)
(declare-fun x754 () Int)
(declare-fun x738 () Int)
(declare-fun x1049 () Int)
(declare-fun x522 () Bool)
(declare-fun x985 () Int)
(declare-fun x132 () Int)
(declare-fun x819 () Int)
(declare-fun x1272 () Bool)
(declare-fun x265 () Int)
(declare-fun x1270 () Int)
(declare-fun x961 () Int)
(declare-fun x606 () Int)
(declare-fun x75 () Int)
(declare-fun x443 () Int)
(declare-fun x793 () Int)
(declare-fun x337 () Int)
(declare-fun x561 () Int)
(declare-fun x432 () Int)
(declare-fun x383 () Int)
(declare-fun x620 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1123 () Int)
(declare-fun x797 () Int)
(declare-fun x1202 () Int)
(declare-fun x61 () Int)
(declare-fun x908 () Int)
(declare-fun x382 () Bool)
(declare-fun x684 () Int)
(declare-fun x264 () Bool)
(declare-fun x933 () Int)
(declare-fun x895 () Int)
(declare-fun x511 () Int)
(declare-fun x105 () Int)
(declare-fun x1128 () Int)
(declare-fun x574 () Int)
(declare-fun x883 () Int)
(declare-fun x127 () Int)
(declare-fun x766 () Int)
(declare-fun x935 () Int)
(declare-fun x1058 () Int)
(declare-fun x358 () Int)
(declare-fun x250 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1218 () Int)
(declare-fun x678 () Bool)
(declare-fun x447 () Int)
(declare-fun x963 () Int)
(declare-fun x276 () Bool)
(declare-fun x1087 () Int)
(declare-fun x830 () Int)
(declare-fun x1062 () Int)
(declare-fun x658 () Int)
(declare-fun x1095 () Int)
(declare-fun x1227 () Int)
(declare-fun x5 () Int)
(declare-fun x412 () Int)
(declare-fun x783 () Bool)
(declare-fun x1276 () Int)
(declare-fun x899 () Int)
(declare-fun x92 () Int)
(declare-fun x1122 () Int)
(declare-fun x743 () Int)
(declare-fun x165 () Int)
(declare-fun x1099 () Bool)
(declare-fun x833 () Int)
(declare-fun x147 () Int)
(declare-fun x1010 () Int)
(declare-fun x666 () Int)
(declare-fun x1166 () Int)
(declare-fun x1186 () Int)
(declare-fun x217 (Int) Int)
(declare-fun x478 () Int)
(declare-fun x998 () Int)
(declare-fun x100 () Int)
(declare-fun x497 () Int)
(declare-fun x47 () Bool)
(declare-fun x1014 () Int)
(declare-fun x223 () Int)
(declare-fun x48 () Bool)
(declare-fun x714 () Int)
(declare-fun x387 () Int)
(declare-fun x600 () Int)
(declare-fun x1066 () Int)
(declare-fun x764 (Int Int Int Int Int) Int)
(declare-fun x1265 () Int)
(declare-fun x425 () Int)
(declare-fun x784 () Int)
(declare-fun x1040 () Int)
(declare-fun x395 () Int)
(declare-fun x58 () Int)
(declare-fun x99 () Int)
(declare-fun x249 () Bool)
(declare-fun x119 () Int)
(declare-fun x906 () Int)
(declare-fun x46 () Int)
(declare-fun x1002 () Int)
(declare-fun x426 () Int)
(declare-fun x675 () Int)
(declare-fun x461 () Int)
(declare-fun x625 () Int)
(declare-fun x271 () Int)
(declare-fun x252 () Int)
(declare-fun x12 () Int)
(declare-fun x1081 () Int)
(declare-fun x1021 (Int) Int)
(declare-fun x278 () Bool)
(declare-fun x1297 () Int)
(declare-fun x32 () Int)
(declare-fun x670 () Int)
(declare-fun x526 () Bool)
(declare-fun x321 () Int)
(declare-fun x635 () Int)
(declare-fun x941 (Int) Int)
(declare-fun x1200 () Int)
(declare-fun x66 () Int)
(declare-fun x1098 () Int)
(declare-fun x1061 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x539 () Bool)
(declare-fun x604 () Int)
(declare-fun x96 () Bool)
(declare-fun x568 () Int)
(declare-fun x791 () Int)
(declare-fun x65 () Int)
(declare-fun x652 () Int)
(declare-fun x370 (Int Int Int) Int)
(declare-fun x470 () Int)
(declare-fun x169 () Int)
(declare-fun x910 () Int)
(declare-fun x608 () Int)
(declare-fun x805 () Int)
(declare-fun x924 () Int)
(declare-fun x52 () Int)
(declare-fun x110 () Int)
(declare-fun x851 () Int)
(declare-fun x559 () Int)
(declare-fun x274 () Int)
(declare-fun x586 () Int)
(declare-fun x1147 () Bool)
(declare-fun x502 () Int)
(declare-fun x16 () Bool)
(declare-fun x201 () Int)
(declare-fun x282 () Int)
(declare-fun x573 () Int)
(declare-fun x1080 () Int)
(declare-fun x29 () Int)
(declare-fun x769 () Int)
(declare-fun x379 () Bool)
(declare-fun x1237 () Int)
(declare-fun x401 () Int)
(declare-fun x588 () Int)
(declare-fun x727 () Int)
(declare-fun x116 () Int)
(declare-fun x759 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x294 () Int)
(declare-fun x631 () Int)
(declare-fun x205 () Int)
(declare-fun x410 () Bool)
(declare-fun x834 () Int)
(declare-fun x888 () Int)
(declare-fun x982 () Int)
(declare-fun x81 () Int)
(declare-fun x923 () Int)
(declare-fun x677 () Int)
(declare-fun x353 () Int)
(declare-fun x287 () Int)
(declare-fun x378 () Int)
(declare-fun x1210 () Int)
(declare-fun x1097 () Int)
(declare-fun x821 () Int)
(declare-fun x1275 () Int)
(declare-fun x406 () Int)
(declare-fun x500 () Int)
(declare-fun x53 () Int)
(declare-fun x121 () Int)
(declare-fun x971 () Int)
(declare-fun x1056 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x306 () Int)
(declare-fun x451 () Int)
(declare-fun x653 () Int)
(declare-fun x469 () Bool)
(declare-fun x618 () Int)
(declare-fun x940 () Int)
(declare-fun x134 () Int)
(declare-fun x329 () Int)
(declare-fun x80 () Bool)
(declare-fun x1075 () Int)
(declare-fun x777 () Int)
(declare-fun x67 () Bool)
(declare-fun x781 () Int)
(declare-fun x1261 () Int)
(declare-fun x1231 (Int) Int)
(declare-fun x694 () Bool)
(declare-fun x1296 () Int)
(declare-fun x905 () Int)
(declare-fun x336 () Bool)
(declare-fun x528 () Int)
(declare-fun x164 () Int)
(declare-fun x720 () Int)
(declare-fun x1259 () Int)
(declare-fun x1101 () Int)
(declare-fun x458 () Int)
(declare-fun x1046 () Int)
(declare-fun x683 () Int)
(declare-fun x1114 (Int Int Int Int) Int)
(declare-fun x974 () Bool)
(declare-fun x493 () Int)
(declare-fun x725 () Bool)
(declare-fun x125 () Int)
(declare-fun x172 () Int)
(declare-fun x1209 () Int)
(declare-fun x551 () Int)
(declare-fun x655 (Int) Int)
(declare-fun x35 () Int)
(declare-fun x114 () Int)
(declare-fun x285 () Int)
(declare-fun x701 () Int)
(declare-fun x709 () Int)
(declare-fun x1228 () Int)
(declare-fun x917 () Int)
(declare-fun x390 () Int)
(declare-fun x719 () Int)
(declare-fun x943 () Int)
(declare-fun x679 () Int)
(declare-fun x404 () Int)
(declare-fun x731 () Int)
(declare-fun x726 () Int)
(declare-fun x244 () Int)
(declare-fun x1271 (Int) Int)
(declare-fun x237 () Int)
(declare-fun x897 () Int)
(declare-fun x163 () Int)
(declare-fun x471 () Bool)
(declare-fun x112 () Int)
(declare-fun x867 () Int)
(declare-fun x549 () Int)
(declare-fun x152 () Int)
(declare-fun x421 (Int) Int)
(declare-fun x214 () Int)
(declare-fun x814 () Int)
(declare-fun x794 () Int)
(declare-fun x673 () Int)
(declare-fun x256 () Int)
(declare-fun x50 () Int)
(declare-fun x1183 () Int)
(declare-fun x801 () Int)
(declare-fun x417 () Int)
(declare-fun x399 () Int)
(declare-fun x1076 () Int)
(declare-fun x457 () Int)
(declare-fun x428 () Bool)
(declare-fun x825 () Int)
(declare-fun x1225 () Int)
(declare-fun x676 () Int)
(declare-fun x1250 () Int)
(declare-fun x480 () Int)
(declare-fun x465 () Int)
(declare-fun x18 () Int)
(declare-fun x550 () Int)
(declare-fun x78 () Int)
(declare-fun x949 () Int)
(declare-fun x903 () Int)
(declare-fun x1219 () Int)
(declare-fun x270 () Int)
(declare-fun x1274 () Int)
(declare-fun x1091 () Int)
(declare-fun x159 () Int)
(declare-fun x1047 () Int)
(declare-fun x931 () Int)
(declare-fun x475 () Int)
(declare-fun x77 () Bool)
(declare-fun x215 () Bool)
(declare-fun x916 () Int)
(declare-fun x1244 () Int)
(declare-fun x945 () Bool)
(declare-fun x1029 (Int) Bool)
(declare-fun x113 (Int Int) Int)
(declare-fun x934 () Int)
(declare-fun x14 (Int) Int)
(declare-fun x292 () Int)
(declare-fun x430 () Int)
(declare-fun x1036 () Int)
(declare-fun x925 () Int)
(declare-fun x356 () Int)
(declare-fun x236 () Int)
(declare-fun x808 () Bool)
(declare-fun x980 () Int)
(declare-fun x240 () Bool)
(declare-fun x815 () Int)
(declare-fun x745 () Int)
(declare-fun x97 () Int)
(declare-fun x882 () Int)
(declare-fun x1031 () Int)
(declare-fun x1187 () Int)
(declare-fun x680 () Int)
(declare-fun x44 () Int)
(declare-fun x812 () Int)
(declare-fun x1026 (Int Int Int Int Int Int) Int)
(declare-fun x1287 () Int)
(declare-fun x950 () Int)
(declare-fun x420 () Int)
(declare-fun x520 () Bool)
(declare-fun x1013 () Int)
(declare-fun x76 () Bool)
(declare-fun x307 () Int)
(declare-fun x54 () Int)
(declare-fun x660 () Int)
(declare-fun x1035 () Bool)
(declare-fun x24 () Int)
(declare-fun x1089 () Int)
(declare-fun x1299 () Int)
(declare-fun x810 () Int)
(declare-fun x730 () Int)
(declare-fun x364 () Int)
(declare-fun x411 () Int)
(declare-fun x1199 () Int)
(declare-fun x875 () Int)
(declare-fun x695 () Int)
(declare-fun x4 () Int)
(declare-fun x967 () Int)
(declare-fun x225 () Bool)
(declare-fun x831 () Int)
(declare-fun x1151 () Bool)
(declare-fun x506 () Int)
(declare-fun x876 () Int)
(declare-fun x958 () Int)
(declare-fun x39 () Int)
(declare-fun x527 () Int)
(declare-fun x189 () Int)
(declare-fun x1252 () Int)
(define-fun x290 ((x107 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x107) (>= x107 0)) x107 (- x107 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x991 ((x107 Int)) Int (ite (and (< x107 0) (>= x107 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x107 115792089237316195423570985008687907853269984665640564039457584007913129639936) x107))
(define-fun x1149 ((x649 Int)) Bool (and (>= x649 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x649)))
(define-fun x1220 ((x649 Int)) Bool (and (= (x113 x649 115792089237316195423570985008687907853269984665640564039457584007913129639935) x649) (= (x113 115792089237316195423570985008687907853269984665640564039457584007913129639935 x649) x649)))
(define-fun x603 ((x649 Int)) Bool (and (= 0 (x113 x649 0)) (= (x113 0 x649) 0)))
(define-fun x331 ((x649 Int)) Bool (= (x113 x649 x649) x649))
(define-fun x384 ((x649 Int)) Bool (and (x331 x649) (x1220 x649) (x603 x649)))
(define-fun x885 ((x649 Int) (x1144 Int)) Bool (= (x113 x649 x1144) (x113 x1144 x649)))
(define-fun x1258 ((x649 Int) (x1144 Int)) Bool (and (=> (>= x649 0) (>= x649 (x113 x649 x1144))) (<= 0 (x113 x649 x1144)) (=> (>= x1144 0) (<= (x113 x649 x1144) x1144))))
(define-fun x211 ((x649 Int) (x1144 Int)) Bool (and (x1258 x649 x1144) (x885 x649 x1144)))
(define-fun x546 ((x649 Int)) Bool (= (mod x649 1461501637330902918203684832716283019655932542976) (x113 x649 1461501637330902918203684832716283019655932542975)))
(define-fun x596 ((x649 Int)) Bool (and (x546 x649) (x211 x649 1461501637330902918203684832716283019655932542975)))
(define-fun x983 ((x649 Int)) Bool (= (+ (x113 x649 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x649 32)) (mod x649 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x667 ((x649 Int)) Bool (and (x983 x649) (x211 x649 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x718 ((x771 Int)) Int (ite (< x771 x111) (x14 x771) 0))
(define-fun x1295 ((x771 Int)) Int 0)
(define-fun x74 ((x771 Int)) Int (x174 x771))
(define-fun x1132 ((x771 Int)) Int (x3 x771))
(define-fun x89 ((x771 Int)) Int (x941 x771))
(define-fun x318 ((x771 Int)) Int (x421 x771))
(define-fun x63 ((x771 Int)) Int (x94 x771))
(define-fun x149 ((x771 Int)) Int 0)
(define-fun x1052 ((x771 Int)) Int (ite (= x771 4) 32 (x149 x771)))
(define-fun x483 ((x771 Int)) Int (ite (= 36 x771) x252 (x1052 x771)))
(define-fun x860 ((x771 Int)) Int (ite (= x771 68) x1116 (x483 x771)))
(define-fun x241 ((x771 Int)) Int (ite (= x771 100) x717 (x860 x771)))
(define-fun x60 ((x771 Int)) Int (ite (= x771 132) 352 (x241 x771)))
(define-fun x414 ((x771 Int)) Int (ite (= 388 x771) x723 (x60 x771)))
(define-fun x656 ((x771 Int)) Int (ite (and (>= x771 420) (< x771 (+ 420 x548))) (x74 (- x771 420)) (x414 x771)))
(define-fun x408 ((x771 Int)) Int (ite (= 164 x771) x233 (x656 x771)))
(define-fun x953 ((x771 Int)) Int (ite (= x771 x719) x924 (x408 x771)))
(define-fun x1140 ((x771 Int)) Int (ite (and (>= x771 x1124) (< x771 (+ x564 x1124))) (x1132 (- x771 x1124)) (x953 x771)))
(define-fun x787 ((x771 Int)) Int (ite (= 196 x771) x367 (x1140 x771)))
(define-fun x1170 ((x771 Int)) Int (ite (= x771 x969) x1141 (x787 x771)))
(define-fun x79 ((x771 Int)) Int (ite (and (> (+ x982 x545) x771) (>= x771 x982)) (x89 (- x771 x982)) (x1170 x771)))
(define-fun x349 ((x771 Int)) Int (ite (= 228 x771) x185 (x79 x771)))
(define-fun x662 ((x771 Int)) Int (ite (= x771 x700) x329 (x349 x771)))
(define-fun x1153 ((x771 Int)) Int (ite (and (> (+ x959 x329) x771) (>= x771 x959)) (x318 (- x771 x959)) (x662 x771)))
(define-fun x1190 ((x771 Int)) Int (ite (= x771 260) x436 (x1153 x771)))
(define-fun x1256 ((x771 Int)) Int (ite (= x626 x771) x968 (x1190 x771)))
(define-fun x1146 ((x771 Int)) Int (ite (and (< x771 (+ x834 x781)) (<= x834 x771)) (x63 (- x771 x834)) (x1256 x771)))
(define-fun x115 ((x771 Int)) Int (ite (= 292 x771) x1233 (x1146 x771)))
(define-fun x901 ((x771 Int)) Int (ite (= 324 x771) x1078 (x115 x771)))
(define-fun x1158 ((x771 Int)) Int (ite (= x771 356) x752 (x901 x771)))
(define-fun x809 ((x771 Int)) Int (ite (= x1171 x771) x1275 (x1164 x771)))
(define-fun x859 ((x771 Int)) Int (ite (= x635 x771) x99 (x809 x771)))
(define-fun x705 ((x771 Int)) Int (ite (= x771 128) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1295 x771)))
(define-fun x472 ((x771 Int)) Int (ite (= 132 x771) x903 (x705 x771)))
(define-fun x363 ((x771 Int)) Int (ite (= x771 164) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x472 x771)))
(define-fun x1067 ((x771 Int)) Int (ite (and (> 160 x771) (>= x771 128)) (x829 (- x771 128)) (x363 x771)))
(define-fun x1207 ((x771 Int)) Int (ite x552 (x1067 x771) (x363 x771)))
(define-fun x175 ((x771 Int)) Int (ite (and (>= x771 128) (< x771 160)) (x829 (- x771 128)) (x1207 x771)))
(define-fun x807 ((x771 Int)) Int (ite (= 288 x771) x447 (x175 x771)))
(define-fun x1054 ((x771 Int)) Int (ite (= 160 x771) 288 (x807 x771)))
(define-fun x753 ((x771 Int)) Int (ite (= x771 320) x445 (x1054 x771)))
(define-fun x373 ((x771 Int)) Int (ite (= x771 352) x294 (x753 x771)))
(define-fun x659 ((x771 Int)) Int (ite (= x771 448) x1135 (x373 x771)))
(define-fun x1268 ((x771 Int)) Int (ite (= x622 x771) x812 (x659 x771)))
(define-fun x572 ((x771 Int)) Int (ite (= x238 x771) x915 (x1268 x771)))
(define-fun x1226 ((x771 Int)) Int (ite (= x771 x749) x1128 (x572 x771)))
(define-fun x1073 ((x771 Int)) Int (ite (and (<= x651 x771) (> (+ x1128 x651) x771)) (x1158 (- (+ x1269 x771) x651)) (x1226 x771)))
(define-fun x634 ((x771 Int)) Int (ite (= x771 x1091) 0 (x1073 x771)))
(define-fun x947 ((x771 Int)) Int (ite (= x771 x882) x749 (x634 x771)))
(define-fun x1298 ((x771 Int)) Int (ite (= x771 480) x622 (x947 x771)))
(define-fun x697 ((x771 Int)) Int (ite x1145 (x659 x771) (x1298 x771)))
(define-fun x870 ((x771 Int)) Int (ite (= 384 x771) 448 (x697 x771)))
(define-fun x1137 ((x771 Int)) Int (ite (= x575 x771) x758 (x870 x771)))
(define-fun x334 ((x771 Int)) Int (ite (and (> (+ x864 x758) x771) (>= x771 x864)) (x1158 (- (+ x1213 x771) x864)) (x1137 x771)))
(define-fun x281 ((x771 Int)) Int (ite (= x771 x119) 0 (x334 x771)))
(define-fun x948 ((x771 Int)) Int (ite (= x771 416) x575 (x281 x771)))
(define-fun x103 ((x771 Int)) Int (ite (= 192 x771) 320 (x948 x771)))
(define-fun x772 ((x771 Int)) Int (ite (= x771 224) x965 (x103 x771)))
(define-fun x907 ((x771 Int)) Int (ite (= x771 256) x904 (x772 x771)))
(define-fun x555 ((x771 Int)) Int (ite (= x984 x771) x43 (x907 x771)))
(define-fun x1240 ((x771 Int)) Int (ite (and (<= x549 x771) (> (+ x549 x43) x771)) (x1158 (- (+ x771 x1195) x549)) (x555 x771)))
(define-fun x389 ((x771 Int)) Int (ite (= x1122 x771) 0 (x1240 x771)))
(define-fun x828 ((x771 Int)) Int (ite (= x450 x771) x877 (x389 x771)))
(define-fun x615 ((x771 Int)) Int (ite (= x771 x517) x957 (x828 x771)))
(define-fun x628 ((x771 Int)) Int (ite (= x440 x771) x38 (x615 x771)))
(define-fun x1300 ((x771 Int)) Int (ite (= x162 x771) x177 (x628 x771)))
(define-fun x862 ((x771 Int)) Int (ite (= x497 x771) x698 (x1300 x771)))
(define-fun x438 ((x771 Int)) Int (ite (= x192 x771) x499 (x862 x771)))
(define-fun x1100 ((x771 Int)) Int (ite (= x1053 x771) x494 (x438 x771)))
(define-fun x928 ((x771 Int)) Int (ite (= x771 x1186) x162 (x1100 x771)))
(define-fun x632 ((x771 Int)) Int (ite x375 (x628 x771) (x928 x771)))
(define-fun x1069 ((x771 Int)) Int (ite (= x771 x308) x440 (x632 x771)))
(define-fun x690 ((x771 Int)) Int (ite (= x172 x771) x1118 (x1069 x771)))
(define-fun x609 ((x771 Int)) Int (ite (= x510 x771) x255 (x690 x771)))
(define-fun x602 ((x771 Int)) Int (ite (= x892 x771) x37 (x609 x771)))
(define-fun x702 ((x771 Int)) Int (ite (= x42 x771) x81 (x602 x771)))
(define-fun x280 ((x771 Int)) Int (ite (= x771 x762) x1085 (x702 x771)))
(define-fun x302 ((x771 Int)) Int (ite (= x771 x36) x17 (x280 x771)))
(define-fun x654 ((x771 Int)) Int (ite (= x616 x771) x510 (x302 x771)))
(define-fun x989 ((x771 Int)) Int (ite x522 (x690 x771) (x654 x771)))
(define-fun x284 ((x771 Int)) Int (ite (= x321 x771) x172 (x989 x771)))
(define-fun x1267 ((x771 Int)) Int (ite (= x771 x380) x454 (x284 x771)))
(define-fun x570 ((x771 Int)) Int (ite (= x537 x771) x148 (x1267 x771)))
(define-fun x639 ((x771 Int)) Int (ite (= x971 x771) x1163 (x570 x771)))
(define-fun x327 ((x771 Int)) Int (ite (= x771 x610) x821 (x639 x771)))
(define-fun x1019 ((x771 Int)) Int (ite (= x966 x771) x999 (x327 x771)))
(define-fun x1063 ((x771 Int)) Int (ite (= x848 x771) x532 (x1019 x771)))
(define-fun x880 ((x771 Int)) Int (ite (= x771 x1080) x537 (x1063 x771)))
(define-fun x734 ((x771 Int)) Int (ite x974 (x1267 x771) (x880 x771)))
(define-fun x207 ((x771 Int)) Int (ite (= x1296 x771) x380 (x734 x771)))
(define-fun x996 ((x771 Int)) Int (ite (= x1095 x771) x680 (x207 x771)))
(define-fun x216 ((x771 Int)) Int (ite (= x771 x798) x658 (x996 x771)))
(define-fun x231 ((x771 Int)) Int (ite (= x1006 x771) x183 (x216 x771)))
(define-fun x1222 ((x771 Int)) Int (ite (= x771 x963) x39 (x231 x771)))
(define-fun x73 ((x771 Int)) Int (ite (= x771 x310) x992 (x1222 x771)))
(define-fun x186 ((x771 Int)) Int (ite (= x771 x19) x879 (x73 x771)))
(define-fun x136 ((x771 Int)) Int (ite (and (< x771 (+ x457 x332)) (>= x771 x332)) (x1158 (- (+ x504 x771) x332)) (x186 x771)))
(define-fun x800 ((x771 Int)) Int (ite x539 (x186 x771) (x136 x771)))
(define-fun x405 ((x771 Int)) Int (ite x469 (x800 x771) (x1271 x771)))
(define-fun x481 ((x771 Int)) Int (ite (= x292 x771) x704 (x405 x771)))
(define-fun x760 ((x771 Int)) Int (ite x945 (x481 x771) (ite x1056 (x405 x771) (x1239 x771))))
(define-fun x360 ((x771 Int)) Int (ite (= x771 x11) x586 (x760 x771)))
(define-fun x919 ((x771 Int)) Int (ite (= x866 x771) x567 (x360 x771)))
(define-fun x689 ((x771 Int)) Int (ite (= x771 x197) x838 (x919 x771)))
(define-fun x1292 ((x771 Int)) Int (ite (= x618 x771) x686 (x689 x771)))
(define-fun x423 ((x771 Int)) Int (ite (= x771 x87) x712 (x1292 x771)))
(define-fun x952 ((x771 Int)) Int (ite (= x771 x1109) x35 (x423 x771)))
(define-fun x88 ((x771 Int)) Int (ite (= x771 x228) x611 (x952 x771)))
(define-fun x668 ((x771 Int)) Int (ite (= x1179 x771) x126 (x88 x771)))
(define-fun x140 ((x771 Int)) Int (ite (= x771 x253) x938 (x668 x771)))
(define-fun x750 ((x771 Int)) Int (ite (= x771 x1285) x324 (x140 x771)))
(define-fun x1188 ((x771 Int)) Int (ite (= x84 x771) x237 (x750 x771)))
(define-fun x320 ((x771 Int)) Int (ite (= x771 x358) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x1188 x771)))
(define-fun x802 ((x771 Int)) Int (ite (= x771 x219) x128 (x320 x771)))
(define-fun x987 ((x771 Int)) Int (ite (= x771 x288) x485 (x802 x771)))
(define-fun x1254 ((x771 Int)) Int (x987 x771))
(define-fun x979 ((x771 Int)) Int (ite (= x771 x407) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1254 x771)))
(define-fun x267 ((x771 Int)) Int (ite (= x771 x1227) x1262 (x979 x771)))
(define-fun x1281 ((x771 Int)) Int (ite (= x314 x771) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x267 x771)))
(define-fun x736 ((x771 Int)) Int (ite (and (> (+ x407 32) x771) (<= x407 x771)) (x1021 (- x771 x407)) (x1281 x771)))
(define-fun x1120 ((x771 Int)) Int (ite x520 (x736 x771) (x1281 x771)))
(define-fun x413 ((x771 Int)) Int (ite (and (>= x771 x407) (< x771 (+ 32 x407))) (x1021 (- x771 x407)) (x1120 x771)))
(define-fun x203 ((x771 Int)) Int (ite (= x771 x112) x312 (x413 x771)))
(define-fun x184 ((x771 Int)) Int (ite (and (>= x771 x97) (> (+ x863 x97) x771)) (x1158 (- (+ x771 x504) x97)) (x203 x771)))
(define-fun x1079 ((x771 Int)) Int (ite x1112 (x203 x771) (x184 x771)))
(define-fun x33 ((x771 Int)) Int (ite (= x771 x330) x41 (x1079 x771)))
(define-fun x577 ((x771 Int)) Int (ite (= x771 x810) x895 (x33 x771)))
(define-fun x944 ((x771 Int)) Int (ite (= x771 x1064) x1044 (x577 x771)))
(define-fun x102 ((x771 Int)) Int (ite (= x942 x771) 128 (x944 x771)))
(define-fun x259 ((x771 Int)) Int (ite (= x1166 x771) x1082 (x102 x771)))
(define-fun x171 ((x771 Int)) Int (ite (= x771 x117) x844 (x259 x771)))
(define-fun x129 ((x771 Int)) Int (ite x1241 (x171 x771) (ite x1104 (x259 x771) (x557 x771))))
(define-fun x1105 ((x771 Int)) Int (ite (= x771 x726) 0 (x129 x771)))
(define-fun x69 ((x771 Int)) Int (ite (= x771 x936) x270 (x1105 x771)))
(define-fun x289 ((x771 Int)) Int (ite (= x771 x767) x940 (x69 x771)))
(define-fun x813 ((x771 Int)) Int (ite x278 (x1079 x771) (x289 x771)))
(define-fun x1088 ((x771 Int)) Int (ite (= x676 x771) x191 (x813 x771)))
(define-fun x981 ((x771 Int)) Int (ite x678 (x1088 x771) (ite x1099 (x813 x771) (x476 x771))))
(define-fun x194 ((x771 Int)) Int (ite (= x771 x137) x487 (x981 x771)))
(define-fun x816 ((x771 Int)) Int (ite (= x771 x261) x567 (x194 x771)))
(define-fun x55 ((x771 Int)) Int (ite (= x713 x771) x444 (x816 x771)))
(define-fun x922 ((x771 Int)) Int (ite (= x608 x771) x912 (x55 x771)))
(define-fun x303 ((x771 Int)) Int (ite (= x771 x1101) x21 (x922 x771)))
(define-fun x587 ((x771 Int)) Int (ite (= x299 x771) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x303 x771)))
(define-fun x173 ((x771 Int)) Int (ite (= x765 x771) x473 (x587 x771)))
(define-fun x939 ((x771 Int)) Int (ite (and (< x771 (+ 32 x299)) (>= x771 x299)) (x123 (- x771 x299)) (x173 x771)))
(define-fun x872 ((x771 Int)) Int (ite x598 (x939 x771) (x173 x771)))
(define-fun x182 ((x771 Int)) Int (ite (and (> (+ x299 32) x771) (<= x299 x771)) (x123 (- x771 x299)) (x872 x771)))
(define-fun x629 ((x771 Int)) Int (ite (= x1074 x771) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x182 x771)))
(define-fun x997 ((x771 Int)) Int (ite (= x972 x771) x1037 (x629 x771)))
(define-fun x486 ((x771 Int)) Int (ite (and (<= x1074 x771) (< x771 (+ 32 x1074))) (x824 (- x771 x1074)) (x997 x771)))
(define-fun x826 ((x771 Int)) Int (ite x1232 (x486 x771) (x997 x771)))
(define-fun x1090 ((x771 Int)) Int (ite (and (> (+ x1074 32) x771) (>= x771 x1074)) (x824 (- x771 x1074)) (x826 x771)))
(define-fun x601 ((x771 Int)) Int (ite (= x83 x771) x122 (x1090 x771)))
(define-fun x193 ((x771 Int)) Int (ite (= x402 x771) 0 (x601 x771)))
(define-fun x1130 ((x771 Int)) Int (ite (= x788 x771) 0 (x193 x771)))
(define-fun x209 ((x771 Int)) Int (ite (= x771 x1022) 0 (x1130 x771)))
(define-fun x861 ((x771 Int)) Int (ite (= x771 x670) 0 (x209 x771)))
(define-fun x8 ((x771 Int)) Int (ite (= x771 x268) 0 (x861 x771)))
(define-fun x1115 ((x771 Int)) Int (ite (= x771 x857) x402 (x8 x771)))
(define-fun x1238 ((x771 Int)) Int (ite (= x1121 x771) 0 (x1115 x771)))
(define-fun x235 ((x771 Int)) Int (ite (= x771 x1165) 0 (x1238 x771)))
(define-fun x224 ((x771 Int)) Int (ite (= x771 x1229) 0 (x235 x771)))
(define-fun x990 ((x771 Int)) Int (ite (= x456 x771) 0 (x224 x771)))
(define-fun x323 ((x771 Int)) Int (ite (= x905 x771) 0 (x990 x771)))
(define-fun x146 ((x771 Int)) Int (ite (= x279 x771) x1121 (x323 x771)))
(assert (x1149 x1198))
(assert (= x709 (x1231 (x1114 x346 x181 x709 x351))))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (= 0 (x495 57896044618658097711785492504343953926634992332820282019728792003956564820036)))
(assert (=> (<= x484 10000) (= (x495 x484) 0)))
(assert (x1149 x951))
(assert (x1149 x905))
(assert (> (x1114 x935 x461 x448 x980) 10000))
(assert (x1149 x647))
(assert (=> (<= x993 10000) (= (x495 x993) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1103 x1270 x835 x196 x597 x489 x230 x986)))
(assert (x1149 x1221))
(assert (x1149 x1075))
(assert (= (and x579 x1147) x1155))
(assert (x384 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (< (x1026 x138 x199 x584 x1223 x34 x684) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x986 (x1050 (x1103 x1270 x835 x196 x597 x489 x230 x986))))
(assert (=> (>= 10000 x181) (= 0 (x495 x181))))
(assert (=> (<= x1294 10000) (= 0 (x495 x1294))))
(assert (x1149 x210))
(assert (= (x655 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) x1244))
(assert (x1149 x527))
(assert (x1149 x1224))
(assert (x1149 x447))
(assert (x1149 x888))
(assert (x1149 x525))
(assert (x1149 x714))
(assert (x1149 x778))
(assert (=> (<= x1243 10000) (= 0 (x495 x1243))))
(assert (x1149 x504))
(assert (=> (>= 10000 x1107) (= (x495 x1107) 0)))
(assert (= x138 (x254 (x1114 x138 x500 x188 x1062))))
(assert (x1149 x144))
(assert (x1149 x437))
(assert (> (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243) 10000))
(assert (x1149 x1002))
(assert (x1149 x737))
(assert (x1149 x651))
(assert (x1149 x851))
(assert (x1149 x708))
(assert (= (x1231 (x764 x1297 x144 x307 x543 x491)) x307))
(assert (x1029 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (=> (<= x180 10000) (= 0 (x495 x180))))
(assert (= (and x1038 x759) x1142))
(assert (= (x1026 x346 x1024 x794 x1278 x200 x950) (x495 (x1026 x346 x1024 x794 x1278 x200 x950))))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x1149 x163))
(assert (= (x495 (x612 x9 x563 x116 x803 x180 x591 x507 x814)) (x612 x9 x563 x116 x803 x180 x591 x507 x814)))
(assert (< 10000 (x1114 x496 x78 x68 x985)))
(assert (x1149 x398))
(assert (= (x254 (x1103 x9 x580 x91 x502 x761 x441 x888)) x9))
(assert (x1149 x741))
(assert (= (x1175 (x764 x1270 x1236 x664 x1075 x873)) x1075))
(assert (x1149 x22))
(assert (= (x1175 (x1026 x1270 x465 x1139 x59 x604 x550)) x59))
(assert (=> (<= x1075 10000) (= (x495 x1075) 0)))
(assert (x1149 x1071))
(assert (= x427 (x1231 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (=> (<= x1092 10000) (= 0 (x495 x1092))))
(assert (x1149 x877))
(assert (x1149 x1106))
(assert (x1149 x430))
(assert (x1149 x496))
(assert (=> (<= x397 10000) (= (x495 x397) 0)))
(assert (=> (<= x1062 10000) (= 0 (x495 x1062))))
(assert (= (x495 (x764 x496 x75 x1013 x531 x198)) (x764 x496 x75 x1013 x531 x198)))
(assert (x1149 x324))
(assert (=> (>= 10000 x1159) (= (x495 x1159) 0)))
(assert (=> (>= 10000 x443) (= (x495 x443) 0)))
(assert (= x356 (x655 (x764 x138 x356 x1051 x842 x374))))
(assert (x1149 x911))
(assert (x1149 x825))
(assert (=> (<= x1110 10000) (= (x495 x1110) 0)))
(assert (x1149 x582))
(assert (=> (>= 10000 x1003) (= (x495 x1003) 0)))
(assert (= x533 (x1231 (x370 x138 x508 x533))))
(assert (x1149 x1286))
(assert (x1149 x391))
(assert (x1149 x75))
(assert (=> (>= 10000 x814) (= (x495 x814) 0)))
(assert (x1149 x548))
(assert (x1149 x630))
(assert (x1149 x133))
(assert (x1149 x1274))
(assert (< 10000 (x1103 x1270 x835 x196 x597 x489 x230 x986)))
(assert (x1149 x213))
(assert (x1149 x528))
(assert (= x390 (x1050 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (x596 x121))
(assert (= (x655 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)) x1264))
(assert (x1149 x1270))
(assert (x1149 x1275))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (x1149 x960))
(assert (= (x780 (x1026 x9 x1012 x427 x1230 x236 x763)) x236))
(assert (x1149 x1128))
(assert (x1149 x1247))
(assert (x1149 x312))
(assert (x1149 x20))
(assert (x1149 x607))
(assert (x1149 x222))
(assert (= (x495 (x1103 x1270 x835 x196 x597 x489 x230 x986)) (x1103 x1270 x835 x196 x597 x489 x230 x986)))
(assert (x1149 x205))
(assert (x1149 x1030))
(assert (= x188 (x1231 (x1114 x138 x500 x188 x1062))))
(assert (x1149 x733))
(assert (> (x370 x1297 x1065 x623) 10000))
(assert (x1149 x31))
(assert (< 10000 (x764 x1270 x1236 x664 x1075 x873)))
(assert (x1149 x454))
(assert (= (x780 (x1026 x935 x419 x26 x342 x878 x679)) x878))
(assert (< (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x878 10000) (= (x495 x878) 0)))
(assert (x1149 x357))
(assert (=> (<= x1031 10000) (= (x495 x1031) 0)))
(assert (x1149 x836))
(assert (= (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509) (x495 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509))))
(assert (x1149 x1004))
(assert (x1029 18446744073709551613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x747 0)))
(assert (= (x254 (x370 x9 x703 x900)) x9))
(assert (=> (>= 10000 x435) (= 0 (x495 x435))))
(assert (x1149 x70))
(assert (x1149 x1122))
(assert (x1149 x36))
(assert (x1149 x909))
(assert (=> (>= 10000 x406) (= (x495 x406) 0)))
(assert (=> (<= x110 10000) (= (x495 x110) 0)))
(assert (=> (<= x1244 10000) (= 0 (x495 x1244))))
(assert (= (x495 (x1214 x9 x525)) (x1214 x9 x525)))
(assert (x1149 x233))
(assert (< 10000 (x370 x346 x1201 x1107)))
(assert (= (x780 (x1103 x496 x934 x889 x566 x1077 x131 x114)) x1077))
(assert (x1149 x368))
(assert (x1149 x614))
(assert (= (and x783 x1057) x95))
(assert (x1149 x164))
(assert (not (x1029 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (= x553 (x780 (x764 x935 x1211 x430 x213 x553))))
(assert (not (x1029 (x1114 x935 x461 x448 x980))))
(assert (x1149 x195))
(assert (x1149 x116))
(assert (= (x780 (x1103 x1270 x835 x196 x597 x489 x230 x986)) x489))
(assert (=> (>= 10000 x178) (= 0 (x495 x178))))
(assert (x1149 x201))
(assert (x1149 x1102))
(assert (x1149 x277))
(assert (=> (>= 10000 x342) (= 0 (x495 x342))))
(assert (x1149 x255))
(assert (x1149 x359))
(assert (= (x316 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) x606))
(assert (=> (<= x873 10000) (= 0 (x495 x873))))
(assert (x1149 x420))
(assert (x1149 x1081))
(assert (x1149 x439))
(assert (> (x1114 66 x424 x806 x357) 10000))
(assert (x1149 x900))
(assert (= (x495 57896044618658097711785492504343953926634992332820282019728792003956564820517) 0))
(assert (x1149 x396))
(assert (x1149 x616))
(assert (x1149 x105))
(assert (x1149 x378))
(assert (= (x1231 (x1114 x1270 x1071 x711 x271)) x711))
(assert (not (x1029 (x1114 x138 x500 x188 x1062))))
(assert (= (x254 (x370 x935 x631 x443)) x935))
(assert (> (x370 x9 x703 x900) 10000))
(assert (= (or x431 x539) x469))
(assert (> (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221) 10000))
(assert (x1149 x701))
(assert (= (=> (and (= x1198 x87) (= x223 (x290 (+ x843 x152))) (= x206 x513) (= (<= x138 224) x47) (> x87 x11) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x11) (<= x11 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x991 (- x87 x11)) x345) (= x1225 (x290 (+ x11 32))) (>= x1198 1) (= x586 (x991 (- x345 32))) (= (x360 x11) x138) (= x1198 (x290 (+ x477 x292))) (= x897 x223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x11) (= (* x206 32) x843) (>= 4 x206) (= x477 (* 32 x206)) (<= 1 x87)) (and (=> (and (= (x360 x403) x842) (= (x764 x138 x356 x1051 x842 x374) x239) (= (x290 (+ x1225 96)) x381) (= (x290 (+ 32 x1225)) x756) (= (x360 x756) x1210) (= x166 (x290 (+ 192 x1225))) (= x506 (x1214 x138 x10)) (= x403 (x290 (+ 64 x1225))) (= (x290 (+ 32 x87)) x1150) (= (x423 x87) x346) (= (<= x346 224) x1204) (= x778 (x290 (+ 32 x1225))) (= x1062 (x360 x822)) (= x412 (x290 (+ 128 x1225))) (= (x360 x1225) x500) (= (x360 x1273) x1260) (= x1068 (x360 x49)) (= x188 (x360 x784)) (= x508 (x360 x1225)) (= x178 (x360 x1131)) (= x154 (x290 (+ 64 x1225))) (= (x360 x640) x790) (= x202 (x360 x778)) (= x1223 (x360 x562)) (= x433 (x747 0)) (= (x290 (+ 128 x1225)) x1131) (= (x360 x1259) x533) (= (x360 x578) x684) (= (x360 x391) x1051) (= x720 (x360 x875)) (= (x360 x708) x437) (= x708 (x290 (+ x1225 96))) (= (x290 (+ 96 x866)) x84) (= (x360 x556) x34) (= x509 (x360 x166)) (or (and (>= x87 1) (<= x87 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (and (<= x87 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x87))) (= (x290 (+ x1225 64)) x822) (= x1259 (x290 (+ 32 x1225))) (= x578 (x290 (+ 128 x1225))) (= (x290 (+ 64 x1225)) x875) (= (x290 (+ x1225 96)) x556) (= x589 (x370 x138 x508 x533)) (= (x360 x1225) x10) (= x1263 (x1026 x138 x199 x584 x1223 x34 x684)) (= (x290 (+ 32 x87)) x866) (= x356 (x360 x1225)) (= x199 (x360 x1225)) (= x391 (x290 (+ 32 x1225))) (= (x1114 x138 x500 x188 x1062) x1234) (= (x290 (+ x1225 32)) x784) (= x921 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) (= (x991 (- x84 x87)) x949) (= (x360 x1225) x6) (= x49 (x290 (+ 160 x1225))) (= (x290 (+ x1225 96)) x1273) (= x640 (x290 (+ x1225 160))) (= (x360 x1225) x451) (= x197 (x290 (+ 32 x866))) (= (ite (= x138 0) x433 (ite (>= 32 x138) x506 (ite (<= x138 64) x589 (ite (>= 96 x138) x1234 (ite (>= 128 x138) x239 (ite (<= x138 160) x1263 (ite (>= 192 x138) x1162 (ite (>= 224 x138) x921 x588)))))))) x686) (= (x360 x412) x856) (= x374 (x360 x381)) (= (x991 (- x949 32)) x712) (= (x360 x154) x1003) (= x584 (x360 x1049)) (= x562 (x290 (+ x1225 64))) (< x87 x84) (= x1162 (x1103 x138 x451 x1210 x720 x437 x178 x790)) (= (x290 (+ x197 32)) x618) (= (x290 (+ 32 x1225)) x1049)) (and x1204 (=> (and (= x1033 (x1114 x346 x181 x709 x351)) (= (x290 (+ x1150 64)) x874) (= x729 (x747 0)) (= x326 (x423 x343)) (= (x423 x544) x1191) (= x324 (x113 1461501637330902918203684832716283019655932542975 x605)) (= x1179 (x290 (+ 32 x228))) (= (x423 x874) x397) (= x1181 (x423 x388)) (= (x991 (- x519 32)) x237) (= (x290 (+ x1150 96)) x1084) (= x950 (x423 x961)) (= (x991 (- x358 x84)) x519) (< x84 x358) (= x52 (x423 x195)) (= x228 (x290 (+ x1109 32))) (= (x290 (+ 160 x1150)) x490) (= (x423 x468) x1119) (= x988 (x423 x1150)) (= x286 (x290 (+ x1150 32))) (= x1285 (x290 (+ x253 32))) (= (x290 (+ 96 x1150)) x159) (= (x290 (+ x1150 128)) x544) (= (x290 (+ x1150 64)) x388) (= (x423 x515) x709) (= x1107 (x423 x946)) (= (x423 x768) x1278) (= x351 (x423 x930)) (= (x423 x1150) x1024) (= (ite (= x346 0) x729 (ite (>= 32 x346) x625 (ite (>= 64 x346) x839 (ite (>= 96 x346) x1033 (ite (<= x346 128) x118 (ite (<= x346 160) x755 (ite (<= x346 192) x400 (ite (>= 224 x346) x301 x1098)))))))) x126) (= x392 (x423 x574)) (or (and (>= x84 115792089237316195423570985008687907853269984665640564039457584007913129639747) (<= x84 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (>= x84 2) (<= x84 126)) (and (<= 129 x84) (<= x84 115792089237316195423570985008687907853269984665640564039457584007913129639743))) (= (x423 x1150) x1201) (= (x423 x1150) x1156) (= x961 (x290 (+ x1150 128))) (= (x423 x590) x1243) (= (x290 (+ 64 x1150)) x468) (= (x1214 x346 x57) x625) (= (x423 x1150) x57) (= (x423 x967) x794) (= x214 (x423 x1084)) (= x195 (x290 (+ 160 x1150))) (= x181 (x423 x1150)) (= x515 (x290 (+ 32 x1150))) (= (>= 224 x1270) x167) (= (x423 x490) x28) (= x343 (x290 (+ 32 x1150))) (= x1110 (x423 x159)) (= x1047 (x290 (+ x84 32))) (= x530 (x423 x286)) (= (x1026 x346 x1024 x794 x1278 x200 x950) x755) (= (x423 x1150) x674) (= x400 (x1103 x346 x674 x673 x397 x214 x1291 x52)) (= x118 (x764 x346 x988 x326 x1181 x1110)) (= (x290 (+ x1150 64)) x930) (= (x1188 x84) x1270) (= (x290 (+ 96 x1150)) x574) (= (x290 (+ x84 32)) x1109) (= (x423 256) x605) (= x27 (x290 (+ x1150 32))) (= x967 (x290 (+ 32 x1150))) (= x590 (x290 (+ 192 x1150))) (= (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243) x301) (= x1291 (x423 x1087)) (= (x290 (+ 64 x1150)) x768) (= x793 (x290 (+ x1150 96))) (= x673 (x423 x27)) (= (x290 (+ 32 x1179)) x253) (= x946 (x290 (+ x1150 32))) (= x938 (x423 224)) (= (x423 x793) x200) (= (x290 (+ x1109 160)) x358) (= (x290 (+ 128 x1150)) x1087) (= (x370 x346 x1201 x1107) x839)) (and x167 (=> (and (or (and (not x956) (and (= (x987 x984) x1004) (= x1015 x1004) (= x754 0) (= x358 x407) (= x743 2))) (and (and (= (x987 x189) x692) (= x624 (x987 x549)) (= x347 x1015) (= (+ x549 32) x189) x789 (= x1216 3) (= (> x692 57896044618658097711785492504343953926418782139537452191302581570759080747168) x789) (= x754 x71) (= x1221 (x418 x1167 248)) (= x1167 (x987 x420)) (= 0 x71) (= x1216 x743) (= x344 x407) (= x692 x347) (= x358 x344) (= x420 (+ x189 32))) x956)) (and (= x285 (x290 (+ x358 64))) (= x833 (x290 (+ 32 x1047))) (= (x764 x1270 x1236 x664 x1075 x873) x503) (= x806 (x987 x1202)) (= (ite (= 0 x1270) x937 (ite (<= x1270 32) x685 (ite (<= x1270 64) x665 (ite (<= x1270 96) x401 (ite (>= 128 x1270) x503 (ite (>= 160 x1270) x297 (ite (<= x1270 192) x776 (ite (>= 224 x1270) x234 x45)))))))) x485) (= x288 (x290 (+ x219 32))) (= x465 (x1188 x1047)) (= x711 (x1188 x1027)) (= x274 (x1188 x1047)) (= (x1188 x1047) x404) (= x489 (x1188 x275)) (= (x1188 x727) x604) (= (x987 x285) x357) (= x1046 (x290 (+ x1047 160))) (= x59 (x1188 x333)) (= (x1188 x416) x271) (= (x290 (+ x1047 64)) x311) (= x597 (x1188 x386)) (= (x1188 x311) x1075) (= x297 (x1026 x1270 x465 x1139 x59 x604 x550)) (= (x1188 x1086) x196) (= x1002 (x1188 x208)) (= (x290 (+ 96 x1047)) x902) (= x1093 (x1114 66 x424 x806 x357)) (= x986 (x1188 x748)) (= x275 (x290 (+ 96 x1047))) (= x1031 (x1188 x93)) (= x93 (x290 (+ x1047 96))) (= (x1188 x561) x550) (= x727 (x290 (+ x1047 96))) (= x416 (x290 (+ x1047 64))) (= (x290 (+ x1047 128)) x867) (= (x1188 x1047) x1071) (= (x1188 x858) x1139) (= x462 (x1188 x212)) (= x835 (x1188 x1047)) (= x665 (x370 x1270 x404 x1002)) (= (x987 x358) x424) (= (x290 (+ 2 x358)) x219) (= x730 (x1188 x306)) (= (x1188 x1047) x1236) (= x664 (x1188 x833)) (= (x747 0) x937) (= (x290 (+ x1047 192)) x1172) (= (x1188 x832) x1199) (= (x290 (+ x1047 32)) x1086) (= x401 (x1114 x1270 x1071 x711 x271)) (= x234 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) (= (x1188 x867) x230) (= x832 (x290 (+ x1047 128))) (= (x1188 x1046) x484) (= x1027 (x290 (+ 32 x1047))) (= x208 (x290 (+ x1047 32))) (= x858 (x290 (+ x1047 32))) (= (x1188 x902) x873) (= (x290 (+ 128 x1047)) x561) (= x776 (x1103 x1270 x835 x196 x597 x489 x230 x986)) (= (x1188 x1172) x606) (= (= x825 65) x956) (= (x290 (+ x358 32)) x1202) (= x306 (x290 (+ x1047 32))) (= (x1188 x1047) x1206) (= x212 (x290 (+ 64 x1047))) (= (x290 (+ 64 x1047)) x333) (= (x290 (+ x1047 160)) x748) (= x386 (x290 (+ 64 x1047))) (= (x987 x984) x825) (= x685 (x1214 x1270 x1206)))) x725))))) x47)) x742))
(assert (x1149 x291))
(assert (x1149 x633))
(assert (= (x495 2065879269444) 0))
(assert (=> (>= 10000 x1171) (= (x495 x1171) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1103 x346 x674 x673 x397 x214 x1291 x52)))
(assert (=> (>= 10000 x1193) (= (x495 x1193) 0)))
(assert (x1149 x1119))
(assert (x1149 x1213))
(assert (x1149 x178))
(assert (x1149 x342))
(assert (=> (>= 10000 x720) (= (x495 x720) 0)))
(assert (= x396 (x780 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (= (x254 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) x1270))
(assert (= x78 (x655 (x1114 x496 x78 x68 x985))))
(assert (= x135 (x377 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045))))
(assert (= x1051 (x1231 (x764 x138 x356 x1051 x842 x374))))
(assert (x1149 x943))
(assert (x1149 x1118))
(assert (= x910 (x1231 (x764 x9 x1092 x910 x1060 x927))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1114 x935 x461 x448 x980)))
(assert (=> (>= 10000 x258) (= (x495 x258) 0)))
(assert (x1149 x814))
(assert (x667 x429))
(assert (x1149 x852))
(assert (x384 x638))
(assert (= (x370 x346 x1201 x1107) (x495 (x370 x346 x1201 x1107))))
(assert (x1149 x594))
(assert (x1149 x529))
(assert (x1149 x229))
(assert (x1149 x777))
(assert (=> (>= 10000 x91) (= (x495 x91) 0)))
(assert (x1149 x597))
(assert (x1149 x296))
(assert (x1149 x168))
(assert (= x898 (x316 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (= (x254 (x1114 x496 x78 x68 x985)) x496))
(assert (= (x655 (x1214 x1297 x5)) x5))
(assert (= (x780 (x1103 x138 x451 x1210 x720 x437 x178 x790)) x437))
(assert (=> (>= 10000 x706) (= 0 (x495 x706))))
(assert (= (x495 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (= (x1231 (x1026 x138 x199 x584 x1223 x34 x684)) x584))
(assert (> (x1026 x9 x1012 x427 x1230 x236 x763) 10000))
(assert (x1149 x959))
(assert (x1149 x758))
(assert (x1149 x1248))
(assert (= 0 (x495 4294967295)))
(assert (x1149 x640))
(assert (= (x254 (x764 x1270 x1236 x664 x1075 x873)) x1270))
(assert (= 0 (x495 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (= x1297 (x254 (x1114 x1297 x1246 x993 x840))))
(assert (x1149 x397))
(assert (x1149 x806))
(assert (=> (<= x576 10000) (= 0 (x495 x576))))
(assert (not (x1029 (x1026 x346 x1024 x794 x1278 x200 x950))))
(assert (=> (>= 10000 x350) (= 0 (x495 x350))))
(assert (= (x495 (x747 0)) (x747 0)))
(assert (x1149 x886))
(assert (not (x1029 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606))))
(assert (x1149 x466))
(assert (x1149 x114))
(assert (x1149 x1068))
(assert (= (x655 (x1026 x138 x199 x584 x1223 x34 x684)) x199))
(assert (= x935 (x254 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (= x446 (=> (and (= x726 (x290 (+ x117 x1082))) (= x179 (x290 (+ 32 x936))) (= (x991 (- x470 32)) x270) (<= x936 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x527 (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x514)) (= (x290 (+ 31 x1082)) x514) (= x488 (x290 (+ x527 x117))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x936) (<= 1 x488) (= x1297 (x69 x936)) (> x488 x936) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x936) (= (<= x1297 224) x1168) (= x470 (x991 (- x488 x936)))) (and x1168 (=> (and (= (x290 (+ x179 160)) x1284) (= x840 (x69 x426)) (= x663 (x290 (+ 32 x179))) (= (x69 x179) x1264) (= x435 (x69 x1209)) (= x623 (x69 x663)) (= (x290 (+ 64 x179)) x426) (= (x290 (+ x179 192)) x669) (= (x69 x179) x1246) (= x993 (x69 x994)) (= x315 (x69 x943)) (= x350 (x69 x1081)) (= x1039 (x69 x1070)) (= x1194 (x289 x385)) (= (x69 x653) x32) (= (x290 (+ 32 x179)) x1183) (= x1065 (x69 x179)) (= x458 (x612 x1297 x53 x246 x272 x435 x955 x315 x898)) (= (x1114 x1297 x1246 x993 x840) x1014) (= x815 (x1026 x1297 x258 x56 x350 x396 x32)) (= x573 (x370 x1297 x1065 x623)) (= (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045) x1041) (= (x69 x852) x396) (>= x1106 1) (= (x290 (+ 64 x179)) x1133) (= x53 (x69 x179)) (= x943 (x290 (+ 160 x179))) (= x56 (x69 x205)) (= (x69 x449) x955) (= x757 (x69 x309)) (= (x69 x179) x258) (= (x69 x179) x144) (= (x764 x1297 x144 x307 x543 x491) x738) (= x898 (x69 x669)) (= x246 (x69 x1183)) (= x272 (x69 x710)) (= (x747 0) x1205) (= (x69 x1235) x491) (= x242 (x1214 x1297 x5)) (= x58 (x290 (+ x179 32))) (= (x290 (+ 128 x179)) x449) (= (x69 x600) x543) (= (x290 (+ x179 32)) x994) (= x5 (x69 x179)) (= x1045 (x69 x1284)) (= (ite (= x1297 0) x1205 (ite (>= 32 x1297) x242 (ite (>= 64 x1297) x573 (ite (<= x1297 96) x1014 (ite (>= 128 x1297) x738 (ite (>= 160 x1297) x815 (ite (>= 192 x1297) x1041 (ite (>= 224 x1297) x458 x1189)))))))) x940) (= (x290 (+ x179 96)) x1209) (= (x69 x1133) x1287) (= (x69 x112) x1106) (= x767 (x290 (+ 32 x112))) (= (x290 (+ x179 96)) x1235) (= (x290 (+ 96 x179)) x1070) (= x653 (x290 (+ x179 128))) (= x307 (x69 x58)) (= (x290 (+ x179 64)) x600) (= (x289 x24) x385) (= x710 (x290 (+ 64 x179))) (= (x290 (+ x179 32)) x205) (= (x290 (+ 32 x179)) x309) (= (x290 (+ x179 128)) x1111) (= x135 (x69 x1111)) (= (not (> x1194 1)) x613) (= x1081 (x290 (+ 64 x179))) (= (x290 (+ x179 96)) x852)) (and x613 (=> (= x137 x488) x1138)))))))
(assert (x1149 x309))
(assert (x1149 x810))
(assert (x384 x30))
(assert (x1149 x930))
(assert (=> (<= x282 10000) (= 0 (x495 x282))))
(assert (=> (<= x856 10000) (= (x495 x856) 0)))
(assert (x1149 x700))
(assert (= (x495 1461501637330902918203684832716283019655932542975) 0))
(assert (x1149 x177))
(assert (x1149 x696))
(assert (= x806 (x1231 (x1114 66 x424 x806 x357))))
(assert (x1149 x38))
(assert (x1149 x99))
(assert (= x56 (x1231 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (x1149 x6))
(assert (x1149 x43))
(assert (x1149 x1065))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x1149 x191))
(assert (x1149 x131))
(assert (x384 x837))
(assert (x1029 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (=> (>= 10000 x491) (= 0 (x495 x491))))
(assert (not (x1029 (x1114 x496 x78 x68 x985))))
(assert (x1149 x436))
(assert (x1149 x220))
(assert (= (x377 (x1103 x138 x451 x1210 x720 x437 x178 x790)) x178))
(assert (not (x1029 (x764 x9 x1092 x910 x1060 x927))))
(assert (< 10000 (x1026 x138 x199 x584 x1223 x34 x684)))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x596 x699))
(assert (x1149 x256))
(assert (=> (>= 10000 x674) (= (x495 x674) 0)))
(assert (=> (>= 10000 x960) (= (x495 x960) 0)))
(assert (x1149 x474))
(assert (x1149 x626))
(assert (x1149 x849))
(assert (x1149 x584))
(assert (= (x254 (x1026 x496 x908 x614 x127 x773 x817)) x496))
(assert (= (and (not x1038) x759) x974))
(assert (= (x377 (x1026 x1270 x465 x1139 x59 x604 x550)) x550))
(assert (not (x1029 (x764 x1297 x144 x307 x543 x491))))
(assert (x1149 x24))
(assert (= (or x1113 x520) x526))
(assert (=> (>= 10000 x955) (= 0 (x495 x955))))
(assert (x1149 x1244))
(assert (= (x1175 (x1114 x1270 x1071 x711 x271)) x271))
(assert (x1149 x856))
(assert (x1149 x1031))
(assert (=> (<= x1245 10000) (= (x495 x1245) 0)))
(assert (= x2 (or x637 x1112)))
(assert (x1149 x698))
(assert (= x1199 (x377 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606))))
(assert (x1149 x1108))
(assert (=> (<= x9 10000) (= 0 (x495 x9))))
(assert (x1149 x179))
(assert (x1149 x489))
(assert (= (x1231 (x764 x346 x988 x326 x1181 x1110)) x326))
(assert (= x430 (x1231 (x764 x935 x1211 x430 x213 x553))))
(assert (x384 x754))
(assert (x1149 x202))
(assert (=> (<= x898 10000) (= 0 (x495 x898))))
(assert (= (x1175 (x1114 x346 x181 x709 x351)) x351))
(assert (=> (>= 10000 x502) (= (x495 x502) 0)))
(assert (= (x1231 (x370 x1297 x1065 x623)) x623))
(assert (= x566 (x1175 (x1103 x496 x934 x889 x566 x1077 x131 x114))))
(assert (x1149 x261))
(assert (x1149 x271))
(assert (x596 x916))
(assert (> (x764 x9 x1092 x910 x1060 x927) 10000))
(assert (x1149 x56))
(assert (x1149 x1242))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x1149 x228))
(assert (x1149 x268))
(assert (=> (>= 10000 x246) (= (x495 x246) 0)))
(assert (x1149 x1148))
(assert (x1149 x1111))
(assert (= x262 (x316 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (< (x1114 x346 x181 x709 x351) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262) (x495 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (x1149 x599))
(assert (= (x495 (x1103 x9 x580 x91 x502 x761 x441 x888)) (x1103 x9 x580 x91 x502 x761 x441 x888)))
(assert (x1149 x87))
(assert (= x1147 (or x15 x1232)))
(assert (x1149 x1107))
(assert (= (x1175 (x1114 x9 x1159 x72 x1294)) x1294))
(assert (< (x764 x9 x1092 x910 x1060 x927) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x1123))
(assert (x1149 x45))
(assert (= (x780 (x764 x138 x356 x1051 x842 x374)) x374))
(assert (= (x1175 (x1114 66 x424 x806 x357)) x357))
(assert (= (x495 134217728) 0))
(assert (x1149 x796))
(assert (=> (<= x1270 10000) (= (x495 x1270) 0)))
(assert (= (x1114 x1297 x1246 x993 x840) (x495 (x1114 x1297 x1246 x993 x840))))
(assert (x1149 x744))
(assert (x1149 x723))
(assert (x1149 x317))
(assert (x1149 x440))
(assert (x1149 x432))
(assert (x1149 x868))
(assert (x1149 x416))
(assert (x1149 x740))
(assert (= (x370 x1297 x1065 x623) (x495 (x370 x1297 x1065 x623))))
(assert (x1149 x510))
(assert (x1149 x214))
(assert (x596 x475))
(assert (x1149 x1245))
(assert (= x1243 (x316 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (= x138 (x254 (x1103 x138 x451 x1210 x720 x437 x178 x790))))
(assert (x1149 x568))
(assert (=> (<= x28 10000) (= (x495 x28) 0)))
(assert (< 10000 (x370 x1270 x404 x1002)))
(assert (< 10000 (x1026 x935 x419 x26 x342 x878 x679)))
(assert (=> (<= x543 10000) (= (x495 x543) 0)))
(assert (x1149 x995))
(assert (x1149 x1212))
(assert (= x900 (x1231 (x370 x9 x703 x900))))
(assert (x1149 x955))
(assert (not (x1029 (x1214 x1270 x1206))))
(assert (= x1230 (x1175 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (= x1297 (x254 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (x1149 x497))
(assert (x1149 x1228))
(assert (x1149 x884))
(assert (x1149 x712))
(assert (= (and (not x1185) x469) x1056))
(assert (x1149 x351))
(assert (= x131 (x377 (x1103 x496 x934 x889 x566 x1077 x131 x114))))
(assert (x1149 x818))
(assert (x1149 x50))
(assert (x1149 x619))
(assert (x1149 x863))
(assert (x1149 x761))
(assert (= (x254 (x1026 x346 x1024 x794 x1278 x200 x950)) x346))
(assert (x1149 x927))
(assert (= 0 (x495 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (= (x655 (x1214 x346 x57)) x57))
(assert (=> (>= 10000 x45) (= 0 (x495 x45))))
(assert (< 10000 (x764 x1297 x144 x307 x543 x491)))
(assert (x1149 x756))
(assert (x384 x1097))
(assert (x1149 x1032))
(assert (x1149 x467))
(assert (= (or x974 x1142) x471))
(assert (= x1107 (x1231 (x370 x346 x1201 x1107))))
(assert (= (x655 (x1214 x496 x1176)) x1176))
(assert (x1149 x492))
(assert (x1149 x1199))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (x1149 x238))
(assert (x1149 x933))
(assert (= (x1114 x9 x1159 x72 x1294) (x495 (x1114 x9 x1159 x72 x1294))))
(assert (not (x1029 (x1114 x346 x181 x709 x351))))
(assert (=> (>= 10000 x1045) (= 0 (x495 x1045))))
(assert (= (x495 (x764 x9 x1092 x910 x1060 x927)) (x764 x9 x1092 x910 x1060 x927)))
(assert (x1149 x315))
(assert (not (x1029 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (x1149 x1202))
(assert (x1149 x120))
(assert (= (x780 (x1026 x1270 x465 x1139 x59 x604 x550)) x604))
(assert (= x346 (x254 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (> (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262) 10000))
(assert (= (x655 (x370 x138 x508 x533)) x508))
(assert (= (x1103 x138 x451 x1210 x720 x437 x178 x790) (x495 (x1103 x138 x451 x1210 x720 x437 x178 x790))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x1297 x1065 x623)))
(assert (= (x1026 x9 x1012 x427 x1230 x236 x763) (x495 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (x1149 x661))
(assert (x1149 x784))
(assert (x1149 x134))
(assert (x1149 x1124))
(assert (= x1145 (and (not x869) x336)))
(assert (< 10000 (x1114 x138 x500 x188 x1062)))
(assert (not (x1029 (x1026 x1270 x465 x1139 x59 x604 x550))))
(assert (x1149 x1253))
(assert (x1149 x1051))
(assert (= x1278 (x1175 (x1026 x346 x1024 x794 x1278 x200 x950))))
(assert (=> (>= 10000 x437) (= (x495 x437) 0)))
(assert (x1149 x294))
(assert (x1149 x345))
(assert (= x1223 (x1175 (x1026 x138 x199 x584 x1223 x34 x684))))
(assert (< (x1103 x496 x934 x889 x566 x1077 x131 x114) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x197))
(assert (x1149 x426))
(assert (=> (<= x591 10000) (= 0 (x495 x591))))
(assert (x1149 x716))
(assert (x1149 x831))
(assert (x1149 x314))
(assert (x1149 x425))
(assert (x1149 x1299))
(assert (x1149 x627))
(assert (= x1134 (=> (and (and (= (x413 x517) x1261) (= (x413 x407) x245) (= 1 x245) (>= x936 2) (>= x1257 1) (<= 1 x728) (= x265 (x413 x24)) (<= x407 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x24 (x290 (+ x554 32))) (= x855 (* 32 x312)) (= (x413 192) x1043) (< x112 x936) (<= x407 115792089237316195423570985008687907853269984665640564039457584007913129639933) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x407) (>= x407 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x290 (+ x407 32)) x112) (= x554 (x290 (+ x1043 32))) (= (x290 (+ x112 (mod (+ x855 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x936) (>= 18446744073709551615 x312) (< x407 x112) (= (x413 x554) x728) (or (<= x407 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x407)) (or (>= x407 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x407 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x407) (= (= x312 0) x257) (= x312 (x413 x265))) (or x257 (and (and (= x97 (x290 (+ 32 x112))) (= (* 32 x312) x863)) (not x257)))) x1196)))
(assert (= x1270 (x254 (x1026 x1270 x465 x1139 x59 x604 x550))))
(assert (= x76 (or (and x1023 x250) x1152)))
(assert (x1149 x374))
(assert (x1149 x406))
(assert (x1149 x387))
(assert (x1149 x491))
(assert (x384 x248))
(assert (x1149 x889))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1214 x1270 x1206)))
(assert (x1149 x623))
(assert (= (x495 (x1214 x138 x10)) (x1214 x138 x10)))
(assert (x1149 x1189))
(assert (x1149 x1121))
(assert (x1149 x404))
(assert (x1149 x1201))
(assert (x1149 x672))
(assert (=> (>= 10000 x1264) (= 0 (x495 x1264))))
(assert (=> (<= x427 10000) (= 0 (x495 x427))))
(assert (x1149 x468))
(assert (=> (<= x114 10000) (= 0 (x495 x114))))
(assert (x1149 x305))
(assert (= (and (not x339) x1155) x1197))
(assert (x1149 x576))
(assert (x1149 x166))
(assert (= x664 (x1231 (x764 x1270 x1236 x664 x1075 x873))))
(assert (x1149 x1293))
(assert (=> (<= x679 10000) (= (x495 x679) 0)))
(assert (=> (>= 10000 x806) (= 0 (x495 x806))))
(assert (= x1287 (x1175 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045))))
(assert (x1029 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x1149 x25))
(assert (= (=> (and (= x304 (x991 (- x1101 x137))) (= x9 (x194 x137)) (<= x137 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (<= x9 224) x547) (= (* 32 x293) x677) (<= x293 4) (> x1101 x137) (<= 1 x565) (<= 1 x1101) (= x44 x293) (= x696 (x290 (+ x132 x827))) (= (* 32 x293) x827) (= x565 (x290 (+ x677 x676))) (<= x137 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x991 (- x304 32)) x487) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x137) (= x1101 x565) (= x737 (x290 (+ x137 32))) (= x696 x558)) (and x547 (=> (and (= (x290 (+ 32 x737)) x538) (= (x290 (+ 96 x261)) x299) (= (x194 x521) x91) (= x854 (x612 x9 x563 x116 x803 x180 x591 x507 x814)) (= (ite (= 0 x9) x100 (ite (<= x9 32) x66 (ite (>= 64 x9) x617 (ite (>= 96 x9) x746 (ite (<= x9 128) x1200 (ite (<= x9 160) x931 (ite (>= 192 x9) x551 (ite (<= x9 224) x854 x282)))))))) x912) (= (x290 (+ 32 x737)) x139) (= (x290 (+ x737 32)) x542) (= x1076 (x290 (+ x737 96))) (= (x194 x1289) x502) (= x1265 (x290 (+ x1101 32))) (= (x194 x737) x703) (> x299 x1101) (= x366 (x290 (+ x737 128))) (= x525 (x194 x737)) (= (x194 x466) x1230) (= (x194 x737) x1159) (= x1294 (x194 x474)) (= x21 (x991 (- x970 32))) (= (x194 x247) x814) (= x591 (x194 x22)) (= x746 (x1114 x9 x1159 x72 x1294)) (= x427 (x194 x538)) (= x713 (x290 (+ 32 x261))) (= x927 (x194 x536)) (= x507 (x194 x256)) (= x1060 (x194 x61)) (= x681 (x290 (+ 32 x737))) (= x1059 (x290 (+ x737 64))) (= x61 (x290 (+ 64 x737))) (= x247 (x290 (+ 192 x737))) (= (x194 x681) x72) (= (x290 (+ x737 96)) x151) (= x474 (x290 (+ 64 x737))) (= x931 (x1026 x9 x1012 x427 x1230 x236 x763)) (= x551 (x1103 x9 x580 x91 x502 x761 x441 x888)) (= x1092 (x194 x737)) (= x201 (x290 (+ 128 x737))) (= x22 (x290 (+ x737 128))) (= (x1214 x9 x525) x66) (= x256 (x290 (+ 160 x737))) (= x761 (x194 x1076)) (= x180 (x194 x151)) (= x935 (x303 x1101)) (= (x290 (+ 64 x737)) x1289) (= (x194 x243) x236) (= x617 (x370 x9 x703 x900)) (= (x991 (- x299 x1101)) x970) (= (x290 (+ x1101 32)) x261) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1101) (>= x1101 1)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1101) (<= x1101 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= (x290 (+ x737 96)) x243) (= (x290 (+ x737 160)) x153) (= x105 (x290 (+ 32 x737))) (= x116 (x194 x542)) (= x580 (x194 x737)) (= x910 (x194 x105)) (= x595 (<= x935 224)) (= x1200 (x764 x9 x1092 x910 x1060 x927)) (= x900 (x194 x139)) (= (x290 (+ x737 32)) x521) (= x1012 (x194 x737)) (= x763 (x194 x201)) (= x536 (x290 (+ 96 x737))) (= (x194 x366) x441) (= x466 (x290 (+ x737 64))) (= (x290 (+ x713 32)) x608) (= (x747 0) x100) (= (x194 x1059) x803) (= (x194 x737) x563) (= x888 (x194 x153))) (and (=> (and (and (= (x303 x161) x262) (= x50 (x290 (+ x1265 32))) (= (x290 (+ 32 x1265)) x528) (= (x1026 x935 x419 x26 x342 x878 x679) x227) (= x1083 (x290 (+ x1265 160))) (= x229 (x303 x1265)) (= (x290 (+ x1265 192)) x161) (= x878 (x303 x1253)) (= (x303 x1265) x419) (= x1261 x683) (= (x747 0) x1117) (= (x303 x1218) x1108) (= x430 (x303 x886)) (= (x1103 x935 x229 x576 x706 x411 x650 x390) x295) (= x1218 (x290 (+ 96 x1265))) (= x1255 (x370 x935 x631 x443)) (= (x290 (+ 128 x1265)) x1129) (= x715 (x290 (+ 64 x1265))) (<= x818 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x303 x296) x443) (= x70 (x290 (+ x1265 96))) (= (x303 x1083) x390) (= x980 (x303 x7)) (= (x113 1461501637330902918203684832716283019655932542975 x657) x473) (= (x290 (+ x1265 64)) x906) (= x1237 (x1114 x935 x461 x448 x980)) (= (x303 x868) x679) (= (x303 x1265) x461) (= (x303 x1265) x1211) (= x682 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)) (= x20 (x290 (+ 64 x1265))) (= (x290 (+ x1265 32)) x296) (= x683 (ite (= 0 x935) x1117 (ite (>= 32 x935) x313 (ite (<= x935 64) x1255 (ite (<= x935 96) x1237 (ite (>= 128 x935) x340 (ite (>= 160 x935) x227 (ite (<= x935 192) x295 (ite (>= 224 x935) x682 x805))))))))) (= x706 (x303 x906)) (= (x303 x20) x1143) (= (x303 x715) x342) (= x631 (x303 x1265)) (= (x303 160) x371) (= x213 (x303 x1212)) (= (x290 (+ x1265 32)) x322) (= x1253 (x290 (+ 96 x1265))) (= x1212 (x290 (+ x1265 64))) (= x478 (x303 x145)) (= x650 (x303 x1129)) (= x340 (x764 x935 x1211 x430 x213 x553)) (<= x917 1461501637330902918203684832716283019655932542975) (= x305 (x303 x155)) (= (x303 x492) x553) (= (x290 (+ 128 x1265)) x868) (= x1154 (x303 x1265)) (= (x290 (+ 160 x1265)) x155) (= x1160 (> x648 0)) (= (x303 x50) x399) (= (x290 (+ 4 x299)) x765) (= x313 (x1214 x935 x865)) (= (x303 x1265) x865) (= (x290 (+ 96 x1265)) x492) (= x576 (x303 x322)) (= (x290 (+ 32 x1265)) x886) (= x448 (x303 x528)) (= x1036 (x290 (+ x1265 32))) (= x916 (x303 x1095)) (<= 32 x818) (= x145 (x290 (+ 128 x1265))) (= (x303 x1036) x26) (= x7 (x290 (+ x1265 64))) (= x411 (x303 x70)) (= x657 (x303 x371))) (or (and (not x1160) (= x851 x648)) (and (and (>= x818 32) (= x851 1) (>= 4294967295 x818)) x1160))) x260) x595)))) x341))
(assert (x1149 x1236))
(assert (=> (>= 10000 x664) (= (x495 x664) 0)))
(assert (x1149 x172))
(assert (x1149 x13))
(assert (x596 x248))
(assert (=> (<= x730 10000) (= (x495 x730) 0)))
(assert (x1149 x542))
(assert (x1149 x1037))
(assert (x1149 x1187))
(assert (x1149 x127))
(assert (= (x495 18446744073709551614) 0))
(assert (= (x495 (x370 x9 x703 x900)) (x370 x9 x703 x900)))
(assert (x1149 x566))
(assert (x1149 x600))
(assert (= x993 (x1231 (x1114 x1297 x1246 x993 x840))))
(assert (x1149 x455))
(assert (x1149 x1180))
(assert (x1149 x494))
(assert (= (x780 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)) x1039))
(assert (= x744 (x1231 (x370 x496 x298 x744))))
(assert (x1149 x83))
(assert (x1149 x1291))
(assert (=> (<= x1002 10000) (= 0 (x495 x1002))))
(assert (x1149 x484))
(assert (x1149 x1260))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (x1149 x145))
(assert (x1149 x677))
(assert (x1149 x1084))
(assert (=> (<= x75 10000) (= 0 (x495 x75))))
(assert (=> (<= x1143 10000) (= 0 (x495 x1143))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1214 x9 x525)))
(assert (= (x1214 x496 x1176) (x495 (x1214 x496 x1176))))
(assert (x1149 x310))
(assert (< 10000 (x764 x496 x75 x1013 x531 x198)))
(assert (= (and x1203 x108) x1241))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1149 x838))
(assert (x1149 x1))
(assert (x1149 x1045))
(assert (x1149 x724))
(assert (= (x495 (x764 x1297 x144 x307 x543 x491)) (x764 x1297 x144 x307 x543 x491)))
(assert (= x1002 (x1231 (x370 x1270 x404 x1002))))
(assert (=> (>= 10000 x1012) (= 0 (x495 x1012))))
(assert (x1149 x676))
(assert (x1149 x288))
(assert (= 0 (x495 18446744073709551487)))
(assert (= x1288 true))
(assert (x1149 x156))
(assert (= x80 (not (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1121) (= x1165 (x290 (+ 32 x1121))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1121) (= (x290 (+ 32 x1229)) x456) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1121) (not x913) (not (= x1121 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (= 1 x90) x505) (not x232) (= (= x122 0) x913) (= x122 (x290 (+ x1096 x244))) (= x788 (x290 (+ 32 x402))) (> x142 x1121) (= x1121 (x290 (+ x402 160))) (= (x290 (+ 32 x670)) x268) (= x670 (x290 (+ 32 x1022))) (not (= x1121 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x83) (= (x1090 x467) x244) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x402 x1121) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x402) (= x1096 (x1090 x283)) (= (x991 (- x122 1)) x90) (= (x1090 x176) x585) (<= x122 18446744073709551615) (not (>= (+ x1096 x244) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x290 (+ x83 32)) x857) (= x467 (x1090 x308)) (not x505) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x402) (= x620 (* x122 32)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x402)) (= x1229 (x290 (+ 32 x1165))) (<= 1 x402) (= x176 (x1090 192)) (not (= x402 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (> x402 x83) (= x232 (= x122 1)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x402)) (= x402 (x290 (+ x83 (mod (+ x620 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x83) (= x142 (x290 (+ 160 x1121))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x402) (= x283 (x1090 x321)) (not (= x1121 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x279 (x290 (+ x857 32))) (= x1022 (x290 (+ x788 32))) (= x905 (x290 (+ 32 x456)))))))
(assert (= (x495 (x764 x935 x1211 x430 x213 x553)) (x764 x935 x1211 x430 x213 x553)))
(assert (x1149 x125))
(assert (x1149 x605))
(assert (x1029 18446746139588821027))
(assert (=> (<= x805 10000) (= (x495 x805) 0)))
(assert (x1149 x871))
(assert (=> (>= 10000 x777) (= (x495 x777) 0)))
(assert (x1149 x390))
(assert (=> (>= 10000 x840) (= (x495 x840) 0)))
(assert (= x552 (and x1288 x621)))
(assert (x1149 x643))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x1149 x845))
(assert (not (x1029 (x1026 x496 x908 x614 x127 x773 x817))))
(assert (< (x1026 x1297 x258 x56 x350 x396 x32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x214 10000) (= (x495 x214) 0)))
(assert (x1149 x843))
(assert (x1149 x517))
(assert (x1149 x1000))
(assert (= (x655 (x1026 x496 x908 x614 x127 x773 x817)) x908))
(assert (x1149 x35))
(assert (x1149 x1006))
(assert (= (x1175 (x764 x496 x75 x1013 x531 x198)) x531))
(assert (x1149 x1089))
(assert (x1149 x424))
(assert (x1149 x873))
(assert (= (x1175 (x764 x138 x356 x1051 x842 x374)) x842))
(assert (x1149 x1223))
(assert (x1149 x258))
(assert (= x1156 (x655 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (x1149 x544))
(assert (not (x1029 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221))))
(assert (x1149 x176))
(assert (x1149 x153))
(assert (> (x612 x1297 x53 x246 x272 x435 x955 x315 x898) 10000))
(assert (=> (>= 10000 x356) (= 0 (x495 x356))))
(assert (=> (>= 10000 x478) (= (x495 x478) 0)))
(assert (x1149 x1235))
(assert (= 0 (x495 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (= x91 (x1231 (x1103 x9 x580 x91 x502 x761 x441 x888))))
(assert (=> (>= 10000 x588) (= (x495 x588) 0)))
(assert (= (x495 18446746139588821027) 0))
(assert (x1149 x381))
(assert (=> (<= x489 10000) (= (x495 x489) 0)))
(assert (x1149 x998))
(assert (= x794 (x1231 (x1026 x346 x1024 x794 x1278 x200 x950))))
(assert (=> (<= x606 10000) (= (x495 x606) 0)))
(assert (= (and x1157 (not x722)) x522))
(assert (= x1092 (x655 (x764 x9 x1092 x910 x1060 x927))))
(assert (= 0 (x495 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (x370 x935 x631 x443) (x495 (x370 x935 x631 x443))))
(assert (x1149 x1276))
(assert (x1149 x679))
(assert (x1149 x459))
(assert (= x790 (x1050 (x1103 x138 x451 x1210 x720 x437 x178 x790))))
(assert (x1149 x308))
(assert (x1149 x169))
(assert (x1149 x805))
(assert (x1149 x812))
(assert (x1149 x1028))
(assert (= (x495 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)))
(assert (x1149 x1125))
(assert (x1149 x356))
(assert (= (x1175 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)) x1143))
(assert (x1149 x1143))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x496 x298 x744)))
(assert (= x315 (x1050 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (x1029 2189116922))
(assert (=> (<= x684 10000) (= 0 (x495 x684))))
(assert (x1149 x1252))
(assert (x1149 x1219))
(assert (x1149 x670))
(assert (= (and x526 x257) x1112))
(assert (x1149 x984))
(assert (x1149 x1176))
(assert (x1149 x394))
(assert (x1029 18446744073709551455))
(assert (x1149 x299))
(assert (x1149 x452))
(assert (x1149 x801))
(assert (not (x1029 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (x1149 x498))
(assert (= (=> (and (or (and (not x382) (and (= x676 x1101) (= x132 x558) (= x44 0))) (and (and (= x191 (x813 x132)) (= x1217 (< 1 x293)) (not x1217) (= x558 x1125) (= x1101 x1219) (= 1 x44) (= x1219 (x290 (+ x676 32))) (= (x290 (+ 32 x132)) x1125)) x382)) (and (= (< 0 x293) x382) (= (x290 (+ 32 x137)) x676) (= (x290 (+ x112 32)) x132) (= x293 (x813 x112)) (= (x813 x554) x444))) x341) x1138))
(assert (= (x254 (x1114 x1270 x1071 x711 x271)) x1270))
(assert (= x1297 (x254 (x764 x1297 x144 x307 x543 x491))))
(assert (x1149 x236))
(assert (= x706 (x1175 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (= (x495 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x1149 x876))
(assert (= (x1026 x1270 x465 x1139 x59 x604 x550) (x495 (x1026 x1270 x465 x1139 x59 x604 x550))))
(assert (x1149 x269))
(assert (= (x316 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x509))
(assert (x1149 x148))
(assert (x1149 x658))
(assert (= x525 (x655 (x1214 x9 x525))))
(assert (not (x1029 (x1214 x9 x525))))
(assert (=> (>= 10000 x202) (= (x495 x202) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x138 x508 x533)))
(assert (x1149 x541))
(assert (x1149 x283))
(assert (= (x655 (x1103 x138 x451 x1210 x720 x437 x178 x790)) x451))
(assert (x1029 1461501637330902918203684832716283019655932542975))
(assert (= (x254 (x612 x1297 x53 x246 x272 x435 x955 x315 x898)) x1297))
(assert (= x955 (x377 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (=> (>= 10000 x985) (= (x495 x985) 0)))
(assert (x1029 18446744073709551487))
(assert (x1149 x534))
(assert (x1149 x1262))
(assert (x1149 x1181))
(assert (=> (>= 10000 x703) (= (x495 x703) 0)))
(assert (=> (>= 10000 x1051) (= 0 (x495 x1051))))
(assert (x1149 x533))
(assert (= x431 (and x471 (not x1035))))
(assert (x1149 x1159))
(assert (=> (>= 10000 x271) (= 0 (x495 x271))))
(assert (= x375 (and x1178 (not x779))))
(assert (= (x495 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)))
(assert (x1149 x692))
(assert (= (x1214 x935 x865) (x495 (x1214 x935 x865))))
(assert (not (x1029 (x1103 x9 x580 x91 x502 x761 x441 x888))))
(assert (x1149 x252))
(assert (= (x377 (x612 x9 x563 x116 x803 x180 x591 x507 x814)) x591))
(assert (x1149 x699))
(assert (x1149 x443))
(assert (x1149 x29))
(assert (= (x495 (x612 x1297 x53 x246 x272 x435 x955 x315 x898)) (x612 x1297 x53 x246 x272 x435 x955 x315 x898)))
(assert (= x1201 (x655 (x370 x346 x1201 x1107))))
(assert (x384 x605))
(assert (> (x1114 x1297 x1246 x993 x840) 10000))
(assert (x1149 x1043))
(assert (x1149 x1047))
(assert (= (x1231 (x1103 x138 x451 x1210 x720 x437 x178 x790)) x1210))
(assert (< (x1026 x496 x908 x614 x127 x773 x817) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x704))
(assert (x1149 x669))
(assert (not (x1029 (x1026 x138 x199 x584 x1223 x34 x684))))
(assert (= x935 (x254 (x1214 x935 x865))))
(assert (x1149 x822))
(assert (x1149 x553))
(assert (x1149 x586))
(assert (x1149 x1225))
(assert (= (x418 x1167 248) (div x1167 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x1149 x624))
(assert (= x75 (x655 (x764 x496 x75 x1013 x531 x198))))
(assert (=> (>= 10000 x889) (= (x495 x889) 0)))
(assert (x1149 x917))
(assert (x1149 x39))
(assert (x1149 x782))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x365 10000) (= (x495 x365) 0)))
(assert (x1149 x1061))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (=> (>= 10000 x26) (= 0 (x495 x26))))
(assert (=> (<= x346 10000) (= 0 (x495 x346))))
(assert (=> (>= 10000 x144) (= (x495 x144) 0)))
(assert (x1149 x999))
(assert (x1149 x798))
(assert (x1149 x142))
(assert (x1149 x402))
(assert (x1149 x820))
(assert (x1149 x304))
(assert (x1149 x837))
(assert (= x679 (x377 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (not (x1029 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (x1149 x934))
(assert (x1149 x571))
(assert (x1149 x346))
(assert (= (x254 (x1214 x1297 x5)) x1297))
(assert (x1149 x1154))
(assert (x1149 x84))
(assert (x1029 2065879269284))
(assert (x1149 x575))
(assert (x1149 x559))
(assert (x1149 x1049))
(assert (< (x1026 x346 x1024 x794 x1278 x200 x950) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1104 (and x108 (not x1203))))
(assert (x1149 x1230))
(assert (x1149 x882))
(assert (x1149 x866))
(assert (x1149 x1184))
(assert (x1149 x660))
(assert (x1149 x942))
(assert (=> (<= x604 10000) (= (x495 x604) 0)))
(assert (=> (<= x1013 10000) (= (x495 x1013) 0)))
(assert (x1149 x591))
(assert (= (x1103 x935 x229 x576 x706 x411 x650 x390) (x495 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (x1149 x441))
(assert (x1149 x638))
(assert (x1149 x415))
(assert (= x1206 (x655 (x1214 x1270 x1206))))
(assert (x667 x30))
(assert (x1149 x1044))
(assert (=> (>= 10000 x842) (= 0 (x495 x842))))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1149 x478))
(assert (x1149 x72))
(assert (=> (>= 10000 x507) (= 0 (x495 x507))))
(assert (x1029 18446746139588821059))
(assert (x1149 x1062))
(assert (x1149 x1087))
(assert (x1149 x487))
(assert (> (x1114 x346 x181 x709 x351) 10000))
(assert (= (and x646 (not x1160)) x101))
(assert (x1149 x904))
(assert (x1149 x567))
(assert (=> (<= x1278 10000) (= 0 (x495 x1278))))
(assert (=> (<= x531 10000) (= (x495 x531) 0)))
(assert (= x53 (x655 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (x384 1461501637330902918203684832716283019655932542975))
(assert (x1149 x18))
(assert (=> (<= x550 10000) (= (x495 x550) 0)))
(assert (= x873 (x780 (x764 x1270 x1236 x664 x1075 x873))))
(assert (= 0 (x495 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1149 x840))
(assert (= (x370 x496 x298 x744) (x495 (x370 x496 x298 x744))))
(assert (= (x377 (x1103 x935 x229 x576 x706 x411 x650 x390)) x650))
(assert (= (x1175 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) x406))
(assert (x1149 x1064))
(assert (x1149 x899))
(assert (x1149 x509))
(assert (= x28 (x1050 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (x1149 x844))
(assert (x1149 x821))
(assert (=> (<= x1230 10000) (= (x495 x1230) 0)))
(assert (not (x1029 (x370 x1270 x404 x1002))))
(assert (= (x655 (x764 x346 x988 x326 x1181 x1110)) x988))
(assert (x667 x630))
(assert (x1149 x1194))
(assert (= 0 (x495 2065879269284)))
(assert (> (x764 x935 x1211 x430 x213 x553) 10000))
(assert (= (x254 (x1114 66 x424 x806 x357)) 66))
(assert (x1029 2065879269376))
(assert (=> (<= x927 10000) (= 0 (x495 x927))))
(assert (=> (<= x910 10000) (= (x495 x910) 0)))
(assert (x1149 x1192))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1026 x1270 x465 x1139 x59 x604 x550)))
(assert (=> (>= 10000 x1039) (= 0 (x495 x1039))))
(assert (= x435 (x780 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (x1149 x272))
(assert (= (x655 (x370 x935 x631 x443)) x631))
(assert (= (x1050 (x1103 x9 x580 x91 x502 x761 x441 x888)) x888))
(assert (x1149 x1022))
(assert (= x411 (x780 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (x1029 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= (x254 (x764 x346 x988 x326 x1181 x1110)) x346))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1103 x935 x229 x576 x706 x411 x650 x390)))
(assert (x1149 x768))
(assert (x1149 x369))
(assert (x1149 x196))
(assert (x1149 x298))
(assert (= x896 (=> (and (not (or (and (> x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x582 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1028 x582)))) (= x1247 (x290 (+ x741 32))) (or (<= x165 18446746139588821027) (>= x165 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (= x1169 (x1158 x359)) (= x447 (x1158 x353)) (<= x1169 18446744073709551615) (= (- x504 67) x766) (= (x1158 x266) x1102) (= (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x666) x785) (= x273 (x290 (+ x165 32))) (or (>= 18446746139588821027 x741) (>= x741 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (or (and (= (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x352 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x263 x352)) (and (> x352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263))) (>= x732 1) (= x124 (x1158 x619)) (= (x290 (+ 32 x353)) x266) (= (x1158 x582) x1127) (= x622 (+ x785 448)) (= x1135 (x1158 x741)) (= x352 (x290 (+ x741 31))) (or (<= x263 18446746139588821059) (>= x263 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= 1 x1173) (<= 128 x571) (= (x290 (+ x1127 x582)) x353) (= x1182 (* 32 x1135)) (= (x991 (- x263 x353)) x571) (or (<= x1192 2065879269376) (>= x1192 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= x445 2) (<= x785 18446744073709551167) (= (+ 63 x425) x666) (<= 64 x1169) (= x445 (x1158 x165)) (= x619 (x290 (+ 32 x273))) (not (> x1187 x263)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x571) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1123) (<= x1102 18446744073709551615) (<= x1127 18446744073709551615) (= (x175 128) x1173) (= x165 (x290 (+ x353 x1102))) (= (x290 (+ x1192 36)) x359) (= (x290 (+ x1169 x582)) x263) (= 160 x731) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x353) (>= 18446746139588821027 x353)) (= (* 32 x1135) x425) (= (x1158 228) x1192) (= (< x1247 x1187) x869) (= (x991 (- x504 x1169)) x1028) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1192)) (< x1192 x766)) (and (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1192))) (<= x1169 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 1461501637330902918203684832716283019655932542975 x447) (= (x290 (+ x1247 x1182)) x1187) (= (x991 (- x263 x165)) x1123) (>= 18446744073709551615 x124) (= x582 (x290 (+ x359 32))) (= x741 (x290 (+ x165 x124))) (<= x1135 18446744073709551615) (= (x1158 x273) x294) (<= 1 x785) (>= x1123 128)) (and (=> x869 x891) (=> (and (not x869) (= x622 x575)) x482)))))
(assert (=> (>= 10000 x1223) (= 0 (x495 x1223))))
(assert (= (x495 2065879269376) 0))
(assert (x1149 x518))
(assert (> (x1103 x138 x451 x1210 x720 x437 x178 x790) 10000))
(assert (=> (>= 10000 x1189) (= 0 (x495 x1189))))
(assert (x1149 x161))
(assert (= x1270 (x254 (x1214 x1270 x1206))))
(assert (x1149 x1135))
(assert (x1149 x151))
(assert (x1149 x961))
(assert (x1149 x578))
(assert (= (and x1155 x339) x783))
(assert (x1149 x1174))
(assert (x1149 x757))
(assert (not (x1029 (x1114 66 x424 x806 x357))))
(assert (x1149 x977))
(assert (= x158 (=> (and (= (x1158 x1040) x17) (>= 1461501637330902918203684832716283019655932542975 x17) (or (>= x510 115792089237316195423570985008687907853269984665640564039457584007913129639777) (>= 18446744073709551455 x510)) (<= x510 18446744073709551614) (<= x368 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x290 (+ x42 32)) x762) (= (x290 (+ 32 x133)) x1040) (< x510 x40) (>= 18446744073709551615 x510) (or (>= x510 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x510 18446744073709551455)) (>= x368 160) (= (x1158 x133) x1085) (= (x290 (+ 32 x512)) x157) (not (< x40 x510)) (= (x991 (- x504 x1242)) x368) (= x512 (x290 (+ x1242 32))) (not (= x510 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x255 5) (= (x290 (+ x892 32)) x42) (<= x37 1461501637330902918203684832716283019655932542975) (>= 18446744073709551614 x510) (= (x290 (+ 32 x157)) x133) (= x37 (x1158 x512)) (or (>= x1242 57896044618658097711785492504343953926634992332820282019728792003956564820517) (<= x1242 2065879269284)) (= x892 (x290 (+ 32 x510))) (= x255 (x1158 x1242)) (>= 18446744073709551615 x510) (= (not (< 1 x1118)) x636) (= (x290 (+ x762 32)) x36) (= x40 (x290 (+ x510 160))) (= x81 (x1158 x157)) (<= x510 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x636 (=> (= x40 x380) x501)))))
(assert (< (x764 x1270 x1236 x664 x1075 x873) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x41))
(assert (=> (<= x68 10000) (= (x495 x68) 0)))
(assert (x1149 x748))
(assert (= (x495 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x1149 x684))
(assert (= (x495 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)) (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)))
(assert (< (x1114 x1270 x1071 x711 x271) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1114 x138 x500 x188 x1062)))
(assert (x667 x638))
(assert (< 10000 (x612 x9 x563 x116 x803 x180 x591 x507 x814)))
(assert (= x1279 (=> (and (= (x1090 x378) x871) (= x535 (not (> x871 1)))) (and x535 x80))))
(assert (= x138 (x254 (x764 x138 x356 x1051 x842 x374))))
(assert (= (x495 (x764 x346 x988 x326 x1181 x1110)) (x764 x346 x988 x326 x1181 x1110)))
(assert (x1149 x61))
(assert (x1149 x730))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1114 66 x424 x806 x357)))
(assert (x1149 x245))
(assert (x1149 x1098))
(assert (x1149 x707))
(assert (= (=> (and (or (and (and (= x187 1) (>= 4294967295 x529) (<= 32 x529)) x1048) (and (not x1048) (= x1180 x187))) (and (<= 32 x529) (= (x182 x299) x769) (not (= x299 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x299 x1074) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x299)) (>= x769 1) (= (x290 (+ x299 32)) x1074) (<= x529 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x851 1) (= x819 (x113 1461501637330902918203684832716283019655932542975 x657)) (= (x290 (+ x1074 4)) x972) (= x1048 (> x1180 0)) (<= x299 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x299) (<= x299 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x299 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1037 (x113 1461501637330902918203684832716283019655932542975 x916)))) x1272) x260))
(assert (< 10000 (x370 x496 x298 x744)))
(assert (x1149 x49))
(assert (x1149 x1139))
(assert (x1149 x367))
(assert (= (x655 (x1114 66 x424 x806 x357)) x424))
(assert (= (x780 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x1260))
(assert (< 10000 (x1214 x9 x525)))
(assert (x1149 x1249))
(assert (= (=> (and (= (x216 x1095) x121) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x310)) (= (x216 x583) x699) (= (x216 224) x317) (= x1061 x660) (<= x658 1461501637330902918203684832716283019655932542975) (= x680 (x1158 68)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x310)) (< x310 x19) (= x992 (x991 (- x493 32))) (= x798 (+ x1095 32)) (= x583 (x216 160)) (not (= x310 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x660 (x113 1461501637330902918203684832716283019655932542975 x121)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x310) (= x475 (x216 256)) (= (x290 (+ 32 x310)) x1006) (= x1066 (x290 (+ x310 32))) (= (x290 (+ x1006 32)) x963) (= x493 (x991 (- x19 x310))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x310) (= (<= x496 224) x215) (= (x73 x310) x496) (= (x113 1461501637330902918203684832716283019655932542975 x475) x1061) (<= x680 1461501637330902918203684832716283019655932542975) (= x39 (x113 1461501637330902918203684832716283019655932542975 x699)) (= (+ x1296 32) x1095) (not (> x929 x317)) (= x658 (x1158 100)) (<= x310 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x290 (+ x1006 64)) x19)) (and (=> (and (and (= (x290 (+ x1066 96)) x516) (> x995 x19) (= x1228 (x290 (+ x1066 160))) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x73 x1066) x75) (= x739 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) (= (x73 x210) x68) (= (x290 (+ 32 x1066)) x643) (= (x73 x998) x406) (= (x290 (+ 64 x18)) x1274) (= x777 (x73 x1228)) (= x4 (x290 (+ 32 x1066))) (= (x290 (+ 128 x1066)) x518) (= (x73 x1066) x298) (= x127 (x73 x541)) (= x531 (x73 x387)) (= (= 0 x879) x1035) (>= x995 2) (= (x370 x496 x298 x744) x593) (= x925 (x73 x277)) (= x962 (x290 (+ x1066 32))) (= (x73 x1066) x1244) (= (x73 x633) x1077) (= (x73 x1066) x934) (= (x1114 x496 x78 x68 x985) x46) (= (* 32 x879) x599) (= x894 (x73 x1274)) (= (x1214 x496 x1176) x652) (= x1193 (x73 x962)) (= x830 (x1026 x496 x908 x614 x127 x773 x817)) (>= 18446744073709551615 x879) (= (x73 x518) x1245) (= (x73 x369) x221) (= (x290 (+ 32 x1066)) x1030) (= (x73 192) x18) (= x131 (x73 x120)) (= (x290 (+ 64 x1066)) x398) (= (x73 x1224) x114) (= x109 (x747 0)) (<= 1 x19) (= (x290 (+ 160 x1066)) x1224) (= x82 (x1103 x496 x934 x889 x566 x1077 x131 x114)) (= (x73 x849) x817) (= x611 (ite (= 0 x496) x109 (ite (>= 32 x496) x652 (ite (<= x496 64) x593 (ite (<= x496 96) x46 (ite (<= x496 128) x1094 (ite (>= 160 x496) x830 (ite (<= x496 192) x82 (ite (<= x496 224) x739 x911))))))))) (= x633 (x290 (+ 96 x1066))) (= x614 (x73 x4)) (= (x290 (+ x1066 64)) x541) (= (x73 x627) x773) (= (x73 x643) x889) (= (x290 (+ 64 x1066)) x791) (= (x290 (+ x1066 128)) x120) (= x1094 (x764 x496 x75 x1013 x531 x198)) (= x744 (x73 x1299)) (= (x290 (+ 192 x1066)) x369) (= (x290 (+ x1066 64)) x387) (= x879 (x73 x894)) (= x995 (x290 (+ x19 (mod (+ x599 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x566 (x73 x398)) (= x998 (x290 (+ 64 x1066))) (= x627 (x290 (+ x1066 96))) (= (x73 x516) x198) (= x849 (x290 (+ 128 x1066))) (= x1013 (x73 x1030)) (= (x73 x1066) x908) (= (x73 x791) x985) (= x277 (x290 (+ 96 x1066))) (= (x73 x1066) x78) (= (x290 (+ 32 x1066)) x1299) (= (x290 (+ x1066 32)) x210) (= (x73 x1066) x1176)) (or (and (not x1035) (and (= x457 (* 32 x879)) (= x332 (x290 (+ 32 x19))))) x1035)) x16) x215)) x1208))
(assert (not (x1029 (x370 x935 x631 x443))))
(assert (x1149 x190))
(assert (= x346 (x254 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (> (x1103 x9 x580 x91 x502 x761 x441 x888) 10000))
(assert (= (x1175 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243)) x1119))
(assert (> (x764 x138 x356 x1051 x842 x374) 10000))
(assert (=> (>= 10000 x399) (= 0 (x495 x399))))
(assert (x1149 x1297))
(assert (=> (<= x351 10000) (= 0 (x495 x351))))
(assert (x1149 x10))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (= (x1175 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x1003))
(assert (x1149 x608))
(assert (x1149 x322))
(assert (x1149 x855))
(assert (not (x1029 (x1103 x496 x934 x889 x566 x1077 x131 x114))))
(assert (x1149 x26))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (=> (>= 10000 x1068) (= 0 (x495 x1068))))
(assert (x1149 x663))
(assert (x1149 x842))
(assert (x1149 x218))
(assert (=> (>= 10000 x763) (= (x495 x763) 0)))
(assert (x1149 x980))
(assert (= (x254 (x764 x9 x1092 x910 x1060 x927)) x9))
(assert (=> (>= 10000 x986) (= 0 (x495 x986))))
(assert (x1149 x86))
(assert (x1149 x993))
(assert (x1149 x247))
(assert (x1149 x448))
(assert (= x925 (x780 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221))))
(assert (x1149 x243))
(assert (x1029 4294967295))
(assert (=> (>= 10000 x794) (= 0 (x495 x794))))
(assert (x1149 x12))
(assert (x1149 x159))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1149 x282))
(assert (=> (>= 10000 x597) (= 0 (x495 x597))))
(assert (x1149 x352))
(assert (x1149 x139))
(assert (x1149 x803))
(assert (=> (>= 10000 x711) (= (x495 x711) 0)))
(assert (x1149 x1229))
(assert (x1149 x128))
(assert (= (and (not x1023) x250) x1152))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x1149 x445))
(assert (x1149 x797))
(assert (x1149 x464))
(assert (= x757 (x1231 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045))))
(assert (= x671 (=> (and (= x141 (x113 1461501637330902918203684832716283019655932542975 x837)) (= x141 x376) (= x837 (x1090 x782)) (= x376 (x113 1461501637330902918203684832716283019655932542975 x248)) (= 1 x498) (= x782 (x290 (+ x1017 128)))) x1279)))
(assert (x1029 2065879269316))
(assert (not (x1029 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (x1149 x610))
(assert (x1149 x4))
(assert (x1149 x388))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)))
(assert (x1149 x1092))
(assert (x1149 x794))
(assert (x1149 x34))
(assert (= x1181 (x1175 (x764 x346 x988 x326 x1181 x1110))))
(assert (= (x1050 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)) x305))
(assert (= x1211 (x655 (x764 x935 x1211 x430 x213 x553))))
(assert (x1149 x110))
(assert (x1149 x713))
(assert (= x935 (x254 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (=> (<= x78 10000) (= (x495 x78) 0)))
(assert (x1149 x1216))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x1029 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (= x918 (or x1241 x1104)))
(assert (x384 x534))
(assert (x1149 x58))
(assert (x1149 x371))
(assert (= (x254 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) x496))
(assert (x1149 x545))
(assert (x1149 x500))
(assert (=> (<= x563 10000) (= (x495 x563) 0)))
(assert (not (x1029 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (x1149 x1034))
(assert (=> (>= 10000 x1291) (= (x495 x1291) 0)))
(assert (x1149 x1016))
(assert (= x814 (x316 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (x1149 x892))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x764 x138 x356 x1051 x842 x374)))
(assert (x596 x605))
(assert (x1149 x155))
(assert (x1149 x620))
(assert (= x443 (x1231 (x370 x935 x631 x443))))
(assert (x1149 x366))
(assert (x1149 x875))
(assert (=> (>= 10000 x835) (= (x495 x835) 0)))
(assert (x1149 x40))
(assert (= x6 (x655 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509))))
(assert (x1149 x449))
(assert (= x274 (x655 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606))))
(assert (= x409 (=> (and (and (= x1007 x1116) (and (and (< x887 x65) (= (- x719 36) x233) (= x847 (* 32 x932)) (= (* 160 x1141) x545) (= (+ 32 x545 x969) x700) (= x65 x329) (= x417 x717) (= (* (- x932 1) 32) x887) (= (+ x847 32 x700) x626) (= (+ 420 x548) x719) (>= x847 x65) (<= x932 134217728) (= x834 (+ 32 x626)) (= (- x700 36) x185) (= (* 128 x723) x548) (= x982 (+ x969 32)) (= x959 (+ 32 x700)) (= x564 (* x924 160)) (>= x932 0) (= x1124 (+ x719 32)) (= x969 (+ 32 x719 x564)) (= x226 (+ 32 x781 x626)) (= (- x969 36) x367) (= (- x626 36) x436) (= (* x968 32) x781)) (and (and (and (= x226 x504) (= x883 x1078) (= x808 false)) (and (and (= x524 x929) (and (or (and x621 (and (>= 4294967295 x1001) (<= 32 x1001) (= x732 1))) (and (not x621) (= x909 x732))) (and (= 2189116922 x745) (<= 32 x1001) (= x394 (x217 x635)) (= x51 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= x1171 x335) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1001) (= x884 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= x621 (< 0 x909)) (= (x809 x635) x163) (= 128 x836) (>= 1461501637330902918203684832716283019655932542975 x361) (= false x1280) (>= 127 x269) (>= 127 x269) (= (x1164 x1171) x1275) (>= x394 1) (= x1282 false) (= x163 x99)))) (= x335 x903))) (= x1233 x160)))) (and (= (< 0 (x217 x1249)) x300) (<= x480 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x395 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 2065879269444 x504) x410 (>= x417 0) (>= 1461501637330902918203684832716283019655932542975 x365) (>= x635 1) (not (= x328 x110)) (<= 0 x160) (>= 4294967295 x364) x693 (not (= x110 x1249)) (not (= x1248 x319)) (not (= x635 x960)) (not (= x960 x110)) (not (= x890 x1249)) (>= 1461501637330902918203684832716283019655932542975 x383) (>= x1007 0) (= (< 0 (x217 x328)) x560) (>= 1461501637330902918203684832716283019655932542975 x1007) (not (= x960 x319)) (= x383 x890) (>= 1461501637330902918203684832716283019655932542975 x1249) (not (= x890 x365)) (not (= x1249 x1248)) (not (= x890 x110)) (= x770 x1248) (= x169 32) (>= x524 0) (not (= x110 x319)) (= (< 0 (x217 x319)) x841) (>= 4294967295 x1252) (<= 0 x883) x540 (<= x328 1461501637330902918203684832716283019655932542975) (<= 0 x480) (>= x890 1) (= x410 (< 0 (x217 x365))) (>= 1461501637330902918203684832716283019655932542975 x335) (>= 1461501637330902918203684832716283019655932542975 x635) (not (= x1249 x319)) (<= 0 x395) (>= x365 1) (<= x968 4294967295) (not (= x1248 x365)) (not (= x365 x328)) (<= x960 1461501637330902918203684832716283019655932542975) (= x540 (< 0 (x217 x110))) (not (= x890 x635)) (<= 0 x721) (not (= x319 x890)) (>= x644 0) x841 (>= x1072 0) (<= 1 x770) (<= 0 x1020) (not (= x960 x1248)) (>= 1461501637330902918203684832716283019655932542975 x417) (not (= x960 x890)) (>= x1248 1) (not (= x1248 x890)) (= x319 x190) (not (= x1249 x328)) (>= 4294967295 x723) (not (= x365 x960)) (>= 1461501637330902918203684832716283019655932542975 x770) (<= x1058 1461501637330902918203684832716283019655932542975) (>= x1249 1) (not (= x319 x635)) (>= x190 1) (>= x328 1) (<= x644 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 (x217 x1248)) x693) (not (= x328 x319)) x300 (<= x1034 1461501637330902918203684832716283019655932542975) (>= 4294967295 x976) (>= x383 1) (= 0 x147) (= x775 (< 0 (x217 x890))) (>= 4294967295 x924) (<= x1141 4294967295) (<= x1248 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x110) x775 (<= x524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1249 x960)) x1251 (= x455 x1248) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x160) (not (= x635 x1248)) (<= 0 x335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883) (not (= x110 x635)) x560 (<= x329 4294967295) (not (= x1249 x635)) (<= x319 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x899) (<= x1072 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x319 x365)) (>= x110 1) (>= x1058 0) (>= x504 548) (not (= x328 x1248)) (= x811 (< 0 (x217 x635))) (not (= x960 x328)) (<= x890 1461501637330902918203684832716283019655932542975) (not (= x365 x110)) (>= x455 1) (not (= x635 x365)) (<= 1 x319) x811 (not (= x328 x635)) (= x1251 (> (x217 x960) 0)) (<= x455 1461501637330902918203684832716283019655932542975) (not (= x1249 x365)) (not (= x890 x328)) (<= x190 1461501637330902918203684832716283019655932542975) (not (= x110 x1248)) (>= 1461501637330902918203684832716283019655932542975 x1020) (<= 1 x960))) x896)))
(assert (=> (>= 10000 x72) (= (x495 x72) 0)))
(assert (x1149 x52))
(assert (x1149 x549))
(assert (x1149 x924))
(assert (x1149 x200))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1214 x935 x865)))
(assert (x1149 x1001))
(assert (=> (>= 10000 x1249) (= 0 (x495 x1249))))
(assert (x1149 x745))
(assert (= (x495 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (=> (>= 10000 x59) (= (x495 x59) 0)))
(assert (= x16 (=> (and (or (and (and (= x87 x292) (= x897 x152) (= 0 x513)) (not x1185)) (and x1185 (and (= x701 (x290 (+ 32 x292))) (= x973 x897) (= x704 (x405 x152)) (= (< 1 x206) x1042) (= x973 (x290 (+ 32 x152))) (= x701 x87) (not x1042) (= 1 x513)))) (and (= (x405 x19) x206) (= (x290 (+ 32 x19)) x152) (= (x800 x1274) x134) (= (> x568 0) x975) (= x1174 (x290 (+ x18 32))) (= x838 (x405 x1174)) (= x11 x995) (= x568 (x800 x134)) (= (> x206 0) x1185) (not x975) (= (x290 (+ x11 32)) x292))) x742)))
(assert (x1149 x766))
(assert (= (x254 (x1214 x496 x1176)) x496))
(assert (=> (>= 10000 x196) (= (x495 x196) 0)))
(assert (x1149 x1133))
(assert (=> (<= x127 10000) (= (x495 x127) 0)))
(assert (=> (>= 10000 x272) (= 0 (x495 x272))))
(assert (= (x655 (x1103 x1270 x835 x196 x597 x489 x230 x986)) x835))
(assert (=> (>= 10000 x1199) (= 0 (x495 x1199))))
(assert (=> (<= x1211 10000) (= (x495 x1211) 0)))
(assert (= (x1175 (x1103 x138 x451 x1210 x720 x437 x178 x790)) x720))
(assert (x1149 x490))
(assert (= x614 (x1231 (x1026 x496 x908 x614 x127 x773 x817))))
(assert (x1149 x1046))
(assert (x1029 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (x1149 x1024))
(assert (x1149 x1027))
(assert (x1149 x618))
(assert (= (x377 (x1103 x1270 x835 x196 x597 x489 x230 x986)) x230))
(assert (x1149 x237))
(assert (= x10 (x655 (x1214 x138 x10))))
(assert (x1149 x170))
(assert (=> (<= x635 10000) (= (x495 x635) 0)))
(assert (= x935 (x254 (x1114 x935 x461 x448 x980))))
(assert (=> (<= x908 10000) (= (x495 x908) 0)))
(assert (x1149 x64))
(assert (x1149 x1003))
(assert (= x196 (x1231 (x1103 x1270 x835 x196 x597 x489 x230 x986))))
(assert (x1149 x711))
(assert (x1149 x221))
(assert (x1149 x385))
(assert (x1149 x562))
(assert (= x759 (or x522 x48)))
(assert (= (x655 (x370 x9 x703 x900)) x703))
(assert (x1149 x938))
(assert (x384 x514))
(assert (x1149 x477))
(assert (=> (>= 10000 x1248) (= 0 (x495 x1248))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)))
(assert (x1149 x949))
(assert (x1149 x635))
(assert (x1149 x819))
(assert (x1149 x915))
(assert (< (x1114 x496 x78 x68 x985) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1029 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509))))
(assert (not (x1029 (x370 x1297 x1065 x623))))
(assert (x1149 x117))
(assert (x1149 x1078))
(assert (=> (>= 10000 x305) (= (x495 x305) 0)))
(assert (= (x495 18446746139588821059) 0))
(assert (< (x1214 x346 x57) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1175 (x764 x935 x1211 x430 x213 x553)) x213))
(assert (x1149 x17))
(assert (not (x1029 (x1214 x935 x865))))
(assert (=> (<= x274 10000) (= 0 (x495 x274))))
(assert (= x1062 (x1175 (x1114 x138 x500 x188 x1062))))
(assert (x1149 x728))
(assert (x1149 x972))
(assert (x1149 x1250))
(assert (< 10000 (x1114 x9 x1159 x72 x1294)))
(assert (x1029 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x1149 x751))
(assert (= (x1026 x1297 x258 x56 x350 x396 x32) (x495 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1103 x9 x580 x91 x502 x761 x441 x888)))
(assert (x1149 x516))
(assert (> (x764 x346 x988 x326 x1181 x1110) 10000))
(assert (= x448 (x1231 (x1114 x935 x461 x448 x980))))
(assert (=> (<= x631 10000) (= (x495 x631) 0)))
(assert (x1149 x834))
(assert (=> (<= x888 10000) (= 0 (x495 x888))))
(assert (x1149 x968))
(assert (x1149 x456))
(assert (< (x1103 x138 x451 x1210 x720 x437 x178 x790) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x554))
(assert (x1149 x878))
(assert (=> (>= 10000 x1246) (= (x495 x1246) 0)))
(assert (x1149 x338))
(assert (x1149 x1285))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1149 x1186))
(assert (x1149 x920))
(assert (=> (>= 10000 x374) (= 0 (x495 x374))))
(assert (x1149 x564))
(assert (=> (<= x934 10000) (= 0 (x495 x934))))
(assert (= (x495 18446744073709551615) 0))
(assert (= x108 (and x694 x2)))
(assert (x1149 x92))
(assert (=> (<= x451 10000) (= 0 (x495 x451))))
(assert (x1149 x1273))
(assert (=> (<= x357 10000) (= 0 (x495 x357))))
(assert (x1149 x7))
(assert (= x773 (x780 (x1026 x496 x908 x614 x127 x773 x817))))
(assert (x1149 x556))
(assert (x1149 x1233))
(assert (< (x1114 x9 x1159 x72 x1294) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x967))
(assert (= (x1175 (x1103 x1270 x835 x196 x597 x489 x230 x986)) x597))
(assert (> (x370 x935 x631 x443) 10000))
(assert (= (=> (and (= x647 1) (= (x290 (+ x1074 32)) x83) (> x83 x1074) (not (= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1090 x1296) x378) (= (x1090 x378) x716) (not (= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= 1 x187) (= (x1090 x1074) x647) (= x579 (> x716 0)) (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x222 (x1090 160)) (= x248 (x1090 x222)) (not (= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (and (=> (and x579 (and (= (= x740 0) x339) (>= 5 x724) (= (x1090 x1032) x1017) (= x1032 (x290 (+ 32 x378))) (= (x1090 x378) x511) (= x740 (ite (= x724 1) 1 0)) (<= 1 x511) (= (x1090 x1017) x724))) (and (=> (and (and (and (<= x168 5) (= (ite (= x168 2) 1 0) x220) (= x1057 (< 0 x220)) (= (x1090 x1017) x168)) (or (and x1057 (= 1 x220)) (and (not x1057) (and (= x1011 1) (= (x1090 x1017) x1286) (= 3 x1286))))) x339) x671) (=> (and (not x339) (and (= x978 x1136) (= (x1090 x786) x104) (= x978 (x113 1461501637330902918203684832716283019655932542975 x104)) (= (x290 (+ x1017 128)) x786) (>= 1461501637330902918203684832716283019655932542975 x1136))) x1279))) (=> (not x579) x80))) x1272))
(assert (= (and (not x1048) x96) x15))
(assert (x1149 x680))
(assert (x1149 x1261))
(assert (x1149 x192))
(assert (x596 x926))
(assert (= x67 (and x779 x1178)))
(assert (= (x1050 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x1068))
(assert (x1149 x265))
(assert (< (x1026 x9 x1012 x427 x1230 x236 x763) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x495 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (x1149 x37))
(assert (x1149 x673))
(assert (x1149 x112))
(assert (= (x655 (x1103 x496 x934 x889 x566 x1077 x131 x114)) x934))
(assert (= 0 (x495 18446744073709551167)))
(assert (x1149 x180))
(assert (x1149 x279))
(assert (= 0 (x495 77929798818658108206329458850487298488570292587025318323788629963054520467456)))
(assert (x1149 x353))
(assert (=> (<= x424 10000) (= (x495 x424) 0)))
(assert (x1149 x292))
(assert (x667 x514))
(assert (= x419 (x655 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (not (x1029 (x1103 x138 x451 x1210 x720 x437 x178 x790))))
(assert (=> (>= 10000 x200) (= (x495 x200) 0)))
(assert (x1149 x1060))
(assert (not (x1029 (x1214 x496 x1176))))
(assert (x1149 x966))
(assert (x1149 x833))
(assert (=> (>= 10000 x988) (= 0 (x495 x988))))
(assert (= (x655 (x1114 x1297 x1246 x993 x840)) x1246))
(assert (not (x1029 (x764 x1270 x1236 x664 x1075 x873))))
(assert (x1149 x898))
(assert (x1149 x311))
(assert (x1149 x687))
(assert (x1149 x1179))
(assert (= x637 (and (not x257) x526)))
(assert (x1149 x588))
(assert (x1149 x11))
(assert (x1149 x1036))
(assert (= (x1231 (x1103 x935 x229 x576 x706 x411 x650 x390)) x576))
(assert (x1149 x1259))
(assert (= x342 (x1175 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (x1149 x1191))
(assert (= x478 (x377 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (not (x1029 (x764 x496 x75 x1013 x531 x198))))
(assert (> (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606) 10000))
(assert (= x48 (and x722 x1157)))
(assert (x1149 x132))
(assert (=> (<= x56 10000) (= 0 (x495 x56))))
(assert (x1149 x770))
(assert (= (x495 (x370 x1270 x404 x1002)) (x370 x1270 x404 x1002)))
(assert (x1149 x1091))
(assert (= (and x783 (not x1057)) x792))
(assert (x1149 x590))
(assert (x1149 x1173))
(assert (x1149 x19))
(assert (= x964 (and x1018 x956)))
(assert (x1149 x773))
(assert (x1149 x767))
(assert (x1149 x1257))
(assert (x1149 x119))
(assert (= (x377 (x1103 x9 x580 x91 x502 x761 x441 x888)) x441))
(assert (=> (<= x673 10000) (= 0 (x495 x673))))
(assert (x1149 x538))
(assert (x1149 x98))
(assert (x1149 x1082))
(assert (< (x764 x1297 x144 x307 x543 x491) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x246))
(assert (x1149 x493))
(assert (=> (<= x530 10000) (= (x495 x530) 0)))
(assert (=> (>= 10000 x525) (= (x495 x525) 0)))
(assert (x1149 x749))
(assert (= (=> (and (not (or (and (> x1242 x751) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x751) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x751) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242)))) (= (x991 (- x504 x881)) x751) (or (<= x1010 2065879269376) (>= x1010 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x881 (* 160 x1118)) (= (+ x308 32) x321) (> x510 x172) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766) (<= x1010 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1010 x766)) (and (> x1010 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x172 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x172) (= (x290 (+ x714 32)) x1242) (= x13 (* 32 x1118)) (>= x510 1) (= x714 (x290 (+ 36 x1010))) (= x1118 (x1158 x714)) (= (x290 (+ x172 (mod (+ 32 x13) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x510) (<= x172 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1010 (x1158 164)) (<= x1118 18446744073709551615) (= x616 (x290 (+ x172 32))) (= (> x1118 0) x722)) (and (=> (and (= x380 x510) (not x722)) x501) (=> x722 x158))) x325))
(assert (x1149 x835))
(assert (=> (>= 10000 x950) (= 0 (x495 x950))))
(assert (= x580 (x655 (x1103 x9 x580 x91 x502 x761 x441 x888))))
(assert (=> (>= 10000 x5) (= 0 (x495 x5))))
(assert (x1149 x785))
(assert (x1149 x988))
(assert (=> (<= x430 10000) (= (x495 x430) 0)))
(assert (= (x1114 x496 x78 x68 x985) (x495 (x1114 x496 x78 x68 x985))))
(assert (> (x1026 x346 x1024 x794 x1278 x200 x950) 10000))
(assert (x1149 x743))
(assert (x1149 x719))
(assert (= (and x1008 x76) x520))
(assert (= x127 (x1175 (x1026 x496 x908 x614 x127 x773 x817))))
(assert (x1149 x511))
(assert (x1149 x1129))
(assert (=> (<= x307 10000) (= (x495 x307) 0)))
(assert (x1149 x765))
(assert (x1149 x274))
(assert (= (x1175 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) x462))
(assert (x1149 x380))
(assert (x1149 x1269))
(assert (=> (>= 10000 x744) (= (x495 x744) 0)))
(assert (=> (>= 10000 x262) (= 0 (x495 x262))))
(assert (= (x495 (x370 x138 x508 x533)) (x370 x138 x508 x533)))
(assert (=> (<= x580 10000) (= (x495 x580) 0)))
(assert (= x399 (x1231 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (= (x780 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)) x1108))
(assert (=> (>= 10000 x650) (= (x495 x650) 0)))
(assert (x1149 x512))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (not (x1029 (x370 x496 x298 x744))))
(assert (x1149 x973))
(assert (x1149 x293))
(assert (=> (<= x404 10000) (= (x495 x404) 0)))
(assert (x1149 x893))
(assert (= (x1103 x496 x934 x889 x566 x1077 x131 x114) (x495 (x1103 x496 x934 x889 x566 x1077 x131 x114))))
(assert (x1149 x199))
(assert (x1149 x1156))
(assert (x1149 x162))
(assert (x1149 x1059))
(assert (= (x254 (x1214 x9 x525)) x9))
(assert (not (x1029 (x1214 x138 x10))))
(assert (= (x655 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)) x1154))
(assert (x1149 x857))
(assert (x1149 x307))
(assert (= x346 (x254 (x1214 x346 x57))))
(assert (=> (<= x326 10000) (= 0 (x495 x326))))
(assert (= (x495 (x764 x138 x356 x1051 x842 x374)) (x764 x138 x356 x1051 x842 x374)))
(assert (x1149 x461))
(assert (x1149 x709))
(assert (x1149 x790))
(assert (x1149 x185))
(assert (=> (>= 10000 x328) (= 0 (x495 x328))))
(assert (=> (<= x935 10000) (= (x495 x935) 0)))
(assert (x1149 x1284))
(assert (x1149 x266))
(assert (x1149 x963))
(assert (x1149 x1053))
(assert (= x200 (x780 (x1026 x346 x1024 x794 x1278 x200 x950))))
(assert (x1149 x344))
(assert (x1149 x507))
(assert (x1149 x399))
(assert (x1149 x465))
(assert (= (x254 (x1026 x138 x199 x584 x1223 x34 x684)) x138))
(assert (= (x655 (x1026 x1270 x465 x1139 x59 x604 x550)) x465))
(assert (x1149 x513))
(assert (x1149 x982))
(assert (= (x1050 (x1103 x496 x934 x889 x566 x1077 x131 x114)) x114))
(assert (x1149 x361))
(assert (not (x1029 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (=> (<= x52 10000) (= 0 (x495 x52))))
(assert (= (x254 (x1026 x9 x1012 x427 x1230 x236 x763)) x9))
(assert (x1149 x9))
(assert (x596 x754))
(assert (x1149 x1165))
(assert (x1149 x550))
(assert (= (or x918 x278) x1055))
(assert (x1149 x350))
(assert (< 10000 (x1026 x496 x908 x614 x127 x773 x817)))
(assert (x1149 x97))
(assert (x1149 x827))
(assert (x1149 x563))
(assert (x1149 x253))
(assert (x1149 x364))
(assert (x1149 x1171))
(assert (x1149 x762))
(assert (x1149 x1294))
(assert (= (x655 (x1026 x346 x1024 x794 x1278 x200 x950)) x1024))
(assert (x1149 x206))
(assert (x1149 x154))
(assert (=> (<= x53 10000) (= (x495 x53) 0)))
(assert (x1149 x666))
(assert (= (x495 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (= (=> (and (= x1184 (x1079 x125)) (= x694 (< 0 x1184)) (= (x1079 x24) x125)) (and (=> (and x694 (and (or (and x1203 (and (= (< 32 x1082) x204) (= (x259 x354) x844) (not x204))) (not x1203)) (and (= (x1079 x774) x926) (= (x1079 x338) x642) (= (x290 (+ x936 32)) x330) (= (x290 (+ x810 32)) x1064) (= x1203 (> x1082 0)) (= x117 (x290 (+ x1166 32))) (<= 1 x977) (= x1082 (x102 x642)) (= x98 (x290 (+ 32 x774))) (= (x1079 x432) x774) (= (x290 (+ 32 x98)) x338) (= x170 (x1079 x24)) (= x1044 (x1079 x98)) (= (x290 (+ x170 32)) x432) (= x942 (x290 (+ x1064 32))) (= x1166 (x290 (+ x330 128))) (= (x113 1461501637330902918203684832716283019655932542975 x926) x895) (= x810 (x290 (+ x330 32))) (= x977 (x1079 x170)) (= x354 (x290 (+ x642 32)))))) x446) (=> (and (= x936 x137) (not x694)) x1138))) x1196))
(assert (x1149 x165))
(assert (= (x1050 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)) x1045))
(assert (x1149 x715))
(assert (= (=> (and (= (x290 (+ 36 x434)) x675) (= x672 (* x454 160)) (= (+ x321 32) x1296) (= (x991 (- x504 x672)) x893) (or (>= 2065879269376 x434) (>= x434 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x380) (= (x1158 196) x434) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x661) (<= x893 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x893 x661)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x893) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x661)))) (>= 18446744073709551615 x454) (= (* x454 32) x687) (= x661 (x290 (+ x675 32))) (<= x380 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1080 (x290 (+ 32 x380))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x434) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766)) (< x434 x766)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x434) (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x454 (x1158 x675)) (= x1038 (> x454 0)) (>= x537 1) (= (x290 (+ (mod (+ x687 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x380)) x537) (<= x380 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x380 x537)) (and (=> x1038 x355) (=> (and (not x1038) (= x310 x537)) x1208))) x501))
(assert (=> (>= 10000 x1077) (= (x495 x1077) 0)))
(assert (x1149 x1227))
(assert (x1149 x141))
(assert (= (x1231 (x1103 x496 x934 x889 x566 x1077 x131 x114)) x889))
(assert (x596 x657))
(assert (x667 x534))
(assert (=> (<= x1156 10000) (= (x495 x1156) 0)))
(assert (= x484 (x1050 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606))))
(assert (x1149 x358))
(assert (> (x1103 x346 x674 x673 x397 x214 x1291 x52) 10000))
(assert (= (x254 (x370 x1270 x404 x1002)) x1270))
(assert (x1149 x223))
(assert (x1149 x1101))
(assert (x384 x657))
(assert (=> (>= 10000 x817) (= 0 (x495 x817))))
(assert (x1149 x354))
(assert (x1149 x365))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x764 x935 x1211 x430 x213 x553)))
(assert (x596 x104))
(assert (x1149 x122))
(assert (= (x1175 (x1103 x346 x674 x673 x397 x214 x1291 x52)) x397))
(assert (x1149 x91))
(assert (x1149 x1070))
(assert (x1029 18446744073709551167))
(assert (x1149 x21))
(assert (x1149 x1040))
(assert (not (x1029 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045))))
(assert (=> (<= x1210 10000) (= 0 (x495 x1210))))
(assert (x1149 x306))
(assert (x1029 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (= x674 (x655 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (< 10000 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)))
(assert (= (and x869 x336) x62))
(assert (not (x1029 (x370 x346 x1201 x1107))))
(assert (= x250 (or x442 x964)))
(assert (x1149 x347))
(assert (= x138 (x254 (x1214 x138 x10))))
(assert (x1149 x717))
(assert (= (and (not x956) x1018) x442))
(assert (=> (>= 10000 x1191) (= (x495 x1191) 0)))
(assert (< 10000 (x1214 x496 x1176)))
(assert (x667 x666))
(assert (x1149 x583))
(assert (x1029 18446744073709551614))
(assert (x1149 x903))
(assert (=> (>= 10000 x392) (= (x495 x392) 0)))
(assert (=> (<= x396 10000) (= 0 (x495 x396))))
(assert (=> (>= 10000 x623) (= 0 (x495 x623))))
(assert (=> (>= 10000 x496) (= 0 (x495 x496))))
(assert (=> (<= x1201 10000) (= (x495 x1201) 0)))
(assert (= x496 (x254 (x764 x496 x75 x1013 x531 x198))))
(assert (x1149 x923))
(assert (= (x655 (x1114 x1270 x1071 x711 x271)) x1071))
(assert (=> (<= x1065 10000) (= (x495 x1065) 0)))
(assert (x1149 x865))
(assert (x1149 x81))
(assert (x1149 x881))
(assert (= (x1231 (x1114 x496 x78 x68 x985)) x68))
(assert (x1149 x5))
(assert (x1149 x906))
(assert (x1149 x752))
(assert (x1149 x1296))
(assert (x1149 x262))
(assert (= (x495 18446744073709551613) 0))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (=> (>= 10000 x221) (= (x495 x221) 0)))
(assert (x1149 x42))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x346 x1201 x1107)))
(assert (=> (<= x709 10000) (= (x495 x709) 0)))
(assert (x1149 x411))
(assert (= (x254 (x747 0)) 0))
(assert (x1149 x1116))
(assert (x1149 x1039))
(assert (x1149 x642))
(assert (= (x1026 x935 x419 x26 x342 x878 x679) (x495 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (> (x1214 x1270 x1206) 10000))
(assert (x1149 x183))
(assert (x1149 x189))
(assert (x1149 x581))
(assert (=> (<= x1139 10000) (= (x495 x1139) 0)))
(assert (= (x254 (x1114 x9 x1159 x72 x1294)) x9))
(assert (= x507 (x1050 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (=> (<= x773 10000) (= (x495 x773) 0)))
(assert (= (and x76 (not x1008)) x1113))
(assert (x1149 x631))
(assert (= x180 (x780 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (=> (>= 10000 x462) (= 0 (x495 x462))))
(assert (x1149 x781))
(assert (= (x655 (x1103 x935 x229 x576 x706 x411 x650 x390)) x229))
(assert (x1149 x1278))
(assert (= x496 (x254 (x370 x496 x298 x744))))
(assert (x1149 x674))
(assert (=> (>= 10000 x199) (= 0 (x495 x199))))
(assert (= x214 (x780 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (= 0 (x495 18446744073709551455)))
(assert (= (x780 (x1103 x9 x580 x91 x502 x761 x441 x888)) x761))
(assert (= (x495 (x1114 66 x424 x806 x357)) (x1114 66 x424 x806 x357)))
(assert (= x1232 (and x1048 x96)))
(assert (x1149 x285))
(assert (x1149 x104))
(assert (= (x655 (x370 x496 x298 x744)) x298))
(assert (x1149 x786))
(assert (not (x1029 (x1214 x346 x57))))
(assert (not x409))
(assert (=> (>= 10000 x890) (= 0 (x495 x890))))
(assert (x1149 x1076))
(assert (= x935 (x254 (x1103 x935 x229 x576 x706 x411 x650 x390))))
(assert (= x1297 (x254 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045))))
(assert (x1149 x427))
(assert (=> (>= 10000 x911) (= 0 (x495 x911))))
(assert (x1149 x44))
(assert (x1149 x137))
(assert (x1149 x926))
(assert (x1149 x908))
(assert (x1149 x57))
(assert (=> (<= x198 10000) (= 0 (x495 x198))))
(assert (x384 x926))
(assert (x1149 x1025))
(assert (= x336 (or x552 x463)))
(assert (= (x1175 (x612 x9 x563 x116 x803 x180 x591 x507 x814)) x803))
(assert (< (x370 x935 x631 x443) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x655 (x1114 x346 x181 x709 x351)) x181))
(assert (x1149 x754))
(assert (x1149 x1169))
(assert (x1149 x532))
(assert (x1029 134217728))
(assert (x1149 x936))
(assert (=> (>= 10000 x57) (= (x495 x57) 0)))
(assert (x1149 x992))
(assert (= (x495 (x1214 x1270 x1206)) (x1214 x1270 x1206)))
(assert (x1149 x580))
(assert (x1149 x1163))
(assert (x1149 x858))
(assert (= x258 (x655 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (x384 x916))
(assert (x1149 x1195))
(assert (x1149 x475))
(assert (< (x1026 x935 x419 x26 x342 x878 x679) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1260 10000) (= 0 (x495 x1260))))
(assert (< 10000 (x1103 x935 x229 x576 x706 x411 x650 x390)))
(assert (= (x1175 (x764 x9 x1092 x910 x1060 x927)) x1060))
(assert (=> (>= 10000 x465) (= (x495 x465) 0)))
(assert (= x1270 (x254 (x1103 x1270 x835 x196 x597 x489 x230 x986))))
(assert (x1149 x263))
(assert (not (x1029 (x1103 x1270 x835 x196 x597 x489 x230 x986))))
(assert (x1149 x864))
(assert (= x72 (x1231 (x1114 x9 x1159 x72 x1294))))
(assert (= x500 (x655 (x1114 x138 x500 x188 x1062))))
(assert (= x673 (x1231 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x9 x703 x900)))
(assert (x1149 x488))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262)))
(assert (=> (>= 10000 x229) (= 0 (x495 x229))))
(assert (x1149 x23))
(assert (x1149 x403))
(assert (x1149 x895))
(assert (=> (>= 10000 x6) (= (x495 x6) 0)))
(assert (=> (>= 10000 x32) (= (x495 x32) 0)))
(assert (=> (<= x34 10000) (= (x495 x34) 0)))
(assert (=> (>= 10000 x138) (= 0 (x495 x138))))
(assert (x1149 x720))
(assert (x1149 x326))
(assert (x1149 x1265))
(assert (x1149 x181))
(assert (x1149 x376))
(assert (x1149 x121))
(assert (= x1245 (x377 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221))))
(assert (x1149 x1077))
(assert (= x278 (and (not x694) x2)))
(assert (= (or x67 x375) x1157))
(assert (x1149 x1010))
(assert (= x491 (x780 (x764 x1297 x144 x307 x543 x491))))
(assert (=> (>= 10000 x553) (= 0 (x495 x553))))
(assert (x384 x104))
(assert (x1149 x788))
(assert (x1149 x392))
(assert (=> (>= 10000 x790) (= (x495 x790) 0)))
(assert (x1149 x138))
(assert (x1149 x135))
(assert (x1149 x965))
(assert (=> (<= x566 10000) (= 0 (x495 x566))))
(assert (x1149 x230))
(assert (x1149 x1011))
(assert (= (=> (and (= (x290 (+ 32 x348)) x164) (= (not (< 1 x38)) x143) (= (x1158 x164) x698) (>= 18446744073709551614 x162) (>= x607 128) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x162) (>= 18446744073709551487 x162)) (= x691 (x290 (+ x162 128))) (= (x290 (+ 32 x192)) x1053) (>= 5 x177) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x607) (<= x162 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x162 18446744073709551614) (= (x290 (+ 32 x497)) x192) (or (>= x348 57896044618658097711785492504343953926634992332820282019728792003956564820517) (>= 2065879269316 x348)) (or (<= x162 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x162)) (> x691 x162) (<= x162 18446744073709551615) (<= x698 1461501637330902918203684832716283019655932542975) (= (x1158 x348) x177) (= x494 (x1158 x12)) (= x707 (x290 (+ x164 32))) (not (< x691 x162)) (= x607 (x991 (- x504 x348))) (>= 18446744073709551615 x162) (= x497 (x290 (+ x162 32))) (= x499 (x1158 x707)) (not (= x162 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x12 (x290 (+ x707 32)))) (and x143 (=> (= x172 x691) x325))) x150))
(assert (x1149 x188))
(assert (x1149 x1110))
(assert (x384 x475))
(assert (= x678 (and x1055 x382)))
(assert (=> (<= x1060 10000) (= 0 (x495 x1060))))
(assert (= x865 (x655 (x1214 x935 x865))))
(assert (x1149 x890))
(assert (x1149 x187))
(assert (= x1291 (x377 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (x1149 x450))
(assert (< 10000 (x1214 x935 x865)))
(assert (x1149 x1127))
(assert (x1149 x657))
(assert (x1149 x994))
(assert (x1149 x986))
(assert (x1149 x71))
(assert (x384 x666))
(assert (x1149 x962))
(assert (=> (<= x614 10000) (= (x495 x614) 0)))
(assert (x1149 x27))
(assert (= x346 (x254 (x1114 x346 x181 x709 x351))))
(assert (= (x377 (x1026 x496 x908 x614 x127 x773 x817)) x817))
(assert (x1149 x976))
(assert (x384 x121))
(assert (= x202 (x1231 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509))))
(assert (= x1012 (x655 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (x1149 x226))
(assert (x1149 x328))
(assert (= x543 (x1175 (x764 x1297 x144 x307 x543 x491))))
(assert (x1149 x769))
(assert (x1149 x569))
(assert (=> (<= x1119 10000) (= (x495 x1119) 0)))
(assert (= 0 (x495 37664329658542632380461339884011895550187483938955784695590509376205521682432)))
(assert (= (x495 2189116922) 0))
(assert (x1149 x470))
(assert (= 0 (x495 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (= (x495 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (= x563 (x655 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (x1149 x514))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (= x246 (x1231 (x612 x1297 x53 x246 x272 x435 x955 x315 x898))))
(assert (=> (<= x319 10000) (= 0 (x495 x319))))
(assert (= x502 (x1175 (x1103 x9 x580 x91 x502 x761 x441 x888))))
(assert (not (x1029 (x1114 x9 x1159 x72 x1294))))
(assert (x1149 x531))
(assert (x1149 x894))
(assert (=> (>= 10000 x411) (= (x495 x411) 0)))
(assert (= x1099 (and x1055 (not x382))))
(assert (x1149 x319))
(assert (= (x655 (x1114 x9 x1159 x72 x1294)) x1159))
(assert (=> (>= 10000 x1098) (= 0 (x495 x1098))))
(assert (> (x370 x138 x508 x533) 10000))
(assert (x1149 x970))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x764 x346 x988 x326 x1181 x1110)))
(assert (=> (<= x315 10000) (= 0 (x495 x315))))
(assert (= x453 (or x1197 x393)))
(assert (x1149 x1015))
(assert (=> (<= x1024 10000) (= 0 (x495 x1024))))
(assert (= x945 (and x469 x1185)))
(assert (x1149 x1141))
(assert (=> (>= 10000 x236) (= (x495 x236) 0)))
(assert (x1149 x681))
(assert (x1149 x32))
(assert (x1149 x1013))
(assert (= x34 (x780 (x1026 x138 x199 x584 x1223 x34 x684))))
(assert (x1149 x1289))
(assert (= x198 (x780 (x764 x496 x75 x1013 x531 x198))))
(assert (= x1191 (x377 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243))))
(assert (x1149 x275))
(assert (x1149 x1097))
(assert (x1149 x675))
(assert (x1029 18446744073709551615))
(assert (x1149 x208))
(assert (x1149 x1266))
(assert (< (x1214 x138 x10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x985))
(assert (x1149 x1086))
(assert (= (x780 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) x1031))
(assert (= (=> (and (<= 2 x958) (= (x290 (+ 31 x1148)) x415) (= (x1158 x831) x812) (>= 1461501637330902918203684832716283019655932542975 x812) (= x238 (x290 (+ 32 x622))) (= (x991 (- x263 x831)) x1025) (< x622 x749) (>= 18446744073709551615 x559) (= x882 (x290 (+ x238 32))) (= x651 (+ x749 32)) (>= 18446744073709551613 x622) (or (>= x263 57896044618658097711785492504343953926634992332820282019728792003956564820100) (<= x263 18446746139588821059)) (= x1148 (x290 (+ x464 x831))) (>= 18446744073709551613 x622) (= (+ x1016 63) x1097) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x415)) (> x263 x415)) (and (> x415 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (>= 18446744073709551518 x622) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x622)) (> x958 x749) (<= x464 18446744073709551615) (= (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1097) x86) (= x464 (x1158 x933)) (not (< x958 x749)) (= x958 (+ x749 x86)) (>= 18446744073709551614 x86) (= x933 (x290 (+ 32 x460))) (or (<= x831 18446746139588821027) (>= x831 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (>= 18446744073709551613 x622) (= x1016 (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x429)) (= x1128 (x1158 x1148)) (= (x290 (+ x622 96)) x749) (= (x290 (+ x1247 32)) x25) (or (<= x622 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x622)) (<= x622 18446744073709551614) (not (> x622 x749)) (= x559 (x1158 x1247)) (<= 96 x1025) (>= 18446744073709551614 x622) (>= 18446744073709551615 x958) (<= x622 18446744073709551614) (= x915 (x1158 x460)) (= (+ x1128 31) x429) (= x1091 (+ x1128 x651)) (= (x290 (+ 32 x1148)) x1269) (or (<= x622 18446744073709551518) (>= x622 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x846 (not (> x1187 x25))) (<= x1025 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x460 (x290 (+ 32 x831))) (or (>= x1148 57896044618658097711785492504343953926634992332820282019728792003956564820068) (>= 18446746139588821027 x1148)) (not (< x263 x92)) (or (>= x1247 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x1247 18446746139588821027)) (= (x290 (+ x559 x1247)) x831) (= x92 (x290 (+ x1128 x1269))) (>= 18446744073709551615 x1128)) (and (=> (= x575 x958) x482) x846)) x891))
(assert (x1149 x212))
(assert (x1149 x219))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1214 x496 x1176)))
(assert (=> (<= x1071 10000) (= (x495 x1071) 0)))
(assert (x1149 x1210))
(assert (= (and x1160 x646) x598))
(assert (= x735 (=> (and (or (and (and (<= x64 4294967295) (>= x64 32) (= x1257 1)) x1008) (and (not x1008) (= x218 x1257))) (and (= x1262 (x113 1461501637330902918203684832716283019655932542975 x754)) (= x1227 (x290 (+ x407 4))) (<= 32 x64) (= x804 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x439) (= (> x218 0) x1008) (= (x290 (+ x1227 32)) x314) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x64))) x1134)))
(assert (x1149 x543))
(assert (x1149 x329))
(assert (x1149 x502))
(assert (< (x612 x9 x563 x116 x803 x180 x591 x507 x814) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x332))
(assert (= (x1231 (x1026 x1270 x465 x1139 x59 x604 x550)) x1139))
(assert (> (x747 0) 10000))
(assert (x1149 x111))
(assert (x1149 x935))
(assert (=> (<= x230 10000) (= (x495 x230) 0)))
(assert (x1149 x435))
(assert (x1149 x1243))
(assert (x1149 x383))
(assert (x1149 x1131))
(assert (= 0 (x495 18446744073709551518)))
(assert (not (x1029 (x1214 x1297 x5))))
(assert (x1149 x537))
(assert (> (x1214 x346 x57) 10000))
(assert (= (x1175 (x612 x1297 x53 x246 x272 x435 x955 x315 x898)) x272))
(assert (x1149 x648))
(assert (x1149 x451))
(assert (x1149 x51))
(assert (= x1018 (or x945 x1056)))
(assert (=> (>= 10000 x757) (= (x495 x757) 0)))
(assert (> (x1214 x1297 x5) 10000))
(assert (x1149 x879))
(assert (= x935 (x254 (x764 x935 x1211 x430 x213 x553))))
(assert (=> (>= 10000 x213) (= 0 (x495 x213))))
(assert (= x1193 (x1231 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221))))
(assert (x1149 x916))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x1149 x653))
(assert (x1149 x565))
(assert (=> (>= 10000 x1176) (= (x495 x1176) 0)))
(assert (x1149 x867))
(assert (x1149 x969))
(assert (x1149 x68))
(assert (x1149 x515))
(assert (= (x655 (x370 x1297 x1065 x623)) x1065))
(assert (x1149 x30))
(assert (x1149 x124))
(assert (x1149 x774))
(assert (x1149 x286))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x1149 x1182))
(assert (= (x495 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243)) (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243)))
(assert (x1149 x925))
(assert (x1149 x1136))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x1149 x152))
(assert (x1149 x419))
(assert (not (x1029 (x1114 x1297 x1246 x993 x840))))
(assert (x1149 x1096))
(assert (x1149 x1264))
(assert (x1149 x386))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x1149 x950))
(assert (= (x1026 x496 x908 x614 x127 x773 x817) (x495 (x1026 x496 x908 x614 x127 x773 x817))))
(assert (x1149 x1074))
(assert (=> (>= 10000 x1297) (= 0 (x495 x1297))))
(assert (=> (<= x1154 10000) (= (x495 x1154) 0)))
(assert (x1149 x1172))
(assert (x1149 x1218))
(assert (not (x1029 (x370 x138 x508 x533))))
(assert (< (x1214 x1297 x5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x684 (x377 (x1026 x138 x199 x584 x1223 x34 x684))))
(assert (= x777 (x1050 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221))))
(assert (x1149 x946))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x1149 x270))
(assert (=> (<= x1287 10000) (= (x495 x1287) 0)))
(assert (x1149 x1167))
(assert (x1149 x1126))
(assert (=> (<= x441 10000) (= (x495 x441) 0)))
(assert (x1149 x1211))
(assert (=> (<= x1206 10000) (= 0 (x495 x1206))))
(assert (x1149 x561))
(assert (not (x1029 (x1114 x1270 x1071 x711 x271))))
(assert (= (x254 (x370 x138 x508 x533)) x138))
(assert (x1149 x28))
(assert (x1149 x333))
(assert (= (x316 (x612 x496 x1244 x1193 x406 x925 x1245 x777 x221)) x221))
(assert (= x463 (and (not x621) x1288)))
(assert (x1149 x558))
(assert (= x763 (x377 (x1026 x9 x1012 x427 x1230 x236 x763))))
(assert (= (x377 (x1026 x346 x1024 x794 x1278 x200 x950)) x950))
(assert (x1149 x157))
(assert (x1149 x574))
(assert (=> (<= x500 10000) (= (x495 x500) 0)))
(assert (x1149 x929))
(assert (= (x1114 x138 x500 x188 x1062) (x495 (x1114 x138 x500 x188 x1062))))
(assert (=> (>= 10000 x533) (= (x495 x533) 0)))
(assert (x1149 x1083))
(assert (= x1178 (or x1145 x62)))
(assert (= (x495 (x1114 x346 x181 x709 x351)) (x1114 x346 x181 x709 x351)))
(assert (x1149 x978))
(assert (x1029 18446744073709551518))
(assert (x1149 x457))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x612 x1297 x53 x246 x272 x435 x955 x315 x898)))
(assert (> (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509) 10000))
(assert (x1149 x54))
(assert (x1149 x791))
(assert (= (x764 x1270 x1236 x664 x1075 x873) (x495 (x764 x1270 x1236 x664 x1075 x873))))
(assert (x1149 x910))
(assert (=> (<= x10 10000) (= (x495 x10) 0)))
(assert (x384 x429))
(assert (x1149 x958))
(assert (=> (<= x188 10000) (= 0 (x495 x188))))
(assert (= x355 (=> (and (<= x537 18446744073709551614) (= (x290 (+ x820 32)) x594) (>= 5 x148) (= (x290 (+ x537 32)) x971) (= x966 (x290 (+ x610 32))) (= x532 (x1158 x594)) (= x848 (x290 (+ x966 32))) (= (x991 (- x504 x661)) x459) (= (x290 (+ x537 160)) x845) (= (x290 (+ x733 32)) x1) (<= x537 18446744073709551614) (or (>= x537 115792089237316195423570985008687907853269984665640564039457584007913129639777) (>= 18446744073709551455 x537)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x537) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x537)) (< x537 x845) (<= x537 18446744073709551615) (<= x532 1461501637330902918203684832716283019655932542975) (= x733 (x290 (+ 32 x661))) (= x820 (x290 (+ x1 32))) (= (x1158 x733) x1163) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x537) (<= x537 18446744073709551455)) (not (< x845 x537)) (= (x1158 x661) x148) (or (>= 2065879269284 x661) (>= x661 57896044618658097711785492504343953926634992332820282019728792003956564820517)) (<= x459 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x459 160) (>= 1461501637330902918203684832716283019655932542975 x1163) (= x610 (x290 (+ 32 x971))) (>= 18446744073709551615 x537) (= x1009 (not (> x454 1))) (= (x1158 x820) x999) (= x821 (x1158 x1))) (and (=> (= x310 x845) x1208) x1009))))
(assert (x1149 x691))
(assert (= x96 (or x598 x101)))
(assert (= (x780 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243)) x392))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1103 x1297 x1264 x757 x1287 x1039 x135 x1045)))
(assert (x1149 x957))
(assert (x1149 x1215))
(assert (= x1013 (x1231 (x764 x496 x75 x1013 x531 x198))))
(assert (= (=> (and (>= 18446744073709551613 x575) (= (x991 (- x504 x876)) x581) (= x954 (x290 (+ x43 x1195))) (= x287 (x290 (+ x29 31))) (= (x1158 x452) x904) (< x575 x984) (= (x290 (+ 32 x337)) x452) (= (* x38 128) x876) (= x779 (> x38 0)) (= x549 (+ 32 x984)) (>= 18446744073709551614 x575) (>= 18446744073709551615 x43) (= (x290 (+ x1213 x758)) x1215) (= x630 (+ 63 x920)) (or (<= x575 18446744073709551614) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x575)) (= x517 (+ 32 x450)) (>= x450 2) (not (> x575 x984)) (= x348 (x290 (+ 32 x796))) (= x1213 (x290 (+ x797 32))) (or (and (< x291 x263) (= (<= x291 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x291) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263))) (or (>= x575 115792089237316195423570985008687907853269984665640564039439137263839420088228) (<= x575 18446744073709551614)) (<= x575 18446744073709551614) (= (x1158 36) x877) (<= x575 18446744073709551613) (= x957 (x1158 356)) (= x695 (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x630)) (<= x904 1461501637330902918203684832716283019655932542975) (= (x1158 x797) x758) (= (x1158 x29) x43) (= x797 (x290 (+ x1276 x165))) (= x965 (x1158 x337)) (= x1195 (x290 (+ x29 32))) (= x308 (+ x517 32)) (= x1250 (x290 (+ 32 x619))) (>= 18446744073709551615 x38) (= x450 (+ x1293 x984)) (> x450 x984) (= (x290 (+ x582 x1126)) x29) (= (x1158 x1266) x1126) (>= 18446744073709551615 x450) (or (>= x797 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x797 18446746139588821027)) (or (and (> x54 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x54) (<= x766 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x766 x54))) (= x1276 (x1158 x1250)) (= (+ 32 x923 x440) x162) (= x119 (x290 (+ x758 x864))) (= x54 (x1158 132)) (= (* x38 32) x923) (= x984 (x290 (+ x695 x575))) (= (x290 (+ 32 x266)) x337) (= x440 (+ 224 x450)) (= (+ 63 x951) x30) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x575) (>= 18446744073709551614 x575)) (not (> x954 x263)) (<= x1126 18446744073709551615) (< x440 x162) (= x291 (x290 (+ x797 31))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x54) (<= x54 2065879269376)) (not (> x1215 x263)) (not (or (and (< x581 x348) (= (<= x581 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x581 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x348 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x920 (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x638)) (= x864 (x290 (+ 32 x575))) (= x1266 (x290 (+ x582 32))) (= (+ x43 x549) x1122) (= (x1158 x796) x38) (= (+ 31 x43) x534) (= x638 (+ x758 31)) (= (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x534) x951) (<= x1293 18446744073709551614) (or (>= x29 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x29)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263) (<= x287 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x263 x287)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263) (> x287 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904 x30) x1293) (= x796 (x290 (+ 36 x54))) (> x440 x450) (>= 18446744073709551614 x575) (>= 18446744073709551615 x1276) (= x1186 (+ 32 x440)) (>= 18446744073709551615 x758) (not (< x450 x984)) (>= x984 1) (<= x984 18446744073709551614) (<= x575 18446744073709551613)) (and (=> x779 x150) (=> (and (= x162 x172) (not x779)) x325))) x482))
(assert (> (x1026 x1270 x465 x1139 x59 x604 x550) 10000))
(assert (= (x254 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x138))
(assert (= 0 (x495 2065879269316)))
(assert (x1149 x530))
(assert (x1149 x1287))
(assert (=> (>= 10000 x508) (= 0 (x495 x508))))
(assert (= x985 (x1175 (x1114 x496 x78 x68 x985))))
(assert (= x461 (x655 (x1114 x935 x461 x448 x980))))
(assert (x384 x699))
(assert (x1149 x244))
(assert (= (x254 (x1103 x496 x934 x889 x566 x1077 x131 x114)) x496))
(assert (> (x1214 x138 x10) 10000))
(assert (= (and x471 x1035) x539))
(assert (x1149 x508))
(assert (x1149 x1085))
(assert (x1149 x1095))
(assert (x1149 x1246))
(assert (= (=> (and (= (= 0 x743) x1023) (or x1023 (and (not x1023) (= 0 x743)))) x735) x725))
(assert (x1149 x971))
(assert (x1149 x78))
(assert (x1149 x343))
(assert (not (x1029 (x764 x346 x988 x326 x1181 x1110))))
(assert (=> (<= x925 10000) (= (x495 x925) 0)))
(assert (x1149 x832))
(assert (not (x1029 (x764 x935 x1211 x430 x213 x553))))
(assert (x1149 x695))
(assert (= (x495 (x1103 x346 x674 x673 x397 x214 x1291 x52)) (x1103 x346 x674 x673 x397 x214 x1291 x52)))
(assert (=> (<= x803 10000) (= 0 (x495 x803))))
(assert (x1149 x763))
(assert (= x393 (or x792 x95)))
(assert (not (x1029 (x1026 x1297 x258 x56 x350 x396 x32))))
(assert (= (x780 (x764 x346 x988 x326 x1181 x1110)) x1110))
(assert (x1149 x53))
(assert (x384 x630))
(assert (x1149 x330))
(assert (= (x1231 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)) x730))
(assert (= (x1231 (x612 x9 x563 x116 x803 x180 x591 x507 x814)) x116))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (= (x495 (x1026 x138 x199 x584 x1223 x34 x684)) (x1026 x138 x199 x584 x1223 x34 x684)))
(assert (not (x1029 (x764 x138 x356 x1051 x842 x374))))
(assert (=> (<= x584 10000) (= 0 (x495 x584))))
(assert (=> (<= x461 10000) (= (x495 x461) 0)))
(assert (not (x1029 (x370 x9 x703 x900))))
(assert (= (x655 (x764 x1270 x1236 x664 x1075 x873)) x1236))
(assert (= x26 (x1231 (x1026 x935 x419 x26 x342 x878 x679))))
(assert (x1149 x914))
(assert (x1149 x622))
(assert (x1149 x793))
(assert (x1149 x726))
(assert (x1149 x848))
(assert (= (x495 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (x1149 x817))
(assert (> (x1114 x1270 x1071 x711 x271) 10000))
(assert (x1149 x585))
(assert (=> (<= x1236 10000) (= 0 (x495 x1236))))
(assert (x1149 x273))
(assert (x1149 x444))
(assert (=> (<= x980 10000) (= 0 (x495 x980))))
(assert (=> (>= 10000 x116) (= (x495 x116) 0)))
(assert (=> (>= 10000 x419) (= (x495 x419) 0)))
(assert (not (x1029 (x612 x935 x1154 x399 x1143 x1108 x478 x305 x262))))
(assert (x1149 x732))
(assert (x1149 x650))
(assert (= (x377 (x612 x138 x6 x202 x1003 x1260 x856 x1068 x509)) x856))
(assert (= x927 (x780 (x764 x9 x1092 x910 x1060 x927))))
(assert (=> (<= x900 10000) (= (x495 x900) 0)))
(assert (x1149 x536))
(assert (x1149 x1080))
(assert (x1149 x1209))
(assert (x1149 x727))
(assert (x1149 x604))
(assert (< (x764 x496 x75 x1013 x531 x198) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1149 x337))
(assert (=> (<= x135 10000) (= 0 (x495 x135))))
(assert (= x9 (x254 (x612 x9 x563 x116 x803 x180 x591 x507 x814))))
(assert (x1149 x1017))
(assert (=> (<= x131 10000) (= 0 (x495 x131))))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (= x840 (x1175 (x1114 x1297 x1246 x993 x840))))
(assert (x1149 x407))
(assert (x1149 x460))
(assert (x1149 x874))
(assert (= (x1175 (x1026 x1297 x258 x56 x350 x396 x32)) x350))
(assert (= 0 (x495 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (=> (<= x865 10000) (= 0 (x495 x865))))
(assert (x1149 x248))
(assert (x1149 x902))
(assert (x1149 x429))
(assert (= (x254 (x370 x1297 x1065 x623)) x1297))
(assert (= (x495 (x1214 x1297 x5)) (x1214 x1297 x5)))
(assert (x1149 x703))
(assert (=> (<= x448 10000) (= (x495 x448) 0)))
(assert (x1149 x348))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x1149 x473))
(assert (= (x655 (x764 x1297 x144 x307 x543 x491)) x144))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x612 x1270 x274 x730 x462 x1031 x1199 x484 x606)))
(assert (x1149 x606))
(assert (x1149 x664))
(assert (x1149 x434))
(assert (> (x1026 x1297 x258 x56 x350 x396 x32) 10000))
(assert (x667 x1097))
(assert (= (x495 (x1114 x935 x461 x448 x980)) (x1114 x935 x461 x448 x980)))
(assert (x1149 x59))
(assert (=> (>= 10000 x1108) (= 0 (x495 x1108))))
(assert (x1149 x1166))
(assert (x1149 x90))
(assert (x1149 x706))
(assert (x1149 x287))
(assert (= (x655 (x370 x1270 x404 x1002)) x404))
(assert (= x346 (x254 (x370 x346 x1201 x1107))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x1270 x404 x1002)))
(assert (x1029 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1149 x1183))
(assert (= (x1231 (x612 x346 x1156 x530 x1119 x392 x1191 x28 x1243)) x530))
(assert (=> (>= 10000 x1181) (= 0 (x495 x1181))))
(assert (> (x1103 x496 x934 x889 x566 x1077 x131 x114) 10000))
(assert (x1029 2065879269444))
(assert (x1149 x1206))
(assert (= (x1214 x346 x57) (x495 (x1214 x346 x57))))
(assert (=> (>= 10000 x298) (= (x495 x298) 0)))
(assert (x1149 x462))
(assert (x1149 x1193))
(assert (x1149 x1150))
(assert (= (x377 (x1026 x1297 x258 x56 x350 x396 x32)) x32))
(assert (x1149 x1066))
(assert (x1149 x710))
(assert (x1149 x519))
(assert (x1149 x521))
(assert (x1149 x93))
(assert (x596 x837))
(assert (= (x1175 (x1114 x935 x461 x448 x980)) x980))
(assert (x1149 x412))
(assert (x1149 x1012))
(assert (x1149 x198))
(assert (=> (>= 10000 x509) (= 0 (x495 x509))))
(assert (< (x1114 x1297 x1246 x993 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1029 57896044618658097711785492504343953926634992332820282019728792003956564820517))
(assert (= (or x678 x1099) x646))
(assert (x1149 x499))
(assert (= (or (and x1147 (not x579)) x453) x1290))
(assert (not (x1029 (x747 0))))
(assert (x1149 x731))
(assert (= x52 (x1050 (x1103 x346 x674 x673 x397 x214 x1291 x52))))
(assert (x1149 x954))
(assert (=> (>= 10000 x390) (= (x495 x390) 0)))
(assert (x1149 x1109))
(assert (x1149 x804))
(assert (=> (>= 10000 x761) (= (x495 x761) 0)))
(assert (x1149 x897))
(assert (x1149 x321))
(assert (= (x1114 x1270 x1071 x711 x271) (x495 (x1114 x1270 x1071 x711 x271))))
(check-sat)
(exit)
