(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x4088 (Int) Int)
(declare-fun x2188 () Int)
(declare-fun x1987 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x3929 (Int) Int)
(declare-fun x2032 () Int)
(declare-fun x1524 () Int)
(declare-fun x4304 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1203 () Bool)
(declare-fun x152 () Int)
(declare-fun x1699 () Int)
(declare-fun x3931 () Int)
(declare-fun x1640 () Bool)
(declare-fun x2013 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x3459 () Bool)
(declare-fun x430 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x2811 () Int)
(declare-fun x3187 () Bool)
(declare-fun x2578 () Int)
(declare-fun x587 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x157 () Bool)
(declare-fun x193 () Int)
(declare-fun x3258 () Bool)
(declare-fun x2125 () Int)
(declare-fun x1751 () Int)
(declare-fun x2929 () Int)
(declare-fun x1470 () Int)
(declare-fun x235 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x1401 () Int)
(declare-fun x2866 () Int)
(declare-fun x4046 () Int)
(declare-fun x1618 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x4356 () Int)
(declare-fun x3599 () Int)
(declare-fun x3045 () Int)
(declare-fun x3906 () Int)
(declare-fun x4383 () Bool)
(declare-fun x2431 () Int)
(declare-fun x1024 () Bool)
(declare-fun x864 () Int)
(declare-fun x2199 () Int)
(declare-fun x2451 () Bool)
(declare-fun x858 () Bool)
(declare-fun x4140 () Int)
(declare-fun x1952 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x3214 () Int)
(declare-fun x939 () Bool)
(declare-fun x2242 () Int)
(declare-fun x2402 () Int)
(declare-fun x3402 () Int)
(declare-fun x2691 () Int)
(declare-fun x1089 () Bool)
(declare-fun x774 () Bool)
(declare-fun x3560 () Bool)
(declare-fun x2358 () Int)
(declare-fun x3854 () Bool)
(declare-fun x4117 () Int)
(declare-fun x180 () Int)
(declare-fun x2898 () Int)
(declare-fun x4180 () Int)
(declare-fun x2758 (Int) Int)
(declare-fun x1517 () Int)
(declare-fun x2920 () Int)
(declare-fun x129 () Bool)
(declare-fun x1582 () Int)
(declare-fun x743 () Bool)
(declare-fun x288 () Bool)
(declare-fun x4061 () Int)
(declare-fun x2696 () Int)
(declare-fun x355 () Int)
(declare-fun x2378 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x617 () Int)
(declare-fun x4087 () Int)
(declare-fun x885 () Int)
(declare-fun x854 () Bool)
(declare-fun x990 () Int)
(declare-fun x350 () Int)
(declare-fun x15 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x3657 () Int)
(declare-fun x2657 () Bool)
(declare-fun x3893 () Int)
(declare-fun x4241 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2152 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1878 () Int)
(declare-fun x1356 () Bool)
(declare-fun x2596 () Int)
(declare-fun x2589 () Bool)
(declare-fun x301 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x621 () Int)
(declare-fun x1597 () Int)
(declare-fun x450 () Bool)
(declare-fun x1347 () Int)
(declare-fun x3475 () Int)
(declare-fun x1442 () Int)
(declare-fun x2563 () Bool)
(declare-fun x470 () Bool)
(declare-fun x3896 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x500 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x3065 () Int)
(declare-fun x3058 () Int)
(declare-fun x3085 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x628 () Int)
(declare-fun x614 () Bool)
(declare-fun x2961 () Int)
(declare-fun x3926 () Int)
(declare-fun x2318 () Int)
(declare-fun x3817 () Bool)
(declare-fun x4364 () Int)
(declare-fun x153 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x209 () Int)
(declare-fun x833 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1467 () Int)
(declare-fun x255 () Int)
(declare-fun x2010 () Int)
(declare-fun x4371 () Bool)
(declare-fun x4160 () Int)
(declare-fun x4038 () Int)
(declare-fun x1124 () Bool)
(declare-fun x672 (Int) Int)
(declare-fun x1583 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x425 () Bool)
(declare-fun x2971 () Int)
(declare-fun x1161 () Bool)
(declare-fun x805 () Bool)
(declare-fun x264 () Int)
(declare-fun x3129 () Int)
(declare-fun x1662 () Int)
(declare-fun x2297 () Bool)
(declare-fun x2449 () Int)
(declare-fun x2193 () Int)
(declare-fun x838 () Int)
(declare-fun x2543 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x417 () Int)
(declare-fun x3691 () Int)
(declare-fun x627 () Bool)
(declare-fun x872 () Int)
(declare-fun x3431 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x1912 () Int)
(declare-fun x4340 () Int)
(declare-fun x2535 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x1212 () Int)
(declare-fun x252 () Int)
(declare-fun x3358 () Bool)
(declare-fun x2570 () Int)
(declare-fun x2976 () Bool)
(declare-fun x2293 () Int)
(declare-fun x268 () Int)
(declare-fun x2656 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1806 () Bool)
(declare-fun x2862 () Int)
(declare-fun x3885 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x3064 () Int)
(declare-fun x3816 () Bool)
(declare-fun x634 () Int)
(declare-fun x1160 () Int)
(declare-fun x4056 () Int)
(declare-fun x4261 (Int) Int)
(declare-fun x2403 () Bool)
(declare-fun x4022 () Int)
(declare-fun x2788 () Bool)
(declare-fun x4030 () Int)
(declare-fun x1268 () Int)
(declare-fun x1080 () Int)
(declare-fun x1627 () Bool)
(declare-fun x930 () Int)
(declare-fun x416 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x2309 (Int) Int)
(declare-fun x3304 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x334 () Int)
(declare-fun x3773 () Int)
(declare-fun x1876 () Int)
(declare-fun x2679 () Int)
(declare-fun x998 (Int Int Int Int) Int)
(declare-fun x227 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x303 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1658 () Bool)
(declare-fun x4259 () Int)
(declare-fun x3720 () Bool)
(declare-fun x1759 () Int)
(declare-fun x1682 () Int)
(declare-fun x2026 () Int)
(declare-fun x2414 () Int)
(declare-fun x1762 () Int)
(declare-fun x1529 () Bool)
(declare-fun x589 () Int)
(declare-fun x1646 () Bool)
(declare-fun x615 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x3569 () Int)
(declare-fun x4036 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x4111 () Int)
(declare-fun x2049 () Int)
(declare-fun x608 () Int)
(declare-fun x3453 () Bool)
(declare-fun x131 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x3528 () Int)
(declare-fun x1560 () Bool)
(declare-fun x313 () Int)
(declare-fun x1695 () Int)
(declare-fun x2822 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x3953 () Int)
(declare-fun x798 () Int)
(declare-fun x2237 () Int)
(declare-fun x3345 () Int)
(declare-fun x1601 (Int) Int)
(declare-fun x2462 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x552 () Bool)
(declare-fun x2306 () Int)
(declare-fun x1051 () Int)
(declare-fun x3312 () Bool)
(declare-fun x705 () Bool)
(declare-fun x3047 () Int)
(declare-fun x1074 () Bool)
(declare-fun x290 () Int)
(declare-fun x2584 () Int)
(declare-fun x4296 () Int)
(declare-fun x884 () Bool)
(declare-fun x3627 () Int)
(declare-fun x4213 () Int)
(declare-fun x2329 () Bool)
(declare-fun x74 () Int)
(declare-fun x1894 () Int)
(declare-fun x4016 () Bool)
(declare-fun x2585 () Int)
(declare-fun x584 () Int)
(declare-fun x386 (Int) Int)
(declare-fun x4011 () Int)
(declare-fun x1665 () Bool)
(declare-fun x1648 () Int)
(declare-fun x2144 () Int)
(declare-fun x4065 () Int)
(declare-fun x1785 () Int)
(declare-fun x1092 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x3813 () Int)
(declare-fun x4085 () Int)
(declare-fun x2779 () Bool)
(declare-fun x3493 () Int)
(declare-fun x1073 () Int)
(declare-fun x857 () Int)
(declare-fun x379 () Int)
(declare-fun x2888 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x791 () Bool)
(declare-fun x1688 () Int)
(declare-fun x244 () Bool)
(declare-fun x144 () Int)
(declare-fun x3406 () Bool)
(declare-fun x495 () Bool)
(declare-fun x275 () Int)
(declare-fun x2109 () Int)
(declare-fun x1936 () Int)
(declare-fun x841 () Int)
(declare-fun x2461 () Int)
(declare-fun x2534 () Bool)
(declare-fun x3800 () Bool)
(declare-fun x772 () Bool)
(declare-fun x934 () Int)
(declare-fun x3115 () Int)
(declare-fun x4200 () Int)
(declare-fun x1202 () Int)
(declare-fun x1346 () Int)
(declare-fun x4147 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x381 () Int)
(declare-fun x688 () Int)
(declare-fun x593 () Int)
(declare-fun x3332 () Int)
(declare-fun x2296 () Int)
(declare-fun x2055 () Int)
(declare-fun x3288 () Int)
(declare-fun x1784 () Int)
(declare-fun x909 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x200 () Int)
(declare-fun x3890 () Bool)
(declare-fun x4316 () Int)
(declare-fun x3175 () Int)
(declare-fun x176 () Int)
(declare-fun x3827 () Int)
(declare-fun x162 () Bool)
(declare-fun x517 () Int)
(declare-fun x1287 () Int)
(declare-fun x916 () Bool)
(declare-fun x3238 () Int)
(declare-fun x1167 () Int)
(declare-fun x4298 () Bool)
(declare-fun x3376 () Int)
(declare-fun x1924 () Bool)
(declare-fun x560 () Int)
(declare-fun x1133 () Int)
(declare-fun x711 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x3427 () Int)
(declare-fun x1292 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x1988 () Int)
(declare-fun x2064 () Bool)
(declare-fun x1075 () Int)
(declare-fun x325 () Bool)
(declare-fun x3392 () Int)
(declare-fun x3912 () Int)
(declare-fun x3098 () Bool)
(declare-fun x3654 () Bool)
(declare-fun x2493 () Int)
(declare-fun x753 () Int)
(declare-fun x3716 () Int)
(declare-fun x2292 () Bool)
(declare-fun x3867 () Int)
(declare-fun x4381 () Bool)
(declare-fun x4080 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x586 (Int) Int)
(declare-fun x4127 () Bool)
(declare-fun x1363 () Int)
(declare-fun x1012 () Int)
(declare-fun x811 () Int)
(declare-fun x4385 () Int)
(declare-fun x788 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x2224 () Int)
(declare-fun x3679 () Int)
(declare-fun x3314 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x3645 () Int)
(declare-fun x12 (Int) Int)
(declare-fun x1719 () Int)
(declare-fun x4247 () Int)
(declare-fun x607 () Int)
(declare-fun x3924 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x3014 () Int)
(declare-fun x2300 () Int)
(declare-fun x1728 () Int)
(declare-fun x141 () Bool)
(declare-fun x20 () Bool)
(declare-fun x2073 () Int)
(declare-fun x1893 () Bool)
(declare-fun x4069 () Int)
(declare-fun x1827 () Int)
(declare-fun x4300 () Int)
(declare-fun x1841 () Bool)
(declare-fun x4368 () Int)
(declare-fun x4171 () Int)
(declare-fun x4119 () Int)
(declare-fun x3491 () Int)
(declare-fun x1941 () Int)
(declare-fun x3998 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x3758 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2252 () Int)
(declare-fun x2895 () Bool)
(declare-fun x4276 () Int)
(declare-fun x4313 () Bool)
(declare-fun x3081 () Int)
(declare-fun x3914 () Int)
(declare-fun x2273 () Int)
(declare-fun x3224 () Bool)
(declare-fun x3163 () Int)
(declare-fun x433 () Bool)
(declare-fun x424 () Int)
(declare-fun x3686 () Int)
(declare-fun x222 () Int)
(declare-fun x3004 (Int) Int)
(declare-fun x3808 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1725 () Int)
(declare-fun x1152 () Int)
(declare-fun x3463 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1150 () Bool)
(declare-fun x62 () Bool)
(declare-fun x3805 () Int)
(declare-fun x3566 () Int)
(declare-fun x1634 () Int)
(declare-fun x2843 () Int)
(declare-fun x3485 () Int)
(declare-fun x1500 () Bool)
(declare-fun x2075 () Int)
(declare-fun x1744 () Bool)
(declare-fun x4191 (Int Int) Int)
(declare-fun x3751 () Bool)
(declare-fun x1216 () Int)
(declare-fun x423 () Bool)
(declare-fun x2136 () Int)
(declare-fun x3835 (Int) Int)
(declare-fun x1554 () Int)
(declare-fun x2472 (Int) Int)
(declare-fun x1289 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2607 () Int)
(declare-fun x2638 () Int)
(declare-fun x4165 () Int)
(declare-fun x210 () Int)
(declare-fun x2155 () Int)
(declare-fun x2979 () Bool)
(declare-fun x3166 () Int)
(declare-fun x2515 () Int)
(declare-fun x4168 () Int)
(declare-fun x2817 () Int)
(declare-fun x1780 () Bool)
(declare-fun x197 () Int)
(declare-fun x2145 () Int)
(declare-fun x404 () Int)
(declare-fun x1348 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x2140 () Int)
(declare-fun x2443 (Int) Int)
(declare-fun x1264 () Bool)
(declare-fun x2672 () Int)
(declare-fun x1610 () Bool)
(declare-fun x4144 () Int)
(declare-fun x768 () Int)
(declare-fun x2650 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x1250 () Int)
(declare-fun x2165 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x1666 () Int)
(declare-fun x128 () Int)
(declare-fun x1338 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x1219 () Int)
(declare-fun x869 () Int)
(declare-fun x3806 () Int)
(declare-fun x3111 () Int)
(declare-fun x1321 () Bool)
(declare-fun x3294 () Int)
(declare-fun x4374 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x3506 () Int)
(declare-fun x132 () Int)
(declare-fun x668 () Int)
(declare-fun x2039 () Int)
(declare-fun x3754 () Bool)
(declare-fun x3338 () Int)
(declare-fun x3667 () Int)
(declare-fun x3160 () Int)
(declare-fun x2853 () Int)
(declare-fun x1280 () Int)
(declare-fun x1411 () Int)
(declare-fun x3739 () Bool)
(declare-fun x1879 () Int)
(declare-fun x431 () Int)
(declare-fun x2505 () Int)
(declare-fun x660 () Int)
(declare-fun x2283 () Int)
(declare-fun x4086 () Int)
(declare-fun x4070 () Bool)
(declare-fun x1240 () Int)
(declare-fun x2626 () Int)
(declare-fun x1474 () Int)
(declare-fun x1091 () Int)
(declare-fun x1593 () Int)
(declare-fun x515 () Bool)
(declare-fun x549 () Bool)
(declare-fun x2805 () Int)
(declare-fun x3443 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x3823 () Int)
(declare-fun x3833 () Int)
(declare-fun x894 () Int)
(declare-fun x2376 () Int)
(declare-fun x1407 () Bool)
(declare-fun x2388 () Int)
(declare-fun x1260 () Int)
(declare-fun x434 () Bool)
(declare-fun x4232 () Int)
(declare-fun x1341 () Int)
(declare-fun x4095 () Int)
(declare-fun x2305 () Int)
(declare-fun x886 () Int)
(declare-fun x1816 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x323 () Bool)
(declare-fun x572 () Int)
(declare-fun x3923 () Int)
(declare-fun x330 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x3487 () Int)
(declare-fun x4268 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x1549 () Int)
(declare-fun x638 () Int)
(declare-fun x2600 () Bool)
(declare-fun x813 () Int)
(declare-fun x550 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x904 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x1645 () Int)
(declare-fun x766 () Bool)
(declare-fun x570 () Int)
(declare-fun x1543 () Int)
(declare-fun x3571 () Int)
(declare-fun x603 () Int)
(declare-fun x3801 () Int)
(declare-fun x1449 () Bool)
(declare-fun x3287 () Int)
(declare-fun x2601 () Int)
(declare-fun x3587 () Int)
(declare-fun x3373 () Int)
(declare-fun x465 () Int)
(declare-fun x2526 () Int)
(declare-fun x3167 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x1297 () Int)
(declare-fun x2191 () Bool)
(declare-fun x3932 () Int)
(declare-fun x1406 () Bool)
(declare-fun x955 () Int)
(declare-fun x3568 () Int)
(declare-fun x4073 () Int)
(declare-fun x2468 () Int)
(declare-fun x3076 () Bool)
(declare-fun x3396 () Int)
(declare-fun x195 (Int) Int)
(declare-fun x2173 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x432 () Int)
(declare-fun x956 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x1339 () Int)
(declare-fun x421 () Int)
(declare-fun x3274 () Int)
(declare-fun x578 () Int)
(declare-fun x2697 () Int)
(declare-fun x2100 () Bool)
(declare-fun x3091 () Int)
(declare-fun x2848 () Int)
(declare-fun x3321 () Int)
(declare-fun x3150 () Bool)
(declare-fun x919 (Int) Int)
(declare-fun x3193 () Bool)
(declare-fun x1800 () Int)
(declare-fun x3357 () Int)
(declare-fun x218 () Int)
(declare-fun x3296 () Int)
(declare-fun x297 () Int)
(declare-fun x3105 () Int)
(declare-fun x1419 () Int)
(declare-fun x1670 () Int)
(declare-fun x2726 () Int)
(declare-fun x1804 () Int)
(declare-fun x501 () Int)
(declare-fun x1337 () Bool)
(declare-fun x3552 () Bool)
(declare-fun x4207 () Bool)
(declare-fun x2597 () Int)
(declare-fun x3375 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x3962 () Int)
(declare-fun x567 () Int)
(declare-fun x476 () Int)
(declare-fun x1173 () Bool)
(declare-fun x3316 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x1441 () Int)
(declare-fun x2910 () Bool)
(declare-fun x3502 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x2285 () Int)
(declare-fun x3309 () Int)
(declare-fun x2595 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x3672 () Int)
(declare-fun x145 () Bool)
(declare-fun x3536 () Int)
(declare-fun x3687 () Int)
(declare-fun x2225 (Int) Int)
(declare-fun x147 () Bool)
(declare-fun x2359 () Int)
(declare-fun x2360 () Bool)
(declare-fun x954 () Int)
(declare-fun x796 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x2043 () Int)
(declare-fun x2834 (Int) Int)
(declare-fun x3958 () Int)
(declare-fun x3356 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1015 () Int)
(declare-fun x3050 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x4039 () Int)
(declare-fun x2090 () Bool)
(declare-fun x3652 () Int)
(declare-fun x612 (Int) Int)
(declare-fun x1198 () Int)
(declare-fun x544 () Bool)
(declare-fun x1019 (Int) Int)
(declare-fun x1966 () Int)
(declare-fun x345 () Int)
(declare-fun x1058 () Int)
(declare-fun x2874 () Int)
(declare-fun x957 () Bool)
(declare-fun x1984 () Int)
(declare-fun x2094 () Bool)
(declare-fun x486 () Bool)
(declare-fun x3630 () Int)
(declare-fun x2633 () Int)
(declare-fun x2865 () Int)
(declare-fun x183 () Bool)
(declare-fun x3387 (Int) Bool)
(declare-fun x2115 () Int)
(declare-fun x2687 () Int)
(declare-fun x3403 () Bool)
(declare-fun x2951 () Int)
(declare-fun x2710 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x208 () Int)
(declare-fun x579 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x3260 () Int)
(declare-fun x254 () Bool)
(declare-fun x1008 () Int)
(declare-fun x1003 () Int)
(declare-fun x2611 () Int)
(declare-fun x2573 () Bool)
(declare-fun x3141 () Int)
(declare-fun x115 () Int)
(declare-fun x1526 () Int)
(declare-fun x65 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1049 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x1188 () Int)
(declare-fun x3991 () Int)
(declare-fun x1469 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x107 () Int)
(declare-fun x2548 () Int)
(declare-fun x3591 () Int)
(declare-fun x3969 () Int)
(declare-fun x3201 () Bool)
(declare-fun x251 () Int)
(declare-fun x175 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x173 () Int)
(declare-fun x3056 () Bool)
(declare-fun x3078 () Int)
(declare-fun x3154 () Int)
(declare-fun x3254 (Int) Int)
(declare-fun x3790 () Int)
(declare-fun x2760 () Bool)
(declare-fun x2161 () Int)
(declare-fun x3714 () Int)
(declare-fun x1567 () Int)
(declare-fun x1579 () Int)
(declare-fun x97 () Int)
(declare-fun x1561 () Int)
(declare-fun x343 () Int)
(declare-fun x3574 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x106 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x230 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x3634 () Int)
(declare-fun x2102 () Int)
(declare-fun x1010 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x2800 () Int)
(declare-fun x2519 () Int)
(declare-fun x39 () Int)
(declare-fun x2947 () Int)
(declare-fun x2132 () Int)
(declare-fun x1681 () Int)
(declare-fun x3508 () Int)
(declare-fun x3346 () Bool)
(declare-fun x3460 () Int)
(declare-fun x2962 () Bool)
(declare-fun x3393 () Int)
(declare-fun x3791 () Bool)
(declare-fun x2814 () Int)
(declare-fun x3467 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x1516 () Int)
(declare-fun x1755 () Bool)
(declare-fun x725 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x4380 () Int)
(declare-fun x1444 () Int)
(declare-fun x3077 () Int)
(declare-fun x3749 () Int)
(declare-fun x863 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x3768 () Int)
(declare-fun x600 () Bool)
(declare-fun x678 () Int)
(declare-fun x1237 () Bool)
(declare-fun x258 () Int)
(declare-fun x3275 () Int)
(declare-fun x3828 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x2669 () Bool)
(declare-fun x3191 () Int)
(declare-fun x4377 () Bool)
(declare-fun x3882 () Int)
(declare-fun x3726 () Bool)
(declare-fun x684 () Int)
(declare-fun x3839 () Int)
(declare-fun x3479 () Int)
(declare-fun x2900 (Int) Int)
(declare-fun x2556 () Int)
(declare-fun x602 () Int)
(declare-fun x361 () Int)
(declare-fun x3440 () Int)
(declare-fun x1106 () Int)
(declare-fun x3980 () Int)
(declare-fun x4105 () Bool)
(declare-fun x1265 () Int)
(declare-fun x1907 () Int)
(declare-fun x247 () Bool)
(declare-fun x1261 () Int)
(declare-fun x2830 () Int)
(declare-fun x3101 (Int) Int)
(declare-fun x1886 () Bool)
(declare-fun x1047 () Int)
(declare-fun x3441 () Bool)
(declare-fun x1801 () Int)
(declare-fun x2228 () Bool)
(declare-fun x146 () Int)
(declare-fun x1069 () Int)
(declare-fun x3709 () Bool)
(declare-fun x654 () Int)
(declare-fun x3213 () Bool)
(declare-fun x4076 () Int)
(declare-fun x3719 () Bool)
(declare-fun x2006 () Int)
(declare-fun x2719 () Int)
(declare-fun x644 () Int)
(declare-fun x1929 () Int)
(declare-fun x296 (Int) Int)
(declare-fun x4285 () Int)
(declare-fun x2496 (Int) Int)
(declare-fun x626 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1199 () Int)
(declare-fun x3526 () Int)
(declare-fun x1778 () Int)
(declare-fun x4206 () Int)
(declare-fun x1490 () Bool)
(declare-fun x3707 () Int)
(declare-fun x1831 () Int)
(declare-fun x3104 () Int)
(declare-fun x29 () Int)
(declare-fun x4323 () Int)
(declare-fun x563 () Int)
(declare-fun x3516 () Bool)
(declare-fun x1518 () Int)
(declare-fun x1340 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x3466 () Int)
(declare-fun x687 () Int)
(declare-fun x2904 () Int)
(declare-fun x3390 () Bool)
(declare-fun x3804 () Bool)
(declare-fun x462 () Int)
(declare-fun x1913 () Int)
(declare-fun x3682 () Int)
(declare-fun x1868 () Bool)
(declare-fun x2876 () Int)
(declare-fun x905 () Bool)
(declare-fun x3548 () Int)
(declare-fun x1973 () Bool)
(declare-fun x2708 () Bool)
(declare-fun x734 () Int)
(declare-fun x392 () Int)
(declare-fun x1223 () Int)
(declare-fun x23 () Int)
(declare-fun x3683 () Int)
(declare-fun x2993 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x4009 () Int)
(declare-fun x823 () Int)
(declare-fun x1892 () Int)
(declare-fun x671 () Bool)
(declare-fun x3580 () Int)
(declare-fun x224 () Int)
(declare-fun x1418 () Int)
(declare-fun x1620 () Int)
(declare-fun x513 () Int)
(declare-fun x2559 () Int)
(declare-fun x1100 () Bool)
(declare-fun x192 () Int)
(declare-fun x1134 () Bool)
(declare-fun x1842 () Int)
(declare-fun x3628 () Int)
(declare-fun x2022 () Bool)
(declare-fun x4376 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1055 () Int)
(declare-fun x573 () Int)
(declare-fun x405 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x3543 () Int)
(declare-fun x428 () Int)
(declare-fun x1857 () Int)
(declare-fun x968 () Bool)
(declare-fun x2931 () Bool)
(declare-fun x1392 () Int)
(declare-fun x3262 () Int)
(declare-fun x1386 () Int)
(declare-fun x103 () Bool)
(declare-fun x4178 () Int)
(declare-fun x1302 () Int)
(declare-fun x3943 () Bool)
(declare-fun x4203 () Int)
(declare-fun x2103 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x2447 () Int)
(declare-fun x1361 () Int)
(declare-fun x3337 () Bool)
(declare-fun x3075 () Int)
(declare-fun x120 () Bool)
(declare-fun x2863 () Int)
(declare-fun x2902 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x3637 () Int)
(declare-fun x2000 () Int)
(declare-fun x1395 () Bool)
(declare-fun x3989 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1034 () Int)
(declare-fun x738 () Int)
(declare-fun x3537 () Int)
(declare-fun x4176 () Bool)
(declare-fun x1319 () Int)
(declare-fun x3713 () Int)
(declare-fun x642 () Int)
(declare-fun x1536 () Int)
(declare-fun x1186 () Bool)
(declare-fun x3689 () Int)
(declare-fun x3265 () Bool)
(declare-fun x317 () Int)
(declare-fun x3009 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1733 () Int)
(declare-fun x3340 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x993 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x1854 (Int) Int)
(declare-fun x4351 () Int)
(declare-fun x391 () Int)
(declare-fun x782 () Int)
(declare-fun x2363 (Int) Int)
(declare-fun x1001 () Int)
(declare-fun x4331 () Int)
(declare-fun x112 () Bool)
(declare-fun x913 () Int)
(declare-fun x455 () Int)
(declare-fun x1505 () Int)
(declare-fun x2832 () Bool)
(declare-fun x3678 () Int)
(declare-fun x4172 () Bool)
(declare-fun x1196 () Int)
(declare-fun x2527 () Bool)
(declare-fun x558 () Bool)
(declare-fun x3606 () Int)
(declare-fun x4359 () Int)
(declare-fun x1259 (Int) Int)
(declare-fun x1326 () Int)
(declare-fun x3871 () Int)
(declare-fun x3604 () Int)
(declare-fun x2837 () Bool)
(declare-fun x3365 () Int)
(declare-fun x8 () Int)
(declare-fun x2042 () Int)
(declare-fun x216 () Bool)
(declare-fun x2645 () Int)
(declare-fun x3370 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x1451 () Int)
(declare-fun x523 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x474 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1946 (Int) Int)
(declare-fun x4161 () Int)
(declare-fun x2690 () Bool)
(declare-fun x3626 () Int)
(declare-fun x1305 () Int)
(declare-fun x3766 () Int)
(declare-fun x3015 () Int)
(declare-fun x3289 () Bool)
(declare-fun x1137 () Int)
(declare-fun x2458 () Int)
(declare-fun x1822 () Int)
(declare-fun x3051 () Int)
(declare-fun x2089 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x203 () Bool)
(declare-fun x1262 () Int)
(declare-fun x2344 () Int)
(declare-fun x3915 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1805 () Bool)
(declare-fun x1408 () Int)
(declare-fun x2479 () Bool)
(declare-fun x1098 () Int)
(declare-fun x1818 () Int)
(declare-fun x2051 () Int)
(declare-fun x457 () Bool)
(declare-fun x367 () Bool)
(declare-fun x650 () Int)
(declare-fun x1711 () Int)
(declare-fun x2048 () Bool)
(declare-fun x387 () Int)
(declare-fun x1005 () Int)
(declare-fun x2798 () Bool)
(declare-fun x1448 () Int)
(declare-fun x440 () Int)
(declare-fun x741 () Int)
(declare-fun x561 () Int)
(declare-fun x4295 () Int)
(declare-fun x3927 () Int)
(declare-fun x2214 () Int)
(declare-fun x3116 () Int)
(declare-fun x2312 () Int)
(declare-fun x1159 () Int)
(declare-fun x4305 () Int)
(declare-fun x94 () Int)
(declare-fun x3905 () Int)
(declare-fun x4260 () Int)
(declare-fun x2618 (Int) Int)
(declare-fun x3945 (Int) Int)
(declare-fun x866 (Int) Int)
(declare-fun x1249 (Int) Int)
(declare-fun x3055 () Int)
(declare-fun x3043 () Int)
(declare-fun x2241 () Int)
(declare-fun x3629 () Bool)
(declare-fun x48 () Int)
(declare-fun x1514 () Int)
(declare-fun x3596 () Bool)
(declare-fun x648 () Int)
(declare-fun x3424 () Int)
(declare-fun x4231 () Int)
(declare-fun x3071 () Int)
(declare-fun x2314 () Bool)
(declare-fun x311 () Bool)
(declare-fun x3164 () Int)
(declare-fun x1782 (Int) Int)
(declare-fun x82 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x3870 () Int)
(declare-fun x2759 () Int)
(declare-fun x4048 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1121 () Bool)
(declare-fun x2281 () Int)
(declare-fun x1631 () Bool)
(declare-fun x760 () Int)
(declare-fun x1157 () Bool)
(declare-fun x3694 () Bool)
(declare-fun x3435 () Int)
(declare-fun x2420 () Bool)
(declare-fun x655 () Bool)
(declare-fun x329 () Bool)
(declare-fun x380 () Int)
(declare-fun x3553 () Bool)
(declare-fun x2179 () Int)
(declare-fun x873 (Int) Int)
(declare-fun x2177 () Bool)
(declare-fun x3350 () Int)
(declare-fun x4246 () Bool)
(declare-fun x461 () Bool)
(declare-fun x3559 () Int)
(declare-fun x1509 () Bool)
(declare-fun x3910 () Int)
(declare-fun x1162 () Int)
(declare-fun x220 () Int)
(declare-fun x1938 () Int)
(declare-fun x2780 () Int)
(declare-fun x3664 () Int)
(declare-fun x2218 () Int)
(declare-fun x929 () Bool)
(declare-fun x2222 () Int)
(declare-fun x590 () Bool)
(declare-fun x718 () Int)
(declare-fun x1678 () Int)
(declare-fun x3864 () Int)
(declare-fun x910 () Int)
(declare-fun x2181 () Int)
(declare-fun x3415 () Int)
(declare-fun x427 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x2423 () Int)
(declare-fun x748 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1369 () Int)
(declare-fun x2019 () Int)
(declare-fun x3862 () Int)
(declare-fun x3320 () Int)
(declare-fun x4302 () Bool)
(declare-fun x3873 () Int)
(declare-fun x92 () Int)
(declare-fun x744 () Int)
(declare-fun x4269 () Bool)
(declare-fun x2262 () Int)
(declare-fun x133 () Int)
(declare-fun x1891 () Int)
(declare-fun x804 () Int)
(declare-fun x4270 () Int)
(declare-fun x1815 () Int)
(declare-fun x632 () Int)
(declare-fun x3704 () Int)
(declare-fun x1847 () Int)
(declare-fun x2446 () Int)
(declare-fun x1531 () Bool)
(declare-fun x2756 () Int)
(declare-fun x269 () Bool)
(declare-fun x3484 () Int)
(declare-fun x1463 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x3196 () Int)
(declare-fun x3582 () Int)
(declare-fun x2852 () Int)
(declare-fun x143 () Bool)
(declare-fun x1756 () Int)
(declare-fun x2739 (Int) Int)
(declare-fun x3515 () Int)
(declare-fun x2192 () Bool)
(declare-fun x1997 () Int)
(declare-fun x3497 () Int)
(declare-fun x4179 () Bool)
(declare-fun x1793 () Int)
(declare-fun x2665 () Int)
(declare-fun x3096 () Int)
(declare-fun x1548 () Int)
(declare-fun x1433 () Int)
(declare-fun x3468 () Bool)
(declare-fun x4031 () Int)
(declare-fun x1117 () Int)
(declare-fun x2990 () Bool)
(declare-fun x2200 () Int)
(declare-fun x315 () Int)
(declare-fun x3744 () Int)
(declare-fun x373 () Int)
(declare-fun x1428 () Int)
(declare-fun x2785 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1834 () Int)
(declare-fun x3876 (Int Int) Int)
(declare-fun x4204 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x3847 (Int) Int)
(declare-fun x109 () Int)
(declare-fun x279 () Int)
(declare-fun x3897 () Int)
(declare-fun x1832 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1362 () Int)
(declare-fun x4367 () Int)
(declare-fun x1761 () Int)
(declare-fun x43 () Int)
(declare-fun x1969 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x665 () Int)
(declare-fun x1126 () Int)
(declare-fun x3695 () Int)
(declare-fun x965 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x1153 () Int)
(declare-fun x2987 () Bool)
(declare-fun x1105 () Int)
(declare-fun x717 () Bool)
(declare-fun x4251 () Int)
(declare-fun x1379 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1823 () Int)
(declare-fun x3245 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1981 () Int)
(declare-fun x149 () Bool)
(declare-fun x1794 () Int)
(declare-fun x3251 (Int) Int)
(declare-fun x266 () Int)
(declare-fun x1211 () Int)
(declare-fun x3888 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1497 () Int)
(declare-fun x2828 () Bool)
(declare-fun x1829 () Int)
(declare-fun x4017 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x2838 () Int)
(declare-fun x1713 () Bool)
(declare-fun x260 () Bool)
(declare-fun x2438 () Int)
(declare-fun x1735 () Bool)
(declare-fun x207 () Int)
(declare-fun x185 () Bool)
(declare-fun x991 () Int)
(declare-fun x830 () Int)
(declare-fun x1638 () Int)
(declare-fun x1763 () Bool)
(declare-fun x3334 () Int)
(declare-fun x2616 () Bool)
(declare-fun x2500 () Int)
(declare-fun x673 () Int)
(declare-fun x2492 () Bool)
(declare-fun x3993 () Int)
(declare-fun x1676 () Int)
(declare-fun x3907 () Int)
(declare-fun x2390 () Int)
(declare-fun x532 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x583 () Bool)
(declare-fun x4096 () Int)
(declare-fun x3237 () Int)
(declare-fun x3525 () Bool)
(declare-fun x1599 () Int)
(declare-fun x995 () Int)
(declare-fun x155 () Int)
(declare-fun x3767 () Int)
(declare-fun x3557 () Int)
(declare-fun x4094 () Int)
(declare-fun x436 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x740 () Bool)
(declare-fun x2831 () Int)
(declare-fun x2629 () Int)
(declare-fun x3072 () Int)
(declare-fun x2762 () Int)
(declare-fun x1420 () Int)
(declare-fun x1689 () Int)
(declare-fun x2858 () Bool)
(declare-fun x358 () Int)
(declare-fun x702 () Int)
(declare-fun x3875 () Int)
(declare-fun x1045 () Bool)
(declare-fun x890 () Int)
(declare-fun x2354 () Bool)
(declare-fun x681 () Int)
(declare-fun x1076 () Int)
(declare-fun x3114 () Int)
(declare-fun x1723 (Int) Int)
(declare-fun x2965 () Int)
(declare-fun x3277 () Int)
(declare-fun x1358 () Int)
(declare-fun x4012 () Bool)
(declare-fun x4293 () Int)
(declare-fun x1608 () Int)
(declare-fun x3978 () Bool)
(declare-fun x4136 () Int)
(declare-fun x2448 () Int)
(declare-fun x2117 () Bool)
(declare-fun x987 () Bool)
(declare-fun x3527 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x1869 () Int)
(declare-fun x3865 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x3860 () Int)
(declare-fun x3572 () Int)
(declare-fun x477 () Bool)
(declare-fun x3853 () Bool)
(declare-fun x1737 () Int)
(declare-fun x2870 () Int)
(declare-fun x3413 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1603 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1512 () Int)
(declare-fun x3690 () Int)
(declare-fun x3505 () Bool)
(declare-fun x4215 () Int)
(declare-fun x1285 () Bool)
(declare-fun x3676 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x1293 () Int)
(declare-fun x3761 () Bool)
(declare-fun x3783 () Int)
(declare-fun x2707 () Int)
(declare-fun x1107 () Int)
(declare-fun x1647 () Int)
(declare-fun x3317 () Bool)
(declare-fun x3656 () Int)
(declare-fun x2327 () Int)
(declare-fun x2952 () Int)
(declare-fun x1870 () Int)
(declare-fun x469 () Bool)
(declare-fun x3671 () Int)
(declare-fun x1746 () Int)
(declare-fun x2603 () Bool)
(declare-fun x4263 () Int)
(declare-fun x4108 () Int)
(declare-fun x363 () Int)
(declare-fun x452 () Int)
(declare-fun x3611 () Bool)
(declare-fun x680 () Int)
(declare-fun x3632 (Int) Int)
(declare-fun x2551 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x1580 () Int)
(declare-fun x32 () Bool)
(declare-fun x533 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x844 () Int)
(declare-fun x2755 () Int)
(declare-fun x2816 () Bool)
(declare-fun x4135 () Int)
(declare-fun x1206 () Int)
(declare-fun x3278 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x3655 () Bool)
(declare-fun x2422 () Int)
(declare-fun x2413 () Int)
(declare-fun x3992 () Bool)
(declare-fun x1559 () Int)
(declare-fun x84 () Bool)
(declare-fun x2246 (Int) Int)
(declare-fun x3666 () Int)
(declare-fun x1492 () Int)
(declare-fun x1792 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x349 () Bool)
(declare-fun x2365 () Int)
(declare-fun x3152 () Bool)
(declare-fun x2614 () Int)
(declare-fun x1494 () Int)
(declare-fun x3489 () Int)
(declare-fun x2196 () Int)
(declare-fun x435 () Bool)
(declare-fun x338 () Int)
(declare-fun x2072 () Int)
(declare-fun x2163 () Int)
(declare-fun x4074 () Int)
(declare-fun x518 () Int)
(declare-fun x3511 () Bool)
(declare-fun x1011 () Int)
(declare-fun x504 () Int)
(declare-fun x1528 () Int)
(declare-fun x489 () Int)
(declare-fun x3018 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x2503 () Int)
(declare-fun x3434 () Int)
(declare-fun x565 () Bool)
(declare-fun x3432 () Int)
(declare-fun x3651 () Int)
(declare-fun x3595 () Int)
(declare-fun x1626 () Int)
(declare-fun x2677 () Bool)
(declare-fun x2744 () Int)
(declare-fun x4199 () Int)
(declare-fun x976 () Int)
(declare-fun x4148 () Bool)
(declare-fun x846 () Bool)
(declare-fun x2886 () Int)
(declare-fun x733 () Int)
(declare-fun x3983 () Int)
(declare-fun x2236 () Bool)
(declare-fun x959 () Bool)
(declare-fun x3420 () Bool)
(declare-fun x4186 () Int)
(declare-fun x463 (Int) Int)
(declare-fun x3848 () Int)
(declare-fun x2266 () Int)
(declare-fun x620 () Int)
(declare-fun x2433 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x3933 () Int)
(declare-fun x376 () Int)
(declare-fun x958 () Int)
(declare-fun x3786 () Bool)
(declare-fun x1360 () Int)
(declare-fun x2576 () Int)
(declare-fun x2893 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x3315 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x402 () Int)
(declare-fun x3049 () Int)
(declare-fun x473 () Int)
(declare-fun x1254 () Bool)
(declare-fun x4020 () Bool)
(declare-fun x3401 () Int)
(declare-fun x2366 () Int)
(declare-fun x784 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x1538 () Int)
(declare-fun x640 () Int)
(declare-fun x443 () Bool)
(declare-fun x148 () Int)
(declare-fun x447 () Int)
(declare-fun x126 () Bool)
(declare-fun x727 () Int)
(declare-fun x2622 () Bool)
(declare-fun x2498 () Int)
(declare-fun x2490 () Bool)
(declare-fun x689 () Int)
(declare-fun x1397 () Int)
(declare-fun x1498 () Int)
(declare-fun x3563 () Int)
(declare-fun x1824 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x3028 (Int) Int)
(declare-fun x4308 () Bool)
(declare-fun x974 () Int)
(declare-fun x1060 () Bool)
(declare-fun x3383 () Int)
(declare-fun x2129 () Bool)
(declare-fun x4297 (Int) Int)
(declare-fun x359 () Int)
(declare-fun x3267 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x2789 () Int)
(declare-fun x1911 () Bool)
(declare-fun x619 () Bool)
(declare-fun x2206 () Int)
(declare-fun x2640 () Int)
(declare-fun x967 () Int)
(declare-fun x3561 () Int)
(declare-fun x1577 () Bool)
(declare-fun x2255 () Int)
(declare-fun x2963 () Bool)
(declare-fun x3539 () Int)
(declare-fun x2060 () Int)
(declare-fun x3540 () Bool)
(declare-fun x280 () Int)
(declare-fun x817 () Int)
(declare-fun x1122 () Int)
(declare-fun x3269 () Int)
(declare-fun x2021 () Int)
(declare-fun x2793 () Int)
(declare-fun x666 () Bool)
(declare-fun x3940 () Int)
(declare-fun x636 () Int)
(declare-fun x3957 () Int)
(declare-fun x2424 () Int)
(declare-fun x4237 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1247 () Int)
(declare-fun x3374 () Int)
(declare-fun x1767 () Int)
(declare-fun x516 () Int)
(declare-fun x3711 () Int)
(declare-fun x2959 () Int)
(declare-fun x1499 () Int)
(declare-fun x2357 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x458 () Int)
(declare-fun x649 () Int)
(declare-fun x1520 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x2558 () Int)
(declare-fun x214 () Int)
(declare-fun x1897 () Int)
(declare-fun x3684 () Int)
(declare-fun x4353 () Int)
(declare-fun x3067 () Int)
(declare-fun x4362 (Int) Int)
(declare-fun x1791 () Int)
(declare-fun x1290 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x1715 () Int)
(declare-fun x4257 () Int)
(declare-fun x3399 () Bool)
(declare-fun x2330 () Int)
(declare-fun x4146 () Int)
(declare-fun x794 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x1183 () Int)
(declare-fun x728 () Int)
(declare-fun x2138 () Int)
(declare-fun x4348 () Bool)
(declare-fun x2671 () Int)
(declare-fun x3692 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x1540 () Int)
(declare-fun x3080 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x4312 () Bool)
(declare-fun x1953 (Int) Int)
(declare-fun x4098 () Bool)
(declare-fun x1931 () Int)
(declare-fun x3070 () Int)
(declare-fun x3523 () Int)
(declare-fun x2277 () Bool)
(declare-fun x2787 () Int)
(declare-fun x2641 () Bool)
(declare-fun x142 () Bool)
(declare-fun x710 () Int)
(declare-fun x1425 () Bool)
(declare-fun x2968 () Int)
(declare-fun x4337 () Int)
(declare-fun x2207 () Bool)
(declare-fun x3173 () Int)
(declare-fun x3069 () Int)
(declare-fun x3759 () Int)
(declare-fun x1764 () Bool)
(declare-fun x2749 (Int) Int)
(declare-fun x1365 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x633 () Int)
(declare-fun x3608 () Bool)
(declare-fun x46 () Bool)
(declare-fun x245 () Int)
(declare-fun x164 () Bool)
(declare-fun x267 () Int)
(declare-fun x3409 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x2581 () Int)
(declare-fun x999 () Bool)
(declare-fun x1224 () Int)
(declare-fun x3605 () Bool)
(declare-fun x1308 () Int)
(declare-fun x2216 () Int)
(declare-fun x2093 () Int)
(declare-fun x2154 () Bool)
(declare-fun x837 () Int)
(declare-fun x14 () Int)
(declare-fun x2703 (Int) Int)
(declare-fun x1447 () Bool)
(declare-fun x4064 () Int)
(declare-fun x861 () Int)
(declare-fun x1546 () Bool)
(declare-fun x750 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x3110 () Int)
(declare-fun x2134 () Int)
(declare-fun x4283 () Bool)
(declare-fun x2467 () Int)
(declare-fun x3417 () Int)
(declare-fun x777 () Bool)
(declare-fun x286 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x623 () Int)
(declare-fun x2080 () Bool)
(declare-fun x3593 () Bool)
(declare-fun x1359 () Int)
(declare-fun x3961 () Int)
(declare-fun x1156 () Int)
(declare-fun x3976 () Int)
(declare-fun x4326 () Bool)
(declare-fun x1902 () Int)
(declare-fun x887 () Bool)
(declare-fun x4239 () Int)
(declare-fun x1180 () Int)
(declare-fun x1357 () Int)
(declare-fun x3840 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x2649 () Bool)
(declare-fun x1197 (Int) Int)
(declare-fun x1691 () Bool)
(declare-fun x3354 () Bool)
(declare-fun x3034 () Bool)
(declare-fun x3046 () Int)
(declare-fun x3388 () Bool)
(declare-fun x4181 () Int)
(declare-fun x3426 () Int)
(declare-fun x2408 () Int)
(declare-fun x3529 () Bool)
(declare-fun x2782 () Int)
(declare-fun x4271 () Bool)
(declare-fun x2353 (Int) Int)
(declare-fun x1947 () Int)
(declare-fun x1371 () Int)
(declare-fun x154 (Int) Int)
(declare-fun x3112 () Bool)
(declare-fun x2345 () Int)
(declare-fun x1088 () Bool)
(declare-fun x108 () Bool)
(declare-fun x3247 () Int)
(declare-fun x2116 () Bool)
(declare-fun x2911 () Int)
(declare-fun x1148 () Bool)
(declare-fun x2334 () Int)
(declare-fun x2491 () Bool)
(declare-fun x2587 () Int)
(declare-fun x2539 () Int)
(declare-fun x3512 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x4051 () Int)
(declare-fun x1109 () Int)
(declare-fun x2391 () Bool)
(declare-fun x226 () Int)
(declare-fun x1623 () Int)
(declare-fun x1667 () Int)
(declare-fun x2701 () Bool)
(declare-fun x2385 () Int)
(declare-fun x2693 () Bool)
(declare-fun x676 () Int)
(declare-fun x1257 () Int)
(declare-fun x1840 () Int)
(declare-fun x3109 () Int)
(declare-fun x2332 () Int)
(declare-fun x1510 () Int)
(declare-fun x3753 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x4067 () Int)
(declare-fun x1 () Int)
(declare-fun x2721 () Bool)
(declare-fun x3617 () Int)
(declare-fun x2702 () Int)
(declare-fun x2825 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x2227 () Int)
(declare-fun x596 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x2741 () Int)
(declare-fun x938 () Int)
(declare-fun x3194 () Bool)
(declare-fun x896 () Bool)
(declare-fun x585 () Bool)
(declare-fun x1522 () Int)
(declare-fun x921 () Int)
(declare-fun x3736 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x491 () Int)
(declare-fun x1477 () Int)
(declare-fun x1489 () Int)
(declare-fun x1999 () Int)
(declare-fun x4314 () Int)
(declare-fun x382 () Int)
(declare-fun x1613 () Int)
(declare-fun x3625 () Int)
(declare-fun x3008 () Int)
(declare-fun x4226 () Int)
(declare-fun x3792 () Int)
(declare-fun x1862 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x3799 () Int)
(declare-fun x1673 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x843 () Int)
(declare-fun x2439 () Int)
(declare-fun x3053 () Bool)
(declare-fun x3093 () Int)
(declare-fun x2658 () Int)
(declare-fun x3712 () Int)
(declare-fun x1483 () Int)
(declare-fun x4249 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x184 () Bool)
(declare-fun x2012 () Int)
(declare-fun x836 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x1896 () Int)
(declare-fun x1698 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1035 () Int)
(declare-fun x826 (Int) Int)
(declare-fun x3920 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x1087 () Int)
(declare-fun x506 () Bool)
(declare-fun x1706 () Int)
(declare-fun x3171 () Int)
(declare-fun x716 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x1732 () Int)
(declare-fun x1298 () Int)
(declare-fun x1887 () Int)
(declare-fun x2619 () Bool)
(declare-fun x4301 () Int)
(declare-fun x446 () Bool)
(declare-fun x2409 () Int)
(declare-fun x2840 () Bool)
(declare-fun x2393 () Int)
(declare-fun x773 () Bool)
(declare-fun x1537 () Int)
(declare-fun x383 () Int)
(declare-fun x3777 () Bool)
(declare-fun x2230 () Int)
(declare-fun x1374 () Int)
(declare-fun x17 () Bool)
(declare-fun x2537 () Int)
(declare-fun x3787 () Bool)
(declare-fun x3052 () Int)
(declare-fun x1653 () Int)
(declare-fun x2662 () Int)
(declare-fun x4255 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x759 () Bool)
(declare-fun x456 () Int)
(declare-fun x1643 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x1772 () Int)
(declare-fun x1244 () Int)
(declare-fun x1508 () Int)
(declare-fun x1253 () Bool)
(declare-fun x4103 () Bool)
(declare-fun x4361 () Int)
(declare-fun x1527 () Int)
(declare-fun x923 () Int)
(declare-fun x3772 () Bool)
(declare-fun x2030 () Int)
(declare-fun x3094 () Bool)
(declare-fun x4228 () Int)
(declare-fun x3886 () Int)
(declare-fun x778 () Bool)
(declare-fun x2308 () Int)
(declare-fun x3918 () Int)
(declare-fun x1427 () Int)
(declare-fun x1872 () Int)
(declare-fun x2397 (Int) Int)
(declare-fun x3522 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x3157 () Int)
(declare-fun x3930 () Bool)
(declare-fun x1771 () Int)
(declare-fun x102 () Int)
(declare-fun x566 () Int)
(declare-fun x3894 () Int)
(declare-fun x577 () Int)
(declare-fun x2745 () Int)
(declare-fun x1883 () Bool)
(declare-fun x3060 () Int)
(declare-fun x2605 () Int)
(declare-fun x4366 () Int)
(declare-fun x2713 () Bool)
(declare-fun x202 () Int)
(declare-fun x3138 () Int)
(declare-fun x3348 () Int)
(declare-fun x76 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x3478 () Int)
(declare-fun x556 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x3022 () Int)
(declare-fun x3107 () Bool)
(declare-fun x2877 () Bool)
(declare-fun x3145 () Int)
(declare-fun x769 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1933 () Int)
(declare-fun x3097 () Int)
(declare-fun x925 () Int)
(declare-fun x1412 () Int)
(declare-fun x3286 () Int)
(declare-fun x4072 () Int)
(declare-fun x698 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x3796 () Int)
(declare-fun x3122 () Int)
(declare-fun x401 () Bool)
(declare-fun x505 () Int)
(declare-fun x1476 () Int)
(declare-fun x3183 () Bool)
(declare-fun x221 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x3117 () Int)
(declare-fun x2162 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x3202 () Int)
(declare-fun x1164 () Int)
(declare-fun x2153 () Int)
(declare-fun x2347 () Int)
(declare-fun x2590 () Bool)
(declare-fun x862 (Int) Int)
(declare-fun x2432 () Bool)
(declare-fun x4010 () Int)
(declare-fun x2673 () Bool)
(declare-fun x2839 () Int)
(declare-fun x4008 () Int)
(declare-fun x2948 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x2566 () Int)
(declare-fun x611 () Bool)
(declare-fun x4082 () Int)
(declare-fun x1578 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1830 () Int)
(declare-fun x1968 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x263 () Bool)
(declare-fun x2276 () Int)
(declare-fun x1101 () Int)
(declare-fun x2336 () Int)
(declare-fun x3911 () Bool)
(declare-fun x265 () Int)
(declare-fun x2081 (Int) Int)
(declare-fun x3856 () Int)
(declare-fun x4277 () Bool)
(declare-fun x917 () Bool)
(declare-fun x639 () Int)
(declare-fun x2896 () Int)
(declare-fun x2284 () Int)
(declare-fun x3353 () Int)
(declare-fun x554 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x2891 () Bool)
(declare-fun x1749 () Int)
(declare-fun x314 () Int)
(declare-fun x4116 () Int)
(declare-fun x2127 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x1281 () Int)
(declare-fun x3545 () Bool)
(declare-fun x3674 () Int)
(declare-fun x3319 () Bool)
(declare-fun x3703 () Int)
(declare-fun x3452 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x1680 (Int) Int)
(declare-fun x442 () Int)
(declare-fun x1664 () Int)
(declare-fun x1955 () Int)
(declare-fun x27 () Bool)
(declare-fun x1353 () Int)
(declare-fun x3302 () Bool)
(declare-fun x3144 () Int)
(declare-fun x543 () Int)
(declare-fun x403 () Bool)
(declare-fun x2770 () Int)
(declare-fun x2724 (Int Int Int Int Int) Int)
(declare-fun x545 () Int)
(declare-fun x610 () Bool)
(declare-fun x2066 () Int)
(declare-fun x3474 () Bool)
(declare-fun x940 () Int)
(declare-fun x3776 () Int)
(declare-fun x3106 () Bool)
(declare-fun x45 () Int)
(declare-fun x524 () Bool)
(declare-fun x3763 () Int)
(declare-fun x810 () Int)
(declare-fun x1817 () Int)
(declare-fun x1628 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x2428 () Int)
(declare-fun x4253 () Int)
(declare-fun x1838 () Bool)
(declare-fun x2913 () Int)
(declare-fun x3746 () Int)
(declare-fun x400 () Int)
(declare-fun x1814 () Int)
(declare-fun x2148 () Bool)
(declare-fun x2769 () Int)
(declare-fun x2735 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x4169 () Int)
(declare-fun x83 () Int)
(declare-fun x2621 () Bool)
(declare-fun x1747 () Int)
(declare-fun x3982 () Int)
(declare-fun x675 () Int)
(declare-fun x3603 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x4157 () Int)
(declare-fun x3192 () Int)
(declare-fun x944 () Int)
(declare-fun x4341 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x1899 () Int)
(declare-fun x305 () Bool)
(declare-fun x785 () Int)
(declare-fun x2958 () Int)
(declare-fun x1555 () Int)
(declare-fun x2740 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x1322 () Int)
(declare-fun x1330 () Int)
(declare-fun x3592 () Int)
(declare-fun x3852 () Int)
(declare-fun x1639 () Bool)
(declare-fun x3902 () Int)
(declare-fun x2667 () Bool)
(declare-fun x276 () Int)
(declare-fun x4055 () Int)
(declare-fun x4279 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2009 () Int)
(declare-fun x4044 () Int)
(declare-fun x1029 () Int)
(declare-fun x1914 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x820 () Int)
(declare-fun x4090 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x346 () Bool)
(declare-fun x4310 () Int)
(declare-fun x3155 () Bool)
(declare-fun x292 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x4236 () Int)
(declare-fun x1230 (Int) Int)
(declare-fun x1149 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x321 () Int)
(declare-fun x3347 () Bool)
(declare-fun x2251 (Int) Int)
(declare-fun x2265 () Int)
(declare-fun x747 () Int)
(declare-fun x3127 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x712 () Int)
(declare-fun x63 () Bool)
(declare-fun x3659 () Int)
(declare-fun x3538 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x527 () Int)
(declare-fun x4223 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1811 () Int)
(declare-fun x679 () Bool)
(declare-fun x1000 () Int)
(declare-fun x3367 () Bool)
(declare-fun x3830 () Int)
(declare-fun x3970 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1927 () Int)
(declare-fun x437 () Int)
(declare-fun x542 () Int)
(declare-fun x3784 (Int) Int)
(declare-fun x61 () Bool)
(declare-fun x713 () Int)
(declare-fun x539 () Bool)
(declare-fun x344 () Int)
(declare-fun x1072 () Int)
(declare-fun x3710 () Bool)
(declare-fun x3290 () Int)
(declare-fun x3696 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x1853 () Int)
(declare-fun x35 () Bool)
(declare-fun x3360 () Int)
(declare-fun x3300 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x2773 () Int)
(declare-fun x291 () Int)
(declare-fun x150 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x2899 () Int)
(declare-fun x511 () Bool)
(declare-fun x2465 (Int) Int)
(declare-fun x1466 () Bool)
(declare-fun x2364 () Int)
(declare-fun x44 () Bool)
(declare-fun x736 () Int)
(declare-fun x4315 () Bool)
(declare-fun x2855 () Int)
(declare-fun x453 () Bool)
(declare-fun x867 () Int)
(declare-fun x977 () Int)
(declare-fun x2223 () Bool)
(declare-fun x1581 () Int)
(declare-fun x4113 () Int)
(declare-fun x3082 (Int) Int)
(declare-fun x2869 () Int)
(declare-fun x825 () Int)
(declare-fun x2734 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x4013 (Int) Int)
(declare-fun x2751 () Int)
(declare-fun x4102 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1286 () Int)
(declare-fun x2864 () Bool)
(declare-fun x3601 () Int)
(declare-fun x2627 () Int)
(declare-fun x2552 () Bool)
(declare-fun x4303 () Int)
(declare-fun x4 () Int)
(declare-fun x1989 () Bool)
(declare-fun x3128 () Int)
(declare-fun x1828 () Int)
(declare-fun x3742 () Int)
(declare-fun x3705 () Int)
(declare-fun x2367 () Bool)
(declare-fun x420 () Int)
(declare-fun x525 () Int)
(declare-fun x1185 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x354 () Bool)
(declare-fun x2338 () Int)
(declare-fun x3597 () Int)
(declare-fun x3344 () Int)
(declare-fun x1922 () Int)
(declare-fun x1753 () Int)
(declare-fun x1641 () Int)
(declare-fun x2368 () Bool)
(declare-fun x410 () Bool)
(declare-fun x307 () Int)
(declare-fun x4077 () Bool)
(declare-fun x737 () Int)
(declare-fun x2185 () Int)
(declare-fun x1563 () Int)
(declare-fun x308 () Int)
(declare-fun x4338 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1168 () Int)
(declare-fun x2998 () Bool)
(declare-fun x490 () Int)
(declare-fun x2733 () Bool)
(declare-fun x3519 () Bool)
(declare-fun x3161 () Int)
(declare-fun x1898 () Int)
(declare-fun x407 () Bool)
(declare-fun x2764 () Int)
(declare-fun x1352 () Int)
(declare-fun x2321 () Int)
(declare-fun x482 (Int) Int)
(declare-fun x538 () Bool)
(declare-fun x3024 () Int)
(declare-fun x2477 () Int)
(declare-fun x3948 () Int)
(declare-fun x1774 () Int)
(declare-fun x2131 (Int) Int)
(declare-fun x233 () Int)
(declare-fun x3861 () Bool)
(declare-fun x2824 () Int)
(declare-fun x1864 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2303 () Int)
(declare-fun x2217 () Int)
(declare-fun x1722 () Bool)
(declare-fun x190 () Int)
(declare-fun x2743 (Int) Int)
(declare-fun x4189 () Int)
(declare-fun x3136 () Bool)
(declare-fun x3124 () Int)
(declare-fun x4124 () Int)
(declare-fun x1376 () Bool)
(declare-fun x2210 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1742 () Int)
(declare-fun x4387 () Bool)
(declare-fun x609 () Bool)
(declare-fun x4208 () Bool)
(declare-fun x3831 () Int)
(declare-fun x2977 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x365 () Int)
(declare-fun x1971 () Int)
(declare-fun x2440 () Int)
(declare-fun x2561 () Int)
(declare-fun x385 () Bool)
(declare-fun x2791 () Int)
(declare-fun x1595 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x3227 () Int)
(declare-fun x779 (Int) Int)
(declare-fun x2716 () Int)
(declare-fun x178 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1426 () Int)
(declare-fun x3775 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x1961 () Int)
(declare-fun x3995 () Int)
(declare-fun x413 () Bool)
(declare-fun x1155 () Int)
(declare-fun x1921 () Int)
(declare-fun x3648 () Int)
(declare-fun x91 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x3428 () Int)
(declare-fun x2833 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x664 () Bool)
(declare-fun x757 () Int)
(declare-fun x529 () Int)
(declare-fun x3677 () Int)
(declare-fun x754 () Int)
(declare-fun x60 () Int)
(declare-fun x630 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1942 () Int)
(declare-fun x1097 () Int)
(declare-fun x1472 () Int)
(declare-fun x299 () Int)
(declare-fun x3492 () Int)
(declare-fun x298 () Int)
(declare-fun x1835 () Int)
(declare-fun x3576 () Bool)
(declare-fun x888 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x4058 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1739 () Bool)
(declare-fun x1368 () Int)
(declare-fun x487 () Int)
(declare-fun x729 () Int)
(declare-fun x98 () Int)
(declare-fun x3433 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1903 () Int)
(declare-fun x1184 () Bool)
(declare-fun x2524 () Int)
(declare-fun x719 () Int)
(declare-fun x1243 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1574 () Int)
(declare-fun x2550 () Bool)
(declare-fun x3371 () Int)
(declare-fun x2692 () Bool)
(declare-fun x3450 (Int) Int)
(declare-fun x880 () Int)
(declare-fun x657 () Int)
(declare-fun x2880 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x289 () Int)
(declare-fun x2610 () Bool)
(declare-fun x730 () Bool)
(declare-fun x522 () Int)
(declare-fun x2466 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x4143 () Int)
(declare-fun x2106 () Int)
(declare-fun x2509 () Int)
(declare-fun x1182 () Bool)
(declare-fun x4319 () Int)
(declare-fun x3706 () Int)
(declare-fun x1533 () Bool)
(declare-fun x3883 () Int)
(declare-fun x2476 () Bool)
(declare-fun x124 () Int)
(declare-fun x2508 () Int)
(declare-fun x706 () Bool)
(declare-fun x908 () Int)
(declare-fun x2209 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x686 () Int)
(declare-fun x1978 () Bool)
(declare-fun x1836 () Int)
(declare-fun x3263 () Int)
(declare-fun x4322 () Int)
(declare-fun x3203 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x2418 () Int)
(declare-fun x3002 () Int)
(declare-fun x1768 () Int)
(declare-fun x2912 () Int)
(declare-fun x4018 () Bool)
(declare-fun x4209 (Int) Int)
(declare-fun x2074 () Int)
(declare-fun x2070 () Int)
(declare-fun x3283 () Bool)
(declare-fun x510 () Bool)
(declare-fun x468 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x3137 () Int)
(declare-fun x1291 () Int)
(declare-fun x158 () Int)
(declare-fun x1615 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x3158 () Int)
(declare-fun x1539 () Bool)
(declare-fun x667 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x53 () Int)
(declare-fun x3697 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2593 () Int)
(declare-fun x2754 () Int)
(declare-fun x324 () Int)
(declare-fun x3488 () Int)
(declare-fun x3891 () Bool)
(declare-fun x2258 () Int)
(declare-fun x40 () Int)
(declare-fun x3279 () Int)
(declare-fun x4185 () Int)
(declare-fun x1146 () Bool)
(declare-fun x2169 () Int)
(declare-fun x270 () Bool)
(declare-fun x3633 () Int)
(declare-fun x85 () Bool)
(declare-fun x829 () Int)
(declare-fun x2156 () Int)
(declare-fun x641 () Int)
(declare-fun x2821 () Bool)
(declare-fun x93 () Bool)
(declare-fun x199 () Int)
(declare-fun x3846 () Bool)
(declare-fun x1178 () Int)
(declare-fun x2699 () Int)
(declare-fun x2024 () Int)
(declare-fun x2644 () Bool)
(declare-fun x2554 (Int) Int)
(declare-fun x3395 () Bool)
(declare-fun x4130 () Bool)
(declare-fun x2235 () Int)
(declare-fun x4346 () Int)
(declare-fun x3242 () Bool)
(declare-fun x946 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x56 () Int)
(declare-fun x2062 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x2847 () Int)
(declare-fun x2704 () Int)
(declare-fun x1169 () Int)
(declare-fun x2569 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x415 () Int)
(declare-fun x3965 () Int)
(declare-fun x1175 () Bool)
(declare-fun x2349 () Int)
(declare-fun x598 () Bool)
(declare-fun x3825 () Int)
(declare-fun x1729 () Bool)
(declare-fun x2975 () Int)
(declare-fun x1255 () Bool)
(declare-fun x1475 () Int)
(declare-fun x73 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x547 () Int)
(declare-fun x2845 () Bool)
(declare-fun x2851 () Int)
(declare-fun x941 () Int)
(declare-fun x1957 () Int)
(declare-fun x187 () Int)
(declare-fun x2653 () Int)
(declare-fun x31 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x2972 () Int)
(declare-fun x4222 () Bool)
(declare-fun x177 () Bool)
(declare-fun x3310 () Int)
(declare-fun x2635 () Int)
(declare-fun x159 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x4071 () Int)
(declare-fun x1389 () Int)
(declare-fun x601 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1452 () Int)
(declare-fun x2429 () Int)
(declare-fun x3590 (Int) Int)
(declare-fun x398 () Int)
(declare-fun x4177 () Int)
(declare-fun x49 () Int)
(declare-fun x271 () Int)
(declare-fun x165 () Int)
(declare-fun x3541 () Int)
(declare-fun x3264 () Int)
(declare-fun x2873 () Int)
(declare-fun x117 () Bool)
(declare-fun x4000 () Int)
(declare-fun x2809 () Bool)
(declare-fun x2517 () Int)
(declare-fun x1803 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x1478 () Int)
(declare-fun x4335 () Int)
(declare-fun x1858 () Int)
(declare-fun x3836 () Bool)
(declare-fun x992 () Int)
(declare-fun x3232 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x2986 () Int)
(declare-fun x127 () Int)
(declare-fun x3204 () Int)
(declare-fun x1700 () Int)
(declare-fun x2642 () Bool)
(declare-fun x300 () Int)
(declare-fun x248 () Int)
(declare-fun x920 () Int)
(declare-fun x3868 () Bool)
(declare-fun x231 () Bool)
(declare-fun x2625 () Int)
(declare-fun x770 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x722 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1063 () Int)
(declare-fun x842 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x685 () Int)
(declare-fun x3866 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x36 () Int)
(declare-fun x3249 () Int)
(declare-fun x693 () Int)
(declare-fun x377 () Int)
(declare-fun x1040 () Int)
(declare-fun x2725 () Int)
(declare-fun x1450 () Int)
(declare-fun x151 () Bool)
(declare-fun x3003 () Int)
(declare-fun x4001 () Bool)
(declare-fun x171 () Int)
(declare-fun x6 () Int)
(declare-fun x3181 () Int)
(declare-fun x1980 () Int)
(declare-fun x1465 () Bool)
(declare-fun x2997 () Int)
(declare-fun x1860 () Int)
(declare-fun x3270 () Int)
(declare-fun x2087 () Int)
(declare-fun x1119 () Bool)
(declare-fun x1349 () Int)
(declare-fun x3955 () Int)
(declare-fun x1812 () Bool)
(declare-fun x787 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x1221 () Int)
(declare-fun x2541 () Int)
(declare-fun x328 () Bool)
(declare-fun x2434 () Int)
(declare-fun x932 () Int)
(declare-fun x454 () Bool)
(declare-fun x3510 () Int)
(declare-fun x4252 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x3807 () Bool)
(declare-fun x1052 () Int)
(declare-fun x2909 () Int)
(declare-fun x3740 () Int)
(declare-fun x559 () Int)
(declare-fun x212 () Int)
(declare-fun x3789 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x2504 () Int)
(declare-fun x2652 () Int)
(declare-fun x481 () Int)
(declare-fun x2254 () Bool)
(declare-fun x319 () Int)
(declare-fun x2460 (Int) Int)
(declare-fun x2302 () Int)
(declare-fun x3934 () Int)
(declare-fun x799 () Bool)
(declare-fun x4032 () Int)
(declare-fun x2348 () Int)
(declare-fun x4220 () Int)
(declare-fun x4250 () Int)
(declare-fun x1789 () Int)
(declare-fun x357 () Int)
(declare-fun x2685 () Int)
(declare-fun x1991 () Bool)
(declare-fun x2879 () Int)
(declare-fun x3134 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x2732 () Int)
(declare-fun x2956 () Bool)
(declare-fun x2430 () Int)
(declare-fun x4107 () Int)
(declare-fun x1204 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x1585 () Int)
(declare-fun x1491 () Int)
(declare-fun x2315 () Bool)
(declare-fun x1552 () Int)
(declare-fun x1765 () Bool)
(declare-fun x2871 () Int)
(declare-fun x273 () Int)
(declare-fun x2299 () Bool)
(declare-fun x2668 () Int)
(declare-fun x2536 () Int)
(declare-fun x57 () Bool)
(declare-fun x1995 () Int)
(declare-fun x714 () Int)
(declare-fun x3565 () Int)
(declare-fun x2063 () Bool)
(declare-fun x1960 (Int) Int)
(declare-fun x3172 () Bool)
(declare-fun x2046 () Int)
(declare-fun x2483 () Int)
(declare-fun x816 () Int)
(declare-fun x2973 () Int)
(declare-fun x801 () Int)
(declare-fun x1372 () Int)
(declare-fun x2497 () Int)
(declare-fun x780 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x4153 () Int)
(declare-fun x721 () Bool)
(declare-fun x2889 () Int)
(declare-fun x2463 () Int)
(declare-fun x2268 () Int)
(declare-fun x3311 () Bool)
(declare-fun x1269 () Int)
(declare-fun x2592 () Int)
(declare-fun x2804 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1589 () Int)
(declare-fun x332 () Int)
(declare-fun x1614 () Int)
(declare-fun x272 () Int)
(declare-fun x3447 () Int)
(declare-fun x3621 () Bool)
(declare-fun x1553 () Int)
(declare-fun x310 () Int)
(declare-fun x606 () Int)
(declare-fun x557 () Int)
(declare-fun x2639 () Int)
(declare-fun x1788 () Bool)
(declare-fun x2767 () Int)
(declare-fun x4290 () Int)
(declare-fun x390 () Bool)
(declare-fun x704 () Int)
(declare-fun x1435 () Int)
(declare-fun x3769 () Int)
(declare-fun x2452 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x2307 () Int)
(declare-fun x997 () Int)
(declare-fun x2924 () Bool)
(declare-fun x3243 () Int)
(declare-fun x3745 () Bool)
(declare-fun x3971 () Int)
(declare-fun x2643 () Int)
(declare-fun x1996 () Int)
(declare-fun x969 () Int)
(declare-fun x3530 () Bool)
(declare-fun x342 () Int)
(declare-fun x1336 () Int)
(declare-fun x749 () Bool)
(declare-fun x111 () Int)
(declare-fun x4170 (Int) Int)
(declare-fun x1144 () Int)
(declare-fun x1839 () Int)
(declare-fun x1226 () Int)
(declare-fun x3959 () Int)
(declare-fun x840 () Int)
(declare-fun x1229 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x1393 () Int)
(declare-fun x653 () Int)
(declare-fun x3425 () Int)
(declare-fun x845 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x1752 () Int)
(declare-fun x2310 () Int)
(declare-fun x1977 () Int)
(declare-fun x1424 () Int)
(declare-fun x2350 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x3903 () Int)
(declare-fun x2827 () Int)
(declare-fun x2799 () Int)
(declare-fun x4264 () Bool)
(declare-fun x3898 () Int)
(declare-fun x378 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x2790 () Int)
(declare-fun x3669 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x604 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x412 () Bool)
(declare-fun x4149 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x161 () Bool)
(declare-fun x3986 () Int)
(declare-fun x4129 () Bool)
(declare-fun x3844 () Int)
(declare-fun x3499 () Bool)
(declare-fun x121 () Int)
(declare-fun x828 (Int) Int)
(declare-fun x1464 () Int)
(declare-fun x2495 () Int)
(declare-fun x2256 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x3000 () Int)
(declare-fun x3967 () Bool)
(declare-fun x818 () Int)
(declare-fun x1242 () Bool)
(declare-fun x2844 () Int)
(declare-fun x11 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1267 () Int)
(declare-fun x3305 () Int)
(declare-fun x464 () Int)
(declare-fun x2801 () Int)
(declare-fun x2459 () Bool)
(declare-fun x3293 () Int)
(declare-fun x3054 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1104 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x2752 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x569 () Int)
(declare-fun x371 () Int)
(declare-fun x26 () Int)
(declare-fun x2768 () Int)
(declare-fun x3176 () Bool)
(declare-fun x2105 () Int)
(declare-fun x797 () Bool)
(declare-fun x3223 () Int)
(declare-fun x2488 () Int)
(declare-fun x2372 () Int)
(declare-fun x1094 () Int)
(declare-fun x167 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x4355 () Int)
(declare-fun x2525 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x2499 () Int)
(declare-fun x3133 () Int)
(declare-fun x1770 () Int)
(declare-fun x1066 () Int)
(declare-fun x1437 () Int)
(declare-fun x4034 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x701 () Int)
(declare-fun x507 () Int)
(declare-fun x3123 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1998 () Int)
(declare-fun x348 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2928 () Int)
(declare-fun x2919 () Int)
(declare-fun x1166 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x1837 () Int)
(declare-fun x2747 () Int)
(declare-fun x1880 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x694 () Int)
(declare-fun x3771 () Int)
(declare-fun x2404 () Bool)
(declare-fun x2202 () Int)
(declare-fun x2538 () Int)
(declare-fun x2263 () Bool)
(declare-fun x2942 () Int)
(declare-fun x3699 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x912 () Bool)
(declare-fun x110 () Bool)
(declare-fun x278 () Bool)
(declare-fun x878 () Int)
(declare-fun x2964 () Int)
(declare-fun x3095 () Bool)
(declare-fun x1773 () Int)
(declare-fun x1366 () Int)
(declare-fun x4284 () Int)
(declare-fun x1594 () Int)
(declare-fun x695 () Bool)
(declare-fun x2253 () Int)
(declare-fun x1867 () Int)
(declare-fun x426 (Int) Int)
(declare-fun x3457 () Bool)
(declare-fun x1354 () Int)
(declare-fun x393 () Int)
(declare-fun x2469 () Bool)
(declare-fun x2331 () Int)
(declare-fun x1241 () Int)
(declare-fun x2850 () Bool)
(declare-fun x2068 () Int)
(declare-fun x3675 () Int)
(declare-fun x2974 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x499 () Int)
(declare-fun x1046 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x2058 () Int)
(declare-fun x3100 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x1413 () Int)
(declare-fun x745 () Int)
(declare-fun x1602 () Int)
(declare-fun x3532 () Int)
(declare-fun x2546 () Bool)
(declare-fun x448 () Int)
(declare-fun x2119 () Int)
(declare-fun x1696 () Bool)
(declare-fun x4344 () Int)
(declare-fun x933 () Int)
(declare-fun x2792 () Bool)
(declare-fun x3999 () Int)
(declare-fun x3968 () Int)
(declare-fun x3469 () Int)
(declare-fun x2324 () Bool)
(declare-fun x4184 () Int)
(declare-fun x2933 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x3504 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x4278 () Int)
(declare-fun x2484 () Bool)
(declare-fun x2245 () Int)
(declare-fun x874 () Bool)
(declare-fun x4138 () Int)
(declare-fun x1604 () Bool)
(declare-fun x419 () Int)
(declare-fun x2474 () Int)
(declare-fun x3188 () Int)
(declare-fun x395 () Int)
(declare-fun x4230 () Bool)
(declare-fun x1846 () Int)
(declare-fun x1943 () Bool)
(declare-fun x4137 () Int)
(declare-fun x2885 () Int)
(declare-fun x723 (Int) Int)
(declare-fun x3471 () Int)
(declare-fun x2016 () Int)
(declare-fun x2513 () Int)
(declare-fun x3531 () Int)
(declare-fun x4195 () Int)
(declare-fun x3036 () Int)
(declare-fun x1919 () Int)
(declare-fun x4125 () Int)
(declare-fun x1234 () Int)
(declare-fun x2436 () Int)
(declare-fun x3889 () Int)
(declare-fun x2304 () Int)
(declare-fun x189 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1342 () Int)
(declare-fun x2325 () Bool)
(declare-fun x2705 () Int)
(declare-fun x1334 () Bool)
(declare-fun x3570 () Int)
(declare-fun x4202 () Int)
(declare-fun x1795 () Int)
(declare-fun x3524 () Int)
(declare-fun x241 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x4194 () Bool)
(declare-fun x4311 () Int)
(declare-fun x1502 (Int Int Int) Int)
(declare-fun x4163 () Int)
(declare-fun x4040 () Int)
(declare-fun x4375 () Int)
(declare-fun x1351 () Int)
(declare-fun x408 () Int)
(declare-fun x3412 () Bool)
(declare-fun x3832 () Int)
(declare-fun x3255 () Int)
(declare-fun x2003 () Int)
(declare-fun x2533 () Int)
(declare-fun x318 () Bool)
(declare-fun x4343 () Int)
(declare-fun x3859 () Bool)
(declare-fun x1398 () Int)
(declare-fun x2934 () Int)
(declare-fun x2681 () Int)
(declare-fun x3607 () Int)
(declare-fun x2194 () Int)
(declare-fun x2400 () Int)
(declare-fun x2123 () Int)
(declare-fun x2406 () Bool)
(declare-fun x2190 () Int)
(declare-fun x900 () Int)
(declare-fun x1724 () Int)
(declare-fun x232 () Int)
(declare-fun x699 () Int)
(declare-fun x3087 () Bool)
(declare-fun x2675 () Int)
(declare-fun x100 () Int)
(declare-fun x2709 () Bool)
(declare-fun x2765 () Int)
(declare-fun x3573 () Int)
(declare-fun x2545 () Bool)
(declare-fun x3950 () Int)
(declare-fun x3079 () Int)
(declare-fun x1044 (Int) Int)
(declare-fun x1956 () Bool)
(declare-fun x2160 () Int)
(declare-fun x3292 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x3663 () Int)
(declare-fun x3841 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x51 () Bool)
(declare-fun x2067 () Int)
(declare-fun x2966 () Int)
(declare-fun x87 () Int)
(declare-fun x4126 () Int)
(declare-fun x1651 () Int)
(declare-fun x3567 () Int)
(declare-fun x3461 () Int)
(declare-fun x1685 () Int)
(declare-fun x2471 () Int)
(declare-fun x2849 () Bool)
(declare-fun x942 (Int) Int)
(declare-fun x4365 () Bool)
(declare-fun x3514 () Int)
(declare-fun x1142 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1403 () Int)
(declare-fun x1273 () Int)
(declare-fun x2341 () Int)
(declare-fun x824 () Int)
(declare-fun x4002 () Bool)
(declare-fun x2186 () Int)
(declare-fun x1272 () Int)
(declare-fun x2001 () Bool)
(declare-fun x4327 () Int)
(declare-fun x2143 () Int)
(declare-fun x242 () Bool)
(declare-fun x4035 () Int)
(declare-fun x3297 (Int) Int)
(declare-fun x2978 () Int)
(declare-fun x3922 () Bool)
(declare-fun x2384 () Int)
(declare-fun x2232 () Int)
(declare-fun x2602 () Int)
(declare-fun x4318 () Int)
(declare-fun x418 () Bool)
(declare-fun x3960 () Int)
(declare-fun x765 () Int)
(declare-fun x2631 () Bool)
(declare-fun x775 () Int)
(declare-fun x1875 () Int)
(declare-fun x2120 () Int)
(declare-fun x947 () Int)
(declare-fun x2264 () Int)
(declare-fun x2580 () Int)
(declare-fun x3465 () Bool)
(declare-fun x807 () Bool)
(declare-fun x3718 (Int) Int)
(declare-fun x1606 () Int)
(declare-fun x2008 () Int)
(declare-fun x445 () Bool)
(declare-fun x2114 () Int)
(declare-fun x2890 () Int)
(declare-fun x988 () Int)
(declare-fun x89 (Int) Int)
(declare-fun x2147 () Bool)
(declare-fun x283 () Int)
(declare-fun x3646 () Int)
(declare-fun x4089 () Int)
(declare-fun x2167 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x3244 () Int)
(declare-fun x2615 (Int) Int)
(declare-fun x2387 (Int Int Int Int Int Int Int) Int)
(declare-fun x2820 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x3987 () Int)
(declare-fun x2989 () Int)
(declare-fun x3281 () Bool)
(declare-fun x3206 () Int)
(declare-fun x635 () Bool)
(declare-fun x1487 () Int)
(declare-fun x16 () Bool)
(declare-fun x3240 () Int)
(declare-fun x3966 () Int)
(declare-fun x2980 () Bool)
(declare-fun x3482 () Int)
(declare-fun x3 () Bool)
(declare-fun x903 () Int)
(declare-fun x2918 () Bool)
(declare-fun x822 () Int)
(declare-fun x4150 () Int)
(declare-fun x119 () Bool)
(declare-fun x580 () Int)
(declare-fun x41 () Int)
(declare-fun x3797 () Int)
(declare-fun x2562 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x4281 () Int)
(declare-fun x2057 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x1775 (Int) Int)
(declare-fun x2157 () Int)
(declare-fun x2370 () Int)
(declare-fun x1757 () Int)
(declare-fun x2878 () Bool)
(declare-fun x22 () Bool)
(declare-fun x540 () Int)
(declare-fun x2020 () Int)
(declare-fun x3937 () Bool)
(declare-fun x2520 () Int)
(declare-fun x3253 () Int)
(declare-fun x2516 (Int) Int)
(declare-fun x4112 () Int)
(declare-fun x1381 (Int) Int)
(declare-fun x3722 () Int)
(declare-fun x4196 () Int)
(declare-fun x3486 () Int)
(declare-fun x4139 () Bool)
(declare-fun x1385 () Int)
(declare-fun x4028 () Bool)
(declare-fun x3339 () Int)
(declare-fun x1394 () Int)
(declare-fun x2935 () Int)
(declare-fun x1059 () Int)
(declare-fun x2992 () Bool)
(declare-fun x1275 () Int)
(declare-fun x2339 () Int)
(declare-fun x2660 () Int)
(declare-fun x1820 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x3935 () Int)
(declare-fun x950 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x4041 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1900 (Int) Int)
(declare-fun x2586 () Int)
(declare-fun x2054 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x3121 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x2095 () Int)
(declare-fun x3855 () Int)
(declare-fun x2164 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1649 () Int)
(declare-fun x1061 () Int)
(declare-fun x3824 () Int)
(declare-fun x1686 () Int)
(declare-fun x168 () Bool)
(declare-fun x25 () Int)
(declare-fun x1135 () Bool)
(declare-fun x2606 () Int)
(declare-fun x4106 () Int)
(declare-fun x2259 () Int)
(declare-fun x2654 () Bool)
(declare-fun x4134 () Int)
(declare-fun x2694 () Bool)
(declare-fun x1564 () Int)
(declare-fun x2101 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1387 () Bool)
(declare-fun x72 () Int)
(declare-fun x3042 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x3215 () Int)
(declare-fun x4050 () Bool)
(declare-fun x3090 () Int)
(declare-fun x3074 () Int)
(declare-fun x259 () Bool)
(declare-fun x2577 () Int)
(declare-fun x166 () Bool)
(declare-fun x1964 () Int)
(declare-fun x882 () Int)
(declare-fun x3256 () Int)
(declare-fun x2175 () Bool)
(declare-fun x206 () Bool)
(declare-fun x2908 () Int)
(declare-fun x2522 () Bool)
(declare-fun x123 () Int)
(declare-fun x372 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1674 () Int)
(declare-fun x2375 () Int)
(declare-fun x4378 () Int)
(declare-fun x3814 () Int)
(declare-fun x13 () Int)
(declare-fun x1227 () Int)
(declare-fun x1154 () Int)
(declare-fun x1588 () Bool)
(declare-fun x528 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x3211 () Int)
(declare-fun x3842 () Int)
(declare-fun x3503 (Int) Int)
(declare-fun x4379 () Int)
(declare-fun x767 () Int)
(declare-fun x964 () Bool)
(declare-fun x186 () Int)
(declare-fun x246 () Int)
(declare-fun x1635 () Int)
(declare-fun x2352 () Int)
(declare-fun x2069 () Int)
(declare-fun x553 () Bool)
(declare-fun x963 () Int)
(declare-fun x1400 () Int)
(declare-fun x3400 () Int)
(declare-fun x498 () Int)
(declare-fun x2274 () Int)
(declare-fun x1873 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x1740 () Int)
(declare-fun x1057 (Int Int Int Int Int Int) Int)
(declare-fun x3146 () Int)
(declare-fun x4151 () Int)
(declare-fun x902 () Int)
(declare-fun x3033 () Int)
(declare-fun x4190 () Int)
(declare-fun x3419 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x973 () Int)
(declare-fun x3681 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1263 () Bool)
(declare-fun x2212 () Int)
(declare-fun x2189 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x3019 () Int)
(declare-fun x1949 () Int)
(declare-fun x2936 () Int)
(declare-fun x1127 () Bool)
(declare-fun x616 () Int)
(declare-fun x64 () Bool)
(declare-fun x537 (Int) Int)
(declare-fun x441 () Int)
(declare-fun x3624 () Int)
(declare-fun x924 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x4115 () Bool)
(declare-fun x2047 () Int)
(declare-fun x1053 () Int)
(declare-fun x2078 () Bool)
(declare-fun x4187 () Bool)
(declare-fun x2921 () Int)
(declare-fun x3103 () Int)
(declare-fun x1327 () Bool)
(declare-fun x962 () Bool)
(declare-fun x1556 () Int)
(declare-fun x2682 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x3218 () Int)
(declare-fun x228 () Bool)
(declare-fun x2937 () Int)
(declare-fun x2506 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1909 () Int)
(declare-fun x4197 () Int)
(declare-fun x3936 () Int)
(declare-fun x4329 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x855 () Bool)
(declare-fun x172 () Int)
(declare-fun x1495 () Int)
(declare-fun x3975 () Int)
(declare-fun x3418 () Int)
(declare-fun x2453 () Bool)
(declare-fun x901 () Int)
(declare-fun x1906 () Int)
(declare-fun x4192 () Int)
(declare-fun x3241 () Bool)
(declare-fun x2680 () Bool)
(declare-fun x78 () Bool)
(declare-fun x4015 () Bool)
(declare-fun x3001 () Int)
(declare-fun x3509 () Int)
(declare-fun x4114 () Bool)
(declare-fun x3414 () Int)
(declare-fun x2456 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x1810 () Int)
(declare-fun x3429 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x1236 () Int)
(declare-fun x911 () Bool)
(declare-fun x2700 () Int)
(declare-fun x169 () Bool)
(declare-fun x4057 () Int)
(declare-fun x960 () Int)
(declare-fun x3190 () Int)
(declare-fun x2763 () Int)
(declare-fun x4309 () Bool)
(declare-fun x3900 () Int)
(declare-fun x3021 () Bool)
(declare-fun x3031 () Int)
(declare-fun x304 () Int)
(declare-fun x2130 () Bool)
(declare-fun x4330 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x1569 () Int)
(declare-fun x3535 () Int)
(declare-fun x3322 () Bool)
(declare-fun x658 (Int) Int)
(declare-fun x2197 () Int)
(declare-fun x591 (Int) Int)
(declare-fun x2226 () Bool)
(declare-fun x4075 () Int)
(declare-fun x3153 () Int)
(declare-fun x1018 () Int)
(declare-fun x3174 () Int)
(declare-fun x2857 () Int)
(declare-fun x1484 () Bool)
(declare-fun x4118 (Int) Int)
(declare-fun x1769 () Int)
(declare-fun x3544 () Int)
(declare-fun x3448 () Int)
(declare-fun x1496 () Int)
(declare-fun x3518 () Int)
(declare-fun x493 () Int)
(declare-fun x3454 () Int)
(declare-fun x375 () Int)
(declare-fun x2394 () Bool)
(declare-fun x2108 () Int)
(declare-fun x211 () Bool)
(declare-fun x38 () Int)
(declare-fun x3668 () Int)
(declare-fun x3884 () Bool)
(declare-fun x2113 () Int)
(declare-fun x1016 () Bool)
(declare-fun x3730 (Int) Int)
(declare-fun x1414 () Int)
(declare-fun x595 () Int)
(declare-fun x1306 () Int)
(declare-fun x3423 () Bool)
(declare-fun x568 () Bool)
(declare-fun x3421 () Int)
(declare-fun x2588 () Int)
(declare-fun x3880 () Int)
(declare-fun x4120 () Int)
(declare-fun x2730 () Int)
(declare-fun x656 () Int)
(declare-fun x792 () Int)
(declare-fun x3480 () Bool)
(declare-fun x3231 () Int)
(declare-fun x1541 () Bool)
(declare-fun x362 () Int)
(declare-fun x3464 () Int)
(declare-fun x1616 () Int)
(declare-fun x2017 () Int)
(declare-fun x3379 () Int)
(declare-fun x99 () Int)
(declare-fun x3925 () Int)
(declare-fun x3845 () Int)
(declare-fun x4066 () Int)
(declare-fun x3819 (Int) Int)
(declare-fun x3143 () Bool)
(declare-fun x3680 () Int)
(declare-fun x2260 () Int)
(declare-fun x1439 () Int)
(declare-fun x4198 () Int)
(declare-fun x1116 () Int)
(declare-fun x66 () Int)
(declare-fun x217 () Bool)
(declare-fun x806 () Int)
(declare-fun x1885 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x1600 () Int)
(declare-fun x1799 () Bool)
(declare-fun x703 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x90 () Bool)
(declare-fun x4053 (Int) Int)
(declare-fun x3147 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x755 () Bool)
(declare-fun x763 () Bool)
(declare-fun x86 () Int)
(declare-fun x484 () Bool)
(declare-fun x2244 (Int) Int)
(declare-fun x2121 () Int)
(declare-fun x1205 () Bool)
(declare-fun x647 () Bool)
(declare-fun x134 () Bool)
(declare-fun x812 () Int)
(declare-fun x302 () Bool)
(declare-fun x509 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x205 () Bool)
(declare-fun x1370 () Int)
(declare-fun x225 () Bool)
(declare-fun x204 () Int)
(declare-fun x708 () Int)
(declare-fun x4054 () Int)
(declare-fun x3973 () Int)
(declare-fun x2860 () Int)
(declare-fun x4350 () Int)
(declare-fun x2248 (Int) Int)
(declare-fun x3364 () Int)
(declare-fun x4093 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x2247 () Int)
(declare-fun x3228 () Int)
(declare-fun x3207 () Int)
(declare-fun x3495 (Int) Int)
(declare-fun x1826 () Int)
(declare-fun x2810 () Bool)
(declare-fun x88 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x59 () Bool)
(declare-fun x3382 () Int)
(declare-fun x2 () Int)
(declare-fun x1572 () Bool)
(declare-fun x2031 () Int)
(declare-fun x1959 () Bool)
(declare-fun x1617 () Int)
(declare-fun x758 () Int)
(declare-fun x3996 () Bool)
(declare-fun x1511 () Int)
(declare-fun x2028 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1917 () Int)
(declare-fun x975 () Bool)
(declare-fun x2923 () Bool)
(declare-fun x2023 () Int)
(declare-fun x3446 () Int)
(declare-fun x4332 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x3555 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1532 () Int)
(declare-fun x3798 () Int)
(declare-fun x2178 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1954 () Int)
(declare-fun x1890 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x945 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x514 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x2521 () Int)
(declare-fun x1108 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x4205 () Int)
(declare-fun x1843 () Int)
(declare-fun x850 () Int)
(declare-fun x1136 () Bool)
(declare-fun x397 () Int)
(declare-fun x472 (Int) Int)
(declare-fun x3298 () Bool)
(declare-fun x4152 () Bool)
(declare-fun x2757 () Int)
(declare-fun x2984 () Int)
(declare-fun x581 () Bool)
(declare-fun x2478 () Int)
(declare-fun x2802 () Int)
(declare-fun x3640 () Int)
(declare-fun x4045 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x3229 () Int)
(declare-fun x4068 () Int)
(declare-fun x2808 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x548 () Int)
(declare-fun x2270 () Bool)
(declare-fun x643 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x3994 () Int)
(declare-fun x4210 () Int)
(declare-fun x815 () Int)
(declare-fun x3954 () Int)
(declare-fun x2510 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x316 () Int)
(declare-fun x2405 () Bool)
(declare-fun x2050 () Int)
(declare-fun x4145 () Int)
(declare-fun x2528 () Bool)
(declare-fun x3139 () Int)
(declare-fun x4274 () Bool)
(declare-fun x2412 () Int)
(declare-fun x3756 () Int)
(declare-fun x3778 () Int)
(declare-fun x2135 () Bool)
(declare-fun x800 (Int) Int)
(declare-fun x2004 () Bool)
(declare-fun x4158 () Int)
(declare-fun x1642 () Int)
(declare-fun x1382 () Bool)
(declare-fun x449 () Bool)
(declare-fun x526 () Bool)
(declare-fun x4292 () Int)
(declare-fun x1679 () Int)
(declare-fun x1889 (Int) Int)
(declare-fun x4360 () Int)
(declare-fun x1758 () Int)
(declare-fun x2777 () Int)
(declare-fun x33 () Bool)
(declare-fun x732 () Int)
(declare-fun x2994 () Int)
(declare-fun x819 () Int)
(declare-fun x1020 () Int)
(declare-fun x4101 (Int) Int)
(declare-fun x2415 () Int)
(declare-fun x1592 () Int)
(declare-fun x3887 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x3941 () Int)
(declare-fun x2208 () Int)
(declare-fun x875 () Bool)
(declare-fun x2295 () Int)
(declare-fun x2996 () Int)
(declare-fun x1132 () Int)
(declare-fun x870 () Bool)
(declare-fun x669 () Int)
(declare-fun x3755 () Int)
(declare-fun x4280 () Int)
(declare-fun x1963 () Bool)
(declare-fun x3389 () Int)
(declare-fun x1848 () Bool)
(declare-fun x731 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x116 () Int)
(declare-fun x3802 () Bool)
(declare-fun x2795 () Int)
(declare-fun x1301 () Int)
(declare-fun x356 () Bool)
(define-fun x1304 ((x4294 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4294) (>= x4294 0)) x4294 (- x4294 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3747 ((x4294 Int)) Int (ite (and (< x4294 0) (>= x4294 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x4294 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4294))
(define-fun x3185 ((x194 Int)) Bool (and (>= x194 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x194)))
(define-fun x1565 ((x194 Int)) Bool (and (= (x4191 x194 115792089237316195423570985008687907853269984665640564039457584007913129639935) x194) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639935 x194) x194)))
(define-fun x564 ((x194 Int)) Bool (and (= 0 (x4191 x194 0)) (= (x4191 0 x194) 0)))
(define-fun x4162 ((x194 Int)) Bool (= (x4191 x194 x194) x194))
(define-fun x2097 ((x194 Int)) Bool (and (x4162 x194) (x1565 x194) (x564 x194)))
(define-fun x1669 ((x194 Int) (x1054 Int)) Bool (= (x4191 x194 x1054) (x4191 x1054 x194)))
(define-fun x599 ((x194 Int) (x1054 Int)) Bool (and (=> (>= x194 0) (>= x194 (x4191 x194 x1054))) (<= 0 (x4191 x194 x1054)) (=> (>= x1054 0) (<= (x4191 x194 x1054) x1054))))
(define-fun x2137 ((x194 Int) (x1054 Int)) Bool (and (x599 x194 x1054) (x1669 x194 x1054)))
(define-fun x3481 ((x194 Int)) Bool (= (mod x194 256) (x4191 x194 255)))
(define-fun x3724 ((x194 Int)) Bool (and (x3481 x194) (x2137 x194 255)))
(define-fun x4339 ((x194 Int)) Bool (= (x4191 x194 1) (mod x194 2)))
(define-fun x2187 ((x194 Int)) Bool (and (x4339 x194) (x2137 x194 1)))
(define-fun x949 ((x194 Int)) Bool (= (mod x194 128) (x4191 x194 127)))
(define-fun x1576 ((x194 Int)) Bool (and (x949 x194) (x2137 x194 127)))
(define-fun x1945 ((x194 Int)) Bool (= (+ (mod x194 256) (x4191 x194 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (mod x194 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3212 ((x194 Int)) Bool (and (x2137 x194 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1945 x194)))
(define-fun x3735 ((x194 Int)) Bool (= (+ (x4191 x194 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x194 32)) (mod x194 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3638 ((x194 Int)) Bool (and (x2137 x194 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3735 x194)))
(define-fun x331 ((x1481 Int)) Int 0)
(define-fun x2999 ((x1481 Int)) Int 0)
(define-fun x2174 ((x1481 Int)) Int 0)
(define-fun x2634 ((x1481 Int)) Int 0)
(define-fun x1163 ((x1481 Int)) Int 0)
(define-fun x1030 ((x1481 Int)) Int 0)
(define-fun x926 ((x1481 Int)) Int 0)
(define-fun x983 ((x1481 Int)) Int (ite (> x2067 x1481) (x4297 x1481) 0))
(define-fun x575 ((x1481 Int)) Int (ite (< x1481 x3211) (x426 x1481) 0))
(define-fun x3752 ((x1481 Int)) Int (ite (< x1481 x4143) (x3929 x1481) 0))
(define-fun x2141 ((x1481 Int)) Int (ite (> x4303 x1481) (x2081 x1481) 0))
(define-fun x4369 ((x1481 Int)) Int (ite (> x2919 x1481) (x3730 x1481) 0))
(define-fun x4238 ((x1481 Int)) Int (ite (< x1481 x4071) (x612 x1481) 0))
(define-fun x2317 ((x1481 Int)) Int (ite (> x577 x1481) (x296 x1481) 0))
(define-fun x3169 ((x1481 Int)) Int (ite (> x3591 x1481) (x2397 x1481) 0))
(define-fun x508 ((x1481 Int)) Int (ite (> x3597 x1481) (x3835 x1481) 0))
(define-fun x2670 ((x1481 Int)) Int (ite (< x1481 x1638) (x3784 x1481) 0))
(define-fun x3997 ((x1481 Int)) Int (ite (> x3376 x1481) (x3718 x1481) 0))
(define-fun x3748 ((x1481 Int)) Int (ite (> x642 x1481) (x2472 x1481) 0))
(define-fun x3276 ((x1481 Int)) Int (ite (> x456 x1481) (x1680 x1481) 0))
(define-fun x3673 ((x1481 Int)) Int (ite (> x1363 x1481) (x195 x1481) 0))
(define-fun x1457 ((x1481 Int)) Int 0)
(define-fun x3598 ((x1481 Int)) Int 0)
(define-fun x2664 ((x1481 Int)) Int 0)
(define-fun x2907 ((x1481 Int)) Int 0)
(define-fun x3849 ((x1481 Int)) Int 0)
(define-fun x1065 ((x1481 Int)) Int 0)
(define-fun x475 ((x1481 Int)) Int 0)
(define-fun x3327 ((x1481 Int)) Int 0)
(define-fun x2298 ((x1481 Int)) Int 0)
(define-fun x922 ((x1481 Int)) Int 0)
(define-fun x709 ((x1481 Int)) Int 0)
(define-fun x2867 ((x1481 Int)) Int 0)
(define-fun x3558 ((x1481 Int)) Int 0)
(define-fun x1657 ((x1481 Int)) Int 0)
(define-fun x1910 ((x1481 Int)) Int 0)
(define-fun x3398 ((x1481 Int)) Int 0)
(define-fun x4273 ((x1481 Int)) Int 0)
(define-fun x3088 ((x1481 Int)) Int 0)
(define-fun x3972 ((x1481 Int)) Int 0)
(define-fun x3030 ((x1481 Int)) Int 0)
(define-fun x370 ((x1481 Int)) Int 0)
(define-fun x3178 ((x1481 Int)) Int 0)
(define-fun x3330 ((x1481 Int)) Int 0)
(define-fun x2481 ((x1481 Int)) Int 0)
(define-fun x4166 ((x1481 Int)) Int 0)
(define-fun x1570 ((x1481 Int)) Int 0)
(define-fun x1402 ((x1481 Int)) Int 0)
(define-fun x3810 ((x1481 Int)) Int 0)
(define-fun x4110 ((x1481 Int)) Int 0)
(define-fun x751 ((x1481 Int)) Int 0)
(define-fun x4167 ((x1481 Int)) Int 0)
(define-fun x352 ((x1481 Int)) Int 0)
(define-fun x670 ((x1481 Int)) Int 0)
(define-fun x2748 ((x1481 Int)) Int 0)
(define-fun x1687 ((x1481 Int)) Int 0)
(define-fun x781 ((x1481 Int)) Int 0)
(define-fun x140 ((x1481 Int)) Int 0)
(define-fun x978 ((x1481 Int)) Int 0)
(define-fun x2659 ((x1481 Int)) Int 0)
(define-fun x1612 ((x1481 Int)) Int 0)
(define-fun x3445 ((x1481 Int)) Int 0)
(define-fun x849 ((x1481 Int)) Int 0)
(define-fun x2549 ((x1481 Int)) Int 0)
(define-fun x2574 ((x1481 Int)) Int 0)
(define-fun x786 ((x1481 Int)) Int 0)
(define-fun x1190 ((x1481 Int)) Int 0)
(define-fun x2786 ((x1481 Int)) Int 0)
(define-fun x384 ((x1481 Int)) Int 0)
(define-fun x1025 ((x1481 Int)) Int 0)
(define-fun x3038 ((x1481 Int)) Int 0)
(define-fun x4033 ((x1481 Int)) Int 0)
(define-fun x856 ((x1481 Int)) Int 0)
(define-fun x4347 ((x1481 Int)) Int 0)
(define-fun x374 ((x1481 Int)) Int 0)
(define-fun x4214 ((x1481 Int)) Int 0)
(define-fun x3685 ((x1481 Int)) Int 0)
(define-fun x865 ((x1481 Int)) Int 0)
(define-fun x2417 ((x1481 Int)) Int 0)
(define-fun x2796 ((x1481 Int)) Int 0)
(define-fun x879 ((x1481 Int)) Int 0)
(define-fun x2326 ((x1481 Int)) Int 0)
(define-fun x859 ((x1481 Int)) Int 0)
(define-fun x2053 ((x1481 Int)) Int 0)
(define-fun x1480 ((x1481 Int)) Int 0)
(define-fun x1399 ((x1481 Int)) Int 0)
(define-fun x3947 ((x1481 Int)) Int 0)
(define-fun x1131 ((x1481 Int)) Int 0)
(define-fun x58 ((x1481 Int)) Int 0)
(define-fun x2410 ((x1481 Int)) Int 0)
(define-fun x341 ((x1481 Int)) Int 0)
(define-fun x2213 ((x1481 Int)) Int 0)
(define-fun x2882 ((x1481 Int)) Int 0)
(define-fun x2970 ((x1481 Int)) Int 0)
(define-fun x406 ((x1481 Int)) Int 0)
(define-fun x28 ((x1481 Int)) Int 0)
(define-fun x1123 ((x1481 Int)) Int 0)
(define-fun x4005 ((x1481 Int)) Int 0)
(define-fun x24 ((x1481 Int)) Int 0)
(define-fun x1320 ((x1481 Int)) Int 0)
(define-fun x761 ((x1481 Int)) Int 0)
(define-fun x1992 ((x1481 Int)) Int 0)
(define-fun x1324 ((x1481 Int)) Int 0)
(define-fun x3770 ((x1481 Int)) Int 0)
(define-fun x1177 ((x1481 Int)) Int 0)
(define-fun x3436 ((x1481 Int)) Int 0)
(define-fun x3239 ((x1481 Int)) Int 0)
(define-fun x429 ((x1481 Int)) Int 0)
(define-fun x95 ((x1481 Int)) Int 0)
(define-fun x118 ((x1481 Int)) Int 0)
(define-fun x1659 ((x1481 Int)) Int 0)
(define-fun x3564 ((x1481 Int)) Int 0)
(define-fun x3815 ((x1481 Int)) Int 0)
(define-fun x4333 ((x1481 Int)) Int 0)
(define-fun x494 ((x1481 Int)) Int 0)
(define-fun x1605 ((x1481 Int)) Int 0)
(define-fun x182 ((x1481 Int)) Int 0)
(define-fun x1014 ((x1481 Int)) Int 0)
(define-fun x479 ((x1481 Int)) Int 0)
(define-fun x1877 ((x1481 Int)) Int 0)
(define-fun x3032 ((x1481 Int)) Int 0)
(define-fun x4342 ((x1481 Int)) Int 0)
(define-fun x3904 ((x1481 Int)) Int 0)
(define-fun x3728 ((x1481 Int)) Int 0)
(define-fun x3391 ((x1481 Int)) Int (ite (= x4116 x1481) x1286 (x3297 x1481)))
(define-fun x3579 ((x1481 Int)) Int (ite (= x1481 x1482) x3684 (x3391 x1481)))
(define-fun x1239 ((x1481 Int)) Int 0)
(define-fun x996 ((x1481 Int)) Int (ite (= 128 x1481) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x3972 x1481)))
(define-fun x3520 ((x1481 Int)) Int (ite (= 132 x1481) x1080 (x996 x1481)))
(define-fun x1710 ((x1481 Int)) Int (ite (= 0 x1481) x640 (x591 x1481)))
(define-fun x937 ((x1481 Int)) Int (ite (= x1481 0) x3948 (x591 x1481)))
(define-fun x652 ((x1481 Int)) Int (ite (= x1481 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x3445 x1481)))
(define-fun x2037 ((x1481 Int)) Int (ite (= 132 x1481) x1474 (x652 x1481)))
(define-fun x948 ((x1481 Int)) Int (ite (= x1481 0) x1236 (x800 x1481)))
(define-fun x3084 ((x1481 Int)) Int (ite (= x1481 128) x1236 (x2037 x1481)))
(define-fun x3851 ((x1481 Int)) Int (ite (= x1481 4) 17 (x118 x1481)))
(define-fun x3335 ((x1481 Int)) Int (ite (and (> 36 x1481) (>= x1481 0)) (x3851 x1481) (x800 x1481)))
(define-fun x3949 ((x1481 Int)) Int (ite (= 0 x1481) x2745 (x800 x1481)))
(define-fun x4225 ((x1481 Int)) Int (ite (= x1481 128) x2745 (x2037 x1481)))
(define-fun x831 ((x1481 Int)) Int (ite x845 (ite x2528 (x12 x1481) (x2554 x1481)) (ite x1215 (ite x2528 (x12 x1481) (x2554 x1481)) (x2554 x1481))))
(define-fun x138 ((x1481 Int)) Int (ite x1229 (x2554 x1481) (ite x1788 (x2554 x1481) (x831 x1481))))
(define-fun x697 ((x1481 Int)) Int (ite x3891 (ite x2254 (x2554 x1481) (x138 x1481)) (x2554 x1481)))
(define-fun x1519 ((x1481 Int)) Int (ite x3363 (ite x3363 (x697 x1481) (x2554 x1481)) (x1953 x1481)))
(define-fun x2290 ((x1481 Int)) Int (ite x3034 (x2554 x1481) (ite x2396 (x2554 x1481) (ite x3062 (x2554 x1481) (ite x2708 (x2554 x1481) (ite x3533 (x2554 x1481) (ite x1615 (x2554 x1481) (ite x477 (x2554 x1481) (ite x3005 (x2554 x1481) (ite x292 (x2554 x1481) (ite x4330 (x2554 x1481) (ite x2579 (x2554 x1481) (ite x4334 (x2554 x1481) (ite x1792 (x2554 x1481) (ite x3363 (ite x3363 (x1519 x1481) (x2554 x1481)) (x2554 x1481))))))))))))))))
(define-fun x2731 ((x1481 Int)) Int (x2290 x1481))
(define-fun x1871 ((x1481 Int)) Int (ite x845 (ite x2528 (x1601 x1481) (x2353 x1481)) (ite x1215 (ite x2528 (x1601 x1481) (x2353 x1481)) (x2353 x1481))))
(define-fun x848 ((x1481 Int)) Int (ite x1229 (x2353 x1481) (ite x1788 (x2353 x1481) (x1871 x1481))))
(define-fun x2126 ((x1481 Int)) Int (ite x3891 (ite x2254 (x2353 x1481) (x848 x1481)) (x2353 x1481)))
(define-fun x3895 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2126 x1481) (x2353 x1481)) (x3819 x1481)))
(define-fun x3397 ((x1481 Int)) Int (ite x3034 (x2353 x1481) (ite x2396 (x2353 x1481) (ite x3062 (x2353 x1481) (ite x2708 (x2353 x1481) (ite x3533 (x2353 x1481) (ite x1615 (x2353 x1481) (ite x477 (x2353 x1481) (ite x3005 (x2353 x1481) (ite x292 (x2353 x1481) (ite x4330 (x2353 x1481) (ite x2579 (x2353 x1481) (ite x4334 (x2353 x1481) (ite x1792 (x2353 x1481) (ite x3363 (ite x3363 (x3895 x1481) (x2353 x1481)) (x2353 x1481))))))))))))))))
(define-fun x3089 ((x1481 Int)) Int (x3397 x1481))
(define-fun x1650 ((x1481 Int)) Int (ite x845 (ite x2528 (x1900 x1481) (x1019 x1481)) (ite x1215 (ite x2528 (x1900 x1481) (x1019 x1481)) (x1019 x1481))))
(define-fun x2501 ((x1481 Int)) Int (ite x1229 (x1019 x1481) (ite x1788 (x1019 x1481) (x1650 x1481))))
(define-fun x3361 ((x1481 Int)) Int (ite x3891 (ite x2254 (x1019 x1481) (x2501 x1481)) (x1019 x1481)))
(define-fun x2005 ((x1481 Int)) Int (ite x3363 (ite x3363 (x3361 x1481) (x1019 x1481)) (x862 x1481)))
(define-fun x239 ((x1481 Int)) Int (ite x3034 (x1019 x1481) (ite x2396 (x1019 x1481) (ite x3062 (x1019 x1481) (ite x2708 (x1019 x1481) (ite x3533 (x1019 x1481) (ite x1615 (x1019 x1481) (ite x477 (x1019 x1481) (ite x3005 (x1019 x1481) (ite x292 (x1019 x1481) (ite x4330 (x1019 x1481) (ite x2579 (x1019 x1481) (ite x4334 (x1019 x1481) (ite x1792 (x1019 x1481) (ite x3363 (ite x3363 (x2005 x1481) (x1019 x1481)) (x1019 x1481))))))))))))))))
(define-fun x485 ((x1481 Int)) Int (x239 x1481))
(define-fun x122 ((x1481 Int)) Int (ite x3363 (x463 x1481) (x482 x1481)))
(define-fun x4354 ((x1481 Int)) Int (ite x3034 (x463 x1481) (ite x2396 (x463 x1481) (ite x3062 (x463 x1481) (ite x2708 (x463 x1481) (ite x3533 (x463 x1481) (ite x1615 (x463 x1481) (ite x477 (x463 x1481) (ite x3005 (x463 x1481) (ite x292 (x463 x1481) (ite x4330 (x463 x1481) (ite x2579 (x463 x1481) (ite x4334 (x463 x1481) (ite x1792 (x463 x1481) (ite x3363 (ite x3363 (x122 x1481) (x463 x1481)) (x463 x1481))))))))))))))))
(define-fun x3162 ((x1481 Int)) Int (x4354 x1481))
(define-fun x2868 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2269 ((x1481 Int)) Int (ite x845 (ite x2528 (x1775 x1481) (x873 x1481)) (ite x1215 (ite x2528 (x1775 x1481) (x873 x1481)) (x873 x1481))))
(define-fun x1568 ((x1481 Int)) Int (ite x1229 (x873 x1481) (ite x1788 (x873 x1481) (x2269 x1481))))
(define-fun x594 ((x1481 Int)) Int (ite x3891 (ite x2254 (x873 x1481) (x1568 x1481)) (x873 x1481)))
(define-fun x3381 ((x1481 Int)) Int (ite x3363 (ite x3363 (x594 x1481) (x873 x1481)) (x3004 x1481)))
(define-fun x512 ((x1481 Int)) Int (ite x3034 (x873 x1481) (ite x2396 (x873 x1481) (ite x3062 (x873 x1481) (ite x2708 (x873 x1481) (ite x3533 (x873 x1481) (ite x1615 (x873 x1481) (ite x477 (x873 x1481) (ite x3005 (x873 x1481) (ite x292 (x873 x1481) (ite x4330 (x873 x1481) (ite x2579 (x873 x1481) (ite x4334 (x873 x1481) (ite x1792 (x873 x1481) (ite x3363 (ite x3363 (x3381 x1481) (x873 x1481)) (x873 x1481))))))))))))))))
(define-fun x624 ((x1481 Int)) Int (x512 x1481))
(define-fun x3869 ((x1481 Int)) Int (ite x845 (ite x2528 (x3632 x1481) (x826 x1481)) (ite x1215 (ite x2528 (x3632 x1481) (x826 x1481)) (x826 x1481))))
(define-fun x3184 ((x1481 Int)) Int (ite x1229 (x826 x1481) (ite x1788 (x826 x1481) (x3869 x1481))))
(define-fun x2981 ((x1481 Int)) Int (ite x3891 (ite x2254 (x826 x1481) (x3184 x1481)) (x826 x1481)))
(define-fun x918 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2981 x1481) (x826 x1481)) (x4013 x1481)))
(define-fun x895 ((x1481 Int)) Int (ite x3034 (x826 x1481) (ite x2396 (x826 x1481) (ite x3062 (x826 x1481) (ite x2708 (x826 x1481) (ite x3533 (x826 x1481) (ite x1615 (x826 x1481) (ite x477 (x826 x1481) (ite x3005 (x826 x1481) (ite x292 (x826 x1481) (ite x4330 (x826 x1481) (ite x2579 (x826 x1481) (ite x4334 (x826 x1481) (ite x1792 (x826 x1481) (ite x3363 (ite x3363 (x918 x1481) (x826 x1481)) (x826 x1481))))))))))))))))
(define-fun x1637 ((x1481 Int)) Int (x895 x1481))
(define-fun x2883 ((x1481 Int)) Int (x2618 x1481))
(define-fun x519 ((x1481 Int)) Int (ite x845 (ite x2528 (x4101 x1481) (x89 x1481)) (ite x1215 (ite x2528 (x4101 x1481) (x89 x1481)) (x89 x1481))))
(define-fun x1434 ((x1481 Int)) Int (ite x1229 (x89 x1481) (ite x1788 (x89 x1481) (x519 x1481))))
(define-fun x4244 ((x1481 Int)) Int (ite x3891 (ite x2254 (x89 x1481) (x1434 x1481)) (x89 x1481)))
(define-fun x984 ((x1481 Int)) Int (ite x3363 (ite x3363 (x4244 x1481) (x89 x1481)) (x1782 x1481)))
(define-fun x1908 ((x1481 Int)) Int (ite x3034 (x89 x1481) (ite x2396 (x89 x1481) (ite x3062 (x89 x1481) (ite x2708 (x89 x1481) (ite x3533 (x89 x1481) (ite x1615 (x89 x1481) (ite x477 (x89 x1481) (ite x3005 (x89 x1481) (ite x292 (x89 x1481) (ite x4330 (x89 x1481) (ite x2579 (x89 x1481) (ite x4334 (x89 x1481) (ite x1792 (x89 x1481) (ite x3363 (ite x3363 (x984 x1481) (x89 x1481)) (x89 x1481))))))))))))))))
(define-fun x1189 ((x1481 Int)) Int (x1908 x1481))
(define-fun x75 ((x1481 Int)) Int (x919 x1481))
(define-fun x1086 ((x1481 Int)) Int (x723 x1481))
(define-fun x2340 ((x1481 Int)) Int (ite (= x1481 x2448) 3 (x4118 x1481)))
(define-fun x2211 ((x1481 Int)) Int (ite x2277 (x4118 x1481) (x2340 x1481)))
(define-fun x2092 ((x1481 Int)) Int (ite x3891 (x4118 x1481) (ite x1658 (x2211 x1481) (ite x1684 (x2211 x1481) (x4118 x1481)))))
(define-fun x4104 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2092 x1481) (x2225 x1481)) (x4118 x1481)))
(define-fun x137 ((x1481 Int)) Int (ite x3034 (x4118 x1481) (ite x2396 (x4118 x1481) (ite x3062 (x4118 x1481) (ite x2708 (x4118 x1481) (ite x3533 (x4118 x1481) (ite x1615 (x4118 x1481) (ite x477 (x4118 x1481) (ite x3005 (x4118 x1481) (ite x292 (x4118 x1481) (ite x4330 (x4118 x1481) (ite x2579 (x4118 x1481) (ite x4334 (x4118 x1481) (ite x1792 (x4118 x1481) (ite x3363 (ite x3363 (x4104 x1481) (x4118 x1481)) (x4118 x1481))))))))))))))))
(define-fun x3372 ((x1481 Int)) Int (x137 x1481))
(define-fun x576 ((x1481 Int)) Int (x1197 x1481))
(define-fun x1855 ((x1481 Int)) Int (ite x845 (ite x2528 (x1230 x1481) (x2516 x1481)) (ite x1215 (ite x2528 (x1230 x1481) (x2516 x1481)) (x2516 x1481))))
(define-fun x1378 ((x1481 Int)) Int (ite x1229 (x2516 x1481) (ite x1788 (x2516 x1481) (x1855 x1481))))
(define-fun x2884 ((x1481 Int)) Int (ite x3891 (ite x2254 (x2516 x1481) (x1378 x1481)) (x2516 x1481)))
(define-fun x284 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2884 x1481) (x2516 x1481)) (x2615 x1481)))
(define-fun x1170 ((x1481 Int)) Int (ite x3034 (x2516 x1481) (ite x2396 (x2516 x1481) (ite x3062 (x2516 x1481) (ite x2708 (x2516 x1481) (ite x3533 (x2516 x1481) (ite x1615 (x2516 x1481) (ite x477 (x2516 x1481) (ite x3005 (x2516 x1481) (ite x292 (x2516 x1481) (ite x4330 (x2516 x1481) (ite x2579 (x2516 x1481) (ite x4334 (x2516 x1481) (ite x1792 (x2516 x1481) (ite x3363 (ite x3363 (x284 x1481) (x2516 x1481)) (x2516 x1481))))))))))))))))
(define-fun x4345 ((x1481 Int)) Int (x1170 x1481))
(define-fun x3131 ((x1481 Int)) Int (x2496 x1481))
(define-fun x835 ((x1481 Int)) Int (ite x845 (ite x2528 (x2743 x1481) (x828 x1481)) (ite x1215 (ite x2528 (x2743 x1481) (x828 x1481)) (x828 x1481))))
(define-fun x3066 ((x1481 Int)) Int (ite x1229 (x828 x1481) (ite x1788 (x828 x1481) (x835 x1481))))
(define-fun x2939 ((x1481 Int)) Int (ite x3891 (ite x2254 (x828 x1481) (x3066 x1481)) (x828 x1481)))
(define-fun x3899 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2939 x1481) (x828 x1481)) (x3254 x1481)))
(define-fun x368 ((x1481 Int)) Int (ite x3034 (x828 x1481) (ite x2396 (x828 x1481) (ite x3062 (x828 x1481) (ite x2708 (x828 x1481) (ite x3533 (x828 x1481) (ite x1615 (x828 x1481) (ite x477 (x828 x1481) (ite x3005 (x828 x1481) (ite x292 (x828 x1481) (ite x4330 (x828 x1481) (ite x2579 (x828 x1481) (ite x4334 (x828 x1481) (ite x1792 (x828 x1481) (ite x3363 (ite x3363 (x3899 x1481) (x828 x1481)) (x828 x1481))))))))))))))))
(define-fun x1802 ((x1481 Int)) Int (x368 x1481))
(define-fun x2279 ((x1481 Int)) Int (ite x845 (ite x2528 (x779 x1481) (x4209 x1481)) (ite x1215 (ite x2528 (x779 x1481) (x4209 x1481)) (x4209 x1481))))
(define-fun x2846 ((x1481 Int)) Int (ite x1229 (x4209 x1481) (ite x1788 (x4209 x1481) (x2279 x1481))))
(define-fun x3850 ((x1481 Int)) Int (ite x3891 (ite x2254 (x4209 x1481) (x2846 x1481)) (x4209 x1481)))
(define-fun x4382 ((x1481 Int)) Int (ite x3363 (ite x3363 (x3850 x1481) (x4209 x1481)) (x537 x1481)))
(define-fun x1619 ((x1481 Int)) Int (ite x3034 (x4209 x1481) (ite x2396 (x4209 x1481) (ite x3062 (x4209 x1481) (ite x2708 (x4209 x1481) (ite x3533 (x4209 x1481) (ite x1615 (x4209 x1481) (ite x477 (x4209 x1481) (ite x3005 (x4209 x1481) (ite x292 (x4209 x1481) (ite x4330 (x4209 x1481) (ite x2579 (x4209 x1481) (ite x4334 (x4209 x1481) (ite x1792 (x4209 x1481) (ite x3363 (ite x3363 (x4382 x1481) (x4209 x1481)) (x4209 x1481))))))))))))))))
(define-fun x1586 ((x1481 Int)) Int (x1619 x1481))
(define-fun x1693 ((x1481 Int)) Int (ite x845 (ite x2528 (x2703 x1481) (x2758 x1481)) (ite x1215 (ite x2528 (x2703 x1481) (x2758 x1481)) (x2758 x1481))))
(define-fun x4091 ((x1481 Int)) Int (ite x1229 (x2758 x1481) (ite x1788 (x2758 x1481) (x1693 x1481))))
(define-fun x802 ((x1481 Int)) Int (ite x3891 (ite x2254 (x2758 x1481) (x4091 x1481)) (x2758 x1481)))
(define-fun x1103 ((x1481 Int)) Int (ite x3363 (ite x3363 (x802 x1481) (x2758 x1481)) (x386 x1481)))
(define-fun x2373 ((x1481 Int)) Int (ite x3034 (x2758 x1481) (ite x2396 (x2758 x1481) (ite x3062 (x2758 x1481) (ite x2708 (x2758 x1481) (ite x3533 (x2758 x1481) (ite x1615 (x2758 x1481) (ite x477 (x2758 x1481) (ite x3005 (x2758 x1481) (ite x292 (x2758 x1481) (ite x4330 (x2758 x1481) (ite x2579 (x2758 x1481) (ite x4334 (x2758 x1481) (ite x1792 (x2758 x1481) (ite x3363 (ite x3363 (x1103 x1481) (x2758 x1481)) (x2758 x1481))))))))))))))))
(define-fun x691 ((x1481 Int)) Int (x2373 x1481))
(define-fun x3610 ((x1481 Int)) Int (ite x845 (ite x2528 (x3450 x1481) (x942 x1481)) (ite x1215 (ite x2528 (x3450 x1481) (x942 x1481)) (x942 x1481))))
(define-fun x2813 ((x1481 Int)) Int (ite x1229 (x942 x1481) (ite x1788 (x942 x1481) (x3610 x1481))))
(define-fun x2015 ((x1481 Int)) Int (ite x3891 (ite x2254 (x942 x1481) (x2813 x1481)) (x942 x1481)))
(define-fun x3779 ((x1481 Int)) Int (ite x3363 (ite x3363 (x2015 x1481) (x942 x1481)) (x3945 x1481)))
(define-fun x2514 ((x1481 Int)) Int (ite x3034 (x942 x1481) (ite x2396 (x942 x1481) (ite x3062 (x942 x1481) (ite x2708 (x942 x1481) (ite x3533 (x942 x1481) (ite x1615 (x942 x1481) (ite x477 (x942 x1481) (ite x3005 (x942 x1481) (ite x292 (x942 x1481) (ite x4330 (x942 x1481) (ite x2579 (x942 x1481) (ite x4334 (x942 x1481) (ite x1792 (x942 x1481) (ite x3363 (ite x3363 (x3779 x1481) (x942 x1481)) (x942 x1481))))))))))))))))
(define-fun x3013 ((x1481 Int)) Int (x2514 x1481))
(define-fun x3156 ((x1481 Int)) Int (ite x3363 (ite x3363 (x4088 x1481) (x3503 x1481)) (x4088 x1481)))
(define-fun x3257 ((x1481 Int)) Int (ite x3034 (x4088 x1481) (ite x2396 (x4088 x1481) (ite x3062 (x4088 x1481) (ite x2708 (x4088 x1481) (ite x3533 (x4088 x1481) (ite x1615 (x4088 x1481) (ite x477 (x4088 x1481) (ite x3005 (x4088 x1481) (ite x292 (x4088 x1481) (ite x4330 (x4088 x1481) (ite x2579 (x4088 x1481) (ite x4334 (x4088 x1481) (ite x1792 (x4088 x1481) (ite x3363 (ite x3363 (x3156 x1481) (x4088 x1481)) (x4088 x1481))))))))))))))))
(define-fun x915 ((x1481 Int)) Int (x3257 x1481))
(define-fun x1918 ((x1481 Int)) Int (x3028 x1481))
(define-fun x2342 ((x1481 Int)) Int (ite x845 (ite x2528 (x3495 x1481) (x866 x1481)) (ite x1215 (ite x2528 (x3495 x1481) (x866 x1481)) (x866 x1481))))
(define-fun x3990 ((x1481 Int)) Int (ite x1229 (x866 x1481) (ite x1788 (x866 x1481) (x2342 x1481))))
(define-fun x3142 ((x1481 Int)) Int (ite x3891 (ite x2254 (x866 x1481) (x3990 x1481)) (x866 x1481)))
(define-fun x4306 ((x1481 Int)) Int (ite x3363 (ite x3363 (x3142 x1481) (x866 x1481)) (x2131 x1481)))
(define-fun x282 ((x1481 Int)) Int (ite x3034 (x866 x1481) (ite x2396 (x866 x1481) (ite x3062 (x866 x1481) (ite x2708 (x866 x1481) (ite x3533 (x866 x1481) (ite x1615 (x866 x1481) (ite x477 (x866 x1481) (ite x3005 (x866 x1481) (ite x292 (x866 x1481) (ite x4330 (x866 x1481) (ite x2579 (x866 x1481) (ite x4334 (x866 x1481) (ite x1792 (x866 x1481) (ite x3363 (ite x3363 (x4306 x1481) (x866 x1481)) (x866 x1481))))))))))))))))
(define-fun x4004 ((x1481 Int)) Int (x282 x1481))
(define-fun x3762 ((x1481 Int)) Int (ite x845 (ite x2528 (x1889 x1481) (x3101 x1481)) (ite x1215 (ite x2528 (x1889 x1481) (x3101 x1481)) (x3101 x1481))))
(define-fun x3623 ((x1481 Int)) Int (ite x1229 (x3101 x1481) (ite x1788 (x3101 x1481) (x3762 x1481))))
(define-fun x646 ((x1481 Int)) Int (ite x3891 (ite x2254 (x3101 x1481) (x3623 x1481)) (x3101 x1481)))
(define-fun x503 ((x1481 Int)) Int (ite x3363 (ite x3363 (x646 x1481) (x3101 x1481)) (x2363 x1481)))
(define-fun x3727 ((x1481 Int)) Int (ite x3034 (x3101 x1481) (ite x2396 (x3101 x1481) (ite x3062 (x3101 x1481) (ite x2708 (x3101 x1481) (ite x3533 (x3101 x1481) (ite x1615 (x3101 x1481) (ite x477 (x3101 x1481) (ite x3005 (x3101 x1481) (ite x292 (x3101 x1481) (ite x4330 (x3101 x1481) (ite x2579 (x3101 x1481) (ite x4334 (x3101 x1481) (ite x1792 (x3101 x1481) (ite x3363 (ite x3363 (x503 x1481) (x3101 x1481)) (x3101 x1481))))))))))))))))
(define-fun x1692 ((x1481 Int)) Int (x3727 x1481))
(define-fun x906 ((x1481 Int)) Int (ite x845 (ite x2528 (x1960 x1481) (x2246 x1481)) (ite x1215 (ite x2528 (x1960 x1481) (x2246 x1481)) (x2246 x1481))))
(define-fun x4212 ((x1481 Int)) Int (ite x1229 (x2246 x1481) (ite x1788 (x2246 x1481) (x906 x1481))))
(define-fun x257 ((x1481 Int)) Int (ite x3891 (ite x2254 (x2246 x1481) (x4212 x1481)) (x2246 x1481)))
(define-fun x47 ((x1481 Int)) Int (ite x3363 (ite x3363 (x257 x1481) (x2246 x1481)) (x4362 x1481)))
(define-fun x3921 ((x1481 Int)) Int (ite x3034 (x2246 x1481) (ite x2396 (x2246 x1481) (ite x3062 (x2246 x1481) (ite x2708 (x2246 x1481) (ite x3533 (x2246 x1481) (ite x1615 (x2246 x1481) (ite x477 (x2246 x1481) (ite x3005 (x2246 x1481) (ite x292 (x2246 x1481) (ite x4330 (x2246 x1481) (ite x2579 (x2246 x1481) (ite x4334 (x2246 x1481) (ite x1792 (x2246 x1481) (ite x3363 (ite x3363 (x47 x1481) (x2246 x1481)) (x2246 x1481))))))))))))))))
(define-fun x444 ((x1481 Int)) Int (x3921 x1481))
(define-fun x2663 ((x1481 Int)) Int (ite (= x1481 x1482) x505 (x3579 x1481)))
(define-fun x3282 ((x1481 Int)) Int (ite (= x3940 x1481) x1491 (x2663 x1481)))
(define-fun x2571 ((x1481 Int)) Int (ite (= x1481 x1482) x1653 (x3282 x1481)))
(define-fun x1882 ((x1481 Int)) Int (ite (= x616 x1481) x1420 (x2571 x1481)))
(define-fun x2267 ((x1481 Int)) Int (ite x2528 (x2309 x1481) (x1882 x1481)))
(define-fun x4043 ((x1481 Int)) Int (ite (= x616 x1481) x1758 (x2267 x1481)))
(define-fun x2856 ((x1481 Int)) Int (ite (= x1482 x1481) x2559 (x4043 x1481)))
(define-fun x2288 ((x1481 Int)) Int (ite (= x1481 x977) x3109 (x3282 x1481)))
(define-fun x3729 ((x1481 Int)) Int (ite (= x4280 x1481) x2596 (x2288 x1481)))
(define-fun x2426 ((x1481 Int)) Int (ite (= x1482 x1481) x4231 (x3729 x1481)))
(define-fun x4122 ((x1481 Int)) Int (ite (= x1481 x1277) x3674 (x2426 x1481)))
(define-fun x803 ((x1481 Int)) Int (ite (= x1481 x1277) x2055 (x4122 x1481)))
(define-fun x2774 ((x1481 Int)) Int (ite (= x1481 x1482) x3103 (x803 x1481)))
(define-fun x1993 ((x1481 Int)) Int (ite x2277 (x3729 x1481) (ite x805 (x4122 x1481) (ite x590 (x2774 x1481) (x3729 x1481)))))
(define-fun x659 ((x1481 Int)) Int (ite (= x4280 x1481) x1585 (x1993 x1481)))
(define-fun x2027 ((x1481 Int)) Int (ite (= x977 x1481) x529 (x659 x1481)))
(define-fun x198 ((x1481 Int)) Int (ite x3034 (x3282 x1481) (ite x2396 (x3282 x1481) (ite x3062 (x3282 x1481) (ite x2708 (x3282 x1481) (ite x3533 (x3282 x1481) (ite x1615 (x3282 x1481) (ite x477 (x3282 x1481) (ite x3005 (x3282 x1481) (ite x292 (x3282 x1481) (ite x4330 (x3282 x1481) (ite x2579 (x3282 x1481) (ite x4334 (x3282 x1481) (ite x1792 (x3282 x1481) (ite x3363 (ite x3363 (ite x3363 (ite x3363 (ite x3891 (ite x2254 (x3282 x1481) (ite x1229 (x3282 x1481) (ite x1788 (x3282 x1481) (ite x845 (x2267 x1481) (ite x1215 (x2856 x1481) (x3282 x1481)))))) (ite x1658 (x1993 x1481) (ite x1684 (x2027 x1481) (x3282 x1481)))) (x3282 x1481)) (x3282 x1481)) (x3282 x1481)) (x3282 x1481))))))))))))))))
(define-fun x3366 ((x1481 Int)) Int (ite (= x3940 x1481) x2359 (x198 x1481)))
(define-fun x3016 ((x1481 Int)) Int (ite (= x1482 x1481) x428 (x3366 x1481)))
(define-fun x3272 ((x1481 Int)) Int (ite x2949 (x198 x1481) (x3016 x1481)))
(define-fun x1454 ((x1481 Int)) Int (ite x302 (x3084 x1481) (ite x596 (x2037 x1481) (x4225 x1481))))
(define-fun x3917 ((x1481 Int)) Int (ite (= x1481 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x1454 x1481)))
(define-fun x2722 ((x1481 Int)) Int (ite (= 164 x1481) x1482 (x3917 x1481)))
(define-fun x4267 ((x1481 Int)) Int (ite (= x1481 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x2722 x1481)))
(define-fun x4357 ((x1481 Int)) Int (ite (= x1481 164) x2756 (x4267 x1481)))
(define-fun x1506 ((x1481 Int)) Int 0)
(define-fun x4288 ((x1481 Int)) Int (ite (= 128 x1481) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x1025 x1481)))
(define-fun x488 ((x1481 Int)) Int (ite (= 132 x1481) x3389 (x4288 x1481)))
(define-fun x3743 ((x1481 Int)) Int (ite (= 164 x1481) 128 (x488 x1481)))
(define-fun x3613 ((x1481 Int)) Int (ite (= 260 x1481) x1592 (x3743 x1481)))
(define-fun x3048 ((x1481 Int)) Int (ite (= 292 x1481) x2109 (x3613 x1481)))
(define-fun x1350 ((x1481 Int)) Int (ite (= 292 x1481) x501 (x3613 x1481)))
(define-fun x3661 ((x1481 Int)) Int (ite (= x1481 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1025 x1481)))
(define-fun x2532 ((x1481 Int)) Int (ite (= x1481 132) x3567 (x3661 x1481)))
(define-fun x1630 ((x1481 Int)) Int (ite (= x1481 164) x3065 (x2532 x1481)))
(define-fun x250 ((x1481 Int)) Int (ite (= x1481 196) x2525 (x1630 x1481)))
(define-fun x4227 ((x1481 Int)) Int (ite (= x977 x1481) x1035 (x3272 x1481)))
(define-fun x2706 ((x1481 Int)) Int (ite (= x1481 x3668) x4056 (x4227 x1481)))
(define-fun x534 ((x1481 Int)) Int 0)
(define-fun x309 ((x1481 Int)) Int (ite (= 128 x1481) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1025 x1481)))
(define-fun x2168 ((x1481 Int)) Int (ite (= 132 x1481) x313 (x309 x1481)))
(define-fun x868 ((x1481 Int)) Int (ite (= x1482 x1481) x2242 (x3272 x1481)))
(define-fun x827 ((x1481 Int)) Int (ite (= x313 x1481) x1921 (x868 x1481)))
(define-fun x3430 ((x1481 Int)) Int 0)
(define-fun x3517 ((x1481 Int)) Int (ite (= x1481 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2549 x1481)))
(define-fun x4217 ((x1481 Int)) Int (ite (= x1481 132) 32 (x3517 x1481)))
(define-fun x3035 ((x1481 Int)) Int (ite (= 164 x1481) 12 (x4217 x1481)))
(define-fun x1951 ((x1481 Int)) Int (ite (= x1481 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3035 x1481)))
(define-fun x333 ((x1481 Int)) Int (ite (and (< x1481 100) (<= 0 x1481)) (x1951 (+ 128 x1481)) (x586 x1481)))
(define-fun x4265 ((x1481 Int)) Int (ite (= 128 x1481) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1025 x1481)))
(define-fun x3494 ((x1481 Int)) Int (ite (= 132 x1481) x584 (x4265 x1481)))
(define-fun x4025 ((x1481 Int)) Int (ite (= x1481 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x1687 x1481)))
(define-fun x981 ((x1481 Int)) Int (ite (and (< x1481 4) (<= 0 x1481)) (x4025 (+ x1481 128)) (x658 x1481)))
(define-fun x4159 ((x1481 Int)) Int (ite (= 128 x1481) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1687 x1481)))
(define-fun x3700 ((x1481 Int)) Int (ite (= 132 x1481) 32 (x4159 x1481)))
(define-fun x3665 ((x1481 Int)) Int (ite (= 164 x1481) 12 (x3700 x1481)))
(define-fun x160 ((x1481 Int)) Int (ite (= x1481 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3665 x1481)))
(define-fun x2604 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 100)) (x160 (+ x1481 128)) (x658 x1481)))
(define-fun x3351 ((x1481 Int)) Int (ite (= 4 x1481) 17 (x1992 x1481)))
(define-fun x989 ((x1481 Int)) Int (ite (and (> 36 x1481) (>= x1481 0)) (x3351 x1481) (x1854 x1481)))
(define-fun x2282 ((x1481 Int)) Int (ite (= x1481 4) 17 (x1992 x1481)))
(define-fun x2386 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 36 x1481)) (x2282 x1481) (x1854 x1481)))
(define-fun x3411 ((x1481 Int)) Int (ite (= 4 x1481) 17 (x1992 x1481)))
(define-fun x3575 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 36)) (x3411 x1481) (x1854 x1481)))
(define-fun x2835 ((x1481 Int)) Int (ite (= 4 x1481) 34 (x1992 x1481)))
(define-fun x2322 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 36 x1481)) (x2835 x1481) (x1854 x1481)))
(define-fun x2771 ((x1481 Int)) Int (ite (= 0 x1481) x3539 (x1854 x1481)))
(define-fun x156 ((x1481 Int)) Int (ite (= 4 x1481) 17 (x1992 x1481)))
(define-fun x631 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 36)) (x156 x1481) (x1854 x1481)))
(define-fun x1396 ((x1481 Int)) Int (ite x1135 (x981 x1481) (x2604 x1481)))
(define-fun x3952 ((x1481 Int)) Int (ite x4139 (x1396 x1481) (x658 x1481)))
(define-fun x1071 ((x1481 Int)) Int (ite (and (> x1634 x1481) (<= 0 x1481)) (x3952 x1481) (x1992 x1481)))
(define-fun x1445 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 x1634)) (x1071 x1481) (x1854 x1481)))
(define-fun x3068 ((x1481 Int)) Int (ite (= x633 x1481) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x2549 x1481)))
(define-fun x2544 ((x1481 Int)) Int (ite (and (> 4 x1481) (<= 0 x1481)) (x3068 (+ x633 x1481)) (x586 x1481)))
(define-fun x4307 ((x1481 Int)) Int (ite x1220 (x2544 x1481) (x333 x1481)))
(define-fun x3612 ((x1481 Int)) Int (ite x1026 (x4307 x1481) (x586 x1481)))
(define-fun x4352 ((x1481 Int)) Int (ite (and (< x1481 x111) (>= x1481 0)) (x3612 x1481) (x1992 x1481)))
(define-fun x3404 ((x1481 Int)) Int (ite (and (>= x1481 0) (> x111 x1481)) (x4352 x1481) (x1854 x1481)))
(define-fun x411 ((x1481 Int)) Int (ite (= x1481 4) 34 (x761 x1481)))
(define-fun x2084 ((x1481 Int)) Int (ite (and (> 36 x1481) (>= x1481 0)) (x411 x1481) (x3251 x1481)))
(define-fun x1367 ((x1481 Int)) Int (ite (= x1481 x3768) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x761 x1481)))
(define-fun x1429 ((x1481 Int)) Int (ite (= x3277 x1481) 32 (x1367 x1481)))
(define-fun x3834 ((x1481 Int)) Int (ite (= x1481 x1160) 32 (x1429 x1481)))
(define-fun x2149 ((x1481 Int)) Int (ite (= x1826 x1481) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3834 x1481)))
(define-fun x3737 ((x1481 Int)) Int (ite (and (<= 0 x1481) (> 100 x1481)) (x2149 (+ x1481 x3768)) (x3251 x1481)))
(define-fun x3168 ((x1481 Int)) Int (ite (= x1481 x3768) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x761 x1481)))
(define-fun x2183 ((x1481 Int)) Int (ite (= x1481 x4125) 32 (x3168 x1481)))
(define-fun x467 ((x1481 Int)) Int (ite (= x3157 x1481) 48 (x2183 x1481)))
(define-fun x1807 ((x1481 Int)) Int (ite (= x2458 x1481) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x467 x1481)))
(define-fun x1994 ((x1481 Int)) Int (ite (= x1481 x419) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x1807 x1481)))
(define-fun x80 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 132)) (x1994 (+ x1481 x3768)) (x3251 x1481)))
(define-fun x2720 ((x1481 Int)) Int (ite (= x1481 0) x2156 (x2251 x1481)))
(define-fun x3498 ((x1481 Int)) Int (ite (= x1481 32) x804 (x2720 x1481)))
(define-fun x3271 ((x1481 Int)) Int (ite x2891 (x2251 x1481) (x3498 x1481)))
(define-fun x293 ((x1481 Int)) Int (ite (and (<= 0 x1481) (> x2330 x1481)) (x3271 x1481) (x761 x1481)))
(define-fun x3266 ((x1481 Int)) Int (ite (and (< x1481 x2330) (<= 0 x1481)) (x293 x1481) (x3251 x1481)))
(define-fun x2044 ((x1481 Int)) Int (ite (= x1481 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x761 x1481)))
(define-fun x1461 ((x1481 Int)) Int (ite (and (< x1481 4) (<= 0 x1481)) (x2044 (+ 128 x1481)) (x3251 x1481)))
(define-fun x253 ((x1481 Int)) Int (ite (= x1481 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x761 x1481)))
(define-fun x3928 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 4)) (x253 (+ 128 x1481)) (x3251 x1481)))
(define-fun x1310 ((x1481 Int)) Int (ite (= x1481 4) 33 (x761 x1481)))
(define-fun x2002 ((x1481 Int)) Int (ite (and (< x1481 36) (<= 0 x1481)) (x1310 x1481) (x3251 x1481)))
(define-fun x3333 ((x1481 Int)) Int (ite (= 128 x1481) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x761 x1481)))
(define-fun x1355 ((x1481 Int)) Int (ite (and (> 4 x1481) (>= x1481 0)) (x3333 (+ x1481 128)) (x3251 x1481)))
(define-fun x37 ((x1481 Int)) Int (ite x2324 (x2084 x1481) (ite x705 (x3737 x1481) (ite x2631 (x3251 x1481) (ite x3892 (x3251 x1481) (ite x2164 (x80 x1481) (ite x51 (x3251 x1481) (ite x3731 (x3266 x1481) (ite x1885 (x1461 x1481) (ite x323 (x3928 x1481) (ite x4080 (x2002 x1481) (x1355 x1481))))))))))))
(define-fun x3444 ((x1481 Int)) Int (ite x2690 (x37 x1481) (x3251 x1481)))
(define-fun x3662 ((x1481 Int)) Int (ite x3507 (x3444 x1481) (ite x3123 (x3444 x1481) (x534 x1481))))
(define-fun x3451 ((x1481 Int)) Int (ite (and (< x1481 x2942) (<= 0 x1481)) (x3662 x1481) (x1992 x1481)))
(define-fun x3473 ((x1481 Int)) Int (ite (and (>= x1481 0) (> x2942 x1481)) (x3451 x1481) (x1854 x1481)))
(define-fun x892 ((x1481 Int)) Int (ite x3147 (ite x1455 (x3613 x1481) (x1350 x1481)) (x3048 x1481)))
(define-fun x3199 ((x1481 Int)) Int (ite (= 196 x1481) x3269 (x892 x1481)))
(define-fun x4218 ((x1481 Int)) Int (ite (= 228 x1481) x1553 (x3199 x1481)))
(define-fun x2932 ((x1481 Int)) Int (ite (= x639 x1481) x3900 (x4218 x1481)))
(define-fun x1703 ((x1481 Int)) Int (ite (= x251 x1481) x4044 (x2932 x1481)))
(define-fun x174 ((x1481 Int)) Int (ite (= x1481 x251) x3081 (x2932 x1481)))
(define-fun x139 ((x1481 Int)) Int (ite x1379 (ite x2094 (x2932 x1481) (x1703 x1481)) (x174 x1481)))
(define-fun x2915 ((x1481 Int)) Int (ite (and (<= 164 x1481) (> x3971 x1481)) (x139 (+ x1481 128)) (x2670 x1481)))
(define-fun x399 ((x1481 Int)) Int (ite (and (> (+ 128 x1912) x1481) (>= x1481 128)) (x2915 (+ x1481 36)) (x670 x1481)))
(define-fun x3653 ((x1481 Int)) Int (ite (= x2068 x1481) 0 (x399 x1481)))
(define-fun x1845 ((x1481 Int)) Int (ite (= x1996 x1481) x3544 (x3653 x1481)))
(define-fun x876 ((x1481 Int)) Int (ite (and (> (+ x4000 128) x1481) (<= 128 x1481)) (x2915 (- (+ x2049 x1481) 128)) (x1845 x1481)))
(define-fun x4081 ((x1481 Int)) Int (ite (= x13 x1481) 0 (x876 x1481)))
(define-fun x4029 ((x1481 Int)) Int (ite (= 128 x1481) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4081 x1481)))
(define-fun x541 ((x1481 Int)) Int (ite (= x1481 132) 32 (x4029 x1481)))
(define-fun x3549 ((x1481 Int)) Int (ite (= x1481 164) 33 (x541 x1481)))
(define-fun x4384 ((x1481 Int)) Int (ite (= x1481 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x3549 x1481)))
(define-fun x783 ((x1481 Int)) Int (ite (= 228 x1481) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x4384 x1481)))
(define-fun x3715 ((x1481 Int)) Int (ite (and (< x1481 132) (>= x1481 0)) (x783 (+ x1481 128)) (x2465 x1481)))
(define-fun x277 ((x1481 Int)) Int (ite (= 128 x1481) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1845 x1481)))
(define-fun x1716 ((x1481 Int)) Int (ite (= x1481 132) 32 (x277 x1481)))
(define-fun x3877 ((x1481 Int)) Int (ite (= 164 x1481) 35 (x1716 x1481)))
(define-fun x1683 ((x1481 Int)) Int (ite (= 196 x1481) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x3877 x1481)))
(define-fun x2698 ((x1481 Int)) Int (ite (= 228 x1481) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x1683 x1481)))
(define-fun x3964 ((x1481 Int)) Int (ite (and (< x1481 132) (>= x1481 0)) (x2698 (+ 128 x1481)) (x2465 x1481)))
(define-fun x1866 ((x1481 Int)) Int (ite x2895 (x2465 x1481) (ite x2953 (x2465 x1481) (ite x2221 (x2465 x1481) (ite x2963 (x2465 x1481) (ite x3896 (x3715 x1481) (x3964 x1481)))))))
(define-fun x2583 ((x1481 Int)) Int 0)
(define-fun x1859 ((x1481 Int)) Int (ite x2819 (x1866 x1481) (x2583 x1481)))
(define-fun x2723 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 x2447)) (x1859 x1481) (x1992 x1481)))
(define-fun x3618 ((x1481 Int)) Int (ite (and (<= 0 x1481) (> x2447 x1481)) (x2723 x1481) (x1854 x1481)))
(define-fun x3044 ((x1481 Int)) Int (ite (= 4 x1481) 17 (x1992 x1481)))
(define-fun x2316 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 36 x1481)) (x3044 x1481) (x1854 x1481)))
(define-fun x460 ((x1481 Int)) Int (ite x1194 (x1854 x1481) (ite x3505 (x989 x1481) (ite x749 (x2386 x1481) (ite x167 (x3575 x1481) (ite x565 (x2322 x1481) (ite x3406 (x2771 x1481) (ite x2485 (x631 x1481) (ite x3944 (x1445 x1481) (ite x4207 (x1854 x1481) (ite x3347 (x3404 x1481) (ite x2451 (x1854 x1481) (ite x4386 (x3473 x1481) (ite x2642 (x1854 x1481) (ite x3018 (x3618 x1481) (ite x3203 (x1854 x1481) (ite x3885 (x2316 x1481) (x1854 x1481))))))))))))))))))
(define-fun x2035 ((x1481 Int)) Int (x460 x1481))
(define-fun x4059 ((x1481 Int)) Int (ite (and (> 192 x1481) (<= 160 x1481)) (x2035 (- x1481 160)) (x2574 x1481)))
(define-fun x71 ((x1481 Int)) Int (ite (= x1481 x2430) 3 (x3372 x1481)))
(define-fun x2275 ((x1481 Int)) Int (ite x3507 (ite x2690 (x3372 x1481) (x71 x1481)) (ite x3123 (ite x2690 (x3372 x1481) (x71 x1481)) (x3372 x1481))))
(define-fun x4219 ((x1481 Int)) Int (ite x2250 (ite x860 (x3372 x1481) (x2275 x1481)) (x672 x1481)))
(define-fun x1165 ((x1481 Int)) Int (ite x2250 (ite x2250 (x4219 x1481) (x3372 x1481)) (x3372 x1481)))
(define-fun x113 ((x1481 Int)) Int (ite x1194 (x3372 x1481) (ite x3505 (x3372 x1481) (ite x749 (x3372 x1481) (ite x167 (x3372 x1481) (ite x565 (x3372 x1481) (ite x3406 (x1165 x1481) (x3372 x1481))))))))
(define-fun x3757 ((x1481 Int)) Int (ite (= x3075 x1481) 0 (x3082 x1481)))
(define-fun x2328 ((x1481 Int)) Int (ite (= x653 x1481) 1 (x113 x1481)))
(define-fun x163 ((x1481 Int)) Int (ite (= x3827 x1481) x3703 (x723 x1481)))
(define-fun x3725 ((x1481 Int)) Int (ite x2250 (x915 x1481) (x1044 x1481)))
(define-fun x2842 ((x1481 Int)) Int (ite x2250 (ite x2250 (x3725 x1481) (x915 x1481)) (x915 x1481)))
(define-fun x3913 ((x1481 Int)) Int (ite x1194 (x915 x1481) (ite x3505 (x915 x1481) (ite x749 (x915 x1481) (ite x167 (x915 x1481) (ite x565 (x915 x1481) (ite x3406 (x2842 x1481) (x915 x1481))))))))
(define-fun x2905 ((x1481 Int)) Int (ite (= x3830 x1481) 0 (x3913 x1481)))
(define-fun x3119 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2025 ((x1481 Int)) Int (x919 x1481))
(define-fun x1077 ((x1481 Int)) Int (x723 x1481))
(define-fun x851 ((x1481 Int)) Int (x2618 x1481))
(define-fun x1432 ((x1481 Int)) Int (x1197 x1481))
(define-fun x952 ((x1481 Int)) Int (x2496 x1481))
(define-fun x2841 ((x1481 Int)) Int (x3028 x1481))
(define-fun x4007 ((x1481 Int)) Int (x2290 x1481))
(define-fun x483 ((x1481 Int)) Int (x512 x1481))
(define-fun x2380 ((x1481 Int)) Int (x3397 x1481))
(define-fun x3821 ((x1481 Int)) Int (x239 x1481))
(define-fun x1422 ((x1481 Int)) Int (x4354 x1481))
(define-fun x4155 ((x1481 Int)) Int (x3082 x1481))
(define-fun x3261 ((x1481 Int)) Int (x895 x1481))
(define-fun x2502 ((x1481 Int)) Int (x2618 x1481))
(define-fun x3812 ((x1481 Int)) Int (x919 x1481))
(define-fun x663 ((x1481 Int)) Int (x1908 x1481))
(define-fun x1923 ((x1481 Int)) Int (x137 x1481))
(define-fun x502 ((x1481 Int)) Int (x723 x1481))
(define-fun x1460 ((x1481 Int)) Int (x1197 x1481))
(define-fun x2401 ((x1481 Int)) Int (x1170 x1481))
(define-fun x1309 ((x1481 Int)) Int (x2496 x1481))
(define-fun x1901 ((x1481 Int)) Int (x2373 x1481))
(define-fun x3234 ((x1481 Int)) Int (x368 x1481))
(define-fun x326 ((x1481 Int)) Int (x3257 x1481))
(define-fun x2374 ((x1481 Int)) Int (x2514 x1481))
(define-fun x2729 ((x1481 Int)) Int (x1619 x1481))
(define-fun x1233 ((x1481 Int)) Int (x3028 x1481))
(define-fun x4188 ((x1481 Int)) Int (x3727 x1481))
(define-fun x1143 ((x1481 Int)) Int (x3921 x1481))
(define-fun x2812 ((x1481 Int)) Int (x282 x1481))
(define-fun x1865 ((x1481 Int)) Int (ite (= x1481 4) 17 (x3327 x1481)))
(define-fun x3225 ((x1481 Int)) Int (ite (and (< x1481 36) (<= 0 x1481)) (x1865 x1481) (x3847 x1481)))
(define-fun x980 ((x1481 Int)) Int (ite (= x1481 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x331 x1481)))
(define-fun x1095 ((x1481 Int)) Int (ite (= 132 x1481) x636 (x980 x1481)))
(define-fun x1118 ((x1481 Int)) Int (ite (= 164 x1481) 128 (x1095 x1481)))
(define-fun x2018 ((x1481 Int)) Int (ite (= x1481 260) x3019 (x1118 x1481)))
(define-fun x1781 ((x1481 Int)) Int (ite (= 292 x1481) x1012 (x2018 x1481)))
(define-fun x746 ((x1481 Int)) Int (ite (= 292 x1481) x1306 (x2018 x1481)))
(define-fun x1114 ((x1481 Int)) Int (ite x924 (ite x1092 (x2018 x1481) (x1781 x1481)) (x746 x1481)))
(define-fun x3476 ((x1481 Int)) Int (ite (= 196 x1481) x358 (x1114 x1481)))
(define-fun x3858 ((x1481 Int)) Int (ite (= x1481 228) x2026 (x3476 x1481)))
(define-fun x347 ((x1481 Int)) Int (ite (= x3664 x1481) x4069 (x3858 x1481)))
(define-fun x1786 ((x1481 Int)) Int (ite (= x1481 x1771) x2578 (x347 x1481)))
(define-fun x3946 ((x1481 Int)) Int (ite (= x1771 x1481) x3973 (x347 x1481)))
(define-fun x4262 ((x1481 Int)) Int (ite x911 (ite x3775 (x347 x1481) (x1786 x1481)) (x3946 x1481)))
(define-fun x3328 ((x1481 Int)) Int (ite (and (>= x1481 164) (< x1481 x2000)) (x4262 (+ 128 x1481)) (x3752 x1481)))
(define-fun x4083 ((x1481 Int)) Int (ite (and (> (+ 128 x2852) x1481) (>= x1481 128)) (x3328 (+ 36 x1481)) (x4167 x1481)))
(define-fun x1940 ((x1481 Int)) Int (ite (= x713 x1481) 0 (x4083 x1481)))
(define-fun x961 ((x1481 Int)) Int (ite (= x1481 x4008) x3515 (x1940 x1481)))
(define-fun x1611 ((x1481 Int)) Int (ite (and (>= x1481 128) (< x1481 (+ 128 x1499))) (x3328 (- (+ x2334 x1481) 128)) (x961 x1481)))
(define-fun x1468 ((x1481 Int)) Int (ite (= x487 x1481) 0 (x1611 x1481)))
(define-fun x4372 ((x1481 Int)) Int (ite (= 128 x1481) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1468 x1481)))
(define-fun x3577 ((x1481 Int)) Int (ite (= 132 x1481) 32 (x4372 x1481)))
(define-fun x2957 ((x1481 Int)) Int (ite (= x1481 164) 33 (x3577 x1481)))
(define-fun x2337 ((x1481 Int)) Int (ite (= 196 x1481) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x2957 x1481)))
(define-fun x3170 ((x1481 Int)) Int (ite (= 228 x1481) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x2337 x1481)))
(define-fun x588 ((x1481 Int)) Int (ite (and (< x1481 132) (<= 0 x1481)) (x3170 (+ 128 x1481)) (x154 x1481)))
(define-fun x790 ((x1481 Int)) Int (ite (= x1481 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x961 x1481)))
(define-fun x353 ((x1481 Int)) Int (ite (= x1481 132) 32 (x790 x1481)))
(define-fun x3331 ((x1481 Int)) Int (ite (= x1481 164) 35 (x353 x1481)))
(define-fun x764 ((x1481 Int)) Int (ite (= x1481 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x3331 x1481)))
(define-fun x492 ((x1481 Int)) Int (ite (= 228 x1481) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x764 x1481)))
(define-fun x2437 ((x1481 Int)) Int (ite (and (> 132 x1481) (<= 0 x1481)) (x492 (+ x1481 128)) (x154 x1481)))
(define-fun x1274 ((x1481 Int)) Int (ite x1111 (x154 x1481) (ite x3841 (x154 x1481) (ite x2656 (x154 x1481) (ite x1421 (x154 x1481) (ite x149 (x588 x1481) (x2437 x1481)))))))
(define-fun x877 ((x1481 Int)) Int 0)
(define-fun x2892 ((x1481 Int)) Int (ite x2680 (x1274 x1481) (x877 x1481)))
(define-fun x1591 ((x1481 Int)) Int (ite (and (>= x1481 0) (> x3982 x1481)) (x2892 x1481) (x3327 x1481)))
(define-fun x30 ((x1481 Int)) Int (ite (and (>= x1481 0) (> x3982 x1481)) (x1591 x1481) (x3847 x1481)))
(define-fun x1730 ((x1481 Int)) Int (x2618 x1481))
(define-fun x3764 ((x1481 Int)) Int (x828 x1481))
(define-fun x3092 ((x1481 Int)) Int (x2554 x1481))
(define-fun x261 ((x1481 Int)) Int (ite (= x1481 4) 34 (x24 x1481)))
(define-fun x2038 ((x1481 Int)) Int (ite (and (> 36 x1481) (>= x1481 0)) (x261 x1481) (x1381 x1481)))
(define-fun x2547 ((x1481 Int)) Int (ite (= x289 x1481) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x24 x1481)))
(define-fun x3750 ((x1481 Int)) Int (ite (= x2934 x1481) 32 (x2547 x1481)))
(define-fun x4299 ((x1481 Int)) Int (ite (= x404 x1481) 32 (x3750 x1481)))
(define-fun x3977 ((x1481 Int)) Int (ite (= x1353 x1481) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x4299 x1481)))
(define-fun x360 ((x1481 Int)) Int (ite (and (< x1481 100) (>= x1481 0)) (x3977 (+ x289 x1481)) (x1381 x1481)))
(define-fun x1456 ((x1481 Int)) Int (ite (= x1481 x289) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x24 x1481)))
(define-fun x3602 ((x1481 Int)) Int (ite (= x4 x1481) 32 (x1456 x1481)))
(define-fun x4320 ((x1481 Int)) Int (ite (= x3582 x1481) 48 (x3602 x1481)))
(define-fun x682 ((x1481 Int)) Int (ite (= x1481 x1913) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x4320 x1481)))
(define-fun x986 ((x1481 Int)) Int (ite (= x1400 x1481) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x682 x1481)))
(define-fun x181 ((x1481 Int)) Int (ite (and (> 132 x1481) (>= x1481 0)) (x986 (+ x289 x1481)) (x1381 x1481)))
(define-fun x3688 ((x1481 Int)) Int (ite (= x1481 0) x758 (x2244 x1481)))
(define-fun x3384 ((x1481 Int)) Int (ite (= 32 x1481) x1768 (x3688 x1481)))
(define-fun x3650 ((x1481 Int)) Int (ite x4058 (x2244 x1481) (x3384 x1481)))
(define-fun x1622 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 x1581)) (x3650 x1481) (x24 x1481)))
(define-fun x907 ((x1481 Int)) Int (ite (and (< x1481 x1581) (>= x1481 0)) (x1622 x1481) (x1381 x1481)))
(define-fun x1972 ((x1481 Int)) Int (ite (= x1481 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x24 x1481)))
(define-fun x2311 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 4)) (x1972 (+ 128 x1481)) (x1381 x1481)))
(define-fun x3380 ((x1481 Int)) Int (ite (= x1481 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x24 x1481)))
(define-fun x2557 ((x1481 Int)) Int (ite (and (< x1481 4) (<= 0 x1481)) (x3380 (+ 128 x1481)) (x1381 x1481)))
(define-fun x3394 ((x1481 Int)) Int (ite (= x1481 4) 33 (x24 x1481)))
(define-fun x1766 ((x1481 Int)) Int (ite (and (< x1481 36) (<= 0 x1481)) (x3394 x1481) (x1381 x1481)))
(define-fun x439 ((x1481 Int)) Int (ite (= x1481 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x24 x1481)))
(define-fun x1438 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 4)) (x439 (+ x1481 128)) (x1381 x1481)))
(define-fun x1174 ((x1481 Int)) Int (ite x3560 (x2038 x1481) (ite x3112 (x360 x1481) (ite x3915 (x1381 x1481) (ite x1970 (x1381 x1481) (ite x1780 (x181 x1481) (ite x2603 (x1381 x1481) (ite x2810 (x907 x1481) (ite x3386 (x2311 x1481) (ite x626 (x2557 x1481) (ite x1633 (x1766 x1481) (x1438 x1481))))))))))))
(define-fun x1948 ((x1481 Int)) Int (ite x2277 (x1174 x1481) (x1381 x1481)))
(define-fun x2261 ((x1481 Int)) Int 0)
(define-fun x2313 ((x1481 Int)) Int (ite x1658 (x1948 x1481) (ite x1684 (x1948 x1481) (x2261 x1481))))
(define-fun x2917 ((x1481 Int)) Int (x2246 x1481))
(define-fun x3615 ((x1481 Int)) Int (x89 x1481))
(define-fun x2806 ((x1481 Int)) Int (x826 x1481))
(define-fun x1920 ((x1481 Int)) Int (x942 x1481))
(define-fun x2925 ((x1481 Int)) Int (x2758 x1481))
(define-fun x294 ((x1481 Int)) Int (x866 x1481))
(define-fun x1129 ((x1481 Int)) Int (x4088 x1481))
(define-fun x229 ((x1481 Int)) Int (x3101 x1481))
(define-fun x3303 ((x1481 Int)) Int (x3028 x1481))
(define-fun x726 ((x1481 Int)) Int (x2353 x1481))
(define-fun x1944 ((x1481 Int)) Int (ite x1658 (x2211 x1481) (ite x1684 (x2211 x1481) (x4118 x1481))))
(define-fun x521 ((x1481 Int)) Int (x723 x1481))
(define-fun x188 ((x1481 Int)) Int (x3082 x1481))
(define-fun x196 ((x1481 Int)) Int (x919 x1481))
(define-fun x3313 ((x1481 Int)) Int (x463 x1481))
(define-fun x135 ((x1481 Int)) Int (x2496 x1481))
(define-fun x2411 ((x1481 Int)) Int (x873 x1481))
(define-fun x2598 ((x1481 Int)) Int (x1197 x1481))
(define-fun x1675 ((x1481 Int)) Int (x2516 x1481))
(define-fun x2648 ((x1481 Int)) Int (x4209 x1481))
(define-fun x618 ((x1481 Int)) Int (x1019 x1481))
(define-fun x881 ((x1481 Int)) Int (ite (and (<= 0 x1481) (> x1793 x1481)) (x2313 x1481) (x3327 x1481)))
(define-fun x3083 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 x1793)) (x881 x1481) (x3847 x1481)))
(define-fun x789 ((x1481 Int)) Int (x2618 x1481))
(define-fun x597 ((x1481 Int)) Int (x4088 x1481))
(define-fun x1629 ((x1481 Int)) Int (x3028 x1481))
(define-fun x191 ((x1481 Int)) Int (x723 x1481))
(define-fun x1384 ((x1481 Int)) Int (x3082 x1481))
(define-fun x389 ((x1481 Int)) Int (x919 x1481))
(define-fun x2419 ((x1481 Int)) Int (x463 x1481))
(define-fun x339 ((x1481 Int)) Int (x1197 x1481))
(define-fun x422 ((x1481 Int)) Int (x2496 x1481))
(define-fun x2651 ((x1481 Int)) Int (x3082 x1481))
(define-fun x4128 ((x1481 Int)) Int (ite x3363 (x257 x1481) (x2246 x1481)))
(define-fun x535 ((x1481 Int)) Int (ite x3363 (x802 x1481) (x2758 x1481)))
(define-fun x2512 ((x1481 Int)) Int (ite x3363 (x2981 x1481) (x826 x1481)))
(define-fun x3410 ((x1481 Int)) Int (ite x3363 (x2884 x1481) (x2516 x1481)))
(define-fun x3352 ((x1481 Int)) Int (ite x3363 (x4244 x1481) (x89 x1481)))
(define-fun x2946 ((x1481 Int)) Int (ite x3363 (x2092 x1481) (x2225 x1481)))
(define-fun x1501 ((x1481 Int)) Int (ite x3363 (x2939 x1481) (x828 x1481)))
(define-fun x613 ((x1481 Int)) Int (ite x3363 (x3361 x1481) (x1019 x1481)))
(define-fun x966 ((x1481 Int)) Int (x723 x1481))
(define-fun x3988 ((x1481 Int)) Int (ite x3363 (x697 x1481) (x2554 x1481)))
(define-fun x256 ((x1481 Int)) Int (ite x3363 (x3142 x1481) (x866 x1481)))
(define-fun x4175 ((x1481 Int)) Int (ite x3363 (x2015 x1481) (x942 x1481)))
(define-fun x3701 ((x1481 Int)) Int (ite x3363 (x594 x1481) (x873 x1481)))
(define-fun x3734 ((x1481 Int)) Int (ite x3363 (x4088 x1481) (x3503 x1481)))
(define-fun x2416 ((x1481 Int)) Int (x1197 x1481))
(define-fun x2753 ((x1481 Int)) Int (ite x3363 (x646 x1481) (x3101 x1481)))
(define-fun x2683 ((x1481 Int)) Int (x3028 x1481))
(define-fun x690 ((x1481 Int)) Int (x2618 x1481))
(define-fun x2582 ((x1481 Int)) Int (x2496 x1481))
(define-fun x1668 ((x1481 Int)) Int (x463 x1481))
(define-fun x1079 ((x1481 Int)) Int (x919 x1481))
(define-fun x79 ((x1481 Int)) Int (ite x3363 (x3850 x1481) (x4209 x1481)))
(define-fun x720 ((x1481 Int)) Int (ite x3363 (x2126 x1481) (x2353 x1481)))
(define-fun x1704 ((x1481 Int)) Int (x1197 x1481))
(define-fun x2829 ((x1481 Int)) Int (x2618 x1481))
(define-fun x951 ((x1481 Int)) Int (x723 x1481))
(define-fun x4234 ((x1481 Int)) Int (x2496 x1481))
(define-fun x4131 ((x1481 Int)) Int (x919 x1481))
(define-fun x2482 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2608 ((x1481 Int)) Int (x3028 x1481))
(define-fun x1062 ((x1481 Int)) Int (x723 x1481))
(define-fun x4099 ((x1481 Int)) Int (ite x3363 (x503 x1481) (x3101 x1481)))
(define-fun x3956 ((x1481 Int)) Int (ite x3363 (x4382 x1481) (x4209 x1481)))
(define-fun x1485 ((x1481 Int)) Int (x1197 x1481))
(define-fun x1041 ((x1481 Int)) Int (ite x3363 (x3381 x1481) (x873 x1481)))
(define-fun x3039 ((x1481 Int)) Int (x2618 x1481))
(define-fun x3547 ((x1481 Int)) Int (ite x3363 (x3899 x1481) (x828 x1481)))
(define-fun x3723 ((x1481 Int)) Int (ite x3363 (x984 x1481) (x89 x1481)))
(define-fun x3490 ((x1481 Int)) Int (x2496 x1481))
(define-fun x3788 ((x1481 Int)) Int (ite x3363 (x2005 x1481) (x1019 x1481)))
(define-fun x1905 ((x1481 Int)) Int (ite x3363 (x4306 x1481) (x866 x1481)))
(define-fun x4363 ((x1481 Int)) Int (ite x3363 (x1103 x1481) (x2758 x1481)))
(define-fun x2568 ((x1481 Int)) Int (ite x3363 (x4104 x1481) (x4118 x1481)))
(define-fun x1504 ((x1481 Int)) Int (ite x3363 (x3895 x1481) (x2353 x1481)))
(define-fun x3017 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2379 ((x1481 Int)) Int (ite x3363 (x3156 x1481) (x4088 x1481)))
(define-fun x4266 ((x1481 Int)) Int (ite x3363 (x918 x1481) (x826 x1481)))
(define-fun x3795 ((x1481 Int)) Int (ite x3363 (x47 x1481) (x2246 x1481)))
(define-fun x1584 ((x1481 Int)) Int (x919 x1481))
(define-fun x67 ((x1481 Int)) Int (ite x3363 (x3779 x1481) (x942 x1481)))
(define-fun x3644 ((x1481 Int)) Int (ite x3363 (x284 x1481) (x2516 x1481)))
(define-fun x3226 ((x1481 Int)) Int (x3028 x1481))
(define-fun x236 ((x1481 Int)) Int (ite x3363 (x1519 x1481) (x2554 x1481)))
(define-fun x3125 ((x1481 Int)) Int (ite x3363 (x122 x1481) (x463 x1481)))
(define-fun x3132 ((x1481 Int)) Int (ite (= x4165 x1481) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x849 x1481)))
(define-fun x520 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 4 x1481)) (x3132 (+ x4165 x1481)) (x4170 x1481)))
(define-fun x2906 ((x1481 Int)) Int (ite (= x1481 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x849 x1481)))
(define-fun x3362 ((x1481 Int)) Int (ite (= x1481 132) 32 (x2906 x1481)))
(define-fun x3462 ((x1481 Int)) Int (ite (= 164 x1481) 12 (x3362 x1481)))
(define-fun x3324 ((x1481 Int)) Int (ite (= x1481 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x3462 x1481)))
(define-fun x2382 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 100)) (x3324 (+ 128 x1481)) (x4170 x1481)))
(define-fun x2176 ((x1481 Int)) Int (ite x1862 (x520 x1481) (x2382 x1481)))
(define-fun x2897 ((x1481 Int)) Int (ite x1229 (x2176 x1481) (x4170 x1481)))
(define-fun x2564 ((x1481 Int)) Int (ite (and (> x992 x1481) (>= x1481 0)) (x2897 x1481) (x3327 x1481)))
(define-fun x3252 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 x992)) (x2564 x1481) (x3847 x1481)))
(define-fun x821 ((x1481 Int)) Int (x919 x1481))
(define-fun x4248 ((x1481 Int)) Int (ite x2254 (x826 x1481) (x3184 x1481)))
(define-fun x3588 ((x1481 Int)) Int (x2496 x1481))
(define-fun x351 ((x1481 Int)) Int (ite x2254 (x828 x1481) (x3066 x1481)))
(define-fun x2982 ((x1481 Int)) Int (ite x2254 (x2516 x1481) (x1378 x1481)))
(define-fun x3843 ((x1481 Int)) Int (ite x2254 (x89 x1481) (x1434 x1481)))
(define-fun x105 ((x1481 Int)) Int (x4088 x1481))
(define-fun x3007 ((x1481 Int)) Int (ite x2254 (x2246 x1481) (x4212 x1481)))
(define-fun x1741 ((x1481 Int)) Int (x3028 x1481))
(define-fun x2803 ((x1481 Int)) Int (x4118 x1481))
(define-fun x2450 ((x1481 Int)) Int (ite x2254 (x1019 x1481) (x2501 x1481)))
(define-fun x2444 ((x1481 Int)) Int (ite x2254 (x942 x1481) (x2813 x1481)))
(define-fun x2124 ((x1481 Int)) Int (ite x2254 (x873 x1481) (x1568 x1481)))
(define-fun x3208 ((x1481 Int)) Int (ite x2254 (x3101 x1481) (x3623 x1481)))
(define-fun x81 ((x1481 Int)) Int (x723 x1481))
(define-fun x1415 ((x1481 Int)) Int (ite x2254 (x866 x1481) (x3990 x1481)))
(define-fun x1915 ((x1481 Int)) Int (ite x2254 (x2758 x1481) (x4091 x1481)))
(define-fun x2033 ((x1481 Int)) Int (ite x2254 (x4209 x1481) (x2846 x1481)))
(define-fun x1440 ((x1481 Int)) Int (ite x2254 (x2554 x1481) (x138 x1481)))
(define-fun x4287 ((x1481 Int)) Int (ite x2254 (x2353 x1481) (x848 x1481)))
(define-fun x2346 ((x1481 Int)) Int (x463 x1481))
(define-fun x3838 ((x1481 Int)) Int (x1197 x1481))
(define-fun x215 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2518 ((x1481 Int)) Int (x2618 x1481))
(define-fun x2494 ((x1481 Int)) Int (x1019 x1481))
(define-fun x3584 ((x1481 Int)) Int (x2758 x1481))
(define-fun x2219 ((x1481 Int)) Int (x4118 x1481))
(define-fun x3336 ((x1481 Int)) Int (x3082 x1481))
(define-fun x213 ((x1481 Int)) Int (x4088 x1481))
(define-fun x2421 ((x1481 Int)) Int (x2516 x1481))
(define-fun x2969 ((x1481 Int)) Int (x1197 x1481))
(define-fun x1151 ((x1481 Int)) Int (x89 x1481))
(define-fun x809 ((x1481 Int)) Int (x723 x1481))
(define-fun x335 ((x1481 Int)) Int (x3101 x1481))
(define-fun x1660 ((x1481 Int)) Int (x2246 x1481))
(define-fun x1388 ((x1481 Int)) Int (x2353 x1481))
(define-fun x1530 ((x1481 Int)) Int (x873 x1481))
(define-fun x1542 ((x1481 Int)) Int (x463 x1481))
(define-fun x409 ((x1481 Int)) Int (x4209 x1481))
(define-fun x2464 ((x1481 Int)) Int (x3028 x1481))
(define-fun x3809 ((x1481 Int)) Int (x2554 x1481))
(define-fun x2146 ((x1481 Int)) Int (x2618 x1481))
(define-fun x883 ((x1481 Int)) Int (x2496 x1481))
(define-fun x1023 ((x1481 Int)) Int (x828 x1481))
(define-fun x3186 ((x1481 Int)) Int (x826 x1481))
(define-fun x3639 ((x1481 Int)) Int (x866 x1481))
(define-fun x3636 ((x1481 Int)) Int (x919 x1481))
(define-fun x629 ((x1481 Int)) Int (x942 x1481))
(define-fun x3438 ((x1481 Int)) Int (ite (= x1481 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2748 x1481)))
(define-fun x2875 ((x1481 Int)) Int (ite (and (> 4 x1481) (>= x1481 0)) (x3438 (+ x1481 128)) (x1249 x1481)))
(define-fun x661 ((x1481 Int)) Int (ite (= x1481 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2748 x1481)))
(define-fun x136 ((x1481 Int)) Int (ite (= x1481 132) 32 (x661 x1481)))
(define-fun x2475 ((x1481 Int)) Int (ite (= 164 x1481) 12 (x136 x1481)))
(define-fun x1082 ((x1481 Int)) Int (ite (= 196 x1481) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2475 x1481)))
(define-fun x1750 ((x1481 Int)) Int (ite (and (< x1481 100) (>= x1481 0)) (x1082 (+ 128 x1481)) (x1249 x1481)))
(define-fun x2139 ((x1481 Int)) Int (ite x1099 (x2875 x1481) (x1750 x1481)))
(define-fun x1697 ((x1481 Int)) Int (ite x953 (x2139 x1481) (x1249 x1481)))
(define-fun x1844 ((x1481 Int)) Int (ite (and (>= x1481 0) (< x1481 x932)) (x1697 x1481) (x3327 x1481)))
(define-fun x3670 ((x1481 Int)) Int (ite (and (< x1481 x932) (<= 0 x1481)) (x1844 x1481) (x3847 x1481)))
(define-fun x3455 ((x1481 Int)) Int (ite (= 4 x1481) 34 (x3327 x1481)))
(define-fun x2076 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 36 x1481)) (x3455 x1481) (x3847 x1481)))
(define-fun x3325 ((x1481 Int)) Int (ite (= x1481 x977) x2230 (x3282 x1481)))
(define-fun x1282 ((x1481 Int)) Int (ite (= x4280 x1481) x1516 (x3325 x1481)))
(define-fun x320 ((x1481 Int)) Int (ite (and (< x1481 (+ 128 x2852)) (>= x1481 128)) (x3328 (+ x1481 36)) (x1468 x1481)))
(define-fun x2083 ((x1481 Int)) Int (ite (= x1481 x2561) 0 (x320 x1481)))
(define-fun x3562 ((x1481 Int)) Int (ite (= x1481 x266) x840 (x2083 x1481)))
(define-fun x2271 ((x1481 Int)) Int (ite (= x1481 x2896) 0 (x463 x1481)))
(define-fun x9 ((x1481 Int)) Int (ite (= 128 x1481) x2852 (x3562 x1481)))
(define-fun x2172 ((x1481 Int)) Int (ite (and (<= 160 x1481) (> (+ 160 x2852) x1481)) (x3328 (+ x1481 4)) (x9 x1481)))
(define-fun x312 ((x1481 Int)) Int (ite (= x678 x1481) 0 (x2172 x1481)))
(define-fun x2628 ((x1481 Int)) Int (ite (= x1276 x1481) x1499 (x312 x1481)))
(define-fun x4097 ((x1481 Int)) Int (ite (and (<= x2274 x1481) (< x1481 (+ x2274 x1499))) (x3328 (- (+ x2334 x1481) x2274)) (x2628 x1481)))
(define-fun x1271 ((x1481 Int)) Int (ite (= x1481 x4022) 0 (x4097 x1481)))
(define-fun x3326 ((x1481 Int)) Int (ite (= x1481 4) 17 (x3327 x1481)))
(define-fun x2085 ((x1481 Int)) Int (ite (and (>= x1481 0) (> 36 x1481)) (x3326 x1481) (x3847 x1481)))
(define-fun x4060 ((x1481 Int)) Int (ite (= x1481 4) 17 (x3327 x1481)))
(define-fun x4174 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 36)) (x4060 x1481) (x3847 x1481)))
(define-fun x4321 ((x1481 Int)) Int (ite (= x1481 4) 17 (x3327 x1481)))
(define-fun x4358 ((x1481 Int)) Int (ite (and (<= 0 x1481) (< x1481 36)) (x4321 x1481) (x3847 x1481)))
(define-fun x1985 ((x1481 Int)) Int (x2618 x1481))
(define-fun x1916 ((x1481 Int)) Int (x828 x1481))
(define-fun x1158 ((x1481 Int)) Int (x2554 x1481))
(define-fun x2807 ((x1481 Int)) Int (x2246 x1481))
(define-fun x897 ((x1481 Int)) Int (x89 x1481))
(define-fun x3343 ((x1481 Int)) Int (x826 x1481))
(define-fun x3405 ((x1481 Int)) Int (x942 x1481))
(define-fun x2249 ((x1481 Int)) Int (x2758 x1481))
(define-fun x971 ((x1481 Int)) Int (x3028 x1481))
(define-fun x4027 ((x1481 Int)) Int (x4088 x1481))
(define-fun x2231 ((x1481 Int)) Int (x3101 x1481))
(define-fun x2612 ((x1481 Int)) Int (x866 x1481))
(define-fun x2182 ((x1481 Int)) Int (x2353 x1481))
(define-fun x847 ((x1481 Int)) Int (x463 x1481))
(define-fun x2630 ((x1481 Int)) Int (x723 x1481))
(define-fun x3984 ((x1481 Int)) Int (x919 x1481))
(define-fun x114 ((x1481 Int)) Int (x1019 x1481))
(define-fun x1453 ((x1481 Int)) Int (x3082 x1481))
(define-fun x1009 ((x1481 Int)) Int (x1197 x1481))
(define-fun x3200 ((x1481 Int)) Int (x873 x1481))
(define-fun x683 ((x1481 Int)) Int (x2496 x1481))
(define-fun x2480 ((x1481 Int)) Int (x2516 x1481))
(define-fun x3165 ((x1481 Int)) Int (x4209 x1481))
(define-fun x396 ((x1481 Int)) Int (ite (= 160 x1481) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4166 x1481)))
(define-fun x3037 ((x1481 Int)) Int (ite (= 192 x1481) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x396 x1481)))
(define-fun x4052 ((x1481 Int)) Int (ite (= x1481 128) 64 (x1657 x1481)))
(define-fun x662 ((x1481 Int)) Int (ite (= x1481 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3598 x1481)))
(define-fun x3872 ((x1481 Int)) Int (ite (= x1481 258) x4157 (x662 x1481)))
(define-fun x1609 ((x1481 Int)) Int (ite (= x1481 224) 34 (x1877 x1481)))
(define-fun x1654 ((x1481 Int)) Int (ite (= 290 x1481) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x140 x1481)))
(define-fun x4229 ((x1481 Int)) Int (ite (= x1481 294) x3903 (x1654 x1481)))
(define-fun x5 ((x1481 Int)) Int (ite (= 326 x1481) x1482 (x4229 x1481)))
(define-fun x1192 ((x1481 Int)) Int (ite (= x1481 358) 160 (x5 x1481)))
(define-fun x4037 ((x1481 Int)) Int (ite (= 454 x1481) x4181 (x1192 x1481)))
(define-fun x4291 ((x1481 Int)) Int (ite (and (> (+ x4181 486) x1481) (<= 486 x1481)) (x3037 (- x1481 326)) (x4037 x1481)))
(define-fun x1825 ((x1481 Int)) Int (ite (= x1481 390) 0 (x4291 x1481)))
(define-fun x739 ((x1481 Int)) Int (ite (= 422 x1481) x2899 (x1825 x1481)))
(define-fun x1990 ((x1481 Int)) Int (ite (= x513 x1481) x2606 (x739 x1481)))
(define-fun x3349 ((x1481 Int)) Int (ite (and (>= x1481 x2153) (< x1481 (+ x2153 x2606))) (x3872 (- (+ 256 x1481) x2153)) (x1990 x1481)))
(define-fun x2988 ((x1481 Int)) Int (ite (and (> x36 x1481) (<= 292 x1481)) (x3349 (+ 290 x1481)) (x2317 x1481)))
(define-fun x1090 ((x1481 Int)) Int (ite (= x1481 128) 0 (x3770 x1481)))
(define-fun x2903 ((x1481 Int)) Int (ite (= x1481 160) 0 (x1090 x1481)))
(define-fun x3329 ((x1481 Int)) Int (ite (= x1481 290) x2370 (x3349 x1481)))
(define-fun x2457 ((x1481 Int)) Int (ite (= x1481 322) x2060 (x3329 x1481)))
(define-fun x2881 ((x1481 Int)) Int (x826 x1481))
(define-fun x2901 ((x1481 Int)) Int (x2881 x1481))
(define-fun x1624 ((x1481 Int)) Int (x866 x1481))
(define-fun x1191 ((x1481 Int)) Int (x1624 x1481))
(define-fun x4256 ((x1481 Int)) Int (x1197 x1481))
(define-fun x4164 ((x1481 Int)) Int (x4256 x1481))
(define-fun x2184 ((x1481 Int)) Int (x2353 x1481))
(define-fun x2995 ((x1481 Int)) Int (x2184 x1481))
(define-fun x898 ((x1481 Int)) Int (x723 x1481))
(define-fun x1726 ((x1481 Int)) Int (x898 x1481))
(define-fun x3578 ((x1481 Int)) Int (x4209 x1481))
(define-fun x2203 ((x1481 Int)) Int (x3578 x1481))
(define-fun x3521 ((x1481 Int)) Int (x2618 x1481))
(define-fun x1296 ((x1481 Int)) Int (x3521 x1481))
(define-fun x322 ((x1481 Int)) Int (x919 x1481))
(define-fun x19 ((x1481 Int)) Int (x322 x1481))
(define-fun x1975 ((x1481 Int)) Int (x463 x1481))
(define-fun x3643 ((x1481 Int)) Int (x1975 x1481))
(define-fun x3177 ((x1481 Int)) Int (x2516 x1481))
(define-fun x3826 ((x1481 Int)) Int (x3177 x1481))
(define-fun x4003 ((x1481 Int)) Int (x2496 x1481))
(define-fun x3369 ((x1481 Int)) Int (x4003 x1481))
(define-fun x2783 ((x1481 Int)) Int (x3082 x1481))
(define-fun x3063 ((x1481 Int)) Int (x2783 x1481))
(define-fun x531 ((x1481 Int)) Int (x89 x1481))
(define-fun x696 ((x1481 Int)) Int (x531 x1481))
(define-fun x459 ((x1481 Int)) Int (x2246 x1481))
(define-fun x1218 ((x1481 Int)) Int (x459 x1481))
(define-fun x700 ((x1481 Int)) Int (x2758 x1481))
(define-fun x742 ((x1481 Int)) Int (x700 x1481))
(define-fun x3878 ((x1481 Int)) Int (x4088 x1481))
(define-fun x104 ((x1481 Int)) Int (x3878 x1481))
(define-fun x889 ((x1481 Int)) Int (x828 x1481))
(define-fun x3182 ((x1481 Int)) Int (x889 x1481))
(define-fun x50 ((x1481 Int)) Int (x873 x1481))
(define-fun x1110 ((x1481 Int)) Int (x50 x1481))
(define-fun x1534 ((x1481 Int)) Int (x1019 x1481))
(define-fun x2674 ((x1481 Int)) Int (x1534 x1481))
(define-fun x645 ((x1481 Int)) Int (ite x1883 (ite x4058 (x3349 x1481) (x2457 x1481)) (x2326 x1481)))
(define-fun x1493 ((x1481 Int)) Int (x942 x1481))
(define-fun x3236 ((x1481 Int)) Int (x1493 x1481))
(define-fun x4062 ((x1481 Int)) Int (x2554 x1481))
(define-fun x3273 ((x1481 Int)) Int (x4062 x1481))
(define-fun x4049 ((x1481 Int)) Int (x3101 x1481))
(define-fun x1225 ((x1481 Int)) Int (x4049 x1481))
(define-fun x1850 ((x1481 Int)) Int (x4118 x1481))
(define-fun x1535 ((x1481 Int)) Int (x1850 x1481))
(define-fun x52 ((x1481 Int)) Int (x3028 x1481))
(define-fun x1377 ((x1481 Int)) Int (x52 x1481))
(define-fun x4063 ((x1481 Int)) Int (ite (= x1481 x3797) x4107 (x922 x1481)))
(define-fun x3102 ((x1481 Int)) Int (ite (= x1481 x3628) x824 (x4063 x1481)))
(define-fun x3782 ((x1481 Int)) Int (ite (= x1481 x507) x886 (x2174 x1481)))
(define-fun x3939 ((x1481 Int)) Int (ite (= x1481 x2009) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1605 x1481)))
(define-fun x832 ((x1481 Int)) Int (ite (= x1481 x816) x4157 (x3939 x1481)))
(define-fun x776 ((x1481 Int)) Int (ite (= x2058 x1481) x2495 (x3564 x1481)))
(define-fun x1181 ((x1481 Int)) Int (ite (= x4293 x1481) x1579 (x406 x1481)))
(define-fun x1547 ((x1481 Int)) Int (ite (= x1481 x567) x933 (x1190 x1481)))
(define-fun x4211 ((x1481 Int)) Int (ite (= x3294 x1481) x2585 (x1547 x1481)))
(define-fun x762 ((x1481 Int)) Int (ite (= x567 x1481) x4163 (x1190 x1481)))
(define-fun x1416 ((x1481 Int)) Int (ite x1886 (x1399 x1481) (ite x3802 (ite x1128 (x1547 x1481) (x4211 x1481)) (x762 x1481))))
(define-fun x1745 ((x1481 Int)) Int (ite (= x1481 x289) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x645 x1481)))
(define-fun x394 ((x1481 Int)) Int (ite (= x1481 x3763) x3903 (x1745 x1481)))
(define-fun x478 ((x1481 Int)) Int (ite (= x1481 x1183) 192 (x394 x1481)))
(define-fun x2079 ((x1481 Int)) Int (ite (= x315 x1481) x686 (x478 x1481)))
(define-fun x2065 ((x1481 Int)) Int (ite (and (< x1481 (+ x2844 x686)) (<= x2844 x1481)) (x1416 (- (+ x1481 x567) x2844)) (x2079 x1481)))
(define-fun x1038 ((x1481 Int)) Int (ite (= x94 x1481) x1091 (x2065 x1481)))
(define-fun x707 ((x1481 Int)) Int (ite (= x1481 x2423) x2307 (x1038 x1481)))
(define-fun x2872 ((x1481 Int)) Int (ite (and (>= x1481 x1034) (> (+ x1034 x2307) x1481)) (x3102 (- (+ x2747 x1481) x1034)) (x707 x1481)))
(define-fun x2620 ((x1481 Int)) Int (ite (= x3831 x1481) x1482 (x2872 x1481)))
(define-fun x2728 ((x1481 Int)) Int (ite (= x1481 x3633) 0 (x2620 x1481)))
(define-fun x3222 ((x1481 Int)) Int (ite (= x1481 x2415) x1222 (x2728 x1481)))
(define-fun x2944 ((x1481 Int)) Int (ite (= x3856 x1481) x2851 (x3222 x1481)))
(define-fun x1598 ((x1481 Int)) Int (ite (and (>= x1481 x2023) (> (+ x2023 x2851) x1481)) (x832 (- (+ x925 x1481) x2023)) (x2944 x1481)))
(define-fun x2778 ((x1481 Int)) Int (ite (and (<= 228 x1481) (> x3288 x1481)) (x1598 (- (+ x1481 (x1304 (+ x289 228))) 228)) (x4238 x1481)))
(define-fun x1214 ((x1481 Int)) Int 0)
(define-fun x2294 ((x1481 Int)) Int (x2516 x1481))
(define-fun x943 ((x1481 Int)) Int (x2758 x1481))
(define-fun x3057 ((x1481 Int)) Int (x1019 x1481))
(define-fun x3780 ((x1481 Int)) Int (x2340 x1481))
(define-fun x3280 ((x1481 Int)) Int (x3082 x1481))
(define-fun x2239 ((x1481 Int)) Int (x4088 x1481))
(define-fun x2960 ((x1481 Int)) Int (x828 x1481))
(define-fun x1345 ((x1481 Int)) Int (x2353 x1481))
(define-fun x2688 ((x1481 Int)) Int (x2246 x1481))
(define-fun x1325 ((x1481 Int)) Int (x3101 x1481))
(define-fun x2036 ((x1481 Int)) Int (x89 x1481))
(define-fun x985 ((x1481 Int)) Int (x723 x1481))
(define-fun x219 ((x1481 Int)) Int (x873 x1481))
(define-fun x1332 ((x1481 Int)) Int (x826 x1481))
(define-fun x2240 ((x1481 Int)) Int (x4209 x1481))
(define-fun x4349 ((x1481 Int)) Int (x2496 x1481))
(define-fun x1006 ((x1481 Int)) Int (x942 x1481))
(define-fun x281 ((x1481 Int)) Int (x2554 x1481))
(define-fun x2818 ((x1481 Int)) Int (x463 x1481))
(define-fun x2565 ((x1481 Int)) Int (x1197 x1481))
(define-fun x3126 ((x1481 Int)) Int (x3028 x1481))
(define-fun x3822 ((x1481 Int)) Int (x2618 x1481))
(define-fun x1380 ((x1481 Int)) Int (x919 x1481))
(define-fun x724 ((x1481 Int)) Int (x866 x1481))
(define-fun x4023 ((x1481 Int)) Int (x3826 x1481))
(define-fun x170 ((x1481 Int)) Int (x2340 x1481))
(define-fun x2736 ((x1481 Int)) Int (x3063 x1481))
(define-fun x2797 ((x1481 Int)) Int (x2995 x1481))
(define-fun x1852 ((x1481 Int)) Int (x3182 x1481))
(define-fun x1064 ((x1481 Int)) Int (x1218 x1481))
(define-fun x1443 ((x1481 Int)) Int (x4164 x1481))
(define-fun x274 ((x1481 Int)) Int (x1225 x1481))
(define-fun x3216 ((x1481 Int)) Int (x1110 x1481))
(define-fun x2985 ((x1481 Int)) Int (x2674 x1481))
(define-fun x3029 ((x1481 Int)) Int (x1726 x1481))
(define-fun x808 ((x1481 Int)) Int (x696 x1481))
(define-fun x839 ((x1481 Int)) Int (x2203 x1481))
(define-fun x571 ((x1481 Int)) Int (x3369 x1481))
(define-fun x3284 ((x1481 Int)) Int (x1296 x1481))
(define-fun x2575 ((x1481 Int)) Int (x3236 x1481))
(define-fun x366 ((x1481 Int)) Int (x19 x1481))
(define-fun x1714 ((x1481 Int)) Int (x3273 x1481))
(define-fun x3901 ((x1481 Int)) Int (x3643 x1481))
(define-fun x130 ((x1481 Int)) Int (x1377 x1481))
(define-fun x1701 ((x1481 Int)) Int (x104 x1481))
(define-fun x899 ((x1481 Int)) Int (x2901 x1481))
(define-fun x931 ((x1481 Int)) Int (x742 x1481))
(define-fun x2695 ((x1481 Int)) Int (x1191 x1481))
(define-fun x3025 ((x1481 Int)) Int (x1493 x1481))
(define-fun x69 ((x1481 Int)) Int (x1624 x1481))
(define-fun x1507 ((x1481 Int)) Int (x2881 x1481))
(define-fun x1874 ((x1481 Int)) Int (x4256 x1481))
(define-fun x2392 ((x1481 Int)) Int (x2184 x1481))
(define-fun x1819 ((x1481 Int)) Int (x1975 x1481))
(define-fun x3027 ((x1481 Int)) Int (x898 x1481))
(define-fun x2511 ((x1481 Int)) Int (x3521 x1481))
(define-fun x237 ((x1481 Int)) Int (x3578 x1481))
(define-fun x3130 ((x1481 Int)) Int (x322 x1481))
(define-fun x125 ((x1481 Int)) Int (x4003 x1481))
(define-fun x1967 ((x1481 Int)) Int (x2783 x1481))
(define-fun x3295 ((x1481 Int)) Int (x700 x1481))
(define-fun x2486 ((x1481 Int)) Int (x459 x1481))
(define-fun x1022 ((x1481 Int)) Int (x3878 x1481))
(define-fun x4254 ((x1481 Int)) Int (x889 x1481))
(define-fun x70 ((x1481 Int)) Int (x3177 x1481))
(define-fun x3135 ((x1481 Int)) Int (x50 x1481))
(define-fun x2894 ((x1481 Int)) Int (x1534 x1481))
(define-fun x1776 ((x1481 Int)) Int (x52 x1481))
(define-fun x1112 ((x1481 Int)) Int (x4062 x1481))
(define-fun x3794 ((x1481 Int)) Int (x4049 x1481))
(define-fun x2967 ((x1481 Int)) Int (x531 x1481))
(define-fun x2613 ((x1481 Int)) Int (x1850 x1481))
(define-fun x1861 ((x1481 Int)) Int (ite (and (>= x1481 290) (> 354 x1481)) (x3650 (- x1481 290)) (x370 x1481)))
(define-fun x2257 ((x1481 Int)) Int (x322 x1481))
(define-fun x2624 ((x1481 Int)) Int (x1850 x1481))
(define-fun x893 ((x1481 Int)) Int (x52 x1481))
(define-fun x4258 ((x1481 Int)) Int (x3878 x1481))
(define-fun x2323 ((x1481 Int)) Int (x898 x1481))
(define-fun x1777 ((x1481 Int)) Int (x4003 x1481))
(define-fun x1655 ((x1481 Int)) Int (x1975 x1481))
(define-fun x1471 ((x1481 Int)) Int (x2783 x1481))
(define-fun x852 ((x1481 Int)) Int (x4256 x1481))
(define-fun x3233 ((x1481 Int)) Int (x3521 x1481))
(define-fun x3197 ((x1481 Int)) Int (ite x1788 (x826 x1481) (x3869 x1481)))
(define-fun x3217 ((x1481 Int)) Int (ite x1788 (x828 x1481) (x835 x1481)))
(define-fun x2647 ((x1481 Int)) Int (ite x1788 (x2516 x1481) (x1855 x1481)))
(define-fun x4370 ((x1481 Int)) Int (ite x1788 (x2246 x1481) (x906 x1481)))
(define-fun x1139 ((x1481 Int)) Int (ite x1788 (x1019 x1481) (x1650 x1481)))
(define-fun x4224 ((x1481 Int)) Int (ite x1788 (x89 x1481) (x519 x1481)))
(define-fun x2425 ((x1481 Int)) Int (ite x1788 (x873 x1481) (x2269 x1481)))
(define-fun x622 ((x1481 Int)) Int (ite x1788 (x2353 x1481) (x1871 x1481)))
(define-fun x3456 ((x1481 Int)) Int (ite x1788 (x942 x1481) (x3610 x1481)))
(define-fun x1248 ((x1481 Int)) Int (ite x1788 (x3101 x1481) (x3762 x1481)))
(define-fun x34 ((x1481 Int)) Int (ite x1788 (x866 x1481) (x2342 x1481)))
(define-fun x2427 ((x1481 Int)) Int (ite x1788 (x4209 x1481) (x2279 x1481)))
(define-fun x2201 ((x1481 Int)) Int (ite x1788 (x2554 x1481) (x831 x1481)))
(define-fun x3230 ((x1481 Int)) Int (ite x1788 (x2758 x1481) (x1693 x1481)))
(define-fun x3221 ((x1481 Int)) Int (x1850 x1481))
(define-fun x3073 ((x1481 Int)) Int (x3878 x1481))
(define-fun x1201 ((x1481 Int)) Int (x2783 x1481))
(define-fun x1176 ((x1481 Int)) Int (x3177 x1481))
(define-fun x3738 ((x1481 Int)) Int (x4256 x1481))
(define-fun x1672 ((x1481 Int)) Int (x531 x1481))
(define-fun x1300 ((x1481 Int)) Int (x898 x1481))
(define-fun x3020 ((x1481 Int)) Int (x459 x1481))
(define-fun x1383 ((x1481 Int)) Int (x4049 x1481))
(define-fun x574 ((x1481 Int)) Int (x1534 x1481))
(define-fun x77 ((x1481 Int)) Int (x2184 x1481))
(define-fun x3919 ((x1481 Int)) Int (x50 x1481))
(define-fun x979 ((x1481 Int)) Int (x1975 x1481))
(define-fun x1171 ((x1481 Int)) Int (x52 x1481))
(define-fun x337 ((x1481 Int)) Int (x3578 x1481))
(define-fun x1314 ((x1481 Int)) Int (x322 x1481))
(define-fun x1798 ((x1481 Int)) Int (x4003 x1481))
(define-fun x1172 ((x1481 Int)) Int (x4062 x1481))
(define-fun x42 ((x1481 Int)) Int (x3521 x1481))
(define-fun x480 ((x1481 Int)) Int (x889 x1481))
(define-fun x2441 ((x1481 Int)) Int (x2881 x1481))
(define-fun x2784 ((x1481 Int)) Int (x1624 x1481))
(define-fun x2815 ((x1481 Int)) Int (x1493 x1481))
(define-fun x287 ((x1481 Int)) Int (x700 x1481))
(define-fun x2389 ((x1481 Int)) Int (x1086 x1481))
(define-fun x497 ((x1481 Int)) Int (x2868 x1481))
(define-fun x637 ((x1481 Int)) Int (ite x1194 (x915 x1481) (ite x3505 (x915 x1481) (ite x749 (x915 x1481) (ite x167 (x915 x1481) (ite x565 (x915 x1481) (ite x3406 (x2842 x1481) (x915 x1481))))))))
(define-fun x914 ((x1481 Int)) Int (ite x1194 (x3372 x1481) (ite x3505 (x3372 x1481) (ite x749 (x3372 x1481) (ite x167 (x3372 x1481) (ite x565 (x3372 x1481) (ite x3406 (x1165 x1481) (x3372 x1481))))))))
(define-fun x4182 ((x1481 Int)) Int (x1086 x1481))
(define-fun x451 ((x1481 Int)) Int (x2868 x1481))
(define-fun x625 ((x1481 Int)) Int (x915 x1481))
(define-fun x1709 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2045 ((x1481 Int)) Int (x1086 x1481))
(define-fun x4286 ((x1481 Int)) Int (x2731 x1481))
(define-fun x3301 ((x1481 Int)) Int (x915 x1481))
(define-fun x2530 ((x1481 Int)) Int (ite x1739 (x2749 x1481) (x2731 x1481)))
(define-fun x2714 ((x1481 Int)) Int (ite x1238 (x2731 x1481) (ite x2534 (x2530 x1481) (ite x3709 (x2530 x1481) (x2731 x1481)))))
(define-fun x340 ((x1481 Int)) Int (ite x993 (x2731 x1481) (ite x1026 (x2731 x1481) (x2714 x1481))))
(define-fun x2029 ((x1481 Int)) Int (ite x860 (x340 x1481) (x2731 x1481)))
(define-fun x1462 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2715 ((x1481 Int)) Int (x1086 x1481))
(define-fun x101 ((x1481 Int)) Int (ite x860 (x3372 x1481) (x2275 x1481)))
(define-fun x814 ((x1481 Int)) Int (x1086 x1481))
(define-fun x1284 ((x1481 Int)) Int (ite x2250 (ite x860 (x340 x1481) (x2731 x1481)) (x2731 x1481)))
(define-fun x4021 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2623 ((x1481 Int)) Int (ite x2250 (x1284 x1481) (x4261 x1481)))
(define-fun x262 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2540 ((x1481 Int)) Int (x1086 x1481))
(define-fun x834 ((x1481 Int)) Int (ite x2250 (x3725 x1481) (x915 x1481)))
(define-fun x471 ((x1481 Int)) Int (ite x2250 (x4219 x1481) (x3372 x1481)))
(define-fun x3500 ((x1481 Int)) Int (ite x2250 (ite x2250 (x1284 x1481) (x4261 x1481)) (x2731 x1481)))
(define-fun x1566 ((x1481 Int)) Int (x1086 x1481))
(define-fun x388 ((x1481 Int)) Int (x2868 x1481))
(define-fun x3026 ((x1481 Int)) Int (x915 x1481))
(define-fun x891 ((x1481 Int)) Int (x3372 x1481))
(define-fun x3649 ((x1481 Int)) Int (x2868 x1481))
(define-fun x4275 ((x1481 Int)) Int (x1086 x1481))
(define-fun x68 ((x1481 Int)) Int (x2731 x1481))
(define-fun x3589 ((x1481 Int)) Int (x3372 x1481))
(define-fun x677 ((x1481 Int)) Int (x915 x1481))
(define-fun x1760 ((x1481 Int)) Int (x2868 x1481))
(define-fun x1731 ((x1481 Int)) Int (x1086 x1481))
(define-fun x3342 ((x1481 Int)) Int (ite (= x977 x1481) x1559 (x3272 x1481)))
(define-fun x496 ((x1481 Int)) Int (ite (= x1481 x3668) x1154 (x3342 x1481)))
(define-fun x1032 ((x1481 Int)) Int (ite (and (>= x1481 128) (> (+ 128 x1912) x1481)) (x2915 (+ 36 x1481)) (x4081 x1481)))
(define-fun x3120 ((x1481 Int)) Int (ite (= x1867 x1481) 0 (x1032 x1481)))
(define-fun x555 ((x1481 Int)) Int (ite (= x1860 x1481) x1942 (x3120 x1481)))
(define-fun x3179 ((x1481 Int)) Int (ite (= x1481 x3227) 0 (x3162 x1481)))
(define-fun x3879 ((x1481 Int)) Int (ite (= 128 x1481) x1912 (x555 x1481)))
(define-fun x2523 ((x1481 Int)) Int (ite (and (>= x1481 160) (< x1481 (+ x1912 160))) (x2915 (+ 4 x1481)) (x3879 x1481)))
(define-fun x3268 ((x1481 Int)) Int (ite (= x1451 x1481) 0 (x2523 x1481)))
(define-fun x3086 ((x1481 Int)) Int (ite (= x3256 x1481) x4000 (x3268 x1481)))
(define-fun x2369 ((x1481 Int)) Int (ite (and (> (+ x632 x4000) x1481) (>= x1481 x632)) (x2915 (- (+ x2049 x1481) x632)) (x3086 x1481)))
(define-fun x1808 ((x1481 Int)) Int (ite (= x2577 x1481) 0 (x2369 x1481)))
(define-fun x3307 ((x1481 Int)) Int (ite (= x1482 x1481) x560 (x2706 x1481)))
(define-fun x1790 ((x1481 Int)) Int (ite (= x1481 x3773) x3163 (x3307 x1481)))
(define-fun x1849 ((x1481 Int)) Int (ite (= x3773 x1481) x267 (x1790 x1481)))
(define-fun x295 ((x1481 Int)) Int (ite (= x1481 x1482) x248 (x1849 x1481)))
(define-fun x2204 ((x1481 Int)) Int (ite x2690 (x2706 x1481) (ite x2110 (x1790 x1481) (ite x3556 (x295 x1481) (x2706 x1481)))))
(define-fun x1459 ((x1481 Int)) Int (x2868 x1481))
(define-fun x546 ((x1481 Int)) Int (x1086 x1481))
(define-fun x3318 ((x1481 Int)) Int (x2731 x1481))
(define-fun x1743 ((x1481 Int)) Int (x915 x1481))
(define-fun x179 ((x1481 Int)) Int (ite x2690 (x3372 x1481) (x71 x1481)))
(define-fun x3642 ((x1481 Int)) Int (ite (= x1481 x3668) x2537 (x2204 x1481)))
(define-fun x4289 ((x1481 Int)) Int (ite (= x1481 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1402 x1481)))
(define-fun x1986 ((x1481 Int)) Int (ite (= x1481 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4289 x1481)))
(define-fun x2166 ((x1481 Int)) Int (ite (= x1481 128) 64 (x3398 x1481)))
(define-fun x771 ((x1481 Int)) Int (ite (= x1481 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x2907 x1481)))
(define-fun x223 ((x1481 Int)) Int (ite (= 258 x1481) x2857 (x771 x1481)))
(define-fun x1965 ((x1481 Int)) Int (ite (= x1481 224) 34 (x4342 x1481)))
(define-fun x3059 ((x1481 Int)) Int (ite (= x1481 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x2659 x1481)))
(define-fun x466 ((x1481 Int)) Int (ite (= 294 x1481) x775 (x3059 x1481)))
(define-fun x1213 ((x1481 Int)) Int (ite (= x1481 326) x1482 (x466 x1481)))
(define-fun x2159 ((x1481 Int)) Int (ite (= x1481 358) 160 (x1213 x1481)))
(define-fun x3829 ((x1481 Int)) Int (ite (= x1481 454) x2997 (x2159 x1481)))
(define-fun x1625 ((x1481 Int)) Int (ite (and (< x1481 (+ 486 x2997)) (<= 486 x1481)) (x1986 (- x1481 326)) (x3829 x1481)))
(define-fun x1311 ((x1481 Int)) Int (ite (= x1481 390) 0 (x1625 x1481)))
(define-fun x1486 ((x1481 Int)) Int (ite (= 422 x1481) x920 (x1311 x1481)))
(define-fun x243 ((x1481 Int)) Int (ite (= x1481 x4368) x3138 (x1486 x1481)))
(define-fun x1141 ((x1481 Int)) Int (ite (and (>= x1481 x1063) (> (+ x1063 x3138) x1481)) (x223 (- (+ x1481 256) x1063)) (x243 x1481)))
(define-fun x3408 ((x1481 Int)) Int (ite (and (<= 292 x1481) (< x1481 x1518)) (x1141 (+ x1481 290)) (x3673 x1481)))
(define-fun x2320 ((x1481 Int)) Int (ite (= 128 x1481) 0 (x3436 x1481)))
(define-fun x592 ((x1481 Int)) Int (ite (= 160 x1481) 0 (x2320 x1481)))
(define-fun x3974 ((x1481 Int)) Int (ite (= x1481 290) x2113 (x1141 x1481)))
(define-fun x1671 ((x1481 Int)) Int (ite (= x1481 322) x3360 (x3974 x1481)))
(define-fun x853 ((x1481 Int)) Int (x2868 x1481))
(define-fun x55 ((x1481 Int)) Int (x4345 x1481))
(define-fun x1557 ((x1481 Int)) Int (x1802 x1481))
(define-fun x1575 ((x1481 Int)) Int (x1189 x1481))
(define-fun x364 ((x1481 Int)) Int (ite x2669 (ite x2891 (x1141 x1481) (x1671 x1481)) (x879 x1481)))
(define-fun x3647 ((x1481 Int)) Int (x444 x1481))
(define-fun x536 ((x1481 Int)) Int (x624 x1481))
(define-fun x928 ((x1481 Int)) Int (x691 x1481))
(define-fun x551 ((x1481 Int)) Int (x75 x1481))
(define-fun x3246 ((x1481 Int)) Int (x1692 x1481))
(define-fun x692 ((x1481 Int)) Int (x1918 x1481))
(define-fun x1720 ((x1481 Int)) Int (x2731 x1481))
(define-fun x3551 ((x1481 Int)) Int (x915 x1481))
(define-fun x871 ((x1481 Int)) Int (x576 x1481))
(define-fun x3765 ((x1481 Int)) Int (x3372 x1481))
(define-fun x1979 ((x1481 Int)) Int (x1086 x1481))
(define-fun x3378 ((x1481 Int)) Int (x3089 x1481))
(define-fun x2766 ((x1481 Int)) Int (x4004 x1481))
(define-fun x3620 ((x1481 Int)) Int (x3013 x1481))
(define-fun x2776 ((x1481 Int)) Int (x1637 x1481))
(define-fun x285 ((x1481 Int)) Int (x3131 x1481))
(define-fun x927 ((x1481 Int)) Int (x485 x1481))
(define-fun x982 ((x1481 Int)) Int (x3162 x1481))
(define-fun x1007 ((x1481 Int)) Int (x1586 x1481))
(define-fun x306 ((x1481 Int)) Int (x2883 x1481))
(define-fun x651 ((x1481 Int)) Int (ite (= x1481 x2653) x3814 (x2867 x1481)))
(define-fun x238 ((x1481 Int)) Int (ite (= x1481 x1831) x4260 (x651 x1481)))
(define-fun x2711 ((x1481 Int)) Int (ite (= x921 x1481) x442 (x1163 x1481)))
(define-fun x201 ((x1481 Int)) Int (ite (= x1481 x1769) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1014 x1481)))
(define-fun x605 ((x1481 Int)) Int (ite (= x1481 x2968) x2857 (x201 x1481)))
(define-fun x234 ((x1481 Int)) Int (ite (= x2074 x1481) x1330 (x4333 x1481)))
(define-fun x336 ((x1481 Int)) Int (ite (= x2865 x1481) x2293 (x1123 x1481)))
(define-fun x1513 ((x1481 Int)) Int (ite (= x1481 x3475) x3339 (x384 x1481)))
(define-fun x3422 ((x1481 Int)) Int (ite (= x2020 x1481) x212 (x1513 x1481)))
(define-fun x2666 ((x1481 Int)) Int (ite (= x3475 x1481) x3478 (x384 x1481)))
(define-fun x1288 ((x1481 Int)) Int (ite x1748 (x2053 x1481) (ite x63 (ite x2828 (x1513 x1481) (x3422 x1481)) (x2666 x1481))))
(define-fun x3416 ((x1481 Int)) Int (ite (= x3768 x1481) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x364 x1481)))
(define-fun x2122 ((x1481 Int)) Int (ite (= x1481 x272) x775 (x3416 x1481)))
(define-fun x1033 ((x1481 Int)) Int (ite (= x1876 x1481) 192 (x2122 x1481)))
(define-fun x4132 ((x1481 Int)) Int (ite (= x380 x1481) x2108 (x1033 x1481)))
(define-fun x2383 ((x1481 Int)) Int (ite (and (>= x1481 x3518) (> (+ x2108 x3518) x1481)) (x1288 (- (+ x3475 x1481) x3518)) (x4132 x1481)))
(define-fun x2381 ((x1481 Int)) Int (ite (= x2605 x1481) x1676 (x2383 x1481)))
(define-fun x4324 ((x1481 Int)) Int (ite (= x1495 x1481) x291 (x2381 x1481)))
(define-fun x3635 ((x1481 Int)) Int (ite (and (< x1481 (+ x291 x2681)) (>= x1481 x2681)) (x238 (- (+ x1481 x988) x2681)) (x4324 x1481)))
(define-fun x1028 ((x1481 Int)) Int (ite (= x2 x1481) x1482 (x3635 x1481)))
(define-fun x2034 ((x1481 Int)) Int (ite (= x1243 x1481) 0 (x1028 x1481)))
(define-fun x2591 ((x1481 Int)) Int (ite (= x1287 x1481) x1616 (x2034 x1481)))
(define-fun x2599 ((x1481 Int)) Int (ite (= x1481 x345) x1538 (x2591 x1481)))
(define-fun x3439 ((x1481 Int)) Int (ite (and (> (+ x1538 x39) x1481) (>= x1481 x39)) (x605 (- (+ x958 x1481) x39)) (x2599 x1481)))
(define-fun x756 ((x1481 Int)) Int (ite (and (> x3651 x1481) (<= 228 x1481)) (x3439 (- (+ x1481 (x1304 (+ x3768 228))) 228)) (x3276 x1481)))
(define-fun x972 ((x1481 Int)) Int 0)
(define-fun x4201 ((x1481 Int)) Int (x71 x1481))
(define-fun x3594 ((x1481 Int)) Int (x2731 x1481))
(define-fun x3285 ((x1481 Int)) Int (x915 x1481))
(define-fun x2371 ((x1481 Int)) Int (x1086 x1481))
(define-fun x2941 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2529 ((x1481 Int)) Int (x3551 x1481))
(define-fun x3717 ((x1481 Int)) Int (x71 x1481))
(define-fun x7 ((x1481 Int)) Int (x1720 x1481))
(define-fun x2301 ((x1481 Int)) Int (x853 x1481))
(define-fun x3938 ((x1481 Int)) Int (x1979 x1481))
(define-fun x2111 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2011 ((x1481 Int)) Int (x624 x1481))
(define-fun x1193 ((x1481 Int)) Int (x4345 x1481))
(define-fun x54 ((x1481 Int)) Int (x1802 x1481))
(define-fun x2678 ((x1481 Int)) Int (x915 x1481))
(define-fun x1718 ((x1481 Int)) Int (x1189 x1481))
(define-fun x327 ((x1481 Int)) Int (x75 x1481))
(define-fun x674 ((x1481 Int)) Int (x444 x1481))
(define-fun x3546 ((x1481 Int)) Int (x691 x1481))
(define-fun x752 ((x1481 Int)) Int (x2731 x1481))
(define-fun x1558 ((x1481 Int)) Int (x1692 x1481))
(define-fun x3209 ((x1481 Int)) Int (x3372 x1481))
(define-fun x2594 ((x1481 Int)) Int (x1918 x1481))
(define-fun x1083 ((x1481 Int)) Int (x576 x1481))
(define-fun x2280 ((x1481 Int)) Int (x1086 x1481))
(define-fun x1551 ((x1481 Int)) Int (x3089 x1481))
(define-fun x4047 ((x1481 Int)) Int (x4004 x1481))
(define-fun x1295 ((x1481 Int)) Int (x1637 x1481))
(define-fun x3470 ((x1481 Int)) Int (x1586 x1481))
(define-fun x4133 ((x1481 Int)) Int (x3013 x1481))
(define-fun x1736 ((x1481 Int)) Int (x3162 x1481))
(define-fun x1200 ((x1481 Int)) Int (x485 x1481))
(define-fun x3631 ((x1481 Int)) Int (x2883 x1481))
(define-fun x1796 ((x1481 Int)) Int (x3131 x1481))
(define-fun x2983 ((x1481 Int)) Int (ite (and (< x1481 354) (<= 290 x1481)) (x3271 (- x1481 290)) (x3330 x1481)))
(define-fun x3803 ((x1481 Int)) Int (ite x1026 (x2731 x1481) (x2714 x1481)))
(define-fun x3942 ((x1481 Int)) Int (x915 x1481))
(define-fun x96 ((x1481 Int)) Int (x3372 x1481))
(define-fun x3355 ((x1481 Int)) Int (x1086 x1481))
(define-fun x1436 ((x1481 Int)) Int (x2868 x1481))
(define-fun x1928 ((x1481 Int)) Int (ite x2534 (x2530 x1481) (ite x3709 (x2530 x1481) (x2731 x1481))))
(define-fun x3299 ((x1481 Int)) Int (x3372 x1481))
(define-fun x4024 ((x1481 Int)) Int (x2731 x1481))
(define-fun x2689 ((x1481 Int)) Int (x915 x1481))
(define-fun x18 ((x1481 Int)) Int (x1086 x1481))
(define-fun x1813 ((x1481 Int)) Int (x2868 x1481))
(define-fun x2738 ((x1481 Int)) Int (ite x2528 (x3632 x1481) (x826 x1481)))
(define-fun x936 ((x1481 Int)) Int (ite x2528 (x1900 x1481) (x1019 x1481)))
(define-fun x582 ((x1481 Int)) Int (ite x2528 (x1960 x1481) (x2246 x1481)))
(define-fun x2930 ((x1481 Int)) Int (ite x2528 (x1230 x1481) (x2516 x1481)))
(define-fun x1544 ((x1481 Int)) Int (ite x2528 (x4101 x1481) (x89 x1481)))
(define-fun x4078 ((x1481 Int)) Int (ite x2528 (x1601 x1481) (x2353 x1481)))
(define-fun x240 ((x1481 Int)) Int (ite x2528 (x1775 x1481) (x873 x1481)))
(define-fun x1937 ((x1481 Int)) Int (ite x2528 (x2743 x1481) (x828 x1481)))
(define-fun x2104 ((x1481 Int)) Int (ite x2528 (x779 x1481) (x4209 x1481)))
(define-fun x2927 ((x1481 Int)) Int (ite x2528 (x3450 x1481) (x942 x1481)))
(define-fun x1056 ((x1481 Int)) Int (ite x2528 (x3495 x1481) (x866 x1481)))
(define-fun x3159 ((x1481 Int)) Int (ite x2528 (x12 x1481) (x2554 x1481)))
(define-fun x2007 ((x1481 Int)) Int (ite x2528 (x1889 x1481) (x3101 x1481)))
(define-fun x735 ((x1481 Int)) Int (ite x2528 (x2703 x1481) (x2758 x1481)))
(define-fun x2567 ((x1481 Int)) Int (ite x1739 (x2460 x1481) (x827 x1481)))
(define-fun x2151 ((x1481 Int)) Int (ite (= x313 x1481) x2384 (x2567 x1481)))
(define-fun x3108 ((x1481 Int)) Int (ite x3998 (x1710 x1481) (x937 x1481)))
(define-fun x3250 ((x1481 Int)) Int (ite (and (>= x1481 128) (< x1481 160)) (x3108 (- x1481 128)) (x475 x1481)))
(define-fun x2954 ((x1481 Int)) Int (ite x302 (x948 x1481) (ite x596 (x3335 x1481) (x3949 x1481))))
(define-fun x3857 ((x1481 Int)) Int (ite (and (<= 128 x1481) (> 160 x1481)) (x2954 (- x1481 128)) (x3904 x1481)))
(define-fun x1344 ((x1481 Int)) Int 0)
(define-fun x4183 ((x1481 Int)) Int (ite (= 128 x1481) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x331 x1481)))
(define-fun x3195 ((x1481 Int)) Int (ite (= 132 x1481) x1847 (x4183 x1481)))
(define-fun x2914 ((x1481 Int)) Int (ite (= 164 x1481) x1719 (x3195 x1481)))
(define-fun x2473 ((x1481 Int)) Int (ite (= x1481 196) x4085 (x2914 x1481)))
(define-fun x715 ((x1481 Int)) Int (ite (= 128 x1481) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x331 x1481)))
(define-fun x3881 ((x1481 Int)) Int (ite (= x1481 132) x616 (x715 x1481)))
(define-fun x1375 ((x1481 Int)) Int 0)
(define-fun x1209 ((x1481 Int)) Int (ite (= 128 x1481) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x331 x1481)))
(define-fun x4233 ((x1481 Int)) Int (ite (= x1481 132) x265 (x1209 x1481)))
(define-fun x3785 ((x1481 Int)) Int (ite (= x1481 x4280) x4335 (x1282 x1481)))
(define-fun x795 ((x1481 Int)) Int (ite (= x3668 x1481) x275 (x496 x1481)))
(assert (=> (<= x1522 10000) (= (x1946 x1522) 0)))
(assert (not (x3387 (x1502 64 x775 5))))
(assert (x3185 x1441))
(assert (= x805 (and x630 (not x1312))))
(assert (= x765 (x3590 (x2724 x765 x3941 x2716 x3682 x199))))
(assert (=> (>= 10000 x11) (= 0 (x1946 x11))))
(assert (= (and x4283 x2170) x2642))
(assert (= x1246 (and (not x2733) x93)))
(assert (x3387 3521034783))
(assert (x3185 x2519))
(assert (< (x1502 x2947 x332 x2499) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1058))
(assert (x3185 x1906))
(assert (= (and x3576 (not x2735)) x1862))
(assert (x3185 x1898))
(assert (x3185 x641))
(assert (= (or (and x3323 (not x962)) x2165) x2192))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2724 x765 x3941 x2716 x3682 x199)))
(assert (x3185 x300))
(assert (= x1841 (or (and x4309 x500) (and x1150 x1520) (and x2792 x3978))))
(assert (= x667 (and x2150 (not x2572))))
(assert (x3185 x1949))
(assert (= (x1259 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307)) x202))
(assert (not (x3387 (x2724 x4046 x1101 x210 x3488 x1098))))
(assert (= 0 (x1946 1461501637330902918203684832716283019655932542975)))
(assert (x3185 x1494))
(assert (x3185 x669))
(assert (x3185 x2400))
(assert (x3185 x1759))
(assert (=> (>= 10000 x1066) (= 0 (x1946 x1066))))
(assert (=> (>= 10000 x1280) (= 0 (x1946 x1280))))
(assert (= 64 (x3590 (x1502 64 x729 11))))
(assert (=> (<= x1477 10000) (= 0 (x1946 x1477))))
(assert (x3185 x2241))
(assert (x3185 x448))
(assert (x3185 x1076))
(assert (=> (>= 10000 x1740) (= 0 (x1946 x1740))))
(assert (< 10000 (x1502 64 x3703 10)))
(assert (=> (<= x202 10000) (= (x1946 x202) 0)))
(assert (=> (>= 10000 x1681) (= 0 (x1946 x1681))))
(assert (= (and x134 (not x797)) x2617))
(assert (=> (>= 10000 x3116) (= 0 (x1946 x3116))))
(assert (= x2408 (x1259 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (= 0 (x1946 486791245)))
(assert (x3185 x4178))
(assert (= (x3590 (x1502 64 x1261 36)) 64))
(assert (x3185 x1823))
(assert (x3185 x491))
(assert (< 10000 (x1502 x2757 x903 x2989)))
(assert (= x332 (x4053 (x1502 x2947 x332 x2499))))
(assert (not (x3387 (x1502 x2762 x3116 x1715))))
(assert (x3185 x963))
(assert (= (x4053 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602)) x2200))
(assert (x3185 x4145))
(assert (x3185 x2488))
(assert (x3185 x1858))
(assert (x3185 x3464))
(assert (= x4079 (and (not x1161) x1779)))
(assert (= x3480 (and x1665 x2609)))
(assert (=> (>= 10000 x765) (= 0 (x1946 x765))))
(assert (x3185 x3987))
(assert (> (x1502 64 x3269 (ite (<= x3659 32) x1700 (ite (<= x3659 64) x1339 (ite (>= 96 x3659) x72 (ite (>= 128 x3659) x176 (ite (<= x3659 160) x2700 (ite (>= 192 x3659) x4323 x1811))))))) 10000))
(assert (x2187 x276))
(assert (= 0 (x1946 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (x3185 x3592))
(assert (= (and x4172 (not x1258)) x3550))
(assert (x3185 x40))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656)))
(assert (= x4259 (x1723 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648))))
(assert (= x3713 (x4053 (x1502 64 x3713 100))))
(assert (x3185 x1553))
(assert (= (and (not x2938) x4050) x3807))
(assert (x3185 x361))
(assert (= x4283 (and x2466 (not x3698))))
(assert (= (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656) (x1946 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (x3185 x3980))
(assert (x3185 x4075))
(assert (x3185 x3674))
(assert (= (x1723 (x1057 x2762 x1522 x1067 x894 x26 x2402)) x26))
(assert (not (x3387 (x998 x2757 x1058 x3931 x3188))))
(assert (x3185 x1919))
(assert (= (=> (and (= x2095 (x496 x3668)) (= x2447 x3320) (= x1537 x3569) (= (- x2095 x3471) x275) (<= 0 x1537) (= x1417 (x795 x977)) (= x3689 (x4191 255 x3993)) (= 2 x2467) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1417 x3471)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1537) (= (+ x3471 x1417) x1537)) x896) x1148))
(assert (x3185 x593))
(assert (=> (<= x3773 10000) (= (x1946 x3773) 0)))
(assert (x3185 x2973))
(assert (= x2064 (and x1890 (not x3187))))
(assert (x3638 x1223))
(assert (= (and x3463 x2454) x748))
(assert (=> (>= 10000 x4253) (= 0 (x1946 x4253))))
(assert (x3185 x36))
(assert (x3185 x616))
(assert (x3185 x4305))
(assert (= (and x2405 x278) x3501))
(assert (x3185 x3565))
(assert (x3185 x132))
(assert (= (and x1523 x750) x526))
(assert (x3185 x1770))
(assert (x3185 x1262))
(assert (< (x3876 x3659 x3925) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x930))
(assert (=> (>= 10000 x2499) (= (x1946 x2499) 0)))
(assert (= x2947 (x3590 (x3876 x2947 x379))))
(assert (x3185 x1794))
(assert (x3185 x1791))
(assert (= x148 (x2248 (x1057 x3461 x2214 x148 x1988 x1961 x1554))))
(assert (x3185 x580))
(assert (x2097 x3364))
(assert (= (x2834 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) x43))
(assert (x2097 x4263))
(assert (< (x3876 x2757 x2831) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3064))
(assert (x3185 x2625))
(assert (= (x2248 (x1502 x3659 x1891 x3365)) x3365))
(assert (= (x2834 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) x1617))
(assert (x3185 x1426))
(assert (x3185 x1094))
(assert (x3185 x1830))
(assert (x3185 x437))
(assert (x3185 x2966))
(assert (=> (<= x1789 10000) (= (x1946 x1789) 0)))
(assert (= x2040 (=> (and (or (and x1799 (and (= x455 36) (= 0 x115) (= x3076 false) (= true x1328) (= x2756 x1954) (= x2773 x2069) (= x476 x3111) (= 2 x3845))) (and (not x1799) (and (= (x3500 x1051) x3539) (= x115 1) (= x3111 x1385) (= (x4191 255 x701) x1020) (= false x3437) (= x1051 (x1502 64 x638 36)) (= 32 x455) (= x2069 x3166) (= x1954 x4066) (= x1153 (x4191 255 x701)) (= x701 (+ 1 x638)) (= x427 false)))) (and (= x638 x944) (= (= x638 255) x1799) (= x908 x1613) (= x3968 x820) (= x3640 x820) (= x4066 x2344) (= x908 x3166) (= x1385 x3640) (= x1756 x1613) (= x944 x3886) (= x3886 x1997) (= x3671 x187) (= x2344 x3671) (<= x638 255))) x1050)))
(assert (x3185 x146))
(assert (= (and x3006 (not x3721)) x2324))
(assert (= x1000 (x4053 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947))))
(assert (x3185 x1122))
(assert (= x1602 (x3590 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (= x1643 (=> (and (= x2233 true) (= x3903 x2566) (= x1212 x3824) (= x2090 false) (= x2793 x1897) (= x4280 x628) (= x1649 x2640) (= x2811 2) (= x1132 x1418) (= x1600 x3844) (= x1250 x3141) (= x2696 x1545) (= x3940 x2304) (= x806 x1894) (= x4153 0) (= x3758 x1047) (= x1667 x3274)) x722)))
(assert (x3185 x812))
(assert (not (x3387 (x1502 64 x638 36))))
(assert (x3185 x4068))
(assert (> (x3876 x3461 x3096) 10000))
(assert (=> (>= 10000 x4259) (= (x1946 x4259) 0)))
(assert (=> (<= x3484 10000) (= 0 (x1946 x3484))))
(assert (x3185 x4337))
(assert (x3185 x1554))
(assert (=> (>= 10000 x547) (= (x1946 x547) 0)))
(assert (not (x3387 (x998 x1602 x1878 x2521 x1476))))
(assert (=> (<= x3906 10000) (= 0 (x1946 x3906))))
(assert (x3185 x760))
(assert (x3185 x1098))
(assert (x3185 x753))
(assert (= (and x666 x1365) x4080))
(assert (x3185 x3634))
(assert (= (x1723 (x2724 x765 x3941 x2716 x3682 x199)) x199))
(assert (x3185 x1371))
(assert (x3185 x792))
(assert (x3185 x3691))
(assert (=> (<= x1847 10000) (= 0 (x1946 x1847))))
(assert (=> (<= x2716 10000) (= 0 (x1946 x2716))))
(assert (not (x3387 (x3876 32 104))))
(assert (= (x2443 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) x2777))
(assert (x3185 x204))
(assert (= x750 (and x2878 x2840)))
(assert (=> (<= x1261 10000) (= 0 (x1946 x1261))))
(assert (x2097 x3091))
(assert (=> (<= x3129 10000) (= (x1946 x3129) 0)))
(assert (x3185 x1896))
(assert (=> (>= 10000 x3679) (= 0 (x1946 x3679))))
(assert (x3185 x3290))
(assert (= x1050 (=> (and (or x1797 (not x1797)) (and (= (= x60 0) x1797) (= x3111 x2194) (= x2069 x644) (= x115 x60) (= x455 x2848) (= x3415 x1954))) x73)))
(assert (x3185 x2697))
(assert (x3724 x3626))
(assert (= x650 (x2248 (x2724 x3659 x1593 x650 x3229 x2424))))
(assert (> (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542) 10000))
(assert (x3185 x1359))
(assert (x2097 x83))
(assert (=> (>= 10000 x2347) (= (x1946 x2347) 0)))
(assert (= (and x1048 x3413) x1207))
(assert (=> (<= x3668 10000) (= 0 (x1946 x3668))))
(assert (x3185 x1582))
(assert (=> (<= x2008 10000) (= (x1946 x2008) 0)))
(assert (= x2232 (x2834 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (x3185 x3768))
(assert (x3185 x2770))
(assert (= x3922 (=> (and (= x806 x1894) (= x2971 2) (= x1212 x3824) (= x1047 x3758) (= x2456 true) (= x3903 x2566) (= x2793 x1897) (= x1649 x2640) (= x628 x4280) (= false x3149) (= x1250 x3141) (= x1418 x1132) (= 0 x4153) (= x3274 x1667) (= x2304 x3940) (= x1600 x3844) (= x2696 x1545)) x722)))
(assert (x3185 x820))
(assert (x3185 x633))
(assert (= (=> (and (= x806 x4055) (= x3824 x2705) (= x3228 0) (= x3274 x768) (= x2625 2) (= x1483 x3141) (= x1804 x4280) (= x3646 (x4191 255 x518)) (= x3139 x1649) (= x4375 x3758) (= x4151 x3844) (= x2817 x3940) (= x2696 x1446) (= x1903 x3903) (= x1746 x992) (= x2782 x3646) (= x1418 x3766)) x2677) x3292))
(assert (= x550 (or x845 x1215 x2850)))
(assert (= 0 (x1946 1766847064778384329583297500742918515827483896875618958121606201292619776)))
(assert (= x2221 (and x401 (not x528))))
(assert (x3185 x2687))
(assert (x3185 x498))
(assert (= x3896 (and (not x1644) x1187)))
(assert (= (x2834 (x1057 x3659 x1608 x1761 x1401 x1199 x1664)) x1664))
(assert (x3185 x2747))
(assert (= x4036 (and x16 (not x1639))))
(assert (= (and x3265 x1407) x2589))
(assert (= x787 (and (not x1382) x269)))
(assert (= (x2834 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)) x2296))
(assert (x3387 65535))
(assert (= x664 (and x3458 x367)))
(assert (x3185 x2848))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1057 x2947 x1589 x1322 x3543 x4228 x517)))
(assert (= (x1259 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)) x1452))
(assert (= x263 (=> (= (= x4198 0) x2022) (and (=> (and (not x2022) (= x2543 (< x2330 64))) (and (=> (and x2543 (and (= x3433 true) (= 0 x2639) (= false x470))) x486) (=> (and (and (= x2264 x4270) (= x3634 x190) (= x1055 (x2983 322)) (= x2012 x4203) (= x656 x4095) (= x2181 x4038) (= (x2983 290) x2012) (= x921 354) (= x1778 x2873) (= x3677 x1620) (= x3247 x1208) (= x1354 x316) (= x1971 x3976) (= x1464 x1887) (= x2087 x669) (= x623 x3773) (= x1580 x545)) (not x2543)) x4149))) (=> (and (and (= true x3540) (= x2639 x2330) (= x2492 false)) x2022) x486)))))
(assert (x3185 x3686))
(assert (= x116 (x2248 (x1502 x314 x1770 x116))))
(assert (x3185 x2032))
(assert (x3185 x2791))
(assert (= (x998 x765 x580 x2197 x687) (x1946 (x998 x765 x580 x2197 x687))))
(assert (x3185 x4143))
(assert (x3185 x2060))
(assert (x3185 x4096))
(assert (=> (<= x2114 10000) (= (x1946 x2114) 0)))
(assert (x3185 x2672))
(assert (= (x1502 64 1 x3995) (x1946 (x1502 64 1 x3995))))
(assert (= x2148 (and x1962 (not x530))))
(assert (= x2979 (and x2713 (not x1895))))
(assert (x3185 x3801))
(assert (< 10000 (x2724 x4046 x1101 x210 x3488 x1098)))
(assert (= x3891 (or x2453 x2254)))
(assert (> (x1502 64 x1261 36) 10000))
(assert (x3185 x4263))
(assert (x3185 x377))
(assert (x3185 x1219))
(assert (= (and x1466 x4105) x3201))
(assert (x3185 x2134))
(assert (x3185 x128))
(assert (=> (<= x3526 10000) (= 0 (x1946 x3526))))
(assert (x3185 x2497))
(assert (not (x3387 (x3876 x2757 x2831))))
(assert (= x1220 (and (not x1539) x318)))
(assert (x3185 x3993))
(assert (x3185 x393))
(assert (< 10000 (x1502 64 x3389 7)))
(assert (= x3323 (or x1026 x2888)))
(assert (x3724 x2668))
(assert (x2097 x3607))
(assert (x3185 x4180))
(assert (= x412 (or x4187 x953)))
(assert (= (or x2534 x3807 x3709) x1466))
(assert (x3185 x1518))
(assert (x3185 x3626))
(assert (=> (<= x3659 10000) (= (x1946 x3659) 0)))
(assert (x3185 x3773))
(assert (= x4050 (and x1509 x1583)))
(assert (< (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1212))
(assert (x3185 x2352))
(assert (=> (<= x314 10000) (= 0 (x1946 x314))))
(assert (= x314 (x3590 (x998 x314 x2347 x3906 x3871))))
(assert (x3185 x4038))
(assert (x3185 x1323))
(assert (< 10000 (x2724 x765 x3941 x2716 x3682 x199)))
(assert (x3185 x621))
(assert (x3185 x2548))
(assert (x3185 x2696))
(assert (> (x1502 64 1 x2364) 10000))
(assert (x3185 x2330))
(assert (=> (>= 10000 x1411) (= 0 (x1946 x1411))))
(assert (x3185 x4134))
(assert (x3185 x2817))
(assert (= x2602 (x1259 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (= (or x4326 x2891) x2082))
(assert (= (x1057 x2497 x4380 x1265 x573 x3485 x448) (x1946 (x1057 x2497 x4380 x1265 x573 x3485 x448))))
(assert (x3185 x2347))
(assert (x3185 x2570))
(assert (x3185 x493))
(assert (x3185 x402))
(assert (x2097 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2097 x3046))
(assert (x3185 x343))
(assert (= (and (not x1048) x3413) x4235))
(assert (= x630 (or x228 x1838)))
(assert (x3185 x2429))
(assert (x3185 x3288))
(assert (= 64 (x3590 (x1502 64 x1810 36))))
(assert (not (x3387 (x998 x2762 x165 x458 x1789))))
(assert (=> (>= 10000 x210) (= 0 (x1946 x210))))
(assert (x3185 x1681))
(assert (not (x3387 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (x3185 x2509))
(assert (x3185 x1679))
(assert (x2097 x4068))
(assert (x3185 x1590))
(assert (x3185 x2800))
(assert (x2097 x2587))
(assert (x3185 x4196))
(assert (=> (>= 10000 x3144) (= (x1946 x3144) 0)))
(assert (x3185 x701))
(assert (= x4137 (x4053 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548))))
(assert (x3185 x1829))
(assert (> (x1502 64 1 x3995) 10000))
(assert (x3185 x2975))
(assert (= (=> (and (or x962 (not x962)) (= x962 (= x3160 0))) x3951) x2315))
(assert (=> (>= 10000 x753) (= 0 (x1946 x753))))
(assert (= 36 (x2248 (x1502 64 x2805 36))))
(assert (x3185 x1742))
(assert (=> (<= x3570 10000) (= 0 (x1946 x3570))))
(assert (x3185 x2366))
(assert (x3387 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (= x2228 (=> (and (= x2333 (> x3767 0)) (= x3900 (ite (< 0 x3348) x1695 (x4191 127 x1695))) (= (- x639 132) x1553) (= (div x252 2) x1695) (= (x4191 1 x252) x3348) (= (x3747 (- x3348 (mod (ite (< x3900 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3767)) (and (=> (and x2333 (and (= x1999 (x4191 1 x252)) (= (+ x639 32) x251) (= (= x1999 0) x3187))) (and (=> (and (not x3187) (and (and (= (< 0 x3900) x3581) (= (x3876 32 104) x2046)) (or (and x3581 (and (>= 32 x3900) (= x1470 32) (= x4044 (x4004 x2046)))) (and (= x1470 0) (not x3581))))) x568) (=> (and x3187 (and (or (= x3338 0) (= 32 x3338)) (= x3338 (* 32 (ite (not (= 0 x3900)) 1 0))) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x252) x3081) (= (+ x3338 x251) x882))) x2761))) (=> (not x2333) x2355)))))
(assert (x3185 x53))
(assert (=> (<= x2214 10000) (= 0 (x1946 x2214))))
(assert (x2097 x121))
(assert (= (x1946 (x1502 64 x3903 5)) (x1502 64 x3903 5)))
(assert (= (and (not x3458) x367) x3459))
(assert (= x1961 (x1723 (x1057 x3461 x2214 x148 x1988 x1961 x1554))))
(assert (x3185 x1472))
(assert (x3185 x1489))
(assert (x3185 x844))
(assert (x3185 x3122))
(assert (= (=> (and (= x3137 x424) (= x41 x3190) (= x1362 x732) (= x1142 x1938) (= x4356 x1752) (= x1751 x2013) (= x1437 x1188) (= x2763 x3008) (= x447 x232) (= x3953 x2061) (= x1221 x2193) (= x283 x56) (= x675 x180)) x3525) x2487))
(assert (=> (<= x1724 10000) (= 0 (x1946 x1724))))
(assert (x3185 x3808))
(assert (= (and x93 x2733) x1739))
(assert (= (=> (= x1517 (+ x2886 x1771)) x414) x1317))
(assert (x3185 x2156))
(assert (x3387 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (x3185 x3749))
(assert (x3185 x634))
(assert (= x1561 (x2248 (x998 x3659 x3934 x1561 x3484))))
(assert (= (and x3641 x1484) x3467))
(assert (= (x1946 (x2724 x2757 x158 x4169 x2665 x829)) (x2724 x2757 x158 x4169 x2665 x829)))
(assert (x3185 x332))
(assert (> (x2724 x2497 x902 x3129 x3958 x1681) 10000))
(assert (> (x1502 64 x264 36) 10000))
(assert (< 10000 (x1057 x2762 x1522 x1067 x894 x26 x2402)))
(assert (= x896 (=> (and (= x2773 x2069) (= 0 x115) (= x3111 x476) (= x1954 x2756) (= true x1627) (= x455 x2447) (= x4336 false) (= x3392 2)) x1050)))
(assert (= 32 (x3590 (x3876 32 104))))
(assert (x3185 x3263))
(assert (x3185 x2805))
(assert (not (x3387 (x1502 64 x775 4))))
(assert (=> (>= 10000 x1475) (= 0 (x1946 x1475))))
(assert (x3185 x2385))
(assert (x3185 x3888))
(assert (x3185 x4360))
(assert (> (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548) 10000))
(assert (x3185 x3389))
(assert (=> (<= x3269 10000) (= 0 (x1946 x3269))))
(assert (x3185 x3668))
(assert (x3185 x1795))
(assert (= (and x1787 x1588) x16))
(assert (=> (>= 10000 x2197) (= (x1946 x2197) 0)))
(assert (= x3659 (x3590 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307))))
(assert (< (x1502 64 x775 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1502 x2762 x3116 x1715)))
(assert (x3185 x2759))
(assert (x3185 x1892))
(assert (= x2362 (or x4325 x150)))
(assert (= (and x2712 (not x1121)) x679))
(assert (= (or x3406 x4386 x3885 x749 x3203 x2451 x167 x2485 x565 x3944 x1194 x4207 x3018 x2642 x3505 x3347) x3193))
(assert (x3185 x1875))
(assert (= x2522 (and x3909 x3600)))
(assert (x3185 x3435))
(assert (x3185 x3091))
(assert (x3185 x2331))
(assert (=> (<= x165 10000) (= (x1946 x165) 0)))
(assert (x3185 x3637))
(assert (x3185 x1199))
(assert (x3185 x258))
(assert (x3185 x4040))
(assert (= 2 (x2248 (x1502 64 x2169 2))))
(assert (x3185 x3767))
(assert (x3724 x3077))
(assert (= x3548 (x1259 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548))))
(assert (= (x3590 (x3876 32 x2010)) 32))
(assert (x3185 x639))
(assert (= x4113 (x4053 (x1502 64 x4113 36))))
(assert (= 64 (x3590 (x1502 64 x3269 (ite (>= 32 x3659) x1700 (ite (<= x3659 64) x1339 (ite (<= x3659 96) x72 (ite (<= x3659 128) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811))))))))))
(assert (= x3574 (and x2649 (not x884))))
(assert (x3185 x2050))
(assert (x3185 x765))
(assert (x3185 x124))
(assert (x3185 x1740))
(assert (not (x3387 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (=> (>= 10000 x317) (= 0 (x1946 x317))))
(assert (< (x1502 64 x4075 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2536))
(assert (x3185 x2978))
(assert (=> (<= x3567 10000) (= (x1946 x3567) 0)))
(assert (x3185 x3893))
(assert (= (and x2406 x235) x1215))
(assert (x3185 x2852))
(assert (x3185 x1597))
(assert (=> (>= 10000 x2376) (= (x1946 x2376) 0)))
(assert (= (x2248 (x1502 x2762 x3116 x1715)) x1715))
(assert (= (x1946 45231284858326638837332416019018714005183587760015845327913118753091066265600) 0))
(assert (x3185 x3402))
(assert (> (x3876 32 103) 10000))
(assert (x3185 x3672))
(assert (= x590 (and x1312 x630)))
(assert (x3185 x3570))
(assert (x3185 x4108))
(assert (x3185 x1626))
(assert (= (x2248 (x1502 64 x1261 36)) 36))
(assert (x3185 x1394))
(assert (x3185 x3860))
(assert (x3185 x3684))
(assert (not (x3387 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548))))
(assert (= (x3590 (x2724 x3659 x1593 x650 x3229 x2424)) x3659))
(assert (=> (<= x2424 10000) (= (x1946 x2424) 0)))
(assert (not (x3387 (x3876 x2762 x525))))
(assert (x3185 x1563))
(assert (x3185 x2))
(assert (x3185 x2214))
(assert (x3185 x442))
(assert (= (and x3107 x3501) x2292))
(assert (x3185 x2912))
(assert (= (and x2746 x3553) x143))
(assert (=> (>= 10000 x2805) (= (x1946 x2805) 0)))
(assert (> (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312) 10000))
(assert (x3185 x3110))
(assert (=> (>= 10000 x342) (= 0 (x1946 x342))))
(assert (x3185 x1034))
(assert (= x1133 (x1259 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (x2097 x1240))
(assert (x3185 x4124))
(assert (= (=> (and (= (- x3664 132) x2026) (= x3060 (x3747 (- x128 (mod (ite (< x4069 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x4191 1 x3141) x128) (= x1224 (div x3141 2)) (= (ite (> x128 0) x1224 (x4191 127 x1224)) x4069) (= (< 0 x3060) x2229)) (and (=> (and (and (= x1771 (+ 32 x3664)) (= (= 0 x3678) x2710) (= (x4191 1 x3141) x3678)) x2229) (and (=> (and x2710 (and (= x4185 (* 32 (ite (not (= 0 x4069)) 1 0))) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3141) x3973) (or (= 0 x4185) (= 32 x4185)) (= (+ x4185 x1771) x1517))) x414) (=> (and (not x2710) (and (and (= x1527 (x3876 32 104)) (= (< 0 x4069) x407)) (or (and (= 0 x2886) (not x407)) (and (and (= x2578 (x866 x1527)) (>= 32 x4069) (= 32 x2886)) x407)))) x1317))) (=> (not x2229) x1643))) x1089))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)))
(assert (< 10000 (x1502 x765 x1477 x822)))
(assert (x3185 x3903))
(assert (x3185 x1389))
(assert (= (x1946 (x3876 32 104)) (x3876 32 104)))
(assert (= x860 (or x993 x711)))
(assert (=> (<= x3537 10000) (= (x1946 x3537) 0)))
(assert (x3185 x1810))
(assert (x3185 x2745))
(assert (x3387 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (= x2135 (=> (and (= x2406 (= 0 x45)) (or (and (and (= (ite (= 0 x45) x1301 0) x2802) (= x53 x1858) (= x1762 x45) (= x1758 (- x660 x2802)) (<= 0 x1869) (= x4305 x657) (= x1125 x431) (= (+ x1096 x2802) x1869) (= (x2267 x616) x660) (= (x4043 x1482) x1096) (< (+ x2802 x1096) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2218 x192) (= x522 x361) (= x4257 x391) (= x3806 x1308) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1869) (= x2559 x1869)) x2406) (and (and (= x2218 x192) (= x431 x1125) (= x1762 x45) (= x4257 x391) (= x4305 x657) (= x522 x361) (= x1308 x3806) (= x53 x1858)) (not x2406)))) x2644)))
(assert (= x3116 (x4053 (x1502 x2762 x3116 x1715))))
(assert (x2097 x3672))
(assert (x3185 x1887))
(assert (x3185 x525))
(assert (= (x1723 (x2724 x2762 x2799 x2912 x2224 x2366)) x2366))
(assert (x2097 x1130))
(assert (= (x1946 (x998 x314 x2347 x3906 x3871)) (x998 x314 x2347 x3906 x3871)))
(assert (= (x4053 (x2724 x2762 x2799 x2912 x2224 x2366)) x2799))
(assert (x3185 x1412))
(assert (x3387 3628442803))
(assert (= (x2248 (x1057 x2757 x737 x3759 x2513 x1837 x3104)) x3759))
(assert (= (and x3554 x2543) x51))
(assert (x3185 x882))
(assert (x3185 x2890))
(assert (x3185 x2049))
(assert (x2097 x1224))
(assert (= (and x3719 x3010) x1484))
(assert (x3185 x3243))
(assert (=> (>= 10000 x2402) (= (x1946 x2402) 0)))
(assert (= (x3590 (x2724 x2757 x158 x4169 x2665 x829)) x2757))
(assert (x3185 x719))
(assert (x3185 x4340))
(assert (not (x3387 (x2724 x2947 x867 x2003 x665 x2163))))
(assert (x3387 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (=> (>= 10000 x1401) (= (x1946 x1401) 0)))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x3185 x11))
(assert (x3185 x4035))
(assert (x3185 x2016))
(assert (= (x3590 (x1057 x2497 x4380 x1265 x573 x3485 x448)) x2497))
(assert (= x2676 (=> (and (= x2987 false) (= x453 true) (= 0 x3320)) x1148)))
(assert (= x1407 (and x1618 (not x2950))))
(assert (< 10000 (x1502 x2947 x332 x2499)))
(assert (x3185 x2113))
(assert (x3185 x644))
(assert (not (x3387 (x1502 x3461 x1216 x2043))))
(assert (x3185 x3192))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2724 x4046 x1101 x210 x3488 x1098)))
(assert (x3185 x2295))
(assert (x3185 x1872))
(assert (x2097 x1907))
(assert (= 0 (x1946 1000000000)))
(assert (x3185 x3805))
(assert (= x2180 (and (not x3) x2238)))
(assert (= x1583 (and x1121 x2712)))
(assert (> (x1057 x765 x3705 x3237 x2777 x3559 x2898) 10000))
(assert (x3185 x1109))
(assert (= x4315 (and (not x788) x445)))
(assert (= (x4053 (x998 x1602 x1878 x2521 x1476)) x1878))
(assert (x3185 x3587))
(assert (x3185 x678))
(assert (x3185 x1265))
(assert (= (or (and (not x425) x748) (and x1108 (not x3472)) (and x2479 (not x3224))) x4272))
(assert (x3638 x2493))
(assert (< (x2724 x2497 x902 x3129 x3958 x1681) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3147 (or x3220 x1455)))
(assert (x2097 x3867))
(assert (x3185 x3046))
(assert (x3185 x2757))
(assert (x3185 x1827))
(assert (not (x3387 (x1502 64 x264 2))))
(assert (= x1847 (x4053 (x1502 64 x1847 11))))
(assert (x3185 x1909))
(assert (x3185 x2824))
(assert (x3185 x557))
(assert (x3185 x3954))
(assert (= (x2248 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656)) x280))
(assert (x3185 x1437))
(assert (= (x3590 (x2724 x4046 x1101 x210 x3488 x1098)) x4046))
(assert (= x2497 (x3590 (x1502 x2497 x2210 x1219))))
(assert (x2097 x4197))
(assert (=> (<= x2762 10000) (= (x1946 x2762) 0)))
(assert (x3185 x2638))
(assert (x3185 x687))
(assert (x3185 x1011))
(assert (x3185 x1667))
(assert (> (x3876 x2762 x525) 10000))
(assert (= (and x2432 x2343) x3793))
(assert (=> (<= x4046 10000) (= (x1946 x4046) 0)))
(assert (x3185 x3418))
(assert (x3185 x3104))
(assert (x3185 x2996))
(assert (= 5 (x2248 (x1502 64 x3903 5))))
(assert (= x3865 (or x4255 x2690)))
(assert (x3185 x3651))
(assert (x3185 x2095))
(assert (x3185 x3630))
(assert (x3185 x3237))
(assert (x3185 x2205))
(assert (= (or (and x110 (not x1956)) (and x1134 (not x3012)) (and (not x1763) x2527)) x3530))
(assert (x3185 x1876))
(assert (x3185 x1961))
(assert (x3185 x1860))
(assert (= (x2248 (x1502 64 x3592 12)) 12))
(assert (=> (<= x1891 10000) (= 0 (x1946 x1891))))
(assert (x3387 1341992515))
(assert (=> (>= 10000 x2296) (= 0 (x1946 x2296))))
(assert (=> (>= 10000 x1106) (= 0 (x1946 x1106))))
(assert (= (x2248 (x1502 64 x3903 3)) 3))
(assert (x3185 x2152))
(assert (= x2152 (x2834 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (= x346 (and x269 x1382)))
(assert (=> (>= 10000 x3759) (= (x1946 x3759) 0)))
(assert (= x2112 (and x3306 x2822)))
(assert (x3185 x2409))
(assert (=> (<= x392 10000) (= (x1946 x392) 0)))
(assert (x3185 x1753))
(assert (x3185 x4137))
(assert (= (and (not x2103) x410) x401))
(assert (x3185 x903))
(assert (= x3731 (and x2082 x2022)))
(assert (x3185 x2521))
(assert (= (x3590 (x2724 x2497 x902 x3129 x3958 x1681)) x2497))
(assert (= (x1946 (x1502 x2497 x2210 x1219)) (x1502 x2497 x2210 x1219)))
(assert (x1576 x2928))
(assert (= (x2443 (x2724 x765 x3941 x2716 x3682 x199)) x3682))
(assert (= x397 (x2443 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (= x863 x2367))
(assert (x3185 x2210))
(assert (x3185 x395))
(assert (= (and x664 x4147) x2931))
(assert (= (x1723 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548)) x3144))
(assert (= (and x3099 x64) x3386))
(assert (x3185 x3814))
(assert (x3185 x1853))
(assert (x3185 x4375))
(assert (x3724 x701))
(assert (=> (>= 10000 x687) (= 0 (x1946 x687))))
(assert (x3185 x3580))
(assert (x3185 x272))
(assert (= x3242 (and (not x3010) x3719)))
(assert (= 64 (x3590 (x1502 64 x358 (ite (<= x2497 32) x857 (ite (<= x2497 64) x2024 (ite (>= 96 x2497) x4359 (ite (<= x2497 128) x1097 (ite (>= 160 x2497) x1313 (ite (<= x2497 192) x1435 x1931))))))))))
(assert (x3185 x747))
(assert (= (and x3909 (not x3600)) x3151))
(assert (x3185 x3624))
(assert (= (=> (and (= x777 (= x3955 0)) (= (x336 x2865) x3955)) (and (=> (and (and (= x4140 (x2711 x921)) (= (x1502 64 x775 5) x718) (= (> x4140 (ite (= 0 x3122) 10000 x3122)) x2325) (= x3122 (x3028 x718))) (not x777)) (and (=> (and (not x2325) (and (= (x1304 (+ 32 x272)) x1876) (= x380 (x1304 (+ 192 x272))) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2587) x4135) (= (x1304 (+ 32 x2)) x1243) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1223) x334) (= x2681 (x1304 (+ x1495 32))) (= (x2711 x921) x291) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4145) x954) (= (x1304 (+ x2074 32)) x958) (= (x3747 (- x1495 x272)) x1676) (= x1616 (x3747 (- x345 x272))) (= x2605 (x1304 (+ 32 x1876))) (= x1538 (x234 x2074)) (= x1495 (x1304 (+ x3518 x954))) (= x2108 (x336 x2865)) (= x1223 (x1304 (+ 31 x1538))) (= x39 (x1304 (+ x345 32))) (= (x1304 (+ x2108 31)) x4145) (= x345 (x1304 (+ x2681 x4135))) (= x4343 (x1304 (+ x39 x334))) (= x3518 (x1304 (+ x380 32))) (= (x2739 x3773) x2904) (= (x1304 (+ 32 x1243)) x1287) (= (x1304 (+ x291 31)) x2587) (= (x1304 (+ x3768 4)) x272) (= (= x2904 0) x203) (= x3651 (x3747 (- x4343 x3768))) (= (x1304 (+ x2605 32)) x2) (= x988 (x1304 (+ 32 x921))))) (and (=> (and (and (= (x2706 x3773) x641) (= (< (+ x4203 x641) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2991) (= x225 (and x378 x2991)) (= x1514 (x2706 x1482)) (= x378 (<= x4203 x1514))) (not x203)) (and (=> (and (and (= (or (> (- x2050 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= (- x2050 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x2050 4) 192))) x2740) (= x3651 x2050) x4176 (= x3969 x1616) (= x4176 (= x2108 (x3276 196))) (>= 127 x2032) (= x102 89332125780766104441357105940599211734484755930370930871569612501041822040064) (>= x3651 420) (= (x2706 x1482) x1293) (= x3801 x775) (= x87 (x3307 x3773)) (= false x1963) (= x1482 x393) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x87 x4203)) (<= 420 x2050) (= false x1713) (= (x2739 x4138) x543) (= 192 x2072) (= x560 (- x1293 x4203)) (= x1666 3313512704) (= x1297 (+ x87 x4203)) (<= 1 x543) (>= x1297 0) (= x3163 x1297) (<= x2032 127) (= x3580 0) (<= x1297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2318 x1676)) x225) (and (=> x2740 x305) (=> (and (not x2740) (= true x1596)) (and (=> (and (= x3012 (and (= (<= x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x2050 227))) x1596) (and (=> (and (and (= (x756 196) x4279) (= x2788 (< 18446744073709551615 x4279))) x3012) (and (=> (and (not x2788) (and (= x3482 (x1304 (+ x4279 228))) (= (> x3482 x2050) x3820))) (and (=> x3820 x1805) (=> (and (= x4304 (< 18446744073709551615 x1676)) (not x3820)) (and (=> (and (not x4304) (and (= x2160 (x1304 (+ x3215 31))) (= x1763 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2050) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2160)) (> x2050 x2160)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2050) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2160)))) (= x3215 (x1304 (+ 4 x1676))))) (and (=> (and x1763 (and (= (x756 x3215) x2519) (= (> x2519 18446744073709551615) x3853))) (and (=> x3853 x438) (=> (and (and (= (< x2050 x3145) x1939) (= x4285 (x1304 (+ x3215 32))) (= (x1304 (+ x2519 x4285)) x3145)) (not x3853)) (and (=> (and (= x3519 (< 18446744073709551615 x1616)) (not x1939)) (and (=> x3519 x305) (=> (and (and (= x1843 (x1304 (+ x880 31))) (= x1956 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1843) (<= x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1843 x2050) (= (<= x2050 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1843))))) (= (x1304 (+ x1616 4)) x880)) (not x3519)) (and (=> (and x1956 (and (= x2462 (< 18446744073709551615 x607)) (= (x756 x880) x607))) (and (=> x2462 x438) (=> (and (not x2462) (and (= (< x2050 x1794) x147) (= x2935 (x1304 (+ x880 32))) (= x1794 (x1304 (+ x607 x2935))))) (and (=> (and (and (= x1971 x4290) (= x1887 x1563) (= x2436 x3634) (= x1647 x2087) (= x3823 1)) (not x147)) x2684) (=> x147 x1805))))) (=> (not x1956) x987))))) (=> x1939 x1805))))) (=> (not x1763) x987))) (=> x4304 x305))))) (=> x2788 x438))) (=> (not x3012) x987))) (=> (not x1596) x305))))) (=> (and (not x225) (and (= x1971 x3873) (= x3634 x3426) (= x1887 x1872) (= 0 x2908) (= x3531 x2087))) x2215))) (=> (and x203 (and (= false x945) (= x178 true) (= x2639 0))) x486))) (=> (and (and (= x2639 100) (= false x446) (= (x1304 (+ x3277 32)) x1160) (= true x1926) (= x1826 (x1304 (+ 32 x1160))) (= x3277 (x1304 (+ 4 x3768)))) x2325) x486))) (=> (and (and (= (x1304 (+ 32 x4125)) x3157) (= (x1304 (+ x3768 4)) x4125) (= x912 true) (= false x874) (= x2639 132) (= x419 (x1304 (+ 32 x2458))) (= x2458 (x1304 (+ 32 x3157)))) x777) x486))) x33))
(assert (< 10000 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)))
(assert (> (x1057 x3659 x1608 x1761 x1401 x1199 x1664) 10000))
(assert (x3185 x3060))
(assert (x3185 x4071))
(assert (=> (>= 10000 x3927) (= (x1946 x3927) 0)))
(assert (x3185 x2968))
(assert (x3185 x810))
(assert (x3185 x744))
(assert (x3185 x636))
(assert (x3185 x2237))
(assert (x3185 x589))
(assert (x3185 x3790))
(assert (= 64 (x3590 (x1502 64 x3269 (ite (<= x1602 32) x3424 (ite (<= x1602 64) x2870 (ite (<= x1602 96) x2066 (ite (>= 128 x1602) x2332 (ite (<= x1602 160) x815 (ite (>= 192 x1602) x504 x2658))))))))))
(assert (= (x4053 (x1502 x765 x1477 x822)) x1477))
(assert (x3185 x3485))
(assert (=> (>= 10000 x977) (= (x1946 x977) 0)))
(assert (x3185 x617))
(assert (x3185 x2043))
(assert (= (x3590 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) x765))
(assert (x3724 x3046))
(assert (x3185 x373))
(assert (x3185 x3000))
(assert (x3185 x1638))
(assert (= x3532 (x4053 (x1502 x4046 x3532 x1371))))
(assert (= (x2248 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) x792))
(assert (x3185 x3867))
(assert (x3185 x3460))
(assert (= (and (not x2325) x968) x78))
(assert (x3185 x2283))
(assert (x3185 x1569))
(assert (x3185 x3557))
(assert (= (x2443 (x2724 x2762 x2799 x2912 x2224 x2366)) x2224))
(assert (= x2816 (=> (and (= 0 x111) (= x3160 1) (= x4054 x2773) (= x3071 x2321) (= x2675 x838) (= x913 x2756)) x2315)))
(assert (=> (>= 10000 x4380) (= (x1946 x4380) 0)))
(assert (x3185 x686))
(assert (= (x3590 (x1502 64 1 x3995)) 64))
(assert (x3185 x2811))
(assert (= x3742 (x2443 (x2724 x314 x1494 x4355 x3742 x4087))))
(assert (= (and x3697 (not x2701)) x3152))
(assert (= x1098 (x1723 (x2724 x4046 x1101 x210 x3488 x1098))))
(assert (x3185 x3994))
(assert (x3185 x392))
(assert (x3185 x925))
(assert (x3185 x2307))
(assert (=> (>= 10000 x280) (= 0 (x1946 x280))))
(assert (not (x3387 (x1502 64 x2169 2))))
(assert (= x3220 (and x558 x1242)))
(assert (> (x1502 64 x358 (ite (<= x2497 32) x857 (ite (<= x2497 64) x2024 (ite (>= 96 x2497) x4359 (ite (<= x2497 128) x1097 (ite (>= 160 x2497) x1313 (ite (>= 192 x2497) x1435 x1931))))))) 10000))
(assert (< (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3387 (x998 x4046 x392 x811 x1260))))
(assert (x3185 x3260))
(assert (x3185 x3976))
(assert (= (x1946 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)) (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)))
(assert (= x1494 (x4053 (x2724 x314 x1494 x4355 x3742 x4087))))
(assert (x3185 x1411))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x1828 36)))
(assert (x3185 x3321))
(assert (> (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689) 10000))
(assert (x3185 x1545))
(assert (=> (<= x379 10000) (= 0 (x1946 x379))))
(assert (x2097 x3993))
(assert (= (x3590 (x2724 x314 x1494 x4355 x3742 x4087)) x314))
(assert (< (x1502 x2762 x3116 x1715) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3724 x4263))
(assert (= 7 (x2248 (x1502 64 x3389 7))))
(assert (= (x2248 (x2724 x1602 x2205 x3704 x124 x303)) x3704))
(assert (x3387 486791245))
(assert (x3185 x23))
(assert (x3185 x3759))
(assert (x3185 x3247))
(assert (= x903 (x4053 (x1502 x2757 x903 x2989))))
(assert (x3185 x421))
(assert (x3185 x417))
(assert (x3185 x1998))
(assert (x3724 x3672))
(assert (= (x1502 64 x4075 36) (x1946 (x1502 64 x4075 36))))
(assert (not (x3387 (x1502 x2947 x332 x2499))))
(assert (x3185 x2505))
(assert (x3185 x729))
(assert (< (x1502 64 x4076 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1837))
(assert (= x2507 (and x4015 (not x4045))))
(assert (= x2947 (x3590 (x998 x2947 x342 x2039 x1272))))
(assert (= x565 (or (and (not x278) x2405) (and (not x2333) x635))))
(assert (= (or x1780 x3560 x3915 x626 x3112 x2603 x1970 x1633 x2810 x3386 x4079) x2277))
(assert (> (x998 x765 x580 x2197 x687) 10000))
(assert (=> (<= x1452 10000) (= (x1946 x1452) 0)))
(assert (x3185 x3175))
(assert (x3185 x3238))
(assert (x3387 2001815235))
(assert (x3185 x3936))
(assert (x3185 x2185))
(assert (= (x2248 (x1502 64 x775 3)) 3))
(assert (x3185 x2439))
(assert (x3185 x2119))
(assert (x3185 x3923))
(assert (> (x1502 64 x775 5) 10000))
(assert (x3185 x1138))
(assert (x2097 x2144))
(assert (x3185 x3253))
(assert (= (x4053 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) x2214))
(assert (x3185 x2273))
(assert (x3185 x3955))
(assert (x3185 x2402))
(assert (x3185 x1839))
(assert (x3185 x2042))
(assert (= x2631 (and x510 x2993)))
(assert (= x3097 (x2834 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (=> (<= x4087 10000) (= 0 (x1946 x4087))))
(assert (x3387 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x2097 x3153))
(assert (x2097 x3626))
(assert (x3185 x2006))
(assert (x3185 x3682))
(assert (x3185 x1018))
(assert (x3185 x1363))
(assert (=> (>= 10000 x3691) (= 0 (x1946 x3691))))
(assert (x3185 x3582))
(assert (x3185 x3400))
(assert (x3185 x2067))
(assert (x3185 x1154))
(assert (x3185 x3536))
(assert (x3185 x861))
(assert (= x3592 (x4053 (x1502 64 x3592 12))))
(assert (x3185 x2073))
(assert (= (x2248 (x1502 64 x3269 (ite (<= x1602 32) x3424 (ite (<= x1602 64) x2870 (ite (<= x1602 96) x2066 (ite (<= x1602 128) x2332 (ite (<= x1602 160) x815 (ite (>= 192 x1602) x504 x2658)))))))) (ite (<= x1602 32) x3424 (ite (<= x1602 64) x2870 (ite (>= 96 x1602) x2066 (ite (<= x1602 128) x2332 (ite (<= x1602 160) x815 (ite (>= 192 x1602) x504 x2658))))))))
(assert (x3387 1000000000))
(assert (= (or x3896 x1115 x2953 x2221 x2963 x2895) x2819))
(assert (x3185 x657))
(assert (=> (>= 10000 x264) (= 0 (x1946 x264))))
(assert (x3185 x4163))
(assert (x2097 x452))
(assert (x3185 x1473))
(assert (= 0 (x1946 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (and (not x2822) x3306) x1179))
(assert (x3724 x3153))
(assert (= 0 (x1946 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (not (x3387 (x1502 64 x3269 (ite (>= 32 x1602) x3424 (ite (<= x1602 64) x2870 (ite (<= x1602 96) x2066 (ite (<= x1602 128) x2332 (ite (>= 160 x1602) x815 (ite (>= 192 x1602) x504 x2658))))))))))
(assert (= (x3590 (x3876 x2497 x1711)) x2497))
(assert (not x3219))
(assert (not (x3387 (x1502 64 x3703 10))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1057 x3659 x1608 x1761 x1401 x1199 x1664)))
(assert (x3185 x2499))
(assert (x3185 x476))
(assert (=> (<= x1267 10000) (= 0 (x1946 x1267))))
(assert (x2097 x2928))
(assert (x3185 x3656))
(assert (x3185 x1936))
(assert (x3185 x577))
(assert (x3185 x3646))
(assert (= (=> (and (= x1390 true) (= x717 false) (= 0 x1211)) x164) x1395))
(assert (x3185 x345))
(assert (x3185 x3096))
(assert (x3185 x3755))
(assert (x3185 x363))
(assert (= (or x1809 x2931) x1779))
(assert (x3185 x3334))
(assert (= x1607 (and x249 x2657)))
(assert (x3724 x3161))
(assert (= x2169 (x4053 (x1502 64 x2169 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)))
(assert (x3185 x3478))
(assert (x3185 x1467))
(assert (x3185 x3202))
(assert (x3185 x3264))
(assert (x3185 x1907))
(assert (= (=> (and (= true x231) (= x1571 x3994) (= x1574 x2327) (= false x587) (= x2538 x3051) (= x383 x2855) (= x621 (x4191 255 x3286)) (= x2136 x2202) (= x2685 x3090) (= x1582 x1277) (= 2 x3848) (= x2524 x2115) (= x23 x371) (= x1964 x4178) (= x1801 x3033) (= x417 x621) (= x357 x1319) (= 0 x2645)) x2654) x863))
(assert (x3185 x2300))
(assert (x3185 x1550))
(assert (= (and x3098 (not x3172)) x1958))
(assert (x3185 x2120))
(assert (x3185 x640))
(assert (x3185 x522))
(assert (< (x1502 64 x4113 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1946 (x1502 64 x3269 (ite (<= x3659 32) x1700 (ite (<= x3659 64) x1339 (ite (<= x3659 96) x72 (ite (>= 128 x3659) x176 (ite (>= 160 x3659) x2700 (ite (>= 192 x3659) x4323 x1811)))))))) (x1502 64 x3269 (ite (>= 32 x3659) x1700 (ite (>= 64 x3659) x1339 (ite (>= 96 x3659) x72 (ite (>= 128 x3659) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811)))))))))
(assert (x3185 x548))
(assert (x3185 x3970))
(assert (= x2762 (x3590 (x2724 x2762 x2799 x2912 x2224 x2366))))
(assert (x3185 x432))
(assert (x3185 x1706))
(assert (x3185 x2376))
(assert (x3185 x2937))
(assert (x3185 x1571))
(assert (= (x2443 (x2724 x2757 x158 x4169 x2665 x829)) x2665))
(assert (x3185 x3703))
(assert (x3185 x973))
(assert (= x910 (x2834 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548))))
(assert (= (or x3198 x2949) x935))
(assert (x3185 x2559))
(assert (x3185 x2627))
(assert (x3185 x248))
(assert (x2097 x2295))
(assert (= (x2248 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312)) x4353))
(assert (=> (<= x2831 10000) (= 0 (x1946 x2831))))
(assert (= x2692 (and x3098 x3172)))
(assert (= (or (and x1406 x2360) (and x538 x4042)) x10))
(assert (x3185 x4322))
(assert (< 10000 (x1502 64 x810 36)))
(assert (x3185 x3166))
(assert (= (and x2507 (not x450)) x3302))
(assert (< (x1502 64 x2793 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2691))
(assert (= (x4053 (x1502 64 x3903 5)) x3903))
(assert (=> (<= x3713 10000) (= (x1946 x3713) 0)))
(assert (= x722 (=> (and (and (= x273 x628) (= x1894 x2592) (= x1545 x4011) (= x1635 x2566) (= x1212 x1029) (= x2429 x1600) (= x1069 x4153) (= x2640 x603) (= x4316 x1250) (= x3069 x2304) (= x1047 x4035) (= x1132 x733) (= x3136 (= 0 x1069)) (= x1897 x2345) (= x1728 x1667)) (or (and (not x3136) (and (= x4205 x603) (= x3489 x2592) (= x1029 x2756) (= x476 x4035) (= x2478 x4011) (= x2580 x1069) (= x2773 x3069) (= x941 x1728) (= x775 x1635) (= x2345 x4075) (= x276 x2429) (= x3668 x273) (= x1818 x733) (= x252 x4316))) (and x3136 (and (= x1374 x428) (= x2388 (x3366 x1482)) (= x1029 x2756) (= x2773 x3069) (= x1728 x941) (= x3489 x2592) (= x4011 x2478) (= x276 x2429) (= x273 x3668) (<= x1374 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x733 x1818) (= x2359 (- x3058 x2422)) (= x1069 x2580) (= (+ x2388 x2422) x1374) (= x252 x4316) (>= x1374 0) (= x2422 (ite (= x1069 0) x2652 0)) (= x2345 x4075) (= x4035 x476) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2422 x2388)) (= x775 x1635) (= x3058 (x198 x3940)) (= x603 x4205))))) x423)))
(assert (= x292 (and x329 x3308)))
(assert (x3185 x1971))
(assert (= x1187 (and (not x2129) x2459)))
(assert (x3185 x380))
(assert (x3185 x3146))
(assert (= x1441 (x2443 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947))))
(assert (x3185 x685))
(assert (x3387 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= x1101 (x4053 (x2724 x4046 x1101 x210 x3488 x1098))))
(assert (x3387 1313998243))
(assert (= x1016 (and x3930 x2977)))
(assert (x3185 x825))
(assert (= (or (and x2979 x2178) (and x523 x3692)) x2708))
(assert (x3185 x29))
(assert (x3185 x2790))
(assert (x3387 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (= (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (>= 64 x2762) x2199 (ite (<= x2762 96) x381 (ite (>= 128 x2762) x359 (ite (<= x2762 160) x4327 (ite (>= 192 x2762) x3047 x4300))))))) (x1946 (x1502 64 x358 (ite (>= 32 x2762) x4199 (ite (<= x2762 64) x2199 (ite (<= x2762 96) x381 (ite (>= 128 x2762) x359 (ite (>= 160 x2762) x4327 (ite (>= 192 x2762) x3047 x4300))))))))))
(assert (x3185 x3154))
(assert (= (x4053 (x1057 x314 x2105 x1066 x589 x3537 x3055)) x2105))
(assert (= 32 (x3590 (x3876 32 x3469))))
(assert (x3185 x2153))
(assert (< 10000 (x1502 64 x2169 2)))
(assert (x3185 x2585))
(assert (< (x1502 64 x3903 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1029))
(assert (x3185 x4368))
(assert (x3185 x3078))
(assert (x3185 x3798))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 1 x3995)))
(assert (x3185 x785))
(assert (x3185 x680))
(assert (= 0 (x1946 43931689107028929153831073962459296230956404255593708771276734084804920737792)))
(assert (x3185 x2072))
(assert (x3185 x1804))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x998 x765 x580 x2197 x687)))
(assert (x3185 x1589))
(assert (=> (>= 10000 x1216) (= (x1946 x1216) 0)))
(assert (x3185 x2541))
(assert (= (x4053 (x2724 x2497 x902 x3129 x3958 x1681)) x902))
(assert (x3185 x193))
(assert (= (and x1406 (not x2360)) x2804))
(assert (< 10000 (x998 x3461 x4241 x3959 x3374)))
(assert (= (x3590 (x1502 64 x4113 36)) 64))
(assert (= (x1723 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)) x1512))
(assert (x3185 x4301))
(assert (x3185 x2685))
(assert (= (or x2127 x3739) x2254))
(assert (x3185 x1368))
(assert (= x97 (x2443 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (= x3909 (and x2167 (not x2974))))
(assert (x3185 x2431))
(assert (x3185 x3628))
(assert (x3185 x1768))
(assert (x3185 x545))
(assert (= (x3590 (x1502 64 x1828 36)) 64))
(assert (x3185 x1737))
(assert (=> (>= 10000 x3237) (= 0 (x1946 x3237))))
(assert (x3185 x955))
(assert (= (x1946 x3827) (x1946 (+ 1 x3827))))
(assert (= x2405 (and (not x2107) x372)))
(assert (x3185 x3117))
(assert (=> (>= 10000 x1617) (= (x1946 x1617) 0)))
(assert (x2097 x2889))
(assert (= (x2443 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548)) x738))
(assert (x3185 x880))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408)))
(assert (x3185 x3360))
(assert (= (and x64 (not x3099)) x4103))
(assert (= (x3590 (x1502 64 x2793 36)) 64))
(assert (x3185 x2601))
(assert (x3185 x573))
(assert (x3638 x121))
(assert (x3638 x3867))
(assert (x3185 x734))
(assert (= (and (not x1343) x3113) x2828))
(assert (=> (<= x2200 10000) (= (x1946 x2200) 0)))
(assert (x3185 x3014))
(assert (x3185 x2578))
(assert (x3185 x4031))
(assert (x3185 x48))
(assert (x3185 x2306))
(assert (=> (<= x589 10000) (= (x1946 x589) 0)))
(assert (= (x1502 x4046 x3532 x1371) (x1946 (x1502 x4046 x3532 x1371))))
(assert (x3185 x3526))
(assert (x3185 x2296))
(assert (x3185 x1132))
(assert (= x4325 (and x1533 (not x147))))
(assert (x3185 x2498))
(assert (x3185 x3898))
(assert (= x909 (and x2299 (not x3449))))
(assert (=> (<= x2105 10000) (= 0 (x1946 x2105))))
(assert (= (and x797 x134) x1885))
(assert (= (x1723 (x2724 x2947 x867 x2003 x665 x2163)) x2163))
(assert (x3185 x397))
(assert (not (x3387 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (x3185 x4338))
(assert (x3185 x850))
(assert (= x3043 (x1723 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (= (x2248 (x1502 x2947 x332 x2499)) x2499))
(assert (x3185 x1592))
(assert (x3185 x499))
(assert (not (x3387 (x1502 64 x92 36))))
(assert (x3185 x1580))
(assert (x3185 x2334))
(assert (not (x3387 (x998 x3659 x3934 x1561 x3484))))
(assert (= x474 (and x2435 x1074)))
(assert (= (and x695 x1596) x1134))
(assert (= (x1259 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) x1740))
(assert (x3185 x2756))
(assert (= x3269 (x4053 (x1502 64 x3269 (ite (<= x1602 32) x3424 (ite (<= x1602 64) x2870 (ite (>= 96 x1602) x2066 (ite (<= x1602 128) x2332 (ite (<= x1602 160) x815 (ite (<= x1602 192) x504 x2658))))))))))
(assert (> (x1502 64 x4075 36) 10000))
(assert (x3185 x2763))
(assert (= x2142 (=> (and (= x2305 x1756) (= x187 x4168) (= x3875 x3968) (= x1984 x1997)) x2040)))
(assert (= (and x3480 (not x3040)) x2272))
(assert (= x2236 (=> (= x3449 (= x1196 0)) (and (=> (and (and (= x732 x741) (= x3686 x283) (= x209 x2193) (= x1510 x2013) (= x1142 x1555) (= x180 x3932) (= x4356 x3880) (= x3953 x2019) (= x1933 x232) (= x1679 x424) (= x3008 x1262) (= x3253 x3190) (= x3466 x1188)) (not x3449)) x3525) (=> (and (and (= x2640 x1649) (= x1047 x3758) (= x3274 x1667) (= x1212 x3824) (= x628 x4280) (= x1600 x3844) (= x2696 x1545) (= x1458 false) (= x1418 x1132) (= x2304 x3940) (= true x22) (= x2793 x1897) (= x4153 0) (= x1250 x3141) (= x3903 x2566) (= x3714 2) (= x806 x1894)) x3449) x722)))))
(assert (x3185 x1579))
(assert (= x1107 (x4053 (x1502 64 x1107 6))))
(assert (x3185 x1608))
(assert (= x1206 (x4053 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (= (and x3574 x1712) x2451))
(assert (> (x1502 64 x563 100) 10000))
(assert (x3185 x1927))
(assert (x3185 x3852))
(assert (= 5 (x2248 (x1502 64 x775 5))))
(assert (x3185 x265))
(assert (> (x3876 x2757 x2831) 10000))
(assert (= x1040 (x1723 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947))))
(assert (=> (>= 10000 x1265) (= (x1946 x1265) 0)))
(assert (= (x4053 (x3876 x2762 x525)) x525))
(assert (x3185 x303))
(assert (= x810 (x4053 (x1502 64 x810 36))))
(assert (=> (>= 10000 x867) (= (x1946 x867) 0)))
(assert (= x438 x305))
(assert (= x2355 (=> (and (= x2756 x1954) (= x3111 x476) (= x74 2) (= 36 x455) (= x730 true) (= x115 0) (= x3359 false) (= x2069 x2773)) x1050)))
(assert (x3185 x2869))
(assert (x3185 x1091))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (x3185 x357))
(assert (= (and x1134 x3012) x1405))
(assert (= (and x3861 x2062) x1421))
(assert (x3185 x3845))
(assert (=> (<= x1393 10000) (= (x1946 x1393) 0)))
(assert (= x473 (x2443 (x2724 x3461 x753 x465 x473 x4385))))
(assert (x3185 x2424))
(assert (x3185 x3535))
(assert (x3724 x4197))
(assert (= (and x90 x1722) x3420))
(assert (x3185 x3396))
(assert (x3185 x3889))
(assert (x3185 x2566))
(assert (= (x3590 (x1502 x1602 x634 x850)) x1602))
(assert (x3185 x1902))
(assert (= x2646 (=> (= x3 (= 0 x3487)) (and (=> (and (not x3) (and (= x974 x3813) (= x4301 x1526) (= x1540 x4089) (= x38 x2413))) x1013) (=> (and (and (= x2773 x2069) (= 2 x4190) (= x4006 true) (= x115 0) (= x3111 x476) (= x2756 x1954) (= x1690 false) (= x455 x1634)) x3) x1050)))))
(assert (x3185 x1789))
(assert (= (and (not x2845) x1340) x3692))
(assert (x3185 x3304))
(assert (x3185 x736))
(assert (x3185 x3537))
(assert (x3185 x2212))
(assert (x3185 x2258))
(assert (=> (<= x2152 10000) (= 0 (x1946 x2152))))
(assert (=> (<= x4072 10000) (= 0 (x1946 x4072))))
(assert (= (x1946 (x2724 x3659 x1593 x650 x3229 x2424)) (x2724 x3659 x1593 x650 x3229 x2424)))
(assert (> (x1057 x3461 x2214 x148 x1988 x1961 x1554) 10000))
(assert (x3185 x3510))
(assert (= x2734 (or x3467 x3774)))
(assert (= 1 (x4053 (x1502 64 1 x2364))))
(assert (x3185 x1674))
(assert (x3185 x1180))
(assert (x3185 x620))
(assert (x3724 x1360))
(assert (x3185 x608))
(assert (x3185 x1532))
(assert (x3185 x529))
(assert (x3185 x2428))
(assert (x3185 x732))
(assert (x3185 x3353))
(assert (= x3034 (and x3152 (not x4377))))
(assert (x3185 x1645))
(assert (x2097 x2707))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x2169 2)))
(assert (x3387 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (= (x3590 (x1502 64 x92 36)) 64))
(assert (x3185 x3933))
(assert (= x3659 (x3590 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (x3185 x2344))
(assert (= x93 (and x2938 x4050)))
(assert (= x1265 (x2248 (x1057 x2497 x4380 x1265 x573 x3485 x448))))
(assert (x3185 x3957))
(assert (x3185 x1341))
(assert (x3185 x673))
(assert (x3185 x902))
(assert (=> (>= 10000 x199) (= (x1946 x199) 0)))
(assert (x3185 x2047))
(assert (x3185 x2468))
(assert (x3185 x280))
(assert (< (x998 x3461 x4241 x3959 x3374) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3876 32 x3469) (x1946 (x3876 32 x3469))))
(assert (= x1280 (x2834 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (= (=> (and (or (and (not x4141) (and (= x3903 x3000) (= x1357 36) (= x3844 x127) (= x153 x1649) (<= x2556 127) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x3479) (= x2635 310283853) (= x3124 (x2739 x977)) (<= x734 1461501637330902918203684832716283019655932542975) (= false x3681) (= x377 x2696) (= false x579) (= false x905) (= x3379 1) (<= 1 x3124) (= x1418 x2791) (= x3888 x1474) (<= x2556 127) (= x977 x734) (= false x4302) (= x3141 x2400) (>= x734 1) (= x813 x806) (= x4064 x3274) (= x2793 x608) (= x1902 x4280) (= x1474 x3824) (= x3758 x2745) (= x734 x3940))) (and x4141 (and (and (= (x2739 x395) x4295) (= (and x3800 x2506) x3502) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4065) (= 36 x1439) (<= x1394 127) (= x1474 x1398) (<= 1 x4295) (= false x2808) (= x1116 x1398) (<= x1394 127) (= false x157) (= 310283853 x4247) (= (< (* x1474 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2506) (= x2179 (* x1474 1000000000)) (= (<= x2179 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3800)) (or (and (not x3502) (and (= x3844 x127) (= x1474 x3824) (= x3940 x734) (= x4064 x3274) (= x3903 x3000) (= x1649 x153) (= x2791 x1418) (= x608 x2793) (= x773 false) (= true x2404) (= x4280 x1902) (= x3758 x2745) (= x3141 x2400) (= 2 x1899) (= x806 x813) (= x2696 x377) (= 0 x3379))) (and x3502 (and (= x3903 x3000) (= x813 x806) (= x3940 x734) (= 1 x3379) (= x3141 x2400) (= x1649 x153) (<= x2179 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x3844 x127) (= x1236 x2179) (= false x1983) (= x3824 x1474) (= x2791 x1418) (= x2745 x3758) (= x377 x2696) (= x2793 x608) (= x4280 x1902) (= x141 false) (= x4064 x3274) (>= x2179 0))))))) (and (= (x3082 x481) x3133) (>= 255 x3133) (<= x734 1461501637330902918203684832716283019655932542975) x1270 (= (x1502 64 x3703 10) x481) (= (= x734 x395) x4141) (= x4230 (> x3133 0)) (= 128 x4236) (= x1270 (= 0 x1105)) x4230)) x2175) x703))
(assert (< 10000 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)))
(assert (x3185 x3497))
(assert (=> (>= 10000 x398) (= (x1946 x398) 0)))
(assert (= x1229 (or x1862 x3890)))
(assert (=> (>= 10000 x3488) (= (x1946 x3488) 0)))
(assert (=> (<= x4353 10000) (= (x1946 x4353) 0)))
(assert (< 10000 (x998 x1602 x1878 x2521 x1476)))
(assert (x3185 x3640))
(assert (x3185 x3862))
(assert (=> (<= x3682 10000) (= 0 (x1946 x3682))))
(assert (x3185 x4032))
(assert (not (x3387 (x1502 64 x3567 11))))
(assert (x3387 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x3185 x1346))
(assert (x3185 x1424))
(assert (= x1210 (and x1488 (not x3399))))
(assert (x3185 x3776))
(assert (x3185 x3839))
(assert (x3185 x1430))
(assert (= (x4053 (x1502 64 x4075 36)) x4075))
(assert (< (x3876 32 x3469) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4053 (x998 x4046 x392 x811 x1260)) x392))
(assert (=> (<= x1988 10000) (= 0 (x1946 x1988))))
(assert (= x1770 (x4053 (x1502 x314 x1770 x116))))
(assert (x3185 x473))
(assert (= (and x1161 x1779) x2455))
(assert (= x2314 (and x935 x65)))
(assert (x3387 100000))
(assert (x3185 x974))
(assert (not (x3387 (x1502 64 x3592 12))))
(assert (= (x3590 (x1502 x314 x1770 x116)) x314))
(assert (x3185 x768))
(assert (=> (>= 10000 x2412) (= 0 (x1946 x2412))))
(assert (not (x3387 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (x3185 x2291))
(assert (x3185 x1419))
(assert (x3185 x1929))
(assert (x3185 x3414))
(assert (= (x1502 64 x3903 3) (x1946 (x1502 64 x3903 3))))
(assert (= (and (not x203) x78) x4271))
(assert (= (x2443 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689)) x3966))
(assert (=> (<= x3374 10000) (= 0 (x1946 x3374))))
(assert (> (x1502 64 x4113 36) 10000))
(assert (=> (>= 10000 x3648) (= 0 (x1946 x3648))))
(assert (= (and x748 x425) x1150))
(assert (x3185 x3058))
(assert (=> (<= x894 10000) (= 0 (x1946 x894))))
(assert (= (x1502 x2757 x903 x2989) (x1946 (x1502 x2757 x903 x2989))))
(assert (x3185 x2866))
(assert (=> (>= 10000 x458) (= (x1946 x458) 0)))
(assert (x3185 x1221))
(assert (not (x3387 (x1502 64 x3903 3))))
(assert (= x3127 (and (not x2178) x2979)))
(assert (= x687 (x2443 (x998 x765 x580 x2197 x687))))
(assert (x3185 x3824))
(assert (x3185 x92))
(assert (= (and x999 (not x260)) x2479))
(assert (= (x4053 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x186))
(assert (=> (>= 10000 x387) (= 0 (x1946 x387))))
(assert (x3185 x1360))
(assert (> (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307) 10000))
(assert (x3185 x3961))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x3185 x3015))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 32 103)))
(assert (x3185 x1499))
(assert (x3185 x518))
(assert (= x4355 (x2248 (x2724 x314 x1494 x4355 x3742 x4087))))
(assert (x3212 x3844))
(assert (x3185 x2245))
(assert (x3185 x4202))
(assert (= x1533 (and x3419 (not x2462))))
(assert (x3185 x165))
(assert (not (x3387 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (x3185 x1066))
(assert (x3185 x3493))
(assert (x3185 x1235))
(assert (= (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (<= x2497 64) x2024 (ite (>= 96 x2497) x4359 (ite (>= 128 x2497) x1097 (ite (<= x2497 160) x1313 (ite (>= 192 x2497) x1435 x1931))))))) (x1946 (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (>= 64 x2497) x2024 (ite (>= 96 x2497) x4359 (ite (>= 128 x2497) x1097 (ite (>= 160 x2497) x1313 (ite (<= x2497 192) x1435 x1931))))))))))
(assert (x3185 x3479))
(assert (= (x1946 (x3876 x1602 x4253)) (x3876 x1602 x4253)))
(assert (x3185 x3097))
(assert (x3185 x2741))
(assert (x3185 x94))
(assert (x3185 x2928))
(assert (= x3525 (=> (and (= x2227 x1167) (= x283 x3491) (= x1678 x1212) (= x2581 x2584) (= x2235 x2767) (= x4040 x1600) (= x3448 x4041) (= x2073 x1894) (= x2640 x2584) (= x2237 x3146) (= x1814 x2235) (= x1814 x732) (= x2253 x232) (= x3604 x2304) (= x3604 x3776) (= x4041 x4195) (= x3008 x4195) (= x1142 x2755) (= x869 x3962) (= x3190 x3889) (= x2253 x1977) (= x4153 1) (= x1198 x1167) (= x3833 x817) (= x1545 x2767) (= x1180 x1251) (= x3448 x1667) (= x2073 x869) (= x424 x2638) (= x2638 x1180) (= x3146 x421) (= x1198 x2193) (= x3962 x4356) (= x955 x2755) (= x2013 x3842) (= x2581 x2283) (= x817 x1897) (= x2283 x3953) (= x2227 x1250) (= x2439 x1188) (= x2566 x1444) (= x823 x628) (= x2375 x1678) (= x1444 x955) (= x1047 x1251) (= x3105 x823) (= x3889 x3105) (= x2237 x1132) (= x421 x180) (= x3491 x2375) (= x3842 x3833) (= x4040 x1977) (= x3776 x2439)) x722)))
(assert (x3185 x1487))
(assert (=> (<= x3532 10000) (= 0 (x1946 x3532))))
(assert (= (or x3676 x1128) x3802))
(assert (=> (>= 10000 x2312) (= (x1946 x2312) 0)))
(assert (= x2993 (or x2110 x3556 x4154)))
(assert (= (x2443 (x1057 x1602 x1386 x1073 x4039 x398 x3637)) x4039))
(assert (= (x3590 (x1502 64 x3567 11)) 64))
(assert (not (x3387 (x1502 64 1 x3995))))
(assert (x3185 x570))
(assert (x3185 x365))
(assert (= x4046 (x3590 (x3876 x4046 x3249))))
(assert (x3185 x3541))
(assert (=> (>= 10000 x1554) (= (x1946 x1554) 0)))
(assert (=> (>= 10000 x1098) (= 0 (x1946 x1098))))
(assert (= x1665 (and (not x2945) x1423)))
(assert (x3185 x1133))
(assert (= x1645 (x4053 (x1057 x4046 x1645 x387 x1800 x1267 x1617))))
(assert (x3724 x343))
(assert (= (x2248 (x998 x2762 x165 x458 x1789)) x458))
(assert (< (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x111))
(assert (x3185 x2293))
(assert (x3185 x1964))
(assert (= x1788 (and x330 (not x2794))))
(assert (x3185 x1269))
(assert (=> (>= 10000 x397) (= (x1946 x397) 0)))
(assert (= (and (not x2948) x145) x1340))
(assert (x3185 x976))
(assert (= x2649 (and x3312 x311)))
(assert (= (x4053 (x998 x765 x580 x2197 x687)) x580))
(assert (x3185 x1326))
(assert (= x484 (or (and x3846 x1816) (and x2522 x217) (and x390 x2595) (and x2948 x145) (and x21 x474))))
(assert (=> (>= 10000 x3705) (= 0 (x1946 x3705))))
(assert (x3185 x3345))
(assert (x3185 x2716))
(assert (x3638 x4145))
(assert (= (x4053 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) x3705))
(assert (x3185 x2640))
(assert (x3185 x688))
(assert (= (or (and x583 x1042) (and x120 x1820) (and x2177 x2923)) x3511))
(assert (= x617 (x2248 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (x3185 x4111))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x1847 11)))
(assert (x3185 x2268))
(assert (x3185 x2853))
(assert (x3185 x737))
(assert (=> (>= 10000 x43) (= (x1946 x43) 0)))
(assert (= 64 (x3590 (x1502 64 x638 36))))
(assert (=> (>= 10000 x1268) (= 0 (x1946 x1268))))
(assert (x3185 x4311))
(assert (x3185 x3666))
(assert (x3185 x2495))
(assert (x3185 x1749))
(assert (x3185 x1142))
(assert (x3185 x1784))
(assert (x3185 x1870))
(assert (x3185 x941))
(assert (= x3941 (x4053 (x2724 x765 x3941 x2716 x3682 x199))))
(assert (x3185 x1250))
(assert (x3185 x1444))
(assert (x3185 x2196))
(assert (= (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689) (x1946 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (= x3041 (or x3005 x2708 x3363 x2579 x1615 x1792 x3533 x4334 x3062 x477 x3034 x292 x2396 x4330 x484)))
(assert (x3185 x1072))
(assert (x3387 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x3185 x3164))
(assert (x3185 x817))
(assert (= (and x1405 (not x2788)) x142))
(assert (=> (<= x2757 10000) (= (x1946 x2757) 0)))
(assert (= x2895 (or (and x410 x2103) (and x1318 x2148))))
(assert (x3185 x838))
(assert (=> (<= x4385 10000) (= (x1946 x4385) 0)))
(assert (= 36 (x2248 (x1502 64 x4113 36))))
(assert (= (x1946 (x3876 x314 x1122)) (x3876 x314 x1122)))
(assert (x3185 x806))
(assert (= 64 (x3590 (x1502 64 x4076 36))))
(assert (x3185 x1053))
(assert (x3185 x910))
(assert (= (x2834 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x2212))
(assert (x3185 x1198))
(assert (= (x2834 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x1829))
(assert (< 10000 (x1057 x314 x2105 x1066 x589 x3537 x3055)))
(assert (= 64 (x3590 (x1502 64 x636 7))))
(assert (x3185 x1040))
(assert (x3185 x202))
(assert (< 10000 (x1502 64 x2805 36)))
(assert (x3185 x4237))
(assert (x3185 x1178))
(assert (x3185 x1055))
(assert (= (x2248 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x3526))
(assert (x3185 x4171))
(assert (=> (>= 10000 x665) (= 0 (x1946 x665))))
(assert (x3185 x41))
(assert (x3185 x2827))
(assert (= x3347 (and x870 x2192)))
(assert (x3185 x1403))
(assert (x3185 x940))
(assert (x3185 x4285))
(assert (x3185 x1167))
(assert (x3185 x1600))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548)))
(assert (= (x3590 (x998 x2497 x547 x3927 x1291)) x2497))
(assert (x3724 x376))
(assert (=> (>= 10000 x1008) (= (x1946 x1008) 0)))
(assert (x3185 x3950))
(assert (x3185 x1977))
(assert (= x665 (x2443 (x2724 x2947 x867 x2003 x665 x2163))))
(assert (> (x2900 0) 10000))
(assert (x3185 x2847))
(assert (x3185 x428))
(assert (= (and x1088 (not x2694)) x3322))
(assert (x3185 x3664))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x1261 36)))
(assert (x3185 x2526))
(assert (x3185 x2597))
(assert (= x1263 (=> (and (= false x227) (= x3789 true) (= x1211 0)) x164)))
(assert (x3185 x2132))
(assert (x3185 x4276))
(assert (=> (<= x1000 10000) (= (x1946 x1000) 0)))
(assert (= (x2248 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)) x2913))
(assert (= x210 (x2248 (x2724 x4046 x1101 x210 x3488 x1098))))
(assert (x3185 x1160))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x998 x2762 x165 x458 x1789)))
(assert (not (x3387 (x1502 x3659 x1891 x3365))))
(assert (= 64 (x3590 (x1502 64 x3713 100))))
(assert (=> (>= 10000 x1770) (= (x1946 x1770) 0)))
(assert (x3185 x4144))
(assert (x3185 x4206))
(assert (=> (<= x2232 10000) (= (x1946 x2232) 0)))
(assert (x3185 x2662))
(assert (= x1602 (x3590 (x998 x1602 x1878 x2521 x1476))))
(assert (x3185 x2303))
(assert (x2097 x376))
(assert (= (and (not x4092) x796) x2713))
(assert (= (x3590 (x1502 64 1 x2364)) 64))
(assert (x3185 x804))
(assert (x3185 x675))
(assert (=> (>= 10000 x902) (= (x1946 x902) 0)))
(assert (= x2709 x1289))
(assert (= 0 (x1946 4294967295)))
(assert (= (or x1765 x63 x1748) x1652))
(assert (= (x1946 (x2724 x1602 x2205 x3704 x124 x303)) (x2724 x1602 x2205 x3704 x124 x303)))
(assert (= x1962 (and x528 x401)))
(assert (x3185 x2274))
(assert (= (and x1081 x32) x1423))
(assert (x3185 x279))
(assert (x3185 x3231))
(assert (= x4058 (or x1735 x1207 x10 x1729 x3732)))
(assert (=> (<= x563 10000) (= 0 (x1946 x563))))
(assert (x3185 x232))
(assert (=> (<= x1837 10000) (= (x1946 x1837) 0)))
(assert (= x2956 (and x793 x3452)))
(assert (= x1891 (x4053 (x1502 x3659 x1891 x3365))))
(assert (= x596 (and (not x3502) x2171)))
(assert (= (x3590 (x1502 x4046 x3532 x1371)) x4046))
(assert (x3185 x3528))
(assert (x3185 x2160))
(assert (= (and x2740 x1253) x514))
(assert (x3185 x2558))
(assert (= (x1946 (x2724 x2947 x867 x2003 x665 x2163)) (x2724 x2947 x867 x2003 x665 x2163)))
(assert (= x31 (=> (and (= x974 x2756) (= (x4191 255 x1240) x2691) (= x4301 x2773) (= 0 x3487) (= x2691 x38) (= x3334 x1634) (= x1540 x476) (= x2787 2)) x554)))
(assert (x3185 x2483))
(assert (= (=> (and (= 36 x455) (= true x3150) (= x2756 x1954) (= x476 x3111) (= 0 x115) (= x2069 x2773) (= x413 false) (= 2 x595)) x1050) x3143))
(assert (x3185 x1641))
(assert (x3185 x2217))
(assert (x3185 x2264))
(assert (= (and x3056 x3395) x2603))
(assert (> (x1502 64 x3713 100) 10000))
(assert (x3185 x3279))
(assert (x3185 x348))
(assert (= x1327 (=> (and (= (= 0 x3601) x4105) (or (and x4105 (= x633 128)) (and (not x4105) (and (<= x3769 115792089237316195423570985008687907853269984665640564039457584007913129639807) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1907) x3769) (= x633 (+ 128 x3769)) (<= 1 x3769) (= x1907 (x1304 (+ 63 x3601))))))) x3409)))
(assert (x3185 x2372))
(assert (x3185 x991))
(assert (= x3264 (x1723 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (= x3219 (=> (and (or (and (and (= x1105 (ite (not (= x844 x813)) 1 0)) (<= x813 1461501637330902918203684832716283019655932542975)) x2432) (and (not x2432) (= x1105 (ite x2432 1 0)))) (and (= x2391 false) (= x3014 x3218) (= x1699 (x2739 x1482)) (= (x3391 x1482) x602) (>= 127 x1757) (<= x1842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3796 0) (<= x3675 1461501637330902918203684832716283019655932542975) (<= x2764 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1610 (= x1482 x1902) (= (= x3975 1) x3423) x27 (= (not (= x844 x1482)) x2432) (not (= x4138 x1482)) x1195 (>= x395 1) (= x259 (< 0 (x2739 x977))) (not (= x977 x395)) (>= x4220 0) (>= x2764 0) (= x2445 false) (not (= x4138 x977)) (<= x3001 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x977) (>= 1461501637330902918203684832716283019655932542975 x2145) (= false x1140) x610 (= x4116 x3675) (<= 0 x2093) (= x3684 x1917) (>= 1461501637330902918203684832716283019655932542975 x377) (= (x3297 x1947) x3986) (>= x1902 1) (= x3983 0) (>= 127 x1757) (= x4200 0) (>= x3001 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1917) (<= 0 x1842) (not (= x1482 x977)) (<= x2093 1461501637330902918203684832716283019655932542975) (= x3790 (x3297 x4116)) (<= x4138 1461501637330902918203684832716283019655932542975) (= (< 0 (x2739 x4138)) x27) (<= 0 x3196) (>= x684 0) (not (= x4138 x395)) (>= x2145 0) (= x377 x4138) (= x1195 (<= x2764 x3986)) (<= 1 x377) (= x3703 x1614) (= (> (x2739 x395) 0) x1610) (= x3191 2) (<= 0 x3675) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4220) (= x3218 x3703) x259 (<= x1902 1461501637330902918203684832716283019655932542975) (<= x395 1461501637330902918203684832716283019655932542975) (= 0 x173) (= 68 x4094) (= (< 0 (x2739 x1482)) x610) (not (= x395 x1482)) (<= x977 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1482) (<= x1448 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3423 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2911 x602)) (>= x1448 0) (<= x684 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3675 x844) (>= x1917 0) (= 2001815235 x2629) (<= x3196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1482) (= x3675 x1947) (<= 1 x4138) (= x2764 x2911) (>= x1699 1) (= (+ x2911 x602) x1917) (= (- x3790 x2911) x1286))) x703)))
(assert (x3185 x4378))
(assert (x3185 x3799))
(assert (x3185 x1517))
(assert (> (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276) 10000))
(assert (x3185 x1555))
(assert (x3185 x3461))
(assert (x3185 x391))
(assert (= (and x3777 (not x3853)) x552))
(assert (x2097 x252))
(assert (x3185 x3339))
(assert (> (x1502 64 x775 3) 10000))
(assert (= (x1259 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x3570))
(assert (= x2356 (=> (= x1754 (= 0 x4210)) (and (=> (and (and (= x115 0) (= x2773 x2069) (= x2756 x1954) (= true x2116) (= x205 false) (= x3111 x476) (= x455 x2942) (= 2 x1511)) x1754) x1050) (=> (and (not x1754) (and (= x299 x1756) (= x187 x40) (= x1997 x4124) (= x2730 x3968))) x2040)))))
(assert (x3185 x1635))
(assert (> (x3876 32 x3469) 10000))
(assert (> (x1057 x2947 x1589 x1322 x3543 x4228 x517) 10000))
(assert (< 10000 (x1502 x3461 x1216 x2043)))
(assert (x3185 x2121))
(assert (= x1008 (x2443 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (= (x4053 (x1502 64 x2169 36)) x2169))
(assert (= (x998 x1602 x1878 x2521 x1476) (x1946 (x998 x1602 x1878 x2521 x1476))))
(assert (= (or x787 x2819) x3018))
(assert (= (x1502 64 x92 36) (x1946 (x1502 64 x92 36))))
(assert (=> (>= 10000 x822) (= 0 (x1946 x822))))
(assert (= (x2443 (x998 x2762 x165 x458 x1789)) x1789))
(assert (x3185 x121))
(assert (x3185 x2266))
(assert (= x3269 (x4053 (x1502 64 x3269 (ite (>= 32 x3659) x1700 (ite (<= x3659 64) x1339 (ite (<= x3659 96) x72 (ite (<= x3659 128) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811))))))))))
(assert (= (x1946 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)) (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)))
(assert (x3185 x2929))
(assert (= 0 (x1946 1313998243)))
(assert (= (x1946 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) (x1057 x765 x3705 x3237 x2777 x3559 x2898)))
(assert (x3185 x1938))
(assert (x3185 x1912))
(assert (= (x4053 (x3876 x2497 x1711)) x1711))
(assert (< (x3876 x4046 x3249) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1688))
(assert (x3185 x2008))
(assert (x3185 x2679))
(assert (= x2010 (x4053 (x3876 32 x2010))))
(assert (x3185 x489))
(assert (= (x3876 x3461 x3096) (x1946 (x3876 x3461 x3096))))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (=> (<= x3931 10000) (= 0 (x1946 x3931))))
(assert (x3185 x4000))
(assert (= (and x3865 (not x2825)) x3507))
(assert (x3185 x3968))
(assert (x3185 x2653))
(assert (= x305 x1805))
(assert (x3185 x3667))
(assert (= (x4053 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) x317))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)))
(assert (x3185 x1336))
(assert (x3185 x3432))
(assert (= x573 (x2443 (x1057 x2497 x4380 x1265 x573 x3485 x448))))
(assert (= (=> (= (= x3627 0) x1161) (and (=> (and x1161 (and (<= x300 255) (= (x4118 x2576) x300) (= (< 3 x300) x117) (= (x1502 64 x1847 11) x2576))) (and (=> (and (not x117) (= (= 2 x300) x3887)) (and (=> (and (not x3887) (and (= false x731) (= x3164 4) (= x3621 true))) x1036) (=> (and x3887 (and (= (= x1719 0) x743) (= (x2618 x1169) x226) (>= 65535 x3903) (= (x1502 64 1 x3995) x1169) (= (x1502 64 x3903 4) x3995))) (and (=> (and (= (< x1719 x226) x3099) (not x743)) (and (=> (and (not x3099) (= x4157 x1719)) x2820) (=> (and x3099 (and (= 4 x3164) (= false x230) (= true x1356))) x1036))) (=> (and (= x226 x4157) x743) x2820))))) (=> (and (and (= x3164 36) (= false x3753) (= x1738 true)) x117) x1036))) (=> (and (and (= x3164 4) (= x354 true) (= x2256 false)) (not x1161)) x1036))) x2854))
(assert (x3185 x2838))
(assert (= (x1946 (x1502 64 x3703 10)) (x1502 64 x3703 10)))
(assert (= x3931 (x2248 (x998 x2757 x1058 x3931 x3188))))
(assert (= (x1502 64 x1847 11) (x1946 (x1502 64 x1847 11))))
(assert (= 0 (x1946 1084734224)))
(assert (x3185 x3471))
(assert (x2097 x2668))
(assert (x3185 x2851))
(assert (x3185 x1732))
(assert (x3185 x3255))
(assert (= (and (not x4147) x664) x1809))
(assert (= (or x3998 x1210) x3534))
(assert (x3185 x4189))
(assert (=> (<= x4276 10000) (= (x1946 x4276) 0)))
(assert (x3185 x1162))
(assert (x3185 x4044))
(assert (= (=> (= x882 (+ x251 x1470)) x2761) x568))
(assert (= (x4053 (x1502 64 x1682 12)) x1682))
(assert (x3185 x3093))
(assert (x3185 x342))
(assert (x3185 x3274))
(assert (x3185 x1251))
(assert (x3185 x561))
(assert (x3185 x4057))
(assert (x3185 x2607))
(assert (x3185 x3022))
(assert (= 36 (x2248 (x1502 64 x264 36))))
(assert (x3185 x3081))
(assert (= (x4053 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x2255))
(assert (=> (>= 10000 x473) (= (x1946 x473) 0)))
(assert (= x4385 (x1723 (x2724 x3461 x753 x465 x473 x4385))))
(assert (= x167 (or (and x2466 x3698) (and x2107 x372))))
(assert (< 10000 (x3876 x765 x2929)))
(assert (x3185 x3766))
(assert (x3185 x2602))
(assert (= (x3590 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689)) x3461))
(assert (x3185 x4086))
(assert (=> (>= 10000 x634) (= (x1946 x634) 0)))
(assert (=> (<= x3941 10000) (= 0 (x1946 x3941))))
(assert (x3185 x441))
(assert (= (or x1229 x3375) x17))
(assert (x3185 x2276))
(assert (=> (>= 10000 x3485) (= (x1946 x3485) 0)))
(assert (x3185 x2768))
(assert (not (x3387 (x1502 x2497 x2210 x1219))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2724 x3659 x1593 x650 x3229 x2424)))
(assert (x3185 x1401))
(assert (x3185 x1349))
(assert (= 64 (x3590 (x1502 64 x2169 36))))
(assert (= x329 (and (not x217) x2522)))
(assert (= (x1946 (x1502 64 x3592 12)) (x1502 64 x3592 12)))
(assert (x3185 x2538))
(assert (= x647 (=> (and (= x1254 true) (= false x2809) (= x476 x3111) (= x2069 x2773) (= 2 x3914) (= 36 x455) (= x115 0) (= x2756 x1954)) x1050)))
(assert (= (and (not x3061) x1958) x4100))
(assert (x3185 x886))
(assert (x3185 x1361))
(assert (x3185 x2304))
(assert (= (and (not x2100) x1016) x4187))
(assert (x3185 x1240))
(assert (< 10000 (x2724 x2947 x867 x2003 x665 x2163)))
(assert (x3185 x628))
(assert (= x1260 (x2443 (x998 x4046 x392 x811 x1260))))
(assert (x3185 x1206))
(assert (x3185 x4151))
(assert (x3185 x4260))
(assert (x3185 x2390))
(assert (x3185 x3959))
(assert (= (not (and (= x469 true) (= x2260 0) (= false x4269) (= true x2727) (= x4134 0) (= x3474 true) (= false x553) (= true x3745) (= x4134 (x3250 128)) (= false x4348) (= false x4090) (= x350 0) (= false x916) (= x3706 0) (= false x769) (= x2795 0) (= x2955 false) (= true x61) (= 0 x782) (= x382 0) (= false x3281) (= true x1294))) x2234))
(assert (x3185 x1059))
(assert (= x1838 (and x120 (not x1820))))
(assert (x3185 x25))
(assert (= (x2834 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x517))
(assert (=> (<= x1291 10000) (= 0 (x1946 x1291))))
(assert (=> (<= x2912 10000) (= 0 (x1946 x2912))))
(assert (x3185 x3597))
(assert (x3185 x3139))
(assert (< (x1502 64 x1107 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x626 (and (not x3887) x3385)))
(assert (x3185 x1413))
(assert (x3185 x3270))
(assert (x3185 x3932))
(assert (x3185 x4008))
(assert (x3185 x1372))
(assert (=> (<= x2366 10000) (= (x1946 x2366) 0)))
(assert (x3185 x1126))
(assert (x3185 x2645))
(assert (x3387 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x1272) (= 0 (x1946 x1272))))
(assert (= x1863 (and x2589 (not x2785))))
(assert (= x812 (x2834 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (< 10000 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)))
(assert (=> (>= 10000 x186) (= 0 (x1946 x186))))
(assert (= x2101 (or x3507 x3123 x3242)))
(assert (x3185 x98))
(assert (= (and x1365 (not x666)) x1149))
(assert (x3185 x3145))
(assert (x3185 x3604))
(assert (x3185 x2581))
(assert (x2097 x1360))
(assert (= x3903 (x4053 (x1502 64 x3903 3))))
(assert (x3185 x180))
(assert (= (x1502 64 x3567 11) (x1946 (x1502 64 x3567 11))))
(assert (= x953 (or x1099 x1104)))
(assert (= (and x2710 x716) x3611))
(assert (= x3406 (and (not x1799) x2250)))
(assert (=> (>= 10000 x2513) (= (x1946 x2513) 0)))
(assert (=> (<= x4189 10000) (= 0 (x1946 x4189))))
(assert (= 100 (x2248 (x1502 64 x3713 100))))
(assert (x3185 x3806))
(assert (< 10000 (x3876 x3659 x3925)))
(assert (x3185 x1724))
(assert (= x2134 (x2834 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452))))
(assert (not (x3387 (x3876 x3659 x3925))))
(assert (= (and (not x3483) x44) x2850))
(assert (x3185 x314))
(assert (x3185 x2136))
(assert (=> (<= x3097 10000) (= (x1946 x3097) 0)))
(assert (x3185 x3401))
(assert (x3185 x3228))
(assert (= x3194 (or (and x3777 x3853) (and x2788 x1405) (and x3419 x2462))))
(assert (= (x4053 (x1502 x3461 x1216 x2043)) x1216))
(assert (x3185 x419))
(assert (= (x3590 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) x4046))
(assert (x3185 x152))
(assert (not (x3387 (x3876 x4046 x3249))))
(assert (= (x3590 (x1502 64 x563 100)) 64))
(assert (x3185 x632))
(assert (= (or (and x2713 x1895) (and x4377 x3152)) x3062))
(assert (x3185 x606))
(assert (x3185 x3286))
(assert (= x3413 (and x788 x445)))
(assert (x3185 x1433))
(assert (= (x2834 (x1057 x314 x2105 x1066 x589 x3537 x3055)) x3055))
(assert (not (x3387 (x2387 x314 x186 x402 x1475 x8 x1829 x1433))))
(assert (< 10000 (x3876 x2947 x379)))
(assert (x3185 x2934))
(assert (< 10000 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)))
(assert (x3185 x3690))
(assert (= x2669 (and (not x2543) x3554)))
(assert (= (and x2098 x1303) x3005))
(assert (= (x1723 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)) x3396))
(assert (< (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3695))
(assert (x3185 x321))
(assert (x3185 x3831))
(assert (= x975 (=> (and (= x1706 x3844) (= x2385 x3758) (= x3425 x3171) (= x1449 true) (= 0 x1581) (= x3912 x4280) (= false x4387) (= x3824 x693) (= x3940 x4202) (= x2119 0) (= (x4191 255 x3286) x3425) (= x1966 x2696) (= x2860 x3274) (= x806 x2687) (= x2607 x3903) (= x279 x1649) (= x2185 x3141) (= x200 2) (= x1418 x2247)) x1943)))
(assert (x3185 x308))
(assert (x3185 x3077))
(assert (not (x3387 (x1502 64 x1261 36))))
(assert (=> (<= x3910 10000) (= (x1946 x3910) 0)))
(assert (x2097 255))
(assert (x3185 x1616))
(assert (x3185 x3153))
(assert (=> (>= 10000 x819) (= 0 (x1946 x819))))
(assert (= (x4053 (x3876 32 x3469)) x3469))
(assert (x3185 x4054))
(assert (= (x1946 (x1502 64 x3713 100)) (x1502 64 x3713 100)))
(assert (x3185 x741))
(assert (x3185 x4290))
(assert (x3185 x513))
(assert (x3185 x452))
(assert (= (x2248 (x1502 64 x638 36)) 36))
(assert (x3185 x3595))
(assert (x3185 x297))
(assert (x3185 x2144))
(assert (x3185 x1247))
(assert (x3185 x13))
(assert (=> (>= 10000 x3389) (= (x1946 x3389) 0)))
(assert (x3185 x2865))
(assert (> (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602) 10000))
(assert (= x3560 (and (not x1787) x1588)))
(assert (=> (<= x2913 10000) (= (x1946 x2913) 0)))
(assert (x3185 x3446))
(assert (x3387 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (= (x1946 (+ 1 x653)) (x1946 x653)))
(assert (not (x3387 (x1502 64 x3269 (ite (<= x3659 32) x1700 (ite (>= 64 x3659) x1339 (ite (<= x3659 96) x72 (ite (>= 128 x3659) x176 (ite (>= 160 x3659) x2700 (ite (>= 192 x3659) x4323 x1811))))))))))
(assert (x3185 x2767))
(assert (x3185 x2515))
(assert (=> (<= x1058 10000) (= 0 (x1946 x1058))))
(assert (x3724 x3607))
(assert (x3185 x3606))
(assert (x3185 x2839))
(assert (= (x3590 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548)) x2757))
(assert (x3185 x2587))
(assert (x3185 x1828))
(assert (x3185 x1001))
(assert (= x542 (x472 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (not (x3387 (x998 x2497 x547 x3927 x1291))))
(assert (= x3659 (x3590 (x3876 x3659 x3925))))
(assert (=> (>= 10000 x2898) (= 0 (x1946 x2898))))
(assert (x3185 x4184))
(assert (< 10000 (x2724 x2757 x158 x4169 x2665 x829)))
(assert (x3185 x102))
(assert (= (or x1135 x2622) x4139))
(assert (x3185 x83))
(assert (not (x3387 (x1502 64 x4189 6))))
(assert (= x716 (and x430 x2229)))
(assert (x3638 x4068))
(assert (= (x2248 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x402))
(assert (= (and (not x3056) x3395) x1883))
(assert (x3185 x1894))
(assert (=> (<= x829 10000) (= (x1946 x829) 0)))
(assert (= (=> (and (= (= 0 x192) x4264) (or (and (= x4165 128) x4264) (and (and (<= 1 x4184) (= (x1304 (+ x192 63)) x3091) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3091) x4184) (= (+ 128 x4184) x4165) (<= x4184 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (not x4264)))) x4148) x2644))
(assert (x3185 x542))
(assert (x3185 x3792))
(assert (< 10000 (x998 x2757 x1058 x3931 x3188)))
(assert (x3185 x811))
(assert (x3185 x2705))
(assert (= (x1946 (x1502 64 x1261 36)) (x1502 64 x1261 36)))
(assert (= x1602 (x3590 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (= (and (not x4179) x3407) x2977))
(assert (> (x1502 x1602 x634 x850) 10000))
(assert (= (x2443 (x2724 x1602 x2205 x3704 x124 x303)) x124))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x3724 x1273))
(assert (= (x2443 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) x1988))
(assert (= (x2834 (x1057 x2497 x4380 x1265 x573 x3485 x448)) x448))
(assert (= (x1946 x1734) (x1946 (+ x1734 1))))
(assert (=> (>= 10000 x1277) (= (x1946 x1277) 0)))
(assert (=> (<= x1761 10000) (= 0 (x1946 x1761))))
(assert (=> (<= x2497 10000) (= (x1946 x2497) 0)))
(assert (= x390 (and x2974 x2167)))
(assert (x3185 x1699))
(assert (x3185 x1988))
(assert (not (x3387 (x1502 64 x636 7))))
(assert (x3185 x3421))
(assert (x3185 x2984))
(assert (= (x1502 64 x775 3) (x1946 (x1502 64 x775 3))))
(assert (= x2684 (=> (and (or (and x1279 (and (= x248 x2699) (= x1647 x3531) (<= x2699 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x4206 x1) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2436 x3426) (= x1094 (x1790 x3773)) (= x4206 (x1849 x1482)) (= x1 (ite (= 0 x3823) x4203 0)) (= x1563 x1872) (<= 0 x2699) (= x2908 x3823) (= x267 (- x1094 x1)) (= (+ x1 x4206) x2699) (= x4290 x3873))) (and (not x1279) (and (= x3823 x2908) (= x1563 x1872) (= x4290 x3873) (= x3531 x1647) (= x3426 x2436)))) (= (= x3823 0) x1279)) x2215)))
(assert (x3185 x4318))
(assert (x3185 x379))
(assert (not (x3387 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947))))
(assert (> (x1502 64 x3567 11) 10000))
(assert (x2097 x1369))
(assert (x3185 x208))
(assert (x3185 x2843))
(assert (x3185 x1995))
(assert (x3185 x107))
(assert (= x1588 (or x1883 x4315)))
(assert (x3185 x4125))
(assert (x3185 x3539))
(assert (x3185 x507))
(assert (= x3890 (and x3298 (not x3609))))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (= (x2834 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)) x1817))
(assert (= (x1946 (x1502 64 x4076 36)) (x1502 64 x4076 36)))
(assert (x3185 x1301))
(assert (= x418 (=> (and (= x455 36) (= x476 x3111) (= x115 0) (= 2 x66) (= x1954 x2756) (= x2773 x2069) (= x1500 true) (= x1010 false)) x1050)))
(assert (= x4017 (and x1423 x2945)))
(assert (x3185 x4146))
(assert (x3185 x420))
(assert (= x3203 (and x4374 x3291)))
(assert (= (=> (= x510 (= x2908 0)) (and (=> (and (and (= 1 x2372) (= x4096 x3873) (= x3531 x2597) (= 0 x4150) (= x885 x3426) (= x3493 x1872)) (not x510)) x3259) (=> (and (and (= true x2992) (= 0 x2639) (= false x3837)) x510) x486))) x2215))
(assert (x3185 x4247))
(assert (= (x1259 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312)) x1536))
(assert (x3185 x3910))
(assert (x3185 x4126))
(assert (x3185 x3434))
(assert (x3185 x2338))
(assert (= x2898 (x2834 (x1057 x765 x3705 x3237 x2777 x3559 x2898))))
(assert (=> (<= x573 10000) (= 0 (x1946 x573))))
(assert (= (or x3053 x3530 x1338 x3194 (and x3981 x4304) x514 (and x3911 x3519)) x150))
(assert (x3185 x2965))
(assert (x3185 x3742))
(assert (=> (<= x2285 10000) (= 0 (x1946 x2285))))
(assert (x3185 x837))
(assert (x3185 x464))
(assert (=> (>= 10000 x1961) (= 0 (x1946 x1961))))
(assert (< (x1502 64 x2805 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3387 (x2724 x314 x1494 x4355 x3742 x4087))))
(assert (x3185 x3489))
(assert (x3185 x3873))
(assert (x3185 x4226))
(assert (x3185 x2844))
(assert (=> (<= x3434 10000) (= 0 (x1946 x3434))))
(assert (x3387 1084734224))
(assert (=> (>= 10000 x689) (= 0 (x1946 x689))))
(assert (x3185 x3240))
(assert (= x1099 (and x2100 x1016)))
(assert (x3185 x501))
(assert (x3185 x1226))
(assert (= 0 (x1946 3313512704)))
(assert (=> (<= x1552 10000) (= 0 (x1946 x1552))))
(assert (x3185 x1634))
(assert (=> (<= x792 10000) (= (x1946 x792) 0)))
(assert (x3185 x3914))
(assert (x3185 x3275))
(assert (= (x2248 (x1502 x3461 x1216 x2043)) x2043))
(assert (= (x3590 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x2497))
(assert (x3185 x1420))
(assert (= (x3590 (x2724 x1602 x2205 x3704 x124 x303)) x1602))
(assert (= x1073 (x2248 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (= x8 (x1723 (x2387 x314 x186 x402 x1475 x8 x1829 x1433))))
(assert (= (and x1816 (not x3846)) x3407))
(assert (= (x1946 x1342) (x1946 (+ x1342 1))))
(assert (= (or x3891 x909) x3363))
(assert (x3387 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (= x1490 (=> (and (= x1508 2) (= x4280 x628) (= x2696 x1545) (= x1212 x3824) (= x2566 x3903) (= x2640 x1649) (= x1667 x3274) (= x1894 x806) (= x2304 x3940) (= x740 false) (= x1132 x1418) (= x2793 x1897) (= x1047 x3758) (= x3141 x1250) (= true x1004) (= 0 x4153) (= x3844 x1600)) x722)))
(assert (x3185 x4119))
(assert (not (x3387 (x1057 x4046 x1645 x387 x1800 x1267 x1617))))
(assert (=> (>= 10000 x1606) (= (x1946 x1606) 0)))
(assert (x3185 x1769))
(assert (= x2563 (or (and x2507 x450) (and x1124 x1085))))
(assert (= 36 (x2248 (x1502 64 x2793 36))))
(assert (= (=> (and (= true x1136) (= x2933 false) (= 36 x455) (= x2756 x1954) (= x2773 x2069) (= x1674 2) (= x115 0) (= x476 x3111)) x1050) x2610))
(assert (x3185 x4094))
(assert (x3185 x997))
(assert (x3185 x3825))
(assert (x3185 x3045))
(assert (x3185 x1291))
(assert (= x1155 (x2834 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307))))
(assert (x3185 x1063))
(assert (x3185 x2125))
(assert (x3185 x2787))
(assert (x3185 x4284))
(assert (x3185 x2533))
(assert (x2097 x701))
(assert (x3185 x1322))
(assert (x3185 x6))
(assert (x3185 x4200))
(assert (x3185 x4136))
(assert (x3185 x676))
(assert (x3185 x4069))
(assert (x3185 x3567))
(assert (x3185 x767))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x3185 x38))
(assert (x3387 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x3185 x1188))
(assert (=> (<= x1512 10000) (= 0 (x1946 x1512))))
(assert (x3185 x2754))
(assert (< 10000 (x2724 x1602 x2205 x3704 x124 x303)))
(assert (= (x1723 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) x3559))
(assert (x3185 x2106))
(assert (x3185 x220))
(assert (=> (>= 10000 x1155) (= 0 (x1946 x1155))))
(assert (x3185 x3121))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 x3461 x3096)))
(assert (= x3841 (or (and x1851 x2956) (and x2785 x2589))))
(assert (= (and (not x1002) x3390) x2127))
(assert (= (x2248 (x1502 64 x3703 10)) 10))
(assert (x3185 x3713))
(assert (= (and x2062 (not x3861)) x149))
(assert (x3185 x3518))
(assert (= x1253 (and x225 x4271)))
(assert (= x2041 (or x1031 x3793)))
(assert (x2187 x252))
(assert (= (x4053 (x3876 x2757 x2831)) x2831))
(assert (x3185 x1153))
(assert (x3185 x1280))
(assert (= x2579 (and x3963 x3127)))
(assert (x3185 x310))
(assert (x3185 x212))
(assert (= (or (and (not x855) x412) x2962) x3390))
(assert (x3185 x3627))
(assert (= x1681 (x1723 (x2724 x2497 x902 x3129 x3958 x1681))))
(assert (x3185 x543))
(assert (=> (<= x1810 10000) (= (x1946 x1810) 0)))
(assert (x3185 x3532))
(assert (x3185 x2305))
(assert (= (and x1521 x2737) x1228))
(assert (= x975 x3874))
(assert (x3185 x2503))
(assert (x3185 x4165))
(assert (=> (>= 10000 x3229) (= 0 (x1946 x3229))))
(assert (< 10000 (x1502 64 x775 4)))
(assert (= (=> (and (= x1897 x2793) (= x4153 0) (= x628 x4280) (= x3824 x1212) (= x2553 true) (= x1545 x2696) (= false x4193) (= x2304 x3940) (= x1894 x806) (= x3844 x1600) (= x2566 x3903) (= x2640 x1649) (= x1418 x1132) (= x2869 2) (= x3274 x1667) (= x1250 x3141) (= x3758 x1047)) x722) x2781))
(assert (= (and x2314 (not x887)) x3140))
(assert (= (x2248 (x1057 x314 x2105 x1066 x589 x3537 x3055)) x1066))
(assert (x3638 x3091))
(assert (= x4255 (and x2993 (not x510))))
(assert (x3185 x271))
(assert (= (and (not x117) x2455) x3385))
(assert (= x2396 (or (and x1340 x2845) (and x3697 x2701) (and x796 x4092))))
(assert (= x3188 (x2443 (x998 x2757 x1058 x3931 x3188))))
(assert (x3185 x376))
(assert (= x358 (x4053 (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (>= 64 x2497) x2024 (ite (<= x2497 96) x4359 (ite (>= 128 x2497) x1097 (ite (<= x2497 160) x1313 (ite (<= x2497 192) x1435 x1931))))))))))
(assert (x3185 x1208))
(assert (x3185 x2009))
(assert (=> (>= 10000 x4355) (= 0 (x1946 x4355))))
(assert (x1576 x2889))
(assert (x3185 x4250))
(assert (x3185 x2886))
(assert (= x3817 (=> (and (or (and (and (= x1298 (* 1000000000 x1080)) (>= x2966 1) (= x499 x2123) (= x1080 x2123) (>= 127 x4010) (= x1147 false) (>= 127 x4010) (= x778 false) (= x4365 false) (= (x2739 x395) x2966) (= false x3094) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x1747) (= 310283853 x3825) (= x3508 36) (= x1298 x640) (<= x1080 57896044618658097711785492504343953926634992332820282019728792003956)) x3399) (and (not x3399) (and (<= 1 x527) (= (x2739 x977) x527) (= x570 x977) (= 36 x2031) (= false x1391) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2973) (= x1080 x757) (= x1836 310283853) (= x2057 false) (= false x2147) (<= x2504 127) (>= 127 x2504) (>= 1461501637330902918203684832716283019655932542975 x570) (= false x286) (<= 1 x570)))) (and (= false x3772) (>= 127 x3663) (= x3950 2088793519) (= (= x395 x570) x3399) (>= x1929 1) (= x1929 (x2739 x1482)) (= x4129 false) (>= 127 x3663) (= 128 x1373) (= x4319 4) (>= 1461501637330902918203684832716283019655932542975 x570))) x2234)))
(assert (= x1227 (x1259 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (x3185 x3115))
(assert (x3185 x3687))
(assert (= x342 (x4053 (x998 x2947 x342 x2039 x1272))))
(assert (not (x3387 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452))))
(assert (x3185 x1800))
(assert (=> (<= x358 10000) (= (x1946 x358) 0)))
(assert (x3185 x3948))
(assert (= (x1502 64 x264 2) (x1946 (x1502 64 x264 2))))
(assert (x3185 x1211))
(assert (x3185 x3740))
(assert (x3185 x2370))
(assert (x3185 x4095))
(assert (= x1393 (x4053 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (x3185 x2108))
(assert (x3185 x693))
(assert (= (x3590 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)) x2947))
(assert (=> (>= 10000 x1133) (= (x1946 x1133) 0)))
(assert (= (x1946 34591783479076665122502074927488338969190252781858077677016911635275368785765) 0))
(assert (x3185 x3138))
(assert (x3185 x2799))
(assert (x3185 x299))
(assert (=> (>= 10000 x2163) (= 0 (x1946 x2163))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2724 x2757 x158 x4169 x2665 x829)))
(assert (not (x3387 (x1057 x2947 x1589 x1322 x3543 x4228 x517))))
(assert (x3185 x233))
(assert (x3185 x2593))
(assert (= (and (not x1279) x2362) x2110))
(assert (x3185 x1864))
(assert (x3185 x200))
(assert (= x2762 (x3590 (x1057 x2762 x1522 x1067 x894 x26 x2402))))
(assert (= x414 (=> (and (= (x2739 x4280) x1302) (= 128 x3862) (= x2000 (x3747 (- x1517 128))) (= (= x1302 0) x2950)) (and (=> (and x2950 (and (= x2640 x1649) (= x1418 x1132) (= false x3367) (= x3903 x2566) (= x3274 x1667) (= x2304 x3940) (= x3758 x1047) (= x4280 x628) (= x2696 x1545) (= x2352 2) (= x725 true) (= x1897 x2793) (= 0 x4153) (= x3844 x1600) (= x806 x1894) (= x3824 x1212) (= x3141 x1250))) x722) (=> (and (not x2950) (and (= (x3282 x4280) x673) (= (<= x2503 x1688) x4252) (= x2893 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x673 x2503))) (= (and x2893 x4252) x3265) (= (x3282 x977) x1688))) (and (=> (and (and (= (+ x1117 x2503) x4379) (= x861 128) (= x1424 94926909962862326217726538024181891405690106632559804934698421914364834480128) (<= 196 x2871) (= x3072 (x2739 x1482)) (= (= (x3752 132) x3019) x4156) (>= x2000 196) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1117 x2503)) (= false x1982) (= (x3282 x977) x1827) (= x358 x3568) (<= x2871 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1516 x4379) (<= x258 127) (= x4161 3521034783) (<= 0 x4379) (= (x3328 132) x2852) (= (x3325 x4280) x1117) x4156 (= false x1290) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2000) (= x2230 (- x1827 x2503)) (<= x4379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2500 x636) (= x4126 x2026) (= (< 18446744073709551615 x2852) x2785) (= x2871 x2000) (<= 1 x3072) (<= x258 127)) x3265) (and (=> x2785 x1395) (=> (and (and (= x2223 (< x2871 x872)) (= x872 (x1304 (+ 164 x2852))) (= 164 x224)) (not x2785)) (and (=> (and (not x2223) (and (= (+ 4 x2026) x649) (= x3452 (> x2871 (+ 31 x649))))) (and (=> (and (not x3452) (and (= 0 x1211) (= false x3985) (= true x2158))) x164) (=> (and (and (= x1499 (x3328 x649)) (= x1851 (> x1499 18446744073709551615))) x3452) (and (=> (and (and (= x2334 (+ 32 x649)) (= (x1304 (+ x1499 x2334)) x1496) (= x1258 (> x1496 x2871))) (not x1851)) (and (=> (and (and (and (= x1133 (x961 288)) (>= x2497 32) (= (x961 128) x2210) (= (x1057 x2497 x4380 x1265 x573 x3485 x448) x1313) (= x2212 (x961 256)) (= (x961 288) x3570) (= x4278 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689)) (= (x1304 (+ x4008 32)) x2418) (= x4051 (x961 160)) (= (x961 224) x1681) (= x857 (x3876 x2497 x1711)) (= (x961 224) x3128) (= (x2724 x3461 x753 x465 x473 x4385) x1922) (= (x961 224) x2008) (= x713 (x1304 (+ 128 x2852))) (= x4359 (x998 x2497 x547 x3927 x1291)) (= x2497 (x3747 (- x2418 128))) (= (x2724 x2497 x902 x3129 x3958 x1681) x1097) (= (x961 192) x97) (= (ite (= 0 x3461) x694 (ite (>= 32 x3461) x4030 (ite (>= 64 x3461) x338 (ite (<= x3461 96) x1925 (ite (<= x3461 128) x1922 (ite (<= x3461 160) x3864 x4278)))))) x2070) (= (x961 256) x1554) (= x280 (x961 160)) (= x1689 (x961 288)) (= (x1502 64 x636 7) x3515) (= (x961 160) x2043) (= x4380 (x961 128)) (= x1724 (x961 128)) (= x753 (x961 128)) (= (x2900 0) x694) (= x1280 (x961 256)) (= x1216 (x961 128)) (= x3097 (x961 256)) (= x3864 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) (= (x961 160) x148) (= (x961 160) x819) (= x1291 (x961 192)) (= (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (<= x2497 64) x2024 (ite (>= 96 x2497) x4359 (ite (>= 128 x2497) x1097 (ite (>= 160 x2497) x1313 (ite (>= 192 x2497) x1435 x1931))))))) x2958) (= (x961 224) x2593) (= (x998 x3461 x4241 x3959 x3374) x1925) (= x1265 (x961 160)) (= (x961 128) x902) (= x3927 (x961 160)) (= x448 (x961 256)) (= (x961 128) x3096) (= (x961 128) x1552) (= (x961 128) x2214) (= x3485 (x961 224)) (= x2285 (x961 192)) (= (x961 192) x3958) (= (x961 128) x4241) (= (x961 224) x1961) (= (- x2497 32) x3461) (= (x961 192) x3374) (= x4008 (x1304 (+ 128 x2852))) (= (x961 192) x473) (= (x961 160) x3129) (= x3656 (x961 320)) (= x4030 (x3876 x3461 x3096)) (= x547 (x961 128)) (= x2398 (= 0 x348)) (= x348 (x463 x2958)) (= x465 (x961 160)) (= (x961 160) x1219) (= x2255 (x961 128)) (= (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656) x1931) (= x1435 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) (= x3959 (x961 160)) (= x3966 (x961 192)) (= x573 (x961 192)) (= x2024 (x1502 x2497 x2210 x1219)) (= (x961 224) x4385) (<= x2497 224) (= (x961 192) x1988) (= (x1502 x3461 x1216 x2043) x338) (= x1711 (x961 128))) (or (and (not x2398) (and (and (= x3506 (x3876 x2947 x379)) (= (x1468 320) x947) (= (x1468 160) x1322) (= x2885 (x2900 0)) (= (x1468 160) x2003) (= x332 (x1468 128)) (= (x1468 128) x1589) (= (x1468 224) x2163) (= (x1468 256) x517) (= x3861 (= (ite (= 0 x2947) x2885 (ite (>= 32 x2947) x3506 (ite (>= 64 x2947) x3926 (ite (>= 96 x2947) x3287 (ite (>= 128 x2947) x3514 (ite (>= 160 x2947) x2863 (ite (>= 192 x2947) x578 x2021))))))) x348)) (= x1740 (x1468 288)) (= (x1502 x2947 x332 x2499) x3926) (= x792 (x1468 160)) (= x1441 (x1468 192)) (= x3543 (x1468 192)) (= x43 (x1468 256)) (= x2021 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) (= x2863 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) (= (x1468 128) x1393) (= (x1468 128) x1000) (= x578 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227)) (= x3287 (x998 x2947 x342 x2039 x1272)) (= (x3747 (- x487 128)) x2947) (>= 224 x2947) (= x1040 (x1468 224)) (= x665 (x1468 192)) (= (x1468 288) x1227) (= x1272 (x1468 192)) (= x617 (x1468 160)) (= x379 (x1468 128)) (= (x1304 (+ x1499 128)) x487) (= x3514 (x2724 x2947 x867 x2003 x665 x2163)) (= (x1468 192) x2376) (= (x1468 128) x867) (= x2152 (x1468 256)) (= (x1468 224) x3396) (= x2499 (x1468 160)) (= (x1468 128) x342) (= x2039 (x1468 160)) (= (x1468 224) x4228)) (or (and x3861 (and (= x4169 (x3562 160)) (= (x3562 128) x2200) (= (x3747 (- (mod (+ x266 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x2762) (= x165 (x3562 128)) (= (x3562 192) x894) (= (div x1732 32) x2965) (= x4327 (x1057 x2762 x1522 x1067 x894 x26 x2402)) (= x2513 (x3562 192)) (= x1276 (+ x540 160)) (= (x3562 256) x2114) (= x2402 (x3562 256)) (= x3144 (x3562 224)) (= (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (>= 64 x2762) x2199 (ite (>= 96 x2762) x381 (ite (>= 128 x2762) x359 (ite (<= x2762 160) x4327 (ite (>= 192 x2762) x3047 x4300))))))) x2896) (= false x774) (= x2560 true) (= x3541 (x1304 (+ x1137 32))) (= (x2724 x2762 x2799 x2912 x2224 x2366) x359) (= (x3562 128) x48) (= x4364 (x3562 160)) (= x540 (* x2965 32)) (= x910 (x3562 256)) (= x4199 (x3876 x2762 x525)) (= x2366 (x3562 224)) (= x3116 (x3562 128)) (= (x3562 192) x557) (= x3548 (x3562 288)) (= x1567 (x1304 (+ x1499 31))) (= x3047 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602)) (= (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548) x3262) (= x1837 (x3562 224)) (= x2274 (x1304 (+ 32 x1276))) (= (x1304 (+ x1276 x3541)) x4061) (= x2757 (- x2762 32)) (= (x3562 160) x458) (= x738 (x3562 192)) (= 128 x2265) (= (x998 x2757 x1058 x3931 x3188) x2348) (= (x1502 x2762 x3116 x1715) x2199) (= x1058 (x3562 128)) (= x1791 (x3562 288)) (= (x3562 192) x2224) (= x4022 (x1304 (+ x2274 x1499))) (= x2561 (x1304 (+ x2852 128))) (= (* 32 x3079) x1137) (= x2831 (x3562 128)) (= (x3562 256) x2232) (= x158 (x3562 128)) (= x4137 (x3562 128)) (= (x3562 160) x2912) (= (x3562 128) x525) (or (>= x681 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 31 x681)) (= (x998 x2762 x165 x458 x1789) x381) (= (x3562 128) x1522) (= 0 x1211) (= (x1057 x2757 x737 x3759 x2513 x1837 x3104) x2190) (= x2799 (x3562 128)) (or (>= x2852 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x2852 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x1304 (+ 160 x2852)) x678) (= (x1502 64 x636 7) x840) (>= x2762 32) (= (x3562 160) x2989) (= x266 (x1304 (+ 128 x2852))) (< x1276 x4061) (= (x3562 128) x903) (= (x3876 x2757 x2831) x4067) (= x4300 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) (= (x3562 320) x4276) (= (x3562 192) x1106) (= x2477 (x3562 160)) (= (x3562 192) x2665) (= x2412 (x3562 224)) (= x1648 (x1502 x2757 x903 x2989)) (= x3264 (x3562 224)) (= (x1271 x1276) x681) (= (div x1567 32) x3079) (= (x2900 0) x362) (= (x3562 160) x3931) (= x829 (x3562 224)) (= x2602 (x3562 288)) (= x3188 (x3562 192)) (= x3759 (x3562 160)) (>= x4061 161) (= (x3562 192) x1789) (= x1067 (x3562 160)) (<= x2762 224) (= (x2724 x2757 x158 x4169 x2665 x829) x710) (= x1732 (x1304 (+ 31 x2852))) (= (ite (= 0 x2757) x362 (ite (>= 32 x2757) x4067 (ite (<= x2757 64) x1648 (ite (<= x2757 96) x2348 (ite (>= 128 x2757) x710 (ite (>= 160 x2757) x2190 x3262)))))) x246) (= x1715 (x3562 160)) (= x3104 (x3562 256)) (= (x3562 128) x737) (= x3526 (x3562 160)) (= x26 (x3562 224)))) (and (not x3861) (and (= x2849 false) (= 132 x1211) (= x3937 true)))))) (and x2398 (and (= 132 x1211) (= x189 true) (= false x1976))))) (not x1258)) x164) (=> x1258 x1263))) (=> x1851 x1395))))) (=> x2223 x1263))))) (=> (and (not x3265) (= 0 x3982)) x1930)))))))
(assert (= x563 (x4053 (x1502 64 x563 100))))
(assert (=> (<= x812 10000) (= 0 (x1946 x812))))
(assert (x3185 x2725))
(assert (x3185 x1538))
(assert (x3185 x3912))
(assert (= (x1946 (x1057 x3659 x1608 x1761 x1401 x1199 x1664)) (x1057 x3659 x1608 x1761 x1401 x1199 x1664)))
(assert (= (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548) (x1946 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548))))
(assert (x3185 x3348))
(assert (x3185 x4295))
(assert (= (x2248 (x1502 64 x1828 36)) 36))
(assert (x3185 x1746))
(assert (x3185 x45))
(assert (= (and x2325 x968) x705))
(assert (= (and x1636 (not x301)) x2840))
(assert (x3185 x2259))
(assert (x3638 x2587))
(assert (x3185 x4107))
(assert (x3185 x3417))
(assert (x3185 x2942))
(assert (x3185 x3137))
(assert (= (x1502 x3461 x1216 x2043) (x1946 (x1502 x3461 x1216 x2043))))
(assert (= (and x1285 x1604) x3113))
(assert (x3185 x4205))
(assert (= (and x667 x4277) x3112))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1057 x2497 x4380 x1265 x573 x3485 x448)))
(assert (= (and x1652 (not x777)) x968))
(assert (= x2762 (x3590 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276))))
(assert (= x1636 (and (not x4277) x667)))
(assert (= (x2248 (x1502 64 x1682 12)) 12))
(assert (x3185 x2765))
(assert (=> (<= x1199 10000) (= 0 (x1946 x1199))))
(assert (= x1238 (and x1583 (not x1509))))
(assert (x3185 x1984))
(assert (x3185 x714))
(assert (x3185 x3625))
(assert (x3185 x3211))
(assert (< 10000 (x1502 64 x3903 5)))
(assert (x3185 x2206))
(assert (x3185 x1451))
(assert (x3185 x4232))
(assert (x3185 x3320))
(assert (< (x1502 x765 x1477 x822) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1606))
(assert (= x4087 (x1723 (x2724 x314 x1494 x4355 x3742 x4087))))
(assert (x3185 x2181))
(assert (= x2517 (x4053 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (= x1092 (and x249 (not x2657))))
(assert (x3185 x3129))
(assert (= x1039 (and x4235 x2052)))
(assert (= (x2834 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) x490))
(assert (x3185 x8))
(assert (x3185 x2947))
(assert (x3185 x2561))
(assert (x3185 x607))
(assert (x3185 x4089))
(assert (= x3679 (x1259 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (= 0 (x1946 2001815235)))
(assert (=> (>= 10000 x2414) (= 0 (x1946 x2414))))
(assert (x2097 x2541))
(assert (= x2545 (and x1783 x407)))
(assert (x3185 x2831))
(assert (> (x1502 64 x264 2) 10000))
(assert (= x1765 (and x1604 (not x1285))))
(assert (x2097 x3077))
(assert (x3185 x3561))
(assert (x3185 x2911))
(assert (> (x2724 x3659 x1593 x650 x3229 x2424) 10000))
(assert (= (x3590 (x1502 64 x3703 10)) 64))
(assert (x3185 x3953))
(assert (x3185 x1347))
(assert (x3185 x1526))
(assert (= (x2248 (x998 x765 x580 x2197 x687)) x2197))
(assert (x3185 x1867))
(assert (not (x3387 (x3876 x2497 x1711))))
(assert (=> (<= x1073 10000) (= 0 (x1946 x1073))))
(assert (= (and x1068 x1503) x1337))
(assert (x3185 x1836))
(assert (x3185 x4039))
(assert (= x3259 (=> (and (or (and (and (= x2372 x4210) (= x2730 x4096) (= x885 x40) (= x299 x2597) (= x4124 x3493) (= x2942 x4150)) (not x2825)) (and (and (= x2730 x4096) (= x1767 (+ x3305 x1335)) (= x4210 x2372) (>= x1767 0) (= x2537 (- x3115 x1335)) (= x3493 x4124) (= x885 x40) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1767) (= (x2204 x3668) x3115) (= x3305 (x3642 x977)) (= x1767 x1072) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3305 x1335)) (= x2597 x299) (= x4150 x2942) (= x1335 (ite (= 0 x2372) x1370 0))) x2825)) (= x2825 (= x2372 0))) x2356)))
(assert (x3185 x3783))
(assert (= x1031 (and (not x2432) x2343)))
(assert (= x4046 (x3590 (x998 x4046 x392 x811 x1260))))
(assert (x3185 x2762))
(assert (= (x1723 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x4228))
(assert (x3185 x1512))
(assert (< (x1057 x765 x3705 x3237 x2777 x3559 x2898) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1259 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x1791))
(assert (=> (<= x3958 10000) (= (x1946 x3958) 0)))
(assert (< 10000 (x998 x2497 x547 x3927 x1291)))
(assert (=> (<= x4280 10000) (= 0 (x1946 x4280))))
(assert (x3185 x3019))
(assert (= (and x78 x203) x3892))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (=> (>= 10000 x903) (= 0 (x1946 x903))))
(assert (= x2654 (=> (and (= x1312 (= 0 x2645)) (or (and (and (= x23 x4378) (= x2972 x2115) (<= 0 x268) (= x3994 x4171) (= x1427 x357) (= x1061 (x4122 x1277)) (= x1964 x2952) (= x383 x319) (= x3357 (x803 x1482)) (= (+ x3357 x3321) x268) (= x1772 x1582) (= x4111 x417) (= x3103 x268) (<= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (= 0 x2645) x2341 0) x3321) (= x745 x2645) (= x2685 x1412) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3357 x3321)) (= x1839 x3051) (= x2558 x2202) (= x1003 x1801) (= x2055 (- x1061 x3321)) (= x2768 x2327)) x1312) (and (and (= x745 x2645) (= x1772 x1582) (= x1412 x2685) (= x2952 x1964) (= x3051 x1839) (= x357 x1427) (= x2972 x2115) (= x319 x383) (= x1801 x1003) (= x417 x4111) (= x23 x4378) (= x2768 x2327) (= x2202 x2558) (= x4171 x3994)) (not x1312)))) x4208)))
(assert (x3387 4294967295))
(assert (= 0 (x1946 2088793519)))
(assert (x3185 x954))
(assert (= x2762 (x3590 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (< (x2724 x3461 x753 x465 x473 x4385) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2504))
(assert (x3185 x3486))
(assert (= x2521 (x2248 (x998 x1602 x1878 x2521 x1476))))
(assert (= (x1946 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) (x1057 x3461 x2214 x148 x1988 x1961 x1554)))
(assert (x3185 x1594))
(assert (x3185 x4082))
(assert (x3185 x4169))
(assert (= (and x3480 x3040) x4015))
(assert (x3185 x3466))
(assert (x3185 x3962))
(assert (x3185 x1476))
(assert (=> (>= 10000 x1817) (= 0 (x1946 x1817))))
(assert (x3185 x2961))
(assert (x3185 x3188))
(assert (x3185 x3986))
(assert (x2097 x1223))
(assert (= x1837 (x1723 (x1057 x2757 x737 x3759 x2513 x1837 x3104))))
(assert (x3185 x2194))
(assert (= (x2248 (x998 x4046 x392 x811 x1260)) x811))
(assert (= x845 (and x235 (not x2406))))
(assert (< (x3876 x314 x1122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x4257))
(assert (= x3533 (or (and (not x2550) x772) (and (not x2229) x430))))
(assert (= x3958 (x2443 (x2724 x2497 x902 x3129 x3958 x1681))))
(assert (x3185 x3425))
(assert (= x423 (=> (and (<= x2719 127) (= x3446 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= (= x3555 1) x3996) (<= x3668 1461501637330902918203684832716283019655932542975) (not x2823) (= (= 4 x3555) x65) (not x770) (>= x2773 1) (not x1673) (<= x2719 127) (= x2756 x1419) (= (= 2 x3555) x1698) (= x2195 (= 3 x3555)) (= x297 (x4191 255 x343)) (= (+ x4075 1) x343) (= x3555 (x2731 x14)) (= x556 false) (not x1698) (>= 1461501637330902918203684832716283019655932542975 x2773) (= x1266 (= x1482 x3668)) (= false x956) (not x2195) (= x506 (= x2580 0)) (= x770 (= 0 x3555)) (not x506) (= (x1502 64 x4075 36) x14) (<= x4075 255) (= x1673 (= x4075 255)) (= (= x2773 x395) x2823) (= x977 x2773) (not x3996) (= x1590 3628442803) (= x2169 (x4191 255 x343)) (<= 1 x1281) x1266 (= x3383 36) (= (x2739 x977) x1281) (= x2428 160)) (and (=> (and (= x3614 (= 5 x3555)) (not x65)) (and (=> (and (= (= x3555 6) x3319) (not x3614)) (and (=> (and (= x3312 (= x3555 7)) (not x3319)) (and (=> (and (= x2822 (= 8 x3555)) (not x3312)) (and (=> (and (= x495 (= 255 x2169)) x2822) (and (=> x495 x2610) (=> (and (not x495) (and (= (x2739 x3668) x1368) (= x3067 (x4191 255 x1240)) (= (x1502 64 x2169 36) x3454) (= (+ x2169 1) x1240) (= x1389 (x4191 255 x1240)) (= 128 x1662) (= x584 (x2731 x3454)) (= x1203 (= 0 x1368)))) (and (=> (and (and (>= 127 x2303) (<= 1 x2245) (= x2121 35425322552009646506518338594398286811668114190755561836384294568426616127488) (>= 1461501637330902918203684832716283019655932542975 x3489) (= x1442 x584) (<= x2303 127) (= x1068 (= x3489 x977)) (= x615 false) (= x1351 36) (= false x3403) (= (x2739 x1482) x2245) (= 1313998243 x3279)) (not x1203)) (and (=> (and x1068 (= x4115 (< x584 100000))) (and (=> (and (and (= x3487 1) (= x2773 x4301) (= x1540 x476) (= 0 x1634) (= x2662 (x2731 x3454)) (= x2662 x974) (= x38 x3067)) (not x4115)) x554) (=> (and x4115 (and (= x2555 false) (= true x763) (= x3334 4))) x31))) (=> (and (not x1068) (and (= x4268 true) (= 100 x3334) (= x4329 false))) x31))) (=> (and x1203 (and (= x476 x3111) (= x1954 x2756) (= true x4018) (= x2773 x2069) (= 2 x2409) (= x433 false) (= 0 x115) (= 0 x455))) x1050))))) (=> (and (and (= x2756 x3813) (= x2413 x2169) (= x4089 x476) (= x2773 x1526)) (not x2822)) x1013))) (=> (and x3312 (= x884 (= 255 x2169))) (and (=> x884 x2610) (=> (and (and (= x2308 (x2739 x3668)) (= (= x2308 0) x1712) (= x4337 128) (= (x1502 64 x2169 2) x144) (= (x4191 255 x1795) x2536) (>= 1461501637330902918203684832716283019655932542975 x313) (= (+ x2169 1) x1795) (= (x3013 x144) x313) (= (x4191 255 x1795) x2754)) (not x884)) (and (=> (and (not x1712) (and (= false x119) (<= x3489 1461501637330902918203684832716283019655932542975) (>= 127 x878) (= x1463 x313) (= false x3616) (>= x3401 1) (= x3401 (x2739 x1482)) (>= 127 x878) (= x3907 36) (= (= x3489 x977) x1121) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x2515) (= x1001 2770781680))) (and (=> (and (not x1121) (and (= x1744 true) (= false x2980) (= 100 x3792))) x2693) (=> (and (and (= x2047 (x3272 x1482)) (= x1509 (< 0 x2047))) x1121) (and (=> (and (not x1509) (and (= x2754 x2321) (= x2675 x476))) x2816) (=> (and (and (= (and x4098 x1893) x2938) (= (<= x2047 x2030) x1893) (= x3486 128) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2047 x1347)) x4098) (= (x3272 x313) x1347) (= x2030 (x3272 x1482))) x1509) (and (=> (and (and (and (= (x868 x313) x864) (= x2801 (+ x864 x2047)) (= x2242 (- x4117 x2047)) (< (+ x864 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2801 0) (= (< 0 x1257) x2733) (= x4117 (x3272 x1482)) (= x1921 x2801) (<= x2801 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (and (= x3263 x4314) (>= 4294967295 x222) (= x175 (<= x3935 (x2460 x1482))) (= x349 (= (x2460 x313) x3310)) (= x3427 x208) x175 (= x3935 (x827 x1482)) (= (x827 x313) x3310) x349) x2733) (and (and (= x4314 x476) (= x2754 x3427)) (not x2733)))) x2938) x3916) (=> (and (and (= x3601 0) (= x2754 x1472) (= x620 0) (= x29 x476)) (not x2938)) x1327))))))) (=> (and (and (= x385 false) (= x3278 true) (= x2069 x2773) (= 2 x3667) (= x115 0) (= 0 x455) (= x476 x3111) (= x1954 x2756)) x1712) x1050))))))) (=> (and (= (= x2169 255) x2694) x3319) (and (=> (and (not x2694) (and (= x216 (= x810 255)) (= x3566 (x4191 255 x3161)) (= (+ x2169 1) x3161) (= (x2731 x516) x1370) (= x516 (x1502 64 x2169 36)) (= (x4191 255 x3161) x810))) (and (=> x216 x3143) (=> (and (and (= x4263 (+ x810 1)) (= x1810 (x4191 255 x4263)) (= (= x1810 255) x2650) (= (x4191 255 x4263) x408) (= (x1502 64 x810 36) x3382) (= x3567 (x2731 x3382))) (not x216)) (and (=> (and (and (= x2016 (x4191 255 x3672)) (= x4113 (x4191 255 x3672)) (= x1392 (x1502 64 x1810 36)) (= (x2731 x1392) x3065) (= (= x4113 255) x3698) (= x3672 (+ x1810 1))) (not x2650)) (and (=> (and (not x3698) (and (= (x4191 255 x452) x3202) (= x308 128) (= x3987 (x2739 x3668)) (= (+ 1 x4113) x452) (= (= 0 x3987) x2170) (= (x2731 x2951) x2525) (= (x4191 255 x452) x1244) (= x2951 (x1502 64 x4113 36)))) (and (=> (and (not x2170) (and (= (>= x1549 x1370) x1469) (= x1549 (x3272 x977)) (= (and x1469 x3989) x3010) (= x3989 (< (+ x1178 x1370) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1178 (x3272 x3668)))) (and (=> (and (and (= x40 x2756) (= x3202 x4124) (= x2942 0) (= x2730 x476) (= x2773 x299) (= x4210 0)) (not x3010)) x2356) (=> (and (and (and (>= x3052 0) (<= x1957 127) (= x1823 x3567) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3052) (= 100 x1909) (= x3052 (+ x1370 x2276)) (= x2525 x3344) (<= x1957 127) (= x1035 (- x2769 x1370)) (= (x4227 x3668) x2276) (= 486791245 x2839) (= (x2739 x1482) x3002) (= x132 x1823) (= x3052 x4056) (= x2686 false) (= x1564 x3344) (>= x3002 1) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x2601) (= (x3272 x977) x2769) (= x3477 false) (= x3641 (not (= x1482 x977))) (= x712 x3923) (< (+ x1370 x2276) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3923 x3065)) (or (and x3641 (and (<= x3489 1461501637330902918203684832716283019655932542975) (= x3755 (ite (not (= x3489 x977)) 1 0)))) (and (= (ite x3641 1 0) x3755) (not x3641)))) x3010) x3499))) (=> (and x2170 (and (= 2 x3805) (= x476 x3111) (= 0 x115) (= false x1708) (= x2756 x1954) (= true x3708) (= x2773 x2069) (= x455 0))) x1050))) (=> x3698 x418))) (=> x2650 x647))))) (=> x2694 x2610))))) (=> (and (= x1973 (= 255 x2169)) x3614) (and (=> x1973 x2610) (=> (and (and (= (= 255 x4189) x2922) (= x2668 (+ 1 x2169)) (= x2336 (x1502 64 x2169 36)) (= x3471 (x2731 x2336)) (= x4189 (x4191 255 x2668)) (= x3965 (x4191 255 x2668))) (not x1973)) (and (=> (and (and (= x3592 (x4191 255 x1130)) (>= 65535 x3389) (= (= x3592 255) x2107) (= x1130 (+ x4189 1)) (= x3045 (x4191 255 x1130)) (= x3711 (x1502 64 x4189 6)) (= (x444 x3711) x3389)) (not x2922)) (and (=> x2107 x418) (=> (and (not x2107) (and (= (x3747 (- x1870 (mod (ite (< x1592 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2132) (= (< 0 x2132) x278) (= x83 (div x276 2)) (= x3993 (+ 1 x3592)) (= x3269 (x1586 x3036)) (= x4232 (x4191 255 x3993)) (= x1870 (x4191 1 x276)) (= (x1502 64 x3592 12) x3036) (= x1592 (ite (< 0 x1870) x83 (x4191 127 x83))) (>= 18446744073709551615 x3269) (= x1927 (x4191 255 x3993)))) (and (=> (not x278) x2355) (=> (and (and (= (x4191 1 x276) x3573) (= x3107 (= x3573 0))) x278) (and (=> (and (not x3107) (and (and (= (> x1592 0) x558) (= x754 (x3876 32 103))) (or (and (not x558) (= 0 x400)) (and x558 (and (= (x1802 x754) x501) (= x400 32) (>= 32 x1592)))))) x2990) (=> (and (and (= x2498 (* 32 (ite (not (= 0 x1592)) 1 0))) (or (= 32 x2498) (= x2498 0)) (= x2109 (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x276)) (= x639 (+ 292 x2498))) x3107) x2228))))))) (=> x2922 x3143))))))) (=> (and (= (= x2169 255) x887) x65) (and (=> x887 x2610) (=> (and (and (= (= 255 x3713) x3516) (= x2140 (x2731 x2921)) (= x2921 (x1502 64 x2169 36)) (= (+ 1 x2169) x3364) (= (x4191 255 x3364) x1599) (= (x4191 255 x3364) x3713)) (not x887)) (and (=> (and (not x3516) (and (= (x1502 64 x3713 100) x969) (= x4250 (x4191 255 x3304)) (= x2805 (x4191 255 x3304)) (= (+ x3713 1) x3304) (= x2619 (= 255 x2805)) (= (x485 x969) x2196))) (and (=> (and (not x2619) (and (= x2069 x2773) (= 2 x3563) (= x3356 (x3272 x977)) (= x1397 (x2731 x1498)) (= x1479 (x4191 255 x3607)) (not (and x2718 x1447)) (= (>= x3356 x2140) x1447) (= x115 0) (= x4196 (x4191 255 x3607)) (= x3111 x476) (= (< (+ x2847 x2140) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2718) (= false x2357) (= x1498 (x1502 64 x2805 36)) (= x1880 true) (= x3607 (+ 1 x2805)) (= x1954 x2756) (= x2847 (x3272 x3668)) (= 0 x455))) x1050) (=> x2619 x647))) (=> x3516 x3143)))))))))
(assert (x3185 x4168))
(assert (= x4046 (x3590 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452))))
(assert (x3185 x304))
(assert (= (and (not x3963) x3127) x367))
(assert (x3185 x3392))
(assert (x3185 x668))
(assert (x3185 x3074))
(assert (= (x1723 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x2412))
(assert (x3185 x209))
(assert (= x3419 (and x110 x1956)))
(assert (not (x3387 (x1502 64 x2793 36))))
(assert (= x737 (x4053 (x1057 x2757 x737 x3759 x2513 x1837 x3104))))
(assert (< (x1502 64 x775 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2949 (and (not x3136) x3041)))
(assert (x3185 x1005))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (=> (>= 10000 x3104) (= 0 (x1946 x3104))))
(assert (x3185 x1052))
(assert (=> (<= x1101 10000) (= 0 (x1946 x1101))))
(assert (x3185 x1528))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 x2497 x1711)))
(assert (x3724 x452))
(assert (x3387 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x3185 x3128))
(assert (= (and (not x1851) x2956) x4172))
(assert (x3185 x4195))
(assert (x3185 x2019))
(assert (not (x3387 (x1502 64 x3903 5))))
(assert (=> (<= x638 10000) (= 0 (x1946 x638))))
(assert (x3185 x3763))
(assert (x3185 x4066))
(assert (x3185 x1020))
(assert (x3185 x712))
(assert (= (x4053 (x998 x2757 x1058 x3931 x3188)) x1058))
(assert (not (x3387 (x3876 x3461 x3096))))
(assert (x3185 x1183))
(assert (= x1264 (and x1521 (not x2737))))
(assert (x3185 x2477))
(assert (x3185 x3033))
(assert (= x1088 (and x1049 x3319)))
(assert (x3185 x947))
(assert (x3185 x2186))
(assert (x3185 x3704))
(assert (x3185 x3160))
(assert (x3185 x4153))
(assert (x3185 x1651))
(assert (x3185 x1069))
(assert (x3185 x4351))
(assert (= (x4053 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x48))
(assert (x2187 x3844))
(assert (x3185 x1075))
(assert (x3185 x1152))
(assert (x3185 x3508))
(assert (= (and x1890 x3187) x854))
(assert (x3185 x2413))
(assert (x3185 x2415))
(assert (= (x4053 (x1057 x2497 x4380 x1265 x573 x3485 x448)) x4380))
(assert (x3185 x1613))
(assert (x3185 x2197))
(assert (x3185 x2493))
(assert (= 0 (x1946 107317874183463056701504662589741776198067464202343767264461527615735374807040)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 x2762 x525)))
(assert (x3185 x4011))
(assert (x3185 x1354))
(assert (x3185 x559))
(assert (=> (<= x2799 10000) (= 0 (x1946 x2799))))
(assert (= x3995 (x2248 (x1502 64 1 x3995))))
(assert (x3185 x3204))
(assert (=> (<= x2521 10000) (= (x1946 x2521) 0)))
(assert (= (x3590 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x314))
(assert (= x2656 (and (not x3452) x793)))
(assert (=> (>= 10000 x3703) (= (x1946 x3703) 0)))
(assert (> (x1502 64 x3269 (ite (>= 32 x1602) x3424 (ite (>= 64 x1602) x2870 (ite (>= 96 x1602) x2066 (ite (>= 128 x1602) x2332 (ite (<= x1602 160) x815 (ite (>= 192 x1602) x504 x2658))))))) 10000))
(assert (= x264 (x4053 (x1502 64 x264 36))))
(assert (x3387 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x3185 x3294))
(assert (x3185 x1649))
(assert (x2097 x1273))
(assert (= (x4053 (x1502 64 x2805 36)) x2805))
(assert (= (x1946 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (< (x998 x1602 x1878 x2521 x1476) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1791 10000) (= (x1946 x1791) 0)))
(assert (= 36 (x2248 (x1502 64 x4076 36))))
(assert (=> (>= 10000 x1645) (= (x1946 x1645) 0)))
(assert (= (and x1149 x2287) x2746))
(assert (x2097 x2697))
(assert (=> (>= 10000 x3249) (= 0 (x1946 x3249))))
(assert (x3185 x4041))
(assert (= 0 (x1946 35477284059277649309253622239531857712935939630608236286772267603529442882419)))
(assert (x3185 x3071))
(assert (=> (>= 10000 x3055) (= 0 (x1946 x3055))))
(assert (= x993 (or x1179 x2180)))
(assert (x3185 x465))
(assert (x3185 x4380))
(assert (x3185 x4343))
(assert (x3185 x3958))
(assert (= (x2248 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)) x2414))
(assert (=> (<= x1122 10000) (= (x1946 x1122) 0)))
(assert (= (x998 x2497 x547 x3927 x1291) (x1946 (x998 x2497 x547 x3927 x1291))))
(assert (x3185 x960))
(assert (= (and (not x4042) x538) x3183))
(assert (not (x3387 (x1502 64 x3903 4))))
(assert (< (x1502 x2757 x903 x2989) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3771))
(assert (= (x1723 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307)) x3910))
(assert (= x3341 (=> (and (= x833 false) (= x3561 x3808) (= false x3267) (= x159 x2289) (= x1892 x3270) (= true x2289) (= x1245 true) (= x3902 x2961)) x1911)))
(assert (= x3659 (x3590 (x1057 x3659 x1608 x1761 x1401 x1199 x1664))))
(assert (x3185 x3158))
(assert (x3185 x4280))
(assert (= (x3590 (x1502 x2757 x903 x2989)) x2757))
(assert (=> (>= 10000 x1828) (= 0 (x1946 x1828))))
(assert (x3185 x2102))
(assert (=> (<= x1589 10000) (= (x1946 x1589) 0)))
(assert (x3185 x1761))
(assert (x3185 x1335))
(assert (x3185 x1899))
(assert (x3185 x1080))
(assert (x3185 x3491))
(assert (= (x1502 64 x3903 4) (x1946 (x1502 64 x3903 4))))
(assert (x3387 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (= x1329 (=> (and (= false x325) (= true x2837) (= x3320 0)) x1148)))
(assert (x3185 x3842))
(assert (x3185 x100))
(assert (= x477 (and x3407 x4179)))
(assert (= (x1946 38584857114614344130707641774870441135179346817440091772946614992565446901760) 0))
(assert (= (x2443 (x998 x1602 x1878 x2521 x1476)) x1476))
(assert (= (and x3501 (not x3107)) x1242))
(assert (=> (>= 10000 x1075) (= (x1946 x1075) 0)))
(assert (= (or x1157 x2828) x63))
(assert (= x634 (x4053 (x1502 x1602 x634 x850))))
(assert (x3185 x3191))
(assert (not (x3387 (x1502 x765 x1477 x822))))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (x3185 x371))
(assert (< 10000 (x1502 64 x2793 36)))
(assert (x3185 x4150))
(assert (=> (>= 10000 x2964) (= 0 (x1946 x2964))))
(assert (x3185 x4310))
(assert (= x4253 (x4053 (x3876 x1602 x4253))))
(assert (= x4034 (or x4100 x2692 x1228 x4002)))
(assert (x3185 x757))
(assert (= x3944 (and x3 x2238)))
(assert (< (x1502 64 x3703 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3214))
(assert (= (and x601 x2717) x1748))
(assert (= x158 (x4053 (x2724 x2757 x158 x4169 x2665 x829))))
(assert (x3185 x1556))
(assert (< 10000 (x3876 x4046 x3249)))
(assert (= (x2443 (x1057 x2762 x1522 x1067 x894 x26 x2402)) x894))
(assert (x3185 x3563))
(assert (= (=> (and (= true x3431) (= x3141 x1250) (= x2566 x3903) (= x2304 x3940) (= x4280 x628) (= x1600 x3844) (= x1897 x2793) (= x1649 x2640) (= x1894 x806) (= x2696 x1545) (= x1418 x1132) (= x4153 0) (= x991 2) (= x1667 x3274) (= false x108) (= x1047 x3758) (= x3824 x1212)) x722) x1930))
(assert (x3185 x1474))
(assert (x3185 x1620))
(assert (x3185 x2318))
(assert (= x1135 (and x1337 x4115)))
(assert (x3185 x3356))
(assert (= x3637 (x2834 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (= x1122 (x4053 (x3876 x314 x1122))))
(assert (= (x4053 (x2724 x2947 x867 x2003 x665 x2163)) x867))
(assert (= (and x1754 x2101) x4386))
(assert (= (x3876 x3659 x3925) (x1946 (x3876 x3659 x3925))))
(assert (x3185 x603))
(assert (= (x1946 (x998 x2947 x342 x2039 x1272)) (x998 x2947 x342 x2039 x1272)))
(assert (x3185 x2434))
(assert (x3185 x1047))
(assert (=> (>= 10000 x448) (= (x1946 x448) 0)))
(assert (> (x1502 64 x3903 3) 10000))
(assert (x3185 x3543))
(assert (x3185 x2773))
(assert (x3185 x4010))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x92 36)))
(assert (= (x1946 (x1502 64 x1828 36)) (x1502 64 x1828 36)))
(assert (=> (>= 10000 x3592) (= (x1946 x3592) 0)))
(assert (= (and (not x3614) x1989) x1049))
(assert (= (x4053 (x1502 64 x3567 11)) x3567))
(assert (= (and x2821 x3241) x3709))
(assert (=> (>= 10000 x850) (= 0 (x1946 x850))))
(assert (x3185 x1719))
(assert (x3185 x1826))
(assert (x3185 x197))
(assert (x3185 x3426))
(assert (= (or x2669 x4121) x3006))
(assert (x3185 x210))
(assert (x3185 x3482))
(assert (=> (>= 10000 x3365) (= 0 (x1946 x3365))))
(assert (x1576 x83))
(assert (x3185 x224))
(assert (x3185 x913))
(assert (= (or (and x346 x1145) (and x1962 x530)) x2953))
(assert (not (x3387 (x2724 x3659 x1593 x650 x3229 x2424))))
(assert (not (x3387 (x998 x3461 x4241 x3959 x3374))))
(assert (x3185 x3492))
(assert (< (x1502 x3659 x1891 x3365) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1418))
(assert (= 4 (x2248 (x1502 64 x775 4))))
(assert (=> (<= x313 10000) (= (x1946 x313) 0)))
(assert (x3185 x2524))
(assert (x3185 x255))
(assert (x3185 x2577))
(assert (x3185 x3991))
(assert (x3185 x1319))
(assert (=> (<= x1206 10000) (= 0 (x1946 x1206))))
(assert (x3185 x1617))
(assert (= (or x2028 x1100) x3576))
(assert (= x2836 (and x3887 x3385)))
(assert (= x330 (and x3298 x3609)))
(assert (x3212 x3141))
(assert (= x2133 (and x1337 (not x4115))))
(assert (x3185 x3601))
(assert (x3185 x1442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x3269 (ite (<= x3659 32) x1700 (ite (>= 64 x3659) x1339 (ite (>= 96 x3659) x72 (ite (>= 128 x3659) x176 (ite (>= 160 x3659) x2700 (ite (>= 192 x3659) x4323 x1811)))))))))
(assert (x3185 x1778))
(assert (x3185 x3778))
(assert (= x1365 (and x2734 x4216)))
(assert (x3185 x1305))
(assert (= 100 (x2248 (x1502 64 x563 100))))
(assert (= (x2248 (x1502 64 x810 36)) 36))
(assert (x3185 x4364))
(assert (= x557 (x2443 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (x3185 x1464))
(assert (= 0 (x1946 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (x3185 x1772))
(assert (=> (<= x3264 10000) (= 0 (x1946 x3264))))
(assert (x3185 x2633))
(assert (x3185 x1751))
(assert (> (x998 x2947 x342 x2039 x1272) 10000))
(assert (x3185 x563))
(assert (= (x3590 (x1502 64 x1107 6)) 64))
(assert (= x2641 (and x3550 x2398)))
(assert (x3185 x1715))
(assert (=> (<= x1608 10000) (= 0 (x1946 x1608))))
(assert (< 10000 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)))
(assert (x3185 x153))
(assert (x3185 x123))
(assert (=> (<= x2477 10000) (= (x1946 x2477) 0)))
(assert (x3185 x3712))
(assert (x3185 x440))
(assert (x3185 x2580))
(assert (x3185 x4236))
(assert (x3185 x1101))
(assert (= x2459 (and x2148 (not x1318))))
(assert (not (x3387 (x1502 64 x563 100))))
(assert (= (or x3787 x1788) x3375))
(assert (x3185 x3886))
(assert (= (x4053 (x1502 64 x4076 36)) x4076))
(assert (x3185 x2075))
(assert (=> (>= 10000 x3940) (= (x1946 x3940) 0)))
(assert (=> (<= x650 10000) (= (x1946 x650) 0)))
(assert (x2097 x1795))
(assert (x3185 x1257))
(assert (= x1780 (and x2150 x2572)))
(assert (= x1816 (and x3151 x1755)))
(assert (= (and x583 (not x1042)) x3080))
(assert (x3185 x1408))
(assert (= x2667 x242))
(assert (not (x3387 (x1502 x4046 x3532 x1371))))
(assert (=> (<= x2602 10000) (= 0 (x1946 x2602))))
(assert (> (x2724 x314 x1494 x4355 x3742 x4087) 10000))
(assert (= (x2248 (x1502 64 x636 7)) 7))
(assert (= (x1946 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (> (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570) 10000))
(assert (x3185 x2123))
(assert (= x3129 (x2248 (x2724 x2497 x902 x3129 x3958 x1681))))
(assert (x3185 x3332))
(assert (x3185 x4161))
(assert (= x241 (and (not x159) x3337)))
(assert (x3185 x1000))
(assert (x3185 x2020))
(assert (= (x3590 (x1502 x2947 x332 x2499)) x2947))
(assert (= (x3590 (x1502 64 x1682 12)) 64))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (< (x2724 x1602 x2205 x3704 x124 x303) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2074))
(assert (x3185 x3105))
(assert (=> (>= 10000 x116) (= 0 (x1946 x116))))
(assert (= (x1946 (x998 x3461 x4241 x3959 x3374)) (x998 x3461 x4241 x3959 x3374)))
(assert (x3185 x319))
(assert (< (x998 x2757 x1058 x3931 x3188) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3940))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x3185 x3657))
(assert (= x1268 (x2443 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (= (x2248 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) x387))
(assert (x2097 127))
(assert (x3185 x3663))
(assert (=> (<= x3704 10000) (= 0 (x1946 x3704))))
(assert (x3185 x1012))
(assert (x1576 x1224))
(assert (=> (<= x92 10000) (= 0 (x1946 x92))))
(assert (x3185 x1224))
(assert (=> (>= 10000 x1711) (= 0 (x1946 x1711))))
(assert (x3185 x2814))
(assert (x3185 x3383))
(assert (< (x1502 64 x638 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2248 (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (<= x2762 64) x2199 (ite (<= x2762 96) x381 (ite (>= 128 x2762) x359 (ite (<= x2762 160) x4327 (ite (>= 192 x2762) x3047 x4300)))))))) (ite (>= 32 x2762) x4199 (ite (>= 64 x2762) x2199 (ite (>= 96 x2762) x381 (ite (<= x2762 128) x359 (ite (>= 160 x2762) x4327 (ite (>= 192 x2762) x3047 x4300))))))))
(assert (= (x2443 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307)) x3434))
(assert (x3185 x447))
(assert (x3185 x595))
(assert (x3185 x650))
(assert (= (x472 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x4276))
(assert (= x2947 (x3590 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947))))
(assert (x3185 x276))
(assert (= (x1946 (x1502 64 x3389 7)) (x1502 64 x3389 7)))
(assert (x3185 x3124))
(assert (= x2757 (x3590 (x998 x2757 x1058 x3931 x3188))))
(assert (< (x1502 64 x3713 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2891 (or x4017 x2563 x2350 x1603 x2272)))
(assert (not (x3387 (x3876 x314 x1122))))
(assert (= (and x2041 x4141) x2171))
(assert (=> (>= 10000 x4138) (= (x1946 x4138) 0)))
(assert (= (x2248 (x1502 64 x3269 (ite (<= x3659 32) x1700 (ite (<= x3659 64) x1339 (ite (>= 96 x3659) x72 (ite (>= 128 x3659) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811)))))))) (ite (<= x3659 32) x1700 (ite (<= x3659 64) x1339 (ite (<= x3659 96) x72 (ite (<= x3659 128) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811))))))))
(assert (= x609 (=> (= (= x2525 0) x32) (and (=> (and (and (= x2102 x1482) (= (= (x1141 486) (x3673 196)) x3087) (>= 127 x4281) (= x775 x3918) (= x2493 (x1304 (+ 31 x2997))) (<= 356 x1518) (= x3497 (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2144)) (= 160 x344) x3760 (= (= (x1141 518) (x3673 228)) x3866) (= x2945 (or (> (- x321 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 (- x321 4)) (= (<= (- x321 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x415 256) (>= x321 356) x3866 (= (x3747 (- x4368 294)) x920) (<= 1 x310) (= false x3669) (= x310 (x2739 x4138)) x3087 (= (= (x3673 260) 34) x3760) (= x3957 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= 290 x1742) (= 0 x3991) (= x1126 (x1304 (+ x1063 x3497))) (>= 127 x4281) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2493) x6) (= x2286 (= 64 (x3673 164))) (= 1084734224 x2208) x2286 (= x1063 (x1304 (+ 32 x4368))) (= (x2166 128) x2997) (= (x1304 (+ 486 x6)) x4368) (= x1518 x321) (= 0 x4086) (= x4383 false) (= (x3747 (- x1126 290)) x1518) (= (x1304 (+ 31 x3138)) x2144) (= x3138 (x1965 224))) x32) (and (=> (and (= true x2609) (not x2945)) (and (=> (and (= (and (> x321 195) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x321) true)) x3040) x2609) (and (=> (and (and (= x4045 (> x1725 18446744073709551615)) (= (x3408 164) x1725)) x3040) (and (=> (and (not x4045) (and (= x4158 (x1304 (+ 196 x1725))) (= (< x321 x4158) x450))) (and (=> x450 x2709) (=> (and (not x450) (and (= (x3408 260) x4223) (<= x321 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1932 (< 18446744073709551615 x4223)) (>= x321 356))) (and (=> (and (and (= x1881 (x1304 (+ x4223 292))) (= x1085 (> x1881 x321))) (not x1932)) (and (=> x1085 x2709) (=> (and (and (= false x1404) (= x959 false) (= x2773 x669) (= x276 x1208) (= x3489 x2264) (= (x592 160) x804) (= x3202 x1464) (= (x592 128) x2156) (= x1580 x941) (= x2478 x623) (= x4198 1) (= (x592 128) x2113) (= x3360 (x592 160)) (= x2330 64) (= x656 x775) (= x3677 x252) (= x476 x3976) (= x4205 x2873) (= x190 x2756) (= x4038 x3668) (= x1354 x1818)) (not x1085)) x263))) (=> x1932 x449))))) (=> x4045 x449))) (=> (not x3040) x1289))) (=> (not x2609) x1289))) (=> x2945 x1289))) (=> (and (not x32) (and (= x252 x1620) (= x1818 x316) (= x1971 x476) (= x3202 x1887) (= x2181 x3668) (= x775 x4095) (= x4205 x1778) (= x4203 x2525) (= x4270 x3489) (= x2756 x3634) (= x2087 x2773) (= x941 x545) (= x3247 x276) (= x3773 x2478) (= x921 128))) x4149)))))
(assert (> (x998 x4046 x392 x811 x1260) 10000))
(assert (x3185 x1273))
(assert (= (x2443 (x998 x3659 x3934 x1561 x3484)) x3484))
(assert (x3185 x1711))
(assert (= (and x1989 x3614) x1721))
(assert (=> (>= 10000 x2570) (= (x1946 x2570) 0)))
(assert (x3185 x1061))
(assert (= (x1946 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) (x1057 x2947 x1589 x1322 x3543 x4228 x517)))
(assert (= (and (not x2052) x4235) x1729))
(assert (=> (>= 10000 x3599) (= (x1946 x3599) 0)))
(assert (= (x1946 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (= (x1946 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)) (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)))
(assert (= (x1502 64 x810 36) (x1946 (x1502 64 x810 36))))
(assert (x3185 x2652))
(assert (x3185 x264))
(assert (x3185 x1562))
(assert (x3387 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (x3185 x1223))
(assert (=> (<= x2793 10000) (= 0 (x1946 x2793))))
(assert (= (and x1081 (not x32)) x4121))
(assert (< 10000 (x3876 x314 x1122)))
(assert (= (x1723 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)) x2365))
(assert (> (x1502 64 x1810 36) 10000))
(assert (x3185 x1762))
(assert (= (x4053 (x998 x3659 x3934 x1561 x3484)) x3934))
(assert (x3185 x2412))
(assert (x3185 x190))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 32 x2010)))
(assert (= 64 (x3590 (x1502 64 x775 3))))
(assert (= (and x346 (not x1145)) x410))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x563 100)))
(assert (= x3499 (=> (= (= 0 x3755) x4216) (and (=> (and (not x4216) (and (= 4 x2639) (= x2864 true) (= false x2858))) x486) (=> (and x4216 (and (= (x1502 64 x3567 11) x3524) (= (< 3 x1361) x666) (= x1361 (x3372 x3524)) (>= 255 x1361))) (and (=> (and (and (= true x3315) (= false x2552) (= 36 x2639)) x666) x486) (=> (and (not x666) (= x2287 (= 2 x1361))) (and (=> (and (and (= x606 (x2618 x1241)) (= x2364 (x1502 64 x775 4)) (<= x775 65535) (= x1241 (x1502 64 1 x2364)) (= x3553 (= x3065 0))) x2287) (and (=> (and (= (< x3065 x606) x797) (not x3553)) (and (=> (and (and (= x1812 false) (= x4014 true) (= x2639 4)) x797) x486) (=> (and (not x797) (= x3065 x2857)) x609))) (=> (and x3553 (= x2857 x606)) x609))) (=> (and (and (= x2639 4) (= x858 true) (= false x759)) (not x2287)) x486)))))))))
(assert (x3185 x192))
(assert (= (x1946 65535) 0))
(assert (x3185 x1446))
(assert (x3185 x1676))
(assert (= x2621 (and x3140 (not x3516))))
(assert (= x3096 (x4053 (x3876 x3461 x3096))))
(assert (x3185 x3680))
(assert (= (x1946 (x1502 x2947 x332 x2499)) (x1502 x2947 x332 x2499)))
(assert (= x2175 (=> (and (= x890 160) (= x3786 (= x1482 x4280)) (>= x3940 1) (= x702 (x3579 x1482)) (= x4215 1341992515) (= (= x1059 1) x532) (= x4249 (= x395 x3940)) (= x1046 (= x1059 2)) (= (x2554 x1857) x1059) (= x264 (x4191 255 x2295)) (= (x1502 64 x2793 36) x1857) x184 (= x2001 (< (+ x1981 x2652) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 255 x2793) (= x1074 (= x1059 4)) x1120 (not x4249) (<= 0 x4346) (= x184 (and x2001 x509)) (= x3440 (x4191 255 x2295)) (not x532) (= x1981 (x3579 x3940)) (not x2089) x3786 (= x2800 (x2739 x3940)) (= x766 (= x3379 0)) (= x977 x3940) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2652 x2770)) (= (+ x2652 x2770) x4346) (= (x2663 x3940) x2770) (= true x1120) (>= x2800 1) (= (+ x2793 1) x2295) (>= 127 x593) (<= x4346 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2652 (x3857 128)) (= x604 (= 0 x1059)) (= x146 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x509 (<= x2652 x702)) (not x1046) (>= 1461501637330902918203684832716283019655932542975 x3940) (= x4344 x1482) (= x2089 (= 3 x1059)) (= false x1856) (= (x3579 x1482) x2106) (= 36 x4310) (<= x593 127) (= x1491 x4346) (= (x2739 x977) x1426) (<= 1 x1426) (= x1541 (= 255 x2793)) (= (- x2106 x2652) x505) (not x1541) (not x766) (= x3943 false) (not x604)) (and (=> (and (not x1074) (= x780 (= 5 x1059))) (and (=> (and (not x780) (= (= 6 x1059) x2974)) (and (=> (and (= (= 7 x1059) x3600) (not x2974)) (and (=> (and (not x3600) (= x1755 (= 8 x1059))) (and (=> (and x1755 (= x3846 (= x264 255))) (and (=> (and (not x3846) (and (= x218 (+ 1 x264)) (= (x4191 255 x218) x2125) (= (x2554 x2508) x265) (= (x4191 255 x218) x2704) (= 128 x1005) (= x4179 (= x4073 0)) (= x2508 (x1502 64 x264 36)) (= x4073 (x2739 x4280)))) (and (=> (and (not x4179) (and (= x3388 false) (= 36 x207) (= x2339 (x2739 x1482)) (>= 127 x1336) (= x2759 35425322552009646506518338594398286811668114190755561836384294568426616127488) (= x265 x365) (<= x806 1461501637330902918203684832716283019655932542975) (= 1313998243 x3536) (= x3930 (= x806 x977)) (>= 127 x1336) (<= 1 x2339) (= x2162 false))) (and (=> (and x3930 (= (> 100000 x265) x2100)) (and (=> (and (not x2100) (and (= x1941 x3903) (= x548 x3940) (= x2125 x3798) (= x2300 x3844) (= x1550 x1372) (= x806 x4296) (= x3290 1) (= x1418 x973) (= x4031 x3758) (= x2866 x3274) (= x2258 x3141) (= x1372 (x2554 x2508)) (= x932 0) (= x3003 x4280) (= x923 x2696) (= x3687 x1649))) x3457) (=> (and x2100 (and (= x1621 false) (= 4 x2241) (= x103 true))) x562))) (=> (and (not x3930) (and (= 100 x2241) (= true x1950) (= x619 false))) x562))) (=> (and (and (= x1212 x3824) (= x3274 x1667) (= x806 x1894) (= x3758 x1047) (= 2 x680) (= x628 x4280) (= x1600 x3844) (= x2793 x1897) (= x2877 true) (= x1418 x1132) (= 0 x4153) (= false x1084) (= x3940 x2304) (= x1250 x3141) (= x1545 x2696) (= x1649 x2640) (= x2566 x3903)) x4179) x722))) (=> x3846 x2781))) (=> (and (not x1755) (and (= x767 x1649) (= x976 x1418) (= x2838 x3940) (= x3771 x2696) (= x3587 x3758) (= x704 x3844) (= x3175 x3141) (= x3799 x806) (= x3492 x3903) (= x1955 x3824) (= x2751 x264) (= x3204 x4280) (= x1784 x3274))) x4381))) (=> (and x3600 (= (= 255 x264) x217)) (and (=> (and (not x217) (and (= x214 (x2739 x4280)) (= x518 (+ x264 1)) (= (x1502 64 x264 2) x2161) (= x4366 (x4191 255 x518)) (= (= 0 x214) x3308) (= x373 (x4191 255 x518)) (>= 1461501637330902918203684832716283019655932542975 x616) (= 128 x3435) (= (x942 x2161) x616))) (and (=> (and (and (= x721 false) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x2643) (<= x806 1461501637330902918203684832716283019655932542975) (= (= x806 x977) x3609) (<= x2876 127) (= x3645 2770781680) (= 36 x1623) (= x2562 false) (>= x3231 1) (= x3652 x616) (>= 127 x2876) (= (x2739 x1482) x3231)) (not x3308)) (and (=> (and (and (= true x3545) (= 100 x1746) (= false x3736)) (not x3609)) x3292) (=> (and x3609 (and (= x2794 (< 0 x1301)) (= x1301 (x3282 x1482)))) (and (=> (and (and (= x1247 (x3282 x616)) (= x3483 (and x2394 x4242)) (= (<= x1301 x491) x2394) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1301 x1247)) x4242) (= 128 x3740) (= (x3282 x1482) x491)) x2794) (and (=> (and (and (= x3844 x4305) (= x192 0) (= x53 x4366) (= x1762 0) (= x3806 x4280) (= x3141 x431) (= x4257 x3758) (= x1649 x361)) (not x3483)) x2644) (=> (and (and (or (and (not x1628) (and (= x1308 x4280) (= x4366 x1858) (= x522 x1649) (= x1125 x3141) (= x3844 x657) (= x391 x3758))) (and x1628 (and (= x1879 x522) (= x3557 x657) (= x1959 (<= x3117 (x2309 x1482))) (= (x1882 x616) x1594) (= (x1882 x1482) x3117) (= (= (x2309 x616) x1594) x2054) x2054 (= x391 x1487) (= x2890 x1125) (= x736 x1308) (= x1858 x1156) (>= 4294967295 x2218) x1959))) (and (= x785 (x3282 x1482)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4192) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1478 x1301)) (= x4192 x1420) (= (- x785 x1301) x1653) (>= x4192 0) (= (> x45 0) x1628) (= (+ x1478 x1301) x4192) (= x1478 (x2571 x616)))) x3483) x2135))) (=> (and (not x2794) (and (= x3844 x963) (= x2978 x4280) (= x4366 x3893) (= x3758 x1532) (= x3432 x3141) (= x1649 x1226))) x1465))))) (=> (and x3308 (and (= x3824 x1212) (= x2640 x1649) (= false x3854) (= x1250 x3141) (= x628 x4280) (= x1897 x2793) (= x806 x1894) (= x2696 x1545) (= x3903 x2566) (= x3844 x1600) (= x3940 x2304) (= x4153 0) (= x1418 x1132) (= x3961 2) (= x671 true) (= x3274 x1667) (= x1047 x3758))) x722))) (=> x217 x2781))))) (=> (and (= x2595 (= x264 255)) x2974) (and (=> (and (and (= x441 (x2554 x1428)) (= x1428 (x1502 64 x264 36)) (= x4112 (+ x264 1)) (= (= x1828 255) x4092) (= (x4191 255 x4112) x1828) (= x3015 (x4191 255 x4112))) (not x2595)) (and (=> x4092 x3922) (=> (and (and (= x92 (x4191 255 x4197)) (= (+ 1 x1828) x4197) (= (= x92 255) x1895) (= (x2554 x3428) x1847) (= x3428 (x1502 64 x1828 36)) (= x3214 (x4191 255 x4197))) (not x4092)) (and (=> x1895 x1490) (=> (and (and (= (+ x92 1) x3046) (= (x4191 255 x3046) x3852) (= (x4191 255 x3046) x4076) (= x2178 (= x4076 255)) (= x1815 (x1502 64 x92 36)) (= (x2554 x1815) x1719)) (not x1895)) (and (=> (and (and (= x2936 (x4191 255 x3286)) (= x4032 128) (= (x4191 255 x3286) x4160) (= x4085 (x2554 x2017)) (= x3963 (= 0 x2157)) (= (+ 1 x4076) x3286) (= x2157 (x2739 x4280)) (= x2017 (x1502 64 x4076 36))) (not x2178)) (and (=> (and x3963 (and (= x4280 x628) (= x2793 x1897) (= x4153 0) (= x3274 x1667) (= false x1577) (= x3844 x1600) (= x1047 x3758) (= true x1315) (= x3141 x1250) (= x2640 x1649) (= x1132 x1418) (= x3110 2) (= x3824 x1212) (= x3940 x2304) (= x2696 x1545) (= x1894 x806) (= x2566 x3903))) x722) (=> (and (not x3963) (and (= x3189 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x441 x464))) (= (x3282 x4280) x464) (= (>= x3572 x441) x288) (= x3572 (x3282 x977)) (= x3458 (and x288 x3189)))) (and (=> (and (not x3458) (and (= x1262 x3274) (= x3253 x4280) (= x1418 x3932) (= x1510 x2936) (= x3141 x209) (= x2696 x741) (= x806 x3880) (= x3824 x3686) (= x1933 x3844) (= x1555 x3903) (= x3940 x3466) (= 0 x1793) (= x1679 x3758) (= 0 x1196) (= x1649 x2019))) x2236) (=> (and x3458 (and (and (= x3109 (- x3860 x441)) (= x3860 (x3282 x977)) (= x4147 (not (= x977 x1482))) (>= 127 x3207) (<= 1 x2874) (>= x841 0) (= x841 (+ x1473 x441)) (= x841 x2596) (= x2874 (x2739 x1482)) (= 100 x133) (= x2780 x1326) (= x2780 x4085) (= x997 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= false x3811) (<= x841 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x1473 x441) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x3207 127) (= x1473 (x2288 x4280)) (= x3371 x1719) (= false x1821) (= x2390 x440) (= x2390 x1847) (= x204 486791245) (= x2862 x3371)) (or (and (= x3627 (ite x4147 1 0)) (not x4147)) (and x4147 (and (>= 1461501637330902918203684832716283019655932542975 x806) (= (ite (not (= x977 x806)) 1 0) x3627)))))) x2854))))) (=> x2178 x211))))))) (=> x2595 x2781))))) (=> (and x780 (= (= x264 255) x2948)) (and (=> (and (not x2948) (and (= x2845 (= x1107 255)) (= x2262 (x1502 64 x264 36)) (= (x4191 255 x3626) x3778) (= x3626 (+ x264 1)) (= (x2554 x2262) x2503) (= (x4191 255 x3626) x1107))) (and (=> x2845 x3922) (=> (and (not x2845) (and (= (+ 1 x1107) x3077) (= (x4191 255 x3077) x1682) (= (x2246 x1087) x636) (= (= x1682 255) x523) (= x1087 (x1502 64 x1107 6)) (= x3121 (x4191 255 x3077)) (<= x636 65535))) (and (=> x523 x211) (=> (and (not x523) (and (= (div x3844 2) x2707) (= x2633 (x4191 255 x376)) (= (x4209 x2959) x358) (= (x1502 64 x1682 12) x2959) (= (ite (> x960 0) x2707 (x4191 127 x2707)) x3019) (= x960 (x4191 1 x3844)) (= (+ 1 x1682) x376) (= (> x1323 0) x2550) (>= 18446744073709551615 x358) (= x1323 (x3747 (- x960 (mod (ite (< x3019 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x255 (x4191 255 x376)))) (and (=> (not x2550) x1643) (=> (and (and (= (x4191 1 x3844) x1235) (= x1640 (= x1235 0))) x2550) (and (=> (and (and (or (and (and (= x1012 (x828 x801)) (= x798 32) (>= 32 x3019)) x2657) (and (= x798 0) (not x2657))) (and (= x2657 (< 0 x3019)) (= (x3876 32 103) x801))) (not x1640)) x1515) (=> (and (and (= (+ x1138 292) x3664) (= (* (ite (not (= 0 x3019)) 1 0) 32) x1138) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3844) x1306) (or (= 32 x1138) (= x1138 0))) x1640) x1089))))))))) (=> x2948 x2781))))) (=> (and (= x21 (= x264 255)) x1074) (and (=> (and (not x21) (and (= x3153 (+ x264 1)) (= (x4191 255 x3153) x3783) (= (x2554 x99) x324) (= (x4191 255 x3153) x563) (= (x1502 64 x264 36) x99) (= (= x563 255) x2701))) (and (=> x2701 x3922) (=> (and (not x2701) (and (= x1261 (x4191 255 x1360)) (= x967 (x4191 255 x1360)) (= x2660 (x1502 64 x563 100)) (= (x1019 x2660) x2879) (= x1360 (+ x563 1)) (= (= 255 x1261) x4377))) (and (=> x4377 x1490) (=> (and (and (= x2640 x1649) (= x2790 (x3282 x977)) (= (< (+ x3296 x324) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3317) (= x1212 x3824) (= (x1502 64 x1261 36) x2284) (= (>= x2790 x324) x2998) (not (and x3317 x2998)) (= x1250 x3141) (= 0 x4153) (= x806 x1894) (= x3296 (x3282 x4280)) (= 2 x3353) (= x1897 x2793) (= x2566 x3903) (= x1667 x3274) (= false x4373) (= x1047 x3758) (= (x2554 x2284) x2302) (= x1600 x3844) (= x4280 x628) (= true x2760) (= x2304 x3940) (= x4106 (x4191 255 x1273)) (= x1545 x2696) (= x1418 x1132) (= (+ x1261 1) x1273) (= x2996 (x4191 255 x1273))) (not x4377)) x722))))) (=> x21 x2781)))))))
(assert (=> (<= x303 10000) (= (x1946 x303) 0)))
(assert (> (x3876 x1602 x4253) 10000))
(assert (x3185 x4181))
(assert (x3185 x2611))
(assert (=> (>= 10000 x4051) (= (x1946 x4051) 0)))
(assert (> (x1502 64 x1107 6) 10000))
(assert (x3185 x1666))
(assert (= 0 (x1946 1341992515)))
(assert (= x793 (and (not x2223) x1863)))
(assert (x3185 x2247))
(assert (= (or (and x17 (not x2329)) x3702) x1303))
(assert (x3185 x1492))
(assert (= (x3876 x4046 x3249) (x1946 (x3876 x4046 x3249))))
(assert (= (and (not x1531) x3080) x1108))
(assert (x3185 x383))
(assert (x2097 x3844))
(assert (x3185 x2517))
(assert (= x3128 (x1723 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (x3185 x1997))
(assert (= x164 (=> (and (< (+ x1018 x2503) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2533 x3882) (= x1018 (x3785 x977)) (= (+ x1018 x2503) x3882) (= x648 (x4191 255 x376)) (>= x3882 0) (= 2 x2186) (= (x1282 x4280) x2217) (= (- x2217 x2503) x4335) (= x1211 x3982) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3882)) x1930)))
(assert (x3185 x2255))
(assert (= (or x1246 x1739) x2821))
(assert (x3185 x2308))
(assert (=> (<= x2003 10000) (= 0 (x1946 x2003))))
(assert (= (x1946 (x3876 32 x2010)) (x3876 32 x2010)))
(assert (not (x3387 (x1502 64 x4076 36))))
(assert (x3185 x2232))
(assert (x3185 x2919))
(assert (x3185 x2769))
(assert (x3185 x4213))
(assert (=> (>= 10000 x490) (= 0 (x1946 x490))))
(assert (x1576 x1695))
(assert (= (x2248 (x1502 64 x3903 4)) 4))
(assert (x3185 x4353))
(assert (x3185 x1981))
(assert (x3185 x2755))
(assert (< (x2387 x765 x317 x2570 x4331 x4259 x490 x3648) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1946 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)))
(assert (x3185 x3043))
(assert (x3185 x566))
(assert (x3185 x1227))
(assert (= (x1502 64 x729 11) (x1946 (x1502 64 x729 11))))
(assert (x2097 x2042))
(assert (x3185 x1516))
(assert (x3724 x218))
(assert (= (x1502 x314 x1770 x116) (x1946 (x1502 x314 x1770 x116))))
(assert (not (x3387 (x1502 x314 x1770 x116))))
(assert (= (x3590 (x1502 64 x264 2)) 64))
(assert (=> (>= 10000 x2212) (= (x1946 x2212) 0)))
(assert (x3185 x3269))
(assert (x3185 x3440))
(assert (= (and x3337 x159) x1832))
(assert (x3185 x4112))
(assert (x3185 x2281))
(assert (x3185 x1277))
(assert (< (x3876 x2947 x379) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2436))
(assert (x3185 x656))
(assert (x3185 x649))
(assert (x3185 x1599))
(assert (x3185 x3832))
(assert (x3185 x1293))
(assert (x3185 x3746))
(assert (=> (<= x4039 10000) (= (x1946 x4039) 0)))
(assert (x3185 x4198))
(assert (x3185 x2952))
(assert (= x3537 (x1723 (x1057 x314 x2105 x1066 x589 x3537 x3055))))
(assert (x3185 x1678))
(assert (not (x3387 (x2724 x2497 x902 x3129 x3958 x1681))))
(assert (x3185 x4072))
(assert (= x305 x987))
(assert (x3185 x1400))
(assert (< 10000 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)))
(assert (x3185 x4158))
(assert (x3185 x2375))
(assert (=> (>= 10000 x1219) (= (x1946 x1219) 0)))
(assert (x3185 x4385))
(assert (= x358 (x4053 (x1502 64 x358 (ite (>= 32 x2762) x4199 (ite (>= 64 x2762) x2199 (ite (>= 96 x2762) x381 (ite (<= x2762 128) x359 (ite (<= x2762 160) x4327 (ite (<= x2762 192) x3047 x4300))))))))))
(assert (x3185 x2704))
(assert (= x2238 (or x3420 (and (not x90) x1722))))
(assert (x3185 x3344))
(assert (=> (<= x1107 10000) (= (x1946 x1107) 0)))
(assert (< 10000 (x1502 64 x4076 36)))
(assert (=> (>= 10000 x3903) (= (x1946 x3903) 0)))
(assert (x3185 x4064))
(assert (=> (<= x1829 10000) (= 0 (x1946 x1829))))
(assert (= (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602) (x1946 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (=> (>= 10000 x2777) (= (x1946 x2777) 0)))
(assert (x2097 x518))
(assert (x3724 x3286))
(assert (=> (<= x3548 10000) (= 0 (x1946 x3548))))
(assert (x3185 x1261))
(assert (= (x1946 (x1502 64 x1107 6)) (x1502 64 x1107 6)))
(assert (= x554 (=> (and (or (not x90) x90) (= x90 (= x3487 0))) x2646)))
(assert (x3185 x2200))
(assert (x3185 x1822))
(assert (= (and x935 (not x65)) x1989))
(assert (x3185 x4253))
(assert (= x303 (x1723 (x2724 x1602 x2205 x3704 x124 x303))))
(assert (= (and x44 x3483) x1848))
(assert (x3185 x4065))
(assert (x3185 x4055))
(assert (x3185 x39))
(assert (x3185 x3633))
(assert (=> (<= x8 10000) (= 0 (x1946 x8))))
(assert (not (x3387 (x1502 64 x358 (ite (<= x2497 32) x857 (ite (<= x2497 64) x2024 (ite (>= 96 x2497) x4359 (ite (<= x2497 128) x1097 (ite (<= x2497 160) x1313 (ite (>= 192 x2497) x1435 x1931))))))))))
(assert (x3185 x967))
(assert (x3185 x1393))
(assert (x3185 x547))
(assert (= (x2724 x765 x3941 x2716 x3682 x199) (x1946 (x2724 x765 x3941 x2716 x3682 x199))))
(assert (x3185 x4259))
(assert (= x2762 (x3590 (x998 x2762 x165 x458 x1789))))
(assert (= (x1946 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)))
(assert (= (x3876 32 103) (x1946 (x3876 32 103))))
(assert (= (or x3412 x590 x805) x4016))
(assert (< (x1502 64 x3567 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3161))
(assert (x3185 x307))
(assert (x3185 x3705))
(assert (x3185 x4106))
(assert (x3185 x199))
(assert (= x3951 (=> (= x870 (= x3160 0)) (and (=> (and (and (= x1984 x3071) (= x4168 x913) (= x4054 x2305) (= x838 x3875)) (not x870)) x2142) (=> (and (and (= true x3828) (= x1954 x2756) (= 2 x100) (= false x4332) (= x3111 x476) (= x2773 x2069) (= x115 0) (= x455 x111)) x870) x1050)))))
(assert (x2097 x4145))
(assert (= x2028 (and x550 x4264)))
(assert (= (and (not x2154) x1264) x3098))
(assert (x3185 x2218))
(assert (x3185 x317))
(assert (x3185 x3931))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (x3185 x1475))
(assert (= (x1502 x765 x1477 x822) (x1946 (x1502 x765 x1477 x822))))
(assert (= (x4053 (x998 x314 x2347 x3906 x3871)) x2347))
(assert (x3185 x316))
(assert (= (x4053 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408)) x995))
(assert (x3185 x3051))
(assert (x3185 x689))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639773)))
(assert (x3185 x527))
(assert (x3185 x3079))
(assert (< 10000 (x1502 64 x4189 6)))
(assert (x3185 x355))
(assert (= x4051 (x2248 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (x3185 x358))
(assert (= (x3590 (x3876 x3461 x3096)) x3461))
(assert (= x2497 (x3590 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656))))
(assert (= x372 (and (not x2922) x3655)))
(assert (x3185 x1602))
(assert (= (and x1665 (not x2609)) x2350))
(assert (x3185 x1479))
(assert (not (x3387 (x1502 64 x4075 36))))
(assert (= x1386 (x4053 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (< 10000 (x1502 64 x1847 11)))
(assert (x3185 x186))
(assert (= (x1946 44057028636630039105102054091366763171729008530599747929804322044178077843456) 0))
(assert (x3185 x681))
(assert (= x1943 (=> (= (= 0 x2119) x3629) (and (=> (and (not x3629) (= x3056 (> 64 x1581))) (and (=> (and (not x3056) (and (= x2385 x2538) (= x2341 x1352) (= (x1861 290) x1352) (= x1571 x693) (= x4178 x4202) (= x2687 x3090) (= (x1861 322) x1414) (= x3756 x3171) (= x1319 x3912) (= x2855 x2247) (= x279 x1574) (= x2185 x3033) (= x1966 x1277) (= x507 354) (= x2860 x2524) (= x2136 x2607) (= x371 x1706))) x328) (=> (and (and (= x3164 0) (= x1656 false) (= true x168)) x3056) x1036))) (=> (and x3629 (and (= true x1316) (= x3164 x1581) (= false x3442))) x1036)))))
(assert (= x2376 (x2443 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (=> (<= x332 10000) (= 0 (x1946 x332))))
(assert (> (x1057 x1602 x1386 x1073 x4039 x398 x3637) 10000))
(assert (= x1411 (x1259 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (x3185 x4140))
(assert (= x91 (=> (= (= 0 x3228) x2098) (and (=> (and (and (= x41 x1804) (= x1903 x1938) (= x2782 x1751) (= x675 x3766) (= x3137 x4375) (= x56 x2705) (= x447 x4151) (= x1752 x4055) (= x1446 x1362) (= x2817 x1437) (= x3139 x2061) (= x1221 x1483) (= x2763 x768)) (not x2098)) x2487) (=> (and x2098 (and (= x1894 x806) (= x1212 x3824) (= x1250 x3141) (= x628 x4280) (= x3844 x1600) (= x4153 0) (= x1132 x1418) (= x3758 x1047) (= false x457) (= x245 2) (= x1897 x2793) (= x2640 x1649) (= x3903 x2566) (= x2696 x1545) (= x3940 x2304) (= true x3316) (= x3274 x1667))) x722)))))
(assert (x3185 x1155))
(assert (x3185 x3918))
(assert (=> (<= x3637 10000) (= (x1946 x3637) 0)))
(assert (= (x2248 (x998 x2497 x547 x3927 x1291)) x3927))
(assert (< 10000 (x2724 x3461 x753 x465 x473 x4385)))
(assert (< (x1502 64 x3269 (ite (<= x1602 32) x3424 (ite (<= x1602 64) x2870 (ite (<= x1602 96) x2066 (ite (>= 128 x1602) x2332 (ite (<= x1602 160) x815 (ite (<= x1602 192) x504 x2658))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2062 (and (not x2398) x3550)))
(assert (x3185 x3568))
(assert (x3185 x3090))
(assert (x3185 x823))
(assert (= x2622 (and (not x1068) x1503)))
(assert (x3185 x1561))
(assert (not (x3387 (x2724 x1602 x2205 x3704 x124 x303))))
(assert (= x430 (or x1364 x924)))
(assert (= (and x3390 x1002) x1615))
(assert (= x3906 (x2248 (x998 x314 x2347 x3906 x3871))))
(assert (x3185 x1452))
(assert (x3185 x3509))
(assert (= x4149 (=> (and (= (x1502 64 x3567 11) x2430) (< x2074 x2865) (= (x1304 (+ x921 32)) x2653) (= (x3747 (- x3571 (mod (ite (> 32 x2293) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x123) (= (x1304 (+ 32 x1831)) x2074) (= x3814 (x723 x1785)) (= x4260 (x915 x843)) (= (x1304 (+ x2653 32)) x1831) (= (x1502 64 x3567 11) x2449) (= (x1304 (+ 2 x1769)) x2968) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x442 (x3747 (- x233 32))) (= (x3747 (- x2865 x2074)) x3606) (or (and (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x921 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639773) (>= x921 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= (x1197 x3469) x2541) (= (x1304 (+ x2968 32)) x2865) (= x3571 (x4191 1 x2541)) (= (x3747 (- x3606 32)) x1330) (= (ite (< 0 x3571) x2889 (x4191 127 x2889)) x2293) (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (div x2541 2) x2889) (< x921 x2074) (= (x1502 64 x775 3) x3469) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x921) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x921) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x921) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x921))) (= (+ 2 x2449) x843) (or (>= x921 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x921) (and (<= x921 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x921 115792089237316195423570985008687907853269984665640564039457584007913129639776))) (= (+ x2909 1) x1785) (= (x1502 64 x3567 11) x2909) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x921) (= x1528 0) (= x233 (x3747 (- x2074 x921))) (= x1769 (x1304 (+ x2074 32))) (= (< 0 x123) x3721)) (and (=> (and (and (= false x3619) (= true x4204) (= 36 x2639)) (not x3721)) x486) (=> (and (and (<= x2865 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= x2293 0) x601) (<= x2865 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3768 (x1304 (+ (mod (+ 32 x760) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2865))) (= x760 (* x1834 32)) (>= x3768 1) (= (x1304 (+ x2865 32)) x3475) (= x1834 (div (+ x2293 31) 32)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2865) (< x2865 x3768)) x3721) (and (=> x601 x33) (=> (and (= x1285 (> x2293 31)) (not x601)) (and (=> (and x1285 (and (and (= (+ 1 x900) x3244) (= (x1304 (+ x3475 x2293)) x837) (= x3339 (x2496 x900)) (= x2020 (x1304 (+ 32 x3475))) (= x900 (x3876 32 x3469)) (= x1343 (> x837 x2020))) (or (and (and (= (x1304 (+ x2020 32)) x3309) (= (x2496 x3244) x212) (not (> x837 x3309))) x1343) (not x1343)))) x3245) (=> (and (not x1285) (and (= (* 256 x1898) x3478) (= x3158 (x1197 x3469)) (= (div x3158 256) x1898))) x33)))))))))
(assert (x3185 x1216))
(assert (= (x4053 (x1502 64 x3703 10)) x3703))
(assert (x3185 x1593))
(assert (= (x4053 (x2724 x3659 x1593 x650 x3229 x2424)) x1593))
(assert (x3185 x1107))
(assert (= (x1946 (x1502 64 x775 5)) (x1502 64 x775 5)))
(assert (= (and (not x2878) x2840) x3412))
(assert (= x1658 (and x1696 (not x1663))))
(assert (x3185 x3756))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x810 36)))
(assert (=> (>= 10000 x1386) (= (x1946 x1386) 0)))
(assert (x3185 x4197))
(assert (x3185 x3488))
(assert (x3185 x2889))
(assert (x3185 x1511))
(assert (= (x3590 (x998 x3461 x4241 x3959 x3374)) x3461))
(assert (x3185 x642))
(assert (x3185 x3679))
(assert (=> (<= x2408 10000) (= (x1946 x2408) 0)))
(assert (= (=> (and (= (x3747 (- x1269 32)) x2495) (= (ite (> x3657 0) x2928 (x4191 127 x2928)) x1579) (= (x723 x2155) x4107) (= x2206 0) (= (x4191 1 x1369) x3657) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x507) (> x4293 x2058) (= x2155 (+ x1342 1)) (= (x1502 64 x1847 11) x1342) (= (div x1369 2) x2928) (= (x1304 (+ 2 x2009)) x816) (= (x1304 (+ x3797 32)) x3628) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x171 (x1502 64 x1847 11)) (= (x3747 (- x3657 (mod (ite (< x1579 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x420) (= x2058 (x1304 (+ x3628 32))) (= (x1502 64 x1847 11) x2448) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x4088 x1333) x824) (= (x3747 (- x2058 x507)) x685) (= (x1304 (+ x2058 32)) x2009) (or (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639773) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x507) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x507) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639838))) (= x2010 (x1502 64 x3903 3)) (= x1787 (> x420 0)) (= (+ 2 x171) x1333) (= (x1197 x2010) x1369) (or (and (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639838) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x507)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x507) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x507)) (= x1269 (x3747 (- x4293 x2058))) (= x4293 (x1304 (+ 32 x816))) (or (and (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639838) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x507)) (<= x507 115792089237316195423570985008687907853269984665640564039457584007913129639773) (>= x507 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x3797 (x1304 (+ x507 32))) (< x507 x2058) (= (x3747 (- x685 32)) x886)) (and (=> (and x1787 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4293) (= x289 (x1304 (+ (mod (+ 32 x1450) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4293))) (= (div (+ x1579 31) 32) x719) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4293) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4293) (= x1639 (= x1579 0)) (= (x1304 (+ x4293 32)) x567) (= (* x719 32) x1450) (> x289 x4293) (<= 1 x289))) (and (=> (and (not x1639) (= (> x1579 31) x3967)) (and (=> (and (and (or (and x3235 (and (= (x2496 x572) x2585) (= (x1304 (+ x3294 32)) x363) (not (< x363 x1651)))) (not x3235)) (and (= (x1304 (+ 32 x567)) x3294) (= x933 (x2496 x1734)) (= (x1304 (+ x1579 x567)) x1651) (= (+ x1734 1) x572) (= x1734 (x3876 32 x2010)) (= x3235 (> x1651 x3294)))) x3967) x2667) (=> (and (and (= (x1197 x2010) x3049) (= x2732 (div x3049 256)) (= (* 256 x2732) x4163)) (not x3967)) x242))) (=> x1639 x242))) (=> (and (not x1787) (and (= x2924 false) (= x3781 true) (= x3164 36))) x1036))) x328))
(assert (x3185 x4087))
(assert (x3185 x1966))
(assert (= (x4053 (x3876 x765 x2929)) x2929))
(assert (x3185 x2964))
(assert (x3185 x2681))
(assert (not (x3387 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (x3185 x3900))
(assert (x3185 x1067))
(assert (= x765 (x3590 (x998 x765 x580 x2197 x687))))
(assert (=> (>= 10000 x48) (= 0 (x1946 x48))))
(assert (= x314 (x3590 (x1057 x314 x2105 x1066 x589 x3537 x3055))))
(assert (x3185 x2989))
(assert (< (x1057 x4046 x1645 x387 x1800 x1267 x1617) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2874))
(assert (= 104 (x4053 (x3876 32 104))))
(assert (x3185 x1414))
(assert (x3185 x3310))
(assert (< (x1502 64 x4189 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x3387 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570))))
(assert (= x2600 (and (not x3693) x4016)))
(assert (x3185 x3823))
(assert (= x4169 (x2248 (x2724 x2757 x158 x4169 x2665 x829))))
(assert (x3387 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (= (and x3235 x2378) x3676))
(assert (= (x2248 (x1502 x4046 x3532 x1371)) x1371))
(assert (x3185 x1287))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x3592 12)))
(assert (x3185 x1536))
(assert (=> (>= 10000 x810) (= 0 (x1946 x810))))
(assert (=> (<= x580 10000) (= (x1946 x580) 0)))
(assert (x3185 x2726))
(assert (x3185 x3714))
(assert (x3185 x3983))
(assert (x3185 x1771))
(assert (x3185 x2629))
(assert (< (x998 x3659 x3934 x1561 x3484) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1505))
(assert (= x772 (and (not x523) x3692)))
(assert (=> (>= 10000 x4241) (= (x1946 x4241) 0)))
(assert (x3185 x1846))
(assert (= (and x1639 x16) x1886))
(assert (=> (<= x395 10000) (= (x1946 x395) 0)))
(assert (x3185 x2584))
(assert (x3185 x2935))
(assert (x3185 x2586))
(assert (x3185 x2447))
(assert (x3185 x864))
(assert (= x3237 (x2248 (x1057 x765 x3705 x3237 x2777 x3559 x2898))))
(assert (x3185 x4138))
(assert (= (and x3629 x3741) x2810))
(assert (x3185 x1879))
(assert (x3185 x995))
(assert (x3185 x4074))
(assert (< 10000 (x998 x314 x2347 x3906 x3871)))
(assert (x3185 x3487))
(assert (= x547 (x4053 (x998 x2497 x547 x3927 x1291))))
(assert (x3185 x3072))
(assert (> (x2724 x2762 x2799 x2912 x2224 x2366) 10000))
(assert (= x2420 (and (not x2454) x3463)))
(assert (= 0 (x1946 3521034783)))
(assert (= x3463 (and (not x1523) x750)))
(assert (= x3741 (or x2433 x4058)))
(assert (x3185 x1540))
(assert (x3185 x660))
(assert (< (x998 x4046 x392 x811 x1260) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x3841 x1111 x2641 x149 x2656 x1421) x2680))
(assert (< (x1057 x314 x2105 x1066 x589 x3537 x3055) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3844))
(assert (= (x1946 (x998 x2762 x165 x458 x1789)) (x998 x2762 x165 x458 x1789)))
(assert (=> (>= 10000 x1947) (= 0 (x1946 x1947))))
(assert (< (x1502 x1602 x634 x850) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x1))
(assert (x3185 x3484))
(assert (= (and (not x1939) x552) x3911))
(assert (x3185 x1817))
(assert (= x2513 (x2443 (x1057 x2757 x737 x3759 x2513 x1837 x3104))))
(assert (< 10000 (x1502 64 x92 36)))
(assert (= (x3590 (x1502 64 x3592 12)) 64))
(assert (= (and (not x407) x1783) x3775))
(assert (= x2964 (x2834 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (x3185 x4160))
(assert (x3185 x3855))
(assert (x3185 x1891))
(assert (= (and x1253 (not x2740)) x695))
(assert (= (x2248 (x1502 64 x2169 36)) 36))
(assert (=> (>= 10000 x738) (= 0 (x1946 x738))))
(assert (= (x2834 (x1057 x2762 x1522 x1067 x894 x26 x2402)) x2402))
(assert (=> (>= 10000 x2043) (= 0 (x1946 x2043))))
(assert (x3185 x3652))
(assert (x3185 x3875))
(assert (not (x3387 (x2900 0))))
(assert (= x2693 (=> (and (= x3792 x111) (= x2756 x913) (= x3024 (x4191 255 x1795)) (= x838 x476) (= x2937 2) (= x3160 0) (= x3024 x3071) (= x2773 x4054)) x2315)))
(assert (= (x1946 (x998 x3659 x3934 x1561 x3484)) (x998 x3659 x3934 x1561 x3484)))
(assert (x3185 x1268))
(assert (x3185 x2997))
(assert (x3185 x3883))
(assert (= x379 (x4053 (x3876 x2947 x379))))
(assert (x3185 x1843))
(assert (< (x2724 x2947 x867 x2003 x665 x2163) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= false x1204) (= x3141 x1250) (= x1894 x806) (= x1047 x3758) (= x1212 x3824) (= x1545 x2696) (= 0 x4153) (= x628 x4280) (= x2793 x1897) (= x3844 x1600) (= x1667 x3274) (= x2861 true) (= 2 x2393) (= x1418 x1132) (= x2640 x1649) (= x3940 x2304) (= x2566 x3903)) x722) x211))
(assert (= x2757 (x3590 (x3876 x2757 x2831))))
(assert (x3185 x408))
(assert (= (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408) (x1946 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (=> (<= x517 10000) (= 0 (x1946 x517))))
(assert (=> (<= x1561 10000) (= 0 (x1946 x1561))))
(assert (= x2690 (or x2631 x3731 x4080 x323 x1885 x2164 x2324 x1232 x3892 x705 x51)))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (not (x3387 (x1502 64 x1847 11))))
(assert (x3185 x2588))
(assert (= (x3590 (x1502 64 x264 36)) 64))
(assert (x3185 x252))
(assert (< (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2777))
(assert (= (or x2292 x3147) x635))
(assert (=> (<= x2210 10000) (= 0 (x1946 x2210))))
(assert (x3185 x2639))
(assert (=> (>= 10000 x4113) (= (x1946 x4113) 0)))
(assert (= (x1502 64 x2169 2) (x1946 (x1502 64 x2169 2))))
(assert (x3387 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x3185 x2802))
(assert (= x1783 (and x716 (not x2710))))
(assert (=> (<= x1476 10000) (= (x1946 x1476) 0)))
(assert (x3185 x1947))
(assert (=> (>= 10000 x402) (= 0 (x1946 x402))))
(assert (= (and x2717 (not x601)) x1604))
(assert (x3185 x4185))
(assert (=> (>= 10000 x910) (= 0 (x1946 x910))))
(assert (x3185 x1897))
(assert (= (x1946 (x3876 x765 x2929)) (x3876 x765 x2929)))
(assert (x3185 x3758))
(assert (= x1272 (x2443 (x998 x2947 x342 x2039 x1272))))
(assert (x3387 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (= x1401 (x2443 (x1057 x3659 x1608 x1761 x1401 x1199 x1664))))
(assert (=> (<= x3966 10000) (= (x1946 x3966) 0)))
(assert (x3185 x1117))
(assert (x3185 x2596))
(assert (x3185 x2936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x2169 36)))
(assert (x3185 x2012))
(assert (< 10000 (x1502 x3659 x1891 x3365)))
(assert (= (or (and x4172 x1258) (and x1863 x2223)) x1111))
(assert (x3185 x2855))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x998 x2947 x342 x2039 x1272)))
(assert (=> (>= 10000 x1536) (= 0 (x1946 x1536))))
(assert (x3185 x3906))
(assert (= (or x2133 x4139) x1722))
(assert (x3185 x3571))
(assert (= (=> (= x1002 (= 0 x3290)) (and (=> (and (and (= x1955 x1550) (= x4031 x3587) (= x3687 x767) (= x3798 x2751) (= x3003 x3204) (= x2300 x704) (= x976 x973) (= x1941 x3492) (= x3799 x4296) (= x2866 x1784) (= x2258 x3175) (= x548 x2838) (= x3771 x923)) (not x1002)) x4381) (=> (and x1002 (and (= x628 x4280) (= x2640 x1649) (= x2469 true) (= x4153 0) (= x1212 x3824) (= false x88) (= 2 x2463) (= x3844 x1600) (= x2566 x3903) (= x3141 x1250) (= x2304 x3940) (= x3274 x1667) (= x806 x1894) (= x1047 x3758) (= x1897 x2793) (= x1418 x1132) (= x1545 x2696))) x722))) x1409))
(assert (x3185 x3833))
(assert (x3185 x3706))
(assert (not (x3387 (x1057 x2757 x737 x3759 x2513 x1837 x3104))))
(assert (not (x3387 (x1502 64 x1682 12))))
(assert (= x1115 (and x2459 x2129)))
(assert (x3185 x2265))
(assert (not (x3387 (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (<= x2762 64) x2199 (ite (<= x2762 96) x381 (ite (<= x2762 128) x359 (ite (<= x2762 160) x4327 (ite (<= x2762 192) x3047 x4300))))))))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 x3461 x1216 x2043)))
(assert (x3185 x3659))
(assert (x3185 x2039))
(assert (x3185 x4046))
(assert (= x2947 (x3590 (x2724 x2947 x867 x2003 x665 x2163))))
(assert (x3185 x1903))
(assert (x3185 x187))
(assert (=> (<= x636 10000) (= (x1946 x636) 0)))
(assert (= (and x2064 x3581) x126))
(assert (= (x1946 18446744073709551615) 0))
(assert (= (x3590 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x2947))
(assert (= x2677 (=> (and (or (not x2329) x2329) (= (= x3228 0) x2329)) x91)))
(assert (= x3599 (x4053 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452))))
(assert (= (and x1039 (not x2470)) x3732))
(assert (x3185 x1144))
(assert (= x1219 (x2248 (x1502 x2497 x2210 x1219))))
(assert (x3185 x4076))
(assert (x3185 x2023))
(assert (= (x4053 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x1589))
(assert (= x3659 (x3590 (x1502 x3659 x1891 x3365))))
(assert (x3185 x1564))
(assert (= x1199 (x1723 (x1057 x3659 x1608 x1761 x1401 x1199 x1664))))
(assert (x3185 x4116))
(assert (= (x4053 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656)) x1724))
(assert (x3185 x2782))
(assert (= (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307) (x1946 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307))))
(assert (x3185 x2467))
(assert (= (x1502 64 1 x2364) (x1946 (x1502 64 1 x2364))))
(assert (< (x3876 x765 x2929) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1946 65459779515086145227071195481915504640854538040456829512690024447692440076288)))
(assert (x3185 x733))
(assert (x3185 x1073))
(assert (x3185 x1695))
(assert (=> (<= x3871 10000) (= 0 (x1946 x3871))))
(assert (=> (<= x148 10000) (= 0 (x1946 x148))))
(assert (= x3981 (and x142 (not x3820))))
(assert (x3185 x758))
(assert (x3185 x400))
(assert (= (and x1187 x1644) x2963))
(assert (x3185 x1497))
(assert (x3185 x2707))
(assert (x3185 x1156))
(assert (x3185 x2109))
(assert (= (and x2527 x1763) x3777))
(assert (x3185 x3856))
(assert (x3185 x4366))
(assert (x3185 x869))
(assert (= (x2248 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602)) x4364))
(assert (x3185 x798))
(assert (x3185 x1243))
(assert (x3185 x4361))
(assert (= (x4053 (x1502 64 x4189 6)) x4189))
(assert (x3185 x3707))
(assert (= (x2248 (x1502 64 x264 2)) 2))
(assert (> (x1502 64 x3592 12) 10000))
(assert (not (x3387 (x1057 x314 x2105 x1066 x589 x3537 x3055))))
(assert (x3185 x3716))
(assert (= (x2248 (x1502 64 x729 11)) 11))
(assert (= x2165 (and x962 x3323)))
(assert (x3185 x3024))
(assert (=> (<= x2039 10000) (= (x1946 x2039) 0)))
(assert (x3185 x2030))
(assert (= (x2248 (x1502 64 x1847 11)) 11))
(assert (x3185 x3069))
(assert (x3185 x3902))
(assert (= 64 (x3590 (x1502 64 x1847 11))))
(assert (x3185 x115))
(assert (= (x4053 (x1502 64 x775 4)) x775))
(assert (x3185 x207))
(assert (x3185 x222))
(assert (= 0 (x1946 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (= (and x2299 x3449) x4330))
(assert (=> (>= 10000 x1322) (= 0 (x1946 x1322))))
(assert (= (and (not x1932) x3302) x1124))
(assert (= x3395 (and (not x3629) x3741)))
(assert (= (x3590 (x998 x3659 x3934 x1561 x3484)) x3659))
(assert (x3185 x3116))
(assert (= (x1946 (x2724 x4046 x1101 x210 x3488 x1098)) (x2724 x4046 x1101 x210 x3488 x1098)))
(assert (x3185 x3002))
(assert (x3185 x829))
(assert (x3185 x1306))
(assert (x2097 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x3185 x3894))
(assert (=> (>= 10000 x947) (= (x1946 x947) 0)))
(assert (=> (>= 10000 x26) (= 0 (x1946 x26))))
(assert (x3185 x2235))
(assert (x3185 x1483))
(assert (x3185 x2227))
(assert (=> (>= 10000 x3543) (= 0 (x1946 x3543))))
(assert (= x1157 (and x3113 x1343)))
(assert (x3185 x3309))
(assert (x3185 x3427))
(assert (x3387 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (= (and x635 x2333) x1890))
(assert (x3185 x3379))
(assert (x3185 x872))
(assert (= (x2834 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276)) x2114))
(assert (< (x1502 64 x1682 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (<= x2497 64) x2024 (ite (<= x2497 96) x4359 (ite (>= 128 x2497) x1097 (ite (<= x2497 160) x1313 (ite (>= 192 x2497) x1435 x1931)))))))))
(assert (= (x2248 (x2724 x2762 x2799 x2912 x2224 x2366)) x2912))
(assert (x3185 x2193))
(assert (= (x1502 64 x563 100) (x1946 (x1502 64 x563 100))))
(assert (x3185 x2605))
(assert (x3185 x2138))
(assert (x3185 x487))
(assert (not (x3387 (x2724 x2757 x158 x4169 x2665 x829))))
(assert (= (x1057 x2762 x1522 x1067 x894 x26 x2402) (x1946 (x1057 x2762 x1522 x1067 x894 x26 x2402))))
(assert (> (x1057 x4046 x1645 x387 x1800 x1267 x1617) 10000))
(assert (=> (>= 10000 x1602) (= 0 (x1946 x1602))))
(assert (x3185 x1281))
(assert (< (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1502 64 x636 7) (x1946 (x1502 64 x636 7))))
(assert (= (x1946 310283853) 0))
(assert (= x2712 (and x3574 (not x1712))))
(assert (x3185 x2114))
(assert (= (=> (or (and (and (>= 1461501637330902918203684832716283019655932542975 x734) (= x2745 x3948) (= x570 x734) (= x1474 x1080)) x159) (and (and (= x3948 x3902) (= x3270 x570) (= x3561 x1080)) (not x159))) x3817) x1911))
(assert (x3185 x921))
(assert (= (or x3775 x2545) x911))
(assert (= x1232 (and x2734 (not x4216))))
(assert (= x1289 x449))
(assert (x3185 x1549))
(assert (= (x3876 x2762 x525) (x1946 (x3876 x2762 x525))))
(assert (< (x2724 x314 x1494 x4355 x3742 x4087) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= (< 0 x1762) x2735) (and (=> (and x2735 (and (= x3432 x431) (= x2978 x3806) (= x3893 x53) (= x1226 x361) (= x4305 x963) (= x4257 x1532))) x1465) (=> (and (and (= false x3134) (= true x3608) (= 4 x1746)) (not x2735)) x3292))) x4148))
(assert (> (x1502 x4046 x3532 x1371) 10000))
(assert (not (x3387 (x3876 x765 x2929))))
(assert (x3185 x908))
(assert (= (x1723 (x1057 x1602 x1386 x1073 x4039 x398 x3637)) x398))
(assert (=> (>= 10000 x124) (= (x1946 x124) 0)))
(assert (= x235 (or x917 x2528)))
(assert (x3724 x2295))
(assert (= x44 (and x330 x2794)))
(assert (= x1689 (x1259 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (x2097 x3286))
(assert (not (x3387 (x998 x314 x2347 x3906 x3871))))
(assert (not (x3387 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276))))
(assert (x3185 x3982))
(assert (x3185 x2913))
(assert (= (and x2329 x17) x3702))
(assert (= (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276) (x1946 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276))))
(assert (= (=> (= (= 0 x4085) x788) (and (=> (and (not x788) (and (= x3824 x1571) (= x3940 x4178) (= x3844 x371) (= x1574 x1649) (= x1277 x2696) (= x806 x3090) (= x1319 x4280) (= x4085 x2341) (= x2936 x3756) (= x1418 x2855) (= 128 x507) (= x3274 x2524) (= x3758 x2538) (= x2136 x3903) (= x3033 x3141))) x328) (=> (and (and x2351 (= x4298 (= (x2317 228) (x3349 518))) (= x2153 (x1304 (+ x513 32))) (= x2833 (= (x2317 164) 64)) (= x3173 1084734224) (= x1048 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2824 4)) (and (< (- x2824 4) 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2824 4)))))) (= (= (x3349 486) (x2317 196)) x2351) x4298 (= x4237 (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x121)) (= x3936 160) (= x3402 (x2739 x4138)) (= x2606 (x1609 224)) (= (x3747 (- x513 294)) x2899) (<= x2281 127) x2833 (= 256 x1346) (= x36 x2824) (= x3595 290) (= x25 (x1304 (+ x2153 x4237))) (>= x3402 1) (= (x1304 (+ 31 x4181)) x3867) x3346 (= x3510 x1482) (= false x4109) (= x36 (x3747 (- x25 290))) (>= x2824 356) (= 0 x4108) (= x3346 (= 34 (x2317 260))) (= x747 (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3867)) (= x2614 x3903) (= x121 (x1304 (+ 31 x2606))) (= x513 (x1304 (+ 486 x747))) (>= 127 x2281) (= x1403 0) (= x4181 (x4052 128)) (<= 356 x36) (= 29244376827073035548771643948814531551534385112760475998805679327281764368384 x3680) (= x4012 false)) x788) (and (=> (and (not x1048) (= x2052 true)) (and (=> (and (= x2470 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2824)) (> x2824 195))) x2052) (and (=> (not x2470) x975) (=> (and x2470 (and (= (x2988 164) x699) (= x4042 (> x699 18446744073709551615)))) (and (=> (and (and (= x2671 (x1304 (+ x699 196))) (= (< x2824 x2671) x4084)) (not x4042)) (and (=> (and (and (= (x2988 260) x688) (<= x2824 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (> x688 18446744073709551615) x2360) (>= x2824 356)) (not x4084)) (and (=> (and (not x2360) (and (= x2306 (x1304 (+ 292 x688))) (= (< x2824 x2306) x3884))) (and (=> (and (and (= x2385 x3758) (= x3824 x693) (= x1581 64) (= x1418 x2247) (= (x2903 128) x2370) (= x183 false) (= x1649 x279) (= x4280 x3912) (= x4202 x3940) (= x3903 x2607) (= x3274 x2860) (= x2185 x3141) (= x524 false) (= (x2903 128) x758) (= x1966 x2696) (= x3171 x2936) (= x3844 x1706) (= x2687 x806) (= x2060 (x2903 160)) (= 1 x2119) (= x1768 (x2903 160))) (not x3884)) x1943) (=> x3884 x2263))) (=> x2360 x3874))) (=> x4084 x2263))) (=> x4042 x3874))))) (=> (not x2052) x975))) (=> x1048 x975))))) x2820))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)))
(assert (= 64 (x3590 (x1502 64 x4075 36))))
(assert (= x2250 (or x860 x2636)))
(assert (=> (>= 10000 x3096) (= (x1946 x3096) 0)))
(assert (x3185 x3591))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x3903 3)))
(assert (= 0 (x1946 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (= (x1946 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)) (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679)))
(assert (x3185 x1470))
(assert (= (x1502 64 x4189 6) (x1946 (x1502 64 x4189 6))))
(assert (not (x3387 (x1057 x3461 x2214 x148 x1988 x1961 x1554))))
(assert (x3185 x1752))
(assert (x3387 310283853))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 x314 x1770 x116)))
(assert (< (x1502 64 1 x2364) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1539 x318) x2902))
(assert (x3185 x2614))
(assert (not (x3387 (x998 x765 x580 x2197 x687))))
(assert (x3185 x1756))
(assert (x3185 x2393))
(assert (x3185 x415))
(assert (x3185 x3371))
(assert (x3185 x43))
(assert (x3724 x3364))
(assert (x3185 x3965))
(assert (x3185 x4331))
(assert (x3185 x3256))
(assert (x3185 x933))
(assert (= (x1502 x1602 x634 x850) (x1946 (x1502 x1602 x634 x850))))
(assert (x3185 x1106))
(assert (= (x472 (x2569 x2947 x1000 x792 x1441 x1040 x43 x1740 x947)) x947))
(assert (= (and x2479 x3224) x500))
(assert (x3185 x4215))
(assert (= (x4053 (x1502 64 x1261 36)) x1261))
(assert (x3724 x518))
(assert (x3185 x1130))
(assert (not (x3387 (x2724 x3461 x753 x465 x473 x4385))))
(assert (=> (<= x4076 10000) (= (x1946 x4076) 0)))
(assert (not (x3387 (x2724 x2762 x2799 x2912 x2224 x2366))))
(assert (not (x3387 (x1502 64 x775 3))))
(assert (= (and x474 (not x21)) x3697))
(assert (x3185 x404))
(assert (x3185 x1491))
(assert (x3185 x1386))
(assert (= (x1502 64 x638 36) (x1946 (x1502 64 x638 36))))
(assert (x3185 x2188))
(assert (= x765 (x3590 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (x3185 x4051))
(assert (x3185 x3065))
(assert (=> (>= 10000 x542) (= 0 (x1946 x542))))
(assert (= x2466 (and (not x2650) x2128)))
(assert (x3185 x1840))
(assert (> (x1502 64 x729 11) 10000))
(assert (< 10000 (x3876 32 x2010)))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (x3185 x2471))
(assert (x3185 x3905))
(assert (x3185 x727))
(assert (x3185 x3677))
(assert (x3185 x66))
(assert (= (x2248 (x2724 x3461 x753 x465 x473 x4385)) x465))
(assert (= x4381 (=> (and (= x1955 x56) (= x2838 x1437) (= x41 x3204) (= x2763 x1784) (= x675 x976) (= x767 x2061) (= x1221 x3175) (= x1362 x3771) (= x1938 x3492) (= x704 x447) (= x1752 x3799) (= x2751 x1751) (= x3587 x3137)) x2487)))
(assert (not (x3387 (x1502 64 x3389 7))))
(assert (x3185 x2222))
(assert (= (x1057 x1602 x1386 x1073 x4039 x398 x3637) (x1946 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (= x106 (and (not x495) x2112)))
(assert (=> (>= 10000 x4364) (= 0 (x1946 x4364))))
(assert (x3185 x2860))
(assert (x2097 x3141))
(assert (x3185 x2873))
(assert (=> (>= 10000 x3043) (= (x1946 x3043) 0)))
(assert (= (=> (= (< 0 x620) x1539) (and (=> (and (and (= x1472 x2321) (= x2675 x29)) x1539) x2816) (=> (and (not x1539) (and (= false x356) (= 4 x3792) (= true x1935))) x2693))) x3409))
(assert (= (x1057 x314 x2105 x1066 x589 x3537 x3055) (x1946 (x1057 x314 x2105 x1066 x589 x3537 x3055))))
(assert (x3185 x3960))
(assert (x3185 x1439))
(assert (x3185 x283))
(assert (= x1465 (=> (and (= x1483 x3432) (= x1903 x3903) (= x806 x4055) (= x1532 x4375) (= x4151 x963) (= x1804 x2978) (= x992 0) (= 1 x3228) (= x1446 x2696) (= x3766 x1418) (= x3893 x2782) (= x3824 x2705) (= x3139 x1226) (= x768 x3274) (= x2817 x3940)) x2677)))
(assert (not (x3387 (x1057 x2497 x4380 x1265 x573 x3485 x448))))
(assert (x3185 x2730))
(assert (not (x3387 (x3876 x1602 x4253))))
(assert (= x3389 (x4053 (x1502 64 x3389 7))))
(assert (= (or (and x1939 x552) (and x1533 x147) (and x3820 x142)) x1338))
(assert (x3185 x3374))
(assert (= (x2248 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) x2570))
(assert (x3185 x424))
(assert (= (x3590 (x1502 64 x2805 36)) 64))
(assert (x3185 x822))
(assert (x3185 x2643))
(assert (= (x4053 (x1502 64 x638 36)) x638))
(assert (x3185 x4))
(assert (= x2757 (x3590 (x1057 x2757 x737 x3759 x2513 x1837 x3104))))
(assert (x3185 x2626))
(assert (= (and x4036 x3967) x2378))
(assert (= (x1946 (x1057 x2757 x737 x3759 x2513 x1837 x3104)) (x1057 x2757 x737 x3759 x2513 x1837 x3104)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1057 x2762 x1522 x1067 x894 x26 x2402)))
(assert (x3185 x127))
(assert (x3185 x2635))
(assert (= x445 (or x3992 x4103)))
(assert (= (x1946 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (= x1970 (and x1636 x301)))
(assert (= (x4053 (x1502 64 x264 2)) x264))
(assert (= (=> (and (= (= x290 0) x2572) (= x290 (x1181 x4293))) (and (=> (and x2572 (and (= (x1304 (+ x3582 32)) x1913) (= (x1304 (+ 4 x289)) x4) (= x3164 132) (= x1400 (x1304 (+ 32 x1913))) (= (x1304 (+ 32 x4)) x3582) (= x4282 false) (= true x1175))) x1036) (=> (and (not x2572) (and (= (x3782 x507) x2726) (= (x3028 x1685) x1159) (= x1685 (x1502 64 x3903 5)) (= x4277 (> x2726 (ite (= x1159 0) 10000 x1159))))) (and (=> (and x4277 (and (= 100 x3164) (= x185 true) (= x2934 (x1304 (+ 4 x289))) (= (x1304 (+ 32 x2934)) x404) (= x1353 (x1304 (+ x404 32))) (= false x2832))) x1036) (=> (and (and (= x3856 (x1304 (+ x1034 x4322))) (= (= 0 x1234) x301) (= x3393 (x1304 (+ x2765 x2023))) (= x2747 (x1304 (+ 32 x507))) (= x3288 (x3747 (- x3393 x289))) (= x1034 (x1304 (+ 32 x2423))) (= x686 (x1181 x4293)) (= (x1304 (+ 31 x2851)) x4068) (= (x1304 (+ x1183 32)) x94) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2697) x4322) (= x2423 (x1304 (+ x1162 x2844))) (= (x2739 x1277) x1234) (= (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2042) x1162) (= x2415 (x1304 (+ 32 x3633))) (= (x1304 (+ x686 31)) x2042) (= x1183 (x1304 (+ 32 x3763))) (= x925 (x1304 (+ 32 x2058))) (= x3831 (x1304 (+ x94 32))) (= (x3782 x507) x2307) (= (x1304 (+ 192 x3763)) x315) (= x3633 (x1304 (+ 32 x3831))) (= x2844 (x1304 (+ 32 x315))) (= (x1304 (+ x2307 31)) x2697) (= (x1304 (+ 32 x3856)) x2023) (= x2765 (x4191 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4068)) (= (x1304 (+ x289 4)) x3763) (= (x3747 (- x3856 x3763)) x1222) (= x2851 (x776 x2058)) (= (x3747 (- x2423 x3763)) x1091)) (not x4277)) (and (=> (and (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2341 x3417)) x2826) (= x676 (x3729 x1482)) (= x3417 (x3729 x1277)) (= x2878 (and x1968 x2826)) (= (>= x676 x2341) x1968)) (not x301)) (and (=> (and (and (= x1427 x1319) (= x1772 x1277) (= x2136 x2558) (= x1571 x4171) (= x1839 x2538) (= x371 x4378) (= x1003 x3033) (= x319 x2855) (= x4111 x3756) (= 0 x745) (= x1412 x3090) (= x2952 x4178) (= x1574 x2768) (= x2524 x2972)) (not x2878)) x4208) (=> (and (and (<= x728 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 420 x3288) (>= x714 420) (= x3288 x714) (= false x2056) (<= x1413 127) (= x1998 0) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x3223) (= (= x686 (x4238 196)) x794) (= (+ x2468 x2341) x728) (= (x2739 x4138) x2006) (= x1482 x3154) (= x3903 x559) (= x3522 false) (= x4231 (- x2051 x2341)) (= x2483 x1222) x794 (= x728 x3674) (= x1864 x1091) (>= 127 x1413) (>= x728 0) (= x3460 192) (= x2051 (x3729 x1482)) (= x2358 3313512704) (= x1523 (or (and (= true (<= (- x714 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x714 4) 192)) (> (- x714 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2341 x2468)) (<= 1 x2006) (= (x2426 x1277) x2468)) x2878) (and (=> x1523 x863) (=> (and (not x1523) (= x2454 true)) (and (=> (not x2454) x863) (=> (and x2454 (= (and (> x714 227) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x714))) x425)) (and (=> (not x425) x2367) (=> (and (and (= (x2778 196) x4360) (= x1520 (> x4360 18446744073709551615))) x425) (and (=> x1520 x1694) (=> (and (not x1520) (and (= x2177 (< x714 x2702)) (= (x1304 (+ x4360 228)) x2702))) (and (=> x2177 x1376) (=> (and (not x2177) (= x260 (< 18446744073709551615 x1091))) (and (=> (and (and (= (x1304 (+ x4239 31)) x2259) (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x714) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2259)) (and (= (<= x714 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2259 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x714 x2259))) x3224) (= (x1304 (+ x1091 4)) x4239)) (not x260)) (and (=> (and (and (= x4309 (< 18446744073709551615 x4350)) (= (x2778 x4239) x4350)) x3224) (and (=> x4309 x1694) (=> (and (not x4309) (and (= (x1304 (+ x4239 32)) x304) (= (x1304 (+ x304 x4350)) x1936) (= (< x714 x1936) x1042))) (and (=> (and (= x1531 (< 18446744073709551615 x1222)) (not x1042)) (and (=> (and (not x1531) (and (= (x1304 (+ 4 x1222)) x3716) (= (x1304 (+ 31 x3716)) x1773) (= (or (and (<= x714 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1773 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x714 x1773) (= (<= x714 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1773)))) x3472))) (and (=> (and x3472 (and (= x3978 (< 18446744073709551615 x3565)) (= (x2778 x3716) x3565))) (and (=> (and (and (= x1820 (> x1626 x714)) (= (x1304 (+ x3716 32)) x3070) (= x1626 (x1304 (+ x3070 x3565)))) (not x3978)) (and (=> x1820 x1376) (=> (and (not x1820) (and (= x1319 x357) (= x417 x3756) (= x2115 x2524) (= 1 x2645) (= x1574 x2327) (= x2685 x3090) (= x3033 x1801) (= x23 x371) (= x3994 x1571) (= x3051 x2538) (= x4178 x1964) (= x1277 x1582) (= x2136 x2202) (= x383 x2855))) x2654))) (=> x3978 x1694))) (=> (not x3472) x2367))) (=> x1531 x863))) (=> x1042 x1376))))) (=> (not x3224) x2367))) (=> x260 x863))))))))))))))) (=> (and x301 (and (= 0 x3164) (= x3979 true) (= x3593 false))) x1036))))))) x242))
(assert (= x589 (x2443 (x1057 x314 x2105 x1066 x589 x3537 x3055))))
(assert (x3185 x455))
(assert (x3185 x3797))
(assert (= (x1259 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x1433))
(assert (= (x1946 (x998 x4046 x392 x811 x1260)) (x998 x4046 x392 x811 x1260)))
(assert (x3185 x890))
(assert (x3185 x116))
(assert (x3724 x1795))
(assert (x3185 x2446))
(assert (x3185 x1508))
(assert (= x3787 (and x3576 x2735)))
(assert (x3185 x2327))
(assert (x3185 x290))
(assert (= x2716 (x2248 (x2724 x765 x3941 x2716 x3682 x199))))
(assert (= (x2248 (x1502 64 x1107 6)) 6))
(assert (= (or x2226 x3201) x318))
(assert (x3185 x567))
(assert (x3185 x4293))
(assert (= x1455 (and x1242 (not x558))))
(assert (x3185 x830))
(assert (x3185 x3971))
(assert (= x1602 (x3590 (x3876 x1602 x4253))))
(assert (x3185 x1463))
(assert (x3185 x4113))
(assert (x3185 x1814))
(assert (x3185 x1773))
(assert (= x73 (=> (= (= x60 0) x2737) (and (=> (and x2737 (and (= x3415 x3808) (= x2961 x2194) (= x644 x1892))) x3341) (=> (and (= x2154 (< x2848 32)) (not x2737)) (and (=> (and (and (= x1305 (x113 x1366)) (= x3172 (< 3 x1305)) (>= 255 x1305) (= x1366 (x1502 64 x729 11)) (= x729 (x4059 160))) (not x2154)) (and (=> (and (and (= x1892 x644) (= x3415 x3808) (= x2194 x2961)) x3172) x3341) (=> (and (= x3061 (= x1305 0)) (not x3172)) (and (=> (and (and (= x2194 x3902) (= x3075 (x1502 64 x3703 10)) (= x2117 false) (= x159 x1978) (= false x1978) (= x3830 (+ 1 x3827)) (= x653 (x1502 64 x729 11)) (= x3270 x644) (= 1 x107) (= false x46) (= x3561 x3415) (= x3213 false) (= x3827 (+ 1 x653))) x3061) x1911) (=> (and (and (= x2194 x2961) (= x3415 x3808) (= x644 x1892)) (not x3061)) x3341))))) (=> (and (and (= x3808 x3415) (= x1892 x644) (= x2961 x2194)) x2154) x3341)))))))
(assert (= (=> (= x639 (+ x400 292)) x2228) x2990))
(assert (= x3485 (x1723 (x1057 x2497 x4380 x1265 x573 x3485 x448))))
(assert (x3185 x158))
(assert (x3185 x3975))
(assert (< (x1057 x2757 x737 x3759 x2513 x1837 x3104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x4036 (not x3967)) x791))
(assert (x3185 x3296))
(assert (x3185 x992))
(assert (= x3298 (and x329 (not x3308))))
(assert (not (x3387 (x1502 64 1 x2364))))
(assert (x3185 x1689))
(assert (= x636 (x4053 (x1502 64 x636 7))))
(assert (= (x2248 (x1057 x3659 x1608 x1761 x1401 x1199 x1664)) x1761))
(assert (x3185 x702))
(assert (x3185 x1933))
(assert (x3185 x226))
(assert (=> (<= x729 10000) (= 0 (x1946 x729))))
(assert (x3185 x602))
(assert (= (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312) (x1946 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312))))
(assert (=> (<= x3128 10000) (= (x1946 x3128) 0)))
(assert (x3185 x1878))
(assert (= (and x1484 (not x3641)) x3774))
(assert (not (x3387 (x1057 x3659 x1608 x1761 x1401 x1199 x1664))))
(assert (x2187 x3141))
(assert (= (x3590 (x1502 64 x775 4)) 64))
(assert (= (x2248 (x1502 64 x3567 11)) 11))
(assert (x3185 x2665))
(assert (=> (>= 10000 x1800) (= 0 (x1946 x1800))))
(assert (=> (<= x1682 10000) (= 0 (x1946 x1682))))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (=> (<= x3934 10000) (= (x1946 x3934) 0)))
(assert (x3185 x2592))
(assert (x3185 x4303))
(assert (= x2128 (and (not x216) x3322)))
(assert (x3185 x2087))
(assert (= x924 (or x1607 x1092)))
(assert (x3185 x3171))
(assert (= x1081 (or x143 x2617)))
(assert (= (x472 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656)) x3656))
(assert (= (x3590 (x3876 x765 x2929)) x765))
(assert (x3185 x813))
(assert (=> (>= 10000 x4228) (= (x1946 x4228) 0)))
(assert (= (x2248 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307)) x11))
(assert (x3185 x713))
(assert (x3185 x3114))
(assert (=> (>= 10000 x3925) (= 0 (x1946 x3925))))
(assert (= (=> (= x3664 (+ x798 292)) x1089) x1515))
(assert (x3185 x3475))
(assert (x3185 x1105))
(assert (> (x3876 32 104) 10000))
(assert (x3185 x878))
(assert (=> (<= x1371 10000) (= (x1946 x1371) 0)))
(assert (= 0 (x1946 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (= (x3590 (x2900 0)) 0))
(assert (x3185 x1793))
(assert (= x2923 (and x1150 (not x1520))))
(assert (= 0 (x1946 34591783479076665047274362116096262703299809091723987870014818727818681087008)))
(assert (x3185 x4279))
(assert (x3185 x324))
(assert (x3185 x745))
(assert (x3185 x2202))
(assert (x3185 x4296))
(assert (= x1552 (x4053 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689))))
(assert (x3185 x1662))
(assert (not (x3387 (x1502 x1602 x634 x850))))
(assert (x3185 x3935))
(assert (x3185 x172))
(assert (= (and (not x3291) x4374) x269))
(assert (=> (>= 10000 x525) (= 0 (x1946 x525))))
(assert (x3185 x2463))
(assert (= (x1946 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)))
(assert (x3185 x1159))
(assert (= 64 (x3590 (x1502 64 x3903 3))))
(assert (x3185 x584))
(assert (< (x998 x314 x2347 x3906 x3871) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x4241))
(assert (x3185 x2994))
(assert (= (x4053 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312)) x3691))
(assert (x3185 x3648))
(assert (= (and x3981 (not x4304)) x2527))
(assert (x3185 x867))
(assert (x3185 x2339))
(assert (= (x1723 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x2008))
(assert (x3185 x2899))
(assert (x3185 x3871))
(assert (x3185 x3277))
(assert (x2097 x1695))
(assert (x3185 x1397))
(assert (= (and x2621 (not x2619)) x1194))
(assert (x3185 x938))
(assert (x3185 x1834))
(assert (x3185 x4157))
(assert (= (or x911 x3611) x1618))
(assert (x3185 x4350))
(assert (> (x1502 64 x1828 36) 10000))
(assert (x2097 x2493))
(assert (x3185 x1682))
(assert (= (and (not x3241) x2821) x2534))
(assert (< (x3876 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x2051))
(assert (x2097 x4112))
(assert (= (and x777 x1652) x2164))
(assert (= x1406 (and (not x4084) x3183)))
(assert (= x4207 (and x106 x1203)))
(assert (< 10000 (x1502 x2497 x2210 x1219)))
(assert (< (x1502 x2497 x2210 x1219) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3387 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (= (or x126 x2094) x1379))
(assert (x3185 x3671))
(assert (= (=> (= x3693 (= x745 0)) (and (=> (and x3693 (and (= x3164 0) (= x4077 false) (= x3586 true))) x1036) (=> (and (and (= x4171 x3690) (= x1839 x990) (= x3192 x4111) (= x2768 x2488) (= x2558 x4226) (= x4136 x1412) (= x4378 x4119) (= x4311 x1772) (= 0 x1822) (= 1 x2310) (= x2952 x561) (= x3078 x2972) (= x1427 x1144) (= x3464 x1003) (= x1217 x319)) (not x3693)) x1321))) x4208))
(assert (x3185 x2793))
(assert (x3185 x920))
(assert (x3185 x4085))
(assert (< (x1502 64 x3903 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3249))
(assert (= (and x2378 (not x3235)) x1128))
(assert (x3185 x3144))
(assert (= (x1946 x2909) (x1946 (+ 1 x2909))))
(assert (= (x3590 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) x3461))
(assert (= (and x743 x2836) x3992))
(assert (= x3306 (and (not x3312) x311)))
(assert (= (and (not x4141) x2041) x3106))
(assert (= (or (and x216 x3322) (and x3516 x3140) (and x2922 x3655)) x3505))
(assert (< (x1502 64 x729 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3556 (and x1279 x2362)))
(assert (= (or x3710 (and (not x1797) x3193)) x1521))
(assert (x2187 x1369))
(assert (x3185 x2556))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x636 7)))
(assert (= (x2443 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x2285))
(assert (x3724 x3993))
(assert (x3185 x3376))
(assert (not (x3387 (x1502 64 x810 36))))
(assert (= (=> (and (= x3141 x2258) (= (x4191 255 x218) x152) (= x806 x4296) (= x152 x3798) (= x3758 x4031) (= x2696 x923) (= x2866 x3274) (= x3687 x1649) (= 0 x3290) (= 2 x2830) (= x548 x3940) (= x1550 x3824) (= x1418 x973) (= x2241 x932) (= x3844 x2300) (= x3903 x1941) (= x3003 x4280)) x3457) x562))
(assert (not (x3387 (x2387 x2947 x1393 x617 x2376 x3396 x2152 x1227))))
(assert (= x1608 (x4053 (x1057 x3659 x1608 x1761 x1401 x1199 x1664))))
(assert (x3185 x665))
(assert (x3185 x3223))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (< (x2900 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1946 (x1502 64 x4113 36)) (x1502 64 x4113 36)))
(assert (x3185 x1385))
(assert (x3185 x1222))
(assert (= (or x526 (and x3080 x1531) x2420 (and x260 x999) x3511 x1841 x4272) x228))
(assert (x3185 x2345))
(assert (= 1 (x4053 (x1502 64 1 x3995))))
(assert (= x3925 (x4053 (x3876 x3659 x3925))))
(assert (= (x2443 (x2724 x3659 x1593 x650 x3229 x2424)) x3229))
(assert (x3185 x977))
(assert (x3185 x1308))
(assert (x3387 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (=> (<= x616 10000) (= 0 (x1946 x616))))
(assert (x3185 x2000))
(assert (= x2399 (and x772 x2550)))
(assert (< 10000 (x998 x2762 x165 x458 x1789)))
(assert (x3185 x1552))
(assert (= (and x1628 x1848) x2528))
(assert (x3185 x2675))
(assert (= x1602 (x3590 (x1057 x1602 x1386 x1073 x4039 x398 x3637))))
(assert (= (and (not x2098) x1303) x2453))
(assert (x3185 x1623))
(assert (= (x2248 (x1502 64 x1810 36)) 36))
(assert (x3185 x4210))
(assert (< (x1057 x1602 x1386 x1073 x4039 x398 x3637) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1946 x171) (x1946 (+ x171 2))))
(assert (= (or x1684 x1658 x3459) x2299))
(assert (x3185 x2061))
(assert (=> (>= 10000 x1040) (= (x1946 x1040) 0)))
(assert (= (x1502 64 x1810 36) (x1946 (x1502 64 x1810 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x775 5)))
(assert (x3185 x885))
(assert (x3185 x1096))
(assert (not (x3387 (x3876 x2947 x379))))
(assert (x3185 x4319))
(assert (x3185 x4203))
(assert (not (x3387 (x3876 32 x2010))))
(assert (x3185 x3364))
(assert (x3185 x2003))
(assert (= (x2443 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x3543))
(assert (= (and x1149 (not x2287)) x323))
(assert (x3185 x2908))
(assert (x3185 x4281))
(assert (=> (>= 10000 x2134) (= 0 (x1946 x2134))))
(assert (= x92 (x4053 (x1502 64 x92 36))))
(assert (= x2485 (and x2250 x1799)))
(assert (x3185 x1548))
(assert (=> (>= 10000 x97) (= (x1946 x97) 0)))
(assert (= (x3590 (x1502 x765 x1477 x822)) x765))
(assert (= (x1502 64 x775 4) (x1946 (x1502 64 x775 4))))
(assert (x3185 x313))
(assert (x3638 x1907))
(assert (not (x3387 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307))))
(assert (= x2962 (and x412 x855)))
(assert (= 0 (x1946 2770781680)))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x3185 x1125))
(assert (x3387 18446744073709551615))
(assert (x3185 x133))
(assert (=> (<= x2224 10000) (= (x1946 x2224) 0)))
(assert (= x3998 (and x1488 x3399)))
(assert (x3185 x3174))
(assert (x3185 x266))
(assert (x3185 x1495))
(assert (x3185 x2474))
(assert (= (x1502 64 x2805 36) (x1946 (x1502 64 x2805 36))))
(assert (x3185 x819))
(assert (x3185 x923))
(assert (= x917 (and (not x1628) x1848)))
(assert (x3185 x3215))
(assert (x3185 x1236))
(assert (x3185 x2068))
(assert (x3185 x2169))
(assert (= (x2443 (x2724 x4046 x1101 x210 x3488 x1098)) x3488))
(assert (= x975 x2263))
(assert (= x311 (and (not x3319) x1049)))
(assert (x3185 x1999))
(assert (x3185 x3941))
(assert (= x1603 (or (and x1932 x3302) (and x4015 x4045))))
(assert (= x1106 (x2443 (x2569 x2762 x48 x3526 x1106 x2412 x2114 x1791 x4276))))
(assert (=> (>= 10000 x1593) (= (x1946 x1593) 0)))
(assert (> (x1057 x2757 x737 x3759 x2513 x1837 x3104) 10000))
(assert (x3185 x1260))
(assert (x3185 x894))
(assert (=> (>= 10000 x775) (= 0 (x1946 x775))))
(assert (x3185 x2920))
(assert (x3638 x2697))
(assert (= (=> (and (= x4089 x3875) (= x4168 x3813) (= x1526 x2305) (= x1984 x2413)) x2142) x1013))
(assert (= (x2248 (x998 x3461 x4241 x3959 x3374)) x3959))
(assert (x3185 x4022))
(assert (x3185 x3111))
(assert (x3185 x1267))
(assert (x3185 x2458))
(assert (x3185 x2414))
(assert (x3185 x315))
(assert (=> (>= 10000 x2169) (= (x1946 x2169) 0)))
(assert (=> (>= 10000 x2205) (= 0 (x1946 x2205))))
(assert (= x3053 (and (not x1596) x695)))
(assert (x3185 x1686))
(assert (= x1694 x863))
(assert (= (x4053 (x1502 64 x2793 36)) x2793))
(assert (x3185 x1957))
(assert (x3185 x3218))
(assert (x3724 x3304))
(assert (not (x3387 (x1502 64 x1828 36))))
(assert (=> (<= x2593 10000) (= (x1946 x2593) 0)))
(assert (not (x3387 (x1502 64 x2169 36))))
(assert (= (x4053 (x1502 64 x775 3)) x775))
(assert (x3185 x3133))
(assert (= x1696 (or x2277 x2600)))
(assert (x3185 x4355))
(assert (= (and (not x3553) x2746) x134))
(assert (=> (<= x3656 10000) (= 0 (x1946 x3656))))
(assert (= (and x3006 x3721) x2717))
(assert (x3724 x1130))
(assert (= 0 (x1946 100000)))
(assert (x3185 x3190))
(assert (x3185 x824))
(assert (x3185 x26))
(assert (= (and x2825 x3865) x3123))
(assert (= (x472 (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312)) x2312))
(assert (= x822 (x2248 (x1502 x765 x1477 x822))))
(assert (= (x3590 (x1502 64 x810 36)) 64))
(assert (= (x2443 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452)) x1835))
(assert (x3185 x3934))
(assert (=> (>= 10000 x995) (= 0 (x1946 x995))))
(assert (=> (<= x4075 10000) (= 0 (x1946 x4075))))
(assert (x3185 x3559))
(assert (= x1104 (and (not x3930) x2977)))
(assert (=> (<= x2255 10000) (= (x1946 x2255) 0)))
(assert (= (x472 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307)) x307))
(assert (= x1364 (and x1640 x2399)))
(assert (x3185 x3103))
(assert (= x729 (x4053 (x1502 64 x729 11))))
(assert (= (x2248 (x2387 x2497 x2255 x819 x2285 x2008 x2212 x3570)) x819))
(assert (= (or x4034 x1632) x3337))
(assert (x3185 x1725))
(assert (=> (<= x1067 10000) (= (x1946 x1067) 0)))
(assert (= (x1946 29244376827073035548771643948814531551534385112760475998805679327281764368384) 0))
(assert (= (and x3232 (not x780)) x2167))
(assert (> (x1502 x314 x1770 x116) 10000))
(assert (not (x3387 (x998 x2947 x342 x2039 x1272))))
(assert (= (x1946 (x1502 64 x2793 36)) (x1502 64 x2793 36)))
(assert (x2097 x3161))
(assert (= (x2724 x2762 x2799 x2912 x2224 x2366) (x1946 (x2724 x2762 x2799 x2912 x2224 x2366))))
(assert (x3185 x1244))
(assert (= (and x1721 (not x1973)) x3655))
(assert (x3185 x273))
(assert (x3185 x2876))
(assert (x3185 x3555))
(assert (x3185 x3008))
(assert (=> (<= x1482 10000) (= 0 (x1946 x1482))))
(assert (x3185 x1351))
(assert (x3185 x2671))
(assert (x3185 x1801))
(assert (x3185 x1450))
(assert (x3387 3313512704))
(assert (= x1684 (and x1696 x1663)))
(assert (= (and (not x1640) x2399) x249))
(assert (x3185 x2862))
(assert (= x305 (=> (and (= x193 (x4191 255 x452)) (= true x3660) (= x1563 x193) (= x2091 false) (= x3823 0) (= x2087 x1647) (= x4290 x1971) (= x3634 x2436) (= 2 x4338)) x2684)))
(assert (x3185 x3880))
(assert (x3185 x1362))
(assert (= x314 (x3590 (x3876 x314 x1122))))
(assert (= x3457 (=> (and (or x855 (not x855)) (= (= 0 x3290) x855)) x1409)))
(assert (= (and (not x2177) x2923) x999))
(assert (= (and x2836 (not x743)) x64))
(assert (x3185 x816))
(assert (= x4072 (x4053 (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307))))
(assert (x3185 x1757))
(assert (x3638 x2042))
(assert (x3185 x1847))
(assert (x3185 x3293))
(assert (x3185 x4135))
(assert (x3185 x3003))
(assert (not (x3387 (x1502 64 x3713 100))))
(assert (x3185 x1234))
(assert (x3185 x1008))
(assert (x3185 x2341))
(assert (x3185 x2744))
(assert (x3185 x517))
(assert (x3185 x87))
(assert (= (x3590 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) x765))
(assert (x3724 x1240))
(assert (x3185 x2857))
(assert (= x4326 (and x1124 (not x1085))))
(assert (= x2761 (=> (and (= x3291 (= x1015 0)) (= x1015 (x2739 x3668)) (= x2120 128) (= (x3747 (- x882 128)) x3971)) (and (=> (and (not x3291) (and (= x2075 (x3272 x3668)) (= x2916 (< (+ x3471 x2075) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3023 (<= x3471 x1467)) (= (and x3023 x2916) x1382) (= x1467 (x3272 x977)))) (and (=> (and (= x2447 0) (not x1382)) x896) (=> (and (and (>= x3971 196) (= (x3342 x3668) x2975) (= (- x4120 x3471) x1559) (= x3971 x2853) (< (+ x3471 x2975) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2539 3521034783) (= false x2452) x2489 (= x1912 (x2915 132)) (<= x2853 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ x2975 x3471) x1164) (<= 1 x4340) (= x2266 x1553) (= (x2739 x1482) x4340) (= x3523 x3269) (<= x3971 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x3272 x977) x4120) (= x1164 x1154) (<= x1164 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 127 x930) (<= x930 127) (= x3293 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x1846 128) (= (= x1592 (x2670 132)) x2489) (= x1569 x3389) (>= x2853 196) (>= x1164 0) (= x1578 false) (= x1145 (< 18446744073709551615 x1912))) x1382) (and (=> x1145 x1329) (=> (and (not x1145) (and (= x934 (x1304 (+ x1912 164))) (= x3031 164) (= x2103 (> x934 x2853)))) (and (=> x2103 x2676) (=> (and (and (= x3749 (+ 4 x1553)) (= (> x2853 (+ x3749 31)) x528)) (not x2103)) (and (=> (and x528 (and (= x530 (< 18446744073709551615 x4000)) (= x4000 (x2915 x3749)))) (and (=> x530 x1329) (=> (and (and (= (+ x3749 32) x2049) (= (x1304 (+ x4000 x2049)) x2920) (= (< x2853 x2920) x1318)) (not x530)) (and (=> x1318 x2676) (=> (and (and (and (= (x1845 256) x3637) (= x542 (x1845 320)) (= (x2724 x1602 x2205 x3704 x124 x303) x2332) (= (= x3832 0) x2129) (= (x1845 128) x1386) (= x2296 (x1845 256)) (= x2658 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542)) (= x3599 (x1845 128)) (= x398 (x1845 224)) (= (x1845 128) x2205) (= x397 (x1845 192)) (= x850 (x1845 160)) (= x1800 (x1845 192)) (= x2870 (x1502 x1602 x634 x850)) (= x2517 (x1845 128)) (= (x1845 288) x1411) (= x1168 (x1502 64 x3269 (ite (>= 32 x1602) x3424 (ite (>= 64 x1602) x2870 (ite (>= 96 x1602) x2066 (ite (<= x1602 128) x2332 (ite (>= 160 x1602) x815 (ite (<= x1602 192) x504 x2658)))))))) (= (x3162 x1168) x3832) (= (x1304 (+ 128 x1912)) x1996) (= (x1845 160) x1371) (= x4253 (x1845 128)) (= (x1845 160) x2521) (= (x1845 160) x3704) (= (x1845 192) x1260) (= x392 (x1845 128)) (= x155 (x998 x4046 x392 x811 x1260)) (= x3249 (x1845 128)) (= (x1845 224) x1606) (= x1602 (x3747 (- x2338 128))) (= (x1845 160) x2913) (= (x1845 160) x689) (= x1835 (x1845 192)) (= x2438 (x2900 0)) (= x303 (x1845 224)) (= (- x1602 32) x4046) (<= x1602 224) (= x387 (x1845 160)) (= x3617 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) (= x1206 (x1845 128)) (= (x1845 256) x1817) (= x811 (x1845 160)) (= (x1845 192) x124) (= x1267 (x1845 224)) (= x3424 (x3876 x1602 x4253)) (= x2414 (x1845 160)) (= x2365 (x1845 224)) (= (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452) x3350) (= x2068 (x1304 (+ x1912 128))) (= x3679 (x1845 288)) (<= 32 x1602) (= x1617 (x1845 256)) (= x815 (x1057 x1602 x1386 x1073 x4039 x398 x3637)) (= (x1845 192) x3488) (= (x1845 288) x1452) (= x1645 (x1845 128)) (= x1075 (x1845 192)) (= x1476 (x1845 192)) (= x1878 (x1845 128)) (= (x1845 224) x1512) (= (ite (= x4046 0) x2438 (ite (<= x4046 32) x49 (ite (>= 64 x4046) x2143 (ite (>= 96 x4046) x155 (ite (>= 128 x4046) x1774 (ite (>= 160 x4046) x3617 x3350)))))) x4177) (= x3544 (x1502 64 x3389 7)) (= (x3876 x4046 x3249) x49) (= x1073 (x1845 160)) (= (x1845 128) x634) (= x2338 (x1304 (+ x1996 32))) (= x3532 (x1845 128)) (= (x998 x1602 x1878 x2521 x1476) x2066) (= (x1845 128) x1101) (= (x2724 x4046 x1101 x210 x3488 x1098) x1774) (= x2143 (x1502 x4046 x3532 x1371)) (= (x1845 224) x1098) (= (x1845 192) x4039) (= (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679) x504) (= x210 (x1845 160)) (= (x1845 256) x2134)) (or (and (and (= false x2590) (= x3320 132) (= x1185 true)) x2129) (and (and (or (and (not x1644) (and (= false x1283) (= 132 x3320) (= true x539))) (and (and (= (x555 288) x2408) (= x1597 (x1808 x3256)) (>= x1497 161) (<= x3659 224) (= (x555 224) x3933) (= x1275 128) (= x589 (x555 192)) (= (x1502 x314 x1770 x116) x4009) (= (x555 128) x4072) (= (x555 192) x3871) (= x632 (x1304 (+ x3256 32))) (= (x555 224) x3910) (= x1770 (x555 128)) (= (x555 160) x1761) (= x307 (x555 320)) (= x1451 (x1304 (+ x1912 160))) (= (x3876 x314 x1122) x654) (= x2424 (x555 224)) (= (* x1642 32) x1548) (= (x1304 (+ x4000 x632)) x2577) (= x8 (x555 224)) (= (x555 128) x1122) (= x3256 (+ 160 x2446)) (= x314 (- x3659 32)) (= (* x2188 32) x2446) (= x1608 (x555 128)) (= x86 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) (= (x555 128) x1593) (= x4355 (x555 160)) (= x3484 (x555 192)) (= (x1304 (+ x4000 31)) x3093) (= x3722 (x2900 0)) (= x116 (x555 160)) (= true x1060) (= (x555 160) x650) (or (<= x1912 115792089237316195423570985008687907853269984665640564039457584007913129639744) (>= x1912 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x1502 64 x3389 7) x1942) (= x1860 (x1304 (+ 128 x1912))) (= x1401 (x555 192)) (= (x555 160) x1561) (= (x555 192) x3742) (= x3320 0) (= x2188 (div x3999 32)) (= (x3876 x3659 x3925) x1700) (= x11 (x555 160)) (= x3906 (x555 160)) (= (x998 x314 x2347 x3906 x3871) x2440) (= (x998 x3659 x3934 x1561 x3484) x72) (= x402 (x555 160)) (= (x555 256) x3055) (= x1066 (x555 160)) (= (x555 192) x1008) (= x2700 (x1057 x3659 x1608 x1761 x1401 x1199 x1664)) (= x1494 (x555 128)) (= x2611 (x555 160)) (= x995 (x555 128)) (= (x555 128) x3934) (< x3256 x1497) (= (x555 224) x3537) (= (x555 192) x3434) (= (x555 256) x2964) (= x1642 (div x3093 32)) (= (x555 128) x2105) (= (x555 256) x1829) (or (>= 31 x1597) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1597)) (= (x555 288) x202) (= (x1502 64 x3269 (ite (>= 32 x3659) x1700 (ite (>= 64 x3659) x1339 (ite (<= x3659 96) x72 (ite (<= x3659 128) x176 (ite (>= 160 x3659) x2700 (ite (<= x3659 192) x4323 x1811))))))) x3227) (= x4087 (x555 224)) (= x1891 (x555 128)) (= (x2724 x3659 x1593 x650 x3229 x2424) x176) (= (x1057 x314 x2105 x1066 x589 x3537 x3055) x3181) (= x4323 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408)) (= x3229 (x555 192)) (= x186 (x555 128)) (= (x555 160) x3365) (= (ite (= x314 0) x3722 (ite (>= 32 x314) x654 (ite (>= 64 x314) x4009 (ite (<= x314 96) x2440 (ite (<= x314 128) x462 (ite (>= 160 x314) x3181 x86)))))) x2216) (<= 32 x3659) (= (x1304 (+ x1912 31)) x3999) (= (x555 128) x2347) (= x2088 false) (= x3746 (x1304 (+ 32 x1548))) (= (x2569 x3659 x4072 x11 x3434 x3910 x1155 x202 x307) x1811) (= (x3747 (- (mod (+ 32 x1860) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x3659) (= (x1304 (+ 128 x1912)) x1867) (= (x555 192) x1475) (= x1433 (x555 288)) (= (x1502 x3659 x1891 x3365) x1339) (= x1199 (x555 224)) (= (x1304 (+ x3256 x3746)) x1497) (= (x555 256) x1155) (= x462 (x2724 x314 x1494 x4355 x3742 x4087)) (= x1664 (x555 256)) (= x3925 (x555 128))) x1644)) (and (= x3559 (x4081 224)) (= (x1502 x765 x1477 x822) x2349) (= x4259 (x4081 224)) (= x3705 (x4081 128)) (= (x4081 160) x2570) (= (x4081 128) x1477) (= (x2900 0) x4186) (= (x4081 160) x4353) (= (x4081 288) x1536) (= x199 (x4081 224)) (= (x3747 (- x13 128)) x765) (= x1268 (x4081 192)) (= (x3876 x765 x2929) x1543) (= x822 (x4081 160)) (= x1980 (x1057 x765 x3705 x3237 x2777 x3559 x2898)) (= x2929 (x4081 128)) (= (x4081 192) x4331) (<= x765 224) (= (x4081 128) x3691) (= x2716 (x4081 160)) (= x3870 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648)) (= x3648 (x4081 288)) (= (x4081 160) x3237) (= x317 (x4081 128)) (= (x4081 192) x3682) (= (x2569 x765 x3691 x4353 x1268 x3043 x812 x1536 x2312) x375) (= x1644 (= (ite (= x765 0) x4186 (ite (>= 32 x765) x1543 (ite (<= x765 64) x2349 (ite (>= 96 x765) x1524 (ite (<= x765 128) x1358 (ite (>= 160 x765) x1980 (ite (<= x765 192) x3870 x375))))))) x3832)) (= (x4081 128) x3941) (= x2898 (x4081 256)) (= x2197 (x4081 160)) (= x2777 (x4081 192)) (= (x4081 320) x2312) (= x490 (x4081 256)) (= x812 (x4081 256)) (= (x4081 224) x3043) (= (x998 x765 x580 x2197 x687) x1524) (= (x4081 128) x580) (= x687 (x4081 192)) (= (x1304 (+ x4000 128)) x13) (= x1358 (x2724 x765 x3941 x2716 x3682 x199)))) (not x2129)))) (not x1318)) x1148))))) (=> (and (not x528) (and (= 0 x3320) (= x3859 true) (= x1677 false))) x1148))))))))) (=> (and (and (= true x3816) (= x455 0) (= x3111 x476) (= 0 x115) (= 2 x3707) (= x162 false) (= x2069 x2773) (= x2756 x1954)) x3291) x1050)))))
(assert (x3185 x2972))
(assert (x3185 x2751))
(assert (x3185 x1369))
(assert (x3185 x4190))
(assert (x3724 x4112))
(assert (> (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408) 10000))
(assert (not (x3387 (x1502 64 x2805 36))))
(assert (=> (>= 10000 x307) (= (x1946 x307) 0)))
(assert (= x1376 x863))
(assert (= (x1502 x3659 x1891 x3365) (x1946 (x1502 x3659 x1891 x3365))))
(assert (x3185 x1196))
(assert (= (x3876 x2757 x2831) (x1946 (x3876 x2757 x2831))))
(assert (x3185 x2115))
(assert (x3185 x958))
(assert (= 64 (x3590 (x1502 64 x358 (ite (>= 32 x2762) x4199 (ite (<= x2762 64) x2199 (ite (>= 96 x2762) x381 (ite (<= x2762 128) x359 (ite (>= 160 x2762) x4327 (ite (>= 192 x2762) x3047 x4300))))))))))
(assert (x3185 x638))
(assert (= (and (not x870) x2192) x711))
(assert (x3185 x334))
(assert (x3185 x1664))
(assert (x3185 x3229))
(assert (=> (>= 10000 x4137) (= 0 (x1946 x4137))))
(assert (x3185 x3569))
(assert (= x1810 (x4053 (x1502 64 x1810 36))))
(assert (=> (<= x3461 10000) (= 0 (x1946 x3461))))
(assert (=> (<= x3742 10000) (= 0 (x1946 x3742))))
(assert (= (x4053 (x3876 32 103)) 103))
(assert (=> (>= 10000 x3188) (= 0 (x1946 x3188))))
(assert (= x775 (x4053 (x1502 64 x775 5))))
(assert (= (x2443 (x998 x2497 x547 x3927 x1291)) x1291))
(assert (x3185 x4292))
(assert (x3185 x1357))
(assert (x3387 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (x3185 x1913))
(assert (x3185 x699))
(assert (x3185 x1522))
(assert (x3185 x2253))
(assert (x3185 x3338))
(assert (x3185 x2105))
(assert (= (x2443 (x998 x3461 x4241 x3959 x3374)) x3374))
(assert (= x2792 (and x3472 x1108)))
(assert (= x1792 (and x1618 x2950)))
(assert (x3185 x2058))
(assert (= (and (not x3581) x2064) x2094))
(assert (= (x2248 (x1502 64 x4075 36)) 36))
(assert (x3185 x1353))
(assert (x3185 x3448))
(assert (x3185 x2031))
(assert (x3185 x2668))
(assert (= (x3590 (x3876 x2762 x525)) x2762))
(assert (x3185 x490))
(assert (= 64 (x3590 (x1502 64 x3903 5))))
(assert (= (x2387 x314 x186 x402 x1475 x8 x1829 x1433) (x1946 (x2387 x314 x186 x402 x1475 x8 x1829 x1433))))
(assert (=> (<= x557 10000) (= (x1946 x557) 0)))
(assert (x3185 x4223))
(assert (x3185 x3689))
(assert (x3185 x251))
(assert (< (x1502 x4046 x3532 x1371) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x3049))
(assert (< 10000 (x1057 x2497 x4380 x1265 x573 x3485 x448)))
(assert (= (x1946 (x1502 64 x1682 12)) (x1502 64 x1682 12)))
(assert (x3185 x458))
(assert (x3185 x3969))
(assert (x3185 x708))
(assert (x3185 x1370))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x3185 x1398))
(assert (not (x3387 (x3876 32 x3469))))
(assert (=> (<= x1260 10000) (= 0 (x1946 x1260))))
(assert (= (x998 x2757 x1058 x3931 x3188) (x1946 (x998 x2757 x1058 x3931 x3188))))
(assert (= (x1946 (x2724 x314 x1494 x4355 x3742 x4087)) (x2724 x314 x1494 x4355 x3742 x4087)))
(assert (> (x1502 64 x638 36) 10000))
(assert (=> (>= 10000 x1715) (= 0 (x1946 x1715))))
(assert (=> (>= 10000 x1494) (= (x1946 x1494) 0)))
(assert (x3185 x2904))
(assert (=> (<= x737 10000) (= (x1946 x737) 0)))
(assert (not (x3387 (x1502 64 x729 11))))
(assert (x3185 x2163))
(assert (=> (>= 10000 x1878) (= (x1946 x1878) 0)))
(assert (x3185 x3055))
(assert (x3185 x387))
(assert (= (x4053 (x1502 64 x3903 4)) x3903))
(assert (x3185 x2388))
(assert (x3185 x1272))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3876 x1602 x4253)))
(assert (x3185 x1496))
(assert (x3185 x1302))
(assert (x3185 x2408))
(assert (= x2435 (or x3106 x302 x596)))
(assert (= 0 (x1946 59118985759084958080972419199848406897631161684926069324597705158744233476096)))
(assert (x3185 x3031))
(assert (= (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (= x1026 (or x1220 x679)))
(assert (=> (<= x3559 10000) (= (x1946 x3559) 0)))
(assert (x3185 x1955))
(assert (x1576 x2707))
(assert (x3185 x2879))
(assert (x3185 x431))
(assert (< (x2724 x2762 x2799 x2912 x2224 x2366) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3185 x4344))
(assert (= (x2724 x3461 x753 x465 x473 x4385) (x1946 (x2724 x3461 x753 x465 x473 x4385))))
(assert (= (x2443 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)) x1475))
(assert (= (x1946 (x1502 x2762 x3116 x1715)) (x1502 x2762 x3116 x1715)))
(assert (x3185 x2358))
(assert (= (x2900 0) (x1946 (x2900 0))))
(assert (= x2003 (x2248 (x2724 x2947 x867 x2003 x665 x2163))))
(assert (x3185 x74))
(assert (x3185 x3599))
(assert (x3185 x932))
(assert (= (or (and x2804 x3884) (and x3183 x4084)) x1735))
(assert (x3185 x3415))
(assert (x3185 x4228))
(assert (x3185 x3683))
(assert (x3185 x2871))
(assert (x3185 x1818))
(assert (x3185 x1427))
(assert (x3185 x3566))
(assert (x3185 x2719))
(assert (= 0 (x1946 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (x3185 x4270))
(assert (x3185 x2732))
(assert (x3185 x2500))
(assert (=> (>= 10000 x1227) (= 0 (x1946 x1227))))
(assert (x3185 x1733))
(assert (x3185 x2525))
(assert (x3185 x3447))
(assert (= x538 (and x2470 x1039)))
(assert (x3185 x738))
(assert (x3185 x1574))
(assert (= x796 (and (not x2595) x390)))
(assert (x3185 x60))
(assert (= (x1946 (x1502 64 x264 36)) (x1502 64 x264 36)))
(assert (x3185 x3907))
(assert (x3387 2770781680))
(assert (x3185 x1510))
(assert (= (x4053 (x998 x3461 x4241 x3959 x3374)) x4241))
(assert (= (x1946 (x1502 64 x2169 36)) (x1502 64 x2169 36)))
(assert (not (x3387 (x1057 x765 x3705 x3237 x2777 x3559 x2898))))
(assert (x3185 x291))
(assert (= true x2343))
(assert (= (and x1466 (not x4105)) x2226))
(assert (=> (>= 10000 x2517) (= 0 (x1946 x2517))))
(assert (x3185 x1275))
(assert (x3185 x3365))
(assert (=> (>= 10000 x158) (= (x1946 x158) 0)))
(assert (x3185 x3173))
(assert (x3185 x1954))
(assert (x3185 x3925))
(assert (=> (<= x2947 10000) (= (x1946 x2947) 0)))
(assert (not (x3387 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (x3185 x1747))
(assert (= (and (not x1203) x106) x1503))
(assert (x3185 x298))
(assert (x3185 x2157))
(assert (x3185 x1831))
(assert (= (x1946 x900) (x1946 (+ x900 1))))
(assert (x3185 x456))
(assert (x3185 x1728))
(assert (x3185 x3393))
(assert (x3185 x2418))
(assert (= x33 x3245))
(assert (= (x2724 x2497 x902 x3129 x3958 x1681) (x1946 (x2724 x2497 x902 x3129 x3958 x1681))))
(assert (= (=> (and (= x3493 x4292) (= x2372 0) (= (x4191 255 x452) x4292) (= x2756 x885) (= x2597 x2773) (= x4150 x2639) (= x4096 x476) (= 2 x2626)) x3259) x486))
(assert (=> (>= 10000 x811) (= 0 (x1946 x811))))
(assert (=> (<= x2365 10000) (= (x1946 x2365) 0)))
(assert (x3185 x3966))
(assert (= x3648 (x1259 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648))))
(assert (= x1632 (and x3061 x1958)))
(assert (x3185 x1417))
(assert (=> (>= 10000 x1835) (= (x1946 x1835) 0)))
(assert (x3185 x2898))
(assert (x3185 x2606))
(assert (x3185 x2026))
(assert (x3185 x3678))
(assert (= (and x3502 x2171) x302))
(assert (x3185 x3813))
(assert (x3185 x648))
(assert (x3185 x2539))
(assert (x3387 2088793519))
(assert (x3185 x1330))
(assert (x3185 x2312))
(assert (x3185 x3157))
(assert (> (x3876 x2497 x1711) 10000))
(assert (= (x1723 (x2724 x3659 x1593 x650 x3229 x2424)) x2424))
(assert (= x689 (x2248 (x2387 x1602 x1206 x689 x397 x1512 x1817 x3679))))
(assert (x3185 x2140))
(assert (x3185 x2986))
(assert (x3185 x988))
(assert (= 0 (x1946 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x3185 x3207))
(assert (< 10000 (x1502 64 x1682 12)))
(assert (x3185 x2302))
(assert (= (or x2902 x1238) x2888))
(assert (x3185 x3070))
(assert (=> (>= 10000 x2929) (= 0 (x1946 x2929))))
(assert (x3185 x1477))
(assert (x3185 x2461))
(assert (x3185 x1567))
(assert (x3185 x97))
(assert (x3185 x4251))
(assert (= x850 (x2248 (x1502 x1602 x634 x850))))
(assert (= x1067 (x2248 (x1057 x2762 x1522 x1067 x894 x26 x2402))))
(assert (= (or (and x884 x2649) (and x1088 x2694) (and x495 x2112) (and x887 x2314) (and x1721 x1973)) x3885))
(assert (= x3198 (and x3136 x3041)))
(assert (= (x1946 (x3876 x2947 x379)) (x3876 x2947 x379)))
(assert (= x1828 (x4053 (x1502 64 x1828 36))))
(assert (= (x3590 (x1502 64 x2169 2)) 64))
(assert (x3185 x1276))
(assert (=> (<= x2665 10000) (= (x1946 x2665) 0)))
(assert (=> (>= 10000 x465) (= 0 (x1946 x465))))
(assert (= (x2834 (x1057 x2757 x737 x3759 x2513 x1837 x3104)) x3104))
(assert (=> (>= 10000 x4169) (= (x1946 x4169) 0)))
(assert (x3212 x252))
(assert (= (x4053 (x2724 x1602 x2205 x3704 x124 x303)) x2205))
(assert (x3185 x1642))
(assert (= x4331 (x2443 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648))))
(assert (= x2039 (x2248 (x998 x2947 x342 x2039 x1272))))
(assert (= x1522 (x4053 (x1057 x2762 x1522 x1067 x894 x26 x2402))))
(assert (= (x1723 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689)) x2593))
(assert (= 32 (x3590 (x3876 32 103))))
(assert (x2187 x2541))
(assert (x3185 x1614))
(assert (x3185 x2321))
(assert (not (x3387 (x3876 32 103))))
(assert (x3185 x2310))
(assert (x3185 x2224))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x264 36)))
(assert (x3185 x3305))
(assert (x3185 x1881))
(assert (=> (<= x1433 10000) (= 0 (x1946 x1433))))
(assert (x3638 x2144))
(assert (= x1800 (x2443 (x1057 x4046 x1645 x387 x1800 x1267 x1617))))
(assert (x3185 x775))
(assert (x3185 x569))
(assert (=> (<= x3959 10000) (= (x1946 x3959) 0)))
(assert (x3185 x4061))
(assert (= x4002 (and x1264 x2154)))
(assert (x3185 x2365))
(assert (< 10000 (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (>= 64 x2762) x2199 (ite (>= 96 x2762) x381 (ite (<= x2762 128) x359 (ite (<= x2762 160) x4327 (ite (<= x2762 192) x3047 x4300)))))))))
(assert (not (x3387 (x1502 64 x1107 6))))
(assert (x3185 x2478))
(assert (= (or (and x2619 x2621) (and x2650 x2128)) x749))
(assert (x2097 x276))
(assert (x3185 x934))
(assert (x3185 x2252))
(assert (= (x2248 (x1502 64 x358 (ite (>= 32 x2497) x857 (ite (>= 64 x2497) x2024 (ite (>= 96 x2497) x4359 (ite (>= 128 x2497) x1097 (ite (<= x2497 160) x1313 (ite (>= 192 x2497) x1435 x1931)))))))) (ite (>= 32 x2497) x857 (ite (>= 64 x2497) x2024 (ite (<= x2497 96) x4359 (ite (<= x2497 128) x1097 (ite (>= 160 x2497) x1313 (ite (>= 192 x2497) x1435 x1931))))))))
(assert (x3185 x218))
(assert (x3185 x2780))
(assert (= (or x1379 x854) x4374))
(assert (x3185 x3373))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x358 (ite (<= x2762 32) x4199 (ite (>= 64 x2762) x2199 (ite (<= x2762 96) x381 (ite (>= 128 x2762) x359 (ite (<= x2762 160) x4327 (ite (<= x2762 192) x3047 x4300)))))))))
(assert (x3185 x3206))
(assert (x3185 x901))
(assert (= (and x2082 (not x2022)) x3554))
(assert (= (or x241 x1832) x1488))
(assert (= x1606 (x1723 (x2387 x4046 x3599 x2414 x1835 x1606 x2134 x1452))))
(assert (x3185 x1482))
(assert (x3185 x3645))
(assert (x3185 x1015))
(assert (= x2433 (and (not x3884) x2804)))
(assert (x3185 x4056))
(assert (= x3739 (and x3151 (not x1755))))
(assert (x3185 x2285))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x998 x2497 x547 x3927 x1291)))
(assert (x3185 x1217))
(assert (x3185 x1478))
(assert (=> (<= x3933 10000) (= (x1946 x3933) 0)))
(assert (x3185 x623))
(assert (not (x3387 (x2387 x765 x317 x2570 x4331 x4259 x490 x3648))))
(assert (x2097 1))
(assert (= x3915 (and x4016 x3693)))
(assert (x3185 x1352))
(assert (x3185 x2971))
(assert (= (x2248 (x1502 x2757 x903 x2989)) x2989))
(assert (x3185 x4367))
(assert (x3185 x1581))
(assert (x3185 x344))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x1810 36)))
(assert (< 10000 (x1502 64 x2169 36)))
(assert (x3185 x3548))
(assert (= x3933 (x1723 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (x3185 x1373))
(assert (x2097 x218))
(assert (= (and (not x4264) x550) x1100))
(assert (x3185 x3973))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x264 2)))
(assert (x3185 x3141))
(assert (= (and (not x4309) x500) x583))
(assert (x3185 x3848))
(assert (x3212 x276))
(assert (= (x2248 (x1502 64 x4189 6)) 6))
(assert (= (x1723 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) x1267))
(assert (not (x3387 (x1502 64 x264 36))))
(assert (x3185 x3531))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x314 x186 x402 x1475 x8 x1829 x1433)))
(assert (=> (>= 10000 x2989) (= 0 (x1946 x2989))))
(assert (x3185 x2423))
(assert (= (x3590 (x1502 64 x4189 6)) 64))
(assert (= x1075 (x2443 (x2569 x1602 x2517 x2913 x1075 x2365 x2296 x1411 x542))))
(assert (x3185 x289))
(assert (= (x2248 (x1057 x2947 x1589 x1322 x3543 x4228 x517)) x1322))
(assert (x2097 x343))
(assert (= 0 (x1946 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x2210 (x4053 (x1502 x2497 x2210 x1219))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2387 x3461 x1552 x4051 x3966 x2593 x3097 x1689)))
(assert (x3185 x3927))
(assert (x3185 x3067))
(assert (x3185 x3744))
(assert (= (x2248 (x2387 x2757 x4137 x2477 x738 x3144 x910 x3548)) x2477))
(assert (x3185 x2702))
(assert (= (x1946 (x1057 x4046 x1645 x387 x1800 x1267 x1617)) (x1057 x4046 x1645 x387 x1800 x1267 x1617)))
(assert (< 10000 (x1502 64 x3903 4)))
(assert (x3185 x4356))
(assert (x3185 x704))
(assert (= x3232 (and (not x1074) x2435)))
(assert (x3185 x1835))
(assert (= x2762 (x3590 (x1502 x2762 x3116 x1715))))
(assert (= x3719 (and (not x2170) x4283)))
(assert (not (x3387 (x1502 x2757 x903 x2989))))
(assert (x3185 x4316))
(assert (= (=> (and (= (= 0 x2310) x1663) (or (and (and (= x3932 x1217) (= x3192 x1510) (= x1555 x4226) (= x3078 x1262) (= x1196 x2310) (= x1793 x1822) (= x4311 x741) (= x3253 x1144) (= x3690 x3686) (= x1933 x4119) (= x561 x3466) (= x3880 x4136) (= x1679 x990) (= x2488 x2019) (= x209 x3464)) (not x1663)) (and (and (= (ite (= x2310 0) x441 0) x3905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x818) (= x1822 x1793) (= x818 x529) (= x1555 x4226) (= x1933 x4119) (= x3932 x1217) (= x1510 x3192) (= x2488 x2019) (= x818 (+ x3712 x3905)) (= x4311 x741) (= x2310 x1196) (= x209 x3464) (= (x1993 x4280) x2741) (= x4136 x3880) (= x1262 x3078) (= x1585 (- x2741 x3905)) (= x561 x3466) (= x3690 x3686) (= x990 x1679) (= x3712 (x659 x977)) (<= 0 x818) (= x3253 x1144) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3905 x3712))) x1663))) x2236) x1321))
(assert (= x3249 (x4053 (x3876 x4046 x3249))))
(assert (= (x1723 (x2724 x2757 x158 x4169 x2665 x829)) x829))
(assert (x3185 x56))
(assert (x3185 x3523))
(assert (= (and x1797 x3193) x3710))
(assert (x3185 x4117))
(assert (= (x1946 (x3876 x2497 x1711)) (x3876 x2497 x1711)))
(assert (= x2611 (x2248 (x2387 x3659 x995 x2611 x1008 x3933 x2964 x2408))))
(assert (= (x1946 3628442803) 0))
(assert (x3185 x1003))
(assert (x2097 x3304))
(assert (x3185 x4239))
(assert (x3387 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x3185 x2013))
(assert (=> (<= x3396 10000) (= (x1946 x3396) 0)))
(assert (not (x3387 (x2724 x765 x3941 x2716 x3682 x199))))
(assert (x3185 x1941))
(assert (x3185 x4120))
(assert (x3185 x1116))
(assert (= (x2248 (x1502 64 1 x2364)) x2364))
(assert (= (or x3802 x1886 x791) x2150))
(assert (x3185 x2830))
(assert (< 10000 (x2569 x2497 x1724 x280 x97 x3128 x1280 x1133 x3656)))
(assert (= x3461 (x3590 (x2724 x3461 x753 x465 x473 x4385))))
(assert (x3185 x1647))
(assert (= (x4053 (x998 x2762 x165 x458 x1789)) x165))
(assert (= (and x2101 (not x1754)) x2636))
(assert (= (=> (and (= x1649 x2488) (= x3940 x561) (= x3192 x1011) (= x806 x4136) (= x4119 x3844) (= x1822 x3164) (= x4311 x2696) (= x990 x3758) (= 0 x2310) (= x4280 x1144) (= 2 x1919) (= x3690 x3824) (= (x4191 255 x3286) x1011) (= x3078 x3274) (= x3903 x4226) (= x1418 x1217) (= x3464 x3141)) x1321) x1036))
(assert (= (x2834 (x1057 x3461 x2214 x148 x1988 x1961 x1554)) x1554))
(assert (= (=> (and (or (and x3241 (and (= x1670 x2586) (= x29 x4314) (= x3601 x222) (<= x1670 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3275 (x2151 x1482)) (< (+ x3275 x3332) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x1408 x3332) x2384) (= x1670 (+ x3332 x3275)) (= x3332 (ite (= x1257 0) x2047 0)) (= x1408 (x2567 x313)) (<= 0 x1670) (= x1472 x3427) (= x620 x1257))) (and (and (= x3427 x1472) (= x4314 x29) (= x222 x3601) (= x1257 x620)) (not x3241))) (= x3241 (= 0 x1257))) x1327) x3916))
(assert (=> (>= 10000 x1441) (= (x1946 x1441) 0)))
(assert (x3185 x944))
(assert (= x1633 (and x2455 x117)))
(assert (x3185 x2069))
(assert (x3185 x1514))
(assert (x3185 x1137))
(assert (x3185 x2513))
(assert (x3185 x2208))
(assert (x3185 x214))
(assert (not (x3387 (x1502 64 x4113 36))))
(assert (< 10000 (x998 x3659 x3934 x1561 x3484)))
(assert (x3185 x4314))
(assert (x3185 x109))
(assert (= x4334 (or x2680 x151)))
(assert (= x110 (and x3911 (not x3519))))
(assert (= (x1946 (x1502 64 x3269 (ite (<= x1602 32) x3424 (ite (>= 64 x1602) x2870 (ite (<= x1602 96) x2066 (ite (<= x1602 128) x2332 (ite (<= x1602 160) x815 (ite (<= x1602 192) x504 x2658)))))))) (x1502 64 x3269 (ite (>= 32 x1602) x3424 (ite (<= x1602 64) x2870 (ite (>= 96 x1602) x2066 (ite (>= 128 x1602) x2332 (ite (<= x1602 160) x815 (ite (>= 192 x1602) x504 x2658)))))))))
(assert (x3185 x148))
(assert (= x120 (and (not x3978) x2792)))
(assert (= (x3590 (x1502 64 x775 5)) 64))
(assert (= x145 (and x780 x3232)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1057 x3461 x2214 x148 x1988 x1961 x1554)))
(assert (x3185 x3163))
(assert (x3185 x3999))
(assert (x3185 x1996))
(assert (not (x3387 (x2387 x2762 x2200 x4364 x557 x3264 x2232 x2602))))
(assert (= x753 (x4053 (x2724 x3461 x753 x465 x473 x4385))))
(assert (x3185 x2520))
(assert (x3185 x3769))
(assert (x3387 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (= x151 (and (not x3265) x1407)))
(assert (not (x3387 (x1502 64 x1810 36))))
(assert (x3185 x3607))
(assert (=> (<= x1689 10000) (= 0 (x1946 x1689))))
(assert (=> (<= x4331 10000) (= (x1946 x4331) 0)))
(assert (= (x1946 35477284059277649309253622239531857712935939529143554018288893216769000107873) 0))
(assert (=> (<= x2611 10000) (= 0 (x1946 x2611))))
(assert (x3387 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x3590 (x1502 x3461 x1216 x2043)) x3461))
(assert (= (x3590 (x1502 64 x3903 4)) 64))
(assert (x3185 x3572))
(assert (=> (<= x4116 10000) (= (x1946 x4116) 0)))
(assert (x3185 x3897))
(assert (x3185 x3573))
(assert (= (=> (and (= x476 x3976) (= x656 x775) (= x2756 x190) (= 0 x2330) (= x2873 x4205) (= x437 x1464) (= 2 x1733) (= x941 x1580) (= x437 (x4191 255 x452)) (= x3489 x2264) (= 0 x4198) (= false x3694) (= x3668 x4038) (= true x3920) (= x252 x3677) (= x1354 x1818) (= x1208 x276) (= x623 x2478) (= x2773 x669)) x263) x1289))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1502 64 x3389 7)))
(assert (=> (>= 10000 x617) (= 0 (x1946 x617))))
(assert (= (and x4271 (not x225)) x4154))
(assert (= (x1946 x2449) (x1946 (+ 2 x2449))))
(assert (x3185 x398))
(assert (x3185 x2422))
(assert (x3185 x245))
(assert (= (x2443 (x998 x314 x2347 x3906 x3871)) x3871))
(assert (x3185 x3357))
(assert (x3185 x540))
(assert (x3185 x1202))
(assert (not (x3387 (x1057 x2762 x1522 x1067 x894 x26 x2402))))
(assert (= (x2248 (x1502 64 x92 36)) 36))
(assert (< 10000 (x1502 64 x636 7)))
(assert (= 64 (x3590 (x1502 64 x3389 7))))
(assert (x3185 x990))
(assert (x3185 x2789))
(assert (x3185 x1921))
(assert (=> (>= 10000 x1664) (= (x1946 x1664) 0)))
(assert (x3185 x4073))
(check-sat)
(exit)
