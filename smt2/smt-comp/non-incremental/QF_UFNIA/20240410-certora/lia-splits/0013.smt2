(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x498 () Int)
(declare-fun x1380 () Int)
(declare-fun x2086 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x3109 () Int)
(declare-fun x3360 () Int)
(declare-fun x1437 () Int)
(declare-fun x3267 () Int)
(declare-fun x437 () Int)
(declare-fun x1367 () Int)
(declare-fun x2857 () Bool)
(declare-fun x2851 () Int)
(declare-fun x3445 () Bool)
(declare-fun x1948 () Int)
(declare-fun x907 () Int)
(declare-fun x759 () Int)
(declare-fun x3713 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x3325 () Int)
(declare-fun x3195 () Int)
(declare-fun x2462 () Int)
(declare-fun x1854 () Int)
(declare-fun x2709 () Int)
(declare-fun x2687 () Int)
(declare-fun x2688 () Bool)
(declare-fun x587 () Int)
(declare-fun x3634 () Int)
(declare-fun x3519 () Int)
(declare-fun x831 () Bool)
(declare-fun x1488 (Int) Int)
(declare-fun x2337 (Int) Int)
(declare-fun x179 () Int)
(declare-fun x613 () Bool)
(declare-fun x3550 () Int)
(declare-fun x2877 () Int)
(declare-fun x1711 () Int)
(declare-fun x870 () Bool)
(declare-fun x2508 (Int) Int)
(declare-fun x129 () Int)
(declare-fun x3773 () Bool)
(declare-fun x2862 () Int)
(declare-fun x3535 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x927 (Int) Int)
(declare-fun x3625 () Int)
(declare-fun x2737 () Int)
(declare-fun x169 () Int)
(declare-fun x2325 () Int)
(declare-fun x1258 () Int)
(declare-fun x3011 () Int)
(declare-fun x1906 (Int) Int)
(declare-fun x2106 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x918 () Int)
(declare-fun x2984 () Bool)
(declare-fun x1278 () Int)
(declare-fun x2753 (Int) Int)
(declare-fun x2002 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x747 () Int)
(declare-fun x3477 () Int)
(declare-fun x2576 () Int)
(declare-fun x3222 () Int)
(declare-fun x3339 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1474 () Int)
(declare-fun x145 () Int)
(declare-fun x1530 () Bool)
(declare-fun x3239 () Int)
(declare-fun x2747 () Int)
(declare-fun x3429 () Bool)
(declare-fun x82 () Int)
(declare-fun x57 () Int)
(declare-fun x1808 () Int)
(declare-fun x551 () Bool)
(declare-fun x3245 () Int)
(declare-fun x1979 (Int Int Int Int Int Int Int) Int)
(declare-fun x3156 () Int)
(declare-fun x1577 () Bool)
(declare-fun x821 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x557 () Bool)
(declare-fun x3301 () Int)
(declare-fun x3209 () Int)
(declare-fun x983 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x1310 () Int)
(declare-fun x3375 () Bool)
(declare-fun x3149 () Int)
(declare-fun x2073 (Int) Int)
(declare-fun x2701 () Bool)
(declare-fun x1529 () Int)
(declare-fun x3691 () Int)
(declare-fun x2680 () Int)
(declare-fun x1455 (Int) Int)
(declare-fun x2891 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x2775 () Int)
(declare-fun x2819 () Bool)
(declare-fun x243 () Int)
(declare-fun x757 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1797 () Int)
(declare-fun x2443 () Bool)
(declare-fun x3470 () Int)
(declare-fun x1654 () Int)
(declare-fun x2807 () Bool)
(declare-fun x1611 () Int)
(declare-fun x584 () Int)
(declare-fun x275 () Int)
(declare-fun x1345 () Int)
(declare-fun x832 () Int)
(declare-fun x940 () Int)
(declare-fun x2522 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x2980 () Int)
(declare-fun x2079 () Bool)
(declare-fun x2 () Bool)
(declare-fun x472 (Int) Int)
(declare-fun x473 () Int)
(declare-fun x774 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x3016 () Int)
(declare-fun x2340 (Int) Int)
(declare-fun x2804 () Bool)
(declare-fun x434 () Bool)
(declare-fun x2219 () Int)
(declare-fun x1620 () Int)
(declare-fun x3601 () Bool)
(declare-fun x312 (Int Int) Int)
(declare-fun x3271 () Bool)
(declare-fun x2596 () Int)
(declare-fun x2170 () Int)
(declare-fun x3605 (Int) Int)
(declare-fun x975 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x147 () Int)
(declare-fun x1718 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x830 (Int) Int)
(declare-fun x1841 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x1444 (Int) Int)
(declare-fun x2628 () Int)
(declare-fun x2238 () Int)
(declare-fun x3534 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x3648 () Bool)
(declare-fun x2115 () Int)
(declare-fun x2944 () Bool)
(declare-fun x545 (Int) Int)
(declare-fun x2795 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x406 () Int)
(declare-fun x213 () Int)
(declare-fun x3592 () Int)
(declare-fun x2520 () Bool)
(declare-fun x3571 () Int)
(declare-fun x1489 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x3055 () Int)
(declare-fun x341 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1590 () Int)
(declare-fun x3262 (Int) Int)
(declare-fun x2076 () Int)
(declare-fun x2871 () Int)
(declare-fun x1059 () Int)
(declare-fun x331 () Bool)
(declare-fun x1206 () Int)
(declare-fun x2556 () Int)
(declare-fun x2225 () Bool)
(declare-fun x891 () Int)
(declare-fun x2217 () Bool)
(declare-fun x3114 () Int)
(declare-fun x1673 () Int)
(declare-fun x386 () Bool)
(declare-fun x131 () Int)
(declare-fun x316 () Int)
(declare-fun x130 () Int)
(declare-fun x3396 () Int)
(declare-fun x786 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x660 () Bool)
(declare-fun x2641 () Int)
(declare-fun x155 () Bool)
(declare-fun x3369 () Bool)
(declare-fun x936 (Int) Int)
(declare-fun x633 () Int)
(declare-fun x226 () Int)
(declare-fun x3046 () Bool)
(declare-fun x441 () Bool)
(declare-fun x749 () Bool)
(declare-fun x3549 () Int)
(declare-fun x1908 (Int Int Int Int Int) Int)
(declare-fun x2270 () Bool)
(declare-fun x3232 () Int)
(declare-fun x672 () Int)
(declare-fun x3655 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x24 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x1497 () Int)
(declare-fun x1500 () Int)
(declare-fun x2849 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x910 () Int)
(declare-fun x780 () Int)
(declare-fun x1552 () Bool)
(declare-fun x2154 () Int)
(declare-fun x3127 () Int)
(declare-fun x443 () Int)
(declare-fun x2958 () Bool)
(declare-fun x3371 () Int)
(declare-fun x2843 () Bool)
(declare-fun x3707 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1126 () Int)
(declare-fun x1275 () Bool)
(declare-fun x1112 () Int)
(declare-fun x1149 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x144 () Bool)
(declare-fun x2284 () Int)
(declare-fun x3431 () Int)
(declare-fun x2739 () Bool)
(declare-fun x2841 (Int) Int)
(declare-fun x841 () Bool)
(declare-fun x449 () Int)
(declare-fun x3757 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x3049 () Int)
(declare-fun x1481 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x542 () Int)
(declare-fun x2652 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x2375 () Int)
(declare-fun x2218 () Bool)
(declare-fun x530 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x2813 () Int)
(declare-fun x2581 () Int)
(declare-fun x1457 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x3182 () Bool)
(declare-fun x2504 () Int)
(declare-fun x3260 () Bool)
(declare-fun x1306 () Int)
(declare-fun x3087 () Bool)
(declare-fun x897 () Bool)
(declare-fun x859 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x2925 () Int)
(declare-fun x2943 () Bool)
(declare-fun x3490 () Int)
(declare-fun x3518 () Int)
(declare-fun x2275 () Bool)
(declare-fun x1595 () Int)
(declare-fun x2991 () Bool)
(declare-fun x3658 () Int)
(declare-fun x3292 () Int)
(declare-fun x2978 () Bool)
(declare-fun x181 () Int)
(declare-fun x1286 () Int)
(declare-fun x1397 (Int) Int)
(declare-fun x383 (Int) Int)
(declare-fun x2390 () Bool)
(declare-fun x767 () Int)
(declare-fun x164 () Int)
(declare-fun x2726 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x3088 () Int)
(declare-fun x1886 () Int)
(declare-fun x866 () Int)
(declare-fun x662 () Int)
(declare-fun x2546 () Int)
(declare-fun x2324 () Int)
(declare-fun x2411 () Int)
(declare-fun x165 () Int)
(declare-fun x1487 () Int)
(declare-fun x2856 () Bool)
(declare-fun x3258 () Int)
(declare-fun x1965 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x555 () Bool)
(declare-fun x505 () Bool)
(declare-fun x811 () Int)
(declare-fun x1017 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x3226 () Int)
(declare-fun x1627 () Bool)
(declare-fun x833 () Bool)
(declare-fun x3291 () Int)
(declare-fun x2754 () Int)
(declare-fun x765 () Int)
(declare-fun x1564 () Bool)
(declare-fun x1926 () Int)
(declare-fun x305 () Bool)
(declare-fun x902 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x862 (Int) Int)
(declare-fun x1102 (Int) Int)
(declare-fun x2320 () Bool)
(declare-fun x1405 () Int)
(declare-fun x300 () Int)
(declare-fun x1505 () Int)
(declare-fun x1612 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x1681 () Int)
(declare-fun x172 () Int)
(declare-fun x819 () Int)
(declare-fun x2173 () Bool)
(declare-fun x1353 () Int)
(declare-fun x639 () Bool)
(declare-fun x3614 () Int)
(declare-fun x1695 () Int)
(declare-fun x3570 () Int)
(declare-fun x501 () Int)
(declare-fun x1049 () Int)
(declare-fun x3745 () Int)
(declare-fun x3497 (Int) Int)
(declare-fun x2906 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1539 () Int)
(declare-fun x3315 () Int)
(declare-fun x395 () Bool)
(declare-fun x1002 () Int)
(declare-fun x339 (Int) Int)
(declare-fun x1586 () Bool)
(declare-fun x229 () Int)
(declare-fun x174 () Int)
(declare-fun x2587 () Int)
(declare-fun x199 () Int)
(declare-fun x3504 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1280 () Int)
(declare-fun x1139 () Int)
(declare-fun x1672 () Int)
(declare-fun x2485 () Int)
(declare-fun x1753 () Int)
(declare-fun x2060 () Int)
(declare-fun x2001 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x1942 () Int)
(declare-fun x2200 (Int) Int)
(declare-fun x3459 () Int)
(declare-fun x3558 () Int)
(declare-fun x405 (Int) Int)
(declare-fun x733 () Bool)
(declare-fun x102 () Int)
(declare-fun x575 () Bool)
(declare-fun x313 () Bool)
(declare-fun x552 () Int)
(declare-fun x1643 () Int)
(declare-fun x3506 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1575 () Int)
(declare-fun x1858 (Int) Int)
(declare-fun x531 () Bool)
(declare-fun x3132 () Int)
(declare-fun x623 () Bool)
(declare-fun x753 (Int) Int)
(declare-fun x2307 () Int)
(declare-fun x409 () Int)
(declare-fun x1246 () Int)
(declare-fun x2577 () Int)
(declare-fun x2465 () Bool)
(declare-fun x842 () Int)
(declare-fun x3452 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x408 () Int)
(declare-fun x618 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x1553 () Int)
(declare-fun x2572 () Bool)
(declare-fun x1193 () Int)
(declare-fun x46 () Int)
(declare-fun x1249 () Int)
(declare-fun x3424 () Int)
(declare-fun x2505 () Int)
(declare-fun x688 () Int)
(declare-fun x2467 () Int)
(declare-fun x3525 () Int)
(declare-fun x186 () Bool)
(declare-fun x29 () Bool)
(declare-fun x2717 (Int) Int)
(declare-fun x3656 () Int)
(declare-fun x1646 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x2410 (Int) Int)
(declare-fun x484 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x1863 () Int)
(declare-fun x1403 () Int)
(declare-fun x2934 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x2542 () Int)
(declare-fun x645 () Int)
(declare-fun x420 (Int) Int)
(declare-fun x2157 () Int)
(declare-fun x853 () Bool)
(declare-fun x1706 () Int)
(declare-fun x839 () Bool)
(declare-fun x291 () Bool)
(declare-fun x2005 () Int)
(declare-fun x742 () Int)
(declare-fun x240 () Int)
(declare-fun x901 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1570 () Int)
(declare-fun x719 () Int)
(declare-fun x380 () Bool)
(declare-fun x3772 () Int)
(declare-fun x2434 () Int)
(declare-fun x2548 () Bool)
(declare-fun x2352 () Int)
(declare-fun x483 () Int)
(declare-fun x3160 () Bool)
(declare-fun x238 () Int)
(declare-fun x3351 () Int)
(declare-fun x1759 () Int)
(declare-fun x1549 (Int) Int)
(declare-fun x2014 () Bool)
(declare-fun x754 (Int) Int)
(declare-fun x695 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x2612 () Int)
(declare-fun x3688 () Bool)
(declare-fun x2089 (Int) Int)
(declare-fun x134 () Int)
(declare-fun x2839 () Int)
(declare-fun x1835 () Bool)
(declare-fun x2404 () Int)
(declare-fun x914 () Bool)
(declare-fun x4 () Bool)
(declare-fun x440 () Int)
(declare-fun x2714 () Int)
(declare-fun x1450 () Int)
(declare-fun x2190 () Bool)
(declare-fun x2996 () Int)
(declare-fun x2316 () Int)
(declare-fun x1391 () Bool)
(declare-fun x2910 () Int)
(declare-fun x1953 () Int)
(declare-fun x1518 () Bool)
(declare-fun x586 (Int) Int)
(declare-fun x379 () Bool)
(declare-fun x1 () Int)
(declare-fun x1336 () Int)
(declare-fun x544 () Bool)
(declare-fun x1408 () Int)
(declare-fun x2594 () Int)
(declare-fun x256 () Bool)
(declare-fun x328 () Int)
(declare-fun x1983 () Bool)
(declare-fun x3008 () Int)
(declare-fun x920 () Bool)
(declare-fun x2598 () Int)
(declare-fun x782 () Int)
(declare-fun x3505 () Bool)
(declare-fun x609 () Int)
(declare-fun x1807 () Int)
(declare-fun x325 () Bool)
(declare-fun x851 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x2686 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1700 () Int)
(declare-fun x2395 () Int)
(declare-fun x482 () Int)
(declare-fun x2171 () Int)
(declare-fun x3288 () Bool)
(declare-fun x745 () Bool)
(declare-fun x3092 () Int)
(declare-fun x1338 () Bool)
(declare-fun x967 () Int)
(declare-fun x1482 () Int)
(declare-fun x2674 () Int)
(declare-fun x3353 () Int)
(declare-fun x2916 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x933 () Bool)
(declare-fun x3758 () Int)
(declare-fun x1865 () Int)
(declare-fun x413 () Int)
(declare-fun x1757 () Bool)
(declare-fun x905 () Int)
(declare-fun x3455 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x3580 (Int) Int)
(declare-fun x1701 () Int)
(declare-fun x2349 () Int)
(declare-fun x1120 () Int)
(declare-fun x492 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x1728 () Int)
(declare-fun x700 () Int)
(declare-fun x2474 () Bool)
(declare-fun x885 () Int)
(declare-fun x2889 (Int) Int)
(declare-fun x2630 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x929 () Bool)
(declare-fun x2731 () Int)
(declare-fun x2211 () Bool)
(declare-fun x304 () Bool)
(declare-fun x1166 () Int)
(declare-fun x2373 () Int)
(declare-fun x3331 () Bool)
(declare-fun x636 () Bool)
(declare-fun x462 () Int)
(declare-fun x1547 (Int) Int)
(declare-fun x3701 () Int)
(declare-fun x2454 () Bool)
(declare-fun x882 () Bool)
(declare-fun x739 () Int)
(declare-fun x1441 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x64 () Int)
(declare-fun x417 () Int)
(declare-fun x1389 () Bool)
(declare-fun x1973 () Int)
(declare-fun x626 () Bool)
(declare-fun x883 (Int) Int)
(declare-fun x1506 () Bool)
(declare-fun x2137 () Int)
(declare-fun x960 () Int)
(declare-fun x3583 () Int)
(declare-fun x1442 () Int)
(declare-fun x2123 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x728 () Int)
(declare-fun x1114 () Int)
(declare-fun x1541 () Int)
(declare-fun x1997 () Int)
(declare-fun x1699 () Int)
(declare-fun x1029 () Bool)
(declare-fun x743 () Int)
(declare-fun x2689 () Int)
(declare-fun x1960 (Int) Int)
(declare-fun x1182 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x2610 () Int)
(declare-fun x3409 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x1652 (Int) Int)
(declare-fun x3025 () Int)
(declare-fun x2085 () Bool)
(declare-fun x2392 (Int) Int)
(declare-fun x2361 () Bool)
(declare-fun x2151 () Int)
(declare-fun x1109 () Bool)
(declare-fun x3590 () Int)
(declare-fun x2140 () Bool)
(declare-fun x324 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x1034 () Int)
(declare-fun x2511 () Bool)
(declare-fun x3107 () Int)
(declare-fun x3527 () Int)
(declare-fun x245 () Int)
(declare-fun x2413 () Int)
(declare-fun x3482 () Bool)
(declare-fun x1212 (Int) Int)
(declare-fun x704 () Int)
(declare-fun x1372 () Int)
(declare-fun x3201 () Int)
(declare-fun x233 () Int)
(declare-fun x3507 () Int)
(declare-fun x2229 () Bool)
(declare-fun x2625 () Int)
(declare-fun x3244 () Bool)
(declare-fun x423 () Int)
(declare-fun x2241 () Bool)
(declare-fun x879 () Int)
(declare-fun x2182 () Int)
(declare-fun x713 () Bool)
(declare-fun x426 () Int)
(declare-fun x1895 () Int)
(declare-fun x1220 () Int)
(declare-fun x3012 () Int)
(declare-fun x2535 () Int)
(declare-fun x2793 () Int)
(declare-fun x1802 () Int)
(declare-fun x761 () Bool)
(declare-fun x2315 () Int)
(declare-fun x3733 () Int)
(declare-fun x2847 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1319 () Int)
(declare-fun x314 () Int)
(declare-fun x3036 () Bool)
(declare-fun x2875 () Int)
(declare-fun x3053 () Int)
(declare-fun x1163 () Int)
(declare-fun x2487 () Int)
(declare-fun x1287 () Int)
(declare-fun x1078 () Int)
(declare-fun x1132 () Int)
(declare-fun x176 () Int)
(declare-fun x350 () Int)
(declare-fun x651 () Int)
(declare-fun x1416 () Int)
(declare-fun x296 () Bool)
(declare-fun x2517 () Int)
(declare-fun x581 () Bool)
(declare-fun x590 () Bool)
(declare-fun x2619 () Int)
(declare-fun x1140 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x2997 () Int)
(declare-fun x1561 () Int)
(declare-fun x3444 (Int) Int)
(declare-fun x3380 () Bool)
(declare-fun x1565 () Int)
(declare-fun x51 () Int)
(declare-fun x1207 () Int)
(declare-fun x1752 () Bool)
(declare-fun x3240 () Int)
(declare-fun x945 () Bool)
(declare-fun x35 (Int) Int)
(declare-fun x571 () Bool)
(declare-fun x2646 () Int)
(declare-fun x775 () Bool)
(declare-fun x3227 () Int)
(declare-fun x1775 () Int)
(declare-fun x1373 () Bool)
(declare-fun x2038 (Int) Int)
(declare-fun x1949 () Bool)
(declare-fun x2216 () Int)
(declare-fun x2702 () Int)
(declare-fun x2616 () Int)
(declare-fun x2183 () Int)
(declare-fun x1368 () Int)
(declare-fun x2226 () Int)
(declare-fun x823 () Int)
(declare-fun x476 () Int)
(declare-fun x2989 () Int)
(declare-fun x1101 () Int)
(declare-fun x1376 () Int)
(declare-fun x2678 () Int)
(declare-fun x3483 () Bool)
(declare-fun x1569 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x3074 () Bool)
(declare-fun x329 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1812 () Int)
(declare-fun x2909 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x1295 () Int)
(declare-fun x1944 () Bool)
(declare-fun x2935 () Int)
(declare-fun x1433 () Int)
(declare-fun x503 () Bool)
(declare-fun x168 () Bool)
(declare-fun x2888 (Int) Int)
(declare-fun x1829 () Int)
(declare-fun x197 () Int)
(declare-fun x480 (Int) Int)
(declare-fun x2004 () Int)
(declare-fun x3593 (Int) Int)
(declare-fun x2632 () Int)
(declare-fun x1656 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x119 () Int)
(declare-fun x1923 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x3572 () Int)
(declare-fun x91 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x3103 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x722 () Bool)
(declare-fun x567 () Int)
(declare-fun x1623 () Int)
(declare-fun x2781 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x457 () Int)
(declare-fun x3126 () Int)
(declare-fun x3719 (Int) Int)
(declare-fun x3057 () Int)
(declare-fun x265 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x3654 () Int)
(declare-fun x560 () Int)
(declare-fun x3028 () Int)
(declare-fun x3312 () Int)
(declare-fun x433 (Int) Int)
(declare-fun x2432 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x1605 () Int)
(declare-fun x3181 () Bool)
(declare-fun x3485 () Int)
(declare-fun x2087 () Int)
(declare-fun x2196 () Bool)
(declare-fun x3329 (Int) Int)
(declare-fun x1697 () Bool)
(declare-fun x1761 () Int)
(declare-fun x232 () Int)
(declare-fun x2453 () Int)
(declare-fun x353 () Int)
(declare-fun x1876 (Int) Int)
(declare-fun x2353 () Int)
(declare-fun x2727 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1204 () Int)
(declare-fun x1407 () Int)
(declare-fun x849 () Int)
(declare-fun x1454 () Int)
(declare-fun x3769 () Bool)
(declare-fun x791 () Bool)
(declare-fun x3192 () Int)
(declare-fun x2812 () Int)
(declare-fun x1860 () Int)
(declare-fun x3051 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2683 () Int)
(declare-fun x3630 () Int)
(declare-fun x2957 () Int)
(declare-fun x539 () Bool)
(declare-fun x3040 () Int)
(declare-fun x684 (Int) Int)
(declare-fun x2053 () Int)
(declare-fun x8 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x3355 () Int)
(declare-fun x2921 () Int)
(declare-fun x1710 () Bool)
(declare-fun x2445 () Int)
(declare-fun x711 () Bool)
(declare-fun x1201 () Int)
(declare-fun x3096 () Bool)
(declare-fun x355 () Int)
(declare-fun x2750 () Int)
(declare-fun x2931 () Int)
(declare-fun x1360 () Bool)
(declare-fun x1877 (Int) Int)
(declare-fun x3734 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x3223 () Int)
(declare-fun x3487 () Int)
(declare-fun x3394 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x2468 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1736 (Int Int Int) Int)
(declare-fun x3164 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x2562 () Int)
(declare-fun x2431 () Int)
(declare-fun x1857 () Int)
(declare-fun x1819 () Int)
(declare-fun x397 () Bool)
(declare-fun x878 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x2539 () Int)
(declare-fun x1252 () Int)
(declare-fun x781 () Bool)
(declare-fun x617 () Bool)
(declare-fun x2621 () Int)
(declare-fun x2662 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x974 () Int)
(declare-fun x1382 () Int)
(declare-fun x1635 (Int) Int)
(declare-fun x2665 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1563 () Int)
(declare-fun x424 () Bool)
(declare-fun x1400 (Int) Int)
(declare-fun x2808 () Int)
(declare-fun x1265 () Int)
(declare-fun x1420 () Bool)
(declare-fun x117 () Int)
(declare-fun x912 () Bool)
(declare-fun x1690 (Int) Int)
(declare-fun x3097 () Int)
(declare-fun x2446 () Bool)
(declare-fun x2964 () Int)
(declare-fun x1804 () Int)
(declare-fun x2091 () Int)
(declare-fun x778 () Bool)
(declare-fun x249 () Bool)
(declare-fun x3703 () Int)
(declare-fun x2998 () Bool)
(declare-fun x2738 () Int)
(declare-fun x508 () Int)
(declare-fun x2428 () Int)
(declare-fun x971 () Int)
(declare-fun x1524 () Int)
(declare-fun x3672 () Bool)
(declare-fun x65 (Int) Int)
(declare-fun x2707 (Int) Int)
(declare-fun x1480 () Bool)
(declare-fun x1783 () Int)
(declare-fun x2031 () Int)
(declare-fun x2959 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x3750 (Int) Int)
(declare-fun x356 () Int)
(declare-fun x3700 () Bool)
(declare-fun x2402 (Int) Int)
(declare-fun x2418 () Int)
(declare-fun x3238 () Int)
(declare-fun x1639 () Bool)
(declare-fun x2371 () Int)
(declare-fun x3231 () Int)
(declare-fun x600 () Bool)
(declare-fun x1538 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1332 () Int)
(declare-fun x3134 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x3607 () Int)
(declare-fun x2784 () Bool)
(declare-fun x2336 () Int)
(declare-fun x451 () Int)
(declare-fun x153 () Bool)
(declare-fun x1363 () Int)
(declare-fun x2863 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x2844 () Int)
(declare-fun x2681 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x3512 (Int Int Int Int) Int)
(declare-fun x3660 () Int)
(declare-fun x3308 () Bool)
(declare-fun x3402 () Int)
(declare-fun x3561 () Int)
(declare-fun x3744 () Int)
(declare-fun x2858 () Int)
(declare-fun x903 () Bool)
(declare-fun x54 () Int)
(declare-fun x69 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x1001 (Int) Int)
(declare-fun x2024 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x3629 () Int)
(declare-fun x3089 () Int)
(declare-fun x3307 () Int)
(declare-fun x3416 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1733 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1971 () Int)
(declare-fun x3653 () Int)
(declare-fun x3496 () Int)
(declare-fun x3503 () Int)
(declare-fun x2898 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x2995 () Int)
(declare-fun x1194 () Int)
(declare-fun x1800 () Int)
(declare-fun x2025 () Int)
(declare-fun x2114 () Int)
(declare-fun x1976 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1177 () Int)
(declare-fun x2047 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x3366 () Bool)
(declare-fun x3001 (Int) Int)
(declare-fun x2529 () Bool)
(declare-fun x994 () Bool)
(declare-fun x612 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x1945 () Int)
(declare-fun x2634 () Int)
(declare-fun x3026 () Int)
(declare-fun x2268 () Bool)
(declare-fun x984 () Int)
(declare-fun x2711 () Bool)
(declare-fun x307 () Int)
(declare-fun x20 (Int) Int)
(declare-fun x3237 () Int)
(declare-fun x479 () Bool)
(declare-fun x3683 () Int)
(declare-fun x515 () Int)
(declare-fun x3063 () Int)
(declare-fun x899 () Int)
(declare-fun x2918 () Int)
(declare-fun x982 () Int)
(declare-fun x2066 () Int)
(declare-fun x1419 () Int)
(declare-fun x2360 () Int)
(declare-fun x881 () Int)
(declare-fun x3294 () Int)
(declare-fun x3370 (Int) Int)
(declare-fun x1919 () Int)
(declare-fun x3647 () Bool)
(declare-fun x1903 () Int)
(declare-fun x773 (Int) Int)
(declare-fun x731 () Bool)
(declare-fun x3185 () Int)
(declare-fun x2416 () Int)
(declare-fun x1115 () Int)
(declare-fun x2242 () Bool)
(declare-fun x2384 () Int)
(declare-fun x2028 () Bool)
(declare-fun x2342 () Int)
(declare-fun x1082 (Int) Int)
(declare-fun x43 () Bool)
(declare-fun x3204 () Int)
(declare-fun x3010 () Int)
(declare-fun x2077 () Int)
(declare-fun x563 () Int)
(declare-fun x1806 () Int)
(declare-fun x336 () Int)
(declare-fun x80 () Bool)
(declare-fun x2919 () Int)
(declare-fun x1741 () Int)
(declare-fun x3323 () Int)
(declare-fun x2101 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1033 () Int)
(declare-fun x2928 () Int)
(declare-fun x3278 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x1930 () Int)
(declare-fun x844 () Int)
(declare-fun x1019 () Int)
(declare-fun x253 (Int) Int)
(declare-fun x1352 () Int)
(declare-fun x79 () Bool)
(declare-fun x3289 () Int)
(declare-fun x2305 (Int) Int)
(declare-fun x1478 () Int)
(declare-fun x1388 () Int)
(declare-fun x1052 () Int)
(declare-fun x184 () Int)
(declare-fun x1510 () Int)
(declare-fun x450 () Int)
(declare-fun x2409 () Int)
(declare-fun x2677 () Int)
(declare-fun x3579 (Int) Int)
(declare-fun x3224 () Int)
(declare-fun x3517 () Bool)
(declare-fun x962 () Bool)
(declare-fun x3623 () Int)
(declare-fun x3697 () Int)
(declare-fun x2893 () Bool)
(declare-fun x2912 () Int)
(declare-fun x3187 (Int) Int)
(declare-fun x2343 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1798 () Int)
(declare-fun x1996 () Int)
(declare-fun x3268 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1369 () Int)
(declare-fun x3676 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x2545 (Int) Int)
(declare-fun x2946 () Bool)
(declare-fun x911 () Int)
(declare-fun x1402 () Int)
(declare-fun x2300 () Bool)
(declare-fun x393 () Bool)
(declare-fun x302 () Int)
(declare-fun x2796 () Bool)
(declare-fun x2779 () Int)
(declare-fun x2459 () Bool)
(declare-fun x1769 () Int)
(declare-fun x367 () Int)
(declare-fun x2376 () Int)
(declare-fun x2682 () Bool)
(declare-fun x287 (Int) Int)
(declare-fun x1574 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x2231 () Int)
(declare-fun x34 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x1448 () Int)
(declare-fun x1917 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x1928 () Int)
(declare-fun x489 () Int)
(declare-fun x650 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x2554 () Int)
(declare-fun x1215 () Bool)
(declare-fun x294 () Int)
(declare-fun x1515 (Int) Int)
(declare-fun x2399 (Int) Int)
(declare-fun x2167 () Int)
(declare-fun x2814 () Int)
(declare-fun x1921 () Bool)
(declare-fun x770 () Int)
(declare-fun x2774 () Int)
(declare-fun x2506 () Bool)
(declare-fun x53 () Bool)
(declare-fun x805 () Bool)
(declare-fun x3435 () Int)
(declare-fun x2786 () Bool)
(declare-fun x2136 () Int)
(declare-fun x1324 () Int)
(declare-fun x1178 () Int)
(declare-fun x644 () Bool)
(declare-fun x2027 () Int)
(declare-fun x3646 () Bool)
(declare-fun x2837 () Int)
(declare-fun x1022 () Int)
(declare-fun x3675 () Int)
(declare-fun x2346 () Int)
(declare-fun x3540 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x795 () Int)
(declare-fun x2214 () Bool)
(declare-fun x1307 () Int)
(declare-fun x867 () Int)
(declare-fun x1962 () Int)
(declare-fun x1667 () Bool)
(declare-fun x2168 () Int)
(declare-fun x1754 () Int)
(declare-fun x3774 () Bool)
(declare-fun x3067 () Int)
(declare-fun x2042 () Int)
(declare-fun x2560 () Int)
(declare-fun x2429 () Bool)
(declare-fun x3633 () Int)
(declare-fun x529 (Int) Int)
(declare-fun x264 () Int)
(declare-fun x989 () Bool)
(declare-fun x3595 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1537 () Int)
(declare-fun x1567 () Bool)
(declare-fun x1088 () Int)
(declare-fun x3236 (Int) Int)
(declare-fun x2566 () Int)
(declare-fun x2245 () Int)
(declare-fun x3727 () Int)
(declare-fun x3357 () Int)
(declare-fun x1589 () Int)
(declare-fun x3090 () Bool)
(declare-fun x2559 () Int)
(declare-fun x1946 (Int) Int)
(declare-fun x973 () Bool)
(declare-fun x3256 () Bool)
(declare-fun x615 () Bool)
(declare-fun x301 () Int)
(declare-fun x343 () Int)
(declare-fun x2265 () Int)
(declare-fun x3467 () Bool)
(declare-fun x1521 () Int)
(declare-fun x2666 (Int) Int)
(declare-fun x3280 () Bool)
(declare-fun x596 () Int)
(declare-fun x3363 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x3364 (Int) Int)
(declare-fun x1985 () Int)
(declare-fun x3746 () Bool)
(declare-fun x202 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x1805 () Int)
(declare-fun x1618 () Int)
(declare-fun x2063 () Bool)
(declare-fun x323 () Int)
(declare-fun x1995 () Int)
(declare-fun x661 () Bool)
(declare-fun x107 (Int) Int)
(declare-fun x1251 () Int)
(declare-fun x848 () Bool)
(declare-fun x1232 (Int) Int)
(declare-fun x2264 () Int)
(declare-fun x680 () Bool)
(declare-fun x475 () Bool)
(declare-fun x3621 (Int) Int)
(declare-fun x1404 () Bool)
(declare-fun x2638 () Int)
(declare-fun x1496 () Int)
(declare-fun x241 (Int) Int)
(declare-fun x1688 () Bool)
(declare-fun x2040 () Int)
(declare-fun x12 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x2864 () Int)
(declare-fun x813 () Int)
(declare-fun x3538 () Int)
(declare-fun x2287 () Int)
(declare-fun x3714 () Bool)
(declare-fun x812 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x643 () Bool)
(declare-fun x730 () Int)
(declare-fun x3147 () Int)
(declare-fun x1767 () Int)
(declare-fun x934 () Int)
(declare-fun x3753 () Int)
(declare-fun x938 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1793 () Int)
(declare-fun x668 () Int)
(declare-fun x2571 () Bool)
(declare-fun x1726 () Int)
(declare-fun x59 () Int)
(declare-fun x561 () Int)
(declare-fun x3418 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x2363 () Int)
(declare-fun x1599 () Int)
(declare-fun x2719 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x2792 () Int)
(declare-fun x2758 () Int)
(declare-fun x1040 () Int)
(declare-fun x446 () Bool)
(declare-fun x157 () Int)
(declare-fun x1850 (Int) Int)
(declare-fun x3014 () Int)
(declare-fun x2798 () Bool)
(declare-fun x718 () Int)
(declare-fun x2481 () Int)
(declare-fun x1799 () Bool)
(declare-fun x2095 () Int)
(declare-fun x3345 () Bool)
(declare-fun x694 () Int)
(declare-fun x2704 () Bool)
(declare-fun x1731 () Bool)
(declare-fun x3146 () Int)
(declare-fun x1104 () Int)
(declare-fun x1064 () Bool)
(declare-fun x843 (Int) Int)
(declare-fun x964 () Bool)
(declare-fun x1152 (Int) Int)
(declare-fun x1340 () Bool)
(declare-fun x3560 (Int) Int)
(declare-fun x1687 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x500 () Int)
(declare-fun x30 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x2414 () Int)
(declare-fun x143 () Bool)
(declare-fun x173 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x58 () Int)
(declare-fun x2614 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x3274 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2669 (Int) Int)
(declare-fun x3349 () Int)
(declare-fun x310 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x947 () Int)
(declare-fun x2061 () Int)
(declare-fun x507 () Bool)
(declare-fun x987 () Int)
(declare-fun x810 () Int)
(declare-fun x642 (Int) Int)
(declare-fun x1127 () Int)
(declare-fun x864 () Int)
(declare-fun x1691 () Int)
(declare-fun x2295 () Bool)
(declare-fun x368 () Int)
(declare-fun x2894 (Int) Int)
(declare-fun x2742 () Int)
(declare-fun x3202 () Bool)
(declare-fun x3050 () Bool)
(declare-fun x2929 () Int)
(declare-fun x1069 (Int) Int)
(declare-fun x3581 () Int)
(declare-fun x277 () Bool)
(declare-fun x2172 () Int)
(declare-fun x2845 () Bool)
(declare-fun x125 () Int)
(declare-fun x1897 () Int)
(declare-fun x3708 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x2799 () Int)
(declare-fun x2787 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1067 (Int) Int)
(declare-fun x2355 () Bool)
(declare-fun x603 () Bool)
(declare-fun x109 () Bool)
(declare-fun x2497 () Int)
(declare-fun x2236 () Int)
(declare-fun x3068 () Int)
(declare-fun x1226 () Int)
(declare-fun x61 () Int)
(declare-fun x2230 () Int)
(declare-fun x278 () Int)
(declare-fun x2969 () Bool)
(declare-fun x1117 () Int)
(declare-fun x2773 () Int)
(declare-fun x2084 () Int)
(declare-fun x3499 () Int)
(declare-fun x3084 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x576 () Bool)
(declare-fun x2725 () Int)
(declare-fun x1256 (Int) Int)
(declare-fun x1849 () Int)
(declare-fun x1705 () Int)
(declare-fun x2309 () Bool)
(declare-fun x1588 () Int)
(declare-fun x2592 () Bool)
(declare-fun x459 (Int) Int)
(declare-fun x2903 (Int) Int)
(declare-fun x845 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x488 () Int)
(declare-fun x415 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x3297 () Int)
(declare-fun x3153 () Int)
(declare-fun x1137 () Bool)
(declare-fun x68 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x3594 () Bool)
(declare-fun x2313 () Int)
(declare-fun x436 () Bool)
(declare-fun x194 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1820 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x452 () Int)
(declare-fun x2547 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x2848 () Int)
(declare-fun x362 () Int)
(declare-fun x3225 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x2712 () Int)
(declare-fun x1375 () Int)
(declare-fun x3751 () Int)
(declare-fun x2134 () Int)
(declare-fun x2543 () Bool)
(declare-fun x432 (Int Int) Int)
(declare-fun x3013 () Bool)
(declare-fun x198 () Int)
(declare-fun x1269 () Int)
(declare-fun x2904 () Bool)
(declare-fun x3597 () Int)
(declare-fun x746 (Int) Int)
(declare-fun x2729 () Int)
(declare-fun x3440 () Int)
(declare-fun x3704 () Int)
(declare-fun x2147 (Int) Int)
(declare-fun x598 () Int)
(declare-fun x1273 () Bool)
(declare-fun x3328 (Int) Int)
(declare-fun x2544 () Bool)
(declare-fun x2045 (Int) Int)
(declare-fun x252 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x387 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1568 (Int) Int)
(declare-fun x3657 () Int)
(declare-fun x3161 () Int)
(declare-fun x1629 () Int)
(declare-fun x1359 () Int)
(declare-fun x1671 () Bool)
(declare-fun x1452 (Int) Int)
(declare-fun x2993 (Int) Int)
(declare-fun x1703 () Int)
(declare-fun x3494 () Bool)
(declare-fun x3401 (Int) Int)
(declare-fun x2697 () Bool)
(declare-fun x1763 () Int)
(declare-fun x48 () Int)
(declare-fun x438 () Int)
(declare-fun x70 () Bool)
(declare-fun x3 () Int)
(declare-fun x3759 () Int)
(declare-fun x2020 (Int) Int)
(declare-fun x2503 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x1468 (Int) Int)
(declare-fun x2278 () Int)
(declare-fun x2033 () Bool)
(declare-fun x2684 () Int)
(declare-fun x641 () Int)
(declare-fun x1977 () Bool)
(declare-fun x1534 () Int)
(declare-fun x752 () Int)
(declare-fun x2920 () Int)
(declare-fun x716 () Bool)
(declare-fun x1957 () Int)
(declare-fun x825 (Int) Int)
(declare-fun x214 () Bool)
(declare-fun x2131 () Int)
(declare-fun x2830 () Bool)
(declare-fun x2149 () Int)
(declare-fun x2326 () Int)
(declare-fun x972 () Int)
(declare-fun x467 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x1037 () Int)
(declare-fun x1155 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x1175 (Int) Int)
(declare-fun x1676 () Int)
(declare-fun x1583 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x274 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1910 () Int)
(declare-fun x2113 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x931 () Int)
(declare-fun x1208 () Int)
(declare-fun x2599 () Bool)
(declare-fun x2771 () Int)
(declare-fun x1271 (Int) Int)
(declare-fun x357 () Int)
(declare-fun x622 () Bool)
(declare-fun x86 () Int)
(declare-fun x1200 () Int)
(declare-fun x2951 () Int)
(declare-fun x3694 () Int)
(declare-fun x3136 () Bool)
(declare-fun x2530 () Int)
(declare-fun x3776 () Int)
(declare-fun x1818 (Int) Int)
(declare-fun x98 () Int)
(declare-fun x1822 (Int) Int)
(declare-fun x3622 () Int)
(declare-fun x1385 () Int)
(declare-fun x637 () Bool)
(declare-fun x200 () Bool)
(declare-fun x2584 () Int)
(declare-fun x1592 () Bool)
(declare-fun x2806 () Int)
(declare-fun x2762 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x3484 () Bool)
(declare-fun x1297 () Int)
(declare-fun x915 () Int)
(declare-fun x3509 () Int)
(declare-fun x3191 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1453 () Int)
(declare-fun x2676 (Int) Int)
(declare-fun x2724 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1758 () Int)
(declare-fun x3306 () Bool)
(declare-fun x1713 () Int)
(declare-fun x2080 () Bool)
(declare-fun x103 () Int)
(declare-fun x2383 () Bool)
(declare-fun x89 () Bool)
(declare-fun x734 () Int)
(declare-fun x926 () Bool)
(declare-fun x3405 () Int)
(declare-fun x846 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x1123 (Int) Int)
(declare-fun x1151 () Int)
(declare-fun x1186 () Int)
(declare-fun x2741 () Int)
(declare-fun x2552 () Int)
(declare-fun x3462 () Int)
(declare-fun x1716 () Int)
(declare-fun x1751 () Int)
(declare-fun x3711 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1118 () Int)
(declare-fun x478 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x3567 (Int) Int)
(declare-fun x1972 () Int)
(declare-fun x3141 (Int) Int)
(declare-fun x737 () Int)
(declare-fun x3388 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x2059 () Int)
(declare-fun x3463 () Int)
(declare-fun x1255 () Int)
(declare-fun x2561 () Int)
(declare-fun x817 () Bool)
(declare-fun x3385 () Int)
(declare-fun x1485 () Int)
(declare-fun x455 () Int)
(declare-fun x2224 () Int)
(declare-fun x2501 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1167 () Int)
(declare-fun x3423 () Int)
(declare-fun x3029 (Int) Int)
(declare-fun x2441 () Bool)
(declare-fun x270 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x2913 () Int)
(declare-fun x2852 () Int)
(declare-fun x1636 (Int) Int)
(declare-fun x3770 () Bool)
(declare-fun x777 () Int)
(declare-fun x3447 () Int)
(declare-fun x3054 () Int)
(declare-fun x814 () Int)
(declare-fun x800 () Int)
(declare-fun x3395 () Int)
(declare-fun x1663 () Bool)
(declare-fun x3551 () Int)
(declare-fun x3582 () Int)
(declare-fun x2019 () Bool)
(declare-fun x963 (Int) Int)
(declare-fun x2885 () Bool)
(declare-fun x917 (Int) Int)
(declare-fun x3344 () Int)
(declare-fun x3523 () Bool)
(declare-fun x2788 () Int)
(declare-fun x318 (Int) Int)
(declare-fun x2452 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x3407 (Int) Int)
(declare-fun x3417 () Int)
(declare-fun x3341 () Int)
(declare-fun x1744 (Int) Int)
(declare-fun x404 () Int)
(declare-fun x1196 () Bool)
(declare-fun x628 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x790 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x2713 () Int)
(declare-fun x3350 () Int)
(declare-fun x1427 () Bool)
(declare-fun x3677 () Bool)
(declare-fun x2643 () Int)
(declare-fun x900 () Int)
(declare-fun x3099 () Bool)
(declare-fun x3461 () Int)
(declare-fun x2302 () Int)
(declare-fun x574 () Int)
(declare-fun x2209 () Int)
(declare-fun x3671 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x514 () Bool)
(declare-fun x976 () Int)
(declare-fun x182 () Int)
(declare-fun x692 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x840 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x2647 () Int)
(declare-fun x2444 () Int)
(declare-fun x3608 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x2582 () Int)
(declare-fun x1168 (Int) Int)
(declare-fun x286 () Int)
(declare-fun x1093 () Int)
(declare-fun x1571 () Int)
(declare-fun x1576 () Int)
(declare-fun x970 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x611 () Bool)
(declare-fun x3557 (Int) Int)
(declare-fun x1479 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1073 () Int)
(declare-fun x276 () Bool)
(declare-fun x428 () Int)
(declare-fun x1882 (Int) Int)
(declare-fun x3602 () Int)
(declare-fun x474 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x2536 () Int)
(declare-fun x2273 () Bool)
(declare-fun x673 (Int) Int)
(declare-fun x1864 () Bool)
(declare-fun x2532 () Int)
(declare-fun x99 () Bool)
(declare-fun x3200 () Int)
(declare-fun x25 () Int)
(declare-fun x3142 () Int)
(declare-fun x2826 () Int)
(declare-fun x599 () Int)
(declare-fun x2472 () Int)
(declare-fun x1766 (Int) Int)
(declare-fun x2551 () Int)
(declare-fun x1142 () Int)
(declare-fun x1859 () Bool)
(declare-fun x755 () Int)
(declare-fun x1684 () Int)
(declare-fun x627 () Int)
(declare-fun x1470 () Int)
(declare-fun x2011 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x248 () Bool)
(declare-fun x481 () Bool)
(declare-fun x1714 () Int)
(declare-fun x266 () Int)
(declare-fun x521 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x2357 () Int)
(declare-fun x2967 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x3061 () Int)
(declare-fun x1337 () Int)
(declare-fun x1490 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1301 () Int)
(declare-fun x3218 () Int)
(declare-fun x3392 () Int)
(declare-fun x3674 (Int) Int)
(declare-fun x768 () Int)
(declare-fun x988 () Bool)
(declare-fun x212 () Int)
(declare-fun x3761 () Int)
(declare-fun x453 () Int)
(declare-fun x1724 () Int)
(declare-fun x1190 () Int)
(declare-fun x2267 () Int)
(declare-fun x3253 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x2607 () Int)
(declare-fun x1216 () Int)
(declare-fun x1491 () Int)
(declare-fun x3661 () Int)
(declare-fun x3762 (Int) Int)
(declare-fun x2408 () Bool)
(declare-fun x1414 () Int)
(declare-fun x3077 () Bool)
(declare-fun x706 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x2299 () Int)
(declare-fun x869 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x1625 () Int)
(declare-fun x1982 () Int)
(declare-fun x893 () Bool)
(declare-fun x1451 () Int)
(declare-fun x113 () Int)
(declare-fun x2032 () Bool)
(declare-fun x562 () Int)
(declare-fun x2521 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x3575 () Int)
(declare-fun x1558 () Bool)
(declare-fun x180 () Bool)
(declare-fun x3603 () Int)
(declare-fun x2600 () Int)
(declare-fun x772 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x3651 () Int)
(declare-fun x2121 () Bool)
(declare-fun x985 () Int)
(declare-fun x1460 () Int)
(declare-fun x712 () Int)
(declare-fun x3094 () Int)
(declare-fun x2056 () Int)
(declare-fun x2838 () Int)
(declare-fun x1464 () Int)
(declare-fun x2362 () Bool)
(declare-fun x880 (Int) Int)
(declare-fun x2000 () Int)
(declare-fun x218 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x2449 () Int)
(declare-fun x422 () Bool)
(declare-fun x690 () Int)
(declare-fun x2611 () Bool)
(declare-fun x2977 () Int)
(declare-fun x62 () Bool)
(declare-fun x3265 () Bool)
(declare-fun x1108 () Int)
(declare-fun x477 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x631 (Int) Int)
(declare-fun x2890 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x3565 () Int)
(declare-fun x3255 () Bool)
(declare-fun x2908 () Int)
(declare-fun x1578 () Bool)
(declare-fun x121 () Int)
(declare-fun x381 () Bool)
(declare-fun x2311 () Int)
(declare-fun x206 () Bool)
(declare-fun x445 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x345 () Int)
(declare-fun x1772 (Int) Int)
(declare-fun x1955 () Bool)
(declare-fun x2260 () Int)
(declare-fun x3121 () Int)
(declare-fun x518 () Int)
(declare-fun x2905 () Int)
(declare-fun x2507 () Int)
(declare-fun x496 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x16 () Int)
(declare-fun x857 (Int) Int)
(declare-fun x3309 () Bool)
(declare-fun x3481 () Int)
(declare-fun x1356 () Int)
(declare-fun x3157 () Int)
(declare-fun x1244 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x3023 () Int)
(declare-fun x1225 (Int) Int)
(declare-fun x2922 () Int)
(declare-fun x2986 () Int)
(declare-fun x283 () Int)
(declare-fun x244 (Int) Int)
(declare-fun x2878 () Int)
(declare-fun x1113 (Int) Int)
(declare-fun x2280 () Bool)
(declare-fun x2658 () Int)
(declare-fun x1851 () Bool)
(declare-fun x519 () Int)
(declare-fun x2407 () Int)
(declare-fun x419 () Bool)
(declare-fun x2512 () Int)
(declare-fun x1291 () Int)
(declare-fun x1554 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1987 () Int)
(declare-fun x1689 () Int)
(declare-fun x1792 () Int)
(declare-fun x3336 () Int)
(declare-fun x714 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x776 () Int)
(declare-fun x1492 () Int)
(declare-fun x2695 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x150 (Int) Int)
(declare-fun x254 () Int)
(declare-fun x1224 () Int)
(declare-fun x1873 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x3206 () Bool)
(declare-fun x2072 () Int)
(declare-fun x2626 () Bool)
(declare-fun x2932 () Int)
(declare-fun x1896 () Int)
(declare-fun x3348 () Int)
(declare-fun x2433 () Int)
(declare-fun x3739 () Bool)
(declare-fun x3584 () Int)
(declare-fun x282 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1266 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x1366 () Int)
(declare-fun x494 () Bool)
(declare-fun x798 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x2204 () Int)
(declare-fun x1781 () Bool)
(declare-fun x439 () Bool)
(declare-fun x707 () Bool)
(declare-fun x3378 () Int)
(declare-fun x3296 () Bool)
(declare-fun x697 () Bool)
(declare-fun x2533 () Int)
(declare-fun x2285 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x203 () Int)
(declare-fun x50 () Bool)
(declare-fun x330 () Int)
(declare-fun x1011 () Int)
(declare-fun x1498 () Bool)
(declare-fun x110 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x2514 () Int)
(declare-fun x1580 () Int)
(declare-fun x2820 () Int)
(declare-fun x2368 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x2251 () Int)
(declare-fun x3766 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x2469 () Int)
(declare-fun x3649 () Int)
(declare-fun x2999 () Int)
(declare-fun x1214 () Int)
(declare-fun x3492 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x2057 () Int)
(declare-fun x1650 (Int) Int)
(declare-fun x3162 () Int)
(declare-fun x2789 () Bool)
(declare-fun x1381 () Int)
(declare-fun x2169 () Bool)
(declare-fun x2510 () Int)
(declare-fun x2575 () Bool)
(declare-fun x701 (Int) Int)
(declare-fun x1150 () Bool)
(declare-fun x319 () Int)
(declare-fun x421 () Bool)
(declare-fun x3476 () Int)
(declare-fun x93 () Int)
(declare-fun x1071 () Int)
(declare-fun x2323 () Int)
(declare-fun x3436 () Bool)
(declare-fun x678 () Int)
(declare-fun x2698 () Int)
(declare-fun x31 () Int)
(declare-fun x3775 (Int) Int)
(declare-fun x1343 () Bool)
(declare-fun x77 () Bool)
(declare-fun x385 () Int)
(declare-fun x1006 () Int)
(declare-fun x3235 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x3613 () Int)
(declare-fun x2537 () Int)
(declare-fun x2344 () Int)
(declare-fun x2924 () Int)
(declare-fun x1795 (Int) Int)
(declare-fun x444 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x3139 () Int)
(declare-fun x1601 (Int) Int)
(declare-fun x66 () Int)
(declare-fun x38 () Int)
(declare-fun x732 () Bool)
(declare-fun x2012 () Int)
(declare-fun x894 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x807 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x2639 () Int)
(declare-fun x298 () Int)
(declare-fun x2023 () Int)
(declare-fun x3205 (Int) Int)
(declare-fun x2297 () Int)
(declare-fun x2327 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1924 () Bool)
(declare-fun x2855 () Int)
(declare-fun x546 () Int)
(declare-fun x126 () Bool)
(declare-fun x358 () Bool)
(declare-fun x1413 () Int)
(declare-fun x591 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1830 () Int)
(declare-fun x285 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x3382 () Int)
(declare-fun x1856 () Int)
(declare-fun x1787 () Int)
(declare-fun x1032 (Int) Int)
(declare-fun x2473 (Int) Int)
(declare-fun x2816 () Bool)
(declare-fun x556 () Int)
(declare-fun x1890 () Bool)
(declare-fun x863 () Bool)
(declare-fun x2112 () Int)
(declare-fun x3460 () Bool)
(declare-fun x3724 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1197 () Int)
(declare-fun x2110 () Bool)
(declare-fun x1076 () Int)
(declare-fun x2706 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x239 () Int)
(declare-fun x1550 () Int)
(declare-fun x2058 () Int)
(declare-fun x1469 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x3140 (Int Int) Int)
(declare-fun x3069 () Int)
(declare-fun x520 () Bool)
(declare-fun x1544 (Int Int Int Int Int Int) Int)
(declare-fun x522 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1738 () Int)
(declare-fun x359 () Int)
(declare-fun x3358 () Bool)
(declare-fun x2104 () Int)
(declare-fun x1234 () Int)
(declare-fun x2374 () Int)
(declare-fun x2854 () Int)
(declare-fun x3037 () Bool)
(declare-fun x2785 () Int)
(declare-fun x1893 (Int) Int)
(declare-fun x2948 () Int)
(declare-fun x1870 (Int) Int)
(declare-fun x3166 () Int)
(declare-fun x2228 () Int)
(declare-fun x490 () Int)
(declare-fun x3159 (Int) Int)
(declare-fun x1281 () Int)
(declare-fun x1692 () Int)
(declare-fun x2227 () Bool)
(declare-fun x373 () Int)
(declare-fun x629 () Bool)
(declare-fun x1509 () Int)
(declare-fun x2356 () Bool)
(declare-fun x236 () Int)
(declare-fun x18 () Int)
(declare-fun x289 () Int)
(declare-fun x3119 () Bool)
(declare-fun x2269 () Int)
(declare-fun x21 () Int)
(declare-fun x3251 () Int)
(declare-fun x2574 () Bool)
(declare-fun x3118 () Int)
(declare-fun x3397 () Int)
(declare-fun x1043 () Bool)
(declare-fun x3221 () Int)
(declare-fun x2700 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x28 () Int)
(declare-fun x3120 () Int)
(declare-fun x389 () Int)
(declare-fun x2722 () Bool)
(declare-fun x2255 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1472 () Int)
(declare-fun x3233 () Int)
(declare-fun x178 () Bool)
(declare-fun x1523 () Int)
(declare-fun x1748 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x2524 () Int)
(declare-fun x2165 () Int)
(declare-fun x1833 () Bool)
(declare-fun x2378 (Int) Int)
(declare-fun x2831 (Int) Int)
(declare-fun x1634 () Int)
(declare-fun x3738 () Bool)
(declare-fun x2247 () Int)
(declare-fun x3521 () Int)
(declare-fun x2696 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1963 () Bool)
(declare-fun x2976 () Int)
(declare-fun x2602 () Bool)
(declare-fun x793 () Int)
(declare-fun x632 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x1440 () Int)
(declare-fun x2030 () Int)
(declare-fun x335 () Bool)
(declare-fun x3670 () Int)
(declare-fun x3083 () Bool)
(declare-fun x14 () Int)
(declare-fun x1546 (Int) Int)
(declare-fun x1134 () Int)
(declare-fun x679 () Int)
(declare-fun x352 () Bool)
(declare-fun x744 () Int)
(declare-fun x523 () Int)
(declare-fun x1762 (Int) Int)
(declare-fun x2952 () Int)
(declare-fun x3093 (Int) Int)
(declare-fun x2308 (Int) Int)
(declare-fun x151 () Bool)
(declare-fun x1493 () Int)
(declare-fun x2583 (Int) Int)
(declare-fun x3472 (Int) Int)
(declare-fun x3686 () Bool)
(declare-fun x2124 () Int)
(declare-fun x3735 () Int)
(declare-fun x3706 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x40 () Bool)
(declare-fun x416 () Bool)
(declare-fun x376 () Int)
(declare-fun x3433 () Int)
(declare-fun x3270 (Int) Int)
(declare-fun x2718 (Int) Int)
(declare-fun x2003 () Int)
(declare-fun x1727 () Int)
(declare-fun x292 () Int)
(declare-fun x1852 () Bool)
(declare-fun x1308 () Int)
(declare-fun x709 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x2966 () Int)
(declare-fun x2366 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x192 () Int)
(declare-fun x1005 () Int)
(declare-fun x3716 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x88 () Int)
(declare-fun x3764 () Int)
(declare-fun x2777 () Int)
(declare-fun x1354 () Bool)
(declare-fun x2054 () Int)
(declare-fun x2483 () Int)
(declare-fun x1055 () Bool)
(declare-fun x2036 () Int)
(declare-fun x2294 () Bool)
(declare-fun x399 () Int)
(declare-fun x2822 () Bool)
(declare-fun x606 (Int) Int)
(declare-fun x56 () Int)
(declare-fun x538 () Int)
(declare-fun x3637 () Int)
(declare-fun x3293 () Int)
(declare-fun x2478 () Int)
(declare-fun x19 (Int) Int)
(declare-fun x2240 () Int)
(declare-fun x1024 () Bool)
(declare-fun x3684 () Int)
(declare-fun x1883 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x3250 () Int)
(declare-fun x1585 () Int)
(declare-fun x3211 () Bool)
(declare-fun x953 () Int)
(declare-fun x2988 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x3553 () Int)
(declare-fun x71 () Bool)
(declare-fun x74 (Int) Int)
(declare-fun x1410 () Int)
(declare-fun x2439 () Int)
(declare-fun x2523 (Int) Int)
(declare-fun x654 () Int)
(declare-fun x2253 () Int)
(declare-fun x2617 (Int) Int)
(declare-fun x3091 () Int)
(declare-fun x1066 () Int)
(declare-fun x3606 () Int)
(declare-fun x191 () Int)
(declare-fun x3432 () Bool)
(declare-fun x1445 () Int)
(declare-fun x3516 () Bool)
(declare-fun x986 () Int)
(declare-fun x783 () Int)
(declare-fun x1934 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1004 () Int)
(declare-fun x3259 (Int) Int)
(declare-fun x3682 () Int)
(declare-fun x509 () Int)
(declare-fun x1715 () Bool)
(declare-fun x3104 () Int)
(declare-fun x1288 () Int)
(declare-fun x923 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x3122 () Int)
(declare-fun x3526 () Int)
(declare-fun x1598 (Int) Int)
(declare-fun x1350 () Int)
(declare-fun x1967 () Int)
(declare-fun x2213 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x2321 () Int)
(declare-fun x504 () Int)
(declare-fun x2081 () Int)
(declare-fun x2655 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x3640 () Int)
(declare-fun x691 () Int)
(declare-fun x536 () Bool)
(declare-fun x1950 () Int)
(declare-fun x2865 () Bool)
(declare-fun x1103 (Int) Bool)
(declare-fun x727 () Int)
(declare-fun x1874 () Int)
(declare-fun x3060 () Bool)
(declare-fun x721 () Int)
(declare-fun x384 () Int)
(declare-fun x3771 () Int)
(declare-fun x3197 () Int)
(declare-fun x854 () Int)
(declare-fun x1722 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x2809 () Int)
(declare-fun x1158 () Int)
(declare-fun x3718 () Int)
(declare-fun x3343 () Bool)
(declare-fun x123 () Int)
(declare-fun x568 () Bool)
(declare-fun x3618 () Int)
(declare-fun x656 () Bool)
(declare-fun x3368 () Int)
(declare-fun x2805 () Bool)
(declare-fun x980 () Bool)
(declare-fun x1231 () Int)
(declare-fun x3189 () Bool)
(declare-fun x2629 () Bool)
(declare-fun x269 () Bool)
(declare-fun x3743 () Int)
(declare-fun x3458 () Int)
(declare-fun x2161 () Bool)
(declare-fun x348 () Int)
(declare-fun x3285 (Int) Int)
(declare-fun x2715 () Int)
(declare-fun x1885 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1007 () Int)
(declare-fun x1417 (Int) Int)
(declare-fun x2442 () Int)
(declare-fun x935 () Bool)
(declare-fun x1765 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2438 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x2210 () Int)
(declare-fun x2691 () Bool)
(declare-fun x76 () Int)
(declare-fun x1660 (Int) Int)
(declare-fun x2656 () Int)
(declare-fun x532 () Bool)
(declare-fun x3017 () Int)
(declare-fun x3690 () Int)
(declare-fun x1406 () Bool)
(declare-fun x3021 () Int)
(declare-fun x465 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1010 () Int)
(declare-fun x3577 () Bool)
(declare-fun x1475 () Int)
(declare-fun x3638 () Bool)
(declare-fun x60 () Bool)
(declare-fun x2972 (Int) Int)
(declare-fun x797 () Int)
(declare-fun x1668 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x2586 () Bool)
(declare-fun x166 () Bool)
(declare-fun x250 () Int)
(declare-fun x2480 () Int)
(declare-fun x365 () Bool)
(declare-fun x114 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2930 () Int)
(declare-fun x370 () Bool)
(declare-fun x999 () Int)
(declare-fun x950 () Bool)
(declare-fun x1868 () Int)
(declare-fun x486 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x877 () Bool)
(declare-fun x3155 () Int)
(declare-fun x2105 () Int)
(declare-fun x1597 () Int)
(declare-fun x2126 () Int)
(declare-fun x1191 () Int)
(declare-fun x1358 () Bool)
(declare-fun x3726 () Int)
(declare-fun x201 () Bool)
(declare-fun x547 () Int)
(declare-fun x1900 () Int)
(declare-fun x3411 () Int)
(declare-fun x607 () Int)
(declare-fun x2613 () Int)
(declare-fun x1616 () Int)
(declare-fun x3532 () Int)
(declare-fun x2664 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1788 () Int)
(declare-fun x1432 () Bool)
(declare-fun x836 () Bool)
(declare-fun x828 () Bool)
(declare-fun x2764 () Int)
(declare-fun x1030 () Int)
(declare-fun x564 () Int)
(declare-fun x435 () Int)
(declare-fun x1734 (Int) Int)
(declare-fun x1431 () Int)
(declare-fun x160 () Bool)
(declare-fun x411 (Int) Int)
(declare-fun x635 () Int)
(declare-fun x1891 (Int) Int)
(declare-fun x1998 () Bool)
(declare-fun x913 () Bool)
(declare-fun x2732 () Int)
(declare-fun x2886 () Int)
(declare-fun x1602 () Int)
(declare-fun x1187 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x3000 () Int)
(declare-fun x487 () Int)
(declare-fun x309 () Int)
(declare-fun x3111 () Bool)
(declare-fun x3381 () Int)
(declare-fun x3404 () Int)
(declare-fun x344 () Int)
(declare-fun x2437 () Int)
(declare-fun x723 () Bool)
(declare-fun x375 () Int)
(declare-fun x2476 () Int)
(declare-fun x2263 () Int)
(declare-fun x2693 () Bool)
(declare-fun x3390 () Int)
(declare-fun x3457 () Int)
(declare-fun x614 () Int)
(declare-fun x1409 () Int)
(declare-fun x2139 () Bool)
(declare-fun x3731 () Int)
(declare-fun x1823 () Int)
(declare-fun x220 () Bool)
(declare-fun x2963 () Int)
(declare-fun x3443 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x3335 (Int) Int)
(declare-fun x332 () Bool)
(declare-fun x124 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x3347 () Int)
(declare-fun x2627 () Int)
(declare-fun x826 (Int) Int)
(declare-fun x904 () Int)
(declare-fun x1562 (Int) Int)
(declare-fun x748 () Bool)
(declare-fun x2233 () Int)
(declare-fun x3547 (Int) Int)
(declare-fun x1548 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x118 () Int)
(declare-fun x2451 () Int)
(declare-fun x1894 () Int)
(declare-fun x3177 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x3019 (Int) Int)
(declare-fun x1914 () Bool)
(declare-fun x1458 (Int) Int)
(declare-fun x3673 (Int) Int)
(declare-fun x2450 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x2403 () Int)
(declare-fun x1756 () Bool)
(declare-fun x3264 () Bool)
(declare-fun x2244 () Int)
(declare-fun x2258 () Int)
(declare-fun x354 () Int)
(declare-fun x703 () Int)
(declare-fun x3320 () Int)
(declare-fun x858 (Int) Int)
(declare-fun x794 () Bool)
(declare-fun x3446 () Int)
(declare-fun x3117 () Int)
(declare-fun x170 () Int)
(declare-fun x1023 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1185 (Int Int) Int)
(declare-fun x204 () Int)
(declare-fun x3412 () Int)
(declare-fun x2405 () Int)
(declare-fun x3500 () Int)
(declare-fun x657 () Int)
(declare-fun x33 (Int) Int)
(declare-fun x2670 () Int)
(declare-fun x3175 () Bool)
(declare-fun x1784 () Int)
(declare-fun x2801 (Int) Int)
(declare-fun x1508 () Bool)
(declare-fun x3334 () Int)
(declare-fun x1540 () Int)
(declare-fun x2902 (Int) Int)
(declare-fun x1999 () Bool)
(declare-fun x1213 () Int)
(declare-fun x1317 () Int)
(declare-fun x740 () Bool)
(declare-fun x3283 () Int)
(declare-fun x516 () Bool)
(declare-fun x394 () Bool)
(declare-fun x3685 () Int)
(declare-fun x2440 () Int)
(declare-fun x3451 () Int)
(declare-fun x497 () Int)
(declare-fun x2766 (Int) Int)
(declare-fun x1621 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x1348 () Int)
(declare-fun x835 () Int)
(declare-fun x3468 () Int)
(declare-fun x2880 () Bool)
(declare-fun x685 () Bool)
(declare-fun x2064 () Int)
(declare-fun x412 () Int)
(declare-fun x3765 () Int)
(declare-fun x2420 () Int)
(declare-fun x624 () Int)
(declare-fun x2071 () Bool)
(declare-fun x1633 () Int)
(declare-fun x1133 () Int)
(declare-fun x1169 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1016 () Bool)
(declare-fun x760 () Int)
(declare-fun x822 () Bool)
(declare-fun x2107 () Int)
(declare-fun x2401 (Int) Int)
(declare-fun x930 () Int)
(declare-fun x3632 () Int)
(declare-fun x127 () Int)
(declare-fun x1330 () Bool)
(declare-fun x3073 (Int) Int)
(declare-fun x1038 () Int)
(declare-fun x1156 () Bool)
(declare-fun x32 () Int)
(declare-fun x3554 (Int) Int)
(declare-fun x2970 () Int)
(declare-fun x2994 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x3663 () Int)
(declare-fun x1658 () Int)
(declare-fun x2591 () Bool)
(declare-fun x2981 () Int)
(declare-fun x364 () Int)
(declare-fun x366 () Bool)
(declare-fun x1014 () Int)
(declare-fun x448 (Int) Int)
(declare-fun x2772 () Int)
(declare-fun x2973 () Bool)
(declare-fun x2271 () Int)
(declare-fun x1223 () Bool)
(declare-fun x909 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x2097 () Int)
(declare-fun x2513 () Int)
(declare-fun x577 () Int)
(declare-fun x756 () Int)
(declare-fun x1077 () Int)
(declare-fun x3362 () Bool)
(declare-fun x3305 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x921 () Int)
(declare-fun x1674 (Int) Int)
(declare-fun x2145 () Bool)
(declare-fun x3379 () Int)
(declare-fun x1084 () Int)
(declare-fun x2716 () Int)
(declare-fun x227 () Int)
(declare-fun x3383 (Int) Int)
(declare-fun x1399 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1901 () Int)
(declare-fun x3502 () Bool)
(declare-fun x573 () Bool)
(declare-fun x834 () Int)
(declare-fun x2458 () Int)
(declare-fun x2471 (Int) Int)
(declare-fun x2041 () Bool)
(declare-fun x219 () Int)
(declare-fun x3194 () Bool)
(declare-fun x3498 (Int) Int)
(declare-fun x196 (Int) Int)
(declare-fun x3145 () Int)
(declare-fun x2770 (Int) Int)
(declare-fun x2755 () Int)
(declare-fun x1991 () Int)
(declare-fun x1165 () Bool)
(declare-fun x464 (Int) Int)
(declare-fun x280 (Int) Int)
(declare-fun x2338 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1867 () Int)
(declare-fun x177 () Bool)
(declare-fun x3736 () Int)
(declare-fun x2358 () Int)
(declare-fun x3005 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x317 () Int)
(declare-fun x1015 () Int)
(declare-fun x2872 () Int)
(declare-fun x3434 () Bool)
(declare-fun x3006 (Int) Int)
(declare-fun x1435 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x1619 () Int)
(declare-fun x72 () Bool)
(declare-fun x1937 () Int)
(declare-fun x396 () Int)
(declare-fun x215 () Int)
(declare-fun x1866 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x95 (Int) Int)
(declare-fun x3422 () Bool)
(declare-fun x7 () Bool)
(declare-fun x351 () Bool)
(declare-fun x1929 () Int)
(declare-fun x1299 () Int)
(declare-fun x360 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x2422 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1826 () Int)
(declare-fun x3352 () Int)
(declare-fun x2146 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x2833 () Int)
(declare-fun x1221 () Int)
(declare-fun x2498 () Int)
(declare-fun x2153 () Int)
(declare-fun x1774 () Bool)
(declare-fun x942 () Int)
(declare-fun x3639 () Bool)
(declare-fun x108 () Int)
(declare-fun x3587 () Int)
(declare-fun x847 () Int)
(declare-fun x410 () Int)
(declare-fun x1091 () Int)
(declare-fun x726 () Int)
(declare-fun x2396 () Bool)
(declare-fun x2800 (Int) Int)
(declare-fun x3652 () Int)
(declare-fun x3439 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x1742 () Int)
(declare-fun x284 () Int)
(declare-fun x1227 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x2093 () Int)
(declare-fun x665 () Int)
(declare-fun x876 () Int)
(declare-fun x81 () Int)
(declare-fun x649 () Int)
(declare-fun x1322 () Int)
(declare-fun x1593 () Bool)
(declare-fun x735 () Int)
(declare-fun x2177 () Bool)
(declare-fun x2883 () Int)
(declare-fun x796 () Int)
(declare-fun x493 () Bool)
(declare-fun x466 () Int)
(declare-fun x3669 () Bool)
(declare-fun x3024 () Int)
(declare-fun x792 () Int)
(declare-fun x3144 () Bool)
(declare-fun x154 () Bool)
(declare-fun x337 () Int)
(declare-fun x1000 () Int)
(declare-fun x683 () Int)
(declare-fun x3510 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x3263 () Int)
(declare-fun x1907 () Bool)
(declare-fun x1693 (Int) Int)
(declare-fun x2900 () Int)
(declare-fun x1770 () Bool)
(declare-fun x889 () Int)
(declare-fun x2174 () Bool)
(declare-fun x195 () Bool)
(declare-fun x3030 () Int)
(declare-fun x3066 (Int) Int)
(declare-fun x92 () Bool)
(declare-fun x3599 () Int)
(declare-fun x2435 () Bool)
(declare-fun x2694 () Int)
(declare-fun x499 () Bool)
(declare-fun x3303 () Int)
(declare-fun x2763 () Bool)
(declare-fun x1164 () Int)
(declare-fun x2579 () Bool)
(declare-fun x2899 () Int)
(declare-fun x15 () Int)
(declare-fun x75 () Bool)
(declare-fun x2207 () Int)
(declare-fun x647 () Int)
(declare-fun x951 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x3473 () Int)
(declare-fun x2034 () Bool)
(declare-fun x491 () Bool)
(declare-fun x83 () Bool)
(declare-fun x3756 () Int)
(declare-fun x3321 () Bool)
(declare-fun x827 () Bool)
(declare-fun x3300 () Int)
(declare-fun x2515 () Int)
(declare-fun x2202 () Int)
(declare-fun x3027 () Bool)
(declare-fun x247 () Bool)
(declare-fun x2782 () Int)
(declare-fun x26 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x594 () Bool)
(declare-fun x1683 () Int)
(declare-fun x965 () Bool)
(declare-fun x2372 (Int) Int)
(declare-fun x73 () Int)
(declare-fun x2636 () Int)
(declare-fun x630 () Bool)
(declare-fun x3318 () Bool)
(declare-fun x916 () Int)
(declare-fun x3243 () Int)
(declare-fun x3384 () Int)
(declare-fun x237 () Int)
(declare-fun x1425 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x554 () Int)
(declare-fun x2256 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x1045 () Int)
(declare-fun x454 () Bool)
(declare-fun x1707 () Int)
(declare-fun x456 () Int)
(declare-fun x2333 () Int)
(declare-fun x3471 () Bool)
(declare-fun x3475 (Int) Int)
(declare-fun x2595 () Bool)
(declare-fun x1779 () Int)
(declare-fun x2181 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x1915 () Int)
(declare-fun x993 () Bool)
(declare-fun x3589 () Int)
(declare-fun x1116 () Int)
(declare-fun x525 () Int)
(declare-fun x3712 () Int)
(declare-fun x1606 () Int)
(declare-fun x2455 () Int)
(declare-fun x2835 () Bool)
(declare-fun x3723 () Int)
(declare-fun x1813 () Int)
(declare-fun x2347 () Int)
(declare-fun x1794 () Int)
(declare-fun x3692 (Int) Int)
(declare-fun x3124 () Bool)
(declare-fun x2735 () Int)
(declare-fun x2262 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x818 () Bool)
(declare-fun x148 () Bool)
(declare-fun x163 () Bool)
(declare-fun x1154 () Int)
(declare-fun x315 () Int)
(declare-fun x1662 () Bool)
(declare-fun x2667 () Int)
(declare-fun x3556 () Int)
(declare-fun x710 () Int)
(declare-fun x115 () Bool)
(declare-fun x2797 () Int)
(declare-fun x954 () Int)
(declare-fun x3150 () Bool)
(declare-fun x2705 () Bool)
(declare-fun x1932 () Int)
(declare-fun x2861 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x427 () Int)
(declare-fun x1083 () Bool)
(declare-fun x961 () Int)
(declare-fun x2749 () Bool)
(declare-fun x2555 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2029 () Int)
(declare-fun x3515 () Int)
(declare-fun x2398 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2850 () Int)
(declare-fun x1176 () Bool)
(declare-fun x23 () Int)
(declare-fun x875 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x2776 () Int)
(declare-fun x2163 () Bool)
(declare-fun x271 () Int)
(declare-fun x588 () Int)
(declare-fun x1838 () Bool)
(declare-fun x2982 () Int)
(declare-fun x2212 () Int)
(declare-fun x2740 () Bool)
(declare-fun x646 () Bool)
(declare-fun x750 () Int)
(declare-fun x2827 () Bool)
(declare-fun x2644 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2098 (Int) Int)
(declare-fun x1853 () Int)
(declare-fun x2282 () Int)
(declare-fun x2519 () Bool)
(declare-fun x664 () Int)
(declare-fun x3430 () Int)
(declare-fun x2752 () Int)
(declare-fun x2351 () Bool)
(declare-fun x2490 () Int)
(declare-fun x764 () Int)
(declare-fun x1387 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x1579 () Int)
(declare-fun x2013 () Int)
(declare-fun x255 () Bool)
(declare-fun x447 () Int)
(declare-fun x45 () Int)
(declare-fun x2277 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x3520 (Int) Int)
(declare-fun x2199 () Int)
(declare-fun x763 () Int)
(declare-fun x1009 () Int)
(declare-fun x1604 () Int)
(declare-fun x824 () Bool)
(declare-fun x2198 () Int)
(declare-fun x3400 () Int)
(declare-fun x1031 () Int)
(declare-fun x2648 () Bool)
(declare-fun x887 () Int)
(declare-fun x306 () Int)
(declare-fun x279 () Int)
(declare-fun x3148 () Int)
(declare-fun x890 () Int)
(declare-fun x2580 () Int)
(declare-fun x3543 () Bool)
(declare-fun x1339 () Int)
(declare-fun x3342 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x2866 (Int) Int)
(declare-fun x55 () Int)
(declare-fun x1362 () Bool)
(declare-fun x3212 () Int)
(declare-fun x2557 () Int)
(declare-fun x2673 () Bool)
(declare-fun x580 (Int) Int)
(declare-fun x2301 () Int)
(declare-fun x559 () Bool)
(declare-fun x2322 () Int)
(declare-fun x372 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x3130 () Bool)
(declare-fun x2540 () Int)
(declare-fun x3488 () Int)
(declare-fun x2158 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x978 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x686 (Int) Int)
(declare-fun x3367 () Int)
(declare-fun x3281 () Int)
(declare-fun x2588 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1680 () Int)
(declare-fun x3062 () Int)
(declare-fun x2550 () Bool)
(declare-fun x1095 (Int) Int)
(declare-fun x272 () Int)
(declare-fun x2388 () Int)
(declare-fun x1390 (Int) Int)
(declare-fun x2942 () Int)
(declare-fun x2767 () Bool)
(declare-fun x2620 () Int)
(declare-fun x141 () Bool)
(declare-fun x990 () Bool)
(declare-fun x3586 (Int) Int)
(declare-fun x1188 () Int)
(declare-fun x2430 () Int)
(declare-fun x2055 () Bool)
(declare-fun x3680 () Int)
(declare-fun x1801 (Int) Int)
(declare-fun x2141 () Int)
(declare-fun x2148 () Int)
(declare-fun x2069 () Bool)
(declare-fun x471 () Int)
(declare-fun x608 () Int)
(declare-fun x2062 (Int) Int)
(declare-fun x2335 () Bool)
(declare-fun x856 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x190 () Int)
(declare-fun x1925 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1018 () Int)
(declare-fun x3666 () Bool)
(declare-fun x3044 () Int)
(declare-fun x652 () Int)
(declare-fun x1046 () Int)
(declare-fun x2879 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x565 () Bool)
(declare-fun x2525 () Int)
(declare-fun x1008 () Bool)
(declare-fun x41 () Int)
(declare-fun x2867 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x84 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x259 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x2135 () Int)
(declare-fun x3128 () Int)
(declare-fun x2901 () Bool)
(declare-fun x2824 (Int) Int)
(declare-fun x1702 () Int)
(declare-fun x1941 () Int)
(declare-fun x3533 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x2509 () Int)
(declare-fun x932 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x3755 () Int)
(declare-fun x1162 () Int)
(declare-fun x1780 () Int)
(declare-fun x2391 () Int)
(declare-fun x1146 () Bool)
(declare-fun x666 () Int)
(declare-fun x400 () Bool)
(declare-fun x1746 (Int) Int)
(declare-fun x106 () Bool)
(declare-fun x3442 (Int) Int)
(declare-fun x956 () Int)
(declare-fun x2923 () Int)
(declare-fun x1179 () Bool)
(declare-fun x2783 () Int)
(declare-fun x2007 () Bool)
(declare-fun x11 () Bool)
(declare-fun x3635 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1847 () Bool)
(declare-fun x751 (Int) Int)
(declare-fun x2261 () Int)
(declare-fun x785 () Int)
(declare-fun x2049 () Int)
(declare-fun x2475 () Int)
(declare-fun x769 () Int)
(declare-fun x943 () Int)
(declare-fun x1195 () Int)
(declare-fun x3082 () Bool)
(declare-fun x602 () Bool)
(declare-fun x895 (Int) Int)
(declare-fun x871 () Int)
(declare-fun x604 () Int)
(declare-fun x3257 () Bool)
(declare-fun x3564 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x1292 () Int)
(declare-fun x2661 () Int)
(declare-fun x2868 () Int)
(declare-fun x2710 (Int) Int)
(declare-fun x3573 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x888 () Int)
(declare-fun x2937 () Int)
(declare-fun x2823 () Int)
(declare-fun x94 () Bool)
(declare-fun x625 () Int)
(declare-fun x146 () Int)
(declare-fun x1261 () Int)
(declare-fun x2573 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1943 () Int)
(declare-fun x548 (Int Int) Int)
(declare-fun x1773 () Int)
(declare-fun x2990 () Int)
(declare-fun x3578 () Bool)
(declare-fun x193 () Int)
(declare-fun x3421 () Bool)
(declare-fun x2208 () Int)
(declare-fun x3152 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x3576 () Int)
(declare-fun x1264 (Int) Int)
(declare-fun x3591 () Bool)
(declare-fun x3015 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1755 (Int) Int)
(declare-fun x3377 () Bool)
(declare-fun x595 (Int) Int)
(declare-fun x1768 (Int) Int)
(declare-fun x2424 () Bool)
(declare-fun x2303 () Int)
(declare-fun x3486 () Int)
(declare-fun x1645 () Int)
(declare-fun x52 () Int)
(declare-fun x2129 () Bool)
(declare-fun x2961 () Int)
(declare-fun x1129 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x1824 () Int)
(declare-fun x597 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x959 () Int)
(declare-fun x1473 () Bool)
(declare-fun x3035 () Int)
(declare-fun x2564 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x2018 () Int)
(declare-fun x1831 () Bool)
(declare-fun x852 () Int)
(declare-fun x1026 () Bool)
(declare-fun x3610 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x517 () Int)
(declare-fun x2802 () Int)
(declare-fun x1814 () Int)
(declare-fun x3076 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1028 () Int)
(declare-fun x1205 (Int) Int)
(declare-fun x158 () Int)
(declare-fun x3151 () Int)
(declare-fun x3116 () Int)
(declare-fun x3480 () Int)
(declare-fun x320 () Int)
(declare-fun x1056 () Int)
(declare-fun x2314 (Int) Int)
(declare-fun x230 () Int)
(declare-fun x687 () Int)
(declare-fun x2933 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x210 () Int)
(declare-fun x1436 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x3645 () Int)
(declare-fun x139 () Int)
(declare-fun x3508 () Bool)
(declare-fun x2250 () Int)
(declare-fun x919 () Bool)
(declare-fun x3081 () Bool)
(declare-fun x1682 (Int) Int)
(declare-fun x3168 () Int)
(declare-fun x2605 () Int)
(declare-fun x1698 () Bool)
(declare-fun x803 () Int)
(declare-fun x333 () Bool)
(declare-fun x671 () Int)
(declare-fun x2635 () Int)
(declare-fun x1418 () Int)
(declare-fun x1210 () Bool)
(declare-fun x398 () Bool)
(declare-fun x3176 (Int) Int)
(declare-fun x1250 () Int)
(declare-fun x1303 () Bool)
(declare-fun x579 () Int)
(declare-fun x537 () Int)
(declare-fun x1202 () Int)
(declare-fun x663 () Int)
(declare-fun x1361 () Int)
(declare-fun x2502 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x2493 () Int)
(declare-fun x2881 () Int)
(declare-fun x2144 () Int)
(declare-fun x142 () Int)
(declare-fun x1466 () Int)
(declare-fun x3048 (Int Int) Int)
(declare-fun x2393 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x2985 () Int)
(declare-fun x1063 () Bool)
(declare-fun x3767 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1892 () Int)
(declare-fun x582 () Int)
(declare-fun x2757 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1422 () Int)
(declare-fun x3007 () Bool)
(declare-fun x513 () Int)
(declare-fun x3664 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1750 () Int)
(declare-fun x2887 () Int)
(declare-fun x3612 () Int)
(declare-fun x977 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x2549 (Int) Int)
(declare-fun x2222 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x2330 () Int)
(declare-fun x290 () Bool)
(declare-fun x583 () Int)
(declare-fun x1816 () Int)
(declare-fun x1192 () Int)
(declare-fun x39 () Int)
(declare-fun x2615 () Int)
(declare-fun x605 () Int)
(declare-fun x2133 () Bool)
(declare-fun x3078 (Int) Int)
(declare-fun x1536 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x968 () Int)
(declare-fun x3170 () Int)
(declare-fun x3469 () Int)
(declare-fun x3110 () Int)
(declare-fun x299 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x2125 () Bool)
(declare-fun x458 () Bool)
(declare-fun x558 (Int) Int)
(declare-fun x128 () Int)
(declare-fun x2288 () Int)
(declare-fun x3042 () Bool)
(declare-fun x2917 () Bool)
(declare-fun x2941 () Bool)
(define-fun x3143 ((x2869 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2869) (>= x2869 0)) x2869 (- x2869 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2127 ((x2869 Int)) Int (ite (and (< x2869 0) (>= x2869 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x2869 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2869))
(define-fun x3249 ((x2869 Int)) Int (ite (and (>= x2869 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2869)) x2869 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2869) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x2869)) (- x2869 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x2869 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x2869 0)) (+ x2869 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x548 x2869 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1594 ((x3290 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3290) (<= 0 x3290)))
(define-fun x2631 ((x3290 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3290) (>= x3290 0)))
(define-fun x2017 ((x3290 Int) (x809 Int)) Bool (=> (and (> x809 0) (< 0 x3290)) (and (>= x3290 (x432 x3290 x809)) (<= 0 (x432 x3290 x809)))))
(define-fun x2283 ((x3290 Int) (x809 Int)) Bool (=> (and (and (<= 1 x809) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x809)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3290) (>= x3290 0))) (and (>= (x432 x3290 x809) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x432 x3290 x809)))))
(define-fun x3650 ((x3290 Int) (x809 Int)) Bool (=> (and (> x3290 x809) (> x809 1)) (> x3290 (x432 x3290 x809))))
(define-fun x1834 ((x3290 Int) (x809 Int)) Bool (=> (and (< 0 x809) (> x3290 0)) (= (< x3290 x809) (= (x432 x3290 x809) 0))))
(define-fun x2660 ((x3290 Int) (x809 Int)) Bool (=> (and (> x3290 0) (< 0 x809)) (and (> (* x809 (x432 x3290 x809)) (- x3290 x809)) (<= (* (x432 x3290 x809) x809) x3290))))
(define-fun x1776 ((x3290 Int) (x809 Int)) Bool (= (- x3290 (x312 (- x809 1) x3290)) (* x809 (x432 x3290 x809))))
(define-fun x2090 ((x3290 Int) (x809 Int)) Bool (and (x1776 x3290 x809) (x2660 x3290 x809) (x3650 x3290 x809) (x2283 x3290 x809) (x2017 x3290 x809) (x1834 x3290 x809)))
(define-fun x1501 ((x3290 Int)) Bool (= (x432 0 x3290) 0))
(define-fun x1415 ((x3290 Int)) Bool (= (x432 x3290 1) x3290))
(define-fun x543 ((x3290 Int)) Bool (=> (not (= x3290 0)) (= 1 (x432 x3290 x3290))))
(define-fun x13 ((x3290 Int)) Bool (and (x1415 x3290) (x1501 x3290) (x543 x3290)))
(define-fun x1520 ((x3290 Int) (x809 Int)) Bool (= (x3140 x3290 x809) (* x3290 x809)))
(define-fun x3125 ((x3290 Int) (x809 Int)) Bool (and (= (* (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3290) (x3140 x3290 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x809 x3290) (* x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) x809)) (= (- (* x3290 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2234 ((x3290 Int) (x809 Int)) Bool (=> (and (> x3290 0) (> x809 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3140 x3290 x809)) (= (x432 (x3249 (x3140 x3290 x809)) x3290) x809))))
(define-fun x183 ((x3290 Int) (x809 Int)) Bool (=> (and (not (= 0 x3290)) (not (= 0 x809))) (and (= (x432 (x3140 x3290 x809) x3290) x809) (= x3290 (x432 (x3140 x3290 x809) x809)))))
(define-fun x506 ((x3290 Int) (x809 Int)) Bool (=> (and (< 0 x3290) (> x809 0)) (= (< (x432 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3290) x809) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3140 x3290 x809)))))
(define-fun x873 ((x3290 Int) (x809 Int)) Bool (and (= (x3249 (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) x809)) (x3249 (x3140 x3290 x809))) (= (x3249 (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3249 (x3140 x3290 x809))) (= (x3249 (x3140 x3290 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3249 (x3140 x3290 x809)))))
(define-fun x771 ((x3290 Int) (x809 Int)) Bool (and (=> (and (and (<= x3290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3290 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x809) (> x809 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3140 x3290 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x809) (x432 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3290)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3290)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809) (< 0 x809))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) x809)) (>= (x432 57896044618658097711785492504343953926634992332820282019728792003956564819968 x809) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3290)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x809) (> x809 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x3290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3290))) (= (<= (x3140 (- x3290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x432 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x809)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3290)))) (=> (and (and (> x809 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3290) (> x3290 0))) (= (>= (x432 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809) x3290) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x3140 x3290 x809))))))
(define-fun x955 ((x3290 Int) (x809 Int)) Bool (and (x506 x3290 x809) (x873 x3290 x809) (x2234 x3290 x809) (x771 x3290 x809) (x1520 x3290 x809) (x183 x3290 x809) (x3125 x3290 x809)))
(define-fun x2759 ((x3290 Int)) Bool (and (= (x3140 0 x3290) 0) (= (x3140 x3290 0) 0)))
(define-fun x1861 ((x3290 Int)) Bool (and (= (x3140 x3290 1) x3290) (= (x3140 1 x3290) x3290)))
(define-fun x1880 ((x3290 Int)) Bool (and (x1861 x3290) (x2759 x3290)))
(define-fun x1898 ((x3290 Int)) Bool (and (= x3290 (x312 x3290 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3290) x3290)))
(define-fun x2223 ((x3290 Int)) Bool (and (= 0 (x312 0 x3290)) (= (x312 x3290 0) 0)))
(define-fun x2304 ((x3290 Int)) Bool (= x3290 (x312 x3290 x3290)))
(define-fun x3740 ((x3290 Int)) Bool (and (x2304 x3290) (x1898 x3290) (x2223 x3290)))
(define-fun x2516 ((x3290 Int) (x809 Int)) Bool (= (x312 x3290 x809) (x312 x809 x3290)))
(define-fun x949 ((x3290 Int) (x809 Int)) Bool (and (<= 0 (x312 x3290 x809)) (=> (>= x3290 0) (>= x3290 (x312 x3290 x809))) (=> (<= 0 x809) (>= x809 (x312 x3290 x809)))))
(define-fun x1974 ((x3290 Int) (x809 Int)) Bool (and (x2516 x3290 x809) (x949 x3290 x809)))
(define-fun x2035 ((x3290 Int)) Bool (= (x312 x3290 255) (x548 x3290 256)))
(define-fun x2365 ((x3290 Int)) Bool (and (x2035 x3290) (x1974 x3290 255)))
(define-fun x693 ((x3290 Int) (x809 Int)) Bool (and (> x809 (x548 x3290 x809)) (<= 0 (x548 x3290 x809))))
(define-fun x2484 ((x3290 Int) (x809 Int)) Bool (=> (and (< 0 x809) (<= 0 x3290)) (= (> x809 x3290) (= (x548 x3290 x809) x3290))))
(define-fun x762 ((x3290 Int) (x809 Int)) Bool (=> (and (> x809 0) (and (< x3290 (+ x809 x809)) (>= x3290 x809))) (= (- x3290 x809) (x548 x3290 x809))))
(define-fun x699 ((x3290 Int) (x809 Int)) Bool (=> (> x809 0) (= (+ (* (x432 x3290 x809) x809) (x548 x3290 x809)) x3290)))
(define-fun x136 ((x3290 Int) (x809 Int)) Bool (and (x699 x3290 x809) (x2484 x3290 x809) (x693 x3290 x809) (x762 x3290 x809)))
(define-fun x1528 ((x3290 Int)) Bool (= 0 (x548 0 x3290)))
(define-fun x1790 ((x3290 Int)) Bool (= (x548 x3290 1) 0))
(define-fun x2159 ((x3290 Int)) Bool (= 0 (x548 x3290 x3290)))
(define-fun x804 ((x3290 Int)) Bool (and (x1528 x3290) (x2159 x3290) (x1790 x3290)))
(define-fun x535 ((x3290 Int)) Bool (= (x312 x3290 31) (x548 x3290 32)))
(define-fun x3085 ((x3290 Int)) Bool (and (x1974 x3290 31) (x535 x3290)))
(define-fun x1649 ((x3290 Int)) Bool (= (x3249 x3290) (+ (x312 x3290 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x548 x3290 32))))
(define-fun x175 ((x3290 Int)) Bool (and (x1974 x3290 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1649 x3290)))
(define-fun x1282 ((x2272 Int)) Int 0)
(define-fun x2565 ((x2272 Int)) Int 0)
(define-fun x2178 ((x2272 Int)) Int 0)
(define-fun x1533 ((x2272 Int)) Int 0)
(define-fun x865 ((x2272 Int)) Int 0)
(define-fun x3135 ((x2272 Int)) Int 0)
(define-fun x3709 ((x2272 Int)) Int 0)
(define-fun x948 ((x2272 Int)) Int 0)
(define-fun x2606 ((x2272 Int)) Int 0)
(define-fun x3426 ((x2272 Int)) Int 0)
(define-fun x3316 ((x2272 Int)) Int 0)
(define-fun x3489 ((x2272 Int)) Int 0)
(define-fun x1157 ((x2272 Int)) Int 0)
(define-fun x1526 ((x2272 Int)) Int 0)
(define-fun x1097 ((x2272 Int)) Int (ite (> x2027 x2272) (x3586 x2272) 0))
(define-fun x670 ((x2272 Int)) Int (ite (and (< x2272 x2027) (>= x2272 0)) (x2073 x2272) (x1097 x2272)))
(define-fun x2092 ((x2272 Int)) Int (ite (= x2272 x362) x3570 (x825 x2272)))
(define-fun x527 ((x2272 Int)) Int (ite (= x2272 x2948) x1197 (x2092 x2272)))
(define-fun x2685 ((x2272 Int)) Int (ite (and (> (+ x3751 128) x2272) (<= 128 x2272)) (x670 (- (+ x2951 x2272) 128)) (x2178 x2272)))
(define-fun x3693 ((x2272 Int)) Int (ite (= x2272 x1265) 0 (x2685 x2272)))
(define-fun x1241 ((x2272 Int)) Int (ite (= x1575 x2272) x2238 (x3693 x2272)))
(define-fun x3208 ((x2272 Int)) Int (ite (and (< x2272 (+ 128 x1793)) (<= 128 x2272)) (x670 (- (+ x2462 x2272) 128)) (x1241 x2272)))
(define-fun x2821 ((x2272 Int)) Int (ite (= x2272 x2905) 0 (x3208 x2272)))
(define-fun x2334 ((x2272 Int)) Int (ite (and (< x2272 (+ 128 x3751)) (<= 128 x2272)) (x670 (- (+ x2272 x2951) 128)) (x2821 x2272)))
(define-fun x78 ((x2272 Int)) Int (ite (= x2272 x1046) 0 (x2334 x2272)))
(define-fun x1609 ((x2272 Int)) Int (ite (= x170 x2272) x3776 (x78 x2272)))
(define-fun x2760 ((x2272 Int)) Int (ite (= x2272 x747) 0 (x2392 x2272)))
(define-fun x2120 ((x2272 Int)) Int (ite (= x2272 128) x3751 (x1609 x2272)))
(define-fun x1135 ((x2272 Int)) Int (ite (and (< x2272 (+ 160 x3751)) (<= 160 x2272)) (x670 (- (+ x2951 x2272) 160)) (x2120 x2272)))
(define-fun x49 ((x2272 Int)) Int (ite (= x2272 x2887) 0 (x1135 x2272)))
(define-fun x1584 ((x2272 Int)) Int (ite (= x3759 x2272) x1793 (x49 x2272)))
(define-fun x3317 ((x2272 Int)) Int (ite (and (< x2272 (+ x1813 x1793)) (<= x1813 x2272)) (x670 (- (+ x2272 x2462) x1813)) (x1584 x2272)))
(define-fun x3254 ((x2272 Int)) Int (ite (= x3417 x2272) 0 (x3317 x2272)))
(define-fun x1666 ((x2272 Int)) Int (ite (= x2272 x2333) 1 (x1693 x2272)))
(define-fun x3493 ((x2272 Int)) Int (ite (= x1750 x2272) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x3254 x2272)))
(define-fun x3273 ((x2272 Int)) Int (ite (= x2307 x2272) x1439 (x3493 x2272)))
(define-fun x1398 ((x2272 Int)) Int (ite (= x2833 x2272) 0 (x3273 x2272)))
(define-fun x334 ((x2272 Int)) Int (ite (= x2272 192) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x2565 x2272)))
(define-fun x37 ((x2272 Int)) Int (ite (and (> 4 x2272) (>= x2272 0)) (x334 (+ x2272 192)) (x2972 x2272)))
(define-fun x2184 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x3644 ((x2272 Int)) Int (ite (and (>= x2272 0) (> 36 x2272)) (x2184 x2272) (x1232 x2272)))
(define-fun x2051 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x2354 ((x2272 Int)) Int (ite (and (>= x2272 0) (> 36 x2272)) (x2051 x2272) (x1232 x2272)))
(define-fun x2237 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x1459 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 36 x2272)) (x2237 x2272) (x1232 x2272)))
(define-fun x2832 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x3213 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 36 x2272)) (x2832 x2272) (x1232 x2272)))
(define-fun x924 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x1608 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 36 x2272)) (x924 x2272) (x1232 x2272)))
(define-fun x2296 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x1803 ((x2272 Int)) Int (ite (and (< x2272 36) (<= 0 x2272)) (x2296 x2272) (x1232 x2272)))
(define-fun x2609 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x3406 ((x2272 Int)) Int (ite (and (> 36 x2272) (>= x2272 0)) (x2609 x2272) (x1232 x2272)))
(define-fun x941 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x258 ((x2272 Int)) Int (ite (and (< x2272 36) (<= 0 x2272)) (x941 x2272) (x1232 x2272)))
(define-fun x1229 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x1311 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 36)) (x1229 x2272) (x1232 x2272)))
(define-fun x2769 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x1111 ((x2272 Int)) Int (ite (and (> 36 x2272) (>= x2272 0)) (x2769 x2272) (x1232 x2272)))
(define-fun x388 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x3710 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 36 x2272)) (x388 x2272) (x1232 x2272)))
(define-fun x1494 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x2298 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 36)) (x1494 x2272) (x1232 x2272)))
(define-fun x3768 ((x2272 Int)) Int (ite (= 480 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x948 x2272)))
(define-fun x1514 ((x2272 Int)) Int (ite (= x2272 484) 32 (x3768 x2272)))
(define-fun x311 ((x2272 Int)) Int (ite (= 516 x2272) 17 (x1514 x2272)))
(define-fun x2293 ((x2272 Int)) Int (ite (= 548 x2272) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x311 x2272)))
(define-fun x585 ((x2272 Int)) Int (ite (and (> 100 x2272) (>= x2272 0)) (x2293 (+ 480 x2272)) (x1232 x2272)))
(define-fun x2266 ((x2272 Int)) Int (ite (= x2013 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x948 x2272)))
(define-fun x928 ((x2272 Int)) Int (ite (= x2272 x1367) 32 (x2266 x2272)))
(define-fun x3386 ((x2272 Int)) Int (ite (= x2272 x1599) 17 (x928 x2272)))
(define-fun x1651 ((x2272 Int)) Int (ite (= x2755 x2272) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x3386 x2272)))
(define-fun x593 ((x2272 Int)) Int (ite (and (> x500 x2272) (>= x2272 0)) (x1651 (+ x2272 x2013)) (x1232 x2272)))
(define-fun x3356 ((x2272 Int)) Int (ite (= x2272 480) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x948 x2272)))
(define-fun x1669 ((x2272 Int)) Int (ite (= x2272 484) 32 (x3356 x2272)))
(define-fun x1238 ((x2272 Int)) Int (ite (= x2272 516) 14 (x1669 x2272)))
(define-fun x675 ((x2272 Int)) Int (ite (= 548 x2272) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x1238 x2272)))
(define-fun x2853 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 100 x2272)) (x675 (+ x2272 480)) (x1232 x2272)))
(define-fun x1560 ((x2272 Int)) Int (ite (= x2013 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x948 x2272)))
(define-fun x42 ((x2272 Int)) Int (ite (= x2532 x2272) 32 (x1560 x2272)))
(define-fun x1086 ((x2272 Int)) Int (ite (= x2272 x3633) 14 (x42 x2272)))
(define-fun x2460 ((x2272 Int)) Int (ite (= x2272 x2747) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x1086 x2272)))
(define-fun x2728 ((x2272 Int)) Int (ite (and (> x1200 x2272) (>= x2272 0)) (x2460 (+ x2013 x2272)) (x1232 x2272)))
(define-fun x3730 ((x2272 Int)) Int (ite (= x2272 4) 17 (x948 x2272)))
(define-fun x2281 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 36)) (x3730 x2272) (x1232 x2272)))
(define-fun x1624 ((x2272 Int)) Int (ite (and (> x1539 x2272) (>= x2272 0)) (x1822 x2272) (x948 x2272)))
(define-fun x403 ((x2272 Int)) Int (ite (and (< x2272 x1539) (<= 0 x2272)) (x1624 x2272) (x1232 x2272)))
(define-fun x2567 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> x1251 x2272)) (x1734 x2272) (x948 x2272)))
(define-fun x1729 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 x1251)) (x2567 x2272) (x1232 x2272)))
(define-fun x1054 ((x2272 Int)) Int 0)
(define-fun x2341 ((x2272 Int)) Int (ite x774 (x2020 x2272) (ite x2807 (x2020 x2272) (x1054 x2272))))
(define-fun x1661 ((x2272 Int)) Int (ite (and (> x3024 x2272) (>= x2272 0)) (x2341 x2272) (x948 x2272)))
(define-fun x2179 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 x3024)) (x1661 x2272) (x1232 x2272)))
(define-fun x1875 ((x2272 Int)) Int 0)
(define-fun x2185 ((x2272 Int)) Int (ite x2412 (x3547 x2272) (ite x2624 (x3547 x2272) (x1875 x2272))))
(define-fun x1911 ((x2272 Int)) Int (ite (and (< x2272 x2347) (<= 0 x2272)) (x2185 x2272) (x948 x2272)))
(define-fun x3131 ((x2272 Int)) Int (ite (and (>= x2272 0) (> x2347 x2272)) (x1911 x2272) (x1232 x2272)))
(define-fun x3760 ((x2272 Int)) Int 0)
(define-fun x510 ((x2272 Int)) Int (ite x2435 (x3760 x2272) (x2200 x2272)))
(define-fun x2194 ((x2272 Int)) Int (ite (and (> x3334 x2272) (>= x2272 0)) (x510 x2272) (x948 x2272)))
(define-fun x2526 ((x2272 Int)) Int (ite (and (> x3334 x2272) (>= x2272 0)) (x2194 x2272) (x1232 x2272)))
(define-fun x363 ((x2272 Int)) Int (ite (and (>= x2272 0) (> x1038 x2272)) (x3066 x2272) (x948 x2272)))
(define-fun x3311 ((x2272 Int)) Int (ite (and (> x1038 x2272) (>= x2272 0)) (x363 x2272) (x1232 x2272)))
(define-fun x3474 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x948 x2272)))
(define-fun x1573 ((x2272 Int)) Int (ite (and (>= x2272 0) (> 36 x2272)) (x3474 x2272) (x1232 x2272)))
(define-fun x44 ((x2272 Int)) Int (ite x3688 (x3644 x2272) (ite x897 (x2354 x2272) (ite x282 (x1459 x2272) (ite x1646 (x3213 x2272) (ite x1333 (x1608 x2272) (ite x1925 (x1803 x2272) (ite x2161 (x3406 x2272) (ite x109 (x258 x2272) (ite x697 (x1311 x2272) (ite x3345 (x1111 x2272) (ite x2879 (x3710 x2272) (ite x1914 (x2298 x2272) (ite x1712 (x585 x2272) (ite x1748 (x593 x2272) (ite x1955 (x1232 x2272) (ite x1677 (x2853 x2272) (ite x1622 (x2728 x2272) (ite x2270 (x2281 x2272) (ite x3573 (x403 x2272) (ite x2827 (x1232 x2272) (ite x3169 (x1729 x2272) (ite x603 (x1232 x2272) (ite x3638 (x2179 x2272) (ite x636 (x1232 x2272) (ite x2461 (x3131 x2272) (ite x3214 (x1232 x2272) (ite x2519 (x1232 x2272) (ite x2 (x2526 x2272) (ite x2143 (x3311 x2272) (ite x1346 (x1232 x2272) (ite x3739 (x1573 x2272) (x1232 x2272)))))))))))))))))))))))))))))))))
(define-fun x725 ((x2272 Int)) Int (ite (= 0 x2272) x1402 (x1232 x2272)))
(define-fun x1412 ((x2272 Int)) Int (ite x808 (x44 x2272) (x725 x2272)))
(define-fun x3196 ((x2272 Int)) Int (x1412 x2272))
(define-fun x3617 ((x2272 Int)) Int (ite (and (< x2272 x2683) (<= 0 x2272)) (x3196 x2272) (x2565 x2272)))
(define-fun x3679 ((x2272 Int)) Int (ite (and (< x2272 x2683) (>= x2272 0)) (x3617 x2272) (x2972 x2272)))
(define-fun x2259 ((x2272 Int)) Int (ite x1859 (x2972 x2272) (ite x1237 (x37 x2272) (ite x2916 (x3679 x2272) (x673 x2272)))))
(define-fun x1253 ((x2272 Int)) Int (ite (= 0 x2272) x2628 (x2972 x2272)))
(define-fun x3332 ((x2272 Int)) Int (ite x707 (x2259 x2272) (x1253 x2272)))
(define-fun x189 ((x2272 Int)) Int (ite (= x1750 x2272) x2628 (x1398 x2272)))
(define-fun x788 ((x2272 Int)) Int (ite x707 (x1398 x2272) (x189 x2272)))
(define-fun x1012 ((x2272 Int)) Int (ite (= x2272 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x3709 x2272)))
(define-fun x221 ((x2272 Int)) Int (ite (= 132 x2272) x2054 (x1012 x2272)))
(define-fun x3456 ((x2272 Int)) Int (ite (= 0 x2272) x2931 (x405 x2272)))
(define-fun x2778 ((x2272 Int)) Int (ite (= x2272 128) x2931 (x221 x2272)))
(define-fun x3749 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3135 x2272)))
(define-fun x1931 ((x2272 Int)) Int (ite (and (< x2272 36) (>= x2272 0)) (x3749 x2272) (x405 x2272)))
(define-fun x3563 ((x2272 Int)) Int (ite (= 0 x2272) x1281 (x405 x2272)))
(define-fun x3179 ((x2272 Int)) Int (ite (= x2272 128) x1281 (x221 x2272)))
(define-fun x696 ((x2272 Int)) Int (x244 x2272))
(define-fun x1628 ((x2272 Int)) Int (ite x1531 (x1876 x2272) (x701 x2272)))
(define-fun x3020 ((x2272 Int)) Int (ite x1129 (ite x2355 (x701 x2272) (x1628 x2272)) (ite x3244 (x2038 x2272) (x701 x2272))))
(define-fun x2926 ((x2272 Int)) Int (ite x1391 (ite x1904 (x3673 x2272) (x701 x2272)) (ite x3483 (ite x1904 (x3673 x2272) (x701 x2272)) (x701 x2272))))
(define-fun x1068 ((x2272 Int)) Int (ite x530 (x3557 x2272) (x701 x2272)))
(define-fun x1057 ((x2272 Int)) Int (ite x335 (ite x2885 (x3020 x2272) (x2926 x2272)) (ite x3375 (x1068 x2272) (ite x421 (x1068 x2272) (x701 x2272)))))
(define-fun x1986 ((x2272 Int)) Int (ite x3767 (x701 x2272) (ite x938 (x2410 x2272) (x701 x2272))))
(define-fun x1785 ((x2272 Int)) Int (ite x1283 (ite x3678 (x1057 x2272) (x1986 x2272)) (ite x2039 (x521 x2272) (x701 x2272))))
(define-fun x167 ((x2272 Int)) Int (ite x846 (ite x846 (x1785 x2272) (x3593 x2272)) (x701 x2272)))
(define-fun x2052 ((x2272 Int)) Int (ite x1149 (x701 x2272) (ite x846 (x167 x2272) (x1635 x2272))))
(define-fun x207 ((x2272 Int)) Int (x2052 x2272))
(define-fun x3282 ((x2272 Int)) Int (x1205 x2272))
(define-fun x3287 ((x2272 Int)) Int (ite x1531 (x74 x2272) (x1400 x2272)))
(define-fun x2010 ((x2272 Int)) Int (ite x1129 (ite x2355 (x1400 x2272) (x3287 x2272)) (ite x3244 (x1225 x2272) (x1400 x2272))))
(define-fun x3172 ((x2272 Int)) Int (ite x1391 (ite x1904 (x2894 x2272) (x1400 x2272)) (ite x3483 (ite x1904 (x2894 x2272) (x1400 x2272)) (x1400 x2272))))
(define-fun x2859 ((x2272 Int)) Int (ite x530 (x3442 x2272) (x1400 x2272)))
(define-fun x2419 ((x2272 Int)) Int (ite x335 (ite x2885 (x2010 x2272) (x3172 x2272)) (ite x3375 (x2859 x2272) (ite x421 (x2859 x2272) (x1400 x2272)))))
(define-fun x2279 ((x2272 Int)) Int (ite x3767 (x1400 x2272) (ite x938 (x3328 x2272) (x1400 x2272))))
(define-fun x1315 ((x2272 Int)) Int (ite x1283 (ite x3678 (x2419 x2272) (x2279 x2272)) (ite x2039 (x3262 x2272) (x1400 x2272))))
(define-fun x1525 ((x2272 Int)) Int (ite x846 (ite x846 (x1315 x2272) (x2314 x2272)) (x1400 x2272)))
(define-fun x2464 ((x2272 Int)) Int (ite x1149 (x1400 x2272) (ite x846 (x1525 x2272) (x3719 x2272))))
(define-fun x925 ((x2272 Int)) Int (x2464 x2272))
(define-fun x3741 ((x2272 Int)) Int (ite x1531 (x433 x2272) (x3176 x2272)))
(define-fun x3413 ((x2272 Int)) Int (ite x1129 (ite x2355 (x3176 x2272) (x3741 x2272)) (ite x3244 (x2508 x2272) (x3176 x2272))))
(define-fun x2329 ((x2272 Int)) Int (ite x1391 (ite x1904 (x3401 x2272) (x3176 x2272)) (ite x3483 (ite x1904 (x3401 x2272) (x3176 x2272)) (x3176 x2272))))
(define-fun x3047 ((x2272 Int)) Int (ite x530 (x3621 x2272) (x3176 x2272)))
(define-fun x140 ((x2272 Int)) Int (ite x335 (ite x2885 (x3413 x2272) (x2329 x2272)) (ite x3375 (x3047 x2272) (ite x421 (x3047 x2272) (x3176 x2272)))))
(define-fun x1527 ((x2272 Int)) Int (ite x3767 (x3176 x2272) (ite x938 (x3364 x2272) (x3176 x2272))))
(define-fun x533 ((x2272 Int)) Int (ite x1283 (ite x3678 (x140 x2272) (x1527 x2272)) (ite x2039 (x3605 x2272) (x3176 x2272))))
(define-fun x2470 ((x2272 Int)) Int (ite x846 (ite x846 (x533 x2272) (x826 x2272)) (x3176 x2272)))
(define-fun x418 ((x2272 Int)) Int (ite x1149 (x3176 x2272) (ite x846 (x2470 x2272) (x2089 x2272))))
(define-fun x3234 ((x2272 Int)) Int (x418 x2272))
(define-fun x2385 ((x2272 Int)) Int (ite x1531 (x1882 x2272) (x529 x2272)))
(define-fun x1290 ((x2272 Int)) Int (ite x1129 (ite x2355 (x529 x2272) (x2385 x2272)) (ite x3244 (x33 x2272) (x529 x2272))))
(define-fun x896 ((x2272 Int)) Int (ite x1391 (ite x1904 (x2993 x2272) (x529 x2272)) (ite x3483 (ite x1904 (x2993 x2272) (x529 x2272)) (x529 x2272))))
(define-fun x257 ((x2272 Int)) Int (ite x530 (x3270 x2272) (x529 x2272)))
(define-fun x1737 ((x2272 Int)) Int (ite x335 (ite x2885 (x1290 x2272) (x896 x2272)) (ite x3375 (x257 x2272) (ite x421 (x257 x2272) (x529 x2272)))))
(define-fun x1845 ((x2272 Int)) Int (ite x3767 (x529 x2272) (ite x938 (x3567 x2272) (x529 x2272))))
(define-fun x2884 ((x2272 Int)) Int (ite x1283 (ite x3678 (x1737 x2272) (x1845 x2272)) (ite x2039 (x1690 x2272) (x529 x2272))))
(define-fun x2397 ((x2272 Int)) Int (ite x846 (ite x846 (x2884 x2272) (x2583 x2272)) (x529 x2272)))
(define-fun x2558 ((x2272 Int)) Int (ite x1149 (x529 x2272) (ite x846 (x2397 x2272) (x586 x2272))))
(define-fun x152 ((x2272 Int)) Int (x2558 x2272))
(define-fun x3095 ((x2272 Int)) Int (ite x1531 (x1568 x2272) (x1666 x2272)))
(define-fun x1302 ((x2272 Int)) Int (ite x1129 (ite x2355 (x1666 x2272) (x3095 x2272)) (ite x3244 (x1001 x2272) (x1666 x2272))))
(define-fun x1181 ((x2272 Int)) Int (ite x1391 (ite x1904 (x3762 x2272) (x1666 x2272)) (ite x3483 (ite x1904 (x3762 x2272) (x1666 x2272)) (x1666 x2272))))
(define-fun x3080 ((x2272 Int)) Int (ite x530 (x1772 x2272) (x1666 x2272)))
(define-fun x640 ((x2272 Int)) Int (ite x335 (ite x2885 (x1302 x2272) (x1181 x2272)) (ite x3375 (x3080 x2272) (ite x421 (x3080 x2272) (x1666 x2272)))))
(define-fun x1990 ((x2272 Int)) Int (ite x3767 (x1666 x2272) (ite x938 (x1095 x2272) (x1666 x2272))))
(define-fun x1384 ((x2272 Int)) Int (ite x1283 (ite x3678 (x640 x2272) (x1990 x2272)) (ite x2039 (x3335 x2272) (x1666 x2272))))
(define-fun x90 ((x2272 Int)) Int (ite x846 (ite x846 (x1384 x2272) (x880 x2272)) (x1666 x2272)))
(define-fun x3450 ((x2272 Int)) Int (ite x1149 (x1666 x2272) (ite x846 (x90 x2272) (x754 x2272))))
(define-fun x2663 ((x2272 Int)) Int (x3450 x2272))
(define-fun x1513 ((x2272 Int)) Int (x1168 x2272))
(define-fun x944 ((x2272 Int)) Int (x2372 x2272))
(define-fun x1276 ((x2272 Int)) Int (x1271 x2272))
(define-fun x2116 ((x2272 Int)) Int (ite x1531 (x2617 x2272) (x2766 x2272)))
(define-fun x2276 ((x2272 Int)) Int (ite x1129 (ite x2355 (x2766 x2272) (x2116 x2272)) (ite x3244 (x1850 x2272) (x2766 x2272))))
(define-fun x225 ((x2272 Int)) Int (ite x1391 (ite x1904 (x1636 x2272) (x2766 x2272)) (ite x3483 (ite x1904 (x1636 x2272) (x2766 x2272)) (x2766 x2272))))
(define-fun x205 ((x2272 Int)) Int (ite x530 (x1212 x2272) (x2766 x2272)))
(define-fun x460 ((x2272 Int)) Int (ite x335 (ite x2885 (x2276 x2272) (x225 x2272)) (ite x3375 (x205 x2272) (ite x421 (x205 x2272) (x2766 x2272)))))
(define-fun x3167 ((x2272 Int)) Int (ite x3767 (x2766 x2272) (ite x938 (x1768 x2272) (x2766 x2272))))
(define-fun x1938 ((x2272 Int)) Int (ite x1283 (ite x3678 (x460 x2272) (x3167 x2272)) (ite x2039 (x3475 x2272) (x2766 x2272))))
(define-fun x3495 ((x2272 Int)) Int (ite x846 (ite x846 (x1938 x2272) (x1682 x2272)) (x2766 x2272)))
(define-fun x97 ((x2272 Int)) Int (ite x1149 (x2766 x2272) (ite x846 (x3495 x2272) (x2707 x2272))))
(define-fun x1248 ((x2272 Int)) Int (x97 x2272))
(define-fun x2534 ((x2272 Int)) Int (ite x1531 (x2903 x2272) (x472 x2272)))
(define-fun x2037 ((x2272 Int)) Int (ite x1129 (ite x2355 (x472 x2272) (x2534 x2272)) (ite x3244 (x2473 x2272) (x472 x2272))))
(define-fun x729 ((x2272 Int)) Int (ite x1391 (ite x1904 (x1891 x2272) (x472 x2272)) (ite x3483 (ite x1904 (x1891 x2272) (x472 x2272)) (x472 x2272))))
(define-fun x2987 ((x2272 Int)) Int (ite x530 (x830 x2272) (x472 x2272)))
(define-fun x829 ((x2272 Int)) Int (ite x335 (ite x2885 (x2037 x2272) (x729 x2272)) (ite x3375 (x2987 x2272) (ite x421 (x2987 x2272) (x472 x2272)))))
(define-fun x3261 ((x2272 Int)) Int (ite x3767 (x472 x2272) (ite x938 (x3078 x2272) (x472 x2272))))
(define-fun x886 ((x2272 Int)) Int (ite x1283 (ite x3678 (x829 x2272) (x3261 x2272)) (ite x2039 (x2889 x2272) (x472 x2272))))
(define-fun x2622 ((x2272 Int)) Int (ite x846 (ite x846 (x886 x2272) (x1795 x2272)) (x472 x2272)))
(define-fun x3279 ((x2272 Int)) Int (ite x1149 (x472 x2272) (ite x846 (x2622 x2272) (x1390 x2272))))
(define-fun x3631 ((x2272 Int)) Int (x3279 x2272))
(define-fun x1704 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x261 ((x2272 Int)) Int (ite (and (> 36 x2272) (>= x2272 0)) (x1704 x2272) (x686 x2272)))
(define-fun x667 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x996 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 36)) (x667 x2272) (x686 x2272)))
(define-fun x3636 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x208 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 36)) (x3636 x2272) (x686 x2272)))
(define-fun x1796 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x2495 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 36)) (x1796 x2272) (x686 x2272)))
(define-fun x553 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x63 ((x2272 Int)) Int (ite (and (> 36 x2272) (>= x2272 0)) (x553 x2272) (x686 x2272)))
(define-fun x815 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x3304 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 36)) (x815 x2272) (x686 x2272)))
(define-fun x1060 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x1516 ((x2272 Int)) Int (ite (and (< x2272 36) (>= x2272 0)) (x1060 x2272) (x686 x2272)))
(define-fun x2955 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x1423 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 36 x2272)) (x2955 x2272) (x686 x2272)))
(define-fun x2317 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x322 ((x2272 Int)) Int (ite (and (>= x2272 0) (> 36 x2272)) (x2317 x2272) (x686 x2272)))
(define-fun x402 ((x2272 Int)) Int (ite (= x2272 4) 17 (x3426 x2272)))
(define-fun x2364 ((x2272 Int)) Int (ite (and (< x2272 36) (<= 0 x2272)) (x402 x2272) (x686 x2272)))
(define-fun x3219 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x3190 ((x2272 Int)) Int (ite (and (> 36 x2272) (>= x2272 0)) (x3219 x2272) (x686 x2272)))
(define-fun x1842 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x2180 ((x2272 Int)) Int (ite (and (< x2272 36) (>= x2272 0)) (x1842 x2272) (x686 x2272)))
(define-fun x1839 ((x2272 Int)) Int (ite (= x2272 480) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3426 x2272)))
(define-fun x511 ((x2272 Int)) Int (ite (= x2272 484) 32 (x1839 x2272)))
(define-fun x149 ((x2272 Int)) Int (ite (= x2272 516) 17 (x511 x2272)))
(define-fun x3398 ((x2272 Int)) Int (ite (= x2272 548) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x149 x2272)))
(define-fun x1438 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> 100 x2272)) (x3398 (+ x2272 480)) (x686 x2272)))
(define-fun x3277 ((x2272 Int)) Int (ite (= x2635 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3426 x2272)))
(define-fun x1467 ((x2272 Int)) Int (ite (= x2272 x2871) 32 (x3277 x2272)))
(define-fun x3112 ((x2272 Int)) Int (ite (= x3121 x2272) 17 (x1467 x2272)))
(define-fun x326 ((x2272 Int)) Int (ite (= x2272 x3351) 52207524433148634526794681841911218724012555196680520750525547801574629179392 (x3112 x2272)))
(define-fun x1968 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 x768)) (x326 (+ x2272 x2635)) (x686 x2272)))
(define-fun x100 ((x2272 Int)) Int (ite (= 480 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3426 x2272)))
(define-fun x850 ((x2272 Int)) Int (ite (= x2272 484) 32 (x100 x2272)))
(define-fun x3158 ((x2272 Int)) Int (ite (= 516 x2272) 14 (x850 x2272)))
(define-fun x1582 ((x2272 Int)) Int (ite (= 548 x2272) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3158 x2272)))
(define-fun x242 ((x2272 Int)) Int (ite (and (< x2272 100) (<= 0 x2272)) (x1582 (+ 480 x2272)) (x686 x2272)))
(define-fun x2518 ((x2272 Int)) Int (ite (= x2635 x2272) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3426 x2272)))
(define-fun x2350 ((x2272 Int)) Int (ite (= x1409 x2272) 32 (x2518 x2272)))
(define-fun x3464 ((x2272 Int)) Int (ite (= x2272 x3192) 14 (x2350 x2272)))
(define-fun x1074 ((x2272 Int)) Int (ite (= x2272 x2826) 52207524433148634532707337042868834046575769438058807509068660137114659192832 (x3464 x2272)))
(define-fun x1090 ((x2272 Int)) Int (ite (and (> x367 x2272) (>= x2272 0)) (x1074 (+ x2272 x2635)) (x686 x2272)))
(define-fun x1138 ((x2272 Int)) Int (ite (and (<= 0 x2272) (> x2996 x2272)) (x1562 x2272) (x3426 x2272)))
(define-fun x1484 ((x2272 Int)) Int (ite (and (< x2272 x2996) (<= 0 x2272)) (x1138 x2272) (x686 x2272)))
(define-fun x1871 ((x2272 Int)) Int (ite (and (> x3625 x2272) (>= x2272 0)) (x2669 x2272) (x3426 x2272)))
(define-fun x1556 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 x3625)) (x1871 x2272) (x686 x2272)))
(define-fun x3207 ((x2272 Int)) Int 0)
(define-fun x3359 ((x2272 Int)) Int (ite x1391 (x1546 x2272) (ite x3483 (x1546 x2272) (x3207 x2272))))
(define-fun x3665 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 x1005)) (x3359 x2272) (x3426 x2272)))
(define-fun x1075 ((x2272 Int)) Int (ite (and (< x2272 x1005) (>= x2272 0)) (x3665 x2272) (x686 x2272)))
(define-fun x634 ((x2272 Int)) Int 0)
(define-fun x578 ((x2272 Int)) Int (ite x3375 (x642 x2272) (ite x421 (x642 x2272) (x634 x2272))))
(define-fun x1274 ((x2272 Int)) Int (ite (and (>= x2272 0) (> x2360 x2272)) (x578 x2272) (x3426 x2272)))
(define-fun x3754 ((x2272 Int)) Int (ite (and (< x2272 x2360) (>= x2272 0)) (x1274 x2272) (x686 x2272)))
(define-fun x2653 ((x2272 Int)) Int 0)
(define-fun x2765 ((x2272 Int)) Int (ite x3767 (x2653 x2272) (x3560 x2272)))
(define-fun x981 ((x2272 Int)) Int (ite (and (>= x2272 0) (< x2272 x2641)) (x2765 x2272) (x3426 x2272)))
(define-fun x321 ((x2272 Int)) Int (ite (and (> x2641 x2272) (<= 0 x2272)) (x981 x2272) (x686 x2272)))
(define-fun x589 ((x2272 Int)) Int (ite (and (<= 0 x2272) (< x2272 x355)) (x2098 x2272) (x3426 x2272)))
(define-fun x2892 ((x2272 Int)) Int (ite (and (> x355 x2272) (<= 0 x2272)) (x589 x2272) (x686 x2272)))
(define-fun x3453 ((x2272 Int)) Int (ite (= 4 x2272) 17 (x3426 x2272)))
(define-fun x1947 ((x2272 Int)) Int (ite (and (>= x2272 0) (> 36 x2272)) (x3453 x2272) (x686 x2272)))
(define-fun x3668 ((x2272 Int)) Int (ite x3511 (x261 x2272) (ite x853 (x996 x2272) (ite x1799 (x208 x2272) (ite x2014 (x2495 x2272) (ite x370 (x63 x2272) (ite x639 (x3304 x2272) (ite x2175 (x1516 x2272) (ite x3715 (x1423 x2272) (ite x2954 (x322 x2272) (ite x616 (x2364 x2272) (ite x1502 (x3190 x2272) (ite x3643 (x2180 x2272) (ite x34 (x1438 x2272) (ite x3506 (x1968 x2272) (ite x2787 (x686 x2272) (ite x909 (x242 x2272) (ite x2699 (x1090 x2272) (ite x3202 (x1484 x2272) (ite x2140 (x686 x2272) (ite x532 (x1556 x2272) (ite x99 (x686 x2272) (ite x2711 (x1075 x2272) (ite x1733 (x686 x2272) (ite x1227 (x3754 x2272) (ite x1781 (x686 x2272) (ite x2146 (x686 x2272) (ite x2019 (x321 x2272) (ite x154 (x2892 x2272) (ite x833 (x686 x2272) (ite x2763 (x1947 x2272) (x686 x2272))))))))))))))))))))))))))))))))
(define-fun x1334 ((x2272 Int)) Int (ite x1149 (x3668 x2272) (x686 x2272)))
(define-fun x161 ((x2272 Int)) Int (x1334 x2272))
(define-fun x1670 ((x2272 Int)) Int (x161 x2272))
(define-fun x3427 ((x2272 Int)) Int (x2824 x2272))
(define-fun x1581 ((x2272 Int)) Int (ite x1531 (x2831 x2272) (x1082 x2272)))
(define-fun x1740 ((x2272 Int)) Int (ite x1129 (ite x2355 (x1082 x2272) (x1581 x2272)) (ite x3244 (x2549 x2272) (x1082 x2272))))
(define-fun x3522 ((x2272 Int)) Int (ite x1391 (ite x1904 (x1152 x2272) (x1082 x2272)) (ite x3483 (ite x1904 (x1152 x2272) (x1082 x2272)) (x1082 x2272))))
(define-fun x1610 ((x2272 Int)) Int (ite x530 (x2402 x2272) (x1082 x2272)))
(define-fun x3732 ((x2272 Int)) Int (ite x335 (ite x2885 (x1740 x2272) (x3522 x2272)) (ite x3375 (x1610 x2272) (ite x421 (x1610 x2272) (x1082 x2272)))))
(define-fun x27 ((x2272 Int)) Int (ite x3767 (x1082 x2272) (ite x938 (x1113 x2272) (x1082 x2272))))
(define-fun x251 ((x2272 Int)) Int (ite x1283 (ite x3678 (x3732 x2272) (x27 x2272)) (ite x2039 (x2045 x2272) (x1082 x2272))))
(define-fun x3604 ((x2272 Int)) Int (ite x846 (ite x846 (x251 x2272) (x1417 x2272)) (x1082 x2272)))
(define-fun x3284 ((x2272 Int)) Int (ite x1149 (x1082 x2272) (ite x846 (x3604 x2272) (x3019 x2272))))
(define-fun x621 ((x2272 Int)) Int (x3284 x2272))
(define-fun x2876 ((x2272 Int)) Int (ite x1531 (x3554 x2272) (x3187 x2272)))
(define-fun x1025 ((x2272 Int)) Int (ite x1129 (ite x2355 (x3187 x2272) (x2876 x2272)) (ite x3244 (x631 x2272) (x3187 x2272))))
(define-fun x2400 ((x2272 Int)) Int (ite x1391 (ite x1904 (x3329 x2272) (x3187 x2272)) (ite x3483 (ite x1904 (x3329 x2272) (x3187 x2272)) (x3187 x2272))))
(define-fun x2915 ((x2272 Int)) Int (ite x530 (x1455 x2272) (x3187 x2272)))
(define-fun x610 ((x2272 Int)) Int (ite x335 (ite x2885 (x1025 x2272) (x2400 x2272)) (ite x3375 (x2915 x2272) (ite x421 (x2915 x2272) (x3187 x2272)))))
(define-fun x3374 ((x2272 Int)) Int (ite x3767 (x3187 x2272) (ite x938 (x2062 x2272) (x3187 x2272))))
(define-fun x2348 ((x2272 Int)) Int (ite x1283 (ite x3678 (x610 x2272) (x3374 x2272)) (ite x2039 (x1264 x2272) (x3187 x2272))))
(define-fun x1992 ((x2272 Int)) Int (ite x846 (ite x846 (x2348 x2272) (x2340 x2272)) (x3187 x2272)))
(define-fun x260 ((x2272 Int)) Int (ite x1149 (x3187 x2272) (ite x846 (x1992 x2272) (x20 x2272))))
(define-fun x3133 ((x2272 Int)) Int (x260 x2272))
(define-fun x998 ((x2272 Int)) Int (ite x1531 (x3073 x2272) (x545 x2272)))
(define-fun x720 ((x2272 Int)) Int (ite x1129 (ite x2355 (x545 x2272) (x998 x2272)) (ite x3244 (x684 x2272) (x545 x2272))))
(define-fun x1603 ((x2272 Int)) Int (ite x1391 (ite x1904 (x580 x2272) (x545 x2272)) (ite x3483 (ite x1904 (x580 x2272) (x545 x2272)) (x545 x2272))))
(define-fun x3138 ((x2272 Int)) Int (ite x530 (x1818 x2272) (x545 x2272)))
(define-fun x784 ((x2272 Int)) Int (ite x335 (ite x2885 (x720 x2272) (x1603 x2272)) (ite x3375 (x3138 x2272) (ite x421 (x3138 x2272) (x545 x2272)))))
(define-fun x3123 ((x2272 Int)) Int (ite x3767 (x545 x2272) (ite x938 (x1397 x2272) (x545 x2272))))
(define-fun x1730 ((x2272 Int)) Int (ite x1283 (ite x3678 (x784 x2272) (x3123 x2272)) (ite x2039 (x2147 x2272) (x545 x2272))))
(define-fun x2102 ((x2272 Int)) Int (ite x846 (ite x846 (x1730 x2272) (x1515 x2272)) (x545 x2272)))
(define-fun x2590 ((x2272 Int)) Int (ite x1149 (x545 x2272) (ite x846 (x2102 x2272) (x2801 x2272))))
(define-fun x1909 ((x2272 Int)) Int (x2590 x2272))
(define-fun x1600 ((x2272 Int)) Int (ite x1531 (x65 x2272) (x1123 x2272)))
(define-fun x1511 ((x2272 Int)) Int (ite x1129 (ite x2355 (x1123 x2272) (x1600 x2272)) (ite x3244 (x2378 x2272) (x1123 x2272))))
(define-fun x958 ((x2272 Int)) Int (ite x1391 (ite x1904 (x2841 x2272) (x1123 x2272)) (ite x3483 (ite x1904 (x2841 x2272) (x1123 x2272)) (x1123 x2272))))
(define-fun x1686 ((x2272 Int)) Int (ite x530 (x2888 x2272) (x1123 x2272)))
(define-fun x741 ((x2272 Int)) Int (ite x335 (ite x2885 (x1511 x2272) (x958 x2272)) (ite x3375 (x1686 x2272) (ite x421 (x1686 x2272) (x1123 x2272)))))
(define-fun x702 ((x2272 Int)) Int (ite x3767 (x1123 x2272) (ite x938 (x2337 x2272) (x1123 x2272))))
(define-fun x116 ((x2272 Int)) Int (ite x1283 (ite x3678 (x741 x2272) (x702 x2272)) (ite x2039 (x2523 x2272) (x1123 x2272))))
(define-fun x1778 ((x2272 Int)) Int (ite x846 (ite x846 (x116 x2272) (x3407 x2272)) (x1123 x2272)))
(define-fun x659 ((x2272 Int)) Int (ite x1149 (x1123 x2272) (ite x846 (x1778 x2272) (x3141 x2272))))
(define-fun x3420 ((x2272 Int)) Int (x659 x2272))
(define-fun x3437 ((x2272 Int)) Int (ite x1531 (x1744 x2272) (x2760 x2272)))
(define-fun x569 ((x2272 Int)) Int (ite x1129 (ite x2355 (x2760 x2272) (x3437 x2272)) (ite x3244 (x171 x2272) (x2760 x2272))))
(define-fun x361 ((x2272 Int)) Int (ite x1391 (ite x1904 (x2401 x2272) (x2760 x2272)) (ite x3483 (ite x1904 (x2401 x2272) (x2760 x2272)) (x2760 x2272))))
(define-fun x1760 ((x2272 Int)) Int (ite x530 (x95 x2272) (x2760 x2272)))
(define-fun x1323 ((x2272 Int)) Int (ite x335 (ite x2885 (x569 x2272) (x361 x2272)) (ite x3375 (x1760 x2272) (ite x421 (x1760 x2272) (x2760 x2272)))))
(define-fun x2756 ((x2272 Int)) Int (ite x3767 (x2760 x2272) (ite x938 (x1893 x2272) (x2760 x2272))))
(define-fun x392 ((x2272 Int)) Int (ite x1283 (ite x3678 (x1323 x2272) (x2756 x2272)) (ite x2039 (x1458 x2272) (x2760 x2272))))
(define-fun x991 ((x2272 Int)) Int (ite x846 (ite x846 (x392 x2272) (x1960 x2272)) (x2760 x2272)))
(define-fun x2971 ((x2272 Int)) Int (ite x1149 (x2760 x2272) (ite x846 (x991 x2272) (x1549 x2272))))
(define-fun x2331 ((x2272 Int)) Int (x2971 x2272))
(define-fun x1869 ((x2272 Int)) Int (ite (= x2272 x2948) x1915 (x527 x2272)))
(define-fun x1878 ((x2272 Int)) Int (ite (= x2272 x3771) x887 (x1869 x2272)))
(define-fun x1058 ((x2272 Int)) Int (ite (= x1379 x2272) x2490 (x1878 x2272)))
(define-fun x838 ((x2272 Int)) Int (ite (= x28 x2272) x776 (x1058 x2272)))
(define-fun x1393 ((x2272 Int)) Int (ite x1904 (x339 x2272) (x838 x2272)))
(define-fun x3641 ((x2272 Int)) Int (ite (= x28 x2272) x657 (x1393 x2272)))
(define-fun x3478 ((x2272 Int)) Int (ite (= x1379 x2272) x3128 (x3641 x2272)))
(define-fun x1247 ((x2272 Int)) Int (ite (= x1379 x2272) x2868 (x1878 x2272)))
(define-fun x187 ((x2272 Int)) Int (ite (= x2272 x28) x3640 (x1247 x2272)))
(define-fun x1268 ((x2272 Int)) Int (ite x530 (x253 x2272) (x187 x2272)))
(define-fun x87 ((x2272 Int)) Int (ite (= x28 x2272) x2552 (x1268 x2272)))
(define-fun x216 ((x2272 Int)) Int (ite (= x2272 x1379) x1319 (x87 x2272)))
(define-fun x217 ((x2272 Int)) Int (ite (= x2272 x1379) x2539 (x1878 x2272)))
(define-fun x1228 ((x2272 Int)) Int (ite (= x2272 x28) x1269 (x217 x2272)))
(define-fun x461 ((x2272 Int)) Int (ite x938 (x2863 x2272) (x1228 x2272)))
(define-fun x2286 ((x2272 Int)) Int (ite (= x28 x2272) x240 (x461 x2272)))
(define-fun x1267 ((x2272 Int)) Int (ite (= x2272 x1379) x608 (x2286 x2272)))
(define-fun x2692 ((x2272 Int)) Int (ite x1149 (x1878 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x1878 x2272) (ite x1531 (x318 x2272) (x1878 x2272))) (ite x3244 (x1102 x2272) (x1878 x2272))) (ite x1391 (x1393 x2272) (ite x3483 (x3478 x2272) (x1878 x2272)))) (ite x3375 (x1268 x2272) (ite x421 (x216 x2272) (x1878 x2272)))) (ite x3767 (x1878 x2272) (ite x2697 (x461 x2272) (x1267 x2272)))) (ite x2039 (x3498 x2272) (x1878 x2272))) (x1878 x2272)) (x1878 x2272)) (x1878 x2272))))
(define-fun x1879 ((x2272 Int)) Int (ite (= x3771 x2272) x41 (x2692 x2272)))
(define-fun x855 ((x2272 Int)) Int (ite (= x2948 x2272) x2813 (x1879 x2272)))
(define-fun x342 ((x2272 Int)) Int (ite x3194 (x2692 x2272) (x855 x2272)))
(define-fun x2488 ((x2272 Int)) Int (ite x1531 (x107 x2272) (x883 x2272)))
(define-fun x3229 ((x2272 Int)) Int (ite x1129 (ite x2355 (x883 x2272) (x2488 x2272)) (ite x3244 (x1175 x2272) (x883 x2272))))
(define-fun x2243 ((x2272 Int)) Int (ite x1391 (ite x1904 (x1746 x2272) (x883 x2272)) (ite x3483 (ite x1904 (x1746 x2272) (x883 x2272)) (x883 x2272))))
(define-fun x766 ((x2272 Int)) Int (ite x530 (x746 x2272) (x883 x2272)))
(define-fun x1041 ((x2272 Int)) Int (ite x335 (ite x2885 (x3229 x2272) (x2243 x2272)) (ite x3375 (x766 x2272) (ite x421 (x766 x2272) (x883 x2272)))))
(define-fun x267 ((x2272 Int)) Int (ite x3767 (x883 x2272) (ite x938 (x1650 x2272) (x883 x2272))))
(define-fun x3009 ((x2272 Int)) Int (ite x1283 (ite x3678 (x1041 x2272) (x267 x2272)) (ite x2039 (x2770 x2272) (x883 x2272))))
(define-fun x469 ((x2272 Int)) Int (ite x846 (ite x846 (x3009 x2272) (x3285 x2272)) (x883 x2272)))
(define-fun x369 ((x2272 Int)) Int (ite x1149 (x883 x2272) (ite x846 (x469 x2272) (x3775 x2272))))
(define-fun x1099 ((x2272 Int)) Int (x369 x2272))
(define-fun x3065 ((x2272 Int)) Int (ite x1531 (x3001 x2272) (x3159 x2272)))
(define-fun x3615 ((x2272 Int)) Int (ite x1129 (ite x2355 (x3159 x2272) (x3065 x2272)) (ite x3244 (x3692 x2272) (x3159 x2272))))
(define-fun x2187 ((x2272 Int)) Int (ite x1391 (ite x1904 (x3497 x2272) (x3159 x2272)) (ite x3483 (ite x1904 (x3497 x2272) (x3159 x2272)) (x3159 x2272))))
(define-fun x3354 ((x2272 Int)) Int (ite x530 (x595 x2272) (x3159 x2272)))
(define-fun x566 ((x2272 Int)) Int (ite x335 (ite x2885 (x3615 x2272) (x2187 x2272)) (ite x3375 (x3354 x2272) (ite x421 (x3354 x2272) (x3159 x2272)))))
(define-fun x5 ((x2272 Int)) Int (ite x3767 (x3159 x2272) (ite x938 (x3579 x2272) (x3159 x2272))))
(define-fun x3043 ((x2272 Int)) Int (ite x1283 (ite x3678 (x566 x2272) (x5 x2272)) (ite x2039 (x459 x2272) (x3159 x2272))))
(define-fun x1349 ((x2272 Int)) Int (ite x846 (ite x846 (x3043 x2272) (x2676 x2272)) (x3159 x2272)))
(define-fun x2094 ((x2272 Int)) Int (ite x1149 (x3159 x2272) (ite x846 (x1349 x2272) (x1906 x2272))))
(define-fun x526 ((x2272 Int)) Int (x2094 x2272))
(define-fun x414 ((x2272 Int)) Int (ite x1531 (x3444 x2272) (x480 x2272)))
(define-fun x2426 ((x2272 Int)) Int (ite x1129 (ite x2355 (x480 x2272) (x414 x2272)) (ite x3244 (x280 x2272) (x480 x2272))))
(define-fun x3548 ((x2272 Int)) Int (ite x1391 (ite x1904 (x1674 x2272) (x480 x2272)) (ite x3483 (ite x1904 (x1674 x2272) (x480 x2272)) (x480 x2272))))
(define-fun x3541 ((x2272 Int)) Int (ite x530 (x858 x2272) (x480 x2272)))
(define-fun x1988 ((x2272 Int)) Int (ite x335 (ite x2885 (x2426 x2272) (x3548 x2272)) (ite x3375 (x3541 x2272) (ite x421 (x3541 x2272) (x480 x2272)))))
(define-fun x185 ((x2272 Int)) Int (ite x3767 (x480 x2272) (ite x938 (x420 x2272) (x480 x2272))))
(define-fun x2873 ((x2272 Int)) Int (ite x1283 (ite x3678 (x1988 x2272) (x185 x2272)) (ite x2039 (x1547 x2272) (x480 x2272))))
(define-fun x2130 ((x2272 Int)) Int (ite x846 (ite x846 (x2873 x2272) (x1877 x2272)) (x480 x2272)))
(define-fun x1465 ((x2272 Int)) Int (ite x1149 (x480 x2272) (ite x846 (x2130 x2272) (x1946 x2272))))
(define-fun x1789 ((x2272 Int)) Int (x1465 x2272))
(define-fun x1143 ((x2272 Int)) Int (ite x1531 (x150 x2272) (x2666 x2272)))
(define-fun x2306 ((x2272 Int)) Int (ite x1129 (ite x2355 (x2666 x2272) (x1143 x2272)) (ite x3244 (x3580 x2272) (x2666 x2272))))
(define-fun x669 ((x2272 Int)) Int (ite x1391 (ite x1904 (x751 x2272) (x2666 x2272)) (ite x3483 (ite x1904 (x751 x2272) (x2666 x2272)) (x2666 x2272))))
(define-fun x1377 ((x2272 Int)) Int (ite x530 (x3006 x2272) (x2666 x2272)))
(define-fun x120 ((x2272 Int)) Int (ite x335 (ite x2885 (x2306 x2272) (x669 x2272)) (ite x3375 (x1377 x2272) (ite x421 (x1377 x2272) (x2666 x2272)))))
(define-fun x3491 ((x2272 Int)) Int (ite x3767 (x2666 x2272) (ite x938 (x862 x2272) (x2666 x2272))))
(define-fun x293 ((x2272 Int)) Int (ite x1283 (ite x3678 (x120 x2272) (x3491 x2272)) (ite x2039 (x927 x2272) (x2666 x2272))))
(define-fun x861 ((x2272 Int)) Int (ite x846 (ite x846 (x293 x2272) (x1032 x2272)) (x2666 x2272)))
(define-fun x806 ((x2272 Int)) Int (ite x1149 (x2666 x2272) (ite x846 (x861 x2272) (x1444 x2272))))
(define-fun x892 ((x2272 Int)) Int (x806 x2272))
(define-fun x1657 ((x2272 Int)) Int (ite x1425 (x2778 x2272) (ite x3516 (x221 x2272) (x3179 x2272))))
(define-fun x3045 ((x2272 Int)) Int (ite (= x2272 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x1657 x2272)))
(define-fun x969 ((x2272 Int)) Int (ite (= x2272 164) x2948 (x3045 x2272)))
(define-fun x2290 ((x2272 Int)) Int (ite (= x2272 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x969 x2272)))
(define-fun x2457 ((x2272 Int)) Int (ite (= x2272 164) x1363 (x2290 x2272)))
(define-fun x3449 ((x2272 Int)) Int (ite (= 128 x2272) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x1533 x2272)))
(define-fun x211 ((x2272 Int)) Int (ite (= 132 x2272) x3010 (x3449 x2272)))
(define-fun x1512 ((x2272 Int)) Int (ite (= 164 x2272) x3487 (x211 x2272)))
(define-fun x3403 ((x2272 Int)) Int (ite (= x2272 128) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x1533 x2272)))
(define-fun x442 ((x2272 Int)) Int (ite (= x2272 132) x1816 (x3403 x2272)))
(define-fun x2645 ((x2272 Int)) Int (ite (= 164 x2272) x2204 (x442 x2272)))
(define-fun x1098 ((x2272 Int)) Int (ite (= x1379 x2272) x302 (x342 x2272)))
(define-fun x1189 ((x2272 Int)) Int (ite (= x2272 x3301) x1726 (x1098 x2272)))
(define-fun x2188 ((x2272 Int)) Int (ite (and (> 160 x2272) (>= x2272 128)) (x2200 (- x2272 128)) (x2645 x2272)))
(define-fun x1951 ((x2272 Int)) Int (ite (= 160 x2272) x2712 (x1533 x2272)))
(define-fun x2048 ((x2272 Int)) Int (ite (= x2272 192) x45 (x1951 x2272)))
(define-fun x3034 ((x2272 Int)) Int (ite (= 224 x2272) x2301 (x2048 x2272)))
(define-fun x534 ((x2272 Int)) Int (ite (= 256 x2272) x3156 (x3034 x2272)))
(define-fun x3313 ((x2272 Int)) Int (ite (= x2272 288) x987 (x534 x2272)))
(define-fun x3183 ((x2272 Int)) Int (ite (= 320 x2272) x1865 (x3313 x2272)))
(define-fun x371 ((x2272 Int)) Int (ite (= 352 x2272) x1066 (x3183 x2272)))
(define-fun x2593 ((x2272 Int)) Int (ite (= 384 x2272) x3652 (x371 x2272)))
(define-fun x1110 ((x2272 Int)) Int (ite (= 416 x2272) x2480 (x2593 x2272)))
(define-fun x898 ((x2272 Int)) Int (ite (= 448 x2272) x1812 (x1110 x2272)))
(define-fun x47 ((x2272 Int)) Int (ite (= 128 x2272) 320 (x898 x2272)))
(define-fun x1042 ((x2272 Int)) Int (ite (= 480 x2272) 0 (x47 x2272)))
(define-fun x1128 ((x2272 Int)) Int (ite (= x2272 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1533 x2272)))
(define-fun x1596 ((x2272 Int)) Int (ite (= 132 x2272) x2935 (x1128 x2272)))
(define-fun x3178 ((x2272 Int)) Int (ite (= x2272 164) x1867 (x1596 x2272)))
(define-fun x2482 ((x2272 Int)) Int (ite (= x2272 196) x3515 (x3178 x2272)))
(define-fun x3220 ((x2272 Int)) Int (ite (= x1379 x2272) x513 (x342 x2272)))
(define-fun x2156 ((x2272 Int)) Int (ite (= x2272 x3301) x3195 (x3220 x2272)))
(define-fun x1644 ((x2272 Int)) Int (ite (= 128 x2272) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1533 x2272)))
(define-fun x374 ((x2272 Int)) Int (ite (= 132 x2272) x453 (x1644 x2272)))
(define-fun x550 ((x2272 Int)) Int (ite (= 128 x2272) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1533 x2272)))
(define-fun x2381 ((x2272 Int)) Int (ite (= x2272 132) x3645 (x550 x2272)))
(define-fun x3642 ((x2272 Int)) Int (ite (and (> 192 x2272) (<= 160 x2272)) (x3196 (- x2272 160)) (x3316 x2272)))
(define-fun x1675 ((x2272 Int)) Int (ite x3102 (x3133 x2272) (ite x2599 (x2866 x2272) (x3133 x2272))))
(define-fun x209 ((x2272 Int)) Int (ite x990 (x464 x2272) (x3133 x2272)))
(define-fun x162 ((x2272 Int)) Int (ite x114 (x917 x2272) (x3133 x2272)))
(define-fun x382 ((x2272 Int)) Int (ite x3022 (ite x43 (x1675 x2272) (x209 x2272)) (ite x774 (x162 x2272) (ite x2807 (x162 x2272) (x3133 x2272)))))
(define-fun x1136 ((x2272 Int)) Int (ite x2412 (ite x1447 (x3520 x2272) (x3133 x2272)) (ite x2624 (ite x1447 (x3520 x2272) (x3133 x2272)) (x3133 x2272))))
(define-fun x1535 ((x2272 Int)) Int (ite x1564 (x1598 x2272) (x3133 x2272)))
(define-fun x549 ((x2272 Int)) Int (ite x3391 (ite x3533 (x382 x2272) (x1136 x2272)) (ite x2435 (x3133 x2272) (x1535 x2272))))
(define-fun x1233 ((x2272 Int)) Int (ite x3373 (x2710 x2272) (x3133 x2272)))
(define-fun x2065 ((x2272 Int)) Int (ite x2611 (ite x80 (x549 x2272) (x1233 x2272)) (x3133 x2272)))
(define-fun x802 ((x2272 Int)) Int (ite x2611 (ite x2611 (x2065 x2272) (x606 x2272)) (x3133 x2272)))
(define-fun x2703 ((x2272 Int)) Int (ite x808 (x3133 x2272) (x802 x2272)))
(define-fun x263 ((x2272 Int)) Int (ite x808 (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))) (ite x2611 (ite x2611 (ite x2611 (ite x80 (ite x3391 (ite x3533 (ite x3022 (ite x43 (ite x3102 (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))) (ite x2599 (x3674 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))))) (ite x990 (x1801 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))))) (ite x774 (ite x114 (x2308 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x2807 (ite x114 (x2308 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))))) (ite x2412 (ite x1447 (x3236 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x2624 (ite x1447 (x3236 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))))) (ite x2435 (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))) (ite x1564 (x1755 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))))) (ite x3373 (x383 x2272) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))))) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272)))) (ite x1149 (x2305 x2272) (ite x846 (ite x846 (ite x846 (ite x1283 (ite x3678 (ite x335 (ite x2885 (ite x1129 (ite x2355 (x2305 x2272) (ite x1531 (x558 x2272) (x2305 x2272))) (ite x3244 (x3259 x2272) (x2305 x2272))) (ite x1391 (ite x1904 (x3370 x2272) (x2305 x2272)) (ite x3483 (ite x1904 (x3370 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3375 (ite x530 (x2718 x2272) (x2305 x2272)) (ite x421 (ite x530 (x2718 x2272) (x2305 x2272)) (x2305 x2272)))) (ite x3767 (x2305 x2272) (ite x938 (x1762 x2272) (x2305 x2272)))) (ite x2039 (x936 x2272) (x2305 x2272))) (x2305 x2272)) (x2305 x2272)) (x2305 x2272))))))
(define-fun x2671 ((x2272 Int)) Int (ite x3102 (x2663 x2272) (ite x2599 (x2753 x2272) (x2663 x2272))))
(define-fun x1723 ((x2272 Int)) Int (ite x990 (x3750 x2272) (x2663 x2272)))
(define-fun x1566 ((x2272 Int)) Int (ite x114 (x895 x2272) (x2663 x2272)))
(define-fun x2568 ((x2272 Int)) Int (ite x3022 (ite x43 (x2671 x2272) (x1723 x2272)) (ite x774 (x1566 x2272) (ite x2807 (x1566 x2272) (x2663 x2272)))))
(define-fun x528 ((x2272 Int)) Int (ite x2412 (ite x1447 (x3472 x2272) (x2663 x2272)) (ite x2624 (ite x1447 (x3472 x2272) (x2663 x2272)) (x2663 x2272))))
(define-fun x2803 ((x2272 Int)) Int (ite x1564 (x411 x2272) (x2663 x2272)))
(define-fun x3041 ((x2272 Int)) Int (ite x3391 (ite x3533 (x2568 x2272) (x528 x2272)) (ite x2435 (x2663 x2272) (x2803 x2272))))
(define-fun x3059 ((x2272 Int)) Int (ite x3373 (x3029 x2272) (x2663 x2272)))
(define-fun x246 ((x2272 Int)) Int (ite x2611 (ite x80 (x3041 x2272) (x3059 x2272)) (x2663 x2272)))
(define-fun x1254 ((x2272 Int)) Int (ite x2611 (ite x2611 (x246 x2272) (x3093 x2272)) (x2663 x2272)))
(define-fun x1357 ((x2272 Int)) Int (ite x808 (x2663 x2272) (x1254 x2272)))
(define-fun x1889 ((x2272 Int)) Int (ite (= x2272 x118) 0 (x1357 x2272)))
(define-fun x2736 ((x2272 Int)) Int (ite (= x2272 x1478) 1 (x2703 x2272)))
(define-fun x2186 ((x2272 Int)) Int (ite x3102 (x3234 x2272) (ite x2599 (x753 x2272) (x3234 x2272))))
(define-fun x159 ((x2272 Int)) Int (ite x990 (x857 x2272) (x3234 x2272)))
(define-fun x689 ((x2272 Int)) Int (ite x114 (x19 x2272) (x3234 x2272)))
(define-fun x3702 ((x2272 Int)) Int (ite x3022 (ite x43 (x2186 x2272) (x159 x2272)) (ite x774 (x689 x2272) (ite x2807 (x689 x2272) (x3234 x2272)))))
(define-fun x3389 ((x2272 Int)) Int (ite x2412 (ite x1447 (x2800 x2272) (x3234 x2272)) (ite x2624 (ite x1447 (x2800 x2272) (x3234 x2272)) (x3234 x2272))))
(define-fun x2421 ((x2272 Int)) Int (ite x1564 (x448 x2272) (x3234 x2272)))
(define-fun x2345 ((x2272 Int)) Int (ite x3391 (ite x3533 (x3702 x2272) (x3389 x2272)) (ite x2435 (x3234 x2272) (x2421 x2272))))
(define-fun x3070 ((x2272 Int)) Int (ite x3373 (x2717 x2272) (x3234 x2272)))
(define-fun x3428 ((x2272 Int)) Int (ite x2611 (ite x80 (x2345 x2272) (x3070 x2272)) (x3234 x2272)))
(define-fun x2817 ((x2272 Int)) Int (ite x2611 (ite x2611 (x3428 x2272) (x1660 x2272)) (x3234 x2272)))
(define-fun x2083 ((x2272 Int)) Int (ite x808 (x3234 x2272) (x2817 x2272)))
(define-fun x3086 ((x2272 Int)) Int (ite (= x3704 x2272) x1439 (x2083 x2272)))
(define-fun x738 ((x2272 Int)) Int (ite x3102 (x1099 x2272) (ite x2599 (x1766 x2272) (x1099 x2272))))
(define-fun x1316 ((x2272 Int)) Int (ite x990 (x1488 x2272) (x1099 x2272)))
(define-fun x2882 ((x2272 Int)) Int (ite x114 (x773 x2272) (x1099 x2272)))
(define-fun x425 ((x2272 Int)) Int (ite x3022 (ite x43 (x738 x2272) (x1316 x2272)) (ite x774 (x2882 x2272) (ite x2807 (x2882 x2272) (x1099 x2272)))))
(define-fun x231 ((x2272 Int)) Int (ite x2412 (ite x1447 (x2545 x2272) (x1099 x2272)) (ite x2624 (ite x1447 (x2545 x2272) (x1099 x2272)) (x1099 x2272))))
(define-fun x1374 ((x2272 Int)) Int (ite x1564 (x1468 x2272) (x1099 x2272)))
(define-fun x939 ((x2272 Int)) Int (ite x3391 (ite x3533 (x425 x2272) (x231 x2272)) (ite x2435 (x1099 x2272) (x1374 x2272))))
(define-fun x1260 ((x2272 Int)) Int (ite x3373 (x1652 x2272) (x1099 x2272)))
(define-fun x1395 ((x2272 Int)) Int (ite x2611 (ite x80 (x939 x2272) (x1260 x2272)) (x1099 x2272)))
(define-fun x1721 ((x2272 Int)) Int (ite x2611 (ite x2611 (x1395 x2272) (x196 x2272)) (x1099 x2272)))
(define-fun x1743 ((x2272 Int)) Int (ite x808 (x1099 x2272) (x1721 x2272)))
(define-fun x1085 ((x2272 Int)) Int (ite (= x1716 x2272) 0 (x1743 x2272)))
(define-fun x3742 ((x2272 Int)) Int (ite (and (>= x2272 x1750) (> (+ x1750 32) x2272)) (x3332 (- x2272 x1750)) (x788 x2272)))
(define-fun x111 ((x2272 Int)) Int 0)
(define-fun x2379 ((x2272 Int)) Int (x1205 x2272))
(define-fun x2496 ((x2272 Int)) Int (x2379 x2272))
(define-fun x2491 ((x2272 Int)) Int (x1168 x2272))
(define-fun x572 ((x2272 Int)) Int (x2491 x2272))
(define-fun x1092 ((x2272 Int)) Int (x1271 x2272))
(define-fun x3387 ((x2272 Int)) Int (x1092 x2272))
(define-fun x3687 ((x2272 Int)) Int (x2824 x2272))
(define-fun x3763 ((x2272 Int)) Int (x3687 x2272))
(define-fun x3695 ((x2272 Int)) Int (x2372 x2272))
(define-fun x1827 ((x2272 Int)) Int (x3695 x2272))
(define-fun x2791 ((x2272 Int)) Int (x244 x2272))
(define-fun x3696 ((x2272 Int)) Int (x2791 x2272))
(define-fun x3705 ((x2272 Int)) Int (x2791 x2272))
(define-fun x3295 ((x2272 Int)) Int (x2379 x2272))
(define-fun x85 ((x2272 Int)) Int (x2052 x2272))
(define-fun x2082 ((x2272 Int)) Int (x2464 x2272))
(define-fun x1771 ((x2272 Int)) Int (x418 x2272))
(define-fun x391 ((x2272 Int)) Int (x2558 x2272))
(define-fun x2369 ((x2272 Int)) Int (x3450 x2272))
(define-fun x2132 ((x2272 Int)) Int (x2491 x2272))
(define-fun x906 ((x2272 Int)) Int (x1092 x2272))
(define-fun x997 ((x2272 Int)) Int (x806 x2272))
(define-fun x736 ((x2272 Int)) Int (x3687 x2272))
(define-fun x1087 ((x2272 Int)) Int (x3695 x2272))
(define-fun x3322 ((x2272 Int)) Int (x1465 x2272))
(define-fun x495 ((x2272 Int)) Int (x97 x2272))
(define-fun x3319 ((x2272 Int)) Int (x659 x2272))
(define-fun x868 ((x2272 Int)) Int (x3284 x2272))
(define-fun x2109 ((x2272 Int)) Int (x2590 x2272))
(define-fun x1989 ((x2272 Int)) Int (x2971 x2272))
(define-fun x648 ((x2272 Int)) Int (x2094 x2272))
(define-fun x9 ((x2272 Int)) Int (x3279 x2272))
(define-fun x3071 ((x2272 Int)) Int (x369 x2272))
(define-fun x3627 ((x2272 Int)) Int (x260 x2272))
(define-fun x799 ((x2272 Int)) Int (ite x846 (x1384 x2272) (x880 x2272)))
(define-fun x1961 ((x2272 Int)) Int (ite x846 (x3009 x2272) (x3285 x2272)))
(define-fun x3725 ((x2272 Int)) Int (ite x846 (x392 x2272) (x1960 x2272)))
(define-fun x1235 ((x2272 Int)) Int (ite x846 (x533 x2272) (x826 x2272)))
(define-fun x2744 ((x2272 Int)) Int (ite x846 (x116 x2272) (x3407 x2272)))
(define-fun x1318 ((x2272 Int)) Int (ite x846 (x1315 x2272) (x2314 x2272)))
(define-fun x2382 ((x2272 Int)) Int (ite x846 (x1938 x2272) (x1682 x2272)))
(define-fun x2075 ((x2272 Int)) Int (ite x846 (x2884 x2272) (x2583 x2272)))
(define-fun x946 ((x2272 Int)) Int (ite x846 (x1730 x2272) (x1515 x2272)))
(define-fun x2818 ((x2272 Int)) Int (ite x846 (x2873 x2272) (x1877 x2272)))
(define-fun x1719 ((x2272 Int)) Int (ite x846 (x251 x2272) (x1417 x2272)))
(define-fun x1631 ((x2272 Int)) Int (ite x846 (x1785 x2272) (x3593 x2272)))
(define-fun x10 ((x2272 Int)) Int (ite x846 (x2348 x2272) (x2340 x2272)))
(define-fun x540 ((x2272 Int)) Int (ite x846 (x886 x2272) (x1795 x2272)))
(define-fun x1173 ((x2272 Int)) Int (ite x846 (x3043 x2272) (x2676 x2272)))
(define-fun x3778 ((x2272 Int)) Int (ite x846 (x293 x2272) (x1032 x2272)))
(define-fun x222 ((x2272 Int)) Int (ite x846 (x3604 x2272) (x3019 x2272)))
(define-fun x502 ((x2272 Int)) Int (ite x846 (x167 x2272) (x1635 x2272)))
(define-fun x3210 ((x2272 Int)) Int (ite x846 (x1778 x2272) (x3141 x2272)))
(define-fun x3310 ((x2272 Int)) Int (ite x846 (x2470 x2272) (x2089 x2272)))
(define-fun x2834 ((x2272 Int)) Int (ite x846 (x2397 x2272) (x586 x2272)))
(define-fun x2992 ((x2272 Int)) Int (ite x846 (x2130 x2272) (x1946 x2272)))
(define-fun x601 ((x2272 Int)) Int (ite x846 (x2102 x2272) (x2801 x2272)))
(define-fun x3188 ((x2272 Int)) Int (ite x846 (x1349 x2272) (x1906 x2272)))
(define-fun x2927 ((x2272 Int)) Int (ite x846 (x861 x2272) (x1444 x2272)))
(define-fun x2895 ((x2272 Int)) Int (ite x846 (x3495 x2272) (x2707 x2272)))
(define-fun x1245 ((x2272 Int)) Int (ite x846 (x90 x2272) (x754 x2272)))
(define-fun x431 ((x2272 Int)) Int (ite x846 (x469 x2272) (x3775 x2272)))
(define-fun x3566 ((x2272 Int)) Int (ite x846 (x2622 x2272) (x1390 x2272)))
(define-fun x3562 ((x2272 Int)) Int (ite x846 (x1992 x2272) (x20 x2272)))
(define-fun x2377 ((x2272 Int)) Int (ite x846 (x991 x2272) (x1549 x2272)))
(define-fun x1263 ((x2272 Int)) Int (ite x846 (x1525 x2272) (x3719 x2272)))
(define-fun x1828 ((x2272 Int)) Int (ite (= 128 x2272) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x2606 x2272)))
(define-fun x3079 ((x2272 Int)) Int (ite (= 132 x2272) x3561 (x1828 x2272)))
(define-fun x860 ((x2272 Int)) Int (ite (= 164 x2272) x3040 (x3079 x2272)))
(define-fun x3174 ((x2272 Int)) Int (ite (and (> 160 x2272) (>= x2272 128)) (x3560 (- x2272 128)) (x860 x2272)))
(define-fun x1240 ((x2272 Int)) Int (ite x3767 (x860 x2272) (ite x938 (x3174 x2272) (x860 x2272))))
(define-fun x378 ((x2272 Int)) Int (ite x3375 (x766 x2272) (ite x421 (x766 x2272) (x883 x2272))))
(define-fun x1106 ((x2272 Int)) Int (ite x3375 (x3138 x2272) (ite x421 (x3138 x2272) (x545 x2272))))
(define-fun x3056 ((x2272 Int)) Int (ite x3375 (x2859 x2272) (ite x421 (x2859 x2272) (x1400 x2272))))
(define-fun x1471 ((x2272 Int)) Int (ite x3375 (x2987 x2272) (ite x421 (x2987 x2272) (x472 x2272))))
(define-fun x2608 ((x2272 Int)) Int (ite x3375 (x3541 x2272) (ite x421 (x3541 x2272) (x480 x2272))))
(define-fun x3072 ((x2272 Int)) Int (ite x3375 (x2915 x2272) (ite x421 (x2915 x2272) (x3187 x2272))))
(define-fun x2118 ((x2272 Int)) Int (ite x3375 (x3354 x2272) (ite x421 (x3354 x2272) (x3159 x2272))))
(define-fun x1791 ((x2272 Int)) Int (ite x3375 (x1610 x2272) (ite x421 (x1610 x2272) (x1082 x2272))))
(define-fun x3252 ((x2272 Int)) Int (ite x3375 (x3047 x2272) (ite x421 (x3047 x2272) (x3176 x2272))))
(define-fun x1355 ((x2272 Int)) Int (ite x3375 (x1760 x2272) (ite x421 (x1760 x2272) (x2760 x2272))))
(define-fun x2339 ((x2272 Int)) Int (ite x3375 (x1068 x2272) (ite x421 (x1068 x2272) (x701 x2272))))
(define-fun x3698 ((x2272 Int)) Int (ite x3375 (x1377 x2272) (ite x421 (x1377 x2272) (x2666 x2272))))
(define-fun x1296 ((x2272 Int)) Int (ite x3375 (x1686 x2272) (ite x421 (x1686 x2272) (x1123 x2272))))
(define-fun x390 ((x2272 Int)) Int (ite x3375 (x3080 x2272) (ite x421 (x3080 x2272) (x1666 x2272))))
(define-fun x1899 ((x2272 Int)) Int (ite x3375 (x205 x2272) (ite x421 (x205 x2272) (x2766 x2272))))
(define-fun x338 ((x2272 Int)) Int (ite x3375 (x257 x2272) (ite x421 (x257 x2272) (x529 x2272))))
(define-fun x2651 ((x2272 Int)) Int (ite x2885 (x1740 x2272) (x3522 x2272)))
(define-fun x3032 ((x2272 Int)) Int (ite x2885 (x2037 x2272) (x729 x2272)))
(define-fun x2828 ((x2272 Int)) Int (ite x2885 (x3020 x2272) (x2926 x2272)))
(define-fun x2074 ((x2272 Int)) Int (ite x2885 (x720 x2272) (x1603 x2272)))
(define-fun x2846 ((x2272 Int)) Int (ite x2885 (x1290 x2272) (x896 x2272)))
(define-fun x1843 ((x2272 Int)) Int (ite x2885 (x1302 x2272) (x1181 x2272)))
(define-fun x3568 ((x2272 Int)) Int (ite x2885 (x2010 x2272) (x3172 x2272)))
(define-fun x2367 ((x2272 Int)) Int (ite x2885 (x3615 x2272) (x2187 x2272)))
(define-fun x2138 ((x2272 Int)) Int (ite x2885 (x2306 x2272) (x669 x2272)))
(define-fun x3137 ((x2272 Int)) Int (ite x2885 (x3229 x2272) (x2243 x2272)))
(define-fun x3101 ((x2272 Int)) Int (ite x2885 (x569 x2272) (x361 x2272)))
(define-fun x1832 ((x2272 Int)) Int (ite x2885 (x2276 x2272) (x225 x2272)))
(define-fun x541 ((x2272 Int)) Int (ite x2885 (x3413 x2272) (x2329 x2272)))
(define-fun x3299 ((x2272 Int)) Int (ite x2885 (x2426 x2272) (x3548 x2272)))
(define-fun x1378 ((x2272 Int)) Int (ite x2885 (x1511 x2272) (x958 x2272)))
(define-fun x705 ((x2272 Int)) Int (ite x2885 (x1025 x2272) (x2400 x2272)))
(define-fun x3410 ((x2272 Int)) Int (ite x2355 (x1123 x2272) (x1600 x2272)))
(define-fun x2235 ((x2272 Int)) Int (ite x2355 (x883 x2272) (x2488 x2272)))
(define-fun x957 ((x2272 Int)) Int (ite x2355 (x3176 x2272) (x3741 x2272)))
(define-fun x1270 ((x2272 Int)) Int (ite x2355 (x1082 x2272) (x1581 x2272)))
(define-fun x3038 ((x2272 Int)) Int (ite x2355 (x529 x2272) (x2385 x2272)))
(define-fun x655 ((x2272 Int)) Int (ite x2355 (x480 x2272) (x414 x2272)))
(define-fun x1642 ((x2272 Int)) Int (ite x2355 (x2760 x2272) (x3437 x2272)))
(define-fun x979 ((x2272 Int)) Int (ite x2355 (x1666 x2272) (x3095 x2272)))
(define-fun x1811 ((x2272 Int)) Int (ite x2355 (x3159 x2272) (x3065 x2272)))
(define-fun x3039 ((x2272 Int)) Int (ite x2355 (x545 x2272) (x998 x2272)))
(define-fun x1587 ((x2272 Int)) Int (ite x2355 (x472 x2272) (x2534 x2272)))
(define-fun x3722 ((x2272 Int)) Int (ite x2355 (x2766 x2272) (x2116 x2272)))
(define-fun x2046 ((x2272 Int)) Int (ite x2355 (x701 x2272) (x1628 x2272)))
(define-fun x1936 ((x2272 Int)) Int (ite x2355 (x1400 x2272) (x3287 x2272)))
(define-fun x653 ((x2272 Int)) Int (ite x2355 (x2666 x2272) (x1143 x2272)))
(define-fun x2708 ((x2272 Int)) Int (ite x2355 (x3187 x2272) (x2876 x2272)))
(define-fun x96 ((x2272 Int)) Int (ite x3678 (x2419 x2272) (x2279 x2272)))
(define-fun x1236 ((x2272 Int)) Int (ite x3678 (x566 x2272) (x5 x2272)))
(define-fun x3105 ((x2272 Int)) Int (ite x3678 (x120 x2272) (x3491 x2272)))
(define-fun x3399 ((x2272 Int)) Int (ite x3678 (x1041 x2272) (x267 x2272)))
(define-fun x2254 ((x2272 Int)) Int (ite x3678 (x1323 x2272) (x2756 x2272)))
(define-fun x708 ((x2272 Int)) Int (ite x3678 (x460 x2272) (x3167 x2272)))
(define-fun x1735 ((x2272 Int)) Int (ite x3678 (x140 x2272) (x1527 x2272)))
(define-fun x2436 ((x2272 Int)) Int (ite x3678 (x1988 x2272) (x185 x2272)))
(define-fun x3681 ((x2272 Int)) Int (ite x3678 (x610 x2272) (x3374 x2272)))
(define-fun x2962 ((x2272 Int)) Int (ite x3678 (x3732 x2272) (x27 x2272)))
(define-fun x2633 ((x2272 Int)) Int (ite x3678 (x741 x2272) (x702 x2272)))
(define-fun x1503 ((x2272 Int)) Int (ite x3678 (x1057 x2272) (x1986 x2272)))
(define-fun x2448 ((x2272 Int)) Int (ite x3678 (x829 x2272) (x3261 x2272)))
(define-fun x2897 ((x2272 Int)) Int (ite x3678 (x1737 x2272) (x1845 x2272)))
(define-fun x1551 ((x2272 Int)) Int (ite x3678 (x784 x2272) (x3123 x2272)))
(define-fun x3619 ((x2272 Int)) Int (ite x3678 (x640 x2272) (x1990 x2272)))
(define-fun x1148 ((x2272 Int)) Int (ite (= x2272 160) x2616 (x2606 x2272)))
(define-fun x327 ((x2272 Int)) Int (ite (= x2272 192) x3227 (x1148 x2272)))
(define-fun x349 ((x2272 Int)) Int (ite (= 224 x2272) x1380 (x327 x2272)))
(define-fun x3337 ((x2272 Int)) Int (ite (= 256 x2272) x607 (x349 x2272)))
(define-fun x2896 ((x2272 Int)) Int (ite (= 288 x2272) x1805 (x3337 x2272)))
(define-fun x3596 ((x2272 Int)) Int (ite (= 320 x2272) x1860 (x2896 x2272)))
(define-fun x3747 ((x2272 Int)) Int (ite (= x2272 352) x598 (x3596 x2272)))
(define-fun x2675 ((x2272 Int)) Int (ite (= x2272 384) x2957 (x3747 x2272)))
(define-fun x2743 ((x2272 Int)) Int (ite (= 416 x2272) x2977 (x2675 x2272)))
(define-fun x188 ((x2272 Int)) Int (ite (= x2272 448) x1287 (x2743 x2272)))
(define-fun x2292 ((x2272 Int)) Int (ite (= 128 x2272) 320 (x188 x2272)))
(define-fun x1122 ((x2272 Int)) Int (ite (= x3509 x2272) x3392 (x2292 x2272)))
(define-fun x288 ((x2272 Int)) Int (ite x3124 (x2292 x2272) (x1122 x2272)))
(define-fun x724 ((x2272 Int)) Int (ite (= x2272 480) x3490 (x288 x2272)))
(define-fun x1396 ((x2272 Int)) Int (ite (= 480 x2272) 0 (x2292 x2272)))
(define-fun x884 ((x2272 Int)) Int (ite x1710 (x724 x2272) (x1396 x2272)))
(define-fun x429 ((x2272 Int)) Int (ite (= x2272 x3488) x181 (x884 x2272)))
(define-fun x1659 ((x2272 Int)) Int (ite (= x1971 x2272) x226 (x429 x2272)))
(define-fun x1665 ((x2272 Int)) Int (ite (= x2272 x703) x410 (x1659 x2272)))
(define-fun x2563 ((x2272 Int)) Int (ite (= x2272 x1885) x3384 (x1665 x2272)))
(define-fun x1183 ((x2272 Int)) Int (ite (= x2272 x1126) x1706 (x2563 x2272)))
(define-fun x2975 ((x2272 Int)) Int (ite (= x3283 x2272) x2255 (x1183 x2272)))
(define-fun x1298 ((x2272 Int)) Int (ite (= x2272 x712) x3433 (x2975 x2272)))
(define-fun x1027 ((x2272 Int)) Int (ite (= x3336 x2272) x509 (x1298 x2272)))
(define-fun x2221 ((x2272 Int)) Int (ite (= x2272 x2910) x1538 (x1027 x2272)))
(define-fun x2096 ((x2272 Int)) Int (ite (= x3294 x2272) x236 (x2221 x2272)))
(define-fun x268 ((x2272 Int)) Int (ite (= x710 x2272) x3411 (x2096 x2272)))
(define-fun x3626 ((x2272 Int)) Int (ite (= x1033 x2272) x184 (x268 x2272)))
(define-fun x3454 ((x2272 Int)) Int (ite x1125 (x268 x2272) (x3626 x2272)))
(define-fun x2189 ((x2272 Int)) Int (ite (= x2272 x2635) x1517 (x3454 x2272)))
(define-fun x223 ((x2272 Int)) Int (ite (= x2272 x2635) 0 (x268 x2272)))
(define-fun x922 ((x2272 Int)) Int (ite x790 (x2189 x2272) (x223 x2272)))
(define-fun x3003 ((x2272 Int)) Int (ite (= x2272 x2855) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x922 x2272)))
(define-fun x758 ((x2272 Int)) Int (ite (= x2272 x3461) x2136 (x3003 x2272)))
(define-fun x1124 ((x2272 Int)) Int (ite (= x3243 x2272) 128 (x758 x2272)))
(define-fun x1160 ((x2272 Int)) Int (ite (= x2005 x2272) x813 (x1124 x2272)))
(define-fun x3530 ((x2272 Int)) Int (ite (= x2272 x3245) x2754 (x1160 x2272)))
(define-fun x3230 ((x2272 Int)) Int (ite (= x2942 x2272) x3120 (x3530 x2272)))
(define-fun x137 ((x2272 Int)) Int (ite (= x3382 x2272) x2771 (x3230 x2272)))
(define-fun x1072 ((x2272 Int)) Int (ite (= x2272 x2388) x890 (x137 x2272)))
(define-fun x2389 ((x2272 Int)) Int (ite x333 (x137 x2272) (ite x3591 (x3230 x2272) (ite x3033 (x3530 x2272) (ite x3358 (x1160 x2272) (x1072 x2272))))))
(define-fun x2142 ((x2272 Int)) Int (ite (= x668 x2272) 0 (x2389 x2272)))
(define-fun x1495 ((x2272 Int)) Int (ite (= x1037 x2272) x2472 (x2142 x2272)))
(define-fun x3203 ((x2272 Int)) Int (ite (= x2729 x2272) x899 (x1495 x2272)))
(define-fun x872 ((x2272 Int)) Int (ite (= x2272 x3238) x1576 (x3203 x2272)))
(define-fun x262 ((x2272 Int)) Int (ite (= x1440 x2272) x1767 (x872 x2272)))
(define-fun x3737 ((x2272 Int)) Int (ite (= x1863 x2272) x3612 (x262 x2272)))
(define-fun x430 ((x2272 Int)) Int (ite (= x2272 x404) x93 (x3737 x2272)))
(define-fun x2456 ((x2272 Int)) Int (ite (= x3092 x2272) x1769 (x430 x2272)))
(define-fun x1262 ((x2272 Int)) Int (ite x2044 (x430 x2272) (ite x3388 (x3737 x2272) (ite x555 (x262 x2272) (ite x2432 (x872 x2272) (x2456 x2272))))))
(define-fun x1709 ((x2272 Int)) Int (ite (= x2272 x1967) 0 (x1262 x2272)))
(define-fun x1749 ((x2272 Int)) Int (ite x808 (x3133 x2272) (x802 x2272)))
(define-fun x2810 ((x2272 Int)) Int (ite x808 (x3234 x2272) (x2817 x2272)))
(define-fun x3173 ((x2272 Int)) Int (ite x808 (x2663 x2272) (x1254 x2272)))
(define-fun x638 ((x2272 Int)) Int (ite x808 (x1099 x2272) (x1721 x2272)))
(define-fun x1918 ((x2272 Int)) Int (ite x80 (x2345 x2272) (x3070 x2272)))
(define-fun x1519 ((x2272 Int)) Int (ite x80 (x549 x2272) (x1233 x2272)))
(define-fun x2274 ((x2272 Int)) Int (ite x80 (x939 x2272) (x1260 x2272)))
(define-fun x1613 ((x2272 Int)) Int (ite x80 (x3041 x2272) (x3059 x2272)))
(define-fun x658 ((x2272 Int)) Int (ite x2611 (x246 x2272) (x3093 x2272)))
(define-fun x3031 ((x2272 Int)) Int (ite x2611 (x1395 x2272) (x196 x2272)))
(define-fun x715 ((x2272 Int)) Int (ite x2611 (x2065 x2272) (x606 x2272)))
(define-fun x2761 ((x2272 Int)) Int (ite x2611 (x3428 x2272) (x1660 x2272)))
(define-fun x1331 ((x2272 Int)) Int (ite x2435 (x3234 x2272) (x2421 x2272)))
(define-fun x1970 ((x2272 Int)) Int (ite x2435 (x1099 x2272) (x1374 x2272)))
(define-fun x1836 ((x2272 Int)) Int (ite x2435 (x3133 x2272) (x1535 x2272)))
(define-fun x2949 ((x2272 Int)) Int (ite x2435 (x2663 x2272) (x2803 x2272)))
(define-fun x297 ((x2272 Int)) Int (ite x2435 (x2645 x2272) (ite x1564 (x2188 x2272) (x2645 x2272))))
(define-fun x295 ((x2272 Int)) Int (ite x3533 (x2568 x2272) (x528 x2272)))
(define-fun x2009 ((x2272 Int)) Int (ite x3533 (x3702 x2272) (x3389 x2272)))
(define-fun x3536 ((x2272 Int)) Int (ite x3533 (x382 x2272) (x1136 x2272)))
(define-fun x801 ((x2272 Int)) Int (ite x3533 (x425 x2272) (x231 x2272)))
(define-fun x1386 ((x2272 Int)) Int (ite x774 (x689 x2272) (ite x2807 (x689 x2272) (x3234 x2272))))
(define-fun x3425 ((x2272 Int)) Int (ite x774 (x2882 x2272) (ite x2807 (x2882 x2272) (x1099 x2272))))
(define-fun x3514 ((x2272 Int)) Int (ite x774 (x162 x2272) (ite x2807 (x162 x2272) (x3133 x2272))))
(define-fun x1559 ((x2272 Int)) Int (ite x774 (x1566 x2272) (ite x2807 (x1566 x2272) (x2663 x2272))))
(define-fun x1300 ((x2272 Int)) Int (ite x43 (x1675 x2272) (x209 x2272)))
(define-fun x1846 ((x2272 Int)) Int (ite x43 (x2671 x2272) (x1723 x2272)))
(define-fun x2197 ((x2272 Int)) Int (ite x43 (x2186 x2272) (x159 x2272)))
(define-fun x1969 ((x2272 Int)) Int (ite x43 (x738 x2272) (x1316 x2272)))
(define-fun x816 ((x2272 Int)) Int (ite (= x596 x2272) x1894 (x47 x2272)))
(define-fun x570 ((x2272 Int)) Int (ite x248 (x47 x2272) (x816 x2272)))
(define-fun x2745 ((x2272 Int)) Int (ite (= 480 x2272) x577 (x570 x2272)))
(define-fun x1013 ((x2272 Int)) Int (ite x2101 (x2745 x2272) (x1042 x2272)))
(define-fun x952 ((x2272 Int)) Int (ite (= x1541 x2272) x1015 (x1013 x2272)))
(define-fun x1679 ((x2272 Int)) Int (ite (= x2272 x2168) x832 (x952 x2272)))
(define-fun x1694 ((x2272 Int)) Int (ite (= x2272 x3758) x2643 (x1679 x2272)))
(define-fun x3479 ((x2272 Int)) Int (ite (= x915 x2272) x449 (x1694 x2272)))
(define-fun x1717 ((x2272 Int)) Int (ite (= x3486 x2272) x1381 (x3479 x2272)))
(define-fun x3659 ((x2272 Int)) Int (ite (= x2066 x2272) x793 (x1717 x2272)))
(define-fun x3598 ((x2272 Int)) Int (ite (= x2272 x3521) x3583 (x3659 x2272)))
(define-fun x2248 ((x2272 Int)) Int (ite (= x2687 x2272) x1292 (x3598 x2272)))
(define-fun x2870 ((x2272 Int)) Int (ite (= x1375 x2272) x1784 (x2248 x2272)))
(define-fun x133 ((x2272 Int)) Int (ite (= x2272 x1345) x203 (x2870 x2272)))
(define-fun x2538 ((x2272 Int)) Int (ite (= x473 x2272) x679 (x133 x2272)))
(define-fun x524 ((x2272 Int)) Int (ite (= x2272 x348) x1163 (x2538 x2272)))
(define-fun x3338 ((x2272 Int)) Int (ite x1171 (x2538 x2272) (x524 x2272)))
(define-fun x1591 ((x2272 Int)) Int (ite (= x2272 x2013) x243 (x3338 x2272)))
(define-fun x674 ((x2272 Int)) Int (ite (= x2272 x2013) 0 (x2538 x2272)))
(define-fun x2492 ((x2272 Int)) Int (ite x2071 (x1591 x2272) (x674 x2272)))
(define-fun x2589 ((x2272 Int)) Int (ite (= x490 x2272) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2492 x2272)))
(define-fun x2734 ((x2272 Int)) Int (ite (= x2272 x3023) x2546 (x2589 x2272)))
(define-fun x1905 ((x2272 Int)) Int (ite (= x3685 x2272) 128 (x2734 x2272)))
(define-fun x1848 ((x2272 Int)) Int (ite (= x2245 x2272) x3223 (x1905 x2272)))
(define-fun x3528 ((x2272 Int)) Int (ite (= x3553 x2272) x1191 (x1848 x2272)))
(define-fun x3186 ((x2272 Int)) Int (ite (= x2322 x2272) x147 (x3528 x2272)))
(define-fun x1096 ((x2272 Int)) Int (ite (= x2562 x2272) x1714 (x3186 x2272)))
(define-fun x2205 ((x2272 Int)) Int (ite (= x204 x2272) x2346 (x1096 x2272)))
(define-fun x3569 ((x2272 Int)) Int (ite x2028 (x1096 x2272) (ite x2015 (x3186 x2272) (ite x3111 (x3528 x2272) (ite x2423 (x1848 x2272) (x2205 x2272))))))
(define-fun x122 ((x2272 Int)) Int (ite (= x2272 x1411) 0 (x3569 x2272)))
(define-fun x2489 ((x2272 Int)) Int (ite (= x2272 x582) x3476 (x122 x2272)))
(define-fun x104 ((x2272 Int)) Int (ite (= x2272 x3649) x3571 (x2489 x2272)))
(define-fun x1933 ((x2272 Int)) Int (ite (= x2272 x1208) x3397 (x104 x2272)))
(define-fun x1309 ((x2272 Int)) Int (ite (= x3532 x2272) x2513 (x1933 x2272)))
(define-fun x2730 ((x2272 Int)) Int (ite (= x2272 x3367) x3267 (x1309 x2272)))
(define-fun x2721 ((x2272 Int)) Int (ite (= x3250 x2272) x3473 (x2730 x2272)))
(define-fun x2164 ((x2272 Int)) Int (ite (= x2151 x2272) x1280 (x2721 x2272)))
(define-fun x1630 ((x2272 Int)) Int (ite x340 (x2721 x2272) (ite x3720 (x2730 x2272) (ite x2748 (x1309 x2272) (ite x387 (x1933 x2272) (x2164 x2272))))))
(define-fun x2840 ((x2272 Int)) Int (ite (= x3110 x2272) 0 (x1630 x2272)))
(define-fun x1371 ((x2272 Int)) Int (ite (= x1379 x2272) x1091 (x342 x2272)))
(define-fun x347 ((x2272 Int)) Int (ite (= x2272 x3301) x2607 (x1371 x2272)))
(define-fun x677 ((x2272 Int)) Int (ite x2039 (x3335 x2272) (x1666 x2272)))
(define-fun x1902 ((x2272 Int)) Int (ite x2039 (x459 x2272) (x3159 x2272)))
(define-fun x22 ((x2272 Int)) Int (ite x2039 (x927 x2272) (x2666 x2272)))
(define-fun x2654 ((x2272 Int)) Int (ite x2039 (x2770 x2272) (x883 x2272)))
(define-fun x1786 ((x2272 Int)) Int (ite x2039 (x2523 x2272) (x1123 x2272)))
(define-fun x1993 ((x2272 Int)) Int (ite x2039 (x1547 x2272) (x480 x2272)))
(define-fun x3018 ((x2272 Int)) Int (ite x2039 (x3605 x2272) (x3176 x2272)))
(define-fun x2968 ((x2272 Int)) Int (ite x2039 (x2045 x2272) (x1082 x2272)))
(define-fun x937 ((x2272 Int)) Int (ite x2039 (x3475 x2272) (x2766 x2272)))
(define-fun x3327 ((x2272 Int)) Int (ite x2039 (x1690 x2272) (x529 x2272)))
(define-fun x3184 ((x2272 Int)) Int (ite x2039 (x1458 x2272) (x2760 x2272)))
(define-fun x1507 ((x2272 Int)) Int (ite x2039 (x521 x2272) (x701 x2272)))
(define-fun x1289 ((x2272 Int)) Int (ite x2039 (x3262 x2272) (x1400 x2272)))
(define-fun x2070 ((x2272 Int)) Int (ite x2039 (x2147 x2272) (x545 x2272)))
(define-fun x1293 ((x2272 Int)) Int (ite x2039 (x2889 x2272) (x472 x2272)))
(define-fun x303 ((x2272 Int)) Int (ite x2039 (x1264 x2272) (x3187 x2272)))
(define-fun x1131 ((x2272 Int)) Int (ite x938 (x3579 x2272) (x3159 x2272)))
(define-fun x2494 ((x2272 Int)) Int (ite x938 (x3567 x2272) (x529 x2272)))
(define-fun x512 ((x2272 Int)) Int (ite x938 (x2410 x2272) (x701 x2272)))
(define-fun x1939 ((x2272 Int)) Int (ite x938 (x862 x2272) (x2666 x2272)))
(define-fun x3729 ((x2272 Int)) Int (ite x938 (x420 x2272) (x480 x2272)))
(define-fun x1557 ((x2272 Int)) Int (ite x938 (x1650 x2272) (x883 x2272)))
(define-fun x6 ((x2272 Int)) Int (ite x938 (x1768 x2272) (x2766 x2272)))
(define-fun x3574 ((x2272 Int)) Int (ite x938 (x1893 x2272) (x2760 x2272)))
(define-fun x346 ((x2272 Int)) Int (ite x938 (x3364 x2272) (x3176 x2272)))
(define-fun x2220 ((x2272 Int)) Int (ite x938 (x3328 x2272) (x1400 x2272)))
(define-fun x308 ((x2272 Int)) Int (ite x938 (x2062 x2272) (x3187 x2272)))
(define-fun x1036 ((x2272 Int)) Int (ite x938 (x2337 x2272) (x1123 x2272)))
(define-fun x2649 ((x2272 Int)) Int (ite x938 (x1397 x2272) (x545 x2272)))
(define-fun x1887 ((x2272 Int)) Int (ite x938 (x1113 x2272) (x1082 x2272)))
(define-fun x1664 ((x2272 Int)) Int (ite x938 (x1095 x2272) (x1666 x2272)))
(define-fun x1920 ((x2272 Int)) Int (ite x938 (x3078 x2272) (x472 x2272)))
(define-fun x2176 ((x2272 Int)) Int (ite x1904 (x1152 x2272) (x1082 x2272)))
(define-fun x3246 ((x2272 Int)) Int (ite x1904 (x1891 x2272) (x472 x2272)))
(define-fun x2050 ((x2272 Int)) Int (ite x1904 (x3497 x2272) (x3159 x2272)))
(define-fun x3108 ((x2272 Int)) Int (ite x1904 (x2993 x2272) (x529 x2272)))
(define-fun x2597 ((x2272 Int)) Int (ite x1904 (x3673 x2272) (x701 x2272)))
(define-fun x3247 ((x2272 Int)) Int (ite x1904 (x751 x2272) (x2666 x2272)))
(define-fun x789 ((x2272 Int)) Int (ite x1904 (x1674 x2272) (x480 x2272)))
(define-fun x468 ((x2272 Int)) Int (ite x1904 (x1746 x2272) (x883 x2272)))
(define-fun x1935 ((x2272 Int)) Int (ite x1904 (x1636 x2272) (x2766 x2272)))
(define-fun x2825 ((x2272 Int)) Int (ite x1904 (x2401 x2272) (x2760 x2272)))
(define-fun x1532 ((x2272 Int)) Int (ite x1904 (x3762 x2272) (x1666 x2272)))
(define-fun x787 ((x2272 Int)) Int (ite x1904 (x3401 x2272) (x3176 x2272)))
(define-fun x1044 ((x2272 Int)) Int (ite x1904 (x2841 x2272) (x1123 x2272)))
(define-fun x2022 ((x2272 Int)) Int (ite x1904 (x580 x2272) (x545 x2272)))
(define-fun x2938 ((x2272 Int)) Int (ite x1904 (x2894 x2272) (x1400 x2272)))
(define-fun x1325 ((x2272 Int)) Int (ite x1904 (x3329 x2272) (x3187 x2272)))
(define-fun x1421 ((x2272 Int)) Int (ite x3244 (x3692 x2272) (x3159 x2272)))
(define-fun x3524 ((x2272 Int)) Int (ite x3244 (x33 x2272) (x529 x2272)))
(define-fun x1725 ((x2272 Int)) Int (ite x3244 (x2549 x2272) (x1082 x2272)))
(define-fun x995 ((x2272 Int)) Int (ite x3244 (x2378 x2272) (x1123 x2272)))
(define-fun x1810 ((x2272 Int)) Int (ite x3244 (x280 x2272) (x480 x2272)))
(define-fun x3198 ((x2272 Int)) Int (ite x3244 (x3580 x2272) (x2666 x2272)))
(define-fun x2679 ((x2272 Int)) Int (ite x3244 (x1175 x2272) (x883 x2272)))
(define-fun x1172 ((x2272 Int)) Int (ite x3244 (x2508 x2272) (x3176 x2272)))
(define-fun x1640 ((x2272 Int)) Int (ite x3244 (x171 x2272) (x2760 x2272)))
(define-fun x470 ((x2272 Int)) Int (ite x3244 (x684 x2272) (x545 x2272)))
(define-fun x1764 ((x2272 Int)) Int (ite x3244 (x1225 x2272) (x1400 x2272)))
(define-fun x2527 ((x2272 Int)) Int (ite x3244 (x1850 x2272) (x2766 x2272)))
(define-fun x3330 ((x2272 Int)) Int (ite x3244 (x2473 x2272) (x472 x2272)))
(define-fun x620 ((x2272 Int)) Int (ite x3244 (x2038 x2272) (x701 x2272)))
(define-fun x698 ((x2272 Int)) Int (ite x3244 (x1001 x2272) (x1666 x2272)))
(define-fun x407 ((x2272 Int)) Int (ite x3244 (x631 x2272) (x3187 x2272)))
(define-fun x1314 ((x2272 Int)) Int (ite x1564 (x963 x2272) (x1189 x2272)))
(define-fun x681 ((x2272 Int)) Int (ite (= x3301 x2272) x1620 (x1314 x2272)))
(define-fun x401 ((x2272 Int)) Int (ite x1447 (x3472 x2272) (x2663 x2272)))
(define-fun x3193 ((x2272 Int)) Int (ite x1447 (x2800 x2272) (x3234 x2272)))
(define-fun x138 ((x2272 Int)) Int (ite x1447 (x2471 x2272) (x347 x2272)))
(define-fun x135 ((x2272 Int)) Int (ite x1447 (x3520 x2272) (x3133 x2272)))
(define-fun x2657 ((x2272 Int)) Int (ite x1447 (x2545 x2272) (x1099 x2272)))
(define-fun x1039 ((x2272 Int)) Int (ite (= x3301 x2272) x25 (x138 x2272)))
(define-fun x3052 ((x2272 Int)) Int (ite x114 (x35 x2272) (x2156 x2272)))
(define-fun x1732 ((x2272 Int)) Int (ite (= x2272 x3301) x98 (x3052 x2272)))
(define-fun x3058 ((x2272 Int)) Int (ite x2599 (x2753 x2272) (x2663 x2272)))
(define-fun x1145 ((x2272 Int)) Int (ite x2599 (x1766 x2272) (x1099 x2272)))
(define-fun x3266 ((x2272 Int)) Int (ite x2599 (x753 x2272) (x3234 x2272)))
(define-fun x1821 ((x2272 Int)) Int (ite x2599 (x2866 x2272) (x3133 x2272)))
(define-fun x837 ((x2272 Int)) Int (x480 x2272))
(define-fun x3501 ((x2272 Int)) Int (x545 x2272))
(define-fun x1782 ((x2272 Int)) Int (x701 x2272))
(define-fun x3276 ((x2272 Int)) Int (x1666 x2272))
(define-fun x3004 ((x2272 Int)) Int (x3159 x2272))
(define-fun x3689 ((x2272 Int)) Int (x3176 x2272))
(define-fun x619 ((x2272 Int)) Int (x2666 x2272))
(define-fun x3624 ((x2272 Int)) Int (x472 x2272))
(define-fun x2108 ((x2272 Int)) Int (x2766 x2272))
(define-fun x2960 ((x2272 Int)) Int (ite x1425 (x3456 x2272) (ite x3516 (x1931 x2272) (x3563 x2272))))
(define-fun x273 ((x2272 Int)) Int (x883 x2272))
(define-fun x3552 ((x2272 Int)) Int (x1123 x2272))
(define-fun x228 ((x2272 Int)) Int (x529 x2272))
(define-fun x1050 ((x2272 Int)) Int (x3187 x2272))
(define-fun x966 ((x2272 Int)) Int (x1082 x2272))
(define-fun x3609 ((x2272 Int)) Int (x2760 x2272))
(define-fun x2790 ((x2272 Int)) Int (x1400 x2272))
(define-fun x1461 ((x2272 Int)) Int (ite (and (> 160 x2272) (>= x2272 128)) (x2960 (- x2272 128)) (x1282 x2272)))
(define-fun x3298 ((x2272 Int)) Int (ite (= 128 x2272) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2606 x2272)))
(define-fun x3372 ((x2272 Int)) Int (ite (= x2272 132) x2353 (x3298 x2272)))
(define-fun x1940 ((x2272 Int)) Int (ite (= 164 x2272) x3651 (x3372 x2272)))
(define-fun x3555 ((x2272 Int)) Int (ite (= 128 x2272) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2606 x2272)))
(define-fun x682 ((x2272 Int)) Int (ite (= 132 x2272) x2363 (x3555 x2272)))
(define-fun x2623 ((x2272 Int)) Int (ite (= 164 x2272) x1031 (x682 x2272)))
(define-fun x820 ((x2272 Int)) Int (ite (= x2272 196) x2271 (x2623 x2272)))
(define-fun x2193 ((x2272 Int)) Int (ite (= 128 x2272) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2606 x2272)))
(define-fun x2026 ((x2272 Int)) Int (ite (= x2272 132) x21 (x2193 x2272)))
(define-fun x67 ((x2272 Int)) Int (ite (= 128 x2272) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2606 x2272)))
(define-fun x2983 ((x2272 Int)) Int (ite (= x2272 132) x583 (x67 x2272)))
(assert (= x3744 (x1069 (x1908 x609 x3744 x1987 x54 x213))))
(assert (x1594 x3267))
(assert (=> (<= x229 10000) (= (x1601 x229) 0)))
(assert (x1594 x2338))
(assert (x1594 x3023))
(assert (x1594 x1563))
(assert (not (x1103 (x1736 64 x2231 12))))
(assert (x1594 x1142))
(assert (x1594 x3703))
(assert (x1594 x1166))
(assert (< (x1544 x2210 x2928 x3153 x1941 x198 x2202) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2956 x1217) x978))
(assert (x1594 x1019))
(assert (= (x843 (x1908 x609 x3744 x1987 x54 x213)) x54))
(assert (x1594 x1589))
(assert (< (x1736 64 x2264 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2752) (= 0 (x1601 x2752))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x317 100)))
(assert (x1594 x1194))
(assert (x1103 3628442803))
(assert (= (x1736 64 x1724 100) (x1601 (x1736 64 x1724 100))))
(assert (=> (>= 10000 x1804) (= (x1601 x1804) 0)))
(assert (= (and x1481 x2502) x1718))
(assert (= (x2399 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)) x2647))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1185 x2210 x1382)))
(assert (x2631 x1539))
(assert (=> (<= x146 10000) (= 0 (x1601 x146))))
(assert (x1594 x3368))
(assert (x1594 x359))
(assert (x1594 x2636))
(assert (> (x1736 64 x146 100) 10000))
(assert (x1594 x3507))
(assert (x1594 x1849))
(assert (x1594 x3457))
(assert (x2365 x3017))
(assert (x1594 x2594))
(assert (= 100 (x1067 (x1736 64 x1849 100))))
(assert (= (x1601 (x1736 64 x1483 100)) (x1736 64 x1483 100)))
(assert (< (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x350) (= 0 (x1601 x350))))
(assert (x3740 x2588))
(assert (x1594 x1115))
(assert (x2365 x1133))
(assert (= (or x387 x978 x2748 x3720 x340) x2119))
(assert (= (and x2933 x3492) x2599))
(assert (x804 x343))
(assert (x1594 x1806))
(assert (= x3459 (x1870 (x1908 x1758 x2820 x2323 x1705 x3459))))
(assert (x3740 x476))
(assert (=> (>= 10000 x3613) (= (x1601 x3613) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2458 7)))
(assert (x1594 x1342))
(assert (= (x1069 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) x3469))
(assert (not (x1103 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3))))
(assert (=> (<= x1997 10000) (= 0 (x1601 x1997))))
(assert (= (x1069 (x1736 64 x3538 100)) x3538))
(assert (= (and x576 x484) x3321))
(assert (= x2619 (x1067 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (x1594 x2154))
(assert (= 36 (x1067 (x1736 64 x2848 36))))
(assert (=> (>= 10000 x354) (= 0 (x1601 x354))))
(assert (x136 x1637 256))
(assert (=> (<= x3 10000) (= 0 (x1601 x3))))
(assert (x136 x2551 256))
(assert (x1594 x3657))
(assert (= x2114 (x1069 (x1736 64 x2114 36))))
(assert (x136 x1076 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3686 (not x276)) x2256))
(assert (=> (>= 10000 x3446) (= 0 (x1601 x3446))))
(assert (x1594 x1616))
(assert (= (x2399 (x1736 64 x1368 100)) 64))
(assert (= x808 (or x282 x603 x1925 x1914 x3345 x3169 x2461 x109 x3573 x2161 x697 x3638 x2519 x2879 x897 x1712 x3688 x1346 x2270 x1677 x1955 x1748 x2827 x2 x1333 x3214 x1646 x636 x3739 x1622 x2143)))
(assert (= (and x2672 (not x2215)) x1305))
(assert (= (and x1667 x2177) x2227))
(assert (x175 x2336))
(assert (> (x1736 64 x3549 100) 10000))
(assert (< 10000 (x1736 64 x756 100)))
(assert (x1594 x2887))
(assert (not (x1103 (x1736 64 x2848 36))))
(assert (= 0 (x1601 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (not (x1103 (x1908 x609 x3744 x1987 x54 x213))))
(assert (x1594 x1695))
(assert (x1594 x243))
(assert (x2365 x3745))
(assert (x1594 x960))
(assert (x1594 x2347))
(assert (= (x241 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x3))
(assert (= (x2399 (x1736 64 x2199 100)) 64))
(assert (= (and x2664 (not x2362)) x3037))
(assert (x1594 x1104))
(assert (= x986 (x1067 (x3512 x2647 x2752 x986 x1472))))
(assert (x1594 x1788))
(assert (=> (>= 10000 x678) (= 0 (x1601 x678))))
(assert (= 100 (x1067 (x1736 64 x2199 100))))
(assert (= (and (not x2206) x3160) x2273))
(assert (x804 x2297))
(assert (< 10000 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445)))
(assert (x1594 x2204))
(assert (> (x1736 64 x2413 100) 10000))
(assert (x955 1000000000 x2054))
(assert (= x2688 (and (not x3531) x36)))
(assert (x1594 x2267))
(assert (x1103 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (= (and x2465 (not x3074)) x3773))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2628 11)))
(assert (=> (<= x1337 10000) (= (x1601 x1337) 0)))
(assert (x1594 x2352))
(assert (x1594 x3297))
(assert (x1594 x453))
(assert (x1594 x3458))
(assert (x1594 x2251))
(assert (x1594 x3412))
(assert (x1594 x904))
(assert (x1594 x1009))
(assert (x1594 x3582))
(assert (= x1900 (x1067 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (x1594 x2698))
(assert (< 10000 (x1185 x609 x769)))
(assert (= (x1067 (x1736 64 x2165 (ite (<= x609 32) x2444 (ite (<= x609 64) x2952 (ite (>= 96 x609) x614 (ite (>= 128 x609) x2468 (ite (<= x609 160) x1672 (ite (>= 192 x609) x2785 (ite (<= x609 224) x2725 x2330))))))))) (ite (<= x609 32) x2444 (ite (>= 64 x609) x2952 (ite (<= x609 96) x614 (ite (<= x609 128) x2468 (ite (>= 160 x609) x1672 (ite (<= x609 192) x2785 (ite (>= 224 x609) x2725 x2330)))))))))
(assert (=> (>= 10000 x2530) (= 0 (x1601 x2530))))
(assert (x1594 x3652))
(assert (=> (<= x1299 10000) (= 0 (x1601 x1299))))
(assert (x1594 x409))
(assert (x136 x2198 256))
(assert (x13 (+ x3751 31)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x466 12)))
(assert (x1594 x3500))
(assert (x1594 x780))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3303 100)))
(assert (= (x2399 (x1736 64 x1691 100)) 64))
(assert (x1594 x1561))
(assert (x136 x2053 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1185 x1758 x14)))
(assert (x1594 x2478))
(assert (x1594 x2346))
(assert (= (=> (and (= x2105 36) (= x3648 false) (= x3042 true)) x3517) x3539))
(assert (x1594 x3336))
(assert (= x1403 (x1069 (x1544 x1758 x1403 x3597 x359 x130 x2512))))
(assert (not (x1103 (x1736 64 x3691 100))))
(assert (x1594 x2908))
(assert (not (x1103 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (= 100 (x1067 (x1736 64 x947 100))))
(assert (< 10000 (x1736 64 x947 100)))
(assert (x1594 x2462))
(assert (> (x1185 x2407 x2321) 10000))
(assert (x1594 x1540))
(assert (x3740 x1930))
(assert (x1594 x1297))
(assert (= (x1736 64 x2458 7) (x1601 (x1736 64 x2458 7))))
(assert (x1594 x2562))
(assert (= (=> (and (= (x3143 (+ x176 96)) x2157) (= (x3143 (+ x3532 96)) x2151) (= x1280 (x2721 x2157)) (= (not (< 128 x3397)) x2934)) (and x2934 x828)) x2629))
(assert (x1880 (ite (= x3104 0) 1 0)))
(assert (= x2830 (and x2067 (not x3206))))
(assert (=> (>= 10000 x734) (= 0 (x1601 x734))))
(assert (= (and x70 (not x2700)) x778))
(assert (x1594 x1133))
(assert (< (x1544 x1758 x1403 x3597 x359 x130 x2512) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1758 (x2399 (x3512 x1758 x1741 x982 x2171))))
(assert (= x3153 (x1067 (x1544 x2210 x2928 x3153 x1941 x198 x2202))))
(assert (= (x1601 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)) (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)))
(assert (x1594 x289))
(assert (= (and x2257 x2520) x3255))
(assert (x1594 x1418))
(assert (=> (<= x2231 10000) (= 0 (x1601 x2231))))
(assert (x1594 x2627))
(assert (= x520 (and (not x2573) x2366)))
(assert (x1594 x2000))
(assert (x1594 x2607))
(assert (x1594 x3117))
(assert (x136 x2982 32))
(assert (= (x1069 (x1736 64 x1691 100)) x1691))
(assert (> (x1736 64 x2264 36) 10000))
(assert (= (x1069 (x1736 64 x1408 100)) x1408))
(assert (= (x3383 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053)) x3053))
(assert (= (or x805 x2599) x1062))
(assert (x1594 x2530))
(assert (x1594 x3477))
(assert (< 10000 (x1736 64 x3435 100)))
(assert (x1594 x3149))
(assert (= (x1067 (x1736 64 x2839 36)) 36))
(assert (= x2321 (x1069 (x1185 x2407 x2321))))
(assert (= 36 (x1067 (x1736 64 x2131 36))))
(assert (not (x1103 (x1736 64 x2665 100))))
(assert (= (x1069 (x1736 64 x2231 12)) x2231))
(assert (x1594 x943))
(assert (x1594 x967))
(assert (x1594 x426))
(assert (x1594 x1816))
(assert (x1594 x1588))
(assert (x1594 x2343))
(assert (= (x1067 (x1736 64 x466 12)) 12))
(assert (= (x1601 (x1736 x2407 x2773 x2613)) (x1736 x2407 x2773 x2613)))
(assert (x1594 x2929))
(assert (x1594 x1071))
(assert (=> (>= 10000 x3765) (= (x1601 x3765) 0)))
(assert (x2365 x2561))
(assert (= x2067 (and (not x2500) x3305)))
(assert (=> (>= 10000 x1692) (= (x1601 x1692) 0)))
(assert (x1594 x712))
(assert (= x1873 (and x3441 x3342)))
(assert (x1594 x662))
(assert (x1594 x2236))
(assert (x1594 x1926))
(assert (x804 x3490))
(assert (= 6 (x1067 (x1736 64 x426 6))))
(assert (x1594 x3251))
(assert (=> (<= x2405 10000) (= (x1601 x2405) 0)))
(assert (x1594 x1874))
(assert (x1594 x1483))
(assert (not (x1103 (x1736 64 x2199 100))))
(assert (x1594 x683))
(assert (x1594 x968))
(assert (= 64 (x2399 (x1736 64 x146 100))))
(assert (x1103 65535))
(assert (= (and x1176 (not x2361)) x1890))
(assert (x1594 x972))
(assert (= (and x2719 x1358) x1781))
(assert (= (x1908 x2210 x3341 x3067 x3026 x1942) (x1601 (x1908 x2210 x3341 x3067 x3026 x1942))))
(assert (not (x1103 (x1736 x2407 x2773 x2613))))
(assert (= x2140 (and x3531 x36)))
(assert (x955 32 x2900))
(assert (x1594 x212))
(assert (=> (>= 10000 x2937) (= 0 (x1601 x2937))))
(assert (=> (>= 10000 x3458) (= 0 (x1601 x3458))))
(assert (x1594 x834))
(assert (x1594 x2167))
(assert (x1594 x823))
(assert (=> (<= x2976 10000) (= 0 (x1601 x2976))))
(assert (= (and (not x352) x290) x3516))
(assert (> (x1736 64 x1901 100) 10000))
(assert (= (and (not x1667) x2177) x2502))
(assert (x3740 x2409))
(assert (x1594 x3660))
(assert (= x1676 (x1069 (x1736 64 x1676 100))))
(assert (x1594 x2072))
(assert (= (x1601 3521034783) 0))
(assert (< (x1736 64 x3381 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1103 (x1736 64 x317 100))))
(assert (x1594 x343))
(assert (= (x2902 (x1544 x1758 x1403 x3597 x359 x130 x2512)) x2512))
(assert (=> (>= 10000 x2040) (= 0 (x1601 x2040))))
(assert (x1594 x3400))
(assert (=> (<= x984 10000) (= 0 (x1601 x984))))
(assert (x1594 x759))
(assert (= (and (not x2242) x818) x1518))
(assert (x2631 x2347))
(assert (= (x1601 (x3205 0)) (x3205 0)))
(assert (=> (<= x2247 10000) (= (x1601 x2247) 0)))
(assert (x1594 x2802))
(assert (x1594 x1411))
(assert (=> (>= 10000 x2980) (= 0 (x1601 x2980))))
(assert (x136 x934 256))
(assert (= x99 (and x557 x3455)))
(assert (= (x1069 (x1736 64 x3446 36)) x3446))
(assert (x1594 x3550))
(assert (x175 x2677))
(assert (= (x1870 (x1544 x1758 x1403 x3597 x359 x130 x2512)) x130))
(assert (< (x1908 x609 x3744 x1987 x54 x213) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1870 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)) x229))
(assert (= (x843 (x1908 x2647 x3684 x734 x3114 x2475)) x3114))
(assert (= x730 (x1067 (x1736 x609 x3458 x730))))
(assert (= (x1067 (x1736 64 x2976 36)) 36))
(assert (x804 x471))
(assert (x1594 x3765))
(assert (= (x2399 (x1736 64 x1763 100)) 64))
(assert (= x3543 (or x2039 x1632)))
(assert (= (x1067 (x1736 64 x1561 36)) 36))
(assert (= (x1069 (x1736 64 x2937 36)) x2937))
(assert (x1594 x2230))
(assert (x1594 x348))
(assert (x1594 x2864))
(assert (x1594 x552))
(assert (x1594 x2095))
(assert (x1594 x31))
(assert (x136 x3017 256))
(assert (x804 x2505))
(assert (x1594 x2458))
(assert (x804 x2338))
(assert (x1594 x518))
(assert (x1594 x3623))
(assert (x1594 x193))
(assert (= (=> (and (= x2944 (= x2352 0)) (or (and (and (= x2095 x2627) (= x316 x2510) (= x134 x1625) (= x2919 x438) (= x961 x3584) (= x1005 x1773) (= x1040 x88) (= x1611 x3755) (= x1206 x2352) (= x409 x2060) (= x1926 x82)) (not x2944)) (and (and (= (x1393 x28) x3451) (= x1040 x88) (= x961 x3584) (= x1005 x1773) (= x438 x2919) (= (ite (= 0 x2352) x1186 0) x301) (= x82 x1926) (= x2627 x2095) (<= 0 x286) (= x2060 x409) (= x3128 x286) (= x2352 x1206) (= x286 (+ x301 x3694)) (<= x286 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x657 (- x3451 x301)) (< (+ x3694 x301) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3755 x1611) (= x1625 x134) (= x3694 (x3641 x1379)) (= x2510 x316)) x2944))) x2079) x1847))
(assert (x1880 x2493))
(assert (x1594 x2287))
(assert (= (x1870 (x1908 x2647 x3684 x734 x3114 x2475)) x2475))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1185 x2407 x2321)))
(assert (x1594 x2820))
(assert (x1594 x3128))
(assert (= x552 (x2902 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (x1594 x1107))
(assert (x1594 x147))
(assert (x1594 x3355))
(assert (x1594 x1804))
(assert (=> (<= x1684 10000) (= (x1601 x1684) 0)))
(assert (> (x1544 x609 x515 x1745 x744 x2405 x1350) 10000))
(assert (x804 x879))
(assert (x1594 x1033))
(assert (= (x1067 (x1736 64 x2165 (ite (= x2647 0) x2018 (ite (>= 32 x2647) x921 (ite (>= 64 x2647) x1385 (ite (<= x2647 96) x889 (ite (>= 128 x2647) x337 (ite (>= 160 x2647) x1348 (ite (<= x2647 192) x2720 (ite (<= x2647 224) x1996 x3743)))))))))) (ite (= x2647 0) x2018 (ite (<= x2647 32) x921 (ite (<= x2647 64) x1385 (ite (>= 96 x2647) x889 (ite (<= x2647 128) x337 (ite (<= x2647 160) x1348 (ite (<= x2647 192) x2720 (ite (<= x2647 224) x1996 x3743))))))))))
(assert (= (x1069 (x1736 64 x900 36)) x900))
(assert (x136 x1728 256))
(assert (x1594 x1713))
(assert (= x2980 (x1069 (x1736 64 x2980 36))))
(assert (= (=> (and (or x3728 (not x3728)) (= x3728 (= x2036 0))) x1449) x493))
(assert (x1594 x1808))
(assert (= x3470 (x1069 (x1736 64 x3470 100))))
(assert (= (or x3124 x1866) x1710))
(assert (= x1457 (or x2071 x1047)))
(assert (x1594 x3682))
(assert (< (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2131))
(assert (= (x1069 (x1736 64 x1337 100)) x1337))
(assert (x2365 x2997))
(assert (= x2383 (=> (and (= 36 x2105) (= x1851 false) (= true x1615)) x3517)))
(assert (= (x1908 x2407 x2216 x3307 x2212 x3675) (x1601 (x1908 x2407 x2216 x3307 x2212 x3675))))
(assert (x1594 x2261))
(assert (x3740 x2576))
(assert (x2365 x2596))
(assert (x1594 x3076))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x399 100)))
(assert (x1594 x2872))
(assert (= (x2399 (x1736 64 x3381 100)) 64))
(assert (= x3244 (and x903 x3611)))
(assert (= (x1069 (x1185 x1758 x14)) x14))
(assert (< 10000 (x1736 64 x2628 11)))
(assert (x1594 x2587))
(assert (x1594 x3684))
(assert (=> (<= x2202 10000) (= 0 (x1601 x2202))))
(assert (x1594 x3592))
(assert (=> (<= x3301 10000) (= 0 (x1601 x3301))))
(assert (x1594 x3385))
(assert (x1594 x2250))
(assert (= (x1601 2001815235) 0))
(assert (= (=> (and (= true x1029) (= false x2406) (= x3378 36)) x2979) x1916))
(assert (x1594 x336))
(assert (< 10000 (x1736 64 x2199 100)))
(assert (= (x3383 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)) x3014))
(assert (x1594 x2900))
(assert (= (x1069 (x1736 64 x1685 6)) x1685))
(assert (x1594 x1208))
(assert (x804 x3745))
(assert (=> (>= 10000 x412) (= (x1601 x412) 0)))
(assert (x1594 x887))
(assert (=> (>= 10000 x2619) (= (x1601 x2619) 0)))
(assert (x1594 x2878))
(assert (x1594 x117))
(assert (x175 x31))
(assert (= (and x1312 (not x1917)) x2835))
(assert (x955 32 (ite (= x3104 0) 1 0)))
(assert (x1594 x2316))
(assert (=> (>= 10000 x2342) (= 0 (x1601 x2342))))
(assert (x1594 x300))
(assert (x1594 x579))
(assert (x2365 x1637))
(assert (not (x1103 (x1736 64 x1483 100))))
(assert (x1594 x1580))
(assert (not (x1103 (x1736 64 x466 12))))
(assert (= x370 (or (and x3051 x2289) (and x2441 x863))))
(assert (= (=> (and (= (= 0 x238) x3342) (or (not x3342) x3342)) x106) x1383))
(assert (x1103 4294967295))
(assert (= (and x2122 x475) x644))
(assert (x1594 x1863))
(assert (= x908 (and (not x2085) x1462)))
(assert (x804 x2469))
(assert (= x1368 (x1069 (x1736 64 x1368 100))))
(assert (= x1249 (x1069 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (x2365 x471))
(assert (= x2697 (and (not x439) x1722)))
(assert (= x1563 (x2902 (x1544 x2647 x350 x3756 x48 x864 x1563))))
(assert (= (and (not x2965) x908) x882))
(assert (x1594 x317))
(assert (x1594 x1167))
(assert (= (=> (and (= 0 x2105) (= x2564 false) (= x478 true)) x3517) x2969))
(assert (=> (>= 10000 x2515) (= 0 (x1601 x2515))))
(assert (x1594 x1727))
(assert (= 0 (x1601 65535)))
(assert (x1594 x194))
(assert (x1594 x487))
(assert (= x2438 (and (not x2943) x30)))
(assert (x1594 x2871))
(assert (= x128 (x1069 (x1736 64 x128 100))))
(assert (= (x1067 (x1736 64 x2848 2)) 2))
(assert (=> (>= 10000 x3733) (= 0 (x1601 x3733))))
(assert (x1594 x2670))
(assert (= x3288 (=> (and (= false x2941) (= x3378 36) (= x749 true)) x2979)))
(assert (x1594 x2752))
(assert (= x515 (x1069 (x1544 x609 x515 x1745 x744 x2405 x1350))))
(assert (= x2387 (and x3711 x2158)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1185 x609 x769)))
(assert (< (x1736 64 x1684 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1195))
(assert (= x3502 (=> (and (= (= x142 0) x2521) (or (not x2521) x2521)) x1687)))
(assert (x1594 x127))
(assert (x1594 x357))
(assert (> (x1736 64 x462 100) 10000))
(assert (x1594 x3197))
(assert (= x1358 (or x3388 x555 x2432 x2044 x3757)))
(assert (=> (>= 10000 x1724) (= 0 (x1601 x1724))))
(assert (x1594 x2986))
(assert (x1594 x2931))
(assert (not (x1103 (x1185 x2407 x2321))))
(assert (x1594 x1376))
(assert (= x603 (and x3706 x2133)))
(assert (= x2342 (x1067 (x1736 x2647 x1474 x2342))))
(assert (= x707 (or x2916 x1237 x1859)))
(assert (x136 x2284 256))
(assert (=> (>= 10000 x1368) (= 0 (x1601 x1368))))
(assert (=> (<= x1829 10000) (= (x1601 x1829) 0)))
(assert (=> (<= x515 10000) (= 0 (x1601 x515))))
(assert (x1594 x3239))
(assert (= 64 (x2399 (x1736 64 x2231 12))))
(assert (not (x1103 (x1736 64 x3303 100))))
(assert (= (and x1048 x3505) x2))
(assert (x1594 x2093))
(assert (x1594 x1022))
(assert (x1594 x1372))
(assert (x1594 x3378))
(assert (> (x1185 x1758 x14) 10000))
(assert (x1594 x2505))
(assert (x1594 x2472))
(assert (x3740 x2084))
(assert (x804 x2284))
(assert (< (x1736 64 x3435 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1787))
(assert (= (x1601 (x1736 64 x1676 100)) (x1736 64 x1676 100)))
(assert (x136 x1071 300))
(assert (x1594 x1114))
(assert (= x609 (x2399 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (x1594 x3307))
(assert (x3740 x3390))
(assert (= (x1736 64 x2165 (ite (<= x609 32) x2444 (ite (<= x609 64) x2952 (ite (<= x609 96) x614 (ite (>= 128 x609) x2468 (ite (<= x609 160) x1672 (ite (<= x609 192) x2785 (ite (<= x609 224) x2725 x2330)))))))) (x1601 (x1736 64 x2165 (ite (>= 32 x609) x2444 (ite (<= x609 64) x2952 (ite (<= x609 96) x614 (ite (<= x609 128) x2468 (ite (<= x609 160) x1672 (ite (>= 192 x609) x2785 (ite (<= x609 224) x2725 x2330)))))))))))
(assert (= (and (not x1583) x2749) x2701))
(assert (= (x1870 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)) x1702))
(assert (x1594 x1885))
(assert (x1594 x3468))
(assert (=> (<= x2566 10000) (= 0 (x1601 x2566))))
(assert (x1594 x3723))
(assert (x2365 x934))
(assert (x1594 x982))
(assert (= x3318 (or x1710 x3600)))
(assert (x1594 x985))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1901 100)))
(assert (= (x2902 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)) x2430))
(assert (x1594 x2269))
(assert (x136 x1151 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2084))
(assert (x1594 x1466))
(assert (x136 x2418 256))
(assert (x1594 x3053))
(assert (not (x1103 (x1544 x2210 x2928 x3153 x1941 x198 x2202))))
(assert (x1594 x2628))
(assert (x1594 x2674))
(assert (x1594 x547))
(assert (= (x1736 64 x2839 36) (x1601 (x1736 64 x2839 36))))
(assert (x1880 32))
(assert (= x2839 (x1069 (x1736 64 x2839 36))))
(assert (x1594 x900))
(assert (x1594 x1220))
(assert (= (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053) (x1601 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053))))
(assert (= x360 (and x377 (not x3036))))
(assert (= (x1069 (x1736 64 x1595 100)) x1595))
(assert (x1594 x916))
(assert (x1594 x1711))
(assert (x2365 x1973))
(assert (= (x1067 (x1544 x609 x515 x1745 x744 x2405 x1350)) x1745))
(assert (= x2465 (or x256 x2101)))
(assert (= (and (not x503) x3321) x2044))
(assert (= (x1601 3628442803) 0))
(assert (= x2572 (and x2479 (not x2571))))
(assert (=> (>= 10000 x2420) (= (x1601 x2420) 0)))
(assert (=> (<= x2647 10000) (= (x1601 x2647) 0)))
(assert (= (x1069 (x1736 64 x3303 100)) x3303))
(assert (x1594 x278))
(assert (x1594 x3446))
(assert (= (=> (= x757 (= 0 x2349)) (and (=> (and (not x757) (and (= x2002 x2316) (= x2244 x3385))) x3672) (=> (and x757 (and (= x2751 false) (= true x661) (= x1251 x3378))) x2979))) x1486))
(assert (= (x1067 (x1736 64 x2628 11)) 11))
(assert (x1594 x356))
(assert (= x1804 (x3383 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (> (x1736 64 x1685 6) 10000))
(assert (x1594 x2148))
(assert (x2365 x3258))
(assert (x3740 x2414))
(assert (x1594 x3599))
(assert (x1594 x1684))
(assert (x804 x2336))
(assert (x1594 x3656))
(assert (x1594 x2639))
(assert (x1594 x2875))
(assert (x1594 x2480))
(assert (x1594 x783))
(assert (not (x1103 (x1736 64 x426 6))))
(assert (= (and x1358 (not x2719)) x1756))
(assert (= (=> (and (= x255 false) (= x3378 0) (= true x2195)) x2979) x1639))
(assert (x1594 x2031))
(assert (x2365 x423))
(assert (x1594 x3325))
(assert (> (x1979 x2210 x2716 x1829 x972 x354 x2040 x487) 10000))
(assert (x1594 x88))
(assert (x1594 x835))
(assert (x1594 x355))
(assert (x1594 x1521))
(assert (= x1925 (or (and x643 x3060) (and x821 x1100))))
(assert (x1594 x1018))
(assert (= (x1069 (x1736 64 x3549 100)) x3549))
(assert (x804 x192))
(assert (x136 x2053 32))
(assert (= (=> (and (= x3378 36) (= x2033 true) (= x1975 false)) x2979) x2784))
(assert (x1594 x170))
(assert (x1594 x3109))
(assert (x1594 x792))
(assert (x175 x1076))
(assert (< (x1544 x609 x515 x1745 x744 x2405 x1350) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1380))
(assert (x1594 x452))
(assert (= (and x3773 (not x485)) x3272))
(assert (x1594 x3521))
(assert (=> (>= 10000 x2665) (= (x1601 x2665) 0)))
(assert (= x2458 (x1069 (x1736 64 x2458 7))))
(assert (x1594 x1769))
(assert (x3740 x2997))
(assert (< (x1736 64 x1408 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1103 (x1736 64 x2371 100))))
(assert (x1594 x2990))
(assert (= x2802 (x3383 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (= (x1601 1000000000) 0))
(assert (not (x1103 (x3512 x609 x2437 x726 x1997))))
(assert (x1594 x2932))
(assert (x2631 x39))
(assert (=> (<= x197 10000) (= 0 (x1601 x197))))
(assert (x1594 x2112))
(assert (x2631 x2881))
(assert (= (x1601 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)))
(assert (x1594 x2114))
(assert (x1594 x777))
(assert (= x2768 (and (not x1558) x3272)))
(assert (x136 x2336 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x804 x1052))
(assert (x1594 x61))
(assert (x1594 x3595))
(assert (x136 x1930 32))
(assert (x1594 x3575))
(assert (=> (<= x3224 10000) (= (x1601 x3224) 0)))
(assert (x1594 x3057))
(assert (= x828 (=> (and (= x278 (x2127 (- x654 x490))) (= (x1858 x3301) x199) (= (= x199 0) x2447) (= x654 (x3143 (+ x3532 x1874))) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1076) x1874) (= (x3143 (+ x3397 x3532)) x3110) (= x1076 (x3143 (+ x3397 31)))) (and (=> (and (and (= x2974 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2483 x1787))) (= x1286 (x342 x1379)) (= x2483 (x342 x3301)) (= x2215 (and x2328 x2974)) (= (<= x1787 x1286) x2328)) (not x2447)) (and (=> (and (and (= 0 x1673) (= x307 x1485) (= 0 x2347)) (not x2215)) x3306) (=> (and x2215 (and (or (and (= x307 x3404) (not x380)) (and (and (>= 4294967295 x357) (= (x347 x1379) x844) (= x381 (= x1491 (x2471 x3301))) x831 x381 (= (>= (x2471 x1379) x844) x831) (= x66 x3404) (= x1491 (x347 x3301))) x380)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1529) (= x2607 x1529) (= x380 (> x3218 0)) (= x3139 (x1371 x3301)) (= x1529 (+ x3139 x1787)) (= x3400 (x342 x1379)) (= (- x3400 x1787) x1091) (>= x1529 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3139 x1787))))) x2553))) (=> (and x2447 (and (= x2280 true) (= x3378 0) (= x692 false))) x2979)))))
(assert (=> (<= x1250 10000) (= 0 (x1601 x1250))))
(assert (not (x1103 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053))))
(assert (x1594 x2076))
(assert (x804 x2551))
(assert (x1594 x45))
(assert (= x3607 (x1069 (x3512 x2407 x3607 x800 x55))))
(assert (= 64 (x2399 (x1736 64 x3691 100))))
(assert (x1594 x3556))
(assert (> (x1736 64 x2848 2) 10000))
(assert (x136 x31 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1654))
(assert (= (and x2291 (not x626)) x1144))
(assert (= (and x1722 x439) x2548))
(assert (x1594 x1705))
(assert (= (=> (and (= x3049 x298) (= x3352 x2384) (= x759 x2862) (= x2678 x254) (= x501 x320) (= x2670 x3232) (= x2680 x1134) (= x664 x1466) (= x3344 x2674) (= x1892 x3477)) x3713) x973))
(assert (x1594 x2258))
(assert (x1594 x672))
(assert (x1594 x1475))
(assert (not (x1103 (x1736 64 x1849 100))))
(assert (x1594 x785))
(assert (x136 x237 256))
(assert (= 100 (x1067 (x1736 64 x3303 100))))
(assert (x1594 x1553))
(assert (= (x2399 (x1736 64 x497 100)) 64))
(assert (x804 x3063))
(assert (= (and (not x1555) x2701) x3046))
(assert (x1103 274184521717934524641157099916833587230))
(assert (= x853 (or (and x2459 x2650) (and x1817 x2380))))
(assert (x1594 x3622))
(assert (x1594 x1857))
(assert (< 10000 (x1736 64 x428 100)))
(assert (x2365 x3405))
(assert (= 64 (x2399 (x1736 64 x947 100))))
(assert (= x2815 (=> (and (or (and (and (= x123 x810) (= x456 x3334) (= x2250 x300)) (not x2630)) (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3315 x3395)) (= (ite (= 0 x810) x2667 0) x3395) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1093) (= x456 x3334) (>= x1093 0) (= x1093 (+ x3395 x3315)) (= (x681 x1379) x3315) (= x1093 x2373) (= x1620 (- x3575 x3395)) (= x300 x2250) (= x3575 (x1314 x3301)) (= x123 x810)) x2630)) (= x2630 (= x810 0))) x1329)))
(assert (x1594 x3633))
(assert (= (x2902 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x1250))
(assert (= (and (not x2933) x3492) x805))
(assert (x1594 x2232))
(assert (= (and (not x304) x2595) x395))
(assert (= 100 (x1067 (x1736 64 x2665 100))))
(assert (x1594 x1234))
(assert (x1594 x3114))
(assert (= (x2399 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) x1758))
(assert (=> (>= 10000 x2413) (= (x1601 x2413) 0)))
(assert (= (and x168 (not x1341)) x2506))
(assert (x1594 x315))
(assert (x1594 x1368))
(assert (x2365 x2864))
(assert (x1594 x2919))
(assert (x3740 x2267))
(assert (> (x1736 64 x2525 100) 10000))
(assert (x3740 x835))
(assert (x136 x315 256))
(assert (= x833 (and x50 x112)))
(assert (x1594 x760))
(assert (x1594 x130))
(assert (= (x1601 (x1736 64 x3435 100)) (x1736 64 x3435 100)))
(assert (x1594 x664))
(assert (x1594 x1319))
(assert (x1594 x3067))
(assert (x955 32 (ite (= x314 0) 1 0)))
(assert (not (x1103 (x1736 64 x1800 100))))
(assert (= x3565 (x1069 (x1736 64 x3565 36))))
(assert (x1594 x1162))
(assert (x1594 x911))
(assert (< 10000 (x3512 x1758 x1741 x982 x2171)))
(assert (=> (<= x800 10000) (= (x1601 x800) 0)))
(assert (=> (<= x1022 10000) (= 0 (x1601 x1022))))
(assert (= (x1601 (x1736 64 x3733 36)) (x1736 64 x3733 36)))
(assert (= x2143 (and x3664 x1884)))
(assert (x1594 x3371))
(assert (x1594 x899))
(assert (= 64 (x2399 (x1736 64 x1561 36))))
(assert (= x3224 (x2902 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053))))
(assert (x2090 (+ 31 x1793) 32))
(assert (=> (>= 10000 x3618) (= 0 (x1601 x3618))))
(assert (> (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984) 10000))
(assert (= x2668 (and x2011 (not x2446))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)))
(assert (x1594 x2510))
(assert (not (x1103 (x1979 x609 x412 x1754 x384 x2566 x3209 x488))))
(assert (= (and (not x202) x1338) x676))
(assert (x1594 x2439))
(assert (= x1406 (or x1447 x2319)))
(assert (x1594 x734))
(assert (x1594 x353))
(assert (< (x1736 64 x462 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2226 100)))
(assert (= x131 (x1069 (x1736 64 x131 36))))
(assert (< (x3512 x2407 x3607 x800 x55) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1758 (x2399 (x1185 x1758 x14))))
(assert (x804 x3712))
(assert (x1594 x2661))
(assert (x1594 x1948))
(assert (=> (>= 10000 x2371) (= (x1601 x2371) 0)))
(assert (x1594 x2512))
(assert (= x1443 (=> (and (and x856 (= x3357 x2854)) (and (= (x3143 (+ 32 x1033)) x3357) (= x856 (not (> x3462 x3357))) (= (x268 x687) x184))) x398)))
(assert (x1594 x3044))
(assert (x1594 x21))
(assert (= x636 (and x1890 x2394)))
(assert (x3740 x1372))
(assert (= (=> (and (or (not x1480) x1480) (= (= 0 x1482) x1480)) x463) x2203))
(assert (x804 x1493))
(assert (not (x1103 (x1736 64 x3549 100))))
(assert (= (x3512 x609 x2437 x726 x1997) (x1601 (x3512 x609 x2437 x726 x1997))))
(assert (x136 x3405 256))
(assert (= (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639584) 0))
(assert (x2631 x1773))
(assert (< (x1736 x2647 x1474 x2342) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2399 (x1736 64 x2839 36)) 64))
(assert (not (x1103 (x1544 x2647 x350 x3756 x48 x864 x1563))))
(assert (= x2146 (and x2479 x2571)))
(assert (x804 x239))
(assert (=> (>= 10000 x2431) (= 0 (x1601 x2431))))
(assert (= x3496 (x1069 (x1736 64 x3496 100))))
(assert (not (x1103 (x1736 x609 x3458 x730))))
(assert (x2365 x1580))
(assert (x136 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1103 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (x1594 x3461))
(assert (x1594 x3503))
(assert (x1594 x3294))
(assert (> (x1736 64 x1849 100) 10000))
(assert (= x1221 (x843 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014))))
(assert (x1594 x146))
(assert (x1594 x1570))
(assert (x804 x2912))
(assert (x3740 x1973))
(assert (= x354 (x1870 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487))))
(assert (> (x1736 64 x3614 100) 10000))
(assert (= (x1601 (x3512 x2210 x443 x2278 x1166)) (x3512 x2210 x443 x2278 x1166)))
(assert (= (and x3434 x3770) x1239))
(assert (not (x1103 (x1185 x2210 x1382))))
(assert (= x462 (x1069 (x1736 64 x462 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1483 100)))
(assert (x1594 x330))
(assert (=> (<= x3549 10000) (= 0 (x1601 x3549))))
(assert (x1594 x3120))
(assert (= (x2399 (x1544 x609 x515 x1745 x744 x2405 x1350)) x609))
(assert (= (or x218 x1125) x790))
(assert (x1594 x678))
(assert (=> (<= x2165 10000) (= (x1601 x2165) 0)))
(assert (= (x1069 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) x2716))
(assert (= 64 (x2399 (x1736 64 x1483 100))))
(assert (= x1849 (x1069 (x1736 64 x1849 100))))
(assert (= x1149 (or x2014 x3511 x909 x3643 x616 x99 x2140 x2019 x532 x1781 x1733 x1502 x1227 x34 x1799 x2787 x3715 x154 x2763 x2175 x2146 x2954 x3506 x639 x3202 x833 x370 x853 x2711 x2699)))
(assert (=> (<= x3684 10000) (= (x1601 x3684) 0)))
(assert (x1594 x3685))
(assert (x136 x3500 256))
(assert (= x2954 (and x1003 x3699)))
(assert (> (x1908 x1758 x2820 x2323 x1705 x3459) 10000))
(assert (not (x1103 (x1736 64 x3470 100))))
(assert (x1594 x1073))
(assert (x1594 x3344))
(assert (x1594 x2434))
(assert (= (x1067 (x1736 64 x3538 100)) 100))
(assert (x1594 x174))
(assert (x1594 x476))
(assert (not (x1103 (x1736 64 x1561 36))))
(assert (= 100 (x1067 (x1736 64 x197 100))))
(assert (x136 x192 256))
(assert (= (x1601 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)))
(assert (x804 x737))
(assert (x175 x2053))
(assert (x1594 x1379))
(assert (x1594 x2165))
(assert (= (=> (and (= x439 (= 0 x3118)) (or (and (and (= (ite (= x3118 0) x3061 0) x364) (= x3011 x662) (= x3629 x1454) (= x608 x1464) (= x1059 x3300) (= x3402 x294) (= (x2286 x1379) x2689) (= (- x1802 x364) x240) (<= x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1802 (x461 x28)) (= x2698 x797) (= x1453 x3761) (= x1464 (+ x2689 x364)) (= x129 x1301) (= x3118 x1929) (< (+ x2689 x364) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3431 x215) (<= 0 x1464) (= x132 x1158) (= x2881 x2641)) x439) (and (and (= x1453 x3761) (= x1158 x132) (= x3629 x1454) (= x797 x2698) (= x294 x3402) (= x1059 x3300) (= x215 x3431) (= x129 x1301) (= x3118 x1929) (= x2641 x2881) (= x662 x3011)) (not x439)))) x2032) x3577))
(assert (= x1346 (and x772 x2006)))
(assert (= x1502 (or (and x265 x1912) (and x3160 x2206))))
(assert (= (=> (and (and (= x2772 (+ x3509 32)) (= (not (> x3168 x2772)) x92) (= (x2292 x2610) x3392)) (and (= x2772 x1204) x92)) x3523) x878))
(assert (x1594 x1490))
(assert (= 64 (x2399 (x1736 64 x3683 100))))
(assert (= x1586 (and (not x2063) x926)))
(assert (x1594 x2647))
(assert (x1594 x811))
(assert (x2365 x2297))
(assert (x1594 x48))
(assert (x1594 x3430))
(assert (not (x1103 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984))))
(assert (x1594 x1004))
(assert (= (x1736 64 x3496 100) (x1601 (x1736 64 x3496 100))))
(assert (x1594 x2183))
(assert (x1594 x66))
(assert (= 64 (x2399 (x1736 64 x2165 (ite (= 0 x2647) x2018 (ite (<= x2647 32) x921 (ite (<= x2647 64) x1385 (ite (<= x2647 96) x889 (ite (>= 128 x2647) x337 (ite (>= 160 x2647) x1348 (ite (>= 192 x2647) x2720 (ite (<= x2647 224) x1996 x3743))))))))))))
(assert (> (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435) 10000))
(assert (= (=> (and (= x2374 x3352) (= x2674 x1277) (= x683 x254) (= x605 x2862) (= x664 x2230) (= x298 x1352) (= x320 x2434) (= x3232 x1653) (= x1892 x3519) (= x1134 x450)) x973) x206))
(assert (x1594 x232))
(assert (x1594 x239))
(assert (= x3396 (x3383 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984))))
(assert (x1594 x750))
(assert (x2365 x2776))
(assert (x1594 x970))
(assert (< 10000 (x1736 64 x3683 100)))
(assert (= (and x1273 x2229) x3373))
(assert (= (and (not x1347) x2218) x3455))
(assert (x1594 x1419))
(assert (x136 x2758 256))
(assert (= x2647 (x2399 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904))))
(assert (x1594 x3694))
(assert (x3740 x2742))
(assert (= (=> (and (= 36 x2105) (= true x1841) (= false x629)) x3517) x1279))
(assert (x1594 x3212))
(assert (x1594 x2620))
(assert (x1594 x1585))
(assert (x1594 x2610))
(assert (x1594 x3758))
(assert (= (x2399 (x1736 x2647 x1474 x2342)) x2647))
(assert (= x1299 (x1069 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014))))
(assert (x3085 x1517))
(assert (x1594 x1867))
(assert (not (x1103 (x1736 64 x128 100))))
(assert (x1594 x1453))
(assert (x1594 x2418))
(assert (x1594 x1742))
(assert (> (x1736 64 x1337 100) 10000))
(assert (= (and x324 (not x141)) x994))
(assert (=> (>= 10000 x3756) (= (x1601 x3756) 0)))
(assert (x1594 x3209))
(assert (x804 x3258))
(assert (x1594 x1692))
(assert (x1594 x3632))
(assert (= x1483 (x1069 (x1736 64 x1483 100))))
(assert (=> (<= x3396 10000) (= 0 (x1601 x3396))))
(assert (x136 x2311 256))
(assert (x1594 x2533))
(assert (x1594 x1865))
(assert (x1594 x3218))
(assert (x3740 x3490))
(assert (= x3326 (=> (= (= 0 x1626) x2351) (and (=> (and (not x2351) (and (= x807 x1115) (= x3320 x3503) (= x2514 x1809) (= x1540 x876) (= x3481 x3166) (= x3149 x279) (= x1226 x3226) (= x2554 x1034) (= x871 x1278) (= x2764 x560))) x3418) (=> (and x2351 (and (= true x3339) (= x748 false) (= x355 x2105))) x3517)))))
(assert (= x2171 (x843 (x3512 x1758 x1741 x982 x2171))))
(assert (x1594 x1496))
(assert (= x3533 (or x3022 x3714)))
(assert (x1594 x1214))
(assert (x2631 x1602))
(assert (x1594 x1034))
(assert (x136 x2576 256))
(assert (x1594 x437))
(assert (= (x1067 (x1736 64 x2937 36)) 36))
(assert (= (and x3504 (not x3199)) x50))
(assert (x3740 x192))
(assert (x1103 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (= x3683 (x1069 (x1736 64 x3683 100))))
(assert (= x1942 (x1870 (x1908 x2210 x3341 x3067 x3026 x1942))))
(assert (x1594 x1868))
(assert (x1594 x1134))
(assert (= (=> (and (= false x2690) (= false x975) (= (x1858 x2948) x2966) (= x458 false) (= x235 (not x1420)) (= x1420 (not x713)) (= x91 false) (= (= x2303 x3089) x713) (= 4 x2922) (= false x3296) (= false x613) (= x3289 4076725131) (= x516 false) (>= 127 x1356) (>= 127 x1356) (= false x2390) (>= x2966 1) (= x3414 false) (= 3521034783 x125) (= x1065 false) (>= 1461501637330902918203684832716283019655932542975 x3089) (= x2604 false) (= x1108 4076725131) (= 274184521717934524641157099916833587230 x2557) (= 1 x1255) (= x1165 (= x3122 x2303)) (= x110 false) (= x1426 false) (= false x2547) (= x1306 2376452955)) x235) x53))
(assert (x136 x1783 256))
(assert (= x1432 (or x2940 x1354)))
(assert (= x463 (=> (and (= x1917 (= x1482 0)) (or (and (not x1917) (and (<= 32 x574) (= (x3742 x1750) x554) (< x1750 x885) (<= x574 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x3143 (+ 32 x1750)) x885) (<= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x1750 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1750)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1750) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1750)))) (and x1917 (= x1482 0)))) x53)))
(assert (x1594 x2376))
(assert (x1594 x1287))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1544 x2647 x350 x3756 x48 x864 x1563)))
(assert (x1594 x3097))
(assert (x1594 x2588))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 x2407 x2773 x2613)))
(assert (> (x1736 64 x1049 36) 10000))
(assert (x804 x2311))
(assert (= (and x445 x1480) x3217))
(assert (= x387 (and x3182 (not x3361))))
(assert (= 64 (x2399 (x1736 64 x2114 36))))
(assert (x804 x2170))
(assert (not (x1103 (x1736 64 x2165 (ite (<= x609 32) x2444 (ite (<= x609 64) x2952 (ite (>= 96 x609) x614 (ite (>= 128 x609) x2468 (ite (<= x609 160) x1672 (ite (>= 192 x609) x2785 (ite (>= 224 x609) x2725 x2330)))))))))))
(assert (= x200 (and x3361 x3182)))
(assert (< 10000 (x3512 x2647 x2752 x986 x1472)))
(assert (=> (>= 10000 x435) (= (x1601 x435) 0)))
(assert (< (x1736 64 x1676 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x13 (+ x1793 31)))
(assert (= x3688 (or (and x3707 x101) (and x908 x2965) (and x2701 x1555) (and x676 x1840))))
(assert (= (and (not x2447) x2119) x2672))
(assert (< 10000 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053)))
(assert (=> (>= 10000 x1754) (= 0 (x1601 x1754))))
(assert (x1594 x1448))
(assert (< (x1736 64 x2413 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2930))
(assert (x1594 x1416))
(assert (= (and x3419 (not x660)) x709))
(assert (=> (>= 10000 x2171) (= 0 (x1601 x2171))))
(assert (= x3517 (=> (and (= x2658 x2149) (= x2774 0) (= 2 x763) (= x783 x3771) (= x1190 x1780) (= x2105 x704) (= x46 x1808) (= x3117 x2324) (= x1616 x2404) (= x1246 x3185) (= x2639 x1897) (= x905 2) (= x900 x2265) (= x28 x1127) (= x2000 x625)) x3544)))
(assert (= (x1067 (x1736 64 x1676 100)) 100))
(assert (x1594 x3736))
(assert (= (x1067 (x1736 64 x1337 100)) 100))
(assert (= (x1601 (x1185 x2407 x2321)) (x1185 x2407 x2321)))
(assert (x1594 x272))
(assert (=> (>= 10000 x1900) (= 0 (x1601 x1900))))
(assert (x136 x232 256))
(assert (x1594 x3025))
(assert (x1594 x2384))
(assert (> (x1736 64 x3565 36) 10000))
(assert (x1594 x1147))
(assert (< 10000 (x1544 x1758 x1403 x3597 x359 x130 x2512)))
(assert (= (=> (and (and (= 128 x3028) (= (= x3297 x3680) x711) (<= x3297 1461501637330902918203684832716283019655932542975) (>= 255 x2913) (= (= 0 x1588) x2950) x2950 (= x3215 (< 0 x2913)) x3215 (= x2913 (x1666 x767)) (= (x1736 64 x1439 10) x767)) (or (and (and (= false x3540) (= x2054 x3185) (<= x1629 127) (= false x1554) (>= x1521 1) (= 1 x1895) (= x2253 x1808) (>= 1461501637330902918203684832716283019655932542975 x3297) (= x564 x2149) (= x900 x3200) (>= x3297 1) (= x1281 x2000) (= false x247) (= x2031 2) (= 36 x2625) (= x1616 x1633) (= x1521 (x1858 x1379)) (= x3297 x1379) (= x2054 x38) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2326) (>= 127 x1629) (= x954 x1897) (= x1780 x1654) (= false x379) (= x3297 x3771) (= x2395 32) (= x3117 x849) (= 310283853 x2806) (= x28 x1117)) (not x711)) (and (and (and (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x803) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2054 1000000000)) x424) (= false x1218) (<= x2850 127) (>= x1010 1) (= x1695 x2054) (= x1010 (x1858 x3680)) (= x2507 (* x2054 1000000000)) (= x1201 x1695) (= (and x180 x424) x352) (= x1220 310283853) (= 36 x537) (= false x2285) (= x180 (<= x2507 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= 127 x2850)) (or (and (not x352) (and (= 36 x2395) (= x3200 x900) (= x2149 x564) (= x1808 x2253) (= x665 2) (= x28 x1117) (= x1897 x954) (= x1958 false) (= x3185 x2054) (= x1633 x1616) (= 0 x1895) (= x3297 x3771) (= x1373 true) (= x1281 x2000) (= x2031 2) (= x849 x3117) (= x1780 x1654))) (and x352 (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2507) (= x1808 x2253) (= x1616 x1633) (= x849 x3117) (= x2395 32) (= x2931 x2507) (= false x1364) (>= x2507 0) (= x1281 x2000) (= false x1757) (= x1897 x954) (= x1895 1) (= x1117 x28) (= x3771 x3297) (= x2031 2) (= x3200 x900) (= x3185 x2054) (= x564 x2149) (= x1654 x1780))))) x711))) x1855) x1952))
(assert (= (and (not x1327) x3667) x2213))
(assert (= x1360 (=> (and (= x2105 36) (= true x2642) (= x913 false)) x3517)))
(assert (= (and x2273 x2191) x3667))
(assert (= (x2399 (x1736 64 x1049 36)) 64))
(assert (x1594 x1126))
(assert (x1594 x306))
(assert (= x291 (and (not x757) x2693)))
(assert (x804 x3151))
(assert (x1594 x3606))
(assert (x804 x2677))
(assert (x1594 x1987))
(assert (x1594 x953))
(assert (= x1146 (and (not x988) x1756)))
(assert (= x2463 (=> (and (= x275 x3109) (= x2808 x1590)) x1872)))
(assert (x1594 x3614))
(assert (x1594 x2284))
(assert (= (x3383 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) x931))
(assert (x1594 x367))
(assert (x1594 x1942))
(assert (x1594 x915))
(assert (= (and (not x1304) x1020) x195))
(assert (x804 x2439))
(assert (x1594 x635))
(assert (= (and x1351 x2944) x3483))
(assert (not (x1103 (x1736 64 x1901 100))))
(assert (x1594 x3351))
(assert (x2365 x2469))
(assert (= (=> (and (>= 606 x1177) (= x1177 x710) (= (+ 31 x1204) x2982) (<= 481 x1177) (= x1177 (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2982))) x2320) x3523))
(assert (x3085 x3490))
(assert (x3740 x343))
(assert (x1594 x2596))
(assert (x1594 x2582))
(assert (= x2139 (=> (and (= x1150 true) (= false x733) (= 36 x3378)) x2979)))
(assert (not (x1103 (x1736 64 x3435 100))))
(assert (x1594 x1158))
(assert (x1594 x3232))
(assert (= (x1736 64 x462 100) (x1601 (x1736 64 x462 100))))
(assert (= (x1067 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)) x1585))
(assert (x1594 x763))
(assert (= x3711 (or x1531 x3280)))
(assert (=> (<= x2533 10000) (= (x1601 x2533) 0)))
(assert (x1594 x2056))
(assert (x2365 x1728))
(assert (not (x1103 (x1544 x2407 x3469 x440 x2964 x2533 x3572))))
(assert (= 64 (x2399 (x1736 64 x428 100))))
(assert (= (x2399 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) x2210))
(assert (= x3388 (and x484 (not x576))))
(assert (= (x1067 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) x440))
(assert (x3740 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1594 x158))
(assert (= x602 (=> (= x3362 (= x330 0)) (and (=> (and (= (or (and (< x2683 32) (= (<= x2683 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x2683 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2362) (not x3362)) (and (=> (and (and (= true x3113) (= 0 x3551) (= x1924 false)) x2362) x1697) (=> (and (not x2362) (and (= x561 (x263 x2628)) (= x1405 x2628) (>= 3 x561) x3343 (= x722 (= 0 x1416)) (= x2814 (x1736 64 x2628 11)) (= (x3642 160) x2628) (= x3343 (= x1416 x561)) (>= 3 x1416) (= x1416 (x2703 x2814)))) (and (=> (and (and (= x1716 (+ 1 x3704)) (= x245 x3089) (= x3704 (+ 1 x1478)) (= 1 x1482) (= 32 x574) (= x118 (x1736 64 x1439 10)) (= x68 false) (= x1478 (x1736 64 x2628 11)) (= false x372) (= 1 x2233)) x722) x2203) (=> (and (and (= 4 x3551) (= x2767 true) (= false x1196)) (not x722)) x1697))))) (=> (and (and (= true x124) (= false x415) (= x3551 x2683)) x3362) x1697)))))
(assert (x1594 x1645))
(assert (x804 x2418))
(assert (x3740 x471))
(assert (x1594 x2806))
(assert (x136 x2061 256))
(assert (x1594 x2886))
(assert (x1594 x2713))
(assert (= (or x3516 x1984 x1425) x2177))
(assert (=> (<= x2114 10000) (= 0 (x1601 x2114))))
(assert (x1594 x2554))
(assert (x1594 x679))
(assert (x1594 x3166))
(assert (x136 x471 256))
(assert (=> (<= x1439 10000) (= (x1601 x1439) 0)))
(assert (=> (<= x1745 10000) (= (x1601 x1745) 0)))
(assert (= (x1185 x2647 x284) (x1601 (x1185 x2647 x284))))
(assert (= x3202 (and x3365 x3136)))
(assert (x1594 x1745))
(assert (x1594 x517))
(assert (= (x1601 52207524433148634526794681841911218724012555196680520750525547801574629179392) 0))
(assert (x2365 x2551))
(assert (= (x1601 (x1736 64 x497 100)) (x1736 64 x497 100)))
(assert (= x1176 (and (not x3075) x3769)))
(assert (= (and x1476 x914) x3766))
(assert (x804 x835))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)))
(assert (= (and x3578 x1498) x697))
(assert (x1594 x847))
(assert (=> (<= x2839 10000) (= 0 (x1601 x2839))))
(assert (=> (>= 10000 x3435) (= (x1601 x3435) 0)))
(assert (x1594 x1626))
(assert (not (x1103 (x1736 64 x3325 100))))
(assert (> (x1736 64 x317 100) 10000))
(assert (x1594 x396))
(assert (< 10000 (x1736 64 x2848 36)))
(assert (x3740 x3151))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3691 100)))
(assert (not (x1103 (x1736 64 x1439 10))))
(assert (= (and (not x3429) x3268) x3194))
(assert (= x3611 (and x3455 (not x557))))
(assert (x1594 x1750))
(assert (= x717 (and x3706 (not x2133))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3565 36)))
(assert (x1594 x1190))
(assert (x1594 x3496))
(assert (= (x2399 (x1736 64 x3614 100)) 64))
(assert (x1594 x652))
(assert (=> (>= 10000 x103) (= 0 (x1601 x103))))
(assert (not (x1103 (x3512 x2647 x2752 x986 x1472))))
(assert (x2365 x2758))
(assert (x804 x2921))
(assert (x1594 x450))
(assert (x1594 x82))
(assert (x1594 x2641))
(assert (x1594 x1802))
(assert (= (and x3422 x416) x1354))
(assert (= (and (not x2113) x394) x1655))
(assert (x1594 x2374))
(assert (x1594 x1534))
(assert (x3740 x2061))
(assert (=> (>= 10000 x2330) (= (x1601 x2330) 0)))
(assert (x1594 x2025))
(assert (= (x1069 (x1736 64 x426 6)) x426))
(assert (not (x1103 (x1908 x2210 x3341 x3067 x3026 x1942))))
(assert (= 64 (x2399 (x1736 64 x1595 100))))
(assert (= (and x2967 x3380) x1862))
(assert (x1594 x891))
(assert (x1594 x1206))
(assert (= (x2399 (x1736 64 x2848 36)) 64))
(assert (x3740 x3718))
(assert (= (and x3036 x377) x1462))
(assert (x3740 x3017))
(assert (= (x1067 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) x1754))
(assert (x2365 x2084))
(assert (= x2519 (and x2129 x935)))
(assert (x1594 x328))
(assert (x804 300))
(assert (= (x2399 (x1736 x1758 x1288 x2582)) x1758))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2976 36)))
(assert (> (x1736 64 x3518 100) 10000))
(assert (x1594 x819))
(assert (x1594 x2858))
(assert (x1594 x3405))
(assert (x1594 x2042))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3512 x1758 x1741 x982 x2171)))
(assert (= (or x421 x1146 x3375) x3534))
(assert (= x2686 (x1870 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904))))
(assert (= (or x551 (and x1155 (not x3728))) x3508))
(assert (= (and x3268 x3429) x1542))
(assert (x1594 x3551))
(assert (x3740 x579))
(assert (not (x1103 (x1908 x2647 x3684 x734 x3114 x2475))))
(assert (= x2901 (=> (= (= x1634 0) x992) (and (=> (and (and (= x2105 x2360) (= x1035 true) (= x1678 false)) x992) x3517) (=> (and (and (= x3423 x2058) (= x666 x356) (= x652 x852) (= x3447 x2299) (= x182 x1353) (= x2251 x814) (= x2556 x1112) (= x16 x2970) (= x587 x117) (= x1553 x3592)) (not x992)) x1401)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)))
(assert (x1594 x1972))
(assert (=> (<= x2948 10000) (= (x1601 x2948) 0)))
(assert (=> (>= 10000 x1350) (= (x1601 x1350) 0)))
(assert (x1594 x368))
(assert (= x3129 (or x3483 x1391 x1518)))
(assert (x1594 x1901))
(assert (x1594 x1604))
(assert (x1594 x3764))
(assert (x1594 x625))
(assert (= (x1736 64 x2165 (ite (= x2647 0) x2018 (ite (>= 32 x2647) x921 (ite (>= 64 x2647) x1385 (ite (<= x2647 96) x889 (ite (<= x2647 128) x337 (ite (<= x2647 160) x1348 (ite (<= x2647 192) x2720 (ite (<= x2647 224) x1996 x3743))))))))) (x1601 (x1736 64 x2165 (ite (= x2647 0) x2018 (ite (>= 32 x2647) x921 (ite (<= x2647 64) x1385 (ite (<= x2647 96) x889 (ite (>= 128 x2647) x337 (ite (>= 160 x2647) x1348 (ite (>= 192 x2647) x2720 (ite (>= 224 x2647) x1996 x3743))))))))))))
(assert (x1594 x1280))
(assert (< 10000 (x1736 64 x1561 36)))
(assert (= x2014 (or (and x1959 x1243) (and x2239 x2706))))
(assert (x804 x2620))
(assert (x136 x2921 256))
(assert (x136 x504 256))
(assert (x1594 x1365))
(assert (= x2407 (x2399 (x3512 x2407 x3607 x800 x55))))
(assert (= x1231 (x843 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053))))
(assert (x1594 x1633))
(assert (= (x1069 (x1736 64 x197 100)) x197))
(assert (x1594 x23))
(assert (x1594 x2854))
(assert (= (=> (and (and (= (= x330 0) x2967) (= x976 x330) (= x1602 x2683) (= x1194 x245)) (or x2967 (not x2967))) x602) x1698))
(assert (x1594 x2263))
(assert (x1594 x191))
(assert (= (and x1890 (not x2394)) x590))
(assert (= (=> (= x3136 (= 0 x2542)) (and (=> (and (and (= x518 x2374) (= x3519 x2961) (= x2930 x1352) (= x683 x2376) (= x1653 x3212) (= x2230 x2777) (= x450 x2498) (= x1277 x777) (= x2434 x3606) (= x605 x3682)) (not x3136)) x206) (=> (and x3136 (and (= x2105 x2996) (= false x3748) (= true x115))) x3517))) x2474))
(assert (=> (<= x1084 10000) (= (x1601 x1084) 0)))
(assert (x1594 x1706))
(assert (x1594 x102))
(assert (< (x1185 x2647 x284) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1601 4076725131)))
(assert (=> (<= x2475 10000) (= 0 (x1601 x2475))))
(assert (x804 x2997))
(assert (x1594 x3008))
(assert (x136 x1052 256))
(assert (=> (<= x1797 10000) (= 0 (x1601 x1797))))
(assert (x1594 x2349))
(assert (x1594 x633))
(assert (= x3341 (x1069 (x1908 x2210 x3341 x3067 x3026 x1942))))
(assert (x1594 x1728))
(assert (x1594 x2525))
(assert (x1594 x3473))
(assert (< 10000 (x1736 64 x2665 100)))
(assert (x1594 x2483))
(assert (=> (<= x3341 10000) (= (x1601 x3341) 0)))
(assert (=> (<= x1474 10000) (= (x1601 x1474) 0)))
(assert (< 10000 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)))
(assert (x804 x2524))
(assert (x804 x960))
(assert (x804 x2148))
(assert (x3740 x2338))
(assert (x1594 x204))
(assert (x1594 x2003))
(assert (x1594 x3397))
(assert (x1594 x1599))
(assert (= x723 (and x520 (not x3090))))
(assert (< (x1736 64 x3683 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x800))
(assert (x1594 x1139))
(assert (> (x1736 64 x3691 100) 10000))
(assert (x1594 x3553))
(assert (x804 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3765 (x1870 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053))))
(assert (x1594 x1132))
(assert (not (x1103 (x1736 64 x497 100))))
(assert (x1594 x497))
(assert (x1594 x1773))
(assert (=> (<= x2525 10000) (= (x1601 x2525) 0)))
(assert (=> (<= x2820 10000) (= (x1601 x2820) 0)))
(assert (= 64 (x2399 (x1736 64 x2980 36))))
(assert (= x173 (and x1747 x874)))
(assert (= (or x3102 x1922) x43))
(assert (= x1203 (=> (and (= false x1285) (= 36 x3378) (= true x3716)) x2979)))
(assert (= (and (not x475) x2122) x333))
(assert (x1594 x641))
(assert (= (x1736 64 x2525 100) (x1601 (x1736 64 x2525 100))))
(assert (= (x1601 (x1736 64 x1561 36)) (x1736 64 x1561 36)))
(assert (= (x1601 (x1736 64 x1901 100)) (x1736 64 x1901 100)))
(assert (= (or (and x1062 (not x2521)) x3177) x870))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1049 2)))
(assert (=> (<= x3572 10000) (= (x1601 x3572) 0)))
(assert (= (or x249 x1283) x846))
(assert (= (x1069 (x1908 x1758 x2820 x2323 x1705 x3459)) x2820))
(assert (x1594 x1794))
(assert (x1594 x1375))
(assert (< 10000 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)))
(assert (x1594 x719))
(assert (x3740 x3405))
(assert (= (x1069 (x3512 x609 x2437 x726 x1997)) x2437))
(assert (= (and x581 x71) x2122))
(assert (x1594 x3283))
(assert (x1594 x3121))
(assert (x1594 x3094))
(assert (x1594 x164))
(assert (x1594 x2980))
(assert (x804 x1711))
(assert (not (x1103 (x1736 64 x947 100))))
(assert (x1594 x3469))
(assert (x1594 x471))
(assert (x1594 x2996))
(assert (x1594 x404))
(assert (= (x2399 (x1736 64 x2525 100)) 64))
(assert (x1594 x587))
(assert (x2365 x2183))
(assert (x804 x2414))
(assert (x1594 x3258))
(assert (x804 x3017))
(assert (= (x2399 (x1736 64 x2302 100)) 64))
(assert (= (and (not x951) x539) x454))
(assert (x2365 x2858))
(assert (= (x1069 (x1908 x2407 x2216 x3307 x2212 x3675)) x2216))
(assert (x1594 x406))
(assert (= x1997 (x843 (x3512 x609 x2437 x726 x1997))))
(assert (x2365 x2439))
(assert (x1594 x3683))
(assert (= (x1601 (x1736 64 x947 100)) (x1736 64 x947 100)))
(assert (x1594 x238))
(assert (x1594 x1590))
(assert (x136 x1121 256))
(assert (x1594 x605))
(assert (=> (<= x3565 10000) (= 0 (x1601 x3565))))
(assert (x1594 x986))
(assert (x1594 x1805))
(assert (= (or x938 x2213) x1722))
(assert (< 10000 (x1736 64 x128 100)))
(assert (= (and x575 x1434) x2699))
(assert (x1594 x2689))
(assert (= x2991 (=> (and (= (x1124 480) x813) (= x3461 (x3143 (+ x2855 4))) (= x2257 (< 0 x813)) (= x3245 (x3143 (+ x2005 32))) (= (x3143 (+ x3461 32)) x3243) (= x2005 (x3143 (+ x3461 128)))) (and (=> (not x2257) x3241) (=> (and x2257 (and (= x3513 (< 32 x813)) (= x2754 (x1160 512)))) (and (=> (and x3513 (and (= x71 (< 64 x813)) (= (x3530 544) x3120) (= x2942 (x3143 (+ x3245 32))))) (and (=> (not x71) x3241) (=> (and x71 (and (= x2771 (x3230 576)) (= x475 (> x813 96)) (= (x3143 (+ 64 x3245)) x3382))) (and (=> x475 x1153) (=> (not x475) x3241))))) (=> (not x3513) x3241)))))))
(assert (x1594 x3162))
(assert (x1594 x435))
(assert (x1594 x2658))
(assert (= x1724 (x1069 (x1736 64 x1724 100))))
(assert (= (x1601 x1478) (x1601 (+ 1 x1478))))
(assert (x1594 x1860))
(assert (x1594 x1775))
(assert (= (x2399 (x3512 x2210 x443 x2278 x1166)) x2210))
(assert (x1594 x2667))
(assert (< 10000 (x1736 64 x2165 (ite (= x2647 0) x2018 (ite (>= 32 x2647) x921 (ite (>= 64 x2647) x1385 (ite (<= x2647 96) x889 (ite (<= x2647 128) x337 (ite (>= 160 x2647) x1348 (ite (<= x2647 192) x2720 (ite (<= x2647 224) x1996 x3743)))))))))))
(assert (x1594 x2097))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x428 100)))
(assert (=> (>= 10000 x864) (= 0 (x1601 x864))))
(assert (x2631 x574))
(assert (= x2781 (=> (and (= true x1777) (= 36 x3378) (= false x3103)) x2979)))
(assert (= x270 (and x200 x358)))
(assert (= x3415 (=> (and (= x3074 (= x2231 255)) (= 480 x1707) (= x417 480)) (and (=> (and (and (= (x312 255 x1372) x2684) (<= x3476 18446744073709551615) (= (x1736 64 x2231 12) x73) (= (+ 1 x2231) x1372) (= (= 255 x131) x485) (= (x312 255 x1372) x131) (= (x1271 x73) x3476)) (not x3074)) (and (=> (and (not x485) (and (= (x548 x1711 300) x243) (= x3622 (x312 255 x2576)) (= x3204 (x1736 64 x131 36)) (= (x2372 x3204) x1711) (= x1558 (= 255 x1691)) (= (+ x131 1) x2576) (= (x312 255 x2576) x1691))) (and (=> (and (not x1558) (and (= (x1736 64 x1691 100) x2812) (= x694 (x312 255 x1475)) (= x317 (x312 255 x1475)) (= x2842 (= x317 255)) (= (x2824 x2812) x1015) (= x1475 (+ x1691 1)))) (and (=> (and (not x2842) (and (= x912 (= 255 x1724)) (= (+ 1 x317) x3718) (= x2989 (x1736 64 x317 100)) (= (x312 255 x3718) x2598) (= (x2824 x2989) x832) (= x1724 (x312 255 x3718)))) (and (=> (and (not x912) (and (= x2063 (= x128 255)) (= (x312 255 x3558) x1339) (= (+ 1 x1724) x3558) (= x2643 (x2824 x867)) (= (x1736 64 x1724 100) x867) (= (x312 255 x3558) x128))) (and (=> (and (and (= (+ x128 1) x2742) (= (x312 255 x2742) x210) (= x1016 (= x1901 255)) (= (x2824 x1164) x449) (= x1164 (x1736 64 x128 100)) (= x1901 (x312 255 x2742))) (not x2063)) (and (=> (and (and (= (x312 255 x2418) x1534) (= x1100 (= x2371 255)) (= x2371 (x312 255 x2418)) (= (x1736 64 x1901 100) x2391) (= x1381 (x2824 x2391)) (= x2418 (+ x1901 1))) (not x1016)) (and (=> (and (and (= (x1736 64 x2371 100) x1523) (= (x2824 x1523) x793) (= (= x3518 255) x951) (= (+ x2371 1) x3017) (= x1019 (x312 255 x3017)) (= x3518 (x312 255 x3017))) (not x1100)) (and (=> x951 x1081) (=> (and (not x951) (and (= x3470 (x312 255 x3595)) (= x3583 (x2824 x1751)) (= x3595 (+ x3518 1)) (= (= 255 x3470) x781) (= (x312 255 x3595) x2288) (= (x1736 64 x3518 100) x1751))) (and (=> x781 x3288) (=> (and (not x781) (and (= (= x2525 255) x3578) (= (x312 255 x3151) x2883) (= x3151 (+ 1 x3470)) (= x427 (x1736 64 x3470 100)) (= x2525 (x312 255 x3151)) (= x1292 (x2824 x427)))) (and (=> (and x3578 (and (= x474 true) (= x3378 36) (= false x2047))) x2979) (=> (and (and (= x1784 (x2824 x15)) (= x3658 (x312 255 x2338)) (= (x1736 64 x2525 100) x15) (= x2338 (+ 1 x2525)) (= (= 255 x3683) x1259) (= x3683 (x312 255 x2338))) (not x3578)) (and (=> (and (and (= x2168 (x3143 (+ 32 x1541))) (= x1308 (x1736 64 x3683 100)) (not (= x473 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x2127 (- x2999 32)) x679) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3143 (+ 32 x3486)) x2066) (= (< x1310 x243) x2573) (= (x3143 (+ 32 x1375)) x1345) (= x3758 (x3143 (+ x2168 32))) (= (x3143 (+ x2687 32)) x1375) (= (x312 255 x3745) x1195) (= x3044 (x312 255 x3745)) (= (x2824 x1308) x203) (= x915 (x3143 (+ x3758 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x473) (= x2687 (x3143 (+ x3521 32))) (= (x3143 (+ 32 x2066)) x3521) (< x473 x2013) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x473)) (= (x2127 (- x2013 x473)) x2999) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x473)) (= x3486 (x3143 (+ 32 x915))) (= x2013 (x3143 (+ x1345 32))) (= x2059 0) (= x1310 (+ x243 31)) (= (x3143 (+ 32 x473)) x1541) (= (+ x3683 1) x3745)) (not x1259)) (and (=> (and (not x2573) (= x3090 (< x1310 x243))) (and (=> (and (and (= (x2538 x473) x3582) (= x836 (< x3582 x243))) (not x3090)) (and (=> (and (not x836) (= x1720 (= x243 0))) (and (=> (and x1720 (and (= x490 x3701) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3147 x2013) (not (= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2013)) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2013) (not (= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x2013 x3701) (= (x3143 (+ 32 x2013)) x3701))) x2994) (=> (and (not x1720) (and (= x2467 (x3143 (+ x314 x473))) (= (x3143 (+ x2467 x1683)) x970) (= (x3143 (+ x348 x243)) x2600) (= x264 (x3143 (+ x314 x2013))) (= (* (ite (= x314 0) 1 0) 32) x1683) (or (= 0 x1794) (= 32 x1794)) (= (* 32 (ite (= 0 x314) 1 0)) x1794) (= (x3143 (+ x264 x1794)) x348) (or (= 32 x1683) (= 0 x1683)) (= x1476 (> x2600 x348)) (= x314 (x312 31 x243)))) (and (=> x1476 x3257) (=> (and (not x1476) (= x348 x2809)) x3099))))) (=> (and (and (= (x2127 (- x3527 x2013)) x500) (= x3527 (x3143 (+ x2755 32))) (= (x3143 (+ x1599 32)) x2755) (= x500 x3378) (= x3494 true) (= (x3143 (+ 4 x2013)) x1367) (= x1913 false) (= x1599 (x3143 (+ x1367 32)))) x836) x2979))) (=> (and (and (= x2532 (x3143 (+ 4 x2013))) (= x3378 x1200) (= x2747 (x3143 (+ x3633 32))) (= x3633 (x3143 (+ x2532 32))) (= (x3143 (+ x2747 32)) x1451) (= x1200 (x2127 (- x1451 x2013))) (= x2953 false) (= x824 true)) x3090) x2979))) (=> x2573 x1639))) (=> (and x1259 (and (= x514 false) (= true x3671) (= 36 x3378))) x2979))))))))) (=> x1100 x817))) (=> x1016 x2959))) (=> x2063 x2139))) (=> x912 x1203))) (=> x2842 x1916))) (=> x1558 x1639))) (=> x485 x1639))) (=> x3074 x1215)))))
(assert (= 64 (x2399 (x1736 64 x462 100))))
(assert (x1594 x3224))
(assert (x3740 x232))
(assert (x1594 x2403))
(assert (= (x2399 (x1736 64 x1692 36)) 64))
(assert (not (x1103 (x1736 x1758 x1288 x2582))))
(assert (= (x1067 (x1736 64 x3057 36)) 36))
(assert (x1594 x1896))
(assert (= (x2399 (x1736 64 x3446 36)) 64))
(assert (x1594 x2581))
(assert (x1594 x2957))
(assert (= x1215 (=> (and (= x2503 false) (= x3378 36) (= x62 true)) x2979)))
(assert (x2365 x3008))
(assert (x3740 x3258))
(assert (x1594 x3384))
(assert (x1594 x671))
(assert (= x1604 (x1067 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3))))
(assert (x1594 x2313))
(assert (=> (<= x3053 10000) (= (x1601 x3053) 0)))
(assert (= x1901 (x1069 (x1736 64 x1901 100))))
(assert (x1594 x3201))
(assert (= x2450 (=> (and (= x562 x3550) (= x190 x158)) x3100)))
(assert (x3740 x879))
(assert (< 10000 (x1736 64 x1439 10)))
(assert (x136 x2864 256))
(assert (x1594 x2199))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1849 100)))
(assert (x2365 x737))
(assert (x1594 x735))
(assert (x1594 x584))
(assert (x1594 x2555))
(assert (x804 x1973))
(assert (= x1049 (x1069 (x1736 64 x1049 36))))
(assert (x1594 x1700))
(assert (x1594 x2168))
(assert (=> (>= 10000 x443) (= 0 (x1601 x443))))
(assert (= x2028 (and (not x3434) x3770)))
(assert (= (x1736 64 x3303 100) (x1601 (x1736 64 x3303 100))))
(assert (= (x1601 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)) (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)))
(assert (x1594 x274))
(assert (x1594 x46))
(assert (= (x2902 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) x2040))
(assert (x1594 x560))
(assert (= (and (not x3666) x465) x3160))
(assert (x1594 x184))
(assert (= (x1601 1461501637330902918203684832716283019655932542975) 0))
(assert (=> (<= x3469 10000) (= 0 (x1601 x3469))))
(assert (= (x1069 (x1736 64 x428 100)) x428))
(assert (x136 x2596 256))
(assert (x1594 x1673))
(assert (= x1049 (x1069 (x1736 64 x1049 2))))
(assert (= (and x590 (not x2294)) x2704))
(assert (=> (<= x2793 10000) (= (x1601 x2793) 0)))
(assert (x1594 x2144))
(assert (=> (<= x1166 10000) (= (x1601 x1166) 0)))
(assert (x1103 1461501637330902918203684832716283019655932542975))
(assert (x1594 x2999))
(assert (< (x1736 64 x842 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1069 (x1736 64 x2199 100)) x2199))
(assert (x1594 x14))
(assert (x804 256))
(assert (x1594 x2776))
(assert (=> (>= 10000 x497) (= (x1601 x497) 0)))
(assert (= (x1601 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) (x1544 x2407 x3469 x440 x2964 x2533 x3572)))
(assert (x136 x3490 32))
(assert (= (and (not x1840) x676) x772))
(assert (= (and (not x912) x2162) x926))
(assert (x1594 x3357))
(assert (= (x1069 (x1736 64 x399 100)) x399))
(assert (x1594 x1982))
(assert (x1594 x2677))
(assert (x1594 x2497))
(assert (not (x1103 (x3512 x2210 x443 x2278 x1166))))
(assert (= (and x2681 (not x144)) x1003))
(assert (x1594 x1121))
(assert (x804 x2061))
(assert (x136 x243 32))
(assert (x2365 x1783))
(assert (= 0 (x1601 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x1594 x344))
(assert (x2365 x3063))
(assert (x1594 x3192))
(assert (x1594 x2935))
(assert (= (x843 (x1908 x1758 x2820 x2323 x1705 x3459)) x1705))
(assert (x1103 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x1594 x449))
(assert (> (x1736 x1758 x1288 x2582) 10000))
(assert (= x581 (and x3513 x3255)))
(assert (x1594 x2153))
(assert (x804 x2982))
(assert (x1594 x1454))
(assert (= (x1067 (x1736 64 x2264 36)) 36))
(assert (= (x1601 (x1736 64 x2665 100)) (x1736 64 x2665 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2839 36)))
(assert (x1594 x28))
(assert (< (x1736 64 x1800 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 x609 x3458 x730)))
(assert (x1594 x2137))
(assert (=> (<= x2613 10000) (= (x1601 x2613) 0)))
(assert (=> (<= x1408 10000) (= (x1601 x1408) 0)))
(assert (x1594 x3424))
(assert (x3740 x737))
(assert (= (=> (and (= x584 x3423) (= x2025 x3592) (= x852 x274) (= x814 x2232) (= x2559 x587) (= x1112 x1545) (= x666 x2416) (= x2970 x1619) (= x182 x3094) (= x1162 x2299)) x650) x1401))
(assert (x2631 x3334))
(assert (not (x1103 (x1736 64 x3683 100))))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1594 x704))
(assert (x1594 x2409))
(assert (= (x1067 (x1736 64 x1049 36)) 36))
(assert (< 10000 (x1736 64 x2302 100)))
(assert (x1594 x455))
(assert (= x1283 (or x2572 x3678)))
(assert (= (or x3767 x2548 x2697) x1543))
(assert (= x1429 (and x3363 x1927)))
(assert (= 64 (x2399 (x1736 64 x2131 36))))
(assert (x1594 x1565))
(assert (= x1351 (or x1904 x195)))
(assert (x1594 x2420))
(assert (=> (>= 10000 x384) (= (x1601 x384) 0)))
(assert (x1594 x3761))
(assert (= (x1601 (x1736 x1758 x1288 x2582)) (x1736 x1758 x1288 x2582)))
(assert (x1594 x1971))
(assert (= (x1067 (x1736 64 x3549 100)) 100))
(assert (x804 x3008))
(assert (= x3278 (and (not x962) x745)))
(assert (x1594 x3030))
(assert (x1594 x3488))
(assert (x1594 x1539))
(assert (x3740 x31))
(assert (=> (<= x3691 10000) (= (x1601 x3691) 0)))
(assert (< 10000 (x1736 64 x1800 100)))
(assert (=> (>= 10000 x2837) (= (x1601 x2837) 0)))
(assert (=> (<= x2577 10000) (= (x1601 x2577) 0)))
(assert (x1594 x1950))
(assert (= (and x166 x496) x2039))
(assert (x136 x2918 256))
(assert (x1594 x2030))
(assert (= 64 (x2399 (x1736 64 x2371 100))))
(assert (x136 x476 256))
(assert (x1594 x1758))
(assert (x1594 x2216))
(assert (x1594 x1200))
(assert (= (x2399 (x1736 64 x399 100)) 64))
(assert (= x1748 (and x836 x723)))
(assert (= (x1736 64 x2848 36) (x1601 (x1736 64 x2848 36))))
(assert (x1594 x1337))
(assert (= (x1067 (x1736 64 x1685 6)) 6))
(assert (= x3358 (and x2520 (not x2257))))
(assert (x1594 x3476))
(assert (x1594 x3753))
(assert (= (x843 (x1908 x2210 x3341 x3067 x3026 x1942)) x3026))
(assert (= (x1601 (x1736 64 x3057 36)) (x1736 64 x3057 36)))
(assert (= (=> (and (or (and (not x3429) (and (= x1448 x1147) (= x3507 x2422) (= x1510 x1007) (= x2358 x451) (= x1962 x1363) (= x323 x2886) (= x2137 x3301) (= x1307 x2976) (= x2153 x3016) (= x59 x39) (= x3161 x3480) (= x538 x2016) (= x1410 x1606) (= x307 x452))) (and (and (= x307 x452) (= x3360 (+ x292 x319)) (= x323 x2886) (>= x3360 0) (= x1147 x1448) (= x2358 x451) (= x3480 x3161) (<= x3360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x292 x319)) (= x3507 x2422) (= x3360 x2813) (= x1606 x1410) (= (x2692 x3771) x3348) (= x3016 x2153) (= x2016 x538) (= x319 (x1879 x2948)) (= (- x3348 x292) x41) (= x3301 x2137) (= x59 x39) (= x1007 x1510) (= x1363 x1962) (= x1307 x2976) (= (ite (= x1606 0) x2269 0) x292)) x3429)) (and (= x46 x2886) (= x538 x2324) (= x704 x39) (= x625 x3507) (= x2639 x452) (= x1606 x2774) (= x3480 x1190) (= x2358 x763) (= x783 x1510) (= x1246 x1962) (= (= 0 x1606) x3429) (= x2153 x2658) (= x1147 x2404) (= x2265 x1307) (= x1127 x2137))) x3144) x3544))
(assert (x1594 x2170))
(assert (x1103 18446744073709551615))
(assert (x1594 x3772))
(assert (x1594 x1301))
(assert (= 0 (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1594 x3069))
(assert (x1594 x2683))
(assert (= (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639903) 0))
(assert (x1594 x172))
(assert (x1594 x814))
(assert (x3740 x2858))
(assert (x1594 x2643))
(assert (x3740 x2758))
(assert (= (and (not x2241) x1457) x2423))
(assert (x2365 x3151))
(assert (x1594 x2049))
(assert (x1594 x537))
(assert (= x166 (and x50 (not x112))))
(assert (x1594 x2665))
(assert (x1594 x1538))
(assert (x1594 x1005))
(assert (= (x843 (x1544 x609 x515 x1745 x744 x2405 x1350)) x744))
(assert (x2365 x1475))
(assert (x1594 x1819))
(assert (= x467 (and (not x2544) x3508)))
(assert (x1103 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1594 x1317))
(assert (x1594 x3459))
(assert (= (x1870 (x1544 x609 x515 x1745 x744 x2405 x1350)) x2405))
(assert (not (x1103 (x1736 64 x2848 2))))
(assert (=> (>= 10000 x54) (= (x1601 x54) 0)))
(assert (x2365 x504))
(assert (= (and x2943 x30) x2359))
(assert (x1594 x577))
(assert (= (or x846 x1149) x3268))
(assert (x1103 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (x2365 x2912))
(assert (x1594 x647))
(assert (x136 x3745 256))
(assert (= x3365 (or (and x3711 (not x2158)) x2387)))
(assert (= (=> (and (<= x1450 606) (= x473 x1450) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2677) x1450) (<= 481 x1450) (= (+ 31 x2224) x2677)) x3415) x75))
(assert (< (x1736 64 x2371 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x745 (and (not x1981) x1140)))
(assert (= (x2399 (x1736 64 x1439 10)) 64))
(assert (x1594 x2373))
(assert (x1594 x294))
(assert (= (x1067 (x3512 x2210 x443 x2278 x1166)) x2278))
(assert (x1594 x3771))
(assert (= (x1067 (x1736 64 x131 36)) 36))
(assert (x804 x3390))
(assert (=> (<= x3496 10000) (= 0 (x1601 x3496))))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639584))
(assert (= (and (not x575) x1434) x26))
(assert (x804 x1071))
(assert (= (=> (= x3505 (= x123 0)) (and (=> (and (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3334) (and (< x3334 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3334)))) x2129) (>= x32 1) (= x32 (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x329)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x32) (= (x3143 (+ 31 x3334)) x329)) (not x3505)) (and (=> (and (and (= x3371 (x297 128)) (= x3550 x300) (= x190 x2344)) (not x2129)) x2450) (=> (and x2129 (and (= x1198 false) (= x3378 0) (= x3639 true))) x2979))) (=> (and x3505 (and (= true x2103) (= x3378 x3334) (= x3610 false))) x2979))) x1329))
(assert (= 0 (x1601 18446744073709551615)))
(assert (=> (>= 10000 x1585) (= 0 (x1601 x1585))))
(assert (= x3375 (and x2429 (not x2726))))
(assert (x1594 x3499))
(assert (x1594 x2481))
(assert (= x2252 (and x1330 x3271)))
(assert (= (and (not x1259) x3309) x2366))
(assert (x3740 x2183))
(assert (x1594 x271))
(assert (x1594 x3451))
(assert (= (x1601 (x1736 64 x1368 100)) (x1736 64 x1368 100)))
(assert (< (x1736 64 x1561 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1601 274184521717934524641157099916833587230) 0))
(assert (= x1382 (x1069 (x1185 x2210 x1382))))
(assert (= (x1067 (x3512 x1758 x1741 x982 x2171)) x982))
(assert (x1594 x3281))
(assert (x1594 x3487))
(assert (=> (>= 10000 x3014) (= 0 (x1601 x3014))))
(assert (=> (>= 10000 x1483) (= 0 (x1601 x1483))))
(assert (x136 x2409 256))
(assert (x1594 x1116))
(assert (= (x1185 x2210 x1382) (x1601 (x1185 x2210 x1382))))
(assert (x1594 x157))
(assert (x1594 x2678))
(assert (=> (>= 10000 x3067) (= (x1601 x3067) 0)))
(assert (x804 x2864))
(assert (x1594 x86))
(assert (=> (<= x972 10000) (= 0 (x1601 x972))))
(assert (x1594 x3320))
(assert (x1594 x2208))
(assert (x1594 x1823))
(assert (x1594 x2247))
(assert (x1594 x574))
(assert (x3740 x2561))
(assert (x1594 x1204))
(assert (x1594 x2278))
(assert (x1594 x3024))
(assert (x1594 x2445))
(assert (= (x2902 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) x2202))
(assert (x1594 x3390))
(assert (= (and x1964 x1543) x2019))
(assert (=> (<= x1901 10000) (= 0 (x1601 x1901))))
(assert (x1594 x3291))
(assert (x1594 x1814))
(assert (x3740 x2918))
(assert (= (x1601 (x1736 64 x1595 100)) (x1736 64 x1595 100)))
(assert (x1594 x2297))
(assert (< (x1736 64 x2165 (ite (= x2647 0) x2018 (ite (<= x2647 32) x921 (ite (<= x2647 64) x1385 (ite (<= x2647 96) x889 (ite (>= 128 x2647) x337 (ite (<= x2647 160) x1348 (ite (<= x2647 192) x2720 (ite (>= 224 x2647) x1996 x3743))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x598))
(assert (= x377 (and x1362 (not x1770))))
(assert (= (x1069 (x3512 x1758 x1741 x982 x2171)) x1741))
(assert (x3740 x2311))
(assert (= x2432 (and (not x1647) x565)))
(assert (x1594 x3341))
(assert (= (=> (and (or (not x1330) x1330) (= x1330 (= 0 x2349))) x1486) x4))
(assert (x1594 x307))
(assert (x3740 x3558))
(assert (= x1561 (x1069 (x1736 64 x1561 36))))
(assert (= (and (not x2695) x1504) x3060))
(assert (x1594 x1653))
(assert (x1594 x1076))
(assert (= (x1067 (x1736 64 x3381 100)) 100))
(assert (x1594 x3396))
(assert (> (x1736 64 x2231 12) 10000))
(assert (x1594 x1602))
(assert (not (x1103 (x1736 64 x131 36))))
(assert (x1594 x2951))
(assert (x136 x1806 256))
(assert (=> (<= x2072 10000) (= 0 (x1601 x2072))))
(assert (x1594 x103))
(assert (x1594 x3293))
(assert (x1594 x2737))
(assert (> (x1736 64 x2976 36) 10000))
(assert (< (x3512 x609 x2437 x726 x1997) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x876))
(assert (x1594 x2758))
(assert (=> (<= x1758 10000) (= 0 (x1601 x1758))))
(assert (= x1864 (=> (and (= x2105 36) (= x618 true) (= x2998 false)) x3517)))
(assert (= (x1185 x609 x769) (x1601 (x1185 x609 x769))))
(assert (= (=> (and (and (and (and (= false x3064) (= (x2073 0) x3764) (<= x2165 18446744073709551615) (= x999 x1118) (= x2165 x1388) (= x219 (x2073 36)) (<= x999 x546) (= x2792 x3091) (<= x219 18446744073709551615) (= x2165 (x2073 68)) (= x785 x3764) (<= x3091 18446744073709551615) (= (x2073 4) x2458) (= x3091 (x2073 100)) (= x739 x2458) (= x219 x2555) (<= x2458 65535)) (and (and (and (and (and (and (and (or (and (not x3422) (= x1588 (ite x3422 1 0))) (and x3422 (= (ite (not (= x2948 x954)) 1 0) x1588))) (and (= x2307 (+ x1750 4)) (= 0 x3657) x1159 (= (x1185 x2647 x284) x921) (= (x1609 128) x1299) (= x2333 (x1736 64 x1439 10)) (= (x2127 (- (mod (+ 64 x2307) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1750)) x76) (= x1167 53968831973089624780961702553170747426560148566936995398294956610382735605760) (= x3014 (x1609 288)) (= (x1609 320) x904) (= (x1609 160) x3756) (= (x1609 128) x2714) (= x2493 (x432 (+ x1793 31) 32)) (= x3422 false) (= (x1609 160) x2431) (= (x1544 x2647 x350 x3756 x48 x864 x1563) x1348) (= x1385 (x1736 x2647 x1474 x2342)) (>= x1101 32) (= x1474 (x1609 128)) (= x2182 x2167) (= (x3254 x1813) x1439) (= (x1858 x2948) x306) (= (x1609 288) x931) (= x3759 (+ 160 x234)) (= x1585 (x1609 160)) (= x1750 (+ x191 x3759 32)) (<= x1101 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1609 224) x864) (= x2182 x1439) (= x3417 (+ x1793 x1813)) (= (x1609 128) x3684) x875 (= x2833 (+ 32 x2307)) (= x2686 (x1609 224)) (= (x3512 x2647 x2752 x986 x1472) x889) (= (x1609 224) x2475) (= x1597 (x1609 224)) (= 0 x1376) (= (x1609 256) x1563) (= x1221 (x1609 192)) (= false x1105) (= x2577 (x1609 256)) (= (x1609 192) x3114) (= (x1609 160) x2342) (= (x432 (+ x3751 31) 32) x2900) (= x1472 (x1609 192)) (= 68 x1589) (= x2312 false) (= x48 (x1609 192)) (= (x1609 128) x2752) (= x1996 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) (= 68 x76) (= (x1609 128) x350) (= (x1609 192) x2012) (>= x306 1) (<= x2261 127) (= x747 (x1736 64 x2165 (ite (= 0 x2647) x2018 (ite (>= 32 x2647) x921 (ite (<= x2647 64) x1385 (ite (>= 96 x2647) x889 (ite (<= x2647 128) x337 (ite (<= x2647 160) x1348 (ite (>= 192 x2647) x2720 (ite (>= 224 x2647) x1996 x3743)))))))))) (= x337 (x1908 x2647 x3684 x734 x3114 x2475)) (= (x1609 256) x103) (>= 127 x2261) (= (x1609 160) x734) (= 128 x2325) (= (* x2493 32) x191) (= x139 2001815235) (= (* x2900 32) x234) (< x3759 x1750) (= x2887 (+ 160 x3751)) (= x1101 (x3254 x3759)) (= x284 (x1609 128)) (= 2 x1618) (= (= x2741 1) x1159) (= (+ 32 x3759) x1813) (= x2018 (x3205 0)) (= (x1609 160) x986) (= (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014) x2720))) (and (= (x3205 0) x2029) x2466 (= (x1609 160) x1604) (= (x1609 192) x165) (= (x1609 128) x3607) (= (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3) x81) (= x2773 (x1609 128)) (= (<= x2647 224) x875) (= (x1609 128) x2124) (= (x1609 160) x3307) (= (x1609 256) x3224) (= (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053) x3155) (= (x1609 160) x2613) (= x2212 (x1609 192)) (= x2216 (x1609 128)) (= x2533 (x1609 224)) (= x800 (x1609 160)) (= (x1185 x2407 x2321) x3526) (= x907 (x1609 128)) (= (x1609 128) x2321) (= (x1908 x2407 x2216 x3307 x2212 x3675) x1413) (= x3 (x1609 320)) (= x2964 (x1609 192)) (= x3053 (x1609 288)) (= (ite (= x2407 0) x2029 (ite (<= x2407 32) x3526 (ite (<= x2407 64) x3661 (ite (<= x2407 96) x1006 (ite (<= x2407 128) x1413 (ite (<= x2407 160) x1854 (ite (>= 192 x2407) x3155 (ite (<= x2407 224) x81 x2837)))))))) x108) (= (x1609 224) x3675) (= x3661 (x1736 x2407 x2773 x2613)) (= (x1609 256) x3572) (= (x1609 224) x2793) (= x3765 (x1609 224)) (= (x3512 x2407 x3607 x800 x55) x1006) (= (x1609 192) x55) (= x3469 (x1609 128)) (= x635 (x1609 160)) (= x547 (x1609 288)) (= (x1609 160) x440) (= x1231 (x1609 192)) (= x1854 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) (= x1250 (x1609 256)))) (and (= (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804) x2580) (= (x1544 x1758 x1403 x3597 x359 x130 x2512) x3015) (= x1985 (x1908 x1758 x2820 x2323 x1705 x3459)) (= x2820 (x2821 128)) (= x51 x2453) (>= x51 1) (= (x2821 128) x1288) (= (x2821 224) x3459) (= (x2821 128) x1741) x1174 (= x2171 (x2821 192)) (= (x2821 192) x1705) (= x974 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) (= x2647 (x2127 (- (mod (+ 32 x170) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128))) (= (x2821 320) x984) (= x645 (x3512 x1758 x1741 x982 x2171)) (= x229 (x2821 224)) (= x3068 (x3205 0)) (= (ite (= x1758 0) x3068 (ite (>= 32 x1758) x2877 (ite (>= 64 x1758) x3463 (ite (>= 96 x1758) x645 (ite (>= 128 x1758) x1985 (ite (<= x1758 160) x3015 (ite (<= x1758 192) x2580 (ite (>= 224 x1758) x974 x3613)))))))) x51) (= x2430 (x2821 256)) (= x2407 (x2127 (- x2647 32))) (= x170 (+ 128 x3751)) (= (+ 128 x3751) x1046) (= (x1185 x1758 x14) x2877) (= (x2821 160) x982) (= (x2821 160) x3597) (= x2750 (x2821 192)) (= (x2821 160) x3088) (= x1249 (x2821 128)) (= (x1736 64 x2458 7) x3776) (= (x1736 x1758 x1288 x2582) x3463) (= (x2821 160) x2323) (= x1804 (x2821 288)) (= (x2821 288) x3396) (= (x2821 128) x2247) (= (x2821 160) x2582) (= (>= 224 x2407) x2466) (= (x2821 128) x14) (= (x2821 192) x359) (= x130 (x2821 224)) (= (x2821 224) x1022) (= (x2821 160) x2619) (= x3097 (x2821 192)) (= (x2821 256) x2512) (= (x2821 128) x1403) (= (x2821 256) x266))) (and (= (x1241 256) x3209) (= x2952 (x1736 x609 x3458 x730)) (= (x1241 128) x412) (= x1758 (x2127 (- x2905 128))) (= (x1241 160) x1745) (= x819 (x1241 160)) (= x384 (x1241 192)) (= (<= x1758 224) x1174) (= x2905 (+ 128 x1793)) (= (x1241 224) x213) (= x1445 (x1241 320)) (= (x1908 x609 x3744 x1987 x54 x213) x2468) (= (x1241 128) x3744) (= x488 (x1241 288)) (= x54 (x1241 192)) (= (x2392 x1056) x2453) (= (x1241 128) x2437) (= (x1241 160) x726) (<= 1 x2453) x3601 (= x2785 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) (= (x1241 256) x2515) (= x730 (x1241 160)) (= (x1241 128) x769) (= x1987 (x1241 160)) (= (x1241 288) x750) (= x1797 (x1241 224)) (= (x1544 x609 x515 x1745 x744 x2405 x1350) x1672) (= (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445) x2725) (= (x1241 192) x2788) (= x1084 (x1241 128)) (= (x3512 x609 x2437 x726 x1997) x614) (= (x1241 224) x2566) (= (x1241 192) x1997) (= x1056 (x1736 64 x2165 (ite (>= 32 x609) x2444 (ite (<= x609 64) x2952 (ite (>= 96 x609) x614 (ite (>= 128 x609) x2468 (ite (<= x609 160) x1672 (ite (<= x609 192) x2785 (ite (>= 224 x609) x2725 x2330))))))))) (= (x1241 256) x1350) (= x3458 (x1241 128)) (= x744 (x1241 192)) (= x515 (x1241 128)) (= (x1185 x609 x769) x2444) (= (x1241 224) x2405) (= x1754 (x1241 160)))) (and (= (<= x609 224) x3601) (= (x1241 128) x2928) (= x552 (x1241 256)) (= (x1241 224) x198) (= x688 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)) (= (x1241 224) x1942) (= x1166 (x1241 192)) (= (x1241 224) x1702) (= x435 (x1241 320)) (= (x1241 192) x1941) (= (x1241 256) x2040) (= x2134 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) (= (x1908 x2210 x3341 x3067 x3026 x1942) x1689) (= (x1241 128) x678) (= (x1241 256) x2202) (= (x1241 128) x2072) (= x443 (x1241 128)) (= x3026 (x1241 192)) (= x1738 (x3205 0)) (= (x1979 x2210 x2716 x1829 x972 x354 x2040 x487) x1509) (= (x1241 192) x972) (= x3067 (x1241 160)) (= x2802 (x1241 288)) (= (x1241 128) x3341) (= x1550 (ite (= 0 x2210) x1738 (ite (>= 32 x2210) x230 (ite (<= x2210 64) x2315 (ite (<= x2210 96) x3035 (ite (>= 128 x2210) x1689 (ite (<= x2210 160) x2134 (ite (>= 192 x2210) x1509 (ite (<= x2210 224) x688 x2104))))))))) (= x354 (x1241 224)) (= (x1241 160) x2278) (= (x1241 160) x3153) x1708 (= (x1241 160) x2420) (= (x1736 x2210 x2072 x2420) x2315) (= (x3512 x2210 x443 x2278 x1166) x3035) (= (x1241 128) x2716) (= (x1185 x2210 x1382) x230) (= x1382 (x1241 128)) (= x1900 (x1241 160)) (= (x1241 288) x487) (= x985 (x1241 192)) (= x1829 (x1241 160)))) (and (= x3751 (x670 x3233)) (= (+ x3091 4) x2735) (<= 1 x1643) (= x1575 (+ 128 x3751)) (= x3482 false) (<= x2929 127) (= (x670 x2735) x1793) (<= x3751 18446744073709551615) (= (x825 x362) x3353) (= (x1736 64 x2458 7) x2238) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1937 x2581)) (= (+ 4 x219) x3233) (= false x1389) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2605) (not (> x2004 x2027)) (= x1202 (+ x2951 x3751)) (= x1708 (<= x2210 224)) (>= 18446744073709551615 x1793) (= (- x609 32) x2210) (< x2449 x2027) (= x3731 x1388) (= x609 (- x1575 96)) (= (+ 32 x2735) x2462) (= x2581 (x2092 x2948)) (= x2605 (+ x2581 x1937)) (>= x2605 0) (not (> x1202 x2027)) (= (+ 128 x3751) x1265) (= x1643 (x1858 x2948)) (<= x2929 127) (= x2004 (+ x2462 x1793)) (= x3076 x739) (> x2027 x3753) (= x3122 x362) (= (+ x3233 31) x3753) (= x1197 x2605) (= (- x3353 x1937) x3570) (= (+ 31 x2735) x2449) (= 3521034783 x1104) (= (+ x3233 32) x2951))) (= x1118 x1937))) (and (= x546 (x825 x2530)) (= x3122 x2530))) (and (>= x627 0) (= (x1858 x2948) x765) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2621) (= x2819 false) (<= x2440 1461501637330902918203684832716283019655932542975) (<= 0 x3000) (>= 1461501637330902918203684832716283019655932542975 x2875) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2027) (= false x685) (= x919 (> (x1858 x3680) 0)) (<= 1 x765) (<= x1219 4294967295) (= x525 4) x919 (>= x2875 1) (>= 1461501637330902918203684832716283019655932542975 x954) (= x2303 x954) (<= x1118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3727 2376452955) (<= x18 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2057 0) (>= x2440 0) (= 4 x930) (= x2948 x489) (>= 1461501637330902918203684832716283019655932542975 x627) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3000) (= x3484 false) (>= x1826 0) (>= x3680 1) x1641 (not (= x2875 x2948)) (<= x3680 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2057) (= false x3119) (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2041 (>= x413 0) (<= 1 x1117) (= x3467 false) (= (> (x1858 x2948) 0) x1641) (<= x2732 1461501637330902918203684832716283019655932542975) (<= 1 x2948) (<= x1188 127) (>= 1461501637330902918203684832716283019655932542975 x1654) (= true x3734) (= x2948 x1117) (not (= x2948 x3680)) (= false x2592) x3708 (>= 1461501637330902918203684832716283019655932542975 x3122) (<= x1379 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1853) (<= 0 x2621) (<= 0 x1219) (<= 0 x3122) (>= x2027 196) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1826) (<= 1 x1379) (<= 0 x2732) (<= 1 x1654) (not (= x1379 x2948)) (>= x1118 0) (= x2875 x1654) (not (= x1379 x2875)) (= false x1956) (= (> (x1858 x2875) 0) x2041) (= (> (x1858 x1379) 0) x3708) (not (= x2875 x3680)) (= x2816 false) (= x281 false) (= x2228 3521034783) (<= x1188 127) (<= x2948 1461501637330902918203684832716283019655932542975) (>= x18 0) (>= x1853 0) (not (= x3680 x1379)) (<= x1117 1461501637330902918203684832716283019655932542975))) x1952) x2398))
(assert (x1594 x3017))
(assert (x1594 x769))
(assert (= (and x723 (not x836)) x1063))
(assert (not (x1103 (x1736 64 x462 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x900 36)))
(assert (< (x1736 64 x1691 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x3740 x423))
(assert (= (x1067 (x1736 64 x1595 100)) 100))
(assert (x2631 x2996))
(assert (x136 x3558 256))
(assert (x1594 x2265))
(assert (x1594 x1345))
(assert (x1594 x1941))
(assert (= (or (and x615 x983) (and x141 x324)) x639))
(assert (= x3638 (and x3333 x1284)))
(assert (= (x1601 (x1736 64 x399 100)) (x1736 64 x399 100)))
(assert (x2365 x1806))
(assert (x804 x2576))
(assert (x1594 x2126))
(assert (= (x2399 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)) x2210))
(assert (= (x1067 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) x2431))
(assert (x1594 x199))
(assert (x1594 x2514))
(assert (= x612 (and x2417 (not x869))))
(assert (< 10000 (x1736 x2210 x2072 x2420)))
(assert (= (=> (and (= x2724 true) (= x2890 false) (= 36 x2105)) x3517) x3655))
(assert (x2365 x239))
(assert (x1594 x119))
(assert (x1594 x3490))
(assert (x1594 x2059))
(assert (= 100 (x1067 (x1736 64 x399 100))))
(assert (x1594 x1002))
(assert (x1594 x399))
(assert (x1594 x1252))
(assert (x1594 x3691))
(assert (= 0 (x1601 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (x1594 x3726))
(assert (x1594 x890))
(assert (x1594 x2212))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3549 100)))
(assert (x1594 x1177))
(assert (x2365 x3718))
(assert (= 7 (x1067 (x1736 64 x2458 7))))
(assert (x2631 x2360))
(assert (x136 x960 256))
(assert (= x3057 (x1069 (x1736 64 x3057 36))))
(assert (x1594 x1945))
(assert (= (x1067 (x1736 64 x1049 2)) 2))
(assert (x3740 x2551))
(assert (not (x1103 (x1736 x2210 x2072 x2420))))
(assert (=> (>= 10000 x2458) (= 0 (x1601 x2458))))
(assert (x1594 x301))
(assert (x3740 x243))
(assert (x1594 x1619))
(assert (x136 x1580 256))
(assert (x1594 x2612))
(assert (= (x1870 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445)) x1797))
(assert (x1594 x473))
(assert (x1594 x599))
(assert (= x2911 (and x590 x2294)))
(assert (= x2212 (x843 (x1908 x2407 x2216 x3307 x2212 x3675))))
(assert (not (x1103 (x1736 64 x3381 100))))
(assert (x804 x1728))
(assert (x1594 x2923))
(assert (x1594 x59))
(assert (x1594 x1793))
(assert (= (and (not x1752) x1272) x2595))
(assert (x1594 x1491))
(assert (= (x1069 (x1736 64 x2371 100)) x2371))
(assert (x1594 x3145))
(assert (= (or x43 x291) x3022))
(assert (x1594 x2981))
(assert (x2365 x343))
(assert (x3740 x2864))
(assert (x804 x2858))
(assert (x804 x2053))
(assert (=> (<= x2773 10000) (= (x1601 x2773) 0)))
(assert (= x443 (x1069 (x3512 x2210 x443 x2278 x1166))))
(assert (= (=> (= (= x1206 0) x3366) (and (=> (and (and (= x2384 x88) (= x134 x2670) (= x961 x3049) (= x82 x2680) (= x2995 x759) (= x1466 x438) (= x501 x2095) (= x2060 x3344) (= x3477 x2510) (= x3755 x2678)) (not x3366)) x3713) (=> (and x3366 (and (= x2105 x1005) (= false x2370) (= true x2865))) x3517))) x2079))
(assert (not (x1103 (x1736 64 x3518 100))))
(assert (x1594 x3712))
(assert (x136 x3008 256))
(assert (x1594 x596))
(assert (x1594 x666))
(assert (not (x1103 (x1736 64 x2302 100))))
(assert (x1594 x538))
(assert (=> (>= 10000 x2750) (= (x1601 x2750) 0)))
(assert (x1594 x3292))
(assert (= (x1736 64 x2413 100) (x1601 (x1736 64 x2413 100))))
(assert (x1594 x1038))
(assert (x1594 x2559))
(assert (x1594 x2040))
(assert (x2365 x2311))
(assert (x1103 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (< 10000 (x1736 64 x1408 100)))
(assert (= (x2399 (x1736 64 x131 36)) 64))
(assert (x1594 x2848))
(assert (=> (>= 10000 x362) (= 0 (x1601 x362))))
(assert (= x2964 (x843 (x1544 x2407 x3469 x440 x2964 x2533 x3572))))
(assert (= x3363 (and x2502 (not x1481))))
(assert (x3740 x2505))
(assert (= (x1069 (x1736 64 x2848 36)) x2848))
(assert (x1594 x3161))
(assert (x1594 x3233))
(assert (x1594 x2942))
(assert (= (x1069 (x1736 64 x3733 36)) x3733))
(assert (x1594 x2833))
(assert (= x1156 (and x1817 (not x2380))))
(assert (= (=> (and (= (= 0 x3218) x1820) (or (and x1820 (and (= x1114 (x138 x3301)) (= x2347 x357) (= x1673 x3218) (<= x250 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x250 x2838) (= x782 (x1039 x1379)) (= (- x1114 x3637) x25) (>= x250 0) (= x3637 (ite (= x3218 0) x1787 0)) (= x250 (+ x3637 x782)) (< (+ x782 x3637) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3404 x1485))) (and (and (= x1673 x3218) (= x1485 x3404) (= x2347 x357)) (not x1820)))) x3306) x2553))
(assert (not (x1103 (x3512 x1758 x1741 x982 x2171))))
(assert (< 10000 (x1736 64 x2371 100)))
(assert (x1594 x1049))
(assert (= x412 (x1069 (x1979 x609 x412 x1754 x384 x2566 x3209 x488))))
(assert (not (x1103 (x1544 x1758 x1403 x3597 x359 x130 x2512))))
(assert (= x3715 (or (and x144 x2681) (and x745 x962))))
(assert (= x1984 (and (not x711) x1432)))
(assert (=> (<= x48 10000) (= (x1601 x48) 0)))
(assert (x2365 x1121))
(assert (= 0 (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (=> (>= 10000 x750) (= 0 (x1601 x750))))
(assert (=> (<= x907 10000) (= 0 (x1601 x907))))
(assert (=> (<= x428 10000) (= 0 (x1601 x428))))
(assert (= x466 (x1069 (x1736 64 x466 12))))
(assert (x1594 x229))
(assert (x1594 x2524))
(assert (x1594 x56))
(assert (> (x3512 x2210 x443 x2278 x1166) 10000))
(assert (x1594 x2910))
(assert (x1594 x3629))
(assert (= (x1601 53968831973089624780961702553170747426560148566936995398294956610382735605760) 0))
(assert (= (x2399 (x1736 64 x2165 (ite (>= 32 x609) x2444 (ite (>= 64 x609) x2952 (ite (>= 96 x609) x614 (ite (>= 128 x609) x2468 (ite (>= 160 x609) x1672 (ite (>= 192 x609) x2785 (ite (>= 224 x609) x2725 x2330))))))))) 64))
(assert (x136 x1930 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2966))
(assert (= x3678 (or x335 x3346)))
(assert (x1594 x2416))
(assert (x1594 x227))
(assert (x1594 x2615))
(assert (not (x1103 (x3512 x2407 x3607 x800 x55))))
(assert (x2631 x537))
(assert (= x2916 (and x3362 x845)))
(assert (x1594 x3142))
(assert (= (x2399 (x1736 64 x1685 6)) 64))
(assert (=> (<= x3675 10000) (= (x1601 x3675) 0)))
(assert (x3740 x1806))
(assert (x1594 x1903))
(assert (= (x2399 (x1908 x2647 x3684 x734 x3114 x2475)) x2647))
(assert (x2365 x3500))
(assert (x1594 x1031))
(assert (x1594 x1807))
(assert (not (x1103 (x1908 x1758 x2820 x2323 x1705 x3459))))
(assert (= x1712 (and x1321 x3286)))
(assert (x1594 x345))
(assert (x1594 x770))
(assert (= x2879 (or (and x3075 x3769) (and x3662 x882))))
(assert (x1594 x438))
(assert (x1594 x3148))
(assert (= 64 (x2399 (x1736 64 x900 36))))
(assert (> (x1736 64 x1676 100) 10000))
(assert (x1594 x236))
(assert (= x1758 (x2399 (x1544 x1758 x1403 x3597 x359 x130 x2512))))
(assert (x1594 x1784))
(assert (x136 x1711 300))
(assert (x1880 x2054))
(assert (= (x1069 (x1736 64 x1692 36)) x1692))
(assert (x1594 x1691))
(assert (x1594 x3751))
(assert (x1594 x2467))
(assert (x1594 x1517))
(assert (=> (<= x819 10000) (= 0 (x1601 x819))))
(assert (x1594 x2920))
(assert (< (x3512 x2210 x443 x2278 x1166) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= x1964 (= 0 x1929)) (and (=> (and (and (>= x233 1) (= x2571 (or (and (> 32 x2641) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2641) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2641))) (= x1930 (x3143 (+ x2641 31))) (= x233 (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1930)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x233)) (not x1964)) (and (=> (and (and (= x3402 x1545) (= x274 x3011) (= x2698 x2559) (= x584 x2081) (= x2025 x1301) (= x1162 x1059) (= x3629 x1619) (= x215 x3094) (= x2416 x1453) (= (x1240 128) x1018) (= x2232 x1158)) (not x2571)) x650) (=> (and x2571 (and (= x2105 0) (= true x2682) (= x2452 false))) x3517))) (=> (and (and (= false x775) (= x2105 x2641) (= x839 true)) x1964) x3517))) x2032))
(assert (= (x1067 (x1736 64 x3618 100)) 100))
(assert (= (x1601 (x1908 x2647 x3684 x734 x3114 x2475)) (x1908 x2647 x3684 x734 x3114 x2475)))
(assert (x1594 x245))
(assert (> (x1736 64 x1691 100) 10000))
(assert (= x774 (and x2225 (not x2174))))
(assert (= (x1736 64 x3518 100) (x1601 (x1736 64 x3518 100))))
(assert (x136 x3556 256))
(assert (= x2647 (x2399 (x1185 x2647 x284))))
(assert (x1594 x885))
(assert (x1594 x730))
(assert (not (x1103 (x1736 64 x2937 36))))
(assert (x1594 x2437))
(assert (x1594 x1431))
(assert (= (=> (and (= x574 x3551) (= 0 x1482) (= x954 x3089)) x2203) x1697))
(assert (=> (<= x3607 10000) (= (x1601 x3607) 0)))
(assert (x804 x579))
(assert (x1594 x2899))
(assert (x1594 x1606))
(assert (=> (>= 10000 x2848) (= (x1601 x2848) 0)))
(assert (x1594 x2282))
(assert (x1594 x2716))
(assert (x1594 x782))
(assert (=> (>= 10000 x3683) (= 0 (x1601 x3683))))
(assert (x1594 x2536))
(assert (x804 x2497))
(assert (= (and x2174 x2225) x2807))
(assert (= x3492 (and x1655 (not x3228))))
(assert (x3740 x1475))
(assert (x1594 x3590))
(assert (x1594 x3250))
(assert (x3740 x2148))
(assert (x1594 x2414))
(assert (x136 x3258 256))
(assert (=> (<= x2582 10000) (= (x1601 x2582) 0)))
(assert (x1594 x3649))
(assert (x2631 x2105))
(assert (= (x2399 (x1736 64 x466 12)) 64))
(assert (x1594 x2016))
(assert (x1594 x123))
(assert (x2631 x2641))
(assert (< (x1736 64 x197 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1269))
(assert (=> (>= 10000 x3057) (= (x1601 x3057) 0)))
(assert (= x3706 (and x305 (not x285))))
(assert (x1594 x457))
(assert (x1594 x2469))
(assert (=> (>= 10000 x359) (= 0 (x1601 x359))))
(assert (x1594 x1637))
(assert (x1594 x203))
(assert (= (x1601 (x1736 64 x426 6)) (x1736 64 x426 6)))
(assert (= x3051 (and (not x1243) x1959)))
(assert (x1594 x654))
(assert (x1594 x1037))
(assert (< (x1736 64 x2665 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x1594 x1324))
(assert (x2365 x2418))
(assert (x1594 x501))
(assert (x1594 x2407))
(assert (x136 x2997 256))
(assert (=> (>= 10000 x2131) (= 0 (x1601 x2131))))
(assert (x2631 x1251))
(assert (x2365 x237))
(assert (= (x1069 (x1736 64 x2264 36)) x2264))
(assert (= (x1069 (x1736 64 x2525 100)) x2525))
(assert (= (x1067 (x1736 64 x3683 100)) 100))
(assert (x1594 x2487))
(assert (x3740 x1121))
(assert (not (x1103 (x3205 0))))
(assert (= (x1069 (x1736 64 x2628 11)) x2628))
(assert (= x1272 (and x2055 (not x444))))
(assert (x1594 x129))
(assert (= (=> (and (= x1034 x1545) (= x2232 x3166) (= x1226 x1162) (= x2764 x274) (= x3503 x584) (= x1278 x3094) (= x1115 x2559) (= x876 x2416) (= x2025 x1809) (= x1619 x3149)) x3418) x650))
(assert (x1594 x2107))
(assert (x1594 x3156))
(assert (x1594 x1188))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3470 100)))
(assert (= (and (not x77) x1144) x248))
(assert (x1594 x2360))
(assert (> (x1736 64 x399 100) 10000))
(assert (< (x1736 64 x1439 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1736 64 x1049 2)))
(assert (x1594 x2837))
(assert (x3740 x239))
(assert (x1594 x423))
(assert (=> (>= 10000 x1221) (= (x1601 x1221) 0)))
(assert (x1594 x2646))
(assert (x1594 x2584))
(assert (x1594 x3663))
(assert (x1594 x1576))
(assert (= (x1067 (x1908 x609 x3744 x1987 x54 x213)) x1987))
(assert (= x1872 (=> (and (= x275 x190) (= x3550 x1590)) x2450)))
(assert (= x1472 (x843 (x3512 x2647 x2752 x986 x1472))))
(assert (x2365 x2409))
(assert (x1594 x1460))
(assert (x1594 x905))
(assert (= x3209 (x2902 (x1979 x609 x412 x1754 x384 x2566 x3209 x488))))
(assert (= (and (not x983) x615) x1140))
(assert (= (x2399 (x1736 64 x2458 7)) 64))
(assert (x1594 x39))
(assert (x1594 x2976))
(assert (x3740 x2284))
(assert (x1594 x2985))
(assert (x1594 x2013))
(assert (x3740 x1133))
(assert (= x3594 (=> (and (= x1894 (x47 x102)) (= (not (> x457 x1995)) x1435) (= x1995 (+ 32 x596))) (and (=> (= x2224 x1995) x75) x1435))))
(assert (x1594 x1286))
(assert (x804 x504))
(assert (= x2959 (=> (and (= false x1430) (= x1552 true) (= 36 x3378)) x2979)))
(assert (< 10000 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)))
(assert (not (x1103 (x1736 64 x2980 36))))
(assert (= (and x2477 x2904) x1733))
(assert (x1594 x1623))
(assert (=> (>= 10000 x3470) (= 0 (x1601 x3470))))
(assert (< (x1736 64 x2848 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2809))
(assert (x1594 x498))
(assert (x136 x329 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1067 (x1736 64 x1691 100)) 100))
(assert (not (x1103 (x1736 64 x1368 100))))
(assert (not (x1103 (x1185 x609 x769))))
(assert (=> (>= 10000 x2199) (= 0 (x1601 x2199))))
(assert (x1594 x1112))
(assert (x3740 x329))
(assert (x136 x2524 300))
(assert (x1594 x947))
(assert (x1594 x2839))
(assert (= x1866 (and x2117 x841)))
(assert (x3740 x1517))
(assert (= 0 (x1601 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (=> (<= x2512 10000) (= 0 (x1601 x2512))))
(assert (= x445 (or x707 x3302)))
(assert (= (x1067 (x1736 64 x3518 100)) 100))
(assert (x3740 x2336))
(assert (x1594 x3756))
(assert (= (x1067 (x1736 64 x2371 100)) 100))
(assert (= x2101 (or x1428 x248)))
(assert (= (x1870 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) x198))
(assert (x2631 x59))
(assert (= 64 (x2399 (x1736 64 x2937 36))))
(assert (x1594 x1369))
(assert (x1594 x1625))
(assert (x2365 x315))
(assert (x1594 x1767))
(assert (x1594 x2560))
(assert (x1594 x1028))
(assert (= (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445) (x1601 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (= (x2399 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x2407))
(assert (= (x1067 (x1736 64 x3496 100)) 100))
(assert (x136 x2469 256))
(assert (x1594 x2244))
(assert (= x1391 (and (not x2944) x1351)))
(assert (= (x1067 (x1736 64 x1901 100)) 100))
(assert (= (x1069 (x1736 64 x3691 100)) x3691))
(assert (x3740 x1728))
(assert (x136 x2620 256))
(assert (not (x1103 (x1736 64 x3496 100))))
(assert (= x1978 (and x1223 x2630)))
(assert (x3740 x3745))
(assert (> (x1736 64 x1483 100) 10000))
(assert (x1594 x1680))
(assert (x1594 x181))
(assert (x1594 x466))
(assert (= x305 (and x660 x3419)))
(assert (x1594 x1292))
(assert (x136 x329 32))
(assert (= (=> (and (= x594 false) (= true x1080) (= x2105 36)) x3517) x1883))
(assert (not (x1103 (x1544 x609 x515 x1745 x744 x2405 x1350))))
(assert (= (x2399 (x1736 64 x1901 100)) 64))
(assert (x1594 x1683))
(assert (= (x1736 64 x3614 100) (x1601 (x1736 64 x3614 100))))
(assert (x3085 x243))
(assert (x1594 x1207))
(assert (= x3391 (or x3533 x3013)))
(assert (x1594 x1798))
(assert (< 10000 (x1736 64 x3470 100)))
(assert (x1594 x2844))
(assert (= (and x101 (not x3707)) x3769))
(assert (= 64 (x2399 (x1736 64 x3618 100))))
(assert (x1594 x219))
(assert (= 0 (x1601 97822624453686575479804928673988797637476738513438931194560248106084831592448)))
(assert (x1594 x509))
(assert (= (x2399 (x1908 x1758 x2820 x2323 x1705 x3459)) x1758))
(assert (x955 32 (ite (= x1366 0) 1 0)))
(assert (x1594 x2405))
(assert (x804 x577))
(assert (= (x2399 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) x2407))
(assert (x3740 x315))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3733 36)))
(assert (x1594 x2326))
(assert (x1594 x718))
(assert (x136 x1372 256))
(assert (= (x2399 (x1736 64 x3057 36)) 64))
(assert (x1594 x2233))
(assert (= x3724 (=> (and (= x1441 false) (= true x3242) (= 36 x2105)) x3517)))
(assert (x3740 x237))
(assert (= x3573 (and x2068 x870)))
(assert (> (x1736 64 x131 36) 10000))
(assert (x1594 x609))
(assert (=> (<= x1691 10000) (= 0 (x1601 x1691))))
(assert (= (and x2611 x3260) x2270))
(assert (x1880 1000000000))
(assert (x1594 x3572))
(assert (x1594 x1703))
(assert (< 10000 (x1908 x609 x3744 x1987 x54 x213)))
(assert (= (x2399 (x1736 64 x2665 100)) 64))
(assert (x1594 x956))
(assert (=> (>= 10000 x3026) (= (x1601 x3026) 0)))
(assert (= (and x1063 (not x1720)) x914))
(assert (x1594 x1824))
(assert (x1594 x1485))
(assert (= x497 (x1069 (x1736 64 x497 100))))
(assert (> (x3512 x609 x2437 x726 x1997) 10000))
(assert (= x609 (x2399 (x1908 x609 x3744 x1987 x54 x213))))
(assert (= (x1069 (x1736 x2647 x1474 x2342)) x1474))
(assert (x1594 x1643))
(assert (x804 x2267))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3518 100)))
(assert (= (=> (and (= x2476 x542) (= x588 x3736) (= x967 x2208) (= x1190 x2209) (= x718 x3663) (= x2476 x2658) (= x1226 x2208) (= x2265 x113) (= x3440 x2920) (= x690 x1460) (= x1246 x1387) (= x1605 x1278) (= x1809 x2932) (= x28 x1127) (= x2324 x3240) (= x2404 x2713) (= x1115 x483) (= x3166 x2872) (= x876 x2087) (= x3503 x2920) (= x46 x1460) (= x624 x1605) (= x624 x2713) (= x483 x690) (= x2932 x3485) (= x2000 x625) (= x691 x718) (= x2639 x328) (= x3197 x1034) (= x3440 x113) (= 0 x704) (= x3149 x3663) (= x2209 x3485) (= x763 x691) (= x3197 x542) (= x588 x328) (= x1387 x967) (= x1505 x2030) (= x2872 x1788) (= x2774 1) (= x2087 x1505) (= x2030 x783) (= x3736 x2764) (= x1788 x3240)) x3544) x3418))
(assert (x1594 x842))
(assert (x1594 x1605))
(assert (= (x1185 x1758 x14) (x1601 (x1185 x1758 x14))))
(assert (= (x1067 (x1736 64 x146 100)) 100))
(assert (= (x3383 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) x488))
(assert (not (x1103 (x1736 64 x2165 (ite (= 0 x2647) x2018 (ite (<= x2647 32) x921 (ite (>= 64 x2647) x1385 (ite (<= x2647 96) x889 (ite (>= 128 x2647) x337 (ite (<= x2647 160) x1348 (ite (<= x2647 192) x2720 (ite (<= x2647 224) x1996 x3743))))))))))))
(assert (x1594 x76))
(assert (x1594 x3315))
(assert (= (and (not x505) x2830) x3286))
(assert (x1594 x2058))
(assert (= (x2399 (x3512 x2647 x2752 x986 x1472)) x2647))
(assert (x1594 x1277))
(assert (x175 x329))
(assert (not (x1103 (x1736 64 x2976 36))))
(assert (< 10000 (x1736 64 x497 100)))
(assert (x1594 x198))
(assert (x1594 x2613))
(assert (= (or x1592 x3373) x3441))
(assert (> (x1736 64 x2114 36) 10000))
(assert (= (x1870 (x1908 x2407 x2216 x3307 x2212 x3675)) x3675))
(assert (x1594 x2325))
(assert (x1594 x807))
(assert (= (x1601 (x1736 64 x1049 36)) (x1736 64 x1049 36)))
(assert (x1594 x2566))
(assert (x1594 x1221))
(assert (= (x1736 64 x2231 12) (x1601 (x1736 64 x2231 12))))
(assert (x804 x3500))
(assert (=> (<= x3325 10000) (= 0 (x1601 x3325))))
(assert (= (x1601 (x1736 64 x3549 100)) (x1736 64 x3549 100)))
(assert (x1594 x2513))
(assert (x1594 x2136))
(assert (= x2210 (x2399 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487))))
(assert (not (x1103 (x1736 64 x2413 100))))
(assert (x804 x3412))
(assert (x1594 x854))
(assert (x1103 1000000000))
(assert (x1594 x2012))
(assert (> (x1736 64 x2839 36) 10000))
(assert (x1594 x3731))
(assert (= (x1736 64 x2226 100) (x1601 (x1736 64 x2226 100))))
(assert (=> (>= 10000 x3680) (= (x1601 x3680) 0)))
(assert (x1594 x1191))
(assert (not (x1103 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (x1103 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x1594 x755))
(assert (not (x1103 (x1736 64 x3446 36))))
(assert (= x1166 (x843 (x3512 x2210 x443 x2278 x1166))))
(assert (= x220 (or x2080 (and (not x2946) x3543))))
(assert (= x565 (or x333 x3591 x644 x3358 x3033)))
(assert (= 0 (x1601 2376452955)))
(assert (x1594 x213))
(assert (x1594 x3558))
(assert (= (x2399 (x1908 x2210 x3341 x3067 x3026 x1942)) x2210))
(assert (= (x1067 (x1736 64 x1692 36)) 36))
(assert (x1594 x2813))
(assert (x1594 x508))
(assert (= (x1601 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (= (and (not x2630) x1223) x3700))
(assert (= (and x200 (not x358)) x2748))
(assert (x2365 x2505))
(assert (< 10000 (x1736 64 x1595 100)))
(assert (x1594 x1231))
(assert (= (x1601 (x1736 64 x2264 36)) (x1736 64 x2264 36)))
(assert (= (x1601 (x1736 64 x1684 100)) (x1736 64 x1684 100)))
(assert (x1594 x752))
(assert (= x106 (=> (= x3664 (= x238 0)) (and (=> (and x3664 (and (= x1038 x3378) (= false x706) (= x2804 true))) x2979) (=> (and (and (= x158 x517) (= x2560 x562)) (not x3664)) x3100)))))
(assert (x1594 x1440))
(assert (x1594 x649))
(assert (x1594 x1470))
(assert (not (x1103 (x1736 64 x2131 36))))
(assert (x1594 x3625))
(assert (= x2210 (x2399 (x1185 x2210 x1382))))
(assert (x1594 x3116))
(assert (x1594 x2551))
(assert (x1594 x3088))
(assert (x136 x2858 256))
(assert (x1594 x132))
(assert (x1594 x279))
(assert (x1594 x2598))
(assert (x1103 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x1103 3521034783))
(assert (x2631 x1589))
(assert (< 10000 (x1908 x2407 x2216 x3307 x2212 x3675)))
(assert (and (= 81 (x3140 27 3)) (= (x3140 3 3) 9) (= 81 (x3140 9 9)) (= 27 (x3140 9 3))))
(assert (x1594 x3054))
(assert (x1594 x1322))
(assert (x3740 x1076))
(assert (> (x1736 64 x1763 100) 10000))
(assert (= x3767 (and (not x2191) x2273)))
(assert (not (x1103 (x1736 64 x2114 36))))
(assert (x136 x3063 256))
(assert (x2365 x879))
(assert (= (or x1862 (and (not x2967) x3380)) x845))
(assert (= (x2399 (x1185 x609 x769)) x609))
(assert (x1594 x832))
(assert (> (x1736 64 x2937 36) 10000))
(assert (not (x1103 (x1736 64 x1408 100))))
(assert (x3740 x2921))
(assert (= x2655 (=> (and (= (= 0 x881) x2719) (= x835 (x3143 (+ x1576 31))) (= (x3143 (+ x760 x1440)) x336) (= x1009 (x2127 (- x336 x2855))) (= (x1858 x28) x881) (= (x3143 (+ x1576 x1440)) x1967) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x835) x760)) (and (=> (and x2719 (and (= false x993) (= x2105 0) (= x2163 true))) x3517) (=> (and (and (= (x1878 x1379) x2981) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1775 x770)) x1668) (= x2110 (<= x1775 x2981)) (= x988 (and x2110 x1668)) (= (x1878 x28) x770)) (not x2719)) (and (=> (and (and (= x3447 x3185) (= x117 x1808) (= x3117 x2251) (= x2556 x2149) (= x1553 x1780) (= x2031 x16) (= x3771 x356) (= x1616 x1353) (= 0 x1634) (= 0 x2360) (= x652 x1897)) (not x988)) x2901) (=> (and x988 (and (and (<= x1192 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1247 x28) x834) (< (+ x1775 x834) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3735 (x1878 x1379)) (= x3640 x1192) (<= 0 x1192) (= (< 0 x127) x3465) (= (- x3735 x1775) x2868) (= (+ x1775 x834) x1192)) (or (and (not x3465) (and (= x3185 x3146) (= x633 x1808) (= x1361 x1897) (= x3263 x2031) (= x3281 x1780) (= x1616 x1570) (= x3117 x2260) (= x2537 x3771) (= x1680 x2149))) (and (and (= x1497 x1680) (= x3623 x3263) (= x764 (x187 x1379)) (= x2537 x911) (= (x187 x28) x1814) (= x3146 x3599) (= x2260 x942) (= x1361 x523) (= x3281 x3142) (= x3777 (= (x253 x28) x1814)) x3087 x3777 (<= x3231 4294967295) (= x437 x1570) (= x3589 x633) (= x3087 (>= (x253 x1379) x764))) x3465)))) x1663)))))))
(assert (x1594 x1892))
(assert (= x340 (and x1217 (not x2956))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1763 100)))
(assert (x1594 x2321))
(assert (x136 x3712 256))
(assert (x1594 x2925))
(assert (=> (>= 10000 x1604) (= 0 (x1601 x1604))))
(assert (x1594 x1724))
(assert (= (and x933 x709) x394))
(assert (x1594 x866))
(assert (= (and (not x3007) x3027) x544))
(assert (x1594 x1800))
(assert (= x34 (and x2446 x2011)))
(assert (x1594 x3576))
(assert (x3740 x2418))
(assert (x1594 x2924))
(assert (= (x2399 (x1736 64 x2976 36)) 64))
(assert (x1594 x2515))
(assert (= (x1736 64 x756 100) (x1601 (x1736 64 x756 100))))
(assert (x1594 x2577))
(assert (x804 x934))
(assert (=> (>= 10000 x2686) (= (x1601 x2686) 0)))
(assert (= x1171 (and (not x1476) x914)))
(assert (not (x1103 (x1736 64 x1692 36))))
(assert (x1594 x3431))
(assert (= x2165 (x1069 (x1736 64 x2165 (ite (>= 32 x609) x2444 (ite (<= x609 64) x2952 (ite (>= 96 x609) x614 (ite (<= x609 128) x2468 (ite (<= x609 160) x1672 (ite (>= 192 x609) x2785 (ite (<= x609 224) x2725 x2330)))))))))))
(assert (x804 x1151))
(assert (x1594 x1500))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x2531 (and x2672 x2215)))
(assert (=> (<= x947 10000) (= (x1601 x947) 0)))
(assert (> (x1544 x2407 x3469 x440 x2964 x2533 x3572) 10000))
(assert (= (x1067 (x1736 64 x2114 36)) 36))
(assert (= x2650 (and (not x3165) x778)))
(assert (x1594 x797))
(assert (x2365 x3145))
(assert (x1594 x2747))
(assert (x1594 x2777))
(assert (x3740 x1151))
(assert (=> (<= x2714 10000) (= 0 (x1601 x2714))))
(assert (x1594 x3091))
(assert (= x1758 (x2399 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (= (x1870 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) x2533))
(assert (x1594 x3718))
(assert (< (x1736 64 x128 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x165 10000) (= (x1601 x165) 0)))
(assert (=> (>= 10000 x986) (= (x1601 x986) 0)))
(assert (x1594 x546))
(assert (= x3214 (and x2119 x2447)))
(assert (= (and x988 x1756) x622))
(assert (= x1922 (and (not x2068) x870)))
(assert (= (and x416 (not x3422)) x2940))
(assert (x1594 x412))
(assert (= (=> (and (and (= x3654 (x3143 (+ 96 x1727))) (= x1769 (x430 x3654)) (= (not (< 128 x1576)) x79) (= (x3143 (+ x1440 96)) x3092)) x79) x2655) x2733))
(assert (= x2412 (and (not x1820) x1406)))
(assert (x1594 x3118))
(assert (< 10000 (x1736 64 x3618 100)))
(assert (= (x241 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) x904))
(assert (=> (<= x3088 10000) (= 0 (x1601 x3088))))
(assert (= x365 (=> (and (or (and (and (= x353 x3024) (= x1807 x2042) (= x968 x796)) (not x2174)) (and (and (<= 0 x1224) (= x353 x3024) (= x968 x796) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1565 x179)) (= (+ x179 x1565) x1224) (<= x1224 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- x1107 x1565) x98) (= (x1732 x1379) x179) (= x2357 x1224) (= x1107 (x3052 x3301)) (= (ite (= 0 x2042) x2056 0) x1565) (= x1807 x2042)) x2174)) (= x2174 (= 0 x2042))) x3432)))
(assert (= 100 (x1067 (x1736 64 x3470 100))))
(assert (= (=> (= x1284 (= x1807 0)) (and (=> (and (and (= true x7) (= x1833 false) (= x3378 x3024)) x1284) x2979) (=> (and (and (= x406 x3109) (= x968 x2808)) (not x1284)) x2463))) x3432))
(assert (= (x1069 (x1185 x2647 x284)) x284))
(assert (x1594 x1541))
(assert (x804 x2742))
(assert (= 64 (x2399 (x1736 64 x3496 100))))
(assert (= x2582 (x1067 (x1736 x1758 x1288 x2582))))
(assert (< (x1736 64 x2114 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2336))
(assert (x1594 x376))
(assert (x1594 x1510))
(assert (= 100 (x1067 (x1736 64 x3435 100))))
(assert (= x2417 (and x3363 (not x1927))))
(assert (= (x1601 (x1736 64 x3446 36)) (x1736 64 x3446 36)))
(assert (x1594 x3026))
(assert (=> (<= x2407 10000) (= 0 (x1601 x2407))))
(assert (= x3416 (and x3060 (not x643))))
(assert (< 10000 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)))
(assert (x1594 x3481))
(assert (= (and x565 x1647) x2652))
(assert (x1594 x3538))
(assert (x1594 x727))
(assert (x1594 x2852))
(assert (= (x1601 52207524433148634532707337042868834046575769438058807509068660137114659192832) 0))
(assert (= (x1601 (x1908 x609 x3744 x1987 x54 x213)) (x1908 x609 x3744 x1987 x54 x213)))
(assert (=> (<= x1403 10000) (= 0 (x1601 x1403))))
(assert (=> (>= 10000 x1763) (= 0 (x1601 x1763))))
(assert (= (x1601 (x1736 64 x2131 36)) (x1736 64 x2131 36)))
(assert (= (x1069 (x1736 64 x2665 100)) x2665))
(assert (x1594 x1186))
(assert (x1594 x2104))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)))
(assert (= (and x882 (not x3662)) x2550))
(assert (= x1564 (and x276 x3686)))
(assert (= x3124 (and x2117 (not x841))))
(assert (x1594 x2255))
(assert (x1594 x691))
(assert (< 10000 (x1908 x2647 x3684 x734 x3114 x2475)))
(assert (= x2520 (or x790 x2359)))
(assert (=> (>= 10000 x2928) (= 0 (x1601 x2928))))
(assert (= x616 (and x168 x1341)))
(assert (= x3720 (and x270 (not x1340))))
(assert (x1594 x3417))
(assert (x3740 x2469))
(assert (x1594 x3089))
(assert (x136 x3151 256))
(assert (x1594 x756))
(assert (x2631 x930))
(assert (= (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3) (x1601 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3))))
(assert (x1594 x1685))
(assert (x1594 x2542))
(assert (= (=> (= (= x142 0) x2068) (and (=> (and (and (= x2024 false) (= x1539 x3378) (= true x680)) x2068) x2979) (=> (and (not x2068) (and (= x3201 x1537) (= x1317 x1178))) x491))) x1687))
(assert (= (x1736 64 x900 36) (x1601 (x1736 64 x900 36))))
(assert (= (x1908 x1758 x2820 x2323 x1705 x3459) (x1601 (x1908 x1758 x2820 x2323 x1705 x3459))))
(assert (=> (<= x1800 10000) (= (x1601 x1800) 0)))
(assert (= (x1601 (x1736 64 x1049 2)) (x1736 64 x1049 2)))
(assert (x1594 x3231))
(assert (=> (>= 10000 x2321) (= (x1601 x2321) 0)))
(assert (x1594 x1278))
(assert (x1594 x16))
(assert (= x282 (or (and x2162 x912) (and x304 x2595))))
(assert (= (x1067 (x1736 64 x1724 100)) 100))
(assert (= (x1601 (x3512 x2647 x2752 x986 x1472)) (x3512 x2647 x2752 x986 x1472)))
(assert (=> (<= x904 10000) (= 0 (x1601 x904))))
(assert (x2365 x960))
(assert (= (x2399 (x3205 0)) 0))
(assert (= x819 (x1067 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (x1594 x3549))
(assert (> (x1185 x2647 x284) 10000))
(assert (= x609 (x2399 (x1736 x609 x3458 x730))))
(assert (= (x1870 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) x2566))
(assert (=> (<= x1741 10000) (= 0 (x1601 x1741))))
(assert (= x1434 (and x2506 (not x3559))))
(assert (not (x1103 (x1736 64 x1685 6))))
(assert (x1594 x1356))
(assert (= 36 (x1067 (x1736 64 x2980 36))))
(assert (=> (>= 10000 x266) (= (x1601 x266) 0)))
(assert (= 64 (x2399 (x1736 64 x1049 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2199 100)))
(assert (x1594 x3423))
(assert (= (or x1129 x467) x2885))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1594 x2686))
(assert (= 100 (x1067 (x1736 64 x1368 100))))
(assert (x1594 x1101))
(assert (= (x1601 (x1736 64 x3538 100)) (x1736 64 x3538 100)))
(assert (= x2602 (and x717 (not x3308))))
(assert (x1594 x852))
(assert (= (or x2256 x1564) x1223))
(assert (x1594 x665))
(assert (x1594 x456))
(assert (= x2749 (and x360 x1473)))
(assert (x1594 x292))
(assert (x1594 x55))
(assert (x1594 x3303))
(assert (x804 x3405))
(assert (= (x3383 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) x487))
(assert (= (x1601 (x1736 64 x146 100)) (x1736 64 x146 100)))
(assert (= (x2399 (x1736 x2407 x2773 x2613)) x2407))
(assert (= x3618 (x1069 (x1736 64 x3618 100))))
(assert (x2631 x3625))
(assert (= x2750 (x843 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804))))
(assert (x1594 x3532))
(assert (= x1622 (and x520 x3090)))
(assert (= x2086 (and (not x2857) x3046)))
(assert (x1594 x1306))
(assert (x1594 x354))
(assert (x1594 x3433))
(assert (x1594 x1367))
(assert (=> (>= 10000 x726) (= (x1601 x726) 0)))
(assert (x1594 x624))
(assert (x1594 x2182))
(assert (x1594 x428))
(assert (< (x1979 x2210 x2716 x1829 x972 x354 x2040 x487) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x552) (= (x1601 x552) 0)))
(assert (= x213 (x1870 (x1908 x609 x3744 x1987 x54 x213))))
(assert (< 10000 (x1736 64 x3538 100)))
(assert (x1594 x2431))
(assert (= (x1736 64 x131 36) (x1601 (x1736 64 x131 36))))
(assert (x1103 2376452955))
(assert (=> (<= x1705 10000) (= 0 (x1601 x1705))))
(assert (= (and x1917 x1312) x3211))
(assert (=> (>= 10000 x1685) (= 0 (x1601 x1685))))
(assert (= x2461 (and x2190 x1954)))
(assert (x1594 x1030))
(assert (x1594 x3480))
(assert (x3740 x2053))
(assert (x1594 x3640))
(assert (= (x1069 (x1736 64 x2848 2)) x2848))
(assert (= x2420 (x1067 (x1736 x2210 x2072 x2420))))
(assert (x1594 x582))
(assert (x1594 x2715))
(assert (= x2773 (x1069 (x1736 x2407 x2773 x2613))))
(assert (x136 x879 256))
(assert (= (and x3255 (not x3513)) x3033))
(assert (x1594 x3727))
(assert (x1594 x881))
(assert (= (x1069 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445)) x1084))
(assert (< (x1736 64 x1368 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2498))
(assert (not (x1103 (x1736 64 x1049 36))))
(assert (x3740 x2497))
(assert (= (x1601 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (x1594 x3168))
(assert (x2631 x357))
(assert (= (and (not x637) x612) x874))
(assert (= (x1736 64 x842 100) (x1601 (x1736 64 x842 100))))
(assert (x1594 x2240))
(assert (= x1799 (or (and x1156 x3585) (and x3164 x827))))
(assert (= x398 (=> (and (= x2855 x719) (> x719 x2635) (= (x3143 (+ x2854 31)) x2336) (= x1028 x2635) (<= x719 115792089237316195423570985008687907853269984665640564039457584007913129639904) (<= 1 x719) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2635) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2336) x719) (<= x2635 115792089237316195423570985008687907853269984665640564039457584007913129639903) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2635)) x2991)))
(assert (x1594 x1381))
(assert (x1594 x1265))
(assert (x1594 x2493))
(assert (=> (>= 10000 x547) (= 0 (x1601 x547))))
(assert (= x1498 (and x454 (not x781))))
(assert (= (x2399 (x1736 64 x756 100)) 64))
(assert (x1594 x320))
(assert (x1594 x3237))
(assert (x1594 x2036))
(assert (= (=> (and (= x1317 x2316) (= x3201 x2244)) x3672) x491))
(assert (=> (<= x3744 10000) (= (x1601 x3744) 0)))
(assert (= (x1067 (x1736 64 x2413 100)) 100))
(assert (x1880 (ite (= x314 0) 1 0)))
(assert (x2631 x2922))
(assert (x1594 x1699))
(assert (=> (>= 10000 x3518) (= (x1601 x3518) 0)))
(assert (> (x1736 x609 x3458 x730) 10000))
(assert (not (x1103 (x1736 64 x3057 36))))
(assert (x136 x737 256))
(assert (=> (>= 10000 x3114) (= (x1601 x3114) 0)))
(assert (x1594 x254))
(assert (x1594 x3607))
(assert (x1594 x1288))
(assert (= x769 (x1069 (x1185 x609 x769))))
(assert (= x2477 (and (not x3084) x522)))
(assert (= (or (and x2842 x2768) (and x1752 x1272)) x897))
(assert (x804 x3556))
(assert (x1594 x2619))
(assert (not (x1103 (x1736 64 x2226 100))))
(assert (x1594 x2388))
(assert (x1594 x1575))
(assert (x1594 x1953))
(assert (x1594 x2430))
(assert (x804 x476))
(assert (= (x1067 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) x1829))
(assert (< (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1473) x360) x178))
(assert (x1594 x765))
(assert (x3740 x3556))
(assert (x1594 x1433))
(assert (= x3111 (and x2443 (not x214))))
(assert (= (x1067 (x1736 64 x497 100)) 100))
(assert (= 64 (x2399 (x1736 64 x1724 100))))
(assert (x1594 x1387))
(assert (= (x1601 (x1736 64 x1439 10)) (x1736 64 x1439 10)))
(assert (x1594 x1763))
(assert (x3740 x3008))
(assert (< (x1736 64 x2937 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (= x127 0) x2726) (or (and (and (= x1361 x652) (= x2251 x2260) (= x633 x117) (= x1570 x1353) (= x3146 x3447) (= x2537 x356) (= x127 x1634) (= x1680 x2556) (= x3281 x1553) (= x3231 x2360) (= x3263 x16)) (not x2726)) (and x2726 (and (= (x87 x1379) x556) (<= x1792 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2260 x2251) (= x3281 x1553) (= x117 x633) (= x1570 x1353) (= (x1268 x28) x1070) (= (- x1070 x2258) x2552) (= x1792 (+ x2258 x556)) (= x2537 x356) (= x2360 x3231) (= x3447 x3146) (<= 0 x1792) (= x1319 x1792) (= x127 x1634) (= x1361 x652) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2258 x556)) (= x1680 x2556) (= x3263 x16) (= (ite (= x127 0) x1775 0) x2258))))) x2901) x1663))
(assert (=> (>= 10000 x284) (= 0 (x1601 x284))))
(assert (= (=> (= x2544 (= x2036 0)) (and (=> (and (and (= true x1161) (= x3106 false) (= x3625 x2105)) x2544) x3517) (=> (and (and (= x254 x1928) (= x119 x3352) (= x309 x1134) (= x1824 x3232) (= x289 x298) (= x1892 x3062) (= x664 x2343) (= x2594 x2674) (= x1116 x320) (= x2862 x1948)) (not x2544)) x973))) x1449))
(assert (x1594 x1117))
(assert (x136 x2677 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x2399 (x1736 64 x426 6))))
(assert (x1594 x583))
(assert (x1594 x3028))
(assert (x1594 x3139))
(assert (x1594 x556))
(assert (x1594 x3157))
(assert (< (x1736 64 x3446 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x3146))
(assert (= (x1067 (x1736 64 x2226 100)) 100))
(assert (= x2080 (and x3543 x2946)))
(assert (= (=> (and (= true x3635) (= false x2570) (= x3378 36)) x2979) x817))
(assert (= (and x845 (not x3362)) x2664))
(assert (x804 x1121))
(assert (< 10000 (x1736 64 x3381 100)))
(assert (= x1439 (x1069 (x1736 64 x1439 10))))
(assert (x1594 x3063))
(assert (x1594 x3153))
(assert (x1594 x1246))
(assert (= (and x77 x1144) x1428))
(assert (x1594 x2105))
(assert (= x2435 (and x2550 (not x1026))))
(assert (x2631 x1038))
(assert (= (x1601 (x1544 x1758 x1403 x3597 x359 x130 x2512)) (x1544 x1758 x1403 x3597 x359 x130 x2512)))
(assert (x804 x2758))
(assert (x1594 x1015))
(assert (x1594 x3515))
(assert (x1594 x1197))
(assert (= 0 (x1601 310283853)))
(assert (x1594 x2684))
(assert (= x1504 (and (not x2740) x395)))
(assert (x1594 x1201))
(assert (x1594 x1310))
(assert (x1594 x2556))
(assert (= (and x2241 x1457) x2443))
(assert (=> (>= 10000 x2216) (= 0 (x1601 x2216))))
(assert (< 10000 (x1736 64 x2226 100)))
(assert (x1594 x1537))
(assert (= x168 (and x1003 (not x3699))))
(assert (x1594 x2862))
(assert (= (and (not x1424) x2911) x1328))
(assert (= (x1736 64 x1692 36) (x1601 (x1736 64 x1692 36))))
(assert (= x3518 (x1069 (x1736 64 x3518 100))))
(assert (= (and (not x2408) x2668) x2117))
(assert (x1594 x1930))
(assert (not (x1103 (x1736 64 x2458 7))))
(assert (not (x1103 (x1185 x1758 x14))))
(assert (not (x1103 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014))))
(assert (x1594 x215))
(assert (x1594 x309))
(assert (not (x1103 (x1736 64 x399 100))))
(assert (= x3381 (x1069 (x1736 64 x3381 100))))
(assert (x1594 x3630))
(assert (x1594 x1707))
(assert (= (x2399 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053)) x2407))
(assert (=> (>= 10000 x2437) (= 0 (x1601 x2437))))
(assert (x1594 x1216))
(assert (= (and x3278 (not x2794)) x2984))
(assert (x1594 x182))
(assert (x1594 x3645))
(assert (x1594 x142))
(assert (x804 x1580))
(assert (x1594 x3735))
(assert (x1594 x483))
(assert (= (x1601 (x1736 64 x2114 36)) (x1736 64 x2114 36)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1908 x2210 x3341 x3067 x3026 x1942)))
(assert (= (x3383 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x547))
(assert (x1594 x2271))
(assert (= (and x2443 x214) x2795))
(assert (= (x1067 (x1736 64 x1408 100)) 100))
(assert (= (x2902 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) x266))
(assert (x1594 x3637))
(assert (x1594 x3744))
(assert (x1594 x2561))
(assert (x1594 x2970))
(assert (= x1855 (=> (and (= x1681 36) x3377 (<= 1 x3771) (= x1572 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2925 x2269))) (= (- x3055 x2269) x1915) (not x714) (= false x628) (= x2154 160) (= (x1858 x1379) x508) (= (x312 255 x2084) x2112) (= x1667 (= 3 x3030)) (not x2939) x1335 (= (= x3030 0) x732) (<= 1 x508) (= x2211 (<= x2269 x891)) (< (+ x2269 x1779) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2084 (+ 1 x900)) (= x714 (= x3030 1)) (= x2988 (= x900 255)) (not x732) (= true x1335) (= (= 2 x3030) x2939) (= 1341992515 x795) (<= x727 127) x12 (= x2848 (x312 255 x2084)) (not x2988) (= x434 (= x3680 x3771)) (not x2100) (= (x1461 128) x2269) (= x12 (= x28 x2948)) (= false x1999) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1313) (<= x900 255) (<= x727 127) (= (x527 x2948) x891) (not x434) (= (x1869 x3771) x1779) (= (x527 x2948) x3055) (= x2925 (x527 x3771)) (= x1154 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= x3377 (and x2211 x1572)) (= x1313 x887) (= (+ x2269 x1779) x1313) (= x3771 x1379) (= (x2372 x2172) x3030) (= x2172 (x1736 64 x900 36)) (= x1419 x2948) (>= x1004 1) (>= x1313 0) (>= 1461501637330902918203684832716283019655932542975 x3771) (= x1004 (x1858 x3771)) (= x2100 (= 0 x1895))) (and (=> (and (= x1481 (= x3030 4)) (not x1667)) (and (=> (and (= x2822 (= x2848 255)) x1481) (and (=> (and (not x2822) (and (= (+ 1 x2848) x471) (= x1849 (x312 255 x471)) (= x3666 (= x1849 255)) (= x641 (x312 255 x471)) (= (x1736 64 x2848 36) x57) (= x3061 (x2372 x57)))) (and (=> x3666 x3539) (=> (and (not x3666) (and (= x2206 (= x2937 255)) (= x2505 (+ 1 x1849)) (= x3170 (x1736 64 x1849 100)) (= x3561 (x2824 x3170)) (= x2937 (x312 255 x2505)) (= (x312 255 x2505) x121))) (and (=> (and (and (= x2191 (and x2173 x1061)) (= x1061 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x649 x3061))) (= x649 (x1878 x28)) (= x2081 (x312 255 x2864)) (= x3670 (x1736 64 x2937 36)) (= (+ 1 x2937) x2864) (= (x1878 x1379) x1132) (= (x2372 x3670) x3040) (= x2661 (x312 255 x2864)) (= x2173 (>= x1132 x3061)) (= x1965 128)) (not x2206)) (and (=> (and (not x2191) (and (= 0 x2641) (= x2149 x3402) (= x1780 x1301) (= x1808 x2698) (= x3629 x2031) (= x3117 x1158) (= x3185 x1059) (= x3011 x1897) (= x1453 x3771) (= x215 x1616) (= x1929 0))) x2032) (=> (and x2191 (and (or (and x1327 (and x2789 (= x1436 (>= (x2863 x1379) x2403)) (= x1943 x662) (= x1422 x132) (= x345 x797) (= x3761 x1761) (= x129 x3025) (= x3300 x854) (= x2851 x3431) (= (x1228 x1379) x2403) (= x294 x2715) (= x3590 x1454) (= x2789 (= (x2863 x28) x1896)) (= x1896 (x1228 x28)) (>= 4294967295 x2881) x1436)) (and (and (= x1616 x3431) (= x1897 x662) (= x2149 x294) (= x3761 x3771) (= x2031 x1454) (= x129 x1780) (= x3185 x3300) (= x797 x1808) (= x132 x3117)) (not x1327))) (and (= x1269 x3350) (= (+ x3061 x1496) x3350) (= (- x2455 x3061) x2539) (= x1327 (> x3118 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3061 x1496)) (= (x1878 x1379) x2455) (= x1496 (x217 x28)) (>= x3350 0) (<= x3350 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x3577))) (=> x2206 x1864))))) (=> x2822 x3724))) (=> (and (not x1481) (= x1927 (= 5 x3030))) (and (=> (and (not x1927) (= (= 6 x3030) x869)) (and (=> (and (= x2637 (= 255 x2848)) x869) (and (=> (and (and (= (x1736 64 x2848 36) x1320) (= (x312 255 x2776) x3733) (= x3054 (x312 255 x2776)) (= x2386 (= x3733 255)) (= x1186 (x2372 x1320)) (= x2776 (+ 1 x2848))) (not x2637)) (and (=> (and (not x2386) (and (= x2091 (x1736 64 x3733 36)) (= x2363 (x2372 x2091)) (= x476 (+ x3733 1)) (= x1830 (x312 255 x476)) (= (x312 255 x476) x3565) (= x265 (= x3565 255)))) (and (=> x265 x1864) (=> (and (and (= x2131 (x312 255 x1580)) (= (x2372 x3634) x1031) (= x1580 (+ 1 x3565)) (= (x312 255 x1580) x1524) (= x3634 (x1736 64 x3565 36)) (= (= 255 x2131) x3084)) (not x265)) (and (=> (and (not x3084) (and (= (x1736 64 x2131 36) x2656) (= x192 (+ 1 x2131)) (= x2587 128) (= (x1858 x28) x2731) (= (x312 255 x192) x3424) (= (= 0 x2731) x2904) (= (x312 255 x192) x2995) (= (x2372 x2656) x2271))) (and (=> (and x2904 (and (= false x40) (= x2105 0) (= x2396 true))) x3517) (=> (and (not x2904) (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1623 x1186)) x1477) (= x847 (x1878 x1379)) (= (>= x847 x1186) x3616) (= (x1878 x28) x1623) (= x2242 (and x1477 x3616)))) (and (=> (and (and (or (and (and (= x2031 x2627) (= x1808 x1625) (= x1616 x409) (= x1897 x3584) (= x2919 x3117) (= x1611 x2149) (= x1040 x1780) (= x1926 x3771) (= x3185 x316)) (not x1304)) (and (and (= x1344 (<= x3726 (x339 x1379))) x1344 (= x1703 x409) (= x1926 x375) (= (= (x339 x28) x1910) x1008) (= x2627 x1369) (= (x838 x1379) x3726) (= x1040 x1252) (>= 4294967295 x1773) (= x212 x1611) (= x1431 x1625) x1008 (= x316 x2003) (= x2919 x3069) (= (x838 x28) x1910) (= x3584 x2985)) x1304)) (and (= (+ x672 x1186) x3127) (<= 0 x3127) (= (x1878 x1379) x2923) (= x1304 (< 0 x2352)) (= x2490 (- x2923 x1186)) (= (x1058 x28) x672) (= x3127 x776) (<= x3127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x672 x1186) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2242) x1847) (=> (and (and (= x3755 x2149) (= x1616 x2060) (= x2031 x2095) (= x3185 x2510) (= x134 x1808) (= x438 x3117) (= x1780 x88) (= 0 x1005) (= x1206 0) (= x82 x3771) (= x1897 x961)) (not x2242)) x2079))))) (=> x3084 x1883))))) (=> x2386 x3539))) (=> x2637 x3724))) (=> (and (= (= x3030 7) x637) (not x869)) (and (=> (and (= x1747 (= 8 x3030)) (not x637)) (and (=> (and x1747 (= (= x2848 255) x1923)) (and (=> x1923 x3724) (=> (and (and (= x1903 (x312 255 x3390)) (= (x1858 x28) x1322) (= (x312 255 x3390) x3682) (= x583 (x2372 x3347)) (= x3347 (x1736 64 x2848 36)) (= x3531 (= x1322 0)) (= x1342 128) (= x3390 (+ x2848 1))) (not x1923)) (and (=> (and (not x3531) (and (= (> x2542 0) x3546) (or (and x3546 (and x2499 (= x531 (= x1490 (x318 x28))) (= x1214 x2777) (= x2499 (>= (x318 x1379) x1002)) x531 (= x1945 x2376) (<= x2996 4294967295) (= x1819 x3606) (= x2844 x2930) (= x3212 x3157) (= x2694 x518) (= x777 x3632) (= x2498 x3132) (= x2961 x1014) (= (x1878 x28) x1490) (= (x1878 x1379) x1002))) (and (and (= x3185 x2961) (= x3606 x2031) (= x1897 x2930) (= x2498 x3771) (= x3212 x1808) (= x2149 x2376) (= x2777 x3117) (= x518 x1780) (= x777 x1616)) (not x3546))))) x950) (=> (and (and (= false x492) (= x2105 0) (= x1137 true)) x3531) x3517))))) (=> (and (not x1747) (and (= x1616 x1277) (= x2434 x2031) (= x2230 x3117) (= x1653 x1808) (= x2848 x605) (= x450 x3771) (= x1352 x1897) (= x3185 x3519) (= x683 x2149) (= x1780 x2374))) x206))) (=> (and (= (= x2848 255) x1347) x637) (and (=> x1347 x3724) (=> (and (and (<= x21 1461501637330902918203684832716283019655932542975) (= 128 x2428) (= (x312 255 x2596) x1948) (= x557 (= x2207 0)) (= x2207 (x1858 x28)) (= (x1736 64 x2848 2) x1701) (= x21 (x1205 x1701)) (= (+ x2848 1) x2596) (= (x312 255 x2596) x2646)) (not x1347)) (and (=> (and (not x557) (and (or (and (and (= x1808 x1824) (= x3771 x309) (= x289 x1897) (= x2594 x1616) (= x1928 x2149) (= x2031 x1116) (= x2343 x3117) (= x3185 x3062) (= x1780 x119)) (not x903)) (and x903 (and (= (x1878 x28) x157) (= x1073 x1928) (= x419 (>= (x1102 x1379) x780)) (= x309 x3703) (= x3062 x1857) (<= x3625 4294967295) (= x1116 x953) (= x289 x959) (= x3274 x119) x2648 (= x3323 x2343) (= x780 (x1878 x1379)) (= x3630 x2594) (= x2899 x1824) x419 (= (= x157 (x1102 x28)) x2648)))) (= x903 (< 0 x2036)))) x493) (=> (and (and (= 0 x2105) (= false x2181) (= true x559)) x557) x3517))))))))) (=> (and x1927 (= (= x2848 255) x2739)) (and (=> (and (not x2739) (and (= (x1736 64 x2848 36) x1359) (= (= x1685 255) x2007) (= x1685 (x312 255 x2439)) (= x1775 (x2372 x1359)) (= x1798 (x312 255 x2439)) (= (+ 1 x2848) x2439))) (and (=> x2007 x3539) (=> (and (not x2007) (and (= (x1736 64 x1685 6) x721) (= x2414 (+ 1 x1685)) (= x143 (= x3446 255)) (= x599 (x312 255 x2414)) (<= x2136 65535) (= x2136 (x1168 x721)) (= x3446 (x312 255 x2414)))) (and (=> (and (not x143) (and (= (x1736 64 x3446 36) x1753) (= (x2372 x1753) x2170) (= (= 255 x3549) x3646) (= x3549 (x312 255 x3412)) (= x3412 (+ 1 x3446)) (= x3490 (x548 x2170 300)) (= x755 (x312 255 x3412)))) (and (=> (and (not x3646) (and (= (x312 255 x2912) x910) (= (x2824 x3587) x2616) (= x2912 (+ x3549 1)) (= x3007 (= x842 255)) (= (x312 255 x2912) x842) (= (x1736 64 x3549 100) x3587))) (and (=> (and (not x3007) (and (= x573 (= x1337 255)) (= (x312 255 x2297) x1332) (= (x312 255 x2297) x1337) (= (x2824 x1000) x3227) (= (+ x842 1) x2297) (= (x1736 64 x842 100) x1000))) (and (=> x573 x2969) (=> (and (and (= (+ 1 x1337) x232) (= x1030 (x312 255 x232)) (= x1336 (x1736 64 x1337 100)) (= (= 255 x3618) x2380) (= x3618 (x312 255 x232)) (= x1380 (x2824 x1336))) (not x573)) (and (=> (and (and (= x2588 (+ 1 x3618)) (= x607 (x2824 x2064)) (= x1483 (x312 255 x2588)) (= (x312 255 x2588) x2445) (= (x1736 64 x3618 100) x2064) (= x3585 (= x1483 255))) (not x2380)) (and (=> (and (not x3585) (and (= x1805 (x2824 x283)) (= x423 (+ x1483 1)) (= x1243 (= x2199 255)) (= (x312 255 x423) x2451) (= x2199 (x312 255 x423)) (= (x1736 64 x1483 100) x283))) (and (=> (and (and (= x2782 (x312 255 x960)) (= x1759 (x1736 64 x2199 100)) (= (x312 255 x960) x1763) (= (+ 1 x2199) x960) (= (x2824 x1759) x1860) (= x2289 (= x1763 255))) (not x1243)) (and (=> x2289 x1831) (=> (and (and (= x3012 (x1736 64 x1763 100)) (= x983 (= 255 x197)) (= (x312 255 x3063) x498) (= x3063 (+ 1 x1763)) (= (x312 255 x3063) x197) (= x598 (x2824 x3012))) (not x2289)) (and (=> x983 x1279) (=> (and (and (= x1981 (= x146 255)) (= x2957 (x2824 x2517)) (= x1052 (+ x197 1)) (= x146 (x312 255 x1052)) (= (x312 255 x1052) x3430) (= (x1736 64 x197 100) x2517)) (not x983)) (and (=> x1981 x2383) (=> (and (and (= x1213 (x312 255 x3405)) (= (= 255 x1684) x962) (= x1684 (x312 255 x3405)) (= x3405 (+ 1 x146)) (= x1579 (x1736 64 x146 100)) (= x2977 (x2824 x1579))) (not x1981)) (and (=> x962 x332) (=> (and (and (= (+ x3490 31) x604) (= x2797 128) (= (x312 255 x2620) x194) (= 0 x1700) (= (x2824 x1886) x1287) (= x1886 (x1736 64 x1684 100)) (= x466 (x312 255 x2620)) (= (> x3490 x604) x2794) (= x2620 (+ 1 x1684))) (not x962)) (and (=> x2794 x2969) (=> (and (not x2794) (= x3452 (< x604 x3490))) (and (=> (and x3452 (and (= x2105 100) (= x2836 false) (= true x94))) x3517) (=> (and (and (= (< x2924 x3490) x2446) (= (x2292 128) x2924)) (not x3452)) (and (=> (and x2446 (and (= x2105 100) (= false x2214) (= true x3314))) x3517) (=> (and (= x2408 (= x3490 0)) (not x2446)) (and (=> (and (= x710 512) x2408) x2320) (=> (and (not x2408) (and (= x3509 (+ x3104 480 x1823)) (= x1823 (* (ite (= 0 x3104) 1 0) 32)) (= (+ x3509 x3490) x3168) (= x3104 (x312 31 x3490)) (or (= x1823 0) (= 32 x1823)) (= (+ x3104 128 x1469) x2610) (= (< x3509 x3168) x841) (= (* (ite (= x3104 0) 1 0) 32) x1469) (or (= x1469 32) (= x1469 0)))) (and (=> (and (not x841) (= x1204 x3509)) x3523) (=> x841 x878))))))))))))))))))) (=> x1243 x1574))) (=> x3585 x3655))) (=> x2380 x1360))))) (=> x3007 x2969))) (=> x3646 x2969))) (=> x143 x2969))))) (=> x2739 x3724))))))) (=> (and x1667 (= (= x2848 255) x3331)) (and (=> x3331 x3724) (=> (and (and (= (x312 255 x2148) x3581) (= (x2372 x373) x2353) (= (x1736 64 x2848 36) x373) (= x3199 (= 255 x3496)) (= x3496 (x312 255 x2148)) (= x2148 (+ x2848 1))) (not x3331)) (and (=> x3199 x3539) (=> (and (and (= (= x2986 0) x112) (= (x312 255 x2551) x2612) (= x2551 (+ 1 x3496)) (= x3576 128) (= (x1858 x28) x2986) (= x3222 (x1736 64 x3496 100)) (= (x2824 x3222) x3651) (= x3320 (x312 255 x2551))) (not x3199)) (and (=> (and (and (= false x1392) (= x2105 0) (= true x902)) x112) x3517) (=> (and (and (or (and (and (= x1808 x807) (= x279 x2031) (= x871 x1616) (= x560 x1897) (= x3771 x1540) (= x2149 x2554) (= x3226 x3185) (= x1780 x2514) (= x3481 x3117)) (not x496)) (and (and (= x3690 x3481) (= x3226 x1077) (= x871 x1982) (= x971 x807) (= x1540 x3191) (= x2478 x2514) (<= x355 4294967295) (= x1139 (x1878 x28)) (= x671 (x1878 x1379)) x630 (= x630 (<= x671 (x3498 x1379))) (= x279 x2049) (= x3525 x560) (= x1446 (= (x3498 x28) x1139)) x1446 (= x172 x2554)) x496)) (= x496 (< 0 x1626))) (not x112)) x436)))))))))))
(assert (x1594 x3049))
(assert (= (or x2624 x2412 x1305) x1954))
(assert (= (or x990 x2602) x3271))
(assert (x1594 x2797))
(assert (x1594 x1830))
(assert (= (x2902 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445)) x2515))
(assert (x1594 x384))
(assert (=> (>= 10000 x985) (= 0 (x1601 x985))))
(assert (= (x2399 (x1736 64 x1849 100)) 64))
(assert (x1594 x1469))
(assert (x804 x2409))
(assert (x1594 x3613))
(assert (= (and x1498 (not x3578)) x3309))
(assert (=> (>= 10000 x426) (= (x1601 x426) 0)))
(assert (x1594 x3680))
(assert (= 64 (x2399 (x1736 64 x128 100))))
(assert (not (x1103 (x1736 64 x756 100))))
(assert (= x1888 (=> (and (= true x446) (= x3378 36) (= false x351)) x2979)))
(assert (= (and x2249 (not x313)) x101))
(assert (= (x1069 (x1544 x2647 x350 x3756 x48 x864 x1563)) x350))
(assert (x1594 x1066))
(assert (= x1362 (or x3194 x1542)))
(assert (x1594 x1597))
(assert (x804 x2561))
(assert (x136 x2338 256))
(assert (= 100 (x1067 (x1736 64 x1800 100))))
(assert (< (x1736 x2210 x2072 x2420) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1227 (and x992 x3534)))
(assert (= x2015 (and x2795 (not x2454))))
(assert (x1594 x3470))
(assert (x1594 x2358))
(assert (= 0 (x1601 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (x1594 x564))
(assert (x1594 x1040))
(assert (< (x1736 64 x3618 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1736 64 x1337 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2537))
(assert (x2631 x2683))
(assert (= x290 (and x1432 x711)))
(assert (> (x1736 64 x900 36) 10000))
(assert (x1594 x1493))
(assert (=> (>= 10000 x1249) (= (x1601 x1249) 0)))
(assert (x1594 x3223))
(assert (=> (<= x2716 10000) (= (x1601 x2716) 0)))
(assert (= (or x2723 x2355) x1129))
(assert (=> (<= x1563 10000) (= (x1601 x1563) 0)))
(assert (x804 32))
(assert (x1594 x3743))
(assert (= x2302 (x1069 (x1736 64 x2302 100))))
(assert (not (x1103 (x1736 64 x146 100))))
(assert (not (x1103 (x1736 64 x2628 11))))
(assert (x1594 x2005))
(assert (x1594 x145))
(assert (x1594 x3240))
(assert (x1594 x462))
(assert (=> (<= x3614 10000) (= (x1601 x3614) 0)))
(assert (x1594 x3519))
(assert (x1594 x1451))
(assert (x1594 x3274))
(assert (= x335 (or x1089 x2885)))
(assert (= x3756 (x1067 (x1544 x2647 x350 x3756 x48 x864 x1563))))
(assert (= (x1736 x2210 x2072 x2420) (x1601 (x1736 x2210 x2072 x2420))))
(assert (x136 x2336 32))
(assert (> (x1736 64 x1684 100) 10000))
(assert (x1594 x1714))
(assert (x1594 x2149))
(assert (x136 x2742 256))
(assert (x1594 x284))
(assert (x1594 x2750))
(assert (= x3672 (=> (and (= x2808 x2244) (= x3109 x2316)) x2463)))
(assert (=> (>= 10000 x2323) (= 0 (x1601 x2323))))
(assert (x1594 x3565))
(assert (=> (>= 10000 x3597) (= 0 (x1601 x3597))))
(assert (> (x1736 x2407 x2773 x2613) 10000))
(assert (=> (>= 10000 x3097) (= (x1601 x3097) 0)))
(assert (x1594 x2961))
(assert (= (x1601 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) (x1544 x2210 x2928 x3153 x1941 x198 x2202)))
(assert (= x1338 (and x1770 x1362)))
(assert (> (x1736 64 x466 12) 10000))
(assert (x1594 x1611))
(assert (> (x1736 64 x1724 100) 10000))
(assert (< (x1736 64 x3614 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2115))
(assert (x1594 x2207))
(assert (= x1294 (=> (and (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2053) x1658) (= (x104 x3147) x3397) (= (x3143 (+ x3553 x3223)) x1411) (= x3361 (> x3397 0)) (= x582 (x3143 (+ 32 x3685))) (= x2053 (x3143 (+ x3223 31))) (= (x3143 (+ 32 x3147)) x176) (= (x3143 (+ 32 x582)) x3649) (= x3571 (x2127 (- x1208 x3023))) (= x1208 (x3143 (+ x3553 x1658))) (= (x3143 (+ 32 x1208)) x3532)) (and (=> (and x3361 (and (= x2513 (x1933 x176)) (= (> x3397 32) x358))) (and (=> (not x358) x828) (=> (and (and (= x1340 (> x3397 64)) (= (x3143 (+ 32 x176)) x2485) (= (x1309 x2485) x3267) (= x3367 (x3143 (+ 32 x3532)))) x358) (and (=> (not x1340) x828) (=> (and (and (= (x2730 x3656) x3473) (= x2956 (> x3397 96)) (= (x3143 (+ 64 x3532)) x3250) (= x3656 (x3143 (+ 64 x176)))) x1340) (and (=> x2956 x2629) (=> (not x2956) x828))))))) (=> (not x3361) x828)))))
(assert (x136 x579 256))
(assert (x2631 x2625))
(assert (x3740 x504))
(assert (x1594 x2714))
(assert (= (x1067 (x1736 64 x128 100)) 100))
(assert (x1594 x113))
(assert (= x2827 (and x1655 x3228)))
(assert (< (x1736 64 x2525 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1895))
(assert (x1594 x2712))
(assert (=> (>= 10000 x1941) (= 0 (x1601 x1941))))
(assert (x1594 x1779))
(assert (= x2407 (x2399 (x1908 x2407 x2216 x3307 x2212 x3675))))
(assert (=> (>= 10000 x2302) (= (x1601 x2302) 0)))
(assert (x1594 x1382))
(assert (x3740 x3412))
(assert (=> (>= 10000 x3743) (= 0 (x1601 x3743))))
(assert (= (and x178 x1275) x2249))
(assert (x1594 x1765))
(assert (= x734 (x1067 (x1908 x2647 x3684 x734 x3114 x2475))))
(assert (x1594 x1900))
(assert (= 64 (x2399 (x1736 64 x3538 100))))
(assert (x1594 x2302))
(assert (x1594 x2937))
(assert (x1594 x793))
(assert (= (x1069 (x1736 64 x2226 100)) x2226))
(assert (= (x1870 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) x1022))
(assert (x1594 x2428))
(assert (x1594 x237))
(assert (x136 x3390 256))
(assert (= x3614 (x1069 (x1736 64 x3614 100))))
(assert (not (x1103 (x1736 64 x1691 100))))
(assert (x136 x1493 256))
(assert (= x2291 (and (not x1321) x3286)))
(assert (x1594 x443))
(assert (= x2162 (and x2768 (not x2842))))
(assert (= (and x923 x2652) x484))
(assert (< 10000 (x1736 64 x2165 (ite (<= x609 32) x2444 (ite (>= 64 x609) x2952 (ite (<= x609 96) x614 (ite (>= 128 x609) x2468 (ite (>= 160 x609) x1672 (ite (>= 192 x609) x2785 (ite (>= 224 x609) x2725 x2330))))))))))
(assert (x1594 x764))
(assert (not (x1103 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904))))
(assert (not (x1103 (x1736 64 x1676 100))))
(assert (x1594 x2546))
(assert (x1594 x2054))
(assert (x1594 x1450))
(assert (not (x1103 (x1736 64 x1049 2))))
(assert (x1880 (ite (= x2097 0) 1 0)))
(assert (x1594 x1634))
(assert (=> (<= x1445 10000) (= 0 (x1601 x1445))))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= x2762 (and x2086 (not x3225))))
(assert (x136 x2439 256))
(assert (x2365 x2918))
(assert (x1594 x2775))
(assert (not (x1103 (x1736 64 x428 100))))
(assert (x1594 x3110))
(assert (x1594 x329))
(assert (= (and x757 x2693) x3169))
(assert (x1594 x3509))
(assert (x1594 x2921))
(assert (x2365 x2198))
(assert (= x1859 (and x2664 x2362)))
(assert (x1594 x408))
(assert (x1594 x2157))
(assert (= (and x581 (not x71)) x3591))
(assert (x1594 x3382))
(assert (x1594 x2363))
(assert (= x1817 (and (not x573) x544)))
(assert (=> (>= 10000 x3771) (= 0 (x1601 x3771))))
(assert (= 64 (x2399 (x1736 64 x1337 100))))
(assert (x1594 x810))
(assert (x1594 x1929))
(assert (< (x1908 x2647 x3684 x734 x3114 x2475) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x1595))
(assert (not (x1103 (x1908 x2407 x2216 x3307 x2212 x3675))))
(assert (x1594 x417))
(assert (= x990 (and x717 x3308)))
(assert (x1594 x607))
(assert (= x2175 (or (and x1140 x1981) (and x994 x3471))))
(assert (x2365 x2267))
(assert (x1594 x726))
(assert (> (x1736 64 x3446 36) 10000))
(assert (= 64 (x2399 (x1736 64 x1684 100))))
(assert (= (x1069 (x1736 64 x2165 (ite (= 0 x2647) x2018 (ite (>= 32 x2647) x921 (ite (>= 64 x2647) x1385 (ite (<= x2647 96) x889 (ite (<= x2647 128) x337 (ite (<= x2647 160) x1348 (ite (>= 192 x2647) x2720 (ite (<= x2647 224) x1996 x3743)))))))))) x2165))
(assert (= (=> (and (= (x3143 (+ x1028 32)) x1727) (= x668 (x3143 (+ x3245 x813))) (= x1576 (x3203 x1028)) (= (x3143 (+ 32 x3238)) x1440) (= x899 (x2127 (- x3238 x3461))) (= (x3143 (+ x3499 x3245)) x3238) (= x3499 (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x31)) (= x2729 (x3143 (+ x1037 32))) (= (> x1576 0) x1647) (= (x3143 (+ x813 31)) x31) (= (x3143 (+ x3243 32)) x1037)) (and (=> (not x1647) x2655) (=> (and x1647 (and (= x1767 (x872 x1727)) (= (< 32 x1576) x923))) (and (=> (and x923 (and (= x3612 (x262 x2287)) (= x576 (> x1576 64)) (= (x3143 (+ 32 x1727)) x2287) (= x1863 (x3143 (+ x1440 32))))) (and (=> (not x576) x2655) (=> (and x576 (and (= x3368 (x3143 (+ 64 x1727))) (= x503 (< 96 x1576)) (= x93 (x3737 x3368)) (= x404 (x3143 (+ x1440 64))))) (and (=> (not x503) x2655) (=> x503 x2733))))) (=> (not x923) x2655))))) x3241))
(assert (x1594 x1014))
(assert (x1594 x515))
(assert (=> (>= 10000 x2628) (= (x1601 x2628) 0)))
(assert (= (and x220 (not x2351)) x249))
(assert (= (and x3452 x2984) x909))
(assert (x1594 x1352))
(assert (x1594 x1439))
(assert (= x3088 (x1067 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984))))
(assert (= (and x2706 (not x2239)) x2441))
(assert (x1594 x176))
(assert (= x3770 (and x2454 x2795)))
(assert (x1594 x2171))
(assert (x1594 x169))
(assert (=> (<= x1676 10000) (= (x1601 x1676) 0)))
(assert (x3740 x3145))
(assert (not (x1103 (x1736 64 x1724 100))))
(assert (=> (>= 10000 x756) (= 0 (x1601 x756))))
(assert (= 64 (x2399 (x1736 64 x1408 100))))
(assert (x1594 x954))
(assert (< 10000 (x1544 x2210 x2928 x3153 x1941 x198 x2202)))
(assert (= (x1601 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)))
(assert (x136 x1475 256))
(assert (x1880 (ite (= 0 x1366) 1 0)))
(assert (x1594 x813))
(assert (=> (>= 10000 x2264) (= (x1601 x2264) 0)))
(assert (x1880 x2900))
(assert (not (x1103 (x1736 64 x1684 100))))
(assert (< 10000 (x1736 64 x2458 7)))
(assert (x1594 x1962))
(assert (x1594 x3486))
(assert (= 100 (x1067 (x1736 64 x842 100))))
(assert (= (x1601 (x1736 x2647 x1474 x2342)) (x1736 x2647 x1474 x2342)))
(assert (= x1237 (and x3037 (not x722))))
(assert (= (or x3217 (and (not x1480) x445)) x1312))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3496 100)))
(assert (x1594 x3653))
(assert (= x80 (or x2152 x3391)))
(assert (x1594 x2838))
(assert (= (and (not x3136) x3365) x2723))
(assert (= x1632 (and x166 (not x496))))
(assert (x1594 x2288))
(assert (x1594 x2635))
(assert (x1594 x1545))
(assert (x1594 x2918))
(assert (= (x2902 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)) x103))
(assert (x136 x2183 256))
(assert (not (x1103 (x1736 64 x1595 100))))
(assert (x1594 x2680))
(assert (x1594 x2344))
(assert (= 64 (x2399 (x1736 64 x2848 2))))
(assert (x1594 x3518))
(assert (x136 x239 256))
(assert (= x750 (x3383 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (= (x1069 (x1736 64 x1763 100)) x1763))
(assert (x1594 x907))
(assert (x1594 x2442))
(assert (=> (<= x2226 10000) (= 0 (x1601 x2226))))
(assert (x1594 x1702))
(assert (x1594 x959))
(assert (x1594 x3300))
(assert (x1594 x2449))
(assert (x1594 x3603))
(assert (= (and x2351 x220) x154))
(assert (x1594 x803))
(assert (x1594 x266))
(assert (x3740 x3712))
(assert (x1594 x2600))
(assert (=> (>= 10000 x317) (= 0 (x1601 x317))))
(assert (x1594 x700))
(assert (x1594 x1726))
(assert (= (x1067 (x1736 64 x2231 12)) 12))
(assert (x1594 x1213))
(assert (=> (>= 10000 x744) (= (x1601 x744) 0)))
(assert (= 64 (x2399 (x1736 64 x3549 100))))
(assert (x136 x3145 256))
(assert (x1594 x319))
(assert (x1594 x3402))
(assert (= (x1736 64 x1685 6) (x1601 (x1736 64 x1685 6))))
(assert (x3740 x577))
(assert (= x985 (x843 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (= x2591 (and x1884 (not x3664))))
(assert (= (x2902 (x1544 x2407 x3469 x440 x2964 x2533 x3572)) x3572))
(assert (x1594 x1046))
(assert (x1594 x844))
(assert (= (and x1155 x3728) x551))
(assert (x1594 x1928))
(assert (=> (>= 10000 x1942) (= (x1601 x1942) 0)))
(assert (x2365 x2338))
(assert (x136 x2505 256))
(assert (x136 x2170 300))
(assert (x804 x3558))
(assert (x804 x315))
(assert (= x984 (x241 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984))))
(assert (= (x1601 (x1736 64 x2848 2)) (x1736 64 x2848 2)))
(assert (x1594 x1472))
(assert (> (x1908 x2210 x3341 x3067 x3026 x1942) 10000))
(assert (x2365 x3412))
(assert (x804 x3718))
(assert (x1594 x3411))
(assert (x1594 x542))
(assert (= (=> (and (and (= (x137 608) x890) (= x3175 (not (< 128 x813))) (= (x3143 (+ 96 x3245)) x2388)) x3175) x3241) x1153))
(assert (< (x1736 64 x3325 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2475))
(assert (x1594 x3392))
(assert (= x935 (and (not x3505) x1048)))
(assert (x1594 x971))
(assert (x1594 x2997))
(assert (x804 x3595))
(assert (=> (<= x2124 10000) (= (x1601 x2124) 0)))
(assert (= (x1736 64 x3683 100) (x1601 (x1736 64 x3683 100))))
(assert (x1594 x739))
(assert (x1594 x2433))
(assert (x136 x2084 256))
(assert (x955 32 (ite (= x2097 0) 1 0)))
(assert (= 64 (x2399 (x1736 64 x3733 36))))
(assert (= (x1069 (x1908 x2647 x3684 x734 x3114 x2475)) x3684))
(assert (= x2210 (x2399 (x1736 x2210 x2072 x2420))))
(assert (x136 x2297 256))
(assert (= (and x2242 x818) x1020))
(assert (x3085 x577))
(assert (x1594 x1997))
(assert (x1594 x984))
(assert (< (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2738))
(assert (x1594 x2023))
(assert (=> (>= 10000 x213) (= (x1601 x213) 0)))
(assert (x1594 x2883))
(assert (x2365 x2620))
(assert (x1594 x210))
(assert (= x2681 (and x994 (not x3471))))
(assert (= (x2399 (x1736 64 x3303 100)) 64))
(assert (x1594 x1410))
(assert (= x30 (and x26 (not x1774))))
(assert (x1594 x139))
(assert (x1594 x776))
(assert (=> (<= x399 10000) (= (x1601 x399) 0)))
(assert (x136 x1151 32))
(assert (x1594 x608))
(assert (x804 x243))
(assert (x1594 x3132))
(assert (= x1884 (or (and x3441 (not x3342)) x1873)))
(assert (=> (>= 10000 x2212) (= (x1601 x2212) 0)))
(assert (x2631 x3231))
(assert (< (x1908 x2407 x2216 x3307 x2212 x3675) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x2399 (x1736 64 x1676 100))))
(assert (x804 x423))
(assert (x2365 x3712))
(assert (= x1447 (and x2531 x380)))
(assert (x1594 x2307))
(assert (= 0 (x1601 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x1594 x2977))
(assert (x1594 x1249))
(assert (> (x1736 64 x197 100) 10000))
(assert (x1594 x519))
(assert (x1594 x1366))
(assert (x1594 x1897))
(assert (x1594 x2135))
(assert (x2365 x2414))
(assert (x136 x2414 256))
(assert (x1594 x3367))
(assert (= (x1067 (x3512 x609 x2437 x726 x1997)) x726))
(assert (= (x2399 (x1736 64 x3435 100)) 64))
(assert (x1594 x3658))
(assert (x1594 x1202))
(assert (= (and x2762 (not x1021)) x2055))
(assert (not (x1103 (x1736 x2647 x1474 x2342))))
(assert (x1594 x864))
(assert (x1594 x1783))
(assert (not (x1103 (x1736 64 x3614 100))))
(assert (< 10000 (x1736 64 x3496 100)))
(assert (= (x1544 x609 x515 x1745 x744 x2405 x1350) (x1601 (x1544 x609 x515 x1745 x744 x2405 x1350))))
(assert (x1594 x2772))
(assert (x1594 x128))
(assert (x1594 x1363))
(assert (= (x1601 (x3512 x2407 x3607 x800 x55)) (x3512 x2407 x3607 x800 x55)))
(assert (= (x2399 (x3512 x609 x2437 x726 x1997)) x609))
(assert (= (x1067 (x1544 x1758 x1403 x3597 x359 x130 x2512)) x3597))
(assert (= (x1736 64 x128 100) (x1601 (x1736 64 x128 100))))
(assert (x1594 x2741))
(assert (x1594 x1295))
(assert (x175 x1930))
(assert (= (and x1912 (not x265)) x522))
(assert (x1594 x934))
(assert (=> (<= x3459 10000) (= (x1601 x3459) 0)))
(assert (x1594 x2151))
(assert (x1594 x2411))
(assert (x1594 x554))
(assert (= (x1601 (x1736 64 x3381 100)) (x1736 64 x3381 100)))
(assert (x1594 x234))
(assert (x1594 x2625))
(assert (x1594 x1474))
(assert (x1594 x3733))
(assert (x2365 x579))
(assert (= x3333 (or x774 x2807 x2704)))
(assert (> (x1736 64 x3057 36) 10000))
(assert (=> (>= 10000 x440) (= (x1601 x440) 0)))
(assert (x1594 x197))
(assert (= 100 (x1067 (x1736 64 x1763 100))))
(assert (= (x1601 (x1736 64 x2302 100)) (x1736 64 x2302 100)))
(assert (> (x1736 64 x3733 36) 10000))
(assert (x1594 x1388))
(assert (x1594 x1995))
(assert (x1594 x2087))
(assert (not (x1103 (x1736 64 x1763 100))))
(assert (x1594 x1077))
(assert (x804 x232))
(assert (x1594 x3061))
(assert (= x324 (and (not x863) x2441)))
(assert (x804 x2588))
(assert (x2631 x353))
(assert (x1594 x192))
(assert (= x1646 (or (and x926 x2063) (and x2740 x395))))
(assert (=> (<= x131 10000) (= 0 (x1601 x131))))
(assert (not (x1103 (x1736 64 x900 36))))
(assert (x1594 x2742))
(assert (x1594 x1291))
(assert (= (x843 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487)) x972))
(assert (< (x1736 64 x3057 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x198) (= (x1601 x198) 0)))
(assert (x1103 1341992515))
(assert (x2365 x2061))
(assert (= 36 (x1067 (x1736 64 x3565 36))))
(assert (not (x1103 (x1736 64 x3538 100))))
(assert (x1594 x744))
(assert (x2365 x192))
(assert (x1594 x1070))
(assert (=> (>= 10000 x1382) (= (x1601 x1382) 0)))
(assert (x3740 x934))
(assert (x1594 x2928))
(assert (x1594 x2995))
(assert (x1594 x500))
(assert (=> (<= x1849 10000) (= (x1601 x1849) 0)))
(assert (x1594 x1812))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 x1758 x1288 x2582)))
(assert (= (and x2291 x626) x256))
(assert (= (and x1026 x2550) x3686))
(assert (= x3307 (x1067 (x1908 x2407 x2216 x3307 x2212 x3675))))
(assert (=> (<= x2278 10000) (= 0 (x1601 x2278))))
(assert (= 64 (x2399 (x1736 64 x3518 100))))
(assert (x1594 x3092))
(assert (> (x1736 x2647 x1474 x2342) 10000))
(assert (= x1141 (and (not x2739) x1429)))
(assert (= (x1601 (x1544 x2647 x350 x3756 x48 x864 x1563)) (x1544 x2647 x350 x3756 x48 x864 x1563)))
(assert (x804 x3145))
(assert (x1594 x743))
(assert (= (x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x136 x1973 256))
(assert (x3740 x3063))
(assert (= (and (not x2904) x2477) x818))
(assert (x1594 x1809))
(assert (x2631 x704))
(assert (x1594 x2124))
(assert (x2365 x2284))
(assert (x1594 x687))
(assert (= (x1069 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053)) x907))
(assert (x1594 x2299))
(assert (=> (<= x3209 10000) (= 0 (x1601 x3209))))
(assert (x1594 x2792))
(assert (= x3177 (and x2521 x1062)))
(assert (= x3435 (x1069 (x1736 64 x3435 100))))
(assert (x136 x343 256))
(assert (x1594 x849))
(assert (= (x1069 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x2124))
(assert (= (x1736 64 x2199 100) (x1601 (x1736 64 x2199 100))))
(assert (= 100 (x1067 (x1736 64 x2302 100))))
(assert (x1594 x2353))
(assert (= 100 (x1067 (x1736 64 x462 100))))
(assert (x1594 x1676))
(assert (< (x1736 64 x2231 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2322))
(assert (x3740 x2620))
(assert (x1594 x3697))
(assert (x2631 x3378))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2013) (= (x312 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1151) x3660) (< x2013 x3660) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639903) (<= x2013 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x3147 x2013) (<= x3660 115792089237316195423570985008687907853269984665640564039457584007913129639904) (= x490 x3660) (= x1151 (x3143 (+ x2809 31))) (>= x3660 1)) x2994) x3099))
(assert (x1594 x976))
(assert (x1594 x3151))
(assert (=> (>= 10000 x487) (= (x1601 x487) 0)))
(assert (x2365 x3558))
(assert (not (x1103 (x1736 64 x3618 100))))
(assert (= (and x2830 x505) x1677))
(assert (x1594 x1761))
(assert (= x1350 (x2902 (x1544 x609 x515 x1745 x744 x2405 x1350))))
(assert (x1594 x567))
(assert (=> (<= x769 10000) (= (x1601 x769) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x947 100)))
(assert (= x947 (x1069 (x1736 64 x947 100))))
(assert (x1594 x93))
(assert (< 10000 (x1736 64 x1692 36)))
(assert (x136 x2497 256))
(assert (x1594 x1059))
(assert (= x2161 (or (and x1522 x3416) (and x951 x539))))
(assert (= (x1736 64 x2976 36) (x1601 (x1736 64 x2976 36))))
(assert (x2090 (+ 31 x3751) 32))
(assert (= (x1069 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) x2714))
(assert (x1594 x1261))
(assert (x1594 x1681))
(assert (x1594 x2060))
(assert (x1594 x3404))
(assert (not (x1103 (x1736 64 x2525 100))))
(assert (x1594 x3245))
(assert (= 64 (x2399 (x1736 64 x3565 36))))
(assert (= (and x874 (not x1747)) x2355))
(assert (= x3419 (and x178 (not x1275))))
(assert (x1594 x2826))
(assert (x1594 x3191))
(assert (x3740 x1493))
(assert (= (x1067 (x1736 64 x3614 100)) 100))
(assert (x1594 x879))
(assert (x2365 x2742))
(assert (= x218 (and x507 x2438)))
(assert (x1594 x1658))
(assert (= (x1601 4294967295) 0))
(assert (x1594 x165))
(assert (= (x1601 1341992515) 0))
(assert (x1594 x1251))
(assert (= x1508 (=> (and (= (x3143 (+ x3553 96)) x204) (= x2914 (not (> x3223 128))) (= (x1096 608) x2346)) (and x1294 x2914))))
(assert (x804 x1637))
(assert (= (x2399 (x1544 x2647 x350 x3756 x48 x864 x1563)) x2647))
(assert (x136 x3595 256))
(assert (x1594 x2774))
(assert (x1594 x2226))
(assert (x1594 x2576))
(assert (x1594 x2323))
(assert (x136 x423 256))
(assert (x136 x3718 256))
(assert (x1594 x3334))
(assert (x804 x2084))
(assert (x1594 x1299))
(assert (x1594 x1524))
(assert (x804 x329))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2848 2)))
(assert (= x1081 (=> (and (= true x105) (= false x2528) (= 36 x3378)) x2979)))
(assert (=> (>= 10000 x1702) (= 0 (x1601 x1702))))
(assert (= 100 (x1067 (x1736 64 x756 100))))
(assert (x1594 x2788))
(assert (< 10000 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014)))
(assert (x1594 x3200))
(assert (= 64 (x2399 (x1736 64 x2413 100))))
(assert (x1594 x1937))
(assert (x1594 x2451))
(assert (x136 x2588 256))
(assert (x1594 x233))
(assert (x3740 x2982))
(assert (x1594 x2413))
(assert (x1594 x1052))
(assert (x1594 x2532))
(assert (x1594 x2948))
(assert (= (x1601 (x1736 64 x3565 36)) (x1736 64 x3565 36)))
(assert (x1594 x1414))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x146 100)))
(assert (= (and x2688 (not x3546)) x3280))
(assert (=> (<= x2802 10000) (= 0 (x1601 x2802))))
(assert (x2365 x3390))
(assert (not (x1103 (x1736 64 x2839 36))))
(assert (= (x1601 (x1736 64 x2980 36)) (x1736 64 x2980 36)))
(assert (x1594 x3263))
(assert (= x1531 (and x2688 x3546)))
(assert (= (x843 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) x384))
(assert (=> (<= x128 10000) (= 0 (x1601 x128))))
(assert (= 100 (x1067 (x1736 64 x428 100))))
(assert (x1594 x2342))
(assert (= 10 (x1067 (x1736 64 x1439 10))))
(assert (x804 x1133))
(assert (x1594 x3381))
(assert (x175 x1151))
(assert (= (x2399 (x1736 64 x317 100)) 64))
(assert (= 64 (x2399 (x1736 64 x842 100))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3205 0)))
(assert (x1594 x742))
(assert (x1594 x999))
(assert (= x3067 (x1067 (x1908 x2210 x3341 x3067 x3026 x1942))))
(assert (x1594 x3147))
(assert (x1594 x2224))
(assert (= (x1601 (x1736 64 x1408 100)) (x1736 64 x1408 100)))
(assert (x1594 x2638))
(assert (x1594 x2694))
(assert (x1594 x52))
(assert (x136 x1133 256))
(assert (x1594 x2453))
(assert (= (and x352 x290) x1425))
(assert (x1594 x703))
(assert (=> (>= 10000 x609) (= 0 (x1601 x609))))
(assert (x1594 x3612))
(assert (= (x1067 (x1736 64 x900 36)) 36))
(assert (= (and x3333 (not x1284)) x3714))
(assert (= x1155 (or x3244 x1169)))
(assert (= (and (not x2006) x772) x2229))
(assert (x1594 x3618))
(assert (= (x1067 (x1979 x2407 x907 x635 x1231 x3765 x3224 x3053)) x635))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1724 100)))
(assert (= x114 (and x2911 x1424)))
(assert (x1594 x1973))
(assert (= x864 (x1870 (x1544 x2647 x350 x3756 x48 x864 x1563))))
(assert (= x530 (and x622 x3465)))
(assert (x1594 x3221))
(assert (x1594 x1445))
(assert (x3740 x2677))
(assert (x1594 x3062))
(assert (= x2071 (or x1171 x3766)))
(assert (> (x1544 x2647 x350 x3756 x48 x864 x1563) 10000))
(assert (= x3102 (and (not x933) x709)))
(assert (= (=> (and (= x956 x1442) (= x567 x158) (= x1442 x562) (= (= 255 x2980) x3260) (= x1919 x2980) (= x1142 x956) (= x567 x1919)) (and (=> (and (and (= x2574 false) (= 36 x3378) (= true x269)) x3260) x2979) (=> (and (not x3260) (and (= x1637 (+ 1 x2980)) (= x1868 (x312 255 x1637)) (= x2487 (x312 255 x1637)) (= 32 x1602) (= 1 x976) (= x965 false) (= x945 false) (= x1402 (x2372 x2783)) (= (x1736 64 x2980 36) x2783) (= x1194 x1142))) x1698))) x3100))
(assert (x1594 x1010))
(assert (x1594 x737))
(assert (= (and x935 (not x2129)) x2152))
(assert (= 64 (x2399 (x1736 64 x197 100))))
(assert (x1594 x375))
(assert (= (x241 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)) x435))
(assert (x1594 x1127))
(assert (x3740 x2297))
(assert (= (x1601 x3704) (x1601 (+ 1 x3704))))
(assert (= x1597 (x1870 (x1979 x2647 x1299 x1585 x1221 x1597 x103 x3014))))
(assert (= 64 (x2399 (x1736 64 x3325 100))))
(assert (x1594 x694))
(assert (x1594 x2061))
(assert (= (x1601 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= (x1069 (x1736 64 x317 100)) x317))
(assert (not (x1103 (x1185 x2647 x284))))
(assert (x1594 x1894))
(assert (x1594 x2422))
(assert (= x615 (and (not x2289) x3051)))
(assert (x1594 x3690))
(assert (x1103 310283853))
(assert (=> (>= 10000 x462) (= 0 (x1601 x462))))
(assert (x2365 x3556))
(assert (x1594 x2782))
(assert (> (x1736 64 x1368 100) 10000))
(assert (< 10000 (x1736 64 x842 100)))
(assert (=> (>= 10000 x635) (= 0 (x1601 x635))))
(assert (x1594 x3675))
(assert (x1594 x2735))
(assert (x2365 x2148))
(assert (x1594 x1242))
(assert (= (x1736 64 x1800 100) (x1601 (x1736 64 x1800 100))))
(assert (x1594 x350))
(assert (x136 x2982 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2371))
(assert (x1594 x795))
(assert (= (x1736 64 x1763 100) (x1601 (x1736 64 x1763 100))))
(assert (x1594 x3654))
(assert (= x1912 (and (not x2386) x1548)))
(assert (x136 x577 32))
(assert (x1594 x2922))
(assert (x1594 x588))
(assert (x2631 x3551))
(assert (x1594 x3011))
(assert (x1103 2001815235))
(assert (x1594 x3485))
(assert (x1594 x2231))
(assert (x1594 x2253))
(assert (= x1169 (and (not x903) x3611)))
(assert (= (x843 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3)) x165))
(assert (= (and (not x380) x2531) x2319))
(assert (x1594 x179))
(assert (= x678 (x1069 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435))))
(assert (= x1684 (x1069 (x1736 64 x1684 100))))
(assert (=> (>= 10000 x1597) (= 0 (x1601 x1597))))
(assert (x1594 x3755))
(assert (x1594 x2535))
(assert (= x48 (x843 (x1544 x2647 x350 x3756 x48 x864 x1563))))
(assert (= x146 (x1069 (x1736 64 x146 100))))
(assert (x136 x2912 256))
(assert (x1594 x942))
(assert (x1594 x3301))
(assert (x1594 x1910))
(assert (x1594 x2771))
(assert (= x1548 (and (not x2637) x299)))
(assert (= x2072 (x1069 (x1736 x2210 x2072 x2420))))
(assert (x1594 x2881))
(assert (> (x1185 x2210 x1382) 10000))
(assert (x1594 x410))
(assert (=> (<= x2875 10000) (= 0 (x1601 x2875))))
(assert (> (x1736 64 x3303 100) 10000))
(assert (= (x843 (x3512 x2407 x3607 x800 x55)) x55))
(assert (= x2479 (and x1543 (not x1964))))
(assert (= (x1067 (x1736 64 x1684 100)) 100))
(assert (x1594 x2260))
(assert (x1594 x2963))
(assert (= (x1736 64 x3470 100) (x1601 (x1736 64 x3470 100))))
(assert (x2365 x2921))
(assert (x136 x2561 256))
(assert (=> (<= x130 10000) (= 0 (x1601 x130))))
(assert (< 10000 (x3512 x2407 x3607 x800 x55)))
(assert (x1594 x3571))
(assert (x136 x2776 256))
(assert (x1103 52207524433148634532707337042868834046575769438058807509068660137114659192832))
(assert (x1594 x1178))
(assert (x1594 x3055))
(assert (x1594 x314))
(assert (= x2979 (=> (and (= x3378 x1602) (= x307 x1194) (= 0 x976)) x1698)))
(assert (x1594 x2301))
(assert (x2365 x2576))
(assert (x1594 x121))
(assert (x1594 x604))
(assert (x1594 x1943))
(assert (x3740 x1637))
(assert (x804 x1783))
(assert (x804 x1517))
(assert (x1594 x3759))
(assert (= (x1736 64 x2371 100) (x1601 (x1736 64 x2371 100))))
(assert (x1594 x2066))
(assert (= (x1067 (x1736 64 x3691 100)) 100))
(assert (x1103 4076725131))
(assert (x1594 x563))
(assert (= x2320 (=> (and (= 480 x752) (= 480 x742) (= x3545 (= 255 x466))) (and (=> (and (and (>= 18446744073709551615 x2472) (= x3057 (x312 255 x2858)) (= x2472 (x1271 x2632)) (= x2858 (+ x466 1)) (= x2632 (x1736 64 x466 12)) (= (x312 255 x2858) x2107) (= (= x3057 255) x2700)) (not x3545)) (and (=> x2700 x2969) (=> (and (and (= (x312 255 x2267) x1368) (= (+ x3057 1) x2267) (= x3165 (= 255 x1368)) (= (x1736 64 x3057 36) x2540) (= (x2372 x2540) x1071) (= x272 (x312 255 x2267)) (= x1517 (x548 x1071 300))) (not x2700)) (and (=> x3165 x2969) (=> (and (not x3165) (and (= x3116 (x312 255 x3500)) (= (+ 1 x1368) x3500) (= (x312 255 x3500) x3538) (= x181 (x2824 x3312)) (= (= x3538 255) x2459) (= x3312 (x1736 64 x1368 100)))) (and (=> x2459 x1360) (=> (and (and (= (x2824 x918) x226) (= (x1736 64 x3538 100) x918) (= x1595 (x312 255 x343)) (= (x312 255 x343) x3653) (= (+ x3538 1) x343) (= x3164 (= 255 x1595))) (not x2459)) (and (=> x3164 x3655) (=> (and (and (= (x1736 64 x1595 100) x2509) (= x410 (x2824 x2509)) (= (x312 255 x1806) x2665) (= (+ x1595 1) x1806) (= x1713 (x312 255 x1806)) (= (= 255 x2665) x2239)) (not x3164)) (and (=> (and (not x2239) (and (= x3384 (x2824 x3126)) (= x934 (+ x2665 1)) (= x497 (x312 255 x934)) (= (x312 255 x934) x1645) (= (= x497 255) x863) (= (x1736 64 x2665 100) x3126))) (and (=> x863 x1831) (=> (and (not x863) (and (= (x1736 64 x497 100) x1011) (= (= x3614 255) x141) (= (x312 255 x737) x2263) (= x1706 (x2824 x1011)) (= x737 (+ x497 1)) (= x3614 (x312 255 x737)))) (and (=> (and (and (= (+ 1 x3614) x2918) (= (x2824 x3005) x2255) (= (= 255 x1676) x3471) (= x3005 (x1736 64 x3614 100)) (= x1676 (x312 255 x2918)) (= x2852 (x312 255 x2918))) (not x141)) (and (=> x3471 x2383) (=> (and (not x3471) (and (= (= x2302 255) x144) (= x3433 (x2824 x1437)) (= (x312 255 x3258) x2302) (= (x312 255 x3258) x2878) (= x3258 (+ 1 x1676)) (= x1437 (x1736 64 x1676 100)))) (and (=> (and (not x144) (and (= (+ x2302 1) x2997) (= x3699 (= x3435 255)) (= (x1736 64 x2302 100) x1078) (= (x312 255 x2997) x2219) (= (x2824 x1078) x509) (= x3435 (x312 255 x2997)))) (and (=> (and (and (= (x1736 64 x3435 100) x3349) (= (= x3325 255) x1341) (= x3325 (x312 255 x2758)) (= (x2824 x3349) x1538) (= x1414 (x312 255 x2758)) (= (+ x3435 1) x2758)) (not x3699)) (and (=> (and (not x1341) (and (= (x1736 64 x3325 100) x1487) (= (x3143 (+ 32 x3336)) x2910) (= x2183 (+ 1 x3325)) (not (= x710 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x3143 (+ 32 x2910)) x3294) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639584 x710)) (= x2635 (x3143 (+ 32 x3294))) (= (x3143 (+ x1126 32)) x3283) (= x2058 (x312 255 x2183)) (= x1126 (x3143 (+ 32 x1885))) (= (x3143 (+ 32 x1971)) x703) (= x940 (+ x1517 31)) (= x396 (x2127 (- x2635 x710))) (= x943 0) (< x710 x2635) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x710) (not (= x710 115792089237316195423570985008687907853269984665640564039457584007913129639584)) (= (x2824 x1487) x236) (<= x710 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3336 (x3143 (+ x712 32))) (<= x710 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3143 (+ x710 32)) x3488) (= (x2127 (- x396 32)) x3411) (= x2908 (x312 255 x2183)) (= x1885 (x3143 (+ 32 x703))) (= (x3143 (+ 32 x3488)) x1971) (= (< x940 x1517) x3559) (= x712 (x3143 (+ x3283 32))))) (and (=> x3559 x2969) (=> (and (not x3559) (= x575 (> x1517 x940))) (and (=> (and (not x575) (and (= (< x2240 x1517) x1774) (= x2240 (x268 x710)))) (and (=> (and (= (= 0 x1517) x2943) (not x1774)) (and (=> (and (not x2943) (and (= (* (ite (= 0 x1366) 1 0) 32) x174) (= x2411 (* (ite (= x1366 0) 1 0) 32)) (= x23 (x3143 (+ x1366 x2635))) (= (x3143 (+ x1856 x174)) x687) (= (x3143 (+ x710 x1366)) x1856) (= (< x1033 x3462) x507) (= (x312 31 x1517) x1366) (or (= 0 x2411) (= 32 x2411)) (= (x3143 (+ x23 x2411)) x1033) (= (x3143 (+ x1517 x1033)) x3462) (or (= 0 x174) (= 32 x174)))) (and (=> (and (not x507) (= x2854 x1033)) x398) (=> x507 x1443))) (=> (and (and (<= x2635 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2635)) (not (= x2635 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x3251 (x3143 (+ x2635 32))) (> x3251 x2635) (= x3251 x2855) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2635) (= x1028 x2635) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2635)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2635)) x2943) x2991))) (=> (and x1774 (and (= x1199 true) (= (x3143 (+ x3121 32)) x3351) (= x2871 (x3143 (+ 4 x2635))) (= (x3143 (+ x3351 32)) x3237) (= x768 x2105) (= x3275 false) (= x3121 (x3143 (+ 32 x2871))) (= (x2127 (- x3237 x2635)) x768))) x3517))) (=> (and (and (= x1210 true) (= (x3143 (+ x3192 32)) x2826) (= x367 (x2127 (- x2135 x2635))) (= x367 x2105) (= x2135 (x3143 (+ x2826 32))) (= x1409 (x3143 (+ x2635 4))) (= x2880 false) (= (x3143 (+ x1409 32)) x3192)) x575) x3517))))) (=> (and (and (= 36 x2105) (= true x2662) (= false x1976)) x1341) x3517))) (=> (and (and (= x2105 36) (= x3408 false) (= x3746 true)) x3699) x3517))) (=> x144 x332))))) (=> x141 x1279))))) (=> x2239 x1574))))))))))) (=> x3545 x1883)))))
(assert (> (x1736 64 x2131 36) 10000))
(assert (= (x1736 64 x1691 100) (x1601 (x1736 64 x1691 100))))
(assert (x136 x31 32))
(assert (x1594 x2027))
(assert (x1594 x440))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1569 x2210 x678 x1900 x985 x1702 x552 x2802 x435)))
(assert (< (x1736 64 x1685 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x931 10000) (= 0 (x1601 x931))))
(assert (x1594 x3107))
(assert (not (x1103 (x1736 64 x197 100))))
(assert (x1594 x1409))
(assert (=> (>= 10000 x842) (= 0 (x1601 x842))))
(assert (x1594 x488))
(assert (= (and x3321 x503) x3757))
(assert (=> (>= 10000 x1231) (= 0 (x1601 x1231))))
(assert (x1594 x2850))
(assert (= (x1601 (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)) (x1979 x1758 x1249 x2619 x2750 x229 x2430 x1804)))
(assert (x1594 x2855))
(assert (= (x843 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984)) x3097))
(assert (x1594 x3589))
(assert (= x3504 (and (not x3331) x2227)))
(assert (x1594 x663))
(assert (= (x1069 (x1736 64 x2976 36)) x2976))
(assert (x1594 x131))
(assert (x1594 x2081))
(assert (= x1914 (or (and x2361 x1176) (and x2465 x3074))))
(assert (= x1574 (=> (and (= false x2001) (= true x3669) (= 36 x2105)) x3517)))
(assert (x2365 x1493))
(assert (x1594 x134))
(assert (x1594 x1007))
(assert (< 10000 (x1736 64 x426 6)))
(assert (x1594 x2773))
(assert (x1594 x3353))
(assert (= (x1736 64 x2628 11) (x1601 (x1736 64 x2628 11))))
(assert (= (or (and x1141 x2007) (and x1548 x2386) (and x3504 x3199) (and x465 x3666)) x3511))
(assert (< (x1736 64 x2165 (ite (<= x609 32) x2444 (ite (<= x609 64) x2952 (ite (<= x609 96) x614 (ite (<= x609 128) x2468 (ite (>= 160 x609) x1672 (ite (<= x609 192) x2785 (ite (<= x609 224) x2725 x2330)))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x2476))
(assert (=> (<= x28 10000) (= (x1601 x28) 0)))
(assert (x1594 x3352))
(assert (x1594 x2764))
(assert (< (x1736 64 x426 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2210 10000) (= 0 (x1601 x2210))))
(assert (= (x1067 (x1736 x2407 x2773 x2613)) x2613))
(assert (= (x1067 (x1736 64 x3446 36)) 36))
(assert (= x964 (and (not x3260) x2611)))
(assert (x1594 x3185))
(assert (x1594 x2210))
(assert (x804 x1930))
(assert (x1594 x3323))
(assert (x1594 x3561))
(assert (= true x416))
(assert (= (x1069 (x1736 64 x2413 100)) x2413))
(assert (=> (>= 10000 x488) (= 0 (x1601 x488))))
(assert (= (x2399 (x1736 64 x3470 100)) 64))
(assert (> (x1736 64 x3325 100) 10000))
(assert (=> (>= 10000 x2104) (= (x1601 x2104) 0)))
(assert (= x3346 (and (not x992) x3534)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1595 100)))
(assert (x3740 x1783))
(assert (x1594 x2823))
(assert (= (or (and x2794 x3278) (and x3559 x2506) (and x1696 x3646) (and x2318 x143) (and x3027 x3007) (and x70 x2700) (and x3165 x778) (and x573 x544)) x2787))
(assert (x1594 x2913))
(assert (x2631 x3024))
(assert (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (= (or x80 x2591) x2611))
(assert (x175 x835))
(assert (x1594 x1045))
(assert (x1594 x298))
(assert (x1594 x1258))
(assert (x1594 x451))
(assert (x1594 x1797))
(assert (= x2624 (and x1406 x1820)))
(assert (x1594 x3014))
(assert (x1594 x2395))
(assert (= (and (not x2822) x1718) x465))
(assert (x3740 x1580))
(assert (x1594 x523))
(assert (x3740 x3595))
(assert (= (x1601 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (x1594 x1403))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x1692 36)))
(assert (x1594 x2616))
(assert (x1594 x1965))
(assert (x1594 x3104))
(assert (x1594 x2357))
(assert (= 64 (x2399 (x1736 64 x2628 11))))
(assert (=> (>= 10000 x3538) (= 0 (x1601 x3538))))
(assert (x1594 x2264))
(assert (x1594 x2731))
(assert (x1594 x38))
(assert (= (and (not x3465) x622) x2192))
(assert (= x3302 (and x3037 x722)))
(assert (= (and x821 (not x1100)) x539))
(assert (=> (>= 10000 x2430) (= 0 (x1601 x2430))))
(assert (x1594 x3238))
(assert (=> (<= x2788 10000) (= 0 (x1601 x2788))))
(assert (= x3713 (=> (and (= x3423 x759) (= x852 x3049) (= x2680 x666) (= x2299 x3477) (= x2384 x3592) (= x3344 x182) (= x2678 x1112) (= x1466 x814) (= x501 x2970) (= x587 x2670)) x1401)))
(assert (= (x1601 (x1736 64 x3618 100)) (x1736 64 x3618 100)))
(assert (x1594 x389))
(assert (= (and x2229 (not x1273)) x1592))
(assert (x136 x1517 32))
(assert (x1594 x668))
(assert (x1594 x2729))
(assert (x3740 x2776))
(assert (x136 x3412 256))
(assert (x1594 x3583))
(assert (x1594 x2330))
(assert (=> (>= 10000 x3381) (= 0 (x1601 x3381))))
(assert (x2631 x2395))
(assert (= (x843 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445)) x2788))
(assert (x955 32 x2493))
(assert (x1594 x275))
(assert (x3740 x1052))
(assert (x1594 x3435))
(assert (x1594 x2808))
(assert (x1594 x2324))
(assert (x1594 x3447))
(assert (x1594 x2209))
(assert (x1594 x2982))
(assert (= x3013 (and x1954 (not x2190))))
(assert (x1594 x1250))
(assert (x1594 x1856))
(assert (= (and x2438 (not x507)) x1125))
(assert (= (or (and x3545 x3318) (and x3084 x522)) x3643))
(assert (x3740 x2596))
(assert (x136 x835 32))
(assert (=> (>= 10000 x3153) (= (x1601 x3153) 0)))
(assert (=> (<= x730 10000) (= 0 (x1601 x730))))
(assert (x2365 x3595))
(assert (= (or x2435 x1978 x3700) x1048))
(assert (x804 x237))
(assert (x1594 x3010))
(assert (=> (<= x1288 10000) (= 0 (x1601 x1288))))
(assert (= x2793 (x1870 (x1569 x2407 x2124 x1604 x165 x2793 x1250 x547 x3))))
(assert (x3740 31))
(assert (x1594 x1505))
(assert (x1594 x1422))
(assert (x804 x2198))
(assert (= (and (not x923) x2652) x555))
(assert (= (=> (and (= true x486) (= 36 x2105) (= false x2945)) x3517) x1831))
(assert (= x1333 (or (and x2695 x1504) (and x1016 x1586))))
(assert (= (and (not x1522) x3416) x3305))
(assert (x1103 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= (x1736 64 x3325 100) (x1601 (x1736 64 x3325 100))))
(assert (x1594 x1281))
(assert (x1594 x1307))
(assert (= x3182 (or x2423 x1239 x2015 x2028 x3111)))
(assert (x3740 x2912))
(assert (= (or (and x3305 x2500) (and x454 x781)) x109))
(assert (x1103 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (x1594 x2687))
(assert (x1594 x3440))
(assert (x3740 255))
(assert (x1594 x2053))
(assert (x804 x2776))
(assert (= 64 (x2399 (x1736 64 x1800 100))))
(assert (not (x1103 (x1736 64 x3733 36))))
(assert (x1103 53968831973089624780961702553170747426560148566936995398294956610382735605760))
(assert (x3740 x2198))
(assert (x1594 x931))
(assert (x1594 x2245))
(assert (x1594 x2404))
(assert (x1594 x562))
(assert (x804 x1076))
(assert (= 100 (x1067 (x1736 64 x1483 100))))
(assert (= 64 (x2399 (x1736 64 x2264 36))))
(assert (=> (>= 10000 x982) (= (x1601 x982) 0)))
(assert (x1594 x3395))
(assert (= x332 (=> (and (= x393 false) (= x1648 true) (= x2105 36)) x3517)))
(assert (x2365 x2497))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1908 x1758 x2820 x2323 x1705 x3459)))
(assert (x2631 x456))
(assert (x1103 52207524433148634526794681841911218724012555196680520750525547801574629179392))
(assert (x1594 x316))
(assert (= (and x1020 x1304) x1904))
(assert (= x2225 (or x1328 x114)))
(assert (x1594 x940))
(assert (x1594 x2964))
(assert (x136 x1076 32))
(assert (x1594 x3227))
(assert (x1594 x1339))
(assert (x1594 x1163))
(assert (=> (<= x1472 10000) (= 0 (x1601 x1472))))
(assert (= x436 (=> (and (= x2946 (= x1626 0)) (or (not x2946) x2946)) x3326)))
(assert (=> (>= 10000 x1049) (= 0 (x1601 x1049))))
(assert (x1594 x2851))
(assert (x1594 x3040))
(assert (= x3380 (or x808 x964)))
(assert (x1594 x3527))
(assert (= (x843 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) x1941))
(assert (x2365 x1372))
(assert (=> (<= x1561 10000) (= (x1601 x1561) 0)))
(assert (= x532 (and x3508 x2544)))
(assert (= (and x2318 (not x143)) x1696))
(assert (= x950 (=> (and (= (= x2542 0) x2158) (or x2158 (not x2158))) x2474)))
(assert (x1594 x1402))
(assert (= x2011 (and x2984 (not x3452))))
(assert (= x827 (and x2650 (not x2459))))
(assert (x1594 x3))
(assert (= (and x3667 x1327) x938))
(assert (x136 x2148 256))
(assert (x1594 x1919))
(assert (< 10000 (x3205 0)))
(assert (x1594 x1754))
(assert (= (x1601 (x1736 64 x317 100)) (x1736 64 x317 100)))
(assert (x1594 x768))
(assert (not x2398))
(assert (= (x843 (x1544 x1758 x1403 x3597 x359 x130 x2512)) x359))
(assert (x1594 x796))
(assert (= x1089 (and (not x3366) x3129)))
(assert (x1594 x2219))
(assert (x13 32))
(assert (x1594 x561))
(assert (= x2247 (x1069 (x1569 x1758 x2247 x3088 x3097 x1022 x266 x3396 x984))))
(assert (x2631 x1681))
(assert (x1594 x3462))
(assert (= 64 (x2399 (x1736 64 x2226 100))))
(assert (x1594 x2504))
(assert (x1594 x226))
(assert (= x3600 (and x2408 x2668)))
(assert (= (and x1141 (not x2007)) x2318))
(assert (x1594 x1497))
(assert (not (x1103 (x1736 64 x3565 36))))
(assert (x1594 x987))
(assert (< (x1736 64 x1049 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3512 x1758 x1741 x982 x2171) (x1601 (x3512 x1758 x1741 x982 x2171))))
(assert (x1594 x1084))
(assert (x1594 x710))
(assert (x1594 x1829))
(assert (x804 x1372))
(assert (= x842 (x1069 (x1736 64 x842 100))))
(assert (x1594 x3701))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2302 100)))
(assert (x1594 x690))
(assert (x1594 x364))
(assert (x1594 x2077))
(assert (= 36 (x1067 (x1736 64 x3733 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x3538 100)))
(assert (= (x1069 (x1544 x2210 x2928 x3153 x1941 x198 x2202)) x2928))
(assert (x804 x2183))
(assert (x1594 x3651))
(assert (x1594 x1618))
(assert (= (x843 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904)) x2012))
(assert (x1594 x2455))
(assert (= 100 (x1067 (x1736 64 x2525 100))))
(assert (= (x1736 64 x2937 36) (x1601 (x1736 64 x2937 36))))
(assert (=> (>= 10000 x466) (= 0 (x1601 x466))))
(assert (x1594 x3745))
(assert (= x1955 (or (and x2573 x2366) (and x2067 x3206) (and x444 x2055) (and x2086 x3225) (and x3773 x485) (and x3272 x1558) (and x1021 x2762) (and x2857 x3046))))
(assert (= x821 (and x1586 (not x1016))))
(assert (x804 x1806))
(assert (x1594 x871))
(assert (= x2577 (x2902 (x1569 x2647 x2714 x2431 x2012 x2686 x2577 x931 x904))))
(assert (x1594 x1407))
(assert (x2631 x3162))
(assert (x1594 x3597))
(assert (= (and x3366 x3129) x2711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3512 x2647 x2752 x986 x1472)))
(assert (x3740 x960))
(assert (not (x1103 (x1736 64 x1337 100))))
(assert (= x1838 (or x3211 x2835)))
(assert (< (x1544 x2407 x3469 x440 x2964 x2533 x3572) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1594 x54))
(assert (x1594 x2905))
(assert (= x1445 (x241 (x1569 x609 x1084 x819 x2788 x1797 x2515 x750 x1445))))
(assert (=> (>= 10000 x55) (= 0 (x1601 x55))))
(assert (= (and x612 x637) x2218))
(assert (= x2763 (or (and x2218 x1347) (and x299 x2637) (and x173 x1923) (and x2739 x1429) (and x1718 x2822) (and x2227 x3331))))
(assert (not (x1103 (x1736 64 x2264 36))))
(assert (x1594 x3195))
(assert (x804 x1475))
(assert (= (x1736 64 x428 100) (x1601 (x1736 64 x428 100))))
(assert (x175 x2982))
(assert (= x1047 (and x1063 x1720)))
(assert (x2631 x1005))
(assert (= (=> (= (= x1673 0) x2190) (and (=> (and (and (= x1590 x1485) (= x3044 x275)) (not x2190)) x1872) (=> (and (and (= x695 true) (= x3378 x2347) (= x2860 false)) x2190) x2979))) x3306))
(assert (= (x1736 64 x466 12) (x1601 (x1736 64 x466 12))))
(assert (= (x1069 (x1736 x609 x3458 x730)) x3458))
(assert (=> (<= x1595 10000) (= (x1601 x1595) 0)))
(assert (= x1288 (x1069 (x1736 x1758 x1288 x2582))))
(assert (x804 x2596))
(assert (x1594 x1967))
(assert (x1594 x1226))
(assert (not (x1103 (x1979 x2210 x2716 x1829 x972 x354 x2040 x487))))
(assert (= (or x530 x2192) x2429))
(assert (x1594 x1154))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x2980 36)))
(assert (x1594 x264))
(assert (x1594 x3584))
(assert (= (x1067 (x1736 64 x317 100)) 100))
(assert (x1594 x1780))
(assert (< (x1736 64 x131 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x270 x1340) x1217))
(assert (x2365 x476))
(assert (x1594 x1332))
(assert (x1594 x1741))
(assert (x2365 x1052))
(assert (x1594 x1482))
(assert (x1594 x2311))
(assert (x1594 x362))
(assert (x1594 x190))
(assert (= (x1736 x609 x3458 x730) (x1601 (x1736 x609 x3458 x730))))
(assert (=> (>= 10000 x2012) (= (x1601 x2012) 0)))
(assert (= (x1067 (x1736 64 x3325 100)) 100))
(assert (=> (<= x14 10000) (= (x1601 x14) 0)))
(assert (= (or (and x3271 (not x1330)) x2252) x2693))
(assert (x1594 x1442))
(assert (x1594 x3016))
(assert (x1594 x2202))
(assert (x1594 x504))
(assert (x1594 x3348))
(assert (= (and (not x3646) x1696) x3027))
(assert (x1594 x2004))
(assert (=> (>= 10000 x2964) (= 0 (x1601 x2964))))
(assert (= (=> (and (= x2093 (x3143 (+ x348 32))) (= (x2538 x970) x1163) (= x11 (not (> x2600 x2093)))) (and x11 (=> (= x2093 x2809) x3099))) x3257))
(assert (x1103 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (< (x1736 64 x2131 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x804 x2918))
(assert (x1594 x1151))
(assert (= x756 (x1069 (x1736 64 x756 100))))
(assert (=> (<= x1379 10000) (= (x1601 x1379) 0)))
(assert (x1594 x3581))
(assert (= (and (not x1923) x173) x36))
(assert (=> (>= 10000 x1987) (= (x1601 x1987) 0)))
(assert (x1594 x910))
(assert (= (=> (and (= x2241 (< 0 x3223)) (= (x3143 (+ 32 x2245)) x3553) (= x3023 (x3143 (+ 4 x490))) (= x3685 (x3143 (+ 32 x3023))) (= (x1905 480) x3223) (= x2245 (x3143 (+ 128 x3023)))) (and (=> (not x2241) x1294) (=> (and (and (= x1191 (x1848 512)) (= x214 (> x3223 32))) x2241) (and (=> (not x214) x1294) (=> (and (and (= (< 64 x3223) x2454) (= x2322 (x3143 (+ 32 x3553))) (= (x3528 544) x147)) x214) (and (=> (not x2454) x1294) (=> (and x2454 (and (= x3434 (> x3223 96)) (= x1714 (x3186 576)) (= x2562 (x3143 (+ 64 x3553))))) (and (=> x3434 x1508) (=> (not x3434) x1294))))))))) x2994))
(assert (=> (<= x3303 10000) (= 0 (x1601 x3303))))
(assert (x1594 x2002))
(assert (x136 x2677 32))
(assert (= (and (not x3545) x3318) x70))
(assert (= (x1601 (x1736 64 x197 100)) (x1736 64 x197 100)))
(assert (x1594 x2754))
(assert (x1594 x1813))
(assert (= (and x3309 x1259) x3345))
(assert (= x1800 (x1069 (x1736 64 x1800 100))))
(assert (x3740 x3500))
(assert (x1594 x3243))
(assert (=> (>= 10000 x3307) (= (x1601 x3307) 0)))
(assert (x1594 x32))
(assert (x1594 x2912))
(assert (= (x1601 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) (x1979 x609 x412 x1754 x384 x2566 x3209 x488)))
(assert (= x3325 (x1069 (x1736 64 x3325 100))))
(assert (= x2407 (x2399 (x1185 x2407 x2321))))
(assert (= (x1601 (x1736 64 x1337 100)) (x1736 64 x1337 100)))
(assert (x1594 x1350))
(assert (x2365 x2588))
(assert (x1594 x930))
(assert (x1594 x323))
(assert (x1594 x3226))
(assert (x2631 x355))
(assert (= (x1736 64 x3691 100) (x1601 (x1736 64 x3691 100))))
(assert (x1594 x3525))
(assert (= (=> (and (= (= 3 x2144) x1770) (not x2936) (= x2481 (x1858 x1379)) (>= 1461501637330902918203684832716283019655932542975 x1007) (= x1379 x1007) (not x148) x1530 (= (+ 1 x2976) x579) (= (= x2976 255) x148) (not x2727) (<= x56 127) (= x2990 160) (= x164 x1363) (= (= x3301 x2948) x1530) (= x2727 (= x1410 0)) (= x3394 (= x2144 2)) (= x2144 (x2372 x447)) (= x3355 (x312 255 x579)) (<= x2976 255) (not x2847) (<= 1 x1007) (= (= x2144 1) x2936) (>= 127 x56) (= x3162 36) (= false x848) (= x1049 (x312 255 x579)) (= false x2843) (= x447 (x1736 64 x2976 36)) (= 3628442803 x344) (= x2847 (= x3680 x1007)) (<= 1 x2481) (not x571) (= x571 (= 0 x2144)) (not x3394) (>= 1461501637330902918203684832716283019655932542975 x1007) (= x700 97822624453686575479804928673988797637476738513438931194560248106084831592448)) (and (=> (and x1770 (= x202 (= x1049 255))) (and (=> (and (and (= (x312 255 x1133) x2536) (= x1133 (+ x1049 1)) (= x3010 (x2372 x2634)) (= x3303 (x312 255 x1133)) (= x1840 (= 255 x3303)) (= x2634 (x1736 64 x1049 36))) (not x202)) (and (=> x1840 x1888) (=> (and (and (= (+ 1 x3303) x2469) (= (x312 255 x2469) x517) (= x2709 (x1736 64 x3303 100)) (= x3221 (x1858 x3301)) (= (x2824 x2709) x3487) (= x2023 128) (= x3468 (x312 255 x2469)) (= (= 0 x3221) x2006)) (not x1840)) (and (=> (and x2006 (and (= 0 x3378) (= false x386) (= true x494))) x2979) (=> (and (not x2006) (and (or (and x1273 (and (= x1045 x2560) (= x866 (x342 x3301)) x1844 (= (x342 x1379) x823) (= (>= (x287 x1379) x823) x3721) (>= 4294967295 x1038) x3721 (= x1844 (= (x287 x3301) x866)))) (and (= x307 x2560) (not x1273))) (= (> x238 0) x1273))) x1383))))) (=> x202 x2784))) (=> (and (= x3036 (= x2144 4)) (not x1770)) (and (=> (and x3036 (= x2085 (= 255 x1049))) (and (=> x2085 x2784) (=> (and (not x2085) (and (= (+ 1 x1049) x2497) (= x3021 (x1736 64 x1049 36)) (= x1297 (x312 255 x2497)) (= (= x3381 255) x2965) (= x2667 (x2372 x3021)) (= x3381 (x312 255 x2497)))) (and (=> x2965 x1888) (=> (and (and (= (+ x3381 1) x1493) (= x227 (x312 255 x1493)) (= (x2824 x385) x1816) (= x3662 (= x1692 255)) (= (x312 255 x1493) x1692) (= x385 (x1736 64 x3381 100))) (not x2965)) (and (=> x3662 x2781) (=> (and (not x3662) (and (= (+ 1 x1692) x2921) (= 128 x1295) (= x2584 (x342 x3301)) (= (x312 255 x2921) x2126) (= x916 (x342 x1379)) (= x2344 (x312 255 x2921)) (= x3443 (< (+ x2667 x2584) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x728 (x1736 64 x1692 36)) (= x1026 (and x3443 x3537)) (= x3537 (<= x2667 x916)) (= (x2372 x728) x2204))) (and (=> (and (and (= x300 x307) (= 0 x123) (= 0 x3334)) (not x1026)) x1329) (=> (and (and (and (= x1261 (x342 x1379)) (= (x1098 x3301) x2636) (= x3602 x1726) (<= 0 x3602) (<= x3602 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x276 (< 0 x810)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2667 x2636)) (= x3602 (+ x2636 x2667)) (= x302 (- x1261 x2667))) (or (and (and (= x2775 x2250) (= x2585 (= x2077 (x963 x3301))) (= x1324 (x1189 x1379)) x2585 x1489 (= (>= (x963 x1379) x1324) x1489) (= x2077 (x1189 x3301)) (>= 4294967295 x456)) x276) (and (not x276) (= x307 x2250)))) x1026) x2815))))))))) (=> (and (not x3036) (= x1473 (= 5 x2144))) (and (=> (and (= (= x1049 255) x1583) x1473) (and (=> (and (not x1583) (and (= x3603 (x312 255 x3145)) (= (x1736 64 x1049 36) x3379) (= x1555 (= 255 x426)) (= x426 (x312 255 x3145)) (= x1787 (x2372 x3379)) (= (+ 1 x1049) x3145))) (and (=> (and (and (= (x1168 x482) x2546) (= x2857 (= 255 x1561)) (= x482 (x1736 64 x426 6)) (>= 65535 x2546) (= (x312 255 x1121) x1699) (= (x312 255 x1121) x1561) (= x1121 (+ x426 1))) (not x1555)) (and (=> (and (not x2857) (and (= x2198 (+ 1 x1561)) (= x1800 (x312 255 x2198)) (= x2524 (x2372 x2141)) (= (x312 255 x2198) x455) (= (x548 x2524 300) x577) (= (= 255 x1800) x3225) (= x2141 (x1736 64 x1561 36)))) (and (=> x3225 x1639) (=> (and (not x3225) (and (= (x2824 x2799) x2712) (= x2799 (x1736 64 x1800 100)) (= x2413 (x312 255 x1783)) (= (+ 1 x1800) x1783) (= (= x2413 255) x1021) (= (x312 255 x1783) x3239))) (and (=> x1021 x1639) (=> (and (not x1021) (and (= x1765 (x312 255 x1728)) (= x45 (x2824 x1130)) (= x1130 (x1736 64 x2413 100)) (= x1728 (+ 1 x2413)) (= (= 255 x399) x444) (= x399 (x312 255 x1728)))) (and (=> (and (not x444) (and (= x2963 (x312 255 x879)) (= (x312 255 x879) x428) (= (+ 1 x399) x879) (= (= x428 255) x1752) (= x2301 (x2824 x2702)) (= (x1736 64 x399 100) x2702))) (and (=> (and (not x1752) (and (= x304 (= x462 255)) (= x462 (x312 255 x2561)) (= (x2824 x1) x3156) (= (x1736 64 x428 100) x1) (= x2561 (+ x428 1)) (= (x312 255 x2561) x376))) (and (=> (and (not x304) (and (= (x2824 x1492) x987) (= x756 (x312 255 x2284)) (= (= 255 x756) x2740) (= x3292 (x312 255 x2284)) (= (x1736 64 x462 100) x1492) (= (+ x462 1) x2284))) (and (=> (and (not x2740) (and (= (x2824 x1571) x1865) (= (+ x756 1) x237) (= x1408 (x312 255 x237)) (= (x312 255 x237) x3772) (= x2695 (= 255 x1408)) (= x1571 (x1736 64 x756 100)))) (and (=> x2695 x2959) (=> (and (and (= (x1736 64 x1408 100) x651) (= (x312 255 x2311) x2226) (= (x312 255 x2311) x3457) (= (+ 1 x1408) x2311) (= (x2824 x651) x1066) (= (= x2226 255) x643)) (not x2695)) (and (=> x643 x817) (=> (and (and (= x1973 (+ x2226 1)) (= x3697 (x312 255 x1973)) (= (x312 255 x1973) x3691) (= x3652 (x2824 x1088)) (= x1522 (= 255 x3691)) (= x1088 (x1736 64 x2226 100))) (not x643)) (and (=> (and (and (= (x312 255 x3556) x3148) (= (+ 1 x3691) x3556) (= x947 (x312 255 x3556)) (= x2480 (x2824 x58)) (= (= x947 255) x2500) (= (x1736 64 x3691 100) x58)) (not x1522)) (and (=> x2500 x3288) (=> (and (and (= x1812 (x2824 x888)) (= x2638 (x312 255 x2409)) (= x2409 (+ x947 1)) (= (< x1953 x577) x3206) (= 0 x563) (= x2231 (x312 255 x2409)) (= (x1736 64 x947 100) x888) (= 128 x2076) (= (+ x577 31) x1953)) (not x2500)) (and (=> (and (not x3206) (= x505 (< x1953 x577))) (and (=> (and x505 (and (= 100 x3378) (= false x2543) (= true x1499))) x2979) (=> (and (and (= x1321 (< x2236 x577)) (= (x47 128) x2236)) (not x505)) (and (=> (and x1321 (and (= x3378 100) (= x2973 false) (= x2906 true))) x2979) (=> (and (= (= 0 x577) x626) (not x1321)) (and (=> (and (not x626) (and (or (= x2504 32) (= x2504 0)) (= x1500 (* 32 (ite (= 0 x2097) 1 0))) (= x2097 (x312 31 x577)) (= (+ x596 x577) x457) (= x102 (+ x2097 128 x2504)) (= x2504 (* (ite (= x2097 0) 1 0) 32)) (= x596 (+ x1500 x2097 480)) (or (= 0 x1500) (= x1500 32)) (= x77 (< x596 x457)))) (and (=> (and (not x77) (= x596 x2224)) x75) (=> x77 x3594))) (=> (and (= x473 512) x626) x3415))))))) (=> x3206 x1639))))) (=> x1522 x1081))))))) (=> x2740 x2139))) (=> x304 x1203))) (=> x1752 x1916))) (=> x444 x1639))))))) (=> x2857 x1639))) (=> x1555 x1888))) (=> x1583 x2784))) (=> (and (= (= 6 x2144) x1275) (not x1473)) (and (=> (and (= x660 (= x2144 7)) (not x1275)) (and (=> (and (= (= x2144 8) x933) (not x660)) (and (=> (and (not x933) (and (= x3201 x307) (= x1049 x1317))) x491) (=> (and (= x2113 (= x1049 255)) x933) (and (=> (and (not x2113) (and (= x1957 (x1736 64 x1049 36)) (= x3008 (+ x1049 1)) (= x647 (x312 255 x3008)) (= 128 x1407) (= x1178 (x312 255 x3008)) (= x519 (x1858 x3301)) (= x3645 (x2372 x1957)) (= (= x519 0) x3228))) (and (=> (and (not x3228) (and (= (< 0 x142) x2933) (or (and (not x2933) (= x307 x1537)) (and x2933 (and (>= 4294967295 x1539) (= (x342 x3301) x2442) (= x792 (x342 x1379)) (= x2160 (<= x792 (x1452 x1379))) (= x2535 x1537) x2160 (= x3081 (= x2442 (x1452 x3301))) x3081))))) x3502) (=> (and (and (= x1627 false) (= 0 x3378) (= true x2356)) x3228) x2979))) (=> x2113 x2784))))) (=> (and x660 (= (= x1049 255) x285)) (and (=> (and (and (= x811 (x1858 x3301)) (= x2133 (= 0 x811)) (>= 1461501637330902918203684832716283019655932542975 x453) (= x1120 (x1736 64 x1049 2)) (= (+ 1 x1049) x315) (= (x312 255 x315) x2779) (= (x1205 x1120) x453) (= x1242 128) (= (x312 255 x315) x2002)) (not x285)) (and (=> (and (and (= 0 x3378) (= true x2746) (= x3460 false)) x2133) x2979) (=> (and (not x2133) (and (= x3308 (< 0 x2349)) (or (and (not x3308) (= x3385 x307)) (and (and (= (x342 x1379) x735) (<= x1251 4294967295) (= x786 (>= (x1256 x1379) x735)) (= x3385 x2115) (= (x342 x3301) x408) (= x422 (= x408 (x1256 x3301))) x786 x422) x3308)))) x4))) (=> x285 x2784))))) (=> (and (= x313 (= x1049 255)) x1275) (and (=> x313 x2784) (=> (and (and (= (x312 255 x239) x2839) (= (x312 255 x239) x743) (= x2056 (x2372 x1991)) (= x1991 (x1736 64 x1049 36)) (= x239 (+ x1049 1)) (= x3707 (= 255 x2839))) (not x313)) (and (=> (and (not x3707) (and (= (x2372 x1193) x2935) (= x1193 (x1736 64 x2839 36)) (= x1433 (x312 255 x3712)) (= x2264 (x312 255 x3712)) (= (= 255 x2264) x3075) (= x3712 (+ 1 x2839)))) (and (=> x3075 x2781) (=> (and (not x3075) (and (= (x2372 x1932) x1867) (= (= 255 x2114) x2361) (= (x312 255 x2061) x2114) (= x1950 (x312 255 x2061)) (= x1932 (x1736 64 x2264 36)) (= x2061 (+ 1 x2264)))) (and (=> x2361 x1215) (=> (and (not x2361) (and (= x406 (x312 255 x504)) (= x3723 (x312 255 x504)) (= x504 (+ 1 x2114)) (= x2375 (x1736 64 x2114 36)) (= x2394 (= 0 x1470)) (= x1470 (x1858 x3301)) (= (x2372 x2375) x3515) (= x1742 128))) (and (=> (and (and (= x2393 true) (= false x1184) (= 0 x3378)) x2394) x2979) (=> (and (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2056 x1291)) x1607) (= (x342 x1379) x2433) (= (x342 x3301) x1291) (= (>= x2433 x2056) x177) (= (and x1607 x177) x2294)) (not x2394)) (and (=> (and (and (and (<= x1966 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1966) (= (- x2738 x2056) x513) (= (x3220 x3301) x2313) (= (+ x2056 x2313) x1966) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2313 x2056)) (= x3195 x1966) (= (< 0 x2042) x1424) (= x2738 (x342 x1379))) (or (and x1424 (and x2217 (>= 4294967295 x353) (= x2217 (= (x35 x3301) x389)) (= x1258 (x2156 x1379)) (= x389 (x2156 x3301)) x3134 (= (>= (x35 x1379) x1258) x3134) (= x86 x796))) (and (= x796 x307) (not x1424)))) x2294) x365) (=> (and (and (= x307 x968) (= x3024 0) (= x1807 0)) (not x2294)) x3432))))))))) (=> x3707 x1888))))))))))))) x3144))
(assert (= (and x869 x2417) x299))
(assert (= x421 (and x2429 x2726)))
(assert (= (or (and x1462 x2085) (and x1338 x202) (and x285 x305) (and x394 x2113) (and x313 x2249) (and x1583 x2749)) x3739))
(assert (< 10000 (x1736 64 x2980 36)))
(assert (x1594 x1361))
(assert (x1594 x1629))
(assert (= x1959 (and x1156 (not x3585))))
(assert (= (x1069 (x1736 64 x2131 36)) x2131))
(assert (= (x1736 64 x1849 100) (x1601 (x1736 64 x1849 100))))
(assert (= x800 (x1067 (x3512 x2407 x3607 x800 x55))))
(assert (x804 x31))
(assert (= x2752 (x1069 (x3512 x2647 x2752 x986 x1472))))
(assert (x1594 x2755))
(assert (x1594 x490))
(assert (x1594 x2485))
(assert (x1594 x1408))
(assert (x1594 x1353))
(assert (x1594 x2793))
(assert (not (x1103 (x1736 64 x842 100))))
(assert (x3740 x2439))
(assert (x1594 x2779))
(assert (=> (<= x900 10000) (= (x1601 x900) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x497 100)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1736 64 x756 100)))
(assert (x2365 x232))
(assert (= (and x26 x1774) x3506))
(assert (= (x2399 (x1979 x609 x412 x1754 x384 x2566 x3209 x488)) x609))
(assert (= x2706 (and x827 (not x3164))))
(assert (x1594 x64))
(assert (x1594 x961))
(assert (x136 x2267 256))
(assert (x1594 x2198))
(assert (= x2323 (x1067 (x1908 x1758 x2820 x2323 x1705 x3459))))
(check-sat)
(exit)
