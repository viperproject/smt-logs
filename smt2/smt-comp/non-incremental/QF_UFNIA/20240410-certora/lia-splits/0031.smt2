(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x710 () Int)
(declare-fun x718 () Int)
(declare-fun x326 () Int)
(declare-fun x432 () Int)
(declare-fun x965 () Int)
(declare-fun x487 () Int)
(declare-fun x338 () Int)
(declare-fun x590 () Int)
(declare-fun x1224 () Int)
(declare-fun x312 () Int)
(declare-fun x122 () Int)
(declare-fun x717 () Int)
(declare-fun x1112 () Int)
(declare-fun x547 () Bool)
(declare-fun x712 () Int)
(declare-fun x1082 (Int) Int)
(declare-fun x865 () Bool)
(declare-fun x437 () Int)
(declare-fun x84 () Int)
(declare-fun x318 (Int) Int)
(declare-fun x1373 () Bool)
(declare-fun x1756 () Int)
(declare-fun x359 () Int)
(declare-fun x1552 () Int)
(declare-fun x257 () Int)
(declare-fun x477 () Int)
(declare-fun x1236 () Bool)
(declare-fun x939 () Int)
(declare-fun x234 () Int)
(declare-fun x32 () Bool)
(declare-fun x523 () Int)
(declare-fun x22 (Int) Int)
(declare-fun x815 () Int)
(declare-fun x247 () Int)
(declare-fun x1450 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1591 () Int)
(declare-fun x696 () Int)
(declare-fun x1587 () Int)
(declare-fun x936 () Int)
(declare-fun x235 () Int)
(declare-fun x54 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x836 () Int)
(declare-fun x148 () Int)
(declare-fun x26 () Int)
(declare-fun x305 () Int)
(declare-fun x887 () Int)
(declare-fun x1326 () Bool)
(declare-fun x814 () Int)
(declare-fun x1013 () Int)
(declare-fun x4 () Int)
(declare-fun x565 () Int)
(declare-fun x1758 () Int)
(declare-fun x879 () Int)
(declare-fun x1681 () Bool)
(declare-fun x895 () Int)
(declare-fun x1611 () Int)
(declare-fun x24 () Int)
(declare-fun x1517 () Int)
(declare-fun x1044 () Int)
(declare-fun x1409 () Int)
(declare-fun x986 () Int)
(declare-fun x1458 () Bool)
(declare-fun x609 () Int)
(declare-fun x55 () Int)
(declare-fun x806 () Int)
(declare-fun x1035 () Int)
(declare-fun x1708 () Int)
(declare-fun x873 () Int)
(declare-fun x1485 () Int)
(declare-fun x475 () Bool)
(declare-fun x98 () Int)
(declare-fun x1081 (Int) Int)
(declare-fun x395 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1085 () Int)
(declare-fun x922 () Bool)
(declare-fun x649 () Int)
(declare-fun x400 () Int)
(declare-fun x197 () Int)
(declare-fun x1745 () Int)
(declare-fun x807 () Int)
(declare-fun x1692 () Int)
(declare-fun x631 () Int)
(declare-fun x39 () Int)
(declare-fun x97 (Int) Int)
(declare-fun x1675 () Int)
(declare-fun x1052 () Int)
(declare-fun x1747 () Int)
(declare-fun x878 () Int)
(declare-fun x1185 () Int)
(declare-fun x869 () Int)
(declare-fun x91 () Int)
(declare-fun x1702 () Int)
(declare-fun x1661 () Int)
(declare-fun x1539 () Int)
(declare-fun x1208 () Int)
(declare-fun x995 () Int)
(declare-fun x1680 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1422 () Int)
(declare-fun x675 () Int)
(declare-fun x947 () Bool)
(declare-fun x155 () Bool)
(declare-fun x218 () Int)
(declare-fun x201 () Int)
(declare-fun x1676 () Int)
(declare-fun x1139 () Int)
(declare-fun x642 () Int)
(declare-fun x467 () Int)
(declare-fun x330 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x425 () Int)
(declare-fun x1498 () Int)
(declare-fun x1622 () Int)
(declare-fun x339 () Bool)
(declare-fun x25 () Bool)
(declare-fun x1757 () Int)
(declare-fun x372 () Int)
(declare-fun x310 () Int)
(declare-fun x715 () Bool)
(declare-fun x1796 () Int)
(declare-fun x101 () Int)
(declare-fun x1264 () Int)
(declare-fun x308 () Bool)
(declare-fun x1614 () Int)
(declare-fun x65 () Int)
(declare-fun x5 () Int)
(declare-fun x764 () Int)
(declare-fun x398 () Int)
(declare-fun x64 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1191 (Int) Int)
(declare-fun x1096 () Int)
(declare-fun x1254 () Int)
(declare-fun x890 () Bool)
(declare-fun x619 () Int)
(declare-fun x1438 () Int)
(declare-fun x1195 () Bool)
(declare-fun x915 () Int)
(declare-fun x1168 () Int)
(declare-fun x1478 () Int)
(declare-fun x1402 () Int)
(declare-fun x472 () Int)
(declare-fun x397 () Bool)
(declare-fun x379 () Bool)
(declare-fun x369 () Bool)
(declare-fun x455 () Bool)
(declare-fun x1567 () Int)
(declare-fun x490 () Int)
(declare-fun x1031 () Int)
(declare-fun x991 (Int) Int)
(declare-fun x1113 () Int)
(declare-fun x1433 () Int)
(declare-fun x130 () Int)
(declare-fun x1775 () Bool)
(declare-fun x892 () Bool)
(declare-fun x244 () Int)
(declare-fun x677 () Int)
(declare-fun x307 () Int)
(declare-fun x600 () Int)
(declare-fun x1167 () Int)
(declare-fun x578 () Int)
(declare-fun x480 () Bool)
(declare-fun x1294 () Int)
(declare-fun x471 () Int)
(declare-fun x785 () Int)
(declare-fun x1177 () Int)
(declare-fun x910 (Int Int Int) Int)
(declare-fun x1227 () Int)
(declare-fun x321 () Int)
(declare-fun x1755 () Int)
(declare-fun x1618 (Int) Int)
(declare-fun x1253 () Int)
(declare-fun x1494 () Bool)
(declare-fun x756 () Int)
(declare-fun x1592 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1295 () Int)
(declare-fun x680 () Int)
(declare-fun x1267 () Int)
(declare-fun x970 () Int)
(declare-fun x1547 () Int)
(declare-fun x1487 () Int)
(declare-fun x1086 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1582 () Int)
(declare-fun x1183 () Int)
(declare-fun x300 () Int)
(declare-fun x867 () Int)
(declare-fun x1489 () Int)
(declare-fun x1696 () Int)
(declare-fun x299 () Int)
(declare-fun x774 () Bool)
(declare-fun x1102 () Int)
(declare-fun x630 () Int)
(declare-fun x1620 () Int)
(declare-fun x13 () Int)
(declare-fun x1545 () Int)
(declare-fun x700 () Bool)
(declare-fun x588 () Int)
(declare-fun x240 () Int)
(declare-fun x882 () Int)
(declare-fun x1695 () Int)
(declare-fun x821 () Int)
(declare-fun x371 () Int)
(declare-fun x343 () Int)
(declare-fun x730 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x391 () Int)
(declare-fun x315 () Bool)
(declare-fun x1419 () Int)
(declare-fun x491 () Bool)
(declare-fun x616 () Int)
(declare-fun x405 () Int)
(declare-fun x249 () Int)
(declare-fun x1488 () Int)
(declare-fun x489 () Bool)
(declare-fun x1285 () Int)
(declare-fun x591 (Int) Int)
(declare-fun x714 () Int)
(declare-fun x1789 () Int)
(declare-fun x402 () Int)
(declare-fun x1578 (Int) Int)
(declare-fun x1748 () Int)
(declare-fun x1457 () Int)
(declare-fun x1165 () Int)
(declare-fun x182 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1542 () Int)
(declare-fun x1389 () Int)
(declare-fun x906 () Bool)
(declare-fun x1265 () Int)
(declare-fun x586 () Int)
(declare-fun x1601 () Int)
(declare-fun x36 () Int)
(declare-fun x903 () Int)
(declare-fun x473 (Int) Int)
(declare-fun x136 () Bool)
(declare-fun x684 () Int)
(declare-fun x1048 () Bool)
(declare-fun x634 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1441 (Int) Int)
(declare-fun x1637 () Int)
(declare-fun x497 () Int)
(declare-fun x1366 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1205 () Int)
(declare-fun x563 () Int)
(declare-fun x1036 () Int)
(declare-fun x110 () Bool)
(declare-fun x1126 () Int)
(declare-fun x1497 () Int)
(declare-fun x288 () Bool)
(declare-fun x1341 () Int)
(declare-fun x877 () Int)
(declare-fun x435 () Bool)
(declare-fun x601 () Int)
(declare-fun x104 () Bool)
(declare-fun x51 () Int)
(declare-fun x621 () Bool)
(declare-fun x1525 () Int)
(declare-fun x783 () Int)
(declare-fun x208 () Int)
(declare-fun x463 () Bool)
(declare-fun x1150 (Int) Int)
(declare-fun x1685 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x1299 () Int)
(declare-fun x1178 () Int)
(declare-fun x368 () Int)
(declare-fun x1259 () Int)
(declare-fun x260 () Bool)
(declare-fun x456 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1548 () Int)
(declare-fun x1377 () Int)
(declare-fun x574 () Bool)
(declare-fun x1551 () Int)
(declare-fun x230 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1316 () Int)
(declare-fun x18 () Int)
(declare-fun x819 () Bool)
(declare-fun x176 () Int)
(declare-fun x623 () Int)
(declare-fun x394 () Int)
(declare-fun x284 () Int)
(declare-fun x282 () Int)
(declare-fun x341 () Bool)
(declare-fun x969 () Int)
(declare-fun x215 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1752 () Int)
(declare-fun x1363 () Int)
(declare-fun x577 () Int)
(declare-fun x233 (Int) Int)
(declare-fun x1435 () Int)
(declare-fun x605 () Int)
(declare-fun x1602 () Bool)
(declare-fun x412 () Int)
(declare-fun x1625 () Int)
(declare-fun x1673 () Int)
(declare-fun x691 () Int)
(declare-fun x1280 () Int)
(declare-fun x141 () Int)
(declare-fun x465 () Int)
(declare-fun x1025 () Bool)
(declare-fun x823 () Bool)
(declare-fun x663 () Bool)
(declare-fun x181 () Int)
(declare-fun x929 () Int)
(declare-fun x1121 () Int)
(declare-fun x1355 () Int)
(declare-fun x1408 () Int)
(declare-fun x875 () Bool)
(declare-fun x1108 (Int) Int)
(declare-fun x1400 () Int)
(declare-fun x868 () Int)
(declare-fun x1720 () Int)
(declare-fun x961 () Int)
(declare-fun x1003 () Int)
(declare-fun x1463 () Int)
(declare-fun x1163 () Int)
(declare-fun x1381 () Bool)
(declare-fun x853 () Bool)
(declare-fun x9 () Int)
(declare-fun x146 () Bool)
(declare-fun x153 () Int)
(declare-fun x1334 () Int)
(declare-fun x908 () Int)
(declare-fun x938 () Int)
(declare-fun x1028 () Int)
(declare-fun x860 () Int)
(declare-fun x147 () Bool)
(declare-fun x1290 () Int)
(declare-fun x520 () Int)
(declare-fun x1338 () Int)
(declare-fun x871 () Bool)
(declare-fun x1669 () Int)
(declare-fun x576 () Bool)
(declare-fun x515 () Int)
(declare-fun x433 () Int)
(declare-fun x1093 () Int)
(declare-fun x772 () Bool)
(declare-fun x399 () Int)
(declare-fun x994 () Int)
(declare-fun x1437 () Int)
(declare-fun x1396 () Int)
(declare-fun x336 () Int)
(declare-fun x1594 () Int)
(declare-fun x652 () Int)
(declare-fun x1302 () Bool)
(declare-fun x529 () Int)
(declare-fun x53 () Int)
(declare-fun x75 () Bool)
(declare-fun x1050 () Int)
(declare-fun x985 () Int)
(declare-fun x1734 () Bool)
(declare-fun x794 () Int)
(declare-fun x1311 () Int)
(declare-fun x1672 () Int)
(declare-fun x1650 () Bool)
(declare-fun x1468 () Int)
(declare-fun x207 () Int)
(declare-fun x408 () Bool)
(declare-fun x301 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1339 () Int)
(declare-fun x891 () Int)
(declare-fun x1522 () Int)
(declare-fun x290 () Int)
(declare-fun x79 () Int)
(declare-fun x350 () Int)
(declare-fun x1127 () Int)
(declare-fun x1143 () Int)
(declare-fun x1310 () Int)
(declare-fun x1342 () Int)
(declare-fun x295 () Int)
(declare-fun x1474 () Int)
(declare-fun x1642 () Bool)
(declare-fun x716 () Int)
(declare-fun x1238 () Int)
(declare-fun x851 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1032 () Int)
(declare-fun x1160 () Bool)
(declare-fun x580 () Int)
(declare-fun x974 () Int)
(declare-fun x1698 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x72 () Int)
(declare-fun x1484 () Int)
(declare-fun x1658 () Int)
(declare-fun x149 () Bool)
(declare-fun x1427 () Int)
(declare-fun x309 () Int)
(declare-fun x1613 () Int)
(declare-fun x297 () Int)
(declare-fun x1197 () Bool)
(declare-fun x872 () Int)
(declare-fun x769 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x388 () Int)
(declare-fun x1000 () Int)
(declare-fun x298 () Int)
(declare-fun x1099 () Int)
(declare-fun x270 () Bool)
(declare-fun x816 () Int)
(declare-fun x334 () Bool)
(declare-fun x525 () Int)
(declare-fun x164 () Int)
(declare-fun x1583 () Int)
(declare-fun x1272 () Int)
(declare-fun x1323 (Int Int Int Int Int) Int)
(declare-fun x1605 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1176 () Int)
(declare-fun x656 (Int Int) Int)
(declare-fun x1109 () Int)
(declare-fun x898 () Int)
(declare-fun x1179 () Int)
(declare-fun x1008 () Int)
(declare-fun x1666 () Int)
(declare-fun x1218 () Int)
(declare-fun x1301 () Int)
(declare-fun x886 () Int)
(declare-fun x826 () Bool)
(declare-fun x931 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1217 () Int)
(declare-fun x1413 () Int)
(declare-fun x660 () Int)
(declare-fun x862 () Bool)
(declare-fun x1546 () Int)
(declare-fun x1357 () Int)
(declare-fun x1103 () Bool)
(declare-fun x389 () Int)
(declare-fun x126 () Int)
(declare-fun x1682 () Int)
(declare-fun x1762 () Int)
(declare-fun x241 () Int)
(declare-fun x1262 () Int)
(declare-fun x14 (Int) Int)
(declare-fun x738 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1251 () Bool)
(declare-fun x532 () Int)
(declare-fun x1575 () Int)
(declare-fun x1045 () Int)
(declare-fun x644 () Int)
(declare-fun x1132 () Int)
(declare-fun x584 () Int)
(declare-fun x689 () Int)
(declare-fun x1199 () Int)
(declare-fun x1354 () Int)
(declare-fun x682 () Int)
(declare-fun x535 () Int)
(declare-fun x916 () Int)
(declare-fun x47 () Int)
(declare-fun x1443 () Bool)
(declare-fun x31 () Int)
(declare-fun x1403 () Int)
(declare-fun x267 () Bool)
(declare-fun x458 () Int)
(declare-fun x692 () Int)
(declare-fun x296 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x313 () Int)
(declare-fun x1068 () Int)
(declare-fun x222 () Int)
(declare-fun x1496 () Int)
(declare-fun x418 () Int)
(declare-fun x1304 () Bool)
(declare-fun x112 () Int)
(declare-fun x1418 () Int)
(declare-fun x180 () Int)
(declare-fun x1771 () Int)
(declare-fun x211 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1471 () Int)
(declare-fun x612 () Int)
(declare-fun x74 () Int)
(declare-fun x1293 () Bool)
(declare-fun x485 () Int)
(declare-fun x1588 () Int)
(declare-fun x320 () Int)
(declare-fun x1360 () Int)
(declare-fun x570 () Int)
(declare-fun x977 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x21 () Bool)
(declare-fun x737 () Int)
(declare-fun x127 () Int)
(declare-fun x874 () Int)
(declare-fun x243 () Int)
(declare-fun x1235 () Bool)
(declare-fun x1531 () Int)
(declare-fun x150 () Int)
(declare-fun x841 () Int)
(declare-fun x46 () Bool)
(declare-fun x685 () Int)
(declare-fun x1701 () Int)
(declare-fun x732 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1530 () Bool)
(declare-fun x1007 () Int)
(declare-fun x956 () Int)
(declare-fun x191 () Int)
(declare-fun x332 (Int) Int)
(declare-fun x1282 () Int)
(declare-fun x99 () Int)
(declare-fun x1577 () Int)
(declare-fun x165 () Int)
(declare-fun x996 () Int)
(declare-fun x981 () Int)
(declare-fun x1509 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1794 () Int)
(declare-fun x1074 () Int)
(declare-fun x1049 () Int)
(declare-fun x1781 () Int)
(declare-fun x329 () Int)
(declare-fun x273 () Int)
(declare-fun x822 () Int)
(declare-fun x1180 () Bool)
(declare-fun x861 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1078 (Int) Int)
(declare-fun x1226 () Int)
(declare-fun x1510 () Int)
(declare-fun x1155 () Int)
(declare-fun x749 () Int)
(declare-fun x1773 () Bool)
(declare-fun x924 () Int)
(declare-fun x553 () Int)
(declare-fun x1415 () Int)
(declare-fun x859 () Int)
(declare-fun x1553 () Int)
(declare-fun x224 () Int)
(declare-fun x608 () Int)
(declare-fun x750 () Int)
(declare-fun x95 () Bool)
(declare-fun x196 () Int)
(declare-fun x66 (Int) Int)
(declare-fun x1655 () Bool)
(declare-fun x256 () Int)
(declare-fun x366 () Int)
(declare-fun x827 () Int)
(declare-fun x1041 () Int)
(declare-fun x1392 () Int)
(declare-fun x820 () Int)
(declare-fun x177 () Int)
(declare-fun x858 () Int)
(declare-fun x1308 () Int)
(declare-fun x415 () Int)
(declare-fun x1335 () Bool)
(declare-fun x387 () Int)
(declare-fun x1541 () Int)
(declare-fun x805 () Int)
(declare-fun x973 () Int)
(declare-fun x1753 () Bool)
(declare-fun x917 () Bool)
(declare-fun x280 () Int)
(declare-fun x347 () Int)
(declare-fun x1312 () Bool)
(declare-fun x1087 () Int)
(declare-fun x1651 () Int)
(declare-fun x840 (Int) Int)
(declare-fun x160 () Int)
(declare-fun x1469 () Int)
(declare-fun x638 () Int)
(declare-fun x340 () Int)
(declare-fun x375 () Int)
(declare-fun x1447 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1746 () Int)
(declare-fun x364 () Bool)
(declare-fun x1279 () Int)
(declare-fun x188 () Int)
(declare-fun x63 () Int)
(declare-fun x1670 () Int)
(declare-fun x434 () Int)
(declare-fun x825 () Bool)
(declare-fun x902 () Int)
(declare-fun x777 () Int)
(declare-fun x1148 () Int)
(declare-fun x1671 () Bool)
(declare-fun x1735 () Int)
(declare-fun x1621 () Int)
(declare-fun x907 (Int) Int)
(declare-fun x210 () Int)
(declare-fun x837 () Int)
(declare-fun x1503 () Int)
(declare-fun x629 () Int)
(declare-fun x1634 () Int)
(declare-fun x1374 () Int)
(declare-fun x356 () Int)
(declare-fun x1158 () Int)
(declare-fun x1554 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1691 () Int)
(declare-fun x1023 () Int)
(declare-fun x914 (Int) Int)
(declare-fun x1118 () Int)
(declare-fun x978 () Int)
(declare-fun x768 () Int)
(declare-fun x166 () Bool)
(declare-fun x121 () Int)
(declare-fun x668 () Int)
(declare-fun x919 () Int)
(declare-fun x918 () Int)
(declare-fun x1058 () Int)
(declare-fun x1795 () Int)
(declare-fun x390 () Int)
(declare-fun x1225 () Int)
(declare-fun x731 () Int)
(declare-fun x809 () Int)
(declare-fun x268 () Int)
(declare-fun x385 () Int)
(declare-fun x262 () Bool)
(declare-fun x1412 () Int)
(declare-fun x799 () Int)
(declare-fun x1214 () Int)
(declare-fun x645 () Int)
(declare-fun x383 () Int)
(declare-fun x1636 () Bool)
(declare-fun x76 () Int)
(declare-fun x723 () Bool)
(declare-fun x443 () Int)
(declare-fun x1656 () Int)
(declare-fun x175 () Int)
(declare-fun x19 () Int)
(declare-fun x593 () Int)
(declare-fun x1131 () Int)
(declare-fun x1749 () Int)
(declare-fun x1175 () Int)
(declare-fun x311 (Int) Int)
(declare-fun x206 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1653 () Int)
(declare-fun x582 () Int)
(declare-fun x424 () Bool)
(declare-fun x740 () Int)
(declare-fun x1281 () Int)
(declare-fun x62 () Int)
(declare-fun x1786 () Int)
(declare-fun x1660 () Int)
(declare-fun x1055 () Int)
(declare-fun x1462 () Int)
(declare-fun x1504 () Int)
(declare-fun x1727 () Bool)
(declare-fun x572 () Int)
(declare-fun x881 () Int)
(declare-fun x1347 () Int)
(declare-fun x1514 () Int)
(declare-fun x1513 () Int)
(declare-fun x787 () Bool)
(declare-fun x550 () Int)
(declare-fun x900 () Int)
(declare-fun x1117 () Int)
(declare-fun x1657 () Int)
(declare-fun x1257 () Int)
(declare-fun x904 () Bool)
(declare-fun x926 () Int)
(declare-fun x3 () Int)
(declare-fun x1527 () Int)
(declare-fun x446 () Int)
(declare-fun x342 () Int)
(declare-fun x1791 () Int)
(declare-fun x1200 () Int)
(declare-fun x484 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x833 () Bool)
(declare-fun x844 () Int)
(declare-fun x589 () Int)
(declare-fun x1344 () Int)
(declare-fun x688 () Int)
(declare-fun x179 () Int)
(declare-fun x967 () Int)
(declare-fun x1607 () Int)
(declare-fun x686 () Int)
(declare-fun x1460 () Int)
(declare-fun x1635 () Int)
(declare-fun x58 () Int)
(declare-fun x194 () Int)
(declare-fun x1249 () Int)
(declare-fun x469 () Int)
(declare-fun x357 () Bool)
(declare-fun x100 () Bool)
(declare-fun x932 () Int)
(declare-fun x1026 () Int)
(declare-fun x492 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1645 () Int)
(declare-fun x1071 () Int)
(declare-fun x1136 () Int)
(declare-fun x129 () Int)
(declare-fun x849 () Int)
(declare-fun x1417 () Bool)
(declare-fun x178 () Int)
(declare-fun x610 () Int)
(declare-fun x380 () Bool)
(declare-fun x1370 () Int)
(declare-fun x913 () Int)
(declare-fun x1145 () Int)
(declare-fun x1515 () Int)
(declare-fun x499 () Int)
(declare-fun x784 () Int)
(declare-fun x1434 () Int)
(declare-fun x1146 () Int)
(declare-fun x1414 () Int)
(declare-fun x1328 () Int)
(declare-fun x1736 () Int)
(declare-fun x620 () Int)
(declare-fun x123 () Bool)
(declare-fun x545 () Bool)
(declare-fun x428 () Int)
(declare-fun x921 () Int)
(declare-fun x651 (Int) Int)
(declare-fun x797 () Bool)
(declare-fun x1596 () Int)
(declare-fun x242 () Int)
(declare-fun x328 () Int)
(declare-fun x852 () Int)
(declare-fun x83 () Int)
(declare-fun x647 () Int)
(declare-fun x1053 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1129 (Int Int) Int)
(declare-fun x1352 (Int) Int)
(declare-fun x1638 () Int)
(declare-fun x1075 () Int)
(declare-fun x271 () Int)
(declare-fun x1383 () Int)
(declare-fun x198 () Int)
(declare-fun x594 () Int)
(declare-fun x184 () Int)
(declare-fun x1543 () Int)
(declare-fun x1006 () Int)
(declare-fun x316 () Int)
(declare-fun x1189 () Bool)
(declare-fun x426 () Int)
(declare-fun x993 () Int)
(declare-fun x27 () Int)
(declare-fun x483 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x804 () Bool)
(declare-fun x964 () Int)
(declare-fun x845 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1306 () Bool)
(declare-fun x349 () Int)
(declare-fun x1157 () Bool)
(declare-fun x524 () Int)
(declare-fun x953 () Int)
(declare-fun x1084 () Int)
(declare-fun x1451 () Int)
(declare-fun x662 () Int)
(declare-fun x627 () Int)
(declare-fun x461 () Bool)
(declare-fun x1097 () Int)
(declare-fun x544 () Int)
(declare-fun x1368 () Int)
(declare-fun x82 () Bool)
(declare-fun x951 () Bool)
(declare-fun x1677 () Int)
(declare-fun x226 () Int)
(declare-fun x1483 () Int)
(declare-fun x49 () Int)
(declare-fun x791 (Int) Int)
(declare-fun x1492 () Int)
(declare-fun x952 () Int)
(declare-fun x1063 () Int)
(declare-fun x720 () Int)
(declare-fun x116 () Int)
(declare-fun x248 () Int)
(declare-fun x447 () Int)
(declare-fun x225 () Int)
(declare-fun x1788 () Int)
(declare-fun x1528 () Int)
(declare-fun x1184 () Bool)
(declare-fun x185 () Int)
(declare-fun x169 () Bool)
(declare-fun x683 () Int)
(declare-fun x1524 () Int)
(declare-fun x283 () Int)
(declare-fun x711 () Int)
(declare-fun x1284 (Int) Int)
(declare-fun x1568 () Int)
(declare-fun x1518 () Int)
(declare-fun x673 () Int)
(declare-fun x1318 () Int)
(declare-fun x466 () Int)
(declare-fun x927 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1080 () Int)
(declare-fun x119 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x1351 () Int)
(declare-fun x646 () Int)
(declare-fun x1220 () Int)
(declare-fun x1649 () Int)
(declare-fun x598 () Int)
(declare-fun x808 () Bool)
(declare-fun x885 () Int)
(declare-fun x704 () Int)
(declare-fun x88 () Int)
(declare-fun x48 () Int)
(declare-fun x1743 () Int)
(declare-fun x1732 () Int)
(declare-fun x856 () Int)
(declare-fun x168 () Int)
(declare-fun x1470 () Int)
(declare-fun x1467 () Int)
(declare-fun x1774 () Int)
(declare-fun x1704 () Bool)
(declare-fun x888 () Int)
(declare-fun x152 () Bool)
(declare-fun x695 () Bool)
(declare-fun x231 () Int)
(declare-fun x1648 () Int)
(declare-fun x1754 () Int)
(declare-fun x1173 () Int)
(declare-fun x488 () Int)
(declare-fun x842 () Int)
(declare-fun x61 () Int)
(declare-fun x1386 () Int)
(declare-fun x1683 () Int)
(declare-fun x232 () Int)
(declare-fun x925 () Int)
(declare-fun x536 () Int)
(declare-fun x983 () Bool)
(declare-fun x923 () Int)
(declare-fun x1245 () Int)
(declare-fun x279 () Bool)
(declare-fun x1421 () Int)
(declare-fun x786 () Int)
(declare-fun x1609 () Bool)
(declare-fun x1092 () Int)
(declare-fun x50 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1716 () Int)
(declare-fun x719 () Int)
(declare-fun x581 () Int)
(declare-fun x1574 () Int)
(declare-fun x1425 () Int)
(declare-fun x946 () Int)
(declare-fun x725 () Int)
(declare-fun x15 () Int)
(declare-fun x1534 () Int)
(declare-fun x743 () Int)
(declare-fun x195 () Int)
(declare-fun x278 () Int)
(declare-fun x746 () Int)
(declare-fun x1410 () Int)
(declare-fun x736 () Bool)
(declare-fun x291 () Int)
(declare-fun x1105 () Int)
(declare-fun x1772 () Int)
(declare-fun x1307 () Int)
(declare-fun x767 () Int)
(declare-fun x1416 () Int)
(declare-fun x1481 () Int)
(declare-fun x527 () Int)
(declare-fun x693 () Int)
(declare-fun x1700 () Int)
(declare-fun x1585 () Int)
(declare-fun x37 () Bool)
(declare-fun x1329 () Int)
(declare-fun x386 () Int)
(declare-fun x1706 () Int)
(declare-fun x134 () Int)
(declare-fun x1034 () Int)
(declare-fun x1439 () Int)
(declare-fun x1332 () Bool)
(declare-fun x171 () Int)
(declare-fun x478 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1387 () Int)
(declare-fun x1192 () Int)
(declare-fun x830 () Int)
(declare-fun x1643 () Int)
(declare-fun x1230 () Int)
(declare-fun x702 () Int)
(declare-fun x1760 () Int)
(declare-fun x1186 () Int)
(declare-fun x1785 () Int)
(declare-fun x928 () Bool)
(declare-fun x87 () Bool)
(declare-fun x143 () Int)
(declare-fun x172 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x669 () Int)
(declare-fun x1141 () Int)
(declare-fun x1558 (Int) Int)
(declare-fun x1261 () Int)
(declare-fun x1741 () Int)
(declare-fun x500 () Int)
(declare-fun x452 () Int)
(declare-fun x1018 () Int)
(declare-fun x459 () Bool)
(declare-fun x1336 () Int)
(declare-fun x958 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1769 () Int)
(declare-fun x1690 () Int)
(declare-fun x857 () Int)
(declare-fun x186 () Int)
(declare-fun x843 () Int)
(declare-fun x1159 () Bool)
(declare-fun x1722 () Int)
(declare-fun x438 () Int)
(declare-fun x1480 () Bool)
(declare-fun x1726 () Bool)
(declare-fun x1232 () Int)
(declare-fun x950 () Int)
(declare-fun x824 () Bool)
(declare-fun x1376 () Int)
(declare-fun x358 () Int)
(declare-fun x1537 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1057 () Int)
(declare-fun x138 () Int)
(declare-fun x1723 () Int)
(declare-fun x259 () Int)
(declare-fun x540 () Int)
(declare-fun x850 () Bool)
(declare-fun x796 () Int)
(declare-fun x85 () Int)
(declare-fun x204 () Int)
(declare-fun x1219 () Int)
(declare-fun x1059 () Int)
(declare-fun x378 () Bool)
(declare-fun x137 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1717 () Int)
(declare-fun x678 () Int)
(declare-fun x474 () Int)
(declare-fun x1432 () Int)
(declare-fun x1391 () Int)
(declare-fun x626 () Int)
(declare-fun x1778 () Int)
(declare-fun x158 () Int)
(declare-fun x1343 () Int)
(declare-fun x118 () Bool)
(declare-fun x170 () Int)
(declare-fun x1076 () Int)
(declare-fun x373 () Int)
(declare-fun x568 () Int)
(declare-fun x439 () Int)
(declare-fun x518 () Int)
(declare-fun x1337 () Int)
(declare-fun x1570 () Int)
(declare-fun x1641 () Int)
(declare-fun x1287 () Int)
(declare-fun x554 () Int)
(declare-fun x724 () Int)
(declare-fun x1719 () Int)
(declare-fun x667 () Int)
(declare-fun x757 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x154 () Bool)
(declare-fun x941 () Int)
(declare-fun x1353 () Int)
(declare-fun x1679 () Bool)
(declare-fun x944 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1694 () Int)
(declare-fun x555 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1600 () Int)
(declare-fun x617 () Int)
(declare-fun x1486 () Int)
(declare-fun x801 () Int)
(declare-fun x744 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1461 () Int)
(declare-fun x156 () Int)
(declare-fun x752 () Bool)
(declare-fun x1292 (Int Int Int Int) Int)
(declare-fun x1229 () Int)
(declare-fun x365 () Int)
(declare-fun x1593 () Int)
(declare-fun x559 () Int)
(declare-fun x237 () Int)
(declare-fun x657 () Bool)
(declare-fun x202 () Int)
(declare-fun x1135 () Int)
(declare-fun x780 () Int)
(declare-fun x1674 () Int)
(declare-fun x67 () Int)
(declare-fun x1538 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1056 () Int)
(declare-fun x393 () Int)
(declare-fun x8 () Bool)
(declare-fun x333 (Int Int) Int)
(declare-fun x416 () Int)
(declare-fun x942 () Int)
(declare-fun x12 () Bool)
(declare-fun x362 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1776 () Int)
(declare-fun x640 () Int)
(declare-fun x1465 () Bool)
(declare-fun x770 () Int)
(declare-fun x335 () Int)
(declare-fun x1617 () Bool)
(declare-fun x33 () Int)
(declare-fun x1740 () Int)
(declare-fun x1731 () Int)
(declare-fun x1100 () Bool)
(declare-fun x89 () Int)
(declare-fun x935 (Int Int) Int)
(declare-fun x1431 () Int)
(declare-fun x1286 () Int)
(declare-fun x694 () Int)
(declare-fun x758 () Int)
(declare-fun x1246 () Int)
(declare-fun x664 () Int)
(declare-fun x966 () Int)
(declare-fun x790 () Int)
(declare-fun x269 () Int)
(declare-fun x1303 () Int)
(declare-fun x1662 () Bool)
(declare-fun x1678 () Int)
(declare-fun x496 () Int)
(declare-fun x1428 () Int)
(declare-fun x200 () Int)
(declare-fun x1098 () Int)
(declare-fun x587 () Int)
(declare-fun x1239 () Int)
(declare-fun x1768 () Int)
(declare-fun x1628 () Int)
(declare-fun x1319 () Int)
(declare-fun x1705 () Int)
(declare-fun x971 () Int)
(declare-fun x810 () Bool)
(declare-fun x183 () Int)
(declare-fun x1101 () Int)
(declare-fun x1464 () Int)
(declare-fun x246 () Int)
(declare-fun x429 () Int)
(declare-fun x275 () Int)
(declare-fun x948 () Int)
(declare-fun x106 () Int)
(declare-fun x1211 () Int)
(declare-fun x292 () Bool)
(declare-fun x445 () Int)
(declare-fun x1659 () Int)
(declare-fun x1759 () Int)
(declare-fun x778 () Int)
(declare-fun x266 () Int)
(declare-fun x1124 () Bool)
(declare-fun x988 () Int)
(declare-fun x1079 () Int)
(declare-fun x1120 () Int)
(declare-fun x436 () Int)
(declare-fun x573 () Int)
(declare-fun x1448 () Int)
(declare-fun x162 () Int)
(declare-fun x1495 () Int)
(declare-fun x1122 () Int)
(declare-fun x1123 () Int)
(declare-fun x78 () Bool)
(declare-fun x1523 () Int)
(declare-fun x442 () Bool)
(declare-fun x1453 () Int)
(declare-fun x69 () Int)
(declare-fun x539 () Int)
(declare-fun x1016 () Int)
(declare-fun x1714 () Int)
(declare-fun x454 () Int)
(declare-fun x1667 () Int)
(declare-fun x1764 () Int)
(declare-fun x34 () Int)
(declare-fun x41 () Int)
(declare-fun x494 () Int)
(declare-fun x506 () Bool)
(declare-fun x585 () Int)
(declare-fun x250 () Int)
(declare-fun x1110 () Int)
(declare-fun x1243 () Int)
(declare-fun x697 () Int)
(declare-fun x1606 () Int)
(declare-fun x229 () Bool)
(declare-fun x1473 () Int)
(declare-fun x982 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1665 () Int)
(declare-fun x839 () Int)
(declare-fun x759 () Int)
(declare-fun x628 () Int)
(declare-fun x30 () Bool)
(declare-fun x569 () Int)
(declare-fun x57 () Int)
(declare-fun x1065 () Int)
(declare-fun x1190 () Int)
(declare-fun x317 () Bool)
(declare-fun x324 () Int)
(declare-fun x1640 () Int)
(declare-fun x639 () Bool)
(declare-fun x346 () Int)
(declare-fun x1767 () Int)
(declare-fun x354 () Bool)
(declare-fun x552 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x676 () Int)
(declare-fun x1561 () Int)
(declare-fun x597 () Bool)
(declare-fun x94 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x889 () Bool)
(declare-fun x533 () Int)
(declare-fun x174 () Int)
(declare-fun x1014 () Int)
(declare-fun x945 () Int)
(declare-fun x120 () Int)
(declare-fun x287 () Int)
(declare-fun x911 () Int)
(declare-fun x420 () Int)
(declare-fun x1766 (Int) Int)
(declare-fun x448 () Bool)
(declare-fun x733 () Int)
(declare-fun x1255 () Int)
(declare-fun x1115 () Int)
(declare-fun x972 () Int)
(declare-fun x52 () Bool)
(declare-fun x409 () Int)
(declare-fun x193 () Int)
(declare-fun x1321 (Int) Int)
(declare-fun x1072 () Int)
(declare-fun x812 () Int)
(declare-fun x1490 () Int)
(declare-fun x1043 () Bool)
(declare-fun x59 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x728 () Int)
(declare-fun x1256 () Int)
(declare-fun x1475 () Int)
(declare-fun x16 () Int)
(declare-fun x1095 () Int)
(declare-fun x771 () Int)
(declare-fun x86 () Int)
(declare-fun x1154 () Bool)
(declare-fun x937 () Bool)
(declare-fun x905 () Int)
(declare-fun x367 () Int)
(declare-fun x876 () Int)
(declare-fun x289 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1780 () Int)
(declare-fun x431 () Int)
(declare-fun x1042 (Int) Int)
(declare-fun x1589 () Bool)
(declare-fun x1362 () Int)
(declare-fun x655 () Int)
(declare-fun x955 () Int)
(declare-fun x1763 () Int)
(declare-fun x1223 () Int)
(declare-fun x1790 () Int)
(declare-fun x596 () Int)
(declare-fun x909 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1399 () Int)
(declare-fun x1137 () Int)
(declare-fun x788 () Bool)
(declare-fun x457 () Int)
(declare-fun x1616 () Bool)
(declare-fun x1073 () Int)
(declare-fun x192 () Int)
(declare-fun x1149 () Int)
(declare-fun x1324 () Int)
(declare-fun x109 () Int)
(declare-fun x1500 () Int)
(declare-fun x1744 () Int)
(declare-fun x614 () Int)
(declare-fun x44 () Int)
(declare-fun x1407 () Int)
(declare-fun x482 () Bool)
(declare-fun x1051 () Int)
(declare-fun x294 () Int)
(declare-fun x1406 () Int)
(declare-fun x803 () Int)
(declare-fun x896 () Int)
(declare-fun x1384 () Int)
(declare-fun x1750 () Int)
(declare-fun x1597 (Int) Int)
(declare-fun x1011 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1713 () Int)
(declare-fun x38 () Int)
(declare-fun x133 () Int)
(declare-fun x800 (Int Int) Int)
(declare-fun x322 () Int)
(declare-fun x6 () Int)
(declare-fun x1234 () Int)
(declare-fun x1156 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x403 () Int)
(declare-fun x1654 () Int)
(declare-fun x261 () Int)
(declare-fun x1237 () Int)
(declare-fun x1242 () Int)
(declare-fun x221 () Bool)
(declare-fun x406 () Int)
(declare-fun x1629 () Int)
(declare-fun x1244 () Int)
(declare-fun x1603 () Int)
(declare-fun x1610 () Int)
(declare-fun x213 () Int)
(declare-fun x361 () Int)
(declare-fun x1274 () Int)
(declare-fun x353 () Int)
(declare-fun x1064 (Int Int Int Int Int Int) Int)
(declare-fun x864 (Int) Int)
(declare-fun x742 () Int)
(declare-fun x968 () Int)
(declare-fun x1094 () Bool)
(declare-fun x131 () Int)
(declare-fun x11 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1181 () Int)
(declare-fun x789 () Int)
(declare-fun x1258 () Int)
(declare-fun x1454 () Int)
(declare-fun x252 () Int)
(declare-fun x381 () Int)
(declare-fun x530 () Int)
(declare-fun x567 () Int)
(declare-fun x979 () Bool)
(declare-fun x1395 () Int)
(declare-fun x893 () Bool)
(declare-fun x1442 () Int)
(declare-fun x430 () Int)
(declare-fun x957 () Int)
(declare-fun x1639 () Bool)
(declare-fun x370 () Int)
(declare-fun x1697 () Int)
(declare-fun x566 () Int)
(declare-fun x1699 () Int)
(declare-fun x1499 () Int)
(declare-fun x665 () Int)
(declare-fun x1015 () Bool)
(declare-fun x912 (Int Int Int Int Int Int Int) Int)
(declare-fun x417 () Bool)
(declare-fun x157 (Int Int) Int)
(declare-fun x1268 () Int)
(declare-fun x1212 () Bool)
(declare-fun x595 () Int)
(declare-fun x751 () Int)
(declare-fun x679 () Int)
(declare-fun x510 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x1380 () Int)
(declare-fun x835 () Bool)
(declare-fun x637 () Bool)
(declare-fun x1540 () Int)
(declare-fun x551 () Bool)
(declare-fun x538 () Int)
(declare-fun x263 () Bool)
(declare-fun x934 () Int)
(declare-fun x1712 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1060 () Int)
(declare-fun x558 () Int)
(declare-fun x606 () Int)
(declare-fun x1549 () Int)
(declare-fun x654 () Int)
(declare-fun x1572 () Int)
(declare-fun x1361 () Bool)
(declare-fun x413 () Int)
(declare-fun x258 () Int)
(declare-fun x1792 () Int)
(declare-fun x1296 (Int) Int)
(declare-fun x1455 () Int)
(declare-fun x1019 () Int)
(declare-fun x1298 () Int)
(declare-fun x1584 () Int)
(declare-fun x1125 () Bool)
(declare-fun x954 () Int)
(declare-fun x579 () Int)
(declare-fun x151 () Int)
(declare-fun x1516 () Int)
(declare-fun x1565 () Int)
(declare-fun x1765 () Int)
(declare-fun x661 () Bool)
(declare-fun x1202 (Int) Int)
(declare-fun x1493 () Int)
(declare-fun x1241 () Int)
(declare-fun x798 () Int)
(declare-fun x729 () Int)
(declare-fun x1777 () Int)
(declare-fun x293 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x813 () Int)
(declare-fun x604 () Int)
(declare-fun x1170 () Int)
(declare-fun x60 () Int)
(declare-fun x611 () Int)
(declare-fun x1172 () Int)
(declare-fun x1390 () Int)
(declare-fun x792 () Int)
(declare-fun x1325 () Bool)
(declare-fun x223 () Int)
(declare-fun x897 () Int)
(declare-fun x392 () Int)
(declare-fun x2 () Int)
(declare-fun x1404 (Int) Int)
(declare-fun x1560 () Int)
(declare-fun x486 () Int)
(declare-fun x1089 () Int)
(declare-fun x1037 () Bool)
(declare-fun x765 () Int)
(declare-fun x1444 () Int)
(declare-fun x513 () Int)
(declare-fun x1711 () Bool)
(declare-fun x348 () Int)
(declare-fun x1401 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1152 () Int)
(declare-fun x1144 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1066 () Int)
(declare-fun x453 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x1206 () Int)
(declare-fun x659 () Int)
(declare-fun x748 () Bool)
(declare-fun x672 () Int)
(declare-fun x763 () Bool)
(declare-fun x734 () Int)
(declare-fun x96 () Int)
(declare-fun x650 () Int)
(declare-fun x846 () Int)
(declare-fun x1742 () Int)
(declare-fun x1783 () Int)
(declare-fun x81 () Int)
(declare-fun x1388 () Int)
(declare-fun x1090 () Int)
(declare-fun x1604 () Bool)
(declare-fun x205 () Int)
(declare-fun x1710 () Int)
(declare-fun x159 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1106 () Int)
(declare-fun x1627 () Int)
(declare-fun x73 () Bool)
(declare-fun x479 () Int)
(declare-fun x144 () Int)
(declare-fun x227 () Int)
(declare-fun x1646 () Bool)
(declare-fun x618 () Int)
(declare-fun x281 () Int)
(declare-fun x603 () Bool)
(declare-fun x571 () Bool)
(declare-fun x228 () Int)
(declare-fun x615 () Int)
(declare-fun x1557 () Int)
(declare-fun x1739 () Int)
(declare-fun x997 () Int)
(declare-fun x817 () Bool)
(declare-fun x980 () Bool)
(declare-fun x502 () Bool)
(declare-fun x707 () Int)
(declare-fun x1138 () Int)
(declare-fun x132 () Int)
(declare-fun x602 () Int)
(declare-fun x1270 () Int)
(declare-fun x1511 () Int)
(declare-fun x575 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1204 () Int)
(declare-fun x1446 () Int)
(declare-fun x113 () Int)
(declare-fun x219 () Int)
(declare-fun x509 () Int)
(declare-fun x543 () Int)
(declare-fun x1502 () Int)
(declare-fun x274 () Int)
(declare-fun x422 () Int)
(declare-fun x633 () Int)
(declare-fun x441 () Int)
(declare-fun x277 () Int)
(declare-fun x265 () Int)
(declare-fun x1599 (Int) Int)
(declare-fun x1730 (Int Int Int Int) Int)
(declare-fun x1162 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x959 () Int)
(declare-fun x1198 () Int)
(declare-fun x561 () Int)
(declare-fun x444 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1644 () Int)
(declare-fun x818 () Int)
(declare-fun x1375 () Int)
(declare-fun x1506 () Bool)
(declare-fun x541 () Int)
(declare-fun x1046 () Int)
(declare-fun x139 () Bool)
(declare-fun x1623 () Int)
(declare-fun x1382 () Int)
(declare-fun x1393 () Int)
(declare-fun x1266 () Int)
(declare-fun x884 (Int) Int)
(declare-fun x901 (Int) Int)
(declare-fun x1005 (Int) Int)
(declare-fun x832 () Int)
(declare-fun x1472 () Int)
(declare-fun x1501 () Int)
(declare-fun x990 () Int)
(declare-fun x1130 () Int)
(declare-fun x894 () Int)
(declare-fun x562 (Int) Int)
(declare-fun x920 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1070 () Int)
(declare-fun x987 () Int)
(declare-fun x1188 () Int)
(declare-fun x831 (Int) Int)
(declare-fun x802 () Int)
(declare-fun x351 () Int)
(declare-fun x173 () Int)
(declare-fun x883 () Int)
(declare-fun x401 () Bool)
(declare-fun x721 () Bool)
(declare-fun x698 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1595 () Int)
(declare-fun x687 () Int)
(declare-fun x187 () Bool)
(declare-fun x1707 () Int)
(declare-fun x462 () Bool)
(declare-fun x20 () Int)
(declare-fun x755 () Int)
(declare-fun x517 (Int) Bool)
(declare-fun x1505 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1385 () Int)
(declare-fun x560 () Int)
(declare-fun x1104 (Int) Int)
(declare-fun x145 () Int)
(declare-fun x542 () Int)
(declare-fun x1445 () Bool)
(declare-fun x56 () Int)
(declare-fun x735 () Int)
(declare-fun x286 () Int)
(declare-fun x599 () Int)
(declare-fun x1356 () Int)
(declare-fun x863 () Int)
(declare-fun x1411 () Int)
(declare-fun x1709 () Int)
(declare-fun x564 () Bool)
(declare-fun x709 (Int) Int)
(declare-fun x1728 () Bool)
(declare-fun x440 () Int)
(declare-fun x1277 () Int)
(declare-fun x77 () Int)
(declare-fun x501 () Int)
(declare-fun x548 (Int) Int)
(declare-fun x1359 (Int) Int)
(declare-fun x636 () Int)
(declare-fun x450 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1647 () Int)
(declare-fun x251 () Int)
(declare-fun x1782 () Int)
(declare-fun x71 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1689 () Int)
(declare-fun x556 () Int)
(declare-fun x1533 () Bool)
(declare-fun x476 () Bool)
(declare-fun x739 () Int)
(declare-fun x1633 () Int)
(declare-fun x93 () Bool)
(declare-fun x427 () Int)
(declare-fun x1466 () Int)
(declare-fun x1686 () Int)
(declare-fun x747 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1477 () Int)
(declare-fun x1652 () Bool)
(declare-fun x762 () Int)
(declare-fun x1586 () Int)
(declare-fun x189 () Int)
(declare-fun x666 () Int)
(declare-fun x690 () Int)
(declare-fun x1571 () Bool)
(declare-fun x345 () Int)
(define-fun x870 ((x1252 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1252) (>= x1252 0)) x1252 (- x1252 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x625 ((x1252 Int)) Int (ite (and (< x1252 0) (>= x1252 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1252 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1252))
(define-fun x1009 ((x1252 Int)) Int (ite (and (>= x1252 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1252)) x1252 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1252) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1252)) (- x1252 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1252 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1252 0)) (+ x1252 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1129 x1252 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x304 ((x648 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648) (<= 0 x648)))
(define-fun x1022 ((x648 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648) (>= x648 0)))
(define-fun x1088 ((x648 Int)) Bool (and (= x648 (x935 x648 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x935 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648) x648)))
(define-fun x163 ((x648 Int)) Bool (and (= 0 (x935 0 x648)) (= 0 (x935 x648 0))))
(define-fun x161 ((x648 Int)) Bool (= x648 (x935 x648 x648)))
(define-fun x236 ((x648 Int)) Bool (and (x163 x648) (x161 x648) (x1088 x648)))
(define-fun x1482 ((x648 Int) (x516 Int)) Bool (= (x935 x648 x516) (x935 x516 x648)))
(define-fun x761 ((x648 Int) (x516 Int)) Bool (and (<= 0 (x935 x648 x516)) (=> (<= 0 x648) (<= (x935 x648 x516) x648)) (=> (<= 0 x516) (>= x516 (x935 x648 x516)))))
(define-fun x940 ((x648 Int) (x516 Int)) Bool (and (x1482 x648 x516) (x761 x648 x516)))
(define-fun x975 ((x648 Int)) Bool (= (x1009 x648) (+ (x935 x648 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1129 x648 32))))
(define-fun x1314 ((x648 Int)) Bool (and (x940 x648 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x975 x648)))
(define-fun x470 ((x648 Int) (x516 Int)) Bool (and (<= 0 (x1129 x648 x516)) (> x516 (x1129 x648 x516))))
(define-fun x493 ((x648 Int) (x516 Int)) Bool (=> (and (>= x648 0) (> x516 0)) (= (= x648 (x1129 x648 x516)) (< x648 x516))))
(define-fun x727 ((x648 Int) (x516 Int)) Bool (=> (and (and (<= x516 x648) (> (+ x516 x516) x648)) (> x516 0)) (= (- x648 x516) (x1129 x648 x516))))
(define-fun x1182 ((x648 Int) (x516 Int)) Bool (=> (< 0 x516) (= x648 (+ (x1129 x648 x516) (* (x800 x648 x516) x516)))))
(define-fun x421 ((x648 Int) (x516 Int)) Bool (and (x727 x648 x516) (x493 x648 x516) (x1182 x648 x516) (x470 x648 x516)))
(define-fun x167 ((x648 Int)) Bool (= (x1129 0 x648) 0))
(define-fun x1664 ((x648 Int)) Bool (= (x1129 x648 1) 0))
(define-fun x29 ((x648 Int)) Bool (= 0 (x1129 x648 x648)))
(define-fun x255 ((x648 Int)) Bool (and (x29 x648) (x167 x648) (x1664 x648)))
(define-fun x217 ((x648 Int) (x516 Int)) Bool (= (x656 x648 x516) (* x516 x648)))
(define-fun x352 ((x648 Int) (x516 Int)) Bool (and (= (* (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936) x648) (x656 x648 (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) x516) (- (* x648 x516) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x516))) (= (- (* (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936) x648) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x930 ((x648 Int) (x516 Int)) Bool (=> (and (> x516 0) (< 0 x648)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x656 x648 x516)) (= (x800 (x1009 (x656 x648 x516)) x648) x516))))
(define-fun x754 ((x648 Int) (x516 Int)) Bool (=> (and (not (= 0 x516)) (not (= 0 x648))) (and (= x648 (x800 (x656 x648 x516) x516)) (= (x800 (x656 x648 x516) x648) x516))))
(define-fun x1029 ((x648 Int) (x516 Int)) Bool (=> (and (< 0 x516) (< 0 x648)) (= (< (x800 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648) x516) (> (x656 x648 x516) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x344 ((x648 Int) (x516 Int)) Bool (and (= (x1009 (x656 x648 (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1009 (x656 x648 x516))) (= (x1009 (x656 x648 x516)) (x1009 (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1009 (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) x516)) (x1009 (x656 x648 x516)))))
(define-fun x1663 ((x648 Int) (x516 Int)) Bool (and (=> (and (and (<= x516 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x516 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x648) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) x516)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648) (x800 57896044618658097711785492504343953926634992332820282019728792003956564819968 x516)))) (=> (and (and (> x648 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x516))) (= (<= (x656 (- x648 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x800 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x516)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x648)))) (=> (and (and (< 0 x648) (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516) (<= x516 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x656 x648 (- x516 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x516) (x800 57896044618658097711785492504343953926634992332820282019728792003956564819968 x648)))) (=> (and (and (< 0 x516) (<= x516 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x648) (<= x648 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x800 57896044618658097711785492504343953926634992332820282019728792003956564819967 x516) x648) (<= (x656 x648 x516) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x546 ((x648 Int) (x516 Int)) Bool (and (x1663 x648 x516) (x754 x648 x516) (x344 x648 x516) (x352 x648 x516) (x930 x648 x516) (x1029 x648 x516) (x217 x648 x516)))
(define-fun x363 ((x648 Int)) Bool (and (= (x656 x648 0) 0) (= 0 (x656 0 x648))))
(define-fun x1 ((x648 Int)) Bool (and (= x648 (x656 1 x648)) (= (x656 x648 1) x648)))
(define-fun x782 ((x648 Int)) Bool (and (x1 x648) (x363 x648)))
(define-fun x323 ((x648 Int)) Bool (= (x1129 x648 1461501637330902918203684832716283019655932542976) (x935 x648 1461501637330902918203684832716283019655932542975)))
(define-fun x1147 ((x648 Int)) Bool (and (x940 x648 1461501637330902918203684832716283019655932542975) (x323 x648)))
(define-fun x498 ((x648 Int)) Bool (= (x1129 x648 1099511627776) (x935 x648 1099511627775)))
(define-fun x671 ((x648 Int)) Bool (and (x498 x648) (x940 x648 1099511627775)))
(define-fun x264 ((x1024 Int)) Int (ite (> x792 x1024) (x1108 x1024) 0))
(define-fun x773 ((x1024 Int)) Int 0)
(define-fun x1091 ((x1024 Int)) Int 0)
(define-fun x1305 ((x1024 Int)) Int 0)
(define-fun x327 ((x1024 Int)) Int 0)
(define-fun x1288 ((x1024 Int)) Int 0)
(define-fun x142 ((x1024 Int)) Int 0)
(define-fun x834 ((x1024 Int)) Int 0)
(define-fun x705 ((x1024 Int)) Int 0)
(define-fun x741 ((x1024 Int)) Int 0)
(define-fun x325 ((x1024 Int)) Int 0)
(define-fun x775 ((x1024 Int)) Int 0)
(define-fun x1012 ((x1024 Int)) Int 0)
(define-fun x1275 ((x1024 Int)) Int 0)
(define-fun x1062 ((x1024 Int)) Int 0)
(define-fun x1718 ((x1024 Int)) Int 0)
(define-fun x1119 ((x1024 Int)) Int 0)
(define-fun x43 ((x1024 Int)) Int 0)
(define-fun x1608 ((x1024 Int)) Int 0)
(define-fun x1423 ((x1024 Int)) Int 0)
(define-fun x549 ((x1024 Int)) Int 0)
(define-fun x1151 ((x1024 Int)) Int 0)
(define-fun x1564 ((x1024 Int)) Int 0)
(define-fun x199 ((x1024 Int)) Int (ite (= 704 x1024) x1600 (x741 x1024)))
(define-fun x1590 ((x1024 Int)) Int (ite (= x1024 736) x1219 (x199 x1024)))
(define-fun x419 ((x1024 Int)) Int (ite (= x1024 768) x1587 (x1590 x1024)))
(define-fun x795 ((x1024 Int)) Int (ite (= x1024 800) x1468 (x419 x1024)))
(define-fun x117 ((x1024 Int)) Int (ite (= x1024 832) x300 (x795 x1024)))
(define-fun x1111 ((x1024 Int)) Int (ite (= x1024 864) x391 (x117 x1024)))
(define-fun x670 ((x1024 Int)) Int (ite (= 896 x1024) x520 (x1111 x1024)))
(define-fun x114 ((x1024 Int)) Int (ite (= 928 x1024) x673 (x670 x1024)))
(define-fun x1327 ((x1024 Int)) Int (ite (= x1024 960) x762 (x114 x1024)))
(define-fun x306 ((x1024 Int)) Int 0)
(define-fun x460 ((x1024 Int)) Int (ite (= 256 x1024) x1255 (x1305 x1024)))
(define-fun x124 ((x1024 Int)) Int (ite (= 288 x1024) x1698 (x460 x1024)))
(define-fun x481 ((x1024 Int)) Int 0)
(define-fun x943 ((x1024 Int)) Int (ite (= x1024 704) x662 (x325 x1024)))
(define-fun x407 ((x1024 Int)) Int (ite (= 736 x1024) x1551 (x943 x1024)))
(define-fun x1260 ((x1024 Int)) Int (ite (= x1024 768) x1165 (x407 x1024)))
(define-fun x411 ((x1024 Int)) Int (ite (= 800 x1024) x373 (x1260 x1024)))
(define-fun x976 ((x1024 Int)) Int (ite (= x1024 832) x757 (x411 x1024)))
(define-fun x42 ((x1024 Int)) Int (ite (= 864 x1024) x252 (x976 x1024)))
(define-fun x1300 ((x1024 Int)) Int (ite (= 896 x1024) x501 (x42 x1024)))
(define-fun x583 ((x1024 Int)) Int (ite (= x1024 928) x381 (x1300 x1024)))
(define-fun x706 ((x1024 Int)) Int (ite (= 960 x1024) x1528 (x583 x1024)))
(define-fun x414 ((x1024 Int)) Int (x591 x1024))
(define-fun x866 ((x1024 Int)) Int (x1296 x1024))
(define-fun x531 ((x1024 Int)) Int (x1042 x1024))
(define-fun x1207 ((x1024 Int)) Int (x1078 x1024))
(define-fun x404 ((x1024 Int)) Int (x864 x1024))
(define-fun x1436 ((x1024 Int)) Int (x311 x1024))
(define-fun x396 ((x1024 Int)) Int (x1352 x1024))
(define-fun x1430 ((x1024 Int)) Int (x1597 x1024))
(define-fun x1576 ((x1024 Int)) Int (x1202 x1024))
(define-fun x699 ((x1024 Int)) Int (x1766 x1024))
(define-fun x1174 ((x1024 Int)) Int (x1104 x1024))
(define-fun x302 ((x1024 Int)) Int (x1404 x1024))
(define-fun x1738 ((x1024 Int)) Int (x1618 x1024))
(define-fun x1271 ((x1024 Int)) Int (x1321 x1024))
(define-fun x989 ((x1024 Int)) Int (x1441 x1024))
(define-fun x1273 ((x1024 Int)) Int (x884 x1024))
(define-fun x35 ((x1024 Int)) Int (x97 x1024))
(define-fun x276 ((x1024 Int)) Int (x562 x1024))
(define-fun x1733 ((x1024 Int)) Int (x1150 x1024))
(define-fun x1222 ((x1024 Int)) Int (x709 x1024))
(define-fun x880 ((x1024 Int)) Int (x840 x1024))
(define-fun x314 ((x1024 Int)) Int (x1081 x1024))
(define-fun x220 ((x1024 Int)) Int (x1578 x1024))
(define-fun x1040 ((x1024 Int)) Int (x66 x1024))
(define-fun x1371 ((x1024 Int)) Int (ite (> x759 x1024) (x318 x1024) 0))
(define-fun x80 ((x1024 Int)) Int (ite (and (> x759 x1024) (<= 0 x1024)) (x907 x1024) (x1371 x1024)))
(define-fun x1340 ((x1024 Int)) Int (ite (= x1024 x1747) x1223 (x332 x1024)))
(define-fun x607 ((x1024 Int)) Int (ite (= 128 x1024) x1418 (x142 x1024)))
(define-fun x1721 ((x1024 Int)) Int (ite (and (> (+ 160 x1418) x1024) (>= x1024 160)) (x80 (- (+ x1024 x629) 160)) (x607 x1024)))
(define-fun x140 ((x1024 Int)) Int (ite (= x1268 x1024) 0 (x1721 x1024)))
(define-fun x766 ((x1024 Int)) Int (ite (= x3 x1024) x598 (x140 x1024)))
(define-fun x382 ((x1024 Int)) Int (ite (and (>= x1024 x1057) (< x1024 (+ x1057 x49))) (x80 (- (+ x759 x1024) x1057)) (x766 x1024)))
(define-fun x512 ((x1024 Int)) Int 0)
(define-fun x1550 ((x1024 Int)) Int (ite (= x1024 256) x584 (x1288 x1024)))
(define-fun x1688 ((x1024 Int)) Int (ite (= x1024 288) x1239 (x1550 x1024)))
(define-fun x1452 ((x1024 Int)) Int 0)
(define-fun x963 ((x1024 Int)) Int (ite (= x1024 128) 85963009616197036880240088340724629170983710335684291091497906406952890531840 (x1091 x1024)))
(define-fun x17 ((x1024 Int)) Int (ite (= x1024 132) x1553 (x963 x1024)))
(define-fun x1535 ((x1024 Int)) Int (ite (= 128 x1024) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1151 x1024)))
(define-fun x848 ((x1024 Int)) Int (ite (= x1024 132) 729466174051048026939049150500379070045048658665 (x1535 x1024)))
(define-fun x526 ((x1024 Int)) Int (ite (= 164 x1024) x1553 (x848 x1024)))
(define-fun x1424 ((x1024 Int)) Int (ite (= 0 x1024) x1720 (x1558 x1024)))
(define-fun x377 ((x1024 Int)) Int (ite (= x1024 128) x1720 (x526 x1024)))
(define-fun x1793 ((x1024 Int)) Int (ite (and (<= 128 x1024) (< x1024 160)) (x1424 (- x1024 128)) (x1423 x1024)))
(define-fun x1508 ((x1024 Int)) Int (ite (= 224 x1024) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x377 x1024)))
(define-fun x528 ((x1024 Int)) Int (ite (= x1024 228) 443215666480553238610125355434898879895743000821 (x1508 x1024)))
(define-fun x999 ((x1024 Int)) Int (ite (= 260 x1024) x1553 (x528 x1024)))
(define-fun x1440 ((x1024 Int)) Int (ite (= x1024 0) x76 (x901 x1024)))
(define-fun x254 ((x1024 Int)) Int (ite (= 224 x1024) x76 (x999 x1024)))
(define-fun x635 ((x1024 Int)) Int (ite (and (> 256 x1024) (>= x1024 224)) (x1440 (- x1024 224)) (x43 x1024)))
(define-fun x464 ((x1024 Int)) Int (ite (= 320 x1024) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x254 x1024)))
(define-fun x90 ((x1024 Int)) Int (ite (= x1024 324) 953417218992365150631206543442508943947348309705 (x464 x1024)))
(define-fun x111 ((x1024 Int)) Int (ite (= 356 x1024) x1553 (x90 x1024)))
(define-fun x1529 ((x1024 Int)) Int (ite (= x1024 0) x579 (x548 x1024)))
(define-fun x245 ((x1024 Int)) Int (ite (= 320 x1024) x579 (x111 x1024)))
(define-fun x1536 ((x1024 Int)) Int (ite (and (<= 320 x1024) (< x1024 352)) (x1529 (- x1024 320)) (x1718 x1024)))
(define-fun x103 ((x1024 Int)) Int (ite (= x1024 416) 85421856841599162343179548931066850070836787616102889281506983661126589349888 (x245 x1024)))
(define-fun x1169 ((x1024 Int)) Int (ite (= 420 x1024) x1553 (x103 x1024)))
(define-fun x108 ((x1024 Int)) Int (ite (= 452 x1024) 443215666480553238610125355434898879895743000821 (x1169 x1024)))
(define-fun x674 ((x1024 Int)) Int (ite (= x1024 484) 81 (x108 x1024)))
(define-fun x1426 ((x1024 Int)) Int (ite (= 0 x1024) x207 (x1191 x1024)))
(define-fun x1507 ((x1024 Int)) Int (ite (and (<= 416 x1024) (< x1024 448)) (x1426 (- x1024 416)) (x1275 x1024)))
(define-fun x376 ((x1024 Int)) Int (ite x137 (x766 x1024) (x382 x1024)))
(define-fun x115 ((x1024 Int)) Int (ite (= x1024 x413) 57 (x376 x1024)))
(define-fun x1153 ((x1024 Int)) Int (ite (= x1024 x1072) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x115 x1024)))
(define-fun x374 ((x1024 Int)) Int (ite (= x1024 x1584) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1153 x1024)))
(define-fun x1631 ((x1024 Int)) Int (ite (= x846 x1024) x31 (x374 x1024)))
(define-fun x854 ((x1024 Int)) Int (ite (= x1329 x1024) x618 (x1631 x1024)))
(define-fun x1770 ((x1024 Int)) Int (ite (= x1024 x1163) x525 (x854 x1024)))
(define-fun x1693 ((x1024 Int)) Int (ite (= x771 x1024) x39 (x1770 x1024)))
(define-fun x653 ((x1024 Int)) Int (ite x1212 (x1770 x1024) (ite x1067 (x854 x1024) (ite x1726 (x1631 x1024) (ite x1684 (x374 x1024) (x1693 x1024))))))
(define-fun x1555 ((x1024 Int)) Int (ite (= x1547 x1024) 0 (x653 x1024)))
(define-fun x1228 ((x1024 Int)) Int (ite (= x1024 x974) x499 (x1555 x1024)))
(define-fun x331 ((x1024 Int)) Int (ite (= x1389 x1024) x1433 (x1228 x1024)))
(define-fun x1569 ((x1024 Int)) Int (ite (= x1024 x1031) x553 (x331 x1024)))
(define-fun x557 ((x1024 Int)) Int (ite (= x1024 x1466) x1763 (x1569 x1024)))
(define-fun x514 ((x1024 Int)) Int (ite (= x1024 x1547) x388 (x557 x1024)))
(define-fun x519 ((x1024 Int)) Int (ite (= x1570 x1024) x751 (x514 x1024)))
(define-fun x10 ((x1024 Int)) Int (ite x136 (x376 x1024) (x519 x1024)))
(define-fun x1630 ((x1024 Int)) Int (ite (= x1024 x1308) 57 (x10 x1024)))
(define-fun x1532 ((x1024 Int)) Int (ite (= x1024 x783) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x1630 x1024)))
(define-fun x933 ((x1024 Int)) Int (ite (= x1224 x1024) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1532 x1024)))
(define-fun x1021 ((x1024 Int)) Int (ite (= x1387 x1024) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x933 x1024)))
(define-fun x622 ((x1024 Int)) Int (ite (= x1024 x1713) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x1021 x1024)))
(define-fun x1668 ((x1024 Int)) Int (ite (= x882 x1024) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x622 x1024)))
(define-fun x1349 ((x1024 Int)) Int (ite (= x1024 x915) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x1668 x1024)))
(define-fun x1233 ((x1024 Int)) Int (ite (= x1241 x1024) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x1349 x1024)))
(define-fun x1725 ((x1024 Int)) Int (ite (= x1760 x1024) x821 (x1233 x1024)))
(define-fun x495 ((x1024 Int)) Int (ite (= x1024 x1142) x406 (x1725 x1024)))
(define-fun x1203 ((x1024 Int)) Int (ite (= x1134 x1024) x768 (x495 x1024)))
(define-fun x209 ((x1024 Int)) Int (ite (= x465 x1024) x5 (x1203 x1024)))
(define-fun x1724 ((x1024 Int)) Int (ite x279 (x1203 x1024) (ite x100 (x495 x1024) (ite x977 (x1725 x1024) (ite x8 (x1233 x1024) (x209 x1024))))))
(define-fun x1001 ((x1024 Int)) Int (ite (= x1024 x925) 0 (x1724 x1024)))
(define-fun x1350 ((x1024 Int)) Int (ite (= x1024 x1070) x164 (x1001 x1024)))
(define-fun x701 ((x1024 Int)) Int (ite (= x1591 x1024) x322 (x1350 x1024)))
(define-fun x1476 ((x1024 Int)) Int (ite (= x1024 x849) x610 (x701 x1024)))
(define-fun x984 ((x1024 Int)) Int (ite (= x1024 x1563) x1741 (x1476 x1024)))
(define-fun x632 ((x1024 Int)) Int (ite (= x1024 x79) x165 (x984 x1024)))
(define-fun x507 ((x1024 Int)) Int (ite x12 (x984 x1024) (ite x1571 (x1476 x1024) (ite x1753 (x701 x1024) (ite x928 (x1350 x1024) (x632 x1024))))))
(define-fun x1054 ((x1024 Int)) Int (ite (= x1024 x925) x271 (x507 x1024)))
(define-fun x1291 ((x1024 Int)) Int (ite (= x1565 x1024) x101 (x1054 x1024)))
(define-fun x451 ((x1024 Int)) Int (ite (= x1024 x422) x1113 (x1291 x1024)))
(define-fun x1010 ((x1024 Int)) Int (ite (= x1024 x518) x742 (x451 x1024)))
(define-fun x1140 ((x1024 Int)) Int (ite (= x1024 x1068) x969 (x1010 x1024)))
(define-fun x811 ((x1024 Int)) Int (ite (= x1290 x1024) x329 (x1140 x1024)))
(define-fun x216 ((x1024 Int)) Int (ite (= x1024 x1309) x554 (x811 x1024)))
(define-fun x1330 ((x1024 Int)) Int (ite (= x1024 x841) x106 (x216 x1024)))
(define-fun x1297 ((x1024 Int)) Int (ite (= x617 x1024) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x1330 x1024)))
(define-fun x624 ((x1024 Int)) Int (ite (= x1702 x1024) x1406 (x1297 x1024)))
(define-fun x760 ((x1024 Int)) Int (ite (= x1024 x1121) x431 (x624 x1024)))
(define-fun x449 ((x1024 Int)) Int (ite (= x1024 x894) x981 (x760 x1024)))
(define-fun x1787 ((x1024 Int)) Int (ite (= x891 x1024) x193 (x449 x1024)))
(define-fun x125 ((x1024 Int)) Int (ite (= x185 x1024) x1107 (x1787 x1024)))
(define-fun x102 ((x1024 Int)) Int (ite x308 (x125 x1024) (x1330 x1024)))
(define-fun x45 ((x1024 Int)) Int (ite (= x1024 x664) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x102 x1024)))
(define-fun x1069 ((x1024 Int)) Int (ite (= x667 x1024) x1541 (x45 x1024)))
(define-fun x1703 ((x1024 Int)) Int (ite (= x438 x1024) x857 (x1069 x1024)))
(define-fun x745 ((x1024 Int)) Int (ite (= x664 x1024) 0 (x1703 x1024)))
(define-fun x779 ((x1024 Int)) Int (ite (= x282 x1024) x1080 (x745 x1024)))
(define-fun x643 ((x1024 Int)) Int (ite (= x497 x1024) x1183 (x779 x1024)))
(define-fun x992 ((x1024 Int)) Int (ite (= x1024 x371) x173 (x643 x1024)))
(define-fun x303 ((x1024 Int)) Int (ite (= x1024 x896) x224 (x992 x1024)))
(define-fun x1397 ((x1024 Int)) Int (x264 x1024))
(define-fun x423 ((x1024 Int)) Int (ite (= x1024 x620) x88 (x303 x1024)))
(define-fun x68 ((x1024 Int)) Int (ite x1322 (x423 x1024) (ite x417 (x423 x1024) (x1703 x1024))))
(define-fun x828 ((x1024 Int)) Int (ite (= x717 x1024) 2 (x68 x1024)))
(define-fun x508 ((x1024 Int)) Int (ite (= x636 x1024) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x828 x1024)))
(define-fun x1420 ((x1024 Int)) Int (ite (= x952 x1024) 2 (x508 x1024)))
(define-fun x681 ((x1024 Int)) Int (ite (= x1024 x614) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x1420 x1024)))
(define-fun x1209 ((x1024 Int)) Int (ite (= x1258 x1024) x742 (x681 x1024)))
(define-fun x1315 ((x1024 Int)) Int (ite (= x1024 x1622) 9 (x1209 x1024)))
(define-fun x28 ((x1024 Int)) Int (ite (= x441 x1024) x1135 (x1315 x1024)))
(define-fun x1047 ((x1024 Int)) Int (ite (= x1024 x1245) x981 (x28 x1024)))
(define-fun x505 ((x1024 Int)) Int (ite (= x529 x1024) x565 (x1047 x1024)))
(define-fun x107 ((x1024 Int)) Int (ite (= x298 x1024) x1585 (x505 x1024)))
(define-fun x713 ((x1024 Int)) Int (ite (= x1280 x1024) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x107 x1024)))
(define-fun x793 ((x1024 Int)) Int (ite (= x1024 x1409) x277 (x713 x1024)))
(define-fun x23 ((x1024 Int)) Int (ite (= x60 x1024) x1419 (x793 x1024)))
(define-fun x960 ((x1024 Int)) Int (ite (= x1592 x1024) x400 (x23 x1024)))
(define-fun x1624 ((x1024 Int)) Int (ite (= x316 x1024) 128 (x960 x1024)))
(define-fun x722 ((x1024 Int)) Int (ite (= x1024 x1749) x1065 (x1624 x1024)))
(define-fun x285 ((x1024 Int)) Int (ite (= x1024 x210) x1714 (x722 x1024)))
(define-fun x337 ((x1024 Int)) Int (ite (= x1024 x1356) x1648 (x285 x1024)))
(define-fun x899 ((x1024 Int)) Int (ite (= x294 x1024) x248 (x337 x1024)))
(define-fun x1030 ((x1024 Int)) Int (ite (= x1024 x309) x244 (x899 x1024)))
(define-fun x410 ((x1024 Int)) Int (ite x135 (x899 x1024) (ite x979 (x337 x1024) (ite x1293 (x285 x1024) (ite x260 (x722 x1024) (x1030 x1024))))))
(define-fun x214 ((x1024 Int)) Int (ite (= x1204 x1024) 0 (x410 x1024)))
(define-fun x592 ((x1024 Int)) Int (ite (and (< x1024 (+ x1280 64)) (>= x1024 x1280)) (x233 (- x1024 x1280)) (x214 x1024)))
(define-fun x776 ((x1024 Int)) Int (ite x215 (x592 x1024) (x214 x1024)))
(define-fun x726 ((x1024 Int)) Int (ite (and (<= x1280 x1024) (< x1024 (+ x1280 64))) (x233 (- x1024 x1280)) (x776 x1024)))
(define-fun x504 ((x1024 Int)) Int (ite (= x440 x1024) 2 (x726 x1024)))
(define-fun x641 ((x1024 Int)) Int (ite (= x1000 x1024) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x504 x1024)))
(define-fun x703 ((x1024 Int)) Int (ite (= x856 x1024) 2 (x641 x1024)))
(define-fun x1250 ((x1024 Int)) Int (ite (= x1376 x1024) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x703 x1024)))
(define-fun x1579 ((x1024 Int)) Int (ite (= x886 x1024) 2 (x1250 x1024)))
(define-fun x1456 ((x1024 Int)) Int (ite (= x1024 x200) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x1579 x1024)))
(define-fun x1116 ((x1024 Int)) Int (ite (= x1638 x1024) 2 (x1456 x1024)))
(define-fun x92 ((x1024 Int)) Int (ite (= x1024 x1402) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x1116 x1024)))
(define-fun x1459 ((x1024 Int)) Int (ite x1364 (x1456 x1024) (x92 x1024)))
(define-fun x1556 ((x1024 Int)) Int (ite (= x1024 x1675) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1459 x1024)))
(define-fun x537 ((x1024 Int)) Int (ite (= x44 x1024) x799 (x1556 x1024)))
(define-fun x1345 ((x1024 Int)) Int (ite (= x1719 x1024) x1112 (x537 x1024)))
(define-fun x203 ((x1024 Int)) Int (ite (= x1024 x1117) x299 (x1345 x1024)))
(define-fun x272 ((x1024 Int)) Int (ite (= x1024 x939) 128 (x203 x1024)))
(define-fun x1276 ((x1024 Int)) Int (ite (= x601 x1024) x1789 (x272 x1024)))
(define-fun x1581 ((x1024 Int)) Int (ite (and (< x1024 (+ x1789 x1545)) (>= x1024 x1545)) (x80 (- (+ x1024 x704) x1545)) (x1276 x1024)))
(define-fun x1761 ((x1024 Int)) Int (ite (= x689 x1024) 0 (x1581 x1024)))
(define-fun x1331 ((x1024 Int)) Int (ite (and (<= x1675 x1024) (< x1024 (+ x1675 64))) (x991 (- x1024 x1675)) (x1761 x1024)))
(define-fun x855 ((x1024 Int)) Int (ite (= x1415 x1024) x367 (x97 x1024)))
(define-fun x105 ((x1024 Int)) Int (ite (= x1024 x513) x1410 (x591 x1024)))
(define-fun x1798 ((x1024 Int)) Int (ite x835 (x591 x1024) (x105 x1024)))
(define-fun x1313 ((x1024 Int)) Int (ite x835 (x855 x1024) (x97 x1024)))
(define-fun x128 ((x1024 Int)) Int (ite (= x1024 x336) x965 (x562 x1024)))
(define-fun x1365 ((x1024 Int)) Int (ite (= x1024 x336) x261 (x1404 x1024)))
(define-fun x998 ((x1024 Int)) Int 0)
(define-fun x1346 ((x1024 Int)) Int (ite (= x1024 704) x942 (x775 x1024)))
(define-fun x70 ((x1024 Int)) Int (ite (= x1024 736) x269 (x1346 x1024)))
(define-fun x7 ((x1024 Int)) Int (ite (= x1024 768) x429 (x70 x1024)))
(define-fun x1491 ((x1024 Int)) Int (ite (= x1024 800) x243 (x7 x1024)))
(define-fun x781 ((x1024 Int)) Int (ite (= x1024 832) x487 (x1491 x1024)))
(define-fun x534 ((x1024 Int)) Int (ite (= 864 x1024) x1265 (x781 x1024)))
(define-fun x613 ((x1024 Int)) Int (ite (= 896 x1024) x1437 (x534 x1024)))
(define-fun x1194 ((x1024 Int)) Int (ite (= 928 x1024) x1788 (x613 x1024)))
(define-fun x1171 ((x1024 Int)) Int (ite (= 960 x1024) x160 (x1194 x1024)))
(define-fun x319 ((x1024 Int)) Int (ite x1734 (x1331 x1024) (x1761 x1024)))
(define-fun x239 ((x1024 Int)) Int (ite (and (<= x1675 x1024) (> (+ x1675 64) x1024)) (x991 (- x1024 x1675)) (x319 x1024)))
(define-fun x949 ((x1024 Int)) Int (ite (= x1024 x1338) 2 (x239 x1024)))
(define-fun x522 ((x1024 Int)) Int (ite (= x1024 x729) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x949 x1024)))
(define-fun x1520 ((x1024 Int)) Int (ite (= x1024 x1071) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x522 x1024)))
(define-fun x360 ((x1024 Int)) Int (ite (= x486 x1024) x946 (x1520 x1024)))
(define-fun x355 ((x1024 Int)) Int (ite (= x1024 x353) x16 (x360 x1024)))
(define-fun x753 ((x1024 Int)) Int (ite (= x1024 x402) x1049 (x355 x1024)))
(define-fun x962 ((x1024 Int)) Int (ite (= x872 x1024) x1112 (x753 x1024)))
(define-fun x1378 ((x1024 Int)) Int (ite (and (> (+ 32 x1071) x1024) (>= x1024 x1071)) (x22 (- x1024 x1071)) (x962 x1024)))
(define-fun x503 ((x1024 Int)) Int (ite x229 (x1378 x1024) (x962 x1024)))
(define-fun x468 ((x1024 Int)) Int (ite (and (<= x1071 x1024) (> (+ 32 x1071) x1024)) (x22 (- x1024 x1071)) (x503 x1024)))
(assert (= x1722 (x1005 (x1323 x1722 x816 x234 x1298 x786))))
(assert (x304 x1719))
(assert (x304 x447))
(assert (= 64 (x1005 (x910 64 x1553 x1249))))
(assert (=> (>= 10000 x1363) (= 0 (x831 x1363))))
(assert (x304 x1470))
(assert (=> (>= 10000 x577) (= 0 (x831 x577))))
(assert (x304 x561))
(assert (< 10000 (x910 64 729466174051048026939049150500379070045048658665 0)))
(assert (x304 x1601))
(assert (= (x1082 (x910 64 x1553 x286)) x1553))
(assert (x304 x733))
(assert (x304 x1368))
(assert (= true x461))
(assert (x304 x1495))
(assert (=> (>= 10000 x1561) (= (x831 x1561) 0)))
(assert (> (x1064 x885 x1046 x1401 x1607 x1287 x609) 10000))
(assert (= (x473 (x912 x1145 x993 x691 x1692 x1396 x211 x666)) x211))
(assert (= (x831 (x333 x515 x1059)) (x333 x515 x1059)))
(assert (x304 x1706))
(assert (x304 x320))
(assert (=> (>= 10000 x789) (= 0 (x831 x789))))
(assert (> (x1064 x1145 x1475 x1407 x873 x6 x1206) 10000))
(assert (not (x517 (x910 64 x1553 x1045))))
(assert (=> (<= x1279 10000) (= (x831 x1279) 0)))
(assert (=> (>= 10000 x13) (= (x831 x13) 0)))
(assert (=> (>= 10000 x662) (= 0 (x831 x662))))
(assert (x304 x1152))
(assert (x304 x1551))
(assert (x304 x96))
(assert (= (x831 (+ x57 1)) (x831 x57)))
(assert (x304 x1543))
(assert (x304 x106))
(assert (x304 x180))
(assert (= 3 (x791 (x910 64 x1113 3))))
(assert (x304 x1136))
(assert (=> (<= x1206 10000) (= 0 (x831 x1206))))
(assert (x304 x759))
(assert (=> (<= x812 10000) (= (x831 x812) 0)))
(assert (x304 x349))
(assert (x304 x1729))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (x304 x1177))
(assert (x304 x911))
(assert (= x1495 (x791 (x910 x458 x18 x1495))))
(assert (x304 x771))
(assert (= (x14 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) x714))
(assert (= (x791 (x1323 x515 x644 x1286 x1464 x929)) x1286))
(assert (x304 x1504))
(assert (x304 x1647))
(assert (= (x831 (x910 64 x1553 x286)) (x910 64 x1553 x286)))
(assert (x304 x587))
(assert (x304 x796))
(assert (=> (<= x580 10000) (= (x831 x580) 0)))
(assert (x304 x1384))
(assert (x304 x920))
(assert (x304 x694))
(assert (= (x831 (x910 64 953417218992365150631206543442508943947348309705 0)) (x910 64 953417218992365150631206543442508943947348309705 0)))
(assert (x304 x63))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (=> (<= x764 10000) (= 0 (x831 x764))))
(assert (= x1393 (x1284 (x912 x515 x913 x1109 x1393 x1645 x1282 x567))))
(assert (x304 x1611))
(assert (=> (>= 10000 x6) (= (x831 x6) 0)))
(assert (x304 x1134))
(assert (= (x791 (x1292 x368 x1354 x485 x1343)) x485))
(assert (x517 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (x304 x432))
(assert (x782 x598))
(assert (x304 x755))
(assert (= (x1082 (x1292 x1145 x1513 x1384 x356)) x1513))
(assert (= 0 (x791 (x910 64 443215666480553238610125355434898879895743000821 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x885 x966 x350 x968 x278 x393 x1136 x588)))
(assert (x304 x1467))
(assert (< (x333 x515 x1059) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1082 (x910 64 x1600 3)) x1600))
(assert (=> (>= 10000 x240) (= 0 (x831 x240))))
(assert (x304 x219))
(assert (x304 x1220))
(assert (> (x333 x257 x1503) 10000))
(assert (x304 x807))
(assert (x304 x1503))
(assert (x546 32 x598))
(assert (x304 x1678))
(assert (x304 x1497))
(assert (x304 x1794))
(assert (= x1161 (=> (and (= (not (> x770 4)) x1166) (= (x984 x1272) x165) (= (x870 (+ x79 32)) x179)) (and (=> (and (= 4 x1745) (= (+ 32 x1272) x869) (= x179 x841)) x1538) x1166))))
(assert (x304 x1388))
(assert (x304 x610))
(assert (x304 x1490))
(assert (x304 x966))
(assert (< 10000 (x1323 x257 x932 x1244 x328 x1709)))
(assert (x304 x269))
(assert (= (x831 340282366920938463463374607431768211455) 0))
(assert (x304 x36))
(assert (x304 x1168))
(assert (= x1722 (x1005 (x333 x1722 x1089))))
(assert (= x1722 (x1005 (x1064 x1722 x1710 x577 x606 x67 x527))))
(assert (x304 x1283))
(assert (< (x1323 x458 x602 x1408 x1173 x1220) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x831 (x1292 x515 x1732 x1259 x375)) (x1292 x515 x1732 x1259 x375)))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (x304 x948))
(assert (=> (>= 10000 x1682) (= 0 (x831 x1682))))
(assert (=> (<= x556 10000) (= 0 (x831 x556))))
(assert (= (x831 (x910 64 729466174051048026939049150500379070045048658665 0)) (x910 64 729466174051048026939049150500379070045048658665 0)))
(assert (x304 x53))
(assert (=> (>= 10000 x1464) (= 0 (x831 x1464))))
(assert (= (x831 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)) (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (= (x1082 (x1323 x885 x131 x1699 x604 x728)) x131))
(assert (x304 x1232))
(assert (x304 x525))
(assert (= (or x1571 x1753 x928 x1157 x12) x357))
(assert (> (x912 x1145 x993 x691 x1692 x1396 x211 x666) 10000))
(assert (x304 x439))
(assert (= x1279 (x14 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (not (x517 (x1292 x1145 x1513 x1384 x356))))
(assert (=> (<= x346 10000) (= (x831 x346) 0)))
(assert (x304 x1677))
(assert (x304 x968))
(assert (= (x473 (x1064 x368 x1414 x569 x437 x677 x1755)) x1755))
(assert (= 0 (x831 85963009616197036880240088340724629170983710335684291091497906406952890531840)))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (= (or x769 x1002) x483))
(assert (x304 x924))
(assert (< 10000 (x912 x458 x1797 x1149 x1254 x434 x219 x9)))
(assert (= (and x1458 (not x59)) x1526))
(assert (x304 x683))
(assert (x304 x786))
(assert (x304 x543))
(assert (x304 x757))
(assert (=> (<= x1393 10000) (= 0 (x831 x1393))))
(assert (=> (>= 10000 x934) (= 0 (x831 x934))))
(assert (= (x1323 x1145 x556 x180 x921 x1435) (x831 (x1323 x1145 x556 x180 x921 x1435))))
(assert (not (x517 (x910 x257 x1707 x654))))
(assert (= (x1323 x458 x602 x1408 x1173 x1220) (x831 (x1323 x458 x602 x1408 x1173 x1220))))
(assert (x304 x1287))
(assert (x304 x471))
(assert (x304 x44))
(assert (= (x14 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) x789))
(assert (= x885 (x1005 (x1292 x885 x1093 x1392 x268))))
(assert (= (x791 (x1064 x1145 x1475 x1407 x873 x6 x1206)) x1407))
(assert (x304 x350))
(assert (= x458 (x1005 (x1292 x458 x38 x143 x399))))
(assert (x304 x76))
(assert (= x1543 (x1599 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (=> (>= 10000 x241) (= 0 (x831 x241))))
(assert (= x1546 (x14 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (x517 18446744073709551550))
(assert (x517 1099511627775))
(assert (= 0 (x831 18446744073709551550)))
(assert (=> (>= 10000 x1431) (= 0 (x831 x1431))))
(assert (x304 x1689))
(assert (= x1553 (x1082 (x910 64 x1553 x1045))))
(assert (=> (<= x38 10000) (= 0 (x831 x38))))
(assert (x1147 x1416))
(assert (= (x333 x257 x1503) (x831 (x333 x257 x1503))))
(assert (= x136 (and x829 (not x463))))
(assert (x304 x120))
(assert (x304 x1316))
(assert (=> (<= x827 10000) (= (x831 x827) 0)))
(assert (> (x912 x515 x913 x1109 x1393 x1645 x1282 x567) 10000))
(assert (x304 x559))
(assert (x304 x252))
(assert (=> (>= 10000 x168) (= 0 (x831 x168))))
(assert (x304 x1472))
(assert (< 10000 (x1064 x458 x827 x1073 x1501 x1439 x1606)))
(assert (x304 x872))
(assert (x304 x822))
(assert (= (x1284 (x1323 x458 x602 x1408 x1173 x1220)) x1173))
(assert (= (x1082 (x1064 x1673 x1351 x222 x837 x1771 x764)) x1351))
(assert (x304 x218))
(assert (x304 x1382))
(assert (x304 x1413))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1064 x368 x1414 x569 x437 x677 x1755)))
(assert (x304 x1017))
(assert (< (x1064 x257 x249 x291 x201 x568 x724) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1627))
(assert (= (x1082 (x1292 x515 x1732 x1259 x375)) x1732))
(assert (x304 x1279))
(assert (=> (>= 10000 x1298) (= 0 (x831 x1298))))
(assert (= (x831 37749366859872002549862985897619888669665948435824635674531347399775013991474) 0))
(assert (x304 x307))
(assert (x304 x1500))
(assert (x304 x1648))
(assert (x1314 x1266))
(assert (x304 x1400))
(assert (= x1673 (x1005 (x912 x1673 x1256 x1041 x626 x920 x1610 x714))))
(assert (= 0 (x831 52672081143094129087634851003622940732604441515226977473621344926390909140992)))
(assert (x304 x618))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 81 x177)))
(assert (= (x1082 (x1064 x458 x827 x1073 x1501 x1439 x1606)) x827))
(assert (x304 x1044))
(assert (x304 x1138))
(assert (x304 x1534))
(assert (x304 x1110))
(assert (x304 x758))
(assert (= (x1005 (x651 0)) 0))
(assert (x304 x785))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 x1673 x1731 x58)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1064 x885 x1046 x1401 x1607 x1287 x609)))
(assert (=> (<= x1095 10000) (= 0 (x831 x1095))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1323 x515 x644 x1286 x1464 x929)))
(assert (=> (>= 10000 x1254) (= (x831 x1254) 0)))
(assert (= (x1005 (x1064 x515 x987 x843 x1502 x934 x524)) x515))
(assert (=> (<= x27 10000) (= 0 (x831 x27))))
(assert (x517 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639805) 0))
(assert (=> (>= 10000 x654) (= 0 (x831 x654))))
(assert (< 10000 (x910 64 443215666480553238610125355434898879895743000821 0)))
(assert (= 0 (x831 16777215)))
(assert (= (x1599 (x1323 x1145 x556 x180 x921 x1435)) x1435))
(assert (x517 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1323 x1722 x816 x234 x1298 x786)))
(assert (=> (<= x1546 10000) (= 0 (x831 x1546))))
(assert (= x581 (x791 (x910 64 x1553 x581))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x304 x1422))
(assert (=> (>= 10000 x1225) (= (x831 x1225) 0)))
(assert (= x1038 (=> (and (= (x1770 x798) x39) (= x771 (x870 (+ x846 96))) (= x723 (not (> x1267 128))) (= (x870 (+ 96 x1072)) x798)) (and x1221 x723))))
(assert (= (x1284 (x1064 x1145 x1475 x1407 x873 x6 x1206)) x873))
(assert (x304 x602))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x304 x1411))
(assert (x304 x1795))
(assert (x304 x524))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x255 x596))
(assert (x304 x767))
(assert (= (x831 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (=> (<= x561 10000) (= 0 (x831 x561))))
(assert (=> (>= 10000 x348) (= (x831 x348) 0)))
(assert (x304 x1700))
(assert (x517 18446744073709551487))
(assert (= (x831 (+ x198 1)) (x831 x198)))
(assert (x304 x243))
(assert (x304 x202))
(assert (=> (>= 10000 x249) (= 0 (x831 x249))))
(assert (x304 x1006))
(assert (> (x910 x515 x359 x1658) 10000))
(assert (= (x1284 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)) x1035))
(assert (= x398 (x1284 (x912 x368 x1561 x690 x398 x1790 x1517 x1341))))
(assert (x304 x802))
(assert (= (x912 x515 x913 x1109 x1393 x1645 x1282 x567) (x831 (x912 x515 x913 x1109 x1393 x1645 x1282 x567))))
(assert (x304 x1347))
(assert (x304 x849))
(assert (not (x517 (x1292 x885 x1093 x1392 x268))))
(assert (x304 x365))
(assert (x304 x1517))
(assert (x304 x1223))
(assert (x236 x19))
(assert (x1314 x972))
(assert (= (and x1589 (not x339)) x979))
(assert (< (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x527 (x473 (x1064 x1722 x1710 x577 x606 x67 x527))))
(assert (= x257 (x1005 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (x304 x1451))
(assert (= (x791 (x1323 x257 x932 x1244 x328 x1709)) x1244))
(assert (x304 x1363))
(assert (= (x1284 (x1064 x368 x1414 x569 x437 x677 x1755)) x437))
(assert (> (x912 x1722 x844 x240 x1097 x1283 x1431 x789) 10000))
(assert (= 0 (x831 25877242110744216891076975195880784582809329153640315260649044424131709239296)))
(assert (x304 x1176))
(assert (x304 x792))
(assert (x304 x138))
(assert (x304 x61))
(assert (= (x1323 x368 x733 x13 x27 x1469) (x831 (x1323 x368 x733 x13 x27 x1469))))
(assert (x304 x1485))
(assert (x304 x712))
(assert (x304 x188))
(assert (= (x831 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) (x912 x1722 x844 x240 x1097 x1283 x1431 x789)))
(assert (= x666 (x14 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (= x356 (x1284 (x1292 x1145 x1513 x1384 x356))))
(assert (x304 x1391))
(assert (= (x831 18446744073709551487) 0))
(assert (= x15 (x1284 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (x304 x718))
(assert (x304 x636))
(assert (x304 x1041))
(assert (x304 x1657))
(assert (= (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455) (x831 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (x304 x679))
(assert (x304 x324))
(assert (x236 x596))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x651 0)))
(assert (x304 x116))
(assert (x304 x1026))
(assert (x304 x441))
(assert (= x1488 (x1284 (x1292 x1722 x1509 x1717 x1488))))
(assert (=> (>= 10000 x1036) (= (x831 x1036) 0)))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639870)))
(assert (=> (>= 10000 x131) (= 0 (x831 x131))))
(assert (not (x517 (x333 x1722 x1089))))
(assert (x304 x1716))
(assert (=> (<= x926 10000) (= (x831 x926) 0)))
(assert (x304 x1049))
(assert (x304 x39))
(assert (= (x1005 (x910 x1673 x1731 x58)) x1673))
(assert (x304 x734))
(assert (x304 x764))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (x304 x425))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x304 x165))
(assert (x304 x1086))
(assert (x304 x714))
(assert (x304 x1672))
(assert (> (x910 64 x662 3) 10000))
(assert (x304 x18))
(assert (x304 x1272))
(assert (x304 x1139))
(assert (= (x1284 (x1292 x1673 x326 x683 x1493)) x1493))
(assert (x304 x1016))
(assert (= (x1005 (x1292 x515 x1732 x1259 x375)) x515))
(assert (x517 4067465820))
(assert (x1022 x1232))
(assert (x304 x606))
(assert (x304 x1183))
(assert (x304 x693))
(assert (= (x1082 (x910 64 953417218992365150631206543442508943947348309705 0)) 953417218992365150631206543442508943947348309705))
(assert (x304 x213))
(assert (= x99 (x1284 (x1292 66 x1613 x679 x99))))
(assert (= (and x1053 (not x947)) x482))
(assert (x255 x19))
(assert (= x1458 (or x979 x1293 x260 x135 x453)))
(assert (x304 x654))
(assert (x304 x250))
(assert (x304 x1309))
(assert (x304 x131))
(assert (x1314 x1383))
(assert (= x222 (x791 (x1064 x1673 x1351 x222 x837 x1771 x764))))
(assert (x304 x973))
(assert (< (x1292 66 x1613 x679 x99) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x255 32))
(assert (= x890 (and x1687 x1335)))
(assert (= 0 (x831 1551562514)))
(assert (x304 x290))
(assert (= (x1082 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) x1256))
(assert (x517 58652715557392481136322917363278564085642169142198350659161099264462031945728))
(assert (x304 x1489))
(assert (= x1046 (x1082 (x1064 x885 x1046 x1401 x1607 x1287 x609))))
(assert (x304 x1796))
(assert (x304 x1658))
(assert (= x6 (x1599 (x1064 x1145 x1475 x1407 x873 x6 x1206))))
(assert (x517 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (x304 x553))
(assert (x304 x780))
(assert (x304 x1036))
(assert (= (x1082 (x1292 x885 x1093 x1392 x268)) x1093))
(assert (= x968 (x1284 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (x304 x634))
(assert (x304 x1063))
(assert (x304 x454))
(assert (= (x333 x885 x1398) (x831 (x333 x885 x1398))))
(assert (x304 x440))
(assert (= 64 (x1005 (x910 64 x1553 x581))))
(assert (x304 x13))
(assert (= (x1082 (x1323 x515 x644 x1286 x1464 x929)) x644))
(assert (= (x791 (x910 64 81 x177)) x177))
(assert (x304 x1448))
(assert (< (x910 x1722 x1008 x1311) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x831 24068214603859720034826088920346711864364023158142564334732402816841156945010)))
(assert (x517 340282366920938463463374607431768211455))
(assert (= x1287 (x1599 (x1064 x885 x1046 x1401 x1607 x1287 x609))))
(assert (x517 340282366920938463463374607431768211454))
(assert (x304 x1324))
(assert (x304 x26))
(assert (x304 x1311))
(assert (=> (>= 10000 x1475) (= 0 (x831 x1475))))
(assert (= (=> (and (= (= x1588 0) x909) (or (and (= 0 x1588) (not x909)) x909)) x267) x721))
(assert (= x215 (and x1458 x59)))
(assert (not (x517 (x1064 x1673 x1351 x222 x837 x1771 x764))))
(assert (x304 x1137))
(assert (x304 x1483))
(assert (x304 x273))
(assert (not (x517 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (= (x791 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x652))
(assert (x304 x1527))
(assert (x304 x1539))
(assert (x304 x222))
(assert (x304 x942))
(assert (= 0 (x831 22264039863272420937079131806861516217942124584529674491290359742488301797376)))
(assert (= x700 (or x75 x8 x977 x100 x279)))
(assert (x304 x1376))
(assert (x304 x978))
(assert (x304 x1577))
(assert (x304 x535))
(assert (= (x1292 x1673 x326 x683 x1493) (x831 (x1292 x1673 x326 x683 x1493))))
(assert (x304 x1720))
(assert (not (x517 (x912 x515 x913 x1109 x1393 x1645 x1282 x567))))
(assert (x304 x1481))
(assert (x304 x1628))
(assert (x304 x716))
(assert (x304 x1510))
(assert (x304 x1792))
(assert (x304 x1079))
(assert (=> (>= 10000 x1056) (= 0 (x831 x1056))))
(assert (x304 x1131))
(assert (= (x1005 (x910 x885 x1092 x346)) x885))
(assert (x517 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= x1364 (and (not x1639) x1156)))
(assert (x304 x1282))
(assert (x304 x1431))
(assert (x304 x183))
(assert (x304 x1557))
(assert (= x1247 (and x747 (not x1326))))
(assert (x304 x1748))
(assert (x304 x1554))
(assert (x304 x589))
(assert (x304 x1614))
(assert (=> (>= 10000 x1606) (= (x831 x1606) 0)))
(assert (= x730 (and x1053 x947)))
(assert (x304 x385))
(assert (=> (>= 10000 x1405) (= 0 (x831 x1405))))
(assert (x517 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (=> (>= 10000 x58) (= 0 (x831 x58))))
(assert (= x780 (x14 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900))))
(assert (= (x831 x1421) (x831 (+ x1421 1))))
(assert (x255 x796))
(assert (x304 x277))
(assert (x304 x211))
(assert (x304 x224))
(assert (x304 x812))
(assert (= 0 (x831 18446744073709551391)))
(assert (> (x910 x1673 x1731 x58) 10000))
(assert (=> (>= 10000 x1093) (= (x831 x1093) 0)))
(assert (x1147 x796))
(assert (= (x1599 (x1323 x257 x932 x1244 x328 x1709)) x1709))
(assert (= (x1599 (x1323 x515 x644 x1286 x1464 x929)) x929))
(assert (= x1343 (x1284 (x1292 x368 x1354 x485 x1343))))
(assert (=> (>= 10000 x67) (= 0 (x831 x67))))
(assert (x304 x309))
(assert (=> (<= x900 10000) (= 0 (x831 x900))))
(assert (x304 x1442))
(assert (=> (<= x1046 10000) (= (x831 x1046) 0)))
(assert (x304 x905))
(assert (= (x1284 (x1064 x1673 x1351 x222 x837 x1771 x764)) x837))
(assert (x304 x820))
(assert (x304 x1563))
(assert (x304 x1351))
(assert (= (x1284 (x1064 x1722 x1710 x577 x606 x67 x527)) x606))
(assert (> (x1323 x515 x644 x1286 x1464 x929) 10000))
(assert (= (x1005 (x333 x1673 x1130)) x1673))
(assert (x304 x1710))
(assert (x304 x680))
(assert (= (x1284 (x1323 x515 x644 x1286 x1464 x929)) x1464))
(assert (< (x1292 x257 x954 x926 x936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1117))
(assert (x304 x465))
(assert (=> (>= 10000 x418) (= (x831 x418) 0)))
(assert (x304 x351))
(assert (x304 x1776))
(assert (=> (<= x1041 10000) (= 0 (x831 x1041))))
(assert (not (x517 (x910 64 443215666480553238610125355434898879895743000821 1))))
(assert (< (x333 x257 x1503) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1596))
(assert (> (x1064 x1722 x1710 x577 x606 x67 x527) 10000))
(assert (x421 x1266 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x631))
(assert (= x1188 (x1284 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (x304 x1666))
(assert (x304 x1106))
(assert (x304 x1575))
(assert (=> (<= x219 10000) (= 0 (x831 x219))))
(assert (= (x1599 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) x920))
(assert (= x266 (x473 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (=> (>= 10000 x588) (= 0 (x831 x588))))
(assert (x304 x1310))
(assert (= (x831 (x1064 x1722 x1710 x577 x606 x67 x527)) (x1064 x1722 x1710 x577 x606 x67 x527)))
(assert (x304 x1549))
(assert (x304 x1600))
(assert (x517 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (x304 x427))
(assert (=> (>= 10000 x290) (= 0 (x831 x290))))
(assert (x304 x265))
(assert (x304 x1394))
(assert (= x1517 (x473 (x912 x368 x1561 x690 x398 x1790 x1517 x1341))))
(assert (x304 x645))
(assert (=> (>= 10000 x1243) (= 0 (x831 x1243))))
(assert (= x826 (=> (and (= x1611 (x625 (- x1018 x185))) (= (x870 (+ 160 x617)) x1018) (= x1121 (x870 (+ x1702 32))) (= (x870 (+ x617 32)) x1702) (= x515 (x125 x185)) (= x1107 (x625 (- x1611 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x185)) (= x237 (x870 (+ 32 x185))) (= x617 (x870 (+ x185 32))) (not (= x185 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x894 (x870 (+ 32 x1121))) (< x185 x1018) (not (= x185 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (<= x515 224) x1779) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x185) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x185) (= x891 (x870 (+ 32 x894))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x185)) (and x1779 (=> (and (= (x870 (+ 96 x237)) x469) (= x1143 (x910 x515 x359 x1658)) (= x150 (x870 (+ x237 64))) (= (x125 x566) x809) (= (x125 x150) x1502) (= (x125 x986) x1363) (= x578 (x870 (+ 192 x237))) (= x1059 (x125 x237)) (= (x870 (+ x237 128)) x1006) (= (x1064 x515 x987 x843 x1502 x934 x524) x456) (= (x125 x897) x929) (= (x125 x1230) x1259) (= x1732 (x125 x237)) (= x1541 x1780) (= (x125 x237) x913) (= x1750 (x125 x696)) (= (x870 (+ 32 x237)) x1337) (= (x870 (+ 32 x237)) x539) (= x375 (x125 x1666)) (= (x870 (+ x237 160)) x1186) (= (x125 x469) x934) (= (x870 (+ x237 64)) x1656) (= x313 (x870 (+ x237 64))) (= x687 (x870 (+ x237 32))) (= x567 (x125 x1186)) (= x524 (x125 x1006)) (= x566 (x870 (+ 160 x237))) (= (x333 x515 x1059) x805) (= (x870 (+ x237 64)) x1757) (= (x870 (+ 96 x237)) x696) (= (x870 (+ x237 128)) x986) (= (x125 x777) x1282) (= x858 (x870 (+ x237 96))) (= x1666 (x870 (+ x237 64))) (= (x125 x237) x987) (= (x870 (+ 32 x237)) x1230) (= (x125 x687) x1286) (= (x870 (+ 96 x237)) x897) (= (x125 x1337) x1658) (= (x125 x237) x359) (= (x125 x1656) x1464) (= x1780 (ite (= 0 x515) x436 (ite (>= 32 x515) x805 (ite (>= 64 x515) x1143 (ite (<= x515 96) x1105 (ite (<= x515 128) x1625 (ite (<= x515 160) x456 (ite (>= 192 x515) x1756 (ite (>= 224 x515) x1767 x284))))))))) (= (x870 (+ x237 128)) x777) (= (x1323 x515 x644 x1286 x1464 x929) x1625) (= x436 (x651 0)) (= (x125 x539) x1109) (= x1756 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)) (= x1767 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)) (= (x1292 x515 x1732 x1259 x375) x1105) (= x1018 x664) (= (x125 x1020) x1695) (= x1516 (x125 x1757)) (= (x125 x858) x1645) (= (x125 x313) x1393) (= x644 (x125 x237)) (= x168 (x125 x237)) (= x843 (x125 x191)) (= (x870 (+ 32 x237)) x191) (= x711 (x125 x578)) (= x1020 (x870 (+ 32 x237)))) x1251)))))
(assert (= (=> (and (= false x364) (= x511 true) (= x1324 0)) x1302) x478))
(assert (x304 x844))
(assert (= (x831 (+ 1 x433)) (x831 x433)))
(assert (x304 x328))
(assert (x304 x1523))
(assert (not (x517 (x333 x515 x1059))))
(assert (=> (<= x929 10000) (= (x831 x929) 0)))
(assert (=> (>= 10000 x359) (= 0 (x831 x359))))
(assert (=> (>= 10000 x268) (= (x831 x268) 0)))
(assert (= 0 (x831 729466174051048026939049150500379070045048658665)))
(assert (x304 x1789))
(assert (x304 x898))
(assert (x304 x684))
(assert (= (x732 x885 x966 x350 x968 x278 x393 x1136 x588) (x831 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (x304 x207))
(assert (x304 x1437))
(assert (x304 x1586))
(assert (x304 x429))
(assert (=> (<= x604 10000) (= (x831 x604) 0)))
(assert (= (x831 18446744073709551615) 0))
(assert (x517 729466174051048026939049150500379070045048658665))
(assert (=> (<= x1130 10000) (= (x831 x1130) 0)))
(assert (=> (<= x916 10000) (= (x831 x916) 0)))
(assert (x304 x501))
(assert (x304 x777))
(assert (x517 443215666480553238610125355434898879895743000821))
(assert (=> (<= x148 10000) (= 0 (x831 x148))))
(assert (x236 x439))
(assert (not (x517 (x910 64 x1113 4))))
(assert (x304 x1749))
(assert (x304 x6))
(assert (x304 x431))
(assert (x304 x1003))
(assert (x304 x1747))
(assert (x517 85963009616197036880240088340724629170983710335684291091497906406952890531840))
(assert (=> (>= 10000 x193) (= 0 (x831 x193))))
(assert (x517 4294967295))
(assert (not (x517 (x910 x1673 x1731 x58))))
(assert (= x1206 (x473 (x1064 x1145 x1475 x1407 x873 x6 x1206))))
(assert (not (x517 (x1292 x257 x954 x926 x936))))
(assert (x304 x841))
(assert (= x206 (=> (and (and (= (> x543 0) x1269) (= (x239 x1675) x1768) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1675) (<= x1675 115792089237316195423570985008687907853269984665640564039457584007913129639743)) (>= 18446744073709551550 x1675) (= (x870 (+ 32 x402)) x872) (not (> x1706 x1338)) (<= 32 x235) (= x1071 (+ 64 x1338)) (= (x80 x1534) x16) (= x386 (x870 (+ x1499 x256))) (> x1071 x1338) (or (and (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1499)) (and (> x646 x1499) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1499) (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (> x1706 x1675) (>= x1049 1) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x394) (>= x394 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x1499 (x80 x256)) (or (<= x1675 18446744073709551487) (>= x1675 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x353 (x870 (+ x486 32))) (< x1706 x1338) (= (x870 (+ x1071 4)) x486) (= x1706 (x870 (+ x1675 64))) (= x394 (x80 x256)) (or (and (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x394)) (and (< x394 x646) (= (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x394 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x946 (x80 x386)) (= x141 (x870 (+ 32 x1675))) (= x1049 (x239 x141)) (= 1 x1768) (= x1338 (+ x1706 64)) (<= x946 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x1675) (>= 340282366920938463463374607431768211455 x16) (or (<= x1499 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1499 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x235) (= (x870 (+ x353 32)) x402) (= (+ x1338 32) x729) (<= x1675 18446744073709551550) (= x1470 (x870 (+ x394 x256))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1675) (<= x1675 18446744073709551487)) (>= x1772 1) (= x1534 (x870 (+ x1470 32)))) (or (and (not x1269) (= x543 x1395)) (and x1269 (and (>= x235 32) (>= 4294967295 x235) (= x1395 1))))) x118)))
(assert (x304 x897))
(assert (x255 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1335 (and x1711 x1333)))
(assert (=> (>= 10000 x1771) (= (x831 x1771) 0)))
(assert (= (x791 (x912 x1145 x993 x691 x1692 x1396 x211 x666)) x691))
(assert (x304 x232))
(assert (=> (>= 10000 x844) (= (x831 x844) 0)))
(assert (x304 x398))
(assert (not (x517 (x1323 x368 x733 x13 x27 x1469))))
(assert (=> (<= x1123 10000) (= (x831 x1123) 0)))
(assert (x304 x1172))
(assert (= x816 (x1082 (x1323 x1722 x816 x234 x1298 x786))))
(assert (x304 x1199))
(assert (x304 x881))
(assert (= 64 (x1005 (x910 64 443215666480553238610125355434898879895743000821 1))))
(assert (x304 x1635))
(assert (x304 x373))
(assert (x304 x1224))
(assert (= x350 (x791 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (< (x912 x885 x535 x1554 x1188 x1036 x702 x877) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x379 (or x475 x1322 x417)))
(assert (not (x517 (x1323 x1145 x556 x180 x921 x1435))))
(assert (x304 x1561))
(assert (x304 x1692))
(assert (x304 x56))
(assert (x304 x393))
(assert (not (x517 (x910 64 953417218992365150631206543442508943947348309705 0))))
(assert (x517 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (x304 x588))
(assert (x304 x946))
(assert (x304 x1418))
(assert (x304 x1702))
(assert (x304 x1592))
(assert (x421 x1416 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1145 10000) (= (x831 x1145) 0)))
(assert (x304 x1771))
(assert (= (x831 (x1323 x1673 x232 x1132 x812 x1243)) (x1323 x1673 x232 x1132 x812 x1243)))
(assert (x304 x178))
(assert (= x1797 (x1082 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (x517 953417218992365150631206543442508943947348309705))
(assert (x517 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x304 x1755))
(assert (x304 x1471))
(assert (=> (>= 10000 x691) (= (x831 x691) 0)))
(assert (x304 x1640))
(assert (= x1765 (x14 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (> (x910 x885 x1092 x346) 10000))
(assert (= (x1284 (x1064 x885 x1046 x1401 x1607 x1287 x609)) x1607))
(assert (= x555 (=> (and (= false x1784) (= (ite (not (= x324 0)) 1 0) x830) (= x1646 (not (= x830 0))) (= x190 false) (= false x847) (= x506 x695) (= x1559 false) (= x862 x1646)) x1609)))
(assert (x304 x148))
(assert (= (x1284 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x1238))
(assert (x304 x409))
(assert (=> (>= 10000 x1699) (= (x831 x1699) 0)))
(assert (x304 x945))
(assert (=> (>= 10000 x1750) (= (x831 x1750) 0)))
(assert (= x1455 (x914 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (x304 x84))
(assert (x304 x1582))
(assert (x304 x1068))
(assert (x517 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (x304 x1121))
(assert (x255 x1416))
(assert (=> (>= 10000 x987) (= 0 (x831 x987))))
(assert (x304 x1390))
(assert (< 10000 (x333 x1722 x1089)))
(assert (= x134 (x473 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (x304 x1486))
(assert (x304 x1336))
(assert (=> (<= x677 10000) (= (x831 x677) 0)))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639679) 0))
(assert (= (x831 39095828447348766818467541868648093896559026265977760979361568868651215582053) 0))
(assert (x236 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x257 10000) (= (x831 x257) 0)))
(assert (= (and (not x1213) x787) x1737))
(assert (> (x910 64 x942 3) 10000))
(assert (x304 x569))
(assert (= (x831 (x1292 x368 x1354 x485 x1343)) (x1292 x368 x1354 x485 x1343)))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (> (x651 0) 10000))
(assert (= (x831 (x910 x1722 x1008 x1311)) (x910 x1722 x1008 x1311)))
(assert (= (x1082 (x910 64 x392 4)) x392))
(assert (= x708 (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1638)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1638) (= x564 (not (< 2 x598))) (not (= x1638 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1638)) (< x1638 x1375) (= (x870 (+ 32 x1638)) x1402) (<= x1638 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1375 (x870 (+ 64 x1638))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1638)) (and (=> (= x1375 x1675) x825) x564))))
(assert (= (x831 (x910 64 x1553 x1249)) (x910 64 x1553 x1249)))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (= (x831 3168472768) 0))
(assert (x304 x868))
(assert (=> (>= 10000 x1311) (= 0 (x831 x1311))))
(assert (= x1612 (=> (and (= (x1350 x1070) x1145) (< x1070 x925) (= x1671 (>= 224 x1145)) (<= x1070 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x164 (x625 (- x1557 32))) (= x925 (x870 (+ x794 x1760))) (<= x1070 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1070 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1120 (x870 (+ x1070 32))) (= x1557 (x625 (- x925 x1070))) (<= 1 x925)) (and x1671 (=> (and (= x916 (x1350 x628)) (= x6 (x1350 x1586)) (= (x1350 x174) x1407) (= (x1350 x1657) x1692) (= x666 (x1350 x1336)) (= (x1350 x130) x15) (= (x1350 x1120) x556) (= x472 (x870 (+ 64 x1120))) (= (x1350 x1120) x1475) (= x1519 (> x770 0)) (= (x1064 x1145 x1475 x1407 x873 x6 x1206) x1013) (= x691 (x1350 x710)) (= (ite (= 0 x1145) x358 (ite (<= x1145 32) x668 (ite (<= x1145 64) x452 (ite (>= 96 x1145) x970 (ite (<= x1145 128) x1399 (ite (<= x1145 160) x1013 (ite (<= x1145 192) x1101 (ite (>= 224 x1145) x1099 x1133)))))))) x101) (= x1137 (x1350 x1696)) (= (x1350 x1253) x1384) (= (x870 (+ 32 x1120)) x710) (= x1776 (x870 (+ 32 x1120))) (= (x1350 x1776) x1217) (= x1101 (x912 x1145 x993 x691 x1692 x1396 x211 x666)) (= (x870 (+ 128 x1120)) x1729) (= x1591 (x870 (+ x925 32))) (= x1336 (x870 (+ x1120 160))) (= (x870 (+ 96 x1120)) x403) (= (x1350 x1120) x241) (= (x1350 x472) x873) (= x1544 (x870 (+ 96 x1120))) (= x1586 (x870 (+ x1120 96))) (= (x870 (+ x1120 64)) x734) (= x1657 (x870 (+ 64 x1120))) (= (x870 (+ x1120 32)) x1253) (= x970 (x1292 x1145 x1513 x1384 x356)) (= x372 (x870 (+ x1120 128))) (= (x1350 x1319) x1510) (= x1513 (x1350 x1120)) (= (x1350 x1120) x1405) (= (x1350 x684) x921) (= x879 (x1350 x61)) (= x1099 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552)) (= (x870 (+ 192 x1120)) x50) (= x1034 (x870 (+ 32 x1120))) (= (x870 (+ x1120 160)) x1696) (= (x1350 x50) x1552) (= (x1350 x403) x1396) (= (x870 (+ 96 x1120)) x61) (= (x1350 x1544) x1435) (= (x870 (+ 64 x1120)) x684) (= (x870 (+ 32 x1120)) x174) (= x770 (x1350 x3)) (= (x1350 x1034) x180) (= x628 (x870 (+ 32 x1120))) (= x452 (x910 x1145 x1405 x1217)) (= (+ x3 32) x171) (= (x870 (+ 128 x1120)) x1319) (= (x1350 x1729) x1206) (= (x1350 x1120) x1123) (= x356 (x1350 x734)) (= x993 (x1350 x1120)) (= (x1323 x1145 x556 x180 x921 x1435) x1399) (= (x1350 x372) x211) (= (x333 x1145 x1123) x668) (= (x651 0) x358) (= x130 (x870 (+ 64 x1120)))) (and (=> (and (and (= 0 x1745) (= x841 x1591) (= x869 x171)) (not x1519)) x1538) (=> (and (and (= (x870 (+ x1591 32)) x849) (= x322 (x1350 x171)) (= (+ 32 x171) x1674) (= (> x770 1) x52)) x1519) (and (=> (and (and (= x1674 x869) (= 1 x1745) (= x849 x841)) (not x52)) x1538) (=> (and x52 (and (= x610 (x701 x1674)) (= x774 (< 2 x770)) (= (x870 (+ x849 32)) x1563) (= (+ 32 x1674) x1391))) (and (=> (and (and (= x1741 (x1476 x1391)) (= x79 (x870 (+ 32 x1563))) (= (+ 32 x1391) x1272) (= x1025 (< 3 x770))) x774) (and (=> (and (and (= x1745 3) (= x869 x1272) (= x79 x841)) (not x1025)) x1538) (=> x1025 x1161))) (=> (and (not x774) (and (= x841 x1563) (= x869 x1391) (= x1745 2))) x1538)))))))))))
(assert (x304 x677))
(assert (x304 x1455))
(assert (x304 x175))
(assert (x304 x818))
(assert (x304 x31))
(assert (= (x1082 (x910 64 x1113 3)) x1113))
(assert (=> (>= 10000 x434) (= (x831 x434) 0)))
(assert (= x426 (x1284 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (= (=> (and (= x5 (x1203 x1474)) (= (x870 (+ 96 x783)) x1474) (= (x870 (+ 96 x1760)) x465) (= (not (< 128 x794)) x484)) (and x484 x1612)) x155))
(assert (x304 x520))
(assert (=> (>= 10000 x15) (= 0 (x831 x15))))
(assert (x304 x859))
(assert (x304 x1593))
(assert (=> (>= 10000 x843) (= (x831 x843) 0)))
(assert (x304 x529))
(assert (= (and x147 x1332) x1751))
(assert (x517 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (=> (>= 10000 x786) (= 0 (x831 x786))))
(assert (not (x517 (x1323 x1673 x232 x1132 x812 x1243))))
(assert (x304 x1299))
(assert (x304 x1206))
(assert (=> (<= x1453 10000) (= 0 (x831 x1453))))
(assert (x304 x5))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 x1145 x1405 x1217)))
(assert (x304 x55))
(assert (x517 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x304 x246))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639714)))
(assert (= 3 (x791 (x910 64 x942 3))))
(assert (= x1537 (=> (and (and (>= 340282366920938463463374607431768211455 x520) (>= 127 x1549) (= false x1775) (= x133 (x1327 928)) (= x300 (x840 x57)) (= (x1597 x1179) x673) (= false x301) (= x435 (= x678 0)) (= x1432 x1098) (= x366 (+ x1179 1)) (= x1219 (ite (not (= (ite (not (= 0 x447)) 1 0) 0)) 1 0)) (>= 1099511627775 x1468) (= x1026 x72) (= x467 (x910 64 x1600 3)) (= x1468 (x1321 x57)) (>= x1792 1) (= x675 (x1327 768)) (= x1386 (x1327 704)) (= (x1150 x366) x762) (>= 1099511627775 x1587) (= (not x435) x1278) (>= 1099511627775 x300) (= 0 x1261) (= (x1327 896) x627) (= x1777 x660) (= x1412 (x1327 800)) (= x678 x1412) (= x675 x1429) (= x73 false) (= x1792 (x1359 x193)) (= x790 x1600) (= x520 (x97 x1027)) (= false x510) (= x1587 (x1352 x57)) (>= 127 x1549) (= x1179 (+ 1 x1027)) (= x1098 (x1327 864)) (= x1026 (x1327 832)) (= x462 false) (>= 255 x447) (= x627 x813) (= x391 (x591 x57)) (= (x1327 960) x1777) (= x34 911662625) (<= x391 340282366920938463463374607431768211455) (= (x1578 x57) x447) (= x133 x1362) (= x1683 x1386) (= x46 false) (= x1027 (+ x57 1)) (= (+ x467 1) x57)) (and (= x281 x790) (>= x1318 0) (<= x852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x953) (<= x91 1461501637330902918203684832716283019655932542975) (= x1236 (> (x1359 x818) 0)) (<= 0 x1735) (not (= x443 x362)) x238 (= x11 false) (<= 0 x445) (>= x156 0) (<= 0 x1446) (<= 0 x852) (= x1334 3686331914) (not (= x443 x193)) (<= 1 x561) (= x119 (< 0 (x1359 x561))) (<= 0 x91) (= (< 0 (x1359 x362)) x238) (<= x1746 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4) (>= 1461501637330902918203684832716283019655932542975 x443) (= false x1366) (>= x759 356) (= x466 x193) (not (= x1596 x818)) (not (= x1596 x561)) (>= 1461501637330902918203684832716283019655932542975 x1621) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x193 1461501637330902918203684832716283019655932542975) (= (< 0 (x1359 x1596)) x1369) (<= x1515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x1443) (= x725 7) (<= 1 x193) x1369 (= x1632 (< 0 (x1359 x193))) (<= 1 x1596) (>= x1659 0) (= x457 x281) (= x778 0) (= x1460 36) x1236 (<= x1596 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x156) (>= x1621 0) (<= x1659 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x818 x362)) (not (= x561 x362)) (>= 4294967295 x1155) (not (= x362 x1596)) (not (= x1596 x193)) (not (= x818 x193)) (<= 1 x443) (>= 1461501637330902918203684832716283019655932542975 x277) (>= x1155 0) (<= x759 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1746 0) (>= x818 1) (<= x4 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1605 (= x1605 (> (x1359 x443) 0)) (>= x1515 0) (<= x1446 1461501637330902918203684832716283019655932542975) (= x172 false) (not (= x362 x193)) (not (= x1596 x443)) (not (= x561 x818)) (<= 1 x362) (not (= x561 x193)) (<= x347 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x561) (not (= x561 x443)) (>= 1461501637330902918203684832716283019655932542975 x1735) (not (= x818 x443)) (= x457 x1746) x119 (<= x1318 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x818 1461501637330902918203684832716283019655932542975) x1632 (>= 1461501637330902918203684832716283019655932542975 x362))) (and (=> x1278 x317) (=> (and (and (= x380 x1727) (= x380 true) (= x551 x1615)) (not x1278)) x824)))))
(assert (x304 x628))
(assert (x304 x1398))
(assert (x304 x1133))
(assert (x304 x579))
(assert (x304 x1367))
(assert (= x577 (x791 (x1064 x1722 x1710 x577 x606 x67 x527))))
(assert (= x1450 (=> (and (= x309 (x870 (+ x210 96))) (= (x899 256) x244) (= (not (< 128 x1065)) x384)) (and x476 x384))))
(assert (x304 x1123))
(assert (=> (<= x538 10000) (= (x831 x538) 0)))
(assert (x304 x497))
(assert (x1022 x1357))
(assert (= x917 (and x845 (not x1269))))
(assert (=> (<= x567 10000) (= 0 (x831 x567))))
(assert (x304 x1464))
(assert (x304 x1077))
(assert (x304 x644))
(assert (= 0 (x831 45887579694954924622689847950937698470056863744033464196450664576267108643884)))
(assert (= (x1005 (x333 x885 x1398)) x885))
(assert (= (x651 0) (x831 (x651 0))))
(assert (x304 x1785))
(assert (x304 x878))
(assert (= (x1005 (x910 x1722 x1008 x1311)) x1722))
(assert (x304 x1607))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)))
(assert (x304 x1629))
(assert (x304 x1060))
(assert (x304 x1696))
(assert (= (x831 x47) (x831 (+ 1 x47))))
(assert (= x571 (=> (and (= (x1404 x336) x145) (or (and (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639868) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639742) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639684)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x856) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= x1638 (x870 (+ 64 x1177))) (= x513 (+ x1178 1)) (<= x440 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x345) (= (x870 (+ 64 x886)) x755) (= 1 x1568) (= (x870 (+ x886 32)) x200) (or (<= x1280 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1280)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x856) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639742) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639684)) (and (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639747) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639805)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x856))) (= x1377 (x870 (+ 32 x1280))) (<= x345 1099511627775) (= (x1321 x513) x345) (= x807 (x935 1099511627775 x439)) (< x440 x856) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x440)) (= (x870 (+ 64 x755)) x1177) (= (ite (not (= x1295 0)) 1 0) x1665) (> x1177 x755) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x856) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x856)) (and (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639742) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x856)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x856) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (>= x856 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639679)) (= x1472 (x870 (+ x1280 64))) (>= 18446744073709551550 x1280) (not (= x440 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x870 (+ 32 x856)) x1376) (< x1177 x1638) (= x145 0) (= (x910 64 x1113 4) x672) (= (x870 (+ 32 x440)) x1000) (= (x1321 x513) x1172) (= x258 (x935 1461501637330902918203684832716283019655932542975 x19)) (= (x870 (+ 64 x440)) x856) (>= 18446744073709551550 x1280) (= x19 (x726 x1377)) (= x1795 (x1042 x672)) (= x336 (x910 64 x742 x1087)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x856) (not (= x440 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (> x886 x856) (or (>= x1280 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x1280 18446744073709551487)) (not (< x440 x1472)) (> x1472 x1280) (<= 1 x1434) (not (> x807 x1172)) (< x1472 x440) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639870 x1280) (= x1667 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x856) (= x1178 (x910 64 x1113 3)) (> x755 x886) (= x1665 x1295) (= (x870 (+ 64 x856)) x886) (= x1594 (+ x672 1)) (= (x709 x1594) x1112) (<= x1795 16777215) (<= x440 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1667 (ite (= x258 x969) (ite (not (= 0 x969)) 1 0) (ite (= x969 x258) 1 0))) (= (+ 64 x1472) x440) (= (+ 5 x1178) x1087) (<= x440 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1295 (x726 x1280)) (<= x1295 1) (>= 1099511627775 x1172) (or (>= x1280 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x1280 18446744073709551487)) (= x1642 (> x598 0))) (and (=> (and (and (<= x598 18446744073709551615) (<= 1 x598) (= (< 1 x598) x1639)) x1642) (and (=> (and (= x1675 x1638) (not x1639)) x825) (=> (and x1639 (and (and (= (x870 (+ x427 32)) x1122) (= x1110 (x625 (- x759 x256))) (or (and (> x645 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1759 x645) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x645) (<= x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (<= x65 340282366920938463463374607431768211455) (= x197 (x870 (+ x256 x645))) (= x947 (not (= x65 x53))) (= x53 (x80 x1122)) (= x65 (x80 x1368)) (or (>= x560 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x560)) (or (and (> x560 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1759 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x560)) (< x560 x1759))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x645) (<= x645 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (<= 2 x598) (= x1368 (x870 (+ x197 32))) (= x1759 (x625 (- x1110 95))) (>= 340282366920938463463374607431768211455 x53) (= x1716 (ite x947 1 0)) (= x560 (x80 x256)) (= (+ 32 x256) x81) (<= x598 18446744073709551615) (= (x80 x81) x645) (= (x870 (+ x256 x560)) x427)) (or (and x947 (= x1716 1)) (and (not x947) (and (= x716 (x80 x582)) (= (x80 x1438) x454) (= x1654 (x80 x81)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1654) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759)) (and (> x1759 x1654) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) (<= x1654 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (and (> x1138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) (<= x1138 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1759 x1138))) (= (x870 (+ x1138 x256)) x582) (= x1138 (x80 x256)) (not (= x454 x716)) (or (<= x1138 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1138 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (or (<= x1654 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1654)) (<= x454 1461501637330902918203684832716283019655932542975) (= (x870 (+ x256 x1654)) x1438) (>= 1461501637330902918203684832716283019655932542975 x716)))))) x708))) (=> (and (and (= x1168 x1638) (= 0 x176)) (not x1642)) x1160)))))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639873)))
(assert (not (x517 (x910 x1145 x1405 x1217))))
(assert (= (x1082 (x1064 x515 x987 x843 x1502 x934 x524)) x987))
(assert (=> (<= x1185 10000) (= 0 (x831 x1185))))
(assert (x304 x127))
(assert (=> (<= x437 10000) (= 0 (x831 x437))))
(assert (x304 x692))
(assert (= (x14 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)) x809))
(assert (< 10000 (x910 64 x1077 4)))
(assert (< (x910 x515 x359 x1658) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x883))
(assert (x304 x532))
(assert (< (x910 64 729466174051048026939049150500379070045048658665 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x524 (x473 (x1064 x515 x987 x843 x1502 x934 x524))))
(assert (x304 x1185))
(assert (= (x791 (x1323 x1722 x816 x234 x1298 x786)) x234))
(assert (x304 x196))
(assert (x304 x257))
(assert (= (and x838 x1372) x1494))
(assert (x304 x985))
(assert (= 64 (x1005 (x910 64 x1553 x286))))
(assert (x304 x197))
(assert (= x626 (x1284 (x912 x1673 x1256 x1041 x626 x920 x1610 x714))))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639844) 0))
(assert (x304 x195))
(assert (x304 x1173))
(assert (= x604 (x1284 (x1323 x885 x131 x1699 x604 x728))))
(assert (= (x1005 (x910 64 729466174051048026939049150500379070045048658665 0)) 64))
(assert (= x393 (x473 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (x304 x189))
(assert (< (x1292 x515 x1732 x1259 x375) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x403))
(assert (x304 x62))
(assert (x304 x1226))
(assert (x304 x1408))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= (x1082 (x912 x1145 x993 x691 x1692 x1396 x211 x666)) x993))
(assert (= (x1005 (x333 x458 x593)) x458))
(assert (> (x333 x885 x1398) 10000))
(assert (= (x1284 (x1323 x1673 x232 x1132 x812 x1243)) x812))
(assert (x304 x1145))
(assert (x304 x1135))
(assert (x671 x439))
(assert (> (x1064 x257 x249 x291 x201 x568 x724) 10000))
(assert (x304 x1074))
(assert (x304 x675))
(assert (x517 16777215))
(assert (x304 x50))
(assert (= x1505 (and x700 x1519)))
(assert (x304 x126))
(assert (= (x1082 (x1292 x1722 x1509 x1717 x1488)) x1509))
(assert (x304 x1290))
(assert (= x1684 (and (not x1333) x1711)))
(assert (= (x1082 (x910 64 x1553 x581)) x1553))
(assert (=> (>= 10000 x368) (= (x831 x368) 0)))
(assert (not (x517 (x910 64 x662 3))))
(assert (x304 x971))
(assert (x421 x972 32))
(assert (= (x831 (x910 64 x1113 4)) (x910 64 x1113 4)))
(assert (x304 x122))
(assert (= (x791 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)) x196))
(assert (= (x1005 (x333 x515 x1059)) x515))
(assert (=> (<= x524 10000) (= (x831 x524) 0)))
(assert (= (x1064 x515 x987 x843 x1502 x934 x524) (x831 (x1064 x515 x987 x843 x1502 x934 x524))))
(assert (= (or x1655 x30) x147))
(assert (x304 x1439))
(assert (= (x1082 (x910 64 x662 3)) x662))
(assert (= (x1599 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) x1283))
(assert (x304 x326))
(assert (= (x831 2175550133) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x1553 x1045)))
(assert (= (or x154 x308) x444))
(assert (= x913 (x1082 (x912 x515 x913 x1109 x1393 x1645 x1282 x567))))
(assert (x304 x860))
(assert (x546 32 x770))
(assert (not (x517 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (=> (>= 10000 x362) (= 0 (x831 x362))))
(assert (x304 x1149))
(assert (= (x831 4294967295) 0))
(assert (< (x1292 x1145 x1513 x1384 x356) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x910 x1673 x1731 x58) (x831 (x910 x1673 x1731 x58))))
(assert (=> (>= 10000 x690) (= (x831 x690) 0)))
(assert (x304 x174))
(assert (= (x1284 (x1323 x1145 x556 x180 x921 x1435)) x921))
(assert (x304 x1286))
(assert (= (x914 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552)) x1552))
(assert (=> (>= 10000 x1610) (= 0 (x831 x1610))))
(assert (= x286 (x791 (x910 64 x1553 x286))))
(assert (= (x831 51755322175217624492750805572474109157238378692794855914282927279451288895488) 0))
(assert (x304 x179))
(assert (= (x1082 (x1323 x1145 x556 x180 x921 x1435)) x556))
(assert (> (x1323 x1722 x816 x234 x1298 x786) 10000))
(assert (not (x517 (x910 64 443215666480553238610125355434898879895743000821 0))))
(assert (< 10000 (x910 x1722 x1008 x1311)))
(assert (x304 x1786))
(assert (x304 x168))
(assert (x304 x268))
(assert (x304 x939))
(assert (x304 x1259))
(assert (x304 x362))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x304 x1256))
(assert (x304 x707))
(assert (x304 x685))
(assert (x304 x544))
(assert (< (x910 64 x392 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1714))
(assert (x304 x1338))
(assert (x304 x338))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x1553 x1249)))
(assert (x304 x1071))
(assert (= x1717 (x791 (x1292 x1722 x1509 x1717 x1488))))
(assert (x304 x1066))
(assert (x304 x181))
(assert (= x18 (x1082 (x910 x458 x18 x1495))))
(assert (not (x517 (x1323 x1722 x816 x234 x1298 x786))))
(assert (= (x1082 (x910 x368 x1628 x1056)) x1628))
(assert (x304 x601))
(assert (=> (>= 10000 x1238) (= (x831 x1238) 0)))
(assert (x304 x964))
(assert (= x1002 (and x772 (not x892))))
(assert (=> (<= x1035 10000) (= (x831 x1035) 0)))
(assert (= (x831 (x910 x1145 x1405 x1217)) (x910 x1145 x1405 x1217)))
(assert (=> (<= x1217 10000) (= (x831 x1217) 0)))
(assert (= (x1599 (x1323 x1722 x816 x234 x1298 x786)) x786))
(assert (x517 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (< 10000 (x1292 66 x1613 x679 x99)))
(assert (x304 x151))
(assert (=> (>= 10000 x356) (= 0 (x831 x356))))
(assert (x304 x1546))
(assert (x304 x1227))
(assert (=> (<= x1575 10000) (= 0 (x831 x1575))))
(assert (x304 x590))
(assert (= x1673 (x1005 (x1292 x1673 x326 x683 x1493))))
(assert (not (x517 (x1323 x458 x602 x1408 x1173 x1220))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x333 x1722 x1089)))
(assert (x304 x434))
(assert (x304 x1781))
(assert (= (x1005 (x1292 x368 x1354 x485 x1343)) x368))
(assert (= x1036 (x1599 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (x304 x1438))
(assert (x304 x1225))
(assert (x304 x1072))
(assert (=> (<= x18 10000) (= (x831 x18) 0)))
(assert (= (x333 x458 x593) (x831 (x333 x458 x593))))
(assert (= (x1082 (x1323 x1673 x232 x1132 x812 x1243)) x232))
(assert (= x885 (x1005 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (= x844 (x1082 (x912 x1722 x844 x240 x1097 x1283 x1431 x789))))
(assert (not (x517 (x910 64 81 x177))))
(assert (x304 x370))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)))
(assert (= x1469 (x1599 (x1323 x368 x733 x13 x27 x1469))))
(assert (=> (>= 10000 x134) (= (x831 x134) 0)))
(assert (x304 x891))
(assert (x421 x596 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x910 64 x392 4) (x831 (x910 64 x392 4))))
(assert (= 0 (x831 340282366920938463463374607431768211454)))
(assert (x304 x923))
(assert (x304 x1341))
(assert (x304 x799))
(assert (x517 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x1077 4)))
(assert (x304 x248))
(assert (=> (<= x1089 10000) (= 0 (x831 x1089))))
(assert (x304 x925))
(assert (x304 x704))
(assert (x304 x1428))
(assert (x304 x1200))
(assert (x1022 x213))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (= x1145 (x1005 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (x304 x428))
(assert (x304 x867))
(assert (x304 x856))
(assert (not (x517 (x1292 x1722 x1509 x1717 x1488))))
(assert (x304 x954))
(assert (x304 x1528))
(assert (x304 x391))
(assert (not (x517 (x910 64 729466174051048026939049150500379070045048658665 0))))
(assert (x304 x1777))
(assert (= (=> (and (<= x1071 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1071)) (<= x1071 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1071 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x870 (+ x1071 32)) x56) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1071) (= (not (< 1 x598)) x253) (> x56 x1071) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1071)) (= x876 (x468 x1071)) (>= x1395 1)) (and x253 (=> (and (= x56 x1168) (= x876 x176)) x1160))) x118))
(assert (= x1431 (x473 (x912 x1722 x844 x240 x1097 x1283 x1431 x789))))
(assert (< (x333 x458 x593) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1082 (x1064 x1145 x1475 x1407 x873 x6 x1206)) x1475))
(assert (x517 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (= (=> (and (or (and (and (or (and (and (= x717 x282) (= 0 x1416) (= 1 x1588)) x149) (and (not x149) (and (= 0 x1588) (= x282 x717) (= x796 x1416)))) (and (= (x935 1461501637330902918203684832716283019655932542975 x796) x1486) (= (x303 x282) x1641) (= x1649 (x303 (x870 (+ 96 x282)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x664) (= (x303 (x870 (+ x282 32))) x1301) (<= x664 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1518 128) (= x175 (x303 (x870 (+ 64 x282)))) (= x88 (x1730 x1641 x1301 x175 x1649)) (= x282 (x870 (+ 32 x664))) (not (= x664 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x870 (+ x371 32)) x896) (<= x664 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x796 (x423 x492)) (< x664 x282) (<= x88 1461501637330902918203684832716283019655932542975) (not (= x664 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x870 (+ 32 x282)) x497) (= (x625 (- x282 32)) x620) (= x149 (= 0 x1486)) (= (x870 (+ x497 32)) x371) (= x492 (x625 (- x282 32))) (not (= x664 115792089237316195423570985008687907853269984665640564039457584007913129639904)))) (not x1114)) (and x1114 (and (= 0 x1416) (= x1588 3) (= x717 x664)))) (and (= (x870 (+ x664 2)) x667) (= (x1703 x1481) x99) (= (x870 (+ 64 x664)) x1481) (= (x1703 x664) x1613) (= (> x224 57896044618658097711785492504343953926418782139537452191302581570759080747168) x1114) (= x1080 (x1292 66 x1613 x679 x99)) (= (x1703 x743) x679) (= x438 (x870 (+ 32 x667))) (= x743 (x870 (+ x664 32))))) x721) x1251))
(assert (x304 x1797))
(assert (x304 x256))
(assert (=> (>= 10000 x1707) (= 0 (x831 x1707))))
(assert (x304 x16))
(assert (=> (<= x1414 10000) (= (x831 x1414) 0)))
(assert (= 443215666480553238610125355434898879895743000821 (x1082 (x910 64 443215666480553238610125355434898879895743000821 0))))
(assert (= (x1082 (x910 x1673 x1731 x58)) x1731))
(assert (x304 x437))
(assert (x304 x406))
(assert (x304 x809))
(assert (=> (<= x954 10000) (= (x831 x954) 0)))
(assert (x304 x1454))
(assert (= (x14 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)) x1257))
(assert (= (x473 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)) x1640))
(assert (=> (<= x1396 10000) (= (x831 x1396) 0)))
(assert true)
(assert (= x1083 (or (and x379 x909) x1361)))
(assert (= (x831 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) (x912 x368 x1561 x690 x398 x1790 x1517 x1341)))
(assert (=> (>= 10000 x1398) (= (x831 x1398) 0)))
(assert (x304 x626))
(assert (=> (<= x1673 10000) (= (x831 x1673) 0)))
(assert (=> (>= 10000 x724) (= 0 (x831 x724))))
(assert (=> (<= x1259 10000) (= 0 (x831 x1259))))
(assert (x304 x614))
(assert (x304 x1656))
(assert (=> (>= 10000 x666) (= 0 (x831 x666))))
(assert (=> (<= x1628 10000) (= 0 (x831 x1628))))
(assert (x304 x388))
(assert (x517 3168472768))
(assert (= x1249 (x791 (x910 64 x1553 x1249))))
(assert (= x580 (x914 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (x304 x1722))
(assert (= (x831 63076024560530113402979550242307453568063438748328787417531900361828837441551) 0))
(assert (= x154 (and x1465 (not x744))))
(assert (x304 x1453))
(assert (x304 x234))
(assert (x304 x676))
(assert (= (x1082 (x1292 66 x1613 x679 x99)) x1613))
(assert (x304 x130))
(assert (=> (<= x1131 10000) (= 0 (x831 x1131))))
(assert (x304 x386))
(assert (x304 x1007))
(assert (= (x791 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) x690))
(assert (x304 x1342))
(assert (=> (>= 10000 x1257) (= 0 (x831 x1257))))
(assert (x304 x1513))
(assert (x304 x1585))
(assert (x304 x394))
(assert (x304 x1132))
(assert (=> (<= x993 10000) (= 0 (x831 x993))))
(assert (x517 3686331914))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (< 10000 (x910 64 443215666480553238610125355434898879895743000821 1)))
(assert (not (x517 (x1064 x1722 x1710 x577 x606 x67 x527))))
(assert (x304 x1553))
(assert (x304 x972))
(assert (> (x910 64 x1113 4) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)))
(assert (= (=> (and (or (and x59 (and (= 1 x1434) (>= 4294967295 x213) (>= x213 64))) (and (= x767 x1434) (not x59))) (and (= x1204 (x870 (+ x210 x1065))) (= x1531 (x935 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1266)) (= (x625 (- x1353 x1280)) x1700) (<= 64 x213) (= x1266 (x870 (+ x1065 31))) (= (x870 (+ x210 x1531)) x1353) (= x59 (> x767 0)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213))) x571) x476))
(assert (= (x473 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)) x1282))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1064 x458 x827 x1073 x1501 x1439 x1606)))
(assert (< (x910 64 443215666480553238610125355434898879895743000821 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1005 (x910 64 x1600 3)) 64))
(assert (= x1259 (x791 (x1292 x515 x1732 x1259 x375))))
(assert (x517 2175550133))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x304 x936))
(assert (x304 x477))
(assert (= (x1082 (x732 x885 x966 x350 x968 x278 x393 x1136 x588)) x966))
(assert (> (x732 x885 x966 x350 x968 x278 x393 x1136 x588) 10000))
(assert (= x30 (and x1680 x442)))
(assert (x304 x99))
(assert (x304 x915))
(assert (x304 x742))
(assert (x304 x347))
(assert (x255 x1266))
(assert (= (and x461 x1278) x1196))
(assert (not (x517 (x333 x1145 x1123))))
(assert (= (x831 (x1323 x885 x131 x1699 x604 x728)) (x1323 x885 x131 x1699 x604 x728)))
(assert (=> (<= x1173 10000) (= (x831 x1173) 0)))
(assert (= x1073 (x791 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (x304 x1402))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x662 3)))
(assert (= 0 (x831 911662625)))
(assert (x304 x1280))
(assert (x304 x162))
(assert (= (x791 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)) x1109))
(assert (= 0 (x831 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (< 10000 (x910 64 x1113 3)))
(assert (x304 x902))
(assert (x304 x1008))
(assert (x304 x926))
(assert (x304 x145))
(assert (= (x791 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633)) x1796))
(assert (x304 x1268))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1292 x458 x38 x143 x399)))
(assert (x304 x1218))
(assert (x304 x1205))
(assert (= (x791 (x1323 x885 x131 x1699 x604 x728)) x1699))
(assert (= (x914 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)) x420))
(assert (= (x1082 (x910 64 81 x177)) 81))
(assert (= 64 (x1005 (x910 64 x1113 3))))
(assert (x304 x1669))
(assert (x304 x1181))
(assert (x304 x1501))
(assert (= x602 (x1082 (x1323 x458 x602 x1408 x1173 x1220))))
(assert (x304 x249))
(assert (x236 x796))
(assert (> (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552) 10000))
(assert (x304 x204))
(assert (x304 x278))
(assert (not (x517 (x1292 x515 x1732 x1259 x375))))
(assert (=> (<= x964 10000) (= 0 (x831 x964))))
(assert (= (x14 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552)) x1137))
(assert (x304 x1763))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (=> (<= x1109 10000) (= (x831 x1109) 0)))
(assert (= (x1005 (x1323 x1145 x556 x180 x921 x1435)) x1145))
(assert (> (x333 x1673 x1130) 10000))
(assert (= (x333 x1722 x1089) (x831 (x333 x1722 x1089))))
(assert (= (x473 (x1064 x885 x1046 x1401 x1607 x1287 x609)) x609))
(assert (= (x831 (x910 64 x1077 4)) (x910 64 x1077 4)))
(assert (x304 x986))
(assert (< (x333 x885 x1398) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x345))
(assert (= (x1599 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633)) x283))
(assert (x1147 x19))
(assert (not (x517 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (x304 x416))
(assert (< (x910 x257 x1707 x654) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1707))
(assert (=> (>= 10000 x426) (= (x831 x426) 0)))
(assert (not (x517 (x1292 66 x1613 x679 x99))))
(assert (x304 x646))
(assert (x255 1099511627776))
(assert (x304 x916))
(assert (x304 x1187))
(assert (x304 x65))
(assert (=> (<= x809 10000) (= 0 (x831 x809))))
(assert (=> (<= x291 10000) (= (x831 x291) 0)))
(assert (x304 x1056))
(assert (= (x831 58652715557392481136322917363278564085642169142198350659161099264462031945728) 0))
(assert (x304 x1165))
(assert (= x1401 (x791 (x1064 x885 x1046 x1401 x1607 x1287 x609))))
(assert (= 64 (x1005 (x910 64 x942 3))))
(assert (x304 x479))
(assert (= x1160 (=> (and (and (<= 1 x176) (= (= x62 0) x1652) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1168) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1168)) (>= 340282366920938463463374607431768211455 x176) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1168)) (= (x870 (+ x1168 64)) x1050) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1168)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1168) (< x1168 x1050) (<= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (or (and x1652 (and (<= x367 340282366920938463463374607431768211455) (= x261 x176) (= (+ x513 1) x1415) (= (+ x1661 x176) x367) (>= x367 1) (<= x1661 340282366920938463463374607431768211454) (= x1661 (x97 x1415)))) (and (not x1652) (and (>= 340282366920938463463374607431768211455 x1410) (= (+ x176 x1316) x1410) (>= 340282366920938463463374607431768211454 x1316) (>= x1410 1) (= x176 x261) (= (x591 x513) x1316))))) x502)))
(assert (= (x1005 (x1323 x257 x932 x1244 x328 x1709)) x257))
(assert (= (x831 (+ 1 x1752)) (x831 x1752)))
(assert (x304 x1570))
(assert (= x148 (x791 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (x304 x1355))
(assert (=> (>= 10000 x535) (= (x831 x535) 0)))
(assert (= (x1005 (x912 x257 x348 x148 x1527 x343 x134 x1546)) x257))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (x304 x58))
(assert (x304 x443))
(assert (=> (<= x733 10000) (= 0 (x831 x733))))
(assert (x304 x371))
(assert (= x1490 (x1284 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (x517 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (x304 x582))
(assert (= (x1005 (x1292 66 x1613 x679 x99)) 66))
(assert (< 10000 (x910 x1145 x1405 x1217)))
(assert (x304 x1107))
(assert (= (x1599 (x1064 x1722 x1710 x577 x606 x67 x527)) x67))
(assert (=> (<= x644 10000) (= (x831 x644) 0)))
(assert (= x942 (x1082 (x910 64 x942 3))))
(assert (= x1384 (x791 (x1292 x1145 x1513 x1384 x356))))
(assert (x304 x1788))
(assert (x304 x640))
(assert (x304 x997))
(assert (=> (<= x1113 10000) (= 0 (x831 x1113))))
(assert (= (x791 (x910 x515 x359 x1658)) x1658))
(assert (x517 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (= (x1005 (x732 x885 x966 x350 x968 x278 x393 x1136 x588)) x885))
(assert (x517 18446744073709551391))
(assert (x255 x1383))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (x304 x1697))
(assert (x304 x1242))
(assert (x304 x568))
(assert (x304 x1092))
(assert (x304 x231))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x831 x513) (x831 (+ 1 x513))))
(assert (x304 x492))
(assert (x304 x1675))
(assert (= 0 (x831 3686331914)))
(assert (x304 x1509))
(assert (x304 x1274))
(assert (=> (>= 10000 x728) (= (x831 x728) 0)))
(assert (=> (<= x196 10000) (= 0 (x831 x196))))
(assert (x304 x1499))
(assert (x304 x1469))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1308)) (= (x870 (+ 32 x1387)) x1713) (= x1070 (x870 (+ x1308 96))) (= x146 (< 0 x794)) (= (x1233 x1308) x794) (= (x870 (+ 32 x1070)) x1387) (not (= x1308 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x1308 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1760 (x870 (+ x1387 139))) (= x1224 (x870 (+ 32 x783))) (= (x870 (+ x1308 32)) x783) (= (x870 (+ 32 x1713)) x882) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1308) (= x915 (x870 (+ x882 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1308)) (= (x870 (+ x915 32)) x1241) (<= x1308 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1308 x1070)) (and (=> (not x146) x1612) (=> (and x146 (and (= (x1233 x783) x821) (= (< 32 x794) x1715))) (and (=> (and (and (= (< 64 x794) x334) (= (x1725 x1794) x406) (= (x870 (+ x783 32)) x1794) (= x1142 (x870 (+ 32 x1760)))) x1715) (and (=> (and x334 (and (= x1134 (x870 (+ x1760 64))) (= x951 (< 96 x794)) (= (x870 (+ x783 64)) x1595) (= x768 (x495 x1595)))) (and (=> x951 x155) (=> (not x951) x1612))) (=> (not x334) x1612))) (=> (not x1715) x1612))))) x906))
(assert (x304 x1393))
(assert (x304 x1740))
(assert (= 3 (x791 (x910 64 x662 3))))
(assert (= (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552) (x831 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (x304 x361))
(assert (x304 x762))
(assert (x304 x1188))
(assert (x304 x900))
(assert (x517 18446744073709551615))
(assert (= x1317 (and x334 x123)))
(assert (x304 x556))
(assert (=> (>= 10000 x1765) (= (x831 x1765) 0)))
(assert (= x1008 (x1082 (x910 x1722 x1008 x1311))))
(assert (x304 x1386))
(assert (= (x791 (x1323 x368 x733 x13 x27 x1469)) x13))
(assert (= (x1292 66 x1613 x679 x99) (x831 (x1292 66 x1613 x679 x99))))
(assert (x304 x387))
(assert (x304 x830))
(assert (=> (>= 10000 x1282) (= 0 (x831 x1282))))
(assert (x304 x1073))
(assert (= (and (not x1636) x221) x747))
(assert (x304 x888))
(assert (x304 x1089))
(assert (= x417 (and x149 x1304)))
(assert (x304 x3))
(assert (=> (<= x1695 10000) (= 0 (x831 x1695))))
(assert (x304 x1790))
(assert (= (and x1715 x459) x123))
(assert (x304 x1093))
(assert (x304 x1709))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639684)))
(assert (x304 x1337))
(assert (= x1243 (x1599 (x1323 x1673 x232 x1132 x812 x1243))))
(assert (x304 x1370))
(assert (= x1392 (x791 (x1292 x885 x1093 x1392 x268))))
(assert (= (and x890 x1124) x1372))
(assert (x304 x173))
(assert (x304 x1383))
(assert (x304 x1774))
(assert (= (x791 (x1323 x1673 x232 x1132 x812 x1243)) x1132))
(assert (x304 x1084))
(assert (not (x517 (x910 64 x1553 x1249))))
(assert (x304 x720))
(assert (x304 x316))
(assert (x304 x1772))
(assert (= x1254 (x1284 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (= (x14 (x912 x458 x1797 x1149 x1254 x434 x219 x9)) x9))
(assert (x304 x750))
(assert (x304 x1392))
(assert (= x1516 (x1284 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (x304 x1000))
(assert (x304 x1032))
(assert (= x928 (and x700 (not x1519))))
(assert (x304 x335))
(assert (= (x1005 (x333 x368 x538)) x368))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (=> (>= 10000 x633) (= (x831 x633) 0)))
(assert (= x1610 (x473 (x912 x1673 x1256 x1041 x626 x920 x1610 x714))))
(assert (= 64 (x1005 (x910 64 953417218992365150631206543442508943947348309705 0))))
(assert (= 0 (x831 39095828447348766818467541868648093896559026261938444753180772323039453799525)))
(assert (< (x1323 x885 x131 x1699 x604 x728) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x586))
(assert (x304 x266))
(assert (x304 x956))
(assert (x304 x1112))
(assert (not (x517 (x1064 x515 x987 x843 x1502 x934 x524))))
(assert (x421 x19 1461501637330902918203684832716283019655932542976))
(assert (x304 x1380))
(assert (not (x517 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (= 64 (x1005 (x910 64 x1113 4))))
(assert (x304 x1606))
(assert (x304 x538))
(assert (= x764 (x473 (x1064 x1673 x1351 x222 x837 x1771 x764))))
(assert (= 0 (x831 443215666480553238610125355434898879895743000821)))
(assert (x304 x1118))
(assert (< 10000 (x1292 x1673 x326 x683 x1493)))
(assert (not (x517 (x1064 x885 x1046 x1401 x1607 x1287 x609))))
(assert (=> (<= x266 10000) (= (x831 x266) 0)))
(assert (= x477 (x1284 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (= x1750 (x1599 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (= (x1599 (x1064 x368 x1414 x569 x437 x677 x1755)) x677))
(assert (=> (<= x921 10000) (= (x831 x921) 0)))
(assert (x304 x1522))
(assert (x304 x886))
(assert (= (x1005 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) x368))
(assert (=> (<= x350 10000) (= (x831 x350) 0)))
(assert (=> (>= 10000 x1510) (= (x831 x1510) 0)))
(assert (x304 x259))
(assert (x304 x487))
(assert (= (x1082 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633)) x1575))
(assert (x304 x1241))
(assert (x304 x1552))
(assert (= x12 (and x763 (not x1025))))
(assert (x304 x1414))
(assert (= (x1292 x458 x38 x143 x399) (x831 (x1292 x458 x38 x143 x399))))
(assert (x421 x796 1461501637330902918203684832716283019655932542976))
(assert (x421 x1266 32))
(assert (x304 x143))
(assert (=> (>= 10000 x1097) (= (x831 x1097) 0)))
(assert (x1022 x1285))
(assert (x304 x1163))
(assert (= (x791 (x910 64 x1553 x1045)) x1045))
(assert (x304 x1516))
(assert (x304 x1258))
(assert (x304 x1057))
(assert (x304 x494))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1323 x368 x733 x13 x27 x1469)))
(assert (x304 x666))
(assert (x304 x929))
(assert (= (and x1626 (not x774)) x1571))
(assert (= x1606 (x473 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (x304 x383))
(assert (=> (<= x201 10000) (= 0 (x831 x201))))
(assert (x304 x109))
(assert (x304 x381))
(assert (=> (<= x1392 10000) (= (x831 x1392) 0)))
(assert (x304 x1409))
(assert (= (x831 (x912 x885 x535 x1554 x1188 x1036 x702 x877)) (x912 x885 x535 x1554 x1188 x1036 x702 x877)))
(assert (x304 x638))
(assert (= x916 (x791 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (= (x14 (x912 x885 x535 x1554 x1188 x1036 x702 x877)) x877))
(assert (=> (<= x1435 10000) (= 0 (x831 x1435))))
(assert (= (or x397 x1128) x1465))
(assert (> (x1323 x368 x733 x13 x27 x1469) 10000))
(assert (= (and (not x1715) x459) x977))
(assert (=> (>= 10000 x714) (= (x831 x714) 0)))
(assert (x304 x1603))
(assert (x304 x1234))
(assert (x517 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x1722) (= 0 (x831 x1722))))
(assert (x304 x1765))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)))
(assert (< 10000 (x912 x885 x535 x1554 x1188 x1036 x702 x877)))
(assert (=> (<= x1645 10000) (= (x831 x1645) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1292 x1722 x1509 x1717 x1488)))
(assert (x304 x739))
(assert (< (x910 x368 x1628 x1056) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x343 10000) (= 0 (x831 x343))))
(assert (=> (>= 10000 x1133) (= (x831 x1133) 0)))
(assert (x304 x297))
(assert (x304 x1764))
(assert (< 10000 (x910 64 x1553 x1045)))
(assert (x304 x669))
(assert (= (x1599 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)) x1645))
(assert (not (x517 (x1323 x515 x644 x1286 x1464 x929))))
(assert (= (x1064 x1673 x1351 x222 x837 x1771 x764) (x831 (x1064 x1673 x1351 x222 x837 x1771 x764))))
(assert (x304 x1743))
(assert (= (x910 x257 x1707 x654) (x831 (x910 x257 x1707 x654))))
(assert (x304 x1059))
(assert (x304 x987))
(assert (x304 x27))
(assert (x304 x24))
(assert (x304 x673))
(assert (= (and x892 x772) x221))
(assert (x304 x1403))
(assert (x304 x1353))
(assert (= (and (not x838) x1372) x1212))
(assert (=> (<= x602 10000) (= 0 (x831 x602))))
(assert (x304 x1407))
(assert (x304 x908))
(assert (< (x1323 x257 x932 x1244 x328 x1709) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x835 (and x931 x1652)))
(assert (= (x473 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)) x1363))
(assert (x304 x594))
(assert (x304 x1266))
(assert (= (x1599 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)) x36))
(assert (x304 x34))
(assert (not (x517 (x910 x885 x1092 x346))))
(assert (= 0 (x831 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (> (x1292 x1145 x1513 x1384 x356) 10000))
(assert (x304 x541))
(assert (= x1692 (x1284 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (x304 x1075))
(assert (= (x831 x1178) (x831 (+ 1 x1178))))
(assert (x304 x879))
(assert (=> (<= x936 10000) (= (x831 x936) 0)))
(assert (x304 x952))
(assert (= x535 (x1082 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (x304 x247))
(assert (= (x831 (x333 x1673 x1130)) (x333 x1673 x1130)))
(assert (x304 x1778))
(assert (x304 x527))
(assert (x304 x827))
(assert (x304 x1186))
(assert (=> (<= x1149 10000) (= 0 (x831 x1149))))
(assert (= (x831 (x910 x368 x1628 x1056)) (x910 x368 x1628 x1056)))
(assert (= x1502 (x1284 (x1064 x515 x987 x843 x1502 x934 x524))))
(assert (=> (<= x742 10000) (= (x831 x742) 0)))
(assert (= (and (not x1650) x1247) x442))
(assert (x236 x1266))
(assert (x304 x1357))
(assert (= x1136 (x14 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (< 10000 (x1292 x257 x954 x926 x936)))
(assert (= (x831 x1052) (x831 (+ 1 x1052))))
(assert (x304 x558))
(assert (x236 1461501637330902918203684832716283019655932542975))
(assert (not (x517 (x910 x368 x1628 x1056))))
(assert (= (x791 (x910 64 x392 4)) 4))
(assert (x304 x667))
(assert (< 10000 (x1323 x458 x602 x1408 x1173 x1220)))
(assert (x304 x1493))
(assert (not (x517 (x1323 x885 x131 x1699 x604 x728))))
(assert (=> (<= x1354 10000) (= 0 (x831 x1354))))
(assert (x304 x1255))
(assert (x1022 x881))
(assert (=> (>= 10000 x932) (= (x831 x932) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)))
(assert (x304 x969))
(assert (= (and (not x166) x1210) x135))
(assert (=> (<= x284 10000) (= 0 (x831 x284))))
(assert (= (and x1626 x774) x763))
(assert (=> (>= 10000 x1596) (= (x831 x1596) 0)))
(assert (> (x1292 x458 x38 x143 x399) 10000))
(assert (x304 x1028))
(assert (= (x1005 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) x1722))
(assert (< 10000 (x910 64 x1553 x1249)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x333 x1673 x1130)))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (not (x517 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (x304 x1713))
(assert (=> (<= x1517 10000) (= (x831 x1517) 0)))
(assert (x304 x696))
(assert (> (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711) 10000))
(assert (= (x1064 x458 x827 x1073 x1501 x1439 x1606) (x831 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (x304 x367))
(assert (= x343 (x1599 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (x304 x1583))
(assert (x304 x593))
(assert (x304 x312))
(assert (= (=> (and (= (x625 (- x298 x441)) x1708) (= x63 (x870 (+ 32 x441))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x717) (and (>= x717 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639869 x717)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x717) (>= x717 115792089237316195423570985008687907853269984665640564039457584007913129639715))) (= (x28 x441) x1722) (= (x870 (+ x717 32)) x636) (= x298 (x870 (+ 32 x1622))) (or (>= x717 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x717) (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639869)) (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639711) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x717))) (= x1480 (>= 224 x1722)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x717) (< x952 x441) (<= 1 x742) (= 9 x1492) (= x1419 (x709 x1175)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x717) (= (+ x47 1) x1175) (= (x870 (+ x441 32)) x1258) (= x642 (ite (= x1461 x969) (ite (not (= (x935 1461501637330902918203684832716283019655932542975 x1416) 0)) 1 0) (ite (= x1461 x969) 1 0))) (< x441 x298) (= (x870 (+ 32 x1258)) x1622) (<= x742 1461501637330902918203684832716283019655932542975) (= 1 x642) (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= (x870 (+ x717 64)) x952) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x717) (and (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x717)) (and (<= x717 115792089237316195423570985008687907853269984665640564039457584007913129639806) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x717))) (= (x625 (- x1708 32)) x1135) (= x441 (x870 (+ x952 64))) (= (x935 1461501637330902918203684832716283019655932542975 x1416) x1461) (= (x870 (+ x952 32)) x614) (< x717 x952) (= (x910 64 x1113 4) x47)) (and (=> (and (= x878 (x870 (+ 128 x63))) (= (x28 x63) x820) (= x1283 (x28 x572)) (= x589 (x870 (+ x63 160))) (= x1585 (x625 (- x1032 32))) (= x572 (x870 (+ 96 x63))) (= x1298 (x28 x806)) (= (x28 x63) x844) (= (x870 (+ x63 32)) x927) (= x577 (x28 x737)) (= x1237 (x870 (+ 32 x63))) (= x1089 (x28 x63)) (= (x870 (+ 128 x63)) x138) (= x266 (x28 x878)) (= (x28 x127) x606) (= (x870 (+ 32 x63)) x694) (or (and (>= x298 98) (>= 157 x298)) (and (>= x298 115792089237316195423570985008687907853269984665640564039457584007913129639844) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x298)) (and (<= x298 94) (>= x298 3)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x298) (>= x298 161))) (= (x912 x1722 x844 x240 x1097 x1283 x1431 x789) x305) (= x1148 (x333 x1722 x1089)) (= (x910 x1722 x1008 x1311) x474) (= (x870 (+ x63 64)) x227) (= (x870 (+ x298 32)) x1214) (= x1673 (x107 x298)) (= (x870 (+ x63 64)) x1643) (= (x28 x1237) x1311) (= x529 (x870 (+ x1245 32))) (= (x28 x63) x1509) (= x415 (x870 (+ 96 x63))) (= x816 (x28 x63)) (= x806 (x870 (+ 64 x63))) (= x1097 (x28 x227)) (> x1280 x298) (= (x870 (+ x529 32)) x1280) (= (x870 (+ 96 x63)) x765) (= x1710 (x28 x63)) (= (x870 (+ x63 32)) x1471) (= x86 (x1323 x1722 x816 x234 x1298 x786)) (= (x870 (+ 96 x63)) x587) (= (x28 x694) x196) (= x737 (x870 (+ x63 32))) (= (x870 (+ x63 64)) x127) (= (x28 x765) x1453) (= x67 (x28 x415)) (= x132 (x1064 x1722 x1710 x577 x606 x67 x527)) (= x297 (x870 (+ x63 160))) (= (x28 x927) x234) (= x1035 (x28 x1497)) (= (x28 x589) x1279) (= x1455 (x28 x1782)) (= (x28 x1643) x1488) (= (x870 (+ 192 x63)) x1782) (= (x651 0) x649) (= (x28 x1471) x1717) (= x1008 (x28 x63)) (= x1754 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)) (= x527 (x28 x611)) (= x1473 (x1292 x1722 x1509 x1717 x1488)) (= x1431 (x28 x138)) (= x789 (x28 x297)) (= x240 (x28 x1240)) (= (x870 (+ x63 64)) x1497) (= x611 (x870 (+ 128 x63))) (= x1245 (x870 (+ x298 32))) (= (x870 (+ x63 32)) x1240) (= (>= 224 x1673) x1512) (= (ite (= 0 x1722) x649 (ite (>= 32 x1722) x1148 (ite (>= 64 x1722) x474 (ite (>= 96 x1722) x1473 (ite (>= 128 x1722) x86 (ite (<= x1722 160) x132 (ite (>= 192 x1722) x305 (ite (>= 224 x1722) x1754 x1007)))))))) x565) (= (x28 x587) x786) (= x1032 (x625 (- x1280 x298)))) (and (=> (and (= (x1323 x1673 x232 x1132 x812 x1243) x1694) (= x1490 (x107 x1388)) (= x532 (x870 (+ 32 x1214))) (= x1358 (x333 x1673 x1130)) (= (x107 x361) x222) (= x60 (x870 (+ x1409 32))) (= (x870 (+ x1214 32)) x361) (= x692 (x870 (+ 96 x1214))) (= x1130 (x107 x1214)) (= x1299 (x107 x1176)) (= (x870 (+ 64 x1214)) x1778) (= (x107 x471) x920) (= x58 (x107 x532)) (= x1592 (x870 (+ x60 32))) (= (x107 x1370) x837) (= (x107 x1214) x1731) (= (x651 0) x1192) (= x1041 (x107 x832)) (= (x870 (+ 32 x1214)) x425) (= (x1624 128) x1065) (= (x870 (+ 32 x1214)) x832) (= x1796 (x107 x425)) (= (x910 x1673 x1731 x58) x1294) (= x1190 (x1292 x1673 x326 x683 x1493)) (= (ite (= x1673 0) x1192 (ite (>= 32 x1673) x1358 (ite (>= 64 x1673) x1294 (ite (>= 96 x1673) x1190 (ite (<= x1673 128) x1694 (ite (<= x1673 160) x113 (ite (>= 192 x1673) x1548 (ite (>= 224 x1673) x523 x1225)))))))) x400) (= (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633) x523) (= (x870 (+ x1214 64)) x1370) (= (x107 x1580) x683) (= x1567 (x870 (+ x1214 160))) (= (x870 (+ 96 x1214)) x471) (= x1158 (x870 (+ x1214 128))) (= (x107 x1560) x1493) (= (x870 (+ 32 x1749)) x210) (= (x107 x692) x1243) (= (x107 x898) x1132) (= x1351 (x107 x1214)) (= (x107 x541) x633) (= (x870 (+ 160 x1214)) x1176) (= x874 (x870 (+ x1214 96))) (= (x870 (+ 4 x1280)) x1409) (= x1548 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) (= (x107 x1214) x1256) (= x1262 (x870 (+ x1214 128))) (= x326 (x107 x1214)) (= x316 (x870 (+ x1592 32))) (= x113 (x1064 x1673 x1351 x222 x837 x1771 x764)) (= x1610 (x107 x1158)) (= x898 (x870 (+ 32 x1214))) (= x64 (< 0 x1065)) (= x1575 (x107 x1214)) (= x1771 (x107 x251)) (= x812 (x107 x944)) (= (x870 (+ 64 x1214)) x1388) (= (x870 (+ 192 x1214)) x541) (= x232 (x107 x1214)) (= x1580 (x870 (+ 32 x1214))) (= x1749 (x870 (+ 128 x1409))) (= (x870 (+ x1214 128)) x1355) (= (x107 x1567) x714) (= (x107 x874) x283) (= (x107 x1262) x1669) (= x764 (x107 x1355)) (= x1560 (x870 (+ x1214 64))) (= x944 (x870 (+ x1214 64))) (= x626 (x107 x1778)) (= x251 (x870 (+ x1214 96)))) (and (=> (not x64) x476) (=> (and (and (= x853 (< 32 x1065)) (= (x722 160) x1714)) x64) (and (=> (not x853) x476) (=> (and (and (= (x870 (+ 32 x210)) x1356) (= x339 (> x1065 64)) (= (x285 192) x1648)) x853) (and (=> (and x339 (and (= (x870 (+ x210 64)) x294) (= (x337 224) x248) (= (> x1065 96) x166))) (and (=> (not x166) x476) (=> x166 x1450))) (=> (not x339) x476))))))) x1512)) x1480)) x267))
(assert (x1022 x1242))
(assert (x304 x1122))
(assert (x304 x1070))
(assert (= (x1005 (x1292 x1722 x1509 x1717 x1488)) x1722))
(assert (< 10000 (x333 x1145 x1123)))
(assert (x304 x2))
(assert (x304 x1742))
(assert (x304 x974))
(assert (=> (>= 10000 x816) (= 0 (x831 x816))))
(assert (x304 x816))
(assert (x304 x38))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (not (x517 (x1292 x368 x1354 x485 x1343))))
(assert (= (x912 x458 x1797 x1149 x1254 x434 x219 x9) (x831 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (=> (>= 10000 x36) (= 0 (x831 x36))))
(assert (x304 x1717))
(assert (x304 x770))
(assert (x421 x439 1099511627776))
(assert (= x100 (and x123 (not x334))))
(assert (= (x14 (x912 x515 x913 x1109 x1393 x1645 x1282 x567)) x567))
(assert (x304 x1329))
(assert (not (x517 (x910 64 x1553 x286))))
(assert (= (x831 (x910 64 x942 3)) (x910 64 x942 3)))
(assert (= (x831 19198514131333069964808701557143768876432618777570657477111002777175690575872) 0))
(assert (= x137 (and x480 x455)))
(assert (= (x1082 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)) x168))
(assert (= x1439 (x1599 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (= x633 (x914 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (< 10000 (x910 x257 x1707 x654)))
(assert (x304 x1701))
(assert (= (and x1317 x951) x75))
(assert (x304 x1375))
(assert (> (x1292 x515 x1732 x1259 x375) 10000))
(assert (x304 x990))
(assert (not (x517 (x333 x885 x1398))))
(assert (x304 x1645))
(assert (=> (<= x1136 10000) (= 0 (x831 x1136))))
(assert (x304 x953))
(assert (= (x1005 (x910 64 x662 3)) 64))
(assert (x304 x1237))
(assert (x304 x1487))
(assert (not (x517 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (x304 x869))
(assert (x304 x655))
(assert (x304 x415))
(assert (= (=> (= x463 (< 0 x598)) (and (=> (and (not x463) (= x413 x1308)) x906) (=> (and x463 (and (> x974 x413) (= (x374 x413) x1267) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x413) (= (> x1267 0) x1333) (= (x870 (+ x413 96)) x974) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x413) (= x1584 (x870 (+ 32 x1072))) (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x413)) (= x1072 (x870 (+ x413 32))) (= (x870 (+ x974 32)) x846) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x413)) (not (= x413 115792089237316195423570985008687907853269984665640564039457584007913129639840)))) (and (=> (not x1333) x1221) (=> (and (and (= x31 (x374 x1072)) (= x1687 (> x1267 32))) x1333) (and (=> (and (and (= (x870 (+ 32 x846)) x1329) (= (< 64 x1267) x1124) (= x1079 (x870 (+ 32 x1072))) (= x618 (x1631 x1079))) x1687) (and (=> (and x1124 (and (= x183 (x870 (+ 64 x1072))) (= x1163 (x870 (+ 64 x846))) (= x525 (x854 x183)) (= x838 (> x1267 96)))) (and (=> x838 x1038) (=> (not x838) x1221))) (=> (not x1124) x1221))) (=> (not x1687) x1221))))))) x1144))
(assert (x304 x570))
(assert (=> (>= 10000 x1516) (= (x831 x1516) 0)))
(assert (= (x1082 (x910 x1145 x1405 x1217)) x1405))
(assert (=> (>= 10000 x1600) (= (x831 x1600) 0)))
(assert (not (x517 (x1292 x1673 x326 x683 x1493))))
(assert (= x515 (x1005 (x910 x515 x359 x1658))))
(assert (=> (>= 10000 x1188) (= (x831 x1188) 0)))
(assert (< 10000 (x333 x458 x593)))
(assert (= x515 (x1005 (x912 x515 x913 x1109 x1393 x1645 x1282 x567))))
(assert (x304 x1115))
(assert (x304 x1518))
(assert (= (x1005 (x910 x458 x18 x1495)) x458))
(assert (=> (>= 10000 x1710) (= 0 (x831 x1710))))
(assert (> (x1292 x885 x1093 x1392 x268) 10000))
(assert (x304 x518))
(assert (=> (>= 10000 x569) (= (x831 x569) 0)))
(assert (x517 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x304 x1295))
(assert (x304 x617))
(assert (x304 x170))
(assert (x304 x1545))
(assert (x304 x191))
(assert (=> (<= x1286 10000) (= 0 (x831 x1286))))
(assert (not (x517 (x1292 x458 x38 x143 x399))))
(assert (not (x517 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900))))
(assert (x304 x1670))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1323 x1673 x232 x1132 x812 x1243)))
(assert (x304 x1595))
(assert (x304 x193))
(assert (= (x1284 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) x1097))
(assert (x304 x981))
(assert (< 10000 (x333 x368 x538)))
(assert (= (x1082 (x910 64 729466174051048026939049150500379070045048658665 0)) 729466174051048026939049150500379070045048658665))
(assert (=> (>= 10000 x9) (= 0 (x831 x9))))
(assert (= (x831 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)))
(assert (< (x910 64 443215666480553238610125355434898879895743000821 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x821))
(assert (= (x831 (+ x467 1)) (x831 x467)))
(assert (=> (>= 10000 x568) (= (x831 x568) 0)))
(assert (=> (>= 10000 x968) (= (x831 x968) 0)))
(assert (=> (<= x1692 10000) (= 0 (x831 x1692))))
(assert (= (and x64 x1083) x1263))
(assert (x304 x1285))
(assert (= 0 (x831 22703984782402238635145372884546502928383168074851703611862639686610164121600)))
(assert (x304 x1531))
(assert (=> (<= x1244 10000) (= (x831 x1244) 0)))
(assert (x304 x1649))
(assert (x304 x756))
(assert (x304 x420))
(assert (x304 x490))
(assert (=> (<= x1503 10000) (= (x831 x1503) 0)))
(assert (= x829 (or x137 x94)))
(assert (< 10000 (x910 64 x1553 x286)))
(assert (x304 x258))
(assert (x304 x630))
(assert (x304 x1644))
(assert (x304 x1198))
(assert (= (x831 (x1292 x1145 x1513 x1384 x356)) (x1292 x1145 x1513 x1384 x356)))
(assert (=> (<= x1552 10000) (= 0 (x831 x1552))))
(assert (x304 x596))
(assert (x304 x1230))
(assert (x304 x469))
(assert (x304 x1461))
(assert (x304 x1254))
(assert (= x348 (x1082 (x912 x257 x348 x148 x1527 x343 x134 x1546))))
(assert (= (x831 (+ x1178 5)) (x831 x1178)))
(assert (= (x1082 (x1064 x1722 x1710 x577 x606 x67 x527)) x1710))
(assert (x304 x934))
(assert (= (x1005 (x910 x257 x1707 x654)) x257))
(assert (x304 x615))
(assert (= x475 (and x444 x1114)))
(assert (x421 x596 32))
(assert (x304 x609))
(assert (x304 x458))
(assert (x304 x261))
(assert (x304 x1020))
(assert (= x1067 (and x890 (not x1124))))
(assert (x304 x74))
(assert (x304 x995))
(assert (x304 x627))
(assert (= x1734 (and x787 x1213)))
(assert (=> (<= x485 10000) (= 0 (x831 x485))))
(assert (= (x791 (x910 x1673 x1731 x58)) x58))
(assert (x304 x1130))
(assert (x304 x1389))
(assert (x304 x1502))
(assert (x304 x242))
(assert (x304 x1673))
(assert (x304 x832))
(assert (=> (<= x1796 10000) (= (x831 x1796) 0)))
(assert (x304 x422))
(assert (= x317 (=> (and (and (<= x74 127) (>= 16777215 x1255) (= false x819) (= x40 false) (= (x1359 x193) x109) (= x1077 x740) (<= x74 127) (= x1727 x851) (= x1698 (x709 x1462)) (<= 1 x109) (= x1653 x1126) (= x1773 x1615) (= x1462 (+ x198 1)) (= x945 (x124 288)) (= x1126 (x124 256)) (= x198 (x910 64 x1077 4)) (= x1255 (x1042 x198)) (= (= x945 0) x958) (= false x715) (= x288 false) (= x1773 (not x958)) (= false x893) (= x661 false) (= 4067465820 x1394)) (and (= x536 x1746) (= x342 x740) (= 36 x1232) (= x342 x536))) x824)))
(assert (=> (>= 10000 x1299) (= 0 (x831 x1299))))
(assert (= x1087 (x791 (x910 64 x742 x1087))))
(assert (x304 x1264))
(assert (= x257 (x1005 (x333 x257 x1503))))
(assert (=> (<= x1059 10000) (= 0 (x831 x1059))))
(assert (x304 x291))
(assert (x304 x1475))
(assert (=> (>= 10000 x234) (= (x831 x234) 0)))
(assert (x304 x1760))
(assert (x304 x982))
(assert (< 10000 (x1292 x1722 x1509 x1717 x1488)))
(assert (= x1722 (x1005 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (= (x831 (x910 x515 x359 x1658)) (x910 x515 x359 x1658)))
(assert (=> (>= 10000 x1543) (= 0 (x831 x1543))))
(assert (= x291 (x791 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (=> (<= x879 10000) (= (x831 x879) 0)))
(assert (= x27 (x1284 (x1323 x368 x733 x13 x27 x1469))))
(assert (not (x517 (x910 64 x1113 3))))
(assert (= (x791 (x910 64 x1077 4)) 4))
(assert (x304 x604))
(assert (= (x333 x368 x538) (x831 (x333 x368 x538))))
(assert (x304 x595))
(assert (= (or x78 x1196) x455))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639806) 0))
(assert (= 0 (x791 (x910 64 953417218992365150631206543442508943947348309705 0))))
(assert (x304 x690))
(assert (=> (<= x1640 10000) (= (x831 x1640) 0)))
(assert (= x1053 (and x1639 x1156)))
(assert (=> (<= x1755 10000) (= (x831 x1755) 0)))
(assert (x304 x662))
(assert (= x368 (x1005 (x1323 x368 x733 x13 x27 x1469))))
(assert (=> (<= x232 10000) (= (x831 x232) 0)))
(assert (= (x1082 (x910 64 x1077 4)) x1077))
(assert (= x1695 (x791 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (x304 x368))
(assert (= (x831 x1027) (x831 (+ 1 x1027))))
(assert (=> (>= 10000 x913) (= 0 (x831 x913))))
(assert (x304 x896))
(assert (= x1711 (and x829 x463)))
(assert (x304 x240))
(assert (x304 x1705))
(assert (x304 x228))
(assert (x304 x41))
(assert (< 10000 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)))
(assert (x304 x237))
(assert (=> (>= 10000 x1077) (= (x831 x1077) 0)))
(assert (x421 x972 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x831 (x910 64 x742 x1087)) (x910 64 x742 x1087)))
(assert (= (x831 (x910 x885 x1092 x346)) (x910 x885 x1092 x346)))
(assert (=> (<= x211 10000) (= 0 (x831 x211))))
(assert (x304 x1643))
(assert (x517 1551562514))
(assert (x304 x1676))
(assert (not (x517 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1292 x368 x1354 x485 x1343)))
(assert (< 10000 (x1323 x885 x131 x1699 x604 x728)))
(assert (= (or x1364 x354) x787))
(assert (x304 x938))
(assert (= (x791 (x910 64 443215666480553238610125355434898879895743000821 1)) 1))
(assert (x304 x274))
(assert (x304 x372))
(assert (x304 x1613))
(assert (x304 x1018))
(assert (= x1145 (x1005 (x910 x1145 x1405 x1217))))
(assert (= (and (not x909) x379) x1361))
(assert (= (and x1506 x146) x459))
(assert (= (x1599 (x1323 x885 x131 x1699 x604 x728)) x728))
(assert (= (x473 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x1131))
(assert (x304 x858))
(assert (= x1094 (=> (and (and (= x1553 x120) (<= x584 16777215) (= x887 x1498) (= x1118 (x1359 x561)) (= x1774 729466174051048026939049150500379070045048658665) (>= 127 x665) (= false x1162) (<= x665 127) (= x1379 false) (= x1447 x1614) (= x126 x1614) (= (x1359 x561) x750) (>= 127 x1582) (= x1636 (= 0 x490)) (= (x1793 128) x490) (>= x1118 1) (= 68 x1781) (>= x1115 1) (= x1504 1551562514) (= x1457 (+ x861 1)) (>= x924 1) (= false x1566) (= (x1359 x561) x1115) (= x1728 false) (= (x1359 x193) x1307) (= x584 (x1042 x861)) (= x212 false) (= 36 x1593) (= 36 x446) (= x590 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= x1164 false) (= x1239 (x709 x1457)) (= x961 128) (= x389 (x910 64 x1553 x1249)) (>= 127 x1582) (= x120 x126) (= x861 (x910 64 x392 4)) (= x637 false) (<= x842 127) (= x521 false) (= 729466174051048026939049150500379070045048658665 x918) (= (x910 64 729466174051048026939049150500379070045048658665 0) x1249) (>= 127 x395) (= x392 x682) (>= 127 x395) (= 85963009616197036880240088340724629170983710335684291091497906406952890531840 x533) (= (x1441 x389) x1720) (= false x603) (= x1498 (x1688 256)) (= x1447 x1629) (= x1489 128) (= 3188545240 x1060) (= false x32) (= 2175550133 x385) (= false x450) (>= x1307 1) (= (x1688 288) x1553) (<= x842 127) (<= 1 x750) (= x54 false) (= false x937) (= x978 4067465820) (= x924 (x1359 x1596)) (= false x448)) (and (= x1746 x1634) (= x575 x682) (= 36 x144) (= x575 x1634))) (and (=> x1636 x478) (=> (and (not x1636) (and (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x1572) (= (x1359 x1596) x1539) (= x797 false) (= (= x586 0) x1326) (= x1533 false) (>= 127 x1200) (= 443215666480553238610125355434898879895743000821 x1199) (= false x1445) (= 224 x1477) (>= x1539 1) (= false x1530) (= x1447 x1677) (<= x1200 127) (= (x910 64 x1553 x1045) x1496) (= 2175550133 x1044) (= x1045 (x910 64 443215666480553238610125355434898879895743000821 0)) (= x586 (x635 224)) (= (x1441 x1496) x76) (= 443215666480553238610125355434898879895743000821 x1231) (= 68 x33))) (and (=> x1326 x478) (=> (and (not x1326) (and (= (x1359 x1596) x1644) (= 2175550133 x228) (>= 127 x985) (>= 127 x985) (= x41 320) (= 953417218992365150631206543442508943947348309705 x1701) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x1264) (= false x865) (= false x491) (= x579 (x1441 x784)) (= (x910 64 x1553 x581) x784) (= x387 x1447) (= x1348 false) (= (= 0 x1167) x1650) (= false x875) (= 68 x881) (= x581 (x910 64 953417218992365150631206543442508943947348309705 0)) (= (x1536 320) x1167) (= x647 953417218992365150631206543442508943947348309705) (<= 1 x1644))) (and (=> (and (and (= (x910 64 x1553 x286) x177) (= 443215666480553238610125355434898879895743000821 x195) (= x1028 443215666480553238610125355434898879895743000821) (= x1447 x1758) (= x286 (x910 64 443215666480553238610125355434898879895743000821 1)) (= false x1289) (= x1367 3168472768) (<= 1 x995) (= (x1359 x1596) x995) (= x547 false) (= 85421856841599162343179548931066850070836787616102889281506983661126589349888 x1403) (= (x1507 416) x1705) (= 81 x803) (= (x864 x1514) x207) (= 416 x1603) (= x1514 (x910 64 81 x177)) (= x1680 (> x1705 0)) (= false x833) (= x1180 false) (<= x181 127) (= 100 x307) (<= x181 127)) (not x1650)) (and (=> (not x1680) x478) (=> (and (= x1324 1) x1680) x1302))) (=> x1650 x478)))))))))
(assert (x304 x402))
(assert (x304 x9))
(assert (x517 85421856841599162343179548931066850070836787616102889281506983661126589349888))
(assert (x782 32))
(assert (not (x517 (x910 64 x1553 x581))))
(assert (x304 x941))
(assert (=> (<= x1669 10000) (= (x831 x1669) 0)))
(assert (x304 x390))
(assert (= 0 (x831 103603067176188370116793463780953604340491603117933565163376133325037439549440)))
(assert (= (x831 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (< (x910 64 x742 x1087) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1082 (x333 x458 x593)) x593))
(assert (= x1106 (x791 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (=> (>= 10000 x652) (= (x831 x652) 0)))
(assert (x304 x1654))
(assert (= x683 (x791 (x1292 x1673 x326 x683 x1493))))
(assert (< 10000 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)))
(assert (= x1145 (x1005 (x1292 x1145 x1513 x1384 x356))))
(assert (not (x517 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (< 10000 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)))
(assert (x304 x1308))
(assert (x304 x251))
(assert (= (x910 64 443215666480553238610125355434898879895743000821 0) (x831 (x910 64 443215666480553238610125355434898879895743000821 0))))
(assert (x304 x803))
(assert (x304 x1783))
(assert (x304 x927))
(assert (x304 x1477))
(assert (x304 x729))
(assert (= (x1005 (x1323 x458 x602 x1408 x1173 x1220)) x458))
(assert (= (x1005 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x368))
(assert (= (x831 (x910 64 x1553 x1045)) (x910 64 x1553 x1045)))
(assert (x304 x395))
(assert (x304 x1377))
(assert (not (x517 (x333 x1673 x1130))))
(assert (= x326 (x1082 (x1292 x1673 x326 x683 x1493))))
(assert (x304 x578))
(assert (x1022 x144))
(assert (x304 x1587))
(assert (x304 x837))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x912 x458 x1797 x1149 x1254 x434 x219 x9)))
(assert (=> (>= 10000 x609) (= (x831 x609) 0)))
(assert (< (x910 x458 x18 x1495) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x993))
(assert (=> (>= 10000 x1220) (= 0 (x831 x1220))))
(assert (= (x1064 x257 x249 x291 x201 x568 x724) (x831 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (x304 x1741))
(assert (= (x1005 (x1064 x1673 x1351 x222 x837 x1771 x764)) x1673))
(assert (= (x910 64 x1113 3) (x831 (x910 64 x1113 3))))
(assert (x304 x1265))
(assert (x304 x1474))
(assert (x304 x329))
(assert (x304 x1757))
(assert (x1022 x235))
(assert (=> (>= 10000 x443) (= (x831 x443) 0)))
(assert (x782 x770))
(assert (x304 x539))
(assert (x304 x944))
(assert (x304 x932))
(assert (x304 x223))
(assert (= (x1323 x515 x644 x1286 x1464 x929) (x831 (x1323 x515 x644 x1286 x1464 x929))))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (= (x831 (+ 1 x1686)) (x831 x1686)))
(assert (x304 x133))
(assert (= (and (not x1652) x931) x37))
(assert (=> (>= 10000 x1493) (= (x831 x1493) 0)))
(assert (= (and x904 (not x1642)) x93))
(assert (x304 x1385))
(assert (x304 x633))
(assert (= (x1005 (x333 x1145 x1123)) x1145))
(assert (x304 x392))
(assert (x304 x1588))
(assert (x304 x79))
(assert (not (x517 (x910 x1722 x1008 x1311))))
(assert (x304 x1243))
(assert (= x1095 (x791 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (x255 1461501637330902918203684832716283019655932542976))
(assert (= 64 (x1005 (x910 64 81 x177))))
(assert (x255 x972))
(assert (= x772 (or x37 x835)))
(assert (x304 x144))
(assert (x304 x1498))
(assert (x304 x1142))
(assert (x304 x765))
(assert (=> (<= x420 10000) (= 0 (x831 x420))))
(assert (=> (<= x399 10000) (= (x831 x399) 0)))
(assert (= (x1005 (x910 64 x392 4)) 64))
(assert (= (x1599 (x1323 x458 x602 x1408 x1173 x1220)) x1220))
(assert (x236 x972))
(assert (= (x791 (x910 64 729466174051048026939049150500379070045048658665 0)) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)))
(assert (= x1554 (x791 (x912 x885 x535 x1554 x1188 x1036 x702 x877))))
(assert (= x850 (or x229 x917)))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x304 x164))
(assert (x304 x98))
(assert (< (x910 64 x1553 x286) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1407) (= (x831 x1407) 0)))
(assert (x1022 x1593))
(assert (=> (>= 10000 x1408) (= 0 (x831 x1408))))
(assert (= (x1284 (x1064 x257 x249 x291 x201 x568 x724)) x201))
(assert (x304 x965))
(assert (x304 x375))
(assert (= (=> (and (or (and (= 1 x324) x1332) (and (= 0 x324) (not x1332))) (= (< 0 (ite (= 0 x1324) x1324 1)) x1332)) x555) x1302))
(assert (x304 x51))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 953417218992365150631206543442508943947348309705 0)))
(assert (x304 x1682))
(assert (= x257 (x1005 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (not (x517 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (= 0 (x831 1461501637330902918203684832716283019655932542975)))
(assert (x255 x439))
(assert (=> (>= 10000 x1256) (= (x831 x1256) 0)))
(assert (x304 x1253))
(assert (x304 x1395))
(assert (x304 x743))
(assert (= x1503 (x1082 (x333 x257 x1503))))
(assert (=> (<= x1495 10000) (= 0 (x831 x1495))))
(assert (=> (>= 10000 x1341) (= 0 (x831 x1341))))
(assert (x304 x961))
(assert (= (x1005 (x1323 x515 x644 x1286 x1464 x929)) x515))
(assert (= x1221 (=> (and (= (x870 (+ x974 32)) x312) (< x974 x1547) (= (x870 (+ x846 x1267)) x1547) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x974) (= x368 (x1228 x974)) (= x563 (x625 (- x1547 x974))) (<= x974 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x974 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1547) (= x499 (x625 (- x563 32))) (= x315 (<= x368 224))) (and (=> (and (= (x870 (+ x312 128)) x540) (= (x1228 x312) x733) (= (x870 (+ 96 x312)) x659) (= x71 (x870 (+ 32 x1444))) (= (x870 (+ x312 64)) x2) (>= x598 1) (= (x1228 x1226) x1341) (= (x870 (+ 64 x312)) x956) (= (x625 (- x1400 95)) x1310) (= x1542 (x651 0)) (= x1414 (x1228 x312)) (= x1672 (x870 (+ x312 32))) (= (x870 (+ x312 96)) x1660) (= x685 (x870 (+ 32 x312))) (= (x1228 x1627) x569) (= x1339 (x1323 x368 x733 x13 x27 x1469)) (= x1031 (x870 (+ x1389 32))) (= (x870 (+ x1547 32)) x1389) (= x1466 (x870 (+ 32 x1031))) (= (x514 x1547) x885) (= x1229 (x1064 x368 x1414 x569 x437 x677 x1755)) (= x1635 (x870 (+ 192 x312))) (= x1628 (x1228 x312)) (= x1238 (x1228 x996)) (= x218 (x1228 x312)) (= x437 (x1228 x1522)) (= x1487 (x80 x256)) (= (x1228 x1672) x652) (= (x80 x256) x971) (or (and (>= x1547 1) (<= x1547 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1547) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1547))) (= (>= 224 x885) x25) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x971) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x971)) (= (x870 (+ x312 64)) x1522) (= (x870 (+ 160 x312)) x1500) (= (x625 (- x158 32)) x388) (= x26 (x870 (+ x312 32))) (= x13 (x1228 x1218)) (= (x870 (+ x312 32)) x1627) (= x398 (x1228 x2)) (>= 18446744073709551615 x598) (= x27 (x1228 x1234)) (= x432 (x870 (+ x312 96))) (= (x910 x368 x1628 x1056) x1055) (= (ite (= x368 0) x1542 (ite (>= 32 x368) x735 (ite (<= x368 64) x1055 (ite (<= x368 96) x1762 (ite (>= 128 x368) x1339 (ite (>= 160 x368) x1229 (ite (<= x368 192) x1146 (ite (>= 224 x368) x1637 x1690)))))))) x1433) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1310) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x971)) (and (< x971 x1310) (= (<= x1310 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x971 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x625 (- x759 x256)) x1400) (= x1561 (x1228 x312)) (= x485 (x1228 x26)) (= x1444 (x870 (+ x256 x1487))) (= (x870 (+ x1547 32)) x1484) (= (x870 (+ x312 128)) x595) (= x1469 (x1228 x659)) (= x553 (x80 x178)) (= x1755 (x1228 x758)) (= (x1228 x1500) x780) (> x1382 x1547) (= (x1228 x595) x1131) (= (x1228 x540) x1517) (<= x1763 340282366920938463463374607431768211455) (= x900 (x1228 x1635)) (= x158 (x625 (- x1382 x1547))) (or (<= x1487 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1487 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x870 (+ x312 128)) x758) (= (x1228 x685) x1056) (= (x1228 x956) x1343) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1487) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1310)) (< x1487 x1310)) (and (<= x1310 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1487))) (= (x870 (+ x312 32)) x1218) (= (x1228 x432) x1790) (= (x80 x71) x1763) (= x1226 (x870 (+ 160 x312))) (= (x1228 x1451) x690) (= x1146 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) (= (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900) x1637) (= (x870 (+ x256 x971)) x178) (= (x870 (+ 96 x312)) x1205) (= (x333 x368 x538) x735) (= x1354 (x1228 x312)) (= (x870 (+ 96 x1389)) x1382) (= (x1228 x1660) x1601) (= (x1292 x368 x1354 x485 x1343) x1762) (= (x870 (+ 32 x312)) x1451) (= (x1228 x1205) x677) (= (x1228 x312) x538) (>= 1461501637330902918203684832716283019655932542975 x553) (= x996 (x870 (+ 64 x312))) (= (x870 (+ x312 64)) x1234)) (and x25 (=> (and (= x259 (x870 (+ x1484 96))) (= x412 (x912 x885 x535 x1554 x1188 x1036 x702 x877)) (= (x333 x885 x1398) x967) (= (x870 (+ x1484 32)) x623) (= (x870 (+ x1484 32)) x1523) (= x1411 (x870 (+ x1484 128))) (= (x514 x1484) x1093) (= x574 (not (< 1 x598))) (= (x514 x1484) x535) (= (x514 x1427) x1287) (= x278 (x514 x615)) (= (x514 x1411) x393) (= x604 (x514 x231)) (= x48 (x651 0)) (= x1016 (x870 (+ x1484 64))) (= (x870 (+ 64 x1484)) x785) (>= x1485 1) (= x728 (x514 x259)) (= (x870 (+ x1484 96)) x1463) (= (x870 (+ x1484 96)) x615) (= x1485 (x514 x3)) (= (x514 x1187) x877) (= (x514 x1090) x968) (= (x514 x265) x346) (= (x870 (+ 32 x1484)) x839) (= x609 (x514 x680)) (= (x732 x885 x966 x350 x968 x278 x393 x1136 x588) x1246) (= (x514 x1484) x131) (= x1092 (x514 x1484)) (= (x870 (+ x1484 128)) x680) (= x1554 (x514 x839)) (= x1046 (x514 x1484)) (= (ite (= x885 0) x48 (ite (>= 32 x885) x967 (ite (<= x885 64) x1085 (ite (>= 96 x885) x287 (ite (>= 128 x885) x296 (ite (<= x885 160) x1058 (ite (<= x885 192) x412 (ite (<= x885 224) x1246 x500)))))))) x751) (= (x870 (+ 32 x1484)) x265) (= (x514 x1523) x1392) (= x1401 (x514 x1783)) (= (x870 (+ 64 x1484)) x231) (= x287 (x1292 x885 x1093 x1392 x268)) (= x296 (x1323 x885 x131 x1699 x604 x728)) (= x702 (x514 x1785)) (= (x514 x1360) x1136) (= (+ 32 x3) x1570) (= (x870 (+ 160 x1484)) x1187) (= x1454 (x870 (+ x1484 192))) (= (x514 x1484) x966) (= (x514 x1454) x588) (= x1058 (x1064 x885 x1046 x1401 x1607 x1287 x609)) (= x1090 (x870 (+ x1484 64))) (= (x870 (+ 32 x1484)) x1783) (= (x514 x321) x268) (= x350 (x514 x623)) (= x1188 (x514 x785)) (= x1398 (x514 x1484)) (= (x870 (+ x1484 64)) x321) (= (x870 (+ x1484 128)) x1785) (= x1427 (x870 (+ 96 x1484))) (= (x514 x630) x1699) (= (x514 x1016) x1607) (= x1085 (x910 x885 x1092 x346)) (= x1036 (x514 x1463)) (= (x870 (+ x1484 160)) x1360) (= (x870 (+ 32 x1484)) x630)) (and x574 (=> (= x1308 x1382) x906))))) x315))))
(assert (x304 x1214))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639839)))
(assert (= (x1005 (x1323 x885 x131 x1699 x604 x728)) x885))
(assert (= x954 (x1082 (x1292 x257 x954 x926 x936))))
(assert (x304 x284))
(assert (x1022 x1518))
(assert (= 64 (x1005 (x910 64 x1553 x1045))))
(assert (= x397 (and (not x139) x357)))
(assert (< (x912 x368 x1561 x690 x398 x1790 x1517 x1341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x599))
(assert (= x290 (x1082 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (= x354 (or x730 x482)))
(assert (= x346 (x791 (x910 x885 x1092 x346))))
(assert (x236 1099511627775))
(assert (x304 x60))
(assert (x304 x69))
(assert (= (x1284 (x1292 x515 x1732 x1259 x375)) x375))
(assert (x304 x1768))
(assert (= x229 (and x845 x1269)))
(assert (< 10000 (x1292 x368 x1354 x485 x1343)))
(assert (= x879 (x1599 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (=> (<= x711 10000) (= (x831 x711) 0)))
(assert (x304 x430))
(assert (= (=> (and (and (and (= x439 x156) (and (or (and (and (= (+ x3 32) x1057) (= (* 32 x598) x49)) (not x480)) x480) (and (= x480 (= x598 0)) (= (x935 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1383) x1764) (= (+ x1764 128) x1620) (>= 18446744073709551391 x1764) (= x629 (+ x720 32)) (<= 1 x1274) (= x1274 (x1359 x193)) (< x749 x759) (= x1621 x1747) (not (> x1620 x3)) (<= 1 x1764) (= x822 (x1340 x193)) (= (x935 115792089237316195423570985008687907853269984665640564039457584007913129639904 x972) x997) (> x759 x96) (= x911 x1422) (= x413 (+ x3 32 x1347)) (= x1086 x1691) (= false x752) (= (+ x990 4) x720) (= x836 x1769) (= (x332 x1747) x1223) (= x570 128) (= x1181 x24) (= (+ 160 x1418) x1268) (= x55 x338) (<= x982 127) (= x1712 false) (= x188 (+ x1425 4)) (> x3 x1620) (= x192 x122) (= 3686331914 x959) (= x908 x1678) (= x96 (+ 31 x188)) (not (> x859 x759)) (= (x80 x188) x598) (= (+ 63 x997) x1383) (= x972 (+ x1418 31)) (= (* 32 x598) x1017) (= x822 x390) (= x640 (+ x256 x1017)) (> x413 x3) (= x1347 (* x598 32)) (= x3 (+ 96 x1620)) (= (x80 x720) x1418) (>= 127 x982) (>= 18446744073709551615 x1418) (= x749 (+ 31 x720)) (= x859 (+ x629 x1418)) (>= 18446744073709551615 x598) (not (< x759 x640)) (= x256 (+ x188 32))))) (and (= x801 x1198) (= x192 x62) (= (x907 260) x224) (= x373 (x1321 x1421)) (= false x1679) (>= 127 x1647) (<= x1425 18446744073709551615) (= (x706 960) x194) (= (x591 x1421) x252) (<= x757 1099511627775) (= x159 (ite x330 x738 x369)) (= x1198 (x706 928)) (= x1183 (x907 196)) (= (not x1004) x330) (= x903 (x1578 x1421)) (= x85 x488) (= x1685 x738) (= x836 x224) (= x494 x205) (= x662 x1374) (= x757 (x840 x1421)) (= false x293) (= (+ x1686 1) x1052) (= x616 (x706 768)) (= x550 x1479) (= x1066 (x706 896)) (= (x907 36) x742) (= (+ 1 x719) x1421) (= x116 x184) (= x1165 (x1352 x1421)) (= x1583 x902) (= x1528 (x1150 x77)) (= x194 x226) (= (x907 100) x62) (= (x706 832) x189) (= x1033 false) (<= 1 x1748) (= x1328 x1723) (= x1193 false) (>= 255 x903) (= (+ 1 x1421) x1686) (= x1739 x990) (= (x910 64 x662 3) x719) (= (x1359 x193) x1748) (= (x1597 x1052) x381) (= x969 x908) (= (x907 68) x969) x159 (= x1312 x369) (<= x252 340282366920938463463374607431768211455) (= x973 911662625) (= x1425 x274) (= x1004 (= 0 x1479)) (= x1181 x742) (= (x97 x1686) x501) (= (+ 1 x1052) x77) (= x170 x1525) (= (x907 0) x205) (= x189 x994) (= x1704 false) (<= x742 1461501637330902918203684832716283019655932542975) (= x365 x1023) (= (x706 864) x1152) (not x330) (= false x1381) (= x990 (x907 132)) (= x600 0) (= x173 (x907 228)) (= x1113 (x907 4)) (= (ite (not (= 0 (ite (not (= 0 x903)) 1 0))) 1 0) x1551) (= x173 x338) (= true x1312) (>= 340282366920938463463374607431768211455 x501) (= (x907 164) x1425) (= x1183 x1422) (>= 255 x1183) (= x1076 x1066) (<= x1165 1099511627775) (<= x1647 127) (>= 18446744073709551615 x990) (= x550 (x706 800)) (<= x969 1461501637330902918203684832716283019655932542975) (= x1152 x112) (= x85 (x706 704)) (= x1113 x1086) (<= x373 1099511627775) (= x1651 x616) (= x1048 false))) (and (= x1281 x1208) (= x1374 x1281) (= x1208 x1746) (= 36 x1357) x262 (= x262 (ite x1278 x1615 x1727)))) x1144) x824))
(assert (= x1589 (and x1263 x853)))
(assert (x304 x711))
(assert (= (x473 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)) x1682))
(assert (x304 x1623))
(assert (x304 x1396))
(assert (x304 x85))
(assert (= (x831 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)) (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)))
(assert (x304 x882))
(assert (=> (>= 10000 x683) (= 0 (x831 x683))))
(assert (= x820 (x1082 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455))))
(assert (not (x517 (x910 64 x1600 3))))
(assert (=> (<= x679 10000) (= 0 (x831 x679))))
(assert (x304 x1410))
(assert (=> (>= 10000 x885) (= 0 (x831 x885))))
(assert (= x502 (=> (and (and (= x1524 x815) (= x230 false) (= 36 x1285) (= x1791 x1746) (= x965 (ite (not (= 0 x62)) 1 0)) (= false x817) (= x1791 x815)) (and (= x905 x863) (= (x1171 864) x1390) (= x1788 (x1597 x121)) (>= 127 x275) (= (x1171 800) x1619) (= x335 x988) (= x731 x1385) (= x1125 (= x1540 0)) (= (x1171 704) x383) (= x162 (x1171 896)) (= x639 false) (= x479 (x1578 x1752)) (<= x1437 340282366920938463463374607431768211455) (= x1602 false) (= x247 x509) (= (x1798 x1752) x1265) (= x1752 (+ 1 x83)) (= (x1313 x433) x1437) (= false x1061) (= x162 x1633) (= x160 (x1150 x20)) (= x121 (+ 1 x433)) (= x429 (x1352 x1752)) (= x1521 false) (= x1524 x942) (>= x573 1) (= (x1321 x1752) x243) (= x1540 x1619) (= x559 911662625) (= x697 x1390) (= x542 x383) (= x335 (x1171 832)) (= (x1171 960) x905) (= x892 (not x1125)) (<= x1265 340282366920938463463374607431768211455) (>= 255 x479) (= (x840 x1752) x487) (= x1744 0) (>= 127 x275) (<= x429 1099511627775) (= x922 false) (>= 1099511627775 x487) (= x1385 (x1171 928)) (= (ite (not (= 0 (ite (not (= 0 x479)) 1 0))) 1 0) x269) (= x433 (+ 1 x1752)) (= (x1359 x193) x573) (= x1011 false) (= (x1171 768) x247) (<= x243 1099511627775) (= (+ 1 x121) x20) (= (x910 64 x942 3) x83))) (and (=> (and (and (= x95 true) (= x270 x862) (= x95 x506)) (not x892)) x1609) (=> x892 x1094)))))
(assert (x304 x1745))
(assert (= (x831 (+ 1 x1179)) (x831 x1179)))
(assert (= x257 (x1005 (x1292 x257 x954 x926 x936))))
(assert (x304 x959))
(assert (=> (<= x1469 10000) (= 0 (x831 x1469))))
(assert (not (x517 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (x304 x150))
(assert (x304 x957))
(assert (= x1157 (and x1025 x763)))
(assert (=> (<= x1554 10000) (= 0 (x831 x1554))))
(assert (< (x1064 x1673 x1351 x222 x837 x1771 x764) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x567))
(assert (= 0 (x831 953417218992365150631206543442508943947348309705)))
(assert (= x241 (x1082 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (= (x831 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (= (x831 (x1323 x1722 x816 x234 x1298 x786)) (x1323 x1722 x816 x234 x1298 x786)))
(assert (= (x1284 (x912 x257 x348 x148 x1527 x343 x134 x1546)) x1527))
(assert (x304 x1698))
(assert (x304 x1211))
(assert (not (x517 (x910 64 x1077 4))))
(assert (= (=> (and (= (* x770 32) x370) (= (x625 (- x841 x925)) x712) (> x841 x925) (= (* 32 x770) x1574) (= x869 x1786) (>= x841 1) (>= 4 x770) (= x98 x841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x925) (= (x625 (- x712 32)) x271) (= x257 (x1054 x925)) (= x98 (x870 (+ x370 x1591))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x925) (= x1786 (+ x1574 x171)) (= x770 x1745) (= x693 (x870 (+ 32 x925))) (<= x925 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1320 (<= x257 224)) (>= x98 1)) (and (=> (and (= x1380 (x870 (+ x693 160))) (= x1709 (x1054 x428)) (= x340 (x912 x257 x348 x148 x1527 x343 x134 x1546)) (= (x870 (+ 32 x841)) x1344) (= x328 (x1054 x1623)) (= (x1054 x688) x724) (= (x1330 x841) x458) (= (x870 (+ 160 x693)) x558) (= x1604 (>= 224 x458)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x841) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x841)) (and (<= 1 x841) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x841))) (= x634 (x870 (+ x693 32))) (= x201 (x1054 x950)) (= (x1054 x246) x1527) (= x1682 (x1054 x860)) (= x1257 (x1054 x558)) (= (x1323 x257 x932 x1244 x328 x1709) x612) (= (x1054 x430) x580) (= (x870 (+ x693 32)) x204) (= (x1054 x605) x1244) (= (x910 x257 x1707 x654) x280) (= x1546 (x1054 x1380)) (= (x870 (+ 32 x1565)) x422) (= x1503 (x1054 x693)) (= x1707 (x1054 x693)) (= x954 (x1054 x693)) (= x246 (x870 (+ x693 64))) (= x964 (x1054 x693)) (= (x625 (- x185 x841)) x955) (= x530 (x1064 x257 x249 x291 x201 x568 x724)) (= (x870 (+ x693 128)) x1742) (= x1290 (x870 (+ x1068 32))) (= x1068 (x870 (+ 32 x518))) (= (x870 (+ 96 x693)) x151) (= x950 (x870 (+ x693 64))) (= x1270 (x870 (+ 64 x693))) (= x185 (x870 (+ 192 x1565))) (= (x1054 x693) x348) (= x739 (x870 (+ x693 32))) (= (x870 (+ 64 x693)) x1623) (= x225 (x651 0)) (= (x625 (- x955 32)) x106) (= x249 (x1054 x693)) (= x148 (x1054 x634)) (= x518 (x870 (+ x422 32))) (= (x1054 x739) x654) (= (x1054 x409) x568) (= (x1054 x941) x477) (= (x870 (+ x693 96)) x1051) (= (x870 (+ 192 x693)) x430) (= (x1054 x1270) x936) (= x428 (x870 (+ x693 96))) (= (x1054 x707) x1106) (= x941 (x870 (+ x693 64))) (= (x870 (+ 128 x693)) x860) (= x688 (x870 (+ 128 x693))) (= x926 (x1054 x84)) (= (x333 x257 x1503) x1736) (= x409 (x870 (+ 96 x693))) (= x605 (x870 (+ 32 x693))) (= x686 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)) (= x1309 (x870 (+ 32 x1290))) (= (x1054 x1742) x134) (= x1565 (x870 (+ 32 x841))) (= x1543 (x1054 x1051)) (= x1201 (x1292 x257 x954 x926 x936)) (= x84 (x870 (+ x693 32))) (= (ite (not (= x62 0)) 1 0) x329) (= x291 (x1054 x204)) (= x554 (ite (= 0 x257) x225 (ite (>= 32 x257) x1736 (ite (<= x257 64) x280 (ite (>= 96 x257) x1201 (ite (<= x257 128) x612 (ite (<= x257 160) x530 (ite (>= 192 x257) x340 (ite (<= x257 224) x686 x1448))))))))) (= (x870 (+ x693 32)) x707) (= x343 (x1054 x151)) (= (x1054 x693) x932) (< x841 x185)) (and x1604 (=> (and (or (and (= (ite x139 1 0) x883) (not x139)) (and x139 (= x883 (ite (= x1074 x981) 1 0)))) (and (= (= x953 x193) x139) (= x857 (ite (= 0 x458) x496 (ite (>= 32 x458) x1303 (ite (>= 64 x458) x186 (ite (>= 96 x458) x1277 (ite (>= 128 x458) x1141 (ite (>= 160 x458) x405 (ite (<= x458 192) x608 (ite (<= x458 224) x1096 x1185))))))))) (= (x1330 x153) x1095) (= x1606 (x1330 x1740)) (= (x870 (+ 160 x1344)) x1139) (= (x1323 x458 x602 x1408 x1173 x1220) x1141) (= x1743 (x870 (+ x1344 96))) (= x756 (x870 (+ 96 x1344))) (= (x1330 x202) x1640) (= x290 (x1330 x1344)) (= x1303 (x333 x458 x593)) (= (x870 (+ 64 x1344)) x1483) (= x1501 (x1330 x1467)) (= x1149 (x1330 x223)) (= (x870 (+ x1344 64)) x69) (= (x870 (+ 32 x1344)) x153) (= (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420) x1096) (= x1765 (x1330 x1211)) (= (x1330 x1063) x219) (= x18 (x1330 x1344)) (= x827 (x1330 x1344)) (= (x651 0) x496) (= (x870 (+ x1344 192)) x650) (= (x870 (+ x1344 64)) x1467) (= (x1330 x1442) x1495) (= x1254 (x1330 x1483)) (= (x1330 x756) x1439) (= x655 (x870 (+ x1344 96))) (= x434 (x1330 x1743)) (= (x870 (+ x1344 32)) x89) (= x1073 (x1330 x89)) (= (x870 (+ x1344 64)) x923) (= (x870 (+ 64 x1344)) x250) (= x405 (x1064 x458 x827 x1073 x1501 x1439 x1606)) (= (x870 (+ 32 x1344)) x320) (= (x870 (+ x1344 160)) x1211) (= x186 (x910 x458 x18 x1495)) (= (x912 x458 x1797 x1149 x1254 x434 x219 x9) x608) (= x399 (x1330 x69)) (= x1797 (x1330 x1344)) (= (x1330 x1697) x1220) (= (x870 (+ x1344 128)) x1740) (= (x1330 x320) x1408) (= x593 (x1330 x1344)) (= x9 (x1330 x1139)) (= (x870 (+ 128 x1344)) x1063) (= (x870 (+ x1344 32)) x1670) (= (x870 (+ x1344 96)) x1697) (= x36 (x1330 x655)) (= x1277 (x1292 x458 x38 x143 x399)) (= (x1330 x250) x426) (= x1173 (x1330 x923)) (= x602 (x1330 x1344)) (= x202 (x870 (+ x1344 128))) (= x38 (x1330 x1344)) (= (x870 (+ 32 x1344)) x223) (= (x1330 x1670) x143) (= (x1330 x650) x420) (= (x870 (+ 32 x1344)) x1442))) x1216))) x1320)) x1538))
(assert (x304 x950))
(assert (= (x1599 (x1064 x515 x987 x843 x1502 x934 x524)) x934))
(assert (x304 x1239))
(assert (not (x517 (x1323 x257 x932 x1244 x328 x1709))))
(assert (not (x517 (x333 x257 x1503))))
(assert (x304 x1444))
(assert (x304 x322))
(assert (x304 x1298))
(assert (x517 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (x304 x294))
(assert (= x588 (x914 (x732 x885 x966 x350 x968 x278 x393 x1136 x588))))
(assert (=> (>= 10000 x1717) (= 0 (x831 x1717))))
(assert (x304 x1560))
(assert (x304 x184))
(assert (not (x517 (x910 64 x742 x1087))))
(assert (not (x517 (x910 x515 x359 x1658))))
(assert (x304 x664))
(assert (x304 x1412))
(assert (x304 x903))
(assert (x304 x1113))
(assert (= 0 (x831 22700451088272681866486206289545017091351513107057952373946396474207578882048)))
(assert (x304 x1661))
(assert (x304 x598))
(assert (x304 x1217))
(assert (not (x517 (x651 0))))
(assert (not (x517 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (x304 x1723))
(assert (x304 x1109))
(assert (=> (>= 10000 x1658) (= 0 (x831 x1658))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (x304 x1708))
(assert (= (and x139 x357) x1128))
(assert (= (and (not x149) x1304) x1322))
(assert (=> (>= 10000 x398) (= 0 (x831 x398))))
(assert (=> (>= 10000 x1790) (= (x831 x1790) 0)))
(assert (=> (>= 10000 x1513) (= (x831 x1513) 0)))
(assert (= (x1082 (x333 x515 x1059)) x1059))
(assert (x304 x1120))
(assert (x304 x580))
(assert (x304 x895))
(assert (x304 x1434))
(assert (= (x1599 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x1601))
(assert (x304 x1034))
(assert (x304 x153))
(assert (x304 x71))
(assert (x304 x472))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1292 x885 x1093 x1392 x268)))
(assert (= x825 (=> (and (or (and (and (= 1 x1772) (<= 64 x1242) (<= x1242 4294967295)) x1213) (and (not x1213) (= x1772 x638))) (and (= (x870 (+ 128 x44)) x601) (= (x80 x1019) x1789) (= (x870 (+ x1117 32)) x939) (= x1545 (x870 (+ x601 32))) (= (x80 x256) x594) (= (x625 (- x1342 95)) x646) (= x1170 (x80 x1428)) (= x129 (x935 115792089237316195423570985008687907853269984665640564039457584007913129639904 x596)) (or (<= x594 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x594)) (= (x625 (- x51 31)) x1689) (= x689 (x870 (+ x1545 x1789))) (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x704) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x957)) (and (< x957 x704) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x957) (<= x704 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x1789 18446744073709551615) (= x273 (x625 (- x938 x1675))) (= x704 (x870 (+ x1019 32))) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1170)) (= (x870 (+ x256 x718)) x746) (= (x870 (+ x256 x594)) x585) (>= 340282366920938463463374607431768211455 x868) (<= x1242 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646) (<= x718 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x718 x646))) (= (x625 (- x759 x1102)) x51) (or (>= x718 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x718)) (= x957 (x625 (- x759 x1789))) (or (and (= (<= x1689 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1170 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1170 x1689)) (and (> x1170 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1689 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1213 (> x638 0)) (= (x870 (+ 32 x44)) x1719) (= x1117 (x870 (+ x1719 32))) (or (and (< x1014 x646) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1014) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1014) (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x718 (x80 x256)) (= x868 (x80 x895)) (not (= x51 57896044618658097711785492504343953926634992332820282019728792003956564819999)) (= (x625 (- x759 x256)) x1342) (= x799 (x80 x585)) (<= 64 x1242) (= x44 (x870 (+ 4 x1675))) (= x938 (x870 (+ x1545 x129))) (= x1102 (x870 (+ x1014 x256))) (= (x870 (+ x1102 x1170)) x1019) (>= 1461501637330902918203684832716283019655932542975 x799) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1014) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1014)) (= (x870 (+ 64 x1102)) x1428) (= (+ x1789 31) x596) (or (and (< x594 x646) (= (<= x594 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x646 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x594 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x646))) (= (x870 (+ 32 x746)) x895) (= (x80 x256) x1014))) x206)))
(assert (x304 x1584))
(assert (> (x910 x458 x18 x1495) 10000))
(assert (= (x1005 (x1064 x1145 x1475 x1407 x873 x6 x1206)) x1145))
(assert (= (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633) (x831 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (x304 x321))
(assert (x304 x1204))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (x304 x194))
(assert (x304 x1257))
(assert (x304 x1568))
(assert (= (x831 (x910 64 x1553 x581)) (x910 64 x1553 x581)))
(assert (x304 x1219))
(assert (x304 x346))
(assert (x304 x134))
(assert (< 10000 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)))
(assert (x304 x1739))
(assert (= x1298 (x1284 (x1323 x1722 x816 x234 x1298 x786))))
(assert (= (x910 64 x662 3) (x831 (x910 64 x662 3))))
(assert (x304 x1690))
(assert (=> (>= 10000 x1731) (= 0 (x831 x1731))))
(assert (= x78 (and x461 (not x1278))))
(assert (= (x831 (x1064 x885 x1046 x1401 x1607 x1287 x609)) (x1064 x885 x1046 x1401 x1607 x1287 x609)))
(assert (x304 x271))
(assert (=> (<= x873 10000) (= 0 (x831 x873))))
(assert (not (x517 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (=> (<= x1132 10000) (= (x831 x1132) 0)))
(assert (x304 x313))
(assert (< 10000 (x1064 x1673 x1351 x222 x837 x1771 x764)))
(assert (= (x791 (x1323 x458 x602 x1408 x1173 x1220)) x1408))
(assert (x304 x1525))
(assert (x304 x1660))
(assert (= x260 (and (not x64) x1083)))
(assert (= (x1599 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) x1790))
(assert (=> (<= x1509 10000) (= (x831 x1509) 0)))
(assert (x304 x1046))
(assert (=> (<= x606 10000) (= (x831 x606) 0)))
(assert (x304 x806))
(assert (not (x517 (x333 x368 x538))))
(assert (x304 x1544))
(assert (x1022 x446))
(assert (x304 x500))
(assert (> (x912 x257 x348 x148 x1527 x343 x134 x1546) 10000))
(assert (not (x517 (x333 x458 x593))))
(assert (= x569 (x791 (x1064 x368 x1414 x569 x437 x677 x1755))))
(assert (> (x910 64 x742 x1087) 10000))
(assert (x304 x1574))
(assert (= (x14 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633)) x1299))
(assert (x304 x1572))
(assert (= (and (not x480) x455) x94))
(assert (x304 x1267))
(assert (x304 x310))
(assert (= (x831 (+ x121 1)) (x831 x121)))
(assert (x304 x499))
(assert (=> (>= 10000 x820) (= 0 (x831 x820))))
(assert (= x1669 (x473 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (x304 x724))
(assert (x304 x1019))
(assert (x304 x1641))
(assert (= x769 (or x983 x1751)))
(assert (x304 x1126))
(assert (x304 x244))
(assert (x1022 x33))
(assert (= (x1082 (x910 64 x1553 x1249)) x1553))
(assert (x304 x1344))
(assert (x304 x1732))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711)))
(assert (x304 x1102))
(assert (x304 x418))
(assert (x304 x67))
(assert (x304 x717))
(assert (x304 x746))
(assert (not (x517 (x1064 x1145 x1475 x1407 x873 x6 x1206))))
(assert (= x1304 (and (not x1114) x444)))
(assert (= x711 (x914 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (=> (<= x99 10000) (= 0 (x831 x99))))
(assert (not (x517 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (x304 x919))
(assert (x421 x1383 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1354))
(assert (x304 x843))
(assert (= x368 (x1005 (x1064 x368 x1414 x569 x437 x677 x1755))))
(assert (x304 x1244))
(assert (x304 x789))
(assert (x304 x1591))
(assert (= x1398 (x1082 (x333 x885 x1398))))
(assert (= (x831 3188545240) 0))
(assert (= x1396 (x1599 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (= (x914 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x900))
(assert (x304 x1731))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (= (x1599 (x912 x458 x1797 x1149 x1254 x434 x219 x9)) x434))
(assert (x304 x171))
(assert (= x1145 (x1005 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (x304 x1416))
(assert (= (x831 (+ 1 x719)) (x831 x719)))
(assert (x304 x620))
(assert (= x268 (x1284 (x1292 x885 x1093 x1392 x268))))
(assert (= (x831 (x1292 x257 x954 x926 x936)) (x1292 x257 x954 x926 x936)))
(assert (x304 x894))
(assert (= (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580) (x831 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580))))
(assert (< 10000 (x1323 x1673 x232 x1132 x812 x1243)))
(assert (= x368 (x1005 (x910 x368 x1628 x1056))))
(assert (x304 x921))
(assert (x304 x1695))
(assert (x1022 x792))
(assert (x304 x1478))
(assert (= (and x339 x1589) x1210))
(assert (= (x1082 (x333 x1722 x1089)) x1089))
(assert (x304 x1460))
(assert (=> (<= x515 10000) (= 0 (x831 x515))))
(assert (< 10000 (x910 64 x1600 3)))
(assert (x304 x200))
(assert (x517 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (= (x333 x1145 x1123) (x831 (x333 x1145 x1123))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x304 x749))
(assert (= (x473 (x912 x885 x535 x1554 x1188 x1036 x702 x877)) x702))
(assert (= (x1005 (x1064 x885 x1046 x1401 x1607 x1287 x609)) x885))
(assert (=> (<= x1283 10000) (= (x831 x1283) 0)))
(assert (not (x517 (x1064 x368 x1414 x569 x437 x677 x1755))))
(assert (=> (<= x702 10000) (= (x831 x702) 0)))
(assert (= x568 (x1599 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (x304 x298))
(assert (=> (<= x1490 10000) (= 0 (x831 x1490))))
(assert (= x249 (x1082 (x1064 x257 x249 x291 x201 x568 x724))))
(assert (x304 x1567))
(assert (x304 x710))
(assert (=> (>= 10000 x920) (= (x831 x920) 0)))
(assert (x304 x1488))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x1113 3)))
(assert (x304 x533))
(assert (x304 x485))
(assert (= (x1082 (x732 x257 x964 x1106 x477 x1543 x1682 x1257 x580)) x964))
(assert (=> (>= 10000 x1613) (= (x831 x1613) 0)))
(assert (x304 x343))
(assert (x517 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x304 x356))
(assert (x304 x235))
(assert (x304 x1620))
(assert (x304 x1511))
(assert (x421 x1383 32))
(assert (x304 x49))
(assert (= 0 (x831 4067465820)))
(assert (= x980 (or x1726 x1212 x1067 x1684 x1494)))
(assert (= (or (and x747 x1326) (and x221 x1636) (and x1650 x1247) (and x442 (not x1680))) x1655))
(assert (= x458 (x1005 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (= 0 (x831 85421856841599162343179548931066850070836787616102889281506983661126589349888)))
(assert (= (x1082 (x1292 x458 x38 x143 x399)) x38))
(assert (=> (>= 10000 x1137) (= 0 (x831 x1137))))
(assert (x304 x550))
(assert (= x1510 (x473 (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552))))
(assert (=> (<= x1343 10000) (= 0 (x831 x1343))))
(assert (x304 x573))
(assert (= (x831 (x910 64 443215666480553238610125355434898879895743000821 1)) (x910 64 443215666480553238610125355434898879895743000821 1)))
(assert (= x932 (x1082 (x1323 x257 x932 x1244 x328 x1709))))
(assert (= x1217 (x791 (x910 x1145 x1405 x1217))))
(assert (> (x910 64 81 x177) 10000))
(assert (= (and x744 x1465) x308))
(assert (= (and (not x146) x1506) x8))
(assert (x304 x515))
(assert (= (x1082 (x910 64 443215666480553238610125355434898879895743000821 1)) 443215666480553238610125355434898879895743000821))
(assert (= (x831 (x1064 x1145 x1475 x1407 x873 x6 x1206)) (x1064 x1145 x1475 x1407 x873 x6 x1206)))
(assert (x304 x1097))
(assert (= (x1082 (x910 x257 x1707 x654)) x1707))
(assert (=> (>= 10000 x966) (= (x831 x966) 0)))
(assert (= (x1599 (x732 x885 x966 x350 x968 x278 x393 x1136 x588)) x278))
(assert (= x1156 (and x1642 x904)))
(assert (x304 x1447))
(assert (= (x831 x672) (x831 (+ 1 x672))))
(assert (= 64 (x1005 (x910 64 x742 x1087))))
(assert (= (x831 (x910 x458 x18 x1495)) (x910 x458 x18 x1495)))
(assert (x304 x348))
(assert (not (x517 (x912 x1673 x1256 x1041 x626 x920 x1610 x714))))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639869) 0))
(assert (=> (<= x1527 10000) (= (x831 x1527) 0)))
(assert (= x1311 (x791 (x910 x1722 x1008 x1311))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639868) 0))
(assert (x304 x208))
(assert (x304 x1466))
(assert (x304 x877))
(assert (x304 x1231))
(assert (x304 x616))
(assert (x304 x687))
(assert (= (x791 (x1292 66 x1613 x679 x99)) x679))
(assert (= (and x1317 (not x951)) x279))
(assert (x304 x205))
(assert (x304 x688))
(assert (=> (<= x837 10000) (= 0 (x831 x837))))
(assert (not (x517 (x910 64 x392 4))))
(assert (x304 x1435))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x1600 3)))
(assert (x304 x295))
(assert (= (x791 (x910 64 x1113 4)) 4))
(assert (= (x831 x83) (x831 (+ 1 x83))))
(assert (< (x910 64 x1553 x581) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1106 10000) (= 0 (x831 x1106))))
(assert (= (x831 (x1323 x257 x932 x1244 x328 x1709)) (x1323 x257 x932 x1244 x328 x1709)))
(assert (x304 x1262))
(assert (=> (>= 10000 x1287) (= (x831 x1287) 0)))
(assert (x304 x563))
(assert (= (x831 (x1292 x1722 x1509 x1717 x1488)) (x1292 x1722 x1509 x1717 x1488)))
(assert (=> (>= 10000 x477) (= (x831 x477) 0)))
(assert (x304 x913))
(assert (= (=> (= x744 (= x883 0)) (and (=> (and (and (= x664 x185) (= x418 x1541)) (not x744)) x1251) (=> x744 x826))) x1216))
(assert (> (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633) 10000))
(assert (x304 x650))
(assert (= (x14 (x912 x368 x1561 x690 x398 x1790 x1517 x1341)) x1341))
(assert (x304 x647))
(assert (x304 x1610))
(assert (x304 x1406))
(assert (=> (<= x218 10000) (= (x831 x218) 0)))
(assert (x304 x572))
(assert (=> (>= 10000 x1384) (= 0 (x831 x1384))))
(assert (x304 x1484))
(assert (=> (>= 10000 x1455) (= 0 (x831 x1455))))
(assert (x304 x783))
(assert (=> (<= x393 10000) (= 0 (x831 x393))))
(assert (x304 x665))
(assert (x304 x15))
(assert (not (x517 (x910 x458 x18 x1495))))
(assert (< 10000 (x1064 x368 x1414 x569 x437 x677 x1755)))
(assert (=> (>= 10000 x1351) (= (x831 x1351) 0)))
(assert (x304 x611))
(assert (=> (<= x527 10000) (= (x831 x527) 0)))
(assert (= (x1082 (x333 x1145 x1123)) x1123))
(assert (x517 911662625))
(assert (= (x910 64 x1600 3) (x831 (x910 64 x1600 3))))
(assert (= (x1082 (x732 x368 x218 x652 x1238 x1601 x1131 x780 x900)) x218))
(assert (x304 x192))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639931)))
(assert (x304 x353))
(assert (x304 x1638))
(assert (x304 x691))
(assert (x304 x359))
(assert (= (x1082 (x910 x515 x359 x1658)) x359))
(assert (= x180 (x791 (x1323 x1145 x556 x180 x921 x1435))))
(assert (x304 x1758))
(assert (= (x831 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) (x912 x1673 x1256 x1041 x626 x920 x1610 x714)))
(assert (x304 x629))
(assert (x304 x1035))
(assert (x304 x299))
(assert (x304 x141))
(assert (x304 x1090))
(assert (x304 x846))
(assert (x304 x158))
(assert (= x515 (x1005 (x732 x515 x168 x1695 x1516 x1750 x1363 x809 x711))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x304 x1319))
(assert (x304 x873))
(assert (x304 x1095))
(assert (x304 x1468))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 64 x942 3)))
(assert (x304 x876))
(assert (x304 x659))
(assert (x304 x33))
(assert (x304 x839))
(assert (x304 x728))
(assert (x304 x275))
(assert (= x931 (or x93 x850)))
(assert (=> (<= x1601 10000) (= (x831 x1601) 0)))
(assert (x304 x176))
(assert (=> (<= x1553 10000) (= 0 (x831 x1553))))
(assert (x304 x814))
(assert (= (x831 22260506169142864168419965211860030380910469616735923253374116530085716557824) 0))
(assert (= x143 (x791 (x1292 x458 x38 x143 x399))))
(assert (x304 x88))
(assert (x304 x300))
(assert (x517 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (= x1726 (and (not x1687) x1335)))
(assert (x304 x1167))
(assert (=> (>= 10000 x1690) (= (x831 x1690) 0)))
(assert (x304 x1065))
(assert (= 0 (x831 115792089237316195423570985008687907853269984665640564039457584007913129639742)))
(assert (= (x1284 (x1292 x458 x38 x143 x399)) x399))
(assert (< (x1292 x1673 x326 x683 x1493) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1387))
(assert (= x733 (x1082 (x1323 x368 x733 x13 x27 x1469))))
(assert (< (x910 64 x1113 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x160))
(assert (= (x1082 (x910 x885 x1092 x346)) x1092))
(assert (x304 x737))
(assert (= (x1082 (x1292 x368 x1354 x485 x1343)) x1354))
(assert (not (x517 (x912 x1722 x844 x240 x1097 x1283 x1431 x789))))
(assert (= x458 (x1005 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420))))
(assert (=> (>= 10000 x626) (= 0 (x831 x626))))
(assert (> (x910 64 953417218992365150631206543442508943947348309705 0) 10000))
(assert (x304 x1750))
(assert (x517 3188545240))
(assert (x304 x1014))
(assert (=> (<= x458 10000) (= 0 (x831 x458))))
(assert (= (or x980 x136) x1506))
(assert (=> (<= x1448 10000) (= 0 (x831 x1448))))
(assert (x304 x1301))
(assert (x304 x874))
(assert (x304 x19))
(assert (= 3 (x791 (x910 64 x1600 3))))
(assert (x304 x438))
(assert (=> (<= x1008 10000) (= 0 (x831 x1008))))
(assert (= x328 (x1284 (x1323 x257 x932 x1244 x328 x1709))))
(assert (< (x732 x1145 x241 x916 x15 x879 x1510 x1137 x1552) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x831 57896044618658097711785492504343953926634992332820282019728792003956564819835)))
(assert (x304 x1619))
(assert (=> (<= x780 10000) (= (x831 x780) 0)))
(assert (x304 x794))
(assert (x1022 x1781))
(assert (< 10000 (x910 64 x392 4)))
(assert (= (x791 (x910 x368 x1628 x1056)) x1056))
(assert (=> (<= x1607 10000) (= (x831 x1607) 0)))
(assert (x304 x1547))
(assert (= x1149 (x791 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (=> (<= x143 10000) (= 0 (x831 x143))))
(assert (> (x333 x515 x1059) 10000))
(assert (= x1501 (x1284 (x1064 x458 x827 x1073 x1501 x1439 x1606))))
(assert (x304 x81))
(assert (x304 x642))
(assert (< 10000 (x1323 x1145 x556 x180 x921 x1435)))
(assert (x304 x1050))
(assert (x304 x566))
(assert (< (x333 x1145 x1123) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x912 x257 x348 x148 x1527 x343 x134 x1546) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x732 x458 x290 x1095 x426 x36 x1640 x1765 x420)))
(assert (=> (<= x278 10000) (= (x831 x278) 0)))
(assert (=> (>= 10000 x328) (= (x831 x328) 0)))
(assert (=> (>= 10000 x1732) (= (x831 x1732) 0)))
(assert (=> (<= x375 10000) (= 0 (x831 x375))))
(assert (x304 x227))
(assert (x304 x1127))
(assert (=> (<= x1502 10000) (= (x831 x1502) 0)))
(assert (=> (>= 10000 x593) (= (x831 x593) 0)))
(assert (= (x1005 (x910 64 x1077 4)) 64))
(assert (x304 x1691))
(assert (x304 x1769))
(assert (x304 x1622))
(assert (< 10000 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)))
(assert (=> (>= 10000 x1501) (= (x831 x1501) 0)))
(assert (x304 x652))
(assert (x517 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (x304 x1419))
(assert (< (x1064 x1722 x1710 x577 x606 x67 x527) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x1245))
(assert (x304 x1023))
(assert (= (and (not x1332) x147) x983))
(assert (x304 x605))
(assert (=> (<= x1439 10000) (= (x831 x1439) 0)))
(assert (x304 x836))
(assert (= x843 (x791 (x1064 x515 x987 x843 x1502 x934 x524))))
(assert (x304 x1405))
(assert (=> (<= x500 10000) (= (x831 x500) 0)))
(assert (x304 x129))
(assert (x304 x577))
(assert (x304 x399))
(assert (x304 x282))
(assert (= (x791 (x912 x1673 x1256 x1041 x626 x920 x1610 x714)) x1041))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1323 x1145 x556 x180 x921 x1435)))
(assert (and (= (x656 3 3) 9) (= (x656 9 3) 27) (= (x656 9 9) 81) (= 81 (x656 27 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x912 x1145 x993 x691 x1692 x1396 x211 x666)))
(assert (x304 x842))
(assert (= (x473 (x1064 x257 x249 x291 x201 x568 x724)) x724))
(assert (= x1626 (and x52 x1505)))
(assert (x304 x1699))
(assert (=> (>= 10000 x1747) (= (x831 x1747) 0)))
(assert (x304 x210))
(assert (= (x831 (x912 x257 x348 x148 x1527 x343 x134 x1546)) (x912 x257 x348 x148 x1527 x343 x134 x1546)))
(assert (=> (<= x283 10000) (= (x831 x283) 0)))
(assert (> (x910 x368 x1628 x1056) 10000))
(assert (not (x517 (x910 64 x942 3))))
(assert (= (x1292 x885 x1093 x1392 x268) (x831 (x1292 x885 x1093 x1392 x268))))
(assert (not x1537))
(assert (=> (<= x1092 10000) (= (x831 x1092) 0)))
(assert (=> (<= x222 10000) (= 0 (x831 x222))))
(assert (x304 x560))
(assert (x1314 x596))
(assert (x304 x426))
(assert (x304 x446))
(assert (x304 x89))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639715) 0))
(assert (x304 x1307))
(assert (x304 x1667))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1064 x515 x987 x843 x1502 x934 x524)))
(assert (x304 x623))
(assert (= x1414 (x1082 (x1064 x368 x1414 x569 x437 x677 x1755))))
(assert (x304 x1463))
(assert (x304 x283))
(assert (x304 x1240))
(assert (x1022 x1460))
(assert (= (or x1737 x1734) x845))
(assert (= (x1082 (x333 x1673 x1130)) x1130))
(assert (=> (<= x1007 10000) (= 0 (x831 x1007))))
(assert (x304 x918))
(assert (x304 x996))
(assert (x304 x1328))
(assert (x304 x1356))
(assert (x304 x1031))
(assert (x304 x768))
(assert (=> (<= x1401 10000) (= 0 (x831 x1401))))
(assert (x1022 x307))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x910 x885 x1092 x346)))
(assert (x236 x1383))
(assert (x304 x1158))
(assert (= x453 (and x166 x1210)))
(assert (x304 x1427))
(assert (x304 x702))
(assert (= (x791 (x910 x257 x1707 x654)) x654))
(assert (= (x831 (x910 64 81 x177)) (x910 64 81 x177)))
(assert (x304 x1425))
(assert (= 64 (x1005 (x910 64 443215666480553238610125355434898879895743000821 0))))
(assert (= x1113 (x1082 (x910 64 x1113 4))))
(assert (=> (>= 10000 x180) (= (x831 x180) 0)))
(assert (x304 x1665))
(assert (= x904 (or x1526 x215)))
(assert (x304 x1401))
(assert (x304 x1238))
(assert (x304 x885))
(assert (x304 x1270))
(assert (x304 x619))
(assert (x304 x1759))
(assert (x304 x1343))
(assert (> (x910 64 x1553 x581) 10000))
(assert (x304 x585))
(assert (= (x831 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (= (and x1263 (not x853)) x1293))
(assert (x304 x540))
(assert (x304 x1580))
(assert (= x219 (x473 (x912 x458 x1797 x1149 x1254 x434 x219 x9))))
(assert (= (x831 1099511627775) 0))
(assert (= x1771 (x1599 (x1064 x1673 x1351 x222 x837 x1771 x764))))
(assert (x304 x1360))
(assert (= (x831 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (= (x1082 (x910 64 x742 x1087)) x742))
(assert (x304 x413))
(assert (x304 x1565))
(assert (= x936 (x1284 (x1292 x257 x954 x926 x936))))
(assert (=> (>= 10000 x1488) (= 0 (x831 x1488))))
(assert (= (x791 (x1292 x257 x954 x926 x936)) x926))
(assert (x304 x689))
(assert (x304 x185))
(assert (= (x1082 (x333 x368 x538)) x538))
(assert (=> (<= x1073 10000) (= (x831 x1073) 0)))
(assert (=> (<= x1709 10000) (= 0 (x831 x1709))))
(assert (= (x831 (x1064 x368 x1414 x569 x437 x677 x1755)) (x1064 x368 x1414 x569 x437 x677 x1755)))
(assert (> (x912 x368 x1561 x690 x398 x1790 x1517 x1341) 10000))
(assert (x304 x1051))
(assert (x236 x1416))
(assert (=> (<= x818 10000) (= 0 (x831 x818))))
(assert (x304 x798))
(assert (x304 x584))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1064 x1145 x1475 x1407 x873 x6 x1206)))
(assert (not (x517 (x912 x368 x1561 x690 x398 x1790 x1517 x1341))))
(assert (< (x333 x368 x538) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x791 (x912 x1722 x844 x240 x1097 x1283 x1431 x789)) x240))
(assert (=> (>= 10000 x942) (= (x831 x942) 0)))
(assert (=> (<= x877 10000) (= 0 (x831 x877))))
(assert (= (x1599 (x732 x1722 x820 x196 x1035 x1453 x266 x1279 x1455)) x1453))
(assert (= (x912 x1145 x993 x691 x1692 x1396 x211 x666) (x831 (x912 x1145 x993 x691 x1692 x1396 x211 x666))))
(assert (x304 x1098))
(assert (= (and (not x52) x1505) x1753))
(assert (=> (>= 10000 x392) (= (x831 x392) 0)))
(assert (x304 x1674))
(assert (=> (>= 10000 x1797) (= (x831 x1797) 0)))
(assert (= (x831 22702217935337460250815789587045760009867340590954827992904518080408871501824) 0))
(assert (= (=> (= (ite x892 x862 x506) x552) x552) x1609))
(assert (x304 x1170))
(assert (= x1561 (x1082 (x912 x368 x1561 x690 x398 x1790 x1517 x1341))))
(assert (x304 x486))
(assert (= (x1005 (x1064 x458 x827 x1073 x1501 x1439 x1606)) x458))
(assert (x304 x1782))
(assert (x304 x955))
(assert (=> (>= 10000 x326) (= (x831 x326) 0)))
(assert (x304 x241))
(assert (= (x831 (+ 1 x861)) (x831 x861)))
(assert (= x1673 (x1005 (x732 x1673 x1575 x1796 x1490 x283 x1669 x1299 x633))))
(assert (x517 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (x304 x201))
(assert (> (x1064 x515 x987 x843 x1502 x934 x524) 10000))
(assert (x304 x1492))
(assert (= (x1005 (x1323 x1673 x232 x1132 x812 x1243)) x1673))
(check-sat)
(exit)
