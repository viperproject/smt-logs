(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1193 () Int)
(declare-fun x1547 () Int)
(declare-fun x1157 () Int)
(declare-fun x1413 () Int)
(declare-fun x5 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1540 () Int)
(declare-fun x257 () Int)
(declare-fun x689 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1325 () Int)
(declare-fun x338 () Int)
(declare-fun x1559 () Int)
(declare-fun x878 () Int)
(declare-fun x1281 () Int)
(declare-fun x1198 () Int)
(declare-fun x330 () Int)
(declare-fun x1058 () Int)
(declare-fun x352 () Int)
(declare-fun x1383 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1162 () Bool)
(declare-fun x1251 () Int)
(declare-fun x195 () Int)
(declare-fun x63 () Int)
(declare-fun x1470 () Int)
(declare-fun x1425 () Int)
(declare-fun x1447 () Int)
(declare-fun x1530 () Int)
(declare-fun x1291 () Int)
(declare-fun x822 () Int)
(declare-fun x1286 () Int)
(declare-fun x955 () Int)
(declare-fun x659 () Bool)
(declare-fun x545 () Int)
(declare-fun x1020 () Bool)
(declare-fun x899 () Int)
(declare-fun x25 () Bool)
(declare-fun x1277 () Int)
(declare-fun x650 () Int)
(declare-fun x814 () Bool)
(declare-fun x268 () Bool)
(declare-fun x1185 () Int)
(declare-fun x361 () Int)
(declare-fun x1119 (Int) Int)
(declare-fun x1467 () Int)
(declare-fun x638 () Int)
(declare-fun x842 () Int)
(declare-fun x802 () Int)
(declare-fun x841 () Int)
(declare-fun x483 () Int)
(declare-fun x1401 () Int)
(declare-fun x1374 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1304 () Int)
(declare-fun x993 () Int)
(declare-fun x1520 () Int)
(declare-fun x1352 () Int)
(declare-fun x1012 () Int)
(declare-fun x140 () Int)
(declare-fun x1106 () Int)
(declare-fun x197 () Int)
(declare-fun x526 () Bool)
(declare-fun x1408 () Int)
(declare-fun x921 () Int)
(declare-fun x846 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1491 () Bool)
(declare-fun x308 () Int)
(declare-fun x528 () Int)
(declare-fun x163 () Int)
(declare-fun x913 () Bool)
(declare-fun x1001 () Int)
(declare-fun x167 () Bool)
(declare-fun x322 () Int)
(declare-fun x134 () Int)
(declare-fun x135 () Int)
(declare-fun x800 () Int)
(declare-fun x1347 () Int)
(declare-fun x410 () Int)
(declare-fun x1086 () Int)
(declare-fun x13 () Int)
(declare-fun x1390 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1527 () Int)
(declare-fun x236 () Int)
(declare-fun x1097 () Bool)
(declare-fun x1030 () Int)
(declare-fun x557 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1356 () Int)
(declare-fun x458 () Int)
(declare-fun x948 () Int)
(declare-fun x974 () Bool)
(declare-fun x954 () Bool)
(declare-fun x753 () Int)
(declare-fun x165 () Int)
(declare-fun x1444 () Int)
(declare-fun x251 () Int)
(declare-fun x168 (Int) Int)
(declare-fun x57 () Int)
(declare-fun x1445 () Int)
(declare-fun x1269 () Bool)
(declare-fun x258 () Int)
(declare-fun x1177 () Int)
(declare-fun x130 () Int)
(declare-fun x1345 () Int)
(declare-fun x1509 () Bool)
(declare-fun x392 () Int)
(declare-fun x358 () Int)
(declare-fun x505 () Int)
(declare-fun x665 () Int)
(declare-fun x618 () Int)
(declare-fun x194 () Bool)
(declare-fun x686 () Bool)
(declare-fun x550 () Int)
(declare-fun x889 () Int)
(declare-fun x1243 () Bool)
(declare-fun x870 () Int)
(declare-fun x1402 () Int)
(declare-fun x388 () Int)
(declare-fun x947 () Bool)
(declare-fun x571 () Int)
(declare-fun x1190 () Int)
(declare-fun x1475 () Int)
(declare-fun x400 () Bool)
(declare-fun x780 () Int)
(declare-fun x55 () Int)
(declare-fun x920 () Int)
(declare-fun x1115 () Bool)
(declare-fun x1129 () Int)
(declare-fun x150 () Int)
(declare-fun x1564 () Int)
(declare-fun x1379 () Int)
(declare-fun x390 () Int)
(declare-fun x756 () Int)
(declare-fun x654 () Int)
(declare-fun x1339 () Int)
(declare-fun x845 () Int)
(declare-fun x17 () Bool)
(declare-fun x404 () Int)
(declare-fun x679 () Bool)
(declare-fun x941 () Int)
(declare-fun x586 () Int)
(declare-fun x1303 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1013 () Int)
(declare-fun x128 () Int)
(declare-fun x579 () Int)
(declare-fun x519 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1256 () Int)
(declare-fun x215 () Int)
(declare-fun x1206 () Int)
(declare-fun x876 () Int)
(declare-fun x701 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1074 () Int)
(declare-fun x905 () Int)
(declare-fun x614 () Int)
(declare-fun x1315 () Bool)
(declare-fun x646 () Int)
(declare-fun x1359 () Int)
(declare-fun x1192 () Int)
(declare-fun x588 () Int)
(declare-fun x334 () Int)
(declare-fun x651 () Int)
(declare-fun x200 () Int)
(declare-fun x211 () Int)
(declare-fun x1316 () Int)
(declare-fun x950 () Bool)
(declare-fun x1055 () Int)
(declare-fun x967 () Int)
(declare-fun x1011 () Int)
(declare-fun x1497 () Int)
(declare-fun x923 () Int)
(declare-fun x724 () Int)
(declare-fun x337 () Int)
(declare-fun x87 () Bool)
(declare-fun x1078 () Int)
(declare-fun x988 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1532 () Int)
(declare-fun x1272 () Bool)
(declare-fun x811 () Int)
(declare-fun x43 () Int)
(declare-fun x1505 () Int)
(declare-fun x343 () Int)
(declare-fun x1541 () Int)
(declare-fun x1500 () Int)
(declare-fun x529 () Bool)
(declare-fun x1042 () Int)
(declare-fun x968 () Int)
(declare-fun x473 () Int)
(declare-fun x440 () Int)
(declare-fun x569 () Int)
(declare-fun x1148 () Int)
(declare-fun x927 () Int)
(declare-fun x106 () Bool)
(declare-fun x26 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1208 () Int)
(declare-fun x246 () Int)
(declare-fun x843 () Int)
(declare-fun x1533 () Int)
(declare-fun x273 () Int)
(declare-fun x6 (Int Int) Int)
(declare-fun x1120 () Int)
(declare-fun x301 () Int)
(declare-fun x1410 () Int)
(declare-fun x595 () Int)
(declare-fun x1164 () Int)
(declare-fun x262 () Int)
(declare-fun x685 () Int)
(declare-fun x432 () Int)
(declare-fun x164 () Bool)
(declare-fun x666 () Int)
(declare-fun x1318 () Int)
(declare-fun x722 () Int)
(declare-fun x1211 () Int)
(declare-fun x209 () Int)
(declare-fun x1377 () Int)
(declare-fun x903 () Int)
(declare-fun x34 () Int)
(declare-fun x1457 () Bool)
(declare-fun x717 () Int)
(declare-fun x1140 () Int)
(declare-fun x606 () Int)
(declare-fun x1299 () Int)
(declare-fun x546 () Int)
(declare-fun x58 () Bool)
(declare-fun x695 () Int)
(declare-fun x433 () Int)
(declare-fun x1438 () Int)
(declare-fun x1009 (Int) Int)
(declare-fun x1487 () Bool)
(declare-fun x600 () Int)
(declare-fun x419 () Int)
(declare-fun x984 () Int)
(declare-fun x430 () Int)
(declare-fun x1 () Int)
(declare-fun x1122 () Bool)
(declare-fun x444 () Int)
(declare-fun x220 () Int)
(declare-fun x177 () Int)
(declare-fun x1255 () Int)
(declare-fun x721 () Int)
(declare-fun x508 () Int)
(declare-fun x813 () Int)
(declare-fun x854 () Bool)
(declare-fun x1172 () Int)
(declare-fun x207 () Int)
(declare-fun x983 () Int)
(declare-fun x1441 () Int)
(declare-fun x1393 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1237 () Bool)
(declare-fun x30 () Bool)
(declare-fun x543 () Int)
(declare-fun x227 () Int)
(declare-fun x1552 () Int)
(declare-fun x775 () Int)
(declare-fun x1319 () Bool)
(declare-fun x403 () Int)
(declare-fun x799 () Int)
(declare-fun x1484 () Int)
(declare-fun x421 () Int)
(declare-fun x609 () Int)
(declare-fun x1554 () Int)
(declare-fun x515 () Int)
(declare-fun x1176 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1246 () Int)
(declare-fun x931 () Int)
(declare-fun x1071 () Int)
(declare-fun x1545 () Int)
(declare-fun x1283 () Int)
(declare-fun x259 () Int)
(declare-fun x1381 () Int)
(declare-fun x1523 () Bool)
(declare-fun x133 () Int)
(declare-fun x1368 () Int)
(declare-fun x367 () Int)
(declare-fun x294 () Int)
(declare-fun x305 () Int)
(declare-fun x643 () Int)
(declare-fun x751 () Int)
(declare-fun x1028 () Int)
(declare-fun x216 () Int)
(declare-fun x1499 (Int) Int)
(declare-fun x1472 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1482 () Int)
(declare-fun x443 () Int)
(declare-fun x1152 () Bool)
(declare-fun x608 () Bool)
(declare-fun x462 () Int)
(declare-fun x585 () Bool)
(declare-fun x788 () Int)
(declare-fun x1081 () Int)
(declare-fun x653 () Int)
(declare-fun x1137 () Int)
(declare-fun x536 () Int)
(declare-fun x694 () Int)
(declare-fun x369 () Int)
(declare-fun x109 () Int)
(declare-fun x32 () Bool)
(declare-fun x498 () Int)
(declare-fun x1348 () Int)
(declare-fun x478 () Int)
(declare-fun x1138 () Int)
(declare-fun x284 () Int)
(declare-fun x250 () Int)
(declare-fun x1205 () Bool)
(declare-fun x944 () Int)
(declare-fun x126 () Int)
(declare-fun x981 () Int)
(declare-fun x908 () Int)
(declare-fun x1094 () Int)
(declare-fun x442 () Int)
(declare-fun x706 () Int)
(declare-fun x1305 () Bool)
(declare-fun x53 () Int)
(declare-fun x1461 () Int)
(declare-fun x460 () Int)
(declare-fun x1407 () Int)
(declare-fun x384 () Int)
(declare-fun x784 (Int) Int)
(declare-fun x221 () Int)
(declare-fun x1416 () Int)
(declare-fun x989 () Int)
(declare-fun x386 () Int)
(declare-fun x149 () Int)
(declare-fun x791 () Bool)
(declare-fun x888 () Bool)
(declare-fun x977 () Int)
(declare-fun x735 () Int)
(declare-fun x683 () Int)
(declare-fun x596 () Int)
(declare-fun x1088 () Int)
(declare-fun x720 () Int)
(declare-fun x65 (Int Int) Int)
(declare-fun x103 () Int)
(declare-fun x398 () Int)
(declare-fun x891 () Int)
(declare-fun x174 () Int)
(declare-fun x316 (Int Int Int Int) Int)
(declare-fun x1411 () Int)
(declare-fun x1428 () Int)
(declare-fun x1121 () Int)
(declare-fun x64 () Int)
(declare-fun x605 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1015 () Bool)
(declare-fun x1139 () Int)
(declare-fun x1553 (Int Int Int Int Int Int) Int)
(declare-fun x1155 () Int)
(declare-fun x92 () Int)
(declare-fun x1455 () Int)
(declare-fun x357 () Int)
(declare-fun x412 () Int)
(declare-fun x1322 () Int)
(declare-fun x77 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1085 () Int)
(declare-fun x1324 () Int)
(declare-fun x1189 () Int)
(declare-fun x290 () Int)
(declare-fun x408 () Int)
(declare-fun x313 () Int)
(declare-fun x420 () Int)
(declare-fun x1518 () Int)
(declare-fun x1151 () Int)
(declare-fun x1181 () Int)
(declare-fun x14 (Int) Int)
(declare-fun x310 () Int)
(declare-fun x203 () Int)
(declare-fun x1312 () Int)
(declare-fun x1511 () Int)
(declare-fun x970 () Int)
(declare-fun x299 () Int)
(declare-fun x1384 () Int)
(declare-fun x1430 () Int)
(declare-fun x429 (Int Int) Int)
(declare-fun x1443 () Int)
(declare-fun x1278 () Int)
(declare-fun x707 () Bool)
(declare-fun x932 () Bool)
(declare-fun x1184 () Int)
(declare-fun x797 () Int)
(declare-fun x18 () Bool)
(declare-fun x829 () Int)
(declare-fun x1165 () Int)
(declare-fun x1423 () Int)
(declare-fun x1183 () Int)
(declare-fun x736 () Int)
(declare-fun x1210 () Int)
(declare-fun x325 () Int)
(declare-fun x152 () Int)
(declare-fun x975 () Int)
(declare-fun x1275 (Int) Bool)
(declare-fun x675 () Int)
(declare-fun x1187 () Int)
(declare-fun x1456 () Int)
(declare-fun x205 () Int)
(declare-fun x978 () Int)
(declare-fun x603 () Int)
(declare-fun x953 () Int)
(declare-fun x692 () Int)
(declare-fun x1228 () Int)
(declare-fun x342 () Bool)
(declare-fun x1292 () Int)
(declare-fun x708 () Int)
(declare-fun x1336 () Bool)
(declare-fun x542 () Int)
(declare-fun x1265 () Int)
(declare-fun x166 () Int)
(declare-fun x532 () Bool)
(declare-fun x840 () Int)
(declare-fun x1543 () Int)
(declare-fun x383 () Int)
(declare-fun x1113 () Int)
(declare-fun x1388 () Int)
(declare-fun x29 () Int)
(declare-fun x1492 () Int)
(declare-fun x391 () Int)
(declare-fun x1297 () Int)
(declare-fun x826 () Int)
(declare-fun x990 () Int)
(declare-fun x688 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1076 () Int)
(declare-fun x1209 () Int)
(declare-fun x1341 () Bool)
(declare-fun x1175 () Int)
(declare-fun x441 () Bool)
(declare-fun x467 () Int)
(declare-fun x1034 () Int)
(declare-fun x693 () Bool)
(declare-fun x127 () Int)
(declare-fun x568 () Bool)
(declare-fun x871 () Int)
(declare-fun x513 () Int)
(declare-fun x1365 () Int)
(declare-fun x971 () Int)
(declare-fun x219 () Int)
(declare-fun x1080 () Int)
(declare-fun x1109 () Int)
(declare-fun x336 () Int)
(declare-fun x1114 () Int)
(declare-fun x1503 () Int)
(declare-fun x591 () Int)
(declare-fun x1301 () Int)
(declare-fun x980 () Bool)
(declare-fun x535 () Bool)
(declare-fun x298 () Int)
(declare-fun x1072 () Int)
(declare-fun x1474 () Int)
(declare-fun x1202 () Int)
(declare-fun x1528 () Bool)
(declare-fun x785 () Int)
(declare-fun x1466 () Int)
(declare-fun x593 () Bool)
(declare-fun x35 () Bool)
(declare-fun x11 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1294 () Int)
(declare-fun x321 () Int)
(declare-fun x446 () Int)
(declare-fun x818 () Int)
(declare-fun x382 () Int)
(declare-fun x820 () Int)
(declare-fun x1539 () Int)
(declare-fun x906 () Int)
(declare-fun x869 () Int)
(declare-fun x1025 () Int)
(declare-fun x1549 () Int)
(declare-fun x110 () Int)
(declare-fun x858 () Int)
(declare-fun x114 () Int)
(declare-fun x1495 () Int)
(declare-fun x770 () Int)
(declare-fun x629 () Int)
(declare-fun x1092 () Bool)
(declare-fun x402 () Int)
(declare-fun x911 () Int)
(declare-fun x96 () Int)
(declare-fun x632 () Int)
(declare-fun x652 () Bool)
(declare-fun x340 () Int)
(declare-fun x1163 () Int)
(declare-fun x766 () Int)
(declare-fun x118 () Int)
(declare-fun x805 () Int)
(declare-fun x607 () Int)
(declare-fun x138 () Int)
(declare-fun x470 () Int)
(declare-fun x161 () Int)
(declare-fun x725 () Int)
(declare-fun x1050 () Int)
(declare-fun x821 () Int)
(declare-fun x1203 () Int)
(declare-fun x887 () Int)
(declare-fun x159 () Int)
(declare-fun x734 () Int)
(declare-fun x916 () Int)
(declare-fun x628 () Int)
(declare-fun x548 () Bool)
(declare-fun x951 () Int)
(declare-fun x146 () Int)
(declare-fun x1126 () Int)
(declare-fun x344 () Int)
(declare-fun x1486 () Int)
(declare-fun x348 () Int)
(declare-fun x645 () Int)
(declare-fun x648 () Int)
(declare-fun x865 () Int)
(declare-fun x655 () Int)
(declare-fun x704 () Int)
(declare-fun x668 () Bool)
(declare-fun x300 () Bool)
(declare-fun x318 () Int)
(declare-fun x435 () Int)
(declare-fun x182 () Int)
(declare-fun x1353 () Int)
(declare-fun x266 () Bool)
(declare-fun x365 () Bool)
(declare-fun x491 () Int)
(declare-fun x1000 () Int)
(declare-fun x601 () Bool)
(declare-fun x1538 (Int) Int)
(declare-fun x52 () Int)
(declare-fun x21 () Int)
(declare-fun x1295 () Int)
(declare-fun x469 () Int)
(declare-fun x1006 () Bool)
(declare-fun x292 () Int)
(declare-fun x769 () Int)
(declare-fun x635 (Int) Int)
(declare-fun x1331 () Int)
(declare-fun x1188 () Int)
(declare-fun x824 () Int)
(declare-fun x512 () Int)
(declare-fun x1045 () Bool)
(declare-fun x670 () Int)
(declare-fun x1232 () Bool)
(declare-fun x1270 () Int)
(declare-fun x804 () Int)
(declare-fun x1412 () Int)
(declare-fun x1259 () Int)
(declare-fun x806 () Int)
(declare-fun x929 () Int)
(declare-fun x247 (Int) Int)
(declare-fun x922 () Bool)
(declare-fun x1546 () Int)
(declare-fun x464 () Int)
(declare-fun x198 () Int)
(declare-fun x1102 () Int)
(declare-fun x1519 () Int)
(declare-fun x810 () Bool)
(declare-fun x1166 () Int)
(declare-fun x697 () Bool)
(declare-fun x631 () Bool)
(declare-fun x1464 () Int)
(declare-fun x991 () Int)
(declare-fun x1362 () Int)
(declare-fun x66 () Bool)
(declare-fun x873 () Int)
(declare-fun x1340 () Bool)
(declare-fun x620 () Bool)
(declare-fun x24 () Int)
(declare-fun x761 () Int)
(declare-fun x104 () Int)
(declare-fun x926 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x934 () Int)
(declare-fun x713 () Int)
(declare-fun x1440 () Int)
(declare-fun x47 () Int)
(declare-fun x1060 () Int)
(declare-fun x621 () Int)
(declare-fun x1501 () Int)
(declare-fun x1241 () Int)
(declare-fun x996 () Int)
(declare-fun x1557 () Int)
(declare-fun x730 () Int)
(declare-fun x1112 () Int)
(declare-fun x915 () Int)
(declare-fun x324 () Int)
(declare-fun x669 () Int)
(declare-fun x39 () Int)
(declare-fun x895 () Int)
(declare-fun x690 () Int)
(declare-fun x952 () Int)
(declare-fun x680 () Int)
(declare-fun x1398 () Bool)
(declare-fun x425 () Int)
(declare-fun x1096 () Int)
(declare-fun x230 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x45 () Int)
(declare-fun x450 () Int)
(declare-fun x764 () Int)
(declare-fun x914 () Int)
(declare-fun x1197 () Int)
(declare-fun x559 () Bool)
(declare-fun x856 () Bool)
(declare-fun x716 () Int)
(declare-fun x422 () Bool)
(declare-fun x242 () Int)
(declare-fun x1419 () Int)
(declare-fun x1293 () Int)
(declare-fun x700 () Int)
(declare-fun x1285 () Int)
(declare-fun x1007 () Int)
(declare-fun x676 () Int)
(declare-fun x1026 () Int)
(declare-fun x774 () Int)
(declare-fun x323 () Int)
(declare-fun x832 () Int)
(declare-fun x1335 () Int)
(declare-fun x1298 () Int)
(declare-fun x394 () Int)
(declare-fun x395 () Int)
(declare-fun x786 () Int)
(declare-fun x1239 () Int)
(declare-fun x116 (Int Int Int Int Int Int Int) Int)
(declare-fun x957 () Int)
(declare-fun x33 () Int)
(declare-fun x397 () Int)
(declare-fun x124 () Int)
(declare-fun x794 () Bool)
(declare-fun x539 () Bool)
(declare-fun x758 () Int)
(declare-fun x51 () Int)
(declare-fun x836 () Bool)
(declare-fun x280 () Bool)
(declare-fun x423 () Int)
(declare-fun x81 () Int)
(declare-fun x755 () Int)
(declare-fun x240 () Int)
(declare-fun x445 () Int)
(declare-fun x187 () Int)
(declare-fun x407 () Int)
(declare-fun x1116 () Bool)
(declare-fun x91 () Int)
(declare-fun x1057 () Int)
(declare-fun x781 () Int)
(declare-fun x681 () Int)
(declare-fun x897 () Int)
(declare-fun x75 () Int)
(declare-fun x156 () Int)
(declare-fun x453 () Int)
(declare-fun x40 () Int)
(declare-fun x263 () Int)
(declare-fun x137 () Int)
(declare-fun x210 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1338 () Int)
(declare-fun x696 () Int)
(declare-fun x1130 () Int)
(declare-fun x1218 () Int)
(declare-fun x485 () Int)
(declare-fun x1213 () Int)
(declare-fun x132 () Bool)
(declare-fun x1264 () Int)
(declare-fun x979 () Int)
(declare-fun x1436 () Int)
(declare-fun x1504 () Int)
(declare-fun x793 () Int)
(declare-fun x517 () Int)
(declare-fun x1513 () Int)
(declare-fun x454 () Int)
(declare-fun x376 (Int Int Int Int Int) Int)
(declare-fun x50 () Int)
(declare-fun x567 () Int)
(declare-fun x98 (Int) Int)
(declare-fun x1212 () Int)
(declare-fun x1417 () Int)
(declare-fun x938 () Int)
(declare-fun x1424 () Int)
(declare-fun x838 () Int)
(declare-fun x212 () Int)
(declare-fun x782 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1199 () Bool)
(declare-fun x682 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x610 () Int)
(declare-fun x1204 () Int)
(declare-fun x1496 () Int)
(declare-fun x415 () Bool)
(declare-fun x573 () Int)
(declare-fun x1307 () Int)
(declare-fun x1488 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1098 () Int)
(declare-fun x131 () Int)
(declare-fun x153 () Int)
(declare-fun x750 () Int)
(declare-fun x592 () Bool)
(declare-fun x1389 () Int)
(declare-fun x1141 () Int)
(declare-fun x1405 () Int)
(declare-fun x819 () Bool)
(declare-fun x1477 () Int)
(declare-fun x162 () Int)
(declare-fun x919 () Int)
(declare-fun x409 () Int)
(declare-fun x370 () Int)
(declare-fun x1154 () Int)
(declare-fun x267 () Int)
(declare-fun x1395 () Int)
(declare-fun x787 () Int)
(declare-fun x1231 () Int)
(declare-fun x303 () Int)
(declare-fun x1536 () Int)
(declare-fun x1053 () Int)
(declare-fun x1068 () Int)
(declare-fun x46 () Int)
(declare-fun x217 () Int)
(declare-fun x355 () Int)
(declare-fun x1044 () Int)
(declare-fun x1266 () Int)
(declare-fun x1230 () Int)
(declare-fun x752 () Bool)
(declare-fun x69 () Int)
(declare-fun x286 () Bool)
(declare-fun x206 () Int)
(declare-fun x1433 () Int)
(declare-fun x218 () Int)
(declare-fun x976 () Int)
(declare-fun x540 () Int)
(declare-fun x176 () Int)
(declare-fun x1453 () Int)
(declare-fun x229 () Bool)
(declare-fun x1242 () Int)
(declare-fun x833 () Int)
(declare-fun x1215 () Int)
(declare-fun x1427 () Bool)
(declare-fun x178 () Int)
(declare-fun x940 () Int)
(declare-fun x36 () Int)
(declare-fun x1512 () Int)
(declare-fun x613 () Int)
(declare-fun x602 () Int)
(declare-fun x426 () Int)
(declare-fun x1022 () Int)
(declare-fun x417 (Int) Int)
(declare-fun x1343 () Int)
(declare-fun x511 () Int)
(declare-fun x1386 () Int)
(declare-fun x1016 () Int)
(declare-fun x1178 () Bool)
(declare-fun x743 () Int)
(declare-fun x107 () Int)
(declare-fun x1350 () Int)
(declare-fun x371 () Int)
(declare-fun x1515 () Int)
(declare-fun x615 () Int)
(declare-fun x413 () Int)
(declare-fun x703 () Int)
(declare-fun x671 () Bool)
(declare-fun x479 (Int) Int)
(declare-fun x468 () Int)
(declare-fun x912 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1156 () Int)
(declare-fun x99 (Int) Int)
(declare-fun x910 () Int)
(declare-fun x1107 () Int)
(declare-fun x965 () Int)
(declare-fun x634 () Int)
(declare-fun x496 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1468 () Int)
(declare-fun x1323 () Bool)
(declare-fun x287 () Int)
(declare-fun x186 () Int)
(declare-fun x364 () Int)
(declare-fun x1245 () Int)
(declare-fun x136 () Bool)
(declare-fun x8 () Int)
(declare-fun x1268 () Int)
(declare-fun x1061 () Int)
(declare-fun x436 () Int)
(declare-fun x564 () Int)
(declare-fun x1029 () Int)
(declare-fun x1506 () Int)
(declare-fun x427 (Int Int) Int)
(declare-fun x295 () Int)
(declare-fun x108 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1465 () Int)
(declare-fun x524 () Int)
(declare-fun x228 () Int)
(declare-fun x363 () Int)
(declare-fun x175 () Bool)
(declare-fun x1182 () Int)
(declare-fun x95 () Bool)
(declare-fun x880 () Int)
(declare-fun x1534 () Int)
(declare-fun x1253 () Int)
(declare-fun x171 () Int)
(declare-fun x38 () Int)
(declare-fun x226 () Int)
(declare-fun x727 () Int)
(declare-fun x998 () Int)
(declare-fun x155 () Bool)
(declare-fun x552 () Int)
(declare-fun x598 () Bool)
(declare-fun x3 () Int)
(declare-fun x783 () Bool)
(declare-fun x1168 () Int)
(declare-fun x969 () Bool)
(declare-fun x1483 () Int)
(declare-fun x599 () Int)
(declare-fun x1134 () Int)
(declare-fun x349 () Int)
(declare-fun x893 () Int)
(declare-fun x1551 () Int)
(declare-fun x1296 () Int)
(declare-fun x719 () Int)
(declare-fun x964 () Bool)
(declare-fun x1361 () Int)
(declare-fun x169 () Int)
(declare-fun x544 () Int)
(declare-fun x851 () Int)
(declare-fun x1529 () Int)
(declare-fun x715 () Int)
(declare-fun x1047 () Int)
(declare-fun x20 () Int)
(declare-fun x80 () Int)
(declare-fun x1544 () Int)
(declare-fun x248 (Int) Int)
(declare-fun x78 () Int)
(declare-fun x642 () Int)
(declare-fun x516 () Bool)
(declare-fun x1161 () Int)
(declare-fun x437 () Int)
(declare-fun x1066 () Int)
(declare-fun x699 () Int)
(declare-fun x776 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1124 () Int)
(declare-fun x898 () Int)
(declare-fun x959 () Int)
(declare-fun x471 () Int)
(declare-fun x497 () Int)
(declare-fun x1334 (Int) Int)
(declare-fun x1170 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x225 () Int)
(declare-fun x907 () Int)
(declare-fun x354 () Int)
(declare-fun x762 () Int)
(declare-fun x235 () Int)
(declare-fun x145 () Int)
(declare-fun x88 () Int)
(declare-fun x1485 () Int)
(declare-fun x925 () Int)
(declare-fun x1236 () Int)
(declare-fun x662 () Bool)
(declare-fun x864 () Int)
(declare-fun x1090 () Int)
(declare-fun x482 () Int)
(declare-fun x578 () Int)
(declare-fun x185 () Int)
(declare-fun x381 () Int)
(declare-fun x275 () Int)
(declare-fun x866 () Bool)
(declare-fun x396 () Int)
(declare-fun x160 () Int)
(declare-fun x1250 () Int)
(declare-fun x656 () Int)
(declare-fun x1008 () Int)
(declare-fun x1555 () Int)
(declare-fun x723 () Int)
(declare-fun x331 () Int)
(declare-fun x1302 () Int)
(declare-fun x320 () Bool)
(declare-fun x125 () Int)
(declare-fun x1111 (Int) Int)
(declare-fun x282 () Int)
(declare-fun x792 () Int)
(declare-fun x1095 () Int)
(declare-fun x973 () Int)
(declare-fun x1432 () Bool)
(declare-fun x909 () Int)
(declare-fun x945 (Int) Int)
(declare-fun x276 () Int)
(declare-fun x872 () Int)
(declare-fun x490 () Int)
(declare-fun x1032 () Int)
(declare-fun x181 () Bool)
(declare-fun x647 () Bool)
(declare-fun x448 () Int)
(declare-fun x807 () Bool)
(declare-fun x882 () Int)
(declare-fun x1274 () Int)
(declare-fun x256 () Int)
(declare-fun x1516 () Int)
(declare-fun x798 () Int)
(declare-fun x863 () Int)
(declare-fun x476 () Int)
(declare-fun x122 () Int)
(declare-fun x192 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1358 () Int)
(declare-fun x84 () Int)
(declare-fun x327 () Int)
(declare-fun x1069 () Int)
(declare-fun x189 () Int)
(declare-fun x1158 () Int)
(declare-fun x667 () Int)
(declare-fun x664 () Int)
(declare-fun x939 () Int)
(declare-fun x341 (Int) Int)
(declare-fun x1387 () Int)
(declare-fun x1260 () Bool)
(declare-fun x594 () Int)
(declare-fun x439 () Int)
(declare-fun x1036 () Int)
(declare-fun x589 () Int)
(declare-fun x574 () Int)
(declare-fun x244 () Int)
(declare-fun x1054 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1435 () Int)
(declare-fun x158 () Int)
(declare-fun x830 () Int)
(declare-fun x902 () Int)
(declare-fun x1434 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1084 () Int)
(declare-fun x208 () Int)
(declare-fun x1143 () Int)
(declare-fun x553 () Int)
(declare-fun x994 (Int) Int)
(declare-fun x113 () Int)
(declare-fun x466 () Int)
(declare-fun x204 () Int)
(declare-fun x405 () Int)
(declare-fun x726 () Bool)
(declare-fun x626 () Int)
(declare-fun x1371 () Int)
(declare-fun x1320 () Int)
(declare-fun x339 () Int)
(declare-fun x406 () Int)
(declare-fun x852 () Int)
(declare-fun x1142 () Int)
(declare-fun x507 () Int)
(declare-fun x494 () Int)
(declare-fun x173 () Int)
(declare-fun x252 () Int)
(declare-fun x265 () Bool)
(declare-fun x1364 () Int)
(declare-fun x170 (Int) Int)
(declare-fun x815 () Int)
(declare-fun x1502 () Int)
(declare-fun x1310 () Int)
(declare-fun x1101 () Int)
(declare-fun x855 () Int)
(declare-fun x1525 () Int)
(declare-fun x112 () Bool)
(declare-fun x329 () Int)
(declare-fun x867 () Int)
(declare-fun x1454 () Int)
(declare-fun x731 () Bool)
(declare-fun x501 () Int)
(declare-fun x372 () Int)
(declare-fun x1196 () Int)
(declare-fun x1191 () Bool)
(declare-fun x1448 () Int)
(declare-fun x418 () Bool)
(declare-fun x1311 () Int)
(declare-fun x835 () Int)
(declare-fun x1282 () Int)
(declare-fun x1459 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1146 () Int)
(declare-fun x748 () Int)
(declare-fun x366 () Int)
(declare-fun x184 () Int)
(declare-fun x1144 () Int)
(declare-fun x438 () Int)
(declare-fun x541 () Int)
(declare-fun x142 () Int)
(declare-fun x506 () Int)
(declare-fun x1473 () Bool)
(declare-fun x389 () Int)
(declare-fun x639 () Int)
(declare-fun x9 () Int)
(declare-fun x44 () Int)
(declare-fun x624 () Int)
(declare-fun x1235 () Int)
(declare-fun x604 () Int)
(declare-fun x581 () Int)
(declare-fun x315 () Bool)
(declare-fun x749 () Int)
(declare-fun x1452 () Int)
(declare-fun x1287 () Int)
(declare-fun x1040 () Int)
(declare-fun x1280 () Int)
(declare-fun x935 () Int)
(declare-fun x746 () Int)
(declare-fun x982 () Int)
(declare-fun x16 () Int)
(declare-fun x886 () Int)
(declare-fun x1024 () Int)
(declare-fun x960 () Int)
(declare-fun x1279 () Int)
(declare-fun x674 () Int)
(declare-fun x238 () Int)
(declare-fun x732 () Int)
(declare-fun x356 () Bool)
(declare-fun x1023 () Int)
(declare-fun x48 () Int)
(declare-fun x223 () Int)
(declare-fun x789 () Bool)
(declare-fun x661 () Int)
(declare-fun x677 () Int)
(declare-fun x740 () Int)
(declare-fun x673 () Int)
(declare-fun x487 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1049 (Int Int) Int)
(declare-fun x1337 () Int)
(declare-fun x757 () Int)
(declare-fun x522 () Int)
(declare-fun x484 () Int)
(declare-fun x504 () Bool)
(declare-fun x193 (Int Int) Int)
(declare-fun x1562 () Int)
(declare-fun x705 () Int)
(declare-fun x456 () Int)
(declare-fun x663 () Bool)
(declare-fun x1131 () Int)
(declare-fun x966 () Int)
(declare-fun x495 () Int)
(declare-fun x537 () Int)
(declare-fun x1531 () Int)
(declare-fun x745 () Int)
(declare-fun x823 () Int)
(declare-fun x1046 () Int)
(declare-fun x1089 () Int)
(declare-fun x1437 () Int)
(declare-fun x326 () Bool)
(declare-fun x562 () Int)
(declare-fun x1079 () Bool)
(declare-fun x27 () Int)
(declare-fun x747 () Int)
(declare-fun x89 () Int)
(declare-fun x1507 () Int)
(declare-fun x857 () Int)
(declare-fun x102 () Int)
(declare-fun x79 () Int)
(declare-fun x1367 () Int)
(declare-fun x625 () Bool)
(declare-fun x566 () Int)
(declare-fun x521 () Int)
(declare-fun x576 () Int)
(declare-fun x827 () Int)
(declare-fun x538 () Bool)
(declare-fun x431 () Int)
(declare-fun x778 () Int)
(declare-fun x917 () Int)
(declare-fun x1257 () Int)
(declare-fun x712 () Bool)
(declare-fun x767 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1309 () Int)
(declare-fun x101 () Int)
(declare-fun x37 () Int)
(declare-fun x1514 () Int)
(declare-fun x457 () Int)
(declare-fun x1526 () Int)
(declare-fun x347 () Int)
(declare-fun x534 () Int)
(declare-fun x23 () Int)
(declare-fun x861 () Int)
(declare-fun x1233 () Int)
(declare-fun x85 () Int)
(declare-fun x1328 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1247 () Int)
(declare-fun x74 () Int)
(declare-fun x434 () Int)
(declare-fun x918 () Int)
(declare-fun x1490 () Int)
(declare-fun x68 () Int)
(declare-fun x1258 () Int)
(declare-fun x1451 () Int)
(declare-fun x7 () Bool)
(declare-fun x307 () Int)
(declare-fun x241 () Int)
(declare-fun x1542 () Int)
(declare-fun x224 () Int)
(declare-fun x563 () Int)
(declare-fun x1355 () Bool)
(declare-fun x853 () Bool)
(declare-fun x42 () Int)
(declare-fun x1052 () Bool)
(declare-fun x894 () Int)
(declare-fun x15 () Int)
(declare-fun x378 () Int)
(declare-fun x272 () Int)
(declare-fun x73 () Int)
(declare-fun x202 () Int)
(declare-fun x611 () Int)
(declare-fun x90 () Bool)
(declare-fun x572 () Int)
(declare-fun x285 () Bool)
(declare-fun x335 () Int)
(declare-fun x890 () Int)
(declare-fun x987 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1449 () Int)
(declare-fun x289 () Int)
(declare-fun x447 () Int)
(declare-fun x958 () Int)
(declare-fun x649 () Int)
(declare-fun x387 () Int)
(declare-fun x1342 () Int)
(declare-fun x933 () Bool)
(declare-fun x570 () Bool)
(declare-fun x1005 () Int)
(declare-fun x144 () Int)
(declare-fun x1195 () Int)
(declare-fun x1262 () Int)
(declare-fun x1450 () Int)
(declare-fun x1392 () Int)
(declare-fun x154 () Int)
(declare-fun x1332 () Int)
(declare-fun x139 () Int)
(declare-fun x530 () Int)
(declare-fun x1462 () Int)
(declare-fun x1351 () Int)
(declare-fun x1018 () Bool)
(declare-fun x801 (Int) Int)
(declare-fun x1375 (Int) Int)
(declare-fun x1064 () Int)
(declare-fun x489 () Int)
(declare-fun x1463 () Int)
(declare-fun x480 () Int)
(declare-fun x1276 () Int)
(declare-fun x763 () Int)
(declare-fun x253 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1248 () Int)
(declare-fun x518 () Int)
(declare-fun x1476 () Bool)
(declare-fun x936 () Int)
(declare-fun x481 () Int)
(declare-fun x924 () Int)
(declare-fun x561 () Int)
(declare-fun x678 () Int)
(declare-fun x1535 () Int)
(declare-fun x1561 () Int)
(declare-fun x180 () Bool)
(declare-fun x281 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1103 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1019 () Int)
(declare-fun x617 () Bool)
(declare-fun x995 () Int)
(declare-fun x1289 () Int)
(declare-fun x619 () Int)
(declare-fun x278 () Int)
(declare-fun x1326 () Int)
(declare-fun x809 () Bool)
(declare-fun x946 () Int)
(declare-fun x560 () Int)
(declare-fun x1179 () Int)
(declare-fun x885 () Bool)
(declare-fun x362 () Int)
(declare-fun x94 () Int)
(declare-fun x630 () Int)
(declare-fun x1229 () Int)
(declare-fun x1067 () Int)
(declare-fun x997 () Int)
(declare-fun x254 () Int)
(declare-fun x1039 () Int)
(declare-fun x859 () Bool)
(declare-fun x1082 () Int)
(declare-fun x19 () Int)
(declare-fun x83 () Int)
(declare-fun x1369 () Bool)
(declare-fun x373 () Int)
(declare-fun x385 () Bool)
(declare-fun x709 () Bool)
(declare-fun x860 () Int)
(declare-fun x56 () Int)
(declare-fun x317 () Int)
(declare-fun x1127 () Int)
(declare-fun x754 () Int)
(declare-fun x1380 () Bool)
(declare-fun x151 () Int)
(declare-fun x1400 () Int)
(declare-fun x658 () Bool)
(declare-fun x4 () Int)
(declare-fun x1349 () Int)
(declare-fun x502 () Int)
(declare-fun x486 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1396 () Int)
(declare-fun x1093 () Int)
(declare-fun x1200 (Int Int Int Int) Int)
(declare-fun x97 () Int)
(declare-fun x255 () Int)
(declare-fun x636 () Int)
(declare-fun x309 () Int)
(declare-fun x942 (Int) Int)
(declare-fun x399 () Int)
(declare-fun x1117 () Int)
(declare-fun x555 () Int)
(declare-fun x2 () Int)
(declare-fun x231 () Int)
(declare-fun x1418 () Bool)
(declare-fun x554 () Int)
(declare-fun x803 () Int)
(declare-fun x582 () Int)
(declare-fun x875 () Int)
(declare-fun x698 () Int)
(declare-fun x1221 () Int)
(declare-fun x279 () Bool)
(declare-fun x1244 () Int)
(declare-fun x779 () Int)
(declare-fun x1037 () Int)
(declare-fun x1558 () Int)
(declare-fun x711 () Int)
(declare-fun x283 () Int)
(declare-fun x575 (Int Int Int) Int)
(declare-fun x644 () Int)
(declare-fun x1431 () Bool)
(declare-fun x1238 () Int)
(declare-fun x302 () Int)
(declare-fun x234 () Int)
(declare-fun x633 () Int)
(declare-fun x759 () Int)
(declare-fun x943 () Bool)
(declare-fun x121 () Int)
(declare-fun x67 () Bool)
(declare-fun x129 () Int)
(declare-fun x900 () Int)
(declare-fun x1403 () Int)
(declare-fun x199 () Int)
(declare-fun x1150 () Int)
(declare-fun x584 () Int)
(declare-fun x796 () Int)
(declare-fun x623 () Int)
(declare-fun x353 () Int)
(declare-fun x360 () Int)
(declare-fun x296 () Int)
(declare-fun x1038 (Int) Int)
(declare-fun x1524 () Int)
(declare-fun x765 () Int)
(declare-fun x590 () Int)
(declare-fun x930 () Bool)
(declare-fun x637 () Bool)
(declare-fun x93 () Int)
(declare-fun x49 () Int)
(declare-fun x874 () Int)
(declare-fun x1480 () Bool)
(declare-fun x627 () Int)
(declare-fun x1308 () Int)
(declare-fun x264 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1406 () Int)
(declare-fun x1083 () Int)
(declare-fun x12 () Bool)
(declare-fun x684 () Int)
(declare-fun x72 () Bool)
(declare-fun x828 () Int)
(declare-fun x844 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x333 () Int)
(declare-fun x1207 (Int Int) Int)
(declare-fun x222 () Int)
(declare-fun x449 () Bool)
(declare-fun x1123 () Int)
(declare-fun x533 () Bool)
(declare-fun x297 () Int)
(declare-fun x191 () Int)
(declare-fun x884 () Int)
(declare-fun x879 () Int)
(declare-fun x314 () Int)
(declare-fun x451 () Int)
(declare-fun x1510 () Bool)
(declare-fun x768 () Bool)
(declare-fun x172 () Int)
(declare-fun x1372 () Int)
(declare-fun x1420 () Int)
(declare-fun x148 () Int)
(declare-fun x277 () Int)
(declare-fun x237 () Int)
(declare-fun x1051 () Int)
(declare-fun x777 () Int)
(declare-fun x691 () Int)
(declare-fun x1136 () Int)
(declare-fun x986 () Int)
(declare-fun x956 () Bool)
(declare-fun x816 () Int)
(declare-fun x261 () Int)
(declare-fun x1133 () Int)
(declare-fun x54 () Int)
(declare-fun x881 () Int)
(declare-fun x547 () Bool)
(define-fun x597 ((x1494 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1494) (>= x1494 0)) x1494 (- x1494 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1110 ((x1494 Int)) Int (ite (and (< x1494 0) (>= x1494 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1494 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1494))
(define-fun x739 ((x1494 Int)) Int (ite (and (>= x1494 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1494)) x1494 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1494) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1494)) (- x1494 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1494 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1494 0)) (+ x1494 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x65 x1494 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x499 ((x558 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558) (<= 0 x558)))
(define-fun x1003 ((x558 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558) (>= x558 0)))
(define-fun x249 ((x558 Int) (x771 Int)) Bool (= (* x771 x558) (x6 x558 x771)))
(define-fun x1104 ((x558 Int) (x771 Int)) Bool (and (= (- (* (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) x558) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x6 x558 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x558 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x771 x558) (* x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771))))
(define-fun x901 ((x558 Int) (x771 Int)) Bool (=> (and (< 0 x558) (< 0 x771)) (= (= x771 (x1049 (x739 (x6 x558 x771)) x558)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6 x558 x771)))))
(define-fun x374 ((x558 Int) (x771 Int)) Bool (=> (and (not (= x771 0)) (not (= 0 x558))) (and (= (x1049 (x6 x558 x771) x558) x771) (= (x1049 (x6 x558 x771) x771) x558))))
(define-fun x1460 ((x558 Int) (x771 Int)) Bool (=> (and (< 0 x771) (> x558 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6 x558 x771)) (< (x1049 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558) x771))))
(define-fun x817 ((x558 Int) (x771 Int)) Bool (and (= (x739 (x6 x558 x771)) (x739 (x6 x558 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x739 (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771)) (x739 (x6 x558 x771))) (= (x739 (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x739 (x6 x558 x771)))))
(define-fun x520 ((x558 Int) (x771 Int)) Bool (and (=> (and (and (<= x771 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x771)) (and (> x558 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558))) (= (>= (x1049 57896044618658097711785492504343953926634992332820282019728792003956564819968 x771) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x771)) (and (> x558 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558))) (= (<= (x6 (- x558 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x771)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x558)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) (> x771 0)) (and (< 0 x558) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x558))) (= (>= (x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) x558) (<= (x6 x558 x771) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) (<= x771 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x558) (> x558 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x771) (x1049 57896044618658097711785492504343953926634992332820282019728792003956564819968 x558)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6 x558 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x60 ((x558 Int) (x771 Int)) Bool (and (x249 x558 x771) (x520 x558 x771) (x374 x558 x771) (x817 x558 x771) (x1104 x558 x771) (x901 x558 x771) (x1460 x558 x771)))
(define-fun x622 ((x558 Int)) Bool (and (= 0 (x6 0 x558)) (= 0 (x6 x558 0))))
(define-fun x1290 ((x558 Int)) Bool (and (= (x6 x558 1) x558) (= (x6 1 x558) x558)))
(define-fun x733 ((x558 Int)) Bool (and (x1290 x558) (x622 x558)))
(define-fun x1370 ((x558 Int)) Bool (and (= (x427 115792089237316195423570985008687907853269984665640564039457584007913129639935 x558) x558) (= x558 (x427 x558 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x183 ((x558 Int)) Bool (and (= 0 (x427 0 x558)) (= 0 (x427 x558 0))))
(define-fun x612 ((x558 Int)) Bool (= x558 (x427 x558 x558)))
(define-fun x672 ((x558 Int)) Bool (and (x1370 x558) (x183 x558) (x612 x558)))
(define-fun x328 ((x558 Int) (x771 Int)) Bool (= (x427 x558 x771) (x427 x771 x558)))
(define-fun x999 ((x558 Int) (x771 Int)) Bool (and (=> (<= 0 x558) (>= x558 (x427 x558 x771))) (<= 0 (x427 x558 x771)) (=> (<= 0 x771) (>= x771 (x427 x558 x771)))))
(define-fun x812 ((x558 Int) (x771 Int)) Bool (and (x999 x558 x771) (x328 x558 x771)))
(define-fun x393 ((x558 Int)) Bool (= (x65 x558 1461501637330902918203684832716283019655932542976) (x427 x558 1461501637330902918203684832716283019655932542975)))
(define-fun x1149 ((x558 Int)) Bool (and (x393 x558) (x812 x558 1461501637330902918203684832716283019655932542975)))
(define-fun x1171 ((x558 Int) (x771 Int)) Bool (and (> x771 (x65 x558 x771)) (>= (x65 x558 x771) 0)))
(define-fun x1426 ((x558 Int) (x771 Int)) Bool (=> (and (<= 0 x558) (> x771 0)) (= (> x771 x558) (= (x65 x558 x771) x558))))
(define-fun x465 ((x558 Int) (x771 Int)) Bool (=> (and (and (>= x558 x771) (< x558 (+ x771 x771))) (< 0 x771)) (= (- x558 x771) (x65 x558 x771))))
(define-fun x143 ((x558 Int) (x771 Int)) Bool (=> (< 0 x771) (= x558 (+ (* x771 (x1049 x558 x771)) (x65 x558 x771)))))
(define-fun x1021 ((x558 Int) (x771 Int)) Bool (and (x1171 x558 x771) (x143 x558 x771) (x465 x558 x771) (x1426 x558 x771)))
(define-fun x1226 ((x558 Int)) Bool (= (x65 0 x558) 0))
(define-fun x1439 ((x558 Int)) Bool (= 0 (x65 x558 1)))
(define-fun x1214 ((x558 Int)) Bool (= (x65 x558 x558) 0))
(define-fun x985 ((x558 Int)) Bool (and (x1439 x558) (x1214 x558) (x1226 x558)))
(define-fun x1329 ((x558 Int)) Bool (= (x739 x558) (+ (x65 x558 32) (x427 x558 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x375 ((x558 Int)) Bool (and (x812 x558 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1329 x558)))
(define-fun x1397 ((x558 Int) (x771 Int)) Bool (=> (and (< 0 x771) (< 0 x558)) (and (<= (x1049 x558 x771) x558) (<= 0 (x1049 x558 x771)))))
(define-fun x1363 ((x558 Int) (x771 Int)) Bool (=> (and (and (>= x558 0) (< x558 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x771))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1049 x558 x771)) (>= (x1049 x558 x771) 0))))
(define-fun x1048 ((x558 Int) (x771 Int)) Bool (=> (and (< x771 x558) (> x771 1)) (> x558 (x1049 x558 x771))))
(define-fun x616 ((x558 Int) (x771 Int)) Bool (=> (and (< 0 x771) (< 0 x558)) (= (> x771 x558) (= (x1049 x558 x771) 0))))
(define-fun x416 ((x558 Int) (x771 Int)) Bool (=> (and (> x771 0) (> x558 0)) (and (<= (* x771 (x1049 x558 x771)) x558) (< (- x558 x771) (* x771 (x1049 x558 x771))))))
(define-fun x718 ((x558 Int) (x771 Int)) Bool (= (- x558 (x427 (- x771 1) x558)) (* x771 (x1049 x558 x771))))
(define-fun x737 ((x558 Int) (x771 Int)) Bool (and (x616 x558 x771) (x1363 x558 x771) (x416 x558 x771) (x1048 x558 x771) (x718 x558 x771) (x1397 x558 x771)))
(define-fun x188 ((x558 Int)) Bool (= 0 (x1049 0 x558)))
(define-fun x961 ((x558 Int)) Bool (= x558 (x1049 x558 1)))
(define-fun x660 ((x558 Int)) Bool (=> (not (= x558 0)) (= (x1049 x558 x558) 1)))
(define-fun x760 ((x558 Int)) Bool (and (x188 x558) (x961 x558) (x660 x558)))
(define-fun x1261 ((x949 Int)) Int (ite (> x1166 x949) (x98 x949) 0))
(define-fun x70 ((x949 Int)) Int 0)
(define-fun x963 ((x949 Int)) Int (x942 x949))
(define-fun x640 ((x949 Int)) Int (x99 x949))
(define-fun x368 ((x949 Int)) Int (x1375 x949))
(define-fun x702 ((x949 Int)) Int (x1009 x949))
(define-fun x243 ((x949 Int)) Int (x1111 x949))
(define-fun x565 ((x949 Int)) Int 0)
(define-fun x1360 ((x949 Int)) Int (ite (= x927 x949) x1029 (x168 x949)))
(define-fun x1271 ((x949 Int)) Int (ite (= x94 x949) x1534 (x1360 x949)))
(define-fun x837 ((x949 Int)) Int 0)
(define-fun x1225 ((x949 Int)) Int (ite (= x949 4) 32 (x837 x949)))
(define-fun x117 ((x949 Int)) Int (ite (= x949 36) x484 (x1225 x949)))
(define-fun x1100 ((x949 Int)) Int (ite (= x949 68) x1034 (x117 x949)))
(define-fun x488 ((x949 Int)) Int (ite (= x949 100) x740 (x1100 x949)))
(define-fun x1442 ((x949 Int)) Int (ite (= 132 x949) 352 (x488 x949)))
(define-fun x742 ((x949 Int)) Int (ite (= 388 x949) x669 (x1442 x949)))
(define-fun x1227 ((x949 Int)) Int (ite (and (< x949 (+ x104 420)) (>= x949 420)) (x963 (- x949 420)) (x742 x949)))
(define-fun x1404 ((x949 Int)) Int (ite (= x949 164) x186 (x1227 x949)))
(define-fun x1479 ((x949 Int)) Int (ite (= x949 x73) x983 (x1404 x949)))
(define-fun x288 ((x949 Int)) Int (ite (and (>= x949 x234) (> (+ x296 x234) x949)) (x640 (- x949 x234)) (x1479 x949)))
(define-fun x1391 ((x949 Int)) Int (ite (= x949 196) x569 (x288 x949)))
(define-fun x850 ((x949 Int)) Int (ite (= x949 x278) x822 (x1391 x949)))
(define-fun x514 ((x949 Int)) Int (ite (and (>= x949 x1057) (> (+ x813 x1057) x949)) (x368 (- x949 x1057)) (x850 x949)))
(define-fun x1481 ((x949 Int)) Int (ite (= x949 228) x758 (x514 x949)))
(define-fun x71 ((x949 Int)) Int (ite (= x1001 x949) x735 (x1481 x949)))
(define-fun x86 ((x949 Int)) Int (ite (and (>= x949 x1337) (> (+ x1337 x735) x949)) (x702 (- x949 x1337)) (x71 x949)))
(define-fun x147 ((x949 Int)) Int (ite (= x949 260) x158 (x86 x949)))
(define-fun x319 ((x949 Int)) Int (ite (= x48 x949) x1312 (x147 x949)))
(define-fun x274 ((x949 Int)) Int (ite (and (>= x949 x919) (> (+ x919 x1324) x949)) (x243 (- x949 x919)) (x319 x949)))
(define-fun x577 ((x949 Int)) Int (ite (= x949 292) x97 (x274 x949)))
(define-fun x896 ((x949 Int)) Int (ite (= 324 x949) x362 (x577 x949)))
(define-fun x728 ((x949 Int)) Int (ite (= 356 x949) x762 (x896 x949)))
(define-fun x1147 ((x949 Int)) Int (ite (= x261 x949) x618 (x1271 x949)))
(define-fun x1429 ((x949 Int)) Int (ite (= x949 x1230) x1026 (x1147 x949)))
(define-fun x1217 ((x949 Int)) Int (ite (= 128 x949) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x70 x949)))
(define-fun x1522 ((x949 Int)) Int (ite (= 132 x949) x609 (x1217 x949)))
(define-fun x1399 ((x949 Int)) Int (ite (= 164 x949) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x1522 x949)))
(define-fun x738 ((x949 Int)) Int (ite (and (<= 128 x949) (< x949 160)) (x417 (- x949 128)) (x1399 x949)))
(define-fun x1469 ((x949 Int)) Int (ite x668 (x738 x949) (x1399 x949)))
(define-fun x992 ((x949 Int)) Int (ite (and (>= x949 128) (> 160 x949)) (x417 (- x949 128)) (x1469 x949)))
(define-fun x503 ((x949 Int)) Int (ite (= 288 x949) x1070 (x992 x949)))
(define-fun x271 ((x949 Int)) Int (ite (= x949 160) 288 (x503 x949)))
(define-fun x270 ((x949 Int)) Int (ite (= 320 x949) x1274 (x271 x949)))
(define-fun x1031 ((x949 Int)) Int (ite (= x949 352) x107 (x270 x949)))
(define-fun x773 ((x949 Int)) Int (ite (= x949 448) x205 (x1031 x949)))
(define-fun x972 ((x949 Int)) Int (ite (= x949 x879) x1519 (x773 x949)))
(define-fun x1394 ((x949 Int)) Int (ite (= x949 x599) x799 (x972 x949)))
(define-fun x1517 ((x949 Int)) Int (ite (= x949 x1197) x1304 (x1394 x949)))
(define-fun x1118 ((x949 Int)) Int (ite (and (>= x949 x787) (> (+ x1304 x787) x949)) (x728 (- (+ x949 x1310) x787)) (x1517 x949)))
(define-fun x831 ((x949 Int)) Int (ite (= x1466 x949) 0 (x1118 x949)))
(define-fun x583 ((x949 Int)) Int (ite (= x634 x949) x1197 (x831 x949)))
(define-fun x549 ((x949 Int)) Int (ite (= x949 480) x879 (x583 x949)))
(define-fun x115 ((x949 Int)) Int (ite x106 (x773 x949) (x549 x949)))
(define-fun x179 ((x949 Int)) Int (ite (= 384 x949) 448 (x115 x949)))
(define-fun x1333 ((x949 Int)) Int (ite (= x113 x949) x480 (x179 x949)))
(define-fun x1498 ((x949 Int)) Int (ite (and (<= x916 x949) (> (+ x480 x916) x949)) (x728 (- (+ x949 x1131) x916)) (x1333 x949)))
(define-fun x214 ((x949 Int)) Int (ite (= x949 x204) 0 (x1498 x949)))
(define-fun x1077 ((x949 Int)) Int (ite (= 416 x949) x113 (x214 x949)))
(define-fun x808 ((x949 Int)) Int (ite (= x949 192) 320 (x1077 x949)))
(define-fun x306 ((x949 Int)) Int (ite (= x949 224) x1238 (x808 x949)))
(define-fun x10 ((x949 Int)) Int (ite (= 256 x949) x330 (x306 x949)))
(define-fun x245 ((x949 Int)) Int (ite (= x949 x590) x333 (x10 x949)))
(define-fun x500 ((x949 Int)) Int (ite (and (<= x1047 x949) (< x949 (+ x1047 x333))) (x728 (- (+ x949 x216) x1047)) (x245 x949)))
(define-fun x1033 ((x949 Int)) Int (ite (= x1082 x949) 0 (x500 x949)))
(define-fun x587 ((x949 Int)) Int (ite (= x563 x949) x348 (x1033 x949)))
(define-fun x1169 ((x949 Int)) Int (ite (= x845 x949) x730 (x587 x949)))
(define-fun x1317 ((x949 Int)) Int (ite (= x949 x1246) x1390 (x1169 x949)))
(define-fun x825 ((x949 Int)) Int (ite (= x949 x206) x434 (x1317 x949)))
(define-fun x1489 ((x949 Int)) Int (ite (= x949 x1212) x1300 (x825 x949)))
(define-fun x291 ((x949 Int)) Int (ite (= x949 x990) x252 (x1489 x949)))
(define-fun x962 ((x949 Int)) Int (ite (= x524 x949) x1531 (x291 x949)))
(define-fun x111 ((x949 Int)) Int (ite (= x949 x68) x206 (x962 x949)))
(define-fun x1521 ((x949 Int)) Int (ite x35 (x1317 x949) (x111 x949)))
(define-fun x28 ((x949 Int)) Int (ite (= x515 x949) x1246 (x1521 x949)))
(define-fun x1548 ((x949 Int)) Int (ite (= x1388 x949) x534 (x28 x949)))
(define-fun x380 ((x949 Int)) Int (ite (= x572 x949) x1293 (x1548 x949)))
(define-fun x1073 ((x949 Int)) Int (ite (= x924 x949) x1354 (x380 x949)))
(define-fun x377 ((x949 Int)) Int (ite (= x949 x953) x84 (x1073 x949)))
(define-fun x641 ((x949 Int)) Int (ite (= x949 x1148) x835 (x377 x949)))
(define-fun x1087 ((x949 Int)) Int (ite (= x949 x696) x361 (x641 x949)))
(define-fun x892 ((x949 Int)) Int (ite (= x949 x875) x572 (x1087 x949)))
(define-fun x790 ((x949 Int)) Int (ite x943 (x1548 x949) (x892 x949)))
(define-fun x312 ((x949 Int)) Int (ite (= x615 x949) x1388 (x790 x949)))
(define-fun x1263 ((x949 Int)) Int (ite (= x713 x949) x776 (x312 x949)))
(define-fun x1376 ((x949 Int)) Int (ite (= x949 x541) x1154 (x1263 x949)))
(define-fun x877 ((x949 Int)) Int (ite (= x450 x949) x1095 (x1376 x949)))
(define-fun x904 ((x949 Int)) Int (ite (= x1168 x949) x242 (x877 x949)))
(define-fun x41 ((x949 Int)) Int (ite (= x949 x323) x931 (x904 x949)))
(define-fun x531 ((x949 Int)) Int (ite (= x258 x949) x1150 (x41 x949)))
(define-fun x523 ((x949 Int)) Int (ite (= x949 x1500) x541 (x531 x949)))
(define-fun x1224 ((x949 Int)) Int (ite x846 (x1263 x949) (x523 x949)))
(define-fun x472 ((x949 Int)) Int (ite (= x949 x398) x713 (x1224 x949)))
(define-fun x848 ((x949 Int)) Int (ite (= x521 x949) x936 (x472 x949)))
(define-fun x772 ((x949 Int)) Int (ite (= x470 x949) x1247 (x848 x949)))
(define-fun x61 ((x949 Int)) Int (ite (= x949 x553) x610 (x772 x949)))
(define-fun x525 ((x949 Int)) Int (ite (= x949 x644) x884 (x61 x949)))
(define-fun x1059 ((x949 Int)) Int (ite (= x949 x1361) x646 (x525 x949)))
(define-fun x687 ((x949 Int)) Int (ite (= x949 x881) x1139 (x1059 x949)))
(define-fun x1313 ((x949 Int)) Int (ite (and (> (+ x389 x96) x949) (>= x949 x96)) (x728 (- (+ x1539 x949) x96)) (x687 x949)))
(define-fun x1132 ((x949 Int)) Int (ite x58 (x687 x949) (x1313 x949)))
(define-fun x141 ((x949 Int)) Int (ite (= x949 x1240) x1495 (x1132 x949)))
(define-fun x269 ((x949 Int)) Int (ite (= x949 x16) x793 (x141 x949)))
(define-fun x1174 ((x949 Int)) Int (ite (= x44 x949) x1019 (x269 x949)))
(define-fun x883 ((x949 Int)) Int (ite (= x949 x433) 128 (x1174 x949)))
(define-fun x379 ((x949 Int)) Int (ite (= x530 x949) x1069 (x883 x949)))
(define-fun x213 ((x949 Int)) Int (ite (= x949 x1141) x1190 (x379 x949)))
(define-fun x463 ((x949 Int)) Int (ite x529 (x213 x949) (ite x671 (x379 x949) (x1119 x949))))
(define-fun x795 ((x949 Int)) Int (ite (= x949 x1245) 0 (x463 x949)))
(define-fun x232 ((x949 Int)) Int (ite (= x949 x1343) x402 (x795 x949)))
(define-fun x350 ((x949 Int)) Int (ite (= x949 x387) x451 (x232 x949)))
(define-fun x847 ((x949 Int)) Int (ite x686 (x1132 x949) (x350 x949)))
(define-fun x1041 ((x949 Int)) Int (ite (= x1353 x949) x207 (x847 x949)))
(define-fun x346 ((x949 Int)) Int (ite (= x949 x769) x606 (x1041 x949)))
(define-fun x1186 ((x949 Int)) Int (ite (= x949 x420) x665 (x346 x949)))
(define-fun x76 ((x949 Int)) Int (ite (= x949 x1080) x426 (x1186 x949)))
(define-fun x834 ((x949 Int)) Int (ite x617 (x1186 x949) (ite x947 (x346 x949) (ite x119 (x1041 x949) (ite x1431 (x847 x949) (x76 x949))))))
(define-fun x293 ((x949 Int)) Int (ite (= x241 x949) x805 (x834 x949)))
(define-fun x100 ((x949 Int)) Int (ite (= x949 x864) x102 (x293 x949)))
(define-fun x1201 ((x949 Int)) Int (ite (= x554 x949) x674 (x100 x949)))
(define-fun x1004 ((x949 Int)) Int (ite (= x949 x412) x140 (x1201 x949)))
(define-fun x1153 ((x949 Int)) Int (ite (= x1419 x949) x818 (x1004 x949)))
(define-fun x201 ((x949 Int)) Int (ite (= x1413 x949) x256 (x1153 x949)))
(define-fun x59 ((x949 Int)) Int (ite (= x1027 x949) x295 (x201 x949)))
(define-fun x492 ((x949 Int)) Int (ite (= x765 x949) x215 (x59 x949)))
(define-fun x1373 ((x949 Int)) Int (ite (= x949 x40) x1556 (x492 x949)))
(define-fun x345 ((x949 Int)) Int (ite (= x1540 x949) x1475 (x1373 x949)))
(define-fun x304 ((x949 Int)) Int (ite (= x811 x949) x650 (x345 x949)))
(define-fun x474 ((x949 Int)) Int (ite (= x949 x223) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x304 x949)))
(define-fun x475 ((x949 Int)) Int (ite (= x191 x949) x200 (x474 x949)))
(define-fun x82 ((x949 Int)) Int (ite (= x550 x949) x1228 (x475 x949)))
(define-fun x411 ((x949 Int)) Int (ite (= x223 x949) 0 (x82 x949)))
(define-fun x1167 ((x949 Int)) Int (ite (= x1301 x949) x42 (x411 x949)))
(define-fun x1128 ((x949 Int)) Int (ite (= x1371 x949) x137 (x1167 x949)))
(define-fun x239 ((x949 Int)) Int (ite (= x528 x949) x1434 (x1128 x949)))
(define-fun x714 ((x949 Int)) Int (ite (= x1327 x949) x666 (x239 x949)))
(define-fun x580 ((x949 Int)) Int (ite (= x404 x949) x1542 (x714 x949)))
(define-fun x1099 ((x949 Int)) Int (ite x1035 (ite x950 (x580 x949) (ite x1260 (x580 x949) (x82 x949))) (x82 x949)))
(define-fun x477 ((x949 Int)) Int (ite (= x949 x153) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1099 x949)))
(define-fun x22 ((x949 Int)) Int (ite (= x870 x949) x1543 (x477 x949)))
(define-fun x1249 ((x949 Int)) Int (ite (= x949 x1219) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x22 x949)))
(define-fun x1216 ((x949 Int)) Int (ite (and (> (+ x153 32) x949) (>= x949 x153)) (x1538 (- x949 x153)) (x1249 x949)))
(define-fun x928 ((x949 Int)) Int (ite x988 (x1216 x949) (x1249 x949)))
(define-fun x1321 ((x949 Int)) Int (ite (and (>= x949 x153) (< x949 (+ 32 x153))) (x1538 (- x949 x153)) (x928 x949)))
(define-fun x1508 ((x949 Int)) Int (ite (= x949 x1450) x1051 (x1321 x949)))
(define-fun x1145 ((x949 Int)) Int (ite (and (> (+ x255 x55) x949) (<= x55 x949)) (x728 (- (+ x1539 x949) x55)) (x1508 x949)))
(define-fun x351 ((x949 Int)) Int (ite x1330 (x1508 x949) (x1145 x949)))
(define-fun x1173 ((x949 Int)) Int (ite (= x949 x1098) x1495 (x351 x949)))
(define-fun x551 ((x949 Int)) Int (ite (= x960 x949) x1229 (x1173 x949)))
(define-fun x509 ((x949 Int)) Int (ite (= x949 x1023) x1387 (x551 x949)))
(define-fun x729 ((x949 Int)) Int (ite (= x774 x949) 128 (x509 x949)))
(define-fun x510 ((x949 Int)) Int (ite (= x949 x391) x522 (x729 x949)))
(define-fun x62 ((x949 Int)) Int (ite (= x4 x949) x861 (x510 x949)))
(define-fun x1091 ((x949 Int)) Int (ite x930 (x62 x949) (ite x266 (x510 x949) (x1334 x949))))
(define-fun x260 ((x949 Int)) Int (ite (= x949 x581) 0 (x1091 x949)))
(define-fun x1065 ((x949 Int)) Int (ite (= x949 x584) x1164 (x260 x949)))
(define-fun x1385 ((x949 Int)) Int (ite (= x177 x949) x1541 (x1065 x949)))
(define-fun x1414 ((x949 Int)) Int (ite x647 (x351 x949) (x1385 x949)))
(define-fun x120 ((x949 Int)) Int (ite (= x949 x1235) x761 (x1414 x949)))
(define-fun x452 ((x949 Int)) Int (ite (= x949 x705) x251 (x120 x949)))
(define-fun x233 ((x949 Int)) Int (ite (= x949 x1039) x1384 (x452 x949)))
(define-fun x1223 ((x949 Int)) Int (ite (= x34 x949) x1299 (x233 x949)))
(define-fun x1267 ((x949 Int)) Int (ite x1427 (x233 x949) (ite x1303 (x452 x949) (ite x697 (x120 x949) (ite x933 (x1414 x949) (x1223 x949))))))
(define-fun x657 ((x949 Int)) Int (ite (= x336 x949) x567 (x1267 x949)))
(define-fun x424 ((x949 Int)) Int (ite (= x949 x372) x102 (x657 x949)))
(define-fun x428 ((x949 Int)) Int (ite (= x949 x1281) x977 (x424 x949)))
(define-fun x123 ((x949 Int)) Int (ite (= x949 x1350) x1086 (x428 x949)))
(define-fun x849 ((x949 Int)) Int (ite (= x949 x1279) x984 (x123 x949)))
(define-fun x1234 ((x949 Int)) Int (ite (= x949 x395) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x849 x949)))
(define-fun x1378 ((x949 Int)) Int (ite (= x589 x949) x642 (x1234 x949)))
(define-fun x1563 ((x949 Int)) Int (ite (and (<= x395 x949) (< x949 (+ 32 x395))) (x14 (- x949 x395)) (x1378 x949)))
(define-fun x744 ((x949 Int)) Int (ite x752 (x1563 x949) (x1378 x949)))
(define-fun x461 ((x949 Int)) Int (ite (and (< x949 (+ x395 32)) (<= x395 x949)) (x14 (- x949 x395)) (x744 x949)))
(define-fun x414 ((x949 Int)) Int (ite (= x949 x1276) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x461 x949)))
(define-fun x710 ((x949 Int)) Int (ite (= x949 x722) x573 (x414 x949)))
(define-fun x493 ((x949 Int)) Int (ite (and (> (+ x1276 32) x949) (>= x949 x1276)) (x170 (- x949 x1276)) (x710 x949)))
(define-fun x157 ((x949 Int)) Int (ite x486 (x493 x949) (x710 x949)))
(define-fun x1357 ((x949 Int)) Int (ite (and (>= x949 x1276) (< x949 (+ x1276 32))) (x170 (- x949 x1276)) (x157 x949)))
(define-fun x1108 ((x949 Int)) Int (ite (= x1210 x949) x1137 (x1357 x949)))
(define-fun x868 ((x949 Int)) Int (ite (= x949 x614) 0 (x1108 x949)))
(define-fun x311 ((x949 Int)) Int (ite (= x408 x949) 0 (x868 x949)))
(define-fun x556 ((x949 Int)) Int (ite (= x949 x902) 0 (x311 x949)))
(define-fun x1010 ((x949 Int)) Int (ite (= x949 x628) 0 (x556 x949)))
(define-fun x459 ((x949 Int)) Int (ite (= x949 x1440) 0 (x1010 x949)))
(define-fun x359 ((x949 Int)) Int (ite (= x949 x272) x614 (x459 x949)))
(define-fun x401 ((x949 Int)) Int (ite (= x949 x457) 0 (x359 x949)))
(define-fun x839 ((x949 Int)) Int (ite (= x949 x630) 0 (x401 x949)))
(define-fun x1002 ((x949 Int)) Int (ite (= x949 x1331) 0 (x839 x949)))
(define-fun x332 ((x949 Int)) Int (ite (= x949 x163) 0 (x1002 x949)))
(define-fun x105 ((x949 Int)) Int (ite (= x949 x800) 0 (x332 x949)))
(define-fun x190 ((x949 Int)) Int (ite (= x949 x1127) x457 (x105 x949)))
(define-fun x455 ((x949 Int)) Int (x1261 x949))
(assert (x499 x1047))
(assert (=> (<= x1490 10000) (= 0 (x479 x1490))))
(assert (= (x479 2189116922) 0))
(assert (x499 x753))
(assert (=> (>= 10000 x103) (= (x479 x103) 0)))
(assert (< 10000 (x116 x88 x1058 x138 x1549 x1365 x135 x501)))
(assert (x499 x852))
(assert (x499 x137))
(assert (x499 x540))
(assert (= (x784 (x376 x88 x1490 x649 x386 x832)) x386))
(assert (= x785 (x784 (x557 x88 x604 x1349 x785 x833 x685 x700 x8))))
(assert (x499 x1057))
(assert (= (x784 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)) x195))
(assert (=> (>= 10000 x88) (= 0 (x479 x88))))
(assert (x499 x1282))
(assert (= (x635 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463)) x254))
(assert (x499 x958))
(assert (= x15 (x341 (x1553 x759 x695 x378 x317 x15 x944))))
(assert (x499 x1495))
(assert (x499 x1311))
(assert (x60 32 x1312))
(assert (x499 x582))
(assert (x499 x1245))
(assert (x499 x1007))
(assert (=> (<= x185 10000) (= 0 (x479 x185))))
(assert (x499 x1055))
(assert (=> (<= x1451 10000) (= (x479 x1451) 0)))
(assert (x499 x1424))
(assert (< 10000 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)))
(assert (= (or x752 x1122) x415))
(assert (< 10000 (x116 x1374 x358 x1335 x314 x1477 x1503 x827)))
(assert (= (x945 (x575 x103 x468 x80)) x468))
(assert (x499 x221))
(assert (= x935 (x248 (x1553 x921 x21 x655 x1236 x1366 x935))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x376 x921 x1203 x1529 x1270 x667)))
(assert (not (x1275 (x376 x921 x1203 x1529 x1270 x667))))
(assert (= x703 (x945 (x575 64 x703 1))))
(assert (x499 x746))
(assert (= (x635 (x575 x370 x209 x1497)) x1497))
(assert (x499 x444))
(assert (=> (<= x1445 10000) (= 0 (x479 x1445))))
(assert (x499 x1337))
(assert (< (x575 64 x703 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x499 x348))
(assert (= (x1499 (x316 x370 x1011 x998 x1408)) x370))
(assert (x499 x399))
(assert (> (x316 x57 x224 x301 x1402) 10000))
(assert (x375 x706))
(assert (x499 x445))
(assert (x1275 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (x499 x681))
(assert (x499 x1448))
(assert (not (x1275 (x575 x88 x1151 x1545))))
(assert (not (x1275 (x376 x1374 x506 x51 x1202 x478))))
(assert (= x1536 (x341 (x116 x334 x1379 x275 x505 x1536 x600 x54))))
(assert (=> (<= x600 10000) (= 0 (x479 x600))))
(assert (= (x1499 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) x921))
(assert (x499 x1531))
(assert (x499 x159))
(assert (not (x1275 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (x1275 2065879269444))
(assert (= (x479 30450320296159908085414496432607297912280636920234228256796789313041262968832) 0))
(assert (x499 x678))
(assert (x499 x1083))
(assert (=> (<= x334 10000) (= (x479 x334) 0)))
(assert (= (x575 x921 x1264 x1352) (x479 (x575 x921 x1264 x1352))))
(assert (= x759 (x1499 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (x499 x1206))
(assert (=> (>= 10000 x1402) (= 0 (x479 x1402))))
(assert (x499 x724))
(assert (x499 x1107))
(assert (=> (>= 10000 x1374) (= 0 (x479 x1374))))
(assert (= x874 (x248 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494))))
(assert (x499 x1322))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x499 x39))
(assert (= (x1499 (x575 x103 x468 x80)) x103))
(assert (x733 x822))
(assert (= (and x1432 x77) x1550))
(assert (= x1529 (x635 (x376 x921 x1203 x1529 x1270 x667))))
(assert (x499 x1458))
(assert (x499 x1246))
(assert (=> (>= 10000 x263) (= (x479 x263) 0)))
(assert (x499 x3))
(assert (x672 x436))
(assert (x499 x552))
(assert (= x478 (x341 (x376 x1374 x506 x51 x1202 x478))))
(assert (x499 x395))
(assert (=> (>= 10000 x745) (= 0 (x479 x745))))
(assert (x1275 18446744073709551614))
(assert (=> (<= x162 10000) (= 0 (x479 x162))))
(assert (= x1124 (x945 (x316 x759 x1124 x1377 x1435))))
(assert (x499 x711))
(assert (= (or x486 x539) x77))
(assert (x499 x1060))
(assert (x1275 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (= x1377 (x635 (x316 x759 x1124 x1377 x1435))))
(assert (= x1351 (x341 (x1553 x88 x1013 x13 x545 x1351 x1557))))
(assert (x499 x725))
(assert (= x162 (x635 (x316 x103 x725 x162 x128))))
(assert (not (x1275 (x1207 x1374 x1008))))
(assert (=> (<= x1379 10000) (= (x479 x1379) 0)))
(assert (= x1268 (x945 (x1207 x57 x1268))))
(assert (=> (>= 10000 x238) (= 0 (x479 x238))))
(assert (x499 x189))
(assert (x499 x1032))
(assert (x499 x632))
(assert (= x125 (x341 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185))))
(assert (x499 x1377))
(assert (x499 x50))
(assert (=> (>= 10000 x757) (= 0 (x479 x757))))
(assert (=> (>= 10000 x685) (= (x479 x685) 0)))
(assert (= (x376 x103 x36 x676 x1187 x489) (x479 (x376 x103 x36 x676 x1187 x489))))
(assert (< (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1207 x1374 x1008) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x562))
(assert (x499 x44))
(assert (x499 x607))
(assert (x499 x574))
(assert (=> (>= 10000 x275) (= (x479 x275) 0)))
(assert (< 10000 (x1207 x921 x905)))
(assert (x733 x1137))
(assert (=> (<= x978 10000) (= (x479 x978) 0)))
(assert (x60 32 x1139))
(assert (= x8 (x1038 (x557 x88 x604 x1349 x785 x833 x685 x700 x8))))
(assert (x499 x1381))
(assert (= (x248 (x1553 x88 x1013 x13 x545 x1351 x1557)) x1557))
(assert (x499 x1136))
(assert (< 10000 (x116 x334 x1379 x275 x505 x1536 x600 x54)))
(assert (= (x784 (x316 x921 x19 x1189 x24)) x24))
(assert (x499 x396))
(assert (= (x994 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) x1358))
(assert (< (x1207 x103 x447) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x553))
(assert (=> (>= 10000 x21) (= 0 (x479 x21))))
(assert (x499 x1396))
(assert (=> (<= x1161 10000) (= (x479 x1161) 0)))
(assert (= x57 (x1499 (x376 x57 x220 x53 x537 x745))))
(assert (x499 x223))
(assert (= x338 (x784 (x316 x1374 x757 x1451 x338))))
(assert (< (x1553 x57 x857 x1215 x1221 x656 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185) 10000))
(assert (x499 x590))
(assert (x499 x1546))
(assert (= (x1499 (x376 x88 x1490 x649 x386 x832)) x88))
(assert (x499 x1231))
(assert (= (and (not x688) x885) x947))
(assert (x985 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x936))
(assert (=> (>= 10000 x386) (= (x479 x386) 0)))
(assert (=> (>= 10000 x80) (= (x479 x80) 0)))
(assert (x1275 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= x135 (x248 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (x1149 x678))
(assert (= x807 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x241) (= x1555 (* x1462 32)) (<= 1 x1419) (= x189 x490) (<= x241 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1535 (x597 (+ x755 x1353))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x241) (= (x293 x241) x759) (= x1462 x284) (< x241 x1419) (= x1419 x1535) (= (>= 224 x759) x1472) (>= x1535 1) (= x490 (x597 (+ x1134 x1555))) (= (x1110 (- x1165 32)) x805) (= (x597 (+ 32 x241)) x959) (= x1165 (x1110 (- x1419 x241))) (= (* x1462 32) x755) (<= x1462 4)) (and x1472 (=> (and (= (x597 (+ 32 x1419)) x456) (= (x293 x838) x425) (= x462 (x116 x759 x1196 x626 x754 x425 x1516 x1220)) (= x378 (x293 x633)) (= (x597 (+ x959 128)) x1) (= (x316 x759 x1124 x1377 x1435) x329) (= x1117 (x597 (+ 32 x959))) (or (and (>= x1419 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x1419 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (>= x1419 1) (<= x1419 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (= x864 (x597 (+ x1419 32))) (= x811 (x597 (+ x864 96))) (= x1220 (x293 x1368)) (= (x597 (+ 64 x959)) x227) (= (x557 x759 x544 x254 x796 x1064 x171 x914 x1463) x283) (= (x293 x934) x171) (= x1410 (x597 (+ 64 x959))) (= (x1153 x1419) x88) (= x566 (x597 (+ x959 32))) (= x1024 (x376 x759 x238 x236 x517 x1396)) (= x236 (x293 x1117)) (= x873 (x597 (+ x959 64))) (= x1089 (x293 x37)) (= x967 (x293 x959)) (= x695 (x293 x959)) (= x238 (x293 x959)) (= x15 (x293 x1061)) (= (x597 (+ x959 96)) x1160) (= x1124 (x293 x959)) (= (x597 (+ x959 32)) x1501) (= x1037 (x597 (+ 192 x959))) (= x633 (x597 (+ x959 32))) (= (x293 x946) x517) (= (x293 x566) x1377) (= x796 (x293 x1410)) (= x254 (x293 x1501)) (= (x597 (+ x959 64)) x946) (= x412 (x597 (+ x554 32))) (= (x597 (+ x959 96)) x33) (= (x1207 x759 x967) x820) (= (x293 x33) x1064) (= (x293 x873) x754) (= (x293 x959) x544) (= x317 (x293 x511)) (= (x597 (+ x959 128)) x934) (= x37 (x597 (+ x959 32))) (= (x597 (+ x959 96)) x1061) (= x626 (x293 x118)) (= x1516 (x293 x1)) (= x554 (x597 (+ x864 32))) (= x3 (x597 (+ x959 160))) (= (x1252 0) x1524) (= (x597 (+ x959 160)) x1368) (= x39 (x293 x959)) (= (x293 x1160) x1396) (= (x293 x227) x1435) (= (x597 (+ x959 32)) x118) (= (x575 x759 x39 x1089) x564) (= x818 (x1110 (- x917 32))) (= (x597 (+ x959 128)) x508) (> x811 x1419) (= x914 (x293 x3)) (= (x1553 x759 x695 x378 x317 x15 x944) x815) (= x511 (x597 (+ x959 64))) (= (ite (= x759 0) x1524 (ite (<= x759 32) x820 (ite (>= 64 x759) x564 (ite (>= 96 x759) x329 (ite (<= x759 128) x1024 (ite (>= 160 x759) x815 (ite (<= x759 192) x462 (ite (>= 224 x759) x283 x691)))))))) x140) (= x838 (x597 (+ x959 96))) (= (x293 x959) x1196) (= (x293 x508) x944) (= x1463 (x293 x1037)) (= (x1110 (- x811 x1419)) x917) (= (<= x88 224) x888)) (and x888 (=> (and (= x661 (x597 (+ x456 64))) (= (x597 (+ x456 192)) x1106) (= (x1110 (- x560 32)) x650) (= (x1153 x661) x386) (= x996 (x1153 x244)) (= (x575 x88 x1151 x1545) x518) (= (x597 (+ x456 32)) x1484) (or (and (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x811 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (and (>= x811 2) (<= x811 126)) (and (>= x811 129) (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639743))) (= (x597 (+ x456 32)) x802) (= x40 (x597 (+ 32 x765))) (= (x1153 x122) x1549) (= x1135 (>= 224 x370)) (= x1351 (x1153 x130)) (= x138 (x1153 x878)) (= x501 (x1153 x1257)) (= x751 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) (= x1257 (x597 (+ x456 160))) (= (x597 (+ 96 x456)) x843) (= (ite (= 0 x88) x619 (ite (>= 32 x88) x109 (ite (>= 64 x88) x518 (ite (<= x88 96) x29 (ite (>= 128 x88) x694 (ite (>= 160 x88) x169 (ite (<= x88 192) x264 (ite (>= 224 x88) x751 x1496)))))))) x215) (= (x597 (+ 128 x456)) x469) (= x169 (x1553 x88 x1013 x13 x545 x1351 x1557)) (= x1365 (x1153 x49)) (= x1475 (x427 1461501637330902918203684832716283019655932542975 x1342)) (= (x597 (+ x456 128)) x989) (> x223 x811) (= (x597 (+ 64 x456)) x244) (= (x1153 x806) x1545) (= (x1153 x802) x397) (= (x1153 x469) x1557) (= (x597 (+ x40 32)) x1540) (= (x597 (+ 32 x456)) x806) (= (x1110 (- x223 x811)) x560) (= x1342 (x1153 256)) (= (x1153 x456) x1490) (= (x1153 x636) x545) (= x685 (x1153 x1364)) (= x257 (x597 (+ 64 x456))) (= x1013 (x1153 x456)) (= x604 (x1153 x456)) (= (x1153 x476) x700) (= (x597 (+ x456 64)) x636) (= x370 (x304 x811)) (= x1556 (x1153 224)) (= (x1153 x366) x1349) (= (x597 (+ x456 32)) x645) (= x1364 (x597 (+ x456 128))) (= x13 (x1153 x645)) (= x833 (x1153 x843)) (= (x1252 0) x619) (= (x597 (+ x456 160)) x476) (= (x597 (+ x811 32)) x1123) (= x1027 (x597 (+ 32 x1413))) (= x863 (x1153 x456)) (= x1014 (x597 (+ 96 x456))) (= (x1153 x1014) x832) (= x122 (x597 (+ x456 64))) (= x765 (x597 (+ 32 x1027))) (= (x597 (+ 96 x456)) x49) (= (x1207 x88 x863) x109) (= (x1153 x1106) x8) (= x130 (x597 (+ 96 x456))) (= x1058 (x1153 x456)) (= x878 (x597 (+ x456 32))) (= (x1153 x257) x785) (= x264 (x116 x88 x1058 x138 x1549 x1365 x135 x501)) (= (x597 (+ x1413 160)) x223) (= x135 (x1153 x989)) (= x366 (x597 (+ x456 32))) (= x29 (x316 x88 x46 x397 x996)) (= x46 (x1153 x456)) (= x1151 (x1153 x456)) (= (x1153 x1484) x649) (= x1413 (x597 (+ x811 32))) (= (x376 x88 x1490 x649 x386 x832) x694)) (and (=> (and (= (x575 x370 x209 x1497) x262) (= x217 (x597 (+ 64 x1123))) (= (x597 (+ 32 x1123)) x1544) (= (x82 x590) x396) (= x209 (x304 x1123)) (= x437 (x316 x370 x1011 x998 x1408)) (= (x304 x910) x1408) (= (x1207 x370 x467) x1302) (= (x597 (+ x1123 192)) x1053) (= x1101 (x304 x1123)) (= (x304 x1123) x467) (= x1228 (ite (= x370 0) x748 (ite (<= x370 32) x1302 (ite (<= x370 64) x262 (ite (<= x370 96) x437 (ite (<= x370 128) x578 (ite (<= x370 160) x1146 (ite (<= x370 192) x172 (ite (>= 224 x370) x1130 x911))))))))) (= (x304 x197) x299) (= x294 (x597 (+ x1123 32))) (= x423 (x597 (+ 32 x223))) (= (x597 (+ x1123 64)) x481) (= x764 (x304 x1053)) (= x410 (x304 x1123)) (= (x304 x1525) x1208) (= (x597 (+ x1123 160)) x292) (= x1488 (x304 x1123)) (= x197 (x597 (+ 64 x1123))) (= (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764) x1130) (= x893 (x304 x1392)) (= x910 (x597 (+ 64 x1123))) (= (x82 x1094) x26) (= x639 (x597 (+ 96 x1123))) (= x172 (x116 x370 x410 x443 x299 x1109 x1163 x302)) (= (x597 (+ 96 x1123)) x648) (= (x597 (+ 128 x1123)) x198) (= (x597 (+ x1123 128)) x178) (= (x597 (+ 2 x223)) x191) (= x792 (x82 x223)) (= x574 (x304 x178)) (= x1497 (x304 x294)) (= x1109 (x304 x648)) (= (x597 (+ 32 x191)) x550) (= (x82 x423) x1030) (= (x597 (+ 32 x1123)) x997) (= (x597 (+ x1123 32)) x1441) (= x578 (x376 x370 x1183 x1208 x966 x303)) (= x303 (x304 x639)) (= x1525 (x597 (+ 32 x1123))) (= (x304 x1123) x1011) (= x1146 (x1553 x370 x1101 x1161 x161 x763 x893)) (= (x597 (+ 96 x1123)) x1179) (= x1043 (x304 x43)) (= (x597 (+ x1123 160)) x43) (= (x304 x198) x1163) (= x748 (x1252 0)) (= x1094 (x597 (+ 64 x223))) (= x585 (= 65 x396)) (= x218 (x597 (+ x1123 32))) (= (x304 x1123) x1183) (= (x304 x1060) x1433) (= (x304 x1441) x998) (= (x304 x292) x302) (= (x597 (+ 96 x1123)) x1482) (= (x304 x1179) x763) (= x161 (x304 x217)) (= (x304 x481) x966) (= x1278 (x304 x1544)) (= x42 (x316 66 x792 x1030 x26)) (= (x597 (+ x1123 64)) x1060) (= x981 (x304 x1482)) (= x1392 (x597 (+ x1123 128))) (= x443 (x304 x218)) (= (x304 x997) x1161)) (and (=> (and (and (or (and x1422 (and (= x1506 x223) (= x1295 0) (= 3 x1016) (= x1071 x666))) (and (not x1422) (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x223)) (= x404 (x1110 (- x1301 32))) (= x1320 (x1110 (- x1301 32))) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1518 128) (= (= 0 x1401) x1075) (= (x714 (x597 (+ 64 x1301))) x1017) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x223) (= (x580 x1320) x678) (= x1371 (x597 (+ x1301 32))) (= x1401 (x427 1461501637330902918203684832716283019655932542975 x678)) (= (x714 (x597 (+ x1301 32))) x734) (not (= x223 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x1542 1461501637330902918203684832716283019655932542975) (= (x714 (x597 (+ x1301 96))) x543) (= (x597 (+ x528 32)) x1327) (= (x1200 x975 x734 x1017 x543) x1542) (< x223 x1301) (= (x597 (+ 32 x223)) x1301) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x975 (x714 x1301)) (not (= x223 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x528 (x597 (+ 32 x1371)))) (or (and x1075 (and (= x1016 1) (= x1071 0) (= x1301 x1506) (= 0 x1295))) (and (not x1075) (and (= 0 x1016) (= x1071 0) (= x1301 x1506) (= x1295 x678))))))) (and (= (x82 x1047) x1434) (= x666 (x82 x89)) (= x89 (+ x1047 32)) (= (> x666 57896044618658097711785492504343953926418782139537452191302581570759080747168) x1422) (= (x429 x287 248) x137) (= (x82 x129) x287) (= x129 (+ x89 32)))) x585) x67) (=> (and (not x585) (and (= x540 (x82 x590)) (= x273 x540) (= x223 x153) (= 2 x898) (= 0 x1262))) x1480))) x1135))))))))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x499 x360))
(assert (=> (<= x1195 10000) (= 0 (x479 x1195))))
(assert (x499 x627))
(assert (x499 x1364))
(assert (< (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x818))
(assert (x499 x302))
(assert (= (and (not x538) x1478) x794))
(assert (x499 x1095))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (= (x1207 x57 x1268) (x479 (x1207 x57 x1268))))
(assert (x499 x754))
(assert (= (or x529 x671) x326))
(assert (> (x575 x921 x1264 x1352) 10000))
(assert (not (x1275 (x1553 x370 x1101 x1161 x161 x763 x893))))
(assert (= (and x422 (not x1382)) x1122))
(assert (x499 x959))
(assert (= x1372 (x1038 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (x375 x363))
(assert (x499 x1393))
(assert (x499 x207))
(assert (x499 x1304))
(assert (x499 x609))
(assert (x499 x1389))
(assert (< (x316 66 x792 x1030 x26) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x646))
(assert (x499 x1080))
(assert (x1275 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (x499 x586))
(assert (x1021 x1318 1461501637330902918203684832716283019655932542976))
(assert (x1021 x219 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1189 10000) (= 0 (x479 x1189))))
(assert (= (x1207 x370 x467) (x479 (x1207 x370 x467))))
(assert (=> (<= x681 10000) (= 0 (x479 x681))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1207 x370 x467)))
(assert (x499 x1552))
(assert (= x1089 (x635 (x575 x759 x39 x1089))))
(assert (=> (>= 10000 x128) (= 0 (x479 x128))))
(assert (< 10000 (x1252 0)))
(assert (x499 x344))
(assert (= x1463 (x1038 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (x499 x447))
(assert (= x1096 (x994 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (x499 x63))
(assert (x499 x1247))
(assert (x499 x1545))
(assert (x499 x129))
(assert (=> (>= 10000 x250) (= (x479 x250) 0)))
(assert (= x1549 (x784 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (x499 x307))
(assert (x499 x989))
(assert (= x57 (x1499 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (x499 x871))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x499 x1011))
(assert (x499 x1436))
(assert (=> (>= 10000 x1335) (= (x479 x1335) 0)))
(assert (x499 x458))
(assert (=> (>= 10000 x1183) (= 0 (x479 x1183))))
(assert (< (x1207 x88 x863) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x479 18446744073709551615) 0))
(assert (x499 x894))
(assert (=> (<= x1058 10000) (= 0 (x479 x1058))))
(assert (x499 x1027))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (=> (<= x754 10000) (= (x479 x754) 0)))
(assert (x499 x1229))
(assert (= (=> (and (= (not (< 4 x1180)) x164) (= x1299 (x233 x1192)) (= (x597 (+ 32 x34)) x786) (= (x597 (+ x1192 32)) x1325)) (and (=> (and (= x1325 x781) (= 4 x50) (= x786 x1279)) x836) x164)) x859))
(assert (not (x1275 (x316 x334 x841 x1195 x872))))
(assert (x499 x588))
(assert (x499 x1462))
(assert (x499 x766))
(assert (x672 x1342))
(assert (= (x635 (x1553 x921 x21 x655 x1236 x1366 x935)) x655))
(assert (x499 x1433))
(assert (=> (<= x1520 10000) (= (x479 x1520) 0)))
(assert (x499 x1435))
(assert (x499 x628))
(assert (= x574 (x248 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764))))
(assert (= x358 (x945 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (x985 x1342))
(assert (x499 x656))
(assert (x499 x1069))
(assert (x499 x57))
(assert (x499 x24))
(assert (x499 x893))
(assert (= (x557 x759 x544 x254 x796 x1064 x171 x914 x1463) (x479 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (x499 x534))
(assert (= (and x285 x1422) x320))
(assert (x499 x1202))
(assert (=> (>= 10000 x110) (= 0 (x479 x110))))
(assert (=> (>= 10000 x996) (= (x479 x996) 0)))
(assert (= (x945 (x1553 x1374 x561 x865 x1074 x498 x139)) x561))
(assert (< (x376 x88 x1490 x649 x386 x832) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x664 10000) (= (x479 x664) 0)))
(assert (x499 x1068))
(assert (x499 x524))
(assert (x499 x804))
(assert (x499 x487))
(assert (= (x1499 (x1207 x370 x467)) x370))
(assert (=> (<= x1435 10000) (= (x479 x1435) 0)))
(assert (x499 x917))
(assert (x499 x569))
(assert (= (x479 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)) (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)))
(assert (x499 x484))
(assert (x499 x1017))
(assert (x499 x743))
(assert (x499 x1070))
(assert (= x385 (or x1471 x943)))
(assert (=> (>= 10000 x394) (= (x479 x394) 0)))
(assert (=> (>= 10000 x1377) (= (x479 x1377) 0)))
(assert (x499 x80))
(assert (< (x116 x103 x903 x344 x127 x664 x454 x1096) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1125 (and x1006 x155)))
(assert (< (x1252 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x784 (x1553 x88 x1013 x13 x545 x1351 x1557)) x545))
(assert (= (x316 x759 x1124 x1377 x1435) (x479 (x316 x759 x1124 x1377 x1435))))
(assert (= x759 (x1499 (x1207 x759 x967))))
(assert (x499 x406))
(assert (x499 x973))
(assert (x499 x92))
(assert (= (x784 (x1553 x759 x695 x378 x317 x15 x944)) x317))
(assert (=> (>= 10000 x981) (= (x479 x981) 0)))
(assert (= x390 (x945 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494))))
(assert (x499 x317))
(assert (x985 x487))
(assert (=> (>= 10000 x1372) (= (x479 x1372) 0)))
(assert (=> (<= x725 10000) (= 0 (x479 x725))))
(assert (x499 x1529))
(assert (x499 x151))
(assert (x499 x1000))
(assert (=> (>= 10000 x195) (= (x479 x195) 0)))
(assert (= (x635 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x1278))
(assert (x733 32))
(assert (x499 x85))
(assert (=> (>= 10000 x544) (= (x479 x544) 0)))
(assert (x499 x1270))
(assert (=> (<= x378 10000) (= (x479 x378) 0)))
(assert (x499 x513))
(assert (< 10000 (x376 x1374 x506 x51 x1202 x478)))
(assert (x1021 x1262 1461501637330902918203684832716283019655932542976))
(assert (x1275 134217728))
(assert (x499 x955))
(assert (x499 x1470))
(assert (= (x635 (x376 x57 x220 x53 x537 x745)) x53))
(assert (x499 x1335))
(assert (x499 x135))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x1275 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (x499 x845))
(assert (x499 x448))
(assert (x499 x1053))
(assert (x375 x1348))
(assert (x499 x584))
(assert (x499 x905))
(assert (< (x1553 x759 x695 x378 x317 x15 x944) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x952))
(assert (x499 x162))
(assert (=> (<= x57 10000) (= (x479 x57) 0)))
(assert (x499 x1540))
(assert (= x90 (=> (and (<= x1276 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x176 (x1357 x991)) (= (x1357 160) x1042) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1276)) (= x1210 (x597 (+ x1276 32))) (not (= x1276 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x991 (x1357 x398)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1276) (<= x1276 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x364) (= 1 x371) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1276)) (= (> x176 0) x1432) (< x1276 x1210) (= x677 (x1357 x1042)) (= x371 (x1357 x1276))) (and (=> (not x1432) x132) (=> (and (and (= (x1357 x1316) x277) (>= x1345 1) (>= 5 x588) (= x1316 (x597 (+ x991 32))) (= x964 (= x1483 0)) (= (x1357 x277) x588) (= (ite (= 1 x588) 1 0) x1483) (= (x1357 x991) x1345)) x1432) (and (=> (and (and (and (= (> x199 0) x155) (= (x1357 x277) x1181) (<= x1181 5) (= x199 (ite (= 2 x1181) 1 0))) (or (and x155 (= x199 1)) (and (and (= x124 (x1357 x277)) (= x124 3) (= 1 x92)) (not x155)))) x964) x1528) (=> (and (and (<= x915 1461501637330902918203684832716283019655932542975) (<= 1 x915) (= x915 (x427 1461501637330902918203684832716283019655932542975 x444)) (= (x1357 x1244) x444) (= x160 x915) (= (x597 (+ x277 128)) x1244)) (not x964)) x1476)))))))
(assert (=> (>= 10000 x53) (= 0 (x479 x53))))
(assert (x985 x1326))
(assert (= x1374 (x1499 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (=> (>= 10000 x1433) (= (x479 x1433) 0)))
(assert (x499 x664))
(assert (x1149 x1005))
(assert (=> (<= x1411 10000) (= 0 (x479 x1411))))
(assert (x1021 x678 1461501637330902918203684832716283019655932542976))
(assert (x499 x864))
(assert (= x80 (x635 (x575 x103 x468 x80))))
(assert (x499 x102))
(assert (=> (>= 10000 x139) (= 0 (x479 x139))))
(assert (x499 x502))
(assert (=> (<= x1447 10000) (= 0 (x479 x1447))))
(assert (x499 x1401))
(assert (x499 x759))
(assert (= x1415 (=> (and (= (x351 x880) x571) (= x547 (> x440 0)) (= x440 (x351 x571))) (and (=> (and (not x547) (= x584 x336)) x7) (=> (and (and (or (and (and (= x1487 (< 32 x522)) (= x861 (x510 x680)) (not x1487)) x1020) (not x1020)) (and (= (> x522 0) x1020) (= (x597 (+ x144 32)) x704) (= x1504 (x597 (+ 32 x85))) (= x1098 (x597 (+ 32 x584))) (= x145 (x351 x85)) (= (x351 x144) x1387) (= x1564 (x351 x1083)) (= (x427 1461501637330902918203684832716283019655932542975 x1564) x1229) (<= 1 x145) (= (x597 (+ 32 x595)) x680) (= x1023 (x597 (+ x960 32))) (= x391 (x597 (+ 128 x1098))) (= x595 (x351 x704)) (= x85 (x351 x880)) (= x960 (x597 (+ 32 x1098))) (= x4 (x597 (+ 32 x391))) (= (x729 x595) x522) (= (x597 (+ 32 x1023)) x774) (= (x597 (+ 32 x1083)) x144) (= (x351 x1504) x1083))) x547) x167)))))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x499 x1098))
(assert (x499 x512))
(assert (x499 x895))
(assert (=> (<= x717 10000) (= 0 (x479 x717))))
(assert (= (and (not x1152) x913) x617))
(assert (= (x945 (x316 x1374 x757 x1451 x338)) x757))
(assert (x499 x1051))
(assert (not (x1275 (x316 x370 x1011 x998 x1408))))
(assert (= (x945 (x316 x370 x1011 x998 x1408)) x1011))
(assert (x499 x708))
(assert (x499 x843))
(assert (=> (>= 10000 x1278) (= (x479 x1278) 0)))
(assert (= (x248 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)) x826))
(assert (= x998 (x635 (x316 x370 x1011 x998 x1408))))
(assert (= (x945 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463)) x544))
(assert (x499 x1240))
(assert (x499 x665))
(assert (x499 x161))
(assert (x499 x1023))
(assert (= (x479 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (x499 x780))
(assert (x499 x53))
(assert (= (x945 (x1207 x1374 x1008)) x1008))
(assert (= (x479 (x1553 x921 x21 x655 x1236 x1366 x935)) (x1553 x921 x21 x655 x1236 x1366 x935)))
(assert (x499 x1255))
(assert (= x649 (x635 (x376 x88 x1490 x649 x386 x832))))
(assert (x499 x1492))
(assert (= x447 (x945 (x1207 x103 x447))))
(assert (x499 x1257))
(assert (x499 x1244))
(assert (x1021 x1564 1461501637330902918203684832716283019655932542976))
(assert (= x139 (x248 (x1553 x1374 x561 x865 x1074 x498 x139))))
(assert (< 10000 (x575 x57 x717 x74)))
(assert (= x764 (x1038 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764))))
(assert (= (x635 (x575 x334 x357 x1258)) x1258))
(assert (< 10000 (x116 x57 x1081 x442 x920 x1138 x979 x250)))
(assert (x499 x1474))
(assert (=> (<= x792 10000) (= (x479 x792) 0)))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x499 x27))
(assert (not (x1275 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185))))
(assert (x499 x134))
(assert (= (x479 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)) (x116 x921 x1453 x1367 x1520 x394 x308 x1142)))
(assert (x1149 x487))
(assert (x1275 2189116922))
(assert (= x1220 (x994 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (x499 x591))
(assert (not (x1275 (x1553 x1374 x561 x865 x1074 x498 x139))))
(assert (=> (<= x1011 10000) (= (x479 x1011) 0)))
(assert (x499 x984))
(assert (x499 x1463))
(assert (x499 x278))
(assert (x499 x698))
(assert (< (x1553 x103 x860 x1000 x419 x855 x1446) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x1265))
(assert (= x1243 (and x956 x385)))
(assert (x985 32))
(assert (= (x945 (x376 x370 x1183 x1208 x966 x303)) x1183))
(assert (=> (>= 10000 x759) (= 0 (x479 x759))))
(assert (not (x1275 (x575 64 x703 1))))
(assert (x499 x20))
(assert (x499 x160))
(assert (x499 x51))
(assert (=> (<= x478 10000) (= (x479 x478) 0)))
(assert (x499 x706))
(assert (x499 x792))
(assert (x499 x914))
(assert (x499 x684))
(assert (< 10000 (x316 x921 x19 x1189 x24)))
(assert (=> (<= x254 10000) (= 0 (x479 x254))))
(assert (x499 x906))
(assert (x499 x537))
(assert (x499 x1197))
(assert (= x683 (x635 (x575 x1374 x110 x683))))
(assert (< (x316 x88 x46 x397 x996) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x39 (x945 (x575 x759 x39 x1089))))
(assert (x499 x713))
(assert (x499 x1016))
(assert (x499 x703))
(assert (x499 x1192))
(assert (x499 x797))
(assert (= (x575 64 x703 1) (x479 (x575 64 x703 1))))
(assert (x499 x4))
(assert (x672 x1318))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1207 x759 x967)))
(assert (= x442 (x635 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (< 10000 (x316 x759 x1124 x1377 x1435)))
(assert (= x370 (x1499 (x116 x370 x410 x443 x299 x1109 x1163 x302))))
(assert (=> (>= 10000 x1386) (= 0 (x479 x1386))))
(assert (x499 x1408))
(assert (=> (<= x15 10000) (= (x479 x15) 0)))
(assert (= x370 (x1499 (x376 x370 x1183 x1208 x966 x303))))
(assert (= 0 (x479 18446744073709551455)))
(assert (=> (<= x1545 10000) (= (x479 x1545) 0)))
(assert (= (x341 (x1553 x921 x21 x655 x1236 x1366 x935)) x1366))
(assert (= x127 (x784 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (x499 x284))
(assert (=> (>= 10000 x224) (= (x479 x224) 0)))
(assert (x499 x867))
(assert (> (x575 64 x703 1) 10000))
(assert (x1021 x1222 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1352 10000) (= 0 (x479 x1352))))
(assert (x499 x602))
(assert (x499 x624))
(assert (=> (<= x863 10000) (= 0 (x479 x863))))
(assert (x733 x1051))
(assert (=> (<= x310 10000) (= 0 (x479 x310))))
(assert (x499 x176))
(assert (not (x1275 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (=> (>= 10000 x133) (= 0 (x479 x133))))
(assert (x499 x542))
(assert (x499 x409))
(assert (x499 x966))
(assert (x985 x1348))
(assert (x499 x390))
(assert (> (x575 x370 x209 x1497) 10000))
(assert (x499 x425))
(assert (x60 32 x205))
(assert (not (x1275 (x1207 x921 x905))))
(assert (= (x635 (x116 x103 x903 x344 x127 x664 x454 x1096)) x344))
(assert (=> (>= 10000 x161) (= (x479 x161) 0)))
(assert (x60 32 x534))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (x60 160 x822))
(assert (x499 x222))
(assert (x499 x473))
(assert (= (or x180 x58) x1344))
(assert (x499 x324))
(assert (x499 x953))
(assert (x1003 x938))
(assert (x499 x1416))
(assert (x499 x281))
(assert (x499 x541))
(assert (x499 x1096))
(assert (=> (>= 10000 x357) (= (x479 x357) 0)))
(assert (= x180 (and (not x1178) x866)))
(assert (x499 x769))
(assert (x499 x1501))
(assert (= (x945 (x1207 x921 x905)) x905))
(assert (x499 x361))
(assert (= (x1499 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x103))
(assert (x499 x571))
(assert (= (=> (and (= x871 (x597 (+ x957 32))) (>= 18446744073709551615 x541) (= (x597 (+ 32 x1168)) x323) (<= x541 18446744073709551614) (= (x597 (+ 160 x541)) x627) (= (x728 x957) x1154) (or (>= x541 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x541 18446744073709551455)) (= (x728 x11) x1150) (>= 5 x1154) (= (x728 x871) x1095) (or (>= x541 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x541 18446744073709551455)) (>= 1461501637330902918203684832716283019655932542975 x1095) (> x627 x541) (= (x597 (+ 32 x450)) x1168) (not (< x627 x541)) (= (x597 (+ x323 32)) x258) (= (x728 x276) x242) (<= x541 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1150 1461501637330902918203684832716283019655932542975) (= (x597 (+ 32 x871)) x276) (= x11 (x597 (+ 32 x987))) (>= 18446744073709551615 x541) (= (x597 (+ 32 x541)) x450) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x541)) (= x797 (x1110 (- x1539 x957))) (= x931 (x728 x987)) (<= x797 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x957) (<= x957 2065879269284)) (<= x541 18446744073709551614) (= x987 (x597 (+ x276 32))) (= x601 (not (> x776 1))) (<= 160 x797)) (and x601 (=> (= x1361 x627) x1459))) x854))
(assert (x499 x443))
(assert (=> (>= 10000 x874) (= 0 (x479 x874))))
(assert (= (x945 (x575 x88 x1151 x1545)) x1151))
(assert (x499 x600))
(assert (x499 x224))
(assert (x499 x1287))
(assert (=> (>= 10000 x944) (= (x479 x944) 0)))
(assert (x499 x626))
(assert (> (x575 x88 x1151 x1545) 10000))
(assert (=> (>= 10000 x1443) (= (x479 x1443) 0)))
(assert (x499 x1242))
(assert (= (x1499 (x575 x88 x1151 x1545)) x88))
(assert (x499 x1001))
(assert (x499 x313))
(assert (x499 x453))
(assert (x60 32 (- x384 1)))
(assert (x499 x1386))
(assert (x499 x1028))
(assert (= (or x686 x326) x1398))
(assert (x499 x1515))
(assert (= x1374 (x1499 (x575 x1374 x110 x683))))
(assert (x499 x1276))
(assert (not (x1275 (x1252 0))))
(assert (= (x1553 x57 x857 x1215 x1221 x656 x840) (x479 (x1553 x57 x857 x1215 x1221 x656 x840))))
(assert (x1149 x1262))
(assert (> (x575 x103 x468 x80) 10000))
(assert (=> (>= 10000 x824) (= (x479 x824) 0)))
(assert (x499 x823))
(assert (x499 x828))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (< (x316 x921 x19 x1189 x24) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x35 x12) x519))
(assert (= (x479 (x116 x57 x1081 x442 x920 x1138 x979 x250)) (x116 x57 x1081 x442 x920 x1138 x979 x250)))
(assert (= x697 (and x5 (not x1116))))
(assert (= (x1499 (x1207 x921 x905)) x921))
(assert (=> (<= x1557 10000) (= (x479 x1557) 0)))
(assert (x499 x1561))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564820036) 0))
(assert (x499 x8))
(assert (x499 x1468))
(assert (< 10000 (x116 x103 x903 x344 x127 x664 x454 x1096)))
(assert (not (x1275 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (x499 x1101))
(assert (=> (<= x301 10000) (= 0 (x479 x301))))
(assert (x499 x413))
(assert (= (x479 18446746139588821059) 0))
(assert (x499 x185))
(assert (= (x635 (x116 x370 x410 x443 x299 x1109 x1163 x302)) x443))
(assert (x499 x699))
(assert (=> (<= x1030 10000) (= 0 (x479 x1030))))
(assert (=> (>= 10000 x927) (= (x479 x927) 0)))
(assert (=> (>= 10000 x979) (= 0 (x479 x979))))
(assert (< (x316 x370 x1011 x998 x1408) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x1150))
(assert (x733 x384))
(assert (x499 x761))
(assert (= (x635 (x575 x921 x1264 x1352)) x1352))
(assert (x499 x1374))
(assert (x985 x1005))
(assert (= x1202 (x784 (x376 x1374 x506 x51 x1202 x478))))
(assert (x499 x788))
(assert (= (x1499 (x1553 x88 x1013 x13 x545 x1351 x1557)) x88))
(assert (x499 x618))
(assert (= (x945 (x316 x57 x224 x301 x1402)) x224))
(assert (x499 x237))
(assert (=> (>= 10000 x613) (= 0 (x479 x613))))
(assert (= x285 (and x175 x585)))
(assert (x499 x521))
(assert (x499 x198))
(assert (x499 x796))
(assert (not (x1275 (x316 x57 x224 x301 x1402))))
(assert (= x119 (and x365 (not x814))))
(assert (x1149 x1342))
(assert (=> (<= x1101 10000) (= 0 (x479 x1101))))
(assert (x499 x322))
(assert (x499 x287))
(assert (x60 32 x776))
(assert (x499 x298))
(assert (x499 x252))
(assert (=> (<= x1120 10000) (= (x479 x1120) 0)))
(assert (x499 x1196))
(assert (x499 x651))
(assert (< (x376 x57 x220 x53 x537 x745) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x987))
(assert (x499 x1127))
(assert (= (x248 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x890))
(assert (x499 x1450))
(assert (=> (<= x501 10000) (= (x479 x501) 0)))
(assert (x499 x1250))
(assert (x1021 x1468 1461501637330902918203684832716283019655932542976))
(assert (< (x376 x1374 x506 x51 x1202 x478) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x750))
(assert (not (x1275 (x376 x103 x36 x676 x1187 x489))))
(assert (x499 x667))
(assert (x499 x309))
(assert (= (x1499 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x334))
(assert (x499 x1350))
(assert (x499 x158))
(assert (= (x1499 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) x88))
(assert (= x1063 (and (not x155) x1006)))
(assert (= (x248 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463)) x171))
(assert (x499 x1326))
(assert (x499 x37))
(assert (x499 x1188))
(assert (= (x248 (x1553 x759 x695 x378 x317 x15 x944)) x944))
(assert (= x559 (=> (and (= (x728 x512) x907) (<= x879 18446744073709551613) (or (<= x1184 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1184)) (<= x208 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (+ 32 x1197) x787) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x879) (<= x879 18446744073709551518)) (= x1339 (x597 (+ 32 x512))) (= x746 (+ x965 63)) (or (<= x586 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x586)) (>= 18446744073709551615 x1182) (= (x597 (+ 32 x1184)) x1526) (or (>= x909 57896044618658097711785492504343953926634992332820282019728792003956564820100) (>= 18446746139588821059 x909)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x909) (> x951 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x909 x951) (= (<= x909 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x951)))) (= x194 (not (> x1105 x1339))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x879) (<= x879 18446744073709551518)) (= x799 (x728 x1526)) (<= x879 18446744073709551614) (or (>= x879 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 18446744073709551518 x879)) (>= 18446744073709551613 x879) (= x1519 (x728 x1184)) (>= 18446744073709551613 x879) (= x965 (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1297)) (= (x597 (+ 32 x586)) x1310) (= x208 (x1110 (- x909 x1184))) (= x634 (x597 (+ x599 32))) (= x951 (x597 (+ 31 x586))) (not (< x1197 x879)) (>= 18446744073709551614 x453) (<= x1519 1461501637330902918203684832716283019655932542975) (not (> x1076 x909)) (<= 2 x1425) (> x1425 x1197) (= (x597 (+ x1304 x1310)) x1076) (>= 18446744073709551614 x879) (< x879 x1197) (= (x597 (+ 96 x879)) x1197) (= x1182 (x728 x886)) (<= x1425 18446744073709551615) (>= 18446744073709551615 x907) (= x1297 (+ 31 x1304)) (= x1184 (x597 (+ x907 x512))) (or (>= x512 57896044618658097711785492504343953926634992332820282019728792003956564820068) (<= x512 18446746139588821027)) (= x453 (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x746)) (= (+ x1197 x453) x1425) (= x1304 (x728 x586)) (>= 18446744073709551615 x1304) (= (x597 (+ x1182 x1184)) x586) (<= 96 x208) (= (x597 (+ x879 32)) x599) (>= 18446744073709551614 x879) (= x886 (x597 (+ 32 x1526))) (not (< x1425 x1197)) (= (+ x1304 x787) x1466)) (and x194 (=> (= x113 x1425) x631)))))
(assert (x1275 2065879269376))
(assert (= (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764) (x479 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764))))
(assert (= x726 (and x285 (not x1422))))
(assert (x499 x197))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (= (x945 (x376 x334 x432 x114 x1511 x435)) x432))
(assert (x760 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x499 x566))
(assert (x672 x363))
(assert (x499 x1262))
(assert (= (x784 (x316 x57 x224 x301 x1402)) x1402))
(assert (x499 x1497))
(assert (x499 x1163))
(assert (x499 x292))
(assert (=> (>= 10000 x1452) (= 0 (x479 x1452))))
(assert (= (x994 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x1043))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x499 x276))
(assert (x499 x1264))
(assert (= (and x1176 (not x912)) x300))
(assert (not (x1275 (x316 x921 x19 x1189 x24))))
(assert (x499 x241))
(assert (x499 x873))
(assert (x499 x110))
(assert (= (and (not x1560) x980) x1427))
(assert (= x454 (x248 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (x499 x630))
(assert (x499 x258))
(assert (x1003 x45))
(assert (x499 x182))
(assert (x499 x410))
(assert (=> (<= x1213 10000) (= 0 (x479 x1213))))
(assert (x499 x305))
(assert (x499 x381))
(assert (x499 x138))
(assert (x1149 x677))
(assert (= x921 (x1499 (x316 x921 x19 x1189 x24))))
(assert (= x156 (x1038 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156))))
(assert (x499 x1464))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x575 x88 x1151 x1545)))
(assert (x1275 18446744073709551455))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x499 x482))
(assert (x499 x113))
(assert (x499 x47))
(assert (= (x784 (x1553 x334 x226 x1386 x824 x1411 x1136)) x824))
(assert (x499 x851))
(assert (x499 x554))
(assert (x672 x1348))
(assert (x499 x91))
(assert (x499 x826))
(assert (not (x1275 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (= (x994 (x116 x57 x1081 x442 x920 x1138 x979 x250)) x250))
(assert (= (x479 134217728) 0))
(assert (x499 x1312))
(assert (x499 x1318))
(assert (x499 x863))
(assert (=> (>= 10000 x1013) (= 0 (x479 x1013))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)))
(assert (x499 x407))
(assert (x499 x1316))
(assert (x499 x907))
(assert (x499 x610))
(assert (= (x635 (x316 x88 x46 x397 x996)) x397))
(assert (x1021 x1297 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x615))
(assert (= x1162 (=> (and (and (and (= x703 x1308) (= false x315)) (and (and (and (and (= x97 x721) (and (and (and (= x1090 x1428) (and (and (= (x247 x1230) x1113) (= x1417 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= x1026 x867) (= x995 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= x750 2189116922) (>= x45 32) (= x618 (x1271 x261)) (= x969 false) (>= 127 x607) (<= x607 127) (>= x1113 1) (= x816 x261) (= (x1147 x1230) x867) (<= x45 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= 128 x63) (= x535 (< 0 x1242)) (= false x1170)) (or (and (= x1242 x715) (not x535)) (and (and (<= 32 x45) (= x715 1) (<= x45 4294967295)) x535)))) (= x609 x816)) (and (= x923 x1539) (= x1341 false) (= x362 x101)))) (and (= (+ 32 x278) x1057) (= (+ 420 x104) x73) (= (+ x48 x1324 32) x923) (= x569 (- x278 36)) (= x889 x735) (= (* 32 x1312) x1324) (= (- x48 36) x158) (= x740 x431) (= x278 (+ 32 x296 x73)) (= (* x384 32) x1512) (<= x889 x1512) (= x104 (* 128 x669)) (= x813 (* x822 160)) (= x186 (- x73 36)) (= (+ 32 x1001) x1337) (= (* x983 160) x296) (<= x384 134217728) (= x1423 (* 32 (- x384 1))) (= (+ x813 x278 32) x1001) (= (+ 32 x48) x919) (= x234 (+ x73 32)) (= x758 (- x1001 36)) (< x1423 x889) (= (+ x1512 32 x1001) x48) (<= 0 x384))) (= x756 x1034)) (and (<= 676 x1539) (= (x575 64 x703 1) x421) (= false x1079) (= x281 (x801 x421)) (= x701 false) (>= 127 x1233) (= x819 false) (<= x1233 127) (= false x637) (= x126 (x1360 x94)) (= x235 32) (= x897 1889567281) (= x927 x816) (= false x783) (= x1029 (x168 x927)) (= x1052 false) (>= 2065879269444 x1539) (= x1287 (x247 x94)) (= x1534 x126) (= x281 x1158) (<= 1 x1287)))) (and (= x185 x1308) (>= 1461501637330902918203684832716283019655932542975 x47) (>= 4294967295 x56) (not (= x747 x94)) (<= 1 x47) (= x1209 x727) (>= 1461501637330902918203684832716283019655932542975 x185) (= (< 0 (x247 x94)) x1510) (not (= x1230 x185)) (not (= x1230 x94)) (<= 0 x1090) (= x1336 (> (x247 x716) 0)) x229 (= x1355 (< 0 (x247 x747))) (not (= x1250 x94)) (<= x822 4294967295) (<= 0 x816) (not (= x716 x1250)) (<= 64 x56) (>= 1461501637330902918203684832716283019655932542975 x727) (<= x1312 4294967295) (not (= x1230 x1250)) (>= x160 1) (= x108 (= x94 x491)) (>= x727 1) (not (= x716 x747)) (>= 4294967295 x669) (<= 0 x431) (>= 1461501637330902918203684832716283019655932542975 x1309) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x721) (not (= x716 x94)) (not (= x1230 x727)) x1054 (<= x1395 4294967295) (not (= x1443 x681)) (not (= x185 x716)) (= (> (x247 x185) 0) x1509) x1510 (>= 1461501637330902918203684832716283019655932542975 x681) (= (x963 32) x491) (not (= x681 x727)) (= x681 x690) (<= x993 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1253 1461501637330902918203684832716283019655932542975) (= x1097 (> (x247 x1250) 0)) (not (= x716 x681)) x568 (<= 1 x1443) (not (= x727 x94)) (>= x681 1) (not (= x1230 x681)) (>= x747 1) (>= x1250 1) (= x229 (< 0 (x247 x727))) (>= 1461501637330902918203684832716283019655932542975 x491) (<= 1 x94) (<= 0 x721) (<= x1239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x289) (= x1143 0) (not (= x747 x681)) (= x47 x727) (= (< 0 (x247 x681)) x1054) (not (= x1443 x185)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x101) (>= 4294967295 x983) (not (= x727 x1443)) (>= 4294967295 x735) x1355 (not (= x1230 x1443)) (<= 0 x756) x1509 (not (= x727 x716)) (not (= x1250 x747)) (>= x1239 0) (>= 1461501637330902918203684832716283019655932542975 x1338) (>= x101 0) (<= 1 x669) (<= x1250 1461501637330902918203684832716283019655932542975) (<= x756 1461501637330902918203684832716283019655932542975) (<= 0 x993) (not (= x1230 x716)) (not (= x681 x1250)) (>= 1461501637330902918203684832716283019655932542975 x1209) (>= x289 0) (<= x94 1461501637330902918203684832716283019655932542975) (not (= x747 x1230)) (not (= x1443 x716)) (>= 4294967295 x212) (= 0 x1022) (>= x491 1) (<= x160 1461501637330902918203684832716283019655932542975) (<= 1 x1209) (not (= x94 x185)) (<= 0 x383) (<= 1 x1230) (not (= x94 x1443)) (<= 1 x185) (= x160 x185) (= 36 x906) (<= x716 1461501637330902918203684832716283019655932542975) x108 (not (= x1250 x185)) (<= 1 x690) (not (= x94 x681)) (not (= x185 x747)) (<= 0 x925) (<= x690 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1443) (not (= x747 x1443)) (<= x349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x431) (>= 1461501637330902918203684832716283019655932542975 x383) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x925) (= x900 x94) (<= x747 1461501637330902918203684832716283019655932542975) x974 x1097 (not (= x727 x747)) (not (= x1250 x727)) (not (= x1443 x1250)) (not (= x727 x185)) (= x974 (< 0 (x247 x1230))) (<= x1230 1461501637330902918203684832716283019655932542975) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1338) (<= 0 x349) x1336 (= (> (x247 x1443) 0) x568) (not (= x681 x185)) (<= 1 x716) (>= 1461501637330902918203684832716283019655932542975 x816))) x1062)))
(assert (< 10000 (x116 x370 x410 x443 x299 x1109 x1163 x302)))
(assert (x499 x902))
(assert (=> (>= 10000 x890) (= (x479 x890) 0)))
(assert (=> (<= x156 10000) (= 0 (x479 x156))))
(assert (not (x1275 (x1553 x57 x857 x1215 x1221 x656 x840))))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x499 x923))
(assert (= (x945 (x376 x103 x36 x676 x1187 x489)) x36))
(assert (= (x479 (x575 x1374 x110 x683)) (x575 x1374 x110 x683)))
(assert (x499 x382))
(assert (x499 x200))
(assert (x499 x1309))
(assert (x499 x497))
(assert (= x921 (x1499 (x575 x921 x1264 x1352))))
(assert (x499 x1036))
(assert (= x921 (x1499 (x1553 x921 x21 x655 x1236 x1366 x935))))
(assert (x499 x736))
(assert (= (x945 (x1553 x103 x860 x1000 x419 x855 x1446)) x860))
(assert (= x74 (x635 (x575 x57 x717 x74))))
(assert (x499 x391))
(assert (= x334 (x1499 (x116 x334 x1379 x275 x505 x1536 x600 x54))))
(assert (< 10000 (x316 x88 x46 x397 x996)))
(assert (not (x1275 (x1207 x88 x863))))
(assert (x499 x946))
(assert (x499 x118))
(assert (= x106 (and x268 (not x1314))))
(assert (=> (>= 10000 x1349) (= (x479 x1349) 0)))
(assert (x499 x294))
(assert (x499 x299))
(assert (=> (<= x1463 10000) (= 0 (x479 x1463))))
(assert (=> (<= x1066 10000) (= (x479 x1066) 0)))
(assert (x1021 x1348 32))
(assert (x499 x1076))
(assert (=> (>= 10000 x338) (= 0 (x479 x338))))
(assert (x499 x1343))
(assert (x499 x1539))
(assert (= (x341 (x1553 x1374 x561 x865 x1074 x498 x139)) x498))
(assert (= x268 (or x926 x668)))
(assert (x672 x677))
(assert (= (x341 (x376 x370 x1183 x1208 x966 x303)) x303))
(assert (=> (>= 10000 x308) (= (x479 x308) 0)))
(assert (x1275 18446746139588821027))
(assert (x499 x256))
(assert (x499 x603))
(assert (< 10000 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)))
(assert (x499 x897))
(assert (x499 x467))
(assert (x760 x287))
(assert (x499 x1411))
(assert (x499 x1441))
(assert (x499 x1258))
(assert (= x695 (x945 (x1553 x759 x695 x378 x317 x15 x944))))
(assert (x499 x94))
(assert (=> (<= x700 10000) (= (x479 x700) 0)))
(assert (x499 x1527))
(assert (x499 x1044))
(assert (x672 x1222))
(assert (x499 x1121))
(assert (= x1074 (x784 (x1553 x1374 x561 x865 x1074 x498 x139))))
(assert (x499 x96))
(assert (=> (>= 10000 x865) (= 0 (x479 x865))))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x1421 (or x266 x930)))
(assert (x1149 x219))
(assert (x499 x704))
(assert (x499 x604))
(assert (= (x994 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) x700))
(assert (x499 x979))
(assert (= (x945 (x1553 x334 x226 x1386 x824 x1411 x1136)) x226))
(assert (> (x1207 x759 x967) 10000))
(assert (x499 x944))
(assert (x499 x402))
(assert (= (x316 66 x792 x1030 x26) (x479 (x316 66 x792 x1030 x26))))
(assert (= x914 (x994 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (= (x635 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x724))
(assert (x499 x1547))
(assert (> (x557 x759 x544 x254 x796 x1064 x171 x914 x1463) 10000))
(assert (x499 x149))
(assert (not (x1275 (x557 x88 x604 x1349 x785 x833 x685 x700 x8))))
(assert (x499 x16))
(assert (x499 x1160))
(assert (> (x316 x334 x841 x1195 x872) 10000))
(assert (= (x945 (x1553 x921 x21 x655 x1236 x1366 x935)) x21))
(assert (< 10000 (x575 x334 x357 x1258)))
(assert (x499 x986))
(assert (= x626 (x635 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (x499 x508))
(assert (x499 x758))
(assert (= 0 (x479 2065879269444)))
(assert (x499 x378))
(assert (= x1195 (x635 (x316 x334 x841 x1195 x872))))
(assert (= (x376 x1374 x506 x51 x1202 x478) (x479 (x376 x1374 x506 x51 x1202 x478))))
(assert (not (x1275 (x116 x370 x410 x443 x299 x1109 x1163 x302))))
(assert (not (x1275 (x575 x334 x357 x1258))))
(assert (= (or x516 x1035) x1478))
(assert (= x980 (and x809 x1346)))
(assert (x499 x1220))
(assert (= (and x1398 (not x709)) x1431))
(assert (x499 x297))
(assert (= (x784 (x376 x921 x1203 x1529 x1270 x667)) x1270))
(assert (x733 x534))
(assert (=> (<= x1185 10000) (= (x479 x1185) 0)))
(assert (x733 x1390))
(assert (not (x1275 (x1553 x103 x860 x1000 x419 x855 x1446))))
(assert (= (x1499 (x1207 x334 x1381)) x334))
(assert (= (x1499 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x370))
(assert (= x866 (or x846 x1243)))
(assert (< (x557 x759 x544 x254 x796 x1064 x171 x914 x1463) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x519 (not x1491)) x943))
(assert (x499 x614))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (=> (<= x537 10000) (= 0 (x479 x537))))
(assert (= (x376 x57 x220 x53 x537 x745) (x479 (x376 x57 x220 x53 x537 x745))))
(assert (x499 x236))
(assert (x499 x595))
(assert (=> (<= x390 10000) (= 0 (x479 x390))))
(assert (=> (<= x649 10000) (= 0 (x479 x649))))
(assert (x733 128))
(assert (x499 x1437))
(assert (x499 x40))
(assert (x499 x1251))
(assert (x499 x228))
(assert (x499 x21))
(assert (x499 x589))
(assert (=> (<= x174 10000) (= (x479 x174) 0)))
(assert (x499 x389))
(assert (x1021 x1088 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x803))
(assert (= x631 (=> (and (= x955 (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1326)) (or (>= x228 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x228 2065879269376)) (= (x597 (+ x324 x38)) x976) (= x852 (x597 (+ 31 x337))) (= x596 (+ 63 x1292)) (= (+ 32 x563) x845) (not (> x958 x909)) (>= 18446744073709551615 x480) (= x515 (+ 32 x845)) (>= 18446744073709551613 x113) (> x206 x1246) (= (+ x955 63) x706) (= (x728 x976) x333) (= x958 (x597 (+ x1131 x480))) (>= x590 1) (<= x38 18446744073709551615) (<= x1390 18446744073709551615) (< x113 x590) (<= x91 18446744073709551614) (= (+ x563 224) x1246) (= x1131 (x597 (+ x337 32))) (= x1390 (x728 x446)) (= x1289 (x597 (+ x333 x216))) (= x1238 (x728 x184)) (>= 18446744073709551615 x333) (= (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x706) x91) (= x1047 (+ x590 32)) (= x471 (* 32 x1390)) (not (< x590 x113)) (= (x597 (+ x1448 x382)) x337) (= x204 (x597 (+ x480 x916))) (>= 18446744073709551615 x563) (<= 2 x563) (< x590 x563) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x337) (<= x337 18446746139588821027)) (or (>= x976 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x976)) (<= x113 18446744073709551614) (= x780 (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x596)) (= x446 (x597 (+ x228 36))) (= (+ x471 x1246 32) x206) (= x590 (x597 (+ x780 x113))) (= (< 0 x1390) x1305) (or (<= x113 18446744073709551614) (>= x113 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (<= x1448 18446744073709551615) (>= 18446744073709551614 x113) (not (> x1289 x909)) (>= 18446744073709551613 x113) (= (x728 x222) x1448) (<= x113 18446744073709551613) (= x916 (x597 (+ x113 32))) (= x363 (+ x480 31)) (= (x728 x142) x330) (> x1246 x563) (= x743 (* x1390 128)) (or (and (<= x909 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1502)) (and (> x909 x1502) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x909) (<= x1502 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x728 x337) x480) (= x1502 (x597 (+ 31 x976))) (not (or (and (= (<= x1356 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552)) (< x1356 x1552)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1356) (<= x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x228 (x728 132)) (= x1356 (x1110 (- x1539 x743))) (not (< x563 x590)) (or (>= x113 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551614 x113)) (= x184 (x597 (+ 32 x23))) (= (x597 (+ 32 x324)) x1436) (= x730 (x728 356)) (<= x330 1461501637330902918203684832716283019655932542975) (= x38 (x728 x1436)) (= x142 (x597 (+ 32 x184))) (<= x113 18446744073709551614) (or (and (> x1530 x228) (= (<= x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x228 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1530) (> x228 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x222 (x597 (+ x225 32))) (= x1326 (+ x333 31)) (= x348 (x728 36)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x852) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x909)) (> x909 x852)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x909) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x852))) (= (+ x91 x590) x563) (= (+ x1047 x333) x1082) (= (x597 (+ x446 32)) x1552) (or (<= x113 18446744073709551614) (>= x113 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (= (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x363) x1292) (= (x597 (+ x976 32)) x216) (<= x590 18446744073709551614) (= (+ x1246 32) x68)) (and (=> (and (= x1388 x206) (not x1305)) x810) (=> x1305 x441)))))
(assert (x499 x1353))
(assert (=> (<= x236 10000) (= 0 (x479 x236))))
(assert (x499 x1058))
(assert (= x57 (x1499 (x1553 x57 x857 x1215 x1221 x656 x840))))
(assert (x499 x1440))
(assert (x499 x1120))
(assert (x499 x1420))
(assert (x499 x1395))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)))
(assert (=> (>= 10000 x425) (= (x479 x425) 0)))
(assert (= x857 (x945 (x1553 x57 x857 x1215 x1221 x656 x840))))
(assert (> (x575 x759 x39 x1089) 10000))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (= (x1553 x370 x1101 x1161 x161 x763 x893) (x479 (x1553 x370 x1101 x1161 x161 x763 x893))))
(assert (x499 x1534))
(assert (< 10000 (x376 x370 x1183 x1208 x966 x303)))
(assert (x499 x184))
(assert (= x266 (and x66 (not x1020))))
(assert (x499 x891))
(assert (x499 x438))
(assert (x499 x899))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1207 x334 x1381)))
(assert (= (x635 (x376 x334 x432 x114 x1511 x435)) x114))
(assert (= x51 (x635 (x376 x1374 x506 x51 x1202 x478))))
(assert (x499 x1123))
(assert (=> (<= x1282 10000) (= 0 (x479 x1282))))
(assert (x1021 x444 1461501637330902918203684832716283019655932542976))
(assert (x499 x440))
(assert (x499 x1288))
(assert (= (x479 (x316 x370 x1011 x998 x1408)) (x316 x370 x1011 x998 x1408)))
(assert (x499 x240))
(assert (x499 x599))
(assert (x499 x1241))
(assert (= (or x106 x95) x1328))
(assert (= (x945 (x376 x57 x220 x53 x537 x745)) x220))
(assert (=> (<= x1268 10000) (= 0 (x479 x1268))))
(assert (not (x1275 (x575 x1374 x110 x683))))
(assert (x499 x1218))
(assert (x499 x674))
(assert (x1149 x79))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x733 160))
(assert (not (x1275 (x1207 x759 x967))))
(assert (= (x479 (x1207 x88 x863)) (x1207 x88 x863)))
(assert (x499 x1554))
(assert (= x1136 (x248 (x1553 x334 x226 x1386 x824 x1411 x1136))))
(assert (x499 x1221))
(assert (x499 x457))
(assert (= (and x1382 x422) x752))
(assert (x499 x1236))
(assert (= x435 (x341 (x376 x334 x432 x114 x1511 x435))))
(assert (= (x1252 0) (x479 (x1252 0))))
(assert (=> (>= 10000 x656) (= (x479 x656) 0)))
(assert (x499 x11))
(assert (= x593 (or x196 (and (not x1432) x77))))
(assert (= x930 (and x66 x1020)))
(assert (x499 x787))
(assert (x672 x746))
(assert (= x196 (or x286 x1272)))
(assert (= x138 (x635 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (not (x1275 (x575 x103 x468 x80))))
(assert (x499 x471))
(assert (x499 x1477))
(assert (=> (>= 10000 x1497) (= 0 (x479 x1497))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1207 x921 x905)))
(assert (x499 x275))
(assert (=> (<= x1000 10000) (= (x479 x1000) 0)))
(assert (x499 x1390))
(assert (x499 x967))
(assert (< 10000 (x316 x1374 x757 x1451 x338)))
(assert (x499 x1154))
(assert (x499 x208))
(assert (= (x945 (x316 x88 x46 x397 x996)) x46))
(assert (x499 x1352))
(assert (x985 x706))
(assert (x499 x1361))
(assert (x499 x880))
(assert (x499 x456))
(assert (=> (<= x517 10000) (= (x479 x517) 0)))
(assert (x499 x1175))
(assert (x375 x1326))
(assert (= (x784 (x316 x759 x1124 x1377 x1435)) x1435))
(assert (=> (>= 10000 x94) (= (x479 x94) 0)))
(assert (x60 32 x1051))
(assert (=> (<= x689 10000) (= 0 (x479 x689))))
(assert (x499 x142))
(assert (x499 x1212))
(assert (x499 x546))
(assert (x499 x234))
(assert (x499 x940))
(assert (= (x479 (x116 x334 x1379 x275 x505 x1536 x600 x54)) (x116 x334 x1379 x275 x505 x1536 x600 x54)))
(assert (x499 x1356))
(assert (x499 x446))
(assert (x499 x1156))
(assert (= (x945 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x1465))
(assert (= x966 (x784 (x376 x370 x1183 x1208 x966 x303))))
(assert (x499 x1451))
(assert (= (x479 (x575 x759 x39 x1089)) (x575 x759 x39 x1089)))
(assert (= (x945 (x116 x370 x410 x443 x299 x1109 x1163 x302)) x410))
(assert (x499 x501))
(assert (= (x994 (x116 x1374 x358 x1335 x314 x1477 x1503 x827)) x827))
(assert (x1021 x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x550))
(assert (x499 x261))
(assert (=> (>= 10000 x1230) (= 0 (x479 x1230))))
(assert (x499 x543))
(assert (x499 x1138))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (=> (>= 10000 x857) (= (x479 x857) 0)))
(assert (x1275 18446744073709551487))
(assert (x499 x1074))
(assert (x499 x1444))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= x1477 (x341 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (x499 x870))
(assert (= x57 (x1499 (x316 x57 x224 x301 x1402))))
(assert (x499 x1526))
(assert (x733 (- x384 1)))
(assert (< (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1021 x596 32))
(assert (=> (<= x454 10000) (= 0 (x479 x454))))
(assert (= (x994 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)) x1447))
(assert (and (= (x6 9 3) 27) (= (x6 27 3) 81) (= 81 (x6 9 9)) (= 9 (x6 3 3))))
(assert (> (x376 x57 x220 x53 x537 x745) 10000))
(assert (=> (>= 10000 x1208) (= 0 (x479 x1208))))
(assert (=> (>= 10000 x727) (= 0 (x479 x727))))
(assert (x499 x1025))
(assert (x499 x996))
(assert (= (and x1344 x527) x789))
(assert (= x671 (and x789 (not x932))))
(assert (x499 x1172))
(assert (not (x1275 (x1553 x921 x21 x655 x1236 x1366 x935))))
(assert (= (x116 x88 x1058 x138 x1549 x1365 x135 x501) (x479 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (> (x376 x103 x36 x676 x1187 x489) 10000))
(assert (=> (>= 10000 x498) (= 0 (x479 x498))))
(assert (= x872 (x784 (x316 x334 x841 x1195 x872))))
(assert (=> (>= 10000 x763) (= (x479 x763) 0)))
(assert (= x12 (and x1328 x1305)))
(assert (< (x575 x921 x1264 x1352) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x945 (x575 x370 x209 x1497)) x209))
(assert (> (x1553 x759 x695 x378 x317 x15 x944) 10000))
(assert (= (x784 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x651))
(assert (=> (<= x1142 10000) (= 0 (x479 x1142))))
(assert (=> (>= 10000 x545) (= (x479 x545) 0)))
(assert (= x1251 (x994 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185))))
(assert (= x310 (x341 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (= 0 (x479 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (x499 x139))
(assert (x499 x373))
(assert (x1003 x798))
(assert (x499 x1203))
(assert (x499 x740))
(assert (> (x1553 x103 x860 x1000 x419 x855 x1446) 10000))
(assert (x985 x79))
(assert (x499 x238))
(assert (x499 x855))
(assert (= (x945 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x1488))
(assert (x499 x206))
(assert (= (x784 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)) x1066))
(assert (x499 x26))
(assert (x499 x79))
(assert (x499 x842))
(assert (x499 x358))
(assert (x499 x1475))
(assert (= (and x1560 x980) x548))
(assert (x499 x366))
(assert (= (x479 (x575 x370 x209 x1497)) (x575 x370 x209 x1497)))
(assert (= (x945 (x1207 x370 x467)) x467))
(assert (= (x1499 (x1553 x370 x1101 x1161 x161 x763 x893)) x370))
(assert (x499 x990))
(assert (x499 x644))
(assert (x499 x88))
(assert (x499 x755))
(assert (= x796 (x784 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (< (x575 x57 x717 x74) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x242))
(assert (x499 x423))
(assert (=> (>= 10000 x494) (= (x479 x494) 0)))
(assert (x499 x1064))
(assert (x499 x364))
(assert (x1021 x1088 32))
(assert (x499 x173))
(assert (= (x479 (x575 x334 x357 x1258)) (x575 x334 x357 x1258)))
(assert (x499 x1139))
(assert (= x1459 (=> (and (not (= x1361 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x597 (+ x553 64)) x881) (not (< x1156 x1428)) (<= x1361 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x728 68) x936) (= x1247 (x728 100)) (= (x772 x1084) x1468) (= x27 x1055) (= (x597 (+ 32 x553)) x644) (> x881 x1361) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1361)) (<= x1361 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x597 (+ 32 x1361)) x1296) (= x27 (x427 1461501637330902918203684832716283019655932542975 x1318)) (= (x1110 (- x152 32)) x646) (>= 1461501637330902918203684832716283019655932542975 x1247) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1361)) (= (x772 160) x1084) (= x152 (x1110 (- x881 x1361))) (= x521 (+ 32 x398)) (= (x772 256) x1318) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1361) (= (+ x521 32) x470) (= (x772 x521) x1005) (= x862 (<= x1374 224)) (= x1374 (x1059 x1361)) (= (x597 (+ 32 x1361)) x553) (<= x936 1461501637330902918203684832716283019655932542975) (= (x427 1461501637330902918203684832716283019655932542975 x1005) x1055) (= (x427 1461501637330902918203684832716283019655932542975 x1468) x884) (= x1156 (x772 224))) (and x862 (=> (and (and (= x1477 (x1059 x552)) (= (x1059 x203) x1066) (= x1139 (x1059 x1562)) (= (x1252 0) x692) (<= 1 x881) (= x166 (x597 (+ 128 x1296))) (= (x1059 x240) x874) (= x602 (x597 (+ x1296 96))) (= (x1059 x1294) x51) (= x1335 (x1059 x438)) (= x865 (x1059 x1241)) (= x757 (x1059 x1296)) (= x1513 (x597 (+ x1296 192))) (= x1562 (x1059 x78)) (= (x1059 x1405) x478) (= (x1207 x1374 x1008) x1461) (= (x597 (+ 64 x1296)) x203) (= x698 (x597 (+ 64 x1296))) (= x948 (x1059 x409)) (= (x1059 x166) x139) (= x358 (x1059 x1296)) (= (x1059 x602) x498) (= (x316 x1374 x757 x1451 x338) x777) (= (x597 (+ x1296 32)) x973) (= (x597 (+ 64 x803)) x78) (= x683 (x1059 x579)) (= x579 (x597 (+ 32 x1296))) (= x1008 (x1059 x1296)) (= x390 (x1059 x1296)) (= (ite (= x1374 0) x692 (ite (>= 32 x1374) x1461 (ite (<= x1374 64) x2 (ite (>= 96 x1374) x777 (ite (>= 128 x1374) x576 (ite (<= x1374 160) x1277 (ite (<= x1374 192) x1438 (ite (<= x1374 224) x829 x978)))))))) x295) (= (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494) x829) (= x373 (x597 (+ 160 x1296))) (> x1343 x881) (= x246 (x597 (+ 64 x1296))) (>= 18446744073709551615 x1139) (= (x1059 x373) x827) (= (x597 (+ 64 x1296)) x1265) (= x803 (x1059 192)) (= x1451 (x1059 x624)) (= (x597 (+ x1296 128)) x240) (= (x597 (+ x1296 96)) x409) (= (= 0 x1139) x1178) (= (x1059 x986) x1447) (= (x1059 x1296) x506) (= (x597 (+ x1296 64)) x788) (<= 2 x1343) (= x1074 (x1059 x246)) (= (x597 (+ x1296 96)) x1405) (= x1241 (x597 (+ x1296 32))) (= (x1059 x1296) x561) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x881) (= x552 (x597 (+ 96 x1296))) (= (x1059 x973) x1107) (= x624 (x597 (+ x1296 32))) (= x1202 (x1059 x698)) (= x110 (x1059 x1296)) (= x1503 (x1059 x887)) (= x1294 (x597 (+ 32 x1296))) (= x314 (x1059 x1265)) (= x887 (x597 (+ 128 x1296))) (= x986 (x597 (+ 160 x1296))) (= (x1059 x788) x338) (= x576 (x376 x1374 x506 x51 x1202 x478)) (= x1277 (x1553 x1374 x561 x865 x1074 x498 x139)) (= x1438 (x116 x1374 x358 x1335 x314 x1477 x1503 x827)) (= x1343 (x597 (+ (mod (+ 32 x830) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x881))) (= (x575 x1374 x110 x683) x2) (= (x597 (+ x1296 32)) x438) (= (* x1139 32) x830) (= x494 (x1059 x1513))) (or x1178 (and (not x1178) (and (= (* x1139 32) x389) (= (x597 (+ 32 x881)) x96))))) x533)))))
(assert (x499 x1137))
(assert (x499 x337))
(assert (= x1454 (x784 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156))))
(assert (x499 x1078))
(assert (x499 x340))
(assert (x499 x642))
(assert (x499 x48))
(assert (= x846 (and x385 (not x956))))
(assert (< (x116 x1374 x358 x1335 x314 x1477 x1503 x827) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1471 (and x1491 x519)))
(assert (x499 x1366))
(assert (= (x635 (x1553 x1374 x561 x865 x1074 x498 x139)) x865))
(assert (x499 x1453))
(assert (x1149 x436))
(assert (< (x116 x759 x1196 x626 x754 x425 x1516 x1220) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x430))
(assert (x1149 x1318))
(assert (x499 x186))
(assert (x499 x392))
(assert (=> (>= 10000 x261) (= (x479 x261) 0)))
(assert (= x1303 (and x809 (not x1346))))
(assert (x499 x1428))
(assert (= x663 (=> (and (and (= (= x1051 0) x1045) (= x1554 1) (<= 2 x584) (> x1450 x153) (or (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x153)) (<= 1 x1444) (or (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x153)) (= (x1321 x845) x159) (= (x1321 x381) x1444) (= (x1321 x880) x83) (= x880 (x597 (+ 32 x381))) (= x1400 (* 32 x1051)) (>= 18446744073709551615 x1051) (< x1450 x584) (= (x597 (+ 32 x153)) x1450) (= (x1321 x153) x1554) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (= (x597 (+ 32 x339)) x381) (>= x335 1) (= x1051 (x1321 x83)) (= x339 (x1321 192)) (= (x597 (+ x1450 (mod (+ x1400 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x584) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (or (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x153))) (or x1045 (and (and (= x55 (x597 (+ 32 x1450))) (= (* 32 x1051) x255)) (not x1045)))) x1415)))
(assert (x499 x1488))
(assert (x499 x202))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x1275 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x724 10000) (= (x479 x724) 0)))
(assert (x1003 x611))
(assert (=> (<= x1102 10000) (= (x479 x1102) 0)))
(assert (x499 x1434))
(assert (x499 x573))
(assert (x733 x1139))
(assert (x499 x1557))
(assert (x499 x107))
(assert (= (and x5 x1116) x809))
(assert (=> (<= x840 10000) (= 0 (x479 x840))))
(assert (x499 x655))
(assert (= (x316 x1374 x757 x1451 x338) (x479 (x316 x1374 x757 x1451 x338))))
(assert (x499 x965))
(assert (x499 x338))
(assert (= x54 (x994 (x116 x334 x1379 x275 x505 x1536 x600 x54))))
(assert (x499 x1102))
(assert (x499 x454))
(assert (=> (>= 10000 x314) (= (x479 x314) 0)))
(assert (x499 x251))
(assert (x499 x1511))
(assert (x499 x941))
(assert (x60 32 x1462))
(assert (x985 x1222))
(assert (x985 1461501637330902918203684832716283019655932542976))
(assert (= (x376 x759 x238 x236 x517 x1396) (x479 (x376 x759 x238 x236 x517 x1396))))
(assert (= x668 (and x18 x535)))
(assert (x499 x924))
(assert (= (x1499 (x376 x759 x238 x236 x517 x1396)) x759))
(assert (x499 x981))
(assert (x672 x219))
(assert (x499 x277))
(assert (< 10000 (x1207 x1374 x1008)))
(assert (x499 x1081))
(assert (x499 x387))
(assert (not (x1275 (x1207 x370 x467))))
(assert (x1021 x1342 1461501637330902918203684832716283019655932542976))
(assert (x499 x1513))
(assert (x60 32 x1390))
(assert (x375 x596))
(assert (= x334 (x1499 (x376 x334 x432 x114 x1511 x435))))
(assert (x499 x785))
(assert (= (x635 (x1553 x57 x857 x1215 x1221 x656 x840)) x1215))
(assert (x499 x1034))
(assert (x499 x1040))
(assert (=> (<= x651 10000) (= 0 (x479 x651))))
(assert (= x1503 (x248 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (x499 x1185))
(assert (= x1264 (x945 (x575 x921 x1264 x1352))))
(assert (x499 x13))
(assert (x499 x683))
(assert (x985 x1318))
(assert (x1021 x1222 32))
(assert (= (x479 18446744073709551167) 0))
(assert (x499 x951))
(assert (x499 x1213))
(assert (x499 x545))
(assert (x499 x977))
(assert (x499 x1190))
(assert (x499 x858))
(assert (= (x341 (x376 x759 x238 x236 x517 x1396)) x1396))
(assert (x1021 x706 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (= (=> (and (= x273 x1071) (= x1506 x153) (= x898 x1016) (= x1262 x1295)) x1480) x67))
(assert (= (x1553 x1374 x561 x865 x1074 x498 x139) (x479 (x1553 x1374 x561 x865 x1074 x498 x139))))
(assert (x499 x439))
(assert (x499 x1502))
(assert (x499 x334))
(assert (x499 x1518))
(assert (=> (<= x303 10000) (= 0 (x479 x303))))
(assert (=> (>= 10000 x302) (= (x479 x302) 0)))
(assert (x499 x1144))
(assert (= (or x658 x1330) x1340))
(assert (=> (>= 10000 x1381) (= 0 (x479 x1381))))
(assert (x60 32 x1137))
(assert (= (and x1176 x912) x988))
(assert (x499 x1349))
(assert (x499 x975))
(assert (=> (<= x903 10000) (= 0 (x479 x903))))
(assert (x499 x469))
(assert (=> (>= 10000 x695) (= (x479 x695) 0)))
(assert (x499 x798))
(assert (x499 x1043))
(assert (= x57 (x1499 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (x499 x489))
(assert (< 10000 (x1207 x57 x1268)))
(assert (=> (<= x19 10000) (= (x479 x19) 0)))
(assert (x499 x347))
(assert (x499 x434))
(assert (x499 x563))
(assert (x499 x1345))
(assert (x985 x1088))
(assert (x499 x536))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (x499 x1516))
(assert (not (x1275 (x316 x103 x725 x162 x128))))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (=> (>= 10000 x26) (= 0 (x479 x26))))
(assert (x499 x805))
(assert (x499 x73))
(assert (x499 x734))
(assert (= x921 (x1499 (x116 x921 x1453 x1367 x1520 x394 x308 x1142))))
(assert (x499 x1124))
(assert (= x1189 (x635 (x316 x921 x19 x1189 x24))))
(assert (x499 x968))
(assert (x499 x730))
(assert (= (x248 (x116 x334 x1379 x275 x505 x1536 x600 x54)) x600))
(assert (x499 x1327))
(assert (x499 x1283))
(assert (= (x479 37664329658542632380461339884011895550187483938955784695590509376205521682432) 0))
(assert (= x604 (x945 (x557 x88 x604 x1349 x785 x833 x685 x700 x8))))
(assert (=> (>= 10000 x775) (= 0 (x479 x775))))
(assert (x499 x1129))
(assert (x499 x1294))
(assert (x499 x1485))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639777) 0))
(assert (x499 x555))
(assert (x499 x1235))
(assert (x499 x916))
(assert (= (x945 (x116 x103 x903 x344 x127 x664 x454 x1096)) x903))
(assert (x1275 18446746139588821059))
(assert (x1021 x1297 32))
(assert (x499 x1164))
(assert (= (x994 (x116 x88 x1058 x138 x1549 x1365 x135 x501)) x501))
(assert (= x689 (x994 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (x499 x1332))
(assert (x499 x653))
(assert (x499 x38))
(assert (x499 x835))
(assert (x499 x872))
(assert (x499 x522))
(assert (=> (<= x443 10000) (= (x479 x443) 0)))
(assert (x499 x776))
(assert (x499 x1029))
(assert (x499 x841))
(assert (=> (>= 10000 x998) (= 0 (x479 x998))))
(assert (x499 x1417))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564820645) 0))
(assert (x499 x717))
(assert (x499 x370))
(assert (x499 x767))
(assert (< (x316 x57 x224 x301 x1402) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x499 x354))
(assert (= (x1499 (x1553 x1374 x561 x865 x1074 x498 x139)) x1374))
(assert (= x1196 (x945 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (x1021 x363 32))
(assert (x499 x1402))
(assert (x499 x330))
(assert (x499 x1362))
(assert (x499 x727))
(assert (=> (>= 10000 x1454) (= (x479 x1454) 0)))
(assert (< 10000 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)))
(assert (x499 x1447))
(assert (=> (>= 10000 x785) (= 0 (x479 x785))))
(assert (x499 x131))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 x88 x1058 x138 x1549 x1365 x135 x501)))
(assert (x499 x1368))
(assert (=> (>= 10000 x691) (= (x479 x691) 0)))
(assert (= (x116 x1374 x358 x1335 x314 x1477 x1503 x827) (x479 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (= (x316 x103 x725 x162 x128) (x479 (x316 x103 x725 x162 x128))))
(assert (x499 x23))
(assert (x499 x124))
(assert (x499 x74))
(assert (x499 x1465))
(assert (x499 x879))
(assert (x672 x596))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (x499 x1400))
(assert (=> (>= 10000 x796) (= (x479 x796) 0)))
(assert (< 10000 (x1207 x88 x863)))
(assert (=> (<= x1258 10000) (= 0 (x479 x1258))))
(assert (x499 x1339))
(assert (= (x479 (x1553 x759 x695 x378 x317 x15 x944)) (x1553 x759 x695 x378 x317 x15 x944)))
(assert (= x664 (x341 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (x499 x779))
(assert (= x1451 (x635 (x316 x1374 x757 x1451 x338))))
(assert (x499 x1359))
(assert (x499 x55))
(assert (x499 x861))
(assert (= (=> (and (= (x1357 x991) x1007) (= (not (< 1 x1007)) x1273)) (and x1273 x132)) x1476))
(assert (x499 x272))
(assert (x60 128 x1390))
(assert (=> (<= x125 10000) (= (x479 x125) 0)))
(assert (x672 x487))
(assert (= x253 (=> (and (and (= x895 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x1219 (x597 (+ 32 x870))) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x542) (>= x798 32) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x798) (= x870 (x597 (+ x153 4))) (= x1543 (x427 1461501637330902918203684832716283019655932542975 x1262)) (= (> x1332 0) x912)) (or (and (and (>= 4294967295 x798) (= 1 x335) (>= x798 32)) x912) (and (not x912) (= x335 x1332)))) x663)))
(assert (=> (<= x1089 10000) (= 0 (x479 x1089))))
(assert (x499 x1256))
(assert (x672 x1088))
(assert (= x314 (x784 (x116 x1374 x358 x1335 x314 x1477 x1503 x827))))
(assert (= x308 (x248 (x116 x921 x1453 x1367 x1520 x394 x308 x1142))))
(assert (x499 x765))
(assert (< 10000 (x116 x759 x1196 x626 x754 x425 x1516 x1220)))
(assert (x499 x367))
(assert (x499 x352))
(assert (= (x1499 (x316 x88 x46 x397 x996)) x88))
(assert (x499 x1279))
(assert (= x87 (=> (and (= x1462 (x847 x881)) (= x709 (< 0 x1462)) (= x403 (x597 (+ 32 x803))) (= (x597 (+ 32 x241)) x1353) (= (x847 x403) x674) (= (x597 (+ 32 x881)) x1134)) (and (=> (and x709 (and (= (x847 x1134) x207) (= x814 (< 1 x1462)) (= (x597 (+ x1134 32)) x1449) (= (x597 (+ 32 x1353)) x769))) (and (=> (and (and (= 1 x284) (= x1419 x769) (= x1449 x189)) (not x814)) x807) (=> (and (and (= (> x1462 2) x688) (= x606 (x1041 x1449)) (= (x597 (+ x1449 32)) x309) (= x420 (x597 (+ 32 x769)))) x814) (and (=> (and x688 (and (= (x597 (+ 32 x309)) x1285) (= x665 (x346 x309)) (= (> x1462 3) x1152) (= (x597 (+ 32 x420)) x1080))) (and (=> (and (and (= x284 3) (= x189 x1285) (= x1419 x1080)) (not x1152)) x807) (=> x1152 x791))) (=> (and (and (= 2 x284) (= x1419 x420) (= x189 x309)) (not x688)) x807))))) (=> (and (not x709) (and (= x1419 x1353) (= x284 0) (= x189 x1134))) x807)))))
(assert (x499 x267))
(assert (not (x1275 (x1207 x57 x1268))))
(assert (x499 x114))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (= x1035 (or x950 x320 x1260)))
(assert (x499 x1525))
(assert (x499 x1089))
(assert (x499 x154))
(assert (x672 x1262))
(assert (= (x1038 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)) x494))
(assert (= (x1499 (x316 x334 x841 x1195 x872)) x334))
(assert (x1275 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (> (x1207 x103 x447) 10000))
(assert (x499 x800))
(assert (= (x479 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x499 x1490))
(assert (x499 x218))
(assert (x1149 x1564))
(assert (= (=> (and (= x436 (x1357 x1389)) (= x1172 1) (= x298 (x427 1461501637330902918203684832716283019655932542975 x436)) (= x1389 (x597 (+ 128 x277))) (= x298 x719) (= x719 (x427 1461501637330902918203684832716283019655932542975 x677))) x1476) x1528))
(assert (=> (>= 10000 x935) (= 0 (x479 x935))))
(assert (x499 x1050))
(assert (x499 x1179))
(assert (=> (>= 10000 x1040) (= 0 (x479 x1040))))
(assert (= (x341 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x981))
(assert (x499 x15))
(assert (x499 x507))
(assert (x499 x982))
(assert (x499 x1351))
(assert (x1275 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (=> (>= 10000 x1359) (= (x479 x1359) 0)))
(assert (= (=> (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1067) (= (x728 x708) x835) (>= 1461501637330902918203684832716283019655932542975 x1354) (>= 18446744073709551614 x572) (>= 18446744073709551615 x572) (= (x597 (+ 32 x1148)) x696) (= (x597 (+ x708 32)) x1231) (or (>= x572 115792089237316195423570985008687907853269984665640564039457584007913129639777) (>= 18446744073709551455 x572)) (>= 1461501637330902918203684832716283019655932542975 x361) (= (x597 (+ x953 32)) x1148) (= (x597 (+ x1464 32)) x708) (= (x728 x1464) x84) (>= x1067 160) (= x1067 (x1110 (- x1539 x134))) (< x572 x711) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x572)) (or (<= x572 18446744073709551455) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x572)) (<= x1293 5) (>= 18446744073709551614 x572) (= x361 (x728 x1231)) (= x924 (x597 (+ 32 x572))) (= (x597 (+ 32 x941)) x1464) (or (>= 2065879269284 x134) (>= x134 57896044618658097711785492504343953926634992332820282019728792003956564820645)) (= (not (> x534 1)) x659) (= x1293 (x728 x134)) (>= 18446744073709551615 x572) (not (< x711 x572)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x572) (= x711 (x597 (+ 160 x572))) (= (x597 (+ x134 32)) x941) (= x953 (x597 (+ 32 x924))) (= x1354 (x728 x941))) (and x659 (=> (= x713 x711) x605))) x1284))
(assert (= (x1207 x103 x447) (x479 (x1207 x103 x447))))
(assert (= (x248 (x116 x370 x410 x443 x299 x1109 x1163 x302)) x1163))
(assert (x499 x560))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x499 x650))
(assert (x499 x308))
(assert (x499 x1193))
(assert (x499 x75))
(assert (x499 x296))
(assert (x499 x1285))
(assert (x499 x1555))
(assert (x499 x69))
(assert (< (x575 x1374 x110 x683) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x1504))
(assert (x499 x1254))
(assert (= x1381 (x945 (x1207 x334 x1381))))
(assert (< (x376 x334 x432 x114 x1511 x435) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1453 10000) (= 0 (x479 x1453))))
(assert (= x1013 (x945 (x1553 x88 x1013 x13 x545 x1351 x1557))))
(assert (x499 x1536))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1207 x57 x1268)))
(assert (x499 x1126))
(assert (x499 x210))
(assert (x499 x840))
(assert (x499 x764))
(assert (x499 x257))
(assert (not (x1275 (x1553 x759 x695 x378 x317 x15 x944))))
(assert (x499 x629))
(assert (x499 x442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x575 x759 x39 x1089)))
(assert (x672 x1468))
(assert (x499 x498))
(assert (= x1408 (x784 (x316 x370 x1011 x998 x1408))))
(assert (x499 x918))
(assert (=> (<= x655 10000) (= 0 (x479 x655))))
(assert (x499 x1551))
(assert (not (x1275 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486))))
(assert (= (x479 (x1207 x1374 x1008)) (x1207 x1374 x1008)))
(assert (=> (<= x138 10000) (= 0 (x479 x138))))
(assert (x499 x153))
(assert (x499 x887))
(assert (x499 x121))
(assert (x499 x1500))
(assert (x499 x1419))
(assert (= (or x1063 x1125) x286))
(assert (=> (>= 10000 x1511) (= (x479 x1511) 0)))
(assert (x499 x290))
(assert (= (x784 (x376 x103 x36 x676 x1187 x489)) x1187))
(assert (= x717 (x945 (x575 x57 x717 x74))))
(assert (x499 x126))
(assert (x60 160 x776))
(assert (x499 x36))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 x57 x1081 x442 x920 x1138 x979 x250)))
(assert (= (x945 (x376 x88 x1490 x649 x386 x832)) x1490))
(assert (x499 x1392))
(assert (> (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494) 10000))
(assert (x499 x1514))
(assert (x499 x301))
(assert (x499 x1141))
(assert (x499 x146))
(assert (=> (>= 10000 x467) (= (x479 x467) 0)))
(assert (x499 x1403))
(assert (= x686 (and (not x527) x1344)))
(assert (not x1162))
(assert (x985 x444))
(assert (x499 x811))
(assert (x499 x464))
(assert (x499 x490))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1553 x88 x1013 x13 x545 x1351 x1557)))
(assert (=> (<= x358 10000) (= (x479 x358) 0)))
(assert (= x103 (x1499 (x1207 x103 x447))))
(assert (= (x479 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)))
(assert (x499 x636))
(assert (x499 x1266))
(assert (=> (<= x370 10000) (= (x479 x370) 0)))
(assert (= (x341 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)) x394))
(assert (= (x1499 (x316 x1374 x757 x1451 x338)) x1374))
(assert (= x110 (x945 (x575 x1374 x110 x683))))
(assert (=> (<= x703 10000) (= (x479 x703) 0)))
(assert (x499 x1564))
(assert (x499 x1253))
(assert (= 0 (x479 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (= x1374 (x1499 (x1207 x1374 x1008))))
(assert (x499 x1413))
(assert (= (x575 x103 x468 x80) (x479 (x575 x103 x468 x80))))
(assert (= (and x1315 (not x1191)) x933))
(assert (= x1176 (or x794 (and x1478 x538))))
(assert (x499 x822))
(assert (=> (>= 10000 x220) (= 0 (x479 x220))))
(assert (x499 x426))
(assert (x499 x1278))
(assert (x499 x235))
(assert (not (x1275 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494))))
(assert (x499 x1295))
(assert (not (x1275 (x316 x759 x1124 x1377 x1435))))
(assert (= 0 (x479 1889567281)))
(assert (x499 x282))
(assert (= x299 (x784 (x116 x370 x410 x443 x299 x1109 x1163 x302))))
(assert (x499 x1280))
(assert (= x1260 (and x1075 x726)))
(assert (=> (<= x1064 10000) (= 0 (x479 x1064))))
(assert (x499 x212))
(assert (=> (>= 10000 x317) (= 0 (x479 x317))))
(assert (< (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x479 4294967295) 0))
(assert (x985 x1297))
(assert (x499 x649))
(assert (= (x341 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x1102))
(assert (x499 x1165))
(assert (x499 x1297))
(assert (=> (<= x1486 10000) (= 0 (x479 x1486))))
(assert (x1021 x363 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x689))
(assert (x499 x517))
(assert (= (x341 (x1553 x57 x857 x1215 x1221 x656 x840)) x656))
(assert (= (x479 (x1207 x759 x967)) (x1207 x759 x967)))
(assert (x985 x1262))
(assert (=> (<= x1124 10000) (= (x479 x1124) 0)))
(assert (x1275 18446744073709551613))
(assert (= x759 (x1499 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (x499 x1082))
(assert (x499 x314))
(assert (= (x635 (x1553 x103 x860 x1000 x419 x855 x1446)) x1000))
(assert (x499 x1367))
(assert (x1275 18446744073709551167))
(assert (= (x784 (x316 66 x792 x1030 x26)) x26))
(assert (x499 x321))
(assert (=> (>= 10000 x841) (= (x479 x841) 0)))
(assert (< (x316 x103 x725 x162 x128) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1021 x746 32))
(assert (=> (>= 10000 x1136) (= (x479 x1136) 0)))
(assert (x375 x1088))
(assert (=> (<= x1196 10000) (= 0 (x479 x1196))))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x499 x833))
(assert (x499 x1133))
(assert (> (x1553 x370 x1101 x1161 x161 x763 x893) 10000))
(assert (x1149 x444))
(assert (< 10000 (x1553 x88 x1013 x13 x545 x1351 x1557)))
(assert (=> (<= x716 10000) (= (x479 x716) 0)))
(assert (x1275 1889567281))
(assert (x60 160 x534))
(assert (=> (>= 10000 x855) (= (x479 x855) 0)))
(assert (x499 x511))
(assert (x499 x130))
(assert (=> (<= x1408 10000) (= (x479 x1408) 0)))
(assert (x985 x363))
(assert (x1021 x677 1461501637330902918203684832716283019655932542976))
(assert (x499 x1187))
(assert (= x647 (and x1340 (not x547))))
(assert (=> (>= 10000 x911) (= (x479 x911) 0)))
(assert (= x1161 (x635 (x1553 x370 x1101 x1161 x161 x763 x893))))
(assert (x499 x19))
(assert (= (x479 (x116 x759 x1196 x626 x754 x425 x1516 x1220)) (x116 x759 x1196 x626 x754 x425 x1516 x1220)))
(assert (x499 x528))
(assert (=> (>= 10000 x1081) (= (x479 x1081) 0)))
(assert (not (x1275 (x1207 x334 x1381))))
(assert (x499 x1112))
(assert (x499 x1506))
(assert (=> (<= x299 10000) (= 0 (x479 x299))))
(assert (x499 x1482))
(assert (x499 x561))
(assert (> (x316 x370 x1011 x998 x1408) 10000))
(assert (x499 x1159))
(assert (x499 x1507))
(assert (x499 x310))
(assert (=> (>= 10000 x1109) (= 0 (x479 x1109))))
(assert (= (=> (and (= (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1088) x736) (= x1245 (x597 (+ x1069 x1141))) (= x259 (x597 (+ x1141 x736))) (= (x232 x1343) x57) (= x1269 (<= x57 224)) (<= x1343 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1093 (x597 (+ x1343 32))) (= x555 (x1110 (- x259 x1343))) (<= 1 x259) (> x259 x1343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1343) (= x402 (x1110 (- x555 32))) (= (x597 (+ x1069 31)) x1088) (<= x1343 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x1269 (=> (and (= (x597 (+ 64 x1093)) x1406) (= x64 (x316 x57 x224 x301 x1402)) (= (x597 (+ 32 x1093)) x1129) (= x970 (x597 (+ x1093 192))) (= (x232 x369) x920) (= x712 (not (< 1 x1546))) (= (x232 x353) x689) (= (x232 x1485) x195) (= (x232 x1093) x717) (= (x597 (+ x1093 96)) x1218) (= x1221 (x232 x1406)) (= (x232 x881) x821) (= x237 (x597 (+ 64 x1093))) (= (x232 x1492) x656) (= (x232 x1551) x840) (= x536 (x597 (+ 32 x1093))) (= x1081 (x232 x1093)) (>= x821 1) (= x1198 (x1252 0)) (= x745 (x232 x20)) (= (x232 x483) x1138) (= (x597 (+ 96 x1093)) x1492) (= (x597 (+ 64 x1093)) x1485) (= (x232 x1121) x1445) (= (x232 x1218) x310) (= x1372 (x232 x970)) (= (x597 (+ x1093 160)) x413) (= (x597 (+ x1093 128)) x182) (= (x597 (+ 32 x1093)) x1121) (= x857 (x232 x1093)) (= (x597 (+ x1093 128)) x1551) (= (x575 x57 x717 x74) x1114) (= x53 (x232 x591)) (= x537 (x232 x939)) (= x220 (x232 x1093)) (= x442 (x232 x1307)) (= (ite (= x57 0) x1198 (ite (>= 32 x57) x1467 (ite (>= 64 x57) x1114 (ite (<= x57 96) x64 (ite (<= x57 128) x327 (ite (>= 160 x57) x1204 (ite (<= x57 192) x621 (ite (>= 224 x57) x723 x613)))))))) x451) (= (x232 x1093) x1420) (= x621 (x116 x57 x1081 x442 x920 x1138 x979 x250)) (= (x232 x536) x74) (= x20 (x597 (+ x1093 96))) (= (x597 (+ x1093 160)) x353) (= (x232 x1129) x1215) (= (x350 x78) x282) (= x173 (x597 (+ 32 x1093))) (= (x597 (+ 32 x881)) x387) (= (x350 x282) x1546) (= (x1553 x57 x857 x1215 x1221 x656 x840) x1204) (= (x1207 x57 x1268) x1467) (= (x232 x1093) x1268) (= (x597 (+ x1093 32)) x1307) (= x591 (x597 (+ 32 x1093))) (= x1402 (x232 x237)) (= (x376 x57 x220 x53 x537 x745) x327) (= x1456 (x597 (+ 128 x1093))) (= x826 (x232 x182)) (= (x232 x1093) x224) (= (x232 x413) x250) (= x301 (x232 x173)) (= (x597 (+ 64 x1093)) x939) (= (x597 (+ x1093 96)) x483) (= (x232 x1456) x979) (= x369 (x597 (+ 64 x1093))) (= x723 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))) (and x712 (=> (= x259 x241) x87))))) x1380))
(assert (x375 x1222))
(assert (not (x1275 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156))))
(assert (x499 x97))
(assert (x499 x34))
(assert (x499 x89))
(assert (= (x635 (x316 x57 x224 x301 x1402)) x301))
(assert (= (and x1315 x1191) x5))
(assert (= (x784 (x1553 x921 x21 x655 x1236 x1366 x935)) x1236))
(assert (=> (<= x1420 10000) (= (x479 x1420) 0)))
(assert (x499 x404))
(assert (x499 x331))
(assert (=> (<= x1366 10000) (= 0 (x479 x1366))))
(assert (=> (<= x135 10000) (= (x479 x135) 0)))
(assert (x985 x678))
(assert (x499 x1293))
(assert (= (x945 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) x1213))
(assert (= x855 (x341 (x1553 x103 x860 x1000 x419 x855 x1446))))
(assert (x499 x715))
(assert (= 0 (x479 18446746139588821027)))
(assert (x499 x174))
(assert (= x1411 (x341 (x1553 x334 x226 x1386 x824 x1411 x1136))))
(assert (= x370 (x1499 (x575 x370 x209 x1497))))
(assert (x499 x821))
(assert (x1003 x1166))
(assert (x499 x1177))
(assert (x499 x128))
(assert (=> (<= x604 10000) (= (x479 x604) 0)))
(assert (= (x1038 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x1185))
(assert (> (x1207 x334 x1381) 10000))
(assert (= x1203 (x945 (x376 x921 x1203 x1529 x1270 x667))))
(assert (x499 x1281))
(assert (x499 x919))
(assert (> (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486) 10000))
(assert (=> (<= x410 10000) (= 0 (x479 x410))))
(assert (< (x316 x759 x1124 x1377 x1435) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x341 (x1553 x370 x1101 x1161 x161 x763 x893)) x763))
(assert (= x926 (and (not x535) x18)))
(assert (x499 x763))
(assert (x672 x706))
(assert (= (x376 x334 x432 x114 x1511 x435) (x479 (x376 x334 x432 x114 x1511 x435))))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (not (x1275 (x376 x759 x238 x236 x517 x1396))))
(assert (x1275 18446744073709551615))
(assert (x499 x1371))
(assert (x499 x673))
(assert (x499 x1151))
(assert (= x1315 (or x647 x1421)))
(assert (x499 x506))
(assert (x499 x971))
(assert (= 64 (x1499 (x575 64 x703 1))))
(assert (= x1330 (and x937 x1045)))
(assert (x499 x1486))
(assert (x499 x217))
(assert (> (x575 x1374 x110 x683) 10000))
(assert (= (x945 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x174))
(assert (=> (>= 10000 x860) (= (x479 x860) 0)))
(assert (= (x479 (x1207 x921 x905)) (x1207 x921 x905)))
(assert (x499 x460))
(assert (x499 x661))
(assert (x985 x746))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)))
(assert (not (x1275 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764))))
(assert (x499 x127))
(assert (x672 x1564))
(assert (=> (>= 10000 x226) (= (x479 x226) 0)))
(assert (x499 x606))
(assert (x499 x700))
(assert (x499 x339))
(assert (=> (<= x1163 10000) (= 0 (x479 x1163))))
(assert (= (x557 x88 x604 x1349 x785 x833 x685 x700 x8) (x479 (x557 x88 x604 x1349 x785 x833 x685 x700 x8))))
(assert (= x506 (x945 (x376 x1374 x506 x51 x1202 x478))))
(assert (x499 x957))
(assert (x499 x722))
(assert (x499 x696))
(assert (= (x784 (x376 x759 x238 x236 x517 x1396)) x517))
(assert (x499 x832))
(assert (x499 x394))
(assert (x499 x1544))
(assert (= x759 (x1499 (x316 x759 x1124 x1377 x1435))))
(assert (x499 x220))
(assert (x499 x1342))
(assert (x499 x747))
(assert (x499 x1030))
(assert (=> (<= x1358 10000) (= 0 (x479 x1358))))
(assert (=> (<= x435 10000) (= (x479 x435) 0)))
(assert (x1021 x1005 1461501637330902918203684832716283019655932542976))
(assert (x499 x976))
(assert (= x1208 (x635 (x376 x370 x1183 x1208 x966 x303))))
(assert (not (x1275 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463))))
(assert (x499 x56))
(assert (x499 x1157))
(assert (x499 x909))
(assert (x499 x480))
(assert (x499 x1496))
(assert (x499 x874))
(assert (< (x575 x334 x357 x1258) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1221 10000) (= (x479 x1221) 0)))
(assert (not (x1275 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (x499 x1094))
(assert (> (x316 x103 x725 x162 x128) 10000))
(assert (=> (<= x1496 10000) (= 0 (x479 x1496))))
(assert (x499 x680))
(assert (= x133 (x341 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486))))
(assert (x733 x205))
(assert (x1275 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x1021 x746 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x7 (=> (and (= (x597 (+ x336 32)) x1235) (= (x1414 x1450) x1180) (= x313 (x597 (+ x1450 32))) (= x1191 (< 0 x1180)) (= x977 (x1414 x381))) (and (=> (and (and (= (x597 (+ 32 x1235)) x705) (= x1116 (> x1180 1)) (= x761 (x1414 x313)) (= (x597 (+ x313 32)) x458)) x1191) (and (=> (and (not x1116) (and (= x705 x1279) (= x458 x781) (= 1 x50))) x836) (=> (and (and (= x1561 (x597 (+ x458 32))) (= (x597 (+ 32 x705)) x1039) (= x1346 (< 2 x1180)) (= (x120 x458) x251)) x1116) (and (=> (and (and (= x781 x1561) (= 2 x50) (= x1279 x1039)) (not x1346)) x836) (=> (and x1346 (and (= (x597 (+ x1039 32)) x34) (= x1384 (x452 x1561)) (= x1560 (> x1180 3)) (= x1192 (x597 (+ 32 x1561))))) (and (=> (and (not x1560) (and (= x1192 x781) (= 3 x50) (= x34 x1279))) x836) (=> x1560 x859))))))) (=> (and (not x1191) (and (= x313 x781) (= x1279 x1235) (= x50 0))) x836)))))
(assert (= (x945 (x316 x103 x725 x162 x128)) x725))
(assert (= (x945 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)) x1453))
(assert (not (x1275 (x376 x334 x432 x114 x1511 x435))))
(assert (= (and (not x1045) x937) x658))
(assert (< 10000 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)))
(assert (not (x1275 (x316 x1374 x757 x1451 x338))))
(assert (= x836 (=> (and (= (x1110 (- x753 32)) x567) (= x50 x1180) (= x891 (x597 (+ 32 x336))) (= (x1110 (- x1279 x336)) x753) (= x921 (x657 x336)) (= (* x1180 32) x1403) (= x1126 x781) (= x464 (x597 (+ x1177 x1235))) (<= x1180 4) (<= 1 x464) (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x336 x1279) (= (x597 (+ x1403 x313)) x1126) (= x32 (<= x921 224)) (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1177 (* 32 x1180)) (>= x1279 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x336) (= x464 x1279)) (and (=> (and (= x778 (x1207 x921 x905)) (= x940 (x657 x305)) (= (x657 x699) x935) (= x103 (x849 x1279)) (= x1486 (x657 x460)) (= (x316 x921 x19 x1189 x24) x1012) (= (x597 (+ 32 x891)) x305) (= (x657 x1144) x1366) (= (x1110 (- x1515 32)) x984) (= (x657 x629) x1236) (= (x657 x1028) x394) (= (x657 x891) x1264) (= (x657 x891) x1453) (= x1350 (x597 (+ x1281 32))) (= x1175 (x597 (+ x891 96))) (= x1515 (x1110 (- x395 x1279))) (= (x597 (+ x891 160)) x445) (= (x657 x1437) x1520) (= x654 (x597 (+ 32 x891))) (= (x597 (+ x891 160)) x430) (= x24 (x657 x804)) (= x623 (x597 (+ x891 128))) (= x1189 (x657 x154)) (= x655 (x657 x1050)) (= x905 (x657 x891)) (= x1142 (x657 x430)) (= x1559 (x597 (+ x891 96))) (= (x597 (+ x1279 32)) x842) (= x322 (x597 (+ x891 32))) (= (x657 x823) x1270) (= x1358 (x657 x445)) (= (x657 x891) x1203) (= (x597 (+ x372 32)) x1281) (= x343 (x575 x921 x1264 x1352)) (= (x657 x654) x1367) (= (x597 (+ 64 x891)) x804) (= x699 (x597 (+ 128 x891))) (= (x597 (+ x891 64)) x823) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1279) (>= x1279 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (<= 1 x1279) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1279))) (= (x597 (+ 64 x891)) x629) (= x407 (x657 x968)) (= x1352 (x657 x322)) (= (x597 (+ 64 x891)) x1437) (= (x657 x1311) x1529) (< x1279 x395) (= x1359 (x657 x93)) (= (x1252 0) x1558) (= x844 (x376 x921 x1203 x1529 x1270 x667)) (= (x597 (+ x891 192)) x460) (= x308 (x657 x623)) (= x667 (x657 x1175)) (= x1050 (x597 (+ x891 32))) (= (x116 x921 x1453 x1367 x1520 x394 x308 x1142) x165) (= x372 (x597 (+ 32 x1279))) (= x1311 (x597 (+ x891 32))) (= (x657 x891) x21) (= x1144 (x597 (+ x891 96))) (= (x597 (+ 128 x891)) x968) (= x1028 (x597 (+ x891 96))) (= x25 (>= 224 x103)) (= x1213 (x657 x891)) (= (x597 (+ x891 32)) x154) (= x19 (x657 x891)) (= x1072 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) (= x93 (x597 (+ 64 x891))) (= x1086 (ite (= x921 0) x1558 (ite (>= 32 x921) x778 (ite (>= 64 x921) x343 (ite (>= 96 x921) x1012 (ite (>= 128 x921) x844 (ite (>= 160 x921) x770 (ite (<= x921 192) x165 (ite (<= x921 224) x1072 x775))))))))) (= (x1553 x921 x21 x655 x1236 x1366 x935) x770) (= (x597 (+ x372 96)) x395) (= x133 (x657 x1559))) (and (=> (and (and (= (x849 x1078) x664) (= x642 (x427 1461501637330902918203684832716283019655932542975 x219)) (= (x849 x1470) x127) (= (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185) x1155) (= (ite (= 0 x103) x318 (ite (>= 32 x103) x882 (ite (<= x103 64) x1430 (ite (<= x103 96) x732 (ite (>= 128 x103) x1298 (ite (<= x103 160) x485 (ite (>= 192 x103) x929 (ite (<= x103 224) x1155 x1282)))))))) x1286) (= x638 (x597 (+ 128 x842))) (= x1298 (x376 x103 x36 x676 x1187 x489)) (= (x597 (+ x842 128)) x918) (= (x849 x149) x855) (= (x849 x9) x128) (= (x597 (+ 64 x842)) x513) (= x676 (x849 x1193)) (= (x597 (+ x842 128)) x466) (= x447 (x849 x842)) (= (x849 x466) x1446) (= x899 (x597 (+ x842 64))) (= (x849 x325) x219) (>= x938 32) (= (x849 x146) x1000) (= (x849 x406) x419) (= (x849 x918) x1040) (= x594 (x597 (+ 160 x842))) (= (x597 (+ x842 96)) x643) (= (x597 (+ x842 32)) x1211) (= x174 (x849 x842)) (= x1251 (x849 x594)) (= (x597 (+ 96 x842)) x1078) (= (x597 (+ 96 x842)) x1455) (= x146 (x597 (+ 32 x842))) (= x485 (x1553 x103 x860 x1000 x419 x855 x1446)) (= x929 (x116 x103 x903 x344 x127 x664 x454 x1096)) (= (x849 x439) x724) (= x589 (x597 (+ 4 x395))) (= (x597 (+ x842 64)) x406) (= (x849 x899) x1187) (= x1382 (< 0 x1133)) (= x1025 (x597 (+ 32 x842))) (= (x849 x842) x860) (= (x849 x842) x36) (= x1430 (x575 x103 x468 x80)) (= (x597 (+ x842 160)) x1188) (= (x849 x1211) x162) (<= x938 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x597 (+ 192 x842)) x982) (= (x1207 x103 x447) x882) (= x318 (x1252 0)) (= (x597 (+ 64 x842)) x9) (= (x849 x842) x468) (= x125 (x849 x643)) (= x487 (x849 x521)) (= (x849 x513) x651) (= x439 (x597 (+ x842 32))) (= (x849 x982) x1185) (= (x849 x1455) x489) (= x732 (x316 x103 x725 x162 x128)) (= (x597 (+ 32 x842)) x1193) (= x1286 x159) (= (x849 x638) x454) (= x1322 (x597 (+ x842 32))) (= (x849 160) x325) (= (x849 x1188) x1096) (= (x849 x842) x725) (= (x849 x1025) x80) (= x903 (x849 x842)) (= x344 (x849 x1322)) (= (x597 (+ x842 64)) x1470) (= (x597 (+ 96 x842)) x149)) (or (and (= x1133 x347) (not x1382)) (and x1382 (and (>= x938 32) (<= x938 4294967295) (= x347 1))))) x504) x25)) x32))))
(assert (= (x479 2065879269376) 0))
(assert (x499 x1180))
(assert (x499 x749))
(assert (=> (>= 10000 x1477) (= (x479 x1477) 0)))
(assert (x499 x881))
(assert (x499 x1))
(assert (x499 x1310))
(assert (x499 x799))
(assert (x499 x774))
(assert (x499 x435))
(assert (= x1138 (x341 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (< (x1553 x370 x1101 x1161 x161 x763 x893) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1549 10000) (= (x479 x1549) 0)))
(assert (< (x116 x370 x410 x443 x299 x1109 x1163 x302) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x908))
(assert (x499 x645))
(assert (not (x1275 (x116 x921 x1453 x1367 x1520 x394 x308 x1142))))
(assert (x499 x470))
(assert (x499 x1109))
(assert (=> (>= 10000 x626) (= (x479 x626) 0)))
(assert (< 10000 (x376 x88 x1490 x649 x386 x832)))
(assert (x499 x643))
(assert (x733 x1312))
(assert (= (x341 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)) x948))
(assert (> (x1553 x57 x857 x1215 x1221 x656 x840) 10000))
(assert (x499 x199))
(assert (=> (<= x574 10000) (= 0 (x479 x574))))
(assert (= (=> (and (>= 18446744073709551615 x534) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1388) (= x151 (* x534 32)) (> x572 x1388) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1388) (= (x597 (+ 32 x1388)) x875) (<= 1 x572) (= x572 (x597 (+ x1388 (mod (+ x151 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x1388 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (or (and (<= x134 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1416 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1416 x134) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x134) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1416))))) (= x1206 (* 160 x534)) (= (x728 x354) x534) (= (x597 (+ x354 32)) x134) (or (<= x1159 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1159)) (= (+ 32 x515) x615) (= x1491 (> x534 0)) (= (x597 (+ 36 x1159)) x354) (= x1416 (x1110 (- x1539 x1206))) (or (and (< x1159 x1530) (= (<= x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1159 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1159))) (= (x728 164) x1159)) (and (=> x1491 x1284) (=> (and (not x1491) (= x713 x572)) x605))) x810))
(assert (= x1081 (x945 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (x499 x860))
(assert (=> (>= 10000 x1220) (= (x479 x1220) 0)))
(assert (=> (>= 10000 x832) (= (x479 x832) 0)))
(assert (x499 x386))
(assert (= (x479 (x376 x88 x1490 x649 x386 x832)) (x376 x88 x1490 x649 x386 x832)))
(assert (= (x341 (x376 x921 x1203 x1529 x1270 x667)) x667))
(assert (x499 x634))
(assert (= (x479 (x1553 x334 x226 x1386 x824 x1411 x1136)) (x1553 x334 x226 x1386 x824 x1411 x1136)))
(assert (x672 x1297))
(assert (= (and (not x585) x175) x516))
(assert (x499 x177))
(assert (= x1101 (x945 (x1553 x370 x1101 x1161 x161 x763 x893))))
(assert (= x863 (x945 (x1207 x88 x863))))
(assert (< 10000 (x1207 x370 x467)))
(assert (= (x945 (x116 x88 x1058 x138 x1549 x1365 x135 x501)) x1058))
(assert (=> (<= x36 10000) (= 0 (x479 x36))))
(assert (=> (<= x1202 10000) (= 0 (x479 x1202))))
(assert (x499 x1535))
(assert (x499 x1466))
(assert (x499 x1301))
(assert (not (x1275 (x575 x921 x1264 x1352))))
(assert (= x88 (x1499 (x116 x88 x1058 x138 x1549 x1365 x135 x501))))
(assert (x499 x898))
(assert (x499 x1483))
(assert (x499 x1530))
(assert (< (x1553 x1374 x561 x865 x1074 x498 x139) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x865))
(assert (x499 x216))
(assert (=> (>= 10000 x8) (= (x479 x8) 0)))
(assert (x499 x911))
(assert (=> (<= x921 10000) (= (x479 x921) 0)))
(assert (= (x248 (x557 x103 x174 x724 x651 x125 x1040 x1251 x1185)) x1040))
(assert (= (x784 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) x1359))
(assert (x499 x806))
(assert (= (x635 (x116 x1374 x358 x1335 x314 x1477 x1503 x827)) x1335))
(assert (= (x635 (x575 x88 x1151 x1545)) x1545))
(assert (x499 x152))
(assert (= x950 (and x726 (not x1075))))
(assert (=> (>= 10000 x506) (= (x479 x506) 0)))
(assert (x499 x669))
(assert (x499 x638))
(assert (= (and x268 x1314) x95))
(assert (> (x1553 x1374 x561 x865 x1074 x498 x139) 10000))
(assert (x499 x323))
(assert (x985 x436))
(assert (=> (<= x1250 10000) (= 0 (x479 x1250))))
(assert (= (=> (and (= (x1132 x78) x307) (= (x1132 x307) x1068) (= x527 (< 0 x1068))) (and (=> (and (not x527) (= x241 x1343)) x87) (=> (and (and (or (and x932 (and (= (< 32 x1069) x731) (not x731) (= (x379 x894) x1190))) (not x932)) (and (= x202 (x1132 x78)) (= (x597 (+ 32 x1256)) x1140) (= (x597 (+ 32 x16)) x44) (= x79 (x1132 x1256)) (= (x1132 x131) x1256) (= (x597 (+ 32 x202)) x131) (= x1019 (x1132 x1140)) (= (x1132 x202) x297) (= (x597 (+ 32 x44)) x433) (= x793 (x427 1461501637330902918203684832716283019655932542975 x79)) (= (x597 (+ 32 x858)) x894) (= x16 (x597 (+ 32 x1240))) (= (x597 (+ x1240 128)) x530) (= x932 (< 0 x1069)) (>= x297 1) (= x1141 (x597 (+ x530 32))) (= (x597 (+ x1343 32)) x1240) (= (x597 (+ 32 x1140)) x1306) (= x858 (x1132 x1306)) (= (x883 x858) x1069))) x527) x1380))) x533))
(assert (x499 x745))
(assert (= (x341 (x116 x370 x410 x443 x299 x1109 x1163 x302)) x1109))
(assert (x499 x1556))
(assert (=> (>= 10000 x209) (= (x479 x209) 0)))
(assert (= (x341 (x116 x88 x1058 x138 x1549 x1365 x135 x501)) x1365))
(assert (= (and x866 x1178) x58))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= 0 (x479 18446744073709551518)))
(assert (x499 x231))
(assert (x499 x226))
(assert (= x1480 (=> (and (or x538 (and (not x538) (= 0 x898))) (= x538 (= 0 x898))) x253)))
(assert (= (x479 (x1207 x334 x1381)) (x1207 x334 x1381)))
(assert (= (x1499 (x1207 x88 x863)) x88))
(assert (x499 x1291))
(assert (x499 x978))
(assert (x499 x1211))
(assert (x499 x103))
(assert (= (x248 (x116 x759 x1196 x626 x754 x425 x1516 x1220)) x1516))
(assert (x499 x333))
(assert (x499 x572))
(assert (not (x1275 (x575 x370 x209 x1497))))
(assert (x499 x567))
(assert (= (x341 (x116 x759 x1196 x626 x754 x425 x1516 x1220)) x425))
(assert (x499 x336))
(assert (x499 x1384))
(assert (x499 x931))
(assert (= x1272 (and x1550 (not x964))))
(assert (= (x1499 (x1553 x334 x226 x1386 x824 x1411 x1136)) x334))
(assert (= (x635 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) x1349))
(assert (x499 x910))
(assert (= (=> (and (and (= (x597 (+ 4 x1276)) x722) (<= x395 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x573 (x427 1461501637330902918203684832716283019655932542975 x487)) (= x1276 (x597 (+ x395 32))) (not (= x395 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= 1 x720) (>= x347 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x395)) (< x395 x1276) (= (> x1407 0) x693) (= (x461 x395) x720) (<= x611 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x395) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x395) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x395)) (>= x611 32) (= x1085 (x427 1461501637330902918203684832716283019655932542975 x219))) (or (and (= x1407 x364) (not x693)) (and x693 (and (>= x611 32) (= x364 1) (>= 4294967295 x611))))) x90) x504))
(assert (x499 x695))
(assert (x672 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x13) (= 0 (x479 x13))))
(assert (x499 x156))
(assert (=> (<= x344 10000) (= 0 (x479 x344))))
(assert (x499 x192))
(assert (x499 x1549))
(assert (=> (>= 10000 x1203) (= (x479 x1203) 0)))
(assert (x499 x1105))
(assert (= (x575 x88 x1151 x1545) (x479 (x575 x88 x1151 x1545))))
(assert (x60 128 x669))
(assert (> (x376 x921 x1203 x1529 x1270 x667) 10000))
(assert (x499 x263))
(assert (x499 x1233))
(assert (=> (<= x948 10000) (= (x479 x948) 0)))
(assert (x499 x246))
(assert (= x378 (x635 (x1553 x759 x695 x378 x317 x15 x944))))
(assert (x499 x398))
(assert (x985 x219))
(assert (=> (>= 10000 x1236) (= (x479 x1236) 0)))
(assert (x499 x1289))
(assert (x499 x171))
(assert (=> (<= x833 10000) (= (x479 x833) 0)))
(assert (=> (<= x1096 10000) (= 0 (x479 x1096))))
(assert (= (x479 (x1553 x88 x1013 x13 x545 x1351 x1557)) (x1553 x88 x1013 x13 x545 x1351 x1557)))
(assert (= (or x697 x548 x1303 x933 x1427) x422))
(assert (=> (>= 10000 x1529) (= (x479 x1529) 0)))
(assert (x499 x1505))
(assert (x499 x970))
(assert (=> (<= x905 10000) (= (x479 x905) 0)))
(assert (x499 x1238))
(assert (= (x1499 (x575 x759 x39 x1089)) x759))
(assert (not (x1275 (x376 x57 x220 x53 x537 x745))))
(assert (x375 x746))
(assert (= (x1499 (x575 x334 x357 x1258)) x334))
(assert (= (x945 (x575 x334 x357 x1258)) x357))
(assert (x1021 x706 32))
(assert (x499 x757))
(assert (x499 x719))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x376 x759 x238 x236 x517 x1396)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x376 x103 x36 x676 x1187 x489)))
(assert (=> (<= x74 10000) (= (x479 x74) 0)))
(assert (x499 x623))
(assert (x733 x1180))
(assert (= x13 (x635 (x1553 x88 x1013 x13 x545 x1351 x1557))))
(assert (x499 x1209))
(assert (= (x784 (x316 x103 x725 x162 x128)) x128))
(assert (x499 x1134))
(assert (x499 x476))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1553 x921 x21 x655 x1236 x1366 x935)))
(assert (= x537 (x784 (x376 x57 x220 x53 x537 x745))))
(assert (x499 x1331))
(assert (= x1511 (x784 (x376 x334 x432 x114 x1511 x435))))
(assert (=> (<= x920 10000) (= 0 (x479 x920))))
(assert (x499 x1013))
(assert (x499 x78))
(assert (x499 x244))
(assert (x499 x49))
(assert (x60 32 x1180))
(assert (x737 x287 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (x1021 x1326 32))
(assert (x499 x1365))
(assert (= (x1499 (x1553 x103 x860 x1000 x419 x855 x1446)) x103))
(assert (=> (>= 10000 x447) (= (x479 x447) 0)))
(assert (not (x1275 (x575 x759 x39 x1089))))
(assert (x499 x408))
(assert (not (x1275 (x116 x334 x1379 x275 x505 x1536 x600 x54))))
(assert (x499 x432))
(assert (x499 x1189))
(assert (x499 x1183))
(assert (x499 x122))
(assert (x499 x450))
(assert (=> (>= 10000 x114) (= 0 (x479 x114))))
(assert (x499 x705))
(assert (x499 x1042))
(assert (= (x429 x287 248) (x1049 x287 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x499 x869))
(assert (= x754 (x784 (x116 x759 x1196 x626 x754 x425 x1516 x1220))))
(assert (=> (>= 10000 x1351) (= (x479 x1351) 0)))
(assert (= (x479 (x316 x921 x19 x1189 x24)) (x316 x921 x19 x1189 x24)))
(assert (x499 x857))
(assert (x499 x1195))
(assert (= x407 (x248 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486))))
(assert (x499 x148))
(assert (x499 x927))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x489 (x341 (x376 x103 x36 x676 x1187 x489))))
(assert (x499 x483))
(assert (= (and x709 x1398) x365))
(assert (x499 x203))
(assert (x499 x1046))
(assert (x499 x716))
(assert (not (x1275 (x1207 x103 x447))))
(assert (x499 x1140))
(assert (= x236 (x635 (x376 x759 x238 x236 x517 x1396))))
(assert (=> (<= x747 10000) (= (x479 x747) 0)))
(assert (x499 x412))
(assert (x499 x939))
(assert (=> (>= 10000 x24) (= 0 (x479 x24))))
(assert (=> (>= 10000 x1488) (= 0 (x479 x1488))))
(assert (x499 x1142))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (=> (>= 10000 x1187) (= 0 (x479 x1187))))
(assert (x60 32 x384))
(assert (= (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494) (x479 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494))))
(assert (= x1107 (x635 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494))))
(assert (x375 x1297))
(assert (< 10000 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)))
(assert (x499 x144))
(assert (x499 x824))
(assert (x1275 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x499 x369))
(assert (x499 x83))
(assert (=> (>= 10000 x1008) (= (x479 x1008) 0)))
(assert (= x1237 (and x1152 x913)))
(assert (x499 x903))
(assert (x499 x633))
(assert (not (x1275 (x376 x370 x1183 x1208 x966 x303))))
(assert (< 10000 (x376 x334 x432 x114 x1511 x435)))
(assert (= (x1499 (x1207 x57 x1268)) x57))
(assert (x499 x1037))
(assert (x499 x150))
(assert (= (x784 (x1553 x57 x857 x1215 x1221 x656 x840)) x1221))
(assert (= (x116 x103 x903 x344 x127 x664 x454 x1096) (x479 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (x499 x1348))
(assert (x1275 2065879269284))
(assert (= (x1499 (x376 x103 x36 x676 x1187 x489)) x103))
(assert (x499 x259))
(assert (x499 x1085))
(assert (= (x479 (x376 x370 x1183 x1208 x966 x303)) (x376 x370 x1183 x1208 x966 x303)))
(assert (not (x1275 (x1553 x88 x1013 x13 x545 x1351 x1557))))
(assert (x499 x1215))
(assert (x499 x1039))
(assert (= x920 (x784 (x116 x57 x1081 x442 x920 x1138 x979 x250))))
(assert (=> (<= x432 10000) (= (x479 x432) 0)))
(assert (x499 x802))
(assert (= x1445 (x635 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372))))
(assert (x499 x363))
(assert (< (x575 x370 x209 x1497) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1367) (= (x479 x1367) 0)))
(assert (x499 x838))
(assert (x1275 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (=> (>= 10000 x967) (= (x479 x967) 0)))
(assert (x499 x250))
(assert (= (x784 (x116 x334 x1379 x275 x505 x1536 x600 x54)) x505))
(assert (x499 x491))
(assert (x499 x403))
(assert (< (x316 x1374 x757 x1451 x338) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x784 (x316 x88 x46 x397 x996)) x996))
(assert (x499 x775))
(assert (x499 x54))
(assert (x499 x325))
(assert (= x1374 (x1499 (x376 x1374 x506 x51 x1202 x478))))
(assert (x499 x436))
(assert (x499 x875))
(assert (=> (<= x561 10000) (= 0 (x479 x561))))
(assert (< 10000 (x376 x759 x238 x236 x517 x1396)))
(assert (x499 x353))
(assert (x499 x1088))
(assert (x672 x79))
(assert (=> (<= x1446 10000) (= (x479 x1446) 0)))
(assert (x499 x921))
(assert (x499 x1161))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (< (x575 x103 x468 x80) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x547 x1340) x66))
(assert (= (x341 (x557 x759 x544 x254 x796 x1064 x171 x914 x1463)) x1064))
(assert (x499 x1026))
(assert (x499 x1008))
(assert (x499 x1299))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x376 x370 x1183 x1208 x966 x303)))
(assert (x499 x1117))
(assert (=> (<= x966 10000) (= 0 (x479 x966))))
(assert (x1021 x79 1461501637330902918203684832716283019655932542976))
(assert (x499 x357))
(assert (x499 x1484))
(assert (x499 x735))
(assert (x499 x481))
(assert (x499 x1005))
(assert (= x745 (x341 (x376 x57 x220 x53 x537 x745))))
(assert (x499 x983))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (= (x1038 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486)) x1486))
(assert (x499 x33))
(assert (x499 x1532))
(assert (=> (<= x893 10000) (= 0 (x479 x893))))
(assert (x985 x677))
(assert (= (x376 x921 x1203 x1529 x1270 x667) (x479 (x376 x921 x1203 x1529 x1270 x667))))
(assert (= x885 (and x814 x365)))
(assert (= (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486) (x479 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486))))
(assert (= (or x947 x617 x119 x1431 x1237) x175))
(assert (x499 x68))
(assert (x499 x1208))
(assert (x499 x915))
(assert (x499 x666))
(assert (=> (>= 10000 x171) (= (x479 x171) 0)))
(assert (= x1062 (=> (and (= (x597 (+ 32 x382)) x767) (= (x597 (+ x1424 32)) x23) (= x1259 (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1348)) (= x1424 (x597 (+ x1288 x324))) (= (x597 (+ 32 x603)) x324) (= (x728 x603) x75) (or (and (> x81 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1530) (<= x81 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1530 x81))) (= 160 x1056) (= x205 (x728 x405)) (= (x728 x324) x1288) (>= 18446744073709551615 x1288) (or (>= 18446746139588821059 x909) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x909)) (= (x1110 (- x909 x1424)) x749) (or (<= x405 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x405)) (= x1533 (x728 x225)) (<= x205 18446744073709551615) (<= x1259 18446744073709551167) (= x1348 (+ x399 63)) (= x1314 (> x1105 x512)) (= (x597 (+ x405 32)) x512) (not (> x1105 x909)) (or (>= 18446746139588821027 x382) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x382)) (= x971 1) (= x382 (x597 (+ x1547 x1424))) (= (x597 (+ 32 x767)) x225) (= (x1110 (- x1539 x75)) x1280) (= (x597 (+ x405 31)) x1393) (<= x75 18446744073709551615) (<= 1 x1259) (= x1547 (x728 x23)) (= (x728 228) x81) (or (>= x1424 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x1424 18446746139588821027)) (= (* x205 32) x399) (= (- x1539 67) x1530) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x210) (= x405 (x597 (+ x1533 x382))) (= (x597 (+ 36 x81)) x603) (<= x1547 18446744073709551615) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x81) (<= x81 2065879269376)) (<= x1070 1461501637330902918203684832716283019655932542975) (= x971 (x992 128)) (not (or (and (> x324 x1280) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324) (<= x1280 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324) (> x1280 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x597 (+ x324 x75)) x909) (>= x210 128) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1393) (<= x909 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x909 x1393)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1393) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x909))) (= x1105 (x597 (+ x512 x290))) (= (x728 x1424) x1070) (>= x75 64) (<= x1274 2) (= x210 (x1110 (- x909 x382))) (>= x749 128) (>= 18446744073709551615 x1533) (<= x75 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x715 1) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749) (= x1274 (x728 x382)) (= x879 (+ 448 x1259)) (= (x728 x767) x107) (= (* 32 x205) x290)) (and (=> (and (not x1314) (= x879 x113)) x631) (=> x1314 x559)))))
(assert (x499 x1425))
(assert (> (x1553 x921 x21 x655 x1236 x1366 x935) 10000))
(assert (x499 x938))
(assert (= (x1499 (x316 x103 x725 x162 x128)) x103))
(assert (= 66 (x1499 (x316 66 x792 x1030 x26))))
(assert (= (x479 (x316 x334 x841 x1195 x872)) (x316 x334 x841 x1195 x872)))
(assert (=> (>= 10000 x940) (= 0 (x479 x940))))
(assert (=> (<= x468 10000) (= (x479 x468) 0)))
(assert (=> (>= 10000 x826) (= (x479 x826) 0)))
(assert (= x759 (x1499 (x1553 x759 x695 x378 x317 x15 x944))))
(assert (not (x1275 (x376 x88 x1490 x649 x386 x832))))
(assert (=> (<= x1151 10000) (= (x479 x1151) 0)))
(assert (=> (<= x914 10000) (= 0 (x479 x914))))
(assert (x499 x204))
(assert (x499 x163))
(assert (= (x994 (x116 x370 x410 x443 x299 x1109 x1163 x302)) x302))
(assert (x499 x1168))
(assert (x499 x762))
(assert (x499 x1372))
(assert (x499 x81))
(assert (x499 x1519))
(assert (x499 x596))
(assert (=> (>= 10000 x1270) (= 0 (x479 x1270))))
(assert (=> (>= 10000 x683) (= 0 (x479 x683))))
(assert (x499 x1379))
(assert (= 0 (x479 1461501637330902918203684832716283019655932542975)))
(assert (= 0 (x479 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (> (x316 66 x792 x1030 x26) 10000))
(assert (= (x635 (x116 x921 x1453 x1367 x1520 x394 x308 x1142)) x1367))
(assert (x672 1461501637330902918203684832716283019655932542975))
(assert (x499 x388))
(assert (x499 x1307))
(assert (= (x248 (x116 x57 x1081 x442 x920 x1138 x979 x250)) x979))
(assert (= x419 (x784 (x1553 x103 x860 x1000 x419 x855 x1446))))
(assert (x499 x1325))
(assert (= x791 (=> (and (= (not (> x1462 4)) x1457) (= (x1186 x1285) x426) (= (x597 (+ x1080 32)) x653) (= x908 (x597 (+ 32 x1285)))) (and (=> (and (= x653 x1419) (= 4 x284) (= x189 x908)) x807) x1457))))
(assert (= (x635 (x575 64 x703 1)) 1))
(assert (x499 x639))
(assert (x499 x1166))
(assert (x499 x420))
(assert (x499 x133))
(assert (x499 x466))
(assert (x499 x1410))
(assert (x499 x1443))
(assert (x499 x195))
(assert (= x275 (x635 (x116 x334 x1379 x275 x505 x1536 x600 x54))))
(assert (x499 x1292))
(assert (x1003 x906))
(assert (= x893 (x248 (x1553 x370 x1101 x1161 x161 x763 x893))))
(assert (x499 x1071))
(assert (=> (<= x397 10000) (= (x479 x397) 0)))
(assert (x499 x405))
(assert (x499 x1219))
(assert (x499 x1148))
(assert (x499 x255))
(assert (not (x1275 (x575 x57 x717 x74))))
(assert (x499 x1230))
(assert (x499 x209))
(assert (= 0 (x479 2065879269316)))
(assert (x1275 18446744073709551518))
(assert (x499 x1061))
(assert (x499 x205))
(assert (x499 x1182))
(assert (x1149 x1468))
(assert (x985 x1468))
(assert (x499 x1559))
(assert (x499 x1452))
(assert (x1021 x1326 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x248 (x1553 x57 x857 x1215 x1221 x656 x840)) x840))
(assert (x499 x995))
(assert (= (x479 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (= (x1499 (x557 x1374 x390 x1107 x1066 x948 x874 x1447 x494)) x1374))
(assert (x499 x166))
(assert (x499 x935))
(assert (x672 x444))
(assert (= (x1499 (x575 x57 x717 x74)) x57))
(assert (x499 x998))
(assert (= (x116 x370 x410 x443 x299 x1109 x1163 x302) (x479 (x116 x370 x410 x443 x299 x1109 x1163 x302))))
(assert (= true x18))
(assert (x499 x505))
(assert (= x832 (x341 (x376 x88 x1490 x649 x386 x832))))
(assert (not (x1275 (x316 x88 x46 x397 x996))))
(assert (x499 x579))
(assert (x499 x886))
(assert (= x132 (not (and (= x1137 (x597 (+ x673 x1112))) (= (= x1137 1) x1018) (not x1018) (= (x597 (+ 32 x630)) x1331) (= (x597 (+ 32 x628)) x1440) (= x902 (x597 (+ x408 32))) (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x628 (x597 (+ x902 32))) (= (x597 (+ 32 x614)) x408) (>= x614 1) (= x741 (= x1137 0)) (= x1127 (x597 (+ 32 x272))) (= x673 (x1357 x482)) (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x597 (+ 32 x457)) x630) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1210) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x457)) (not (= x614 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1112 x673))) (not x1383) (= x507 (x1110 (- x1137 1))) (<= x614 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x597 (+ (mod (+ x1044 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1210)) x614) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x457)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x457)) (< x614 x457) (= x1044 (* x1137 32)) (= (x1357 192) x1474) (= (x1357 x515) x482) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x457) (<= x614 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x457) (= (x1357 x1474) x267) (= (x1357 x615) x497) (not (= x614 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not x741) (= (x597 (+ 160 x457)) x952) (> x614 x1210) (<= x457 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x614)) (= (x597 (+ 32 x1331)) x163) (= (= 1 x507) x1383) (>= 18446744073709551615 x1137) (= (x597 (+ x163 32)) x800) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x614) (> x952 x457) (= x272 (x597 (+ x1210 32))) (= (x597 (+ 160 x614)) x457) (= x1112 (x1357 x497))))))
(assert (=> (<= x764 10000) (= 0 (x479 x764))))
(assert (x499 x1405))
(assert (x985 x596))
(assert (=> (<= x419 10000) (= (x479 x419) 0)))
(assert (< (x1553 x334 x226 x1386 x824 x1411 x1136) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x967 (x945 (x1207 x759 x967))))
(assert (x499 x1014))
(assert (not (x1275 (x316 66 x792 x1030 x26))))
(assert (x499 x1093))
(assert (= x167 (=> (and (= (x1065 x584) x334) (= (x427 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1222) x1046) (<= 1 x231) (= x331 (x597 (+ 32 x584))) (= x581 (x597 (+ x4 x522))) (= x1164 (x1110 (- x1283 32))) (= (>= 224 x334) x682) (= x1222 (x597 (+ x522 31))) (= (x597 (+ x1046 x4)) x231) (<= x584 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x584 x231) (= (x1110 (- x231 x584)) x1283) (<= x584 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x584)) (and x682 (=> (and (= (x1385 x880) x828) (= (x1065 x331) x1381) (= (x597 (+ x331 64)) x221) (= (x597 (+ x331 64)) x187) (= (x1065 x331) x1465) (= (x597 (+ x331 32)) x148) (= x1541 (ite (= x334 0) x52 (ite (>= 32 x334) x355 (ite (<= x334 64) x1248 (ite (>= 96 x334) x211 (ite (>= 128 x334) x670 (ite (<= x334 160) x876 (ite (>= 192 x334) x1347 (ite (>= 224 x334) x675 x263))))))))) (= x1536 (x1065 x495)) (= (x597 (+ x331 32)) x321) (= (x597 (+ 32 x331)) x150) (= x177 (x597 (+ x1450 32))) (= x1386 (x1065 x321)) (= x1248 (x575 x334 x357 x1258)) (= (x1065 x221) x872) (= x684 (x597 (+ 160 x331))) (= x211 (x316 x334 x841 x1195 x872)) (= (x376 x334 x432 x114 x1511 x435) x670) (= x1120 (x1065 x1507)) (= x546 (x597 (+ x331 128))) (= (x1065 x1412) x435) (= (x597 (+ 32 x331)) x340) (= x54 (x1065 x684)) (= x1102 (x1065 x851)) (= (x1065 x148) x1195) (= x156 (x1065 x1036)) (= x357 (x1065 x331)) (= (x1065 x331) x1379) (= x226 (x1065 x331)) (= x632 (x597 (+ 96 x331))) (= x448 (x1385 x828)) (= (not (< 1 x448)) x652) (= x52 (x1252 0)) (= (x1065 x150) x1452) (= (x597 (+ 96 x331)) x851) (= (x1065 x1458) x1258) (= (x597 (+ x331 96)) x495) (= (x1065 x187) x1511) (= (x1065 x69) x890) (= x114 (x1065 x1157)) (= x779 (x597 (+ x331 128))) (= (x1065 x779) x1136) (= (x1065 x331) x432) (>= x582 1) (= (x597 (+ 192 x331)) x1036) (= (x1207 x334 x1381) x355) (= x600 (x1065 x546)) (= x1412 (x597 (+ x331 96))) (= (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156) x675) (= (x116 x334 x1379 x275 x505 x1536 x600 x54) x1347) (= x505 (x1065 x502)) (= x824 (x1065 x1255)) (= (x1065 x340) x275) (= (x1065 x1450) x582) (= x69 (x597 (+ 128 x331))) (= x841 (x1065 x331)) (= x1458 (x597 (+ 32 x331))) (= (x1553 x334 x226 x1386 x824 x1411 x1136) x876) (= (x597 (+ 32 x331)) x1157) (= (x597 (+ x331 64)) x502) (= x1454 (x1065 x562)) (= x1507 (x597 (+ 160 x331))) (= (x597 (+ 64 x331)) x1255) (= (x1065 x632) x1411) (= (x597 (+ 64 x331)) x562)) (and (=> (= x336 x231) x7) x652))))))
(assert (=> (>= 10000 x505) (= 0 (x479 x505))))
(assert (=> (>= 10000 x1215) (= (x479 x1215) 0)))
(assert (x499 x920))
(assert (x499 x613))
(assert (x499 x46))
(assert (x499 x1084))
(assert (< 10000 (x1553 x334 x226 x1386 x824 x1411 x1136)))
(assert (x499 x495))
(assert (= (x479 18446744073709551613) 0))
(assert (x499 x1388))
(assert (x499 x397))
(assert (x672 x1326))
(assert (= (x945 (x557 x57 x1420 x1445 x195 x310 x826 x689 x1372)) x1420))
(assert (=> (<= x667 10000) (= 0 (x479 x667))))
(assert (=> (<= x1043 10000) (= 0 (x479 x1043))))
(assert (=> (>= 10000 x1536) (= (x479 x1536) 0)))
(assert (= (and x885 x688) x913))
(assert (= x841 (x945 (x316 x334 x841 x1195 x872))))
(assert (x499 x720))
(assert (= (x1553 x103 x860 x1000 x419 x855 x1446) (x479 (x1553 x103 x860 x1000 x419 x855 x1446))))
(assert (x733 x669))
(assert (x499 x1324))
(assert (x499 x1454))
(assert (x499 x178))
(assert (= 0 (x479 18446744073709551614)))
(assert (x499 x1562))
(assert (= (x479 (x316 x57 x224 x301 x1402)) (x316 x57 x224 x301 x1402)))
(assert (x499 x1184))
(assert (x499 x187))
(assert (x499 x960))
(assert (x499 x1445))
(assert (=> (>= 10000 x1107) (= (x479 x1107) 0)))
(assert (x499 x1533))
(assert (x499 x468))
(assert (x499 x793))
(assert (=> (>= 10000 x1503) (= 0 (x479 x1503))))
(assert (x499 x43))
(assert (x499 x1067))
(assert (= (x1499 (x376 x921 x1203 x1529 x1270 x667)) x921))
(assert (x499 x997))
(assert (= (x479 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (=> (<= x1465 10000) (= 0 (x479 x1465))))
(assert (x672 x1005))
(assert (= (x784 (x557 x370 x1488 x1278 x1433 x981 x574 x1043 x764)) x1433))
(assert (= x1520 (x784 (x116 x921 x1453 x1367 x1520 x394 x308 x1142))))
(assert (x499 x1131))
(assert (= (x479 (x316 x88 x46 x397 x996)) (x316 x88 x46 x397 x996)))
(assert (=> (<= x127 10000) (= (x479 x127) 0)))
(assert (x499 x530))
(assert (x499 x1300))
(assert (= (x635 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x1452))
(assert (x499 x1056))
(assert (x499 x104))
(assert (= (x635 (x1553 x334 x226 x1386 x824 x1411 x1136)) x1386))
(assert (x499 x1296))
(assert (x499 x433))
(assert (= x486 (and x415 x693)))
(assert (x499 x581))
(assert (= (and x964 x1550) x1006))
(assert (= (and (not x1305) x1328) x35))
(assert (x499 x676))
(assert (x499 x1456))
(assert (=> (<= x54 10000) (= 0 (x479 x54))))
(assert (= (x248 (x1553 x103 x860 x1000 x419 x855 x1446)) x1446))
(assert (= x940 (x635 (x557 x921 x1213 x940 x1359 x133 x407 x1358 x1486))))
(assert (= (x784 (x1553 x370 x1101 x1161 x161 x763 x893)) x161))
(assert (< (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1365 10000) (= (x479 x1365) 0)))
(assert (x499 x1210))
(assert (x499 x813))
(assert (x499 x1113))
(assert (= (x479 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)))
(assert (x499 x419))
(assert (x499 x1306))
(assert (x499 x934))
(assert (x672 x678))
(assert (x499 x93))
(assert (x733 x776))
(assert (x499 x1446))
(assert (x499 x1449))
(assert (= (x945 (x316 x921 x19 x1189 x24)) x19))
(assert (x499 x685))
(assert (x1275 2065879269316))
(assert (x499 x335))
(assert (= (=> (and (= x1115 (not (< 1 x1390))) (<= x206 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x728 x1552) x434) (< x206 x121) (= (x597 (+ 32 x766)) x1254) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x206)) (or (>= 18446744073709551487 x206) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x206)) (>= 18446744073709551614 x206) (= (x728 x766) x1300) (= (x597 (+ 32 x1552)) x766) (= x1531 (x728 x392)) (= (x1110 (- x1539 x1552)) x869) (= (x597 (+ x990 32)) x524) (= (x597 (+ 128 x206)) x121) (not (< x121 x206)) (= x1212 (x597 (+ 32 x206))) (<= x869 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 1461501637330902918203684832716283019655932542975 x1300) (= (x597 (+ 32 x1254)) x392) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x1552) (>= 2065879269316 x1552)) (<= x434 5) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x206) (>= 18446744073709551487 x206)) (= x990 (x597 (+ 32 x1212))) (= x252 (x728 x1254)) (<= x206 18446744073709551615) (<= 128 x869) (<= x206 18446744073709551614) (<= x206 18446744073709551615)) (and (=> (= x1388 x121) x810) x1115)) x441))
(assert (=> (<= x1074 10000) (= (x479 x1074) 0)))
(assert (x499 x1412))
(assert (x499 x827))
(assert (x499 x1019))
(assert (= x238 (x945 (x376 x759 x238 x236 x517 x1396))))
(assert (= (x479 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (x499 x254))
(assert (x499 x1503))
(assert (x499 x1406))
(assert (x499 x1542))
(assert (= x676 (x635 (x376 x103 x36 x676 x1187 x489))))
(assert (=> (<= x872 10000) (= 0 (x479 x872))))
(assert (x499 x1106))
(assert (x499 x1520))
(assert (x1275 4294967295))
(assert (x1021 x596 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x1181))
(assert (x1003 x1518))
(assert (=> (>= 10000 x1251) (= 0 (x479 x1251))))
(assert (not (x1275 (x1553 x334 x226 x1386 x824 x1411 x1136))))
(assert (x499 x362))
(assert (x499 x1407))
(assert (= (x994 (x557 x334 x1465 x1452 x1454 x1102 x890 x1120 x156)) x1120))
(assert (x499 x191))
(assert (x499 x677))
(assert (=> (<= x407 10000) (= 0 (x479 x407))))
(assert (=> (>= 10000 x51) (= 0 (x479 x51))))
(assert (x499 x786))
(assert (x499 x1387))
(assert (x499 x1354))
(assert (=> (>= 10000 x1138) (= 0 (x479 x1138))))
(assert (= (x248 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) x685))
(assert (x499 x544))
(assert (x499 x45))
(assert (=> (>= 10000 x827) (= 0 (x479 x827))))
(assert (x1021 x487 1461501637330902918203684832716283019655932542976))
(assert (= (x945 (x316 66 x792 x1030 x26)) x792))
(assert (x499 x654))
(assert (x499 x227))
(assert (=> (>= 10000 x1264) (= (x479 x1264) 0)))
(assert (= (x479 (x575 x57 x717 x74)) (x575 x57 x717 x74)))
(assert (x499 x1222))
(assert (x499 x219))
(assert (=> (<= x1516 10000) (= 0 (x479 x1516))))
(assert (x733 x1462))
(assert (x1003 x1539))
(assert (x733 x983))
(assert (= (x479 2065879269284) 0))
(assert (< (x116 x334 x1379 x275 x505 x1536 x600 x54) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x60 160 x983))
(assert (x499 x225))
(assert (x1021 x436 1461501637330902918203684832716283019655932542976))
(assert (x499 x1268))
(assert (=> (<= x442 10000) (= (x479 x442) 0)))
(assert (x499 x1320))
(assert (= (x945 (x116 x334 x1379 x275 x505 x1536 x600 x54)) x1379))
(assert (x499 x478))
(assert (x499 x1274))
(assert (not (x1275 (x116 x103 x903 x344 x127 x664 x454 x1096))))
(assert (= x529 (and x789 x932)))
(assert (x499 x611))
(assert (x499 x648))
(assert (x499 x84))
(assert (= x605 (=> (and (= (x728 196) x352) (<= x776 18446744073709551615) (or (>= 2065879269376 x352) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x352)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x352) (<= x1530 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1530 x352)) (and (> x352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1530))) (= (x728 x360) x776) (= (* x776 160) x1032) (= x956 (> x776 0)) (= x192 (* x776 32)) (= (+ x615 32) x398) (= (x597 (+ 32 x360)) x957) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x713) (= (x597 (+ (mod (+ 32 x192) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x713)) x541) (= x1500 (x597 (+ 32 x713))) (= x473 (x1110 (- x1539 x1032))) (>= x541 1) (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x957) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x473)) (and (< x473 x957) (= (<= x957 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x473 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x713 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x597 (+ 36 x352)) x360) (> x541 x713) (<= x713 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> x956 x854) (=> (and (not x956) (= x541 x1361)) x1459)))))
(assert (x499 x991))
(assert (= (x635 (x316 66 x792 x1030 x26)) x1030))
(assert (=> (>= 10000 x39) (= (x479 x39) 0)))
(assert (x499 x303))
(assert (= x539 (and x415 (not x693))))
(assert (x499 x691))
(assert (= x1142 (x994 (x116 x921 x1453 x1367 x1520 x394 x308 x1142))))
(assert (x499 x1066))
(assert (x499 x494))
(assert (x499 x515))
(assert (x499 x371))
(assert (=> (<= x46 10000) (= (x479 x46) 0)))
(assert (x499 x1358))
(assert (x499 x781))
(assert (x499 x1259))
(assert (=> (>= 10000 x676) (= 0 (x479 x676))))
(assert (=> (>= 10000 x1396) (= 0 (x479 x1396))))
(assert (x499 x9))
(assert (x499 x878))
(assert (= 0 (x1499 (x1252 0))))
(assert (= x937 (or x988 x300)))
(assert (= 0 (x479 18446744073709551487)))
(assert (< (x316 x334 x841 x1195 x872) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x499 x1455))
(assert (x499 x594))
(assert (x499 x273))
(assert (x499 x125))
(assert (x499 x830))
(assert (x499 x690))
(assert (x499 x372))
(assert (= (x1499 (x116 x103 x903 x344 x127 x664 x454 x1096)) x103))
(assert (=> (>= 10000 x489) (= (x479 x489) 0)))
(assert (x985 x1564))
(assert (x499 x948))
(assert (x499 x145))
(assert (x499 x1543))
(assert (x499 x890))
(assert (x499 x884))
(assert (= (x341 (x557 x88 x604 x1349 x785 x833 x685 x700 x8)) x833))
(check-sat)
(exit)
