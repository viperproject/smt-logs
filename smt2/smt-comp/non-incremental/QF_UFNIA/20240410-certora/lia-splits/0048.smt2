(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x59 () Int)
(declare-fun x1587 () Int)
(declare-fun x361 () Int)
(declare-fun x1523 () Bool)
(declare-fun x306 () Int)
(declare-fun x1719 () Int)
(declare-fun x160 () Int)
(declare-fun x1749 () Bool)
(declare-fun x442 () Int)
(declare-fun x1004 (Int) Int)
(declare-fun x161 () Int)
(declare-fun x531 () Int)
(declare-fun x186 () Int)
(declare-fun x1650 () Int)
(declare-fun x400 () Bool)
(declare-fun x37 () Int)
(declare-fun x218 () Int)
(declare-fun x1434 () Int)
(declare-fun x53 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1839 (Int) Int)
(declare-fun x916 () Bool)
(declare-fun x1486 () Int)
(declare-fun x697 () Int)
(declare-fun x867 () Bool)
(declare-fun x240 () Int)
(declare-fun x742 () Int)
(declare-fun x19 () Int)
(declare-fun x931 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x293 () Int)
(declare-fun x27 () Int)
(declare-fun x1804 () Int)
(declare-fun x1142 () Bool)
(declare-fun x827 () Int)
(declare-fun x418 () Int)
(declare-fun x700 () Bool)
(declare-fun x1335 () Int)
(declare-fun x311 () Bool)
(declare-fun x1658 () Int)
(declare-fun x538 () Int)
(declare-fun x466 () Bool)
(declare-fun x889 () Int)
(declare-fun x802 () Bool)
(declare-fun x1833 () Int)
(declare-fun x356 () Bool)
(declare-fun x935 () Int)
(declare-fun x950 () Int)
(declare-fun x882 () Bool)
(declare-fun x1487 () Int)
(declare-fun x682 () Int)
(declare-fun x1794 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x1451 () Int)
(declare-fun x634 () Int)
(declare-fun x1514 () Int)
(declare-fun x331 () Int)
(declare-fun x1129 () Int)
(declare-fun x1622 () Int)
(declare-fun x1608 () Int)
(declare-fun x694 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x712 () Bool)
(declare-fun x637 () Bool)
(declare-fun x639 () Bool)
(declare-fun x425 () Int)
(declare-fun x68 () Int)
(declare-fun x768 () Int)
(declare-fun x581 () Bool)
(declare-fun x566 () Int)
(declare-fun x476 () Bool)
(declare-fun x304 () Int)
(declare-fun x1799 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1185 () Int)
(declare-fun x432 () Int)
(declare-fun x1752 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1575 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x1570 () Int)
(declare-fun x709 () Int)
(declare-fun x314 () Int)
(declare-fun x1846 () Int)
(declare-fun x142 () Int)
(declare-fun x1620 () Bool)
(declare-fun x681 () Int)
(declare-fun x30 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1008 () Bool)
(declare-fun x1704 () Int)
(declare-fun x730 () Int)
(declare-fun x1858 () Int)
(declare-fun x176 () Int)
(declare-fun x1194 () Bool)
(declare-fun x558 () Int)
(declare-fun x1672 () Int)
(declare-fun x1446 () Bool)
(declare-fun x343 () Int)
(declare-fun x1306 () Bool)
(declare-fun x54 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x269 () Int)
(declare-fun x1236 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1734 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1025 () Int)
(declare-fun x573 () Int)
(declare-fun x179 () Int)
(declare-fun x864 () Int)
(declare-fun x1117 () Int)
(declare-fun x600 () Bool)
(declare-fun x879 () Int)
(declare-fun x1326 () Bool)
(declare-fun x807 () Int)
(declare-fun x1869 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x507 () Int)
(declare-fun x375 () Int)
(declare-fun x36 () Int)
(declare-fun x310 () Int)
(declare-fun x1762 () Int)
(declare-fun x984 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x76 () Int)
(declare-fun x1773 () Bool)
(declare-fun x732 () Int)
(declare-fun x809 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x1649 () Bool)
(declare-fun x517 () Int)
(declare-fun x624 () Int)
(declare-fun x323 () Int)
(declare-fun x268 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x714 () Int)
(declare-fun x320 () Int)
(declare-fun x1125 () Int)
(declare-fun x1497 () Int)
(declare-fun x1124 () Int)
(declare-fun x139 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x633 () Int)
(declare-fun x797 () Bool)
(declare-fun x325 () Int)
(declare-fun x1547 () Int)
(declare-fun x946 () Int)
(declare-fun x954 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1197 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1047 () Bool)
(declare-fun x763 () Int)
(declare-fun x628 () Int)
(declare-fun x1891 () Int)
(declare-fun x35 () Int)
(declare-fun x978 () Int)
(declare-fun x105 () Bool)
(declare-fun x403 () Int)
(declare-fun x488 () Int)
(declare-fun x32 () Bool)
(declare-fun x1299 () Int)
(declare-fun x780 () Int)
(declare-fun x1251 () Int)
(declare-fun x319 () Int)
(declare-fun x1628 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x381 () Bool)
(declare-fun x512 () Int)
(declare-fun x1500 () Int)
(declare-fun x153 () Int)
(declare-fun x1002 () Int)
(declare-fun x603 () Bool)
(declare-fun x415 () Bool)
(declare-fun x194 () Bool)
(declare-fun x843 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x427 () Int)
(declare-fun x423 () Int)
(declare-fun x1811 () Bool)
(declare-fun x980 () Bool)
(declare-fun x1370 () Int)
(declare-fun x596 () Bool)
(declare-fun x221 () Int)
(declare-fun x962 () Int)
(declare-fun x1884 () Bool)
(declare-fun x1404 () Int)
(declare-fun x640 () Int)
(declare-fun x1431 () Bool)
(declare-fun x924 () Int)
(declare-fun x588 () Int)
(declare-fun x1308 () Bool)
(declare-fun x1448 () Int)
(declare-fun x202 () Int)
(declare-fun x409 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x737 () Bool)
(declare-fun x534 () Int)
(declare-fun x729 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1179 () Int)
(declare-fun x345 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1491 () Bool)
(declare-fun x193 () Int)
(declare-fun x1426 () Bool)
(declare-fun x1033 () Int)
(declare-fun x881 () Int)
(declare-fun x903 () Int)
(declare-fun x510 () Bool)
(declare-fun x1883 () Int)
(declare-fun x825 () Bool)
(declare-fun x1792 () Int)
(declare-fun x46 () Int)
(declare-fun x1670 () Int)
(declare-fun x140 () Bool)
(declare-fun x921 () Int)
(declare-fun x956 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1239 () Int)
(declare-fun x482 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1027 () Int)
(declare-fun x406 () Int)
(declare-fun x1160 () Bool)
(declare-fun x1144 () Int)
(declare-fun x1711 () Int)
(declare-fun x1133 () Int)
(declare-fun x1766 (Int) Int)
(declare-fun x234 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x126 () Bool)
(declare-fun x1254 () Int)
(declare-fun x762 () Int)
(declare-fun x915 () Bool)
(declare-fun x1110 () Int)
(declare-fun x580 () Bool)
(declare-fun x1035 () Int)
(declare-fun x1203 () Int)
(declare-fun x988 () Int)
(declare-fun x324 () Int)
(declare-fun x982 () Int)
(declare-fun x856 () Bool)
(declare-fun x252 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1615 () Int)
(declare-fun x461 () Int)
(declare-fun x212 () Int)
(declare-fun x1597 () Bool)
(declare-fun x1877 () Int)
(declare-fun x71 () Bool)
(declare-fun x167 () Int)
(declare-fun x1775 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1407 (Int) Int)
(declare-fun x1565 () Bool)
(declare-fun x964 () Int)
(declare-fun x619 () Bool)
(declare-fun x1175 () Int)
(declare-fun x649 () Bool)
(declare-fun x350 () Int)
(declare-fun x85 () Int)
(declare-fun x773 (Int) Int)
(declare-fun x834 () Int)
(declare-fun x969 () Int)
(declare-fun x716 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1338 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x551 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1247 (Int) Int)
(declare-fun x1074 () Int)
(declare-fun x781 () Int)
(declare-fun x1602 () Bool)
(declare-fun x701 () Bool)
(declare-fun x1342 () Int)
(declare-fun x437 () Int)
(declare-fun x1741 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x996 () Int)
(declare-fun x576 () Int)
(declare-fun x455 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1313 () Int)
(declare-fun x819 () Bool)
(declare-fun x73 () Int)
(declare-fun x358 () Int)
(declare-fun x111 () Int)
(declare-fun x206 () Bool)
(declare-fun x96 () Int)
(declare-fun x992 () Int)
(declare-fun x490 () Bool)
(declare-fun x1725 () Int)
(declare-fun x366 () Bool)
(declare-fun x725 () Bool)
(declare-fun x655 () Int)
(declare-fun x772 () Bool)
(declare-fun x321 () Int)
(declare-fun x1695 () Int)
(declare-fun x18 () Int)
(declare-fun x181 () Int)
(declare-fun x1838 () Int)
(declare-fun x1503 (Int Int) Int)
(declare-fun x1309 () Int)
(declare-fun x1824 () Int)
(declare-fun x224 () Int)
(declare-fun x1876 () Bool)
(declare-fun x1759 () Int)
(declare-fun x1367 () Int)
(declare-fun x612 () Int)
(declare-fun x675 () Int)
(declare-fun x970 () Bool)
(declare-fun x804 () Int)
(declare-fun x1489 () Int)
(declare-fun x824 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1150 () Int)
(declare-fun x973 () Bool)
(declare-fun x4 () Bool)
(declare-fun x597 () Bool)
(declare-fun x1014 () Int)
(declare-fun x124 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1841 () Bool)
(declare-fun x208 () Bool)
(declare-fun x791 () Int)
(declare-fun x1099 () Int)
(declare-fun x1100 () Int)
(declare-fun x504 () Int)
(declare-fun x1534 () Bool)
(declare-fun x934 () Bool)
(declare-fun x717 () Int)
(declare-fun x1180 () Bool)
(declare-fun x31 () Int)
(declare-fun x1170 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1393 () Int)
(declare-fun x1810 () Int)
(declare-fun x1470 (Int) Int)
(declare-fun x852 () Int)
(declare-fun x800 () Bool)
(declare-fun x151 () Int)
(declare-fun x1476 () Int)
(declare-fun x82 () Int)
(declare-fun x1648 () Int)
(declare-fun x749 () Int)
(declare-fun x720 () Int)
(declare-fun x554 () Int)
(declare-fun x1681 () Int)
(declare-fun x669 () Int)
(declare-fun x1750 () Int)
(declare-fun x349 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x58 () Int)
(declare-fun x1088 () Bool)
(declare-fun x651 (Int) Int)
(declare-fun x1768 () Int)
(declare-fun x152 () Bool)
(declare-fun x463 () Int)
(declare-fun x1361 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1596 () Int)
(declare-fun x265 () Bool)
(declare-fun x1603 () Int)
(declare-fun x386 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1089 () Int)
(declare-fun x327 () Int)
(declare-fun x674 () Int)
(declare-fun x690 () Int)
(declare-fun x180 () Int)
(declare-fun x1263 () Int)
(declare-fun x14 () Bool)
(declare-fun x250 () Bool)
(declare-fun x340 () Int)
(declare-fun x86 () Bool)
(declare-fun x228 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x469 () Bool)
(declare-fun x660 () Bool)
(declare-fun x901 () Int)
(declare-fun x1055 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x1740 () Int)
(declare-fun x72 () Int)
(declare-fun x260 () Int)
(declare-fun x518 () Int)
(declare-fun x1643 () Int)
(declare-fun x439 () Int)
(declare-fun x608 () Int)
(declare-fun x744 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x862 () Int)
(declare-fun x587 () Bool)
(declare-fun x477 () Int)
(declare-fun x1836 () Int)
(declare-fun x873 () Int)
(declare-fun x70 () Bool)
(declare-fun x966 () Int)
(declare-fun x1635 () Int)
(declare-fun x62 () Bool)
(declare-fun x783 () Int)
(declare-fun x1465 () Int)
(declare-fun x116 () Int)
(declare-fun x557 () Int)
(declare-fun x1692 () Int)
(declare-fun x408 () Int)
(declare-fun x478 () Int)
(declare-fun x1506 () Bool)
(declare-fun x462 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1522 () Int)
(declare-fun x961 () Int)
(declare-fun x1492 () Int)
(declare-fun x401 () Bool)
(declare-fun x550 () Int)
(declare-fun x1348 () Bool)
(declare-fun x533 () Int)
(declare-fun x367 () Int)
(declare-fun x614 () Bool)
(declare-fun x226 () Bool)
(declare-fun x939 () Int)
(declare-fun x858 () Bool)
(declare-fun x893 () Int)
(declare-fun x66 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1006 () Int)
(declare-fun x656 () Bool)
(declare-fun x1424 () Int)
(declare-fun x703 () Int)
(declare-fun x365 () Int)
(declare-fun x219 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x537 () Int)
(declare-fun x346 () Bool)
(declare-fun x1351 () Int)
(declare-fun x502 () Bool)
(declare-fun x798 () Int)
(declare-fun x1638 () Int)
(declare-fun x1516 () Int)
(declare-fun x1320 () Bool)
(declare-fun x348 () Int)
(declare-fun x1728 () Bool)
(declare-fun x506 () Int)
(declare-fun x115 () Bool)
(declare-fun x777 (Int) Int)
(declare-fun x137 () Int)
(declare-fun x141 () Int)
(declare-fun x1554 () Bool)
(declare-fun x906 () Int)
(declare-fun x1244 () Bool)
(declare-fun x1261 () Int)
(declare-fun x497 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x322 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x1889 () Int)
(declare-fun x210 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1540 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x574 () Bool)
(declare-fun x910 () Int)
(declare-fun x1046 () Bool)
(declare-fun x839 () Bool)
(declare-fun x277 () Int)
(declare-fun x129 () Bool)
(declare-fun x1700 () Int)
(declare-fun x652 () Int)
(declare-fun x1556 () Int)
(declare-fun x877 () Bool)
(declare-fun x471 () Int)
(declare-fun x1646 () Int)
(declare-fun x519 () Int)
(declare-fun x647 () Int)
(declare-fun x1134 () Bool)
(declare-fun x855 () Int)
(declare-fun x735 () Int)
(declare-fun x1049 () Int)
(declare-fun x613 () Int)
(declare-fun x1343 () Int)
(declare-fun x890 () Int)
(declare-fun x1011 () Int)
(declare-fun x147 () Int)
(declare-fun x1138 () Int)
(declare-fun x1524 () Int)
(declare-fun x642 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1647 () Int)
(declare-fun x1737 () Int)
(declare-fun x1840 () Int)
(declare-fun x1388 () Bool)
(declare-fun x402 () Int)
(declare-fun x359 () Int)
(declare-fun x1237 () Int)
(declare-fun x1238 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1383 () Int)
(declare-fun x595 () Int)
(declare-fun x315 () Int)
(declare-fun x895 () Int)
(declare-fun x1616 () Int)
(declare-fun x1521 () Int)
(declare-fun x498 () Int)
(declare-fun x766 () Int)
(declare-fun x755 () Bool)
(declare-fun x128 () Int)
(declare-fun x296 () Int)
(declare-fun x1625 () Bool)
(declare-fun x341 () Int)
(declare-fun x1641 () Int)
(declare-fun x123 () Bool)
(declare-fun x1822 () Int)
(declare-fun x363 () Bool)
(declare-fun x1417 () Int)
(declare-fun x562 () Int)
(declare-fun x1629 () Int)
(declare-fun x1723 () Int)
(declare-fun x585 () Bool)
(declare-fun x1874 () Int)
(declare-fun x1818 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x965 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1542 () Int)
(declare-fun x1428 () Int)
(declare-fun x5 () Int)
(declare-fun x919 () Int)
(declare-fun x1697 () Int)
(declare-fun x918 () Bool)
(declare-fun x1717 () Int)
(declare-fun x1472 () Bool)
(declare-fun x611 () Int)
(declare-fun x236 () Int)
(declare-fun x87 () Bool)
(declare-fun x727 (Int) Int)
(declare-fun x279 () Int)
(declare-fun x121 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1511 () Int)
(declare-fun x1705 () Int)
(declare-fun x1761 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1066 () Bool)
(declare-fun x106 () Int)
(declare-fun x242 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1532 (Int) Int)
(declare-fun x930 () Int)
(declare-fun x1331 () Bool)
(declare-fun x91 () Int)
(declare-fun x491 () Bool)
(declare-fun x1860 () Int)
(declare-fun x1347 () Int)
(declare-fun x1813 () Int)
(declare-fun x28 () Int)
(declare-fun x90 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1227 () Int)
(declare-fun x138 () Int)
(declare-fun x621 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1419 () Bool)
(declare-fun x955 () Int)
(declare-fun x1235 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x556 () Int)
(declare-fun x1886 () Int)
(declare-fun x1683 () Int)
(declare-fun x728 () Bool)
(declare-fun x183 () Bool)
(declare-fun x1632 () Int)
(declare-fun x1764 () Bool)
(declare-fun x1201 () Int)
(declare-fun x396 () Int)
(declare-fun x1671 () Int)
(declare-fun x626 () Int)
(declare-fun x829 () Int)
(declare-fun x917 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x374 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1722 () Int)
(declare-fun x638 () Int)
(declare-fun x900 () Int)
(declare-fun x1800 () Int)
(declare-fun x1744 () Int)
(declare-fun x1023 () Bool)
(declare-fun x892 () Int)
(declare-fun x514 () Int)
(declare-fun x3 () Bool)
(declare-fun x122 () Int)
(declare-fun x817 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x257 () Int)
(declare-fun x991 (Int) Int)
(declare-fun x707 () Bool)
(declare-fun x492 () Int)
(declare-fun x1199 () Bool)
(declare-fun x132 () Int)
(declare-fun x1425 () Int)
(declare-fun x474 () Int)
(declare-fun x1375 () Bool)
(declare-fun x659 () Bool)
(declare-fun x178 () Bool)
(declare-fun x384 () Int)
(declare-fun x1281 () Int)
(declare-fun x1660 () Bool)
(declare-fun x1312 () Int)
(declare-fun x952 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x309 () Bool)
(declare-fun x246 () Int)
(declare-fun x1113 () Int)
(declare-fun x1279 () Bool)
(declare-fun x920 () Bool)
(declare-fun x457 () Int)
(declare-fun x1387 () Bool)
(declare-fun x794 () Int)
(declare-fun x368 () Int)
(declare-fun x1061 () Bool)
(declare-fun x458 () Int)
(declare-fun x247 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x653 () Int)
(declare-fun x1668 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1058 () Int)
(declare-fun x1363 () Int)
(declare-fun x932 () Int)
(declare-fun x391 () Int)
(declare-fun x1452 () Int)
(declare-fun x1543 () Int)
(declare-fun x1301 () Int)
(declare-fun x316 () Bool)
(declare-fun x967 () Int)
(declare-fun x623 () Int)
(declare-fun x1255 () Int)
(declare-fun x1198 () Int)
(declare-fun x661 () Int)
(declare-fun x1746 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1553 () Int)
(declare-fun x695 () Int)
(declare-fun x645 () Int)
(declare-fun x45 () Bool)
(declare-fun x1000 () Int)
(declare-fun x1092 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1256 () Int)
(declare-fun x516 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1252 () Int)
(declare-fun x472 () Int)
(declare-fun x868 () Int)
(declare-fun x814 (Int) Int)
(declare-fun x680 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x291 () Int)
(declare-fun x191 () Int)
(declare-fun x207 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1182 () Int)
(declare-fun x60 (Int Int) Int)
(declare-fun x1085 () Int)
(declare-fun x1204 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x253 () Int)
(declare-fun x434 () Int)
(declare-fun x1108 () Bool)
(declare-fun x513 () Int)
(declare-fun x1208 () Int)
(declare-fun x1209 () Int)
(declare-fun x567 () Int)
(declare-fun x1038 () Bool)
(declare-fun x789 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x89 () Int)
(declare-fun x1479 () Int)
(declare-fun x1790 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x419 () Int)
(declare-fun x1412 () Int)
(declare-fun x688 () Int)
(declare-fun x615 () Int)
(declare-fun x948 () Int)
(declare-fun x1379 () Int)
(declare-fun x1662 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1219 (Int) Int)
(declare-fun x778 () Int)
(declare-fun x636 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x793 () Int)
(declare-fun x503 () Int)
(declare-fun x1339 () Int)
(declare-fun x1059 () Int)
(declare-fun x394 () Int)
(declare-fun x8 () Int)
(declare-fun x1355 () Int)
(declare-fun x1323 () Bool)
(declare-fun x69 () Int)
(declare-fun x44 () Bool)
(declare-fun x1091 () Int)
(declare-fun x342 () Int)
(declare-fun x1654 () Int)
(declare-fun x678 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x869 (Int) Int)
(declare-fun x108 () Bool)
(declare-fun x1368 () Int)
(declare-fun x1324 () Int)
(declare-fun x1747 () Int)
(declare-fun x1415 () Bool)
(declare-fun x33 () Int)
(declare-fun x896 () Int)
(declare-fun x1007 () Int)
(declare-fun x261 () Bool)
(declare-fun x1689 () Int)
(declare-fun x387 () Int)
(declare-fun x1316 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1816 () Int)
(declare-fun x110 () Bool)
(declare-fun x830 () Bool)
(declare-fun x1721 () Int)
(declare-fun x48 () Bool)
(declare-fun x347 () Int)
(declare-fun x103 () Int)
(declare-fun x456 () Bool)
(declare-fun x549 () Int)
(declare-fun x494 () Bool)
(declare-fun x496 () Int)
(declare-fun x1576 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1549 () Bool)
(declare-fun x698 () Bool)
(declare-fun x217 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1169 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1774 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x460 () Int)
(declare-fun x1162 () Int)
(declare-fun x373 () Int)
(declare-fun x1050 () Int)
(declare-fun x262 () Int)
(declare-fun x1329 () Bool)
(declare-fun x940 () Bool)
(declare-fun x801 () Bool)
(declare-fun x871 (Int) Int)
(declare-fun x1352 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x182 () Int)
(declare-fun x395 () Int)
(declare-fun x1781 () Bool)
(declare-fun x1098 () Int)
(declare-fun x144 () Bool)
(declare-fun x530 () Int)
(declare-fun x104 () Int)
(declare-fun x1475 () Bool)
(declare-fun x81 () Int)
(declare-fun x1041 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1873 (Int) Int)
(declare-fun x1745 () Int)
(declare-fun x133 () Int)
(declare-fun x92 (Int) Int)
(declare-fun x1441 () Bool)
(declare-fun x328 () Int)
(declare-fun x1266 () Int)
(declare-fun x528 () Int)
(declare-fun x686 () Bool)
(declare-fun x971 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1165 () Int)
(declare-fun x1793 () Bool)
(declare-fun x1644 () Int)
(declare-fun x422 (Int) Int)
(declare-fun x1861 () Int)
(declare-fun x1807 () Bool)
(declare-fun x805 () Int)
(declare-fun x292 () Int)
(declare-fun x443 () Bool)
(declare-fun x828 () Int)
(declare-fun x1572 () Bool)
(declare-fun x283 () Int)
(declare-fun x424 () Bool)
(declare-fun x1009 () Int)
(declare-fun x201 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1845 () Int)
(declare-fun x976 () Bool)
(declare-fun x673 () Int)
(declare-fun x275 () Int)
(declare-fun x172 () Int)
(declare-fun x1060 (Int) Int)
(declare-fun x430 () Bool)
(declare-fun x972 () Int)
(declare-fun x1686 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1555 () Int)
(declare-fun x953 () Int)
(declare-fun x863 () Int)
(declare-fun x803 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1823 () Int)
(declare-fun x1147 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x933 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1291 () Bool)
(declare-fun x288 () Int)
(declare-fun x1657 () Int)
(declare-fun x981 () Bool)
(declare-fun x1432 () Int)
(declare-fun x759 () Int)
(declare-fun x579 () Int)
(declare-fun x1842 () Int)
(declare-fun x1791 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x818 () Bool)
(declare-fun x1178 () Int)
(declare-fun x41 () Int)
(declare-fun x561 () Int)
(declare-fun x1605 () Int)
(declare-fun x1070 (Int) Int)
(declare-fun x989 () Int)
(declare-fun x317 () Int)
(declare-fun x1519 () Int)
(declare-fun x552 () Bool)
(declare-fun x1366 () Int)
(declare-fun x1349 () Int)
(declare-fun x1397 () Int)
(declare-fun x1016 () Bool)
(declare-fun x39 () Int)
(declare-fun x1018 () Int)
(declare-fun x1754 () Int)
(declare-fun x1510 () Bool)
(declare-fun x1727 () Int)
(declare-fun x211 () Int)
(declare-fun x382 () Int)
(declare-fun x209 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1653 () Int)
(declare-fun x49 () Int)
(declare-fun x904 () Int)
(declare-fun x1890 () Bool)
(declare-fun x1350 () Int)
(declare-fun x810 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1544 () Int)
(declare-fun x540 () Bool)
(declare-fun x774 () Bool)
(declare-fun x205 () Bool)
(declare-fun x495 () Bool)
(declare-fun x13 () Bool)
(declare-fun x563 () Bool)
(declare-fun x109 () Int)
(declare-fun x617 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x999 () Int)
(declare-fun x1105 () Int)
(declare-fun x1287 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x431 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x1205 () Int)
(declare-fun x1318 () Int)
(declare-fun x1583 () Int)
(declare-fun x813 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1655 () Int)
(declare-fun x1493 () Int)
(declare-fun x1483 () Bool)
(declare-fun x546 () Bool)
(declare-fun x170 () Int)
(declare-fun x1067 () Int)
(declare-fun x1520 () Int)
(declare-fun x602 () Bool)
(declare-fun x1612 () Int)
(declare-fun x280 () Bool)
(declare-fun x1585 () Int)
(declare-fun x993 () Bool)
(declare-fun x985 () Bool)
(declare-fun x243 () Bool)
(declare-fun x1333 () Int)
(declare-fun x301 () Int)
(declare-fun x1071 (Int Int) Int)
(declare-fun x648 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1665 () Int)
(declare-fun x841 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x440 () Bool)
(declare-fun x479 () Int)
(declare-fun x1867 () Bool)
(declare-fun x404 () Int)
(declare-fun x1332 () Bool)
(declare-fun x1278 () Int)
(declare-fun x672 () Int)
(declare-fun x1850 () Int)
(declare-fun x447 () Bool)
(declare-fun x750 () Int)
(declare-fun x1410 () Bool)
(declare-fun x570 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1127 () Int)
(declare-fun x505 () Int)
(declare-fun x1231 () Int)
(declare-fun x1825 () Int)
(declare-fun x1707 () Int)
(declare-fun x664 () Bool)
(declare-fun x912 () Int)
(declare-fun x351 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1591 () Int)
(declare-fun x861 () Bool)
(declare-fun x300 () Bool)
(declare-fun x857 () Bool)
(declare-fun x40 () Bool)
(declare-fun x806 () Int)
(declare-fun x438 () Int)
(declare-fun x630 () Int)
(declare-fun x1881 () Int)
(declare-fun x1730 () Bool)
(declare-fun x11 () Int)
(declare-fun x821 () Int)
(declare-fun x354 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1767 () Int)
(declare-fun x897 () Int)
(declare-fun x225 () Bool)
(declare-fun x1029 () Int)
(declare-fun x454 () Bool)
(declare-fun x1718 () Int)
(declare-fun x1021 () Int)
(declare-fun x850 () Int)
(declare-fun x1176 () Int)
(declare-fun x393 () Int)
(declare-fun x119 () Int)
(declare-fun x289 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1609 () Int)
(declare-fun x230 () Bool)
(declare-fun x294 () Bool)
(declare-fun x254 () Int)
(declare-fun x241 () Bool)
(declare-fun x468 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x383 () Int)
(declare-fun x665 () Bool)
(declare-fun x118 () Int)
(declare-fun x840 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x747 () Int)
(declare-fun x229 () Bool)
(declare-fun x290 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1709 () Bool)
(declare-fun x135 () Int)
(declare-fun x560 () Int)
(declare-fun x1495 () Int)
(declare-fun x1111 () Bool)
(declare-fun x55 () Int)
(declare-fun x51 () Int)
(declare-fun x1758 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1012 () Int)
(declare-fun x508 () Bool)
(declare-fun x1268 () Int)
(declare-fun x878 () Int)
(declare-fun x1173 () Bool)
(declare-fun x820 () Bool)
(declare-fun x378 () Int)
(declare-fun x1449 () Bool)
(declare-fun x876 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x844 () Int)
(declare-fun x1285 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x143 () Int)
(declare-fun x1731 () Int)
(declare-fun x1757 () Int)
(declare-fun x884 () Bool)
(declare-fun x739 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x837 () Int)
(declare-fun x719 () Bool)
(declare-fun x849 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1702 () Int)
(declare-fun x607 () Int)
(declare-fun x1763 () Bool)
(declare-fun x945 () Int)
(declare-fun x692 () Int)
(declare-fun x757 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1172 () Int)
(declare-fun x1569 () Int)
(declare-fun x1453 () Int)
(declare-fun x905 () Int)
(declare-fun x842 () Int)
(declare-fun x1478 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x765 () Int)
(declare-fun x542 () Int)
(declare-fun x1290 () Int)
(declare-fun x364 () Int)
(declare-fun x1820 () Bool)
(declare-fun x609 () Bool)
(declare-fun x410 () Bool)
(declare-fun x34 () Int)
(declare-fun x1234 () Int)
(declare-fun x527 () Int)
(declare-fun x790 () Int)
(declare-fun x851 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x274 () Bool)
(declare-fun x547 () Int)
(declare-fun x112 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1230 () Int)
(declare-fun x1663 () Bool)
(declare-fun x927 () Bool)
(declare-fun x1753 () Int)
(declare-fun x388 () Int)
(declare-fun x198 () Int)
(declare-fun x831 () Int)
(declare-fun x436 () Int)
(declare-fun x913 () Int)
(declare-fun x465 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1634 () Int)
(declare-fun x650 () Int)
(declare-fun x1504 () Int)
(declare-fun x1305 () Int)
(declare-fun x1164 () Int)
(declare-fun x1733 () Bool)
(declare-fun x1192 () Int)
(declare-fun x52 () Int)
(declare-fun x951 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1248 () Int)
(declare-fun x57 () Int)
(declare-fun x1003 () Int)
(declare-fun x1736 () Int)
(declare-fun x1384 () Int)
(declare-fun x287 (Int) Int)
(declare-fun x1481 () Int)
(declare-fun x1819 () Bool)
(declare-fun x591 () Int)
(declare-fun x584 () Int)
(declare-fun x1464 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1032 () Int)
(declare-fun x334 () Int)
(declare-fun x199 () Bool)
(declare-fun x308 () Int)
(declare-fun x1564 () Bool)
(declare-fun x569 () Int)
(declare-fun x429 () Int)
(declare-fun x1460 () Bool)
(declare-fun x411 () Int)
(declare-fun x997 () Int)
(declare-fun x333 () Int)
(declare-fun x1783 () Int)
(declare-fun x539 () Int)
(declare-fun x1871 () Int)
(declare-fun x620 () Int)
(declare-fun x155 () Bool)
(declare-fun x1539 () Int)
(declare-fun x1277 () Int)
(declare-fun x299 () Bool)
(declare-fun x101 () Int)
(declare-fun x785 () Int)
(declare-fun x986 () Int)
(declare-fun x216 () Int)
(declare-fun x473 () Int)
(declare-fun x173 () Bool)
(declare-fun x372 () Int)
(declare-fun x120 () Bool)
(declare-fun x1028 () Int)
(declare-fun x307 () Int)
(declare-fun x1821 () Int)
(declare-fun x98 () Int)
(declare-fun x264 () Int)
(declare-fun x355 () Int)
(declare-fun x860 () Bool)
(declare-fun x604 () Int)
(declare-fun x886 () Int)
(declare-fun x453 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1610 (Int) Int)
(declare-fun x1024 () Int)
(declare-fun x885 () Bool)
(declare-fun x29 () Bool)
(declare-fun x872 () Int)
(declare-fun x131 () Int)
(declare-fun x826 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1222 () Int)
(declare-fun x171 () Int)
(declare-fun x1604 () Bool)
(declare-fun x65 () Int)
(declare-fun x1051 () Int)
(declare-fun x775 () Int)
(declare-fun x1713 () Bool)
(declare-fun x859 () Int)
(declare-fun x43 () Bool)
(declare-fun x1685 (Int Int) Int)
(declare-fun x1826 () Int)
(declare-fun x390 () Bool)
(declare-fun x975 () Bool)
(declare-fun x1784 () Int)
(declare-fun x622 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x392 () Int)
(declare-fun x822 () Bool)
(declare-fun x1760 () Int)
(declare-fun x1330 () Int)
(declare-fun x745 () Bool)
(declare-fun x543 () Bool)
(declare-fun x162 () Int)
(declare-fun x914 () Bool)
(declare-fun x911 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1062 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1243 () Int)
(declare-fun x1115 () Int)
(declare-fun x84 () Int)
(declare-fun x1369 () Bool)
(declare-fun x412 () Bool)
(declare-fun x832 () Int)
(declare-fun x480 () Bool)
(declare-fun x187 () Bool)
(declare-fun x244 () Bool)
(declare-fun x407 () Int)
(declare-fun x559 () Int)
(declare-fun x1429 (Int) Int)
(declare-fun x1402 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x145 () Int)
(declare-fun x481 () Bool)
(declare-fun x1806 () Int)
(declare-fun x276 () Bool)
(declare-fun x1259 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1398 () Int)
(declare-fun x83 () Bool)
(declare-fun x1321 () Int)
(declare-fun x1 () Int)
(declare-fun x470 () Int)
(declare-fun x22 () Int)
(declare-fun x715 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x577 () Int)
(declare-fun x1447 () Int)
(declare-fun x17 () Int)
(declare-fun x1293 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1691 () Int)
(declare-fun x753 () Bool)
(declare-fun x1664 () Int)
(declare-fun x1097 () Bool)
(declare-fun x926 () Int)
(declare-fun x938 () Int)
(declare-fun x1161 () Int)
(declare-fun x1765 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1463 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1284 (Int) Int)
(declare-fun x541 () Int)
(declare-fun x1772 () Int)
(declare-fun x114 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x1827 () Int)
(declare-fun x544 () Bool)
(declare-fun x1659 () Int)
(declare-fun x1296 () Int)
(declare-fun x983 () Int)
(declare-fun x723 () Bool)
(declare-fun x928 () Bool)
(declare-fun x256 (Int) Int)
(declare-fun x724 () Int)
(declare-fun x12 () Int)
(declare-fun x1158 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x295 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x936 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1710 () Int)
(declare-fun x1102 () Int)
(declare-fun x184 () Int)
(declare-fun x704 () Int)
(declare-fun x464 () Bool)
(declare-fun x526 () Int)
(declare-fun x7 () Int)
(declare-fun x1395 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x909 () Int)
(declare-fun x362 () Int)
(declare-fun x1188 () Int)
(declare-fun x1592 () Int)
(declare-fun x1507 () Int)
(declare-fun x1530 () Int)
(declare-fun x1537 () Bool)
(declare-fun x501 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x764 () Int)
(declare-fun x1494 () Int)
(declare-fun x853 () Int)
(declare-fun x751 () Int)
(declare-fun x1844 () Int)
(declare-fun x1868 () Int)
(declare-fun x259 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1295 () Int)
(declare-fun x444 () Bool)
(declare-fun x1859 () Int)
(declare-fun x1780 () Int)
(declare-fun x1676 () Int)
(declare-fun x166 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1063 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1196 () Int)
(declare-fun x812 () Int)
(declare-fun x555 () Int)
(declare-fun x1633 () Bool)
(declare-fun x426 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x786 () Int)
(declare-fun x947 () Int)
(declare-fun x1264 () Int)
(declare-fun x117 () Int)
(declare-fun x787 () Int)
(declare-fun x1748 () Int)
(declare-fun x1786 () Bool)
(declare-fun x25 () Int)
(declare-fun x545 () Int)
(declare-fun x446 () Bool)
(declare-fun x215 () Int)
(declare-fun x357 () Int)
(declare-fun x1267 () Bool)
(declare-fun x1315 () Int)
(declare-fun x907 () Int)
(declare-fun x397 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1611 () Int)
(declare-fun x1805 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x721 () Int)
(declare-fun x370 () Int)
(declare-fun x693 () Int)
(declare-fun x1250 () Int)
(declare-fun x1857 () Int)
(declare-fun x1536 () Int)
(declare-fun x452 () Bool)
(declare-fun x1389 () Int)
(declare-fun x200 () Int)
(declare-fun x1778 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x625 () Bool)
(declare-fun x929 () Int)
(declare-fun x998 () Int)
(declare-fun x691 () Int)
(declare-fun x297 () Int)
(declare-fun x233 () Bool)
(declare-fun x836 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1411 () Int)
(declare-fun x708 () Int)
(declare-fun x1830 () Bool)
(declare-fun x1435 () Int)
(declare-fun x249 () Int)
(declare-fun x1440 () Int)
(declare-fun x899 () Bool)
(declare-fun x1183 () Int)
(declare-fun x330 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x134 () Bool)
(declare-fun x792 () Bool)
(declare-fun x1788 () Int)
(declare-fun x883 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x509 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1862 () Bool)
(declare-fun x421 () Bool)
(declare-fun x748 (Int) Int)
(declare-fun x1406 () Int)
(declare-fun x848 () Int)
(declare-fun x1436 () Int)
(declare-fun x1769 () Bool)
(declare-fun x149 () Int)
(declare-fun x222 () Int)
(declare-fun x1405 () Int)
(declare-fun x1345 () Int)
(declare-fun x1631 () Int)
(declare-fun x379 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1215 () Int)
(declare-fun x974 () Int)
(declare-fun x441 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x1864 () Int)
(declare-fun x676 () Int)
(declare-fun x521 () Bool)
(declare-fun x658 () Bool)
(declare-fun x1461 () Int)
(declare-fun x483 () Bool)
(declare-fun x26 () Int)
(declare-fun x605 () Int)
(declare-fun x1865 () Bool)
(declare-fun x258 (Int) Int)
(declare-fun x770 () Int)
(declare-fun x968 () Bool)
(declare-fun x743 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1803 () Int)
(declare-fun x1086 () Bool)
(declare-fun x594 () Int)
(declare-fun x1599 () Bool)
(declare-fun x937 () Int)
(declare-fun x520 () Int)
(declare-fun x499 () Bool)
(declare-fun x413 () Int)
(declare-fun x450 () Int)
(declare-fun x1856 () Int)
(declare-fun x1878 () Int)
(declare-fun x1480 () Int)
(declare-fun x1292 () Int)
(declare-fun x213 () Int)
(declare-fun x667 () Int)
(declare-fun x823 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1126 () Int)
(declare-fun x979 () Int)
(declare-fun x1386 () Int)
(declare-fun x273 () Int)
(declare-fun x75 () Int)
(declare-fun x1241 () Int)
(declare-fun x1053 () Bool)
(declare-fun x1262 () Int)
(declare-fun x164 () Bool)
(declare-fun x1174 () Int)
(declare-fun x702 () Int)
(declare-fun x353 () Int)
(declare-fun x710 () Int)
(declare-fun x223 () Int)
(declare-fun x1548 () Int)
(declare-fun x1600 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1450 () Int)
(declare-fun x683 () Int)
(declare-fun x63 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1297 () Int)
(declare-fun x1557 () Int)
(declare-fun x1210 (Int) Int)
(declare-fun x1837 () Bool)
(declare-fun x635 () Int)
(declare-fun x298 () Bool)
(declare-fun x156 () Int)
(declare-fun x1509 () Int)
(declare-fun x284 () Bool)
(declare-fun x1785 () Int)
(declare-fun x668 () Bool)
(declare-fun x9 () Int)
(declare-fun x1438 () Int)
(declare-fun x154 () Bool)
(declare-fun x163 () Int)
(declare-fun x1732 () Bool)
(declare-fun x795 () Int)
(declare-fun x536 () Int)
(declare-fun x148 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1442 () Int)
(declare-fun x1606 () Bool)
(declare-fun x189 () Bool)
(declare-fun x784 () Bool)
(declare-fun x847 () Int)
(declare-fun x196 () Int)
(declare-fun x318 () Bool)
(declare-fun x1107 () Int)
(declare-fun x113 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x398 () Int)
(declare-fun x405 () Int)
(declare-fun x887 () Bool)
(declare-fun x761 () Bool)
(declare-fun x305 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x696 () Int)
(declare-fun x1362 () Int)
(declare-fun x1427 () Int)
(declare-fun x705 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x898 (Int) Bool)
(declare-fun x1114 () Bool)
(declare-fun x1177 () Int)
(declare-fun x578 () Bool)
(declare-fun x448 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1302 () Int)
(declare-fun x1052 () Int)
(declare-fun x303 () Int)
(declare-fun x136 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x47 () Bool)
(declare-fun x958 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x601 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1882 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1319 () Int)
(declare-fun x963 () Int)
(declare-fun x532 (Int) Int)
(declare-fun x1525 () Int)
(declare-fun x88 () Int)
(declare-fun x767 () Int)
(declare-fun x1364 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1211 () Bool)
(declare-fun x263 () Int)
(declare-fun x100 () Int)
(declare-fun x203 () Int)
(declare-fun x1439 () Int)
(declare-fun x942 () Int)
(declare-fun x107 () Int)
(declare-fun x177 () Int)
(declare-fun x1396 () Int)
(declare-fun x646 (Int) Int)
(declare-fun x1614 () Int)
(declare-fun x1852 () Bool)
(declare-fun x1851 () Int)
(declare-fun x687 () Bool)
(declare-fun x487 () Int)
(declare-fun x1096 () Int)
(declare-fun x1832 () Bool)
(declare-fun x1242 () Int)
(declare-fun x689 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x782 () Int)
(declare-fun x338 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1698 () Bool)
(declare-fun x79 (Int Int) Int)
(declare-fun x1065 () Bool)
(declare-fun x1327 () Int)
(declare-fun x165 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x515 () Bool)
(declare-fun x1624 () Int)
(declare-fun x779 () Int)
(declare-fun x6 () Int)
(declare-fun x943 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1541 (Int Int Int) Int)
(declare-fun x1488 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1408 () Int)
(declare-fun x1314 () Int)
(declare-fun x1378 () Bool)
(declare-fun x598 () Bool)
(declare-fun x1888 () Int)
(declare-fun x150 () Int)
(declare-fun x239 () Int)
(declare-fun x1593 () Int)
(declare-fun x1445 () Int)
(declare-fun x286 () Int)
(declare-fun x593 () Int)
(declare-fun x339 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1359 () Int)
(declare-fun x1545 () Int)
(declare-fun x1094 () Int)
(declare-fun x657 () Bool)
(declare-fun x671 () Int)
(declare-fun x1356 () Int)
(declare-fun x1001 () Bool)
(declare-fun x360 () Int)
(declare-fun x1546 () Bool)
(declare-fun x662 () Int)
(declare-fun x1213 () Int)
(declare-fun x845 () Int)
(declare-fun x1621 () Int)
(declare-fun x1075 () Bool)
(declare-fun x1416 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x285 () Int)
(declare-fun x713 () Int)
(declare-fun x553 () Int)
(declare-fun x731 () Int)
(declare-fun x643 () Bool)
(declare-fun x752 () Int)
(declare-fun x1228 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x467 () Int)
(declare-fun x1499 () Bool)
(declare-fun x344 () Bool)
(declare-fun x1087 () Int)
(declare-fun x94 () Int)
(declare-fun x995 () Bool)
(declare-fun x1072 () Int)
(declare-fun x987 () Int)
(declare-fun x815 () Int)
(declare-fun x1037 () Int)
(declare-fun x1022 () Int)
(declare-fun x77 () Int)
(declare-fun x1834 (Int) Int)
(declare-fun x1249 () Int)
(declare-fun x1157 () Int)
(declare-fun x923 () Bool)
(declare-fun x1642 () Int)
(declare-fun x941 () Bool)
(declare-fun x332 () Int)
(declare-fun x376 () Int)
(declare-fun x1696 () Int)
(declare-fun x459 () Int)
(declare-fun x380 () Int)
(declare-fun x1675 () Int)
(declare-fun x1135 () Int)
(declare-fun x235 () Bool)
(declare-fun x522 () Int)
(declare-fun x445 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1385 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x227 (Int Int) Int)
(declare-fun x994 () Int)
(declare-fun x733 () Int)
(declare-fun x185 () Int)
(declare-fun x251 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1017 () Int)
(declare-fun x977 () Int)
(declare-fun x1817 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1270 () Int)
(declare-fun x610 () Bool)
(declare-fun x416 () Int)
(declare-fun x399 () Int)
(declare-fun x1738 () Int)
(declare-fun x500 () Int)
(declare-fun x1191 () Int)
(declare-fun x711 () Int)
(declare-fun x618 () Int)
(declare-fun x1116 () Bool)
(declare-fun x1678 () Int)
(declare-fun x486 () Int)
(declare-fun x1109 () Int)
(declare-fun x568 () Bool)
(declare-fun x21 () Int)
(declare-fun x922 () Bool)
(declare-fun x475 () Bool)
(declare-fun x1265 () Int)
(declare-fun x385 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1848 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1512 () Int)
(declare-fun x435 () Int)
(define-fun x326 ((x67 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67) (>= x67 0)) x67 (- x67 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1617 ((x67 Int)) Int (ite (and (< x67 0) (>= x67 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x67 115792089237316195423570985008687907853269984665640564039457584007913129639936) x67))
(define-fun x1875 ((x67 Int)) Int (ite (and (>= x67 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67)) x67 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x67) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x67)) (- x67 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x67 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x67 0)) (+ x67 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x227 x67 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1139 ((x1776 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1776) (<= 0 x1776)))
(define-fun x1879 ((x1776 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1776) (>= x1776 0)))
(define-fun x1202 ((x1776 Int)) Bool (and (<= x1776 20282409603651670423947251286015) (<= 0 x1776)))
(define-fun x663 ((x1776 Int)) Bool (and (= x1776 (x60 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1776)) (= (x60 x1776 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1776)))
(define-fun x629 ((x1776 Int)) Bool (and (= 0 (x60 x1776 0)) (= 0 (x60 0 x1776))))
(define-fun x1073 ((x1776 Int)) Bool (= (x60 x1776 x1776) x1776))
(define-fun x414 ((x1776 Int)) Bool (and (x663 x1776) (x629 x1776) (x1073 x1776)))
(define-fun x2 ((x1776 Int) (x583 Int)) Bool (= (x60 x583 x1776) (x60 x1776 x583)))
(define-fun x564 ((x1776 Int) (x583 Int)) Bool (and (=> (>= x1776 0) (>= x1776 (x60 x1776 x583))) (=> (<= 0 x583) (>= x583 (x60 x1776 x583))) (>= (x60 x1776 x583) 0)))
(define-fun x590 ((x1776 Int) (x583 Int)) Bool (and (x2 x1776 x583) (x564 x1776 x583)))
(define-fun x271 ((x1776 Int)) Bool (= (x227 x1776 4) (+ (x227 x1776 2) (x60 x1776 2))))
(define-fun x1303 ((x1776 Int)) Bool (and (x590 x1776 2) (x271 x1776)))
(define-fun x78 ((x1776 Int) (x583 Int)) Bool (and (<= 0 (x227 x1776 x583)) (< (x227 x1776 x583) x583)))
(define-fun x1456 ((x1776 Int) (x583 Int)) Bool (=> (and (< 0 x583) (>= x1776 0)) (= (< x1776 x583) (= x1776 (x227 x1776 x583)))))
(define-fun x1735 ((x1776 Int) (x583 Int)) Bool (=> (and (and (> (+ x583 x583) x1776) (<= x583 x1776)) (< 0 x583)) (= (x227 x1776 x583) (- x1776 x583))))
(define-fun x1394 ((x1776 Int) (x583 Int)) Bool (=> (< 0 x583) (= x1776 (+ (* (x79 x1776 x583) x583) (x227 x1776 x583)))))
(define-fun x684 ((x1776 Int) (x583 Int)) Bool (and (x1394 x1776 x583) (x1735 x1776 x583) (x78 x1776 x583) (x1456 x1776 x583)))
(define-fun x1153 ((x1776 Int)) Bool (= 0 (x227 0 x1776)))
(define-fun x756 ((x1776 Int)) Bool (= (x227 x1776 1) 0))
(define-fun x1866 ((x1776 Int)) Bool (= (x227 x1776 x1776) 0))
(define-fun x788 ((x1776 Int)) Bool (and (x1866 x1776) (x756 x1776) (x1153 x1776)))
(define-fun x606 ((x1776 Int) (x583 Int)) Bool (= (x1503 x1776 x583) (* x1776 x583)))
(define-fun x1573 ((x1776 Int) (x583 Int)) Bool (and (= (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* x1776 (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1776 x583) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x583)) (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) x583)) (= (x1503 x1776 (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x1776 (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1130 ((x1776 Int) (x583 Int)) Bool (=> (and (> x583 0) (< 0 x1776)) (= (= x583 (x79 (x1875 (x1503 x1776 x583)) x1776)) (< (x1503 x1776 x583) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1829 ((x1776 Int) (x583 Int)) Bool (=> (and (not (= x1776 0)) (not (= 0 x583))) (and (= x583 (x79 (x1503 x1776 x583) x1776)) (= (x79 (x1503 x1776 x583) x583) x1776))))
(define-fun x93 ((x1776 Int) (x583 Int)) Bool (=> (and (< 0 x1776) (> x583 0)) (= (> x583 (x79 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1776)) (> (x1503 x1776 x583) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1374 ((x1776 Int) (x583 Int)) Bool (and (= (x1875 (x1503 x1776 x583)) (x1875 (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) x583))) (= (x1875 (x1503 x1776 x583)) (x1875 (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1875 (x1503 x1776 x583)) (x1875 (x1503 x1776 (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x197 ((x1776 Int) (x583 Int)) Bool (and (=> (and (and (<= x583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x583 0)) (and (< 0 x1776) (<= x1776 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x1503 x1776 x583) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1776 (x79 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583)) (and (< 0 x1776) (<= x1776 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1503 x1776 (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x583) (x79 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1776)))) (=> (and (and (> x583 0) (<= x583 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x1776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1776 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x79 57896044618658097711785492504343953926634992332820282019728792003956564819968 x583) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1776)) (>= (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) x583) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1776)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x583) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1503 (- x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x583 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x79 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x583)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1776))))))
(define-fun x97 ((x1776 Int) (x583 Int)) Bool (and (x1573 x1776 x583) (x1829 x1776 x583) (x606 x1776 x583) (x93 x1776 x583) (x1374 x1776 x583) (x197 x1776 x583) (x1130 x1776 x583)))
(define-fun x102 ((x1776 Int)) Bool (and (= (x1503 x1776 0) 0) (= (x1503 0 x1776) 0)))
(define-fun x632 ((x1776 Int)) Bool (and (= (x1503 1 x1776) x1776) (= x1776 (x1503 x1776 1))))
(define-fun x1454 ((x1776 Int)) Bool (and (x632 x1776) (x102 x1776)))
(define-fun x270 ((x1776 Int) (x583 Int)) Bool (=> (and (> x583 0) (< 0 x1776)) (and (<= 0 (x79 x1776 x583)) (>= x1776 (x79 x1776 x583)))))
(define-fun x282 ((x1776 Int) (x583 Int)) Bool (=> (and (and (<= 0 x1776) (< x1776 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (>= x583 1) (< x583 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x79 x1776 x583)) (>= (x79 x1776 x583) 0))))
(define-fun x190 ((x1776 Int) (x583 Int)) Bool (=> (and (< x583 x1776) (> x583 1)) (< (x79 x1776 x583) x1776)))
(define-fun x888 ((x1776 Int) (x583 Int)) Bool (=> (and (< 0 x583) (> x1776 0)) (= (> x583 x1776) (= 0 (x79 x1776 x583)))))
(define-fun x838 ((x1776 Int) (x583 Int)) Bool (=> (and (< 0 x583) (< 0 x1776)) (and (>= x1776 (* (x79 x1776 x583) x583)) (> (* x583 (x79 x1776 x583)) (- x1776 x583)))))
(define-fun x677 ((x1776 Int) (x583 Int)) Bool (and (x888 x1776 x583) (x270 x1776 x583) (x282 x1776 x583) (x190 x1776 x583) (x838 x1776 x583)))
(define-fun x833 ((x1776 Int)) Bool (= 0 (x79 0 x1776)))
(define-fun x990 ((x1776 Int)) Bool (= x1776 (x79 x1776 1)))
(define-fun x870 ((x1776 Int)) Bool (=> (not (= 0 x1776)) (= 1 (x79 x1776 x1776))))
(define-fun x74 ((x1776 Int)) Bool (and (x990 x1776) (x833 x1776) (x870 x1776)))
(define-fun x758 ((x1776 Int)) Bool (and (>= x1776 0) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1776)))
(define-fun x854 ((x1776 Int)) Bool (and (<= 0 x1776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1776)))
(define-fun x1581 ((x1776 Int)) Bool (and (<= x1776 1461501637330902918203684832716283019655932542975) (>= x1776 0)))
(define-fun x679 ((x1776 Int)) Bool (= (x60 x1776 20282409603651670423947251286015) (x227 x1776 20282409603651670423947251286016)))
(define-fun x511 ((x1776 Int)) Bool (and (x590 x1776 20282409603651670423947251286015) (x679 x1776)))
(define-fun x245 ((x1776 Int) (x583 Int)) Bool (= (x1503 x1776 x583) (x1503 x583 x1776)))
(define-fun x428 ((x1776 Int) (x583 Int)) Bool (and (=> (and (< x583 0) (> 0 x1776)) (> (x1503 x1776 x583) 0)) (=> (and (< x1776 0) (< 0 x583)) (> 0 (x1503 x1776 x583))) (=> (and (> x583 0) (> x1776 0)) (> (x1503 x1776 x583) 0)) (=> (and (< 0 x1776) (> 0 x583)) (> 0 (x1503 x1776 x583)))))
(define-fun x1310 ((x1776 Int) (x583 Int)) Bool (and (x1130 x1776 x583) (x1829 x1776 x583) (x1374 x1776 x583) (x245 x1776 x583) (x197 x1776 x583) (x428 x1776 x583) (x93 x1776 x583)))
(define-fun x699 ((x1776 Int) (x583 Int)) Bool (=> (and (< 0 x1776) (< 0 x583)) (and (< (- x1776 x583) (x1503 (x79 x1776 x583) x583)) (>= x1776 (x1503 (x79 x1776 x583) x583)))))
(define-fun x16 ((x1776 Int) (x583 Int)) Bool (and (x888 x1776 x583) (x282 x1776 x583) (x270 x1776 x583) (x699 x1776 x583) (x190 x1776 x583)))
(define-fun x220 ((x1776 Int)) Bool (= (x60 x1776 340282366920938463463374607431768211455) (x227 x1776 340282366920938463463374607431768211456)))
(define-fun x631 ((x1776 Int)) Bool (and (x220 x1776) (x590 x1776 340282366920938463463374607431768211455)))
(define-fun x586 ((x449 Int)) Int 0)
(define-fun x130 ((x449 Int)) Int 0)
(define-fun x188 ((x449 Int)) Int 0)
(define-fun x389 ((x449 Int)) Int 0)
(define-fun x722 ((x449 Int)) Int 0)
(define-fun x1036 ((x449 Int)) Int 0)
(define-fun x1128 ((x449 Int)) Int 0)
(define-fun x523 ((x449 Int)) Int 0)
(define-fun x337 ((x449 Int)) Int 0)
(define-fun x255 ((x449 Int)) Int 0)
(define-fun x169 ((x449 Int)) Int 0)
(define-fun x433 ((x449 Int)) Int 0)
(define-fun x1325 ((x449 Int)) Int 0)
(define-fun x1467 ((x449 Int)) Int 0)
(define-fun x1679 ((x449 Int)) Int 0)
(define-fun x796 ((x449 Int)) Int 0)
(define-fun x572 ((x449 Int)) Int 0)
(define-fun x808 ((x449 Int)) Int 0)
(define-fun x1141 ((x449 Int)) Int 0)
(define-fun x302 ((x449 Int)) Int 0)
(define-fun x278 ((x449 Int)) Int 0)
(define-fun x168 ((x449 Int)) Int 0)
(define-fun x1529 ((x449 Int)) Int 0)
(define-fun x865 ((x449 Int)) Int 0)
(define-fun x313 ((x449 Int)) Int 0)
(define-fun x902 ((x449 Int)) Int 0)
(define-fun x1533 ((x449 Int)) Int 0)
(define-fun x1563 ((x449 Int)) Int 0)
(define-fun x641 ((x449 Int)) Int 0)
(define-fun x1056 ((x449 Int)) Int 0)
(define-fun x835 ((x449 Int)) Int 0)
(define-fun x1779 ((x449 Int)) Int 0)
(define-fun x1084 ((x449 Int)) Int 0)
(define-fun x670 ((x449 Int)) Int 0)
(define-fun x1598 ((x449 Int)) Int 0)
(define-fun x42 ((x449 Int)) Int 0)
(define-fun x451 ((x449 Int)) Int 0)
(define-fun x1132 ((x449 Int)) Int 0)
(define-fun x1708 ((x449 Int)) Int 0)
(define-fun x529 ((x449 Int)) Int 0)
(define-fun x1044 ((x449 Int)) Int 0)
(define-fun x231 ((x449 Int)) Int 0)
(define-fun x548 ((x449 Int)) Int 0)
(define-fun x159 ((x449 Int)) Int 0)
(define-fun x1673 ((x449 Int)) Int 0)
(define-fun x1469 ((x449 Int)) Int 0)
(define-fun x20 ((x449 Int)) Int 0)
(define-fun x1119 ((x449 Int)) Int 0)
(define-fun x1694 ((x449 Int)) Int 0)
(define-fun x204 ((x449 Int)) Int 0)
(define-fun x1462 ((x449 Int)) Int 0)
(define-fun x891 ((x449 Int)) Int 0)
(define-fun x1526 ((x449 Int)) Int 0)
(define-fun x1574 ((x449 Int)) Int (ite (= x1266 x449) x396 (x1429 x449)))
(define-fun x125 ((x449 Int)) Int (ite (= x449 x1632) x1346 (x1574 x449)))
(define-fun x1409 ((x449 Int)) Int (ite x205 (x1429 x449) (ite x415 (x125 x449) (x748 x449))))
(define-fun x1076 ((x449 Int)) Int (ite (= x1384 x449) x396 (x1407 x449)))
(define-fun x1200 ((x449 Int)) Int (ite (= x1411 x449) x1346 (x1076 x449)))
(define-fun x960 ((x449 Int)) Int (ite x415 (x1200 x449) (x1284 x449)))
(define-fun x799 ((x449 Int)) Int (ite x205 (x1407 x449) (x960 x449)))
(define-fun x1743 ((x449 Int)) Int 0)
(define-fun x589 ((x449 Int)) Int (ite x205 (x814 x449) (ite x415 (x814 x449) (x92 x449))))
(define-fun x1863 ((x449 Int)) Int (ite x205 (x727 x449) (ite x415 (x727 x449) (x871 x449))))
(define-fun x592 ((x449 Int)) Int (ite x205 (x1070 x449) (ite x415 (x1070 x449) (x1219 x449))))
(define-fun x1080 ((x449 Int)) Int (ite x415 (x1873 x449) (x1181 x449)))
(define-fun x377 ((x449 Int)) Int (ite x205 (x1873 x449) (x1080 x449)))
(define-fun x1482 ((x449 Int)) Int 0)
(define-fun x769 ((x449 Int)) Int 0)
(define-fun x1443 ((x449 Int)) Int 0)
(define-fun x1854 ((x449 Int)) Int (ite (= x449 128) x52 (x586 x449)))
(define-fun x266 ((x449 Int)) Int (ite x952 (x1529 x449) (x1854 x449)))
(define-fun x1137 ((x449 Int)) Int (ite (= x449 128) x1162 (x266 x449)))
(define-fun x741 ((x449 Int)) Int (ite x857 (ite x214 (x266 x449) (x1137 x449)) (x266 x449)))
(define-fun x740 ((x449 Int)) Int (ite (= x449 128) x203 (x741 x449)))
(define-fun x232 ((x449 Int)) Int (ite x1170 (x740 x449) (x741 x449)))
(define-fun x706 ((x449 Int)) Int (ite (= 128 x449) x1384 (x232 x449)))
(define-fun x417 ((x449 Int)) Int (ite (= x449 160) x1234 (x706 x449)))
(define-fun x1140 ((x449 Int)) Int (ite x1245 (x232 x449) (x417 x449)))
(define-fun x1079 ((x449 Int)) Int (ite (= 128 x449) x1697 (x1140 x449)))
(define-fun x571 ((x449 Int)) Int (ite x1046 (ite x183 (x1140 x449) (x1079 x449)) (x1140 x449)))
(define-fun x957 ((x449 Int)) Int (ite (= x449 128) x1799 (x571 x449)))
(define-fun x874 ((x449 Int)) Int (ite x121 (x957 x449) (x571 x449)))
(define-fun x1812 ((x449 Int)) Int (ite (= 128 x449) x1411 (x874 x449)))
(define-fun x1680 ((x449 Int)) Int (ite (= x449 160) x1183 (x1812 x449)))
(define-fun x1280 ((x449 Int)) Int (ite x352 (x1140 x449) (ite x1663 (x874 x449) (x1680 x449))))
(define-fun x1190 ((x449 Int)) Int 0)
(define-fun x1887 ((x449 Int)) Int 0)
(define-fun x1739 ((x449 Int)) Int 0)
(define-fun x1423 ((x449 Int)) Int 0)
(define-fun x50 ((x449 Int)) Int 0)
(define-fun x1674 ((x449 Int)) Int 0)
(define-fun x1357 ((x449 Int)) Int (ite (> x709 x449) (x1210 x449) 0))
(define-fun x1477 ((x449 Int)) Int (ite (and (> x709 x449) (>= x449 0)) (x258 x449) (x1357 x449)))
(define-fun x1835 ((x449 Int)) Int (ite (= x449 x504) x254 (x1060 x449)))
(define-fun x685 ((x449 Int)) Int (ite (= x449 x708) x52 (x1610 x449)))
(define-fun x754 ((x449 Int)) Int 0)
(define-fun x811 ((x449 Int)) Int 0)
(define-fun x369 ((x449 Int)) Int 0)
(define-fun x565 ((x449 Int)) Int (ite (= x449 x236) x1611 (x646 x449)))
(define-fun x1136 ((x449 Int)) Int (ite (= x449 x1205) 0 (x287 x449)))
(define-fun x1796 ((x449 Int)) Int (ite (= x449 x1205) 0 (x646 x449)))
(define-fun x1601 ((x449 Int)) Int (ite (= x449 x1795) x1657 (x532 x449)))
(define-fun x157 ((x449 Int)) Int (ite x1245 (x532 x449) (x1601 x449)))
(define-fun x726 ((x449 Int)) Int (ite (= x1003 x449) x203 (x777 x449)))
(define-fun x1468 ((x449 Int)) Int (ite x1170 (x726 x449) (x777 x449)))
(define-fun x1627 ((x449 Int)) Int (ite (= x449 x1292) x1162 (x1247 x449)))
(define-fun x1421 ((x449 Int)) Int (ite x857 (ite x214 (x1247 x449) (x1627 x449)) (x1247 x449)))
(define-fun x10 ((x449 Int)) Int (ite (= x423 x449) x1745 (x773 x449)))
(define-fun x1568 ((x449 Int)) Int (ite x857 (x10 x449) (x773 x449)))
(define-fun x575 ((x449 Int)) Int 0)
(define-fun x666 ((x449 Int)) Int 0)
(define-fun x371 ((x449 Int)) Int (ite (= x449 x1351) x1697 (x1421 x449)))
(define-fun x1853 ((x449 Int)) Int (ite (= x1452 x449) x1799 (x1468 x449)))
(define-fun x654 ((x449 Int)) Int (ite (= x449 x710) x1882 (x157 x449)))
(define-fun x925 ((x449 Int)) Int (ite (= x1361 x449) x889 (x1568 x449)))
(define-fun x335 ((x449 Int)) Int (ite x214 (x1247 x449) (x1627 x449)))
(define-fun x1148 ((x449 Int)) Int (ite (= x449 x662) x492 (x1839 x449)))
(define-fun x1232 ((x449 Int)) Int (ite x294 (x1839 x449) (x1148 x449)))
(define-fun x1787 ((x449 Int)) Int (ite (= x1165 x449) x1479 (x256 x449)))
(define-fun x489 ((x449 Int)) Int (ite x1733 (x256 x449) (x1787 x449)))
(define-fun x95 ((x449 Int)) Int (ite (= x449 x1609) x780 (x1232 x449)))
(define-fun x174 ((x449 Int)) Int (ite x295 (x1232 x449) (x95 x449)))
(define-fun x959 ((x449 Int)) Int (ite (= x449 x1022) x96 (x489 x449)))
(define-fun x1294 ((x449 Int)) Int (ite x241 (x489 x449) (x959 x449)))
(define-fun x760 ((x449 Int)) Int (ite x415 (x814 x449) (x92 x449)))
(define-fun x1322 ((x449 Int)) Int (ite x415 (x727 x449) (x871 x449)))
(define-fun x192 ((x449 Int)) Int (ite x415 (x125 x449) (x748 x449)))
(define-fun x1513 ((x449 Int)) Int (ite x415 (x1070 x449) (x1219 x449)))
(define-fun x272 ((x449 Int)) Int (ite (= x1842 x449) 41436628393252172163539528543619094058851530980360706587524068930525597794304 (x1280 x449)))
(define-fun x267 ((x449 Int)) Int (ite (= x449 x903) x1384 (x272 x449)))
(define-fun x734 ((x449 Int)) Int (ite (= x717 x449) x1411 (x267 x449)))
(define-fun x1152 ((x449 Int)) Int (ite (= x449 x1096) x977 (x734 x449)))
(define-fun x1584 ((x449 Int)) Int (ite (= x1857 x449) x766 (x1152 x449)))
(define-fun x627 ((x449 Int)) Int (ite (= x449 x735) x1397 (x1584 x449)))
(define-fun x1726 ((x1877 Int)) Bool (or (not (and (not (= x550 x1877)) (not (= x364 x1877)))) (and (not (= (x1873 x1877) 3)) (not (= (x1873 x1877) 2))) (not (= (x991 x1877) x1681)) (not (and (>= 1461501637330902918203684832716283019655932542975 x1877) (<= 0 x1877)))))
(define-fun x1619 ((x484 Int)) Bool (=> (and (>= 1461501637330902918203684832716283019655932542975 x484) (>= x484 0)) (x1581 (x991 x484))))
(define-fun x880 ((x623 Int)) Bool (or (not (= (x991 x623) x623)) (not (and (<= 0 x623) (<= x623 1461501637330902918203684832716283019655932542975))) (= x623 0)))
(define-fun x1566 ((x522 Int)) Bool (or (not (and (>= 1461501637330902918203684832716283019655932542975 x522) (>= x522 0))) (not (= (x991 x522) x1681)) (not (and (not (= x364 x522)) (not (= x550 x522)))) (and (not (= (x377 x522) 2)) (not (= 3 (x377 x522))))))
(define-fun x237 ((x1740 Int)) Bool (= 0 (x1071 0 x1740)))
(define-fun x616 ((x484 Int) (x1814 Int)) Bool (x854 (x1071 x484 x1814)))
(define-fun x158 ((x1800 Int) (x809 Int) (x1133 Int)) Bool (= (+ (x1071 x1800 x1133) (x1071 x809 x1133)) (x1071 (+ x1800 x809) x1133)))
(define-fun x1538 () Bool (and (x1726 x1432) (x1726 x1547) (x1726 x1589) (x1726 x325) (x1726 x947) (x1726 x1033) (x1726 x1383) (x1726 x785) (x1726 x1350) (x1726 x721) (x1726 x1144) (x1726 x1560) (x1726 x1215) (x1726 x1689) (x1726 x879) (x1726 x693) (x1726 x615) (x1726 x1117) (x1726 x1384) (x1726 x308) (x1726 x1411) (x1726 x1886) (x1726 x288) (x1726 x513) (x1726 x104)))
(define-fun x1229 () Bool (and (x1726 x721) (x1726 x785) (x1726 x1215) (x1726 x308) (x1726 x288) (x1726 x325) (x1726 x1689) (x1726 x1886) (x1726 x1560) (x1726 x1411) (x1726 x1383) (x1726 x513) (x1726 x1547) (x1726 x879) (x1726 x1384) (x1726 x615) (x1726 x1117) (x1726 x1350) (x1726 x1589) (x1726 x693) (x1726 x947) (x1726 x1144) (x1726 x104) (x1726 x1432) (x1726 x1033)))
(define-fun x1471 () Bool (and x1538 x1229))
(define-fun x1712 () Bool (and (x1619 x1589) (x1619 x879) (x1619 x947) (x1619 x1033) (x1619 x1383) (x1619 x785) (x1619 x1886) (x1619 x1384) (x1619 x288) (x1619 x1215) (x1619 x721) (x1619 x1411) (x1619 x1432) (x1619 x513) (x1619 x1547) (x1619 x325) (x1619 x693) (x1619 x1117) (x1619 x615) (x1619 x1144) (x1619 x1350) (x1619 x308) (x1619 x1560) (x1619 x104) (x1619 x1689)))
(define-fun x1275 () Bool x1712)
(define-fun x1101 () Bool (and (x880 x615) (x880 x1215) (x880 x325) (x880 x1589) (x880 x288) (x880 x1411) (x880 x721) (x880 x1383) (x880 x879) (x880 x693) (x880 x785) (x880 x1117) (x880 x1033) (x880 x1560) (x880 x1689) (x880 x104) (x880 x513) (x880 x1144) (x880 x1384) (x880 x1547) (x880 x1432) (x880 x1886) (x880 x947) (x880 x1350) (x880 x308)))
(define-fun x1885 () Bool x1101)
(define-fun x1789 () Bool (and (x1566 x1886) (x1566 x1033) (x1566 x1117) (x1566 x104) (x1566 x1547) (x1566 x1589) (x1566 x1689) (x1566 x1432) (x1566 x1384) (x1566 x1215) (x1566 x1144) (x1566 x721) (x1566 x325) (x1566 x615) (x1566 x693) (x1566 x288) (x1566 x308) (x1566 x1350) (x1566 x1383) (x1566 x947) (x1566 x879) (x1566 x513) (x1566 x785) (x1566 x1560) (x1566 x1411)))
(define-fun x493 () Bool (and (x1566 x1384) (x1566 x721) (x1566 x947) (x1566 x615) (x1566 x693) (x1566 x785) (x1566 x1589) (x1566 x1350) (x1566 x1560) (x1566 x104) (x1566 x1689) (x1566 x1547) (x1566 x513) (x1566 x1411) (x1566 x1215) (x1566 x1432) (x1566 x1144) (x1566 x879) (x1566 x308) (x1566 x1117) (x1566 x288) (x1566 x1033) (x1566 x1886) (x1566 x325) (x1566 x1383)))
(define-fun x894 () Bool (and x1789 x493))
(define-fun x1168 () Bool (and (x237 x1725) (x237 x376) (x237 x611) (x237 x131) (x237 x334) (x237 x1447)))
(define-fun x1371 () Bool x1168)
(define-fun x738 () Bool (and (x616 x1556 x611) (x616 x301 x334) (x616 x1545 x131) (x616 x989 x334) (x616 x161 x1447) (x616 x921 x334) (x616 x1822 x334) (x616 x1221 x1725) (x616 x1029 x334) (x616 x1747 x334) (x616 x1218 x376) (x616 x1343 x334)))
(define-fun x23 () Bool x738)
(define-fun x944 () Bool (and (x158 x989 x1747 x334) (x158 x1221 x161 x1447) (x158 x921 x301 x334) (x158 x921 x921 x334) (x158 x1343 x1218 x376) (x158 x989 x1029 x334) (x158 x921 x989 x334) (x158 x1221 x1218 x376) (x158 x1218 x1545 x131) (x158 x1545 x301 x334) (x158 x161 x1545 x131) (x158 x1221 x1545 x131) (x158 x1343 x161 x1447) (x158 x1343 x301 x334) (x158 x1545 x989 x334) (x158 x1343 x1556 x611) (x158 x1221 x989 x334) (x158 x1218 x1218 x376) (x158 x1545 x1556 x611) (x158 x1221 x1556 x611) (x158 x1747 x1822 x334) (x158 x1747 x921 x334) (x158 x1822 x1822 x334) (x158 x989 x989 x334) (x158 x301 x1556 x611) (x158 x1747 x1343 x334) (x158 x301 x1343 x334) (x158 x1218 x921 x334) (x158 x1556 x1556 x611) (x158 x161 x1343 x334) (x158 x1545 x1822 x334) (x158 x1343 x921 x334) (x158 x1545 x1545 x131) (x158 x1029 x301 x334) (x158 x1556 x989 x334) (x158 x1221 x1343 x334) (x158 x921 x161 x1447) (x158 x161 x1556 x611) (x158 x1822 x1343 x334) (x158 x1747 x1221 x1725) (x158 x1545 x1221 x1725) (x158 x161 x1822 x334) (x158 x1556 x1221 x1725) (x158 x1218 x301 x334) (x158 x1221 x921 x334) (x158 x921 x1221 x1725) (x158 x1822 x921 x334) (x158 x301 x921 x334) (x158 x1556 x301 x334) (x158 x1556 x1029 x334) (x158 x1747 x1545 x131) (x158 x1343 x1545 x131) (x158 x1747 x1029 x334) (x158 x301 x1822 x334) (x158 x1747 x1747 x334) (x158 x1822 x1556 x611) (x158 x161 x1218 x376) (x158 x1343 x1822 x334) (x158 x1556 x1343 x334) (x158 x1822 x1747 x334) (x158 x989 x1343 x334) (x158 x1029 x1029 x334) (x158 x1822 x161 x1447) (x158 x921 x1556 x611) (x158 x1747 x989 x334) (x158 x1221 x1822 x334) (x158 x921 x1747 x334) (x158 x1029 x1545 x131) (x158 x1343 x1343 x334) (x158 x1822 x1218 x376) (x158 x1343 x1029 x334) (x158 x989 x1221 x1725) (x158 x1029 x161 x1447) (x158 x1747 x301 x334) (x158 x1545 x161 x1447) (x158 x1556 x1218 x376) (x158 x1545 x1029 x334) (x158 x989 x1556 x611) (x158 x1747 x161 x1447) (x158 x1545 x921 x334) (x158 x1029 x1556 x611) (x158 x1545 x1218 x376) (x158 x1218 x161 x1447) (x158 x1029 x1822 x334) (x158 x1221 x1029 x334) (x158 x1822 x1221 x1725) (x158 x1556 x921 x334) (x158 x161 x921 x334) (x158 x1218 x1747 x334) (x158 x1218 x1343 x334) (x158 x161 x161 x1447) (x158 x1556 x161 x1447) (x158 x1822 x301 x334) (x158 x161 x1029 x334) (x158 x301 x1747 x334) (x158 x1221 x1221 x1725) (x158 x989 x1822 x334) (x158 x301 x1029 x334) (x158 x1343 x1747 x334) (x158 x1218 x1556 x611) (x158 x989 x921 x334) (x158 x301 x1218 x376) (x158 x1747 x1218 x376) (x158 x921 x1545 x131) (x158 x1221 x301 x334) (x158 x989 x1545 x131) (x158 x301 x1221 x1725) (x158 x921 x1218 x376) (x158 x1747 x1556 x611) (x158 x921 x1343 x334) (x158 x1822 x989 x334) (x158 x1545 x1747 x334) (x158 x161 x989 x334) (x158 x301 x161 x1447) (x158 x989 x301 x334) (x158 x1545 x1343 x334) (x158 x1029 x1343 x334) (x158 x989 x161 x1447) (x158 x1556 x1822 x334) (x158 x1556 x1747 x334) (x158 x1029 x989 x334) (x158 x921 x1822 x334) (x158 x1343 x1221 x1725) (x158 x1029 x921 x334) (x158 x1029 x1221 x1725) (x158 x301 x1545 x131) (x158 x1221 x1747 x334) (x158 x1218 x1822 x334) (x158 x1218 x989 x334) (x158 x1029 x1218 x376) (x158 x301 x989 x334) (x158 x161 x1747 x334) (x158 x1029 x1747 x334) (x158 x989 x1218 x376) (x158 x1218 x1029 x334) (x158 x1343 x989 x334) (x158 x1218 x1221 x1725) (x158 x1556 x1545 x131) (x158 x1822 x1029 x334) (x158 x921 x1029 x334) (x158 x161 x1221 x1725) (x158 x301 x301 x334) (x158 x161 x301 x334) (x158 x1822 x1545 x131)))
(define-fun x1298 () Bool (and (x158 x989 x1747 x334) (x158 x1343 x1556 x334) (x158 x161 x921 x1447) (x158 x161 x1747 x1447) (x158 x989 x161 x334) (x158 x1218 x1545 x376) (x158 x1545 x989 x131) (x158 x1556 x1822 x611) (x158 x1221 x921 x1725) (x158 x1029 x989 x334) (x158 x161 x301 x1447) (x158 x1556 x161 x611) (x158 x161 x1545 x1447) (x158 x301 x1343 x334) (x158 x1343 x1218 x334) (x158 x989 x1556 x334) (x158 x1747 x921 x334) (x158 x921 x1556 x334) (x158 x1218 x1822 x376) (x158 x989 x301 x334) (x158 x921 x1343 x334) (x158 x1343 x1822 x334) (x158 x1822 x1822 x334) (x158 x1221 x1343 x1725) (x158 x1221 x1221 x1725) (x158 x1218 x1747 x376) (x158 x1221 x161 x1725) (x158 x1822 x161 x334) (x158 x989 x1822 x334) (x158 x1747 x1545 x334) (x158 x1545 x921 x131) (x158 x1556 x1221 x611) (x158 x1822 x921 x334) (x158 x161 x161 x1447) (x158 x989 x921 x334) (x158 x161 x989 x1447) (x158 x921 x1747 x334) (x158 x1029 x1747 x334) (x158 x1218 x301 x376) (x158 x1221 x1545 x1725) (x158 x1556 x1545 x611) (x158 x1221 x1556 x1725) (x158 x989 x1218 x334) (x158 x1556 x1747 x611) (x158 x989 x1029 x334) (x158 x1747 x301 x334) (x158 x921 x1822 x334) (x158 x1747 x1556 x334) (x158 x301 x1822 x334) (x158 x301 x161 x334) (x158 x921 x1218 x334) (x158 x989 x1545 x334) (x158 x1545 x1029 x131) (x158 x1343 x1029 x334) (x158 x1029 x1343 x334) (x158 x1822 x1545 x334) (x158 x161 x1822 x1447) (x158 x921 x1029 x334) (x158 x161 x1218 x1447) (x158 x1556 x301 x611) (x158 x1221 x1218 x1725) (x158 x1545 x1221 x131) (x158 x989 x1221 x334) (x158 x1556 x921 x611) (x158 x1218 x1343 x376) (x158 x1221 x1747 x1725) (x158 x1822 x1343 x334) (x158 x1029 x161 x334) (x158 x1343 x1221 x334) (x158 x1029 x301 x334) (x158 x1221 x1029 x1725) (x158 x1545 x1343 x131) (x158 x1029 x1556 x334) (x158 x1545 x1556 x131) (x158 x1029 x921 x334) (x158 x989 x1343 x334) (x158 x1822 x301 x334) (x158 x1545 x301 x131) (x158 x1029 x1029 x334) (x158 x301 x1221 x334) (x158 x1218 x1218 x376) (x158 x1545 x1747 x131) (x158 x1747 x1029 x334) (x158 x1221 x989 x1725) (x158 x1343 x989 x334) (x158 x1029 x1545 x334) (x158 x1221 x301 x1725) (x158 x161 x1343 x1447) (x158 x301 x1545 x334) (x158 x1343 x161 x334) (x158 x1822 x1556 x334) (x158 x1343 x301 x334) (x158 x1822 x1029 x334) (x158 x301 x989 x334) (x158 x1556 x1218 x611) (x158 x1747 x989 x334) (x158 x989 x989 x334) (x158 x1343 x1545 x334) (x158 x921 x161 x334) (x158 x1218 x989 x376) (x158 x1747 x1747 x334) (x158 x1218 x161 x376) (x158 x1218 x1029 x376) (x158 x301 x1556 x334) (x158 x1029 x1221 x334) (x158 x1343 x1747 x334) (x158 x1822 x989 x334) (x158 x1545 x1545 x131) (x158 x1218 x921 x376) (x158 x1221 x1822 x1725) (x158 x1545 x161 x131) (x158 x1556 x1343 x611) (x158 x1822 x1218 x334) (x158 x1218 x1221 x376) (x158 x1747 x1822 x334) (x158 x161 x1029 x1447) (x158 x1343 x921 x334) (x158 x921 x989 x334) (x158 x1747 x1221 x334) (x158 x921 x1221 x334) (x158 x1029 x1218 x334) (x158 x1343 x1343 x334) (x158 x921 x1545 x334) (x158 x1747 x161 x334) (x158 x1822 x1221 x334) (x158 x921 x301 x334) (x158 x1822 x1747 x334) (x158 x301 x1218 x334) (x158 x1545 x1822 x131) (x158 x1218 x1556 x376) (x158 x1747 x1343 x334) (x158 x161 x1556 x1447) (x158 x301 x1747 x334) (x158 x1747 x1218 x334) (x158 x1556 x989 x611) (x158 x161 x1221 x1447) (x158 x301 x1029 x334) (x158 x301 x301 x334) (x158 x921 x921 x334) (x158 x301 x921 x334) (x158 x1556 x1556 x611) (x158 x1545 x1218 x131) (x158 x1029 x1822 x334) (x158 x1556 x1029 x611)))
(define-fun x1669 () Bool (and x1298 x944))
(define-fun x599 ((x1776 Int) (x583 Int) (x329 Int) (x1485 Int)) Bool (=> (and (<= 0 x1776) (<= 0 x583) (<= x583 x1485) (<= x1776 x329)) (<= (x1503 x1776 x583) (x1503 x329 x1485))))
(define-fun x1517 ((x1776 Int) (x583 Int) (x329 Int) (x1485 Int)) Bool (=> (= x329 x1776) (= (- (x1503 x1776 x583) (x1503 x329 x1485)) (x1503 x1776 (- x583 x1485)))))
(assert (x1139 x681))
(assert (x1879 x1748))
(assert (x1139 x1411))
(assert (x898 2283911215))
(assert (x1139 x1672))
(assert (x1139 x1652))
(assert (x1139 x1063))
(assert (x1879 x1737))
(assert (x1139 x1412))
(assert (x1454 (- x1489 x1825)))
(assert (not (x898 (x1541 64 x1384 x223))))
(assert (< 10000 (x1541 64 x1117 72)))
(assert (x1139 x956))
(assert (x677 x617 1000000000000000000))
(assert (x1139 x239))
(assert (x1310 x638 (- x1668 x18)))
(assert (=> (>= 10000 x932) (= 0 (x651 x932))))
(assert (x414 340282366920938463463374607431768211455))
(assert (x1454 x1553))
(assert (x1139 x240))
(assert (x1310 x1489 (- x1445 x692)))
(assert (x1139 x1082))
(assert (= 0 (x651 340282366920938463463374607431768211455)))
(assert (x1139 x1640))
(assert (x1310 x638 (- x1668 x692)))
(assert (x1303 x538))
(assert (= x1194 (and (not x736) x1595)))
(assert (x1139 x504))
(assert (x414 x438))
(assert (x1879 x1007))
(assert (x1303 x1655))
(assert (= 0 (x422 (x1541 64 x912 0))))
(assert (x1454 (- x638 x692)))
(assert (x1139 x1408))
(assert (= (=> (and (= x1296 x946) (<= x1850 3) (= x975 (= x1850 2)) (= true x1354) (= (x1873 x1384) x1850) (= 0 x1002) (= x744 false) (<= x1738 3) (= x1738 (x1873 x1384)) (= x946 x317) (= x1228 (or x975 x452)) (= (= 3 x1738) x452)) (and (=> x1228 x1365) (=> (and (and (= true x1498) (not x1228)) (not x1228)) x1798))) x1090))
(assert (= (x422 (x1541 64 x615 0)) 0))
(assert (x1139 x1384))
(assert (x788 x438))
(assert (x1139 x222))
(assert (=> (<= x1126 10000) (= (x651 x1126) 0)))
(assert (x97 10000000000 (x79 x396 10000000000)))
(assert (x414 x1176))
(assert (x1139 x82))
(assert (> (x1541 64 x1547 0) 10000))
(assert (not (x898 (x1541 64 x1821 0))))
(assert (x1454 x361))
(assert (= 0 (x651 3002343453)))
(assert (= (=> (and (and (= false x29) (= false x481) (= false x521) (= x412 false) (= x1848 (ite (not (= 0 x251)) 1 0)) (= (not (= x1848 0)) x48) (= 36 x503) (= x364 x1006)) (and (and (= x289 false) (= x587 false) (= x1204 x304) (= x437 (x1541 64 x608 0)) (= x1006 x608) (>= 20282409603651670423947251286015 x713) (>= 20282409603651670423947251286015 x1672) (= x84 x364) (>= x713 0) (= x1549 (= x713 x1672)) (= x608 x1204) (= x713 (x1407 x608)) (= x824 false) (= x1672 (x1429 x437)) (= x238 false) (= false x199) (>= x196 1) (= x1542 1889567281) (<= x978 127) (>= 127 x978) (= false x1151) (= x1672 x1634) (= (x869 x1405) x196) (= 36 x293) x1549) (and (and (= x1207 (= x180 2)) (>= 3 x1836) (= x1067 x1412) (= x779 (x869 x1405)) (= x622 false) (<= 1 x779) (= x180 (x1070 x806)) (= x1506 (= x180 x1836)) (= x84 x104) (= 816537496 x945) (<= x1794 127) (= false x818) (= x1836 (x1873 x104)) (>= 3 x180) (= x104 x1412) x1506 (= x806 (x1541 64 x104 0)) (<= x1794 127)) (or (and (= x151 (ite x1207 1 0)) x1207) (and (and (= x151 (ite (= x91 3) 1 0)) x1288 (= x1494 (x1873 x104)) (>= 3 x91) (= x1288 (= x1494 x91)) (= x1412 x842) (<= x1494 3) (= (x1541 64 x104 0) x1544) (= x91 (x1070 x1544))) (not x1207)))))) x1590) x1636))
(assert (x1310 x1489 (- x1445 x18)))
(assert (x684 x462 4))
(assert (x788 x1655))
(assert (x1517 x1489 x1445 x638 x1668))
(assert (x1139 x1373))
(assert (x1139 x221))
(assert (not (x898 (x1541 64 x1384 62))))
(assert (x1139 x703))
(assert (x1139 x766))
(assert (= (x651 (x1541 64 x879 0)) (x1541 64 x879 0)))
(assert (x1139 x683))
(assert (x1454 (- x692 x1825)))
(assert (= (or x318 x860) x885))
(assert (= (x1532 (x1541 64 x1547 0)) 64))
(assert (x1139 x1591))
(assert (x1879 x1127))
(assert (= 64 (x1532 (x1541 64 x1560 0))))
(assert (= x1578 (or (and x415 x494) x719)))
(assert (x1139 x1847))
(assert (x1139 x1259))
(assert (= 0 (x651 4722366482869645213695)))
(assert (= (and x1466 x1808) x1475))
(assert (x1139 x1668))
(assert (x1139 x688))
(assert (x1139 x81))
(assert (= (x1541 64 x1411 0) (x651 (x1541 64 x1411 0))))
(assert (x758 x1492))
(assert (x1454 (- x692 x1668)))
(assert (x1139 x1043))
(assert (x1139 x1187))
(assert (x1139 x932))
(assert (= (x1532 (x1541 64 x1411 61)) 64))
(assert (x1139 x1696))
(assert (x684 x937 20282409603651670423947251286016))
(assert (x677 x1644 10000000000))
(assert (x1139 x77))
(assert (> (x1541 64 x693 0) 10000))
(assert (x1139 x41))
(assert (x74 x425))
(assert (= 0 (x422 (x1541 64 x513 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1481 0)))
(assert (= x1733 (and (not x1228) x1235)))
(assert (x1139 x732))
(assert (< 10000 (x1541 64 x1481 0)))
(assert (x1139 x1445))
(assert (= x912 (x1834 (x1541 64 x912 0))))
(assert (x1139 x967))
(assert (= x1831 (or x745 x1047)))
(assert (x1139 x1048))
(assert (= 64 (x1532 (x1541 64 x693 0))))
(assert (x1310 x1825 (- x18 x1489)))
(assert (x1139 x823))
(assert (= (x1834 (x1541 64 x1432 0)) x1432))
(assert (x684 x538 2))
(assert (x1454 (- x1825 x692)))
(assert (= (x1834 (x1541 64 x1806 0)) x1806))
(assert (x1139 x1826))
(assert (= x719 (and (not x494) x415)))
(assert (x1139 x1144))
(assert (x1139 x724))
(assert (x1139 x1125))
(assert (x1139 x1313))
(assert (x1139 x1051))
(assert (= (or x294 x1774) x1235))
(assert (= (=> (and (and (= x281 false) (= x225 false) (= x1876 false) (= x724 (ite (not (= 0 x375)) 1 0)) (= 36 x1427) (= (not (= x724 0)) x1709) (= false x1599) x1709 (= x364 x1721)) (and (and (= (x1541 64 x1886 72) x913) (= 36 x1179) (= x1721 x1886) (= false x1830) (= (x869 x1405) x607) (= x667 x6) (>= 127 x1826) (<= x890 1461501637330902918203684832716283019655932542975) (= false x609) (<= 1 x607) (= x274 false) (>= x6 1) x497 (= x895 x550) (= x1377 false) (<= 1 x890) (<= x6 1461501637330902918203684832716283019655932542975) (= (x991 x1886) x890) (= (= x6 x890) x497) (= x1783 2283911215) (= x1886 x193) (= false x455) (<= x1826 127) (= false x1769) (= (x1470 x913) x6) (= x193 x1243)) (and (and (and (= x648 x1650) (>= 127 x68) (= x403 1) (= (= x1504 x253) x444) (= (= 0 x279) x345) (<= x462 3) (= x462 (x592 x35)) (= (= x1465 x462) x1195) (= (x1863 x35) x487) (= x1113 352) (= x1465 (x377 x1350)) (>= 127 x68) (= (x1409 x35) x253) (= x143 1) (>= 20282409603651670423947251286015 x1504) (<= x253 20282409603651670423947251286015) (= x648 x1350) (= x1350 x1530) (= x279 (x60 2 x462)) (= x260 (x589 x35)) x1195 (= (x799 x1350) x1504) (= x783 (x869 x1405)) (<= x1465 3) (<= 0 x1504) (<= x487 4722366482869645213695) (= x35 (x1541 64 x1350 0)) (<= 1 x783) (= x648 x367) (= x421 false) (= false x1811) x444 (= x348 3002343453) (>= 4722366482869645213695 x260)) (or (and (not x345) (= 0 x11)) (and x345 (and (= x1105 x648) (= (x1541 64 x1350 0) x171) (= (x1409 x171) x216) x887 (= x216 x11) (>= 20282409603651670423947251286015 x216) (<= 0 x463) (= x887 (= x216 x463)) (>= 20282409603651670423947251286015 x463) (= x463 (x799 x1350)))))) (and x1236 (<= x12 20282409603651670423947251286015) (= x1347 (x799 x1126)) (>= x1347 0) (= false x1193) (= x12 (x1409 x109)) (= x1644 x12) (= x109 (x1541 64 x1126 0)) (= x1388 false) (<= x273 127) (= false x1752) (= false x485) (= x1530 x550) (= x895 x1126) (= x1126 x1476) (= x1631 68) (= x1019 false) (= x574 false) (>= x342 1) (= x1476 x137) (>= 127 x273) (= (x869 x1405) x342) (= 1889567281 x681) (<= x1347 20282409603651670423947251286015) (= x1236 (= x1347 x12)))))) x495) x62))
(assert (x1139 x715))
(assert (= (or x299 x351) x1841))
(assert (not (x898 (x1541 64 x1384 0))))
(assert (x1139 x947))
(assert (= (and x1841 x1180) x1414))
(assert (x1139 x1334))
(assert (x1139 x462))
(assert (= (x1541 64 x1126 0) (x651 (x1541 64 x1126 0))))
(assert (x1139 x556))
(assert (x1139 x156))
(assert (= x1383 (x1834 (x1541 64 x1383 72))))
(assert (= x1630 (and x1473 (not x1387))))
(assert (= (x1834 (x1541 64 x1411 61)) x1411))
(assert (= (x1541 64 x1384 1) (x651 (x1541 64 x1384 1))))
(assert (x1139 x1785))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x104 0)))
(assert (x1202 (x1407 x1144)))
(assert (= (or x1433 x1352) x1828))
(assert (x1139 x999))
(assert (x1139 x901))
(assert (x1139 x1127))
(assert (= (x1541 64 x1215 72) (x651 (x1541 64 x1215 72))))
(assert (x16 x805 x5))
(assert (x1139 x926))
(assert (= (x1541 64 x460 x198) (x651 (x1541 64 x460 x198))))
(assert (x1139 x1476))
(assert (= (or x1226 x430) x508))
(assert (x1139 x652))
(assert (x1139 x1616))
(assert (and (= (x1503 3 3) 9) (= 81 (x1503 27 3)) (= (x1503 9 9) 81) (= (x1503 9 3) 27)))
(assert (= (and x644 x819) x173))
(assert (x1139 x955))
(assert (x1139 x1502))
(assert (x1139 x460))
(assert (= x1565 (or x1030 x619)))
(assert (= x45 (or x113 x952)))
(assert (x1139 x254))
(assert (x1139 x1270))
(assert (x1139 x416))
(assert (not (x898 (x1541 64 x1384 1))))
(assert (x1879 x841))
(assert (=> (<= x912 10000) (= (x651 x912) 0)))
(assert (x74 x747))
(assert (< (x1541 64 x615 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x183 (and x1473 x1387)))
(assert (x1139 x1536))
(assert (x1139 x1248))
(assert (= (and x195 x228) x1437))
(assert (x1139 x1413))
(assert (= x295 (and x445 (not x1320))))
(assert (x599 x1489 x1445 x1553 x692))
(assert (x1139 x1346))
(assert (x788 4))
(assert (x1454 (- x692 x18)))
(assert (x1139 x251))
(assert (x684 x462 2))
(assert (x1139 x1690))
(assert (x1139 x1124))
(assert (= (x1532 (x1541 64 x932 0)) 64))
(assert (x1139 x873))
(assert (x1139 x1548))
(assert (x1139 x862))
(assert (x1139 x21))
(assert (= x615 (x1834 (x1541 64 x615 0))))
(assert (x1139 x762))
(assert (< (x1541 64 x879 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1517 x1489 x1445 x1825 x18))
(assert (=> (>= 10000 x460) (= (x651 x460) 0)))
(assert (x1139 x1494))
(assert (= (x651 (x1541 64 x1117 72)) (x1541 64 x1117 72)))
(assert (= (x651 (x1541 64 x513 0)) (x1541 64 x513 0)))
(assert (x1454 (- x638 x1489)))
(assert (x1139 x1161))
(assert (x1139 x735))
(assert (= 64 (x1532 (x1541 64 x460 x1710))))
(assert (x1139 x1734))
(assert (x97 10000000000 x555))
(assert (= (x1541 64 x1547 0) (x651 (x1541 64 x1547 0))))
(assert (= x952 (and x1217 x1623)))
(assert (= (or x1245 x1001) x1819))
(assert (x1139 x1032))
(assert (x1139 x1100))
(assert (x1310 x1668 (- x638 x1825)))
(assert (x1139 x531))
(assert (x1139 x474))
(assert (= 64 (x1532 (x1541 64 x1383 72))))
(assert (< (x1541 64 x912 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x941 (=> (and (= (x1617 (- x1823 x1362)) x692) (= (* 1000000000000000000 x1453) x805) (= x413 (x79 x805 x5)) (>= x5 1) (not (> x692 x1823)) (= (x1503 x1553 x692) x1453) (<= x1453 57896044618658097711785492504343953926634992332820282019728) (< (x1503 x1553 x692) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1162 x1816) (<= 0 x1453) (= (x326 (+ x1723 x413)) x1816) (not (>= (+ x413 x1723) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x923)))
(assert (x1139 x747))
(assert (x1202 (x799 x932)))
(assert (x1139 x714))
(assert (x1517 x1668 x638 x1553 x692))
(assert (x1139 x1631))
(assert (= (x422 (x1541 64 x1384 0)) 0))
(assert (= (x1834 (x1541 64 x1405 60)) x1405))
(assert (x1454 (- x1553 x1445)))
(assert (x1310 x1668 (- x638 x18)))
(assert (x1139 x496))
(assert (x684 x438 2))
(assert (x1139 x605))
(assert (> (x1541 64 x1411 61) 10000))
(assert (x1139 x1759))
(assert (x599 x18 x1825 x638 x1668))
(assert (x1310 x1825 (- x18 x1668)))
(assert (= x288 (x1834 (x1541 64 x288 0))))
(assert (= (=> (and (= x1697 x1799) (= (x60 340282366920938463463374607431768211455 x1176) x889)) x339) x108))
(assert (= (x1532 (x1541 64 x1117 72)) 64))
(assert (= x1155 x194))
(assert (x599 x1825 x18 x1489 x1445))
(assert (= (=> (and (and (= x994 (x1541 64 x1411 61)) (not (>= (+ x1389 x1183) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1882 (x326 (+ x1389 x1183))) (= x1389 (x157 x994)) (= x1716 (= 0 x1183))) (or (and (= (x1541 64 x1411 61) x710) (not x1716)) x1716)) x47) x822))
(assert (= (=> (= x626 192) x1761) x1155))
(assert (x1139 x1524))
(assert (= (or x664 x38) x1849))
(assert (= x1730 (or x381 x1518)))
(assert (x1517 x1553 x692 x1445 x1489))
(assert (= (and x1460 x80) x1656))
(assert (= x483 (or x1633 x1565)))
(assert (x1310 x638 (- x1668 x1825)))
(assert (= (x1532 (x1541 64 x912 0)) 64))
(assert (= (x422 (x1541 64 x693 0)) 0))
(assert (= (x651 20282409603651670423947251286015) 0))
(assert (= (=> (and (and (and (= x133 (* 10000000000 (x79 x396 10000000000))) (= (+ x200 x133) x1143) (= x1035 10000000000) (= 10000000000 x516) (= x144 false)) (and (= 10000000000 x1341) (= x518 (* (x79 x496 10000000000) 10000000000)) (= (- x1143 x518) x492))) (and (= (x1004 x1384) x662) (<= x1087 1461501637330902918203684832716283019655932542975) (<= 0 x1087) (= 10000000000 x1260) (= false x1756) (>= 1461501637330902918203684832716283019655932542975 x662) (= x1087 (x1004 x1384)) (>= x662 0) (= x946 x1324) x1040 (= x1309 x946) (= x200 (x1839 x1087)))) x1090) x166))
(assert (= (x1541 64 x1821 0) (x651 (x1541 64 x1821 0))))
(assert (x1139 x1465))
(assert (= (or x885 (and x1267 x1594)) x127))
(assert (x1139 x25))
(assert (x1139 x1442))
(assert (= x1340 (and x563 x1586)))
(assert (= (and (not x80) x1460) x1065))
(assert (x1139 x528))
(assert (= 64 (x1532 (x1541 64 x947 0))))
(assert (x1879 x1736))
(assert (x1310 x638 x1668))
(assert (not (x898 (x1541 64 x1411 x477))))
(assert (x1139 x1723))
(assert (= (x1541 64 x1886 72) (x651 (x1541 64 x1886 72))))
(assert (> (x1541 64 x460 x198) 10000))
(assert (x97 10000000000 (x79 x1346 10000000000)))
(assert (x1454 (- x1489 x1668)))
(assert (x414 x1655))
(assert (x1139 x59))
(assert (x1139 x246))
(assert (= 0 (x422 (x1541 64 x1821 0))))
(assert (x788 340282366920938463463374607431768211456))
(assert (x1139 x55))
(assert (= (and (not x1728) x1802) x241))
(assert (> (x1541 64 x947 0) 10000))
(assert (= (and x61 x1828) x1666))
(assert (x1139 x1699))
(assert (= (x1541 64 x1350 0) (x651 (x1541 64 x1350 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1384 x223)))
(assert (x1139 x98))
(assert (x1139 x1050))
(assert (x1139 x924))
(assert (= x233 (=> (and (and (and (= false x725) (= x181 x296) (= x296 x992) (= x527 x1681) (= x917 false) (= false x1551) (= false x229) (= 36 x1043)) (and (and (<= x362 3) (<= x595 3) (= x291 x239) (= x1502 (x869 x1405)) (= x239 x1432) (>= 127 x998) x1121 (= (x1541 64 x1432 0) x57) (= (= 2 x595) x922) (= false x1701) (= (= x362 x595) x1121) (>= x1502 1) (= 816537496 x767) (= (x1873 x1432) x362) (= false x1348) (= x1432 x527) (>= 127 x998) (= (x1070 x57) x595)) (or (and (= x251 (ite x922 1 0)) x922) (and (not x922) (and (<= x167 3) (= (= x167 x781) x856) (= x1750 (x1541 64 x1432 0)) (= x251 (ite (= 3 x167) 1 0)) (= x781 (x1873 x1432)) (= (x1070 x1750) x167) (= x150 x239) (<= x781 3) x856))))) (and (= x1029 (+ x1334 x1428)) (= (* x1074 10000000000) x852) x570 (= (= x1138 x334) x570) (= x829 x1405) (<= x992 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1458 (= x1029 x378) (= x1138 x1492) (= x1334 x852) (= x1492 x1225) (>= 105312291668557186697918027683670432318895095400549111254310977535 x334) (= x334 x498) (= (x1071 x1029 x334) x992) (<= 0 x992) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1492) (= (= x1225 x334) x1458) (>= x1492 0))) x1636)))
(assert (x1202 (x799 x1126)))
(assert (= (x422 (x1541 64 x947 0)) 0))
(assert (x1139 x1249))
(assert (x1139 x136))
(assert (x1139 x554))
(assert (> (x1541 64 x1411 x477) 10000))
(assert (x1454 (- x1668 x18)))
(assert (x1139 x1683))
(assert (x1139 x905))
(assert (x1454 (- x1553 x1825)))
(assert (= (x1834 (x1541 64 x1384 1)) x1384))
(assert (x1139 x624))
(assert (x1139 x937))
(assert (x1139 x946))
(assert (x1517 x1445 x1489 x692 x1553))
(assert (= (x422 (x1541 64 x1411 61)) 61))
(assert (= (x651 1461501637330902918203684832716283019655932542975) 0))
(assert (x599 x1668 x638 x1553 x692))
(assert (= 0 (x422 (x1541 64 x1432 0))))
(assert (x1139 x76))
(assert (= (x651 (x1541 64 x1384 0)) (x1541 64 x1384 0)))
(assert (x74 x5))
(assert (= 64 (x1532 (x1541 64 x1384 x223))))
(assert (x599 x1668 x638 x1489 x1445))
(assert (x1139 x1404))
(assert (not (x898 (x1541 64 x1144 0))))
(assert (x684 x1413 4))
(assert (x1517 x1553 x692 x1489 x1445))
(assert (< (x1541 64 x1560 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x1126))
(assert (x1139 x847))
(assert (x1139 x218))
(assert (= (and x849 (not x346)) x349))
(assert (x1139 x534))
(assert (x1139 x1856))
(assert (x1517 x18 x1825 x1668 x638))
(assert (x1139 x1783))
(assert (x1139 x1250))
(assert (= x1411 (x1834 (x1541 64 x1411 x477))))
(assert (= x214 (and x1410 x483)))
(assert (x1139 x1098))
(assert (= x410 (and x1235 x1228)))
(assert (< (x1541 64 x1411 61) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x1822))
(assert (= (x1834 (x1541 64 x879 0)) x879))
(assert (x1139 x709))
(assert (not (x898 (x1541 64 x693 0))))
(assert (x97 10000000000 x1638))
(assert (= (x422 (x1541 64 x1215 72)) 72))
(assert (x1581 (x1004 x1411)))
(assert (x1139 x1611))
(assert (x1139 x608))
(assert (x1139 x427))
(assert (x788 x1413))
(assert (=> (>= 10000 x721) (= (x651 x721) 0)))
(assert (x1139 x1642))
(assert (= (x1541 64 x721 0) (x651 (x1541 64 x721 0))))
(assert (x677 x425 1000000000000000000))
(assert (= x563 (or x1656 x1065)))
(assert (x599 x1553 x692 x1825 x18))
(assert (x1139 x94))
(assert (x1139 x1312))
(assert (= (x1541 64 x1239 0) (x651 (x1541 64 x1239 0))))
(assert (x1517 x638 x1668 x18 x1825))
(assert (x1454 (- x18 x1489)))
(assert (x1202 (x1407 x1014)))
(assert (x1139 x1481))
(assert (= (or x241 x1686) x415))
(assert (x1454 (- x1825 x1553)))
(assert (= x228 (and x330 (not x973))))
(assert (= 64 (x1532 (x1541 64 x1886 72))))
(assert (x1139 x810))
(assert (x1139 x1094))
(assert (= x1527 (and x1684 x934)))
(assert (x1139 x1427))
(assert (x1139 x919))
(assert (x1879 x145))
(assert (x788 2))
(assert (= (x651 (x1541 64 x1560 0)) (x1541 64 x1560 0)))
(assert (x599 x638 x1668 x1825 x18))
(assert (x898 10000000000))
(assert (x1879 x612))
(assert (= x1564 (and x401 (not x112))))
(assert (x1310 x1553 (- x692 x638)))
(assert (= (or x214 x490) x857))
(assert (= (=> (= x981 (= x1262 x1799)) (and (=> (and x981 (= 0 x1183)) x822) (=> (and (not x981) (and (= x1463 (= x1825 0)) (or (and (and (= (x1617 (- x1799 x1262)) x18) (< (x1503 x1825 x18) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x18 x1799)) (<= 0 x617) (= (x79 x617 1000000000000000000) x762) (= x762 x1312) (<= x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1503 x1825 x18) x617)) (not x1463)) (and x1463 (= x1312 0))))) x836))) x339))
(assert (x1139 x1859))
(assert (x684 x714 4))
(assert (x1454 (x79 x1634 10000000000)))
(assert (x1879 x1813))
(assert (x1139 x1327))
(assert (= (x1834 (x1541 64 x932 0)) x932))
(assert (= x1144 (x1834 (x1541 64 x1144 0))))
(assert (x414 20282409603651670423947251286015))
(assert (x1139 x1738))
(assert (x1139 x34))
(assert (x1879 x1179))
(assert (x1310 x1445 (- x1489 x692)))
(assert (x1303 x1413))
(assert (x788 x937))
(assert (= x1473 (or x146 x1023)))
(assert (x1454 (- x1489 x692)))
(assert (x1139 x1383))
(assert (x1454 (- x18 x638)))
(assert (= x401 (or x598 x1496)))
(assert (x1139 x1397))
(assert (=> (>= 10000 x1144) (= 0 (x651 x1144))))
(assert (= x1170 (or x1437 x1106)))
(assert (x1517 x18 x1825 x1553 x692))
(assert (= 64 (x1532 (x1541 64 x1821 0))))
(assert (= x13 (=> (and (= x1745 (x60 340282366920938463463374607431768211455 x1176)) (= x1162 x203)) x175)))
(assert (= (x651 (+ 1 x423)) (x651 x423)))
(assert (x1139 x906))
(assert (x1879 x1259))
(assert (x1517 x1825 x18 x692 x1553))
(assert (x1139 x1264))
(assert (x1454 (- x1445 x1668)))
(assert (= (x651 (x1541 64 x1432 0)) (x1541 64 x1432 0)))
(assert (< 10000 (x1541 64 x608 0)))
(assert (= (and (not x1716) x24) x1344))
(assert (< 10000 (x1541 64 x1384 61)))
(assert (x1879 x503))
(assert (x1310 x1825 (- x18 x1553)))
(assert (= 0 (x651 115792089237316195423570985008687907853269984645358154435805913583965878353921)))
(assert (x1139 x1176))
(assert (= x1239 (x1834 (x1541 64 x1239 0))))
(assert (x1310 x1489 (- x1445 x1668)))
(assert (= (x422 (x1541 64 x608 0)) 0))
(assert (= 64 (x1532 (x1541 64 x1432 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x460 x198)))
(assert (x1139 x1368))
(assert (= (x1532 (x1541 64 x1215 72)) 64))
(assert (x1139 x770))
(assert (x1139 x211))
(assert (x1139 x1816))
(assert (= x1518 (and x984 (not x209))))
(assert (x1139 x341))
(assert (x1139 x180))
(assert (x1139 x1844))
(assert (= (and x3 (not x993)) x250))
(assert (x1139 x380))
(assert (= (=> (and (and (and (and (= x982 (x1541 64 x1547 0)) (= x1539 x1547) (= x1889 (x869 x1405)) x614 (= (= x837 x222) x614) (= x53 false) (= 816537496 x1201) (>= 3 x222) (= x390 false) (>= 127 x1406) (>= 3 x837) (= x837 (x377 x1547)) (>= x1889 1) (= (= x222 2) x916) (= x593 x1547) (= (x592 x982) x222) (>= 127 x1406) (= x593 x402)) (or (and (= x1295 (ite x916 1 0)) x916) (and (and x1332 (= (x377 x1547) x479) (= (ite (= 3 x1417) 1 0) x1295) (= (x592 x807) x1417) (= (x1541 64 x1547 0) x807) (= x1332 (= x1417 x479)) (>= 3 x1417) (<= x479 3) (= x593 x1330)) (not x916)))) (and (= x550 x1539) (= false x1326) (= false x928) (= x1011 x1696) (= x1832 false) (= false x309) (= 36 x841) (= x51 x1696))) (and (= (= x334 x172) x1066) (= x86 (= x334 x764)) (= x172 x1492) (= (x1071 x301 x334) x1011) (= x301 x473) (= x1670 x1405) (= (+ x141 x11) x301) (<= 0 x1011) (<= x1011 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1066 (= x141 x17) (= x1220 x334) (= x1492 x764) x86 (= (* x260 10000000000) x17))) x1211) x495))
(assert (= (and x45 (not x1703)) x1639))
(assert (x1139 x1179))
(assert (= (or x866 x1170) x1274))
(assert (x1139 x399))
(assert (x1139 x1305))
(assert (x1139 x517))
(assert (x74 x617))
(assert (= x664 (and (not x345) x1730)))
(assert (= (x1541 64 x932 0) (x651 (x1541 64 x932 0))))
(assert (=> (>= 10000 x1432) (= 0 (x651 x1432))))
(assert (= (and x456 x1602) x598))
(assert (x1517 x18 x1825 x692 x1553))
(assert (= 64 (x1532 (x1541 64 x460 x198))))
(assert (x1454 (- x1825 x1489)))
(assert (x414 x937))
(assert (x1139 x37))
(assert (x1139 x721))
(assert (= x1720 (=> (and (= (x326 (+ x676 x955)) x314) (< (x1503 x638 x1668) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x955 (x79 x387 x5)) (<= x1191 57896044618658097711785492504343953926634992332820282019728) (not (> x1668 x1255)) (<= 1 x5) (= (* 1000000000000000000 x1191) x387) (= (x1617 (- x1255 x1605)) x1668) (>= x1191 0) (= (x1503 x638 x1668) x1191) (not (>= (+ x955 x676) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1697 x314)) x1474)))
(assert (x1139 x559))
(assert (not (x898 (x1541 64 x1411 0))))
(assert (x1139 x653))
(assert (=> (>= 10000 x288) (= (x651 x288) 0)))
(assert (x1139 x1343))
(assert (x1139 x1754))
(assert (not (x898 (x1541 64 x513 0))))
(assert (=> (>= 10000 x1350) (= (x651 x1350) 0)))
(assert (=> (>= 10000 x1806) (= (x651 x1806) 0)))
(assert (not (x898 (x1541 64 x1384 61))))
(assert (= (x1541 64 x1411 x477) (x651 (x1541 64 x1411 x477))))
(assert (= (and x1212 (not x1618)) x1352))
(assert (= x1892 (and x66 x1527)))
(assert (= x445 (or x1733 x410)))
(assert (x1202 (x1407 x513)))
(assert (x1454 (- x1489 x1553)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x947 0)))
(assert (= 0 (x422 (x1541 64 x1481 0))))
(assert (x1454 x1638))
(assert (x1517 x638 x1668 x1825 x18))
(assert (x677 x1824 10000000000))
(assert (x1310 x638 (- x1668 x1445)))
(assert (x1139 x118))
(assert (x1517 x1445 x1489 x1668 x638))
(assert (x1454 x1825))
(assert (x1310 x1553 (- x692 x1668)))
(assert (= (and x346 x849) x1120))
(assert (< (x1541 64 x1384 61) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1454 (- x638 x18)))
(assert (x1139 x513))
(assert (x1517 x638 x1668 x692 x1553))
(assert (= (and x1207 x1831) x298))
(assert (x1139 x1157))
(assert (x1139 x143))
(assert (x1139 x1821))
(assert (=> (>= 10000 x1383) (= (x651 x1383) 0)))
(assert (not (x898 (x1541 64 x1411 61))))
(assert (x1139 x1162))
(assert (x599 x18 x1825 x1489 x1445))
(assert (= (x1532 (x1541 64 x1411 x477)) 64))
(assert (not (x898 (x1541 64 x608 0))))
(assert (= (x1541 64 x478 0) (x651 (x1541 64 x478 0))))
(assert (= x849 (and x1819 (not x1317))))
(assert (= (and (not x644) x819) x276))
(assert (=> (>= 10000 x1886) (= (x651 x1886) 0)))
(assert (x1139 x514))
(assert (x1139 x1009))
(assert (x599 x18 x1825 x1553 x692))
(assert (= (=> (and (= x1003 (x1541 64 x1384 x223)) (= x1234 x1373)) x1869) x482))
(assert (x1139 x487))
(assert (x1139 x279))
(assert (= 64 (x1532 (x1541 64 x1806 0))))
(assert (x1139 x781))
(assert (= (and x1808 (not x1466)) x658))
(assert (x1139 x203))
(assert (= (x651 47223664828696452136950000000000) 0))
(assert (x1139 x989))
(assert (x1139 x1150))
(assert (x1139 x141))
(assert (= 64 (x1532 (x1541 64 x1384 0))))
(assert (x1139 x1215))
(assert (x898 4722366482869645213695))
(assert (= 72 (x422 (x1541 64 x1886 72))))
(assert (x1139 x1881))
(assert (x1139 x1177))
(assert (= (x651 (+ 2 x423)) (x651 x423)))
(assert (= (x651 (x1541 64 x1411 61)) (x1541 64 x1411 61)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1384 62)))
(assert (x1310 x18 (- x1825 x692)))
(assert (x1879 x293))
(assert (= (or x757 x1194) x984))
(assert (= x1030 (and x1340 x580)))
(assert (= (x422 (x1541 64 x1144 0)) 0))
(assert (x1139 x1389))
(assert (> (x1541 64 x1411 0) 10000))
(assert (x1139 x1356))
(assert (x1139 x804))
(assert (not (x898 (x1541 64 x1405 60))))
(assert (x16 x387 x5))
(assert (x1879 x873))
(assert (x1454 x1668))
(assert (x1139 x1204))
(assert (x414 x538))
(assert (x1310 x1825 (- x18 x1445)))
(assert (x1139 x151))
(assert (x599 x1445 x1489 x1825 x18))
(assert (=> (>= 10000 x1239) (= 0 (x651 x1239))))
(assert (not (x898 (x1541 64 x1350 0))))
(assert (x1139 x953))
(assert (x1139 x1025))
(assert (= (or x300 x659) x1217))
(assert (x1139 x1258))
(assert (x1517 x1445 x1489 x1553 x692))
(assert (= (=> (and (= (x1541 64 x1411 x477) x1452) (= x1183 x1312)) x822) x836))
(assert (> (x1541 64 x513 0) 10000))
(assert (x1139 x1007))
(assert (x1139 x1775))
(assert (x1139 x671))
(assert (x1454 (- x1553 x18)))
(assert (= (and x54 (not x1588)) x665))
(assert (= (and x1414 x716) x1223))
(assert (< 10000 (x1541 64 x879 0)))
(assert (x1139 x1675))
(assert (< 10000 (x1541 64 x1886 72)))
(assert (x1139 x1868))
(assert (= (x1532 (x1541 64 x1411 0)) 64))
(assert (= x30 (and (not x1207) x1831)))
(assert (= (=> (and (and (<= x731 1461501637330902918203684832716283019655932542975) (= x494 (= x731 0)) (= (= 0 x905) x1122) x1122 (= x1842 x626) (= (x1617 (- x1384 x1411)) x905)) (or x494 (and (and (= (x326 (+ x717 32)) x1096) (= (x326 (+ 32 x903)) x717) (= x735 (x326 (+ x1857 32))) (= (x326 (+ x1842 4)) x903) (>= 4294967295 x1258) (= (x326 (+ 32 x1096)) x1857)) (not x494)))) x1364) x1311))
(assert (x1139 x1000))
(assert (x1310 x18 (- x1825 x1489)))
(assert (not (x898 (x1541 64 x1481 0))))
(assert (x1139 x1314))
(assert (not (x898 (x1541 64 x104 0))))
(assert (= 0 (x651 1000000000000000000)))
(assert (x1139 x184))
(assert (not (x898 (x1541 64 x460 x198))))
(assert (not (x898 (x1541 64 x478 0))))
(assert (< 10000 (x1541 64 x615 0)))
(assert (x1139 x1123))
(assert (x1139 x331))
(assert (x1303 x438))
(assert (x1139 x1277))
(assert (x1454 x1445))
(assert (x1139 x977))
(assert (x97 10000000000 (x79 x747 10000000000)))
(assert (x599 x638 x1668 x1489 x1445))
(assert (x1879 x633))
(assert (x1139 x333))
(assert (x1454 (- x18 x692)))
(assert (x1310 x18 (- x1825 x638)))
(assert (x1139 x1493))
(assert (x1139 x332))
(assert (> (x1541 64 x1384 0) 10000))
(assert (= x1684 (and (not x1594) x1267)))
(assert (x1310 x1489 x1445))
(assert (x1139 x650))
(assert (> (x1541 64 x1126 0) 10000))
(assert (x1139 x1349))
(assert (x1139 x1182))
(assert (x1139 x273))
(assert (x1879 x1102))
(assert (x1139 x1797))
(assert (x1139 x841))
(assert (x1139 x1851))
(assert (x1454 x555))
(assert (= (x651 3564106003) 0))
(assert (not (x898 (x1541 64 x947 0))))
(assert (= 0 (x422 (x1541 64 x288 0))))
(assert (x1310 x1553 (- x692 x18)))
(assert (x788 x462))
(assert (x1139 x795))
(assert (x1139 x648))
(assert (x1139 x828))
(assert (x898 1000000000000000000))
(assert (x1454 (- x1825 x1445)))
(assert (= (x651 (+ x1361 2)) (x651 x1361)))
(assert (x1139 x1605))
(assert (x1139 x775))
(assert (x1517 x1825 x18 x638 x1668))
(assert (x1139 x1886))
(assert (x1139 x1557))
(assert (x1139 x263))
(assert (= (and x1849 x916) x1758))
(assert (= x678 (and x1828 (not x61))))
(assert (< 10000 (x1541 64 x1560 0)))
(assert (= 64 (x1532 (x1541 64 x615 0))))
(assert (= x1001 (and x1274 (not x1449))))
(assert (x684 x1655 2))
(assert (= (=> (and (>= 340282366920938463463374607431768211455 x1362) (= x21 (x1617 (- x1176 x1362))) (= x1703 (> x21 0)) (= (+ 2 x423) x223) (= x1489 (x1429 x591)) (= x423 (x1541 64 x1405 60)) (= x1362 (x773 x423)) (= x1667 (x1407 x1384)) (= x591 (x1541 64 x1384 0)) (= x1723 (x1247 x1292)) (= x554 1) (= (+ 1 x423) x1292) (>= x1667 0) x949 (= x949 (= x1667 x1489)) (= (x1541 64 x1384 x223) x1641) (= x946 x751) (>= 20282409603651670423947251286015 x1489) (<= x1667 20282409603651670423947251286015) (= (x777 x1641) x537)) (and (=> (and x1703 (and (and (= x1520 (ite (= 0 x1553) (ite (= x1553 0) 1 0) (ite (= 0 x5) 1 0))) (<= x1553 340282366920938463463374607431768211455) (= (x1766 x423) x1553) (= (> x1520 0) x80)) (or (and (= x1520 x1434) x80) (and (= x1434 (ite (= x1176 x1362) 1 0)) (not x80))))) x1287) (=> (and (= x203 x1723) (not x1703)) x175))) x284))
(assert (x677 x1634 10000000000))
(assert (x1454 (- x1668 x1489)))
(assert (x1310 x1825 x18))
(assert (x1139 x439))
(assert (= (and x1463 x400) x723))
(assert (x1139 x104))
(assert (=> (<= x1117 10000) (= (x651 x1117) 0)))
(assert (x97 10000000000 (x79 x496 10000000000)))
(assert (x1139 x314))
(assert (x1139 x436))
(assert (= x477 (x422 (x1541 64 x1411 x477))))
(assert (x898 1889567281))
(assert (= (and x931 x1749) x1131))
(assert (x1139 x669))
(assert (x74 x1644))
(assert (= (x651 (x1541 64 x1383 72)) (x1541 64 x1383 72)))
(assert (x898 599290589))
(assert (x1139 x1612))
(assert (x1139 x429))
(assert (= (x1541 64 x460 x1710) (x651 (x1541 64 x460 x1710))))
(assert (x97 10000000000 x924))
(assert (x1310 x692 (- x1553 x1825)))
(assert (= x1761 (=> (= x993 (= x1411 x1384)) (and (=> (and (and (<= x1397 20282409603651670423947251286015) (= (x1617 (- x977 x1397)) x937) (= x987 x396) (= (x1873 x1384) x1335) (= (x60 20282409603651670423947251286015 x937) x396) (>= x1178 0) (= x737 true) (= x240 (x1873 x1384)) (<= x977 20282409603651670423947251286015) (= x1291 (= x240 1)) (= x1040 (or x1291 x385)) (= x946 x910) (= x385 (= x1335 3)) (<= x1178 20282409603651670423947251286015) x705 x110 (= x946 x520) (= x215 x946) (= x391 x207) (= x733 (x1407 x1384)) (= x977 (x1429 x1256)) (not (> x1397 x977)) (= (x1429 x1266) x496) (<= x496 20282409603651670423947251286015) (<= 0 x733) (>= 20282409603651670423947251286015 x766) (<= x1335 3) (= false x265) (= x1719 (x1541 64 x1411 0)) (<= x240 3) (<= x733 20282409603651670423947251286015) (= x1256 (x1541 64 x1384 0)) (= x1266 (x1541 64 x1384 0)) (= 0 x1089) (= x766 (x1429 x1719)) (= x946 x1861) (= (= x766 x1178) x110) (= x1178 (x1407 x1411)) (= x705 (= x733 x977))) (not x993)) (and (=> (and (and (= true x501) (not x1040)) (not x1040)) x1090) (=> x1040 x166))) (=> x993 x1855)))))
(assert (x1454 (x79 x396 10000000000)))
(assert (x1139 x413))
(assert (= (x422 (x1541 64 x1560 0)) 0))
(assert (= x513 (x1834 (x1541 64 x513 0))))
(assert (= x1686 (and x1802 x1728)))
(assert (= (x1834 (x1541 64 x460 x198)) x460))
(assert (not (x898 (x1541 64 x1126 0))))
(assert (x1139 x1428))
(assert (= 0 (x422 (x1541 64 x478 0))))
(assert (x1139 x478))
(assert (x1139 x848))
(assert (x1139 x177))
(assert (x1202 (x799 x947)))
(assert (x1139 x213))
(assert (x1454 (- x1553 x1489)))
(assert (x1310 x1489 (- x1445 x638)))
(assert (x1139 x731))
(assert (=> (>= 10000 x615) (= (x651 x615) 0)))
(assert (= (x1834 (x1541 64 x1384 x223)) x1384))
(assert (x1139 x1074))
(assert (x1139 x1700))
(assert (and x1669 x1371))
(assert (x677 x1 10000000000))
(assert (x1139 x5))
(assert (x677 x1346 10000000000))
(assert (x1517 x18 x1825 x1445 x1489))
(assert (x1139 x1615))
(assert (=> (>= 10000 x1384) (= 0 (x651 x1384))))
(assert (x1139 x242))
(assert (= x1433 (and x1212 x1618)))
(assert (x1139 x790))
(assert (x1310 x692 (- x1553 x638)))
(assert (= (x651 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x1454 (- x1489 x18)))
(assert (x1139 x1676))
(assert (x97 1000000000000000000 x1191))
(assert (= (and x508 (not x797)) x659))
(assert (x1139 x12))
(assert (x1310 x1445 (- x1489 x18)))
(assert (x1581 (x1004 x1384)))
(assert (x1310 x1825 (- x18 x692)))
(assert (x1517 x1553 x692 x18 x1825))
(assert (= (or x1344 x1663) x1267))
(assert (x1139 x1767))
(assert (x1139 x1117))
(assert (x1139 x1772))
(assert (x788 20282409603651670423947251286016))
(assert (< (x1541 64 x608 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x85))
(assert (x1139 x1737))
(assert (= x1595 (or x1578 x205)))
(assert (x1139 x576))
(assert (= x104 (x1834 (x1541 64 x104 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1411 x477)))
(assert (x1517 x1489 x1445 x692 x1553))
(assert (= x721 (x1834 (x1541 64 x721 0))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1239 0)))
(assert (= (and x45 x1703) x1460))
(assert (x74 x1346))
(assert (x1202 (x1407 x288)))
(assert (x1139 x405))
(assert (x1517 x1489 x1445 x18 x1825))
(assert (x1139 x135))
(assert (x1139 x321))
(assert (x898 1099511627775))
(assert (x677 x496 10000000000))
(assert (x1454 (- x1825 x1668)))
(assert (= x1682 x194))
(assert (x1139 x1183))
(assert (= x1395 (and (not x976) x698)))
(assert (= 0 (x651 57896044618658097711785492504343953926634992332820282019728)))
(assert (< 10000 (x1541 64 x1144 0)))
(assert (x1139 x224))
(assert (= x1365 (=> (and (and (and (= x1479 (- x1838 x1707)) (= x1707 (* 10000000000 (x79 x496 10000000000))) (= 10000000000 x892)) (and (= x562 10000000000) (= 10000000000 x1888) (= x1838 (+ x1727 x642)) (= (* 10000000000 (x79 x396 10000000000)) x1727) (= x546 false))) (and (= x486 x946) (>= x393 0) (>= 1461501637330902918203684832716283019655932542975 x1165) (= x393 (x991 x1384)) (= (x991 x1384) x1165) (= x642 (x256 x393)) (>= 1461501637330902918203684832716283019655932542975 x393) x1228 (>= x1165 0) (= 10000000000 x893) (= false x1771) (= x946 x573))) x1798)))
(assert (= x1378 (=> (and (and (= x1602 (not x112)) (= x1450 (- x1540 x1718)) (= x1251 (ite x976 x117 x459))) (or (and (not x1602) (and (= x1308 x40) (= x1444 x1372) (= x40 true))) (and x1602 (and (= x120 x1308) (= x1626 x1647) (= x1213 (+ x1629 x536)) (= x1439 x1450) (= (+ 1 x1448) x1342) (= (+ x1647 1) x1461) (= x759 (+ x181 x948)) (= x1380 x1372) (= x1629 x1129) (<= 0 x948) (= x1626 x675) (= x1221 (+ x1439 x1213)) (= x366 (or x686 x1189)) (= 1 x1261) (= x1448 x1702) (= x122 x1702) (<= x948 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1189 (= x1461 x122)) (= x1017 x1626) (= x1380 (or x1809 x366)) (= x1809 (= x1017 x1342)) (= x948 (x1071 x1221 x1725)) (= x1192 x1702) (= x536 x1251) (= x1037 x1702) (= x759 x1626) (= x411 1) (= (= x1192 x675) x686) (= x1725 x1492))))) x1606)))
(assert (x1139 x1792))
(assert (x1139 x1736))
(assert (x1139 x942))
(assert (x1139 x193))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x932 0)))
(assert (x1139 x693))
(assert (= (=> (and (and (= (= x1234 0) x1449) (= (x1541 64 x1384 61) x1624) (not (>= (+ x1234 x1772) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x532 x1624) x1772) (= (x326 (+ x1772 x1234)) x1657)) (or (and (= x1795 (x1541 64 x1384 61)) (not x1449)) x1449)) x656) x1869))
(assert (x1139 x396))
(assert (= 64 (x1532 (x1541 64 x1481 0))))
(assert (x1139 x1295))
(assert (= x1855 (=> (and (and (and (and (>= 127 x1416) (= (= x528 0) x736) (<= x1356 3) (<= 1 x703) (= x1560 x419) (= x845 x1864) (= x1254 (x1863 x561)) (<= x972 20282409603651670423947251286015) (= x517 352) (= x1356 (x377 x1560)) (= x1301 (x1409 x561)) (>= x972 0) (= false x600) (<= x252 4722366482869645213695) (= x703 (x869 x1405)) (= x972 (x799 x1560)) (= x561 (x1541 64 x1560 0)) x1283 (<= x1416 127) (= x224 (x592 x561)) (= 3002343453 x847) (= x1283 (= x1301 x972)) (= x845 x1560) (= x154 (= x1356 x224)) (>= 4722366482869645213695 x1254) (>= 3 x224) (= false x1793) (= x1015 1) (= 1 x1009) (<= x1301 20282409603651670423947251286015) (= x845 x750) x154 (= x528 (x60 2 x224)) (= x252 (x589 x561))) (or (and x736 (and (>= 20282409603651670423947251286015 x1379) (= x1156 x845) (>= 20282409603651670423947251286015 x380) (= (x1541 64 x1560 0) x33) (= (x1409 x33) x380) (= (= x380 x1379) x208) (<= 0 x1379) (= x1775 x380) x208 (= x1379 (x799 x1560)))) (and (= 0 x1775) (not x736)))) (and (>= 20282409603651670423947251286015 x588) (= (x869 x1405) x1548) (>= 20282409603651670423947251286015 x1665) (= x588 (x1409 x1203)) (= x1491 false) (<= x1150 127) (= x1055 false) (= x673 68) (<= x1150 127) (= x1665 (x799 x932)) (= x953 x932) (= x802 (= x588 x1665)) (= x512 1889567281) (= x364 x419) (>= x1548 1) (>= x1665 0) (= x618 x953) (= x1203 (x1541 64 x932 0)) x802 (= x1081 false) (= x1872 false) (= x932 x1860) (= x551 false) (= false x954) (= x1 x588))) (and (= x268 false) (= x1813 36) (= 1 x59) (= x1860 x364) (= x1870 false) (= x43 false) (= x1763 false))) x1546)))
(assert (= (=> (and (and (and (= false x1095) (= (* (x79 x1 10000000000) 10000000000) x855) (= 10000000000 x65) (= 10000000000 x1522)) (and (= x1164 10000000000) (= (- x855 x1555) x1514) (= x1555 (* (x79 x1634 10000000000) 10000000000)) (= x101 x1514) (= x1874 x1031))) (and (= 10000000000 x441) (= x1300 false))) x1329) x980))
(assert (x1310 x1553 (- x692 x1489)))
(assert (= x1287 (=> (= (= 0 (ite (< 0 x1434) x1434 (ite (not (< x1362 x457)) 1 0))) x1586) (and (=> (and (= x1162 x1723) (not x1586)) x923) (=> (and (and (= x580 (< x457 x1176)) (or (and (not x580) (= x1176 x1823)) (and x580 (= x1823 x457)))) x1586) x941)))))
(assert (x1517 x1668 x638 x18 x1825))
(assert (x1139 x361))
(assert (x1303 x714))
(assert (= (x422 (x1541 64 x1384 62)) 62))
(assert (= x318 (and x1684 (not x934))))
(assert (x1139 x1319))
(assert (x1879 x1258))
(assert (x1139 x593))
(assert (=> (>= 10000 x1405) (= 0 (x651 x1405))))
(assert (= x1126 (x1834 (x1541 64 x1126 0))))
(assert (= 60 (x422 (x1541 64 x1405 60))))
(assert (x1139 x1355))
(assert (x1454 x260))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1384 0)))
(assert (x1454 (x79 x1644 10000000000)))
(assert (x1139 x1794))
(assert (x1454 (- x1445 x638)))
(assert (x1139 x1262))
(assert (= (x422 (x1541 64 x1384 x223)) x223))
(assert (x1139 x962))
(assert (x599 x1445 x1489 x638 x1668))
(assert (= (x1532 (x1541 64 x608 0)) 64))
(assert (x1454 x1489))
(assert (= x1807 (=> (and (and (and (= false x1693) (= x864 10000000000) (= 10000000000 x530) (= (+ x1803 x1363) x1646) (= x1363 (* (x79 x1346 10000000000) 10000000000))) (and (= (- x1646 x1242) x96) (= 10000000000 x1480) (= x1242 (* (x79 x747 10000000000) 10000000000)))) (and (= (x991 x1411) x1022) x1728 (>= x185 0) (= x391 x179) (= x1507 x391) (= 10000000000 x526) (= false x1582) (= x1803 (x489 x185)) (>= 1461501637330902918203684832716283019655932542975 x1022) (= (x991 x1411) x185) (<= 0 x1022) (>= 1461501637330902918203684832716283019655932542975 x185))) x1311)))
(assert (x1139 x633))
(assert (x1139 x879))
(assert (x1139 x1113))
(assert (x788 x538))
(assert (< (x1541 64 x1547 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1879 x673))
(assert (= (or x475 x723) x121))
(assert (= (x422 (x1541 64 x1350 0)) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1144 0)))
(assert (not (x898 (x1541 64 x615 0))))
(assert (not (x898 (x1541 64 x1886 72))))
(assert (= x515 (=> (and (= (= x1658 x8) x1008) (= x112 (not (= x1187 0))) (= false x1713) (= x1867 true) (= x61 (= x6 x834)) x1008 x985 (= x964 x8) (= x985 (= x112 x48)) (= (ite (not (= 0 x25)) 1 0) x1187) (= x834 x1681) (= x1658 x1013) (= false x499) (= x1576 false) (= x247 false)) (and (=> (and (and (= x101 x545) (= x1031 x958) (= 0 x958)) (not x61)) x1329) (=> x61 x980)))))
(assert (x1310 x1445 (- x1489 x638)))
(assert (= 0 (x651 1889567281)))
(assert (= (x651 816537496) 0))
(assert (= x1047 (and x1116 (not x922))))
(assert (x1139 x615))
(assert (x1139 x730))
(assert (= x299 (and x1120 x1791)))
(assert (= x866 (and x973 x330)))
(assert (= x1158 (=> (and (and (= x1253 (* x924 10000000000)) x1600 (= x1405 x358) x1103 (<= x963 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x963) (= x355 x1822) (= x1492 x450) (= x1103 (= x450 x334)) (= x1253 x461) (= x1822 (+ x488 x461)) (= x787 x334) (= (= x1768 x334) x1600) (= x963 (x1071 x1822 x334)) (= x1492 x1768)) (and (and (= x963 x986) (= x1037 x986) (= false x851) (= x1145 false) (= x1681 x1230) (= x657 false) (= false x165) (= 36 x1102)) (and (or (and (= (ite x1618 1 0) x25) x1618) (and (and (= x283 (x1541 64 x615 0)) (<= x906 3) x1391 (= (ite (= x1408 3) 1 0) x25) (>= 3 x1408) (= x669 x749) (= (= x1408 x906) x1391) (= (x377 x615) x906) (= (x592 x283) x1408)) (not x1618))) (and (>= 127 x531) (= x1661 false) (= (x377 x615) x77) (>= 3 x434) (= x1112 false) (= (x592 x1704) x434) (>= x702 1) (>= 3 x77) (<= x531 127) (= x542 x669) (= (= x434 x77) x1415) (= (x1541 64 x615 0) x1704) (= x615 x1230) (= 816537496 x416) (= x669 x615) (= x702 (x869 x1405)) x1415 (= x1618 (= 2 x434)))))) x515)))
(assert (x1454 (x79 x1346 10000000000)))
(assert (= (or x678 x1666) x698))
(assert (x414 x1413))
(assert (x1139 x837))
(assert x1275)
(assert (= (and (not x1586) x563) x1633))
(assert (x97 10000000000 x307))
(assert (x1517 x1825 x18 x1445 x1489))
(assert (= (x1541 64 x1384 62) (x651 (x1541 64 x1384 62))))
(assert (x1517 x638 x1668 x1553 x692))
(assert (x1139 x1883))
(assert (x1202 (x1407 x1345)))
(assert (x1139 x595))
(assert (x1310 x1445 (- x1489 x1553)))
(assert (x1139 x1823))
(assert (=> (>= 10000 x693) (= (x651 x693) 0)))
(assert (x684 x1655 4))
(assert (x1454 (- x638 x1553)))
(assert (not (x898 (x1541 64 x1432 0))))
(assert (= x1106 (and (not x195) x228)))
(assert (= (x1532 (x1541 64 x513 0)) 64))
(assert (< 10000 (x1541 64 x1383 72)))
(assert (x1139 x1547))
(assert (x1139 x1239))
(assert (= (x422 (x1541 64 x1239 0)) 0))
(assert (x898 47223664828696452136950000000000))
(assert (x1454 (- x638 x1825)))
(assert (= x1620 (and (not x716) x1414)))
(assert (x898 3564106003))
(assert (x1139 x930))
(assert (= x1590 (=> (and (and (= x1206 false) (= 36 x828) (= x1068 false) x1698 (= x1577 false) (= x364 x1511) (= x1698 (not (= 0 x1652))) (= x1652 (ite (not (= x151 0)) 1 0)) (= false x443)) (and (and (and (or (and (= (ite x1466 1 0) x1883) x1466) (and (and (= x1883 (ite (= 3 x408) 1 0)) x707 (= x904 (x1541 64 x693 0)) (= (x1873 x693) x1676) (= x408 (x1070 x904)) (= x671 x500) (= (= x1676 x408) x707) (>= 3 x1676) (<= x408 3)) (not x1466))) (and (= x967 (x1070 x798)) (= x1135 816537496) (= x671 x794) (= x798 (x1541 64 x693 0)) (>= x1177 1) (= (= 2 x967) x1466) (>= 127 x549) (<= x967 3) (= x680 (= x1368 x967)) (= x1368 (x1873 x693)) (= false x1257) (<= x1368 3) (<= x549 127) (= x1604 false) (= x671 x693) (= (x869 x1405) x1177) (= x693 x467) x680)) (and (= x115 (= x1833 x1353)) (= x1788 x1806) (= (x1541 64 x1806 0) x470) (= false x970) (= (x1429 x470) x1833) (= 1889567281 x1082) (= x813 false) (= x1746 false) (= false x1403) (= x1353 (x1407 x1806)) (= x1109 x1305) (<= 1 x1098) (>= 127 x242) (<= x1833 20282409603651670423947251286015) (= 36 x1171) (= x1833 x1824) x115 (= x1142 false) (= false x643) (>= 127 x242) (= x1305 x1806) (= x1098 (x869 x1405)) (<= x1353 20282409603651670423947251286015) (= x467 x550) (<= 0 x1353))) (and (= x135 x1215) (= (x869 x1405) x1859) (= x1431 false) (= false x1392) (= 2283911215 x868) (= (x991 x1215) x116) (= x1788 x550) (= x650 36) (>= x1859 1) (>= x1440 1) (= false x1358) (>= 1461501637330902918203684832716283019655932542975 x1440) (= (x1541 64 x1215 72) x31) (>= 1461501637330902918203684832716283019655932542975 x116) (= false x244) (= false x1304) x1805 (= x446 false) (= x1215 x1511) (= x909 x135) (<= x1269 127) (= x1621 x1440) (<= 1 x116) (= x1440 (x1470 x31)) (= (= x1440 x116) x1805) (<= x1269 127)))) x843)))
(assert (x599 x1553 x692 x638 x1668))
(assert (< 10000 (x1541 64 x1432 0)))
(assert (x1139 x1222))
(assert (x1139 x1762))
(assert (x1139 x320))
(assert (=> (>= 10000 x879) (= 0 (x651 x879))))
(assert (x1310 x1553 x692))
(assert (x1139 x612))
(assert (= 0 (x422 (x1541 64 x1126 0))))
(assert (= 0 (x651 599290589)))
(assert (x97 10000000000 (x79 x1634 10000000000)))
(assert (x1139 x1254))
(assert (x1517 x1825 x18 x1668 x638))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1384 1)))
(assert (x684 x224 2))
(assert (x1139 x128))
(assert (x1139 x292))
(assert (x1202 (x1407 x879)))
(assert (x1454 x18))
(assert (< 10000 (x1541 64 x721 0)))
(assert (x1139 x307))
(assert (x1139 x370))
(assert (= x792 (or x1564 x1338)))
(assert (x1454 (- x1445 x692)))
(assert (x1879 x1427))
(assert (x1454 x307))
(assert (x1139 x1697))
(assert (x1454 x407))
(assert (x1139 x767))
(assert (= x1481 (x1834 (x1541 64 x1481 0))))
(assert (x1139 x46))
(assert (= x1226 (and x1537 (not x1801))))
(assert (x1454 (- x1445 x18)))
(assert (x1139 x1085))
(assert (< (x1541 64 x1117 72) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x1745))
(assert (= x843 (=> (and (and (= x801 (not (= 0 x1161))) (= false x687) (= x1662 false) (= x429 36) (= x1161 (ite (not (= 0 x1883)) 1 0)) (= x550 x691) (= x1786 false) (= x1651 false)) (and (and (= x718 true) (= x557 (x1541 64 x1117 72)) (= true x374) (= 2283911215 x292) (= x647 0) (<= x1278 127) (>= 1461501637330902918203684832716283019655932542975 x558) (= x1492 x1013) (= x558 x1583) (= x558 (x1470 x557)) (= x466 false) (>= x661 0) (= 68 x683) (= x464 false) x1062 (= x661 (x991 x1117)) (>= 1461501637330902918203684832716283019655932542975 x661) (= false x1420) (>= x1717 1) (= (= x558 x661) x1464) (= x974 x1117) (= (= x505 x1440) x1062) (= x965 false) (= false x899) (= x1117 x691) (= x392 x974) (= x364 x1678) (= x1681 x505) x124 (= x1885 x789) (>= 127 x1278) x1464 (= true x1328) (= x364 x1643) (= x280 false) (= x124 x1471) (= x1717 (x869 x1405)) x789 (= x453 false)) (and (or (and x931 (and (<= 0 x1110) (>= 20282409603651670423947251286015 x1110) (= x1844 (x1429 x1185)) (= (x1541 64 x1144 0) x1185) (<= x1844 20282409603651670423947251286015) x1331 (= x1110 (x1407 x1144)) (= x1844 x804) (= (= x1110 x1844) x1331) (= x1313 x1570))) (and (not x931) (= 0 x804))) (and (= x1313 x1144) (>= 4722366482869645213695 x853) (= x816 false) (= (x1541 64 x1144 0) x264) (<= x696 20282409603651670423947251286015) (>= x269 1) (>= 3 x1175) (= (x1873 x1144) x1175) (= (x814 x264) x407) (= x715 1) (= x1881 3002343453) (= x1244 (= x1175 x538)) (= x696 (x1407 x1144)) (>= 20282409603651670423947251286015 x730) (= (= 0 x506) x931) (= x1490 false) (= x935 x1313) (= x1054 x1313) (= x269 (x869 x1405)) (= x406 352) (= (= x730 x696) x694) (<= x324 127) (>= x696 0) (= (x1429 x264) x730) (= (x727 x264) x853) (<= x407 4722366482869645213695) (= 1 x398) (>= 3 x538) (= x538 (x1070 x264)) (= x1144 x1678) (>= 127 x324) x1244 (= (x60 2 x538) x506) x694)))) x155)))
(assert (x1454 x1074))
(assert (x1139 x537))
(assert (= x1384 (x1834 (x1541 64 x1384 62))))
(assert (= 61 (x422 (x1541 64 x1384 61))))
(assert (x1454 (- x1825 x638)))
(assert (> (x1541 64 x1405 60) 10000))
(assert (not (x898 (x1541 64 x721 0))))
(assert (= x1749 (or x658 x1475)))
(assert (not (x898 (x1541 64 x288 0))))
(assert (= (x422 (x1541 64 x460 x198)) x198))
(assert (x1139 x275))
(assert (x74 x496))
(assert (x1454 x252))
(assert (x1139 x18))
(assert (x1139 x488))
(assert (x1139 x202))
(assert (x1202 (x1407 x608)))
(assert (x1454 (- x18 x1553)))
(assert (x1202 (x799 x1350)))
(assert (< (x1541 64 x1350 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x478 0)))
(assert (x1517 x18 x1825 x1489 x1445))
(assert (x898 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1454 (- x1445 x1553)))
(assert (= (x1541 64 x288 0) (x651 (x1541 64 x288 0))))
(assert (x898 1461501637330902918203684832716283019655932542975))
(assert (x1139 x142))
(assert (x1454 (- x692 x1445)))
(assert (x599 x1489 x1445 x638 x1668))
(assert (= (x1532 (x1541 64 x104 0)) 64))
(assert (x1139 x626))
(assert (x1139 x324))
(assert (x1139 x998))
(assert (x898 105312291668557186697918027683670432318895095400549111254310977535))
(assert (x1139 x1301))
(assert (not (x898 (x1541 64 x1215 72))))
(assert (x1139 x69))
(assert (x1139 x1417))
(assert (x1139 x503))
(assert (x1202 (x799 x1481)))
(assert (= x1197 (=> (and (and (and (= x63 false) (= (* 10000000000 (x79 x1644 10000000000)) x1587) (= x176 10000000000) (= 10000000000 x815)) (and (= 10000000000 x249) (= x117 x1430) (= (- x1587 x359) x1430) (= x1593 x459) (= x359 (* 10000000000 (x79 x1824 10000000000))))) (and (= x458 10000000000) (= x420 false))) x1378)))
(assert (x1139 x1542))
(assert (< 10000 (x1541 64 x1350 0)))
(assert (= (or x183 x1630) x1046))
(assert (x1139 x868))
(assert (x1310 x1668 (- x638 x1445)))
(assert (= x1546 (=> (and (and (and (= x1499 false) (= x1286 false) (= x919 x645) (= x1104 false) (= x1393 x364) (= x919 x1370) (= x1613 false) (= 36 x1127)) (and (or (and (and (= (= x1063 x88) x867) (>= 3 x88) (= x375 (ite (= 3 x88) 1 0)) (>= 3 x1063) (= x1847 x89) (= x327 (x1541 64 x721 0)) (= x88 (x592 x327)) (= x1063 (x377 x721)) x867) (not x209)) (and (= x375 (ite x209 1 0)) x209)) (and (<= x332 3) (>= 127 x556) x995 (= false x1459) (= (x1541 64 x721 0) x655) (<= 1 x1048) (= x721 x1393) (= (= x332 x388) x995) (= x1677 false) (= x388 (x592 x655)) (<= x556 127) (= (x377 x721) x332) (= 816537496 x1683) (= x1048 (x869 x1405)) (= x721 x1847) (>= 3 x388) (= (= x388 2) x209) (= x1847 x1891)))) (and (= x360 x334) (= x1492 x765) (= (* x252 10000000000) x322) (= x394 x1492) (= x1370 (x1071 x1343 x334)) (>= x1370 0) x1382 (= x1343 x729) x755 (= (= x334 x765) x755) (= x1343 (+ x1868 x1775)) (= x1868 x322) (= x1405 x350) (= x1382 (= x394 x334)) (<= x1370 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x62)))
(assert (not (x898 (x1541 64 x932 0))))
(assert (= (and x1116 x922) x745))
(assert (x1517 x692 x1553 x1668 x638))
(assert (x1310 x18 (- x1825 x1668)))
(assert (= (x1532 (x1541 64 x721 0)) 64))
(assert (x1139 x743))
(assert (x1139 x588))
(assert (x74 x1824))
(assert (=> (<= x1425 10000) (= (x651 x1425) 0)))
(assert (x898 340282366920938463463374607431768211455))
(assert (x97 10000000000 x1074))
(assert (x1139 x1201))
(assert (= x1855 x1364))
(assert (x599 x638 x1668 x1553 x692))
(assert (< 10000 (x1541 64 x912 0)))
(assert (x1139 x406))
(assert (x1139 x1878))
(assert (x1139 x1362))
(assert (x898 816537496))
(assert (x1139 x676))
(assert (x1517 x692 x1553 x638 x1668))
(assert (x1139 x1842))
(assert (x1139 x343))
(assert (not (x898 (x1541 64 x879 0))))
(assert (x1454 (x79 x747 10000000000)))
(assert (= (=> (and (and (and (= (+ x566 x1614) x1608) (= x1614 (* (x79 x1346 10000000000) 10000000000)) (= x1027 10000000000) (= x1302 10000000000) (= false x83)) (and (= x9 (* 10000000000 (x79 x747 10000000000))) (= x604 10000000000) (= x780 (- x1608 x9)))) (and (= x391 x1810) (= x391 x1858) (= x1521 (x1004 x1411)) (= (x1232 x1521) x566) (<= 0 x1609) (<= x1609 1461501637330902918203684832716283019655932542975) (= (x1004 x1411) x1609) (>= 1461501637330902918203684832716283019655932542975 x1521) (= x1366 10000000000) x1320 (>= x1521 0) (= x1688 false))) x261) x1005))
(assert (x1139 x391))
(assert (x1139 x1753))
(assert (x1517 x692 x1553 x1489 x1445))
(assert (x1139 x886))
(assert (< 10000 (x1541 64 x288 0)))
(assert (x1139 x106))
(assert (x1454 (- x18 x1668)))
(assert (x1139 x1405))
(assert (x1139 x549))
(assert (x1139 x702))
(assert (=> (>= 10000 x478) (= (x651 x478) 0)))
(assert (x1454 (- x1553 x1668)))
(assert (x1139 x1560))
(assert (x74 1000000000000000000))
(assert (x1139 x1115))
(assert (> (x1541 64 x460 x1710) 10000))
(assert (x1139 x974))
(assert (= x1039 (=> (= (ite x112 x883 x639) x701) x701)))
(assert (not x1523))
(assert (x1139 x252))
(assert (x1139 x1553))
(assert (= (x651 (x1541 64 x912 0)) (x1541 64 x912 0)))
(assert (= x1496 (and (not x1602) x456)))
(assert (x1139 x1871))
(assert (= x330 (or x857 x1639)))
(assert (x1139 x1290))
(assert (=> (>= 10000 x504) (= (x651 x504) 0)))
(assert (x1139 x1489))
(assert (x1139 x1836))
(assert (x1454 (- x638 x1445)))
(assert (x1517 x1668 x638 x1445 x1489))
(assert (x1517 x692 x1553 x1445 x1489))
(assert (= (or x30 x298) x1808))
(assert (x1139 x1434))
(assert (x1454 (- x1668 x692)))
(assert (= (x422 (x1541 64 x879 0)) 0))
(assert (x1310 x638 (- x1668 x1489)))
(assert (= (x1541 64 x608 0) (x651 (x1541 64 x608 0))))
(assert (x1139 x673))
(assert (not (x898 (x1541 64 x1560 0))))
(assert (x1139 x91))
(assert (= (and x1040 x250) x1774))
(assert (=> (<= x1560 10000) (= (x651 x1560) 0)))
(assert (x1139 x388))
(assert (= (x1834 (x1541 64 x1350 0)) x1350))
(assert (x1454 1000000000000000000))
(assert (x1139 x58))
(assert (x1139 x912))
(assert (> (x1541 64 x1806 0) 10000))
(assert (x1517 x1489 x1445 x1668 x638))
(assert (x1454 (- x1668 x1553)))
(assert (x1139 x88))
(assert (x1303 x224))
(assert (= x860 (or x1892 (and (not x66) x1527))))
(assert (x1139 x1889))
(assert (x898 20282409603651670423947251286015))
(assert (x898 41436628393252172163539528543619094058851530980360706587524068930525597794304))
(assert (x1139 x1747))
(assert (= x1560 (x1834 (x1541 64 x1560 0))))
(assert (=> (<= x513 10000) (= 0 (x651 x513))))
(assert (x1139 x260))
(assert (x1202 (x1407 x1806)))
(assert (x1139 x832))
(assert (= x1212 (or x276 x173)))
(assert (= x456 (or x1395 x1561)))
(assert (x1454 x924))
(assert (x684 x438 4))
(assert (= (=> (and (and (and (= x22 0) (= x145 36) (= (or x1154 x1660) x1637) (= x364 x539) (= x1515 false) (= x364 x28) (= x344 true) (>= 3 x930) (<= x579 47223664828696452136950000000000) (>= 3 x1072) (= true x649) (= x567 x697) (= false x1285) (= x1020 false) (= (ite x1637 0 x547) x73) (>= x547 0) (<= 0 x1214) (= x1214 x1495) (= (x1873 x325) x930) (= 0 x1512) (= x1214 (x1071 x161 x1447)) (>= x579 0) (>= 20282409603651670423947251286015 x547) (= x1681 x785) (<= x1214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1681 x640) (= (x256 x640) x1757) (= x1742 false) (= x364 x72) x840 (= (= x567 x1495) x840) (= x1072 (x1873 x785)) (= x1386 0) (= x1893 false) (= (= x930 3) x1154) (= x966 x1681) (= x1492 x1447) (= x579 (x256 x72)) (= (+ x1757 x73) x161) (= x1681 x325) (= x547 (x1407 x966)) (= (= x1072 2) x1660)) (and (and (and (= 10000000000 x442) (= x555 (x814 x7)) (= x969 x1681) (<= 0 x1058) (= x1664 x1681) (>= 47223664828696452136950000000000 x1058) (= x850 x1821) x817 (= x817 (= x1316 x373)) (= x468 true) (= 0 x821) (= x94 x1821) (= x1871 (x869 x1405)) (= false x1815) (= x1446 false) (>= 127 x1767) (= false x44) (= false x597) (= (x256 x1664) x1058) (= 3564106003 x37) (<= x1767 127) (= false x1010) (= (x1541 64 x1821 0) x7) (>= x1871 1) (= (* 10000000000 x555) x1316) (= false x1399) (= true x700) (= false x1075) (= x1748 36) (= x1681 x1487) (<= x555 4722366482869645213695)) (and (and (= x1411 x962) (= x189 false) (= false x858) (= (x814 x1516) x307) (= (x258 36) x1411) (= x1397 x1355) (<= x1384 1461501637330902918203684832716283019655932542975) (= (x869 x1405) x652) (= (= x1058 x1509) x581) (= (x258 68) x1397) (= false x1038) (= false x140) (>= x1411 1) (= (x258 4) x1384) x581 (= x100 3564106003) (= x162 10000000000) (= (* x307 10000000000) x1509) (= x844 x370) (= x1487 x1239) (= (x258 0) x844) (= x1486 x1384) (>= 127 x49) (= x911 false) (>= 1461501637330902918203684832716283019655932542975 x1411) (= (x1541 64 x1239 0) x1516) (<= 1 x652) (>= x709 100) (<= x49 127) (= x971 false) (>= 4722366482869645213695 x307) (= x1238 false) (<= x709 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1239 x1250) (= x602 true) (<= 1 x1384)) (and (and (= x1603 x1176) (and (or x1623 (and (not x1623) (and (= x52 (x1617 (- x1851 x1397))) (>= 1461501637330902918203684832716283019655932542975 x460) (= (x1541 64 x1384 1) x198) (<= 1 x460) (not (< x1851 x1397)) (= (x1541 64 x460 x198) x708)))) (and (= x1760 (x1541 64 x460 x1710)) (= 599290589 x1248) (= (x1541 64 x1384 1) x1710) (<= x418 127) (= x405 (x1835 x1405)) (<= x418 127) (= x384 x504) (= x946 x1486) (= x1827 x1355) (= x391 x962) (= x1851 (x1610 x1760)) (= x405 x848) (>= x624 1) (= (x1060 x504) x254) (= x1169 false) (= (x869 x1405) x624) (= x1092 false) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1851) x1623)))) (= x460 x384)))) (and (= x1172 (x1541 64 x478 0)) (= x478 x507) (= x739 10000000000) (= x248 true) (= 36 x1007) (>= 4722366482869645213695 x1638) (= x550 x768) (= false x636) (= false x603) (= x478 x28) (= false x610) (= (* 10000000000 x1638) x357) (= x918 false) (<= 0 x373) (= x399 (x869 x1405)) (= x1722 0) (<= x341 127) (= x774 false) (= x14 (= x579 x357)) (= true x1016) (= x373 (x256 x404)) (= 3564106003 x1635) (= false x882) (= false x476) (>= 127 x341) (>= 47223664828696452136950000000000 x373) x14 (= (x814 x1172) x1638) (>= x399 1) (= x404 x550) (= x550 x850)))) (and (= x1424 x921) (= x1695 x1405) (= x285 x334) (= x1492 x1246) (= x752 x1492) (= (= x1246 x334) x338) x338 (= x262 x435) (= x921 (+ x1123 x435)) (= x1426 (= x334 x752)) (>= x697 0) (= (x1071 x921 x334) x697) (= (* 10000000000 x361) x262) (<= x697 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1426)) x284) x1088))
(assert (x1517 x1445 x1489 x18 x1825))
(assert (x1139 x1705))
(assert (x1454 (- x1489 x638)))
(assert (x97 10000000000 x361))
(assert (x1139 x1252))
(assert (x1139 x567))
(assert (x1139 x978))
(assert (x1139 x1416))
(assert (x1517 x1553 x692 x638 x1668))
(assert (= x47 (=> (and (= (x1541 64 x1384 62) x26) (<= x383 1099511627775) (>= 105312291668557186697918027683670432318895095400549111254310977535 x1671) (= x1671 (x646 x26)) (= (x287 x26) x383) (= x1594 (= 0 x383))) (and (=> (and (and (= (x1617 (- x1489 x1397)) x901) (= x934 (> x901 0))) (not x1594)) (and (=> (and (= (x1541 64 x1384 62) x1205) (not x934)) x194) (=> (and x934 (and (and (>= 20282409603651670423947251286015 x553) (= (x1617 (- x1489 x1397)) x553) (= x66 (> x1671 x553)) (not (> x553 x1489)) (or (>= 20282409603651670423947251286015 x1397) (>= x1397 115792089237316195423570985008687907853269984645358154435805913583965878353921))) (or (not x66) (and (and (= (x1541 64 x1384 62) x236) (= (x1617 (- x1489 x1397)) x1611) (not (< x1489 x1611)) (>= 20282409603651670423947251286015 x1611)) x66)))) x1682))) (=> x1594 x1155)))))
(assert (x1879 x650))
(assert (x1517 x1445 x1489 x638 x1668))
(assert (not (x898 (x1541 64 x460 x1710))))
(assert (x1139 x186))
(assert (x599 x1825 x18 x1553 x692))
(assert (x1517 x1553 x692 x1825 x18))
(assert (x1139 x791))
(assert (= (x651 (+ 1 x1361)) (x651 x1361)))
(assert (x1139 x438))
(assert (= x1547 (x1834 (x1541 64 x1547 0))))
(assert (= 64 (x1532 (x1541 64 x1239 0))))
(assert (x1139 x1635))
(assert (x1139 x1015))
(assert (x1139 x1135))
(assert (= (x1532 (x1541 64 x288 0)) 64))
(assert (x1139 x1026))
(assert (x414 x714))
(assert (x1139 x1806))
(assert (x898 4294967295))
(assert (not (x898 (x1541 64 x1383 72))))
(assert (= x475 (and x400 (not x1463))))
(assert (x1139 x1784))
(assert (x788 x224))
(assert (= (x651 (x1541 64 x1806 0)) (x1541 64 x1806 0)))
(assert (x1139 x1406))
(assert (x1517 x692 x1553 x18 x1825))
(assert (x1454 x638))
(assert (= (x651 1099511627775) 0))
(assert (= (or x349 x1046) x1562))
(assert (x677 x747 10000000000))
(assert (x1139 x68))
(assert (x1139 x844))
(assert (x1454 x692))
(assert (= x923 (=> (and (= (= x1723 x1162) x1410) (or (not x1410) x1410)) x13)))
(assert (= (x1541 64 x1405 60) (x651 (x1541 64 x1405 60))))
(assert (x1139 x1102))
(assert (x1454 (- x1668 x1825)))
(assert (x1139 x778))
(assert (x1310 x692 (- x1553 x18)))
(assert (x1310 x1445 (- x1489 x1825)))
(assert (x1139 x435))
(assert (x1139 x1692))
(assert (= 0 (x651 105312291668557186697918027683670432318895095400549111254310977535)))
(assert (= x524 (and x1749 (not x931))))
(assert (= x261 (=> (and (= x1167 true) (= x1715 (= x118 2)) (= x1728 (or x1715 x772)) (= x118 (x1873 x1411)) (= x877 false) (<= x118 3) (= x391 x1272) (= x1237 0) (= (x1873 x1411) x1032) (= x391 x182) (<= x1032 3) (= x772 (= x1032 3))) (and (=> (and (and (not x1728) (= x316 true)) (not x1728)) x1311) (=> x1728 x1807)))))
(assert (x1139 x253))
(assert (= (x1834 (x1541 64 x947 0)) x947))
(assert (x1139 x827))
(assert (x898 115792089237316195423570985008687907853269984645358154435805913583965878353921))
(assert (x898 3002343453))
(assert (< 10000 (x1541 64 x1384 1)))
(assert (x1879 x1631))
(assert (< (x1541 64 x1886 72) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x479))
(assert (= x300 (and x797 x508)))
(assert (= (and x209 x984) x381))
(assert (not (x898 (x1541 64 x1806 0))))
(assert (= x1802 (or x295 x1778)))
(assert (= 64 (x1532 (x1541 64 x1405 60))))
(assert (x74 x1634))
(assert (x1139 x1833))
(assert (x1202 (x1407 x912)))
(assert (= x1523 (=> (and (and (and (or (and (= 0 x1428) (not x1588)) (and x1588 (and (<= 0 x628) (= x1442 x1428) (= (= x628 x1442) x915) (= x1442 (x1429 x1231)) (<= x1442 20282409603651670423947251286015) (= x81 x1024) (= x628 (x1407 x879)) (= (x1541 64 x879 0) x1231) x915 (<= x628 20282409603651670423947251286015)))) (and (= x436 (x60 2 x1413)) (<= x1115 127) (= 3002343453 x306) (= x907 x81) (<= x1115 127) (= (x1407 x879) x160) (= 352 x569) (>= x160 0) (= x1645 false) (= x1318 1) (= x1083 (= x1012 x160)) (>= 20282409603651670423947251286015 x1012) (= x560 x879) x1083 (<= x160 20282409603651670423947251286015) (= (x1541 64 x879 0) x541) (= x98 1) (>= 3 x1413) (<= x1074 4722366482869645213695) (<= x1543 4722366482869645213695) (= x1579 (= x1413 x1396)) (= (= 0 x436) x1588) (<= x1396 3) (= x1543 (x727 x541)) x1579 (= x879 x81) (>= x184 1) (= x1012 (x1429 x541)) (= x81 x19) (= x1396 (x1873 x879)) (= (x869 x1405) x184) (= false x746) (= x1413 (x1070 x541)) (= x1074 (x814 x541)))) (and (= false x201) (<= x347 20282409603651670423947251286015) (>= 127 x107) (= x1681 x560) x582 (= (x1541 64 x912 0) x831) (= false x1820) (= x1241 (x1407 x912)) (= false x1042) (>= 20282409603651670423947251286015 x1241) (= x776 false) (>= 127 x107) (= false x217) (<= 0 x1241) (= x912 x1252) (= x1478 false) (= (x869 x1405) x1797) (= x297 x912) (= x347 x1718) (= x873 68) (= x1252 x1265) (= x634 1889567281) (= x347 (x1429 x831)) (= x582 (= x1241 x347)) (>= x1797 1))) (and (= x431 true) (>= 1461501637330902918203684832716283019655932542975 x1681) (<= x1297 1461501637330902918203684832716283019655932542975) (= x550 x1209) (= (> (x869 x1425) 0) x15) x56 (= x1501 x1681) (= true x70) (= x1681 x103) (= x64 false) (= x1441 false) (<= 1 x1405) (= x235 true) (not x884) (>= 1461501637330902918203684832716283019655932542975 x384) (<= 1 x364) (= x1099 x364) (<= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x218 x1425)) x15 (>= 1461501637330902918203684832716283019655932542975 x550) (not x1818) (>= 1461501637330902918203684832716283019655932542975 x1405) (<= 0 x1603) (<= 0 x384) (>= 1461501637330902918203684832716283019655932542975 x1591) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x39) (not (= x1425 x1405)) (<= 1 x218) (= true x1240) (= x440 true) (<= x1603 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x690 599290589) (= (= x1299 x826) x908) (= x1166 true) (= x1843 false) (= x1687 false) (>= x409 0) (>= x550 1) (= x884 (= x1501 x1099)) (>= x1681 1) (<= 0 x620) (<= 0 x1691) (= x99 false) (<= x218 1461501637330902918203684832716283019655932542975) (= x540 true) (not (= x218 x1405)) (not x908) (= x310 x1405) (= x1525 x364) (= 0 x257) (<= x1147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 3 x1049) (<= x364 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x620) (= 599290589 x1057) (= x1299 x550) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1198) (>= x682 0) (>= x1198 0) (= x1654 0) (= false x386) (= x509 false) (= 3 x872) (<= x1281 1461501637330902918203684832716283019655932542975) (= x612 36) (>= x39 0) (= x550 x1845) (= x826 x364) (<= x1425 1461501637330902918203684832716283019655932542975) (<= 0 x1147) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x682) (= false x861) (= x1552 false) (<= 0 x1281) (= x56 (< 0 (x869 x218))) (<= 0 x1297) (= x1422 false) (= x134 false) x379 (= x1818 (= x1845 x983)) (= 0 x1519) (= x1681 x297) (>= x1425 1) (<= x409 4294967295) (= x983 x1681) (<= x1381 1461501637330902918203684832716283019655932542975) (= x1390 true) (<= 0 x1367) (= x1436 0) (>= 1461501637330902918203684832716283019655932542975 x1691) (= x379 (> (x869 x1405) 0)))) x233)))
(assert (x788 x714))
(assert (= x819 (or x1758 x1045)))
(assert (= (x422 (x1541 64 x1383 72)) 72))
(assert (> (x1541 64 x104 0) 10000))
(assert (x1139 x742))
(assert (= (x1834 (x1541 64 x478 0)) x478))
(assert (x1202 (x799 x1560)))
(assert (x1139 x315))
(assert (x1139 x100))
(assert (x1139 x216))
(assert (x684 x224 4))
(assert (x1139 x558))
(assert (x1139 x395))
(assert (x1139 x1350))
(assert (x1139 x1208))
(assert (x1139 x986))
(assert (x1139 x533))
(assert (x677 x396 10000000000))
(assert (=> (>= 10000 x1215) (= (x651 x1215) 0)))
(assert (< (x1541 64 x1383 72) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x398))
(assert (x1310 x692 (- x1553 x1445)))
(assert (x1139 x52))
(assert (x684 x1176 340282366920938463463374607431768211456))
(assert (= (or x121 x1173) x24))
(assert (= (and x1562 x981) x1173))
(assert (x1139 x1827))
(assert (< (x1541 64 x721 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x651 41436628393252172163539528543619094058851530980360706587524068930525597794304) 0))
(assert (=> (>= 10000 x947) (= (x651 x947) 0)))
(assert (= x1537 (or x1131 x524)))
(assert (x1139 x375))
(assert (x1310 x1489 (- x1445 x1825)))
(assert (x1139 x889))
(assert (x1139 x1780))
(assert (x97 10000000000 (x79 x1824 10000000000)))
(assert (x1139 x132))
(assert (x1454 (x79 x1824 10000000000)))
(assert (= x1886 (x1834 (x1541 64 x1886 72))))
(assert (x1139 x296))
(assert (= 64 (x1532 (x1541 64 x1384 1))))
(assert (x1139 x196))
(assert (x1139 x107))
(assert (x1139 x1278))
(assert (= (x651 (x1541 64 x693 0)) (x1541 64 x693 0)))
(assert (= (x1532 (x1541 64 x1350 0)) 64))
(assert (x1139 x903))
(assert (x1139 x1543))
(assert (= 72 (x422 (x1541 64 x1117 72))))
(assert (x1139 x1486))
(assert (x1879 x683))
(assert (= 0 (x422 (x1541 64 x1411 0))))
(assert (x1139 x538))
(assert (x1310 x1445 (- x1489 x1668)))
(assert (x74 x387))
(assert (< (x1541 64 x460 x1710) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x651 (x1541 64 x1481 0)) (x1541 64 x1481 0)))
(assert (x1879 x429))
(assert (x1139 x1848))
(assert (< 10000 (x1541 64 x1384 x223)))
(assert (x1454 x1191))
(assert (x1139 x569))
(assert (= x1384 (x1834 (x1541 64 x1384 0))))
(assert (x1139 x553))
(assert (x1310 x1553 (- x692 x1445)))
(assert (x97 1000000000000000000 x1453))
(assert (=> (<= x1821 10000) (= 0 (x651 x1821))))
(assert (x1139 x1857))
(assert (x1310 x1825 (- x18 x638)))
(assert (x1139 x27))
(assert (= x1606 (=> (= x596 (ite x1602 x1372 x1308)) (and x596 (=> (or (and x112 (and (= 1 x119) (= (= x1711 x1575) x1505) (= (= x1846 x720) x4) (= x613 x277) (= (or x1505 x1852) x1550) (= x1069 (+ x929 1)) (= (= x1069 x1052) x1852) (= x704 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x881) (<= 0 x881) (= x131 x1492) (= x1484 x961) (= x961 x929) (= x1846 x961) (= (+ x881 x181) x1484) (= x365 x1129) (= x1711 x613) (= x1628 x883) (= x1545 (+ x933 x365)) (= x720 (+ x277 1)) (= x881 (x1071 x1545 x131)) (= x1628 (or x4 x1550)) (= x613 x1037) (= x639 x1401) (= x613 x1052) (= x1575 x961) (= x933 x1251))) (and (and (= x883 x491) (= true x243) (= x639 x243)) (not x112))) x1039)))))
(assert (x1202 (x1407 x1384)))
(assert (x1139 x1655))
(assert (x1139 x1657))
(assert (x1139 x1748))
(assert (x1139 x845))
(assert (= (and (not x1180) x1841) x146))
(assert (< 10000 (x1541 64 x1821 0)))
(assert (= 0 (x651 10000000000)))
(assert (x1139 x383))
(assert (x1139 x1091))
(assert (= x510 (and x54 x1588)))
(assert (x1139 x434))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1405 60)))
(assert (x1879 x1171))
(assert (= (x1532 (x1541 64 x1126 0)) 64))
(assert (x74 10000000000))
(assert (= (x1834 (x1541 64 x1411 0)) x1411))
(assert (x1139 x1648))
(assert (x1139 x1638))
(assert (x1454 (- x1553 x638)))
(assert (= (x422 (x1541 64 x932 0)) 0))
(assert (x1139 x1585))
(assert (x1517 x1489 x1445 x1553 x692))
(assert (x599 x1825 x18 x638 x1668))
(assert (x1139 x1850))
(assert (x1454 (- x18 x1445)))
(assert (= (x651 (x1541 64 x1384 x223)) (x1541 64 x1384 x223)))
(assert (x1139 x1813))
(assert (x1310 x1553 (- x692 x1825)))
(assert (x414 x224))
(assert (x1139 x408))
(assert (x1139 x711))
(assert (x1517 x1668 x638 x692 x1553))
(assert (x1139 x1196))
(assert (= x3 (or x127 x352)))
(assert (x1139 x418))
(assert (=> (>= 10000 x1481) (= (x651 x1481) 0)))
(assert (x1139 x779))
(assert (= 64 (x1532 (x1541 64 x1384 62))))
(assert (x1139 x348))
(assert (= x1710 (x422 (x1541 64 x460 x1710))))
(assert (= (=> (and (= x1387 (= x676 x1697)) (or (not x1387) x1387)) x108) x1474))
(assert (x1139 x692))
(assert x23)
(assert (= x585 (=> (= x1180 (= (ite (< 0 x321) x321 (ite (not (< x1605 x457)) 1 0)) 0)) (and (=> (and (not x1180) (= x1697 x676)) x1474) (=> (and x1180 (and (= x716 (> x1176 x457)) (or (and (= x1176 x1255) (not x716)) (and (= x457 x1255) x716)))) x1720)))))
(assert (= x400 (and x1562 (not x981))))
(assert (=> (<= x218 10000) (= 0 (x651 x218))))
(assert (= 0 (x651 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x631 x1176))
(assert (x1139 x334))
(assert (x1310 x18 (- x1825 x1445)))
(assert (x1139 x1432))
(assert (x97 10000000000 x260))
(assert (not (x898 (x1541 64 x1239 0))))
(assert (x1139 x634))
(assert (= x1561 (and x698 x976)))
(assert (x1139 x921))
(assert (x1303 x462))
(assert (= (x422 (x1541 64 x721 0)) 0))
(assert (= x1064 (=> (and (and (and (or (and (and (>= x939 0) (= x1699 (x1429 x1622)) (= (= x939 x1699) x1837) (= x939 (x1407 x288)) x1837 (<= x939 20282409603651670423947251286015) (= x1699 x1123) (= (x1541 64 x288 0) x1622) (= x1612 x1596) (>= 20282409603651670423947251286015 x1699)) x797) (and (= 0 x1123) (not x797))) (and (= x578 (= x533 x438)) (= x1612 x1315) (<= x1050 20282409603651670423947251286015) (= x1050 (x1429 x1569)) (= 352 x138) (= x311 false) (= (x1541 64 x288 0) x1569) (= (x727 x1569) x534) (= (x60 2 x438) x1700) (<= x163 127) (>= x1438 0) (= x474 1) (= false x1625) (= x1451 x1612) (<= x534 4722366482869645213695) (= x576 3002343453) (= x1438 (x1407 x288)) (= (= x1050 x1438) x465) (>= 127 x163) (= x1612 x288) (= (x869 x1405) x791) (>= x791 1) (= x212 1) (= (x814 x1569) x361) (= (= 0 x1700) x797) (<= x533 3) (= x438 (x1070 x1569)) (>= 3 x438) x578 x465 (>= 20282409603651670423947251286015 x1438) (= x1659 x288) (= (x1873 x288) x533) (>= 4722366482869645213695 x361))) (and (= x1455 x550) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90) (= x432 (x1407 x1014)) (= x372 x1094) (= x90 (x1071 x1556 x611)) (= x1492 x611) (= (+ x323 x1339) x1556) (= true x1741) (= 0 x979) (<= 0 x432) (= false x544) (= false x830) (>= 20282409603651670423947251286015 x432) (= 0 x1041) (= x502 (= 3 x1196)) (= true x668) (= x1659 x1681) (= x1196 (x1873 x308)) (= x550 x1014) (<= x1585 3) (= (= x863 x1094) x1724) (= x1681 x1021) (= (ite x1160 0 x432) x323) (= false x1777) (= (x256 x1455) x1339) (= 0 x878) (= (= 2 x1585) x234) (= x1233 false) (= false x1751) (= x1259 68) (= x1585 (x1873 x1689)) (<= x1196 3) (= x308 x550) (= x1160 (or x502 x234)) (= x550 x1689) (= x90 x863) x1724 (>= x90 0))) (and (= x1770 (= x75 x334)) (= x36 x1492) x32 (= x46 x584) (= (* 10000000000 x263) x584) (<= 0 x372) (= (+ x82 x46) x989) (= x1405 x1188) (= x32 (= x36 x334)) x1770 (= x989 x340) (= x1492 x75) (<= x372 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x372 (x1071 x989 x334)) (= x334 x448))) x1088)))
(assert (x1139 x1520))
(assert (= x54 true))
(assert (x1139 x1227))
(assert (= (x422 (x1541 64 x104 0)) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x288 0)))
(assert (x1139 x6))
(assert (x1139 x170))
(assert (x1139 x853))
(assert (x1139 x269))
(assert (x1139 x1096))
(assert (= (and x401 x112) x1338))
(assert (= x1384 (x1834 (x1541 64 x1384 61))))
(assert (x1139 x342))
(assert (< (x1541 64 x693 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1879 x828))
(assert (= x1798 (=> (and (= (x1574 x1632) x747) (= (or x1360 x480) x1320) (= (x1541 64 x1411 0) x1632) (= false x1279) (= true x1488) (= x997 x1346) (= x1360 (= 3 x1146)) (<= x1146 3) (= (x1873 x1411) x1146) (<= x790 3) (= 0 x938) (>= 20282409603651670423947251286015 x747) (= x391 x1744) (= x391 x1497) (= (+ x1397 x766) x1346) (= x391 x672) (= x480 (= 1 x790)) (<= x1346 20282409603651670423947251286015) (= x790 (x1873 x1411))) (and (=> x1320 x1005) (=> (and (and (not x1320) (= x535 true)) (not x1320)) x261)))))
(assert (x1139 x900))
(assert (= x155 (=> (and (and (and (or (and (and (= x770 x82) (<= x368 20282409603651670423947251286015) (= x630 x320) (<= 0 x368) (= (x1541 64 x513 0) x1508) x363 (>= 20282409603651670423947251286015 x770) (= (x1407 x513) x368) (= (= x368 x770) x363) (= x770 (x1429 x1508))) x1801) (and (= x82 0) (not x1801))) (and (>= x782 0) (= x320 x1817) (= x513 x1268) (<= x1026 4722366482869645213695) (= x784 (= x743 x782)) (<= x782 20282409603651670423947251286015) (>= x221 1) (= (x1407 x513) x782) (<= x862 127) x1790 (>= 4722366482869645213695 x263) (>= 127 x862) (= x513 x320) (= 352 x333) (= false x1369) (= (x1873 x513) x823) (= (= x714 x823) x1790) (= (= 0 x1000) x1801) (>= 3 x823) (= x221 (x869 x1405)) x784 (= 3002343453 x1690) (= (x814 x191) x263) (<= x743 20282409603651670423947251286015) (= x191 (x1541 64 x513 0)) (= (x1070 x191) x714) (= false x1732) (= x743 (x1429 x191)) (= x886 1) (<= x714 3) (= (x60 2 x714) x1000) (= x1124 1) (= x320 x1804) (= (x727 x191) x1026))) (and (>= x472 0) (= (= x147 2) x1336) (= 0 x950) (>= 3 x147) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1028) (= x1186 (= 3 x956)) (= (x256 x1729) x471) (= x550 x303) (= x1737 68) (= (ite x525 0 x472) x594) (= x839 false) (= x328 x1028) (= x1028 (x1071 x1218 x376)) (= x1589 x364) (= false x914) (= 0 x319) (= x1729 x364) (= x147 (x1873 x1033)) (>= 20282409603651670423947251286015 x472) (= x525 (or x1186 x1336)) (= true x552) (= false x753) (= x1218 (+ x471 x594)) (= x1345 x364) (= x1033 x364) (<= x956 3) (= false x1418) x469 (= x550 x1268) (= x712 true) (= 0 x1159) (>= x1028 0) (= x1199 false) (= x1492 x376) (= x956 (x1873 x1589)) (= x1731 x1264) (= x469 (= x1264 x328)) (= (x1407 x1345) x472))) (and x875 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1731) (= (= x1184 x334) x875) (= x711 x1107) x219 (= (+ x711 x804) x1747) (= x1405 x153) (= (x1071 x1747 x334) x1731) (= x1359 x1747) (= x1184 x1492) (= x1107 (* 10000000000 x407)) (= x674 x334) (= x219 (= x334 x812)) (= x812 x1492) (<= 0 x1731))) x1064)))
(assert (= (x1541 64 x104 0) (x651 (x1541 64 x104 0))))
(assert (x1310 x1668 (- x638 x692)))
(assert (x898 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x651 (x1541 64 x1144 0)) (x1541 64 x1144 0)))
(assert (x1139 x507))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1432 0)))
(assert (x1139 x506))
(assert (x1139 x1799))
(assert (x1139 x301))
(assert (x1517 x638 x1668 x1445 x1489))
(assert (x684 x1413 2))
(assert (x1139 x717))
(assert (x1139 x1825))
(assert (x1139 x1559))
(assert (= (or x1223 x1620) x1023))
(assert (x1310 x1668 (- x638 x1489)))
(assert (x1310 x1489 (- x1445 x1553)))
(assert (= 64 (x1532 (x1541 64 x879 0))))
(assert (x97 10000000000 x263))
(assert (x1139 x1146))
(assert (x1517 x692 x1553 x1825 x18))
(assert (= x656 (=> (= (= x1411 x1384) x1317) (and (=> (and (= x626 128) x1317) x1761) (=> (and (and (= (x1617 (- x1176 x1605)) x142) (= x1435 (x1541 64 x1411 0)) (>= 340282366920938463463374607431768211455 x1605) (= (+ x1361 1) x1351) (= (x1429 x1435) x1825) (= (x1568 x1361) x1605) (= (x1421 x1351) x676) (= (x1541 64 x1405 60) x1361) (= (x1541 64 x1411 x477) x286) (= x477 (+ 2 x1361)) x1108 (= 1 x85) (= (x1407 x1411) x695) (= x1262 (x1468 x286)) (= x1108 (= x695 x1825)) (>= x695 0) (>= 20282409603651670423947251286015 x1825) (= x635 x391) (= (< 0 x142) x346) (<= x695 20282409603651670423947251286015)) (not x1317)) (and (=> (and (= x1799 x676) (not x346)) x339) (=> (and x346 (and (or (and (= x321 x76) x1791) (and (= x321 (ite (= x1176 x1605) 1 0)) (not x1791))) (and (= (x1766 x1361) x638) (<= x638 340282366920938463463374607431768211455) (= x76 (ite (= x638 0) (ite (= x638 0) 1 0) (ite (= 0 x5) 1 0))) (= (> x76 0) x1791)))) x585)))))))
(assert (x1517 x1825 x18 x1489 x1445))
(assert (< (x1541 64 x1411 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1517 x1825 x18 x1553 x692))
(assert (< (x1541 64 x1126 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1139 x11))
(assert (x1879 x1780))
(assert (x1139 x457))
(assert (> (x1541 64 x1384 62) 10000))
(assert (< (x1541 64 x1215 72) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x460 (x1834 (x1541 64 x460 x1710))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x513 0)))
(assert (x1517 x1445 x1489 x1825 x18))
(assert (< (x1541 64 x1806 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x511 x937))
(assert (=> (<= x1411 10000) (= (x651 x1411) 0)))
(assert (x1139 x1840))
(assert (x898 57896044618658097711785492504343953926634992332820282019728))
(assert (x1454 x263))
(assert (x599 x692 x1553 x1825 x18))
(assert (= (and x3 x993) x205))
(assert (= 1 (x422 (x1541 64 x1384 1))))
(assert (x1139 x783))
(assert (x1139 x638))
(assert (x1139 x1717))
(assert (x1454 (- x692 x638)))
(assert (x1139 x353))
(assert (= x608 (x1834 (x1541 64 x608 0))))
(assert (x1139 x1293))
(assert (not (x898 (x1541 64 x1117 72))))
(assert (x684 x538 4))
(assert (x1202 (x1407 x966)))
(assert (x414 x462))
(assert (< 10000 (x1541 64 x1215 72)))
(assert (x414 2))
(assert (x1139 x859))
(assert (x1139 x163))
(assert (= (=> (and (= x123 (= x1333 x1100)) (= x1129 (ite x61 x101 x1031)) (= x1681 x1333) (= (and x123 x927) x976)) (and (=> x976 x1197) (=> (and (not x976) (and (= 0 x1321) (= x111 x117) (= x459 x1321))) x1378))) x1329))
(assert (x1139 x1234))
(assert (x1139 x403))
(assert (= 64 (x1532 (x1541 64 x478 0))))
(assert (x1139 x288))
(assert (x1454 (- x1445 x1825)))
(assert (x1454 (x79 x1 10000000000)))
(assert (x1454 (- x692 x1489)))
(assert (= (and (not x916) x1849) x1045))
(assert (x1139 x793))
(assert (= 0 (x651 2283911215)))
(assert (x1139 x1255))
(assert (x1310 x638 (- x1668 x1553)))
(assert (x1139 x1269))
(assert (x1454 10000000000))
(assert (x1517 x1668 x638 x1489 x1445))
(assert (= x757 (and x736 x1595)))
(assert (x1139 x1381))
(assert (x1454 (x79 x496 10000000000)))
(assert (x1139 x145))
(assert (= x490 (and x483 (not x1410))))
(assert (= x1778 (and x1320 x445)))
(assert (x97 10000000000 (x79 x1 10000000000)))
(assert (x1139 x1440))
(assert (= (x651 (x1541 64 x615 0)) (x1541 64 x615 0)))
(assert (= (x1532 (x1541 64 x1144 0)) 64))
(assert (x684 x714 2))
(assert (x1139 x347))
(assert (x1139 x1029))
(assert (x1139 x607))
(assert (x599 x1489 x1445 x1825 x18))
(assert (x1310 x18 (- x1825 x1553)))
(assert (= (x422 (x1541 64 x1806 0)) 0))
(assert (= x38 (and x1730 x345)))
(assert (x1139 x407))
(assert (x1310 x692 (- x1553 x1668)))
(assert (x1139 x1318))
(assert (x1139 x1671))
(assert (x1139 x461))
(assert (x1139 x293))
(assert (x74 x396))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1541 64 x1821 0)))
(assert (x1139 x1882))
(assert (x74 x1))
(assert (x1139 x147))
(assert (> (x1541 64 x1239 0) 10000))
(assert (x1454 x1453))
(assert (not (x898 (x1541 64 x1547 0))))
(assert (= x113 (and (not x1623) x1217)))
(assert (x1139 x212))
(assert (> (x1541 64 x932 0) 10000))
(assert (x1139 x1580))
(assert (x1517 x638 x1668 x1489 x1445))
(assert (x599 x1553 x692 x1489 x1445))
(assert (x97 10000000000 x252))
(assert (x1139 x1012))
(assert (= (and x24 x1716) x1663))
(assert (x599 x692 x1553 x1489 x1445))
(assert (x1139 x763))
(assert (x1139 x306))
(assert (x1139 x49))
(assert (x1310 x692 (- x1553 x1489)))
(assert (x97 10000000000 x407))
(assert (= x352 (and x1819 x1317)))
(assert (= x1215 (x1834 (x1541 64 x1215 72))))
(assert (= (=> (and (and (= x1714 false) (= x927 (not (= x156 0))) (= x568 false) (= x550 x519) (= x156 (ite (not (= 0 x1295)) 1 0)) (= x1780 36) (= x1765 false) (= false x1472)) (and (and (= false x1554) (= x1383 x519) (<= x832 127) (>= x1398 0) (= x1781 false) (>= x41 1) (= (= x1018 x6) x1323) x846 (= false x601) (= x1078 (= x1398 x1100)) (>= 1461501637330902918203684832716283019655932542975 x1100) (= x1018 x1681) (= (x1470 x1174) x1100) (= x41 (x869 x1405)) (= (= x1100 x558) x846) (= true x1531) (= x988 x1182) (= x1681 x1706) (= x1736 36) x312 (<= x1398 1461501637330902918203684832716283019655932542975) x1323 (= x1398 (x991 x1383)) (= x1271 false) (<= x832 127) (= false x356) (= x964 x1492) x1078 (= x1034 false) (= x1174 (x1541 64 x1383 72)) (= x1306 x894) (= x312 (= x801 x927)) (= true x1375) (= x1227 2283911215) (= x1100 x1500) (= x1567 true) x1306 (= x1182 x1383)) (and (and (or (and (= x488 0) (not x644)) (and (and (= x1653 (x799 x947)) x139 (= x1404 x786) (= x488 x275) (>= 20282409603651670423947251286015 x1653) (= (x1541 64 x947 0) x896) (= x139 (= x1653 x275)) (<= x275 20282409603651670423947251286015) (>= x1653 0) (= (x1409 x896) x275)) x644)) (and (>= 20282409603651670423947251286015 x1263) (= x1293 (x1863 x1224)) (= false x1862) (= x136 1) (= x1224 (x1541 64 x947 0)) (= false x305) (<= x1655 3) (= x1404 x947) (<= x1293 4722366482869645213695) (= (x377 x947) x1784) (= x1655 (x592 x1224)) x454 (>= 3 x1784) (= (x589 x1224) x924) (>= x343 1) (= x1559 352) (<= x1051 127) (= (= x1856 x1263) x1607) (= x644 (= 0 x1327)) (>= 127 x1051) (= x996 x1404) x1607 (<= 0 x1263) (= x947 x897) (<= x1856 20282409603651670423947251286015) (= (x60 2 x1655) x1327) (= (x869 x1405) x343) (<= x924 4722366482869645213695) (= x1856 (x1409 x1224)) (= x454 (= x1784 x1655)) (= x653 1) (= x577 x1404) (= (x799 x947) x1263) (= 3002343453 x315))) (and (<= x1059 20282409603651670423947251286015) (<= x1085 127) (>= 20282409603651670423947251286015 x69) (= x625 false) (= (x1541 64 x1481 0) x382) (= x1592 x149) (>= x1059 0) x164 (= x1681 x897) (= x1061 false) (= (x799 x1481) x1059) (= x149 x1481) (= x69 x1540) (= (= x1059 x69) x164) (= x69 (x1409 x382)) (= false x148) (= x1273 false) (= false x1597) (= x633 68) (= x1558 false) (= x1481 x1706) (>= x1249 1) (= x427 1889567281) (>= 127 x1085) (= x1249 (x869 x1405)))))) x1158) x1211))
(assert (x1139 x555))
(assert (x788 x1176))
(assert (x1202 (x1407 x1411)))
(assert (< 10000 (x1541 64 x478 0)))
(assert (x1139 x1396))
(assert (=> (<= x104 10000) (= (x651 x104) 0)))
(assert (x1139 x1171))
(assert (not (x898 (x1541 64 x912 0))))
(assert (x599 x1668 x638 x1825 x18))
(assert (x97 10000000000 (x79 x1644 10000000000)))
(assert (x1139 x512))
(assert (x599 x1445 x1489 x1553 x692))
(assert (x1139 x1335))
(assert (= (and x1274 x1449) x1245))
(assert (x74 x805))
(assert (x1139 x138))
(assert (x1517 x1553 x692 x1668 x638))
(assert (= 0 (x651 4294967295)))
(assert (x1454 (- x1668 x1445)))
(assert (= x430 (and x1801 x1537)))
(assert (x1517 x18 x1825 x638 x1668))
(assert (=> (<= x1547 10000) (= 0 (x651 x1547))))
(assert (x1139 x1072))
(assert (= x1117 (x1834 (x1541 64 x1117 72))))
(assert (= x619 (and x1340 (not x580))))
(assert (x1139 x149))
(assert (= (x1834 (x1541 64 x693 0)) x693))
(assert (x1139 x362))
(assert (x1517 x1668 x638 x1825 x18))
(assert (=> (<= x608 10000) (= (x651 x608) 0)))
(assert (x1139 x945))
(assert (= (x1541 64 x947 0) (x651 (x1541 64 x947 0))))
(assert (x1310 x1668 (- x638 x1553)))
(assert (= x294 (and x250 (not x1040))))
(assert (= (=> (= (= x203 x537) x973) (and (=> (and (and (or (and (and (not (< x203 x1445)) (= (x1617 (- x203 x537)) x1445) (<= x425 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x425 (x1503 x1489 x1445)) (< (x1503 x1489 x1445) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x425) (= x1536 x1373) (= (x79 x425 1000000000000000000) x1536)) (not x195)) (and x195 (= x1373 0))) (= (= x1489 0) x195)) (not x973)) x482) (=> (and (= 0 x1234) x973) x1869))) x175))
(assert (= (or x510 x665) x1116))
(assert (= (and x1120 (not x1791)) x351))
(assert (x1139 x167))
(assert (= (x1532 (x1541 64 x1384 61)) 64))
(assert (= (x422 (x1541 64 x1547 0)) 0))
(assert (x1139 x1175))
(assert (x1139 x1425))
(assert (= (x1541 64 x1384 61) (x651 (x1541 64 x1384 61))))
(assert (= (x1834 (x1541 64 x1821 0)) x1821))
(assert (x1879 x1043))
(assert (x599 x692 x1553 x638 x1668))
(check-sat)
(exit)
