(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x478 () Int)
(declare-fun x150 () Int)
(declare-fun x406 () Int)
(declare-fun x862 () Int)
(declare-fun x667 () Int)
(declare-fun x347 () Int)
(declare-fun x385 () Int)
(declare-fun x521 () Int)
(declare-fun x584 () Int)
(declare-fun x323 () Bool)
(declare-fun x764 () Int)
(declare-fun x1208 () Int)
(declare-fun x297 () Int)
(declare-fun x261 () Int)
(declare-fun x1397 () Int)
(declare-fun x105 () Int)
(declare-fun x1078 () Bool)
(declare-fun x1285 () Int)
(declare-fun x146 () Int)
(declare-fun x1166 () Int)
(declare-fun x1101 () Int)
(declare-fun x294 () Int)
(declare-fun x1122 () Int)
(declare-fun x7 () Int)
(declare-fun x955 (Int) Bool)
(declare-fun x1267 () Int)
(declare-fun x378 () Int)
(declare-fun x279 () Int)
(declare-fun x1519 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1117 () Int)
(declare-fun x767 () Int)
(declare-fun x106 () Bool)
(declare-fun x223 () Bool)
(declare-fun x360 () Int)
(declare-fun x520 () Int)
(declare-fun x108 () Int)
(declare-fun x28 () Int)
(declare-fun x1107 () Int)
(declare-fun x1289 (Int) Int)
(declare-fun x475 () Int)
(declare-fun x379 () Int)
(declare-fun x1393 () Int)
(declare-fun x16 () Int)
(declare-fun x618 (Int) Int)
(declare-fun x1524 (Int) Int)
(declare-fun x336 () Int)
(declare-fun x201 () Int)
(declare-fun x653 () Int)
(declare-fun x2 () Int)
(declare-fun x158 () Int)
(declare-fun x542 () Int)
(declare-fun x724 () Int)
(declare-fun x40 () Int)
(declare-fun x860 () Int)
(declare-fun x1541 () Bool)
(declare-fun x1063 () Int)
(declare-fun x506 () Bool)
(declare-fun x1570 () Int)
(declare-fun x45 () Int)
(declare-fun x1021 () Int)
(declare-fun x1083 () Int)
(declare-fun x972 () Int)
(declare-fun x1521 () Int)
(declare-fun x84 () Int)
(declare-fun x1474 () Bool)
(declare-fun x348 () Int)
(declare-fun x683 () Int)
(declare-fun x1178 () Int)
(declare-fun x830 () Int)
(declare-fun x819 () Int)
(declare-fun x36 () Int)
(declare-fun x1036 () Int)
(declare-fun x787 () Int)
(declare-fun x1375 () Int)
(declare-fun x846 () Int)
(declare-fun x1171 () Int)
(declare-fun x1580 () Bool)
(declare-fun x737 () Bool)
(declare-fun x711 () Int)
(declare-fun x620 () Int)
(declare-fun x435 () Int)
(declare-fun x962 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x971 () Int)
(declare-fun x430 () Int)
(declare-fun x461 () Int)
(declare-fun x273 () Int)
(declare-fun x1298 () Bool)
(declare-fun x247 (Int) Int)
(declare-fun x1286 () Int)
(declare-fun x811 () Int)
(declare-fun x1577 () Bool)
(declare-fun x1238 () Int)
(declare-fun x383 () Int)
(declare-fun x119 () Int)
(declare-fun x523 () Int)
(declare-fun x1559 () Int)
(declare-fun x1072 () Int)
(declare-fun x434 () Int)
(declare-fun x1172 () Int)
(declare-fun x891 () Int)
(declare-fun x609 () Int)
(declare-fun x851 () Int)
(declare-fun x778 () Int)
(declare-fun x563 (Int Int) Int)
(declare-fun x369 () Int)
(declare-fun x892 (Int) Int)
(declare-fun x372 () Int)
(declare-fun x701 () Int)
(declare-fun x1378 () Int)
(declare-fun x1181 () Int)
(declare-fun x152 () Int)
(declare-fun x1552 () Bool)
(declare-fun x91 () Int)
(declare-fun x1583 () Int)
(declare-fun x387 () Int)
(declare-fun x579 () Bool)
(declare-fun x654 () Int)
(declare-fun x641 () Int)
(declare-fun x1306 () Int)
(declare-fun x757 () Bool)
(declare-fun x262 () Int)
(declare-fun x869 () Int)
(declare-fun x961 () Int)
(declare-fun x476 () Int)
(declare-fun x1041 () Bool)
(declare-fun x826 () Int)
(declare-fun x1202 () Int)
(declare-fun x1112 () Int)
(declare-fun x1317 () Int)
(declare-fun x409 () Bool)
(declare-fun x857 () Int)
(declare-fun x198 () Int)
(declare-fun x1420 () Int)
(declare-fun x704 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1501 () Int)
(declare-fun x136 () Int)
(declare-fun x551 () Int)
(declare-fun x691 () Int)
(declare-fun x1157 () Int)
(declare-fun x466 () Int)
(declare-fun x1446 () Int)
(declare-fun x517 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1039 () Int)
(declare-fun x209 () Int)
(declare-fun x138 () Int)
(declare-fun x738 () Int)
(declare-fun x121 () Bool)
(declare-fun x791 () Int)
(declare-fun x492 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x601 () Int)
(declare-fun x1186 () Int)
(declare-fun x1136 () Int)
(declare-fun x748 () Int)
(declare-fun x1522 () Int)
(declare-fun x1504 () Int)
(declare-fun x624 () Int)
(declare-fun x165 () Int)
(declare-fun x1500 () Int)
(declare-fun x1071 () Int)
(declare-fun x498 () Int)
(declare-fun x637 () Int)
(declare-fun x863 () Bool)
(declare-fun x1085 () Int)
(declare-fun x57 () Int)
(declare-fun x888 () Int)
(declare-fun x900 () Int)
(declare-fun x1566 () Bool)
(declare-fun x183 () Int)
(declare-fun x1488 () Bool)
(declare-fun x252 () Int)
(declare-fun x74 () Int)
(declare-fun x1225 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1247 () Int)
(declare-fun x21 () Int)
(declare-fun x859 () Int)
(declare-fun x495 () Bool)
(declare-fun x790 () Int)
(declare-fun x821 () Int)
(declare-fun x1442 () Int)
(declare-fun x1430 () Int)
(declare-fun x81 () Int)
(declare-fun x1077 () Int)
(declare-fun x381 () Bool)
(declare-fun x626 (Int) Int)
(declare-fun x1509 () Int)
(declare-fun x1187 () Int)
(declare-fun x522 () Int)
(declare-fun x553 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1221 () Int)
(declare-fun x883 () Int)
(declare-fun x122 () Int)
(declare-fun x803 () Int)
(declare-fun x1455 () Int)
(declare-fun x373 () Int)
(declare-fun x1584 () Int)
(declare-fun x574 () Int)
(declare-fun x123 () Int)
(declare-fun x1206 () Int)
(declare-fun x510 () Int)
(declare-fun x1345 () Int)
(declare-fun x1257 () Int)
(declare-fun x855 () Int)
(declare-fun x172 () Int)
(declare-fun x659 () Int)
(declare-fun x1191 () Int)
(declare-fun x849 () Int)
(declare-fun x1025 () Int)
(declare-fun x816 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1451 () Int)
(declare-fun x484 () Int)
(declare-fun x1004 () Int)
(declare-fun x357 () Int)
(declare-fun x1399 () Int)
(declare-fun x666 (Int) Int)
(declare-fun x1217 () Int)
(declare-fun x1274 () Bool)
(declare-fun x368 () Int)
(declare-fun x1151 () Int)
(declare-fun x1361 (Int Int) Int)
(declare-fun x270 () Int)
(declare-fun x939 () Int)
(declare-fun x694 () Bool)
(declare-fun x325 () Int)
(declare-fun x1044 () Int)
(declare-fun x1434 () Int)
(declare-fun x340 () Int)
(declare-fun x1153 () Int)
(declare-fun x504 () Int)
(declare-fun x756 () Int)
(declare-fun x1093 () Int)
(declare-fun x950 () Bool)
(declare-fun x9 () Int)
(declare-fun x913 () Int)
(declare-fun x1248 () Int)
(declare-fun x1468 () Int)
(declare-fun x75 () Int)
(declare-fun x1026 (Int) Int)
(declare-fun x19 () Int)
(declare-fun x1292 () Int)
(declare-fun x1326 () Int)
(declare-fun x1526 () Int)
(declare-fun x1540 () Bool)
(declare-fun x174 () Int)
(declare-fun x141 () Bool)
(declare-fun x744 () Int)
(declare-fun x1511 () Int)
(declare-fun x793 () Int)
(declare-fun x384 () Int)
(declare-fun x1449 () Int)
(declare-fun x1494 () Int)
(declare-fun x324 () Int)
(declare-fun x556 () Int)
(declare-fun x1010 () Int)
(declare-fun x160 () Int)
(declare-fun x1223 () Int)
(declare-fun x1492 () Int)
(declare-fun x30 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1523 () Int)
(declare-fun x570 (Int) Int)
(declare-fun x569 () Int)
(declare-fun x335 () Bool)
(declare-fun x1123 () Int)
(declare-fun x669 () Int)
(declare-fun x1240 () Bool)
(declare-fun x288 () Int)
(declare-fun x602 () Int)
(declare-fun x116 () Int)
(declare-fun x1352 () Int)
(declare-fun x186 () Bool)
(declare-fun x1373 () Int)
(declare-fun x69 () Bool)
(declare-fun x405 () Int)
(declare-fun x1121 () Int)
(declare-fun x358 () Int)
(declare-fun x734 () Bool)
(declare-fun x130 () Int)
(declare-fun x573 () Int)
(declare-fun x792 () Int)
(declare-fun x433 () Bool)
(declare-fun x1284 () Int)
(declare-fun x482 () Int)
(declare-fun x835 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x6 () Int)
(declare-fun x257 () Int)
(declare-fun x1355 () Bool)
(declare-fun x464 () Int)
(declare-fun x555 () Int)
(declare-fun x607 () Int)
(declare-fun x276 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1235 () Bool)
(declare-fun x353 () Int)
(declare-fun x754 () Bool)
(declare-fun x588 () Int)
(declare-fun x686 () Int)
(declare-fun x1443 () Int)
(declare-fun x1273 () Int)
(declare-fun x468 () Int)
(declare-fun x1550 () Bool)
(declare-fun x35 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x806 () Int)
(declare-fun x63 () Bool)
(declare-fun x1106 () Int)
(declare-fun x879 () Int)
(declare-fun x1135 () Int)
(declare-fun x673 () Int)
(declare-fun x50 () Int)
(declare-fun x743 () Int)
(declare-fun x548 () Int)
(declare-fun x1164 () Int)
(declare-fun x1453 () Int)
(declare-fun x266 () Int)
(declare-fun x1556 () Bool)
(declare-fun x911 () Int)
(declare-fun x216 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1018 () Int)
(declare-fun x308 () Int)
(declare-fun x377 () Int)
(declare-fun x1502 () Bool)
(declare-fun x958 () Int)
(declare-fun x305 () Bool)
(declare-fun x236 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x931 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1268 () Int)
(declare-fun x486 () Bool)
(declare-fun x832 () Int)
(declare-fun x1119 () Int)
(declare-fun x1312 () Int)
(declare-fun x166 () Int)
(declare-fun x320 () Bool)
(declare-fun x1184 () Int)
(declare-fun x848 () Int)
(declare-fun x557 () Int)
(declare-fun x1464 () Int)
(declare-fun x1050 () Int)
(declare-fun x1009 () Int)
(declare-fun x604 () Bool)
(declare-fun x420 () Int)
(declare-fun x1498 () Int)
(declare-fun x956 () Int)
(declare-fun x1332 () Int)
(declare-fun x1090 () Int)
(declare-fun x426 () Int)
(declare-fun x1452 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1470 () Int)
(declare-fun x1382 () Int)
(declare-fun x1109 () Int)
(declare-fun x1484 () Int)
(declare-fun x32 () Int)
(declare-fun x94 () Int)
(declare-fun x212 (Int) Int)
(declare-fun x628 () Int)
(declare-fun x1307 () Int)
(declare-fun x77 () Bool)
(declare-fun x829 () Int)
(declare-fun x49 () Int)
(declare-fun x541 () Int)
(declare-fun x1392 () Bool)
(declare-fun x4 () Int)
(declare-fun x755 () Int)
(declare-fun x1233 () Bool)
(declare-fun x199 () Int)
(declare-fun x1448 () Bool)
(declare-fun x100 (Int) Int)
(declare-fun x836 () Int)
(declare-fun x296 () Int)
(declare-fun x687 () Int)
(declare-fun x1159 () Bool)
(declare-fun x380 (Int Int) Int)
(declare-fun x1538 () Int)
(declare-fun x681 () Int)
(declare-fun x894 () Int)
(declare-fun x818 () Int)
(declare-fun x943 () Int)
(declare-fun x782 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1300 () Int)
(declare-fun x700 () Bool)
(declare-fun x389 () Int)
(declare-fun x1279 () Int)
(declare-fun x1573 () Int)
(declare-fun x640 () Bool)
(declare-fun x805 () Int)
(declare-fun x177 () Int)
(declare-fun x1228 () Int)
(declare-fun x1377 () Int)
(declare-fun x1514 () Int)
(declare-fun x1034 () Int)
(declare-fun x1480 () Int)
(declare-fun x578 () Bool)
(declare-fun x552 () Int)
(declare-fun x1065 (Int) Int)
(declare-fun x1476 () Bool)
(declare-fun x1370 () Int)
(declare-fun x532 () Int)
(declare-fun x572 () Int)
(declare-fun x491 () Int)
(declare-fun x1232 (Int) Int)
(declare-fun x1331 () Int)
(declare-fun x643 () Int)
(declare-fun x926 () Int)
(declare-fun x908 () Int)
(declare-fun x250 () Int)
(declare-fun x596 () Int)
(declare-fun x173 () Bool)
(declare-fun x727 () Int)
(declare-fun x134 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1020 () Int)
(declare-fun x382 () Int)
(declare-fun x277 () Int)
(declare-fun x441 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x978 () Int)
(declare-fun x1128 () Int)
(declare-fun x1173 () Int)
(declare-fun x1227 () Int)
(declare-fun x839 () Int)
(declare-fun x960 () Int)
(declare-fun x246 () Int)
(declare-fun x86 () Bool)
(declare-fun x644 () Int)
(declare-fun x1440 () Int)
(declare-fun x709 () Int)
(declare-fun x1074 () Int)
(declare-fun x1354 () Bool)
(declare-fun x611 () Int)
(declare-fun x1463 () Int)
(declare-fun x1073 () Bool)
(declare-fun x688 () Int)
(declare-fun x1508 () Int)
(declare-fun x731 () Int)
(declare-fun x293 () Int)
(declare-fun x1012 () Bool)
(declare-fun x707 () Int)
(declare-fun x194 () Int)
(declare-fun x1431 () Int)
(declare-fun x999 () Int)
(declare-fun x562 () Bool)
(declare-fun x496 () Int)
(declare-fun x1450 () Int)
(declare-fun x127 () Bool)
(declare-fun x623 () Int)
(declare-fun x1190 () Int)
(declare-fun x713 (Int) Int)
(declare-fun x1080 () Int)
(declare-fun x728 () Int)
(declare-fun x777 () Int)
(declare-fun x1334 () Int)
(declare-fun x1314 () Int)
(declare-fun x1461 () Int)
(declare-fun x1207 () Int)
(declare-fun x1266 () Int)
(declare-fun x479 () Int)
(declare-fun x622 () Int)
(declare-fun x1126 () Int)
(declare-fun x907 () Int)
(declare-fun x269 () Int)
(declare-fun x407 () Int)
(declare-fun x316 () Int)
(declare-fun x565 () Int)
(declare-fun x326 () Int)
(declare-fun x210 () Int)
(declare-fun x148 () Int)
(declare-fun x322 () Int)
(declare-fun x1348 (Int) Int)
(declare-fun x1435 () Int)
(declare-fun x576 () Int)
(declare-fun x993 () Int)
(declare-fun x1183 () Int)
(declare-fun x865 () Int)
(declare-fun x196 () Int)
(declare-fun x1076 () Int)
(declare-fun x344 () Int)
(declare-fun x995 () Int)
(declare-fun x459 () Int)
(declare-fun x990 () Int)
(declare-fun x1297 () Bool)
(declare-fun x925 () Int)
(declare-fun x812 () Bool)
(declare-fun x102 () Int)
(declare-fun x663 (Int) Int)
(declare-fun x772 () Bool)
(declare-fun x1363 () Int)
(declare-fun x503 () Int)
(declare-fun x73 () Bool)
(declare-fun x290 () Int)
(declare-fun x238 () Bool)
(declare-fun x151 () Bool)
(declare-fun x1168 (Int) Int)
(declare-fun x488 () Bool)
(declare-fun x200 () Bool)
(declare-fun x1569 () Int)
(declare-fun x362 () Bool)
(declare-fun x328 () Bool)
(declare-fun x213 (Int Int Int Int Int Int Int) Int)
(declare-fun x1052 () Bool)
(declare-fun x453 () Int)
(declare-fun x1160 () Bool)
(declare-fun x726 () Int)
(declare-fun x918 () Int)
(declare-fun x598 () Int)
(declare-fun x692 () Int)
(declare-fun x417 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1139 () Int)
(declare-fun x723 () Int)
(declare-fun x1305 () Int)
(declare-fun x519 () Int)
(declare-fun x1022 () Bool)
(declare-fun x241 () Bool)
(declare-fun x566 (Int Int Int Int) Int)
(declare-fun x1425 () Bool)
(declare-fun x221 () Int)
(declare-fun x351 () Bool)
(declare-fun x833 () Int)
(declare-fun x779 () Bool)
(declare-fun x1445 () Int)
(declare-fun x781 () Int)
(declare-fun x795 () Int)
(declare-fun x534 () Int)
(declare-fun x1546 () Int)
(declare-fun x1100 () Int)
(declare-fun x1471 (Int Int) Int)
(declare-fun x1572 () Int)
(declare-fun x265 () Int)
(declare-fun x801 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x207 () Int)
(declare-fun x66 () Int)
(declare-fun x1447 () Int)
(declare-fun x1016 () Int)
(declare-fun x286 () Int)
(declare-fun x1330 () Bool)
(declare-fun x25 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1194 () Int)
(declare-fun x674 () Int)
(declare-fun x509 () Int)
(declare-fun x311 () Int)
(declare-fun x1478 () Int)
(declare-fun x178 () Int)
(declare-fun x875 () Int)
(declare-fun x339 () Int)
(declare-fun x529 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x1394 () Int)
(declare-fun x866 () Int)
(declare-fun x996 () Int)
(declare-fun x202 () Int)
(declare-fun x37 () Bool)
(declare-fun x1120 () Int)
(declare-fun x302 () Int)
(declare-fun x415 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x592 () Int)
(declare-fun x1091 () Int)
(declare-fun x283 () Int)
(declare-fun x222 () Int)
(declare-fun x874 () Int)
(declare-fun x988 () Int)
(declare-fun x1211 () Int)
(declare-fun x1254 () Int)
(declare-fun x388 () Int)
(declare-fun x1380 () Int)
(declare-fun x394 () Int)
(declare-fun x928 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1290 () Int)
(declare-fun x259 () Int)
(declare-fun x161 () Int)
(declare-fun x126 () Int)
(declare-fun x1006 () Int)
(declare-fun x1487 () Int)
(declare-fun x315 () Int)
(declare-fun x933 () Int)
(declare-fun x79 () Int)
(declare-fun x827 () Int)
(declare-fun x345 () Int)
(declare-fun x487 () Int)
(declare-fun x197 () Int)
(declare-fun x948 () Bool)
(declare-fun x959 () Int)
(declare-fun x1525 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x591 () Int)
(declare-fun x719 () Int)
(declare-fun x343 () Bool)
(declare-fun x1148 () Int)
(declare-fun x1568 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1386 () Int)
(declare-fun x785 () Int)
(declare-fun x445 () Int)
(declare-fun x1218 () Int)
(declare-fun x497 () Int)
(declare-fun x929 () Int)
(declare-fun x1250 () Int)
(declare-fun x940 () Int)
(declare-fun x1578 () Int)
(declare-fun x352 () Int)
(declare-fun x1234 () Bool)
(declare-fun x873 () Int)
(declare-fun x254 (Int) Int)
(declare-fun x807 () Int)
(declare-fun x185 () Int)
(declare-fun x467 () Int)
(declare-fun x111 () Bool)
(declare-fun x354 () Int)
(declare-fun x67 () Int)
(declare-fun x154 () Int)
(declare-fun x228 () Bool)
(declare-fun x932 () Bool)
(declare-fun x179 () Int)
(declare-fun x1438 () Int)
(declare-fun x5 (Int) Int)
(declare-fun x314 () Int)
(declare-fun x1302 () Int)
(declare-fun x243 () Int)
(declare-fun x359 () Int)
(declare-fun x1019 () Int)
(declare-fun x946 () Int)
(declare-fun x664 () Int)
(declare-fun x872 () Int)
(declare-fun x1336 () Int)
(declare-fun x1113 () Int)
(declare-fun x1043 () Bool)
(declare-fun x951 () Int)
(declare-fun x331 () Int)
(declare-fun x258 () Int)
(declare-fun x1054 () Int)
(declare-fun x1296 () Int)
(declare-fun x982 () Int)
(declare-fun x980 () Int)
(declare-fun x401 () Int)
(declare-fun x71 () Int)
(declare-fun x1465 (Int Int Int Int Int Int) Int)
(declare-fun x442 () Int)
(declare-fun x1574 () Int)
(declare-fun x80 () Int)
(declare-fun x1242 () Int)
(declare-fun x770 () Bool)
(declare-fun x539 () Int)
(declare-fun x408 () Int)
(declare-fun x877 () Int)
(declare-fun x533 () Int)
(declare-fun x93 () Bool)
(declare-fun x124 () Int)
(declare-fun x765 () Int)
(declare-fun x1555 () Int)
(declare-fun x1303 () Int)
(declare-fun x163 () Bool)
(declare-fun x101 () Int)
(declare-fun x1028 () Int)
(declare-fun x1169 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1551 () Int)
(declare-fun x1053 () Int)
(declare-fun x278 () Bool)
(declare-fun x587 () Int)
(declare-fun x1156 (Int) Int)
(declare-fun x1513 () Int)
(declare-fun x1585 () Int)
(declare-fun x1024 () Bool)
(declare-fun x1441 () Int)
(declare-fun x1368 () Int)
(declare-fun x1564 () Int)
(declare-fun x112 () Int)
(declare-fun x1419 () Int)
(declare-fun x989 () Int)
(declare-fun x837 () Int)
(declare-fun x470 () Int)
(declare-fun x346 () Int)
(declare-fun x366 () Int)
(declare-fun x652 () Int)
(declare-fun x1051 () Int)
(declare-fun x631 () Int)
(declare-fun x953 () Int)
(declare-fun x1070 () Bool)
(declare-fun x546 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x840 () Int)
(declare-fun x630 () Bool)
(declare-fun x192 () Int)
(declare-fun x1433 () Int)
(declare-fun x1335 (Int Int Int Int) Int)
(declare-fun x1344 () Int)
(declare-fun x944 () Int)
(declare-fun x263 () Int)
(declare-fun x1262 () Bool)
(declare-fun x1192 () Int)
(declare-fun x809 (Int) Int)
(declare-fun x156 () Int)
(declare-fun x1048 () Int)
(declare-fun x1213 (Int) Int)
(declare-fun x168 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1293 () Int)
(declare-fun x423 () Int)
(declare-fun x448 () Bool)
(declare-fun x188 () Bool)
(declare-fun x20 () Int)
(declare-fun x852 () Bool)
(declare-fun x144 () Int)
(declare-fun x1142 () Int)
(declare-fun x90 () Int)
(declare-fun x917 () Int)
(declare-fun x906 () Int)
(declare-fun x1325 () Int)
(declare-fun x1427 () Int)
(declare-fun x490 () Int)
(declare-fun x751 () Int)
(declare-fun x561 () Int)
(declare-fun x702 () Int)
(declare-fun x289 () Bool)
(declare-fun x973 () Int)
(declare-fun x964 () Int)
(declare-fun x593 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1134 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x1432 () Int)
(declare-fun x1458 () Int)
(declare-fun x763 (Int) Int)
(declare-fun x1485 () Int)
(declare-fun x499 () Bool)
(declare-fun x954 () Int)
(declare-fun x1097 () Int)
(declare-fun x500 () Int)
(declare-fun x44 () Int)
(declare-fun x275 () Int)
(declare-fun x1216 () Int)
(declare-fun x23 () Int)
(declare-fun x1491 () Bool)
(declare-fun x633 () Int)
(declare-fun x429 (Int) Int)
(declare-fun x1167 () Int)
(declare-fun x934 () Int)
(declare-fun x1329 () Bool)
(declare-fun x627 () Int)
(declare-fun x897 () Int)
(declare-fun x1215 () Int)
(declare-fun x248 () Int)
(declare-fun x1553 () Int)
(declare-fun x902 () Int)
(declare-fun x399 (Int) Int)
(declare-fun x789 () Int)
(declare-fun x333 () Bool)
(declare-fun x823 (Int) Int)
(declare-fun x307 () Int)
(declare-fun x1013 () Int)
(declare-fun x1046 () Int)
(declare-fun x987 () Int)
(declare-fun x1244 () Int)
(declare-fun x485 (Int) Int)
(declare-fun x31 () Int)
(declare-fun x924 () Int)
(declare-fun x815 () Int)
(declare-fun x43 () Bool)
(declare-fun x1548 () Int)
(declare-fun x159 () Int)
(declare-fun x1321 () Int)
(declare-fun x237 () Int)
(declare-fun x945 () Int)
(declare-fun x915 (Int) Int)
(declare-fun x1404 () Int)
(declare-fun x985 () Int)
(declare-fun x923 () Bool)
(declare-fun x1506 () Int)
(declare-fun x710 () Int)
(declare-fun x870 () Int)
(declare-fun x1309 () Int)
(declare-fun x699 () Int)
(declare-fun x413 () Int)
(declare-fun x864 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x89 () Bool)
(declare-fun x776 () Int)
(declare-fun x1170 () Bool)
(declare-fun x638 () Int)
(declare-fun x39 () Int)
(declare-fun x524 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1275 () Int)
(declare-fun x670 () Int)
(declare-fun x271 () Int)
(declare-fun x107 () Int)
(declare-fun x1271 () Int)
(declare-fun x1387 () Bool)
(declare-fun x528 () Int)
(declare-fun x625 () Int)
(declare-fun x24 () Int)
(declare-fun x636 () Int)
(declare-fun x649 () Int)
(declare-fun x1042 () Int)
(declare-fun x428 () Int)
(declare-fun x1333 () Int)
(declare-fun x684 () Int)
(declare-fun x398 () Bool)
(declare-fun x614 () Int)
(declare-fun x1001 () Int)
(declare-fun x239 () Int)
(declare-fun x234 () Int)
(declare-fun x1103 () Bool)
(declare-fun x742 () Int)
(declare-fun x317 () Int)
(declare-fun x527 () Int)
(declare-fun x396 () Int)
(declare-fun x98 () Int)
(declare-fun x853 () Int)
(declare-fun x284 () Int)
(declare-fun x142 () Int)
(declare-fun x1060 () Int)
(declare-fun x61 () Int)
(declare-fun x169 () Int)
(declare-fun x1150 () Int)
(declare-fun x1460 () Int)
(declare-fun x882 () Int)
(declare-fun x1493 () Int)
(declare-fun x981 () Int)
(declare-fun x1353 () Bool)
(declare-fun x29 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1197 () Int)
(declare-fun x780 () Bool)
(declare-fun x292 () Int)
(declare-fun x131 () Int)
(declare-fun x1177 () Int)
(declare-fun x341 () Int)
(declare-fun x76 () Int)
(declare-fun x1075 () Int)
(declare-fun x1472 () Int)
(declare-fun x1416 () Int)
(declare-fun x800 () Bool)
(declare-fun x431 () Int)
(declare-fun x746 () Int)
(declare-fun x752 () Int)
(declare-fun x217 () Int)
(declare-fun x135 () Bool)
(declare-fun x253 () Int)
(declare-fun x921 () Int)
(declare-fun x1396 () Int)
(declare-fun x749 () Int)
(declare-fun x400 () Int)
(declare-fun x437 () Int)
(declare-fun x1064 () Int)
(declare-fun x658 () Int)
(declare-fun x229 () Int)
(declare-fun x1096 () Bool)
(declare-fun x784 () Int)
(declare-fun x1403 () Bool)
(declare-fun x425 () Bool)
(declare-fun x303 () Bool)
(declare-fun x729 () Int)
(declare-fun x621 () Bool)
(declare-fun x367 () Int)
(declare-fun x600 () Int)
(declare-fun x1214 () Bool)
(declare-fun x831 () Int)
(declare-fun x458 () Int)
(declare-fun x606 () Int)
(declare-fun x1371 () Int)
(declare-fun x571 () Int)
(declare-fun x1308 () Int)
(declare-fun x1188 () Int)
(declare-fun x1483 () Int)
(declare-fun x1146 () Bool)
(declare-fun x418 () Int)
(declare-fun x457 () Int)
(declare-fun x1040 () Bool)
(declare-fun x1245 () Int)
(declare-fun x885 () Int)
(declare-fun x10 () Bool)
(declare-fun x901 () Int)
(declare-fun x1278 () Int)
(declare-fun x736 () Int)
(declare-fun x994 () Int)
(declare-fun x974 () Int)
(declare-fun x927 (Int) Int)
(declare-fun x1204 () Int)
(declare-fun x1537 () Int)
(declare-fun x1140 (Int) Int)
(declare-fun x758 () Bool)
(declare-fun x642 () Int)
(declare-fun x680 () Int)
(declare-fun x1149 () Int)
(declare-fun x365 () Int)
(declare-fun x646 () Int)
(declare-fun x272 () Int)
(declare-fun x395 () Int)
(declare-fun x1539 () Int)
(declare-fun x530 () Int)
(declare-fun x661 () Int)
(declare-fun x856 () Int)
(declare-fun x1542 () Int)
(declare-fun x361 () Bool)
(declare-fun x651 () Int)
(declare-fun x1147 () Bool)
(declare-fun x671 () Int)
(declare-fun x137 () Int)
(declare-fun x473 () Int)
(declare-fun x516 () Int)
(declare-fun x1272 (Int) Int)
(declare-fun x1259 () Int)
(declare-fun x537 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1412 () Int)
(declare-fun x1102 () Int)
(declare-fun x525 () Bool)
(declare-fun x153 () Int)
(declare-fun x451 () Bool)
(declare-fun x804 () Int)
(declare-fun x113 () Int)
(declare-fun x1049 () Int)
(declare-fun x321 () Int)
(declare-fun x414 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1152 () Int)
(declare-fun x230 (Int) Int)
(declare-fun x167 () Int)
(declare-fun x1220 () Int)
(declare-fun x706 () Int)
(declare-fun x1055 (Int) Int)
(declare-fun x1557 () Int)
(declare-fun x1466 () Bool)
(declare-fun x342 () Int)
(declare-fun x120 () Int)
(declare-fun x1209 () Int)
(declare-fun x796 () Int)
(declare-fun x880 () Int)
(declare-fun x1084 () Int)
(declare-fun x1384 () Int)
(declare-fun x1316 () Bool)
(declare-fun x725 () Int)
(declare-fun x1176 () Int)
(declare-fun x1260 () Int)
(declare-fun x1155 () Int)
(declare-fun x965 () Int)
(declare-fun x1141 () Int)
(declare-fun x300 () Int)
(declare-fun x590 () Int)
(declare-fun x722 (Int Int Int) Int)
(declare-fun x1256 () Int)
(declare-fun x605 () Bool)
(declare-fun x813 () Bool)
(declare-fun x665 () Int)
(declare-fun x224 () Int)
(declare-fun x616 () Int)
(declare-fun x847 () Int)
(declare-fun x104 () Int)
(declare-fun x133 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x268 () Int)
(declare-fun x550 () Bool)
(declare-fun x617 () Int)
(declare-fun x1381 () Int)
(declare-fun x1210 (Int) Int)
(declare-fun x1408 () Bool)
(declare-fun x1029 () Int)
(declare-fun x531 () Bool)
(declare-fun x676 () Int)
(declare-fun x1457 () Int)
(declare-fun x232 () Bool)
(declare-fun x721 () Bool)
(declare-fun x1347 () Int)
(declare-fun x443 () Int)
(declare-fun x895 () Int)
(declare-fun x206 () Int)
(declare-fun x1529 () Int)
(declare-fun x264 () Bool)
(declare-fun x422 () Int)
(declare-fun x967 () Bool)
(declare-fun x1417 () Int)
(declare-fun x979 () Int)
(declare-fun x1237 () Int)
(declare-fun x474 () Bool)
(declare-fun x1362 () Int)
(declare-fun x390 () Int)
(declare-fun x55 () Bool)
(declare-fun x47 () Int)
(declare-fun x281 () Int)
(declare-fun x189 () Int)
(declare-fun x581 () Int)
(declare-fun x256 () Int)
(declare-fun x881 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1369 () Int)
(declare-fun x603 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x797 () Int)
(declare-fun x715 () Int)
(declare-fun x632 () Int)
(declare-fun x251 () Int)
(declare-fun x508 () Int)
(declare-fun x1144 () Int)
(declare-fun x842 () Int)
(declare-fun x1486 () Bool)
(declare-fun x83 () Int)
(declare-fun x244 () Int)
(declare-fun x88 () Bool)
(declare-fun x966 () Int)
(declare-fun x834 () Int)
(declare-fun x231 () Int)
(declare-fun x838 () Int)
(declare-fun x698 () Int)
(declare-fun x1543 () Int)
(declare-fun x118 () Int)
(declare-fun x1027 (Int Int) Int)
(declare-fun x612 () Int)
(declare-fun x1058 () Int)
(declare-fun x8 () Int)
(declare-fun x95 () Int)
(declare-fun x1199 () Int)
(declare-fun x1372 () Bool)
(declare-fun x157 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x56 (Int) Int)
(declare-fun x991 () Int)
(declare-fun x656 () Int)
(declare-fun x753 () Int)
(declare-fun x1130 () Int)
(declare-fun x12 () Bool)
(declare-fun x501 () Int)
(declare-fun x1243 () Int)
(declare-fun x472 () Int)
(declare-fun x549 () Int)
(declare-fun x355 () Bool)
(declare-fun x871 () Int)
(declare-fun x1143 () Int)
(declare-fun x298 () Int)
(declare-fun x822 () Int)
(declare-fun x887 () Int)
(declare-fun x180 () Int)
(declare-fun x1319 () Int)
(declare-fun x1200 () Bool)
(declare-fun x190 () Int)
(declare-fun x1337 () Int)
(declare-fun x310 () Int)
(declare-fun x1324 () Int)
(declare-fun x1005 () Int)
(declare-fun x678 () Int)
(declare-fun x645 () Int)
(declare-fun x912 (Int) Int)
(declare-fun x717 () Int)
(declare-fun x103 () Int)
(declare-fun x771 () Int)
(declare-fun x589 () Int)
(declare-fun x712 () Bool)
(declare-fun x1575 () Int)
(declare-fun x1251 () Int)
(declare-fun x1205 () Int)
(declare-fun x1175 () Int)
(declare-fun x1385 () Int)
(declare-fun x935 () Int)
(declare-fun x26 () Int)
(declare-fun x1586 () Int)
(declare-fun x1428 () Int)
(declare-fun x1295 () Int)
(declare-fun x85 () Int)
(declare-fun x33 () Int)
(declare-fun x17 () Int)
(declare-fun x1415 () Int)
(declare-fun x1477 (Int) Int)
(declare-fun x786 () Int)
(declare-fun x1031 () Int)
(declare-fun x1424 () Int)
(declare-fun x526 () Int)
(declare-fun x227 () Int)
(declare-fun x282 () Bool)
(declare-fun x1282 () Int)
(declare-fun x1499 () Int)
(declare-fun x1356 () Int)
(declare-fun x1082 () Int)
(declare-fun x114 () Int)
(declare-fun x58 () Int)
(declare-fun x1554 () Int)
(declare-fun x1037 (Int) Int)
(declare-fun x1327 () Int)
(declare-fun x128 () Int)
(declare-fun x411 () Int)
(declare-fun x41 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1062 () Int)
(declare-fun x858 (Int) Int)
(declare-fun x1351 () Int)
(declare-fun x741 () Int)
(declare-fun x760 () Bool)
(declare-fun x647 () Int)
(declare-fun x983 () Int)
(declare-fun x51 () Bool)
(declare-fun x1276 () Int)
(declare-fun x941 () Int)
(declare-fun x657 () Int)
(declare-fun x843 () Int)
(declare-fun x13 () Int)
(declare-fun x410 () Int)
(declare-fun x599 () Bool)
(declare-fun x53 () Int)
(declare-fun x242 () Int)
(declare-fun x910 () Int)
(declare-fun x65 () Int)
(declare-fun x634 () Int)
(declare-fun x1099 () Int)
(declare-fun x861 () Int)
(declare-fun x512 () Int)
(declare-fun x403 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1079 () Int)
(declare-fun x1423 () Int)
(declare-fun x635 () Int)
(declare-fun x1515 () Int)
(declare-fun x775 () Bool)
(declare-fun x1530 () Int)
(declare-fun x1017 () Int)
(declare-fun x494 () Int)
(declare-fun x545 (Int Int Int Int Int) Int)
(declare-fun x543 () Int)
(declare-fun x87 () Int)
(declare-fun x938 () Int)
(declare-fun x460 () Int)
(declare-fun x1066 () Int)
(declare-fun x1196 () Int)
(declare-fun x558 () Int)
(declare-fun x957 () Int)
(declare-fun x299 () Int)
(declare-fun x817 () Int)
(declare-fun x463 () Int)
(declare-fun x949 () Int)
(declare-fun x1534 () Bool)
(declare-fun x456 () Int)
(declare-fun x412 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1014 () Int)
(declare-fun x976 () Int)
(declare-fun x1437 () Int)
(declare-fun x176 () Bool)
(declare-fun x287 () Int)
(declare-fun x889 () Int)
(declare-fun x1008 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x936 () Int)
(declare-fun x615 () Int)
(declare-fun x304 () Int)
(declare-fun x139 () Int)
(declare-fun x1350 (Int) Int)
(declare-fun x1360 () Int)
(declare-fun x544 () Int)
(declare-fun x1000 () Int)
(declare-fun x1116 () Int)
(declare-fun x427 () Int)
(declare-fun x1304 () Int)
(declare-fun x1346 () Bool)
(declare-fun x750 () Int)
(declare-fun x1429 () Int)
(declare-fun x685 () Int)
(declare-fun x1516 () Int)
(declare-fun x187 () Bool)
(declare-fun x1294 () Int)
(declare-fun x732 () Int)
(declare-fun x708 () Int)
(declare-fun x582 () Int)
(declare-fun x1158 () Int)
(declare-fun x1527 () Bool)
(declare-fun x397 () Int)
(declare-fun x1535 () Int)
(declare-fun x364 () Int)
(declare-fun x416 () Int)
(declare-fun x518 () Bool)
(declare-fun x695 () Int)
(declare-fun x703 () Int)
(declare-fun x1579 () Int)
(declare-fun x219 () Int)
(declare-fun x930 () Int)
(declare-fun x171 () Int)
(declare-fun x182 () Int)
(declare-fun x677 () Int)
(declare-fun x493 () Int)
(declare-fun x489 () Int)
(declare-fun x3 () Bool)
(declare-fun x350 () Int)
(declare-fun x162 () Int)
(declare-fun x1343 () Int)
(declare-fun x984 () Bool)
(declare-fun x1390 () Int)
(declare-fun x844 () Int)
(declare-fun x1185 () Int)
(declare-fun x193 () Int)
(declare-fun x327 () Int)
(declare-fun x1068 () Int)
(declare-fun x70 () Int)
(declare-fun x440 () Int)
(declare-fun x1047 () Int)
(declare-fun x963 () Int)
(declare-fun x349 () Int)
(declare-fun x1239 () Int)
(declare-fun x1405 () Int)
(declare-fun x1320 () Int)
(declare-fun x586 () Bool)
(declare-fun x170 () Int)
(declare-fun x145 () Int)
(declare-fun x515 () Int)
(declare-fun x285 () Int)
(declare-fun x1015 () Int)
(declare-fun x203 () Int)
(declare-fun x511 () Int)
(declare-fun x1503 (Int) Int)
(declare-fun x1400 () Bool)
(declare-fun x92 (Int Int) Int)
(declare-fun x419 (Int) Int)
(declare-fun x1301 () Int)
(declare-fun x1023 () Int)
(declare-fun x245 () Int)
(declare-fun x481 () Bool)
(declare-fun x42 () Int)
(declare-fun x769 () Bool)
(declare-fun x1088 () Int)
(declare-fun x762 () Int)
(declare-fun x54 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1061 () Int)
(declare-fun x937 () Int)
(declare-fun x432 () Int)
(declare-fun x309 () Int)
(declare-fun x577 () Bool)
(declare-fun x18 () Bool)
(declare-fun x513 () Int)
(declare-fun x318 () Int)
(declare-fun x1189 () Bool)
(declare-fun x922 () Int)
(declare-fun x1315 () Int)
(declare-fun x610 () Int)
(declare-fun x211 () Bool)
(declare-fun x998 () Int)
(declare-fun x1545 () Bool)
(declare-fun x97 () Int)
(declare-fun x1311 () Int)
(declare-fun x337 () Int)
(declare-fun x129 () Bool)
(declare-fun x1045 () Int)
(declare-fun x376 () Bool)
(declare-fun x1418 () Int)
(declare-fun x718 () Int)
(declare-fun x1030 () Int)
(declare-fun x1299 () Int)
(declare-fun x1108 () Int)
(declare-fun x72 () Int)
(declare-fun x735 () Int)
(declare-fun x436 () Int)
(declare-fun x469 () Int)
(declare-fun x1115 () Int)
(declare-fun x208 () Int)
(declare-fun x1454 () Bool)
(declare-fun x909 () Int)
(declare-fun x438 () Int)
(declare-fun x1421 () Int)
(declare-fun x449 () Bool)
(declare-fun x977 () Int)
(declare-fun x507 () Int)
(declare-fun x184 () Int)
(declare-fun x720 () Int)
(declare-fun x334 () Int)
(declare-fun x986 () Int)
(declare-fun x1038 () Int)
(declare-fun x567 () Bool)
(declare-fun x374 () Bool)
(declare-fun x175 () Bool)
(declare-fun x854 () Int)
(declare-fun x404 () Int)
(declare-fun x110 () Int)
(declare-fun x1490 () Int)
(declare-fun x1497 () Int)
(declare-fun x204 () Int)
(declare-fun x899 () Int)
(declare-fun x514 () Int)
(declare-fun x450 () Int)
(declare-fun x140 () Int)
(declare-fun x613 () Int)
(declare-fun x233 () Int)
(declare-fun x841 () Bool)
(declare-fun x696 () Int)
(declare-fun x62 () Int)
(declare-fun x454 () Int)
(declare-fun x68 () Bool)
(declare-fun x59 () Int)
(declare-fun x218 () Int)
(declare-fun x1007 () Int)
(declare-fun x1473 () Bool)
(declare-fun x330 () Int)
(declare-fun x947 () Int)
(declare-fun x1032 () Int)
(declare-fun x1277 () Int)
(declare-fun x1104 () Int)
(declare-fun x1376 () Int)
(declare-fun x363 () Int)
(declare-fun x1439 () Int)
(declare-fun x1203 () Int)
(declare-fun x1395 () Int)
(declare-fun x214 () Int)
(declare-fun x774 () Int)
(declare-fun x1057 () Int)
(declare-fun x675 () Int)
(declare-fun x682 (Int) Int)
(declare-fun x1258 () Bool)
(declare-fun x538 () Int)
(declare-fun x1291 () Int)
(declare-fun x575 () Int)
(declare-fun x1410 () Int)
(declare-fun x447 () Bool)
(declare-fun x34 () Int)
(declare-fun x181 () Int)
(define-fun x1414 ((x1567 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1567) (>= x1567 0)) x1567 (- x1567 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1328 ((x1567 Int)) Int (ite (and (< x1567 0) (>= x1567 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1567 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1567))
(define-fun x477 ((x1567 Int)) Int (ite (and (>= x1567 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1567)) x1567 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1567) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1567)) (- x1567 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1567 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1567 0)) (+ x1567 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1027 x1567 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x22 ((x970 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x970) (<= 0 x970)))
(define-fun x14 ((x970 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x970) (>= x970 0)))
(define-fun x969 ((x970 Int)) Bool (and (= x970 (x380 x970 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x380 115792089237316195423570985008687907853269984665640564039457584007913129639935 x970) x970)))
(define-fun x1517 ((x970 Int)) Bool (and (= 0 (x380 0 x970)) (= 0 (x380 x970 0))))
(define-fun x650 ((x970 Int)) Bool (= x970 (x380 x970 x970)))
(define-fun x225 ((x970 Int)) Bool (and (x1517 x970) (x650 x970) (x969 x970)))
(define-fun x424 ((x970 Int) (x1081 Int)) Bool (= (x380 x970 x1081) (x380 x1081 x970)))
(define-fun x444 ((x970 Int) (x1081 Int)) Bool (and (<= 0 (x380 x970 x1081)) (=> (<= 0 x970) (<= (x380 x970 x1081) x970)) (=> (<= 0 x1081) (>= x1081 (x380 x970 x1081)))))
(define-fun x1342 ((x970 Int) (x1081 Int)) Bool (and (x424 x970 x1081) (x444 x970 x1081)))
(define-fun x547 ((x970 Int)) Bool (= (x477 x970) (+ (x380 x970 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1027 x970 32))))
(define-fun x594 ((x970 Int)) Bool (and (x1342 x970 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x547 x970)))
(define-fun x540 ((x970 Int) (x1081 Int)) Bool (and (<= 0 (x1027 x970 x1081)) (> x1081 (x1027 x970 x1081))))
(define-fun x825 ((x970 Int) (x1081 Int)) Bool (=> (and (>= x970 0) (> x1081 0)) (= (= x970 (x1027 x970 x1081)) (< x970 x1081))))
(define-fun x1469 ((x970 Int) (x1081 Int)) Bool (=> (and (and (<= x1081 x970) (> (+ x1081 x1081) x970)) (> x1081 0)) (= (- x970 x1081) (x1027 x970 x1081))))
(define-fun x814 ((x970 Int) (x1081 Int)) Bool (=> (< 0 x1081) (= x970 (+ (x1027 x970 x1081) (* (x1361 x970 x1081) x1081)))))
(define-fun x455 ((x970 Int) (x1081 Int)) Bool (and (x1469 x970 x1081) (x825 x970 x1081) (x814 x970 x1081) (x540 x970 x1081)))
(define-fun x1520 ((x970 Int)) Bool (= (x1027 0 x970) 0))
(define-fun x375 ((x970 Int)) Bool (= (x1027 x970 1) 0))
(define-fun x679 ((x970 Int)) Bool (= 0 (x1027 x970 x970)))
(define-fun x1475 ((x970 Int)) Bool (and (x679 x970) (x1520 x970) (x375 x970)))
(define-fun x356 ((x970 Int) (x1081 Int)) Bool (= (x1471 x970 x1081) (* x1081 x970)))
(define-fun x1582 ((x970 Int) (x1081 Int)) Bool (and (= (* (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936) x970) (x1471 x970 (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1081) (- (* x970 x1081) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1081))) (= (- (* (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936) x970) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x759 ((x970 Int) (x1081 Int)) Bool (=> (and (> x1081 0) (< 0 x970)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x970 x1081)) (= (x1361 (x477 (x1471 x970 x1081)) x970) x1081))))
(define-fun x143 ((x970 Int) (x1081 Int)) Bool (=> (and (not (= 0 x1081)) (not (= 0 x970))) (and (= x970 (x1361 (x1471 x970 x1081) x1081)) (= (x1361 (x1471 x970 x1081) x970) x1081))))
(define-fun x810 ((x970 Int) (x1081 Int)) Bool (=> (and (< 0 x1081) (< 0 x970)) (= (< (x1361 115792089237316195423570985008687907853269984665640564039457584007913129639935 x970) x1081) (> (x1471 x970 x1081) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x78 ((x970 Int) (x1081 Int)) Bool (and (= (x477 (x1471 x970 (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x477 (x1471 x970 x1081))) (= (x477 (x1471 x970 x1081)) (x477 (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x477 (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1081)) (x477 (x1471 x970 x1081)))))
(define-fun x580 ((x970 Int) (x1081 Int)) Bool (and (=> (and (and (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1081 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x970))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1081)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x970) (x1361 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1081)))) (=> (and (and (> x970 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x970)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1081) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1081))) (= (<= (x1471 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1361 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1081)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x970)))) (=> (and (and (< 0 x970) (<= x970 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1081) (<= x1081 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x1471 x970 (- x1081 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1081) (x1361 57896044618658097711785492504343953926634992332820282019728792003956564819968 x970)))) (=> (and (and (< 0 x1081) (<= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x970) (<= x970 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1361 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1081) x970) (<= (x1471 x970 x1081) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x38 ((x970 Int) (x1081 Int)) Bool (and (x580 x970 x1081) (x143 x970 x1081) (x78 x970 x1081) (x1582 x970 x1081) (x759 x970 x1081) (x810 x970 x1081) (x356 x970 x1081)))
(define-fun x1131 ((x970 Int)) Bool (and (= (x1471 x970 0) 0) (= 0 (x1471 0 x970))))
(define-fun x1127 ((x970 Int)) Bool (and (= x970 (x1471 1 x970)) (= (x1471 x970 1) x970)))
(define-fun x697 ((x970 Int)) Bool (and (x1127 x970) (x1131 x970)))
(define-fun x260 ((x970 Int)) Bool (= (x1027 x970 1461501637330902918203684832716283019655932542976) (x380 x970 1461501637330902918203684832716283019655932542975)))
(define-fun x319 ((x970 Int)) Bool (and (x1342 x970 1461501637330902918203684832716283019655932542975) (x260 x970)))
(define-fun x564 ((x970 Int)) Bool (= (x1027 x970 1099511627776) (x380 x970 1099511627775)))
(define-fun x1561 ((x970 Int)) Bool (and (x564 x970) (x1342 x970 1099511627775)))
(define-fun x768 ((x808 Int)) Int (ite (> x503 x808) (x927 x808) 0))
(define-fun x205 ((x808 Int)) Int 0)
(define-fun x1310 ((x808 Int)) Int 0)
(define-fun x392 ((x808 Int)) Int 0)
(define-fun x48 ((x808 Int)) Int 0)
(define-fun x1562 ((x808 Int)) Int 0)
(define-fun x799 ((x808 Int)) Int 0)
(define-fun x1098 ((x808 Int)) Int 0)
(define-fun x109 ((x808 Int)) Int 0)
(define-fun x1145 ((x808 Int)) Int 0)
(define-fun x1224 ((x808 Int)) Int 0)
(define-fun x639 ((x808 Int)) Int 0)
(define-fun x386 ((x808 Int)) Int 0)
(define-fun x1358 ((x808 Int)) Int 0)
(define-fun x745 ((x808 Int)) Int 0)
(define-fun x559 ((x808 Int)) Int 0)
(define-fun x471 ((x808 Int)) Int 0)
(define-fun x845 ((x808 Int)) Int 0)
(define-fun x502 ((x808 Int)) Int 0)
(define-fun x1011 ((x808 Int)) Int 0)
(define-fun x1481 ((x808 Int)) Int 0)
(define-fun x52 ((x808 Int)) Int 0)
(define-fun x1105 ((x808 Int)) Int 0)
(define-fun x274 ((x808 Int)) Int (ite (= 704 x808) x704 (x1145 x808)))
(define-fun x306 ((x808 Int)) Int (ite (= x808 736) x900 (x274 x808)))
(define-fun x391 ((x808 Int)) Int (ite (= x808 768) x1128 (x306 x808)))
(define-fun x896 ((x808 Int)) Int (ite (= x808 800) x172 (x391 x808)))
(define-fun x1389 ((x808 Int)) Int (ite (= x808 832) x1432 (x896 x808)))
(define-fun x1246 ((x808 Int)) Int (ite (= x808 864) x778 (x1389 x808)))
(define-fun x997 ((x808 Int)) Int (ite (= 896 x808) x347 (x1246 x808)))
(define-fun x1089 ((x808 Int)) Int (ite (= 928 x808) x124 (x997 x808)))
(define-fun x648 ((x808 Int)) Int (ite (= x808 960) x1331 (x1089 x808)))
(define-fun x1095 ((x808 Int)) Int 0)
(define-fun x554 ((x808 Int)) Int (ite (= 256 x808) x918 (x392 x808)))
(define-fun x868 ((x808 Int)) Int (ite (= 288 x808) x1242 (x554 x808)))
(define-fun x164 ((x808 Int)) Int 0)
(define-fun x393 ((x808 Int)) Int (ite (= x808 704) x842 (x1224 x808)))
(define-fun x714 ((x808 Int)) Int (ite (= 736 x808) x1109 (x393 x808)))
(define-fun x96 ((x808 Int)) Int (ite (= x808 768) x404 (x714 x808)))
(define-fun x773 ((x808 Int)) Int (ite (= 800 x808) x654 (x96 x808)))
(define-fun x215 ((x808 Int)) Int (ite (= x808 832) x80 (x773 x808)))
(define-fun x794 ((x808 Int)) Int (ite (= 864 x808) x715 (x215 x808)))
(define-fun x733 ((x808 Int)) Int (ite (= 896 x808) x1123 (x794 x808)))
(define-fun x919 ((x808 Int)) Int (ite (= x808 928) x508 (x733 x808)))
(define-fun x370 ((x808 Int)) Int (ite (= 960 x808) x210 (x919 x808)))
(define-fun x1359 ((x808 Int)) Int (x570 x808))
(define-fun x730 ((x808 Int)) Int (x212 x808))
(define-fun x905 ((x808 Int)) Int (x1210 x808))
(define-fun x1402 ((x808 Int)) Int (x247 x808))
(define-fun x1558 ((x808 Int)) Int (x1168 x808))
(define-fun x689 ((x808 Int)) Int (x100 x808))
(define-fun x1365 ((x808 Int)) Int (x1232 x808))
(define-fun x914 ((x808 Int)) Int (x1272 x808))
(define-fun x660 ((x808 Int)) Int (x666 x808))
(define-fun x1087 ((x808 Int)) Int (x823 x808))
(define-fun x916 ((x808 Int)) Int (x1065 x808))
(define-fun x597 ((x808 Int)) Int (x429 x808))
(define-fun x446 ((x808 Int)) Int (x912 x808))
(define-fun x1544 ((x808 Int)) Int (x419 x808))
(define-fun x191 ((x808 Int)) Int (x1503 x808))
(define-fun x668 ((x808 Int)) Int (x1477 x808))
(define-fun x1287 ((x808 Int)) Int (x809 x808))
(define-fun x1125 ((x808 Int)) Int (x626 x808))
(define-fun x371 ((x808 Int)) Int (x485 x808))
(define-fun x301 ((x808 Int)) Int (x763 x808))
(define-fun x1241 ((x808 Int)) Int (x1289 x808))
(define-fun x1 ((x808 Int)) Int (x254 x808))
(define-fun x1222 ((x808 Int)) Int (x1524 x808))
(define-fun x1059 ((x808 Int)) Int (x230 x808))
(define-fun x1479 ((x808 Int)) Int (ite (> x576 x808) (x858 x808) 0))
(define-fun x824 ((x808 Int)) Int (ite (and (> x576 x808) (<= 0 x808)) (x1140 x808) (x1479 x808)))
(define-fun x1422 ((x808 Int)) Int (ite (= x808 x1245) x411 (x1348 x808)))
(define-fun x783 ((x808 Int)) Int (ite (= 128 x808) x76 (x799 x808)))
(define-fun x693 ((x808 Int)) Int (ite (and (> (+ 160 x76) x808) (>= x808 160)) (x824 (- (+ x808 x1122) 160)) (x783 x808)))
(define-fun x904 ((x808 Int)) Int (ite (= x182 x808) 0 (x693 x808)))
(define-fun x1133 ((x808 Int)) Int (ite (= x138 x808) x1267 (x904 x808)))
(define-fun x1265 ((x808 Int)) Int (ite (and (>= x808 x1304) (< x808 (+ x1304 x1260))) (x824 (- (+ x576 x808) x1304)) (x1133 x808)))
(define-fun x535 ((x808 Int)) Int (ite x923 (x1133 x808) (x1265 x808)))
(define-fun x672 ((x808 Int)) Int (ite (= x808 x724) 57 (x535 x808)))
(define-fun x903 ((x808 Int)) Int (ite (= x808 x1371) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x672 x808)))
(define-fun x802 ((x808 Int)) Int (ite (= x808 x538) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x903 x808)))
(define-fun x583 ((x808 Int)) Int (ite (= x142 x808) x1223 (x802 x808)))
(define-fun x766 ((x808 Int)) Int (ite x1086 (x583 x808) (ite x1193 (x802 x808) (x1055 x808))))
(define-fun x291 ((x808 Int)) Int (ite (= x808 x622) 0 (x766 x808)))
(define-fun x329 ((x808 Int)) Int (ite (= x808 x937) x1424 (x291 x808)))
(define-fun x27 ((x808 Int)) Int (ite (= x1337 x808) x1434 (x329 x808)))
(define-fun x884 ((x808 Int)) Int (ite (= x808 x1238) x1173 (x27 x808)))
(define-fun x920 ((x808 Int)) Int (ite (= x29 x808) x899 (x884 x808)))
(define-fun x295 ((x808 Int)) Int (ite (= x622 x808) x511 (x920 x808)))
(define-fun x1035 ((x808 Int)) Int (ite (= x808 x1158) x26 (x295 x808)))
(define-fun x705 ((x808 Int)) Int (ite x398 (x535 x808) (x1035 x808)))
(define-fun x1388 ((x808 Int)) Int (ite (= x808 x646) 57 (x705 x808)))
(define-fun x1212 ((x808 Int)) Int (ite (= x24 x808) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x1388 x808)))
(define-fun x338 ((x808 Int)) Int (ite (= x808 x548) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1212 x808)))
(define-fun x1565 ((x808 Int)) Int (ite (= x808 x423) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x338 x808)))
(define-fun x249 ((x808 Int)) Int (ite (= x516 x808) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x1565 x808)))
(define-fun x992 ((x808 Int)) Int (ite (= x808 x87) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x249 x808)))
(define-fun x619 ((x808 Int)) Int (ite (= x600 x808) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x992 x808)))
(define-fun x1069 ((x808 Int)) Int (ite (= x808 x1324) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x619 x808)))
(define-fun x452 ((x808 Int)) Int (ite (= x557 x808) x521 (x1069 x808)))
(define-fun x1407 ((x808 Int)) Int (ite (= x808 x552) x897 (x452 x808)))
(define-fun x483 ((x808 Int)) Int (ite (= x487 x808) x262 (x1407 x808)))
(define-fun x402 ((x808 Int)) Int (ite (= x288 x808) x1573 (x483 x808)))
(define-fun x1505 ((x808 Int)) Int (ite x567 (x483 x808) (ite x1426 (x1407 x808) (ite x1549 (x452 x808) (ite x351 (x1069 x808) (x402 x808))))))
(define-fun x465 ((x808 Int)) Int (ite (= x808 x1107) 0 (x1505 x808)))
(define-fun x46 ((x808 Int)) Int (ite (= x808 x601) x1447 (x465 x808)))
(define-fun x1581 ((x808 Int)) Int (ite (= x808 x793) x1396 (x46 x808)))
(define-fun x898 ((x808 Int)) Int (ite (= x827 x808) x940 (x1581 x808)))
(define-fun x60 ((x808 Int)) Int (ite (= x33 x808) x1318 (x898 x808)))
(define-fun x147 ((x808 Int)) Int (ite (= x808 x219) x1266 (x60 x808)))
(define-fun x585 ((x808 Int)) Int (ite x1560 (x60 x808) (ite x1111 (x898 x808) (ite x1502 (x1581 x808) (ite x531 (x46 x808) (x147 x808))))))
(define-fun x1436 ((x808 Int)) Int (ite (= x808 x1107) x1108 (x585 x808)))
(define-fun x480 ((x808 Int)) Int (ite (= x808 x1126) x190 (x1436 x808)))
(define-fun x1339 ((x808 Int)) Int (ite (= x957 x808) x1136 (x480 x808)))
(define-fun x220 ((x808 Int)) Int (ite (= x808 x412) x275 (x1339 x808)))
(define-fun x761 ((x808 Int)) Int (ite (= x808 x66) x1435 (x220 x808)))
(define-fun x968 ((x808 Int)) Int (ite (= x808 x261) x203 (x761 x808)))
(define-fun x149 ((x808 Int)) Int (ite (= x808 x1044) x408 (x968 x808)))
(define-fun x1118 ((x808 Int)) Int (ite (= x808 x41) x457 (x149 x808)))
(define-fun x280 ((x808 Int)) Int (ite (= x808 x84) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x1118 x808)))
(define-fun x850 ((x808 Int)) Int (ite (= x808 x854) x334 (x280 x808)))
(define-fun x1162 ((x808 Int)) Int (ite (= x384 x808) x388 (x850 x808)))
(define-fun x1137 ((x808 Int)) Int (ite (= x818 x808) x1307 (x1162 x808)))
(define-fun x82 ((x808 Int)) Int (ite (= x808 x54) x1312 (x1137 x808)))
(define-fun x893 ((x808 Int)) Int (ite (= x808 x582) x675 (x82 x808)))
(define-fun x439 ((x808 Int)) Int (ite x499 (x893 x808) (x1118 x808)))
(define-fun x536 ((x808 Int)) Int (ite (= x808 x990) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x439 x808)))
(define-fun x876 ((x808 Int)) Int (ite (= x732 x808) x1450 (x536 x808)))
(define-fun x1253 ((x808 Int)) Int (ite (= x322 x808) x1135 (x876 x808)))
(define-fun x739 ((x808 Int)) Int (ite (= x808 x990) 0 (x1253 x808)))
(define-fun x267 ((x808 Int)) Int (ite (= x1216 x808) x880 (x739 x808)))
(define-fun x312 ((x808 Int)) Int (ite (= x808 x1528) x1364 (x267 x808)))
(define-fun x1576 ((x808 Int)) Int (ite (= x851 x808) x382 (x312 x808)))
(define-fun x690 ((x808 Int)) Int (ite (= x741 x808) x681 (x1576 x808)))
(define-fun x1198 ((x808 Int)) Int (x768 x808))
(define-fun x1269 ((x808 Int)) Int (ite (= x808 x1227) x1202 (x690 x808)))
(define-fun x608 ((x808 Int)) Int (ite x335 (x1269 x808) (ite x323 (x1269 x808) (x1253 x808))))
(define-fun x1226 ((x808 Int)) Int (ite (= x808 x354) 2 (x608 x808)))
(define-fun x1033 ((x808 Int)) Int (ite (= x1079 x808) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x1226 x808)))
(define-fun x747 ((x808 Int)) Int (ite (= x1279 x808) 2 (x1033 x808)))
(define-fun x629 ((x808 Int)) Int (ite (= x808 x1449) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x747 x808)))
(define-fun x64 ((x808 Int)) Int (ite (= x866 x808) x275 (x629 x808)))
(define-fun x1366 ((x808 Int)) Int (ite (= x909 x808) 9 (x64 x808)))
(define-fun x1182 ((x808 Int)) Int (ite (= x183 x808) x574 (x1366 x808)))
(define-fun x975 ((x808 Int)) Int (ite (= x808 x253) x1307 (x1182 x808)))
(define-fun x890 ((x808 Int)) Int (ite (= x277 x808) x1077 (x975 x808)))
(define-fun x1571 ((x808 Int)) Int (ite (= x1421 x808) x528 (x890 x808)))
(define-fun x595 ((x808 Int)) Int (ite (= x808 x843) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1571 x808)))
(define-fun x1288 ((x808 Int)) Int (ite (= x1195 x808) x542 (x595 x808)))
(define-fun x1229 ((x808 Int)) Int (ite (= x645 x808) x1177 (x1288 x808)))
(define-fun x662 ((x808 Int)) Int (ite (= x387 x808) x1356 (x1229 x808)))
(define-fun x313 ((x808 Int)) Int (ite (= x808 x1097) 128 (x662 x808)))
(define-fun x655 ((x808 Int)) Int (ite (= x808 x853) x1554 (x313 x808)))
(define-fun x1092 ((x808 Int)) Int (ite (= x1006 x808) x988 (x655 x808)))
(define-fun x1002 ((x808 Int)) Int (ite (= x808 x395) x196 (x1092 x808)))
(define-fun x740 ((x808 Int)) Int (ite (= x808 x189) x902 (x1002 x808)))
(define-fun x1114 ((x808 Int)) Int (ite (= x1071 x808) x1423 (x740 x808)))
(define-fun x1163 ((x808 Int)) Int (ite x1214 (x740 x808) (ite x168 (x1002 x808) (ite x1240 (x1092 x808) (ite x69 (x655 x808) (x1114 x808))))))
(define-fun x332 ((x808 Int)) Int (ite (= x685 x808) 0 (x1163 x808)))
(define-fun x1413 ((x808 Int)) Int (ite (and (>= x808 x843) (< x808 (+ 64 x843))) (x915 (- x808 x843)) (x332 x808)))
(define-fun x235 ((x808 Int)) Int (ite x734 (x1413 x808) (x332 x808)))
(define-fun x1536 ((x808 Int)) Int (ite (and (< x808 (+ 64 x843)) (>= x808 x843)) (x915 (- x808 x843)) (x235 x808)))
(define-fun x1507 ((x808 Int)) Int (ite (= x808 x945) 2 (x1536 x808)))
(define-fun x798 ((x808 Int)) Int (ite (= x808 x981) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x1507 x808)))
(define-fun x1313 ((x808 Int)) Int (ite (= x808 x1053) 2 (x798 x808)))
(define-fun x115 ((x808 Int)) Int (ite (= x1014 x808) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x1313 x808)))
(define-fun x1129 ((x808 Int)) Int (ite (= x808 x1113) 2 (x115 x808)))
(define-fun x1367 ((x808 Int)) Int (ite (= x965 x808) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x1129 x808)))
(define-fun x1340 ((x808 Int)) Int (ite (= x808 x300) 2 (x1367 x808)))
(define-fun x1056 ((x808 Int)) Int (ite (= x908 x808) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x1340 x808)))
(define-fun x1495 ((x808 Int)) Int (ite x1491 (x1367 x808) (x1056 x808)))
(define-fun x15 ((x808 Int)) Int (ite (= x808 x53) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1495 x808)))
(define-fun x942 ((x808 Int)) Int (ite (= x808 x283) x901 (x15 x808)))
(define-fun x1236 ((x808 Int)) Int (ite (= x657 x808) x1010 (x942 x808)))
(define-fun x1261 ((x808 Int)) Int (ite (= x786 x808) x1530 (x1236 x808)))
(define-fun x1231 ((x808 Int)) Int (ite (= x500 x808) 128 (x1261 x808)))
(define-fun x1547 ((x808 Int)) Int (ite (= x1489 x808) x877 (x1231 x808)))
(define-fun x226 ((x808 Int)) Int (ite (and (>= x808 x162) (> (+ x162 x877) x808)) (x824 (- (+ x808 x469) x162)) (x1547 x808)))
(define-fun x125 ((x808 Int)) Int (ite (= x1299 x808) 0 (x226 x808)))
(define-fun x886 ((x808 Int)) Int (ite (and (>= x808 x53) (< x808 (+ x53 64))) (x713 (- x808 x53)) (x125 x808)))
(define-fun x1154 ((x808 Int)) Int (ite (= x1076 x808) x345 (x809 x808)))
(define-fun x1323 ((x808 Int)) Int (ite (= x808 x406) x832 (x570 x808)))
(define-fun x1110 ((x808 Int)) Int (ite x374 (x570 x808) (x1323 x808)))
(define-fun x1219 ((x808 Int)) Int (ite x374 (x1154 x808) (x809 x808)))
(define-fun x11 ((x808 Int)) Int (ite (= x790 x808) x365 (x626 x808)))
(define-fun x788 ((x808 Int)) Int (ite (= x790 x808) x34 (x429 x808)))
(define-fun x878 ((x808 Int)) Int 0)
(define-fun x99 ((x808 Int)) Int (ite (= x808 704) x1445 (x639 x808)))
(define-fun x240 ((x808 Int)) Int (ite (= 736 x808) x340 (x99 x808)))
(define-fun x1357 ((x808 Int)) Int (ite (= 768 x808) x44 (x240 x808)))
(define-fun x1459 ((x808 Int)) Int (ite (= x808 800) x1381 (x1357 x808)))
(define-fun x255 ((x808 Int)) Int (ite (= 832 x808) x791 (x1459 x808)))
(define-fun x568 ((x808 Int)) Int (ite (= 864 x808) x1309 (x255 x808)))
(define-fun x1281 ((x808 Int)) Int (ite (= 896 x808) x632 (x568 x808)))
(define-fun x421 ((x808 Int)) Int (ite (= 928 x808) x169 (x1281 x808)))
(define-fun x820 ((x808 Int)) Int (ite (= 960 x808) x592 (x421 x808)))
(define-fun x716 ((x808 Int)) Int (ite x1132 (x886 x808) (x125 x808)))
(define-fun x1255 ((x808 Int)) Int (ite (and (> (+ x53 64) x808) (>= x808 x53)) (x713 (- x808 x53)) (x716 x808)))
(define-fun x505 ((x808 Int)) Int (ite (= x113 x808) 2 (x1255 x808)))
(define-fun x1230 ((x808 Int)) Int (ite (= x1139 x808) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x505 x808)))
(define-fun x1338 ((x808 Int)) Int (ite (= x808 x688) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x1230 x808)))
(define-fun x117 ((x808 Int)) Int (ite (= x293 x808) x1001 (x1338 x808)))
(define-fun x828 ((x808 Int)) Int (ite (= x808 x13) x276 (x117 x808)))
(define-fun x560 ((x808 Int)) Int (ite (= x817 x808) x1036 (x828 x808)))
(define-fun x462 ((x808 Int)) Int (ite (= x974 x808) x1010 (x560 x808)))
(define-fun x1401 ((x808 Int)) Int (ite (and (< x808 (+ x688 32)) (<= x688 x808)) (x399 (- x808 x688)) (x462 x808)))
(define-fun x867 ((x808 Int)) Int (ite x1406 (x1401 x808) (x462 x808)))
(define-fun x1161 ((x808 Int)) Int (ite (and (< x808 (+ 32 x688)) (>= x808 x688)) (x399 (- x808 x688)) (x867 x808)))
(assert (=> (<= x1480 10000) (= 0 (x892 x1480))))
(assert (= (x1156 (x1465 x501 x453 x589 x960 x943 x318)) x589))
(assert (x22 x765))
(assert (= (x663 (x92 x606 x1490)) x1490))
(assert (x22 x654))
(assert (x697 32))
(assert (x22 x40))
(assert (x955 1461501637330902918203684832716283019655932542975))
(assert (x22 x299))
(assert (= (x56 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) x805))
(assert (< (x92 x1497 x342) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x113))
(assert (< 10000 (x1465 x1275 x517 x258 x373 x426 x1015)))
(assert (=> (<= x368 10000) (= (x892 x368) 0)))
(assert (x22 x631))
(assert (not (x955 (x92 x501 x634))))
(assert (= x1406 (and x211 x1354)))
(assert (= (x1156 (x213 x1007 x271 x767 x587 x436 x1021 x1480)) x767))
(assert (x22 x366))
(assert (not (x955 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431))))
(assert (= x960 (x5 (x1465 x501 x453 x589 x960 x943 x318))))
(assert (> (x92 x1275 x1291) 10000))
(assert (= (and x77 (not x529)) x1012))
(assert (x22 x466))
(assert (x22 x908))
(assert (x22 x1371))
(assert (= (x1156 (x1335 x606 x468 x131 x649)) x131))
(assert (x22 x1039))
(assert (x22 x885))
(assert (= x726 (x1350 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726))))
(assert (x22 x245))
(assert (=> (>= 10000 x131) (= (x892 x131) 0)))
(assert (x22 x1108))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (x22 x138))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639870)))
(assert (= (x1026 (x1465 x606 x309 x513 x966 x47 x522)) x47))
(assert (= (or x1406 x1165) x236))
(assert (< (x722 x1282 x494 x1522) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1579))
(assert (x22 x571))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x22 x832))
(assert (=> (<= x74 10000) (= (x892 x74) 0)))
(assert (x22 x1275))
(assert (=> (<= x589 10000) (= 0 (x892 x589))))
(assert (= x555 (x1026 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (x22 x23))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1465 x1007 x1463 x1386 x150 x670 x1418)))
(assert (= (x56 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x1501))
(assert (x22 x1431))
(assert (x22 x67))
(assert (< (x722 64 x1445 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1543))
(assert (x22 x543))
(assert (x22 x862))
(assert (=> (<= x676 10000) (= 0 (x892 x676))))
(assert (=> (<= x1221 10000) (= 0 (x892 x1221))))
(assert (x955 16777215))
(assert (= (=> (and (= x675 (x1328 (- x270 32))) (> x674 x582) (= (x1414 (+ 32 x84)) x854) (= (x1414 (+ x582 32)) x498) (<= x582 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x582) (= (x893 x582) x1497) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x582)) (= x84 (x1414 (+ x582 32))) (= (x1414 (+ 32 x854)) x384) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x582)) (= (x1414 (+ 32 x384)) x818) (<= x582 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x674 (x1414 (+ 160 x84))) (not (= x582 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x1414 (+ 32 x818)) x54) (= x270 (x1328 (- x674 x582))) (= x1387 (<= x1497 224))) (and (=> (and (= (x213 x1497 x1523 x1514 x607 x1082 x1157 x859) x159) (= (x1465 x1497 x925 x926 x1438 x250 x661) x572) (= x602 (x1414 (+ 96 x498))) (= x434 (x893 x476)) (= x473 (x1414 (+ 128 x498))) (= (x1414 (+ 32 x498)) x281) (= x859 (x893 x50)) (= (x1414 (+ x498 160)) x50) (= (x893 x941) x67) (= x1152 (ite (= 0 x1497) x311 (ite (>= 32 x1497) x1368 (ite (>= 64 x1497) x363 (ite (<= x1497 96) x874 (ite (>= 128 x1497) x544 (ite (>= 160 x1497) x572 (ite (<= x1497 192) x159 (ite (>= 224 x1497) x1191 x1090))))))))) (= x1250 (x893 x1351)) (= (x893 x321) x396) (= x661 (x893 x643)) (= x1152 x1450) (= (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204) x1191) (= x1351 (x1414 (+ 64 x498))) (= (x893 x242) x1501) (= (x1414 (+ x498 64)) x615) (= (x893 x437) x204) (= x363 (x722 x1497 x1572 x1420)) (= (x893 x964) x1067) (= (x1414 (+ 96 x498)) x476) (= (x893 x870) x1514) (= x1539 (x1414 (+ x498 32))) (= x874 (x1335 x1497 x83 x1067 x1250)) (= (x893 x498) x83) (= x1153 (x893 x678)) (= x383 (x1414 (+ x498 64))) (= x250 (x893 x602)) (= (x1414 (+ x498 96)) x1427) (= (x1414 (+ 192 x498)) x437) (= x1157 (x893 x473)) (= (x1414 (+ 32 x498)) x308) (= (x893 x498) x1572) (= x357 (x893 x498)) (= x643 (x1414 (+ x498 128))) (= x826 (x893 x498)) (= x990 x674) (= x926 (x893 x367)) (= (x893 x1427) x1082) (= (x545 x1497 x826 x1192 x1153 x434) x544) (= (x92 x1497 x342) x1368) (= (x893 x1385) x607) (= (x893 x498) x342) (= (x893 x498) x925) (= x242 (x1414 (+ x498 128))) (= x789 (x893 x615)) (= x367 (x1414 (+ x498 32))) (= x941 (x1414 (+ 160 x498))) (= x1385 (x1414 (+ x498 64))) (= x311 (x682 0)) (= (x893 x1539) x1013) (= (x893 x308) x1192) (= (x1414 (+ x498 64)) x678) (= (x893 x383) x1438) (= (x893 x498) x1523) (= (x1414 (+ 32 x498)) x964) (= (x893 x281) x1420) (= x870 (x1414 (+ 32 x498))) (= (x1414 (+ 96 x498)) x321)) x1103) x1387)) x1532))
(assert (=> (>= 10000 x1000) (= 0 (x892 x1000))))
(assert (= (x892 (+ x197 1)) (x892 x197)))
(assert (= x1225 (x5 (x545 x1282 x1453 x996 x1225 x951))))
(assert (= 0 (x892 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x22 x988))
(assert (x22 x1099))
(assert (= x772 (and x77 x529)))
(assert (x22 x1480))
(assert (= x1410 (x1026 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (=> (<= x456 10000) (= 0 (x892 x456))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x930 x624 x541 x590 x244)))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (= (x1037 (x722 64 x704 3)) 64))
(assert (x22 x2))
(assert (= (x618 (x213 x1282 x331 x128 x1000 x555 x982 x456)) x456))
(assert (x22 x309))
(assert (= (x892 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (x22 x84))
(assert (= (or x1556 x734) x188))
(assert (= (and x1252 x37) x562))
(assert (=> (<= x1470 10000) (= 0 (x892 x1470))))
(assert (= x1461 (x5 (x1335 x930 x523 x1148 x1461))))
(assert (x22 x1439))
(assert (x22 x161))
(assert (= (x892 63076024560530113402979550242307453568063438748328787417531900361828837441551) 0))
(assert (x22 x218))
(assert (x22 x456))
(assert (x22 x459))
(assert (= (x1156 (x213 x1275 x71 x492 x298 x1516 x956 x879)) x492))
(assert (=> (>= 10000 x949) (= (x892 x949) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x1282 x1453 x996 x1225 x951)))
(assert (=> (>= 10000 x405) (= 0 (x892 x405))))
(assert (x22 x1385))
(assert (x22 x198))
(assert (x22 x341))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (x22 x1538))
(assert (= x1277 (x663 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (x22 x539))
(assert (x22 x193))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x722 64 x1136 3)))
(assert (= (x663 (x722 x1497 x1572 x1420)) x1572))
(assert (x22 x367))
(assert (= (x1156 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) x642))
(assert (x22 x922))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639844)))
(assert (=> (>= 10000 x222) (= 0 (x892 x222))))
(assert (x22 x751))
(assert (= x707 (x1026 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (=> (<= x1187 10000) (= 0 (x892 x1187))))
(assert (x22 x1295))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639839) 0))
(assert (=> (>= 10000 x989) (= 0 (x892 x989))))
(assert (not (x955 (x722 64 x1445 3))))
(assert (= (x892 x239) (x892 (+ x239 1))))
(assert (x455 x735 32))
(assert (not (x955 (x92 x865 x39))))
(assert (= x73 (=> (and (= (x1414 (+ 64 x300)) x1005) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x300) (not (= x300 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x300 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1005 x300) (= (x1414 (+ x300 32)) x908) (not (= x300 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x300) (= (not (< 2 x1267)) x433) (not (= x300 115792089237316195423570985008687907853269984665640564039457584007913129639872))) (and (=> (= x1005 x53) x155) x433))))
(assert (x22 x1093))
(assert (= (x1026 (x213 x1275 x71 x492 x298 x1516 x956 x879)) x1516))
(assert (x22 x1493))
(assert (x22 x478))
(assert (x22 x1079))
(assert (x22 x917))
(assert (< (x1335 66 x987 x122 x245) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1312))
(assert (x22 x422))
(assert (x225 x735))
(assert (= (x892 (+ 1 x636)) (x892 x636)))
(assert (= (x618 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)) x222))
(assert (x22 x738))
(assert (= (x1465 x606 x309 x513 x966 x47 x522) (x892 (x1465 x606 x309 x513 x966 x47 x522))))
(assert (= (=> (and (= x175 (not (< 4 x161))) (= (x1414 (+ 32 x219)) x1499) (= x1266 (x60 x248))) (and x175 (=> (and (= x803 4) (= (+ 32 x248) x1352) (= x1499 x41)) x801))) x1454))
(assert (x22 x94))
(assert (x22 x1290))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x22 x412))
(assert (< (x1465 x1282 x310 x116 x192 x959 x233) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1037 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415)) x1275))
(assert (x22 x1216))
(assert (x22 x1555))
(assert (= (and (not x328) x415) x1560))
(assert (x22 x993))
(assert (x955 4067465820))
(assert (=> (<= x45 10000) (= 0 (x892 x45))))
(assert (= (x1026 (x545 x865 x1370 x774 x1511 x256)) x256))
(assert (= (x5 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) x549))
(assert (=> (>= 10000 x1441) (= (x892 x1441) 0)))
(assert (=> (<= x40 10000) (= 0 (x892 x40))))
(assert (= (x892 (x722 64 x1136 3)) (x722 64 x1136 3)))
(assert (= (and x1283 x835) x524))
(assert (x22 x1331))
(assert (= x144 (x1156 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (x955 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (x22 x921))
(assert (= (x1037 (x92 x865 x39)) x865))
(assert (= (or x1525 x1132) x211))
(assert (x22 x1515))
(assert (x22 x853))
(assert (not (x955 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726))))
(assert (x225 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x22 x61))
(assert (x22 x1227))
(assert (x22 x1449))
(assert (x22 x72))
(assert (x22 x426))
(assert (x22 x842))
(assert (=> (>= 10000 x634) (= (x892 x634) 0)))
(assert (= (x663 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859)) x1523))
(assert (= (and x43 x1473) x1425))
(assert (x22 x652))
(assert (x22 x334))
(assert (=> (>= 10000 x1013) (= 0 (x892 x1013))))
(assert (x22 x787))
(assert (x22 x110))
(assert (x22 x1376))
(assert (= (x892 (+ 1 x664)) (x892 x664)))
(assert (=> (>= 10000 x1370) (= 0 (x892 x1370))))
(assert (x22 x1546))
(assert (= (x1156 (x213 x930 x1334 x1555 x887 x695 x917 x1373)) x1555))
(assert (x22 x1085))
(assert (= (x892 (x722 x865 x1294 x177)) (x722 x865 x1294 x177)))
(assert (= (x1026 (x545 x930 x624 x541 x590 x244)) x244))
(assert (x22 x1171))
(assert (= (x213 x1007 x271 x767 x587 x436 x1021 x1480) (x892 (x213 x1007 x271 x767 x587 x436 x1021 x1480))))
(assert (=> (>= 10000 x1023) (= (x892 x1023) 0)))
(assert (=> (>= 10000 x263) (= (x892 x263) 0)))
(assert (x22 x1501))
(assert (x22 x986))
(assert (x22 x103))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x1275 x711 x1317 x214)))
(assert (x22 x1013))
(assert (x22 x1166))
(assert (x22 x286))
(assert (x22 x951))
(assert (x22 x1139))
(assert (not (x955 (x545 x606 x1084 x1515 x1295 x1102))))
(assert (x22 x1097))
(assert (= (and (not x1329) x55) x1525))
(assert (= (x5 (x1335 x606 x468 x131 x649)) x649))
(assert (=> (>= 10000 x153) (= 0 (x892 x153))))
(assert (x22 x704))
(assert (=> (<= x834 10000) (= (x892 x834) 0)))
(assert (x22 x50))
(assert (x22 x989))
(assert (= (and (not x1283) x835) x1491))
(assert (x22 x1256))
(assert (= x127 (and x88 x448)))
(assert (= (x892 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)) (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)))
(assert (= x1538 (x663 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (= (x1037 (x545 x1007 x120 x989 x977 x1196)) x1007))
(assert (=> (>= 10000 x888) (= 0 (x892 x888))))
(assert (not (x955 (x603 x1282 x752 x110 x834 x427 x764 x40 x74))))
(assert (x22 x895))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= (x1026 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859)) x1082))
(assert (= (x892 (x1335 x1007 x543 x478 x702)) (x1335 x1007 x543 x478 x702)))
(assert (= (x5 (x545 x865 x1370 x774 x1511 x256)) x1511))
(assert (x22 x102))
(assert (= (x722 x1007 x479 x515) (x892 (x722 x1007 x479 x515))))
(assert (x22 x250))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x606 x468 x131 x649)))
(assert (x22 x349))
(assert (x22 x996))
(assert (x22 x762))
(assert (x22 x1175))
(assert (x22 x201))
(assert (x22 x752))
(assert (= x628 (x663 (x722 x501 x628 x1085))))
(assert (x22 x625))
(assert (= (x92 x865 x39) (x892 (x92 x865 x39))))
(assert (=> (>= 10000 x956) (= 0 (x892 x956))))
(assert (not (x955 (x722 64 x842 3))))
(assert (x225 1099511627775))
(assert (= (x1156 (x545 x1275 x1221 x263 x683 x1390)) x263))
(assert (x22 x1117))
(assert (x22 x774))
(assert (x22 x325))
(assert (= x510 (x5 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (=> (<= x1312 10000) (= 0 (x892 x1312))))
(assert (x22 x1177))
(assert (= x1275 (x1037 (x1335 x1275 x711 x1317 x214))))
(assert (= x596 (x1156 (x1335 x1282 x677 x596 x139))))
(assert (x22 x266))
(assert (x22 x549))
(assert (x22 x1143))
(assert (x955 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x22 x1251))
(assert (x22 x76))
(assert (x22 x189))
(assert (x22 x53))
(assert (x22 x405))
(assert (x594 x806))
(assert (= (x1037 (x722 x865 x1294 x177)) x865))
(assert (x22 x1050))
(assert (= (x892 (x213 x1282 x331 x128 x1000 x555 x982 x456)) (x213 x1282 x331 x128 x1000 x555 x982 x456)))
(assert (x14 x114))
(assert (x22 x541))
(assert (= x122 (x1156 (x1335 66 x987 x122 x245))))
(assert (x22 x1267))
(assert (x14 x819))
(assert (x22 x1420))
(assert (= (x1156 (x722 64 x275 x79)) x79))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639868)))
(assert (x22 x957))
(assert (x22 x870))
(assert (x22 x821))
(assert (x22 x596))
(assert (x22 x843))
(assert (= (x892 103603067176188370116793463780953604340491603117933565163376133325037439549440) 0))
(assert (= (x663 (x1335 x501 x848 x4 x70)) x848))
(assert (< (x1335 x930 x523 x1148 x1461) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x545 x1275 x1221 x263 x683 x1390)))
(assert (x22 x670))
(assert (x22 x826))
(assert (x22 x1149))
(assert (x22 x711))
(assert (= (and x88 (not x448)) x531))
(assert (=> (<= x839 10000) (= (x892 x839) 0)))
(assert (x955 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (=> (>= 10000 x1418) (= 0 (x892 x1418))))
(assert (=> (>= 10000 x1250) (= 0 (x892 x1250))))
(assert (x22 x137))
(assert (x22 x19))
(assert (=> (<= x743 10000) (= 0 (x892 x743))))
(assert (= (x892 18446744073709551487) 0))
(assert (= x206 (x1350 (x603 x930 x725 x929 x746 x936 x805 x1504 x206))))
(assert (=> (>= 10000 x501) (= (x892 x501) 0)))
(assert (> (x1465 x1497 x925 x926 x1438 x250 x661) 10000))
(assert (x22 x900))
(assert (x22 x1243))
(assert (=> (<= x491 10000) (= (x892 x491) 0)))
(assert (=> (>= 10000 x67) (= 0 (x892 x67))))
(assert (x22 x1221))
(assert (x22 x1522))
(assert (=> (>= 10000 x1225) (= (x892 x1225) 0)))
(assert (x22 x353))
(assert (= x1007 (x1037 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509))))
(assert (=> (<= x717 10000) (= (x892 x717) 0)))
(assert (= (x722 64 x1445 3) (x892 (x722 64 x1445 3))))
(assert (x22 x1332))
(assert (< 10000 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)))
(assert (x22 x1051))
(assert (x22 x520))
(assert (< (x603 x606 x1143 x642 x549 x491 x279 x1187 x726) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x829) (= 0 (x892 x829))))
(assert (x22 x1506))
(assert (=> (<= x47 10000) (= 0 (x892 x47))))
(assert (=> (>= 10000 x122) (= (x892 x122) 0)))
(assert (= (x892 (x1465 x1007 x1463 x1386 x150 x670 x1418)) (x1465 x1007 x1463 x1386 x150 x670 x1418)))
(assert (x22 x1122))
(assert (x22 x600))
(assert (= x427 (x1026 (x603 x1282 x752 x110 x834 x427 x764 x40 x74))))
(assert (x22 x6))
(assert (x22 x792))
(assert (x22 x1217))
(assert (x22 x210))
(assert (= (and x1425 x1545) x546))
(assert (= (x1156 (x545 x1497 x826 x1192 x1153 x434)) x1192))
(assert (= (x1037 (x545 x606 x1084 x1515 x1295 x1102)) x606))
(assert (x22 x637))
(assert (x22 x492))
(assert (x22 x1300))
(assert (x22 x899))
(assert (= x717 (x1156 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (= (x56 (x213 x501 x1538 x144 x631 x1546 x620 x1526)) x620))
(assert (= (x892 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)))
(assert (= x218 (x1350 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218))))
(assert (x22 x1181))
(assert (x22 x292))
(assert (=> (<= x1291 10000) (= (x892 x1291) 0)))
(assert (x22 x753))
(assert (x22 x1071))
(assert (x22 x815))
(assert (x22 x1034))
(assert (x22 x224))
(assert (x22 x32))
(assert (= (x722 x501 x628 x1085) (x892 (x722 x501 x628 x1085))))
(assert (x22 x1090))
(assert (x1475 x806))
(assert (=> (<= x116 10000) (= (x892 x116) 0)))
(assert (=> (>= 10000 x139) (= 0 (x892 x139))))
(assert (x22 x476))
(assert (=> (<= x83 10000) (= (x892 x83) 0)))
(assert (x22 x827))
(assert (x22 x1250))
(assert (< 10000 (x1335 x1497 x83 x1067 x1250)))
(assert (= x952 (and (not x51) x1024)))
(assert (= x1527 (=> (and (>= x394 1) (< x688 x174) (not (= x688 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1414 (+ x688 32)) x174) (not (= x688 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1161 x688) x366) (= (not (< 1 x1267)) x133) (<= x688 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x688) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x688))) (and x133 (=> (and (= x366 x440) (= x174 x75)) x1552)))))
(assert (not (x955 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204))))
(assert (=> (>= 10000 x1438) (= 0 (x892 x1438))))
(assert (x22 x791))
(assert (= (x1037 (x722 x501 x628 x1085)) x501))
(assert (x22 x999))
(assert (x22 x283))
(assert (not (x955 (x722 x930 x1506 x1470))))
(assert (=> (>= 10000 x244) (= (x892 x244) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x722 64 x1054 4)))
(assert (> (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204) 10000))
(assert (=> (>= 10000 x702) (= 0 (x892 x702))))
(assert (= x83 (x663 (x1335 x1497 x83 x1067 x1250))))
(assert (=> (<= x1085 10000) (= 0 (x892 x1085))))
(assert (x22 x574))
(assert (= x150 (x5 (x1465 x1007 x1463 x1386 x150 x670 x1418))))
(assert (x22 x1010))
(assert (=> (>= 10000 x842) (= 0 (x892 x842))))
(assert (= x943 (x1026 (x1465 x501 x453 x589 x960 x943 x318))))
(assert (= (x5 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x789))
(assert (= (x545 x501 x1149 x450 x227 x1009) (x892 (x545 x501 x1149 x450 x227 x1009))))
(assert (x22 x136))
(assert (< (x213 x865 x1277 x558 x1315 x158 x833 x257) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x685))
(assert (x22 x1042))
(assert (x22 x1058))
(assert (= (x1156 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) x929))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1465 x865 x1066 x1321 x1093 x1410 x829)))
(assert (not (x955 (x92 x606 x1490))))
(assert (x22 x318))
(assert (= (x603 x1282 x752 x110 x834 x427 x764 x40 x74) (x892 (x603 x1282 x752 x110 x834 x427 x764 x40 x74))))
(assert (x22 x1202))
(assert (x22 x365))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x501 x848 x4 x70)))
(assert (x22 x1173))
(assert (=> (>= 10000 x204) (= 0 (x892 x204))))
(assert (= (x663 (x1465 x1282 x310 x116 x192 x959 x233)) x310))
(assert (x697 x1267))
(assert (x22 x128))
(assert (x22 x873))
(assert (= x1020 (x5 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509))))
(assert (x22 x427))
(assert (x319 x973))
(assert (= (=> (and (or (and x51 (and (= x990 x354) (= 0 x973) (= 3 x947))) (and (and (and (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x990)) (= x1034 (x690 (x1414 (+ 32 x1216)))) (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x990)) (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x23 (x1328 (- x1216 32))) (= x1518 (= x209 0)) (= x851 (x1414 (+ x1528 32))) (= x738 (x1269 x23)) (= x209 (x380 1461501637330902918203684832716283019655932542975 x738)) (>= 1461501637330902918203684832716283019655932542975 x1202) (= (x690 (x1414 (+ 96 x1216))) x821) (= (x566 x1039 x1034 x1186 x821) x1202) (= (x1414 (+ 32 x1216)) x1528) (= (x690 (x1414 (+ 64 x1216))) x1186) (= x741 (x1414 (+ 32 x851))) (= x1227 (x1328 (- x1216 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x990)) (= 128 x1083) (= (x1414 (+ x990 32)) x1216) (= x1039 (x690 x1216)) (< x990 x1216)) (or (and (not x1518) (and (= x973 x738) (= x947 0) (= x1216 x354))) (and (and (= 0 x973) (= 1 x947) (= x354 x1216)) x1518))) (not x51))) (and (= x122 (x1253 x181)) (= (x1335 66 x987 x122 x245) x880) (= (x1253 x990) x987) (= x181 (x1414 (+ 32 x990))) (= x732 (x1414 (+ 2 x990))) (= x414 (x1414 (+ x990 64))) (= x245 (x1253 x414)) (= x322 (x1414 (+ x732 32))) (= x51 (> x681 57896044618658097711785492504343953926418782139537452191302581570759080747168)))) x1346) x1103))
(assert (x22 x1014))
(assert (= (x663 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) x725))
(assert (> (x722 x501 x628 x1085) 10000))
(assert (=> (>= 10000 x929) (= 0 (x892 x929))))
(assert (> (x1335 x865 x983 x743 x687) 10000))
(assert (x22 x196))
(assert (= (x663 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x752))
(assert (=> (<= x120 10000) (= 0 (x892 x120))))
(assert (=> (>= 10000 x1157) (= 0 (x892 x1157))))
(assert (=> (>= 10000 x1516) (= 0 (x892 x1516))))
(assert (= x746 (x5 (x603 x930 x725 x929 x746 x936 x805 x1504 x206))))
(assert (= (x1037 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) x501))
(assert (=> (<= x935 10000) (= 0 (x892 x935))))
(assert (x22 x203))
(assert (x22 x277))
(assert (= (x892 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (=> (>= 10000 x555) (= 0 (x892 x555))))
(assert (=> (<= x426 10000) (= (x892 x426) 0)))
(assert (x22 x1151))
(assert (x955 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (=> (<= x1497 10000) (= 0 (x892 x1497))))
(assert (x22 x314))
(assert (x22 x35))
(assert (x22 x1242))
(assert (x22 x1057))
(assert (x22 x244))
(assert (= (x663 (x1335 x1275 x711 x1317 x214)) x711))
(assert (= x1298 (and x967 x737)))
(assert (x22 x1020))
(assert (x22 x1150))
(assert (> (x1335 x1275 x711 x1317 x214) 10000))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (= (=> (and (= x862 (x1328 (- x41 x1107))) (= (x1414 (+ x1107 32)) x1521) (= (* x161 32) x296) (>= x41 1) (<= x1107 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1107) (<= x161 4) (< x1107 x41) (= (* 32 x161) x860) (= (x1328 (- x862 32)) x1108) (= x651 x41) (= x1300 x1352) (<= 1 x651) (= x803 x161) (= (>= 224 x606) x553) (= x606 (x1436 x1107)) (= (+ x860 x438) x1300) (= (x1414 (+ x793 x296)) x651) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1107)) (and (=> (and (= (x722 x606 x413 x907) x156) (= x457 (x1328 (- x372 32))) (= (x1414 (+ 32 x412)) x66) (= x501 (x1118 x41)) (= (x1335 x606 x468 x131 x649) x1500) (= (ite (not (= 0 x1018)) 1 0) x203) (= x412 (x1414 (+ x957 32))) (< x41 x582) (= (x1436 x1061) x513) (= (x1414 (+ 64 x1521)) x389) (= x1529 (x1414 (+ x1521 32))) (= (x1414 (+ x1521 32)) x1478) (= x413 (x1436 x1521)) (= (x1414 (+ 96 x1521)) x1417) (= (x1414 (+ x1521 160)) x400) (= x838 (x1414 (+ x1521 96))) (= (x1414 (+ 128 x1521)) x911) (= x1119 (x1414 (+ 32 x41))) (= (x1436 x838) x1102) (= x1243 (x1414 (+ x1521 96))) (= (x545 x606 x1084 x1515 x1295 x1102) x8) (= (x1328 (- x582 x41)) x372) (= x1126 (x1414 (+ 32 x41))) (= x171 (x1465 x606 x309 x513 x966 x47 x522)) (= x1029 (x1414 (+ x1521 64))) (= x339 (x213 x606 x1302 x1537 x847 x707 x691 x1483)) (= x537 (<= x501 224)) (= x1320 (x1414 (+ 64 x1521))) (= x765 (x1414 (+ x1521 64))) (= x216 (x682 0)) (= (x1436 x1521) x1084) (= (x1414 (+ x1126 192)) x582) (= x1579 (x1414 (+ 160 x1521))) (= (x1436 x1284) x1295) (= x1515 (x1436 x1478)) (= (x1436 x1142) x279) (= x1187 (x1436 x1579)) (= x691 (x1436 x911)) (= x1583 (x1414 (+ x1521 32))) (= (x1436 x1243) x47) (= x522 (x1436 x986)) (= (x1436 x1521) x468) (= (x1436 x1521) x309) (= x491 (x1436 x958)) (= (x1436 x1378) x1537) (= x966 (x1436 x1320)) (= (x1436 x1521) x1490) (= x131 (x1436 x1184)) (= x1302 (x1436 x1521)) (= (x92 x606 x1490) x710) (= x1044 (x1414 (+ 32 x261))) (= x1184 (x1414 (+ 32 x1521))) (= x1143 (x1436 x1521)) (= (x1436 x400) x1483) (= x847 (x1436 x765)) (= x986 (x1414 (+ x1521 128))) (= (x1436 x1583) x642) (= x1378 (x1414 (+ x1521 32))) (= (x1414 (+ x1521 128)) x1142) (or (and (<= x41 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x41 115792089237316195423570985008687907853269984665640564039457584007913129639714)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x41) (>= x41 1))) (= (x1414 (+ x1521 64)) x1284) (= x726 (x1436 x1030)) (= x549 (x1436 x389)) (= (x1414 (+ x1521 192)) x1030) (= x907 (x1436 x1529)) (= x957 (x1414 (+ 32 x1126))) (= x42 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) (= x261 (x1414 (+ x66 32))) (= x408 (ite (= x606 0) x216 (ite (>= 32 x606) x710 (ite (<= x606 64) x156 (ite (<= x606 96) x1500 (ite (<= x606 128) x8 (ite (>= 160 x606) x171 (ite (>= 192 x606) x339 (ite (<= x606 224) x42 x1484))))))))) (= (x1436 x1417) x707) (= (x1414 (+ 32 x1521)) x1061) (= x958 (x1414 (+ x1521 96))) (= (x1436 x1029) x649)) (and (=> (and (or (and (not x529) (= (ite x529 1 0) x796)) (and (= (ite (= x830 x1307) 1 0) x796) x529)) (and (= (x1414 (+ 64 x1119)) x378) (= x1546 (x1118 x397)) (= x978 (x1414 (+ 64 x1119))) (= (x1118 x751) x431) (= x369 (x92 x501 x634)) (= x4 (x1118 x290)) (= (x1414 (+ x1119 32)) x1362) (= (x1414 (+ x1119 96)) x497) (= x529 (= x1419 x1312)) (= (x1118 x792) x1085) (= (x1118 x497) x1009) (= x1526 (x1118 x304)) (= (x1118 x1119) x1149) (= (x1118 x193) x589) (= (x1118 x57) x943) (= x227 (x1118 x514)) (= (x1118 x1119) x628) (= x514 (x1414 (+ 64 x1119))) (= (x1414 (+ 128 x1119)) x1038) (= x432 (x722 x501 x628 x1085)) (= (x1118 x378) x839) (= (x1414 (+ x1119 32)) x290) (= (x1414 (+ x1119 160)) x304) (= (ite (= 0 x501) x906 (ite (>= 32 x501) x369 (ite (>= 64 x501) x432 (ite (<= x501 96) x954 (ite (>= 128 x501) x627 (ite (>= 160 x501) x1553 (ite (>= 192 x501) x330 (ite (>= 224 x501) x1360 x1239)))))))) x1135) (= (x1118 x1319) x1384) (= (x1414 (+ x1119 64)) x625) (= (x1414 (+ x1119 160)) x1319) (= x751 (x1414 (+ 192 x1119))) (= (x1414 (+ x1119 64)) x234) (= (x1414 (+ x1119 96)) x397) (= (x682 0) x906) (= (x1414 (+ x1119 32)) x591) (= (x1118 x1204) x620) (= x1045 (x1118 x507)) (= (x603 x501 x153 x822 x839 x327 x1045 x1384 x431) x1360) (= (x1414 (+ 96 x1119)) x57) (= x153 (x1118 x1119)) (= x453 (x1118 x1119)) (= (x213 x501 x1538 x144 x631 x1546 x620 x1526) x330) (= x634 (x1118 x1119)) (= (x1118 x1119) x848) (= x450 (x1118 x1362)) (= (x1118 x1038) x318) (= x70 (x1118 x234)) (= (x1118 x625) x631) (= (x1118 x978) x960) (= x1538 (x1118 x1119)) (= x1553 (x1465 x501 x453 x589 x960 x943 x318)) (= (x1414 (+ x1119 128)) x507) (= (x1118 x470) x822) (= x144 (x1118 x591)) (= x627 (x545 x501 x1149 x450 x227 x1009)) (= (x1414 (+ 96 x1119)) x454) (= (x1414 (+ x1119 32)) x470) (= x954 (x1335 x501 x848 x4 x70)) (= x193 (x1414 (+ x1119 32))) (= (x1414 (+ x1119 32)) x792) (= (x1414 (+ 128 x1119)) x1204) (= x327 (x1118 x454)))) x1566) x537)) x553)) x801))
(assert (=> (>= 10000 x1102) (= (x892 x1102) 0)))
(assert (=> (<= x1461 10000) (= 0 (x892 x1461))))
(assert (x22 x181))
(assert (= (or x499 x577) x1024))
(assert (= x607 (x5 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859))))
(assert (not (x955 (x92 x1275 x1291))))
(assert (x22 x1187))
(assert (x1475 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x955 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (x22 x943))
(assert (= x1556 (and (not x769) x881)))
(assert (x22 x1016))
(assert (=> (<= x1315 10000) (= (x892 x1315) 0)))
(assert (not (x955 (x1465 x606 x309 x513 x966 x47 x522))))
(assert (= (x1026 (x1465 x1007 x1463 x1386 x150 x670 x1418)) x670))
(assert (x22 x413))
(assert (> (x722 64 x1054 4) 10000))
(assert (= (x1037 (x1335 x501 x848 x4 x70)) x501))
(assert (= x879 (x618 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (x955 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (x22 x669))
(assert (x22 x310))
(assert (=> (<= x1463 10000) (= (x892 x1463) 0)))
(assert (= (x618 (x213 x606 x1302 x1537 x847 x707 x691 x1483)) x1483))
(assert (=> (<= x1282 10000) (= (x892 x1282) 0)))
(assert (x22 x519))
(assert (= x1497 (x1037 (x722 x1497 x1572 x1420))))
(assert (x22 x1370))
(assert (=> (<= x1112 10000) (= 0 (x892 x1112))))
(assert (x22 x243))
(assert (x22 x855))
(assert (x22 x183))
(assert (x22 x1487))
(assert (=> (>= 10000 x556) (= 0 (x892 x556))))
(assert (= (x1350 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) x1509))
(assert (= (x722 64 x704 3) (x892 (x722 64 x704 3))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (x22 x204))
(assert (= x949 (x56 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509))))
(assert (=> (>= 10000 x1522) (= 0 (x892 x1522))))
(assert (not (x955 (x1335 x1497 x83 x1067 x1250))))
(assert (= (x1335 66 x987 x122 x245) (x892 (x1335 66 x987 x122 x245))))
(assert (x22 x437))
(assert (not (x955 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509))))
(assert (< 10000 (x722 64 x1136 4)))
(assert (= 0 (x892 18446744073709551550)))
(assert (x22 x1238))
(assert (= x691 (x56 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (= (x663 (x545 x1007 x120 x989 x977 x1196)) x120))
(assert (> (x1465 x1282 x310 x116 x192 x959 x233) 10000))
(assert (= (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x913) (= (x1414 (+ x1006 x359)) x922) (= x769 (> x971 0)) (= (x1414 (+ x1554 31)) x806) (= (x1328 (- x922 x843)) x118) (>= x913 64) (= x685 (x1414 (+ x1554 x1006))) (= x359 (x380 115792089237316195423570985008687907853269984665640564039457584007913129639904 x806))) (or (and (not x769) (= x971 x35)) (and x769 (and (>= 4294967295 x913) (= 1 x35) (<= 64 x913))))) x812) x525))
(assert (x22 x1015))
(assert (x22 x517))
(assert (= (x1156 (x1465 x606 x309 x513 x966 x47 x522)) x513))
(assert (= (or x1012 x772) x1580))
(assert (x22 x71))
(assert (x22 x248))
(assert (= x1480 (x618 (x213 x1007 x271 x767 x587 x436 x1021 x1480))))
(assert (=> (>= 10000 x659) (= 0 (x892 x659))))
(assert (= (x722 64 x275 x79) (x892 (x722 64 x275 x79))))
(assert (x22 x521))
(assert (x22 x958))
(assert (x22 x1304))
(assert (< 10000 (x722 x606 x413 x907)))
(assert (x22 x1364))
(assert (=> (<= x642 10000) (= (x892 x642) 0)))
(assert (= x1315 (x5 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (not (x955 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (x22 x1004))
(assert (x22 x561))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)))
(assert (=> (<= x436 10000) (= 0 (x892 x436))))
(assert (= (and x881 x769) x734))
(assert (not (x955 (x722 64 x1054 4))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x501 x634)))
(assert (= (=> (= (= x796 0) x775) (and (=> (and (and (= x1112 x1450) (= x990 x582)) (not x775)) x1103) (=> x775 x1532))) x1566))
(assert (= (x892 18446744073709551391) 0))
(assert (x22 x221))
(assert (x22 x979))
(assert (x22 x888))
(assert (= (x603 x930 x725 x929 x746 x936 x805 x1504 x206) (x892 (x603 x930 x725 x929 x746 x936 x805 x1504 x206))))
(assert (= x1111 (and x333 (not x362))))
(assert (= (or x1263 x567 x1426 x351 x1549) x88))
(assert (=> (<= x1373 10000) (= 0 (x892 x1373))))
(assert (x22 x688))
(assert (x955 18446744073709551615))
(assert (x22 x1292))
(assert (x22 x527))
(assert (=> (>= 10000 x70) (= (x892 x70) 0)))
(assert (x22 x732))
(assert (x22 x1308))
(assert (x22 x1005))
(assert (> (x545 x930 x624 x541 x590 x244) 10000))
(assert (x22 x805))
(assert (x22 x281))
(assert (x22 x1461))
(assert (x22 x719))
(assert (= 0 (x892 39095828447348766818467541868648093896559026265977760979361568868651215582053)))
(assert (x22 x616))
(assert (x22 x726))
(assert (x955 911662625))
(assert (= x926 (x1156 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (= (and x1486 (not x1040)) x1322))
(assert (x22 x229))
(assert (= (x5 (x1465 x930 x885 x888 x405 x130 x368)) x405))
(assert (= (x663 (x722 x1275 x1099 x1211)) x1099))
(assert (x22 x170))
(assert (= (x56 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x764))
(assert (not (x955 (x92 x1007 x846))))
(assert (=> (<= x996 10000) (= (x892 x996) 0)))
(assert (= (x1156 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) x822))
(assert (= (x663 (x1465 x865 x1066 x1321 x1093 x1410 x829)) x1066))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (=> (<= x983 10000) (= 0 (x892 x983))))
(assert (x22 x869))
(assert (not (x955 (x722 64 x1136 4))))
(assert (= (x5 (x1465 x606 x309 x513 x966 x47 x522)) x966))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (=> (<= x885 10000) (= 0 (x892 x885))))
(assert (= x1502 (and x127 (not x630))))
(assert (x22 x385))
(assert (> (x213 x930 x1334 x1555 x887 x695 x917 x1373) 10000))
(assert (x22 x475))
(assert (x22 x703))
(assert (< (x722 x501 x628 x1085) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x487))
(assert (x22 x590))
(assert (x22 x715))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x1282 x677 x596 x139)))
(assert (x594 x509))
(assert (= (x663 (x722 64 x842 3)) x842))
(assert (< 10000 (x92 x606 x1490)))
(assert (x22 x926))
(assert (= (x892 39095828447348766818467541868648093896559026261938444753180772323039453799525) 0))
(assert (= (x603 x1275 x464 x717 x510 x59 x614 x659 x1415) (x892 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (=> (<= x1420 10000) (= 0 (x892 x1420))))
(assert (=> (<= x245 10000) (= (x892 x245) 0)))
(assert (x22 x512))
(assert (not (x955 (x1335 66 x987 x122 x245))))
(assert (x22 x1157))
(assert (= x1250 (x5 (x1335 x1497 x83 x1067 x1250))))
(assert (x22 x511))
(assert (x22 x947))
(assert (x22 x1025))
(assert (x22 x44))
(assert (=> (<= x1504 10000) (= 0 (x892 x1504))))
(assert (x22 x158))
(assert (x22 x1320))
(assert (x22 x1352))
(assert (= 66 (x1037 (x1335 66 x987 x122 x245))))
(assert (= (x663 (x92 x1282 x1570)) x1570))
(assert (=> (<= x1445 10000) (= (x892 x1445) 0)))
(assert (x22 x946))
(assert (= (x892 (x92 x1497 x342)) (x92 x1497 x342)))
(assert (= (=> (and (or (and x1329 (and (<= x1199 4294967295) (<= 64 x1199) (= 1 x430))) (and (not x1329) (= x430 x170))) (and (= x1429 (x1328 (- x576 x1248))) (= (x1414 (+ x980 x1248)) x696) (= x21 (x1328 (- x576 x877))) (= x1299 (x1414 (+ x162 x877))) (or (>= x379 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x379 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x500 (x1414 (+ 32 x786))) (= x1329 (< 0 x170)) (= x162 (x1414 (+ x1489 32))) (= (x824 x360) x565) (= x119 (x824 x1197)) (<= x119 340282366920938463463374607431768211455) (= (x1414 (+ x283 32)) x657) (= (x380 115792089237316195423570985008687907853269984665640564039457584007913129639904 x735) x1075) (or (and (> x379 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050)) (and (= (<= x379 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x379 x1050))) (= x126 (x824 x1248)) (= x496 (x1328 (- x731 31))) (= (x1414 (+ 64 x696)) x360) (= (x1414 (+ x657 32)) x786) (not (= x565 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x1328 (- x576 x696)) x731) (= x877 (x824 x146)) (= x146 (x1414 (+ x696 x565))) (>= x1199 64) (= x379 (x824 x1248)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x565) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x496)) (and (< x565 x496) (= (<= x496 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x565 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x1414 (+ x53 4)) x283) (>= 18446744073709551615 x877) (= x469 (x1414 (+ 32 x146))) (= (x1414 (+ 128 x283)) x1489) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x980) (<= x980 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x9 (x1414 (+ x379 x1248))) (<= x901 1461501637330902918203684832716283019655932542975) (= (x824 x644) x901) (= x1197 (x1414 (+ x9 32))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x980) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050)) (and (= (<= x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x980)) (< x980 x1050))) (= (x1328 (- x1429 95)) x1050) (not (= x731 57896044618658097711785492504343953926634992332820282019728792003956564819999)) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x469)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x469)) (> x469 x21)))) (= x1151 (x1414 (+ x1075 x162))) (or (and (< x126 x1050) (= (<= x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126))) (and (> x126 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1328 (- x1151 x53)) x350) (= x735 (+ 31 x877)) (= x644 (x1414 (+ x1248 x126))) (or (<= x126 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x126 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= x1199 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x980 (x824 x1248)))) x417) x155))
(assert (=> (>= 10000 x846) (= (x892 x846) 0)))
(assert (=> (<= x257 10000) (= 0 (x892 x257))))
(assert (x22 x623))
(assert (= x1546 (x1026 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (= (x56 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) x279))
(assert (= (x892 22702217935337460250815789587045760009867340590954827992904518080408871501824) 0))
(assert (=> (>= 10000 x150) (= 0 (x892 x150))))
(assert (x225 x973))
(assert (x22 x144))
(assert (x955 3686331914))
(assert (= x1263 (and x223 x1280)))
(assert (x1475 1099511627776))
(assert (=> (<= x1514 10000) (= 0 (x892 x1514))))
(assert (= (or x1233 x481) x1531))
(assert (x22 x1513))
(assert (x22 x897))
(assert (x22 x1206))
(assert (= (x1026 (x213 x930 x1334 x1555 x887 x695 x917 x1373)) x695))
(assert (= (and x1298 x928) x1086))
(assert (= (x1156 (x545 x930 x624 x541 x590 x244)) x541))
(assert (= (x663 (x545 x1497 x826 x1192 x1153 x434)) x826))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (=> (>= 10000 x144) (= 0 (x892 x144))))
(assert (x22 x1044))
(assert (x22 x615))
(assert (x22 x510))
(assert (not (x955 (x1465 x501 x453 x589 x960 x943 x318))))
(assert (x22 x569))
(assert (not (x955 (x1465 x1007 x1463 x1386 x150 x670 x1418))))
(assert (x22 x1419))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x22 x830))
(assert (x225 x806))
(assert (x22 x1068))
(assert (x22 x980))
(assert (x22 x251))
(assert (x22 x1169))
(assert (x22 x736))
(assert (=> (<= x468 10000) (= 0 (x892 x468))))
(assert (x22 x21))
(assert (=> (<= x746 10000) (= 0 (x892 x746))))
(assert (x22 x894))
(assert (x22 x1347))
(assert (not (x955 (x722 64 x275 x79))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (= (x92 x501 x634) (x892 (x92 x501 x634))))
(assert (= x233 (x56 (x1465 x1282 x310 x116 x192 x959 x233))))
(assert (x22 x1215))
(assert (= (x56 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) x1045))
(assert (x22 x818))
(assert (=> (>= 10000 x543) (= (x892 x543) 0)))
(assert (x22 x609))
(assert (x22 x1521))
(assert (= (x892 (x545 x1007 x120 x989 x977 x1196)) (x545 x1007 x120 x989 x977 x1196)))
(assert (x22 x227))
(assert (x22 x112))
(assert (x22 x817))
(assert (x22 x410))
(assert (x22 x1164))
(assert (= (x1037 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x1282))
(assert (x22 x632))
(assert (x22 x649))
(assert (x22 x1386))
(assert (= (x663 (x213 x1282 x331 x128 x1000 x555 x982 x456)) x331))
(assert (x22 x496))
(assert (x22 x1557))
(assert (x22 x178))
(assert (= x888 (x1156 (x1465 x930 x885 x888 x405 x130 x368))))
(assert (x22 x877))
(assert (x1561 x72))
(assert (x22 x1061))
(assert (x22 x851))
(assert (x22 x933))
(assert (x22 x973))
(assert (=> (>= 10000 x413) (= (x892 x413) 0)))
(assert (x22 x1573))
(assert (x22 x479))
(assert (x22 x1120))
(assert (x22 x1148))
(assert (not (x955 (x213 x1007 x271 x767 x587 x436 x1021 x1480))))
(assert (=> (<= x865 10000) (= 0 (x892 x865))))
(assert (< 10000 (x1465 x930 x885 x888 x405 x130 x368)))
(assert (= (x892 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (x22 x1107))
(assert (= (or x1531 x1491) x55))
(assert (x22 x913))
(assert (x22 x1185))
(assert (= (x892 (+ 1 x152)) (x892 x152)))
(assert (= (x892 (x1465 x1275 x517 x258 x373 x426 x1015)) (x1465 x1275 x517 x258 x373 x426 x1015)))
(assert (< (x545 x865 x1370 x774 x1511 x256) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x956))
(assert (x22 x1184))
(assert (x22 x81))
(assert (x22 x1179))
(assert (= (x892 51755322175217624492750805572474109157238378692794855914282927279451288895488) 0))
(assert (x22 x1569))
(assert (=> (<= x214 10000) (= (x892 x214) 0)))
(assert (=> (<= x959 10000) (= (x892 x959) 0)))
(assert (=> (>= 10000 x431) (= 0 (x892 x431))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (=> (<= x513 10000) (= 0 (x892 x513))))
(assert (= x1426 (and (not x621) x562)))
(assert (x22 x436))
(assert (x22 x829))
(assert (x22 x776))
(assert (x22 x331))
(assert (x22 x786))
(assert (= (x545 x865 x1370 x774 x1511 x256) (x892 (x545 x865 x1370 x774 x1511 x256))))
(assert (= (x1026 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) x327))
(assert (x22 x1260))
(assert (x22 x458))
(assert (x22 x1418))
(assert (x22 x1362))
(assert (=> (<= x649 10000) (= 0 (x892 x649))))
(assert (=> (<= x695 10000) (= 0 (x892 x695))))
(assert (=> (<= x318 10000) (= (x892 x318) 0)))
(assert (= x923 (and x1235 x1200)))
(assert (=> (>= 10000 x1384) (= (x892 x1384) 0)))
(assert (x22 x866))
(assert (= (x1026 (x1465 x1282 x310 x116 x192 x959 x233)) x959))
(assert (= (and (not x775) x1580) x577))
(assert (=> (>= 10000 x1501) (= 0 (x892 x1501))))
(assert (= (x892 (x92 x930 x458)) (x92 x930 x458)))
(assert (x22 x587))
(assert (= x743 (x1156 (x1335 x865 x983 x743 x687))))
(assert (=> (>= 10000 x331) (= 0 (x892 x331))))
(assert (x955 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (x22 x771))
(assert (< (x722 64 x704 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1586))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639742) 0))
(assert (x22 x1294))
(assert (=> (>= 10000 x683) (= 0 (x892 x683))))
(assert (x22 x653))
(assert (x22 x142))
(assert (= (x1335 x1282 x677 x596 x139) (x892 (x1335 x1282 x677 x596 x139))))
(assert (x22 x1373))
(assert (= x3 (and x546 x200)))
(assert (x22 x777))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x606 x1084 x1515 x1295 x1102)))
(assert (not (x955 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (=> (>= 10000 x1515) (= 0 (x892 x1515))))
(assert (x22 x431))
(assert (=> (>= 10000 x1143) (= 0 (x892 x1143))))
(assert (x22 x1017))
(assert (x38 32 x161))
(assert (= (x663 (x722 x606 x413 x907)) x413))
(assert (x955 18446744073709551391))
(assert (=> (>= 10000 x1490) (= 0 (x892 x1490))))
(assert (x22 x638))
(assert (= x1015 (x56 (x1465 x1275 x517 x258 x373 x426 x1015))))
(assert (=> (>= 10000 x453) (= 0 (x892 x453))))
(assert (=> (>= 10000 x110) (= (x892 x110) 0)))
(assert (= (x1465 x1282 x310 x116 x192 x959 x233) (x892 (x1465 x1282 x310 x116 x192 x959 x233))))
(assert (x22 x634))
(assert (= (x1026 (x545 x1275 x1221 x263 x683 x1390)) x1390))
(assert (< (x603 x930 x725 x929 x746 x936 x805 x1504 x206) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1228 (x1156 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509))))
(assert (=> (>= 10000 x1321) (= (x892 x1321) 0)))
(assert (= x1132 (and x55 x1329)))
(assert (=> (>= 10000 x1295) (= 0 (x892 x1295))))
(assert (=> (<= x484 10000) (= 0 (x892 x484))))
(assert (x22 x124))
(assert (=> (>= 10000 x1410) (= (x892 x1410) 0)))
(assert (x22 x764))
(assert (=> (>= 10000 x523) (= (x892 x523) 0)))
(assert (= (and x1476 x3) x409))
(assert (x22 x589))
(assert (x22 x558))
(assert (> (x92 x1007 x846) 10000))
(assert (= (x618 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x67))
(assert (x22 x1511))
(assert (x225 x1305))
(assert (=> (<= x926 10000) (= 0 (x892 x926))))
(assert (x22 x80))
(assert (= (x1156 (x722 64 x1445 3)) 3))
(assert (= (x1037 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)) x865))
(assert (x22 x494))
(assert (> (x722 x930 x1506 x1470) 10000))
(assert (< 10000 (x722 x865 x1294 x177)))
(assert (< 10000 (x545 x865 x1370 x774 x1511 x256)))
(assert (< (x1335 x1007 x543 x478 x702) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1386 (x1156 (x1465 x1007 x1463 x1386 x150 x670 x1418))))
(assert (= x1482 (and x51 x1024)))
(assert (x14 x1199))
(assert (x22 x1490))
(assert (x22 x66))
(assert (not (x955 (x545 x865 x1370 x774 x1511 x256))))
(assert (= (x1350 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x204))
(assert (= x515 (x1156 (x722 x1007 x479 x515))))
(assert (< 10000 (x213 x1275 x71 x492 x298 x1516 x956 x879)))
(assert (x955 340282366920938463463374607431768211455))
(assert (x22 x246))
(assert (x22 x470))
(assert (x22 x360))
(assert (not (x955 (x92 x930 x458))))
(assert (x22 x1088))
(assert (x22 x395))
(assert (= x1497 (x1037 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (x22 x744))
(assert (x22 x848))
(assert (= x351 (and x1160 (not x694))))
(assert (x22 x1028))
(assert (x22 x302))
(assert (= (x618 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) x484))
(assert (x22 x822))
(assert (= x4 (x1156 (x1335 x501 x848 x4 x70))))
(assert (x22 x949))
(assert (x22 x1192))
(assert (=> (>= 10000 x1245) (= 0 (x892 x1245))))
(assert (x22 x139))
(assert (x22 x1583))
(assert (x22 x879))
(assert (< 10000 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)))
(assert (x22 x1007))
(assert (x38 32 x1267))
(assert (< 10000 (x545 x1282 x1453 x996 x1225 x951)))
(assert (x22 x1542))
(assert (=> (>= 10000 x628) (= 0 (x892 x628))))
(assert (x22 x1006))
(assert (x22 x1432))
(assert (= (x1037 (x722 x1007 x479 x515)) x1007))
(assert (not (x955 (x722 x1282 x494 x1522))))
(assert (= (x663 (x545 x606 x1084 x1515 x1295 x1102)) x1084))
(assert (x22 x1018))
(assert (= (x618 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) x1504))
(assert (< 10000 (x722 64 x842 3)))
(assert (x22 x1237))
(assert (= x702 (x5 (x1335 x1007 x543 x478 x702))))
(assert (x22 x490))
(assert (x22 x702))
(assert (x22 x742))
(assert (= (x1156 (x722 x606 x413 x907)) x907))
(assert (= x71 (x663 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x213 x1275 x71 x492 x298 x1516 x956 x879)))
(assert (x22 x270))
(assert (x22 x907))
(assert (x22 x87))
(assert (= (x1026 (x213 x1007 x271 x767 x587 x436 x1021 x1480)) x436))
(assert (x22 x1321))
(assert (x22 x1433))
(assert (x22 x1528))
(assert (x1475 x1305))
(assert (= (x1037 (x213 x1007 x271 x767 x587 x436 x1021 x1480)) x1007))
(assert (x22 x293))
(assert (x455 x509 32))
(assert (= (x213 x930 x1334 x1555 x887 x695 x917 x1373) (x892 (x213 x930 x1334 x1555 x887 x695 x917 x1373))))
(assert (x22 x263))
(assert (x955 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (= x275 (x663 (x722 64 x275 x79))))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (= (x663 (x1465 x606 x309 x513 x966 x47 x522)) x309))
(assert (not (x955 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (x22 x34))
(assert (x22 x929))
(assert (x22 x785))
(assert (x22 x119))
(assert (x22 x468))
(assert (x22 x1121))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (= x846 (x663 (x92 x1007 x846))))
(assert (x22 x192))
(assert (x22 x454))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639806) 0))
(assert (x14 x872))
(assert (not (x955 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (x22 x372))
(assert (= x1453 (x663 (x545 x1282 x1453 x996 x1225 x951))))
(assert (= 4 (x1156 (x722 64 x1136 4))))
(assert (x22 x268))
(assert (> (x213 x1497 x1523 x1514 x607 x1082 x1157 x859) 10000))
(assert (= x506 (and x425 (not x1297))))
(assert (=> (<= x1099 10000) (= (x892 x1099) 0)))
(assert (= (x892 (x1335 x865 x983 x743 x687)) (x1335 x865 x983 x743 x687)))
(assert (=> (<= x966 10000) (= (x892 x966) 0)))
(assert (x14 x512))
(assert (= (x1156 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x110))
(assert (= 0 (x892 22264039863272420937079131806861516217942124584529674491290359742488301797376)))
(assert (x22 x174))
(assert (x22 x1458))
(assert (= x1200 (or x863 x1403)))
(assert (x22 x1443))
(assert (x22 x1278))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x865 x983 x743 x687)))
(assert (x22 x1291))
(assert (< (x213 x1497 x1523 x1514 x607 x1082 x1157 x859) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1350 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x74))
(assert (x22 x746))
(assert (= x1526 (x618 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (not (x955 (x1335 x501 x848 x4 x70))))
(assert (= (x892 (x92 x606 x1490)) (x92 x606 x1490)))
(assert (=> (<= x789 10000) (= (x892 x789) 0)))
(assert (= x1420 (x1156 (x722 x1497 x1572 x1420))))
(assert (not (x955 (x92 x1282 x1570))))
(assert (x22 x1286))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)))
(assert (=> (<= x342 10000) (= (x892 x342) 0)))
(assert (x22 x1009))
(assert (x22 x357))
(assert (x14 x1083))
(assert (x22 x1186))
(assert (= (x1156 (x213 x865 x1277 x558 x1315 x158 x833 x257)) x558))
(assert (x22 x834))
(assert (x22 x602))
(assert (x955 1099511627775))
(assert (x22 x1424))
(assert (x22 x450))
(assert (x22 x612))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x213 x1007 x271 x767 x587 x436 x1021 x1480)))
(assert (= (x892 (x213 x606 x1302 x1537 x847 x707 x691 x1483)) (x213 x606 x1302 x1537 x847 x707 x691 x1483)))
(assert (x22 x981))
(assert (x22 x1309))
(assert (= x704 (x663 (x722 64 x704 3))))
(assert (x22 x701))
(assert (x22 x41))
(assert (x22 x1537))
(assert (x22 x1453))
(assert (x22 x49))
(assert (= x333 (and x127 x630)))
(assert (< (x213 x606 x1302 x1537 x847 x707 x691 x1483) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x587) (= (x892 x587) 0)))
(assert (= (x1156 (x1465 x1275 x517 x258 x373 x426 x1015)) x258))
(assert (= (x892 (+ x179 1)) (x892 x179)))
(assert (= x192 (x5 (x1465 x1282 x310 x116 x192 x959 x233))))
(assert (= x355 (or x1086 x1193)))
(assert (= x1275 (x1037 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (= x834 (x5 (x603 x1282 x752 x110 x834 x427 x764 x40 x74))))
(assert (x22 x65))
(assert (x22 x153))
(assert (= (x56 (x213 x1007 x271 x767 x587 x436 x1021 x1480)) x1021))
(assert (not (x955 (x545 x1007 x120 x989 x977 x1196))))
(assert (x22 x345))
(assert (x14 x1584))
(assert (= x1462 (=> (and (= x423 (x1414 (+ x601 32))) (<= x646 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x646)) (<= x646 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1414 (+ 32 x87)) x600) (= x548 (x1414 (+ x24 32))) (= x1324 (x1414 (+ x600 32))) (= x353 (x1069 x646)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x646) (= x87 (x1414 (+ 32 x516))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x646)) (= x24 (x1414 (+ 32 x646))) (< x646 x601) (= x601 (x1414 (+ x646 96))) (not (= x646 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x1414 (+ 32 x423)) x516) (= x557 (x1414 (+ 139 x423))) (= (< 0 x353) x694)) (and (=> (not x694) x343) (=> (and (and (= (x1069 x24) x521) (= (< 32 x353) x37)) x694) (and (=> (and x37 (and (= (x1414 (+ x557 32)) x552) (= (x1414 (+ 32 x24)) x1217) (= x897 (x452 x1217)) (= (< 64 x353) x621))) (and (=> (not x621) x343) (=> (and (and (= x1178 (x1414 (+ 64 x24))) (= x262 (x1407 x1178)) (= (x1414 (+ 64 x557)) x487) (= x223 (> x353 96))) x621) (and (=> x223 x841) (=> (not x223) x343))))) (=> (not x37) x343)))))))
(assert (= (x1156 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859)) x1514))
(assert (= (x545 x1282 x1453 x996 x1225 x951) (x892 (x545 x1282 x1453 x996 x1225 x951))))
(assert (=> (>= 10000 x977) (= (x892 x977) 0)))
(assert (not (x955 (x722 x1497 x1572 x1420))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (= (x1026 (x1465 x930 x885 x888 x405 x130 x368)) x130))
(assert (= x606 (x1037 (x92 x606 x1490))))
(assert (= x982 (x56 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (= (x892 22703984782402238635145372884546502928383168074851703611862639686610164121600) 0))
(assert (x14 x913))
(assert (x22 x1113))
(assert (not (x955 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859))))
(assert (x22 x1279))
(assert (= (x56 (x1465 x1497 x925 x926 x1438 x250 x661)) x661))
(assert (x22 x708))
(assert (x955 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (= 64 (x1037 (x722 64 x1136 4))))
(assert (= (or x923 x10) x967))
(assert (= x450 (x1156 (x545 x501 x1149 x450 x227 x1009))))
(assert (=> (<= x987 10000) (= 0 (x892 x987))))
(assert (x22 x1317))
(assert (= (x1037 (x1335 x606 x468 x131 x649)) x606))
(assert (=> (>= 10000 x826) (= (x892 x826) 0)))
(assert (x22 x1153))
(assert (x22 x658))
(assert (x22 x1410))
(assert (= x1327 (x56 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218))))
(assert (x22 x836))
(assert (x22 x674))
(assert (= (x892 (x213 x865 x1277 x558 x1315 x158 x833 x257)) (x213 x865 x1277 x558 x1315 x158 x833 x257)))
(assert (= (x56 (x1465 x606 x309 x513 x966 x47 x522)) x522))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x722 x1497 x1572 x1420)))
(assert (x22 x214))
(assert (= (x892 (x1335 x606 x468 x131 x649)) (x1335 x606 x468 x131 x649)))
(assert (=> (>= 10000 x1511) (= 0 (x892 x1511))))
(assert (x22 x628))
(assert (x22 x748))
(assert (x22 x271))
(assert (x22 x1001))
(assert (x22 x918))
(assert (x22 x1257))
(assert (= (x1156 (x1335 x1007 x543 x478 x702)) x478))
(assert (=> (>= 10000 x661) (= 0 (x892 x661))))
(assert (=> (>= 10000 x158) (= (x892 x158) 0)))
(assert (x22 x1100))
(assert (< 10000 (x213 x865 x1277 x558 x1315 x158 x833 x257)))
(assert (x22 x253))
(assert (x22 x1285))
(assert (= (x722 x1275 x1099 x1211) (x892 (x722 x1275 x1099 x1211))))
(assert (=> (>= 10000 x39) (= 0 (x892 x39))))
(assert (x22 x1384))
(assert (x22 x1489))
(assert (not (x955 (x722 x606 x413 x907))))
(assert (= x839 (x5 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431))))
(assert (x22 x1374))
(assert (x955 18446744073709551487))
(assert (=> (>= 10000 x822) (= 0 (x892 x822))))
(assert (x22 x601))
(assert (= x606 (x1037 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (x22 x457))
(assert (x22 x114))
(assert (x22 x1019))
(assert (=> (>= 10000 x192) (= 0 (x892 x192))))
(assert (x22 x1049))
(assert (not (x955 (x1465 x1282 x310 x116 x192 x959 x233))))
(assert (x22 x1245))
(assert (x22 x116))
(assert (x22 x242))
(assert (x22 x36))
(assert (= (x1156 (x722 64 x1054 4)) 4))
(assert (x22 x1284))
(assert (x955 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x892 (x1465 x865 x1066 x1321 x1093 x1410 x829)) (x1465 x865 x1066 x1321 x1093 x1410 x829)))
(assert (= x1280 (and x621 x562)))
(assert (x22 x645))
(assert (=> (>= 10000 x764) (= 0 (x892 x764))))
(assert (x22 x322))
(assert (=> (<= x1054 10000) (= (x892 x1054) 0)))
(assert (= (x663 (x1335 66 x987 x122 x245)) x987))
(assert (x955 4294967295))
(assert (x22 x1084))
(assert (x22 x960))
(assert (x22 x1584))
(assert (x22 x1539))
(assert (=> (<= x59 10000) (= 0 (x892 x59))))
(assert (= x1023 (x663 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218))))
(assert (= x39 (x663 (x92 x865 x39))))
(assert (x22 x1423))
(assert (x22 x1337))
(assert (x22 x440))
(assert (x22 x396))
(assert (=> (<= x936 10000) (= (x892 x936) 0)))
(assert (x22 x686))
(assert (x22 x911))
(assert (= (x892 (x1465 x501 x453 x589 x960 x943 x318)) (x1465 x501 x453 x589 x960 x943 x318)))
(assert (x22 x397))
(assert (x22 x1067))
(assert (x22 x676))
(assert (= x1275 (x1037 (x92 x1275 x1291))))
(assert (x22 x194))
(assert (x22 x233))
(assert (x22 x1208))
(assert (x22 x872))
(assert (= (x1026 (x545 x501 x1149 x450 x227 x1009)) x1009))
(assert (x22 x336))
(assert (x22 x941))
(assert (x22 x1483))
(assert (x22 x1029))
(assert (x22 x1307))
(assert (= (x1156 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x1013))
(assert (x22 x1572))
(assert (= (x892 (+ x1031 1)) (x892 x1031)))
(assert (= (x892 45887579694954924622689847950937698470056863744033464196450664576267108643884) 0))
(assert (= (x1156 (x722 x865 x1294 x177)) x177))
(assert (=> (<= x309 10000) (= 0 (x892 x309))))
(assert (x22 x57))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x1275 x1291)))
(assert (x22 x935))
(assert (x455 x973 1461501637330902918203684832716283019655932542976))
(assert (x1475 x973))
(assert (x22 x504))
(assert (= x977 (x5 (x545 x1007 x120 x989 x977 x1196))))
(assert (x594 x699))
(assert (x22 x382))
(assert (not (x955 (x722 x1275 x1099 x1211))))
(assert (= x214 (x5 (x1335 x1275 x711 x1317 x214))))
(assert (= (x663 (x545 x930 x624 x541 x590 x244)) x624))
(assert (=> (>= 10000 x1509) (= 0 (x892 x1509))))
(assert (= (and x1518 x952) x323))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639684) 0))
(assert (= (x663 (x722 x930 x1506 x1470)) x1506))
(assert (= (x663 (x92 x501 x634)) x634))
(assert (x22 x1529))
(assert (= x587 (x5 (x213 x1007 x271 x767 x587 x436 x1021 x1480))))
(assert (x22 x538))
(assert (not (x955 (x722 x501 x628 x1085))))
(assert (x22 x1343))
(assert (= x865 (x1037 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (=> (>= 10000 x464) (= (x892 x464) 0)))
(assert (x22 x16))
(assert (x22 x95))
(assert (x22 x1551))
(assert (not (x955 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (= 0 (x892 18446744073709551615)))
(assert (x22 x1395))
(assert (x22 x1248))
(assert (x22 x1311))
(assert (=> (>= 10000 x631) (= 0 (x892 x631))))
(assert (= (x892 3686331914) 0))
(assert (x22 x290))
(assert (= x1000 (x5 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (=> (<= x1415 10000) (= 0 (x892 x1415))))
(assert (x22 x1324))
(assert (x22 x208))
(assert (= (x892 (x1335 x1497 x83 x1067 x1250)) (x1335 x1497 x83 x1067 x1250)))
(assert (= (x1037 (x722 64 x1054 4)) 64))
(assert (x22 x1109))
(assert (= (x892 (x722 x930 x1506 x1470)) (x722 x930 x1506 x1470)))
(assert (= (x1037 (x1465 x930 x885 x888 x405 x130 x368)) x930))
(assert (=> (<= x1196 10000) (= (x892 x1196) 0)))
(assert (x22 x231))
(assert (=> (>= 10000 x767) (= 0 (x892 x767))))
(assert (= (x5 (x545 x930 x624 x541 x590 x244)) x590))
(assert (=> (<= x1555 10000) (= 0 (x892 x1555))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (=> (>= 10000 x494) (= (x892 x494) 0)))
(assert (x22 x1172))
(assert (= (x892 (x1335 x930 x523 x1148 x1461)) (x1335 x930 x523 x1148 x1461)))
(assert (x1475 x735))
(assert (x22 x555))
(assert (x225 x699))
(assert (= x683 (x5 (x545 x1275 x1221 x263 x683 x1390))))
(assert (= x1463 (x663 (x1465 x1007 x1463 x1386 x150 x670 x1418))))
(assert (x22 x279))
(assert (= 0 (x892 4294967295)))
(assert (= (and x1425 (not x1545)) x1240))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x722 x930 x1506 x1470)))
(assert (=> (>= 10000 x752) (= 0 (x892 x752))))
(assert (x22 x1271))
(assert (x22 x348))
(assert (=> (<= x1523 10000) (= 0 (x892 x1523))))
(assert (x22 x1452))
(assert (> (x213 x606 x1302 x1537 x847 x707 x691 x1483) 10000))
(assert (=> (<= x1570 10000) (= (x892 x1570) 0)))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (= (x663 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415)) x464))
(assert (= (x1037 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) x930))
(assert (x22 x389))
(assert (= (x1156 (x722 64 x842 3)) 3))
(assert (x22 x1239))
(assert (x22 x588))
(assert (= (x1037 (x92 x1007 x846)) x1007))
(assert (x22 x383))
(assert (not (x955 (x722 x1007 x479 x515))))
(assert (= (x1026 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) x1513))
(assert (< (x603 x1282 x752 x110 x834 x427 x764 x40 x74) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x416))
(assert (not (x955 (x1335 x865 x983 x743 x687))))
(assert (x22 x651))
(assert (= (=> (and (= (x1414 (+ 32 x866)) x909) (= x183 (x1414 (+ x1279 64))) (<= x275 1461501637330902918203684832716283019655932542975) (or (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639873) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x354) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639869 x354)) (and (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639715) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x354))) (= (x1328 (- x1421 x183)) x1460) (< x183 x1421) (= (x763 x1101) x1177) (= 9 x784) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x354) (and (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639869) (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x354) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x354)) (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= (<= x1282 224) x1147) (< x1279 x183) (= x866 (x1414 (+ x183 32))) (= x1079 (x1414 (+ 32 x354))) (= x416 1) (>= x275 1) (= x1279 (x1414 (+ 64 x354))) (= (x380 1461501637330902918203684832716283019655932542975 x973) x588) (= x1101 (+ x179 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x354) (= (x1182 x183) x1282) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x354) (= (ite (= x1435 x588) (ite (not (= 0 (x380 1461501637330902918203684832716283019655932542975 x973))) 1 0) (ite (= x1435 x588) 1 0)) x416) (= (x1328 (- x1460 32)) x574) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x354) (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639869) (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639806) (>= x354 115792089237316195423570985008687907853269984665640564039457584007913129639715))) (= (x1414 (+ x1279 32)) x1449) (= (x1414 (+ x183 32)) x1244) (= x1421 (x1414 (+ 32 x909))) (< x354 x1279) (<= x354 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= x179 (x722 64 x1136 4))) (and x1147 (=> (and (= x310 (x1182 x1244)) (= x493 (x1414 (+ 32 x1244))) (= x49 (x1414 (+ 32 x1244))) (= (x1414 (+ 160 x1244)) x246) (= x74 (x1182 x1164)) (= (x1414 (+ x1244 64)) x718) (= x110 (x1182 x493)) (= x581 (x1335 x1282 x677 x596 x139)) (= x706 (x92 x1282 x1570)) (= (x1182 x61) x959) (= (x1182 x855) x128) (= x677 (x1182 x1244)) (= x1453 (x1182 x1244)) (= (x1414 (+ x1421 32)) x6) (= x253 (x1414 (+ 32 x1421))) (= (x1414 (+ x1244 64)) x891) (= x331 (x1182 x1244)) (= (x1414 (+ 32 x1244)) x1411) (= (x1182 x1308) x951) (= x982 (x1182 x1120)) (= x224 (x1414 (+ 32 x1244))) (= x834 (x1182 x107)) (= x116 (x1182 x224)) (= x596 (x1182 x1411)) (= x494 (x1182 x1244)) (= (x1414 (+ 96 x1244)) x445) (= x19 (x1414 (+ x1244 64))) (= (x1414 (+ 96 x1244)) x1308) (= (x1182 x19) x139) (= (x682 0) x1393) (= x233 (x1182 x837)) (= x1077 (ite (= x1282 0) x1393 (ite (>= 32 x1282) x706 (ite (>= 64 x1282) x1218 (ite (>= 96 x1282) x581 (ite (>= 128 x1282) x844 (ite (>= 160 x1282) x401 (ite (>= 192 x1282) x31 (ite (>= 224 x1282) x346 x463))))))))) (= (x1182 x49) x1522) (= (x1414 (+ 32 x1244)) x855) (= (>= 224 x1007) x495) (= x346 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) (= (x1414 (+ x1244 32)) x1437) (= (x213 x1282 x331 x128 x1000 x555 x982 x456) x31) (= x837 (x1414 (+ 128 x1244))) (= x1570 (x1182 x1244)) (= (x1182 x718) x1225) (= x456 (x1182 x246)) (or (and (<= x1421 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639844 x1421)) (and (<= x1421 94) (<= 3 x1421)) (and (<= 98 x1421) (>= 157 x1421)) (and (<= x1421 115792089237316195423570985008687907853269984665640564039457584007913129639839) (>= x1421 161))) (= (x1571 x1421) x1007) (= (x1182 x445) x427) (< x1421 x843) (= x1000 (x1182 x836)) (= (x1414 (+ x1244 128)) x1120) (= (x1414 (+ x1244 160)) x1376) (= (x1328 (- x569 32)) x528) (= x843 (x1414 (+ x277 32))) (= (x1414 (+ 64 x1244)) x836) (= x1164 (x1414 (+ 192 x1244))) (= (x1414 (+ 32 x253)) x277) (= (x1182 x891) x192) (= (x1414 (+ x1244 96)) x910) (= (x1414 (+ x1244 64)) x107) (= (x722 x1282 x494 x1522) x1218) (= x764 (x1182 x804)) (= x752 (x1182 x1244)) (= (x545 x1282 x1453 x996 x1225 x951) x844) (= x40 (x1182 x1376)) (= (x1328 (- x843 x1421)) x569) (= (x1465 x1282 x310 x116 x192 x959 x233) x401) (= (x1182 x1437) x996) (= x555 (x1182 x910)) (= x804 (x1414 (+ 128 x1244))) (= x61 (x1414 (+ x1244 96)))) (and x495 (=> (and (= (x1571 x861) x1480) (= (x1571 x598) x484) (= x1091 (x722 x1007 x479 x515)) (= (x545 x1007 x120 x989 x977 x1196) x1074) (= x479 (x1571 x6)) (= (x1414 (+ 32 x6)) x58) (= x120 (x1571 x6)) (= (x1414 (+ x6 32)) x349) (= x123 (x1465 x1007 x1463 x1386 x150 x670 x1418)) (= (x1571 x701) x1196) (= x150 (x1571 x1416)) (= x1399 (x1414 (+ 128 x6))) (= (x1571 x105) x436) (= (x1414 (+ x6 32)) x1451) (= (x92 x1007 x846) x85) (= (x1571 x1175) x977) (= x1021 (x1571 x1399)) (= (x213 x1007 x271 x767 x587 x436 x1021 x1480) x1498) (= x846 (x1571 x6)) (= x1006 (x1414 (+ x853 32))) (= (x1571 x1179) x1513) (= x271 (x1571 x6)) (= x20 (x1414 (+ 96 x6))) (= (x1414 (+ 32 x6)) x221) (= (x1414 (+ x6 96)) x105) (= x1195 (x1414 (+ 4 x843))) (= x237 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) (= (x682 0) x1535) (= (x1571 x6) x543) (= (x1414 (+ x387 32)) x1097) (= x1356 (ite (= x1007 0) x1535 (ite (<= x1007 32) x85 (ite (<= x1007 64) x1091 (ite (>= 96 x1007) x316 (ite (<= x1007 128) x1074 (ite (<= x1007 160) x123 (ite (>= 192 x1007) x1498 (ite (<= x1007 224) x237 x1441))))))))) (= x515 (x1571 x1451)) (= (x1414 (+ 128 x1195)) x853) (= x702 (x1571 x1433)) (= (x1414 (+ x6 128)) x1575) (= (x1571 x221) x1228) (= (x1571 x349) x989) (= (x1414 (+ 32 x645)) x387) (= x670 (x1571 x20)) (= (x1571 x999) x1509) (= (x1571 x358) x587) (= x701 (x1414 (+ 96 x6))) (= (x1414 (+ x6 160)) x598) (= x358 (x1414 (+ x6 64))) (= x861 (x1414 (+ 160 x6))) (= x1428 (x1414 (+ 32 x6))) (= x1416 (x1414 (+ 64 x6))) (= x1433 (x1414 (+ x6 64))) (= x1473 (> x1554 0)) (= (x1571 x6) x938) (= x767 (x1571 x231)) (= x1179 (x1414 (+ x6 96))) (= (x1414 (+ 32 x1195)) x645) (= (x1414 (+ 192 x6)) x999) (= x1020 (x1571 x1382)) (= (x1571 x6) x1463) (= x949 (x1571 x1575)) (= x1418 (x1571 x1374)) (= x1175 (x1414 (+ 64 x6))) (= x1382 (x1414 (+ x6 64))) (= x1374 (x1414 (+ 128 x6))) (= (x313 128) x1554) (= x1386 (x1571 x1428)) (= x316 (x1335 x1007 x543 x478 x702)) (= (x1571 x58) x478) (= (x1414 (+ 32 x6)) x231)) (and (=> (not x1473) x525) (=> (and (and (= x1545 (> x1554 32)) (= x988 (x655 160))) x1473) (and (=> (not x1545) x525) (=> (and x1545 (and (= (x1414 (+ x1006 32)) x395) (= (x1092 192) x196) (= x200 (< 64 x1554)))) (and (=> (not x200) x525) (=> (and x200 (and (= x1476 (< 96 x1554)) (= x189 (x1414 (+ 64 x1006))) (= x902 (x1002 224)))) (and (=> (not x1476) x525) (=> x1476 x1008))))))))))))) x1408))
(assert (x955 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (= (x1037 (x1335 x930 x523 x1148 x1461)) x930))
(assert (= x298 (x5 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (x955 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (x22 x1082))
(assert (x955 340282366920938463463374607431768211454))
(assert (= (x1037 (x1465 x1282 x310 x116 x192 x959 x233)) x1282))
(assert (x22 x806))
(assert (= (x663 (x1465 x1275 x517 x258 x373 x426 x1015)) x517))
(assert (x22 x613))
(assert (= (x92 x1282 x1570) (x892 (x92 x1282 x1570))))
(assert (= (and (not x604) x758) x1403))
(assert (x22 x403))
(assert (< 10000 (x1335 x930 x523 x1148 x1461)))
(assert (=> (>= 10000 x887) (= (x892 x887) 0)))
(assert (x22 x1112))
(assert (not (x955 (x603 x930 x725 x929 x746 x936 x805 x1504 x206))))
(assert (x22 x1478))
(assert (x22 x681))
(assert (= x1552 (=> (and (and (= (x1414 (+ x75 64)) x1452) (not (= x75 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x75) (<= x440 340282366920938463463374607431768211455) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x75)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x75) (> x1452 x75) (= x1297 (= 0 x1018)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x75)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x75) (<= 1 x440)) (or (and (not x1297) (and (= x832 (+ x440 x459)) (>= 340282366920938463463374607431768211454 x459) (= x34 x440) (>= x832 1) (>= 340282366920938463463374607431768211455 x832) (= (x570 x406) x459))) (and x1297 (and (= (+ x440 x571) x345) (= x440 x34) (>= 340282366920938463463374607431768211454 x571) (<= x345 340282366920938463463374607431768211455) (>= x345 1) (= (x809 x1076) x571) (= x1076 (+ 1 x406)))))) x779)))
(assert (x22 x860))
(assert (= x271 (x663 (x213 x1007 x271 x767 x587 x436 x1021 x1480))))
(assert (x22 x985))
(assert (=> (<= x1484 10000) (= 0 (x892 x1484))))
(assert (x22 x1514))
(assert (= x930 (x1037 (x92 x930 x458))))
(assert (x22 x871))
(assert (x22 x467))
(assert (=> (>= 10000 x327) (= 0 (x892 x327))))
(assert (not (x955 (x545 x501 x1149 x450 x227 x1009))))
(assert (x22 x889))
(assert (=> (>= 10000 x177) (= (x892 x177) 0)))
(assert (= x1252 (and x694 x1160)))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (= x128 (x1156 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (x22 x122))
(assert (< 10000 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)))
(assert (=> (<= x960 10000) (= 0 (x892 x960))))
(assert (=> (<= x1084 10000) (= 0 (x892 x1084))))
(assert (x22 x1437))
(assert (< 10000 (x682 0)))
(assert (x22 x963))
(assert (< 10000 (x92 x501 x634)))
(assert (> (x722 x1282 x494 x1522) 10000))
(assert (x955 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (= (x1026 (x545 x1497 x826 x1192 x1153 x434)) x434))
(assert (x955 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (x22 x1484))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (= x25 (=> (= x737 (> x1267 0)) (and (=> (and (not x737) (= x646 x724)) x1462) (=> (and x737 (and (and (= x928 (< 0 x939)) (= (x802 x724) x939) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x724) (= x142 (x1414 (+ x937 32))) (= x937 (x1414 (+ x724 96))) (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x724)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x724)) (> x937 x724) (= x1371 (x1414 (+ 32 x724))) (= x538 (x1414 (+ x1371 32))) (<= x724 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x724))) (or (and x928 (and (not x121) (= (> x939 32) x121) (= x1223 (x802 x1371)))) (not x928)))) x1577)))))
(assert (x22 x1030))
(assert (not (x955 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (x22 x13))
(assert (x22 x532))
(assert (x22 x497))
(assert (= (x1026 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)) x467))
(assert (x22 x54))
(assert (=> (>= 10000 x1327) (= 0 (x892 x1327))))
(assert (x22 x784))
(assert (> (x1335 66 x987 x122 x245) 10000))
(assert (= 0 (x892 22260506169142864168419965211860030380910469616735923253374116530085716557824)))
(assert (x22 x620))
(assert (= x77 (or x1111 x376 x1502 x1560 x531)))
(assert (x22 x1472))
(assert (= (x1156 (x722 64 x1136 3)) 3))
(assert (= x1291 (x663 (x92 x1275 x1291))))
(assert (=> (>= 10000 x250) (= 0 (x892 x250))))
(assert (= (x892 1461501637330902918203684832716283019655932542975) 0))
(assert (x22 x104))
(assert (= (x892 57896044618658097711785492504343953926634992332820282019728792003956564819835) 0))
(assert (= (x892 (x1465 x1497 x925 x926 x1438 x250 x661)) (x1465 x1497 x925 x926 x1438 x250 x661)))
(assert (= (x1037 (x1465 x606 x309 x513 x966 x47 x522)) x606))
(assert (x22 x98))
(assert (= (x1026 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x396))
(assert (x22 x1197))
(assert (= x631 (x5 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (x22 x728))
(assert (not (x955 (x722 x865 x1294 x177))))
(assert (x22 x576))
(assert (x22 x1183))
(assert (=> (>= 10000 x711) (= (x892 x711) 0)))
(assert (= (x1037 (x1335 x1282 x677 x596 x139)) x1282))
(assert (x22 x1470))
(assert (x22 x804))
(assert (x22 x965))
(assert (x22 x1428))
(assert (x22 x1045))
(assert (x22 x793))
(assert (x22 x1047))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x1275 x1221 x263 x683 x1390)))
(assert (= x606 (x1037 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726))))
(assert (x22 x1225))
(assert (not (x955 (x1335 x1282 x677 x596 x139))))
(assert (=> (<= x1136 10000) (= 0 (x892 x1136))))
(assert (not (x955 (x545 x1282 x1453 x996 x1225 x951))))
(assert (x319 x1305))
(assert (= (x892 (x1335 x501 x848 x4 x70)) (x1335 x501 x848 x4 x70)))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639931)))
(assert (=> (>= 10000 x1028) (= (x892 x1028) 0)))
(assert (= (x892 (x545 x930 x624 x541 x590 x244)) (x545 x930 x624 x541 x590 x244)))
(assert (=> (<= x4 10000) (= 0 (x892 x4))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x22 x707))
(assert (= (x1037 (x722 64 x275 x79)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x213 x501 x1538 x144 x631 x1546 x620 x1526)))
(assert (x22 x642))
(assert (x22 x150))
(assert (x22 x1554))
(assert (x22 x1429))
(assert (x22 x901))
(assert (x22 x418))
(assert (< 10000 (x92 x930 x458)))
(assert (= x829 (x56 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (= x250 (x1026 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (= (and x775 x1580) x499))
(assert (=> (<= x1007 10000) (= 0 (x892 x1007))))
(assert (x22 x909))
(assert (not (x955 (x722 64 x1136 3))))
(assert (= (x545 x1275 x1221 x263 x683 x1390) (x892 (x545 x1275 x1221 x263 x683 x1390))))
(assert (x22 x1188))
(assert (= (x5 (x1465 x1275 x517 x258 x373 x426 x1015)) x373))
(assert (x22 x1559))
(assert (= x1515 (x1156 (x545 x606 x1084 x1515 x1295 x1102))))
(assert (x22 x1136))
(assert (= (x618 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859)) x859))
(assert (x22 x556))
(assert (x22 x33))
(assert (= x1497 (x1037 (x545 x1497 x826 x1192 x1153 x434))))
(assert (=> (>= 10000 x1277) (= 0 (x892 x1277))))
(assert (=> (<= x774 10000) (= (x892 x774) 0)))
(assert (x22 x222))
(assert (x22 x1417))
(assert (= (x1156 (x1335 x1275 x711 x1317 x214)) x1317))
(assert (x22 x998))
(assert (= x1346 (=> (and (or (and (= x947 0) (not x1040)) x1040) (= x1040 (= 0 x947))) x1408)))
(assert (< (x603 x1275 x464 x717 x510 x59 x614 x659 x1415) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x837))
(assert (x22 x469))
(assert (< 10000 (x213 x1007 x271 x767 x587 x436 x1021 x1480)))
(assert (x22 x1526))
(assert (x22 x1066))
(assert (x1475 32))
(assert (=> (>= 10000 x907) (= (x892 x907) 0)))
(assert (= x417 (=> (and (and (= (x824 x961) x276) (= (x824 x1248) x709) (or (<= x53 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x53)) (= (x1414 (+ x1248 x744)) x1494) (= x1060 (x1255 x53)) (>= x1036 1) (or (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639743) (>= x53 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= (x1414 (+ x251 32)) x961) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x709) (<= x709 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (>= 18446744073709551550 x53) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x819) (<= 32 x819) (= x251 (x1414 (+ x709 x1248))) (<= x53 18446744073709551550) (= x490 (x1414 (+ 64 x53))) (<= x1001 1461501637330902918203684832716283019655932542975) (= (x824 x1494) x1001) (= (x1414 (+ x817 32)) x974) (= x817 (x1414 (+ x13 32))) (> x490 x53) (> x688 x113) (= x1139 (+ x113 32)) (= (> x895 0) x1354) (< x490 x113) (<= x276 340282366920938463463374607431768211455) (= 1 x1060) (= (x1255 x1181) x1036) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x744) (>= x744 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= x430 1) (= (+ x113 64) x688) (or (>= x53 115792089237316195423570985008687907853269984665640564039457584007913129639873) (>= 18446744073709551487 x53)) (not (< x113 x490)) (= (x1414 (+ 32 x53)) x1181) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050)) (> x1050 x744)) (and (<= x1050 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744))) (= x113 (+ 64 x490)) (= x13 (x1414 (+ x293 32))) (= x744 (x824 x1248)) (or (and (< x709 x1050) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x709) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1050))) (<= x53 115792089237316195423570985008687907853269984665640564039457584007913129639806) (= x293 (x1414 (+ 4 x688)))) (or (and (= x394 x895) (not x1354)) (and x1354 (and (= 1 x394) (>= 4294967295 x819) (>= x819 32))))) x1527)))
(assert (x22 x573))
(assert (> (x213 x1282 x331 x128 x1000 x555 x982 x456) 10000))
(assert (= x376 (and x328 x415)))
(assert (=> (>= 10000 x233) (= (x892 x233) 0)))
(assert (= (x663 (x722 x865 x1294 x177)) x1294))
(assert (x14 x503))
(assert (= (x892 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)))
(assert (x22 x991))
(assert (x22 x1382))
(assert (x22 x643))
(assert (x22 x423))
(assert (x22 x97))
(assert (= (x1037 (x545 x1275 x1221 x263 x683 x1390)) x1275))
(assert (x22 x373))
(assert (= x491 (x1026 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726))))
(assert (= (or x236 x173) x425))
(assert (not (x955 (x545 x1275 x1221 x263 x683 x1390))))
(assert (x22 x261))
(assert (=> (>= 10000 x1526) (= 0 (x892 x1526))))
(assert (x22 x1302))
(assert (x22 x287))
(assert (= x917 (x56 (x213 x930 x1334 x1555 x887 x695 x917 x1373))))
(assert (< (x213 x1282 x331 x128 x1000 x555 x982 x456) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1259))
(assert (x22 x177))
(assert (x22 x557))
(assert (=> (>= 10000 x479) (= 0 (x892 x479))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1335 x1497 x83 x1067 x1250)))
(assert (> (x722 64 x275 x79) 10000))
(assert (> (x1335 x501 x848 x4 x70) 10000))
(assert (= x1497 (x1037 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859))))
(assert (x22 x934))
(assert (x22 x1296))
(assert (< (x722 64 x275 x79) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x549 10000) (= 0 (x892 x549))))
(assert (=> (<= x614 10000) (= (x892 x614) 0)))
(assert (= x1160 (or x355 x398)))
(assert (x22 x434))
(assert (not (x955 (x92 x1497 x342))))
(assert (=> (<= x128 10000) (= 0 (x892 x128))))
(assert (= (x1037 (x682 0)) 0))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639679)))
(assert (= (x892 (x92 x1275 x1291)) (x92 x1275 x1291)))
(assert (= x70 (x5 (x1335 x501 x848 x4 x70))))
(assert (=> (>= 10000 x1572) (= (x892 x1572) 0)))
(assert (= x153 (x663 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431))))
(assert (< (x1465 x1275 x517 x258 x373 x426 x1015) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x1071 (x1414 (+ x1006 96))) (= x1189 (not (> x1554 128))) (= (x740 256) x1423)) (and x525 x1189)) x1008))
(assert (x22 x717))
(assert (x22 x610))
(assert (= 0 (x892 37749366859872002549862985897619888669665948435824635674531347399775013991474)))
(assert (=> (>= 10000 x467) (= (x892 x467) 0)))
(assert (= (x1156 (x213 x606 x1302 x1537 x847 x707 x691 x1483)) x1537))
(assert (not (x955 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (x22 x384))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x22 x1021))
(assert (x22 x548))
(assert (x22 x1196))
(assert (= (x1026 (x545 x606 x1084 x1515 x1295 x1102)) x1102))
(assert (> (x603 x606 x1143 x642 x549 x491 x279 x1187 x726) 10000))
(assert (x22 x1351))
(assert (x955 18446744073709551550))
(assert (x22 x75))
(assert (=> (<= x1021 10000) (= 0 (x892 x1021))))
(assert (x22 x45))
(assert (= (x56 (x1465 x1007 x1463 x1386 x150 x670 x1418)) x1418))
(assert (= (x5 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218)) x266))
(assert (x22 x1211))
(assert (= x1384 (x618 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431))))
(assert (x22 x169))
(assert (= (x663 (x1335 x865 x983 x743 x687)) x983))
(assert (= x43 (or (and x1040 x1486) x1322)))
(assert (x22 x262))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x1007 x846)))
(assert (=> (<= x218 10000) (= 0 (x892 x218))))
(assert (=> (>= 10000 x1047) (= 0 (x892 x1047))))
(assert (=> (>= 10000 x1020) (= (x892 x1020) 0)))
(assert (x22 x725))
(assert (x22 x4))
(assert (x955 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (x22 x513))
(assert (x22 x388))
(assert (x22 x523))
(assert (= (and (not x223) x1280) x567))
(assert (=> (>= 10000 x266) (= (x892 x266) 0)))
(assert (x22 x598))
(assert (x22 x154))
(assert (x22 x298))
(assert (x22 x1435))
(assert (x22 x321))
(assert (= (x892 (x1465 x930 x885 x888 x405 x130 x368)) (x1465 x930 x885 x888 x405 x130 x368)))
(assert (x225 x509))
(assert (x22 x592))
(assert (x955 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (< 10000 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)))
(assert (x22 x1205))
(assert (x22 x24))
(assert (=> (>= 10000 x1192) (= (x892 x1192) 0)))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639715)))
(assert (x955 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (x455 x509 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x930) (= 0 (x892 x930))))
(assert (x22 x1053))
(assert (x22 x699))
(assert (= x887 (x5 (x213 x930 x1334 x1555 x887 x695 x917 x1373))))
(assert (= (x892 (+ 5 x1031)) (x892 x1031)))
(assert (= 0 (x892 911662625)))
(assert (x22 x657))
(assert (not x187))
(assert (x22 x1116))
(assert (x22 x167))
(assert (x22 x1325))
(assert (< 10000 (x722 64 x1445 3)))
(assert (x22 x633))
(assert (= (x663 (x1335 x1007 x543 x478 x702)) x543))
(assert (< (x1465 x1497 x925 x926 x1438 x250 x661) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x453))
(assert (= (x722 64 x842 3) (x892 (x722 64 x842 3))))
(assert (x22 x297))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (x22 x327))
(assert (= 0 (x892 52672081143094129087634851003622940732604441515226977473621344926390909140992)))
(assert (= x10 (and (not x1235) x1200)))
(assert (x22 x435))
(assert (x22 x1190))
(assert (=> (>= 10000 x71) (= (x892 x71) 0)))
(assert (x22 x755))
(assert (x1475 x699))
(assert (=> (>= 10000 x515) (= (x892 x515) 0)))
(assert (x22 x463))
(assert (x22 x606))
(assert (=> (<= x607 10000) (= (x892 x607) 0)))
(assert (=> (<= x1045 10000) (= (x892 x1045) 0)))
(assert (x22 x936))
(assert (= (x663 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726)) x1143))
(assert (x22 x90))
(assert (= x1148 (x1156 (x1335 x930 x523 x1148 x1461))))
(assert (= (x663 (x722 64 x1054 4)) x1054))
(assert (=> (>= 10000 x1546) (= (x892 x1546) 0)))
(assert (x22 x611))
(assert (x22 x59))
(assert (x22 x661))
(assert (= (and x1264 x524) x481))
(assert (x22 x803))
(assert (=> (>= 10000 x1093) (= 0 (x892 x1093))))
(assert (x22 x508))
(assert (x22 x1464))
(assert (x594 x735))
(assert (x22 x516))
(assert (x22 x749))
(assert (= (x663 (x1335 x930 x523 x1148 x1461)) x523))
(assert (x22 x347))
(assert (> (x1465 x606 x309 x513 x966 x47 x522) 10000))
(assert (= x677 (x663 (x1335 x1282 x677 x596 x139))))
(assert (=> (>= 10000 x1506) (= 0 (x892 x1506))))
(assert (x22 x624))
(assert (x22 x859))
(assert (= x1510 (=> (and (and (= x265 x1303) (= x1584 36) (= x1303 x148) (= x533 x265)) (and (= x381 (= x613 0)) (>= 16777215 x918) (= x111 false) (= x918 (x1210 x317)) (>= 127 x551) (= x1456 false) (>= 127 x551) (= false x278) (= (x1213 x1312) x1472) (= 4067465820 x1325) (= x449 x1170) (= x1048 x482) (= x840 (+ x317 1)) (= x1054 x533) (= x518 false) (= x1372 (not x381)) (= false x721) (= (x868 288) x613) (= x482 (x868 256)) (= x1372 x1392) (>= x1472 1) (= x950 false) (= (x722 64 x1054 4) x317) (= x1242 (x763 x840)))) x1444)))
(assert (= (x1026 (x545 x1282 x1453 x996 x1225 x951)) x951))
(assert (= (x1037 (x1465 x1007 x1463 x1386 x150 x670 x1418)) x1007))
(assert (= (x1037 (x722 x1275 x1099 x1211)) x1275))
(assert (=> (<= x938 10000) (= (x892 x938) 0)))
(assert (x22 x1440))
(assert (x22 x1369))
(assert (= 0 (x892 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x22 x1000))
(assert (= (x1037 (x1335 x865 x983 x743 x687)) x865))
(assert (= (x722 x1497 x1572 x1420) (x892 (x722 x1497 x1572 x1420))))
(assert (x22 x692))
(assert (x22 x930))
(assert (=> (>= 10000 x271) (= 0 (x892 x271))))
(assert (x22 x865))
(assert (=> (>= 10000 x1082) (= 0 (x892 x1082))))
(assert (=> (<= x1302 10000) (= (x892 x1302) 0)))
(assert (x22 x735))
(assert (x225 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x847) (= (x892 x847) 0)))
(assert (x22 x925))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639873) 0))
(assert (not (x955 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218))))
(assert (< 10000 (x92 x865 x39)))
(assert (=> (<= x590 10000) (= (x892 x590) 0)))
(assert (= (or x69 x409 x168 x1214 x1240) x881))
(assert (x22 x120))
(assert (> (x545 x1497 x826 x1192 x1153 x434) 10000))
(assert (= x935 (x1156 (x603 x865 x1023 x935 x266 x467 x1327 x222 x218))))
(assert (x22 x641))
(assert (x22 x358))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x865 x39)))
(assert (x22 x1038))
(assert (x22 x493))
(assert (x22 x1445))
(assert (=> (>= 10000 x1390) (= (x892 x1390) 0)))
(assert (x22 x1530))
(assert (> (x603 x501 x153 x822 x839 x327 x1045 x1384 x431) 10000))
(assert (x955 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (= x1577 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x937) (= (x1414 (+ x142 x939)) x622) (= x504 (x1328 (- x622 x937))) (= x104 (x1414 (+ 32 x937))) (<= x937 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1275 (x329 x937)) (>= x622 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x937) (= x451 (>= 224 x1275)) (= (x1328 (- x504 32)) x1424) (< x937 x622)) (and (=> (and (= x517 (x329 x104)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x32) (<= x32 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= x1415 (x329 x633)) (= x214 (x329 x94)) (= x1099 (x329 x104)) (= x1516 (x329 x673)) (= (x329 x1171) x1015) (= (x1328 (- x160 32)) x511) (= (x1414 (+ x104 96)) x673) (= x647 (x682 0)) (= x1492 (x1328 (- x831 95))) (or (>= x422 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x422 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= (x329 x1115) x1211) (= x1174 (<= x865 224)) (= x856 (x722 x1275 x1099 x1211)) (= (x1414 (+ x104 96)) x686) (= x519 (x1414 (+ x104 160))) (= (x1414 (+ 32 x104)) x1115) (= (x329 x201) x717) (= (x329 x686) x1390) (= (x329 x519) x659) (= x1171 (x1414 (+ x104 128))) (= (x329 x337) x59) (= (x1414 (+ 128 x104)) x16) (= (x329 x403) x298) (= x633 (x1414 (+ 192 x104))) (= (x329 x1259) x263) (= (x1414 (+ x1337 96)) x385) (= x1173 (x824 x1564)) (= (x1328 (- x576 x1248)) x831) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x622) (<= x622 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (>= x622 1) (<= x622 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (or (and (< x32 x1492) (= (<= x32 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1492 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x32 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1492 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1414 (+ x104 64)) x1209) (>= 340282366920938463463374607431768211455 x899) (= x1317 (x329 x1117)) (= (x329 x104) x464) (= (x329 x1542) x373) (= (x295 x622) x865) (= (x329 x104) x71) (<= 1 x1267) (= (x1414 (+ x104 32)) x336) (= (x824 x1248) x32) (= (x1414 (+ x1586 32)) x1068) (= (x1328 (- x385 x622)) x160) (= (x329 x104) x711) (= (x329 x336) x258) (= x1291 (x329 x104)) (= (x1414 (+ 96 x104)) x337) (= (x1414 (+ 32 x104)) x201) (= x324 (x545 x1275 x1221 x263 x683 x1390)) (= (x1465 x1275 x517 x258 x373 x426 x1015) x1485) (= x879 (x329 x1185)) (= (x1414 (+ 32 x104)) x1117) (= x1238 (x1414 (+ x1337 32))) (= x584 (x213 x1275 x71 x492 x298 x1516 x956 x879)) (= (x1414 (+ x422 x1248)) x1586) (= x29 (x1414 (+ 32 x1238))) (= x1337 (x1414 (+ 32 x622))) (= (x1414 (+ 64 x104)) x418) (= (x1414 (+ 32 x104)) x1259) (= x259 (x1335 x1275 x711 x1317 x214)) (= x614 (x329 x1458)) (= (x1414 (+ x104 32)) x1172) (= (x1414 (+ x1248 x32)) x1564) (= x899 (x824 x1068)) (>= 1461501637330902918203684832716283019655932542975 x1173) (= (x1414 (+ x104 64)) x1542) (or (and (< x422 x1492) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x422) (<= x1492 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1492 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x422 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1414 (+ x104 128)) x1458) (< x622 x385) (= (x329 x742) x426) (= x683 (x329 x418)) (= x422 (x824 x1248)) (= (x329 x1209) x510) (= (x329 x1172) x492) (= (x603 x1275 x464 x717 x510 x59 x614 x659 x1415) x1380) (>= 18446744073709551615 x1267) (= (x1414 (+ 160 x104)) x1185) (= (x92 x1275 x1291) x727) (= (x329 x104) x1221) (= x771 (x1414 (+ 32 x622))) (= x1434 (ite (= 0 x1275) x647 (ite (<= x1275 32) x727 (ite (>= 64 x1275) x856 (ite (>= 96 x1275) x259 (ite (<= x1275 128) x324 (ite (>= 160 x1275) x1485 (ite (<= x1275 192) x584 (ite (>= 224 x1275) x1380 x1047))))))))) (= (x1414 (+ x104 96)) x742) (= x956 (x329 x16)) (= (x1414 (+ 64 x104)) x403) (= x94 (x1414 (+ x104 64)))) (and (=> (and (= x1023 (x295 x771)) (= (x545 x865 x1370 x774 x1511 x256) x1176) (= x983 (x295 x771)) (= (x295 x771) x39) (= (x295 x1285) x558) (= (x295 x1443) x829) (= (x295 x771) x1294) (= (x1414 (+ x771 32)) x873) (= (x295 x963) x1321) (= (x295 x348) x266) (= (x1414 (+ x771 64)) x869) (= x26 (ite (= x865 0) x972 (ite (>= 32 x865) x1293 (ite (<= x865 64) x1344 (ite (>= 96 x865) x62 (ite (<= x865 128) x1176 (ite (>= 160 x865) x656 (ite (<= x865 192) x472 (ite (<= x865 224) x199 x1028))))))))) (= x561 (x1414 (+ 96 x771))) (= (x295 x165) x1315) (= (x1414 (+ x771 128)) x1443) (= (x1414 (+ x771 96)) x755) (= x656 (x1465 x865 x1066 x1321 x1093 x1410 x829)) (= x1292 (x1414 (+ 192 x771))) (= (not (> x1267 1)) x86) (= (x295 x771) x1066) (= (x1335 x865 x983 x743 x687) x62) (= (x1414 (+ 64 x771)) x165) (= (x1414 (+ x771 64)) x348) (= (x295 x36) x177) (= x257 (x295 x90)) (= (x295 x1292) x218) (= x1344 (x722 x865 x1294 x177)) (= (x1414 (+ x771 32)) x36) (= x1025 (x1414 (+ x771 64))) (= x658 (x1414 (+ 64 x771))) (= x1293 (x92 x865 x39)) (= x256 (x295 x807)) (= (x1414 (+ x771 32)) x1431) (= (x682 0) x972) (= x1016 (x1414 (+ 96 x771))) (= (x295 x1042) x1327) (= x1254 (x1414 (+ 32 x771))) (= (x295 x1016) x1410) (= x1511 (x295 x1025)) (= x833 (x295 x98)) (= x963 (x1414 (+ 32 x771))) (= x935 (x295 x873)) (= x1285 (x1414 (+ 32 x771))) (= x222 (x295 x1306)) (= x90 (x1414 (+ 160 x771))) (= (x603 x865 x1023 x935 x266 x467 x1327 x222 x218) x199) (= x407 (x295 x138)) (= x1042 (x1414 (+ 128 x771))) (= (x1414 (+ 160 x771)) x1306) (= x743 (x295 x1431)) (= (+ x138 32) x1158) (= x467 (x295 x755)) (= (x295 x561) x158) (= (x1414 (+ 96 x771)) x807) (= x1093 (x295 x658)) (>= x407 1) (= x774 (x295 x1254)) (= (x295 x771) x1277) (= x1370 (x295 x771)) (= (x1414 (+ 128 x771)) x98) (= x472 (x213 x865 x1277 x558 x1315 x158 x833 x257)) (= x687 (x295 x869))) (and x86 (=> (= x385 x646) x1462))) x1174)) x451))))
(assert (x22 x1315))
(assert (x22 x831))
(assert (x22 x1516))
(assert (x22 x58))
(assert (x22 x131))
(assert (=> (>= 10000 x1538) (= 0 (x892 x1538))))
(assert (x22 x206))
(assert (< (x722 x606 x413 x907) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1060))
(assert (x22 x1072))
(assert (x22 x430))
(assert (x22 x414))
(assert (=> (>= 10000 x726) (= 0 (x892 x726))))
(assert (= (x5 (x1335 66 x987 x122 x245)) x245))
(assert (< (x603 x865 x1023 x935 x266 x467 x1327 x222 x218) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x28))
(assert (=> (<= x1395 10000) (= (x892 x1395) 0)))
(assert (x22 x767))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639805)))
(assert (x22 x1326))
(assert (< 10000 (x92 x1497 x342)))
(assert (= (x892 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)))
(assert (< (x545 x1007 x120 x989 x977 x1196) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x955 (x682 0))))
(assert (x22 x1394))
(assert (= (x1037 (x213 x501 x1538 x144 x631 x1546 x620 x1526)) x501))
(assert (=> (<= x637 10000) (= (x892 x637) 0)))
(assert (x22 x542))
(assert (x22 x1375))
(assert (x22 x582))
(assert (=> (>= 10000 x1334) (= (x892 x1334) 0)))
(assert (x22 x1126))
(assert (=> (>= 10000 x517) (= 0 (x892 x517))))
(assert (x22 x591))
(assert (=> (>= 10000 x917) (= 0 (x892 x917))))
(assert (not (x955 (x1335 x606 x468 x131 x649))))
(assert (= (x892 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)))
(assert (= (x618 (x603 x1282 x752 x110 x834 x427 x764 x40 x74)) x40))
(assert (= (x1156 (x545 x865 x1370 x774 x1511 x256)) x774))
(assert (=> (<= x258 10000) (= 0 (x892 x258))))
(assert (= (x5 (x1335 x1282 x677 x596 x139)) x139))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639932)))
(assert (x22 x489))
(assert (x22 x1023))
(assert (= (or x506 x374) x30))
(assert (x1475 x72))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (x22 x931))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x22 x1142))
(assert (x22 x1455))
(assert (= x374 (and x425 x1297)))
(assert (=> (>= 10000 x1228) (= 0 (x892 x1228))))
(assert (< (x722 x1275 x1099 x1211) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639869) 0))
(assert (= (x1037 (x722 x1282 x494 x1522)) x1282))
(assert (x22 x1141))
(assert (x22 x1276))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x1497 x826 x1192 x1153 x434)))
(assert (and (= 81 (x1471 9 9)) (= 81 (x1471 27 3)) (= 9 (x1471 3 3)) (= (x1471 9 3) 27)))
(assert (x22 x300))
(assert (not (x955 (x213 x930 x1334 x1555 x887 x695 x917 x1373))))
(assert (x1475 x738))
(assert (=> (<= x879 10000) (= 0 (x892 x879))))
(assert (= (x892 (x1335 x1275 x711 x1317 x214)) (x1335 x1275 x711 x1317 x214)))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (x663 (x1465 x930 x885 x888 x405 x130 x368)) x885))
(assert (= x69 (and x43 (not x1473))))
(assert (x22 x1327))
(assert (x22 x695))
(assert (x22 x1158))
(assert (< 10000 (x1335 x1007 x543 x478 x702)))
(assert (not (x955 (x545 x930 x624 x541 x590 x244))))
(assert (x319 x738))
(assert (= x1522 (x1156 (x722 x1282 x494 x1522))))
(assert (x22 x1115))
(assert (= (x892 x317) (x892 (+ x317 1))))
(assert (= (x56 (x1465 x501 x453 x589 x960 x943 x318)) x318))
(assert (x22 x1381))
(assert (x22 x1305))
(assert (x22 x659))
(assert (x22 x938))
(assert (x22 x507))
(assert (x22 x160))
(assert (x22 x1178))
(assert (x22 x974))
(assert (=> (>= 10000 x982) (= 0 (x892 x982))))
(assert (=> (>= 10000 x1148) (= (x892 x1148) 0)))
(assert (= x1157 (x56 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859))))
(assert (x22 x296))
(assert (x22 x390))
(assert (x22 x350))
(assert (x22 x428))
(assert (= (x663 (x545 x1275 x1221 x263 x683 x1390)) x1221))
(assert (x22 x509))
(assert (x22 x359))
(assert (=> (>= 10000 x541) (= 0 (x892 x541))))
(assert (= (x1156 (x722 x930 x1506 x1470)) x1470))
(assert (x22 x847))
(assert (=> (<= x704 10000) (= (x892 x704) 0)))
(assert (= x415 (and x362 x333)))
(assert (x22 x1463))
(assert (x22 x945))
(assert (= (x1037 (x1465 x1275 x517 x258 x373 x426 x1015)) x1275))
(assert (not (x955 (x1335 x930 x523 x1148 x1461))))
(assert (=> (<= x310 10000) (= 0 (x892 x310))))
(assert (=> (>= 10000 x510) (= (x892 x510) 0)))
(assert (= (x892 22700451088272681866486206289545017091351513107057952373946396474207578882048) 0))
(assert (x22 x1064))
(assert (=> (>= 10000 x427) (= (x892 x427) 0)))
(assert (= (and (not x1354) x211) x1165))
(assert (x22 x614))
(assert (=> (<= x707 10000) (= (x892 x707) 0)))
(assert (x22 x789))
(assert (x22 x1083))
(assert (x22 x1306))
(assert (= x1211 (x1156 (x722 x1275 x1099 x1211))))
(assert (x22 x491))
(assert (=> (<= x450 10000) (= 0 (x892 x450))))
(assert (= (x892 x729) (x892 (+ x729 1))))
(assert (x22 x846))
(assert (x22 x857))
(assert (x955 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x22 x910))
(assert (x22 x983))
(assert (x22 x807))
(assert (x22 x288))
(assert (x22 x1451))
(assert (x22 x118))
(assert (x22 x1199))
(assert (= (x663 (x722 64 x1445 3)) x1445))
(assert (x22 x420))
(assert (x22 x687))
(assert (x22 x1319))
(assert (= (x892 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x22 x258))
(assert (= (x892 340282366920938463463374607431768211455) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x545 x501 x1149 x450 x227 x1009)))
(assert (x955 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (= 0 (x892 16777215)))
(assert (= (x892 x1333) (x892 (+ 1 x1333))))
(assert (=> (<= x434 10000) (= (x892 x434) 0)))
(assert (= x1334 (x663 (x213 x930 x1334 x1555 x887 x695 x917 x1373))))
(assert (x22 x1341))
(assert (= 3 (x1156 (x722 64 x704 3))))
(assert (x22 x1220))
(assert (= x1444 (=> (and (and (and (= false x599) (= (x1272 x239) x508) (= x667 x1276) (<= x1019 127) (= x103 x1375) (= (x1140 164) x994) (= x520 x166) (= (x419 x140) x654) (<= x80 1099511627775) (= x1169 x275) (= (ite x1124 x1349 x864) x550) (= x780 (= 0 x1379)) (= x95 (x370 896)) (= (x370 768) x520) (= x1412 (x370 928)) (= x1141 (x370 800)) (= x1435 x708) (<= x1019 127) (<= x849 255) (= x1136 x390) (= x28 x669) (= (x722 64 x842 3) x664) x550 (= (x370 960) x1276) (<= x1364 255) (<= x1375 18446744073709551615) (<= x404 1099511627775) (= 911662625 x1440) (= x1290 x991) (= (ite (not (= (ite (not (= 0 x849)) 1 0) 0)) 1 0) x1109) (<= x1435 1461501637330902918203684832716283019655932542975) (= x1286 x1364) (= x715 (x570 x140)) (= x1435 (x1140 68)) (= x1364 (x1140 196)) (= x268 x1341) (= x275 (x1140 36)) (= x194 x1018) (= x1349 x1096) (= true x282) (= false x320) (not x1124) (= x1124 (not x780)) (= x410 x681) (= x1412 x1548) (= (x1140 100) x1018) (<= 1 x1467) (= x273 x382) (= x1467 (x1213 x1312)) (= x1159 false) (<= x1123 340282366920938463463374607431768211455) (= false x106) (= x797 x781) (= x995 x420) (= (x1289 x140) x80) (= x1141 x1379) (= x210 (x485 x1080)) (= x1207 x1237) (= (x370 704) x1072) (= (+ 1 x197) x239) (= (+ x140 1) x197) (= false x1070) (= x864 x282) (= x1136 (x1140 4)) (= x849 (x1524 x140)) (= x994 x178) (= (x1140 228) x382) (= x17 x95) (= x1446 0) (= false x1180) (= (x370 864) x797) (= (x370 832) x302) (= x1080 (+ 1 x239)) (= (+ 1 x664) x140) (= (x1232 x140) x404) (<= x994 18446744073709551615) (= x302 x460) (>= 1461501637330902918203684832716283019655932542975 x275) (= x1064 x1104) (>= 1099511627775 x654) (= x268 (x1140 0)) (= (x809 x197) x1123) (<= x715 340282366920938463463374607431768211455) (= false x1078) (= x681 (x1140 260)) (= x842 x526) (= (x1140 132) x1375) (= x1457 x1072)) (and (and (and (>= x985 1) (>= 18446744073709551615 x76) (<= x985 18446744073709551391) (= x534 x273) (= (x1213 x1312) x137) (= x194 x1057) (= x509 (+ 31 x76)) (= x748 (+ 4 x994)) (= (= x1267 0) x1235) (= x390 x1551) (> x138 x167) (not (> x653 x576)) (= x948 false) (< x1051 x576) (= (+ x1122 x76) x692) (not (< x576 x692)) (= 128 x1220) (= (+ x435 63) x699) (= (x1422 x1312) x1296) (= x1296 x1155) (= x787 3686331914) (< x1256 x576) (= x138 (+ 96 x167)) (= (+ 4 x1375) x1032) (= x653 (+ x1248 x539)) (not (< x138 x167)) (= x1245 x1268) (= (x824 x1032) x76) (= x1267 (x824 x748)) (= (x380 115792089237316195423570985008687907853269984665640564039457584007913129639904 x509) x435) (= (+ x138 32 x698) x724) (= x539 (* x1267 32)) (= x708 x1215) (= x1286 x1559) (= (+ 128 x985) x167) (= x1248 (+ 32 x748)) (= (* x1267 32) x698) (= x1369 x410) (>= x137 1) (= (+ x748 31) x1256) (= false x578) (> x724 x138) (<= x857 127) (= x411 (x1348 x1245)) (= (+ x1032 31) x1051) (= x985 (x380 115792089237316195423570985008687907853269984665640564039457584007913129639904 x699)) (<= x1267 18446744073709551615) (= x182 (+ x76 160)) (>= 127 x857) (= x1169 x532) (= x1122 (+ x1032 32))) (or (and (and (= (* 32 x1267) x1260) (= x1304 (+ x138 32))) (not x1235)) x1235)) (= x811 x72))) (and x1052 (= x526 x185) (= x185 x1468) (= x148 x1468) (= x512 36) (= (ite x604 x1392 x449) x1052))) x25)))
(assert (x22 x162))
(assert (x22 x1209))
(assert (x22 x743))
(assert (< 10000 (x1465 x1007 x1463 x1386 x150 x670 x1418)))
(assert (= x1214 (and x3 (not x1476))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x722 x865 x1294 x177)))
(assert (x22 x1106))
(assert (= x841 (=> (and (= (x1414 (+ 96 x557)) x288) (= (not (> x353 128)) x1262) (= (x483 x428) x1573) (= x428 (x1414 (+ x24 96)))) (and x1262 x343))))
(assert (x22 x276))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (< 10000 (x1465 x865 x1066 x1321 x1093 x1410 x829)))
(assert (= 64 (x1037 (x722 64 x1445 3))))
(assert (= (and x524 (not x1264)) x1233))
(assert (x22 x473))
(assert (x22 x675))
(assert (x22 x20))
(assert (=> (>= 10000 x691) (= 0 (x892 x691))))
(assert (x697 x161))
(assert (= (x1037 (x722 x606 x413 x907)) x606))
(assert (= x956 (x56 (x213 x1275 x71 x492 x298 x1516 x956 x879))))
(assert (= (x892 1099511627775) 0))
(assert (x22 x47))
(assert (x22 x978))
(assert (=> (>= 10000 x943) (= 0 (x892 x943))))
(assert (x22 x1282))
(assert (x22 x1123))
(assert (x22 x503))
(assert (= (x892 x1578) (x892 (+ x1578 1))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x606 x1490)))
(assert (x22 x937))
(assert (x22 x1509))
(assert (= (x892 (+ x1273 1)) (x892 x1273)))
(assert (=> (>= 10000 x620) (= 0 (x892 x620))))
(assert (x955 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (x22 x1244))
(assert (x455 x699 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x275))
(assert (x22 x182))
(assert (x22 x1421))
(assert (x22 x665))
(assert (= (x892 (x92 x1007 x846)) (x92 x1007 x846)))
(assert (= x1136 (x663 (x722 64 x1136 4))))
(assert (< (x92 x930 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1254))
(assert (x955 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x22 x500))
(assert (x1475 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1090 10000) (= 0 (x892 x1090))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x92 x1282 x1570)))
(assert (= (x663 (x92 x1497 x342)) x342))
(assert (x22 x514))
(assert (x22 x464))
(assert (=> (>= 10000 x1153) (= (x892 x1153) 0)))
(assert (x22 x1492))
(assert (= x1282 (x1037 (x545 x1282 x1453 x996 x1225 x951))))
(assert (x22 x995))
(assert (x22 x961))
(assert (= (x722 64 x1136 4) (x892 (x722 64 x1136 4))))
(assert (x22 x982))
(assert (x955 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (=> (>= 10000 x833) (= 0 (x892 x833))))
(assert (= x257 (x618 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (= x368 (x56 (x1465 x930 x885 x888 x405 x130 x368))))
(assert (=> (<= x805 10000) (= (x892 x805) 0)))
(assert (x22 x1299))
(assert (= x1321 (x1156 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (= x343 (=> (and (= (x1328 (- x287 32)) x1447) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x601) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x601) (= x1107 (x1414 (+ x557 x353))) (>= x1107 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x601) (= x728 (x1414 (+ x601 32))) (> x1107 x601) (= x930 (x46 x601)) (= (>= 224 x930) x1146) (= (x1328 (- x1107 x601)) x287)) (and x1146 (=> (and (= (x1414 (+ x728 96)) x229) (= x1326 (x1414 (+ x728 32))) (= x244 (x46 x229)) (= x1334 (x46 x728)) (= (x1414 (+ 32 x1107)) x793) (= (x46 x443) x1148) (= (x46 x616) x1461) (= (x46 x1106) x541) (= x590 (x46 x1205)) (= (x46 x762) x929) (= (x46 x208) x1373) (= x530 (x1465 x930 x885 x888 x405 x130 x368)) (= x1442 (x213 x930 x1334 x1555 x887 x695 x917 x1373)) (= x762 (x1414 (+ x728 32))) (= x286 (x1414 (+ 128 x728))) (= (x46 x728) x725) (= x1106 (x1414 (+ 32 x728))) (= x1506 (x46 x728)) (= (x46 x979) x206) (= x888 (x46 x1326)) (= (x46 x623) x1504) (= (x46 x466) x368) (= (x1414 (+ x728 64)) x1205) (= (x46 x728) x523) (= x1455 (x1414 (+ 128 x728))) (= x161 (x46 x138)) (= x1508 (x722 x930 x1506 x1470)) (= (ite (= x930 0) x875 (ite (<= x930 32) x1144 (ite (>= 64 x930) x1508 (ite (>= 96 x930) x344 (ite (<= x930 128) x883 (ite (>= 160 x930) x530 (ite (>= 192 x930) x1442 (ite (>= 224 x930) x1301 x1395)))))))) x190) (= (x46 x272) x936) (= (x46 x1574) x746) (= x405 (x46 x217)) (= x272 (x1414 (+ 96 x728))) (= (x46 x728) x458) (= x624 (x46 x728)) (= x1555 (x46 x573)) (= x1470 (x46 x671)) (= (x1414 (+ 96 x728)) x635) (= (> x161 0) x448) (= (x46 x81) x130) (= x1144 (x92 x930 x458)) (= (x1414 (+ x728 64)) x217) (= x623 (x1414 (+ 160 x728))) (= (x1414 (+ x728 128)) x466) (= (x46 x286) x805) (= x573 (x1414 (+ x728 32))) (= (x1414 (+ 96 x728)) x81) (= x438 (+ x138 32)) (= x979 (x1414 (+ 192 x728))) (= (x46 x1455) x917) (= (x1335 x930 x523 x1148 x1461) x344) (= (x1414 (+ 32 x728)) x443) (= x616 (x1414 (+ x728 64))) (= (x545 x930 x624 x541 x590 x244) x883) (= (x1414 (+ 64 x728)) x1208) (= x671 (x1414 (+ x728 32))) (= x1574 (x1414 (+ 64 x728))) (= (x1414 (+ 160 x728)) x208) (= (x46 x635) x695) (= x1301 (x603 x930 x725 x929 x746 x936 x805 x1504 x206)) (= x885 (x46 x728)) (= (x46 x1208) x887) (= x875 (x682 0))) (and (=> (and x448 (and (= (x46 x438) x1396) (= x1394 (+ 32 x438)) (= (< 1 x161) x630) (= x827 (x1414 (+ 32 x793))))) (and (=> (and (not x630) (and (= x827 x41) (= x803 1) (= x1352 x1394))) x801) (=> (and (and (= (x1581 x1394) x940) (= x889 (+ 32 x1394)) (= (< 2 x161) x362) (= x33 (x1414 (+ 32 x827)))) x630) (and (=> (and x362 (and (= x219 (x1414 (+ x33 32))) (= (< 3 x161) x328) (= x248 (+ 32 x889)) (= x1318 (x898 x889)))) (and (=> (and (and (= 3 x803) (= x248 x1352) (= x41 x219)) (not x328)) x801) (=> x328 x1454))) (=> (and (not x362) (and (= x33 x41) (= 2 x803) (= x1352 x889))) x801))))) (=> (and (not x448) (and (= x803 0) (= x793 x41) (= x1352 x438))) x801)))))))
(assert (= 64 (x1037 (x722 64 x1136 3))))
(assert (=> (<= x492 10000) (= (x892 x492) 0)))
(assert (=> (<= x1211 10000) (= (x892 x1211) 0)))
(assert (x22 x219))
(assert (= (x663 (x545 x865 x1370 x774 x1511 x256)) x1370))
(assert (x455 x72 1099511627776))
(assert (= x833 (x56 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (x22 x445))
(assert (x22 x622))
(assert (x22 x741))
(assert (= x847 (x5 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (= x479 (x663 (x722 x1007 x479 x515))))
(assert (=> (>= 10000 x206) (= 0 (x892 x206))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x22 x990))
(assert (= (x5 (x545 x606 x1084 x1515 x1295 x1102)) x1295))
(assert (=> (>= 10000 x522) (= 0 (x892 x522))))
(assert (x22 x987))
(assert (x22 x315))
(assert (= 0 (x892 4067465820)))
(assert (x22 x368))
(assert (= x1438 (x5 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (< (x1465 x930 x885 x888 x405 x130 x368) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x892 (x722 x1282 x494 x1522)) (x722 x1282 x494 x1522)))
(assert (= 0 (x892 19198514131333069964808701557143768876432618777570657477111002777175690575872)))
(assert (= (x618 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415)) x659))
(assert (= (and x604 x758) x863))
(assert (x22 x438))
(assert (x22 x1467))
(assert (> (x545 x501 x1149 x450 x227 x1009) 10000))
(assert (x22 x698))
(assert (x22 x635))
(assert (x455 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x552))
(assert (= (x892 x406) (x892 (+ x406 1))))
(assert (=> (<= x1009 10000) (= 0 (x892 x1009))))
(assert (x22 x1570))
(assert (=> (<= x670 10000) (= 0 (x892 x670))))
(assert (x22 x130))
(assert (x22 x146))
(assert (x22 x1195))
(assert (=> (>= 10000 x951) (= (x892 x951) 0)))
(assert (x22 x940))
(assert (x22 x1104))
(assert (= (x892 (+ 1 x140)) (x892 x140)))
(assert (x22 x551))
(assert (x22 x833))
(assert (= x865 (x1037 (x213 x865 x1277 x558 x1315 x158 x833 x257))))
(assert (x22 x861))
(assert (= (x682 0) (x892 (x682 0))))
(assert (x22 x696))
(assert (x22 x724))
(assert (=> (<= x1453 10000) (= 0 (x892 x1453))))
(assert (=> (>= 10000 x298) (= (x892 x298) 0)))
(assert (x22 x482))
(assert (x22 x172))
(assert (x22 x411))
(assert (> (x722 64 x1136 3) 10000))
(assert (= (x1156 (x1465 x1282 x310 x116 x192 x959 x233)) x116))
(assert (x22 x1378))
(assert (= (x892 24068214603859720034826088920346711864364023158142564334732402816841156945010) 0))
(assert (x22 x387))
(assert (= x812 (=> (and (= x1014 (x1414 (+ x1053 32))) (= x1053 (x1414 (+ 64 x945))) (= x586 (> x1267 0)) (= (ite (not (= x65 0)) 1 0) x7) (= x101 1) (= (x1414 (+ 64 x843)) x776) (<= x843 115792089237316195423570985008687907853269984665640564039457584007913129639870) (= (+ 5 x1031) x79) (= (x1414 (+ x1053 64)) x1113) (<= x945 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1332 1) (>= 18446744073709551550 x843) (= (x380 1099511627775 x72) x1121) (not (< x945 x776)) (= x1278 (x1414 (+ x475 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x1053) (= x1305 (x1536 x1464)) (= (x419 x406) x1150) (>= 18446744073709551550 x843) (= x1332 (x419 x406)) (< x1113 x475) (= x1464 (x1414 (+ x843 32))) (> x1113 x1053) (or (<= x843 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x843)) (= (x763 x795) x1010) (= x252 (x722 64 x1136 4)) (<= x112 16777215) (>= x35 1) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x1053) (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639810) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639868)) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639742) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x1053))) (or (>= 18446744073709551487 x843) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x843)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x1053) (= x611 (x429 x790)) (not (< x1150 x1121)) (or (>= x843 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x843 18446744073709551487)) (= (ite (= x1435 x921) (ite (not (= x1435 0)) 1 0) (ite (= x1435 x921) 1 0)) x294) (or (and (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639684) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1053) (and (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x1053)) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639679) (and (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639805) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x1053))) (= x790 (x722 64 x275 x79)) (= (x1414 (+ x1113 64)) x475) (= 1 x294) (= (x380 1461501637330902918203684832716283019655932542975 x1305) x921) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639931) (= (x722 64 x1136 3) x1031) (= x65 x7) (>= 1099511627775 x1332) (> x1053 x945) (<= x65 1) (= (+ 1 x1031) x406) (= x965 (x1414 (+ 32 x1113))) (<= x945 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x945)) (> x776 x843) (= (+ 1 x252) x795) (>= 1099511627775 x1150) (= x300 (x1414 (+ 64 x1278))) (not (= x945 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x65 (x1536 x843)) (= (x1210 x252) x112) (< x776 x945) (not (= x945 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x945) (= x611 0) (< x1278 x300) (> x1278 x475) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x1053) (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639805)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x1053) (and (<= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639868) (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (>= x1053 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x1053) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639742 x1053))) (= (x1414 (+ 32 x945)) x981) (= (+ 64 x776) x945)) (and (=> (and (not x586) (and (= x440 0) (= x75 x300))) x1552) (=> (and (and (= (< 1 x1267) x1283) (>= 18446744073709551615 x1267) (<= 1 x1267)) x586) (and (=> (and (not x1283) (= x53 x300)) x155) (=> (and (and (and (>= 18446744073709551615 x1267) (<= x931 340282366920938463463374607431768211455) (= (x824 x527) x749) (= x1264 (not (= x931 x1188))) (= x1167 (x1414 (+ x1248 x749))) (= x638 (x1414 (+ x1248 x665))) (= (x1414 (+ 32 x638)) x198) (= (+ 32 x1248) x527) (or (>= x749 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x749)) (= (x824 x198) x931) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x665) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x665)) (<= x1188 340282366920938463463374607431768211455) (= x154 (x1414 (+ x1167 32))) (= x652 (x1328 (- x576 x1248))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749)) (< x749 x894)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749))) (= (ite x1264 1 0) x1347) (= x894 (x1328 (- x652 95))) (= (x824 x1248) x665) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665)) (< x665 x894)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x665) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894))) (<= 2 x1267) (= (x824 x154) x1188)) (or (and (and (or (>= x1100 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1100)) (= x1439 (x1414 (+ x1493 x1248))) (= x1058 (x824 x1343)) (= (x824 x1439) x815) (<= x1058 1461501637330902918203684832716283019655932542975) (= (x824 x1248) x1493) (not (= x815 x1058)) (= x1343 (x1414 (+ x1248 x1100))) (= (x824 x527) x1100) (or (>= x1493 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x1493 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (<= x815 1461501637330902918203684832716283019655932542975) (or (and (> x1493 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x894 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1493)) (> x894 x1493))) (or (and (= (<= x894 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1100 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x894 x1100)) (and (> x1100 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x894)))) (not x1264)) (and x1264 (= 1 x1347)))) x1283) x73)))))))
(assert (= (x892 340282366920938463463374607431768211454) 0))
(assert (x22 x646))
(assert (= (x892 (+ 1 x252)) (x892 x252)))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (= x1149 (x663 (x545 x501 x1149 x450 x227 x1009))))
(assert (= (or x1482 x335 x323) x1486))
(assert (=> (>= 10000 x1275) (= 0 (x892 x1275))))
(assert (x22 x256))
(assert (x22 x126))
(assert (=> (>= 10000 x925) (= (x892 x925) 0)))
(assert (x22 x1494))
(assert (x225 x738))
(assert (= (x1026 (x213 x865 x1277 x558 x1315 x158 x833 x257)) x158))
(assert (x22 x1204))
(assert (= (x663 (x603 x1007 x938 x1228 x1020 x1513 x949 x484 x1509)) x938))
(assert (x22 x750))
(assert (= x1007 (x1037 (x1335 x1007 x543 x478 x702))))
(assert (= x227 (x5 (x545 x501 x1149 x450 x227 x1009))))
(assert (=> (>= 10000 x606) (= (x892 x606) 0)))
(assert (> (x1335 x606 x468 x131 x649) 10000))
(assert (=> (>= 10000 x1294) (= (x892 x1294) 0)))
(assert (not (x955 (x1335 x1007 x543 x478 x702))))
(assert (= (x1350 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415)) x1415))
(assert (= (x663 (x722 64 x1136 3)) x1136))
(assert (< (x722 x1007 x479 x515) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1447))
(assert (x22 x964))
(assert (= x59 (x1026 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (x22 x1497))
(assert (x455 x699 32))
(assert (x22 x515))
(assert (x22 x379))
(assert (x22 x217))
(assert (=> (>= 10000 x1239) (= (x892 x1239) 0)))
(assert (= x1282 (x1037 (x92 x1282 x1570))))
(assert (not (x955 (x722 64 x704 3))))
(assert (= (x892 (+ x108 1)) (x892 x108)))
(assert (< (x1465 x606 x309 x513 x966 x47 x522) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1513 10000) (= (x892 x1513) 0)))
(assert (= (x892 (x545 x1497 x826 x1192 x1153 x434)) (x545 x1497 x826 x1192 x1153 x434)))
(assert (x22 x273))
(assert (x22 x565))
(assert (x22 x1318))
(assert (x225 x72))
(assert (= (x892 x1345) (x892 (+ x1345 1))))
(assert (= x1302 (x663 (x213 x606 x1302 x1537 x847 x707 x691 x1483))))
(assert (x22 x673))
(assert (x22 x891))
(assert (= (x663 (x92 x930 x458)) x458))
(assert (x22 x29))
(assert (x22 x854))
(assert (not (x955 (x1335 x1275 x711 x1317 x214))))
(assert (< 10000 (x722 x1275 x1099 x1211)))
(assert (x22 x617))
(assert (=> (<= x859 10000) (= (x892 x859) 0)))
(assert (= (x1026 (x545 x1007 x120 x989 x977 x1196)) x1196))
(assert (x22 x1167))
(assert (x22 x994))
(assert (x22 x209))
(assert (=> (>= 10000 x1066) (= 0 (x892 x1066))))
(assert (x22 x83))
(assert (x22 x498))
(assert (x22 x407))
(assert (x22 x107))
(assert (x22 x887))
(assert (x955 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (=> (<= x1067 10000) (= (x892 x1067) 0)))
(assert (x22 x644))
(assert (= x501 (x1037 (x545 x501 x1149 x450 x227 x1009))))
(assert (x22 x1415))
(assert (= (x213 x501 x1538 x144 x631 x1546 x620 x1526) (x892 (x213 x501 x1538 x144 x631 x1546 x620 x1526))))
(assert (=> (<= x677 10000) (= (x892 x677) 0)))
(assert (= (and (not x586) x188) x173))
(assert (x22 x1119))
(assert (x22 x1223))
(assert (= (x892 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (= (and (not x200) x546) x168))
(assert (= x1093 (x5 (x1465 x865 x1066 x1321 x1093 x1410 x829))))
(assert (x22 x7))
(assert (x22 x1390))
(assert (x22 x797))
(assert (x22 x1427))
(assert (x22 x778))
(assert (= x758 true))
(assert (< (x213 x930 x1334 x1555 x887 x695 x917 x1373) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x22 x1054))
(assert (= x936 (x1026 (x603 x930 x725 x929 x746 x936 x805 x1504 x206))))
(assert (=> (<= x1386 10000) (= 0 (x892 x1386))))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (=> (<= x478 10000) (= (x892 x478) 0)))
(assert (x22 x839))
(assert (x22 x70))
(assert (not (x955 (x1465 x930 x885 x888 x405 x130 x368))))
(assert (= x468 (x663 (x1335 x606 x468 x131 x649))))
(assert (x22 x257))
(assert (=> (>= 10000 x227) (= (x892 x227) 0)))
(assert (= (x1037 (x545 x930 x624 x541 x590 x244)) x930))
(assert (= (x618 (x213 x930 x1334 x1555 x887 x695 x917 x1373)) x1373))
(assert (x22 x977))
(assert (= (and x188 x586) x835))
(assert (= 0 (x892 25877242110744216891076975195880784582809329153640315260649044424131709239296)))
(assert (x22 x731))
(assert (x22 x1334))
(assert (x22 x165))
(assert (x22 x902))
(assert (= x1067 (x1156 (x1335 x1497 x83 x1067 x1250))))
(assert (> (x1465 x501 x453 x589 x960 x943 x318) 10000))
(assert (= (and (not x928) x1298) x1193))
(assert (= x614 (x56 (x603 x1275 x464 x717 x510 x59 x614 x659 x1415))))
(assert (= (x892 (x213 x1275 x71 x492 x298 x1516 x956 x879)) (x213 x1275 x71 x492 x298 x1516 x956 x879)))
(assert (= x930 (x1037 (x722 x930 x1506 x1470))))
(assert (= (x892 (x722 x606 x413 x907)) (x722 x606 x413 x907)))
(assert (x22 x337))
(assert (= (x1037 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x1497))
(assert (=> (>= 10000 x558) (= (x892 x558) 0)))
(assert (=> (<= x463 10000) (= (x892 x463) 0)))
(assert (> (x722 64 x704 3) 10000))
(assert (= x989 (x1156 (x545 x1007 x120 x989 x977 x1196))))
(assert (= (x1350 (x603 x501 x153 x822 x839 x327 x1045 x1384 x431)) x431))
(assert (=> (>= 10000 x612) (= 0 (x892 x612))))
(assert (x22 x354))
(assert (= x1497 (x1037 (x92 x1497 x342))))
(assert (x22 x709))
(assert (= (x213 x1497 x1523 x1514 x607 x1082 x1157 x859) (x892 (x213 x1497 x1523 x1514 x607 x1082 x1157 x859))))
(assert (x22 x394))
(assert (x22 x294))
(assert (x22 x849))
(assert (=> (>= 10000 x725) (= (x892 x725) 0)))
(assert (x22 x678))
(assert (x455 x738 1461501637330902918203684832716283019655932542976))
(assert (x22 x74))
(assert (= (x5 (x1335 x865 x983 x743 x687)) x687))
(assert (x22 x101))
(assert (x22 x272))
(assert (=> (<= x396 10000) (= (x892 x396) 0)))
(assert (x22 x39))
(assert (x22 x304))
(assert (= (x1037 (x213 x930 x1334 x1555 x887 x695 x917 x1373)) x930))
(assert (x22 x1412))
(assert (x22 x1314))
(assert (x22 x400))
(assert (= (x1037 (x722 64 x842 3)) 64))
(assert (x22 x404))
(assert (x22 x1207))
(assert (= x398 (and x967 (not x737))))
(assert (< 10000 (x1335 x1282 x677 x596 x139)))
(assert (x22 x1460))
(assert (> (x722 x1007 x479 x515) 10000))
(assert (x22 x671))
(assert (x22 x1504))
(assert (= (=> (and (and (= x148 x1194) (= x640 false) (= x488 false) (= x684 x461) (= x461 x1194) (= (ite (not (= x1018 0)) 1 0) x365) (= x872 36)) (and (= x1397 x489) (= (x1110 x152) x1309) (= x575 x1206) (= false x1258) (<= x1166 127) (>= 127 x1166) (= x169 (x1272 x108)) (= x592 (x485 x377)) (= x1488 false) (= x1190 x180) (= x1333 (+ 1 x152)) (= x207 x753) (= x1271 (x820 864)) (= x93 (not x264)) (= x962 true) (<= 1 x102) (= x962 x1316) (= (x1524 x152) x998) (= x1206 (x820 896)) (= x102 (x1213 x1312)) (= x684 x1445) (= x1381 (x419 x152)) (= x1094 false) (= x97 (x820 704)) (= 0 x1377) (= false x932) (= x1190 (x820 832)) (= (x1219 x1333) x632) (= x1271 x756) (= x1541 x1391) (not x93) (= (x1232 x152) x44) (= (x1289 x152) x791) (= (+ x1333 1) x108) (= (x820 928) x243) (= (ite x93 x1541 x1316) x757) (= x489 (x820 768)) (= x753 (x820 960)) (<= x632 340282366920938463463374607431768211455) (= x1430 x243) (<= x44 1099511627775) (>= 1099511627775 x1381) (>= 255 x998) (= (ite (not (= 0 (ite (not (= x998 0)) 1 0))) 1 0) x340) (= x152 (+ x1578 1)) (= x1487 x364) (= x97 x1130) (= (x722 64 x1445 3) x1578) (<= x1309 340282366920938463463374607431768211455) (= x1400 false) (= (= x364 0) x264) (= false x1274) (= x1487 (x820 800)) (= (+ x108 1) x377) (= 911662625 x641) (<= x791 1099511627775))) x757) x779))
(assert (x22 x1277))
(assert (x22 x501))
(assert (x22 x443))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (< (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x130 10000) (= 0 (x892 x130))))
(assert (= (x663 (x603 x1497 x357 x1013 x789 x396 x1501 x67 x204)) x357))
(assert (x22 x145))
(assert (x22 x522))
(assert (< (x722 64 x1136 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x373) (= 0 (x892 x373))))
(assert (x22 x1032))
(assert (< (x722 64 x842 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x624 10000) (= (x892 x624) 0)))
(assert (=> (<= x848 10000) (= (x892 x848) 0)))
(assert (=> (<= x1483 10000) (= (x892 x1483) 0)))
(assert (x22 x308))
(assert (> (x213 x501 x1538 x144 x631 x1546 x620 x1526) 10000))
(assert (> (x722 x1497 x1572 x1420) 10000))
(assert (= x494 (x663 (x722 x1282 x494 x1522))))
(assert (= (x1026 (x1465 x1275 x517 x258 x373 x426 x1015)) x426))
(assert (= x501 (x1037 (x92 x501 x634))))
(assert (= (x892 (x545 x606 x1084 x1515 x1295 x1102)) (x545 x606 x1084 x1515 x1295 x1102)))
(assert (x22 x342))
(assert (= (x1156 (x722 x501 x628 x1085)) x1085))
(assert (= (x1156 (x545 x1282 x1453 x996 x1225 x951)) x996))
(assert (=> (>= 10000 x279) (= 0 (x892 x279))))
(assert (x1475 x509))
(assert (x455 x1305 1461501637330902918203684832716283019655932542976))
(assert (x22 x1575))
(assert (x22 x683))
(assert (x22 x534))
(assert (x455 x806 32))
(assert (not (x955 (x545 x1497 x826 x1192 x1153 x434))))
(assert (x22 x378))
(assert (=> (>= 10000 x596) (= (x892 x596) 0)))
(assert (x22 x1396))
(assert (=> (>= 10000 x1317) (= 0 (x892 x1317))))
(assert (not (x955 (x1465 x1275 x517 x258 x373 x426 x1015))))
(assert (=> (<= x275 10000) (= (x892 x275) 0)))
(assert (> (x603 x1275 x464 x717 x510 x59 x614 x659 x1415) 10000))
(assert (= x925 (x663 (x1465 x1497 x925 x926 x1438 x250 x661))))
(assert (x22 x607))
(assert (x22 x340))
(assert (= x187 (=> (and (and (= x1046 3686331914) x852 (>= x148 0) (= x1270 x1063) (not (= x637 x45)) (<= x976 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1312) x441 (>= 1461501637330902918203684832716283019655932542975 x269) (= x1512 (< 0 (x1213 x45))) (= x114 36) (>= x269 0) (>= 1461501637330902918203684832716283019655932542975 x284) (= x441 (< 0 (x1213 x637))) (not (= x676 x1312)) (not (= x556 x637)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1405) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x576) (>= 1461501637330902918203684832716283019655932542975 x612) (>= x284 0) (<= 356 x576) (>= 1461501637330902918203684832716283019655932542975 x45) (= (> (x1213 x1312) 0) x605) (= false x760) (= x680 7) (>= x811 0) (>= x1405 0) (= x852 (< 0 (x1213 x676))) (>= 1461501637330902918203684832716283019655932542975 x202) (<= 1 x556) (<= x1268 1461501637330902918203684832716283019655932542975) x1568 (= false x63) (<= 0 x307) (= x148 x1270) (>= 4294967295 x307) (= false x151) x605 (>= x442 0) (<= x785 1461501637330902918203684832716283019655932542975) x1512 (not (= x556 x676)) (<= x1419 1461501637330902918203684832716283019655932542975) (>= x976 0) (not (= x1312 x637)) (<= x924 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x45 x676)) (<= x442 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x361 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x352) (= x1312 x1363) (>= x352 0) (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x556) (>= x612 1) (not (= x676 x612)) x232 (not (= x612 x556)) (<= x542 1461501637330902918203684832716283019655932542975) (<= x148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x45 x556)) (<= x637 1461501637330902918203684832716283019655932542975) (not (= x637 x612)) (= x723 0) (>= x45 1) (= x1063 x782) (>= x202 0) (<= 0 x924) (<= x1312 1461501637330902918203684832716283019655932542975) (<= x676 1461501637330902918203684832716283019655932542975) (not (= x612 x1312)) (>= x184 0) (>= x1268 0) (not (= x612 x45)) (<= x184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1568 (> (x1213 x556) 0)) (not (= x556 x1312)) (= x232 (> (x1213 x612) 0)) (not (= x637 x676)) (<= 1 x676) (<= 1 x637) (not (= x45 x1312))) (and (= x315 x1585) (= (x1232 x729) x1128) (= (x1524 x729) x299) (= (x485 x326) x1331) (= x136 (x648 928)) (= (x648 864) x1183) (>= x993 1) (= x782 x704) (<= x1432 1099511627775) (= x1383 false) (>= 1099511627775 x1128) (= x750 (x648 896)) (= x729 (+ 1 x636)) (>= 340282366920938463463374607431768211455 x778) (= (x648 960) x297) (= (x722 64 x704 3) x636) (= (+ 1 x729) x1345) (= x315 (x648 768)) (= x1404 x297) (= x91 x720) (= x172 (x419 x729)) (= (+ 1 x1345) x1273) (= x1004 (x648 704)) (= (x1289 x729) x1432) (= x1409 false) (= 0 x1062) (= x347 (x809 x1345)) (<= x1569 127) (= x1247 x136) (= false x1073) (>= 1099511627775 x172) (= x993 (x1213 x1312)) (= (ite (not (= (ite (not (= 0 x299)) 1 0) 0)) 1 0) x900) (= x750 x1203) (= x91 (x648 800)) (>= 127 x1569) (= x1088 x882) (<= x299 255) (= x604 (not x1534)) (= x1043 false) (= (+ 1 x1273) x326) (= (= 0 x720) x1534) (= (x1272 x1273) x124) (<= x347 340282366920938463463374607431768211455) (= x813 false) (= x1004 x953) (= x778 (x570 x729)) (= false x474) (= (x648 832) x1088) (= x1183 x1336) (= x871 911662625))) (and (=> (and (not x604) (and (= x18 true) (= x449 x18) (= x1392 x1138))) x1444) (=> x604 x1510)))))
(assert (x22 x691))
(assert (x22 x966))
(assert (= (x1037 (x1335 x1497 x83 x1067 x1250)) x1497))
(assert (x22 x1523))
(assert (x22 x1411))
(assert (x22 x9))
(assert (= (x663 (x1465 x501 x453 x589 x960 x943 x318)) x453))
(assert (= x1549 (and (not x37) x1252)))
(assert (x22 x105))
(assert (x22 x718))
(assert (x22 x528))
(assert (x22 x1438))
(assert (x22 x971))
(assert (x22 x1499))
(assert (x22 x944))
(assert (x22 x819))
(assert (x22 x959))
(assert (x22 x1228))
(assert (x22 x285))
(assert (=> (<= x357 10000) (= 0 (x892 x357))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1465 x501 x453 x589 x960 x943 x318)))
(assert (= (and x952 (not x1518)) x335))
(assert (> (x92 x1282 x1570) 10000))
(assert (x22 x1399))
(assert (= x1187 (x618 (x603 x606 x1143 x642 x549 x491 x279 x1187 x726))))
(assert (= (x892 (x722 64 x1054 4)) (x722 64 x1054 4)))
(assert (x22 x1102))
(assert (x22 x1574))
(assert (= x1282 (x1037 (x213 x1282 x331 x128 x1000 x555 x982 x456))))
(assert (> (x545 x1007 x120 x989 x977 x1196) 10000))
(assert (= x501 (x1037 (x1465 x501 x453 x589 x960 x943 x318))))
(assert (=> (<= x1149 10000) (= 0 (x892 x1149))))
(assert (=> (<= x1015 10000) (= 0 (x892 x1015))))
(assert (= 0 (x892 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (=> (>= 10000 x1537) (= 0 (x892 x1537))))
(assert (=> (>= 10000 x687) (= (x892 x687) 0)))
(assert (x22 x1441))
(assert (x22 x484))
(assert (= x1153 (x5 (x545 x1497 x826 x1192 x1153 x434))))
(assert (=> (<= x458 10000) (= 0 (x892 x458))))
(assert (x22 x91))
(assert (x22 x1128))
(assert (=> (<= x256 10000) (= 0 (x892 x256))))
(assert (x22 x1036))
(assert (> (x545 x606 x1084 x1515 x1295 x1102) 10000))
(assert (= (x1037 (x545 x865 x1370 x774 x1511 x256)) x865))
(assert (x22 x1416))
(assert (x22 x838))
(assert (x22 x1155))
(assert (x22 x1266))
(assert (x455 x806 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x955 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (x22 x1564))
(assert (x22 x796))
(assert (x22 x677))
(assert (x22 x1075))
(assert (x22 x234))
(assert (x22 x939))
(assert (< (x682 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(check-sat)
(exit)
