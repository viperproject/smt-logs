(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x8 () Int)
(declare-fun x126 () Bool)
(declare-fun x374 () Int)
(declare-fun x347 () Int)
(declare-fun x111 () Bool)
(declare-fun x60 () Int)
(declare-fun x401 () Int)
(declare-fun x109 () Bool)
(declare-fun x782 () Int)
(declare-fun x770 () Int)
(declare-fun x646 () Int)
(declare-fun x569 () Int)
(declare-fun x207 () Bool)
(declare-fun x141 () Bool)
(declare-fun x737 () Int)
(declare-fun x493 (Int) Int)
(declare-fun x795 () Int)
(declare-fun x253 () Int)
(declare-fun x475 () Int)
(declare-fun x90 () Int)
(declare-fun x93 () Int)
(declare-fun x234 () Int)
(declare-fun x611 () Int)
(declare-fun x789 () Int)
(declare-fun x267 () Int)
(declare-fun x279 () Bool)
(declare-fun x658 () Int)
(declare-fun x692 () Int)
(declare-fun x272 (Int) Int)
(declare-fun x628 () Int)
(declare-fun x325 (Int) Int)
(declare-fun x87 () Int)
(declare-fun x523 () Bool)
(declare-fun x546 () Int)
(declare-fun x643 () Int)
(declare-fun x480 (Int) Int)
(declare-fun x566 () Int)
(declare-fun x526 () Int)
(declare-fun x9 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x47 () Int)
(declare-fun x680 () Int)
(declare-fun x541 () Bool)
(declare-fun x254 () Bool)
(declare-fun x605 () Bool)
(declare-fun x580 () Int)
(declare-fun x521 () Int)
(declare-fun x262 () Int)
(declare-fun x504 () Int)
(declare-fun x805 () Int)
(declare-fun x329 () Int)
(declare-fun x568 () Int)
(declare-fun x221 () Int)
(declare-fun x494 () Bool)
(declare-fun x25 () Int)
(declare-fun x2 () Int)
(declare-fun x248 (Int) Int)
(declare-fun x708 () Int)
(declare-fun x532 () Int)
(declare-fun x806 () Int)
(declare-fun x457 () Int)
(declare-fun x260 () Int)
(declare-fun x373 () Int)
(declare-fun x744 () Int)
(declare-fun x548 () Bool)
(declare-fun x733 () Int)
(declare-fun x662 () Bool)
(declare-fun x463 () Int)
(declare-fun x462 () Int)
(declare-fun x118 () Int)
(declare-fun x620 () Bool)
(declare-fun x664 () Int)
(declare-fun x657 () Int)
(declare-fun x753 () Int)
(declare-fun x338 () Int)
(declare-fun x257 () Int)
(declare-fun x612 () Int)
(declare-fun x295 () Int)
(declare-fun x103 (Int) Int)
(declare-fun x519 () Bool)
(declare-fun x640 () Int)
(declare-fun x236 () Int)
(declare-fun x624 () Int)
(declare-fun x421 () Int)
(declare-fun x512 () Int)
(declare-fun x80 () Bool)
(declare-fun x721 () Int)
(declare-fun x76 () Int)
(declare-fun x633 () Int)
(declare-fun x81 () Bool)
(declare-fun x775 () Int)
(declare-fun x831 () Int)
(declare-fun x6 () Bool)
(declare-fun x235 () Bool)
(declare-fun x573 () Int)
(declare-fun x55 () Bool)
(declare-fun x556 () Int)
(declare-fun x205 () Int)
(declare-fun x203 () Bool)
(declare-fun x530 () Int)
(declare-fun x70 () Bool)
(declare-fun x151 () Int)
(declare-fun x455 () Int)
(declare-fun x397 () Bool)
(declare-fun x360 () Int)
(declare-fun x535 () Bool)
(declare-fun x190 () Int)
(declare-fun x595 () Bool)
(declare-fun x45 () Int)
(declare-fun x751 () Int)
(declare-fun x460 () Int)
(declare-fun x700 () Int)
(declare-fun x213 () Bool)
(declare-fun x129 () Int)
(declare-fun x549 () Int)
(declare-fun x796 () Bool)
(declare-fun x67 () Bool)
(declare-fun x269 () Int)
(declare-fun x289 () Int)
(declare-fun x682 () Int)
(declare-fun x510 () Int)
(declare-fun x413 () Int)
(declare-fun x496 () Int)
(declare-fun x699 () Int)
(declare-fun x574 () Int)
(declare-fun x160 () Bool)
(declare-fun x603 () Int)
(declare-fun x83 () Int)
(declare-fun x189 () Int)
(declare-fun x604 () Int)
(declare-fun x766 () Int)
(declare-fun x318 () Int)
(declare-fun x187 (Int) Int)
(declare-fun x571 () Int)
(declare-fun x381 () Int)
(declare-fun x469 () Int)
(declare-fun x508 () Int)
(declare-fun x233 () Bool)
(declare-fun x65 () Int)
(declare-fun x398 () Int)
(declare-fun x710 () Int)
(declare-fun x345 () Int)
(declare-fun x724 () Int)
(declare-fun x762 () Int)
(declare-fun x323 () Bool)
(declare-fun x697 () Bool)
(declare-fun x102 () Int)
(declare-fun x458 () Int)
(declare-fun x509 () Int)
(declare-fun x150 () Int)
(declare-fun x527 () Int)
(declare-fun x122 () Int)
(declare-fun x395 () Int)
(declare-fun x591 (Int Int Int) Int)
(declare-fun x685 () Int)
(declare-fun x346 () Bool)
(declare-fun x738 () Int)
(declare-fun x678 () Int)
(declare-fun x763 () Bool)
(declare-fun x92 () Bool)
(declare-fun x161 () Int)
(declare-fun x281 () Int)
(declare-fun x169 () Int)
(declare-fun x828 () Int)
(declare-fun x481 () Int)
(declare-fun x282 () Bool)
(declare-fun x755 () Int)
(declare-fun x174 () Int)
(declare-fun x486 () Bool)
(declare-fun x105 () Int)
(declare-fun x422 () Bool)
(declare-fun x339 () Int)
(declare-fun x188 () Int)
(declare-fun x613 () Int)
(declare-fun x538 () Int)
(declare-fun x274 () Bool)
(declare-fun x626 () Int)
(declare-fun x280 () Int)
(declare-fun x728 () Int)
(declare-fun x709 () Bool)
(declare-fun x492 () Int)
(declare-fun x550 () Int)
(declare-fun x334 () Bool)
(declare-fun x779 () Int)
(declare-fun x801 () Bool)
(declare-fun x197 () Int)
(declare-fun x387 (Int) Int)
(declare-fun x298 () Int)
(declare-fun x617 () Int)
(declare-fun x393 () Int)
(declare-fun x452 () Bool)
(declare-fun x663 () Int)
(declare-fun x734 () Int)
(declare-fun x597 () Bool)
(declare-fun x467 () Int)
(declare-fun x85 () Int)
(declare-fun x349 () Int)
(declare-fun x108 () Int)
(declare-fun x799 () Int)
(declare-fun x558 () Int)
(declare-fun x415 () Int)
(declare-fun x100 () Int)
(declare-fun x57 () Int)
(declare-fun x448 () Bool)
(declare-fun x825 () Bool)
(declare-fun x464 () Int)
(declare-fun x63 () Bool)
(declare-fun x797 () Bool)
(declare-fun x278 () Int)
(declare-fun x172 () Int)
(declare-fun x668 () Int)
(declare-fun x644 () Bool)
(declare-fun x34 () Int)
(declare-fun x112 (Int) Int)
(declare-fun x22 () Bool)
(declare-fun x385 () Int)
(declare-fun x3 () Bool)
(declare-fun x84 () Bool)
(declare-fun x114 () Int)
(declare-fun x195 () Int)
(declare-fun x314 () Int)
(declare-fun x631 () Int)
(declare-fun x232 () Int)
(declare-fun x589 () Bool)
(declare-fun x812 () Int)
(declare-fun x674 (Int) Int)
(declare-fun x717 () Int)
(declare-fun x414 () Int)
(declare-fun x693 () Bool)
(declare-fun x577 (Int) Int)
(declare-fun x194 () Int)
(declare-fun x209 () Int)
(declare-fun x642 () Bool)
(declare-fun x72 () Int)
(declare-fun x198 () Int)
(declare-fun x704 () Int)
(declare-fun x324 () Int)
(declare-fun x39 (Int) Int)
(declare-fun x754 () Int)
(declare-fun x718 () Bool)
(declare-fun x266 () Int)
(declare-fun x554 () Int)
(declare-fun x579 () Int)
(declare-fun x375 () Int)
(declare-fun x720 () Int)
(declare-fun x307 () Int)
(declare-fun x74 () Int)
(declare-fun x159 () Bool)
(declare-fun x44 () Int)
(declare-fun x358 (Int) Int)
(declare-fun x106 () Int)
(declare-fun x29 () Int)
(declare-fun x684 () Int)
(declare-fun x585 () Int)
(declare-fun x210 () Int)
(declare-fun x139 () Int)
(declare-fun x96 () Int)
(declare-fun x124 () Bool)
(declare-fun x787 () Int)
(declare-fun x773 () Int)
(declare-fun x217 () Int)
(declare-fun x501 () Bool)
(declare-fun x736 () Bool)
(declare-fun x425 () Int)
(declare-fun x788 () Int)
(declare-fun x265 () Bool)
(declare-fun x284 () Bool)
(declare-fun x743 () Bool)
(declare-fun x534 () Int)
(declare-fun x517 (Int) Int)
(declare-fun x420 () Bool)
(declare-fun x497 () Int)
(declare-fun x824 () Bool)
(declare-fun x364 () Int)
(declare-fun x618 () Int)
(declare-fun x94 () Int)
(declare-fun x202 () Int)
(declare-fun x75 () Int)
(declare-fun x123 () Int)
(declare-fun x212 (Int) Int)
(declare-fun x184 () Int)
(declare-fun x776 () Bool)
(declare-fun x600 (Int) Int)
(declare-fun x564 () Int)
(declare-fun x427 () Bool)
(declare-fun x666 () Int)
(declare-fun x660 () Int)
(declare-fun x52 () Int)
(declare-fun x247 () Int)
(declare-fun x555 () Int)
(declare-fun x712 () Int)
(declare-fun x352 () Int)
(declare-fun x367 () Int)
(declare-fun x485 () Int)
(declare-fun x300 () Int)
(declare-fun x409 () Int)
(declare-fun x447 () Int)
(declare-fun x441 () Bool)
(declare-fun x332 (Int) Int)
(declare-fun x445 () Bool)
(declare-fun x308 () Bool)
(declare-fun x158 () Int)
(declare-fun x392 () Int)
(declare-fun x238 () Int)
(declare-fun x200 () Int)
(declare-fun x250 () Bool)
(declare-fun x167 () Int)
(declare-fun x320 () Bool)
(declare-fun x259 () Int)
(declare-fun x391 () Int)
(declare-fun x677 () Int)
(declare-fun x459 () Int)
(declare-fun x344 () Bool)
(declare-fun x303 () Int)
(declare-fun x705 () Int)
(declare-fun x136 () Int)
(declare-fun x615 () Int)
(declare-fun x192 () Int)
(declare-fun x410 () Int)
(declare-fun x515 () Bool)
(declare-fun x127 () Int)
(declare-fun x133 () Bool)
(declare-fun x804 () Int)
(declare-fun x702 () Int)
(declare-fun x544 () Int)
(declare-fun x525 (Int) Int)
(declare-fun x299 () Int)
(declare-fun x263 () Int)
(declare-fun x330 () Int)
(declare-fun x369 () Int)
(declare-fun x830 () Int)
(declare-fun x328 (Int Int) Int)
(declare-fun x608 () Int)
(declare-fun x131 () Int)
(declare-fun x437 () Int)
(declare-fun x316 () Int)
(declare-fun x382 () Bool)
(declare-fun x816 () Int)
(declare-fun x780 () Bool)
(declare-fun x147 () Int)
(declare-fun x706 () Int)
(declare-fun x79 () Int)
(declare-fun x715 () Bool)
(declare-fun x91 () Bool)
(declare-fun x28 () Int)
(declare-fun x145 () Int)
(declare-fun x58 () Bool)
(declare-fun x211 (Int) Int)
(declare-fun x101 () Int)
(declare-fun x435 () Bool)
(declare-fun x586 () Int)
(declare-fun x533 () Int)
(declare-fun x361 () Int)
(declare-fun x688 () Int)
(declare-fun x288 () Int)
(declare-fun x722 () Int)
(declare-fun x622 () Int)
(declare-fun x703 () Int)
(declare-fun x813 () Bool)
(declare-fun x790 () Int)
(declare-fun x772 (Int Int) Int)
(declare-fun x826 () Bool)
(declare-fun x759 () Int)
(declare-fun x404 (Int) Int)
(declare-fun x491 () Int)
(declare-fun x607 () Bool)
(declare-fun x21 () Int)
(declare-fun x283 () Int)
(declare-fun x24 () Int)
(declare-fun x222 () Int)
(declare-fun x183 () Bool)
(declare-fun x819 () Bool)
(declare-fun x309 () Int)
(declare-fun x251 () Int)
(declare-fun x473 () Bool)
(declare-fun x769 () Int)
(declare-fun x99 () Int)
(declare-fun x602 () Int)
(declare-fun x228 () Int)
(declare-fun x117 () Int)
(declare-fun x311 () Int)
(declare-fun x537 () Int)
(declare-fun x225 () Bool)
(declare-fun x810 () Bool)
(declare-fun x245 () Bool)
(declare-fun x376 () Int)
(declare-fun x432 () Int)
(declare-fun x32 () Int)
(declare-fun x163 () Int)
(declare-fun x752 () Int)
(declare-fun x290 () Int)
(declare-fun x218 () Int)
(declare-fun x116 () Int)
(declare-fun x582 () Bool)
(declare-fun x275 () Int)
(declare-fun x164 () Int)
(declare-fun x322 () Bool)
(declare-fun x61 () Int)
(declare-fun x113 () Int)
(declare-fun x317 () Int)
(declare-fun x815 () Int)
(declare-fun x495 () Int)
(declare-fun x400 () Int)
(declare-fun x516 () Int)
(declare-fun x219 () Int)
(declare-fun x186 () Int)
(declare-fun x551 () Int)
(declare-fun x792 () Int)
(declare-fun x505 () Int)
(declare-fun x17 () Int)
(declare-fun x675 () Int)
(declare-fun x208 () Bool)
(declare-fun x745 (Int Int) Int)
(declare-fun x502 () Bool)
(declare-fun x470 () Int)
(declare-fun x672 () Int)
(declare-fun x149 () Int)
(declare-fun x214 () Int)
(declare-fun x594 () Int)
(declare-fun x196 () Int)
(declare-fun x134 () Int)
(declare-fun x614 () Int)
(declare-fun x479 () Int)
(declare-fun x273 () Int)
(declare-fun x442 () Int)
(declare-fun x777 (Int) Int)
(declare-fun x249 () Int)
(declare-fun x732 () Int)
(declare-fun x433 () Int)
(declare-fun x357 () Bool)
(declare-fun x487 () Int)
(declare-fun x746 () Int)
(declare-fun x348 () Bool)
(declare-fun x423 () Int)
(declare-fun x822 () Int)
(declare-fun x723 (Int) Int)
(declare-fun x794 (Int Int) Int)
(declare-fun x528 () Int)
(declare-fun x54 () Int)
(declare-fun x229 (Int Int) Int)
(declare-fun x370 (Int) Int)
(declare-fun x560 () Bool)
(declare-fun x543 () Int)
(declare-fun x426 () Int)
(declare-fun x756 () Int)
(declare-fun x88 () Int)
(declare-fun x30 () Int)
(declare-fun x20 () Int)
(declare-fun x760 () Int)
(declare-fun x180 () Int)
(declare-fun x629 () Int)
(declare-fun x73 () Int)
(declare-fun x366 () Int)
(declare-fun x230 () Int)
(declare-fun x335 () Int)
(declare-fun x802 () Int)
(declare-fun x748 () Int)
(declare-fun x120 () Int)
(declare-fun x41 () Bool)
(declare-fun x411 () Int)
(declare-fun x747 () Int)
(declare-fun x223 () Bool)
(declare-fun x665 () Int)
(declare-fun x431 () Int)
(declare-fun x140 () Int)
(declare-fun x199 (Int Int) Int)
(declare-fun x783 () Int)
(declare-fun x153 () Int)
(declare-fun x355 () Int)
(declare-fun x33 () Int)
(declare-fun x649 (Int) Int)
(declare-fun x261 () Int)
(declare-fun x326 (Int Int) Int)
(declare-fun x454 () Bool)
(declare-fun x632 () Bool)
(declare-fun x434 () Int)
(declare-fun x110 () Int)
(declare-fun x729 () Int)
(declare-fun x287 () Int)
(declare-fun x818 () Int)
(declare-fun x768 (Int) Int)
(declare-fun x38 () Int)
(declare-fun x162 () Int)
(declare-fun x584 (Int) Int)
(declare-fun x56 () Int)
(declare-fun x778 () Int)
(declare-fun x784 () Int)
(declare-fun x243 () Int)
(declare-fun x383 () Int)
(declare-fun x691 () Int)
(declare-fun x182 () Int)
(declare-fun x270 (Int) Int)
(declare-fun x552 (Int) Int)
(declare-fun x562 () Int)
(declare-fun x399 () Int)
(declare-fun x15 () Int)
(declare-fun x598 () Bool)
(declare-fun x185 () Int)
(declare-fun x231 () Int)
(declare-fun x761 () Int)
(declare-fun x652 () Int)
(declare-fun x610 () Bool)
(declare-fun x539 () Int)
(declare-fun x478 () Bool)
(declare-fun x1 () Int)
(declare-fun x11 () Int)
(declare-fun x513 () Bool)
(declare-fun x226 () Int)
(declare-fun x739 () Bool)
(declare-fun x740 () Int)
(declare-fun x581 () Int)
(declare-fun x488 () Int)
(declare-fun x524 () Int)
(declare-fun x561 () Int)
(declare-fun x321 () Int)
(declare-fun x156 () Bool)
(declare-fun x258 () Int)
(declare-fun x689 () Int)
(declare-fun x416 () Int)
(declare-fun x337 () Int)
(declare-fun x125 () Bool)
(declare-fun x436 () Int)
(declare-fun x201 () Int)
(declare-fun x77 () Bool)
(declare-fun x396 () Bool)
(declare-fun x814 () Int)
(declare-fun x252 () Int)
(declare-fun x461 () Bool)
(declare-fun x244 () Int)
(declare-fun x785 () Int)
(declare-fun x507 () Int)
(declare-fun x296 () Int)
(declare-fun x240 () Int)
(declare-fun x648 () Bool)
(declare-fun x143 () Bool)
(declare-fun x471 () Int)
(declare-fun x286 () Bool)
(declare-fun x365 () Int)
(declare-fun x157 () Int)
(declare-fun x359 () Int)
(declare-fun x540 () Int)
(declare-fun x599 () Int)
(declare-fun x165 () Int)
(declare-fun x5 () Int)
(declare-fun x742 () Int)
(declare-fun x142 () Int)
(declare-fun x119 () Bool)
(declare-fun x227 () Int)
(declare-fun x713 () Int)
(declare-fun x829 () Bool)
(declare-fun x741 () Int)
(declare-fun x621 () Bool)
(declare-fun x268 () Int)
(declare-fun x204 () Int)
(declare-fun x353 () Int)
(declare-fun x636 () Int)
(declare-fun x178 (Int) Int)
(declare-fun x351 () Int)
(declare-fun x559 () Bool)
(declare-fun x31 () Bool)
(declare-fun x256 () Int)
(declare-fun x310 () Int)
(declare-fun x477 () Int)
(declare-fun x394 () Bool)
(declare-fun x696 () Int)
(declare-fun x16 () Int)
(declare-fun x241 () Int)
(declare-fun x4 () Bool)
(declare-fun x653 () Int)
(declare-fun x529 () Int)
(declare-fun x333 () Int)
(declare-fun x522 () Int)
(declare-fun x132 () Int)
(declare-fun x12 () Int)
(declare-fun x827 () Int)
(declare-fun x757 () Int)
(declare-fun x669 () Bool)
(declare-fun x276 () Int)
(declare-fun x774 () Int)
(declare-fun x596 () Int)
(declare-fun x765 () Int)
(declare-fun x115 () Int)
(declare-fun x417 () Int)
(declare-fun x438 () Int)
(declare-fun x37 () Int)
(declare-fun x69 () Int)
(declare-fun x456 () Int)
(declare-fun x408 () Bool)
(declare-fun x809 () Int)
(declare-fun x128 () Int)
(declare-fun x821 () Int)
(declare-fun x701 () Int)
(declare-fun x727 () Bool)
(declare-fun x800 () Bool)
(declare-fun x661 () Int)
(declare-fun x371 () Int)
(declare-fun x193 (Int Int) Int)
(declare-fun x807 () Int)
(declare-fun x725 () Int)
(declare-fun x572 () Bool)
(declare-fun x484 () Bool)
(declare-fun x695 () Bool)
(declare-fun x168 () Bool)
(declare-fun x531 () Int)
(declare-fun x379 () Bool)
(declare-fun x430 () Int)
(declare-fun x315 (Int) Int)
(declare-fun x498 () Int)
(declare-fun x451 () Int)
(declare-fun x292 () Int)
(declare-fun x511 () Int)
(declare-fun x53 () Int)
(declare-fun x297 () Int)
(declare-fun x634 () Int)
(declare-fun x687 () Int)
(declare-fun x606 () Bool)
(declare-fun x583 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x482 () Bool)
(declare-fun x536 () Bool)
(declare-fun x676 () Int)
(declare-fun x659 () Int)
(declare-fun x476 () Int)
(declare-fun x545 () Bool)
(declare-fun x146 () Int)
(declare-fun x82 () Int)
(declare-fun x237 () Int)
(declare-fun x671 () Int)
(declare-fun x341 (Int) Int)
(declare-fun x403 () Int)
(declare-fun x97 () Bool)
(declare-fun x786 () Int)
(declare-fun x791 () Int)
(declare-fun x820 (Int Int) Int)
(declare-fun x386 () Int)
(declare-fun x48 () Int)
(declare-fun x389 () Int)
(declare-fun x681 () Int)
(declare-fun x489 () Int)
(declare-fun x730 () Int)
(declare-fun x520 () Int)
(declare-fun x798 () Int)
(declare-fun x465 () Int)
(declare-fun x645 () Int)
(declare-fun x301 () Int)
(declare-fun x567 () Bool)
(declare-fun x466 () Int)
(declare-fun x641 () Int)
(declare-fun x716 () Int)
(declare-fun x362 () Int)
(declare-fun x181 () Int)
(declare-fun x380 () Int)
(declare-fun x601 () Int)
(declare-fun x86 () Bool)
(declare-fun x563 () Bool)
(declare-fun x166 () Bool)
(declare-fun x483 () Int)
(declare-fun x402 () Int)
(declare-fun x547 () Int)
(declare-fun x144 () Int)
(declare-fun x758 () Int)
(declare-fun x384 () Bool)
(declare-fun x440 () Bool)
(declare-fun x40 (Int) Bool)
(declare-fun x342 () Int)
(declare-fun x637 () Int)
(declare-fun x89 () Int)
(declare-fun x793 () Int)
(declare-fun x500 () Bool)
(declare-fun x453 () Int)
(declare-fun x575 () Bool)
(declare-fun x175 () Int)
(declare-fun x731 () Int)
(declare-fun x59 () Int)
(declare-fun x206 () Bool)
(declare-fun x444 () Int)
(declare-fun x424 () Int)
(declare-fun x635 () Int)
(declare-fun x429 (Int) Int)
(define-fun x714 ((x726 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x726) (>= x726 0)) x726 (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x405 ((x726 Int)) Int (ite (and (< x726 0) (>= x726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x726 115792089237316195423570985008687907853269984665640564039457584007913129639936) x726))
(define-fun x78 ((x726 Int)) Int (ite (and (>= x726 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x726)) x726 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x726) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x726)) (- x726 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x726 0)) (+ x726 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x820 x726 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x148 ((x14 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x14) (<= 0 x14)))
(define-fun x255 ((x14 Int) (x771 Int)) Bool (= (* x14 x771) (x193 x14 x771)))
(define-fun x224 ((x14 Int) (x771 Int)) Bool (and (= (- (* x771 x14) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x771)) (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771)) (= (x193 x14 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) x14)) (= (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) x14) (* (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x35 ((x14 Int) (x771 Int)) Bool (=> (and (> x14 0) (> x771 0)) (= (< (x193 x14 x771) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x771 (x229 (x78 (x193 x14 x771)) x14)))))
(define-fun x42 ((x14 Int) (x771 Int)) Bool (=> (and (not (= x14 0)) (not (= 0 x771))) (and (= x771 (x229 (x193 x14 x771) x14)) (= (x229 (x193 x14 x771) x771) x14))))
(define-fun x449 ((x14 Int) (x771 Int)) Bool (=> (and (< 0 x771) (< 0 x14)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x193 x14 x771)) (> x771 (x229 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14)))))
(define-fun x239 ((x14 Int) (x771 Int)) Bool (and (= (x78 (x193 x14 x771)) (x78 (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x78 (x193 x14 x771)) (x78 (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771))) (= (x78 (x193 x14 x771)) (x78 (x193 x14 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x294 ((x14 Int) (x771 Int)) Bool (and (=> (and (and (< 0 x14) (<= x14 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x771) (> x771 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x193 x14 (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x229 57896044618658097711785492504343953926634992332820282019728792003956564819968 x14) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x771)))) (=> (and (and (<= x14 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14)) (and (> x771 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x771))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x14) (x229 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x771))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x771 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (< 0 x771) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771)) (and (<= x14 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x14 0))) (= (>= (x229 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771) x14) (<= (x193 x14 x771) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x14)) (and (> x771 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x771))) (= (>= (x229 57896044618658097711785492504343953926634992332820282019728792003956564819968 x771) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x14)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x193 (- x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) x771))))))
(define-fun x377 ((x14 Int) (x771 Int)) Bool (and (x224 x14 x771) (x449 x14 x771) (x294 x14 x771) (x239 x14 x771) (x42 x14 x771) (x255 x14 x771) (x35 x14 x771)))
(define-fun x683 ((x14 Int)) Bool (and (= (x193 0 x14) 0) (= 0 (x193 x14 0))))
(define-fun x690 ((x14 Int)) Bool (and (= x14 (x193 x14 1)) (= (x193 1 x14) x14)))
(define-fun x130 ((x14 Int)) Bool (and (x683 x14) (x690 x14)))
(define-fun x623 ((x14 Int)) Bool (and (= (x745 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) x14) (= (x745 x14 115792089237316195423570985008687907853269984665640564039457584007913129639935) x14)))
(define-fun x179 ((x14 Int)) Bool (and (= (x745 0 x14) 0) (= (x745 x14 0) 0)))
(define-fun x176 ((x14 Int)) Bool (= x14 (x745 x14 x14)))
(define-fun x656 ((x14 Int)) Bool (and (x179 x14) (x623 x14) (x176 x14)))
(define-fun x363 ((x14 Int) (x771 Int)) Bool (= (x745 x14 x771) (x745 x771 x14)))
(define-fun x138 ((x14 Int) (x771 Int)) Bool (and (=> (<= 0 x14) (>= x14 (x745 x14 x771))) (=> (<= 0 x771) (<= (x745 x14 x771) x771)) (<= 0 (x745 x14 x771))))
(define-fun x302 ((x14 Int) (x771 Int)) Bool (and (x363 x14 x771) (x138 x14 x771)))
(define-fun x13 ((x14 Int)) Bool (= (x820 x14 1099511627776) (x745 x14 1099511627775)))
(define-fun x576 ((x14 Int)) Bool (and (x302 x14 1099511627775) (x13 x14)))
(define-fun x291 ((x14 Int) (x771 Int)) Bool (and (> x771 (x820 x14 x771)) (>= (x820 x14 x771) 0)))
(define-fun x650 ((x14 Int) (x771 Int)) Bool (=> (and (< 0 x771) (>= x14 0)) (= (> x771 x14) (= (x820 x14 x771) x14))))
(define-fun x619 ((x14 Int) (x771 Int)) Bool (=> (and (and (> (+ x771 x771) x14) (<= x771 x14)) (< 0 x771)) (= (- x14 x771) (x820 x14 x771))))
(define-fun x428 ((x14 Int) (x771 Int)) Bool (=> (< 0 x771) (= (+ (* (x229 x14 x771) x771) (x820 x14 x771)) x14)))
(define-fun x104 ((x14 Int) (x771 Int)) Bool (and (x291 x14 x771) (x619 x14 x771) (x428 x14 x771) (x650 x14 x771)))
(define-fun x49 ((x14 Int)) Bool (= 0 (x820 0 x14)))
(define-fun x340 ((x14 Int)) Bool (= 0 (x820 x14 1)))
(define-fun x68 ((x14 Int)) Bool (= 0 (x820 x14 x14)))
(define-fun x277 ((x14 Int)) Bool (and (x68 x14) (x340 x14) (x49 x14)))
(define-fun x570 ((x14 Int) (x771 Int)) Bool (=> (and (> x771 0) (> x14 0)) (and (>= x14 (x229 x14 x771)) (>= (x229 x14 x771) 0))))
(define-fun x542 ((x14 Int) (x771 Int)) Bool (=> (and (and (>= x14 0) (< x14 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x771 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x771))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x229 x14 x771)) (<= 0 (x229 x14 x771)))))
(define-fun x446 ((x14 Int) (x771 Int)) Bool (=> (and (< 1 x771) (< x771 x14)) (> x14 (x229 x14 x771))))
(define-fun x808 ((x14 Int) (x771 Int)) Bool (=> (and (> x14 0) (< 0 x771)) (= (= (x229 x14 x771) 0) (< x14 x771))))
(define-fun x565 ((x14 Int) (x771 Int)) Bool (=> (and (< 0 x771) (> x14 0)) (and (>= x14 (* (x229 x14 x771) x771)) (< (- x14 x771) (* (x229 x14 x771) x771)))))
(define-fun x817 ((x14 Int) (x771 Int)) Bool (= (* x771 (x229 x14 x771)) (- x14 (x745 (- x771 1) x14))))
(define-fun x246 ((x14 Int) (x771 Int)) Bool (and (x808 x14 x771) (x570 x14 x771) (x542 x14 x771) (x817 x14 x771) (x565 x14 x771) (x446 x14 x771)))
(define-fun x667 ((x14 Int)) Bool (= 0 (x229 0 x14)))
(define-fun x694 ((x14 Int)) Bool (= x14 (x229 x14 1)))
(define-fun x51 ((x14 Int)) Bool (=> (not (= 0 x14)) (= 1 (x229 x14 x14))))
(define-fun x10 ((x14 Int)) Bool (and (x694 x14) (x667 x14) (x51 x14)))
(define-fun x356 ((x14 Int)) Bool (= (x745 x14 1) (x820 x14 2)))
(define-fun x514 ((x14 Int)) Bool (and (x356 x14) (x302 x14 1)))
(define-fun x506 ((x14 Int)) Bool (= (x820 x14 128) (x745 x14 127)))
(define-fun x107 ((x14 Int)) Bool (and (x506 x14) (x302 x14 127)))
(define-fun x627 ((x14 Int)) Bool (and (< x14 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x14)))
(define-fun x450 ((x14 Int) (x771 Int)) Bool (=> (and (< 0 x14) (> x771 0)) (and (> (x193 (x229 x14 x771) x771) (- x14 x771)) (>= x14 (x193 (x229 x14 x771) x771)))))
(define-fun x707 ((x14 Int) (x771 Int)) Bool (and (x542 x14 x771) (x808 x14 x771) (x450 x14 x771) (x570 x14 x771) (x446 x14 x771)))
(define-fun x609 ((x14 Int)) Bool (and (= (x794 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x794 x14 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x811 ((x14 Int)) Bool (and (= x14 (x794 0 x14)) (= (x794 x14 0) x14)))
(define-fun x767 ((x14 Int)) Bool (= (x794 x14 x14) x14))
(define-fun x518 ((x14 Int)) Bool (and (x811 x14) (x767 x14) (x609 x14)))
(define-fun x616 ((x14 Int) (x771 Int)) Bool (= (x794 x771 x14) (x794 x14 x771)))
(define-fun x711 ((x14 Int) (x771 Int)) Bool (and (=> (<= 0 x14) (<= x14 (x794 x14 x771))) (<= (x794 x14 x771) (+ x14 x771)) (=> (<= 0 x771) (>= (x794 x14 x771) x771))))
(define-fun x412 ((x14 Int) (x771 Int)) Bool (and (x711 x14 x771) (x616 x14 x771)))
(define-fun x191 ((x503 Int)) Int 0)
(define-fun x343 ((x503 Int)) Int 0)
(define-fun x304 ((x503 Int)) Int (ite (> x558 x503) (x723 x503) 0))
(define-fun x331 ((x503 Int)) Int (ite (and (<= 0 x503) (< x503 x558)) (x171 x503) (x304 x503)))
(define-fun x781 ((x503 Int)) Int (ite (= x503 x185) x717 (x39 x503)))
(define-fun x350 ((x503 Int)) Int (ite (= x503 x219) x60 (x781 x503)))
(define-fun x735 ((x503 Int)) Int (ite (= x503 x481) x634 (x480 x503)))
(define-fun x319 ((x503 Int)) Int (ite (= x481 x503) x52 (x735 x503)))
(define-fun x588 ((x503 Int)) Int (ite (= x503 x481) x139 (x325 x503)))
(define-fun x26 ((x503 Int)) Int (ite (= x481 x503) 1 (x270 x503)))
(define-fun x98 ((x503 Int)) Int (ite (= x481 x503) x292 (x187 x503)))
(define-fun x679 ((x503 Int)) Int (ite (= x503 x481) x758 (x315 x503)))
(define-fun x764 ((x503 Int)) Int (ite (= x503 x481) x611 (x98 x503)))
(define-fun x285 ((x503 Int)) Int (ite (= x503 x759) x710 (x112 x503)))
(define-fun x673 ((x503 Int)) Int (ite (= x759 x503) 604800 (x674 x503)))
(define-fun x137 ((x503 Int)) Int (ite (= x503 x337) x186 (x649 x503)))
(define-fun x7 ((x503 Int)) Int (ite (= x503 x751) x581 (x358 x503)))
(define-fun x293 ((x503 Int)) Int (ite (= x751 x503) x643 (x577 x503)))
(define-fun x443 ((x503 Int)) Int (ite (= x503 x751) x608 (x552 x503)))
(define-fun x66 ((x503 Int)) Int (ite (= x175 x503) x716 (x584 x503)))
(define-fun x242 ((x503 Int)) Int (ite (= x503 x481) x799 (x319 x503)))
(define-fun x499 ((x503 Int)) Int (ite (= x481 x503) x129 (x588 x503)))
(define-fun x407 ((x503 Int)) Int (ite (= x503 x481) x373 (x26 x503)))
(define-fun x155 ((x503 Int)) Int (ite (= x481 x503) x657 (x764 x503)))
(define-fun x327 ((x503 Int)) Int (ite (= x481 x503) x462 (x679 x503)))
(define-fun x686 ((x503 Int)) Int (ite (= x503 x759) x622 (x517 x503)))
(define-fun x587 ((x503 Int)) Int 0)
(define-fun x698 ((x503 Int)) Int 0)
(define-fun x638 ((x503 Int)) Int (ite (= x147 x503) x700 (x191 x503)))
(define-fun x750 ((x503 Int)) Int (ite (= x503 x831) x314 (x638 x503)))
(define-fun x647 ((x503 Int)) Int (ite (= x503 x756) x741 (x750 x503)))
(define-fun x27 ((x503 Int)) Int (ite (= x503 x491) x309 (x647 x503)))
(define-fun x439 ((x503 Int)) Int (ite (= x503 x488) x205 (x27 x503)))
(define-fun x368 ((x503 Int)) Int (ite (= x617 x503) x287 (x439 x503)))
(define-fun x719 ((x503 Int)) Int (ite (= x539 x503) x544 (x368 x503)))
(define-fun x173 ((x503 Int)) Int (ite (= x503 x509) x455 (x719 x503)))
(define-fun x474 ((x503 Int)) Int (ite (= x503 x786) x464 (x173 x503)))
(define-fun x62 ((x503 Int)) Int (ite (= x503 x24) x45 (x474 x503)))
(define-fun x419 ((x503 Int)) Int (ite (> x301 x503) (x525 x503) 0))
(define-fun x135 ((x503 Int)) Int (ite (and (<= 0 x503) (< x503 x301)) (x370 x503) (x419 x503)))
(define-fun x312 ((x503 Int)) Int (ite (= x580 x503) x164 (x350 x503)))
(define-fun x654 ((x503 Int)) Int (ite (= x503 x744) x73 (x242 x503)))
(define-fun x170 ((x503 Int)) Int (ite (= x503 x744) x353 (x654 x503)))
(define-fun x557 ((x503 Int)) Int (ite (= x503 x744) x636 (x499 x503)))
(define-fun x177 ((x503 Int)) Int (ite (= x503 x744) 1 (x407 x503)))
(define-fun x823 ((x503 Int)) Int (ite (= x503 x744) x122 (x155 x503)))
(define-fun x592 ((x503 Int)) Int (ite (= x503 x744) x145 (x327 x503)))
(define-fun x71 ((x503 Int)) Int (ite (= x503 x744) x115 (x823 x503)))
(define-fun x306 ((x503 Int)) Int (ite (= x17 x503) x99 (x285 x503)))
(define-fun x749 ((x503 Int)) Int (ite (= x17 x503) 604800 (x673 x503)))
(define-fun x313 ((x503 Int)) Int (ite (= x503 x118) x87 (x137 x503)))
(define-fun x152 ((x503 Int)) Int (ite (= x503 x194) x283 (x7 x503)))
(define-fun x406 ((x503 Int)) Int (ite (= x503 x194) x705 (x293 x503)))
(define-fun x264 ((x503 Int)) Int (ite (= x503 x194) x410 (x443 x503)))
(define-fun x625 ((x503 Int)) Int (ite (= x307 x503) x416 (x66 x503)))
(define-fun x578 ((x503 Int)) Int (ite (= x351 x503) x262 (x429 x503)))
(define-fun x670 ((x503 Int)) Int (x578 x503))
(define-fun x336 ((x503 Int)) Int (ite (= x744 x503) x434 (x170 x503)))
(define-fun x418 ((x503 Int)) Int (ite (= x744 x503) x821 (x557 x503)))
(define-fun x64 ((x503 Int)) Int (ite (= x744 x503) x785 (x177 x503)))
(define-fun x36 ((x503 Int)) Int (ite (= x503 x744) x34 (x71 x503)))
(define-fun x154 ((x503 Int)) Int (ite (= x503 x744) x526 (x592 x503)))
(define-fun x372 ((x503 Int)) Int (ite (= x503 x17) x646 (x686 x503)))
(define-fun x220 ((x503 Int)) Int 0)
(define-fun x271 ((x503 Int)) Int (ite (= x503 x333) x44 (x343 x503)))
(define-fun x468 ((x503 Int)) Int (ite (= x738 x503) x105 (x271 x503)))
(define-fun x50 ((x503 Int)) Int (ite (= x503 x96) x82 (x468 x503)))
(define-fun x305 ((x503 Int)) Int (ite (= x503 x132) x713 (x50 x503)))
(define-fun x490 ((x503 Int)) Int (ite (= x101 x503) x524 (x305 x503)))
(define-fun x19 ((x503 Int)) Int (ite (= x510 x503) x48 (x490 x503)))
(define-fun x215 ((x503 Int)) Int (ite (= x47 x503) x142 (x19 x503)))
(define-fun x23 ((x503 Int)) Int (ite (= x338 x503) x789 (x215 x503)))
(define-fun x18 ((x503 Int)) Int (ite (= x503 x295) x822 (x23 x503)))
(define-fun x46 ((x503 Int)) Int (ite (= x503 x790) x458 (x18 x503)))
(define-fun x216 ((x503 Int)) Int (ite (= x503 x421) 0 (x600 x503)))
(define-fun x388 ((x503 Int)) Int (ite x126 (x600 x503) (ite x344 (x600 x503) (x216 x503))))
(define-fun x43 ((x503 Int)) Int (x388 x503))
(define-fun x590 ((x503 Int)) Int (ite (= x814 x503) 0 (x43 x503)))
(define-fun x390 ((x503 Int)) Int (ite x344 (x600 x503) (x216 x503)))
(define-fun x639 ((x503 Int)) Int (ite x545 (x43 x503) (x590 x503)))
(define-fun x651 ((x503 Int)) Int (ite x582 (x43 x503) (ite x545 (x43 x503) (x590 x503))))
(define-fun x121 ((x503 Int)) Int (ite x166 (x248 x503) (x777 x503)))
(define-fun x95 ((x503 Int)) Int (ite (= x503 x659) x116 (x670 x503)))
(define-fun x553 ((x503 Int)) Int (x95 x503))
(define-fun x472 ((x503 Int)) Int (ite (= x503 x256) x158 (x332 x503)))
(define-fun x354 ((x503 Int)) Int (x472 x503))
(define-fun x593 ((x503 Int)) Int (x121 x503))
(define-fun x655 ((x503 Int)) Int (ite x801 (x593 x503) (x493 x503)))
(define-fun x630 ((x503 Int)) Int (ite (= x765 x503) x402 (x354 x503)))
(define-fun x378 ((x503 Int)) Int (x630 x503))
(assert (= x800 (and x225 x621)))
(assert (x148 x263))
(assert (x148 x114))
(assert (= (x341 (+ 1 x659)) (x341 x659)))
(assert (< 10000 (x591 64 x804 3)))
(assert (x130 x633))
(assert (x148 x169))
(assert (= (x768 (x772 32 x337)) x337))
(assert (x148 x82))
(assert (= x704 (x768 (x591 64 x704 2))))
(assert (x148 x795))
(assert (not (x40 (x591 64 x821 2))))
(assert (x148 x190))
(assert (x148 x583))
(assert (= (x404 (x591 64 x162 3)) 64))
(assert (= (or x572 x545) x55))
(assert (x148 x603))
(assert (= x545 (and (not x739) x607)))
(assert (x148 x415))
(assert (= (x341 x538) (x341 (+ x311 x538))))
(assert (x148 x231))
(assert (x148 x533))
(assert (x148 x261))
(assert (x148 x526))
(assert (x148 x682))
(assert (x148 x580))
(assert (x148 x352))
(assert (not (x40 (x591 64 x804 3))))
(assert (x148 x528))
(assert (= (and x709 x605) x607))
(assert (x656 x496))
(assert (= (x341 2855319274) 0))
(assert (x10 (+ x413 31)))
(assert (x656 x296))
(assert (= 0 (x341 1461501637330902918203684832716283019655932542975)))
(assert (x148 x746))
(assert (x148 x222))
(assert (x148 x618))
(assert (x148 x613))
(assert (=> (<= x821 10000) (= 0 (x341 x821))))
(assert (=> (<= x804 10000) (= (x341 x804) 0)))
(assert (> (x772 32 x659) 10000))
(assert (= x161 (x768 (x591 64 x161 3))))
(assert (x377 32 x681))
(assert (x148 x464))
(assert (x148 x488))
(assert (x148 x399))
(assert (= x111 (and x308 x6)))
(assert (x148 x314))
(assert (x148 x495))
(assert (x246 x640 2))
(assert (x148 x483))
(assert (x10 (+ 31 x398)))
(assert (= (x404 (x591 64 x129 2)) 64))
(assert (=> (>= 10000 x161) (= (x341 x161) 0)))
(assert (x148 x799))
(assert (= (x404 (x591 64 x161 3)) 64))
(assert (x148 x209))
(assert (x277 x806))
(assert (x148 x672))
(assert (x377 8 x573))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x772 32 x118)))
(assert (x148 x21))
(assert (= (x341 x194) (x341 (+ x194 1))))
(assert (x148 x234))
(assert (x148 x789))
(assert (x148 x389))
(assert (x148 x756))
(assert (x148 x792))
(assert (= (x404 (x591 64 x704 2)) 64))
(assert (x40 1099511627775))
(assert (x40 2086056633))
(assert (= (x341 3024000) 0))
(assert (x148 x430))
(assert (x148 x329))
(assert (x148 x186))
(assert (x148 x608))
(assert (x148 x821))
(assert (x148 x158))
(assert (x148 x205))
(assert (x148 x666))
(assert (x148 x367))
(assert (= x718 (or x86 x344)))
(assert (= (x341 (+ x351 1)) (x341 x351)))
(assert (x518 x614))
(assert (x148 x805))
(assert (x277 x640))
(assert (x148 x706))
(assert (= (x341 (+ 1 x814)) (x341 x814)))
(assert (= (x341 (+ 1 x661)) (x341 x661)))
(assert (> (x772 32 x118) 10000))
(assert (x148 x760))
(assert (x148 x637))
(assert (x148 x529))
(assert (x148 x540))
(assert (< (x591 64 x162 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x148 x830))
(assert (x40 2855319274))
(assert (x148 x790))
(assert (x148 x47))
(assert (x148 x508))
(assert (= (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240) (ite (> 256 x240) (x229 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x240)) 0)))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639903) 0))
(assert (x10 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x341 x307) (x341 (+ x307 1))))
(assert (= x58 x183))
(assert (x148 x602))
(assert (= (and x159 x357) x394))
(assert (= (or x55 x582) x357))
(assert (x148 x413))
(assert (x148 x699))
(assert (x148 x521))
(assert (= 32 (x404 (x772 32 x337))))
(assert (x10 (x326 2 x391)))
(assert (= (x768 (x772 32 x118)) x118))
(assert (x40 1099508603775))
(assert (x148 x281))
(assert (x148 x253))
(assert (x148 x455))
(assert (= x742 (x768 (x591 64 x742 3))))
(assert (x377 8 x529))
(assert (x148 x236))
(assert (x246 (+ 31 x389) 32))
(assert (x148 x551))
(assert (x148 x681))
(assert (x514 x169))
(assert (x148 x410))
(assert (x148 x359))
(assert (x148 x401))
(assert (=> (>= 10000 x11) (= 0 (x341 x11))))
(assert (x148 x87))
(assert (x148 x818))
(assert (x246 x169 2))
(assert (x148 x646))
(assert (x148 x347))
(assert (x627 x795))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x591 64 x821 2)))
(assert (x148 x496))
(assert (= 0 (x341 604800)))
(assert (x277 x169))
(assert (< (x591 64 x469 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x377 2 x529))
(assert (x148 x11))
(assert (x412 x614 x415))
(assert (x148 x705))
(assert (x148 x44))
(assert (x277 1099511627776))
(assert (x576 x251))
(assert (< (x591 64 x742 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x658 2))
(assert (x148 x296))
(assert (not (x40 (x591 64 x742 3))))
(assert (= (x768 (x591 64 x469 2)) x469))
(assert (x148 x174))
(assert (=> (>= 10000 x580) (= 0 (x341 x580))))
(assert (= (x341 (x591 64 x804 3)) (x591 64 x804 3)))
(assert (x148 x132))
(assert (< 10000 (x591 64 x704 2)))
(assert (= true x22))
(assert (x148 x457))
(assert (x148 x195))
(assert (x148 x433))
(assert (x148 x269))
(assert (x148 x38))
(assert (x148 x99))
(assert (=> (>= 10000 x162) (= (x341 x162) 0)))
(assert (x656 1))
(assert (x148 x564))
(assert (x148 x230))
(assert (x148 x475))
(assert (not (x40 (x591 64 x162 3))))
(assert (x148 x292))
(assert (x148 x287))
(assert (x104 x12 1099511627776))
(assert (x148 x16))
(assert (x656 x38))
(assert (= x567 (and x484 x166)))
(assert (x107 x131))
(assert (= (=> (and (and (= x614 (x745 x310 x760)) (<= 1 x281) (= (* 2 x529) x415) (= x222 (x714 (+ x415 x614))) (= x158 (ite (<= x614 1) x222 (x794 x614 x415))) (= x660 (* 8 x529)) (= x395 (x331 x409)) (= x281 (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x660)) (<= x395 2) (= x6 (< 0 x395)) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x269) (>= x269 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x331 x25) x269) (or (and (> x269 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x269) (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x725 x269))) (= (x714 (+ x299 x269)) x409) (= x760 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x281))) (or (and (not x6) (= 0 x129)) (and x6 (and (= x210 (x714 (+ x299 x263))) (>= 2 x628) (= x628 x129) (= (x331 x210) x628) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725) (<= x263 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x263 x725)) (and (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x263))) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x263) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x263)) (= (x331 x25) x263))))) x452) x245))
(assert (x148 x392))
(assert (x656 x760))
(assert (x148 x299))
(assert (x377 2 x633))
(assert (> (x772 32 x351) 10000))
(assert (x518 x144))
(assert (= (or x515 x567) x308))
(assert (= (x341 (x591 64 x469 2)) (x591 64 x469 2)))
(assert (x148 x462))
(assert (x707 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x362)))
(assert (x148 x652))
(assert (=> (<= x809 10000) (= (x341 x809) 0)))
(assert (x148 x579))
(assert (x148 x716))
(assert (x148 x249))
(assert (x148 x734))
(assert (= x605 (or x111 x560)))
(assert (= (x341 (x591 64 x162 3)) (x591 64 x162 3)))
(assert (x148 x145))
(assert (x10 (x326 2 x240)))
(assert (x148 x380))
(assert (x148 x671))
(assert (x148 x611))
(assert (x377 4 x241))
(assert (x148 x45))
(assert (x148 x453))
(assert (x148 x267))
(assert (x148 x102))
(assert (x10 x267))
(assert (x148 x423))
(assert (x148 x409))
(assert (x107 x530))
(assert (x40 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x148 x755))
(assert (not x233))
(assert (= (x341 (x591 64 x161 3)) (x591 64 x161 3)))
(assert (= (x341 x17) (x341 (+ x17 1))))
(assert (x656 x267))
(assert (x148 x24))
(assert (x148 x663))
(assert (x148 x373))
(assert (x148 x417))
(assert (x707 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x240)))
(assert (x148 x594))
(assert (x148 x25))
(assert (x148 x612))
(assert (x377 8 x413))
(assert (x148 x601))
(assert (= (x341 (+ x547 x516)) (x341 x516)))
(assert (x40 57896044618658097711785492504343953926634992332820282019728792003956564819739))
(assert (x148 x689))
(assert (x104 x530 128))
(assert (x148 x237))
(assert (x148 x83))
(assert (= 3 (x387 (x591 64 x162 3))))
(assert (x148 x386))
(assert (= x621 (or x644 x235)))
(assert (x148 x546))
(assert (x148 x144))
(assert (x148 x72))
(assert (x148 x636))
(assert (x148 x309))
(assert (x104 x496 128))
(assert (= (x341 18446744073709551615) 0))
(assert (= (x591 64 x742 3) (x341 (x591 64 x742 3))))
(assert (x148 x425))
(assert (x148 x57))
(assert (= (x341 (x772 32 x337)) (x772 32 x337)))
(assert (x148 x76))
(assert (x148 x273))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x148 x317))
(assert (= (x387 (x591 64 x821 2)) 2))
(assert (x148 x561))
(assert (= (x768 (x591 64 x129 2)) x129))
(assert (x148 x226))
(assert (x148 x615))
(assert (x148 x770))
(assert (x148 x395))
(assert (< 10000 (x591 64 x162 3)))
(assert (= (x341 x538) (x341 (+ x613 x538))))
(assert (x148 x773))
(assert (x246 x267 2))
(assert (x148 x310))
(assert (x148 x665))
(assert (x148 x123))
(assert (= x804 (x768 (x591 64 x804 3))))
(assert (not (x40 (x591 64 x161 3))))
(assert (x148 x426))
(assert (x576 x12))
(assert (= 64 (x404 (x591 64 x742 3))))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (< (x591 64 x804 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x341 4294967295) 0))
(assert (x148 x660))
(assert (x277 x267))
(assert (x656 x251))
(assert (x148 x52))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639423))
(assert (x148 x702))
(assert (x40 1461501637330902918203684832716283019655932542975))
(assert (x148 x497))
(assert (x148 x240))
(assert (x656 1099511627775))
(assert (x148 x258))
(assert (x518 x288))
(assert (x148 x365))
(assert (x148 x402))
(assert (x148 x775))
(assert (x40 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x148 x424))
(assert (x10 (x326 2 x362)))
(assert (x148 x442))
(assert (x656 x310))
(assert (= (x341 (+ 1 x753)) (x341 x753)))
(assert (x148 x520))
(assert (x148 x366))
(assert (x412 x238 x615))
(assert (x302 x762 x296))
(assert (x148 x437))
(assert (x148 x32))
(assert (x148 x614))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x148 x28))
(assert (x148 x241))
(assert (x148 x558))
(assert (x148 x117))
(assert (not (x40 (x772 32 x118))))
(assert (x148 x369))
(assert (= (x341 x522) (x341 (+ 1 x522))))
(assert (x148 x505))
(assert (x107 x496))
(assert (x148 x809))
(assert (x518 x150))
(assert (x148 x142))
(assert (x148 x318))
(assert (x148 x573))
(assert (x148 x400))
(assert (x656 x658))
(assert (x148 x815))
(assert (x148 x622))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (x656 x594))
(assert (x148 x710))
(assert (x277 x12))
(assert (= (ite (> 256 x660) (x229 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x660)) 0) (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x660)))
(assert (x148 x537))
(assert (= x736 (=> (and (and (= x125 (= 1 (ite (> x633 31) 1 0))) (not x125) (= (= x633 0) x159)) (or (and (= x762 0) x159) (and (not x159) (and (= x569 x762) (= x569 (x135 x360)))))) x501)))
(assert (x148 x436))
(assert (x148 x288))
(assert (x148 x748))
(assert (x148 x381))
(assert (x148 x128))
(assert (= (x341 x481) (x341 (+ x481 1))))
(assert (x277 x251))
(assert (= x126 (and (not x160) x22)))
(assert (x277 128))
(assert (x148 x157))
(assert (x148 x335))
(assert (x277 x530))
(assert (= x344 (and (not x141) x825)))
(assert (x148 x691))
(assert (x148 x658))
(assert (x302 x310 x760))
(assert (x148 x221))
(assert (x148 x678))
(assert (x148 x115))
(assert (= (=> (and (= x167 (+ 1 x421)) (= x4 (not (< x167 x596)))) (and x4 x183)) x819))
(assert (< (x772 32 x659) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x104 x131 128))
(assert (x148 x214))
(assert (x148 x717))
(assert (x148 x189))
(assert (x148 x164))
(assert (x148 x738))
(assert (x148 x134))
(assert (x518 x615))
(assert (= (x341 3899865236) 0))
(assert (x148 x34))
(assert (x377 32 x432))
(assert (= (x341 1099508603775) 0))
(assert (x148 x788))
(assert (= 32 (x404 (x772 32 x118))))
(assert (x104 x267 2))
(assert (= 0 (x341 57896044618658097711785492504343953926634992332820282019728792003956564819999)))
(assert (x148 x182))
(assert (x148 x202))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x377 4 x459))
(assert (x148 x298))
(assert (x277 x496))
(assert (x148 x301))
(assert (= (x387 (x591 64 x804 3)) 3))
(assert (x148 x703))
(assert (x148 x12))
(assert (x148 x713))
(assert (x148 x434))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639775)))
(assert (not (x40 (x772 32 x659))))
(assert (= (x341 (x591 64 x704 2)) (x591 64 x704 2)))
(assert (x148 x217))
(assert (x148 x604))
(assert (x148 x180))
(assert (= (x387 (x591 64 x469 2)) 2))
(assert (x148 x550))
(assert (x148 x599))
(assert (x148 x731))
(assert (= 0 (x341 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x40 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x148 x539))
(assert (x148 x784))
(assert (x40 3024000))
(assert (x148 x657))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639647) 0))
(assert (x148 x398))
(assert (x148 x783))
(assert (> (x591 64 x821 2) 10000))
(assert (x148 x339))
(assert (x148 x101))
(assert (x518 x238))
(assert (= 0 (x341 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x148 x232))
(assert (= (x404 (x772 32 x351)) 32))
(assert (=> (>= 10000 x469) (= 0 (x341 x469))))
(assert (x514 x658))
(assert (x148 x403))
(assert (= (and (not x6) x308) x560))
(assert (not (x40 (x772 32 x351))))
(assert (= x515 (and x166 (not x484))))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (x148 x60))
(assert (x148 x624))
(assert (x148 x311))
(assert (= x445 (=> (and (or (and (and (= x792 (x331 x290)) (= x792 x310)) (not x484)) (and (= x310 0) x484)) (and (= (x331 x783) x529) (or (= x425 1) (= x425 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x332 x256) x169) (= x732 (x331 x117)) (not x3) (= x411 (x405 (- x558 x529))) (= (* x413 2) x615) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)) (= x303 (x714 (+ x615 x238))) (not x284) (= x240 (* 8 x413)) (>= 18446744073709551615 x529) (not (or (and (<= x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x411 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x290 x411) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x290) (<= x411 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (ite (< 0 x566) x131 (x745 127 x131)) x423) (= (< 31 x423) x284) (= x484 (= x529 0)) (= x783 (x714 (+ x653 x732))) (= x262 (ite (>= 1 x238) x303 (x794 x238 x615))) (= x238 (x745 x102 x38)) (= (= 1 (ite (> x529 31) 1 0)) x3) (= x131 (x229 x169 2)) (= x583 (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x240)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583) x38) (= (+ x351 1) x256) (= x117 (x714 (+ x359 32))) (= x566 (x745 1 x169)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)) (and (< x732 x261) (= (<= x732 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261)))) (= x425 (x405 (- x566 (mod (ite (> 32 x423) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x583 1) (= (x714 (+ x783 32)) x290))) x245)))
(assert (x656 x806))
(assert (x10 (+ x633 31)))
(assert (and (= 81 (x193 9 9)) (= (x193 3 3) 9) (= 81 (x193 27 3)) (= (x193 9 3) 27)))
(assert (x148 x485))
(assert (x148 x477))
(assert (= (=> (and (and (= x634 x257) (and (and (= (x78 (* x241 4)) x551) (>= 1099511627774 x804) (= x643 (ite (not (= x200 0)) 1 0)) (= (x331 x25) x180) (= (+ 4 x237) x457) (<= x413 18446744073709551615) (= x716 (x331 x361)) (= false x91) (<= x243 1461501637330902918203684832716283019655932542975) (>= 1099511627775 x758) (<= 1 x243) (= x359 (x714 (+ 32 x361))) (= x200 (x331 x217)) (= (+ x759 1) x337) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819999 x345)) (>= 1461501637330902918203684832716283019655932542975 x581) (= (* x432 32) x492) (= (x745 1099511627775 x12) x611) (= x345 (x405 (- x558 x653))) (<= x367 1099508603775) (= (x745 1 x640) x430) (= x351 (+ x175 1)) (= x186 (x714 (+ 1 x241))) (= (x187 x481) x292) (= (+ 3024000 x367) x710) (= x640 (x429 x351)) (= (x649 x337) x241) (<= 1 x56) (= x540 (x331 x25)) (<= x505 127) (= x361 (x714 (+ 32 x324))) (<= 1 x432) (= x725 (x405 (- x444 191))) (>= 2 x234) (= x217 (x714 (+ 32 x653))) (= (x735 x481) x52) (= x676 (x331 x359)) (<= x56 1461501637330902918203684832716283019655932542975) (= x349 (x591 64 x469 2)) (= x389 (ite (> x430 0) x496 (x745 127 x496))) (not (< x558 x128)) (<= x469 2) (<= 1 x234) (= x444 (x405 (- x558 x25))) (>= 2 x608) (= x555 (x714 (+ x299 x561))) (= x758 (x315 x481)) (= x188 (x405 (- x558 x413))) (> x558 x163) (= x366 x60) (= (x714 (+ 32 x217)) x324) (= x243 (x331 x365)) (= (+ x492 x25) x128) (= (x331 x25) x369) (= (x591 64 x804 3) x481) (= x88 (x772 32 x337)) (<= x432 18446744073709551615) (>= 255 x139) (= (x714 (+ x637 32)) x204) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x676)) (< x676 x261)) (and (> x676 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261))) (= (x781 x219) x366) (or (<= x561 57896044618658097711785492504343953926634992332820282019728792003956564819739) (>= x561 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (or (and (> x540 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x540 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725)) (< x540 x725))) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725) (> x369 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x725) (<= x369 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x369 x725))) (= x234 (x331 x555)) (= x717 (x39 x185)) (= x160 (< 31 x389)) (= (x331 x25) x561) (= (x405 (- x345 31)) x261) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x180) (<= x180 57896044618658097711785492504343953926634992332820282019728792003956564819739)) (= (x405 (- x430 (mod (ite (> 32 x389) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x79) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x79) (= 1 x79)) (= (x714 (+ x653 x676)) x637) (= x139 (x325 x481)) (= x608 (x331 x324)) (= (+ 31 x457) x163) (= x759 (+ x481 1)) (= x175 (+ x751 1)) (or (<= x369 57896044618658097711785492504343953926634992332820282019728792003956564819739) (>= x369 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x676)) (or (<= x540 57896044618658097711785492504343953926634992332820282019728792003956564819739) (>= x540 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x417 (+ 1 x804)) (= x693 false) (or (and (< x180 x725) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x180) (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x180 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x331 x733) x469) (>= 1461501637330902918203684832716283019655932542975 x52) (= x751 (+ x88 x551)) (= x496 (x229 x640 2)) (= x708 (x803 x219)) (= (x745 1099511627775 x12) x367) (= x56 (x211 x349)) (>= 1099511627775 x292) (= (x714 (+ x369 x25)) x365) (= x162 (+ 1 x804)) (= x299 (+ x25 64)) (= x413 (x331 x637)) (= x653 (x714 (+ x540 x25))) (= x257 x185) (= (+ x457 32) x25) (or (and (< x561 x725) (= (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x561))) (and (> x561 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x725 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (<= x204 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x188 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x204 x188) (= (<= x188 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x204 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (>= x708 1) (= x581 (x331 x653)) (>= 127 x505) (= 3899865236 x689) (= x432 (x331 x457)) (= x733 (x714 (+ x180 x299)))) (= x65 x12))) (and (<= x802 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x793 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x219 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x110) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x65) (<= 0 x730) (<= x198 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x549) (<= x297 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x730 1461501637330902918203684832716283019655932542975) (<= x355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x31 (< 0 (x803 x512))) (>= 1461501637330902918203684832716283019655932542975 x257) (not (= x512 x11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x15) (not (= x512 x219)) (= x348 (> (x803 x11) 0)) (<= 0 x355) x31 (>= 4294967295 x438) (>= x257 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x153) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x728) (>= 1461501637330902918203684832716283019655932542975 x778) (>= x793 0) x348 (>= x110 0) x829 (<= 1 x11) (not (= x809 x11)) (<= 0 x414) (not (= x809 x219)) (not (= x219 x11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x414) (= x250 false) (<= 1 x809) (= x72 (x171 0)) (<= 0 x69) (= x393 0) (= false x559) (= x486 false) (= x237 (x171 4)) (= 1 x74) (>= x752 0) (>= 1461501637330902918203684832716283019655932542975 x752) (= x21 x72) (>= x728 0) (<= x228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= false x133) (<= 1 x512) (>= x692 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x685) (= x473 false) (= x219 x120) (<= 0 x228) (>= x549 0) (<= x692 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x11) (<= x237 18446744073709551615) (>= x385 0) (>= 1461501637330902918203684832716283019655932542975 x512) (>= x685 0) (<= x558 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x153 0) x541 (>= x778 0) (<= x773 1461501637330902918203684832716283019655932542975) (<= x809 1461501637330902918203684832716283019655932542975) (<= x219 1461501637330902918203684832716283019655932542975) (<= 0 x198) (>= x511 0) (>= x558 68) (<= 0 x297) (>= x802 0) (<= 0 x15) (>= x65 0) (= (> (x803 x219) 0) x541) (<= x511 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x385) (not (= x809 x512)) (>= 1461501637330902918203684832716283019655932542975 x527) (= x829 (> (x803 x809) 0)) (= x830 x237) (= x244 3899865236) (<= x69 1099511627775) (>= x438 0))) (and (=> (not x160) x58) (=> (and (and (= x289 (+ x547 x516)) (= (x229 (+ x389 31) 32) x604) (= (+ x604 x516) x596) (= (ite (< x413 32) x516 x289) x421) (= x141 (< x421 x596)) (= (x772 32 x351) x516) (= (x229 (+ x413 31) 32) x547)) x160) (and (=> (not x141) x183) (=> x141 x819))))) x233))
(assert (= 32 (x404 (x772 32 x659))))
(assert (x148 x361))
(assert (= 2 (x387 (x591 64 x129 2))))
(assert (x148 x754))
(assert (x148 x364))
(assert (x130 x529))
(assert (= (=> (= x548 (not (> x432 1))) (and x548 (=> (and (= x687 (x331 x774)) (= (x331 x433) x268) (= (x714 (+ 32 x433)) x83) (= (x405 (- x1 191)) x754) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x579)) (< x531 x579)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x531) (<= x579 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x754) (> x755 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x755) (<= x754 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x754 x755))) (= (x714 (+ x85 32)) x352) (= x537 (x211 x816)) (= x816 (x591 64 x129 2)) (= (x764 x481) x657) (= (x714 (+ x665 32)) x746) (= x433 (x714 (+ x85 x463))) (<= x373 255) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819999 x5)) (= x508 (x331 x599)) (<= x462 1099511627775) (<= x622 1099511627775) (= x373 (x26 x481)) (not (or (and (> x626 x568) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x626) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x568))) (and (> x568 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x626 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x579 (x405 (- x5 31))) (<= x664 1461501637330902918203684832716283019655932542975) (= (x331 x746) x463) (= x622 (x103 x816)) (= (x405 (- x558 x85)) x5) (= (x714 (+ 32 x599)) x32) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x579) (<= x463 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x579 x463)) (and (<= x579 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x463 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x691) (<= x83 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x83 x691)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x83) (> x691 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x818 (x331 x32)) (= (x714 (+ x85 x531)) x774) (<= x537 1461501637330902918203684832716283019655932542975) (<= x508 2) (not (= x463 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= (x331 x25) x755) (>= 1099511627775 x657) (= x664 (x331 x85)) (= x462 (x679 x481)) (= x824 (not (< 1 x432))) (<= x268 18446744073709551615) (not (= x531 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (or (>= x755 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x755 57896044618658097711785492504343953926634992332820282019728792003956564819739)) (= x691 (x405 (- x558 x268))) (= x799 (x319 x481)) (= (x714 (+ x755 x25)) x85) (= (x405 (- x558 x25)) x1) (= x568 (x405 (- x558 x687))) (= x665 (x714 (+ x32 32))) (= x626 (x714 (+ x774 32))) (= x599 (x714 (+ x352 32))) (<= x799 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x687) (= x531 (x331 x665))) (and x824 (=> (and (and (>= 1099511627775 x471) (= false x81) (>= x376 0) (= x392 (x803 x219)) (= false x223) (>= 5 x54) (>= 1099511627775 x641) (>= 1099511627775 x487) (>= 1461501637330902918203684832716283019655932542975 x106) (>= x629 0) (<= x618 127) (<= x629 1099511627775) (= false x440) (<= 0 x106) (= x536 false) (>= x487 0) (>= 2 x720) (= 2855319274 x426) (= x523 false) (= x207 false) (= x620 false) (>= x460 0) (<= x9 1099511627775) (<= x460 1099511627775) (= x162 x321) (>= 127 x618) (= x316 x69) (>= x471 0) (= false x63) (= 36 x477) (<= x376 1099511627775) (= false x119) (= x400 4) (<= 1 x392) (>= x641 0) (= false x597) (<= 0 x9)) (and (and (= (x62 x147) x380) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639775) (= x507 x57) (= (x62 x495) x57) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639423 x564) (>= x564 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= x635 2086056633) (= (x714 (+ x617 32)) x539) (<= x309 1099511627775) (= (x272 x661) x544) (= x782 (x370 4)) (= x172 (x62 x371)) (<= x314 2) (>= 1099511627775 x287) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x147) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639903) (>= 1099511627775 x45) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x147) (>= 18446744073709551615 x782) (= x491 (x714 (+ 32 x756))) (>= 127 x113) (= x497 (x370 0)) (= x172 x30) (= (x714 (+ x539 32)) x509) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x147) (= false x482) (= false x435) (= x543 (x62 x612)) (= x203 false) (= x666 (x62 x456)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x147) (= x221 x782) (= (x714 (+ 32 x147)) x456) (= false x41) (= (x714 (+ 32 x491)) x488) (= x742 x316) (= x497 x453) (<= x741 5) (= x184 (x714 (+ 192 x147))) (= false x642) (<= x455 1099511627775) (= false x563) (= x330 (x62 x182)) (= x706 (x803 x219)) (= x612 (x714 (+ x147 160))) (= x464 (x686 x661)) (= (x499 x753) x314) (= (x714 (+ x147 32)) x831) (= x45 (x673 x661)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639775 x147) (= (x137 x2) x791) (not x780) (<= x301 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639807) (= (x714 (+ 32 x509)) x786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639647 x147) (= (x714 (+ x564 32)) x123) (= x661 (+ 1 x753)) (= x455 (x285 x661)) (= (x407 x753) x741) (= (x62 x127) x483) (= x564 (x78 (* x791 32))) (>= 127 x113) (= x504 x543) (= x287 (x178 x661)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x147) (= (< 0 x791) x780) (>= 1461501637330902918203684832716283019655932542975 x700) (= (+ x661 1) x2) (= x127 (x714 (+ 96 x147))) (= x585 (x714 (+ x147 224))) (= x380 x100) (= (x327 x753) x205) (= x688 x278) (= x153 0) (= x147 x528) (= (x714 (+ 128 x147)) x371) (= x309 (x155 x753)) (= (x62 x184) x258) (<= x205 1099511627775) (= x571 x330) (<= 68 x301) (= x483 x140) (>= x706 1) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639647) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x147) (<= x464 1099511627775) (>= 1099511627775 x544) (= x24 (x714 (+ 32 x786))) (= (x591 64 x742 3) x753) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639743) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639871 x147) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x147) (= (x714 (+ 32 x831)) x756) (= (+ x123 480) x528) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x147) (= x701 x258) (= (x62 x585) x688) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639871) (= (x714 (+ 288 x147)) x182) (= x617 (x714 (+ x488 32))) (<= x147 115792089237316195423570985008687907853269984665640564039457584007913129639839) (= x495 (x714 (+ x147 256))) (= (x242 x753) x700) (= false x322)) (and (= x198 x73) (and (and (= x459 (x137 x118)) (= (x714 (+ x364 x602)) x249) (= x383 (x135 x273)) (= (x714 (+ 32 x59)) x335) (= x360 (x714 (+ 32 x20))) (= (+ x17 1) x118) (= (x803 x219) x603) (> x301 x485) (= (+ 1 x307) x659) (= (x135 x196) x416) (= (x405 (- x731 (mod (ite (< x398 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x675) (<= 1 x603) (= x194 (+ x554 x652)) (= x636 (x499 x744)) (= false x84) (<= x410 2) (= x770 (+ 1 x162)) (= x705 (ite (not (= x317 0)) 1 0)) (= (+ x782 4) x214) (<= x353 1461501637330902918203684832716283019655932542975) (>= 1099511627774 x162) (= x776 false) (= (x714 (+ x436 x134)) x273) (= x806 (x229 x658 2)) (<= x680 127) (= (x135 x399) x410) (= x157 (x135 x214)) (= (x405 (- x301 x633)) x747) (= (x745 1099511627775 x251) x115) (= (x654 x744) x353) (>= 255 x636) (= x87 (x714 (+ x459 1))) (= (+ x214 31) x485) (= (x670 x659) x658) (= (+ x214 32) x602) (not (< x301 x231)) (<= x189 1461501637330902918203684832716283019655932542975) (= (x405 (- x301 x602)) x190) (>= x189 1) (or (and (< x227 x663) (= (<= x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x663))) (and (> x227 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x731 (x745 1 x658)) (<= x680 127) (= (+ x218 x602) x231) (= x276 x232) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x663) (> x364 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x364) (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x364 x663))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805) (<= x275 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x805 x275) (= (<= x275 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x805)))) (>= 18446744073709551615 x157) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x663) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x436)) (and (< x436 x663) (= (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x436 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x476 (x135 x602)) (= (* x157 32) x218) (= x828 3899865236) (= (+ x253 3024000) x99) (= (x714 (+ x196 32)) x61) (= (x135 x209) x704) (<= x283 1461501637330902918203684832716283019655932542975) (= (+ x162 1) x574) (= x232 (x312 x219)) (= x59 (x714 (+ x602 x476))) (= x20 (x714 (+ x805 x59))) (= x280 (x405 (- x301 x59))) (= x398 (ite (< 0 x731) x806 (x745 127 x806))) (<= 1 x157) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x227) (>= x227 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x591 64 x162 3) x744) (= x374 (x591 64 x704 2)) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819999 x280)) (>= x162 1) (= (x135 x335) x317) (= (x135 x20) x633) (= (x135 x602) x364) (>= 1099511627775 x122) (= x145 (x327 x744)) (<= x383 2) (= x122 (x155 x744)) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x747) (<= x360 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x747 x360) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x747) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x360))))) (<= x253 1099508603775) (= x580 x198) (= x17 (+ 1 x744)) (>= x678 1) (= x652 (x78 (* 4 x459))) (= x209 (x714 (+ x134 x227))) (= x227 (x135 x602)) (= x196 (x714 (+ 32 x399))) (= x134 (+ x602 64)) (<= x145 1099511627775) (= (x135 x59) x283) (= (x714 (+ 32 x335)) x399) (= x275 (x405 (- x280 31))) (or (and (> x663 x476) (= (<= x476 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x476) (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x805 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (>= 18446744073709551615 x633) (= x663 (x405 (- x190 191))) (= (x211 x374) x678) (= (x135 x61) x805) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x476) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x476)) (= x436 (x135 x602)) (= x307 (+ x194 1)) (= (x772 32 x118) x554) (or (>= x436 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x436)) (<= x704 2) (= (x350 x580) x164) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x675) (= x675 1)) (<= x678 1461501637330902918203684832716283019655932542975) (= x253 (x745 1099511627775 x251)) (= (x135 x249) x189) (>= x383 1) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x364) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x364)) (= (< 31 x398) x709)) (= x251 x414))))) (and (=> (not x709) x736) (=> (and (and (= (x772 32 x659) x538) (= (ite (< x633 32) x538 x631) x814) (= (+ x538 x613) x631) (= (< x814 x149) x739) (= (x229 (+ x633 31) 32) x613) (= x149 (+ x538 x311)) (= (x229 (+ x398 31) 32) x311)) x709) (and (=> x739 x282) (=> (not x739) x727))))))))) x452))
(assert (= (and (not x709) x605) x582))
(assert (x148 x704))
(assert (x656 x76))
(assert (> (x591 64 x742 3) 10000))
(assert (x148 x512))
(assert (x148 x687))
(assert (x148 x280))
(assert (x277 x658))
(assert (x148 x196))
(assert (x148 x785))
(assert (= 64 (x404 (x591 64 x469 2))))
(assert (< 10000 (x591 64 x129 2)))
(assert (= (x591 64 x821 2) (x341 (x591 64 x821 2))))
(assert (x148 x479))
(assert (x148 x303))
(assert (x148 x165))
(assert (x130 4))
(assert (x148 x722))
(assert (x148 x562))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (x148 x634))
(assert (x656 x530))
(assert (x627 x477))
(assert (x148 x61))
(assert (x40 604800))
(assert (x10 2))
(assert (x40 3899865236))
(assert (x104 x251 1099511627776))
(assert (< (x772 32 x351) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x148 x586))
(assert (x148 x330))
(assert (x412 x144 x288))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639871))
(assert (x518 x53))
(assert (x148 x456))
(assert (x104 x640 2))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639775))
(assert (x130 2))
(assert (x148 x640))
(assert (x148 x769))
(assert (= (or x80 x800) x70))
(assert (x707 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x391)))
(assert (x148 x653))
(assert (x246 (+ 31 x413) 32))
(assert (x148 x530))
(assert (x148 x732))
(assert (x148 x172))
(assert (x148 x470))
(assert (x148 x676))
(assert (= x501 (=> (and (and (<= 1 x703) (= (ite (> x375 0) x530 (x745 127 x530)) x174) (= (x229 x267 2) x530) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x202) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275)) (and (> x275 x202) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275) (<= x202 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x202)) (= (* 2 x633) x53) (= (x405 (- x375 (mod (ite (< x174 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x668) (= x202 (x135 x298)) (= x375 (x745 1 x267)) (= x734 (x714 (+ x53 x150))) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x195) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x798)) (and (= (<= x195 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x798)) (> x798 x195)))) (= (x354 x765) x267) (= x743 (< 31 x174)) (= x765 (+ 1 x659)) (= (* x633 8) x391) (= x826 (= 0 x573)) (<= x573 18446744073709551615) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x703) x296) (not x697) (= x573 (x135 x465)) (= (x745 x762 x296) x150) (= x465 (x714 (+ x202 x59))) (= x798 (x714 (+ 32 x465))) (= (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x391) x703) (= x195 (x405 (- x301 x573))) (= x697 (= 1 (ite (< 31 x573) 1 0))) (or (= x668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x668 1)) (= x116 (ite (<= x150 1) x734 (x794 x150 x53))) (not x743) (= x298 (x714 (+ 32 x61)))) (or (and x826 (= 0 x76)) (and (not x826) (and (= x788 (x135 x798)) (= x76 x788))))) x610)))
(assert (x130 x573))
(assert (= (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x362) (ite (< x362 256) (x229 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x362)) 0)))
(assert (x148 x779))
(assert (x377 2 x413))
(assert (x104 x658 2))
(assert (x10 x640))
(assert (x148 x161))
(assert (x148 x585))
(assert (=> (>= 10000 x704) (= 0 (x341 x704))))
(assert (> (x772 32 x337) 10000))
(assert (x656 x131))
(assert (x148 x786))
(assert (x104 x169 2))
(assert (x130 x241))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x148 x188))
(assert (= (x404 (x591 64 x804 3)) 64))
(assert (x148 x5))
(assert (x148 x300))
(assert (= (or x718 x126) x254))
(assert (x148 x200))
(assert (x148 x798))
(assert (x148 x827))
(assert (x377 8 x633))
(assert (x148 x391))
(assert (x148 x353))
(assert (x148 x761))
(assert (x148 x266))
(assert (x277 x131))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (not (x40 (x591 64 x469 2))))
(assert (x148 x787))
(assert (x148 x459))
(assert (x148 x758))
(assert (x148 x416))
(assert (= (and (not x323) x254) x397))
(assert (not (x40 (x591 64 x129 2))))
(assert (x148 x268))
(assert (x148 x720))
(assert (x148 x150))
(assert (x148 x338))
(assert (x148 x628))
(assert (x148 x476))
(assert (=> (>= 10000 x742) (= 0 (x341 x742))))
(assert (= (x341 (+ x652 x554)) (x341 x554)))
(assert (x148 x185))
(assert (x656 x169))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x772 32 x337)))
(assert (x148 x324))
(assert (= x736 x727))
(assert (x148 x451))
(assert (x40 1099511627774))
(assert (= (x768 (x772 32 x659)) x659))
(assert (x148 x466))
(assert (x148 x59))
(assert (x40 18446744073709551615))
(assert (x148 x556))
(assert (< (x591 64 x129 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x148 x105))
(assert (= (and x160 x22) x825))
(assert (x148 x742))
(assert (x148 x688))
(assert (x302 x102 x38))
(assert (x148 x677))
(assert (x148 x774))
(assert (x148 x531))
(assert (x148 x806))
(assert (x148 x762))
(assert (x148 x210))
(assert (x148 x89))
(assert (= 0 (x341 2086056633)))
(assert (x148 x290))
(assert (=> (>= 10000 x512) (= 0 (x341 x512))))
(assert (x148 x432))
(assert (x10 x169))
(assert (x148 x510))
(assert (x627 x400))
(assert (= (x772 32 x351) (x341 (x772 32 x351))))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639871) 0))
(assert (x148 x276))
(assert (x130 x681))
(assert (x514 x640))
(assert (x148 x129))
(assert (= (x341 (+ 1 x759)) (x341 x759)))
(assert (x148 x238))
(assert (x148 x828))
(assert (x148 x489))
(assert (x148 x227))
(assert (x148 x219))
(assert (x148 x664))
(assert (x130 32))
(assert (x148 x184))
(assert (x656 x12))
(assert (x148 x218))
(assert (x412 x150 x53))
(assert (= (x341 57896044618658097711785492504343953926634992332820282019728792003956564819739) 0))
(assert (x148 x635))
(assert (x10 32))
(assert (= x235 (and (not x826) x801)))
(assert (x148 x8))
(assert (x148 x73))
(assert (x148 x747))
(assert (x104 x806 128))
(assert (x148 x543))
(assert (x148 x201))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (= (x341 1099511627774) 0))
(assert (= (and x323 x254) x478))
(assert (= (or x598 x394) x801))
(assert (x148 x345))
(assert (x130 x413))
(assert (x148 x48))
(assert (x148 x555))
(assert (= (x341 x516) (x341 (+ x516 x604))))
(assert (= (x341 x744) (x341 (+ x744 1))))
(assert (x148 x371))
(assert (x148 x96))
(assert (x148 x569))
(assert (x148 x757))
(assert (= x598 (and x357 (not x159))))
(assert (x10 (x326 2 x660)))
(assert (x148 x568))
(assert (and (= (x326 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= 2854495385411919762116571938898990272765493248 (x326 2 151)) (= 1208925819614629174706176 (x326 2 80)) (= (x326 2 62) 4611686018427387904) (= (x326 2 178) 383123885216472214589586756787577295904684780545900544) (= 11972621413014756705924586149611790497021399392059392 (x326 2 173)) (= (x326 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= 2 (x326 2 1)) (= 16777216 (x326 2 24)) (= 340282366920938463463374607431768211456 (x326 2 128)) (= 12554203470773361527671578846415332832204710888928069025792 (x326 2 193)) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x326 2 247)) (= 178405961588244985132285746181186892047843328 (x326 2 147)) (= 2923003274661805836407369665432566039311865085952 (x326 2 161)) (= 3064991081731777716716694054300618367237478244367204352 (x326 2 181)) (= (x326 2 65) 36893488147419103232) (= (x326 2 41) 2199023255552) (= 348449143727040986586495598010130648530944 (x326 2 138)) (= 6427752177035961102167848369364650410088811975131171341205504 (x326 2 202)) (= (x326 2 183) 12259964326927110866866776217202473468949912977468817408) (= 524288 (x326 2 19)) (= 85070591730234615865843651857942052864 (x326 2 126)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x326 2 246)) (= (x326 2 100) 1267650600228229401496703205376) (= (x326 2 42) 4398046511104) (= 87112285931760246646623899502532662132736 (x326 2 136)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x326 2 241)) (= (x326 2 118) 332306998946228968225951765070086144) (= 6582018229284824168619876730229402019930943462534319453394436096 (x326 2 212)) (= 9007199254740992 (x326 2 53)) (= (x326 2 74) 18889465931478580854784) (= (x326 2 96) 79228162514264337593543950336) (= (x326 2 13) 8192) (= (x326 2 189) 784637716923335095479473677900958302012794430558004314112) (= (x326 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 288230376151711744 (x326 2 58)) (= (x326 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x326 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= 421249166674228746791672110734681729275580381602196445017243910144 (x326 2 218)) (= 365375409332725729550921208179070754913983135744 (x326 2 158)) (= 4722366482869645213696 (x326 2 72)) (= (x326 2 146) 89202980794122492566142873090593446023921664) (= 162259276829213363391578010288128 (x326 2 107)) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x326 2 231)) (= (x326 2 191) 3138550867693340381917894711603833208051177722232017256448) (= (x326 2 180) 1532495540865888858358347027150309183618739122183602176) (= 1427247692705959881058285969449495136382746624 (x326 2 150)) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x326 2 233)) (= 187072209578355573530071658587684226515959365500928 (x326 2 167)) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x326 2 230)) (= (x326 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x326 2 222)) (= 22835963083295358096932575511191922182123945984 (x326 2 154)) (= 134217728 (x326 2 27)) (= 9223372036854775808 (x326 2 63)) (= (x326 2 3) 8) (= (x326 2 109) 649037107316853453566312041152512) (= 39614081257132168796771975168 (x326 2 95)) (= 281474976710656 (x326 2 48)) (= 262144 (x326 2 18)) (= (x326 2 160) 1461501637330902918203684832716283019655932542976) (= (x326 2 162) 5846006549323611672814739330865132078623730171904) (= (x326 2 112) 5192296858534827628530496329220096) (= (x326 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= (x326 2 139) 696898287454081973172991196020261297061888) (= 730750818665451459101842416358141509827966271488 (x326 2 159)) (= 4294967296 (x326 2 32)) (= 9444732965739290427392 (x326 2 73)) (= (x326 2 61) 2305843009213693952) (= (x326 2 133) 10889035741470030830827987437816582766592) (= (x326 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= (x326 2 157) 182687704666362864775460604089535377456991567872) (= (x326 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= (x326 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= (x326 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= (x326 2 90) 1237940039285380274899124224) (= 40564819207303340847894502572032 (x326 2 105)) (= (x326 2 124) 21267647932558653966460912964485513216) (= (x326 2 26) 67108864) (= (x326 2 94) 19807040628566084398385987584) (= (x326 2 71) 2361183241434822606848) (= (x326 2 23) 8388608) (= 401734511064747568885490523085290650630550748445698208825344 (x326 2 198)) (= 1 (x326 2 0)) (= 713623846352979940529142984724747568191373312 (x326 2 149)) (= 91343852333181432387730302044767688728495783936 (x326 2 156)) (= (x326 2 177) 191561942608236107294793378393788647952342390272950272) (= 18446744073709551616 (x326 2 64)) (= (x326 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 33554432 (x326 2 25)) (= (x326 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 147573952589676412928 (x326 2 67)) (= 21778071482940061661655974875633165533184 (x326 2 134)) (= (x326 2 140) 1393796574908163946345982392040522594123776) (= (x326 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= 2097152 (x326 2 21)) (= (x326 2 11) 2048) (= 158456325028528675187087900672 (x326 2 97)) (= (x326 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x326 2 210) 1645504557321206042154969182557350504982735865633579863348609024) (= 5986310706507378352962293074805895248510699696029696 (x326 2 172)) (= (x326 2 119) 664613997892457936451903530140172288) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x326 2 220)) (= 9903520314283042199192993792 (x326 2 93)) (= (x326 2 163) 11692013098647223345629478661730264157247460343808) (= (x326 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= 5575186299632655785383929568162090376495104 (x326 2 142)) (= 170141183460469231731687303715884105728 (x326 2 127)) (= 98079714615416886934934209737619787751599303819750539264 (x326 2 186)) (= (x326 2 50) 1125899906842624) (= 9671406556917033397649408 (x326 2 83)) (= (x326 2 101) 2535301200456458802993406410752) (= (x326 2 115) 41538374868278621028243970633760768) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x326 2 240)) (= (x326 2 10) 1024) (= 32768 (x326 2 15)) (= (x326 2 168) 374144419156711147060143317175368453031918731001856) (= (x326 2 46) 70368744177664) (= (x326 2 129) 680564733841876926926749214863536422912) (= 8796093022208 (x326 2 43)) (= (x326 2 114) 20769187434139310514121985316880384) (= 42535295865117307932921825928971026432 (x326 2 125)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x326 2 211)) (= (x326 2 28) 268435456) (= (x326 2 45) 35184372088832) (= (x326 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x326 2 244)) (= (x326 2 117) 166153499473114484112975882535043072) (= (x326 2 2) 4) (= (x326 2 12) 4096) (= (x326 2 79) 604462909807314587353088) (= (x326 2 76) 75557863725914323419136) (= (x326 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x326 2 249)) (= 4835703278458516698824704 (x326 2 82)) (= 144115188075855872 (x326 2 57)) (= (x326 2 55) 36028797018963968) (= (x326 2 188) 392318858461667547739736838950479151006397215279002157056) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x326 2 254)) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x326 2 232)) (= (x326 2 69) 590295810358705651712) (= 43556142965880123323311949751266331066368 (x326 2 135)) (= 93536104789177786765035829293842113257979682750464 (x326 2 166)) (= (x326 2 36) 68719476736) (= 50216813883093446110686315385661331328818843555712276103168 (x326 2 195)) (= 10141204801825835211973625643008 (x326 2 103)) (= 72057594037927936 (x326 2 56)) (= 18014398509481984 (x326 2 54)) (= 1606938044258990275541962092341162602522202993782792835301376 (x326 2 200)) (= 196159429230833773869868419475239575503198607639501078528 (x326 2 187)) (= (x326 2 165) 46768052394588893382517914646921056628989841375232) (= 26328072917139296674479506920917608079723773850137277813577744384 (x326 2 214)) (= (x326 2 174) 23945242826029513411849172299223580994042798784118784) (= 562949953421312 (x326 2 49)) (= 2596148429267413814265248164610048 (x326 2 111)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x326 2 228)) (= (x326 2 51) 2251799813685248) (= 210624583337114373395836055367340864637790190801098222508621955072 (x326 2 217)) (= (x326 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 10384593717069655257060992658440192 (x326 2 113)) (= 16 (x326 2 4)) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x326 2 223)) (= (x326 2 35) 34359738368) (= 11150372599265311570767859136324180752990208 (x326 2 143)) (= (x326 2 137) 174224571863520493293247799005065324265472) (= 151115727451828646838272 (x326 2 77)) (= (x326 2 141) 2787593149816327892691964784081045188247552) (= (x326 2 169) 748288838313422294120286634350736906063837462003712) (= 512 (x326 2 9)) (= (x326 2 7) 128) (= (x326 2 120) 1329227995784915872903807060280344576) (= 12855504354071922204335696738729300820177623950262342682411008 (x326 2 203)) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x326 2 224)) (= 5070602400912917605986812821504 (x326 2 102)) (= (x326 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 37778931862957161709568 (x326 2 75)) (= 766247770432944429179173513575154591809369561091801088 (x326 2 179)) (= (x326 2 132) 5444517870735015415413993718908291383296) (= 17179869184 (x326 2 34)) (= (x326 2 92) 4951760157141521099596496896) (= 16384 (x326 2 14)) (= 842498333348457493583344221469363458551160763204392890034487820288 (x326 2 219)) (= (x326 2 121) 2658455991569831745807614120560689152) (= 302231454903657293676544 (x326 2 78)) (= 6129982163463555433433388108601236734474956488734408704 (x326 2 182)) (= (x326 2 155) 45671926166590716193865151022383844364247891968) (= (x326 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x326 2 229)) (= 5708990770823839524233143877797980545530986496 (x326 2 152)) (= (x326 2 30) 1073741824) (= 536870912 (x326 2 29)) (= 316912650057057350374175801344 (x326 2 98)) (= 8589934592 (x326 2 33)) (= 102844034832575377634685573909834406561420991602098741459288064 (x326 2 206)) (= 4503599627370496 (x326 2 52)) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x326 2 236)) (= 6277101735386680763835789423207666416102355444464034512896 (x326 2 192)) (= 10633823966279326983230456482242756608 (x326 2 123)) (= 23384026197294446691258957323460528314494920687616 (x326 2 164)) (= (x326 2 176) 95780971304118053647396689196894323976171195136475136) (= 1048576 (x326 2 20)) (= (x326 2 68) 295147905179352825856) (= 11417981541647679048466287755595961091061972992 (x326 2 153)) (= (x326 2 87) 154742504910672534362390528) (= (x326 2 60) 1152921504606846976) (= 633825300114114700748351602688 (x326 2 99)) (= (x326 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x326 2 148) 356811923176489970264571492362373784095686656) (= 22300745198530623141535718272648361505980416 (x326 2 144)) (= 803469022129495137770981046170581301261101496891396417650688 (x326 2 199)) (= (x326 2 131) 2722258935367507707706996859454145691648) (= 1496577676626844588240573268701473812127674924007424 (x326 2 170)) (= 576460752303423488 (x326 2 59)) (= 549755813888 (x326 2 39)) (= (x326 2 5) 32) (= (x326 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x326 2 70) 1180591620717411303424) (= (x326 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= (x326 2 47) 140737488355328) (= 52656145834278593348959013841835216159447547700274555627155488768 (x326 2 215)) (= (x326 2 85) 38685626227668133590597632) (= 309485009821345068724781056 (x326 2 88)) (= (x326 2 44) 17592186044416) (= (x326 2 31) 2147483648) (= (x326 2 196) 100433627766186892221372630771322662657637687111424552206336) (= (x326 2 86) 77371252455336267181195264) (= (x326 2 122) 5316911983139663491615228241121378304) (= (x326 2 89) 618970019642690137449562112) (= (x326 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x326 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= 19342813113834066795298816 (x326 2 84)) (= (x326 2 91) 2475880078570760549798248448) (= (x326 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= 65536 (x326 2 16)) (= 137438953472 (x326 2 37)) (= (x326 2 66) 73786976294838206464) (= (x326 2 106) 81129638414606681695789005144064) (= 1099511627776 (x326 2 40)) (= (x326 2 108) 324518553658426726783156020576256) (= 83076749736557242056487941267521536 (x326 2 116)) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x326 2 237)) (= (x326 2 104) 20282409603651670423947251286016) (= 44601490397061246283071436545296723011960832 (x326 2 145)) (= (x326 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= (x326 2 6) 64) (= (x326 2 184) 24519928653854221733733552434404946937899825954937634816) (= 1298074214633706907132624082305024 (x326 2 110)) (= 2993155353253689176481146537402947624255349848014848 (x326 2 171)) (= 2417851639229258349412352 (x326 2 81)) (= (x326 2 17) 131072) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x326 2 243)) (= (x326 2 175) 47890485652059026823698344598447161988085597568237568) (= (x326 2 22) 4194304) (= 256 (x326 2 8)) (= (x326 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= (x326 2 130) 1361129467683753853853498429727072845824) (= 274877906944 (x326 2 38))))
(assert (x148 x668))
(assert (x148 x680))
(assert (x130 x432))
(assert (x130 8))
(assert (= x572 (and x607 x739)))
(assert (x148 x544))
(assert (x518 x415))
(assert (x246 (+ 31 x398) 32))
(assert (not (x40 (x772 32 x337))))
(assert (x302 x76 x594))
(assert (x148 x725))
(assert (x148 x509))
(assert (x148 x383))
(assert (> (x591 64 x161 3) 10000))
(assert (x656 x640))
(assert (x130 x157))
(assert (x148 x566))
(assert (x148 x90))
(assert (x10 (+ x389 31)))
(assert (x148 x79))
(assert (x148 x262))
(assert (x148 x675))
(assert (x148 x708))
(assert (x148 x467))
(assert (x148 x247))
(assert (x148 x822))
(assert (x148 x766))
(assert (x148 x116))
(assert (not (x40 (x591 64 x704 2))))
(assert (> (x591 64 x469 2) 10000))
(assert (x10 x658))
(assert (x148 x362))
(assert (x277 2))
(assert (x148 x127))
(assert (x148 x131))
(assert (=> (>= 10000 x185) (= (x341 x185) 0)))
(assert (= (and (not x225) x621) x80))
(assert (x148 x581))
(assert (x148 x260))
(assert (x148 x741))
(assert (x148 x85))
(assert (= (x404 (x591 64 x821 2)) 64))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639647))
(assert (x148 x243))
(assert (x148 x333))
(assert (x148 x53))
(assert (x148 x492))
(assert (x148 x700))
(assert (x148 x163))
(assert (x148 x782))
(assert (x148 x791))
(assert (x377 2 x573))
(assert (= (x768 (x591 64 x821 2)) x821))
(assert (x148 x574))
(assert (= (x341 (+ x421 1)) (x341 x421)))
(assert (x656 127))
(assert (x148 x251))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x591 64 x161 3)))
(assert (x148 x204))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639679) 0))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x130 x791))
(assert (x377 32 x157))
(assert (x148 x633))
(assert (x707 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x660)))
(assert (=> (>= 10000 x129) (= (x341 x129) 0)))
(assert (x148 x1))
(assert (= (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x391) (ite (> 256 x391) (x229 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x326 2 x391)) 0)))
(assert (x148 x20))
(assert (= (x341 (x591 64 x129 2)) (x591 64 x129 2)))
(assert (= 2 (x387 (x591 64 x704 2))))
(assert (x148 x122))
(assert (= x610 (=> (and (and (= x236 (x714 (+ x144 x288))) (>= 2 x815) (= (x714 (+ x134 x451)) x230) (= (x199 115792089237316195423570985008687907853269984665640564039457584007913129639935 x362) x757) (= x402 (ite (<= x144 1) x236 (x794 x144 x288))) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x757) x594) (or (>= x451 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x451 57896044618658097711785492504343953926634992332820282019728792003956564819739)) (= x815 (x135 x230)) (= x144 (x745 x76 x594)) (= (* x573 2) x288) (or (and (= (<= x451 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x663)) (< x451 x663)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x451) (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x451 (x135 x602)) (= x362 (* 8 x573)) (= (> x815 0) x225) (<= 1 x757)) (or (and (= 0 x821) (not x225)) (and x225 (and (or (>= x699 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x699)) (<= x437 2) (= x437 x821) (or (and (<= x663 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x699 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x699 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x663)) (< x699 x663))) (= (x135 x602) x699) (= x550 (x714 (+ x134 x699))) (= (x135 x550) x437))))) x346)))
(assert (x148 x469))
(assert (x148 x729))
(assert (x148 x831))
(assert (x148 x108))
(assert (x148 x547))
(assert (x148 x804))
(assert (= (x341 x737) (x341 (+ x737 1))))
(assert (x656 x762))
(assert (x148 x54))
(assert (x148 x733))
(assert (x656 x102))
(assert (x246 (+ x633 31) 32))
(assert (x514 x267))
(assert (= (or x397 x478) x166))
(assert (x148 x465))
(assert (= (x341 115792089237316195423570985008687907853269984665640564039457584007913129639423) 0))
(assert (x148 x411))
(assert (=> (<= x219 10000) (= 0 (x341 x219))))
(assert (x148 x532))
(assert (x148 x527))
(assert (x148 x375))
(assert (= (and x825 x141) x86))
(assert (= (x341 1099511627775) 0))
(assert (x148 x37))
(assert (x130 x459))
(assert (x40 4294967295))
(assert (= x644 (and x801 x826)))
(assert (x148 x444))
(assert (= (x772 32 x659) (x341 (x772 32 x659))))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x148 x491))
(assert (x377 32 x791))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x591 64 x704 2)))
(assert (x148 x162))
(assert (= (x341 (+ 1 x175)) (x341 x175)))
(assert (= x346 (=> (= x206 (not (< 1 x157))) (and (=> (and (= (x714 (+ x702 32)) x479) (= x28 (x405 (- x301 x532))) (= x8 (x135 x702)) (= (x71 x744) x34) (= (x211 x33) x779) (= x329 (x714 (+ x260 32))) (= (x591 64 x821 2) x33) (= (x714 (+ x702 x769)) x342) (= x494 (not (> x157 1))) (= x682 (x405 (- x301 x601))) (not (= x784 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x424 (x405 (- x301 x602))) (= x260 (x714 (+ x479 32))) (>= 1099511627775 x646) (= (x170 x744) x434) (>= 2 x89) (= (x714 (+ x602 x201)) x702) (= (x714 (+ 32 x624)) x546) (= (x714 (+ x342 32)) x266) (= x769 (x135 x671)) (= x521 (x714 (+ x671 32))) (= (x135 x602) x201) (= x526 (x592 x744)) (= (x135 x342) x601) (<= x434 1461501637330902918203684832716283019655932542975) (not (= x386 57896044618658097711785492504343953926634992332820282019728792003956564819999)) (= x671 (x714 (+ 32 x329))) (not (= x769 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not (or (and (<= x546 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28)) (and (< x28 x546) (= (<= x546 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28))))) (>= 1461501637330902918203684832716283019655932542975 x779) (= x646 (x103 x33)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x318) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201)) (and (= (<= x318 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x201 x318))) (>= 18446744073709551615 x532) (= x532 (x135 x624)) (>= 1099511627775 x526) (>= 1461501637330902918203684832716283019655932542975 x8) (not (or (and (< x682 x266) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x682) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x266))) (and (> x682 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x266 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x556 (x405 (- x386 31))) (<= x34 1099511627775) (= x624 (x714 (+ x702 x784))) (or (>= x201 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819739 x201)) (= x381 (x135 x329)) (= x784 (x135 x521)) (= (x177 x744) x785) (>= 255 x785) (= (x135 x260) x89) (= (x405 (- x301 x702)) x386) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x556) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x784)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x784) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x556)) (> x556 x784))) (or (and (< x769 x556) (= (<= x769 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x556))) (and (<= x556 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x769))) (>= 18446744073709551615 x601) (= (x405 (- x424 191)) x318)) (and x494 (=> (and (and (= x684 x161) (= x101 (x714 (+ 32 x132))) (>= 127 x16) (= x787 (x46 x300)) (<= x44 1461501637330902918203684832716283019655932542975) (= (+ x522 1) x29) (= x761 (x46 x748)) (= (+ 1 x737) x522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639775 x333) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639775) (>= 127 x16) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639743) (= (x36 x737) x713) (= x489 (x714 (+ x333 224))) (= x47 (x714 (+ x510 32))) (= x114 (x714 (+ 192 x333))) (= (x714 (+ 32 x101)) x510) (= false x796) (= x458 (x749 x522)) (= x470 (x714 (+ x333 160))) (= x520 x333) (= x90 (x46 x470)) (= x442 (x46 x562)) (= x787 x94) (>= 1099511627775 x142) (>= 1099511627775 x822) (= x766 x197) (= (or (not x461) x382) x422) (= (x178 x522) x48) (<= 1 x401) (= (x272 x522) x142) (= false x500) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x333) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639871 x333) (= (x714 (+ 32 x47)) x338) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639647 x333) (= false x763) (= x382 (= x100 x197)) (= (< 0 x681) x502) (= (x714 (+ x338 32)) x295) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x467) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639423 x467)) (= x82 (x64 x737)) (= x442 x93) (>= 1099511627775 x458) (= (x154 x737) x524) (= x766 (x46 x333)) (= (x714 (+ 32 x333)) x738) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x333) (= (x714 (+ 32 x333)) x775) (= x401 (x803 x219)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x333) (= (x714 (+ 256 x333)) x748) (= x677 (x46 x37)) (= (x372 x522) x822) (= x562 (x714 (+ x333 288))) (>= 1099511627775 x48) (= x461 (> x321 x807)) (= x347 (x46 x114)) (= false x519) (>= 1099511627775 x713) (= x466 2086056633) (= false x448) (= x737 (x591 64 x161 3)) (= x37 (x714 (+ 128 x333))) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639839) (<= x524 1099511627775) (>= 1099511627775 x789) (= x132 (x714 (+ x96 32))) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639647) (= (x46 x775) x672) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639711) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x333) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x333) (= x681 (x313 x29)) (= x807 x69) (= (x336 x737) x44) (= x403 x259) (= (x714 (+ 96 x333)) x300) (= x740 x761) (= (x714 (+ x467 32)) x729) (= (x418 x737) x105) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639871) (= x520 (+ 480 x729)) (= (x714 (+ 32 x295)) x790) (>= 5 x82) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= x677 x696) (= x789 (x306 x522)) (= x90 x192) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x333) (= x96 (x714 (+ 32 x738))) (not x502) (= x420 false) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639743) (= x347 x146) (= (x46 x489) x403) (= x467 (x78 (* 32 x681))) (<= x333 115792089237316195423570985008687907853269984665640564039457584007913129639903) (>= 2 x105)) (and (>= 1099511627775 x812) (<= x181 1099511627775) (= x535 false) (>= x75 0) (>= x534 0) (= 36 x795) (>= x724 0) (<= 0 x181) (<= x534 1099511627775) (>= 1099511627775 x252) (<= x75 1099511627775) (>= 2 x827) (<= x722 5) (<= 0 x252) (<= x498 1461501637330902918203684832716283019655932542975) (= false x408) (>= 1099511627775 x645) (<= 0 x645) (>= x498 0) (= false x213) (<= 0 x812) (<= x724 1099511627775) (= false x286) (= x684 x69))) (and x422 (=> (and (= (< x431 x321) x632) (= (or x124 (not x632)) x384) (= x69 x431) (= x124 (= x666 x672))) (and x384 (=> (and (= (= x94 x140) x97) (= (< x136 x321) x441) (= x797 (or (not x441) x97)) (= x136 x69)) (and (=> (and (= x575 (> x321 x151)) (= x151 x69) (= (= x259 x278) x265) (= (or x265 (not x575)) x589)) (and x589 (=> (and (= x69 x447) (= (> x321 x447) x92) (= (or (not x92) x320) x379) (= (= x740 x507) x320)) (and x379 (=> (and (= x715 (> x321 x721)) (= x606 (or (not x715) x648)) (= x721 x69) (= (= x93 x571) x648)) x606))))) x797)))))))) x206))))
(assert (= x351 (x768 (x772 32 x351))))
(assert (= 3 (x387 (x591 64 x742 3))))
(assert (= x162 (x768 (x591 64 x162 3))))
(assert (= (x341 x751) (x341 (+ 1 x751))))
(assert (x148 x626))
(assert (= x282 (=> (and (= (+ x814 1) x712) (= x454 (not (< x712 x149)))) (and x727 x454))))
(assert (x148 x295))
(assert (x148 x147))
(assert (x148 x524))
(assert (= (=> (and (or (and x323 (= 0 x102)) (and (and (= (x331 x204) x165) (= x165 x102)) (not x323))) (and (not x810) (= x810 (= 1 (ite (< 31 x413) 1 0))) (= x323 (= 0 x413)))) x445) x58))
(assert (x107 x806))
(assert (= (x341 x88) (x341 (+ x551 x88))))
(assert (x148 x342))
(assert (x148 x139))
(assert (x40 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (x148 x283))
(assert (x148 x113))
(assert (x148 x458))
(assert (= 0 (x341 115792089237316195423570985008687907853269984665640564039457584007913129639839)))
(assert (x148 x56))
(assert (x148 x617))
(assert (x148 x463))
(assert (x148 x360))
(assert (= (x387 (x591 64 x161 3)) 3))
(assert (x148 x275))
(assert (x148 x643))
(assert (= (x341 (x772 32 x118)) (x772 32 x118)))
(check-sat)
(exit)
