(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1586 () Int)
(declare-fun x1259 () Int)
(declare-fun x268 () Int)
(declare-fun x156 () Int)
(declare-fun x847 () Int)
(declare-fun x877 () Int)
(declare-fun x818 () Int)
(declare-fun x481 () Int)
(declare-fun x395 () Int)
(declare-fun x1340 () Int)
(declare-fun x424 () Int)
(declare-fun x1243 () Int)
(declare-fun x888 () Int)
(declare-fun x267 () Int)
(declare-fun x467 () Int)
(declare-fun x1295 () Int)
(declare-fun x1804 () Bool)
(declare-fun x729 () Int)
(declare-fun x530 () Int)
(declare-fun x1649 () Int)
(declare-fun x422 () Int)
(declare-fun x299 () Int)
(declare-fun x1109 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x590 () Int)
(declare-fun x99 () Int)
(declare-fun x1059 () Int)
(declare-fun x1579 () Int)
(declare-fun x82 () Int)
(declare-fun x1258 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1408 () Int)
(declare-fun x100 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x969 () Bool)
(declare-fun x893 () Bool)
(declare-fun x482 () Int)
(declare-fun x216 () Int)
(declare-fun x844 () Int)
(declare-fun x617 () Int)
(declare-fun x464 () Int)
(declare-fun x1177 () Int)
(declare-fun x594 () Int)
(declare-fun x169 () Int)
(declare-fun x1095 (Int Int) Int)
(declare-fun x373 () Int)
(declare-fun x601 () Int)
(declare-fun x1117 () Int)
(declare-fun x13 () Int)
(declare-fun x340 () Int)
(declare-fun x1630 () Int)
(declare-fun x94 () Int)
(declare-fun x1167 () Bool)
(declare-fun x625 () Int)
(declare-fun x916 () Int)
(declare-fun x881 () Int)
(declare-fun x1285 () Bool)
(declare-fun x165 () Int)
(declare-fun x119 () Bool)
(declare-fun x1534 () Int)
(declare-fun x738 () Int)
(declare-fun x186 () Bool)
(declare-fun x1605 () Int)
(declare-fun x571 () Int)
(declare-fun x491 () Int)
(declare-fun x958 () Int)
(declare-fun x1021 () Int)
(declare-fun x147 () Int)
(declare-fun x1105 () Int)
(declare-fun x1231 () Int)
(declare-fun x1292 () Int)
(declare-fun x1227 () Bool)
(declare-fun x72 () Int)
(declare-fun x1015 () Int)
(declare-fun x1645 () Int)
(declare-fun x817 () Bool)
(declare-fun x109 () Int)
(declare-fun x1607 () Int)
(declare-fun x917 () Int)
(declare-fun x803 () Int)
(declare-fun x1333 () Int)
(declare-fun x1351 () Bool)
(declare-fun x807 () Int)
(declare-fun x368 () Int)
(declare-fun x1360 () Int)
(declare-fun x1792 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1497 () Int)
(declare-fun x485 () Int)
(declare-fun x942 () Bool)
(declare-fun x642 () Int)
(declare-fun x657 () Bool)
(declare-fun x744 () Int)
(declare-fun x510 () Int)
(declare-fun x1517 () Int)
(declare-fun x1324 () Int)
(declare-fun x957 () Int)
(declare-fun x1347 () Int)
(declare-fun x1375 () Int)
(declare-fun x1013 () Bool)
(declare-fun x247 () Int)
(declare-fun x520 () Bool)
(declare-fun x534 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1056 () Int)
(declare-fun x51 () Bool)
(declare-fun x1367 () Int)
(declare-fun x883 () Int)
(declare-fun x1282 () Int)
(declare-fun x1709 () Int)
(declare-fun x1120 () Int)
(declare-fun x1739 () Int)
(declare-fun x1337 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1640 () Int)
(declare-fun x1613 () Int)
(declare-fun x696 () Int)
(declare-fun x284 () Bool)
(declare-fun x1350 () Int)
(declare-fun x19 () Int)
(declare-fun x308 () Int)
(declare-fun x1589 () Bool)
(declare-fun x1386 () Int)
(declare-fun x522 () Int)
(declare-fun x1606 () Bool)
(declare-fun x849 () Int)
(declare-fun x17 () Bool)
(declare-fun x1478 () Int)
(declare-fun x1030 () Int)
(declare-fun x498 () Bool)
(declare-fun x245 () Int)
(declare-fun x9 () Int)
(declare-fun x11 () Int)
(declare-fun x161 () Int)
(declare-fun x704 () Int)
(declare-fun x1790 () Bool)
(declare-fun x405 () Int)
(declare-fun x1163 () Int)
(declare-fun x280 () Int)
(declare-fun x577 () Int)
(declare-fun x533 () Int)
(declare-fun x377 () Int)
(declare-fun x730 () Int)
(declare-fun x389 () Int)
(declare-fun x525 () Int)
(declare-fun x1181 () Int)
(declare-fun x1803 () Int)
(declare-fun x1034 () Int)
(declare-fun x436 () Int)
(declare-fun x674 () Int)
(declare-fun x1594 () Int)
(declare-fun x834 () Int)
(declare-fun x8 () Bool)
(declare-fun x1454 (Int Int Int Int Int Int) Int)
(declare-fun x554 () Int)
(declare-fun x264 () Int)
(declare-fun x354 () Int)
(declare-fun x931 () Int)
(declare-fun x630 () Int)
(declare-fun x537 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1235 () Int)
(declare-fun x603 () Bool)
(declare-fun x400 () Bool)
(declare-fun x862 () Bool)
(declare-fun x269 () Bool)
(declare-fun x41 () Int)
(declare-fun x698 () Int)
(declare-fun x578 () Bool)
(declare-fun x828 () Bool)
(declare-fun x66 () Bool)
(declare-fun x1623 () Int)
(declare-fun x67 () Int)
(declare-fun x1539 () Int)
(declare-fun x401 () Int)
(declare-fun x1676 () Bool)
(declare-fun x34 () Int)
(declare-fun x348 () Int)
(declare-fun x171 () Int)
(declare-fun x1609 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1179 () Int)
(declare-fun x726 () Int)
(declare-fun x402 () Int)
(declare-fun x162 () Bool)
(declare-fun x954 () Int)
(declare-fun x1621 () Int)
(declare-fun x1513 () Int)
(declare-fun x1302 () Int)
(declare-fun x1610 () Int)
(declare-fun x149 () Int)
(declare-fun x655 () Int)
(declare-fun x566 () Int)
(declare-fun x455 () Int)
(declare-fun x158 () Int)
(declare-fun x502 () Int)
(declare-fun x181 () Int)
(declare-fun x1474 () Int)
(declare-fun x1549 () Int)
(declare-fun x1402 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1485 () Int)
(declare-fun x641 () Int)
(declare-fun x1048 () Int)
(declare-fun x392 () Int)
(declare-fun x1336 (Int) Int)
(declare-fun x978 () Int)
(declare-fun x1248 () Int)
(declare-fun x934 (Int) Int)
(declare-fun x1144 () Int)
(declare-fun x1502 () Int)
(declare-fun x1647 () Int)
(declare-fun x1699 () Int)
(declare-fun x1024 () Int)
(declare-fun x63 () Int)
(declare-fun x483 () Int)
(declare-fun x837 (Int) Int)
(declare-fun x484 () Bool)
(declare-fun x928 () Int)
(declare-fun x621 () Int)
(declare-fun x1741 () Bool)
(declare-fun x142 () Int)
(declare-fun x150 () Int)
(declare-fun x1495 () Int)
(declare-fun x383 () Int)
(declare-fun x1774 () Int)
(declare-fun x315 () Int)
(declare-fun x102 () Int)
(declare-fun x589 () Bool)
(declare-fun x1587 () Int)
(declare-fun x967 () Int)
(declare-fun x1775 () Bool)
(declare-fun x879 () Bool)
(declare-fun x876 () Int)
(declare-fun x236 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1100 () Int)
(declare-fun x160 () Int)
(declare-fun x435 () Int)
(declare-fun x1385 () Int)
(declare-fun x1533 () Int)
(declare-fun x1342 () Int)
(declare-fun x1067 () Int)
(declare-fun x1304 () Int)
(declare-fun x734 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1244 () Int)
(declare-fun x1220 () Int)
(declare-fun x1329 () Int)
(declare-fun x1011 () Int)
(declare-fun x339 () Int)
(declare-fun x1006 () Int)
(declare-fun x1714 () Int)
(declare-fun x925 () Bool)
(declare-fun x678 () Bool)
(declare-fun x89 () Int)
(declare-fun x960 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1479 () Int)
(declare-fun x951 () Int)
(declare-fun x695 () Int)
(declare-fun x1010 () Int)
(declare-fun x532 () Int)
(declare-fun x1171 () Int)
(declare-fun x1139 () Int)
(declare-fun x1793 () Int)
(declare-fun x1253 () Int)
(declare-fun x636 () Int)
(declare-fun x634 () Int)
(declare-fun x304 () Int)
(declare-fun x926 () Int)
(declare-fun x1737 () Bool)
(declare-fun x841 () Int)
(declare-fun x1523 () Int)
(declare-fun x1398 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1057 () Int)
(declare-fun x529 () Int)
(declare-fun x1692 () Int)
(declare-fun x1663 () Int)
(declare-fun x745 () Int)
(declare-fun x379 () Int)
(declare-fun x333 () Int)
(declare-fun x1394 () Int)
(declare-fun x44 () Int)
(declare-fun x1567 () Int)
(declare-fun x1028 () Int)
(declare-fun x772 () Int)
(declare-fun x540 () Bool)
(declare-fun x787 () Int)
(declare-fun x646 () Int)
(declare-fun x665 () Int)
(declare-fun x731 () Int)
(declare-fun x1265 () Int)
(declare-fun x183 () Bool)
(declare-fun x1805 () Int)
(declare-fun x443 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1684 () Int)
(declare-fun x1068 () Int)
(declare-fun x55 () Bool)
(declare-fun x1552 () Int)
(declare-fun x494 () Int)
(declare-fun x1410 () Int)
(declare-fun x1116 () Bool)
(declare-fun x648 (Int) Int)
(declare-fun x492 () Int)
(declare-fun x519 () Int)
(declare-fun x901 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1414 () Int)
(declare-fun x1066 () Bool)
(declare-fun x593 () Int)
(declare-fun x427 () Int)
(declare-fun x493 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1225 () Bool)
(declare-fun x1031 () Int)
(declare-fun x716 () Bool)
(declare-fun x361 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1740 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1540 () Int)
(declare-fun x456 () Int)
(declare-fun x1277 () Bool)
(declare-fun x90 () Int)
(declare-fun x962 () Int)
(declare-fun x1638 () Int)
(declare-fun x1356 () Int)
(declare-fun x260 () Int)
(declare-fun x661 () Int)
(declare-fun x624 () Int)
(declare-fun x979 () Int)
(declare-fun x208 () Int)
(declare-fun x239 () Int)
(declare-fun x1194 () Int)
(declare-fun x499 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1305 () Int)
(declare-fun x1038 () Int)
(declare-fun x653 () Int)
(declare-fun x1052 () Int)
(declare-fun x1722 () Int)
(declare-fun x281 () Int)
(declare-fun x48 () Int)
(declare-fun x191 () Int)
(declare-fun x845 () Int)
(declare-fun x1000 () Int)
(declare-fun x1574 () Int)
(declare-fun x637 () Int)
(declare-fun x344 () Int)
(declare-fun x135 () Bool)
(declare-fun x702 () Int)
(declare-fun x1400 () Int)
(declare-fun x5 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1655 () Int)
(declare-fun x218 () Int)
(declare-fun x170 () Bool)
(declare-fun x631 () Int)
(declare-fun x555 () Bool)
(declare-fun x882 () Int)
(declare-fun x1786 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1654 () Int)
(declare-fun x1632 () Int)
(declare-fun x785 () Int)
(declare-fun x497 () Bool)
(declare-fun x672 () Int)
(declare-fun x1735 () Int)
(declare-fun x998 () Int)
(declare-fun x607 () Int)
(declare-fun x1160 () Int)
(declare-fun x367 () Int)
(declare-fun x79 () Int)
(declare-fun x1293 () Int)
(declare-fun x887 () Int)
(declare-fun x115 () Int)
(declare-fun x1580 () Bool)
(declare-fun x1110 () Int)
(declare-fun x1801 () Int)
(declare-fun x903 () Int)
(declare-fun x88 () Int)
(declare-fun x991 () Int)
(declare-fun x1671 () Int)
(declare-fun x1002 () Int)
(declare-fun x1023 () Int)
(declare-fun x1208 () Int)
(declare-fun x49 () Int)
(declare-fun x1183 () Bool)
(declare-fun x588 () Int)
(declare-fun x479 () Int)
(declare-fun x1138 () Int)
(declare-fun x131 () Int)
(declare-fun x1069 () Int)
(declare-fun x118 () Int)
(declare-fun x1320 () Int)
(declare-fun x1633 () Int)
(declare-fun x173 () Bool)
(declare-fun x458 () Int)
(declare-fun x324 () Int)
(declare-fun x711 () Int)
(declare-fun x1768 () Int)
(declare-fun x1241 () Int)
(declare-fun x1512 () Bool)
(declare-fun x1742 () Int)
(declare-fun x709 () Bool)
(declare-fun x470 (Int) Int)
(declare-fun x1093 () Bool)
(declare-fun x157 () Int)
(declare-fun x225 () Int)
(declare-fun x1113 () Int)
(declare-fun x1237 () Int)
(declare-fun x1245 () Int)
(declare-fun x1073 () Int)
(declare-fun x644 () Int)
(declare-fun x222 () Int)
(declare-fun x1643 () Int)
(declare-fun x531 () Int)
(declare-fun x1536 () Int)
(declare-fun x1530 () Int)
(declare-fun x57 () Int)
(declare-fun x1142 (Int) Int)
(declare-fun x175 () Int)
(declare-fun x486 () Int)
(declare-fun x215 () Int)
(declare-fun x1465 () Bool)
(declare-fun x835 () Int)
(declare-fun x668 () Int)
(declare-fun x1461 () Bool)
(declare-fun x963 () Bool)
(declare-fun x243 () Bool)
(declare-fun x196 () Bool)
(declare-fun x230 () Int)
(declare-fun x1124 () Int)
(declare-fun x114 () Int)
(declare-fun x92 () Int)
(declare-fun x600 () Bool)
(declare-fun x809 () Int)
(declare-fun x911 () Bool)
(declare-fun x26 (Int) Int)
(declare-fun x353 () Int)
(declare-fun x199 () Int)
(declare-fun x829 () Int)
(declare-fun x722 () Int)
(declare-fun x471 () Bool)
(declare-fun x889 () Bool)
(declare-fun x691 () Int)
(declare-fun x457 () Int)
(declare-fun x1749 () Int)
(declare-fun x106 () Int)
(declare-fun x1298 () Int)
(declare-fun x421 () Bool)
(declare-fun x1242 () Int)
(declare-fun x922 () Int)
(declare-fun x1035 () Int)
(declare-fun x399 () Bool)
(declare-fun x501 () Int)
(declare-fun x805 () Int)
(declare-fun x1370 () Int)
(declare-fun x1690 () Int)
(declare-fun x1421 () Int)
(declare-fun x1146 () Int)
(declare-fun x1635 () Int)
(declare-fun x105 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1508 () Int)
(declare-fun x212 () Int)
(declare-fun x27 (Int) Int)
(declare-fun x1189 () Int)
(declare-fun x760 () Int)
(declare-fun x517 () Int)
(declare-fun x515 () Int)
(declare-fun x1108 () Int)
(declare-fun x1505 () Bool)
(declare-fun x1624 () Int)
(declare-fun x816 () Bool)
(declare-fun x40 () Int)
(declare-fun x574 () Int)
(declare-fun x804 () Int)
(declare-fun x352 () Int)
(declare-fun x1130 () Int)
(declare-fun x867 () Int)
(declare-fun x528 () Int)
(declare-fun x1794 () Int)
(declare-fun x1796 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x1604 () Int)
(declare-fun x553 () Int)
(declare-fun x546 () Int)
(declare-fun x163 () Int)
(declare-fun x1152 () Int)
(declare-fun x565 () Int)
(declare-fun x790 () Int)
(declare-fun x1473 () Int)
(declare-fun x1558 () Int)
(declare-fun x980 () Int)
(declare-fun x1039 () Int)
(declare-fun x1229 () Int)
(declare-fun x1436 () Int)
(declare-fun x187 () Int)
(declare-fun x271 () Bool)
(declare-fun x983 () Int)
(declare-fun x1701 () Int)
(declare-fun x282 () Int)
(declare-fun x680 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x966 () Int)
(declare-fun x252 () Int)
(declare-fun x473 () Int)
(declare-fun x987 () Int)
(declare-fun x812 () Int)
(declare-fun x671 () Int)
(declare-fun x1378 () Int)
(declare-fun x1450 () Int)
(declare-fun x430 () Int)
(declare-fun x1636 () Int)
(declare-fun x192 () Int)
(declare-fun x693 () Bool)
(declare-fun x941 () Int)
(declare-fun x905 () Int)
(declare-fun x30 () Int)
(declare-fun x393 () Bool)
(declare-fun x1174 () Int)
(declare-fun x496 () Int)
(declare-fun x207 () Int)
(declare-fun x508 () Int)
(declare-fun x136 () Int)
(declare-fun x1656 () Bool)
(declare-fun x1004 () Int)
(declare-fun x16 () Int)
(declare-fun x1747 () Int)
(declare-fun x667 () Int)
(declare-fun x753 () Bool)
(declare-fun x74 () Int)
(declare-fun x1619 () Int)
(declare-fun x592 () Bool)
(declare-fun x547 () Int)
(declare-fun x351 () Int)
(declare-fun x658 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x896 () Int)
(declare-fun x1315 () Int)
(declare-fun x1123 () Int)
(declare-fun x255 () Bool)
(declare-fun x33 () Bool)
(declare-fun x103 () Int)
(declare-fun x14 () Int)
(declare-fun x7 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1415 () Int)
(declare-fun x1119 () Int)
(declare-fun x1162 () Bool)
(declare-fun x412 () Int)
(declare-fun x1767 () Int)
(declare-fun x1664 () Int)
(declare-fun x1431 () Int)
(declare-fun x855 (Int) Int)
(declare-fun x345 () Int)
(declare-fun x769 () Int)
(declare-fun x1680 () Int)
(declare-fun x327 () Int)
(declare-fun x1396 () Int)
(declare-fun x1725 () Int)
(declare-fun x388 () Bool)
(declare-fun x122 () Int)
(declare-fun x1083 () Int)
(declare-fun x1705 () Int)
(declare-fun x1563 () Bool)
(declare-fun x735 () Int)
(declare-fun x659 () Int)
(declare-fun x699 (Int) Int)
(declare-fun x556 () Int)
(declare-fun x539 () Int)
(declare-fun x521 () Int)
(declare-fun x1773 () Int)
(declare-fun x1101 () Int)
(declare-fun x278 () Bool)
(declare-fun x228 () Int)
(declare-fun x775 () Int)
(declare-fun x1691 () Bool)
(declare-fun x552 () Bool)
(declare-fun x4 () Int)
(declare-fun x907 () Int)
(declare-fun x461 () Bool)
(declare-fun x406 () Int)
(declare-fun x733 () Int)
(declare-fun x1427 () Int)
(declare-fun x629 () Int)
(declare-fun x113 () Int)
(declare-fun x360 () Bool)
(declare-fun x490 () Int)
(declare-fun x1211 () Int)
(declare-fun x918 () Int)
(declare-fun x25 () Int)
(declare-fun x813 () Int)
(declare-fun x1776 () Int)
(declare-fun x112 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x307 () Int)
(declare-fun x1554 () Int)
(declare-fun x728 () Bool)
(declare-fun x3 () Int)
(declare-fun x1423 () Int)
(declare-fun x1762 () Bool)
(declare-fun x210 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1133 () Int)
(declare-fun x298 () Int)
(declare-fun x1223 () Int)
(declare-fun x1166 () Int)
(declare-fun x746 () Int)
(declare-fun x1669 () Int)
(declare-fun x1732 () Int)
(declare-fun x773 () Int)
(declare-fun x152 () Int)
(declare-fun x1591 () Int)
(declare-fun x1005 () Int)
(declare-fun x206 () Bool)
(declare-fun x549 () Int)
(declare-fun x1051 () Int)
(declare-fun x1346 () Int)
(declare-fun x416 () Int)
(declare-fun x1311 () Bool)
(declare-fun x697 () Bool)
(declare-fun x120 () Int)
(declare-fun x1440 () Int)
(declare-fun x1041 () Int)
(declare-fun x428 () Bool)
(declare-fun x1480 (Int Int) Int)
(declare-fun x1214 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1704 () Int)
(declare-fun x241 () Int)
(declare-fun x1601 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1600 () Int)
(declare-fun x1055 () Int)
(declare-fun x1357 () Int)
(declare-fun x1430 () Int)
(declare-fun x1665 () Int)
(declare-fun x763 () Int)
(declare-fun x1345 () Int)
(declare-fun x468 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1001 () Int)
(declare-fun x797 () Int)
(declare-fun x1087 () Int)
(declare-fun x758 () Bool)
(declare-fun x1049 () Int)
(declare-fun x1330 () Int)
(declare-fun x85 () Int)
(declare-fun x872 () Int)
(declare-fun x1634 () Bool)
(declare-fun x447 () Int)
(declare-fun x622 () Int)
(declare-fun x46 (Int) Int)
(declare-fun x597 () Bool)
(declare-fun x1003 () Int)
(declare-fun x151 () Int)
(declare-fun x793 () Int)
(declare-fun x714 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1075 () Int)
(declare-fun x871 () Int)
(declare-fun x1309 () Int)
(declare-fun x1492 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1158 () Int)
(declare-fun x1650 () Int)
(declare-fun x391 () Int)
(declare-fun x194 () Int)
(declare-fun x1343 () Int)
(declare-fun x1477 () Int)
(declare-fun x1204 () Int)
(declare-fun x1328 () Int)
(declare-fun x560 () Int)
(declare-fun x434 () Int)
(declare-fun x615 () Int)
(declare-fun x75 () Int)
(declare-fun x213 () Bool)
(declare-fun x579 () Int)
(declare-fun x1503 () Int)
(declare-fun x750 () Int)
(declare-fun x1439 () Bool)
(declare-fun x1134 () Int)
(declare-fun x290 () Int)
(declare-fun x892 () Int)
(declare-fun x1535 () Int)
(declare-fun x1572 () Int)
(declare-fun x452 () Int)
(declare-fun x441 () Int)
(declare-fun x411 () Bool)
(declare-fun x1576 () Int)
(declare-fun x1411 () Int)
(declare-fun x952 () Int)
(declare-fun x110 () Int)
(declare-fun x329 () Int)
(declare-fun x176 () Int)
(declare-fun x1251 () Bool)
(declare-fun x111 () Int)
(declare-fun x277 () Int)
(declare-fun x1443 () Bool)
(declare-fun x664 () Int)
(declare-fun x220 () Int)
(declare-fun x864 () Int)
(declare-fun x814 () Int)
(declare-fun x1437 () Int)
(declare-fun x1380 () Int)
(declare-fun x1226 () Int)
(declare-fun x1784 () Int)
(declare-fun x1284 () Int)
(declare-fun x682 (Int Int) Int)
(declare-fun x1271 () Bool)
(declare-fun x93 () Int)
(declare-fun x1466 () Int)
(declare-fun x692 () Int)
(declare-fun x1444 (Int) Int)
(declare-fun x618 (Int Int Int) Int)
(declare-fun x1355 () Int)
(declare-fun x703 () Int)
(declare-fun x1516 () Bool)
(declare-fun x270 () Bool)
(declare-fun x771 () Int)
(declare-fun x1390 () Int)
(declare-fun x285 () Bool)
(declare-fun x801 () Int)
(declare-fun x1273 () Int)
(declare-fun x1236 () Int)
(declare-fun x761 () Int)
(declare-fun x2 () Int)
(declare-fun x587 () Int)
(declare-fun x1053 () Int)
(declare-fun x316 () Int)
(declare-fun x1238 () Int)
(declare-fun x1464 (Int) Int)
(declare-fun x76 () Bool)
(declare-fun x396 () Int)
(declare-fun x249 () Int)
(declare-fun x1761 () Int)
(declare-fun x1697 () Int)
(declare-fun x1195 () Int)
(declare-fun x874 () Int)
(declare-fun x1726 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x23 () Bool)
(declare-fun x1137 () Int)
(declare-fun x125 () Int)
(declare-fun x506 () Int)
(declare-fun x390 () Int)
(declare-fun x444 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1233 () Int)
(declare-fun x167 () Int)
(declare-fun x1719 () Int)
(declare-fun x189 () Int)
(declare-fun x325 () Int)
(declare-fun x251 () Int)
(declare-fun x1327 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1545 () Int)
(declare-fun x47 () Int)
(declare-fun x1182 () Int)
(declare-fun x1063 () Int)
(declare-fun x838 () Bool)
(declare-fun x28 () Int)
(declare-fun x193 () Int)
(declare-fun x1033 () Int)
(declare-fun x1126 () Int)
(declare-fun x1294 () Int)
(declare-fun x398 () Int)
(declare-fun x1476 () Bool)
(declare-fun x256 () Int)
(declare-fun x1618 () Int)
(declare-fun x1409 () Int)
(declare-fun x684 () Int)
(declare-fun x640 () Int)
(declare-fun x227 () Int)
(declare-fun x1249 () Int)
(declare-fun x140 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1197 () Int)
(declare-fun x1156 () Int)
(declare-fun x819 () Int)
(declare-fun x1206 (Int Int) Int)
(declare-fun x1498 (Int Int Int Int) Int)
(declare-fun x1071 () Int)
(declare-fun x1765 () Int)
(declare-fun x509 () Int)
(declare-fun x1104 () Int)
(declare-fun x970 () Int)
(declare-fun x984 () Int)
(declare-fun x1674 () Int)
(declare-fun x1262 () Int)
(declare-fun x53 () Int)
(declare-fun x1491 () Int)
(declare-fun x1115 () Int)
(declare-fun x275 () Int)
(declare-fun x1228 () Int)
(declare-fun x1791 () Int)
(declare-fun x190 () Bool)
(declare-fun x1797 () Int)
(declare-fun x569 () Int)
(declare-fun x996 () Int)
(declare-fun x209 () Bool)
(declare-fun x168 () Bool)
(declare-fun x850 () Int)
(declare-fun x1459 () Int)
(declare-fun x261 () Int)
(declare-fun x272 () Int)
(declare-fun x1299 () Int)
(declare-fun x685 () Int)
(declare-fun x1151 () Bool)
(declare-fun x707 (Int) Int)
(declare-fun x945 () Int)
(declare-fun x1743 () Bool)
(declare-fun x523 () Int)
(declare-fun x1771 () Int)
(declare-fun x1499 () Bool)
(declare-fun x319 () Int)
(declare-fun x22 () Bool)
(declare-fun x859 () Int)
(declare-fun x937 () Int)
(declare-fun x1467 () Int)
(declare-fun x1435 () Int)
(declare-fun x1728 () Int)
(declare-fun x153 () Int)
(declare-fun x1296 () Int)
(declare-fun x856 () Int)
(declare-fun x679 () Int)
(declare-fun x643 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x474 () Int)
(declare-fun x751 () Int)
(declare-fun x200 () Int)
(declare-fun x1751 () Int)
(declare-fun x1519 () Bool)
(declare-fun x749 () Int)
(declare-fun x717 () Bool)
(declare-fun x1007 () Int)
(declare-fun x1486 () Int)
(declare-fun x448 () Int)
(declare-fun x923 () Int)
(declare-fun x706 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1291 () Int)
(declare-fun x943 (Int) Int)
(declare-fun x128 () Int)
(declare-fun x104 () Int)
(declare-fun x1441 () Int)
(declare-fun x764 () Int)
(declare-fun x37 () Int)
(declare-fun x878 () Int)
(declare-fun x1426 () Int)
(declare-fun x645 () Int)
(declare-fun x295 () Int)
(declare-fun x1673 () Int)
(declare-fun x908 () Int)
(declare-fun x1114 () Int)
(declare-fun x1135 () Int)
(declare-fun x505 () Int)
(declare-fun x1617 () Int)
(declare-fun x466 () Int)
(declare-fun x573 () Int)
(declare-fun x438 () Int)
(declare-fun x1153 (Int) Int)
(declare-fun x1733 () Int)
(declare-fun x380 () Int)
(declare-fun x1046 () Int)
(declare-fun x341 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x542 () Int)
(declare-fun x798 () Int)
(declare-fun x219 () Int)
(declare-fun x407 () Int)
(declare-fun x129 () Bool)
(declare-fun x1769 () Int)
(declare-fun x977 () Bool)
(declare-fun x338 () Int)
(declare-fun x1312 () Int)
(declare-fun x1522 () Int)
(declare-fun x1147 () Int)
(declare-fun x976 () Int)
(declare-fun x1681 () Int)
(declare-fun x986 () Int)
(declare-fun x370 (Int Int) Int)
(declare-fun x86 () Int)
(declare-fun x1525 () Bool)
(declare-fun x335 () Int)
(declare-fun x940 () Int)
(declare-fun x1392 () Int)
(declare-fun x214 () Int)
(declare-fun x1521 () Int)
(declare-fun x1376 () Int)
(declare-fun x97 () Int)
(declare-fun x1753 () Int)
(declare-fun x581 () Bool)
(declare-fun x36 () Bool)
(declare-fun x384 () Int)
(declare-fun x1393 () Int)
(declare-fun x725 () Bool)
(declare-fun x602 () Int)
(declare-fun x185 () Int)
(declare-fun x317 () Int)
(declare-fun x826 () Int)
(declare-fun x852 () Bool)
(declare-fun x596 () Int)
(declare-fun x231 () Int)
(declare-fun x146 () Int)
(declare-fun x779 () Bool)
(declare-fun x843 () Int)
(declare-fun x1150 () Int)
(declare-fun x70 () Bool)
(declare-fun x1203 () Int)
(declare-fun x1596 () Int)
(declare-fun x1032 () Int)
(declare-fun x1317 (Int) Int)
(declare-fun x45 () Int)
(declare-fun x1546 () Int)
(declare-fun x1781 () Bool)
(declare-fun x31 () Bool)
(declare-fun x638 () Bool)
(declare-fun x20 () Int)
(declare-fun x1592 () Int)
(declare-fun x752 (Int) Int)
(declare-fun x1723 () Int)
(declare-fun x681 (Int) Int)
(declare-fun x378 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1763 () Int)
(declare-fun x1560 () Int)
(declare-fun x233 () Int)
(declare-fun x632 () Bool)
(declare-fun x420 () Int)
(declare-fun x1569 () Int)
(declare-fun x1713 () Int)
(declare-fun x770 () Bool)
(declare-fun x912 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1434 () Int)
(declare-fun x582 () Bool)
(declare-fun x166 () Int)
(declare-fun x677 () Int)
(declare-fun x666 () Int)
(declare-fun x1648 () Int)
(declare-fun x992 () Int)
(declare-fun x595 () Int)
(declare-fun x608 () Int)
(declare-fun x1384 () Int)
(declare-fun x1359 () Int)
(declare-fun x203 () Int)
(declare-fun x1369 () Int)
(declare-fun x919 () Int)
(declare-fun x1125 () Bool)
(declare-fun x1764 () Int)
(declare-fun x662 () Bool)
(declare-fun x500 (Int Int Int Int) Int)
(declare-fun x743 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x683 () Int)
(declare-fun x410 () Int)
(declare-fun x83 () Int)
(declare-fun x822 () Bool)
(declare-fun x575 () Int)
(declare-fun x204 () Bool)
(declare-fun x611 () Int)
(declare-fun x1027 () Int)
(declare-fun x792 () Bool)
(declare-fun x476 () Int)
(declare-fun x724 () Bool)
(declare-fun x949 () Int)
(declare-fun x205 () Int)
(declare-fun x1462 () Int)
(declare-fun x238 () Int)
(declare-fun x1509 () Int)
(declare-fun x283 () Int)
(declare-fun x408 () Int)
(declare-fun x650 () Bool)
(declare-fun x906 () Int)
(declare-fun x1084 () Int)
(declare-fun x80 () Bool)
(declare-fun x774 () Bool)
(declare-fun x851 () Int)
(declare-fun x1070 () Int)
(declare-fun x469 () Int)
(declare-fun x96 () Bool)
(declare-fun x1670 () Int)
(declare-fun x77 () Int)
(declare-fun x800 () Int)
(declare-fun x873 () Int)
(declare-fun x736 () Int)
(declare-fun x414 () Int)
(declare-fun x545 () Int)
(declare-fun x897 () Int)
(declare-fun x139 () Bool)
(declare-fun x334 () Int)
(declare-fun x439 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1366 () Int)
(declare-fun x727 () Int)
(declare-fun x898 (Int) Int)
(declare-fun x442 () Int)
(declare-fun x875 () Int)
(declare-fun x929 () Bool)
(declare-fun x1504 () Int)
(declare-fun x584 () Int)
(declare-fun x274 () Int)
(declare-fun x1788 () Int)
(declare-fun x1528 () Int)
(declare-fun x381 () Int)
(declare-fun x1603 () Int)
(declare-fun x1128 () Int)
(declare-fun x1078 () Int)
(declare-fun x1079 () Int)
(declare-fun x21 () Int)
(declare-fun x453 () Int)
(declare-fun x1419 () Int)
(declare-fun x69 () Int)
(declare-fun x355 () Int)
(declare-fun x1582 () Int)
(declare-fun x1029 () Int)
(declare-fun x890 () Int)
(declare-fun x1389 () Int)
(declare-fun x1721 () Int)
(declare-fun x660 () Bool)
(declare-fun x930 () Int)
(declare-fun x821 () Bool)
(declare-fun x968 () Int)
(declare-fun x1500 () Int)
(declare-fun x409 () Int)
(declare-fun x1103 () Int)
(declare-fun x286 (Int) Int)
(declare-fun x1730 (Int) Int)
(declare-fun x250 () Int)
(declare-fun x1149 () Int)
(declare-fun x1575 () Int)
(declare-fun x1170 () Int)
(declare-fun x975 () Int)
(declare-fun x806 () Int)
(declare-fun x431 () Int)
(declare-fun x1403 () Bool)
(declare-fun x946 () Int)
(declare-fun x1332 () Int)
(declare-fun x861 () Int)
(declare-fun x756 () Int)
(declare-fun x1140 () Int)
(declare-fun x1429 () Bool)
(declare-fun x504 () Int)
(declare-fun x526 () Int)
(declare-fun x248 () Int)
(declare-fun x1515 () Bool)
(declare-fun x293 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1652 () Int)
(declare-fun x134 () Int)
(declare-fun x1507 () Int)
(declare-fun x1062 () Bool)
(declare-fun x32 () Bool)
(declare-fun x1310 () Int)
(declare-fun x35 () Int)
(declare-fun x359 () Int)
(declare-fun x253 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1487 () Int)
(declare-fun x266 (Int) Int)
(declare-fun x623 () Int)
(declare-fun x1020 () Int)
(declare-fun x1212 () Int)
(declare-fun x179 () Int)
(declare-fun x635 () Int)
(declare-fun x548 () Int)
(declare-fun x60 () Int)
(declare-fun x1770 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1185 () Int)
(declare-fun x1460 () Int)
(declare-fun x201 () Bool)
(declare-fun x825 () Int)
(declare-fun x626 () Int)
(declare-fun x1581 () Int)
(declare-fun x1757 () Int)
(declare-fun x188 () Int)
(declare-fun x585 () Int)
(declare-fun x1702 () Int)
(declare-fun x240 () Int)
(declare-fun x369 () Int)
(declare-fun x1222 () Int)
(declare-fun x1297 () Int)
(declare-fun x1234 () Int)
(declare-fun x221 () Int)
(declare-fun x559 () Int)
(declare-fun x463 () Bool)
(declare-fun x915 () Int)
(declare-fun x1257 () Int)
(declare-fun x1514 () Int)
(declare-fun x689 () Int)
(declare-fun x1422 () Int)
(declare-fun x1472 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1353 () Int)
(declare-fun x1382 () Int)
(declare-fun x1614 () Int)
(declare-fun x1335 () Int)
(declare-fun x1155 () Int)
(declare-fun x823 () Int)
(declare-fun x472 () Int)
(declare-fun x741 () Bool)
(declare-fun x900 () Int)
(declare-fun x609 () Int)
(declare-fun x1274 () Int)
(declare-fun x670 () Int)
(declare-fun x1076 () Int)
(declare-fun x1678 () Int)
(declare-fun x1736 () Int)
(declare-fun x1556 () Int)
(declare-fun x1 () Int)
(declare-fun x1368 () Int)
(declare-fun x1416 () Int)
(declare-fun x1668 () Int)
(declare-fun x172 () Int)
(declare-fun x1045 (Int) Bool)
(declare-fun x320 () Int)
(declare-fun x1442 () Int)
(declare-fun x989 () Int)
(declare-fun x538 () Int)
(declare-fun x386 () Int)
(declare-fun x1210 () Bool)
(declare-fun x973 () Int)
(declare-fun x313 () Int)
(declare-fun x305 () Int)
(declare-fun x1588 () Int)
(declare-fun x1566 () Int)
(declare-fun x854 () Int)
(declare-fun x1371 () Int)
(declare-fun x1659 () Int)
(declare-fun x1307 () Int)
(declare-fun x1191 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1205 () Int)
(declare-fun x1300 (Int) Int)
(declare-fun x1254 () Int)
(declare-fun x475 () Int)
(declare-fun x701 (Int) Int)
(declare-fun x331 () Bool)
(declare-fun x541 () Int)
(declare-fun x1352 () Bool)
(declare-fun x126 () Bool)
(declare-fun x1391 () Int)
(declare-fun x418 () Int)
(declare-fun x202 () Int)
(declare-fun x38 () Int)
(declare-fun x766 () Int)
(declare-fun x1040 () Int)
(declare-fun x1501 () Int)
(declare-fun x1494 () Int)
(declare-fun x777 () Bool)
(declare-fun x1178 () Int)
(declare-fun x782 () Int)
(declare-fun x159 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x1783 () Int)
(declare-fun x242 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1289 () Int)
(declare-fun x885 () Int)
(declare-fun x318 () Int)
(declare-fun x349 () Int)
(declare-fun x1493 () Int)
(declare-fun x1218 () Int)
(declare-fun x1255 () Int)
(declare-fun x322 () Int)
(declare-fun x1209 () Int)
(declare-fun x884 () Int)
(declare-fun x1313 () Int)
(declare-fun x1188 () Int)
(declare-fun x605 () Int)
(declare-fun x1397 () Int)
(declare-fun x1387 () Int)
(declare-fun x513 () Int)
(declare-fun x376 () Int)
(declare-fun x1777 () Int)
(declare-fun x842 () Int)
(declare-fun x426 () Bool)
(declare-fun x1088 () Int)
(declare-fun x263 () Int)
(declare-fun x836 () Int)
(declare-fun x1496 () Int)
(declare-fun x586 () Int)
(declare-fun x1738 () Int)
(declare-fun x488 () Bool)
(declare-fun x1745 () Int)
(declare-fun x948 () Bool)
(declare-fun x1637 () Int)
(declare-fun x178 () Int)
(declare-fun x909 () Int)
(declare-fun x620 () Int)
(declare-fun x1683 () Int)
(declare-fun x791 (Int) Int)
(declare-fun x1620 () Int)
(declare-fun x1524 () Int)
(declare-fun x182 () Int)
(declare-fun x1543 () Int)
(declare-fun x824 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1511 () Int)
(declare-fun x802 () Int)
(declare-fun x536 () Int)
(declare-fun x15 () Int)
(declare-fun x786 () Bool)
(declare-fun x1451 () Int)
(declare-fun x62 () Bool)
(declare-fun x1316 () Int)
(declare-fun x43 () Int)
(declare-fun x1682 () Int)
(declare-fun x524 () Int)
(declare-fun x784 () Bool)
(declare-fun x1173 () Int)
(declare-fun x705 () Int)
(declare-fun x1689 () Int)
(declare-fun x145 () Int)
(declare-fun x1090 () Int)
(declare-fun x12 () Int)
(declare-fun x956 () Bool)
(declare-fun x437 () Int)
(declare-fun x848 () Int)
(declare-fun x535 () Int)
(declare-fun x827 () Int)
(declare-fun x964 () Int)
(declare-fun x24 () Bool)
(declare-fun x78 () Int)
(declare-fun x1578 () Int)
(declare-fun x312 () Bool)
(declare-fun x397 () Int)
(declare-fun x1256 () Int)
(declare-fun x1639 () Int)
(declare-fun x1694 () Int)
(declare-fun x1420 () Int)
(declare-fun x71 () Bool)
(declare-fun x972 () Int)
(declare-fun x947 () Int)
(declare-fun x1107 (Int Int Int Int Int Int Int) Int)
(declare-fun x633 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1457 () Int)
(declare-fun x1599 () Int)
(declare-fun x1544 () Int)
(declare-fun x712 () Int)
(declare-fun x1593 () Int)
(declare-fun x1448 () Int)
(declare-fun x61 () Int)
(declare-fun x598 () Bool)
(declare-fun x656 () Int)
(declare-fun x1642 (Int) Int)
(declare-fun x955 () Int)
(declare-fun x1192 () Int)
(declare-fun x865 () Int)
(declare-fun x1562 () Int)
(declare-fun x1326 () Int)
(declare-fun x754 () Int)
(declare-fun x296 () Int)
(declare-fun x1361 () Int)
(declare-fun x10 () Int)
(declare-fun x174 (Int) Int)
(declare-fun x1129 () Int)
(declare-fun x1412 () Bool)
(declare-fun x950 () Int)
(declare-fun x788 () Int)
(declare-fun x765 () Bool)
(declare-fun x995 () Int)
(declare-fun x1780 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x652 () Int)
(declare-fun x789 () Int)
(declare-fun x254 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1625 (Int) Int)
(declare-fun x1082 () Int)
(declare-fun x1425 () Int)
(declare-fun x1207 () Int)
(declare-fun x1136 () Int)
(declare-fun x737 () Int)
(declare-fun x721 () Int)
(declare-fun x480 () Int)
(declare-fun x143 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1766 () Int)
(declare-fun x417 () Int)
(declare-fun x1096 () Int)
(declare-fun x1661 () Int)
(declare-fun x1074 () Bool)
(declare-fun x997 () Bool)
(declare-fun x988 () Bool)
(declare-fun x258 () Int)
(declare-fun x654 () Int)
(declare-fun x413 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1221 () Int)
(declare-fun x1198 () Int)
(declare-fun x423 () Int)
(declare-fun x1686 () Int)
(declare-fun x1022 () Int)
(declare-fun x616 () Int)
(declare-fun x433 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x580 () Int)
(declare-fun x1058 () Int)
(declare-fun x568 () Bool)
(declare-fun x273 (Int Int) Int)
(declare-fun x700 () Int)
(declare-fun x495 () Int)
(declare-fun x1362 () Int)
(declare-fun x366 () Int)
(declare-fun x1322 () Bool)
(declare-fun x853 () Int)
(declare-fun x606 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x649 () Int)
(declare-fun x133 () Int)
(declare-fun x1275 () Int)
(declare-fun x755 () Bool)
(declare-fun x953 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1288 () Int)
(declare-fun x154 () Int)
(declare-fun x1341 () Int)
(declare-fun x1200 () Int)
(declare-fun x1806 () Int)
(declare-fun x757 () Int)
(declare-fun x1629 () Int)
(declare-fun x747 () Int)
(declare-fun x1800 () Int)
(declare-fun x651 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1718 () Int)
(declare-fun x1667 () Int)
(declare-fun x1798 () Int)
(declare-fun x50 () Int)
(declare-fun x1734 () Bool)
(declare-fun x291 () Int)
(declare-fun x394 () Int)
(declare-fun x1202 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x740 () Int)
(declare-fun x1527 () Int)
(declare-fun x226 () Int)
(declare-fun x514 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1641 () Int)
(declare-fun x52 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x288 () Int)
(declare-fun x1520 () Int)
(declare-fun x1363 () Int)
(declare-fun x1551 () Int)
(declare-fun x459 () Bool)
(declare-fun x311 () Int)
(declare-fun x197 () Int)
(declare-fun x921 () Bool)
(declare-fun x742 () Int)
(declare-fun x1744 () Int)
(declare-fun x1276 () Int)
(declare-fun x994 () Int)
(declare-fun x314 () Int)
(declare-fun x276 () Int)
(declare-fun x512 () Int)
(declare-fun x29 () Int)
(declare-fun x1490 () Int)
(declare-fun x184 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1216 () Int)
(declare-fun x563 () Int)
(declare-fun x363 () Int)
(declare-fun x1219 () Int)
(declare-fun x1054 () Int)
(declare-fun x572 () Int)
(declare-fun x799 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x981 () Int)
(declare-fun x39 () Bool)
(declare-fun x675 () Int)
(declare-fun x382 () Int)
(declare-fun x1679 () Int)
(declare-fun x217 () Int)
(declare-fun x1468 () Int)
(declare-fun x1700 () Int)
(declare-fun x710 () Bool)
(declare-fun x1568 () Int)
(declare-fun x891 () Int)
(declare-fun x1159 () Int)
(declare-fun x1760 () Int)
(declare-fun x1470 () Int)
(declare-fun x372 () Int)
(declare-fun x130 () Int)
(declare-fun x719 () Int)
(declare-fun x259 () Int)
(declare-fun x297 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1319 () Int)
(declare-fun x292 () Int)
(declare-fun x1598 () Bool)
(declare-fun x347 () Int)
(declare-fun x673 () Int)
(declare-fun x1685 () Bool)
(declare-fun x869 () Int)
(declare-fun x460 () Int)
(declare-fun x723 () Int)
(declare-fun x815 () Bool)
(declare-fun x959 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x507 () Int)
(declare-fun x1323 () Int)
(declare-fun x778 () Int)
(declare-fun x1489 () Bool)
(declare-fun x639 () Int)
(declare-fun x1172 () Int)
(declare-fun x870 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1710 () Int)
(declare-fun x518 () Int)
(declare-fun x1014 () Int)
(declare-fun x993 () Bool)
(declare-fun x690 () Int)
(declare-fun x1746 () Int)
(declare-fun x1541 () Int)
(declare-fun x543 () Int)
(declare-fun x1628 () Int)
(declare-fun x450 () Int)
(declare-fun x811 () Int)
(declare-fun x1418 () Int)
(declare-fun x550 () Bool)
(declare-fun x910 () Int)
(declare-fun x1314 () Int)
(declare-fun x356 () Int)
(declare-fun x301 () Int)
(declare-fun x1561 () Int)
(declare-fun x1724 (Int) Int)
(declare-fun x732 () Int)
(declare-fun x1407 () Int)
(declare-fun x1097 () Int)
(declare-fun x1077 () Int)
(declare-fun x454 () Bool)
(declare-fun x262 () Int)
(declare-fun x323 () Int)
(declare-fun x1186 () Bool)
(declare-fun x449 () Int)
(declare-fun x1577 () Int)
(declare-fun x127 () Bool)
(declare-fun x234 () Bool)
(declare-fun x990 () Int)
(declare-fun x840 () Int)
(declare-fun x1711 () Int)
(declare-fun x64 () Int)
(declare-fun x1016 () Int)
(declare-fun x965 () Int)
(declare-fun x868 () Bool)
(declare-fun x1455 () Int)
(declare-fun x612 () Bool)
(declare-fun x144 () Int)
(declare-fun x1263 () Bool)
(declare-fun x857 () Int)
(declare-fun x1374 () Int)
(declare-fun x613 () Int)
(declare-fun x1555 () Int)
(declare-fun x1653 () Int)
(declare-fun x124 () Bool)
(declare-fun x720 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1597 () Bool)
(declare-fun x1688 () Int)
(declare-fun x1602 () Int)
(declare-fun x343 () Int)
(declare-fun x1036 () Int)
(declare-fun x1025 () Int)
(declare-fun x478 () Int)
(declare-fun x1754 () Int)
(declare-fun x1729 () Int)
(declare-fun x432 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x1308 () Bool)
(declare-fun x610 () Int)
(declare-fun x1696 () Int)
(declare-fun x1622 () Int)
(declare-fun x715 () Int)
(declare-fun x346 () Int)
(declare-fun x224 () Int)
(declare-fun x1187 () Int)
(declare-fun x781 () Bool)
(declare-fun x1395 () Int)
(declare-fun x364 () Int)
(declare-fun x1044 () Int)
(declare-fun x445 () Int)
(declare-fun x198 () Bool)
(declare-fun x783 () Int)
(declare-fun x562 () Int)
(declare-fun x1270 () Int)
(declare-fun x451 () Int)
(declare-fun x1406 () Int)
(declare-fun x920 (Int Int Int Int Int) Int)
(declare-fun x932 () Int)
(declare-fun x935 () Int)
(declare-fun x1213 () Int)
(declare-fun x832 () Int)
(declare-fun x544 () Int)
(declare-fun x1247 () Int)
(declare-fun x663 () Int)
(declare-fun x1452 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x18 () Int)
(declare-fun x415 () Int)
(declare-fun x1094 () Int)
(declare-fun x137 () Int)
(declare-fun x336 () Bool)
(declare-fun x246 () Int)
(declare-fun x591 () Int)
(declare-fun x87 () Int)
(declare-fun x1463 () Int)
(declare-fun x583 () Int)
(declare-fun x899 () Int)
(declare-fun x1268 () Int)
(declare-fun x141 () Bool)
(declare-fun x56 () Int)
(declare-fun x1164 () Int)
(define-fun x938 ((x425 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x425) (>= x425 0)) x425 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x321 ((x425 Int)) Int (ite (and (< x425 0) (>= x425 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) x425))
(define-fun x694 ((x425 Int)) Int (ite (and (>= x425 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x425)) x425 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x425) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x425)) (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x425 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x425 0)) (+ x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x273 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x375 ((x527 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) (<= 0 x527)))
(define-fun x1321 ((x527 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) (>= x527 0)))
(define-fun x551 ((x527 Int)) Bool (and (= x527 (x1095 x527 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1095 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527) x527)))
(define-fun x1224 ((x527 Int)) Bool (and (= 0 (x1095 0 x527)) (= 0 (x1095 x527 0))))
(define-fun x465 ((x527 Int)) Bool (= x527 (x1095 x527 x527)))
(define-fun x759 ((x527 Int)) Bool (and (x1224 x527) (x465 x527) (x551 x527)))
(define-fun x1453 ((x527 Int) (x1583 Int)) Bool (= (x1095 x527 x1583) (x1095 x1583 x527)))
(define-fun x895 ((x527 Int) (x1583 Int)) Bool (and (<= 0 (x1095 x527 x1583)) (=> (<= 0 x527) (<= (x1095 x527 x1583) x527)) (=> (<= 0 x1583) (>= x1583 (x1095 x527 x1583)))))
(define-fun x121 ((x527 Int) (x1583 Int)) Bool (and (x1453 x527 x1583) (x895 x527 x1583)))
(define-fun x403 ((x527 Int)) Bool (= (x694 x527) (+ (x1095 x527 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x273 x527 32))))
(define-fun x794 ((x527 Int)) Bool (and (x121 x527 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x403 x527)))
(define-fun x1279 ((x527 Int) (x1583 Int)) Bool (and (<= 0 (x273 x527 x1583)) (> x1583 (x273 x527 x1583))))
(define-fun x155 ((x527 Int) (x1583 Int)) Bool (=> (and (>= x527 0) (> x1583 0)) (= (= x527 (x273 x527 x1583)) (< x527 x1583))))
(define-fun x1267 ((x527 Int) (x1583 Int)) Bool (=> (and (and (<= x1583 x527) (> (+ x1583 x1583) x527)) (> x1583 0)) (= (- x527 x1583) (x273 x527 x1583))))
(define-fun x91 ((x527 Int) (x1583 Int)) Bool (=> (< 0 x1583) (= x527 (+ (x273 x527 x1583) (* (x1206 x527 x1583) x1583)))))
(define-fun x387 ((x527 Int) (x1583 Int)) Bool (and (x1267 x527 x1583) (x155 x527 x1583) (x91 x527 x1583) (x1279 x527 x1583)))
(define-fun x863 ((x527 Int)) Bool (= (x273 0 x527) 0))
(define-fun x628 ((x527 Int)) Bool (= (x273 x527 1) 0))
(define-fun x933 ((x527 Int)) Bool (= 0 (x273 x527 x527)))
(define-fun x1651 ((x527 Int)) Bool (and (x933 x527) (x863 x527) (x628 x527)))
(define-fun x223 ((x527 Int) (x1583 Int)) Bool (= (x370 x527 x1583) (* x1583 x527)))
(define-fun x558 ((x527 Int) (x1583 Int)) Bool (and (= (* (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936) x527) (x370 x527 (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1583) (- (* x527 x1583) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1583))) (= (- (* (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936) x527) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x232 ((x527 Int) (x1583 Int)) Bool (=> (and (> x1583 0) (< 0 x527)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x370 x527 x1583)) (= (x1206 (x694 (x370 x527 x1583)) x527) x1583))))
(define-fun x81 ((x527 Int) (x1583 Int)) Bool (=> (and (not (= 0 x1583)) (not (= 0 x527))) (and (= x527 (x1206 (x370 x527 x1583) x1583)) (= (x1206 (x370 x527 x1583) x527) x1583))))
(define-fun x1548 ((x527 Int) (x1583 Int)) Bool (=> (and (< 0 x1583) (< 0 x527)) (= (< (x1206 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527) x1583) (> (x370 x527 x1583) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x936 ((x527 Int) (x1583 Int)) Bool (and (= (x694 (x370 x527 (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x694 (x370 x527 x1583))) (= (x694 (x370 x527 x1583)) (x694 (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x694 (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1583)) (x694 (x370 x527 x1583)))))
(define-fun x1565 ((x527 Int) (x1583 Int)) Bool (and (=> (and (and (<= x1583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1583 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x527) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1583)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) (x1206 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1583)))) (=> (and (and (> x527 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1583) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1583))) (= (<= (x370 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1206 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1583)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527)))) (=> (and (and (< 0 x527) (<= x527 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1583) (<= x1583 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x370 x527 (- x1583 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1583) (x1206 57896044618658097711785492504343953926634992332820282019728792003956564819968 x527)))) (=> (and (and (< 0 x1583) (<= x1583 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x527) (<= x527 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1206 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1583) x527) (<= (x370 x527 x1583) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(define-fun x1660 ((x527 Int) (x1583 Int)) Bool (and (x1565 x527 x1583) (x81 x527 x1583) (x936 x527 x1583) (x558 x527 x1583) (x232 x527 x1583) (x1548 x527 x1583) (x223 x527 x1583)))
(define-fun x1331 ((x527 Int)) Bool (and (= (x370 x527 0) 0) (= 0 (x370 0 x527))))
(define-fun x371 ((x527 Int)) Bool (and (= x527 (x370 1 x527)) (= (x370 x527 1) x527)))
(define-fun x713 ((x527 Int)) Bool (and (x371 x527) (x1331 x527)))
(define-fun x1009 ((x527 Int)) Bool (= (x273 x527 1461501637330902918203684832716283019655932542976) (x1095 x527 1461501637330902918203684832716283019655932542975)))
(define-fun x1338 ((x527 Int)) Bool (and (x121 x527 1461501637330902918203684832716283019655932542975) (x1009 x527)))
(define-fun x117 ((x527 Int)) Bool (= (x273 x527 1099511627776) (x1095 x527 1099511627775)))
(define-fun x1301 ((x527 Int)) Bool (and (x117 x527) (x121 x527 1099511627775)))
(define-fun x1372 ((x708 Int)) Int (ite (> x1669 x708) (x855 x708) 0))
(define-fun x762 ((x708 Int)) Int 0)
(define-fun x1050 ((x708 Int)) Int 0)
(define-fun x350 ((x708 Int)) Int 0)
(define-fun x894 ((x708 Int)) Int 0)
(define-fun x810 ((x708 Int)) Int 0)
(define-fun x1145 ((x708 Int)) Int 0)
(define-fun x1458 ((x708 Int)) Int 0)
(define-fun x326 ((x708 Int)) Int 0)
(define-fun x576 ((x708 Int)) Int 0)
(define-fun x796 ((x708 Int)) Int 0)
(define-fun x1065 ((x708 Int)) Int 0)
(define-fun x489 ((x708 Int)) Int 0)
(define-fun x42 ((x708 Int)) Int (ite (= 704 x708) x881 (x810 x708)))
(define-fun x1720 ((x708 Int)) Int (ite (= x708 736) x344 (x42 x708)))
(define-fun x1475 ((x708 Int)) Int (ite (= x708 768) x548 (x1720 x708)))
(define-fun x1646 ((x708 Int)) Int (ite (= x708 800) x452 (x1475 x708)))
(define-fun x1755 ((x708 Int)) Int (ite (= x708 832) x1293 (x1646 x708)))
(define-fun x357 ((x708 Int)) Int (ite (= x708 864) x1002 (x1755 x708)))
(define-fun x195 ((x708 Int)) Int (ite (= 896 x708) x907 (x357 x708)))
(define-fun x944 ((x708 Int)) Int (ite (= 928 x708) x1228 (x195 x708)))
(define-fun x337 ((x708 Int)) Int (ite (= x708 960) x1435 (x944 x708)))
(define-fun x1531 ((x708 Int)) Int 0)
(define-fun x1799 ((x708 Int)) Int (ite (= 256 x708) x823 (x762 x708)))
(define-fun x1778 ((x708 Int)) Int (ite (= 288 x708) x1374 (x1799 x708)))
(define-fun x462 ((x708 Int)) Int 0)
(define-fun x1287 ((x708 Int)) Int (ite (= x708 704) x1508 (x1145 x708)))
(define-fun x1325 ((x708 Int)) Int (ite (= 736 x708) x1607 (x1287 x708)))
(define-fun x1042 ((x708 Int)) Int (ite (= x708 768) x1257 (x1325 x708)))
(define-fun x557 ((x708 Int)) Int (ite (= 800 x708) x48 (x1042 x708)))
(define-fun x768 ((x708 Int)) Int (ite (= x708 832) x1544 (x557 x708)))
(define-fun x614 ((x708 Int)) Int (ite (= 864 x708) x1296 (x768 x708)))
(define-fun x780 ((x708 Int)) Int (ite (= 896 x708) x434 (x614 x708)))
(define-fun x477 ((x708 Int)) Int (ite (= x708 928) x122 (x780 x708)))
(define-fun x1122 ((x708 Int)) Int (ite (= 960 x708) x382 (x477 x708)))
(define-fun x1354 ((x708 Int)) Int 0)
(define-fun x404 ((x708 Int)) Int (ite (= x708 704) x782 (x1458 x708)))
(define-fun x310 ((x708 Int)) Int (ite (= x708 736) x1683 (x404 x708)))
(define-fun x1180 ((x708 Int)) Int (ite (= 768 x708) x849 (x310 x708)))
(define-fun x1748 ((x708 Int)) Int (ite (= x708 800) x1319 (x1180 x708)))
(define-fun x795 ((x708 Int)) Int (ite (= 832 x708) x1792 (x1748 x708)))
(define-fun x1787 ((x708 Int)) Int (ite (= 864 x708) x1346 (x795 x708)))
(define-fun x1752 ((x708 Int)) Int (ite (= 896 x708) x690 (x1787 x708)))
(define-fun x328 ((x708 Int)) Int (ite (= 928 x708) x1208 (x1752 x708)))
(define-fun x974 ((x708 Int)) Int (ite (= x708 960) x1397 (x328 x708)))
(define-fun x1190 ((x708 Int)) Int 0)
(define-fun x385 ((x708 Int)) Int (ite (= x708 704) x131 (x326 x708)))
(define-fun x1750 ((x708 Int)) Int (ite (= x708 736) x591 (x385 x708)))
(define-fun x1698 ((x708 Int)) Int (ite (= x708 768) x1040 (x1750 x708)))
(define-fun x1693 ((x708 Int)) Int (ite (= 800 x708) x867 (x1698 x708)))
(define-fun x669 ((x708 Int)) Int (ite (= 832 x708) x991 (x1693 x708)))
(define-fun x1072 ((x708 Int)) Int (ite (= 864 x708) x200 (x669 x708)))
(define-fun x1381 ((x708 Int)) Int (ite (= 896 x708) x981 (x1072 x708)))
(define-fun x1266 ((x708 Int)) Int (ite (= 928 x708) x861 (x1381 x708)))
(define-fun x487 ((x708 Int)) Int (ite (= 960 x708) x654 (x1266 x708)))
(define-fun x1199 ((x708 Int)) Int 0)
(define-fun x1043 ((x708 Int)) Int (ite (= 256 x708) x13 (x1050 x708)))
(define-fun x244 ((x708 Int)) Int (ite (= x708 288) x1568 (x1043 x708)))
(define-fun x332 ((x708 Int)) Int (ite (< x708 x504) (x286 x708) 0))
(define-fun x1445 ((x708 Int)) Int (ite (and (> x504 x708) (<= 0 x708)) (x1724 x708) (x332 x708)))
(define-fun x362 ((x708 Int)) Int (ite (= x708 x1396) x595 (x681 x708)))
(define-fun x767 ((x708 Int)) Int (ite (= x708 128) x1343 (x894 x708)))
(define-fun x419 ((x708 Int)) Int (ite (and (>= x708 160) (> (+ 160 x1343) x708)) (x1445 (- (+ x161 x708) 160)) (x767 x708)))
(define-fun x914 ((x708 Int)) Int (ite (= x689 x708) 0 (x419 x708)))
(define-fun x1529 ((x708 Int)) Int (ite (= x708 x1021) x16 (x914 x708)))
(define-fun x686 ((x708 Int)) Int (ite (and (> (+ x1298 x539) x708) (<= x539 x708)) (x1445 (- (+ x504 x708) x539)) (x1529 x708)))
(define-fun x1161 ((x708 Int)) Int 0)
(define-fun x503 ((x708 Int)) Int (ite (= x1450 x708) x53 (x1625 x708)))
(define-fun x1707 ((x708 Int)) Int (ite x454 (x1625 x708) (x503 x708)))
(define-fun x374 ((x708 Int)) Int (ite (= x427 x708) x869 (x1142 x708)))
(define-fun x1201 ((x708 Int)) Int (ite x454 (x374 x708) (x1142 x708)))
(define-fun x6 ((x708 Int)) Int (ite (= x708 704) x38 (x796 x708)))
(define-fun x1662 ((x708 Int)) Int (ite (= 736 x708) x1138 (x6 x708)))
(define-fun x820 ((x708 Int)) Int (ite (= x708 768) x424 (x1662 x708)))
(define-fun x1672 ((x708 Int)) Int (ite (= 800 x708) x1359 (x820 x708)))
(define-fun x1377 ((x708 Int)) Int (ite (= 832 x708) x1546 (x1672 x708)))
(define-fun x1532 ((x708 Int)) Int (ite (= x708 864) x749 (x1377 x708)))
(define-fun x342 ((x708 Int)) Int (ite (= x708 896) x1581 (x1532 x708)))
(define-fun x1165 ((x708 Int)) Int (ite (= x708 928) x422 (x342 x708)))
(define-fun x1061 ((x708 Int)) Int (ite (= 960 x708) x1624 (x1165 x708)))
(define-fun x1675 ((x708 Int)) Int 0)
(define-fun x904 ((x708 Int)) Int (ite (= 704 x708) x730 (x1065 x708)))
(define-fun x1099 ((x708 Int)) Int (ite (= x708 736) x1664 (x904 x708)))
(define-fun x627 ((x708 Int)) Int (ite (= 768 x708) x1235 (x1099 x708)))
(define-fun x982 ((x708 Int)) Int (ite (= 800 x708) x1521 (x627 x708)))
(define-fun x1112 ((x708 Int)) Int (ite (= x708 832) x1798 (x982 x708)))
(define-fun x1339 ((x708 Int)) Int (ite (= 864 x708) x1177 (x1112 x708)))
(define-fun x1703 ((x708 Int)) Int (ite (= x708 896) x1188 (x1339 x708)))
(define-fun x303 ((x708 Int)) Int (ite (= x708 928) x259 (x1703 x708)))
(define-fun x1438 ((x708 Int)) Int (ite (= x708 960) x712 (x303 x708)))
(define-fun x1111 ((x708 Int)) Int 0)
(define-fun x68 ((x708 Int)) Int (ite (= x708 256) x659 (x350 x708)))
(define-fun x1232 ((x708 Int)) Int (ite (= x708 288) x1485 (x68 x708)))
(define-fun x1017 ((x708 Int)) Int (ite x493 (x1529 x708) (x686 x708)))
(define-fun x830 ((x708 Int)) Int (ite (= x708 x705) 57 (x1017 x708)))
(define-fun x279 ((x708 Int)) Int (ite (= x1215 x708) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x830 x708)))
(define-fun x265 ((x708 Int)) Int (ite (= x384 x708) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x279 x708)))
(define-fun x138 ((x708 Int)) Int (ite (= x1620 x708) x1220 (x265 x708)))
(define-fun x54 ((x708 Int)) Int (ite x1252 (x138 x708) (ite x242 (x265 x708) (x174 x708))))
(define-fun x913 ((x708 Int)) Int (ite (= x708 x832) 0 (x54 x708)))
(define-fun x148 ((x708 Int)) Int (ite (= x708 x882) x207 (x913 x708)))
(define-fun x567 ((x708 Int)) Int (ite (= x708 x1152) x640 (x148 x708)))
(define-fun x59 ((x708 Int)) Int (ite (= x708 x601) x298 (x567 x708)))
(define-fun x564 ((x708 Int)) Int (ite (= x708 x636) x1031 (x59 x708)))
(define-fun x1456 ((x708 Int)) Int (ite (= x708 x832) x156 (x564 x708)))
(define-fun x1715 ((x708 Int)) Int (ite (= x877 x708) x490 (x1456 x708)))
(define-fun x1091 ((x708 Int)) Int (ite x1515 (x1017 x708) (x1715 x708)))
(define-fun x902 ((x708 Int)) Int (ite (= x708 x49) 57 (x1091 x708)))
(define-fun x1379 ((x708 Int)) Int (ite (= x708 x280) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x902 x708)))
(define-fun x1404 ((x708 Int)) Int (ite (= x708 x1393) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1379 x708)))
(define-fun x1047 ((x708 Int)) Int (ite (= x708 x871) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x1404 x708)))
(define-fun x1148 ((x708 Int)) Int (ite (= x1223 x708) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x1047 x708)))
(define-fun x1727 ((x708 Int)) Int (ite (= x175 x708) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x1148 x708)))
(define-fun x846 ((x708 Int)) Int (ite (= x708 x1455) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x1727 x708)))
(define-fun x1131 ((x708 Int)) Int (ite (= x202 x708) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x846 x708)))
(define-fun x177 ((x708 Int)) Int (ite (= x708 x72) x1075 (x1131 x708)))
(define-fun x985 ((x708 Int)) Int (ite (= x1335 x708) x1702 (x177 x708)))
(define-fun x73 ((x708 Int)) Int (ite (= x563 x708) x812 (x985 x708)))
(define-fun x132 ((x708 Int)) Int (ite (= x218 x708) x1357 (x73 x708)))
(define-fun x647 ((x708 Int)) Int (ite x336 (x73 x708) (ite x499 (x985 x708) (ite x96 (x177 x708) (ite x1225 (x1131 x708) (x132 x708))))))
(define-fun x1364 ((x708 Int)) Int (ite (= x1327 x708) 0 (x647 x708)))
(define-fun x1127 ((x708 Int)) Int (ite (= x1382 x708) x1431 (x1364 x708)))
(define-fun x1037 ((x708 Int)) Int (ite (= x708 x1713) x1380 (x1127 x708)))
(define-fun x1019 ((x708 Int)) Int (ite (= x1744 x708) x1358 (x1037 x708)))
(define-fun x1590 ((x708 Int)) Int (ite (= x1747 x708) x1136 (x1019 x708)))
(define-fun x1365 ((x708 Int)) Int (ite (= x361 x708) x1392 (x1590 x708)))
(define-fun x561 ((x708 Int)) Int (ite x734 (x1590 x708) (ite x921 (x1019 x708) (ite x1351 (x1037 x708) (ite x988 (x1127 x708) (x1365 x708))))))
(define-fun x1759 ((x708 Int)) Int (ite (= x708 x1327) x391 (x561 x708)))
(define-fun x108 ((x708 Int)) Int (ite (= x870 x708) x1467 (x1759 x708)))
(define-fun x1785 ((x708 Int)) Int (ite (= x315 x708) x1416 (x108 x708)))
(define-fun x939 ((x708 Int)) Int (ite (= x29 x708) x1767 (x1785 x708)))
(define-fun x294 ((x708 Int)) Int (ite (= x708 x1561) x210 (x939 x708)))
(define-fun x1677 ((x708 Int)) Int (ite (= x708 x1569) x1604 (x294 x708)))
(define-fun x257 ((x708 Int)) Int (ite (= x1459 x708) x642 (x1677 x708)))
(define-fun x65 ((x708 Int)) Int (ite (= x708 x1211) x1108 (x257 x708)))
(define-fun x1584 ((x708 Int)) Int (ite (= x708 x1391) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x65 x708)))
(define-fun x776 ((x708 Int)) Int (ite (= x1234 x708) x1205 (x1584 x708)))
(define-fun x619 ((x708 Int)) Int (ite (= x708 x835) x1462 (x776 x708)))
(define-fun x961 ((x708 Int)) Int (ite (= x1661 x708) x1609 (x619 x708)))
(define-fun x330 ((x708 Int)) Int (ite (= x354 x708) x335 (x961 x708)))
(define-fun x1217 ((x708 Int)) Int (ite (= x1414 x708) x1684 (x330 x708)))
(define-fun x1086 ((x708 Int)) Int (ite x278 (x1217 x708) (x65 x708)))
(define-fun x1280 ((x708 Int)) Int (ite (= x708 x102) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x1086 x708)))
(define-fun x302 ((x708 Int)) Int (ite (= x708 x1643) x414 (x1280 x708)))
(define-fun x999 ((x708 Int)) Int (ite (= x115 x708) x245 (x302 x708)))
(define-fun x1246 ((x708 Int)) Int (ite (= x708 x102) 0 (x999 x708)))
(define-fun x688 ((x708 Int)) Int (ite (= x262 x708) x876 (x1246 x708)))
(define-fun x1143 ((x708 Int)) Int (ite (= x708 x1229) x1603 (x688 x708)))
(define-fun x1102 ((x708 Int)) Int (ite (= x1774 x708) x356 (x1143 x708)))
(define-fun x604 ((x708 Int)) Int (ite (= x1650 x708) x171 (x1102 x708)))
(define-fun x123 ((x708 Int)) Int (x1372 x708))
(define-fun x833 ((x708 Int)) Int (ite (= x1679 x708) x1216 (x604 x708)))
(define-fun x1717 ((x708 Int)) Int (ite x440 (x833 x708) (ite x1401 (x833 x708) (x999 x708))))
(define-fun x1260 ((x708 Int)) Int (ite (= x708 x353) 2 (x1717 x708)))
(define-fun x1483 ((x708 Int)) Int (ite (= x239 x708) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x1260 x708)))
(define-fun x1658 ((x708 Int)) Int (ite (= x708 x118) 2 (x1483 x708)))
(define-fun x1132 ((x708 Int)) Int (ite (= x708 x1591) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x1658 x708)))
(define-fun x971 ((x708 Int)) Int (ite (= x708 x1803) x1767 (x1132 x708)))
(define-fun x58 ((x708 Int)) Int (ite (= x708 x99) 9 (x971 x708)))
(define-fun x237 ((x708 Int)) Int (ite (= x708 x1486) x698 (x58 x708)))
(define-fun x676 ((x708 Int)) Int (ite (= x325 x708) x1609 (x237 x708)))
(define-fun x107 ((x708 Int)) Int (ite (= x708 x1198) x1422 (x676 x708)))
(define-fun x1064 ((x708 Int)) Int (ite (= x708 x92) x267 (x107 x708)))
(define-fun x1080 ((x708 Int)) Int (ite (= x708 x1030) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1064 x708)))
(define-fun x446 ((x708 Int)) Int (ite (= x1355 x708) x252 (x1080 x708)))
(define-fun x1176 ((x708 Int)) Int (ite (= x708 x1329) x432 (x446 x708)))
(define-fun x1348 ((x708 Int)) Int (ite (= x708 x1219) x15 (x1176 x708)))
(define-fun x831 ((x708 Int)) Int (ite (= x1408 x708) 128 (x1348 x708)))
(define-fun x1510 ((x708 Int)) Int (ite (= x708 x1360) x510 (x831 x708)))
(define-fun x358 ((x708 Int)) Int (ite (= x1256 x708) x1114 (x1510 x708)))
(define-fun x229 ((x708 Int)) Int (ite (= x708 x60) x515 (x358 x708)))
(define-fun x858 ((x708 Int)) Int (ite (= x556 x708) x1315 (x229 x708)))
(define-fun x748 ((x708 Int)) Int (ite (= x134 x708) x392 (x858 x708)))
(define-fun x1758 ((x708 Int)) Int (ite x388 (x858 x708) (ite x1429 (x229 x708) (ite x520 (x358 x708) (ite x51 (x1510 x708) (x748 x708))))))
(define-fun x1286 ((x708 Int)) Int (ite (= x1402 x708) 0 (x1758 x708)))
(define-fun x180 ((x708 Int)) Int (ite (and (>= x708 x1030) (< x708 (+ x1030 64))) (x699 (- x708 x1030)) (x1286 x708)))
(define-fun x211 ((x708 Int)) Int (ite x1489 (x180 x708) (x1286 x708)))
(define-fun x429 ((x708 Int)) Int (ite (and (<= x1030 x708) (> (+ x1030 64) x708)) (x699 (- x708 x1030)) (x211 x708)))
(define-fun x1481 ((x708 Int)) Int (ite (= x708 x19) 2 (x429 x708)))
(define-fun x886 ((x708 Int)) Int (ite (= x708 x369) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x1481 x708)))
(define-fun x309 ((x708 Int)) Int (ite (= x545 x708) 2 (x886 x708)))
(define-fun x1092 ((x708 Int)) Int (ite (= x1063 x708) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x309 x708)))
(define-fun x1388 ((x708 Int)) Int (ite (= x1490 x708) 2 (x1092 x708)))
(define-fun x1782 ((x708 Int)) Int (ite (= x708 x783) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x1388 x708)))
(define-fun x1447 ((x708 Int)) Int (ite (= x708 x1258) 2 (x1782 x708)))
(define-fun x365 ((x708 Int)) Int (ite (= x77 x708) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x1447 x708)))
(define-fun x1595 ((x708 Int)) Int (ite x612 (x1782 x708) (x365 x708)))
(define-fun x1303 ((x708 Int)) Int (ite (= x296 x708) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1595 x708)))
(define-fun x1193 ((x708 Int)) Int (ite (= x483 x708) x617 (x1303 x708)))
(define-fun x860 ((x708 Int)) Int (ite (= x708 x1678) x290 (x1193 x708)))
(define-fun x599 ((x708 Int)) Int (ite (= x1386 x708) x475 (x860 x708)))
(define-fun x1169 ((x708 Int)) Int (ite (= x708 x20) 128 (x599 x708)))
(define-fun x1526 ((x708 Int)) Int (ite (= x708 x622) x283 (x1169 x708)))
(define-fun x300 ((x708 Int)) Int (ite (and (< x708 (+ x283 x1736)) (>= x708 x1736)) (x1445 (- (+ x1540 x708) x1736)) (x1526 x708)))
(define-fun x1772 ((x708 Int)) Int (ite (= x1690 x708) 0 (x300 x708)))
(define-fun x1542 ((x708 Int)) Int (ite (and (>= x708 x296) (< x708 (+ x296 64))) (x26 (- x708 x296)) (x1772 x708)))
(define-fun x98 ((x708 Int)) Int (ite (= x708 x481) x954 (x943 x708)))
(define-fun x1469 ((x708 Int)) Int (ite (= x481 x708) x40 (x1444 x708)))
(define-fun x1756 ((x708 Int)) Int 0)
(define-fun x116 ((x708 Int)) Int (ite (= x708 704) x1442 (x576 x708)))
(define-fun x808 ((x708 Int)) Int (ite (= x708 736) x1245 (x116 x708)))
(define-fun x570 ((x708 Int)) Int (ite (= 768 x708) x747 (x808 x708)))
(define-fun x1081 ((x708 Int)) Int (ite (= 800 x708) x972 (x570 x708)))
(define-fun x839 ((x708 Int)) Int (ite (= 832 x708) x435 (x1081 x708)))
(define-fun x1008 ((x708 Int)) Int (ite (= x708 864) x125 (x839 x708)))
(define-fun x880 ((x708 Int)) Int (ite (= x708 896) x1628 (x1008 x708)))
(define-fun x739 ((x708 Int)) Int (ite (= 928 x708) x1794 (x880 x708)))
(define-fun x927 ((x708 Int)) Int (ite (= x708 960) x1757 (x739 x708)))
(define-fun x95 ((x708 Int)) Int (ite x956 (x1542 x708) (x1772 x708)))
(define-fun x101 ((x708 Int)) Int (ite (and (< x708 (+ 64 x296)) (<= x296 x708)) (x26 (- x708 x296)) (x95 x708)))
(define-fun x1616 ((x708 Int)) Int (ite (= x1324 x708) 2 (x101 x708)))
(define-fun x516 ((x708 Int)) Int (ite (= x1241 x708) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x1616 x708)))
(define-fun x1196 ((x708 Int)) Int (ite (= x922 x708) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x516 x708)))
(define-fun x1687 ((x708 Int)) Int (ite (= x708 x253) x1427 (x1196 x708)))
(define-fun x289 ((x708 Int)) Int (ite (= x708 x83) x1101 (x1687 x708)))
(define-fun x1106 ((x708 Int)) Int (ite (= x708 x1562) x1801 (x289 x708)))
(define-fun x84 ((x708 Int)) Int (ite (= x1375 x708) x290 (x1106 x708)))
(define-fun x287 ((x708 Int)) Int (ite (and (>= x708 x922) (> (+ x922 32) x708)) (x164 (- x708 x922)) (x84 x708)))
(define-fun x1230 ((x708 Int)) Int (ite x484 (x287 x708) (x84 x708)))
(define-fun x235 ((x708 Int)) Int (ite (and (< x708 (+ x922 32)) (<= x922 x708)) (x164 (- x708 x922)) (x1230 x708)))
(assert (=> (>= 10000 x931) (= (x1336 x931) 0)))
(assert (x375 x452))
(assert (= (x1336 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) (x633 x486 x1297 x885 x984 x521 x178 x324 x542)))
(assert (x375 x35))
(assert (x375 x1385))
(assert (not (x1045 (x618 64 x1389 4))))
(assert (x375 x1568))
(assert (x375 x1382))
(assert (x375 x1604))
(assert (= x615 (x837 (x618 x615 x624 x1399))))
(assert (x375 x1135))
(assert (x375 x1041))
(assert (=> (<= x881 10000) (= (x1336 x881) 0)))
(assert (x375 x945))
(assert (x375 x1391))
(assert (=> (>= 10000 x307) (= (x1336 x307) 0)))
(assert (< (x618 x444 x142 x322) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x693 (and (not x540) x443)))
(assert (x375 x128))
(assert (= (x1336 (+ 1 x626)) (x1336 x626)))
(assert (=> (>= 10000 x668) (= (x1336 x668) 0)))
(assert (x375 x663))
(assert (x375 x871))
(assert (not (x1045 (x682 x528 x469))))
(assert (< (x1454 x528 x389 x731 x1494 x1192 x1172) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1556))
(assert (=> (<= x1294 10000) (= 0 (x1336 x1294))))
(assert (x759 x506))
(assert (= x978 (x266 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919))))
(assert (= (x1730 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) x1028))
(assert (= x395 (x791 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (=> (>= 10000 x1028) (= 0 (x1336 x1028))))
(assert (= (x1336 (x618 64 x730 3)) (x618 64 x730 3)))
(assert (= (and x439 x651) x1373))
(assert (x375 x344))
(assert (= x415 (x27 (x920 x1082 x512 x1129 x1600 x415))))
(assert (= (and x312 x378) x80))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (= (x618 64 x1416 4) (x1336 (x618 64 x1416 4))))
(assert (= 64 (x837 (x618 64 x1442 3))))
(assert (> (x1454 x615 x1421 x950 x891 x1294 x998) 10000))
(assert (x375 x483))
(assert (x375 x1768))
(assert (x375 x1380))
(assert (x1338 x1728))
(assert (= (x1498 x528 x1160 x478 x379) (x1336 (x1498 x528 x1160 x478 x379))))
(assert (< (x920 x444 x1156 x931 x1184 x106) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x178 (x266 (x633 x486 x1297 x885 x984 x521 x178 x324 x542))))
(assert (= x1389 (x1642 (x618 64 x1389 4))))
(assert (x375 x798))
(assert (= x615 (x837 (x1498 x615 x1596 x530 x586))))
(assert (x375 x1668))
(assert (=> (>= 10000 x410) (= 0 (x1336 x410))))
(assert (x375 x1721))
(assert (< (x618 64 x730 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1688 10000) (= 0 (x1336 x1688))))
(assert (x375 x364))
(assert (< (x1107 x410 x111 x1791 x109 x89 x373 x1788) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x908))
(assert (= x917 (x1730 (x920 x1709 x845 x605 x917 x910))))
(assert (x375 x408))
(assert (not (x1045 (x682 x486 x937))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)))
(assert (x375 x1423))
(assert (= (x1336 x1572) (x1336 (+ x1572 1))))
(assert (= (x1642 (x920 x444 x1156 x931 x1184 x106)) x1156))
(assert (x375 x379))
(assert (x375 x1766))
(assert (x375 x1242))
(assert (x375 x29))
(assert (x375 x246))
(assert (x375 x536))
(assert (x375 x1673))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x1045 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (= (x837 (x682 x486 x937)) x486))
(assert (x375 x509))
(assert (= x785 (x27 (x1454 x444 x191 x1746 x732 x785 x740))))
(assert (x375 x304))
(assert (=> (<= x89 10000) (= (x1336 x89) 0)))
(assert (x375 x1448))
(assert (x375 x1637))
(assert (= (x1336 (x1454 x1018 x836 x1723 x1513 x1468 x915)) (x1454 x1018 x836 x1723 x1513 x1468 x915)))
(assert (= (x1336 x960) (x1336 (+ 1 x960))))
(assert (x375 x38))
(assert (x375 x1343))
(assert (x375 x652))
(assert (x375 x1674))
(assert (= x924 (or x693 x484)))
(assert (x375 x415))
(assert (= (x1642 (x618 64 x881 3)) x881))
(assert (= (and x1344 x135) x204))
(assert (= (x470 (x618 64 x38 3)) 3))
(assert (x375 x947))
(assert (x375 x1361))
(assert (< (x1107 x615 x596 x464 x951 x151 x1104 x50) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1609))
(assert (=> (>= 10000 x1024) (= (x1336 x1024) 0)))
(assert (not (x1045 (x618 64 x1442 3))))
(assert (= (x1642 (x682 x528 x469)) x469))
(assert (x375 x771))
(assert (= (x1336 (x920 x410 x1653 x152 x329 x1495)) (x920 x410 x1653 x152 x329 x1495)))
(assert (x375 x1798))
(assert (=> (>= 10000 x1556) (= 0 (x1336 x1556))))
(assert (< 10000 (x1498 x1082 x1174 x672 x386)))
(assert (=> (<= x696 10000) (= 0 (x1336 x696))))
(assert (= (x1642 (x618 x1018 x1742 x1387)) x1742))
(assert (x375 x305))
(assert (x375 x507))
(assert (x1045 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (=> (>= 10000 x596) (= (x1336 x596) 0)))
(assert (< 10000 (x920 x410 x1653 x152 x329 x1495)))
(assert (x375 x750))
(assert (> (x618 x444 x142 x322) 10000))
(assert (x375 x1774))
(assert (x375 x543))
(assert (x375 x1108))
(assert (x375 x1152))
(assert (=> (<= x1791 10000) (= 0 (x1336 x1791))))
(assert (= (x1336 (x920 x615 x97 x1024 x1191 x304)) (x920 x615 x97 x1024 x1191 x304)))
(assert (= x1082 (x837 (x920 x1082 x512 x1129 x1600 x415))))
(assert (= (x266 (x1454 x1082 x1556 x1671 x1226 x241 x1073)) x1073))
(assert (x375 x1603))
(assert (x375 x1191))
(assert (x375 x572))
(assert (= (x1336 (x682 x410 x736)) (x682 x410 x736)))
(assert (x375 x1689))
(assert (x375 x366))
(assert (x375 x972))
(assert (x375 x1302))
(assert (< 10000 (x618 64 x38 3)))
(assert (= (x266 (x1107 x486 x1178 x311 x1361 x751 x333 x890)) x333))
(assert (x375 x1582))
(assert (= 0 (x1336 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x375 x325))
(assert (=> (<= x533 10000) (= (x1336 x533) 0)))
(assert (< 10000 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)))
(assert (> (x618 x1709 x319 x875) 10000))
(assert (= x1421 (x1642 (x1454 x615 x1421 x950 x891 x1294 x998))))
(assert (> (x1498 x444 x1410 x323 x790) 10000))
(assert (x375 x318))
(assert (x375 x1536))
(assert (x375 x1297))
(assert (= (x1642 (x1498 x486 x1265 x1025 x187)) x1265))
(assert (= (x1336 (x1454 x615 x1421 x950 x891 x1294 x998)) (x1454 x615 x1421 x950 x891 x1294 x998)))
(assert (x375 x1369))
(assert (=> (>= 10000 x109) (= 0 (x1336 x109))))
(assert (x375 x423))
(assert (x375 x37))
(assert (x375 x563))
(assert (= (x1730 (x1454 x410 x1333 x1237 x1731 x887 x696)) x1731))
(assert (= x1024 (x470 (x920 x615 x97 x1024 x1191 x304))))
(assert (= x226 (x1642 (x618 64 x226 4))))
(assert (x1045 4067465820))
(assert (x375 x455))
(assert (= (x1336 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)) (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)))
(assert (x375 x1245))
(assert (= (=> (and (and (= x348 (+ x1761 1)) (= (x707 x348) x1757) (= (x898 x1353) x972) (= false x183) (= x909 x1442) (= x1673 x1493) (= (x927 832) x352) (<= x1628 340282366920938463463374607431768211455) (= x926 911662625) (= x747 (x1153 x1353)) (= x1594 (+ 1 x1353)) (= (x1707 x1353) x125) (= (x927 928) x611) (= x1116 false) (= (x1317 x1353) x435) (= (x927 960) x1541) (= false x774) (>= 127 x93) (= (x927 768) x1275) (= (x927 800) x1409) (= (x1464 x1761) x1794) (= 0 x579) (= x1541 x1701) (= (ite (not (= (ite (not (= x1623 0)) 1 0) 0)) 1 0) x1245) (= x1577 (x46 x335)) (= x1353 (+ 1 x1470)) (= x1334 x594) (= (+ x1594 1) x1761) (<= x435 1099511627775) (= (x1201 x1594) x1628) (= x1470 (x618 64 x1442 3)) (= x901 false) (= x1511 x1275) (= (x927 704) x1673) (<= x747 1099511627775) (= (x927 864) x549) (= x1141 false) (<= 1 x1577) (= x234 (= x1506 0)) (= x611 x930) (= x792 false) (>= 340282366920938463463374607431768211455 x125) (= x549 x430) (<= x972 1099511627775) (= x179 x352) (= (x1300 x1353) x1623) (<= x93 127) (= x1506 x1409) (<= x1623 255) (= (not x234) x1780) (= (x927 896) x1334)) (and (= x958 36) (= x954 (ite (not (= 0 x377)) 1 0)) (= false x537) (= x909 x1182) (= false x770) (= x1543 x966) (= x1543 x1182))) (and (=> (and (not x1780) (and (= x1708 x1547) (= x1518 x1762) (= x1518 true))) x201) (=> x1780 x1093))) x597))
(assert (x375 x1653))
(assert (= (or x204 x817) x1525))
(assert (=> (<= x142 10000) (= (x1336 x142) 0)))
(assert (=> (<= x730 10000) (= (x1336 x730) 0)))
(assert (=> (<= x1555 10000) (= 0 (x1336 x1555))))
(assert (> (x1454 x410 x1333 x1237 x1731 x887 x696) 10000))
(assert (x375 x1742))
(assert (=> (<= x319 10000) (= 0 (x1336 x319))))
(assert (x1045 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (= x498 (and x285 x173)))
(assert (x375 x1198))
(assert (> (x633 x1018 x78 x1560 x702 x292 x560 x883 x533) 10000))
(assert (x375 x842))
(assert (= (x1336 (x920 x486 x449 x859 x130 x9)) (x920 x486 x449 x859 x130 x9)))
(assert (= x528 (x837 (x682 x528 x469))))
(assert (x375 x1004))
(assert (x375 x77))
(assert (=> (<= x203 10000) (= (x1336 x203) 0)))
(assert (x375 x1751))
(assert (= 0 (x1336 911662625)))
(assert (= x734 (and x80 (not x1570))))
(assert (x375 x1355))
(assert (= x1226 (x1730 (x1454 x1082 x1556 x1671 x1226 x241 x1073))))
(assert (= x725 (=> (and (or (and (not x540) (= x1299 x412)) (and (and (>= x1309 32) (= x1299 1) (>= 4294967295 x1309)) x540)) (and (= x1376 (x938 (+ x798 x899))) (= (x101 x1320) x1801) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x296) (>= 18446744073709551487 x296)) (= (x1445 x1041) x1427) (<= x296 18446744073709551550) (= (x1445 x899) x798) (= x729 (x938 (+ x1376 32))) (<= 1 x1801) (= x83 (x938 (+ x253 32))) (> x922 x1324) (>= 340282366920938463463374607431768211455 x1101) (= x517 (x101 x296)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x296) (> x1324 x94) (not (> x94 x1324)) (or (<= x798 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x798)) (<= x296 18446744073709551550) (<= x1309 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x296) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x296)) (= (+ 64 x1324) x922) (<= 32 x1309) (or (and (> x128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242)) (and (< x128 x1242) (= (<= x128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1242 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x938 (+ 4 x922)) x253) (or (>= 18446744073709551487 x296) (>= x296 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= (x938 (+ 32 x296)) x1320) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x798) (<= x1242 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x798 x1242)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x798) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242))) (<= 1 x7) (= x1562 (x938 (+ x83 32))) (= (< 0 x412) x540) (= x128 (x1445 x899)) (= x1041 (x938 (+ x128 x899))) (<= x1427 1461501637330902918203684832716283019655932542975) (= 1 x517) (= x1101 (x1445 x729)) (= (x938 (+ 32 x1562)) x1375) (= (x938 (+ 64 x296)) x94) (= x1241 (+ x1324 32)) (= x1324 (+ 64 x94)) (< x296 x94) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x128) (<= x128 57896044618658097711785492504343953926634992332820282019728792003956564819835)))) x755)))
(assert (x375 x1806))
(assert (x375 x130))
(assert (= 64 (x837 (x618 64 x1645 4))))
(assert (=> (>= 10000 x590) (= 0 (x1336 x590))))
(assert (= (and (not x270) x963) x1743))
(assert (< (x1454 x1018 x836 x1723 x1513 x1468 x915) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x867))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639805) 0))
(assert (= x378 (and x678 x463)))
(assert (= x89 (x27 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (x375 x351))
(assert (x375 x1777))
(assert (x759 1461501637330902918203684832716283019655932542975))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (x375 x1220))
(assert (x375 x757))
(assert (=> (>= 10000 x386) (= 0 (x1336 x386))))
(assert (x375 x1350))
(assert (x387 x625 32))
(assert (x375 x1576))
(assert (x375 x1618))
(assert (x375 x637))
(assert (x375 x615))
(assert (=> (>= 10000 x1192) (= (x1336 x1192) 0)))
(assert (=> (<= x355 10000) (= (x1336 x355) 0)))
(assert (x375 x166))
(assert (= (x837 (x934 0)) 0))
(assert (x375 x1683))
(assert (x375 x763))
(assert (x375 x210))
(assert (=> (>= 10000 x1082) (= (x1336 x1082) 0)))
(assert (x1045 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (x375 x1128))
(assert (< 10000 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)))
(assert (= (x837 (x1498 x486 x1265 x1025 x187)) x486))
(assert (= x1322 (or x1351 x988 x921 x734 x948)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (x375 x3))
(assert (=> (<= x322 10000) (= (x1336 x322) 0)))
(assert (=> (>= 10000 x1488) (= (x1336 x1488) 0)))
(assert (= (x837 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x1082))
(assert (x375 x111))
(assert (> (x920 x486 x449 x859 x130 x9) 10000))
(assert (=> (<= x1200 10000) (= (x1336 x1200) 0)))
(assert (x375 x591))
(assert (= x336 (and x1666 (not x206))))
(assert (=> (>= 10000 x998) (= (x1336 x998) 0)))
(assert (= x1166 (x791 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827))))
(assert (x375 x1001))
(assert (=> (<= x1797 10000) (= 0 (x1336 x1797))))
(assert (= (x1498 x1082 x1174 x672 x386) (x1336 (x1498 x1082 x1174 x672 x386))))
(assert (x375 x605))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (not (x1045 (x920 x528 x806 x165 x1688 x2))))
(assert (x375 x1367))
(assert (> (x618 64 x1442 3) 10000))
(assert (= (x470 (x618 64 x1389 4)) 4))
(assert (= (x1642 (x1454 x1709 x1306 x957 x1555 x1797 x453)) x1306))
(assert (=> (>= 10000 x1018) (= (x1336 x1018) 0)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (x375 x672))
(assert (= (x1498 x1709 x1369 x75 x1699) (x1336 (x1498 x1709 x1369 x75 x1699))))
(assert (x375 x744))
(assert (x375 x826))
(assert (x375 x756))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 x615 x624 x1399)))
(assert (x375 x19))
(assert (= x1791 (x470 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (=> (<= x806 10000) (= (x1336 x806) 0)))
(assert (x375 x1049))
(assert (x375 x1661))
(assert (=> (<= x151 10000) (= (x1336 x151) 0)))
(assert (=> (>= 10000 x323) (= (x1336 x323) 0)))
(assert (x375 x401))
(assert (= (x1336 (x618 x1709 x319 x875)) (x618 x1709 x319 x875)))
(assert (x375 x410))
(assert (x375 x438))
(assert (= (x1336 22700451088272681866486206289545017091351513107057952373946396474207578882048) 0))
(assert (x375 x449))
(assert (= (x1336 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)) (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)))
(assert (x375 x1305))
(assert (x375 x1115))
(assert (< (x618 64 x131 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1306 10000) (= (x1336 x1306) 0)))
(assert (x375 x1723))
(assert (= (x1336 (x618 64 x226 4)) (x618 64 x226 4)))
(assert (= (x837 (x1454 x615 x1421 x950 x891 x1294 x998)) x615))
(assert (= x1000 (x1642 (x682 x444 x1000))))
(assert (x375 x957))
(assert (= x1505 (and x255 x1261)))
(assert (x375 x57))
(assert (= (x1642 (x1454 x1082 x1556 x1671 x1226 x241 x1073)) x1556))
(assert (x375 x131))
(assert (x375 x420))
(assert (x375 x857))
(assert (= 0 (x1336 63076024560530113402979550242307453568063438748328787417531900361828837441551)))
(assert (x375 x250))
(assert (x375 x1235))
(assert (x375 x406))
(assert (x375 x283))
(assert (x375 x1291))
(assert (x375 x1121))
(assert (x375 x28))
(assert (x375 x1671))
(assert (= x533 (x752 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533))))
(assert (= 3 (x470 (x618 64 x1416 3))))
(assert (x375 x208))
(assert (= x674 (x470 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105))))
(assert (x375 x825))
(assert (=> (<= x1653 10000) (= (x1336 x1653) 0)))
(assert (= (x618 64 x1389 4) (x1336 (x618 64 x1389 4))))
(assert (x387 x506 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x623) (= (x1336 x623) 0)))
(assert (=> (>= 10000 x1156) (= (x1336 x1156) 0)))
(assert (=> (>= 10000 x890) (= (x1336 x890) 0)))
(assert (=> (<= x1411 10000) (= 0 (x1336 x1411))))
(assert (=> (<= x1389 10000) (= (x1336 x1389) 0)))
(assert (=> (<= x809 10000) (= (x1336 x809) 0)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x375 x1527))
(assert (= x598 (and (not x186) x720)))
(assert (= x1709 (x837 (x920 x1709 x845 x605 x917 x910))))
(assert (= x70 (and x838 x1281)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x682 x1709 x316)))
(assert (x375 x788))
(assert (x375 x203))
(assert (x375 x103))
(assert (x375 x1315))
(assert (x375 x1704))
(assert (= (x1454 x1709 x1306 x957 x1555 x1797 x453) (x1336 (x1454 x1709 x1306 x957 x1555 x1797 x453))))
(assert (x375 x1320))
(assert (x375 x1213))
(assert (=> (<= x292 10000) (= 0 (x1336 x292))))
(assert (= x433 (or x468 x284)))
(assert (x375 x973))
(assert (= (x470 (x920 x444 x1156 x931 x1184 x106)) x931))
(assert (x375 x1314))
(assert (x375 x434))
(assert (= (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119) (x1336 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119))))
(assert (x375 x1208))
(assert (x375 x653))
(assert (x375 x149))
(assert (x1045 18446744073709551615))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1454 x410 x1333 x1237 x1731 x887 x696)))
(assert (x713 x276))
(assert (x375 x1614))
(assert (=> (<= x75 10000) (= (x1336 x75) 0)))
(assert (x375 x367))
(assert (x375 x147))
(assert (=> (<= x395 10000) (= 0 (x1336 x395))))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639844)))
(assert (= (=> (and (= (>= 224 x486) x8) (= (x1127 x1382) x486) (< x1382 x1327) (<= x1382 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x802 (x938 (+ 32 x1382))) (<= 1 x1327) (= x1327 (x938 (+ x72 x916))) (= (x321 (- x363 32)) x1431) (<= x1382 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1382) (= (x321 (- x1327 x1382)) x363)) (and x8 (=> (and (= x79 (x1127 x630)) (= (x1127 x873) x1269) (= (ite (= 0 x486) x1719 (ite (<= x486 32) x673 (ite (>= 64 x486) x1771 (ite (<= x486 96) x1652 (ite (>= 128 x486) x14 (ite (>= 160 x486) x593 (ite (<= x486 192) x1078 (ite (<= x486 224) x67 x1680)))))))) x1467) (= (x1127 x167) x324) (= x1128 (x1127 x802)) (= (x938 (+ 96 x802)) x856) (= x1806 (x1127 x802)) (= (x1127 x149) x521) (= (x938 (+ x802 32)) x250) (= x167 (x938 (+ x802 160))) (= (x1127 x1378) x130) (= x14 (x920 x486 x449 x859 x130 x9)) (= (x1127 x1557) x1579) (= x1288 (x938 (+ x802 64))) (= x311 (x1127 x1622)) (= (x938 (+ 32 x802)) x406) (= x1652 (x1498 x486 x1265 x1025 x187)) (= x1012 (x938 (+ x802 160))) (= (x1127 x250) x878) (= (x1127 x1648) x187) (= x1622 (x938 (+ 32 x802))) (= (x1127 x802) x1178) (= x1361 (x1127 x1288)) (= x333 (x1127 x1574)) (= (x1127 x1021) x276) (= x630 (x938 (+ 64 x802))) (= x149 (x938 (+ x802 96))) (= (x938 (+ 128 x802)) x1330) (= x673 (x682 x486 x937)) (= (x1127 x856) x9) (= (x938 (+ 64 x802)) x1648) (= x178 (x1127 x1330)) (= (x938 (+ 32 x802)) x631) (= (x1127 x802) x1265) (= (x938 (+ x802 32)) x86) (= (x1127 x574) x542) (= x859 (x1127 x406)) (= x1078 (x1107 x486 x1178 x311 x1361 x751 x333 x890)) (= x1378 (x938 (+ x802 64))) (= (x934 0) x1719) (= (x618 x486 x1806 x1269) x1771) (= x778 (x938 (+ 96 x802))) (= (x938 (+ x802 128)) x1557) (= x578 (> x276 0)) (= x593 (x1454 x486 x1128 x878 x79 x120 x1579)) (= (x1127 x1012) x890) (= (x1127 x631) x1025) (= x1574 (x938 (+ x802 128))) (= x1745 (x938 (+ x802 64))) (= x965 (x938 (+ 96 x802))) (= x120 (x1127 x778)) (= x67 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) (= (x1127 x1745) x984) (= (x938 (+ x1327 32)) x1713) (= (x938 (+ x802 32)) x873) (= (x1127 x802) x937) (= (x1127 x802) x449) (= x1297 (x1127 x802)) (= x751 (x1127 x965)) (= x885 (x1127 x86)) (= (x938 (+ 192 x802)) x574) (= x1163 (+ x1021 32))) (and (=> (and (and (= x1211 x1713) (= x1163 x1627) (= 0 x1384)) (not x578)) x589) (=> (and x578 (and (= x678 (< 1 x276)) (= x1380 (x1127 x1163)) (= x1744 (x938 (+ x1713 32))) (= x964 (+ x1163 32)))) (and (=> (and (and (= x1627 x964) (= x1211 x1744) (= 1 x1384)) (not x678)) x589) (=> (and (and (= (x1037 x964) x1358) (= x1747 (x938 (+ x1744 32))) (= (< 2 x276) x312) (= x87 (+ x964 32))) x678) (and (=> (and x312 (and (= (< 3 x276) x1570) (= x1136 (x1019 x87)) (= x1500 (+ 32 x87)) (= (x938 (+ 32 x1747)) x361))) (and (=> (and (not x1570) (and (= x361 x1211) (= x1627 x1500) (= 3 x1384))) x589) (=> x1570 x269))) (=> (and (and (= x1627 x87) (= x1747 x1211) (= x1384 2)) (not x312)) x589))))))))) x741))
(assert (x375 x1229))
(assert (=> (>= 10000 x346) (= 0 (x1336 x346))))
(assert (x375 x382))
(assert (x375 x233))
(assert (= (x470 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)) x850))
(assert (< (x618 64 x782 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x380))
(assert (= (x470 (x1498 x615 x1596 x530 x586)) x530))
(assert (= x1082 (x837 (x1454 x1082 x1556 x1671 x1226 x241 x1073))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1454 x615 x1421 x950 x891 x1294 x998)))
(assert (x375 x263))
(assert (= (x1642 (x1498 x1709 x1369 x75 x1699)) x1369))
(assert (= (x1336 16777215) 0))
(assert (=> (>= 10000 x316) (= 0 (x1336 x316))))
(assert (= (=> (and (and (= x1221 (x46 x335)) (<= x737 127) (<= x737 127) (= (x337 832) x746) (>= x1221 1) (= x1014 x952) (= (x337 896) x1204) (>= 1099511627775 x452) (= (+ x524 1) x607) (= x1430 (x337 960)) (= x523 x987) (= x1117 (x337 768)) (<= x1244 255) (= 911662625 x769) (= x1293 (x1317 x524)) (= x459 false) (>= 340282366920938463463374607431768211455 x907) (= false x650) (>= 1099511627775 x548) (= x1254 (+ 1 x607)) (= x952 (x337 864)) (>= 1099511627775 x1293) (= x608 x990) (= x1147 x746) (= x1117 x900) (= x552 false) (= (x1464 x1254) x1228) (= (x1300 x524) x1244) (= (x337 704) x671) (= x344 (ite (not (= 0 (ite (not (= x1244 0)) 1 0))) 1 0)) (= x555 false) (= (x1153 x524) x548) (= x1125 false) (= x1435 (x707 x1449)) (= (not x660) x838) (= (x337 800) x990) (= x327 0) (>= 340282366920938463463374607431768211455 x1002) (= x1449 (+ 1 x1254)) (= x665 x1204) (= x660 (= x608 0)) (= x881 x1530) (= (x337 928) x987) (= x1097 x671) (= x313 x1430) (= x1170 (x618 64 x881 3)) (= (x1142 x607) x907) (= x1002 (x1625 x524)) (= (+ x1170 1) x524) (= x862 false) (= (x898 x524) x452)) (and (>= x335 1) (not (= x225 x335)) (>= 1461501637330902918203684832716283019655932542975 x335) (= (> (x46 x1441) 0) x1240) (not (= x225 x1302)) (>= x219 1) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x800 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x219 x1121)) (<= 1 x1441) (>= 1461501637330902918203684832716283019655932542975 x1441) (<= 356 x504) (<= x225 1461501637330902918203684832716283019655932542975) (<= 0 x966) (>= x192 0) (not (= x219 x1302)) (<= x341 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x544) (= false x1337) (= x1016 0) (>= 1461501637330902918203684832716283019655932542975 x1121) (= (< 0 (x46 x219)) x428) (not (= x1302 x1121)) x1804 (<= 0 x445) (= (< 0 (x46 x225)) x600) (= x667 x966) (>= 1461501637330902918203684832716283019655932542975 x10) x1311 (= x43 x667) (<= 1 x225) (>= x460 0) (= x1026 false) (not (= x1441 x219)) (<= 0 x1805) (<= 0 x1313) (>= 1461501637330902918203684832716283019655932542975 x1805) (not (= x225 x1121)) (= x1588 3686331914) x1612 (= x1804 (> (x46 x1121) 0)) (not (= x335 x1302)) (not (= x225 x1441)) (>= x723 0) (<= x723 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x10 0) (<= x460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1530 x43) (<= x966 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1441 x1121)) (= x334 7) (= x335 x1460) (>= x480 0) (<= 1 x1302) (not (= x219 x335)) (not (= x335 x1441)) (<= x1482 1461501637330902918203684832716283019655932542975) (= 36 x841) (>= x743 0) (not (= x1302 x1441)) (= x1612 (> (x46 x335) 0)) (<= x219 1461501637330902918203684832716283019655932542975) (not (= x1121 x335)) (>= 1461501637330902918203684832716283019655932542975 x252) (= x1311 (< 0 (x46 x1302))) (= false x638) x1240 (not (= x225 x219)) (<= x1395 4294967295) (<= 0 x1482) (<= x1302 1461501637330902918203684832716283019655932542975) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x504) (<= 0 x800) (>= x1395 0) (>= x1121 1) (>= 1461501637330902918203684832716283019655932542975 x1313) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x192) x428 (<= x480 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x743) (= x1264 false) x600)) (and (=> x838 x209) (=> (and (not x838) (and (= x1634 true) (= x426 x1634) (= x1626 x32))) x1685))) x706))
(assert (x387 x625 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1454 x1082 x1556 x1671 x1226 x241 x1073)))
(assert (= (x27 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) x1276))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x375 x1544))
(assert (=> (>= 10000 x1788) (= (x1336 x1788) 0)))
(assert (x375 x1237))
(assert (x1045 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (= (x1730 (x1498 66 x1582 x1406 x372)) x372))
(assert (= (x1454 x1082 x1556 x1671 x1226 x241 x1073) (x1336 (x1454 x1082 x1556 x1671 x1226 x241 x1073))))
(assert (x375 x1239))
(assert (not (x1045 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (x375 x1010))
(assert (=> (>= 10000 x1297) (= 0 (x1336 x1297))))
(assert (x375 x530))
(assert (x375 x793))
(assert (=> (<= x415 10000) (= 0 (x1336 x415))))
(assert (x375 x1329))
(assert (= (x470 (x920 x1018 x1115 x621 x1231 x742)) x621))
(assert (x375 x82))
(assert (= (x1336 (+ x1254 1)) (x1336 x1254)))
(assert (x375 x827))
(assert (x375 x361))
(assert (x375 x1620))
(assert (x375 x120))
(assert (x375 x106))
(assert (x375 x1284))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x226 4)))
(assert (< (x1107 x528 x409 x217 x359 x811 x299 x288) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x903))
(assert (x375 x49))
(assert (= (and x1644 x1608) x1252))
(assert (x375 x1402))
(assert (x375 x964))
(assert (x375 x595))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639868)))
(assert (x375 x1358))
(assert (x375 x1410))
(assert (= (=> (and (and (= x942 false) (>= 16777215 x823) (<= x1071 127) (= x154 x634) (= 4067465820 x1328) (>= x1514 1) (= x1085 (= 0 x479)) (= false x753) (= (x1778 256) x634) (= (x1778 288) x479) (= x993 x426) (>= 127 x1071) (= false x170) (= x76 (not x1085)) (= x413 false) (= (x618 64 x226 4) x626) (= x32 x76) (= (x46 x335) x1514) (= x823 (x701 x626)) (= false x1066) (= (+ 1 x626) x264) (= x226 x1437) (= (x648 x264) x1374) (= false x112)) (and (= x1437 x1366) (= 36 x1316) (= x1633 x1366) (= x1633 x966))) x1685) x209))
(assert (= x329 (x1730 (x920 x410 x1653 x152 x329 x1495))))
(assert (x375 x1696))
(assert (x375 x1333))
(assert (x375 x188))
(assert (= x717 (and x62 x1373)))
(assert (= (x1336 (x1498 x486 x1265 x1025 x187)) (x1498 x486 x1265 x1025 x187)))
(assert (< 10000 (x618 x1018 x1742 x1387)))
(assert (=> (<= x836 10000) (= 0 (x1336 x836))))
(assert (=> (<= x1670 10000) (= 0 (x1336 x1670))))
(assert (= (x1336 (x682 x486 x937)) (x682 x486 x937)))
(assert (=> (>= 10000 x732) (= 0 (x1336 x732))))
(assert (= (x1730 (x1498 x528 x1160 x478 x379)) x379))
(assert (x375 x690))
(assert (x375 x1340))
(assert (x375 x137))
(assert (= (x682 x1018 x438) (x1336 (x682 x1018 x438))))
(assert (=> (<= x1105 10000) (= (x1336 x1105) 0)))
(assert (= x453 (x266 (x1454 x1709 x1306 x957 x1555 x1797 x453))))
(assert (< (x920 x410 x1653 x152 x329 x1495) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1554) (= 0 (x1336 x1554))))
(assert (not (x1045 (x1454 x486 x1128 x878 x79 x120 x1579))))
(assert (x375 x1414))
(assert (= x997 (=> (and (and (= x571 (x938 (+ x510 31))) (= x1593 (x1095 115792089237316195423570985008687907853269984665640564039457584007913129639904 x571)) (= x186 (> x320 0)) (= (x938 (+ x1256 x510)) x1402) (= x251 (x321 (- x1194 x1030))) (>= x1345 64) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1345) (= x1194 (x938 (+ x1593 x1256)))) (or (and (= x4 x320) (not x186)) (and x186 (and (<= x1345 4294967295) (= 1 x4) (<= 64 x1345))))) x680)))
(assert (x375 x1256))
(assert (x375 x1345))
(assert (= x1709 (x837 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (> (x682 x528 x469) 10000))
(assert (= x1709 (x837 (x1498 x1709 x1369 x75 x1699))))
(assert (= x51 (and x173 (not x285))))
(assert (x375 x1234))
(assert (=> (>= 10000 x324) (= (x1336 x324) 0)))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= x120 (x27 (x1454 x486 x1128 x878 x79 x120 x1579))))
(assert (x375 x1155))
(assert (= (x837 (x618 64 x782 3)) 64))
(assert (> (x682 x444 x1000) 10000))
(assert (= (x1642 (x1454 x486 x1128 x878 x79 x120 x1579)) x1128))
(assert (= x1709 (x837 (x1107 x1709 x301 x623 x953 x150 x1578 x1640))))
(assert (x375 x1088))
(assert (x375 x1082))
(assert (x375 x1459))
(assert (=> (<= x9 10000) (= (x1336 x9) 0)))
(assert (not (x1045 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919))))
(assert (= 0 (x1336 57896044618658097711785492504343953926634992332820282019728792003956564819835)))
(assert (= (=> (and (or (and (and (= x40 x268) (<= 1 x53) (= (x1625 x1450) x661) (>= 340282366920938463463374607431768211454 x661) (= (+ x661 x268) x53) (<= x53 340282366920938463463374607431768211455)) (not x306)) (and x306 (and (= x40 x268) (>= x869 1) (= (x1142 x427) x1171) (= x427 (+ 1 x1450)) (= x869 (+ x268 x1171)) (<= x869 340282366920938463463374607431768211455) (>= 340282366920938463463374607431768211454 x1171)))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1310) (<= 1 x268) (>= 340282366920938463463374607431768211455 x268) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1310) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1310) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1310)) (> x912 x1310) (= x912 (x938 (+ x1310 64))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1310)) (not (= x1310 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (= x377 0) x306))) x597) x777))
(assert (= x405 (x266 (x1107 x1018 x246 x137 x1477 x851 x405 x476))))
(assert (x375 x1334))
(assert (x375 x1501))
(assert (x375 x991))
(assert (= (x1336 x274) (x1336 (+ x274 1))))
(assert (= (and x592 (not x728)) x1515))
(assert (x1660 32 x276))
(assert (x375 x78))
(assert (= (x618 x615 x624 x1399) (x1336 (x618 x615 x624 x1399))))
(assert (x375 x851))
(assert (x375 x797))
(assert (x375 x968))
(assert (=> (>= 10000 x438) (= 0 (x1336 x438))))
(assert (=> (>= 10000 x69) (= (x1336 x69) 0)))
(assert (x375 x405))
(assert (= x1172 (x266 (x1454 x528 x389 x731 x1494 x1192 x1172))))
(assert (x387 x506 32))
(assert (= (x1336 x524) (x1336 (+ 1 x524))))
(assert (=> (>= 10000 x512) (= 0 (x1336 x512))))
(assert (x375 x69))
(assert (x375 x926))
(assert (=> (>= 10000 x1166) (= (x1336 x1166) 0)))
(assert (x375 x435))
(assert (= x282 (x791 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (x375 x1114))
(assert (x375 x802))
(assert (not (x1045 (x682 x1082 x408))))
(assert (= x1018 (x837 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533))))
(assert (=> (>= 10000 x1406) (= 0 (x1336 x1406))))
(assert (x375 x1753))
(assert (x375 x803))
(assert (x375 x315))
(assert (x375 x584))
(assert (=> (>= 10000 x1674) (= 0 (x1336 x1674))))
(assert (=> (<= x1073 10000) (= 0 (x1336 x1073))))
(assert (x375 x1205))
(assert (x1321 x1629))
(assert (x375 x1265))
(assert (= (x1642 (x1498 x615 x1596 x530 x586)) x1596))
(assert (< 10000 (x682 x410 x736)))
(assert (x375 x1044))
(assert (=> (>= 10000 x1396) (= (x1336 x1396) 0)))
(assert (x375 x118))
(assert (= (or x24 x278) x22))
(assert (=> (>= 10000 x1119) (= 0 (x1336 x1119))))
(assert (x375 x731))
(assert (x375 x1596))
(assert (x375 x1040))
(assert (=> (>= 10000 x1247) (= (x1336 x1247) 0)))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639870) 0))
(assert (= (=> (and (= (x938 (+ 32 x1382)) x871) (= x1455 (x938 (+ x175 32))) (= (x938 (+ 32 x1223)) x175) (= (x938 (+ x280 32)) x1393) (not (= x49 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x49 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x938 (+ 32 x1455)) x202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x49) (= (x938 (+ x871 139)) x72) (= (< 0 x916) x651) (= (x938 (+ 96 x49)) x1382) (> x1382 x49) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x49)) (= (x938 (+ 32 x871)) x1223) (= (x1131 x49) x916) (<= x49 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x280 (x938 (+ 32 x49))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x49))) (and (=> (and (and (= x1075 (x1131 x280)) (= (< 32 x916) x62)) x651) (and (=> (and x62 (and (= x1335 (x938 (+ x72 32))) (= x1702 (x177 x663)) (= x663 (x938 (+ x280 32))) (= x141 (< 64 x916)))) (and (=> (not x141) x741) (=> (and x141 (and (= x206 (> x916 96)) (= (x938 (+ x72 64)) x563) (= x812 (x985 x1567)) (= (x938 (+ x280 64)) x1567))) (and (=> (not x206) x741) (=> x206 x697))))) (=> (not x62) x741))) (=> (not x651) x741))) x1516))
(assert (x375 x1427))
(assert (x375 x267))
(assert (x375 x1421))
(assert (x375 x451))
(assert (< 10000 (x618 64 x1508 3)))
(assert (x375 x666))
(assert (= (x837 (x618 64 x1416 3)) 64))
(assert (x375 x990))
(assert (= (x1730 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)) x1314))
(assert (not (x1045 (x1498 x486 x1265 x1025 x187))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 x486 x1806 x1269)))
(assert (=> (>= 10000 x1513) (= (x1336 x1513) 0)))
(assert (= (x837 (x1107 x615 x596 x464 x951 x151 x1104 x50)) x615))
(assert (x375 x319))
(assert (x375 x1054))
(assert (=> (>= 10000 x1723) (= (x1336 x1723) 0)))
(assert (x375 x1356))
(assert (x375 x1622))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)))
(assert (= x278 (and x497 x852)))
(assert (= (x1336 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)))
(assert (= (x1336 x994) (x1336 (+ x994 1))))
(assert (x375 x491))
(assert (= x1160 (x1642 (x1498 x528 x1160 x478 x379))))
(assert (x375 x962))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)))
(assert (x375 x1745))
(assert (x1651 32))
(assert (=> (>= 10000 x1361) (= (x1336 x1361) 0)))
(assert (x375 x730))
(assert (x375 x586))
(assert (=> (<= x1699 10000) (= 0 (x1336 x1699))))
(assert (= (x1454 x486 x1128 x878 x79 x120 x1579) (x1336 (x1454 x486 x1128 x878 x79 x120 x1579))))
(assert (=> (<= x1253 10000) (= 0 (x1336 x1253))))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= (x837 (x682 x444 x1000)) x444))
(assert (= (x618 x1082 x507 x158) (x1336 (x618 x1082 x507 x158))))
(assert (> (x1454 x444 x191 x1746 x732 x785 x740) 10000))
(assert (x375 x214))
(assert (x375 x386))
(assert (x375 x295))
(assert (x375 x1442))
(assert (x375 x1015))
(assert (not (x1045 (x618 64 x38 3))))
(assert (= (x1730 (x1107 x1018 x246 x137 x1477 x851 x405 x476)) x1477))
(assert (x375 x1794))
(assert (= (x470 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)) x685))
(assert (= (and (not x838) x1281) x1598))
(assert (x375 x1231))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x375 x1272))
(assert (=> (<= x1363 10000) (= 0 (x1336 x1363))))
(assert (x375 x952))
(assert (x375 x25))
(assert (x375 x812))
(assert (= (x1730 (x1454 x615 x1421 x950 x891 x1294 x998)) x891))
(assert (x375 x109))
(assert (= x1363 (x470 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (x375 x1244))
(assert (= (and x1666 x206) x271))
(assert (x375 x90))
(assert (x375 x1247))
(assert (x375 x1359))
(assert (x375 x1363))
(assert (x375 x726))
(assert (x375 x1610))
(assert (x375 x276))
(assert (x375 x1360))
(assert (= (x1730 (x1498 x486 x1265 x1025 x187)) x187))
(assert (< (x1107 x486 x1178 x311 x1361 x751 x333 x890) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1077))
(assert (x375 x1292))
(assert (x375 x1397))
(assert (= (x1336 (+ x1740 1)) (x1336 x1740)))
(assert (x375 x339))
(assert (x375 x1504))
(assert (=> (>= 10000 x130) (= 0 (x1336 x130))))
(assert (x375 x654))
(assert (= (x837 (x618 64 x131 3)) 64))
(assert (= x292 (x27 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533))))
(assert (x375 x1435))
(assert (=> (>= 10000 x1649) (= (x1336 x1649) 0)))
(assert (x375 x951))
(assert (= (x837 (x618 x1082 x507 x158)) x1082))
(assert (= x1649 (x266 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290))))
(assert (x375 x1144))
(assert (=> (<= x1407 10000) (= (x1336 x1407) 0)))
(assert (= (x1642 (x682 x486 x937)) x937))
(assert (not (x1045 (x1498 66 x1582 x1406 x372))))
(assert (x375 x1760))
(assert (x1045 340282366920938463463374607431768211454))
(assert (x1045 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (x375 x1555))
(assert (=> (<= x469 10000) (= 0 (x1336 x469))))
(assert (not (x1045 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x682 x444 x1000)))
(assert (=> (>= 10000 x875) (= 0 (x1336 x875))))
(assert (x375 x1487))
(assert (x375 x83))
(assert (=> (>= 10000 x530) (= 0 (x1336 x530))))
(assert (x375 x601))
(assert (x375 x958))
(assert (=> (>= 10000 x1226) (= (x1336 x1226) 0)))
(assert (not (x1045 (x682 x1709 x316))))
(assert (= x109 (x1730 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (x375 x522))
(assert (= x399 (=> (and (and (= x1406 (x999 x1326)) (= x876 (x1498 66 x1582 x1406 x372)) (= (x938 (+ x102 64)) x166) (= (x938 (+ 32 x102)) x1326) (= x372 (x999 x166)) (= (> x171 57896044618658097711785492504343953926418782139537452191302581570759080747168) x824) (= x115 (x938 (+ x1643 32))) (= x1643 (x938 (+ x102 2))) (= (x999 x102) x1582)) (or (and (and (or (and (and (= x353 x262) (= x416 0) (= x1728 x1639)) (not x821)) (and x821 (and (= x353 x262) (= x1728 0) (= 1 x416)))) (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x102)) (= (x604 x262) x1668) (= x314 (x604 (x938 (+ 32 x262)))) (> x262 x102) (= x1070 (x321 (- x262 32))) (= x1739 (x604 (x938 (+ x262 96)))) (<= x102 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x102 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x102) (= 128 x1629) (<= x102 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x938 (+ x1229 32)) x1774) (= (x833 x1070) x1639) (= (x1095 1461501637330902918203684832716283019655932542975 x1639) x763) (= x1650 (x938 (+ x1774 32))) (>= 1461501637330902918203684832716283019655932542975 x1216) (= x262 (x938 (+ 32 x102))) (not (= x102 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x947 (x604 (x938 (+ x262 64)))) (= x1229 (x938 (+ x262 32))) (= (x500 x1668 x314 x947 x1739) x1216) (= x1679 (x321 (- x262 32))) (= (= x763 0) x821))) (not x824)) (and (and (= x353 x102) (= x1728 0) (= x416 3)) x824))) x1472)))
(assert (x375 x389))
(assert (x375 x1629))
(assert (x375 x475))
(assert (=> (>= 10000 x1421) (= 0 (x1336 x1421))))
(assert (= (x1730 (x1454 x1709 x1306 x957 x1555 x1797 x453)) x1555))
(assert (x375 x346))
(assert (x375 x1478))
(assert (=> (>= 10000 x1265) (= (x1336 x1265) 0)))
(assert (=> (>= 10000 x978) (= 0 (x1336 x978))))
(assert (x375 x1560))
(assert (x375 x1084))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639869)))
(assert (= (x1336 (x618 64 x1442 3)) (x618 64 x1442 3)))
(assert (not (x1045 (x1498 x444 x1410 x323 x790))))
(assert (x375 x873))
(assert (x375 x1228))
(assert (= (x1336 x1638) (x1336 (+ x1638 5))))
(assert (= x319 (x1642 (x618 x1709 x319 x875))))
(assert (= (x1642 (x618 64 x38 3)) x38))
(assert (= (x791 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)) x945))
(assert (= (=> (and (and (= x1139 x356) (= x1292 x171) (= (x1724 164) x398) (>= 1461501637330902918203684832716283019655932542975 x210) (= x814 (x1724 0)) (= x417 x210) (= (ite x135 x514 x816) x1412) (= x377 x153) (= (x1724 228) x356) (= x1534 x398) (= (x1724 100) x377) (= x1576 x482) (= x1603 x1168) (<= x1767 1461501637330902918203684832716283019655932542975) (= x834 x814) x1412 (= x1416 x616) (= (x1724 36) x1767) (= (x1724 68) x210) (= (x1724 260) x171) (>= 255 x1603) (>= 18446744073709551615 x398) (= (x1724 132) x1576) (= (x1724 4) x1416) (= false x1676) (>= 18446744073709551615 x1576) (= x208 x1767) (= x1603 (x1724 196))) (and (and (or x1476 (and (and (= x1298 (* x16 32)) (= (+ x1021 32) x539)) (not x1476))) (and (= x133 (* 32 x16)) (= x709 false) (= (+ 4 x1576) x1783) (>= x1517 1) (= x899 (+ 32 x609)) (= (x681 x1396) x595) (= (x1445 x609) x16) (= x757 x1292) (= x1721 (+ x1517 128)) (= 3686331914 x437) (= x161 (+ 32 x1783)) (= x1476 (= 0 x16)) (not (< x504 x1155)) (= (* 32 x16) x1103) (= x616 x442) (= (+ x899 x1103) x1213) (= x1155 (+ x1343 x161)) (<= x1343 18446744073709551615) (= (+ x609 31) x1692) (= (+ 31 x1783) x28) (= x609 (+ 4 x398)) (= 128 x1135) (= (+ 63 x637) x506) (= (+ 31 x1343) x625) (= x417 x318) (= x35 x1168) (< x1692 x504) (= x1517 (x1095 115792089237316195423570985008687907853269984665640564039457584007913129639904 x506)) (= x208 x1004) (= x1805 x1396) (<= x16 18446744073709551615) (= x1139 x249) (= (x1095 115792089237316195423570985008687907853269984665640564039457584007913129639904 x625) x637) (> x1021 x1721) (= (x1445 x1783) x1343) (< x28 x504) (<= 1 x1433) (not (> x1721 x1021)) (> x705 x1021) (= (x362 x335) x1181) (not (< x504 x1213)) (= x714 false) (<= x1517 18446744073709551391) (= x1021 (+ x1721 96)) (= x705 (+ x1021 32 x133)) (= x153 x1602) (= x1181 x1390) (<= x803 127) (= (x46 x335) x1433) (= x689 (+ x1343 160)) (>= 127 x803))) (= x192 x949))) x1631) x1656))
(assert (x1321 x958))
(assert (x375 x1539))
(assert (= (x791 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)) x1640))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x375 x890))
(assert (=> (>= 10000 x50) (= 0 (x1336 x50))))
(assert (=> (<= x1269 10000) (= 0 (x1336 x1269))))
(assert (x375 x937))
(assert (x375 x811))
(assert (x1651 x1639))
(assert (= (and x378 (not x312)) x921))
(assert (= (and (not x141) x717) x499))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639873) 0))
(assert (= (x470 (x618 x486 x1806 x1269)) x1269))
(assert (x375 x1255))
(assert (= (x1336 (x618 64 x38 3)) (x618 64 x38 3)))
(assert (x375 x806))
(assert (x375 x547))
(assert (=> (<= x1416 10000) (= (x1336 x1416) 0)))
(assert (x375 x47))
(assert (not (x1045 (x618 x444 x142 x322))))
(assert (= x1297 (x1642 (x633 x486 x1297 x885 x984 x521 x178 x324 x542))))
(assert (= x493 (and x1476 x1525)))
(assert (x375 x1635))
(assert (x375 x1769))
(assert (x375 x1211))
(assert (x375 x1713))
(assert (> (x682 x1018 x438) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x1416 4)))
(assert (x375 x698))
(assert (= (and x1060 x977) x393))
(assert (< (x682 x1018 x438) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x486))
(assert (= (and x393 x1251) x786))
(assert (x1045 18446744073709551487))
(assert (x375 x1729))
(assert (= 0 (x1336 22264039863272420937079131806861516217942124584529674491290359742488301797376)))
(assert (= (x1730 (x1498 x1082 x1174 x672 x386)) x386))
(assert (x375 x1479))
(assert (x375 x885))
(assert (x759 x1728))
(assert (not (x1045 (x618 64 x1416 4))))
(assert (= x520 (and x498 (not x1151))))
(assert (= x21 (x1642 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119))))
(assert (=> (>= 10000 x1290) (= 0 (x1336 x1290))))
(assert (= (x1336 x431) (x1336 (+ 1 x431))))
(assert (x375 x1566))
(assert (= (x837 (x1498 x528 x1160 x478 x379)) x528))
(assert (x375 x1221))
(assert (= 0 (x1336 340282366920938463463374607431768211454)))
(assert (not (x1045 (x618 64 x1508 3))))
(assert (= (x837 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) x410))
(assert (=> (<= x754 10000) (= 0 (x1336 x754))))
(assert (x375 x1149))
(assert (= (x1642 (x1498 x444 x1410 x323 x790)) x1410))
(assert (=> (<= x1637 10000) (= (x1336 x1637) 0)))
(assert (x375 x1579))
(assert (= (x837 (x618 x486 x1806 x1269)) x486))
(assert (= x1666 (and x141 x717)))
(assert (= x1416 (x1642 (x618 64 x1416 3))))
(assert (=> (>= 10000 x453) (= 0 (x1336 x453))))
(assert (x375 x1006))
(assert (x1045 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= x615 (x837 (x920 x615 x97 x1024 x1191 x304))))
(assert (= (x1730 (x1454 x528 x389 x731 x1494 x1192 x1172)) x1494))
(assert (x375 x621))
(assert (= (x1642 (x1107 x528 x409 x217 x359 x811 x299 x288)) x409))
(assert (= x1723 (x470 (x1454 x1018 x836 x1723 x1513 x1468 x915))))
(assert (x375 x1159))
(assert (=> (<= x1387 10000) (= (x1336 x1387) 0)))
(assert (= x1674 (x1642 (x618 x410 x1674 x1350))))
(assert (x375 x1800))
(assert (= (=> (and (= x496 (x938 (+ x361 32))) (= x1392 (x1590 x1500)) (= (not (< 4 x276)) x1691)) (and x1691 (=> (and (= x1211 x496) (= x1384 4) (= (+ 32 x1500) x1627)) x589))) x269))
(assert (x375 x1179))
(assert (not (x1045 (x920 x1082 x512 x1129 x1600 x415))))
(assert (x375 x813))
(assert (< 10000 (x1498 x1018 x1710 x1001 x1247)))
(assert (=> (<= x951 10000) (= 0 (x1336 x951))))
(assert (x375 x829))
(assert (= (or x36 x1515) x439))
(assert (= x535 (x1730 (x1498 x410 x1784 x203 x535))))
(assert (= x1018 (x837 (x1107 x1018 x246 x137 x1477 x851 x405 x476))))
(assert (not (x1045 (x1498 x1082 x1174 x672 x386))))
(assert (=> (<= x984 10000) (= 0 (x1336 x984))))
(assert (x375 x574))
(assert (= (x470 (x1498 x410 x1784 x203 x535)) x203))
(assert (=> (<= x1302 10000) (= 0 (x1336 x1302))))
(assert (x375 x559))
(assert (= x152 (x470 (x920 x410 x1653 x152 x329 x1495))))
(assert (=> (>= 10000 x542) (= 0 (x1336 x542))))
(assert (= x346 (x1730 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290))))
(assert (=> (>= 10000 x359) (= (x1336 x359) 0)))
(assert (= (x837 (x920 x1018 x1115 x621 x1231 x742)) x1018))
(assert (= x131 (x1642 (x618 64 x131 3))))
(assert (=> (<= x301 10000) (= 0 (x1336 x301))))
(assert (x375 x987))
(assert (x375 x702))
(assert (=> (>= 10000 x891) (= (x1336 x891) 0)))
(assert (x375 x1517))
(assert (x375 x1718))
(assert (=> (<= x1184 10000) (= 0 (x1336 x1184))))
(assert (= (x470 (x618 x1082 x507 x158)) x158))
(assert (x375 x1357))
(assert (x375 x467))
(assert (x375 x1716))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x920 x1082 x512 x1129 x1600 x415)))
(assert (x375 x1776))
(assert (=> (>= 10000 x1126) (= (x1336 x1126) 0)))
(assert (= (x1642 (x1498 x1018 x1710 x1001 x1247)) x1710))
(assert (x375 x545))
(assert (= x1082 (x837 (x1498 x1082 x1174 x672 x386))))
(assert (x375 x1282))
(assert (=> (<= x1441 10000) (= 0 (x1336 x1441))))
(assert (x375 x512))
(assert (= (and (not x1780) x1089) x468))
(assert (x1045 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x375 x1792))
(assert (= (x470 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x1769))
(assert (= x1060 (or x598 x1489)))
(assert (x375 x92))
(assert (x375 x1289))
(assert (x375 x506))
(assert (=> (<= x1710 10000) (= 0 (x1336 x1710))))
(assert (< 10000 (x618 x486 x1806 x1269)))
(assert (x375 x899))
(assert (x375 x335))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x920 x528 x806 x165 x1688 x2)))
(assert (x375 x363))
(assert (x375 x1503))
(assert (= (x1498 x1018 x1710 x1001 x1247) (x1336 (x1498 x1018 x1710 x1001 x1247))))
(assert (x375 x1643))
(assert (= (and x255 (not x1261)) x1429))
(assert (= x1178 (x1642 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (= x440 (and (not x821) x471)))
(assert (x375 x1057))
(assert (x375 x611))
(assert (x375 x1168))
(assert (=> (>= 10000 x311) (= (x1336 x311) 0)))
(assert (x1651 x949))
(assert (= (x27 (x920 x615 x97 x1024 x1191 x304)) x304))
(assert (x375 x845))
(assert (x375 x1534))
(assert (x375 x841))
(assert (= (x837 (x682 x615 x962)) x615))
(assert (= (x1336 (x1498 x615 x1596 x530 x586)) (x1498 x615 x1596 x530 x586)))
(assert (x375 x1055))
(assert (x375 x1387))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639684)))
(assert (< (x633 x1018 x78 x1560 x702 x292 x560 x883 x533) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x484 (and x443 x540)))
(assert (x375 x553))
(assert (=> (<= x335 10000) (= 0 (x1336 x335))))
(assert (= (x1730 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)) x272))
(assert (= x486 (x837 (x920 x486 x449 x859 x130 x9))))
(assert (=> (<= x1350 10000) (= 0 (x1336 x1350))))
(assert (= (x1336 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (x375 x1710))
(assert (=> (>= 10000 x1665) (= 0 (x1336 x1665))))
(assert (= (x1336 (+ x368 1)) (x1336 x368)))
(assert (x375 x722))
(assert (x375 x1226))
(assert (not (x1045 (x682 x410 x736))))
(assert (x375 x1502))
(assert (not (x1045 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533))))
(assert (= (x752 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x542))
(assert (x375 x1133))
(assert (x1651 x625))
(assert (= (x1336 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (x375 x241))
(assert (< 10000 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)))
(assert (=> (>= 10000 x535) (= (x1336 x535) 0)))
(assert (= (x1336 (x920 x1018 x1115 x621 x1231 x742)) (x920 x1018 x1115 x621 x1231 x742)))
(assert (= (x1336 (x682 x1082 x408)) (x682 x1082 x408)))
(assert (< (x1498 x1709 x1369 x75 x1699) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x615 10000) (= (x1336 x615) 0)))
(assert (= (x1730 (x1454 x1018 x836 x1723 x1513 x1468 x915)) x1513))
(assert (x375 x1248))
(assert (=> (<= x486 10000) (= (x1336 x486) 0)))
(assert (= x1746 (x470 (x1454 x444 x191 x1746 x732 x785 x740))))
(assert (x375 x747))
(assert (x375 x1408))
(assert (not (x1045 (x1498 x1018 x1710 x1001 x1247))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 x1018 x1742 x1387)))
(assert (x375 x1561))
(assert (not (x1045 (x920 x444 x1156 x931 x1184 x106))))
(assert (= x1495 (x27 (x920 x410 x1653 x152 x329 x1495))))
(assert (= (and x824 x22) x1452))
(assert (< 10000 (x1454 x486 x1128 x878 x79 x120 x1579)))
(assert (x375 x549))
(assert (not (x1045 (x1498 x1709 x1369 x75 x1699))))
(assert (x1321 x1309))
(assert (x375 x219))
(assert (= 64 (x837 (x618 64 x730 3))))
(assert (=> (>= 10000 x1508) (= (x1336 x1508) 0)))
(assert (x375 x1433))
(assert (x375 x1746))
(assert (< 10000 (x618 64 x131 3)))
(assert (< (x618 x528 x1126 x69) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1670))
(assert (=> (<= x464 10000) (= (x1336 x464) 0)))
(assert (= (x618 x486 x1806 x1269) (x1336 (x618 x486 x1806 x1269))))
(assert (=> (<= x1764 10000) (= 0 (x1336 x1764))))
(assert (x375 x1803))
(assert (=> (<= x1582 10000) (= (x1336 x1582) 0)))
(assert (x375 x1374))
(assert (x375 x272))
(assert (x375 x1139))
(assert (x375 x835))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)))
(assert (x375 x954))
(assert (= x528 (x837 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (x375 x689))
(assert (x375 x617))
(assert (x375 x1310))
(assert (x375 x907))
(assert (x375 x1110))
(assert (x375 x412))
(assert (not (x1045 (x618 64 x730 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x881 3)))
(assert (not (x1045 (x618 x1018 x1742 x1387))))
(assert (and (= (x370 9 3) 27) (= (x370 27 3) 81) (= 81 (x370 9 9)) (= 9 (x370 3 3))))
(assert (x375 x915))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x38 3)))
(assert (= (x27 (x1107 x1018 x246 x137 x1477 x851 x405 x476)) x851))
(assert (= (x1336 (x920 x1709 x845 x605 x917 x910)) (x920 x1709 x845 x605 x917 x910)))
(assert (x375 x308))
(assert (x375 x441))
(assert (=> (>= 10000 x1025) (= (x1336 x1025) 0)))
(assert (x375 x975))
(assert (=> (>= 10000 x178) (= (x1336 x178) 0)))
(assert (x375 x1173))
(assert (=> (<= x1645 10000) (= (x1336 x1645) 0)))
(assert (=> (<= x785 10000) (= (x1336 x785) 0)))
(assert (= (x837 (x1454 x528 x389 x731 x1494 x1192 x1172)) x528))
(assert (= x1237 (x470 (x1454 x410 x1333 x1237 x1731 x887 x696))))
(assert (=> (>= 10000 x1769) (= 0 (x1336 x1769))))
(assert (= x9 (x27 (x920 x486 x449 x859 x130 x9))))
(assert (x1321 x1551))
(assert (x375 x1409))
(assert (not (x1045 (x633 x486 x1297 x885 x984 x521 x178 x324 x542))))
(assert (x375 x679))
(assert (= 0 (x1336 22260506169142864168419965211860030380910469616735923253374116530085716557824)))
(assert (x375 x517))
(assert (=> (>= 10000 x829) (= (x1336 x829) 0)))
(assert (= x455 (x752 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (x375 x1678))
(assert (= (x266 (x1454 x1018 x836 x1723 x1513 x1468 x915)) x915))
(assert (x375 x585))
(assert (x375 x437))
(assert (= (x1730 (x920 x615 x97 x1024 x1191 x304)) x1191))
(assert (= x1709 (x837 (x682 x1709 x316))))
(assert (x375 x261))
(assert (x375 x373))
(assert (= (x837 (x1107 x410 x111 x1791 x109 x89 x373 x1788)) x410))
(assert (= x806 (x1642 (x920 x528 x806 x165 x1688 x2))))
(assert (x375 x1699))
(assert (x375 x1299))
(assert (x375 x381))
(assert (x375 x832))
(assert (= (x837 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) x1082))
(assert (x375 x1567))
(assert (x759 x1076))
(assert (= (x1336 22702217935337460250815789587045760009867340590954827992904518080408871501824) 0))
(assert (x375 x1440))
(assert (=> (<= x674 10000) (= (x1336 x674) 0)))
(assert (=> (<= x1767 10000) (= 0 (x1336 x1767))))
(assert (=> (<= x538 10000) (= (x1336 x538) 0)))
(assert (=> (<= x1596 10000) (= 0 (x1336 x1596))))
(assert (x375 x1764))
(assert (= x951 (x1730 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (x1045 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (= x878 (x470 (x1454 x486 x1128 x878 x79 x120 x1579))))
(assert (= (x1336 x1594) (x1336 (+ 1 x1594))))
(assert (=> (<= x436 10000) (= 0 (x1336 x436))))
(assert (= (x470 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) x1560))
(assert (x375 x1090))
(assert (< 10000 (x618 64 x1389 4)))
(assert (< 10000 (x682 x486 x937)))
(assert (= (x1642 (x618 x615 x624 x1399)) x624))
(assert (not (x1045 (x618 x486 x1806 x1269))))
(assert (x375 x754))
(assert (=> (<= x1144 10000) (= 0 (x1336 x1144))))
(assert (x375 x482))
(assert (x375 x1330))
(assert (x375 x1117))
(assert (= x1653 (x1642 (x920 x410 x1653 x152 x329 x1495))))
(assert (x375 x1624))
(assert (x375 x275))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)))
(assert (= (x1642 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) x78))
(assert (x375 x1486))
(assert (= (x1336 37749366859872002549862985897619888669665948435824635674531347399775013991474) 0))
(assert (x375 x992))
(assert (x375 x526))
(assert (x375 x317))
(assert (=> (<= x299 10000) (= (x1336 x299) 0)))
(assert (x375 x1166))
(assert (= 0 (x1336 25877242110744216891076975195880784582809329153640315260649044424131709239296)))
(assert (x713 32))
(assert (x375 x986))
(assert (x1045 16777215))
(assert (= x1448 (x752 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (= (=> (and (and (and (and (= (+ x1740 1) x905) (= (x618 64 x131 3) x1740) (= x45 (x46 x335)) (= false x511) (= x1385 (x487 864)) (= x867 (x898 x905)) (= (x1625 x905) x200) (= x654 (x707 x1473)) (= (x487 800) x1084) (= x711 (+ x1592 1)) (= x1183 false) (= x981 (x1142 x1592)) (= x1751 (x487 704)) (<= x1040 1099511627775) (= x861 (x1464 x711)) (= false x1157) (= x569 x1751) (= (x1153 x905) x1040) (= x131 x935) (= x991 (x1317 x905)) (= x840 x854) (= x1282 (x487 768)) (= (+ 1 x905) x1592) (= x1209 x575) (= false x1074) (= (x487 960) x1795) (>= 340282366920938463463374607431768211455 x200) (= x1419 x519) (= x840 (x487 896)) (>= 340282366920938463463374607431768211455 x981) (<= x991 1099511627775) (= (x1300 x905) x1318) (>= x45 1) (= x181 x1084) (= (x487 928) x85) (= x1428 36) (= x575 x966) (= x724 false) (= x1385 x104) (= x818 x85) (= x888 x1282) (<= x1641 127) (= (ite (not (= (ite (not (= 0 x1318)) 1 0) 0)) 1 0) x591) (= x1519 false) (= x1295 x1795) (= x566 911662625) (<= x1641 127) (<= x1318 255) (>= 1099511627775 x867) (= x1419 (x487 832)) (= (+ x711 1) x1473) (= x1323 x1209)) (and (<= 1 x182) (= x63 4067465820) (= (x701 x431) x13) (= false x1734) (= false x758) (= (+ x431 1) x447) (= x1645 x1323) (= x1202 false) (= x213 x514) (= x643 x816) (= x781 false) (>= 16777215 x13) (= x1725 (+ x1575 x888)) (= false x162) (= (x648 x447) x1568) (= x188 x1575) (= (x244 256) x188) (= (x46 x335) x182) (= x1492 false) (= (x618 64 x1645 4) x431) (>= 127 x793) (= x213 (= x1725 x1523)) (>= 127 x793))) (and (>= 1099511627775 x1792) (= x472 x1134) (= (x1317 x1218) x1792) (= x1218 (+ x338 1)) (= x1123 x1243) (= (x1464 x1259) x1208) (<= x653 127) (= x1522 x935) (>= 340282366920938463463374607431768211455 x690) (= (+ 1 x1003) x1259) (= (x1625 x1218) x1346) (= false x879) (= x760 x1426) (= (x707 x1032) x1397) (= x691 (x46 x335)) (= false x1349) (= (x974 800) x1088) (= false x779) (= x690 (x1142 x1003)) (= false x1263) (= x1032 (+ x1259 1)) (= (x974 928) x467) (= (x898 x1218) x1319) (= x1367 911662625) (= (ite (not (= 0 (ite (not (= 0 x367)) 1 0))) 1 0) x1683) (= x1356 x114) (<= x653 127) (= x1509 36) (= x849 (x1153 x1218)) (= x1522 x224) (= x1006 (x974 960)) (= x1123 (x974 832)) (= (x618 64 x782 3) x338) (= x733 x1006) (= x1088 x1523) (= x966 x224) (= x1356 (x974 768)) (<= x1319 1099511627775) (= x472 (x974 704)) (= x843 x1048) (= x911 false) (<= x849 1099511627775) (<= 1 x691) (= false x5) (= (x1300 x1218) x367) (>= 340282366920938463463374607431768211455 x1346) (= x1686 x467) (= x789 x782) (>= 255 x367) (= x1003 (+ 1 x1218)) (= x1426 (x974 896)) (= (x974 864) x843))) (and (= x975 36) (= x966 x1765) (= x1586 x789) (= x1586 x1765))) x1656) x17))
(assert (x375 x311))
(assert (= (x1336 x1735) (x1336 (+ 1 x1735))))
(assert (=> (<= x225 10000) (= (x1336 x225) 0)))
(assert (< (x618 64 x1416 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1223))
(assert (x1651 1099511627776))
(assert (x375 x1056))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (=> (>= 10000 x1495) (= 0 (x1336 x1495))))
(assert (x375 x1393))
(assert (x375 x910))
(assert (x375 x613))
(assert (x375 x1682))
(assert (= (x1336 (+ 1 x64)) (x1336 x64)))
(assert (= (x1336 (x618 64 x1508 3)) (x618 64 x1508 3)))
(assert (=> (>= 10000 x1149) (= 0 (x1336 x1149))))
(assert (= (x1336 x230) (x1336 (+ x230 1))))
(assert (= x1174 (x1642 (x1498 x1082 x1174 x672 x386))))
(assert (= (x1730 (x1498 x615 x1596 x530 x586)) x586))
(assert (=> (<= x1680 10000) (= (x1336 x1680) 0)))
(assert (x375 x1706))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)))
(assert (x375 x333))
(assert (x375 x573))
(assert (x375 x1688))
(assert (=> (>= 10000 x1314) (= 0 (x1336 x1314))))
(assert (x375 x1005))
(assert (x375 x1312))
(assert (x375 x9))
(assert (= (x1336 (x618 x410 x1674 x1350)) (x618 x410 x1674 x1350)))
(assert (x375 x1795))
(assert (=> (>= 10000 x120) (= 0 (x1336 x120))))
(assert (x375 x476))
(assert (x375 x472))
(assert (x375 x834))
(assert (> (x1107 x615 x596 x464 x951 x151 x1104 x50) 10000))
(assert (x375 x1484))
(assert (x375 x1728))
(assert (x1321 x1509))
(assert (x375 x529))
(assert (x375 x249))
(assert (x375 x1268))
(assert (x375 x1025))
(assert (x375 x1557))
(assert (= (x266 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) x1554))
(assert (=> (>= 10000 x1578) (= (x1336 x1578) 0)))
(assert (= (x1336 x1137) (x1336 (+ 1 x1137))))
(assert (x375 x1607))
(assert (= (x1730 (x1454 x486 x1128 x878 x79 x120 x1579)) x79))
(assert (= (x27 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x521))
(assert (x375 x1386))
(assert (x375 x1031))
(assert (x375 x1197))
(assert (x375 x152))
(assert (=> (<= x150 10000) (= (x1336 x150) 0)))
(assert (=> (>= 10000 x147) (= 0 (x1336 x147))))
(assert (x375 x1342))
(assert (= (x1336 x1003) (x1336 (+ x1003 1))))
(assert (= (x618 x444 x142 x322) (x1336 (x618 x444 x142 x322))))
(assert (= (=> (and (and (= x928 x966) (= x928 x1654) (= x1654 x383) (= 36 x738)) (and (and (and (= x1763 x1389) (= x980 (+ x518 x169)) (>= 127 x1440) (= false x765) (= false x1712) (= x380 x169) (= x1403 false) (>= 16777215 x659) (= x1485 (x648 x896)) (= x657 false) (= x659 (x701 x368)) (= x1547 x1413) (= x39 false) (= (+ x368 1) x896) (>= x715 1) (= (x46 x335) x715) (<= x1440 127) (= false x31) (= (x618 64 x1389 4) x368) (= (x1232 256) x380) (= x1762 x1741) (= 4067465820 x1636) (= x1413 (= x502 x980))) (and (= x712 (x707 x801)) (<= x1177 340282366920938463463374607431768211455) (= (x1300 x1700) x658) (<= x1798 1099511627775) (= false x1013) (= (x1153 x1700) x1235) (= x1347 x966) (= 911662625 x1617) (<= 1 x441) (>= 127 x1714) (= x230 (+ x240 1)) (= (x1317 x1700) x1798) (= x145 x305) (= x236 false) (= 36 x585) (= x1248 (x1438 960)) (= x1341 (x1438 768)) (= x1754 (x1438 928)) (= x1034 x1248) (<= x658 255) (= (ite (not (= (ite (not (= x658 0)) 1 0) 0)) 1 0) x1664) (= x450 x1417) (= false x1573) (= (x1201 x240) x1188) (<= x1235 1099511627775) (= (x1438 800) x450) (= x1109 false) (= (x1438 704) x305) (= x1341 x518) (= x730 x1053) (= x259 (x1464 x230)) (>= 1099511627775 x1521) (= x1177 (x1707 x1700)) (<= x1188 340282366920938463463374607431768211455) (= x1203 x547) (= x857 x110) (= x970 x1754) (= (x46 x335) x441) (= (x1438 864) x1090) (= (x898 x1700) x1521) (= x547 (x1438 832)) (= x1347 x1601) (= false x1550) (= x801 (+ 1 x230)) (= (+ 1 x1700) x240) (= x1601 x1763) (= x857 (x1438 896)) (>= 127 x1714) (= x1439 false) (= x1090 x1659) (= (x618 64 x730 3) x1137) (= (+ 1 x1137) x1700))) (and (= x474 (x1061 896)) (>= 340282366920938463463374607431768211455 x1581) (= x994 (+ x960 1)) (= x960 (x618 64 x38 3)) (= x1053 x1140) (= (x1061 928) x343) (= x502 x1496) (<= x1546 1099511627775) (= x216 x343) (= (x1061 704) x1289) (= x1233 x291) (= x291 (x1061 768)) (<= x749 340282366920938463463374607431768211455) (= 911662625 x973) (= x422 (x1464 x1189)) (<= x1663 255) (= x1546 (x1317 x994)) (= (ite (not (= (ite (not (= 0 x1663)) 1 0) 0)) 1 0) x1138) (= x1187 x1140) (= 36 x451) (>= 1099511627775 x1359) (= x474 x18) (= x394 (x1061 960)) (= (x46 x335) x946) (= x1187 x966) (= x1359 (x898 x994)) (= x1624 (x707 x1418)) (= x64 (+ 1 x994)) (= x1424 false) (= x394 x163) (= x38 x383) (= x126 false) (>= 127 x813) (>= 1099511627775 x424) (= x494 x1289) (= x227 (x1061 864)) (= (x1300 x994) x1663) (= x1418 (+ x1189 1)) (= (x1153 x994) x424) (= x501 (x1061 832)) (= x749 (x1707 x994)) (= x402 x227) (= x1189 (+ x64 1)) (= x1398 false) (= x710 false) (>= 127 x813) (= x501 x641) (= (x1201 x64) x1581) (= x127 false) (= false x1465) (= x1496 (x1061 800)) (<= 1 x946)))) x201) x1093))
(assert (=> (<= x1600 10000) (= (x1336 x1600) 0)))
(assert (=> (<= x152 10000) (= (x1336 x152) 0)))
(assert (x375 x1288))
(assert (= 64 (x837 (x618 64 x1389 4))))
(assert (x375 x1406))
(assert (= x1089 (or x1589 x454)))
(assert (x375 x16))
(assert (x375 x1694))
(assert (x375 x1396))
(assert (x375 x1599))
(assert (= x143 (or x129 x612)))
(assert (< (x618 64 x1645 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1578))
(assert (x375 x804))
(assert (not (x1045 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (x375 x1581))
(assert (x375 x630))
(assert (= x859 (x470 (x920 x486 x449 x859 x130 x9))))
(assert (x375 x809))
(assert (= x612 (and x393 (not x1251))))
(assert (= x444 (x837 (x1454 x444 x191 x1746 x732 x785 x740))))
(assert (x375 x1020))
(assert (=> (>= 10000 x455) (= 0 (x1336 x455))))
(assert (=> (>= 10000 x1671) (= 0 (x1336 x1671))))
(assert (x375 x1569))
(assert (= x443 (or x1308 x956)))
(assert (= (x1642 (x682 x1709 x316)) x316))
(assert (x375 x878))
(assert (= (x1454 x410 x1333 x1237 x1731 x887 x696) (x1336 (x1454 x410 x1333 x1237 x1731 x887 x696))))
(assert (= (and x578 x52) x463))
(assert (=> (<= x1276 10000) (= (x1336 x1276) 0)))
(assert (x375 x783))
(assert (x375 x703))
(assert (not (x1045 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105))))
(assert (x375 x72))
(assert (= (x1336 (+ 1 x1353)) (x1336 x1353)))
(assert (x375 x1574))
(assert (> (x1498 x528 x1160 x478 x379) 10000))
(assert (x375 x193))
(assert (= (x1730 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) x157))
(assert (x375 x1328))
(assert (= (x1336 x1638) (x1336 (+ 1 x1638))))
(assert (x375 x1744))
(assert (=> (<= x165 10000) (= (x1336 x165) 0)))
(assert (= 0 (x1336 340282366920938463463374607431768211455)))
(assert (=> (<= x1001 10000) (= (x1336 x1001) 0)))
(assert (x375 x436))
(assert (x375 x782))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (x375 x1327))
(assert (not (x1045 (x618 x1709 x319 x875))))
(assert (x1045 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (x375 x916))
(assert (= x201 (=> (= (ite x1780 x1547 x1762) x243) x243)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (=> (<= x1410 10000) (= 0 (x1336 x1410))))
(assert (x375 x995))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (= 3 (x470 (x618 64 x131 3))))
(assert (x375 x1290))
(assert (x375 x102))
(assert (= x910 (x27 (x920 x1709 x845 x605 x917 x910))))
(assert (x375 x220))
(assert (= x254 (and (not x1432) x786)))
(assert (x375 x624))
(assert (x375 x1509))
(assert (x375 x1773))
(assert (x375 x1163))
(assert (x375 x1466))
(assert (=> (<= x1726 10000) (= (x1336 x1726) 0)))
(assert (= x1416 (x1642 (x618 64 x1416 4))))
(assert (x375 x1309))
(assert (= 64 (x837 (x618 64 x1767 x721))))
(assert (x375 x1156))
(assert (x375 x495))
(assert (= (x1730 (x1454 x444 x191 x1746 x732 x785 x740)) x732))
(assert (x375 x1648))
(assert (= (x1336 (+ x905 1)) (x1336 x905)))
(assert (= (x470 (x1454 x1709 x1306 x957 x1555 x1797 x453)) x957))
(assert (= x1333 (x1642 (x1454 x410 x1333 x1237 x1731 x887 x696))))
(assert (x375 x1293))
(assert (x759 x364))
(assert (= x389 (x1642 (x1454 x528 x389 x731 x1494 x1192 x1172))))
(assert (x375 x629))
(assert (x1321 x1316))
(assert (= (x1107 x615 x596 x464 x951 x151 x1104 x50) (x1336 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (x1321 x585))
(assert (x375 x891))
(assert (x375 x636))
(assert (= (x1336 x1189) (x1336 (+ x1189 1))))
(assert (> (x1498 x1709 x1369 x75 x1699) 10000))
(assert (=> (>= 10000 x1007) (= 0 (x1336 x1007))))
(assert (= x1802 (and x1525 (not x1476))))
(assert (x375 x113))
(assert (x1321 x841))
(assert (x375 x394))
(assert (x375 x1181))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639839) 0))
(assert (=> (>= 10000 x827) (= 0 (x1336 x827))))
(assert (x375 x1692))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639715)))
(assert (x375 x60))
(assert (=> (<= x722 10000) (= (x1336 x722) 0)))
(assert (x1660 32 x16))
(assert (x375 x949))
(assert (x794 x364))
(assert (= (x1336 (x682 x615 x962)) (x682 x615 x962)))
(assert (x375 x252))
(assert (= (x837 (x1454 x410 x1333 x1237 x1731 x887 x696)) x410))
(assert (x375 x872))
(assert (< 10000 (x618 64 x1767 x721)))
(assert (x375 x34))
(assert (x375 x290))
(assert (> (x1454 x1018 x836 x1723 x1513 x1468 x915) 10000))
(assert (x375 x1722))
(assert (=> (<= x1160 10000) (= (x1336 x1160) 0)))
(assert (x1321 x451))
(assert (x375 x391))
(assert (x375 x146))
(assert (x375 x1797))
(assert (x375 x1407))
(assert (x375 x525))
(assert (x375 x735))
(assert (not (x1045 (x1107 x528 x409 x217 x359 x811 x299 x288))))
(assert (= (and x439 (not x651)) x1225))
(assert (x375 x1018))
(assert (x375 x670))
(assert (= x1361 (x1730 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (= x782 (x1642 (x618 64 x782 3))))
(assert (x375 x212))
(assert (=> (<= x1115 10000) (= 0 (x1336 x1115))))
(assert (x375 x541))
(assert (x375 x1171))
(assert (= x590 (x1642 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (x375 x1513))
(assert (x375 x1495))
(assert (= (x837 (x618 64 x226 4)) 64))
(assert (= (x682 x528 x469) (x1336 (x682 x528 x469))))
(assert (not (x1045 (x920 x1709 x845 x605 x917 x910))))
(assert (x375 x1747))
(assert (x375 x1562))
(assert (x375 x207))
(assert (=> (>= 10000 x1640) (= (x1336 x1640) 0)))
(assert (x375 x1067))
(assert (= x151 (x27 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (= x444 (x837 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945))))
(assert (=> (>= 10000 x21) (= 0 (x1336 x21))))
(assert (= (x1642 (x682 x1018 x438)) x438))
(assert (x375 x1100))
(assert (x387 x571 32))
(assert (=> (<= x1237 10000) (= (x1336 x1237) 0)))
(assert (< 10000 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)))
(assert (x375 x93))
(assert (x375 x1319))
(assert (=> (>= 10000 x1442) (= 0 (x1336 x1442))))
(assert (x375 x1591))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 66 x1582 x1406 x372)))
(assert (not (x1045 (x1107 x1018 x246 x137 x1477 x851 x405 x476))))
(assert (=> (>= 10000 x1174) (= 0 (x1336 x1174))))
(assert (= (x266 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)) x1411))
(assert (x375 x1070))
(assert (x375 x1241))
(assert (x375 x1702))
(assert (x1045 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (=> (<= x1096 10000) (= (x1336 x1096) 0)))
(assert (=> (<= x731 10000) (= 0 (x1336 x731))))
(assert (= (x470 (x618 64 x1508 3)) 3))
(assert (x375 x1002))
(assert (=> (>= 10000 x1806) (= (x1336 x1806) 0)))
(assert (x375 x479))
(assert (= (x1336 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (x375 x1455))
(assert (x375 x450))
(assert (not (x1045 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945))))
(assert (x375 x1736))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (< (x682 x528 x469) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 x1709 x319 x875)))
(assert (not (x1045 (x920 x1018 x1115 x621 x1231 x742))))
(assert (= x373 (x266 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (= (and (not x824) x22) x471))
(assert (=> (>= 10000 x1560) (= (x1336 x1560) 0)))
(assert (x375 x877))
(assert (= x69 (x470 (x618 x528 x1126 x69))))
(assert (=> (>= 10000 x157) (= (x1336 x157) 0)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)))
(assert (x1651 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1797 (x27 (x1454 x1709 x1306 x957 x1555 x1797 x453))))
(assert (x375 x953))
(assert (= (x1336 x1274) (x1336 (+ x1274 1))))
(assert (x375 x448))
(assert (= (x1642 (x920 x486 x449 x859 x130 x9)) x449))
(assert (= (x1336 45887579694954924622689847950937698470056863744033464196450664576267108643884) 0))
(assert (= (or x499 x336 x1225 x96 x271) x52))
(assert (x375 x745))
(assert (x375 x398))
(assert (x375 x125))
(assert (x375 x1714))
(assert (x375 x150))
(assert (x375 x1160))
(assert (not (x1045 (x920 x410 x1653 x152 x329 x1495))))
(assert (< 10000 (x618 64 x1416 3)))
(assert (= (x1642 (x920 x1018 x1115 x621 x1231 x742)) x1115))
(assert (not (x1045 (x618 64 x1767 x721))))
(assert (x375 x531))
(assert (< (x934 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1336 39095828447348766818467541868648093896559026265977760979361568868651215582053) 0))
(assert (< 10000 (x920 x1082 x512 x1129 x1600 x415)))
(assert (= x1788 (x791 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (= (x266 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) x668))
(assert (x375 x692))
(assert (x375 x1528))
(assert (x375 x588))
(assert (not (x1045 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x1442 3)))
(assert (x375 x923))
(assert (x375 x668))
(assert (x375 x227))
(assert (x375 x766))
(assert (x759 x625))
(assert (x375 x200))
(assert (= (and x1780 x1089) x284))
(assert (= (x266 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)) x1488))
(assert (= (x791 (x1107 x1018 x246 x137 x1477 x851 x405 x476)) x476))
(assert (= x538 (x1642 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (= x740 (x266 (x1454 x444 x191 x1746 x732 x785 x740))))
(assert (= (x791 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)) x491))
(assert (< (x920 x1709 x845 x605 x917 x910) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x618 x615 x624 x1399)))
(assert (= (x470 (x920 x1082 x512 x1129 x1600 x415)) x1129))
(assert (= x1018 (x837 (x1454 x1018 x836 x1723 x1513 x1468 x915))))
(assert (x375 x1276))
(assert (x375 x696))
(assert (=> (>= 10000 x1599) (= 0 (x1336 x1599))))
(assert (= x1184 (x1730 (x920 x444 x1156 x931 x1184 x106))))
(assert (x375 x322))
(assert (> (x1107 x1709 x301 x623 x953 x150 x1578 x1640) 10000))
(assert (x375 x620))
(assert (=> (>= 10000 x996) (= (x1336 x996) 0)))
(assert (x375 x635))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x920 x1018 x1115 x621 x1231 x742)))
(assert (x375 x562))
(assert (x375 x1430))
(assert (=> (>= 10000 x1494) (= 0 (x1336 x1494))))
(assert (= (x1642 (x682 x1082 x408)) x408))
(assert (= (x470 (x1498 x486 x1265 x1025 x187)) x1025))
(assert (= x444 (x837 (x920 x444 x1156 x931 x1184 x106))))
(assert (x375 x510))
(assert (=> (>= 10000 x288) (= (x1336 x288) 0)))
(assert (x375 x1215))
(assert (x375 x874))
(assert (=> (>= 10000 x887) (= 0 (x1336 x887))))
(assert (x375 x1058))
(assert (not (x1045 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119))))
(assert (x375 x1195))
(assert (= x680 (=> (and (= x1450 (+ x1638 1)) (<= x1030 18446744073709551550) (or (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639684) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (and (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639747) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639805)) (and (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x545)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x545)) (>= x263 1) (not (= x19 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x176 1) (< x1490 x376) (> x1049 x376) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1030) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (= (x1095 1461501637330902918203684832716283019655932542975 x1076) x635) (= x247 0) (> x545 x19) (<= x263 1099511627775) (= (ite (not (= 0 x448)) 1 0) x1451) (not (< x19 x825)) (= x1490 (x938 (+ x545 64))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x19)) (= (x938 (+ x1030 32)) x193) (> x19 x825) (or (<= x1030 18446744073709551487) (>= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x495 (x701 x1735)) (> x825 x1030) (= x1735 (x618 64 x1416 4)) (= (x938 (+ 32 x545)) x1063) (= (x618 64 x1416 3) x1638) (= (+ 5 x1638) x721) (not (< x1058 x160)) (= (> x16 0) x977) (= x369 (x938 (+ x19 32))) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639931) (<= x448 1) (= x1076 (x429 x193)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x545) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x545) (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x545) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639868)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x545) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x545) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639742 x545))) (= x420 (ite (= x210 x635) (ite (not (= x210 0)) 1 0) (ite (= x210 x635) 1 0))) (>= 18446744073709551550 x1030) (<= x495 16777215) (= x160 (x1095 1099511627775 x949)) (or (>= 18446744073709551487 x1030) (>= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (= x1451 x448) (= (x429 x1030) x448) (= x376 (x938 (+ x1490 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x545) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x19) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x938 (+ 64 x1049)) x1258) (= (+ x825 64) x19) (= x1049 (x938 (+ 64 x376))) (>= x4 1) (= (+ 1 x1735) x546) (= x481 (x618 64 x1767 x721)) (= 1 x420) (or (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (>= x545 115792089237316195423570985008687907853269984665640564039457584007913129639684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639742 x545)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x545) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x545)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x545) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x545) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x545))) (> x1490 x545) (= x825 (x938 (+ x1030 64))) (<= x1058 1099511627775) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x545 (x938 (+ x19 64))) (<= x545 115792089237316195423570985008687907853269984665640564039457584007913129639931) (= x290 (x648 x546)) (<= x1030 115792089237316195423570985008687907853269984665640564039457584007913129639870) (> x1258 x1049) (= (x1444 x481) x247) (= x1058 (x898 x1450)) (= x263 (x898 x1450)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x19)) (= x783 (x938 (+ x1490 32)))) (and (=> (and (and (= x1251 (> x16 1)) (>= 18446744073709551615 x16) (>= x16 1)) x977) (and (=> (and (and (and (= x492 (+ x899 32)) (>= 340282366920938463463374607431768211455 x787) (= (x321 (- x504 x899)) x995) (>= x16 2) (or (and (= (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1535 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1535 x423)) (and (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1535 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (> x88 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x423)) (and (= (<= x88 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x88 x423))) (= x1400 (ite x1432 1 0)) (<= x1434 340282366920938463463374607431768211455) (= x88 (x1445 x492)) (= x1535 (x1445 x899)) (or (<= x88 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x88)) (= (x1445 x381) x787) (= x1434 (x1445 x1029)) (or (<= x1535 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1535)) (= (x938 (+ x899 x1535)) x47) (= (x321 (- x995 95)) x423) (>= 18446744073709551615 x16) (= x381 (x938 (+ 32 x509))) (= x1029 (x938 (+ 32 x47))) (= (x938 (+ x88 x899)) x509) (= (not (= x1434 x787)) x1432)) (or (and x1432 (= x1400 1)) (and (not x1432) (and (or (>= x756 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x756)) (>= 1461501637330902918203684832716283019655932542975 x1370) (= x1284 (x938 (+ x756 x899))) (not (= x1370 x340)) (= x1647 (x938 (+ x899 x231))) (= (x1445 x1284) x1370) (= (x1445 x899) x231) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x756) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x423)) (< x756 x423)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x756) (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x340 1461501637330902918203684832716283019655932542975) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x231) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x231)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x423)) (> x423 x231)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231) (<= x423 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x756 (x1445 x492)) (= x340 (x1445 x1647)))))) x1251) x1499) (=> (and (= x1258 x296) (not x1251)) x1781))) (=> (and (not x977) (and (= 0 x268) (= x1258 x1310))) x777)))))
(assert (= x24 (and x852 (not x497))))
(assert (= (x920 x1082 x512 x1129 x1600 x415) (x1336 (x920 x1082 x512 x1129 x1600 x415))))
(assert (=> (>= 10000 x137) (= 0 (x1336 x137))))
(assert (not (x1045 (x1498 x410 x1784 x203 x535))))
(assert (x375 x1378))
(assert (= (x1336 18446744073709551550) 0))
(assert (x375 x1012))
(assert (> (x920 x615 x97 x1024 x1191 x304) 10000))
(assert (= (x470 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)) x623))
(assert (x375 x1441))
(assert (not (x1045 (x1454 x615 x1421 x950 x891 x1294 x998))))
(assert (= (x266 (x1454 x410 x1333 x1237 x1731 x887 x696)) x696))
(assert (x375 x587))
(assert (= x486 (x837 (x1454 x486 x1128 x878 x79 x120 x1579))))
(assert (x387 x1728 1461501637330902918203684832716283019655932542976))
(assert (< (x1498 x444 x1410 x323 x790) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1705))
(assert (x375 x136))
(assert (= (x1336 (x1454 x444 x191 x1746 x732 x785 x740)) (x1454 x444 x191 x1746 x732 x785 x740)))
(assert (x375 x655))
(assert (= (x1336 x1218) (x1336 (+ x1218 1))))
(assert (= x875 (x470 (x618 x1709 x319 x875))))
(assert (x375 x1270))
(assert (x1651 x571))
(assert (=> (<= x1197 10000) (= 0 (x1336 x1197))))
(assert (= (and x52 (not x578)) x988))
(assert (x375 x616))
(assert (=> (>= 10000 x950) (= 0 (x1336 x950))))
(assert (x375 x719))
(assert (=> (<= x811 10000) (= (x1336 x811) 0)))
(assert (x375 x1294))
(assert (x375 x1073))
(assert (x375 x740))
(assert (= (x27 (x1107 x486 x1178 x311 x1361 x751 x333 x890)) x751))
(assert (=> (<= x372 10000) (= (x1336 x372) 0)))
(assert (x375 x504))
(assert (= x919 (x752 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 x615 x1596 x530 x586)))
(assert (=> (>= 10000 x1477) (= 0 (x1336 x1477))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1107 x1018 x246 x137 x1477 x851 x405 x476)))
(assert (= (=> (and (= (x148 x882) x1082) (= x207 (x321 (- x1423 32))) (= x1405 (>= 224 x1082)) (= (x321 (- x832 x882)) x1423) (< x882 x832) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x882) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x882) (= x832 (x938 (+ x1044 x1620))) (= x1484 (x938 (+ x882 32))) (<= 1 x832) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x882)) (and x1405 (=> (and (= (x938 (+ x1484 32)) x666) (= (x938 (+ x1484 160)) x30) (= (x938 (+ x1484 64)) x1549) (= (x938 (+ 64 x1484)) x864) (<= x298 1461501637330902918203684832716283019655932542975) (= (x938 (+ 32 x1484)) x261) (= x1185 (x938 (+ 96 x1484))) (= (x321 (- x610 x832)) x1312) (= x1618 (x148 x1549)) (= (x938 (+ 96 x1484)) x12) (= (x148 x1689) x307) (= x989 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) (<= 1 x16) (= x512 (x148 x1484)) (= (x938 (+ x1484 128)) x529) (= (x938 (+ 32 x968)) x684) (= (x938 (+ x1484 96)) x37) (= x1276 (x148 x74)) (= x906 (x934 0)) (= x293 (x938 (+ 192 x1484))) (= x543 (x938 (+ x1484 32))) (= (x938 (+ x1484 96)) x74) (= (x148 x293) x1290) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x832) (>= x832 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (<= x832 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 1 x832))) (<= x1031 340282366920938463463374607431768211455) (>= 18446744073709551615 x16) (= (x938 (+ x899 x1239)) x347) (= x1073 (x148 x1083)) (= (x148 x955) x1129) (= x1174 (x148 x1484)) (= (x148 x260) x1671) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x695) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x695)) (= (x148 x261) x158) (= x346 (x148 x1491)) (= (x938 (+ x1484 128)) x1689) (= (x938 (+ x1152 32)) x601) (= x979 (x682 x1082 x408)) (= x955 (x938 (+ 32 x1484))) (= x21 (x148 x1484)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1239) (<= x1239 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= (x1445 x684) x1031) (= (<= x410 224) x168) (= (x1445 x899) x1239) (= x415 (x148 x37)) (= x1599 (x148 x1185)) (= (x1498 x1082 x1174 x672 x386) x221) (= x1159 (x938 (+ x832 32))) (= x764 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) (= x1491 (x938 (+ x1484 64))) (= x1732 (x618 x1082 x507 x158)) (= x809 (x148 x1484)) (= x408 (x148 x1484)) (= (x1454 x1082 x1556 x1671 x1226 x241 x1073) x644) (= x241 (x148 x12)) (= x968 (x938 (+ x695 x899))) (= (x1456 x832) x410) (= x847 (x938 (+ 64 x1484))) (= x754 (x148 x543)) (= x640 (ite (= 0 x1082) x906 (ite (<= x1082 32) x979 (ite (<= x1082 64) x1732 (ite (<= x1082 96) x221 (ite (>= 128 x1082) x1087 (ite (>= 160 x1082) x644 (ite (<= x1082 192) x764 (ite (<= x1082 224) x989 x1670))))))))) (= x386 (x148 x1552)) (= (x321 (- x844 95)) x1502) (= x260 (x938 (+ 32 x1484))) (= (x938 (+ 32 x832)) x1152) (= (x148 x1484) x507) (= (x938 (+ 64 x1484)) x1552) (= x1226 (x148 x864)) (= (x938 (+ x601 32)) x636) (> x610 x832) (= x1087 (x920 x1082 x512 x1129 x1600 x415)) (= (x938 (+ 160 x1484)) x1067) (= (x148 x1067) x1726) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1502) (<= x1239 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1239 x1502)) (and (<= x1502 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1239))) (= (x148 x529) x1649) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1502) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x695)) (and (> x1502 x695) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x695) (<= x1502 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x156 (x321 (- x1312 32))) (= x672 (x148 x666)) (= x1769 (x148 x297)) (= x298 (x1445 x347)) (= (x938 (+ x1484 32)) x297) (= (x148 x30) x1119) (= x844 (x321 (- x504 x899))) (= x695 (x1445 x899)) (= (x938 (+ 96 x1152)) x610) (= x1600 (x148 x847)) (= (x148 x1484) x1556) (= (x938 (+ 128 x1484)) x1083)) (and x168 (=> (and (= x692 (x938 (+ 96 x1159))) (= x90 (x938 (+ x1159 64))) (= (x1107 x410 x111 x1791 x109 x89 x373 x1788) x238) (= (x938 (+ x1159 128)) x1749) (= x1150 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) (= (x938 (+ 160 x1159)) x645) (= (x1456 x1159) x1653) (= (x938 (+ x1159 64)) x1100) (<= 1 x1362) (= (x938 (+ x1159 32)) x1039) (= (x938 (+ 192 x1159)) x1077) (= (x1456 x1110) x275) (= x109 (x1456 x892)) (= (ite (= 0 x410) x1207 (ite (<= x410 32) x172 (ite (<= x410 64) x918 (ite (>= 96 x410) x554 (ite (>= 128 x410) x1236 (ite (>= 160 x410) x727 (ite (<= x410 192) x238 (ite (<= x410 224) x1150 x1096)))))))) x490) (= (x938 (+ 128 x1159)) x1738) (= x573 (x938 (+ x1159 160))) (= x1207 (x934 0)) (= x1733 (x938 (+ x1159 32))) (= x212 (x938 (+ x1159 32))) (= (x938 (+ x1159 64)) x1528) (= x1495 (x1456 x745)) (= (x1456 x1733) x152) (= x172 (x682 x410 x736)) (= x892 (x938 (+ x1159 64))) (= (x938 (+ 32 x1159)) x220) (= (x1456 x826) x89) (= (x1456 x1021) x1362) (= x373 (x1456 x1124)) (= (x1456 x90) x329) (= x554 (x1498 x410 x1784 x203 x535)) (= (x1454 x410 x1333 x1237 x1731 x887 x696) x727) (= (x1456 x1159) x1784) (= (x1456 x677) x1237) (= x111 (x1456 x1159)) (= x1350 (x1456 x212)) (= x1236 (x920 x410 x1653 x152 x329 x1495)) (= (x1456 x1415) x1731) (= x1788 (x1456 x645)) (= x696 (x1456 x1738)) (= x1371 (x1456 x1159)) (= x1777 (x1456 x940)) (= x1333 (x1456 x1159)) (= x826 (x938 (+ 96 x1159))) (= x1415 (x938 (+ x1159 64))) (= (x1456 x692) x887) (= (x938 (+ x1159 96)) x1110) (= (x938 (+ 128 x1159)) x1124) (= (x938 (+ 32 x1159)) x677) (= x736 (x1456 x1159)) (= (+ x1021 32) x877) (= x940 (x938 (+ x1159 32))) (= x918 (x618 x410 x1674 x1350)) (= x668 (x1456 x1749)) (= x745 (x938 (+ 96 x1159))) (= (x1456 x220) x203) (= x535 (x1456 x1528)) (= (x1456 x1100) x157) (= x632 (not (< 1 x16))) (= x1166 (x1456 x573)) (= x1791 (x1456 x1039)) (= (x1456 x1077) x827) (= x1674 (x1456 x1159))) (and x632 (=> (= x49 x610) x1516))))))) x687))
(assert (x375 x1711))
(assert (= (x1336 3686331914) 0))
(assert (= (x1336 (x618 64 x881 3)) (x618 64 x881 3)))
(assert (x375 x922))
(assert (x375 x1791))
(assert (not (x1045 (x618 64 x1416 3))))
(assert (x375 x473))
(assert (x375 x1038))
(assert (=> (>= 10000 x1231) (= 0 (x1336 x1231))))
(assert (=> (>= 10000 x1399) (= 0 (x1336 x1399))))
(assert (x375 x1249))
(assert (x375 x340))
(assert (x375 x231))
(assert (x375 x1069))
(assert (< 10000 (x934 0)))
(assert (x387 x1639 1461501637330902918203684832716283019655932542976))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (x375 x1577))
(assert (= (x470 (x618 x410 x1674 x1350)) x1350))
(assert (> (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119) 10000))
(assert (x375 x751))
(assert (< 10000 (x920 x444 x1156 x931 x1184 x106)))
(assert (= (x1642 (x618 64 x1767 x721)) x1767))
(assert (= (x1730 (x1107 x528 x409 x217 x359 x811 x299 x288)) x359))
(assert (= (x1730 (x920 x1082 x512 x1129 x1600 x415)) x1600))
(assert (x375 x1105))
(assert (x375 x1551))
(assert (x375 x645))
(assert (x375 x1063))
(assert (x387 x949 1099511627776))
(assert (= (=> (and (= (x938 (+ x72 96)) x218) (= (x73 x1057) x1357) (= x1057 (x938 (+ x280 96))) (= x828 (not (< 128 x916)))) (and x741 x828)) x697))
(assert (=> (<= x2 10000) (= 0 (x1336 x2))))
(assert (> (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919) 10000))
(assert (x794 x625))
(assert (= (x682 x444 x1000) (x1336 (x682 x444 x1000))))
(assert (x375 x280))
(assert (= (x1642 (x618 64 x1508 3)) x1508))
(assert (x375 x144))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (x375 x602))
(assert (x375 x853))
(assert (=> (>= 10000 x1777) (= 0 (x1336 x1777))))
(assert (= (and x198 (not x306)) x1589))
(assert (= (x791 (x1107 x528 x409 x217 x359 x811 x299 x288)) x288))
(assert (x375 x1362))
(assert (x375 x217))
(assert (x375 x1488))
(assert (=> (>= 10000 x1746) (= 0 (x1336 x1746))))
(assert (= x322 (x470 (x618 x444 x142 x322))))
(assert (x375 x515))
(assert (x375 x417))
(assert (= x589 (=> (and (<= 1 x1211) (>= x1425 1) (= x1211 x1425) (= x718 (>= 224 x1018)) (= x391 (x321 (- x1474 32))) (= x1627 x1133) (= x1776 (* 32 x276)) (<= x276 4) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1327) (= x1133 (+ x1776 x1163)) (= x1384 x276) (= x1587 (* 32 x276)) (<= x1327 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1425 (x938 (+ x1713 x1587))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1327) (> x1211 x1327) (= x3 (x938 (+ x1327 32))) (= (x1759 x1327) x1018) (= x1474 (x321 (- x1211 x1327)))) (and (=> (and (= x1463 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) (or (and (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x1211)) (and (>= x1211 1) (<= x1211 115792089237316195423570985008687907853269984665640564039457584007913129639711))) (= (x682 x1018 x438) x1212) (= (x938 (+ x3 128)) x457) (= x872 (x938 (+ x3 96))) (= x315 (x938 (+ x870 32))) (= x1635 (x938 (+ x3 128))) (= x870 (x938 (+ x1211 32))) (= x1387 (x1759 x735)) (= x1332 (x934 0)) (= (x938 (+ 32 x29)) x1561) (= (>= 224 x1709) x1563) (= x57 (x938 (+ 160 x3))) (= (x1759 x1394) x1560) (= (x1759 x1681) x1231) (= x1001 (x1759 x1055)) (= x1710 (x1759 x3)) (= x137 (x1759 x1538)) (= (x1759 x407) x292) (= (x1759 x457) x405) (= x438 (x1759 x3)) (= x883 (x1759 x57)) (= x1108 (x321 (- x670 32))) (= (x938 (+ 32 x1569)) x1459) (= (x920 x1018 x1115 x621 x1231 x742) x1022) (= (x1759 x3) x1115) (= x1179 (x938 (+ 64 x3))) (= (x938 (+ x3 32)) x1538) (= (x1759 x1635) x915) (= (x1759 x103) x1723) (= (x1759 x3) x78) (= x621 (x1759 x1305)) (= (x938 (+ x3 96)) x1520) (= x1477 (x1759 x1773)) (= (x938 (+ x1561 32)) x1569) (= x735 (x938 (+ 32 x3))) (= (x938 (+ x3 32)) x1305) (= x11 (x938 (+ 64 x3))) (= (x938 (+ x870 192)) x1414) (= (x938 (+ x1211 32)) x1753) (= x1681 (x938 (+ 64 x3))) (= (ite (= x1018 0) x1332 (ite (<= x1018 32) x1212 (ite (<= x1018 64) x1120 (ite (>= 96 x1018) x1436 (ite (>= 128 x1018) x1022 (ite (>= 160 x1018) x807 (ite (>= 192 x1018) x932 (ite (<= x1018 224) x1463 x1007)))))))) x642) (= (x938 (+ x3 32)) x1055) (= x1513 (x1759 x11)) (< x1211 x1414) (= (x1759 x804) x1468) (= x702 (x1759 x1179)) (= (x1759 x1291) x533) (= (x618 x1018 x1742 x1387) x1120) (= x1709 (x65 x1211)) (= (x938 (+ 96 x3)) x804) (= (x938 (+ x3 128)) x1571) (= (x938 (+ x3 96)) x407) (= (ite (not (= 0 x377)) 1 0) x1604) (= x932 (x1107 x1018 x246 x137 x1477 x851 x405 x476)) (= x1773 (x938 (+ 64 x3))) (= x1247 (x1759 x679)) (= x742 (x1759 x1520)) (= x836 (x1759 x3)) (= x1394 (x938 (+ x3 32))) (= x1291 (x938 (+ x3 192))) (= x897 (x938 (+ x3 160))) (= (x1454 x1018 x836 x1723 x1513 x1468 x915) x807) (= (x1759 x897) x476) (= (x1759 x872) x851) (= (x938 (+ x315 32)) x29) (= x679 (x938 (+ 64 x3))) (= (x321 (- x1414 x1211)) x670) (= (x1759 x3) x246) (= x560 (x1759 x1571)) (= x1742 (x1759 x3)) (= x103 (x938 (+ 32 x3))) (= x1436 (x1498 x1018 x1710 x1001 x1247))) (and x1563 (=> (and (and (= x75 (x65 x903)) (= (x65 x1249) x722) (= x1164 (x938 (+ x1753 160))) (= x623 (x65 x1527)) (= x1640 (x65 x1164)) (= (x65 x1753) x1369) (= x301 (x65 x1753)) (= (x65 x1753) x1306) (= x401 (x938 (+ 96 x1753))) (= x815 (= x335 x341)) (= (x938 (+ 32 x1753)) x1307) (= (x65 x1753) x316) (= x1716 (x938 (+ x1753 192))) (= (x65 x805) x957) (= (x65 x1487) x1411) (= (x1498 x1709 x1369 x75 x1699) x675) (= (x938 (+ 96 x1753)) x136) (= (x938 (+ 64 x1753)) x664) (= x845 (x65 x1753)) (= (x65 x664) x1555) (= x1005 (x938 (+ x1753 64))) (= x726 (x938 (+ 64 x1753))) (= x455 (x65 x1716)) (= (x938 (+ x1753 128)) x1340) (= (x65 x136) x355) (= (x65 x1753) x319) (= (x938 (+ x1753 32)) x903) (= x1793 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)) (= x1487 (x938 (+ x1753 128))) (= x1027 (x1454 x1709 x1306 x957 x1555 x1797 x453)) (= x150 (x65 x1051)) (= x805 (x938 (+ 32 x1753))) (= (ite (= 0 x1709) x281 (ite (>= 32 x1709) x1059 (ite (<= x1709 64) x215 (ite (<= x1709 96) x675 (ite (>= 128 x1709) x1655 (ite (<= x1709 160) x1027 (ite (<= x1709 192) x1793 (ite (>= 224 x1709) x1052 x1718)))))))) x245) (= x453 (x65 x1340)) (= x590 (x65 x1753)) (= x1059 (x682 x1709 x316)) (= x910 (x65 x649)) (= (x938 (+ x1753 64)) x1249) (= (x938 (+ x1753 160)) x1722) (= x649 (x938 (+ 96 x1753))) (= x1655 (x920 x1709 x845 x605 x917 x910)) (= (x938 (+ x1753 96)) x1051) (= (x934 0) x281) (= x1797 (x65 x401)) (= (x938 (+ 128 x1753)) x853) (= (x938 (+ x1753 64)) x295) (= x1699 (x65 x295)) (= (x65 x726) x953) (= (x65 x1630) x605) (= (x65 x1005) x917) (= (x618 x1709 x319 x875) x215) (= (x65 x1722) x395) (= (x65 x842) x875) (= (x938 (+ x1753 32)) x1630) (= x1578 (x65 x853)) (= (x65 x1307) x1363) (= (x938 (+ 32 x1753)) x1527) (= (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455) x1052) (= (x938 (+ 32 x1753)) x842)) (or (and (not x815) (= (ite x815 1 0) x766)) (and (= (ite (= x532 x1609) 1 0) x766) x815))) x1285))) x718))))
(assert (x375 x1039))
(assert (= (x837 (x1454 x1709 x1306 x957 x1555 x1797 x453)) x1709))
(assert (=> (>= 10000 x217) (= 0 (x1336 x217))))
(assert (x375 x742))
(assert (=> (<= x282 10000) (= (x1336 x282) 0)))
(assert (< (x1454 x486 x1128 x878 x79 x120 x1579) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x672) (= (x1336 x672) 0)))
(assert (x375 x1216))
(assert (x1321 x602))
(assert (x375 x1306))
(assert (x375 x1123))
(assert (x375 x919))
(assert (= (x1336 (x618 x528 x1126 x69)) (x618 x528 x1126 x69)))
(assert (= x1018 (x837 (x618 x1018 x1742 x1387))))
(assert (> (x1107 x486 x1178 x311 x1361 x751 x333 x890) 10000))
(assert (x375 x369))
(assert (= x827 (x752 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827))))
(assert (= (and x1344 (not x135)) x817))
(assert (x1045 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (x375 x769))
(assert (= (x1336 (+ 1 x1592)) (x1336 x1592)))
(assert (= (=> (and (= x1154 (x938 (+ x1258 64))) (not (= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x938 (+ x1258 32)) x77) (= x1770 (not (> x16 2))) (< x1258 x1154) (<= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1258)) (<= x1258 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (= x1154 x296) x1781) x1770)) x1499))
(assert (x1321 x1669))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639742) 0))
(assert (=> (<= x953 10000) (= (x1336 x953) 0)))
(assert (= (x470 (x618 64 x1767 x721)) x721))
(assert (= (or x70 x1598) x1344))
(assert (= 0 (x1336 22703984782402238635145372884546502928383168074851703611862639686610164121600)))
(assert (= x444 (x837 (x618 x444 x142 x322))))
(assert (= x1406 (x470 (x1498 66 x1582 x1406 x372))))
(assert (= x388 (and (not x190) x1505)))
(assert (not x706))
(assert (x375 x1600))
(assert (x1045 3686331914))
(assert (= (x1336 4067465820) 0))
(assert (=> (<= x1121 10000) (= (x1336 x1121) 0)))
(assert (=> (<= x957 10000) (= (x1336 x957) 0)))
(assert (x1045 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (x375 x823))
(assert (=> (<= x859 10000) (= 0 (x1336 x859))))
(assert (x375 x1474))
(assert (x375 x1023))
(assert (= x1665 (x266 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945))))
(assert (x375 x521))
(assert (x375 x738))
(assert (x375 x1731))
(assert (= (x837 (x920 x528 x806 x165 x1688 x2)) x528))
(assert (x375 x691))
(assert (= (x1336 (x934 0)) (x934 0)))
(assert (x375 x251))
(assert (= (x1642 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) x809))
(assert (x375 x48))
(assert (=> (>= 10000 x1618) (= (x1336 x1618) 0)))
(assert (= (x27 (x920 x1018 x1115 x621 x1231 x742)) x742))
(assert (= (x1336 24068214603859720034826088920346711864364023158142564334732402816841156945010) 0))
(assert (x375 x1390))
(assert (= x1149 (x27 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (x375 x142))
(assert (x375 x1684))
(assert (= (x27 (x1454 x1018 x836 x1723 x1513 x1468 x915)) x1468))
(assert (= (x1336 (x1107 x410 x111 x1791 x109 x89 x373 x1788)) (x1107 x410 x111 x1791 x109 x89 x373 x1788)))
(assert (> (x618 64 x1416 4) 10000))
(assert (x375 x799))
(assert (x375 x496))
(assert (= x464 (x470 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x920 x615 x97 x1024 x1191 x304)))
(assert (= (x1336 (+ 1 x338)) (x1336 x338)))
(assert (x375 x1076))
(assert (= x722 (x1730 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455))))
(assert (x375 x352))
(assert (x375 x157))
(assert (x375 x814))
(assert (x375 x1158))
(assert (x375 x50))
(assert (=> (<= x131 10000) (= (x1336 x131) 0)))
(assert (x375 x45))
(assert (x375 x865))
(assert (x375 x343))
(assert (= (x1730 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) x702))
(assert (x375 x548))
(assert (x375 x1507))
(assert (x375 x1104))
(assert (x375 x684))
(assert (= (x837 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x486))
(assert (= (x618 x1018 x1742 x1387) (x1336 (x618 x1018 x1742 x1387))))
(assert (x375 x805))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 x1018 x1710 x1001 x1247)))
(assert (x375 x1126))
(assert (x375 x79))
(assert (< (x618 64 x1389 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x470 (x618 64 x1442 3)) 3))
(assert (not (x1045 (x618 64 x131 3))))
(assert (x375 x291))
(assert (x375 x1726))
(assert (x375 x566))
(assert (x375 x20))
(assert (= x410 (x837 (x920 x410 x1653 x152 x329 x1495))))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639931)))
(assert (x375 x384))
(assert (x375 x392))
(assert (= x410 (x837 (x618 x410 x1674 x1350))))
(assert (x375 x464))
(assert (= (x1642 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) x1371))
(assert (x375 x1632))
(assert (not (x1045 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290))))
(assert (x375 x950))
(assert (=> (<= x444 10000) (= 0 (x1336 x444))))
(assert (x387 x364 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x878 10000) (= (x1336 x878) 0)))
(assert (x375 x1164))
(assert (x375 x158))
(assert (x375 x422))
(assert (x375 x1096))
(assert (x375 x664))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (x375 x1669))
(assert (< (x1454 x1709 x1306 x957 x1555 x1797 x453) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x1045 (x1454 x410 x1333 x1237 x1731 x887 x696))))
(assert (= x301 (x1642 (x1107 x1709 x301 x623 x953 x150 x1578 x1640))))
(assert (x375 x1485))
(assert (x375 x864))
(assert (= (x27 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x1599))
(assert (x375 x1801))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x682 x1082 x408)))
(assert (x375 x1075))
(assert (x375 x4))
(assert (x375 x1617))
(assert (not (x1045 (x1107 x1709 x301 x623 x953 x150 x1578 x1640))))
(assert (x375 x1174))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 x486 x1265 x1025 x187)))
(assert (= x528 (x837 (x618 x528 x1126 x69))))
(assert (x375 x377))
(assert (x375 x785))
(assert (x375 x883))
(assert (= (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290) (x1336 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290))))
(assert (x375 x1477))
(assert (=> (<= x1371 10000) (= 0 (x1336 x1371))))
(assert (x375 x712))
(assert (=> (>= 10000 x272) (= 0 (x1336 x272))))
(assert (x375 x40))
(assert (< (x1454 x1082 x1556 x1671 x1226 x241 x1073) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x596 (x1642 (x1107 x615 x596 x464 x951 x151 x1104 x50))))
(assert (x375 x946))
(assert (= x1351 (and x463 (not x678))))
(assert (x375 x532))
(assert (x375 x1258))
(assert (x375 x1545))
(assert (< (x618 64 x1767 x721) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1730 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)) x953))
(assert (=> (>= 10000 x528) (= (x1336 x528) 0)))
(assert (x375 x501))
(assert (=> (>= 10000 x1104) (= 0 (x1336 x1104))))
(assert (= (x1107 x486 x1178 x311 x1361 x751 x333 x890) (x1336 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (x375 x1605))
(assert (= (x266 (x1107 x528 x409 x217 x359 x811 x299 x288)) x299))
(assert (x375 x1416))
(assert (x375 x535))
(assert (x375 x1103))
(assert (x375 x100))
(assert (x1045 18446744073709551391))
(assert (= 3 (x470 (x618 64 x730 3))))
(assert (= 4 (x470 (x618 64 x1416 4))))
(assert (x375 x544))
(assert (not (x1045 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (x375 x320))
(assert (=> (>= 10000 x845) (= 0 (x1336 x845))))
(assert (=> (<= x917 10000) (= 0 (x1336 x917))))
(assert (=> (>= 10000 x560) (= 0 (x1336 x560))))
(assert (x375 x887))
(assert (x375 x609))
(assert (x375 x442))
(assert (= (x1336 (x1498 x410 x1784 x203 x535)) (x1498 x410 x1784 x203 x535)))
(assert (x375 x182))
(assert (= (x618 64 x1767 x721) (x1336 (x618 64 x1767 x721))))
(assert (x375 x1650))
(assert (= (x1336 (x618 64 x1645 4)) (x618 64 x1645 4)))
(assert (x375 x21))
(assert (= x1489 (and x720 x186)))
(assert (x375 x1269))
(assert (x1045 1099511627775))
(assert (x375 x292))
(assert (=> (<= x241 10000) (= (x1336 x241) 0)))
(assert (= (x1642 (x1498 66 x1582 x1406 x372)) x1582))
(assert (x375 x12))
(assert (x375 x226))
(assert (= (x266 (x1454 x615 x1421 x950 x891 x1294 x998)) x998))
(assert (= (x1336 (+ x711 1)) (x1336 x711)))
(assert (= x1018 (x837 (x1498 x1018 x1710 x1001 x1247))))
(assert (= (=> (and (<= x922 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x456 (x235 x922)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x922) (not (= x922 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1046 (x938 (+ x922 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x922)) (<= x922 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (not (> x16 1)) x400) (not (= x922 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x922 x1046) (>= x1299 1)) (and (=> (and (= x1046 x1310) (= x456 x268)) x777) x400)) x755))
(assert (x375 x444))
(assert (=> (<= x740 10000) (= 0 (x1336 x740))))
(assert (=> (>= 10000 x78) (= (x1336 x78) 0)))
(assert (x375 x115))
(assert (x375 x171))
(assert (= x797 (x791 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105))))
(assert (x375 x205))
(assert (x375 x1304))
(assert (=> (>= 10000 x97) (= 0 (x1336 x97))))
(assert (=> (<= x1172 10000) (= 0 (x1336 x1172))))
(assert (=> (>= 10000 x850) (= 0 (x1336 x850))))
(assert (x375 x268))
(assert (=> (>= 10000 x1448) (= 0 (x1336 x1448))))
(assert (x375 x74))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x375 x849))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x682 x615 x962)))
(assert (not (x1045 (x618 64 x226 4))))
(assert (=> (<= x1129 10000) (= 0 (x1336 x1129))))
(assert (=> (>= 10000 x187) (= 0 (x1336 x187))))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x375 x1738))
(assert (x1338 x1639))
(assert (x375 x869))
(assert (x375 x1496))
(assert (x375 x1549))
(assert (= (x1730 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x1618))
(assert (x375 x1083))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (x375 x843))
(assert (= x1764 (x1642 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919))))
(assert (= (x1642 (x682 x410 x736)) x736))
(assert (x375 x1298))
(assert (x375 x323))
(assert (= x150 (x27 (x1107 x1709 x301 x623 x953 x150 x1578 x1640))))
(assert (x375 x1185))
(assert (x375 x1068))
(assert (=> (<= x1784 10000) (= 0 (x1336 x1784))))
(assert (x375 x151))
(assert (x375 x1028))
(assert (x375 x1468))
(assert (x375 x314))
(assert (= x165 (x470 (x920 x528 x806 x165 x1688 x2))))
(assert (= (x1336 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (= (and x786 x1432) x23))
(assert (= x55 (and (not x977) x1060)))
(assert (< 10000 (x618 64 x782 3)))
(assert (> (x920 x1709 x845 x605 x917 x910) 10000))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (x375 x634))
(assert (x375 x282))
(assert (x1045 911662625))
(assert (= (or x1401 x440 x1452) x963))
(assert (=> (>= 10000 x919) (= (x1336 x919) 0)))
(assert (x375 x345))
(assert (= x75 (x470 (x1498 x1709 x1369 x75 x1699))))
(assert (x375 x539))
(assert (x375 x1222))
(assert (x375 x134))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x375 x457))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639679)))
(assert (x375 x1571))
(assert (= (x27 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)) x355))
(assert (x375 x175))
(assert (=> (<= x111 10000) (= 0 (x1336 x111))))
(assert (= (x1336 x607) (x1336 (+ 1 x607))))
(assert (x375 x1021))
(assert (x375 x1649))
(assert (= x512 (x1642 (x920 x1082 x512 x1129 x1600 x415))))
(assert (= (x470 (x618 x615 x624 x1399)) x1399))
(assert (= (x470 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) x754))
(assert (x375 x571))
(assert (=> (<= x685 10000) (= 0 (x1336 x685))))
(assert (= (x470 (x618 64 x1645 4)) 4))
(assert (x375 x395))
(assert (x375 x1394))
(assert (x375 x856))
(assert (not (x1045 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448))))
(assert (= (x1642 (x618 x1082 x507 x158)) x507))
(assert (x1651 1461501637330902918203684832716283019655932542976))
(assert (x375 x191))
(assert (x375 x85))
(assert (=> (>= 10000 x915) (= 0 (x1336 x915))))
(assert (x375 x622))
(assert (x794 x506))
(assert (=> (>= 10000 x449) (= 0 (x1336 x449))))
(assert (= x96 (and x1373 (not x62))))
(assert (not (x1045 (x1454 x1018 x836 x1723 x1513 x1468 x915))))
(assert (x375 x677))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (= x1578 (x266 (x1107 x1709 x301 x623 x953 x150 x1578 x1640))))
(assert (= x845 (x1642 (x920 x1709 x845 x605 x917 x910))))
(assert (< (x1498 x1082 x1174 x672 x386) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1045 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (x375 x1188))
(assert (= (x470 (x1454 x528 x389 x731 x1494 x1192 x1172)) x731))
(assert (= (x1336 x1695) (x1336 (+ x1695 1))))
(assert (x375 x133))
(assert (= (x791 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533)) x883))
(assert (= x1082 (x837 (x682 x1082 x408))))
(assert (=> (>= 10000 x962) (= (x1336 x962) 0)))
(assert (= (x1107 x1018 x246 x137 x1477 x851 x405 x476) (x1336 (x1107 x1018 x246 x137 x1477 x851 x405 x476))))
(assert (= x1144 (x1642 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945))))
(assert (x375 x160))
(assert (x375 x1471))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (x375 x850))
(assert (x375 x1541))
(assert (x375 x1434))
(assert (x375 x122))
(assert (=> (<= x409 10000) (= 0 (x1336 x409))))
(assert (x1045 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (x375 x1451))
(assert (= (x1336 19198514131333069964808701557143768876432618777570657477111002777175690575872) 0))
(assert (x375 x1665))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (< 10000 (x1454 x1709 x1306 x957 x1555 x1797 x453)))
(assert (x375 x1419))
(assert (= (x1336 (+ x1450 1)) (x1336 x1450)))
(assert (x375 x649))
(assert (x375 x1428))
(assert (x375 x1341))
(assert (not (x1045 (x1498 x615 x1596 x530 x586))))
(assert (= x1726 (x791 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290))))
(assert (x375 x996))
(assert (= x241 (x27 (x1454 x1082 x1556 x1671 x1226 x241 x1073))))
(assert (=> (>= 10000 x883) (= (x1336 x883) 0)))
(assert (> (x682 x615 x962) 10000))
(assert (x375 x1384))
(assert (= x1637 (x27 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945))))
(assert (= 0 (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x375 x1664))
(assert (= (x1336 x240) (x1336 (+ 1 x240))))
(assert (x375 x416))
(assert (x375 x156))
(assert (=> (>= 10000 x621) (= (x1336 x621) 0)))
(assert (x375 x1457))
(assert (x375 x1739))
(assert (=> (<= x329 10000) (= 0 (x1336 x329))))
(assert (x375 x88))
(assert (x375 x1400))
(assert (x375 x1392))
(assert (x375 x1697))
(assert (x375 x1593))
(assert (x375 x1733))
(assert (= (x1730 (x920 x1018 x1115 x621 x1231 x742)) x1231))
(assert (x375 x695))
(assert (x375 x631))
(assert (= (x1336 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)) (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)))
(assert (= x950 (x470 (x1454 x615 x1421 x950 x891 x1294 x998))))
(assert (> (x618 64 x226 4) 10000))
(assert (x375 x1253))
(assert (< 10000 (x1107 x528 x409 x217 x359 x811 x299 x288)))
(assert (x375 x1194))
(assert (not (x1045 (x618 64 x782 3))))
(assert (x375 x1514))
(assert (x375 x787))
(assert (x375 x13))
(assert (x375 x297))
(assert (= (=> (and (and (= x1210 (ite x838 x32 x426)) x1210 (= x646 x1146) (= x1146 x1079) (= x602 36) (= x966 x1079)) (and (<= x1729 127) (= x655 (x1122 800)) (= x122 (x1464 x1572)) (= x656 (+ 1 x1572)) (= x317 x1130) (= (x1300 x1274) x1273) (= x1711 x1667) (= x196 false) (= false x662) (<= x434 340282366920938463463374607431768211455) (<= x48 1099511627775) (= (not x1796) x135) (= x1711 (x1122 832)) (= 0 x941) (= (= x458 0) x1796) (= (x1317 x1274) x1544) (<= x1257 1099511627775) (>= 340282366920938463463374607431768211455 x1296) (= x587 x256) (= x526 x1262) (= (x1142 x508) x434) (= (x1122 960) x1694) (= (x1122 864) x587) (= x655 x458) (= (x1625 x1274) x1296) (= x41 x744) (= (x898 x1274) x48) (= (x1122 768) x744) (= x274 (x618 64 x1508 3)) (= false x1597) (= x1694 x761) (= x184 false) (= x366 (x1122 928)) (= x1508 x646) (= x382 (x707 x656)) (= x1606 false) (= x508 (+ 1 x1274)) (= (+ 1 x508) x1572) (= 911662625 x473) (<= x1273 255) (>= 1099511627775 x1544) (= x522 (x46 x335)) (= false x1352) (= (ite (not (= (ite (not (= 0 x1273)) 1 0) 0)) 1 0) x1607) (= (x1153 x1274) x1257) (= (x1122 896) x526) (>= 127 x1729) (= x565 x366) (<= 1 x522) (= x1274 (+ x274 1)) (= (x1122 704) x317))) (and (=> (and (and (= true x969) (= x568 x514) (= x969 x816)) (not x135)) x1656) (=> x135 x17))) x1685))
(assert (= x1777 (x470 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827))))
(assert (x375 x453))
(assert (x713 x16))
(assert (x375 x293))
(assert (not (x1045 (x934 0))))
(assert (x375 x1749))
(assert (=> (<= x1742 10000) (= (x1336 x1742) 0)))
(assert (x375 x409))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 x410 x1784 x203 x535)))
(assert (x375 x732))
(assert (x375 x1788))
(assert (x375 x917))
(assert (> (x618 64 x730 3) 10000))
(assert (x375 x247))
(assert (< 10000 (x920 x528 x806 x165 x1688 x2)))
(assert (< (x633 x486 x1297 x885 x984 x521 x178 x324 x542) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x752 (x633 x1082 x809 x754 x346 x1276 x1649 x1726 x1290)) x1290))
(assert (= (x837 (x618 64 x1416 4)) 64))
(assert (= (x1336 x1761) (x1336 (+ x1761 1))))
(assert (x375 x1275))
(assert (=> (>= 10000 x379) (= (x1336 x379) 0)))
(assert (= (and x190 x1505) x784))
(assert (x375 x259))
(assert (x1045 1461501637330902918203684832716283019655932542975))
(assert (x375 x167))
(assert (= (x266 (x1107 x615 x596 x464 x951 x151 x1104 x50)) x1104))
(assert (= (x470 (x1454 x1082 x1556 x1671 x1226 x241 x1073)) x1671))
(assert (x375 x202))
(assert (x375 x1497))
(assert (x375 x1))
(assert (= x173 (or x1743 (and x270 x963))))
(assert (= x852 (or x331 x581)))
(assert (x375 x63))
(assert (= x790 (x1730 (x1498 x444 x1410 x323 x790))))
(assert (x375 x746))
(assert (x375 x1119))
(assert (= (x837 (x618 x1709 x319 x875)) x1709))
(assert (= x217 (x470 (x1107 x528 x409 x217 x359 x811 x299 x288))))
(assert (= (and x592 x728) x1608))
(assert (= x1407 (x27 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105))))
(assert (= x1645 (x1642 (x618 64 x1645 4))))
(assert (x375 x347))
(assert (x375 x1370))
(assert (x759 1099511627775))
(assert (=> (>= 10000 x1128) (= (x1336 x1128) 0)))
(assert (=> (<= x1038 10000) (= 0 (x1336 x1038))))
(assert (x375 x298))
(assert (= (x837 (x1498 66 x1582 x1406 x372)) 66))
(assert (= (x837 (x682 x410 x736)) x410))
(assert (x1045 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (=> (>= 10000 x507) (= 0 (x1336 x507))))
(assert (= (x266 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x307))
(assert (x1651 x506))
(assert (x1301 x949))
(assert (x375 x1177))
(assert (x375 x1645))
(assert (x375 x316))
(assert (x375 x674))
(assert (= x246 (x1642 (x1107 x1018 x246 x137 x1477 x851 x405 x476))))
(assert (< (x618 x1082 x507 x158) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x580))
(assert (x375 x253))
(assert (=> (<= x586 10000) (= 0 (x1336 x586))))
(assert (= x866 (=> (and (= (x858 256) x392) (= x1162 (not (< 128 x510))) (= (x938 (+ x1256 96)) x134)) (and x997 x1162))))
(assert (x375 x892))
(assert (= 64 (x837 (x618 64 x1508 3))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)))
(assert (= (x837 (x682 x1018 x438)) x1018))
(assert (= (x1107 x528 x409 x217 x359 x811 x299 x288) (x1336 (x1107 x528 x409 x217 x359 x811 x299 x288))))
(assert (x375 x870))
(assert (= (x1642 (x618 x486 x1806 x1269)) x1806))
(assert (x375 x1663))
(assert (x1045 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (=> (>= 10000 x491) (= (x1336 x491) 0)))
(assert (=> (<= x106 10000) (= (x1336 x106) 0)))
(assert (= (x1336 4294967295) 0))
(assert (> (x920 x1018 x1115 x621 x1231 x742) 10000))
(assert (x375 x372))
(assert (x1045 4294967295))
(assert (= x1278 (=> (and (= (x938 (+ 32 x1486)) x1803) (= x550 (>= 224 x615)) (< x353 x118) (= (x938 (+ x118 32)) x1591) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x353) (= (+ 1 x1695) x277) (= x615 (x237 x1486)) (= x629 (x938 (+ x1486 32))) (= (x938 (+ x353 32)) x239) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639932) (< x1486 x92) (= (x321 (- x719 32)) x698) (= (x321 (- x92 x1486)) x719) (= x1695 (x618 64 x1416 4)) (= x99 (x938 (+ 32 x1803))) (= x1766 (x1095 1461501637330902918203684832716283019655932542975 x1728)) (= x92 (x938 (+ x99 32))) (or (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639711) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x353) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639869)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x353) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x353))) (< x118 x1486) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x353) (and (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x353)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x353) (and (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639806) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x353))) (= 9 x580) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639932) (= 1 x82) (= x432 (x648 x277)) (<= x1767 1461501637330902918203684832716283019655932542975) (= x82 (ite (= x210 x1766) (ite (not (= (x1095 1461501637330902918203684832716283019655932542975 x1728) 0)) 1 0) (ite (= x1766 x210) 1 0))) (= x118 (x938 (+ 64 x353))) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x353) (>= x353 115792089237316195423570985008687907853269984665640564039457584007913129639873) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x353) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639806)) (and (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x353))) (>= x1767 1) (= (x938 (+ 64 x118)) x1486)) (and (=> (and (= (x938 (+ 32 x629)) x1304) (= x773 (x1498 x615 x1596 x530 x586)) (= x1200 (x237 x629)) (= x397 (x938 (+ 192 x629))) (= (x237 x629) x596) (= x1030 (x938 (+ x1198 32))) (= x444 (x1064 x92)) (= x1621 (x1454 x615 x1421 x950 x891 x1294 x998)) (= (x237 x541) x304) (= (x938 (+ 96 x629)) x541) (= (x618 x615 x624 x1399) x418) (= x586 (x237 x1613)) (= (x237 x1304) x530) (= (x938 (+ x629 64)) x1033) (= (x938 (+ 64 x629)) x1613) (= (x938 (+ 128 x629)) x194) (= (x237 x629) x962) (= x1054 (x938 (+ x629 32))) (< x92 x1030) (= (x237 x1479) x797) (= x1195 (x938 (+ x629 128))) (= x624 (x237 x629)) (= (x938 (+ x325 32)) x1198) (= x267 (x321 (- x1457 32))) (= x1028 (x237 x1033)) (= (x938 (+ 32 x92)) x771) (= x1399 (x237 x1056)) (or (and (<= x92 94) (>= x92 3)) (and (>= x92 98) (<= x92 157)) (and (<= 161 x92) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x92)) (and (>= x92 115792089237316195423570985008687907853269984665640564039457584007913129639844) (<= x92 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= x1068 (x938 (+ 96 x629))) (= x1457 (x321 (- x1030 x92))) (= x1421 (x237 x629)) (= x1422 (ite (= 0 x615) x505 (ite (>= 32 x615) x1011 (ite (>= 64 x615) x418 (ite (>= 96 x615) x773 (ite (<= x615 128) x583 (ite (<= x615 160) x1621 (ite (>= 192 x615) x199 (ite (>= 224 x615) x513 x147))))))))) (= x1056 (x938 (+ 32 x629))) (= (x237 x194) x998) (= x1704 (x938 (+ 96 x629))) (= x1407 (x237 x1068)) (= (x237 x629) x1596) (= x1104 (x237 x1195)) (= (x938 (+ 32 x629)) x1533) (= (x237 x1503) x950) (= x951 (x237 x559)) (= x908 (x938 (+ 96 x629))) (= x513 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) (= x1011 (x682 x615 x962)) (= (x938 (+ 128 x629)) x345) (= x97 (x237 x629)) (= x1479 (x938 (+ 160 x629))) (= (x237 x531) x1191) (= x1503 (x938 (+ 32 x629))) (= (x237 x1704) x1294) (= (x237 x113) x50) (= x505 (x934 0)) (= x583 (x920 x615 x97 x1024 x1191 x304)) (= (>= 224 x444) x71) (= (x237 x397) x1105) (= x674 (x237 x1054)) (= x1554 (x237 x345)) (= (x237 x351) x464) (= x1024 (x237 x1533)) (= (x938 (+ 64 x629)) x1536) (= (x938 (+ x629 32)) x351) (= x113 (x938 (+ 160 x629))) (= (x237 x908) x151) (= (x938 (+ x629 64)) x559) (= x199 (x1107 x615 x596 x464 x951 x151 x1104 x50)) (= (x237 x1536) x891) (= x325 (x938 (+ x92 32))) (= x531 (x938 (+ x629 64)))) (and x71 (=> (and (= x775 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)) (= (x938 (+ x771 32)) x1466) (= x1697 (x938 (+ 128 x771))) (= x222 (x938 (+ 32 x771))) (= x322 (x1064 x308)) (= (x938 (+ x1355 32)) x1329) (= (x934 0) x1524) (= x1355 (x938 (+ x1030 4))) (= (x1064 x771) x1144) (= x740 (x1064 x1682)) (= (x938 (+ 192 x771)) x874) (= (x938 (+ x771 96)) x1545) (= x785 (x1064 x339)) (= x142 (x1064 x771)) (= (x1064 x222) x685) (= (x1064 x874) x919) (= (x938 (+ 128 x771)) x34) (= (x938 (+ 64 x771)) x1507) (= (x1064 x34) x1665) (= (< 0 x510) x285) (= (x920 x444 x1156 x931 x1184 x106) x466) (= (x1064 x485) x790) (= (x938 (+ x771 32)) x639) (= x15 (ite (= x444 0) x1524 (ite (<= x444 32) x1619 (ite (<= x444 64) x1368 (ite (>= 96 x444) x683 (ite (>= 128 x444) x466 (ite (>= 160 x444) x967 (ite (<= x444 192) x775 (ite (<= x444 224) x390 x996))))))))) (= x1632 (x938 (+ x771 32))) (= (x1064 x799) x1184) (= (x938 (+ x771 160)) x1268) (= (x1064 x1420) x1314) (= x584 (x938 (+ 160 x771))) (= x967 (x1454 x444 x191 x1746 x732 x785 x740)) (= (x938 (+ x771 64)) x799) (= x349 (x938 (+ x771 96))) (= (x1064 x771) x191) (= x1408 (x938 (+ 32 x1219))) (= (x1498 x444 x1410 x323 x790) x683) (= (x1064 x771) x1156) (= (x1064 x1539) x732) (= x1360 (x938 (+ 128 x1355))) (= x491 (x1064 x584)) (= (x1064 x396) x1038) (= (x1064 x1697) x978) (= (x938 (+ x771 96)) x339) (= (x682 x444 x1000) x1619) (= (x1064 x639) x323) (= (x938 (+ 64 x771)) x1420) (= (x1064 x771) x1000) (= (x1064 x771) x1764) (= (x938 (+ x1360 32)) x1256) (= (x1064 x1466) x1746) (= (x938 (+ x771 64)) x485) (= (x831 128) x510) (= (x1064 x577) x931) (= x1410 (x1064 x771)) (= (x1064 x1545) x1637) (= (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919) x390) (= x945 (x1064 x1268)) (= (x1064 x349) x106) (= (x938 (+ x1329 32)) x1219) (= (x938 (+ x771 32)) x577) (= (x938 (+ 128 x771)) x1682) (= (x938 (+ 96 x771)) x396) (= x829 (x1064 x1632)) (= (x938 (+ 64 x771)) x1539) (= (x1064 x1507) x1197) (= (x938 (+ x771 32)) x308) (= (x618 x444 x142 x322) x1368)) (and (=> (not x285) x997) (=> (and (and (= x1151 (> x510 32)) (= (x1510 160) x1114)) x285) (and (=> (and (and (= x515 (x358 192)) (= x60 (x938 (+ 32 x1256))) (= (< 64 x510) x1261)) x1151) (and (=> (and x1261 (and (= (x229 224) x1315) (= (< 96 x510) x190) (= x556 (x938 (+ x1256 64))))) (and (=> x190 x866) (=> (not x190) x997))) (=> (not x1261) x997))) (=> (not x1151) x997))))))) x550))))
(assert (= (x266 (x1454 x486 x1128 x878 x79 x120 x1579)) x1579))
(assert (not (x1045 (x618 x1082 x507 x158))))
(assert (= x106 (x27 (x920 x444 x1156 x931 x1184 x106))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1454 x444 x191 x1746 x732 x785 x740)))
(assert (x375 x53))
(assert (x375 x356))
(assert (x375 x1627))
(assert (x375 x1113))
(assert (not (x1045 (x682 x444 x1000))))
(assert (< (x682 x486 x937) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x139 (=> (and (= (x938 (+ x835 32)) x1661) (= x1684 (x321 (- x1800 32))) (not (= x1414 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x835 (x938 (+ x1234 32))) (= (x938 (+ 32 x1391)) x1234) (= (x938 (+ x1414 32)) x1342) (= x528 (x1217 x1414)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1414)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1414)) (= (x321 (- x525 x1414)) x1800) (= (>= 224 x528) x1446) (< x1414 x525) (= (x938 (+ x1661 32)) x354) (= (x938 (+ x1414 32)) x1391) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1414) (<= x1414 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1414) (= (x938 (+ x1391 160)) x525)) (and (=> (and (= x1035 (x938 (+ 96 x1342))) (= x986 (x938 (+ 64 x1342))) (= x69 (x1217 x1566)) (= x217 (x1217 x248)) (= x1192 (x1217 x1272)) (= (x938 (+ x1342 192)) x1504) (= x1238 (ite (= 0 x528) x884 (ite (<= x528 32) x819 (ite (>= 64 x528) x56 (ite (<= x528 96) x61 (ite (>= 128 x528) x983 (ite (<= x528 160) x189 (ite (<= x528 192) x848 (ite (<= x528 224) x1036 x1253))))))))) (= (x938 (+ 96 x1342)) x1272) (= x1149 (x1217 x588)) (= (x1217 x536) x379) (= (x1217 x44) x2) (= (x1217 x1010) x288) (= x359 (x1217 x1094)) (= (x1217 x1342) x469) (= (x920 x528 x806 x165 x1688 x2) x983) (= (x938 (+ x1342 32)) x248) (= x100 (x938 (+ 128 x1342))) (= x1094 (x938 (+ x1342 64))) (= (x1217 x1497) x165) (= x806 (x1217 x1342)) (= x25 (x938 (+ 32 x1342))) (= (x1217 x1342) x389) (= x189 (x1454 x528 x389 x731 x1494 x1192 x1172)) (= (x1217 x214) x272) (= x525 x102) (= x884 (x934 0)) (= x1566 (x938 (+ 32 x1342))) (= (x1217 x1342) x409) (= x704 (x938 (+ 160 x1342))) (= (x1217 x1342) x1160) (= (x1498 x528 x1160 x478 x379) x61) (= (x938 (+ x1342 128)) x228) (= x478 (x1217 x25)) (= (x938 (+ 64 x1342)) x1255) (= x56 (x618 x528 x1126 x69)) (= (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448) x1036) (= x1126 (x1217 x1342)) (= x819 (x682 x528 x469)) (= x1497 (x938 (+ 32 x1342))) (= (x1217 x652) x299) (= x811 (x1217 x1035)) (= (x1217 x228) x1172) (= x1010 (x938 (+ x1342 160))) (= (x1217 x865) x850) (= x414 x1238) (= x865 (x938 (+ 32 x1342))) (= (x1217 x1342) x538) (= (x1217 x100) x1488) (= x1706 (x938 (+ x1342 32))) (= (x938 (+ 96 x1342)) x44) (= (x1217 x704) x282) (= (x1217 x1255) x1688) (= (x938 (+ x1342 64)) x214) (= (x1107 x528 x409 x217 x359 x811 x299 x288) x848) (= (x938 (+ x1342 96)) x588) (= x1448 (x1217 x1504)) (= (x1217 x986) x1494) (= x536 (x938 (+ 64 x1342))) (= x731 (x1217 x1706)) (= (x938 (+ 128 x1342)) x652)) x399) x1446))))
(assert (not (x1045 (x920 x615 x97 x1024 x1191 x304))))
(assert (x375 x1296))
(assert (x375 x1641))
(assert (x375 x197))
(assert (=> (>= 10000 x910) (= 0 (x1336 x910))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x618 64 x1508 3)))
(assert (x375 x1431))
(assert (< 10000 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)))
(assert (x375 x1490))
(assert (=> (<= x945 10000) (= 0 (x1336 x945))))
(assert (x375 x897))
(assert (x375 x1420))
(assert (= (x1336 x1700) (x1336 (+ x1700 1))))
(assert (x375 x7))
(assert (x375 x1640))
(assert (> (x682 x1709 x316) 10000))
(assert (x375 x875))
(assert (x375 x86))
(assert (x375 x1558))
(assert (x375 x1538))
(assert (= 0 (x1336 18446744073709551615)))
(assert (x375 x424))
(assert (x375 x432))
(assert (x375 x556))
(assert (= x1781 (=> (and (and (= (x938 (+ x483 32)) x1678) (= x622 (x938 (+ x483 128))) (= x1736 (x938 (+ 32 x622))) (= x750 (x321 (- x504 x899))) (= x258 (x321 (- x1610 x296))) (= (x938 (+ 64 x992)) x1501) (not (or (and (= (<= x553 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1540 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1540 x553)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1540) (> x553 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (< 0 x788) x1383) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1551) (= x483 (x938 (+ 4 x296))) (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819999 x1222)) (or (and (> x620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1605)) (and (= (<= x620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1605)) (< x620 x1605))) (= (x1445 x1501) x620) (not (= x620 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (= x1471 (x1095 115792089237316195423570985008687907853269984665640564039457584007913129639904 x364)) (or (and (> x1173 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1173)) (> x1242 x1173))) (or (and (> x1242 x703) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242) (<= x703 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x703 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242))) (= x1690 (x938 (+ x283 x1736))) (= x20 (x938 (+ x1386 32))) (= (x321 (- x1222 31)) x1605) (= x283 (x1445 x1023)) (= (x938 (+ 32 x976)) x146) (= (x1445 x899) x703) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242) (> x1705 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1242 x1705) (= (<= x1705 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1242)))) (= x1540 (x938 (+ x1023 32))) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1705) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1705)) (= (x938 (+ x1705 x899)) x976) (>= 1461501637330902918203684832716283019655932542975 x617) (= (x938 (+ x899 x1173)) x992) (= x553 (x321 (- x504 x283))) (= x1705 (x1445 x899)) (<= 64 x1551) (= (x938 (+ x703 x899)) x205) (= x1386 (x938 (+ 32 x1678))) (>= 18446744073709551615 x283) (>= 340282366920938463463374607431768211455 x1015) (= x1173 (x1445 x899)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1173) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1173)) (= x1610 (x938 (+ x1736 x1471))) (= (x1445 x146) x1015) (= (x1445 x205) x617) (= (x938 (+ x620 x992)) x1023) (= x364 (+ 31 x283)) (= x1242 (x321 (- x750 95))) (or (>= x703 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x703)) (= (x321 (- x504 x992)) x1222)) (or (and (= x7 x788) (not x1383)) (and (and (= 1 x7) (<= 64 x1551) (>= 4294967295 x1551)) x1383))) x725)))
(assert (x1045 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (x375 x1630))
(assert (= x1401 (and x471 x821)))
(assert (x375 x1094))
(assert (x375 x11))
(assert (x375 x844))
(assert (= x581 (and x815 x1322)))
(assert (= 0 (x1336 103603067176188370116793463780953604340491603117933565163376133325037439549440)))
(assert (x375 x1636))
(assert (x375 x931))
(assert (= (x1336 (x1454 x528 x389 x731 x1494 x1192 x1172)) (x1454 x528 x389 x731 x1494 x1192 x1172)))
(assert (= (and x198 x306) x454))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x682 x410 x736)))
(assert (= (x470 (x1107 x1018 x246 x137 x1477 x851 x405 x476)) x137))
(assert (x375 x1192))
(assert (x375 x474))
(assert (> (x633 x486 x1297 x885 x984 x521 x178 x324 x542) 10000))
(assert (x375 x1138))
(assert (x375 x1033))
(assert (x375 x1024))
(assert (= (x1336 (x1498 66 x1582 x1406 x372)) (x1498 66 x1582 x1406 x372)))
(assert (=> (>= 10000 x191) (= (x1336 x191) 0)))
(assert (x375 x1030))
(assert (= (x470 (x618 64 x782 3)) 3))
(assert (< 10000 (x618 x1082 x507 x158)))
(assert (x375 x165))
(assert (x1651 x364))
(assert (x375 x1326))
(assert (x375 x1602))
(assert (x1045 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x375 x258))
(assert (= x410 (x837 (x1498 x410 x1784 x203 x535))))
(assert (x375 x625))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1498 x528 x1160 x478 x379)))
(assert (x375 x1540))
(assert (=> (>= 10000 x885) (= 0 (x1336 x885))))
(assert (x375 x1647))
(assert (= x730 (x1642 (x618 64 x730 3))))
(assert (x375 x685))
(assert (x375 x1546))
(assert (x375 x1071))
(assert (x375 x1783))
(assert (= (x1730 (x920 x486 x449 x859 x130 x9)) x130))
(assert (=> (>= 10000 x851) (= 0 (x1336 x851))))
(assert (x375 x75))
(assert (< 10000 (x618 64 x1645 4)))
(assert (= (x1730 (x1107 x444 x1144 x685 x1197 x1637 x1665 x945)) x1197))
(assert (x375 x749))
(assert (x375 x396))
(assert (x375 x44))
(assert (=> (<= x702 10000) (= (x1336 x702) 0)))
(assert (x375 x354))
(assert (= x1387 (x470 (x618 x1018 x1742 x1387))))
(assert (< 10000 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827)))
(assert (= (x791 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x324))
(assert (=> (>= 10000 x476) (= (x1336 x476) 0)))
(assert (x375 x178))
(assert (x375 x1318))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x375 x836))
(assert (= (x27 (x1107 x528 x409 x217 x359 x811 x299 x288)) x811))
(assert (=> (>= 10000 x1369) (= 0 (x1336 x1369))))
(assert (= (x1642 (x682 x615 x962)) x962))
(assert (x375 x1118))
(assert (x375 x705))
(assert (= (x1336 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (= (or x23 x254) x129))
(assert (= (x470 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x885))
(assert (=> (<= x736 10000) (= (x1336 x736) 0)))
(assert (=> (<= x226 10000) (= 0 (x1336 x226))))
(assert (x375 x1709))
(assert (x375 x998))
(assert (= (x1642 (x618 x528 x1126 x69)) x1126))
(assert (x375 x1552))
(assert (= x111 (x1642 (x1107 x410 x111 x1791 x109 x89 x373 x1788))))
(assert (x375 x478))
(assert (x375 x981))
(assert (x375 x1101))
(assert (x1321 x1428))
(assert (x375 x296))
(assert (x375 x153))
(assert (= 3 (x470 (x618 64 x881 3))))
(assert (x375 x847))
(assert (x375 x1411))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (= x1631 (=> (= (> x16 0) x728) (and (=> (and (not x728) (= x705 x49)) x1516) (=> (and (and (or (and x1644 (and (= (x265 x1215) x1220) (not x411) (= (> x1044 32) x411))) (not x1644)) (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x705)) (= (x938 (+ x705 32)) x1215) (= x384 (x938 (+ x1215 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x705) (not (= x705 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x705 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x705 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (< 0 x1044) x1644) (= x1620 (x938 (+ 32 x882))) (< x705 x882) (= x1044 (x265 x705)) (= (x938 (+ 96 x705)) x882) (<= x705 115792089237316195423570985008687907853269984665640564039457584007913129639934))) x728) x687)))))
(assert (> (x1454 x528 x389 x731 x1494 x1192 x1172) 10000))
(assert (x1651 x1728))
(assert (= (x1336 x1259) (x1336 (+ 1 x1259))))
(assert (< (x618 x410 x1674 x1350) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x790 10000) (= 0 (x1336 x790))))
(assert (=> (>= 10000 x1178) (= 0 (x1336 x1178))))
(assert (> (x618 64 x881 3) 10000))
(assert (x375 x623))
(assert (x375 x1784))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (=> (<= x742 10000) (= 0 (x1336 x742))))
(assert (x375 x307))
(assert (=> (<= x782 10000) (= (x1336 x782) 0)))
(assert (=> (>= 10000 x605) (= (x1336 x605) 0)))
(assert (= x720 (or x51 x388 x1429 x520 x784)))
(assert (x375 x456))
(assert (= (x1336 (+ x1170 1)) (x1336 x1170)))
(assert (= (x1336 18446744073709551391) 0))
(assert (x375 x329))
(assert (> (x618 x528 x1126 x69) 10000))
(assert (x375 x1007))
(assert (= (x1336 x508) (x1336 (+ x508 1))))
(assert (x375 x859))
(assert (= x331 (and x1322 (not x815))))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639806) 0))
(assert (x375 x1316))
(assert (x375 x772))
(assert (x375 x542))
(assert (x375 x1154))
(assert (x1651 x1076))
(assert (< (x920 x486 x449 x859 x130 x9) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1336 39095828447348766818467541868648093896559026261938444753180772323039453799525)))
(assert (x375 x94))
(assert (x375 x955))
(assert (x375 x861))
(assert (x375 x353))
(assert (> (x1107 x410 x111 x1791 x109 x89 x373 x1788) 10000))
(assert (x1045 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (x375 x1375))
(assert (= (x837 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) x615))
(assert (x387 x364 32))
(assert (= (x1642 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) x1200))
(assert (x375 x2))
(assert (=> (>= 10000 x333) (= 0 (x1336 x333))))
(assert (x375 x469))
(assert (x1321 x738))
(assert (= (x1498 x444 x1410 x323 x790) (x1336 (x1498 x444 x1410 x323 x790))))
(assert (x375 x1535))
(assert (= 0 (x1336 51755322175217624492750805572474109157238378692794855914282927279451288895488)))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x375 x1376))
(assert (=> (>= 10000 x405) (= 0 (x1336 x405))))
(assert (x375 x1681))
(assert (x375 x715))
(assert (x375 x1273))
(assert (x375 x176))
(assert (= x1308 (and (not x1383) x143)))
(assert (x375 x1324))
(assert (x375 x671))
(assert (= x1038 (x27 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919))))
(assert (not (x1045 (x618 x410 x1674 x1350))))
(assert (x759 x1639))
(assert (x375 x577))
(assert (x375 x1628))
(assert (x375 x1767))
(assert (= (x1336 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (x375 x1587))
(assert (= x2 (x27 (x920 x528 x806 x165 x1688 x2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)))
(assert (x375 x1520))
(assert (x375 x978))
(assert (x375 x1371))
(assert (x375 x596))
(assert (x375 x778))
(assert (x1045 18446744073709551550))
(assert (x375 x528))
(assert (= x478 (x470 (x1498 x528 x1160 x478 x379))))
(assert (x375 x882))
(assert (= 4 (x470 (x618 64 x226 4))))
(assert (< 10000 (x1498 x410 x1784 x203 x535)))
(assert (= x605 (x470 (x920 x1709 x845 x605 x917 x910))))
(assert (> (x1498 x615 x1596 x530 x586) 10000))
(assert (x375 x704))
(assert (=> (>= 10000 x219) (= 0 (x1336 x219))))
(assert (x375 x560))
(assert (= x1192 (x27 (x1454 x528 x389 x731 x1494 x1192 x1172))))
(assert (not (x1045 (x1454 x528 x389 x731 x1494 x1192 x1172))))
(assert (= (x920 x444 x1156 x931 x1184 x106) (x1336 (x920 x444 x1156 x931 x1184 x106))))
(assert (= x560 (x266 (x633 x1018 x78 x1560 x702 x292 x560 x883 x533))))
(assert (x375 x1462))
(assert (= (x1730 (x1498 x1018 x1710 x1001 x1247)) x1247))
(assert (= (x618 64 x131 3) (x1336 (x618 64 x131 3))))
(assert (x375 x1136))
(assert (x375 x262))
(assert (x375 x1046))
(assert (x375 x1500))
(assert (x375 x840))
(assert (= (x1336 (x1107 x1709 x301 x623 x953 x150 x1578 x1640)) (x1107 x1709 x301 x623 x953 x150 x1578 x1640)))
(assert (=> (<= x1333 10000) (= 0 (x1336 x1333))))
(assert (x375 x225))
(assert (= (x682 x1709 x316) (x1336 (x682 x1709 x316))))
(assert (x375 x349))
(assert (= (x1730 (x920 x528 x806 x165 x1688 x2)) x1688))
(assert (x375 x610))
(assert (x375 x1051))
(assert (not (x1045 (x682 x615 x962))))
(assert (x375 x324))
(assert (=> (>= 10000 x1468) (= (x1336 x1468) 0)))
(assert (= (and x1151 x498) x255))
(assert (x375 x1521))
(assert (x375 x376))
(assert (= (or x924 x55) x198))
(assert (x375 x1425))
(assert (x375 x1399))
(assert (= x836 (x1642 (x1454 x1018 x836 x1723 x1513 x1468 x915))))
(assert (= (x791 (x1107 x1082 x21 x1769 x1618 x1599 x307 x1119)) x1119))
(assert (x794 x571))
(assert (x375 x239))
(assert (x375 x1346))
(assert (x375 x99))
(assert (x387 x1076 1461501637330902918203684832716283019655932542976))
(assert (x375 x1415))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (= 64 (x837 (x618 64 x881 3))))
(assert (= x486 (x837 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (= (x470 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)) x829))
(assert (x759 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x408) (= 0 (x1336 x408))))
(assert (=> (>= 10000 x304) (= (x1336 x304) 0)))
(assert (= (x837 (x1107 x528 x409 x217 x359 x811 x299 x288)) x528))
(assert (x375 x790))
(assert (= x592 (or x1802 x493)))
(assert (=> (<= x1191 10000) (= (x1336 x1191) 0)))
(assert (= x36 (or x1252 x242)))
(assert (x375 x1491))
(assert (x375 x288))
(assert (not (x1045 (x682 x1018 x438))))
(assert (= (x470 (x1498 x444 x1410 x323 x790)) x323))
(assert (= x275 (x27 (x633 x410 x1371 x1777 x157 x275 x668 x1166 x827))))
(assert (= x948 (and x1570 x80)))
(assert (x375 x1679))
(assert (= (x1336 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)) (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105)))
(assert (= x1472 (=> (and (= (= x416 0) x270) (or (and (= x416 0) (not x270)) x270)) x1278)))
(assert (= (x1336 (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)) (x633 x1709 x590 x1363 x722 x355 x1411 x395 x455)))
(assert (x375 x299))
(assert (x375 x187))
(assert (x375 x1124))
(assert (= (x837 (x618 64 x38 3)) 64))
(assert (=> (<= x246 10000) (= (x1336 x246) 0)))
(assert (= (x920 x528 x806 x165 x1688 x2) (x1336 (x920 x528 x806 x165 x1688 x2))))
(assert (x1045 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (x375 x1757))
(assert (x375 x248))
(assert (=> (>= 10000 x1718) (= 0 (x1336 x1718))))
(assert (x375 x1184))
(assert (=> (<= x751 10000) (= (x1336 x751) 0)))
(assert (x375 x1426))
(assert (x375 x1204))
(assert (x375 x1200))
(assert (x375 x661))
(assert (x375 x736))
(assert (=> (>= 10000 x275) (= 0 (x1336 x275))))
(assert (x1045 340282366920938463463374607431768211455))
(assert (x375 x1029))
(assert (=> (>= 10000 x1579) (= (x1336 x1579) 0)))
(assert (=> (<= x1709 10000) (= (x1336 x1709) 0)))
(assert (x375 x590))
(assert (x1045 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (x1321 x975))
(assert (=> (>= 10000 x1731) (= 0 (x1336 x1731))))
(assert (= x142 (x1642 (x618 x444 x142 x322))))
(assert (x375 x341))
(assert (x375 x492))
(assert (x375 x301))
(assert (x375 x1035))
(assert (x375 x1754))
(assert (x375 x87))
(assert (x375 x1389))
(assert (=> (<= x158 10000) (= (x1336 x158) 0)))
(assert (= (x1336 (+ x1470 1)) (x1336 x1470)))
(assert (= x1442 (x1642 (x618 64 x1442 3))))
(assert (not (x1045 (x1454 x1709 x1306 x957 x1555 x1797 x453))))
(assert (x375 x1680))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (= (x1642 (x1454 x444 x191 x1746 x732 x785 x740)) x191))
(assert (= x672 (x470 (x1498 x1082 x1174 x672 x386))))
(assert (x375 x1219))
(assert (=> (>= 10000 x389) (= 0 (x1336 x389))))
(assert (not (x1045 (x1454 x1082 x1556 x1671 x1226 x241 x1073))))
(assert (not (x1045 (x920 x486 x449 x859 x130 x9))))
(assert (not (x1045 (x1454 x444 x191 x1746 x732 x785 x740))))
(assert (x375 x355))
(assert (x375 x1335))
(assert (not (x1045 (x618 x528 x1126 x69))))
(assert (x375 x1639))
(assert (x1045 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (= (x1336 (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)) (x633 x528 x538 x850 x272 x1149 x1488 x282 x1448)))
(assert (> (x682 x1082 x408) 10000))
(assert (x1321 x1345))
(assert (x375 x1172))
(assert (= (x1336 52672081143094129087634851003622940732604441515226977473621344926390909140992) 0))
(assert (x375 x228))
(assert (x375 x984))
(assert (= (x791 (x1107 x615 x596 x464 x951 x151 x1104 x50)) x50))
(assert (> (x618 x410 x1674 x1350) 10000))
(assert (x375 x737))
(assert (=> (<= x373 10000) (= 0 (x1336 x373))))
(assert (x375 x1257))
(assert (= x1105 (x752 (x633 x615 x1200 x674 x1028 x1407 x1554 x797 x1105))))
(assert (x375 x407))
(assert (x375 x1000))
(assert (x375 x533))
(assert (= (x1336 (x618 64 x1416 3)) (x618 64 x1416 3)))
(assert (= (x1336 1099511627775) 0))
(assert (= x887 (x27 (x1454 x410 x1333 x1237 x1731 x887 x696))))
(assert (not (x1045 (x618 64 x881 3))))
(assert (x375 x218))
(assert (x375 x940))
(assert (x375 x1690))
(assert (x375 x1508))
(assert (not (x1045 (x618 64 x1645 4))))
(assert (x759 x949))
(assert (x375 x97))
(assert (> (x1498 x486 x1265 x1025 x187) 10000))
(assert (= x1784 (x1642 (x1498 x410 x1784 x203 x535))))
(assert (x375 x639))
(assert (not (x1045 (x1498 x528 x1160 x478 x379))))
(assert (x375 x881))
(assert (x375 x1533))
(assert (= (x470 (x1107 x486 x1178 x311 x1361 x751 x333 x890)) x311))
(assert (= (and x1608 (not x1644)) x242))
(assert (x1338 x1076))
(assert (x375 x185))
(assert (=> (<= x797 10000) (= 0 (x1336 x797))))
(assert (=> (>= 10000 x937) (= 0 (x1336 x937))))
(assert (x375 x976))
(assert (= (x837 (x633 x444 x1764 x829 x1314 x1038 x978 x491 x919)) x444))
(assert (x375 x1178))
(assert (> (x1498 66 x1582 x1406 x372) 10000))
(assert (= x1001 (x470 (x1498 x1018 x1710 x1001 x1247))))
(assert (x375 x700))
(assert (x375 x729))
(assert (x375 x1129))
(assert (x375 x359))
(assert (= x444 (x837 (x1498 x444 x1410 x323 x790))))
(assert (= (x1730 (x633 x486 x1297 x885 x984 x521 x178 x324 x542)) x984))
(assert (= (=> (= x497 (= x766 0)) (and (=> x497 x139) (=> (and (and (= x1414 x102) (= x414 x436)) (not x497)) x399))) x1285))
(assert (=> (>= 10000 x521) (= (x1336 x521) 0)))
(assert (= (x618 64 x782 3) (x1336 (x618 64 x782 3))))
(assert (=> (<= x38 10000) (= (x1336 x38) 0)))
(assert (= 0 (x1336 1461501637330902918203684832716283019655932542975)))
(assert (x375 x965))
(assert (x375 x89))
(assert (x375 x194))
(assert (x375 x1307))
(assert (x375 x1623))
(assert (> (x1107 x1018 x246 x137 x1477 x851 x405 x476) 10000))
(assert (=> (>= 10000 x79) (= 0 (x1336 x79))))
(assert (x375 x912))
(assert (= (x1642 (x920 x615 x97 x1024 x1191 x304)) x97))
(assert (x759 x571))
(assert (= (x27 (x1454 x615 x1421 x950 x891 x1294 x998)) x1294))
(assert (= (x1730 (x1498 x1709 x1369 x75 x1699)) x1699))
(assert (not (x1045 (x618 x615 x624 x1399))))
(assert (x375 x1554))
(assert (= x956 (and x143 x1383)))
(assert (=> (<= x624 10000) (= (x1336 x624) 0)))
(assert (=> (>= 10000 x478) (= 0 (x1336 x478))))
(assert (=> (>= 10000 x1000) (= 0 (x1336 x1000))))
(assert (x375 x260))
(assert (= true x1281))
(assert (x1045 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (= (x1336 18446744073709551487) 0))
(assert (= x890 (x791 (x1107 x486 x1178 x311 x1361 x751 x333 x890))))
(assert (x375 x397))
(assert (x375 x1494))
(assert (x375 x659))
(assert (x375 x161))
(assert (x375 x485))
(assert (x375 x30))
(assert (x387 x571 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x375 x1613))
(assert (x375 x538))
(assert (x375 x658))
(assert (x375 x222))
(check-sat)
(exit)
