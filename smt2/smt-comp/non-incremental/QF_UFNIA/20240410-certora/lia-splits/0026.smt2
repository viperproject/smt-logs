(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x91 () Int)
(declare-fun x806 () Int)
(declare-fun x58 () Int)
(declare-fun x1064 () Int)
(declare-fun x683 () Int)
(declare-fun x726 () Int)
(declare-fun x194 () Int)
(declare-fun x569 () Int)
(declare-fun x250 () Int)
(declare-fun x418 () Int)
(declare-fun x730 () Int)
(declare-fun x620 () Int)
(declare-fun x1212 () Int)
(declare-fun x336 () Int)
(declare-fun x507 () Int)
(declare-fun x186 () Bool)
(declare-fun x369 () Int)
(declare-fun x13 () Int)
(declare-fun x148 () Int)
(declare-fun x638 () Int)
(declare-fun x1062 () Bool)
(declare-fun x116 () Int)
(declare-fun x69 () Int)
(declare-fun x1167 () Int)
(declare-fun x680 () Int)
(declare-fun x573 () Int)
(declare-fun x445 (Int Int) Int)
(declare-fun x945 () Int)
(declare-fun x265 () Int)
(declare-fun x916 () Bool)
(declare-fun x346 () Int)
(declare-fun x632 () Bool)
(declare-fun x770 () Int)
(declare-fun x103 () Int)
(declare-fun x1113 () Bool)
(declare-fun x104 () Int)
(declare-fun x253 () Bool)
(declare-fun x520 () Int)
(declare-fun x656 () Int)
(declare-fun x584 () Int)
(declare-fun x1137 () Int)
(declare-fun x807 () Int)
(declare-fun x767 () Int)
(declare-fun x902 () Int)
(declare-fun x1175 () Int)
(declare-fun x847 () Bool)
(declare-fun x317 () Int)
(declare-fun x728 () Int)
(declare-fun x818 () Int)
(declare-fun x1248 () Int)
(declare-fun x1307 () Int)
(declare-fun x1200 () Int)
(declare-fun x108 () Int)
(declare-fun x185 () Bool)
(declare-fun x1318 () Int)
(declare-fun x19 () Int)
(declare-fun x648 () Int)
(declare-fun x670 () Bool)
(declare-fun x276 () Int)
(declare-fun x363 () Int)
(declare-fun x492 () Int)
(declare-fun x162 () Int)
(declare-fun x624 () Int)
(declare-fun x408 () Int)
(declare-fun x1301 () Bool)
(declare-fun x226 () Bool)
(declare-fun x987 () Int)
(declare-fun x382 () Int)
(declare-fun x813 () Int)
(declare-fun x626 () Int)
(declare-fun x543 () Int)
(declare-fun x625 () Int)
(declare-fun x375 () Int)
(declare-fun x443 () Int)
(declare-fun x754 () Int)
(declare-fun x164 () Int)
(declare-fun x819 () Int)
(declare-fun x221 () Int)
(declare-fun x187 () Int)
(declare-fun x816 () Int)
(declare-fun x1112 () Int)
(declare-fun x621 (Int Int Int Int Int Int Int) Int)
(declare-fun x241 () Int)
(declare-fun x377 () Int)
(declare-fun x1310 () Int)
(declare-fun x1147 () Bool)
(declare-fun x523 () Int)
(declare-fun x1150 () Int)
(declare-fun x791 () Int)
(declare-fun x777 () Int)
(declare-fun x759 () Int)
(declare-fun x449 () Int)
(declare-fun x1026 () Int)
(declare-fun x57 () Int)
(declare-fun x199 () Int)
(declare-fun x924 () Int)
(declare-fun x1149 () Int)
(declare-fun x1163 () Int)
(declare-fun x304 () Int)
(declare-fun x893 () Int)
(declare-fun x1052 () Int)
(declare-fun x1022 () Int)
(declare-fun x732 () Int)
(declare-fun x559 () Int)
(declare-fun x1244 () Int)
(declare-fun x1199 () Int)
(declare-fun x1132 () Int)
(declare-fun x1169 () Int)
(declare-fun x911 () Int)
(declare-fun x128 () Int)
(declare-fun x957 () Int)
(declare-fun x598 (Int) Int)
(declare-fun x742 () Int)
(declare-fun x727 () Int)
(declare-fun x294 (Int) Int)
(declare-fun x978 () Int)
(declare-fun x1197 () Bool)
(declare-fun x823 () Int)
(declare-fun x1192 () Int)
(declare-fun x465 () Int)
(declare-fun x512 () Int)
(declare-fun x1185 () Int)
(declare-fun x562 () Int)
(declare-fun x339 () Int)
(declare-fun x184 () Int)
(declare-fun x921 () Int)
(declare-fun x952 () Int)
(declare-fun x175 () Int)
(declare-fun x655 () Bool)
(declare-fun x672 () Int)
(declare-fun x1060 () Int)
(declare-fun x456 () Bool)
(declare-fun x790 () Int)
(declare-fun x107 () Bool)
(declare-fun x1272 () Int)
(declare-fun x539 () Int)
(declare-fun x671 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1017 () Bool)
(declare-fun x530 () Int)
(declare-fun x1162 () Int)
(declare-fun x262 () Int)
(declare-fun x977 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1177 () Int)
(declare-fun x552 () Int)
(declare-fun x691 (Int Int Int Int Int Int) Int)
(declare-fun x864 () Int)
(declare-fun x660 () Int)
(declare-fun x1334 () Int)
(declare-fun x1041 () Int)
(declare-fun x1070 () Bool)
(declare-fun x1170 (Int) Int)
(declare-fun x1117 () Bool)
(declare-fun x1155 () Int)
(declare-fun x964 () Int)
(declare-fun x1102 () Int)
(declare-fun x462 () Int)
(declare-fun x439 () Int)
(declare-fun x126 () Int)
(declare-fun x396 () Int)
(declare-fun x1249 () Int)
(declare-fun x146 () Int)
(declare-fun x6 () Int)
(declare-fun x54 () Int)
(declare-fun x404 () Int)
(declare-fun x641 () Int)
(declare-fun x563 () Int)
(declare-fun x969 () Int)
(declare-fun x1008 () Bool)
(declare-fun x366 () Int)
(declare-fun x283 () Int)
(declare-fun x1032 () Int)
(declare-fun x931 () Bool)
(declare-fun x344 () Bool)
(declare-fun x982 () Int)
(declare-fun x1108 () Int)
(declare-fun x39 () Int)
(declare-fun x1262 () Int)
(declare-fun x700 () Int)
(declare-fun x388 () Bool)
(declare-fun x1319 () Int)
(declare-fun x1046 () Int)
(declare-fun x1035 () Int)
(declare-fun x496 () Int)
(declare-fun x1256 () Int)
(declare-fun x1314 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1260 () Int)
(declare-fun x202 () Int)
(declare-fun x239 () Bool)
(declare-fun x547 () Int)
(declare-fun x1283 () Int)
(declare-fun x356 () Int)
(declare-fun x1088 () Int)
(declare-fun x474 () Bool)
(declare-fun x278 () Int)
(declare-fun x1015 () Int)
(declare-fun x90 () Int)
(declare-fun x665 () Int)
(declare-fun x387 () Int)
(declare-fun x168 () Int)
(declare-fun x177 () Int)
(declare-fun x362 () Bool)
(declare-fun x1094 () Int)
(declare-fun x743 () Bool)
(declare-fun x646 () Int)
(declare-fun x846 () Int)
(declare-fun x447 () Int)
(declare-fun x480 () Int)
(declare-fun x781 () Bool)
(declare-fun x183 () Int)
(declare-fun x1119 () Int)
(declare-fun x360 () Bool)
(declare-fun x935 () Int)
(declare-fun x417 () Int)
(declare-fun x751 () Int)
(declare-fun x501 () Int)
(declare-fun x925 () Int)
(declare-fun x535 () Int)
(declare-fun x1069 () Int)
(declare-fun x1281 () Int)
(declare-fun x325 () Int)
(declare-fun x838 () Int)
(declare-fun x652 () Bool)
(declare-fun x901 () Bool)
(declare-fun x141 () Int)
(declare-fun x296 (Int) Int)
(declare-fun x1148 () Int)
(declare-fun x603 () Bool)
(declare-fun x1327 () Int)
(declare-fun x47 (Int) Int)
(declare-fun x124 (Int) Int)
(declare-fun x837 () Int)
(declare-fun x954 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1236 () Int)
(declare-fun x675 () Int)
(declare-fun x833 () Int)
(declare-fun x1315 () Int)
(declare-fun x335 () Int)
(declare-fun x389 () Int)
(declare-fun x479 () Bool)
(declare-fun x736 () Int)
(declare-fun x513 () Int)
(declare-fun x205 () Int)
(declare-fun x139 () Int)
(declare-fun x109 () Int)
(declare-fun x481 () Int)
(declare-fun x87 () Int)
(declare-fun x684 () Int)
(declare-fun x452 () Int)
(declare-fun x1141 () Int)
(declare-fun x839 () Int)
(declare-fun x801 () Int)
(declare-fun x260 () Int)
(declare-fun x155 () Int)
(declare-fun x1071 () Int)
(declare-fun x706 () Bool)
(declare-fun x789 () Int)
(declare-fun x242 () Int)
(declare-fun x448 () Int)
(declare-fun x1332 () Int)
(declare-fun x207 () Int)
(declare-fun x849 () Int)
(declare-fun x707 () Int)
(declare-fun x1311 () Int)
(declare-fun x438 () Int)
(declare-fun x1103 () Int)
(declare-fun x1257 () Int)
(declare-fun x602 () Int)
(declare-fun x1074 () Int)
(declare-fun x423 () Int)
(declare-fun x786 () Int)
(declare-fun x939 () Int)
(declare-fun x469 () Int)
(declare-fun x866 () Int)
(declare-fun x416 () Int)
(declare-fun x1213 () Int)
(declare-fun x1206 () Bool)
(declare-fun x637 () Int)
(declare-fun x1049 () Int)
(declare-fun x610 () Int)
(declare-fun x734 () Int)
(declare-fun x161 () Int)
(declare-fun x349 () Bool)
(declare-fun x312 () Int)
(declare-fun x1232 () Bool)
(declare-fun x65 () Bool)
(declare-fun x64 () Int)
(declare-fun x316 () Int)
(declare-fun x287 () Int)
(declare-fun x378 () Int)
(declare-fun x18 () Int)
(declare-fun x764 () Bool)
(declare-fun x800 () Int)
(declare-fun x926 () Int)
(declare-fun x615 () Int)
(declare-fun x874 () Int)
(declare-fun x1251 () Int)
(declare-fun x1282 () Int)
(declare-fun x1234 () Int)
(declare-fun x877 () Bool)
(declare-fun x1320 () Int)
(declare-fun x958 () Int)
(declare-fun x351 () Int)
(declare-fun x1255 () Int)
(declare-fun x1140 () Int)
(declare-fun x4 () Int)
(declare-fun x305 () Int)
(declare-fun x1128 () Int)
(declare-fun x328 () Int)
(declare-fun x1027 () Int)
(declare-fun x678 () Bool)
(declare-fun x1152 () Int)
(declare-fun x820 () Int)
(declare-fun x455 () Int)
(declare-fun x1083 () Int)
(declare-fun x453 () Bool)
(declare-fun x358 () Int)
(declare-fun x1205 () Int)
(declare-fun x1151 () Int)
(declare-fun x694 () Int)
(declare-fun x1 () Int)
(declare-fun x824 () Int)
(declare-fun x583 () Int)
(declare-fun x653 () Int)
(declare-fun x1129 () Int)
(declare-fun x36 () Int)
(declare-fun x101 () Int)
(declare-fun x68 () Int)
(declare-fun x1188 () Int)
(declare-fun x73 (Int) Int)
(declare-fun x673 () Int)
(declare-fun x757 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1289 () Int)
(declare-fun x135 () Bool)
(declare-fun x565 () Int)
(declare-fun x261 () Int)
(declare-fun x773 () Int)
(declare-fun x385 () Int)
(declare-fun x885 () Int)
(declare-fun x275 () Int)
(declare-fun x912 () Int)
(declare-fun x173 () Bool)
(declare-fun x1136 () Int)
(declare-fun x946 () Int)
(declare-fun x836 () Int)
(declare-fun x606 () Bool)
(declare-fun x271 () Int)
(declare-fun x723 () Bool)
(declare-fun x1100 () Int)
(declare-fun x577 () Int)
(declare-fun x96 () Int)
(declare-fun x762 () Int)
(declare-fun x618 () Int)
(declare-fun x886 () Int)
(declare-fun x851 () Bool)
(declare-fun x891 () Int)
(declare-fun x1143 () Int)
(declare-fun x213 () Int)
(declare-fun x571 () Int)
(declare-fun x986 () Int)
(declare-fun x686 () Int)
(declare-fun x1241 () Int)
(declare-fun x965 () Int)
(declare-fun x699 () Int)
(declare-fun x446 () Bool)
(declare-fun x1280 (Int) Int)
(declare-fun x15 () Int)
(declare-fun x383 () Int)
(declare-fun x7 () Int)
(declare-fun x373 () Int)
(declare-fun x484 () Int)
(declare-fun x1216 () Int)
(declare-fun x508 () Int)
(declare-fun x1023 () Bool)
(declare-fun x158 () Int)
(declare-fun x329 () Bool)
(declare-fun x364 () Int)
(declare-fun x1133 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1030 () Int)
(declare-fun x991 () Int)
(declare-fun x409 () Int)
(declare-fun x1201 () Int)
(declare-fun x828 () Int)
(declare-fun x1194 () Int)
(declare-fun x403 () Int)
(declare-fun x981 () Int)
(declare-fun x1298 () Int)
(declare-fun x318 () Int)
(declare-fun x1109 () Int)
(declare-fun x857 () Int)
(declare-fun x55 () Int)
(declare-fun x1066 () Int)
(declare-fun x1115 () Bool)
(declare-fun x725 () Int)
(declare-fun x1321 () Int)
(declare-fun x1322 () Int)
(declare-fun x663 () Int)
(declare-fun x1146 () Int)
(declare-fun x105 () Int)
(declare-fun x867 () Int)
(declare-fun x914 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1266 () Int)
(declare-fun x1057 () Int)
(declare-fun x746 () Bool)
(declare-fun x868 () Int)
(declare-fun x348 () Int)
(declare-fun x1330 () Int)
(declare-fun x1154 () Int)
(declare-fun x32 () Int)
(declare-fun x1267 () Int)
(declare-fun x431 () Bool)
(declare-fun x814 () Int)
(declare-fun x1084 () Int)
(declare-fun x74 () Int)
(declare-fun x1037 () Int)
(declare-fun x181 () Int)
(declare-fun x984 () Bool)
(declare-fun x279 () Int)
(declare-fun x1076 () Int)
(declare-fun x370 () Int)
(declare-fun x52 () Int)
(declare-fun x1179 () Bool)
(declare-fun x500 () Int)
(declare-fun x504 () Int)
(declare-fun x1124 () Int)
(declare-fun x900 () Int)
(declare-fun x592 () Int)
(declare-fun x35 () Bool)
(declare-fun x661 () Int)
(declare-fun x642 (Int) Int)
(declare-fun x1259 () Int)
(declare-fun x193 () Int)
(declare-fun x785 () Int)
(declare-fun x59 () Int)
(declare-fun x114 (Int) Int)
(declare-fun x489 (Int Int) Int)
(declare-fun x1264 () Int)
(declare-fun x157 () Int)
(declare-fun x721 () Int)
(declare-fun x929 () Int)
(declare-fun x1218 (Int) Int)
(declare-fun x591 () Int)
(declare-fun x792 () Int)
(declare-fun x1285 () Int)
(declare-fun x380 () Int)
(declare-fun x1007 () Bool)
(declare-fun x920 (Int) Int)
(declare-fun x257 () Int)
(declare-fun x1036 () Int)
(declare-fun x9 () Bool)
(declare-fun x1325 () Int)
(declare-fun x825 () Bool)
(declare-fun x323 () Int)
(declare-fun x486 () Bool)
(declare-fun x896 () Int)
(declare-fun x163 () Int)
(declare-fun x1065 () Int)
(declare-fun x1168 () Bool)
(declare-fun x212 () Int)
(declare-fun x1116 () Int)
(declare-fun x731 () Bool)
(declare-fun x1019 () Int)
(declare-fun x412 () Bool)
(declare-fun x1042 () Int)
(declare-fun x1024 () Int)
(declare-fun x604 () Int)
(declare-fun x434 () Bool)
(declare-fun x858 () Int)
(declare-fun x690 () Int)
(declare-fun x722 () Bool)
(declare-fun x979 () Int)
(declare-fun x855 () Int)
(declare-fun x365 () Int)
(declare-fun x798 () Int)
(declare-fun x975 (Int) Int)
(declare-fun x1068 () Int)
(declare-fun x649 () Int)
(declare-fun x223 () Bool)
(declare-fun x493 () Int)
(declare-fun x170 () Int)
(declare-fun x850 () Int)
(declare-fun x198 () Int)
(declare-fun x698 () Int)
(declare-fun x230 () Int)
(declare-fun x634 () Int)
(declare-fun x1324 () Int)
(declare-fun x1114 () Int)
(declare-fun x264 () Int)
(declare-fun x309 () Int)
(declare-fun x612 () Int)
(declare-fun x407 () Bool)
(declare-fun x238 () Int)
(declare-fun x679 () Bool)
(declare-fun x97 () Int)
(declare-fun x1303 () Int)
(declare-fun x1125 () Int)
(declare-fun x60 () Int)
(declare-fun x1054 () Int)
(declare-fun x252 () Int)
(declare-fun x750 () Int)
(declare-fun x578 () Int)
(declare-fun x1284 () Int)
(declare-fun x209 (Int Int Int Int) Int)
(declare-fun x82 () Int)
(declare-fun x1144 () Int)
(declare-fun x1304 () Int)
(declare-fun x548 () Int)
(declare-fun x581 () Bool)
(declare-fun x521 (Int) Int)
(declare-fun x44 () Bool)
(declare-fun x903 () Int)
(declare-fun x174 () Int)
(declare-fun x962 () Int)
(declare-fun x883 () Int)
(declare-fun x30 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1313 () Int)
(declare-fun x826 () Int)
(declare-fun x778 () Int)
(declare-fun x794 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1228 () Int)
(declare-fun x737 () Int)
(declare-fun x291 () Int)
(declare-fun x878 () Int)
(declare-fun x89 () Int)
(declare-fun x53 () Int)
(declare-fun x488 () Int)
(declare-fun x482 () Int)
(declare-fun x1258 () Bool)
(declare-fun x1279 () Int)
(declare-fun x710 () Bool)
(declare-fun x614 () Int)
(declare-fun x1099 () Int)
(declare-fun x1209 () Int)
(declare-fun x110 () Int)
(declare-fun x1336 () Int)
(declare-fun x1105 () Int)
(declare-fun x142 () Int)
(declare-fun x1034 () Int)
(declare-fun x411 () Int)
(declare-fun x1269 () Int)
(declare-fun x688 () Int)
(declare-fun x766 () Int)
(declare-fun x988 () Int)
(declare-fun x561 () Int)
(declare-fun x692 () Bool)
(declare-fun x70 () Int)
(declare-fun x1181 () Int)
(declare-fun x406 () Int)
(declare-fun x1081 () Int)
(declare-fun x1204 () Int)
(declare-fun x106 () Int)
(declare-fun x832 () Int)
(declare-fun x458 () Int)
(declare-fun x138 () Bool)
(declare-fun x1291 () Int)
(declare-fun x367 () Bool)
(declare-fun x860 () Int)
(declare-fun x949 (Int Int) Int)
(declare-fun x783 () Int)
(declare-fun x554 () Int)
(declare-fun x270 () Bool)
(declare-fun x1161 () Int)
(declare-fun x906 () Int)
(declare-fun x454 () Int)
(declare-fun x48 () Int)
(declare-fun x324 () Int)
(declare-fun x1063 () Int)
(declare-fun x497 () Bool)
(declare-fun x553 () Int)
(declare-fun x956 () Int)
(declare-fun x623 () Int)
(declare-fun x1215 () Int)
(declare-fun x1044 () Int)
(declare-fun x293 () Int)
(declare-fun x593 () Int)
(declare-fun x61 () Int)
(declare-fun x784 () Bool)
(declare-fun x889 () Int)
(declare-fun x451 () Int)
(declare-fun x755 () Int)
(declare-fun x1246 () Int)
(declare-fun x526 () Bool)
(declare-fun x1025 () Int)
(declare-fun x236 () Int)
(declare-fun x549 () Int)
(declare-fun x515 () Int)
(declare-fun x662 () Int)
(declare-fun x495 () Int)
(declare-fun x845 () Int)
(declare-fun x797 () Int)
(declare-fun x1317 () Bool)
(declare-fun x131 () Int)
(declare-fun x1055 () Bool)
(declare-fun x1226 () Int)
(declare-fun x11 () Int)
(declare-fun x285 (Int) Int)
(declare-fun x887 () Int)
(declare-fun x863 () Int)
(declare-fun x774 () Int)
(declare-fun x950 () Int)
(declare-fun x635 () Int)
(declare-fun x741 () Int)
(declare-fun x715 () Bool)
(declare-fun x749 () Int)
(declare-fun x959 () Int)
(declare-fun x42 () Int)
(declare-fun x22 () Int)
(declare-fun x93 () Int)
(declare-fun x808 () Int)
(declare-fun x608 () Int)
(declare-fun x402 () Int)
(declare-fun x859 () Int)
(declare-fun x714 () Int)
(declare-fun x780 () Int)
(declare-fun x796 () Int)
(declare-fun x1086 () Int)
(declare-fun x947 () Bool)
(declare-fun x1245 () Int)
(declare-fun x143 () Int)
(declare-fun x629 () Int)
(declare-fun x744 () Int)
(declare-fun x1300 () Int)
(declare-fun x43 () Int)
(declare-fun x391 () Int)
(declare-fun x895 () Int)
(declare-fun x359 () Int)
(declare-fun x301 () Int)
(declare-fun x702 () Int)
(declare-fun x1061 () Bool)
(declare-fun x66 () Int)
(declare-fun x904 () Int)
(declare-fun x1191 () Int)
(declare-fun x776 (Int) Int)
(declare-fun x803 () Bool)
(declare-fun x281 () Int)
(declare-fun x256 () Int)
(declare-fun x302 () Int)
(declare-fun x631 (Int) Int)
(declare-fun x49 () Bool)
(declare-fun x973 () Int)
(declare-fun x580 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1182 () Int)
(declare-fun x206 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1077 () Int)
(declare-fun x297 () Int)
(declare-fun x372 () Bool)
(declare-fun x1276 (Int Int Int) Int)
(declare-fun x708 () Int)
(declare-fun x249 () Int)
(declare-fun x1306 () Int)
(declare-fun x852 () Int)
(declare-fun x45 () Bool)
(declare-fun x894 () Int)
(declare-fun x527 () Int)
(declare-fun x529 () Bool)
(declare-fun x1247 () Int)
(declare-fun x633 () Int)
(declare-fun x1337 (Int Int Int Int Int) Int)
(declare-fun x37 () Int)
(declare-fun x204 () Int)
(declare-fun x41 () Int)
(declare-fun x733 () Int)
(declare-fun x1087 () Bool)
(declare-fun x502 () Int)
(declare-fun x133 () Int)
(declare-fun x636 () Int)
(declare-fun x1097 () Int)
(declare-fun x1250 () Int)
(declare-fun x870 () Int)
(declare-fun x327 () Int)
(declare-fun x525 () Int)
(declare-fun x748 () Int)
(declare-fun x805 () Int)
(declare-fun x51 () Bool)
(declare-fun x831 () Int)
(declare-fun x1329 () Int)
(declare-fun x1001 () Int)
(declare-fun x640 () Int)
(declare-fun x740 () Int)
(declare-fun x516 () Int)
(declare-fun x440 () Int)
(declare-fun x381 () Int)
(declare-fun x910 () Bool)
(declare-fun x235 (Int) Int)
(declare-fun x1242 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1176 () Int)
(declare-fun x566 () Int)
(declare-fun x426 () Int)
(declare-fun x1220 () Int)
(declare-fun x1174 () Int)
(declare-fun x200 () Int)
(declare-fun x1092 () Int)
(declare-fun x112 () Int)
(declare-fun x122 () Int)
(declare-fun x689 () Int)
(declare-fun x811 () Bool)
(declare-fun x913 () Int)
(declare-fun x1290 () Bool)
(declare-fun x491 () Int)
(declare-fun x923 () Int)
(declare-fun x1158 () Bool)
(declare-fun x650 () Int)
(declare-fun x499 (Int) Int)
(declare-fun x605 () Int)
(declare-fun x299 () Int)
(declare-fun x29 () Int)
(declare-fun x437 () Bool)
(declare-fun x1079 () Int)
(declare-fun x788 () Int)
(declare-fun x905 () Int)
(declare-fun x478 () Int)
(declare-fun x254 () Int)
(declare-fun x422 () Int)
(declare-fun x1029 () Int)
(declare-fun x240 () Int)
(declare-fun x1233 () Bool)
(declare-fun x980 () Int)
(declare-fun x1018 () Int)
(declare-fun x1047 () Int)
(declare-fun x374 () Int)
(declare-fun x1231 () Int)
(declare-fun x506 () Int)
(declare-fun x95 () Int)
(declare-fun x460 () Int)
(declare-fun x1075 () Int)
(declare-fun x997 () Int)
(declare-fun x1111 () Int)
(declare-fun x775 () Int)
(declare-fun x214 () Int)
(declare-fun x771 () Int)
(declare-fun x117 () Int)
(declare-fun x519 () Bool)
(declare-fun x1078 () Int)
(declare-fun x208 () Int)
(declare-fun x140 () Int)
(declare-fun x1214 () Int)
(declare-fun x425 () Int)
(declare-fun x619 () Int)
(declare-fun x46 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1207 () Bool)
(declare-fun x457 () Bool)
(declare-fun x1031 () Int)
(declare-fun x272 () Int)
(declare-fun x424 () Int)
(declare-fun x1335 () Int)
(declare-fun x246 () Int)
(declare-fun x967 () Int)
(declare-fun x1010 () Bool)
(declare-fun x882 () Int)
(declare-fun x180 () Int)
(declare-fun x953 () Int)
(declare-fun x879 () Int)
(declare-fun x951 () Int)
(declare-fun x476 () Int)
(declare-fun x922 () Int)
(declare-fun x884 () Int)
(declare-fun x118 () Int)
(declare-fun x498 () Int)
(declare-fun x546 () Int)
(declare-fun x856 () Int)
(declare-fun x310 () Int)
(declare-fun x936 () Bool)
(declare-fun x267 () Int)
(declare-fun x753 () Int)
(declare-fun x822 () Int)
(declare-fun x471 () Bool)
(declare-fun x992 () Int)
(declare-fun x587 () Int)
(declare-fun x218 () Int)
(declare-fun x881 () Int)
(declare-fun x1096 (Int Int) Int)
(declare-fun x473 () Int)
(declare-fun x16 () Int)
(declare-fun x795 () Int)
(declare-fun x67 () Int)
(declare-fun x1299 () Int)
(declare-fun x522 () Int)
(declare-fun x810 () Int)
(declare-fun x617 () Int)
(declare-fun x772 () Int)
(declare-fun x582 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1090 () Int)
(declare-fun x628 () Int)
(declare-fun x1012 () Int)
(declare-fun x263 () Int)
(declare-fun x343 (Int) Int)
(declare-fun x1277 () Int)
(declare-fun x955 () Bool)
(declare-fun x160 () Int)
(declare-fun x705 () Bool)
(declare-fun x848 () Int)
(declare-fun x145 (Int) Int)
(declare-fun x222 () Int)
(declare-fun x1230 () Int)
(declare-fun x393 () Int)
(declare-fun x1217 () Int)
(declare-fun x1275 () Bool)
(declare-fun x361 () Int)
(declare-fun x149 () Int)
(declare-fun x169 () Int)
(declare-fun x14 () Int)
(declare-fun x182 () Int)
(declare-fun x701 () Int)
(declare-fun x607 () Int)
(declare-fun x3 () Int)
(declare-fun x854 () Int)
(declare-fun x574 () Int)
(declare-fun x429 () Int)
(declare-fun x1308 () Int)
(declare-fun x436 () Int)
(declare-fun x176 () Bool)
(declare-fun x1221 (Int) Int)
(declare-fun x136 () Int)
(declare-fun x834 () Int)
(declare-fun x645 () Int)
(declare-fun x668 () Bool)
(declare-fun x841 () Int)
(declare-fun x399 (Int Int) Int)
(declare-fun x842 () Bool)
(declare-fun x765 () Int)
(declare-fun x1118 () Int)
(declare-fun x948 () Bool)
(declare-fun x695 () Bool)
(declare-fun x940 () Int)
(declare-fun x760 () Bool)
(declare-fun x930 () Int)
(declare-fun x394 () Int)
(declare-fun x167 () Int)
(declare-fun x470 () Int)
(declare-fun x247 () Bool)
(declare-fun x666 () Int)
(declare-fun x102 () Int)
(declare-fun x295 () Int)
(declare-fun x216 () Int)
(declare-fun x12 () Int)
(declare-fun x763 () Int)
(declare-fun x1072 () Int)
(declare-fun x468 () Int)
(declare-fun x844 () Bool)
(declare-fun x1172 () Int)
(declare-fun x983 () Int)
(declare-fun x320 () Bool)
(declare-fun x384 () Int)
(declare-fun x915 () Int)
(declare-fun x215 () Int)
(declare-fun x290 () Int)
(declare-fun x450 () Int)
(declare-fun x1005 () Int)
(declare-fun x654 () Int)
(declare-fun x229 () Bool)
(declare-fun x1050 (Int) Int)
(declare-fun x288 () Int)
(declare-fun x1104 () Int)
(declare-fun x289 () Int)
(declare-fun x150 () Bool)
(declare-fun x1040 () Int)
(declare-fun x528 () Int)
(declare-fun x27 () Int)
(declare-fun x541 () Int)
(declare-fun x321 () Int)
(declare-fun x1165 () Bool)
(declare-fun x441 () Bool)
(declare-fun x758 () Int)
(declare-fun x976 () Int)
(declare-fun x551 () Int)
(declare-fun x201 () Int)
(declare-fun x444 () Int)
(declare-fun x622 () Int)
(declare-fun x718 () Int)
(declare-fun x428 () Int)
(declare-fun x809 () Int)
(declare-fun x827 () Int)
(declare-fun x938 () Int)
(declare-fun x993 () Bool)
(declare-fun x152 () Int)
(declare-fun x1033 () Int)
(declare-fun x308 () Bool)
(declare-fun x284 () Int)
(declare-fun x1021 () Int)
(declare-fun x720 () Int)
(declare-fun x237 () Int)
(declare-fun x298 () Int)
(declare-fun x1101 () Int)
(declare-fun x595 () Bool)
(declare-fun x400 () Int)
(declare-fun x147 () Int)
(declare-fun x1095 () Int)
(declare-fun x487 () Int)
(declare-fun x330 () Int)
(declare-fun x341 () Bool)
(declare-fun x463 () Int)
(declare-fun x332 () Int)
(declare-fun x40 () Int)
(declare-fun x333 () Int)
(declare-fun x657 () Int)
(declare-fun x195 () Int)
(declare-fun x224 () Int)
(declare-fun x927 () Int)
(declare-fun x872 () Int)
(declare-fun x1004 () Int)
(declare-fun x716 () Int)
(declare-fun x98 () Int)
(declare-fun x244 () Int)
(declare-fun x711 () Int)
(declare-fun x942 () Int)
(declare-fun x1223 () Int)
(declare-fun x888 () Int)
(declare-fun x1000 () Int)
(declare-fun x219 () Bool)
(declare-fun x676 () Int)
(declare-fun x33 () Int)
(declare-fun x322 () Int)
(declare-fun x258 () Int)
(declare-fun x1219 () Int)
(declare-fun x677 () Int)
(declare-fun x575 () Bool)
(declare-fun x738 () Int)
(declare-fun x869 () Int)
(declare-fun x919 () Int)
(declare-fun x119 () Int)
(declare-fun x1239 () Int)
(declare-fun x485 () Int)
(declare-fun x38 () Int)
(declare-fun x1080 () Int)
(declare-fun x1203 () Bool)
(declare-fun x21 () Int)
(declare-fun x756 () Int)
(declare-fun x505 () Int)
(declare-fun x544 () Int)
(declare-fun x1208 () Int)
(declare-fun x647 () Bool)
(declare-fun x34 () Int)
(declare-fun x1186 () Int)
(declare-fun x1326 () Int)
(declare-fun x1227 () Int)
(declare-fun x99 () Int)
(declare-fun x1139 () Int)
(declare-fun x817 () Int)
(declare-fun x86 () Int)
(declare-fun x990 () Int)
(declare-fun x1048 () Int)
(declare-fun x704 () Int)
(declare-fun x80 () Int)
(declare-fun x861 () Int)
(declare-fun x196 () Int)
(declare-fun x735 () Int)
(declare-fun x994 () Int)
(declare-fun x475 () Int)
(declare-fun x999 () Bool)
(declare-fun x415 () Int)
(declare-fun x768 () Int)
(declare-fun x1193 () Int)
(declare-fun x113 () Bool)
(declare-fun x427 () Bool)
(declare-fun x985 () Int)
(declare-fun x273 () Int)
(declare-fun x130 () Bool)
(declare-fun x830 () Int)
(declare-fun x300 () Bool)
(declare-fun x873 () Int)
(declare-fun x815 () Int)
(declare-fun x588 () Int)
(declare-fun x576 () Int)
(declare-fun x353 () Int)
(declare-fun x92 () Bool)
(declare-fun x1121 () Int)
(declare-fun x172 () Int)
(declare-fun x179 () Int)
(declare-fun x100 () Int)
(declare-fun x1268 () Int)
(declare-fun x590 () Int)
(declare-fun x1238 () Int)
(declare-fun x77 () Int)
(declare-fun x601 () Int)
(declare-fun x802 () Int)
(declare-fun x943 () Int)
(declare-fun x228 () Int)
(declare-fun x191 () Int)
(declare-fun x134 () Int)
(declare-fun x968 () Int)
(declare-fun x345 () Int)
(declare-fun x166 () Int)
(declare-fun x685 () Int)
(declare-fun x779 () Bool)
(declare-fun x799 (Int) Bool)
(declare-fun x410 () Int)
(declare-fun x713 () Int)
(declare-fun x1316 () Bool)
(declare-fun x961 () Int)
(declare-fun x630 () Bool)
(declare-fun x862 () Int)
(declare-fun x696 () Int)
(declare-fun x545 () Int)
(declare-fun x1098 () Int)
(declare-fun x25 () Bool)
(declare-fun x1297 () Int)
(declare-fun x248 () Int)
(declare-fun x875 () Int)
(declare-fun x865 () Int)
(declare-fun x1003 () Int)
(declare-fun x10 () Int)
(declare-fun x1293 () Int)
(declare-fun x1302 () Bool)
(declare-fun x192 () Int)
(declare-fun x687 () Int)
(declare-fun x536 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1294 () Int)
(declare-fun x303 () Bool)
(declare-fun x307 () Int)
(declare-fun x269 () Bool)
(declare-fun x56 () Int)
(declare-fun x26 () Int)
(declare-fun x266 () Int)
(declare-fun x1309 () Int)
(declare-fun x243 () Bool)
(declare-fun x405 () Int)
(declare-fun x76 () Int)
(declare-fun x1053 () Int)
(declare-fun x20 () Int)
(declare-fun x178 () Bool)
(declare-fun x843 () Int)
(declare-fun x609 () Int)
(declare-fun x1085 () Int)
(declare-fun x466 () Bool)
(declare-fun x386 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1067 () Int)
(declare-fun x538 () Int)
(declare-fun x1156 () Int)
(declare-fun x1039 () Int)
(declare-fun x1265 (Int) Int)
(declare-fun x782 () Int)
(declare-fun x472 () Int)
(declare-fun x390 () Int)
(declare-fun x518 () Int)
(declare-fun x1270 () Int)
(declare-fun x2 () Int)
(declare-fun x1043 () Int)
(declare-fun x225 () Int)
(declare-fun x245 () Int)
(declare-fun x31 () Int)
(declare-fun x972 () Int)
(declare-fun x483 () Int)
(declare-fun x94 () Int)
(declare-fun x1006 () Int)
(declare-fun x153 () Int)
(declare-fun x210 () Int)
(declare-fun x220 () Int)
(declare-fun x511 () Int)
(declare-fun x793 () Int)
(declare-fun x1131 (Int Int) Int)
(declare-fun x944 () Int)
(declare-fun x83 () Int)
(declare-fun x787 () Int)
(declare-fun x729 () Int)
(declare-fun x1016 () Int)
(declare-fun x274 () Int)
(declare-fun x643 () Bool)
(declare-fun x557 () Int)
(declare-fun x477 () Int)
(declare-fun x703 () Int)
(declare-fun x490 () Bool)
(declare-fun x963 () Int)
(declare-fun x1305 () Int)
(declare-fun x550 () Int)
(declare-fun x558 () Bool)
(declare-fun x998 () Int)
(declare-fun x123 () Int)
(declare-fun x597 () Int)
(declare-fun x494 () Int)
(declare-fun x159 () Int)
(declare-fun x24 (Int) Int)
(declare-fun x1184 () Int)
(declare-fun x1254 (Int Int) Int)
(declare-fun x1328 () Int)
(declare-fun x567 () Int)
(declare-fun x532 () Int)
(declare-fun x555 () Int)
(declare-fun x745 () Int)
(declare-fun x268 () Int)
(declare-fun x835 () Int)
(declare-fun x127 () Int)
(declare-fun x1166 () Int)
(declare-fun x132 () Int)
(declare-fun x719 () Int)
(declare-fun x306 (Int) Int)
(declare-fun x461 () Int)
(declare-fun x188 () Int)
(declare-fun x79 () Int)
(declare-fun x611 () Int)
(declare-fun x156 () Int)
(declare-fun x75 () Int)
(declare-fun x414 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1157 () Int)
(declare-fun x354 () Int)
(declare-fun x1263 () Int)
(declare-fun x599 () Int)
(declare-fun x71 () Int)
(declare-fun x352 () Int)
(declare-fun x804 () Int)
(declare-fun x203 () Int)
(declare-fun x1271 () Int)
(declare-fun x572 () Int)
(declare-fun x23 () Int)
(define-fun x313 ((x586 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x586) (>= x586 0)) x586 (- x586 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x85 ((x586 Int)) Int (ite (and (< x586 0) (>= x586 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x586 115792089237316195423570985008687907853269984665640564039457584007913129639936) x586))
(define-fun x717 ((x586 Int)) Int (ite (and (>= x586 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x586)) x586 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x586) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x586)) (- x586 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x586 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x586 0)) (+ x586 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1131 x586 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x829 ((x28 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x28) (<= 0 x28)))
(define-fun x1038 ((x28 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x28) (>= x28 0)))
(define-fun x1123 ((x28 Int) (x395 Int)) Bool (= (* x395 x28) (x445 x28 x395)))
(define-fun x1288 ((x28 Int) (x395 Int)) Bool (and (= (- (* (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936) x28) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x445 x28 (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x28 (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x395 x28) (* x395 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) x395))))
(define-fun x534 ((x28 Int) (x395 Int)) Bool (=> (and (< 0 x28) (< 0 x395)) (= (= x395 (x949 (x717 (x445 x28 x395)) x28)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x445 x28 x395)))))
(define-fun x890 ((x28 Int) (x395 Int)) Bool (=> (and (not (= x395 0)) (not (= 0 x28))) (and (= (x949 (x445 x28 x395) x28) x395) (= (x949 (x445 x28 x395) x395) x28))))
(define-fun x517 ((x28 Int) (x395 Int)) Bool (=> (and (< 0 x395) (> x28 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x445 x28 x395)) (< (x949 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) x395))))
(define-fun x292 ((x28 Int) (x395 Int)) Bool (and (= (x717 (x445 x28 x395)) (x717 (x445 x28 (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x717 (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) x395)) (x717 (x445 x28 x395))) (= (x717 (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x717 (x445 x28 x395)))))
(define-fun x420 ((x28 Int) (x395 Int)) Bool (and (=> (and (and (<= x395 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x395)) (and (> x28 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28))) (= (>= (x949 57896044618658097711785492504343953926634992332820282019728792003956564819968 x395) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x28)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) x395)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x395)) (and (> x28 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28))) (= (<= (x445 (- x28 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x949 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x395)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x28)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) (> x395 0)) (and (< 0 x28) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28))) (= (>= (x949 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) x28) (<= (x445 x28 x395) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) (<= x395 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x28) (> x28 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x395) (x949 57896044618658097711785492504343953926634992332820282019728792003956564819968 x28)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x445 x28 (- x395 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x357 ((x28 Int) (x395 Int)) Bool (and (x1123 x28 x395) (x420 x28 x395) (x890 x28 x395) (x292 x28 x395) (x1288 x28 x395) (x534 x28 x395) (x517 x28 x395)))
(define-fun x331 ((x28 Int)) Bool (and (= 0 (x445 0 x28)) (= 0 (x445 x28 0))))
(define-fun x72 ((x28 Int)) Bool (and (= (x445 x28 1) x28) (= (x445 1 x28) x28)))
(define-fun x1224 ((x28 Int)) Bool (and (x72 x28) (x331 x28)))
(define-fun x371 ((x28 Int)) Bool (and (= (x399 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) x28) (= x28 (x399 x28 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x234 ((x28 Int)) Bool (and (= 0 (x399 0 x28)) (= 0 (x399 x28 0))))
(define-fun x319 ((x28 Int)) Bool (= x28 (x399 x28 x28)))
(define-fun x974 ((x28 Int)) Bool (and (x371 x28) (x234 x28) (x319 x28)))
(define-fun x1331 ((x28 Int) (x395 Int)) Bool (= (x399 x28 x395) (x399 x395 x28)))
(define-fun x432 ((x28 Int) (x395 Int)) Bool (and (=> (<= 0 x28) (>= x28 (x399 x28 x395))) (<= 0 (x399 x28 x395)) (=> (<= 0 x395) (>= x395 (x399 x28 x395)))))
(define-fun x892 ((x28 Int) (x395 Int)) Bool (and (x432 x28 x395) (x1331 x28 x395)))
(define-fun x1153 ((x28 Int)) Bool (= (x1131 x28 1461501637330902918203684832716283019655932542976) (x399 x28 1461501637330902918203684832716283019655932542975)))
(define-fun x1202 ((x28 Int)) Bool (and (x1153 x28) (x892 x28 1461501637330902918203684832716283019655932542975)))
(define-fun x1011 ((x28 Int) (x395 Int)) Bool (and (> x395 (x1131 x28 x395)) (>= (x1131 x28 x395) 0)))
(define-fun x121 ((x28 Int) (x395 Int)) Bool (=> (and (<= 0 x28) (> x395 0)) (= (> x395 x28) (= (x1131 x28 x395) x28))))
(define-fun x259 ((x28 Int) (x395 Int)) Bool (=> (and (and (>= x28 x395) (< x28 (+ x395 x395))) (< 0 x395)) (= (- x28 x395) (x1131 x28 x395))))
(define-fun x120 ((x28 Int) (x395 Int)) Bool (=> (< 0 x395) (= x28 (+ (* x395 (x949 x28 x395)) (x1131 x28 x395)))))
(define-fun x1002 ((x28 Int) (x395 Int)) Bool (and (x1011 x28 x395) (x120 x28 x395) (x259 x28 x395) (x121 x28 x395)))
(define-fun x1180 ((x28 Int)) Bool (= (x1131 0 x28) 0))
(define-fun x667 ((x28 Int)) Bool (= 0 (x1131 x28 1)))
(define-fun x190 ((x28 Int)) Bool (= (x1131 x28 x28) 0))
(define-fun x129 ((x28 Int)) Bool (and (x667 x28) (x190 x28) (x1180 x28)))
(define-fun x909 ((x28 Int)) Bool (= (x717 x28) (+ (x1131 x28 32) (x399 x28 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x514 ((x28 Int)) Bool (and (x892 x28 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x909 x28)))
(define-fun x568 ((x28 Int) (x395 Int)) Bool (=> (and (< 0 x395) (< 0 x28)) (and (<= (x949 x28 x395) x28) (<= 0 (x949 x28 x395)))))
(define-fun x398 ((x28 Int) (x395 Int)) Bool (=> (and (and (>= x28 0) (< x28 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x395 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x395))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x949 x28 x395)) (>= (x949 x28 x395) 0))))
(define-fun x1295 ((x28 Int) (x395 Int)) Bool (=> (and (< x395 x28) (> x395 1)) (> x28 (x949 x28 x395))))
(define-fun x280 ((x28 Int) (x395 Int)) Bool (=> (and (< 0 x395) (< 0 x28)) (= (> x395 x28) (= (x949 x28 x395) 0))))
(define-fun x1261 ((x28 Int) (x395 Int)) Bool (=> (and (> x395 0) (> x28 0)) (and (<= (* x395 (x949 x28 x395)) x28) (< (- x28 x395) (* x395 (x949 x28 x395))))))
(define-fun x1287 ((x28 Int) (x395 Int)) Bool (= (- x28 (x399 (- x395 1) x28)) (* x395 (x949 x28 x395))))
(define-fun x1127 ((x28 Int) (x395 Int)) Bool (and (x280 x28 x395) (x398 x28 x395) (x1261 x28 x395) (x1295 x28 x395) (x1287 x28 x395) (x568 x28 x395)))
(define-fun x342 ((x28 Int)) Bool (= 0 (x949 0 x28)))
(define-fun x1225 ((x28 Int)) Bool (= x28 (x949 x28 1)))
(define-fun x277 ((x28 Int)) Bool (=> (not (= x28 0)) (= (x949 x28 x28) 1)))
(define-fun x570 ((x28 Int)) Bool (and (x342 x28) (x1225 x28) (x277 x28)))
(define-fun x1160 ((x996 Int)) Int (ite (> x263 x996) (x1218 x996) 0))
(define-fun x1138 ((x996 Int)) Int 0)
(define-fun x334 ((x996 Int)) Int (x521 x996))
(define-fun x397 ((x996 Int)) Int (x1265 x996))
(define-fun x467 ((x996 Int)) Int (x776 x996))
(define-fun x154 ((x996 Int)) Int (x124 x996))
(define-fun x337 ((x996 Int)) Int (x145 x996))
(define-fun x1120 ((x996 Int)) Int 0)
(define-fun x747 ((x996 Int)) Int (ite (= 4 x996) 32 (x1120 x996)))
(define-fun x1198 ((x996 Int)) Int (ite (= 36 x996) x622 (x747 x996)))
(define-fun x1253 ((x996 Int)) Int (ite (= x996 68) x1304 (x1198 x996)))
(define-fun x917 ((x996 Int)) Int (ite (= x996 100) x287 (x1253 x996)))
(define-fun x125 ((x996 Int)) Int (ite (= x996 132) 352 (x917 x996)))
(define-fun x613 ((x996 Int)) Int (ite (= x996 388) x89 (x125 x996)))
(define-fun x376 ((x996 Int)) Int (ite (and (> (+ x956 420) x996) (>= x996 420)) (x334 (- x996 420)) (x613 x996)))
(define-fun x682 ((x996 Int)) Int (ite (= 164 x996) x1163 (x376 x996)))
(define-fun x421 ((x996 Int)) Int (ite (= x996 x645) x161 (x682 x996)))
(define-fun x644 ((x996 Int)) Int (ite (and (<= x54 x996) (> (+ x54 x1322) x996)) (x397 (- x996 x54)) (x421 x996)))
(define-fun x510 ((x996 Int)) Int (ite (= x996 196) x553 (x644 x996)))
(define-fun x1028 ((x996 Int)) Int (ite (= x654 x996) x1040 (x510 x996)))
(define-fun x503 ((x996 Int)) Int (ite (and (<= x155 x996) (> (+ x155 x873) x996)) (x467 (- x996 x155)) (x1028 x996)))
(define-fun x897 ((x996 Int)) Int (ite (= x996 228) x583 (x503 x996)))
(define-fun x1091 ((x996 Int)) Int (ite (= x865 x996) x843 (x897 x996)))
(define-fun x151 ((x996 Int)) Int (ite (and (> (+ x1185 x843) x996) (<= x1185 x996)) (x154 (- x996 x1185)) (x1091 x996)))
(define-fun x1312 ((x996 Int)) Int (ite (= x996 260) x792 (x151 x996)))
(define-fun x1189 ((x996 Int)) Int (ite (= x895 x996) x541 (x1312 x996)))
(define-fun x853 ((x996 Int)) Int (ite (and (> (+ x273 x126) x996) (<= x273 x996)) (x337 (- x996 x273)) (x1189 x996)))
(define-fun x761 ((x996 Int)) Int (ite (= x996 292) x805 (x853 x996)))
(define-fun x970 ((x996 Int)) Int (ite (= 324 x996) x1155 (x761 x996)))
(define-fun x579 ((x996 Int)) Int (ite (= x996 356) x883 (x970 x996)))
(define-fun x84 ((x996 Int)) Int (ite (= x58 x996) x1114 (x24 x996)))
(define-fun x1237 ((x996 Int)) Int (ite (= x496 x996) x741 (x84 x996)))
(define-fun x144 ((x996 Int)) Int (ite (= 128 x996) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1138 x996)))
(define-fun x876 ((x996 Int)) Int (ite (= x996 132) x312 (x144 x996)))
(define-fun x627 ((x996 Int)) Int (ite (= 164 x996) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x876 x996)))
(define-fun x971 ((x996 Int)) Int (ite (and (>= x996 128) (< x996 160)) (x598 (- x996 128)) (x627 x996)))
(define-fun x350 ((x996 Int)) Int (ite x760 (x971 x996) (x627 x996)))
(define-fun x596 ((x996 Int)) Int (ite (and (<= 128 x996) (< x996 160)) (x598 (- x996 128)) (x350 x996)))
(define-fun x1183 ((x996 Int)) Int (ite (= x996 288) x683 (x596 x996)))
(define-fun x232 ((x996 Int)) Int (ite (= 160 x996) 288 (x1183 x996)))
(define-fun x821 ((x996 Int)) Int (ite (= 320 x996) x978 (x232 x996)))
(define-fun x1178 ((x996 Int)) Int (ite (= x996 352) x1294 (x821 x996)))
(define-fun x211 ((x996 Int)) Int (ite (= 448 x996) x657 (x1178 x996)))
(define-fun x137 ((x996 Int)) Int (ite (= x996 x1082) x179 (x211 x996)))
(define-fun x8 ((x996 Int)) Int (ite (= x996 x505) x1071 (x137 x996)))
(define-fun x233 ((x996 Int)) Int (ite (= x996 x879) x56 (x8 x996)))
(define-fun x1286 ((x996 Int)) Int (ite (and (<= x29 x996) (> (+ x56 x29) x996)) (x579 (- (+ x402 x996) x29)) (x233 x996)))
(define-fun x937 ((x996 Int)) Int (ite (= x996 x1151) 0 (x1286 x996)))
(define-fun x368 ((x996 Int)) Int (ite (= x525 x996) x879 (x937 x996)))
(define-fun x1009 ((x996 Int)) Int (ite (= 480 x996) x1082 (x368 x996)))
(define-fun x693 ((x996 Int)) Int (ite x603 (x211 x996) (x1009 x996)))
(define-fun x540 ((x996 Int)) Int (ite (= x996 384) 448 (x693 x996)))
(define-fun x542 ((x996 Int)) Int (ite (= x996 x449) x1032 (x540 x996)))
(define-fun x556 ((x996 Int)) Int (ite (and (> (+ x543 x1032) x996) (>= x996 x543)) (x579 (- (+ x996 x1299) x543)) (x542 x996)))
(define-fun x669 ((x996 Int)) Int (ite (= x996 x1152) 0 (x556 x996)))
(define-fun x401 ((x996 Int)) Int (ite (= 416 x996) x449 (x669 x996)))
(define-fun x560 ((x996 Int)) Int (ite (= x996 192) 320 (x401 x996)))
(define-fun x459 ((x996 Int)) Int (ite (= 224 x996) x633 (x560 x996)))
(define-fun x739 ((x996 Int)) Int (ite (= x996 256) x939 (x459 x996)))
(define-fun x899 ((x996 Int)) Int (ite (= x996 x1000) x927 (x739 x996)))
(define-fun x933 ((x996 Int)) Int (ite (and (>= x996 x393) (> (+ x927 x393) x996)) (x579 (- (+ x369 x996) x393)) (x899 x996)))
(define-fun x442 ((x996 Int)) Int (ite (= x996 x1097) 0 (x933 x996)))
(define-fun x769 ((x996 Int)) Int (ite (= x495 x996) x1279 (x442 x996)))
(define-fun x78 ((x996 Int)) Int (ite (= x472 x996) x1128 (x769 x996)))
(define-fun x1173 ((x996 Int)) Int (ite (= x75 x996) x728 (x78 x996)))
(define-fun x62 ((x996 Int)) Int (ite (= x619 x996) x3 (x1173 x996)))
(define-fun x697 ((x996 Int)) Int (ite (= x996 x863) x443 (x62 x996)))
(define-fun x115 ((x996 Int)) Int (ite (= x996 x590) x930 (x697 x996)))
(define-fun x658 ((x996 Int)) Int (ite (= x996 x1256) x498 (x115 x996)))
(define-fun x419 ((x996 Int)) Int (ite (= x996 x213) x619 (x658 x996)))
(define-fun x1130 ((x996 Int)) Int (ite x1233 (x1173 x996) (x419 x996)))
(define-fun x217 ((x996 Int)) Int (ite (= x996 x885) x75 (x1130 x996)))
(define-fun x1252 ((x996 Int)) Int (ite (= x996 x1079) x539 (x217 x996)))
(define-fun x880 ((x996 Int)) Int (ite (= x701 x996) x1041 (x1252 x996)))
(define-fun x966 ((x996 Int)) Int (ite (= x55 x996) x1245 (x880 x996)))
(define-fun x392 ((x996 Int)) Int (ite (= x637 x996) x1143 (x966 x996)))
(define-fun x907 ((x996 Int)) Int (ite (= x954 x996) x1043 (x392 x996)))
(define-fun x1278 ((x996 Int)) Int (ite (= x996 x788) x968 (x907 x996)))
(define-fun x326 ((x996 Int)) Int (ite (= x996 x688) x701 (x1278 x996)))
(define-fun x871 ((x996 Int)) Int (ite x1206 (x1252 x996) (x326 x996)))
(define-fun x464 ((x996 Int)) Int (ite (= x996 x64) x1079 (x871 x996)))
(define-fun x171 ((x996 Int)) Int (ite (= x996 x1228) x1105 (x464 x996)))
(define-fun x1235 ((x996 Int)) Int (ite (= x751 x996) x1285 (x171 x996)))
(define-fun x1093 ((x996 Int)) Int (ite (= x754 x996) x455 (x1235 x996)))
(define-fun x812 ((x996 Int)) Int (ite (= x996 x1090) x1332 (x1093 x996)))
(define-fun x255 ((x996 Int)) Int (ite (= x307 x996) x850 (x812 x996)))
(define-fun x433 ((x996 Int)) Int (ite (= x1262 x996) x634 (x255 x996)))
(define-fun x435 ((x996 Int)) Int (ite (= x996 x1136) x751 (x433 x996)))
(define-fun x585 ((x996 Int)) Int (ite x300 (x171 x996) (x435 x996)))
(define-fun x709 ((x996 Int)) Int (ite (= x996 x1167) x1228 (x585 x996)))
(define-fun x724 ((x996 Int)) Int (ite (= x996 x597) x912 (x709 x996)))
(define-fun x1274 ((x996 Int)) Int (ite (= x996 x952) x183 (x724 x996)))
(define-fun x282 ((x996 Int)) Int (ite (= x870 x996) x625 (x1274 x996)))
(define-fun x1195 ((x996 Int)) Int (ite (= x1226 x996) x160 (x282 x996)))
(define-fun x1058 ((x996 Int)) Int (ite (= x996 x867) x1157 (x1195 x996)))
(define-fun x1164 ((x996 Int)) Int (ite (= x996 x911) x532 (x1058 x996)))
(define-fun x5 ((x996 Int)) Int (ite (and (<= x175 x996) (> (+ x175 x361) x996)) (x579 (- (+ x996 x1063) x175)) (x1164 x996)))
(define-fun x63 ((x996 Int)) Int (ite x558 (x1164 x996) (x5 x996)))
(define-fun x81 ((x996 Int)) Int (ite x111 (x63 x996) (x343 x996)))
(define-fun x941 ((x996 Int)) Int (ite (= x996 x1037) x677 (x81 x996)))
(define-fun x197 ((x996 Int)) Int (ite x723 (x941 x996) (ite x239 (x81 x996) (x235 x996))))
(define-fun x340 ((x996 Int)) Int (ite (= x996 x182) x321 (x197 x996)))
(define-fun x50 ((x996 Int)) Int (ite (= x996 x858) x886 (x340 x996)))
(define-fun x908 ((x996 Int)) Int (ite (= x996 x348) x218 (x50 x996)))
(define-fun x1210 ((x996 Int)) Int (ite (= x996 x381) x563 (x908 x996)))
(define-fun x231 ((x996 Int)) Int (ite (= x906 x996) x1018 (x1210 x996)))
(define-fun x674 ((x996 Int)) Int (ite (= x996 x758) x1035 (x231 x996)))
(define-fun x311 ((x996 Int)) Int (ite (= x996 x328) x1194 (x674 x996)))
(define-fun x960 ((x996 Int)) Int (ite (= x996 x1234) x1019 (x311 x996)))
(define-fun x314 ((x996 Int)) Int (ite (= x996 x14) x1021 (x960 x996)))
(define-fun x1222 ((x996 Int)) Int (ite (= x996 x205) x1104 (x314 x996)))
(define-fun x840 ((x996 Int)) Int (ite (= x593 x996) x94 (x1222 x996)))
(define-fun x1145 ((x996 Int)) Int (ite (= x996 x902) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x840 x996)))
(define-fun x251 ((x996 Int)) Int (ite (= x996 x1094) x131 (x1145 x996)))
(define-fun x1240 ((x996 Int)) Int (ite (= x996 x1125) x36 (x251 x996)))
(define-fun x1122 ((x996 Int)) Int (x1240 x996))
(define-fun x681 ((x996 Int)) Int (ite (= x204 x996) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x1122 x996)))
(define-fun x712 ((x996 Int)) Int (ite (= x1217 x996) x1140 (x681 x996)))
(define-fun x639 ((x996 Int)) Int (ite (= x93 x996) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x712 x996)))
(define-fun x286 ((x996 Int)) Int (ite (and (<= x204 x996) (> (+ x204 32) x996)) (x920 (- x996 x204)) (x639 x996)))
(define-fun x1323 ((x996 Int)) Int (ite x479 (x286 x996) (x639 x996)))
(define-fun x1333 ((x996 Int)) Int (ite (and (> (+ 32 x204) x996) (>= x996 x204)) (x920 (- x996 x204)) (x1323 x996)))
(define-fun x600 ((x996 Int)) Int (ite (= x996 x640) x38 (x1333 x996)))
(define-fun x355 ((x996 Int)) Int (ite (and (< x996 (+ x493 x1177)) (<= x493 x996)) (x579 (- (+ x1063 x996) x493)) (x600 x996)))
(define-fun x338 ((x996 Int)) Int (ite x269 (x600 x996) (x355 x996)))
(define-fun x1229 ((x996 Int)) Int (ite (= x896 x996) x1223 (x338 x996)))
(define-fun x227 ((x996 Int)) Int (ite (= x832 x996) x246 (x1229 x996)))
(define-fun x430 ((x996 Int)) Int (ite (= x996 x650) x834 (x227 x996)))
(define-fun x1110 ((x996 Int)) Int (ite (= x996 x869) 128 (x430 x996)))
(define-fun x189 ((x996 Int)) Int (ite (= x236 x996) x462 (x1110 x996)))
(define-fun x165 ((x996 Int)) Int (ite (= x1124 x996) x515 (x189 x996)))
(define-fun x347 ((x996 Int)) Int (ite x529 (x165 x996) (ite x803 (x189 x996) (x1280 x996))))
(define-fun x1134 ((x996 Int)) Int (ite (= x194 x996) 0 (x347 x996)))
(define-fun x918 ((x996 Int)) Int (ite (= x828 x996) x768 (x1134 x996)))
(define-fun x589 ((x996 Int)) Int (ite (= x996 x605) x1027 (x918 x996)))
(define-fun x533 ((x996 Int)) Int (ite x993 (x338 x996) (x589 x996)))
(define-fun x1196 ((x996 Int)) Int (ite (= x1298 x996) x21 (x533 x996)))
(define-fun x531 ((x996 Int)) Int (ite x206 (x1196 x996) (ite x670 (x533 x996) (x975 x996))))
(define-fun x1211 ((x996 Int)) Int (ite (= x996 x617) x352 (x531 x996)))
(define-fun x17 ((x996 Int)) Int (ite (= x996 x1320) x886 (x1211 x996)))
(define-fun x413 ((x996 Int)) Int (ite (= x905 x996) x1334 (x17 x996)))
(define-fun x379 ((x996 Int)) Int (ite (= x1084 x996) x824 (x413 x996)))
(define-fun x989 ((x996 Int)) Int (ite (= x996 x1236) x335 (x379 x996)))
(define-fun x928 ((x996 Int)) Int (ite (= x996 x699) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x989 x996)))
(define-fun x1013 ((x996 Int)) Int (ite (= x1188 x996) x1171 (x928 x996)))
(define-fun x1059 ((x996 Int)) Int (ite (and (< x996 (+ 32 x699)) (>= x996 x699)) (x114 (- x996 x699)) (x1013 x996)))
(define-fun x616 ((x996 Int)) Int (ite x955 (x1059 x996) (x1013 x996)))
(define-fun x934 ((x996 Int)) Int (ite (and (< x996 (+ 32 x699)) (<= x699 x996)) (x114 (- x996 x699)) (x616 x996)))
(define-fun x1106 ((x996 Int)) Int (ite (= x996 x1175) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x934 x996)))
(define-fun x659 ((x996 Int)) Int (ite (= x756 x996) x1244 (x1106 x996)))
(define-fun x315 ((x996 Int)) Int (ite (and (< x996 (+ x1175 32)) (>= x996 x1175)) (x642 (- x996 x1175)) (x659 x996)))
(define-fun x594 ((x996 Int)) Int (ite x581 (x315 x996) (x659 x996)))
(define-fun x564 ((x996 Int)) Int (ite (and (<= x1175 x996) (> (+ 32 x1175) x996)) (x642 (- x996 x1175)) (x594 x996)))
(define-fun x88 ((x996 Int)) Int (ite (= x996 x1269) x1330 (x564 x996)))
(define-fun x898 ((x996 Int)) Int (ite (= x996 x310) 0 (x88 x996)))
(define-fun x651 ((x996 Int)) Int (ite (= x996 x1065) 0 (x898 x996)))
(define-fun x537 ((x996 Int)) Int (ite (= x922 x996) 0 (x651 x996)))
(define-fun x995 ((x996 Int)) Int (ite (= x770 x996) 0 (x537 x996)))
(define-fun x932 ((x996 Int)) Int (ite (= x1309 x996) 0 (x995 x996)))
(define-fun x1159 ((x996 Int)) Int (ite (= x958 x996) x310 (x932 x996)))
(define-fun x752 ((x996 Int)) Int (ite (= x96 x996) 0 (x1159 x996)))
(define-fun x1045 ((x996 Int)) Int (ite (= x996 x276) 0 (x752 x996)))
(define-fun x1243 ((x996 Int)) Int (ite (= x996 x689) 0 (x1045 x996)))
(define-fun x524 ((x996 Int)) Int (ite (= x996 x141) 0 (x1243 x996)))
(define-fun x509 ((x996 Int)) Int (ite (= x767 x996) 0 (x524 x996)))
(define-fun x664 ((x996 Int)) Int (ite (= x663 x996) x96 (x509 x996)))
(assert (x829 x204))
(assert (x829 x82))
(assert (x829 x1137))
(assert (x829 x245))
(assert (x829 x1024))
(assert (x829 x400))
(assert (= x206 (and x678 x176)))
(assert (x829 x1255))
(assert (x829 x152))
(assert (x799 2189116922))
(assert (=> (<= x188 10000) (= (x296 x188) 0)))
(assert (x829 x1321))
(assert (x829 x548))
(assert (=> (>= 10000 x1025) (= 0 (x296 x1025))))
(assert (x829 x1176))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x799 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x1002 x1052 1461501637330902918203684832716283019655932542976))
(assert (x829 x1298))
(assert (x829 x565))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x829 x590))
(assert (= x45 (or x300 x329)))
(assert (=> (<= x481 10000) (= 0 (x296 x481))))
(assert (x829 x328))
(assert (not (x799 (x209 x406 x794 x891 x576))))
(assert (x829 x1148))
(assert (=> (>= 10000 x101) (= (x296 x101) 0)))
(assert (x829 x1294))
(assert (x829 x389))
(assert (x829 x978))
(assert (x829 x146))
(assert (= (x294 (x691 x248 x483 x101 x1319 x389 x791)) x389))
(assert (x829 x992))
(assert (x829 x33))
(assert (x974 x1100))
(assert (x829 x429))
(assert (x829 x391))
(assert (= (x306 (x1050 0)) 0))
(assert (x829 x1012))
(assert (x829 x708))
(assert (x829 x1048))
(assert (x829 x790))
(assert (= (x306 (x1337 x248 x198 x408 x773 x1246)) x248))
(assert (=> (<= x454 10000) (= (x296 x454) 0)))
(assert (x829 x288))
(assert (x829 x1056))
(assert (=> (<= x1193 10000) (= (x296 x1193) 0)))
(assert (= (x499 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)) x604))
(assert (x974 x172))
(assert (x829 x805))
(assert (x829 x507))
(assert (x829 x720))
(assert (x829 x820))
(assert (x829 x1228))
(assert (x1224 x541))
(assert (x829 x76))
(assert (x829 x98))
(assert (x829 x929))
(assert (< 10000 (x621 x476 x982 x694 x444 x964 x487 x900)))
(assert (x829 x1279))
(assert (x1002 x609 1461501637330902918203684832716283019655932542976))
(assert (x829 x256))
(assert (= (x73 (x621 x476 x982 x694 x444 x964 x487 x900)) x982))
(assert (x829 x411))
(assert (x829 x41))
(assert (not (x799 (x1276 x872 x686 x481))))
(assert (x829 x252))
(assert (x829 x687))
(assert (x829 x94))
(assert (= x272 (x499 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x856))
(assert (x829 x997))
(assert (x829 x1032))
(assert (x829 x56))
(assert (x829 x1171))
(assert (< (x1276 x872 x686 x481) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1276 x406 x763 x202)))
(assert (= (x296 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) (x30 x406 x83 x110 x1057 x855 x696 x789 x424)))
(assert (x1224 x1330))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (x829 x1181))
(assert (x829 x222))
(assert (< 10000 (x1337 x248 x198 x408 x773 x1246)))
(assert (not (x799 (x621 x476 x982 x694 x444 x964 x487 x900))))
(assert (x829 x1315))
(assert (x829 x40))
(assert (=> (>= 10000 x238) (= (x296 x238) 0)))
(assert (x829 x640))
(assert (x829 x774))
(assert (= (x306 (x691 x248 x483 x101 x1319 x389 x791)) x248))
(assert (x829 x748))
(assert (x829 x408))
(assert (= x798 (x73 (x1096 x1044 x798))))
(assert (= (x1221 (x30 x248 x439 x57 x60 x929 x127 x391 x516)) x516))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1276 x248 x520 x238)))
(assert (< 10000 (x1276 x99 x721 x1315)))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (x829 x1046))
(assert (x829 x1217))
(assert (< (x1096 x872 x140) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x294 (x691 x406 x985 x857 x71 x507 x353)) x507))
(assert (x829 x1083))
(assert (=> (<= x714 10000) (= (x296 x714) 0)))
(assert (= (=> (and (or (and (= x1208 0) (not x1242)) x1242) (= (= 0 x1208) x1242)) x1133) x643))
(assert (= x872 (x306 (x209 x872 x148 x1328 x961))))
(assert (= (x296 18446744073709551455) 0))
(assert (x829 x550))
(assert (x829 x77))
(assert (= (x209 x872 x148 x1328 x961) (x296 (x209 x872 x148 x1328 x961))))
(assert (x829 x476))
(assert (=> (>= 10000 x591) (= 0 (x296 x591))))
(assert (x1038 x1063))
(assert (= (x499 (x691 x827 x12 x426 x1103 x1095 x649)) x426))
(assert (x829 x1296))
(assert (x829 x961))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x799 2065879269376))
(assert (< 10000 (x621 x406 x913 x727 x117 x200 x1012 x290)))
(assert (x829 x1205))
(assert (x829 x742))
(assert (x829 x605))
(assert (x829 x741))
(assert (x829 x1053))
(assert (x829 x393))
(assert (x974 x1080))
(assert (x829 x767))
(assert (x829 x846))
(assert (x974 x702))
(assert (x829 x1104))
(assert (x357 128 x89))
(assert (x829 x828))
(assert (=> (>= 10000 x225) (= (x296 x225) 0)))
(assert (not (x799 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (x829 x857))
(assert (x829 x732))
(assert (= x993 (and (not x138) x186)))
(assert (= (x294 (x621 x872 x571 x188 x477 x480 x656 x845)) x480))
(assert (< 10000 (x209 x406 x794 x891 x576)))
(assert (= (x306 (x1337 x872 x1227 x1291 x146 x802)) x872))
(assert (x829 x139))
(assert (x829 x673))
(assert (x829 x925))
(assert (=> (>= 10000 x389) (= (x296 x389) 0)))
(assert (= x132 (x1170 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (x829 x506))
(assert (x1038 x323))
(assert (x829 x1182))
(assert (= x1258 (and (not x1089) x984)))
(assert (x829 x783))
(assert (x829 x601))
(assert (=> (<= x794 10000) (= (x296 x794) 0)))
(assert (= (x296 4294967295) 0))
(assert (x829 x836))
(assert (= (x296 18446744073709551614) 0))
(assert (= x842 (=> (and (<= x449 18446744073709551614) (= (x579 x293) x939) (<= x927 18446744073709551615) (or (and (> x52 x1137) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1137) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x52))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1137) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x52))) (= (+ x1032 31) x452) (= x472 (+ 32 x495)) (= x393 (+ 32 x1000)) (<= x449 18446744073709551613) (= x619 (+ x75 x11 32)) (<= x675 18446744073709551615) (<= x495 18446744073709551615) (or (>= 2065879269376 x1137) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1137)) (>= 18446744073709551614 x327) (= (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x139) x501) (= (x313 (+ x1137 36)) x662) (not (> x1325 x470)) (= x1034 (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x452)) (= x213 (+ 32 x75)) (= x230 (+ x501 63)) (= (x85 (- x1063 x404)) x241) (= (x313 (+ x502 x449)) x1000) (= (x313 (+ 32 x816)) x742) (= x702 (+ 63 x1034)) (= (x579 x742) x959) (= (+ x1000 x327) x495) (= x502 (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x702)) (> x495 x1000) (= (x579 36) x1279) (= (x313 (+ x449 32)) x543) (= (x313 (+ x461 32)) x1219) (= (x313 (+ 32 x662)) x734) (= (x313 (+ 32 x158)) x369) (= x119 (x313 (+ x158 31))) (or (<= x1307 18446746139588821027) (>= x1307 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (>= 18446744073709551615 x1032) (or (and (= (<= x470 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x119 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x470 x119)) (and (> x119 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x470 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x313 (+ x369 x927)) x1325) (not (or (and (= (<= x241 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x734 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x241 x734)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x734) (> x241 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1307 (x313 (+ x959 x102))) (not (< x1000 x449)) (<= 2 x495) (= x293 (x313 (+ x1219 32))) (= x1032 (x579 x1307)) (= (< 0 x728) x441) (= (x313 (+ 32 x755)) x587) (= (x579 x1219) x633) (= x885 (+ 32 x472)) (= (x313 (+ 32 x1307)) x1299) (= x139 (+ x927 31)) (= x1311 (x313 (+ x1299 x1032))) (= x988 (x313 (+ 31 x1307))) (= (x579 132) x1137) (<= x959 18446744073709551615) (= x158 (x313 (+ x755 x675))) (= x327 (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x230)) (not (< x470 x1311)) (= x11 (* 32 x728)) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x449) (>= 18446744073709551614 x449)) (< x75 x619) (>= 1461501637330902918203684832716283019655932542975 x939) (or (>= x449 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551614 x449)) (= (x579 x158) x927) (= x1152 (x313 (+ x1032 x543))) (not (> x1000 x495)) (= x1097 (+ x393 x927)) (>= 18446744073709551613 x449) (<= x449 18446744073709551613) (<= x449 18446744073709551614) (>= 18446744073709551615 x728) (or (>= x158 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x158 18446746139588821027)) (= x404 (* 128 x728)) (>= x1000 1) (> x1000 x449) (= x1128 (x579 356)) (<= x449 18446744073709551614) (>= 18446744073709551614 x1000) (or (and (= (<= x988 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x470)) (> x470 x988)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x988) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x470))) (> x75 x495) (= x728 (x579 x662)) (or (>= x449 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551614 x449)) (= (x579 x587) x675) (= x75 (+ x495 224))) (and (=> (and (not x441) (= x1079 x619)) x847) (=> x441 x223)))))
(assert (= (x1170 (x621 x872 x571 x188 x477 x480 x656 x845)) x845))
(assert (x829 x763))
(assert (x829 x614))
(assert (= (x296 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)) (x30 x99 x554 x1025 x257 x396 x719 x317 x425)))
(assert (x974 x1067))
(assert (x829 x39))
(assert (x829 x140))
(assert (x829 x241))
(assert (x1002 x1100 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x454))
(assert (= x825 (and x362 (not x1242))))
(assert (= (x47 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) x1057))
(assert (= x852 (x73 (x1096 x99 x852))))
(assert (=> (<= x891 10000) (= (x296 x891) 0)))
(assert (= (x294 (x1337 x99 x775 x345 x711 x416)) x416))
(assert (x829 x54))
(assert (=> (>= 10000 x142) (= 0 (x296 x142))))
(assert (=> (>= 10000 x33) (= (x296 x33) 0)))
(assert (= (x306 (x621 x476 x982 x694 x444 x964 x487 x900)) x476))
(assert (x829 x369))
(assert (=> (<= x798 10000) (= (x296 x798) 0)))
(assert (x829 x1060))
(assert (=> (>= 10000 x383) (= (x296 x383) 0)))
(assert (x829 x289))
(assert (= x262 (x47 (x209 x476 x1263 x991 x262))))
(assert (= x558 (and x45 x44)))
(assert (x829 x895))
(assert (x570 x819))
(assert (= (and x1010 (not x668)) x457))
(assert (x1038 x263))
(assert (= x727 (x499 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (x829 x70))
(assert (= (x1096 x406 x383) (x296 (x1096 x406 x383))))
(assert (x799 18446744073709551614))
(assert (= (x47 (x209 x406 x794 x891 x576)) x576))
(assert (= (x306 (x621 x1044 x1193 x384 x714 x208 x545 x132)) x1044))
(assert (x1202 x607))
(assert (= (x47 (x691 x248 x483 x101 x1319 x389 x791)) x1319))
(assert (x799 2065879269316))
(assert (= (x296 (x691 x476 x875 x1184 x562 x225 x720)) (x691 x476 x875 x1184 x562 x225 x720)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1276 x1044 x1036 x623)))
(assert (x829 x428))
(assert (= 0 (x296 57896044618658097711785492504343953926634992332820282019728792003956564820036)))
(assert (x829 x102))
(assert (= (x306 (x691 x406 x985 x857 x71 x507 x353)) x406))
(assert (x829 x1230))
(assert (=> (>= 10000 x1255) (= (x296 x1255) 0)))
(assert (x829 x1105))
(assert (x829 x830))
(assert (x829 x619))
(assert (x829 x155))
(assert (x829 x402))
(assert (= x408 (x499 (x1337 x248 x198 x408 x773 x1246))))
(assert (x829 x1030))
(assert (= x362 (or x1258 x746)))
(assert (= (=> (and (and (and (and (<= x1257 x1238) (= x956 (* 128 x89)) (= x583 (- x865 36)) (= (* x1116 32) x1238) (= x843 x1257) (= x865 (+ x654 x873 32)) (= (+ 32 x645) x54) (= x359 (+ 32 x126 x895)) (= (+ x645 x1322 32) x654) (= (* x161 160) x1322) (= (* 32 (- x1116 1)) x942) (= x895 (+ x1238 x865 32)) (<= 0 x1116) (= x873 (* 160 x1040)) (> x1257 x942) (= (- x645 36) x1163) (= (- x654 36) x553) (= (+ 32 x654) x155) (>= 134217728 x1116) (= (+ x865 32) x1185) (= x792 (- x895 36)) (= (+ x956 420) x645) (= x588 x287) (= x126 (* x541 32)) (= x273 (+ x895 32))) (and (and (and (= x407 false) (= x737 x1155) (= x1063 x359)) (and (= x1064 x312) (and (= x196 x86) (and (or (and (not x247) (= x874 x1083)) (and x247 (and (>= 4294967295 x323) (<= 32 x323) (= x874 1)))) (and (= x835 128) (= (> x1083 0) x247) (= false x757) (>= 1461501637330902918203684832716283019655932542975 x849) (= (x84 x496) x1268) (= x374 37664329658542632380461339884011895550187483938955784695590509376205521682432) (>= 127 x708) (= x456 false) (>= x323 32) (>= x801 1) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x730) (= x1318 2189116922) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x323) (<= x708 127) (= x741 x1268) (= (x24 x58) x1114) (= (x285 x496) x801) (= x1064 x58)))))) (= x1074 x805))) (= x1247 x1304)) (and (not (= x817 x1259)) (not (= x1321 x772)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x814) (not (= x128 x772)) (>= 4294967295 x89) (<= x10 4294967295) (= (> (x285 x772) 0) x1061) (not (= x817 x772)) (>= 1461501637330902918203684832716283019655932542975 x1064) (not (= x82 x128)) (not (= x373 x817)) (not (= x128 x373)) x490 (>= x394 1) (>= x254 0) (<= x301 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x817 x128)) (>= x1259 1) (= (> (x285 x162) 0) x647) x999 (<= x373 1461501637330902918203684832716283019655932542975) (<= x1150 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x588 1461501637330902918203684832716283019655932542975) (= x394 x373) (<= x823 1461501637330902918203684832716283019655932542975) (= x1213 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x737) (not (= x373 x496)) (<= 548 x1063) (>= x737 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x786) (not (= x373 x1321)) (>= 4294967295 x161) (not (= x162 x373)) (not (= x1321 x82)) (not (= x128 x162)) (not (= x82 x1259)) (>= x196 0) (<= 1 x82) (not (= x82 x373)) (<= x923 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x772) (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x786) (= x373 x1313) (not (= x128 x1259)) (not (= x1321 x162)) (<= x162 1461501637330902918203684832716283019655932542975) (<= x1313 1461501637330902918203684832716283019655932542975) (not (= x82 x496)) (>= 1461501637330902918203684832716283019655932542975 x990) (not (= x1259 x1321)) x710 (= 0 x1187) (not (= x496 x128)) (<= x254 1461501637330902918203684832716283019655932542975) (>= x301 0) (= x178 (< 0 (x285 x1259))) (not (= x82 x772)) (not (= x772 x373)) (<= x394 1461501637330902918203684832716283019655932542975) (<= 0 x1064) (>= x1313 1) (<= 0 x1074) (= x823 x82) (>= x817 1) (>= 1461501637330902918203684832716283019655932542975 x817) (not (= x162 x82)) x647 (<= 0 x935) x764 (not (= x496 x1259)) (>= x772 1) (<= 1 x496) (not (= x162 x496)) (= x710 (< 0 (x285 x1321))) (= (< 0 (x285 x82)) x948) (>= 4294967295 x1040) x178 (not (= x772 x496)) (>= 2065879269444 x1063) (= (< 0 (x285 x496)) x490) (<= x196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> (x285 x373) 0) x671) (<= 1 x128) x671 (<= x843 4294967295) (not (= x772 x1259)) (>= x823 1) x948 (<= 0 x1150) (not (= x496 x1321)) (>= 1461501637330902918203684832716283019655932542975 x903) (not (= x817 x162)) (<= 0 x814) (<= x541 4294967295) (not (= x496 x817)) (not (= x82 x817)) (>= 1461501637330902918203684832716283019655932542975 x496) (>= x990 0) (>= 4294967295 x915) (<= 1 x373) (>= 1461501637330902918203684832716283019655932542975 x265) (>= x1321 1) (<= 0 x1247) (not (= x1259 x162)) (<= x1259 1461501637330902918203684832716283019655932542975) (= x1321 x265) (<= x1247 1461501637330902918203684832716283019655932542975) x1061 (>= x162 1) (not (= x1321 x817)) (>= 1461501637330902918203684832716283019655932542975 x1321) (>= 1461501637330902918203684832716283019655932542975 x82) (= (> (x285 x817) 0) x999) (= x764 (> (x285 x128) 0)) (not (= x373 x1259)) (<= x128 1461501637330902918203684832716283019655932542975) (not (= x1321 x128)) (<= x1015 4294967295) (>= x588 0) (>= x265 1) (not (= x162 x772)))) x372) x1007))
(assert (x829 x700))
(assert (=> (>= 10000 x1095) (= (x296 x1095) 0)))
(assert (x829 x1209))
(assert (= (x1221 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)) x425))
(assert (x829 x195))
(assert (=> (<= x304 10000) (= (x296 x304) 0)))
(assert (x829 x998))
(assert (= x750 (x499 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (= x19 (x73 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (x829 x27))
(assert (=> (<= x1227 10000) (= (x296 x1227) 0)))
(assert (x829 x339))
(assert (= x711 (x47 (x1337 x99 x775 x345 x711 x416))))
(assert (x829 x734))
(assert (x829 x696))
(assert (= x110 (x499 (x30 x406 x83 x110 x1057 x855 x696 x789 x424))))
(assert (x829 x703))
(assert (= (x631 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)) x106))
(assert (= (x47 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)) x257))
(assert (x829 x922))
(assert (= x406 (x306 (x209 x406 x794 x891 x576))))
(assert (= (x296 57896044618658097711785492504343953926634992332820282019728792003956564820517) 0))
(assert (x829 x210))
(assert (= (x294 (x621 x1044 x1193 x384 x714 x208 x545 x132)) x208))
(assert (x829 x153))
(assert (x829 x325))
(assert (x829 x1184))
(assert (= (x306 (x1096 x476 x552)) x476))
(assert (x829 x716))
(assert (x829 x525))
(assert (= (and x1158 x111) x723))
(assert (x1002 x868 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x794))
(assert (x1002 x230 32))
(assert (=> (>= 10000 x673) (= 0 (x296 x673))))
(assert (x829 x1098))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)))
(assert (x799 4294967295))
(assert (= x686 (x73 (x1276 x872 x686 x481))))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x829 x1025))
(assert (x829 x515))
(assert (x829 x57))
(assert (x829 x520))
(assert (x829 x789))
(assert (x829 x291))
(assert (x829 x1330))
(assert (= (x296 (x209 x99 x33 x267 x104)) (x209 x99 x33 x267 x104)))
(assert (x829 x452))
(assert (= x1255 (x1221 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255))))
(assert (< 10000 (x1337 x476 x862 x591 x672 x1129)))
(assert (< 10000 (x691 x248 x483 x101 x1319 x389 x791)))
(assert (=> (<= x477 10000) (= 0 (x296 x477))))
(assert (< (x1337 x1044 x1239 x1020 x454 x39) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x621 x872 x571 x188 x477 x480 x656 x845)))
(assert (x829 x1139))
(assert (x829 x346))
(assert (> (x621 x827 x1146 x272 x504 x214 x193 x673) 10000))
(assert (=> (<= x132 10000) (= 0 (x296 x132))))
(assert (=> (<= x921 10000) (= 0 (x296 x921))))
(assert (x829 x316))
(assert (x829 x1082))
(assert (x829 x198))
(assert (= (=> (and (= (x399 1461501637330902918203684832716283019655932542975 x609) x815) (= x366 1) (= x66 (x313 (+ x1336 128))) (= (x564 x66) x969) (= (x399 1461501637330902918203684832716283019655932542975 x969) x26) (= x815 x26)) x706) x434))
(assert (=> (<= x390 10000) (= 0 (x296 x390))))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (< 10000 (x691 x476 x875 x1184 x562 x225 x720)))
(assert (= (x296 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (x829 x1322))
(assert (= (x47 (x691 x99 x921 x41 x567 x782 x429)) x567))
(assert (x829 x541))
(assert (=> (>= 10000 x559) (= (x296 x559) 0)))
(assert (=> (>= 10000 x574) (= 0 (x296 x574))))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x829 x100))
(assert (= 0 (x296 57896044618658097711785492504343953926634992332820282019728792003956564820100)))
(assert (x829 x612))
(assert (= x57 (x499 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (x829 x263))
(assert (x829 x843))
(assert (x357 32 x728))
(assert (< 10000 (x621 x872 x571 x188 x477 x480 x656 x845)))
(assert (x129 x1100))
(assert (not (x799 (x30 x99 x554 x1025 x257 x396 x719 x317 x425))))
(assert (=> (>= 10000 x827) (= (x296 x827) 0)))
(assert (x829 x807))
(assert (=> (<= x602 10000) (= 0 (x296 x602))))
(assert (x829 x1285))
(assert (x829 x488))
(assert (x829 x1282))
(assert (x829 x768))
(assert (x829 x943))
(assert (x829 x271))
(assert (= (x1096 x99 x852) (x296 (x1096 x99 x852))))
(assert (x829 x604))
(assert (= x1044 (x306 (x1276 x1044 x1036 x623))))
(assert (x829 x455))
(assert (x829 x834))
(assert (=> (<= x1012 10000) (= (x296 x1012) 0)))
(assert (x829 x1204))
(assert (> (x1096 x827 x500) 10000))
(assert (= x214 (x294 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x773))
(assert (= (x1170 (x30 x248 x439 x57 x60 x929 x127 x391 x516)) x391))
(assert (x829 x237))
(assert (x829 x116))
(assert (x829 x2))
(assert (x799 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x129 x1067))
(assert (x829 x194))
(assert (= x1036 (x73 (x1276 x1044 x1036 x623))))
(assert (= (and x111 (not x1158)) x239))
(assert (x829 x945))
(assert (= x69 (x499 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x829 x1283))
(assert (= (x294 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)) x559))
(assert (x829 x361))
(assert (< 10000 (x691 x872 x390 x475 x887 x365 x807)))
(assert (= x1260 (x1221 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (= x1302 (or x303 x760)))
(assert (x829 x593))
(assert (x129 x868))
(assert (< (x621 x827 x1146 x272 x504 x214 x193 x673) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x915))
(assert (x829 x59))
(assert (> (x1337 x872 x1227 x1291 x146 x802) 10000))
(assert (x829 x690))
(assert (x1202 x609))
(assert (= x476 (x306 (x1337 x476 x862 x591 x672 x1129))))
(assert (not x1007))
(assert (x829 x927))
(assert (= (x631 (x621 x872 x571 x188 x477 x480 x656 x845)) x656))
(assert (x829 x818))
(assert (x1002 x156 1461501637330902918203684832716283019655932542976))
(assert (= (x209 x248 x1209 x134 x610) (x296 (x209 x248 x1209 x134 x610))))
(assert (x829 x553))
(assert (x829 x1266))
(assert (=> (<= x174 10000) (= (x296 x174) 0)))
(assert (=> (>= 10000 x257) (= (x296 x257) 0)))
(assert (= (x691 x406 x985 x857 x71 x507 x353) (x296 (x691 x406 x985 x857 x71 x507 x353))))
(assert (x829 x1223))
(assert (x829 x162))
(assert (= (x296 (x209 x1044 x91 x1033 x1162)) (x209 x1044 x91 x1033 x1162)))
(assert (= x372 (=> (and (= x1192 (x579 x461)) (= (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1080) x550) (= (x313 (+ x1192 x164)) x102) (= x683 (x579 x164)) (or (>= x1144 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x1144)) (= x511 (x579 x755)) (= (x313 (+ x555 x102)) x1144) (= x926 (x313 (+ x1001 x409))) (= (+ 63 x380) x1080) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x620) (not (or (and (= (<= x755 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x167 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x755 x167)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x755) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x167)))) (= x657 (x579 x1144)) (= x164 (x313 (+ x755 x511))) (= x555 (x579 x816)) (= (- x1063 67) x52) (= x1082 (+ 448 x550)) (<= x620 18446744073709551615) (>= x874 1) (= x470 (x313 (+ x755 x620))) (or (and (<= x52 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1161 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1161) (<= x52 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1161 x52))) (<= x1250 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1001 (x313 (+ 32 x1144))) (>= x620 64) (= x6 (x313 (+ 32 x102))) (<= x59 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x409 (* x657 32)) (>= 1461501637330902918203684832716283019655932542975 x683) (= x755 (x313 (+ x919 32))) (<= x550 18446744073709551167) (>= 18446744073709551615 x555) (<= 128 x1250) (<= x1192 18446744073709551615) (= x180 (x596 128)) (= (x579 228) x1161) (= x59 (x85 (- x470 x164))) (= (x579 x102) x978) (= x580 (< x1001 x926)) (or (>= x1161 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 2065879269376 x1161)) (= 1 x180) (= (x579 x6) x1294) (>= x550 1) (>= 18446744073709551615 x511) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x470) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x354)) (> x470 x354)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x354) (<= x470 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1111 160) (or (>= 18446746139588821027 x164) (>= x164 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (>= x59 128) (= x620 (x579 x919)) (<= x657 18446744073709551615) (= (x313 (+ 32 x6)) x816) (= (x85 (- x470 x102)) x1250) (>= 2 x978) (not (< x470 x926)) (= x167 (x85 (- x1063 x620))) (= x919 (x313 (+ 36 x1161))) (or (>= 18446746139588821059 x470) (>= x470 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (or (>= x102 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x102)) (= x354 (x313 (+ x1144 31))) (= (x313 (+ x164 32)) x461) (= x380 (* x657 32))) (and (=> (and (= x1082 x449) (not x580)) x842) (=> x580 x901)))))
(assert (x829 x657))
(assert (x829 x944))
(assert (x829 x912))
(assert (x829 x1016))
(assert (=> (<= x800 10000) (= (x296 x800) 0)))
(assert (x829 x1128))
(assert (= x787 (x47 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255))))
(assert (x829 x719))
(assert (x829 x20))
(assert (x974 x152))
(assert (x829 x561))
(assert (not (x799 (x1276 x827 x216 x356))))
(assert (x829 x257))
(assert (x829 x894))
(assert (= 0 (x296 2065879269284)))
(assert (x829 x463))
(assert (x829 x1251))
(assert (x829 x172))
(assert (x829 x964))
(assert (x799 18446744073709551613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)))
(assert (x829 x826))
(assert (= x875 (x73 (x691 x476 x875 x1184 x562 x225 x720))))
(assert (x829 x1043))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x621 x406 x913 x727 x117 x200 x1012 x290)))
(assert (= (x73 (x1276 x406 x763 x202)) x763))
(assert (x829 x959))
(assert (=> (>= 10000 x157) (= 0 (x296 x157))))
(assert (=> (<= x985 10000) (= (x296 x985) 0)))
(assert (x829 x884))
(assert (= x655 (and (not x1117) x360)))
(assert (= x91 (x73 (x209 x1044 x91 x1033 x1162))))
(assert (x829 x101))
(assert (x799 18446744073709551167))
(assert (x829 x1029))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x799 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= (x499 (x209 x1044 x91 x1033 x1162)) x1033))
(assert (x829 x370))
(assert (= x406 (x306 (x1096 x406 x383))))
(assert (x829 x461))
(assert (x1002 x139 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x108 10000) (= 0 (x296 x108))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1337 x827 x713 x826 x403 x48)))
(assert (=> (>= 10000 x248) (= (x296 x248) 0)))
(assert (x829 x7))
(assert (x829 x1152))
(assert (=> (<= x887 10000) (= 0 (x296 x887))))
(assert (x829 x447))
(assert (x829 x312))
(assert (x829 x817))
(assert (x829 x1014))
(assert (x829 x364))
(assert (=> (>= 10000 x83) (= (x296 x83) 0)))
(assert (x829 x406))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260)))
(assert (= (x621 x248 x215 x69 x271 x1264 x574 x297) (x296 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (=> (>= 10000 x82) (= 0 (x296 x82))))
(assert (=> (<= x268 10000) (= 0 (x296 x268))))
(assert (x829 x578))
(assert (=> (<= x817 10000) (= (x296 x817) 0)))
(assert (= x99 (x306 (x209 x99 x33 x267 x104))))
(assert (x829 x505))
(assert (= x826 (x499 (x1337 x827 x713 x826 x403 x48))))
(assert (= (x296 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)) (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)))
(assert (x829 x583))
(assert (not (x799 (x621 x99 x169 x1292 x142 x252 x615 x174))))
(assert (x829 x628))
(assert (x829 x733))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (not (x799 (x1096 x872 x140))))
(assert (=> (<= x19 10000) (= (x296 x19) 0)))
(assert (x829 x903))
(assert (= x872 (x306 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255))))
(assert (x829 x862))
(assert (< 10000 (x1096 x1044 x798)))
(assert (x829 x68))
(assert (x829 x930))
(assert (= x406 (x306 (x30 x406 x83 x110 x1057 x855 x696 x789 x424))))
(assert (x829 x1256))
(assert (x799 18446744073709551455))
(assert (x829 x1334))
(assert (x829 x436))
(assert (x829 x365))
(assert (=> (<= x554 10000) (= 0 (x296 x554))))
(assert (x357 160 x1040))
(assert (x829 x755))
(assert (x829 x1291))
(assert (x829 x771))
(assert (=> (>= 10000 x713) (= (x296 x713) 0)))
(assert (x829 x1319))
(assert (=> (>= 10000 x494) (= (x296 x494) 0)))
(assert (x829 x53))
(assert (x829 x675))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1337 x476 x862 x591 x672 x1129)))
(assert (x1202 x836))
(assert (x829 x1151))
(assert (x829 x1249))
(assert (= (x47 (x691 x827 x12 x426 x1103 x1095 x649)) x1103))
(assert (=> (<= x262 10000) (= 0 (x296 x262))))
(assert (x829 x383))
(assert (< 10000 (x691 x406 x985 x857 x71 x507 x353)))
(assert (x829 x1033))
(assert (x829 x1069))
(assert (= x901 (=> (and (= (x579 x530) x56) (>= 18446744073709551614 x1053) (= x925 (x579 x1001)) (or (>= 18446744073709551518 x1082) (>= x1082 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (> x879 x1082) (= x525 (x313 (+ x505 32))) (>= x415 2) (>= 18446744073709551613 x1082) (= x29 (+ 32 x879)) (<= x1082 18446744073709551614) (= (x313 (+ 32 x735)) x1251) (= (x313 (+ x56 x402)) x572) (<= x364 18446744073709551615) (= x402 (x313 (+ 32 x530))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1230) (= x735 (x313 (+ x242 32))) (or (and (<= x470 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997)) (and (> x470 x997) (= (<= x470 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x997)))) (= (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x152) x1053) (= x505 (x313 (+ 32 x1082))) (<= x415 18446744073709551615) (> x415 x879) (= (+ x29 x56) x1151) (= (x579 x242) x179) (>= 18446744073709551615 x56) (= x1100 (+ 31 x56)) (<= x179 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x925) (= (x579 x1251) x364) (= (x313 (+ x364 x242)) x530) (not (< x415 x879)) (= (x313 (+ x925 x1001)) x242) (= x953 (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1100)) (= x152 (+ x953 63)) (= x1197 (not (> x926 x98))) (<= 96 x1230) (or (<= x1082 18446744073709551518) (>= x1082 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (not (< x879 x1082)) (or (>= x530 57896044618658097711785492504343953926634992332820282019728792003956564820068) (>= 18446746139588821027 x530)) (= (x579 x735) x1071) (or (>= x242 57896044618658097711785492504343953926634992332820282019728792003956564820068) (>= 18446746139588821027 x242)) (<= x1082 18446744073709551614) (= x415 (+ x879 x1053)) (= x98 (x313 (+ x1001 32))) (<= x1082 18446744073709551613) (= x997 (x313 (+ x530 31))) (= x879 (x313 (+ x1082 96))) (or (>= 18446744073709551518 x1082) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x1082)) (or (>= 18446746139588821059 x470) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820100 x470)) (or (>= 18446746139588821027 x1001) (>= x1001 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (<= x1082 18446744073709551614) (<= x1082 18446744073709551613) (not (> x572 x470)) (= x1230 (x85 (- x470 x242)))) (and (=> (= x449 x415) x842) x1197))))
(assert (= x388 (or x431 x1233)))
(assert (x829 x1284))
(assert (x829 x636))
(assert (not (x799 (x1276 x1044 x1036 x623))))
(assert (=> (<= x356 10000) (= (x296 x356) 0)))
(assert (= (x499 (x209 x872 x148 x1328 x961)) x1328))
(assert (x829 x83))
(assert (=> (<= x680 10000) (= (x296 x680) 0)))
(assert (x829 x472))
(assert (x829 x863))
(assert (= (x631 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)) x719))
(assert (x829 x1084))
(assert (x829 x26))
(assert (x829 x1175))
(assert (= (x1096 x476 x552) (x296 (x1096 x476 x552))))
(assert (=> (>= 10000 x403) (= 0 (x296 x403))))
(assert (= (x73 (x1096 x476 x552)) x552))
(assert (x829 x939))
(assert (x829 x32))
(assert (x829 x591))
(assert (= x494 (x47 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838))))
(assert (x829 x64))
(assert (x1002 x969 1461501637330902918203684832716283019655932542976))
(assert (=> (<= x1044 10000) (= (x296 x1044) 0)))
(assert (=> (<= x252 10000) (= 0 (x296 x252))))
(assert (x829 x134))
(assert (x829 x878))
(assert (x829 x1293))
(assert (x829 x860))
(assert (x1202 x690))
(assert (= (x499 (x691 x406 x985 x857 x71 x507 x353)) x857))
(assert (= (x499 (x1337 x99 x775 x345 x711 x416)) x345))
(assert (= x1044 (x306 (x1337 x1044 x1239 x1020 x454 x39))))
(assert (< (x691 x248 x483 x101 x1319 x389 x791) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x296 18446746139588821027) 0))
(assert (=> (>= 10000 x134) (= (x296 x134) 0)))
(assert (= x721 (x73 (x1276 x99 x721 x1315))))
(assert (= x705 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1228) (= x1076 (x85 (- x1063 x726))) (= (* 160 x1105) x726) (= x881 (x313 (+ 36 x813))) (= x1136 (x313 (+ 32 x1228))) (= x751 (x313 (+ (mod (+ 32 x418) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1228))) (not (or (and (= (<= x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1076)) (> x1335 x1076)) (and (> x1076 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1335 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1228) (= (x579 196) x813) (> x751 x1228) (or (<= x813 2065879269376) (>= x813 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x1167 (+ x64 32)) (= x1335 (x313 (+ x881 32))) (= x308 (> x1105 0)) (<= x1228 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1105 (x579 x881)) (<= 1 x751) (or (and (> x813 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x52 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x813 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x52 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x52 x813))) (>= 18446744073709551615 x1105) (= x418 (* x1105 32))) (and (=> (and (not x308) (= x867 x751)) x51) (=> x308 x692)))))
(assert (x829 x1100))
(assert (< (x209 x248 x1209 x134 x610) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1202 x535))
(assert (x829 x634))
(assert (x514 x230))
(assert (not (x799 (x1096 x1044 x798))))
(assert (x829 x785))
(assert (x829 x1124))
(assert (=> (>= 10000 x99) (= 0 (x296 x99))))
(assert (= x991 (x499 (x209 x476 x1263 x991 x262))))
(assert (x829 x702))
(assert (x1002 x607 1461501637330902918203684832716283019655932542976))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x829 x1219))
(assert (x514 x1100))
(assert (x829 x677))
(assert (x829 x105))
(assert (> (x209 x99 x33 x267 x104) 10000))
(assert (x829 x801))
(assert (x829 x796))
(assert (x129 x1052))
(assert (x829 x418))
(assert (= (x499 (x621 x99 x169 x1292 x142 x252 x615 x174)) x1292))
(assert (=> (>= 10000 x384) (= (x296 x384) 0)))
(assert (=> (<= x1066 10000) (= 0 (x296 x1066))))
(assert (= (and (not x185) x914) x1203))
(assert (x829 x128))
(assert (x829 x766))
(assert (=> (<= x426 10000) (= (x296 x426) 0)))
(assert (= (x294 (x1337 x406 x848 x1148 x602 x261)) x261))
(assert (< 10000 (x1276 x872 x686 x481)))
(assert (x829 x29))
(assert (= (x73 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) x83))
(assert (= (x294 (x1337 x476 x862 x591 x672 x1129)) x1129))
(assert (x829 x492))
(assert (x829 x866))
(assert (= x117 (x47 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (= (x1096 x827 x500) (x296 (x1096 x827 x500))))
(assert (x829 x911))
(assert (= x638 (x1170 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255))))
(assert (= (x631 (x691 x476 x875 x1184 x562 x225 x720)) x720))
(assert (= 0 (x296 134217728)))
(assert (= (x1337 x827 x713 x826 x403 x48) (x296 (x1337 x827 x713 x826 x403 x48))))
(assert (x829 x1006))
(assert (= (x30 x1044 x800 x1216 x494 x626 x680 x203 x838) (x296 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838))))
(assert (x829 x1227))
(assert (x829 x215))
(assert (x829 x1260))
(assert (x829 x1066))
(assert (x829 x249))
(assert (x829 x284))
(assert (= x827 (x306 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x567))
(assert (x829 x52))
(assert (< (x691 x827 x12 x426 x1103 x1095 x649) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x726))
(assert (x829 x208))
(assert (x829 x850))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x691 x1044 x19 x750 x795 x304 x15)))
(assert (= x1291 (x499 (x1337 x872 x1227 x1291 x146 x802))))
(assert (x829 x683))
(assert (= (x73 (x209 x827 x864 x1066 x837)) x864))
(assert (= (x296 (x621 x406 x913 x727 x117 x200 x1012 x290)) (x621 x406 x913 x727 x117 x200 x1012 x290)))
(assert (x829 x1005))
(assert (not (x799 (x30 x406 x83 x110 x1057 x855 x696 x789 x424))))
(assert (x829 x74))
(assert (> (x1276 x248 x520 x238) 10000))
(assert (< (x1337 x99 x775 x345 x711 x416) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x809))
(assert (x829 x409))
(assert (x829 x1067))
(assert (= x791 (x631 (x691 x248 x483 x101 x1319 x389 x791))))
(assert (=> (<= x772 10000) (= 0 (x296 x772))))
(assert (x829 x1042))
(assert (= (x73 (x209 x406 x794 x891 x576)) x794))
(assert (x829 x633))
(assert (=> (>= 10000 x1292) (= 0 (x296 x1292))))
(assert (x129 1461501637330902918203684832716283019655932542976))
(assert (x829 x704))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x829 x71))
(assert (=> (>= 10000 x1033) (= 0 (x296 x1033))))
(assert (= (x691 x99 x921 x41 x567 x782 x429) (x296 (x691 x99 x921 x41 x567 x782 x429))))
(assert (= x1012 (x631 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (=> (>= 10000 x1209) (= (x296 x1209) 0)))
(assert (x829 x530))
(assert (x974 x690))
(assert (x829 x22))
(assert (not (x799 (x691 x248 x483 x101 x1319 x389 x791))))
(assert (x829 x147))
(assert (> (x30 x827 x904 x108 x973 x866 x268 x1215 x1260) 10000))
(assert (=> (>= 10000 x127) (= 0 (x296 x127))))
(assert (x829 x127))
(assert (x829 x477))
(assert (x829 x872))
(assert (= (x631 (x691 x827 x12 x426 x1103 x1095 x649)) x649))
(assert (x1224 160))
(assert (x829 x387))
(assert (x829 x835))
(assert (=> (<= x298 10000) (= 0 (x296 x298))))
(assert (x829 x1263))
(assert (x829 x404))
(assert (x829 x309))
(assert (x829 x921))
(assert (x829 x787))
(assert (= (x73 (x1096 x827 x500)) x500))
(assert (x829 x168))
(assert (x357 32 x1214))
(assert (x799 18446744073709551487))
(assert (x829 x1268))
(assert (x829 x893))
(assert (x829 x1309))
(assert (x829 x157))
(assert (x974 x836))
(assert (= x529 (and x270 x947)))
(assert (x1002 x1100 32))
(assert (x829 x501))
(assert (x829 x891))
(assert (x829 x782))
(assert (x799 2065879269444))
(assert (= (and (not x526) x388) x1206))
(assert (x829 x750))
(assert (=> (<= x626 10000) (= (x296 x626) 0)))
(assert (=> (>= 10000 x128) (= (x296 x128) 0)))
(assert (x829 x1036))
(assert (x829 x795))
(assert (= x504 (x47 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x1149))
(assert (= (x294 (x621 x476 x982 x694 x444 x964 x487 x900)) x964))
(assert (x829 x205))
(assert (x829 x954))
(assert (=> (>= 10000 x391) (= (x296 x391) 0)))
(assert (=> (<= x623 10000) (= 0 (x296 x623))))
(assert (< 10000 (x1276 x476 x298 x1098)))
(assert (x829 x164))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x829 x458))
(assert (=> (<= x1184 10000) (= 0 (x296 x1184))))
(assert (< 10000 (x1096 x872 x140)))
(assert (x1224 x1040))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x691 x872 x390 x475 x887 x365 x807)))
(assert (= (=> (and (= x968 (x579 x322)) (= (x313 (+ x1329 32)) x830) (= (x579 x1329) x1143) (or (>= x405 57896044618658097711785492504343953926634992332820282019728792003956564820517) (<= x405 2065879269284)) (= (x313 (+ 32 x830)) x322) (= x856 (x313 (+ 160 x701))) (>= 18446744073709551614 x701) (>= 1461501637330902918203684832716283019655932542975 x968) (= (x313 (+ x637 32)) x954) (= x1041 (x579 x405)) (= x1003 (x313 (+ x405 32))) (<= x1041 5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x701) (not (> x701 x856)) (= (x313 (+ 32 x1003)) x1329) (= x46 (not (< 1 x539))) (or (>= x701 115792089237316195423570985008687907853269984665640564039457584007913129639777) (>= 18446744073709551455 x701)) (or (>= x701 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x701 18446744073709551455)) (> x856 x701) (>= 18446744073709551614 x701) (= x55 (x313 (+ x701 32))) (<= x1245 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x701) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x701)) (= (x85 (- x1063 x405)) x707) (= x1043 (x579 x830)) (>= 18446744073709551615 x701) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x707) (= (x313 (+ 32 x954)) x788) (= (x579 x1003) x1245) (= (x313 (+ 32 x55)) x637) (>= x707 160)) (and x46 (=> (= x856 x1228) x705))) x92))
(assert (x357 160 x1105))
(assert (x829 x707))
(assert (x1224 x539))
(assert (x829 x1108))
(assert (= x222 (x47 (x209 66 x18 x612 x222))))
(assert (x829 x258))
(assert (x1002 x1067 1461501637330902918203684832716283019655932542976))
(assert (x829 x119))
(assert (x829 x879))
(assert (x829 x725))
(assert (x1002 x1080 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x73 (x209 x872 x148 x1328 x961)) x148))
(assert (x829 x1326))
(assert (= (x499 (x1276 x1044 x1036 x623)) x623))
(assert (> (x1337 x827 x713 x826 x403 x48) 10000))
(assert (=> (<= x358 10000) (= 0 (x296 x358))))
(assert (= x554 (x73 (x30 x99 x554 x1025 x257 x396 x719 x317 x425))))
(assert (x829 x212))
(assert (x829 x522))
(assert (= x1148 (x499 (x1337 x406 x848 x1148 x602 x261))))
(assert (= (x499 (x691 x872 x390 x475 x887 x365 x807)) x475))
(assert (x514 x152))
(assert (= (and x185 x914) x581))
(assert (x799 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (= (and x186 x138) x947))
(assert (x829 x272))
(assert (x799 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (x829 x273))
(assert (not (x799 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x829 x587))
(assert (x829 x543))
(assert (x514 x139))
(assert (= (x296 18446744073709551518) 0))
(assert (not (x799 (x1276 x248 x520 x238))))
(assert (x829 x957))
(assert (x829 x802))
(assert (x829 x676))
(assert (= (x296 (x30 x248 x439 x57 x60 x929 x127 x391 x516)) (x30 x248 x439 x57 x60 x929 x127 x391 x516)))
(assert (x974 1461501637330902918203684832716283019655932542975))
(assert (x974 x969))
(assert (x829 x861))
(assert (= (x691 x1044 x19 x750 x795 x304 x15) (x296 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (x1224 32))
(assert (=> (<= x1260 10000) (= 0 (x296 x1260))))
(assert (x829 x508))
(assert (x829 x318))
(assert (x974 x1052))
(assert (= (x1170 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260)) x1215))
(assert (x829 x179))
(assert (= 0 (x296 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (= (x296 (x1337 x248 x198 x408 x773 x1246)) (x1337 x248 x198 x408 x773 x1246)))
(assert (x829 x359))
(assert (= (x1170 (x621 x406 x913 x727 x117 x200 x1012 x290)) x290))
(assert (not (x799 (x209 x248 x1209 x134 x610))))
(assert (x829 x528))
(assert (= (x1276 x827 x216 x356) (x296 (x1276 x827 x216 x356))))
(assert (x829 x1080))
(assert (x829 x4))
(assert (x829 x714))
(assert (= x51 (=> (and (= x316 (x399 1461501637330902918203684832716283019655932542975 x690)) (= x476 (x1058 x867)) (= (x579 68) x912) (= x998 (x313 (+ x867 32))) (< x867 x911) (= x870 (x313 (+ x867 32))) (not (= x867 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (<= x476 224) x582) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x867)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x867)) (= x177 (x1274 160)) (<= x867 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x911 (x313 (+ 64 x870))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x867) (= (x399 1461501637330902918203684832716283019655932542975 x278) x661) (= (x579 100) x183) (= (x399 1461501637330902918203684832716283019655932542975 x836) x160) (= (+ x1167 32) x597) (= x20 (x1274 224)) (= (x1274 x597) x278) (= x952 (+ x597 32)) (= x836 (x1274 x177)) (= (x85 (- x911 x867)) x118) (= x1157 (x85 (- x118 32))) (not (> x86 x20)) (= x316 x661) (= (x1274 256) x690) (<= x912 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x183) (= x1226 (x313 (+ x870 32))) (<= x867 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x582 (=> (and (or x44 (and (not x44) (and (= x175 (x313 (+ x911 32))) (= x361 (* 32 x532))))) (and (= x979 (x313 (+ x998 160))) (= x1263 (x1058 x998)) (= (x1058 x765) x1184) (= (x1058 x1271) x964) (= x225 (x1058 x718)) (= (x1058 x998) x523) (= (x1058 x946) x444) (= (x313 (+ 32 x998)) x170) (= x718 (x313 (+ x998 96))) (= (x1058 x979) x447) (= (x30 x476 x523 x147 x224 x1241 x774 x447 x221) x962) (= (x1058 x1016) x991) (= x1149 (x313 (+ x998 64))) (= x1129 (x1058 x1156)) (= (x313 (+ x998 64)) x13) (= (x1058 x237) x487) (= (x313 (+ 128 x998)) x237) (= (x1058 x207) x774) (= (x1050 0) x557) (= (x1276 x476 x298 x1098) x332) (>= 18446744073709551615 x532) (= (x621 x476 x982 x694 x444 x964 x487 x900) x191) (= x552 (x1058 x998)) (= x982 (x1058 x998)) (= (x313 (+ x1191 64)) x260) (= (x313 (+ x998 96)) x1327) (= x207 (x313 (+ 128 x998))) (= x1271 (x313 (+ x998 96))) (= (x313 (+ x998 64)) x882) (= (x313 (+ 128 x998)) x1205) (<= 1 x911) (= x900 (x1058 x771)) (= (x209 x476 x1263 x991 x262) x536) (= x262 (x1058 x882)) (= x1267 (x313 (+ x998 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x911) (= x1194 (ite (= x476 0) x557 (ite (<= x476 32) x1297 (ite (>= 64 x476) x332 (ite (>= 96 x476) x536 (ite (>= 128 x476) x1281 (ite (>= 160 x476) x810 (ite (<= x476 192) x191 (ite (>= 224 x476) x962 x839))))))))) (= x224 (x1058 x1267)) (= x44 (= 0 x532)) (= (x313 (+ 96 x998)) x1156) (= (x313 (+ x998 192)) x484) (= x591 (x1058 x170)) (= (x691 x476 x875 x1184 x562 x225 x720) x810) (= x765 (x313 (+ 32 x998))) (= (x1058 x998) x862) (= x1297 (x1096 x476 x552)) (= (x313 (+ x998 64)) x946) (= (x1058 x1205) x720) (= x40 (x313 (+ x998 32))) (= x123 (x313 (+ x911 (mod (+ x660 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x694 (x1058 x40)) (= (x1058 x1327) x1241) (= (x1058 x944) x147) (= x1098 (x1058 x1022)) (= x672 (x1058 x1149)) (= (x1058 x998) x298) (= x875 (x1058 x998)) (> x123 x911) (= (x1337 x476 x862 x591 x672 x1129) x1281) (= x240 (x1058 x260)) (= (x313 (+ 160 x998)) x771) (<= 2 x123) (= (x313 (+ 32 x998)) x1016) (= x660 (* 32 x532)) (= (x1058 x240) x532) (= x1191 (x1058 192)) (= x221 (x1058 x484)) (= (x313 (+ 32 x998)) x944) (= x562 (x1058 x13)) (= x1022 (x313 (+ x998 32))))) x910)))))
(assert (= x1147 (and (not x1273) x253)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1276 x827 x216 x356)))
(assert (x829 x449))
(assert (=> (>= 10000 x1263) (= (x296 x1263) 0)))
(assert (x829 x804))
(assert (< 10000 (x209 x872 x148 x1328 x961)))
(assert (x829 x91))
(assert (x829 x327))
(assert (= x481 (x499 (x1276 x872 x686 x481))))
(assert (x829 x281))
(assert (x829 x493))
(assert (x829 x982))
(assert (x829 x297))
(assert (x799 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (< (x1096 x476 x552) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x390))
(assert (x829 x854))
(assert (not (x799 (x691 x872 x390 x475 x887 x365 x807))))
(assert (x829 x290))
(assert (x829 x885))
(assert (x1002 x690 1461501637330902918203684832716283019655932542976))
(assert (x829 x539))
(assert (= x477 (x47 (x621 x872 x571 x188 x477 x480 x656 x845))))
(assert (x829 x1154))
(assert (x829 x765))
(assert (x829 x698))
(assert (x829 x646))
(assert (x829 x1188))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x829 x3))
(assert (x829 x1324))
(assert (x829 x778))
(assert (> (x30 x476 x523 x147 x224 x1241 x774 x447 x221) 10000))
(assert (= (x296 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (x829 x1166))
(assert (x829 x721))
(assert (x829 x199))
(assert (not (x799 (x209 x1044 x91 x1033 x1162))))
(assert (< 10000 (x1096 x476 x552)))
(assert (x974 x868))
(assert (x829 x104))
(assert (=> (>= 10000 x104) (= 0 (x296 x104))))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1096 x99 x852)))
(assert (x829 x554))
(assert (x829 x956))
(assert (x829 x806))
(assert (x829 x266))
(assert (x829 x1044))
(assert (=> (<= x290 10000) (= 0 (x296 x290))))
(assert (= (x209 x827 x864 x1066 x837) (x296 (x209 x827 x864 x1066 x837))))
(assert (x1202 x969))
(assert (x829 x969))
(assert (x357 32 x1116))
(assert (= x396 (x294 (x30 x99 x554 x1025 x257 x396 x719 x317 x425))))
(assert (= (x47 (x1337 x872 x1227 x1291 x146 x802)) x146))
(assert (=> (>= 10000 x424) (= (x296 x424) 0)))
(assert (=> (>= 10000 x967) (= (x296 x967) 0)))
(assert (x829 x248))
(assert (=> (>= 10000 x475) (= (x296 x475) 0)))
(assert (x829 x213))
(assert (= (x1170 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) x789))
(assert (= (x47 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) x224))
(assert (> (x1337 x406 x848 x1148 x602 x261) 10000))
(assert (=> (<= x1148 10000) (= (x296 x1148) 0)))
(assert (x829 x79))
(assert (= (x47 (x1337 x406 x848 x1148 x602 x261)) x602))
(assert (=> (>= 10000 x567) (= (x296 x567) 0)))
(assert (< (x691 x406 x985 x857 x71 x507 x353) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x466 x784) x427))
(assert (x829 x1174))
(assert (= (x47 (x1337 x476 x862 x591 x672 x1129)) x672))
(assert (=> (<= x425 10000) (= 0 (x296 x425))))
(assert (= x200 (x294 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (x829 x845))
(assert (x829 x1320))
(assert (= x519 (=> (and (and (= (x313 (+ 32 x228)) x1176) (<= 1 x181) (= x116 1) (= (x1333 x818) x38) (or (>= x204 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x204)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x204) (= (x1333 192) x1139) (>= x1308 1) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x204) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (< x204 x640) (= (x313 (+ x640 (mod (+ x1249 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x828) (<= 2 x828) (= (* x38 32) x1249) (= (x1333 x472) x258) (= x116 (x1333 x204)) (or (>= x204 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (= (= 0 x38) x1117) (= (x1333 x228) x181) (>= 18446744073709551615 x38) (= x818 (x1333 x1176)) (<= x204 115792089237316195423570985008687907853269984665640564039457584007913129639933) (> x828 x640) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x204) (= (x313 (+ 32 x1139)) x228) (= x640 (x313 (+ 32 x204)))) (or x1117 (and (not x1117) (and (= x493 (x313 (+ x640 32))) (= (* x38 32) x1177))))) x1232)))
(assert (x829 x175))
(assert (x829 x987))
(assert (< (x30 x1044 x800 x1216 x494 x626 x680 x203 x838) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x979))
(assert (= x545 (x631 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (x829 x599))
(assert (x1224 x1116))
(assert (x1002 x452 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x621 x99 x169 x1292 x142 x252 x615 x174) 10000))
(assert (x829 x448))
(assert (x829 x512))
(assert (x829 x518))
(assert (x129 x139))
(assert (not (x799 (x1096 x99 x852))))
(assert (=> (<= x1241 10000) (= (x296 x1241) 0)))
(assert (x829 x37))
(assert (x829 x577))
(assert (x829 x823))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x829 x597))
(assert (=> (>= 10000 x39) (= 0 (x296 x39))))
(assert (= (or x1316 x993) x176))
(assert (=> (<= x1146 10000) (= 0 (x296 x1146))))
(assert (=> (<= x787 10000) (= 0 (x296 x787))))
(assert (x829 x870))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (= (or x558 x1113) x111))
(assert (=> (<= x198 10000) (= (x296 x198) 0)))
(assert (= x782 (x294 (x691 x99 x921 x41 x567 x782 x429))))
(assert (x1202 x1052))
(assert (= (x631 (x621 x248 x215 x69 x271 x1264 x574 x297)) x574))
(assert (= (x73 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260)) x904))
(assert (x829 x837))
(assert (=> (>= 10000 x838) (= (x296 x838) 0)))
(assert (x829 x97))
(assert (x829 x688))
(assert (x829 x1099))
(assert (x829 x21))
(assert (x829 x1169))
(assert (x829 x523))
(assert (= 0 (x296 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x829 x1034))
(assert (x1038 x745))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (x357 160 x161))
(assert (=> (<= x720 10000) (= (x296 x720) 0)))
(assert (= (x294 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260)) x866))
(assert (x829 x322))
(assert (x829 x279))
(assert (= (x306 (x1096 x99 x852)) x99))
(assert (x829 x832))
(assert (x829 x106))
(assert (> (x30 x1044 x800 x1216 x494 x626 x680 x203 x838) 10000))
(assert (x829 x324))
(assert (x829 x1161))
(assert (= x429 (x631 (x691 x99 x921 x41 x567 x782 x429))))
(assert (x829 x478))
(assert (= (x1276 x248 x520 x238) (x296 (x1276 x248 x520 x238))))
(assert (x829 x629))
(assert (=> (<= x48 10000) (= (x296 x48) 0)))
(assert (= (x73 (x1276 x827 x216 x356)) x216))
(assert (x974 x230))
(assert (x829 x188))
(assert (x829 x1269))
(assert (x974 x535))
(assert (x829 x220))
(assert (= (x499 (x691 x476 x875 x1184 x562 x225 x720)) x1184))
(assert (x799 18446746139588821059))
(assert (= x238 (x499 (x1276 x248 x520 x238))))
(assert (x829 x938))
(assert (= x1316 (or x803 x529)))
(assert (x829 x333))
(assert (x829 x184))
(assert (x129 x836))
(assert (=> (>= 10000 x1246) (= (x296 x1246) 0)))
(assert (x829 x133))
(assert (x357 32 x1330))
(assert (= x1025 (x499 (x30 x99 x554 x1025 x257 x396 x719 x317 x425))))
(assert (< 10000 (x1276 x1044 x1036 x623)))
(assert (= x673 (x1170 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (=> (<= x1215 10000) (= 0 (x296 x1215))))
(assert (x829 x354))
(assert (=> (<= x439 10000) (= 0 (x296 x439))))
(assert (x829 x1272))
(assert (x829 x1107))
(assert (=> (<= x146 10000) (= 0 (x296 x146))))
(assert (x829 x443))
(assert (x829 x485))
(assert (= x248 (x306 (x1096 x248 x546))))
(assert (x829 x373))
(assert (x829 x310))
(assert (=> (>= 10000 x193) (= 0 (x296 x193))))
(assert (x829 x1250))
(assert (x829 x791))
(assert (x829 x1245))
(assert (=> (>= 10000 x852) (= 0 (x296 x852))))
(assert (= (x499 (x1337 x1044 x1239 x1020 x454 x39)) x1020))
(assert (x829 x661))
(assert (x829 x34))
(assert (= x929 (x294 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (=> (>= 10000 x773) (= 0 (x296 x773))))
(assert (x829 x6))
(assert (x1038 x249))
(assert (x829 x230))
(assert (x829 x160))
(assert (x974 x609))
(assert (x829 x654))
(assert (=> (>= 10000 x672) (= (x296 x672) 0)))
(assert (=> (>= 10000 x1036) (= 0 (x296 x1036))))
(assert (= x1135 (or x1206 x606)))
(assert (=> (<= x117 10000) (= 0 (x296 x117))))
(assert (=> (<= x1162 10000) (= (x296 x1162) 0)))
(assert (=> (<= x18 10000) (= (x296 x18) 0)))
(assert (=> (>= 10000 x807) (= (x296 x807) 0)))
(assert (=> (<= x795 10000) (= 0 (x296 x795))))
(assert (x829 x648))
(assert (x829 x483))
(assert (< 10000 (x1276 x827 x216 x356)))
(assert (= x900 (x1170 (x621 x476 x982 x694 x444 x964 x487 x900))))
(assert (x829 x905))
(assert (> (x30 x872 x1119 x604 x787 x559 x106 x638 x1255) 10000))
(assert (x1127 x819 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (=> (<= x696 10000) (= (x296 x696) 0)))
(assert (= (x296 (x1276 x99 x721 x1315)) (x1276 x99 x721 x1315)))
(assert (= 0 (x296 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x621 x248 x215 x69 x271 x1264 x574 x297)))
(assert (x829 x1077))
(assert (= (x296 (x209 x406 x794 x891 x576)) (x209 x406 x794 x891 x576)))
(assert (x1202 x1067))
(assert (x829 x1075))
(assert (x829 x650))
(assert (x829 x868))
(assert (= (x1096 x1044 x798) (x296 (x1096 x1044 x798))))
(assert (x829 x775))
(assert (x829 x958))
(assert (x829 x849))
(assert (x829 x12))
(assert (not (x799 (x1337 x99 x775 x345 x711 x416))))
(assert (=> (<= x222 10000) (= (x296 x222) 0)))
(assert (x829 x1071))
(assert (= x99 (x306 (x30 x99 x554 x1025 x257 x396 x719 x317 x425))))
(assert (= (x499 (x209 x406 x794 x891 x576)) x891))
(assert (= x774 (x631 (x30 x476 x523 x147 x224 x1241 x774 x447 x221))))
(assert (= x414 (=> (and (= x906 x1048) (= x1044 (x340 x182)) (<= x182 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* x488 32) x210) (= (<= x1044 224) x49) (= x488 x506) (= x333 (x313 (+ x166 x210))) (< x182 x906) (<= 1 x906) (= (x313 (+ 32 x182)) x508) (= x321 (x85 (- x32 32))) (<= 1 x1048) (>= 4 x488) (= (* 32 x488) x1283) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x182) (= x333 x748) (= x32 (x85 (- x906 x182))) (= (x313 (+ x1283 x1037)) x1048) (<= x182 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and x49 (=> (and (= x1018 (x85 (- x578 32))) (= x626 (x340 x27)) (= x938 (x313 (+ x508 192))) (= x858 (x313 (+ 32 x906))) (= (x691 x1044 x19 x750 x795 x304 x15) x1314) (= (x1337 x1044 x1239 x1020 x454 x39) x149) (= x1088 (x313 (+ 64 x508))) (= x203 (x340 x980)) (= x872 (x231 x906)) (= (x340 x508) x19) (= x889 (x313 (+ x508 96))) (= x563 (ite (= x1044 0) x159 (ite (>= 32 x1044) x417 (ite (<= x1044 64) x330 (ite (<= x1044 96) x1004 (ite (<= x1044 128) x149 (ite (<= x1044 160) x1314 (ite (<= x1044 192) x109 (ite (<= x1044 224) x551 x878))))))))) (= x446 (>= 224 x872)) (= x1162 (x340 x945)) (= x348 (x313 (+ x858 32))) (= (x340 x2) x454) (= (x313 (+ x508 64)) x512) (= x450 (x313 (+ 32 x508))) (= x578 (x85 (- x593 x906))) (= (x313 (+ x508 64)) x2) (= x716 (x313 (+ 128 x508))) (= (x340 x42) x1216) (= (x340 x938) x838) (= x798 (x340 x508)) (= (x313 (+ 32 x508)) x833) (= x1020 (x340 x450)) (= (x340 x1248) x545) (or (and (<= x906 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x906)) (and (<= x906 115792089237316195423570985008687907853269984665640564039457584007913129639807) (>= x906 1))) (= x1239 (x340 x508)) (= x468 (x313 (+ x508 160))) (= x551 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) (= (x340 x833) x384) (= x750 (x340 x378)) (= x39 (x340 x889)) (= (x340 x508) x91) (= x800 (x340 x508)) (= (x209 x1044 x91 x1033 x1162) x1004) (= (x340 x716) x15) (= (x313 (+ 96 x508)) x325) (= (x621 x1044 x1193 x384 x714 x208 x545 x132) x109) (= x1248 (x313 (+ x508 128))) (= (x313 (+ x508 64)) x945) (= (x313 (+ x508 32)) x1169) (= (x1276 x1044 x1036 x623) x330) (= x27 (x313 (+ 96 x508))) (= (x340 x1169) x623) (= (x340 x339) x1033) (= x132 (x340 x468)) (< x906 x593) (= x714 (x340 x1088)) (= (x340 x508) x1036) (= x680 (x340 x648)) (= x648 (x313 (+ x508 128))) (= x593 (x313 (+ 96 x858))) (= (x340 x325) x304) (= (x340 x512) x795) (= (x313 (+ x508 32)) x42) (= x1193 (x340 x508)) (= (x313 (+ x348 32)) x381) (= (x313 (+ x508 96)) x289) (= (x313 (+ 32 x508)) x378) (= (x313 (+ 64 x508)) x592) (= (x313 (+ x508 32)) x339) (= x417 (x1096 x1044 x798)) (= (x1050 0) x159) (= x980 (x313 (+ 160 x508))) (= (x340 x289) x208) (= x494 (x340 x592)) (= (x313 (+ x906 32)) x199)) (and (=> (and (= (x231 x1154) x638) (= (x231 x199) x140) (= (x231 x199) x1119) (= x604 (x231 x1132)) (= x187 (x1276 x872 x686 x481)) (= (x313 (+ 64 x199)) x725) (= (x231 x478) x802) (= x328 (x313 (+ 32 x758))) (= (x313 (+ x1234 32)) x14) (= x1021 (x231 224)) (= (x231 x548) x475) (= x686 (x231 x199)) (= (x313 (+ x14 32)) x205) (= (x231 x1039) x1291) (= x961 (x231 x528)) (= x94 (x85 (- x986 32))) (= (x231 x569) x787) (= x703 (x313 (+ x199 64))) (= (x231 x299) x656) (= x1231 (x621 x872 x571 x188 x477 x480 x656 x845)) (= (x313 (+ 32 x199)) x548) (= (x231 x703) x887) (= (x313 (+ x328 32)) x1234) (= x168 (x313 (+ x199 96))) (= x1154 (x313 (+ x199 160))) (= x477 (x231 x725)) (= (x313 (+ 96 x199)) x584) (= (x313 (+ 96 x199)) x736) (= x807 (x231 x4)) (= (x313 (+ x199 64)) x528) (= x148 (x231 x199)) (= x1255 (x231 x884)) (= (x313 (+ x199 192)) x884) (= x299 (x313 (+ 128 x199))) (= (x1050 0) x729) (= (x231 x279) x481) (= x1039 (x313 (+ 32 x199))) (= (x691 x872 x390 x475 x887 x365 x807) x624) (= (x840 x593) x99) (= (x231 x199) x390) (= (x231 x199) x1227) (= x618 (x313 (+ x199 64))) (= (x313 (+ 128 x199)) x4) (= x146 (x231 x618)) (= x845 (x231 x538)) (= (x231 x168) x559) (= x1328 (x231 x522)) (= (x1337 x872 x1227 x1291 x146 x802) x685) (> x902 x593) (= (x231 256) x156) (= (x313 (+ 32 x199)) x522) (= (x231 x584) x365) (= x1019 (ite (= x872 0) x729 (ite (<= x872 32) x611 (ite (>= 64 x872) x187 (ite (<= x872 96) x382 (ite (<= x872 128) x685 (ite (>= 160 x872) x624 (ite (>= 192 x872) x1231 (ite (>= 224 x872) x438 x157))))))))) (= x571 (x231 x199)) (= x106 (x231 x783)) (= (x313 (+ x199 32)) x1107) (= x1207 (<= x99 224)) (= x1104 (x399 1461501637330902918203684832716283019655932542975 x156)) (= x758 (x313 (+ x593 32))) (or (and (>= x593 2) (<= x593 126)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x593) (<= 129 x593)) (and (<= x593 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x593 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= (x30 x872 x1119 x604 x787 x559 x106 x638 x1255) x438) (= (x313 (+ x199 160)) x538) (= x569 (x313 (+ 64 x199))) (= (x85 (- x902 x593)) x986) (= x382 (x209 x872 x148 x1328 x961)) (= x279 (x313 (+ x199 32))) (= (x231 x736) x480) (= (x313 (+ x758 160)) x902) (= (x313 (+ x199 128)) x783) (= x188 (x231 x1107)) (= x478 (x313 (+ 96 x199))) (= (x313 (+ x199 32)) x1132) (= (x313 (+ 32 x593)) x1046) (= (x1096 x872 x140) x611)) (and (=> (and (or (and (and (= x665 (x1240 x1000)) (= x902 x204) (= x665 x305) (= x1208 2) (= x607 0)) (not x1089)) (and (and (= x204 x547) (= x1289 (x1240 x393)) (= (> x1112 57896044618658097711785492504343953926418782139537452191302581570759080747168) x150) (= (+ x393 32) x753) (= x902 x547) (= (x1240 x753) x1112) (= 0 x77) (= x1075 x1208) (= x112 (x1254 x819 248)) (= x1075 3) (= x77 x607) (= (x1240 x1324) x819) x150 (= (+ x753 32) x1324) (= x305 x940) (= x940 x1112)) x1089)) (and (= x1300 (x1050 0)) (= x1204 (x313 (+ 64 x1046))) (= x544 (x1276 x99 x721 x1315)) (= (x313 (+ 96 x1046)) x957) (= x719 (x840 x1029)) (= x429 (x840 x95)) (= (x313 (+ 96 x1046)) x1166) (= x36 (ite (= 0 x99) x1300 (ite (>= 32 x99) x983 (ite (<= x99 64) x544 (ite (<= x99 96) x295 (ite (<= x99 128) x1186 (ite (<= x99 160) x244 (ite (<= x99 192) x491 (ite (<= x99 224) x386 x358))))))))) (= (x1240 x902) x18) (= (x840 x31) x267) (= x721 (x840 x1046)) (= (x840 x212) x1315) (= (x840 x1266) x257) (= (x840 x100) x567) (= (x840 x972) x142) (= (x313 (+ 64 x1046)) x1266) (= x104 (x840 x1204)) (= x396 (x840 x440)) (= x711 (x840 x676)) (= x33 (x840 x1046)) (= x1186 (x1337 x99 x775 x345 x711 x416)) (= x1025 (x840 x1182)) (= x425 (x840 x351)) (= x252 (x840 x957)) (= x76 (x313 (+ 128 x1046))) (= x782 (x840 x1166)) (= (x313 (+ x1046 64)) x676) (= x351 (x313 (+ 192 x1046))) (= (x313 (+ x1046 64)) x100) (= x67 (x313 (+ 32 x1046))) (= (x313 (+ 32 x1046)) x1182) (= (x313 (+ x1046 128)) x1029) (= (x30 x99 x554 x1025 x257 x396 x719 x317 x425) x386) (= x491 (x621 x99 x169 x1292 x142 x252 x615 x174)) (= (x840 x1046) x852) (= x317 (x840 x1024)) (= (x209 x99 x33 x267 x104) x295) (= (x313 (+ x1046 32)) x31) (= x921 (x840 x1046)) (= (x209 66 x18 x612 x222) x1201) (= x212 (x313 (+ x1046 32))) (= x244 (x691 x99 x921 x41 x567 x782 x429)) (= x983 (x1096 x99 x852)) (= x861 (x313 (+ 160 x1046))) (= x37 (x313 (+ 64 x902))) (= (x313 (+ 32 x1046)) x250) (= (x840 x796) x41) (= (x840 x76) x615) (= x1094 (x313 (+ x902 2))) (= x345 (x840 x67)) (= (x313 (+ 32 x902)) x780) (= (x1240 x780) x612) (= (x313 (+ 32 x1094)) x1125) (= (x840 x861) x174) (= (x1240 x1000) x492) (= (x1240 x37) x222) (= (x313 (+ x1046 160)) x1024) (= (x313 (+ 96 x1046)) x440) (= (x840 x250) x1292) (= (x840 x1046) x775) (= (x840 x1046) x554) (= x796 (x313 (+ 32 x1046))) (= x416 (x840 x428)) (= x1089 (= x492 65)) (= (x313 (+ 128 x1046)) x95) (= (x840 x1046) x169) (= (x313 (+ x1046 64)) x972) (= (x313 (+ x1046 96)) x428))) x643) x1207)) x446))))))
(assert (< 10000 (x1337 x99 x775 x345 x711 x416)))
(assert (x829 x1140))
(assert (x829 x1057))
(assert (x829 x855))
(assert (x829 x625))
(assert (= (x73 (x691 x872 x390 x475 x887 x365 x807)) x390))
(assert (not (x799 (x209 x827 x864 x1066 x837))))
(assert (x829 x1015))
(assert (< (x30 x476 x523 x147 x224 x1241 x774 x447 x221) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x570 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (= 0 (x296 2065879269376)))
(assert (x829 x562))
(assert (= x104 (x47 (x209 x99 x33 x267 x104))))
(assert (= x169 (x73 (x621 x99 x169 x1292 x142 x252 x615 x174))))
(assert (x1002 x702 32))
(assert (= x1241 (x294 (x30 x476 x523 x147 x224 x1241 x774 x447 x221))))
(assert (x829 x351))
(assert (= x1113 (and x45 (not x44))))
(assert (x357 32 x532))
(assert (x829 x42))
(assert (= x773 (x47 (x1337 x248 x198 x408 x773 x1246))))
(assert (= (x73 (x1096 x872 x140)) x140))
(assert (= (x306 (x691 x1044 x19 x750 x795 x304 x15)) x1044))
(assert (x829 x1313))
(assert (x829 x378))
(assert (=> (>= 10000 x1259) (= (x296 x1259) 0)))
(assert (< 10000 (x621 x1044 x1193 x384 x714 x208 x545 x132)))
(assert (x829 x422))
(assert (not (x799 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838))))
(assert (< 10000 (x209 x827 x864 x1066 x837)))
(assert (x829 x299))
(assert (< (x209 x406 x794 x891 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x296 2065879269316) 0))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x829 x48))
(assert (x829 x713))
(assert (x829 x180))
(assert (= x476 (x306 (x691 x476 x875 x1184 x562 x225 x720))))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (=> (<= x1119 10000) (= (x296 x1119) 0)))
(assert (x829 x635))
(assert (x829 x240))
(assert (= (=> (and (or (and (= x1308 x448) (not x668)) (and x668 (and (>= 4294967295 x745) (<= 32 x745) (= 1 x1308)))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x745) (>= x745 32) (= (x313 (+ x204 4)) x1217) (= x668 (> x448 0)) (= x1140 (x399 1461501637330902918203684832716283019655932542975 x607)) (= (x313 (+ x1217 32)) x93) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x561) (= x1026 30450320296159908085414496432607297912280636920234228256796789313041262968832))) x519) x1133))
(assert (= (x47 (x691 x406 x985 x857 x71 x507 x353)) x71))
(assert (x829 x192))
(assert (x829 x736))
(assert (x829 x381))
(assert (x829 x201))
(assert (= x48 (x294 (x1337 x827 x713 x826 x403 x48))))
(assert (x829 x15))
(assert (x829 x574))
(assert (x829 x69))
(assert (= (x296 (x1337 x1044 x1239 x1020 x454 x39)) (x1337 x1044 x1239 x1020 x454 x39)))
(assert (= (x296 2065879269444) 0))
(assert (x829 x839))
(assert (=> (<= x610 10000) (= 0 (x296 x610))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1276 x476 x298 x1098)))
(assert (= (x296 (x1096 x248 x546)) (x1096 x248 x546)))
(assert (x1202 x278))
(assert (=> (>= 10000 x487) (= 0 (x296 x487))))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (x1224 x1105))
(assert (x829 x576))
(assert (x829 x638))
(assert (not (x799 (x691 x99 x921 x41 x567 x782 x429))))
(assert (x829 x1047))
(assert (= (or x427 x1147) x779))
(assert (not (x799 (x209 66 x18 x612 x222))))
(assert (= x706 (=> (and (= (x564 x785) x1108) (= (not (> x1108 1)) x595)) (and x595 x437))))
(assert (x829 x496))
(assert (x829 x1090))
(assert (x829 x793))
(assert (x829 x267))
(assert (x829 x356))
(assert (x829 x353))
(assert (=> (<= x991 10000) (= 0 (x296 x991))))
(assert (= x795 (x47 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (x829 x738))
(assert (x829 x89))
(assert (= x142 (x47 (x621 x99 x169 x1292 x142 x252 x615 x174))))
(assert (= x1264 (x294 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x829 x535))
(assert (x829 x275))
(assert (= (x499 (x1276 x99 x721 x1315)) x1315))
(assert (x829 x1199))
(assert (x829 x278))
(assert (x829 x426))
(assert (=> (<= x1020 10000) (= (x296 x1020) 0)))
(assert (=> (<= x60 10000) (= 0 (x296 x60))))
(assert (x829 x1244))
(assert (x829 x1035))
(assert (= x60 (x47 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (x829 x502))
(assert (= x353 (x631 (x691 x406 x985 x857 x71 x507 x353))))
(assert (x829 x994))
(assert (x829 x827))
(assert (x829 x756))
(assert (x829 x973))
(assert (=> (<= x862 10000) (= 0 (x296 x862))))
(assert (= (x294 (x691 x827 x12 x426 x1103 x1095 x649)) x1095))
(assert (x829 x268))
(assert (= (or x603 x1087) x731))
(assert (x829 x1311))
(assert (x829 x473))
(assert (= (x73 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255)) x1119))
(assert (= 0 (x296 2189116922)))
(assert (x829 x940))
(assert (x514 x702))
(assert (= (x47 (x1337 x827 x713 x826 x403 x48)) x403))
(assert (x829 x218))
(assert (x829 x236))
(assert (x357 32 x1105))
(assert (x829 x287))
(assert (x357 32 x539))
(assert (x829 x797))
(assert (x829 x1192))
(assert (= (x73 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) x800))
(assert (x829 x348))
(assert (x829 x1292))
(assert (x829 x444))
(assert (= x838 (x1221 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838))))
(assert (x829 x1142))
(assert (= (=> (and (<= x1079 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 18446744073709551615 x539) (= (x579 164) x943) (= x701 (x313 (+ (mod (+ x513 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1079))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x52) (<= x943 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x52 x943)) (and (> x943 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x52))) (<= x1079 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1079 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x701 x1079) (= x688 (x313 (+ x1079 32))) (= x1056 (* 160 x539)) (or (>= x943 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 2065879269376 x943)) (= (* x539 32) x513) (= x888 (x313 (+ x943 36))) (= x64 (+ 32 x885)) (= x539 (x579 x888)) (= x201 (x85 (- x1063 x1056))) (<= 1 x701) (not (or (and (> x405 x201) (= (<= x405 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x405) (> x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x313 (+ x888 32)) x405) (= (< 0 x539) x526)) (and (=> x526 x92) (=> (and (= x1228 x701) (not x526)) x705))) x847))
(assert (x829 x298))
(assert (x829 x950))
(assert (x829 x665))
(assert (= x497 (or x670 x206)))
(assert (x829 x1112))
(assert (x829 x345))
(assert (= (x1170 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) x447))
(assert (< (x209 x872 x148 x1328 x961) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x1095))
(assert (x829 x699))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (=> (<= x719 10000) (= 0 (x296 x719))))
(assert (x829 x1118))
(assert (x829 x1041))
(assert (x829 x375))
(assert (not (x799 (x209 x99 x33 x267 x104))))
(assert (x829 x566))
(assert (x829 x875))
(assert (= x12 (x73 (x691 x827 x12 x426 x1103 x1095 x649))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1096 x1044 x798)))
(assert (=> (>= 10000 x1057) (= (x296 x1057) 0)))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (=> (>= 10000 x721) (= (x296 x721) 0)))
(assert (= x591 (x499 (x1337 x476 x862 x591 x672 x1129))))
(assert (not (x799 (x30 x476 x523 x147 x224 x1241 x774 x447 x221))))
(assert (= (and x308 x1135) x329))
(assert (= (x306 (x1276 x476 x298 x1098)) x476))
(assert (= (x73 (x209 x476 x1263 x991 x262)) x1263))
(assert (= x439 (x73 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (=> (>= 10000 x500) (= (x296 x500) 0)))
(assert (= (or x781 x955) x914))
(assert (x829 x1037))
(assert (x829 x13))
(assert (=> (>= 10000 x571) (= 0 (x296 x571))))
(assert (x829 x396))
(assert (= (and x1190 x497) x955))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x1202 x156))
(assert (not (x799 (x1050 0))))
(assert (= (x296 (x1276 x872 x686 x481)) (x1276 x872 x686 x481)))
(assert (x799 134217728))
(assert (= x827 (x306 (x1337 x827 x713 x826 x403 x48))))
(assert (x829 x484))
(assert (=> (<= x1319 10000) (= (x296 x1319) 0)))
(assert (x829 x1318))
(assert (x829 x93))
(assert (x829 x148))
(assert (x829 x656))
(assert (not (x799 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (x829 x545))
(assert (x829 x1049))
(assert (x829 x694))
(assert (=> (>= 10000 x162) (= (x296 x162) 0)))
(assert (= (x296 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (=> (>= 10000 x1103) (= 0 (x296 x1103))))
(assert (x1224 128))
(assert (= x713 (x73 (x1337 x827 x713 x826 x403 x48))))
(assert (x829 x511))
(assert (x829 x981))
(assert (= (x73 (x621 x827 x1146 x272 x504 x214 x193 x673)) x1146))
(assert (= (x296 (x1276 x476 x298 x1098)) (x1276 x476 x298 x1098)))
(assert (x829 x500))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x829 x1236))
(assert (x974 x156))
(assert (x829 x788))
(assert (x514 x868))
(assert (x829 x626))
(assert (= (x294 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) x626))
(assert (=> (>= 10000 x904) (= 0 (x296 x904))))
(assert (x829 x513))
(assert (x829 x800))
(assert (=> (>= 10000 x656) (= 0 (x296 x656))))
(assert (x829 x919))
(assert (x829 x965))
(assert (=> (<= x110 10000) (= (x296 x110) 0)))
(assert (=> (>= 10000 x365) (= (x296 x365) 0)))
(assert (x829 x31))
(assert (x829 x780))
(assert (x829 x559))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x621 x476 x982 x694 x444 x964 x487 x900)))
(assert (x829 x1216))
(assert (= x775 (x73 (x1337 x99 x775 x345 x711 x416))))
(assert (x829 x1021))
(assert (< (x1337 x872 x1227 x1291 x146 x802) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x972))
(assert (x829 x158))
(assert (= (and x984 x1089) x746))
(assert (= x827 (x306 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (x829 x1248))
(assert (= (x296 18446746139588821059) 0))
(assert (= (x631 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) x680))
(assert (x514 x452))
(assert (x829 x1146))
(assert (x829 x118))
(assert (x829 x663))
(assert (< (x621 x99 x169 x1292 x142 x252 x615 x174) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x58))
(assert (x829 x177))
(assert (= (x499 (x691 x99 x921 x41 x567 x782 x429)) x41))
(assert (x829 x304))
(assert (x829 x759))
(assert (=> (>= 10000 x408) (= 0 (x296 x408))))
(assert (=> (>= 10000 x872) (= 0 (x296 x872))))
(assert (= x444 (x47 (x621 x476 x982 x694 x444 x964 x487 x900))))
(assert (x829 x798))
(assert (x829 x988))
(assert (=> (<= x429 10000) (= (x296 x429) 0)))
(assert (= (and x229 (not x1168)) x784))
(assert (= (and x580 x1302) x1087))
(assert (not (x799 (x1096 x248 x546))))
(assert (= x837 (x47 (x209 x827 x864 x1066 x837))))
(assert (= (x621 x827 x1146 x272 x504 x214 x193 x673) (x296 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x751))
(assert (=> (<= x345 10000) (= (x296 x345) 0)))
(assert (= (x47 (x209 x1044 x91 x1033 x1162)) x1162))
(assert (=> (>= 10000 x267) (= 0 (x296 x267))))
(assert (x829 x167))
(assert (=> (>= 10000 x416) (= (x296 x416) 0)))
(assert (x829 x141))
(assert (x1002 x868 32))
(assert (x829 x43))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1050 0)))
(assert (> (x1050 0) 10000))
(assert (x829 x902))
(assert (x829 x1163))
(assert (x829 x1191))
(assert (x829 x622))
(assert (> (x30 x406 x83 x110 x1057 x855 x696 x789 x424) 10000))
(assert (not (x799 (x691 x406 x985 x857 x71 x507 x353))))
(assert (x829 x904))
(assert (not (x799 (x691 x827 x12 x426 x1103 x1095 x649))))
(assert (= (=> (and (and (= (x934 x699) x70) (>= x1 1) (= (x313 (+ 4 x1175)) x756) (<= 1 x70) (<= x283 57896044618658097711785492504343953926634992332820282019728792003956564819967) (not (= x699 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x699) (> x1175 x699) (= (x399 1461501637330902918203684832716283019655932542975 x1052) x192) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x699)) (= x1175 (x313 (+ 32 x699))) (<= x699 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x399 1461501637330902918203684832716283019655932542975 x172) x1244) (<= 32 x283) (not (= x699 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x699 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< 0 x950) x185)) (or (and (= x950 x97) (not x185)) (and x185 (and (= 1 x97) (<= 32 x283) (<= x283 4294967295))))) x474) x1051))
(assert (= x135 (=> (and (and (= x1214 (x533 x640)) (= (< 0 x1214) x678) (= x1298 (x313 (+ 32 x617))) (= (x313 (+ 32 x640)) x302) (= x1334 (x533 x228))) (or (and x678 (and (= x256 x1236) (= (x313 (+ x1298 32)) x256) (= x68 (x313 (+ 32 x302))) (not x1023) (= (x533 x302) x21) (= x1023 (< 1 x1214)) (= x614 x68) (= x987 1))) (and (not x678) (and (= x1298 x1236) (= x302 x614) (= 0 x987))))) x113)))
(assert (= (and x253 x1273) x229))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x691 x476 x875 x1184 x562 x225 x720)))
(assert (= (x949 x819 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1254 x819 248)))
(assert (= (x499 (x209 x99 x33 x267 x104)) x267))
(assert (=> (>= 10000 x216) (= (x296 x216) 0)))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564820517))
(assert (x829 x1193))
(assert (x829 x684))
(assert (= (x1337 x99 x775 x345 x711 x416) (x296 (x1337 x99 x775 x345 x711 x416))))
(assert (x829 x1085))
(assert (=> (>= 10000 x480) (= (x296 x480) 0)))
(assert (x829 x815))
(assert (=> (>= 10000 x396) (= (x296 x396) 0)))
(assert (not (x799 (x30 x872 x1119 x604 x787 x559 x106 x638 x1255))))
(assert (x829 x425))
(assert (= (x209 66 x18 x612 x222) (x296 (x209 66 x18 x612 x222))))
(assert (=> (<= x317 10000) (= (x296 x317) 0)))
(assert (x829 x900))
(assert (=> (<= x711 10000) (= (x296 x711) 0)))
(assert (= 0 (x296 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (< 10000 (x30 x248 x439 x57 x60 x929 x127 x391 x516)))
(assert (x829 x555))
(assert (x829 x1214))
(assert (x129 x172))
(assert (x829 x1185))
(assert (x829 x1259))
(assert (x129 x1080))
(assert (x829 x181))
(assert (= x248 (x306 (x209 x248 x1209 x134 x610))))
(assert (x829 x881))
(assert (x829 x1003))
(assert (x829 x475))
(assert (= (x306 (x1096 x827 x500)) x827))
(assert (x829 x888))
(assert (= 0 (x296 18446744073709551487)))
(assert (x829 x462))
(assert (x829 x735))
(assert (x829 x416))
(assert (= x15 (x631 (x691 x1044 x19 x750 x795 x304 x15))))
(assert (= (x306 (x1337 x99 x775 x345 x711 x416)) x99))
(assert (< 10000 (x209 x248 x1209 x134 x610)))
(assert (x829 x711))
(assert (x829 x623))
(assert (x829 x864))
(assert (< 10000 (x1096 x99 x852)))
(assert (= (x73 (x1096 x406 x383)) x383))
(assert (x829 x858))
(assert (x829 x200))
(assert (x357 160 x539))
(assert (= (x294 (x691 x872 x390 x475 x887 x365 x807)) x365))
(assert (x829 x481))
(assert (= (not (and (not x877) (<= x1330 18446744073709551615) (= (x313 (+ 32 x922)) x770) (= (= x1330 0) x1008) (<= x1269 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x96) (not (= x96 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (= x310 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x313 (+ x1269 (mod (+ x1174 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x310) (= x1014 (x564 x831)) (<= x1269 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x96 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x313 (+ x770 32)) x1309) (= (x564 x885) x831) (<= x310 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x310)) (= (x313 (+ 32 x310)) x1065) (not x1008) (= x1330 (x313 (+ x1118 x1014))) (= (x313 (+ x96 160)) x469) (= (x313 (+ 32 x958)) x663) (<= x310 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x922 (x313 (+ x1065 32))) (not (>= (+ x1014 x1118) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x310) (not x349) (= (= 1 x1330) x349) (< x96 x469) (> x96 x310) (= x958 (x313 (+ x1269 32))) (= x820 (x564 x1282)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x310)) (= (x313 (+ x310 160)) x96) (not (= x96 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x313 (+ 32 x276)) x689) (= x43 (x85 (- x1330 1))) (= x767 (x313 (+ 32 x141))) (= (x564 192) x1282) (< x1269 x310) (= x1118 (x564 x184)) (<= x96 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x310) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1269) (= (x313 (+ 32 x96)) x276) (= (= x43 1) x877) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x96) (= (x313 (+ x689 32)) x141) (= x1174 (* x1330 32)) (= x184 (x564 x64)))) x437))
(assert (x829 x1088))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (not (x799 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (x829 x967))
(assert (x829 x494))
(assert (x357 32 x541))
(assert (x829 x504))
(assert (x829 x1335))
(assert (x1038 x283))
(assert (= (x1276 x1044 x1036 x623) (x296 (x1276 x1044 x1036 x623))))
(assert (= (x306 (x1096 x872 x140)) x872))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x30 x248 x439 x57 x60 x929 x127 x391 x516)))
(assert (x829 x224))
(assert (not (x799 (x209 x872 x148 x1328 x961))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1096 x827 x500)))
(assert (x829 x495))
(assert (< (x1096 x248 x546) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x592))
(assert (= (x296 18446744073709551167) 0))
(assert (x829 x662))
(assert (=> (<= x982 10000) (= (x296 x982) 0)))
(assert (x829 x366))
(assert (= (x47 (x691 x476 x875 x1184 x562 x225 x720)) x562))
(assert (x829 x882))
(assert (x829 x608))
(assert (=> (>= 10000 x864) (= 0 (x296 x864))))
(assert (x829 x615))
(assert (= x487 (x631 (x621 x476 x982 x694 x444 x964 x487 x900))))
(assert (= x1044 (x306 (x1096 x1044 x798))))
(assert (=> (<= x552 10000) (= (x296 x552) 0)))
(assert (x829 x221))
(assert (x829 x321))
(assert (x829 x718))
(assert (x829 x18))
(assert (x829 x60))
(assert (= (x294 (x1337 x248 x198 x408 x773 x1246)) x1246))
(assert (=> (>= 10000 x775) (= 0 (x296 x775))))
(assert (x1002 x702 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x209 x1044 x91 x1033 x1162)))
(assert (x1002 x172 1461501637330902918203684832716283019655932542976))
(assert (x1224 x532))
(assert (x829 x1143))
(assert (=> (>= 10000 x147) (= 0 (x296 x147))))
(assert (= (x296 (x209 x476 x1263 x991 x262)) (x209 x476 x1263 x991 x262)))
(assert (x829 x753))
(assert (x829 x482))
(assert (x829 x968))
(assert (=> (<= x694 10000) (= 0 (x296 x694))))
(assert (x829 x1076))
(assert (x829 x1264))
(assert (x829 x385))
(assert (not (x799 (x209 x476 x1263 x991 x262))))
(assert (not (x799 (x1337 x406 x848 x1148 x602 x261))))
(assert (x829 x1305))
(assert (< (x1337 x406 x848 x1148 x602 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x799 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (= x827 (x306 (x691 x827 x12 x426 x1103 x1095 x649))))
(assert (= (or (and x575 (not x344)) x779) x486))
(assert (=> (<= x686 10000) (= 0 (x296 x686))))
(assert (=> (<= x202 10000) (= (x296 x202) 0)))
(assert (x829 x132))
(assert (x829 x374))
(assert (x829 x335))
(assert (= x887 (x47 (x691 x872 x390 x475 x887 x365 x807))))
(assert (not (x799 (x1337 x827 x713 x826 x403 x48))))
(assert (x829 x1299))
(assert (x829 x740))
(assert (x829 x584))
(assert (x829 x538))
(assert (= (x296 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) (x30 x476 x523 x147 x224 x1241 x774 x447 x221)))
(assert (x829 x122))
(assert (= (x294 (x1337 x872 x1227 x1291 x146 x802)) x802))
(assert (=> (<= x297 10000) (= (x296 x297) 0)))
(assert (=> (>= 10000 x1216) (= 0 (x296 x1216))))
(assert (= x910 (=> (and (and (= (x63 x284) x324) (= x488 (x81 x911)) (= x166 (x313 (+ 32 x911))) (= x1037 (x313 (+ 32 x182))) (= (< 0 x488) x1158) (= x182 x123) (= x219 (> x324 0)) (= (x81 x646) x218) (= x284 (x63 x260)) (= x646 (x313 (+ 32 x1191))) (not x219)) (or (and x1158 (and (not x107) (= (x313 (+ x1037 32)) x318) (= (< 1 x488) x107) (= x906 x318) (= x748 x965) (= x965 (x313 (+ x166 32))) (= x506 1) (= x677 (x81 x166)))) (and (not x1158) (and (= x748 x166) (= x906 x1037) (= x506 0))))) x414)))
(assert (x829 x1018))
(assert (x829 x14))
(assert (=> (>= 10000 x604) (= 0 (x296 x604))))
(assert (x829 x1336))
(assert (= (x499 (x621 x1044 x1193 x384 x714 x208 x545 x132)) x384))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1096 x406 x383)))
(assert (x829 x174))
(assert (x1224 x89))
(assert (=> (<= x855 10000) (= (x296 x855) 0)))
(assert (x829 x380))
(assert (x829 x487))
(assert (=> (>= 10000 x200) (= (x296 x200) 0)))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (x829 x1000))
(assert (=> (<= x638 10000) (= (x296 x638) 0)))
(assert (x129 x702))
(assert (= (x1170 (x30 x99 x554 x1025 x257 x396 x719 x317 x425)) x317))
(assert (> (x1337 x1044 x1239 x1020 x454 x39) 10000))
(assert (=> (<= x562 10000) (= (x296 x562) 0)))
(assert (x1224 x1214))
(assert (x829 x953))
(assert (= (x499 (x209 x248 x1209 x134 x610)) x134))
(assert (x829 x1212))
(assert (x829 x532))
(assert (not (x799 (x1337 x476 x862 x591 x672 x1129))))
(assert (x829 x480))
(assert (= x1098 (x499 (x1276 x476 x298 x1098))))
(assert (=> (>= 10000 x57) (= 0 (x296 x57))))
(assert (=> (<= x1129 10000) (= 0 (x296 x1129))))
(assert (x799 18446744073709551518))
(assert (=> (>= 10000 x143) (= 0 (x296 x143))))
(assert (x129 x609))
(assert (< 10000 (x1276 x406 x763 x202)))
(assert (= x1216 (x499 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838))))
(assert (=> (>= 10000 x261) (= 0 (x296 x261))))
(assert (= x18 (x73 (x209 66 x18 x612 x222))))
(assert (not (x799 (x1337 x1044 x1239 x1020 x454 x39))))
(assert (x829 x833))
(assert (x829 x358))
(assert (x829 x250))
(assert (x829 x86))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (= x252 (x294 (x621 x99 x169 x1292 x142 x252 x615 x174))))
(assert (x829 x228))
(assert (=> (>= 10000 x973) (= 0 (x296 x973))))
(assert (= 0 (x296 37664329658542632380461339884011895550187483938955784695590509376205521682432)))
(assert (=> (<= x507 10000) (= 0 (x296 x507))))
(assert (=> (<= x140 10000) (= 0 (x296 x140))))
(assert (= (x1221 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) x424))
(assert (x829 x813))
(assert (= (and x1010 x668) x479))
(assert (x829 x283))
(assert (x829 x1109))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039439137263839420088228) 0))
(assert (< (x1337 x248 x198 x408 x773 x1246) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x789) (= (x296 x789) 0)))
(assert (= (or x825 (and x1242 x362)) x1010))
(assert (x829 x896))
(assert (x829 x867))
(assert (= (x296 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (x129 32))
(assert (= x670 (and (not x678) x176)))
(assert (= (x1276 x406 x763 x202) (x296 (x1276 x406 x763 x202))))
(assert (= (x691 x872 x390 x475 x887 x365 x807) (x296 (x691 x872 x390 x475 x887 x365 x807))))
(assert (= x271 (x47 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x829 x156))
(assert (x829 x1208))
(assert (x829 x450))
(assert (x829 x131))
(assert (= (x306 (x209 x1044 x91 x1033 x1162)) x1044))
(assert (= x913 (x73 (x621 x406 x913 x727 x117 x200 x1012 x290))))
(assert (x829 x75))
(assert (x829 x1125))
(assert (x974 x139))
(assert (x829 x873))
(assert (> (x691 x99 x921 x41 x567 x782 x429) 10000))
(assert (x829 x754))
(assert (= (x1170 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) x203))
(assert (= x1066 (x499 (x209 x827 x864 x1066 x837))))
(assert (x829 x470))
(assert (x829 x143))
(assert (= (x296 (x621 x872 x571 x188 x477 x480 x656 x845)) (x621 x872 x571 x188 x477 x480 x656 x845)))
(assert (< (x30 x872 x1119 x604 x787 x559 x106 x638 x1255) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x799 (x1096 x406 x383))))
(assert (x829 x1103))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x829 x214))
(assert (= (or x723 x239) x984))
(assert (= (x306 (x621 x248 x215 x69 x271 x1264 x574 x297)) x248))
(assert (=> (>= 10000 x913) (= (x296 x913) 0)))
(assert (x829 x792))
(assert (x829 x66))
(assert (=> (<= x1315 10000) (= (x296 x1315) 0)))
(assert (= x223 (=> (and (>= x566 128) (= (x579 x1121) x930) (= (x579 x61) x498) (<= x619 18446744073709551615) (< x619 x87) (or (<= x619 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x619)) (= x443 (x579 x635)) (= (x85 (- x1063 x734)) x566) (or (<= x619 18446744073709551487) (>= x619 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x619) (= (x313 (+ x863 32)) x590) (= (x313 (+ 32 x635)) x1121) (<= x566 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x313 (+ 32 x1121)) x61) (<= x619 18446744073709551615) (<= x619 18446744073709551614) (= x3 (x579 x734)) (= x863 (x313 (+ 32 x619))) (= x226 (not (< 1 x728))) (or (>= x734 57896044618658097711785492504343953926634992332820282019728792003956564820517) (>= 2065879269316 x734)) (<= x443 1461501637330902918203684832716283019655932542975) (>= 18446744073709551614 x619) (= x635 (x313 (+ 32 x734))) (= x87 (x313 (+ 128 x619))) (not (> x619 x87)) (<= x3 5) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x619)) (= (x313 (+ x590 32)) x1256)) (and x226 (=> (= x87 x1079) x847)))))
(assert (=> (>= 10000 x802) (= (x296 x802) 0)))
(assert (x829 x242))
(assert (= x603 (and (not x580) x1302)))
(assert (= (x306 (x621 x99 x169 x1292 x142 x252 x615 x174)) x99))
(assert (= x827 (x306 (x209 x827 x864 x1066 x837))))
(assert (x829 x126))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x209 x476 x1263 x991 x262)))
(assert (= (x73 (x691 x406 x985 x857 x71 x507 x353)) x985))
(assert (=> (>= 10000 x208) (= 0 (x296 x208))))
(assert (= (x306 (x621 x872 x571 x188 x477 x480 x656 x845)) x872))
(assert (=> (<= x15 10000) (= 0 (x296 x15))))
(assert (x829 x838))
(assert (= (x306 (x30 x1044 x800 x1216 x494 x626 x680 x203 x838)) x1044))
(assert (x829 x571))
(assert (x829 x468))
(assert (= x360 (or x479 x457)))
(assert (not (x799 (x1096 x476 x552))))
(assert (x799 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (= (=> (and (= x868 (x313 (+ 31 x462))) (= (<= x827 224) x811) (= x1326 (x85 (- x599 x828))) (= (x399 115792089237316195423570985008687907853269984665640564039457584007913129639904 x868) x473) (= (x918 x828) x827) (= x194 (x313 (+ x462 x1124))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x828) (> x599 x828) (<= x828 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x599) (= (x85 (- x1326 32)) x768) (= (x313 (+ x1124 x473)) x599) (= x628 (x313 (+ 32 x828))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x828)) (and (=> (and (= x356 (x918 x766)) (= x1181 (x313 (+ 96 x628))) (= x500 (x918 x628)) (= x1199 (x313 (+ 64 x628))) (= x216 (x918 x628)) (= (x691 x827 x12 x426 x1103 x1095 x649) x1270) (<= 1 x641) (= x12 (x918 x628)) (= (x313 (+ x628 160)) x288) (= (x918 x628) x904) (= (x918 x894) x973) (= (x313 (+ x628 32)) x275) (= x35 (not (< 1 x264))) (= x1092 (x313 (+ 32 x628))) (= (x918 x1181) x48) (= x485 (x313 (+ 32 x628))) (= (x918 x860) x1095) (= (x918 x628) x713) (= x1027 (ite (= x827 0) x23 (ite (>= 32 x827) x977 (ite (>= 64 x827) x16 (ite (<= x827 96) x451 (ite (<= x827 128) x653 (ite (<= x827 160) x1270 (ite (<= x827 192) x1102 (ite (<= x827 224) x1101 x967))))))))) (= (x313 (+ 128 x628)) x153) (= (x918 x485) x426) (= (x589 x1176) x1296) (= x16 (x1276 x827 x216 x356)) (= (x313 (+ x640 32)) x605) (= x822 (x313 (+ 160 x628))) (= x403 (x918 x103)) (= x23 (x1050 0)) (= x766 (x313 (+ 32 x628))) (= (x918 x1030) x837) (= x1215 (x918 x822)) (= x977 (x1096 x827 x500)) (= x549 (x313 (+ x628 128))) (= x411 (x313 (+ 32 x628))) (= x108 (x918 x275)) (= x1030 (x313 (+ x628 64))) (= x866 (x918 x992)) (= x826 (x918 x411)) (= (x313 (+ 96 x628)) x992) (= (x918 x122) x649) (= x860 (x313 (+ x628 96))) (= x436 (x313 (+ 192 x628))) (= (x918 x1092) x1066) (= (x30 x827 x904 x108 x973 x866 x268 x1215 x1260) x1101) (= (x918 x153) x268) (= (x589 x1296) x264) (= x1102 (x621 x827 x1146 x272 x504 x214 x193 x673)) (= x193 (x918 x549)) (= (x918 x1212) x214) (= x1260 (x918 x436)) (= (x313 (+ 32 x628)) x777) (= x122 (x313 (+ x628 128))) (= x451 (x209 x827 x864 x1066 x837)) (= (x918 x777) x272) (= x653 (x1337 x827 x713 x826 x403 x48)) (= (x313 (+ 64 x628)) x894) (= (x313 (+ 64 x628)) x103) (= (x918 x640) x641) (= x864 (x918 x628)) (= (x918 x666) x504) (= (x918 x1199) x1103) (= (x313 (+ 96 x628)) x1212) (= x673 (x918 x288)) (= (x918 x628) x1146) (= x666 (x313 (+ 64 x628)))) (and x35 (=> (= x617 x599) x135))) x811)) x1126))
(assert (x829 x424))
(assert (= x973 (x47 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (x829 x1328))
(assert (=> (>= 10000 x878) (= 0 (x296 x878))))
(assert (x829 x498))
(assert (not (x799 (x1337 x248 x198 x408 x773 x1246))))
(assert (x829 x758))
(assert (x829 x1026))
(assert (x829 x264))
(assert (= x1232 (=> (and (= x976 (x338 x797)) (= x138 (< 0 x976)) (= (x338 x1176) x797)) (and (=> (and (not x138) (= x828 x617)) x135) (=> (and (and (and (= x1124 (x313 (+ x236 32))) (= (> x462 0) x270) (>= x565 1) (= (x313 (+ 32 x896)) x832) (= (x338 x1176) x105) (= x236 (x313 (+ 128 x896))) (= (x338 x1109) x846) (= x869 (x313 (+ x650 32))) (= x281 (x313 (+ x377 32))) (= x1072 (x338 x281)) (= (x313 (+ x832 32)) x650) (= x896 (x313 (+ 32 x828))) (= (x313 (+ 32 x105)) x1109) (= (x338 x377) x834) (= (x1110 x1072) x462) (= (x313 (+ 32 x1072)) x854) (= x246 (x399 1461501637330902918203684832716283019655932542975 x535)) (= (x338 x105) x565) (= x377 (x313 (+ 32 x846))) (= (x338 x846) x535)) (or (and (and (= x1055 (< 32 x462)) (not x1055) (= (x189 x854) x515)) x270) (not x270))) x138) x1126)))))
(assert (=> (<= x875 10000) (= (x296 x875) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x691 x99 x921 x41 x567 x782 x429)))
(assert (= (x621 x1044 x1193 x384 x714 x208 x545 x132) (x296 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (x829 x852))
(assert (= x198 (x73 (x1337 x248 x198 x408 x773 x1246))))
(assert (= x33 (x73 (x209 x99 x33 x267 x104))))
(assert (=> (<= x406 10000) (= (x296 x406) 0)))
(assert (x1002 x230 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x926))
(assert (= x431 (and x441 x731)))
(assert (x829 x1092))
(assert (< (x1276 x99 x721 x1315) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x394))
(assert (= (x306 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) x476))
(assert (x829 x1177))
(assert (x829 x617))
(assert (x829 x415))
(assert (x829 x607))
(assert (x829 x680))
(assert (= (x691 x248 x483 x101 x1319 x389 x791) (x296 (x691 x248 x483 x101 x1319 x389 x791))))
(assert (x1224 x657))
(assert (=> (<= x763 10000) (= 0 (x296 x763))))
(assert (x829 x225))
(assert (x129 x278))
(assert (x829 x1308))
(assert (= x692 (=> (and (= (x313 (+ x1090 32)) x307) (= (x313 (+ 32 x698)) x133) (= x684 (x313 (+ 32 x1335))) (<= 160 x994) (= x367 (not (< 1 x1105))) (= (x579 x684) x455) (= x634 (x579 x1005)) (or (>= x751 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x751 18446744073709551455)) (<= x455 1461501637330902918203684832716283019655932542975) (not (= x751 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (< x1054 x751)) (<= x751 18446744073709551615) (> x1054 x751) (<= x751 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x313 (+ x133 32)) x1005) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x751) (<= x751 18446744073709551455)) (= (x579 x698) x1332) (= (x313 (+ x307 32)) x1262) (= x1090 (x313 (+ x754 32))) (= x1054 (x313 (+ x751 160))) (= x1285 (x579 x1335)) (<= x751 18446744073709551614) (= x994 (x85 (- x1063 x1335))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x994) (= (x579 x133) x850) (<= x751 18446744073709551615) (= x754 (x313 (+ 32 x751))) (or (<= x1335 2065879269284) (>= x1335 57896044618658097711785492504343953926634992332820282019728792003956564820517)) (>= 1461501637330902918203684832716283019655932542975 x634) (>= 5 x1285) (= (x313 (+ 32 x684)) x698) (>= 18446744073709551614 x751)) (and x367 (=> (= x867 x1054) x51)))))
(assert (not (x799 (x1337 x872 x1227 x1291 x146 x802))))
(assert (x829 x686))
(assert (= 66 (x306 (x209 66 x18 x612 x222))))
(assert (x829 x546))
(assert (x829 x363))
(assert (x799 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x829 x38))
(assert (= x546 (x73 (x1096 x248 x546))))
(assert (=> (>= 10000 x476) (= (x296 x476) 0)))
(assert (x1002 x278 1461501637330902918203684832716283019655932542976))
(assert (x829 x377))
(assert (x799 2065879269284))
(assert (=> (<= x483 10000) (= 0 (x296 x483))))
(assert (x829 x660))
(assert (> (x209 x1044 x91 x1033 x1162) 10000))
(assert (x829 x161))
(assert (= x406 (x306 (x1276 x406 x763 x202))))
(assert (x829 x848))
(assert (x829 x1267))
(assert (=> (<= x373 10000) (= 0 (x296 x373))))
(assert (x829 x1079))
(assert (x829 x440))
(assert (x829 x1097))
(assert (= (x306 (x1276 x99 x721 x1315)) x99))
(assert (x829 x1031))
(assert (= x39 (x294 (x1337 x1044 x1239 x1020 x454 x39))))
(assert (= (x631 (x621 x827 x1146 x272 x504 x214 x193 x673)) x193))
(assert (= (and x1168 x229) x466))
(assert (=> (<= x782 10000) (= (x296 x782) 0)))
(assert (x829 x90))
(assert (x1224 x161))
(assert (> (x1096 x248 x546) 10000))
(assert (x829 x405))
(assert (x829 x170))
(assert (x829 x1144))
(assert (=> (<= x857 10000) (= 0 (x296 x857))))
(assert (= (x296 18446744073709551615) 0))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (= x1209 (x73 (x209 x248 x1209 x134 x610))))
(assert (= x855 (x294 (x30 x406 x83 x110 x1057 x855 x696 x789 x424))))
(assert (x1002 x452 32))
(assert (=> (<= x71 10000) (= (x296 x71) 0)))
(assert (=> (<= x1264 10000) (= 0 (x296 x1264))))
(assert (=> (>= 10000 x1291) (= (x296 x1291) 0)))
(assert (x829 x238))
(assert (x829 x10))
(assert (= (x73 (x1276 x476 x298 x1098)) x298))
(assert (x829 x645))
(assert (= x844 true))
(assert (= (x306 (x30 x248 x439 x57 x60 x929 x127 x391 x516)) x248))
(assert (x829 x822))
(assert (x829 x727))
(assert (x829 x216))
(assert (x829 x889))
(assert (x829 x1114))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x209 66 x18 x612 x222)))
(assert (x829 x1304))
(assert (x829 x1001))
(assert (= (=> (and (= x809 (* x1214 32)) (= x53 (x313 (+ x759 x302))) (<= 1 x136) (< x617 x1236) (<= 1 x1236) (<= x1214 4) (= x248 (x1211 x617)) (= x1236 x136) (<= x617 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x759 (* 32 x1214)) (<= x617 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x9 (<= x248 224)) (= (x85 (- x1236 x617)) x482) (= x614 x53) (= x7 (x313 (+ 32 x617))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x617) (= x136 (x313 (+ x809 x1298))) (= (x85 (- x482 32)) x352) (= x1214 x987)) (and x9 (=> (and (= x439 (x1211 x7)) (= (x1211 x893) x408) (= x1099 (x313 (+ 64 x7))) (or (and (>= x1236 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1236)) (and (>= x1236 1) (<= x1236 115792089237316195423570985008687907853269984665640564039457584007913129639807))) (= x460 (x621 x248 x215 x69 x271 x1264 x574 x297)) (= (x1211 x7) x483) (= (x209 x248 x1209 x134 x610) x423) (= x238 (x1211 x274)) (= x297 (x1211 x636)) (= (x1211 x80) x101) (= x893 (x313 (+ x7 32))) (= x520 (x1211 x7)) (= x25 (>= 224 x406)) (= (x1211 x1031) x574) (= (x1211 x422) x391) (= (x313 (+ x7 64)) x793) (= (x1211 x400) x57) (= (x313 (+ x1320 32)) x905) (= x1320 (x313 (+ 32 x1236))) (= x389 (x1211 x245)) (= (x1211 x1284) x791) (= x1246 (x1211 x804)) (= x699 (x313 (+ x1320 96))) (= x924 (x691 x248 x483 x101 x1319 x389 x791)) (= x1031 (x313 (+ x7 128))) (= (x1096 x248 x546) x1086) (= (x313 (+ x7 96)) x458) (= x271 (x1211 x1293)) (= x127 (x1211 x577)) (= x824 (ite (= x248 0) x859 (ite (<= x248 32) x1086 (ite (>= 64 x248) x465 (ite (>= 96 x248) x423 (ite (<= x248 128) x1310 (ite (>= 160 x248) x924 (ite (<= x248 192) x460 (ite (<= x248 224) x1200 x1142))))))))) (= x859 (x1050 0)) (= x1264 (x1211 x370)) (= (x313 (+ x7 64)) x749) (= (x1211 x518) x773) (= (x1211 x7) x1209) (= (x313 (+ 96 x7)) x245) (= (x313 (+ x7 128)) x1284) (= x400 (x313 (+ x7 32))) (= x80 (x313 (+ 32 x7))) (= (x30 x248 x439 x57 x60 x929 x127 x391 x516) x1200) (= x370 (x313 (+ x7 96))) (= x406 (x989 x1236)) (= x1068 (x313 (+ x7 32))) (= (x313 (+ 64 x7)) x1293) (= (x313 (+ 128 x7)) x577) (= x1310 (x1337 x248 x198 x408 x773 x1246)) (< x1236 x699) (= (x313 (+ 32 x7)) x363) (= x929 (x1211 x458)) (= (x1211 x1141) x516) (= (x1276 x248 x520 x238) x465) (= x610 (x1211 x793)) (= x1141 (x313 (+ x7 192))) (= x422 (x313 (+ 160 x7))) (= x518 (x313 (+ 64 x7))) (= (x85 (- x699 x1236)) x1042) (= (x1211 x363) x134) (= (x1211 x1068) x69) (= (x313 (+ x7 96)) x804) (= (x313 (+ 160 x7)) x636) (= (x313 (+ x905 32)) x1084) (= x335 (x85 (- x1042 32))) (= x198 (x1211 x7)) (= x60 (x1211 x749)) (= x274 (x313 (+ x7 32))) (= x215 (x1211 x7)) (= x546 (x1211 x7)) (= (x313 (+ 32 x1236)) x195) (= x1319 (x1211 x1099))) (and (=> (and (or (and (and (<= x249 4294967295) (= 1 x1) (>= x249 32)) x1190) (and (= x1 x387) (not x1190))) (and (= x848 (x989 x195)) (= x963 (x313 (+ 96 x195))) (= x808 (x691 x406 x985 x857 x71 x507 x353)) (= (x313 (+ 96 x195)) x981) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x249) (= x762 (x1050 0)) (= x375 (x313 (+ 128 x195))) (= (x989 x195) x985) (= x383 (x989 x195)) (= (x989 x195) x794) (= x855 (x989 x963)) (= x71 (x989 x608)) (= (x313 (+ 96 x195)) x74) (= (x989 x704) x202) (= x857 (x989 x732)) (= x891 (x989 x1085)) (= x261 (x989 x981)) (<= 32 x249) (= x290 (x989 x841)) (= (x989 x90) x1148) (= x258 x1078) (= (x313 (+ 64 x195)) x608) (= x463 (x313 (+ 96 x195))) (= (x313 (+ 64 x195)) x1069) (= x90 (x313 (+ x195 32))) (= x738 (x313 (+ x195 64))) (= (x313 (+ x195 32)) x732) (= x740 (x313 (+ x195 192))) (= (x989 x601) x602) (= x1190 (> x387 0)) (= (x989 x738) x117) (= x700 (x313 (+ x195 128))) (= (x313 (+ 4 x699)) x1188) (= (x621 x406 x913 x727 x117 x200 x1012 x290) x163) (= x789 (x989 x1272)) (= x696 (x989 x375)) (= (x989 x1305) x110) (<= x778 1461501637330902918203684832716283019655932542975) (= (x209 x406 x794 x891 x576) x1303) (= (x30 x406 x83 x110 x1057 x855 x696 x789 x424) x527) (= x913 (x989 x195)) (= x727 (x989 x1077)) (= (x313 (+ x195 32)) x1305) (= x601 (x313 (+ x195 64))) (= (ite (= 0 x406) x762 (ite (>= 32 x406) x1081 (ite (>= 64 x406) x1172 (ite (<= x406 96) x1303 (ite (<= x406 128) x951 (ite (<= x406 160) x808 (ite (<= x406 192) x163 (ite (>= 224 x406) x527 x143)))))))) x1078) (= (x989 x1069) x1057) (= x200 (x989 x74)) (= (x1096 x406 x383) x1081) (= (x989 x266) x353) (= (x989 x195) x763) (= x1012 (x989 x700)) (= (x313 (+ 32 x195)) x1077) (= (x313 (+ 160 x195)) x1272) (= (x989 x597) x172) (= x576 (x989 x1006)) (= x1172 (x1276 x406 x763 x202)) (= (x989 160) x1220) (= (x989 x1220) x1052) (= x1006 (x313 (+ x195 64))) (= (x313 (+ 32 x195)) x704) (= x1085 (x313 (+ 32 x195))) (= x266 (x313 (+ 128 x195))) (= x951 (x1337 x406 x848 x1148 x602 x261)) (= x841 (x313 (+ x195 160))) (= (x989 x463) x507) (= (x399 1461501637330902918203684832716283019655932542975 x1052) x1171) (= x424 (x989 x740)) (= (x989 x195) x83))) x1051) x25)))) x113))
(assert (x829 x991))
(assert (= (x631 (x30 x406 x83 x110 x1057 x855 x696 x789 x424)) x696))
(assert (x357 32 (- x1116 1)))
(assert (x829 x410))
(assert (= (x73 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) x523))
(assert (=> (>= 10000 x224) (= 0 (x296 x224))))
(assert (= x862 (x73 (x1337 x476 x862 x591 x672 x1129))))
(assert (=> (>= 10000 x169) (= 0 (x296 x169))))
(assert (=> (<= x1328 10000) (= 0 (x296 x1328))))
(assert (= 0 (x296 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (x829 x108))
(assert (=> (<= x516 10000) (= 0 (x296 x516))))
(assert (not (x799 (x1276 x99 x721 x1315))))
(assert (not (x799 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (x829 x265))
(assert (x829 x1068))
(assert (x829 x772))
(assert (=> (<= x964 10000) (= (x296 x964) 0)))
(assert (x829 x1111))
(assert (x829 x183))
(assert (x829 x689))
(assert (=> (>= 10000 x546) (= 0 (x296 x546))))
(assert (x829 x112))
(assert (x829 x963))
(assert (x829 x816))
(assert (x829 x573))
(assert (= 0 (x296 1461501637330902918203684832716283019655932542975)))
(assert (x829 x620))
(assert (x829 x618))
(assert (=> (<= x272 10000) (= 0 (x296 x272))))
(assert (x829 x305))
(assert (= x108 (x499 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (x829 x1121))
(assert (= x99 (x306 (x691 x99 x921 x41 x567 x782 x429))))
(assert (= x760 (and x844 x247)))
(assert (=> (<= x615 10000) (= 0 (x296 x615))))
(assert (x829 x302))
(assert (x829 x572))
(assert (= x612 (x499 (x209 66 x18 x612 x222))))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x1002 x836 1461501637330902918203684832716283019655932542976))
(assert (x829 x547))
(assert (=> (<= x1098 10000) (= (x296 x1098) 0)))
(assert (=> (<= x866 10000) (= (x296 x866) 0)))
(assert (x829 x1167))
(assert (=> (>= 10000 x826) (= (x296 x826) 0)))
(assert (=> (<= x148 10000) (= (x296 x148) 0)))
(assert (x129 x535))
(assert (x829 x831))
(assert (x1002 x152 32))
(assert (x1224 x728))
(assert (= (x1221 (x30 x476 x523 x147 x224 x1241 x774 x447 x221)) x221))
(assert (x799 18446744073709551615))
(assert (x829 x1020))
(assert (x829 x986))
(assert (=> (<= x91 10000) (= (x296 x91) 0)))
(assert (x829 x1241))
(assert (x829 x649))
(assert (x829 x19))
(assert (x829 x80))
(assert (x829 x260))
(assert (=> (>= 10000 x848) (= (x296 x848) 0)))
(assert (x129 x152))
(assert (= (x73 (x1276 x248 x520 x238)) x520))
(assert (=> (>= 10000 x791) (= 0 (x296 x791))))
(assert (x1224 x488))
(assert (= (and (not x247) x844) x303))
(assert (x829 x569))
(assert (x829 x136))
(assert (x829 x1155))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x209 x99 x33 x267 x104)))
(assert (=> (<= x1321 10000) (= 0 (x296 x1321))))
(assert (x974 x607))
(assert (= x297 (x1170 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x799 18446746139588821027))
(assert (= (x294 (x691 x476 x875 x1184 x562 x225 x720)) x225))
(assert (x829 x1052))
(assert (= x248 (x306 (x1276 x248 x520 x238))))
(assert (x829 x142))
(assert (= x268 (x631 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= x1239 (x73 (x1337 x1044 x1239 x1020 x454 x39))))
(assert (x829 x317))
(assert (= x1233 (and (not x441) x731)))
(assert (= (x73 (x621 x872 x571 x188 x477 x480 x656 x845)) x571))
(assert (x974 x278))
(assert (not (x799 (x691 x476 x875 x1184 x562 x225 x720))))
(assert (x829 x1141))
(assert (x829 x1325))
(assert (=> (>= 10000 x576) (= (x296 x576) 0)))
(assert (x829 x1119))
(assert (=> (>= 10000 x214) (= 0 (x296 x214))))
(assert (x357 128 x728))
(assert (x829 x980))
(assert (x357 32 x488))
(assert (x829 x203))
(assert (=> (>= 10000 x900) (= 0 (x296 x900))))
(assert (x829 x207))
(assert (=> (<= x649 10000) (= (x296 x649) 0)))
(assert (x829 x11))
(assert (= (x296 (x621 x476 x982 x694 x444 x964 x487 x900)) (x621 x476 x982 x694 x444 x964 x487 x900)))
(assert (x829 x110))
(assert (= (x47 (x1337 x1044 x1239 x1020 x454 x39)) x454))
(assert (x829 x1306))
(assert (x829 x1156))
(assert (= x575 (or x581 x1203)))
(assert (< 10000 (x621 x248 x215 x69 x271 x1264 x574 x297)))
(assert (= (x294 (x691 x1044 x19 x750 x795 x304 x15)) x304))
(assert (x829 x1213))
(assert (x129 x969))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639840)))
(assert (= x127 (x631 (x30 x248 x439 x57 x60 x929 x127 x391 x516))))
(assert (=> (>= 10000 x612) (= 0 (x296 x612))))
(assert (= x202 (x499 (x1276 x406 x763 x202))))
(assert (= x610 (x47 (x209 x248 x1209 x134 x610))))
(assert (=> (<= x774 10000) (= (x296 x774) 0)))
(assert (not (x799 (x1276 x406 x763 x202))))
(assert (x829 x770))
(assert (=> (>= 10000 x520) (= (x296 x520) 0)))
(assert (x829 x336))
(assert (x829 x672))
(assert (x829 x1277))
(assert (x799 1461501637330902918203684832716283019655932542975))
(assert (= (and x575 x344) x253))
(assert (x829 x1162))
(assert (x829 x516))
(assert (and (= 9 (x445 3 3)) (= 81 (x445 9 9)) (= (x445 27 3) 81) (= 27 (x445 9 3))))
(assert (=> (>= 10000 x58) (= (x296 x58) 0)))
(assert (x829 x1239))
(assert (= (x631 (x621 x99 x169 x1292 x142 x252 x615 x174)) x615))
(assert (x829 x1226))
(assert (=> (>= 10000 x12) (= 0 (x296 x12))))
(assert (x829 x906))
(assert (not (x799 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (=> (<= x106 10000) (= 0 (x296 x106))))
(assert (=> (>= 10000 x929) (= (x296 x929) 0)))
(assert (x1002 x535 1461501637330902918203684832716283019655932542976))
(assert (= x406 (x306 (x1337 x406 x848 x1148 x602 x261))))
(assert (x829 x1129))
(assert (= 0 (x296 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (x829 x166))
(assert (x829 x1307))
(assert (x1224 x38))
(assert (x829 x552))
(assert (x829 x1289))
(assert (=> (<= x215 10000) (= (x296 x215) 0)))
(assert (< 10000 (x209 66 x18 x612 x222)))
(assert (= (x296 (x1337 x476 x862 x591 x672 x1129)) (x1337 x476 x862 x591 x672 x1129)))
(assert (x829 x1022))
(assert (=> (>= 10000 x545) (= 0 (x296 x545))))
(assert (=> (>= 10000 x837) (= 0 (x296 x837))))
(assert (x829 x923))
(assert (x829 x985))
(assert (x829 x1327))
(assert (=> (<= x353 10000) (= (x296 x353) 0)))
(assert (x829 x1271))
(assert (x1002 x152 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x87))
(assert (> (x1096 x406 x383) 10000))
(assert (x829 x1039))
(assert (x829 x1054))
(assert (= x872 (x306 (x1276 x872 x686 x481))))
(assert (=> (<= x203 10000) (= (x296 x203) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x209 x827 x864 x1066 x837)))
(assert (x829 x99))
(assert (=> (>= 10000 x1239) (= 0 (x296 x1239))))
(assert (not (x799 (x1096 x827 x500))))
(assert (= (x1050 0) (x296 (x1050 0))))
(assert (=> (<= x845 10000) (= (x296 x845) 0)))
(assert (x829 x946))
(assert (= (and x526 x388) x606))
(assert (=> (>= 10000 x839) (= 0 (x296 x839))))
(assert (x829 x103))
(assert (x829 x117))
(assert (= x803 (and x947 (not x270))))
(assert (= (x306 (x209 x476 x1263 x991 x262)) x476))
(assert (< 10000 (x691 x827 x12 x426 x1103 x1095 x649)))
(assert (x829 x1063))
(assert (x799 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (= x781 (and (not x1190) x497)))
(assert (= (and (not x308) x1135) x300))
(assert (x829 x728))
(assert (x129 x607))
(assert (x829 x730))
(assert (x829 x749))
(assert (x829 x865))
(assert (= (x631 (x691 x872 x390 x475 x887 x365 x807)) x807))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x621 x1044 x1193 x384 x714 x208 x545 x132)))
(assert (x829 x1132))
(assert (x514 x1080))
(assert (x829 x913))
(assert (= x1193 (x73 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (= (x296 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x829 x274))
(assert (x829 x883))
(assert (x829 x95))
(assert (=> (<= x69 10000) (= 0 (x296 x69))))
(assert (x829 x96))
(assert (x829 x1))
(assert (x829 x67))
(assert (x829 x1072))
(assert (x829 x666))
(assert (x829 x123))
(assert (= (x73 (x691 x248 x483 x101 x1319 x389 x791)) x483))
(assert (= x269 (and x360 x1117)))
(assert (x829 x1136))
(assert (< 10000 (x209 x476 x1263 x991 x262)))
(assert (x829 x276))
(assert (x357 32 x657))
(assert (x829 x641))
(assert (not (x799 (x621 x872 x571 x188 x477 x480 x656 x845))))
(assert (> (x691 x1044 x19 x750 x795 x304 x15) 10000))
(assert (= x147 (x499 (x30 x476 x523 x147 x224 x1241 x774 x447 x221))))
(assert (x829 x1246))
(assert (=> (>= 10000 x523) (= (x296 x523) 0)))
(assert (= (x306 (x621 x406 x913 x727 x117 x200 x1012 x290)) x406))
(assert (x829 x246))
(assert (x829 x323))
(assert (> (x30 x99 x554 x1025 x257 x396 x719 x317 x425) 10000))
(assert (=> (<= x496 10000) (= (x296 x496) 0)))
(assert (x129 x690))
(assert (=> (<= x41 10000) (= (x296 x41) 0)))
(assert (= x356 (x499 (x1276 x827 x216 x356))))
(assert (= x188 (x499 (x621 x872 x571 x188 x477 x480 x656 x845))))
(assert (= (x296 (x691 x827 x12 x426 x1103 x1095 x649)) (x691 x827 x12 x426 x1103 x1095 x649)))
(assert (x829 x609))
(assert (x829 x202))
(assert (x829 x384))
(assert (=> (<= x221 10000) (= 0 (x296 x221))))
(assert (x829 x637))
(assert (x829 x352))
(assert (x829 x887))
(assert (x829 x1234))
(assert (x829 x744))
(assert (x829 x701))
(assert (x1002 x139 32))
(assert (x829 x777))
(assert (x829 x55))
(assert (=> (<= x1142 10000) (= (x296 x1142) 0)))
(assert (x829 x1157))
(assert (x129 x230))
(assert (= (x73 (x1337 x872 x1227 x1291 x146 x802)) x1227))
(assert (x1002 x1080 32))
(assert (= x215 (x73 (x621 x248 x215 x69 x271 x1264 x574 x297))))
(assert (x829 x307))
(assert (x829 x549))
(assert (x829 x1040))
(assert (= (x73 (x1337 x406 x848 x1148 x602 x261)) x848))
(assert (x829 x261))
(assert (x829 x293))
(assert (= (x1170 (x621 x99 x169 x1292 x142 x252 x615 x174)) x174))
(assert (= x827 (x306 (x1276 x827 x216 x356))))
(assert (x829 x745))
(assert (= x714 (x47 (x621 x1044 x1193 x384 x714 x208 x545 x132))))
(assert (= (or x269 x655) x186))
(assert (x129 x156))
(assert (x829 x403))
(assert (=> (<= x444 10000) (= (x296 x444) 0)))
(assert (= (x1337 x406 x848 x1148 x602 x261) (x296 (x1337 x406 x848 x1148 x602 x261))))
(assert (x829 x169))
(assert (=> (>= 10000 x447) (= 0 (x296 x447))))
(assert (x129 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x829 x841))
(assert (=> (>= 10000 x504) (= 0 (x296 x504))))
(assert (= x872 (x306 (x691 x872 x390 x475 x887 x365 x807))))
(assert (x829 x819))
(assert (x829 x1262))
(assert (x829 x1065))
(assert (x129 x452))
(assert (x829 x610))
(assert (= x101 (x499 (x691 x248 x483 x101 x1319 x389 x791))))
(assert (= (x30 x827 x904 x108 x973 x866 x268 x1215 x1260) (x296 (x30 x827 x904 x108 x973 x866 x268 x1215 x1260))))
(assert (not (x799 (x1276 x476 x298 x1098))))
(assert (x829 x952))
(assert (x829 x874))
(assert (=> (>= 10000 x750) (= 0 (x296 x750))))
(assert (not (x799 (x621 x827 x1146 x272 x504 x214 x193 x673))))
(assert (x829 x1220))
(assert (x829 x262))
(assert (x1224 (- x1116 1)))
(assert (=> (>= 10000 x961) (= (x296 x961) 0)))
(assert (x974 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x499 (x621 x476 x982 x694 x444 x964 x487 x900)) x694))
(assert (x357 32 x38))
(assert (= (x621 x99 x169 x1292 x142 x252 x615 x174) (x296 (x621 x99 x169 x1292 x142 x252 x615 x174))))
(assert (x829 x886))
(assert (x974 x452))
(assert (x829 x869))
(assert (x829 x193))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1175) (= x1049 (x564 x1175)) (= (x564 160) x336) (not (= x1175 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x564 x785) x79) (= x609 (x564 x336)) (not (= x1175 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1175)) (<= x1175 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1175) (= (< 0 x79) x344) (= x785 (x564 x1167)) (> x1269 x1175) (>= x97 1) (= x1049 1) (= (x313 (+ x1175 32)) x1269)) (and (=> (and x344 (and (= (x564 x1336) x1047) (>= 5 x1047) (= (= 0 x385) x1273) (<= 1 x629) (= (x564 x1306) x1336) (= x629 (x564 x785)) (= (x313 (+ x785 32)) x1306) (= x385 (ite (= x1047 1) 1 0)))) (and (=> (and x1273 (and (and (= (> x744 0) x1168) (= x744 (ite (= 2 x410) 1 0)) (= x410 (x564 x1336)) (>= 5 x410)) (or (and (not x1168) (and (= x733 3) (= (x564 x1336) x733) (= x687 1))) (and x1168 (= x744 1))))) x434) (=> (and (and (= x573 (x313 (+ x1336 128))) (>= 1461501637330902918203684832716283019655932542975 x1277) (= x309 (x399 1461501637330902918203684832716283019655932542975 x1067)) (= (x564 x573) x1067) (= x309 x1277)) (not x1273)) x706))) (=> (not x344) x437))) x474))
(assert (= (x1337 x872 x1227 x1291 x146 x802) (x296 (x1337 x872 x1227 x1291 x146 x802))))
(assert (x829 x182))
(assert (= x961 (x47 (x209 x872 x148 x1328 x961))))
(assert (x1202 x172))
(assert (x829 x602))
(assert (x829 x976))
(assert (= (x73 (x691 x99 x921 x41 x567 x782 x429)) x921))
(assert (x829 x439))
(assert (= (x296 18446744073709551613) 0))
(assert (x829 x1094))
(assert (=> (>= 10000 x271) (= 0 (x296 x271))))
(assert (x829 x61))
(assert (x829 x1215))
(assert (x829 x469))
(assert (=> (>= 10000 x727) (= 0 (x296 x727))))
(assert (x829 x1329))
(assert (x829 x1332))
(assert (= (x1096 x872 x140) (x296 (x1096 x872 x140))))
(check-sat)
(exit)
