(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1332 () Int)
(declare-fun x868 () Int)
(declare-fun x572 () Int)
(declare-fun x38 () Int)
(declare-fun x1098 () Int)
(declare-fun x1464 () Int)
(declare-fun x1430 () Int)
(declare-fun x1361 () Int)
(declare-fun x1003 () Int)
(declare-fun x907 () Int)
(declare-fun x1441 () Int)
(declare-fun x325 () Int)
(declare-fun x1375 () Int)
(declare-fun x1099 () Int)
(declare-fun x1145 () Int)
(declare-fun x243 () Bool)
(declare-fun x271 () Int)
(declare-fun x57 () Int)
(declare-fun x859 () Int)
(declare-fun x1010 () Int)
(declare-fun x1365 () Bool)
(declare-fun x926 () Int)
(declare-fun x951 () Int)
(declare-fun x1217 () Int)
(declare-fun x111 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x1460 () Int)
(declare-fun x341 () Int)
(declare-fun x1534 () Int)
(declare-fun x1383 () Int)
(declare-fun x564 () Int)
(declare-fun x71 () Int)
(declare-fun x1531 () Int)
(declare-fun x1391 () Int)
(declare-fun x1453 () Int)
(declare-fun x1194 () Bool)
(declare-fun x591 () Int)
(declare-fun x1420 () Int)
(declare-fun x700 () Int)
(declare-fun x1101 () Bool)
(declare-fun x302 () Int)
(declare-fun x774 () Int)
(declare-fun x723 () Int)
(declare-fun x1204 () Int)
(declare-fun x273 () Int)
(declare-fun x167 () Int)
(declare-fun x948 () Int)
(declare-fun x596 () Int)
(declare-fun x276 (Int) Int)
(declare-fun x826 () Int)
(declare-fun x196 () Int)
(declare-fun x1418 () Int)
(declare-fun x483 () Int)
(declare-fun x844 () Int)
(declare-fun x643 () Int)
(declare-fun x1507 () Int)
(declare-fun x344 () Int)
(declare-fun x909 () Int)
(declare-fun x351 () Int)
(declare-fun x217 () Int)
(declare-fun x834 () Int)
(declare-fun x406 () Bool)
(declare-fun x46 () Int)
(declare-fun x435 () Int)
(declare-fun x173 () Int)
(declare-fun x629 () Int)
(declare-fun x1525 () Int)
(declare-fun x900 () Int)
(declare-fun x577 () Int)
(declare-fun x904 () Int)
(declare-fun x7 () Int)
(declare-fun x1485 () Int)
(declare-fun x264 () Int)
(declare-fun x91 (Int Int) Int)
(declare-fun x280 () Int)
(declare-fun x1020 () Int)
(declare-fun x379 () Int)
(declare-fun x481 () Int)
(declare-fun x305 () Int)
(declare-fun x205 () Int)
(declare-fun x64 () Int)
(declare-fun x1083 () Int)
(declare-fun x512 () Int)
(declare-fun x1487 () Int)
(declare-fun x626 () Int)
(declare-fun x19 () Int)
(declare-fun x793 () Int)
(declare-fun x1088 () Int)
(declare-fun x1328 () Int)
(declare-fun x825 () Int)
(declare-fun x949 () Int)
(declare-fun x328 () Int)
(declare-fun x1272 () Int)
(declare-fun x1436 () Int)
(declare-fun x574 () Bool)
(declare-fun x1337 () Int)
(declare-fun x1490 () Int)
(declare-fun x1397 (Int) Int)
(declare-fun x390 () Int)
(declare-fun x520 () Bool)
(declare-fun x279 () Bool)
(declare-fun x98 () Int)
(declare-fun x1284 () Bool)
(declare-fun x461 () Int)
(declare-fun x1152 () Int)
(declare-fun x517 () Bool)
(declare-fun x727 () Int)
(declare-fun x333 () Int)
(declare-fun x126 () Int)
(declare-fun x326 () Int)
(declare-fun x666 () Int)
(declare-fun x238 () Int)
(declare-fun x1318 () Int)
(declare-fun x1207 () Int)
(declare-fun x1494 () Int)
(declare-fun x93 () Int)
(declare-fun x108 () Int)
(declare-fun x1307 () Int)
(declare-fun x381 () Int)
(declare-fun x1149 () Int)
(declare-fun x1183 () Int)
(declare-fun x316 () Int)
(declare-fun x884 () Int)
(declare-fun x554 () Int)
(declare-fun x1462 () Int)
(declare-fun x1401 () Int)
(declare-fun x802 () Int)
(declare-fun x63 (Int Int Int Int) Int)
(declare-fun x777 () Int)
(declare-fun x1047 () Int)
(declare-fun x198 () Int)
(declare-fun x335 () Int)
(declare-fun x433 () Int)
(declare-fun x797 () Int)
(declare-fun x438 () Bool)
(declare-fun x570 () Int)
(declare-fun x113 () Int)
(declare-fun x1155 () Int)
(declare-fun x953 () Bool)
(declare-fun x1304 () Int)
(declare-fun x508 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x699 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1081 () Int)
(declare-fun x440 () Int)
(declare-fun x86 () Int)
(declare-fun x886 () Int)
(declare-fun x1404 () Int)
(declare-fun x1528 () Int)
(declare-fun x1290 () Int)
(declare-fun x352 () Int)
(declare-fun x835 () Int)
(declare-fun x656 () Int)
(declare-fun x1511 (Int) Int)
(declare-fun x1354 () Int)
(declare-fun x134 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1417 () Int)
(declare-fun x775 () Bool)
(declare-fun x816 () Bool)
(declare-fun x421 () Int)
(declare-fun x1270 () Int)
(declare-fun x472 (Int Int Int Int Int Int Int) Int)
(declare-fun x1223 () Int)
(declare-fun x558 () Bool)
(declare-fun x434 () Int)
(declare-fun x362 () Int)
(declare-fun x627 () Int)
(declare-fun x1005 () Int)
(declare-fun x1039 () Int)
(declare-fun x1310 () Int)
(declare-fun x148 () Bool)
(declare-fun x782 () Int)
(declare-fun x1117 () Int)
(declare-fun x27 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x903 () Int)
(declare-fun x389 () Int)
(declare-fun x192 () Int)
(declare-fun x702 () Int)
(declare-fun x724 () Int)
(declare-fun x1140 () Int)
(declare-fun x760 () Int)
(declare-fun x1004 () Int)
(declare-fun x1044 () Int)
(declare-fun x599 () Int)
(declare-fun x714 () Int)
(declare-fun x1473 () Int)
(declare-fun x1293 () Int)
(declare-fun x493 () Int)
(declare-fun x507 () Bool)
(declare-fun x1104 () Int)
(declare-fun x320 () Int)
(declare-fun x8 () Int)
(declare-fun x1496 () Int)
(declare-fun x75 () Int)
(declare-fun x1178 () Int)
(declare-fun x143 () Int)
(declare-fun x521 () Int)
(declare-fun x223 () Int)
(declare-fun x561 () Int)
(declare-fun x1092 () Int)
(declare-fun x475 () Int)
(declare-fun x709 () Int)
(declare-fun x717 () Int)
(declare-fun x582 () Int)
(declare-fun x935 () Int)
(declare-fun x353 () Int)
(declare-fun x293 () Int)
(declare-fun x593 () Int)
(declare-fun x754 () Int)
(declare-fun x87 () Int)
(declare-fun x60 () Int)
(declare-fun x881 () Int)
(declare-fun x539 () Int)
(declare-fun x1053 () Int)
(declare-fun x246 () Int)
(declare-fun x1426 () Int)
(declare-fun x240 () Int)
(declare-fun x403 () Bool)
(declare-fun x985 () Int)
(declare-fun x1070 () Bool)
(declare-fun x129 () Int)
(declare-fun x746 () Int)
(declare-fun x1413 () Int)
(declare-fun x1277 () Int)
(declare-fun x53 () Int)
(declare-fun x409 () Int)
(declare-fun x836 () Int)
(declare-fun x1532 () Int)
(declare-fun x410 () Int)
(declare-fun x913 () Int)
(declare-fun x787 () Bool)
(declare-fun x285 () Int)
(declare-fun x452 () Bool)
(declare-fun x1093 () Int)
(declare-fun x26 () Int)
(declare-fun x138 () Int)
(declare-fun x247 () Int)
(declare-fun x255 () Int)
(declare-fun x139 () Bool)
(declare-fun x349 () Int)
(declare-fun x1505 () Int)
(declare-fun x864 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1215 () Int)
(declare-fun x387 () Int)
(declare-fun x1089 () Int)
(declare-fun x592 () Int)
(declare-fun x463 () Int)
(declare-fun x1479 () Int)
(declare-fun x1510 () Int)
(declare-fun x670 () Int)
(declare-fun x831 () Int)
(declare-fun x923 () Int)
(declare-fun x1136 () Int)
(declare-fun x230 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1174 () Int)
(declare-fun x1054 () Int)
(declare-fun x1327 () Int)
(declare-fun x890 () Int)
(declare-fun x1474 () Int)
(declare-fun x498 () Int)
(declare-fun x549 () Int)
(declare-fun x969 () Int)
(declare-fun x442 () Int)
(declare-fun x181 () Int)
(declare-fun x1252 (Int) Int)
(declare-fun x1489 () Int)
(declare-fun x1100 () Int)
(declare-fun x80 () Int)
(declare-fun x963 () Int)
(declare-fun x32 () Int)
(declare-fun x1026 () Int)
(declare-fun x908 () Int)
(declare-fun x991 () Int)
(declare-fun x1203 () Int)
(declare-fun x1364 () Int)
(declare-fun x1316 () Int)
(declare-fun x1265 (Int) Int)
(declare-fun x798 () Int)
(declare-fun x164 () Int)
(declare-fun x1120 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1470 () Int)
(declare-fun x790 () Int)
(declare-fun x1179 () Int)
(declare-fun x1138 () Int)
(declare-fun x981 () Int)
(declare-fun x133 () Int)
(declare-fun x540 () Int)
(declare-fun x105 () Int)
(declare-fun x1073 () Int)
(declare-fun x1325 () Int)
(declare-fun x1064 () Int)
(declare-fun x97 () Int)
(declare-fun x78 () Int)
(declare-fun x275 () Int)
(declare-fun x244 () Int)
(declare-fun x407 () Int)
(declare-fun x940 () Int)
(declare-fun x1506 (Int Int Int Int Int Int) Int)
(declare-fun x537 () Bool)
(declare-fun x743 () Int)
(declare-fun x310 () Int)
(declare-fun x55 () Int)
(declare-fun x722 () Int)
(declare-fun x102 () Bool)
(declare-fun x748 () Int)
(declare-fun x1463 () Bool)
(declare-fun x860 () Int)
(declare-fun x268 () Int)
(declare-fun x357 () Int)
(declare-fun x1297 () Int)
(declare-fun x1112 () Bool)
(declare-fun x174 () Int)
(declare-fun x647 () Int)
(declare-fun x425 () Int)
(declare-fun x811 () Bool)
(declare-fun x603 () Int)
(declare-fun x796 () Int)
(declare-fun x397 () Int)
(declare-fun x179 () Int)
(declare-fun x1246 () Int)
(declare-fun x1320 () Bool)
(declare-fun x712 () Int)
(declare-fun x1476 () Int)
(declare-fun x1033 () Int)
(declare-fun x810 () Int)
(declare-fun x1374 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x821 () Int)
(declare-fun x304 () Int)
(declare-fun x824 () Int)
(declare-fun x1056 () Int)
(declare-fun x658 () Int)
(declare-fun x140 () Int)
(declare-fun x422 () Int)
(declare-fun x1520 () Int)
(declare-fun x732 () Int)
(declare-fun x85 () Int)
(declare-fun x1171 () Int)
(declare-fun x1501 () Int)
(declare-fun x701 () Bool)
(declare-fun x339 () Int)
(declare-fun x197 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x334 () Int)
(declare-fun x1206 () Int)
(declare-fun x744 (Int) Int)
(declare-fun x855 () Int)
(declare-fun x528 () Int)
(declare-fun x632 () Int)
(declare-fun x735 () Bool)
(declare-fun x1314 () Int)
(declare-fun x449 () Int)
(declare-fun x892 () Int)
(declare-fun x378 () Int)
(declare-fun x758 () Int)
(declare-fun x1295 () Bool)
(declare-fun x607 () Int)
(declare-fun x1132 () Int)
(declare-fun x496 () Int)
(declare-fun x595 (Int) Int)
(declare-fun x1415 () Bool)
(declare-fun x905 () Int)
(declare-fun x1216 () Int)
(declare-fun x1414 () Int)
(declare-fun x417 () Int)
(declare-fun x469 () Int)
(declare-fun x1077 () Int)
(declare-fun x779 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1526 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1133 () Int)
(declare-fun x329 () Int)
(declare-fun x296 () Int)
(declare-fun x487 (Int Int) Int)
(declare-fun x1373 () Int)
(declare-fun x818 () Int)
(declare-fun x1346 () Int)
(declare-fun x987 () Int)
(declare-fun x1301 () Int)
(declare-fun x1103 () Int)
(declare-fun x376 () Int)
(declare-fun x37 () Int)
(declare-fun x1445 () Int)
(declare-fun x1116 () Bool)
(declare-fun x309 () Bool)
(declare-fun x1159 (Int) Int)
(declare-fun x828 (Int) Int)
(declare-fun x1135 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x216 () Int)
(declare-fun x443 () Int)
(declare-fun x1492 () Int)
(declare-fun x621 () Int)
(declare-fun x650 () Int)
(declare-fun x1002 () Int)
(declare-fun x733 () Int)
(declare-fun x588 () Bool)
(declare-fun x601 () Bool)
(declare-fun x876 () Int)
(declare-fun x933 () Int)
(declare-fun x911 () Int)
(declare-fun x635 () Int)
(declare-fun x636 () Int)
(declare-fun x510 () Int)
(declare-fun x509 () Int)
(declare-fun x861 () Int)
(declare-fun x1323 () Int)
(declare-fun x1308 () Bool)
(declare-fun x690 (Int) Int)
(declare-fun x1355 () Int)
(declare-fun x66 () Int)
(declare-fun x1446 () Int)
(declare-fun x921 () Int)
(declare-fun x337 () Int)
(declare-fun x501 () Bool)
(declare-fun x1279 () Int)
(declare-fun x189 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x392 () Int)
(declare-fun x1105 () Int)
(declare-fun x875 () Int)
(declare-fun x792 () Int)
(declare-fun x682 () Int)
(declare-fun x278 () Int)
(declare-fun x843 () Bool)
(declare-fun x450 () Int)
(declare-fun x254 () Bool)
(declare-fun x130 () Int)
(declare-fun x1266 () Int)
(declare-fun x1302 () Int)
(declare-fun x1536 () Bool)
(declare-fun x1208 () Int)
(declare-fun x11 () Bool)
(declare-fun x536 () Int)
(declare-fun x1249 () Int)
(declare-fun x350 () Int)
(declare-fun x491 () Int)
(declare-fun x780 () Int)
(declare-fun x1059 () Int)
(declare-fun x745 () Int)
(declare-fun x1471 (Int Int Int Int Int) Int)
(declare-fun x801 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1158 () Int)
(declare-fun x1429 () Int)
(declare-fun x81 () Bool)
(declare-fun x1409 () Int)
(declare-fun x548 () Int)
(declare-fun x1431 () Int)
(declare-fun x1247 () Int)
(declare-fun x1267 () Bool)
(declare-fun x465 () Int)
(declare-fun x584 () Int)
(declare-fun x1389 () Int)
(declare-fun x386 () Int)
(declare-fun x332 () Int)
(declare-fun x505 () Int)
(declare-fun x769 () Int)
(declare-fun x813 () Int)
(declare-fun x265 () Int)
(declare-fun x663 () Int)
(declare-fun x941 () Int)
(declare-fun x615 () Int)
(declare-fun x96 (Int Int) Int)
(declare-fun x124 () Int)
(declare-fun x453 () Int)
(declare-fun x1238 () Int)
(declare-fun x808 () Int)
(declare-fun x684 () Int)
(declare-fun x116 () Int)
(declare-fun x524 () Bool)
(declare-fun x840 () Bool)
(declare-fun x22 () Int)
(declare-fun x251 () Int)
(declare-fun x652 () Int)
(declare-fun x58 () Bool)
(declare-fun x297 () Int)
(declare-fun x578 () Int)
(declare-fun x178 () Int)
(declare-fun x1419 () Int)
(declare-fun x211 () Bool)
(declare-fun x1234 () Int)
(declare-fun x848 () Int)
(declare-fun x729 () Int)
(declare-fun x759 () Int)
(declare-fun x373 () Int)
(declare-fun x367 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x936 () Int)
(declare-fun x1230 () Int)
(declare-fun x946 () Int)
(declare-fun x954 () Int)
(declare-fun x625 () Int)
(declare-fun x18 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1447 () Int)
(declare-fun x454 () Int)
(declare-fun x708 () Int)
(declare-fun x424 () Int)
(declare-fun x1499 () Int)
(declare-fun x208 () Int)
(declare-fun x1182 () Int)
(declare-fun x785 () Int)
(declare-fun x1258 () Int)
(declare-fun x1477 () Int)
(declare-fun x25 () Int)
(declare-fun x190 () Int)
(declare-fun x470 () Bool)
(declare-fun x1381 () Int)
(declare-fun x902 () Bool)
(declare-fun x1399 () Int)
(declare-fun x535 () Int)
(declare-fun x1356 () Int)
(declare-fun x277 () Int)
(declare-fun x1366 () Int)
(declare-fun x456 () Int)
(declare-fun x301 () Int)
(declare-fun x1176 () Int)
(declare-fun x1500 () Int)
(declare-fun x867 () Bool)
(declare-fun x686 () Bool)
(declare-fun x408 () Int)
(declare-fun x92 () Bool)
(declare-fun x330 () Int)
(declare-fun x54 () Int)
(declare-fun x895 (Int) Int)
(declare-fun x977 () Int)
(declare-fun x79 () Int)
(declare-fun x912 () Int)
(declare-fun x1274 () Bool)
(declare-fun x163 () Int)
(declare-fun x338 (Int) Int)
(declare-fun x458 () Int)
(declare-fun x101 () Bool)
(declare-fun x415 () Int)
(declare-fun x753 () Int)
(declare-fun x667 () Int)
(declare-fun x1437 () Int)
(declare-fun x1154 () Int)
(declare-fun x642 () Int)
(declare-fun x484 () Int)
(declare-fun x388 () Int)
(declare-fun x1384 () Int)
(declare-fun x869 () Int)
(declare-fun x1317 () Int)
(declare-fun x939 () Int)
(declare-fun x1038 (Int) Int)
(declare-fun x437 () Int)
(declare-fun x281 () Int)
(declare-fun x1200 () Int)
(declare-fun x33 () Int)
(declare-fun x1367 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1524 () Int)
(declare-fun x756 () Int)
(declare-fun x23 () Int)
(declare-fun x665 () Int)
(declare-fun x1156 () Int)
(declare-fun x1172 () Bool)
(declare-fun x489 () Int)
(declare-fun x441 () Int)
(declare-fun x195 () Int)
(declare-fun x527 () Int)
(declare-fun x236 () Int)
(declare-fun x1342 () Int)
(declare-fun x1309 () Int)
(declare-fun x284 () Int)
(declare-fun x1165 () Int)
(declare-fun x336 () Int)
(declare-fun x1143 () Int)
(declare-fun x1427 () Int)
(declare-fun x3 () Int)
(declare-fun x427 () Int)
(declare-fun x21 () Int)
(declare-fun x795 () Int)
(declare-fun x107 () Int)
(declare-fun x695 () Int)
(declare-fun x165 () Int)
(declare-fun x678 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x806 () Int)
(declare-fun x1137 () Int)
(declare-fun x1065 () Int)
(declare-fun x35 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x781 () Int)
(declare-fun x1481 () Int)
(declare-fun x485 () Int)
(declare-fun x194 () Int)
(declare-fun x674 () Int)
(declare-fun x1121 () Int)
(declare-fun x1300 () Int)
(declare-fun x227 (Int) Int)
(declare-fun x519 () Int)
(declare-fun x82 () Int)
(declare-fun x877 () Int)
(declare-fun x531 () Int)
(declare-fun x1448 () Int)
(declare-fun x640 () Bool)
(declare-fun x61 () Int)
(declare-fun x766 () Int)
(declare-fun x691 () Int)
(declare-fun x1193 () Int)
(declare-fun x1262 (Int) Int)
(declare-fun x1212 () Int)
(declare-fun x377 () Int)
(declare-fun x62 () Int)
(declare-fun x65 () Int)
(declare-fun x146 () Int)
(declare-fun x156 () Int)
(declare-fun x83 (Int) Int)
(declare-fun x103 () Int)
(declare-fun x1387 () Int)
(declare-fun x575 () Int)
(declare-fun x270 () Int)
(declare-fun x957 () Int)
(declare-fun x646 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x303 () Int)
(declare-fun x282 () Int)
(declare-fun x925 () Int)
(declare-fun x968 (Int) Int)
(declare-fun x809 () Int)
(declare-fun x199 () Bool)
(declare-fun x978 () Int)
(declare-fun x56 () Int)
(declare-fun x401 () Int)
(declare-fun x845 () Int)
(declare-fun x1063 () Bool)
(declare-fun x771 () Int)
(declare-fun x1076 () Int)
(declare-fun x5 () Int)
(declare-fun x1255 () Int)
(declare-fun x394 () Int)
(declare-fun x252 () Int)
(declare-fun x602 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x1008 () Int)
(declare-fun x657 () Int)
(declare-fun x1024 () Int)
(declare-fun x1046 () Int)
(declare-fun x738 () Int)
(declare-fun x1484 () Bool)
(declare-fun x1139 () Int)
(declare-fun x557 () Int)
(declare-fun x122 () Int)
(declare-fun x369 () Int)
(declare-fun x42 () Int)
(declare-fun x398 () Int)
(declare-fun x1115 () Int)
(declare-fun x323 () Bool)
(declare-fun x972 () Int)
(declare-fun x1130 () Int)
(declare-fun x356 () Int)
(declare-fun x393 () Int)
(declare-fun x1512 () Int)
(declare-fun x1197 () Int)
(declare-fun x654 () Int)
(declare-fun x1467 () Bool)
(declare-fun x768 () Int)
(declare-fun x1513 () Int)
(declare-fun x1199 () Int)
(declare-fun x928 () Int)
(declare-fun x307 () Int)
(declare-fun x416 () Int)
(declare-fun x94 () Int)
(declare-fun x436 () Int)
(declare-fun x932 () Int)
(declare-fun x372 () Bool)
(declare-fun x1348 () Int)
(declare-fun x1288 () Int)
(declare-fun x693 () Int)
(declare-fun x1049 () Int)
(declare-fun x161 () Int)
(declare-fun x2 () Int)
(declare-fun x364 () Int)
(declare-fun x1478 () Int)
(declare-fun x1096 () Bool)
(declare-fun x228 () Int)
(declare-fun x1032 () Int)
(declare-fun x1482 () Int)
(declare-fun x854 () Int)
(declare-fun x857 () Bool)
(declare-fun x767 () Int)
(declare-fun x1299 () Int)
(declare-fun x609 () Bool)
(declare-fun x466 () Bool)
(declare-fun x206 () Int)
(declare-fun x89 () Int)
(declare-fun x1141 () Int)
(declare-fun x399 () Int)
(declare-fun x803 () Int)
(declare-fun x471 () Int)
(declare-fun x1248 () Int)
(declare-fun x783 () Int)
(declare-fun x1190 () Int)
(declare-fun x544 () Int)
(declare-fun x1118 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1283 () Int)
(declare-fun x478 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x474 () Int)
(declare-fun x1502 () Int)
(declare-fun x171 () Bool)
(declare-fun x495 () Int)
(declare-fun x76 () Int)
(declare-fun x942 () Int)
(declare-fun x671 () Int)
(declare-fun x1029 () Int)
(declare-fun x131 () Int)
(declare-fun x529 () Int)
(declare-fun x360 () Int)
(declare-fun x214 () Int)
(declare-fun x100 () Int)
(declare-fun x1175 () Int)
(declare-fun x239 () Bool)
(declare-fun x989 () Bool)
(declare-fun x692 () Int)
(declare-fun x1111 () Int)
(declare-fun x286 () Int)
(declare-fun x473 () Int)
(declare-fun x862 () Int)
(declare-fun x231 () Int)
(declare-fun x1289 () Int)
(declare-fun x70 () Int)
(declare-fun x888 () Int)
(declare-fun x207 () Int)
(declare-fun x311 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1147 () Int)
(declare-fun x218 () Int)
(declare-fun x1458 () Int)
(declare-fun x984 () Int)
(declare-fun x600 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1291 () Int)
(declare-fun x1282 () Int)
(declare-fun x229 () Int)
(declare-fun x874 () Int)
(declare-fun x1312 () Int)
(declare-fun x961 () Int)
(declare-fun x1087 () Int)
(declare-fun x685 () Int)
(declare-fun x322 () Int)
(declare-fun x1406 () Int)
(declare-fun x125 () Int)
(declare-fun x144 () Int)
(declare-fun x1000 () Int)
(declare-fun x1379 () Bool)
(declare-fun x587 () Int)
(declare-fun x598 () Int)
(declare-fun x59 () Int)
(declare-fun x1456 () Int)
(declare-fun x999 () Bool)
(declare-fun x613 () Int)
(declare-fun x423 () Bool)
(declare-fun x1455 () Int)
(declare-fun x120 () Int)
(declare-fun x1292 () Int)
(declare-fun x396 () Int)
(declare-fun x1493 () Int)
(declare-fun x157 () Int)
(declare-fun x209 (Int Int) Int)
(declare-fun x718 () Int)
(declare-fun x432 () Bool)
(declare-fun x1530 () Int)
(declare-fun x414 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x74 () Int)
(declare-fun x204 () Int)
(declare-fun x1019 (Int) Int)
(declare-fun x346 () Int)
(declare-fun x631 () Int)
(declare-fun x1243 () Int)
(declare-fun x1349 () Int)
(declare-fun x639 () Int)
(declare-fun x974 () Bool)
(declare-fun x765 () Int)
(declare-fun x1191 () Int)
(declare-fun x576 () Int)
(declare-fun x648 () Int)
(declare-fun x705 () Int)
(declare-fun x681 () Int)
(declare-fun x1344 () Int)
(declare-fun x1213 () Int)
(declare-fun x1425 () Int)
(declare-fun x1048 () Int)
(declare-fun x153 () Int)
(declare-fun x553 () Bool)
(declare-fun x581 () Int)
(declare-fun x986 () Int)
(declare-fun x523 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1218 () Int)
(declare-fun x391 () Int)
(declare-fun x14 () Bool)
(declare-fun x762 () Int)
(declare-fun x40 () Int)
(declare-fun x710 () Int)
(declare-fun x1007 () Bool)
(declare-fun x191 () Int)
(declare-fun x571 () Int)
(declare-fun x945 () Int)
(declare-fun x382 () Int)
(declare-fun x118 () Int)
(declare-fun x260 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x200 () Int)
(declare-fun x583 () Bool)
(declare-fun x546 () Int)
(declare-fun x400 () Bool)
(declare-fun x1273 () Int)
(declare-fun x1398 () Int)
(declare-fun x402 () Int)
(declare-fun x215 () Int)
(declare-fun x726 () Int)
(declare-fun x1202 () Int)
(declare-fun x914 () Int)
(declare-fun x1271 () Int)
(declare-fun x1326 () Int)
(declare-fun x550 () Int)
(declare-fun x445 () Int)
(declare-fun x1339 () Int)
(declare-fun x250 () Int)
(declare-fun x490 () Bool)
(declare-fun x725 () Int)
(declare-fun x849 () Int)
(declare-fun x1340 () Int)
(declare-fun x1313 () Int)
(declare-fun x532 () Int)
(declare-fun x12 () Bool)
(declare-fun x1037 () Int)
(declare-fun x804 () Int)
(declare-fun x997 () Int)
(declare-fun x95 () Int)
(declare-fun x1319 () Int)
(declare-fun x359 () Int)
(declare-fun x1231 () Int)
(declare-fun x1240 () Int)
(declare-fun x1377 () Int)
(declare-fun x1402 () Bool)
(declare-fun x739 () Int)
(declare-fun x960 () Bool)
(declare-fun x988 (Int) Int)
(declare-fun x1451 () Int)
(declare-fun x879 () Int)
(declare-fun x958 () Int)
(declare-fun x1498 () Int)
(declare-fun x315 () Int)
(declare-fun x283 () Bool)
(declare-fun x534 () Bool)
(declare-fun x142 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1161 () Int)
(declare-fun x976 () Int)
(declare-fun x687 () Int)
(declare-fun x187 () Int)
(declare-fun x556 () Bool)
(declare-fun x1052 () Int)
(declare-fun x419 () Int)
(declare-fun x1042 () Int)
(declare-fun x1285 () Int)
(declare-fun x752 () Int)
(declare-fun x611 () Bool)
(declare-fun x1516 () Int)
(declare-fun x552 () Int)
(declare-fun x901 () Int)
(declare-fun x662 () Int)
(declare-fun x1469 () Bool)
(declare-fun x807 () Int)
(declare-fun x457 () Int)
(declare-fun x1368 () Int)
(declare-fun x1219 () Bool)
(declare-fun x817 () Int)
(declare-fun x224 () Int)
(declare-fun x172 () Int)
(declare-fun x838 () Int)
(declare-fun x1438 () Int)
(declare-fun x413 (Int Int) Int)
(declare-fun x1196 () Int)
(declare-fun x778 () Int)
(declare-fun x514 () Bool)
(declare-fun x1226 () Int)
(declare-fun x242 () Bool)
(declare-fun x1221 () Int)
(declare-fun x651 () Int)
(declare-fun x973 () Int)
(declare-fun x1142 () Int)
(declare-fun x675 () Bool)
(declare-fun x1126 () Int)
(declare-fun x555 () Int)
(declare-fun x291 () Int)
(declare-fun x737 () Bool)
(declare-fun x776 () Int)
(declare-fun x891 () Int)
(declare-fun x506 (Int) Int)
(declare-fun x1261 () Bool)
(declare-fun x858 () Int)
(declare-fun x184 () Int)
(declare-fun x429 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x515 () Int)
(declare-fun x799 () Int)
(declare-fun x166 () Int)
(declare-fun x618 () Bool)
(declare-fun x374 () Int)
(declare-fun x1188 () Int)
(declare-fun x830 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1169 () Int)
(declare-fun x235 () Int)
(declare-fun x431 () Int)
(declare-fun x786 () Int)
(declare-fun x1011 () Int)
(declare-fun x1114 () Int)
(declare-fun x918 () Int)
(declare-fun x878 () Int)
(declare-fun x661 () Int)
(declare-fun x257 () Int)
(declare-fun x72 () Int)
(declare-fun x530 () Int)
(declare-fun x964 () Int)
(declare-fun x747 () Bool)
(declare-fun x1030 () Int)
(declare-fun x1160 () Int)
(declare-fun x1028 (Int Int) Int)
(declare-fun x1016 () Int)
(declare-fun x882 () Bool)
(declare-fun x866 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1250 () Int)
(declare-fun x931 () Int)
(declare-fun x1166 () Int)
(declare-fun x29 () Int)
(declare-fun x327 () Bool)
(declare-fun x757 () Int)
(declare-fun x1468 () Int)
(declare-fun x1035 () Int)
(declare-fun x569 () Int)
(declare-fun x841 () Int)
(declare-fun x343 () Int)
(declare-fun x917 () Int)
(declare-fun x820 () Int)
(declare-fun x1491 () Bool)
(declare-fun x77 () Bool)
(declare-fun x462 () Int)
(declare-fun x1122 () Int)
(declare-fun x492 () Int)
(declare-fun x460 () Int)
(declare-fun x1535 () Int)
(declare-fun x959 () Int)
(declare-fun x630 () Int)
(declare-fun x1075 () Int)
(declare-fun x1509 () Int)
(declare-fun x750 () Int)
(declare-fun x1124 () Int)
(declare-fun x1067 (Int) Int)
(declare-fun x287 () Int)
(declare-fun x1069 () Int)
(declare-fun x170 () Int)
(declare-fun x1074 () Int)
(declare-fun x763 () Int)
(declare-fun x292 () Int)
(declare-fun x511 () Int)
(declare-fun x716 () Int)
(declare-fun x1382 () Bool)
(declare-fun x871 () Int)
(declare-fun x887 () Int)
(declare-fun x1050 () Int)
(declare-fun x1268 () Bool)
(declare-fun x1423 () Int)
(declare-fun x585 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x180 () Int)
(declare-fun x1394 () Int)
(declare-fun x794 () Int)
(declare-fun x1131 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1330 () Int)
(declare-fun x368 () Int)
(declare-fun x121 () Int)
(declare-fun x694 () Int)
(declare-fun x1253 () Int)
(declare-fun x36 () Int)
(declare-fun x526 () Int)
(declare-fun x1022 () Int)
(declare-fun x294 () Int)
(declare-fun x962 () Int)
(declare-fun x637 () Int)
(declare-fun x930 () Bool)
(declare-fun x851 () Int)
(declare-fun x150 () Int)
(declare-fun x789 () Int)
(declare-fun x742 () Bool)
(declare-fun x955 () Int)
(declare-fun x720 () Int)
(declare-fun x846 () Int)
(declare-fun x655 () Int)
(declare-fun x1518 () Bool)
(declare-fun x623 () Bool)
(declare-fun x17 () Int)
(declare-fun x28 () Int)
(declare-fun x773 () Int)
(declare-fun x1338 () Int)
(declare-fun x342 () Int)
(declare-fun x1457 () Int)
(declare-fun x1350 () Int)
(declare-fun x870 () Int)
(declare-fun x363 () Int)
(declare-fun x203 () Int)
(declare-fun x1125 () Bool)
(declare-fun x791 () Int)
(declare-fun x261 () Int)
(declare-fun x852 () Int)
(declare-fun x740 () Int)
(declare-fun x614 () Bool)
(declare-fun x764 () Int)
(declare-fun x1306 () Int)
(declare-fun x668 () Int)
(declare-fun x1483 () Int)
(declare-fun x210 () Int)
(declare-fun x488 () Int)
(declare-fun x1066 () Int)
(declare-fun x366 (Int) Int)
(declare-fun x566 () Int)
(declare-fun x272 () Int)
(declare-fun x176 () Int)
(declare-fun x1523 () Int)
(declare-fun x503 () Int)
(declare-fun x1036 () Int)
(declare-fun x1148 () Int)
(declare-fun x899 () Int)
(declare-fun x970 () Int)
(declare-fun x971 () Int)
(declare-fun x1276 () Int)
(declare-fun x1450 () Int)
(declare-fun x313 () Int)
(declare-fun x998 () Int)
(declare-fun x559 () Int)
(declare-fun x20 () Int)
(declare-fun x1 () Bool)
(declare-fun x1388 () Int)
(declare-fun x109 () Int)
(declare-fun x522 () Bool)
(declare-fun x168 () Int)
(declare-fun x1422 () Int)
(declare-fun x267 () Int)
(declare-fun x1239 () Int)
(declare-fun x158 () Int)
(declare-fun x1421 () Int)
(declare-fun x1031 () Int)
(declare-fun x185 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x384 () Int)
(declare-fun x420 () Int)
(declare-fun x1251 () Int)
(declare-fun x1211 () Int)
(declare-fun x249 () Int)
(declare-fun x1466 () Int)
(declare-fun x288 () Int)
(declare-fun x380 () Int)
(declare-fun x677 () Int)
(declare-fun x880 () Int)
(declare-fun x713 () Int)
(declare-fun x819 () Int)
(declare-fun x612 () Int)
(declare-fun x1057 () Bool)
(declare-fun x504 () Int)
(declare-fun x1085 () Int)
(declare-fun x1023 () Int)
(declare-fun x638 () Int)
(declare-fun x1040 () Bool)
(declare-fun x39 () Int)
(declare-fun x719 () Int)
(declare-fun x1151 () Bool)
(declare-fun x547 () Bool)
(declare-fun x1403 () Int)
(declare-fun x653 () Int)
(declare-fun x1480 () Int)
(declare-fun x385 () Bool)
(declare-fun x889 () Int)
(declare-fun x1305 () Int)
(declare-fun x446 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1084 () Int)
(declare-fun x567 () Int)
(declare-fun x1192 () Int)
(declare-fun x289 () Int)
(declare-fun x314 () Int)
(declare-fun x1017 () Int)
(declare-fun x1412 () Int)
(declare-fun x965 () Int)
(declare-fun x800 () Int)
(declare-fun x1519 () Int)
(declare-fun x47 () Int)
(declare-fun x513 () Int)
(declare-fun x1041 () Int)
(declare-fun x67 () Int)
(declare-fun x1254 () Int)
(declare-fun x1369 () Bool)
(declare-fun x145 () Bool)
(declare-fun x563 () Int)
(declare-fun x634 () Int)
(declare-fun x929 () Int)
(declare-fun x467 () Bool)
(declare-fun x1144 () Int)
(declare-fun x696 () Int)
(declare-fun x608 () Int)
(declare-fun x543 () Bool)
(declare-fun x1236 () Int)
(declare-fun x43 () Int)
(declare-fun x24 () Int)
(declare-fun x1189 () Bool)
(declare-fun x221 () Int)
(declare-fun x579 () Int)
(declare-fun x1245 () Int)
(declare-fun x233 () Bool)
(declare-fun x896 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1405 () Int)
(declare-fun x814 (Int Int) Int)
(declare-fun x761 () Int)
(declare-fun x885 () Int)
(declare-fun x237 () Int)
(declare-fun x551 () Int)
(declare-fun x1296 () Int)
(declare-fun x728 () Bool)
(declare-fun x898 () Int)
(declare-fun x822 () Int)
(declare-fun x1150 () Int)
(declare-fun x1371 () Int)
(declare-fun x30 () Int)
(declare-fun x956 () Int)
(declare-fun x1257 () Int)
(declare-fun x68 () Int)
(declare-fun x162 () Bool)
(declare-fun x347 () Int)
(declare-fun x418 () Bool)
(declare-fun x1475 () Int)
(declare-fun x1362 () Int)
(declare-fun x688 () Int)
(declare-fun x1359 () Int)
(declare-fun x1428 () Int)
(declare-fun x128 () Int)
(declare-fun x448 () Int)
(declare-fun x619 () Int)
(declare-fun x290 () Int)
(declare-fun x730 () Int)
(declare-fun x944 () Int)
(declare-fun x1233 () Int)
(declare-fun x1068 () Int)
(declare-fun x698 () Int)
(declare-fun x15 () Bool)
(declare-fun x1347 () Int)
(declare-fun x644 () Int)
(declare-fun x1119 () Int)
(declare-fun x404 () Int)
(declare-fun x1186 () Bool)
(declare-fun x147 () Int)
(declare-fun x865 (Int) Int)
(declare-fun x664 () Int)
(declare-fun x263 () Int)
(declare-fun x1335 () Bool)
(declare-fun x915 () Int)
(declare-fun x1357 () Int)
(declare-fun x502 () Int)
(declare-fun x497 () Int)
(declare-fun x1167 () Int)
(declare-fun x1177 () Int)
(declare-fun x1184 () Int)
(declare-fun x641 () Int)
(declare-fun x1228 () Int)
(declare-fun x1286 () Bool)
(declare-fun x707 () Int)
(declare-fun x1198 (Int) Int)
(declare-fun x590 () Bool)
(declare-fun x1185 () Int)
(declare-fun x486 () Int)
(declare-fun x1162 () Int)
(declare-fun x1287 () Int)
(declare-fun x916 () Int)
(declare-fun x967 () Int)
(declare-fun x703 () Bool)
(declare-fun x213 () Int)
(declare-fun x355 () Int)
(declare-fun x365 () Int)
(declare-fun x132 () Int)
(declare-fun x480 (Int Int Int Int) Int)
(declare-fun x952 () Int)
(declare-fun x371 () Int)
(declare-fun x1452 (Int Int Int) Int)
(declare-fun x115 () Int)
(declare-fun x245 () Int)
(declare-fun x721 (Int) Bool)
(declare-fun x1517 () Bool)
(declare-fun x321 () Int)
(declare-fun x1006 () Int)
(declare-fun x256 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x9 () Int)
(declare-fun x1351 () Int)
(declare-fun x395 () Int)
(declare-fun x850 () Int)
(declare-fun x1442 () Int)
(declare-fun x266 () Int)
(declare-fun x154 () Int)
(declare-fun x812 () Int)
(declare-fun x562 () Int)
(declare-fun x1164 () Int)
(declare-fun x873 () Int)
(declare-fun x295 () Int)
(declare-fun x679 () Int)
(declare-fun x565 () Bool)
(declare-fun x99 () Int)
(declare-fun x1497 () Int)
(declare-fun x41 () Int)
(declare-fun x44 () Int)
(declare-fun x1408 () Int)
(declare-fun x1393 () Int)
(declare-fun x183 () Int)
(declare-fun x994 () Bool)
(declare-fun x660 () Bool)
(declare-fun x856 () Int)
(declare-fun x541 () Int)
(declare-fun x345 (Int) Int)
(declare-fun x220 () Int)
(declare-fun x149 () Int)
(declare-fun x1395 () Int)
(declare-fun x1242 () Int)
(declare-fun x1435 () Bool)
(declare-fun x1334 () Int)
(declare-fun x135 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x827 () Int)
(declare-fun x299 () Int)
(declare-fun x312 () Int)
(declare-fun x90 () Int)
(declare-fun x1078 () Int)
(declare-fun x225 () Int)
(declare-fun x1220 () Bool)
(declare-fun x1264 () Int)
(declare-fun x160 () Int)
(declare-fun x73 () Int)
(declare-fun x1018 () Int)
(declare-fun x1352 () Int)
(declare-fun x927 () Int)
(declare-fun x331 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1345 () Int)
(declare-fun x1043 () Int)
(declare-fun x1278 () Bool)
(declare-fun x995 () Int)
(declare-fun x1205 () Int)
(declare-fun x201 () Int)
(declare-fun x45 () Int)
(declare-fun x1058 () Int)
(declare-fun x645 () Int)
(declare-fun x1298 () Int)
(declare-fun x186 () Int)
(declare-fun x815 () Int)
(declare-fun x934 () Int)
(declare-fun x1385 () Int)
(declare-fun x104 () Int)
(declare-fun x1256 () Bool)
(declare-fun x560 () Int)
(declare-fun x354 () Int)
(declare-fun x755 () Int)
(declare-fun x31 () Int)
(declare-fun x533 () Int)
(declare-fun x573 () Int)
(declare-fun x633 () Bool)
(declare-fun x605 () Bool)
(declare-fun x676 () Int)
(declare-fun x606 () Int)
(declare-fun x542 (Int) Int)
(declare-fun x975 () Bool)
(declare-fun x1527 () Int)
(declare-fun x241 () Int)
(define-fun x1061 ((x1195 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1195) (>= x1195 0)) x1195 (- x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1486 ((x1195 Int)) Int (ite (and (< x1195 0) (>= x1195 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1195))
(define-fun x1001 ((x1195 Int)) Int (ite (and (>= x1195 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1195)) x1195 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1195) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1195)) (- x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1195 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x1195 0)) (+ x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x487 x1195 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1522 ((x897 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897) (<= 0 x897)))
(define-fun x451 ((x897 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897) (>= x897 0)))
(define-fun x788 ((x897 Int) (x672 Int)) Bool (= (* x672 x897) (x96 x897 x672)))
(define-fun x1407 ((x897 Int) (x672 Int)) Bool (and (= (- (* (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) x897) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x96 x897 (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x897 (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x672 x897) (* x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) x672))))
(define-fun x1488 ((x897 Int) (x672 Int)) Bool (=> (and (< 0 x897) (< 0 x672)) (= (= x672 (x1028 (x1001 (x96 x897 x672)) x897)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x96 x897 x672)))))
(define-fun x784 ((x897 Int) (x672 Int)) Bool (=> (and (not (= x672 0)) (not (= 0 x897))) (and (= (x1028 (x96 x897 x672) x897) x672) (= (x1028 (x96 x897 x672) x672) x897))))
(define-fun x1094 ((x897 Int) (x672 Int)) Bool (=> (and (< 0 x672) (> x897 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x96 x897 x672)) (< (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897) x672))))
(define-fun x1235 ((x897 Int) (x672 Int)) Bool (and (= (x1001 (x96 x897 x672)) (x1001 (x96 x897 (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1001 (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) x672)) (x1001 (x96 x897 x672))) (= (x1001 (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1001 (x96 x897 x672)))))
(define-fun x123 ((x897 Int) (x672 Int)) Bool (and (=> (and (and (<= x672 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x672)) (and (> x897 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897))) (= (>= (x1028 57896044618658097711785492504343953926634992332820282019728792003956564819968 x672) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) x672)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x672)) (and (> x897 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897))) (= (<= (x96 (- x897 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x672)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x897)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672) (> x672 0)) (and (< 0 x897) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x897))) (= (>= (x1028 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672) x897) (<= (x96 x897 x672) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x672) (<= x672 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x897) (> x897 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x672) (x1028 57896044618658097711785492504343953926634992332820282019728792003956564819968 x897)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x96 x897 (- x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x1260 ((x897 Int) (x672 Int)) Bool (and (x788 x897 x672) (x123 x897 x672) (x784 x897 x672) (x1235 x897 x672) (x1407 x897 x672) (x1488 x897 x672) (x1094 x897 x672)))
(define-fun x248 ((x897 Int)) Bool (and (= 0 (x96 0 x897)) (= 0 (x96 x897 0))))
(define-fun x604 ((x897 Int)) Bool (and (= (x96 x897 1) x897) (= (x96 1 x897) x897)))
(define-fun x906 ((x897 Int)) Bool (and (x604 x897) (x248 x897)))
(define-fun x853 ((x897 Int)) Bool (and (= (x413 115792089237316195423570985008687907853269984665640564039457584007913129639935 x897) x897) (= x897 (x413 x897 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x715 ((x897 Int)) Bool (and (= 0 (x413 0 x897)) (= 0 (x413 x897 0))))
(define-fun x1225 ((x897 Int)) Bool (= x897 (x413 x897 x897)))
(define-fun x1390 ((x897 Int)) Bool (and (x853 x897) (x715 x897) (x1225 x897)))
(define-fun x1109 ((x897 Int) (x672 Int)) Bool (= (x413 x897 x672) (x413 x672 x897)))
(define-fun x689 ((x897 Int) (x672 Int)) Bool (and (=> (<= 0 x897) (>= x897 (x413 x897 x672))) (<= 0 (x413 x897 x672)) (=> (<= 0 x672) (>= x672 (x413 x897 x672)))))
(define-fun x119 ((x897 Int) (x672 Int)) Bool (and (x689 x897 x672) (x1109 x897 x672)))
(define-fun x1227 ((x897 Int)) Bool (= (x487 x897 1461501637330902918203684832716283019655932542976) (x413 x897 1461501637330902918203684832716283019655932542975)))
(define-fun x950 ((x897 Int)) Bool (and (x1227 x897) (x119 x897 1461501637330902918203684832716283019655932542975)))
(define-fun x370 ((x897 Int) (x672 Int)) Bool (and (> x672 (x487 x897 x672)) (>= (x487 x897 x672) 0)))
(define-fun x306 ((x897 Int) (x672 Int)) Bool (=> (and (<= 0 x897) (> x672 0)) (= (> x672 x897) (= (x487 x897 x672) x897))))
(define-fun x704 ((x897 Int) (x672 Int)) Bool (=> (and (and (>= x897 x672) (< x897 (+ x672 x672))) (< 0 x672)) (= (- x897 x672) (x487 x897 x672))))
(define-fun x51 ((x897 Int) (x672 Int)) Bool (=> (< 0 x672) (= x897 (+ (* x672 (x1028 x897 x672)) (x487 x897 x672)))))
(define-fun x1113 ((x897 Int) (x672 Int)) Bool (and (x370 x897 x672) (x51 x897 x672) (x704 x897 x672) (x306 x897 x672)))
(define-fun x383 ((x897 Int)) Bool (= (x487 0 x897) 0))
(define-fun x1372 ((x897 Int)) Bool (= 0 (x487 x897 1)))
(define-fun x1433 ((x897 Int)) Bool (= (x487 x897 x897) 0))
(define-fun x680 ((x897 Int)) Bool (and (x1372 x897) (x1433 x897) (x383 x897)))
(define-fun x375 ((x897 Int)) Bool (= (x1001 x897) (+ (x487 x897 32) (x413 x897 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x48 ((x897 Int)) Bool (and (x119 x897 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x375 x897)))
(define-fun x411 ((x897 Int) (x672 Int)) Bool (=> (and (< 0 x672) (< 0 x897)) (and (<= (x1028 x897 x672) x897) (<= 0 (x1028 x897 x672)))))
(define-fun x938 ((x897 Int) (x672 Int)) Bool (=> (and (and (>= x897 0) (< x897 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x672))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1028 x897 x672)) (>= (x1028 x897 x672) 0))))
(define-fun x152 ((x897 Int) (x672 Int)) Bool (=> (and (< x672 x897) (> x672 1)) (> x897 (x1028 x897 x672))))
(define-fun x405 ((x897 Int) (x672 Int)) Bool (=> (and (< 0 x672) (< 0 x897)) (= (> x672 x897) (= (x1028 x897 x672) 0))))
(define-fun x34 ((x897 Int) (x672 Int)) Bool (=> (and (> x672 0) (> x897 0)) (and (<= (* x672 (x1028 x897 x672)) x897) (< (- x897 x672) (* x672 (x1028 x897 x672))))))
(define-fun x673 ((x897 Int) (x672 Int)) Bool (= (- x897 (x413 (- x672 1) x897)) (* x672 (x1028 x897 x672))))
(define-fun x1129 ((x897 Int) (x672 Int)) Bool (and (x405 x897 x672) (x938 x897 x672) (x34 x897 x672) (x152 x897 x672) (x673 x897 x672) (x411 x897 x672)))
(define-fun x839 ((x897 Int)) Bool (= 0 (x1028 0 x897)))
(define-fun x1045 ((x897 Int)) Bool (= x897 (x1028 x897 1)))
(define-fun x1108 ((x897 Int)) Bool (=> (not (= x897 0)) (= (x1028 x897 x897) 1)))
(define-fun x586 ((x897 Int)) Bool (and (x839 x897) (x1045 x897) (x1108 x897)))
(define-fun x455 ((x159 Int)) Int (ite (> x1330 x159) (x338 x159) 0))
(define-fun x262 ((x159 Int)) Int 0)
(define-fun x222 ((x159 Int)) Int (x1019 x159))
(define-fun x1454 ((x159 Int)) Int (x276 x159))
(define-fun x1378 ((x159 Int)) Int (x744 x159))
(define-fun x1128 ((x159 Int)) Int (x506 x159))
(define-fun x842 ((x159 Int)) Int (x345 x159))
(define-fun x500 ((x159 Int)) Int 0)
(define-fun x1416 ((x159 Int)) Int (ite (= x1388 x159) x813 (x1038 x159)))
(define-fun x340 ((x159 Int)) Int (ite (= x1193 x159) x37 (x1416 x159)))
(define-fun x494 ((x159 Int)) Int 0)
(define-fun x69 ((x159 Int)) Int (ite (= x159 4) 32 (x494 x159)))
(define-fun x1472 ((x159 Int)) Int (ite (= x159 36) x1037 (x69 x159)))
(define-fun x610 ((x159 Int)) Int (ite (= x159 68) x1501 (x1472 x159)))
(define-fun x622 ((x159 Int)) Int (ite (= x159 100) x651 (x610 x159)))
(define-fun x1180 ((x159 Int)) Int (ite (= 132 x159) 352 (x622 x159)))
(define-fun x992 ((x159 Int)) Int (ite (= 388 x159) x1104 (x1180 x159)))
(define-fun x910 ((x159 Int)) Int (ite (and (< x159 (+ x463 420)) (>= x159 420)) (x222 (- x159 420)) (x992 x159)))
(define-fun x751 ((x159 Int)) Int (ite (= x159 164) x796 (x910 x159)))
(define-fun x1079 ((x159 Int)) Int (ite (= x159 x191) x625 (x751 x159)))
(define-fun x300 ((x159 Int)) Int (ite (and (>= x159 x1065) (> (+ x880 x1065) x159)) (x1454 (- x159 x1065)) (x1079 x159)))
(define-fun x477 ((x159 Int)) Int (ite (= x159 196) x637 (x300 x159)))
(define-fun x177 ((x159 Int)) Int (ite (= x159 x1130) x61 (x477 x159)))
(define-fun x772 ((x159 Int)) Int (ite (and (>= x159 x1512) (> (+ x1359 x1512) x159)) (x1378 (- x159 x1512)) (x177 x159)))
(define-fun x1396 ((x159 Int)) Int (ite (= x159 228) x1059 (x772 x159)))
(define-fun x1107 ((x159 Int)) Int (ite (= x368 x159) x170 (x1396 x159)))
(define-fun x234 ((x159 Int)) Int (ite (and (>= x159 x612) (> (+ x612 x170) x159)) (x1128 (- x159 x612)) (x1107 x159)))
(define-fun x1358 ((x159 Int)) Int (ite (= x159 260) x236 (x234 x159)))
(define-fun x979 ((x159 Int)) Int (ite (= x997 x159) x1497 (x1358 x159)))
(define-fun x1082 ((x159 Int)) Int (ite (and (>= x159 x356) (> (+ x356 x445) x159)) (x842 (- x159 x356)) (x979 x159)))
(define-fun x734 ((x159 Int)) Int (ite (= x159 292) x47 (x1082 x159)))
(define-fun x258 ((x159 Int)) Int (ite (= 324 x159) x587 (x734 x159)))
(define-fun x253 ((x159 Int)) Int (ite (= 356 x159) x1217 (x258 x159)))
(define-fun x117 ((x159 Int)) Int (ite (= x68 x159) x1103 (x340 x159)))
(define-fun x1370 ((x159 Int)) Int (ite (= x159 x572) x104 (x117 x159)))
(define-fun x430 ((x159 Int)) Int (ite (= 128 x159) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x262 x159)))
(define-fun x110 ((x159 Int)) Int (ite (= 132 x159) x1221 (x430 x159)))
(define-fun x319 ((x159 Int)) Int (ite (= 164 x159) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x110 x159)))
(define-fun x151 ((x159 Int)) Int (ite (and (<= 128 x159) (< x159 160)) (x895 (- x159 128)) (x319 x159)))
(define-fun x1363 ((x159 Int)) Int (ite x1 (x151 x159) (x319 x159)))
(define-fun x269 ((x159 Int)) Int (ite (and (>= x159 128) (> 160 x159)) (x895 (- x159 128)) (x1363 x159)))
(define-fun x226 ((x159 Int)) Int (ite (= 288 x159) x1132 (x269 x159)))
(define-fun x412 ((x159 Int)) Int (ite (= x159 160) 288 (x226 x159)))
(define-fun x212 ((x159 Int)) Int (ite (= 320 x159) x1535 (x412 x159)))
(define-fun x114 ((x159 Int)) Int (ite (= x159 352) x449 (x212 x159)))
(define-fun x823 ((x159 Int)) Int (ite (= x159 448) x971 (x114 x159)))
(define-fun x1269 ((x159 Int)) Int (ite (= x159 x147) x223 (x823 x159)))
(define-fun x1294 ((x159 Int)) Int (ite (= x159 x1462) x1207 (x1269 x159)))
(define-fun x16 ((x159 Int)) Int (ite (= x159 x858) x210 (x1294 x159)))
(define-fun x1341 ((x159 Int)) Int (ite (and (>= x159 x819) (> (+ x210 x819) x159)) (x253 (- (+ x159 x921) x819)) (x16 x159)))
(define-fun x1080 ((x159 Int)) Int (ite (= x396 x159) 0 (x1341 x159)))
(define-fun x428 ((x159 Int)) Int (ite (= x1075 x159) x858 (x1080 x159)))
(define-fun x1209 ((x159 Int)) Int (ite (= x159 480) x147 (x428 x159)))
(define-fun x1503 ((x159 Int)) Int (ite x646 (x823 x159) (x1209 x159)))
(define-fun x84 ((x159 Int)) Int (ite (= 384 x159) 448 (x1503 x159)))
(define-fun x10 ((x159 Int)) Int (ite (= x425 x159) x475 (x84 x159)))
(define-fun x736 ((x159 Int)) Int (ite (and (<= x768 x159) (> (+ x475 x768) x159)) (x253 (- (+ x159 x530) x768)) (x10 x159)))
(define-fun x426 ((x159 Int)) Int (ite (= x159 x465) 0 (x736 x159)))
(define-fun x731 ((x159 Int)) Int (ite (= 416 x159) x425 (x426 x159)))
(define-fun x1095 ((x159 Int)) Int (ite (= x159 192) 320 (x731 x159)))
(define-fun x1060 ((x159 Int)) Int (ite (= x159 224) x822 (x1095 x159)))
(define-fun x127 ((x159 Int)) Int (ite (= 256 x159) x1042 (x1060 x159)))
(define-fun x518 ((x159 Int)) Int (ite (= x159 x393) x1319 (x127 x159)))
(define-fun x1465 ((x159 Int)) Int (ite (and (<= x712 x159) (< x159 (+ x712 x1319))) (x253 (- (+ x159 x409) x712)) (x518 x159)))
(define-fun x137 ((x159 Int)) Int (ite (= x113 x159) 0 (x1465 x159)))
(define-fun x175 ((x159 Int)) Int (ite (= x290 x159) x1114 (x137 x159)))
(define-fun x136 ((x159 Int)) Int (ite (= x575 x159) x878 (x175 x159)))
(define-fun x924 ((x159 Int)) Int (ite (= x159 x596) x526 (x136 x159)))
(define-fun x628 ((x159 Int)) Int (ite (= x159 x881) x56 (x924 x159)))
(define-fun x1157 ((x159 Int)) Int (ite (= x159 x87) x485 (x628 x159)))
(define-fun x1521 ((x159 Int)) Int (ite (= x159 x107) x1531 (x1157 x159)))
(define-fun x499 ((x159 Int)) Int (ite (= x231 x159) x198 (x1521 x159)))
(define-fun x832 ((x159 Int)) Int (ite (= x159 x645) x881 (x499 x159)))
(define-fun x1025 ((x159 Int)) Int (ite x1168 (x924 x159) (x832 x159)))
(define-fun x711 ((x159 Int)) Int (ite (= x1126 x159) x596 (x1025 x159)))
(define-fun x1439 ((x159 Int)) Int (ite (= x1085 x159) x329 (x711 x159)))
(define-fun x1055 ((x159 Int)) Int (ite (= x1029 x159) x218 (x1439 x159)))
(define-fun x1163 ((x159 Int)) Int (ite (= x544 x159) x55 (x1055 x159)))
(define-fun x1170 ((x159 Int)) Int (ite (= x159 x774) x1461 (x1163 x159)))
(define-fun x872 ((x159 Int)) Int (ite (= x159 x896) x1418 (x1170 x159)))
(define-fun x232 ((x159 Int)) Int (ite (= x159 x1383) x25 (x872 x159)))
(define-fun x697 ((x159 Int)) Int (ite (= x159 x60) x1029 (x232 x159)))
(define-fun x982 ((x159 Int)) Int (ite x254 (x1439 x159) (x697 x159)))
(define-fun x476 ((x159 Int)) Int (ite (= x1516 x159) x1085 (x982 x159)))
(define-fun x545 ((x159 Int)) Int (ite (= x144 x159) x1477 (x476 x159)))
(define-fun x219 ((x159 Int)) Int (ite (= x159 x745) x569 (x545 x159)))
(define-fun x1127 ((x159 Int)) Int (ite (= x1056 x159) x740 (x219 x159)))
(define-fun x468 ((x159 Int)) Int (ite (= x1519 x159) x1420 (x1127 x159)))
(define-fun x361 ((x159 Int)) Int (ite (= x159 x278) x1177 (x468 x159)))
(define-fun x1015 ((x159 Int)) Int (ite (= x129 x159) x398 (x361 x159)))
(define-fun x980 ((x159 Int)) Int (ite (= x159 x962) x745 (x1015 x159)))
(define-fun x616 ((x159 Int)) Int (ite x609 (x545 x159) (x980 x159)))
(define-fun x883 ((x159 Int)) Int (ite (= x159 x1404) x144 (x616 x159)))
(define-fun x1062 ((x159 Int)) Int (ite (= x97 x159) x502 (x883 x159)))
(define-fun x683 ((x159 Int)) Int (ite (= x1047 x159) x619 (x1062 x159)))
(define-fun x1034 ((x159 Int)) Int (ite (= x159 x1352) x105 (x683 x159)))
(define-fun x669 ((x159 Int)) Int (ite (= x159 x1532) x335 (x1034 x159)))
(define-fun x624 ((x159 Int)) Int (ite (= x159 x1203) x266 (x669 x159)))
(define-fun x649 ((x159 Int)) Int (ite (= x159 x74) x567 (x624 x159)))
(define-fun x983 ((x159 Int)) Int (ite (and (> (+ x1074 x1251) x159) (>= x159 x1251)) (x253 (- (+ x474 x159) x1251)) (x649 x159)))
(define-fun x580 ((x159 Int)) Int (ite x1322 (x649 x159) (x983 x159)))
(define-fun x1123 ((x159 Int)) Int (ite (= x159 x627) x1298 (x580 x159)))
(define-fun x308 ((x159 Int)) Int (ite (= x159 x592) x53 (x1123 x159)))
(define-fun x1153 ((x159 Int)) Int (ite (= x841 x159) x1401 (x308 x159)))
(define-fun x1027 ((x159 Int)) Int (ite (= x159 x732) 128 (x1153 x159)))
(define-fun x1411 ((x159 Int)) Int (ite (= x1165 x159) x289 (x1027 x159)))
(define-fun x141 ((x159 Int)) Int (ite (= x159 x949) x78 (x1411 x159)))
(define-fun x922 ((x159 Int)) Int (ite x1386 (x141 x159) (ite x283 (x1411 x159) (x988 x159))))
(define-fun x1102 ((x159 Int)) Int (ite (= x159 x32) 0 (x922 x159)))
(define-fun x49 ((x159 Int)) Int (ite (= x159 x926) x161 (x1102 x159)))
(define-fun x943 ((x159 Int)) Int (ite (= x159 x1329) x448 (x49 x159)))
(define-fun x966 ((x159 Int)) Int (ite x102 (x580 x159) (x943 x159)))
(define-fun x947 ((x159 Int)) Int (ite (= x1124 x159) x766 (x966 x159)))
(define-fun x770 ((x159 Int)) Int (ite x372 (x947 x159) (ite x537 (x966 x159) (x366 x159))))
(define-fun x50 ((x159 Int)) Int (ite (= x252 x159) x93 (x770 x159)))
(define-fun x1021 ((x159 Int)) Int (ite (= x481 x159) x1316 (x50 x159)))
(define-fun x188 ((x159 Int)) Int (ite (= x1174 x159) x1347 (x1021 x159)))
(define-fun x317 ((x159 Int)) Int (ite (= x159 x1412) x691 (x188 x159)))
(define-fun x568 ((x159 Int)) Int (ite (= x281 x159) x1258 (x317 x159)))
(define-fun x13 ((x159 Int)) Int (ite (= x1003 x159) x349 (x568 x159)))
(define-fun x1072 ((x159 Int)) Int (ite (= x541 x159) x301 (x13 x159)))
(define-fun x1459 ((x159 Int)) Int (ite (= x159 x1427) x94 (x1072 x159)))
(define-fun x155 ((x159 Int)) Int (ite (= x159 x987) x1048 (x1459 x159)))
(define-fun x1529 ((x159 Int)) Int (ite (= x159 x956) x802 (x155 x159)))
(define-fun x479 ((x159 Int)) Int (ite (= x130 x159) x268 (x1529 x159)))
(define-fun x893 ((x159 Int)) Int (ite (= x159 x1144) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x479 x159)))
(define-fun x1424 ((x159 Int)) Int (ite (= x159 x870) x1310 (x893 x159)))
(define-fun x1303 ((x159 Int)) Int (ite (= x1171 x159) x336 (x1424 x159)))
(define-fun x439 ((x159 Int)) Int (ite (= x159 x1144) 0 (x1303 x159)))
(define-fun x444 ((x159 Int)) Int (ite (= x1184 x159) x42 (x439 x159)))
(define-fun x741 ((x159 Int)) Int (ite (= x1032 x159) x804 (x444 x159)))
(define-fun x1134 ((x159 Int)) Int (ite (= x108 x159) x1156 (x741 x159)))
(define-fun x516 ((x159 Int)) Int (ite (= x159 x1241) x54 (x1134 x159)))
(define-fun x659 ((x159 Int)) Int (ite (= x159 x287) x626 (x516 x159)))
(define-fun x620 ((x159 Int)) Int (ite x400 (ite x547 (x659 x159) (ite x1051 (x659 x159) (x1303 x159))) (x1303 x159)))
(define-fun x274 ((x159 Int)) Int (ite (= x73 x159) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x620 x159)))
(define-fun x358 ((x159 Int)) Int (ite (= x158 x159) x1283 (x274 x159)))
(define-fun x894 ((x159 Int)) Int (ite (= x1377 x159) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x358 x159)))
(define-fun x459 ((x159 Int)) Int (ite (and (< x159 (+ 32 x73)) (>= x159 x73)) (x1397 (- x159 x73)) (x894 x159)))
(define-fun x706 ((x159 Int)) Int (ite x1278 (x459 x159) (x894 x159)))
(define-fun x193 ((x159 Int)) Int (ite (and (< x159 (+ 32 x73)) (<= x73 x159)) (x1397 (- x159 x73)) (x706 x159)))
(define-fun x1201 ((x159 Int)) Int (ite (= x159 x665) x183 (x193 x159)))
(define-fun x538 ((x159 Int)) Int (ite (and (>= x159 x688) (< x159 (+ x1098 x688))) (x253 (- (+ x474 x159) x688)) (x1201 x159)))
(define-fun x1533 ((x159 Int)) Int (ite x88 (x1201 x159) (x538 x159)))
(define-fun x4 ((x159 Int)) Int (ite (= x944 x159) x1298 (x1533 x159)))
(define-fun x1237 ((x159 Int)) Int (ite (= x159 x346) x850 (x4 x159)))
(define-fun x919 ((x159 Int)) Int (ite (= x1226 x159) x1169 (x1237 x159)))
(define-fun x993 ((x159 Int)) Int (ite (= x363 x159) 128 (x919 x159)))
(define-fun x1315 ((x159 Int)) Int (ite (= x159 x1149) x486 (x993 x159)))
(define-fun x1014 ((x159 Int)) Int (ite (= x1423 x159) x1206 (x1315 x159)))
(define-fun x589 ((x159 Int)) Int (ite x618 (x1014 x159) (ite x112 (x1315 x159) (x865 x159))))
(define-fun x1360 ((x159 Int)) Int (ite (= x159 x1364) 0 (x589 x159)))
(define-fun x525 ((x159 Int)) Int (ite (= x159 x946) x140 (x1360 x159)))
(define-fun x1353 ((x159 Int)) Int (ite (= x856 x159) x708 (x525 x159)))
(define-fun x1311 ((x159 Int)) Int (ite x1267 (x1533 x159) (x1353 x159)))
(define-fun x52 ((x159 Int)) Int (ite (= x250 x159) x1479 (x1311 x159)))
(define-fun x169 ((x159 Int)) Int (ite (= x159 x437) x203 (x52 x159)))
(define-fun x464 ((x159 Int)) Int (ite (= x159 x387) x1502 (x169 x159)))
(define-fun x348 ((x159 Int)) Int (ite (= x416 x159) x257 (x464 x159)))
(define-fun x1187 ((x159 Int)) Int (ite x558 (x464 x159) (ite x583 (x169 x159) (ite x1526 (x52 x159) (ite x1222 (x1311 x159) (x348 x159))))))
(define-fun x324 ((x159 Int)) Int (ite (= x373 x159) x1289 (x1187 x159)))
(define-fun x829 ((x159 Int)) Int (ite (= x510 x159) x1316 (x324 x159)))
(define-fun x1263 ((x159 Int)) Int (ite (= x755 x159) x284 (x829 x159)))
(define-fun x447 ((x159 Int)) Int (ite (= x159 x1520) x246 (x1263 x159)))
(define-fun x1012 ((x159 Int)) Int (ite (= x1290 x159) x1117 (x447 x159)))
(define-fun x482 ((x159 Int)) Int (ite (= x265 x159) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x1012 x159)))
(define-fun x318 ((x159 Int)) Int (ite (= x521 x159) x1509 (x482 x159)))
(define-fun x937 ((x159 Int)) Int (ite (and (< x159 (+ 32 x265)) (>= x159 x265)) (x83 (- x159 x265)) (x318 x159)))
(define-fun x1321 ((x159 Int)) Int (ite x1244 (x937 x159) (x318 x159)))
(define-fun x6 ((x159 Int)) Int (ite (and (>= x159 x265) (> (+ 32 x265) x159)) (x83 (- x159 x265)) (x1321 x159)))
(define-fun x863 ((x159 Int)) Int (ite (= x935 x159) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x6 x159)))
(define-fun x837 ((x159 Int)) Int (ite (= x192 x159) x410 (x863 x159)))
(define-fun x1514 ((x159 Int)) Int (ite (and (< x159 (+ x935 32)) (>= x159 x935)) (x828 (- x159 x935)) (x837 x159)))
(define-fun x106 ((x159 Int)) Int (ite x1376 (x1514 x159) (x837 x159)))
(define-fun x1097 ((x159 Int)) Int (ite (and (< x159 (+ 32 x935)) (<= x935 x159)) (x828 (- x159 x935)) (x106 x159)))
(define-fun x594 ((x159 Int)) Int (ite (= x159 x991) x160 (x1097 x159)))
(define-fun x1504 ((x159 Int)) Int (ite (= x159 x824) 0 (x594 x159)))
(define-fun x1214 ((x159 Int)) Int (ite (= x1306 x159) 0 (x1504 x159)))
(define-fun x805 ((x159 Int)) Int (ite (= x159 x885) 0 (x1214 x159)))
(define-fun x597 ((x159 Int)) Int (ite (= x153 x159) 0 (x805 x159)))
(define-fun x1444 ((x159 Int)) Int (ite (= x434 x159) 0 (x597 x159)))
(define-fun x749 ((x159 Int)) Int (ite (= x1287 x159) x824 (x1444 x159)))
(define-fun x182 ((x159 Int)) Int (ite (= x1247 x159) 0 (x749 x159)))
(define-fun x833 ((x159 Int)) Int (ite (= x898 x159) 0 (x182 x159)))
(define-fun x996 ((x159 Int)) Int (ite (= x818 x159) 0 (x833 x159)))
(define-fun x1173 ((x159 Int)) Int (ite (= x159 x352) 0 (x996 x159)))
(define-fun x298 ((x159 Int)) Int (ite (= x159 x484) 0 (x1173 x159)))
(define-fun x847 ((x159 Int)) Int (ite (= x159 x965) x1247 (x298 x159)))
(define-fun x617 ((x159 Int)) Int (x455 x159))
(assert (= (x595 (x63 x984 x1513 x216 x767)) x984))
(assert (< 10000 (x91 x98 x648)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)))
(assert (= (x595 (x1452 x131 x23 x440)) x131))
(assert (x1522 x572))
(assert (=> (>= 10000 x1367) (= (x1252 x1367) 0)))
(assert (= (x1159 (x472 x1413 x433 x1367 x1046 x297 x710 x185)) x710))
(assert (x1522 x496))
(assert (= x873 (x227 (x472 x535 x873 x733 x631 x1078 x1340 x967))))
(assert (= 0 (x1252 18446746139588821059)))
(assert (=> (>= 10000 x668) (= 0 (x1252 x668))))
(assert (x1522 x205))
(assert (x1522 x332))
(assert (not (x721 (x1471 x98 x726 x436 x760 x332))))
(assert (=> (<= x1100 10000) (= (x1252 x1100) 0)))
(assert (x1522 x607))
(assert (= (x1159 (x1506 x984 x676 x124 x225 x978 x362)) x362))
(assert (=> (>= 10000 x36) (= (x1252 x36) 0)))
(assert (= (and (not x611) x553) x609))
(assert (= x583 (and (not x35) x199)))
(assert (x1522 x26))
(assert (not (x721 (x63 x984 x1513 x216 x767))))
(assert (x1522 x720))
(assert (> (x1452 x98 x1069 x1111) 10000))
(assert (x1522 x475))
(assert (x1522 x120))
(assert (x1522 x644))
(assert (x1522 x149))
(assert (x950 x1460))
(assert (= 0 (x1252 18446744073709551614)))
(assert (x1522 x1436))
(assert (= (x1252 (x63 x98 x419 x561 x795)) (x63 x98 x419 x561 x795)))
(assert (x1522 x460))
(assert (= 0 (x1252 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1522 x1017))
(assert (x1522 x639))
(assert (= 0 (x1252 18446744073709551167)))
(assert (x1522 x1257))
(assert (x1522 x74))
(assert (x1522 x1306))
(assert (x1522 x868))
(assert (x1522 x1105))
(assert (x1522 x287))
(assert (x906 x1104))
(assert (x1522 x498))
(assert (=> (<= x29 10000) (= 0 (x1252 x29))))
(assert (x1522 x1355))
(assert (< 10000 (x1506 x984 x676 x124 x225 x978 x362)))
(assert (= (x1265 (x63 x984 x1513 x216 x767)) x767))
(assert (= (x1159 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)) x528))
(assert (=> (<= x561 10000) (= (x1252 x561) 0)))
(assert (x1522 x200))
(assert (x1522 x115))
(assert (x1522 x972))
(assert (x1522 x294))
(assert (= (x1262 (x1506 x535 x40 x1119 x504 x1481 x658)) x1119))
(assert (x1522 x1510))
(assert (x48 x1152))
(assert (=> (>= 10000 x1348) (= (x1252 x1348) 0)))
(assert (x1522 x878))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x1413 x1143 x877)))
(assert (=> (<= x1011 10000) (= 0 (x1252 x1011))))
(assert (x1522 x1029))
(assert (x1522 x80))
(assert (x1522 x869))
(assert (x1522 x282))
(assert (= x973 (x1265 (x1506 x1196 x397 x1199 x973 x888 x754))))
(assert (x1113 x1398 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x970 10000) (= (x1252 x970) 0)))
(assert (= x378 (x1511 (x1471 x1413 x765 x570 x552 x378))))
(assert (not (x721 (x1471 x70 x730 x45 x277 x125))))
(assert (x1522 x657))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (= x1011 (x1511 (x1471 x984 x20 x208 x1050 x1011))))
(assert (x721 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (x1522 x951))
(assert (x1522 x855))
(assert (x1522 x1309))
(assert (x1522 x215))
(assert (< (x1452 x535 x1041 x1419) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1152))
(assert (= (x1506 x984 x676 x124 x225 x978 x362) (x1252 (x1506 x984 x676 x124 x225 x978 x362))))
(assert (x1113 x519 1461501637330902918203684832716283019655932542976))
(assert (= x98 (x595 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (= (x472 x1084 x1473 x1018 x654 x952 x621 x488) (x1252 (x472 x1084 x1473 x1018 x654 x952 x621 x488))))
(assert (= x646 (and x1194 (not x1110))))
(assert (x1522 x255))
(assert (=> (>= 10000 x1301) (= 0 (x1252 x1301))))
(assert (= 0 (x1252 134217728)))
(assert (not (x721 (x1452 x1196 x384 x1327))))
(assert (=> (>= 10000 x1340) (= (x1252 x1340) 0)))
(assert (x1522 x303))
(assert (x1522 x846))
(assert (= (x1252 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083)) (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083)))
(assert (= x801 (=> (and (= x1160 (x1061 (+ x252 32))) (= x288 x1483) (= (* 32 x492) x1523) (= x281 x1297) (<= x252 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x93 (x1486 (- x264 32))) (= (x1486 (- x281 x252)) x264) (<= 1 x1297) (< x252 x281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x252) (= x272 x492) (>= x281 1) (= (x1061 (+ x1293 x1523)) x1483) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x252) (<= x492 4) (= x1297 (x1061 (+ x854 x1124))) (= x98 (x50 x252)) (= x854 (* x492 32)) (= (>= 224 x98) x1210)) (and x1210 (=> (and (= (x50 x1160) x419) (= (x1061 (+ x1174 32)) x1412) (= x118 (x50 x717)) (= x80 (x1061 (+ 64 x1160))) (= (x1061 (+ 192 x1160)) x716) (= x1406 (x50 x566)) (= (x1061 (+ x1160 32)) x1031) (= (x1061 (+ x1160 32)) x563) (= x789 (x50 x716)) (= x457 (x472 x98 x764 x800 x207 x79 x228 x557)) (= x1266 (x50 x1031)) (= x1197 (x1061 (+ 64 x1160))) (= x634 (x50 x1395)) (= (x968 0) x995) (= (x1061 (+ 32 x481)) x1174) (= (x50 x109) x207) (= x79 (x50 x1391)) (= (x1061 (+ x1160 64)) x1409) (= (x1061 (+ 64 x1160)) x26) (= (x1061 (+ x1160 128)) x1441) (= (x50 x80) x760) (= x512 (x1061 (+ x1160 96))) (= (x1061 (+ 32 x1160)) x229) (= (x1061 (+ 160 x1160)) x511) (= x925 (x50 x512)) (= (x50 x1362) x1058) (= (x50 x1160) x180) (= x984 (x568 x281)) (= (x1471 x98 x726 x436 x760 x332) x636) (= (ite (= x98 0) x995 (ite (>= 32 x98) x1525 (ite (<= x98 64) x320 (ite (<= x98 96) x756 (ite (<= x98 128) x636 (ite (>= 160 x98) x1325 (ite (<= x98 192) x457 (ite (<= x98 224) x1480 x693)))))))) x691) (= (x50 x511) x1515) (= (x50 x817) x332) (= x1254 (x1061 (+ 160 x1160))) (= x422 (x50 x1160)) (= x795 (x50 x1197)) (= (x1061 (+ 32 x1160)) x591) (= x33 (x1061 (+ x281 32))) (= x320 (x1452 x98 x1069 x1111)) (= (<= x984 224) x960) (= x1243 (x1061 (+ x1160 32))) (= x1480 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)) (= x130 (x1061 (+ x481 96))) (= (x50 x1409) x1161) (or (and (<= 1 x281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x281)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x281) (<= x281 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= x756 (x63 x98 x419 x561 x795)) (= (x50 x1243) x561) (= (x1061 (+ 32 x1160)) x717) (= (x1506 x98 x422 x1266 x1161 x925 x1406) x1325) (= x557 (x50 x1254)) (= x817 (x1061 (+ x1160 96))) (= x436 (x50 x563)) (= (x1486 (- x130 x281)) x972) (= (x50 x1160) x1069) (= x800 (x50 x591)) (= x1391 (x1061 (+ 96 x1160))) (= (x50 x229) x1111) (> x130 x281) (= x228 (x50 x1441)) (= (x1061 (+ x1160 128)) x566) (= (x1061 (+ 32 x281)) x481) (= x187 (x50 x26)) (= x1362 (x1061 (+ x1160 128))) (= x726 (x50 x1160)) (= (x1061 (+ 96 x1160)) x1395) (= x109 (x1061 (+ 64 x1160))) (= x648 (x50 x1160)) (= x1258 (x1486 (- x972 32))) (= x1525 (x91 x98 x648)) (= x764 (x50 x1160))) (and x960 (=> (and (= (x568 x1236) x124) (= x225 (x568 x1213)) (= (x568 x33) x1036) (= (x479 x130) x131) (= x1427 (x1061 (+ 32 x541))) (= x1144 (x1061 (+ x1003 160))) (= (x968 0) x261) (= (x472 x984 x1017 x1022 x668 x1348 x1136 x1492) x1438) (= (x568 x85) x767) (= (x1506 x984 x676 x124 x225 x978 x362) x1166) (= x1020 (x568 x196)) (= (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083) x1139) (= (x1486 (- x1205 32)) x268) (= x1492 (x568 x1528)) (= (x568 x33) x1355) (= x515 (x568 x1033)) (= x82 (x1061 (+ 128 x33))) (= (x1061 (+ 96 x33)) x134) (= (x1471 x984 x20 x208 x1050 x1011) x916) (= (x1061 (+ 32 x33)) x1236) (= (x1061 (+ 32 x33)) x599) (= x607 (x568 256)) (= x987 (x1061 (+ 32 x1427))) (= x1455 (x63 x984 x1513 x216 x767)) (= x1213 (x1061 (+ x33 64))) (= (x1061 (+ x33 64)) x1223) (= (x1061 (+ 32 x987)) x956) (= (x413 1461501637330902918203684832716283019655932542975 x607) x802) (= (x568 x599) x513) (= (x568 x315) x362) (= (x1452 x984 x1036 x515) x1002) (= (x568 x33) x1513) (< x130 x1144) (= (x568 x339) x978) (= x1348 (x568 x932)) (= (x1061 (+ 64 x33)) x173) (= x811 (>= 224 x131)) (= (x568 x134) x1011) (= x1528 (x1061 (+ 160 x33))) (= (x1061 (+ x33 96)) x871) (= (x1061 (+ x130 32)) x1507) (= (x1061 (+ x130 32)) x1003) (= (x568 x33) x20) (= (x1061 (+ 160 x33)) x196) (= x1022 (x568 x743)) (= (x1061 (+ 64 x33)) x251) (= (x1061 (+ x33 32)) x743) (= (x568 x957) x216) (= x803 (x568 x251)) (= (x1061 (+ 96 x33)) x932) (= x342 (x568 x871)) (= (x1061 (+ 32 x1003)) x541) (= (x568 x1185) x1083) (= x1185 (x1061 (+ 192 x33))) (= x1136 (x568 x82)) (= (x568 224) x1048) (= (x1061 (+ 32 x33)) x1033) (= (x1061 (+ x33 128)) x149) (or (and (>= x130 115792089237316195423570985008687907853269984665640564039457584007913129639747) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x130)) (and (<= 129 x130) (<= x130 115792089237316195423570985008687907853269984665640564039457584007913129639743)) (and (>= 126 x130) (>= x130 2))) (= x339 (x1061 (+ 96 x33))) (= (ite (= 0 x984) x261 (ite (<= x984 32) x1145 (ite (<= x984 64) x1002 (ite (<= x984 96) x1455 (ite (>= 128 x984) x916 (ite (<= x984 160) x1166 (ite (<= x984 192) x1438 (ite (>= 224 x984) x1139 x458)))))))) x94) (= (x1061 (+ 32 x33)) x957) (= x85 (x1061 (+ 64 x33))) (= (x568 x149) x581) (= (x1061 (+ 128 x33)) x315) (= x1205 (x1486 (- x1144 x130))) (= x1309 (x1061 (+ x33 32))) (= x1145 (x91 x984 x1355)) (= (x568 x173) x1050) (= x668 (x568 x1223)) (= x1017 (x568 x33)) (= (x568 x1309) x208) (= (x568 x33) x676) (= (x568 x33) x1121)) (and x811 (=> (and (= x1361 (x1061 (+ 32 x1507))) (= x392 (x479 x540)) (= x1064 (x479 x509)) (= (x479 x255) x190) (= (x1061 (+ x1507 32)) x864) (= x810 (x1061 (+ 160 x1507))) (= x415 (x91 x131 x1312)) (= (x1061 (+ 64 x1507)) x164) (= (x1061 (+ 32 x1144)) x1453) (= (x479 x1300) x1218) (= x887 (x479 x1507)) (= (x1061 (+ x1507 128)) x19) (= x59 (x479 x1507)) (= (x479 x945) x440) (= (x1303 x1453) x1137) (= x812 (x479 x164)) (= x870 (x1061 (+ x1144 2))) (= (x479 x19) x1264) (= (x1061 (+ 32 x1507)) x945) (= (x1061 (+ 96 x1507)) x540) (= x328 (x1061 (+ 64 x1507))) (= (x479 x1507) x115) (= x42 (x63 66 x1430 x1137 x267)) (= x1204 (x968 0)) (= x24 (x1061 (+ 32 x1507))) (= x176 (x479 x864)) (= (x479 x1099) x550) (= (x1303 x1464) x267) (= (x1061 (+ 32 x1507)) x1099) (= (x479 x1507) x1120) (= (x1471 x131 x887 x29 x1064 x1133) x30) (= x1464 (x1061 (+ x1144 64))) (= (x1061 (+ 64 x1507)) x713) (= x1115 (x1303 x393)) (= x1305 (x1061 (+ 64 x1507))) (= x584 (x479 x909)) (= x1133 (x479 x773)) (= x1299 (x479 x245)) (= x671 (x479 x1305)) (= (x1061 (+ 96 x1507)) x1300) (= x29 (x479 x1361)) (= x336 (ite (= 0 x131) x1204 (ite (<= x131 32) x415 (ite (<= x131 64) x1200 (ite (>= 96 x131) x380 (ite (<= x131 128) x30 (ite (<= x131 160) x21 (ite (<= x131 192) x1474 (ite (>= 224 x131) x838 x217))))))))) (= x909 (x1061 (+ 128 x1507))) (= (x1303 x1144) x1430) (= x44 (x479 x1475)) (= x1474 (x472 x131 x1272 x550 x970 x44 x36 x190)) (= (x479 x1507) x23) (= (x1506 x131 x1120 x694 x671 x392 x584) x21) (= x498 (x479 x777)) (= (x1061 (+ 160 x1507)) x255) (= x1312 (x479 x1507)) (= x1200 (x1452 x131 x23 x440)) (= (x1061 (+ x1507 96)) x1475) (= (x479 x71) x36) (= x970 (x479 x328)) (= (x479 x810) x758) (= (x1061 (+ 32 x1507)) x245) (= x777 (x1061 (+ x1507 192))) (= x838 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) (= (x63 x131 x115 x176 x812) x380) (= (x479 x1507) x1272) (= x694 (x479 x24)) (= (= x1115 65) x418) (= (x479 x713) x714) (= x509 (x1061 (+ x1507 64))) (= (x1061 (+ x1507 96)) x773) (= x1171 (x1061 (+ x870 32))) (= x71 (x1061 (+ 128 x1507)))) (and (=> (and (and (= x73 x1144) (= x310 2) (= 0 x420) (= x912 (x1303 x393)) (= x792 x912)) (not x418)) x701) (=> (and (and (and (= (x209 x533 248) x804) (= (+ 32 x712) x757) (= x1156 (x1303 x712)) (= x139 (> x54 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= x533 (x1303 x184)) (= x54 (x1303 x757)) (= (+ 32 x757) x184)) (or (and (and (= 3 x431) (= x1092 x1144) (= 0 x7) (= x1345 x54)) x139) (and (and (and (= (x1061 (+ x1144 32)) x1184) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1144) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1144) (= x1241 (x1061 (+ 32 x108))) (= x626 (x480 x195 x291 x750 x1403)) (= (x659 x1458) x519) (= (x1486 (- x1184 32)) x1458) (= (x1486 (- x1184 32)) x287) (= x1220 (= 0 x1487)) (= x1403 (x516 (x1061 (+ x1184 96)))) (= (x413 1461501637330902918203684832716283019655932542975 x519) x1487) (= (x1061 (+ x1032 32)) x108) (= (x516 (x1061 (+ x1184 64))) x750) (>= 1461501637330902918203684832716283019655932542975 x626) (> x1184 x1144) (not (= x1144 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1144 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1144)) (<= x1144 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= 128 x64) (= x291 (x516 (x1061 (+ 32 x1184)))) (= (x516 x1184) x195) (= (x1061 (+ 32 x1184)) x1032)) (or (and (and (= 0 x1345) (= x1092 x1184) (= x431 1) (= x7 0)) x1220) (and (not x1220) (and (= x519 x7) (= 0 x431) (= x1184 x1092) (= 0 x1345))))) (not x139)))) x418) x866)))))))))))
(assert (=> (<= x100 10000) (= (x1252 x100) 0)))
(assert (= x1017 (x227 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x1522 x1461))
(assert (=> (<= x462 10000) (= (x1252 x462) 0)))
(assert (= x228 (x1159 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (x1522 x890))
(assert (= x561 (x1262 (x63 x98 x419 x561 x795))))
(assert (=> (<= x402 10000) (= 0 (x1252 x402))))
(assert (x1522 x1207))
(assert (x1522 x462))
(assert (x1522 x1030))
(assert (x1522 x1270))
(assert (x721 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (=> (<= x1406 10000) (= (x1252 x1406) 0)))
(assert (= (x1262 (x472 x131 x1272 x550 x970 x44 x36 x190)) x550))
(assert (not (x721 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498))))
(assert (= (x227 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x59))
(assert (x1522 x1293))
(assert (=> (<= x277 10000) (= (x1252 x277) 0)))
(assert (= x171 (or x1536 x1096)))
(assert (x1522 x1223))
(assert (x1522 x78))
(assert (x1522 x1196))
(assert (= x41 (x227 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089))))
(assert (= (x595 (x1452 x70 x1443 x532)) x70))
(assert (not (x721 (x1452 x131 x23 x440))))
(assert (x1522 x436))
(assert (= (x91 x535 x632) (x1252 (x91 x535 x632))))
(assert (x1522 x322))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x1113 x18 1461501637330902918203684832716283019655932542976))
(assert (x1522 x654))
(assert (= x283 (and x1063 (not x1181))))
(assert (x1522 x584))
(assert (x1522 x3))
(assert (x1522 x427))
(assert (x1522 x1520))
(assert (x1522 x608))
(assert (not (x721 (x1452 x984 x1036 x515))))
(assert (x1522 x1043))
(assert (x1522 x417))
(assert (x1522 x769))
(assert (x1522 x803))
(assert (= (x1511 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x929))
(assert (x1390 x1152))
(assert (= (x227 (x63 x535 x738 x121 x461)) x738))
(assert (=> (<= x44 10000) (= (x1252 x44) 0)))
(assert (= (x227 (x1471 x1196 x781 x1138 x1039 x696)) x781))
(assert (x586 x533))
(assert (x1522 x24))
(assert (x1522 x1527))
(assert (x1113 x529 32))
(assert (= (x595 (x63 x535 x738 x121 x461)) x535))
(assert (= (x1067 (x472 x131 x1272 x550 x970 x44 x36 x190)) x190))
(assert (x1522 x637))
(assert (x1522 x284))
(assert (x1522 x1141))
(assert (x1522 x655))
(assert (= x1492 (x1067 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (> (x1452 x131 x23 x440) 10000))
(assert (x680 x769))
(assert (x1522 x95))
(assert (=> (<= x1193 10000) (= 0 (x1252 x1193))))
(assert (=> (<= x1199 10000) (= 0 (x1252 x1199))))
(assert (= 0 (x1252 21408440236001274921485009970742555221786587156444570319896389698385254285312)))
(assert (x1522 x812))
(assert (not (x721 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089))))
(assert (= x1278 (and x385 x1432)))
(assert (not (x721 (x1452 64 x593 1))))
(assert (=> (<= x1229 10000) (= 0 (x1252 x1229))))
(assert (x1522 x59))
(assert (> (x1471 x1084 x846 x214 x1301 x1405) 10000))
(assert (x1522 x213))
(assert (x1522 x210))
(assert (= (x1265 (x1506 x98 x422 x1266 x1161 x925 x1406)) x1161))
(assert (=> (>= 10000 x532) (= (x1252 x532) 0)))
(assert (= x1022 (x1262 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x1522 x936))
(assert (= (x1067 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) x462))
(assert (x1390 x682))
(assert (= (x1252 18446744073709551615) 0))
(assert (= x923 (x1159 (x1506 x1413 x1008 x67 x759 x875 x923))))
(assert (x1522 x387))
(assert (x721 18446744073709551615))
(assert (x1522 x1287))
(assert (= x1233 (x690 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233))))
(assert (= (x91 x70 x700) (x1252 (x91 x70 x700))))
(assert (x1522 x1122))
(assert (x1522 x642))
(assert (x1522 x957))
(assert (x1522 x57))
(assert (x1522 x1044))
(assert (=> (<= x696 10000) (= (x1252 x696) 0)))
(assert (x1522 x1373))
(assert (x1522 x285))
(assert (x1522 x491))
(assert (= (and x1256 x418) x623))
(assert (x1522 x1032))
(assert (=> (>= 10000 x1318) (= (x1252 x1318) 0)))
(assert (x1522 x739))
(assert (x1113 x656 1461501637330902918203684832716283019655932542976))
(assert (x451 x1330))
(assert (x1522 x566))
(assert (x451 x474))
(assert (x1522 x198))
(assert (x451 x1179))
(assert (= (x1511 (x1506 x984 x676 x124 x225 x978 x362)) x978))
(assert (=> (<= x764 10000) (= (x1252 x764) 0)))
(assert (x1522 x864))
(assert (x1522 x124))
(assert (= x1196 (x595 (x1471 x1196 x781 x1138 x1039 x696))))
(assert (x1522 x354))
(assert (=> (<= x654 10000) (= 0 (x1252 x654))))
(assert (x451 x235))
(assert (=> (<= x98 10000) (= (x1252 x98) 0)))
(assert (= x1064 (x1265 (x1471 x131 x887 x29 x1064 x1133))))
(assert (x1522 x45))
(assert (= (x227 (x63 x131 x115 x176 x812)) x115))
(assert (x586 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x1522 x1142))
(assert (x1522 x386))
(assert (< 10000 (x472 x98 x764 x800 x207 x79 x228 x557)))
(assert (x1522 x1482))
(assert (x1522 x443))
(assert (= x1324 (=> (and (not (= x935 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x935) (= (< 0 x442) x737) (= x991 (x1061 (+ x935 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x935) (= x442 (x1097 x911)) (= x911 (x1097 x1404)) (= x976 (x1097 x1482)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x935)) (= x820 (x1097 x935)) (<= x935 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x820 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x935)) (<= 1 x90) (< x935 x991) (= x1482 (x1097 160))) (and (=> (and (and (= x351 (x1097 x928)) (= x905 (x1097 x351)) (= (x1061 (+ x911 32)) x928) (>= x564 1) (= (= x1208 0) x309) (= (x1097 x911) x564) (>= 5 x905) (= (ite (= x905 1) 1 0) x1208)) x737) (and (=> (and (not x309) (and (= (x413 1461501637330902918203684832716283019655932542975 x18) x31) (= x940 x31) (<= 1 x31) (<= x31 1461501637330902918203684832716283019655932542975) (= (x1097 x493) x18) (= (x1061 (+ x351 128)) x493))) x1112) (=> (and x309 (and (or (and (not x230) (and (= (x1097 x351) x679) (= x350 1) (= 3 x679))) (and x230 (= x1337 1))) (and (= x230 (< 0 x1337)) (= (ite (= x739 2) 1 0) x1337) (<= x739 5) (= (x1097 x351) x739)))) x145))) (=> (not x737) x920)))))
(assert (not x490))
(assert (> (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498) 10000))
(assert (x1522 x99))
(assert (= (x1262 (x1471 x984 x20 x208 x1050 x1011)) x208))
(assert (x1522 x1132))
(assert (x1522 x176))
(assert (= (x1252 30450320296159908085414496432607297912280636920234228256796789313041262968832) 0))
(assert (x1113 x769 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x424))
(assert (= (x1252 (x1452 x1413 x1143 x877)) (x1452 x1413 x1143 x877)))
(assert (=> (>= 10000 x1041) (= (x1252 x1041) 0)))
(assert (= x1413 (x595 (x1471 x1413 x765 x570 x552 x378))))
(assert (x1390 x519))
(assert (x1522 x1299))
(assert (x1522 x131))
(assert (= (x1511 (x1471 x98 x726 x436 x760 x332)) x332))
(assert (x1522 x854))
(assert (=> (>= 10000 x180) (= 0 (x1252 x180))))
(assert (x1522 x941))
(assert (x1522 x591))
(assert (x950 x656))
(assert (x1522 x453))
(assert (x1522 x599))
(assert (< 10000 (x91 x70 x700)))
(assert (=> (<= x1105 10000) (= 0 (x1252 x1105))))
(assert (not (x721 (x1506 x1084 x374 x65 x657 x390 x1068))))
(assert (= (x595 (x63 x70 x1162 x834 x1288)) x70))
(assert (x1522 x497))
(assert (x1522 x161))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x131 x1272 x550 x970 x44 x36 x190)))
(assert (x1522 x1475))
(assert (x1522 x1011))
(assert (=> (<= x299 10000) (= 0 (x1252 x299))))
(assert (x1522 x1473))
(assert (x1522 x257))
(assert (x1522 x1078))
(assert (=> (>= 10000 x888) (= (x1252 x888) 0)))
(assert (x1522 x158))
(assert (= (=> (and (= x742 (= 0 x310)) (or (and (= x310 0) (not x742)) x742)) x775) x701))
(assert (x1522 x316))
(assert (=> (<= x733 10000) (= (x1252 x733) 0)))
(assert (x1522 x297))
(assert (= (x1262 (x63 66 x1430 x1137 x267)) x1137))
(assert (= x747 (and x1374 x1469)))
(assert (= (x1252 (x968 0)) (x968 0)))
(assert (x1522 x880))
(assert (x1260 128 x1104))
(assert (x1522 x505))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x1522 x1279))
(assert (x1522 x371))
(assert (= (x1511 (x1471 x131 x887 x29 x1064 x1133)) x1133))
(assert (= (x227 (x63 x70 x1162 x834 x1288)) x1162))
(assert (x721 4294967295))
(assert (x1522 x578))
(assert (x1522 x22))
(assert (x1522 x1483))
(assert (=> (<= x505 10000) (= (x1252 x505) 0)))
(assert (= (x227 (x1506 x70 x1493 x347 x505 x1291 x402)) x1493))
(assert (x1522 x1217))
(assert (x1522 x1298))
(assert (x1522 x7))
(assert (= x112 (and x543 (not x1365))))
(assert (< (x1452 64 x593 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x63 x984 x1513 x216 x767) (x1252 (x63 x984 x1513 x216 x767))))
(assert (not (x721 (x1452 x98 x1069 x1111))))
(assert (=> (<= x295 10000) (= (x1252 x295) 0)))
(assert (x1522 x1330))
(assert (= (x595 (x1452 x535 x1041 x1419)) x535))
(assert (=> (>= 10000 x374) (= 0 (x1252 x374))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x70 x730 x45 x277 x125)))
(assert (= (x227 (x91 x535 x632)) x632))
(assert (x1522 x797))
(assert (= x490 (=> (and (and (and (= false x211) (= x593 x1231)) (and (and (= x8 x1501) (and (and (= x463 (* x1104 128)) (= x637 (- x1130 36)) (< x17 x154) (= x1512 (+ x1130 32)) (= (+ 32 x997) x356) (= (+ x368 32) x612) (= (+ 32 x191) x1065) (= x1059 (- x368 36)) (<= x692 134217728) (= x236 (- x997 36)) (= x46 (* 32 x692)) (= (+ 32 x1359 x1130) x368) (= x1346 x651) (= x1359 (* x61 160)) (<= x154 x46) (= (- x191 36) x796) (= x997 (+ x368 32 x46)) (= x191 (+ x463 420)) (= x880 (* 160 x625)) (= (+ x997 32 x445) x1302) (<= 0 x692) (= (* 32 (- x692 1)) x17) (= (* x1497 32) x445) (= (+ 32 x880 x191) x1130) (= x170 x154)) (and (and (and (and (= x577 x316) (and (or (and (not x367) (= x174 x677)) (and x367 (and (>= x1326 32) (= 1 x174) (<= x1326 4294967295)))) (and (= x855 (x1198 x572)) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x630) (<= x900 127) (= false x14) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x1408) (<= x1326 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x698 x68) (<= x900 127) (= x344 x104) (= (x340 x68) x1103) (= 128 x908) (= x138 2189116922) (<= 32 x1326) (<= x825 1461501637330902918203684832716283019655932542975) (= x344 (x117 x572)) (= x367 (> x677 0)) (>= x855 1) (= false x1434)))) (= x1221 x698)) (and (= x840 false) (= x761 x587) (= x1302 x474))) (= x47 x321)))) (and (= x813 (x1038 x1388)) (= x999 false) (>= 127 x99) (= x1248 x1332) (= x989 false) (= x394 x37) (= x698 x1388) (= 32 x641) (= (x1416 x1193) x394) (= false x1118) (>= x474 676) (= false x787) (= false x514) (= x379 (x1452 64 x593 1)) (= x901 1889567281) (= false x101) (<= x99 127) (<= x474 2065879269444) (= (x542 x379) x1248) (= x167 (x1198 x1193)) (>= x167 1)))) (and (= x574 (< 0 (x1198 x1193))) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1148) (<= x1457 1461501637330902918203684832716283019655932542975) (>= x572 1) x1308 (>= 1461501637330902918203684832716283019655932542975 x9) x470 (not (= x572 x295)) (>= 4294967295 x170) (>= x311 0) (not (= x295 x1193)) x1295 x259 (= (< 0 (x1198 x1076)) x1308) (>= 4294967295 x625) (not (= x295 x76)) (>= 1461501637330902918203684832716283019655932542975 x295) (not (= x221 x1193)) (= x470 (> (x1198 x572) 0)) (>= x955 0) (not (= x879 x1076)) (<= 0 x1346) (not (= x76 x221)) (not (= x76 x1076)) (= x1304 0) (not (= x1193 x879)) (>= 4294967295 x1497) (<= x43 1461501637330902918203684832716283019655932542975) (<= 0 x1457) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x321) (not (= x879 x295)) (>= x321 0) (>= 1461501637330902918203684832716283019655932542975 x1446) (<= 1 x1076) (not (= x572 x1446)) (>= x408 1) (>= x473 0) (not (= x221 x879)) x1491 (<= x793 1461501637330902918203684832716283019655932542975) (= (> (x1198 x221) 0) x1491) (>= 1461501637330902918203684832716283019655932542975 x408) (<= 0 x761) (= x879 x940) (<= 1 x879) (<= 1 x1104) (>= x698 0) (>= 1461501637330902918203684832716283019655932542975 x891) (= x259 (< 0 (x1198 x879))) (= x793 x1446) x1410 (>= 1461501637330902918203684832716283019655932542975 x8) (>= x1446 1) (= 36 x629) (<= 1 x295) (= x1292 x1193) (>= 1461501637330902918203684832716283019655932542975 x698) (<= 1 x9) x574 (not (= x1446 x1076)) (<= x1104 4294967295) (not (= x879 x76)) (<= 0 x43) (>= x667 0) (>= 4294967295 x280) (<= 0 x577) (not (= x1193 x1076)) (not (= x1446 x76)) (not (= x1446 x879)) (= (x222 32) x9) (>= 1461501637330902918203684832716283019655932542975 x1193) (= (< 0 (x1198 x295)) x1135) (= x1076 x408) (>= x639 64) (<= x1346 1461501637330902918203684832716283019655932542975) (>= 4294967295 x61) (<= 1 x793) (<= 1 x940) (>= 4294967295 x1081) x1040 (<= x1148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8) (not (= x1076 x295)) (= (< 0 (x1198 x1446)) x1295) (<= x667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x761) (>= 1461501637330902918203684832716283019655932542975 x1524) (<= 1 x221) (>= x76 1) (>= 1461501637330902918203684832716283019655932542975 x879) (not (= x221 x1076)) (not (= x572 x1076)) (not (= x572 x221)) (not (= x1446 x1193)) x1135 (>= x1193 1) (not (= x221 x1446)) (<= x76 1461501637330902918203684832716283019655932542975) (= x1040 (= x9 x1193)) (= (< 0 (x1198 x76)) x1410) (not (= x295 x1446)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311) (<= x577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x76 x572)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x955) (= x879 x1231) (= 0 x579) (not (= x221 x295)) (not (= x572 x1193)) (>= 1461501637330902918203684832716283019655932542975 x1076) (not (= x879 x572)) (>= 1461501637330902918203684832716283019655932542975 x572) (>= 4294967295 x639) (not (= x76 x1193)) (<= x940 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x221))) x1518)))
(assert (= x875 (x1511 (x1506 x1413 x1008 x67 x759 x875 x923))))
(assert (x1522 x1447))
(assert (=> (>= 10000 x550) (= (x1252 x550) 0)))
(assert (=> (>= 10000 x1230) (= (x1252 x1230) 0)))
(assert (= x70 (x595 (x91 x70 x700))))
(assert (x1522 x454))
(assert (= (x1511 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) x952))
(assert (x1522 x1302))
(assert (x1522 x1362))
(assert (=> (<= x297 10000) (= (x1252 x297) 0)))
(assert (=> (<= x535 10000) (= (x1252 x535) 0)))
(assert (x680 x519))
(assert (= (x227 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x1393))
(assert (=> (>= 10000 x68) (= (x1252 x68) 0)))
(assert (= x775 (=> (and (and (= x1283 (x413 1461501637330902918203684832716283019655932542975 x420)) (= x1432 (< 0 x913)) (<= 32 x1389) (= (x1061 (+ 4 x73)) x158) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1389) (= x1307 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x954 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= (x1061 (+ 32 x158)) x1377)) (or (and (and (<= x1389 4294967295) (<= 32 x1389) (= x247 1)) x1432) (and (= x913 x247) (not x1432)))) x1086)))
(assert (x1522 x732))
(assert (= (x1262 (x1452 x98 x1069 x1111)) x1111))
(assert (= x125 (x1511 (x1471 x70 x730 x45 x277 x125))))
(assert (= (x1159 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) x621))
(assert (x1522 x153))
(assert (x1522 x1401))
(assert (x1522 x143))
(assert (x1522 x187))
(assert (x1522 x374))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= x1084 (x595 (x1471 x1084 x846 x214 x1301 x1405))))
(assert (x1522 x570))
(assert (x1522 x82))
(assert (x1522 x377))
(assert (x1522 x856))
(assert (x1522 x1419))
(assert (x1522 x954))
(assert (=> (>= 10000 x693) (= 0 (x1252 x693))))
(assert (= x602 (=> (and (= x1164 (x1311 x665)) (= (x1061 (+ 32 x665)) x165) (= x250 (x1061 (+ x373 32))) (= (x1311 x963) x284) (= (> x1164 0) x478)) (and (=> (and (not x478) (and (= x250 x1290) (= x165 x497) (= x1510 0))) x1435) (=> (and x478 (and (= (x1061 (+ 32 x250)) x437) (= x148 (> x1164 1)) (= (x1311 x165) x1479) (= x453 (x1061 (+ 32 x165))))) (and (=> (and (and (= x353 (x1061 (+ 32 x453))) (= x387 (x1061 (+ x437 32))) (= x35 (> x1164 2)) (= (x52 x453) x203)) x148) (and (=> (and (not x35) (and (= 2 x1510) (= x353 x497) (= x387 x1290))) x1435) (=> (and (and (= x416 (x1061 (+ x387 32))) (= x1469 (< 3 x1164)) (= x2 (x1061 (+ x353 32))) (= x1502 (x169 x353))) x35) (and (=> x1469 x857) (=> (and (and (= x497 x2) (= x1510 3) (= x416 x1290)) (not x1469)) x1435))))) (=> (and (and (= x453 x497) (= x437 x1290) (= x1510 1)) (not x148)) x1435)))))))
(assert (x1522 x1053))
(assert (= 0 (x1252 1461501637330902918203684832716283019655932542975)))
(assert (x1522 x128))
(assert (x1522 x75))
(assert (x1522 x1479))
(assert (x1522 x1026))
(assert (= x1222 (and (not x478) x675)))
(assert (x1522 x431))
(assert (x1522 x107))
(assert (=> (<= x131 10000) (= (x1252 x131) 0)))
(assert (x1522 x1228))
(assert (x1522 x1347))
(assert (=> (>= 10000 x388) (= 0 (x1252 x388))))
(assert (= x131 (x595 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498))))
(assert (x1522 x1371))
(assert (= x764 (x227 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (x1522 x643))
(assert (x1522 x984))
(assert (x1522 x546))
(assert (= (x1159 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x1264))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (< 10000 (x1452 x1413 x1143 x877)))
(assert (x1522 x964))
(assert (x1522 x699))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x1413 x1230 x441 x1035)))
(assert (x1522 x1367))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (x1522 x223))
(assert (x1522 x917))
(assert (x1522 x820))
(assert (= (x1262 (x1471 x98 x726 x436 x760 x332)) x436))
(assert (= 0 (x1252 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x721 1461501637330902918203684832716283019655932542975))
(assert (x1522 x758))
(assert (< 10000 (x1471 x131 x887 x29 x1064 x1133)))
(assert (x48 x1398))
(assert (=> (>= 10000 x700) (= 0 (x1252 x700))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1506 x984 x676 x124 x225 x978 x362)))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x1522 x513))
(assert (= (x1067 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x1357))
(assert (x1522 x1297))
(assert (= x608 (x1265 (x472 x1196 x771 x1044 x608 x1381 x650 x1183))))
(assert (x1522 x1245))
(assert (= (x595 (x1452 x98 x1069 x1111)) x98))
(assert (= x867 (or x202 x1376)))
(assert (x1522 x156))
(assert (x721 2065879269284))
(assert (= (x227 (x1452 x984 x1036 x515)) x1036))
(assert (= (x1511 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)) x634))
(assert (x1522 x1524))
(assert (x1522 x191))
(assert (x1522 x952))
(assert (= (and x1181 x1063) x1386))
(assert (x1522 x1468))
(assert (x1522 x1022))
(assert (x1522 x263))
(assert (=> (>= 10000 x1083) (= (x1252 x1083) 0)))
(assert (x1522 x1199))
(assert (x1522 x1158))
(assert (=> (<= x1138 10000) (= (x1252 x1138) 0)))
(assert (= (x1265 (x472 x98 x764 x800 x207 x79 x228 x557)) x207))
(assert (< (x1452 x1084 x674 x936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1008))
(assert (x1522 x1409))
(assert (> (x63 x70 x1162 x834 x1288) 10000))
(assert (x906 x160))
(assert (x721 18446744073709551613))
(assert (x1522 x1054))
(assert (= x1196 (x595 (x1452 x1196 x384 x1327))))
(assert (= (=> (and (or (and (and (= (x1061 (+ 32 x665)) x688) (= (* x183 32) x1098)) (not x1106)) x1106) (and (= 1 x851) (= x1106 (= x183 0)) (= (x1061 (+ (mod (+ x369 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x665)) x946) (or (<= x73 115792089237316195423570985008687907853269984665640564039457584007913129639902) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x73)) (< x665 x946) (= (x1061 (+ x73 32)) x665) (= x1387 (x193 192)) (<= 1 x247) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x73) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x73) (= x890 (x1061 (+ 32 x963))) (> x665 x73) (or (>= x73 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x73 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (<= 2 x946) (>= x313 1) (= (x193 x890) x939) (= x183 (x193 x939)) (= (* 32 x183) x369) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x73) (<= x73 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (= x549 (x193 x575)) (= (x193 x73) x851) (= (x193 x963) x313) (<= x73 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x963 (x1061 (+ x1387 32))) (<= x183 18446744073709551615))) x1268) x1086))
(assert (x1522 x541))
(assert (= (x595 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083)) x984))
(assert (x1522 x658))
(assert (= (x1262 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830)) x1478))
(assert (x1260 32 x971))
(assert (x1522 x760))
(assert (= (x1265 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x714))
(assert (x1522 x36))
(assert (x1522 x310))
(assert (not (x721 (x472 x1413 x433 x1367 x1046 x297 x710 x185))))
(assert (= (x595 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830)) x535))
(assert (x1522 x328))
(assert (= (x1511 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492)) x1348))
(assert (x1522 x908))
(assert (x1522 x121))
(assert (x1522 x360))
(assert (=> (>= 10000 x929) (= (x1252 x929) 0)))
(assert (= (x1252 18446744073709551487) 0))
(assert (x1522 x369))
(assert (x1522 x718))
(assert (=> (>= 10000 x1036) (= (x1252 x1036) 0)))
(assert (x1522 x707))
(assert (x1522 x738))
(assert (= x1517 (=> (and (and (= x1124 (x1061 (+ 32 x252))) (= (x966 x917) x1347) (= x492 (x966 x74)) (= (x1061 (+ x74 32)) x1293) (= x917 (x1061 (+ x555 32))) (= (> x492 0) x1224)) (or (and (and (= x766 (x966 x1293)) (= x168 x288) (= (x1061 (+ x1124 32)) x782) (= x272 1) (not x27) (= x782 x281) (= (x1061 (+ x1293 32)) x168) (= x27 (> x492 1))) x1224) (and (and (= x1124 x281) (= x1293 x288) (= x272 0)) (not x1224)))) x801)))
(assert (x1522 x991))
(assert (x1522 x204))
(assert (x1522 x1307))
(assert (x1522 x661))
(assert (=> (>= 10000 x676) (= (x1252 x676) 0)))
(assert (x721 18446744073709551614))
(assert (= x733 (x1262 (x472 x535 x873 x733 x631 x1078 x1340 x967))))
(assert (x1522 x1414))
(assert (= (x227 (x1452 x131 x23 x440)) x23))
(assert (x1522 x800))
(assert (not (x721 (x1506 x1413 x1008 x67 x759 x875 x923))))
(assert (x451 x1326))
(assert (x1522 x745))
(assert (= (x1252 (x1471 x131 x887 x29 x1064 x1133)) (x1471 x131 x887 x29 x1064 x1133)))
(assert (x1522 x777))
(assert (x1390 x527))
(assert (x1522 x834))
(assert (x1522 x368))
(assert (= x70 (x595 (x1471 x70 x730 x45 x277 x125))))
(assert (= (x1067 (x472 x1413 x433 x1367 x1046 x297 x710 x185)) x185))
(assert (= x254 (and (not x1402) x1151)))
(assert (x1522 x1077))
(assert (=> (>= 10000 x67) (= (x1252 x67) 0)))
(assert (x1522 x1138))
(assert (x1522 x818))
(assert (x1522 x635))
(assert (x1522 x891))
(assert (x1522 x561))
(assert (x1522 x1066))
(assert (x1522 x935))
(assert (x1522 x172))
(assert (x1522 x752))
(assert (= 0 (x1252 2065879269316)))
(assert (x1522 x1162))
(assert (x1522 x888))
(assert (x1522 x970))
(assert (< 10000 (x63 66 x1430 x1137 x267)))
(assert (x1522 x1344))
(assert (= (x227 (x1471 x535 x1245 x1105 x1466 x582)) x1245))
(assert (= (x1252 57896044618658097711785492504343953926634992332820282019728792003956564820036) 0))
(assert (= (x227 (x1506 x1196 x397 x1199 x973 x888 x754)) x397))
(assert (not (x721 (x63 x1413 x1230 x441 x1035))))
(assert (x1522 x1165))
(assert (=> (>= 10000 x1218) (= 0 (x1252 x1218))))
(assert (= x1367 (x1262 (x472 x1413 x433 x1367 x1046 x297 x710 x185))))
(assert (x1522 x1460))
(assert (x1522 x909))
(assert (= x534 true))
(assert (x1522 x2))
(assert (not (x721 (x1506 x984 x676 x124 x225 x978 x362))))
(assert (x1522 x76))
(assert (not (x721 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874))))
(assert (= (x1252 (x472 x1196 x771 x1044 x608 x1381 x650 x1183)) (x472 x1196 x771 x1044 x608 x1381 x650 x1183)))
(assert (not (x721 (x472 x1084 x1473 x1018 x654 x952 x621 x488))))
(assert (x1522 x724))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x91 x70 x700)))
(assert (x1522 x108))
(assert (x1522 x1039))
(assert (x1522 x73))
(assert (x906 32))
(assert (x1522 x157))
(assert (x1522 x638))
(assert (x1522 x884))
(assert (x1522 x350))
(assert (> (x1452 x984 x1036 x515) 10000))
(assert (=> (>= 10000 x582) (= (x1252 x582) 0)))
(assert (=> (>= 10000 x670) (= 0 (x1252 x670))))
(assert (= x1051 (and x197 x1220)))
(assert (= 0 (x1252 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (= (or x112 x618) x1331))
(assert (x1522 x1184))
(assert (=> (<= x887 10000) (= 0 (x1252 x887))))
(assert (x1522 x343))
(assert (x1522 x730))
(assert (not (x721 (x1471 x1084 x846 x214 x1301 x1405))))
(assert (= x654 (x1265 (x472 x1084 x1473 x1018 x654 x952 x621 x488))))
(assert (= (and x585 (not x742)) x565))
(assert (x1522 x532))
(assert (x1522 x712))
(assert (> (x472 x1196 x771 x1044 x608 x1381 x650 x1183) 10000))
(assert (x1522 x977))
(assert (x1522 x71))
(assert (x1113 x399 32))
(assert (= (x1159 (x1506 x1084 x374 x65 x657 x390 x1068)) x1068))
(assert (x1522 x663))
(assert (not (x721 (x63 x70 x1162 x834 x1288))))
(assert (= (x1265 (x1471 x1413 x765 x570 x552 x378)) x552))
(assert (= x1073 (x1511 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030))))
(assert (x1522 x587))
(assert (< 10000 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)))
(assert (x1522 x62))
(assert (=> (<= x1466 10000) (= 0 (x1252 x1466))))
(assert (x1260 32 x1497))
(assert (x1522 x768))
(assert (= x1020 (x1067 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x779))
(assert (=> (<= x1334 10000) (= 0 (x1252 x1334))))
(assert (= (x227 (x1452 64 x593 1)) x593))
(assert (< 10000 (x1506 x1084 x374 x65 x657 x390 x1068)))
(assert (= (x91 x98 x648) (x1252 (x91 x98 x648))))
(assert (x1522 x810))
(assert (x1522 x104))
(assert (=> (<= x674 10000) (= (x1252 x674) 0)))
(assert (=> (>= 10000 x948) (= (x1252 x948) 0)))
(assert (= x570 (x1262 (x1471 x1413 x765 x570 x552 x378))))
(assert (=> (>= 10000 x694) (= (x1252 x694) 0)))
(assert (=> (>= 10000 x546) (= (x1252 x546) 0)))
(assert (= (x227 (x1452 x70 x1443 x532)) x1443))
(assert (x1522 x892))
(assert (=> (<= x1534 10000) (= (x1252 x1534) 0)))
(assert (= (x1159 (x1506 x131 x1120 x694 x671 x392 x584)) x584))
(assert (x1522 x388))
(assert (x1522 x886))
(assert (x1522 x804))
(assert (not (x721 (x91 x131 x1312))))
(assert (= (x1265 (x1506 x1413 x1008 x67 x759 x875 x923)) x759))
(assert (= (x1511 (x472 x1196 x771 x1044 x608 x1381 x650 x1183)) x1381))
(assert (= x461 (x1265 (x63 x535 x738 x121 x461))))
(assert (x1522 x146))
(assert (not (x721 (x1452 x1413 x1143 x877))))
(assert (x1522 x9))
(assert (< 10000 (x1471 x70 x730 x45 x277 x125)))
(assert (x1522 x237))
(assert (x1522 x1271))
(assert (= (x1159 (x1506 x1196 x397 x1199 x973 x888 x754)) x754))
(assert (x1522 x949))
(assert (=> (<= x1327 10000) (= 0 (x1252 x1327))))
(assert (x1522 x1339))
(assert (x1522 x264))
(assert (x680 x1152))
(assert (x1522 x357))
(assert (x1522 x1193))
(assert (< 10000 (x1506 x1413 x1008 x67 x759 x875 x923)))
(assert (x1390 x18))
(assert (x721 18446744073709551487))
(assert (=> (<= x1020 10000) (= (x1252 x1020) 0)))
(assert (x1522 x879))
(assert (x1522 x313))
(assert (= x390 (x1511 (x1506 x1084 x374 x65 x657 x390 x1068))))
(assert (< 10000 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)))
(assert (x1522 x528))
(assert (=> (<= x874 10000) (= 0 (x1252 x874))))
(assert (= (x227 (x91 x131 x1312)) x1312))
(assert (x1522 x337))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)))
(assert (< 10000 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)))
(assert (x1390 x377))
(assert (= x233 (or x283 x1386)))
(assert (= (x1471 x70 x730 x45 x277 x125) (x1252 (x1471 x70 x730 x45 x277 x125))))
(assert (x1522 x130))
(assert (= (x472 x984 x1017 x1022 x668 x1348 x1136 x1492) (x1252 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x1522 x98))
(assert (=> (>= 10000 x1373) (= (x1252 x1373) 0)))
(assert (x1522 x729))
(assert (not (x721 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (= x1120 (x227 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (x1522 x722))
(assert (= (x595 (x63 x1413 x1230 x441 x1035)) x1413))
(assert (x1522 x1425))
(assert (= x655 (x1262 (x63 x1196 x790 x655 x22))))
(assert (x1522 x946))
(assert (=> (>= 10000 x593) (= (x1252 x593) 0)))
(assert (= (x595 (x91 x984 x1355)) x984))
(assert (x1522 x702))
(assert (= (x227 (x1471 x98 x726 x436 x760 x332)) x726))
(assert (x1522 x619))
(assert (< 10000 (x1506 x131 x1120 x694 x671 x392 x584)))
(assert (x1522 x170))
(assert (= x58 (or x162 x1244)))
(assert (x1522 x281))
(assert (x1522 x822))
(assert (= (x1265 (x1471 x984 x20 x208 x1050 x1011)) x1050))
(assert (x1522 x1329))
(assert (x1522 x743))
(assert (x1522 x791))
(assert (x1522 x33))
(assert (x1522 x1462))
(assert (= (and (not x1106) x256) x1508))
(assert (x1522 x679))
(assert (= (x472 x98 x764 x800 x207 x79 x228 x557) (x1252 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (= x65 (x1262 (x1506 x1084 x374 x65 x657 x390 x1068))))
(assert (=> (>= 10000 x1426) (= 0 (x1252 x1426))))
(assert (=> (>= 10000 x1068) (= (x1252 x1068) 0)))
(assert (x1390 x684))
(assert (x1522 x815))
(assert (=> (>= 10000 x441) (= 0 (x1252 x441))))
(assert (=> (<= x1137 10000) (= 0 (x1252 x1137))))
(assert (= (=> (and (= (x464 x2) x257) (= (x1061 (+ x416 32)) x1476) (= (not (> x1164 4)) x1189) (= (x1061 (+ 32 x2)) x1451)) (and (=> (and (= x1476 x1290) (= 4 x1510) (= x497 x1451)) x1435) x1189)) x857))
(assert (x1522 x192))
(assert (= (or x1322 x438) x1172))
(assert (x1522 x676))
(assert (x1522 x850))
(assert (x1522 x1068))
(assert (> (x63 x98 x419 x561 x795) 10000))
(assert (x1522 x245))
(assert (= 0 (x1252 2065879269444)))
(assert (= (x1262 (x63 x535 x738 x121 x461)) x121))
(assert (= x618 (and x543 x1365)))
(assert (x950 x702))
(assert (x1522 x47))
(assert (=> (<= x1119 10000) (= (x1252 x1119) 0)))
(assert (x1522 x1092))
(assert (=> (>= 10000 x216) (= 0 (x1252 x216))))
(assert (x1522 x1183))
(assert (x1522 x519))
(assert (x1522 x1103))
(assert (x1522 x179))
(assert (< (x472 x1196 x771 x1044 x608 x1381 x650 x1183) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x861))
(assert (x1522 x948))
(assert (= (or x171 x243) x1382))
(assert (= x658 (x1159 (x1506 x535 x40 x1119 x504 x1481 x658))))
(assert (=> (<= x767 10000) (= (x1252 x767) 0)))
(assert (= (x227 (x91 x1196 x285)) x285))
(assert (=> (>= 10000 x1492) (= (x1252 x1492) 0)))
(assert (x1522 x755))
(assert (x1129 x533 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x1522 x923))
(assert (x1522 x290))
(assert (x1522 x461))
(assert (= (x227 (x472 x131 x1272 x550 x970 x44 x36 x190)) x1272))
(assert (x1522 x456))
(assert (x1522 x780))
(assert (=> (<= x790 10000) (= (x1252 x790) 0)))
(assert (=> (>= 10000 x1076) (= (x1252 x1076) 0)))
(assert (< 10000 (x1471 x535 x1245 x1105 x1466 x582)))
(assert (x1522 x1178))
(assert (not (x721 (x1471 x1413 x765 x570 x552 x378))))
(assert (x1522 x1384))
(assert (x1522 x1430))
(assert (x1522 x31))
(assert (x1522 x694))
(assert (=> (>= 10000 x1468) (= 0 (x1252 x1468))))
(assert (=> (>= 10000 x984) (= 0 (x1252 x984))))
(assert (=> (>= 10000 x1058) (= 0 (x1252 x1058))))
(assert (= (x1511 (x472 x535 x873 x733 x631 x1078 x1340 x967)) x1078))
(assert (x1522 x268))
(assert (x1522 x1458))
(assert (x1113 x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1429))
(assert (=> (<= x417 10000) (= 0 (x1252 x417))))
(assert (=> (>= 10000 x830) (= 0 (x1252 x830))))
(assert (not (x721 (x91 x1196 x285))))
(assert (x1522 x1476))
(assert (x1522 x1530))
(assert (= x1071 (or x843 x609)))
(assert (x1522 x763))
(assert (x1522 x1140))
(assert (=> (>= 10000 x45) (= (x1252 x45) 0)))
(assert (=> (>= 10000 x621) (= 0 (x1252 x621))))
(assert (x1522 x236))
(assert (x721 18446746139588821059))
(assert (x1522 x835))
(assert (= x531 (x1262 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874))))
(assert (=> (>= 10000 x557) (= 0 (x1252 x557))))
(assert (= (x91 x1084 x388) (x1252 (x91 x1084 x388))))
(assert (= (x1252 (x1471 x1084 x846 x214 x1301 x1405)) (x1471 x1084 x846 x214 x1301 x1405)))
(assert (x1522 x174))
(assert (= x1196 (x595 (x63 x1196 x790 x655 x22))))
(assert (x1522 x1404))
(assert (x1522 x1408))
(assert (=> (>= 10000 x1272) (= (x1252 x1272) 0)))
(assert (x1113 x1398 32))
(assert (x1522 x746))
(assert (x1522 x1064))
(assert (= (x227 (x63 x98 x419 x561 x795)) x419))
(assert (=> (>= 10000 x214) (= (x1252 x214) 0)))
(assert (=> (>= 10000 x671) (= 0 (x1252 x671))))
(assert (not (x721 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421))))
(assert (< (x1506 x1413 x1008 x67 x759 x875 x923) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x887))
(assert (x1522 x196))
(assert (= (x227 (x63 66 x1430 x1137 x267)) x1430))
(assert (x1522 x1453))
(assert (x1522 x1446))
(assert (x906 x1164))
(assert (x1522 x393))
(assert (x1522 x571))
(assert (=> (<= x118 10000) (= 0 (x1252 x118))))
(assert (x1522 x1088))
(assert (x1522 x817))
(assert (x1522 x1150))
(assert (=> (<= x722 10000) (= 0 (x1252 x722))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x91 x1413 x1211)))
(assert (x1522 x445))
(assert (= (x1262 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) x299))
(assert (not (x721 (x63 x131 x115 x176 x812))))
(assert (x1522 x425))
(assert (x1522 x1456))
(assert (x1522 x647))
(assert (x1522 x65))
(assert (= (and x58 (not x12)) x202))
(assert (x1522 x767))
(assert (x680 x18))
(assert (= x402 (x1159 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (= x342 (x1511 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (< 10000 (x63 x1084 x1100 x1158 x959)))
(assert (=> (<= x515 10000) (= (x1252 x515) 0)))
(assert (= (x1252 (x1471 x535 x1245 x1105 x1466 x582)) (x1471 x535 x1245 x1105 x1466 x582)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x131 x23 x440)))
(assert (not (x721 (x1452 x535 x1041 x1419))))
(assert (= x1513 (x227 (x63 x984 x1513 x216 x767))))
(assert (= x505 (x1265 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (= x967 (x1067 (x472 x535 x873 x733 x631 x1078 x1340 x967))))
(assert (x1260 160 x61))
(assert (x1522 x1059))
(assert (< 10000 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)))
(assert (x1522 x1243))
(assert (= (x595 (x91 x131 x1312)) x131))
(assert (x721 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (x906 x329))
(assert (x1390 x607))
(assert (x1522 x1352))
(assert (x1522 x184))
(assert (x1522 x933))
(assert (x1522 x399))
(assert (not (x721 (x1471 x131 x887 x29 x1064 x1133))))
(assert (=> (<= x1228 10000) (= (x1252 x1228) 0)))
(assert (x1522 x1031))
(assert (= x88 (and x256 x1106)))
(assert (x1522 x1361))
(assert (< (x1471 x984 x20 x208 x1050 x1011) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x70) (= 0 (x1252 x70))))
(assert (x1522 x398))
(assert (=> (>= 10000 x1196) (= 0 (x1252 x1196))))
(assert (x1522 x216))
(assert (x1522 x214))
(assert (= (x595 (x1506 x1413 x1008 x67 x759 x875 x923)) x1413))
(assert (x1522 x1240))
(assert (x721 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (= x877 (x1262 (x1452 x1413 x1143 x877))))
(assert (x1522 x550))
(assert (x1390 x399))
(assert (x1522 x1314))
(assert (x1522 x244))
(assert (=> (<= x754 10000) (= (x1252 x754) 0)))
(assert (= x631 (x1265 (x472 x535 x873 x733 x631 x1078 x1340 x967))))
(assert (x1522 x1393))
(assert (< 10000 (x1471 x1413 x765 x570 x552 x378)))
(assert (=> (>= 10000 x800) (= (x1252 x800) 0)))
(assert (= (x1252 4294967295) 0))
(assert (x1522 x844))
(assert (x1522 x552))
(assert (x1522 x1364))
(assert (< 10000 (x63 x1413 x1230 x441 x1035)))
(assert (=> (<= x1323 10000) (= (x1252 x1323) 0)))
(assert (= (x1252 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)) (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)))
(assert (=> (<= x1022 10000) (= (x1252 x1022) 0)))
(assert (x1522 x41))
(assert (x1113 x663 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1383))
(assert (x1522 x389))
(assert (= x803 (x1265 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (= x671 (x1265 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (x1522 x901))
(assert (= x1333 (=> (and (= x198 (x253 x681)) (<= x56 5) (= (x1061 (+ x107 32)) x231) (= (x1061 (+ 128 x881)) x404) (= x56 (x253 x213)) (= x87 (x1061 (+ x881 32))) (<= x881 18446744073709551614) (= x681 (x1061 (+ x1273 32))) (or (>= x213 57896044618658097711785492504343953926634992332820282019728792003956564820645) (<= x213 2065879269316)) (> x404 x881) (or (>= x881 115792089237316195423570985008687907853269984665640564039457584007913129639809) (>= 18446744073709551487 x881)) (<= x881 18446744073709551615) (<= x881 18446744073709551615) (= (not (< 1 x526)) x1463) (<= x881 18446744073709551614) (= (x1061 (+ 32 x638)) x1273) (= (x253 x1273) x1531) (= (x253 x638) x485) (<= 128 x1285) (= x107 (x1061 (+ x87 32))) (= x1285 (x1486 (- x474 x213))) (not (> x881 x404)) (not (= x881 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x638 (x1061 (+ 32 x213))) (<= x485 1461501637330902918203684832716283019655932542975) (or (<= x881 18446744073709551487) (>= x881 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (<= x881 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1285 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and x1463 (=> (= x1085 x404) x1259)))))
(assert (x1522 x932))
(assert (x1522 x613))
(assert (=> (<= x1421 10000) (= 0 (x1252 x1421))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x1196 x384 x1327)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x91 x535 x632)))
(assert (x1260 32 x183))
(assert (x1522 x407))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x1522 x54))
(assert (=> (<= x584 10000) (= (x1252 x584) 0)))
(assert (=> (>= 10000 x285) (= 0 (x1252 x285))))
(assert (= (x227 (x1452 x535 x1041 x1419)) x1041))
(assert (=> (>= 10000 x726) (= (x1252 x726) 0)))
(assert (x1522 x129))
(assert (x1522 x1052))
(assert (x1522 x1177))
(assert (x1522 x912))
(assert (=> (<= x1393 10000) (= 0 (x1252 x1393))))
(assert (x1522 x596))
(assert (= x585 (or x400 x686)))
(assert (= (x1265 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x1373))
(assert (x1522 x776))
(assert (x1522 x1074))
(assert (x1522 x1426))
(assert (< 10000 (x1452 x535 x1041 x1419)))
(assert (x1522 x998))
(assert (= (x1067 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)) x652))
(assert (= (and x1402 x1151) x414))
(assert (x1522 x509))
(assert (x1522 x726))
(assert (= (and x623 x139) x239))
(assert (x1522 x1532))
(assert (x1522 x985))
(assert (=> (<= x1046 10000) (= (x1252 x1046) 0)))
(assert (x1522 x677))
(assert (= x118 (x1262 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x91 x984 x1355)))
(assert (x1522 x90))
(assert (x1522 x1470))
(assert (= x1320 (=> (and (or (and (not x12) (= x90 x1215)) (and x12 (and (= x90 1) (<= x1179 4294967295) (>= x1179 32)))) (and (>= x1052 1) (> x935 x265) (<= x265 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1499) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x265)) (= x1499 (x6 x265)) (= x200 (x413 1461501637330902918203684832716283019655932542975 x682)) (= x12 (> x1215 0)) (= (x413 1461501637330902918203684832716283019655932542975 x780) x410) (<= x265 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1061 (+ 32 x265)) x935) (<= x1179 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x192 (x1061 (+ 4 x935))) (<= 32 x1179) (not (= x265 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x265)) (<= x265 115792089237316195423570985008687907853269984665640564039457584007913129639934))) x1324)))
(assert (= (x595 (x63 x98 x419 x561 x795)) x98))
(assert (x1522 x1398))
(assert (= (x227 (x1452 x1084 x674 x936)) x674))
(assert (=> (>= 10000 x282) (= 0 (x1252 x282))))
(assert (x1522 x1058))
(assert (x1522 x266))
(assert (< (x63 x1084 x1100 x1158 x959) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x987))
(assert (= x1063 (and x1172 x590)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x968 0)))
(assert (x1522 x165))
(assert (= (=> (and (= (x1061 (+ x951 x861)) x1384) (or (and (= (<= x763 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x763 x95)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x763) (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 1 x174) (= x75 (x1061 (+ x1384 x496))) (= (x1486 (- x474 x206)) x903) (= (* 32 x971) x687) (= (+ 448 x116) x147) (not (> x598 x456)) (= x1527 (x1486 (- x456 x75))) (= (x1061 (+ x75 32)) x1238) (= (x1061 (+ 32 x286)) x554) (= x1202 (x253 x752)) (= x763 (x253 228)) (>= x1527 128) (= x971 (x253 x286)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x206) (= x116 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1004)) (= (x269 128) x961) (<= x1535 2) (= (x253 x1422) x206) (<= x1132 1461501637330902918203684832716283019655932542975) (= (x1061 (+ x1202 x75)) x286) (= x1132 (x253 x1384)) (<= x116 18446744073709551167) (<= x496 18446744073709551615) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x664) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456)) (and (= (<= x664 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456)) (> x456 x664))) (>= 18446744073709551615 x861) (= x1110 (< x554 x598)) (not (or (and (> x951 x903) (= (<= x951 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x903 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x903) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x951)))) (= (x1061 (+ 32 x1384)) x699) (= x598 (x1061 (+ x687 x554))) (<= x971 18446744073709551615) (= x496 (x253 x699)) (<= x206 18446744073709551615) (= (* 32 x971) x798) (= x1422 (x1061 (+ x763 36))) (<= 64 x206) (= x752 (x1061 (+ x1238 32))) (= x456 (x1061 (+ x206 x951))) (or (<= x763 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x763)) (= x449 (x253 x1238)) (or (<= x1384 18446746139588821027) (>= x1384 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (= (x253 x951) x861) (= x1535 (x253 x75)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x157) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1527) (>= 18446744073709551615 x1202) (= (x1486 (- x456 x1384)) x157) (= (x1061 (+ x286 31)) x664) (>= x157 128) (or (>= 18446746139588821059 x456) (>= x456 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= 160 x205) (= x95 (- x474 67)) (= x1004 (+ 63 x798)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x75) (>= 18446746139588821027 x75)) (>= x116 1) (= 1 x961) (or (>= 18446746139588821027 x286) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x286)) (= x951 (x1061 (+ x1422 32)))) (and (=> (and (not x1110) (= x425 x147)) x1186) (=> x1110 x1380))) x1518))
(assert (x1522 x231))
(assert (x1522 x408))
(assert (x1522 x481))
(assert (< 10000 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)))
(assert (= (or x1508 x88) x975))
(assert (= (x227 (x1452 x1413 x1143 x877)) x1143))
(assert (= (x595 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x70))
(assert (x1522 x307))
(assert (= (x1265 (x1506 x1084 x374 x65 x657 x390 x1068)) x657))
(assert (x906 x692))
(assert (< (x1452 x984 x1036 x515) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x297 (x1511 (x472 x1413 x433 x1367 x1046 x297 x710 x185))))
(assert (= x789 (x690 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x1196 x781 x1138 x1039 x696)))
(assert (x1522 x1020))
(assert (x1113 x1152 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1265 (x1471 x98 x726 x436 x760 x332)) x760))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x1084 x1473 x1018 x654 x952 x621 x488)))
(assert (= x1084 (x595 (x1452 x1084 x674 x936))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1506 x1084 x374 x65 x657 x390 x1068)))
(assert (x1522 x409))
(assert (x680 x377))
(assert (x1522 x450))
(assert (x1522 x559))
(assert (< (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 66 x1430 x1137 x267)))
(assert (x1522 x265))
(assert (= x214 (x1262 (x1471 x1084 x846 x214 x1301 x1405))))
(assert (x1522 x1069))
(assert (x1522 x1273))
(assert (= x790 (x227 (x63 x1196 x790 x655 x22))))
(assert (=> (<= x1357 10000) (= (x1252 x1357) 0)))
(assert (x1522 x1073))
(assert (x680 x1004))
(assert (x1522 x725))
(assert (x1522 x967))
(assert (= x1259 (=> (and (= (x1061 (+ x539 32)) x1088) (= x1255 (* 32 x329)) (= (x1061 (+ 32 x1085)) x60) (>= x1029 1) (> x1029 x1085) (= x1402 (> x329 0)) (or (and (< x150 x95) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x150))) (and (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x150))) (or (>= 2065879269376 x150) (>= x150 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= x1085 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1486 (- x474 x914)) x401) (<= x1085 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1061 (+ x1085 (mod (+ x1255 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1029) (>= 18446744073709551615 x329) (= (* x329 160) x914) (= x150 (x253 164)) (= x539 (x1061 (+ x150 36))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1085) (= (+ 32 x1126) x1516) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x401) (<= x1088 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1088)) (< x401 x1088)))) (= (x253 x539) x329)) (and (=> (and (not x1402) (= x144 x1029)) x930) (=> x1402 x1131)))))
(assert (= x216 (x1262 (x63 x984 x1513 x216 x767))))
(assert (x1522 x1285))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x98 x726 x436 x760 x332)))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1522 x1428))
(assert (=> (<= x20 10000) (= (x1252 x20) 0)))
(assert (x1522 x167))
(assert (= x1100 (x227 (x63 x1084 x1100 x1158 x959))))
(assert (< 10000 (x63 x535 x738 x121 x461)))
(assert (x906 x567))
(assert (x1522 x555))
(assert (x1260 32 x526))
(assert (x1522 x1388))
(assert (x1522 x465))
(assert (x906 x625))
(assert (x451 x1389))
(assert (not (x721 (x91 x98 x648))))
(assert (=> (<= x570 10000) (= 0 (x1252 x570))))
(assert (= (and x1374 (not x1469)) x558))
(assert (=> (>= 10000 x381) (= (x1252 x381) 0)))
(assert (x1522 x548))
(assert (x1522 x705))
(assert (= (x1252 (x91 x131 x1312)) (x91 x131 x1312)))
(assert (=> (<= x362 10000) (= 0 (x1252 x362))))
(assert (x1522 x1441))
(assert (= (x1159 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)) x821))
(assert (=> (>= 10000 x710) (= 0 (x1252 x710))))
(assert (=> (<= x65 10000) (= (x1252 x65) 0)))
(assert (= x1121 (x227 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x929))
(assert (=> (<= x1405 10000) (= 0 (x1252 x1405))))
(assert (x680 x529))
(assert (=> (<= x1024 10000) (= (x1252 x1024) 0)))
(assert (= x98 (x595 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (= 0 (x1252 2065879269376)))
(assert (x1522 x928))
(assert (x1522 x1048))
(assert (x1522 x615))
(assert (x1522 x792))
(assert (x1522 x981))
(assert (x1522 x719))
(assert (= x1136 (x1159 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x1260 160 x329))
(assert (x1522 x437))
(assert (x1522 x682))
(assert (x1522 x1405))
(assert (x1522 x959))
(assert (x1522 x396))
(assert (=> (<= x1277 10000) (= (x1252 x1277) 0)))
(assert (x1113 x527 32))
(assert (x1522 x774))
(assert (x1390 x663))
(assert (= (x1262 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x1299))
(assert (x1522 x1254))
(assert (x1522 x133))
(assert (= (x1067 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x417))
(assert (=> (>= 10000 x1312) (= 0 (x1252 x1312))))
(assert (x721 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (x680 32))
(assert (x48 x663))
(assert (=> (<= x1089 10000) (= 0 (x1252 x1089))))
(assert (x1522 x194))
(assert (x1522 x404))
(assert (x1522 x1394))
(assert (=> (<= x978 10000) (= 0 (x1252 x978))))
(assert (= x1058 (x1159 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (= (x91 x1413 x1211) (x1252 (x91 x1413 x1211))))
(assert (= 64 (x595 (x1452 64 x593 1))))
(assert (x1522 x55))
(assert (x1522 x85))
(assert (=> (<= x1446 10000) (= 0 (x1252 x1446))))
(assert (x1113 x1447 32))
(assert (=> (>= 10000 x1291) (= (x1252 x1291) 0)))
(assert (x1522 x347))
(assert (x1522 x132))
(assert (= (x227 (x472 x1413 x433 x1367 x1046 x297 x710 x185)) x433))
(assert (= (x1028 x533 452312848583266388373324160190187140051835877600158453279131187530910662656) (x209 x533 248)))
(assert (x1522 x64))
(assert (x1522 x1289))
(assert (= (x1511 (x1506 x1196 x397 x1199 x973 x888 x754)) x888))
(assert (x1522 x392))
(assert (x1522 x1213))
(assert (=> (<= x1493 10000) (= 0 (x1252 x1493))))
(assert (x1522 x79))
(assert (x1113 x249 1461501637330902918203684832716283019655932542976))
(assert (x1522 x1099))
(assert (x1522 x681))
(assert (x1522 x773))
(assert (= x98 (x595 (x91 x98 x648))))
(assert (x1390 x780))
(assert (=> (>= 10000 x771) (= 0 (x1252 x771))))
(assert (= (x690 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x1421))
(assert (x48 x1004))
(assert (not (x721 (x63 66 x1430 x1137 x267))))
(assert (=> (<= x536 10000) (= 0 (x1252 x536))))
(assert (x1522 x1348))
(assert (x1522 x1202))
(assert (x1522 x97))
(assert (= x1355 (x227 (x91 x984 x1355))))
(assert (< (x1506 x98 x422 x1266 x1161 x925 x1406) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x684))
(assert (x1522 x105))
(assert (x1522 x560))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1522 x978))
(assert (=> (>= 10000 x342) (= (x1252 x342) 0)))
(assert (=> (<= x1443 10000) (= (x1252 x1443) 0)))
(assert (=> (>= 10000 x1133) (= 0 (x1252 x1133))))
(assert (x1522 x1334))
(assert (x1522 x766))
(assert (=> (>= 10000 x458) (= 0 (x1252 x458))))
(assert (x680 x1447))
(assert (x1522 x521))
(assert (x1522 x997))
(assert (x906 x1497))
(assert (= (x1511 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x1218))
(assert (x1522 x754))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x1522 x1481))
(assert (< 10000 (x1506 x535 x40 x1119 x504 x1481 x658)))
(assert (x1522 x1016))
(assert (x1522 x1351))
(assert (=> (<= x424 10000) (= (x1252 x424) 0)))
(assert (x906 160))
(assert (x1522 x529))
(assert (x1522 x860))
(assert (x1260 32 x329))
(assert (x1522 x422))
(assert (x1522 x483))
(assert (x1522 x1413))
(assert (x680 x656))
(assert (x1522 x1395))
(assert (x1522 x330))
(assert (=> (<= x759 10000) (= (x1252 x759) 0)))
(assert (x1522 x1290))
(assert (= x20 (x227 (x1471 x984 x20 x208 x1050 x1011))))
(assert (x1522 x335))
(assert (= (x1252 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)))
(assert (x1522 x1100))
(assert (x1522 x206))
(assert (x1522 x365))
(assert (= (and x309 x735) x728))
(assert (x680 x663))
(assert (= (x227 (x1506 x1413 x1008 x67 x759 x875 x923)) x1008))
(assert (x1522 x109))
(assert (= (x1265 (x1471 x1196 x781 x1138 x1039 x696)) x1039))
(assert (x1522 x240))
(assert (x1522 x504))
(assert (not (x721 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x116))
(assert (=> (>= 10000 x1120) (= 0 (x1252 x1120))))
(assert (x1522 x376))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x1522 x359))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x70 x1443 x532)))
(assert (x1522 x631))
(assert (= x694 (x1262 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (x1522 x1437))
(assert (x1522 x625))
(assert (x1522 x1203))
(assert (= x1151 (or x1467 x1168)))
(assert (= x36 (x1159 (x472 x131 x1272 x550 x970 x44 x36 x190))))
(assert (= x696 (x1511 (x1471 x1196 x781 x1138 x1039 x696))))
(assert (not (x721 (x63 x1084 x1100 x1158 x959))))
(assert (x1522 x753))
(assert (x1522 x940))
(assert (= 0 (x1252 18446744073709551518)))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (x1522 x1120))
(assert (x1522 x1427))
(assert (x1522 x1171))
(assert (not (x721 (x91 x984 x1355))))
(assert (= (x1252 18446744073709551613) 0))
(assert (x1522 x656))
(assert (= x197 (and (not x139) x623)))
(assert (= 0 (x1252 57896044618658097711785492504343953926634992332820282019728792003956564820645)))
(assert (= (x227 (x1506 x984 x676 x124 x225 x978 x362)) x676))
(assert (x1522 x1497))
(assert (= (x1252 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (=> (<= x504 10000) (= (x1252 x504) 0)))
(assert (x1522 x945))
(assert (x1113 x702 1461501637330902918203684832716283019655932542976))
(assert (x1522 x685))
(assert (= x984 (x595 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (= (x1471 x984 x20 x208 x1050 x1011) (x1252 (x1471 x984 x20 x208 x1050 x1011))))
(assert (x1522 x1354))
(assert (x1522 x341))
(assert (x1522 x228))
(assert (x1522 x723))
(assert (not (x721 (x63 x535 x738 x121 x461))))
(assert (= (x1262 (x1506 x70 x1493 x347 x505 x1291 x402)) x347))
(assert (=> (<= x873 10000) (= (x1252 x873) 0)))
(assert (x1522 x1288))
(assert (x1522 x1323))
(assert (x1522 x484))
(assert (x1522 x881))
(assert (x680 x420))
(assert (= x874 (x690 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874))))
(assert (x1260 160 x625))
(assert (=> (>= 10000 x1282) (= 0 (x1252 x1282))))
(assert (x1522 x1513))
(assert (> (x1506 x1196 x397 x1199 x973 x888 x754) 10000))
(assert (= (x690 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) x1089))
(assert (x1522 x870))
(assert (x1522 x67))
(assert (x1522 x1381))
(assert (=> (>= 10000 x648) (= (x1252 x648) 0)))
(assert (< (x91 x98 x648) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1260 32 x1477))
(assert (= x331 (=> (and (= x1147 (x683 160)) (= (x1486 (- x1470 32)) x266) (= x707 (x1061 (+ x1203 32))) (= x74 (x1061 (+ 64 x1352))) (= (x624 x1203) x1413) (= x1352 (x1061 (+ x1203 32))) (= x1437 x359) (= x656 (x683 x1147)) (<= x619 1461501637330902918203684832716283019655932542975) (= (+ x1404 32) x97) (= (x1486 (- x74 x1203)) x1470) (> x74 x1203) (= (x1061 (+ x1352 32)) x1532) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1203)) (= x502 (x253 68)) (<= x1203 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x359 (x413 1461501637330902918203684832716283019655932542975 x249)) (= x249 (x683 256)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1203) (not (= x1203 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x413 1461501637330902918203684832716283019655932542975 x656) x335) (>= 1461501637330902918203684832716283019655932542975 x502) (= (+ x97 32) x1047) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1203) (not (= x1203 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= (x413 1461501637330902918203684832716283019655932542975 x1460) x1437) (= (x253 100) x619) (not (< x407 x316)) (= (>= 224 x1413) x467) (= x1460 (x683 x97)) (= x407 (x683 224))) (and (=> (and (and (= (x624 x815) x710) (= x1366 (x1061 (+ 32 x707))) (= (x1061 (+ x707 32)) x1087) (= (x1061 (+ x707 128)) x815) (= x1154 (x1061 (+ 96 x707))) (> x926 x74) (= (x63 x1413 x1230 x441 x1035) x314) (= x3 (x1061 (+ 96 x707))) (= x1089 (x624 x918)) (= x460 (x1061 (+ x707 32))) (= x185 (x624 x1271)) (>= x74 1) (= (x624 x143) x378) (<= x74 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x624 x1154) x875) (= x126 (x1452 x1413 x1143 x877)) (= x301 (ite (= x1413 0) x1489 (ite (>= 32 x1413) x942 (ite (>= 64 x1413) x126 (ite (>= 96 x1413) x314 (ite (>= 128 x1413) x1417 (ite (<= x1413 160) x927 (ite (>= 192 x1413) x122 (ite (>= 224 x1413) x831 x904))))))))) (= x942 (x91 x1413 x1211)) (= (x624 x1270) x567) (= (x624 x1087) x877) (= x536 (x624 x862)) (= x376 (x1061 (+ x707 64))) (= x918 (x1061 (+ 192 x707))) (= (x1061 (+ x707 32)) x778) (= x41 (x624 x707)) (= x67 (x624 x1190)) (= x1046 (x624 x376)) (= x143 (x1061 (+ x707 96))) (= x89 (x1061 (+ x555 64))) (= (x1061 (+ 128 x707)) x985) (= (x472 x1413 x433 x1367 x1046 x297 x710 x185) x122) (<= 2 x926) (= x759 (x624 x1155)) (= (x1061 (+ (mod (+ 32 x1175) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x74)) x926) (= x1257 (x624 x578)) (= x491 (x1061 (+ x707 64))) (= (x1061 (+ 64 x707)) x578) (= x292 (x1061 (+ x707 32))) (= x433 (x624 x707)) (= (x624 x707) x1211) (>= 18446744073709551615 x567) (= x1035 (x624 x491)) (= x299 (x624 x1366)) (= (x1061 (+ x707 160)) x1271) (= x1143 (x624 x707)) (= x729 (x1061 (+ 160 x707))) (= (x1061 (+ x707 128)) x862) (= x1489 (x968 0)) (= x927 (x1506 x1413 x1008 x67 x759 x875 x923)) (= x831 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) (= (x1471 x1413 x765 x570 x552 x378) x1417) (= (* x567 32) x1175) (= x923 (x624 x985)) (= (x1061 (+ x707 64)) x1176) (= x1270 (x624 x89)) (= x722 (x624 x615)) (= x1190 (x1061 (+ 32 x707))) (= x1155 (x1061 (+ x707 64))) (= (x624 x707) x1008) (= x462 (x624 x729)) (= x615 (x1061 (+ 96 x707))) (= x552 (x624 x1176)) (= x297 (x624 x3)) (= (= x567 0) x11) (= (x624 x778) x1367) (= x765 (x624 x707)) (= x570 (x624 x292)) (= (x624 192) x555) (= x1230 (x624 x707)) (= x441 (x624 x460))) (or (and (not x11) (and (= (x1061 (+ 32 x74)) x1251) (= (* 32 x567) x1074))) x11)) x1146) x467))))
(assert (= (x595 (x91 x1196 x285)) x1196))
(assert (x1522 x976))
(assert (x1522 x1233))
(assert (x1390 x420))
(assert (x1522 x581))
(assert (=> (<= x730 10000) (= (x1252 x730) 0)))
(assert (< 10000 (x63 x984 x1513 x216 x767)))
(assert (x1522 x1230))
(assert (x1522 x1226))
(assert (x950 x976))
(assert (x1522 x1318))
(assert (x1522 x402))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (=> (<= x1473 10000) (= 0 (x1252 x1473))))
(assert (not (x721 (x63 x1196 x790 x655 x22))))
(assert (= (x227 (x1506 x1084 x374 x65 x657 x390 x1068)) x374))
(assert (= (x1252 (x1471 x1196 x781 x1138 x1039 x696)) (x1471 x1196 x781 x1138 x1039 x696)))
(assert (x1522 x203))
(assert (=> (>= 10000 x760) (= (x1252 x760) 0)))
(assert (= (=> (and (= (> x844 0) x990) (= x365 (x1533 x890)) (= (x1533 x365) x844)) (and (=> (and x990 (and (and (= (x1533 x1240) x377) (>= x559 1) (= x662 (x1533 x890)) (= x1226 (x1061 (+ x346 32))) (= (x1061 (+ 32 x1240)) x72) (= (x1533 x224) x1240) (= x559 (x1533 x662)) (= x1149 (x1061 (+ x944 128))) (= x1026 (x1061 (+ 32 x132))) (= x1141 (x1061 (+ 32 x72))) (= (x1061 (+ 32 x946)) x944) (= (x413 1461501637330902918203684832716283019655932542975 x377) x850) (= x363 (x1061 (+ 32 x1226))) (= (x1533 x72) x1169) (= (x1061 (+ 32 x944)) x346) (= x1365 (> x486 0)) (= x486 (x993 x132)) (= (x1061 (+ 32 x1149)) x1423) (= x224 (x1061 (+ x662 32))) (= (x1533 x1141) x132)) (or (and x1365 (and (= (x1315 x1026) x1206) (not x633) (= x633 (> x486 32)))) (not x1365)))) x323) (=> (and (= x946 x373) (not x990)) x602))) x1268))
(assert (x1522 x299))
(assert (x1522 x144))
(assert (x1522 x270))
(assert (x1522 x627))
(assert (x1522 x716))
(assert (x1260 32 x160))
(assert (= (x1067 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)) x1030))
(assert (x1260 32 x1164))
(assert (= (x595 (x1506 x98 x422 x1266 x1161 x925 x1406)) x98))
(assert (x1522 x1337))
(assert (= 0 (x1252 2189116922)))
(assert (=> (<= x422 10000) (= 0 (x1252 x422))))
(assert (x1522 x1313))
(assert (x1522 x326))
(assert (x1113 x1004 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x950 x682))
(assert (= x131 (x595 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (x1522 x582))
(assert (x1522 x339))
(assert (= x438 (and (not x11) x1071)))
(assert (= x22 (x1265 (x63 x1196 x790 x655 x22))))
(assert (x1522 x292))
(assert (x1522 x668))
(assert (x1522 x1049))
(assert (x1522 x687))
(assert (= (x595 (x472 x131 x1272 x550 x970 x44 x36 x190)) x131))
(assert (x1522 x442))
(assert (=> (<= x789 10000) (= 0 (x1252 x789))))
(assert (x1522 x807))
(assert (= 0 (x1252 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (=> (<= x121 10000) (= (x1252 x121) 0)))
(assert (x1522 x352))
(assert (=> (<= x959 10000) (= 0 (x1252 x959))))
(assert (not (x721 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (= (x227 (x63 x1413 x1230 x441 x1035)) x1230))
(assert (=> (>= 10000 x1264) (= 0 (x1252 x1264))))
(assert (x1113 x976 1461501637330902918203684832716283019655932542976))
(assert (x1522 x1167))
(assert (x1522 x364))
(assert (x1522 x1083))
(assert (x906 x61))
(assert (x1522 x1418))
(assert (< (x91 x1196 x285) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1535))
(assert (x1522 x305))
(assert (< (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x799))
(assert (= x648 (x227 (x91 x98 x648))))
(assert (x721 1889567281))
(assert (x1522 x1422))
(assert (x1522 x562))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (= x535 (x595 (x1471 x535 x1245 x1105 x1466 x582))))
(assert (=> (>= 10000 x332) (= 0 (x1252 x332))))
(assert (x1522 x304))
(assert (x1522 x291))
(assert (x1522 x495))
(assert (x1522 x250))
(assert (x1522 x29))
(assert (x451 x64))
(assert (x1522 x1215))
(assert (x1522 x40))
(assert (x950 x607))
(assert (= (x595 (x1471 x131 x887 x29 x1064 x1133)) x131))
(assert (x1522 x885))
(assert (x1522 x1487))
(assert (= x1473 (x227 (x472 x1084 x1473 x1018 x654 x952 x621 x488))))
(assert (x1522 x164))
(assert (x1522 x1114))
(assert (x1522 x1133))
(assert (x1113 x769 32))
(assert (x1522 x485))
(assert (= (x1159 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) x536))
(assert (x1522 x1197))
(assert (x1522 x1477))
(assert (x1522 x662))
(assert (x1522 x819))
(assert (< 10000 (x472 x1413 x433 x1367 x1046 x297 x710 x185)))
(assert (=> (<= x877 10000) (= 0 (x1252 x877))))
(assert (= (x63 x1413 x1230 x441 x1035) (x1252 (x63 x1413 x1230 x441 x1035))))
(assert (= (x1252 (x1506 x1196 x397 x1199 x973 x888 x754)) (x1506 x1196 x397 x1199 x973 x888 x754)))
(assert (x1522 x440))
(assert (x1522 x795))
(assert (x1522 x1169))
(assert (x1522 x32))
(assert (= (x1262 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) x1018))
(assert (x1522 x410))
(assert (=> (>= 10000 x79) (= 0 (x1252 x79))))
(assert (x1390 x702))
(assert (x1522 x1296))
(assert (= (x1265 (x1506 x984 x676 x124 x225 x978 x362)) x225))
(assert (x1522 x1350))
(assert (x950 x684))
(assert (x721 18446744073709551167))
(assert (x1260 32 x692))
(assert (= (=> (and (= x307 (x253 196)) (= (x1061 (+ x144 (mod (+ x273 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x745) (= (x253 x794) x1477) (= (x1486 (- x474 x294)) x244) (not (or (and (> x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x326 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x244 x326) (= (<= x244 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x326 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x745) (= x326 (x1061 (+ x794 32))) (= x794 (x1061 (+ 36 x307))) (= (+ x1516 32) x1404) (or (<= x307 2065879269376) (>= x307 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x294 (* 160 x1477)) (> x745 x144) (= x273 (* x1477 32)) (<= x144 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x611 (> x1477 0)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x307) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95)) (and (< x307 x95) (= (<= x307 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95)))) (= x962 (x1061 (+ x144 32))) (>= 18446744073709551615 x1477)) (and (=> x611 x1275) (=> (and (not x611) (= x745 x1203)) x331))) x930))
(assert (= (x595 (x472 x1413 x433 x1367 x1046 x297 x710 x185)) x1413))
(assert (=> (>= 10000 x1158) (= (x1252 x1158) 0)))
(assert (not (x721 (x472 x535 x873 x733 x631 x1078 x1340 x967))))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (=> (>= 10000 x225) (= (x1252 x225) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1506 x70 x1493 x347 x505 x1291 x402)))
(assert (x1522 x652))
(assert (x1522 x1085))
(assert (=> (<= x488 10000) (= (x1252 x488) 0)))
(assert (=> (>= 10000 x124) (= 0 (x1252 x124))))
(assert (x1522 x1310))
(assert (= (x595 (x1506 x984 x676 x124 x225 x978 x362)) x984))
(assert (x1522 x862))
(assert (x1522 x1156))
(assert (x1522 x1176))
(assert (=> (>= 10000 x1121) (= 0 (x1252 x1121))))
(assert (x1113 x663 32))
(assert (= (x1067 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x758))
(assert (= (x1159 (x472 x535 x873 x733 x631 x1078 x1340 x967)) x1340))
(assert (x1522 x1087))
(assert (= x385 (or (and x742 x585) x565)))
(assert (x1522 x1509))
(assert (x1522 x19))
(assert (x1522 x573))
(assert (x1522 x1009))
(assert (not (x721 (x1452 x70 x1443 x532))))
(assert (x1522 x178))
(assert (x1522 x1005))
(assert (x1522 x1098))
(assert (= x1186 (=> (and (= x526 (x253 x343)) (>= 18446744073709551614 x425) (= x768 (x1061 (+ x425 32))) (> x393 x425) (= (x1061 (+ x752 32)) x1425) (= x783 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x663)) (= (x1061 (+ x215 x75)) x852) (= x1126 (+ 32 x575)) (or (>= 18446744073709551614 x425) (>= x425 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (or (and (> x456 x86) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x86))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x86) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456))) (= (x1061 (+ x799 36)) x343) (= (+ 63 x325) x663) (= (x253 x852) x475) (<= x1319 18446744073709551615) (= x869 (x1061 (+ 32 x951))) (>= 18446744073709551614 x425) (<= 1 x393) (= x1114 (x253 36)) (= x560 (* 128 x526)) (= (+ 32 x596) x645) (<= x290 18446744073709551615) (or (>= 18446744073709551614 x425) (>= x425 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (>= 18446744073709551614 x783) (<= x425 18446744073709551613) (= x809 (x1061 (+ 31 x548))) (> x290 x393) (= (x1061 (+ x409 x1319)) x977) (= (x1061 (+ 31 x852)) x86) (not (< x290 x393)) (= x435 (x1061 (+ 32 x699))) (or (<= x852 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x852)) (= (x1061 (+ x435 32)) x1023) (>= 18446744073709551613 x425) (or (>= x799 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x799 2065879269376)) (= (+ 31 x1319) x529) (= x822 (x253 x435)) (= x1319 (x253 x548)) (or (>= 18446746139588821027 x548) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x548)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1431)) (< x1431 x213)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x213) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1431)))) (>= 18446744073709551615 x215) (<= x526 18446744073709551615) (= x799 (x253 132)) (= (x1061 (+ x475 x768)) x465) (= x290 (+ x393 x783)) (>= 18446744073709551615 x642) (>= 18446744073709551615 x475) (> x596 x290) (= x113 (+ x1319 x712)) (<= x393 18446744073709551614) (= x881 (+ x596 32 x1500)) (> x881 x596) (= (x1486 (- x474 x560)) x1431) (= (x253 356) x878) (= x727 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x399)) (or (and (> x456 x809) (= (<= x809 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x456 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x809) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456))) (= x325 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x529)) (= (+ x181 63) x399) (not (< x456 x237)) (= (+ 224 x290) x596) (= x642 (x253 x869)) (= (x253 x1425) x215) (= x429 (< 0 x526)) (<= x425 18446744073709551613) (>= x290 2) (= x1500 (* 32 x526)) (= (+ x475 31) x527) (= x181 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x527)) (= (+ x290 32) x575) (>= 1461501637330902918203684832716283019655932542975 x1042) (= x548 (x1061 (+ x642 x951))) (or (>= 18446744073709551614 x425) (>= x425 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (= x712 (+ 32 x393)) (= (x1061 (+ x548 32)) x409) (not (< x393 x425)) (= x393 (x1061 (+ x425 x727))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x799) (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x95 x799)) (and (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x799))) (= (x1061 (+ x475 x530)) x237) (>= 18446744073709551614 x425) (= x530 (x1061 (+ x852 32))) (= x213 (x1061 (+ x343 32))) (not (> x977 x456)) (= x1042 (x253 x1023))) (and (=> x429 x1333) (=> (and (= x1085 x881) (not x429)) x1259)))))
(assert (x1522 x280))
(assert (=> (<= x419 10000) (= 0 (x1252 x419))))
(assert (= (x1252 37664329658542632380461339884011895550187483938955784695590509376205521682432) 0))
(assert (= x887 (x227 (x1471 x131 x887 x29 x1064 x1133))))
(assert (x1522 x1065))
(assert (x1522 x632))
(assert (x1522 x1499))
(assert (> (x472 x1084 x1473 x1018 x654 x952 x621 x488) 10000))
(assert (x1522 x877))
(assert (= (or x1526 x558 x1222 x747 x583) x1369))
(assert (= (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089) (x1252 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089))))
(assert (= x392 (x1511 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (=> (>= 10000 x650) (= 0 (x1252 x650))))
(assert (=> (<= x1183 10000) (= (x1252 x1183) 0)))
(assert (= (x1506 x131 x1120 x694 x671 x392 x584) (x1252 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (= x45 (x1262 (x1471 x70 x730 x45 x277 x125))))
(assert (= (not (and (not (= x824 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not x601) (<= x991 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x719 x1344))) (= x1306 (x1061 (+ 32 x824))) (= (x1097 192) x503) (= x902 (= 1 x779)) (<= x160 18446744073709551615) (= x1013 (= 0 x160)) (not (= x824 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x163 (* x160 32)) (<= x1247 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1097 x1436) x1344) (< x1247 x845) (<= x991 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x434 (x1061 (+ x153 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x824)) (= (x1061 (+ (mod (+ 32 x163) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x991)) x824) (= x153 (x1061 (+ 32 x885))) (= (x1097 x860) x719) (= (x1061 (+ x719 x1344)) x160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x824) (not x1013) (not x902) (= x885 (x1061 (+ 32 x1306))) (= x779 (x1486 (- x160 1))) (<= x824 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x824 x1247) (= x352 (x1061 (+ 32 x818))) (= (x1061 (+ x352 32)) x484) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1247)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x824) (= x898 (x1061 (+ 32 x1247))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1247)) (= (x1097 x1126) x860) (not (= x1247 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1247) (= (x1097 x1516) x1436) (<= 1 x824) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1247) (= (x1061 (+ x1247 160)) x845) (<= x991 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= 1 x160) x601) (= (x1061 (+ x824 160)) x1247) (< x991 x824) (= x1287 (x1061 (+ x991 32))) (= x1053 (x1097 x503)) (= x818 (x1061 (+ 32 x898))) (= (x1061 (+ 32 x1287)) x965))) x920))
(assert (x1390 x1460))
(assert (= (x1159 (x472 x1196 x771 x1044 x608 x1381 x650 x1183)) x650))
(assert (=> (>= 10000 x1430) (= (x1252 x1430) 0)))
(assert (x1113 x529 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x721 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (= x29 (x1262 (x1471 x131 x887 x29 x1064 x1133))))
(assert (x1522 x1399))
(assert (= (x1252 (x1452 x535 x1041 x1419)) (x1452 x535 x1041 x1419)))
(assert (x1522 x1236))
(assert (= (=> (and (= (x580 x89) x1414) (= x661 (x580 x1414)) (= x590 (> x661 0))) (and (=> (and (not x590) (= x252 x926)) x1517) (=> (and x590 (and (and (= (x580 x201) x337) (= (x580 x1122) x1401) (= x1122 (x1061 (+ x371 32))) (= (x1061 (+ 32 x926)) x627) (= x5 (x1061 (+ 32 x1385))) (<= 1 x1505) (= x1385 (x580 x89)) (= (x1061 (+ 128 x627)) x1165) (= (x1061 (+ 32 x1165)) x949) (= (x580 x5) x371) (= (x1027 x337) x289) (= (x1061 (+ x627 32)) x592) (= (x1061 (+ x1122 32)) x201) (= (x580 x1385) x1505) (= (x1061 (+ x337 32)) x156) (= x841 (x1061 (+ x592 32))) (= x684 (x580 x371)) (= x732 (x1061 (+ x841 32))) (= (> x289 0) x1181) (= (x413 1461501637330902918203684832716283019655932542975 x684) x53)) (or (not x1181) (and (and (= x556 (< 32 x289)) (= (x1411 x156) x78) (not x556)) x1181)))) x403))) x1146))
(assert (x1113 x377 1461501637330902918203684832716283019655932542976))
(assert (= (and (not x429) x703) x1168))
(assert (x1522 x419))
(assert (x1522 x1305))
(assert (x1522 x918))
(assert (x1522 x61))
(assert (=> (>= 10000 x1288) (= (x1252 x1288) 0)))
(assert (= (x227 (x1452 x1196 x384 x1327)) x384))
(assert (x1522 x554))
(assert (=> (>= 10000 x1257) (= (x1252 x1257) 0)))
(assert (= (and (not x1432) x385) x142))
(assert (x1522 x848))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (=> (>= 10000 x1413) (= (x1252 x1413) 0)))
(assert (x1522 x220))
(assert (x906 (- x692 1)))
(assert (x1522 x540))
(assert (= x77 (or x102 x233)))
(assert (= (x1452 x1084 x674 x936) (x1252 (x1452 x1084 x674 x936))))
(assert (not (x721 (x1471 x535 x1245 x1105 x1466 x582))))
(assert (= (x1511 (x1506 x535 x40 x1119 x504 x1481 x658)) x1481))
(assert (x1522 x1179))
(assert (x1522 x18))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x1522 x1490))
(assert (x950 x519))
(assert (not (x721 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030))))
(assert (x1522 x781))
(assert (= 66 (x595 (x63 66 x1430 x1137 x267))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x98 x764 x800 x207 x79 x228 x557)))
(assert (x1522 x289))
(assert (x1522 x641))
(assert (= x543 (and x975 x990)))
(assert (x1522 x549))
(assert (x1522 x531))
(assert (x721 2065879269316))
(assert (x1522 x1387))
(assert (= x830 (x690 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (x1113 x1152 32))
(assert (x1522 x1174))
(assert (x1522 x384))
(assert (x721 18446746139588821027))
(assert (= (x1252 (x472 x1413 x433 x1367 x1046 x297 x710 x185)) (x472 x1413 x433 x1367 x1046 x297 x710 x185)))
(assert (x906 x183))
(assert (= (x1067 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)) x1515))
(assert (x1522 x905))
(assert (x1522 x1023))
(assert (not (x721 (x1506 x131 x1120 x694 x671 x392 x584))))
(assert (x1522 x598))
(assert (= x1301 (x1265 (x1471 x1084 x846 x214 x1301 x1405))))
(assert (= (and x703 x429) x1467))
(assert (x1522 x458))
(assert (x1522 x492))
(assert (= x800 (x1262 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (= x1057 (and x1194 x1110)))
(assert (x1113 x527 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x227 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830)) x1242))
(assert (x1522 x527))
(assert (=> (>= 10000 x821) (= (x1252 x821) 0)))
(assert (x1390 x529))
(assert (x1522 x898))
(assert (x721 18446744073709551455))
(assert (= x1084 (x595 (x63 x1084 x1100 x1158 x959))))
(assert (= (and x534 (not x367)) x816))
(assert (x721 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (x1522 x859))
(assert (= (x595 (x472 x535 x873 x733 x631 x1078 x1340 x967)) x535))
(assert (x1522 x1248))
(assert (> (x472 x535 x873 x733 x631 x1078 x1340 x967) 10000))
(assert (x1522 x794))
(assert (=> (>= 10000 x22) (= 0 (x1252 x22))))
(assert (x1522 x168))
(assert (=> (<= x76 10000) (= (x1252 x76) 0)))
(assert (x1522 x247))
(assert (= (x1506 x1084 x374 x65 x657 x390 x1068) (x1252 (x1506 x1084 x374 x65 x657 x390 x1068))))
(assert (x1522 x378))
(assert (= (=> (and (<= x218 5) (not (> x1029 x981)) (<= x1029 18446744073709551614) (= (x1061 (+ 32 x896)) x1383) (>= 18446744073709551615 x1029) (>= 1461501637330902918203684832716283019655932542975 x55) (= x25 (x253 x1066)) (< x1029 x981) (= x981 (x1061 (+ 160 x1029))) (= (x1061 (+ 32 x1188)) x186) (= x55 (x253 x1188)) (= (x1486 (- x474 x1088)) x179) (= (x253 x1088) x218) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1029) (>= x179 160) (not (= x1029 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x253 x1016) x1418) (= (x1061 (+ 32 x1088)) x1188) (= x896 (x1061 (+ 32 x774))) (or (<= x1029 18446744073709551455) (>= x1029 115792089237316195423570985008687907853269984665640564039457584007913129639777)) (= x774 (x1061 (+ 32 x544))) (or (>= 18446744073709551455 x1029) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1029)) (or (>= x1088 57896044618658097711785492504343953926634992332820282019728792003956564820645) (>= 2065879269284 x1088)) (>= 18446744073709551614 x1029) (= (x1061 (+ 32 x186)) x1016) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x179) (= x1066 (x1061 (+ 32 x1016))) (= x1461 (x253 x186)) (= (x1061 (+ x1029 32)) x544) (= x1090 (not (< 1 x329))) (<= x1029 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x25)) (and x1090 (=> (= x981 x144) x930))) x1131))
(assert (< 10000 (x1471 x1196 x781 x1138 x1039 x696)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x535 x873 x733 x631 x1078 x1340 x967)))
(assert (x1522 x286))
(assert (=> (>= 10000 x632) (= 0 (x1252 x632))))
(assert (=> (<= x973 10000) (= 0 (x1252 x973))))
(assert (x1522 x1534))
(assert (x1522 x858))
(assert (=> (>= 10000 x1044) (= (x1252 x1044) 0)))
(assert (x1522 x1205))
(assert (x1522 x1161))
(assert (x1522 x1249))
(assert (= (x1511 (x472 x131 x1272 x550 x970 x44 x36 x190)) x44))
(assert (= x846 (x227 (x1471 x1084 x846 x214 x1301 x1405))))
(assert (< (x1471 x1413 x765 x570 x552 x378) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x397) (= 0 (x1252 x397))))
(assert (= (x1252 (x63 x131 x115 x176 x812)) (x63 x131 x115 x176 x812)))
(assert (=> (<= x1211 10000) (= (x1252 x1211) 0)))
(assert (= x1228 (x1067 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (= x1468 (x1265 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (x1522 x671))
(assert (< 10000 (x1506 x70 x1493 x347 x505 x1291 x402)))
(assert (x721 18446744073709551518))
(assert (=> (<= x658 10000) (= 0 (x1252 x658))))
(assert (x1260 160 x1477))
(assert (= (and x58 x12) x1376))
(assert (x1522 x1024))
(assert (x1522 x1117))
(assert (= x162 (and x1369 (not x446))))
(assert (x1522 x1076))
(assert (x1522 x1041))
(assert (= x553 (or x414 x254)))
(assert (x1522 x674))
(assert (x1522 x1111))
(assert (x1522 x802))
(assert (x680 x702))
(assert (= (x1067 (x472 x98 x764 x800 x207 x79 x228 x557)) x557))
(assert (x1522 x186))
(assert (x906 128))
(assert (= (x1262 (x1506 x98 x422 x1266 x1161 x925 x1406)) x1266))
(assert (= x1466 (x1265 (x1471 x535 x1245 x1105 x1466 x582))))
(assert (= x275 (x1159 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (x1522 x944))
(assert (x1522 x971))
(assert (x1522 x344))
(assert (x1522 x790))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x1522 x1312))
(assert (= (x227 (x91 x1084 x388)) x388))
(assert (x1522 x915))
(assert (= x1196 (x595 (x1506 x1196 x397 x1199 x973 x888 x754))))
(assert (x1522 x714))
(assert (= (x227 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)) x180))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x91 x1084 x388)))
(assert (=> (<= x925 10000) (= (x1252 x925) 0)))
(assert (x680 x1460))
(assert (x1522 x1206))
(assert (x1522 x771))
(assert (x1522 x296))
(assert (x680 x607))
(assert (x1522 x875))
(assert (= x1083 (x690 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x1216))
(assert (not (x721 (x1471 x984 x20 x208 x1050 x1011))))
(assert (= (x1067 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) x488))
(assert (x1522 x278))
(assert (x1522 x634))
(assert (x1522 x592))
(assert (= (x472 x70 x1334 x1426 x1323 x1073 x821 x1030) (x1252 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030))))
(assert (x1522 x1046))
(assert (x1522 x449))
(assert (x1522 x1004))
(assert (=> (>= 10000 x552) (= 0 (x1252 x552))))
(assert (x1522 x709))
(assert (x48 x527))
(assert (= x1084 (x595 (x1506 x1084 x374 x65 x657 x390 x1068))))
(assert (x1522 x740))
(assert (= x441 (x1262 (x63 x1413 x1230 x441 x1035))))
(assert (x1522 x70))
(assert (= (or x547 x1051 x239) x400))
(assert (x1522 x1190))
(assert (= x735 (and x737 x867)))
(assert (x1522 x962))
(assert (x1522 x87))
(assert (=> (>= 10000 x217) (= (x1252 x217) 0)))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (> (x1471 x98 x726 x436 x760 x332) 10000))
(assert (=> (>= 10000 x608) (= (x1252 x608) 0)))
(assert (x1390 x1398))
(assert (x1522 x1502))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x1522 x688))
(assert (x1522 x1349))
(assert (x1522 x503))
(assert (=> (>= 10000 x967) (= 0 (x1252 x967))))
(assert (x1522 x1319))
(assert (= x970 (x1265 (x472 x131 x1272 x550 x970 x44 x36 x190))))
(assert (x1522 x163))
(assert (x1522 x502))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (not (x721 (x1506 x535 x40 x1119 x504 x1481 x658))))
(assert (< 10000 (x91 x1413 x1211)))
(assert (x1522 x796))
(assert (x1522 x1327))
(assert (> (x1452 x70 x1443 x532) 10000))
(assert (=> (<= x1084 10000) (= (x1252 x1084) 0)))
(assert (x1522 x1182))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (= (x63 x1196 x790 x655 x22) (x1252 (x63 x1196 x790 x655 x22))))
(assert (= 0 (x1252 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x1522 x1241))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= (x1252 18446744073709551455) 0))
(assert (x1522 x914))
(assert (= (x1252 (x1471 x98 x726 x436 x760 x332)) (x1471 x98 x726 x436 x760 x332)))
(assert (x1522 x526))
(assert (x1522 x696))
(assert (= (and x553 x611) x843))
(assert (x1522 x874))
(assert (= x1046 (x1265 (x472 x1413 x433 x1367 x1046 x297 x710 x185))))
(assert (= (and (not x309) x735) x243))
(assert (not (x721 (x472 x98 x764 x800 x207 x79 x228 x557))))
(assert (x1522 x1423))
(assert (= (x1252 (x63 66 x1430 x1137 x267)) (x63 66 x1430 x1137 x267)))
(assert (x1522 x841))
(assert (x1522 x150))
(assert (x1522 x1516))
(assert (= (x1452 x131 x23 x440) (x1252 (x1452 x131 x23 x440))))
(assert (x1522 x1266))
(assert (=> (<= x1008 10000) (= (x1252 x1008) 0)))
(assert (=> (<= x1161 10000) (= 0 (x1252 x1161))))
(assert (= 0 (x1252 1889567281)))
(assert (x1522 x511))
(assert (x1522 x824))
(assert (x1522 x1137))
(assert (= (x1506 x1413 x1008 x67 x759 x875 x923) (x1252 (x1506 x1413 x1008 x67 x759 x875 x923))))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (=> (>= 10000 x1035) (= (x1252 x1035) 0)))
(assert (=> (<= x657 10000) (= (x1252 x657) 0)))
(assert (x1522 x762))
(assert (x1522 x544))
(assert (not (x721 (x472 x131 x1272 x550 x970 x44 x36 x190))))
(assert (x1390 x1004))
(assert (= (x1265 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789)) x187))
(assert (not (x721 (x91 x1084 x388))))
(assert (> (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089) 10000))
(assert (=> (<= x1513 10000) (= 0 (x1252 x1513))))
(assert (x1522 x1036))
(assert (x1522 x1212))
(assert (x1522 x931))
(assert (= (and x230 x728) x1096))
(assert (x1522 x295))
(assert (x1522 x836))
(assert (x48 x1447))
(assert (= (and x534 x367) x1))
(assert (x1390 1461501637330902918203684832716283019655932542975))
(assert (x1522 x180))
(assert (x1522 x60))
(assert (x1522 x394))
(assert (=> (>= 10000 x347) (= (x1252 x347) 0)))
(assert (not (x721 (x91 x535 x632))))
(assert (< 10000 (x472 x131 x1272 x550 x970 x44 x36 x190)))
(assert (x1522 x1442))
(assert (=> (<= x765 10000) (= 0 (x1252 x765))))
(assert (= (x1159 (x1506 x98 x422 x1266 x1161 x925 x1406)) x1406))
(assert (x1522 x463))
(assert (=> (<= x392 10000) (= 0 (x1252 x392))))
(assert (x1113 x1460 1461501637330902918203684832716283019655932542976))
(assert (x680 x249))
(assert (x1522 x23))
(assert (< 10000 (x1452 x1196 x384 x1327)))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (=> (>= 10000 x652) (= 0 (x1252 x652))))
(assert (< (x135 x98 x180 x118 x187 x634 x1058 x1515 x789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x569))
(assert (= x984 (x595 (x1471 x984 x20 x208 x1050 x1011))))
(assert (= x70 (x595 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (x1522 x1089))
(assert (x1522 x103))
(assert (=> (<= x1515 10000) (= 0 (x1252 x1515))))
(assert (x1522 x1366))
(assert (= (x1265 (x1506 x535 x40 x1119 x504 x1481 x658)) x504))
(assert (x680 x684))
(assert (= x372 (and x77 x1224)))
(assert (=> (<= x1233 10000) (= 0 (x1252 x1233))))
(assert (x1522 x648))
(assert (x1260 32 x567))
(assert (x1522 x626))
(assert (x1522 x1512))
(assert (x1522 x873))
(assert (not (x721 (x472 x1196 x771 x1044 x608 x1381 x650 x1183))))
(assert (= x1288 (x1265 (x63 x70 x1162 x834 x1288))))
(assert (x1522 x670))
(assert (= (x1252 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)))
(assert (x1522 x733))
(assert (=> (<= x1069 10000) (= 0 (x1252 x1069))))
(assert (x1522 x1389))
(assert (x1522 x808))
(assert (x1260 32 (- x692 1)))
(assert (x1522 x221))
(assert (=> (>= 10000 x581) (= 0 (x1252 x581))))
(assert (x1522 x778))
(assert (= x581 (x1159 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x1253))
(assert (x1522 x603))
(assert (x680 x780))
(assert (x1522 x852))
(assert (= x1196 (x595 (x472 x1196 x771 x1044 x608 x1381 x650 x1183))))
(assert (x1522 x1448))
(assert (x1522 x700))
(assert (x1522 x871))
(assert (= x1327 (x1262 (x1452 x1196 x384 x1327))))
(assert (x1522 x1175))
(assert (=> (>= 10000 x1478) (= 0 (x1252 x1478))))
(assert (x1522 x288))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x1522 x956))
(assert (x1522 x926))
(assert (x1522 x849))
(assert (= x422 (x227 (x1506 x98 x422 x1266 x1161 x925 x1406))))
(assert (x1113 x1004 32))
(assert (= (x1252 18446746139588821027) 0))
(assert (x1522 x1115))
(assert (x1522 x118))
(assert (x1522 x512))
(assert (= x145 (=> (and (= x762 x1000) (= 1 x1212) (= (x413 1461501637330902918203684832716283019655932542975 x976) x1000) (= (x1061 (+ 128 x351)) x271) (= (x1097 x271) x702) (= (x413 1461501637330902918203684832716283019655932542975 x702) x762)) x1112)))
(assert (=> (<= x879 10000) (= 0 (x1252 x879))))
(assert (= x98 (x595 (x1471 x98 x726 x436 x760 x332))))
(assert (x721 134217728))
(assert (x1522 x1282))
(assert (= x256 (or x142 x1278)))
(assert (=> (<= x795 10000) (= (x1252 x795) 0)))
(assert (x1522 x1104))
(assert (= (x1511 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x424))
(assert (x1522 x539))
(assert (x1522 x786))
(assert (x680 x682))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (< 10000 (x91 x1084 x388)))
(assert (x1522 x181))
(assert (x1522 x934))
(assert (x1522 x789))
(assert (= (x1252 (x1452 64 x593 1)) (x1452 64 x593 1)))
(assert (x1522 x764))
(assert (x1522 x1443))
(assert (x1522 x1342))
(assert (= (x91 x1196 x285) (x1252 (x91 x1196 x285))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1506 x131 x1120 x694 x671 x392 x584)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x70 x1162 x834 x1288)))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x1413 x433 x1367 x1046 x297 x710 x185)))
(assert (x1522 x416))
(assert (= (x595 (x1506 x535 x40 x1119 x504 x1481 x658)) x535))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)))
(assert (> (x968 0) 10000))
(assert (=> (<= x923 10000) (= (x1252 x923) 0)))
(assert (x1522 x727))
(assert (= (x1252 (x63 x1084 x1100 x1158 x959)) (x63 x1084 x1100 x1158 x959)))
(assert (x1522 x1406))
(assert (=> (<= x176 10000) (= (x1252 x176) 0)))
(assert (not (x721 (x1452 x1084 x674 x936))))
(assert (x1522 x1357))
(assert (=> (<= x572 10000) (= (x1252 x572) 0)))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (=> (>= 10000 x207) (= 0 (x1252 x207))))
(assert (x1522 x1042))
(assert (x1522 x782))
(assert (=> (<= x1073 10000) (= 0 (x1252 x1073))))
(assert (x1522 x421))
(assert (x1522 x665))
(assert (x1522 x1075))
(assert (= (x1262 (x1506 x1413 x1008 x67 x759 x875 x923)) x67))
(assert (= (or x816 x1) x1194))
(assert (x1522 x533))
(assert (x1522 x793))
(assert (x1522 x1047))
(assert (x1522 x173))
(assert (x1522 x1403))
(assert (= (x595 (x1452 x1413 x1143 x877)) x1413))
(assert (=> (>= 10000 x803) (= 0 (x1252 x803))))
(assert (x1522 x1464))
(assert (x1522 x1276))
(assert (x1113 x1447 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x973))
(assert (not (x721 (x91 x1413 x1211))))
(assert (x680 x1398))
(assert (x1522 x695))
(assert (x1522 x1081))
(assert (x1522 x1188))
(assert (x1522 x397))
(assert (x1522 x381))
(assert (x1522 x1119))
(assert (x1522 x224))
(assert (x950 x18))
(assert (= (or x372 x537) x1256))
(assert (= (x1252 (x1506 x535 x40 x1119 x504 x1481 x658)) (x1506 x535 x40 x1119 x504 x1481 x658)))
(assert (= (x1252 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)))
(assert (= (x1262 (x1452 x70 x1443 x532)) x532))
(assert (= x925 (x1511 (x1506 x98 x422 x1266 x1161 x925 x1406))))
(assert (x1522 x125))
(assert (= (x227 (x1471 x70 x730 x45 x277 x125)) x730))
(assert (=> (>= 10000 x59) (= 0 (x1252 x59))))
(assert (= x547 (and x197 (not x1220))))
(assert (x1522 x273))
(assert (x1522 x293))
(assert (= (x227 (x1471 x1413 x765 x570 x552 x378)) x765))
(assert (x1522 x1500))
(assert (x1522 x1494))
(assert (x1522 x921))
(assert (x1522 x1264))
(assert (< 10000 (x63 x131 x115 x176 x812)))
(assert (=> (<= x275 10000) (= (x1252 x275) 0)))
(assert (x1522 x1283))
(assert (=> (<= x23 10000) (= (x1252 x23) 0)))
(assert (x1522 x1421))
(assert (x1522 x757))
(assert (= x381 (x1262 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233))))
(assert (x1522 x1328))
(assert (= (x1262 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)) x1426))
(assert (x1390 x769))
(assert (=> (>= 10000 x1143) (= 0 (x1252 x1143))))
(assert (x1522 x38))
(assert (x1522 x1154))
(assert (= x1336 (or x1382 (and x867 (not x737)))))
(assert (= (x1452 x984 x1036 x515) (x1252 (x1452 x984 x1036 x515))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x535 x1245 x1105 x1466 x582)))
(assert (= (=> (and (= x1043 (* 32 x1164)) (> x1290 x373) (= x573 (x1061 (+ x373 32))) (= x1289 (x1486 (- x826 32))) (>= x562 1) (= (x1486 (- x1290 x373)) x826) (= (x324 x373) x535) (= x562 (x1061 (+ x806 x250))) (<= 1 x1290) (>= 4 x1164) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x373) (= x1164 x1510) (= x1440 (<= x535 224)) (= (* 32 x1164) x806) (<= x373 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x635 (x1061 (+ x1043 x165))) (= x497 x635) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x373) (= x1290 x562)) (and x1440 (=> (and (= (x1061 (+ 32 x1290)) x38) (= x1339 (x1061 (+ x573 64))) (= (x63 x535 x738 x121 x461) x1191) (= (x324 x899) x631) (= (x1061 (+ x573 128)) x128) (= (x324 x573) x40) (= x1349 (x1061 (+ 32 x573))) (= (x1061 (+ 32 x755)) x1520) (= x322 (x1061 (+ 128 x573))) (= (x324 x495) x1481) (= x1228 (x324 x723)) (= x204 (x1061 (+ x573 96))) (= (x1012 x1290) x1084) (= (x324 x653) x1419) (= x582 (x324 x606)) (= (x1061 (+ x573 64)) x808) (= (x1061 (+ 32 x573)) x1338) (= (x324 x931) x1119) (= (x324 x573) x873) (= (x1061 (+ 96 x510)) x265) (= (x1061 (+ 32 x1290)) x510) (= x450 (x1061 (+ 64 x573))) (= (x1061 (+ x573 64)) x899) (= (x324 x450) x1466) (= x738 (x324 x573)) (= x1239 (x472 x535 x873 x733 x631 x1078 x1340 x967)) (= (>= 224 x1084) x1379) (= x275 (x324 x128)) (= x733 (x324 x1349)) (< x1290 x265) (= x551 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830)) (= (x91 x535 x632) x827) (= x1313 (x1061 (+ 96 x573))) (= (x1486 (- x265 x1290)) x709) (= x653 (x1061 (+ 32 x573))) (= x1478 (x324 x1279)) (= (x324 x808) x1468) (= x658 (x324 x322)) (= (x324 x573) x1245) (= x876 (x1471 x535 x1245 x1105 x1466 x582)) (= x1105 (x324 x1338)) (= x100 (x324 x1313)) (= (ite (= 0 x535) x1375 (ite (<= x535 32) x827 (ite (<= x535 64) x312 (ite (<= x535 96) x1191 (ite (<= x535 128) x876 (ite (>= 160 x535) x469 (ite (<= x535 192) x1239 (ite (<= x535 224) x551 x1282)))))))) x246) (= (x1061 (+ x573 128)) x848) (= x1350 (x1061 (+ x573 32))) (= (x324 x644) x461) (= x121 (x324 x1350)) (= (x1061 (+ x573 96)) x606) (= x1117 (x1486 (- x709 32))) (= (x1061 (+ 160 x573)) x723) (= x1078 (x324 x204)) (= x1375 (x968 0)) (= (x324 x573) x1242) (= x644 (x1061 (+ x573 64))) (= x312 (x1452 x535 x1041 x1419)) (= (x1061 (+ x573 32)) x931) (= (x324 x573) x632) (= x504 (x324 x1339)) (= (x324 x573) x1041) (= (x324 x1054) x830) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1290)) (and (<= 1 x1290) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1290))) (= (x324 x382) x967) (= (x324 x848) x1340) (= x1279 (x1061 (+ x573 32))) (= (x1061 (+ x573 160)) x382) (= x495 (x1061 (+ x573 96))) (= x755 (x1061 (+ x510 32))) (= x1054 (x1061 (+ 192 x573))) (= (x1506 x535 x40 x1119 x504 x1481 x658) x469)) (and (=> (and (and (= (x413 1461501637330902918203684832716283019655932542975 x682) x1509) (= (x1012 x38) x1100) (= (x1012 x1456) x682) (= (x1061 (+ x38 96)) x389) (= x1018 (x1012 x725)) (= (x1061 (+ 64 x38)) x868) (= (x1012 x38) x388) (= x643 (x1061 (+ x38 32))) (= x1351 (x1061 (+ x38 32))) (= (x1061 (+ 64 x38)) x685) (= x549 x1450) (= (x1061 (+ x38 128)) x360) (= (x1012 x220) x948) (= x374 (x1012 x38)) (= x571 (x1061 (+ x38 32))) (= (x1012 x724) x652) (= x1296 (x1061 (+ x38 192))) (= (x1012 x720) x390) (= (x1061 (+ x38 64)) x172) (= x1473 (x1012 x38)) (= (x1012 160) x1456) (= x1356 (x1506 x1084 x374 x65 x657 x390 x1068)) (= (x1061 (+ x38 64)) x194) (<= x235 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x674 (x1012 x38)) (= x446 (> x1178 0)) (= (x1061 (+ 128 x38)) x1342) (= (x1012 x868) x657) (= (x1471 x1084 x846 x214 x1301 x1405) x1010) (= x1229 (x1012 x38)) (= x531 (x1012 x643)) (= x220 (x1061 (+ x38 96))) (= x521 (x1061 (+ x265 4))) (= x907 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) (= (x1012 x38) x846) (= (x1061 (+ x38 160)) x1253) (= (x91 x1084 x388) x1093) (= (x1012 x360) x528) (= x1450 (ite (= 0 x1084) x334 (ite (>= 32 x1084) x1093 (ite (<= x1084 64) x391 (ite (>= 96 x1084) x666 (ite (>= 128 x1084) x1010 (ite (>= 160 x1084) x1356 (ite (<= x1084 192) x907 (ite (>= 224 x1084) x986 x1024))))))))) (= x780 (x1012 x97)) (= x725 (x1061 (+ 32 x38))) (= x334 (x968 0)) (= (x1012 x172) x959) (= (x1012 x1351) x65) (= x1068 (x1012 x1342)) (= (x63 x1084 x1100 x1158 x959) x666) (= x647 (x1061 (+ 96 x38))) (= (x1061 (+ x38 32)) x964) (= (x1012 x807) x214) (= (x1012 x1150) x621) (= (x1061 (+ 96 x38)) x720) (= x488 (x1012 x1253)) (= x391 (x1452 x1084 x674 x936)) (= (x1012 x194) x654) (= (x1012 x1328) x670) (= (x1012 x964) x936) (= (x1061 (+ 160 x38)) x724) (= (x1012 x685) x1301) (= x874 (x1012 x1296)) (= (x1061 (+ 128 x38)) x1150) (<= 32 x235) (= x1405 (x1012 x647)) (= (x1061 (+ 32 x38)) x807) (= (x135 x1084 x1229 x531 x670 x948 x528 x652 x874) x986) (= x1328 (x1061 (+ x38 64))) (= x952 (x1012 x389)) (= x1158 (x1012 x571))) (or (and (not x446) (= x1178 x1052)) (and (and (<= x235 4294967295) (= 1 x1052) (<= 32 x235)) x446))) x1320) x1379)))) x1435))
(assert (x1522 x806))
(assert (=> (>= 10000 x1245) (= 0 (x1252 x1245))))
(assert (x1522 x1515))
(assert (x1522 x899))
(assert (= x1413 (x595 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089))))
(assert (x1522 x564))
(assert (x1522 x5))
(assert (x1522 x713))
(assert (x1522 x576))
(assert (x1522 x241))
(assert (x721 2065879269376))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (=> (>= 10000 x1017) (= (x1252 x1017) 0)))
(assert (= (x1262 (x1452 x535 x1041 x1419)) x1419))
(assert (= x1199 (x1262 (x1506 x1196 x397 x1199 x973 x888 x754))))
(assert (= (x227 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x282))
(assert (x1522 x1144))
(assert (x1522 x1300))
(assert (x1522 x1531))
(assert (x1522 x218))
(assert (x1522 x717))
(assert (x1522 x225))
(assert (x48 x399))
(assert (not (x721 (x968 0))))
(assert (x1522 x958))
(assert (x1522 x900))
(assert (= x1112 (=> (and (= (x1097 x911) x357) (= (not (> x357 1)) x1280)) (and x1280 x920))))
(assert (= (and x11 x1071) x1322))
(assert (=> (>= 10000 x208) (= (x1252 x208) 0)))
(assert (x1522 x563))
(assert (x1522 x593))
(assert (x1522 x809))
(assert (x1522 x249))
(assert (=> (>= 10000 x695) (= 0 (x1252 x695))))
(assert (= 0 (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (> (x472 x984 x1017 x1022 x668 x1348 x1136 x1492) 10000))
(assert (x1522 x783))
(assert (x1522 x1035))
(assert (x1522 x1033))
(assert (=> (>= 10000 x1078) (= 0 (x1252 x1078))))
(assert (=> (<= x875 10000) (= (x1252 x875) 0)))
(assert (x1522 x904))
(assert (x1522 x535))
(assert (= (x1252 (x472 x535 x873 x733 x631 x1078 x1340 x967)) (x472 x535 x873 x733 x631 x1078 x1340 x967)))
(assert (< (x91 x131 x1312) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x710))
(assert (x1522 x208))
(assert (x1522 x629))
(assert (= (x595 (x472 x1084 x1473 x1018 x654 x952 x621 x488)) x1084))
(assert (x1522 x44))
(assert (x1113 x780 1461501637330902918203684832716283019655932542976))
(assert (x1522 x630))
(assert (x1522 x567))
(assert (=> (<= x1381 10000) (= (x1252 x1381) 0)))
(assert (x1522 x1507))
(assert (< 10000 (x1506 x98 x422 x1266 x1161 x925 x1406)))
(assert (= (x1265 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089)) x1257))
(assert (x1522 x536))
(assert (= (x1265 (x63 x1084 x1100 x1158 x959)) x959))
(assert (= (x1471 x1413 x765 x570 x552 x378) (x1252 (x1471 x1413 x765 x570 x552 x378))))
(assert (= x670 (x1265 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874))))
(assert (x1522 x140))
(assert (= x1044 (x1262 (x472 x1196 x771 x1044 x608 x1381 x650 x1183))))
(assert (x1522 x474))
(assert (x1522 x693))
(assert (< 10000 (x1452 64 x593 1)))
(assert (x1522 x390))
(assert (=> (>= 10000 x904) (= (x1252 x904) 0)))
(assert (= (x1262 (x1506 x984 x676 x124 x225 x978 x362)) x124))
(assert (x1522 x486))
(assert (x1522 x1345))
(assert (= x1275 (=> (and (= (x1061 (+ x326 32)) x66) (<= x745 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 18446744073709551614 x745) (not (> x745 x489)) (>= 18446744073709551615 x745) (>= x395 160) (or (>= x326 57896044618658097711785492504343953926634992332820282019728792003956564820645) (<= x326 2065879269284)) (= (x1061 (+ 32 x354)) x934) (< x745 x489) (= x740 (x253 x66)) (= (x1486 (- x474 x326)) x395) (<= x740 1461501637330902918203684832716283019655932542975) (= (x1061 (+ x1056 32)) x1519) (= (x1061 (+ x1519 32)) x278) (= (x253 x934) x398) (not (= x745 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x398 1461501637330902918203684832716283019655932542975) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x745) (>= 18446744073709551455 x745)) (= x1177 (x253 x354)) (= x354 (x1061 (+ 32 x303))) (or (>= x745 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x745 18446744073709551455)) (= x517 (not (< 1 x1477))) (<= x745 18446744073709551614) (= x1420 (x253 x303)) (= (x1061 (+ 32 x66)) x303) (= (x1061 (+ 32 x745)) x1056) (>= 18446744073709551615 x745) (>= 5 x569) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x395) (= (x253 x326) x569) (= x489 (x1061 (+ x745 160))) (= (x1061 (+ x278 32)) x129)) (and x517 (=> (= x489 x1203) x331)))))
(assert (= (and (not x1224) x77) x537))
(assert (= (x227 (x91 x70 x700)) x700))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1471 x1084 x846 x214 x1301 x1405)))
(assert (x1522 x1385))
(assert (< 10000 (x1452 x1084 x674 x936)))
(assert (x1522 x420))
(assert (x1522 x651))
(assert (< 10000 (x1471 x984 x20 x208 x1050 x1011)))
(assert (x1522 x1301))
(assert (x1522 x138))
(assert (< (x1471 x131 x887 x29 x1064 x1133) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x1050))
(assert (x1522 x530))
(assert (x1522 x515))
(assert (x1522 x68))
(assert (not (x721 (x1506 x1196 x397 x1199 x973 x888 x754))))
(assert (= (x690 (x135 x131 x59 x1299 x714 x1218 x1264 x758 x498)) x498))
(assert (= x675 (or x1331 x1267)))
(assert (=> (<= x1111 10000) (= 0 (x1252 x1111))))
(assert (x1390 x249))
(assert (=> (<= x1136 10000) (= 0 (x1252 x1136))))
(assert (= (x1252 (x1506 x98 x422 x1266 x1161 x925 x1406)) (x1506 x98 x422 x1266 x1161 x925 x1406)))
(assert (x1522 x1493))
(assert (x1522 x963))
(assert (=> (>= 10000 x655) (= 0 (x1252 x655))))
(assert (= (x1511 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)) x948))
(assert (x1522 x1136))
(assert (x1522 x965))
(assert (= (=> (and (= x1462 (x1061 (+ 32 x147))) (= x718 (x1061 (+ x333 32))) (<= x1445 18446744073709551615) (or (>= x147 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x147 18446744073709551518)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x427) (<= x427 18446746139588821027)) (= x333 (x1061 (+ 32 x998))) (<= x147 18446744073709551614) (>= 18446744073709551615 x892) (>= 18446744073709551614 x147) (= x1398 (+ 31 x210)) (= (x1061 (+ 96 x147)) x858) (= x819 (+ 32 x858)) (= x1448 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1398)) (<= x941 18446744073709551614) (or (>= 18446746139588821027 x998) (>= x998 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= x341 (x1061 (+ x554 32))) (= (x1061 (+ 31 x427)) x1216) (= x427 (x1061 (+ x1445 x998))) (>= 18446744073709551613 x147) (or (>= x456 57896044618658097711785492504343953926634992332820282019728792003956564820100) (<= x456 18446746139588821059)) (or (<= x147 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x147)) (= (not (> x598 x341)) x640) (= (x253 x333) x1207) (= (x253 x718) x1445) (= (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x769) x941) (= (+ x1448 63) x769) (<= x147 18446744073709551614) (= x998 (x1061 (+ x554 x293))) (= x892 (+ x941 x858)) (= (x253 x554) x293) (>= 1461501637330902918203684832716283019655932542975 x223) (< x858 x892) (= (x1061 (+ x921 x210)) x103) (<= 2 x892) (= (x1486 (- x456 x998)) x454) (= x1075 (x1061 (+ 32 x1462))) (= (x253 x998) x223) (<= x454 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x147 18446744073709551613) (not (> x147 x858)) (<= x147 18446744073709551613) (< x147 x858) (<= x293 18446744073709551615) (not (< x456 x103)) (= x921 (x1061 (+ 32 x427))) (or (<= x147 18446744073709551518) (>= x147 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x210 (x253 x427)) (not (< x892 x858)) (>= 18446744073709551615 x210) (= (+ x819 x210) x396) (or (>= 18446746139588821027 x554) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x554)) (>= x454 96) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1216) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456)) (> x456 x1216)) (and (> x1216 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x456)))) (and (=> (= x892 x425) x1186) x640)) x1380))
(assert (x1522 x1126))
(assert (x1522 x267))
(assert (x1522 x37))
(assert (= (x472 x131 x1272 x550 x970 x44 x36 x190) (x1252 (x472 x131 x1272 x550 x970 x44 x36 x190))))
(assert (= (x1159 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x695))
(assert (x1522 x353))
(assert (= x1084 (x595 (x91 x1084 x388))))
(assert (x1522 x1155))
(assert (= (x1252 (x63 x70 x1162 x834 x1288)) (x63 x70 x1162 x834 x1288)))
(assert (x1522 x1221))
(assert (=> (>= 10000 x384) (= (x1252 x384) 0)))
(assert (x1522 x325))
(assert (x1522 x147))
(assert (x48 x529))
(assert (x1390 x1447))
(assert (=> (>= 10000 x1039) (= 0 (x1252 x1039))))
(assert (< 10000 (x91 x984 x1355)))
(assert (x1522 x53))
(assert (not (x721 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233))))
(assert (= x1374 (and x35 x199)))
(assert (x1522 x302))
(assert (= (x595 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) x1196))
(assert (= x267 (x1265 (x63 66 x1430 x1137 x267))))
(assert (x1522 x342))
(assert (=> (>= 10000 x834) (= (x1252 x834) 0)))
(assert (x1522 x1000))
(assert (= (x227 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874)) x1229))
(assert (x1522 x1143))
(assert (x1522 x100))
(assert (x1522 x1185))
(assert (x1522 x1255))
(assert (x1522 x1208))
(assert (x1522 x401))
(assert (x1522 x939))
(assert (x1390 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x1018 10000) (= (x1252 x1018) 0)))
(assert (x1522 x489))
(assert (=> (<= x1266 10000) (= (x1252 x1266) 0)))
(assert (x1260 32 x492))
(assert (< 10000 (x91 x535 x632)))
(assert (=> (>= 10000 x936) (= 0 (x1252 x936))))
(assert (x1522 x1056))
(assert (x1522 x911))
(assert (= (x1452 x1196 x384 x1327) (x1252 (x1452 x1196 x384 x1327))))
(assert (x1522 x66))
(assert (= (x1252 2065879269284) 0))
(assert (not (x721 (x91 x70 x700))))
(assert (x1522 x1272))
(assert (x451 x629))
(assert (x1522 x382))
(assert (=> (>= 10000 x190) (= 0 (x1252 x190))))
(assert (= (x63 x535 x738 x121 x461) (x1252 (x63 x535 x738 x121 x461))))
(assert (x680 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1262 (x1452 64 x593 1)) 1))
(assert (x1522 x621))
(assert (= (x595 (x63 x131 x115 x176 x812)) x131))
(assert (x1522 x830))
(assert (= x1526 (and x92 (not x148))))
(assert (= (x1262 (x63 x131 x115 x176 x812)) x176))
(assert (x1522 x251))
(assert (=> (>= 10000 x221) (= 0 (x1252 x221))))
(assert (x1522 x433))
(assert (=> (>= 10000 x1064) (= 0 (x1252 x1064))))
(assert (= x686 (and x1256 (not x418))))
(assert (= x834 (x1262 (x63 x70 x1162 x834 x1288))))
(assert (x1522 x1149))
(assert (x1522 x435))
(assert (x1522 x1485))
(assert (x1522 x759))
(assert (x1522 x39))
(assert (= (x1252 (x91 x984 x1355)) (x91 x984 x1355)))
(assert (x1522 x1251))
(assert (=> (>= 10000 x1388) (= (x1252 x1388) 0)))
(assert (x680 x527))
(assert (x1522 x557))
(assert (x1522 x1121))
(assert (x1522 x363))
(assert (x1522 x1492))
(assert (x1522 x1340))
(assert (=> (>= 10000 x267) (= (x1252 x267) 0)))
(assert (x1522 x134))
(assert (x1522 x913))
(assert (=> (<= x187 10000) (= 0 (x1252 x187))))
(assert (= (and (not x990) x975) x1267))
(assert (=> (>= 10000 x634) (= 0 (x1252 x634))))
(assert (=> (>= 10000 x1419) (= 0 (x1252 x1419))))
(assert (x1522 x72))
(assert (x1522 x56))
(assert (x950 x780))
(assert (x1522 x765))
(assert (= (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830) (x1252 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (= (and x92 x148) x199))
(assert (x1522 x1431))
(assert (x1522 x1359))
(assert (x1522 x1258))
(assert (= x703 (or x1057 x646)))
(assert (x1522 x25))
(assert (= (x1265 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492)) x668))
(assert (x1522 x1018))
(assert (= x440 (x1262 (x1452 x131 x23 x440))))
(assert (x1522 x434))
(assert (= (x595 (x91 x1413 x1211)) x1413))
(assert (= (x1265 (x63 x1413 x1230 x441 x1035)) x1035))
(assert (x906 x526))
(assert (=> (<= x1242 10000) (= (x1252 x1242) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492)))
(assert (x1522 x1505))
(assert (= 0 (x1252 57896044618658097711785492504343953926634992332820282019728792003956564820100)))
(assert (not (x721 (x1471 x1196 x781 x1138 x1039 x696))))
(assert (x1113 x607 1461501637330902918203684832716283019655932542976))
(assert (x950 x420))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1506 x535 x40 x1119 x504 x1481 x658)))
(assert (x1522 x650))
(assert (= (x1159 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x546))
(assert (=> (>= 10000 x738) (= 0 (x1252 x738))))
(assert (x1522 x903))
(assert (x680 1461501637330902918203684832716283019655932542976))
(assert (x1522 x217))
(assert (= (x1511 (x472 x98 x764 x800 x207 x79 x228 x557)) x79))
(assert (= (x1265 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)) x1323))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x98 x419 x561 x795)))
(assert (x1522 x851))
(assert (x1522 x1242))
(assert (=> (>= 10000 x781) (= (x1252 x781) 0)))
(assert (=> (<= x1481 10000) (= (x1252 x1481) 0)))
(assert (= (x1252 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (=> (<= x531 10000) (= (x1252 x531) 0)))
(assert (x1522 x1277))
(assert (x1522 x362))
(assert (< 10000 (x91 x1196 x285)))
(assert (x1522 x664))
(assert (x950 x377))
(assert (= x1244 (and x1369 x446)))
(assert (= (x595 (x1452 x984 x1036 x515)) x984))
(assert (= (x1452 x98 x1069 x1111) (x1252 (x1452 x98 x1069 x1111))))
(assert (x1522 x183))
(assert (= x92 (and x675 x478)))
(assert (= (x227 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030)) x1334))
(assert (< 10000 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830)))
(assert (x1522 x1211))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x98 x1069 x1111)))
(assert (=> (>= 10000 x461) (= 0 (x1252 x461))))
(assert (x1522 x813))
(assert (= (x135 x98 x180 x118 x187 x634 x1058 x1515 x789) (x1252 (x135 x98 x180 x118 x187 x634 x1058 x1515 x789))))
(assert (x1522 x20))
(assert (=> (>= 10000 x228) (= (x1252 x228) 0)))
(assert (=> (<= x513 10000) (= (x1252 x513) 0)))
(assert (= (x227 (x91 x1413 x1211)) x1211))
(assert (x1522 x1229))
(assert (x1522 x333))
(assert (= (x1506 x70 x1493 x347 x505 x1291 x402) (x1252 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (x1522 x653))
(assert (x1522 x271))
(assert (x1522 x821))
(assert (=> (>= 10000 x390) (= (x1252 x390) 0)))
(assert (x1113 x682 1461501637330902918203684832716283019655932542976))
(assert (= (x1265 (x63 x131 x115 x176 x812)) x812))
(assert (= (x1252 (x1452 x70 x1443 x532)) (x1452 x70 x1443 x532)))
(assert (= (x227 (x472 x1196 x771 x1044 x608 x1381 x650 x1183)) x771))
(assert (= (x595 (x968 0)) 0))
(assert (x1522 x1247))
(assert (x1522 x488))
(assert (= x1105 (x1262 (x1471 x535 x1245 x1105 x1466 x582))))
(assert (x721 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x906 x971))
(assert (= x513 (x1262 (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083))))
(assert (x1522 x356))
(assert (x1522 x510))
(assert (x1522 x1412))
(assert (x1522 x235))
(assert (=> (>= 10000 x528) (= (x1252 x528) 0)))
(assert (x1522 x826))
(assert (=> (<= x378 10000) (= (x1252 x378) 0)))
(assert (x1522 x201))
(assert (x721 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= x1291 (x1511 (x1506 x70 x1493 x347 x505 x1291 x402))))
(assert (= (x595 (x91 x535 x632)) x535))
(assert (x1522 x329))
(assert (x1522 x1218))
(assert (=> (>= 10000 x440) (= 0 (x1252 x440))))
(assert (x1522 x1084))
(assert (=> (<= x714 10000) (= 0 (x1252 x714))))
(assert (=> (>= 10000 x846) (= 0 (x1252 x846))))
(assert (= (x1262 (x1452 x1084 x674 x936)) x936))
(assert (= (x1262 (x63 x1084 x1100 x1158 x959)) x1158))
(assert (= (x227 (x1452 x98 x1069 x1111)) x1069))
(assert (x1522 x750))
(assert (x1522 x349))
(assert (x906 x1477))
(assert (=> (<= x1030 10000) (= (x1252 x1030) 0)))
(assert (=> (>= 10000 x436) (= 0 (x1252 x436))))
(assert (=> (>= 10000 x1442) (= (x1252 x1442) 0)))
(assert (> (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083) 10000))
(assert (= x40 (x227 (x1506 x535 x40 x1119 x504 x1481 x658))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x131 x115 x176 x812)))
(assert (x1522 x1164))
(assert (x1522 x606))
(assert (x1522 x373))
(assert (x1522 x395))
(assert (= x1318 (x1265 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421))))
(assert (x1522 x925))
(assert (not (x721 (x1506 x98 x422 x1266 x1161 x925 x1406))))
(assert (x1390 x656))
(assert (x1522 x238))
(assert (x1522 x645))
(assert (= (x1067 (x472 x1196 x771 x1044 x608 x1381 x650 x1183)) x1183))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x984 x1513 x216 x767)))
(assert (x1522 x346))
(assert (=> (>= 10000 x631) (= (x1252 x631) 0)))
(assert (x1522 x195))
(assert (= (and x1172 (not x590)) x102))
(assert (not (x721 (x63 x98 x419 x561 x795))))
(assert (= x722 (x1511 (x135 x1413 x41 x299 x1257 x722 x536 x462 x1089))))
(assert (< (x1506 x1196 x397 x1199 x973 x888 x754) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x207))
(assert (=> (<= x952 10000) (= (x1252 x952) 0)))
(assert (x1522 x160))
(assert (x1522 x272))
(assert (x1522 x1445))
(assert (x1522 x845))
(assert (x1522 x612))
(assert (x1522 x1368))
(assert (=> (<= x115 10000) (= 0 (x1252 x115))))
(assert (x1522 x961))
(assert (= (x1265 (x1471 x70 x730 x45 x277 x125)) x277))
(assert (not (x721 (x472 x984 x1017 x1022 x668 x1348 x1136 x1492))))
(assert (x1522 x575))
(assert (x721 2065879269444))
(assert (x1522 x1326))
(assert (=> (<= x1355 10000) (= 0 (x1252 x1355))))
(assert (x1522 x1338))
(assert (x48 x769))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x63 x1196 x790 x655 x22)))
(assert (x1522 x1391))
(assert (=> (>= 10000 x812) (= (x1252 x812) 0)))
(assert (= x582 (x1511 (x1471 x535 x1245 x1105 x1466 x582))))
(assert (= (=> (and (= x310 x431) (= x7 x420) (= x792 x1345) (= x73 x1092)) x701) x866))
(assert (and (= 81 (x96 9 9)) (= (x96 27 3) 81) (= 27 (x96 9 3)) (= (x96 3 3) 9)))
(assert (x721 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x1522 x93))
(assert (x1522 x277))
(assert (x680 x399))
(assert (x1522 x1238))
(assert (x1522 x1160))
(assert (x1522 x1003))
(assert (x721 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (=> (>= 10000 x1162) (= 0 (x1252 x1162))))
(assert (x1522 x1130))
(assert (< (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x275))
(assert (x1522 x1124))
(assert (x1522 x1147))
(assert (x1522 x896))
(assert (x1522 x1519))
(assert (x1522 x89))
(assert (= x1138 (x1262 (x1471 x1196 x781 x1138 x1039 x696))))
(assert (= (x1511 (x1471 x1084 x846 x214 x1301 x1405)) x1405))
(assert (= x323 (=> (and (= (x1061 (+ x28 x1423)) x753) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x753 x946) (= x70 (x525 x946)) (= x1152 (x1061 (+ 31 x486))) (= x1364 (x1061 (+ x1423 x486))) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x946 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x753 1) (= (<= x70 224) x953) (= (x1061 (+ 32 x946)) x613) (= (x1486 (- x753 x946)) x786) (= (x1486 (- x786 32)) x140) (= (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1152) x28)) (and (=> (and (= x1073 (x525 x884)) (= x889 (x968 0)) (= (x1061 (+ x613 128)) x1368) (= (x1061 (+ 96 x613)) x886) (= (x525 x330) x1442) (= x821 (x525 x39)) (= (x525 x613) x1334) (= (x1061 (+ x613 64)) x576) (= x1077 (x1061 (+ x613 96))) (= x1049 (x1061 (+ 32 x613))) (= (x1353 x890) x296) (= (x1061 (+ x613 160)) x471) (= (x1061 (+ 32 x613)) x859) (= (x1061 (+ x613 96)) x1399) (= x958 (x1061 (+ 64 x613))) (= (x525 x1049) x1426) (= x1291 (x525 x1399)) (= (x1061 (+ 128 x613)) x263) (= (x1471 x70 x730 x45 x277 x125) x1192) (= (x525 x613) x1493) (= x1162 (x525 x613)) (= x834 (x525 x1394)) (= (x1061 (+ x613 32)) x1005) (= (x525 x1249) x505) (= (ite (= x70 0) x889 (ite (>= 32 x70) x1250 (ite (<= x70 64) x166 (ite (>= 96 x70) x1246 (ite (<= x70 128) x1192 (ite (>= 160 x70) x1006 (ite (<= x70 192) x1392 (ite (<= x70 224) x969 x1534)))))))) x708) (= x1030 (x525 x1371)) (= x45 (x525 x1005)) (= x1393 (x525 x613)) (= (x1061 (+ 64 x613)) x1249) (= (x1061 (+ x613 32)) x330) (= x1323 (x525 x576)) (= x260 (not (> x1494 1))) (= x1421 (x525 x364)) (= x532 (x525 x791)) (= x730 (x525 x613)) (= x39 (x1061 (+ 128 x613))) (= x929 (x525 x1077)) (= (x91 x70 x700) x1250) (= (x525 x665) x483) (= (x525 x471) x1357) (= (x525 x263) x402) (= x166 (x1452 x70 x1443 x532)) (= (x525 x603) x1288) (= x1494 (x1353 x296)) (= x1371 (x1061 (+ 160 x613))) (= (x525 x146) x1318) (= x125 (x525 x886)) (= x364 (x1061 (+ x613 192))) (= (x525 x859) x347) (= x791 (x1061 (+ x613 32))) (<= 1 x483) (= x884 (x1061 (+ 96 x613))) (= (x525 x613) x1443) (= x277 (x525 x958)) (= (x63 x70 x1162 x834 x1288) x1246) (= x700 (x525 x613)) (= x856 (x1061 (+ 32 x665))) (= x1006 (x1506 x70 x1493 x347 x505 x1291 x402)) (= (x525 x1368) x546) (= x1394 (x1061 (+ 32 x613))) (= (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421) x969) (= (x1061 (+ 64 x613)) x146) (= (x1061 (+ 64 x613)) x603) (= (x472 x70 x1334 x1426 x1323 x1073 x821 x1030) x1392)) (and (=> (= x373 x753) x602) x260)) x953))))
(assert (x1260 128 x526))
(assert (=> (>= 10000 x40) (= 0 (x1252 x40))))
(assert (= x1536 (and x728 (not x230))))
(assert (= (x1262 (x135 x70 x1393 x1442 x1318 x929 x546 x1357 x1421)) x1442))
(assert (x1113 x420 1461501637330902918203684832716283019655932542976))
(assert (x1522 x1377))
(assert (x906 x492))
(assert (=> (<= x185 10000) (= 0 (x1252 x185))))
(assert (= (=> (and (= (>= 224 x1196) x520) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x161 (x1486 (- x302 32))) (= x1196 (x49 x926)) (= x32 (x1061 (+ x949 x289))) (>= x238 1) (= (x1061 (+ x949 x270)) x238) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1447 (x1061 (+ x289 31))) (= x270 (x413 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1447)) (= x302 (x1486 (- x238 x926))) (> x238 x926) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1061 (+ x926 32)) x797)) (and x520 (=> (and (= (x49 x74) x1354) (= x355 (x135 x1196 x282 x381 x1373 x424 x695 x417 x1233)) (= x384 (x49 x797)) (= x933 (x1061 (+ 32 x797))) (= x790 (x49 x797)) (= x1183 (x49 x62)) (>= x1354 1) (= (x49 x797) x781) (= (x1452 x1196 x384 x1327) x1317) (= (x1061 (+ 96 x797)) x443) (= x836 (x1061 (+ 128 x797))) (= x381 (x49 x776)) (= x241 (x1061 (+ x797 32))) (= x417 (x49 x304)) (= (x49 x240) x655) (= (x49 x933) x1044) (= (x1061 (+ 96 x797)) x305) (= x178 (x1061 (+ 32 x797))) (= x1140 (x1061 (+ 128 x797))) (= x285 (x49 x797)) (= x304 (x1061 (+ 160 x797))) (= x835 (x1061 (+ x797 64))) (= (x49 x241) x1199) (= x1167 (x1061 (+ 64 x797))) (= x754 (x49 x1530)) (= x1233 (x49 x133)) (= (x1061 (+ 160 x797)) x62) (= (x49 x443) x696) (= (x49 x305) x888) (= (x1061 (+ 64 x797)) x705) (= (x49 x797) x397) (= (x472 x1196 x771 x1044 x608 x1381 x650 x1183) x785) (= x1496 (x968 0)) (= x849 (x1061 (+ x797 32))) (= x776 (x1061 (+ x797 32))) (= x282 (x49 x797)) (= (x1061 (+ 64 x797)) x1182) (= (x1506 x1196 x397 x1199 x973 x888 x754) x1234) (= x1039 (x49 x835)) (= x133 (x1061 (+ 192 x797))) (= x1373 (x49 x746)) (= x1530 (x1061 (+ x797 128))) (= (x91 x1196 x285) x1498) (= x1400 (x1471 x1196 x781 x1138 x1039 x696)) (= (x1061 (+ 96 x797)) x1314) (= x1138 (x49 x178)) (= (x943 x89) x1428) (= x1091 (not (< 1 x1276))) (= (x49 x1490) x424) (= x771 (x49 x797)) (= (x49 x836) x650) (= (x1061 (+ 32 x797)) x240) (= (x49 x1167) x608) (= x1276 (x943 x1428)) (= x1329 (x1061 (+ x74 32))) (= (x1061 (+ x797 96)) x1490) (= (x49 x705) x22) (= x1381 (x49 x1314)) (= x1327 (x49 x849)) (= x448 (ite (= 0 x1196) x1496 (ite (>= 32 x1196) x1498 (ite (>= 64 x1196) x1317 (ite (>= 96 x1196) x748 (ite (<= x1196 128) x1400 (ite (>= 160 x1196) x1234 (ite (>= 192 x1196) x785 (ite (<= x1196 224) x355 x1277))))))))) (= x695 (x49 x1140)) (= x973 (x49 x1182)) (= x748 (x63 x1196 x790 x655 x22)) (= x746 (x1061 (+ x797 64)))) (and x1091 (=> (= x238 x252) x1517))))) x403))
(assert (x1522 x229))
(assert (x1522 x1466))
(assert (x1522 x351))
(assert (= x70 (x595 (x472 x70 x1334 x1426 x1323 x1073 x821 x1030))))
(assert (x1522 x1528))
(assert (x1522 x1501))
(assert (x1522 x471))
(assert (x1522 x493))
(assert (=> (>= 10000 x498) (= 0 (x1252 x498))))
(assert (x1522 x252))
(assert (x721 2189116922))
(assert (x1522 x1451))
(assert (x1522 x1291))
(assert (x1522 x1037))
(assert (= x515 (x1262 (x1452 x984 x1036 x515))))
(assert (= x1084 (x595 (x135 x1084 x1229 x531 x670 x948 x528 x652 x874))))
(assert (x1522 x1316))
(assert (x680 x976))
(assert (= x100 (x1511 (x135 x535 x1242 x1478 x1468 x100 x275 x1228 x830))))
(assert (x950 x249))
(assert (= x795 (x1265 (x63 x98 x419 x561 x795))))
(assert (=> (<= x1299 10000) (= 0 (x1252 x1299))))
(assert (x1522 x185))
(assert (= (x1252 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (x1522 x825))
(assert (x1522 x798))
(assert (=> (<= x433 10000) (= (x1252 x433) 0)))
(assert (x1390 x976))
(assert (< (x135 x984 x1121 x513 x803 x342 x581 x1020 x1083) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x63 x535 x738 x121 x461) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1522 x113))
(assert (=> (>= 10000 x758) (= 0 (x1252 x758))))
(assert (< 10000 (x91 x131 x1312)))
(assert (x1522 x28))
(assert (x1522 x441))
(assert (x1522 x1478))
(assert (x1522 x86))
(assert (x1522 x190))
(assert (x1522 x1523))
(assert (x1113 x684 1461501637330902918203684832716283019655932542976))
(assert (x1522 x1420))
(assert (< 10000 (x63 x1196 x790 x655 x22)))
(assert (=> (>= 10000 x1050) (= 0 (x1252 x1050))))
(assert (=> (<= x125 10000) (= (x1252 x125) 0)))
(assert (x1522 x315))
(assert (=> (>= 10000 x41) (= (x1252 x41) 0)))
(check-sat)
(exit)
