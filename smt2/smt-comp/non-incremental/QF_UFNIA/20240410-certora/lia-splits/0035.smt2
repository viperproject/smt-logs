(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2716 () Int)
(declare-fun x2004 () Int)
(declare-fun x2250 () Bool)
(declare-fun x700 () Int)
(declare-fun x1931 () Bool)
(declare-fun x2749 () Int)
(declare-fun x349 () Int)
(declare-fun x767 () Bool)
(declare-fun x815 () Int)
(declare-fun x403 () Int)
(declare-fun x1377 () Int)
(declare-fun x1298 () Int)
(declare-fun x2170 () Int)
(declare-fun x1018 () Int)
(declare-fun x2764 () Int)
(declare-fun x717 () Bool)
(declare-fun x2129 () Int)
(declare-fun x2648 () Bool)
(declare-fun x282 (Int) Int)
(declare-fun x2612 () Int)
(declare-fun x1354 (Int) Int)
(declare-fun x2169 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x7 () Int)
(declare-fun x1639 () Int)
(declare-fun x865 () Int)
(declare-fun x259 () Bool)
(declare-fun x480 () Int)
(declare-fun x97 () Int)
(declare-fun x519 () Int)
(declare-fun x910 (Int) Int)
(declare-fun x2468 () Bool)
(declare-fun x1284 () Int)
(declare-fun x1727 () Int)
(declare-fun x2534 () Int)
(declare-fun x180 () Int)
(declare-fun x1120 () Int)
(declare-fun x457 (Int) Int)
(declare-fun x1676 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x885 () Int)
(declare-fun x1059 () Bool)
(declare-fun x887 () Int)
(declare-fun x1830 () Int)
(declare-fun x1168 () Int)
(declare-fun x1979 () Int)
(declare-fun x2664 () Int)
(declare-fun x374 () Int)
(declare-fun x1165 () Int)
(declare-fun x585 () Int)
(declare-fun x649 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x1192 () Int)
(declare-fun x139 () Int)
(declare-fun x1696 () Int)
(declare-fun x2002 () Int)
(declare-fun x1772 () Int)
(declare-fun x175 () Int)
(declare-fun x1884 () Bool)
(declare-fun x2564 () Int)
(declare-fun x1550 () Int)
(declare-fun x1523 () Int)
(declare-fun x847 () Bool)
(declare-fun x1687 () Int)
(declare-fun x1701 () Int)
(declare-fun x1761 () Int)
(declare-fun x341 () Int)
(declare-fun x164 () Int)
(declare-fun x760 () Int)
(declare-fun x841 () Int)
(declare-fun x1625 () Int)
(declare-fun x2361 () Int)
(declare-fun x407 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2452 () Int)
(declare-fun x1270 (Int) Int)
(declare-fun x753 () Bool)
(declare-fun x1951 () Int)
(declare-fun x2093 () Int)
(declare-fun x2401 () Int)
(declare-fun x758 () Int)
(declare-fun x2058 () Int)
(declare-fun x1171 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1583 () Int)
(declare-fun x2606 (Int) Int)
(declare-fun x1075 () Bool)
(declare-fun x39 () Bool)
(declare-fun x698 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x898 () Int)
(declare-fun x2285 () Int)
(declare-fun x1469 () Int)
(declare-fun x2123 () Int)
(declare-fun x1452 (Int Int Int Int Int) Int)
(declare-fun x2150 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x2114 () Int)
(declare-fun x325 () Int)
(declare-fun x1004 () Int)
(declare-fun x1363 () Int)
(declare-fun x2267 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x1530 () Int)
(declare-fun x2365 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x2418 () Int)
(declare-fun x217 () Bool)
(declare-fun x2744 (Int Int) Int)
(declare-fun x373 () Int)
(declare-fun x1499 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x603 () Bool)
(declare-fun x2138 (Int) Int)
(declare-fun x2543 () Bool)
(declare-fun x2369 () Int)
(declare-fun x2099 () Bool)
(declare-fun x157 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x1106 () Int)
(declare-fun x2301 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x833 () Int)
(declare-fun x483 () Bool)
(declare-fun x2363 () Int)
(declare-fun x2521 () Int)
(declare-fun x2440 () Int)
(declare-fun x1475 () Int)
(declare-fun x1503 () Int)
(declare-fun x1742 () Int)
(declare-fun x2707 () Int)
(declare-fun x1187 () Int)
(declare-fun x1131 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2029 () Bool)
(declare-fun x1654 () Int)
(declare-fun x122 () Int)
(declare-fun x671 () Bool)
(declare-fun x1919 () Int)
(declare-fun x2761 () Int)
(declare-fun x350 () Int)
(declare-fun x987 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1920 () Int)
(declare-fun x125 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1740 (Int) Int)
(declare-fun x804 () Int)
(declare-fun x696 () Bool)
(declare-fun x2185 () Int)
(declare-fun x1365 () Int)
(declare-fun x1249 () Int)
(declare-fun x2155 () Int)
(declare-fun x251 () Int)
(declare-fun x2134 () Int)
(declare-fun x179 () Int)
(declare-fun x729 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1807 () Int)
(declare-fun x1273 (Int) Int)
(declare-fun x1132 () Int)
(declare-fun x384 () Bool)
(declare-fun x1722 () Int)
(declare-fun x1087 () Int)
(declare-fun x534 () Int)
(declare-fun x1802 (Int) Int)
(declare-fun x1671 () Bool)
(declare-fun x918 () Int)
(declare-fun x268 () Int)
(declare-fun x1232 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x239 () Int)
(declare-fun x2098 () Int)
(declare-fun x8 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x31 (Int) Int)
(declare-fun x2458 () Int)
(declare-fun x1276 () Int)
(declare-fun x925 () Bool)
(declare-fun x1969 () Int)
(declare-fun x437 () Int)
(declare-fun x1262 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1603 () Int)
(declare-fun x1615 () Int)
(declare-fun x1333 () Int)
(declare-fun x369 () Int)
(declare-fun x994 () Bool)
(declare-fun x1216 () Int)
(declare-fun x2351 () Int)
(declare-fun x118 () Int)
(declare-fun x1109 () Int)
(declare-fun x1579 () Int)
(declare-fun x2400 () Int)
(declare-fun x1433 () Int)
(declare-fun x1133 () Int)
(declare-fun x2319 () Int)
(declare-fun x778 () Int)
(declare-fun x1629 () Int)
(declare-fun x1832 () Int)
(declare-fun x2417 () Int)
(declare-fun x1410 () Bool)
(declare-fun x2491 () Int)
(declare-fun x365 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1472 () Int)
(declare-fun x606 () Int)
(declare-fun x688 () Bool)
(declare-fun x212 () Int)
(declare-fun x943 () Int)
(declare-fun x670 () Int)
(declare-fun x2728 () Int)
(declare-fun x355 () Bool)
(declare-fun x848 () Bool)
(declare-fun x2204 () Int)
(declare-fun x2069 () Int)
(declare-fun x1459 () Int)
(declare-fun x2234 () Int)
(declare-fun x1029 () Int)
(declare-fun x1055 () Bool)
(declare-fun x1650 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x2705 () Int)
(declare-fun x1440 () Int)
(declare-fun x991 () Bool)
(declare-fun x814 () Int)
(declare-fun x183 () Bool)
(declare-fun x1418 () Int)
(declare-fun x2541 () Int)
(declare-fun x2561 () Int)
(declare-fun x2355 () Int)
(declare-fun x64 () Int)
(declare-fun x1065 () Int)
(declare-fun x2306 () Int)
(declare-fun x2360 () Bool)
(declare-fun x755 () Int)
(declare-fun x442 () Int)
(declare-fun x2030 () Int)
(declare-fun x1318 () Int)
(declare-fun x90 () Int)
(declare-fun x1300 () Int)
(declare-fun x441 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x181 () Bool)
(declare-fun x88 () Int)
(declare-fun x1009 () Int)
(declare-fun x293 () Int)
(declare-fun x450 () Bool)
(declare-fun x995 () Int)
(declare-fun x2575 () Int)
(declare-fun x1492 () Int)
(declare-fun x2545 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1673 () Int)
(declare-fun x1306 () Int)
(declare-fun x685 () Int)
(declare-fun x2241 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x432 () Bool)
(declare-fun x2136 () Int)
(declare-fun x454 () Int)
(declare-fun x2777 () Int)
(declare-fun x2508 () Bool)
(declare-fun x156 () Int)
(declare-fun x277 () Int)
(declare-fun x1768 () Int)
(declare-fun x2038 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1984 () Int)
(declare-fun x897 () Int)
(declare-fun x1481 () Bool)
(declare-fun x2008 () Int)
(declare-fun x793 () Int)
(declare-fun x1717 () Int)
(declare-fun x1084 () Bool)
(declare-fun x961 () Int)
(declare-fun x1379 () Int)
(declare-fun x1129 () Int)
(declare-fun x2690 () Int)
(declare-fun x1757 () Int)
(declare-fun x1548 () Int)
(declare-fun x564 () Int)
(declare-fun x2041 () Bool)
(declare-fun x809 () Int)
(declare-fun x1340 () Int)
(declare-fun x707 () Int)
(declare-fun x2198 () Int)
(declare-fun x1301 () Int)
(declare-fun x1537 () Int)
(declare-fun x54 () Int)
(declare-fun x185 () Int)
(declare-fun x1150 () Int)
(declare-fun x67 () Int)
(declare-fun x2516 () Int)
(declare-fun x1958 () Int)
(declare-fun x1259 () Int)
(declare-fun x722 () Int)
(declare-fun x2273 () Int)
(declare-fun x348 () Bool)
(declare-fun x853 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1023 () Int)
(declare-fun x2724 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1773 () Int)
(declare-fun x2484 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x2181 () Int)
(declare-fun x225 () Int)
(declare-fun x572 () Bool)
(declare-fun x541 () Int)
(declare-fun x1275 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x1203 () Int)
(declare-fun x261 () Bool)
(declare-fun x1144 () Int)
(declare-fun x2453 () Bool)
(declare-fun x1518 () Int)
(declare-fun x65 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x2066 () Int)
(declare-fun x2388 () Int)
(declare-fun x956 () Int)
(declare-fun x1787 () Int)
(declare-fun x119 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1628 () Int)
(declare-fun x304 () Int)
(declare-fun x136 () Bool)
(declare-fun x978 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x37 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x14 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1898 () Int)
(declare-fun x2017 () Int)
(declare-fun x941 () Int)
(declare-fun x320 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1799 () Int)
(declare-fun x75 () Int)
(declare-fun x1453 () Int)
(declare-fun x860 () Bool)
(declare-fun x197 () Int)
(declare-fun x1170 () Bool)
(declare-fun x323 () Int)
(declare-fun x2189 () Bool)
(declare-fun x988 () Bool)
(declare-fun x327 () Int)
(declare-fun x2721 () Int)
(declare-fun x491 () Int)
(declare-fun x110 () Int)
(declare-fun x151 () Int)
(declare-fun x460 () Int)
(declare-fun x2619 () Int)
(declare-fun x1202 (Int) Int)
(declare-fun x2247 () Bool)
(declare-fun x1108 () Int)
(declare-fun x876 () Int)
(declare-fun x612 () Int)
(declare-fun x2673 () Bool)
(declare-fun x1370 () Int)
(declare-fun x2037 () Int)
(declare-fun x1908 () Int)
(declare-fun x977 () Int)
(declare-fun x1763 () Bool)
(declare-fun x883 () Int)
(declare-fun x2768 () Bool)
(declare-fun x2349 () Int)
(declare-fun x448 () Int)
(declare-fun x2426 () Int)
(declare-fun x796 () Int)
(declare-fun x802 () Int)
(declare-fun x658 () Int)
(declare-fun x131 () Bool)
(declare-fun x272 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x2024 () Int)
(declare-fun x311 () Int)
(declare-fun x216 () Int)
(declare-fun x1855 () Int)
(declare-fun x1945 () Int)
(declare-fun x2579 () Int)
(declare-fun x1809 () Int)
(declare-fun x296 () Bool)
(declare-fun x1201 () Int)
(declare-fun x789 () Int)
(declare-fun x2576 () Int)
(declare-fun x2292 () Int)
(declare-fun x632 () Int)
(declare-fun x896 () Int)
(declare-fun x799 () Int)
(declare-fun x1157 () Int)
(declare-fun x702 () Int)
(declare-fun x1367 () Int)
(declare-fun x2773 () Int)
(declare-fun x1348 () Int)
(declare-fun x188 () Int)
(declare-fun x82 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1177 () Int)
(declare-fun x2533 () Int)
(declare-fun x512 () Int)
(declare-fun x2589 () Int)
(declare-fun x464 () Int)
(declare-fun x1076 () Int)
(declare-fun x2569 () Int)
(declare-fun x2779 () Int)
(declare-fun x1731 () Int)
(declare-fun x439 () Int)
(declare-fun x1574 () Bool)
(declare-fun x2635 () Int)
(declare-fun x322 () Int)
(declare-fun x730 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2671 () Int)
(declare-fun x1862 () Int)
(declare-fun x2326 () Int)
(declare-fun x2196 () Bool)
(declare-fun x2236 () Int)
(declare-fun x262 () Int)
(declare-fun x2252 () Bool)
(declare-fun x2479 () Int)
(declare-fun x2103 () Int)
(declare-fun x1011 () Int)
(declare-fun x2089 () Int)
(declare-fun x120 () Int)
(declare-fun x2727 () Bool)
(declare-fun x980 () Int)
(declare-fun x1716 () Int)
(declare-fun x840 () Int)
(declare-fun x1424 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x345 () Int)
(declare-fun x411 () Int)
(declare-fun x257 () Int)
(declare-fun x1323 () Int)
(declare-fun x266 () Int)
(declare-fun x169 () Int)
(declare-fun x2552 () Int)
(declare-fun x1621 (Int Int) Int)
(declare-fun x2520 () Int)
(declare-fun x2490 () Int)
(declare-fun x974 () Int)
(declare-fun x288 () Int)
(declare-fun x1730 () Int)
(declare-fun x558 () Int)
(declare-fun x2256 () Int)
(declare-fun x507 () Int)
(declare-fun x2271 () Int)
(declare-fun x583 () Int)
(declare-fun x2637 () Bool)
(declare-fun x1304 () Int)
(declare-fun x1026 () Int)
(declare-fun x1225 () Int)
(declare-fun x2506 () Int)
(declare-fun x704 (Int) Int)
(declare-fun x2074 () Int)
(declare-fun x2500 () Int)
(declare-fun x517 () Int)
(declare-fun x232 () Int)
(declare-fun x1709 () Bool)
(declare-fun x2325 () Int)
(declare-fun x1616 () Bool)
(declare-fun x829 () Int)
(declare-fun x114 () Int)
(declare-fun x40 () Int)
(declare-fun x2337 () Int)
(declare-fun x518 () Int)
(declare-fun x2414 () Int)
(declare-fun x477 () Int)
(declare-fun x1246 () Bool)
(declare-fun x2789 () Int)
(declare-fun x761 () Int)
(declare-fun x1916 () Int)
(declare-fun x102 () Int)
(declare-fun x2470 () Int)
(declare-fun x15 () Int)
(declare-fun x1373 () Int)
(declare-fun x2620 () Bool)
(declare-fun x71 () Bool)
(declare-fun x1046 () Int)
(declare-fun x485 () Int)
(declare-fun x2141 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x2743 () Int)
(declare-fun x1664 () Int)
(declare-fun x750 () Bool)
(declare-fun x2701 () Int)
(declare-fun x2554 () Int)
(declare-fun x1190 () Int)
(declare-fun x2260 () Int)
(declare-fun x1288 () Bool)
(declare-fun x544 () Bool)
(declare-fun x2357 () Int)
(declare-fun x2413 () Int)
(declare-fun x468 () Int)
(declare-fun x2403 () Int)
(declare-fun x2042 () Int)
(declare-fun x1468 () Int)
(declare-fun x1332 () Int)
(declare-fun x445 () Bool)
(declare-fun x2436 () Int)
(declare-fun x640 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1085 () Int)
(declare-fun x501 () Int)
(declare-fun x1714 () Int)
(declare-fun x712 () Bool)
(declare-fun x2784 () Int)
(declare-fun x1104 () Int)
(declare-fun x784 () Int)
(declare-fun x1356 () Int)
(declare-fun x1513 () Bool)
(declare-fun x2668 () Int)
(declare-fun x1137 (Int) Int)
(declare-fun x87 () Int)
(declare-fun x492 () Bool)
(declare-fun x1383 () Int)
(declare-fun x2649 (Int) Int)
(declare-fun x586 () Int)
(declare-fun x1545 () Int)
(declare-fun x135 () Int)
(declare-fun x669 () Int)
(declare-fun x2144 () Int)
(declare-fun x2465 () Int)
(declare-fun x223 () Int)
(declare-fun x2316 () Int)
(declare-fun x569 () Int)
(declare-fun x1785 () Int)
(declare-fun x1416 () Bool)
(declare-fun x2086 () Int)
(declare-fun x1796 () Int)
(declare-fun x66 () Int)
(declare-fun x1398 () Int)
(declare-fun x655 () Int)
(declare-fun x215 () Int)
(declare-fun x1810 () Bool)
(declare-fun x2370 () Int)
(declare-fun x1656 () Int)
(declare-fun x724 () Int)
(declare-fun x556 () Int)
(declare-fun x576 () Int)
(declare-fun x2295 () Int)
(declare-fun x1507 (Int) Int)
(declare-fun x727 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x616 () Int)
(declare-fun x2720 () Int)
(declare-fun x1711 (Int) Int)
(declare-fun x927 () Int)
(declare-fun x2176 () Int)
(declare-fun x2046 () Int)
(declare-fun x1174 () Int)
(declare-fun x305 () Int)
(declare-fun x2248 () Int)
(declare-fun x1196 () Int)
(declare-fun x166 () Int)
(declare-fun x324 () Int)
(declare-fun x1627 () Int)
(declare-fun x2079 () Bool)
(declare-fun x1922 () Int)
(declare-fun x1732 () Int)
(declare-fun x1936 () Int)
(declare-fun x1419 () Int)
(declare-fun x426 () Int)
(declare-fun x2151 () Bool)
(declare-fun x319 () Int)
(declare-fun x2084 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x2763 () Int)
(declare-fun x241 () Int)
(declare-fun x1857 () Int)
(declare-fun x1465 () Int)
(declare-fun x2211 () Int)
(declare-fun x546 () Int)
(declare-fun x1794 () Bool)
(declare-fun x381 () Bool)
(declare-fun x243 () Bool)
(declare-fun x861 () Int)
(declare-fun x368 () Int)
(declare-fun x1125 () Int)
(declare-fun x1835 () Int)
(declare-fun x2574 () Int)
(declare-fun x2544 () Bool)
(declare-fun x338 () Bool)
(declare-fun x780 () Bool)
(declare-fun x1455 () Int)
(declare-fun x582 () Int)
(declare-fun x1943 () Int)
(declare-fun x2080 () Bool)
(declare-fun x2062 () Int)
(declare-fun x1467 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x864 () Bool)
(declare-fun x397 () Int)
(declare-fun x404 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x2298 () Int)
(declare-fun x17 () Int)
(declare-fun x791 () Int)
(declare-fun x1529 () Bool)
(declare-fun x473 () Bool)
(declare-fun x436 () Int)
(declare-fun x48 () Int)
(declare-fun x22 () Int)
(declare-fun x1532 () Int)
(declare-fun x1430 () Bool)
(declare-fun x438 () Bool)
(declare-fun x554 () Bool)
(declare-fun x2188 () Int)
(declare-fun x159 () Int)
(declare-fun x1644 () Int)
(declare-fun x2408 () Int)
(declare-fun x2039 () Bool)
(declare-fun x29 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1311 () Int)
(declare-fun x2131 (Int) Int)
(declare-fun x1827 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x819 () Bool)
(declare-fun x85 () Int)
(declare-fun x107 () Int)
(declare-fun x2698 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1107 () Int)
(declare-fun x1915 () Int)
(declare-fun x929 () Int)
(declare-fun x72 () Int)
(declare-fun x1502 () Int)
(declare-fun x2100 () Bool)
(declare-fun x620 () Int)
(declare-fun x781 () Int)
(declare-fun x2092 () Bool)
(declare-fun x383 () Int)
(declare-fun x536 () Bool)
(declare-fun x1759 () Int)
(declare-fun x2467 () Int)
(declare-fun x522 () Int)
(declare-fun x1088 () Int)
(declare-fun x983 () Int)
(declare-fun x186 () Bool)
(declare-fun x2031 () Int)
(declare-fun x84 () Bool)
(declare-fun x2378 () Int)
(declare-fun x2428 () Int)
(declare-fun x972 (Int) Int)
(declare-fun x2703 () Int)
(declare-fun x1253 () Int)
(declare-fun x1130 () Int)
(declare-fun x973 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x2130 () Int)
(declare-fun x1743 () Int)
(declare-fun x451 () Bool)
(declare-fun x116 () Bool)
(declare-fun x2277 () Int)
(declare-fun x2713 () Int)
(declare-fun x600 () Int)
(declare-fun x1600 () Bool)
(declare-fun x2602 () Int)
(declare-fun x2496 () Bool)
(declare-fun x1500 (Int) Int)
(declare-fun x523 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1812 () Int)
(declare-fun x2203 () Int)
(declare-fun x2364 () Int)
(declare-fun x2310 () Int)
(declare-fun x2258 () Int)
(declare-fun x792 () Int)
(declare-fun x2758 () Int)
(declare-fun x917 () Bool)
(declare-fun x2159 () Int)
(declare-fun x2036 () Int)
(declare-fun x2529 () Int)
(declare-fun x1991 () Int)
(declare-fun x1769 () Bool)
(declare-fun x321 () Bool)
(declare-fun x1358 () Int)
(declare-fun x2309 () Bool)
(declare-fun x1156 () Int)
(declare-fun x2473 () Int)
(declare-fun x2603 () Bool)
(declare-fun x1821 () Int)
(declare-fun x2590 () Bool)
(declare-fun x2652 () Int)
(declare-fun x2594 () Bool)
(declare-fun x2265 () Int)
(declare-fun x1508 () Int)
(declare-fun x610 () Int)
(declare-fun x1622 () Bool)
(declare-fun x609 () Int)
(declare-fun x80 () Int)
(declare-fun x76 () Int)
(declare-fun x2770 () Int)
(declare-fun x1415 () Int)
(declare-fun x684 () Int)
(declare-fun x178 () Bool)
(declare-fun x1042 () Int)
(declare-fun x1437 () Int)
(declare-fun x1725 () Int)
(declare-fun x461 () Bool)
(declare-fun x2296 () Int)
(declare-fun x1767 () Int)
(declare-fun x358 () Bool)
(declare-fun x1632 () Int)
(declare-fun x2578 () Int)
(declare-fun x1033 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x875 () Bool)
(declare-fun x2010 () Int)
(declare-fun x1111 () Bool)
(declare-fun x763 () Bool)
(declare-fun x806 () Int)
(declare-fun x1269 (Int) Int)
(declare-fun x2524 (Int) Int)
(declare-fun x964 () Int)
(declare-fun x165 () Bool)
(declare-fun x886 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x2461 () Int)
(declare-fun x1893 () Int)
(declare-fun x2263 () Int)
(declare-fun x945 () Int)
(declare-fun x1134 () Int)
(declare-fun x2120 (Int) Int)
(declare-fun x1610 () Int)
(declare-fun x689 () Int)
(declare-fun x2328 () Int)
(declare-fun x2765 () Int)
(declare-fun x1903 () Int)
(declare-fun x2262 () Int)
(declare-fun x336 () Int)
(declare-fun x1425 () Bool)
(declare-fun x361 () Int)
(declare-fun x1486 () Int)
(declare-fun x601 () Bool)
(declare-fun x222 () Bool)
(declare-fun x253 () Int)
(declare-fun x128 () Bool)
(declare-fun x342 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x1551 () Int)
(declare-fun x1505 () Int)
(declare-fun x816 () Int)
(declare-fun x408 () Int)
(declare-fun x1597 () Int)
(declare-fun x2767 () Int)
(declare-fun x845 () Int)
(declare-fun x1223 () Bool)
(declare-fun x907 () Int)
(declare-fun x822 () Int)
(declare-fun x664 () Bool)
(declare-fun x2691 () Int)
(declare-fun x1816 () Bool)
(declare-fun x2693 () Int)
(declare-fun x581 () Bool)
(declare-fun x1541 () Int)
(declare-fun x2047 () Int)
(declare-fun x2222 () Int)
(declare-fun x2164 () Bool)
(declare-fun x1715 () Int)
(declare-fun x2287 () Bool)
(declare-fun x476 () Int)
(declare-fun x1926 (Int) Int)
(declare-fun x587 () Bool)
(declare-fun x204 () Int)
(declare-fun x560 () Int)
(declare-fun x1665 () Int)
(declare-fun x1458 () Int)
(declare-fun x247 () Int)
(declare-fun x1368 () Bool)
(declare-fun x1939 (Int) Int)
(declare-fun x453 () Bool)
(declare-fun x1846 () Int)
(declare-fun x2677 () Int)
(declare-fun x1102 () Int)
(declare-fun x844 () Bool)
(declare-fun x1404 () Int)
(declare-fun x2593 () Int)
(declare-fun x817 () Bool)
(declare-fun x1384 (Int) Int)
(declare-fun x1902 () Bool)
(declare-fun x346 (Int Int) Int)
(declare-fun x686 () Int)
(declare-fun x1886 () Int)
(declare-fun x1993 () Int)
(declare-fun x463 () Int)
(declare-fun x550 () Int)
(declare-fun x1163 () Int)
(declare-fun x624 () Int)
(declare-fun x2091 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2244 (Int) Int)
(declare-fun x2299 () Bool)
(declare-fun x737 () Int)
(declare-fun x1582 () Int)
(declare-fun x6 (Int) Int)
(declare-fun x2205 (Int) Int)
(declare-fun x645 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2044 () Int)
(declare-fun x1819 () Int)
(declare-fun x2106 () Int)
(declare-fun x2206 () Int)
(declare-fun x1777 (Int) Int)
(declare-fun x1866 () Bool)
(declare-fun x208 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1001 () Int)
(declare-fun x2472 () Bool)
(declare-fun x2562 () Int)
(declare-fun x2200 (Int) Int)
(declare-fun x1549 () Int)
(declare-fun x2018 () Int)
(declare-fun x1869 (Int Int Int) Int)
(declare-fun x191 () Int)
(declare-fun x1372 () Int)
(declare-fun x34 () Int)
(declare-fun x526 () Int)
(declare-fun x38 () Int)
(declare-fun x27 () Int)
(declare-fun x701 () Int)
(declare-fun x2009 () Bool)
(declare-fun x459 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2083 () Int)
(declare-fun x921 () Bool)
(declare-fun x2441 () Int)
(declare-fun x922 () Int)
(declare-fun x2475 () Bool)
(declare-fun x511 () Int)
(declare-fun x2126 () Int)
(declare-fun x2394 () Bool)
(declare-fun x28 () Bool)
(declare-fun x2109 () Int)
(declare-fun x1960 () Bool)
(declare-fun x931 () Int)
(declare-fun x693 () Bool)
(declare-fun x126 () Int)
(declare-fun x1006 () Bool)
(declare-fun x805 () Int)
(declare-fun x2121 () Int)
(declare-fun x1531 () Bool)
(declare-fun x379 () Bool)
(declare-fun x36 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1538 () Int)
(declare-fun x2482 () Bool)
(declare-fun x1738 () Int)
(declare-fun x2581 () Int)
(declare-fun x1442 () Int)
(declare-fun x1744 () Int)
(declare-fun x2760 () Int)
(declare-fun x1086 () Int)
(declare-fun x930 () Bool)
(declare-fun x1697 () Int)
(declare-fun x1572 () Int)
(declare-fun x1328 (Int) Int)
(declare-fun x1382 () Bool)
(declare-fun x1553 () Int)
(declare-fun x154 () Bool)
(declare-fun x2375 () Int)
(declare-fun x2435 () Bool)
(declare-fun x667 () Int)
(declare-fun x9 () Int)
(declare-fun x2167 () Int)
(declare-fun x716 () Int)
(declare-fun x1158 () Int)
(declare-fun x2537 () Int)
(declare-fun x2068 () Int)
(declare-fun x1642 (Int) Int)
(declare-fun x2626 () Int)
(declare-fun x1316 () Bool)
(declare-fun x2362 () Int)
(declare-fun x1066 () Int)
(declare-fun x1675 () Int)
(declare-fun x1343 () Int)
(declare-fun x648 () Int)
(declare-fun x2610 () Int)
(declare-fun x2540 () Bool)
(declare-fun x661 () Int)
(declare-fun x2474 () Int)
(declare-fun x1815 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1319 () Int)
(declare-fun x1 () Bool)
(declare-fun x827 () Int)
(declare-fun x2586 () Bool)
(declare-fun x1069 () Int)
(declare-fun x2647 (Int Int Int Int Int Int) Int)
(declare-fun x2769 () Bool)
(declare-fun x1586 () Int)
(declare-fun x270 () Int)
(declare-fun x2057 () Int)
(declare-fun x525 () Int)
(declare-fun x2742 () Int)
(declare-fun x2407 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x1283 () Int)
(declare-fun x1877 () Bool)
(declare-fun x641 () Int)
(declare-fun x1825 () Int)
(declare-fun x718 () Bool)
(declare-fun x469 () Int)
(declare-fun x105 () Int)
(declare-fun x839 (Int) Int)
(declare-fun x389 () Bool)
(declare-fun x471 () Int)
(declare-fun x2555 () Bool)
(declare-fun x1753 () Int)
(declare-fun x2421 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x162 () Int)
(declare-fun x1449 () Int)
(declare-fun x731 () Int)
(declare-fun x2070 () Int)
(declare-fun x1374 () Int)
(declare-fun x2345 () Bool)
(declare-fun x286 () Bool)
(declare-fun x687 () Bool)
(declare-fun x2775 () Int)
(declare-fun x2684 () Int)
(declare-fun x2737 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1222 () Int)
(declare-fun x423 () Int)
(declare-fun x2171 () Int)
(declare-fun x127 () Int)
(declare-fun x375 () Bool)
(declare-fun x176 () Int)
(declare-fun x43 (Int Int Int Int) Int)
(declare-fun x1837 () Int)
(declare-fun x1818 () Bool)
(declare-fun x677 () Bool)
(declare-fun x2072 () Int)
(declare-fun x705 () Int)
(declare-fun x106 () Int)
(declare-fun x785 () Int)
(declare-fun x878 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x1691 () Int)
(declare-fun x2288 () Bool)
(declare-fun x2640 () Int)
(declare-fun x1598 () Int)
(declare-fun x2232 () Int)
(declare-fun x240 () Bool)
(declare-fun x2213 () Int)
(declare-fun x1963 () Int)
(declare-fun x363 () Bool)
(declare-fun x998 (Int) Int)
(declare-fun x274 () Int)
(declare-fun x1350 () Bool)
(declare-fun x2300 () Int)
(declare-fun x1705 () Int)
(declare-fun x343 () Bool)
(declare-fun x2067 () Int)
(declare-fun x1212 () Int)
(declare-fun x1952 () Int)
(declare-fun x2187 () Int)
(declare-fun x1917 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x2559 () Int)
(declare-fun x565 () Int)
(declare-fun x1172 () Bool)
(declare-fun x237 () Int)
(declare-fun x629 () Int)
(declare-fun x881 () Int)
(declare-fun x1948 () Int)
(declare-fun x1842 () Int)
(declare-fun x61 () Bool)
(declare-fun x291 () Int)
(declare-fun x2064 () Int)
(declare-fun x1005 () Int)
(declare-fun x1391 () Bool)
(declare-fun x914 () Int)
(declare-fun x866 () Int)
(declare-fun x936 () Int)
(declare-fun x2139 () Bool)
(declare-fun x199 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x2278 () Int)
(declare-fun x1077 () Bool)
(declare-fun x821 () Int)
(declare-fun x1829 () Bool)
(declare-fun x642 () Int)
(declare-fun x2752 () Bool)
(declare-fun x1361 () Int)
(declare-fun x2053 () Int)
(declare-fun x421 () Int)
(declare-fun x950 () Int)
(declare-fun x1708 () Int)
(declare-fun x353 () Int)
(declare-fun x1362 () Int)
(declare-fun x790 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1925 () Int)
(declare-fun x958 () Int)
(declare-fun x1977 () Int)
(declare-fun x2431 () Int)
(declare-fun x756 () Int)
(declare-fun x1062 () Int)
(declare-fun x901 () Int)
(declare-fun x1070 () Int)
(declare-fun x153 () Int)
(declare-fun x2128 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1539 () Bool)
(declare-fun x2498 () Int)
(declare-fun x863 () Int)
(declare-fun x2430 () Int)
(declare-fun x725 () Int)
(declare-fun x1417 () Int)
(declare-fun x798 () Int)
(declare-fun x979 () Int)
(declare-fun x1678 () Int)
(declare-fun x2522 () Int)
(declare-fun x870 () Int)
(declare-fun x52 () Int)
(declare-fun x1904 () Int)
(declare-fun x2759 () Int)
(declare-fun x152 () Int)
(declare-fun x2027 () Int)
(declare-fun x1388 () Int)
(declare-fun x1800 () Bool)
(declare-fun x2739 () Int)
(declare-fun x832 () Int)
(declare-fun x2033 () Int)
(declare-fun x851 () Int)
(declare-fun x452 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1431 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1646 () Int)
(declare-fun x242 (Int) Int)
(declare-fun x818 () Int)
(declare-fun x2756 () Int)
(declare-fun x415 () Int)
(declare-fun x2398 () Int)
(declare-fun x1479 () Int)
(declare-fun x2618 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x2346 () Int)
(declare-fun x2604 () Int)
(declare-fun x530 () Int)
(declare-fun x962 () Bool)
(declare-fun x2137 () Int)
(declare-fun x2293 () Int)
(declare-fun x2052 () Int)
(declare-fun x1734 () Int)
(declare-fun x100 () Int)
(declare-fun x1321 () Int)
(declare-fun x24 () Int)
(declare-fun x231 () Int)
(declare-fun x932 () Int)
(declare-fun x557 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1861 () Int)
(declare-fun x95 (Int) Int)
(declare-fun x2415 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1681 () Int)
(declare-fun x2085 () Bool)
(declare-fun x681 () Int)
(declare-fun x909 () Int)
(declare-fun x2231 () Int)
(declare-fun x2530 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x599 () Bool)
(declare-fun x699 () Int)
(declare-fun x1052 () Int)
(declare-fun x12 () Int)
(declare-fun x745 () Int)
(declare-fun x2514 () Bool)
(declare-fun x740 () Bool)
(declare-fun x2568 () Int)
(declare-fun x171 () Bool)
(declare-fun x347 () Int)
(declare-fun x1833 () Int)
(declare-fun x11 () Int)
(declare-fun x1747 () Int)
(declare-fun x1056 () Int)
(declare-fun x2122 () Bool)
(declare-fun x795 (Int Int) Int)
(declare-fun x1972 (Int) Int)
(declare-fun x1071 () Int)
(declare-fun x2153 () Bool)
(declare-fun x666 () Int)
(declare-fun x2501 () Int)
(declare-fun x1045 () Int)
(declare-fun x1422 (Int) Int)
(declare-fun x1565 () Bool)
(declare-fun x1792 () Int)
(declare-fun x1312 () Int)
(declare-fun x2570 () Int)
(declare-fun x2438 () Bool)
(declare-fun x714 () Int)
(declare-fun x1161 () Int)
(declare-fun x728 () Bool)
(declare-fun x2477 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1540 () Int)
(declare-fun x2786 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x1780 (Int) Int)
(declare-fun x1395 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1566 () Int)
(declare-fun x1750 (Int) Int)
(declare-fun x2700 () Int)
(declare-fun x633 () Bool)
(declare-fun x2210 () Int)
(declare-fun x150 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1497 () Int)
(declare-fun x2629 () Int)
(declare-fun x782 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x2294 () Int)
(declare-fun x1369 () Int)
(declare-fun x2026 () Int)
(declare-fun x265 () Int)
(declare-fun x1357 (Int) Int)
(declare-fun x2556 () Int)
(declare-fun x1477 () Int)
(declare-fun x260 () Int)
(declare-fun x2307 () Int)
(declare-fun x787 () Bool)
(declare-fun x777 () Int)
(declare-fun x2118 () Int)
(declare-fun x1798 () Int)
(declare-fun x1542 () Int)
(declare-fun x1604 () Int)
(declare-fun x614 () Bool)
(declare-fun x1206 (Int) Int)
(declare-fun x458 () Bool)
(declare-fun x2242 () Int)
(declare-fun x42 () Int)
(declare-fun x44 () Int)
(declare-fun x2110 () Int)
(declare-fun x2709 () Bool)
(declare-fun x479 () Int)
(declare-fun x2339 () Int)
(declare-fun x1928 () Bool)
(declare-fun x1790 () Int)
(declare-fun x2511 () Bool)
(declare-fun x422 () Int)
(declare-fun x2787 () Int)
(declare-fun x2125 () Int)
(declare-fun x2425 () Int)
(declare-fun x284 () Int)
(declare-fun x543 () Bool)
(declare-fun x1021 () Int)
(declare-fun x10 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x2660 () Int)
(declare-fun x920 () Int)
(declare-fun x2255 () Bool)
(declare-fun x2729 () Int)
(declare-fun x647 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x2439 (Int) Int)
(declare-fun x2696 () Int)
(declare-fun x1569 () Int)
(declare-fun x1090 () Int)
(declare-fun x301 () Bool)
(declare-fun x2395 () Int)
(declare-fun x1990 () Int)
(declare-fun x1509 () Int)
(declare-fun x1057 () Int)
(declare-fun x2446 () Int)
(declare-fun x2212 () Int)
(declare-fun x41 () Bool)
(declare-fun x2518 () Int)
(declare-fun x46 () Int)
(declare-fun x2469 () Int)
(declare-fun x283 () Int)
(declare-fun x823 () Bool)
(declare-fun x402 () Int)
(declare-fun x1547 () Bool)
(declare-fun x455 () Int)
(declare-fun x200 () Int)
(declare-fun x2456 () Int)
(declare-fun x1764 () Int)
(declare-fun x364 () Bool)
(declare-fun x1325 () Int)
(declare-fun x835 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2600 () Int)
(declare-fun x50 () Int)
(declare-fun x1089 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x2683 () Int)
(declare-fun x859 () Int)
(declare-fun x2291 () Int)
(declare-fun x890 () Int)
(declare-fun x911 () Int)
(declare-fun x1788 () Bool)
(declare-fun x236 () Int)
(declare-fun x779 () Int)
(declare-fun x2303 () Int)
(declare-fun x2402 () Bool)
(declare-fun x1013 () Int)
(declare-fun x1027 () Int)
(declare-fun x2488 () Int)
(declare-fun x2230 () Int)
(declare-fun x1618 () Int)
(declare-fun x940 () Int)
(declare-fun x1813 () Int)
(declare-fun x1428 () Int)
(declare-fun x2237 () Int)
(declare-fun x1028 () Int)
(declare-fun x1474 () Int)
(declare-fun x1207 () Int)
(declare-fun x2645 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x938 () Int)
(declare-fun x2587 () Int)
(declare-fun x244 () Int)
(declare-fun x2623 () Int)
(declare-fun x1953 () Int)
(declare-fun x2315 () Int)
(declare-fun x290 () Int)
(declare-fun x1670 () Int)
(declare-fun x1591 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x999 () Int)
(declare-fun x1447 () Bool)
(declare-fun x141 () Int)
(declare-fun x739 () Int)
(declare-fun x2270 () Int)
(declare-fun x2393 () Int)
(declare-fun x1589 () Bool)
(declare-fun x1756 () Int)
(declare-fun x2065 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x989 () Int)
(declare-fun x1666 () Int)
(declare-fun x99 () Int)
(declare-fun x710 () Bool)
(declare-fun x653 () Int)
(declare-fun x888 () Int)
(declare-fun x1793 () Int)
(declare-fun x1992 () Int)
(declare-fun x1200 () Bool)
(declare-fun x1490 () Int)
(declare-fun x177 () Int)
(declare-fun x631 (Int) Int)
(declare-fun x571 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x194 () Int)
(declare-fun x2330 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x1568 () Int)
(declare-fun x939 () Int)
(declare-fun x2391 () Bool)
(declare-fun x1888 () Int)
(declare-fun x2163 () Int)
(declare-fun x1795 () Int)
(declare-fun x2531 () Int)
(declare-fun x74 () Bool)
(declare-fun x2669 () Int)
(declare-fun x602 () Int)
(declare-fun x2020 () Int)
(declare-fun x1064 () Int)
(declare-fun x1303 () Int)
(declare-fun x1482 () Int)
(declare-fun x2622 () Int)
(declare-fun x2322 () Int)
(declare-fun x111 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2313 () Int)
(declare-fun x589 () Int)
(declare-fun x1036 () Int)
(declare-fun x743 () Int)
(declare-fun x77 () Int)
(declare-fun x2523 () Int)
(declare-fun x1400 () Int)
(declare-fun x1782 () Int)
(declare-fun x2740 () Bool)
(declare-fun x317 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x963 () Int)
(declare-fun x2331 () Int)
(declare-fun x1987 () Bool)
(declare-fun x2 () Int)
(declare-fun x263 () Bool)
(declare-fun x210 () Int)
(declare-fun x129 () Int)
(declare-fun x626 () Int)
(declare-fun x2717 () Int)
(declare-fun x674 () Int)
(declare-fun x2283 (Int) Int)
(declare-fun x2049 () Int)
(declare-fun x1243 () Int)
(declare-fun x2180 () Int)
(declare-fun x801 () Int)
(declare-fun x189 () Int)
(declare-fun x2778 () Int)
(declare-fun x1117 () Int)
(declare-fun x2338 () Int)
(declare-fun x193 () Bool)
(declare-fun x1941 () Int)
(declare-fun x884 () Int)
(declare-fun x810 () Int)
(declare-fun x928 () Int)
(declare-fun x1986 () Int)
(declare-fun x1193 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x2788 () Int)
(declare-fun x53 () Int)
(declare-fun x2489 (Int) Int)
(declare-fun x2665 () Int)
(declare-fun x2320 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1741 () Int)
(declare-fun x2681 () Int)
(declare-fun x1248 () Int)
(declare-fun x611 (Int Int Int Int Int Int Int) Int)
(declare-fun x2480 () Int)
(declare-fun x1302 () Int)
(declare-fun x2245 () Bool)
(declare-fun x1590 () Int)
(declare-fun x752 () Bool)
(declare-fun x25 () Int)
(declare-fun x1414 () Bool)
(declare-fun x2627 () Int)
(declare-fun x2209 () Int)
(declare-fun x1838 () Int)
(declare-fun x360 () Int)
(declare-fun x297 () Int)
(declare-fun x2172 () Int)
(declare-fun x2748 () Int)
(declare-fun x58 () Int)
(declare-fun x1188 () Int)
(declare-fun x2588 () Bool)
(declare-fun x2405 () Int)
(declare-fun x1910 () Bool)
(declare-fun x2239 (Int) Int)
(declare-fun x173 () Int)
(declare-fun x2048 () Int)
(declare-fun x2090 () Bool)
(declare-fun x1961 () Int)
(declare-fun x1595 () Int)
(declare-fun x2505 () Int)
(declare-fun x675 () Int)
(declare-fun x19 () Int)
(declare-fun x1405 () Bool)
(declare-fun x2680 () Int)
(declare-fun x1581 () Int)
(declare-fun x1322 () Int)
(declare-fun x697 () Int)
(declare-fun x1147 () Bool)
(declare-fun x308 () Int)
(declare-fun x2528 () Int)
(declare-fun x1484 () Int)
(declare-fun x2746 () Bool)
(declare-fun x1758 () Int)
(declare-fun x1751 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1831 () Int)
(declare-fun x2424 () Int)
(declare-fun x1031 () Int)
(declare-fun x662 () Int)
(declare-fun x370 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1008 () Int)
(declare-fun x2658 () Bool)
(declare-fun x2547 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x2386 () Int)
(declare-fun x2371 () Bool)
(declare-fun x1865 () Int)
(declare-fun x2347 () Bool)
(declare-fun x552 () Int)
(declare-fun x2113 () Int)
(declare-fun x2466 () Int)
(declare-fun x1521 () Int)
(declare-fun x1906 () Int)
(declare-fun x521 () Bool)
(declare-fun x595 () Int)
(declare-fun x2420 () Bool)
(declare-fun x2148 () Int)
(declare-fun x1599 () Bool)
(declare-fun x89 () Bool)
(declare-fun x2448 () Int)
(declare-fun x1022 () Int)
(declare-fun x86 () Bool)
(declare-fun x1859 () Int)
(declare-fun x331 () Int)
(declare-fun x2710 () Int)
(declare-fun x474 (Int) Int)
(declare-fun x1820 () Int)
(declare-fun x289 () Int)
(declare-fun x1183 () Int)
(declare-fun x882 () Int)
(declare-fun x2597 (Int) Int)
(declare-fun x1863 () Int)
(declare-fun x254 () Int)
(declare-fun x1397 () Int)
(declare-fun x2161 () Int)
(declare-fun x143 () Int)
(declare-fun x2563 () Int)
(declare-fun x499 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x2583 () Int)
(declare-fun x1290 () Int)
(declare-fun x1892 () Int)
(declare-fun x2096 () Bool)
(declare-fun x1749 () Int)
(declare-fun x1658 () Int)
(declare-fun x1294 () Int)
(declare-fun x2790 () Int)
(declare-fun x2302 () Int)
(declare-fun x2119 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x538 () Int)
(declare-fun x2632 () Int)
(declare-fun x1635 () Bool)
(declare-fun x1476 () Int)
(declare-fun x643 () Int)
(declare-fun x2553 () Int)
(declare-fun x2117 () Int)
(declare-fun x334 () Int)
(declare-fun x1491 () Bool)
(declare-fun x226 () Int)
(declare-fun x2055 () Int)
(declare-fun x808 () Bool)
(declare-fun x524 () Int)
(declare-fun x2781 () Int)
(declare-fun x1891 () Int)
(declare-fun x2582 () Bool)
(declare-fun x504 () Int)
(declare-fun x1390 () Int)
(declare-fun x1836 () Int)
(declare-fun x2174 () Bool)
(declare-fun x1309 () Int)
(declare-fun x2147 () Int)
(declare-fun x1602 () Int)
(declare-fun x1631 () Int)
(declare-fun x520 () Int)
(declare-fun x1557 () Int)
(declare-fun x434 () Int)
(declare-fun x880 () Int)
(declare-fun x1360 () Int)
(declare-fun x1454 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1208 () Int)
(declare-fun x112 () Int)
(declare-fun x1700 () Int)
(declare-fun x590 () Bool)
(declare-fun x1498 () Int)
(declare-fun x1783 () Int)
(declare-fun x1381 () Int)
(declare-fun x738 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x405 () Int)
(declare-fun x803 () Int)
(declare-fun x500 () Int)
(declare-fun x694 () Bool)
(declare-fun x1389 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x2410 () Int)
(declare-fun x533 () Bool)
(declare-fun x2061 () Int)
(declare-fun x2108 () Int)
(declare-fun x1308 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x1127 () Int)
(declare-fun x656 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x2571 () Int)
(declare-fun x2056 () Int)
(declare-fun x2757 () Int)
(declare-fun x1257 () Int)
(declare-fun x2572 () Bool)
(declare-fun x1081 () Int)
(declare-fun x1245 () Bool)
(declare-fun x233 () Int)
(declare-fun x2284 () Int)
(declare-fun x2509 () Int)
(declare-fun x2352 () Bool)
(declare-fun x2350 () Int)
(declare-fun x2140 () Int)
(declare-fun x923 () Int)
(declare-fun x167 () Bool)
(declare-fun x414 () Bool)
(declare-fun x2143 () Int)
(declare-fun x2499 () Int)
(declare-fun x2207 () Int)
(declare-fun x1834 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1025 () Int)
(declare-fun x2567 () Bool)
(declare-fun x625 () Int)
(declare-fun x982 () Int)
(declare-fun x719 () Int)
(declare-fun x198 () Int)
(declare-fun x2642 () Int)
(declare-fun x1585 () Int)
(declare-fun x2389 () Int)
(declare-fun x545 () Int)
(declare-fun x1890 () Int)
(declare-fun x2621 () Bool)
(declare-fun x619 () Bool)
(declare-fun x2616 (Int) Int)
(declare-fun x2160 () Int)
(declare-fun x1376 () Int)
(declare-fun x440 () Int)
(declare-fun x23 () Bool)
(declare-fun x2595 () Bool)
(declare-fun x2102 () Int)
(declare-fun x1352 () Int)
(declare-fun x949 () Bool)
(declare-fun x1533 () Int)
(declare-fun x2445 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1178 () Int)
(declare-fun x252 () Bool)
(declare-fun x1002 () Int)
(declare-fun x2577 () Bool)
(declare-fun x406 () Int)
(declare-fun x2644 () Int)
(declare-fun x2229 () Int)
(declare-fun x1814 () Int)
(declare-fun x91 () Int)
(declare-fun x2478 () Int)
(declare-fun x1199 () Bool)
(declare-fun x168 () Int)
(declare-fun x1412 () Int)
(declare-fun x1663 () Int)
(declare-fun x1347 () Int)
(declare-fun x409 () Bool)
(declare-fun x765 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1237 (Int Int) Int)
(declare-fun x2580 (Int) Int)
(declare-fun x172 () Int)
(declare-fun x1204 () Bool)
(declare-fun x424 () Int)
(declare-fun x1778 () Bool)
(declare-fun x651 () Int)
(declare-fun x2101 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1580 () Int)
(declare-fun x2281 () Int)
(declare-fun x399 () Int)
(declare-fun x1885 () Bool)
(declare-fun x529 () Bool)
(declare-fun x2670 () Int)
(declare-fun x1620 () Int)
(declare-fun x2221 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2535 () Int)
(declare-fun x969 () Bool)
(declare-fun x467 () Bool)
(declare-fun x2565 () Int)
(declare-fun x339 () Bool)
(declare-fun x1446 () Int)
(declare-fun x201 () Int)
(declare-fun x2268 () Bool)
(declare-fun x1189 () Int)
(declare-fun x613 () Int)
(declare-fun x1912 () Int)
(declare-fun x762 () Int)
(declare-fun x652 () Int)
(declare-fun x1720 () Int)
(declare-fun x1016 (Int) Int)
(declare-fun x2297 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1375 () Int)
(declare-fun x2682 (Int) Int)
(declare-fun x2019 () Int)
(declare-fun x537 () Int)
(declare-fun x207 () Int)
(declare-fun x2558 () Int)
(declare-fun x628 () Int)
(declare-fun x140 () Bool)
(declare-fun x1265 () Int)
(declare-fun x2549 () Int)
(declare-fun x503 () Int)
(declare-fun x2367 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x1648 () Int)
(declare-fun x862 () Int)
(declare-fun x1457 (Int) Int)
(declare-fun x1950 () Int)
(declare-fun x1255 () Bool)
(declare-fun x372 () Int)
(declare-fun x148 () Bool)
(declare-fun x1289 () Int)
(declare-fun x1460 () Int)
(declare-fun x976 () Int)
(declare-fun x2373 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x2165 () Int)
(declare-fun x1439 (Int) Int)
(declare-fun x1543 () Int)
(declare-fun x692 (Int) Int)
(declare-fun x2088 () Int)
(declare-fun x2275 () Int)
(declare-fun x1643 () Int)
(declare-fun x351 () Bool)
(declare-fun x2353 () Int)
(declare-fun x2513 (Int) Int)
(declare-fun x2730 () Bool)
(declare-fun x417 () Int)
(declare-fun x2336 () Int)
(declare-fun x836 () Int)
(declare-fun x1879 () Bool)
(declare-fun x2614 () Int)
(declare-fun x634 (Int) Int)
(declare-fun x1285 () Bool)
(declare-fun x2348 () Int)
(declare-fun x1996 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x830 () Int)
(declare-fun x1900 () Int)
(declare-fun x1571 () Int)
(declare-fun x2485 () Bool)
(declare-fun x1240 () Int)
(declare-fun x605 () Int)
(declare-fun x2317 (Int) Int)
(declare-fun x1261 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1039 () Int)
(declare-fun x919 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x246 () Bool)
(declare-fun x218 () Int)
(declare-fun x2409 () Int)
(declare-fun x1444 () Int)
(declare-fun x145 () Int)
(declare-fun x1578 () Int)
(declare-fun x1420 () Int)
(declare-fun x1024 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x970 (Int) Int)
(declare-fun x57 () Int)
(declare-fun x639 () Int)
(declare-fun x2097 () Int)
(declare-fun x1344 () Bool)
(declare-fun x1335 (Int Int) Int)
(declare-fun x1082 () Int)
(declare-fun x2687 () Bool)
(declare-fun x326 () Int)
(declare-fun x874 () Int)
(declare-fun x1556 () Int)
(declare-fun x1770 () Int)
(declare-fun x1274 () Int)
(declare-fun x2323 () Bool)
(declare-fun x123 () Int)
(declare-fun x1914 () Int)
(declare-fun x2016 () Bool)
(declare-fun x2471 (Int) Int)
(declare-fun x502 () Int)
(declare-fun x59 () Int)
(declare-fun x230 () Int)
(declare-fun x1128 () Int)
(declare-fun x1392 () Int)
(declare-fun x1296 () Int)
(declare-fun x902 () Int)
(declare-fun x83 () Bool)
(declare-fun x184 () Bool)
(declare-fun x354 () Int)
(declare-fun x2050 () Int)
(declare-fun x1609 () Int)
(declare-fun x271 () Int)
(declare-fun x2105 () Int)
(declare-fun x2651 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1173 () Int)
(declare-fun x1896 () Int)
(declare-fun x1092 () Int)
(declare-fun x1324 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1252 () Int)
(declare-fun x1748 () Bool)
(declare-fun x2442 () Int)
(declare-fun x2289 () Bool)
(declare-fun x2035 (Int) Int)
(declare-fun x1735 () Int)
(declare-fun x1688 () Bool)
(declare-fun x137 () Int)
(declare-fun x235 () Int)
(declare-fun x1049 () Bool)
(declare-fun x2344 (Int) Int)
(declare-fun x2399 () Bool)
(declare-fun x300 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1707 () Int)
(declare-fun x1068 () Int)
(declare-fun x1971 () Int)
(declare-fun x1964 () Int)
(declare-fun x2615 () Int)
(declare-fun x2772 () Int)
(declare-fun x410 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1067 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1882 () Int)
(declare-fun x2264 () Int)
(declare-fun x1504 (Int) Int)
(declare-fun x1254 () Bool)
(declare-fun x1844 () Int)
(declare-fun x2483 () Bool)
(declare-fun x986 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1272 () Int)
(declare-fun x593 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x161 () Int)
(declare-fun x1584 () Int)
(declare-fun x1116 () Bool)
(declare-fun x539 () Int)
(declare-fun x2738 () Int)
(declare-fun x608 () Bool)
(declare-fun x770 () Int)
(declare-fun x1286 () Int)
(declare-fun x604 () Int)
(declare-fun x1264 () Bool)
(declare-fun x2081 () Int)
(declare-fun x1501 () Int)
(declare-fun x2387 () Int)
(declare-fun x1659 () Int)
(declare-fun x2199 () Int)
(declare-fun x478 () Bool)
(declare-fun x376 () Bool)
(declare-fun x854 () Int)
(declare-fun x2311 () Bool)
(declare-fun x33 () Int)
(declare-fun x1881 () Bool)
(declare-fun x1546 () Int)
(declare-fun x2040 () Int)
(declare-fun x1594 () Int)
(declare-fun x766 (Int) Int)
(declare-fun x654 () Int)
(declare-fun x617 () Int)
(declare-fun x2073 () Int)
(declare-fun x2782 () Int)
(declare-fun x1041 () Bool)
(declare-fun x2286 () Int)
(declare-fun x1014 () Int)
(declare-fun x1588 () Int)
(declare-fun x1359 () Int)
(declare-fun x871 () Bool)
(declare-fun x2656 () Int)
(declare-fun x487 () Bool)
(declare-fun x734 () Int)
(declare-fun x1955 () Int)
(declare-fun x748 () Int)
(declare-fun x1921 () Int)
(declare-fun x2605 () Int)
(declare-fun x825 () Int)
(declare-fun x124 () Int)
(declare-fun x1786 () Int)
(declare-fun x1606 () Int)
(declare-fun x1517 () Int)
(declare-fun x2227 (Int) Int)
(declare-fun x202 () Int)
(declare-fun x21 () Int)
(declare-fun x1680 () Int)
(declare-fun x952 () Int)
(declare-fun x2132 () Int)
(declare-fun x1887 () Int)
(declare-fun x1072 () Int)
(declare-fun x221 () Bool)
(declare-fun x657 () Bool)
(declare-fun x2133 () Int)
(declare-fun x1401 () Bool)
(declare-fun x20 () Int)
(declare-fun x340 () Bool)
(declare-fun x2487 () Int)
(declare-fun x1564 () Int)
(declare-fun x224 () Int)
(declare-fun x1947 () Bool)
(declare-fun x2149 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x596 (Int) Int)
(declare-fun x904 () Int)
(declare-fun x2755 () Int)
(declare-fun x316 () Int)
(declare-fun x2063 () Int)
(declare-fun x1122 () Int)
(declare-fun x470 () Bool)
(declare-fun x1213 () Int)
(declare-fun x1238 () Int)
(declare-fun x1637 () Int)
(declare-fun x1148 () Int)
(declare-fun x2168 () Bool)
(declare-fun x857 () Int)
(declare-fun x1429 () Int)
(declare-fun x2385 () Bool)
(declare-fun x276 () Int)
(declare-fun x527 () Int)
(declare-fun x2416 () Int)
(declare-fun x951 () Int)
(declare-fun x1407 () Int)
(declare-fun x2329 () Bool)
(declare-fun x747 () Int)
(declare-fun x2157 () Int)
(declare-fun x2404 () Bool)
(declare-fun x2666 () Int)
(declare-fun x182 () Int)
(declare-fun x1083 (Int) Int)
(declare-fun x335 () Bool)
(declare-fun x2719 () Int)
(declare-fun x1745 () Int)
(declare-fun x573 () Int)
(declare-fun x1119 () Int)
(declare-fun x1182 () Int)
(declare-fun x2573 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1562 () Int)
(declare-fun x1097 () Int)
(declare-fun x1205 () Bool)
(declare-fun x13 () Int)
(declare-fun x2224 () Int)
(declare-fun x555 () Int)
(declare-fun x392 () Int)
(declare-fun x299 () Bool)
(declare-fun x2025 () Int)
(declare-fun x2032 () Int)
(declare-fun x1983 () Int)
(declare-fun x1495 (Int) Int)
(declare-fun x1310 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x2560 () Int)
(declare-fun x359 () Bool)
(declare-fun x431 () Int)
(declare-fun x133 () Int)
(declare-fun x1480 () Int)
(declare-fun x2280 () Int)
(declare-fun x456 () Int)
(declare-fun x2374 () Bool)
(declare-fun x273 () Bool)
(declare-fun x831 () Int)
(declare-fun x542 () Bool)
(declare-fun x1096 () Int)
(declare-fun x196 () Int)
(declare-fun x1478 () Int)
(declare-fun x1293 () Int)
(declare-fun x2750 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x2249 () Int)
(declare-fun x711 () Int)
(declare-fun x1118 () Int)
(declare-fun x117 () Bool)
(declare-fun x2732 () Int)
(declare-fun x1338 () Int)
(declare-fun x2678 () Int)
(declare-fun x1247 () Int)
(declare-fun x532 () Int)
(declare-fun x733 () Bool)
(declare-fun x380 (Int) Int)
(declare-fun x30 () Bool)
(declare-fun x826 () Bool)
(declare-fun x2486 () Int)
(declare-fun x1698 () Int)
(declare-fun x1864 () Bool)
(declare-fun x433 () Int)
(declare-fun x783 () Int)
(declare-fun x2625 (Int) Int)
(declare-fun x1771 () Int)
(declare-fun x618 () Int)
(declare-fun x1536 () Int)
(declare-fun x337 () Int)
(declare-fun x1576 () Int)
(declare-fun x2127 () Int)
(declare-fun x996 () Bool)
(declare-fun x465 () Int)
(declare-fun x1781 () Int)
(declare-fun x695 (Int) Int)
(declare-fun x1179 () Int)
(declare-fun x393 () Int)
(declare-fun x2512 () Int)
(declare-fun x678 () Bool)
(declare-fun x81 (Int) Int)
(declare-fun x1297 () Int)
(declare-fun x2734 () Bool)
(declare-fun x1954 () Int)
(declare-fun x2630 () Bool)
(declare-fun x776 () Bool)
(declare-fun x2685 () Int)
(declare-fun x279 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1575 () Int)
(declare-fun x2444 () Int)
(declare-fun x2356 () Int)
(declare-fun x1194 () Int)
(declare-fun x1851 () Bool)
(declare-fun x1470 (Int) Int)
(declare-fun x1224 () Int)
(declare-fun x313 () Int)
(declare-fun x2601 () Int)
(declare-fun x1930 () Int)
(declare-fun x1653 () Int)
(declare-fun x371 () Int)
(declare-fun x1277 () Int)
(declare-fun x1514 (Int) Int)
(declare-fun x466 () Bool)
(declare-fun x2184 () Int)
(declare-fun x55 () Int)
(declare-fun x1094 () Int)
(declare-fun x219 () Bool)
(declare-fun x130 (Int) Bool)
(declare-fun x78 () Int)
(declare-fun x203 () Int)
(declare-fun x1139 () Bool)
(declare-fun x1221 () Int)
(declare-fun x2504 () Int)
(declare-fun x1985 () Int)
(declare-fun x2502 () Int)
(declare-fun x1408 () Int)
(declare-fun x1044 () Int)
(declare-fun x706 () Int)
(declare-fun x2624 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x679 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1399 () Int)
(declare-fun x2308 () Int)
(declare-fun x1823 () Int)
(declare-fun x1123 () Int)
(declare-fun x258 () Bool)
(declare-fun x1849 () Int)
(declare-fun x2007 () Int)
(declare-fun x2692 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2419 () Bool)
(declare-fun x1462 () Int)
(declare-fun x2107 () Int)
(declare-fun x344 () Int)
(declare-fun x2112 () Int)
(declare-fun x314 () Int)
(declare-fun x2266 () Int)
(declare-fun x481 () Int)
(declare-fun x971 () Int)
(declare-fun x1295 () Int)
(declare-fun x298 () Int)
(declare-fun x35 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x2358 () Int)
(declare-fun x842 () Int)
(declare-fun x578 () Bool)
(declare-fun x2715 () Int)
(declare-fun x1402 () Bool)
(declare-fun x2607 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2001 () Int)
(declare-fun x238 () Bool)
(declare-fun x828 () Bool)
(declare-fun x567 () Int)
(declare-fun x942 () Int)
(declare-fun x428 () Int)
(declare-fun x2014 () Int)
(declare-fun x2437 () Int)
(declare-fun x497 () Int)
(declare-fun x1053 () Int)
(declare-fun x2608 (Int) Int)
(declare-fun x759 () Int)
(declare-fun x954 () Int)
(declare-fun x1655 () Int)
(declare-fun x2359 () Int)
(declare-fun x1017 () Int)
(declare-fun x1074 () Int)
(declare-fun x2158 (Int) Int)
(declare-fun x447 () Bool)
(declare-fun x579 () Int)
(declare-fun x1184 () Int)
(declare-fun x1988 () Int)
(declare-fun x1817 () Int)
(declare-fun x594 () Int)
(declare-fun x566 () Int)
(declare-fun x2215 () Int)
(declare-fun x2584 () Int)
(declare-fun x2653 () Bool)
(declare-fun x249 () Bool)
(declare-fun x73 () Int)
(declare-fun x1155 () Bool)
(declare-fun x515 () Bool)
(declare-fun x2766 () Int)
(declare-fun x315 () Int)
(declare-fun x220 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1870 () Int)
(declare-fun x1378 () Int)
(declare-fun x1593 () Int)
(declare-fun x2695 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1728 () Int)
(declare-fun x1236 () Int)
(declare-fun x1516 () Bool)
(declare-fun x430 () Int)
(declare-fun x2762 () Int)
(declare-fun x1612 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x427 (Int) Int)
(declare-fun x1978 () Int)
(declare-fun x1487 () Int)
(declare-fun x1141 () Int)
(declare-fun x506 () Int)
(declare-fun x1647 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x245 () Int)
(declare-fun x879 () Bool)
(declare-fun x310 () Int)
(declare-fun x663 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x275 () Bool)
(declare-fun x1267 () Int)
(declare-fun x2077 () Int)
(declare-fun x1669 () Int)
(declare-fun x1534 () Int)
(declare-fun x1746 () Int)
(declare-fun x531 () Bool)
(declare-fun x2741 () Int)
(declare-fun x775 () Int)
(declare-fun x227 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x1601 () Int)
(declare-fun x192 () Int)
(declare-fun x1438 () Bool)
(declare-fun x660 () Int)
(declare-fun x553 () Int)
(declare-fun x2214 () Int)
(declare-fun x1037 () Int)
(declare-fun x1933 () Bool)
(declare-fun x2785 () Int)
(declare-fun x2745 () Int)
(declare-fun x584 () Int)
(declare-fun x2429 () Bool)
(declare-fun x401 () Bool)
(declare-fun x163 () Int)
(declare-fun x255 () Int)
(declare-fun x1385 () Bool)
(declare-fun x214 () Int)
(declare-fun x1233 () Int)
(declare-fun x2450 () Int)
(declare-fun x2655 () Bool)
(declare-fun x895 () Int)
(declare-fun x382 () Bool)
(declare-fun x1848 () Int)
(declare-fun x1694 () Bool)
(declare-fun x211 () Int)
(declare-fun x1485 () Int)
(declare-fun x2156 () Int)
(declare-fun x1596 () Int)
(declare-fun x735 () Int)
(declare-fun x1471 () Int)
(declare-fun x132 () Bool)
(declare-fun x1937 (Int) Int)
(declare-fun x548 () Int)
(declare-fun x1349 () Bool)
(declare-fun x443 () Int)
(declare-fun x1875 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1626 () Int)
(declare-fun x1336 (Int) Int)
(declare-fun x1231 () Int)
(declare-fun x946 () Int)
(declare-fun x1291 () Bool)
(declare-fun x2532 (Int) Int)
(declare-fun x2054 () Int)
(declare-fun x2240 () Int)
(declare-fun x2223 () Int)
(declare-fun x2152 () Int)
(declare-fun x1435 () Int)
(declare-fun x1702 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1924 () Int)
(declare-fun x1784 () Int)
(declare-fun x2754 () Int)
(declare-fun x1149 () Int)
(declare-fun x1244 () Int)
(declare-fun x356 () Int)
(declare-fun x1554 () Int)
(declare-fun x16 () Bool)
(declare-fun x673 () Int)
(declare-fun x636 () Int)
(declare-fun x395 () Int)
(declare-fun x2702 () Int)
(declare-fun x1667 () Int)
(declare-fun x329 () Int)
(declare-fun x142 () Bool)
(declare-fun x1409 () Int)
(declare-fun x2791 () Int)
(declare-fun x1856 () Int)
(declare-fun x2679 () Bool)
(declare-fun x285 () Int)
(declare-fun x104 () Int)
(declare-fun x101 (Int) Int)
(declare-fun x981 () Int)
(declare-fun x2638 () Int)
(declare-fun x1804 () Int)
(declare-fun x2279 () Int)
(declare-fun x997 (Int) Int)
(declare-fun x1718 () Bool)
(declare-fun x229 () Int)
(declare-fun x1617 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1894 () Int)
(declare-fun x1841 () Int)
(declare-fun x528 () Bool)
(declare-fun x68 () Int)
(declare-fun x1268 () Int)
(declare-fun x2335 () Int)
(declare-fun x1159 () Int)
(declare-fun x867 () Int)
(declare-fun x472 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x858 () Bool)
(declare-fun x113 () Int)
(declare-fun x1218 () Int)
(declare-fun x2780 () Int)
(declare-fun x1153 () Int)
(declare-fun x1672 () Int)
(declare-fun x2104 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x1450 () Int)
(declare-fun x248 () Bool)
(declare-fun x400 () Int)
(declare-fun x1154 () Int)
(declare-fun x278 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x1346 () Int)
(declare-fun x2186 () Int)
(declare-fun x1679 () Int)
(declare-fun x1704 () Int)
(declare-fun x333 () Int)
(declare-fun x905 () Int)
(declare-fun x513 () Int)
(declare-fun x1623 () Int)
(declare-fun x580 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x1235 () Int)
(declare-fun x494 () Int)
(declare-fun x2694 () Bool)
(declare-fun x659 () Int)
(declare-fun x1567 () Int)
(declare-fun x416 (Int) Int)
(declare-fun x2246 (Int) Int)
(declare-fun x1337 () Bool)
(declare-fun x934 () Bool)
(declare-fun x751 () Int)
(declare-fun x1689 () Int)
(declare-fun x1871 () Int)
(declare-fun x250 () Int)
(declare-fun x489 () Int)
(declare-fun x708 () Bool)
(declare-fun x1256 () Int)
(declare-fun x2012 () Bool)
(declare-fun x703 () Int)
(declare-fun x1940 () Int)
(declare-fun x2771 () Bool)
(declare-fun x1466 () Int)
(declare-fun x1095 () Bool)
(declare-fun x170 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1927 () Int)
(declare-fun x2723 () Bool)
(declare-fun x637 () Int)
(declare-fun x1938 () Int)
(declare-fun x720 () Int)
(declare-fun x2672 () Bool)
(declare-fun x2173 () Int)
(declare-fun x2774 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x764 () Int)
(declare-fun x2542 () Int)
(declare-fun x1436 () Int)
(declare-fun x2194 () Int)
(declare-fun x591 () Int)
(declare-fun x960 () Int)
(declare-fun x1854 () Int)
(declare-fun x935 () Int)
(declare-fun x1860 () Int)
(declare-fun x2183 () Int)
(declare-fun x121 () Bool)
(declare-fun x726 () Int)
(declare-fun x947 () Bool)
(declare-fun x205 () Int)
(declare-fun x953 () Int)
(declare-fun x1558 () Int)
(declare-fun x1901 () Int)
(declare-fun x26 () Int)
(declare-fun x1451 () Int)
(declare-fun x2392 () Int)
(declare-fun x390 () Bool)
(declare-fun x788 () Int)
(declare-fun x1215 () Int)
(declare-fun x1239 () Bool)
(declare-fun x2753 () Int)
(declare-fun x264 () Int)
(declare-fun x1386 (Int) Int)
(declare-fun x2028 () Int)
(declare-fun x1867 () Int)
(declare-fun x1341 () Int)
(declare-fun x2676 () Int)
(declare-fun x2022 () Int)
(declare-fun x2013 () Bool)
(declare-fun x2076 () Int)
(declare-fun x2406 () Bool)
(declare-fun x103 () Int)
(declare-fun x505 () Int)
(declare-fun x2095 () Int)
(declare-fun x732 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x449 () Int)
(declare-fun x2146 () Int)
(declare-fun x1160 () Int)
(declare-fun x2617 () Int)
(declare-fun x948 () Bool)
(declare-fun x549 () Int)
(declare-fun x1330 () Bool)
(declare-fun x493 () Int)
(declare-fun x2218 () Int)
(declare-fun x2082 (Int) Int)
(define-fun x2023 ((x2714 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2714) (>= x2714 0)) x2714 (- x2714 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1230 ((x2714 Int)) Int (ite (and (< x2714 0) (>= x2714 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x2714 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2714))
(define-fun x1393 ((x2714 Int)) Int (ite (and (>= x2714 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2714)) x2714 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2714) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x2714)) (- x2714 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x2714 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x2714 0)) (+ x2714 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1621 x2714 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1145 ((x1913 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913) (<= 0 x1913)))
(define-fun x1624 ((x1913 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913) (>= x1913 0)))
(define-fun x736 ((x1913 Int) (x425 Int)) Bool (= (* x425 x1913) (x346 x1913 x425)))
(define-fun x2663 ((x1913 Int) (x425 Int)) Bool (and (= (- (* (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1913) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x346 x1913 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* x1913 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x425 x1913) (* x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) x425))))
(define-fun x1047 ((x1913 Int) (x425 Int)) Bool (=> (and (< 0 x1913) (< 0 x425)) (= (= x425 (x1237 (x1393 (x346 x1913 x425)) x1913)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x346 x1913 x425)))))
(define-fun x850 ((x1913 Int) (x425 Int)) Bool (=> (and (not (= x425 0)) (not (= 0 x1913))) (and (= (x1237 (x346 x1913 x425) x1913) x425) (= (x1237 (x346 x1913 x425) x425) x1913))))
(define-fun x2254 ((x1913 Int) (x425 Int)) Bool (=> (and (< 0 x425) (> x1913 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x346 x1913 x425)) (< (x1237 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1913) x425))))
(define-fun x2383 ((x1913 Int) (x425 Int)) Bool (and (= (x1393 (x346 x1913 x425)) (x1393 (x346 x1913 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1393 (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) x425)) (x1393 (x346 x1913 x425))) (= (x1393 (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1393 (x346 x1913 x425)))))
(define-fun x2257 ((x1913 Int) (x425 Int)) Bool (and (=> (and (and (<= x425 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x425)) (and (> x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1913))) (= (>= (x1237 57896044618658097711785492504343953926634992332820282019728792003956564819968 x425) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) x425)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x425) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x425)) (and (> x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1913))) (= (<= (x346 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1237 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x425)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x425) (> x425 0)) (and (< 0 x1913) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1913))) (= (>= (x1237 57896044618658097711785492504343953926634992332820282019728792003956564819967 x425) x1913) (<= (x346 x1913 x425) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x425) (<= x425 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1913) (> x1913 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x425) (x1237 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1913)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x346 x1913 (- x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x1997 ((x1913 Int) (x425 Int)) Bool (and (x736 x1913 x425) (x2257 x1913 x425) (x850 x1913 x425) (x2383 x1913 x425) (x2663 x1913 x425) (x1047 x1913 x425) (x2254 x1913 x425)))
(define-fun x2011 ((x1913 Int)) Bool (and (= 0 (x346 0 x1913)) (= 0 (x346 x1913 0))))
(define-fun x1250 ((x1913 Int)) Bool (and (= (x346 x1913 1) x1913) (= (x346 1 x1913) x1913)))
(define-fun x1828 ((x1913 Int)) Bool (and (x1250 x1913) (x2011 x1913)))
(define-fun x1806 ((x1913 Int) (x425 Int)) Bool (=> (and (< 0 x1913) (> x425 0)) (and (>= x1913 (x1237 x1913 x425)) (>= (x1237 x1913 x425) 0))))
(define-fun x1209 ((x1913 Int) (x425 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913) (>= x1913 0)) (and (<= 1 x425) (< x425 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (<= 0 (x1237 x1913 x425)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1237 x1913 x425)))))
(define-fun x391 ((x1913 Int) (x425 Int)) Bool (=> (and (< x425 x1913) (> x425 1)) (> x1913 (x1237 x1913 x425))))
(define-fun x794 ((x1913 Int) (x425 Int)) Bool (=> (and (< 0 x1913) (< 0 x425)) (= (= 0 (x1237 x1913 x425)) (> x425 x1913))))
(define-fun x2051 ((x1913 Int) (x425 Int)) Bool (=> (and (> x1913 0) (> x425 0)) (and (> (* (x1237 x1913 x425) x425) (- x1913 x425)) (<= (* (x1237 x1913 x425) x425) x1913))))
(define-fun x2725 ((x1913 Int) (x425 Int)) Bool (= (* (x1237 x1913 x425) x425) (- x1913 (x1335 (- x425 1) x1913))))
(define-fun x813 ((x1913 Int) (x425 Int)) Bool (and (x391 x1913 x425) (x2725 x1913 x425) (x794 x1913 x425) (x2051 x1913 x425) (x1806 x1913 x425) (x1209 x1913 x425)))
(define-fun x683 ((x1913 Int)) Bool (= 0 (x1237 0 x1913)))
(define-fun x2243 ((x1913 Int)) Bool (= (x1237 x1913 1) x1913))
(define-fun x1151 ((x1913 Int)) Bool (=> (not (= x1913 0)) (= (x1237 x1913 x1913) 1)))
(define-fun x2233 ((x1913 Int)) Bool (and (x2243 x1913) (x683 x1913) (x1151 x1913)))
(define-fun x1636 ((x1913 Int)) Bool (and (= x1913 (x1335 x1913 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1913) x1913)))
(define-fun x846 ((x1913 Int)) Bool (and (= 0 (x1335 0 x1913)) (= (x1335 x1913 0) 0)))
(define-fun x378 ((x1913 Int)) Bool (= x1913 (x1335 x1913 x1913)))
(define-fun x2116 ((x1913 Int)) Bool (and (x378 x1913) (x1636 x1913) (x846 x1913)))
(define-fun x287 ((x1913 Int) (x425 Int)) Bool (= (x1335 x1913 x425) (x1335 x425 x1913)))
(define-fun x1320 ((x1913 Int) (x425 Int)) Bool (and (<= 0 (x1335 x1913 x425)) (=> (>= x1913 0) (>= x1913 (x1335 x1913 x425))) (=> (<= 0 x425) (>= x425 (x1335 x1913 x425)))))
(define-fun x2368 ((x1913 Int) (x425 Int)) Bool (and (x287 x1913 x425) (x1320 x1913 x425)))
(define-fun x1630 ((x1913 Int)) Bool (= (x1335 x1913 1) (x1621 x1913 2)))
(define-fun x1690 ((x1913 Int)) Bool (and (x1630 x1913) (x2368 x1913 1)))
(define-fun x2059 ((x1913 Int) (x425 Int)) Bool (and (> x425 (x1621 x1913 x425)) (<= 0 (x1621 x1913 x425))))
(define-fun x1946 ((x1913 Int) (x425 Int)) Bool (=> (and (< 0 x425) (<= 0 x1913)) (= (> x425 x1913) (= (x1621 x1913 x425) x1913))))
(define-fun x713 ((x1913 Int) (x425 Int)) Bool (=> (and (> x425 0) (and (< x1913 (+ x425 x425)) (>= x1913 x425))) (= (- x1913 x425) (x1621 x1913 x425))))
(define-fun x1524 ((x1913 Int) (x425 Int)) Bool (=> (> x425 0) (= (+ (* (x1237 x1913 x425) x425) (x1621 x1913 x425)) x1913)))
(define-fun x912 ((x1913 Int) (x425 Int)) Bool (and (x1524 x1913 x425) (x1946 x1913 x425) (x2059 x1913 x425) (x713 x1913 x425)))
(define-fun x849 ((x1913 Int)) Bool (= 0 (x1621 0 x1913)))
(define-fun x877 ((x1913 Int)) Bool (= (x1621 x1913 1) 0))
(define-fun x328 ((x1913 Int)) Bool (= 0 (x1621 x1913 x1913)))
(define-fun x2686 ((x1913 Int)) Bool (and (x849 x1913) (x328 x1913) (x877 x1913)))
(define-fun x1899 ((x1913 Int)) Bool (= (x1335 x1913 127) (x1621 x1913 128)))
(define-fun x856 ((x1913 Int)) Bool (and (x2368 x1913 127) (x1899 x1913)))
(define-fun x462 ((x1913 Int)) Bool (= (x1393 x1913) (+ (x1335 x1913 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1621 x1913 256))))
(define-fun x1803 ((x1913 Int)) Bool (and (x2368 x1913 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x462 x1913)))
(define-fun x2551 ((x1913 Int)) Bool (= (x1393 x1913) (+ (x1621 x1913 32) (x1335 x1913 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x746 ((x1913 Int)) Bool (and (x2551 x1913) (x2368 x1913 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1197 ((x1913 Int)) Bool (= (x1621 x1913 26959946667150639794667015087019630673637144422540572481103610249216) (x1335 x1913 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x916 ((x1913 Int)) Bool (and (x2368 x1913 26959946667150639794667015087019630673637144422540572481103610249215) (x1197 x1913)))
(define-fun x869 ((x592 Int)) Int 0)
(define-fun x2599 ((x592 Int)) Int 0)
(define-fun x1843 ((x592 Int)) Int 0)
(define-fun x968 ((x592 Int)) Int 0)
(define-fun x2390 ((x592 Int)) Int (ite (> x1469 x592) (x704 x592) 0))
(define-fun x2675 ((x592 Int)) Int (ite (> x1378 x592) (x427 x592) 0))
(define-fun x1162 ((x592 Int)) Int (ite (< x592 x1715) (x2317 x592) 0))
(define-fun x811 ((x592 Int)) Int (ite (< x592 x1096) (x1740 x592) 0))
(define-fun x2111 ((x592 Int)) Int (ite (< x592 x1005) (x1386 x592) 0))
(define-fun x1706 ((x592 Int)) Int (ite (< x592 x1429) (x2344 x592) 0))
(define-fun x965 ((x592 Int)) Int (ite (< x592 x1961) (x766 x592) 0))
(define-fun x800 ((x592 Int)) Int (ite (< x592 x1067) (x2227 x592) 0))
(define-fun x2251 ((x592 Int)) Int (ite (< x592 x113) (x910 x592) 0))
(define-fun x1220 ((x592 Int)) Int (ite (> x1068 x592) (x474 x592) 0))
(define-fun x2662 ((x592 Int)) Int (ite (< x592 x629) (x95 x592) 0))
(define-fun x1019 ((x592 Int)) Int (ite (> x1646 x592) (x1181 x592) 0))
(define-fun x330 ((x592 Int)) Int (ite (> x2033 x592) (x2616 x592) 0))
(define-fun x146 ((x592 Int)) Int (ite (> x1182 x592) (x1457 x592) 0))
(define-fun x924 ((x592 Int)) Int 0)
(define-fun x2021 ((x592 Int)) Int 0)
(define-fun x1146 ((x592 Int)) Int 0)
(define-fun x2434 ((x592 Int)) Int 0)
(define-fun x598 ((x592 Int)) Int 0)
(define-fun x1278 ((x592 Int)) Int 0)
(define-fun x2460 ((x592 Int)) Int 0)
(define-fun x2195 ((x592 Int)) Int 0)
(define-fun x2379 ((x592 Int)) Int 0)
(define-fun x1555 ((x592 Int)) Int 0)
(define-fun x1765 ((x592 Int)) Int 0)
(define-fun x903 ((x592 Int)) Int 0)
(define-fun x1506 ((x592 Int)) Int 0)
(define-fun x665 ((x592 Int)) Int 0)
(define-fun x2688 ((x592 Int)) Int 0)
(define-fun x1411 ((x592 Int)) Int 0)
(define-fun x913 ((x592 Int)) Int 0)
(define-fun x2003 ((x592 Int)) Int 0)
(define-fun x2464 ((x592 Int)) Int 0)
(define-fun x1334 ((x592 Int)) Int 0)
(define-fun x302 ((x592 Int)) Int 0)
(define-fun x2550 ((x592 Int)) Int 0)
(define-fun x206 ((x592 Int)) Int 0)
(define-fun x1164 ((x592 Int)) Int 0)
(define-fun x2636 ((x592 Int)) Int 0)
(define-fun x966 ((x592 Int)) Int 0)
(define-fun x1872 ((x592 Int)) Int 0)
(define-fun x1342 ((x592 Int)) Int 0)
(define-fun x1180 ((x592 Int)) Int 0)
(define-fun x1797 ((x592 Int)) Int 0)
(define-fun x94 ((x592 Int)) Int 0)
(define-fun x1000 ((x592 Int)) Int 0)
(define-fun x1080 ((x592 Int)) Int 0)
(define-fun x741 ((x592 Int)) Int 0)
(define-fun x388 ((x592 Int)) Int 0)
(define-fun x187 ((x592 Int)) Int 0)
(define-fun x1889 ((x592 Int)) Int 0)
(define-fun x1060 ((x592 Int)) Int 0)
(define-fun x2735 ((x592 Int)) Int 0)
(define-fun x1736 ((x592 Int)) Int 0)
(define-fun x1525 ((x592 Int)) Int 0)
(define-fun x2783 ((x592 Int)) Int 0)
(define-fun x1038 ((x592 Int)) Int 0)
(define-fun x985 ((x592 Int)) Int 0)
(define-fun x588 ((x592 Int)) Int 0)
(define-fun x2517 ((x592 Int)) Int 0)
(define-fun x2087 ((x592 Int)) Int 0)
(define-fun x2733 ((x592 Int)) Int 0)
(define-fun x2527 ((x592 Int)) Int 0)
(define-fun x2202 ((x592 Int)) Int 0)
(define-fun x267 ((x592 Int)) Int 0)
(define-fun x2697 ((x592 Int)) Int 0)
(define-fun x769 ((x592 Int)) Int 0)
(define-fun x2674 ((x592 Int)) Int 0)
(define-fun x2182 ((x592 Int)) Int 0)
(define-fun x742 ((x592 Int)) Int 0)
(define-fun x1058 ((x592 Int)) Int 0)
(define-fun x2433 ((x592 Int)) Int 0)
(define-fun x1413 ((x592 Int)) Int 0)
(define-fun x1445 ((x592 Int)) Int 0)
(define-fun x906 ((x592 Int)) Int 0)
(define-fun x944 ((x592 Int)) Int 0)
(define-fun x1176 ((x592 Int)) Int 0)
(define-fun x149 ((x592 Int)) Int 0)
(define-fun x2654 ((x592 Int)) Int 0)
(define-fun x1918 ((x592 Int)) Int 0)
(define-fun x1515 ((x592 Int)) Int 0)
(define-fun x2634 ((x592 Int)) Int 0)
(define-fun x1210 ((x592 Int)) Int 0)
(define-fun x2776 ((x592 Int)) Int 0)
(define-fun x496 ((x592 Int)) Int 0)
(define-fun x1975 ((x592 Int)) Int 0)
(define-fun x2312 ((x592 Int)) Int 0)
(define-fun x630 ((x592 Int)) Int 0)
(define-fun x420 ((x592 Int)) Int 0)
(define-fun x855 ((x592 Int)) Int 0)
(define-fun x419 ((x592 Int)) Int 0)
(define-fun x418 ((x592 Int)) Int 0)
(define-fun x79 ((x592 Int)) Int 0)
(define-fun x1883 ((x592 Int)) Int 0)
(define-fun x2443 ((x592 Int)) Int 0)
(define-fun x1115 ((x592 Int)) Int 0)
(define-fun x2492 ((x592 Int)) Int 0)
(define-fun x398 ((x592 Int)) Int 0)
(define-fun x1980 ((x592 Int)) Int 0)
(define-fun x1789 ((x592 Int)) Int 0)
(define-fun x2226 ((x592 Int)) Int 0)
(define-fun x1661 ((x592 Int)) Int 0)
(define-fun x1528 ((x592 Int)) Int 0)
(define-fun x2372 ((x592 Int)) Int 0)
(define-fun x650 ((x592 Int)) Int (ite (= x592 x320) x2103 (x1439 x592)))
(define-fun x535 ((x592 Int)) Int (ite (= x675 x592) x1509 (x650 x592)))
(define-fun x1110 ((x592 Int)) Int (ite (= x592 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x388 x592)))
(define-fun x2274 ((x592 Int)) Int (ite (= 132 x592) x2194 (x1110 x592)))
(define-fun x3 ((x592 Int)) Int (ite (= 0 x592) x2563 (x1273 x592)))
(define-fun x269 ((x592 Int)) Int (ite (= x592 128) x2563 (x2274 x592)))
(define-fun x1699 ((x592 Int)) Int (ite (= x592 0) x1383 (x1273 x592)))
(define-fun x516 ((x592 Int)) Int (ite (= 128 x592) x1383 (x2274 x592)))
(define-fun x551 ((x592 Int)) Int (ite (= 128 x592) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x388 x592)))
(define-fun x1774 ((x592 Int)) Int (ite (= 132 x592) x2194 (x551 x592)))
(define-fun x615 ((x592 Int)) Int (ite (= x592 0) x661 (x2608 x592)))
(define-fun x413 ((x592 Int)) Int (ite (= 128 x592) x661 (x1774 x592)))
(define-fun x1426 ((x592 Int)) Int (ite (= x592 0) x1383 (x2608 x592)))
(define-fun x1934 ((x592 Int)) Int (ite (= x592 128) x1383 (x1774 x592)))
(define-fun x1015 ((x592 Int)) Int (ite x1024 (ite x578 (x413 x592) (x1934 x592)) (ite x61 (x269 x592) (x516 x592))))
(define-fun x2321 ((x592 Int)) Int (ite (= x861 x592) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x1015 x592)))
(define-fun x1668 ((x592 Int)) Int (ite (= x397 x592) x675 (x2321 x592)))
(define-fun x387 ((x592 Int)) Int (ite (= x675 x592) x1556 (x535 x592)))
(define-fun x1662 ((x592 Int)) Int (ite (= x592 x1861) x1812 (x387 x592)))
(define-fun x1684 ((x592 Int)) Int (ite (= x592 x2349) x2097 (x457 x592)))
(define-fun x993 ((x592 Int)) Int (ite (= x592 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x420 x592)))
(define-fun x446 ((x592 Int)) Int (ite (= 132 x592) x885 (x993 x592)))
(define-fun x915 ((x592 Int)) Int (ite (= x592 164) x1517 (x446 x592)))
(define-fun x992 ((x592 Int)) Int (ite (= x592 196) x1976 (x915 x592)))
(define-fun x160 ((x592 Int)) Int (ite (= 228 x592) x1303 (x992 x592)))
(define-fun x1994 ((x592 Int)) Int (ite (= x592 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x420 x592)))
(define-fun x1012 ((x592 Int)) Int (ite (= 132 x592) x836 (x1994 x592)))
(define-fun x256 ((x592 Int)) Int (ite (= 164 x592) 128 (x1012 x592)))
(define-fun x488 ((x592 Int)) Int (ite (= x592 260) x2610 (x256 x592)))
(define-fun x893 ((x592 Int)) Int (ite (= x592 292) x804 (x488 x592)))
(define-fun x385 ((x592 Int)) Int (ite (= x592 128) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x420 x592)))
(define-fun x2722 ((x592 Int)) Int (ite (= x592 132) x1989 (x385 x592)))
(define-fun x2376 ((x592 Int)) Int (ite (= x592 164) 128 (x2722 x592)))
(define-fun x2704 ((x592 Int)) Int (ite (= 260 x592) x1796 (x2376 x592)))
(define-fun x990 ((x592 Int)) Int (ite (= 292 x592) x722 (x2704 x592)))
(define-fun x394 ((x592 Int)) Int (x2244 x592))
(define-fun x2455 ((x592 Int)) Int (ite (= x592 x214) x689 (x2283 x592)))
(define-fun x899 ((x592 Int)) Int (ite x1305 (ite x116 (x2283 x592) (x2455 x592)) (x2283 x592)))
(define-fun x1932 ((x592 Int)) Int (ite x28 (x2283 x592) (x899 x592)))
(define-fun x1685 ((x592 Int)) Int (ite x1305 (ite x1565 (x2532 x592) (x1269 x592)) (x1354 x592)))
(define-fun x721 ((x592 Int)) Int (ite x28 (x1269 x592) (x1685 x592)))
(define-fun x1942 ((x592 Int)) Int (x972 x592))
(define-fun x2557 ((x592 Int)) Int (x1384 x592))
(define-fun x2611 ((x592 Int)) Int (ite x1305 (ite x1565 (x2131 x592) (x695 x592)) (x1780 x592)))
(define-fun x1729 ((x592 Int)) Int (ite x28 (x695 x592) (x2611 x592)))
(define-fun x1345 ((x592 Int)) Int (x1137 x592))
(define-fun x1136 ((x592 Int)) Int (ite x1305 (x1504 x592) (x81 x592)))
(define-fun x2217 ((x592 Int)) Int (ite x28 (x1504 x592) (x1136 x592)))
(define-fun x2457 ((x592 Int)) Int (ite x1565 (x1642 x592) (x2597 x592)))
(define-fun x2711 ((x592 Int)) Int (ite x28 (x2597 x592) (ite x1305 (x2457 x592) (x2625 x592))))
(define-fun x1811 ((x592 Int)) Int (ite x1305 (ite x1565 (x1939 x592) (x2682 x592)) (x2246 x592)))
(define-fun x1607 ((x592 Int)) Int (ite x28 (x2682 x592) (x1811 x592)))
(define-fun x1191 ((x592 Int)) Int (ite x1305 (ite x1565 (x380 x592) (x1270 x592)) (x1500 x592)))
(define-fun x2731 ((x592 Int)) Int (ite x28 (x1270 x592) (x1191 x592)))
(define-fun x292 ((x592 Int)) Int (ite x1305 (ite x1565 (x1206 x592) (x1336 x592)) (x1514 x592)))
(define-fun x109 ((x592 Int)) Int (ite x28 (x1336 x592) (x292 x592)))
(define-fun x2272 ((x592 Int)) Int (ite x1305 (ite x1565 (x1777 x592) (x2489 x592)) (x1202 x592)))
(define-fun x1227 ((x592 Int)) Int (ite x28 (x2489 x592) (x2272 x592)))
(define-fun x2667 ((x592 Int)) Int (ite x1305 (ite x1565 (x2580 x592) (x2471 x592)) (x631 x592)))
(define-fun x1712 ((x592 Int)) Int (ite x28 (x2471 x592) (x2667 x592)))
(define-fun x955 ((x592 Int)) Int (ite x1305 (ite x1565 (x596 x592) (x2120 x592)) (x2205 x592)))
(define-fun x1726 ((x592 Int)) Int (ite x28 (x2120 x592) (x955 x592)))
(define-fun x63 ((x592 Int)) Int (x2439 x592))
(define-fun x1287 ((x592 Int)) Int (x998 x592))
(define-fun x138 ((x592 Int)) Int (ite x1305 (ite x1565 (x2513 x592) (x31 x592)) (x2138 x592)))
(define-fun x2124 ((x592 Int)) Int (ite x28 (x31 x592) (x138 x592)))
(define-fun x1079 ((x592 Int)) Int (ite x1565 (x1750 x592) (x1016 x592)))
(define-fun x2699 ((x592 Int)) Int (ite x28 (x1016 x592) (ite x1305 (x1079 x592) (x2524 x592))))
(define-fun x281 ((x592 Int)) Int (ite x1305 (ite x1565 (x1711 x592) (x1926 x592)) (x997 x592)))
(define-fun x2304 ((x592 Int)) Int (ite x28 (x1926 x592) (x281 x592)))
(define-fun x1587 ((x592 Int)) Int (x2239 x592))
(define-fun x540 ((x592 Int)) Int (ite x1305 (ite x1565 (x1495 x592) (x457 x592)) (x2035 x592)))
(define-fun x108 ((x592 Int)) Int (ite x28 (x457 x592) (x540 x592)))
(define-fun x933 ((x592 Int)) Int (x970 x592))
(define-fun x1228 ((x592 Int)) Int (ite x28 (x970 x592) (x933 x592)))
(define-fun x2314 ((x592 Int)) Int (ite x1565 (x1357 x592) (x101 x592)))
(define-fun x2422 ((x592 Int)) Int (ite x28 (x101 x592) (ite x1305 (x2314 x592) (x2606 x592))))
(define-fun x4 ((x592 Int)) Int (ite (= 292 x592) x251 (x488 x592)))
(define-fun x1456 ((x592 Int)) Int (ite (= 292 x592) x1523 (x2704 x592)))
(define-fun x1944 ((x592 Int)) Int (ite x1866 (ite x1430 (x488 x592) (x4 x592)) (x893 x592)))
(define-fun x2190 ((x592 Int)) Int (ite (= x592 196) x2589 (x1944 x592)))
(define-fun x562 ((x592 Int)) Int (ite (= x592 228) x604 (x2190 x592)))
(define-fun x70 ((x592 Int)) Int (ite (= x977 x592) x2523 (x562 x592)))
(define-fun x1878 ((x592 Int)) Int (ite (= x592 x372) x863 (x70 x592)))
(define-fun x2613 ((x592 Int)) Int (ite x2514 (ite x554 (x2704 x592) (x1456 x592)) (x990 x592)))
(define-fun x2305 ((x592 Int)) Int (ite (= 196 x592) x1770 (x2613 x592)))
(define-fun x312 ((x592 Int)) Int (ite (= 228 x592) x1804 (x2305 x592)))
(define-fun x1826 ((x592 Int)) Int (ite (= x592 x1215) x1492 (x312 x592)))
(define-fun x1260 ((x592 Int)) Int (ite (= x592 x2310) x586 (x1826 x592)))
(define-fun x2503 ((x592 Int)) Int (ite (= x372 x592) x2502 (x70 x592)))
(define-fun x495 ((x592 Int)) Int (ite (= x2310 x592) x1428 (x1826 x592)))
(define-fun x1850 ((x592 Int)) Int (ite x119 (ite x2332 (x70 x592) (x1878 x592)) (x2503 x592)))
(define-fun x1619 ((x592 Int)) Int (ite (and (>= x592 164) (< x592 x173)) (x1850 (+ 128 x592)) (x2390 x592)))
(define-fun x1098 ((x592 Int)) Int (ite (= x592 128) x1566 (x302 x592)))
(define-fun x1737 ((x592 Int)) Int (ite (= 160 x592) x628 (x1098 x592)))
(define-fun x18 ((x592 Int)) Int (ite (= x592 160) x2052 (x1098 x592)))
(define-fun x2269 ((x592 Int)) Int (ite x2101 (ite x2657 (x1826 x592) (x1260 x592)) (x495 x592)))
(define-fun x2591 ((x592 Int)) Int (ite (and (>= x592 164) (< x592 x793)) (x2269 (+ 128 x592)) (x2675 x592)))
(define-fun x1721 ((x592 Int)) Int (ite (= x85 x592) x1450 (x187 x592)))
(define-fun x1874 ((x592 Int)) Int (ite (and (< x592 (+ x1450 x1757)) (<= x1757 x592)) (x2591 (- (+ x592 x778) x1757)) (x2636 x592)))
(define-fun x1314 ((x592 Int)) Int (ite (= x100 x592) 0 (x1874 x592)))
(define-fun x1779 ((x592 Int)) Int (ite (= x592 x393) 1 (x998 x592)))
(define-fun x1100 ((x592 Int)) Int (ite (= x592 192) x1051 (x1737 x592)))
(define-fun x1512 ((x592 Int)) Int (ite x1657 (x1098 x592) (ite x2096 (ite x2645 (x1737 x592) (x1100 x592)) (x18 x592))))
(define-fun x1327 ((x592 Int)) Int (ite (and (>= x592 x153) (> (+ x2210 x153) x592)) (x1619 (- (+ x592 164) x153)) (x1512 x592)))
(define-fun x2519 ((x592 Int)) Int (ite (= x1807 x592) 0 (x1327 x592)))
(define-fun x1801 ((x592 Int)) Int (ite x698 (x2519 x592) (x1512 x592)))
(define-fun x1633 ((x592 Int)) Int (ite (= x153 x592) x2210 (x1801 x592)))
(define-fun x45 ((x592 Int)) Int (ite (and (> (+ x1831 x2210) x592) (>= x592 x1831)) (x1619 (- (+ 164 x592) x1831)) (x1633 x592)))
(define-fun x2290 ((x592 Int)) Int (ite (= x1173 x592) 0 (x45 x592)))
(define-fun x2706 ((x592 Int)) Int (ite (= x1602 x592) x443 (x2290 x592)))
(define-fun x1923 ((x592 Int)) Int (ite (and (> (+ x2720 x443) x592) (>= x592 x2720)) (x1619 (- (+ x592 x798) x2720)) (x2706 x592)))
(define-fun x2075 ((x592 Int)) Int (ite (= x1593 x592) 0 (x1923 x592)))
(define-fun x2377 ((x592 Int)) Int (ite (= x1372 x592) x836 (x2075 x592)))
(define-fun x635 ((x592 Int)) Int (ite (= x592 x953) 128 (x2377 x592)))
(define-fun x1229 ((x592 Int)) Int (ite (= x145 x592) x2361 (x635 x592)))
(define-fun x1142 ((x592 Int)) Int (ite (= x592 x2032) x2223 (x1229 x592)))
(define-fun x367 ((x592 Int)) Int (ite (= x592 x2063) x2678 (x1142 x592)))
(define-fun x768 ((x592 Int)) Int (ite (= x592 x2619) x2137 (x367 x592)))
(define-fun x509 ((x592 Int)) Int (ite (= x1179 x592) x262 (x768 x592)))
(define-fun x1559 ((x592 Int)) Int (ite x1099 (x768 x592) (ite x466 (x367 x592) (ite x128 (x1142 x592) (ite x2484 (x1229 x592) (x509 x592))))))
(define-fun x2334 ((x592 Int)) Int (ite (= x2690 x592) 0 (x1559 x592)))
(define-fun x309 ((x592 Int)) Int (ite (= x2036 x592) x2589 (x2334 x592)))
(define-fun x2340 ((x592 Int)) Int (ite (= x2549 x592) x1409 (x309 x592)))
(define-fun x967 ((x592 Int)) Int (ite (= x592 x2701) x845 (x2340 x592)))
(define-fun x837 ((x592 Int)) Int (ite (= x1900 x592) x2074 (x967 x592)))
(define-fun x2639 ((x592 Int)) Int (ite (= x592 x2086) x2001 (x837 x592)))
(define-fun x892 ((x592 Int)) Int (ite (= x592 x507) x123 (x2639 x592)))
(define-fun x574 ((x592 Int)) Int (ite (= x2143 x592) x1102 (x892 x592)))
(define-fun x429 ((x592 Int)) Int (ite x389 (x892 x592) (ite x2367 (x2639 x592) (ite x1885 (x837 x592) (ite x1126 (x967 x592) (x574 x592))))))
(define-fun x2078 ((x592 Int)) Int (ite (= x1787 x592) 0 (x429 x592)))
(define-fun x744 ((x592 Int)) Int (ite (= x2739 x592) x2108 (x2078 x592)))
(define-fun x1195 ((x592 Int)) Int (ite (= x592 x648) x703 (x744 x592)))
(define-fun x2228 ((x592 Int)) Int (ite (= x592 x1625) 150 (x1195 x592)))
(define-fun x2747 ((x592 Int)) Int (ite (and (>= x592 x1437) (> (+ 150 x1437) x592)) (x1619 (- (+ x592 x2741) x1437)) (x2228 x592)))
(define-fun x1266 ((x592 Int)) Int (ite (and (> 0 x592) (<= 0 x592)) (x1937 x592) (x2747 x592)))
(define-fun x508 ((x592 Int)) Int (ite x1565 (x1266 x592) (x2747 x592)))
(define-fun x889 ((x592 Int)) Int (ite (= x1625 x592) x806 (x508 x592)))
(define-fun x1981 ((x592 Int)) Int (ite (and (< x592 (+ x189 x806)) (<= x189 x592)) (x1937 (- x592 x189)) (x889 x592)))
(define-fun x723 ((x592 Int)) Int (ite (= x592 x1346) x2724 (x1981 x592)))
(define-fun x797 ((x592 Int)) Int (ite (= x592 x50) x1984 (x723 x592)))
(define-fun x975 ((x592 Int)) Int (ite (= x2095 x592) x2292 (x797 x592)))
(define-fun x926 ((x592 Int)) Int (ite x116 (x2283 x592) (x2455 x592)))
(define-fun x561 ((x592 Int)) Int (x2244 x592))
(define-fun x1966 ((x592 Int)) Int (x1384 x592))
(define-fun x32 ((x592 Int)) Int (x972 x592))
(define-fun x62 ((x592 Int)) Int (ite x1305 (x2457 x592) (x2625 x592)))
(define-fun x56 ((x592 Int)) Int (x1137 x592))
(define-fun x2708 ((x592 Int)) Int (x998 x592))
(define-fun x1907 ((x592 Int)) Int (x2439 x592))
(define-fun x1461 ((x592 Int)) Int (ite x1305 (x1079 x592) (x2524 x592)))
(define-fun x1570 ((x592 Int)) Int (x2239 x592))
(define-fun x1242 ((x592 Int)) Int (ite x1305 (x2314 x592) (x2606 x592)))
(define-fun x2566 ((x592 Int)) Int (ite (= x592 x327) x584 (x975 x592)))
(define-fun x234 ((x592 Int)) Int (ite x2427 (x975 x592) (ite x645 (x797 x592) (ite x1349 (x723 x592) (ite x2618 (x1981 x592) (x2566 x592))))))
(define-fun x2462 ((x592 Int)) Int (ite (= x592 x1870) 0 (x234 x592)))
(define-fun x1905 ((x592 Int)) Int (ite (= x1070 x592) x395 (x2462 x592)))
(define-fun x396 ((x592 Int)) Int (ite (= x1346 x592) x836 (x1905 x592)))
(define-fun x1434 ((x592 Int)) Int (ite (= x592 x2392) 160 (x396 x592)))
(define-fun x47 ((x592 Int)) Int (ite (= x2644 x592) x673 (x1434 x592)))
(define-fun x2515 ((x592 Int)) Int (ite (= x201 x592) x2232 (x47 x592)))
(define-fun x1982 ((x592 Int)) Int (ite (= x592 x2211) x502 (x2515 x592)))
(define-fun x1448 ((x592 Int)) Int (ite (= x469 x592) x200 (x1982 x592)))
(define-fun x2412 ((x592 Int)) Int (ite (= x592 x2069) x2234 (x1448 x592)))
(define-fun x155 ((x592 Int)) Int (ite x2598 (x1448 x592) (ite x499 (x1982 x592) (ite x487 (x2515 x592) (ite x772 (x47 x592) (x2412 x592))))))
(define-fun x2179 ((x592 Int)) Int (ite (= x592 x1296) 0 (x155 x592)))
(define-fun x2510 ((x592 Int)) Int (ite (= x592 x1768) x2589 (x2179 x592)))
(define-fun x1351 ((x592 Int)) Int (ite (= x592 x1298) x1388 (x2510 x592)))
(define-fun x1143 ((x592 Int)) Int (ite (= x592 x1073) x1097 (x1351 x592)))
(define-fun x1544 ((x592 Int)) Int (ite (= x592 x1053) x2295 (x1143 x592)))
(define-fun x570 ((x592 Int)) Int (ite (= x592 x1896) x2558 (x1544 x592)))
(define-fun x1710 ((x592 Int)) Int (ite (= x592 x198) x2754 (x570 x592)))
(define-fun x1353 ((x592 Int)) Int (ite (= x592 x2617) x1838 (x1710 x592)))
(define-fun x386 ((x592 Int)) Int (ite x193 (x1710 x592) (ite x375 (x570 x592) (ite x1917 (x1544 x592) (ite x817 (x1143 x592) (x1353 x592))))))
(define-fun x1897 ((x592 Int)) Int (ite (= x592 x2553) 0 (x386 x592)))
(define-fun x5 ((x592 Int)) Int (ite (= x481 x592) x805 (x1897 x592)))
(define-fun x2661 ((x592 Int)) Int (ite x142 (x970 x592) (ite x28 (x970 x592) (x933 x592))))
(define-fun x900 ((x592 Int)) Int (x2661 x592))
(define-fun x1483 ((x592 Int)) Int (ite x544 (x2661 x592) (x900 x592)))
(define-fun x563 ((x592 Int)) Int (ite x142 (x1504 x592) (ite x28 (x1504 x592) (x1136 x592))))
(define-fun x435 ((x592 Int)) Int (ite x1547 (x563 x592) (x1507 x592)))
(define-fun x749 ((x592 Int)) Int (ite x544 (x563 x592) (x435 x592)))
(define-fun x577 ((x592 Int)) Int (x1137 x592))
(define-fun x2219 ((x592 Int)) Int (x577 x592))
(define-fun x873 ((x592 Int)) Int (ite x142 (x1336 x592) (ite x28 (x1336 x592) (x292 x592))))
(define-fun x294 ((x592 Int)) Int (ite x1494 (x839 x592) (x873 x592)))
(define-fun x834 ((x592 Int)) Int (ite x544 (x873 x592) (ite x1547 (x294 x592) (x1083 x592))))
(define-fun x2459 ((x592 Int)) Int (x998 x592))
(define-fun x115 ((x592 Int)) Int (x2459 x592))
(define-fun x680 ((x592 Int)) Int (ite (= 0 x592) x1226 (x1802 x592)))
(define-fun x2142 ((x592 Int)) Int (ite x142 (x2489 x592) (ite x28 (x2489 x592) (x2272 x592))))
(define-fun x2324 ((x592 Int)) Int (ite (= x592 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x630 x592)))
(define-fun x498 ((x592 Int)) Int (ite (= 132 x592) x541 (x2324 x592)))
(define-fun x1043 ((x592 Int)) Int (ite (= x592 164) 128 (x498 x592)))
(define-fun x957 ((x592 Int)) Int (ite (= x592 260) x1667 (x1043 x592)))
(define-fun x96 ((x592 Int)) Int (ite (= x592 292) x437 (x957 x592)))
(define-fun x2481 ((x592 Int)) Int (ite (= 128 x592) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x630 x592)))
(define-fun x2507 ((x592 Int)) Int (ite (= x592 132) x1192 (x2481 x592)))
(define-fun x1852 ((x592 Int)) Int (ite (= x592 164) 128 (x2507 x592)))
(define-fun x754 ((x592 Int)) Int (ite (= 260 x592) x2760 (x1852 x592)))
(define-fun x1760 ((x592 Int)) Int (ite (= 292 x592) x2147 (x754 x592)))
(define-fun x2548 ((x592 Int)) Int (ite x142 (x1270 x592) (ite x28 (x1270 x592) (x1191 x592))))
(define-fun x195 ((x592 Int)) Int (ite (= x592 292) x729 (x957 x592)))
(define-fun x1876 ((x592 Int)) Int (ite x49 (ite x2421 (x957 x592) (x96 x592)) (x195 x592)))
(define-fun x1839 ((x592 Int)) Int (ite (= x592 196) x1088 (x1876 x592)))
(define-fun x2034 ((x592 Int)) Int (ite (= 228 x592) x895 (x1839 x592)))
(define-fun x2609 ((x592 Int)) Int (ite (= x1186 x592) x2218 (x2034 x592)))
(define-fun x757 ((x592 Int)) Int (ite (= x592 x210) x2280 (x2609 x592)))
(define-fun x1520 ((x592 Int)) Int (ite (= x592 292) x1141 (x754 x592)))
(define-fun x209 ((x592 Int)) Int (ite x272 (ite x1121 (x754 x592) (x1760 x592)) (x1520 x592)))
(define-fun x2628 ((x592 Int)) Int (ite (= 196 x592) x1497 (x209 x592)))
(define-fun x1035 ((x592 Int)) Int (ite (= 228 x592) x642 (x2628 x592)))
(define-fun x2539 ((x592 Int)) Int (ite (= x1117 x592) x1675 (x1035 x592)))
(define-fun x366 ((x592 Int)) Int (ite (= x215 x592) x1256 (x2539 x592)))
(define-fun x1464 ((x592 Int)) Int (ite (= x592 x210) x1678 (x2609 x592)))
(define-fun x1733 ((x592 Int)) Int (ite (= x592 x215) x431 (x2539 x592)))
(define-fun x1355 ((x592 Int)) Int (ite x1960 (ite x533 (x2609 x592) (x757 x592)) (x1464 x592)))
(define-fun x2177 ((x592 Int)) Int (ite (and (> x2445 x592) (<= 164 x592)) (x1355 (+ 128 x592)) (x800 x592)))
(define-fun x623 ((x592 Int)) Int (ite (= x592 128) x1857 (x206 x592)))
(define-fun x2538 ((x592 Int)) Int (ite (= 160 x592) x963 (x623 x592)))
(define-fun x1561 ((x592 Int)) Int (ite (= x592 160) x1990 (x623 x592)))
(define-fun x1949 ((x592 Int)) Int (ite x1 (ite x1748 (x2539 x592) (x366 x592)) (x1733 x592)))
(define-fun x51 ((x592 Int)) Int (ite (and (< x592 x331) (<= 164 x592)) (x1949 (+ x592 128)) (x2251 x592)))
(define-fun x1998 ((x592 Int)) Int (ite (= x592 x1637) x176 (x1889 x592)))
(define-fun x2447 ((x592 Int)) Int (ite (and (>= x592 x658) (> (+ x658 x176) x592)) (x51 (- (+ x592 x218) x658)) (x966 x592)))
(define-fun x60 ((x592 Int)) Int (ite (= x592 x1696) 0 (x2447 x592)))
(define-fun x1299 ((x592 Int)) Int (ite (= x592 x2601) 1 (x998 x592)))
(define-fun x444 ((x592 Int)) Int (ite (= 192 x592) x2072 (x2538 x592)))
(define-fun x1317 ((x592 Int)) Int (ite x1093 (x623 x592) (ite x925 (ite x1931 (x2538 x592) (x444 x592)) (x1561 x592))))
(define-fun x959 ((x592 Int)) Int (ite (and (< x592 (+ x1862 x1267)) (>= x592 x1862)) (x2177 (- (+ 164 x592) x1862)) (x1317 x592)))
(define-fun x2384 ((x592 Int)) Int (ite (= x2105 x592) 0 (x959 x592)))
(define-fun x1805 ((x592 Int)) Int (ite x838 (x2384 x592) (x1317 x592)))
(define-fun x1522 ((x592 Int)) Int (ite (= x592 x1862) x1267 (x1805 x592)))
(define-fun x1552 ((x592 Int)) Int (ite (and (>= x592 x1936) (> (+ x1267 x1936) x592)) (x2177 (- (+ x592 164) x1936)) (x1522 x592)))
(define-fun x1766 ((x592 Int)) Int (ite (= x592 x456) 0 (x1552 x592)))
(define-fun x937 ((x592 Int)) Int (ite (= x2081 x592) x1882 (x1766 x592)))
(define-fun x2718 ((x592 Int)) Int (ite (and (> (+ x1725 x1882) x592) (<= x1725 x592)) (x2177 (- (+ x2062 x592) x1725)) (x937 x592)))
(define-fun x2282 ((x592 Int)) Int (ite (= x212 x592) 0 (x2718 x592)))
(define-fun x891 ((x592 Int)) Int (ite (= x2456 x592) x541 (x2282 x592)))
(define-fun x2094 ((x592 Int)) Int (ite (= x592 x1825) 128 (x891 x592)))
(define-fun x1331 ((x592 Int)) Int (ite (= x592 x2073) x182 (x2094 x592)))
(define-fun x547 ((x592 Int)) Int (ite (= x592 x2753) x505 (x1331 x592)))
(define-fun x1234 ((x592 Int)) Int (ite (= x2479 x592) x139 (x547 x592)))
(define-fun x1719 ((x592 Int)) Int (ite (= x896 x592) x2144 (x1234 x592)))
(define-fun x2495 ((x592 Int)) Int (ite (= x1743 x592) x2480 (x1719 x592)))
(define-fun x1762 ((x592 Int)) Int (ite x1329 (x1719 x592) (ite x1200 (x1234 x592) (ite x858 (x547 x592) (ite x1382 (x1331 x592) (x2495 x592))))))
(define-fun x1050 ((x592 Int)) Int (ite (= x592 x734) 0 (x1762 x592)))
(define-fun x1649 ((x592 Int)) Int (ite (= x1744 x592) x1088 (x1050 x592)))
(define-fun x2354 ((x592 Int)) Int (ite (= x1521 x592) x1276 (x1649 x592)))
(define-fun x2641 ((x592 Int)) Int (ite (= x1863 x592) x2506 (x2354 x592)))
(define-fun x1364 ((x592 Int)) Int (ite (= x592 x322) x1265 (x2641 x592)))
(define-fun x332 ((x592 Int)) Int (ite (= x653 x592) x935 (x1364 x592)))
(define-fun x621 ((x592 Int)) Int (ite (= x1676 x592) x1358 (x332 x592)))
(define-fun x1605 ((x592 Int)) Int (ite (= x493 x592) x1656 (x621 x592)))
(define-fun x144 ((x592 Int)) Int (ite x2771 (x621 x592) (ite x2268 (x332 x592) (ite x2472 (x1364 x592) (ite x1424 (x2641 x592) (x1605 x592))))))
(define-fun x820 ((x592 Int)) Int (ite (= x592 x564) 0 (x144 x592)))
(define-fun x2342 ((x592 Int)) Int (ite (= x592 x1919) x2110 (x820 x592)))
(define-fun x514 ((x592 Int)) Int (ite (= x592 x1365) x1184 (x2342 x592)))
(define-fun x1432 ((x592 Int)) Int (ite (= x1367 x592) 150 (x514 x592)))
(define-fun x1645 ((x592 Int)) Int (ite (and (<= x2184 x592) (< x592 (+ 150 x2184))) (x2177 (- (+ x592 x1563) x2184)) (x1432 x592)))
(define-fun x774 ((x592 Int)) Int (ite (and (>= x592 0) (> 0 x592)) (x1422 x592) (x1645 x592)))
(define-fun x622 ((x592 Int)) Int (ite x1494 (x774 x592) (x1645 x592)))
(define-fun x607 ((x592 Int)) Int (ite (= x592 x1367) x914 (x622 x592)))
(define-fun x1366 ((x592 Int)) Int (ite (and (> (+ x737 x914) x592) (<= x737 x592)) (x1422 (- x592 x737)) (x607 x592)))
(define-fun x1693 ((x592 Int)) Int (ite (= x276 x592) x1562 (x1366 x592)))
(define-fun x1101 ((x592 Int)) Int (ite (= x1598 x592) x274 (x1693 x592)))
(define-fun x92 ((x592 Int)) Int (ite (= x592 x1915) x1294 (x1101 x592)))
(define-fun x1752 ((x592 Int)) Int (ite x1547 (x294 x592) (x1083 x592)))
(define-fun x1526 ((x592 Int)) Int (x577 x592))
(define-fun x843 ((x592 Int)) Int (x2459 x592))
(define-fun x1686 ((x592 Int)) Int (ite (= x2758 x592) x1978 (x92 x592)))
(define-fun x295 ((x592 Int)) Int (ite x2655 (x92 x592) (ite x1054 (x1101 x592) (ite x300 (x1693 x592) (ite x432 (x1366 x592) (x1686 x592))))))
(define-fun x2015 ((x592 Int)) Int (ite (= x592 x288) 0 (x295 x592)))
(define-fun x1258 ((x592 Int)) Int (ite (= x12 x592) x2199 (x2015 x592)))
(define-fun x490 ((x592 Int)) Int (ite (= x592 x276) x541 (x1258 x592)))
(define-fun x1911 ((x592 Int)) Int (ite (= x402 x592) 160 (x490 x592)))
(define-fun x1724 ((x592 Int)) Int (ite (= x809 x592) x361 (x1911 x592)))
(define-fun x69 ((x592 Int)) Int (ite (= x592 x1666) x764 (x1724 x592)))
(define-fun x357 ((x592 Int)) Int (ite (= x1971 x592) x1860 (x69 x592)))
(define-fun x691 ((x592 Int)) Int (ite (= x592 x2791) x185 (x357 x592)))
(define-fun x2497 ((x592 Int)) Int (ite (= x2668 x592) x1914 (x691 x592)))
(define-fun x2382 ((x592 Int)) Int (ite x65 (x691 x592) (ite x438 (x357 x592) (ite x2261 (x69 x592) (ite x2404 (x1724 x592) (x2497 x592))))))
(define-fun x1840 ((x592 Int)) Int (ite (= x546 x592) 0 (x2382 x592)))
(define-fun x852 ((x592 Int)) Int (ite (= x592 x2215) x1088 (x1840 x592)))
(define-fun x1967 ((x592 Int)) Int (ite (= x592 x2186) x1150 (x852 x592)))
(define-fun x646 ((x592 Int)) Int (ite (= x592 x2465) x2521 (x1967 x592)))
(define-fun x2726 ((x592 Int)) Int (ite (= x592 x297) x2188 (x646 x592)))
(define-fun x1957 ((x592 Int)) Int (ite (= x1417 x592) x127 (x2726 x592)))
(define-fun x1279 ((x592 Int)) Int (ite (= x308 x592) x1107 (x1957 x592)))
(define-fun x1674 ((x592 Int)) Int (ite (= x592 x237) x958 (x1279 x592)))
(define-fun x1634 ((x592 Int)) Int (ite x157 (x1279 x592) (ite x71 (x1957 x592) (ite x1858 (x2726 x592) (ite x1755 (x646 x592) (x1674 x592))))))
(define-fun x1970 ((x592 Int)) Int (ite (= x592 x2583) 0 (x1634 x592)))
(define-fun x690 ((x592 Int)) Int (ite (= x592 x2461) x1031 (x1970 x592)))
(define-fun x1909 ((x592 Int)) Int (ite x142 (x2283 x592) (ite x28 (x2283 x592) (x899 x592))))
(define-fun x824 ((x592 Int)) Int (ite (= x1375 x592) x305 (x1909 x592)))
(define-fun x1527 ((x592 Int)) Int (ite x142 (x1662 x592) (ite x28 (x1662 x592) (ite x1305 (ite x1565 (x1470 x592) (x1662 x592)) (x1662 x592)))))
(define-fun x484 ((x592 Int)) Int (ite x142 (x1269 x592) (ite x28 (x1269 x592) (x1685 x592))))
(define-fun x475 ((x592 Int)) Int (ite (= x1415 x592) x2671 (x484 x592)))
(define-fun x1473 ((x592 Int)) Int (ite x142 (x2120 x592) (ite x28 (x2120 x592) (x955 x592))))
(define-fun x1211 ((x592 Int)) Int (ite (= x592 x1908) x775 (x1473 x592)))
(define-fun x1776 ((x592 Int)) Int (ite x142 (x695 x592) (ite x28 (x695 x592) (x2611 x592))))
(define-fun x362 ((x592 Int)) Int (ite (= x2337 x592) x675 (x1776 x592)))
(define-fun x1371 ((x592 Int)) Int (ite (= 0 x592) x54 (x1802 x592)))
(define-fun x228 ((x592 Int)) Int (ite x1565 (x2131 x592) (x695 x592)))
(define-fun x1112 ((x592 Int)) Int (ite x1565 (x1206 x592) (x1336 x592)))
(define-fun x2235 ((x592 Int)) Int (ite x1565 (x2513 x592) (x31 x592)))
(define-fun x1791 ((x592 Int)) Int (ite x1565 (x1711 x592) (x1926 x592)))
(define-fun x147 ((x592 Int)) Int (ite x1565 (x596 x592) (x2120 x592)))
(define-fun x1406 ((x592 Int)) Int (ite x1565 (x2580 x592) (x2471 x592)))
(define-fun x1995 ((x592 Int)) Int (ite x1565 (x380 x592) (x1270 x592)))
(define-fun x2318 ((x592 Int)) Int (ite x1565 (x1495 x592) (x457 x592)))
(define-fun x1140 ((x592 Int)) Int (ite x1565 (x1777 x592) (x2489 x592)))
(define-fun x213 ((x592 Int)) Int (ite x1565 (x1939 x592) (x2682 x592)))
(define-fun x1152 ((x592 Int)) Int (ite x1565 (x2532 x592) (x1269 x592)))
(define-fun x2006 ((x592 Int)) Int (ite x61 (x3 x592) (x1699 x592)))
(define-fun x682 ((x592 Int)) Int (ite (and (< x592 160) (>= x592 128)) (x2006 (- x592 128)) (x1334 x592)))
(define-fun x771 ((x592 Int)) Int (ite x578 (x615 x592) (x1426 x592)))
(define-fun x672 ((x592 Int)) Int (ite (and (<= 128 x592) (> 160 x592)) (x771 (- x592 128)) (x1060 x592)))
(define-fun x1091 ((x592 Int)) Int (x2244 x592))
(define-fun x638 ((x592 Int)) Int (x972 x592))
(define-fun x1030 ((x592 Int)) Int (x1384 x592))
(define-fun x1010 ((x592 Int)) Int (ite x142 (x1684 x592) (ite x28 (x457 x592) (x540 x592))))
(define-fun x1739 ((x592 Int)) Int (ite x142 (x2597 x592) (x2711 x592)))
(define-fun x134 ((x592 Int)) Int (x2439 x592))
(define-fun x510 ((x592 Int)) Int (ite x142 (x2471 x592) (ite x28 (x2471 x592) (x2667 x592))))
(define-fun x559 ((x592 Int)) Int (ite x142 (x2682 x592) (ite x28 (x2682 x592) (x1811 x592))))
(define-fun x568 ((x592 Int)) Int (ite x142 (x1926 x592) (ite x28 (x1926 x592) (x281 x592))))
(define-fun x2327 ((x592 Int)) Int (ite x142 (x31 x592) (ite x28 (x31 x592) (x138 x592))))
(define-fun x486 ((x592 Int)) Int (x2239 x592))
(define-fun x482 ((x592 Int)) Int (ite x142 (x1016 x592) (x2699 x592)))
(define-fun x715 ((x592 Int)) Int (ite x142 (x101 x592) (x2422 x592)))
(define-fun x1703 ((x592 Int)) Int (ite (= x861 x592) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x1668 x592)))
(define-fun x868 ((x592 Int)) Int (ite (= x1212 x592) x1584 (x1703 x592)))
(define-fun x303 ((x592 Int)) Int (ite (= 128 x592) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x630 x592)))
(define-fun x2045 ((x592 Int)) Int (ite (= x592 132) x350 (x303 x592)))
(define-fun x280 ((x592 Int)) Int (ite (= 164 x592) x353 (x2045 x592)))
(define-fun x1421 ((x592 Int)) Int (ite (= 196 x592) x504 (x280 x592)))
(define-fun x1754 ((x592 Int)) Int (ite (= x592 228) x1272 (x1421 x592)))
(define-fun x2253 ((x592 Int)) Int (ite x1337 (x2661 x592) (ite x544 (x2661 x592) (x900 x592))))
(define-fun x307 ((x592 Int)) Int (ite x1337 (x563 x592) (ite x544 (x563 x592) (x435 x592))))
(define-fun x1560 ((x592 Int)) Int (x577 x592))
(define-fun x872 ((x592 Int)) Int (x2459 x592))
(define-fun x2712 ((x592 Int)) Int (ite x1337 (x1371 x592) (x680 x592)))
(define-fun x2592 ((x592 Int)) Int (ite (and (< x592 (+ x861 32)) (<= x861 x592)) (x2712 (- x592 x861)) (x2460 x592)))
(define-fun x318 ((x592 Int)) Int (ite (= x1577 x592) 0 (x998 x592)))
(define-fun x158 ((x592 Int)) Int (ite (= x592 x799) 1 (x307 x592)))
(define-fun x1713 ((x592 Int)) Int (ite (= x592 x2787) x2622 (x1137 x592)))
(define-fun x352 ((x592 Int)) Int (ite (= x1194 x592) 0 (x2253 x592)))
(define-fun x1519 ((x592 Int)) Int 0)
(define-fun x174 ((x592 Int)) Int 0)
(define-fun x807 ((x592 Int)) Int (ite (= 128 x592) x2277 (x1883 x592)))
(define-fun x1573 ((x592 Int)) Int (ite (= x592 160) x1583 (x807 x592)))
(define-fun x597 ((x592 Int)) Int (ite (= x592 192) x2183 (x1573 x592)))
(assert (x1145 x1530))
(assert (= (x2200 (x1452 x1267 x851 x15 x1847 x2767)) x851))
(assert (not x1095))
(assert (x1145 x1045))
(assert (= x1753 (x2082 (x1452 x1705 x2133 x1773 x1568 x1753))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x442 x371)))
(assert (= (x2158 (x1869 64 x59 6)) 64))
(assert (not (x130 (x795 x887 x2437))))
(assert (x1624 x2046))
(assert (x1145 x602))
(assert (x1145 x2753))
(assert (=> (>= 10000 x2499) (= (x1972 x2499) 0)))
(assert (x1145 x1799))
(assert (x1145 x1141))
(assert (= x2630 (=> (and (= x120 x1224) (= x236 x1921) (= x1890 x2781) (= x2064 x582) (= x120 x2077) (= x2064 x724) (= x1090 x2264) (= x236 x91) (= x1945 x730) (= x2676 x2339) (= x2326 x945) (= x2728 x1459) (= x1092 x2355) (= x1548 x2676) (= x102 x1859) (= x2134 x1890) (= x58 x102) (= x244 x605) (= x1861 x1945) (= x1930 x1459) (= x556 x945) (= x1213 x2355) (= x731 x168) (= x244 x2258) (= x2194 x731) (= x2264 x1541)) x342)))
(assert (x1145 x1094))
(assert (x912 x1906 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x870) (= (x1972 x870) 0)))
(assert (= x442 (x2158 (x1452 x442 x266 x876 x1503 x2602))))
(assert (x1145 x392))
(assert (= (and (not x572) x183) x2427))
(assert (= x2620 (=> (and (= (x2023 (+ 36 x2739)) x1372) (= x135 (* x33 32)) (= x2720 (x2023 (+ x1602 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (= (x1237 (+ x443 31) 32) x290) (>= x2739 2) (= x2361 (x635 x153)) (= (x2023 (+ x1831 x2210)) x1173) (= (* 32 x290) x207) (= x2032 (x2023 (+ x145 32))) (>= x1602 1) (= (x2023 (+ 32 x153)) x1831) (> x2739 x1602) (= x10 (< 0 x2361)) (= x2155 150) (= x953 (x2023 (+ 32 x1372))) (< x153 x1602) (= (x2023 (+ x1602 (mod (+ 32 x207) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (= x1602 (x2023 (+ x153 (mod (+ x135 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2023 (+ x2720 x443)) x1593) (= x145 (x2023 (+ 128 x1372))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x153) (<= x1602 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x33 (x1237 (+ x2210 31) 32))) (and (=> (and x10 (and (= (x1229 x1831) x2223) (= (< 32 x2361) x1350))) (and (=> (not x1350) x664) (=> (and (and (= (> x2361 64) x2577) (= x2678 (x1142 x1865)) (= x1865 (x2023 (+ x1831 32))) (= x2063 (x2023 (+ 32 x2032)))) x1350) (and (=> (and x2577 (and (= (x367 x1759) x2137) (= x1788 (< 96 x2361)) (= (x2023 (+ x2032 64)) x2619) (= (x2023 (+ 64 x1831)) x1759))) (and (=> (not x1788) x664) (=> x1788 x599))) (=> (not x2577) x664))))) (=> (not x10) x664)))))
(assert (x1145 x345))
(assert (=> (>= 10000 x851) (= (x1972 x851) 0)))
(assert (not (x130 (x1869 64 x1639 11))))
(assert (= x1615 (x416 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (= x2698 (=> (= (+ x2310 x1530) x464) x973)))
(assert (x1145 x2409))
(assert (x1145 x1901))
(assert (= x304 (x1328 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97))))
(assert (x1145 x1313))
(assert (= (x1972 (x2647 x298 x1300 x1476 x669 x2425 x890)) (x2647 x298 x1300 x1476 x669 x2425 x890)))
(assert (= (x1452 x1669 x122 x882 x942 x2) (x1972 (x1452 x1669 x122 x882 x942 x2))))
(assert (x1145 x726))
(assert (x1145 x2642))
(assert (x1145 x1882))
(assert (x1145 x888))
(assert (x1145 x2222))
(assert (= (x416 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) x1846))
(assert (=> (<= x888 10000) (= (x1972 x888) 0)))
(assert (= x2522 (x2158 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (> (x795 x72 x64) 10000))
(assert (x1145 x870))
(assert (= (and x2582 x984) x627))
(assert (=> (<= x1069 10000) (= (x1972 x1069) 0)))
(assert (= 36 (x2649 (x1869 64 x2325 36))))
(assert (= (and (not x249) x358) x858))
(assert (x1145 x2209))
(assert (= x688 (=> (and (= x1919 (x2023 (+ x2081 (mod (+ x1550 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1550 (* 32 x2669)) (= (x2023 (+ x1725 x1882)) x212) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1862) (= x1268 150) (= x2753 (x2023 (+ 32 x2073))) (= (x1237 (+ 31 x1882) 32) x2669) (> x1919 x2081) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1862) (>= x2081 1) (= x463 (x1237 (+ 31 x1267) 32)) (= (x2023 (+ 32 x1862)) x1936) (>= x1919 2) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1862) (= x456 (x2023 (+ x1267 x1936))) (= x2073 (x2023 (+ x2456 128))) (= (> x182 0) x571) (= (x2023 (+ 32 x2456)) x1825) (= x2456 (x2023 (+ 36 x1919))) (<= x2081 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2023 (+ 32 x2081)) x1725) (< x1862 x2081) (= x2081 (x2023 (+ x1862 (mod (+ x1554 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x182 (x2094 x1862)) (= (* x463 32) x1554)) (and (=> (and x571 (and (= x505 (x1331 x1936)) (= (> x182 32) x249))) (and (=> (and x249 (and (= x2479 (x2023 (+ 32 x2753))) (= (> x182 64) x2736) (= (x2023 (+ x1936 32)) x832) (= x139 (x547 x832)))) (and (=> (and x2736 (and (= (x2023 (+ x2753 64)) x896) (= x761 (x2023 (+ 64 x1936))) (= x1709 (> x182 96)) (= (x1234 x761) x2144))) (and (=> x1709 x2590) (=> (not x1709) x1622))) (=> (not x2736) x1622))) (=> (not x249) x1622))) (=> (not x571) x1622)))))
(assert (x1145 x788))
(assert (x1997 32 (ite (not (= x2523 0)) 1 0)))
(assert (> (x1869 x2210 x1490 x1283) 10000))
(assert (x1145 x1861))
(assert (=> (<= x2025 10000) (= 0 (x1972 x2025))))
(assert (x1145 x265))
(assert (x912 x2156 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1531 (or x633 x817 x375 x193 x1917)))
(assert (x1145 x1274))
(assert (not (x130 (x1452 x1669 x122 x882 x942 x2))))
(assert (=> (>= 10000 x2335) (= 0 (x1972 x2335))))
(assert (= 0 (x1972 2177969240)))
(assert (= x2350 (x2200 (x1869 64 x2350 36))))
(assert (=> (>= 10000 x2281) (= 0 (x1972 x2281))))
(assert (x1145 x2270))
(assert (x1145 x2030))
(assert (= x2287 (and x1394 x819)))
(assert (x1145 x1025))
(assert (x1145 x506))
(assert (not (x130 (x1869 64 x541 3))))
(assert (not (x130 (x1869 64 x2488 2))))
(assert (x1145 x1914))
(assert (=> (<= x1153 10000) (= 0 (x1972 x1153))))
(assert (not (x130 (x1452 x2522 x2387 x503 x617 x2027))))
(assert (= (x1452 x72 x399 x1798 x1792 x2335) (x1972 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (= (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x1145 x1503))
(assert (x1145 x2358))
(assert (= x2657 (and x1380 (not x2191))))
(assert (< 10000 (x611 x442 x995 x2565 x1189 x1290 x2270 x987)))
(assert (x1145 x15))
(assert (x1145 x2264))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (=> (<= x1922 10000) (= 0 (x1972 x1922))))
(assert (=> (>= 10000 x191) (= 0 (x1972 x191))))
(assert (x1145 x2229))
(assert (x1145 x2705))
(assert (=> (<= x1653 10000) (= (x1972 x1653) 0)))
(assert (= (x2158 (x2647 x1267 x265 x2499 x159 x133 x2214)) x1267))
(assert (x1145 x485))
(assert (x1145 x2277))
(assert (= (x2200 (x1869 64 x836 7)) x836))
(assert (x1145 x987))
(assert (=> (<= x1159 10000) (= (x1972 x1159) 0)))
(assert (x1145 x505))
(assert (= (x2158 (x1869 64 x2488 2)) 64))
(assert (x1145 x1567))
(assert (=> (<= x97 10000) (= (x1972 x97) 0)))
(assert (x1145 x2020))
(assert (= (x1972 (x43 x442 x1352 x702 x1927)) (x43 x442 x1352 x702 x1927)))
(assert (x1145 x2271))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= x2600 (x2200 (x611 x887 x2600 x1670 x655 x2056 x822 x1623))))
(assert (= x1784 (x2200 (x2647 x442 x1784 x1538 x1103 x756 x169))))
(assert (= x2325 (x2200 (x1869 64 x2325 36))))
(assert (x1145 x2640))
(assert (x1690 x857))
(assert (x1145 x2450))
(assert (=> (<= x57 10000) (= 0 (x1972 x57))))
(assert (x1145 x316))
(assert (x1145 x2143))
(assert (=> (>= 10000 x1122) (= 0 (x1972 x1122))))
(assert (= (x2082 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) x80))
(assert (=> (<= x266 10000) (= 0 (x1972 x266))))
(assert (x1145 x673))
(assert (= x762 (x2649 (x1869 x1705 x2452 x762))))
(assert (x1145 x1731))
(assert (x1145 x2558))
(assert (x1145 x2719))
(assert (x1145 x48))
(assert (x1145 x400))
(assert (x2686 x2696))
(assert (x1828 (ite (not (= x2218 0)) 1 0)))
(assert (= x438 (and x1996 (not x2154))))
(assert (x1145 x481))
(assert (x1145 x247))
(assert (x1145 x1545))
(assert (x1145 x748))
(assert (x1145 x1118))
(assert (x1145 x327))
(assert (= (x2200 (x795 x1705 x2732)) x2732))
(assert (=> (>= 10000 x2607) (= (x1972 x2607) 0)))
(assert (x813 (+ 31 x2670) 32))
(assert (> (x2647 x1267 x265 x2499 x159 x133 x2214) 10000))
(assert (x130 1341992515))
(assert (= (x2200 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)) x2049))
(assert (x1145 x982))
(assert (not (x130 (x795 x1705 x2732))))
(assert (x1145 x2105))
(assert (x1145 x374))
(assert (= x399 (x2200 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (=> (>= 10000 x659) (= 0 (x1972 x659))))
(assert (x1145 x2106))
(assert (x1145 x2025))
(assert (= (x2158 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x1705))
(assert (=> (<= x2017 10000) (= 0 (x1972 x2017))))
(assert (= x2220 (=> (= x1953 (+ x372 x2284)) x1315)))
(assert (x1145 x1948))
(assert (x1145 x1352))
(assert (= (x6 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)) x253))
(assert (x1145 x365))
(assert (= x706 (x2200 (x611 x72 x706 x1462 x1420 x2025 x48 x2431))))
(assert (= (x2158 (x1869 64 x1122 6)) 64))
(assert (x1145 x2036))
(assert (= (=> (and (= x1863 (x2023 (+ x2008 x2753))) (= x1276 (x1230 (- x1863 x2456))) (= (x2354 x2081) x2506) (= (x2023 (+ 32 x1744)) x1521) (= x322 (x2023 (+ 32 x1863))) (= (x2023 (+ 31 x182)) x770) (= (< 0 x2506) x2633) (= x734 (x2023 (+ x2753 x182))) (= x2008 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x770)) (= x1744 (x2023 (+ 32 x1825)))) (and (=> (and (and (= (< 32 x2506) x663) (= x1265 (x2641 x1725))) x2633) (and (=> (and x663 (and (= (x2023 (+ x1725 32)) x923) (= x935 (x1364 x923)) (= (< 64 x2506) x2301) (= (x2023 (+ x322 32)) x653))) (and (=> (not x2301) x531) (=> (and (and (= (x2023 (+ 64 x1725)) x1318) (= (< 96 x2506) x2255) (= (x2023 (+ x322 64)) x1676) (= (x332 x1318) x1358)) x2301) (and (=> (not x2255) x531) (=> x2255 x1491))))) (=> (not x663) x531))) (=> (not x2633) x531))) x1622))
(assert (x1145 x105))
(assert (x1145 x2198))
(assert (= 2 (x2649 (x1869 64 x59 2))))
(assert (x1145 x706))
(assert (x1145 x2612))
(assert (x1828 x33))
(assert (x1145 x2316))
(assert (x1145 x641))
(assert (=> (<= x2431 10000) (= 0 (x1972 x2431))))
(assert (= x1337 (or x1535 x36)))
(assert (x1145 x1286))
(assert (x1145 x2292))
(assert (x1145 x2442))
(assert (x1145 x2635))
(assert (x1145 x449))
(assert (x1145 x653))
(assert (x1145 x315))
(assert (=> (>= 10000 x1018) (= (x1972 x1018) 0)))
(assert (> (x43 x1705 x1653 x2303 x829) 10000))
(assert (= (and x89 x808) x2540))
(assert (x1145 x1648))
(assert (= (x1972 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444)) (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444)))
(assert (= (x1972 (x1869 64 x417 10)) (x1869 64 x417 10)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x2622 10)))
(assert (=> (>= 10000 x1837) (= 0 (x1972 x1837))))
(assert (x1145 x2232))
(assert (= x72 (x2158 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (x1145 x541))
(assert (x1145 x2137))
(assert (= x1055 (or x1349 x645 x1511 x2618 x2427)))
(assert (= (x416 (x2647 x887 x2569 x57 x2127 x1235 x911)) x2127))
(assert (=> (<= x1103 10000) (= (x1972 x1103) 0)))
(assert (x1145 x1637))
(assert (x1145 x2782))
(assert (< 10000 (x1869 64 x2488 2)))
(assert (x813 x1988 256))
(assert (=> (>= 10000 x1187) (= (x1972 x1187) 0)))
(assert (= x1574 x1868))
(assert (= (x1972 (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (>= 32 x1669) x1941 (ite (>= 64 x1669) x1460 (ite (>= 96 x1669) x433 (ite (>= 128 x1669) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891)))))))))) (x1869 64 x1088 (ite (= 0 x1669) x1304 (ite (>= 32 x1669) x1941 (ite (<= x1669 64) x1460 (ite (>= 96 x1669) x433 (ite (<= x1669 128) x2486 (ite (<= x1669 160) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891)))))))))))
(assert (x2116 x2762))
(assert (x1145 x865))
(assert (=> (>= 10000 x706) (= 0 (x1972 x706))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x2522 x842 x1018 x164)))
(assert (= (x1972 65535) 0))
(assert (x1145 x874))
(assert (x1145 x1376))
(assert (x1145 x1906))
(assert (x1145 x310))
(assert (x1145 x2502))
(assert (x1145 x2458))
(assert (x1145 x347))
(assert (=> (<= x2 10000) (= (x1972 x2) 0)))
(assert (=> (<= x48 10000) (= 0 (x1972 x48))))
(assert (x1145 x237))
(assert (= x72 (x2158 (x795 x72 x64))))
(assert (x1145 x829))
(assert (x1145 x2418))
(assert (< (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x714 10000) (= (x1972 x714) 0)))
(assert (= x129 (x6 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (x1145 x371))
(assert (x1145 x1964))
(assert (= (x1972 (x2647 x1376 x610 x1397 x46 x1321 x2136)) (x2647 x1376 x610 x1397 x46 x1321 x2136)))
(assert (x1145 x373))
(assert (=> (>= 10000 x1891) (= (x1972 x1891) 0)))
(assert (> (x795 32 x2130) 10000))
(assert (x1145 x2732))
(assert (= (x1972 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) (x611 x1669 x720 x681 x1632 x80 x1159 x2042)))
(assert (x1145 x1225))
(assert (= (and x1683 x1695) x2252))
(assert (not (x130 (x1869 64 x2710 2))))
(assert (x1145 x1697))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)))
(assert (x1145 x255))
(assert (not (x130 (x1452 x1267 x851 x15 x1847 x2767))))
(assert (x1145 x654))
(assert (< (x1869 64 x2589 (ite (= 0 x1705) x2300 (ite (>= 32 x1705) x436 (ite (<= x1705 64) x2057 (ite (>= 96 x1705) x1008 (ite (>= 128 x1705) x735 (ite (>= 160 x1705) x1969 (ite (>= 192 x1705) x2570 (ite (>= 224 x1705) x2055 x1252))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1376 (x2158 (x43 x1376 x1086 x870 x1094))))
(assert (=> (<= x80 10000) (= 0 (x1972 x80))))
(assert (x1145 x734))
(assert (x1145 x1720))
(assert (x1145 x2188))
(assert (= 64 (x2158 (x1869 64 x25 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)))
(assert (x1145 x124))
(assert (= (and x1402 x1513) x1640))
(assert (< 10000 (x43 x2522 x842 x1018 x164)))
(assert (= (x1972 3672334990) 0))
(assert (=> (>= 10000 x2389) (= (x1972 x2389) 0)))
(assert (x1145 x57))
(assert (x1145 x229))
(assert (x1145 x791))
(assert (= x1481 (or x61 x2555)))
(assert (=> (>= 10000 x2452) (= 0 (x1972 x2452))))
(assert (= x1219 (and x190 x1385)))
(assert (x1145 x600))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x1376 x567 x980 x141 x1201 x2593 x576)))
(assert (=> (>= 10000 x15) (= (x1972 x15) 0)))
(assert (x1145 x1848))
(assert (x1145 x1072))
(assert (x1145 x2516))
(assert (x1145 x2024))
(assert (= (and x259 x1884) x1879))
(assert (x1145 x2584))
(assert (= x1542 (x2082 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (= (x43 x298 x981 x2782 x88) (x1972 (x43 x298 x981 x2782 x88))))
(assert (= x2040 (x2200 (x1869 64 x2040 10))))
(assert (x1145 x2724))
(assert (x1145 x999))
(assert (x1145 x2112))
(assert (x1145 x1002))
(assert (= (and x2438 x678) x2385))
(assert (x1145 x33))
(assert (x1145 x274))
(assert (= (=> (and (= (<= x442 224) x2396) (= (x1317 128) x442)) (and (=> (and (= x756 (x1317 256)) (= (x1317 224) x1846) (= (x1317 256) x2285) (= (x1317 224) x1503) (= (x1317 160) x1784) (= x606 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) (= (x1317 192) x411) (= x1927 (x1317 224)) (= x2395 (x2647 x442 x1784 x1538 x1103 x756 x169)) (= x1538 (x1317 192)) (= (x1317 160) x371) (= (x1317 160) x266) (= (x1317 320) x247) (= (x43 x442 x1352 x702 x1927) x1955) (= (x1317 192) x311) (= (x1452 x442 x266 x876 x1503 x2602) x1048) (= x2602 (x1317 256)) (= (x1317 192) x702) (= (x1317 256) x1290) (= (x1317 160) x558) (= x2270 (x1317 288)) (= x897 (x282 0)) (= (x1317 320) x987) (= x169 (x1317 288)) (= x1534 (x1869 x442 x558 x411)) (= (x1317 224) x1103) (= (x1317 192) x2565) (= x2369 (x1317 352)) (= x2105 (x2023 (+ x1862 x1267))) (= (x1317 160) x995) (= x1189 (x1317 224)) (= (x1317 160) x1848) (= (x611 x442 x995 x2565 x1189 x1290 x2270 x987) x2474) (= (<= x1267 224) x16) (= x1352 (x1317 160)) (= (ite (= 0 x442) x897 (ite (>= 32 x442) x589 (ite (>= 64 x442) x1534 (ite (>= 96 x442) x1955 (ite (>= 128 x442) x1048 (ite (>= 160 x442) x2395 (ite (<= x442 192) x2474 (ite (<= x442 224) x606 x1901)))))))) x1489) (= x876 (x1317 192)) (= x1183 (x1317 288)) (= (x795 x442 x371) x589)) (and (=> (and (= (x2023 (+ x1862 128)) x1027) (= (x2384 x818) x2767) (= x38 (x2647 x1267 x265 x2499 x159 x133 x2214)) (= (x2384 x1862) x373) (= (x2023 (+ 64 x1862)) x1533) (= x347 (x2384 x1862)) (= (x2023 (+ 32 x1862)) x454) (= x1847 (x2384 x1758)) (= x264 (x2384 x203)) (= x1758 (x2023 (+ x1862 64))) (= x801 (x2023 (+ 64 x1862))) (= (x2384 x1862) x156) (= x368 (x2023 (+ x1862 96))) (= x1648 (x2023 (+ x1862 160))) (= x2054 (x2384 x1027)) (= x818 (x2023 (+ 96 x1862))) (= (x2023 (+ 96 x1862)) x203) (= x52 (x2384 x1479)) (= (x2384 x1249) x2499) (= x73 (ite (= 0 x1267) x989 (ite (>= 32 x1267) x884 (ite (<= x1267 64) x1700 (ite (>= 96 x1267) x1295 (ite (>= 128 x1267) x2265 (ite (>= 160 x1267) x38 (ite (<= x1267 192) x194 (ite (>= 224 x1267) x2231 x831))))))))) (= x1359 (x2023 (+ x1862 32))) (= x1399 (x2384 x2031)) (= x133 (x2384 x1081)) (= x1650 (x2384 x2230)) (= (x2384 x66) x2214) (= (x2023 (+ x1862 128)) x66) (= x15 (x2384 x99)) (= x1720 (x2384 x1533)) (= x2162 (x2023 (+ 32 x1862))) (= x943 (x2023 (+ x1862 64))) (= (x2384 x2162) x1532) (= (x2384 x1862) x1412) (= x159 (x2384 x943)) (= x2109 (x2384 x1862)) (= (x2384 x2554) x114) (= (x1869 x1267 x373 x1654) x1700) (= x884 (x795 x1267 x347)) (= x2607 (x2384 x1722)) (= x1081 (x2023 (+ x1862 96))) (= x1479 (x2023 (+ x1862 32))) (= x989 (x282 0)) (= x2231 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) (= x1295 (x43 x1267 x156 x1532 x114)) (= (x1452 x1267 x851 x15 x1847 x2767) x2265) (= x2207 (x2384 x454)) (= x2554 (x2023 (+ x1862 64))) (= x1722 (x2023 (+ x1862 160))) (= (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841) x194) (= x106 (x2384 x801)) (= x1249 (x2023 (+ x1862 32))) (= (x2384 x368) x225) (= x1489 x73) (= x851 (x2384 x1862)) (= (x2384 x1862) x265) (= x1841 (x2384 x1648)) (= (x2384 x1359) x1654) (= (x2023 (+ 128 x1862)) x2230) (= x2031 (x2023 (+ 192 x1862))) (= (x2023 (+ 32 x1862)) x99)) x688) x16)) x2396)) x848))
(assert (x2686 x1120))
(assert (x1145 x2755))
(assert (< 10000 (x1869 64 x675 1)))
(assert (= (x2158 (x1869 64 x675 1)) 64))
(assert (x2233 (+ 31 x1857)))
(assert (=> (>= 10000 x2571) (= 0 (x1972 x2571))))
(assert (x912 x1120 256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x2210 x1490 x1283)))
(assert (x1145 x468))
(assert (= (x1972 (x43 x72 x946 x1735 x714)) (x43 x72 x946 x1735 x714)))
(assert (= x275 (=> (= (+ x1134 292) x1215) x515)))
(assert (x746 x2719))
(assert (x1690 x1120))
(assert (x1145 x1323))
(assert (x1145 x9))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (x1145 x1505))
(assert (= (and x1285 x1692) x1565))
(assert (x1145 x532))
(assert (= (x2158 (x1869 64 x220 12)) 64))
(assert (= x803 (x2649 (x1452 x298 x636 x803 x468 x2058))))
(assert (=> (>= 10000 x417) (= (x1972 x417) 0)))
(assert (= (x1869 64 x579 11) (x1972 (x1869 64 x579 11))))
(assert (= (and x401 (not x82)) x2085))
(assert (x1145 x2617))
(assert (x1145 x1870))
(assert (=> (>= 10000 x1691) (= 0 (x1972 x1691))))
(assert (x1145 x616))
(assert (x1145 x170))
(assert (x1145 x1821))
(assert (x1145 x40))
(assert (x1145 x896))
(assert (x1145 x626))
(assert (x1145 x173))
(assert (x1145 x1298))
(assert (x1145 x27))
(assert (x1145 x2520))
(assert (x1145 x747))
(assert (x1145 x277))
(assert (not (x130 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (= (x1972 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)) (x611 x887 x2600 x1670 x655 x2056 x822 x1623)))
(assert (x1145 x1532))
(assert (= x59 (x2200 (x1869 64 x59 2))))
(assert (x1145 x1761))
(assert (x1145 x1428))
(assert (=> (<= x1158 10000) (= 0 (x1972 x1158))))
(assert (x1145 x106))
(assert (= (x43 x1376 x1086 x870 x1094) (x1972 (x43 x1376 x1086 x870 x1094))))
(assert (x1145 x1562))
(assert (x1145 x835))
(assert (x1145 x20))
(assert (= (and (not x84) x1641) x432))
(assert (=> (<= x341 10000) (= (x1972 x341) 0)))
(assert (x1145 x977))
(assert (= (x2200 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664)) x2132))
(assert (x1624 x1785))
(assert (x1997 32 (ite (not (= x1492 0)) 1 0)))
(assert (< 10000 (x43 x1376 x1086 x870 x1094)))
(assert (x1145 x1013))
(assert (x1145 x815))
(assert (=> (<= x617 10000) (= (x1972 x617) 0)))
(assert (=> (<= x1632 10000) (= (x1972 x1632) 0)))
(assert (= (x2158 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)) x2522))
(assert (x1145 x1936))
(assert (x1145 x1390))
(assert (= (x2649 (x1869 x887 x1069 x1343)) x1343))
(assert (x1145 x1708))
(assert (x1145 x1990))
(assert (=> (<= x981 10000) (= (x1972 x981) 0)))
(assert (x1145 x2762))
(assert (x1145 x885))
(assert (=> (<= x626 10000) (= 0 (x1972 x626))))
(assert (x1145 x1069))
(assert (=> (<= x1490 10000) (= (x1972 x1490) 0)))
(assert (x1145 x927))
(assert (< (x2647 x1376 x610 x1397 x46 x1321 x2136) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2158 (x1869 64 x836 7)) 64))
(assert (=> (>= 10000 x1156) (= (x1972 x1156) 0)))
(assert (=> (<= x2605 10000) (= (x1972 x2605) 0)))
(assert (x912 x770 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x442 x1352 x702 x1927)))
(assert (= x1669 (x2158 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (x1803 x857))
(assert (=> (<= x2442 10000) (= 0 (x1972 x2442))))
(assert (x1145 x2004))
(assert (= x2785 (x2649 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (x813 (+ 31 x1259) 32))
(assert (x1145 x218))
(assert (x1145 x2789))
(assert (x1145 x2074))
(assert (x1145 x1812))
(assert (x1145 x1472))
(assert (=> (<= x137 10000) (= (x1972 x137) 0)))
(assert (x1145 x2743))
(assert (x1145 x2693))
(assert (x1997 32 (ite (not (= 0 x1667)) 1 0)))
(assert (x1145 x2610))
(assert (= (x1869 64 x2040 10) (x1972 (x1869 64 x2040 10))))
(assert (x1145 x2775))
(assert (=> (<= x777 10000) (= (x1972 x777) 0)))
(assert (= (and x581 x2646) x1683))
(assert (x1145 x1903))
(assert (x2686 x2660))
(assert (x1145 x1420))
(assert (=> (>= 10000 x822) (= (x1972 x822) 0)))
(assert (x813 x2665 2))
(assert (x1145 x2076))
(assert (= x829 (x416 (x43 x1705 x1653 x2303 x829))))
(assert (x1145 x2565))
(assert (= (or x2101 x1959) x732))
(assert (=> (<= x936 10000) (= (x1972 x936) 0)))
(assert (x1145 x2156))
(assert (= (x2200 (x1869 64 x579 11)) x579))
(assert (x1145 x1090))
(assert (x1145 x1026))
(assert (< 10000 (x1869 64 x59 2)))
(assert (=> (>= 10000 x1753) (= 0 (x1972 x1753))))
(assert (x1145 x2306))
(assert (x1145 x739))
(assert (not (x130 (x1869 64 x541 7))))
(assert (x1145 x1543))
(assert (= (x416 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664)) x881))
(assert (= 10 (x2649 (x1869 64 x2622 10))))
(assert (= (x1328 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) x1964))
(assert (x916 x1606))
(assert (x1145 x1363))
(assert (= x193 (and (not x590) x1956)))
(assert (= (x2649 (x2647 x442 x1784 x1538 x1103 x756 x169)) x1538))
(assert (=> (>= 10000 x660) (= (x1972 x660) 0)))
(assert (x1145 x29))
(assert (= x1344 (=> (and (= x2534 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2702)) (= x1388 (x1230 (- x1073 x1346))) (= (x1351 x1602) x1097) (= (x2023 (+ x201 x2534)) x1073) (= x1053 (x2023 (+ x1073 32))) (= x2435 (> x1097 0)) (= (x2023 (+ x201 x673)) x1296) (= (x2023 (+ 32 x2392)) x1768) (= x2702 (x2023 (+ x673 31))) (= x1298 (x2023 (+ x1768 32)))) (and (=> (and x2435 (and (= (< 32 x1097) x409) (= (x1143 x2720) x2295))) (and (=> (and (and (= x1896 (x2023 (+ 32 x1053))) (= (x2023 (+ 32 x2720)) x2294) (= (< 64 x1097) x1800) (= x2558 (x1544 x2294))) x409) (and (=> (not x1800) x453) (=> (and (and (= (x2023 (+ x2720 64)) x2755) (= (x570 x2755) x2754) (= x198 (x2023 (+ x1053 64))) (= x590 (> x1097 96))) x1800) (and (=> x590 x2005) (=> (not x590) x453))))) (=> (not x409) x453))) (=> (not x2435) x453)))))
(assert (=> (<= x2133 10000) (= (x1972 x2133) 0)))
(assert (x1145 x1244))
(assert (> (x2647 x1705 x1626 x2685 x2203 x1158 x2106) 10000))
(assert (= (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (= x1018 (x2649 (x43 x2522 x842 x1018 x164))))
(assert (= (and x1077 x1263) x1822))
(assert (x2686 x2665))
(assert (x1145 x251))
(assert (x1145 x1067))
(assert (= (x2158 (x1869 64 x2622 10)) 64))
(assert (= x266 (x2200 (x1452 x442 x266 x876 x1503 x2602))))
(assert (x1145 x1557))
(assert (x1145 x545))
(assert (> (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230) 10000))
(assert (x1145 x1564))
(assert (x1145 x553))
(assert (x1145 x2170))
(assert (x1624 x1068))
(assert (= (x1972 (x1869 64 x2070 12)) (x1869 64 x2070 12)))
(assert (= (x1972 (x2647 x442 x1784 x1538 x1103 x756 x169)) (x2647 x442 x1784 x1538 x1103 x756 x169)))
(assert (x2686 x705))
(assert (x912 x1906 32))
(assert (not (x130 (x1869 64 x2589 (ite (= 0 x1705) x2300 (ite (>= 32 x1705) x436 (ite (<= x1705 64) x2057 (ite (<= x1705 96) x1008 (ite (<= x1705 128) x735 (ite (<= x1705 160) x1969 (ite (<= x1705 192) x2570 (ite (>= 224 x1705) x2055 x1252))))))))))))
(assert (= (x1972 (x795 32 x2107)) (x795 32 x2107)))
(assert (not (x130 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (x1145 x383))
(assert (x1145 x1150))
(assert (not (x130 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (=> (<= x1790 10000) (= (x1972 x1790) 0)))
(assert (x1145 x1128))
(assert (x1145 x941))
(assert (x1145 x2767))
(assert (> (x43 x887 x1738 x191 x392) 10000))
(assert (= (x1972 3812630263) 0))
(assert (x1145 x1715))
(assert (= (and x712 (not x2241)) x1349))
(assert (x1145 x1625))
(assert (not (x130 (x1452 x298 x636 x803 x468 x2058))))
(assert (= x1153 (x2200 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (x1145 x2622))
(assert (x1145 x283))
(assert (x1145 x702))
(assert (not (x130 (x611 x1376 x567 x980 x141 x1201 x2593 x576))))
(assert (x1145 x162))
(assert (not (x130 (x43 x298 x981 x2782 x88))))
(assert (x1997 32 x463))
(assert (< 10000 (x1452 x1669 x122 x882 x942 x2)))
(assert (= (x2082 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x1321))
(assert (=> (<= x254 10000) (= (x1972 x254) 0)))
(assert (not (x130 (x1452 x2210 x285 x1844 x455 x2346))))
(assert (x1145 x2535))
(assert (x1145 x1968))
(assert (x1145 x2493))
(assert (x1145 x643))
(assert (x1145 x762))
(assert (x1145 x1062))
(assert (> (x795 x1376 x105) 10000))
(assert (x1145 x1838))
(assert (x1145 x2180))
(assert (= (=> (and (= (not (< 32 x1492)) x710) (= x586 (x1270 x1064))) (and (=> (= 32 x1530) x2698) x710)) x1193))
(assert (> (x1869 64 x936 36) 10000))
(assert (x1145 x1065))
(assert (= (=> (and (= x1881 (not (< 32 x2760))) (= x2147 (x2142 x2518))) (and (=> (= 32 x2313) x370) x1881)) x1288))
(assert (= x389 (and (not x1443) x2451)))
(assert (x1145 x2234))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x2350 36)))
(assert (not (x130 (x1869 x442 x558 x411))))
(assert (= (x1972 (x1869 64 x54 0)) (x1869 64 x54 0)))
(assert (x1828 (ite (not (= 0 x1667)) 1 0)))
(assert (=> (>= 10000 x2056) (= 0 (x1972 x2056))))
(assert (x1145 x324))
(assert (x912 x1120 2))
(assert (not (x130 (x1452 x887 x1216 x152 x2281 x480))))
(assert (x1145 x719))
(assert (not (x130 (x1869 64 x2263 6))))
(assert (= (or x28 x1305) x919))
(assert (= (x1972 (x795 32 x2130)) (x795 32 x2130)))
(assert (= (x1972 x1362) (x1972 (+ x1362 1))))
(assert (x1145 x1912))
(assert (x1145 x2470))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x2263 6)))
(assert (= (x2649 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691)) x2537))
(assert (x1145 x2754))
(assert (x1145 x2370))
(assert (= (x416 (x2647 x298 x1300 x1476 x669 x2425 x890)) x669))
(assert (x1145 x951))
(assert (=> (<= x2106 10000) (= 0 (x1972 x2106))))
(assert (= (x2158 (x795 32 x2130)) 32))
(assert (< (x2647 x2522 x1837 x337 x666 x651 x1682) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2781))
(assert (x1145 x1892))
(assert (x1145 x1361))
(assert (= x2279 (x2649 (x2647 x1669 x341 x2279 x1009 x1904 x40))))
(assert (= (and x614 x619) x299))
(assert (< 10000 (x611 x1376 x567 x980 x141 x1201 x2593 x576)))
(assert (x1145 x2568))
(assert (x1145 x960))
(assert (= (x416 (x611 x1376 x567 x980 x141 x1201 x2593 x576)) x141))
(assert (x2233 2))
(assert (= x2197 (and x1007 (not x2672))))
(assert (=> (>= 10000 x40) (= (x1972 x40) 0)))
(assert (= (x1972 (x2647 x887 x2569 x57 x2127 x1235 x911)) (x2647 x887 x2569 x57 x2127 x1235 x911)))
(assert (x1145 x1216))
(assert (x856 x501))
(assert (x1145 x1846))
(assert (x1145 x2779))
(assert (x130 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x1145 x1844))
(assert (=> (>= 10000 x423) (= 0 (x1972 x423))))
(assert (= (and x279 x1139) x544))
(assert (= 11 (x2649 (x1869 64 x1639 11))))
(assert (= x263 (and (not x2276) x2734)))
(assert (x1145 x2086))
(assert (x1145 x67))
(assert (= (x43 x1705 x1653 x2303 x829) (x1972 (x43 x1705 x1653 x2303 x829))))
(assert (= x2335 (x2082 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (= x862 (x1328 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (x1145 x2237))
(assert (=> (>= 10000 x655) (= 0 (x1972 x655))))
(assert (> (x1869 64 x659 36) 10000))
(assert (= x54 (x2200 (x1869 64 x54 0))))
(assert (x1145 x517))
(assert (=> (<= x64 10000) (= (x1972 x64) 0)))
(assert (= (x1452 x2210 x285 x1844 x455 x2346) (x1972 (x1452 x2210 x285 x1844 x455 x2346))))
(assert (x1145 x2549))
(assert (= 64 (x2158 (x1869 64 x2325 36))))
(assert (< (x43 x887 x1738 x191 x392) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1832))
(assert (x1145 x110))
(assert (= (x1972 (x1869 64 x541 7)) (x1869 64 x541 7)))
(assert (x1145 x1108))
(assert (> (x1452 x2522 x2387 x503 x617 x2027) 10000))
(assert (x130 18446744073709551615))
(assert (= x1705 (x2158 (x795 x1705 x2732))))
(assert (=> (>= 10000 x2732) (= (x1972 x2732) 0)))
(assert (x1145 x522))
(assert (x1145 x1462))
(assert (= 64 (x2158 (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (>= 32 x1669) x1941 (ite (<= x1669 64) x1460 (ite (>= 96 x1669) x433 (ite (>= 128 x1669) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (<= x1669 224) x1680 x1891))))))))))))
(assert (x130 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x1145 x406))
(assert (x1828 x11))
(assert (x1145 x172))
(assert (x1145 x2668))
(assert (=> (>= 10000 x2581) (= 0 (x1972 x2581))))
(assert (= (or x238 x2657) x2101))
(assert (x746 x770))
(assert (=> (>= 10000 x106) (= 0 (x1972 x106))))
(assert (=> (>= 10000 x831) (= 0 (x1972 x831))))
(assert (= (x1328 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) x2042))
(assert (= x578 (and x2740 x2482)))
(assert (x1145 x1592))
(assert (x1145 x1627))
(assert (=> (<= x304 10000) (= 0 (x1972 x304))))
(assert (x912 x770 32))
(assert (= (x2649 (x1452 x72 x399 x1798 x1792 x2335)) x1798))
(assert (x2233 32))
(assert (x1145 x675))
(assert (x1145 x2093))
(assert (< (x1869 64 x936 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1595 (x2200 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (x1145 x636))
(assert (x1145 x2063))
(assert (x1145 x1192))
(assert (x1145 x1891))
(assert (= x300 (and x969 (not x2730))))
(assert (x1145 x2534))
(assert (x1145 x1787))
(assert (= (x416 (x1452 x1705 x2133 x1773 x1568 x1753)) x1568))
(assert (x1145 x431))
(assert (x1145 x1626))
(assert (= x1262 (not (and (= x489 (* 32 x11)) (= x2635 x642) (>= x1379 1) (= (+ x1637 32) x658) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x331) (= (+ 32 x1637 x1771) x2266) (= (+ x658 x176) x1696) (= 128 x2533) (= x1379 (x242 x1381)) (>= x172 196) (= (x1869 64 x417 10) x2601) (= (x1237 (+ x2670 31) 32) x11) (>= 18446744073709551615 x176) (= x1192 x2501) (= x2670 (x51 132)) (= 1722637450 x383) (= x2528 x1497) (not (> x632 x172)) (not (< x172 x14)) (= (x1237 (+ x176 31) 32) x1446) (= (* x1446 32) x1771) (= (+ 32 x1045) x218) (< x1637 x2266) (<= x1284 127) (= x41 false) x750 (= (+ x176 x218) x632) (<= x224 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 32 x224) (= x331 (x1230 (- x426 128))) (= (x51 x1045) x176) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x1333) (= x44 164) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x172) (= (x242 x675) x1356) (> x172 x821) (>= x1356 1) (>= x331 196) (= x750 (= (x2251 132) x2760)) (= x14 (+ x2670 164)) (>= 18446744073709551615 x2670) (= x1637 (+ 160 x489)) (= x417 (x60 x658)) (<= x1284 127) (= x172 x331) (= false x140) (= x2742 128) (= (x1998 x1637) x224) (= x2756 128) (= x675 x1835) (= x1045 (+ x642 4)) (= x821 (+ 31 x1045))))))
(assert (=> (>= 10000 x2214) (= (x1972 x2214) 0)))
(assert (x1145 x1643))
(assert (> (x43 x1669 x2559 x1338 x2181) 10000))
(assert (x1145 x1606))
(assert (= (and x296 x2449) x1488))
(assert (= (and x1788 x2394) x2225))
(assert (x1145 x2571))
(assert (x1145 x2791))
(assert (x1145 x1922))
(assert (= x2571 (x2200 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (= (and x2594 (not x1800)) x375))
(assert (x1145 x1249))
(assert (x1145 x1326))
(assert (x1145 x1772))
(assert (< (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2487 (x6 (x2647 x72 x602 x77 x956 x760 x2487))))
(assert (= (x416 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)) x1644))
(assert (x1145 x637))
(assert (= x411 (x2649 (x1869 x442 x558 x411))))
(assert (x1145 x464))
(assert (x1145 x2214))
(assert (= (x1972 1000000000) 0))
(assert (=> (<= x87 10000) (= 0 (x1972 x87))))
(assert (x1145 x21))
(assert (=> (>= 10000 x72) (= 0 (x1972 x72))))
(assert (= x1267 (x2158 (x1869 x1267 x373 x1654))))
(assert (x1624 x172))
(assert (x1145 x114))
(assert (x1828 x1505))
(assert (= x351 (and x363 x2041)))
(assert (=> (>= 10000 x2767) (= (x1972 x2767) 0)))
(assert (= x681 (x2649 (x611 x1669 x720 x681 x1632 x80 x1159 x2042))))
(assert (x1145 x1087))
(assert (x912 x1144 2))
(assert (= (x2200 (x43 x1705 x1653 x2303 x829)) x1653))
(assert (x1145 x54))
(assert (x1145 x1096))
(assert (x1145 x88))
(assert (=> (>= 10000 x836) (= (x1972 x836) 0)))
(assert (x1145 x2266))
(assert (= x1009 (x416 (x2647 x1669 x341 x2279 x1009 x1904 x40))))
(assert (x1997 32 x1446))
(assert (x1145 x491))
(assert (=> (<= x133 10000) (= 0 (x1972 x133))))
(assert (< 10000 (x1869 64 x1617 10)))
(assert (x1145 x1855))
(assert (x1145 x504))
(assert (= x1834 (x634 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (< 10000 (x1452 x1705 x2133 x1773 x1568 x1753)))
(assert (x1145 x785))
(assert (not (x130 (x2647 x442 x1784 x1538 x1103 x756 x169))))
(assert (x1145 x876))
(assert (x1145 x1449))
(assert (x2116 x1301))
(assert (x1145 x814))
(assert (x856 x2660))
(assert (x1145 x2240))
(assert (= x1866 (or x1430 x921)))
(assert (= x1493 (and x451 x186)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x2040 10)))
(assert (x1145 x1074))
(assert (x856 x231))
(assert (x1145 x26))
(assert (x1145 x253))
(assert (x1145 x1381))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x1376 x354 x626 x2677 x1042)))
(assert (x1145 x2717))
(assert (x1145 x354))
(assert (not (x130 (x1869 64 x54 0))))
(assert (= (x416 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) x374))
(assert (not (x130 (x2647 x1705 x1626 x2685 x2203 x1158 x2106))))
(assert (x1145 x2320))
(assert (x1145 x322))
(assert (x130 3672334990))
(assert (x1145 x2696))
(assert (=> (>= 10000 x1225) (= 0 (x1972 x1225))))
(assert (x1145 x1389))
(assert (= (x2649 (x1869 64 x417 10)) 10))
(assert (=> (<= x2537 10000) (= (x1972 x2537) 0)))
(assert (x1145 x1644))
(assert (x1145 x2054))
(assert (x1145 x1950))
(assert (= x645 (and x376 (not x864))))
(assert (= x2710 (x2200 (x1869 64 x2710 2))))
(assert (x1145 x317))
(assert (x1145 x2338))
(assert (x1145 x1833))
(assert (= (or (and x1531 (not x1902)) (and x1185 (not x2650)) (and x89 (not x808)) x2247 (and x2540 (not x528))) x2150))
(assert (x1145 x455))
(assert (= x442 (x2158 (x1869 x442 x558 x411))))
(assert (< (x1452 x1267 x851 x15 x1847 x2767) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2499))
(assert (x1145 x1073))
(assert (x1145 x52))
(assert (< (x611 x442 x995 x2565 x1189 x1290 x2270 x987) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1400))
(assert (x1145 x2))
(assert (x1145 x1418))
(assert (x1145 x974))
(assert (x1145 x1546))
(assert (x1145 x123))
(assert (=> (>= 10000 x876) (= (x1972 x876) 0)))
(assert (x1145 x1986))
(assert (x1145 x1253))
(assert (x1145 x1696))
(assert (=> (>= 10000 x2240) (= 0 (x1972 x2240))))
(assert (=> (<= x610 10000) (= 0 (x1972 x610))))
(assert (x1145 x1207))
(assert (= x758 (x416 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (x1145 x810))
(assert (x1145 x2047))
(assert (= (x2200 (x2647 x72 x602 x77 x956 x760 x2487)) x602))
(assert (= (=> (and (or (= 1 x197) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x197)) (= x1675 (ite (> x1222 0) x2470 (x1335 127 x2470))) (= x197 (x1230 (- x1222 (mod (ite (> 32 x1675) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x215 (+ x1117 32)) (= x642 (- x1117 132)) (= (= 0 x257) x1873) (= (x1335 1 x2531) x257) (= (x1237 x2531 2) x2470) (= (x1335 1 x2531) x1222)) (and (=> (and (and (= x2178 (* (ite (not (= 0 x1675)) 1 0) 32)) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2531) x431) (or (= x2178 32) (= x2178 0)) (= (+ x215 x2178) x426)) x1873) x1262) (=> (and (and (= (x795 32 104) x1764) (= x2438 (> x1675 0))) (not x1873)) (and (=> (and (= 0 x310) (not x2438)) x148) (=> x2438 x1647))))) x86))
(assert (= x1402 (or x131 x1494)))
(assert (x2116 x770))
(assert (=> (<= x2785 10000) (= 0 (x1972 x2785))))
(assert (x1145 x2159))
(assert (x1145 x78))
(assert (=> (>= 10000 x1503) (= 0 (x1972 x1503))))
(assert (= x230 (x634 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (= (x2200 (x1869 64 x2488 2)) x2488))
(assert (= (x2158 (x43 x1669 x2559 x1338 x2181)) x1669))
(assert (x1145 x594))
(assert (=> (>= 10000 x842) (= 0 (x1972 x842))))
(assert (x1145 x1190))
(assert (= x921 (and x1895 x150)))
(assert (=> (>= 10000 x1290) (= (x1972 x1290) 0)))
(assert (= x2569 (x2200 (x2647 x887 x2569 x57 x2127 x1235 x911))))
(assert (x1145 x2048))
(assert (x1624 x1469))
(assert (= (x2200 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) x1848))
(assert (=> (<= x1302 10000) (= (x1972 x1302) 0)))
(assert (x1145 x2583))
(assert (= (=> (= (not (> x284 128)) x934) (and x787 x934)) x1155))
(assert (x1145 x2424))
(assert (= (x2649 (x1452 x442 x266 x876 x1503 x2602)) x876))
(assert (= x1103 (x416 (x2647 x442 x1784 x1538 x1103 x756 x169))))
(assert (= (x2200 (x1869 64 x1639 11)) x1639))
(assert (x1145 x2095))
(assert (= (x2200 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x610))
(assert (=> (>= 10000 x2520) (= (x1972 x2520) 0)))
(assert (=> (<= x1761 10000) (= 0 (x1972 x1761))))
(assert (x130 1914215))
(assert (x912 x2702 32))
(assert (= (x2649 (x1869 64 x905 12)) 12))
(assert (= (x1452 x887 x1216 x152 x2281 x480) (x1972 (x1452 x887 x1216 x152 x2281 x480))))
(assert (x1145 x2665))
(assert (x1145 x2683))
(assert (x1145 x2785))
(assert (x1145 x417))
(assert (x912 x2156 32))
(assert (< (x795 x2210 x2093) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2032))
(assert (x1145 x2281))
(assert (x1145 x1575))
(assert (not (x130 (x43 x887 x1738 x191 x392))))
(assert (x1145 x652))
(assert (=> (>= 10000 x188) (= (x1972 x188) 0)))
(assert (x1828 (ite (not (= 0 x1796)) 1 0)))
(assert (= (x2082 (x1452 x2522 x2387 x503 x617 x2027)) x2027))
(assert (x2233 (+ 31 x1259)))
(assert (x1145 x1817))
(assert (=> (>= 10000 x399) (= 0 (x1972 x399))))
(assert (x746 x1218))
(assert (= (=> (and (= x740 (not (< 128 x182))) (= (x1719 x784) x2480) (= x784 (x2023 (+ x1936 96))) (= x1743 (x2023 (+ x2753 96)))) (and x1622 x740)) x2590))
(assert (x1145 x2512))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2647 x2210 x1203 x532 x2500 x759 x2765)))
(assert (= x1308 (and x1055 x1204)))
(assert (= x238 (and x2191 x1380)))
(assert (= (x1869 64 x836 7) (x1972 (x1869 64 x836 7))))
(assert (= x277 (x416 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (= (x1869 64 x675 2) (x1972 (x1869 64 x675 2))))
(assert (=> (>= 10000 x2593) (= (x1972 x2593) 0)))
(assert (= 36 (x2649 (x1869 64 x840 36))))
(assert (= x1511 (and x572 x183)))
(assert (= (and (not x819) x1394) x2421))
(assert (x1145 x841))
(assert (= x717 (and x1591 x1350)))
(assert (< 10000 (x1869 64 x2710 2)))
(assert (x1145 x1595))
(assert (= (x2158 (x2647 x2210 x1203 x532 x2500 x759 x2765)) x2210))
(assert (x813 x2140 256))
(assert (= 0 (x1972 100000)))
(assert (x1145 x2018))
(assert (not (x130 (x1869 64 x2040 10))))
(assert (x130 100000))
(assert (not (x130 (x1869 64 x59 6))))
(assert (x1145 x2213))
(assert (not (x130 (x1869 x1267 x373 x1654))))
(assert (x1145 x1618))
(assert (x1145 x2256))
(assert (x1145 x502))
(assert (=> (>= 10000 x1844) (= 0 (x1972 x1844))))
(assert (x1145 x2028))
(assert (x1145 x1370))
(assert (x1145 x2224))
(assert (not (x130 (x2647 x1267 x265 x2499 x159 x133 x2214))))
(assert (= (x2158 (x43 x2522 x842 x1018 x164)) x2522))
(assert (= 7 (x2649 (x1869 64 x836 7))))
(assert (x1145 x1991))
(assert (=> (>= 10000 x2058) (= 0 (x1972 x2058))))
(assert (= (or x2287 x2421) x49))
(assert (x1145 x2249))
(assert (= x265 (x2200 (x2647 x1267 x265 x2499 x159 x133 x2214))))
(assert (= (and x2544 x2380) x2415))
(assert (x1145 x1224))
(assert (x2116 x2470))
(assert (= (x1972 (x795 x1376 x105)) (x795 x1376 x105)))
(assert (< (x795 x2522 x2469) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x779 (x2200 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721))))
(assert (= 6 (x2649 (x1869 64 x1122 6))))
(assert (= x840 (x2200 (x1869 64 x840 36))))
(assert (x1145 x153))
(assert (x1145 x1184))
(assert (x2686 x2738))
(assert (< (x1869 64 x905 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2082 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x264))
(assert (x1145 x454))
(assert (x2686 x1144))
(assert (x1145 x2627))
(assert (x1145 x1988))
(assert (x1145 x1582))
(assert (= (and (not x2438) x678) x1748))
(assert (=> (<= x1325 10000) (= 0 (x1972 x1325))))
(assert (x1145 x2392))
(assert (< 10000 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)))
(assert (x912 x705 2))
(assert (x1145 x268))
(assert (x1145 x17))
(assert (< 10000 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)))
(assert (x1145 x126))
(assert (x1145 x2026))
(assert (x1145 x1978))
(assert (x1145 x1795))
(assert (x1145 x1958))
(assert (x1145 x112))
(assert (x1145 x262))
(assert (= 0 (x1972 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (x1145 x2448))
(assert (x1145 x2578))
(assert (x856 x1588))
(assert (x1145 x1123))
(assert (= (x6 (x2647 x298 x1300 x1476 x669 x2425 x890)) x890))
(assert (= x1156 (x2082 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (= x714 (x416 (x43 x72 x946 x1735 x714))))
(assert (= (and x1059 x2415) x261))
(assert (= x1948 (x2649 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (= (x1452 x298 x636 x803 x468 x2058) (x1972 (x1452 x298 x636 x803 x468 x2058))))
(assert (= (x2158 (x2647 x72 x602 x77 x956 x760 x2487)) x72))
(assert (x130 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= (x2200 (x1869 x1376 x188 x1325)) x188))
(assert (= x1380 (and x1114 (not x1049))))
(assert (= (x2649 (x2647 x72 x602 x77 x956 x760 x2487)) x77))
(assert (x2116 x2660))
(assert (x1145 x1479))
(assert (= (x1972 (x43 x2522 x842 x1018 x164)) (x43 x2522 x842 x1018 x164)))
(assert (= (or x2096 x1657 x1410) x2299))
(assert (x1145 x1716))
(assert (< (x43 x1705 x1653 x2303 x829) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1654 10000) (= 0 (x1972 x1654))))
(assert (x1145 x1896))
(assert (= (x1972 1722637450) 0))
(assert (=> (<= x1817 10000) (= (x1972 x1817) 0)))
(assert (x912 x2719 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x133))
(assert (> (x795 x1669 x1817) 10000))
(assert (x1145 x456))
(assert (x1145 x141))
(assert (x1145 x175))
(assert (x1145 x1734))
(assert (x1145 x827))
(assert (= x220 (x2200 (x1869 64 x220 12))))
(assert (x1828 1000000000))
(assert (=> (<= x320 10000) (= 0 (x1972 x320))))
(assert (x1145 x191))
(assert (= (x2200 (x1869 x1669 x268 x1716)) x268))
(assert (< 10000 (x1869 64 x2605 2)))
(assert (x813 (+ x1882 31) 32))
(assert (> (x795 x2210 x2093) 10000))
(assert (=> (<= x114 10000) (= (x1972 x114) 0)))
(assert (x1145 x2465))
(assert (x1145 x361))
(assert (x1145 x1898))
(assert (x1145 x231))
(assert (x2686 x1606))
(assert (= x2104 (and x321 x1032)))
(assert (= x533 (and x263 (not x2586))))
(assert (= (=> (and (or (= x1781 1) (= x1781 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x372 (+ x977 32)) (= x1588 (x1237 x1120 2)) (= (x1335 1 x1120) x2587) (= x2523 (ite (< 0 x2587) x1588 (x1335 127 x1588))) (= (x1335 1 x1120) x816) (= x296 (= x816 0)) (= (- x977 132) x604) (= x1781 (x1230 (- x2587 (mod (ite (< x2523 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (and (and (= x1263 (> x2523 0)) (= x421 (x795 32 104))) (not x296)) (and (=> (and (not x1263) (= x2284 0)) x2220) (=> x1263 x575))) (=> (and x296 (and (= x2502 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1120)) (or (= 0 x950) (= 32 x950)) (= (* (ite (not (= 0 x2523)) 1 0) 32) x950) (= x1953 (+ x372 x950)))) x1315))) x1232))
(assert (x130 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1145 x783))
(assert (x1145 x1372))
(assert (x1145 x408))
(assert (x1145 x76))
(assert (=> (<= x59 10000) (= 0 (x1972 x59))))
(assert (not (x130 (x1869 64 x25 12))))
(assert (x1145 x2614))
(assert (x1145 x1727))
(assert (x1145 x2788))
(assert (= true x1702))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x887 x1069 x1343)))
(assert (= x347 (x2200 (x795 x1267 x347))))
(assert (< (x795 x1705 x2732) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1701))
(assert (x1145 x2064))
(assert (x1145 x2378))
(assert (x1145 x539))
(assert (x1145 x1419))
(assert (= (x43 x1669 x2559 x1338 x2181) (x1972 (x43 x1669 x2559 x1338 x2181))))
(assert (= (x416 (x43 x1267 x156 x1532 x114)) x114))
(assert (= (x1328 (x611 x298 x2020 x1782 x277 x477 x129 x888)) x888))
(assert (=> (<= x1267 10000) (= 0 (x1972 x1267))))
(assert (= x72 (x2158 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721))))
(assert (x1145 x1704))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x1705 x2452 x762)))
(assert (x1145 x2027))
(assert (=> (>= 10000 x1343) (= (x1972 x1343) 0)))
(assert (= (x416 (x2647 x2522 x1837 x337 x666 x651 x1682)) x666))
(assert (= x337 (x2649 (x2647 x2522 x1837 x337 x666 x651 x1682))))
(assert (= (x1972 (x2647 x2522 x1837 x337 x666 x651 x1682)) (x2647 x2522 x1837 x337 x666 x651 x1682)))
(assert (x1145 x1178))
(assert (=> (<= x277 10000) (= 0 (x1972 x277))))
(assert (x1145 x68))
(assert (x1145 x471))
(assert (=> (>= 10000 x1626) (= 0 (x1972 x1626))))
(assert (= (x2200 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x1626))
(assert (x1145 x2669))
(assert (= (x1452 x442 x266 x876 x1503 x2602) (x1972 (x1452 x442 x266 x876 x1503 x2602))))
(assert (= (=> (and (= (x1230 (- x1669 32)) x298) (= x1669 (x1230 (- x2159 x276))) (= (x2023 (+ x1128 x276)) x12) (= x2159 (x2023 (+ 32 x12))) (= (x2023 (+ x1128 x276)) x288) (= (>= 224 x298) x1933)) (and (=> (and (= x789 (x1258 x1579)) (= (x1258 x276) x1300) (= x1392 (x795 x298 x525)) (= x2425 (x1258 x550)) (= x2123 (x2023 (+ x276 32))) (= x2176 (x611 x298 x2020 x1782 x277 x477 x129 x888)) (= (x2023 (+ x276 32)) x2322) (= (x37 x298 x254 x1484 x374 x1025 x789 x304 x97) x940) (= (x2023 (+ x276 64)) x2545) (= x539 (x2023 (+ x276 64))) (= (x2023 (+ x276 96)) x550) (= (x1869 x298 x315 x1247) x867) (= (x1258 x1477) x890) (= x1983 (x2023 (+ x276 160))) (= x211 (x2023 (+ 96 x276))) (= x1476 (x1258 x1419)) (= x639 (ite (= x298 0) x707 (ite (>= 32 x298) x1392 (ite (<= x298 64) x867 (ite (<= x298 96) x1442 (ite (>= 128 x298) x2556 (ite (>= 160 x298) x42 (ite (>= 192 x298) x2176 (ite (<= x298 224) x940 x2778))))))))) (= x377 (>= 224 x1669)) (= x1025 (x1258 x1783)) (= x983 (x2023 (+ 64 x276))) (= x468 (x1258 x1855)) (= (x1258 x276) x2020) (= x1442 (x43 x298 x981 x2782 x88)) (= x97 (x1258 x2048)) (= x707 (x282 0)) (= x2058 (x1258 x211)) (= (x2023 (+ x276 32)) x865) (= (x1258 x2545) x374) (= x888 (x1258 x1983)) (= (x2023 (+ 64 x276)) x1596) (= x254 (x1258 x276)) (= (x1258 x1629) x803) (= (x2023 (+ 160 x276)) x1026) (= x1783 (x2023 (+ x276 96))) (= x2364 (x2023 (+ x276 96))) (= x525 (x1258 x276)) (= (x1258 x2123) x2782) (= x129 (x1258 x2493)) (= (x1258 x865) x1247) (= (x2023 (+ 32 x276)) x1373) (= x1782 (x1258 x1373)) (= x1419 (x2023 (+ 32 x276))) (= x636 (x1258 x276)) (= (x1258 x1596) x277) (= x1484 (x1258 x2322)) (= (x1258 x539) x88) (= (x2023 (+ x276 32)) x1629) (= (x2647 x298 x1300 x1476 x669 x2425 x890) x42) (= x1477 (x2023 (+ x276 128))) (= x315 (x1258 x276)) (= x669 (x1258 x983)) (= x2048 (x2023 (+ 192 x276))) (= x477 (x1258 x2364)) (= (x2023 (+ x276 128)) x2493) (= x1579 (x2023 (+ 128 x276))) (= x981 (x1258 x276)) (= x304 (x1258 x1026)) (= (x2023 (+ 64 x276)) x1855) (= x2556 (x1452 x298 x636 x803 x468 x2058))) (and (=> (and (= (x1258 x2173) x1009) (= (x2023 (+ x276 96)) x625) (= (x1258 x276) x2559) (= (x1258 x1311) x1156) (= x2320 (x2023 (+ 96 x276))) (= (x2023 (+ x276 96)) x1311) (= x2173 (x2023 (+ x276 64))) (= x1950 (x2023 (+ 128 x276))) (= x1338 (x1258 x17)) (= x2 (x1258 x345)) (= (x1258 x276) x976) (= (x1869 x1669 x268 x1716) x1460) (= x1716 (x1258 x810)) (= (x1258 x2638) x1632) (= (x1869 64 x1088 (ite (= 0 x1669) x1304 (ite (<= x1669 32) x1941 (ite (>= 64 x1669) x1460 (ite (>= 96 x1669) x433 (ite (>= 128 x1669) x2486 (ite (>= 160 x1669) x1377 (ite (<= x1669 192) x1830 (ite (>= 224 x1669) x1680 x1891))))))))) x1375) (= x2604 (x2023 (+ 32 x276))) (= x2779 (x2023 (+ x276 160))) (= (x1258 x1423) x2181) (= x1948 (x1258 x2604)) (= (x1258 x2773) x681) (= x1817 (x1258 x276)) (= (x1258 x566) x40) (= (x1258 x859) x253) (= x1377 (x2647 x1669 x341 x2279 x1009 x1904 x40)) (= x433 (x43 x1669 x2559 x1338 x2181)) (= (x2023 (+ 32 x276)) x641) (= x2042 (x1258 x974)) (= (x1258 x2763) x423) (= x974 (x2023 (+ x276 160))) (= x1159 (x1258 x1950)) (= x17 (x2023 (+ x276 32))) (= x859 (x2023 (+ x276 128))) (= (x2023 (+ x276 64)) x2638) (= (x2023 (+ 32 x809)) x1666) (= x1304 (x282 0)) (= (x1258 x2171) x758) (= x2757 (x2023 (+ 64 x276))) (= (x1258 x276) x720) (= (x1258 x625) x1904) (= (x2023 (+ 32 x276)) x402) (= x1941 (x795 x1669 x1817)) (= (x2023 (+ 192 x276)) x2763) (= (< 0 x361) x450) (= (x2023 (+ x276 32)) x2773) (= x341 (x1258 x276)) (= (x2023 (+ 64 x276)) x1423) (= x2171 (x2023 (+ 64 x276))) (= x809 (x2023 (+ x276 160))) (= x80 (x1258 x2320)) (= (x2023 (+ 32 x276)) x1727) (= (x1258 x276) x268) (= (x2023 (+ 96 x276)) x345) (= x361 (x1911 x1862)) (= (x1258 x2779) x2017) (= x1830 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) (= (x2023 (+ 128 x276)) x566) (= x2279 (x1258 x1727)) (= x1680 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)) (= (x1258 x276) x122) (= (x1258 x2757) x942) (= (x1258 x641) x882) (= x810 (x2023 (+ x276 32))) (= (x1452 x1669 x122 x882 x942 x2) x2486)) (and (=> (and x450 (and (= (x1724 x1936) x764) (= x343 (< 32 x361)))) (and (=> (and (and (= x2154 (> x361 64)) (= (x2023 (+ 32 x1666)) x1971) (= x1014 (x2023 (+ 32 x1936))) (= (x69 x1014) x1860)) x343) (and (=> (not x2154) x752) (=> (and (and (= (< 96 x361) x186) (= x519 (x2023 (+ x1936 64))) (= x2791 (x2023 (+ x1666 64))) (= x185 (x357 x519))) x2154) (and (=> (not x186) x752) (=> x186 x2746))))) (=> (not x343) x752))) (=> (not x450) x752))) x377)) x1933)) x2774))
(assert (x1145 x1735))
(assert (x2686 128))
(assert (x1145 x323))
(assert (= (x1972 x1908) (x1972 (+ 1 x1908))))
(assert (< (x1869 64 x2710 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x220) (= 0 (x1972 x220))))
(assert (=> (<= x1615 10000) (= 0 (x1972 x1615))))
(assert (x1145 x961))
(assert (x1145 x1022))
(assert (= x814 (x2082 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721))))
(assert (x1145 x422))
(assert (= (x2200 (x1869 64 x2622 10)) x2622))
(assert (x1145 x1654))
(assert (= (and x1172 (not x359)) x150))
(assert (x1145 x1333))
(assert (x1145 x479))
(assert (=> (>= 10000 x129) (= (x1972 x129) 0)))
(assert (x1145 x1781))
(assert (= (=> (and (= false x679) (= x1893 (x1869 64 x2325 36)) (>= 254 x2325) (= (x834 x1893) x1226) (= x2275 (+ 1 x2325)) (= (+ x2325 1) x2157) (= false x2038)) x165) x2624))
(assert (x1145 x442))
(assert (= (x1869 64 x1617 10) (x1972 (x1869 64 x1617 10))))
(assert (x1145 x66))
(assert (x1145 x1429))
(assert (= (=> (and (= (<= x72 224) x1368) (= x72 (x1512 128))) (and (=> (and (= (x1512 192) x1187) (= (x1512 224) x714) (= (x1512 288) x2487) (= x779 (x1512 160)) (= (x1512 320) x1964) (= x706 (x1512 160)) (= x1004 (ite (= x72 0) x2700 (ite (<= x72 32) x1056 (ite (<= x72 64) x180 (ite (<= x72 96) x2703 (ite (>= 128 x72) x2388 (ite (<= x72 160) x1036 (ite (>= 192 x72) x233 (ite (<= x72 224) x192 x2018))))))))) (= x1462 (x1512 192)) (= x180 (x1869 x72 x1903 x291)) (= (x1512 224) x1420) (= x48 (x1512 288)) (= x64 (x1512 160)) (= (x1512 160) x946) (= x760 (x1512 256)) (= (x1452 x72 x399 x1798 x1792 x2335) x2388) (= (x43 x72 x946 x1735 x714) x2703) (= x2335 (x1512 256)) (= x291 (x1512 192)) (= x2431 (x1512 320)) (= (<= x2210 224) x708) (= (x1512 288) x1761) (= x2721 (x1512 352)) (= x1056 (x795 x72 x64)) (= x1798 (x1512 192)) (= x1735 (x1512 192)) (= x777 (x1512 224)) (= (x1512 160) x1903) (= (x611 x72 x706 x1462 x1420 x2025 x48 x2431) x233) (= (x2647 x72 x602 x77 x956 x760 x2487) x1036) (= x399 (x1512 160)) (= (x1512 224) x956) (= (x2023 (+ x2210 x153)) x1807) (= (x1512 160) x602) (= (x1512 256) x814) (= (x282 0) x2700) (= (x1512 256) x2025) (= x192 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) (= (x1512 224) x1792) (= x77 (x1512 192))) (and x708 (=> (and (= x1992 (x2023 (+ 64 x153))) (= x2626 (x2519 x1992)) (= (x2519 x153) x2093) (= (x2519 x2424) x2346) (= (x2519 x2278) x1691) (= (x2023 (+ x153 32)) x1347) (= x179 (x43 x2210 x485 x2386 x87)) (= x726 (x2519 x235)) (= (x282 0) x1297) (= x904 x1004) (= (x2519 x153) x485) (= x2278 (x2023 (+ x153 160))) (= (x2023 (+ x153 96)) x2170) (= x835 (x2519 x316)) (= x2560 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)) (= x952 (x2023 (+ x153 64))) (= x1938 (x2023 (+ x153 96))) (= (x2023 (+ 128 x153)) x2745) (= (x2023 (+ 32 x153)) x1537) (= (x2023 (+ x153 96)) x2424) (= x87 (x2519 x952)) (= x2291 (x2023 (+ 64 x153))) (= x1153 (x2519 x153)) (= (x1869 x2210 x1490 x1283) x929) (= (x2519 x1832) x1844) (= (x2023 (+ x153 160)) x964) (= x316 (x2023 (+ x153 32))) (= (x2519 x471) x532) (= (x2023 (+ x153 64)) x476) (= (x795 x2210 x2093) x2440) (= x1542 (x2519 x2170)) (= x1022 (x2519 x964)) (= x600 (x2023 (+ x153 32))) (= (x2519 x1347) x2537) (= x660 (x2519 x283)) (= x616 (x2519 x2163)) (= (x2519 x1537) x1283) (= (x2519 x2775) x460) (= (x2023 (+ 32 x153)) x1832) (= (x1452 x2210 x285 x1844 x455 x2346) x971) (= x1203 (x2519 x153)) (= x2386 (x2519 x600)) (= (x2647 x2210 x1203 x532 x2500 x759 x2765) x1039) (= x2500 (x2519 x325)) (= x235 (x2023 (+ 96 x153))) (= (x2519 x2291) x1644) (= (x2023 (+ x153 128)) x283) (= x285 (x2519 x153)) (= x2775 (x2023 (+ x153 128))) (= x1490 (x2519 x153)) (= x325 (x2023 (+ x153 64))) (= (ite (= 0 x2210) x1297 (ite (<= x2210 32) x2440 (ite (>= 64 x2210) x929 (ite (<= x2210 96) x179 (ite (>= 128 x2210) x971 (ite (>= 160 x2210) x1039 (ite (>= 192 x2210) x2749 (ite (<= x2210 224) x2560 x1076)))))))) x904) (= (x2519 x1938) x759) (= x2163 (x2023 (+ x153 192))) (= (x2519 x153) x1595) (= (x2023 (+ 32 x153)) x471) (= (x611 x2210 x1153 x2537 x2626 x726 x460 x1691) x2749) (= x2765 (x2519 x2745)) (= (x2519 x476) x455)) x2620))) x1368)) x640))
(assert (not (x130 (x1869 64 x836 3))))
(assert (x2116 x1588))
(assert (x1828 32))
(assert (= x1491 (=> (and (= (x621 x1958) x1656) (= x2494 (not (> x2506 128))) (= (x2023 (+ x1725 96)) x1958) (= x493 (x2023 (+ 96 x322)))) (and x2494 x531))))
(assert (=> (>= 10000 x987) (= (x1972 x987) 0)))
(assert (x1145 x1857))
(assert (x1145 x659))
(assert (x1145 x1163))
(assert (= x460 (x6 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (x1145 x166))
(assert (x1145 x1757))
(assert (x1145 x1120))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)))
(assert (< 10000 (x1452 x887 x1216 x152 x2281 x480)))
(assert (x1624 x1961))
(assert (= x2399 (or x119 x1488)))
(assert (=> (>= 10000 x1338) (= (x1972 x1338) 0)))
(assert (=> (>= 10000 x1542) (= 0 (x1972 x1542))))
(assert (x1145 x290))
(assert (= x1817 (x2200 (x795 x1669 x1817))))
(assert (x2686 x1431))
(assert (not (x130 (x1869 64 x59 2))))
(assert (x1145 x201))
(assert (= (x2158 (x611 x1376 x567 x980 x141 x1201 x2593 x576)) x1376))
(assert (= x617 (x416 (x1452 x2522 x2387 x503 x617 x2027))))
(assert (x1145 x360))
(assert (not (x130 (x1869 64 x675 1))))
(assert (x1145 x2296))
(assert (= x445 (=> (and (= x2476 false) (= (+ 1 x54) x449) (not (> x1071 x2671)) (= (+ 1 x54) x2788) (= x1908 (x1869 64 x54 0)) (= x1071 (x484 x1415)) (= x2337 (+ 1 x1908)) (= false x1947) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x54) (= x1415 (x1869 64 x675 2)) (= x2671 (x2023 (+ x1071 x775)))) x165)))
(assert (< 10000 (x795 32 104)))
(assert (x1624 x1182))
(assert (x1145 x207))
(assert (x856 x1301))
(assert (= (x2082 (x2647 x72 x602 x77 x956 x760 x2487)) x760))
(assert (= x2044 (x2082 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (> (x1869 64 x836 7) 10000))
(assert (x130 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (> (x1869 x442 x558 x411) 10000))
(assert (x1145 x1256))
(assert (x2116 x594))
(assert (x1997 32 (ite (not (= 0 x2218)) 1 0)))
(assert (x1145 x1161))
(assert (= (x2649 (x43 x442 x1352 x702 x1927)) x702))
(assert (x1145 x1343))
(assert (= (x611 x72 x706 x1462 x1420 x2025 x48 x2431) (x1972 (x611 x72 x706 x1462 x1420 x2025 x48 x2431))))
(assert (x1145 x1319))
(assert (< (x1869 64 x530 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1869 64 x2350 36) 10000))
(assert (=> (>= 10000 x669) (= (x1972 x669) 0)))
(assert (not (x130 (x43 x1267 x156 x1532 x114))))
(assert (x1145 x1340))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x72 x1903 x291)))
(assert (x1145 x2537))
(assert (< (x1869 64 x220 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x795 x1267 x347)))
(assert (x1145 x2109))
(assert (= (x1972 x1289) (x1972 (+ x1289 1))))
(assert (=> (>= 10000 x1189) (= 0 (x1972 x1189))))
(assert (x1145 x1813))
(assert (= x1927 (x416 (x43 x442 x1352 x702 x1927))))
(assert (x1145 x1836))
(assert (= x969 (and x84 x1641)))
(assert (x1145 x2359))
(assert (x1145 x1009))
(assert (x1145 x2478))
(assert (=> (>= 10000 x1532) (= 0 (x1972 x1532))))
(assert (< (x1869 64 x2070 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x856 x2470))
(assert (= x240 (and x2135 x668)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x1267 x347)))
(assert (x1145 x1212))
(assert (= (x1972 (x1869 x1669 x268 x1716)) (x1869 x1669 x268 x1716)))
(assert (x1145 x163))
(assert (x1828 x166))
(assert (= (x1972 (x1869 x442 x558 x411)) (x1869 x442 x558 x411)))
(assert (= x2201 (=> (and (or (not x259) x259) (= (= 0 x1546) x259)) x2092)))
(assert (=> (>= 10000 x2127) (= 0 (x1972 x2127))))
(assert (x1145 x730))
(assert (x1145 x793))
(assert (= 0 (x1972 57896044618658097711785492504343953926634992332820282019728792003956)))
(assert (= x191 (x2649 (x43 x887 x1738 x191 x392))))
(assert (= (x2158 (x43 x1267 x156 x1532 x114)) x1267))
(assert (x1145 x1576))
(assert (x2116 x2719))
(assert (= (x2200 (x1869 64 x2605 2)) x2605))
(assert (< 10000 (x1869 64 x220 12)))
(assert (x1145 x2319))
(assert (= (x1972 (x1869 x1705 x2452 x762)) (x1869 x1705 x2452 x762)))
(assert (x1145 x862))
(assert (x1145 x1070))
(assert (x1145 x1594))
(assert (= x2499 (x2649 (x2647 x1267 x265 x2499 x159 x133 x2214))))
(assert (= (x416 (x43 x887 x1738 x191 x392)) x392))
(assert (x1145 x1631))
(assert (= x453 (=> (and (= (x2023 (+ x1053 x1097)) x2553) (= x284 (x5 x1625)) (= x792 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1218)) (= x1672 (x2023 (+ x1053 x792))) (= (> x284 0) x1902) (= (x2023 (+ x1298 32)) x481) (= x1218 (x2023 (+ x1097 31))) (= x805 (x1230 (- x1672 x1346)))) (and (=> (and x1902 (= x2650 (< 32 x284))) (and (=> (and x2650 (= x808 (> x284 64))) (and (=> (and (= (< 96 x284) x528) x808) (and (=> (not x528) x787) (=> x528 x1155))) (=> (not x808) x787))) (=> (not x2650) x787))) (=> (not x1902) x787)))))
(assert (x1145 x25))
(assert (=> (>= 10000 x311) (= (x1972 x311) 0)))
(assert (= (x416 (x1452 x1267 x851 x15 x1847 x2767)) x1847))
(assert (x1145 x1938))
(assert (x1145 x2356))
(assert (not (x130 (x2647 x1669 x341 x2279 x1009 x1904 x40))))
(assert (not (x130 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841))))
(assert (x1145 x1086))
(assert (x1145 x1290))
(assert (x1145 x1301))
(assert (< 10000 (x2647 x1376 x610 x1397 x46 x1321 x2136)))
(assert (=> (<= x576 10000) (= 0 (x1972 x576))))
(assert (x1145 x582))
(assert (=> (<= x1773 10000) (= (x1972 x1773) 0)))
(assert (x1145 x796))
(assert (< 10000 (x2647 x2210 x1203 x532 x2500 x759 x2765)))
(assert (< (x2647 x442 x1784 x1538 x1103 x756 x169) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x912 x1218 32))
(assert (= x128 (and x1591 (not x1350))))
(assert (= (x2200 (x795 x887 x2437)) x2437))
(assert (x1145 x586))
(assert (x1145 x2619))
(assert (< 10000 (x1869 x1376 x188 x1325)))
(assert (= x2281 (x416 (x1452 x887 x1216 x152 x2281 x480))))
(assert (x1145 x1921))
(assert (= (x1972 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230)) (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230)))
(assert (x1145 x2098))
(assert (= x2245 (and x1608 x875)))
(assert (x1145 x964))
(assert (x130 2001815235))
(assert (x1624 x1067))
(assert (x1145 x2033))
(assert (= (x1972 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)) (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)))
(assert (x1145 x2436))
(assert (x2116 x857))
(assert (= (x2200 (x1452 x2210 x285 x1844 x455 x2346)) x285))
(assert (x1145 x2756))
(assert (x1145 x2780))
(assert (x1145 x1478))
(assert (> (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369) 10000))
(assert (= (or x1960 x949) x401))
(assert (x1145 x1011))
(assert (= x2309 (or x919 x142)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x282 0)))
(assert (x1145 x2604))
(assert (x1624 x1646))
(assert (= x515 (=> (and (= (x1335 1 x1120) x434) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2378) (= x2378 1)) (= x2310 (+ 32 x1215)) (= x866 (x1335 1 x1120)) (= (ite (< 0 x866) x1431 (x1335 127 x1431)) x1492) (= (= x434 0) x1049) (= (x1230 (- x866 (mod (ite (> 32 x1492) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2378) (= (- x1215 132) x1804) (= (x1237 x1120 2) x1431)) (and (=> (and (and (= x1428 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1120)) (or (= x2642 0) (= 32 x2642)) (= (+ x2310 x2642) x464) (= x2642 (* 32 (ite (not (= x1492 0)) 1 0)))) x1049) x973) (=> (and (not x1049) (and (= (x795 32 104) x1064) (= x2191 (> x1492 0)))) (and (=> (and (not x2191) (= x1530 0)) x2698) (=> x2191 x1193)))))))
(assert (x912 x2531 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1617))
(assert (= (=> (and (= (+ x107 x2213) x1440) (<= x1440 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x107 x2213) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x387 x1861) x107) (= (x1230 (- x439 x861)) x932) (= (= x1130 x1861) x847) (= (x535 x675) x1571) (= x932 36) (= x2398 (x535 x1861)) (<= 0 x1440) (<= x2213 x1571) (= x439 (x2023 (+ 32 x397))) (= x1536 (x242 x1861)) (= x397 (x2023 (+ 4 x861))) (= x1812 x1440) (>= x1536 1) (= x1556 (- x941 x2213)) (= x941 (x535 x675)) (< (+ x2213 x2398) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (=> (and (not x847) (and (= (+ x659 1) x701) (= x2112 1341992515) (= (x242 x1835) x1681) (= x1835 x1861) (= x662 x675) (= x2166 (= x1487 0)) (= 36 x526) (<= x931 127) (= (+ 1 x659) x2605) (= x687 false) (= x783 x675) (>= 127 x931) (= x83 false) (= (x1336 x1756) x1487) (<= x1861 1461501637330902918203684832716283019655932542975) (<= 1 x1681) (<= x659 254) (= (x1869 64 x659 36) x1756) (<= 1 x1861) (= x229 36180046632115354981904271164172418022085455641023445553456023893925156618240))) (and (=> (and (= x2128 (= 1 x1487)) (not x2166)) (and (=> (and (and (= x2167 (x1335 1 x1144)) (= x1188 (x1869 64 x2605 6)) (= x1608 (= x1916 0)) (= (x1237 x1144 2) x2660) (= x686 (+ 1 x220)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1886) (= x1886 1)) (= x1168 (+ 1 x220)) (= x220 (+ x2605 1)) (= (x1335 1 x1144) x1916) (>= 65535 x1989) (= (x1926 x1188) x1989) (= x1886 (x1230 (- x2167 (mod (ite (> 32 x1796) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= x2605 1) (>= 18446744073709551615 x1770) (= x2543 (= 2 x1487)) (= x1770 (x31 x1501)) (= x1501 (x1869 64 x220 12)) (= x697 (+ x2605 1)) x2543 (<= x2605 253) (= x1796 (ite (< 0 x2167) x2660 (x1335 127 x2660)))) (not x2128)) (and (=> (and (and (= x1149 (x795 32 103)) (= x1061 (< 0 x1796))) (not x1608)) (and (=> x1061 x1111) (=> (and (= x1134 0) (not x1061)) x275))) (=> (and (and (= x722 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1144)) (= (* (ite (not (= x1796 0)) 1 0) 32) x270) (= (+ x270 292) x1215) (or (= 0 x270) (= 32 x270))) x1608) x515))) (=> (and x2128 (and (= (x31 x1023) x2589) (= x1196 (x1869 64 x2605 6)) (= (= x239 0) x359) (= (x1230 (- x1066 (mod (ite (> 32 x2610) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2584) (= (x1237 x1144 2) x2738) (or (= x2584 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2584 1)) (= (+ x25 1) x1451) (= (x1926 x1196) x836) (>= 253 x2605) (= (+ 1 x2605) x25) (>= x2605 1) (= x527 (+ 1 x2605)) (= x239 (x1335 1 x1144)) (= (+ 1 x25) x1348) (>= 18446744073709551615 x2589) (= (x1335 1 x1144) x1066) (= (x1869 64 x25 12) x1023) (= (ite (> x1066 0) x2738 (x1335 127 x2738)) x2610) (<= x836 65535))) (and (=> (and x359 (and (= (* 32 (ite (not (= 0 x2610)) 1 0)) x1085) (= (+ 292 x1085) x977) (or (= x1085 32) (= 0 x1085)) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1144) x804))) x1232) (=> (and (not x359) (and (= x1895 (> x2610 0)) (= x293 (x795 32 103)))) (and (=> x1895 x1395) (=> (and (= 0 x918) (not x1895)) x1965))))))) (=> (and x2166 (and (= (x242 x662) x2418) (= x1976 (x2471 x403)) (= x1867 x1303) (= 3812630263 x2629) (<= x2605 251) (= (+ x2605 1) x1122) (= x112 x1921) (= x2326 x556) (<= 1 x1732) (= (+ 1 x1122) x1046) (= x1652 (+ x840 1)) (= (x242 x675) x1732) (= x1057 102788308552044517260959567728648622381392053106279845986800620074717893623808) (= x2298 (x1926 x1374)) (= (x1869 64 x2488 2) x403) (= x2448 x1976) (<= 1 x2418) (<= 1 x2605) (= x1120 x1224) (= 132 x1785) (= (x2471 x1360) x1449) (= x58 (+ 1 x840)) (= x885 x1105) (= x1449 x1548) (<= x1332 127) (>= 127 x1332) (= x880 128) (= x1213 x1835) (= x1517 (x1926 x1374)) (<= x1976 1461501637330902918203684832716283019655932542975) (<= x885 1461501637330902918203684832716283019655932542975) (= false x2000) (= x605 x1383) (= x1213 x1092) (= x1631 (+ 1 x2605)) (= x1303 (x1336 x1037)) (= x1275 false) (= x1930 x1144) (= (x2471 x1360) x885) (= x226 (+ 1 x840)) (= (x1336 x1037) x2458) (= x2772 (x2471 x403)) (= x730 x2772) (= x168 x2458) (= (x1869 64 x2605 2) x1360) (>= 1461501637330902918203684832716283019655932542975 x1213) (= x2298 x2134) (= (x1869 64 x840 36) x1037) (= x827 (+ x2488 1)) (= x2488 (+ 1 x1122)) (= x662 x1090) (= x582 x724) (= (+ x2488 1) x840) (<= x1517 65535) (>= x1213 1) (<= 100000 x1303) (= x2614 x1517) (= (x1869 64 x1122 6) x1374))) x342))) (=> (and (and (= x1381 x662) (= x326 x582) (= x204 x2339) (>= 127 x1991) (= x2349 (x1869 64 x675 1)) (= x1821 x2781) (not (> x2117 x2097)) (= x245 1341992515) (= x857 x1144) (= x2328 x1213) (= x1120 x2531) (= x2117 (x457 x2349)) (= (x242 x1130) x684) (= x1584 x2194) (= x2212 x556) (= x2097 (x2023 (+ x2213 x2117))) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x1578) (= x2350 x659) (= x1306 x1383) (>= 127 x1991) (= x2743 x675) (= x1231 x1861) (= x1408 36) (= x1539 false) (= x1496 false) (= x54 x112) (>= x684 1)) x847) x199))) x2653))
(assert (x1145 x1157))
(assert (x1145 x1383))
(assert (= (x2649 (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (<= x1669 32) x1941 (ite (>= 64 x1669) x1460 (ite (>= 96 x1669) x433 (ite (<= x1669 128) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891)))))))))) (ite (= 0 x1669) x1304 (ite (>= 32 x1669) x1941 (ite (<= x1669 64) x1460 (ite (>= 96 x1669) x433 (ite (>= 128 x1669) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891))))))))))
(assert (= (x1972 (x1869 x2210 x1490 x1283)) (x1869 x2210 x1490 x1283)))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x541 3)))
(assert (x1145 x356))
(assert (< (x1452 x1669 x122 x882 x942 x2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x116 x2150) x1305))
(assert (= (or x858 x1382 x1200 x1329 x1006) x763))
(assert (not (x130 (x1452 x442 x266 x876 x1503 x2602))))
(assert (x1145 x129))
(assert (= x1669 (x2158 (x795 x1669 x1817))))
(assert (x1145 x2498))
(assert (x1145 x2501))
(assert (=> (>= 10000 x1655) (= 0 (x1972 x1655))))
(assert (= x442 (x2158 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (=> (<= x2782 10000) (= 0 (x1972 x2782))))
(assert (= (x2200 (x1869 64 x530 10)) x530))
(assert (x2233 x1120))
(assert (= (x2158 (x795 32 x2107)) 32))
(assert (x912 x2660 128))
(assert (x1145 x1747))
(assert (= (x795 x1267 x347) (x1972 (x795 x1267 x347))))
(assert (x1145 x617))
(assert (=> (>= 10000 x477) (= 0 (x1972 x477))))
(assert (x1145 x169))
(assert (x1145 x1691))
(assert (x1145 x923))
(assert (=> (>= 10000 x354) (= 0 (x1972 x354))))
(assert (= x576 (x1328 (x611 x1376 x567 x980 x141 x1201 x2593 x576))))
(assert (x1145 x1482))
(assert (=> (<= x46 10000) (= 0 (x1972 x46))))
(assert (= (x2200 (x1869 64 x541 7)) x541))
(assert (=> (<= x411 10000) (= (x1972 x411) 0)))
(assert (x1145 x311))
(assert (=> (<= x803 10000) (= 0 (x1972 x803))))
(assert (x1145 x1247))
(assert (x130 1461501637330902918203684832716283019655932542975))
(assert (x1145 x2456))
(assert (=> (>= 10000 x460) (= 0 (x1972 x460))))
(assert (x1145 x556))
(assert (x1145 x2248))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)))
(assert (= (x2082 (x1452 x2210 x285 x1844 x455 x2346)) x2346))
(assert (x1145 x2784))
(assert (= 64 (x2158 (x1869 64 x541 7))))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= (x1328 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)) x1623))
(assert (= x986 (or (and (not x1513) x1402) x1640)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x1267 x156 x1532 x114)))
(assert (x1145 x1773))
(assert (= x1042 (x2082 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (x1145 x550))
(assert (x1145 x705))
(assert (=> (>= 10000 x525) (= 0 (x1972 x525))))
(assert (x1145 x1598))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x1267 x373 x1654)))
(assert (x1145 x818))
(assert (x2116 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1145 x2284))
(assert (x1145 x1581))
(assert (x1145 x1186))
(assert (x1145 x1408))
(assert (x2686 2))
(assert (not (x130 (x1452 x1705 x2133 x1773 x1568 x1753))))
(assert (= x2659 (=> (and (= x879 (<= x2522 224)) (= x2522 (x1366 x2081))) (and x879 (=> (and (= (x1366 x1725) x2049) (= (x2023 (+ 96 x1725)) x2113) (= (x1366 x1108) x137) (= x2146 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664)) (= x2165 (x2023 (+ 96 x1725))) (= (x2023 (+ 128 x1725)) x1154) (= (x43 x2522 x842 x1018 x164) x344) (= x1052 (x2023 (+ x1725 64))) (= (x1366 x27) x1369) (= x2044 (x1366 x538)) (= x1486 (x2023 (+ x1725 192))) (= x1820 (x1869 x2522 x1468 x1922)) (= x1108 (x2023 (+ x1725 128))) (= x1163 (x2023 (+ x1725 64))) (= x666 (x1366 x1052)) (= (x1366 x1862) x1128) (= (x2023 (+ 160 x1725)) x1074) (= (x2023 (+ 64 x1725)) x506) (= x503 (x1366 x549)) (= x1572 (x2023 (+ 32 x1725))) (= (x1366 x506) x617) (= (x2023 (+ 160 x1725)) x2627) (= x2308 (x2023 (+ x1725 64))) (= x842 (x1366 x1725)) (= x1746 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)) (= (x282 0) x1745) (= (x1366 x2308) x881) (= x1659 (x2023 (+ x1725 32))) (= (x1366 x1725) x2387) (= x84 (< 0 x1128)) (= x305 (ite (= x2522 0) x1745 (ite (>= 32 x2522) x624 (ite (>= 64 x2522) x1820 (ite (>= 96 x2522) x344 (ite (<= x2522 128) x520 (ite (>= 160 x2522) x552 (ite (<= x2522 192) x2146 (ite (>= 224 x2522) x1746 x2574))))))))) (= (x1366 x1486) x2442) (= (x1366 x1725) x1468) (= x788 (x2023 (+ x1725 32))) (= (x2023 (+ 96 x1725)) x538) (= (x1366 x788) x1922) (= x1682 (x1366 x1154)) (= x333 (x2023 (+ x1725 96))) (= (x1366 x2165) x2027) (= (x2023 (+ x1725 64)) x1786) (= x815 (x2023 (+ 128 x1725))) (= x27 (x2023 (+ x1725 32))) (= x520 (x1452 x2522 x2387 x503 x617 x2027)) (= x164 (x1366 x1786)) (= (x1366 x1659) x1018) (= x1557 (x2023 (+ x1725 32))) (= (x1366 x1163) x2389) (= x2520 (x1366 x1572)) (= x549 (x2023 (+ x1725 32))) (= (x1366 x1725) x2469) (= (x2647 x2522 x1837 x337 x666 x651 x1682) x552) (= x2206 (x1366 x815)) (= x2199 (x1869 64 x541 7)) (= x651 (x1366 x333)) (= (x1366 x1074) x1664) (= (x1366 x2627) x1673) (= (x1366 x2113) x2581) (= x337 (x1366 x1557)) (= (x1366 x1725) x1837) (= x624 (x795 x2522 x2469)) (= (x1366 x1725) x2132)) (and (=> (and (and (= x2730 (> x1128 32)) (= (x1366 x1936) x1562)) x84) (and (=> (not x2730) x2774) (=> (and (and (= x1600 (> x1128 64)) (= (x2023 (+ 32 x1936)) x796) (= x274 (x1693 x796)) (= (x2023 (+ x276 32)) x1598)) x2730) (and (=> (and (and (= x1915 (x2023 (+ 64 x276))) (= (x2023 (+ x1936 64)) x2351) (= (x1101 x2351) x1294) (= (> x1128 96) x2530)) x1600) (and (=> x2530 x1775) (=> (not x2530) x2774))) (=> (not x1600) x2774))))) (=> (not x84) x2774)))))))
(assert (x1145 x1744))
(assert (x1145 x1102))
(assert (= (and x1531 x1902) x1185))
(assert (x1145 x1728))
(assert (x1145 x2509))
(assert (= (x2200 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x1412))
(assert (> (x1869 64 x530 10) 10000))
(assert (=> (<= x2778 10000) (= 0 (x1972 x2778))))
(assert (x1145 x236))
(assert (= (x634 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) x97))
(assert (x1145 x2160))
(assert (= (x1869 64 x2488 2) (x1972 (x1869 64 x2488 2))))
(assert (= x183 (and x376 x864)))
(assert (x1145 x1540))
(assert (x1145 x1579))
(assert (x1145 x1272))
(assert (x1145 x1580))
(assert (=> (<= x2350 10000) (= 0 (x1972 x2350))))
(assert (x1145 x208))
(assert (=> (>= 10000 x1094) (= (x1972 x1094) 0)))
(assert (x1145 x2417))
(assert (x1145 x182))
(assert (= (x2158 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x1376))
(assert (x130 1722637450))
(assert (= (or x2645 x1223) x2096))
(assert (= x2782 (x2649 (x43 x298 x981 x2782 x88))))
(assert (< 10000 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)))
(assert (= x165 (=> (and (and (= (x597 192) x2004) (= false x2151) (= false x580) (>= 127 x1363) (= (x1869 64 x579 11) x1289) (= x2013 (and x2694 x786)) (= x336 (x597 160)) (= x2402 false) (<= x2277 3) (= false x1827) (= (x352 x1463) x2183) (= x1583 (x1713 x430)) (= x786 (not x1929)) (= false x776) (= false x1396) (= (x158 x1289) x2277) (>= 127 x1363) (= x2552 (x242 x675)) (= x430 (+ 1 x1289)) (= x1952 (x597 128)) (= x511 2177969240) (= x1618 36) (= x2666 x579) (>= x2552 1) (= x1463 (+ x430 1))) (and (= x2414 0) (= x2666 x1639) (>= 3 x2356) (= x1274 1) (>= 127 x1472) (<= x861 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x861) (= x2007 (x1869 64 x1617 10)) (< x861 x748) (= false x441) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x861) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x861)) (>= x861 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x861)) (= x656 false) (= false x2345) (= x1590 36) (= x1577 (x1869 64 x2622 10)) (or (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x861) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x861)) (>= x861 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x861 115792089237316195423570985008687907853269984665640564039457584007913129639807)) (<= x1569 255) (= (x2023 (+ x748 96)) x1963) (= x748 (x2023 (+ 32 x861))) (= x216 (x242 x675)) (= x1603 (ite (not (= 0 x1569)) 1 0)) (= x1628 (x1869 64 x1639 11)) (= x1617 x2715) (= x2787 (+ x799 1)) (= x117 false) (= false x1034) (= (x1869 64 x1639 11) x799) (< x748 x1963) (<= x861 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1089 false) (= false x1175) (>= 127 x1472) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x861) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x861) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x861) (<= x861 115792089237316195423570985008687907853269984665640564039457584007913129639902))) (= (+ x2787 1) x1194) (<= 1 x216) (= false x1688) (= (x318 x2007) x1569) (= false x8) (= (x2592 x861) x1639) (= x2414 (x307 x1628)) (= false x2139) (= x1617 x2409) (= 3672334990 x2293) (= (not (= x1603 0)) x1929))) (and x2013 (=> (and (= (= 0 x2004) x2196) (= x2547 x2715) (= (and x2196 x30) x348) (= x677 (= x1952 1)) (= (= x336 x2547) x1292) (= x30 (and x677 x1292))) x348)))))
(assert (= x1535 (and x1638 x718)))
(assert (=> (<= x1793 10000) (= (x1972 x1793) 0)))
(assert (= x1617 (x2200 (x1869 64 x1617 10))))
(assert (x912 x2738 128))
(assert (=> (<= x1617 10000) (= 0 (x1972 x1617))))
(assert (x1145 x1433))
(assert (=> (<= x758 10000) (= 0 (x1972 x758))))
(assert (= (x2158 (x795 x2522 x2469)) x2522))
(assert (< 10000 (x795 x298 x525)))
(assert (not (x130 (x2647 x2210 x1203 x532 x2500 x759 x2765))))
(assert (x1145 x674))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x1376 x1086 x870 x1094)))
(assert (=> (<= x579 10000) (= (x1972 x579) 0)))
(assert (= x2175 (=> (and (= (+ 32 x1186) x210) (= x2180 (x1335 1 x2531)) (= (x1335 1 x2531) x618) (= x2276 (= 0 x618)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1324) (= x1324 1)) (= (x1237 x2531 2) x1065) (= x895 (- x1186 132)) (= x2218 (ite (< 0 x2180) x1065 (x1335 127 x1065))) (= (x1230 (- x2180 (mod (ite (< x2218 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1324)) (and (=> (and (and (= (x795 32 104) x555) (= x2586 (> x2218 0))) (not x2276)) (and (=> x2586 x1794) (=> (and (= x1823 0) (not x2586)) x860))) (=> (and x2276 (and (= x465 (* 32 (ite (not (= 0 x2218)) 1 0))) (= (+ x465 x210) x1127) (= x1678 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2531)) (or (= x465 0) (= x465 32)))) x2752)))))
(assert (=> (>= 10000 x2710) (= 0 (x1972 x2710))))
(assert (x1145 x224))
(assert (> (x1869 64 x2040 10) 10000))
(assert (< (x1869 64 x2605 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2686 x2702))
(assert (x1145 x914))
(assert (x2686 x2719))
(assert (< 10000 (x43 x298 x981 x2782 x88)))
(assert (= 32 (x2158 (x795 32 103))))
(assert (= (x2200 (x795 x2522 x2469)) x2469))
(assert (x1145 x1487))
(assert (x1145 x1226))
(assert (= x2630 x787))
(assert (x1145 x1887))
(assert (x1145 x1159))
(assert (= (x6 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230)) x2240))
(assert (= x698 (and (not x363) x2041)))
(assert (=> (>= 10000 x285) (= (x1972 x285) 0)))
(assert (=> (<= x675 10000) (= (x1972 x675) 0)))
(assert (not (x130 (x795 x442 x371))))
(assert (= (and x709 x1061) x1910))
(assert (x1145 x1927))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691)))
(assert (x1145 x2681))
(assert (=> (<= x337 10000) (= 0 (x1972 x337))))
(assert (= x371 (x2200 (x795 x442 x371))))
(assert (x1145 x976))
(assert (= (x1972 x430) (x1972 (+ x430 1))))
(assert (=> (>= 10000 x2018) (= 0 (x1972 x2018))))
(assert (= x2751 (and x279 (not x1139))))
(assert (=> (<= x485 10000) (= (x1972 x485) 0)))
(assert (= x887 (x2158 (x611 x887 x2600 x1670 x655 x2056 x822 x1623))))
(assert (x1145 x270))
(assert (= x745 (x416 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359))))
(assert (x1624 x1378))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x1145 x159))
(assert (x1145 x58))
(assert (x2686 32))
(assert (x1145 x2547))
(assert (x1145 x1435))
(assert (x1145 x2031))
(assert (x1145 x1160))
(assert (x1145 x979))
(assert (= (and (not x1895) x150) x1430))
(assert (x2686 x501))
(assert (x1145 x1663))
(assert (=> (<= x255 10000) (= 0 (x1972 x255))))
(assert (x1145 x2089))
(assert (x1145 x1477))
(assert (x1145 x189))
(assert (= (x1972 (+ x1017 1)) (x1972 x1017)))
(assert (= x2734 (or x49 x240)))
(assert (x1145 x2293))
(assert (=> (>= 10000 x264) (= 0 (x1972 x264))))
(assert (x1145 x1854))
(assert (x1145 x1153))
(assert (x1145 x1676))
(assert (x1145 x1165))
(assert (x1145 x1028))
(assert (> (x1869 64 x2263 6) 10000))
(assert (x1145 x1945))
(assert (x1145 x75))
(assert (=> (>= 10000 x1022) (= 0 (x1972 x1022))))
(assert (x1145 x2521))
(assert (x1145 x2569))
(assert (x1145 x789))
(assert (x1145 x1572))
(assert (= x619 (and x248 x2085)))
(assert (=> (<= x745 10000) (= 0 (x1972 x745))))
(assert (=> (<= x141 10000) (= 0 (x1972 x141))))
(assert (= x1340 (x416 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (x1145 x2684))
(assert (x1145 x1268))
(assert (x1145 x2398))
(assert (= (x2649 (x1869 64 x2040 10)) 10))
(assert (not (x130 (x1869 64 x579 11))))
(assert (x1145 x276))
(assert (x1145 x405))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)))
(assert (< (x43 x72 x946 x1735 x714) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2655 (and (not x2530) x447)))
(assert (=> (<= x77 10000) (= 0 (x1972 x77))))
(assert (x1145 x2165))
(assert (= (x1869 x1267 x373 x1654) (x1972 (x1869 x1267 x373 x1654))))
(assert (= (x2649 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x52))
(assert (= x1025 (x2082 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97))))
(assert (x1145 x1021))
(assert (= (x1972 (x1869 64 x2605 2)) (x1869 64 x2605 2)))
(assert (x1145 x842))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x675 1)))
(assert (= x451 (and x1996 x2154)))
(assert (x1828 x1446))
(assert (=> (>= 10000 x938) (= (x1972 x938) 0)))
(assert (< 10000 (x1869 x887 x1069 x1343)))
(assert (not (x130 (x1869 64 x1122 6))))
(assert (= (x1972 (+ x799 1)) (x1972 x799)))
(assert (x1145 x1541))
(assert (x1145 x1771))
(assert (x1145 x2273))
(assert (= x2285 (x2082 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369))))
(assert (x1145 x1127))
(assert (= (x1869 64 x541 3) (x1972 (x1869 64 x541 3))))
(assert (= (x2649 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x2685))
(assert (x1145 x1321))
(assert (x1145 x331))
(assert (x912 x501 128))
(assert (x1145 x1088))
(assert (x1145 x2346))
(assert (x1624 x1408))
(assert (= (x2649 (x1452 x1267 x851 x15 x1847 x2767)) x15))
(assert (=> (>= 10000 x373) (= (x1972 x373) 0)))
(assert (x2686 x1588))
(assert (x1145 x2117))
(assert (=> (>= 10000 x2070) (= (x1972 x2070) 0)))
(assert (= x1382 (and x1271 (not x571))))
(assert (x1145 x2523))
(assert (x1624 x2417))
(assert (= (x1869 64 x2710 2) (x1972 (x1869 64 x2710 2))))
(assert (x1145 x443))
(assert (x1145 x605))
(assert (= (=> (= (+ x310 x215) x426) x1262) x148))
(assert (= (or x2771 x1424 x2268 x1280 x2472) x657))
(assert (x1145 x333))
(assert (= (x1328 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x1841))
(assert (x1145 x1312))
(assert (= x626 (x2649 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (x1145 x863))
(assert (x1145 x1322))
(assert (= (and x2594 x1800) x1956))
(assert (= (x2200 (x1869 x2522 x1468 x1922)) x1468))
(assert (< 10000 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)))
(assert (< (x1869 x442 x558 x411) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x268 10000) (= 0 (x1972 x268))))
(assert (x1145 x1474))
(assert (x1145 x1122))
(assert (x130 4294967295))
(assert (not (x130 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (x1145 x2763))
(assert (x1145 x1632))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x442 x266 x876 x1503 x2602)))
(assert (x1145 x1097))
(assert (= 64 (x2158 (x1869 64 x905 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x541 7)))
(assert (x1145 x2113))
(assert (= 6 (x2649 (x1869 64 x2263 6))))
(assert (x1145 x2230))
(assert (x1145 x1311))
(assert (= (and x472 (not x2435)) x817))
(assert (x912 x1144 256))
(assert (= (and x1425 x2526) x2216))
(assert (=> (<= x756 10000) (= (x1972 x756) 0)))
(assert (= (x1972 (x1869 x298 x315 x1247)) (x1869 x298 x315 x1247)))
(assert (=> (<= x905 10000) (= (x1972 x905) 0)))
(assert (x1145 x1584))
(assert (= (x2200 (x2647 x1669 x341 x2279 x1009 x1904 x40)) x341))
(assert (= (x2649 (x2647 x2210 x1203 x532 x2500 x759 x2765)) x532))
(assert (x1145 x2765))
(assert (x2116 x2156))
(assert (x1145 x1359))
(assert (x1145 x647))
(assert (x1145 x2167))
(assert (= x2109 (x2200 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399))))
(assert (x1145 x935))
(assert (= x1099 (and (not x1788) x2394)))
(assert (=> (<= x2346 10000) (= 0 (x1972 x2346))))
(assert (x1145 x350))
(assert (= x1007 (and x2751 (not x1651))))
(assert (= x2689 (or x2225 x1099 x128 x466 x2484)))
(assert (= x1705 (x2158 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (x1145 x489))
(assert (= (x6 (x2647 x887 x2569 x57 x2127 x1235 x911)) x911))
(assert (x1803 x1144))
(assert (x1145 x2710))
(assert (x1145 x831))
(assert (x1145 x1831))
(assert (=> (<= x760 10000) (= (x1972 x760) 0)))
(assert (= x272 (or x2311 x1121)))
(assert (= (and x1443 x2451) x1198))
(assert (> (x282 0) 10000))
(assert (x1145 x397))
(assert (= (x2082 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444)) x1118))
(assert (= x994 (or x1167 x272)))
(assert (= (x1972 (x1869 x72 x1903 x291)) (x1869 x72 x1903 x291)))
(assert (= x279 (and (not x355) x2309)))
(assert (=> (<= x455 10000) (= 0 (x1972 x455))))
(assert (x1145 x1847))
(assert (= (x416 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)) x1420))
(assert (x1145 x628))
(assert (x130 1000000000))
(assert (x1145 x1681))
(assert (x1145 x1916))
(assert (x1145 x1177))
(assert (x1624 x2061))
(assert (= (and (not x10) x1441) x2484))
(assert (x2116 x2696))
(assert (x1145 x1790))
(assert (= (x2200 (x2647 x2522 x1837 x337 x666 x651 x1682)) x1837))
(assert (= 0 (x1972 4294967295)))
(assert (=> (>= 10000 x392) (= 0 (x1972 x392))))
(assert (= (x1972 (x2647 x72 x602 x77 x956 x760 x2487)) (x2647 x72 x602 x77 x956 x760 x2487)))
(assert (x1145 x2178))
(assert (< (x1452 x2522 x2387 x503 x617 x2027) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x981))
(assert (x1145 x2676))
(assert (not (x130 (x611 x1669 x720 x681 x1632 x80 x1159 x2042))))
(assert (x1145 x932))
(assert (not (x130 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (x1145 x1886))
(assert (< (x1869 64 x2488 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x881))
(assert (> (x611 x2210 x1153 x2537 x2626 x726 x460 x1691) 10000))
(assert (= (x2200 (x795 x1376 x105)) x105))
(assert (= x2092 (=> (and (= (> x1546 0) x2585) (= (x2023 (+ x1625 32)) x189) (= (ite (> x854 150) 150 x854) x806)) (and (=> (not x2585) x1438) (=> x2585 x2630)))))
(assert (= x838 (and x93 (not x2192))))
(assert (x1145 x2431))
(assert (x1145 x901))
(assert (x1145 x2118))
(assert (=> (<= x530 10000) (= 0 (x1972 x530))))
(assert (=> (<= x887 10000) (= 0 (x1972 x887))))
(assert (= (x611 x298 x2020 x1782 x277 x477 x129 x888) (x1972 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (< 10000 (x1452 x298 x636 x803 x468 x2058)))
(assert (=> (<= x2522 10000) (= (x1972 x2522) 0)))
(assert (x912 x1218 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1903) (= 0 (x1972 x1903))))
(assert (= 64 (x2158 (x1869 64 x1639 11))))
(assert (x1145 x803))
(assert (x2233 x705))
(assert (x1145 x2067))
(assert (x1145 x2607))
(assert (< 10000 (x795 32 x2107)))
(assert (x1145 x711))
(assert (x1145 x2364))
(assert (= 64 (x2158 (x1869 64 x2350 36))))
(assert (> (x1452 x442 x266 x876 x1503 x2602) 10000))
(assert (= (and x2572 (not x2347)) x1885))
(assert (x1145 x1306))
(assert (not (x130 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97))))
(assert (x1145 x526))
(assert (x1145 x1081))
(assert (x1145 x1930))
(assert (x1145 x308))
(assert (x1145 x1409))
(assert (= x1271 (or x838 x1131)))
(assert (= (x2158 (x1869 64 x2263 6)) 64))
(assert (not (x130 (x2647 x887 x2569 x57 x2127 x1235 x911))))
(assert (not (x130 (x611 x887 x2600 x1670 x655 x2056 x822 x1623))))
(assert (x1145 x1240))
(assert (= x334 (x2649 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (= (x1328 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)) x1673))
(assert (x1145 x2552))
(assert (= 0 (x1972 310283853)))
(assert (x1145 x2335))
(assert (= (or x132 x578) x1024))
(assert (x1145 x2770))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x2522 x1468 x1922)))
(assert (x130 65535))
(assert (= (x2200 (x1869 x72 x1903 x291)) x1903))
(assert (x1145 x2741))
(assert (= x311 (x2649 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369))))
(assert (x1624 x2033))
(assert (= (x1972 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)))
(assert (x1145 x1398))
(assert (x1997 256 x166))
(assert (= (x2200 (x2647 x298 x1300 x1476 x669 x2425 x890)) x1300))
(assert (= x1547 (or (and x986 x542) x243)))
(assert (x1145 x1588))
(assert (= x1691 (x1328 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (x1145 x1358))
(assert (= x1410 (and (not x190) x1385)))
(assert (x1145 x632))
(assert (x1145 x731))
(assert (x2233 (+ x2210 31)))
(assert (=> (>= 10000 x225) (= (x1972 x225) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x1376 x188 x1325)))
(assert (= x1338 (x2649 (x43 x1669 x2559 x1338 x2181))))
(assert (not (x130 (x1869 64 x936 36))))
(assert (= (and x2241 x712) x376))
(assert (x1145 x2123))
(assert (x1145 x2056))
(assert (x2233 (+ 31 x443)))
(assert (x1145 x534))
(assert (=> (<= x1088 10000) (= (x1972 x1088) 0)))
(assert (x912 x2470 128))
(assert (= (x6 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) x1183))
(assert (x1145 x920))
(assert (= (x2200 (x1869 64 x2605 6)) x2605))
(assert (=> (<= x1381 10000) (= 0 (x1972 x1381))))
(assert (x1145 x77))
(assert (x1145 x1105))
(assert (x1145 x591))
(assert (< 10000 (x1869 64 x59 6)))
(assert (x1145 x2680))
(assert (= (x2082 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230)) x2187))
(assert (x1145 x2626))
(assert (x1145 x861))
(assert (x813 x2531 2))
(assert (x1145 x801))
(assert (x1803 x1120))
(assert (x1145 x792))
(assert (= (x2158 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) x1669))
(assert (= (x416 (x1452 x298 x636 x803 x468 x2058)) x468))
(assert (x1145 x1741))
(assert (x2233 x2665))
(assert (x1145 x235))
(assert (x1997 32 (ite (not (= x1675 0)) 1 0)))
(assert (x1145 x737))
(assert (= x1114 (or x2245 x2514)))
(assert (x1145 x1052))
(assert (= (x2082 (x2647 x1267 x265 x2499 x159 x133 x2214)) x133))
(assert (x1997 32 x1505))
(assert (= (x2200 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) x1174))
(assert (x1145 x156))
(assert (not (x130 (x1869 64 x840 36))))
(assert (x1145 x271))
(assert (x1145 x210))
(assert (= (or (and (not x259) x1884) x1879) x252))
(assert (= (=> (and (= (x2023 (+ 96 x1725)) x1236) (= x2432 (not (> x2521 128))) (= x237 (x2023 (+ 96 x297))) (= x958 (x1279 x1236))) (and x2060 x2432)) x991))
(assert (not (x130 (x1869 64 x530 10))))
(assert (x1145 x2308))
(assert (x1145 x200))
(assert (x1145 x725))
(assert (= x1484 (x2649 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97))))
(assert (= x1510 (=> (and (= (x2023 (+ 96 x2720)) x2410) (= x1102 (x892 x2410)) (= x2143 (x2023 (+ x1900 96))) (= (not (> x845 128)) x2687)) (and x2687 x1877))))
(assert (x912 x2719 32))
(assert (= (or x2637 x627) x93))
(assert (x1145 x1399))
(assert (x1145 x1807))
(assert (=> (>= 10000 x1568) (= (x1972 x1568) 0)))
(assert (x1145 x1768))
(assert (x1145 x2644))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834)))
(assert (x1145 x1639))
(assert (not (x130 (x795 x1669 x1817))))
(assert (x1145 x1951))
(assert (=> (>= 10000 x1669) (= 0 (x1972 x1669))))
(assert (x1145 x585))
(assert (> (x1452 x1267 x851 x15 x1847 x2767) 10000))
(assert (x1145 x1423))
(assert (x1145 x620))
(assert (= 36 (x2649 (x1869 64 x2350 36))))
(assert (x1145 x1563))
(assert (x1145 x257))
(assert (= x603 (and x358 x249)))
(assert (> (x2647 x442 x1784 x1538 x1103 x756 x169) 10000))
(assert (x1145 x1235))
(assert (< (x2647 x1705 x1626 x2685 x2203 x1158 x2106) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1786))
(assert (x1145 x2046))
(assert (x1145 x503))
(assert (x1145 x983))
(assert (x1145 x1687))
(assert (= (x2158 (x1869 64 x530 10)) 64))
(assert (x1145 x1738))
(assert (= (and (not x2621) x930) x2367))
(assert (= (x2200 (x795 32 104)) 104))
(assert (not (x130 (x1869 64 x2325 36))))
(assert (= (x2158 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) x442))
(assert (x1145 x950))
(assert (= x1438 (=> (and (= x412 (>= 224 x887)) (= (x1981 x1602) x887)) (and (=> (and (= x1216 (x1981 x2720)) (= x2569 (x1981 x2720)) (= x1738 (x1981 x2720)) (= x954 (x2023 (+ x2720 32))) (= (x1869 64 x836 7) x395) (= (x2023 (+ x2720 64)) x2466) (= x491 (x2023 (+ x2720 64))) (= x655 (x1981 x151)) (= (x1981 x2720) x2600) (= x689 (ite (= x887 0) x2242 (ite (>= 32 x887) x241 (ite (>= 64 x887) x1993 (ite (<= x887 96) x1132 (ite (<= x887 128) x2542 (ite (<= x887 160) x34 (ite (>= 192 x887) x1609 (ite (>= 224 x887) x440 x1302))))))))) (= x2240 (x1981 x833)) (= (x1981 x652) x57) (= (x1981 x1253) x191) (= x1993 (x1869 x887 x1069 x1343)) (= x1161 (x2023 (+ x2720 160))) (= (x2023 (+ 192 x2720)) x329) (= (x2023 (+ 128 x2720)) x2068) (= x2437 (x1981 x2720)) (= x2571 (x1981 x2720)) (= x2127 (x1981 x208)) (= (x1981 x1951) x1343) (= x1253 (x2023 (+ x2720 32))) (= x110 (x1981 x153)) (= (x1981 x637) x480) (= (x1981 x2118) x334) (= x2436 (x2023 (+ 64 x2720))) (= x2542 (x1452 x887 x1216 x152 x2281 x480)) (= x230 (x1981 x329)) (= (x1981 x802) x911) (= x652 (x2023 (+ 32 x2720))) (= (x1981 x1968) x2056) (= x1069 (x1981 x2720)) (= x833 (x2023 (+ 128 x2720))) (= x802 (x2023 (+ 128 x2720))) (= x862 (x1981 x1545)) (= x152 (x1981 x2444)) (= (x2023 (+ 32 x2720)) x2444) (= (x1981 x491) x2281) (= (x2023 (+ x2720 64)) x208) (= (x2023 (+ 96 x2720)) x518) (= x637 (x2023 (+ x2720 96))) (= (x795 x887 x2437) x241) (= x440 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230)) (= (x2023 (+ 32 x2720)) x1951) (= x2242 (x282 0)) (= (< 0 x110) x2329) (= (x2647 x887 x2569 x57 x2127 x1235 x911) x34) (= x1623 (x1981 x1161)) (= (x1981 x2466) x1615) (= (x2023 (+ 96 x2720)) x2770) (= x1235 (x1981 x518)) (= (x2023 (+ 32 x2720)) x2118) (= (x1981 x2770) x2187) (= x1670 (x1981 x954)) (= x1968 (x2023 (+ x2720 96))) (= (x43 x887 x1738 x191 x392) x1132) (= x1545 (x2023 (+ 160 x2720))) (= (x2023 (+ 64 x2720)) x151) (= x392 (x1981 x2436)) (= x1609 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)) (= x822 (x1981 x2068))) (and (=> (not x2329) x2658) (=> (and x2329 (and (= (x1981 x1831) x2724) (= x2241 (< 32 x110)))) (and (=> (and x2241 (and (= x1984 (x723 x711)) (= x711 (x2023 (+ 32 x1831))) (= (x2023 (+ 32 x1346)) x50) (= (> x110 64) x864))) (and (=> (and (and (= (x2023 (+ x1346 64)) x2095) (= x572 (< 96 x110)) (= x743 (x2023 (+ 64 x1831))) (= (x797 x743) x2292)) x864) (and (=> x572 x1414) (=> (not x572) x2658))) (=> (not x864) x2658))) (=> (not x2241) x2658))))) x412))))
(assert (=> (<= x1716 10000) (= (x1972 x1716) 0)))
(assert (x1624 x2741))
(assert (= x2602 (x2082 (x1452 x442 x266 x876 x1503 x2602))))
(assert (=> (<= x558 10000) (= (x1972 x558) 0)))
(assert (x1145 x1732))
(assert (= (x2158 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) x298))
(assert (=> (>= 10000 x2574) (= (x1972 x2574) 0)))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1145 x1825))
(assert (= x2020 (x2200 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (= x122 (x2200 (x1452 x1669 x122 x882 x942 x2))))
(assert (= (and (not x663) x23) x2472))
(assert (= x1792 (x416 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (= (x2158 (x1869 64 x2589 (ite (= x1705 0) x2300 (ite (>= 32 x1705) x436 (ite (<= x1705 64) x2057 (ite (>= 96 x1705) x1008 (ite (>= 128 x1705) x735 (ite (<= x1705 160) x1969 (ite (<= x1705 192) x2570 (ite (<= x1705 224) x2055 x1252)))))))))) 64))
(assert (x1145 x1451))
(assert (x1145 x168))
(assert (= x1959 (and x1114 x1049)))
(assert (x1145 x840))
(assert (x1145 x1533))
(assert (= x2645 (and x1219 (not x773))))
(assert (= (x795 x298 x525) (x1972 (x795 x298 x525))))
(assert (=> (<= x681 10000) (= (x1972 x681) 0)))
(assert (= x2555 (and x696 (not x823))))
(assert (x1145 x152))
(assert (= (and x2276 x2734) x949))
(assert (= x2135 (and x1651 x2751)))
(assert (x1145 x1596))
(assert (x1690 x2665))
(assert (= x1854 (x416 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (= (x2200 (x1869 64 x659 36)) x659))
(assert (=> (>= 10000 x1901) (= 0 (x1972 x1901))))
(assert (x1145 x1819))
(assert (x1145 x284))
(assert (= x726 (x2082 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (< 10000 (x1869 64 x2622 10)))
(assert (x1145 x1243))
(assert (= (x1869 64 x905 12) (x1972 (x1869 64 x905 12))))
(assert (= x976 (x2200 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (=> (<= x1705 10000) (= (x1972 x1705) 0)))
(assert (x1145 x2173))
(assert (= (x1972 (x795 x2210 x2093)) (x795 x2210 x2093)))
(assert (= (x2649 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834)) x448))
(assert (x1997 32 x1575))
(assert (= x2572 (and x1124 x2689)))
(assert (x1145 x2322))
(assert (x1145 x618))
(assert (=> (>= 10000 x1927) (= 0 (x1972 x1927))))
(assert (= (and x2080 x2737) x2145))
(assert (x1145 x1536))
(assert (=> (>= 10000 x298) (= (x1972 x298) 0)))
(assert (x1145 x724))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x298 x981 x2782 x88)))
(assert (not (x130 (x43 x442 x1352 x702 x1927))))
(assert (x1145 x285))
(assert (x1145 x2203))
(assert (x1145 x1615))
(assert (x1828 x196))
(assert (=> (>= 10000 x1682) (= (x1972 x1682) 0)))
(assert (< 10000 (x1869 x2522 x1468 x1922)))
(assert (x2233 x857))
(assert (= x727 (and x969 x2730)))
(assert (x1145 x372))
(assert (= (x6 (x2647 x1669 x341 x2279 x1009 x1904 x40)) x40))
(assert (= (x1972 (x2647 x1267 x265 x2499 x159 x133 x2214)) (x2647 x1267 x265 x2499 x159 x133 x2214)))
(assert (= (x2082 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x1158))
(assert (x1997 1000000000 x2194))
(assert (x130 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (=> (<= x1720 10000) (= 0 (x1972 x1720))))
(assert (= x89 (and x1185 x2650)))
(assert (x1145 x1486))
(assert (= x2559 (x2200 (x43 x1669 x2559 x1338 x2181))))
(assert (= (x2158 (x795 x298 x525)) x298))
(assert (x1145 x1221))
(assert (x1145 x1001))
(assert (x1145 x1865))
(assert (x1145 x1325))
(assert (x1145 x2593))
(assert (= x1650 (x6 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841))))
(assert (= (x1328 (x611 x442 x995 x2565 x1189 x1290 x2270 x987)) x987))
(assert (x1145 x2134))
(assert (= x772 (and x1055 (not x1204))))
(assert (=> (>= 10000 x702) (= (x1972 x702) 0)))
(assert (x1145 x1672))
(assert (< 10000 (x795 x2522 x2469)))
(assert (x1145 x1523))
(assert (x1145 x2073))
(assert (=> (>= 10000 x789) (= 0 (x1972 x789))))
(assert (= x2500 (x416 (x2647 x2210 x1203 x532 x2500 x759 x2765))))
(assert (x1145 x2088))
(assert (=> (<= x946 10000) (= 0 (x1972 x946))))
(assert (= x2303 (x2649 (x43 x1705 x1653 x2303 x829))))
(assert (not (x130 (x795 x2210 x2093))))
(assert (= (x1972 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)))
(assert (x1997 32 (ite (not (= x2760 0)) 1 0)))
(assert (= (=> (= x1127 (+ x210 x1823)) x2752) x860))
(assert (x1145 x289))
(assert (x1145 x1784))
(assert (= (and (not x1614) x2145) x1858))
(assert (x1690 x1144))
(assert (x1145 x1484))
(assert (= x1816 (=> (= x363 (= 0 x323)) (and (=> (and x363 (= 1 x323)) x2620) (=> (not x363) x640)))))
(assert (= (x1972 (+ x2787 1)) (x1972 x2787)))
(assert (= x2526 (or x2252 x1858 x71 x1755 x157)))
(assert (x1145 x2303))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x1669 x1817)))
(assert (x1145 x1629))
(assert (x912 x231 128))
(assert (x1145 x1369))
(assert (x1145 x1296))
(assert (= x1829 (and x1873 x994)))
(assert (= (and x657 x473) x1494))
(assert (x1145 x230))
(assert (= (or x2385 x1748) x1))
(assert (= x2406 (=> (and (not (< x791 x2512)) (= x2213 x791) (= x861 160) (= x2512 (x672 128))) x2653)))
(assert (x2686 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2158 (x1869 64 x675 2)) 64))
(assert (x1145 x1347))
(assert (not (x130 (x795 x1267 x347))))
(assert (= x2012 (and x1075 x1702)))
(assert (x2116 x705))
(assert (=> (>= 10000 x2054) (= 0 (x1972 x2054))))
(assert (= (x2082 (x1452 x887 x1216 x152 x2281 x480)) x480))
(assert (x1145 x2411))
(assert (not (x130 (x1869 x298 x315 x1247))))
(assert (= x870 (x2649 (x43 x1376 x1086 x870 x1094))))
(assert (x1145 x1989))
(assert (x2233 x2140))
(assert (= (x1869 64 x2325 36) (x1972 (x1869 64 x2325 36))))
(assert (x1145 x2467))
(assert (x1145 x1068))
(assert (= (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834) (x1972 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (= (or x1024 x1481) x1454))
(assert (x1145 x1725))
(assert (= x1254 (and x2530 x447)))
(assert (=> (>= 10000 x315) (= 0 (x1972 x315))))
(assert (= (x2158 (x795 32 104)) 32))
(assert (x1145 x954))
(assert (= (or x1547 x544) x98))
(assert (x1828 x290))
(assert (x1145 x558))
(assert (=> (<= x835 10000) (= 0 (x1972 x835))))
(assert (x1145 x784))
(assert (= x1221 (x6 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (= x2311 (and x181 x2197)))
(assert (not (x130 (x1869 x887 x1069 x1343))))
(assert (x1145 x325))
(assert (< 10000 (x2647 x298 x1300 x1476 x669 x2425 x890)))
(assert (=> (>= 10000 x720) (= (x1972 x720) 0)))
(assert (x1145 x2452))
(assert (x1145 x1714))
(assert (x912 x2665 2))
(assert (=> (>= 10000 x2042) (= 0 (x1972 x2042))))
(assert (> (x1452 x72 x399 x1798 x1792 x2335) 10000))
(assert (=> (<= x881 10000) (= (x1972 x881) 0)))
(assert (= x64 (x2200 (x795 x72 x64))))
(assert (x1145 x402))
(assert (= x1532 (x2649 (x43 x1267 x156 x1532 x114))))
(assert (= (x2649 (x1869 64 x836 3)) 3))
(assert (x1145 x743))
(assert (x1145 x1027))
(assert (= (x1869 64 x25 12) (x1972 (x1869 64 x25 12))))
(assert (= x382 (=> (and (= x437 (x2142 x24)) (= x2009 (not (< 32 x1667)))) (and (=> (= 32 x2612) x2360) x2009))))
(assert (= (=> (and (= (x1710 x1518) x1838) (= (x2023 (+ x2720 96)) x1518) (= x2617 (x2023 (+ x1053 96))) (= (not (> x1097 128)) x1170)) (and x1170 x453)) x2005))
(assert (x1145 x2778))
(assert (=> (>= 10000 x762) (= 0 (x1972 x762))))
(assert (> (x1869 64 x905 12) 10000))
(assert (= (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664) (x1972 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2647 x72 x602 x77 x956 x760 x2487)))
(assert (= (x2200 (x43 x2522 x842 x1018 x164)) x842))
(assert (= x2442 (x634 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (not (x130 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (= (and x467 (not x2301)) x2268))
(assert (not (x130 (x1869 64 x2070 12))))
(assert (=> (>= 10000 x2600) (= 0 (x1972 x2600))))
(assert (x1145 x2488))
(assert (x1145 x1066))
(assert (x1145 x2081))
(assert (not (x130 (x795 x2522 x2469))))
(assert (= x2107 (x2200 (x795 32 x2107))))
(assert (x912 x1144 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x250))
(assert (x1145 x2444))
(assert (x1145 x513))
(assert (= x1376 (x2158 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (x1145 x2678))
(assert (= x2352 (and x359 x1172)))
(assert (x813 (+ 31 x1566) 32))
(assert (= x137 (x6 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (x912 x857 256))
(assert (x1145 x1894))
(assert (= 11 (x2649 (x1869 64 x579 11))))
(assert (= (x2082 (x1452 x298 x636 x803 x468 x2058)) x2058))
(assert (x1145 x1267))
(assert (x1145 x1468))
(assert (x1145 x722))
(assert (x1145 x2369))
(assert (= x1088 (x2200 (x1869 64 x1088 (ite (= 0 x1669) x1304 (ite (<= x1669 32) x1941 (ite (<= x1669 64) x1460 (ite (<= x1669 96) x433 (ite (<= x1669 128) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891))))))))))))
(assert (=> (<= x1861 10000) (= 0 (x1972 x1861))))
(assert (x1145 x909))
(assert (x813 x857 2))
(assert (x1145 x1367))
(assert (=> (<= x1042 10000) (= (x1972 x1042) 0)))
(assert (not (x130 (x1869 64 x2350 36))))
(assert (> (x1869 x298 x315 x1247) 10000))
(assert (= x1069 (x2200 (x1869 x887 x1069 x1343))))
(assert (x1145 x1417))
(assert (x130 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x1617 10)))
(assert (x1145 x2363))
(assert (x1145 x857))
(assert (x1145 x439))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 32 104)))
(assert (x1145 x2163))
(assert (x1145 x164))
(assert (x1145 x779))
(assert (not (x130 (x2647 x72 x602 x77 x956 x760 x2487))))
(assert (x1145 x1841))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x1145 x297))
(assert (=> (>= 10000 x105) (= 0 (x1972 x105))))
(assert (x1145 x1915))
(assert (x1145 x2575))
(assert (x1145 x1471))
(assert (< 10000 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)))
(assert (x1145 x1867))
(assert (x1624 x2478))
(assert (x1145 x756))
(assert (x1145 x1759))
(assert (x1145 x2077))
(assert (= (x1869 64 x2263 6) (x1972 (x1869 64 x2263 6))))
(assert (x1145 x13))
(assert (not (x130 (x43 x1705 x1653 x2303 x829))))
(assert (x2233 (+ x2670 31)))
(assert (x1145 x703))
(assert (x1145 x956))
(assert (x1145 x699))
(assert (x1145 x1189))
(assert (x1145 x2702))
(assert (x1145 x2389))
(assert (= (x416 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x2203))
(assert (x1145 x1378))
(assert (= (x2200 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) x254))
(assert (=> (>= 10000 x882) (= (x1972 x882) 0)))
(assert (x1145 x1005))
(assert (> (x1869 64 x1639 11) 10000))
(assert (x1145 x226))
(assert (x1145 x1682))
(assert (= x1122 (x2200 (x1869 64 x1122 6))))
(assert (x1828 x2194))
(assert (=> (>= 10000 x2685) (= 0 (x1972 x2685))))
(assert (x1145 x1888))
(assert (> (x1869 64 x2589 (ite (= 0 x1705) x2300 (ite (<= x1705 32) x436 (ite (>= 64 x1705) x2057 (ite (<= x1705 96) x1008 (ite (>= 128 x1705) x735 (ite (>= 160 x1705) x1969 (ite (>= 192 x1705) x2570 (ite (>= 224 x1705) x2055 x1252))))))))) 10000))
(assert (= (x1972 (x1869 64 x659 36)) (x1869 64 x659 36)))
(assert (=> (<= x2207 10000) (= (x1972 x2207) 0)))
(assert (x1145 x759))
(assert (x1145 x579))
(assert (= x2637 (and x984 (not x2582))))
(assert (x1145 x1925))
(assert (= x616 (x634 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (x1145 x938))
(assert (> (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664) 10000))
(assert (= (x416 (x2647 x1267 x265 x2499 x159 x133 x2214)) x159))
(assert (not (x130 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (= (x2082 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)) x2025))
(assert (=> (>= 10000 x253) (= 0 (x1972 x253))))
(assert (=> (>= 10000 x2285) (= (x1972 x2285) 0)))
(assert (= 12 (x2649 (x1869 64 x2070 12))))
(assert (x1145 x1168))
(assert (= x2 (x2082 (x1452 x1669 x122 x882 x942 x2))))
(assert (x1145 x2405))
(assert (= (x1972 (x43 x887 x1738 x191 x392)) (x43 x887 x1738 x191 x392)))
(assert (= x373 (x2200 (x1869 x1267 x373 x1654))))
(assert (x1145 x1459))
(assert (x1145 x102))
(assert (=> (>= 10000 x2602) (= 0 (x1972 x2602))))
(assert (not (x130 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (x1145 x2286))
(assert (x912 x1065 128))
(assert (= (x2158 (x2647 x298 x1300 x1476 x669 x2425 x890)) x298))
(assert (=> (>= 10000 x2263) (= 0 (x1972 x2263))))
(assert (> (x1869 64 x2325 36) 10000))
(assert (x1145 x584))
(assert (= x358 (and x1271 x571)))
(assert (= (x2200 (x43 x442 x1352 x702 x1927)) x1352))
(assert (= x1705 (x2158 (x1452 x1705 x2133 x1773 x1568 x1753))))
(assert (x2116 x1065))
(assert (< 10000 (x43 x2210 x485 x2386 x87)))
(assert (= x2431 (x1328 (x611 x72 x706 x1462 x1420 x2025 x48 x2431))))
(assert (x1145 x1475))
(assert (=> (<= x448 10000) (= 0 (x1972 x448))))
(assert (x1145 x2285))
(assert (x1145 x946))
(assert (x1145 x2721))
(assert (x2116 x1218))
(assert (x1145 x1117))
(assert (x1145 x2017))
(assert (x1145 x463))
(assert (not (x130 (x43 x1376 x1086 x870 x1094))))
(assert (= (x2158 (x1869 x2210 x1490 x1283)) x2210))
(assert (x1145 x1044))
(assert (= x531 (=> (and (and (>= x1367 1) (<= x1919 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x595 (x1230 (- x1367 x1919))) (= x1367 (x2023 (+ x322 x1106))) (= x1184 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x2248)) (= (x1230 (- x595 32)) x2110) (not (= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1367)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1367) (= (x2023 (+ 31 x2506)) x2762) (<= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1335 26959946667150639794667015087019630673637144422540572481103610249215 x1606) x2248) (< x1919 x1367) (not (= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x1365 (x2023 (+ x1919 32))) (< x1367 x276) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2762) x1106) (= (> x2578 0) x473) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1919) (= (x2023 (+ x2506 x322)) x564) (= (x1645 x1919) x2260) (= (x2342 x1365) x1606) (<= x1919 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2023 (+ x1367 32)) x2184) (= x276 (x2023 (+ 192 x1367)))) (or (and (and (= x1613 (<= x422 (x692 x675))) x111 (= (x1527 x675) x9) x1613 (= x2363 x1286) (= (x1527 x675) x422) (<= x1129 4294967295) (= (= x9 (x692 x675)) x111)) x473) (and (not x473) (= (+ x905 1) x1286)))) x2238)))
(assert (x1145 x1293))
(assert (x1145 x2629))
(assert (x1145 x1173))
(assert (> (x1869 64 x541 3) 10000))
(assert (x1145 x1823))
(assert (x130 3812630263))
(assert (not (x130 (x1452 x72 x399 x1798 x1792 x2335))))
(assert (x1145 x2564))
(assert (= (x1972 (x1869 x887 x1069 x1343)) (x1869 x887 x1069 x1343)))
(assert (= 64 (x2158 (x1869 64 x541 3))))
(assert (= x2389 (x416 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (> (x2647 x2522 x1837 x337 x666 x651 x1682) 10000))
(assert (=> (<= x2132 10000) (= (x1972 x2132) 0)))
(assert (x1145 x2114))
(assert (x1145 x2307))
(assert (x1145 x2685))
(assert (x1828 x463))
(assert (= (and (not x668) x2135) x1394))
(assert (x1145 x1203))
(assert (= (x2649 (x1452 x1705 x2133 x1773 x1568 x1753)) x1773))
(assert (x1145 x1669))
(assert (=> (>= 10000 x1352) (= 0 (x1972 x1352))))
(assert (= (x2200 (x1869 64 x2263 6)) x2263))
(assert (=> (>= 10000 x2325) (= 0 (x1972 x2325))))
(assert (= (x2082 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)) x2056))
(assert (=> (<= x1216 10000) (= 0 (x1972 x1216))))
(assert (x1145 x1862))
(assert (x1145 x2152))
(assert (= (x634 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) x2721))
(assert (= (x1972 (x1452 x1705 x2133 x1773 x1568 x1753)) (x1452 x1705 x2133 x1773 x1568 x1753)))
(assert (x1145 x697))
(assert (x1145 x1758))
(assert (x1145 x2001))
(assert (x1145 x85))
(assert (= (x2649 (x1869 64 x25 12)) 12))
(assert (x1145 x1365))
(assert (= x2359 (x634 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359))))
(assert (< (x2647 x1669 x341 x2279 x1009 x1904 x40) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2649 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664)) x2520))
(assert (x1145 x1835))
(assert (= x660 (x6 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (x1145 x2758))
(assert (x1145 x1977))
(assert (x1145 x399))
(assert (x1145 x1373))
(assert (= x455 (x416 (x1452 x2210 x285 x1844 x455 x2346))))
(assert (x1145 x2044))
(assert (x1145 x685))
(assert (x746 x2156))
(assert (= (x1869 64 x936 36) (x1972 (x1869 64 x936 36))))
(assert (=> (<= x1086 10000) (= 0 (x1972 x1086))))
(assert (x2686 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1145 x1213))
(assert (= 0 (x1972 1461501637330902918203684832716283019655932542975)))
(assert (x1145 x1103))
(assert (= (x2649 (x1869 64 x2488 2)) 2))
(assert (< 10000 (x795 x887 x2437)))
(assert (x1145 x2561))
(assert (x813 x1144 2))
(assert (x1145 x2533))
(assert (= (x2158 (x1869 64 x2605 6)) 64))
(assert (= (x1972 (x1869 64 x675 1)) (x1869 64 x675 1)))
(assert (x1145 x1849))
(assert (= (or x2332 x1822) x119))
(assert (x1145 x1187))
(assert (x1145 x1586))
(assert (x1145 x895))
(assert (x1145 x1698))
(assert (= (x2200 (x1869 64 x2070 12)) x2070))
(assert (= (x2158 (x1869 x72 x1903 x291)) x72))
(assert (x1145 x953))
(assert (x1145 x1590))
(assert (x1145 x511))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x1669 x2559 x1338 x2181)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)))
(assert (x1145 x1458))
(assert (= (and (not x2128) x2174) x875))
(assert (= (x2158 (x795 x887 x2437)) x887))
(assert (x1145 x2083))
(assert (x2686 x857))
(assert (=> (>= 10000 x2469) (= 0 (x1972 x2469))))
(assert (x1145 x2656))
(assert (= x2323 (and x2299 x2091)))
(assert (x1145 x2161))
(assert (x1145 x2058))
(assert (=> (<= x1538 10000) (= (x1972 x1538) 0)))
(assert (x2116 127))
(assert (x1997 32 x33))
(assert (= (x2649 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) x1790))
(assert (x1145 x530))
(assert (= (x1328 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)) x2017))
(assert (= x984 (or x925 x1093 x812)))
(assert (x1145 x1107))
(assert (x1145 x2761))
(assert (=> (<= x636 10000) (= (x1972 x636) 0)))
(assert (x916 x594))
(assert (x2116 x1120))
(assert (x1145 x46))
(assert (= x2386 (x2649 (x43 x2210 x485 x2386 x87))))
(assert (x1624 x1888))
(assert (= x1307 (and x467 x2301)))
(assert (= (x1972 (x1452 x1267 x851 x15 x1847 x2767)) (x1452 x1267 x851 x15 x1847 x2767)))
(assert (x1145 x651))
(assert (= x1376 (x2158 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (x1624 x1005))
(assert (< (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2144))
(assert (= (x2158 (x2647 x442 x1784 x1538 x1103 x756 x169)) x442))
(assert (x1145 x836))
(assert (x1145 x538))
(assert (x1145 x2262))
(assert (x1145 x90))
(assert (x1145 x288))
(assert (x1145 x245))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x611 x298 x2020 x1782 x277 x477 x129 x888)))
(assert (= (x2649 (x1869 x72 x1903 x291)) x291))
(assert (x1145 x669))
(assert (= (x2200 (x611 x1376 x567 x980 x141 x1201 x2593 x576)) x567))
(assert (= (x2200 (x1869 x442 x558 x411)) x558))
(assert (= (x2158 (x2647 x1669 x341 x2279 x1009 x1904 x40)) x1669))
(assert (x130 3628442803))
(assert (x1145 x143))
(assert (x1145 x2040))
(assert (= (x2158 (x1869 64 x2040 10)) 64))
(assert (x1145 x625))
(assert (x912 x2696 128))
(assert (= x503 (x2649 (x1452 x2522 x2387 x503 x617 x2027))))
(assert (=> (<= x52 10000) (= (x1972 x52) 0)))
(assert (x2686 x1301))
(assert (x1145 x1578))
(assert (x1145 x2589))
(assert (=> (>= 10000 x1235) (= 0 (x1972 x1235))))
(assert (= (x2649 (x1869 64 x2605 6)) 6))
(assert (x1145 x729))
(assert (=> (>= 10000 x2569) (= 0 (x1972 x2569))))
(assert (x1145 x1665))
(assert (x1145 x1554))
(assert (= (x2200 (x1452 x1705 x2133 x1773 x1568 x1753)) x2133))
(assert (x1145 x832))
(assert (x1145 x2777))
(assert (x1145 x2102))
(assert (=> (>= 10000 x1854) (= (x1972 x1854) 0)))
(assert (x1145 x2554))
(assert (x1145 x2414))
(assert (=> (>= 10000 x1283) (= (x1972 x1283) 0)))
(assert (x1145 x80))
(assert (x1145 x2194))
(assert (x1145 x1338))
(assert (= (x2200 (x1452 x887 x1216 x152 x2281 x480)) x1216))
(assert (x1145 x1652))
(assert (x2116 x1906))
(assert (x1145 x1961))
(assert (= (=> (and (or (not x1513) x1513) (= (= x2578 0) x1513)) x1387) x2238))
(assert (x1145 x2204))
(assert (=> (>= 10000 x814) (= 0 (x1972 x814))))
(assert (not (x130 (x1869 64 x836 7))))
(assert (= x57 (x2649 (x2647 x887 x2569 x57 x2127 x1235 x911))))
(assert (= (x1972 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691)) (x611 x2210 x1153 x2537 x2626 x726 x460 x1691)))
(assert (< (x1452 x1705 x2133 x1773 x1568 x1753) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x282 0) (x1972 (x282 0))))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x752 (=> (and (= x2521 (x1967 x2081)) (= x2186 (x2023 (+ x2215 32))) (= (< 0 x2521) x2737) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1906) x1594) (= (x2023 (+ x1666 x1594)) x2465) (= x297 (x2023 (+ x2465 32))) (= (x2023 (+ x361 x1666)) x546) (= x1150 (x1230 (- x2465 x276))) (= (x2023 (+ 32 x402)) x2215) (= x1906 (x2023 (+ x361 31)))) (and (=> (not x2737) x2060) (=> (and (and (= (> x2521 32) x1614) (= (x646 x1725) x2188)) x2737) (and (=> (and (and (= (x2023 (+ 32 x1725)) x2088) (= x1417 (x2023 (+ 32 x297))) (= (> x2521 64) x2646) (= x127 (x2726 x2088))) x1614) (and (=> (not x2646) x2060) (=> (and (and (= x1695 (< 96 x2521)) (= x308 (x2023 (+ 64 x297))) (= x1107 (x1957 x90)) (= (x2023 (+ 64 x1725)) x90)) x2646) (and (=> (not x1695) x2060) (=> x1695 x991))))) (=> (not x1614) x2060)))))))
(assert (=> (>= 10000 x2049) (= (x1972 x2049) 0)))
(assert (not (x130 (x2647 x1376 x610 x1397 x46 x1321 x2136))))
(assert (=> (<= x2303 10000) (= 0 (x1972 x2303))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x887 x2437)))
(assert (x1145 x2207))
(assert (< 10000 (x795 x442 x371)))
(assert (= 0 (x1972 1341992515)))
(assert (x912 x1120 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2425))
(assert (=> (<= x911 10000) (= (x1972 x911) 0)))
(assert (= 103 (x2200 (x795 32 103))))
(assert (x1145 x798))
(assert (=> (>= 10000 x1670) (= 0 (x1972 x1670))))
(assert (x1145 x423))
(assert (x1145 x1792))
(assert (= x2181 (x416 (x43 x1669 x2559 x1338 x2181))))
(assert (=> (<= x1841 10000) (= (x1972 x1841) 0)))
(assert (x1145 x329))
(assert (=> (<= x1319 10000) (= (x1972 x1319) 0)))
(assert (> (x43 x72 x946 x1735 x714) 10000))
(assert (= (x2158 (x1869 64 x59 2)) 64))
(assert (= (x1452 x2522 x2387 x503 x617 x2027) (x1972 (x1452 x2522 x2387 x503 x617 x2027))))
(assert (< (x795 x72 x64) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1972 (x1869 64 x59 6)) (x1869 64 x59 6)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2647 x1267 x265 x2499 x159 x133 x2214)))
(assert (=> (<= x503 10000) (= 0 (x1972 x503))))
(assert (x1145 x2181))
(assert (not (x130 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664))))
(assert (= x1657 (and x340 x2399)))
(assert (x1145 x254))
(assert (x1145 x204))
(assert (x1145 x2070))
(assert (x1145 x859))
(assert (= (x2200 (x1869 64 x417 10)) x417))
(assert (< (x1869 64 x54 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x1972 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x1145 x1318))
(assert (= (and x409 x826) x2594))
(assert (= x942 (x416 (x1452 x1669 x122 x882 x942 x2))))
(assert (=> (<= x1484 10000) (= (x1972 x1484) 0)))
(assert (x1145 x320))
(assert (x1145 x1453))
(assert (= (and x590 x1956) x633))
(assert (x2233 (+ 31 x1450)))
(assert (x1145 x1659))
(assert (= x301 (and x1308 x2475)))
(assert (x1145 x546))
(assert (= (x2200 (x1869 64 x675 1)) x675))
(assert (x1145 x658))
(assert (= (x1972 (x1869 64 x530 10)) (x1869 64 x530 10)))
(assert (x1145 x2136))
(assert (not (x130 (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (>= 32 x1669) x1941 (ite (>= 64 x1669) x1460 (ite (<= x1669 96) x433 (ite (>= 128 x1669) x2486 (ite (<= x1669 160) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891))))))))))))
(assert (= x1369 (x2649 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (x1145 x1303))
(assert (= (x1452 x1376 x354 x626 x2677 x1042) (x1972 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (x1145 x1842))
(assert (= (x1972 (x1869 64 x1639 11)) (x1869 64 x1639 11)))
(assert (=> (>= 10000 x779) (= 0 (x1972 x779))))
(assert (< 10000 (x1869 64 x25 12)))
(assert (x1145 x477))
(assert (x1145 x2772))
(assert (x1145 x437))
(assert (x1145 x1593))
(assert (x1145 x918))
(assert (x2686 x2762))
(assert (x1145 x1653))
(assert (x1145 x2701))
(assert (x1145 x1277))
(assert (not (x130 (x282 0))))
(assert (< 10000 (x1869 64 x541 7)))
(assert (x1145 x1057))
(assert (x1145 x2393))
(assert (= x2039 (=> (and (= (x2023 (+ x1831 96)) x1341) (= (x2023 (+ 96 x201)) x2069) (= x2525 (not (< 128 x673))) (= (x1448 x1341) x2234)) (and x2525 x1344))))
(assert (x130 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (= (=> (and (= (x2023 (+ x2186 32)) x2461) (= (< 0 x982) x1425) (= (x2023 (+ x2521 x297)) x2583) (= x982 (x690 x1367)) (= x369 (x2023 (+ x2296 x297))) (= x2719 (x2023 (+ 31 x2521))) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2719) x2296) (= (x1230 (- x369 x276)) x1031)) (and (=> (not x1425) x1868) (=> (and x1425 (= x1063 (> x982 32))) (and (=> (not x1063) x1868) (=> (and x1063 (= (> x982 64) x2544)) (and (=> (not x2544) x1868) (=> (and x2544 (= x1059 (> x982 96))) (and (=> x1059 x2603) (=> (not x1059) x1868))))))))) x2060))
(assert (x1145 x2773))
(assert (x1145 x2328))
(assert (not (x130 (x2647 x298 x1300 x1476 x669 x2425 x890))))
(assert (x1145 x1309))
(assert (=> (>= 10000 x602) (= 0 (x1972 x602))))
(assert (not (x130 (x795 32 103))))
(assert (x1145 x978))
(assert (x2116 x700))
(assert (x912 x1588 128))
(assert (x1624 x1096))
(assert (= (x1972 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)) (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)))
(assert (x912 x2702 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1300))
(assert (x1145 x55))
(assert (= (x2649 (x43 x72 x946 x1735 x714)) x1735))
(assert (x2686 x594))
(assert (x1145 x1518))
(assert (x1145 x1537))
(assert (= (and x2166 x286) x28))
(assert (x1145 x1542))
(assert (x1145 x99))
(assert (= x1682 (x6 (x2647 x2522 x1837 x337 x666 x651 x1682))))
(assert (not (x130 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721))))
(assert (=> (<= x1340 10000) (= 0 (x1972 x1340))))
(assert (x1145 x518))
(assert (x1145 x14))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)))
(assert (x1145 x2325))
(assert (=> (>= 10000 x2020) (= 0 (x1972 x2020))))
(assert (= (and x773 x1219) x1223))
(assert (=> (<= x2229 10000) (= 0 (x1972 x2229))))
(assert (x1145 x2132))
(assert (= x2369 (x634 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369))))
(assert (x1145 x2563))
(assert (=> (>= 10000 x1476) (= 0 (x1972 x1476))))
(assert (not (x130 (x611 x72 x706 x1462 x1420 x2025 x48 x2431))))
(assert (= (x2649 (x1869 x1267 x373 x1654)) x1654))
(assert (x1145 x2664))
(assert (= (and x657 (not x473)) x131))
(assert (= (x6 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) x1761))
(assert (x1145 x2691))
(assert (=> (<= x2386 10000) (= 0 (x1972 x2386))))
(assert (x1145 x2294))
(assert (< 10000 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)))
(assert (> (x795 32 103) 10000))
(assert (x1145 x161))
(assert (< (x1869 64 x59 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1635 x1138))
(assert (x1145 x1517))
(assert (x1145 x2302))
(assert (x1145 x1610))
(assert (x1145 x2339))
(assert (< 10000 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)))
(assert (x1145 x2313))
(assert (x1145 x1646))
(assert (x856 x2696))
(assert (x1145 x1717))
(assert (x2233 256))
(assert (x1145 x613))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x298 x525)))
(assert (= (x2649 (x611 x298 x2020 x1782 x277 x477 x129 x888)) x1782))
(assert (= x981 (x2200 (x43 x298 x981 x2782 x88))))
(assert (x1145 x2014))
(assert (= x1086 (x2200 (x43 x1376 x1086 x870 x1094))))
(assert (x1145 x1568))
(assert (x1145 x2350))
(assert (x1145 x1085))
(assert (x1145 x1248))
(assert (= x2449 (or x2352 x1866)))
(assert (= (or x1565 x2419) x1884))
(assert (x1624 x2037))
(assert (x2116 1))
(assert (x1624 x1563))
(assert (= (and x2621 x930) x2451))
(assert (x1145 x368))
(assert (= x2210 (x2158 (x43 x2210 x485 x2386 x87))))
(assert (= x487 (and x1308 (not x2475))))
(assert (= (x2200 (x1869 64 x836 3)) x836))
(assert (= (x2158 (x1452 x2210 x285 x1844 x455 x2346)) x2210))
(assert (x1145 x1497))
(assert (x1145 x2295))
(assert (=> (<= x2765 10000) (= 0 (x1972 x2765))))
(assert (x1145 x1782))
(assert (x1145 x494))
(assert (x1828 (ite (not (= x1492 0)) 1 0)))
(assert (x1145 x1182))
(assert (= (and x2577 x717) x2394))
(assert (> (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444) 10000))
(assert (= x1641 (and (not x542) x986)))
(assert (=> (<= x1412 10000) (= 0 (x1972 x1412))))
(assert (= (x795 x1669 x1817) (x1972 (x795 x1669 x1817))))
(assert (x1624 x629))
(assert (x912 x2531 256))
(assert (= (x1972 (x2647 x1669 x341 x2279 x1009 x1904 x40)) (x2647 x1669 x341 x2279 x1009 x1904 x40)))
(assert (= (and (not x2737) x2080) x1755))
(assert (= (=> (and (= (x2023 (+ x1346 x110)) x1070) (= (x2023 (+ 32 x1070)) x1418) (= (>= 224 x1376) x171) (= (x1230 (- x1705 32)) x1376) (= x1705 (x1230 (- x1418 x1346))) (= x1870 (x2023 (+ x1346 x110)))) (and x171 (=> (and (= x870 (x1905 x612)) (= x1793 (x1905 x76)) (= x1370 (x2023 (+ x1346 128))) (= x591 (x2023 (+ x1346 160))) (= (x1905 x313) x141) (= (x2023 (+ x1346 96)) x1985) (= x961 (x2023 (+ x1346 64))) (= x2331 (x1869 x1376 x188 x1325)) (= (x2023 (+ 96 x1346)) x68) (= x188 (x1905 x1346)) (= x2224 (x2023 (+ 64 x1346))) (= (x2023 (+ 32 x1346)) x960) (= (x1905 x1346) x1086) (= (x282 0) x1465) (= (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834) x1742) (= (x1905 x1985) x1201) (= (x1905 x1346) x354) (= x626 (x1905 x960)) (= x1094 (x1905 x961)) (= x612 (x2023 (+ x1346 32))) (= x1225 (x1905 x1346)) (= (x2023 (+ 160 x1346)) x76) (= (x1905 x1389) x980) (= (x2023 (+ x1346 32)) x2467) (= (<= x1705 224) x2193) (= (x2023 (+ 32 x1346)) x2568) (= (x1452 x1376 x354 x626 x2677 x1042) x2707) (= (x1905 x2010) x1319) (= (x1905 x999) x448) (= (x1905 x1346) x610) (= (x1905 x1207) x1834) (= (x2023 (+ 64 x1346)) x1400) (= x1655 (x1905 x68)) (= (x2023 (+ 128 x1346)) x2348) (= (x1905 x2348) x2593) (= (x2023 (+ 64 x1346)) x1697) (= x313 (x2023 (+ x1346 64))) (= x1397 (x1905 x2467)) (= (x1905 x1400) x1340) (= (x611 x1376 x567 x980 x141 x1201 x2593 x576) x2236) (= x2010 (x2023 (+ x1346 128))) (= (x1905 x1370) x2136) (= x576 (x1905 x591)) (= (x1905 x2316) x1042) (= x1325 (x1905 x2568)) (= (x1905 x1346) x105) (= x1321 (x1905 x19)) (= x1389 (x2023 (+ x1346 32))) (= (x2023 (+ 96 x1346)) x2316) (= x1207 (x2023 (+ x1346 192))) (= x999 (x2023 (+ x1346 32))) (= x223 (x795 x1376 x105)) (= (x1905 x1697) x46) (= x1814 (ite (= x1376 0) x1465 (ite (<= x1376 32) x223 (ite (<= x1376 64) x2331 (ite (>= 96 x1376) x1553 (ite (>= 128 x1376) x2707 (ite (>= 160 x1376) x1749 (ite (<= x1376 192) x2236 (ite (>= 224 x1376) x1742 x2640))))))))) (= x1749 (x2647 x1376 x610 x1397 x46 x1321 x2136)) (= x567 (x1905 x1346)) (= (x2023 (+ x1346 96)) x19) (= (x43 x1376 x1086 x870 x1094) x1553) (= x2677 (x1905 x2224))) (and (=> (and (= (x2023 (+ 160 x1346)) x1871) (= (x1905 x1082) x2106) (= (x1905 x78) x2685) (= (x1905 x2053) x2229) (= x1458 (x2023 (+ x1346 160))) (= x201 (x2023 (+ x2644 32))) (= x1221 (x1905 x1277)) (= (x2023 (+ 96 x1346)) x674) (= x1082 (x2023 (+ 128 x1346))) (= (x2023 (+ 32 x1346)) x2392) (= x1773 (x1905 x365)) (= (x1905 x1458) x75) (= x1653 (x1905 x1346)) (= x2055 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) (= x673 (x1434 x153)) (= x1044 (x2023 (+ x1346 192))) (= (x1905 x534) x1753) (= x2303 (x1905 x1708)) (= (x2023 (+ x1346 32)) x365) (= (x1905 x1346) x1174) (= (x1905 x1871) x1444) (= x1008 (x43 x1705 x1653 x2303 x829)) (= x2785 (x1905 x1799)) (= x1158 (x1905 x674)) (= (x1905 x1044) x2359) (= (x1905 x1346) x2732) (= x2393 (x2023 (+ x1346 64))) (= x1799 (x2023 (+ 32 x1346))) (= x534 (x2023 (+ x1346 96))) (= x2053 (x2023 (+ 128 x1346))) (= (x2023 (+ x1346 160)) x2644) (= (x2023 (+ x1346 32)) x2249) (= (x795 x1705 x2732) x436) (= (x2023 (+ 32 x1346)) x1708) (= x2306 (x2023 (+ 96 x1346))) (= (> x673 0) x1204) (= x829 (x1905 x2535)) (= x2203 (x1905 x1485)) (= x78 (x2023 (+ x1346 32))) (= (x2023 (+ x1346 96)) x1322) (= x1790 (x1905 x1178)) (= (x1905 x1322) x255) (= (x2023 (+ x1346 64)) x1485) (= x2570 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444)) (= x1969 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) (= (x2023 (+ 64 x1346)) x2535) (= x1626 (x1905 x1346)) (= x1178 (x2023 (+ x1346 32))) (= x1277 (x2023 (+ x1346 128))) (= (x1905 x2306) x1118) (= (x1452 x1705 x2133 x1773 x1568 x1753) x735) (= x745 (x1905 x2393)) (= (x2023 (+ 64 x1346)) x1558) (= (x282 0) x2300) (= (x2023 (+ x1346 64)) x685) (= x2133 (x1905 x1346)) (= (x1905 x2249) x762) (= x2057 (x1869 x1705 x2452 x762)) (= x2452 (x1905 x1346)) (= x1854 (x1905 x685)) (= (x1905 x1346) x938) (= x1568 (x1905 x1558)) (= x214 (x1869 64 x2589 (ite (= x1705 0) x2300 (ite (<= x1705 32) x436 (ite (>= 64 x1705) x2057 (ite (<= x1705 96) x1008 (ite (<= x1705 128) x735 (ite (>= 160 x1705) x1969 (ite (<= x1705 192) x2570 (ite (>= 224 x1705) x2055 x1252))))))))))) (and (=> (not x1204) x1344) (=> (and (and (= (x47 x1831) x2232) (= (< 32 x673) x2475)) x1204) (and (=> (and x2475 (and (= x2016 (< 64 x673)) (= (x2023 (+ 32 x1831)) x573) (= (x2023 (+ x201 32)) x2211) (= x502 (x2515 x573)))) (and (=> (and x2016 (and (= x200 (x1982 x1795)) (= x469 (x2023 (+ x201 64))) (= x321 (> x673 96)) (= x1795 (x2023 (+ x1831 64))))) (and (=> x321 x2039) (=> (not x321) x1344))) (=> (not x2016) x1344))) (=> (not x2475) x1344))))) x2193)))) x2658))
(assert (x1624 x526))
(assert (x1145 x1558))
(assert (= (or (and x2526 (not x1425)) (and (not x2544) x2380) x261 (and (not x1059) x2415) (and (not x1063) x2216)) x243))
(assert (x856 x1431))
(assert (x1145 x507))
(assert (x1145 x1705))
(assert (x1145 x1675))
(assert (x1145 x1551))
(assert (x1145 x1837))
(assert (x1145 x44))
(assert (x1145 x701))
(assert (= (and (not x340) x2399) x1385))
(assert (x1145 x560))
(assert (= (x6 (x37 x298 x254 x1484 x374 x1025 x789 x304 x97)) x789))
(assert (x1145 x2210))
(assert (x1145 x2441))
(assert (x1145 x564))
(assert (= (x6 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) x2229))
(assert (x1145 x1144))
(assert (x1145 x127))
(assert (= x1716 (x2649 (x1869 x1669 x268 x1716))))
(assert (x1997 32 x11))
(assert (= (x1972 (x795 x2522 x2469)) (x795 x2522 x2469)))
(assert (= x470 (or x1084 x2012)))
(assert (< 10000 (x1869 x72 x1903 x291)))
(assert (x1145 x113))
(assert (= (x1972 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)))
(assert (x1145 x566))
(assert (x813 x705 2))
(assert (x1145 x2445))
(assert (=> (>= 10000 x1201) (= (x1972 x1201) 0)))
(assert (=> (>= 10000 x247) (= 0 (x1972 x247))))
(assert (=> (>= 10000 x2487) (= 0 (x1972 x2487))))
(assert (= x2429 (and x252 (not x2585))))
(assert (x1145 x760))
(assert (x1145 x2263))
(assert (x1145 x2110))
(assert (= 3 (x2649 (x1869 64 x541 3))))
(assert (=> (>= 10000 x1848) (= (x1972 x1848) 0)))
(assert (x1145 x22))
(assert (= (=> (= (+ 292 x2313) x1117) x86) x370))
(assert (x1145 x1992))
(assert (x1145 x911))
(assert (> (x1869 64 x1122 6) 10000))
(assert (= (x1328 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x2607))
(assert (x1145 x2739))
(assert (x1145 x1156))
(assert (= (x2082 (x2647 x442 x1784 x1538 x1103 x756 x169)) x756))
(assert (x1145 x854))
(assert (x1145 x1029))
(assert (= (and x1692 (not x1285)) x2419))
(assert (= 0 (x1972 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (x1145 x1785))
(assert (= (x1972 (x795 32 104)) (x795 32 104)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x417 10)))
(assert (= (and (not x1075) x1702) x1084))
(assert (x1145 x1130))
(assert (x1145 x1259))
(assert (x1145 x604))
(assert (= (=> (and (= (x2489 x1149) x1523) (= x278 (not (< 32 x1796)))) (and (=> (= x1134 32) x275) x278)) x1111))
(assert (x1145 x336))
(assert (x1145 x244))
(assert (x1145 x2477))
(assert (x2233 (+ x1566 31)))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1145 x72))
(assert (x1145 x2602))
(assert (= (x2082 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)) x255))
(assert (x1145 x480))
(assert (x1145 x1620))
(assert (x1145 x1283))
(assert (x1997 32 x290))
(assert (x1145 x802))
(assert (= x1844 (x2649 (x1452 x2210 x285 x1844 x455 x2346))))
(assert (= x2677 (x416 (x1452 x1376 x354 x626 x2677 x1042))))
(assert (=> (>= 10000 x164) (= (x1972 x164) 0)))
(assert (x1145 x942))
(assert (=> (>= 10000 x666) (= 0 (x1972 x666))))
(assert (=> (>= 10000 x442) (= 0 (x1972 x442))))
(assert (x1145 x2408))
(assert (x1145 x2215))
(assert (< 10000 (x1869 64 x54 0)))
(assert (< 10000 (x2647 x1669 x341 x2279 x1009 x1904 x40)))
(assert (= (and x603 x2736) x219))
(assert (x1145 x1437))
(assert (x1145 x1809))
(assert (= (=> (and (= (x691 x2024) x1914) (= (x2023 (+ 96 x1666)) x2668) (= (not (< 128 x361)) x1282) (= x2024 (x2023 (+ x1936 96)))) (and x1282 x752)) x2746))
(assert (x1145 x1871))
(assert (x1145 x1412))
(assert (= (and x1063 x2216) x2380))
(assert (x1145 x2461))
(assert (= (x2649 (x1869 64 x675 1)) 1))
(assert (=> (<= x2488 10000) (= (x1972 x2488) 0)))
(assert (= (and x343 x178) x1996))
(assert (x1145 x137))
(assert (not (x130 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399))))
(assert (and (= (x346 27 3) 81) (= (x346 3 3) 9) (= 81 (x346 9 9)) (= (x346 9 3) 27)))
(assert (= 64 (x2158 (x1869 64 x417 10))))
(assert (= x973 (not (and (<= x497 127) (= x1757 (+ 32 x85)) (<= 1 x1689) (= (+ 31 x2019) x1728) (< x85 x1701) (= x1701 (+ x85 x2491 32)) (= x1125 (+ x778 x1450)) (= x1104 x1989) (= x553 (x1237 (+ x1450 31) 32)) x1677 (= x675 x1835) (= x1809 (x242 x675)) (>= x1809 1) (= x2680 128) (= x1021 164) (= x778 (+ x2019 32)) (= x1677 (= (x2675 132) x1796)) (= (x1237 (+ x1259 31) 32) x1540) (not (< x2417 x907)) (= (x1721 x85) x1580) (= (x1230 (- x464 128)) x793) (>= x2417 196) (= x2446 x1804) (<= x1259 18446744073709551615) (= x393 (x1869 64 x2040 10)) (= false x676) (= (+ x1450 x1757) x100) (= (+ 4 x1804) x2019) (= x1973 false) (>= x793 196) (= x2040 (x1314 x1757)) (<= x2417 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 18446744073709551615 x1450) (= (x242 x662) x1689) (< x1728 x2417) (= x21 128) (<= x497 127) (<= x793 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x793 x2417) (= x1450 (x2591 x2019)) (= x1770 x2362) (= x2491 (* 32 x553)) (= (* 32 x1540) x2089) (not (> x1125 x2417)) (= 128 x517) (= x1436 1722637450) (= x85 (+ 160 x2089)) (= (x2591 132) x1259) (= x1248 46442213778836376901753710468615024683576072693327014300388496345503314739200) (= x907 (+ 164 x1259)) (>= x1580 32) (<= x1580 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))
(assert (x1145 x1569))
(assert (=> (>= 10000 x156) (= 0 (x1972 x156))))
(assert (not (x130 (x43 x72 x946 x1735 x714))))
(assert (x1145 x576))
(assert (= x1167 (and x2672 x1007)))
(assert (x1145 x2068))
(assert (not (x130 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (= (x1869 64 x840 36) (x1972 (x1869 64 x840 36))))
(assert (< (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (<= x1669 32) x1941 (ite (<= x1669 64) x1460 (ite (<= x1669 96) x433 (ite (<= x1669 128) x2486 (ite (>= 160 x1669) x1377 (ite (<= x1669 192) x1830 (ite (>= 224 x1669) x1680 x1891))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2275))
(assert (= x1655 (x2082 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (= x1444 (x1328 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (x813 (+ 31 x1267) 32))
(assert (= (x1972 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (not (x130 (x1869 x2210 x1490 x1283))))
(assert (x1145 x2315))
(assert (= (and (not x2016) x301) x499))
(assert (x1145 x118))
(assert (x1145 x2206))
(assert (x1145 x2052))
(assert (= x477 (x2082 (x611 x298 x2020 x1782 x277 x477 x129 x888))))
(assert (> (x795 x1705 x2732) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 32 x2130)))
(assert (x1145 x1603))
(assert (= 64 (x2158 (x1869 64 x1617 10))))
(assert (x1145 x2278))
(assert (x1145 x2291))
(assert (x1145 x2185))
(assert (= x61 (and x696 x823)))
(assert (x1145 x629))
(assert (x1997 1000000000 x1584))
(assert (< (x1869 64 x659 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2480))
(assert (< 10000 (x2647 x887 x2569 x57 x2127 x1235 x911)))
(assert (x1145 x1550))
(assert (x1145 x107))
(assert (< 10000 (x2647 x72 x602 x77 x956 x760 x2487)))
(assert (= (x2158 (x1452 x298 x636 x803 x468 x2058)) x298))
(assert (= (x1972 2001815235) 0))
(assert (=> (>= 10000 x976) (= (x1972 x976) 0)))
(assert (x1145 x1431))
(assert (< 10000 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834)))
(assert (=> (>= 10000 x1735) (= (x1972 x1735) 0)))
(assert (not (x130 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442))))
(assert (=> (<= x2640 10000) (= 0 (x1972 x2640))))
(assert (x1145 x460))
(assert (=> (<= x2109 10000) (= 0 (x1972 x2109))))
(assert (x1145 x1174))
(assert (not (x130 (x1869 64 x2622 10))))
(assert (x1145 x2066))
(assert (x1145 x151))
(assert (= (and x451 (not x186)) x65))
(assert (= (or x1493 x2404 x65 x438 x2261) x2080))
(assert (= (x416 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x46))
(assert (=> (>= 10000 x265) (= (x1972 x265) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 x1376 x105)))
(assert (= (or x389 x1126 x1198 x2367 x1885) x1692))
(assert (= x925 (or x1931 x299)))
(assert (=> (>= 10000 x662) (= (x1972 x662) 0)))
(assert (x2686 x231))
(assert (x1145 x139))
(assert (x1145 x1856))
(assert (= x132 (and (not x2740) x2482)))
(assert (= (x2200 (x43 x2210 x485 x2386 x87)) x485))
(assert (x1145 x212))
(assert (x1145 x880))
(assert (x1145 x1834))
(assert (x1145 x1231))
(assert (= (x2200 (x1869 64 x541 3)) x541))
(assert (x1145 x1446))
(assert (=> (<= x1420 10000) (= (x1972 x1420) 0)))
(assert (x1145 x1469))
(assert (x1624 x1731))
(assert (x1145 x2053))
(assert (x2233 x1144))
(assert (x1145 x1051))
(assert (= (and x528 x2540) x2247))
(assert (x1145 x764))
(assert (= (x2158 (x43 x887 x1738 x191 x392)) x887))
(assert (x1145 x2211))
(assert (=> (>= 10000 x2369) (= (x1972 x2369) 0)))
(assert (= (x43 x1267 x156 x1532 x114) (x1972 (x43 x1267 x156 x1532 x114))))
(assert (< (x1452 x2210 x285 x1844 x455 x2346) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2174 x2128) x1172))
(assert (x912 x2762 32))
(assert (x1624 x854))
(assert (=> (<= x468 10000) (= (x1972 x468) 0)))
(assert (x1145 x1658))
(assert (= 0 (x1972 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (= (=> (and (= x1882 (x2177 x2441)) (= x2297 (x1230 (- x1925 (mod (ite (< x1857 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= 164 x205) x492 (>= x204 1) (= 1914215 x2684) (= x314 (x242 x675)) (= x1267 (x2177 132)) (= x492 (= x1667 (x800 132))) (= x2189 false) (>= x314 1) (= (ite (> x1925 0) x2696 (x1335 127 x2696)) x1857) (<= x204 1461501637330902918203684832716283019655932542975) (>= x1563 196) (= (x1230 (- x1127 128)) x2445) (= x2130 (x1869 64 x541 3)) (= (* x1505 32) x2152) (= x2567 false) (<= 1 x2014) (>= x2445 196) (>= 18446744073709551615 x1267) (>= 127 x1326) (= (+ x1267 164) x939) (or (= 1 x2297) (= x2297 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (+ x2152 160) x1862) (= (+ x2062 x1882) x104) (= x2683 128) (= x1088 x1165) (<= x2445 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1620 128) (= (+ x895 4) x2441) (= (= 0 x1857) x82) (> x1563 x2315) (= x2696 (x1237 x705 2)) (= x2014 (x242 x1381)) (not (< x1563 x104)) (= x204 x1835) (= x2716 x541) (= (+ x2441 31) x2315) (= (x2439 x2130) x705) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1563) (= (x1335 1 x705) x1925) (= x1505 (x1237 (+ 31 x1857) 32)) (= x895 x725) (<= x1326 127) (= x2062 (+ 32 x2441)) (= x1563 x2445) (= x781 51607134309459761954548520284799282329936326410793501951915747293203005440) (>= 18446744073709551615 x1882) (not (> x939 x1563))) (and (=> x82 x2119) (=> (and (= (> x1857 31) x248) (not x82)) (and (=> (and x248 (and (= (+ 1 x1017) x1498) (= (> x1453 192) x614) (= x1017 (x795 32 x2130)) (= (+ x1857 160) x1453) (= (x1384 x1017) x963))) (and (=> (not x614) x1330) (=> x614 x1040))) (=> (and (and (= (x2439 x2130) x1988) (= x1990 (* x196 256)) (= (x1237 x1988 256) x196)) (not x248)) x2119))))) x2752))
(assert (= (x2082 (x2647 x887 x2569 x57 x2127 x1235 x911)) x1235))
(assert (x1145 x1134))
(assert (< 10000 (x1869 x1267 x373 x1654)))
(assert (=> (<= x374 10000) (= (x1972 x374) 0)))
(assert (x1145 x2638))
(assert (x1145 x2140))
(assert (x1145 x1971))
(assert (= (x1328 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664)) x1664))
(assert (= (and x826 (not x409)) x1917))
(assert (= (x2158 (x2647 x2522 x1837 x337 x666 x651 x1682)) x2522))
(assert (= (x2082 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x225))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616)))
(assert (=> (>= 10000 x1847) (= (x1972 x1847) 0)))
(assert (x1145 x2760))
(assert (not (x130 (x795 32 104))))
(assert (x130 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (not (x130 (x43 x2210 x485 x2386 x87))))
(assert (x1145 x662))
(assert (x1145 x145))
(assert (=> (>= 10000 x2677) (= 0 (x1972 x2677))))
(assert (= (=> (and (= x1124 (> x845 0)) (= x2701 (x2023 (+ x2529 x2032))) (= x1409 (x1230 (- x2701 x1372))) (= (x2023 (+ x2361 x2032)) x2690) (= (x2023 (+ x2701 32)) x1900) (= (x2340 x1602) x845) (= x2036 (x2023 (+ x953 32))) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2156) x2529) (= (x2023 (+ 31 x2361)) x2156) (= (x2023 (+ 32 x2036)) x2549)) (and (=> (not x1124) x1877) (=> (and x1124 (and (= (< 32 x845) x2347) (= (x967 x2720) x2074))) (and (=> (and (and (= (> x845 64) x2621) (= x1815 (x2023 (+ 32 x2720))) (= (x837 x1815) x2001) (= x2086 (x2023 (+ x1900 32)))) x2347) (and (=> (not x2621) x1877) (=> (and x2621 (and (= x1443 (> x845 96)) (= (x2023 (+ 64 x1900)) x507) (= (x2639 x2505) x123) (= x2505 (x2023 (+ 64 x2720))))) (and (=> x1443 x1510) (=> (not x1443) x1877))))) (=> (not x2347) x1877))))) x664))
(assert (x1997 32 x2669))
(assert (x912 x857 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1869 64 x579 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1624 x1618))
(assert (= (x6 (x2647 x1705 x1626 x2685 x2203 x1158 x2106)) x2106))
(assert (x1145 x2660))
(assert (not (x130 (x1869 x1376 x188 x1325))))
(assert (=> (<= x2040 10000) (= (x1972 x2040) 0)))
(assert (x1145 x411))
(assert (= (x2649 (x1869 64 x59 6)) 6))
(assert (x1145 x448))
(assert (=> (>= 10000 x480) (= (x1972 x480) 0)))
(assert (= x675 (x2200 (x1869 64 x675 2))))
(assert (x1145 x2479))
(assert (x1145 x2401))
(assert (= 0 (x1972 18446744073709551615)))
(assert (x1145 x1444))
(assert (x1145 x2757))
(assert (x1145 x1014))
(assert (x1145 x341))
(assert (x1145 x19))
(assert (x1828 x1540))
(assert (= x2593 (x6 (x611 x1376 x567 x980 x141 x1201 x2593 x576))))
(assert (x1145 x1770))
(assert (x1145 x1404))
(assert (= x1267 (x2158 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399))))
(assert (x1145 x595))
(assert (= x575 (=> (and (= (not (> x2523 32)) x1264) (= (x1270 x421) x863)) (and (=> (= 32 x2284) x2220) x1264))))
(assert (x1145 x2155))
(assert (x1145 x806))
(assert (x1145 x1158))
(assert (x813 x1120 2))
(assert (x1145 x1678))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x152 10000) (= (x1972 x152) 0)))
(assert (= (x1972 (x2647 x2210 x1203 x532 x2500 x759 x2765)) (x2647 x2210 x1203 x532 x2500 x759 x2765)))
(assert (= x1877 (=> (and (and (= x594 (x744 x648)) (<= 1 x1625) (= (x1335 26959946667150639794667015087019630673637144422540572481103610249215 x594) x2161) (not (= x1625 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2739) (not (= x1625 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2739) (<= x1625 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1625 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2023 (+ x845 31)) x700) (<= x2739 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1625) (= x1856 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639904 x700)) (> x1346 x1625) (= x703 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x2161)) (> x1625 x2739) (= x648 (x2023 (+ 32 x2739))) (= (> x1546 0) x1285) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x1625)) (= (x1230 (- x1625 x2739)) x1704) (= (x2023 (+ x1625 32)) x1437) (= (x2023 (+ x1625 192)) x1346) (= (x1230 (- x1704 32)) x2108) (= (x2023 (+ x1856 x1900)) x1625) (= (x2747 x2739) x1390) (= (x2023 (+ x1900 x845)) x1787)) (or (and (and (= x91 x112) (= x1859 (+ x25 1)) (= x1120 x2077) (= x1144 x2728) (= x1541 x662) (= x2258 x1383)) (not x1285)) (and x1285 (and (= x2028 x2077) (= x1502 x1859) (>= 4294967295 x854) (= x1309 x2728) (= x2258 x560) (= (= x1582 (x1470 x675)) x2141) (= x1582 (x1662 x675)) (= x91 x1062) (= (x1662 x675) x1849) (= (>= (x1470 x675) x1849) x853) x2141 (= x1541 x978) x853)))) x2201)))
(assert (= x1616 (=> (= (= x585 0) x2192) (and (=> (not x2192) x848) (=> (and (= 1 x585) x2192) x688)))))
(assert (x1145 x751))
(assert (< (x611 x1669 x720 x681 x1632 x80 x1159 x2042) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1566))
(assert (=> (<= x1462 10000) (= (x1972 x1462) 0)))
(assert (=> (>= 10000 x2181) (= 0 (x1972 x2181))))
(assert (x1145 x59))
(assert (= x315 (x2200 (x1869 x298 x315 x1247))))
(assert (=> (<= x1673 10000) (= 0 (x1972 x1673))))
(assert (= 2 (x2649 (x1869 64 x675 2))))
(assert (x1145 x428))
(assert (=> (>= 10000 x1183) (= (x1972 x1183) 0)))
(assert (= x1325 (x2649 (x1869 x1376 x188 x1325))))
(assert (=> (<= x2559 10000) (= 0 (x1972 x2559))))
(assert (x1145 x1031))
(assert (x1145 x177))
(assert (= 36 (x2649 (x1869 64 x659 36))))
(assert (x1145 x2223))
(assert (= (x6 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834)) x1319))
(assert (= x1904 (x2082 (x2647 x1669 x341 x2279 x1009 x1904 x40))))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (= (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369) (x1972 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369))))
(assert (x1145 x2410))
(assert (x1145 x1407))
(assert (=> (<= x927 10000) (= (x1972 x927) 0)))
(assert (x2116 x2531))
(assert (=> (<= x1738 10000) (= (x1972 x1738) 0)))
(assert (< (x1869 64 x2325 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x737 (x2023 (+ x1367 32))) (= (< 0 x2578) x542) (= x914 (ite (> x1129 150) 150 x1129))) (and (=> (not x542) x2659) (=> x542 x1574))) x1387))
(assert (= 64 (x2158 (x1869 64 x2070 12))))
(assert (= (x2158 (x1452 x1669 x122 x882 x942 x2)) x1669))
(assert (= (x2649 (x1869 64 x2589 (ite (= 0 x1705) x2300 (ite (>= 32 x1705) x436 (ite (>= 64 x1705) x2057 (ite (<= x1705 96) x1008 (ite (<= x1705 128) x735 (ite (<= x1705 160) x1969 (ite (>= 192 x1705) x2570 (ite (<= x1705 224) x2055 x1252)))))))))) (ite (= 0 x1705) x2300 (ite (<= x1705 32) x436 (ite (>= 64 x1705) x2057 (ite (>= 96 x1705) x1008 (ite (>= 128 x1705) x735 (ite (<= x1705 160) x1969 (ite (>= 192 x1705) x2570 (ite (<= x1705 224) x2055 x1252))))))))))
(assert (x1145 x1623))
(assert (x1145 x1252))
(assert (x1145 x655))
(assert (> (x1869 64 x1088 (ite (= x1669 0) x1304 (ite (<= x1669 32) x1941 (ite (<= x1669 64) x1460 (ite (<= x1669 96) x433 (ite (>= 128 x1669) x2486 (ite (>= 160 x1669) x1377 (ite (>= 192 x1669) x1830 (ite (>= 224 x1669) x1680 x1891))))))))) 10000))
(assert (= x1931 (and x619 (not x614))))
(assert (= (x2200 (x2647 x2210 x1203 x532 x2500 x759 x2765)) x1203))
(assert (= x1330 x2119))
(assert (= x599 (=> (and (= (x2023 (+ 96 x2032)) x1179) (= x1020 (not (> x2361 128))) (= x2338 (x2023 (+ 96 x1831))) (= (x768 x2338) x262)) (and x664 x1020))))
(assert (= (and (not x2255) x1307) x2771))
(assert (x1145 x745))
(assert (= x2626 (x416 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (x1145 x821))
(assert (x1145 x465))
(assert (< (x1869 64 x836 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2603 (=> (= (not (< 128 x982)) x2679) (and x2679 x1868))))
(assert (= x23 (and x2633 x763)))
(assert (x1145 x612))
(assert (= (x416 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)) x655))
(assert (= x1040 (=> (and (= x1516 (not (< 224 x1453))) (= x2072 (x1384 x1498))) (and x1516 x1330))))
(assert (x1145 x1379))
(assert (x2233 (+ x1882 31)))
(assert (x1145 x2002))
(assert (x1145 x424))
(assert (= x1414 (=> (and (= x327 (x2023 (+ 96 x1346))) (= (not (< 128 x110)) x1935) (= x584 (x975 x1986)) (= (x2023 (+ 96 x1831)) x1986)) (and x1935 x2658))))
(assert (x1145 x1521))
(assert (x1145 x434))
(assert (= (x2649 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)) x1462))
(assert (x1145 x1302))
(assert (x1145 x2529))
(assert (x1828 (ite (not (= 0 x2610)) 1 0)))
(assert (=> (>= 10000 x2027) (= (x1972 x2027) 0)))
(assert (=> (>= 10000 x230) (= (x1972 x230) 0)))
(assert (x1145 x1348))
(assert (x1145 x2469))
(assert (x1145 x2010))
(assert (=> (<= x159 10000) (= (x1972 x159) 0)))
(assert (x1145 x755))
(assert (not (x130 (x795 32 x2107))))
(assert (= (x2158 (x795 x1267 x347)) x1267))
(assert (= x956 (x416 (x2647 x72 x602 x77 x956 x760 x2487))))
(assert (x1145 x666))
(assert (x130 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (x2649 (x1452 x887 x1216 x152 x2281 x480)) x152))
(assert (= x887 (x2158 (x1452 x887 x1216 x152 x2281 x480))))
(assert (=> (>= 10000 x2387) (= (x1972 x2387) 0)))
(assert (x1145 x902))
(assert (x1145 x845))
(assert (= (x2158 (x611 x298 x2020 x1782 x277 x477 x129 x888)) x298))
(assert (x1145 x1604))
(assert (= (x1972 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x1145 x103))
(assert (x1145 x426))
(assert (= (x1972 (x1869 64 x2605 6)) (x1869 64 x2605 6)))
(assert (= (or x487 x499 x2598 x2104 x772) x472))
(assert (x1828 (ite (not (= x2760 0)) 1 0)))
(assert (x1145 x264))
(assert (x1145 x2336))
(assert (x1145 x2576))
(assert (x1145 x2545))
(assert (= x2565 (x2649 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (=> (>= 10000 x1639) (= (x1972 x1639) 0)))
(assert (= 64 (x2158 (x1869 64 x936 36))))
(assert (x1145 x822))
(assert (= (x1869 64 x2589 (ite (= 0 x1705) x2300 (ite (>= 32 x1705) x436 (ite (>= 64 x1705) x2057 (ite (>= 96 x1705) x1008 (ite (>= 128 x1705) x735 (ite (<= x1705 160) x1969 (ite (<= x1705 192) x2570 (ite (<= x1705 224) x2055 x1252))))))))) (x1972 (x1869 64 x2589 (ite (= x1705 0) x2300 (ite (>= 32 x1705) x436 (ite (>= 64 x1705) x2057 (ite (<= x1705 96) x1008 (ite (<= x1705 128) x735 (ite (<= x1705 160) x1969 (ite (>= 192 x1705) x2570 (ite (>= 224 x1705) x2055 x1252))))))))))))
(assert (= (x611 x442 x995 x2565 x1189 x1290 x2270 x987) (x1972 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (x2116 x231))
(assert (=> (<= x532 10000) (= 0 (x1972 x532))))
(assert (= x2598 (and x1032 (not x321))))
(assert (= x298 (x2158 (x1869 x298 x315 x1247))))
(assert (x1828 (ite (not (= 0 x1675)) 1 0)))
(assert (not (x130 (x1869 x2522 x1468 x1922))))
(assert (x1145 x2562))
(assert (x1145 x2062))
(assert (x1145 x1689))
(assert (= (x2649 (x1869 64 x530 10)) 10))
(assert (x1145 x2108))
(assert (= (x6 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) x1159))
(assert (x1145 x1218))
(assert (x1145 x958))
(assert (x1145 x104))
(assert (x1145 x1208))
(assert (= x1670 (x2649 (x611 x887 x2600 x1670 x655 x2056 x822 x1623))))
(assert (x1145 x720))
(assert (x1145 x1815))
(assert (> (x43 x442 x1352 x702 x1927) 10000))
(assert (x1145 x2487))
(assert (= (x2647 x1705 x1626 x2685 x2203 x1158 x2106) (x1972 (x2647 x1705 x1626 x2685 x2203 x1158 x2106))))
(assert (= (x43 x2210 x485 x2386 x87) (x1972 (x43 x2210 x485 x2386 x87))))
(assert (not (x130 (x1869 64 x2605 2))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x1122 6)))
(assert (x2116 x1431))
(assert (= 12 (x2649 (x1869 64 x220 12))))
(assert (x1145 x781))
(assert (x1145 x1042))
(assert (x2686 x2531))
(assert (=> (>= 10000 x88) (= (x1972 x88) 0)))
(assert (x1145 x995))
(assert (x813 (+ x2210 31) 32))
(assert (= (x2200 (x795 32 x2130)) x2130))
(assert (x1145 x1476))
(assert (= x157 (and x1683 (not x1695))))
(assert (x1145 x2260))
(assert (< (x1869 64 x836 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1753))
(assert (x1145 x2221))
(assert (= x1694 (or x1829 x1)))
(assert (= x1632 (x416 (x611 x1669 x720 x681 x1632 x80 x1159 x2042))))
(assert (=> (>= 10000 x2270) (= (x1972 x2270) 0)))
(assert (x1145 x1670))
(assert (x746 x700))
(assert (= x2522 (x2158 (x1869 x2522 x1468 x1922))))
(assert (x1145 x2326))
(assert (=> (>= 10000 x1623) (= 0 (x1972 x1623))))
(assert (x1145 x922))
(assert (x1145 x1104))
(assert (x1145 x686))
(assert (x1145 x1860))
(assert (= x1189 (x416 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (> (x1869 x1705 x2452 x762) 10000))
(assert (x1145 x97))
(assert (x1145 x945))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 x1669 x268 x1716)))
(assert (x1145 x2019))
(assert (=> (>= 10000 x2206) (= 0 (x1972 x2206))))
(assert (x1145 x1650))
(assert (not (x130 (x795 x72 x64))))
(assert (= x466 (and (not x2577) x717)))
(assert (=> (>= 10000 x1644) (= 0 (x1972 x1644))))
(assert (x1145 x770))
(assert (x1145 x304))
(assert (x1145 x2125))
(assert (= (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841) (x1972 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841))))
(assert (x1145 x963))
(assert (x1145 x887))
(assert (> (x1869 64 x417 10) 10000))
(assert (x1145 x1215))
(assert (= (or x2655 x300 x1254 x1054 x432) x2341))
(assert (= (x6 (x2647 x2210 x1203 x532 x2500 x759 x2765)) x2765))
(assert (x1145 x527))
(assert (x1145 x298))
(assert (> (x611 x298 x2020 x1782 x277 x477 x129 x888) 10000))
(assert (x1803 x2531))
(assert (x1145 x1154))
(assert (x1145 x1076))
(assert (x1145 x1233))
(assert (=> (>= 10000 x347) (= (x1972 x347) 0)))
(assert (x1145 x220))
(assert (= (=> (and (= x443 (x1619 x1312)) (= (+ 160 x841) x153) (= x231 (x1237 x2665 2)) (= x2575 x604) (>= 18446744073709551615 x443) (= x2107 (x1869 64 x836 3)) (= (x1237 (+ 31 x1566) 32) x1575) (= x979 (x1230 (- x406 (mod (ite (> 32 x1566) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x250 127) (= x2761 (x242 x675)) x1147 (= x2665 (x2439 x2107)) (<= 196 x2741) (= x1835 x2339) (= x798 (+ x1312 32)) (= x67 (x242 x662)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x979) (= x979 1)) (not (> x2222 x2741)) (= 1914215 x2748) (= false x947) (= (x1230 (- x1953 128)) x173) (>= x2761 1) (not (> x2050 x2741)) (>= x173 196) (= (= x1566 0) x340) (= x1147 (= x2610 (x2390 132))) (= x1566 (ite (> x406 0) x231 (x1335 127 x231))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x173) (= 164 x2047) (< x1323 x2741) (= (+ x2210 164) x2222) (= x406 (x1335 1 x2665)) (= x2589 x1029) (= x1312 (+ x604 4)) (= x1475 x836) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2741) (= x1323 (+ 31 x1312)) (<= x250 127) (= 51607134309459761954548520284799282329936326410793501951915747293203005440 x545) (>= 18446744073709551615 x2210) (= 128 x2076) (= x841 (* x1575 32)) (= 128 x162) (= x2050 (+ x798 x443)) (= (x1619 132) x2210) (>= x67 1) (= false x988) (= x173 x2741)) (and (=> x340 x1138) (=> (and (not x340) (= x190 (> x1566 31))) (and (=> (and (and (= (x1384 x1362) x628) (= (x795 32 x2107) x1362) (= (< 192 x1943) x773) (= x2750 (+ 1 x1362)) (= (+ x1566 160) x1943)) x190) (and (=> (not x773) x1635) (=> x773 x1851))) (=> (and (and (= (x1237 x2140 256) x166) (= x2052 (* 256 x166)) (= (x2439 x2107) x2140)) (not x190)) x1138))))) x1315))
(assert (=> (>= 10000 x1650) (= 0 (x1972 x1650))))
(assert (= (x2158 (x43 x442 x1352 x702 x1927)) x442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x675 2)))
(assert (x912 x700 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2528))
(assert (x1145 x176))
(assert (= x342 (=> (and (= x730 x1231) (= x857 x1930) (= x2326 x2212) (= x1921 x54) (= x1381 x1090) (= x605 x1306) (= x326 x724) (= x2350 x58) (= x1821 x2134) (= x1548 x204) (= x2531 x1224) (= x168 x1584) (= x1092 x2328)) x199)))
(assert (x1145 x2766))
(assert (x1145 x476))
(assert (x1145 x2069))
(assert (< (x1869 64 x840 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2716))
(assert (=> (<= x1784 10000) (= 0 (x1972 x1784))))
(assert (= (and (not x1608) x875) x709))
(assert (< (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x758))
(assert (x912 x1301 128))
(assert (x1145 x2353))
(assert (x1145 x1509))
(assert (x1145 x225))
(assert (x1145 x1655))
(assert (x1145 x313))
(assert (not (x130 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359))))
(assert (x1145 x497))
(assert (= (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423) (x1972 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423))))
(assert (not (x130 (x1869 64 x1617 10))))
(assert (x1145 x778))
(assert (=> (>= 10000 x2279) (= 0 (x1972 x2279))))
(assert (x1145 x1046))
(assert (x912 x1431 128))
(assert (= x467 (and x663 x23)))
(assert (x1145 x353))
(assert (= (and x2435 x472) x826))
(assert (x1145 x211))
(assert (=> (>= 10000 x956) (= 0 (x1972 x956))))
(assert (=> (>= 10000 x2589) (= (x1972 x2589) 0)))
(assert (=> (>= 10000 x942) (= 0 (x1972 x942))))
(assert (=> (<= x651 10000) (= (x1972 x651) 0)))
(assert (x1145 x2605))
(assert (x1145 x53))
(assert (x1145 x2728))
(assert (= x1095 (=> (and (and (and (= x1940 x927) (= (x1439 x927) x1836)) (and (and (and (= x1940 x1767) (and (and (and (= x1208 (x1439 x320)) (<= 0 x537) (= (+ x349 x163) x537) (= (x650 x675) x163) (= x2790 (ite x1075 1 0)) (= false x543) (= 2001815235 x1011) (= 1 x1894) (>= x667 1) (= x1075 (not (= x1767 x675))) (= x1940 x320) (= x537 x1509) (= x647 x2623) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x163 x349)) (= x667 (x242 x675)) (= x2691 x791) (>= 127 x26) (<= x537 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2103 (- x1208 x349)) (= false x2029) (= x1663 2) (<= x26 127)) (or (and (= 0 x2790) (not x1075)) (and (and (= x1767 x1213) (>= 1461501637330902918203684832716283019655932542975 x1213)) x1075))) (= x1466 x349))) (and (= x1148 x791) (= false x478))) (and (>= x1836 x424) (= x2336 68) (= x1466 x424) (= x2623 x2622)))) (and (= (< 0 (x242 x675)) x1339) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x825) (<= 0 x898) (= x2715 x2622) (<= 1 x1835) (>= 1461501637330902918203684832716283019655932542975 x1130) (= x530 x2715) (= false x258) (= (x998 x2400) x2319) (<= 0 x1940) (<= x1730 1461501637330902918203684832716283019655932542975) (= (< 0 (x242 x1130)) x2391) (= x530 x1734) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2759) (<= x2357 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1920) (<= 1 x675) (= false x2692) (not (= x2764 x1130)) (>= 1461501637330902918203684832716283019655932542975 x1835) (<= x609 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2319 255) x2391 (= 3672334990 x408) (<= 0 x2357) (not (= x1835 x1130)) x2768 (not (= x675 x1835)) (= x39 (> (x242 x1835) 0)) (>= x662 1) (= x2694 (not (= 0 x613))) (= (x1869 64 x530 10) x2400) (<= x2339 1461501637330902918203684832716283019655932542975) (<= 1 x2339) (= x1723 false) (= x2764 x2339) (= x2071 false) (>= x2764 1) (>= x609 0) (<= 1 x1130) (<= 0 x825) (<= x1478 127) (= 36 x2473) (= (ite (not (= 0 x2319)) 1 0) x613) x39 (>= 1461501637330902918203684832716283019655932542975 x662) (not (= x675 x1130)) (= x1291 false) (>= 1461501637330902918203684832716283019655932542975 x1940) (= x2727 false) (= x2615 x1148) (<= 1 x1474) (= x662 x675) (>= 1461501637330902918203684832716283019655932542975 x1920) (<= x1478 127) (<= 0 x1466) (>= x1730 0) (<= 0 x2615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x898) (>= x2759 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2172) (<= 0 x2172) (>= 1461501637330902918203684832716283019655932542975 x675) (not (= x675 x2764)) (= (> (x242 x2764) 0) x2768) (not (= x1835 x2764)) (>= 1461501637330902918203684832716283019655932542975 x2764) x1339 (= (x242 x675) x1474))) x2365)))
(assert (=> (<= x890 10000) (= (x1972 x890) 0)))
(assert (=> (<= x1964 10000) (= (x1972 x1964) 0)))
(assert (x1145 x2671))
(assert (= (x2649 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x1397))
(assert (x1145 x2049))
(assert (x1145 x1508))
(assert (x1145 x936))
(assert (x1145 x1341))
(assert (= x581 (and x2145 x1614)))
(assert (x1145 x805))
(assert (x1828 256))
(assert (x1145 x2362))
(assert (= (x6 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x2054))
(assert (x1145 x2361))
(assert (=> (>= 10000 x2187) (= (x1972 x2187) 0)))
(assert (= x1280 (and x1307 x2255)))
(assert (x1145 x1707))
(assert (= x1574 (=> (and (= x2325 x751) (= x1286 x751)) x2624)))
(assert (= (x2158 (x1869 64 x54 0)) 64))
(assert (x1145 x260))
(assert (x1145 x501))
(assert (= (and x1709 x219) x1006))
(assert (x1145 x2430))
(assert (not (x130 (x1869 64 x220 12))))
(assert (x1145 x1332))
(assert (x1145 x1294))
(assert (=> (>= 10000 x1782) (= 0 (x1972 x1782))))
(assert (x1145 x2738))
(assert (=> (<= x2093 10000) (= (x1972 x2093) 0)))
(assert (= (x2200 (x1452 x1376 x354 x626 x2677 x1042)) x354))
(assert (=> (<= x1247 10000) (= 0 (x1972 x1247))))
(assert (x1145 x1667))
(assert (= (x2649 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) x1187))
(assert (= x930 (and x2572 x2347)))
(assert (= (x2158 (x795 x2210 x2093)) x2210))
(assert (= (x2200 (x1869 64 x2589 (ite (= x1705 0) x2300 (ite (<= x1705 32) x436 (ite (>= 64 x1705) x2057 (ite (<= x1705 96) x1008 (ite (<= x1705 128) x735 (ite (<= x1705 160) x1969 (ite (>= 192 x1705) x2570 (ite (<= x1705 224) x2055 x1252)))))))))) x2589))
(assert (x1145 x1793))
(assert (x1145 x1953))
(assert (x1145 x198))
(assert (x912 x2531 2))
(assert (x1145 x549))
(assert (= x72 (x2158 (x611 x72 x706 x1462 x1420 x2025 x48 x2431))))
(assert (x1145 x851))
(assert (x130 2177969240))
(assert (x1145 x91))
(assert (= (x1972 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)) (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721)))
(assert (= (x2082 (x611 x1376 x567 x980 x141 x1201 x2593 x576)) x1201))
(assert (x1145 x1664))
(assert (=> (<= x616 10000) (= (x1972 x616) 0)))
(assert (= (and x709 (not x1061)) x554))
(assert (= x2482 (and x470 (not x1199))))
(assert (= x1225 (x2200 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834))))
(assert (x1145 x334))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x2605 2)))
(assert (= (and x2309 x355) x718))
(assert (= (x2200 (x1452 x2522 x2387 x503 x617 x2027)) x2387))
(assert (=> (>= 10000 x840) (= (x1972 x840) 0)))
(assert (=> (>= 10000 x2500) (= 0 (x1972 x2500))))
(assert (x1145 x1798))
(assert (x2686 x2156))
(assert (= (or x533 x2423) x1960))
(assert (x2116 x2665))
(assert (x1145 x2183))
(assert (x1145 x1238))
(assert (=> (>= 10000 x2210) (= 0 (x1972 x2210))))
(assert (= (x2200 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)) x720))
(assert (x1145 x816))
(assert (x1145 x2522))
(assert (=> (>= 10000 x2626) (= (x1972 x2626) 0)))
(assert (x1145 x2473))
(assert (= x169 (x6 (x2647 x442 x1784 x1538 x1103 x756 x169))))
(assert (= x1395 (=> (and (= (x2489 x293) x251) (= (not (> x2610 32)) x2483)) (and (=> (= x918 32) x1965) x2483))))
(assert (x746 x1906))
(assert (x1145 x2258))
(assert (x1145 x100))
(assert (= x887 (x2158 (x37 x887 x2571 x334 x1615 x2187 x2240 x862 x230))))
(assert (x1145 x1082))
(assert (not (x130 (x1869 64 x417 10))))
(assert (= x1441 (or x351 x698)))
(assert (= x1705 (x2158 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359))))
(assert (= (x2158 (x1869 x887 x1069 x1343)) x887))
(assert (= x36 (and (not x1638) x718)))
(assert (x1145 x1767))
(assert (x1145 x2386))
(assert (x1145 x866))
(assert (x1145 x1485))
(assert (x1145 x939))
(assert (= (x2200 (x1869 64 x905 12)) x905))
(assert (x1145 x714))
(assert (x1145 x1863))
(assert (x1145 x120))
(assert (x1145 x500))
(assert (x1145 x2355))
(assert (x1145 x1679))
(assert (x2686 256))
(assert (x1145 x830))
(assert (x1828 x2669))
(assert (=> (<= x1221 10000) (= 0 (x1972 x1221))))
(assert (x1145 x2559))
(assert (= x2206 (x6 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664))))
(assert (= (and x2085 (not x248)) x812))
(assert (= (x6 (x2647 x1267 x265 x2499 x159 x133 x2214)) x2214))
(assert (=> (<= x1300 10000) (= (x1972 x1300) 0)))
(assert (< (x1869 64 x59 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1126 (and x2689 (not x1124))))
(assert (x1145 x1963))
(assert (= (x2649 (x1869 64 x936 36)) 36))
(assert (not (x130 (x2647 x2522 x1837 x337 x666 x651 x1682))))
(assert (= (x2649 (x1869 64 x54 0)) 0))
(assert (= x1705 (x2158 (x43 x1705 x1653 x2303 x829))))
(assert (x1145 x1743))
(assert (x1145 x2632))
(assert (= x2041 (or x2323 x459)))
(assert (=> (>= 10000 x1444) (= (x1972 x1444) 0)))
(assert (= (and (not x1709) x219) x1329))
(assert (x813 (+ 31 x1450) 32))
(assert (=> (>= 10000 x2622) (= 0 (x1972 x2622))))
(assert (x1145 x2279))
(assert (x1145 x1450))
(assert (< 10000 (x37 x2522 x2049 x1369 x2389 x2044 x137 x1673 x2442)))
(assert (x1145 x1943))
(assert (< (x1869 x298 x315 x1247) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x87))
(assert (= x2365 (=> (and (= (= x791 0) x1199) (>= x2185 1) (= x2428 (x1869 64 x2622 10)) (= x2185 (x998 x2428)) (<= x2185 255)) (and (=> (and (and (or (and (and (= 310283853 x2477) (= 36 x175) (= x2194 x2562) (>= 127 x2784) (= x246 false) (= x2564 (x242 x1835)) (>= x2564 1) (>= 127 x2784) (= x1113 false) (= x2100 false) (<= x1861 1461501637330902918203684832716283019655932542975) (<= 1 x1861) (= x1861 x1835) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x1293) (= false x407)) (not x823)) (and x823 (and (>= x415 1) (= x319 310283853) (= false x1416) (= false x1401) (= x920 x2194) (= x2256 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x1924 (* x2194 1000000000)) (= x1924 x2563) (<= x1912 127) (= x121 false) (>= 127 x1912) (<= x2194 57896044618658097711785492504343953926634992332820282019728792003956) (= x1731 36) (= false x1003) (= x53 x920) (= (x242 x1130) x415)))) (and (= x2490 128) (= x823 (= x1861 x1130)) (<= x1861 1461501637330902918203684832716283019655932542975))) x1199) x1853) (=> (and (and (and (= x1717 128) (= x2740 (= x1130 x1861)) (>= 1461501637330902918203684832716283019655932542975 x1861)) (or (and x2740 (and (= x20 x2194) (<= x2209 127) (= x671 false) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x2194) (= x522 310283853) (= 36 x2061) (= x494 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= x2358 1) (<= x2209 127) (= x1455 (* x2194 1000000000)) (= (x242 x1130) x2358) (= false x1405) (= false x136) (= x20 x2121) (= x608 false) (= x1455 x661))) (and (not x2740) (and (= (x242 x1835) x1404) (= false x2169) (<= x1861 1461501637330902918203684832716283019655932542975) (= x1403 false) (= false x458) (= x2126 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= false x1612) (>= 127 x1833) (= x2098 310283853) (= x1072 x2194) (>= 127 x1833) (= x1861 x1835) (= 36 x2046) (>= x1861 1) (<= 1 x1404))))) (not x1199)) x2406)))))
(assert (x1145 x2348))
(assert (= (and (not x847) x1454) x286))
(assert (x1145 x809))
(assert (= x1490 (x2200 (x1869 x2210 x1490 x1283))))
(assert (not (x130 (x43 x1669 x2559 x1338 x2181))))
(assert (x1145 x883))
(assert (= x777 (x416 (x37 x72 x779 x1187 x777 x814 x1761 x1964 x2721))))
(assert (x1145 x2184))
(assert (x1145 x1129))
(assert (x1145 x567))
(assert (= (x1972 51607134309459761954548520284799282329936326410793501951915747293203005440) 0))
(assert (= 2 (x2649 (x1869 64 x2710 2))))
(assert (=> (>= 10000 x1904) (= 0 (x1972 x1904))))
(assert (=> (<= x1397 10000) (= (x1972 x1397) 0)))
(assert (x1145 x525))
(assert (x130 310283853))
(assert (= x2425 (x2082 (x2647 x298 x1300 x1476 x669 x2425 x890))))
(assert (x2116 x1606))
(assert (x1145 x1597))
(assert (x1145 x2437))
(assert (x1145 x2171))
(assert (x1145 x188))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (x1145 x661))
(assert (= (x416 (x43 x2210 x485 x2386 x87)) x87))
(assert (= (and x2016 x301) x1032))
(assert (= x25 (x2200 (x1869 64 x25 12))))
(assert (= (x2158 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x1267))
(assert (= x759 (x2082 (x2647 x2210 x1203 x532 x2500 x759 x2765))))
(assert (x1145 x203))
(assert (x1145 x1983))
(assert (x1145 x1571))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x795 32 x2107)))
(assert (x1145 x1783))
(assert (= (and x2197 (not x181)) x1121))
(assert (x2233 (+ x176 31)))
(assert (= 0 (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (< 10000 (x1869 64 x840 36)))
(assert (= (and x727 (not x1600)) x1054))
(assert (x1145 x565))
(assert (= x2210 (x2158 (x611 x2210 x1153 x2537 x2626 x726 x460 x1691))))
(assert (x1997 32 x1540))
(assert (not (x130 (x1869 64 x659 36))))
(assert (x1145 x216))
(assert (= (x1869 64 x59 2) (x1972 (x1869 64 x59 2))))
(assert (x1145 x2297))
(assert (x1145 x1538))
(assert (> (x43 x1267 x156 x1532 x114) 10000))
(assert (x2686 x1065))
(assert (x1145 x1276))
(assert (= (x1972 (x1869 64 x2350 36)) (x1869 64 x2350 36)))
(assert (< 10000 (x611 x1669 x720 x681 x1632 x80 x1159 x2042)))
(assert (x1624 x1429))
(assert (= (x2649 (x1869 64 x1617 10)) 10))
(assert (x1145 x493))
(assert (= x835 (x2649 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (= (x2158 (x795 x1376 x105)) x1376))
(assert (x2116 x2702))
(assert (=> (<= x862 10000) (= 0 (x1972 x862))))
(assert (= (x1972 (x1869 64 x1122 6)) (x1869 64 x1122 6)))
(assert (=> (<= x1203 10000) (= 0 (x1972 x1203))))
(assert (x1145 x684))
(assert (not (x130 (x795 32 x2130))))
(assert (x1624 x1715))
(assert (x2233 x2531))
(assert (x1145 x2531))
(assert (=> (<= x2437 10000) (= 0 (x1972 x2437))))
(assert (= x525 (x2200 (x795 x298 x525))))
(assert (x1145 x2121))
(assert (= (or x1910 x554) x2514))
(assert (not (x130 (x1869 x72 x1903 x291))))
(assert (x1145 x905))
(assert (x1145 x1490))
(assert (= (x1972 (x1869 64 x2622 10)) (x1869 64 x2622 10)))
(assert (= x1093 (and x401 x82)))
(assert (x1145 x952))
(assert (x1145 x197))
(assert (= (x611 x1376 x567 x980 x141 x1201 x2593 x576) (x1972 (x611 x1376 x567 x980 x141 x1201 x2593 x576))))
(assert (= x1794 (=> (and (= (x2548 x555) x2280) (= x2115 (not (< 32 x2218)))) (and x2115 (=> (= x1823 32) x860)))))
(assert (=> (<= x1025 10000) (= 0 (x1972 x1025))))
(assert (=> (>= 10000 x1376) (= 0 (x1972 x1376))))
(assert (= x1922 (x2649 (x1869 x2522 x1468 x1922))))
(assert (x1145 x943))
(assert (x1145 x135))
(assert (x1145 x1985))
(assert (= x2332 (and x1077 (not x1263))))
(assert (x1145 x2037))
(assert (x1145 x2387))
(assert (x1145 x2600))
(assert (x1145 x1976))
(assert (x1145 x1346))
(assert (= x2618 (and (not x2329) x2429)))
(assert (= (=> (and (= x1978 (x92 x2026)) (= x2758 (x2023 (+ 96 x276))) (= (not (> x1128 128)) x593) (= (x2023 (+ 96 x1936)) x2026)) (and x2774 x593)) x1775))
(assert (x1145 x519))
(assert (> (x1869 64 x836 3) 10000))
(assert (x1145 x1166))
(assert (x1145 x2764))
(assert (= (x634 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x1399))
(assert (=> (<= x2425 10000) (= 0 (x1972 x2425))))
(assert (x2116 x501))
(assert (=> (>= 10000 x2044) (= 0 (x1972 x2044))))
(assert (x1145 x2157))
(assert (x1145 x761))
(assert (= (and x727 x1600) x447))
(assert (= (x2649 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x2207))
(assert (= x2119 (=> (and (or (and (and (= (ite (< 0 x2632) 1 0) x585) (= x2632 (x1317 128))) x2582) (and (not x2582) (= x585 (ite x2582 1 0)))) (and (= x1482 (x1317 128)) (= (= x1482 x1267) x2582))) x1616)))
(assert (x1145 x2280))
(assert (x1145 x205))
(assert (= (and x2341 (not x450)) x2404))
(assert (=> (>= 10000 x169) (= 0 (x1972 x169))))
(assert (< (x1452 x887 x1216 x152 x2281 x480) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x1337 x98) x693))
(assert (x813 (+ 31 x443) 32))
(assert (= (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x912 x1606 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x2686 x1906))
(assert (= x1853 (=> (and (= (x682 128) x716) (= 160 x861) (= x2213 x716)) x2653)))
(assert (x1145 x2351))
(assert (x1145 x1265))
(assert (> (x1869 64 x2605 6) 10000))
(assert (=> (>= 10000 x759) (= 0 (x1972 x759))))
(assert (x1145 x1284))
(assert (x2116 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1145 x2042))
(assert (x1145 x2490))
(assert (= (x1328 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369)) x247))
(assert (=> (>= 10000 x371) (= 0 (x1972 x371))))
(assert (= 0 (x1972 1914215)))
(assert (= (x2158 (x1452 x2522 x2387 x503 x617 x2027)) x2522))
(assert (x1145 x2790))
(assert (x1145 x2715))
(assert (x1145 x670))
(assert (= (x2158 (x1869 64 x836 3)) 64))
(assert (= (=> (and (and (= x2198 (x1512 128)) (= x2091 (= x2210 x2198))) (or (and x2091 (and (= x1741 (x1512 128)) (= x323 (ite (< 0 x1741) 1 0)))) (and (not x2091) (= x323 (ite x2091 1 0))))) x1816) x1138))
(assert (not (x130 (x795 x298 x525))))
(assert (x2116 x2738))
(assert (x1145 x1656))
(assert (=> (>= 10000 x1369) (= 0 (x1972 x1369))))
(assert (x912 x700 32))
(assert (< (x795 32 103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x795 x442 x371) (x1972 (x795 x442 x371))))
(assert (x1145 x291))
(assert (x1145 x2581))
(assert (=> (<= x25 10000) (= 0 (x1972 x25))))
(assert (= (x2158 (x1869 x1705 x2452 x762)) x1705))
(assert (= (x2200 (x43 x887 x1738 x191 x392)) x1738))
(assert (x1145 x1106))
(assert (x1145 x1502))
(assert (< 10000 (x1869 64 x675 2)))
(assert (x1145 x1919))
(assert (=> (<= x1321 10000) (= 0 (x1972 x1321))))
(assert (< 10000 (x611 x887 x2600 x1670 x655 x2056 x822 x1623)))
(assert (x1145 x12))
(assert (x1145 x319))
(assert (x1145 x2652))
(assert (x1997 32 x553))
(assert (=> (>= 10000 x1009) (= (x1972 x1009) 0)))
(assert (=> (>= 10000 x1846) (= 0 (x1972 x1846))))
(assert (= (x416 (x611 x1267 x1412 x2207 x1720 x264 x1650 x1841)) x1720))
(assert (x1145 x266))
(assert (x1145 x2212))
(assert (x1828 x1575))
(assert (x1145 x1125))
(assert (x1145 x700))
(assert (= 2 (x2649 (x1869 64 x2605 2))))
(assert (x1145 x50))
(assert (x1145 x239))
(assert (= (x2649 (x2647 x298 x1300 x1476 x669 x2425 x890)) x1476))
(assert (x746 x2702))
(assert (x1624 x2473))
(assert (x1145 x64))
(assert (x1145 x2426))
(assert (= x2261 (and (not x343) x178)))
(assert (= x298 (x2158 (x43 x298 x981 x2782 x88))))
(assert (x1145 x2745))
(assert (x1145 x326))
(assert (x1145 x2129))
(assert (= (and x2449 (not x296)) x1077))
(assert (= 7 (x2649 (x1869 64 x541 7))))
(assert (x1145 x2162))
(assert (=> (<= x2203 10000) (= 0 (x1972 x2203))))
(assert (x1145 x1257))
(assert (= x199 (=> (and (= 36 x479) (= x355 (= x1231 x1130)) (= x1212 (x2023 (+ x861 4))) (= x479 (x1230 (- x2237 x861))) (= x2237 (x2023 (+ x1212 32)))) (and (=> (and (and (and (= (x1869 64 x675 1) x7) (= (* x1584 1000000000) x2579) (= (< x2664 x1257) x1638) (= x1898 97822624453686575479804928673988797637476738513438931194560248106084831592448) (= x2579 x775) (= x22 (ite x1638 1 0)) (= (x1010 x7) x2664) (= x1584 x719) (= 3628442803 x260) (= false x2288) (= x2576 x719) (>= x2426 1) (<= x1543 127) (= x1499 (x1869 64 x675 2)) (<= x1584 57896044618658097711785492504343953926634992332820282019728792003956) (= x2037 36) (= (x242 x1130) x2426) (= x1778 false) (>= 127 x1543) (= x1257 (x484 x1499))) (or (and (not x1638) (and (not (> x2083 x2664)) (= (x1230 (- x2664 x1257)) x2083) (not (< x2083 x775)))) (and (= x22 0) x1638))) x355) x445) (=> (and (not x355) (and (>= 1461501637330902918203684832716283019655932542975 x1381) (<= x2350 253) (<= x1231 1461501637330902918203684832716283019655932542975) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2262) (>= x1231 1) (>= 127 x1819) (= (+ x2350 1) x1190) (= x1835 x1231) (= (+ x2350 1) x59) (= (x873 x2022) x654) (= x1123 x1584) (= x512 (x242 x1835)) (= (= 0 x654) x1139) (= false x1078) (= x1592 3628442803) (= 36 x2478) (<= 1 x512) (<= 1 x1381) (= x2022 (x1869 64 x2350 36)) (= x675 x1381) (= x74 false) (>= 127 x1819))) (and (=> (and (= (= x654 1) x1651) (not x1139)) (and (=> (and (and (<= x541 65535) (= x1667 (ite (< 0 x2705) x1301 (x1335 127 x1301))) (= x905 (+ x59 1)) (= (x568 x1954) x541) (= x2430 (x1230 (- x2705 (mod (ite (> 32 x1667) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2705 (x1335 1 x857)) (= x1433 (+ x59 1)) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2430) (= x2430 1)) (= (x1869 64 x905 12) x1601) (= x1301 (x1237 x857 2)) (= x202 (+ x905 1)) (= x1954 (x1869 64 x59 6)) (= x1892 (x1335 1 x857)) (= x668 (= x1892 0)) (<= x59 253) (>= x59 1) (>= 18446744073709551615 x1088) (= x1813 (+ 1 x905)) (= x1088 (x2327 x1601))) x1651) (and (=> (and (and (= (x795 32 103) x24) (= x819 (> x1667 0))) (not x668)) (and (=> x819 x382) (=> (and (not x819) (= 0 x2612)) x2360))) (=> (and x668 (and (= x729 (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x857)) (or (= 32 x620) (= 0 x620)) (= (+ x620 292) x1186) (= (* 32 (ite (not (= x1667 0)) 1 0)) x620))) x2175))) (=> (and (not x1651) (and (= x1480 (+ x59 1)) (= (= x654 2) x2709) x2709 (or (= x2286 1) (= x2286 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= x59 253) (= x55 (+ 1 x2070)) (= (x1230 (- x1698 (mod (ite (< x2760 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2286) (= (= x755 0) x2672) (= (x1335 1 x857) x1698) (= x501 (x1237 x857 2)) (= x1497 (x2327 x1133)) (= x2070 (+ x59 1)) (= x755 (x1335 1 x857)) (= x1192 (x568 x125)) (<= x1497 18446744073709551615) (= x125 (x1869 64 x59 6)) (>= 65535 x1192) (= (ite (> x1698 0) x501 (x1335 127 x501)) x2760) (= (x1869 64 x2070 12) x1133) (>= x59 1) (= (+ 1 x2070) x126))) (and (=> (and (and (= x1117 (+ 292 x13)) (= (* 32 (ite (not (= x2760 0)) 1 0)) x13) (= (x1335 115792089237316195423570985008687907853269984665640564039457584007913129639680 x857) x1141) (or (= 32 x13) (= 0 x13))) x2672) x86) (=> (and (and (= (x795 32 103) x2518) (= (> x2760 0) x181)) (not x2672)) (and (=> (and (not x181) (= 0 x2313)) x370) (=> x181 x1288))))))) (=> (and x1139 (and (= x504 (x510 x2416)) (= 128 x1435) (= x1567 102788308552044517260959567728648622381392053106279845986800620074717893623808) (>= 1461501637330902918203684832716283019655932542975 x350) (= (+ x936 1) x2693) (= x2561 (x510 x2416)) (>= x59 1) (= x1549 (x1869 64 x59 2)) (= x2148 (x510 x1549)) (= x1109 (x1869 64 x2263 6)) (= x1835 x2328) (= x350 (x510 x1549)) (= x1272 (x873 x2375)) (= x2411 3812630263) (= x353 x909) (= (+ x936 1) x2325) (>= 250 x59) (>= 1461501637330902918203684832716283019655932542975 x2328) (= 132 x1888) (>= x2713 1) (= x2416 (x1869 64 x2710 2)) (= (+ 1 x936) x1679) (>= x1272 100000) (= x1272 x271) (= (x1869 64 x936 36) x2375) (>= x2717 1) (= (x568 x1109) x400) (= x2541 (x873 x2375)) (= x738 false) (>= 127 x643) (<= x504 1461501637330902918203684832716283019655932542975) (= (+ 1 x2710) x936) (= x1508 (+ 1 x2710)) (= x1660 false) (= x739 (+ x59 1)) (= x2729 (+ 1 x2263)) (= x350 x1398) (>= 127 x643) (<= x353 65535) (= x1028 x504) (= (x568 x1109) x353) (= x2717 (x242 x1381)) (<= 1 x2328) (= x2263 (+ 1 x59)) (= (+ x2263 1) x2710) (= (x242 x675) x2713))) x2624)))))))
(assert (= (x6 (x611 x72 x706 x1462 x1420 x2025 x48 x2431)) x48))
(assert (x1145 x2148))
(assert (x1145 x1666))
(assert (=> (<= x1664 10000) (= (x1972 x1664) 0)))
(assert (= (x2158 (x2647 x887 x2569 x57 x2127 x1235 x911)) x887))
(assert (x2686 x770))
(assert (=> (<= x829 10000) (= 0 (x1972 x829))))
(assert (x813 (+ 31 x1857) 32))
(assert (> (x1452 x2210 x285 x1844 x455 x2346) 10000))
(assert (= (and x286 (not x2166)) x2174))
(assert (=> (<= x541 10000) (= 0 (x1972 x541))))
(assert (x1145 x2553))
(assert (> (x1869 x1669 x268 x1716) 10000))
(assert (x1145 x2506))
(assert (= x1669 (x2158 (x1869 x1669 x268 x1716))))
(assert (= x116 (and x252 x2585)))
(assert (x1997 256 x196))
(assert (x1828 x1584))
(assert (x1145 x1436))
(assert (= (and x2586 x263) x2423))
(assert (= (x795 x72 x64) (x1972 (x795 x72 x64))))
(assert (x1145 x314))
(assert (x1997 32 (ite (not (= x2610 0)) 1 0)))
(assert (x1145 x681))
(assert (= x1200 (and (not x2736) x603)))
(assert (=> (<= x1595 10000) (= (x1972 x1595) 0)))
(assert (x1145 x2126))
(assert (x1145 x469))
(assert (= x459 (and (not x2091) x2299)))
(assert (x2116 x1144))
(assert (x1145 x369))
(assert (x1145 x2127))
(assert (=> (>= 10000 x1834) (= 0 (x1972 x1834))))
(assert (x1145 x1859))
(assert (= x2360 (=> (= (+ x2612 292) x1186) x2175)))
(assert (x1145 x2050))
(assert (= x88 (x416 (x43 x298 x981 x2782 x88))))
(assert (= (x2649 (x1452 x1669 x122 x882 x942 x2)) x882))
(assert (x912 x2762 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2686 x700))
(assert (= x1094 (x416 (x43 x1376 x1086 x870 x1094))))
(assert (=> (>= 10000 x567) (= 0 (x1972 x567))))
(assert (x1145 x882))
(assert (=> (>= 10000 x75) (= 0 (x1972 x75))))
(assert (x1145 x1480))
(assert (x1145 x573))
(assert (x1145 x2742))
(assert (= x178 (and x450 x2341)))
(assert (x1828 (ite (not (= x2523 0)) 1 0)))
(assert (x1145 x980))
(assert (x1997 32 (ite (not (= 0 x1796)) 1 0)))
(assert (x1145 x1804))
(assert (=> (>= 10000 x1076) (= 0 (x1972 x1076))))
(assert (= (and x763 (not x2633)) x1424))
(assert (= (x1972 (x1869 64 x836 3)) (x1869 64 x836 3)))
(assert (x746 x2762))
(assert (x1145 x2403))
(assert (x1145 x1222))
(assert (x1145 x833))
(assert (x1145 x2500))
(assert (x1145 x2446))
(assert (not (x130 (x1869 64 x675 2))))
(assert (x1145 x2541))
(assert (x1145 x2720))
(assert (x1145 x1018))
(assert (x1145 x775))
(assert (= (and x2329 x2429) x712))
(assert (x1145 x928))
(assert (x1145 x232))
(assert (= (x2082 (x2647 x2522 x1837 x337 x666 x651 x1682)) x651))
(assert (x1145 x1722))
(assert (< (x1452 x298 x636 x803 x468 x2058) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2093 (x2200 (x795 x2210 x2093))))
(assert (= (x795 x887 x2437) (x1972 (x795 x887 x2437))))
(assert (=> (>= 10000 x1835) (= (x1972 x1835) 0)))
(assert (not (x130 (x1869 x1669 x268 x1716))))
(assert (not (x130 (x1869 x1705 x2452 x762))))
(assert (x2686 x1218))
(assert (x1145 x1171))
(assert (x1145 x2097))
(assert (x1145 x1071))
(assert (= (x1328 (x37 x1376 x1225 x448 x1340 x1655 x1319 x1793 x1834)) x1793))
(assert (x1145 x1904))
(assert (x1624 x1590))
(assert (x1145 x2008))
(assert (= (x2158 (x795 x442 x371)) x442))
(assert (x1145 x1548))
(assert (x1145 x2072))
(assert (= (x1972 (x795 32 103)) (x795 32 103)))
(assert (x1145 x2505))
(assert (x1145 x11))
(assert (not (x130 (x795 x1376 x105))))
(assert (=> (>= 10000 x122) (= (x1972 x122) 0)))
(assert (= (x2158 (x1869 64 x840 36)) 64))
(assert (x1145 x2623))
(assert (> (x1452 x1376 x354 x626 x2677 x1042) 10000))
(assert (=> (>= 10000 x1174) (= 0 (x1972 x1174))))
(assert (x856 x1065))
(assert (= (x2158 (x1869 64 x579 11)) 64))
(assert (< 10000 (x1869 64 x2070 12)))
(assert (=> (<= x2764 10000) (= 0 (x1972 x2764))))
(assert (x1145 x524))
(assert (x1145 x1053))
(assert (= (x2200 (x1869 64 x59 6)) x59))
(assert (=> (<= x1468 10000) (= (x1972 x1468) 0)))
(assert (=> (<= x334 10000) (= 0 (x1972 x334))))
(assert (= x1647 (=> (and (= (not (> x1675 32)) x2536) (= (x2548 x1764) x1256)) (and (=> (= 32 x310) x148) x2536))))
(assert (= (x1972 (x1869 64 x220 12)) (x1869 64 x220 12)))
(assert (x1145 x2491))
(assert (= (x2200 (x611 x442 x995 x2565 x1189 x1290 x2270 x987)) x995))
(assert (= (=> (and (= x1051 (x1384 x2750)) (= (not (< 224 x1943)) x1447)) (and x1447 x1635)) x1851))
(assert (x1145 x2147))
(assert (x1145 x907))
(assert (x912 x594 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1145 x890))
(assert (=> (>= 10000 x995) (= (x1972 x995) 0)))
(assert (= (x2200 (x43 x72 x946 x1735 x714)) x946))
(assert (=> (>= 10000 x2359) (= (x1972 x2359) 0)))
(assert (x1145 x583))
(assert (x1145 x804))
(assert (x1145 x1201))
(assert (x1145 x349))
(assert (= (=> (= x977 (+ 292 x918)) x1232) x1965))
(assert (= x2581 (x2082 (x611 x2522 x2132 x2520 x881 x2581 x2206 x1664))))
(assert (x1145 x2133))
(assert (x1145 x1796))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1452 x72 x399 x1798 x1792 x2335)))
(assert (x1145 x648))
(assert (x1145 x569))
(assert (= x1247 (x2649 (x1869 x298 x315 x1247))))
(assert (x1145 x1324))
(assert (x1145 x196))
(assert (< 10000 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)))
(assert (x1145 x1585))
(assert (not (x130 (x43 x2522 x842 x1018 x164))))
(assert (x1145 x1388))
(assert (x1145 x2061))
(assert (= 0 (x2158 (x282 0))))
(assert (= x2270 (x6 (x611 x442 x995 x2565 x1189 x1290 x2270 x987))))
(assert (x1145 x122))
(assert (x1145 x1092))
(assert (x1828 x553))
(assert (=> (<= x1948 10000) (= 0 (x1972 x1948))))
(assert (=> (<= x1130 10000) (= 0 (x1972 x1130))))
(assert (x2686 x2470))
(assert (=> (>= 10000 x2721) (= 0 (x1972 x2721))))
(assert (= (x2158 (x43 x72 x946 x1735 x714)) x72))
(assert (=> (<= x54 10000) (= 0 (x1972 x54))))
(assert (=> (>= 10000 x1118) (= 0 (x1972 x1118))))
(assert (x912 x857 2))
(assert (=> (>= 10000 x1252) (= 0 (x1972 x1252))))
(assert (x1624 x1129))
(assert (x1624 x113))
(assert (x2233 x1988))
(assert (x1145 x1984))
(assert (not (x130 (x37 x442 x1848 x311 x1846 x2285 x1183 x247 x2369))))
(assert (= x1376 (x2158 (x1869 x1376 x188 x1325))))
(assert (x1145 x1583))
(assert (x1145 x1397))
(assert (= (and (not x2646) x581) x71))
(assert (x856 x2738))
(assert (x2233 (+ x1267 31)))
(assert (= 0 (x1972 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1145 x1979))
(assert (= (x2200 (x1869 x1705 x2452 x762)) x2452))
(assert (x1145 x1602))
(assert (not (x130 (x1869 64 x905 12))))
(assert (x813 (+ x176 31) 32))
(assert (= x822 (x6 (x611 x887 x2600 x1670 x655 x2056 x822 x1623))))
(assert (= x2767 (x2082 (x1452 x1267 x851 x15 x1847 x2767))))
(assert (=> (>= 10000 x291) (= (x1972 x291) 0)))
(assert (=> (>= 10000 x1792) (= 0 (x1972 x1792))))
(assert (x1690 x705))
(assert (x1624 x2336))
(assert (x1145 x660))
(assert (x1145 x2466))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x43 x2210 x485 x2386 x87)))
(assert (= x678 (and x994 (not x1873))))
(assert (x1145 x415))
(assert (x1145 x337))
(assert (=> (>= 10000 x1399) (= 0 (x1972 x1399))))
(assert (= (x1869 x2522 x1468 x1922) (x1972 (x1869 x2522 x1468 x1922))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359)))
(assert (x1145 x1179))
(assert (x1690 x2531))
(assert (= (x1972 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x1145 x2690))
(assert (=> (>= 10000 x2565) (= (x1972 x2565) 0)))
(assert (x1145 x667))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1869 64 x25 12)))
(assert (x1145 x610))
(assert (x1145 x931))
(assert (= (x2200 (x1452 x298 x636 x803 x468 x2058)) x636))
(assert (x1145 x2729))
(assert (x1145 x202))
(assert (x1145 x2298))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2647 x887 x2569 x57 x2127 x1235 x911)))
(assert (=> (<= x980 10000) (= (x1972 x980) 0)))
(assert (= (x2158 (x1869 64 x659 36)) 64))
(assert (=> (>= 10000 x2136) (= (x1972 x2136) 0)))
(assert (not (x130 (x1869 64 x2605 6))))
(assert (= (x2649 (x611 x1376 x567 x980 x141 x1201 x2593 x576)) x980))
(assert (= (x2158 (x1869 64 x2710 2)) 64))
(assert (x1145 x1900))
(assert (x1624 x175))
(assert (x1145 x2310))
(assert (x1145 x215))
(assert (= (x2082 (x611 x442 x995 x2565 x1189 x1290 x2270 x987)) x1290))
(assert (= x1267 (x2158 (x1452 x1267 x851 x15 x1847 x2767))))
(assert (x1145 x2413))
(assert (x1145 x2504))
(assert (x1145 x2218))
(assert (= (x1972 (x795 x1705 x2732)) (x795 x1705 x2732)))
(assert (= x1022 (x1328 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (= x696 (and x1199 x470)))
(assert (x1145 x1673))
(assert (= (x6 (x2647 x1376 x610 x1397 x46 x1321 x2136)) x2136))
(assert (x1145 x548))
(assert (= (x1972 (x1869 x1376 x188 x1325)) (x1869 x1376 x188 x1325)))
(assert (x1145 x2713))
(assert (= 0 (x1972 3628442803)))
(assert (< (x2647 x298 x1300 x1476 x669 x2425 x890) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x1952))
(assert (x1145 x2574))
(assert (x1145 x1183))
(assert (= x1131 (and x2192 x93)))
(assert (x2116 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (< 10000 (x1869 64 x579 11)))
(assert (= x2210 (x2158 (x37 x2210 x1595 x835 x1644 x1542 x660 x1022 x616))))
(assert (=> (>= 10000 x726) (= 0 (x1972 x726))))
(assert (= x142 (and x847 x1454)))
(assert (= x75 (x1328 (x37 x1705 x1174 x1790 x745 x255 x2229 x75 x2359))))
(assert (= (and x1441 x10) x1591))
(assert (= (x2158 (x1869 64 x2605 2)) 64))
(assert (< (x1869 64 x1639 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1145 x2587))
(assert (=> (<= x1798 10000) (= 0 (x1972 x1798))))
(assert (x1145 x642))
(assert (x1145 x185))
(assert (x1145 x2186))
(assert (x1145 x716))
(assert (x1145 x1236))
(assert (x1145 x2187))
(assert (= x936 (x2200 (x1869 64 x936 36))))
(assert (= (x2649 (x1869 x2210 x1490 x1283)) x1283))
(assert (= (x416 (x37 x1267 x2109 x52 x106 x225 x2054 x2607 x1399)) x106))
(assert (x1145 x1356))
(assert (= (x416 (x1452 x442 x266 x876 x1503 x2602)) x1503))
(assert (= x938 (x2200 (x611 x1705 x938 x2785 x1854 x1118 x1221 x1444))))
(assert (x1145 x1119))
(assert (x1145 x1890))
(assert (= x164 (x416 (x43 x2522 x842 x1018 x164))))
(assert (x1145 x512))
(assert (x1145 x2670))
(assert (x1145 x2748))
(assert (= x156 (x2200 (x43 x1267 x156 x1532 x114))))
(assert (x1145 x1492))
(assert (x1145 x777))
(assert (x1145 x2677))
(assert (= (x634 (x37 x1669 x976 x1948 x758 x1156 x253 x2017 x423)) x423))
(check-sat)
(exit)
