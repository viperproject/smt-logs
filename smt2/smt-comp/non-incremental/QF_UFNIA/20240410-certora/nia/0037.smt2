(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x7685 () Bool)
(declare-fun x7463 () Int)
(declare-fun x7418 () Int)
(declare-fun x7937 (Int) Int)
(declare-fun x4138 () Int)
(declare-fun x71 () Bool)
(declare-fun x5681 () Bool)
(declare-fun x5324 () Int)
(declare-fun x270 () Int)
(declare-fun x1670 () Bool)
(declare-fun x779 () Bool)
(declare-fun x317 () Int)
(declare-fun x1494 () Bool)
(declare-fun x7597 () Int)
(declare-fun x6373 () Int)
(declare-fun x2299 () Int)
(declare-fun x481 () Int)
(declare-fun x4549 () Int)
(declare-fun x160 () Bool)
(declare-fun x3147 () Int)
(declare-fun x5987 () Int)
(declare-fun x5873 () Int)
(declare-fun x8487 () Int)
(declare-fun x8367 () Int)
(declare-fun x2843 () Bool)
(declare-fun x3753 () Int)
(declare-fun x7730 () Int)
(declare-fun x8458 () Int)
(declare-fun x4493 () Bool)
(declare-fun x7806 () Int)
(declare-fun x5843 (Int) Int)
(declare-fun x5475 () Int)
(declare-fun x3077 () Int)
(declare-fun x876 () Int)
(declare-fun x3677 () Bool)
(declare-fun x4843 () Int)
(declare-fun x6244 () Bool)
(declare-fun x7308 () Bool)
(declare-fun x559 () Bool)
(declare-fun x6672 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2026 () Int)
(declare-fun x4053 () Int)
(declare-fun x7880 () Bool)
(declare-fun x7811 () Int)
(declare-fun x6344 () Int)
(declare-fun x4065 () Int)
(declare-fun x866 () Int)
(declare-fun x4972 () Int)
(declare-fun x5506 () Int)
(declare-fun x8156 () Int)
(declare-fun x61 () Bool)
(declare-fun x5401 () Bool)
(declare-fun x4592 () Int)
(declare-fun x3252 () Bool)
(declare-fun x403 () Int)
(declare-fun x1082 () Int)
(declare-fun x3564 () Int)
(declare-fun x4238 () Bool)
(declare-fun x3892 () Int)
(declare-fun x7246 () Bool)
(declare-fun x3786 () Bool)
(declare-fun x4776 () Int)
(declare-fun x4662 () Bool)
(declare-fun x622 () Int)
(declare-fun x4443 () Bool)
(declare-fun x4556 () Int)
(declare-fun x7236 () Int)
(declare-fun x6874 () Bool)
(declare-fun x607 () Int)
(declare-fun x7908 () Int)
(declare-fun x5846 () Int)
(declare-fun x1991 () Int)
(declare-fun x3881 () Bool)
(declare-fun x6556 () Bool)
(declare-fun x3715 () Int)
(declare-fun x8113 () Bool)
(declare-fun x7105 () Bool)
(declare-fun x2613 () Int)
(declare-fun x6104 () Bool)
(declare-fun x7861 () Bool)
(declare-fun x6170 () Int)
(declare-fun x1974 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x8056 () Int)
(declare-fun x824 () Int)
(declare-fun x1089 () Bool)
(declare-fun x3462 () Int)
(declare-fun x4204 () Int)
(declare-fun x1618 () Bool)
(declare-fun x394 () Bool)
(declare-fun x6575 () Bool)
(declare-fun x7071 () Bool)
(declare-fun x41 () Int)
(declare-fun x2138 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x6553 () Bool)
(declare-fun x4616 () Int)
(declare-fun x4194 () Int)
(declare-fun x7083 (Int) Int)
(declare-fun x5378 () Int)
(declare-fun x7818 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x4252 () Int)
(declare-fun x7634 () Bool)
(declare-fun x5509 () Bool)
(declare-fun x223 () Int)
(declare-fun x5995 () Bool)
(declare-fun x6812 () Bool)
(declare-fun x7656 () Int)
(declare-fun x685 () Bool)
(declare-fun x4626 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x3589 () Int)
(declare-fun x1911 () Bool)
(declare-fun x150 () Bool)
(declare-fun x4394 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x752 () Bool)
(declare-fun x1263 () Int)
(declare-fun x468 () Bool)
(declare-fun x6520 () Int)
(declare-fun x3430 () Bool)
(declare-fun x6859 () Int)
(declare-fun x499 () Bool)
(declare-fun x6386 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x6892 () Int)
(declare-fun x2097 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x7659 () Int)
(declare-fun x2350 () Bool)
(declare-fun x3206 () Int)
(declare-fun x3503 () Bool)
(declare-fun x8286 () Bool)
(declare-fun x8537 () Int)
(declare-fun x2027 () Int)
(declare-fun x4844 () Bool)
(declare-fun x396 () Bool)
(declare-fun x1778 () Int)
(declare-fun x6871 () Int)
(declare-fun x5299 () Bool)
(declare-fun x4761 () Int)
(declare-fun x2036 () Int)
(declare-fun x8167 () Int)
(declare-fun x3141 () Int)
(declare-fun x524 () Int)
(declare-fun x7281 () Bool)
(declare-fun x5060 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x4408 () Bool)
(declare-fun x3016 (Int) Int)
(declare-fun x95 () Int)
(declare-fun x4814 () Int)
(declare-fun x1022 () Bool)
(declare-fun x7320 () Bool)
(declare-fun x7526 () Int)
(declare-fun x6594 () Int)
(declare-fun x4369 () Bool)
(declare-fun x1460 () Int)
(declare-fun x6361 () Int)
(declare-fun x6225 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x7589 () Int)
(declare-fun x536 () Int)
(declare-fun x5340 () Bool)
(declare-fun x8017 () Int)
(declare-fun x5666 () Int)
(declare-fun x5858 () Int)
(declare-fun x84 () Int)
(declare-fun x4543 () Int)
(declare-fun x4664 () Int)
(declare-fun x1100 () Bool)
(declare-fun x7993 () Int)
(declare-fun x3539 () Bool)
(declare-fun x5137 () Int)
(declare-fun x3852 () Int)
(declare-fun x3928 () Int)
(declare-fun x4855 () Int)
(declare-fun x1836 () Int)
(declare-fun x332 () Int)
(declare-fun x4045 () Int)
(declare-fun x8189 () Bool)
(declare-fun x734 () Bool)
(declare-fun x243 () Bool)
(declare-fun x4475 () Bool)
(declare-fun x5674 () Int)
(declare-fun x47 () Int)
(declare-fun x8306 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1196 () Int)
(declare-fun x5257 () Int)
(declare-fun x5979 () Bool)
(declare-fun x6161 () Bool)
(declare-fun x3882 () Int)
(declare-fun x191 () Bool)
(declare-fun x5774 () Int)
(declare-fun x4344 () Int)
(declare-fun x7933 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x2245 () Int)
(declare-fun x868 () Int)
(declare-fun x5018 () Bool)
(declare-fun x1257 () Int)
(declare-fun x4511 (Int) Int)
(declare-fun x7434 () Int)
(declare-fun x2931 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x7430 () Int)
(declare-fun x4265 () Bool)
(declare-fun x242 () Bool)
(declare-fun x544 () Int)
(declare-fun x5903 () Int)
(declare-fun x7789 () Bool)
(declare-fun x7442 () Int)
(declare-fun x6749 (Int) Int)
(declare-fun x6900 () Int)
(declare-fun x7654 () Int)
(declare-fun x1521 () Bool)
(declare-fun x6235 () Int)
(declare-fun x325 () Bool)
(declare-fun x5534 () Int)
(declare-fun x5286 () Int)
(declare-fun x838 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x7762 () Int)
(declare-fun x7737 () Bool)
(declare-fun x3759 () Int)
(declare-fun x2656 () Int)
(declare-fun x6040 () Int)
(declare-fun x8418 () Bool)
(declare-fun x7991 () Int)
(declare-fun x6778 () Bool)
(declare-fun x4321 () Bool)
(declare-fun x432 () Bool)
(declare-fun x4211 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1912 () Int)
(declare-fun x1155 () Bool)
(declare-fun x4948 () Int)
(declare-fun x5670 () Bool)
(declare-fun x2889 () Bool)
(declare-fun x6108 () Int)
(declare-fun x2674 () Int)
(declare-fun x3528 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x5434 () Int)
(declare-fun x4297 () Int)
(declare-fun x8384 () Int)
(declare-fun x2353 () Int)
(declare-fun x8143 () Bool)
(declare-fun x3275 () Int)
(declare-fun x28 () Bool)
(declare-fun x6803 () Int)
(declare-fun x7051 () Int)
(declare-fun x5697 () Bool)
(declare-fun x124 () Int)
(declare-fun x7076 () Bool)
(declare-fun x336 () Bool)
(declare-fun x7978 () Int)
(declare-fun x1505 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x5350 () Int)
(declare-fun x2529 () Int)
(declare-fun x2412 () Bool)
(declare-fun x2085 () Int)
(declare-fun x4185 () Int)
(declare-fun x5919 (Int Int) Int)
(declare-fun x424 () Int)
(declare-fun x5895 () Int)
(declare-fun x7297 () Int)
(declare-fun x1909 () Int)
(declare-fun x171 () Int)
(declare-fun x7679 () Int)
(declare-fun x5710 () Bool)
(declare-fun x4902 () Bool)
(declare-fun x3091 () Int)
(declare-fun x5724 () Int)
(declare-fun x3999 () Int)
(declare-fun x3612 () Int)
(declare-fun x2673 () Bool)
(declare-fun x4158 () Int)
(declare-fun x4747 () Int)
(declare-fun x1333 () Int)
(declare-fun x1463 () Int)
(declare-fun x6765 () Bool)
(declare-fun x7929 () Bool)
(declare-fun x260 () Bool)
(declare-fun x674 () Bool)
(declare-fun x4937 () Bool)
(declare-fun x1632 () Int)
(declare-fun x4149 () Int)
(declare-fun x5027 () Int)
(declare-fun x384 () Int)
(declare-fun x6823 () Bool)
(declare-fun x3415 () Int)
(declare-fun x2252 () Bool)
(declare-fun x6838 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x5417 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x7844 () Int)
(declare-fun x5375 () Int)
(declare-fun x5290 () Bool)
(declare-fun x5147 () Int)
(declare-fun x4601 () Int)
(declare-fun x5892 () Bool)
(declare-fun x14 () Bool)
(declare-fun x8341 () Int)
(declare-fun x3381 () Bool)
(declare-fun x5150 () Int)
(declare-fun x5897 () Bool)
(declare-fun x4392 () Bool)
(declare-fun x8242 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x2525 () Int)
(declare-fun x7375 () Bool)
(declare-fun x6291 () Bool)
(declare-fun x6965 () Int)
(declare-fun x4810 () Bool)
(declare-fun x106 () Int)
(declare-fun x2898 () Int)
(declare-fun x4305 () Int)
(declare-fun x175 () Int)
(declare-fun x7479 () Int)
(declare-fun x3321 () Int)
(declare-fun x7319 () Bool)
(declare-fun x942 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x314 () Int)
(declare-fun x8409 () Int)
(declare-fun x7050 () Bool)
(declare-fun x6602 () Int)
(declare-fun x527 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x6189 () Int)
(declare-fun x1223 () Bool)
(declare-fun x176 () Bool)
(declare-fun x4207 () Int)
(declare-fun x4284 () Int)
(declare-fun x5544 () Bool)
(declare-fun x7282 () Int)
(declare-fun x5518 () Int)
(declare-fun x3173 () Int)
(declare-fun x2356 () Int)
(declare-fun x2768 () Int)
(declare-fun x5245 () Bool)
(declare-fun x3956 () Int)
(declare-fun x1783 () Bool)
(declare-fun x6030 () Bool)
(declare-fun x5912 () Bool)
(declare-fun x8173 () Int)
(declare-fun x1195 () Int)
(declare-fun x6290 () Bool)
(declare-fun x5254 () Bool)
(declare-fun x4399 () Int)
(declare-fun x1478 () Int)
(declare-fun x542 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x776 () Bool)
(declare-fun x104 () Int)
(declare-fun x420 () Int)
(declare-fun x6460 () Int)
(declare-fun x1848 () Bool)
(declare-fun x1033 () Int)
(declare-fun x5073 () Int)
(declare-fun x3440 () Int)
(declare-fun x5348 () Bool)
(declare-fun x5487 () Bool)
(declare-fun x5454 () Bool)
(declare-fun x4896 () Bool)
(declare-fun x7518 () Int)
(declare-fun x7513 () Int)
(declare-fun x5187 () Int)
(declare-fun x3292 () Int)
(declare-fun x3174 () Int)
(declare-fun x2945 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x4416 () Int)
(declare-fun x2475 () Int)
(declare-fun x2478 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x7356 () Int)
(declare-fun x6620 () Bool)
(declare-fun x3064 () Int)
(declare-fun x5847 () Bool)
(declare-fun x1297 () Int)
(declare-fun x5983 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x4784 () Bool)
(declare-fun x8163 () Int)
(declare-fun x7744 () Int)
(declare-fun x2586 () Int)
(declare-fun x4729 () Int)
(declare-fun x6668 () Int)
(declare-fun x8232 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1822 () Int)
(declare-fun x5708 () Bool)
(declare-fun x1526 () Int)
(declare-fun x8009 () Int)
(declare-fun x1700 () Int)
(declare-fun x3613 () Int)
(declare-fun x8195 () Bool)
(declare-fun x360 () Int)
(declare-fun x7315 () Bool)
(declare-fun x7062 () Bool)
(declare-fun x6503 () Bool)
(declare-fun x909 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x6125 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x6525 () Bool)
(declare-fun x7875 () Bool)
(declare-fun x93 () Int)
(declare-fun x4254 () Int)
(declare-fun x8180 () Int)
(declare-fun x3059 () Bool)
(declare-fun x5985 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x4694 () Bool)
(declare-fun x1971 () Int)
(declare-fun x7691 () Bool)
(declare-fun x5113 () Int)
(declare-fun x72 () Int)
(declare-fun x638 () Int)
(declare-fun x6205 () Int)
(declare-fun x3682 () Bool)
(declare-fun x6328 () Int)
(declare-fun x4876 () Bool)
(declare-fun x5179 () Bool)
(declare-fun x4485 () Bool)
(declare-fun x5273 () Int)
(declare-fun x4471 () Bool)
(declare-fun x282 () Bool)
(declare-fun x6256 () Int)
(declare-fun x451 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x7846 () Bool)
(declare-fun x1225 () Int)
(declare-fun x5947 () Int)
(declare-fun x7030 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1299 () Int)
(declare-fun x6389 () Int)
(declare-fun x2161 () Bool)
(declare-fun x2702 () Int)
(declare-fun x2745 () Int)
(declare-fun x6267 () Bool)
(declare-fun x134 () Int)
(declare-fun x6943 () Int)
(declare-fun x7077 () Bool)
(declare-fun x5152 () Bool)
(declare-fun x1580 () Int)
(declare-fun x5656 () Int)
(declare-fun x3491 () Bool)
(declare-fun x4831 () Bool)
(declare-fun x6704 () Int)
(declare-fun x4838 () Int)
(declare-fun x2234 () Bool)
(declare-fun x7905 () Int)
(declare-fun x7307 () Bool)
(declare-fun x4808 () Bool)
(declare-fun x2576 () Int)
(declare-fun x6929 () Bool)
(declare-fun x3515 () Int)
(declare-fun x1093 () Int)
(declare-fun x5428 () Int)
(declare-fun x2925 () Int)
(declare-fun x6173 () Int)
(declare-fun x5263 () Int)
(declare-fun x5140 () Bool)
(declare-fun x4327 () Int)
(declare-fun x4821 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x4882 () Int)
(declare-fun x1336 () Int)
(declare-fun x3981 () Int)
(declare-fun x6122 () Int)
(declare-fun x4639 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x4103 () Int)
(declare-fun x5184 () Bool)
(declare-fun x6214 () Int)
(declare-fun x4591 () Int)
(declare-fun x5088 () Int)
(declare-fun x3622 () Bool)
(declare-fun x110 () Bool)
(declare-fun x5246 () Bool)
(declare-fun x5223 () Int)
(declare-fun x1929 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x6542 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x7642 () Int)
(declare-fun x7635 () Bool)
(declare-fun x3727 () Int)
(declare-fun x8230 () Int)
(declare-fun x4378 () Int)
(declare-fun x5297 () Int)
(declare-fun x1584 () Int)
(declare-fun x2213 () Int)
(declare-fun x7387 () Int)
(declare-fun x3687 () Int)
(declare-fun x8052 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x6206 () Int)
(declare-fun x6773 () Bool)
(declare-fun x7455 () Int)
(declare-fun x3535 () Bool)
(declare-fun x7383 () Bool)
(declare-fun x2689 () Int)
(declare-fun x328 () Int)
(declare-fun x5644 () Bool)
(declare-fun x1958 () Int)
(declare-fun x335 () Int)
(declare-fun x1105 () Int)
(declare-fun x3838 () Int)
(declare-fun x192 () Bool)
(declare-fun x1654 () Int)
(declare-fun x574 () Bool)
(declare-fun x757 () Int)
(declare-fun x7632 () Int)
(declare-fun x3795 () Bool)
(declare-fun x2692 () Int)
(declare-fun x7532 () Int)
(declare-fun x1677 () Int)
(declare-fun x1571 () Int)
(declare-fun x7296 () Int)
(declare-fun x7893 () Int)
(declare-fun x5079 () Int)
(declare-fun x5580 () Int)
(declare-fun x2458 () Int)
(declare-fun x5717 () Int)
(declare-fun x9 () Int)
(declare-fun x775 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x2707 () Int)
(declare-fun x4696 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x8198 () Bool)
(declare-fun x8 () Int)
(declare-fun x1227 () Bool)
(declare-fun x3523 () Int)
(declare-fun x4311 () Bool)
(declare-fun x5523 (Int) Int)
(declare-fun x2604 () Int)
(declare-fun x6754 (Int Int Int) Int)
(declare-fun x5174 () Bool)
(declare-fun x1136 () Int)
(declare-fun x4042 () Int)
(declare-fun x730 () Bool)
(declare-fun x6795 () Int)
(declare-fun x695 () Int)
(declare-fun x4666 () Bool)
(declare-fun x6334 () Int)
(declare-fun x4635 () Bool)
(declare-fun x8351 () Int)
(declare-fun x6988 () Bool)
(declare-fun x1367 () Int)
(declare-fun x4397 () Bool)
(declare-fun x5364 () Int)
(declare-fun x6757 () Int)
(declare-fun x531 () Bool)
(declare-fun x4470 () Int)
(declare-fun x8035 () Bool)
(declare-fun x661 () Bool)
(declare-fun x399 () Bool)
(declare-fun x7490 () Bool)
(declare-fun x6192 () Bool)
(declare-fun x7226 () Bool)
(declare-fun x1426 () Int)
(declare-fun x7484 () Bool)
(declare-fun x4358 () Int)
(declare-fun x365 () Bool)
(declare-fun x5141 () Int)
(declare-fun x2137 () Bool)
(declare-fun x6154 () Int)
(declare-fun x3785 () Int)
(declare-fun x3181 () Bool)
(declare-fun x6455 () Int)
(declare-fun x5122 () Int)
(declare-fun x1990 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x1680 () Int)
(declare-fun x356 () Int)
(declare-fun x5673 () Int)
(declare-fun x4236 () Int)
(declare-fun x8462 () Bool)
(declare-fun x7527 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x7824 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x8080 () Int)
(declare-fun x1216 () Bool)
(declare-fun x8234 () Bool)
(declare-fun x7593 () Int)
(declare-fun x5743 () Int)
(declare-fun x1416 () Bool)
(declare-fun x7748 () Int)
(declare-fun x3087 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x7535 () Int)
(declare-fun x4744 () Int)
(declare-fun x2991 () Bool)
(declare-fun x4967 (Int) Int)
(declare-fun x7224 () Int)
(declare-fun x8127 () Int)
(declare-fun x2333 () Bool)
(declare-fun x7714 () Bool)
(declare-fun x5083 () Bool)
(declare-fun x7190 () Bool)
(declare-fun x3337 () Int)
(declare-fun x5645 () Int)
(declare-fun x8396 () Int)
(declare-fun x1309 () Bool)
(declare-fun x7170 () Int)
(declare-fun x5639 () Int)
(declare-fun x2615 () Bool)
(declare-fun x6554 () Int)
(declare-fun x935 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x4608 () Bool)
(declare-fun x2401 () Int)
(declare-fun x1816 () Int)
(declare-fun x1133 () Bool)
(declare-fun x6048 () Int)
(declare-fun x715 () Int)
(declare-fun x3158 () Int)
(declare-fun x2124 () Bool)
(declare-fun x2485 () Int)
(declare-fun x5642 () Bool)
(declare-fun x5850 () Bool)
(declare-fun x5601 () Int)
(declare-fun x1786 () Int)
(declare-fun x729 () Bool)
(declare-fun x7629 () Int)
(declare-fun x7413 () Bool)
(declare-fun x1372 () Int)
(declare-fun x2855 () Int)
(declare-fun x2771 () Bool)
(declare-fun x2219 () Int)
(declare-fun x2628 () Int)
(declare-fun x5235 () Bool)
(declare-fun x6444 () Bool)
(declare-fun x4501 () Int)
(declare-fun x7981 () Bool)
(declare-fun x2750 () Bool)
(declare-fun x7803 (Int) Int)
(declare-fun x5284 () Bool)
(declare-fun x6781 () Int)
(declare-fun x2013 () Int)
(declare-fun x8162 () Int)
(declare-fun x364 () Int)
(declare-fun x44 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x7768 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x2312 () Int)
(declare-fun x1657 () Int)
(declare-fun x2598 () Int)
(declare-fun x4525 () Int)
(declare-fun x2457 () Int)
(declare-fun x2909 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x4785 () Bool)
(declare-fun x1459 (Int) Int)
(declare-fun x4644 () Int)
(declare-fun x7007 () Int)
(declare-fun x7186 (Int) Int)
(declare-fun x4963 () Int)
(declare-fun x5764 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x1484 () Int)
(declare-fun x2004 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x4349 () Int)
(declare-fun x2480 () Bool)
(declare-fun x6676 () Bool)
(declare-fun x8372 (Int) Int)
(declare-fun x1018 () Int)
(declare-fun x7259 () Int)
(declare-fun x2607 () Int)
(declare-fun x8486 () Int)
(declare-fun x6059 () Int)
(declare-fun x2468 () Int)
(declare-fun x354 () Int)
(declare-fun x5597 () Bool)
(declare-fun x2630 () Int)
(declare-fun x563 () Bool)
(declare-fun x1275 () Int)
(declare-fun x3968 () Bool)
(declare-fun x5750 () Int)
(declare-fun x279 () Bool)
(declare-fun x8039 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x5913 () Int)
(declare-fun x7540 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x4348 () Bool)
(declare-fun x3382 () Bool)
(declare-fun x4713 () Int)
(declare-fun x7011 () Bool)
(declare-fun x7941 () Bool)
(declare-fun x6362 () Int)
(declare-fun x7204 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x1231 () Int)
(declare-fun x827 () Int)
(declare-fun x8317 () Bool)
(declare-fun x5493 () Int)
(declare-fun x2928 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x6722 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x2195 () Int)
(declare-fun x6181 () Bool)
(declare-fun x1891 () Int)
(declare-fun x6694 () Bool)
(declare-fun x5574 () Int)
(declare-fun x5198 () Bool)
(declare-fun x8149 () Int)
(declare-fun x2809 () Int)
(declare-fun x6982 () Int)
(declare-fun x2623 () Int)
(declare-fun x3439 () Int)
(declare-fun x6662 () Int)
(declare-fun x4935 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x6833 () Int)
(declare-fun x5584 () Int)
(declare-fun x8220 () Bool)
(declare-fun x1882 () Int)
(declare-fun x5776 () Int)
(declare-fun x4464 () Bool)
(declare-fun x5492 () Int)
(declare-fun x822 () Int)
(declare-fun x7429 () Int)
(declare-fun x2599 () Bool)
(declare-fun x5409 () Bool)
(declare-fun x2067 () Int)
(declare-fun x3703 () Bool)
(declare-fun x7932 () Int)
(declare-fun x3973 () Bool)
(declare-fun x5096 () Int)
(declare-fun x261 () Int)
(declare-fun x2778 () Int)
(declare-fun x4142 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x7563 () Bool)
(declare-fun x8253 () Bool)
(declare-fun x7027 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x1092 () Int)
(declare-fun x4468 () Bool)
(declare-fun x6645 () Bool)
(declare-fun x2019 () Int)
(declare-fun x2951 () Bool)
(declare-fun x3278 () Int)
(declare-fun x3835 () Int)
(declare-fun x7012 () Bool)
(declare-fun x6382 () Bool)
(declare-fun x2499 () Int)
(declare-fun x1871 () Int)
(declare-fun x269 () Int)
(declare-fun x6621 () Int)
(declare-fun x6826 () Bool)
(declare-fun x3355 () Int)
(declare-fun x6410 () Int)
(declare-fun x4529 () Int)
(declare-fun x2033 () Int)
(declare-fun x7595 () Int)
(declare-fun x1493 () Bool)
(declare-fun x4796 () Int)
(declare-fun x2938 () Int)
(declare-fun x2102 () Bool)
(declare-fun x2812 () Int)
(declare-fun x3836 () Int)
(declare-fun x2581 () Int)
(declare-fun x264 () Int)
(declare-fun x555 () Int)
(declare-fun x2035 () Bool)
(declare-fun x6956 () Int)
(declare-fun x3067 () Int)
(declare-fun x6507 (Int) Int)
(declare-fun x8369 () Bool)
(declare-fun x5404 (Int) Int)
(declare-fun x3226 () Bool)
(declare-fun x8490 () Int)
(declare-fun x2769 (Int) Int)
(declare-fun x5543 () Int)
(declare-fun x5716 () Int)
(declare-fun x3670 () Int)
(declare-fun x4637 () Int)
(declare-fun x768 () Bool)
(declare-fun x1413 () Int)
(declare-fun x87 () Int)
(declare-fun x8005 () Bool)
(declare-fun x5190 () Int)
(declare-fun x1125 () Bool)
(declare-fun x767 () Int)
(declare-fun x7528 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x4535 () Bool)
(declare-fun x2510 () Int)
(declare-fun x6813 () Bool)
(declare-fun x85 () Bool)
(declare-fun x4357 () Int)
(declare-fun x29 () Int)
(declare-fun x3631 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1118 () Bool)
(declare-fun x7358 () Int)
(declare-fun x7617 () Bool)
(declare-fun x8073 () Bool)
(declare-fun x845 () Int)
(declare-fun x3335 () Int)
(declare-fun x4848 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x7798 () Int)
(declare-fun x7301 () Int)
(declare-fun x7146 () Bool)
(declare-fun x168 () Int)
(declare-fun x6649 () Int)
(declare-fun x8123 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x5840 () Int)
(declare-fun x51 () Bool)
(declare-fun x8316 () Bool)
(declare-fun x4941 () Bool)
(declare-fun x6588 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x5647 () Bool)
(declare-fun x4165 () Int)
(declare-fun x4326 () Int)
(declare-fun x4704 () Bool)
(declare-fun x8371 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1924 () Int)
(declare-fun x6547 () Bool)
(declare-fun x1174 () Int)
(declare-fun x2602 () Int)
(declare-fun x7512 () Int)
(declare-fun x2418 () Bool)
(declare-fun x4800 () Int)
(declare-fun x2021 () Bool)
(declare-fun x5783 () Int)
(declare-fun x4946 () Int)
(declare-fun x1190 () Bool)
(declare-fun x2276 (Int) Int)
(declare-fun x1692 () Bool)
(declare-fun x401 () Int)
(declare-fun x3802 () Bool)
(declare-fun x5440 () Int)
(declare-fun x6152 () Int)
(declare-fun x969 () Bool)
(declare-fun x3507 () Int)
(declare-fun x8347 () Int)
(declare-fun x1370 () Int)
(declare-fun x4510 () Bool)
(declare-fun x1775 () Int)
(declare-fun x7943 () Int)
(declare-fun x8129 () Int)
(declare-fun x4862 () Int)
(declare-fun x2394 () Int)
(declare-fun x1978 () Int)
(declare-fun x3942 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x8084 () Int)
(declare-fun x8377 () Int)
(declare-fun x5379 () Bool)
(declare-fun x6684 () Int)
(declare-fun x6711 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x54 () Int)
(declare-fun x5011 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1553 () Int)
(declare-fun x718 () Int)
(declare-fun x6961 () Int)
(declare-fun x6063 () Bool)
(declare-fun x73 () Bool)
(declare-fun x6954 () Bool)
(declare-fun x4004 () Bool)
(declare-fun x8496 () Bool)
(declare-fun x6717 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x7545 () Bool)
(declare-fun x5775 () Int)
(declare-fun x7000 () Int)
(declare-fun x7912 () Bool)
(declare-fun x6613 () Int)
(declare-fun x2092 () Bool)
(declare-fun x5899 () Int)
(declare-fun x6119 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x5883 () Bool)
(declare-fun x3254 () Bool)
(declare-fun x4918 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x7697 () Int)
(declare-fun x4391 () Bool)
(declare-fun x6016 () Int)
(declare-fun x3002 () Bool)
(declare-fun x5613 () Int)
(declare-fun x4426 () Bool)
(declare-fun x7239 () Int)
(declare-fun x4961 () Int)
(declare-fun x3179 () Int)
(declare-fun x6297 () Int)
(declare-fun x7182 () Int)
(declare-fun x2330 () Bool)
(declare-fun x5815 () Bool)
(declare-fun x6629 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x6767 () Int)
(declare-fun x4675 () Bool)
(declare-fun x1746 () Int)
(declare-fun x5615 () Int)
(declare-fun x653 () Int)
(declare-fun x8557 () Bool)
(declare-fun x421 (Int) Int)
(declare-fun x4052 () Int)
(declare-fun x812 () Bool)
(declare-fun x130 () Bool)
(declare-fun x2848 () Int)
(declare-fun x6572 () Bool)
(declare-fun x8492 () Bool)
(declare-fun x1704 () Int)
(declare-fun x1037 () Int)
(declare-fun x1523 () Int)
(declare-fun x5178 () Int)
(declare-fun x2248 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x5727 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x1158 () Int)
(declare-fun x4930 () Bool)
(declare-fun x5631 () Int)
(declare-fun x859 () Int)
(declare-fun x3745 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x874 () Int)
(declare-fun x2227 () Int)
(declare-fun x4794 () Int)
(declare-fun x4094 () Bool)
(declare-fun x2271 () Int)
(declare-fun x6738 () Bool)
(declare-fun x1188 () Int)
(declare-fun x2890 () Bool)
(declare-fun x6538 () Int)
(declare-fun x8445 () Int)
(declare-fun x8147 () Int)
(declare-fun x606 () Bool)
(declare-fun x3549 () Int)
(declare-fun x3883 () Bool)
(declare-fun x4341 () Int)
(declare-fun x1776 () Bool)
(declare-fun x6352 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x8310 () Int)
(declare-fun x3888 () Int)
(declare-fun x7970 () Bool)
(declare-fun x6708 () Bool)
(declare-fun x5309 (Int) Int)
(declare-fun x4759 () Bool)
(declare-fun x434 () Bool)
(declare-fun x82 () Int)
(declare-fun x4512 () Int)
(declare-fun x3873 () Bool)
(declare-fun x5598 () Int)
(declare-fun x2313 () Bool)
(declare-fun x4771 () Int)
(declare-fun x3719 () Bool)
(declare-fun x7193 () Bool)
(declare-fun x6233 () Int)
(declare-fun x2323 () Int)
(declare-fun x7964 () Bool)
(declare-fun x5240 () Int)
(declare-fun x4976 () Int)
(declare-fun x3239 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x402 () Int)
(declare-fun x3688 () Int)
(declare-fun x521 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2565 () Bool)
(declare-fun x6037 () Int)
(declare-fun x6421 () Int)
(declare-fun x5501 () Bool)
(declare-fun x8302 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x5552 () Bool)
(declare-fun x7959 () Int)
(declare-fun x6789 () Int)
(declare-fun x8297 () Int)
(declare-fun x25 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x3328 () Int)
(declare-fun x2156 () Int)
(declare-fun x6377 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x4398 () Int)
(declare-fun x1943 () Bool)
(declare-fun x7982 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x3620 () Int)
(declare-fun x4260 () Int)
(declare-fun x1166 () Bool)
(declare-fun x6304 () Int)
(declare-fun x8314 () Bool)
(declare-fun x8534 () Bool)
(declare-fun x4687 () Bool)
(declare-fun x2029 () Int)
(declare-fun x4548 () Bool)
(declare-fun x6505 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x742 () Bool)
(declare-fun x6915 () Int)
(declare-fun x4119 () Int)
(declare-fun x6751 () Int)
(declare-fun x6287 () Int)
(declare-fun x2761 () Int)
(declare-fun x5578 () Int)
(declare-fun x5803 () Int)
(declare-fun x1795 () Int)
(declare-fun x3481 () Int)
(declare-fun x1858 () Int)
(declare-fun x8159 () Bool)
(declare-fun x2833 () Int)
(declare-fun x3774 () Bool)
(declare-fun x2163 () Int)
(declare-fun x5795 () Int)
(declare-fun x1064 () Int)
(declare-fun x2608 () Int)
(declare-fun x2302 () Int)
(declare-fun x854 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x4179 () Int)
(declare-fun x3306 () Int)
(declare-fun x6986 () Int)
(declare-fun x6581 () Int)
(declare-fun x2863 () Bool)
(declare-fun x5824 () Int)
(declare-fun x2779 () Int)
(declare-fun x2694 () Int)
(declare-fun x1472 () Int)
(declare-fun x4903 () Bool)
(declare-fun x1492 () Int)
(declare-fun x3502 () Bool)
(declare-fun x6887 () Bool)
(declare-fun x8191 () Int)
(declare-fun x2120 () Int)
(declare-fun x3568 () Bool)
(declare-fun x5763 () Int)
(declare-fun x7873 () Bool)
(declare-fun x2469 () Int)
(declare-fun x2375 () Int)
(declare-fun x2852 () Bool)
(declare-fun x7235 () Bool)
(declare-fun x5778 () Int)
(declare-fun x5709 () Int)
(declare-fun x6311 () Bool)
(declare-fun x5914 () Bool)
(declare-fun x429 () Bool)
(declare-fun x640 () Int)
(declare-fun x302 () Bool)
(declare-fun x3380 () Int)
(declare-fun x4603 () Bool)
(declare-fun x88 () Bool)
(declare-fun x2154 () Int)
(declare-fun x1529 () Int)
(declare-fun x7688 () Bool)
(declare-fun x3860 () Int)
(declare-fun x8018 () Bool)
(declare-fun x6641 () Int)
(declare-fun x1183 () Int)
(declare-fun x5984 () Int)
(declare-fun x6277 () Int)
(declare-fun x608 () Bool)
(declare-fun x3109 () Int)
(declare-fun x8482 () Bool)
(declare-fun x7644 () Int)
(declare-fun x5625 () Bool)
(declare-fun x7279 () Bool)
(declare-fun x516 () Int)
(declare-fun x2735 () Int)
(declare-fun x1306 () Int)
(declare-fun x8048 () Int)
(declare-fun x3367 () Int)
(declare-fun x3117 (Int) Int)
(declare-fun x7651 () Bool)
(declare-fun x3427 () Int)
(declare-fun x1707 () Bool)
(declare-fun x4200 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x2961 () Int)
(declare-fun x2238 () Int)
(declare-fun x5155 () Bool)
(declare-fun x3647 () Int)
(declare-fun x4299 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x6950 () Bool)
(declare-fun x1731 () Int)
(declare-fun x6780 () Int)
(declare-fun x3982 () Int)
(declare-fun x3993 () Bool)
(declare-fun x7097 () Bool)
(declare-fun x989 () Int)
(declare-fun x5400 () Bool)
(declare-fun x7515 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x807 () Int)
(declare-fun x705 () Bool)
(declare-fun x7015 () Int)
(declare-fun x7111 () Int)
(declare-fun x1130 () Int)
(declare-fun x8495 () Int)
(declare-fun x7495 () Int)
(declare-fun x6640 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1065 () Int)
(declare-fun x7630 () Int)
(declare-fun x663 () Int)
(declare-fun x1006 () Int)
(declare-fun x2732 () Int)
(declare-fun x2762 () Int)
(declare-fun x8072 () Bool)
(declare-fun x7604 () Bool)
(declare-fun x1873 () Int)
(declare-fun x6412 () Int)
(declare-fun x8531 () Bool)
(declare-fun x4815 () Int)
(declare-fun x3821 () Int)
(declare-fun x4811 () Int)
(declare-fun x4189 () Int)
(declare-fun x7475 () Bool)
(declare-fun x8523 () Bool)
(declare-fun x6014 () Bool)
(declare-fun x7026 () Int)
(declare-fun x561 () Bool)
(declare-fun x3119 () Int)
(declare-fun x8401 () Int)
(declare-fun x4665 () Bool)
(declare-fun x6758 () Int)
(declare-fun x4717 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x4936 () Int)
(declare-fun x7780 () Bool)
(declare-fun x1101 () Int)
(declare-fun x4054 () Int)
(declare-fun x7157 () Int)
(declare-fun x7299 () Int)
(declare-fun x1291 () Int)
(declare-fun x7161 () Bool)
(declare-fun x4196 () Int)
(declare-fun x3388 () Int)
(declare-fun x3796 () Int)
(declare-fun x2872 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x4481 () Int)
(declare-fun x4308 () Bool)
(declare-fun x4318 () Int)
(declare-fun x7452 () Int)
(declare-fun x8447 () Bool)
(declare-fun x6695 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x1804 () Int)
(declare-fun x3513 () Bool)
(declare-fun x8461 () Int)
(declare-fun x4645 () Bool)
(declare-fun x2237 () Int)
(declare-fun x1747 () Int)
(declare-fun x1705 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x4985 () Bool)
(declare-fun x7303 () Int)
(declare-fun x4157 () Int)
(declare-fun x673 () Int)
(declare-fun x7223 () Int)
(declare-fun x3075 (Int) Int)
(declare-fun x2911 () Bool)
(declare-fun x2225 () Int)
(declare-fun x6566 () Int)
(declare-fun x4820 () Int)
(declare-fun x5988 () Int)
(declare-fun x8202 () Bool)
(declare-fun x7662 () Bool)
(declare-fun x7347 () Int)
(declare-fun x6325 () Bool)
(declare-fun x7776 () Int)
(declare-fun x4850 (Int) Int)
(declare-fun x1488 () Int)
(declare-fun x6787 () Int)
(declare-fun x1175 () Int)
(declare-fun x7915 () Int)
(declare-fun x2303 () Int)
(declare-fun x1570 () Int)
(declare-fun x3120 () Bool)
(declare-fun x7820 () Bool)
(declare-fun x4917 () Int)
(declare-fun x1860 (Int) Int)
(declare-fun x2159 () Int)
(declare-fun x875 () Int)
(declare-fun x2476 () Int)
(declare-fun x7089 () Bool)
(declare-fun x268 () Int)
(declare-fun x4788 () Int)
(declare-fun x2361 () Bool)
(declare-fun x4630 () Int)
(declare-fun x8218 () Bool)
(declare-fun x5845 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x78 () Int)
(declare-fun x7333 () Bool)
(declare-fun x797 () Bool)
(declare-fun x7159 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x5408 () Int)
(declare-fun x2881 () Bool)
(declare-fun x6350 () Int)
(declare-fun x3698 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x6442 () Int)
(declare-fun x2868 () Int)
(declare-fun x4705 () Int)
(declare-fun x1947 () Int)
(declare-fun x3847 (Int) Int)
(declare-fun x1903 () Int)
(declare-fun x2174 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x6904 () Bool)
(declare-fun x4599 () Bool)
(declare-fun x1883 () Int)
(declare-fun x5786 () Bool)
(declare-fun x497 () Bool)
(declare-fun x5834 () Int)
(declare-fun x6341 () Bool)
(declare-fun x409 () Int)
(declare-fun x3178 () Int)
(declare-fun x3827 () Bool)
(declare-fun x6512 () Bool)
(declare-fun x8255 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x4001 () Int)
(declare-fun x4715 () Bool)
(declare-fun x6447 () Bool)
(declare-fun x798 () Bool)
(declare-fun x7154 () Bool)
(declare-fun x4770 () Bool)
(declare-fun x7920 () Bool)
(declare-fun x6270 () Bool)
(declare-fun x6050 () Bool)
(declare-fun x3605 () Int)
(declare-fun x3536 () Int)
(declare-fun x713 () Bool)
(declare-fun x5571 () Bool)
(declare-fun x1852 () Int)
(declare-fun x2172 () Int)
(declare-fun x5105 () Int)
(declare-fun x1952 () Bool)
(declare-fun x4466 () Bool)
(declare-fun x1757 () Int)
(declare-fun x1881 () Int)
(declare-fun x8228 () Bool)
(declare-fun x2595 () Int)
(declare-fun x8547 () Bool)
(declare-fun x6176 () Bool)
(declare-fun x8188 () Int)
(declare-fun x1347 () Bool)
(declare-fun x790 () Bool)
(declare-fun x3669 () Int)
(declare-fun x4465 () Int)
(declare-fun x6635 () Bool)
(declare-fun x5430 () Bool)
(declare-fun x3675 () Int)
(declare-fun x4337 () Bool)
(declare-fun x7110 () Int)
(declare-fun x1562 () Int)
(declare-fun x4017 () Bool)
(declare-fun x7164 () Int)
(declare-fun x7962 () Bool)
(declare-fun x251 () Int)
(declare-fun x6276 () Int)
(declare-fun x161 () Bool)
(declare-fun x7569 () Bool)
(declare-fun x8507 () Int)
(declare-fun x7756 () Int)
(declare-fun x5547 () Bool)
(declare-fun x8118 () Bool)
(declare-fun x7346 () Bool)
(declare-fun x4307 () Int)
(declare-fun x6589 () Bool)
(declare-fun x3338 () Int)
(declare-fun x5515 () Bool)
(declare-fun x3876 () Int)
(declare-fun x7323 () Bool)
(declare-fun x7577 () Bool)
(declare-fun x5725 () Int)
(declare-fun x8241 () Bool)
(declare-fun x8354 () Bool)
(declare-fun x6850 () Int)
(declare-fun x1318 () Int)
(declare-fun x8238 () Int)
(declare-fun x7888 () Int)
(declare-fun x7466 () Int)
(declare-fun x1168 () Int)
(declare-fun x3906 () Bool)
(declare-fun x8444 () Int)
(declare-fun x2483 () Bool)
(declare-fun x5193 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x7178 () Int)
(declare-fun x6777 () Bool)
(declare-fun x1036 () Int)
(declare-fun x3580 () Int)
(declare-fun x1156 () Int)
(declare-fun x1143 () Int)
(declare-fun x5154 () Bool)
(declare-fun x5292 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x2201 () Int)
(declare-fun x4699 () Bool)
(declare-fun x8389 () Int)
(declare-fun x1893 () Bool)
(declare-fun x5124 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x6039 () Int)
(declare-fun x6298 () Bool)
(declare-fun x3819 () Int)
(declare-fun x2766 () Int)
(declare-fun x3458 () Int)
(declare-fun x2587 () Int)
(declare-fun x6925 () Int)
(declare-fun x3451 () Int)
(declare-fun x660 () Bool)
(declare-fun x7477 () Bool)
(declare-fun x7144 () Bool)
(declare-fun x5213 () Int)
(declare-fun x5329 () Int)
(declare-fun x7337 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1835 () Bool)
(declare-fun x5707 () Int)
(declare-fun x436 () Int)
(declare-fun x8446 () Int)
(declare-fun x611 () Int)
(declare-fun x3343 () Int)
(declare-fun x681 () Int)
(declare-fun x1192 () Int)
(declare-fun x8530 () Int)
(declare-fun x2754 () Int)
(declare-fun x5353 () Int)
(declare-fun x3096 () Bool)
(declare-fun x2705 () Int)
(declare-fun x3648 () Int)
(declare-fun x319 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x837 () Int)
(declare-fun x6347 () Int)
(declare-fun x7833 () Bool)
(declare-fun x4642 () Int)
(declare-fun x4614 () Int)
(declare-fun x2954 () Bool)
(declare-fun x4192 () Bool)
(declare-fun x6734 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x853 () Int)
(declare-fun x5335 () Bool)
(declare-fun x4805 () Int)
(declare-fun x8520 () Int)
(declare-fun x676 () Int)
(declare-fun x3851 () Int)
(declare-fun x6597 () Bool)
(declare-fun x5607 () Bool)
(declare-fun x6438 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x4028 () Bool)
(declare-fun x621 () Bool)
(declare-fun x428 () Bool)
(declare-fun x2759 () Int)
(declare-fun x5971 () Int)
(declare-fun x1734 () Int)
(declare-fun x7295 () Bool)
(declare-fun x4720 () Bool)
(declare-fun x8526 () Bool)
(declare-fun x1112 () Int)
(declare-fun x2950 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x6213 () Int)
(declare-fun x6353 () Int)
(declare-fun x5243 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x8158 () Bool)
(declare-fun x3934 () Int)
(declare-fun x1415 () Bool)
(declare-fun x6946 () Int)
(declare-fun x80 () Int)
(declare-fun x8106 () Int)
(declare-fun x849 () Bool)
(declare-fun x980 () Int)
(declare-fun x7131 () Bool)
(declare-fun x6356 () Int)
(declare-fun x7064 () Int)
(declare-fun x840 () Bool)
(declare-fun x7003 () Bool)
(declare-fun x1648 () Int)
(declare-fun x5175 () Int)
(declare-fun x6716 (Int) Int)
(declare-fun x2388 () Bool)
(declare-fun x4724 () Int)
(declare-fun x1706 () Bool)
(declare-fun x2660 () Int)
(declare-fun x8518 () Int)
(declare-fun x116 () Bool)
(declare-fun x291 () Int)
(declare-fun x6851 () Int)
(declare-fun x6643 () Int)
(declare-fun x6570 () Bool)
(declare-fun x127 () Bool)
(declare-fun x6015 () Bool)
(declare-fun x1718 () Int)
(declare-fun x7122 () Bool)
(declare-fun x8471 () Bool)
(declare-fun x2098 () Int)
(declare-fun x5388 () Bool)
(declare-fun x2736 () Int)
(declare-fun x1047 () Int)
(declare-fun x3360 () Bool)
(declare-fun x170 () Bool)
(declare-fun x6071 () Int)
(declare-fun x914 () Int)
(declare-fun x6145 () Bool)
(declare-fun x2165 (Int) Int)
(declare-fun x6308 () Bool)
(declare-fun x7213 () Int)
(declare-fun x3926 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x1612 () Int)
(declare-fun x3686 () Int)
(declare-fun x183 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x7209 () Int)
(declare-fun x1799 () Bool)
(declare-fun x3948 () Int)
(declare-fun x7761 () Int)
(declare-fun x1359 () Int)
(declare-fun x3537 () Int)
(declare-fun x7117 () Bool)
(declare-fun x7576 () Int)
(declare-fun x8275 () Int)
(declare-fun x211 () Int)
(declare-fun x5962 () Int)
(declare-fun x4951 () Int)
(declare-fun x3151 () Int)
(declare-fun x4086 (Int) Int)
(declare-fun x3754 () Int)
(declare-fun x2975 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x2590 () Int)
(declare-fun x2052 () Int)
(declare-fun x3504 () Int)
(declare-fun x4108 () Bool)
(declare-fun x6489 () Int)
(declare-fun x1440 () Bool)
(declare-fun x8024 () Int)
(declare-fun x49 () Bool)
(declare-fun x5437 () Int)
(declare-fun x162 () Int)
(declare-fun x4974 () Int)
(declare-fun x3250 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x7501 () Bool)
(declare-fun x3196 (Int) Int)
(declare-fun x7898 () Int)
(declare-fun x3050 () Int)
(declare-fun x5370 () Bool)
(declare-fun x5538 () Int)
(declare-fun x8276 () Int)
(declare-fun x2440 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x2543 () Int)
(declare-fun x3069 () Int)
(declare-fun x2416 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x8361 () Bool)
(declare-fun x3300 () Int)
(declare-fun x2532 () Int)
(declare-fun x4360 () Bool)
(declare-fun x4409 () Int)
(declare-fun x5374 () Int)
(declare-fun x7620 () Bool)
(declare-fun x3124 () Int)
(declare-fun x800 () Bool)
(declare-fun x2695 () Bool)
(declare-fun x7687 () Bool)
(declare-fun x747 () Int)
(declare-fun x6876 () Int)
(declare-fun x1431 () Int)
(declare-fun x2171 () Bool)
(declare-fun x7216 () Int)
(declare-fun x6623 () Int)
(declare-fun x7695 () Bool)
(declare-fun x7611 () Int)
(declare-fun x3551 () Bool)
(declare-fun x7733 () Bool)
(declare-fun x6522 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x7503 () Bool)
(declare-fun x510 () Bool)
(declare-fun x8433 () Int)
(declare-fun x1017 () Int)
(declare-fun x1727 () Bool)
(declare-fun x8023 () Int)
(declare-fun x1578 () Bool)
(declare-fun x8483 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x7715 () Int)
(declare-fun x1687 () Bool)
(declare-fun x5691 () Int)
(declare-fun x4148 () Bool)
(declare-fun x7334 () Bool)
(declare-fun x2904 () Int)
(declare-fun x8416 () Bool)
(declare-fun x5611 () Bool)
(declare-fun x8057 () Bool)
(declare-fun x610 () Bool)
(declare-fun x7556 () Int)
(declare-fun x3235 () Bool)
(declare-fun x5117 () Int)
(declare-fun x2495 () Bool)
(declare-fun x7917 () Int)
(declare-fun x8288 () Int)
(declare-fun x5976 () Int)
(declare-fun x5859 () Int)
(declare-fun x5918 () Bool)
(declare-fun x123 () Int)
(declare-fun x7657 () Int)
(declare-fun x8550 () Int)
(declare-fun x1248 () Bool)
(declare-fun x3547 () Int)
(declare-fun x1177 (Int) Int)
(declare-fun x2136 () Int)
(declare-fun x1511 () Bool)
(declare-fun x4076 () Int)
(declare-fun x2066 () Bool)
(declare-fun x6337 () Int)
(declare-fun x7710 () Int)
(declare-fun x2564 () Int)
(declare-fun x1113 () Bool)
(declare-fun x7773 () Int)
(declare-fun x2719 () Bool)
(declare-fun x2216 () Int)
(declare-fun x7734 () Bool)
(declare-fun x3776 () Int)
(declare-fun x1643 () Bool)
(declare-fun x6449 () Bool)
(declare-fun x4049 () Int)
(declare-fun x202 () Bool)
(declare-fun x3068 () Int)
(declare-fun x8108 () Bool)
(declare-fun x7739 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x8000 () Int)
(declare-fun x6718 () Int)
(declare-fun x416 () Int)
(declare-fun x4264 () Int)
(declare-fun x2389 () Int)
(declare-fun x6343 () Int)
(declare-fun x7505 () Int)
(declare-fun x7648 () Int)
(declare-fun x1812 () Int)
(declare-fun x3764 () Bool)
(declare-fun x2874 () Int)
(declare-fun x447 () Int)
(declare-fun x7059 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x4338 () Int)
(declare-fun x6529 () Int)
(declare-fun x8016 () Int)
(declare-fun x7313 () Int)
(declare-fun x2580 () Int)
(declare-fun x5405 () Bool)
(declare-fun x4911 () Bool)
(declare-fun x3402 () Int)
(declare-fun x21 () Int)
(declare-fun x5765 () Bool)
(declare-fun x5777 () Int)
(declare-fun x7719 () Bool)
(declare-fun x5391 () Int)
(declare-fun x6842 () Int)
(declare-fun x7882 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x6243 () Int)
(declare-fun x5619 () Bool)
(declare-fun x4910 () Int)
(declare-fun x4703 () Int)
(declare-fun x115 () Bool)
(declare-fun x910 () Int)
(declare-fun x5904 () Int)
(declare-fun x2168 () Int)
(declare-fun x751 () Int)
(declare-fun x8404 () Int)
(declare-fun x1527 () Int)
(declare-fun x6124 () Int)
(declare-fun x4352 () Bool)
(declare-fun x3837 (Int) Int)
(declare-fun x3076 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x228 () Int)
(declare-fun x1201 () Bool)
(declare-fun x6817 () Int)
(declare-fun x7494 () Bool)
(declare-fun x3939 () Int)
(declare-fun x7747 () Bool)
(declare-fun x3963 () Int)
(declare-fun x7214 () Bool)
(declare-fun x6633 () Int)
(declare-fun x4926 () Int)
(declare-fun x60 () Bool)
(declare-fun x7293 () Int)
(declare-fun x7454 () Bool)
(declare-fun x7746 () Bool)
(declare-fun x5344 () Bool)
(declare-fun x4057 () Int)
(declare-fun x583 () Bool)
(declare-fun x3401 () Int)
(declare-fun x253 () Bool)
(declare-fun x632 () Int)
(declare-fun x3812 () Bool)
(declare-fun x517 () Int)
(declare-fun x4396 () Bool)
(declare-fun x806 () Bool)
(declare-fun x5808 () Int)
(declare-fun x5119 () Int)
(declare-fun x6732 () Bool)
(declare-fun x4026 () Int)
(declare-fun x6948 () Bool)
(declare-fun x5668 () Bool)
(declare-fun x8074 () Int)
(declare-fun x7891 () Int)
(declare-fun x2992 () Bool)
(declare-fun x3630 () Int)
(declare-fun x7517 () Int)
(declare-fun x3383 () Bool)
(declare-fun x1603 () Int)
(declare-fun x3071 (Int) Int)
(declare-fun x4702 () Int)
(declare-fun x2264 () Int)
(declare-fun x3271 () Bool)
(declare-fun x7102 () Bool)
(declare-fun x5212 () Int)
(declare-fun x341 () Bool)
(declare-fun x926 () Int)
(declare-fun x144 () Int)
(declare-fun x3444 () Bool)
(declare-fun x8093 () Int)
(declare-fun x5277 () Int)
(declare-fun x8261 () Int)
(declare-fun x7872 () Bool)
(declare-fun x77 () Int)
(declare-fun x375 () Int)
(declare-fun x312 () Int)
(declare-fun x6051 () Int)
(declare-fun x8342 () Bool)
(declare-fun x6747 () Int)
(declare-fun x4448 () Int)
(declare-fun x3977 () Int)
(declare-fun x3594 () Bool)
(declare-fun x1317 () Int)
(declare-fun x6565 () Int)
(declare-fun x4957 () Int)
(declare-fun x2472 () Int)
(declare-fun x5480 () Int)
(declare-fun x4290 () Int)
(declare-fun x4526 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x8062 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x6832 () Bool)
(declare-fun x4647 () Bool)
(declare-fun x3253 () Int)
(declare-fun x2059 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x4519 () Bool)
(declare-fun x482 () Bool)
(declare-fun x2079 (Int) Int)
(declare-fun x1538 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x7641 () Bool)
(declare-fun x169 () Int)
(declare-fun x6642 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x4881 () Int)
(declare-fun x276 () Bool)
(declare-fun x5837 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x4242 () Int)
(declare-fun x3526 () Bool)
(declare-fun x4476 () Bool)
(declare-fun x4793 () Bool)
(declare-fun x6479 () Bool)
(declare-fun x5677 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x612 () Int)
(declare-fun x74 () Bool)
(declare-fun x5367 () Int)
(declare-fun x7208 () Bool)
(declare-fun x774 () Bool)
(declare-fun x7258 () Int)
(declare-fun x1116 () Int)
(declare-fun x2575 () Int)
(declare-fun x1285 () Bool)
(declare-fun x5410 () Bool)
(declare-fun x758 () Int)
(declare-fun x1869 () Int)
(declare-fun x3611 () Int)
(declare-fun x465 () Int)
(declare-fun x4530 () Bool)
(declare-fun x7740 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x7961 () Int)
(declare-fun x2964 () Int)
(declare-fun x1961 () Bool)
(declare-fun x5084 () Bool)
(declare-fun x5618 () Int)
(declare-fun x4121 () Bool)
(declare-fun x5754 () Bool)
(declare-fun x7544 () Bool)
(declare-fun x1339 () Int)
(declare-fun x7839 () Int)
(declare-fun x8336 () Int)
(declare-fun x7373 () Int)
(declare-fun x4973 () Int)
(declare-fun x4223 () Int)
(declare-fun x157 () Bool)
(declare-fun x139 () Int)
(declare-fun x3145 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x5539 () Bool)
(declare-fun x8464 () Bool)
(declare-fun x7667 () Int)
(declare-fun x2423 () Int)
(declare-fun x3428 () Int)
(declare-fun x1917 () Bool)
(declare-fun x7018 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x6157 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x5002 () Bool)
(declare-fun x7255 () Bool)
(declare-fun x3413 () Int)
(declare-fun x5085 () Bool)
(declare-fun x7760 () Int)
(declare-fun x6766 () Int)
(declare-fun x7464 () Int)
(declare-fun x5592 () Bool)
(declare-fun x5015 () Bool)
(declare-fun x6952 () Bool)
(declare-fun x4883 () Int)
(declare-fun x6741 () Int)
(declare-fun x6190 () Int)
(declare-fun x8221 () Bool)
(declare-fun x367 () Int)
(declare-fun x6846 (Int) Int)
(declare-fun x6378 () Int)
(declare-fun x722 () Int)
(declare-fun x7549 () Int)
(declare-fun x7006 () Bool)
(declare-fun x626 () Bool)
(declare-fun x5107 () Bool)
(declare-fun x3936 () Bool)
(declare-fun x5651 () Int)
(declare-fun x344 () Int)
(declare-fun x8049 () Int)
(declare-fun x3333 () Bool)
(declare-fun x7581 () Bool)
(declare-fun x6544 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1091 () Int)
(declare-fun x3846 () Int)
(declare-fun x6689 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x3902 () Bool)
(declare-fun x6860 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1600 () Int)
(declare-fun x4015 () Bool)
(declare-fun x7672 () Int)
(declare-fun x5753 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x6973 () Bool)
(declare-fun x2715 () Bool)
(declare-fun x7205 () Bool)
(declare-fun x4607 (Int) Int)
(declare-fun x6515 () Int)
(declare-fun x8554 () Bool)
(declare-fun x7919 () Bool)
(declare-fun x7684 () Int)
(declare-fun x220 () Int)
(declare-fun x7348 () Int)
(declare-fun x5875 () Int)
(declare-fun x1918 () Bool)
(declare-fun x470 () Int)
(declare-fun x2057 () Bool)
(declare-fun x3345 () Int)
(declare-fun x3923 () Int)
(declare-fun x3651 () Int)
(declare-fun x1450 () Bool)
(declare-fun x6150 () Int)
(declare-fun x6402 () Int)
(declare-fun x5326 () Int)
(declare-fun x2016 () Bool)
(declare-fun x3019 () Int)
(declare-fun x6700 () Int)
(declare-fun x5662 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x8489 () Bool)
(declare-fun x8264 () Bool)
(declare-fun x1198 () Int)
(declare-fun x6993 () Bool)
(declare-fun x36 () Bool)
(declare-fun x670 () Int)
(declare-fun x8144 () Int)
(declare-fun x7285 () Int)
(declare-fun x3482 () Int)
(declare-fun x5826 () Bool)
(declare-fun x1110 () Int)
(declare-fun x7496 () Bool)
(declare-fun x7388 () Int)
(declare-fun x5836 () Int)
(declare-fun x5944 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x7633 () Int)
(declare-fun x96 () Bool)
(declare-fun x564 () Bool)
(declare-fun x6906 () Bool)
(declare-fun x816 () Int)
(declare-fun x1334 () Bool)
(declare-fun x4622 () Int)
(declare-fun x8381 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x7729 () Bool)
(declare-fun x5491 () Bool)
(declare-fun x4446 (Int) Int)
(declare-fun x6518 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x7573 () Int)
(declare-fun x7435 () Bool)
(declare-fun x5426 () Int)
(declare-fun x6936 () Int)
(declare-fun x8291 () Bool)
(declare-fun x8246 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x4551 () Int)
(declare-fun x8030 () Bool)
(declare-fun x4582 () Int)
(declare-fun x7078 () Bool)
(declare-fun x8449 () Bool)
(declare-fun x7265 () Int)
(declare-fun x4393 () Bool)
(declare-fun x6506 () Bool)
(declare-fun x8110 () Int)
(declare-fun x5696 () Int)
(declare-fun x3534 () Int)
(declare-fun x7647 () Int)
(declare-fun x22 () Int)
(declare-fun x6992 () Int)
(declare-fun x6007 () Int)
(declare-fun x5109 () Int)
(declare-fun x5730 () Int)
(declare-fun x6459 () Bool)
(declare-fun x4376 () Bool)
(declare-fun x2680 () Bool)
(declare-fun x7350 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x850 () Int)
(declare-fun x7848 () Int)
(declare-fun x6133 () Int)
(declare-fun x7539 () Int)
(declare-fun x6802 () Bool)
(declare-fun x6819 () Bool)
(declare-fun x5714 () Bool)
(declare-fun x7969 () Int)
(declare-fun x4155 () Bool)
(declare-fun x5805 () Int)
(declare-fun x4787 () Bool)
(declare-fun x3358 () Int)
(declare-fun x3914 () Int)
(declare-fun x5896 () Bool)
(declare-fun x551 () Int)
(declare-fun x6926 () Bool)
(declare-fun x6359 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x6141 () Bool)
(declare-fun x3325 () Int)
(declare-fun x5640 () Bool)
(declare-fun x304 () Bool)
(declare-fun x6796 () Bool)
(declare-fun x5118 () Int)
(declare-fun x345 () Bool)
(declare-fun x3998 () Bool)
(declare-fun x8426 () Int)
(declare-fun x6132 () Int)
(declare-fun x1798 () Int)
(declare-fun x1794 () Int)
(declare-fun x687 () Bool)
(declare-fun x7243 () Bool)
(declare-fun x7200 () Bool)
(declare-fun x6139 () Bool)
(declare-fun x5272 () Int)
(declare-fun x804 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1709 () Int)
(declare-fun x5462 () Bool)
(declare-fun x6196 () Bool)
(declare-fun x1434 () Int)
(declare-fun x4538 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1575 () Int)
(declare-fun x6478 () Bool)
(declare-fun x3313 () Int)
(declare-fun x568 () Bool)
(declare-fun x6394 () Bool)
(declare-fun x6392 () Int)
(declare-fun x3474 () Int)
(declare-fun x6 () Int)
(declare-fun x3302 () Int)
(declare-fun x1264 () Int)
(declare-fun x5026 () Bool)
(declare-fun x381 () Int)
(declare-fun x4295 () Int)
(declare-fun x3261 () Bool)
(declare-fun x79 () Bool)
(declare-fun x7260 () Int)
(declare-fun x7680 () Bool)
(declare-fun x1840 () Int)
(declare-fun x5887 () Bool)
(declare-fun x601 () Int)
(declare-fun x8383 (Int) Int)
(declare-fun x2901 () Bool)
(declare-fun x4085 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1628 () Int)
(declare-fun x587 () Bool)
(declare-fun x7025 () Int)
(declare-fun x4952 () Bool)
(declare-fun x4698 () Int)
(declare-fun x4025 () Int)
(declare-fun x1029 () Int)
(declare-fun x2398 () Int)
(declare-fun x221 () Int)
(declare-fun x4623 () Bool)
(declare-fun x2023 () Int)
(declare-fun x7963 () Bool)
(declare-fun x6078 () Bool)
(declare-fun x6650 () Bool)
(declare-fun x7889 () Int)
(declare-fun x7800 () Bool)
(declare-fun x4685 () Int)
(declare-fun x5456 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x938 () Int)
(declare-fun x3862 () Int)
(declare-fun x3104 () Int)
(declare-fun x2835 () Int)
(declare-fun x3894 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x6807 () Int)
(declare-fun x1583 () Bool)
(declare-fun x2463 (Int) Int)
(declare-fun x3161 () Int)
(declare-fun x862 () Int)
(declare-fun x2129 () Int)
(declare-fun x7396 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x7831 () Bool)
(declare-fun x7591 () Bool)
(declare-fun x6488 () Bool)
(declare-fun x586 () Int)
(declare-fun x6100 () Int)
(declare-fun x6053 () Int)
(declare-fun x8277 () Bool)
(declare-fun x5226 () Int)
(declare-fun x3505 () Bool)
(declare-fun x8406 () Bool)
(declare-fun x6752 () Int)
(declare-fun x3294 () Bool)
(declare-fun x6095 () Int)
(declare-fun x2408 () Bool)
(declare-fun x2523 () Int)
(declare-fun x1399 () Bool)
(declare-fun x5089 () Bool)
(declare-fun x5228 () Bool)
(declare-fun x7409 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x2797 () Int)
(declare-fun x1874 () Int)
(declare-fun x6396 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x525 () Bool)
(declare-fun x7567 () Bool)
(declare-fun x6820 () Bool)
(declare-fun x277 () Int)
(declare-fun x8037 () Bool)
(declare-fun x4422 () Int)
(declare-fun x7162 () Bool)
(declare-fun x7039 () Int)
(declare-fun x819 () Int)
(declare-fun x7041 (Int) Int)
(declare-fun x1681 () Int)
(declare-fun x4778 () Int)
(declare-fun x1342 () Int)
(declare-fun x2263 () Bool)
(declare-fun x7268 () Bool)
(declare-fun x4839 () Int)
(declare-fun x6939 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x126 () Int)
(declare-fun x3339 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x178 () Bool)
(declare-fun x5211 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1182 () Int)
(declare-fun x5595 () Bool)
(declare-fun x5494 () Int)
(declare-fun x878 () Bool)
(declare-fun x6465 () Int)
(declare-fun x3195 () Bool)
(declare-fun x647 () Bool)
(declare-fun x5360 () Int)
(declare-fun x5512 () Bool)
(declare-fun x204 () Int)
(declare-fun x5745 () Bool)
(declare-fun x5841 () Int)
(declare-fun x3272 () Bool)
(declare-fun x7249 () Int)
(declare-fun x8184 () Bool)
(declare-fun x7936 () Int)
(declare-fun x4455 () Bool)
(declare-fun x6837 () Bool)
(declare-fun x8295 () Bool)
(declare-fun x5889 () Int)
(declare-fun x12 () Int)
(declare-fun x1458 () Int)
(declare-fun x284 () Bool)
(declare-fun x8532 () Int)
(declare-fun x6987 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x2711 () Bool)
(declare-fun x786 () Int)
(declare-fun x992 () Bool)
(declare-fun x13 () Int)
(declare-fun x8021 () Int)
(declare-fun x3708 () Int)
(declare-fun x2298 () Bool)
(declare-fun x8410 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x2597 () Int)
(declare-fun x3769 () Bool)
(declare-fun x5909 () Bool)
(declare-fun x2053 () Int)
(declare-fun x4888 () Int)
(declare-fun x1635 () Bool)
(declare-fun x835 () Int)
(declare-fun x7858 () Int)
(declare-fun x6140 () Int)
(declare-fun x1743 () Int)
(declare-fun x3116 () Bool)
(declare-fun x8307 () Int)
(declare-fun x777 () Int)
(declare-fun x7890 () Int)
(declare-fun x995 () Bool)
(declare-fun x2131 () Int)
(declare-fun x3291 () Int)
(declare-fun x5731 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x3493 () Int)
(declare-fun x5711 () Int)
(declare-fun x1186 () Bool)
(declare-fun x6156 () Int)
(declare-fun x1969 () Int)
(declare-fun x7677 () Bool)
(declare-fun x8525 () Bool)
(declare-fun x5296 () Int)
(declare-fun x7148 () Int)
(declare-fun x5692 () Bool)
(declare-fun x8104 () Int)
(declare-fun x2501 (Int) Int)
(declare-fun x3305 () Int)
(declare-fun x1244 () Bool)
(declare-fun x7598 () Bool)
(declare-fun x5627 () Int)
(declare-fun x3608 () Int)
(declare-fun x2100 () Int)
(declare-fun x1000 () Int)
(declare-fun x3891 () Int)
(declare-fun x7655 () Int)
(declare-fun x3198 () Bool)
(declare-fun x6440 () Int)
(declare-fun x6005 () Int)
(declare-fun x1887 () Int)
(declare-fun x1204 () Int)
(declare-fun x898 () Int)
(declare-fun x2539 () Int)
(declare-fun x8284 () Int)
(declare-fun x4100 () Bool)
(declare-fun x404 () Int)
(declare-fun x2481 () Int)
(declare-fun x8210 () Bool)
(declare-fun x4239 () Int)
(declare-fun x7244 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x18 () Bool)
(declare-fun x7335 () Bool)
(declare-fun x299 () Int)
(declare-fun x1662 () Bool)
(declare-fun x143 () Int)
(declare-fun x4424 () Int)
(declare-fun x665 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x7701 () Int)
(declare-fun x570 () Int)
(declare-fun x7575 () Int)
(declare-fun x5596 () Bool)
(declare-fun x7123 () Int)
(declare-fun x6636 () Int)
(declare-fun x5064 () Int)
(declare-fun x7043 () Int)
(declare-fun x254 () Bool)
(declare-fun x8197 () Int)
(declare-fun x2546 () Bool)
(declare-fun x5133 () Int)
(declare-fun x5149 () Int)
(declare-fun x196 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x4845 () Int)
(declare-fun x4999 () Int)
(declare-fun x5479 () Bool)
(declare-fun x5671 () Bool)
(declare-fun x6854 () Int)
(declare-fun x5293 () Int)
(declare-fun x6725 () Bool)
(declare-fun x3691 () Int)
(declare-fun x3595 () Int)
(declare-fun x3784 () Bool)
(declare-fun x6540 () Int)
(declare-fun x1071 () Int)
(declare-fun x3055 () Int)
(declare-fun x125 () Int)
(declare-fun x2968 () Int)
(declare-fun x2603 () Int)
(declare-fun x3326 () Int)
(declare-fun x1839 () Int)
(declare-fun x6052 () Bool)
(declare-fun x4864 () Int)
(declare-fun x6453 () Int)
(declare-fun x4561 () Int)
(declare-fun x6149 () Bool)
(declare-fun x5658 () Int)
(declare-fun x6907 () Bool)
(declare-fun x7415 () Bool)
(declare-fun x6279 () Int)
(declare-fun x5368 () Bool)
(declare-fun x4604 () Int)
(declare-fun x7827 (Int) Int)
(declare-fun x7251 () Int)
(declare-fun x6970 () Int)
(declare-fun x7550 () Int)
(declare-fun x3056 () Bool)
(declare-fun x8373 () Int)
(declare-fun x2222 () Bool)
(declare-fun x5331 () Int)
(declare-fun x3432 () Bool)
(declare-fun x6499 () Bool)
(declare-fun x5781 () Int)
(declare-fun x480 () Int)
(declare-fun x8103 () Bool)
(declare-fun x7669 () Int)
(declare-fun x6568 () Int)
(declare-fun x8207 () Int)
(declare-fun x2686 () Int)
(declare-fun x6073 () Int)
(declare-fun x1863 () Int)
(declare-fun x6533 () Int)
(declare-fun x1319 () Int)
(declare-fun x1051 () Int)
(declare-fun x3184 () Bool)
(declare-fun x3818 () Int)
(declare-fun x5686 () Int)
(declare-fun x6211 () Bool)
(declare-fun x3655 () Int)
(declare-fun x1781 () Int)
(declare-fun x8262 () Int)
(declare-fun x2725 () Int)
(declare-fun x6216 () Int)
(declare-fun x4117 () Int)
(declare-fun x6398 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x5628 () Int)
(declare-fun x727 () Bool)
(declare-fun x5646 () Int)
(declare-fun x6501 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1986 () Int)
(declare-fun x5039 () Bool)
(declare-fun x2421 () Bool)
(declare-fun x3290 () Int)
(declare-fun x6849 () Bool)
(declare-fun x5559 () Int)
(declare-fun x5382 () Int)
(declare-fun x1340 () Int)
(declare-fun x7188 () Bool)
(declare-fun x6424 () Bool)
(declare-fun x4143 () Int)
(declare-fun x7989 () Bool)
(declare-fun x4428 () Int)
(declare-fun x962 () Int)
(declare-fun x5390 () Bool)
(declare-fun x4757 () Int)
(declare-fun x491 () Bool)
(declare-fun x6875 () Int)
(declare-fun x5310 () Int)
(declare-fun x8058 () Int)
(declare-fun x1818 () Bool)
(declare-fun x1075 () Int)
(declare-fun x3025 () Bool)
(declare-fun x3379 () Int)
(declare-fun x4253 () Bool)
(declare-fun x1652 () Int)
(declare-fun x883 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x4139 () Int)
(declare-fun x5311 () Int)
(declare-fun x6927 () Int)
(declare-fun x2624 () Int)
(declare-fun x172 () Int)
(declare-fun x2107 () Int)
(declare-fun x3635 () Int)
(declare-fun x4199 () Int)
(declare-fun x4995 () Bool)
(declare-fun x2942 () Int)
(declare-fun x8252 () Int)
(declare-fun x2084 () Bool)
(declare-fun x3762 () Bool)
(declare-fun x5259 () Int)
(declare-fun x1877 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x7207 () Bool)
(declare-fun x8083 () Int)
(declare-fun x952 () Int)
(declare-fun x5176 () Int)
(declare-fun x2839 () Int)
(declare-fun x7866 () Int)
(declare-fun x5924 () Bool)
(declare-fun x331 () Bool)
(declare-fun x5397 () Int)
(declare-fun x7353 () Int)
(declare-fun x5012 () Int)
(declare-fun x4188 () Int)
(declare-fun x6628 () Bool)
(declare-fun x3298 () Int)
(declare-fun x855 () Int)
(declare-fun x3334 () Int)
(declare-fun x817 () Bool)
(declare-fun x6315 () Int)
(declare-fun x7727 () Bool)
(declare-fun x1076 () Int)
(declare-fun x4008 () Bool)
(declare-fun x985 () Int)
(declare-fun x2328 () Int)
(declare-fun x4564 () Int)
(declare-fun x1127 () Bool)
(declare-fun x6153 () Int)
(declare-fun x5264 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x4990 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x3 () Bool)
(declare-fun x3223 () Int)
(declare-fun x355 () Int)
(declare-fun x7029 () Bool)
(declare-fun x5306 () Int)
(declare-fun x4150 () Int)
(declare-fun x1637 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x7653 () Bool)
(declare-fun x2990 () Int)
(declare-fun x1466 () Bool)
(declare-fun x3153 () Int)
(declare-fun x1098 () Int)
(declare-fun x2149 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x10 () Int)
(declare-fun x5233 () Int)
(declare-fun x602 () Int)
(declare-fun x4590 () Bool)
(declare-fun x4906 () Int)
(declare-fun x4389 () Bool)
(declare-fun x3657 () Int)
(declare-fun x348 () Bool)
(declare-fun x1542 () Int)
(declare-fun x8182 () Int)
(declare-fun x103 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x7559 () Bool)
(declare-fun x4738 () Bool)
(declare-fun x6730 () Int)
(declare-fun x7177 () Int)
(declare-fun x4020 () Bool)
(declare-fun x2830 () Int)
(declare-fun x6660 () Int)
(declare-fun x4343 () Int)
(declare-fun x389 () Int)
(declare-fun x6879 () Int)
(declare-fun x977 () Bool)
(declare-fun x7040 () Int)
(declare-fun x8334 () Bool)
(declare-fun x3112 () Int)
(declare-fun x599 () Bool)
(declare-fun x3273 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x6064 () Int)
(declare-fun x1009 () Bool)
(declare-fun x5321 () Int)
(declare-fun x1854 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x7902 () Int)
(declare-fun x4700 () Int)
(declare-fun x2080 () Bool)
(declare-fun x3672 () Int)
(declare-fun x1295 () Int)
(declare-fun x6727 () Int)
(declare-fun x8466 () Bool)
(declare-fun x2696 () Int)
(declare-fun x2484 () Int)
(declare-fun x4921 (Int) Int)
(declare-fun x7578 () Bool)
(declare-fun x3013 () Int)
(declare-fun x8469 () Int)
(declare-fun x3125 () Int)
(declare-fun x6234 () Int)
(declare-fun x941 () Int)
(declare-fun x1908 () Int)
(declare-fun x7836 () Int)
(declare-fun x8038 () Bool)
(declare-fun x6247 () Bool)
(declare-fun x528 () Int)
(declare-fun x1096 () Int)
(declare-fun x538 () Int)
(declare-fun x2482 () Int)
(declare-fun x4737 () Bool)
(declare-fun x5871 () Bool)
(declare-fun x6919 () Int)
(declare-fun x820 () Int)
(declare-fun x7410 () Int)
(declare-fun x155 () Bool)
(declare-fun x256 () Int)
(declare-fun x2191 () Bool)
(declare-fun x5086 () Int)
(declare-fun x6147 () Int)
(declare-fun x4758 () Int)
(declare-fun x8053 () Bool)
(declare-fun x8186 () Int)
(declare-fun x7867 () Bool)
(declare-fun x4356 () Int)
(declare-fun x5819 () Bool)
(declare-fun x100 () Int)
(declare-fun x3527 () Int)
(declare-fun x5654 () Int)
(declare-fun x6584 () Bool)
(declare-fun x2643 () Int)
(declare-fun x2957 () Int)
(declare-fun x5442 () Int)
(declare-fun x5520 () Int)
(declare-fun x4126 () Bool)
(declare-fun x7758 () Int)
(declare-fun x5910 () Int)
(declare-fun x6663 () Bool)
(declare-fun x3593 () Int)
(declare-fun x4809 () Int)
(declare-fun x4755 () Int)
(declare-fun x5247 () Int)
(declare-fun x7222 () Bool)
(declare-fun x6683 () Int)
(declare-fun x419 () Int)
(declare-fun x5415 () Int)
(declare-fun x907 () Int)
(declare-fun x2962 () Bool)
(declare-fun x940 () Bool)
(declare-fun x2442 () Int)
(declare-fun x4113 () Int)
(declare-fun x6472 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x31 () Int)
(declare-fun x4114 () Int)
(declare-fun x7416 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1270 () Int)
(declare-fun x7364 () Int)
(declare-fun x3623 () Bool)
(declare-fun x4730 () Int)
(declare-fun x6418 () Int)
(declare-fun x55 () Int)
(declare-fun x5874 () Int)
(declare-fun x1779 () Int)
(declare-fun x2101 () Int)
(declare-fun x4227 () Bool)
(declare-fun x6630 () Int)
(declare-fun x6289 () Bool)
(declare-fun x5554 () Bool)
(declare-fun x2220 () Int)
(declare-fun x4677 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x7732 () Int)
(declare-fun x3833 () Bool)
(declare-fun x6415 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x5870 () Bool)
(declare-fun x7048 () Int)
(declare-fun x5799 () Int)
(declare-fun x1910 () Int)
(declare-fun x7198 () Int)
(declare-fun x7448 () Int)
(declare-fun x7314 () Bool)
(declare-fun x4929 () Int)
(declare-fun x6209 () Int)
(declare-fun x8555 () Int)
(declare-fun x1088 () Int)
(declare-fun x6019 () Int)
(declare-fun x1187 () Bool)
(declare-fun x458 () Int)
(declare-fun x3856 () Int)
(declare-fun x5614 () Int)
(declare-fun x949 () Bool)
(declare-fun x6364 () Int)
(declare-fun x4070 () Int)
(declare-fun x7817 () Int)
(declare-fun x7887 () Int)
(declare-fun x3172 () Bool)
(declare-fun x2963 () Int)
(declare-fun x529 () Bool)
(declare-fun x5636 () Int)
(declare-fun x5542 (Int) Int)
(declare-fun x5920 () Int)
(declare-fun x2363 () Int)
(declare-fun x2594 () Int)
(declare-fun x1081 () Int)
(declare-fun x7137 () Int)
(declare-fun x6090 () Bool)
(declare-fun x4790 () Int)
(declare-fun x7690 () Int)
(declare-fun x5672 () Bool)
(declare-fun x546 () Int)
(declare-fun x971 () Int)
(declare-fun x2556 () Bool)
(declare-fun x5964 () Bool)
(declare-fun x4693 () Int)
(declare-fun x5612 () Int)
(declare-fun x1451 () Int)
(declare-fun x2970 () Int)
(declare-fun x8042 () Int)
(declare-fun x2828 () Int)
(declare-fun x5298 () Bool)
(declare-fun x802 () Bool)
(declare-fun x6093 () Int)
(declare-fun x4288 () Bool)
(declare-fun x2949 () Int)
(declare-fun x3031 () Bool)
(declare-fun x7038 () Int)
(declare-fun x8270 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x5945 () Bool)
(declare-fun x6422 () Int)
(declare-fun x2821 () Int)
(declare-fun x5373 () Bool)
(declare-fun x7976 () Int)
(declare-fun x3561 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x6106 () Bool)
(declare-fun x6521 () Bool)
(declare-fun x3788 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x6246 () Int)
(declare-fun x4802 () Int)
(declare-fun x4978 (Int) Int)
(declare-fun x7275 () Int)
(declare-fun x8330 () Bool)
(declare-fun x6230 () Int)
(declare-fun x5102 () Bool)
(declare-fun x6383 () Int)
(declare-fun x4835 () Int)
(declare-fun x2741 (Int) Bool)
(declare-fun x187 () Int)
(declare-fun x2173 () Int)
(declare-fun x7558 () Bool)
(declare-fun x233 () Int)
(declare-fun x1966 () Bool)
(declare-fun x5857 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x8511 () Bool)
(declare-fun x1400 () Int)
(declare-fun x5769 () Int)
(declare-fun x6703 () Int)
(declare-fun x4262 () Int)
(declare-fun x5351 () Bool)
(declare-fun x4825 () Bool)
(declare-fun x6461 () Bool)
(declare-fun x2015 () Int)
(declare-fun x3208 () Bool)
(declare-fun x4206 () Int)
(declare-fun x7359 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x801 () Int)
(declare-fun x3452 () Int)
(declare-fun x4441 () Bool)
(declare-fun x7488 () Bool)
(declare-fun x675 () Bool)
(declare-fun x934 () Bool)
(declare-fun x5356 () Int)
(declare-fun x1256 () Bool)
(declare-fun x2972 () Int)
(declare-fun x1373 () Int)
(declare-fun x6800 () Bool)
(declare-fun x6416 () Int)
(declare-fun x6745 () Bool)
(declare-fun x2871 () Int)
(declare-fun x7070 (Int) Int)
(declare-fun x7752 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x1588 () Bool)
(declare-fun x7141 (Int) Int)
(declare-fun x5664 () Int)
(declare-fun x3619 () Bool)
(declare-fun x2410 (Int) Int)
(declare-fun x888 () Bool)
(declare-fun x7269 () Bool)
(declare-fun x6682 () Int)
(declare-fun x414 () Bool)
(declare-fun x3193 () Int)
(declare-fun x7666 () Int)
(declare-fun x4335 () Int)
(declare-fun x6067 () Int)
(declare-fun x5655 () Int)
(declare-fun x7854 () Bool)
(declare-fun x3690 () Int)
(declare-fun x8025 () Int)
(declare-fun x5182 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x6931 () Bool)
(declare-fun x7377 () Bool)
(declare-fun x207 () Int)
(declare-fun x7253 () Int)
(declare-fun x3199 () Int)
(declare-fun x4554 () Int)
(declare-fun x4527 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x1594 () Int)
(declare-fun x8407 () Bool)
(declare-fun x1994 () Int)
(declare-fun x3433 () Int)
(declare-fun x1012 () Int)
(declare-fun x7845 () Int)
(declare-fun x672 () Bool)
(declare-fun x1351 () Int)
(declare-fun x6771 () Bool)
(declare-fun x4671 () Bool)
(declare-fun x669 () Bool)
(declare-fun x7288 () Bool)
(declare-fun x4275 () Int)
(declare-fun x6543 () Bool)
(declare-fun x7787 () Bool)
(declare-fun x2701 () Int)
(declare-fun x8070 () Int)
(declare-fun x4567 () Int)
(declare-fun x1312 () Bool)
(declare-fun x8355 () Int)
(declare-fun x154 () Int)
(declare-fun x1430 () Bool)
(declare-fun x5217 () Int)
(declare-fun x5890 () Bool)
(declare-fun x6458 () Int)
(declare-fun x4203 () Int)
(declare-fun x2577 () Bool)
(declare-fun x8115 () Bool)
(declare-fun x4588 () Int)
(declare-fun x1901 () Int)
(declare-fun x3542 () Int)
(declare-fun x8545 () Int)
(declare-fun x3279 () Bool)
(declare-fun x3200 () Int)
(declare-fun x4745 () Bool)
(declare-fun x5675 () Int)
(declare-fun x6753 () Int)
(declare-fun x1176 () Int)
(declare-fun x8304 () Bool)
(declare-fun x7210 () Bool)
(declare-fun x448 () Bool)
(declare-fun x1619 () Int)
(declare-fun x2774 () Bool)
(declare-fun x2304 (Int) Int)
(declare-fun x5588 () Bool)
(declare-fun x7878 () Int)
(declare-fun x373 () Int)
(declare-fun x5632 () Int)
(declare-fun x6058 () Int)
(declare-fun x2006 () Int)
(declare-fun x6806 () Bool)
(declare-fun x2626 () Int)
(declare-fun x5464 () Int)
(declare-fun x1364 () Bool)
(declare-fun x3106 () Int)
(declare-fun x1738 () Int)
(declare-fun x6082 () Bool)
(declare-fun x4313 () Int)
(declare-fun x3901 () Int)
(declare-fun x5739 () Int)
(declare-fun x5244 () Bool)
(declare-fun x8257 () Bool)
(declare-fun x7440 () Int)
(declare-fun x8105 () Bool)
(declare-fun x495 () Int)
(declare-fun x4039 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x370 () Bool)
(declare-fun x5787 () Int)
(declare-fun x7427 () Bool)
(declare-fun x7049 () Int)
(declare-fun x6360 () Int)
(declare-fun x3010 () Int)
(declare-fun x5978 () Bool)
(declare-fun x8237 () Int)
(declare-fun x7942 () Int)
(declare-fun x1581 () Bool)
(declare-fun x2020 () Int)
(declare-fun x8417 () Bool)
(declare-fun x4970 () Int)
(declare-fun x1371 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x7252 () Bool)
(declare-fun x4379 () Int)
(declare-fun x785 () Bool)
(declare-fun x879 () Int)
(declare-fun x8006 () Int)
(declare-fun x4449 (Int) Int)
(declare-fun x8300 () Int)
(declare-fun x1305 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x1896 () Int)
(declare-fun x4504 () Bool)
(declare-fun x863 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x7897 () Bool)
(declare-fun x7098 () Int)
(declare-fun x3848 () Int)
(declare-fun x2816 () Int)
(declare-fun x6827 () Bool)
(declare-fun x5959 () Int)
(declare-fun x3176 () Int)
(declare-fun x7424 () Bool)
(declare-fun x3408 () Bool)
(declare-fun x3850 () Int)
(declare-fun x1461 () Bool)
(declare-fun x5237 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x1740 () Int)
(declare-fun x5828 () Int)
(declare-fun x4212 () Int)
(declare-fun x1996 () Int)
(declare-fun x3541 (Int) Int)
(declare-fun x2585 () Bool)
(declare-fun x2918 () Int)
(declare-fun x6514 () Bool)
(declare-fun x1982 () Int)
(declare-fun x6922 () Bool)
(declare-fun x1616 () Int)
(declare-fun x5861 () Int)
(declare-fun x1824 () Int)
(declare-fun x2203 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x4075 () Int)
(declare-fun x5591 () Bool)
(declare-fun x7351 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x3663 (Int) Int)
(declare-fun x1134 () Bool)
(declare-fun x8419 () Int)
(declare-fun x642 () Bool)
(declare-fun x7868 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x7603 () Bool)
(declare-fun x8290 () Int)
(declare-fun x4672 () Int)
(declare-fun x3969 () Bool)
(declare-fun x5153 () Bool)
(declare-fun x6911 () Int)
(declare-fun x5823 () Bool)
(declare-fun x133 () Int)
(declare-fun x6527 () Int)
(declare-fun x981 () Int)
(declare-fun x3974 () Bool)
(declare-fun x4487 () Int)
(declare-fun x1906 () Bool)
(declare-fun x5192 () Int)
(declare-fun x3100 () Int)
(declare-fun x843 () Int)
(declare-fun x4385 () Bool)
(declare-fun x1640 () Int)
(declare-fun x6638 () Int)
(declare-fun x2354 () Bool)
(declare-fun x6131 () Int)
(declare-fun x7681 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x4319 () Int)
(declare-fun x4679 () Bool)
(declare-fun x7120 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x6614 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x8298 () Bool)
(declare-fun x8028 () Bool)
(declare-fun x578 () Int)
(declare-fun x6637 () Bool)
(declare-fun x5589 () Int)
(declare-fun x5386 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x4507 () Int)
(declare-fun x5702 () Bool)
(declare-fun x4146 () Int)
(declare-fun x8243 () Bool)
(declare-fun x6423 () Bool)
(declare-fun x2648 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x301 () Int)
(declare-fun x3984 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x4975 () Int)
(declare-fun x7483 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1255 () Int)
(declare-fun x69 () Bool)
(declare-fun x7548 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x406 () Int)
(declare-fun x4178 () Int)
(declare-fun x5581 () Bool)
(declare-fun x2801 () Bool)
(declare-fun x7286 () Int)
(declare-fun x1615 () Int)
(declare-fun x7755 () Int)
(declare-fun x7366 () Bool)
(declare-fun x8519 () Bool)
(declare-fun x3236 () Int)
(declare-fun x2512 () Int)
(declare-fun x7104 () Int)
(declare-fun x4879 () Bool)
(declare-fun x1951 () Int)
(declare-fun x1178 () Int)
(declare-fun x2661 () Int)
(declare-fun x8281 () Bool)
(declare-fun x6966 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x4827 (Int) Int)
(declare-fun x921 () Int)
(declare-fun x4524 () Bool)
(declare-fun x6113 () Bool)
(declare-fun x5022 () Bool)
(declare-fun x3280 () Int)
(declare-fun x6809 () Int)
(declare-fun x5490 () Bool)
(declare-fun x4350 () Int)
(declare-fun x6591 () Bool)
(declare-fun x6399 () Int)
(declare-fun x3160 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x471 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x2554 () Int)
(declare-fun x3976 () Bool)
(declare-fun x5045 () Bool)
(declare-fun x4041 (Int Int Int Int Int) Int)
(declare-fun x2437 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x6894 () Int)
(declare-fun x363 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1829 () Int)
(declare-fun x4874 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1744 () Bool)
(declare-fun x485 () Bool)
(declare-fun x6475 () Bool)
(declare-fun x2003 () Int)
(declare-fun x3110 () Bool)
(declare-fun x4697 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1420 () Int)
(declare-fun x8185 () Int)
(declare-fun x3701 () Int)
(declare-fun x8168 () Bool)
(declare-fun x8552 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x6006 () Bool)
(declare-fun x1468 () Int)
(declare-fun x6799 () Bool)
(declare-fun x5963 () Int)
(declare-fun x2325 () Int)
(declare-fun x7689 () Int)
(declare-fun x3714 () Int)
(declare-fun x7283 () Int)
(declare-fun x7021 () Int)
(declare-fun x3217 () Int)
(declare-fun x7099 () Int)
(declare-fun x8260 () Bool)
(declare-fun x1591 () Int)
(declare-fun x7643 () Int)
(declare-fun x2676 () Int)
(declare-fun x2055 () Int)
(declare-fun x2152 () Bool)
(declare-fun x4050 () Int)
(declare-fun x6477 () Int)
(declare-fun x8055 () Int)
(declare-fun x5473 () Int)
(declare-fun x1171 () Int)
(declare-fun x3374 () Int)
(declare-fun x5517 () Bool)
(declare-fun x50 () Bool)
(declare-fun x190 () Bool)
(declare-fun x7304 () Int)
(declare-fun x3787 () Bool)
(declare-fun x8101 () Bool)
(declare-fun x3885 () Bool)
(declare-fun x6013 () Int)
(declare-fun x3132 () Bool)
(declare-fun x6324 () Int)
(declare-fun x5792 () Int)
(declare-fun x2074 () Bool)
(declare-fun x3770 () Bool)
(declare-fun x7101 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x3899 () Int)
(declare-fun x5206 () Bool)
(declare-fun x6999 () Int)
(declare-fun x5343 () Int)
(declare-fun x6333 () Int)
(declare-fun x4101 () Int)
(declare-fun x1456 () Int)
(declare-fun x6721 () Int)
(declare-fun x6292 (Int Int Int Int Int Int) Int)
(declare-fun x8422 () Bool)
(declare-fun x5387 () Bool)
(declare-fun x535 () Int)
(declare-fun x7500 () Int)
(declare-fun x3247 () Int)
(declare-fun x628 () Int)
(declare-fun x8248 () Bool)
(declare-fun x8060 () Int)
(declare-fun x2703 () Bool)
(declare-fun x7042 () Bool)
(declare-fun x6117 () Bool)
(declare-fun x7470 () Int)
(declare-fun x6385 () Int)
(declare-fun x2531 () Int)
(declare-fun x1233 () Int)
(declare-fun x1831 () Int)
(declare-fun x3628 () Bool)
(declare-fun x5218 () Bool)
(declare-fun x986 () Int)
(declare-fun x1005 () Int)
(declare-fun x5977 () Bool)
(declare-fun x320 () Bool)
(declare-fun x1417 () Int)
(declare-fun x891 () Int)
(declare-fun x582 () Int)
(declare-fun x5010 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x5502 () Int)
(declare-fun x6379 () Int)
(declare-fun x5269 () Int)
(declare-fun x839 () Int)
(declare-fun x5457 () Int)
(declare-fun x4127 () Bool)
(declare-fun x6089 () Int)
(declare-fun x6774 () Int)
(declare-fun x4099 () Int)
(declare-fun x5921 () Int)
(declare-fun x709 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x97 () Bool)
(declare-fun x5531 () Int)
(declare-fun x2455 () Int)
(declare-fun x7998 () Bool)
(declare-fun x6844 () Int)
(declare-fun x4432 () Int)
(declare-fun x1217 () Bool)
(declare-fun x6481 () Int)
(declare-fun x6469 () Bool)
(declare-fun x6283 () Int)
(declare-fun x5719 () Bool)
(declare-fun x6001 () Int)
(declare-fun x5412 () Int)
(declare-fun x7202 () Bool)
(declare-fun x8001 () Bool)
(declare-fun x5687 () Int)
(declare-fun x4250 () Int)
(declare-fun x2262 () Bool)
(declare-fun x3369 () Bool)
(declare-fun x7979 () Bool)
(declare-fun x4589 () Int)
(declare-fun x2449 (Int) Int)
(declare-fun x3356 () Bool)
(declare-fun x3667 () Int)
(declare-fun x1898 () Int)
(declare-fun x5489 () Int)
(declare-fun x2014 () Bool)
(declare-fun x376 () Int)
(declare-fun x520 (Int) Int)
(declare-fun x6111 () Int)
(declare-fun x1477 () Int)
(declare-fun x5729 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x7957 () Bool)
(declare-fun x3710 () Int)
(declare-fun x7588 () Bool)
(declare-fun x1574 () Int)
(declare-fun x5068 () Bool)
(declare-fun x5447 () Bool)
(declare-fun x4912 () Int)
(declare-fun x146 () Int)
(declare-fun x2681 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x4505 () Int)
(declare-fun x6709 () Int)
(declare-fun x3694 () Int)
(declare-fun x8012 () Int)
(declare-fun x6215 () Int)
(declare-fun x3191 () Bool)
(declare-fun x6680 () Int)
(declare-fun x1859 () Int)
(declare-fun x4782 () Int)
(declare-fun x6535 () Bool)
(declare-fun x6164 (Int) Int)
(declare-fun x690 () Int)
(declare-fun x305 () Bool)
(declare-fun x374 () Int)
(declare-fun x1595 () Bool)
(declare-fun x7367 () Int)
(declare-fun x2012 () Int)
(declare-fun x2976 () Int)
(declare-fun x7723 () Int)
(declare-fun x6857 () Int)
(declare-fun x809 () Int)
(declare-fun x7706 () Bool)
(declare-fun x240 () Bool)
(declare-fun x4989 () Bool)
(declare-fun x5197 () Int)
(declare-fun x252 () Bool)
(declare-fun x1480 () Int)
(declare-fun x5481 () Int)
(declare-fun x2552 () Int)
(declare-fun x2392 () Bool)
(declare-fun x6437 () Bool)
(declare-fun x5248 () Int)
(declare-fun x2596 () Int)
(declare-fun x473 () Bool)
(declare-fun x3621 () Int)
(declare-fun x8432 () Int)
(declare-fun x6456 () Bool)
(declare-fun x5145 () Int)
(declare-fun x4309 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x7754 () Bool)
(declare-fun x2947 () Int)
(declare-fun x6296 () Bool)
(declare-fun x7079 () Int)
(declare-fun x6487 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x7160 () Int)
(declare-fun x890 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x3629 () Int)
(declare-fun x7344 () Int)
(declare-fun x6414 () Int)
(declare-fun x7340 () Int)
(declare-fun x2150 () Int)
(declare-fun x2699 () Int)
(declare-fun x6236 () Int)
(declare-fun x5271 () Bool)
(declare-fun x346 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x5160 (Int) Int)
(declare-fun x56 () Bool)
(declare-fun x4841 () Int)
(declare-fun x2155 () Bool)
(declare-fun x3965 () Int)
(declare-fun x3903 () Int)
(declare-fun x8088 () Int)
(declare-fun x972 () Bool)
(declare-fun x815 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x3627 () Int)
(declare-fun x2807 () Int)
(declare-fun x3285 () Int)
(declare-fun x3190 () Int)
(declare-fun x3616 () Int)
(declare-fun x5100 () Bool)
(declare-fun x2376 () Int)
(declare-fun x4575 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x7450 () Int)
(declare-fun x6056 () Int)
(declare-fun x5093 () Int)
(declare-fun x6260 () Int)
(declare-fun x7191 () Bool)
(declare-fun x357 () Int)
(declare-fun x1429 () Int)
(declare-fun x3201 () Bool)
(declare-fun x5736 () Bool)
(declare-fun x386 () Int)
(declare-fun x861 () Bool)
(declare-fun x7107 () Bool)
(declare-fun x4489 () Int)
(declare-fun x3140 () Bool)
(declare-fun x2684 () Int)
(declare-fun x3042 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x1344 () Int)
(declare-fun x6302 () Int)
(declare-fun x2162 () Int)
(declare-fun x753 () Bool)
(declare-fun x5424 () Bool)
(declare-fun x3730 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x6228 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2041 () Int)
(declare-fun x7129 () Int)
(declare-fun x7316 () Int)
(declare-fun x6559 () Int)
(declare-fun x5923 () Bool)
(declare-fun x1294 () Int)
(declare-fun x6221 () Bool)
(declare-fun x5346 (Int) Int)
(declare-fun x4031 () Int)
(declare-fun x2126 () Bool)
(declare-fun x3995 () Bool)
(declare-fun x6955 () Bool)
(declare-fun x6107 () Int)
(declare-fun x7392 () Int)
(declare-fun x3281 () Int)
(declare-fun x7014 () Bool)
(declare-fun x6027 () Int)
(declare-fun x6783 () Bool)
(declare-fun x5201 () Bool)
(declare-fun x8561 () Int)
(declare-fun x4454 () Bool)
(declare-fun x8213 () Int)
(declare-fun x5168 () Bool)
(declare-fun x2538 () Int)
(declare-fun x7004 () Int)
(declare-fun x6240 () Bool)
(declare-fun x1613 () Int)
(declare-fun x2253 () Int)
(declare-fun x1950 () Int)
(declare-fun x3102 () Int)
(declare-fun x8096 () Int)
(declare-fun x3315 () Bool)
(declare-fun x362 () Int)
(declare-fun x2414 () Int)
(declare-fun x7441 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x1813 () Int)
(declare-fun x4923 () Bool)
(declare-fun x6079 () Int)
(declare-fun x5570 () Int)
(declare-fun x6785 () Bool)
(declare-fun x5876 () Bool)
(declare-fun x4812 () Bool)
(declare-fun x8509 () Int)
(declare-fun x4320 () Int)
(declare-fun x2140 () Bool)
(declare-fun x5013 () Int)
(declare-fun x5755 () Bool)
(declare-fun x43 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1801 (Int) Int)
(declare-fun x1328 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x6425 () Int)
(declare-fun x3897 () Bool)
(declare-fun x6408 () Int)
(declare-fun x148 () Int)
(declare-fun x379 () Int)
(declare-fun x7838 () Bool)
(declare-fun x6560 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x4851 () Int)
(declare-fun x7341 () Int)
(declare-fun x431 () Bool)
(declare-fun x4303 () Int)
(declare-fun x1751 () Int)
(declare-fun x2845 () Int)
(declare-fun x3227 () Int)
(declare-fun x6331 () Bool)
(declare-fun x1293 () Int)
(declare-fun x4164 () Int)
(declare-fun x721 () Int)
(declare-fun x4966 () Bool)
(declare-fun x831 () Bool)
(declare-fun x8033 () Bool)
(declare-fun x7708 () Bool)
(declare-fun x8420 () Bool)
(declare-fun x4403 () Int)
(declare-fun x5790 () Int)
(declare-fun x7955 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x4940 () Int)
(declare-fun x6275 () Bool)
(declare-fun x5169 () Int)
(declare-fun x2640 () Int)
(declare-fun x7726 () Bool)
(declare-fun x7406 () Bool)
(declare-fun x904 () Bool)
(declare-fun x7621 () Int)
(declare-fun x5550 () Int)
(declare-fun x3429 () Bool)
(declare-fun x2832 () Int)
(declare-fun x6888 () Int)
(declare-fun x5215 () Int)
(declare-fun x7058 () Bool)
(declare-fun x8363 () Int)
(declare-fun x1059 () Bool)
(declare-fun x5943 () Int)
(declare-fun x5966 () Int)
(declare-fun x8259 () Int)
(declare-fun x1576 () Int)
(declare-fun x5511 () Bool)
(declare-fun x8095 () Int)
(declare-fun x1541 () Int)
(declare-fun x5713 () Int)
(declare-fun x7816 () Int)
(declare-fun x1408 () Int)
(declare-fun x2068 () Bool)
(declare-fun x20 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x4294 () Bool)
(declare-fun x3925 () Int)
(declare-fun x5751 () Int)
(declare-fun x226 () Bool)
(declare-fun x5037 () Int)
(declare-fun x6583 () Int)
(declare-fun x5785 () Int)
(declare-fun x7147 () Int)
(declare-fun x7370 () Bool)
(declare-fun x3825 () Int)
(declare-fun x6143 () Int)
(declare-fun x1358 () Int)
(declare-fun x1666 () Int)
(declare-fun x5291 () Bool)
(declare-fun x3496 () Int)
(declare-fun x5445 () Int)
(declare-fun x3643 () Bool)
(declare-fun x842 () Int)
(declare-fun x6259 () Bool)
(declare-fun x8325 () Int)
(declare-fun x7542 () Bool)
(declare-fun x4374 () Int)
(declare-fun x8146 () Bool)
(declare-fun x2123 () Int)
(declare-fun x8027 () Int)
(declare-fun x412 () Int)
(declare-fun x784 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x3170 () Int)
(declare-fun x7785 () Int)
(declare-fun x5900 () Bool)
(declare-fun x8135 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x5051 () Int)
(declare-fun x2115 () Bool)
(declare-fun x8051 () Int)
(declare-fun x584 () Int)
(declare-fun x6980 () Int)
(declare-fun x7461 () Int)
(declare-fun x7407 () Int)
(declare-fun x4865 () Bool)
(declare-fun x6072 () Int)
(declare-fun x3900 () Bool)
(declare-fun x7927 () Int)
(declare-fun x4619 () Bool)
(declare-fun x1633 () Int)
(declare-fun x3514 () Int)
(declare-fun x6257 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x4907 (Int) Int)
(declare-fun x5770 () Bool)
(declare-fun x3136 () Int)
(declare-fun x1481 () Int)
(declare-fun x2208 () Int)
(declare-fun x6497 () Bool)
(declare-fun x6991 () Bool)
(declare-fun x7892 () Int)
(declare-fun x2145 () Int)
(declare-fun x5472 () Bool)
(declare-fun x5723 () Int)
(declare-fun x1509 () Int)
(declare-fun x1742 () Int)
(declare-fun x7826 () Bool)
(declare-fun x4181 () Int)
(declare-fun x7649 () Int)
(declare-fun x6134 () Int)
(declare-fun x3342 () Int)
(declare-fun x2217 () Int)
(declare-fun x3395 () Bool)
(declare-fun x5650 (Int) Int)
(declare-fun x1564 () Int)
(declare-fun x4074 () Bool)
(declare-fun x834 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x8164 () Bool)
(declare-fun x3987 () Bool)
(declare-fun x5514 () Bool)
(declare-fun x113 () Int)
(declare-fun x2479 () Bool)
(declare-fun x4255 () Int)
(declare-fun x1044 () Int)
(declare-fun x6012 () Int)
(declare-fun x2286 () Bool)
(declare-fun x4445 () Bool)
(declare-fun x954 () Int)
(declare-fun x2167 () Int)
(declare-fun x1030 () Int)
(declare-fun x1791 () Bool)
(declare-fun x4722 () Int)
(declare-fun x3083 () Int)
(declare-fun x1441 () Int)
(declare-fun x7206 () Bool)
(declare-fun x1377 () Int)
(declare-fun x5911 () Int)
(declare-fun x2359 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x913 () Bool)
(declare-fun x7764 () Bool)
(declare-fun x3209 () Int)
(declare-fun x3828 () Int)
(declare-fun x936 () Int)
(declare-fun x2368 () Int)
(declare-fun x2464 () Int)
(declare-fun x3756 () Bool)
(declare-fun x7290 () Int)
(declare-fun x3947 () Int)
(declare-fun x3467 () Bool)
(declare-fun x6825 () Int)
(declare-fun x4287 () Int)
(declare-fun x7045 () Bool)
(declare-fun x6977 () Bool)
(declare-fun x393 () Bool)
(declare-fun x4655 () Bool)
(declare-fun x5809 () Int)
(declare-fun x7834 () Int)
(declare-fun x2185 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x3372 () Int)
(declare-fun x1988 () Bool)
(declare-fun x5553 () Int)
(declare-fun x2081 () Int)
(declare-fun x8504 () Int)
(declare-fun x8141 () Bool)
(declare-fun x101 () Int)
(declare-fun x1135 () Int)
(declare-fun x7751 () Bool)
(declare-fun x487 () Int)
(declare-fun x4640 () Int)
(declare-fun x1323 () Int)
(declare-fun x3683 () Int)
(declare-fun x8438 () Int)
(declare-fun x597 () Bool)
(declare-fun x159 () Int)
(declare-fun x7794 () Bool)
(declare-fun x99 () Int)
(declare-fun x1405 () Int)
(declare-fun x2461 () Bool)
(declare-fun x2617 () Int)
(declare-fun x5852 () Bool)
(declare-fun x7782 () Bool)
(declare-fun x3941 () Int)
(declare-fun x6075 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x5322 () Int)
(declare-fun x1676 () Int)
(declare-fun x5661 () Bool)
(declare-fun x1561 () Int)
(declare-fun x573 () Int)
(declare-fun x8472 () Bool)
(declare-fun x8434 () Int)
(declare-fun x3817 () Bool)
(declare-fun x423 () Int)
(declare-fun x2591 () Bool)
(declare-fun x8240 () Int)
(declare-fun x7916 () Bool)
(declare-fun x5888 () Int)
(declare-fun x1117 () Bool)
(declare-fun x2187 () Int)
(declare-fun x6831 () Int)
(declare-fun x5399 () Int)
(declare-fun x5369 () Bool)
(declare-fun x697 () Bool)
(declare-fun x3739 () Int)
(declare-fun x3135 () Int)
(declare-fun x3144 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1572 () Int)
(declare-fun x846 () Int)
(declare-fun x5042 () Bool)
(declare-fun x3005 () Int)
(declare-fun x2669 () Int)
(declare-fun x3961 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x425 () Bool)
(declare-fun x5227 () Int)
(declare-fun x847 () Bool)
(declare-fun x4897 () Bool)
(declare-fun x1302 () Int)
(declare-fun x15 () Int)
(declare-fun x2639 () Int)
(declare-fun x2893 () Int)
(declare-fun x1224 () Bool)
(declare-fun x4066 () Int)
(declare-fun x4914 () Bool)
(declare-fun x5363 () Int)
(declare-fun x6918 () Bool)
(declare-fun x1087 () Int)
(declare-fun x8278 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x1582 () Int)
(declare-fun x678 () Bool)
(declare-fun x4205 () Int)
(declare-fun x6380 () Int)
(declare-fun x1483 () Int)
(declare-fun x4801 () Int)
(declare-fun x6567 () Int)
(declare-fun x3207 () Int)
(declare-fun x7229 () Bool)
(declare-fun x3352 () Int)
(declare-fun x6182 () Bool)
(declare-fun x899 (Int) Int)
(declare-fun x8217 () Bool)
(declare-fun x1985 (Int) Int)
(declare-fun x3485 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x3866 () Bool)
(declare-fun x3034 () Int)
(declare-fun x1897 () Bool)
(declare-fun x8510 () Int)
(declare-fun x5721 () Int)
(declare-fun x3994 () Int)
(declare-fun x2443 () Bool)
(declare-fun x3978 () Int)
(declare-fun x7459 () Bool)
(declare-fun x2456 () Int)
(declare-fun x2940 () Int)
(declare-fun x537 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x7393 () Bool)
(declare-fun x6266 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1172 () Int)
(declare-fun x4301 () Int)
(declare-fun x201 () Int)
(declare-fun x2058 () Bool)
(declare-fun x5167 () Int)
(declare-fun x2746 () Int)
(declare-fun x6493 () Int)
(declare-fun x91 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x2432 () Int)
(declare-fun x5014 () Bool)
(declare-fun x1039 () Int)
(declare-fun x5880 () Int)
(declare-fun x997 () Bool)
(declare-fun x4315 () Int)
(declare-fun x1914 () Bool)
(declare-fun x3211 () Int)
(declare-fun x1720 () Bool)
(declare-fun x6775 () Int)
(declare-fun x783 () Bool)
(declare-fun x5798 () Int)
(declare-fun x3742 () Bool)
(declare-fun x6316 () Bool)
(declare-fun x4701 () Int)
(declare-fun x6985 () Int)
(declare-fun x8311 () Int)
(declare-fun x3086 () Int)
(declare-fun x3066 () Bool)
(declare-fun x5337 (Int) Int)
(declare-fun x2407 () Int)
(declare-fun x2829 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x7926 () Int)
(declare-fun x1777 () Int)
(declare-fun x53 () Int)
(declare-fun x4898 () Bool)
(declare-fun x8122 () Int)
(declare-fun x7404 () Int)
(declare-fun x3700 () Int)
(declare-fun x7195 () Bool)
(declare-fun x2924 () Int)
(declare-fun x5569 () Int)
(declare-fun x8054 () Bool)
(declare-fun x4048 () Int)
(declare-fun x1970 () Bool)
(declare-fun x454 () Bool)
(declare-fun x5162 () Bool)
(declare-fun x8029 () Bool)
(declare-fun x7995 () Int)
(declare-fun x1771 () Int)
(declare-fun x289 () Int)
(declare-fun x4826 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x7530 () Int)
(declare-fun x3804 () Bool)
(declare-fun x761 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x5780 () Bool)
(declare-fun x7791 () Bool)
(declare-fun x7306 () Bool)
(declare-fun x3287 () Int)
(declare-fun x5982 () Int)
(declare-fun x3094 (Int) Int)
(declare-fun x6634 () Int)
(declare-fun x2899 () Int)
(declare-fun x7668 () Bool)
(declare-fun x2050 () Int)
(declare-fun x6531 () Bool)
(declare-fun x8366 () Int)
(declare-fun x7327 () Bool)
(declare-fun x1236 () Int)
(declare-fun x501 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2490 () Bool)
(declare-fun x3668 () Int)
(declare-fun x6983 () Int)
(declare-fun x4823 () Int)
(declare-fun x5081 () Bool)
(declare-fun x7380 () Int)
(declare-fun x6004 () Int)
(declare-fun x1522 (Int) Int)
(declare-fun x7742 () Bool)
(declare-fun x7709 () Bool)
(declare-fun x1710 () Int)
(declare-fun x266 () Bool)
(declare-fun x7724 () Int)
(declare-fun x5901 () Int)
(declare-fun x3642 () Int)
(declare-fun x5576 () Int)
(declare-fun x6710 () Bool)
(declare-fun x958 () Bool)
(declare-fun x8293 () Int)
(declare-fun x2589 () Int)
(declare-fun x3007 () Bool)
(declare-fun x556 () Bool)
(declare-fun x6878 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x4775 () Int)
(declare-fun x5933 () Int)
(declare-fun x6222 () Bool)
(declare-fun x3497 () Int)
(declare-fun x2038 () Int)
(declare-fun x2425 () Int)
(declare-fun x975 () Int)
(declare-fun x6835 () Int)
(declare-fun x4596 () Int)
(declare-fun x7994 () Int)
(declare-fun x1502 () Int)
(declare-fun x7623 () Int)
(declare-fun x3716 () Int)
(declare-fun x1569 () Int)
(declare-fun x4168 () Int)
(declare-fun x2802 () Int)
(declare-fun x488 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x4051 () Int)
(declare-fun x3937 () Bool)
(declare-fun x7302 () Int)
(declare-fun x8008 (Int) Int)
(declare-fun x5439 () Int)
(declare-fun x1314 () Bool)
(declare-fun x6733 () Int)
(declare-fun x7376 () Bool)
(declare-fun x2853 () Int)
(declare-fun x6885 () Bool)
(declare-fun x6490 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x7930 () Bool)
(declare-fun x7294 () Int)
(declare-fun x2763 () Bool)
(declare-fun x6968 () Bool)
(declare-fun x2502 () Int)
(declare-fun x7171 () Int)
(declare-fun x5938 () Int)
(declare-fun x4916 () Int)
(declare-fun x2002 () Int)
(declare-fun x8470 () Bool)
(declare-fun x4719 () Int)
(declare-fun x300 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x4055 () Int)
(declare-fun x6339 () Bool)
(declare-fun x3783 () Int)
(declare-fun x5659 () Bool)
(declare-fun x6764 () Int)
(declare-fun x1602 () Int)
(declare-fun x52 () Bool)
(declare-fun x2627 () Int)
(declare-fun x7063 () Int)
(declare-fun x3640 () Bool)
(declare-fun x5232 () Bool)
(declare-fun x788 () Int)
(declare-fun x2188 () Int)
(declare-fun x6055 () Int)
(declare-fun x7552 () Int)
(declare-fun x66 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x230 () Bool)
(declare-fun x7896 () Int)
(declare-fun x896 () Int)
(declare-fun x6435 () Bool)
(declare-fun x7090 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x2082 () Int)
(declare-fun x2811 () Int)
(declare-fun x8205 () Int)
(declare-fun x3221 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x8114 () Int)
(declare-fun x1977 () Int)
(declare-fun x3979 () Bool)
(declare-fun x3532 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x4112 () Int)
(declare-fun x4384 () Int)
(declare-fun x5957 () Bool)
(declare-fun x4661 () Int)
(declare-fun x8331 () Bool)
(declare-fun x7946 () Int)
(declare-fun x818 () Bool)
(declare-fun x7832 () Int)
(declare-fun x2122 () Int)
(declare-fun x1129 () Bool)
(declare-fun x6532 () Bool)
(declare-fun x1265 () Int)
(declare-fun x4372 () Bool)
(declare-fun x7504 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x6963 () Bool)
(declare-fun x5556 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x7010 () Bool)
(declare-fun x8201 () Bool)
(declare-fun x5946 () Int)
(declare-fun x285 () Bool)
(declare-fun x479 () Bool)
(declare-fun x5104 () Int)
(declare-fun x6626 () Int)
(declare-fun x4727 () Int)
(declare-fun x707 () Int)
(declare-fun x3410 () Bool)
(declare-fun x6068 () Int)
(declare-fun x2332 () Int)
(declare-fun x8562 () Int)
(declare-fun x2062 () Bool)
(declare-fun x3872 () Int)
(declare-fun x8079 () Int)
(declare-fun x4783 () Bool)
(declare-fun x5622 () Int)
(declare-fun x1931 () Bool)
(declare-fun x6944 () Int)
(declare-fun x1454 () Int)
(declare-fun x151 () Int)
(declare-fun x1963 () Int)
(declare-fun x5958 () Bool)
(declare-fun x1672 () Int)
(declare-fun x4232 () Int)
(declare-fun x7712 () Int)
(declare-fun x6411 () Int)
(declare-fun x1170 () Int)
(declare-fun x1703 () Bool)
(declare-fun x3738 () Int)
(declare-fun x3263 () Int)
(declare-fun x562 () Bool)
(declare-fun x4272 () Int)
(declare-fun x8397 () Int)
(declare-fun x1185 () Int)
(declare-fun x765 () Bool)
(declare-fun x7894 () Bool)
(declare-fun x6677 () Int)
(declare-fun x3105 () Int)
(declare-fun x4093 () Int)
(declare-fun x4643 () Int)
(declare-fun x3243 () Bool)
(declare-fun x507 (Int) Int)
(declare-fun x7433 () Bool)
(declare-fun x502 () Bool)
(declare-fun x5433 () Int)
(declare-fun x181 () Bool)
(declare-fun x5144 () Int)
(declare-fun x5579 () Bool)
(declare-fun x553 () Int)
(declare-fun x1014 () Int)
(declare-fun x3960 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x1322 () Int)
(declare-fun x3533 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x2078 () Int)
(declare-fun x572 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x5583 () Int)
(declare-fun x7312 () Int)
(declare-fun x4602 () Bool)
(declare-fun x6902 () Int)
(declare-fun x6513 () Int)
(declare-fun x247 () Int)
(declare-fun x1063 () Int)
(declare-fun x2235 () Int)
(declare-fun x6229 () Int)
(declare-fun x5969 () Int)
(declare-fun x6897 () Int)
(declare-fun x7945 () Bool)
(declare-fun x2995 () Bool)
(declare-fun x5054 () Int)
(declare-fun x2534 () Int)
(declare-fun x8178 () Int)
(declare-fun x7250 () Int)
(declare-fun x235 () Int)
(declare-fun x3586 () Bool)
(declare-fun x3650 () Int)
(declare-fun x897 () Int)
(declare-fun x7830 () Int)
(declare-fun x2056 () Bool)
(declare-fun x4081 () Bool)
(declare-fun x5734 () Int)
(declare-fun x4515 () Bool)
(declare-fun x3563 () Int)
(declare-fun x7601 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x3303 () Int)
(declare-fun x6043 () Bool)
(declare-fun x706 () Int)
(declare-fun x7960 () Int)
(declare-fun x5893 () Int)
(declare-fun x3696 () Int)
(declare-fun x8473 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x6098 () Int)
(declare-fun x4824 () Int)
(declare-fun x4246 () Bool)
(declare-fun x4710 () Int)
(declare-fun x2718 () Int)
(declare-fun x4490 () Bool)
(declare-fun x7280 () Bool)
(declare-fun x4027 () Int)
(declare-fun x6201 () Bool)
(declare-fun x4306 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x4091 () Bool)
(declare-fun x6937 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x5195 () Int)
(declare-fun x1330 () Bool)
(declare-fun x6509 () Int)
(declare-fun x4822 () Int)
(declare-fun x7779 () Bool)
(declare-fun x4120 () Bool)
(declare-fun x708 (Int) Int)
(declare-fun x2977 () Bool)
(declare-fun x7646 () Bool)
(declare-fun x2338 () Int)
(declare-fun x4579 () Int)
(declare-fun x3575 () Bool)
(declare-fun x7363 () Int)
(declare-fun x894 () Bool)
(declare-fun x832 () Int)
(declare-fun x2978 () Int)
(declare-fun x916 () Bool)
(declare-fun x4453 () Int)
(declare-fun x6272 () Bool)
(declare-fun x2491 () Int)
(declare-fun x5082 () Int)
(declare-fun x613 () Int)
(declare-fun x5275 () Int)
(declare-fun x925 () Int)
(declare-fun x6080 () Int)
(declare-fun x540 () Int)
(declare-fun x4438 () Bool)
(declare-fun x3142 () Int)
(declare-fun x1316 () Int)
(declare-fun x1941 () Bool)
(declare-fun x3154 () Int)
(declare-fun x6816 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x1348 () Int)
(declare-fun x2885 () Int)
(declare-fun x3712 () Bool)
(declare-fun x4011 () Bool)
(declare-fun x7022 () Bool)
(declare-fun x2877 () Bool)
(declare-fun x8116 () Bool)
(declare-fun x7608 () Int)
(declare-fun x2117 () Bool)
(declare-fun x3366 () Int)
(declare-fun x3723 () Int)
(declare-fun x3233 () Bool)
(declare-fun x6401 () Bool)
(declare-fun x5955 () Int)
(declare-fun x2001 () Int)
(declare-fun x4753 () Bool)
(declare-fun x506 () Bool)
(declare-fun x2430 () Int)
(declare-fun x7602 () Int)
(declare-fun x8269 () Int)
(declare-fun x6026 () Int)
(declare-fun x4267 () Bool)
(declare-fun x5303 () Bool)
(declare-fun x2888 () Int)
(declare-fun x2897 () Bool)
(declare-fun x4107 () Int)
(declare-fun x7808 () Int)
(declare-fun x5420 () Int)
(declare-fun x1721 () Int)
(declare-fun x2113 () Int)
(declare-fun x2642 () Bool)
(declare-fun x8350 () Int)
(declare-fun x6564 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x3081 () Int)
(declare-fun x2244 () Int)
(declare-fun x6443 () Int)
(declare-fun x3375 () Int)
(declare-fun x1072 () Int)
(declare-fun x5332 () Int)
(declare-fun x944 () Bool)
(declare-fun x7507 () Int)
(declare-fun x3398 () Bool)
(declare-fun x4987 () Int)
(declare-fun x2631 () Bool)
(declare-fun x1352 () Int)
(declare-fun x2884 () Int)
(declare-fun x5485 () Bool)
(declare-fun x1598 () Int)
(declare-fun x4354 () Int)
(declare-fun x5341 () Int)
(declare-fun x400 () Int)
(declare-fun x7149 () Int)
(declare-fun x2018 () Bool)
(declare-fun x164 () Int)
(declare-fun x3387 () Bool)
(declare-fun x2941 () Int)
(declare-fun x2380 () Int)
(declare-fun x39 () Int)
(declare-fun x1811 () Bool)
(declare-fun x1960 () Int)
(declare-fun x4328 () Int)
(declare-fun x8402 () Int)
(declare-fun x7802 () Bool)
(declare-fun x3557 () Int)
(declare-fun x7862 () Bool)
(declare-fun x4370 () Bool)
(declare-fun x7400 () Bool)
(declare-fun x5635 () Int)
(declare-fun x149 () Int)
(declare-fun x4332 () Bool)
(declare-fun x4680 () Int)
(declare-fun x177 () Int)
(declare-fun x8308 () Int)
(declare-fun x5166 () Int)
(declare-fun x7411 () Int)
(declare-fun x8011 () Bool)
(declare-fun x6405 () Int)
(declare-fun x7480 () Bool)
(declare-fun x2851 () Int)
(declare-fun x141 () Int)
(declare-fun x2929 () Bool)
(declare-fun x3318 () Int)
(declare-fun x7234 () Int)
(declare-fun x620 () Int)
(declare-fun x1987 () Bool)
(declare-fun x7944 () Int)
(declare-fun x6674 () Bool)
(declare-fun x541 () Bool)
(declare-fun x83 () Int)
(declare-fun x1261 () Bool)
(declare-fun x2399 () Int)
(declare-fun x3633 () Bool)
(declare-fun x2752 () Int)
(declare-fun x4663 () Int)
(declare-fun x6534 () Int)
(declare-fun x3583 () Int)
(declare-fun x1655 () Bool)
(declare-fun x7033 () Bool)
(declare-fun x8428 () Int)
(declare-fun x5685 () Bool)
(declare-fun x7266 () Bool)
(declare-fun x45 () Bool)
(declare-fun x851 () Int)
(declare-fun x5177 () Bool)
(declare-fun x4317 () Int)
(declare-fun x4312 () Int)
(declare-fun x7343 () Bool)
(declare-fun x1537 () Int)
(declare-fun x2339 () Int)
(declare-fun x2647 () Bool)
(declare-fun x7152 (Int) Int)
(declare-fun x4762 () Int)
(declare-fun x811 () Int)
(declare-fun x232 () Bool)
(declare-fun x1137 () Int)
(declare-fun x7640 () Bool)
(declare-fun x7331 () Bool)
(declare-fun x463 () Bool)
(declare-fun x5718 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x4939 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x1126 () Int)
(declare-fun x6492 () Int)
(declare-fun x4819 () Int)
(declare-fun x3113 () Bool)
(declare-fun x7468 () Int)
(declare-fun x6144 () Bool)
(declare-fun x92 () Bool)
(declare-fun x4435 () Int)
(declare-fun x677 () Int)
(declare-fun x8150 () Int)
(declare-fun x8236 () Int)
(declare-fun x241 () Bool)
(declare-fun x6947 () Int)
(declare-fun x5044 () Bool)
(declare-fun x6648 () Int)
(declare-fun x5831 () Bool)
(declare-fun x8111 () Int)
(declare-fun x7423 () Int)
(declare-fun x4769 () Bool)
(declare-fun x352 () Int)
(declare-fun x2128 () Bool)
(declare-fun x86 () Int)
(declare-fun x1368 () Int)
(declare-fun x8343 () Bool)
(declare-fun x3880 () Int)
(declare-fun x3750 () Int)
(declare-fun x2514 () Bool)
(declare-fun x7139 () Int)
(declare-fun x8451 () Int)
(declare-fun x4380 () Int)
(declare-fun x8041 () Int)
(declare-fun x3385 () Bool)
(declare-fun x1503 () Int)
(declare-fun x6770 () Int)
(declare-fun x6678 () Int)
(declare-fun x6429 () Int)
(declare-fun x1532 () Bool)
(declare-fun x6342 () Bool)
(declare-fun x4886 () Bool)
(declare-fun x2655 () Int)
(declare-fun x6220 () Bool)
(declare-fun x8125 () Int)
(declare-fun x6740 () Bool)
(declare-fun x7590 () Int)
(declare-fun x593 () Int)
(declare-fun x2342 () Bool)
(declare-fun x1208 () Int)
(declare-fun x5868 () Int)
(declare-fun x7814 () Bool)
(declare-fun x3839 () Bool)
(declare-fun x1150 () Int)
(declare-fun x8362 () Int)
(declare-fun x7232 () Bool)
(declare-fun x4482 () Int)
(declare-fun x6231 () Int)
(declare-fun x3518 () Int)
(declare-fun x3149 () Int)
(declare-fun x7519 () Int)
(declare-fun x6137 () Int)
(declare-fun x4612 () Int)
(declare-fun x915 () Int)
(declare-fun x7702 () Bool)
(declare-fun x466 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x644 () Int)
(declare-fun x6480 () Int)
(declare-fun x6536 () Int)
(declare-fun x5470 () Int)
(declare-fun x7127 () Bool)
(declare-fun x4572 () Int)
(declare-fun x2914 () Int)
(declare-fun x3933 (Int Int Int Int Int Int Int) Int)
(declare-fun x7705 () Bool)
(declare-fun x4627 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1730 () Int)
(declare-fun x7781 () Int)
(declare-fun x1789 () Bool)
(declare-fun x3284 () Int)
(declare-fun x2792 () Int)
(declare-fun x1784 () Int)
(declare-fun x5203 () Int)
(declare-fun x1301 () Int)
(declare-fun x6323 () Int)
(declare-fun x315 (Int) Int)
(declare-fun x5767 () Int)
(declare-fun x6322 () Bool)
(declare-fun x6057 () Bool)
(declare-fun x8258 () Bool)
(declare-fun x6432 () Int)
(declare-fun x1095 () Bool)
(declare-fun x658 () Bool)
(declare-fun x6309 () Int)
(declare-fun x4834 () Bool)
(declare-fun x2566 () Int)
(declare-fun x4442 () Int)
(declare-fun x5261 () Bool)
(declare-fun x6979 (Int) Int)
(declare-fun x257 () Int)
(declare-fun x821 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x5699 () Bool)
(declare-fun x6504 () Int)
(declare-fun x2428 () Bool)
(declare-fun x1568 () Int)
(declare-fun x8235 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x982 () Bool)
(declare-fun x8541 () Bool)
(declare-fun x4901 () Int)
(declare-fun x7859 () Bool)
(declare-fun x3445 () Int)
(declare-fun x1552 () Bool)
(declare-fun x27 () Int)
(declare-fun x6034 () Bool)
(declare-fun x199 () Bool)
(declare-fun x7770 () Bool)
(declare-fun x48 () Int)
(declare-fun x7683 () Int)
(declare-fun x2046 () Int)
(declare-fun x5504 () Bool)
(declare-fun x8313 () Int)
(declare-fun x2281 () Int)
(declare-fun x6652 () Int)
(declare-fun x3015 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1769 () Int)
(declare-fun x271 () Int)
(declare-fun x5529 () Bool)
(declare-fun x8512 () Int)
(declare-fun x1034 () Int)
(declare-fun x3579 () Int)
(declare-fun x699 () Bool)
(declare-fun x6578 () Int)
(declare-fun x8430 () Int)
(declare-fun x3394 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x5706 () Int)
(declare-fun x6032 () Int)
(declare-fun x7451 () Int)
(declare-fun x3869 () Bool)
(declare-fun x8285 () Int)
(declare-fun x1719 () Bool)
(declare-fun x4714 () Bool)
(declare-fun x7813 () Int)
(declare-fun x2879 () Int)
(declare-fun x1589 () Int)
(declare-fun x3373 () Int)
(declare-fun x7538 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x7707 () Int)
(declare-fun x2316 () Bool)
(declare-fun x5678 () Int)
(declare-fun x5398 () Int)
(declare-fun x4256 () Bool)
(declare-fun x163 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x75 () Int)
(declare-fun x4429 () Int)
(declare-fun x5041 () Bool)
(declare-fun x1446 () Int)
(declare-fun x5794 () Int)
(declare-fun x2405 () Int)
(declare-fun x7876 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x4709 () Int)
(declare-fun x7837 () Int)
(declare-fun x7094 () Bool)
(declare-fun x6661 () Bool)
(declare-fun x5928 () Int)
(declare-fun x6881 () Int)
(declare-fun x472 () Int)
(declare-fun x6250 () Int)
(declare-fun x3418 () Bool)
(declare-fun x1366 () Int)
(declare-fun x8411 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x5312 () Bool)
(declare-fun x1625 () Int)
(declare-fun x844 () Int)
(declare-fun x131 () Int)
(declare-fun x1418 () Int)
(declare-fun x3249 () Int)
(declare-fun x7750 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x4768 () Bool)
(declare-fun x7663 () Bool)
(declare-fun x5643 () Bool)
(declare-fun x1189 () Int)
(declare-fun x1895 () Int)
(declare-fun x5954 () Int)
(declare-fun x8503 () Int)
(declare-fun x951 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x7109 () Int)
(declare-fun x8136 () Int)
(declare-fun x4073 () Int)
(declare-fun x6905 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x6967 () Int)
(declare-fun x6208 () Int)
(declare-fun x2522 () Bool)
(declare-fun x7134 () Bool)
(declare-fun x166 () Int)
(declare-fun x3168 () Bool)
(declare-fun x6054 () Bool)
(declare-fun x258 () Int)
(declare-fun x3026 () Bool)
(declare-fun x5772 () Bool)
(declare-fun x3270 () Int)
(declare-fun x3841 () Bool)
(declare-fun x1684 () Int)
(declare-fun x6502 () Int)
(declare-fun x7537 () Bool)
(declare-fun x7172 () Bool)
(declare-fun x7511 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x8007 () Int)
(declare-fun x2629 () Int)
(declare-fun x8044 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x7749 () Int)
(declare-fun x8454 () Bool)
(declare-fun x3047 () Int)
(declare-fun x2651 () Int)
(declare-fun x5055 () Bool)
(declare-fun x7533 () Bool)
(declare-fun x7136 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x6081 () Int)
(declare-fun x1286 () Int)
(declare-fun x4733 () Bool)
(declare-fun x4731 () Bool)
(declare-fun x6657 () Int)
(declare-fun x1473 () Int)
(declare-fun x7446 () Int)
(declare-fun x6332 () Bool)
(declare-fun x7163 () Bool)
(declare-fun x63 () Int)
(declare-fun x5423 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x213 () Bool)
(declare-fun x702 () Int)
(declare-fun x3225 () Bool)
(declare-fun x7020 () Int)
(declare-fun x4859 () Bool)
(declare-fun x6714 () Bool)
(declare-fun x4498 () Int)
(declare-fun x118 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x6549 () Int)
(declare-fun x1506 () Bool)
(declare-fun x5076 () Int)
(declare-fun x2873 () Bool)
(declare-fun x1752 () Int)
(declare-fun x7952 () Int)
(declare-fun x5139 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x2804 (Int) Int)
(declare-fun x8268 () Int)
(declare-fun x7215 () Int)
(declare-fun x2439 () Int)
(declare-fun x6675 () Bool)
(declare-fun x6804 () Bool)
(declare-fun x8138 () Bool)
(declare-fun x5274 () Bool)
(declare-fun x3242 () Int)
(declare-fun x3189 () Bool)
(declare-fun x2572 () Int)
(declare-fun x4969 () Int)
(declare-fun x8215 () Bool)
(declare-fun x6294 () Bool)
(declare-fun x6253 () Int)
(declare-fun x6814 () Int)
(declare-fun x1218 () Bool)
(declare-fun x3685 () Bool)
(declare-fun x3029 () Bool)
(declare-fun x4840 () Int)
(declare-fun x5940 () Int)
(declare-fun x3591 () Bool)
(declare-fun x3597 () Int)
(declare-fun x2231 () Int)
(declare-fun x4684 () Bool)
(declare-fun x6836 () Bool)
(declare-fun x3772 () Bool)
(declare-fun x6576 () Int)
(declare-fun x5158 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x7019 () Int)
(declare-fun x4872 () Int)
(declare-fun x7245 () Int)
(declare-fun x7907 () Bool)
(declare-fun x654 () Bool)
(declare-fun x2467 () Int)
(declare-fun x3065 (Int) Int)
(declare-fun x3095 () Bool)
(declare-fun x3316 () Int)
(declare-fun x6357 () Int)
(declare-fun x1237 () Int)
(declare-fun x3813 () Int)
(declare-fun x6239 () Int)
(declare-fun x4751 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x4082 () Int)
(declare-fun x6604 () Int)
(declare-fun x7095 () Int)
(declare-fun x814 () Int)
(declare-fun x5225 () Int)
(declare-fun x7796 () Int)
(declare-fun x2487 () Bool)
(declare-fun x6974 () Int)
(declare-fun x3645 () Bool)
(declare-fun x575 () Bool)
(declare-fun x5505 () Bool)
(declare-fun x6495 () Int)
(declare-fun x2209 () Int)
(declare-fun x6962 () Int)
(declare-fun x4536 () Bool)
(declare-fun x4006 () Int)
(declare-fun x7106 () Int)
(declare-fun x5680 () Int)
(declare-fun x8442 () Int)
(declare-fun x3509 () Int)
(declare-fun x666 () Int)
(declare-fun x6420 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x627 () Int)
(declare-fun x2446 () Bool)
(declare-fun x2470 () Int)
(declare-fun x1921 () Bool)
(declare-fun x2200 () Int)
(declare-fun x6307 () Bool)
(declare-fun x639 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x6397 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x7522 () Bool)
(declare-fun x731 () Bool)
(declare-fun x6278 () Int)
(declare-fun x1983 () Int)
(declare-fun x6238 () Bool)
(declare-fun x3800 () Int)
(declare-fun x3484 () Int)
(declare-fun x1968 () Int)
(declare-fun x5902 () Int)
(declare-fun x3269 () Bool)
(declare-fun x2091 () Int)
(declare-fun x6077 () Int)
(declare-fun x7807 () Int)
(declare-fun x979 () Bool)
(declare-fun x2183 () Int)
(declare-fun x7054 () Int)
(declare-fun x3307 () Int)
(declare-fun x3826 () Int)
(declare-fun x6615 () Int)
(declare-fun x7369 () Int)
(declare-fun x173 () Bool)
(declare-fun x4214 () Int)
(declare-fun x4660 (Int) Int)
(declare-fun x7638 () Int)
(declare-fun x3346 () Int)
(declare-fun x4359 () Bool)
(declare-fun x3159 () Int)
(declare-fun x437 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x6898 () Int)
(declare-fun x739 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x7074 () Int)
(declare-fun x2409 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x2748 () Int)
(declare-fun x5528 () Int)
(declare-fun x5241 () Bool)
(declare-fun x6865 () Int)
(declare-fun x8517 () Bool)
(declare-fun x5413 () Int)
(declare-fun x5443 () Bool)
(declare-fun x5521 (Int) Int)
(declare-fun x4683 () Int)
(declare-fun x5694 () Int)
(declare-fun x4689 () Bool)
(declare-fun x4631 () Int)
(declare-fun x3843 () Int)
(declare-fun x714 () Int)
(declare-fun x4764 () Bool)
(declare-fun x8166 () Int)
(declare-fun x5733 () Bool)
(declare-fun x7983 () Bool)
(declare-fun x7052 () Int)
(declare-fun x3553 () Bool)
(declare-fun x6076 () Int)
(declare-fun x3349 () Int)
(declare-fun x726 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x3301 (Int) Int)
(declare-fun x316 () Int)
(declare-fun x3887 () Bool)
(declare-fun x7716 () Int)
(declare-fun x998 () Bool)
(declare-fun x2678 () Int)
(declare-fun x3758 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x4266 () Int)
(declare-fun x2311 () Int)
(declare-fun x1107 () Int)
(declare-fun x3448 () Int)
(declare-fun x1052 () Int)
(declare-fun x5700 () Int)
(declare-fun x5094 () Int)
(declare-fun x6413 () Bool)
(declare-fun x5034 () Int)
(declare-fun x4650 () Bool)
(declare-fun x5020 () Bool)
(declare-fun x5961 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x392 () Bool)
(declare-fun x5270 () Int)
(declare-fun x3486 () Bool)
(declare-fun x7592 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x3420 () Int)
(declare-fun x741 () Bool)
(declare-fun x1042 () Int)
(declare-fun x4444 () Int)
(declare-fun x8560 () Int)
(declare-fun x3180 () Bool)
(declare-fun x1630 () Int)
(declare-fun x5695 () Int)
(declare-fun x2275 (Int) Int)
(declare-fun x4469 () Bool)
(declare-fun x5339 () Int)
(declare-fun x6457 () Int)
(declare-fun x4186 () Bool)
(declare-fun x7096 () Bool)
(declare-fun x4928 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x7328 () Int)
(declare-fun x7138 () Int)
(declare-fun x5029 () Int)
(declare-fun x1712 () Bool)
(declare-fun x3006 () Int)
(declare-fun x3709 () Int)
(declare-fun x4153 () Int)
(declare-fun x6541 () Int)
(declare-fun x7650 () Bool)
(declare-fun x351 () Bool)
(declare-fun x8424 () Int)
(declare-fun x6169 () Bool)
(declare-fun x30 () Int)
(declare-fun x609 () Bool)
(declare-fun x7068 () Int)
(declare-fun x701 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x3741 () Bool)
(declare-fun x2952 () Int)
(declare-fun x6585 () Bool)
(declare-fun x8063 () Int)
(declare-fun x1200 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x4609 () Int)
(declare-fun x1945 () Int)
(declare-fun x2310 () Int)
(declare-fun x4873 () Int)
(declare-fun x6605 () Int)
(declare-fun x5600 () Int)
(declare-fun x2636 () Bool)
(declare-fun x763 () Bool)
(declare-fun x3749 () Int)
(declare-fun x7574 () Bool)
(declare-fun x1780 () Int)
(declare-fun x682 (Int) Int)
(declare-fun x4613 () Int)
(declare-fun x7743 () Bool)
(declare-fun x6691 () Int)
(declare-fun x1485 () Int)
(declare-fun x3009 () Int)
(declare-fun x4410 () Int)
(declare-fun x778 () Int)
(declare-fun x8353 () Int)
(declare-fun x5760 () Int)
(declare-fun x2321 (Int Int) Int)
(declare-fun x3049 () Int)
(declare-fun x5427 () Int)
(declare-fun x4565 () Bool)
(declare-fun x4965 () Int)
(declare-fun x560 () Bool)
(declare-fun x908 () Int)
(declare-fun x1041 () Int)
(declare-fun x8068 () Int)
(declare-fun x4497 () Bool)
(declare-fun x5572 () Bool)
(declare-fun x6590 () Int)
(declare-fun x4383 (Int) Int)
(declare-fun x4506 () Bool)
(declare-fun x6603 () Int)
(declare-fun x5282 () Bool)
(declare-fun x7389 () Int)
(declare-fun x6756 () Int)
(declare-fun x931 () Bool)
(declare-fun x275 () Int)
(declare-fun x1324 () Int)
(declare-fun x8208 () Bool)
(declare-fun x5807 () Int)
(declare-fun x6612 () Int)
(declare-fun x6210 () Bool)
(declare-fun x3519 () Int)
(declare-fun x2366 () Bool)
(declare-fun x4092 () Int)
(declare-fun x6957 () Int)
(declare-fun x7428 (Int) Int)
(declare-fun x11 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x1016 () Int)
(declare-fun x1725 () Int)
(declare-fun x7521 () Int)
(declare-fun x1989 () Int)
(declare-fun x6434 () Int)
(declare-fun x326 () Int)
(declare-fun x4213 () Int)
(declare-fun x3792 () Int)
(declare-fun x6000 () Int)
(declare-fun x983 () Bool)
(declare-fun x5555 () Int)
(declare-fun x343 () Int)
(declare-fun x4071 () Int)
(declare-fun x5606 () Bool)
(declare-fun x3962 () Int)
(declare-fun x710 () Bool)
(declare-fun x2541 () Int)
(declare-fun x7909 () Bool)
(declare-fun x6448 () Bool)
(declare-fun x4559 () Int)
(declare-fun x3277 () Int)
(declare-fun x5998 () Bool)
(declare-fun x6273 () Bool)
(declare-fun x6994 () Bool)
(declare-fun x3924 () Int)
(declare-fun x225 () Bool)
(declare-fun x6595 () Bool)
(declare-fun x4606 () Int)
(declare-fun x7426 () Int)
(declare-fun x7066 () Bool)
(declare-fun x294 () Int)
(declare-fun x7736 () Int)
(declare-fun x5352 () Int)
(declare-fun x5301 () Int)
(declare-fun x5689 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x1124 () Int)
(declare-fun x4296 () Int)
(declare-fun x7056 () Int)
(declare-fun x6436 () Int)
(declare-fun x5599 () Int)
(declare-fun x3773 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x1611 () Int)
(declare-fun x3036 () Int)
(declare-fun x3853 () Bool)
(declare-fun x889 () Int)
(declare-fun x3323 () Bool)
(declare-fun x1277 (Int) Int)
(declare-fun x4593 () Int)
(declare-fun x3659 () Int)
(declare-fun x4786 () Bool)
(declare-fun x1475 (Int) Int)
(declare-fun x6446 () Bool)
(declare-fun x8140 () Int)
(declare-fun x7317 () Int)
(declare-fun x7013 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x7797 () Int)
(declare-fun x539 () Int)
(declare-fun x717 () Bool)
(declare-fun x3390 () Bool)
(declare-fun x1040 () Int)
(declare-fun x5043 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x6476 () Int)
(declare-fun x6008 () Bool)
(declare-fun x5732 () Bool)
(declare-fun x3085 () Int)
(declare-fun x3517 () Int)
(declare-fun x624 () Bool)
(declare-fun x4955 (Int) Int)
(declare-fun x5586 () Int)
(declare-fun x1866 () Bool)
(declare-fun x5545 () Int)
(declare-fun x7703 () Bool)
(declare-fun x6368 () Int)
(declare-fun x7130 () Int)
(declare-fun x922 () Bool)
(declare-fun x7379 () Int)
(declare-fun x1880 () Int)
(declare-fun x2336 () Int)
(declare-fun x7414 () Int)
(declare-fun x4477 () Bool)
(declare-fun x8337 () Int)
(declare-fun x7491 () Int)
(declare-fun x5867 () Int)
(declare-fun x4534 () Bool)
(declare-fun x6340 () Bool)
(declare-fun x5756 () Bool)
(declare-fun x2838 () Bool)
(declare-fun x7046 () Int)
(declare-fun x7082 () Bool)
(declare-fun x1499 () Int)
(declare-fun x5800 () Bool)
(declare-fun x2393 () Int)
(declare-fun x6245 () Int)
(declare-fun x1074 () Int)
(declare-fun x8480 () Bool)
(declare-fun x7028 () Int)
(declare-fun x1220 () Bool)
(declare-fun x7534 () Int)
(declare-fun x6047 () Bool)
(declare-fun x3718 () Bool)
(declare-fun x696 () Int)
(declare-fun x5497 () Int)
(declare-fun x224 () Int)
(declare-fun x1942 () Int)
(declare-fun x2093 () Int)
(declare-fun x6419 () Int)
(declare-fun x205 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x1992 () Int)
(declare-fun x8491 () Int)
(declare-fun x1268 () Int)
(declare-fun x8349 () Bool)
(declare-fun x446 () Int)
(declare-fun x5484 () Bool)
(declare-fun x2462 () Int)
(declare-fun x2650 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x4215 () Int)
(declare-fun x4366 () Int)
(declare-fun x236 () Int)
(declare-fun x5608 () Bool)
(declare-fun x7784 () Int)
(declare-fun x1937 () Bool)
(declare-fun x8229 () Int)
(declare-fun x5196 () Bool)
(declare-fun x6003 () Bool)
(declare-fun x439 () Bool)
(declare-fun x2620 () Int)
(declare-fun x5926 () Bool)
(declare-fun x6171 () Int)
(declare-fun x1097 () Int)
(declare-fun x1673 () Bool)
(declare-fun x3530 () Int)
(declare-fun x591 () Bool)
(declare-fun x2738 () Int)
(declare-fun x395 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x6618 () Bool)
(declare-fun x5838 () Bool)
(declare-fun x5477 () Bool)
(declare-fun x7332 () Int)
(declare-fun x5288 () Bool)
(declare-fun x1636 () Int)
(declare-fun x5801 () Int)
(declare-fun x4553 () Bool)
(declare-fun x1856 () Int)
(declare-fun x2646 () Bool)
(declare-fun x7381 () Int)
(declare-fun x2241 () Int)
(declare-fun x8359 () Int)
(declare-fun x2700 () Int)
(declare-fun x5992 () Bool)
(declare-fun x6282 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x6863 () Int)
(declare-fun x7984 () Bool)
(declare-fun x42 () Int)
(declare-fun x1567 () Int)
(declare-fun x4433 () Bool)
(declare-fun x4491 () Int)
(declare-fun x7394 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x7624 () Int)
(declare-fun x4304 () Int)
(declare-fun x4877 () Int)
(declare-fun x637 () Bool)
(declare-fun x1702 (Int) Int)
(declare-fun x5165 () Int)
(declare-fun x2258 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x1674 () Int)
(declare-fun x4220 () Int)
(declare-fun x6020 () Bool)
(declare-fun x1365 () Int)
(declare-fun x5236 () Int)
(declare-fun x6592 () Int)
(declare-fun x994 () Int)
(declare-fun x6126 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x968 () Int)
(declare-fun x5377 () Int)
(declare-fun x5994 () Bool)
(declare-fun x6933 () Int)
(declare-fun x5163 () Bool)
(declare-fun x2202 () Int)
(declare-fun x2622 () Bool)
(declare-fun x6969 () Int)
(declare-fun x1834 () Bool)
(declare-fun x5854 () Int)
(declare-fun x1573 () Int)
(declare-fun x2913 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x7913 () Bool)
(declare-fun x8181 () Int)
(declare-fun x5421 () Int)
(declare-fun x7973 () Int)
(declare-fun x4467 () Bool)
(declare-fun x40 () Int)
(declare-fun x848 () Int)
(declare-fun x4316 () Int)
(declare-fun x8548 () Bool)
(declare-fun x8478 () Int)
(declare-fun x2536 () Bool)
(declare-fun x7870 () Bool)
(declare-fun x4570 () Bool)
(declare-fun x7536 () Bool)
(declare-fun x3592 () Bool)
(declare-fun x2770 () Int)
(declare-fun x692 () Bool)
(declare-fun x3778 () Bool)
(declare-fun x3660 () Int)
(declare-fun x8133 () Bool)
(declare-fun x4183 () Int)
(declare-fun x3975 () Int)
(declare-fun x7555 () Bool)
(declare-fun x7722 () Int)
(declare-fun x5908 () Int)
(declare-fun x8335 () Bool)
(declare-fun x8154 () Bool)
(declare-fun x911 () Bool)
(declare-fun x7036 () Bool)
(declare-fun x880 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x6856 () Int)
(declare-fun x7492 () Int)
(declare-fun x2198 () Int)
(declare-fun x8399 () Int)
(declare-fun x1551 () Int)
(declare-fun x2242 () Bool)
(declare-fun x8468 () Bool)
(declare-fun x4638 () Bool)
(declare-fun x4980 () Bool)
(declare-fun x5058 () Bool)
(declare-fun x7541 () Int)
(declare-fun x4244 () Int)
(declare-fun x4176 () Int)
(declare-fun x5024 () Int)
(declare-fun x7443 () Bool)
(declare-fun x7571 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1796 () Int)
(declare-fun x5624 () Int)
(declare-fun x6712 () Bool)
(declare-fun x283 () Int)
(declare-fun x4605 () Bool)
(declare-fun x1058 (Int) Int)
(declare-fun x4781 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1821 () Int)
(declare-fun x4310 () Int)
(declare-fun x7284 () Bool)
(declare-fun x1045 () Int)
(declare-fun x2767 () Int)
(declare-fun x6303 () Int)
(declare-fun x5782 () Bool)
(declare-fun x1246 () Int)
(declare-fun x2267 () Bool)
(declare-fun x3391 () Int)
(declare-fun x4726 () Int)
(declare-fun x1760 () Bool)
(declare-fun x6611 () Int)
(declare-fun x1749 () Int)
(declare-fun x4269 () Bool)
(declare-fun x6045 () Int)
(declare-fun x380 () Int)
(declare-fun x984 () Bool)
(declare-fun x2798 () Int)
(declare-fun x5663 () Int)
(declare-fun x1919 () Int)
(declare-fun x7361 () Int)
(declare-fun x6348 () Int)
(declare-fun x8460 () Int)
(declare-fun x5186 () Bool)
(declare-fun x7031 () Int)
(declare-fun x372 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x1307 () Int)
(declare-fun x1601 () Int)
(declare-fun x770 () Int)
(declare-fun x5537 () Int)
(declare-fun x1221 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x4634 () Bool)
(declare-fun x4364 () Int)
(declare-fun x3098 () Int)
(declare-fun x6114 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x105 () Int)
(declare-fun x2791 () Bool)
(declare-fun x7562 () Int)
(declare-fun x4749 () Int)
(declare-fun x1338 () Int)
(declare-fun x2214 () Bool)
(declare-fun x3089 () Int)
(declare-fun x2836 () Int)
(declare-fun x8546 () Int)
(declare-fun x5759 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x5110 () Int)
(declare-fun x4425 () Int)
(declare-fun x6761 () Int)
(declare-fun x3020 () Bool)
(declare-fun x668 () Int)
(declare-fun x5649 () Int)
(declare-fun x4169 () Int)
(declare-fun x2567 () Int)
(declare-fun x950 () Bool)
(declare-fun x2406 () Int)
(declare-fun x3130 () Bool)
(declare-fun x8085 () Int)
(declare-fun x1469 () Bool)
(declare-fun x7775 () Int)
(declare-fun x554 () Bool)
(declare-fun x8171 () Int)
(declare-fun x5551 () Bool)
(declare-fun x5593 () Bool)
(declare-fun x5503 () Int)
(declare-fun x3823 () Bool)
(declare-fun x5905 () Int)
(declare-fun x398 () Int)
(declare-fun x5345 () Bool)
(declare-fun x2492 () Int)
(declare-fun x736 () Int)
(declare-fun x5498 () Bool)
(declare-fun x8321 () Bool)
(declare-fun x6314 () Bool)
(declare-fun x782 () Int)
(declare-fun x3801 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x5357 () Bool)
(declare-fun x5541 () Bool)
(declare-fun x3713 () Int)
(declare-fun x895 () Int)
(declare-fun x6608 () Bool)
(declare-fun x6162 () Int)
(declare-fun x4136 () Bool)
(declare-fun x6873 () Int)
(declare-fun x2151 (Int) Int)
(declare-fun x4201 () Int)
(declare-fun x6286 () Int)
(declare-fun x5072 () Int)
(declare-fun x89 () Int)
(declare-fun x5603 () Bool)
(declare-fun x2017 () Int)
(declare-fun x3521 () Bool)
(declare-fun x569 () Bool)
(declare-fun x2331 () Int)
(declare-fun x1103 () Bool)
(declare-fun x939 () Int)
(declare-fun x2448 () Int)
(declare-fun x629 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x4520 () Bool)
(declare-fun x6646 () Int)
(declare-fun x5210 () Bool)
(declare-fun x7238 () Int)
(declare-fun x7940 () Bool)
(declare-fun x4618 () Int)
(declare-fun x1315 () Int)
(declare-fun x1404 () Int)
(declare-fun x6184 () Bool)
(declare-fun x7554 () Int)
(declare-fun x5320 () Int)
(declare-fun x3929 () Int)
(declare-fun x5621 () Bool)
(declare-fun x6562 () Int)
(declare-fun x5062 () Int)
(declare-fun x6320 () Int)
(declare-fun x3479 () Bool)
(declare-fun x3282 () Int)
(declare-fun x3286 () Int)
(declare-fun x2875 () Int)
(declare-fun x1599 () Int)
(declare-fun x4552 () Int)
(declare-fun x206 () Int)
(declare-fun x4766 () Bool)
(declare-fun x4772 () Int)
(declare-fun x7605 () Bool)
(declare-fun x7473 () Int)
(declare-fun x1266 () Int)
(declare-fun x5183 () Bool)
(declare-fun x7445 () Bool)
(declare-fun x6622 () Bool)
(declare-fun x4692 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x382 () Int)
(declare-fun x7228 () Bool)
(declare-fun x6403 () Bool)
(declare-fun x8294 () Bool)
(declare-fun x5125 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x6212 () Int)
(declare-fun x7582 () Int)
(declare-fun x6036 () Int)
(declare-fun x7355 () Int)
(declare-fun x1104 () Bool)
(declare-fun x2999 () Int)
(declare-fun x2524 () Int)
(declare-fun x3545 () Bool)
(declare-fun x5208 () Int)
(declare-fun x4578 () Bool)
(declare-fun x5749 () Bool)
(declare-fun x6624 () Int)
(declare-fun x4763 () Int)
(declare-fun x1374 () Bool)
(declare-fun x5418 () Int)
(declare-fun x5610 () Bool)
(declare-fun x5525 () Bool)
(declare-fun x8391 () Int)
(declare-fun x4735 () Bool)
(declare-fun x7939 () Int)
(declare-fun x1205 () Bool)
(declare-fun x7055 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x4140 () Int)
(declare-fun x3832 () Int)
(declare-fun x7967 () Int)
(declare-fun x8231 () Int)
(declare-fun x1653 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x5308 () Bool)
(declare-fun x4522 () Bool)
(declare-fun x4806 () Int)
(declare-fun x4235 () Int)
(declare-fun x3399 () Bool)
(declare-fun x6920 () Bool)
(declare-fun x5564 () Bool)
(declare-fun x34 () Int)
(declare-fun x7330 () Int)
(declare-fun x4893 () Int)
(declare-fun x6997 () Int)
(declare-fun x4652 () Bool)
(declare-fun x4944 () Int)
(declare-fun x6118 () Int)
(declare-fun x3562 () Bool)
(declare-fun x6199 (Int) Int)
(declare-fun x3658 () Int)
(declare-fun x245 () Int)
(declare-fun x7092 () Bool)
(declare-fun x2379 () Int)
(declare-fun x5132 () Int)
(declare-fun x1423 () Int)
(declare-fun x4090 () Int)
(declare-fun x3576 () Int)
(declare-fun x3946 () Int)
(declare-fun x3849 () Int)
(declare-fun x7474 () Int)
(declare-fun x5354 () Int)
(declare-fun x3590 () Int)
(declare-fun x7774 () Bool)
(declare-fun x1587 () Int)
(declare-fun x4792 () Bool)
(declare-fun x185 () Int)
(declare-fun x7497 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x5869 () Bool)
(declare-fun x8324 () Int)
(declare-fun x5567 () Int)
(declare-fun x8450 () Bool)
(declare-fun x2808 () Int)
(declare-fun x2460 () Int)
(declare-fun x1066 () Bool)
(declare-fun x5266 () Int)
(declare-fun x7311 () Bool)
(declare-fun x6129 () Int)
(declare-fun x4894 () Int)
(declare-fun x4193 () Int)
(declare-fun x8161 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x8077 () Bool)
(declare-fun x5207 () Int)
(declare-fun x7769 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x773 () Bool)
(declare-fun x7151 () Bool)
(declare-fun x6452 () Bool)
(declare-fun x2236 () Int)
(declare-fun x2619 () Bool)
(declare-fun x7835 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x441 () Bool)
(declare-fun x4919 () Int)
(declare-fun x4472 () Bool)
(declare-fun x5200 () Int)
(declare-fun x1341 () Bool)
(declare-fun x3137 () Int)
(declare-fun x7965 () Int)
(declare-fun x7516 () Int)
(declare-fun x7061 () Int)
(declare-fun x2184 () Bool)
(declare-fun x7990 () Int)
(declare-fun x3167 () Bool)
(declare-fun x7329 () Bool)
(declare-fun x6550 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x8271 () Bool)
(declare-fun x2724 () Int)
(declare-fun x3070 () Bool)
(declare-fun x309 () Int)
(declare-fun x4480 () Int)
(declare-fun x3980 () Int)
(declare-fun x4102 () Int)
(declare-fun x1980 () Bool)
(declare-fun x6310 () Int)
(declare-fun x2176 () Bool)
(declare-fun x1243 () Int)
(declare-fun x2912 () Bool)
(declare-fun x857 () Bool)
(declare-fun x919 () Bool)
(declare-fun x3599 () Int)
(declare-fun x5476 () Bool)
(declare-fun x4852 () Bool)
(declare-fun x5829 () Int)
(declare-fun x3492 () Int)
(declare-fun x652 () Bool)
(declare-fun x5268 () Int)
(declare-fun x475 () Int)
(declare-fun x2866 () Bool)
(declare-fun x823 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x2112 () Int)
(declare-fun x5864 () Bool)
(declare-fun x7847 () Int)
(declare-fun x3916 () Bool)
(declare-fun x8157 () Bool)
(declare-fun x6146 () Int)
(declare-fun x7881 () Int)
(declare-fun x4587 () Int)
(declare-fun x3555 () Int)
(declare-fun x6558 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x1497 () Int)
(declare-fun x4439 () Int)
(declare-fun x8535 () Bool)
(declare-fun x5856 () Int)
(declare-fun x3913 () Int)
(declare-fun x534 () Int)
(declare-fun x3798 () Int)
(declare-fun x7044 () Bool)
(declare-fun x165 () Int)
(declare-fun x1436 () Int)
(declare-fun x2346 () Bool)
(declare-fun x8356 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x5120 () Int)
(declare-fun x7869 () Bool)
(declare-fun x3478 () Int)
(declare-fun x1060 () Int)
(declare-fun x8250 () Int)
(declare-fun x4732 () Int)
(declare-fun x2043 () Bool)
(declare-fun x7793 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x6160 () Int)
(declare-fun x62 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x6910 () Int)
(declare-fun x947 () Int)
(declare-fun x3473 () Bool)
(declare-fun x483 () Int)
(declare-fun x6115 () Bool)
(declare-fun x1026 () Int)
(declare-fun x2683 () Int)
(declare-fun x4818 () Int)
(declare-fun x6430 () Bool)
(declare-fun x1108 (Int) Int)
(declare-fun x4712 (Int) Int)
(declare-fun x5407 () Bool)
(declare-fun x3371 () Int)
(declare-fun x484 () Bool)
(declare-fun x2096 () Int)
(declare-fun x5742 () Bool)
(declare-fun x6406 () Int)
(declare-fun x5460 () Int)
(declare-fun x383 () Bool)
(declare-fun x290 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x1001 () Int)
(declare-fun x6025 () Int)
(declare-fun x5349 () Int)
(declare-fun x5906 () Bool)
(declare-fun x4816 () Bool)
(declare-fun x8378 () Int)
(declare-fun x4018 () Int)
(declare-fun x476 () Int)
(declare-fun x6545 () Bool)
(declare-fun x3559 () Int)
(declare-fun x8247 () Int)
(declare-fun x2206 () Bool)
(declare-fun x2571 () Int)
(declare-fun x2933 () Int)
(declare-fun x8130 () Int)
(declare-fun x117 () Bool)
(declare-fun x6580 () Int)
(declare-fun x5315 () Int)
(declare-fun x7692 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x2144 () Int)
(declare-fun x2239 () Int)
(declare-fun x8414 () Bool)
(declare-fun x3441 () Int)
(declare-fun x5878 () Int)
(declare-fun x4674 () Bool)
(declare-fun x6301 () Bool)
(declare-fun x8539 () Int)
(declare-fun x6870 () Int)
(declare-fun x3531 () Int)
(declare-fun x4367 () Bool)
(declare-fun x8398 () Int)
(declare-fun x1128 () Int)
(declare-fun x5917 () Bool)
(declare-fun x3461 () Int)
(declare-fun x1142 () Int)
(declare-fun x6042 () Int)
(declare-fun x2974 () Bool)
(declare-fun x8203 () Bool)
(declare-fun x1805 () Int)
(declare-fun x6792 () Int)
(declare-fun x1748 () Int)
(declare-fun x3425 () Int)
(declare-fun x3566 () Int)
(declare-fun x6596 () Bool)
(declare-fun x5136 (Int) Int)
(declare-fun x8319 () Bool)
(declare-fun x8206 () Bool)
(declare-fun x6268 () Bool)
(declare-fun x288 () Bool)
(declare-fun x2497 () Int)
(declare-fun x5459 () Int)
(declare-fun x7790 () Bool)
(declare-fun x8376 () Int)
(declare-fun x1272 () Int)
(declare-fun x2823 () Bool)
(declare-fun x5676 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x6579 () Int)
(declare-fun x2971 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x4915 () Int)
(declare-fun x3359 () Int)
(declare-fun x1663 () Int)
(declare-fun x1548 () Int)
(declare-fun x1361 () Int)
(declare-fun x6644 () Int)
(declare-fun x3423 () Bool)
(declare-fun x5623 () Int)
(declare-fun x5080 () Int)
(declare-fun x7017 () Int)
(declare-fun x1867 () Int)
(declare-fun x2373 () Int)
(declare-fun x7738 () Int)
(declare-fun x2105 () Int)
(declare-fun x656 () Bool)
(declare-fun x3767 () Int)
(declare-fun x1610 () Int)
(declare-fun x6165 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x514 () Int)
(declare-fun x2007 () Int)
(declare-fun x4245 () Bool)
(declare-fun x2160 () Int)
(declare-fun x519 () Bool)
(declare-fun x2471 () Int)
(declare-fun x6516 () Int)
(declare-fun x1847 () Bool)
(declare-fun x5300 () Bool)
(declare-fun x728 () Int)
(declare-fun x2282 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x3311 () Bool)
(declare-fun x6474 () Int)
(declare-fun x3363 () Bool)
(declare-fun x6484 () Bool)
(declare-fun x5151 () Bool)
(declare-fun x8536 () Int)
(declare-fun x3905 () Bool)
(declare-fun x2831 () Int)
(declare-fun x385 () Bool)
(declare-fun x5336 () Bool)
(declare-fun x795 () Bool)
(declare-fun x6598 () Bool)
(declare-fun x7237 () Bool)
(declare-fun x5115 () Int)
(declare-fun x8200 () Int)
(declare-fun x6363 () Int)
(declare-fun x2343 () Bool)
(declare-fun x6548 () Int)
(declare-fun x7271 () Int)
(declare-fun x6066 () Int)
(declare-fun x6659 () Bool)
(declare-fun x7247 () Int)
(declare-fun x3416 () Int)
(declare-fun x7966 (Int) Int)
(declare-fun x4058 () Int)
(declare-fun x8112 () Bool)
(declare-fun x3845 () Int)
(declare-fun x413 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x7080 () Int)
(declare-fun x7125 () Int)
(declare-fun x5855 () Bool)
(declare-fun x5371 () Int)
(declare-fun x1164 () Int)
(declare-fun x5812 () Bool)
(declare-fun x3329 () Int)
(declare-fun x111 () Bool)
(declare-fun x5129 () Bool)
(declare-fun x8102 () Int)
(declare-fun x1003 () Int)
(declare-fun x3678 () Int)
(declare-fun x1465 () Int)
(declare-fun x7560 (Int) Int)
(declare-fun x928 () Int)
(declare-fun x6404 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x8305 () Int)
(declare-fun x6949 () Int)
(declare-fun x5199 () Int)
(declare-fun x7678 () Bool)
(declare-fun x6248 () Int)
(declare-fun x2998 () Int)
(declare-fun x4932 () Bool)
(declare-fun x3498 () Bool)
(declare-fun x2864 () Int)
(declare-fun x6699 () Int)
(declare-fun x8142 () Int)
(declare-fun x1647 () Bool)
(declare-fun x8076 () Int)
(declare-fun x3567 () Bool)
(declare-fun x3529 () Int)
(declare-fun x3954 () Int)
(declare-fun x2549 () Bool)
(declare-fun x2679 () Int)
(declare-fun x7700 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x274 () Bool)
(declare-fun x3008 () Int)
(declare-fun x4388 () Bool)
(declare-fun x6393 () Bool)
(declare-fun x5318 () Int)
(declare-fun x2 () Int)
(declare-fun x2773 () Bool)
(declare-fun x6391 () Int)
(declare-fun x3258 () Int)
(declare-fun x8020 () Bool)
(declare-fun x4390 () Int)
(declare-fun x8067 () Int)
(declare-fun x4580 () Int)
(declare-fun x2426 () Int)
(declare-fun x3150 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x5894 () Int)
(declare-fun x4291 () Int)
(declare-fun x7493 () Bool)
(declare-fun x2429 () Int)
(declare-fun x6158 () Bool)
(declare-fun x1213 () Int)
(declare-fun x4473 () Int)
(declare-fun x1870 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x7132 () Int)
(declare-fun x182 () Int)
(declare-fun x4080 () Int)
(declare-fun x2362 () Bool)
(declare-fun x417 () Int)
(declare-fun x4293 () Int)
(declare-fun x7378 () Int)
(declare-fun x5384 () Bool)
(declare-fun x8340 () Bool)
(declare-fun x8155 () Int)
(declare-fun x2682 () Bool)
(declare-fun x324 () Int)
(declare-fun x3483 () Int)
(declare-fun x5771 () Int)
(declare-fun x7502 () Int)
(declare-fun x5981 () Int)
(declare-fun x1035 () Bool)
(declare-fun x219 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x267 () Int)
(declare-fun x2573 () Int)
(declare-fun x6262 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x6281 () Int)
(declare-fun x4629 () Bool)
(declare-fun x8439 () Int)
(declare-fun x5701 () Bool)
(declare-fun x6327 () Bool)
(declare-fun x4251 () Int)
(declare-fun x337 () Bool)
(declare-fun x7899 () Bool)
(declare-fun x8069 () Bool)
(declare-fun x7572 () Int)
(declare-fun x3983 () Int)
(declare-fun x1967 () Int)
(declare-fun x1165 () Int)
(declare-fun x5019 () Bool)
(declare-fun x7372 () Bool)
(declare-fun x8296 () Bool)
(declare-fun x4562 () Bool)
(declare-fun x8279 () Int)
(declare-fun x5467 () Int)
(declare-fun x7065 () Int)
(declare-fun x3320 () Int)
(declare-fun x7240 () Bool)
(declare-fun x8403 () Bool)
(declare-fun x518 () Int)
(declare-fun x3789 () Int)
(declare-fun x4992 () Int)
(declare-fun x418 () Int)
(declare-fun x7352 () Int)
(declare-fun x869 () Int)
(declare-fun x1944 () Int)
(declare-fun x4271 () Int)
(declare-fun x353 () Bool)
(declare-fun x5238 () Int)
(declare-fun x588 () Int)
(declare-fun x1843 () Bool)
(declare-fun x3525 () Int)
(declare-fun x2688 () Int)
(declare-fun x4225 () Int)
(declare-fun x5461 () Int)
(declare-fun x7345 () Int)
(declare-fun x993 () Int)
(declare-fun x4798 () Int)
(declare-fun x4681 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x5879 () Int)
(declare-fun x671 () Bool)
(declare-fun x6667 () Bool)
(declare-fun x8345 () Int)
(declare-fun x1068 () Int)
(declare-fun x1535 () Bool)
(declare-fun x7815 () Int)
(declare-fun x2803 () Bool)
(declare-fun x7671 () Int)
(declare-fun x1028 () Int)
(declare-fun x7759 () Bool)
(declare-fun x5507 () Int)
(declare-fun x8137 () Bool)
(declare-fun x929 () Int)
(declare-fun x8109 () Int)
(declare-fun x8082 () Bool)
(declare-fun x5891 () Int)
(declare-fun x1490 () Bool)
(declare-fun x5793 (Int) Int)
(declare-fun x6872 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x4248 () Int)
(declare-fun x7114 () Bool)
(declare-fun x3540 () Int)
(declare-fun x4023 () Int)
(declare-fun x4756 () Bool)
(declare-fun x4996 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x4773 () Int)
(declare-fun x4740 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x153 () Int)
(declare-fun x967 () Bool)
(declare-fun x2179 () Int)
(declare-fun x2693 () Int)
(declare-fun x6679 () Int)
(declare-fun x410 () Bool)
(declare-fun x5657 () Int)
(declare-fun x5960 () Int)
(declare-fun x2132 () Int)
(declare-fun x5931 () Bool)
(declare-fun x6365 () Bool)
(declare-fun x6370 () Int)
(declare-fun x1207 () Int)
(declare-fun x2114 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x3632 () Int)
(declare-fun x6180 () Int)
(declare-fun x4180 () Int)
(declare-fun x3248 () Int)
(declare-fun x2496 () Int)
(declare-fun x5483 () Int)
(declare-fun x4283 () Bool)
(declare-fun x6587 () Bool)
(declare-fun x6023 () Int)
(declare-fun x3919 () Int)
(declare-fun x387 () Int)
(declare-fun x2424 () Bool)
(declare-fun x2453 () Int)
(declare-fun x3636 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x7795 () Bool)
(declare-fun x6737 () Int)
(declare-fun x5359 () Bool)
(declare-fun x8216 () Int)
(declare-fun x3910 () Int)
(declare-fun x594 () Int)
(declare-fun x2772 () Bool)
(declare-fun x2378 () Int)
(declare-fun x7812 () Bool)
(declare-fun x6705 () Int)
(declare-fun x3859 () Bool)
(declare-fun x7133 () Int)
(declare-fun x6204 () Int)
(declare-fun x4084 () Int)
(declare-fun x249 (Int) Int)
(declare-fun x1520 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x490 () Bool)
(declare-fun x781 () Int)
(declare-fun x6511 () Int)
(declare-fun x8320 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x3475 () Int)
(declare-fun x7469 () Int)
(declare-fun x8327 () Bool)
(declare-fun x615 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x216 () Bool)
(declare-fun x5825 () Bool)
(declare-fun x565 () Int)
(declare-fun x7877 () Bool)
(declare-fun x2520 () Int)
(declare-fun x1708 () Int)
(declare-fun x5609 () Int)
(declare-fun x3296 () Int)
(declare-fun x5634 () Bool)
(declare-fun x877 () Int)
(declare-fun x3510 () Bool)
(declare-fun x6651 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x5973 () Bool)
(declare-fun x7585 () Int)
(declare-fun x5463 () Bool)
(declare-fun x5813 () Bool)
(declare-fun x2846 () Int)
(declare-fun x737 () Int)
(declare-fun x5513 (Int) Int)
(declare-fun x4007 () Bool)
(declare-fun x1296 (Int) Int)
(declare-fun x3641 () Int)
(declare-fun x307 () Int)
(declare-fun x7524 () Bool)
(declare-fun x7997 () Int)
(declare-fun x156 () Int)
(declare-fun x4960 () Int)
(declare-fun x2010 () Int)
(declare-fun x5164 () Int)
(declare-fun x6656 () Bool)
(declare-fun x4905 () Bool)
(declare-fun x5882 () Bool)
(declare-fun x8441 () Bool)
(declare-fun x7704 () Int)
(declare-fun x7231 () Bool)
(declare-fun x2528 () Int)
(declare-fun x6099 () Int)
(declare-fun x4202 () Int)
(declare-fun x7849 () Bool)
(declare-fun x4484 () Int)
(declare-fun x4134 () Int)
(declare-fun x5007 () Int)
(declare-fun x7403 () Int)
(declare-fun x7342 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x1283 () Int)
(declare-fun x2089 () Int)
(declare-fun x5690 () Int)
(declare-fun x6877 () Int)
(declare-fun x411 () Int)
(declare-fun x5229 () Bool)
(declare-fun x6335 () Bool)
(declare-fun x8429 () Int)
(declare-fun x3874 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x4863 () Int)
(declare-fun x2775 () Int)
(declare-fun x3495 () Int)
(declare-fun x1932 () Int)
(declare-fun x5575 () Int)
(declare-fun x6866 () Int)
(declare-fun x871 () Int)
(declare-fun x6376 () Bool)
(declare-fun x422 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x5679 () Int)
(declare-fun x1131 () Bool)
(declare-fun x4038 () Int)
(declare-fun x651 () Bool)
(declare-fun x7219 () Int)
(declare-fun x3317 () Bool)
(declare-fun x6094 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x7135 () Int)
(declare-fun x2402 () Bool)
(declare-fun x2959 () Int)
(declare-fun x5128 () Int)
(declare-fun x2993 () Int)
(declare-fun x8274 () Bool)
(declare-fun x2668 () Int)
(declare-fun x2813 () Bool)
(declare-fun x5536 () Bool)
(declare-fun x743 () Int)
(declare-fun x4166 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x8121 () Int)
(declare-fun x4547 () Int)
(declare-fun x7476 () Bool)
(declare-fun x7561 () Bool)
(declare-fun x2507 () Int)
(declare-fun x6577 () Int)
(declare-fun x3230 () Int)
(declare-fun x7741 () Int)
(declare-fun x2986 () Bool)
(declare-fun x3661 () Int)
(declare-fun x2939 () Bool)
(declare-fun x641 () Bool)
(declare-fun x5549 () Bool)
(declare-fun x7509 () Bool)
(declare-fun x4998 () Int)
(declare-fun x5156 () Bool)
(declare-fun x7520 () Bool)
(declare-fun x90 () Int)
(declare-fun x427 () Bool)
(declare-fun x7921 () Bool)
(declare-fun x5768 () Int)
(declare-fun x2731 () Int)
(declare-fun x7583 () Bool)
(declare-fun x4187 () Int)
(declare-fun x297 () Bool)
(declare-fun x8211 () Bool)
(declare-fun x1476 () Int)
(declare-fun x769 () Int)
(declare-fun x3336 () Int)
(declare-fun x5653 (Int) Int)
(declare-fun x8538 () Bool)
(declare-fun x333 () Int)
(declare-fun x57 () Int)
(declare-fun x1398 () Int)
(declare-fun x2365 () Int)
(declare-fun x4005 () Int)
(declare-fun x359 () Bool)
(declare-fun x5097 () Bool)
(declare-fun x5862 () Bool)
(declare-fun x4624 () Bool)
(declare-fun x1304 () Int)
(declare-fun x7143 () Int)
(declare-fun x3490 () Int)
(declare-fun x7968 () Int)
(declare-fun x3940 () Bool)
(declare-fun x3870 () Int)
(declare-fun x7108 () Int)
(declare-fun x1449 () Int)
(declare-fun x3717 () Bool)
(declare-fun x7112 () Int)
(declare-fun x6582 () Bool)
(declare-fun x5294 () Int)
(declare-fun x6688 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x6491 () Bool)
(declare-fun x5231 () Int)
(declare-fun x186 () Bool)
(declare-fun x6788 () Bool)
(declare-fun x5221 () Int)
(declare-fun x3570 () Bool)
(declare-fun x5334 () Int)
(declare-fun x5683 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x5313 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x6951 () Bool)
(declare-fun x7725 () Int)
(declare-fun x6625 () Int)
(declare-fun x5986 () Bool)
(declare-fun x3867 () Int)
(declare-fun x5358 () Int)
(declare-fun x887 () Bool)
(declare-fun x5832 () Int)
(declare-fun x3257 () Bool)
(declare-fun x455 () Int)
(declare-fun x5204 () Int)
(declare-fun x4229 () Int)
(declare-fun x5488 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x7257 () Int)
(declare-fun x2726 () Int)
(declare-fun x7233 () Int)
(declare-fun x6028 () Int)
(declare-fun x2917 () Bool)
(declare-fun x5114 () Bool)
(declare-fun x7419 (Int) Int)
(declare-fun x791 () Int)
(declare-fun x7925 () Int)
(declare-fun x4678 () Int)
(declare-fun x6978 () Bool)
(declare-fun x3082 () Int)
(declare-fun x1627 () Int)
(declare-fun x2733 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x6187 () Int)
(declare-fun x1345 () Int)
(declare-fun x6886 () Bool)
(declare-fun x991 () Bool)
(declare-fun x6431 () Int)
(declare-fun x8408 () Int)
(declare-fun x4247 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x7514 () Int)
(declare-fun x8364 () Int)
(declare-fun x7203 () Int)
(declare-fun x759 () Int)
(declare-fun x2294 () Int)
(declare-fun x7841 () Bool)
(declare-fun x3389 () Int)
(declare-fun x5980 () Bool)
(declare-fun x5317 () Int)
(declare-fun x7298 () Bool)
(declare-fun x987 () Bool)
(declare-fun x5773 () Int)
(declare-fun x6928 () Int)
(declare-fun x7906 () Bool)
(declare-fun x7009 () Int)
(declare-fun x2386 () Int)
(declare-fun x246 () Int)
(declare-fun x231 () Bool)
(declare-fun x8239 () Bool)
(declare-fun x2988 () Int)
(declare-fun x1242 () Int)
(declare-fun x3554 () Int)
(declare-fun x358 () Int)
(declare-fun x378 () Int)
(declare-fun x296 () Int)
(declare-fun x1905 () Bool)
(declare-fun x3182 (Int) Int)
(declare-fun x2730 () Int)
(declare-fun x655 () Int)
(declare-fun x631 () Int)
(declare-fun x509 () Int)
(declare-fun x4503 () Bool)
(declare-fun x762 () Int)
(declare-fun x443 () Bool)
(declare-fun x4162 (Int) Int)
(declare-fun x5046 () Int)
(declare-fun x327 () Bool)
(declare-fun x5811 () Int)
(declare-fun x3548 () Bool)
(declare-fun x3476 () Int)
(declare-fun x2987 () Int)
(declare-fun x2667 () Bool)
(declare-fun x7934 () Bool)
(declare-fun x7220 () Int)
(declare-fun x4431 () Bool)
(declare-fun x2691 () Int)
(declare-fun x8544 () Bool)
(declare-fun x906 () Bool)
(declare-fun x7735 () Bool)
(declare-fun x1038 () Int)
(declare-fun x8309 () Bool)
(declare-fun x793 () Int)
(declare-fun x33 (Int) Int)
(declare-fun x6496 () Int)
(declare-fun x4141 () Int)
(declare-fun x8463 () Int)
(declare-fun x338 () Bool)
(declare-fun x4230 () Bool)
(declare-fun x6387 () Bool)
(declare-fun x2494 () Int)
(declare-fun x1851 () Int)
(declare-fun x8502 () Int)
(declare-fun x7460 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x4282 () Int)
(declare-fun x7699 () Int)
(declare-fun x1281 () Bool)
(declare-fun x2743 () Bool)
(declare-fun x5035 () Bool)
(declare-fun x6852 () Bool)
(declare-fun x6084 () Bool)
(declare-fun x1764 () Int)
(declare-fun x5866 () Bool)
(declare-fun x6441 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x4953 () Int)
(declare-fun x3409 () Int)
(declare-fun x2916 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x5250 () Int)
(declare-fun x3103 () Int)
(declare-fun x2063 () Bool)
(declare-fun x1427 () Int)
(declare-fun x7885 () Int)
(declare-fun x3857 () Bool)
(declare-fun x198 () Int)
(declare-fun x625 () Bool)
(declare-fun x7225 () Int)
(declare-fun x852 () Bool)
(declare-fun x856 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1061 () Int)
(declare-fun x1845 (Int) Int)
(declare-fun x3309 () Int)
(declare-fun x5932 () Int)
(declare-fun x2545 () Int)
(declare-fun x592 () Int)
(declare-fun x4210 () Int)
(declare-fun x6237 () Int)
(declare-fun x2073 () Bool)
(declare-fun x7745 () Int)
(declare-fun x8292 () Int)
(declare-fun x8390 () Int)
(declare-fun x4799 () Int)
(declare-fun x6123 () Bool)
(declare-fun x1369 () Int)
(declare-fun x4373 () Bool)
(declare-fun x3938 () Int)
(declare-fun x964 () Int)
(declare-fun x218 () Bool)
(declare-fun x4736 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x5999 () Int)
(declare-fun x6743 () Bool)
(declare-fun x193 () Bool)
(declare-fun x2937 () Bool)
(declare-fun x3634 () Int)
(declare-fun x2582 () Int)
(declare-fun x6760 () Bool)
(declare-fun x4421 () Int)
(declare-fun x4013 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x7385 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x2870 () Int)
(declare-fun x4079 () Bool)
(declare-fun x6890 () Int)
(declare-fun x7951 () Bool)
(declare-fun x8329 () Bool)
(declare-fun x630 () Int)
(declare-fun x137 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x6934 () Int)
(declare-fun x2907 () Int)
(declare-fun x5372 () Int)
(declare-fun x1597 () Bool)
(declare-fun x5898 () Bool)
(declare-fun x8013 () Int)
(declare-fun x5038 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x6561 () Bool)
(declare-fun x7401 () Int)
(declare-fun x1555 () Int)
(declare-fun x229 () Bool)
(declare-fun x7322 () Int)
(declare-fun x549 () Bool)
(declare-fun x526 () Bool)
(declare-fun x6563 () Bool)
(declare-fun x7382 () Bool)
(declare-fun x3990 () Int)
(declare-fun x3726 () Bool)
(declare-fun x780 () Bool)
(declare-fun x7140 () Int)
(declare-fun x1890 () Int)
(declare-fun x1641 () Int)
(declare-fun x7397 () Int)
(declare-fun x4584 () Bool)
(declare-fun x1642 () Int)
(declare-fun x3662 () Int)
(declare-fun x7278 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x4494 () Bool)
(declare-fun x4707 () Bool)
(declare-fun x6024 () Bool)
(declare-fun x238 () Int)
(declare-fun x2273 () Int)
(declare-fun x1412 () Int)
(declare-fun x46 () Bool)
(declare-fun x1393 () Int)
(declare-fun x7472 () Int)
(declare-fun x6702 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x5219 () Int)
(declare-fun x8457 () Int)
(declare-fun x1750 () Int)
(declare-fun x3319 () Bool)
(declare-fun x6101 () Int)
(declare-fun x789 () Int)
(declare-fun x3927 () Int)
(declare-fun x2508 () Bool)
(declare-fun x6891 () Int)
(declare-fun x1621 () Bool)
(declare-fun x7091 () Bool)
(declare-fun x6627 () Int)
(declare-fun x999 () Int)
(declare-fun x6288 () Bool)
(declare-fun x5438 () Int)
(declare-fun x5942 () Bool)
(declare-fun x649 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x7444 () Int)
(declare-fun x5842 () Int)
(declare-fun x7458 () Bool)
(declare-fun x3626 () Int)
(declare-fun x4540 () Bool)
(declare-fun x6696 () Int)
(declare-fun x2317 () Bool)
(declare-fun x2638 () Int)
(declare-fun x5220 () Int)
(declare-fun x2048 () Int)
(declare-fun x5757 () Bool)
(declare-fun x3511 () Int)
(declare-fun x8015 () Int)
(declare-fun x4804 () Int)
(declare-fun x7599 () Int)
(declare-fun x1329 () Int)
(declare-fun x1964 () Int)
(declare-fun x2886 () Int)
(declare-fun x7420 () Int)
(declare-fun x7086 () Int)
(declare-fun x7565 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x645 () Int)
(declare-fun x3194 () Int)
(declare-fun x3238 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x1008 () Int)
(declare-fun x197 () Int)
(declare-fun x1163 () Bool)
(declare-fun x7626 () Int)
(declare-fun x764 () Int)
(declare-fun x2810 () Bool)
(declare-fun x5116 () Int)
(declare-fun x2445 () Bool)
(declare-fun x4461 () Int)
(declare-fun x2740 () Int)
(declare-fun x239 () Bool)
(declare-fun x5652 () Int)
(declare-fun x1215 () Int)
(declare-fun x5934 () Int)
(declare-fun x3155 () Bool)
(declare-fun x8107 () Bool)
(declare-fun x766 () Int)
(declare-fun x618 () Bool)
(declare-fun x1300 (Int Int Int Int) Int)
(declare-fun x1773 () Bool)
(declare-fun x6607 () Int)
(declare-fun x6551 () Int)
(declare-fun x745 () Int)
(declare-fun x203 () Int)
(declare-fun x6971 () Int)
(declare-fun x4131 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1298 () Int)
(declare-fun x1184 (Int) Int)
(declare-fun x6653 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x81 () Bool)
(declare-fun x262 () Bool)
(declare-fun x7938 () Int)
(declare-fun x2000 () Bool)
(declare-fun x5453 () Int)
(declare-fun x4993 () Int)
(declare-fun x1701 () Int)
(declare-fun x2211 () Int)
(declare-fun x7436 () Bool)
(declare-fun x6932 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x3644 () Int)
(declare-fun x2790 () Int)
(declare-fun x7987 () Int)
(declare-fun x7661 () Bool)
(declare-fun x2784 () Int)
(declare-fun x5937 () Bool)
(declare-fun x6530 () Bool)
(declare-fun x6908 () Int)
(declare-fun x3341 () Bool)
(declare-fun x961 () Int)
(declare-fun x330 () Bool)
(declare-fun x3232 () Int)
(declare-fun x2259 (Int) Int)
(declare-fun x7399 () Int)
(declare-fun x7167 () Int)
(declare-fun x7580 () Int)
(declare-fun x1411 () Int)
(declare-fun x4135 () Int)
(declare-fun x7305 () Bool)
(declare-fun x3943 () Int)
(declare-fun x1498 () Bool)
(declare-fun x2819 () Int)
(declare-fun x4115 () Int)
(declare-fun x3673 () Bool)
(declare-fun x2384 () Int)
(declare-fun x4743 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x2284 () Int)
(declare-fun x4871 () Int)
(declare-fun x6151 () Bool)
(declare-fun x4528 () Int)
(declare-fun x7850 () Bool)
(declare-fun x5496 () Int)
(declare-fun x7487 () Int)
(declare-fun x4417 () Bool)
(declare-fun x6017 () Int)
(declare-fun x953 () Bool)
(declare-fun x8301 () Int)
(declare-fun x408 () Int)
(declare-fun x771 () Int)
(declare-fun x7073 () Bool)
(declare-fun x1607 () Int)
(declare-fun x4458 () Int)
(declare-fun x933 () Bool)
(declare-fun x2973 () Int)
(declare-fun x1395 () Int)
(declare-fun x5403 () Bool)
(declare-fun x189 () Int)
(declare-fun x6175 () Int)
(declare-fun x1560 () Int)
(declare-fun x1972 () Int)
(declare-fun x7628 () Int)
(declare-fun x7901 () Int)
(declare-fun x8151 () Int)
(declare-fun x2326 () Int)
(declare-fun x6227 () Int)
(declare-fun x8387 () Bool)
(declare-fun x6269 () Int)
(declare-fun x3782 () Int)
(declare-fun x5098 () Bool)
(declare-fun x6921 () Int)
(declare-fun x5758 () Int)
(declare-fun x1240 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x7883 () Int)
(declare-fun x6427 () Int)
(declare-fun x616 () Int)
(declare-fun x948 () Bool)
(declare-fun x1928 () Int)
(declare-fun x6664 () Int)
(declare-fun x6366 () Int)
(declare-fun x5648 () Bool)
(declare-fun x4542 () Bool)
(declare-fun x619 () Int)
(declare-fun x1544 () Bool)
(declare-fun x2785 () Int)
(declare-fun x3573 () Int)
(declare-fun x2742 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x6998 () Bool)
(declare-fun x900 () Bool)
(declare-fun x4984 () Int)
(declare-fun x136 () Int)
(declare-fun x4457 () Int)
(declare-fun x5835 () Int)
(declare-fun x5915 () Bool)
(declare-fun x6690 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x7914 () Bool)
(declare-fun x8214 () Bool)
(declare-fun x1620 () Int)
(declare-fun x8427 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x7067 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x145 () Bool)
(declare-fun x6185 () Int)
(declare-fun x3587 (Int) Int)
(declare-fun x1688 () Bool)
(declare-fun x6654 () Bool)
(declare-fun x1902 () Int)
(declare-fun x2431 () Int)
(declare-fun x3610 () Int)
(declare-fun x3861 () Int)
(declare-fun x350 () Int)
(declare-fun x1922 () Bool)
(declare-fun x3618 () Int)
(declare-fun x5450 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x8098 () Int)
(declare-fun x1717 () Int)
(declare-fun x1861 () Int)
(declare-fun x1428 () Int)
(declare-fun x8128 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x6155 () Bool)
(declare-fun x2403 () Int)
(declare-fun x184 () Int)
(declare-fun x5665 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x3188 () Int)
(declare-fun x7421 () Bool)
(declare-fun x4323 () Int)
(declare-fun x1284 () Bool)
(declare-fun x4167 () Int)
(declare-fun x4154 () Int)
(declare-fun x1634 () Bool)
(declare-fun x4280 () Int)
(declare-fun x5953 () Int)
(declare-fun x2698 () Bool)
(declare-fun x1482 () Bool)
(declare-fun x500 () Bool)
(declare-fun x2551 () Int)
(declare-fun x4095 () Bool)
(declare-fun x23 () Int)
(declare-fun x7390 () Bool)
(declare-fun x7971 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1287 () Int)
(declare-fun x6203 () Int)
(declare-fun x5558 () Int)
(declare-fun x3797 () Int)
(declare-fun x5486 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x8219 (Int) Int)
(declare-fun x1519 () Int)
(declare-fun x6847 () Bool)
(declare-fun x8551 () Int)
(declare-fun x5821 () Int)
(declare-fun x1875 () Bool)
(declare-fun x2753 () Int)
(declare-fun x4496 () Bool)
(declare-fun x3571 () Int)
(declare-fun x1202 () Int)
(declare-fun x5016 () Int)
(declare-fun x3472 () Int)
(declare-fun x4716 () Int)
(declare-fun x2045 () Int)
(declare-fun x2319 () Int)
(declare-fun x6351 () Bool)
(declare-fun x494 () Int)
(declare-fun x8338 () Bool)
(declare-fun x5455 () Int)
(declare-fun x6186 () Int)
(declare-fun x6285 () Bool)
(declare-fun x1027 () Int)
(declare-fun x8379 () Int)
(declare-fun x5827 () Int)
(declare-fun x6400 () Int)
(declare-fun x636 () Bool)
(declare-fun x1808 () Bool)
(declare-fun x8521 () Bool)
(declare-fun x5587 () Int)
(declare-fun x8099 () Int)
(declare-fun x5951 () Int)
(declare-fun x5053 () Int)
(declare-fun x6254 () Bool)
(declare-fun x4241 () Int)
(declare-fun x5205 () Int)
(declare-fun x3466 () Bool)
(declare-fun x3090 () Int)
(declare-fun x7895 () Int)
(declare-fun x8558 () Bool)
(declare-fun x1973 () Int)
(declare-fun x3722 () Bool)
(declare-fun x5441 () Bool)
(declare-fun x6049 () Bool)
(declare-fun x7557 () Int)
(declare-fun x2296 () Bool)
(declare-fun x8022 () Bool)
(declare-fun x6528 () Int)
(declare-fun x1013 () Int)
(declare-fun x1382 (Int) Int)
(declare-fun x4982 () Int)
(declare-fun x493 () Bool)
(declare-fun x4545 () Int)
(declare-fun x8183 () Bool)
(declare-fun x724 () Int)
(declare-fun x3048 () Bool)
(declare-fun x5047 () Int)
(declare-fun x3816 () Int)
(declare-fun x2318 () Bool)
(declare-fun x194 () Bool)
(declare-fun x5127 () Bool)
(declare-fun x6088 () Int)
(declare-fun x2664 () Bool)
(declare-fun x4958 () Int)
(declare-fun x7950 () Bool)
(declare-fun x3625 () Int)
(declare-fun x7374 () Int)
(declare-fun x3368 () Int)
(declare-fun x5111 () Int)
(declare-fun x2357 () Bool)
(declare-fun x6670 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x6390 () Bool)
(declare-fun x347 () Int)
(declare-fun x7778 () Bool)
(declare-fun x321 () Int)
(declare-fun x6038 () Int)
(declare-fun x918 () Int)
(declare-fun x3186 () Int)
(declare-fun x4452 () Int)
(declare-fun x5180 () Int)
(declare-fun x2530 () Bool)
(declare-fun x8034 () Bool)
(declare-fun x6263 () Int)
(declare-fun x7508 () Bool)
(declare-fun x7728 () Bool)
(declare-fun x5748 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x5844 () Int)
(declare-fun x5112 () Int)
(declare-fun x3692 () Bool)
(declare-fun x135 () Int)
(declare-fun x716 () Bool)
(declare-fun x8160 () Int)
(declare-fun x8479 () Bool)
(declare-fun x1228 () Int)
(declare-fun x7256 () Bool)
(declare-fun x1644 () Int)
(declare-fun x4518 () Bool)
(declare-fun x2966 () Int)
(declare-fun x557 () Bool)
(declare-fun x513 () Int)
(declare-fun x1550 () Bool)
(declare-fun x248 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x6685 () Int)
(declare-fun x4750 () Int)
(declare-fun x6313 () Bool)
(declare-fun x1955 () Int)
(declare-fun x4789 () Int)
(declare-fun x2880 () Int)
(declare-fun x3419 () Int)
(declare-fun x280 () Int)
(declare-fun x3811 () Bool)
(declare-fun x4096 () Int)
(declare-fun x7856 () Int)
(declare-fun x5804 () Int)
(declare-fun x4404 () Bool)
(declare-fun x6840 () Bool)
(declare-fun x2083 () Int)
(declare-fun x4060 () Int)
(declare-fun x4412 () Bool)
(declare-fun x1997 () Int)
(declare-fun x6666 () Int)
(declare-fun x6893 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x4329 () Int)
(declare-fun x867 () Int)
(declare-fun x3809 () Int)
(declare-fun x3487 () Bool)
(declare-fun x2612 () Int)
(declare-fun x5006 () Bool)
(declare-fun x5008 () Int)
(declare-fun x1761 () Bool)
(declare-fun x3017 () Int)
(declare-fun x4813 () Int)
(declare-fun x1762 () Int)
(declare-fun x5746 () Bool)
(declare-fun x377 () Int)
(declare-fun x8187 () Bool)
(declare-fun x3893 () Int)
(declare-fun x667 () Bool)
(declare-fun x4890 () Bool)
(declare-fun x7658 () Bool)
(declare-fun x6069 () Bool)
(declare-fun x2841 () Int)
(declare-fun x167 () Bool)
(declare-fun x4870 () Int)
(declare-fun x5762 () Int)
(declare-fun x8004 () Bool)
(declare-fun x684 () Int)
(declare-fun x4195 () Int)
(declare-fun x963 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2621 () Bool)
(declare-fun x5429 () Int)
(declare-fun x6375 () Bool)
(declare-fun x2983 () Int)
(declare-fun x2786 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x1949 () Int)
(declare-fun x5806 () Int)
(declare-fun x5406 () Int)
(declare-fun x6724 () Int)
(declare-fun x5860 () Int)
(declare-fun x6912 () Int)
(declare-fun x6354 () Int)
(declare-fun x872 () Int)
(declare-fun x405 () Bool)
(declare-fun x4400 () Int)
(declare-fun x4892 () Int)
(declare-fun x2133 () Int)
(declare-fun x7118 () Bool)
(declare-fun x955 () Bool)
(declare-fun x5432 () Int)
(declare-fun x5446 () Bool)
(declare-fun x1667 () Int)
(declare-fun x4375 () Bool)
(declare-fun x6086 () Int)
(declare-fun x114 () Int)
(declare-fun x5138 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x3324 () Int)
(declare-fun x3944 () Int)
(declare-fun x6083 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x892 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x3046 () Int)
(declare-fun x7439 () Int)
(declare-fun x4292 () Int)
(declare-fun x8388 () Int)
(declare-fun x3214 () Bool)
(declare-fun x4125 () Int)
(declare-fun x6454 () Int)
(declare-fun x3911 () Int)
(declare-fun x5930 () Int)
(declare-fun x5789 () Int)
(declare-fun x1565 () Int)
(declare-fun x6834 () Bool)
(declare-fun x6769 () Int)
(declare-fun x1114 () Int)
(declare-fun x1682 () Int)
(declare-fun x4172 () Int)
(declare-fun x6018 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x4904 () Bool)
(declare-fun x1638 () Int)
(declare-fun x2563 () Int)
(declare-fun x8174 () Int)
(declare-fun x138 () Bool)
(declare-fun x7948 (Int) Int)
(declare-fun x7931 () Bool)
(declare-fun x4276 () Int)
(declare-fun x2946 () Bool)
(declare-fun x893 () Int)
(declare-fun x4875 () Int)
(declare-fun x5355 () Int)
(declare-fun x4725 () Bool)
(declare-fun x7368 () Int)
(declare-fun x2135 () Int)
(declare-fun x7874 () Int)
(declare-fun x7197 () Bool)
(declare-fun x3907 () Int)
(declare-fun x7166 () Int)
(declare-fun x8423 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x8476 () Int)
(declare-fun x8440 () Bool)
(declare-fun x7158 () Int)
(declare-fun x7438 () Int)
(declare-fun x4009 () Int)
(declare-fun x8081 () Bool)
(declare-fun x932 (Int) Int)
(declare-fun x4345 () Int)
(declare-fun x2459 () Int)
(declare-fun x4019 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x8134 () Bool)
(declare-fun x4249 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x598 () Bool)
(declare-fun x881 () Int)
(declare-fun x6466 () Bool)
(declare-fun x1768 () Bool)
(declare-fun x515 () Int)
(declare-fun x2533 () Int)
(declare-fun x8172 (Int) Int)
(declare-fun x2454 () Int)
(declare-fun x595 () Bool)
(declare-fun x1259 () Int)
(declare-fun x4546 () Int)
(declare-fun x2153 () Int)
(declare-fun x8177 () Int)
(declare-fun x3344 () Bool)
(declare-fun x4411 () Int)
(declare-fun x6091 () Int)
(declare-fun x5577 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x5059 () Bool)
(declare-fun x6616 () Bool)
(declare-fun x4124 () Bool)
(declare-fun x5715 () Int)
(declare-fun x8094 () Int)
(declare-fun x3721 () Bool)
(declare-fun x2246 () Int)
(declare-fun x7465 () Bool)
(declare-fun x6060 () Int)
(declare-fun x1954 () Int)
(declare-fun x3240 () Bool)
(declare-fun x5630 () Int)
(declare-fun x7173 () Int)
(declare-fun x6762 () Int)
(declare-fun x2094 () Int)
(declare-fun x7694 () Int)
(declare-fun x3603 () Bool)
(declare-fun x7625 () Int)
(declare-fun x4581 () Int)
(declare-fun x6867 () Int)
(declare-fun x7977 () Int)
(declare-fun x1123 () Bool)
(declare-fun x6194 () Bool)
(declare-fun x2653 () Bool)
(declare-fun x4233 () Int)
(declare-fun x6317 () Bool)
(declare-fun x2869 () Int)
(declare-fun x478 () Int)
(declare-fun x6821 () Int)
(declare-fun x4105 () Bool)
(declare-fun x7037 () Int)
(declare-fun x6822 () Bool)
(declare-fun x4502 () Int)
(declare-fun x6029 () Int)
(declare-fun x1671 () Int)
(declare-fun x5327 () Bool)
(declare-fun x8283 () Int)
(declare-fun x4036 () Bool)
(declare-fun x7371 () Int)
(declare-fun x6065 () Int)
(declare-fun x8436 () Bool)
(declare-fun x5126 () Bool)
(declare-fun x8204 () Bool)
(declare-fun x1011 () Int)
(declare-fun x2749 () Int)
(declare-fun x4777 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x6794 () Int)
(declare-fun x1979 () Int)
(declare-fun x8392 () Bool)
(declare-fun x1788 () Int)
(declare-fun x7422 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x2645 () Int)
(declare-fun x3205 () Int)
(declare-fun x6830 () Bool)
(declare-fun x5510 () Bool)
(declare-fun x2652 () Int)
(declare-fun x3183 () Int)
(declare-fun x6555 () Int)
(declare-fun x8280 () Int)
(declare-fun x5585 () Int)
(declare-fun x2723 () Bool)
(declare-fun x498 () Bool)
(declare-fun x5444 () Bool)
(declare-fun x7551 () Bool)
(declare-fun x4795 () Bool)
(declare-fun x581 () Int)
(declare-fun x6909 () Int)
(declare-fun x1432 () Bool)
(declare-fun x7777 () Int)
(declare-fun x937 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x5563 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x5347 () Int)
(declare-fun x5788 () Bool)
(declare-fun x596 () Int)
(declare-fun x6829 () Bool)
(declare-fun x7263 () Int)
(declare-fun x8064 () Bool)
(declare-fun x6329 () Int)
(declare-fun x3646 () Bool)
(declare-fun x8010 () Bool)
(declare-fun x5305 () Int)
(declare-fun x3403 () Int)
(declare-fun x3115 () Int)
(declare-fun x4346 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x7405 () Int)
(declare-fun x712 () Bool)
(declare-fun x4659 () Bool)
(declare-fun x7309 () Int)
(declare-fun x6631 () Int)
(declare-fun x3453 () Int)
(declare-fun x679 () Bool)
(declare-fun x8412 () Int)
(declare-fun x4765 () Bool)
(declare-fun x3637 () Int)
(declare-fun x7168 () Bool)
(declare-fun x461 () Int)
(declare-fun x7032 () Int)
(declare-fun x4853 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x3224 () Int)
(declare-fun x8059 () Bool)
(declare-fun x8528 () Int)
(declare-fun x5830 () Bool)
(declare-fun x7486 () Int)
(declare-fun x4415 () Bool)
(declare-fun x8289 () Int)
(declare-fun x7851 () Bool)
(declare-fun x1820 () Int)
(declare-fun x558 () Bool)
(declare-fun x1326 () Int)
(declare-fun x2618 () Int)
(declare-fun x7417 () Int)
(declare-fun x2196 () Bool)
(declare-fun x5057 () Int)
(declare-fun x7922 () Int)
(declare-fun x3681 () Bool)
(declare-fun x3237 () Int)
(declare-fun x469 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x474 () Int)
(declare-fun x366 () Bool)
(declare-fun x8375 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x5414 () Int)
(declare-fun x8485 (Int) Int)
(declare-fun x902 () Int)
(declare-fun x7609 () Int)
(declare-fun x4032 () Int)
(declare-fun x5814 () Int)
(declare-fun x7618 () Bool)
(declare-fun x3581 () Int)
(declare-fun x2433 () Int)
(declare-fun x6510 () Int)
(declare-fun x7116 () Int)
(declare-fun x4803 () Int)
(declare-fun x1624 () Bool)
(declare-fun x244 () Int)
(declare-fun x5468 () Bool)
(declare-fun x8065 () Int)
(declare-fun x6681 () Int)
(declare-fun x1021 () Int)
(declare-fun x7637 () Bool)
(declare-fun x3203 () Int)
(declare-fun x3538 () Bool)
(declare-fun x6172 () Int)
(declare-fun x3004 () Bool)
(declare-fun x4585 () Bool)
(declare-fun x3875 () Int)
(declare-fun x286 () Int)
(declare-fun x8047 () Int)
(declare-fun x5216 () Bool)
(declare-fun x7060 () Int)
(declare-fun x2921 () Int)
(declare-fun x5766 () Int)
(declare-fun x3706 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x648 () Bool)
(declare-fun x322 () Int)
(declare-fun x7757 () Int)
(declare-fun x3454 () Int)
(declare-fun x7587 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x566 () Int)
(declare-fun x6989 () Bool)
(declare-fun x3889 () Int)
(declare-fun x6046 () Int)
(declare-fun x3011 () Bool)
(declare-fun x1194 () Int)
(declare-fun x7823 () Bool)
(declare-fun x5260 () Bool)
(declare-fun x2601 () Int)
(declare-fun x5682 () Int)
(declare-fun x7113 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2280 () Bool)
(declare-fun x6374 () Bool)
(declare-fun x7840 () Int)
(declare-fun x3799 () Int)
(declare-fun x5872 () Int)
(declare-fun x4945 () Int)
(declare-fun x5516 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x2659 () Int)
(declare-fun x4695 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x1391 () Int)
(declare-fun x6923 () Int)
(declare-fun x4226 () Bool)
(declare-fun x3460 () Int)
(declare-fun x6271 () Int)
(declare-fun x6748 () Int)
(declare-fun x2837 () Int)
(declare-fun x5071 () Int)
(declare-fun x4988 () Bool)
(declare-fun x5565 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x3412 () Int)
(declare-fun x7121 () Bool)
(declare-fun x5495 () Int)
(declare-fun x4447 () Bool)
(declare-fun x664 () Bool)
(declare-fun x2116 () Int)
(declare-fun x3550 () Int)
(declare-fun x4651 () Int)
(declare-fun x1360 () Int)
(declare-fun x6355 () Bool)
(declare-fun x5626 () Int)
(declare-fun x1073 () Int)
(declare-fun x7645 () Int)
(declare-fun x6723 () Int)
(declare-fun x7287 () Int)
(declare-fun x5566 () Bool)
(declare-fun x7174 () Bool)
(declare-fun x3806 () Int)
(declare-fun x4406 () Bool)
(declare-fun x6381 () Bool)
(declare-fun x5393 () Int)
(declare-fun x1337 () Bool)
(declare-fun x195 () Int)
(declare-fun x8455 () Int)
(declare-fun x7254 () Int)
(declare-fun x7262 () Int)
(declare-fun x7607 () Int)
(declare-fun x6274 () Int)
(declare-fun x7402 () Bool)
(declare-fun x8549 () Int)
(declare-fun x8169 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x8267 () Int)
(declare-fun x5535 () Int)
(declare-fun x2844 () Int)
(declare-fun x4774 () Int)
(declare-fun x1626 () Int)
(declare-fun x3297 () Bool)
(declare-fun x5092 () Bool)
(declare-fun x7910 () Int)
(declare-fun x7362 () Int)
(declare-fun x1004 () Int)
(declare-fun x6639 () Bool)
(declare-fun x4869 () Bool)
(declare-fun x1691 () Int)
(declare-fun x6010 () Int)
(declare-fun x3133 () Bool)
(declare-fun x460 () Int)
(declare-fun x6219 () Bool)
(declare-fun x7360 () Int)
(declare-fun x3185 () Int)
(declare-fun x7996 () Int)
(declare-fun x4721 () Int)
(declare-fun x5499 () Int)
(declare-fun x1141 () Bool)
(declare-fun x4322 () Int)
(declare-fun x6166 () Int)
(declare-fun x5851 () Bool)
(declare-fun x8273 () Int)
(declare-fun x7273 () Int)
(declare-fun x4152 () Int)
(declare-fun x7664 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1474 () Int)
(declare-fun x4033 () Bool)
(declare-fun x8002 () Bool)
(declare-fun x2981 () Int)
(declare-fun x3624 () Int)
(declare-fun x5482 () Int)
(declare-fun x24 () Bool)
(declare-fun x5249 () Int)
(declare-fun x6853 () Bool)
(declare-fun x3734 () Int)
(declare-fun x3879 () Int)
(declare-fun x4061 () Int)
(declare-fun x960 () Int)
(declare-fun x5881 (Int) Int)
(declare-fun x7614 () Int)
(declare-fun x5066 () Int)
(declare-fun x5508 () Int)
(declare-fun x7949 () Int)
(declare-fun x2034 () Int)
(declare-fun x1335 () Int)
(declare-fun x4682 () Bool)
(declare-fun x5720 () Bool)
(declare-fun x6021 () Bool)
(declare-fun x5744 () Int)
(declare-fun x8299 () Int)
(declare-fun x8553 () Int)
(declare-fun x2306 () Bool)
(declare-fun x5817 () Bool)
(declare-fun x459 () Bool)
(declare-fun x1203 () Int)
(declare-fun x959 () Int)
(declare-fun x7179 (Int) Int)
(declare-fun x504 () Bool)
(declare-fun x4508 () Bool)
(declare-fun x8501 () Int)
(declare-fun x5209 () Bool)
(declare-fun x68 () Int)
(declare-fun x7300 () Bool)
(declare-fun x2295 () Int)
(declare-fun x7674 () Bool)
(declare-fun x8425 () Bool)
(declare-fun x2441 () Int)
(declare-fun x415 () Int)
(declare-fun x3884 () Bool)
(declare-fun x7365 () Bool)
(declare-fun x600 () Int)
(declare-fun x974 () Int)
(declare-fun x8346 () Int)
(declare-fun x8153 () Int)
(declare-fun x6483 () Int)
(declare-fun x4047 () Bool)
(declare-fun x746 () Int)
(declare-fun x3935 () Bool)
(declare-fun x6242 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x6828 () Int)
(declare-fun x5688 () Int)
(declare-fun x5074 () Int)
(declare-fun x7142 () Int)
(declare-fun x2088 () Int)
(declare-fun x8357 () Int)
(declare-fun x339 () Int)
(declare-fun x8078 () Int)
(declare-fun x5990 () Int)
(declare-fun x7953 () Int)
(declare-fun x3480 () Bool)
(declare-fun x3330 () Int)
(declare-fun x1496 () Int)
(declare-fun x1303 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x1962 () Int)
(declare-fun x7057 () Int)
(declare-fun x805 () Int)
(declare-fun x3348 () Bool)
(declare-fun x1332 () Int)
(declare-fun x5087 () Bool)
(declare-fun x6896 () Int)
(declare-fun x4182 () Bool)
(declare-fun x966 () Int)
(declare-fun x8266 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x5001 () Int)
(declare-fun x7023 () Int)
(declare-fun x1278 () Bool)
(declare-fun x3736 () Int)
(declare-fun x4016 () Bool)
(declare-fun x5833 () Bool)
(declare-fun x112 () Int)
(declare-fun x7686 () Int)
(declare-fun x5667 () Int)
(declare-fun x7918 () Bool)
(declare-fun x3080 () Bool)
(declare-fun x306 () Bool)
(declare-fun x6601 () Int)
(declare-fun x2072 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x1447 () Int)
(declare-fun x1274 () Bool)
(declare-fun x5726 () Bool)
(declare-fun x8086 () Bool)
(declare-fun x650 () Int)
(declare-fun x808 () Int)
(declare-fun x5090 () Int)
(declare-fun x4440 () Int)
(declare-fun x3735 () Int)
(declare-fun x5974 () Int)
(declare-fun x1713 () Int)
(declare-fun x6746 () Bool)
(declare-fun x6917 () Int)
(declare-fun x6074 () Bool)
(declare-fun x3489 () Int)
(declare-fun x3921 () Bool)
(declare-fun x5703 () Bool)
(declare-fun x5996 () Int)
(declare-fun x6916 () Bool)
(declare-fun x4216 () Int)
(declare-fun x5722 () Bool)
(declare-fun x756 () Int)
(declare-fun x7357 () Bool)
(declare-fun x212 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1487 () Int)
(declare-fun x6105 () Int)
(declare-fun x496 () Bool)
(declare-fun x2127 (Int) Int)
(declare-fun x8117 () Int)
(declare-fun x8194 () Int)
(declare-fun x7842 () Bool)
(declare-fun x6428 () Bool)
(declare-fun x7248 () Int)
(declare-fun x1617 () Bool)
(declare-fun x8477 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x2435 () Int)
(declare-fun x1679 () Int)
(declare-fun x755 () Int)
(declare-fun x1507 () Int)
(declare-fun x3021 () Int)
(declare-fun x4867 () Bool)
(declare-fun x5252 () Int)
(declare-fun x2713 () Int)
(declare-fun x7218 () Int)
(declare-fun x3414 () Bool)
(declare-fun x6782 () Bool)
(declare-fun x3093 () Int)
(declare-fun x8323 () Int)
(declare-fun x3202 () Bool)
(declare-fun x5181 () Bool)
(declare-fun x8352 () Int)
(declare-fun x3063 () Bool)
(declare-fun x1049 () Int)
(declare-fun x8368 () Int)
(declare-fun x6102 () Bool)
(declare-fun x6845 () Bool)
(declare-fun x8382 () Bool)
(declare-fun x5590 () Int)
(declare-fun x4173 () Bool)
(declare-fun x6984 () Bool)
(declare-fun x4686 () Bool)
(declare-fun x2728 () Bool)
(declare-fun x4003 () Bool)
(declare-fun x4386 () Int)
(declare-fun x2644 () Int)
(declare-fun x6569 () Bool)
(declare-fun x6200 () Bool)
(declare-fun x4615 () Bool)
(declare-fun x222 () Int)
(declare-fun x6482 () Bool)
(declare-fun x7088 () Int)
(declare-fun x3477 () Int)
(declare-fun x7201 () Int)
(declare-fun x6797 () Int)
(declare-fun x8459 () Bool)
(declare-fun x2955 () Int)
(declare-fun x5936 () Int)
(declare-fun x2883 () Bool)
(declare-fun x3431 () Bool)
(declare-fun x7482 () Bool)
(declare-fun x920 () Bool)
(declare-fun x4224 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x70 () Bool)
(define-fun x8120 ((x6183 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6183) (>= x6183 0)) x6183 (- x6183 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x7553 ((x6183 Int)) Int (ite (and (< x6183 0) (>= x6183 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x6183 115792089237316195423570985008687907853269984665640564039457584007913129639936) x6183))
(define-fun x308 ((x3676 Int)) Bool (and (>= x3676 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3676)))
(define-fun x1925 ((x3676 Int)) Bool (and (= (x2321 x3676 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3676) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3676) x3676)))
(define-fun x3803 ((x3676 Int)) Bool (and (= 0 (x2321 x3676 0)) (= (x2321 0 x3676) 0)))
(define-fun x8365 ((x3676 Int)) Bool (= (x2321 x3676 x3676) x3676))
(define-fun x3057 ((x3676 Int)) Bool (and (x8365 x3676) (x1925 x3676) (x3803 x3676)))
(define-fun x2110 ((x3676 Int) (x3972 Int)) Bool (= (x2321 x3676 x3972) (x2321 x3972 x3676)))
(define-fun x5075 ((x3676 Int) (x3972 Int)) Bool (and (=> (>= x3676 0) (>= x3676 (x2321 x3676 x3972))) (<= 0 (x2321 x3676 x3972)) (=> (>= x3972 0) (<= (x2321 x3676 x3972) x3972))))
(define-fun x4129 ((x3676 Int) (x3972 Int)) Bool (and (x5075 x3676 x3972) (x2110 x3676 x3972)))
(define-fun x885 ((x3676 Int)) Bool (= (mod x3676 256) (x2321 x3676 255)))
(define-fun x792 ((x3676 Int)) Bool (and (x885 x3676) (x4129 x3676 255)))
(define-fun x2739 ((x3676 Int)) Bool (= (x2321 x3676 1) (mod x3676 2)))
(define-fun x2569 ((x3676 Int)) Bool (and (x2739 x3676) (x4129 x3676 1)))
(define-fun x3123 ((x3676 Int)) Bool (= (mod x3676 128) (x2321 x3676 127)))
(define-fun x5602 ((x3676 Int)) Bool (and (x3123 x3676) (x4129 x3676 127)))
(define-fun x1390 ((x3676 Int)) Bool (= (+ (mod x3676 256) (x2321 x3676 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (mod x3676 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2307 ((x3676 Int)) Bool (and (x4129 x3676 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1390 x3676)))
(define-fun x4460 ((x3676 Int)) Bool (= (+ (x2321 x3676 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x3676 32)) (mod x3676 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x5886 ((x3676 Int)) Bool (and (x4129 x3676 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4460 x3676)))
(define-fun x2182 ((x3676 Int)) Bool (= (x2321 x3676 26959946667150639794667015087019630673637144422540572481103610249215) (mod x3676 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x5050 ((x3676 Int)) Bool (and (x2182 x3676) (x4129 x3676 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2291 ((x4401 Int)) Int 0)
(define-fun x6197 ((x4401 Int)) Int 0)
(define-fun x8431 ((x4401 Int)) Int 0)
(define-fun x1849 ((x4401 Int)) Int 0)
(define-fun x7478 ((x4401 Int)) Int 0)
(define-fun x3966 ((x4401 Int)) Int 0)
(define-fun x1722 ((x4401 Int)) Int 0)
(define-fun x3886 ((x4401 Int)) Int (ite (< x4401 x3990) (x2079 x4401) 0))
(define-fun x6686 ((x4401 Int)) Int (ite (> x2661 x4401) (x2463 x4401) 0))
(define-fun x943 ((x4401 Int)) Int (ite (> x3278 x4401) (x1277 x4401) 0))
(define-fun x108 ((x4401 Int)) Int (ite (< x4401 x8401) (x1801 x4401) 0))
(define-fun x3107 ((x4401 Int)) Int (ite (> x6680 x4401) (x4607 x4401) 0))
(define-fun x3469 ((x4401 Int)) Int (ite (> x4115 x4401) (x5136 x4401) 0))
(define-fun x2381 ((x4401 Int)) Int (ite (> x367 x4401) (x1184 x4401) 0))
(define-fun x2427 ((x4401 Int)) Int (ite (< x4401 x4099) (x249 x4401) 0))
(define-fun x5452 ((x4401 Int)) Int (ite (> x236 x4401) (x5653 x4401) 0))
(define-fun x7447 ((x4401 Int)) Int (ite (> x5651 x4401) (x6716 x4401) 0))
(define-fun x4836 ((x4401 Int)) Int (ite (> x6502 x4401) (x6199 x4401) 0))
(define-fun x6938 ((x4401 Int)) Int (ite (> x915 x4401) (x1702 x4401) 0))
(define-fun x2894 ((x4401 Int)) Int (ite (< x4401 x5960) (x5521 x4401) 0))
(define-fun x7652 ((x4401 Int)) Int (ite (> x6480 x4401) (x5542 x4401) 0))
(define-fun x6345 ((x4401 Int)) Int 0)
(define-fun x5281 ((x4401 Int)) Int 0)
(define-fun x930 ((x4401 Int)) Int 0)
(define-fun x3855 ((x4401 Int)) Int 0)
(define-fun x3729 ((x4401 Int)) Int 0)
(define-fun x7467 ((x4401 Int)) Int 0)
(define-fun x7001 ((x4401 Int)) Int 0)
(define-fun x2606 ((x4401 Int)) Int 0)
(define-fun x2927 ((x4401 Int)) Int 0)
(define-fun x5099 ((x4401 Int)) Int 0)
(define-fun x4521 ((x4401 Int)) Int 0)
(define-fun x3638 ((x4401 Int)) Int 0)
(define-fun x7292 ((x4401 Int)) Int 0)
(define-fun x6671 ((x4401 Int)) Int 0)
(define-fun x6815 ((x4401 Int)) Int 0)
(define-fun x7321 ((x4401 Int)) Int 0)
(define-fun x4387 ((x4401 Int)) Int 0)
(define-fun x4044 ((x4401 Int)) Int 0)
(define-fun x3578 ((x4401 Int)) Int 0)
(define-fun x2329 ((x4401 Int)) Int 0)
(define-fun x8448 ((x4401 Int)) Int 0)
(define-fun x6251 ((x4401 Int)) Int 0)
(define-fun x3997 ((x4401 Int)) Int 0)
(define-fun x3731 ((x4401 Int)) Int 0)
(define-fun x5251 ((x4401 Int)) Int 0)
(define-fun x5242 ((x4401 Int)) Int 0)
(define-fun x1206 ((x4401 Int)) Int 0)
(define-fun x2320 ((x4401 Int)) Int 0)
(define-fun x1279 ((x4401 Int)) Int 0)
(define-fun x2345 ((x4401 Int)) Int 0)
(define-fun x813 ((x4401 Int)) Int 0)
(define-fun x1273 ((x4401 Int)) Int 0)
(define-fun x5738 ((x4401 Int)) Int 0)
(define-fun x5253 ((x4401 Int)) Int 0)
(define-fun x4450 ((x4401 Int)) Int 0)
(define-fun x1396 ((x4401 Int)) Int 0)
(define-fun x8026 ((x4401 Int)) Int 0)
(define-fun x2729 ((x4401 Int)) Int 0)
(define-fun x4056 ((x4401 Int)) Int 0)
(define-fun x5779 ((x4401 Int)) Int 0)
(define-fun x585 ((x4401 Int)) Int 0)
(define-fun x8223 ((x4401 Int)) Int 0)
(define-fun x2119 ((x4401 Int)) Int 0)
(define-fun x4243 ((x4401 Int)) Int 0)
(define-fun x1855 ((x4401 Int)) Int 0)
(define-fun x7584 ((x4401 Int)) Int 0)
(define-fun x5466 ((x4401 Int)) Int 0)
(define-fun x6116 ((x4401 Int)) Int 0)
(define-fun x2324 ((x4401 Int)) Int 0)
(define-fun x1525 ((x4401 Int)) Int 0)
(define-fun x1938 ((x4401 Int)) Int 0)
(define-fun x5285 ((x4401 Int)) Int 0)
(define-fun x467 ((x4401 Int)) Int 0)
(define-fun x4752 ((x4401 Int)) Int 0)
(define-fun x1267 ((x4401 Int)) Int 0)
(define-fun x7673 ((x4401 Int)) Int 0)
(define-fun x3986 ((x4401 Int)) Int 0)
(define-fun x457 ((x4401 Int)) Int 0)
(define-fun x8380 ((x4401 Int)) Int 0)
(define-fun x2687 ((x4401 Int)) Int 0)
(define-fun x6258 ((x4401 Int)) Int 0)
(define-fun x2795 ((x4401 Int)) Int 0)
(define-fun x6924 ((x4401 Int)) Int 0)
(define-fun x680 ((x4401 Int)) Int 0)
(define-fun x8524 ((x4401 Int)) Int 0)
(define-fun x2584 ((x4401 Int)) Int 0)
(define-fun x3558 ((x4401 Int)) Int 0)
(define-fun x2632 ((x4401 Int)) Int 0)
(define-fun x234 ((x4401 Int)) Int 0)
(define-fun x390 ((x4401 Int)) Int 0)
(define-fun x5214 ((x4401 Int)) Int 0)
(define-fun x5222 ((x4401 Int)) Int 0)
(define-fun x794 ((x4401 Int)) Int 0)
(define-fun x7119 ((x4401 Int)) Int 0)
(define-fun x2616 ((x4401 Int)) Int 0)
(define-fun x2905 ((x4401 Int)) Int 0)
(define-fun x3707 ((x4401 Int)) Int 0)
(define-fun x4576 ((x4401 Int)) Int 0)
(define-fun x8061 ((x4401 Int)) Int 0)
(define-fun x6264 ((x4401 Int)) Int 0)
(define-fun x4541 ((x4401 Int)) Int 0)
(define-fun x1724 ((x4401 Int)) Int 0)
(define-fun x5366 ((x4401 Int)) Int 0)
(define-fun x6439 ((x4401 Int)) Int 0)
(define-fun x1772 ((x4401 Int)) Int 0)
(define-fun x6128 ((x4401 Int)) Int 0)
(define-fun x5594 ((x4401 Int)) Int 0)
(define-fun x7453 ((x4401 Int)) Int 0)
(define-fun x292 ((x4401 Int)) Int 0)
(define-fun x3931 ((x4401 Int)) Int 0)
(define-fun x2285 ((x4401 Int)) Int 0)
(define-fun x8036 ((x4401 Int)) Int 0)
(define-fun x2224 ((x4401 Int)) Int 0)
(define-fun x3127 ((x4401 Int)) Int 0)
(define-fun x4474 ((x4401 Int)) Int 0)
(define-fun x1464 ((x4401 Int)) Int 0)
(define-fun x1995 ((x4401 Int)) Int 0)
(define-fun x1785 ((x4401 Int)) Int 0)
(define-fun x5532 ((x4401 Int)) Int 0)
(define-fun x6755 ((x4401 Int)) Int 0)
(define-fun x7008 ((x4401 Int)) Int 0)
(define-fun x7338 ((x4401 Int)) Int 0)
(define-fun x5524 ((x4401 Int)) Int 0)
(define-fun x6779 ((x4401 Int)) Int (ite (= x387 x4401) x684 (x5523 x4401)))
(define-fun x7974 ((x4401 Int)) Int (ite (= x5372 x4401) x6814 (x6779 x4401)))
(define-fun x6306 ((x4401 Int)) Int 0)
(define-fun x1965 ((x4401 Int)) Int (ite (= 128 x4401) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x3578 x4401)))
(define-fun x7717 ((x4401 Int)) Int (ite (= x4401 132) x99 (x1965 x4401)))
(define-fun x3001 ((x4401 Int)) Int (ite (= x4401 0) x926 (x7419 x4401)))
(define-fun x1850 ((x4401 Int)) Int (ite (= 0 x4401) x1270 (x7419 x4401)))
(define-fun x37 ((x4401 Int)) Int (ite (= x4401 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x585 x4401)))
(define-fun x923 ((x4401 Int)) Int (ite (= x4401 132) x2688 (x37 x4401)))
(define-fun x8019 ((x4401 Int)) Int (ite (= x4401 0) x2790 (x4978 x4401)))
(define-fun x5638 ((x4401 Int)) Int (ite (= 128 x4401) x2790 (x923 x4401)))
(define-fun x2269 ((x4401 Int)) Int (ite (= x4401 4) 17 (x292 x4401)))
(define-fun x7217 ((x4401 Int)) Int (ite (and (< x4401 36) (>= x4401 0)) (x2269 x4401) (x4978 x4401)))
(define-fun x5989 ((x4401 Int)) Int (ite (= 0 x4401) x2798 (x4978 x4401)))
(define-fun x8199 ((x4401 Int)) Int (ite (= x4401 128) x2798 (x923 x4401)))
(define-fun x3748 ((x4401 Int)) Int (ite x7161 (ite x1490 (x4967 x4401) (x7179 x4401)) (ite x7789 (ite x1490 (x4967 x4401) (x7179 x4401)) (x7179 x4401))))
(define-fun x3665 ((x4401 Int)) Int (ite x2192 (x7179 x4401) (ite x3191 (x7179 x4401) (x3748 x4401))))
(define-fun x1055 ((x4401 Int)) Int (ite x5671 (ite x1230 (x7179 x4401) (x3665 x4401)) (x7179 x4401)))
(define-fun x4324 ((x4401 Int)) Int (ite x8141 (x6846 x4401) (x7179 x4401)))
(define-fun x6735 ((x4401 Int)) Int (ite x8082 (ite x3513 (x1055 x4401) (x7179 x4401)) (ite x7066 (x7179 x4401) (x4324 x4401))))
(define-fun x1593 ((x4401 Int)) Int (ite x7382 (x7179 x4401) (ite x4695 (x7179 x4401) (ite x2152 (x7179 x4401) (ite x24 (x7179 x4401) (ite x6403 (x7179 x4401) (ite x6989 (x7179 x4401) (ite x49 (x7179 x4401) (ite x4980 (x7179 x4401) (ite x3234 (x7179 x4401) (ite x6738 (x7179 x4401) (ite x345 (x7179 x4401) (ite x7127 (x7179 x4401) (ite x5444 (x7179 x4401) (ite x1538 (x7179 x4401) (ite x7252 (x7179 x4401) (ite x1520 (x7179 x4401) (ite x7307 (x7179 x4401) (ite x6813 (x7179 x4401) (ite x8477 (x7179 x4401) (ite x639 (x7179 x4401) (ite x7769 (x7179 x4401) (ite x7868 (ite x2016 (x6735 x4401) (x7179 x4401)) (x7179 x4401))))))))))))))))))))))))
(define-fun x1888 ((x4401 Int)) Int (ite x145 (ite x6788 (x7179 x4401) (x1593 x4401)) (ite x2330 (x7179 x4401) (ite x6788 (x7179 x4401) (x1593 x4401)))))
(define-fun x6593 ((x4401 Int)) Int (ite (= x4401 x5372) x27 (x7974 x4401)))
(define-fun x6009 ((x4401 Int)) Int (ite (= x4401 x3597) x1477 (x6593 x4401)))
(define-fun x2787 ((x4401 Int)) Int (ite (= x4401 x5372) x4845 (x6009 x4401)))
(define-fun x7175 ((x4401 Int)) Int (ite (= x4401 x47) x4974 (x2787 x4401)))
(define-fun x3245 ((x4401 Int)) Int (ite x1490 (x8485 x4401) (x7175 x4401)))
(define-fun x5392 ((x4401 Int)) Int (ite (= x47 x4401) x7760 (x3245 x4401)))
(define-fun x120 ((x4401 Int)) Int (ite (= x5372 x4401) x867 (x5392 x4401)))
(define-fun x3952 ((x4401 Int)) Int (ite (= x4401 x333) x153 (x6009 x4401)))
(define-fun x1948 ((x4401 Int)) Int (ite (= x4401 x3173) x7143 (x3952 x4401)))
(define-fun x6338 ((x4401 Int)) Int (ite (= x4401 x5372) x5575 (x1948 x4401)))
(define-fun x2550 ((x4401 Int)) Int (ite (= x7762 x4401) x3608 (x6338 x4401)))
(define-fun x7711 ((x4401 Int)) Int (ite (= x7762 x4401) x2608 (x2550 x4401)))
(define-fun x1331 ((x4401 Int)) Int (ite (= x4401 x5372) x3798 (x7711 x4401)))
(define-fun x633 ((x4401 Int)) Int (ite x7269 (x1948 x4401) (ite x4224 (x2550 x4401) (ite x804 (x1331 x4401) (x1948 x4401)))))
(define-fun x5316 ((x4401 Int)) Int (ite (= x3173 x4401) x8067 (x633 x4401)))
(define-fun x4641 ((x4401 Int)) Int (ite (= x333 x4401) x5618 (x5316 x4401)))
(define-fun x3724 ((x4401 Int)) Int (ite (= x5372 x4401) x6684 (x6009 x4401)))
(define-fun x6811 ((x4401 Int)) Int (ite (= x4401 x5051) x622 (x3724 x4401)))
(define-fun x5108 ((x4401 Int)) Int (ite (= x4401 x5051) x470 (x6811 x4401)))
(define-fun x6136 ((x4401 Int)) Int (ite (= x4401 x5372) x4374 (x5108 x4401)))
(define-fun x5451 ((x4401 Int)) Int (ite x6788 (x6009 x4401) (ite x7382 (x6009 x4401) (ite x4695 (x6009 x4401) (ite x2152 (x6009 x4401) (ite x24 (x6009 x4401) (ite x6403 (x6009 x4401) (ite x6989 (x6009 x4401) (ite x49 (x6009 x4401) (ite x4980 (x6009 x4401) (ite x3234 (x6009 x4401) (ite x6738 (x6009 x4401) (ite x345 (x6009 x4401) (ite x7127 (x6009 x4401) (ite x5444 (x6009 x4401) (ite x1538 (x6009 x4401) (ite x7252 (x6009 x4401) (ite x1520 (x6009 x4401) (ite x7307 (x6009 x4401) (ite x6813 (x6009 x4401) (ite x8477 (x6009 x4401) (ite x639 (x6009 x4401) (ite x7769 (x6009 x4401) (ite x7868 (ite x2016 (ite x8082 (ite x3513 (ite x5671 (ite x1230 (x6009 x4401) (ite x2192 (x6009 x4401) (ite x3191 (x6009 x4401) (ite x7161 (x3245 x4401) (ite x7789 (x120 x4401) (x6009 x4401)))))) (ite x6530 (x633 x4401) (ite x2039 (x4641 x4401) (x6009 x4401)))) (ite x6885 (x6009 x4401) (ite x7726 (x6009 x4401) (ite x6608 (x6811 x4401) (ite x5900 (x6136 x4401) (x6009 x4401)))))) (ite x7066 (x6009 x4401) (ite x8141 (x5337 x4401) (x6009 x4401)))) (x6009 x4401)) (x6009 x4401)))))))))))))))))))))))))
(define-fun x5030 ((x4401 Int)) Int (ite (= x3597 x4401) x2623 (x5451 x4401)))
(define-fun x6426 ((x4401 Int)) Int (ite (= x4401 x5372) x5626 (x5030 x4401)))
(define-fun x978 ((x4401 Int)) Int (ite x145 (x5451 x4401) (ite x2330 (x7974 x4401) (x6426 x4401))))
(define-fun x2716 ((x4401 Int)) Int (ite x7161 (ite x1490 (x6507 x4401) (x7070 x4401)) (ite x7789 (ite x1490 (x6507 x4401) (x7070 x4401)) (x7070 x4401))))
(define-fun x6523 ((x4401 Int)) Int (ite x2192 (x7070 x4401) (ite x3191 (x7070 x4401) (x2716 x4401))))
(define-fun x4925 ((x4401 Int)) Int (ite x5671 (ite x1230 (x7070 x4401) (x6523 x4401)) (x7070 x4401)))
(define-fun x2130 ((x4401 Int)) Int (ite x8141 (x4660 x4401) (x7070 x4401)))
(define-fun x1518 ((x4401 Int)) Int (ite x8082 (ite x3513 (x4925 x4401) (x7070 x4401)) (ite x7066 (x7070 x4401) (x2130 x4401))))
(define-fun x1739 ((x4401 Int)) Int (ite x7382 (x7070 x4401) (ite x4695 (x7070 x4401) (ite x2152 (x7070 x4401) (ite x24 (x7070 x4401) (ite x6403 (x7070 x4401) (ite x6989 (x7070 x4401) (ite x49 (x7070 x4401) (ite x4980 (x7070 x4401) (ite x3234 (x7070 x4401) (ite x6738 (x7070 x4401) (ite x345 (x7070 x4401) (ite x7127 (x7070 x4401) (ite x5444 (x7070 x4401) (ite x1538 (x7070 x4401) (ite x7252 (x7070 x4401) (ite x1520 (x7070 x4401) (ite x7307 (x7070 x4401) (ite x6813 (x7070 x4401) (ite x8477 (x7070 x4401) (ite x639 (x7070 x4401) (ite x7769 (x7070 x4401) (ite x7868 (ite x2016 (x1518 x4401) (x7070 x4401)) (x7070 x4401))))))))))))))))))))))))
(define-fun x2637 ((x4401 Int)) Int (ite x145 (ite x6788 (x7070 x4401) (x1739 x4401)) (ite x2330 (x7070 x4401) (ite x6788 (x7070 x4401) (x1739 x4401)))))
(define-fun x2420 ((x4401 Int)) Int (x33 x4401))
(define-fun x2710 ((x4401 Int)) Int (ite (= x4401 x5203) x2113 (x3117 x4401)))
(define-fun x7194 ((x4401 Int)) Int (ite x1403 (x3117 x4401) (x2710 x4401)))
(define-fun x329 ((x4401 Int)) Int (ite x7161 (ite x1490 (x3847 x4401) (x3117 x4401)) (ite x7789 (ite x1490 (x3847 x4401) (x3117 x4401)) (x3117 x4401))))
(define-fun x6473 ((x4401 Int)) Int (ite x2192 (x3117 x4401) (ite x3191 (x3117 x4401) (x329 x4401))))
(define-fun x8132 ((x4401 Int)) Int (ite x5671 (ite x1230 (x3117 x4401) (x6473 x4401)) (x3117 x4401)))
(define-fun x7718 ((x4401 Int)) Int (ite x8141 (x4446 x4401) (x3117 x4401)))
(define-fun x3293 ((x4401 Int)) Int (ite x8082 (ite x3513 (x8132 x4401) (x3117 x4401)) (ite x7066 (x3117 x4401) (x7718 x4401))))
(define-fun x7324 ((x4401 Int)) Int (ite x7382 (x3117 x4401) (ite x4695 (x3117 x4401) (ite x2152 (x3117 x4401) (ite x24 (x3117 x4401) (ite x6403 (x3117 x4401) (ite x6989 (x3117 x4401) (ite x49 (x3117 x4401) (ite x4980 (x3117 x4401) (ite x3234 (x3117 x4401) (ite x6738 (x3117 x4401) (ite x345 (x3117 x4401) (ite x7127 (x3117 x4401) (ite x5444 (x3117 x4401) (ite x1538 (x3117 x4401) (ite x7252 (x3117 x4401) (ite x1520 (x3117 x4401) (ite x7307 (x3117 x4401) (ite x6813 (x3117 x4401) (ite x8477 (x3117 x4401) (ite x639 (x3117 x4401) (ite x7769 (x3117 x4401) (ite x7868 (ite x2016 (x3293 x4401) (x3117 x4401)) (x3117 x4401))))))))))))))))))))))))
(define-fun x5820 ((x4401 Int)) Int (ite x145 (ite x6788 (x7194 x4401) (x7324 x4401)) (ite x2330 (x3117 x4401) (ite x6788 (x7194 x4401) (x7324 x4401)))))
(define-fun x7999 ((x4401 Int)) Int (ite x7161 (ite x1490 (x3182 x4401) (x3301 x4401)) (ite x7789 (ite x1490 (x3182 x4401) (x3301 x4401)) (x3301 x4401))))
(define-fun x287 ((x4401 Int)) Int (ite x2192 (x3301 x4401) (ite x3191 (x3301 x4401) (x7999 x4401))))
(define-fun x1439 ((x4401 Int)) Int (ite x5671 (ite x1230 (x3301 x4401) (x287 x4401)) (x3301 x4401)))
(define-fun x1414 ((x4401 Int)) Int (ite x8141 (x8383 x4401) (x3301 x4401)))
(define-fun x7184 ((x4401 Int)) Int (ite x8082 (ite x3513 (x1439 x4401) (x3301 x4401)) (ite x7066 (x3301 x4401) (x1414 x4401))))
(define-fun x6913 ((x4401 Int)) Int (ite x7382 (x3301 x4401) (ite x4695 (x3301 x4401) (ite x2152 (x3301 x4401) (ite x24 (x3301 x4401) (ite x6403 (x3301 x4401) (ite x6989 (x3301 x4401) (ite x49 (x3301 x4401) (ite x4980 (x3301 x4401) (ite x3234 (x3301 x4401) (ite x6738 (x3301 x4401) (ite x345 (x3301 x4401) (ite x7127 (x3301 x4401) (ite x5444 (x3301 x4401) (ite x1538 (x3301 x4401) (ite x7252 (x3301 x4401) (ite x1520 (x3301 x4401) (ite x7307 (x3301 x4401) (ite x6813 (x3301 x4401) (ite x8477 (x3301 x4401) (ite x639 (x3301 x4401) (ite x7769 (x3301 x4401) (ite x7868 (ite x2016 (x7184 x4401) (x3301 x4401)) (x3301 x4401))))))))))))))))))))))))
(define-fun x2436 ((x4401 Int)) Int (ite x145 (ite x6788 (x3301 x4401) (x6913 x4401)) (ite x2330 (x3301 x4401) (ite x6788 (x3301 x4401) (x6913 x4401)))))
(define-fun x8358 ((x4401 Int)) Int (ite x7161 (ite x1490 (x7152 x4401) (x6749 x4401)) (ite x7789 (ite x1490 (x7152 x4401) (x6749 x4401)) (x6749 x4401))))
(define-fun x873 ((x4401 Int)) Int (ite x2192 (x6749 x4401) (ite x3191 (x6749 x4401) (x8358 x4401))))
(define-fun x1138 ((x4401 Int)) Int (ite x5671 (ite x1230 (x6749 x4401) (x873 x4401)) (x6749 x4401)))
(define-fun x5818 ((x4401 Int)) Int (ite x8141 (x4827 x4401) (x6749 x4401)))
(define-fun x3024 ((x4401 Int)) Int (ite x8082 (ite x3513 (x1138 x4401) (x6749 x4401)) (ite x7066 (x6749 x4401) (x5818 x4401))))
(define-fun x7053 ((x4401 Int)) Int (ite x7382 (x6749 x4401) (ite x4695 (x6749 x4401) (ite x2152 (x6749 x4401) (ite x24 (x6749 x4401) (ite x6403 (x6749 x4401) (ite x6989 (x6749 x4401) (ite x49 (x6749 x4401) (ite x4980 (x6749 x4401) (ite x3234 (x6749 x4401) (ite x6738 (x6749 x4401) (ite x345 (x6749 x4401) (ite x7127 (x6749 x4401) (ite x5444 (x6749 x4401) (ite x1538 (x6749 x4401) (ite x7252 (x6749 x4401) (ite x1520 (x6749 x4401) (ite x7307 (x6749 x4401) (ite x6813 (x6749 x4401) (ite x8477 (x6749 x4401) (ite x639 (x6749 x4401) (ite x7769 (x6749 x4401) (ite x7868 (ite x2016 (x3024 x4401) (x6749 x4401)) (x6749 x4401))))))))))))))))))))))))
(define-fun x512 ((x4401 Int)) Int (ite x145 (ite x6788 (x6749 x4401) (x7053 x4401)) (ite x2330 (x6749 x4401) (ite x6788 (x6749 x4401) (x7053 x4401)))))
(define-fun x733 ((x4401 Int)) Int (x7803 x4401))
(define-fun x1838 ((x4401 Int)) Int (x1108 x4401))
(define-fun x4657 ((x4401 Int)) Int (x507 x4401))
(define-fun x3992 ((x4401 Int)) Int (ite x7161 (ite x1490 (x1475 x4401) (x7141 x4401)) (ite x7789 (ite x1490 (x1475 x4401) (x7141 x4401)) (x7141 x4401))))
(define-fun x1410 ((x4401 Int)) Int (ite x2192 (x7141 x4401) (ite x3191 (x7141 x4401) (x3992 x4401))))
(define-fun x2825 ((x4401 Int)) Int (ite x5671 (ite x1230 (x7141 x4401) (x1410 x4401)) (x7141 x4401)))
(define-fun x4414 ((x4401 Int)) Int (ite x8141 (x5404 x4401) (x7141 x4401)))
(define-fun x4878 ((x4401 Int)) Int (ite x8082 (ite x3513 (x2825 x4401) (x7141 x4401)) (ite x7066 (x7141 x4401) (x4414 x4401))))
(define-fun x3810 ((x4401 Int)) Int (ite x7382 (x7141 x4401) (ite x4695 (x7141 x4401) (ite x2152 (x7141 x4401) (ite x24 (x7141 x4401) (ite x6403 (x7141 x4401) (ite x6989 (x7141 x4401) (ite x49 (x7141 x4401) (ite x4980 (x7141 x4401) (ite x3234 (x7141 x4401) (ite x6738 (x7141 x4401) (ite x345 (x7141 x4401) (ite x7127 (x7141 x4401) (ite x5444 (x7141 x4401) (ite x1538 (x7141 x4401) (ite x7252 (x7141 x4401) (ite x1520 (x7141 x4401) (ite x7307 (x7141 x4401) (ite x6813 (x7141 x4401) (ite x8477 (x7141 x4401) (ite x639 (x7141 x4401) (ite x7769 (x7141 x4401) (ite x7868 (ite x2016 (x4878 x4401) (x7141 x4401)) (x7141 x4401))))))))))))))))))))))))
(define-fun x5526 ((x4401 Int)) Int (ite x145 (ite x6788 (x7141 x4401) (x3810 x4401)) (ite x2330 (x7141 x4401) (ite x6788 (x7141 x4401) (x3810 x4401)))))
(define-fun x1758 ((x4401 Int)) Int (ite (= x6980 x4401) 3 (x5793 x4401)))
(define-fun x2960 ((x4401 Int)) Int (ite x7269 (x5793 x4401) (x1758 x4401)))
(define-fun x5684 ((x4401 Int)) Int (ite x5671 (x5793 x4401) (ite x6530 (x2960 x4401) (ite x2039 (x2960 x4401) (x5793 x4401)))))
(define-fun x3212 ((x4401 Int)) Int (ite (= x3478 x4401) 2 (x5793 x4401)))
(define-fun x1350 ((x4401 Int)) Int (ite (= x3281 x4401) 3 (x3212 x4401)))
(define-fun x829 ((x4401 Int)) Int (ite x6885 (x5793 x4401) (ite x7726 (x3212 x4401) (x1350 x4401))))
(define-fun x7579 ((x4401 Int)) Int (ite x8082 (ite x3513 (x5684 x4401) (x829 x4401)) (x5793 x4401)))
(define-fun x3606 ((x4401 Int)) Int (ite x7382 (x5793 x4401) (ite x4695 (x5793 x4401) (ite x2152 (x5793 x4401) (ite x24 (x5793 x4401) (ite x6403 (x5793 x4401) (ite x6989 (x5793 x4401) (ite x49 (x5793 x4401) (ite x4980 (x5793 x4401) (ite x3234 (x5793 x4401) (ite x6738 (x5793 x4401) (ite x345 (x5793 x4401) (ite x7127 (x5793 x4401) (ite x5444 (x5793 x4401) (ite x1538 (x5793 x4401) (ite x7252 (x5793 x4401) (ite x1520 (x5793 x4401) (ite x7307 (x5793 x4401) (ite x6813 (x5793 x4401) (ite x8477 (x5793 x4401) (ite x639 (x5793 x4401) (ite x7769 (x5793 x4401) (ite x7868 (ite x2016 (x7579 x4401) (x5793 x4401)) (x5793 x4401))))))))))))))))))))))))
(define-fun x174 ((x4401 Int)) Int (ite x145 (ite x6788 (x5793 x4401) (x3606 x4401)) (ite x2330 (x5793 x4401) (ite x6788 (x5793 x4401) (x3606 x4401)))))
(define-fun x2953 ((x4401 Int)) Int (ite x7161 (ite x1490 (x2410 x4401) (x8008 x4401)) (ite x7789 (ite x1490 (x2410 x4401) (x8008 x4401)) (x8008 x4401))))
(define-fun x2511 ((x4401 Int)) Int (ite x2192 (x8008 x4401) (ite x3191 (x8008 x4401) (x2953 x4401))))
(define-fun x3671 ((x4401 Int)) Int (ite x5671 (ite x1230 (x8008 x4401) (x2511 x4401)) (x8008 x4401)))
(define-fun x17 ((x4401 Int)) Int (ite x8141 (x2276 x4401) (x8008 x4401)))
(define-fun x8488 ((x4401 Int)) Int (ite x8082 (ite x3513 (x3671 x4401) (x8008 x4401)) (ite x7066 (x8008 x4401) (x17 x4401))))
(define-fun x8328 ((x4401 Int)) Int (ite x7382 (x8008 x4401) (ite x4695 (x8008 x4401) (ite x2152 (x8008 x4401) (ite x24 (x8008 x4401) (ite x6403 (x8008 x4401) (ite x6989 (x8008 x4401) (ite x49 (x8008 x4401) (ite x4980 (x8008 x4401) (ite x3234 (x8008 x4401) (ite x6738 (x8008 x4401) (ite x345 (x8008 x4401) (ite x7127 (x8008 x4401) (ite x5444 (x8008 x4401) (ite x1538 (x8008 x4401) (ite x7252 (x8008 x4401) (ite x1520 (x8008 x4401) (ite x7307 (x8008 x4401) (ite x6813 (x8008 x4401) (ite x8477 (x8008 x4401) (ite x639 (x8008 x4401) (ite x7769 (x8008 x4401) (ite x7868 (ite x2016 (x8488 x4401) (x8008 x4401)) (x8008 x4401))))))))))))))))))))))))
(define-fun x3766 ((x4401 Int)) Int (ite x145 (ite x6788 (x8008 x4401) (x8328 x4401)) (ite x2330 (x8008 x4401) (ite x6788 (x8008 x4401) (x8328 x4401)))))
(define-fun x4261 ((x4401 Int)) Int (ite (= x4401 x6132) x4972 (x5513 x4401)))
(define-fun x6120 ((x4401 Int)) Int (ite x6885 (x5513 x4401) (x4261 x4401)))
(define-fun x4151 ((x4401 Int)) Int (ite x8082 (ite x3513 (x5513 x4401) (x6120 x4401)) (x5513 x4401)))
(define-fun x6884 ((x4401 Int)) Int (ite x7382 (x5513 x4401) (ite x4695 (x5513 x4401) (ite x2152 (x5513 x4401) (ite x24 (x5513 x4401) (ite x6403 (x5513 x4401) (ite x6989 (x5513 x4401) (ite x49 (x5513 x4401) (ite x4980 (x5513 x4401) (ite x3234 (x5513 x4401) (ite x6738 (x5513 x4401) (ite x345 (x5513 x4401) (ite x7127 (x5513 x4401) (ite x5444 (x5513 x4401) (ite x1538 (x5513 x4401) (ite x7252 (x5513 x4401) (ite x1520 (x5513 x4401) (ite x7307 (x5513 x4401) (ite x6813 (x5513 x4401) (ite x8477 (x5513 x4401) (ite x639 (x5513 x4401) (ite x7769 (x5513 x4401) (ite x7868 (ite x2016 (x4151 x4401) (x5513 x4401)) (x5513 x4401))))))))))))))))))))))))
(define-fun x6130 ((x4401 Int)) Int (ite x145 (ite x6788 (x5513 x4401) (x6884 x4401)) (ite x2330 (x5513 x4401) (ite x6788 (x5513 x4401) (x6884 x4401)))))
(define-fun x2340 ((x4401 Int)) Int (ite x7161 (ite x1490 (x7428 x4401) (x315 x4401)) (ite x7789 (ite x1490 (x7428 x4401) (x315 x4401)) (x315 x4401))))
(define-fun x7523 ((x4401 Int)) Int (ite x2192 (x315 x4401) (ite x3191 (x315 x4401) (x2340 x4401))))
(define-fun x4791 ((x4401 Int)) Int (ite x5671 (ite x1230 (x315 x4401) (x7523 x4401)) (x315 x4401)))
(define-fun x1471 ((x4401 Int)) Int (ite x8141 (x4712 x4401) (x315 x4401)))
(define-fun x2370 ((x4401 Int)) Int (ite x8082 (ite x3513 (x4791 x4401) (x315 x4401)) (ite x7066 (x315 x4401) (x1471 x4401))))
(define-fun x4427 ((x4401 Int)) Int (ite x7382 (x315 x4401) (ite x4695 (x315 x4401) (ite x2152 (x315 x4401) (ite x24 (x315 x4401) (ite x6403 (x315 x4401) (ite x6989 (x315 x4401) (ite x49 (x315 x4401) (ite x4980 (x315 x4401) (ite x3234 (x315 x4401) (ite x6738 (x315 x4401) (ite x345 (x315 x4401) (ite x7127 (x315 x4401) (ite x5444 (x315 x4401) (ite x1538 (x315 x4401) (ite x7252 (x315 x4401) (ite x1520 (x315 x4401) (ite x7307 (x315 x4401) (ite x6813 (x315 x4401) (ite x8477 (x315 x4401) (ite x639 (x315 x4401) (ite x7769 (x315 x4401) (ite x7868 (ite x2016 (x2370 x4401) (x315 x4401)) (x315 x4401))))))))))))))))))))))))
(define-fun x1167 ((x4401 Int)) Int (ite x145 (ite x6788 (x315 x4401) (x4427 x4401)) (ite x2330 (x315 x4401) (ite x6788 (x315 x4401) (x4427 x4401)))))
(define-fun x6720 ((x4401 Int)) Int (ite x7161 (ite x1490 (x2769 x4401) (x2501 x4401)) (ite x7789 (ite x1490 (x2769 x4401) (x2501 x4401)) (x2501 x4401))))
(define-fun x7753 ((x4401 Int)) Int (ite x2192 (x2501 x4401) (ite x3191 (x2501 x4401) (x6720 x4401))))
(define-fun x7093 ((x4401 Int)) Int (ite x5671 (ite x1230 (x2501 x4401) (x7753 x4401)) (x2501 x4401)))
(define-fun x1032 ((x4401 Int)) Int (ite x8141 (x7186 x4401) (x2501 x4401)))
(define-fun x6798 ((x4401 Int)) Int (ite x8082 (ite x3513 (x7093 x4401) (x2501 x4401)) (ite x7066 (x2501 x4401) (x1032 x4401))))
(define-fun x2395 ((x4401 Int)) Int (ite x7382 (x2501 x4401) (ite x4695 (x2501 x4401) (ite x2152 (x2501 x4401) (ite x24 (x2501 x4401) (ite x6403 (x2501 x4401) (ite x6989 (x2501 x4401) (ite x49 (x2501 x4401) (ite x4980 (x2501 x4401) (ite x3234 (x2501 x4401) (ite x6738 (x2501 x4401) (ite x345 (x2501 x4401) (ite x7127 (x2501 x4401) (ite x5444 (x2501 x4401) (ite x1538 (x2501 x4401) (ite x7252 (x2501 x4401) (ite x1520 (x2501 x4401) (ite x7307 (x2501 x4401) (ite x6813 (x2501 x4401) (ite x8477 (x2501 x4401) (ite x639 (x2501 x4401) (ite x7769 (x2501 x4401) (ite x7868 (ite x2016 (x6798 x4401) (x2501 x4401)) (x2501 x4401))))))))))))))))))))))))
(define-fun x1886 ((x4401 Int)) Int (ite x145 (ite x6788 (x2501 x4401) (x2395 x4401)) (ite x2330 (x2501 x4401) (ite x6788 (x2501 x4401) (x2395 x4401)))))
(define-fun x4909 ((x4401 Int)) Int (ite x7161 (ite x1490 (x2275 x4401) (x4850 x4401)) (ite x7789 (ite x1490 (x2275 x4401) (x4850 x4401)) (x4850 x4401))))
(define-fun x3213 ((x4401 Int)) Int (ite x2192 (x4850 x4401) (ite x3191 (x4850 x4401) (x4909 x4401))))
(define-fun x6395 ((x4401 Int)) Int (ite x5671 (ite x1230 (x4850 x4401) (x3213 x4401)) (x4850 x4401)))
(define-fun x865 ((x4401 Int)) Int (ite x8141 (x5650 x4401) (x4850 x4401)))
(define-fun x1946 ((x4401 Int)) Int (ite x8082 (ite x3513 (x6395 x4401) (x4850 x4401)) (ite x7066 (x4850 x4401) (x865 x4401))))
(define-fun x3422 ((x4401 Int)) Int (ite x7382 (x4850 x4401) (ite x4695 (x4850 x4401) (ite x2152 (x4850 x4401) (ite x24 (x4850 x4401) (ite x6403 (x4850 x4401) (ite x6989 (x4850 x4401) (ite x49 (x4850 x4401) (ite x4980 (x4850 x4401) (ite x3234 (x4850 x4401) (ite x6738 (x4850 x4401) (ite x345 (x4850 x4401) (ite x7127 (x4850 x4401) (ite x5444 (x4850 x4401) (ite x1538 (x4850 x4401) (ite x7252 (x4850 x4401) (ite x1520 (x4850 x4401) (ite x7307 (x4850 x4401) (ite x6813 (x4850 x4401) (ite x8477 (x4850 x4401) (ite x639 (x4850 x4401) (ite x7769 (x4850 x4401) (ite x7868 (ite x2016 (x1946 x4401) (x4850 x4401)) (x4850 x4401))))))))))))))))))))))))
(define-fun x4884 ((x4401 Int)) Int (ite x145 (ite x6788 (x4850 x4401) (x3422 x4401)) (ite x2330 (x4850 x4401) (ite x6788 (x4850 x4401) (x3422 x4401)))))
(define-fun x2896 ((x4401 Int)) Int (ite (= x4329 x4401) x2959 (x3541 x4401)))
(define-fun x2374 ((x4401 Int)) Int (ite x2975 (x3541 x4401) (x2896 x4401)))
(define-fun x263 ((x4401 Int)) Int (ite x8082 (x3541 x4401) (ite x7066 (x3541 x4401) (x2374 x4401))))
(define-fun x6945 ((x4401 Int)) Int (ite x7382 (x3541 x4401) (ite x4695 (x3541 x4401) (ite x2152 (x3541 x4401) (ite x24 (x3541 x4401) (ite x6403 (x3541 x4401) (ite x6989 (x3541 x4401) (ite x49 (x3541 x4401) (ite x4980 (x3541 x4401) (ite x3234 (x3541 x4401) (ite x6738 (x3541 x4401) (ite x345 (x3541 x4401) (ite x7127 (x3541 x4401) (ite x5444 (x3541 x4401) (ite x1538 (x3541 x4401) (ite x7252 (x3541 x4401) (ite x1520 (x3541 x4401) (ite x7307 (x3541 x4401) (ite x6813 (x3541 x4401) (ite x8477 (x3541 x4401) (ite x639 (x3541 x4401) (ite x7769 (x3541 x4401) (ite x7868 (ite x2016 (x263 x4401) (x3541 x4401)) (x3541 x4401))))))))))))))))))))))))
(define-fun x4648 ((x4401 Int)) Int (ite x145 (ite x6788 (x3541 x4401) (x6945 x4401)) (ite x2330 (x3541 x4401) (ite x6788 (x3541 x4401) (x6945 x4401)))))
(define-fun x3761 ((x4401 Int)) Int (x2804 x4401))
(define-fun x3464 ((x4401 Int)) Int (ite x7161 (ite x1490 (x3094 x4401) (x3196 x4401)) (ite x7789 (ite x1490 (x3094 x4401) (x3196 x4401)) (x3196 x4401))))
(define-fun x6546 ((x4401 Int)) Int (ite x2192 (x3196 x4401) (ite x3191 (x3196 x4401) (x3464 x4401))))
(define-fun x6371 ((x4401 Int)) Int (ite x5671 (ite x1230 (x3196 x4401) (x6546 x4401)) (x3196 x4401)))
(define-fun x901 ((x4401 Int)) Int (ite x8141 (x1177 x4401) (x3196 x4401)))
(define-fun x738 ((x4401 Int)) Int (ite x8082 (ite x3513 (x6371 x4401) (x3196 x4401)) (ite x7066 (x3196 x4401) (x901 x4401))))
(define-fun x4347 ((x4401 Int)) Int (ite x7382 (x3196 x4401) (ite x4695 (x3196 x4401) (ite x2152 (x3196 x4401) (ite x24 (x3196 x4401) (ite x6403 (x3196 x4401) (ite x6989 (x3196 x4401) (ite x49 (x3196 x4401) (ite x4980 (x3196 x4401) (ite x3234 (x3196 x4401) (ite x6738 (x3196 x4401) (ite x345 (x3196 x4401) (ite x7127 (x3196 x4401) (ite x5444 (x3196 x4401) (ite x1538 (x3196 x4401) (ite x7252 (x3196 x4401) (ite x1520 (x3196 x4401) (ite x7307 (x3196 x4401) (ite x6813 (x3196 x4401) (ite x8477 (x3196 x4401) (ite x639 (x3196 x4401) (ite x7769 (x3196 x4401) (ite x7868 (ite x2016 (x738 x4401) (x3196 x4401)) (x3196 x4401))))))))))))))))))))))))
(define-fun x882 ((x4401 Int)) Int (ite x145 (ite x6788 (x3196 x4401) (x4347 x4401)) (ite x2330 (x3196 x4401) (ite x6788 (x3196 x4401) (x4347 x4401)))))
(define-fun x4063 ((x4401 Int)) Int (ite x7161 (ite x1490 (x1058 x4401) (x6164 x4401)) (ite x7789 (ite x1490 (x1058 x4401) (x6164 x4401)) (x6164 x4401))))
(define-fun x7034 ((x4401 Int)) Int (ite x2192 (x6164 x4401) (ite x3191 (x6164 x4401) (x4063 x4401))))
(define-fun x744 ((x4401 Int)) Int (ite x5671 (ite x1230 (x6164 x4401) (x7034 x4401)) (x6164 x4401)))
(define-fun x8542 ((x4401 Int)) Int (ite x8141 (x1845 x4401) (x6164 x4401)))
(define-fun x6241 ((x4401 Int)) Int (ite x8082 (ite x3513 (x744 x4401) (x6164 x4401)) (ite x7066 (x6164 x4401) (x8542 x4401))))
(define-fun x8494 ((x4401 Int)) Int (ite x7382 (x6164 x4401) (ite x4695 (x6164 x4401) (ite x2152 (x6164 x4401) (ite x24 (x6164 x4401) (ite x6403 (x6164 x4401) (ite x6989 (x6164 x4401) (ite x49 (x6164 x4401) (ite x4980 (x6164 x4401) (ite x3234 (x6164 x4401) (ite x6738 (x6164 x4401) (ite x345 (x6164 x4401) (ite x7127 (x6164 x4401) (ite x5444 (x6164 x4401) (ite x1538 (x6164 x4401) (ite x7252 (x6164 x4401) (ite x1520 (x6164 x4401) (ite x7307 (x6164 x4401) (ite x6813 (x6164 x4401) (ite x8477 (x6164 x4401) (ite x639 (x6164 x4401) (ite x7769 (x6164 x4401) (ite x7868 (ite x2016 (x6241 x4401) (x6164 x4401)) (x6164 x4401))))))))))))))))))))))))
(define-fun x1733 ((x4401 Int)) Int (ite x145 (ite x6788 (x6164 x4401) (x8494 x4401)) (ite x2330 (x6164 x4401) (ite x6788 (x6164 x4401) (x8494 x4401)))))
(define-fun x2118 ((x4401 Int)) Int (x2259 x4401))
(define-fun x4797 ((x4401 Int)) Int (ite x7161 (ite x1490 (x7948 x4401) (x421 x4401)) (ite x7789 (ite x1490 (x7948 x4401) (x421 x4401)) (x421 x4401))))
(define-fun x3779 ((x4401 Int)) Int (ite x2192 (x421 x4401) (ite x3191 (x421 x4401) (x4797 x4401))))
(define-fun x2708 ((x4401 Int)) Int (ite x5671 (ite x1230 (x421 x4401) (x3779 x4401)) (x421 x4401)))
(define-fun x2142 ((x4401 Int)) Int (ite x8141 (x1860 x4401) (x421 x4401)))
(define-fun x6445 ((x4401 Int)) Int (ite x8082 (ite x3513 (x2708 x4401) (x421 x4401)) (ite x7066 (x421 x4401) (x2142 x4401))))
(define-fun x8493 ((x4401 Int)) Int (ite x7382 (x421 x4401) (ite x4695 (x421 x4401) (ite x2152 (x421 x4401) (ite x24 (x421 x4401) (ite x6403 (x421 x4401) (ite x6989 (x421 x4401) (ite x49 (x421 x4401) (ite x4980 (x421 x4401) (ite x3234 (x421 x4401) (ite x6738 (x421 x4401) (ite x345 (x421 x4401) (ite x7127 (x421 x4401) (ite x5444 (x421 x4401) (ite x1538 (x421 x4401) (ite x7252 (x421 x4401) (ite x1520 (x421 x4401) (ite x7307 (x421 x4401) (ite x6813 (x421 x4401) (ite x8477 (x421 x4401) (ite x639 (x421 x4401) (ite x7769 (x421 x4401) (ite x7868 (ite x2016 (x6445 x4401) (x421 x4401)) (x421 x4401))))))))))))))))))))))))
(define-fun x4779 ((x4401 Int)) Int (ite x145 (ite x6788 (x421 x4401) (x8493 x4401)) (ite x2330 (x421 x4401) (ite x6788 (x421 x4401) (x8493 x4401)))))
(define-fun x4281 ((x4401 Int)) Int (x708 x4401))
(define-fun x6903 ((x4401 Int)) Int (ite x7161 (ite x1490 (x2304 x4401) (x3663 x4401)) (ite x7789 (ite x1490 (x2304 x4401) (x3663 x4401)) (x3663 x4401))))
(define-fun x2104 ((x4401 Int)) Int (ite x2192 (x3663 x4401) (ite x3191 (x3663 x4401) (x6903 x4401))))
(define-fun x4419 ((x4401 Int)) Int (ite x5671 (ite x1230 (x3663 x4401) (x2104 x4401)) (x3663 x4401)))
(define-fun x3084 ((x4401 Int)) Int (ite x8141 (x4086 x4401) (x3663 x4401)))
(define-fun x8415 ((x4401 Int)) Int (ite x8082 (ite x3513 (x4419 x4401) (x3663 x4401)) (ite x7066 (x3663 x4401) (x3084 x4401))))
(define-fun x2919 ((x4401 Int)) Int (ite x7382 (x3663 x4401) (ite x4695 (x3663 x4401) (ite x2152 (x3663 x4401) (ite x24 (x3663 x4401) (ite x6403 (x3663 x4401) (ite x6989 (x3663 x4401) (ite x49 (x3663 x4401) (ite x4980 (x3663 x4401) (ite x3234 (x3663 x4401) (ite x6738 (x3663 x4401) (ite x345 (x3663 x4401) (ite x7127 (x3663 x4401) (ite x5444 (x3663 x4401) (ite x1538 (x3663 x4401) (ite x7252 (x3663 x4401) (ite x1520 (x3663 x4401) (ite x7307 (x3663 x4401) (ite x6813 (x3663 x4401) (ite x8477 (x3663 x4401) (ite x639 (x3663 x4401) (ite x7769 (x3663 x4401) (ite x7868 (ite x2016 (x8415 x4401) (x3663 x4401)) (x3663 x4401))))))))))))))))))))))))
(define-fun x3733 ((x4401 Int)) Int (ite x145 (ite x6788 (x3663 x4401) (x2919 x4401)) (ite x2330 (x3663 x4401) (ite x6788 (x3663 x4401) (x2919 x4401)))))
(define-fun x5949 ((x4401 Int)) Int (ite x2583 (x5638 x4401) (ite x5182 (x923 x4401) (x8199 x4401))))
(define-fun x1770 ((x4401 Int)) Int (ite (= x4401 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x5949 x4401)))
(define-fun x1489 ((x4401 Int)) Int (ite (= 164 x4401) x5372 (x1770 x4401)))
(define-fun x5103 ((x4401 Int)) Int (ite (= 160 x4401) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x1489 x4401)))
(define-fun x511 ((x4401 Int)) Int (ite (= 164 x4401) x8013 (x5103 x4401)))
(define-fun x4029 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x5285 x4401)))
(define-fun x1353 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 36)) (x4029 x4401) (x520 x4401)))
(define-fun x4479 ((x4401 Int)) Int (ite (= x4401 4) 17 (x4541 x4401)))
(define-fun x5939 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 36 x4401)) (x4479 x4401) (x520 x4401)))
(define-fun x5003 ((x4401 Int)) Int (ite (= x4401 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2324 x4401)))
(define-fun x442 ((x4401 Int)) Int (ite (= x4401 132) x2156 (x5003 x4401)))
(define-fun x3118 ((x4401 Int)) Int (ite (= 164 x4401) x461 (x442 x4401)))
(define-fun x1585 ((x4401 Int)) Int (ite (= x4401 196) x964 (x3118 x4401)))
(define-fun x5620 ((x4401 Int)) Int (ite (= 228 x4401) x3891 (x1585 x4401)))
(define-fun x1199 ((x4401 Int)) Int (ite (= 128 x4401) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x1279 x4401)))
(define-fun x3757 ((x4401 Int)) Int (ite (and (> 4 x4401) (>= x4401 0)) (x1199 (+ x4401 128)) (x899 x4401)))
(define-fun x8498 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1279 x4401)))
(define-fun x5519 ((x4401 Int)) Int (ite (= x4401 132) 32 (x8498 x4401)))
(define-fun x2654 ((x4401 Int)) Int (ite (= x4401 164) 12 (x5519 x4401)))
(define-fun x4860 ((x4401 Int)) Int (ite (= 196 x4401) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2654 x4401)))
(define-fun x6669 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 100 x4401)) (x4860 (+ 128 x4401)) (x899 x4401)))
(define-fun x4333 ((x4401 Int)) Int (ite (= x4401 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x2324 x4401)))
(define-fun x5693 ((x4401 Int)) Int (ite (= x4401 132) x4343 (x4333 x4401)))
(define-fun x4943 ((x4401 Int)) Int (ite (= x4401 164) 128 (x5693 x4401)))
(define-fun x7384 ((x4401 Int)) Int (ite (= x4401 260) x4698 (x4943 x4401)))
(define-fun x1815 ((x4401 Int)) Int (ite (= x4401 292) x5878 (x7384 x4401)))
(define-fun x1325 ((x4401 Int)) Int (ite (= 292 x4401) x6577 (x7384 x4401)))
(define-fun x5853 ((x4401 Int)) Int (ite (= 128 x4401) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x2324 x4401)))
(define-fun x2146 ((x4401 Int)) Int (ite (= x4401 132) x2167 (x5853 x4401)))
(define-fun x6321 ((x4401 Int)) Int (ite (= 164 x4401) 128 (x2146 x4401)))
(define-fun x2910 ((x4401 Int)) Int (ite (= 260 x4401) x613 (x6321 x4401)))
(define-fun x5796 ((x4401 Int)) Int (ite (= 292 x4401) x3236 (x2910 x4401)))
(define-fun x4861 ((x4401 Int)) Int (ite (= x4401 292) x475 (x2910 x4401)))
(define-fun x2984 ((x4401 Int)) Int (ite (= 128 x4401) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2324 x4401)))
(define-fun x5972 ((x4401 Int)) Int (ite (= 132 x4401) x6966 (x2984 x4401)))
(define-fun x6786 ((x4401 Int)) Int (ite (= x4401 164) x6343 (x5972 x4401)))
(define-fun x1084 ((x4401 Int)) Int (ite (= x4401 4) 33 (x1938 x4401)))
(define-fun x1310 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x1084 x4401) (x6979 x4401)))
(define-fun x2099 ((x4401 Int)) Int (ite (= x146 x4401) 2 (x174 x4401)))
(define-fun x4077 ((x4401 Int)) Int (ite (= x4401 x745) x6343 (x6130 x4401)))
(define-fun x5069 ((x4401 Int)) Int (ite (= x4401 128) x6343 (x1722 x4401)))
(define-fun x6384 ((x4401 Int)) Int (ite (= x4401 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5069 x4401)))
(define-fun x8497 ((x4401 Int)) Int (ite (= x4401 132) x6966 (x6384 x4401)))
(define-fun x4632 ((x4401 Int)) Int (ite (= x4401 164) 0 (x8497 x4401)))
(define-fun x4083 ((x4401 Int)) Int (ite (= 196 x4401) 0 (x4632 x4401)))
(define-fun x5810 ((x4401 Int)) Int (ite (= x4401 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x1938 x4401)))
(define-fun x3152 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x5810 (+ x4401 128)) (x6979 x4401)))
(define-fun x2805 ((x4401 Int)) Int (ite (= 128 x4401) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x1938 x4401)))
(define-fun x5267 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x2805 (+ x4401 128)) (x6979 x4401)))
(define-fun x2657 ((x4401 Int)) Int 0)
(define-fun x7606 ((x4401 Int)) Int (ite (= 128 x4401) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2324 x4401)))
(define-fun x4537 ((x4401 Int)) Int (ite (= 132 x4401) x206 (x7606 x4401)))
(define-fun x5822 ((x4401 Int)) Int (ite (= x4401 164) 128 (x4537 x4401)))
(define-fun x7481 ((x4401 Int)) Int (ite (= 260 x4401) x910 (x5822 x4401)))
(define-fun x2076 ((x4401 Int)) Int (ite (= 292 x4401) x907 (x7481 x4401)))
(define-fun x772 ((x4401 Int)) Int (ite (= x4401 292) x6867 (x7481 x4401)))
(define-fun x4598 ((x4401 Int)) Int (ite (= x4401 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2324 x4401)))
(define-fun x4858 ((x4401 Int)) Int (ite (= x4401 132) x6421 (x4598 x4401)))
(define-fun x8435 ((x4401 Int)) Int (ite (= x4401 164) x5534 (x4858 x4401)))
(define-fun x2025 ((x4401 Int)) Int (ite (= 196 x4401) x1463 (x8435 x4401)))
(define-fun x8196 ((x4401 Int)) Int (ite (= x4401 x333) x2425 (x978 x4401)))
(define-fun x3101 ((x4401 Int)) Int (ite (= x1037 x4401) x8430 (x8196 x4401)))
(define-fun x973 ((x4401 Int)) Int 0)
(define-fun x4625 ((x4401 Int)) Int (ite (= x4401 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2324 x4401)))
(define-fun x7024 ((x4401 Int)) Int (ite (= 132 x4401) x4906 (x4625 x4401)))
(define-fun x5028 ((x4401 Int)) Int (ite (= x5372 x4401) x4893 (x978 x4401)))
(define-fun x8506 ((x4401 Int)) Int (ite (= x4401 x4906) x1613 (x5028 x4401)))
(define-fun x4667 ((x4401 Int)) Int 0)
(define-fun x7047 ((x4401 Int)) Int (ite (= 128 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2119 x4401)))
(define-fun x5546 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x7047 x4401)))
(define-fun x2989 ((x4401 Int)) Int (ite (= 164 x4401) 12 (x5546 x4401)))
(define-fun x2892 ((x4401 Int)) Int (ite (= 196 x4401) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2989 x4401)))
(define-fun x3088 ((x4401 Int)) Int (ite (and (< x4401 100) (<= 0 x4401)) (x2892 (+ 128 x4401)) (x2165 x4401)))
(define-fun x2915 ((x4401 Int)) Int (ite (= x4401 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2324 x4401)))
(define-fun x6715 ((x4401 Int)) Int (ite (= x4401 132) x8402 (x2915 x4401)))
(define-fun x8145 ((x4401 Int)) Int (ite (= 128 x4401) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4450 x4401)))
(define-fun x7456 ((x4401 Int)) Int (ite (and (> 4 x4401) (>= x4401 0)) (x8145 (+ 128 x4401)) (x4921 x4401)))
(define-fun x5078 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4450 x4401)))
(define-fun x2260 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x5078 x4401)))
(define-fun x754 ((x4401 Int)) Int (ite (= 164 x4401) 12 (x2260 x4401)))
(define-fun x6742 ((x4401 Int)) Int (ite (= 196 x4401) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x754 x4401)))
(define-fun x4866 ((x4401 Int)) Int (ite (and (> 100 x4401) (>= x4401 0)) (x6742 (+ x4401 128)) (x4921 x4401)))
(define-fun x6193 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x5285 x4401)))
(define-fun x1140 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x6193 x4401) (x520 x4401)))
(define-fun x2558 ((x4401 Int)) Int (ite (= 128 x4401) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x5285 x4401)))
(define-fun x7336 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x2558 (+ x4401 128)) (x520 x4401)))
(define-fun x4837 ((x4401 Int)) Int (ite x8479 (x520 x4401) (ite x4536 (x1140 x4401) (ite x6266 (x7336 x4401) (x1353 x4401)))))
(define-fun x1549 ((x4401 Int)) Int (ite (= x4401 0) x5426 (x520 x4401)))
(define-fun x7183 ((x4401 Int)) Int (ite x6242 (x4837 x4401) (x1549 x4401)))
(define-fun x5448 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5594 x4401)))
(define-fun x803 ((x4401 Int)) Int (ite (= x4401 132) 32 (x5448 x4401)))
(define-fun x3165 ((x4401 Int)) Int (ite (= 164 x4401) 38 (x803 x4401)))
(define-fun x7261 ((x4401 Int)) Int (ite (= x4401 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x3165 x4401)))
(define-fun x4964 ((x4401 Int)) Int (ite (= 228 x4401) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x7261 x4401)))
(define-fun x3617 ((x4401 Int)) Int (ite (and (> 132 x4401) (<= 0 x4401)) (x4964 (+ x4401 128)) (x8172 x4401)))
(define-fun x3917 ((x4401 Int)) Int (ite x1675 (x8172 x4401) (ite x7742 (x8172 x4401) (ite x4995 (x8172 x4401) (ite x2134 (x8172 x4401) (x3617 x4401))))))
(define-fun x7391 ((x4401 Int)) Int (ite (and (> x4958 x4401) (<= 0 x4401)) (x3917 x4401) (x4541 x4401)))
(define-fun x5669 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x4958)) (x7391 x4401) (x520 x4401)))
(define-fun x4118 ((x4401 Int)) Int (ite (= x4401 4) 17 (x4541 x4401)))
(define-fun x5017 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> 36 x4401)) (x4118 x4401) (x520 x4401)))
(define-fun x886 ((x4401 Int)) Int (ite (= x4401 4) 17 (x4541 x4401)))
(define-fun x508 ((x4401 Int)) Int (ite (and (< x4401 36) (<= 0 x4401)) (x886 x4401) (x520 x4401)))
(define-fun x917 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x4541 x4401)))
(define-fun x8326 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x917 x4401) (x520 x4401)))
(define-fun x8499 ((x4401 Int)) Int (ite (= x4401 4) 34 (x4541 x4401)))
(define-fun x5077 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x8499 x4401) (x520 x4401)))
(define-fun x435 ((x4401 Int)) Int (ite (= x4401 4) 34 (x4541 x4401)))
(define-fun x3386 ((x4401 Int)) Int (ite (and (< x4401 36) (>= x4401 0)) (x435 x4401) (x520 x4401)))
(define-fun x5449 ((x4401 Int)) Int (ite (= 0 x4401) x5901 (x520 x4401)))
(define-fun x689 ((x4401 Int)) Int (ite (= x4401 4) 17 (x4541 x4401)))
(define-fun x3695 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> 36 x4401)) (x689 x4401) (x520 x4401)))
(define-fun x5381 ((x4401 Int)) Int (ite x6952 (x7456 x4401) (x4866 x4401)))
(define-fun x7822 ((x4401 Int)) Int (ite x8274 (x5381 x4401) (x4921 x4401)))
(define-fun x7871 ((x4401 Int)) Int (ite (and (< x4401 x6705) (<= 0 x4401)) (x7822 x4401) (x4541 x4401)))
(define-fun x8225 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x6705)) (x7871 x4401) (x520 x4401)))
(define-fun x503 ((x4401 Int)) Int (ite (= x4401 x4364) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x2119 x4401)))
(define-fun x3216 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> 4 x4401)) (x503 (+ x4364 x4401)) (x2165 x4401)))
(define-fun x7325 ((x4401 Int)) Int (ite x6773 (x3216 x4401) (x3088 x4401)))
(define-fun x3854 ((x4401 Int)) Int (ite x4932 (x7325 x4401) (x2165 x4401)))
(define-fun x64 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> x5165 x4401)) (x3854 x4401) (x4541 x4401)))
(define-fun x2450 ((x4401 Int)) Int (ite (and (> x5165 x4401) (<= 0 x4401)) (x64 x4401) (x520 x4401)))
(define-fun x2396 ((x4401 Int)) Int (ite (= 4 x4401) 34 (x6264 x4401)))
(define-fun x8272 ((x4401 Int)) Int (ite (and (> 36 x4401) (>= x4401 0)) (x2396 x4401) (x8372 x4401)))
(define-fun x3265 ((x4401 Int)) Int (ite (= x4401 x251) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6264 x4401)))
(define-fun x3912 ((x4401 Int)) Int (ite (= x2582 x4401) 32 (x3265 x4401)))
(define-fun x1402 ((x4401 Int)) Int (ite (= x1857 x4401) 32 (x3912 x4401)))
(define-fun x6033 ((x4401 Int)) Int (ite (= x4401 x3325) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x1402 x4401)))
(define-fun x3131 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 100 x4401)) (x6033 (+ x251 x4401)) (x8372 x4401)))
(define-fun x6471 ((x4401 Int)) Int (ite (= x4401 x251) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6264 x4401)))
(define-fun x6223 ((x4401 Int)) Int (ite (= x4401 x3789) 32 (x6471 x4401)))
(define-fun x1745 ((x4401 Int)) Int (ite (= x221 x4401) 48 (x6223 x4401)))
(define-fun x3768 ((x4401 Int)) Int (ite (= x2524 x4401) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1745 x4401)))
(define-fun x4780 ((x4401 Int)) Int (ite (= x1395 x4401) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x3768 x4401)))
(define-fun x3043 ((x4401 Int)) Int (ite (and (< x4401 132) (<= 0 x4401)) (x4780 (+ x251 x4401)) (x8372 x4401)))
(define-fun x3508 ((x4401 Int)) Int (ite (= 0 x4401) x3836 (x4955 x4401)))
(define-fun x5884 ((x4401 Int)) Int (ite (= x4401 32) x1458 (x3508 x4401)))
(define-fun x7072 ((x4401 Int)) Int (ite x3244 (x4955 x4401) (x5884 x4401)))
(define-fun x5474 ((x4401 Int)) Int (ite (and (< x4401 x1942) (<= 0 x4401)) (x7072 x4401) (x6264 x4401)))
(define-fun x6701 ((x4401 Int)) Int (ite (and (< x4401 x1942) (>= x4401 0)) (x5474 x4401) (x8372 x4401)))
(define-fun x2141 ((x4401 Int)) Int (ite (= 128 x4401) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x6264 x4401)))
(define-fun x7825 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x2141 (+ 128 x4401)) (x8372 x4401)))
(define-fun x3654 ((x4401 Int)) Int (ite (= x4401 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6264 x4401)))
(define-fun x4488 ((x4401 Int)) Int (ite (and (< x4401 4) (>= x4401 0)) (x3654 (+ 128 x4401)) (x8372 x4401)))
(define-fun x3097 ((x4401 Int)) Int (ite (= x4401 4) 33 (x6264 x4401)))
(define-fun x1806 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x3097 x4401) (x8372 x4401)))
(define-fun x3794 ((x4401 Int)) Int (ite (= x4401 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x6264 x4401)))
(define-fun x7809 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 4)) (x3794 (+ x4401 128)) (x8372 x4401)))
(define-fun x1271 ((x4401 Int)) Int (ite x3066 (x8272 x4401) (ite x11 (x3131 x4401) (ite x967 (x8372 x4401) (ite x1690 (x8372 x4401) (ite x7163 (x3043 x4401) (ite x8316 (x8372 x4401) (ite x7591 (x6701 x4401) (ite x4764 (x7825 x4401) (ite x4792 (x4488 x4401) (ite x2695 (x1806 x4401) (x7809 x4401))))))))))))
(define-fun x1622 ((x4401 Int)) Int (ite x3048 (x1271 x4401) (x8372 x4401)))
(define-fun x2169 ((x4401 Int)) Int (ite x7118 (x1622 x4401) (ite x1833 (x1622 x4401) (x973 x4401))))
(define-fun x5095 ((x4401 Int)) Int (ite (and (< x4401 x4505) (>= x4401 0)) (x2169 x4401) (x4541 x4401)))
(define-fun x4568 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> x4505 x4401)) (x5095 x4401) (x520 x4401)))
(define-fun x6450 ((x4401 Int)) Int (ite x595 (ite x8519 (x7481 x4401) (x772 x4401)) (x2076 x4401)))
(define-fun x7267 ((x4401 Int)) Int (ite (= x4401 196) x6756 (x6450 x4401)))
(define-fun x5704 ((x4401 Int)) Int (ite (= x4401 228) x7889 (x7267 x4401)))
(define-fun x255 ((x4401 Int)) Int (ite (= x4401 x8491) x5688 (x5704 x4401)))
(define-fun x5530 ((x4401 Int)) Int (ite (= x4401 x4601) x1335 (x255 x4401)))
(define-fun x272 ((x4401 Int)) Int (ite (= x4601 x4401) x707 (x255 x4401)))
(define-fun x2867 ((x4401 Int)) Int (ite x4331 (ite x8020 (x255 x4401) (x5530 x4401)) (x272 x4401)))
(define-fun x5033 ((x4401 Int)) Int (ite (and (< x4401 x5226) (>= x4401 164)) (x2867 (+ 128 x4401)) (x7447 x4401)))
(define-fun x7636 ((x4401 Int)) Int (ite (and (<= 128 x4401) (< x4401 (+ 128 x2405))) (x5033 (+ 36 x4401)) (x5738 x4401)))
(define-fun x4010 ((x4401 Int)) Int (ite (= x627 x4401) 0 (x7636 x4401)))
(define-fun x8193 ((x4401 Int)) Int (ite (= x4401 x212) x2888 (x4010 x4401)))
(define-fun x3041 ((x4401 Int)) Int (ite (and (>= x4401 128) (< x4401 (+ x1503 128))) (x5033 (- (+ x6269 x4401) 128)) (x8193 x4401)))
(define-fun x1046 ((x4401 Int)) Int (ite (= x4401 x5999) 0 (x3041 x4401)))
(define-fun x3218 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1046 x4401)))
(define-fun x6776 ((x4401 Int)) Int (ite (= x4401 132) 32 (x3218 x4401)))
(define-fun x4748 ((x4401 Int)) Int (ite (= x4401 164) 33 (x6776 x4401)))
(define-fun x3896 ((x4401 Int)) Int (ite (= 196 x4401) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x4748 x4401)))
(define-fun x6369 ((x4401 Int)) Int (ite (= 228 x4401) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x3896 x4401)))
(define-fun x2207 ((x4401 Int)) Int (ite (and (> 132 x4401) (>= x4401 0)) (x6369 (+ 128 x4401)) (x5160 x4401)))
(define-fun x1984 ((x4401 Int)) Int (ite (= 128 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x8193 x4401)))
(define-fun x7865 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x1984 x4401)))
(define-fun x259 ((x4401 Int)) Int (ite (= 164 x4401) 35 (x7865 x4401)))
(define-fun x8287 ((x4401 Int)) Int (ite (= x4401 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x259 x4401)))
(define-fun x2064 ((x4401 Int)) Int (ite (= x4401 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x8287 x4401)))
(define-fun x5784 ((x4401 Int)) Int (ite (and (> 132 x4401) (<= 0 x4401)) (x2064 (+ x4401 128)) (x5160 x4401)))
(define-fun x6127 ((x4401 Int)) Int (ite x4111 (x5160 x4401) (ite x2733 (x5160 x4401) (ite x1597 (x5160 x4401) (ite x587 (x5160 x4401) (ite x7200 (x2207 x4401) (x5784 x4401)))))))
(define-fun x5916 ((x4401 Int)) Int 0)
(define-fun x2519 ((x4401 Int)) Int (ite x1579 (x6127 x4401) (x5916 x4401)))
(define-fun x6110 ((x4401 Int)) Int (ite (and (< x4401 x1150) (<= 0 x4401)) (x2519 x4401) (x4541 x4401)))
(define-fun x1639 ((x4401 Int)) Int (ite (and (< x4401 x1150) (<= 0 x4401)) (x6110 x4401) (x520 x4401)))
(define-fun x2609 ((x4401 Int)) Int (ite x1943 (x6979 x4401) (ite x7592 (x3152 x4401) (ite x1383 (x1310 x4401) (x5267 x4401)))))
(define-fun x5394 ((x4401 Int)) Int (ite x913 (x2609 x4401) (x6979 x4401)))
(define-fun x4270 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x2573)) (x5394 x4401) (x4541 x4401)))
(define-fun x860 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x2573)) (x4270 x4401) (x520 x4401)))
(define-fun x3970 ((x4401 Int)) Int (ite (= 4 x4401) 34 (x1273 x4401)))
(define-fun x5304 ((x4401 Int)) Int (ite (and (< x4401 36) (>= x4401 0)) (x3970 x4401) (x7966 x4401)))
(define-fun x2548 ((x4401 Int)) Int (ite (= 128 x4401) x8102 (x1273 x4401)))
(define-fun x7449 ((x4401 Int)) Int (ite (= 160 x4401) x762 (x2548 x4401)))
(define-fun x4110 ((x4401 Int)) Int (ite (= x4401 192) x8079 (x7449 x4401)))
(define-fun x2095 ((x4401 Int)) Int (ite (= 160 x4401) x5259 (x2548 x4401)))
(define-fun x8139 ((x4401 Int)) Int (ite x3942 (x2548 x4401) (ite x3155 (ite x3479 (x7449 x4401) (x4110 x4401)) (x2095 x4401))))
(define-fun x6070 ((x4401 Int)) Int (ite x521 (ite x4783 (x7384 x4401) (x1325 x4401)) (x1815 x4401)))
(define-fun x1694 ((x4401 Int)) Int (ite (= 196 x4401) x5739 (x6070 x4401)))
(define-fun x2447 ((x4401 Int)) Int (ite (= x4401 228) x2993 (x1694 x4401)))
(define-fun x7799 ((x4401 Int)) Int (ite (= x1192 x4401) x7589 (x2447 x4401)))
(define-fun x4971 ((x4401 Int)) Int (ite (= x4401 x1237) x3484 (x7799 x4401)))
(define-fun x3656 ((x4401 Int)) Int (ite (= x4401 x1237) x4643 (x7799 x4401)))
(define-fun x6349 ((x4401 Int)) Int (ite x160 (ite x1190 (x7799 x4401) (x4971 x4401)) (x3656 x4401)))
(define-fun x4088 ((x4401 Int)) Int (ite (and (> x1352 x4401) (<= 164 x4401)) (x6349 (+ x4401 128)) (x2427 x4401)))
(define-fun x6388 ((x4401 Int)) Int (ite (and (< x4401 (+ x7723 x1391)) (<= x7723 x4401)) (x4088 (- (+ x4401 164) x7723)) (x8139 x4401)))
(define-fun x8050 ((x4401 Int)) Int (ite (= x8048 x4401) 0 (x6388 x4401)))
(define-fun x7829 ((x4401 Int)) Int (ite x1793 (x8050 x4401) (x8139 x4401)))
(define-fun x5148 ((x4401 Int)) Int (ite (= x7723 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x7829 x4401)))
(define-fun x7792 ((x4401 Int)) Int (ite (= x4401 x43) 32 (x5148 x4401)))
(define-fun x7075 ((x4401 Int)) Int (ite (= x4401 x3153) 38 (x7792 x4401)))
(define-fun x2985 ((x4401 Int)) Int (ite (= x4401 x3248) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x7075 x4401)))
(define-fun x4962 ((x4401 Int)) Int (ite (= x4401 x4338) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x2985 x4401)))
(define-fun x720 ((x4401 Int)) Int (ite (and (> 132 x4401) (>= x4401 0)) (x4962 (+ x7723 x4401)) (x7966 x4401)))
(define-fun x5952 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1273 x4401)))
(define-fun x4012 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x5952 x4401)))
(define-fun x4949 ((x4401 Int)) Int (ite (= 164 x4401) 30 (x4012 x4401)))
(define-fun x2028 ((x4401 Int)) Int (ite (= 196 x4401) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x4949 x4401)))
(define-fun x1524 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 100)) (x2028 (+ 128 x4401)) (x7966 x4401)))
(define-fun x7675 ((x4401 Int)) Int (ite x7702 (x5304 x4401) (ite x3485 (x7966 x4401) (ite x6622 (x7966 x4401) (ite x3795 (x7966 x4401) (ite x4121 (x720 x4401) (x1524 x4401)))))))
(define-fun x6035 ((x4401 Int)) Int (ite x4720 (x7675 x4401) (x7966 x4401)))
(define-fun x6372 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> x6454 x4401)) (x6035 x4401) (x4541 x4401)))
(define-fun x2272 ((x4401 Int)) Int (ite (and (>= x4401 0) (> x6454 x4401)) (x6372 x4401) (x520 x4401)))
(define-fun x7956 ((x4401 Int)) Int (ite x5229 (x3757 x4401) (x6669 x4401)))
(define-fun x7613 ((x4401 Int)) Int (ite x2483 (x7956 x4401) (x899 x4401)))
(define-fun x686 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x5481)) (x7613 x4401) (x4541 x4401)))
(define-fun x5173 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x5481)) (x686 x4401) (x520 x4401)))
(define-fun x7801 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x4541 x4401)))
(define-fun x719 ((x4401 Int)) Int (ite (and (> 36 x4401) (>= x4401 0)) (x7801 x4401) (x520 x4401)))
(define-fun x4723 ((x4401 Int)) Int (ite x6853 (x5669 x4401) (ite x1120 (x520 x4401) (ite x6920 (x5017 x4401) (ite x6918 (x508 x4401) (ite x3341 (x8326 x4401) (ite x1035 (x5077 x4401) (ite x7768 (x3386 x4401) (ite x2297 (x5449 x4401) (ite x1421 (x3695 x4401) (ite x6569 (x8225 x4401) (ite x2452 (x520 x4401) (ite x471 (x2450 x4401) (ite x800 (x520 x4401) (ite x1854 (x4568 x4401) (ite x797 (x520 x4401) (ite x4904 (x1639 x4401) (ite x5100 (x520 x4401) (ite x6849 (x860 x4401) (ite x4373 (x520 x4401) (ite x5831 (x520 x4401) (ite x4844 (x2272 x4401) (ite x8064 (x520 x4401) (ite x5726 (x5173 x4401) (ite x2514 (x520 x4401) (ite x1876 (x719 x4401) (ite x5551 (x5939 x4401) (x520 x4401))))))))))))))))))))))))))))
(define-fun x3361 ((x4401 Int)) Int (ite x4928 (x7183 x4401) (x4723 x4401)))
(define-fun x2663 ((x4401 Int)) Int (ite (and (> 192 x4401) (<= 160 x4401)) (x3361 (- x4401 160)) (x4243 x4401)))
(define-fun x129 ((x4401 Int)) Int (ite (= x1400 x4401) 3 (x174 x4401)))
(define-fun x5056 ((x4401 Int)) Int (ite x7118 (ite x3048 (x174 x4401) (x129 x4401)) (ite x1833 (ite x3048 (x174 x4401) (x129 x4401)) (x174 x4401))))
(define-fun x3822 ((x4401 Int)) Int (ite (= x4401 x1666) 3 (x2099 x4401)))
(define-fun x2671 ((x4401 Int)) Int (ite x4817 (x2099 x4401) (x3822 x4401)))
(define-fun x5885 ((x4401 Int)) Int (ite x3169 (ite x6075 (x174 x4401) (x5056 x4401)) (ite x913 (x174 x4401) (x2671 x4401))))
(define-fun x704 ((x4401 Int)) Int (ite x8294 (ite x1210 (x5885 x4401) (x174 x4401)) (x174 x4401)))
(define-fun x3146 ((x4401 Int)) Int (ite x4928 (x174 x4401) (ite x6853 (x174 x4401) (ite x1120 (x174 x4401) (ite x6920 (x174 x4401) (ite x6918 (x174 x4401) (ite x3341 (x174 x4401) (ite x1035 (x174 x4401) (ite x7768 (x174 x4401) (ite x2297 (x704 x4401) (x174 x4401)))))))))))
(define-fun x2783 ((x4401 Int)) Int (ite (= x2767 x4401) 0 (x33 x4401)))
(define-fun x2419 ((x4401 Int)) Int (ite (= x2952 x4401) 1 (x3146 x4401)))
(define-fun x8175 ((x4401 Int)) Int (ite (= x4401 x2136) x2253 (x507 x4401)))
(define-fun x2335 ((x4401 Int)) Int (ite x3169 (x6130 x4401) (ite x913 (x6130 x4401) (x4077 x4401))))
(define-fun x8090 ((x4401 Int)) Int (ite x8294 (ite x1210 (x2335 x4401) (x6130 x4401)) (x6130 x4401)))
(define-fun x6207 ((x4401 Int)) Int (ite x4928 (x6130 x4401) (ite x6853 (x6130 x4401) (ite x1120 (x6130 x4401) (ite x6920 (x6130 x4401) (ite x6918 (x6130 x4401) (ite x3341 (x6130 x4401) (ite x1035 (x6130 x4401) (ite x7768 (x6130 x4401) (ite x2297 (x8090 x4401) (x6130 x4401)))))))))))
(define-fun x8212 ((x4401 Int)) Int (ite (= x4401 x8088) 0 (x6207 x4401)))
(define-fun x5376 ((x4401 Int)) Int (ite x6788 (x7179 x4401) (x1593 x4401)))
(define-fun x6330 ((x4401 Int)) Int (x33 x4401))
(define-fun x8209 ((x4401 Int)) Int (ite x6788 (x7070 x4401) (x1739 x4401)))
(define-fun x5362 ((x4401 Int)) Int (ite x6788 (x7194 x4401) (x7324 x4401)))
(define-fun x4847 ((x4401 Int)) Int (ite x6788 (x6749 x4401) (x7053 x4401)))
(define-fun x7081 ((x4401 Int)) Int (ite x6788 (x3301 x4401) (x6913 x4401)))
(define-fun x2488 ((x4401 Int)) Int (x7803 x4401))
(define-fun x5629 ((x4401 Int)) Int (ite x6788 (x7141 x4401) (x3810 x4401)))
(define-fun x735 ((x4401 Int)) Int (ite x6788 (x8008 x4401) (x8328 x4401)))
(define-fun x6981 ((x4401 Int)) Int (x507 x4401))
(define-fun x2706 ((x4401 Int)) Int (ite x6788 (x3196 x4401) (x4347 x4401)))
(define-fun x8066 ((x4401 Int)) Int (ite x6788 (x5793 x4401) (x3606 x4401)))
(define-fun x6097 ((x4401 Int)) Int (x1108 x4401))
(define-fun x4500 ((x4401 Int)) Int (ite x6788 (x5513 x4401) (x6884 x4401)))
(define-fun x6174 ((x4401 Int)) Int (ite x6788 (x315 x4401) (x4427 x4401)))
(define-fun x6889 ((x4401 Int)) Int (ite x6788 (x4850 x4401) (x3422 x4401)))
(define-fun x2103 ((x4401 Int)) Int (ite x6788 (x2501 x4401) (x2395 x4401)))
(define-fun x7988 ((x4401 Int)) Int (ite x6788 (x3541 x4401) (x6945 x4401)))
(define-fun x725 ((x4401 Int)) Int (x2804 x4401))
(define-fun x4014 ((x4401 Int)) Int (ite x6788 (x6164 x4401) (x8494 x4401)))
(define-fun x6698 ((x4401 Int)) Int (x2259 x4401))
(define-fun x453 ((x4401 Int)) Int (ite x6788 (x421 x4401) (x8493 x4401)))
(define-fun x5052 ((x4401 Int)) Int (x708 x4401))
(define-fun x5839 ((x4401 Int)) Int (ite x6788 (x3663 x4401) (x2919 x4401)))
(define-fun x2411 ((x4401 Int)) Int (x2420 x4401))
(define-fun x4483 ((x4401 Int)) Int (x4657 x4401))
(define-fun x4116 ((x4401 Int)) Int (x33 x4401))
(define-fun x1508 ((x4401 Int)) Int (x7803 x4401))
(define-fun x492 ((x4401 Int)) Int (x507 x4401))
(define-fun x4968 ((x4401 Int)) Int (x1108 x4401))
(define-fun x603 ((x4401 Int)) Int (x2804 x4401))
(define-fun x7610 ((x4401 Int)) Int (x708 x4401))
(define-fun x5161 ((x4401 Int)) Int (x2259 x4401))
(define-fun x1825 ((x4401 Int)) Int (ite (= x4401 4) 17 (x2606 x4401)))
(define-fun x3378 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 36)) (x1825 x4401) (x1985 x4401)))
(define-fun x4577 ((x4401 Int)) Int (ite (= x4401 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2320 x4401)))
(define-fun x6103 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x4577 (+ x4401 128)) (x4449 x4401)))
(define-fun x5143 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2320 x4401)))
(define-fun x3820 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x5143 x4401)))
(define-fun x5131 ((x4401 Int)) Int (ite (= 164 x4401) 12 (x3820 x4401)))
(define-fun x5325 ((x4401 Int)) Int (ite (= x4401 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x5131 x4401)))
(define-fun x3457 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 100)) (x5325 (+ x4401 128)) (x4449 x4401)))
(define-fun x5435 ((x4401 Int)) Int (ite x849 (x6103 x4401) (x3457 x4401)))
(define-fun x7863 ((x4401 Int)) Int (ite x5937 (x5435 x4401) (x4449 x4401)))
(define-fun x1181 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x7495)) (x7863 x4401) (x2606 x4401)))
(define-fun x1872 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x7495)) (x1181 x4401) (x1985 x4401)))
(define-fun x7852 ((x4401 Int)) Int (ite x2016 (x3024 x4401) (x6749 x4401)))
(define-fun x6112 ((x4401 Int)) Int (ite x2016 (x6445 x4401) (x421 x4401)))
(define-fun x7489 ((x4401 Int)) Int (ite x2016 (x6241 x4401) (x6164 x4401)))
(define-fun x8333 ((x4401 Int)) Int (x507 x4401))
(define-fun x3607 ((x4401 Int)) Int (ite x2016 (x4878 x4401) (x7141 x4401)))
(define-fun x5380 ((x4401 Int)) Int (x1108 x4401))
(define-fun x7900 ((x4401 Int)) Int (x708 x4401))
(define-fun x5735 ((x4401 Int)) Int (ite x2016 (x263 x4401) (x3541 x4401)))
(define-fun x3830 ((x4401 Int)) Int (ite x2016 (x6798 x4401) (x2501 x4401)))
(define-fun x3699 ((x4401 Int)) Int (ite x2016 (x738 x4401) (x3196 x4401)))
(define-fun x2611 ((x4401 Int)) Int (x2804 x4401))
(define-fun x5968 ((x4401 Int)) Int (x7803 x4401))
(define-fun x3609 ((x4401 Int)) Int (x2259 x4401))
(define-fun x2054 ((x4401 Int)) Int (ite x2016 (x8488 x4401) (x8008 x4401)))
(define-fun x2287 ((x4401 Int)) Int (ite x2016 (x7579 x4401) (x5793 x4401)))
(define-fun x4899 ((x4401 Int)) Int (ite x2016 (x6735 x4401) (x7179 x4401)))
(define-fun x571 ((x4401 Int)) Int (ite x2016 (x8415 x4401) (x3663 x4401)))
(define-fun x6109 ((x4401 Int)) Int (ite x2016 (x3293 x4401) (x3117 x4401)))
(define-fun x5070 ((x4401 Int)) Int (ite x2016 (x4151 x4401) (x5513 x4401)))
(define-fun x5582 ((x4401 Int)) Int (ite x2016 (x2370 x4401) (x315 x4401)))
(define-fun x6305 ((x4401 Int)) Int (ite x2016 (x1518 x4401) (x7070 x4401)))
(define-fun x2474 ((x4401 Int)) Int (x33 x4401))
(define-fun x8395 ((x4401 Int)) Int (ite x2016 (x7184 x4401) (x3301 x4401)))
(define-fun x4228 ((x4401 Int)) Int (ite x2016 (x1946 x4401) (x4850 x4401)))
(define-fun x1085 ((x4401 Int)) Int (ite (= x4401 4) 34 (x2345 x4401)))
(define-fun x617 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 36 x4401)) (x1085 x4401) (x7041 x4401)))
(define-fun x732 ((x4401 Int)) Int (ite (= 128 x4401) x5057 (x2345 x4401)))
(define-fun x107 ((x4401 Int)) Int (ite (= 160 x4401) x1642 (x732 x4401)))
(define-fun x214 ((x4401 Int)) Int (ite (= x4401 192) x1615 (x107 x4401)))
(define-fun x1608 ((x4401 Int)) Int (ite (= 160 x4401) x7037 (x732 x4401)))
(define-fun x7864 ((x4401 Int)) Int (ite x3967 (x732 x4401) (ite x6823 (ite x7984 (x107 x4401) (x214 x4401)) (x1608 x4401))))
(define-fun x7855 ((x4401 Int)) Int (ite (= x4401 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x2291 x4401)))
(define-fun x200 ((x4401 Int)) Int (ite (= 132 x4401) x5691 (x7855 x4401)))
(define-fun x388 ((x4401 Int)) Int (ite (= x4401 164) 128 (x200 x4401)))
(define-fun x5239 ((x4401 Int)) Int (ite (= x4401 260) x3517 (x388 x4401)))
(define-fun x3443 ((x4401 Int)) Int (ite (= 292 x4401) x2802 (x5239 x4401)))
(define-fun x6793 ((x4401 Int)) Int (ite (= 292 x4401) x8200 (x5239 x4401)))
(define-fun x4597 ((x4401 Int)) Int (ite x4534 (ite x2986 (x5239 x4401) (x3443 x4401)) (x6793 x4401)))
(define-fun x3552 ((x4401 Int)) Int (ite (= 196 x4401) x7251 (x4597 x4401)))
(define-fun x8046 ((x4401 Int)) Int (ite (= x4401 228) x6789 (x3552 x4401)))
(define-fun x2824 ((x4401 Int)) Int (ite (= x7303 x4401) x106 (x8046 x4401)))
(define-fun x2247 ((x4401 Int)) Int (ite (= x4401 x8261) x286 (x2824 x4401)))
(define-fun x1826 ((x4401 Int)) Int (ite (= x8261 x4401) x2132 (x2824 x4401)))
(define-fun x6261 ((x4401 Int)) Int (ite x5084 (ite x3201 (x2824 x4401) (x2247 x4401)) (x1826 x4401)))
(define-fun x4531 ((x4401 Int)) Int (ite (and (> x3845 x4401) (<= 164 x4401)) (x6261 (+ x4401 128)) (x3886 x4401)))
(define-fun x1282 ((x4401 Int)) Int (ite (and (>= x4401 x7811) (> (+ x7811 x4727) x4401)) (x4531 (- (+ x4401 164) x7811)) (x7864 x4401)))
(define-fun x965 ((x4401 Int)) Int (ite (= x4401 x6400) 0 (x1282 x4401)))
(define-fun x2109 ((x4401 Int)) Int (ite x1162 (x965 x4401) (x7864 x4401)))
(define-fun x3396 ((x4401 Int)) Int (ite (= x4401 x7811) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2109 x4401)))
(define-fun x227 ((x4401 Int)) Int (ite (= x4401 x6245) 32 (x3396 x4401)))
(define-fun x4938 ((x4401 Int)) Int (ite (= x4401 x1340) 38 (x227 x4401)))
(define-fun x2473 ((x4401 Int)) Int (ite (= x3688 x4401) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x4938 x4401)))
(define-fun x1495 ((x4401 Int)) Int (ite (= x4401 x6652) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x2473 x4401)))
(define-fun x397 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 132)) (x1495 (+ x4401 x7811)) (x7041 x4401)))
(define-fun x4617 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2345 x4401)))
(define-fun x7639 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x4617 x4401)))
(define-fun x1462 ((x4401 Int)) Int (ite (= x4401 164) 30 (x7639 x4401)))
(define-fun x3364 ((x4401 Int)) Int (ite (= x4401 196) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x1462 x4401)))
(define-fun x4190 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> 100 x4401)) (x3364 (+ 128 x4401)) (x7041 x4401)))
(define-fun x8040 ((x4401 Int)) Int (ite x3418 (x617 x4401) (ite x1048 (x7041 x4401) (ite x5198 (x7041 x4401) (ite x7511 (x7041 x4401) (ite x6653 (x397 x4401) (x4190 x4401)))))))
(define-fun x3858 ((x4401 Int)) Int (ite x7066 (x8040 x4401) (x7041 x4401)))
(define-fun x8465 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x6529)) (x3858 x4401) (x2606 x4401)))
(define-fun x6759 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x6529)) (x8465 x4401) (x1985 x4401)))
(define-fun x3434 ((x4401 Int)) Int (x2804 x4401))
(define-fun x6519 ((x4401 Int)) Int (x507 x4401))
(define-fun x6022 ((x4401 Int)) Int (x1108 x4401))
(define-fun x7230 ((x4401 Int)) Int (x708 x4401))
(define-fun x2360 ((x4401 Int)) Int (x7803 x4401))
(define-fun x5172 ((x4401 Int)) Int (x2259 x4401))
(define-fun x841 ((x4401 Int)) Int (x33 x4401))
(define-fun x2806 ((x4401 Int)) Int (ite (= 128 x4401) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x1525 x4401)))
(define-fun x4523 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 4)) (x2806 (+ 128 x4401)) (x4907 x4401)))
(define-fun x6044 ((x4401 Int)) Int (ite (= 4 x4401) 33 (x1525 x4401)))
(define-fun x4437 ((x4401 Int)) Int (ite (and (> 36 x4401) (<= 0 x4401)) (x6044 x4401) (x4907 x4401)))
(define-fun x4363 ((x4401 Int)) Int (ite (= 128 x4401) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x1525 x4401)))
(define-fun x1407 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x4363 (+ x4401 128)) (x4907 x4401)))
(define-fun x6135 ((x4401 Int)) Int (ite x7835 (x4907 x4401) (ite x529 (x4523 x4401) (ite x6181 (x4437 x4401) (x1407 x4401)))))
(define-fun x4362 ((x4401 Int)) Int (ite x6885 (x6135 x4401) (x4907 x4401)))
(define-fun x5 ((x4401 Int)) Int (ite (and (> x3867 x4401) (>= x4401 0)) (x4362 x4401) (x2606 x4401)))
(define-fun x2277 ((x4401 Int)) Int (ite (and (>= x4401 0) (> x3867 x4401)) (x5 x4401) (x1985 x4401)))
(define-fun x2956 ((x4401 Int)) Int (ite x3513 (x8132 x4401) (x3117 x4401)))
(define-fun x65 ((x4401 Int)) Int (x33 x4401))
(define-fun x6177 ((x4401 Int)) Int (ite x3513 (x6371 x4401) (x3196 x4401)))
(define-fun x4177 ((x4401 Int)) Int (ite x3513 (x6395 x4401) (x4850 x4401)))
(define-fun x445 ((x4401 Int)) Int (ite x3513 (x5684 x4401) (x829 x4401)))
(define-fun x4868 ((x4401 Int)) Int (ite x3513 (x4791 x4401) (x315 x4401)))
(define-fun x7923 ((x4401 Int)) Int (ite x3513 (x4925 x4401) (x7070 x4401)))
(define-fun x3045 ((x4401 Int)) Int (x507 x4401))
(define-fun x3895 ((x4401 Int)) Int (ite x3513 (x3671 x4401) (x8008 x4401)))
(define-fun x5279 ((x4401 Int)) Int (x1108 x4401))
(define-fun x6494 ((x4401 Int)) Int (ite x3513 (x1138 x4401) (x6749 x4401)))
(define-fun x6409 ((x4401 Int)) Int (ite x3513 (x1055 x4401) (x7179 x4401)))
(define-fun x3950 ((x4401 Int)) Int (ite x3513 (x7093 x4401) (x2501 x4401)))
(define-fun x2820 ((x4401 Int)) Int (ite x3513 (x5513 x4401) (x6120 x4401)))
(define-fun x2506 ((x4401 Int)) Int (ite x3513 (x2708 x4401) (x421 x4401)))
(define-fun x7199 ((x4401 Int)) Int (x708 x4401))
(define-fun x3807 ((x4401 Int)) Int (x3541 x4401))
(define-fun x7788 ((x4401 Int)) Int (x2804 x4401))
(define-fun x4947 ((x4401 Int)) Int (ite x3513 (x4419 x4401) (x3663 x4401)))
(define-fun x4718 ((x4401 Int)) Int (ite x3513 (x744 x4401) (x6164 x4401)))
(define-fun x3376 ((x4401 Int)) Int (x7803 x4401))
(define-fun x4586 ((x4401 Int)) Int (ite x3513 (x1439 x4401) (x3301 x4401)))
(define-fun x6011 ((x4401 Int)) Int (x2259 x4401))
(define-fun x334 ((x4401 Int)) Int (ite x3513 (x2825 x4401) (x7141 x4401)))
(define-fun x6451 ((x4401 Int)) Int (ite (= x4401 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2291 x4401)))
(define-fun x210 ((x4401 Int)) Int (ite (= x4401 132) x7418 (x6451 x4401)))
(define-fun x4979 ((x4401 Int)) Int (ite (= 164 x4401) 128 (x210 x4401)))
(define-fun x2215 ((x4401 Int)) Int (ite (= 260 x4401) x1700 (x4979 x4401)))
(define-fun x208 ((x4401 Int)) Int (ite (= x4401 292) x55 (x2215 x4401)))
(define-fun x7176 ((x4401 Int)) Int (ite (= x4401 292) x4049 (x2215 x4401)))
(define-fun x2369 ((x4401 Int)) Int (ite x4688 (ite x4988 (x2215 x4401) (x208 x4401)) (x7176 x4401)))
(define-fun x2756 ((x4401 Int)) Int (ite (= 196 x4401) x4252 (x2369 x4401)))
(define-fun x4539 ((x4401 Int)) Int (ite (= 228 x4401) x5808 (x2756 x4401)))
(define-fun x3288 ((x4401 Int)) Int (ite (= x5093 x4401) x3367 (x4539 x4401)))
(define-fun x6665 ((x4401 Int)) Int (ite (= x1569 x4401) x1427 (x3288 x4401)))
(define-fun x3506 ((x4401 Int)) Int (ite (= x4401 x1569) x6474 (x3288 x4401)))
(define-fun x7510 ((x4401 Int)) Int (ite x4825 (ite x717 (x3288 x4401) (x6665 x4401)) (x3506 x4401)))
(define-fun x5278 ((x4401 Int)) Int (ite (and (< x4401 x1105) (<= 164 x4401)) (x7510 (+ 128 x4401)) (x943 x4401)))
(define-fun x1438 ((x4401 Int)) Int (ite (and (> (+ 128 x8546) x4401) (>= x4401 128)) (x5278 (+ 36 x4401)) (x813 x4401)))
(define-fun x7181 ((x4401 Int)) Int (ite (= x4401 x1377) 0 (x1438 x4401)))
(define-fun x825 ((x4401 Int)) Int (ite (= x7837 x4401) x8460 (x7181 x4401)))
(define-fun x102 ((x4401 Int)) Int (ite (and (< x4401 (+ x5429 128)) (>= x4401 128)) (x5278 (- (+ x4401 x2336) 128)) (x825 x4401)))
(define-fun x1157 ((x4401 Int)) Int (ite (= x5570 x4401) 0 (x102 x4401)))
(define-fun x4361 ((x4401 Int)) Int (ite (= 128 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1157 x4401)))
(define-fun x3471 ((x4401 Int)) Int (ite (= x4401 132) 32 (x4361 x4401)))
(define-fun x3210 ((x4401 Int)) Int (ite (= 164 x4401) 33 (x3471 x4401)))
(define-fun x7935 ((x4401 Int)) Int (ite (= x4401 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x3210 x4401)))
(define-fun x5660 ((x4401 Int)) Int (ite (= 228 x4401) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x7935 x4401)))
(define-fun x5975 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 132)) (x5660 (+ x4401 128)) (x2449 x4401)))
(define-fun x3834 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x825 x4401)))
(define-fun x3220 ((x4401 Int)) Int (ite (= x4401 132) 32 (x3834 x4401)))
(define-fun x623 ((x4401 Int)) Int (ite (= 164 x4401) 35 (x3220 x4401)))
(define-fun x5633 ((x4401 Int)) Int (ite (= x4401 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x623 x4401)))
(define-fun x3058 ((x4401 Int)) Int (ite (= x4401 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x5633 x4401)))
(define-fun x5877 ((x4401 Int)) Int (ite (and (> 132 x4401) (<= 0 x4401)) (x3058 (+ 128 x4401)) (x2449 x4401)))
(define-fun x4159 ((x4401 Int)) Int (ite x7941 (x2449 x4401) (ite x1853 (x2449 x4401) (ite x6887 (x2449 x4401) (ite x3633 (x2449 x4401) (ite x5015 (x5975 x4401) (x5877 x4401)))))))
(define-fun x2005 ((x4401 Int)) Int 0)
(define-fun x6031 ((x4401 Int)) Int (ite x62 (x4159 x4401) (x2005 x4401)))
(define-fun x6062 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> x5296 x4401)) (x6031 x4401) (x2606 x4401)))
(define-fun x580 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x5296)) (x6062 x4401) (x1985 x4401)))
(define-fun x433 ((x4401 Int)) Int (x3196 x4401))
(define-fun x2994 ((x4401 Int)) Int (ite (= x4401 4) 34 (x4576 x4401)))
(define-fun x4277 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x2994 x4401) (x1522 x4401)))
(define-fun x6713 ((x4401 Int)) Int (ite (= x1480 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4576 x4401)))
(define-fun x2517 ((x4401 Int)) Int (ite (= x4287 x4401) 32 (x6713 x4401)))
(define-fun x3164 ((x4401 Int)) Int (ite (= x4401 x1992) 32 (x2517 x4401)))
(define-fun x3572 ((x4401 Int)) Int (ite (= x4401 x1207) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3164 x4401)))
(define-fun x1409 ((x4401 Int)) Int (ite (and (> 100 x4401) (<= 0 x4401)) (x3572 (+ x1480 x4401)) (x1522 x4401)))
(define-fun x8126 ((x4401 Int)) Int (ite (= x1480 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4576 x4401)))
(define-fun x4170 ((x4401 Int)) Int (ite (= x7479 x4401) 32 (x8126 x4401)))
(define-fun x7425 ((x4401 Int)) Int (ite (= x4401 x960) 48 (x4170 x4401)))
(define-fun x657 ((x4401 Int)) Int (ite (= x5053 x4401) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x7425 x4401)))
(define-fun x94 ((x4401 Int)) Int (ite (= x4401 x5895) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x657 x4401)))
(define-fun x6914 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> 132 x4401)) (x94 (+ x1480 x4401)) (x1522 x4401)))
(define-fun x4274 ((x4401 Int)) Int (ite (= 0 x4401) x3980 (x1382 x4401)))
(define-fun x4486 ((x4401 Int)) Int (ite (= 32 x4401) x4023 (x4274 x4401)))
(define-fun x8192 ((x4401 Int)) Int (ite x5659 (x1382 x4401) (x4486 x4401)))
(define-fun x5262 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x3618)) (x8192 x4401) (x4576 x4401)))
(define-fun x1649 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x3618)) (x5262 x4401) (x1522 x4401)))
(define-fun x140 ((x4401 Int)) Int (ite (= x4401 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4576 x4401)))
(define-fun x1554 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 4)) (x140 (+ x4401 128)) (x1522 x4401)))
(define-fun x6319 ((x4401 Int)) Int (ite (= 128 x4401) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4576 x4401)))
(define-fun x7615 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x6319 (+ x4401 128)) (x1522 x4401)))
(define-fun x4954 ((x4401 Int)) Int (ite (= 4 x4401) 33 (x4576 x4401)))
(define-fun x5023 ((x4401 Int)) Int (ite (and (< x4401 36) (<= 0 x4401)) (x4954 x4401) (x1522 x4401)))
(define-fun x5402 ((x4401 Int)) Int (ite (= x4401 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x4576 x4401)))
(define-fun x7354 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x5402 (+ 128 x4401)) (x1522 x4401)))
(define-fun x5032 ((x4401 Int)) Int (ite x615 (x4277 x4401) (ite x7571 (x1409 x4401) (ite x997 (x1522 x4401) (ite x5336 (x1522 x4401) (ite x888 (x6914 x4401) (ite x2854 (x1522 x4401) (ite x5443 (x1649 x4401) (ite x4068 (x1554 x4401) (ite x7733 (x7615 x4401) (ite x6449 (x5023 x4401) (x7354 x4401))))))))))))
(define-fun x2610 ((x4401 Int)) Int (ite x7269 (x5032 x4401) (x1522 x4401)))
(define-fun x7660 ((x4401 Int)) Int 0)
(define-fun x7543 ((x4401 Int)) Int (ite x6530 (x2610 x4401) (ite x2039 (x2610 x4401) (x7660 x4401))))
(define-fun x2526 ((x4401 Int)) Int (x5513 x4401))
(define-fun x688 ((x4401 Int)) Int (x315 x4401))
(define-fun x1444 ((x4401 Int)) Int (x8008 x4401))
(define-fun x6726 ((x4401 Int)) Int (x6749 x4401))
(define-fun x4499 ((x4401 Int)) Int (x3117 x4401))
(define-fun x6606 ((x4401 Int)) Int (x2501 x4401))
(define-fun x694 ((x4401 Int)) Int (x3301 x4401))
(define-fun x2903 ((x4401 Int)) Int (x7141 x4401))
(define-fun x5157 ((x4401 Int)) Int (x421 x4401))
(define-fun x2254 ((x4401 Int)) Int (x708 x4401))
(define-fun x3078 ((x4401 Int)) Int (x7179 x4401))
(define-fun x548 ((x4401 Int)) Int (x3663 x4401))
(define-fun x2503 ((x4401 Int)) Int (x2804 x4401))
(define-fun x5616 ((x4401 Int)) Int (ite x6530 (x2960 x4401) (ite x2039 (x2960 x4401) (x5793 x4401))))
(define-fun x7771 ((x4401 Int)) Int (x3541 x4401))
(define-fun x3456 ((x4401 Int)) Int (x507 x4401))
(define-fun x6573 ((x4401 Int)) Int (x7803 x4401))
(define-fun x8508 ((x4401 Int)) Int (x6164 x4401))
(define-fun x976 ((x4401 Int)) Int (x1108 x4401))
(define-fun x905 ((x4401 Int)) Int (x4850 x4401))
(define-fun x3256 ((x4401 Int)) Int (x2259 x4401))
(define-fun x1665 ((x4401 Int)) Int (x7070 x4401))
(define-fun x3704 ((x4401 Int)) Int (x33 x4401))
(define-fun x3585 ((x4401 Int)) Int (ite (and (>= x4401 0) (> x8012 x4401)) (x7543 x4401) (x2606 x4401)))
(define-fun x579 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x8012)) (x3585 x4401) (x1985 x4401)))
(define-fun x760 ((x4401 Int)) Int (x5513 x4401))
(define-fun x4371 ((x4401 Int)) Int (x708 x4401))
(define-fun x7992 ((x4401 Int)) Int (x2804 x4401))
(define-fun x1280 ((x4401 Int)) Int (x3541 x4401))
(define-fun x1457 ((x4401 Int)) Int (x507 x4401))
(define-fun x7462 ((x4401 Int)) Int (x7803 x4401))
(define-fun x6498 ((x4401 Int)) Int (x2259 x4401))
(define-fun x6468 ((x4401 Int)) Int (x33 x4401))
(define-fun x1726 ((x4401 Int)) Int (x1108 x4401))
(define-fun x5302 ((x4401 Int)) Int (ite (= x4401 x4316) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x8223 x4401)))
(define-fun x8515 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 4)) (x5302 (+ x4401 x4316)) (x7827 x4401)))
(define-fun x6142 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x8223 x4401)))
(define-fun x7804 ((x4401 Int)) Int (ite (= x4401 132) 32 (x6142 x4401)))
(define-fun x4924 ((x4401 Int)) Int (ite (= 164 x4401) 12 (x7804 x4401)))
(define-fun x3915 ((x4401 Int)) Int (ite (= 196 x4401) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x4924 x4401)))
(define-fun x4628 ((x4401 Int)) Int (ite (and (< x4401 100) (>= x4401 0)) (x3915 (+ 128 x4401)) (x7827 x4401)))
(define-fun x489 ((x4401 Int)) Int (ite x857 (x8515 x4401) (x4628 x4401)))
(define-fun x3790 ((x4401 Int)) Int (ite x2192 (x489 x4401) (x7827 x4401)))
(define-fun x2818 ((x4401 Int)) Int (ite (and (> x4297 x4401) (>= x4401 0)) (x3790 x4401) (x2606 x4401)))
(define-fun x2540 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x4297)) (x2818 x4401) (x1985 x4401)))
(define-fun x5469 ((x4401 Int)) Int (x5513 x4401))
(define-fun x5929 ((x4401 Int)) Int (ite x1230 (x3117 x4401) (x6473 x4401)))
(define-fun x4887 ((x4401 Int)) Int (ite x1230 (x7070 x4401) (x6523 x4401)))
(define-fun x5970 ((x4401 Int)) Int (x5793 x4401))
(define-fun x4104 ((x4401 Int)) Int (x708 x4401))
(define-fun x1260 ((x4401 Int)) Int (ite x1230 (x315 x4401) (x7523 x4401)))
(define-fun x8393 ((x4401 Int)) Int (ite x1230 (x4850 x4401) (x3213 x4401)))
(define-fun x293 ((x4401 Int)) Int (ite x1230 (x8008 x4401) (x2511 x4401)))
(define-fun x6167 ((x4401 Int)) Int (ite x1230 (x7179 x4401) (x3665 x4401)))
(define-fun x3134 ((x4401 Int)) Int (ite x1230 (x6749 x4401) (x873 x4401)))
(define-fun x7767 ((x4401 Int)) Int (x2804 x4401))
(define-fun x3000 ((x4401 Int)) Int (ite x1230 (x3196 x4401) (x6546 x4401)))
(define-fun x7241 ((x4401 Int)) Int (x507 x4401))
(define-fun x6232 ((x4401 Int)) Int (x1108 x4401))
(define-fun x7631 ((x4401 Int)) Int (ite x1230 (x6164 x4401) (x7034 x4401)))
(define-fun x5419 ((x4401 Int)) Int (ite x1230 (x2501 x4401) (x7753 x4401)))
(define-fun x2537 ((x4401 Int)) Int (ite x1230 (x3663 x4401) (x2104 x4401)))
(define-fun x8075 ((x4401 Int)) Int (ite x1230 (x3301 x4401) (x287 x4401)))
(define-fun x5063 ((x4401 Int)) Int (x7803 x4401))
(define-fun x4035 ((x4401 Int)) Int (x3541 x4401))
(define-fun x7277 ((x4401 Int)) Int (x2259 x4401))
(define-fun x6252 ((x4401 Int)) Int (x33 x4401))
(define-fun x7155 ((x4401 Int)) Int (ite x1230 (x421 x4401) (x3779 x4401)))
(define-fun x4516 ((x4401 Int)) Int (ite x1230 (x7141 x4401) (x1410 x4401)))
(define-fun x6537 ((x4401 Int)) Int (x5793 x4401))
(define-fun x3958 ((x4401 Int)) Int (x3663 x4401))
(define-fun x3241 ((x4401 Int)) Int (x5513 x4401))
(define-fun x2190 ((x4401 Int)) Int (x6749 x4401))
(define-fun x5314 ((x4401 Int)) Int (x4850 x4401))
(define-fun x3814 ((x4401 Int)) Int (x507 x4401))
(define-fun x6930 ((x4401 Int)) Int (x2804 x4401))
(define-fun x1148 ((x4401 Int)) Int (x315 x4401))
(define-fun x6470 ((x4401 Int)) Int (x6164 x4401))
(define-fun x7242 ((x4401 Int)) Int (x33 x4401))
(define-fun x4646 ((x4401 Int)) Int (x7179 x4401))
(define-fun x6198 ((x4401 Int)) Int (x7070 x4401))
(define-fun x2958 ((x4401 Int)) Int (x3541 x4401))
(define-fun x2077 ((x4401 Int)) Int (x1108 x4401))
(define-fun x3023 ((x4401 Int)) Int (x708 x4401))
(define-fun x1379 ((x4401 Int)) Int (x7803 x4401))
(define-fun x2385 ((x4401 Int)) Int (x2259 x4401))
(define-fun x8322 ((x4401 Int)) Int (x8008 x4401))
(define-fun x1145 ((x4401 Int)) Int (x3196 x4401))
(define-fun x6935 ((x4401 Int)) Int (x421 x4401))
(define-fun x796 ((x4401 Int)) Int (x2501 x4401))
(define-fun x8254 ((x4401 Int)) Int (x3117 x4401))
(define-fun x5005 ((x4401 Int)) Int (x3301 x4401))
(define-fun x3060 ((x4401 Int)) Int (x7141 x4401))
(define-fun x5993 ((x4401 Int)) Int (ite (= 128 x4401) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x5253 x4401)))
(define-fun x7627 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x5993 (+ 128 x4401)) (x7560 x4401)))
(define-fun x1376 ((x4401 Int)) Int (ite (= 128 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5253 x4401)))
(define-fun x2560 ((x4401 Int)) Int (ite (= 132 x4401) 32 (x1376 x4401)))
(define-fun x4913 ((x4401 Int)) Int (ite (= 164 x4401) 12 (x2560 x4401)))
(define-fun x1151 ((x4401 Int)) Int (ite (= x4401 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x4913 x4401)))
(define-fun x864 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 100)) (x1151 (+ x4401 128)) (x7560 x4401)))
(define-fun x4857 ((x4401 Int)) Int (ite x7366 (x7627 x4401) (x864 x4401)))
(define-fun x1160 ((x4401 Int)) Int (ite x8123 (x4857 x4401) (x7560 x4401)))
(define-fun x4742 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x2356)) (x1160 x4401) (x2606 x4401)))
(define-fun x3027 ((x4401 Int)) Int (ite (and (> x2356 x4401) (>= x4401 0)) (x4742 x4401) (x1985 x4401)))
(define-fun x2789 ((x4401 Int)) Int (ite (= x4401 4) 34 (x2606 x4401)))
(define-fun x4854 ((x4401 Int)) Int (ite (and (> 36 x4401) (<= 0 x4401)) (x2789 x4401) (x1985 x4401)))
(define-fun x5224 ((x4401 Int)) Int (ite (= 4 x4401) 34 (x2606 x4401)))
(define-fun x3260 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 36 x4401)) (x5224 x4401) (x1985 x4401)))
(define-fun x426 ((x4401 Int)) Int (ite (= x333 x4401) x5894 (x6009 x4401)))
(define-fun x5396 ((x4401 Int)) Int (ite (= x4401 x3173) x4501 (x426 x4401)))
(define-fun x4566 ((x4401 Int)) Int (ite (and (>= x4401 128) (> (+ x8546 128) x4401)) (x5278 (+ x4401 36)) (x1157 x4401)))
(define-fun x3639 ((x4401 Int)) Int (ite (= x4424 x4401) 0 (x4566 x4401)))
(define-fun x3868 ((x4401 Int)) Int (ite (= x3716 x4401) x4894 (x3639 x4401)))
(define-fun x884 ((x4401 Int)) Int (ite (= x362 x4401) 0 (x3541 x4401)))
(define-fun x217 ((x4401 Int)) Int (ite (= x4401 128) x8546 (x3868 x4401)))
(define-fun x4098 ((x4401 Int)) Int (ite (and (< x4401 (+ x8546 160)) (<= 160 x4401)) (x5278 (+ x4401 4)) (x217 x4401)))
(define-fun x1388 ((x4401 Int)) Int (ite (= x4401 x1319) 0 (x4098 x4401)))
(define-fun x1211 ((x4401 Int)) Int (ite (= x8259 x4401) x5429 (x1388 x4401)))
(define-fun x567 ((x4401 Int)) Int (ite (and (> (+ x5429 x5037) x4401) (>= x4401 x5037)) (x5278 (- (+ x2336 x4401) x5037)) (x1211 x4401)))
(define-fun x3310 ((x4401 Int)) Int (ite (= x1107 x4401) 0 (x567 x4401)))
(define-fun x8256 ((x4401 Int)) Int (ite (= 128 x4401) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x2291 x4401)))
(define-fun x2305 ((x4401 Int)) Int (ite (= 132 x4401) x5428 (x8256 x4401)))
(define-fun x4218 ((x4401 Int)) Int (ite (= 164 x4401) 128 (x2305 x4401)))
(define-fun x4222 ((x4401 Int)) Int (ite (= x4401 260) x8114 (x4218 x4401)))
(define-fun x450 ((x4401 Int)) Int (ite (= 292 x4401) x3527 (x4222 x4401)))
(define-fun x1660 ((x4401 Int)) Int (ite (= 292 x4401) x7750 (x4222 x4401)))
(define-fun x2936 ((x4401 Int)) Int (ite x6196 (ite x6832 (x4222 x4401) (x450 x4401)) (x1660 x4401)))
(define-fun x2278 ((x4401 Int)) Int (ite (= x4401 196) x3882 (x2936 x4401)))
(define-fun x7911 ((x4401 Int)) Int (ite (= 228 x4401) x5981 (x2278 x4401)))
(define-fun x1916 ((x4401 Int)) Int (ite (= x5356 x4401) x8185 (x7911 x4401)))
(define-fun x833 ((x4401 Int)) Int (ite (= x4401 x3581) x6946 (x1916 x4401)))
(define-fun x180 ((x4401 Int)) Int (ite (= x4401 x3581) x4554 (x1916 x4401)))
(define-fun x8087 ((x4401 Int)) Int (ite x904 (ite x8134 (x1916 x4401) (x180 x4401)) (x833 x4401)))
(define-fun x303 ((x4401 Int)) Int (ite (and (< x4401 x4179) (<= 164 x4401)) (x8087 (+ 128 x4401)) (x6686 x4401)))
(define-fun x3099 ((x4401 Int)) Int (ite (= x7262 x4401) x7614 (x4387 x4401)))
(define-fun x2965 ((x4401 Int)) Int (ite (and (>= x4401 x1045) (< x4401 (+ x7614 x1045))) (x303 (- (+ x4356 x4401) x1045)) (x3729 x4401)))
(define-fun x8170 ((x4401 Int)) Int (ite (= x1018 x4401) 0 (x2965 x4401)))
(define-fun x4533 ((x4401 Int)) Int (ite (= x4401 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6128 x4401)))
(define-fun x7924 ((x4401 Int)) Int (ite (= x4401 132) 32 (x4533 x4401)))
(define-fun x6707 ((x4401 Int)) Int (ite (= x4401 164) 38 (x7924 x4401)))
(define-fun x3679 ((x4401 Int)) Int (ite (= x4401 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x6707 x4401)))
(define-fun x3815 ((x4401 Int)) Int (ite (= 228 x4401) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x3679 x4401)))
(define-fun x8516 ((x4401 Int)) Int (ite (and (> 132 x4401) (<= 0 x4401)) (x3815 (+ 128 x4401)) (x682 x4401)))
(define-fun x4156 ((x4401 Int)) Int (ite (= x4401 4) 17 (x2606 x4401)))
(define-fun x2578 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x4156 x4401) (x1985 x4401)))
(define-fun x3215 ((x4401 Int)) Int (ite (= x4401 4) 17 (x2606 x4401)))
(define-fun x7432 ((x4401 Int)) Int (ite (and (> 36 x4401) (>= x4401 0)) (x3215 x4401) (x1985 x4401)))
(define-fun x7187 ((x4401 Int)) Int (ite (= x4401 4) 17 (x2606 x4401)))
(define-fun x7069 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 36)) (x7187 x4401) (x1985 x4401)))
(define-fun x8421 ((x4401 Int)) Int (x315 x4401))
(define-fun x4711 ((x4401 Int)) Int (x8421 x4401))
(define-fun x5698 ((x4401 Int)) Int (x7141 x4401))
(define-fun x6719 ((x4401 Int)) Int (x5698 x4401))
(define-fun x7853 ((x4401 Int)) Int (x507 x4401))
(define-fun x3996 ((x4401 Int)) Int (x7853 x4401))
(define-fun x7326 ((x4401 Int)) Int (x6749 x4401))
(define-fun x1802 ((x4401 Int)) Int (x7326 x4401))
(define-fun x2814 ((x4401 Int)) Int (x708 x4401))
(define-fun x5191 ((x4401 Int)) Int (x2814 x4401))
(define-fun x970 ((x4401 Int)) Int (x3196 x4401))
(define-fun x6417 ((x4401 Int)) Int (x970 x4401))
(define-fun x3162 ((x4401 Int)) Int (x1108 x4401))
(define-fun x3842 ((x4401 Int)) Int (x3162 x4401))
(define-fun x7860 ((x4401 Int)) Int (x7179 x4401))
(define-fun x5383 ((x4401 Int)) Int (x7860 x4401))
(define-fun x3447 ((x4401 Int)) Int (x7803 x4401))
(define-fun x7828 ((x4401 Int)) Int (x3447 x4401))
(define-fun x250 ((x4401 Int)) Int (x3541 x4401))
(define-fun x4263 ((x4401 Int)) Int (x250 x4401))
(define-fun x6619 ((x4401 Int)) Int (x2259 x4401))
(define-fun x5342 ((x4401 Int)) Int (x6619 x4401))
(define-fun x2257 ((x4401 Int)) Int (x3663 x4401))
(define-fun x7145 ((x4401 Int)) Int (x2257 x4401))
(define-fun x4197 ((x4401 Int)) Int (x8008 x4401))
(define-fun x3763 ((x4401 Int)) Int (x4197 x4401))
(define-fun x7720 ((x4401 Int)) Int (x3301 x4401))
(define-fun x5004 ((x4401 Int)) Int (x7720 x4401))
(define-fun x2300 ((x4401 Int)) Int (x3117 x4401))
(define-fun x1289 ((x4401 Int)) Int (x2300 x4401))
(define-fun x1193 ((x4401 Int)) Int (x421 x4401))
(define-fun x6526 ((x4401 Int)) Int (x1193 x4401))
(define-fun x8527 ((x4401 Int)) Int (x2501 x4401))
(define-fun x464 ((x4401 Int)) Int (x8527 x4401))
(define-fun x2568 ((x4401 Int)) Int (x5513 x4401))
(define-fun x605 ((x4401 Int)) Int (x2568 x4401))
(define-fun x6868 ((x4401 Int)) Int (x33 x4401))
(define-fun x7564 ((x4401 Int)) Int (x6868 x4401))
(define-fun x6810 ((x4401 Int)) Int (x2804 x4401))
(define-fun x5605 ((x4401 Int)) Int (x6810 x4401))
(define-fun x2712 ((x4401 Int)) Int (x5793 x4401))
(define-fun x4368 ((x4401 Int)) Int (x2712 x4401))
(define-fun x1736 ((x4401 Int)) Int (x4850 x4401))
(define-fun x8505 ((x4401 Int)) Int (x1736 x4401))
(define-fun x2391 ((x4401 Int)) Int (x7070 x4401))
(define-fun x7386 ((x4401 Int)) Int (x2391 x4401))
(define-fun x3268 ((x4401 Int)) Int (x6164 x4401))
(define-fun x2042 ((x4401 Int)) Int (x3268 x4401))
(define-fun x2230 ((x4401 Int)) Int (ite x7066 (x7179 x4401) (x4324 x4401)))
(define-fun x6975 ((x4401 Int)) Int (ite x7066 (x6164 x4401) (x8542 x4401)))
(define-fun x1453 ((x4401 Int)) Int (ite x7066 (x4850 x4401) (x865 x4401)))
(define-fun x1976 ((x4401 Int)) Int (x3162 x4401))
(define-fun x4137 ((x4401 Int)) Int (ite x7066 (x7141 x4401) (x4414 x4401)))
(define-fun x5065 ((x4401 Int)) Int (x6810 x4401))
(define-fun x6508 ((x4401 Int)) Int (ite x7066 (x3301 x4401) (x1414 x4401)))
(define-fun x1693 ((x4401 Int)) Int (ite x7066 (x3196 x4401) (x901 x4401)))
(define-fun x1387 ((x4401 Int)) Int (ite x7066 (x2501 x4401) (x1032 x4401)))
(define-fun x659 ((x4401 Int)) Int (ite x7066 (x3541 x4401) (x2374 x4401)))
(define-fun x3061 ((x4401 Int)) Int (x2814 x4401))
(define-fun x5189 ((x4401 Int)) Int (ite x7066 (x421 x4401) (x2142 x4401)))
(define-fun x3544 ((x4401 Int)) Int (x3447 x4401))
(define-fun x5791 ((x4401 Int)) Int (ite x7066 (x8008 x4401) (x17 x4401)))
(define-fun x5557 ((x4401 Int)) Int (x6619 x4401))
(define-fun x4208 ((x4401 Int)) Int (ite x7066 (x6749 x4401) (x5818 x4401)))
(define-fun x5935 ((x4401 Int)) Int (ite x7066 (x3117 x4401) (x7718 x4401)))
(define-fun x5025 ((x4401 Int)) Int (ite x7066 (x3663 x4401) (x3084 x4401)))
(define-fun x6959 ((x4401 Int)) Int (x2568 x4401))
(define-fun x7766 ((x4401 Int)) Int (x6868 x4401))
(define-fun x2223 ((x4401 Int)) Int (ite x7066 (x315 x4401) (x1471 x4401)))
(define-fun x4571 ((x4401 Int)) Int (ite x7066 (x7070 x4401) (x2130 x4401)))
(define-fun x2111 ((x4401 Int)) Int (x2712 x4401))
(define-fun x4 ((x4401 Int)) Int (x7853 x4401))
(define-fun x7471 ((x4401 Int)) Int (ite (= x4401 x7811) x4727 (x2109 x4401)))
(define-fun x1121 ((x4401 Int)) Int (ite (and (< x4401 (+ x4727 x5503)) (<= x5503 x4401)) (x4531 (- (+ x4401 164) x5503)) (x7471 x4401)))
(define-fun x4302 ((x4401 Int)) Int (ite (= x169 x4401) 0 (x1121 x4401)))
(define-fun x1516 ((x4401 Int)) Int (ite (= x4401 x131) x6835 (x4302 x4401)))
(define-fun x6539 ((x4401 Int)) Int (ite (and (< x4401 (+ x3660 x6835)) (<= x3660 x4401)) (x4531 (- (+ x7461 x4401) x3660)) (x1516 x4401)))
(define-fun x2859 ((x4401 Int)) Int (ite (= x4401 x2472) 0 (x6539 x4401)))
(define-fun x3327 ((x4401 Int)) Int (ite (= x837 x4401) x5691 (x2859 x4401)))
(define-fun x6463 ((x4401 Int)) Int (ite (= x4401 x6917) 128 (x3327 x4401)))
(define-fun x6224 ((x4401 Int)) Int (ite (= x4401 x5352) x1359 (x6463 x4401)))
(define-fun x8282 ((x4401 Int)) Int (ite (= x7098 x4401) x3687 (x6224 x4401)))
(define-fun x6485 ((x4401 Int)) Int (ite (= x7271 x4401) x6064 (x8282 x4401)))
(define-fun x4314 ((x4401 Int)) Int (ite (= x4401 x3440) x5655 (x6485 x4401)))
(define-fun x8484 ((x4401 Int)) Int (ite (= x7959 x4401) x8324 (x4314 x4401)))
(define-fun x4130 ((x4401 Int)) Int (ite x4784 (x4314 x4401) (ite x7812 (x6485 x4401) (ite x2909 (x8282 x4401) (ite x79 (x6224 x4401) (x8484 x4401))))))
(define-fun x590 ((x4401 Int)) Int (ite (= x4965 x4401) 0 (x4130 x4401)))
(define-fun x2633 ((x4401 Int)) Int (ite (= x4401 x7516) x7251 (x590 x4401)))
(define-fun x3556 ((x4401 Int)) Int (ite (= x4401 x6621) x4484 (x2633 x4401)))
(define-fun x5289 ((x4401 Int)) Int (ite (= x4401 x4082) x8355 (x3556 x4401)))
(define-fun x3255 ((x4401 Int)) Int (ite (= x4800 x4401) x5482 (x5289 x4401)))
(define-fun x8031 ((x4401 Int)) Int (ite (= x4401 x3009) x6348 (x3255 x4401)))
(define-fun x7903 ((x4401 Int)) Int (ite (= x4401 x6356) x2328 (x8031 x4401)))
(define-fun x7270 ((x4401 Int)) Int (ite (= x4401 x4154) x5518 (x7903 x4401)))
(define-fun x6768 ((x4401 Int)) Int (ite x5593 (x7903 x4401) (ite x1493 (x8031 x4401) (ite x2301 (x3255 x4401) (ite x5736 (x5289 x4401) (x7270 x4401))))))
(define-fun x5287 ((x4401 Int)) Int (ite (= x4401 x5315) 0 (x6768 x4401)))
(define-fun x32 ((x4401 Int)) Int (ite (= x3529 x4401) x8027 (x5287 x4401)))
(define-fun x7115 ((x4401 Int)) Int (ite (= x7552 x4401) x420 (x32 x4401)))
(define-fun x6899 ((x4401 Int)) Int (ite (= x8351 x4401) 150 (x7115 x4401)))
(define-fun x4106 ((x4401 Int)) Int (ite (and (<= x1526 x4401) (> (+ 150 x1526) x4401)) (x4531 (- (+ x4401 x2898) x1526)) (x6899 x4401)))
(define-fun x7291 ((x4401 Int)) Int (ite (and (< x4401 0) (>= x4401 0)) (x5309 x4401) (x4106 x4401)))
(define-fun x4097 ((x4401 Int)) Int (ite x8141 (x7291 x4401) (x4106 x4401)))
(define-fun x6972 ((x4401 Int)) Int (ite (= x4401 x8351) x619 (x4097 x4401)))
(define-fun x8089 ((x4401 Int)) Int (ite (and (< x4401 (+ x619 x7021)) (>= x4401 x7021)) (x5309 (- x4401 x7021)) (x6972 x4401)))
(define-fun x3760 ((x4401 Int)) Int (ite (= x4401 x2220) x7358 (x8089 x4401)))
(define-fun x4555 ((x4401 Int)) Int (ite (= x4401 x7304) x3540 (x3760 x4401)))
(define-fun x2250 ((x4401 Int)) Int (ite (= x6361 x4401) x2010 (x4555 x4401)))
(define-fun x4456 ((x4401 Int)) Int (ite (= x1071 x4401) x8293 (x2250 x4401)))
(define-fun x4365 ((x4401 Int)) Int (ite x647 (x2250 x4401) (ite x3446 (x4555 x4401) (ite x6954 (x3760 x4401) (ite x883 (x8089 x4401) (x4456 x4401))))))
(define-fun x7819 ((x4401 Int)) Int (ite (= x4401 x2564) 0 (x4365 x4401)))
(define-fun x750 ((x4401 Int)) Int (ite (= x2 x4401) x6792 (x7819 x4401)))
(define-fun x7958 ((x4401 Int)) Int (ite (= x2220 x4401) x5691 (x750 x4401)))
(define-fun x371 ((x4401 Int)) Int (ite (= x4401 x402) 160 (x7958 x4401)))
(define-fun x5967 ((x4401 Int)) Int (ite (= x7942 x4401) x136 (x371 x4401)))
(define-fun x2387 ((x4401 Int)) Int (ite (= x139 x4401) x4233 (x5967 x4401)))
(define-fun x5255 ((x4401 Int)) Int (ite (= x7908 x4401) x335 (x2387 x4401)))
(define-fun x6336 ((x4401 Int)) Int (ite (= x4401 x5790) x6263 (x5255 x4401)))
(define-fun x5747 ((x4401 Int)) Int (ite (= x6353 x4401) x3328 (x6336 x4401)))
(define-fun x6697 ((x4401 Int)) Int (ite x5625 (x6336 x4401) (ite x3705 (x5255 x4401) (ite x6006 (x2387 x4401) (ite x1811 (x5967 x4401) (x5747 x4401))))))
(define-fun x3945 ((x4401 Int)) Int (ite (= x2246 x4401) 0 (x6697 x4401)))
(define-fun x2204 ((x4401 Int)) Int (ite (= x4401 x4730) x7251 (x3945 x4401)))
(define-fun x4569 ((x4401 Int)) Int (ite (= x4401 x4189) x2963 (x2204 x4401)))
(define-fun x6693 ((x4401 Int)) Int (ite (= x1087 x4401) x3738 (x4569 x4401)))
(define-fun x4062 ((x4401 Int)) Int (ite (= x7448 x4401) x7549 (x6693 x4401)))
(define-fun x2747 ((x4401 Int)) Int (ite (= x6623 x4401) x3460 (x4062 x4401)))
(define-fun x7431 ((x4401 Int)) Int (ite (= x6379 x4401) x3158 (x2747 x4401)))
(define-fun x8370 ((x4401 Int)) Int (ite (= x4401 x7297) x6876 (x7431 x4401)))
(define-fun x215 ((x4401 Int)) Int (ite x8069 (x7431 x4401) (ite x752 (x2747 x4401) (ite x7970 (x4062 x4401) (ite x7010 (x6693 x4401) (x8370 x4401))))))
(define-fun x2270 ((x4401 Int)) Int (ite (= x4401 x2831) 0 (x215 x4401)))
(define-fun x1517 ((x4401 Int)) Int (ite (= x4401 x1902) x7755 (x2270 x4401)))
(define-fun x3347 ((x4401 Int)) Int (x3117 x4401))
(define-fun x8190 ((x4401 Int)) Int (x33 x4401))
(define-fun x3752 ((x4401 Int)) Int (x4850 x4401))
(define-fun x3959 ((x4401 Int)) Int (x3196 x4401))
(define-fun x4257 ((x4401 Int)) Int (x421 x4401))
(define-fun x1862 ((x4401 Int)) Int (x507 x4401))
(define-fun x5527 ((x4401 Int)) Int (x6164 x4401))
(define-fun x532 ((x4401 Int)) Int (x1108 x4401))
(define-fun x990 ((x4401 Int)) Int (x7141 x4401))
(define-fun x5280 ((x4401 Int)) Int (x708 x4401))
(define-fun x4219 ((x4401 Int)) Int (x6749 x4401))
(define-fun x7408 ((x4401 Int)) Int (x3541 x4401))
(define-fun x119 ((x4401 Int)) Int (x7070 x4401))
(define-fun x4184 ((x4401 Int)) Int (x2804 x4401))
(define-fun x4595 ((x4401 Int)) Int (x315 x4401))
(define-fun x2658 ((x4401 Int)) Int (x7179 x4401))
(define-fun x4089 ((x4401 Int)) Int (x7803 x4401))
(define-fun x361 ((x4401 Int)) Int (x3301 x4401))
(define-fun x1528 ((x4401 Int)) Int (x2501 x4401))
(define-fun x5048 ((x4401 Int)) Int (x2259 x4401))
(define-fun x2996 ((x4401 Int)) Int (x3663 x4401))
(define-fun x1894 ((x4401 Int)) Int (x8008 x4401))
(define-fun x4174 ((x4401 Int)) Int (ite x7726 (x3212 x4401) (x1350 x4401)))
(define-fun x5202 ((x4401 Int)) Int (x7141 x4401))
(define-fun x1245 ((x4401 Int)) Int (x6164 x4401))
(define-fun x6990 ((x4401 Int)) Int (x3301 x4401))
(define-fun x7349 ((x4401 Int)) Int (x4261 x4401))
(define-fun x6805 ((x4401 Int)) Int (x3663 x4401))
(define-fun x1774 ((x4401 Int)) Int (x7179 x4401))
(define-fun x1837 ((x4401 Int)) Int (x507 x4401))
(define-fun x5230 ((x4401 Int)) Int (x1108 x4401))
(define-fun x1530 ((x4401 Int)) Int (x2804 x4401))
(define-fun x2641 ((x4401 Int)) Int (x33 x4401))
(define-fun x8522 ((x4401 Int)) Int (x2501 x4401))
(define-fun x7547 ((x4401 Int)) Int (x8008 x4401))
(define-fun x5328 ((x4401 Int)) Int (x421 x4401))
(define-fun x6367 ((x4401 Int)) Int (x7070 x4401))
(define-fun x4734 ((x4401 Int)) Int (x708 x4401))
(define-fun x2930 ((x4401 Int)) Int (x3117 x4401))
(define-fun x38 ((x4401 Int)) Int (x3541 x4401))
(define-fun x7570 ((x4401 Int)) Int (x4850 x4401))
(define-fun x6148 ((x4401 Int)) Int (x2259 x4401))
(define-fun x577 ((x4401 Int)) Int (x315 x4401))
(define-fun x4046 ((x4401 Int)) Int (x6749 x4401))
(define-fun x6736 ((x4401 Int)) Int (x3196 x4401))
(define-fun x6255 ((x4401 Int)) Int (x7803 x4401))
(define-fun x6249 ((x4401 Int)) Int (ite (= 4 x4401) 33 (x3707 x4401)))
(define-fun x2777 ((x4401 Int)) Int (ite (and (< x4401 36) (>= x4401 0)) (x6249 x4401) (x1296 x4401)))
(define-fun x2782 ((x4401 Int)) Int (ite (= x4401 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3731 x4401)))
(define-fun x4908 ((x4401 Int)) Int (ite (= x4401 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2782 x4401)))
(define-fun x6358 ((x4401 Int)) Int (ite (= 128 x4401) 64 (x7292 x4401)))
(define-fun x1697 ((x4401 Int)) Int (ite (= x4401 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x6345 x4401)))
(define-fun x3350 ((x4401 Int)) Int (ite (= x4401 258) x5664 (x1697 x4401)))
(define-fun x6848 ((x4401 Int)) Int (ite (= x4401 224) 34 (x1785 x4401)))
(define-fun x5021 ((x4401 Int)) Int (ite (= 290 x4401) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x1396 x4401)))
(define-fun x6571 ((x4401 Int)) Int (ite (= x4401 294) x2448 (x5021 x4401)))
(define-fun x6687 ((x4401 Int)) Int (ite (= 326 x4401) x5372 (x6571 x4401)))
(define-fun x7180 ((x4401 Int)) Int (ite (= x4401 358) 160 (x6687 x4401)))
(define-fun x691 ((x4401 Int)) Int (ite (= 454 x4401) x4119 (x7180 x4401)))
(define-fun x4676 ((x4401 Int)) Int (ite (and (>= x4401 486) (< x4401 (+ 486 x4119))) (x4908 (- x4401 326)) (x691 x4401)))
(define-fun x1698 ((x4401 Int)) Int (ite (= x4401 390) 0 (x4676 x4401)))
(define-fun x1927 ((x4401 Int)) Int (ite (= 422 x4401) x5834 (x1698 x4401)))
(define-fun x3393 ((x4401 Int)) Int (ite (= x3709 x4401) x8300 (x1927 x4401)))
(define-fun x7810 ((x4401 Int)) Int (ite (and (>= x4401 x2964) (< x4401 (+ x8300 x2964))) (x3350 (- (+ 256 x4401) x2964)) (x3393 x4401)))
(define-fun x3340 ((x4401 Int)) Int (ite (and (> x1168 x4401) (>= x4401 292)) (x7810 (+ 290 x4401)) (x3107 x4401)))
(define-fun x6818 ((x4401 Int)) Int (ite (= 128 x4401) 0 (x1724 x4401)))
(define-fun x7156 ((x4401 Int)) Int (ite (= 160 x4401) 0 (x6818 x4401)))
(define-fun x6159 ((x4401 Int)) Int (ite (= 290 x4401) x175 (x7810 x4401)))
(define-fun x4413 ((x4401 Int)) Int (ite (= 322 x4401) x4080 (x6159 x4401)))
(define-fun x6552 ((x4401 Int)) Int (ite (= x4401 0) x2091 (x7937 x4401)))
(define-fun x1715 ((x4401 Int)) Int (ite (= 32 x4401) x3313 (x6552 x4401)))
(define-fun x7884 ((x4401 Int)) Int (ite (= x4401 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x3707 x4401)))
(define-fun x3122 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 4)) (x7884 (+ x4401 128)) (x1296 x4401)))
(define-fun x6706 ((x4401 Int)) Int (ite (= 128 x4401) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x3707 x4401)))
(define-fun x3918 ((x4401 Int)) Int (ite (and (>= x4401 0) (> 4 x4401)) (x6706 (+ 128 x4401)) (x1296 x4401)))
(define-fun x310 ((x4401 Int)) Int (ite (= x4401 548) x4556 (x1855 x4401)))
(define-fun x7531 ((x4401 Int)) Int (ite (= x4401 580) x6579 (x310 x4401)))
(define-fun x3596 ((x4401 Int)) Int (ite (= x4401 548) x4744 (x1855 x4401)))
(define-fun x2265 ((x4401 Int)) Int (ite x7208 (x680 x4401) (ite x3491 (ite x6506 (x310 x4401) (x7531 x4401)) (x3596 x4401))))
(define-fun x1510 ((x4401 Int)) Int (ite (= 516 x4401) x2645 (x794 x4401)))
(define-fun x7612 ((x4401 Int)) Int (ite (= x1263 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3707 x4401)))
(define-fun x4395 ((x4401 Int)) Int (ite (= x4052 x4401) 32 (x7612 x4401)))
(define-fun x1926 ((x4401 Int)) Int (ite (= x1743 x4401) 48 (x4395 x4401)))
(define-fun x4405 ((x4401 Int)) Int (ite (= x1101 x4401) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1926 x4401)))
(define-fun x903 ((x4401 Int)) Int (ite (= x5250 x4401) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x4405 x4401)))
(define-fun x5573 ((x4401 Int)) Int (ite (and (< x4401 132) (>= x4401 0)) (x903 (+ x1263 x4401)) (x1296 x4401)))
(define-fun x440 ((x4401 Int)) Int (ite (= 354 x4401) 64 (x6197 x4401)))
(define-fun x7227 ((x4401 Int)) Int (ite (= x1263 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3707 x4401)))
(define-fun x5425 ((x4401 Int)) Int (ite (= x592 x4401) 32 (x7227 x4401)))
(define-fun x3614 ((x4401 Int)) Int (ite (= x3657 x4401) 32 (x5425 x4401)))
(define-fun x5159 ((x4401 Int)) Int (ite (= x4401 x7112) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3614 x4401)))
(define-fun x810 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 100)) (x5159 (+ x4401 x1263)) (x1296 x4401)))
(define-fun x3264 ((x4401 Int)) Int (ite x5977 (x7810 x4401) (x4413 x4401)))
(define-fun x6179 ((x4401 Int)) Int (ite (= x1263 x4401) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x3264 x4401)))
(define-fun x2344 ((x4401 Int)) Int (ite (= x4401 x6974) x2448 (x6179 x4401)))
(define-fun x1276 ((x4401 Int)) Int (ite (= x4401 x2811) 192 (x2344 x4401)))
(define-fun x7765 ((x4401 Int)) Int (ite (= x6170 x4401) x3563 (x1276 x4401)))
(define-fun x5500 ((x4401 Int)) Int (ite (and (< x4401 (+ x6875 x3563)) (<= x6875 x4401)) (x2265 (- (+ 548 x4401) x6875)) (x7765 x4401)))
(define-fun x5948 ((x4401 Int)) Int (ite (= x4401 x8404) x2940 (x5500 x4401)))
(define-fun x1716 ((x4401 Int)) Int (ite (= x4401 x1607) x4054 (x5948 x4401)))
(define-fun x3121 ((x4401 Int)) Int (ite (= 386 x4401) x7352 (x2927 x4401)))
(define-fun x6655 ((x4401 Int)) Int (ite (= x4401 418) x8151 (x3121 x4401)))
(define-fun x5422 ((x4401 Int)) Int (ite (and (>= x4401 x6881) (< x4401 (+ x6881 x4054))) (x6655 (- (+ 386 x4401) x6881)) (x1716 x4401)))
(define-fun x3276 ((x4401 Int)) Int (ite (= x4401 x5266) x5372 (x5422 x4401)))
(define-fun x2509 ((x4401 Int)) Int (ite (= x4239 x4401) 0 (x3276 x4401)))
(define-fun x8263 ((x4401 Int)) Int (ite (= x5275 x4401) x1804 (x2509 x4401)))
(define-fun x7805 ((x4401 Int)) Int (ite (= 450 x4401) 34 (x3931 x4401)))
(define-fun x462 ((x4401 Int)) Int (ite (= x4401 x3714) x4587 (x8263 x4401)))
(define-fun x2677 ((x4401 Int)) Int (ite (= 482 x4401) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3127 x4401)))
(define-fun x6318 ((x4401 Int)) Int (ite (= x4401 484) x5664 (x2677 x4401)))
(define-fun x2037 ((x4401 Int)) Int (ite (and (<= x3860 x4401) (< x4401 (+ x4587 x3860))) (x6318 (- (+ x4401 482) x3860)) (x462 x4401)))
(define-fun x5712 ((x4401 Int)) Int (ite (and (< x4401 x1259) (<= 228 x4401)) (x2037 (- (+ x4401 (x8120 (+ 228 x1263))) 228)) (x108 x4401)))
(define-fun x7731 ((x4401 Int)) Int 0)
(define-fun x6293 ((x4401 Int)) Int (x2501 x4401))
(define-fun x3177 ((x4401 Int)) Int (x2804 x4401))
(define-fun x7276 ((x4401 Int)) Int (x3117 x4401))
(define-fun x8251 ((x4401 Int)) Int (x507 x4401))
(define-fun x4927 ((x4401 Int)) Int (x7179 x4401))
(define-fun x2649 ((x4401 Int)) Int (x3663 x4401))
(define-fun x3465 ((x4401 Int)) Int (x3541 x4401))
(define-fun x1381 ((x4401 Int)) Int (x6164 x4401))
(define-fun x1197 ((x4401 Int)) Int (x1108 x4401))
(define-fun x1797 ((x4401 Int)) Int (x2259 x4401))
(define-fun x1077 ((x4401 Int)) Int (x4850 x4401))
(define-fun x2834 ((x4401 Int)) Int (x33 x4401))
(define-fun x1070 ((x4401 Int)) Int (x7803 x4401))
(define-fun x604 ((x4401 Int)) Int (x6749 x4401))
(define-fun x4478 ((x4401 Int)) Int (x7141 x4401))
(define-fun x6195 ((x4401 Int)) Int (x7070 x4401))
(define-fun x1543 ((x4401 Int)) Int (x421 x4401))
(define-fun x6942 ((x4401 Int)) Int (x3301 x4401))
(define-fun x2574 ((x4401 Int)) Int (x708 x4401))
(define-fun x4673 ((x4401 Int)) Int (x315 x4401))
(define-fun x4402 ((x4401 Int)) Int (x3196 x4401))
(define-fun x7857 ((x4401 Int)) Int (x8008 x4401))
(define-fun x8043 ((x4401 Int)) Int (x1350 x4401))
(define-fun x7150 ((x4401 Int)) Int (x4261 x4401))
(define-fun x4856 ((x4401 Int)) Int (x8527 x4401))
(define-fun x4558 ((x4401 Int)) Int (x4856 x4401))
(define-fun x4728 ((x4401 Int)) Int (x6810 x4401))
(define-fun x5256 ((x4401 Int)) Int (x4728 x4401))
(define-fun x1290 ((x4401 Int)) Int (x7853 x4401))
(define-fun x2891 ((x4401 Int)) Int (x1290 x4401))
(define-fun x3163 ((x4401 Int)) Int (x2300 x4401))
(define-fun x5540 ((x4401 Int)) Int (x3163 x4401))
(define-fun x3775 ((x4401 Int)) Int (x3268 x4401))
(define-fun x828 ((x4401 Int)) Int (x3775 x4401))
(define-fun x4459 ((x4401 Int)) Int (x7860 x4401))
(define-fun x4544 ((x4401 Int)) Int (x4459 x4401))
(define-fun x4807 ((x4401 Int)) Int (x2257 x4401))
(define-fun x957 ((x4401 Int)) Int (x4807 x4401))
(define-fun x313 ((x4401 Int)) Int (x7720 x4401))
(define-fun x5295 ((x4401 Int)) Int (x313 x4401))
(define-fun x8303 ((x4401 Int)) Int (x250 x4401))
(define-fun x6790 ((x4401 Int)) Int (x8303 x4401))
(define-fun x8165 ((x4401 Int)) Int (x3162 x4401))
(define-fun x7928 ((x4401 Int)) Int (x8165 x4401))
(define-fun x7412 ((x4401 Int)) Int (x3447 x4401))
(define-fun x3156 ((x4401 Int)) Int (x7412 x4401))
(define-fun x1809 ((x4401 Int)) Int (x6619 x4401))
(define-fun x67 ((x4401 Int)) Int (x1809 x4401))
(define-fun x4620 ((x4401 Int)) Int (x7326 x4401))
(define-fun x3283 ((x4401 Int)) Int (x4620 x4401))
(define-fun x132 ((x4401 Int)) Int (x1736 x4401))
(define-fun x2666 ((x4401 Int)) Int (x132 x4401))
(define-fun x6178 ((x4401 Int)) Int (x6868 x4401))
(define-fun x8071 ((x4401 Int)) Int (x6178 x4401))
(define-fun x7682 ((x4401 Int)) Int (x5698 x4401))
(define-fun x158 ((x4401 Int)) Int (x7682 x4401))
(define-fun x8474 ((x4401 Int)) Int (x4261 x4401))
(define-fun x58 ((x4401 Int)) Int (x8474 x4401))
(define-fun x4128 ((x4401 Int)) Int (x2391 x4401))
(define-fun x1226 ((x4401 Int)) Int (x4128 x4401))
(define-fun x6599 ((x4401 Int)) Int (x1193 x4401))
(define-fun x912 ((x4401 Int)) Int (x6599 x4401))
(define-fun x4900 ((x4401 Int)) Int (x1350 x4401))
(define-fun x6673 ((x4401 Int)) Int (x2814 x4401))
(define-fun x8091 ((x4401 Int)) Int (x6673 x4401))
(define-fun x7665 ((x4401 Int)) Int (x8421 x4401))
(define-fun x7272 ((x4401 Int)) Int (x7665 x4401))
(define-fun x2861 ((x4401 Int)) Int (x970 x4401))
(define-fun x4289 ((x4401 Int)) Int (x2861 x4401))
(define-fun x614 ((x4401 Int)) Int (x4197 x4401))
(define-fun x5752 ((x4401 Int)) Int (x614 x4401))
(define-fun x5560 ((x4401 Int)) Int (x3212 x4401))
(define-fun x7525 ((x4401 Int)) Int (ite x5977 (x7937 x4401) (x1715 x4401)))
(define-fun x8344 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 x7969)) (x7525 x4401) (x3707 x4401)))
(define-fun x5617 ((x4401 Int)) Int (ite (and (> x7969 x4401) (>= x4401 0)) (x8344 x4401) (x1296 x4401)))
(define-fun x4407 ((x4401 Int)) Int (ite (and (< x4401 354) (<= 290 x4401)) (x7525 (- x4401 290)) (x2329 x4401)))
(define-fun x273 ((x4401 Int)) Int (ite (= x4401 4) 34 (x3707 x4401)))
(define-fun x7395 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x273 x4401) (x1296 x4401)))
(define-fun x1741 ((x4401 Int)) Int (x3196 x4401))
(define-fun x5142 ((x4401 Int)) Int (x315 x4401))
(define-fun x2086 ((x4401 Int)) Int (x5513 x4401))
(define-fun x8456 ((x4401 Int)) Int (x7070 x4401))
(define-fun x523 ((x4401 Int)) Int (x8008 x4401))
(define-fun x2125 ((x4401 Int)) Int (x6749 x4401))
(define-fun x8385 ((x4401 Int)) Int (x2501 x4401))
(define-fun x8533 ((x4401 Int)) Int (x3301 x4401))
(define-fun x7676 ((x4401 Int)) Int (x7141 x4401))
(define-fun x3148 ((x4401 Int)) Int (x708 x4401))
(define-fun x6772 ((x4401 Int)) Int (x421 x4401))
(define-fun x2498 ((x4401 Int)) Int (x7179 x4401))
(define-fun x6326 ((x4401 Int)) Int (x2259 x4401))
(define-fun x703 ((x4401 Int)) Int (x3663 x4401))
(define-fun x3219 ((x4401 Int)) Int (x3117 x4401))
(define-fun x6744 ((x4401 Int)) Int (x2804 x4401))
(define-fun x2535 ((x4401 Int)) Int (x3541 x4401))
(define-fun x4933 ((x4401 Int)) Int (x507 x4401))
(define-fun x3362 ((x4401 Int)) Int (x7803 x4401))
(define-fun x5797 ((x4401 Int)) Int (x6164 x4401))
(define-fun x391 ((x4401 Int)) Int (x1108 x4401))
(define-fun x2923 ((x4401 Int)) Int (x4850 x4401))
(define-fun x4191 ((x4401 Int)) Int (x33 x4401))
(define-fun x8014 ((x4401 Int)) Int (ite (= 160 x4401) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x5251 x4401)))
(define-fun x1222 ((x4401 Int)) Int (ite (= x4401 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x8014 x4401)))
(define-fun x4849 ((x4401 Int)) Int (ite (= x4401 128) 64 (x6671 x4401)))
(define-fun x2279 ((x4401 Int)) Int (ite (= 256 x4401) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5281 x4401)))
(define-fun x5865 ((x4401 Int)) Int (ite (= 258 x4401) x4005 (x2279 x4401)))
(define-fun x4670 ((x4401 Int)) Int (ite (= x4401 224) 34 (x5532 x4401)))
(define-fun x1292 ((x4401 Int)) Int (ite (= x4401 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x8026 x4401)))
(define-fun x3971 ((x4401 Int)) Int (ite (= x4401 294) x2448 (x1292 x4401)))
(define-fun x6500 ((x4401 Int)) Int (ite (= 326 x4401) x5372 (x3971 x4401)))
(define-fun x3175 ((x4401 Int)) Int (ite (= 358 x4401) 160 (x6500 x4401)))
(define-fun x7016 ((x4401 Int)) Int (ite (= x4401 454) x5974 (x3175 x4401)))
(define-fun x4557 ((x4401 Int)) Int (ite (and (> (+ x5974 486) x4401) (>= x4401 486)) (x1222 (- x4401 326)) (x7016 x4401)))
(define-fun x8249 ((x4401 Int)) Int (ite (= x4401 390) 0 (x4557 x4401)))
(define-fun x7 ((x4401 Int)) Int (ite (= 422 x4401) x3647 (x8249 x4401)))
(define-fun x4040 ((x4401 Int)) Int (ite (= x4401 x850) x1040 (x7 x4401)))
(define-fun x7616 ((x4401 Int)) Int (ite (and (< x4401 (+ x7949 x1040)) (<= x7949 x4401)) (x5865 (- (+ 256 x4401) x7949)) (x4040 x4401)))
(define-fun x924 ((x4401 Int)) Int (ite (and (>= x4401 292) (< x4401 x4366)) (x7616 (+ x4401 290)) (x2381 x4401)))
(define-fun x5568 ((x4401 Int)) Int (ite (= x4401 128) 0 (x5366 x4401)))
(define-fun x7437 ((x4401 Int)) Int (ite (= x4401 160) 0 (x5568 x4401)))
(define-fun x3411 ((x4401 Int)) Int (ite (= x4401 290) x1977 (x7616 x4401)))
(define-fun x6801 ((x4401 Int)) Int (ite (= x4401 322) x1599 (x3411 x4401)))
(define-fun x7546 ((x4401 Int)) Int (x2300 x4401))
(define-fun x2980 ((x4401 Int)) Int (x8527 x4401))
(define-fun x4377 ((x4401 Int)) Int (x7853 x4401))
(define-fun x7087 ((x4401 Int)) Int (x2257 x4401))
(define-fun x3274 ((x4401 Int)) Int (x6810 x4401))
(define-fun x4983 ((x4401 Int)) Int (x250 x4401))
(define-fun x8226 ((x4401 Int)) Int (x3268 x4401))
(define-fun x477 ((x4401 Int)) Int (x2814 x4401))
(define-fun x7211 ((x4401 Int)) Int (x3447 x4401))
(define-fun x6883 ((x4401 Int)) Int (x3162 x4401))
(define-fun x4636 ((x4401 Int)) Int (x6619 x4401))
(define-fun x1646 ((x4401 Int)) Int (ite x7692 (ite x5659 (x7616 x4401) (x6801 x4401)) (x6258 x4401)))
(define-fun x5338 ((x4401 Int)) Int (x6868 x4401))
(define-fun x4594 ((x4401 Int)) Int (x5698 x4401))
(define-fun x3463 ((x4401 Int)) Int (x2568 x4401))
(define-fun x5950 ((x4401 Int)) Int (x7326 x4401))
(define-fun x740 ((x4401 Int)) Int (x1736 x4401))
(define-fun x7212 ((x4401 Int)) Int (x2391 x4401))
(define-fun x2593 ((x4401 Int)) Int (x970 x4401))
(define-fun x1842 ((x4401 Int)) Int (x7720 x4401))
(define-fun x6295 ((x4401 Int)) Int (x7860 x4401))
(define-fun x2400 ((x4401 Int)) Int (x1193 x4401))
(define-fun x550 ((x4401 Int)) Int (x8421 x4401))
(define-fun x278 ((x4401 Int)) Int (x2712 x4401))
(define-fun x5641 ((x4401 Int)) Int (x4197 x4401))
(define-fun x5741 ((x4401 Int)) Int (ite (= x4401 x5421) x6554 (x5099 x4401)))
(define-fun x7954 ((x4401 Int)) Int (ite (= x536 x4401) x4814 (x5741 x4401)))
(define-fun x8265 ((x4401 Int)) Int (ite (= x6036 x4401) x4057 (x8431 x4401)))
(define-fun x4145 ((x4401 Int)) Int (ite (= x4401 x2507) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x4474 x4401)))
(define-fun x8045 ((x4401 Int)) Int (ite (= x4567 x4401) x4005 (x4145 x4401)))
(define-fun x6138 ((x4401 Int)) Int (ite (= x4401 x3667) x5827 (x2285 x4401)))
(define-fun x3737 ((x4401 Int)) Int (ite (= x4401 x347) x3509 (x7119 x4401)))
(define-fun x2489 ((x4401 Int)) Int (ite (= x4992 x4401) x2644 (x7584 x4401)))
(define-fun x3569 ((x4401 Int)) Int (ite (= x5453 x4401) x874 (x2489 x4401)))
(define-fun x3267 ((x4401 Int)) Int (ite (= x4401 x4992) x986 (x7584 x4401)))
(define-fun x2908 ((x4401 Int)) Int (ite x1606 (x8524 x4401) (ite x549 (ite x6973 (x2489 x4401) (x3569 x4401)) (x3267 x4401))))
(define-fun x4600 ((x4401 Int)) Int (ite (= x1480 x4401) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x1646 x4401)))
(define-fun x2826 ((x4401 Int)) Int (ite (= x5829 x4401) x2448 (x4600 x4401)))
(define-fun x7035 ((x4401 Int)) Int (ite (= x3334 x4401) 192 (x2826 x4401)))
(define-fun x7529 ((x4401 Int)) Int (ite (= x3100 x4401) x4071 (x7035 x4401)))
(define-fun x7005 ((x4401 Int)) Int (ite (and (< x4401 (+ x4071 x1301)) (>= x4401 x1301)) (x2908 (- (+ x4401 x4992) x1301)) (x7529 x4401)))
(define-fun x8092 ((x4401 Int)) Int (ite (= x2163 x4401) x5860 (x7005 x4401)))
(define-fun x7221 ((x4401 Int)) Int (ite (= x4401 x4204) x5832 (x8092 x4401)))
(define-fun x3805 ((x4401 Int)) Int (ite (and (>= x4401 x5856) (< x4401 (+ x5832 x5856))) (x7954 (- (+ x4401 x6147) x5856)) (x7221 x4401)))
(define-fun x8119 ((x4401 Int)) Int (ite (= x5120 x4401) x5372 (x3805 x4401)))
(define-fun x3501 ((x4401 Int)) Int (ite (= x6555 x4401) 0 (x8119 x4401)))
(define-fun x7126 ((x4401 Int)) Int (ite (= x4401 x2855) x2435 (x3501 x4401)))
(define-fun x4160 ((x4401 Int)) Int (ite (= x4401 x6921) x2529 (x7126 x4401)))
(define-fun x8332 ((x4401 Int)) Int (ite (and (<= x3316 x4401) (> (+ x3316 x2529) x4401)) (x8045 (- (+ x4401 x1859) x3316)) (x4160 x4401)))
(define-fun x1803 ((x4401 Int)) Int (ite (and (> x2457 x4401) (<= 228 x4401)) (x8332 (- (+ (x8120 (+ 228 x1480)) x4401) 228)) (x3469 x4401)))
(define-fun x7586 ((x4401 Int)) Int 0)
(define-fun x2932 ((x4401 Int)) Int (x1758 x4401))
(define-fun x5705 ((x4401 Int)) Int (x33 x4401))
(define-fun x6729 ((x4401 Int)) Int (x315 x4401))
(define-fun x2751 ((x4401 Int)) Int (x3196 x4401))
(define-fun x4690 ((x4401 Int)) Int (x7179 x4401))
(define-fun x2527 ((x4401 Int)) Int (x2804 x4401))
(define-fun x5728 ((x4401 Int)) Int (x3541 x4401))
(define-fun x2605 ((x4401 Int)) Int (x4850 x4401))
(define-fun x7619 ((x4401 Int)) Int (x507 x4401))
(define-fun x6869 ((x4401 Int)) Int (x6749 x4401))
(define-fun x2397 ((x4401 Int)) Int (x7070 x4401))
(define-fun x4430 ((x4401 Int)) Int (x1108 x4401))
(define-fun x946 ((x4401 Int)) Int (x708 x4401))
(define-fun x6861 ((x4401 Int)) Int (x6164 x4401))
(define-fun x6061 ((x4401 Int)) Int (x3301 x4401))
(define-fun x1119 ((x4401 Int)) Int (x421 x4401))
(define-fun x7339 ((x4401 Int)) Int (x7803 x4401))
(define-fun x4956 ((x4401 Int)) Int (x8008 x4401))
(define-fun x1651 ((x4401 Int)) Int (x2259 x4401))
(define-fun x4668 ((x4401 Int)) Int (x2501 x4401))
(define-fun x8176 ((x4401 Int)) Int (x5513 x4401))
(define-fun x2069 ((x4401 Int)) Int (x3663 x4401))
(define-fun x3500 ((x4401 Int)) Int (x3117 x4401))
(define-fun x5307 ((x4401 Int)) Int (x7141 x4401))
(define-fun x4434 ((x4401 Int)) Int (x1758 x4401))
(define-fun x533 ((x4401 Int)) Int (x5338 x4401))
(define-fun x3652 ((x4401 Int)) Int (x3274 x4401))
(define-fun x3602 ((x4401 Int)) Int (x5950 x4401))
(define-fun x5106 ((x4401 Int)) Int (x4377 x4401))
(define-fun x836 ((x4401 Int)) Int (x4983 x4401))
(define-fun x4000 ((x4401 Int)) Int (x6295 x4401))
(define-fun x128 ((x4401 Int)) Int (x740 x4401))
(define-fun x1737 ((x4401 Int)) Int (x7212 x4401))
(define-fun x4330 ((x4401 Int)) Int (x8226 x4401))
(define-fun x4161 ((x4401 Int)) Int (x6883 x4401))
(define-fun x6464 ((x4401 Int)) Int (x7211 x4401))
(define-fun x7499 ((x4401 Int)) Int (x1842 x4401))
(define-fun x3450 ((x4401 Int)) Int (x550 x4401))
(define-fun x2557 ((x4401 Int)) Int (x2400 x4401))
(define-fun x8245 ((x4401 Int)) Int (x4636 x4401))
(define-fun x1239 ((x4401 Int)) Int (x5641 x4401))
(define-fun x4024 ((x4401 Int)) Int (x2593 x4401))
(define-fun x2233 ((x4401 Int)) Int (x3463 x4401))
(define-fun x662 ((x4401 Int)) Int (x2980 x4401))
(define-fun x3092 ((x4401 Int)) Int (x7546 x4401))
(define-fun x748 ((x4401 Int)) Int (x4594 x4401))
(define-fun x1031 ((x4401 Int)) Int (x7087 x4401))
(define-fun x6433 ((x4401 Int)) Int (x477 x4401))
(define-fun x3438 ((x4401 Int)) Int (x2300 x4401))
(define-fun x1920 ((x4401 Int)) Int (x8527 x4401))
(define-fun x2422 ((x4401 Int)) Int (x6810 x4401))
(define-fun x3051 ((x4401 Int)) Int (x250 x4401))
(define-fun x5761 ((x4401 Int)) Int (x2814 x4401))
(define-fun x5170 ((x4401 Int)) Int (x3268 x4401))
(define-fun x1753 ((x4401 Int)) Int (x3447 x4401))
(define-fun x2969 ((x4401 Int)) Int (x2257 x4401))
(define-fun x6041 ((x4401 Int)) Int (x3162 x4401))
(define-fun x6284 ((x4401 Int)) Int (x6619 x4401))
(define-fun x6843 ((x4401 Int)) Int (x2568 x4401))
(define-fun x5416 ((x4401 Int)) Int (x2391 x4401))
(define-fun x711 ((x4401 Int)) Int (x6868 x4401))
(define-fun x7670 ((x4401 Int)) Int (x5698 x4401))
(define-fun x7002 ((x4401 Int)) Int (x7326 x4401))
(define-fun x6300 ((x4401 Int)) Int (x1736 x4401))
(define-fun x2967 ((x4401 Int)) Int (x970 x4401))
(define-fun x6467 ((x4401 Int)) Int (x7720 x4401))
(define-fun x1007 ((x4401 Int)) Int (x7860 x4401))
(define-fun x7310 ((x4401 Int)) Int (x8421 x4401))
(define-fun x318 ((x4401 Int)) Int (x2712 x4401))
(define-fun x2417 ((x4401 Int)) Int (x7853 x4401))
(define-fun x2044 ((x4401 Int)) Int (x1193 x4401))
(define-fun x2704 ((x4401 Int)) Int (x4197 x4401))
(define-fun x5009 ((x4401 Int)) Int (ite (and (< x4401 354) (<= 290 x4401)) (x8192 (- x4401 290)) (x8448 x4401)))
(define-fun x5134 ((x4401 Int)) Int (x2568 x4401))
(define-fun x2788 ((x4401 Int)) Int (x2814 x4401))
(define-fun x5848 ((x4401 Int)) Int (x2712 x4401))
(define-fun x723 ((x4401 Int)) Int (x6810 x4401))
(define-fun x4991 ((x4401 Int)) Int (x250 x4401))
(define-fun x5101 ((x4401 Int)) Int (x7853 x4401))
(define-fun x4043 ((x4401 Int)) Int (x3162 x4401))
(define-fun x5471 ((x4401 Int)) Int (x3447 x4401))
(define-fun x5863 ((x4401 Int)) Int (x6619 x4401))
(define-fun x5171 ((x4401 Int)) Int (x6868 x4401))
(define-fun x2822 ((x4401 Int)) Int (ite x3191 (x7070 x4401) (x2716 x4401)))
(define-fun x16 ((x4401 Int)) Int (ite x3191 (x315 x4401) (x2340 x4401)))
(define-fun x1754 ((x4401 Int)) Int (ite x3191 (x3117 x4401) (x329 x4401)))
(define-fun x5067 ((x4401 Int)) Int (ite x3191 (x8008 x4401) (x2953 x4401)))
(define-fun x6188 ((x4401 Int)) Int (ite x3191 (x6749 x4401) (x8358 x4401)))
(define-fun x4895 ((x4401 Int)) Int (ite x3191 (x4850 x4401) (x4909 x4401)))
(define-fun x2090 ((x4401 Int)) Int (ite x3191 (x7179 x4401) (x3748 x4401)))
(define-fun x3455 ((x4401 Int)) Int (ite x3191 (x3196 x4401) (x3464 x4401)))
(define-fun x1787 ((x4401 Int)) Int (ite x3191 (x2501 x4401) (x6720 x4401)))
(define-fun x6202 ((x4401 Int)) Int (ite x3191 (x6164 x4401) (x4063 x4401)))
(define-fun x7289 ((x4401 Int)) Int (ite x3191 (x3663 x4401) (x6903 x4401)))
(define-fun x2148 ((x4401 Int)) Int (ite x3191 (x3301 x4401) (x7999 x4401)))
(define-fun x1605 ((x4401 Int)) Int (ite x3191 (x7141 x4401) (x3992 x4401)))
(define-fun x2849 ((x4401 Int)) Int (ite x3191 (x421 x4401) (x4797 x4401)))
(define-fun x7189 ((x4401 Int)) Int (x2712 x4401))
(define-fun x6895 ((x4401 Int)) Int (x2257 x4401))
(define-fun x8543 ((x4401 Int)) Int (x2300 x4401))
(define-fun x5548 ((x4401 Int)) Int (x2391 x4401))
(define-fun x956 ((x4401 Int)) Int (x7326 x4401))
(define-fun x2322 ((x4401 Int)) Int (x7853 x4401))
(define-fun x7975 ((x4401 Int)) Int (x3268 x4401))
(define-fun x6218 ((x4401 Int)) Int (x6810 x4401))
(define-fun x7085 ((x4401 Int)) Int (x6868 x4401))
(define-fun x3435 ((x4401 Int)) Int (x1736 x4401))
(define-fun x8437 ((x4401 Int)) Int (x7860 x4401))
(define-fun x7124 ((x4401 Int)) Int (x250 x4401))
(define-fun x8148 ((x4401 Int)) Int (x2814 x4401))
(define-fun x5234 ((x4401 Int)) Int (x3162 x4401))
(define-fun x4163 ((x4401 Int)) Int (x6619 x4401))
(define-fun x8318 ((x4401 Int)) Int (x3447 x4401))
(define-fun x7498 ((x4401 Int)) Int (x8421 x4401))
(define-fun x3808 ((x4401 Int)) Int (x4197 x4401))
(define-fun x8131 ((x4401 Int)) Int (x970 x4401))
(define-fun x430 ((x4401 Int)) Int (x1193 x4401))
(define-fun x4436 ((x4401 Int)) Int (x2568 x4401))
(define-fun x2047 ((x4401 Int)) Int (x8527 x4401))
(define-fun x635 ((x4401 Int)) Int (x7720 x4401))
(define-fun x646 ((x4401 Int)) Int (x5698 x4401))
(define-fun x5265 ((x4401 Int)) Int (x6868 x4401))
(define-fun x3357 ((x4401 Int)) Int (x3447 x4401))
(define-fun x683 ((x4401 Int)) Int (x7860 x4401))
(define-fun x5965 ((x4401 Int)) Int (x8527 x4401))
(define-fun x1501 ((x4401 Int)) Int (x2712 x4401))
(define-fun x2293 ((x4401 Int)) Int (x2814 x4401))
(define-fun x1191 ((x4401 Int)) Int (x7326 x4401))
(define-fun x7622 ((x4401 Int)) Int (x2391 x4401))
(define-fun x8556 ((x4401 Int)) Int (x1736 x4401))
(define-fun x7153 ((x4401 Int)) Int (x8421 x4401))
(define-fun x5997 ((x4401 Int)) Int (x970 x4401))
(define-fun x3989 ((x4401 Int)) Int (x2568 x4401))
(define-fun x5737 ((x4401 Int)) Int (x4197 x4401))
(define-fun x4977 ((x4401 Int)) Int (x6810 x4401))
(define-fun x4706 ((x4401 Int)) Int (x3268 x4401))
(define-fun x2189 ((x4401 Int)) Int (x7853 x4401))
(define-fun x4221 ((x4401 Int)) Int (x3162 x4401))
(define-fun x2229 ((x4401 Int)) Int (x5698 x4401))
(define-fun x121 ((x4401 Int)) Int (x6619 x4401))
(define-fun x3702 ((x4401 Int)) Int (x250 x4401))
(define-fun x4217 ((x4401 Int)) Int (x2257 x4401))
(define-fun x2486 ((x4401 Int)) Int (x1193 x4401))
(define-fun x2720 ((x4401 Int)) Int (x7720 x4401))
(define-fun x6784 ((x4401 Int)) Int (ite x6853 (x174 x4401) (ite x1120 (x174 x4401) (ite x6920 (x174 x4401) (ite x6918 (x174 x4401) (ite x3341 (x174 x4401) (ite x1035 (x174 x4401) (ite x7768 (x174 x4401) (ite x2297 (x704 x4401) (x174 x4401))))))))))
(define-fun x1122 ((x4401 Int)) Int (x2420 x4401))
(define-fun x209 ((x4401 Int)) Int (ite x6853 (x6130 x4401) (ite x1120 (x6130 x4401) (ite x6920 (x6130 x4401) (ite x6918 (x6130 x4401) (ite x3341 (x6130 x4401) (ite x1035 (x6130 x4401) (ite x7768 (x6130 x4401) (ite x2297 (x8090 x4401) (x6130 x4401))))))))))
(define-fun x4583 ((x4401 Int)) Int (x4657 x4401))
(define-fun x799 ((x4401 Int)) Int (x4657 x4401))
(define-fun x4920 ((x4401 Int)) Int (ite x5373 (x7083 x4401) (x2436 x4401)))
(define-fun x6610 ((x4401 Int)) Int (ite x6296 (x2436 x4401) (ite x2622 (x4920 x4401) (ite x6570 (x4920 x4401) (x2436 x4401)))))
(define-fun x2040 ((x4401 Int)) Int (ite x6413 (x2436 x4401) (ite x4932 (x2436 x4401) (x6610 x4401))))
(define-fun x1515 ((x4401 Int)) Int (ite x3169 (ite x6075 (x2040 x4401) (x2436 x4401)) (x2436 x4401)))
(define-fun x7713 ((x4401 Int)) Int (ite x4720 (x2436 x4401) (ite x1015 (x3837 x4401) (x2436 x4401))))
(define-fun x486 ((x4401 Int)) Int (ite x8294 (ite x1210 (x1515 x4401) (x7713 x4401)) (x2436 x4401)))
(define-fun x6791 ((x4401 Int)) Int (x2420 x4401))
(define-fun x2341 ((x4401 Int)) Int (ite x1210 (x1515 x4401) (x7713 x4401)))
(define-fun x298 ((x4401 Int)) Int (ite x1210 (x2335 x4401) (x6130 x4401)))
(define-fun x3332 ((x4401 Int)) Int (x4657 x4401))
(define-fun x1695 ((x4401 Int)) Int (x2420 x4401))
(define-fun x1161 ((x4401 Int)) Int (ite x1210 (x5885 x4401) (x174 x4401)))
(define-fun x7696 ((x4401 Int)) Int (x4657 x4401))
(define-fun x6880 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6168 ((x4401 Int)) Int (x2436 x4401))
(define-fun x1252 ((x4401 Int)) Int (x2420 x4401))
(define-fun x7103 ((x4401 Int)) Int (x4657 x4401))
(define-fun x142 ((x4401 Int)) Int (x6130 x4401))
(define-fun x2049 ((x4401 Int)) Int (ite x6075 (x174 x4401) (x5056 x4401)))
(define-fun x4574 ((x4401 Int)) Int (ite x6075 (x2040 x4401) (x2436 x4401)))
(define-fun x6517 ((x4401 Int)) Int (x2420 x4401))
(define-fun x5333 ((x4401 Int)) Int (x4657 x4401))
(define-fun x8097 ((x4401 Int)) Int (x6130 x4401))
(define-fun x3711 ((x4401 Int)) Int (x6130 x4401))
(define-fun x2226 ((x4401 Int)) Int (x174 x4401))
(define-fun x576 ((x4401 Int)) Int (x4657 x4401))
(define-fun x8452 ((x4401 Int)) Int (x2420 x4401))
(define-fun x188 ((x4401 Int)) Int (x174 x4401))
(define-fun x7772 ((x4401 Int)) Int (x2436 x4401))
(define-fun x589 ((x4401 Int)) Int (x6130 x4401))
(define-fun x368 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6960 ((x4401 Int)) Int (x4657 x4401))
(define-fun x2175 ((x4401 Int)) Int (ite (= x4401 x333) x1742 (x978 x4401)))
(define-fun x8405 ((x4401 Int)) Int (ite (= x4401 x1037) x6611 (x2175 x4401)))
(define-fun x3582 ((x4401 Int)) Int (ite (and (>= x4401 128) (< x4401 (+ x2405 128))) (x5033 (+ x4401 36)) (x1046 x4401)))
(define-fun x6280 ((x4401 Int)) Int (ite (= x5464 x4401) 0 (x3582 x4401)))
(define-fun x1828 ((x4401 Int)) Int (ite (= x4401 x1636) x3326 (x6280 x4401)))
(define-fun x8100 ((x4401 Int)) Int (ite (= x6013 x4401) 0 (x4648 x4401)))
(define-fun x1656 ((x4401 Int)) Int (ite (= x4401 128) x2405 (x1828 x4401)))
(define-fun x2757 ((x4401 Int)) Int (ite (and (>= x4401 160) (> (+ 160 x2405) x4401)) (x5033 (+ x4401 4)) (x1656 x4401)))
(define-fun x1102 ((x4401 Int)) Int (ite (= x326 x4401) 0 (x2757 x4401)))
(define-fun x6574 ((x4401 Int)) Int (ite (= x294 x4401) x1503 (x1102 x4401)))
(define-fun x6728 ((x4401 Int)) Int (ite (and (<= x6237 x4401) (> (+ x1503 x6237) x4401)) (x5033 (- (+ x6269 x4401) x6237)) (x6574 x4401)))
(define-fun x7100 ((x4401 Int)) Int (ite (= x4038 x4401) 0 (x6728 x4401)))
(define-fun x3035 ((x4401 Int)) Int (ite x7920 (ite x2982 (x2910 x4401) (x4861 x4401)) (x5796 x4401)))
(define-fun x545 ((x4401 Int)) Int (ite (= x4401 196) x1369 (x3035 x4401)))
(define-fun x2444 ((x4401 Int)) Int (ite (= 228 x4401) x8446 (x545 x4401)))
(define-fun x8374 ((x4401 Int)) Int (ite (= x4401 x5072) x3368 (x2444 x4401)))
(define-fun x8386 ((x4401 Int)) Int (ite (= x72 x4401) x814 (x8374 x4401)))
(define-fun x8315 ((x4401 Int)) Int (ite (= x72 x4401) x7060 (x8374 x4401)))
(define-fun x323 ((x4401 Int)) Int (ite x8118 (ite x3423 (x8374 x4401) (x8315 x4401)) (x8386 x4401)))
(define-fun x3032 ((x4401 Int)) Int (ite (and (> x143 x4401) (<= 164 x4401)) (x323 (+ 128 x4401)) (x5452 x4401)))
(define-fun x1814 ((x4401 Int)) Int (ite (= x4401 x5412) x3329 (x4044 x4401)))
(define-fun x1094 ((x4401 Int)) Int (ite (and (> (+ x755 x3329) x4401) (>= x4401 x755)) (x3032 (- (+ x4401 x6460) x755)) (x7467 x4401)))
(define-fun x8413 ((x4401 Int)) Int (ite (= x4401 x2988) 0 (x1094 x4401)))
(define-fun x2734 ((x4401 Int)) Int (x4657 x4401))
(define-fun x6087 ((x4401 Int)) Int (x2436 x4401))
(define-fun x1841 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6882 ((x4401 Int)) Int (x6130 x4401))
(define-fun x1288 ((x4401 Int)) Int (x174 x4401))
(define-fun x6163 ((x4401 Int)) Int (x4657 x4401))
(define-fun x5185 ((x4401 Int)) Int (x2420 x4401))
(define-fun x7274 ((x4401 Int)) Int (x6130 x4401))
(define-fun x5604 ((x4401 Int)) Int (x174 x4401))
(define-fun x8500 ((x4401 Int)) Int (ite (= x4401 x7723) x1391 (x7829 x4401)))
(define-fun x122 ((x4401 Int)) Int (ite (and (> (+ x6625 x1391) x4401) (>= x4401 x6625)) (x4088 (- (+ x4401 164) x6625)) (x8500 x4401)))
(define-fun x8529 ((x4401 Int)) Int (ite (= x4401 x2225) 0 (x122 x4401)))
(define-fun x2349 ((x4401 Int)) Int (ite (= x4401 x4143) x6691 (x8529 x4401)))
(define-fun x8244 ((x4401 Int)) Int (ite (and (< x4401 (+ x6691 x5734)) (>= x4401 x5734)) (x4088 (- (+ x7738 x4401) x5734)) (x2349 x4401)))
(define-fun x4885 ((x4401 Int)) Int (ite (= x4401 x3927) 0 (x8244 x4401)))
(define-fun x4934 ((x4401 Int)) Int (ite (= x4401 x2172) x4343 (x4885 x4401)))
(define-fun x3157 ((x4401 Int)) Int (ite (= x5354 x4401) 128 (x4934 x4401)))
(define-fun x3740 ((x4401 Int)) Int (ite (= x4401 x1740) x5584 (x3157 x4401)))
(define-fun x438 ((x4401 Int)) Int (ite (= x4401 x3595) x1680 (x3740 x4401)))
(define-fun x5533 ((x4401 Int)) Int (ite (= x515 x4401) x3573 (x438 x4401)))
(define-fun x6658 ((x4401 Int)) Int (ite (= x2598 x4401) x5144 (x5533 x4401)))
(define-fun x2865 ((x4401 Int)) Int (ite (= x4401 x4820) x1468 (x6658 x4401)))
(define-fun x1349 ((x4401 Int)) Int (ite x1201 (x6658 x4401) (ite x3817 (x5533 x4401) (ite x2461 (x438 x4401) (ite x8255 (x3740 x4401) (x2865 x4401))))))
(define-fun x5194 ((x4401 Int)) Int (ite (= x4401 x6803) 0 (x1349 x4401)))
(define-fun x1234 ((x4401 Int)) Int (ite (= x4401 x1762) x5739 (x5194 x4401)))
(define-fun x6841 ((x4401 Int)) Int (ite (= x4401 x5414) x6154 (x1234 x4401)))
(define-fun x643 ((x4401 Int)) Int (ite (= x4401 x4428) x5789 (x6841 x4401)))
(define-fun x7600 ((x4401 Int)) Int (ite (= x4401 x247) x7659 (x643 x4401)))
(define-fun x4981 ((x4401 Int)) Int (ite (= x4401 x2209) x1005 (x7600 x4401)))
(define-fun x26 ((x4401 Int)) Int (ite (= x4401 x8127) x3013 (x4981 x4401)))
(define-fun x3771 ((x4401 Int)) Int (ite (= x3298 x4401) x8412 (x26 x4401)))
(define-fun x830 ((x4401 Int)) Int (ite x8480 (x26 x4401) (ite x3906 (x4981 x4401) (ite x1469 (x7600 x4401) (ite x6932 (x643 x4401) (x3771 x4401))))))
(define-fun x7721 ((x4401 Int)) Int (ite (= x769 x4401) 0 (x830 x4401)))
(define-fun x1056 ((x4401 Int)) Int (ite (= x5686 x4401) x1283 (x7721 x4401)))
(define-fun x7566 ((x4401 Int)) Int (ite (= x6 x4401) x7054 (x1056 x4401)))
(define-fun x449 ((x4401 Int)) Int (ite (= x83 x4401) 150 (x7566 x4401)))
(define-fun x4649 ((x4401 Int)) Int (ite (and (<= x3090 x4401) (< x4401 (+ x3090 150))) (x4088 (- (+ x4401 x2401) x3090)) (x449 x4401)))
(define-fun x8475 ((x4401 Int)) Int (ite (and (< x4401 0) (>= x4401 0)) (x3065 x4401) (x4649 x4401)))
(define-fun x4355 ((x4401 Int)) Int (ite x1015 (x8475 x4401) (x4649 x4401)))
(define-fun x1422 ((x4401 Int)) Int (ite (= x4401 x83) x6540 (x4355 x4401)))
(define-fun x7947 ((x4401 Int)) Int (ite (and (<= x1873 x4401) (< x4401 (+ x1873 x6540))) (x3065 (- x4401 x1873)) (x1422 x4401)))
(define-fun x5478 ((x4401 Int)) Int (ite (= x4401 x6492) x7960 (x7947 x4401)))
(define-fun x826 ((x4401 Int)) Int (ite (= x2439 x4401) x6581 (x5478 x4401)))
(define-fun x700 ((x4401 Int)) Int (ite (= x4935 x4401) x4951 (x826 x4401)))
(define-fun x237 ((x4401 Int)) Int (ite (= x4401 x3899) x1553 (x700 x4401)))
(define-fun x5991 ((x4401 Int)) Int (ite x8342 (x700 x4401) (ite x1931 (x826 x4401) (ite x226 (x5478 x4401) (ite x7913 (x7947 x4401) (x237 x4401))))))
(define-fun x5330 ((x4401 Int)) Int (ite (= x4180 x4401) 0 (x5991 x4401)))
(define-fun x3351 ((x4401 Int)) Int (ite (= x4401 x6704) x41 (x5330 x4401)))
(define-fun x6312 ((x4401 Int)) Int (ite (= x4401 x6492) x4343 (x3351 x4401)))
(define-fun x2979 ((x4401 Int)) Int (ite (= x6752 x4401) 160 (x6312 x4401)))
(define-fun x1723 ((x4401 Int)) Int (ite (= x4401 x4798) x3999 (x2979 x4401)))
(define-fun x3522 ((x4401 Int)) Int (ite (= x897 x4401) x7888 (x1723 x4401)))
(define-fun x4171 ((x4401 Int)) Int (ite (= x7410 x4401) x3694 (x3522 x4401)))
(define-fun x2781 ((x4401 Int)) Int (ite (= x1874 x4401) x902 (x4171 x4401)))
(define-fun x3932 ((x4401 Int)) Int (ite (= x4401 x638) x3358 (x2781 x4401)))
(define-fun x2327 ((x4401 Int)) Int (ite x3622 (x2781 x4401) (ite x4848 (x4171 x4401) (ite x2114 (x3522 x4401) (ite x7743 (x1723 x4401) (x3932 x4401))))))
(define-fun x6002 ((x4401 Int)) Int (ite (= x3605 x4401) 0 (x2327 x4401)))
(define-fun x3565 ((x4401 Int)) Int (ite (= x718 x4401) x5739 (x6002 x4401)))
(define-fun x3259 ((x4401 Int)) Int (ite (= x2966 x4401) x8065 (x3565 x4401)))
(define-fun x4339 ((x4401 Int)) Int (ite (= x3648 x4401) x5809 (x3259 x4401)))
(define-fun x3437 ((x4401 Int)) Int (ite (= x517 x4401) x737 (x4339 x4401)))
(define-fun x8339 ((x4401 Int)) Int (ite (= x8236 x4401) x1831 (x3437 x4401)))
(define-fun x7596 ((x4401 Int)) Int (ite (= x4401 x5445) x2624 (x8339 x4401)))
(define-fun x5956 ((x4401 Int)) Int (ite (= x4401 x5054) x8213 (x7596 x4401)))
(define-fun x5061 ((x4401 Int)) Int (ite x8382 (x7596 x4401) (ite x4389 (x8339 x4401) (ite x1744 (x3437 x4401) (ite x266 (x4339 x4401) (x5956 x4401))))))
(define-fun x3442 ((x4401 Int)) Int (ite (= x7530 x4401) 0 (x5061 x4401)))
(define-fun x1913 ((x4401 Int)) Int (ite (= x2216 x4401) x4358 (x3442 x4401)))
(define-fun x2377 ((x4401 Int)) Int (ite (= x7401 x4401) x317 (x4648 x4401)))
(define-fun x698 ((x4401 Int)) Int (x4657 x4401))
(define-fun x6731 ((x4401 Int)) Int (ite x913 (x6130 x4401) (x4077 x4401)))
(define-fun x4739 ((x4401 Int)) Int (x2436 x4401))
(define-fun x7980 ((x4401 Int)) Int (x2420 x4401))
(define-fun x1139 ((x4401 Int)) Int (ite x913 (x174 x4401) (x2671 x4401)))
(define-fun x547 ((x4401 Int)) Int (x4657 x4401))
(define-fun x3890 ((x4401 Int)) Int (x4077 x4401))
(define-fun x1533 ((x4401 Int)) Int (x2436 x4401))
(define-fun x4514 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6265 ((x4401 Int)) Int (ite (= 4 x4401) 33 (x8061 x4401)))
(define-fun x35 ((x4401 Int)) Int (ite (and (< x4401 36) (<= 0 x4401)) (x6265 x4401) (x3016 x4401)))
(define-fun x8233 ((x4401 Int)) Int (ite (= 160 x4401) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x5242 x4401)))
(define-fun x59 ((x4401 Int)) Int (ite (= x4401 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x8233 x4401)))
(define-fun x4418 ((x4401 Int)) Int (ite (= 128 x4401) 64 (x6815 x4401)))
(define-fun x6121 ((x4401 Int)) Int (ite (= 256 x4401) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x930 x4401)))
(define-fun x5431 ((x4401 Int)) Int (ite (= x4401 258) x7057 (x6121 x4401)))
(define-fun x6858 ((x4401 Int)) Int (ite (= 224 x4401) 34 (x6755 x4401)))
(define-fun x1879 ((x4401 Int)) Int (ite (= x4401 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x2729 x4401)))
(define-fun x5458 ((x4401 Int)) Int (ite (= 294 x4401) x6287 (x1879 x4401)))
(define-fun x2500 ((x4401 Int)) Int (ite (= 326 x4401) x5372 (x5458 x4401)))
(define-fun x6617 ((x4401 Int)) Int (ite (= 358 x4401) 160 (x2500 x4401)))
(define-fun x8443 ((x4401 Int)) Int (ite (= 454 x4401) x299 (x6617 x4401)))
(define-fun x2157 ((x4401 Int)) Int (ite (and (< x4401 (+ 486 x299)) (<= 486 x4401)) (x59 (- x4401 326)) (x8443 x4401)))
(define-fun x522 ((x4401 Int)) Int (ite (= x4401 390) 0 (x2157 x4401)))
(define-fun x2504 ((x4401 Int)) Int (ite (= 422 x4401) x1709 (x522 x4401)))
(define-fun x1956 ((x4401 Int)) Int (ite (= x4401 x2699) x2393 (x2504 x4401)))
(define-fun x6299 ((x4401 Int)) Int (ite (and (<= x2235 x4401) (> (+ x2393 x2235) x4401)) (x5431 (- (+ x4401 256) x2235)) (x1956 x4401)))
(define-fun x1308 ((x4401 Int)) Int (ite (and (< x4401 x404) (>= x4401 292)) (x6299 (+ 290 x4401)) (x6938 x4401)))
(define-fun x2544 ((x4401 Int)) Int (ite (= x4401 128) 0 (x6439 x4401)))
(define-fun x6864 ((x4401 Int)) Int (ite (= x4401 160) 0 (x2544 x4401)))
(define-fun x4072 ((x4401 Int)) Int (ite (= 290 x4401) x2942 (x6299 x4401)))
(define-fun x6855 ((x4401 Int)) Int (ite (= x4401 322) x2398 (x4072 x4401)))
(define-fun x3397 ((x4401 Int)) Int (ite (= x4401 0) x7633 (x4511 x4401)))
(define-fun x3231 ((x4401 Int)) Int (ite (= 32 x4401) x6723 (x3397 x4401)))
(define-fun x1557 ((x4401 Int)) Int (ite (= x4401 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x8061 x4401)))
(define-fun x1010 ((x4401 Int)) Int (ite (and (< x4401 4) (>= x4401 0)) (x1557 (+ x4401 128)) (x3016 x4401)))
(define-fun x4285 ((x4401 Int)) Int (ite (= x4401 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x8061 x4401)))
(define-fun x6953 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 4)) (x4285 (+ x4401 128)) (x3016 x4401)))
(define-fun x4492 ((x4401 Int)) Int (ite (= 548 x4401) x2676 (x5466 x4401)))
(define-fun x5135 ((x4401 Int)) Int (ite (= 580 x4401) x6027 (x4492 x4401)))
(define-fun x4959 ((x4401 Int)) Int (ite (= x4401 548) x3557 (x5466 x4401)))
(define-fun x3499 ((x4401 Int)) Int (ite x7331 (x2795 x4401) (ite x6047 (ite x6397 (x4492 x4401) (x5135 x4401)) (x4959 x4401))))
(define-fun x1425 ((x4401 Int)) Int (ite (= 516 x4401) x5257 (x2616 x4401)))
(define-fun x4832 ((x4401 Int)) Int (ite (= x4401 x7247) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x8061 x4401)))
(define-fun x3426 ((x4401 Int)) Int (ite (= x4401 x724) 32 (x4832 x4401)))
(define-fun x1790 ((x4401 Int)) Int (ite (= x6795 x4401) 48 (x3426 x4401)))
(define-fun x7986 ((x4401 Int)) Int (ite (= x4401 x5495) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1790 x4401)))
(define-fun x6862 ((x4401 Int)) Int (ite (= x8096 x4401) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x7986 x4401)))
(define-fun x4022 ((x4401 Int)) Int (ite (and (> 132 x4401) (<= 0 x4401)) (x6862 (+ x4401 x7247)) (x3016 x4401)))
(define-fun x5925 ((x4401 Int)) Int (ite (= 354 x4401) 64 (x1849 x4401)))
(define-fun x3546 ((x4401 Int)) Int (ite (= x7247 x4401) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x8061 x4401)))
(define-fun x4950 ((x4401 Int)) Int (ite (= x5301 x4401) 32 (x3546 x4401)))
(define-fun x6462 ((x4401 Int)) Int (ite (= x4401 x8311) 32 (x4950 x4401)))
(define-fun x4691 ((x4401 Int)) Int (ite (= x4401 x7554) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x6462 x4401)))
(define-fun x6524 ((x4401 Int)) Int (ite (and (< x4401 100) (>= x4401 0)) (x4691 (+ x7247 x4401)) (x3016 x4401)))
(define-fun x3877 ((x4401 Int)) Int (ite x7504 (x6299 x4401) (x6855 x4401)))
(define-fun x7128 ((x4401 Int)) Int (ite (= x7247 x4401) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x3877 x4401)))
(define-fun x3354 ((x4401 Int)) Int (ite (= x4401 x4775) x6287 (x7128 x4401)))
(define-fun x4234 ((x4401 Int)) Int (ite (= x4401 x3149) 192 (x3354 x4401)))
(define-fun x3166 ((x4401 Int)) Int (ite (= x4401 x4439) x4271 (x4234 x4401)))
(define-fun x1545 ((x4401 Int)) Int (ite (and (<= x256 x4401) (< x4401 (+ x4271 x256))) (x3499 (- (+ x4401 548) x256)) (x3166 x4401)))
(define-fun x2561 ((x4401 Int)) Int (ite (= x4401 x5928) x6334 (x1545 x4401)))
(define-fun x2934 ((x4401 Int)) Int (ite (= x1451 x4401) x7170 (x2561 x4401)))
(define-fun x3028 ((x4401 Int)) Int (ite (= x4401 386) x1575 (x4521 x4401)))
(define-fun x7821 ((x4401 Int)) Int (ite (= x4401 418) x1648 (x3028 x4401)))
(define-fun x98 ((x4401 Int)) Int (ite (and (> (+ x6724 x7170) x4401) (<= x6724 x4401)) (x7821 (- (+ 386 x4401) x6724)) (x2934 x4401)))
(define-fun x5465 ((x4401 Int)) Int (ite (= x1454 x4401) x5372 (x98 x4401)))
(define-fun x1683 ((x4401 Int)) Int (ite (= x4401 x7946) 0 (x5465 x4401)))
(define-fun x8453 ((x4401 Int)) Int (ite (= x4401 x8367) x1912 (x1683 x4401)))
(define-fun x1258 ((x4401 Int)) Int (ite (= x4401 450) 34 (x8036 x4401)))
(define-fun x456 ((x4401 Int)) Int (ite (= x6274 x4401) x6583 (x8453 x4401)))
(define-fun x3904 ((x4401 Int)) Int (ite (= 482 x4401) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1464 x4401)))
(define-fun x7506 ((x4401 Int)) Int (ite (= x4401 484) x7057 (x3904 x4401)))
(define-fun x6964 ((x4401 Int)) Int (ite (and (<= x1717 x4401) (< x4401 (+ x1717 x6583))) (x7506 (- (+ x4401 482) x1717)) (x456 x4401)))
(define-fun x1397 ((x4401 Int)) Int (ite (= x4401 x5372) x7236 (x978 x4401)))
(define-fun x1904 ((x4401 Int)) Int (ite (= x898 x4401) x5777 (x1397 x4401)))
(define-fun x4654 ((x4401 Int)) Int (ite (and (> x2740 x4401) (<= 228 x4401)) (x6964 (- (+ x4401 (x8120 (+ x7247 228))) 228)) (x4836 x4401)))
(define-fun x7169 ((x4401 Int)) Int 0)
(define-fun x3725 ((x4401 Int)) Int (x2436 x4401))
(define-fun x2858 ((x4401 Int)) Int (x3822 x4401))
(define-fun x5258 ((x4401 Int)) Int (x4657 x4401))
(define-fun x3417 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6995 ((x4401 Int)) Int (x4077 x4401))
(define-fun x1375 ((x4401 Int)) Int (x3822 x4401))
(define-fun x1810 ((x4401 Int)) Int (x2436 x4401))
(define-fun x6191 ((x4401 Int)) Int (x1810 x4401))
(define-fun x2776 ((x4401 Int)) Int (x4657 x4401))
(define-fun x1384 ((x4401 Int)) Int (x2776 x4401))
(define-fun x8360 ((x4401 Int)) Int (x2420 x4401))
(define-fun x6557 ((x4401 Int)) Int (x8360 x4401))
(define-fun x3512 ((x4401 Int)) Int (x4077 x4401))
(define-fun x4298 ((x4401 Int)) Int (x3512 x4401))
(define-fun x7904 ((x4401 Int)) Int (ite (= x4401 x898) x6594 (x1904 x4401)))
(define-fun x7693 ((x4401 Int)) Int (x733 x4401))
(define-fun x6226 ((x4401 Int)) Int (x1888 x4401))
(define-fun x7165 ((x4401 Int)) Int (x4648 x4401))
(define-fun x5319 ((x4401 Int)) Int (x882 x4401))
(define-fun x2505 ((x4401 Int)) Int (x2118 x4401))
(define-fun x1069 ((x4401 Int)) Int (x1167 x4401))
(define-fun x2032 ((x4401 Int)) Int (x2099 x4401))
(define-fun x3598 ((x4401 Int)) Int (x4281 x4401))
(define-fun x2553 ((x4401 Int)) Int (x2637 x4401))
(define-fun x4069 ((x4401 Int)) Int (x512 x4401))
(define-fun x4034 ((x4401 Int)) Int (x1886 x4401))
(define-fun x1146 ((x4401 Int)) Int (x3733 x4401))
(define-fun x8227 ((x4401 Int)) Int (x3766 x4401))
(define-fun x5922 ((x4401 Int)) Int (x1733 x4401))
(define-fun x505 ((x4401 Int)) Int (x1838 x4401))
(define-fun x2555 ((x4401 Int)) Int (ite x7504 (x4511 x4401) (x3231 x4401)))
(define-fun x8032 ((x4401 Int)) Int (x4779 x4401))
(define-fun x6586 ((x4401 Int)) Int (x5820 x4401))
(define-fun x2559 ((x4401 Int)) Int (x5526 x4401))
(define-fun x5188 ((x4401 Int)) Int (x4884 x4401))
(define-fun x7264 ((x4401 Int)) Int (x3761 x4401))
(define-fun x2709 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 x2001)) (x2555 x4401) (x8061 x4401)))
(define-fun x4002 ((x4401 Int)) Int (ite (and (<= 0 x4401) (> x2001 x4401)) (x2709 x4401) (x3016 x4401)))
(define-fun x4931 ((x4401 Int)) Int (ite (and (> 354 x4401) (>= x4401 290)) (x2555 (- x4401 290)) (x6251 x4401)))
(define-fun x3459 ((x4401 Int)) Int (ite (= x4401 4) 34 (x8061 x4401)))
(define-fun x3054 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 36)) (x3459 x4401) (x3016 x4401)))
(define-fun x7879 ((x4401 Int)) Int (x2436 x4401))
(define-fun x152 ((x4401 Int)) Int (ite x3048 (x174 x4401) (x129 x4401)))
(define-fun x4279 ((x4401 Int)) Int (x4657 x4401))
(define-fun x4286 ((x4401 Int)) Int (x2420 x4401))
(define-fun x4658 ((x4401 Int)) Int (x6130 x4401))
(define-fun x1807 ((x4401 Int)) Int (ite (= x4401 x5372) x2112 (x3101 x4401)))
(define-fun x4463 ((x4401 Int)) Int (ite (= x6821 x4401) x2566 (x1807 x4401)))
(define-fun x8540 ((x4401 Int)) Int (ite (= x4401 x6821) x7213 (x4463 x4401)))
(define-fun x2697 ((x4401 Int)) Int (ite (= x4401 x5372) x5861 (x8540 x4401)))
(define-fun x2008 ((x4401 Int)) Int (ite x3048 (x3101 x4401) (ite x7780 (x4463 x4401) (ite x1629 (x2697 x4401) (x3101 x4401)))))
(define-fun x4231 ((x4401 Int)) Int (ite (= x1037 x4401) x7263 (x2008 x4401)))
(define-fun x8467 ((x4401 Int)) Int (ite (= x4401 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1206 x4401)))
(define-fun x295 ((x4401 Int)) Int (ite (= x4401 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x8467 x4401)))
(define-fun x8513 ((x4401 Int)) Int (ite (= x4401 128) 64 (x7321 x4401)))
(define-fun x7457 ((x4401 Int)) Int (ite (= x4401 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3855 x4401)))
(define-fun x4300 ((x4401 Int)) Int (ite (= 258 x4401) x2485 (x7457 x4401)))
(define-fun x2251 ((x4401 Int)) Int (ite (= x4401 224) 34 (x7008 x4401)))
(define-fun x2022 ((x4401 Int)) Int (ite (= 290 x4401) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4056 x4401)))
(define-fun x6647 ((x4401 Int)) Int (ite (= 294 x4401) x6287 (x2022 x4401)))
(define-fun x8400 ((x4401 Int)) Int (ite (= 326 x4401) x5372 (x6647 x4401)))
(define-fun x988 ((x4401 Int)) Int (ite (= x4401 358) 160 (x8400 x4401)))
(define-fun x1884 ((x4401 Int)) Int (ite (= x4401 454) x5311 (x988 x4401)))
(define-fun x8152 ((x4401 Int)) Int (ite (and (>= x4401 486) (< x4401 (+ 486 x5311))) (x295 (- x4401 326)) (x1884 x4401)))
(define-fun x8348 ((x4401 Int)) Int (ite (= x4401 390) 0 (x8152 x4401)))
(define-fun x7985 ((x4401 Int)) Int (ite (= x4401 422) x7099 (x8348 x4401)))
(define-fun x349 ((x4401 Int)) Int (ite (= x4401 x7379) x5768 (x7985 x4401)))
(define-fun x147 ((x4401 Int)) Int (ite (and (< x4401 (+ x5768 x6533)) (>= x4401 x6533)) (x4300 (- (+ x4401 256) x6533)) (x349 x4401)))
(define-fun x1 ((x4401 Int)) Int (ite (and (<= 292 x4401) (< x4401 x5215)) (x147 (+ 290 x4401)) (x7652 x4401)))
(define-fun x5816 ((x4401 Int)) Int (ite (= x4401 128) 0 (x1772 x4401)))
(define-fun x4258 ((x4401 Int)) Int (ite (= x4401 160) 0 (x5816 x4401)))
(define-fun x6692 ((x4401 Int)) Int (ite (= 290 x4401) x5343 (x147 x4401)))
(define-fun x4147 ((x4401 Int)) Int (ite (= x4401 322) x872 (x6692 x4401)))
(define-fun x1907 ((x4401 Int)) Int (x512 x4401))
(define-fun x5121 ((x4401 Int)) Int (x2420 x4401))
(define-fun x1604 ((x4401 Int)) Int (x4884 x4401))
(define-fun x7843 ((x4401 Int)) Int (x6130 x4401))
(define-fun x2205 ((x4401 Int)) Int (x1167 x4401))
(define-fun x6839 ((x4401 Int)) Int (x5526 x4401))
(define-fun x1512 ((x4401 Int)) Int (x2637 x4401))
(define-fun x5411 ((x4401 Int)) Int (ite x2889 (ite x3244 (x147 x4401) (x4147 x4401)) (x2687 x4401)))
(define-fun x4336 ((x4401 Int)) Int (x2436 x4401))
(define-fun x3139 ((x4401 Int)) Int (x4779 x4401))
(define-fun x8124 ((x4401 Int)) Int (x174 x4401))
(define-fun x2371 ((x4401 Int)) Int (x4281 x4401))
(define-fun x2087 ((x4401 Int)) Int (x882 x4401))
(define-fun x5927 ((x4401 Int)) Int (x3766 x4401))
(define-fun x1062 ((x4401 Int)) Int (x4657 x4401))
(define-fun x4132 ((x4401 Int)) Int (x3733 x4401))
(define-fun x1846 ((x4401 Int)) Int (x1838 x4401))
(define-fun x5389 ((x4401 Int)) Int (x3761 x4401))
(define-fun x2625 ((x4401 Int)) Int (x1733 x4401))
(define-fun x5031 ((x4401 Int)) Int (x1886 x4401))
(define-fun x4351 ((x4401 Int)) Int (x1888 x4401))
(define-fun x369 ((x4401 Int)) Int (x733 x4401))
(define-fun x1865 ((x4401 Int)) Int (x4648 x4401))
(define-fun x6996 ((x4401 Int)) Int (x5820 x4401))
(define-fun x1513 ((x4401 Int)) Int (x2118 x4401))
(define-fun x1380 ((x4401 Int)) Int (ite (= x8055 x4401) x4984 (x3638 x4401)))
(define-fun x1435 ((x4401 Int)) Int (ite (= x4401 x2595) x3701 (x1380 x4401)))
(define-fun x927 ((x4401 Int)) Int (ite (= x3359 x4401) x4631 (x7478 x4401)))
(define-fun x3560 ((x4401 Int)) Int (ite (= x4401 x8156) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1995 x4401)))
(define-fun x3777 ((x4401 Int)) Int (ite (= x5364 x4401) x2485 (x3560 x4401)))
(define-fun x552 ((x4401 Int)) Int (ite (= x4401 x7994) x2499 (x2224 x4401)))
(define-fun x1115 ((x4401 Int)) Int (ite (= x1272 x4401) x2885 (x2905 x4401)))
(define-fun x5522 ((x4401 Int)) Int (ite (= x4401 x7286) x6089 (x6116 x4401)))
(define-fun x5849 ((x4401 Int)) Int (ite (= x5008 x4401) x3343 (x5522 x4401)))
(define-fun x3187 ((x4401 Int)) Int (ite (= x4401 x7286) x668 (x6116 x4401)))
(define-fun x8481 ((x4401 Int)) Int (ite x336 (x6924 x4401) (ite x5826 (ite x7475 (x5522 x4401) (x5849 x4401)) (x3187 x4401))))
(define-fun x7192 ((x4401 Int)) Int (ite (= x4401 x251) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x5411 x4401)))
(define-fun x5907 ((x4401 Int)) Int (ite (= x4401 x3005) x6287 (x7192 x4401)))
(define-fun x5365 ((x4401 Int)) Int (ite (= x4401 x4593) 192 (x5907 x4401)))
(define-fun x4997 ((x4401 Int)) Int (ite (= x4401 x578) x1994 (x5365 x4401)))
(define-fun x6600 ((x4401 Int)) Int (ite (and (<= x7248 x4401) (< x4401 (+ x1994 x7248))) (x8481 (- (+ x7286 x4401) x7248)) (x4997 x4401)))
(define-fun x2451 ((x4401 Int)) Int (ite (= x4401 x3452) x2669 (x6600 x4401)))
(define-fun x179 ((x4401 Int)) Int (ite (= x4401 x5270) x2089 (x2451 x4401)))
(define-fun x7568 ((x4401 Int)) Int (ite (and (>= x4401 x6703) (< x4401 (+ x2089 x6703))) (x1435 (- (+ x5921 x4401) x6703)) (x179 x4401)))
(define-fun x6346 ((x4401 Int)) Int (ite (= x4401 x6042) x5372 (x7568 x4401)))
(define-fun x2024 ((x4401 Int)) Int (ite (= x5231 x4401) 0 (x6346 x4401)))
(define-fun x4423 ((x4401 Int)) Int (ite (= x4401 x7397) x5721 (x2024 x4401)))
(define-fun x5637 ((x4401 Int)) Int (ite (= x8520 x4401) x3124 (x4423 x4401)))
(define-fun x342 ((x4401 Int)) Int (ite (and (<= x7500 x4401) (< x4401 (+ x7500 x3124))) (x3777 (- (+ x4401 x6380) x7500)) (x5637 x4401)))
(define-fun x6217 ((x4401 Int)) Int (ite (and (< x4401 x851) (<= 228 x4401)) (x342 (- (+ x4401 (x8120 (+ x251 228))) 228)) (x2894 x4401)))
(define-fun x4175 ((x4401 Int)) Int 0)
(define-fun x5941 ((x4401 Int)) Int (x6130 x4401))
(define-fun x6096 ((x4401 Int)) Int (x129 x4401))
(define-fun x1024 ((x4401 Int)) Int (x2436 x4401))
(define-fun x3044 ((x4401 Int)) Int (x4657 x4401))
(define-fun x2106 ((x4401 Int)) Int (x2420 x4401))
(define-fun x7594 ((x4401 Int)) Int (x5121 x4401))
(define-fun x2031 ((x4401 Int)) Int (x7843 x4401))
(define-fun x4846 ((x4401 Int)) Int (x129 x4401))
(define-fun x2796 ((x4401 Int)) Int (x1062 x4401))
(define-fun x1467 ((x4401 Int)) Int (x4336 x4401))
(define-fun x6941 ((x4401 Int)) Int (x512 x4401))
(define-fun x1832 ((x4401 Int)) Int (x2420 x4401))
(define-fun x8222 ((x4401 Int)) Int (x6130 x4401))
(define-fun x5123 ((x4401 Int)) Int (x1167 x4401))
(define-fun x2051 ((x4401 Int)) Int (x4884 x4401))
(define-fun x1558 ((x4401 Int)) Int (x5526 x4401))
(define-fun x3262 ((x4401 Int)) Int (x2637 x4401))
(define-fun x7185 ((x4401 Int)) Int (x2436 x4401))
(define-fun x1443 ((x4401 Int)) Int (x4779 x4401))
(define-fun x2882 ((x4401 Int)) Int (x3766 x4401))
(define-fun x749 ((x4401 Int)) Int (x174 x4401))
(define-fun x5040 ((x4401 Int)) Int (x882 x4401))
(define-fun x7318 ((x4401 Int)) Int (x4657 x4401))
(define-fun x109 ((x4401 Int)) Int (x1886 x4401))
(define-fun x444 ((x4401 Int)) Int (x4648 x4401))
(define-fun x2887 ((x4401 Int)) Int (x4281 x4401))
(define-fun x1669 ((x4401 Int)) Int (x1733 x4401))
(define-fun x4509 ((x4401 Int)) Int (x1838 x4401))
(define-fun x4259 ((x4401 Int)) Int (x3761 x4401))
(define-fun x19 ((x4401 Int)) Int (x3733 x4401))
(define-fun x7398 ((x4401 Int)) Int (x1888 x4401))
(define-fun x6976 ((x4401 Int)) Int (x5820 x4401))
(define-fun x3840 ((x4401 Int)) Int (x733 x4401))
(define-fun x1844 ((x4401 Int)) Int (x2118 x4401))
(define-fun x3370 ((x4401 Int)) Int (ite (and (<= 290 x4401) (> 354 x4401)) (x7072 (- x4401 290)) (x3997 x4401)))
(define-fun x6940 ((x4401 Int)) Int (x2420 x4401))
(define-fun x7783 ((x4401 Int)) Int (ite x4932 (x2436 x4401) (x6610 x4401)))
(define-fun x3674 ((x4401 Int)) Int (x6130 x4401))
(define-fun x265 ((x4401 Int)) Int (x174 x4401))
(define-fun x6486 ((x4401 Int)) Int (x4657 x4401))
(define-fun x2243 ((x4401 Int)) Int (ite x2622 (x4920 x4401) (ite x6570 (x4920 x4401) (x2436 x4401))))
(define-fun x4209 ((x4401 Int)) Int (x174 x4401))
(define-fun x7084 ((x4401 Int)) Int (x2436 x4401))
(define-fun x8312 ((x4401 Int)) Int (x6130 x4401))
(define-fun x6739 ((x4401 Int)) Int (x2420 x4401))
(define-fun x8559 ((x4401 Int)) Int (x4657 x4401))
(define-fun x5385 ((x4401 Int)) Int (x4657 x4401))
(define-fun x6750 ((x4401 Int)) Int (x6130 x4401))
(define-fun x543 ((x4401 Int)) Int (x174 x4401))
(define-fun x8224 ((x4401 Int)) Int (x2420 x4401))
(define-fun x2355 ((x4401 Int)) Int (ite (= x4401 x4084) x6046 (x3766 x4401)))
(define-fun x7763 ((x4401 Int)) Int (ite (= x6892 x4401) x2918 (x512 x4401)))
(define-fun x1078 ((x4401 Int)) Int (ite (= x6153 x4401) x5372 (x5526 x4401)))
(define-fun x4994 ((x4401 Int)) Int (ite x1490 (x7428 x4401) (x315 x4401)))
(define-fun x8179 ((x4401 Int)) Int (ite x1490 (x3847 x4401) (x3117 x4401)))
(define-fun x5562 ((x4401 Int)) Int (ite x1490 (x2275 x4401) (x4850 x4401)))
(define-fun x2351 ((x4401 Int)) Int (ite x1490 (x2410 x4401) (x8008 x4401)))
(define-fun x2516 ((x4401 Int)) Int (ite x1490 (x1058 x4401) (x6164 x4401)))
(define-fun x5561 ((x4401 Int)) Int (ite x1490 (x4967 x4401) (x7179 x4401)))
(define-fun x4767 ((x4401 Int)) Int (ite x1490 (x3094 x4401) (x3196 x4401)))
(define-fun x5740 ((x4401 Int)) Int (ite x1490 (x6507 x4401) (x7070 x4401)))
(define-fun x3951 ((x4401 Int)) Int (ite x1490 (x2769 x4401) (x2501 x4401)))
(define-fun x4550 ((x4401 Int)) Int (ite x1490 (x3182 x4401) (x3301 x4401)))
(define-fun x452 ((x4401 Int)) Int (ite x1490 (x2304 x4401) (x3663 x4401)))
(define-fun x3898 ((x4401 Int)) Int (ite x1490 (x7152 x4401) (x6749 x4401)))
(define-fun x530 ((x4401 Int)) Int (ite x1490 (x7948 x4401) (x421 x4401)))
(define-fun x8394 ((x4401 Int)) Int (ite x1490 (x1475 x4401) (x7141 x4401)))
(define-fun x4754 ((x4401 Int)) Int (ite x1015 (x3837 x4401) (x2436 x4401)))
(define-fun x6958 ((x4401 Int)) Int (ite x5373 (x3075 x4401) (x8506 x4401)))
(define-fun x4708 ((x4401 Int)) Int (ite (= x4401 x4906) x6038 (x6958 x4401)))
(define-fun x5436 ((x4401 Int)) Int (ite x4311 (x3001 x4401) (x1850 x4401)))
(define-fun x6808 ((x4401 Int)) Int (ite (and (> 160 x4401) (<= 128 x4401)) (x5436 (- x4401 128)) (x7001 x4401)))
(define-fun x7485 ((x4401 Int)) Int (ite x2583 (x8019 x4401) (ite x5182 (x7217 x4401) (x5989 x4401))))
(define-fun x2662 ((x4401 Int)) Int (ite (and (<= 128 x4401) (< x4401 160)) (x7485 (- x4401 128)) (x7338 x4401)))
(define-fun x7886 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x7453 x4401)))
(define-fun x6092 ((x4401 Int)) Int (ite (and (<= 0 x4401) (< x4401 36)) (x7886 x4401) (x1985 x4401)))
(define-fun x858 ((x4401 Int)) Int (ite (= 4 x4401) 17 (x2606 x4401)))
(define-fun x3780 ((x4401 Int)) Int (ite (and (>= x4401 0) (< x4401 36)) (x858 x4401) (x1985 x4401)))
(define-fun x1433 ((x4401 Int)) Int (ite (= x4401 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2291 x4401)))
(define-fun x6609 ((x4401 Int)) Int (ite (= 132 x4401) x7815 (x1433 x4401)))
(define-fun x3400 ((x4401 Int)) Int (ite (= 164 x4401) x6016 (x6609 x4401)))
(define-fun x5091 ((x4401 Int)) Int (ite (= x4401 196) x6173 (x3400 x4401)))
(define-fun x3957 ((x4401 Int)) Int (ite (= x4401 228) x8021 (x5091 x4401)))
(define-fun x3138 ((x4401 Int)) Int (ite (= 128 x4401) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2291 x4401)))
(define-fun x6085 ((x4401 Int)) Int (ite (= x4401 132) x551 (x3138 x4401)))
(define-fun x6407 ((x4401 Int)) Int (ite (= x4401 164) x4972 (x6085 x4401)))
(define-fun x407 ((x4401 Int)) Int (ite (= x4401 128) x4972 (x3966 x4401)))
(define-fun x3728 ((x4401 Int)) Int (ite (= 128 x4401) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x407 x4401)))
(define-fun x8003 ((x4401 Int)) Int (ite (= x4401 132) x551 (x3728 x4401)))
(define-fun x6632 ((x4401 Int)) Int (ite (= x4401 164) 0 (x8003 x4401)))
(define-fun x4495 ((x4401 Int)) Int (ite (= x4401 196) 0 (x6632 x4401)))
(define-fun x7698 ((x4401 Int)) Int 0)
(define-fun x3074 ((x4401 Int)) Int (ite (= x4401 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2291 x4401)))
(define-fun x6824 ((x4401 Int)) Int (ite (= 132 x4401) x6894 (x3074 x4401)))
(define-fun x4891 ((x4401 Int)) Int (ite (= 164 x4401) x5105 (x6824 x4401)))
(define-fun x7972 ((x4401 Int)) Int (ite (= 196 x4401) x2017 (x4891 x4401)))
(define-fun x6763 ((x4401 Int)) Int (ite (= 128 x4401) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2291 x4401)))
(define-fun x7786 ((x4401 Int)) Int (ite (= x4401 132) x47 (x6763 x4401)))
(define-fun x2755 ((x4401 Int)) Int 0)
(define-fun x8514 ((x4401 Int)) Int (ite (= x4401 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2291 x4401)))
(define-fun x5036 ((x4401 Int)) Int (ite (= 132 x4401) x4185 (x8514 x4401)))
(define-fun x6901 ((x4401 Int)) Int 0)
(define-fun x5802 ((x4401 Int)) Int (ite x1727 (x682 x4401) (ite x4830 (x682 x4401) (ite x6656 (x682 x4401) (ite x6461 (x682 x4401) (x8516 x4401))))))
(define-fun x7196 ((x4401 Int)) Int (ite (and (> x3104 x4401) (<= 0 x4401)) (x5802 x4401) (x2606 x4401)))
(define-fun x1455 ((x4401 Int)) Int (ite (and (>= x4401 0) (> x3104 x4401)) (x7196 x4401) (x1985 x4401)))
(define-fun x996 ((x4401 Int)) Int (ite (= x3173 x4401) x7474 (x5396 x4401)))
(define-fun x2592 ((x4401 Int)) Int (ite (= x4401 x1037) x6329 (x8405 x4401)))
(assert (< 10000 (x6754 64 x5426 0)))
(assert (x308 x2459))
(assert (= (x6754 64 x7463 100) (x5346 (x6754 64 x7463 100))))
(assert (=> (>= 10000 x4168) (= 0 (x5346 x4168))))
(assert (= x7134 (=> (and (and (= 2088793519 x5874) (= x6490 false) (<= x994 127) (= x4295 (x8219 x5372)) (= x798 false) (= 128 x2154) (>= 1461501637330902918203684832716283019655932542975 x1126) (= 4 x2689) (>= 127 x994) (<= 1 x4295) (= x4659 (= x1126 x6957))) (or (and x4659 (and (= false x2667) (= x6520 x926) (= x679 false) (<= 1 x8121) (= x8388 x5439) (= x2211 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x99) (= x6520 (* x99 1000000000)) (= 310283853 x640) (>= 127 x7364) (>= 127 x7364) (= x5792 36) (= x3866 false) (= (x8219 x6957) x8121) (= x8427 false) (= x99 x5439))) (and (not x4659) (and (<= x1126 1461501637330902918203684832716283019655932542975) (= x8260 false) (= false x4535) (<= 1 x1126) (= false x52) (= x3703 false) (= x4796 310283853) (= x8390 (x8219 x333)) (>= 127 x3151) (<= 1 x8390) (= x7550 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x333 x1126) (<= x3151 127) (= x2002 36) (= x99 x8536))))) x1782)))
(assert (x308 x5808))
(assert (x308 x3776))
(assert (= x4626 (and x6145 x3053)))
(assert (= x1337 (and x410 x4671)))
(assert (= x8433 (x3587 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (= x7159 (and x1479 x1635)))
(assert (x308 x7889))
(assert (= (x5346 x1052) (x5346 (+ x1052 2))))
(assert (= (and x3494 (not x4923)) x241))
(assert (x308 x3608))
(assert (x308 x264))
(assert (x308 x2462))
(assert (= x8477 (and x7838 x2743)))
(assert (= (x5881 (x4041 x4801 x1351 x7080 x611 x5938)) x4801))
(assert (x3057 x6696))
(assert (= x6952 (and x6987 x1278)))
(assert (x308 x4032))
(assert (x308 x1630))
(assert (= x3181 (=> (and (= x843 128) (= (= 0 x2379) x2743) (= x4179 (x7553 (- x4112 128))) (= (x8219 x3173) x2379)) (and (=> (and x2743 (and (= x4579 x2426) (= x6668 x5341) (= x7905 x8532) (= x5643 true) (= x4250 x5263) (= false x4741) (= x3661 x4183) (= x4957 x4216) (= x8060 x959) (= 2 x2239) (= x309 x3173) (= x2759 x4025) (= x2620 x3597) (= x2833 x5029) (= x644 x7023) (= x2448 x2731) (= x1418 0))) x6447) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4179) (= x637 (= (x6686 132) x8114)) (<= x2520 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x8149 128) (<= 196 x4179) (= x4644 x5981) (= false x878) (= (x303 132) x3813) (= 1722637450 x12) (= x2034 (x8219 x5372)) (<= 1 x2034) (= x3892 x5428) (= false x2890) (= x5971 x3882) (= (> x3813 18446744073709551615) x4605) (<= x6297 127) (= x4179 x2520) x637 (= x6370 46442213778836376901753710468615024683576072693327014300388496345503314739200) (<= x6297 127) (>= x2520 196)) (not x2743)) (and (=> x4605 x4886) (=> (and (not x4605) (and (= 164 x3637) (= x3432 (> x7313 x2520)) (= x7313 (x8120 (+ 164 x3813))))) (and (=> x3432 x4249) (=> (and (and (= (< (+ 31 x3081) x2520) x150) (= (+ 4 x5981) x3081)) (not x3432)) (and (=> (and (not x150) (and (= true x7921) (= false x5772) (= x3104 0))) x8425) (=> (and (and (= x7614 (x303 x3081)) (= (> x7614 18446744073709551615) x1269)) x150) (and (=> (and (and (= (< x2520 x5963) x8343) (= x4356 (+ x3081 32)) (= (x8120 (+ x7614 x4356)) x5963)) (not x1269)) (and (=> x8343 x4249) (=> (and (and (or (and (and (= x819 (x8120 (+ x3813 31))) (or (<= x3813 115792089237316195423570985008687907853269984665640564039457584007913129639744) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x3813)) (= (x8120 (+ x7262 x5875)) x4292) (= (x8120 (+ x7614 31)) x7056) (< x7262 x4292) (= (* x4411 32) x7664) (= (x8120 (+ x7614 x1045)) x1018) (= x5838 false) (= (x3099 x7262) x5652) (= (* 32 x2373) x3579) (= (div x819 32) x4411) (>= x4292 161) (= (div x7056 32) x2373) (= (x8120 (+ x3579 32)) x5875) (= 0 x3104) (= x375 128) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x5652) (>= 31 x5652)) (= true x3969) (= x1045 (x8120 (+ 32 x7262))) (= x7262 (+ 160 x7664))) x8215) (and (and (= x6963 true) (= false x3254) (= 132 x3104)) (not x8215))) (= (= x5372 x333) x8215)) (not x8343)) x8425))) (=> x1269 x4886)))))))))))))
(assert (x308 x5475))
(assert (= true x8183))
(assert (= (and (not x88) x7563) x5644))
(assert (x308 x4425))
(assert (= (x5346 (x4041 x7655 x6068 x7455 x134 x1096)) (x4041 x7655 x6068 x7455 x134 x1096)))
(assert (=> (>= 10000 x3624) (= (x5346 x3624) 0)))
(assert (= (x5346 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)))
(assert (x308 x2052))
(assert (= (and (not x6117) x8552) x4133))
(assert (x308 x7178))
(assert (= (x5881 (x6754 x352 x4242 x5347)) x352))
(assert (x308 x5429))
(assert (x308 x8102))
(assert (= (x2151 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038)) x5467))
(assert (= (and x490 (not x5454)) x6397))
(assert (x308 x2399))
(assert (= x582 (x2151 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x6769))
(assert (not (x2741 (x6754 x5494 x555 x6037))))
(assert (x308 x3419))
(assert (x308 x3911))
(assert (x308 x344))
(assert (x308 x4055))
(assert (x308 x2629))
(assert (x308 x929))
(assert (x308 x960))
(assert (= x7834 (x2151 (x1300 x352 x8553 x6809 x7834))))
(assert (x308 x1014))
(assert (x308 x2940))
(assert (=> (<= x5783 10000) (= 0 (x5346 x5783))))
(assert (x308 x4862))
(assert (=> (>= 10000 x4778) (= 0 (x5346 x4778))))
(assert (= x4817 (or x2161 x7131 x2634 x1186 x5168 x3026 x502 x1059 x7029 x2673)))
(assert (x308 x2545))
(assert (x308 x6699))
(assert (= (=> (and (= x386 x7111) (= 2 x5893) (= x7433 true) (= x2651 0) (= x8013 x5940) (= x2442 x3531) (= x1706 false) (= x7171 36)) x561) x7542))
(assert (= x6352 x91))
(assert (= (x4162 (x4041 x5086 x2153 x8353 x3686 x1447)) x2153))
(assert (x308 x2471))
(assert (x308 x364))
(assert (x308 x7282))
(assert (= (x5881 (x5919 x2135 x2271)) x2135))
(assert (= x4897 x6783))
(assert (x308 x68))
(assert (x308 x171))
(assert (= x8039 x3781))
(assert (x308 x6871))
(assert (= (and x8356 x1127) x5446))
(assert (= (x5346 (x6754 64 x676 36)) (x6754 64 x676 36)))
(assert (= (x3587 (x6292 x5494 x6256 x6233 x6797 x424 x5377)) x5377))
(assert (= (x2151 (x1300 x4838 x3875 x4582 x5553)) x5553))
(assert (=> (>= 10000 x540) (= (x5346 x540) 0)))
(assert (= (and x4787 x817) x4406))
(assert (x308 x6064))
(assert (x308 x4403))
(assert (=> (<= x7403 10000) (= 0 (x5346 x7403))))
(assert (= x5026 (and x1442 x8482)))
(assert (x308 x2713))
(assert (= (x3587 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776)) x1602))
(assert (x308 x6425))
(assert (= x6051 (x4162 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914))))
(assert (x308 x3658))
(assert (= (and x5788 x5369) x804))
(assert (x308 x7086))
(assert (x308 x4380))
(assert (= (x5346 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)) (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)))
(assert (x308 x1821))
(assert (x308 x3925))
(assert (x308 x5543))
(assert (=> (>= 10000 x8150) (= 0 (x5346 x8150))))
(assert (x308 x7330))
(assert (=> (>= 10000 x6549) (= (x5346 x6549) 0)))
(assert (x308 x7015))
(assert (x308 x7671))
(assert (x308 x993))
(assert (= x6419 (x3587 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (= x7973 (x3587 (x6292 x7655 x2538 x2738 x696 x7977 x7973))))
(assert (x308 x256))
(assert (= (and (not x5596) x1022) x2909))
(assert (> (x6754 64 x2375 2) 10000))
(assert (x308 x7299))
(assert (= (and (not x4623) x1696) x1401))
(assert (= (=> (and (= x5165 0) (= x5249 x4811) (= x3141 x6098) (= x148 x386) (= x4851 1) (= x5480 x8013)) x4666) x5264))
(assert (= x5579 (and x4715 (not x2440))))
(assert (x308 x4529))
(assert (= (=> (and (or (not x6582) x6582) (= (= x1372 0) x6582)) x6311) x4656))
(assert (=> (>= 10000 x4782) (= (x5346 x4782) 0)))
(assert (= x1201 (and (not x742) x8062)))
(assert (x308 x5008))
(assert (= x5450 (and x3498 (not x8343))))
(assert (x308 x4919))
(assert (x308 x7530))
(assert (= x8457 (x4162 (x5919 x5086 x8457))))
(assert (=> (<= x7654 10000) (= 0 (x5346 x7654))))
(assert (x308 x4205))
(assert (x308 x5259))
(assert (= (x5346 (x5919 32 x3913)) (x5919 32 x3913)))
(assert (= x7402 (and (not x6984) x6316)))
(assert (x308 x3420))
(assert (= x2982 (and (not x7746) x761)))
(assert (x308 x7684))
(assert (=> (<= x7444 10000) (= (x5346 x7444) 0)))
(assert (= (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783) (x5346 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783))))
(assert (= (and (not x900) x137) x2437))
(assert (= (x5881 (x1300 x2135 x5205 x5858 x2587)) x2135))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (= x3030 (and x181 x6597)))
(assert (x308 x4601))
(assert (x308 x1018))
(assert (x308 x6636))
(assert (=> (<= x8205 10000) (= (x5346 x8205) 0)))
(assert (=> (<= x6392 10000) (= (x5346 x6392) 0)))
(assert (x308 x6863))
(assert (= (and (not x6977) x4563) x3685))
(assert (x308 x4701))
(assert (x308 x5343))
(assert (= (x4162 (x5919 x1185 x6644)) x6644))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x4838 x7149)))
(assert (x308 x2651))
(assert (= x5918 (and x2066 (not x4889))))
(assert (x308 x2768))
(assert (x308 x555))
(assert (x308 x3899))
(assert (= 1 (x4162 (x6754 64 1 x4465))))
(assert (< (x5919 x4203 x6504) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7356))
(assert (x3057 x112))
(assert (x308 x7881))
(assert (x308 x4501))
(assert (x308 x968))
(assert (x308 x6536))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x6287 3)))
(assert (= x4200 (or (and x7872 x7873) (and x2465 x3887))))
(assert (= (and x1312 x3022) x5831))
(assert (x308 x5783))
(assert (x308 x2538))
(assert (x308 x8259))
(assert (=> (>= 10000 x3242) (= (x5346 x3242) 0)))
(assert (not (x2741 (x6754 x2135 x6129 x8099))))
(assert (x308 x6039))
(assert (= x8482 (and x4028 (not x1761))))
(assert (x308 x3493))
(assert (= x28 (and x2143 x3113)))
(assert (=> (<= x6633 10000) (= (x5346 x6633) 0)))
(assert (not (x2741 (x6292 x8305 x4409 x3735 x4724 x5489 x7293))))
(assert (< (x1300 x352 x8553 x6809 x7834) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4906))
(assert (= x6734 (and (not x3133) x8375)))
(assert (x308 x4203))
(assert (= (and (not x7548) x4575) x7873))
(assert (=> (>= 10000 x4266) (= 0 (x5346 x4266))))
(assert (x308 x4581))
(assert (x308 x3542))
(assert (= (x5346 65535) 0))
(assert (= (and x6640 (not x3922)) x20))
(assert (x308 x2617))
(assert (= (and x3080 x4510) x7351))
(assert (=> (<= x8171 10000) (= (x5346 x8171) 0)))
(assert (= x352 (x5881 (x4041 x352 x6999 x653 x1979 x5899))))
(assert (x308 x2499))
(assert (x308 x182))
(assert (x308 x6533))
(assert (= (and x7237 x1424) x4699))
(assert (= (and x7695 x1147) x2493))
(assert (= (and x2815 x572) x4373))
(assert (x308 x7796))
(assert (x308 x805))
(assert (= (x3071 (x6292 x1198 x8188 x2116 x5208 x7624 x827)) x7624))
(assert (> (x5919 x4801 x8289) 10000))
(assert (x308 x4424))
(assert (x308 x2941))
(assert (= (x6754 x4301 x4290 x3083) (x5346 (x6754 x4301 x4290 x3083))))
(assert (=> (>= 10000 x3983) (= 0 (x5346 x3983))))
(assert (= (=> (and (= x778 (x1115 x1272)) (= (= x778 0) x7107)) (and (=> (and (and (= (x8120 (+ x3789 32)) x221) (= x727 true) (= x758 132) (= x6182 false) (= x2524 (x8120 (+ x221 32))) (= (x8120 (+ 32 x2524)) x1395) (= (x8120 (+ 4 x251)) x3789)) x7107) x624) (=> (and (and (= (x708 x3375) x8056) (= (x927 x3359) x4390) (= x3375 (x6754 64 x6287 5)) (= (> x4390 (ite (= 0 x8056) 10000 x8056)) x2440)) (not x7107)) (and (=> (and (and (= x7397 (x8120 (+ x5231 32))) (= (x8120 (+ x1994 31)) x6229) (= (x7553 (- x8520 x3005)) x5721) (= x578 (x8120 (+ x3005 192))) (= x2089 (x927 x3359)) (= (x8120 (+ 32 x4593)) x3452) (= (x8120 (+ x3124 31)) x5339) (= x5434 (x8120 (+ x2089 31))) (= x2669 (x7553 (- x5270 x3005))) (= (x8120 (+ x578 32)) x7248) (= (x552 x7994) x3124) (= (x8120 (+ 32 x5270)) x6703) (= (x8120 (+ x8520 32)) x7500) (= (x7553 (- x789 x251)) x851) (= x7967 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6229)) (= (x8120 (+ x3359 32)) x5921) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5434) x4165) (= x789 (x8120 (+ x1092 x7500))) (= x1092 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5339)) (= x6380 (x8120 (+ 32 x7994))) (= x1763 (= 0 x7599)) (= (x8120 (+ x6703 x4165)) x8520) (= (x8120 (+ x3005 32)) x4593) (= (x8120 (+ x251 4)) x3005) (= (x8120 (+ x6042 32)) x5231) (= (x8120 (+ x7967 x7248)) x5270) (= x6042 (x8120 (+ 32 x3452))) (= x1994 (x1115 x1272)) (= (x8219 x6821) x7599)) (not x2440)) (and (=> (and (not x1763) (and (= x1777 (x3101 x5372)) (= (and x4548 x2920) x2721) (= (x3101 x6821) x5769) (= (>= x1777 x3482) x2920) (= x4548 (< (+ x5769 x3482) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and (and (= 0 x4883) (= x2978 x7519) (= x1174 x77) (= x4678 x630) (= x7621 x8177)) (not x2721)) x4816) (=> (and x2721 (and (= x2669 x4293) (= false x1614) (= x5141 x2566) (>= x5141 0) (= x2112 (- x3554 x3482)) (= x80 192) (<= 1 x1176) (= x7580 x5721) (= x7130 3313512704) (= (+ x3482 x1734) x5141) x1897 (>= 127 x7345) (>= x851 420) (= false x3226) (= x6287 x5406) (= x7915 0) (= x1734 (x1807 x6821)) (= x3554 (x3101 x5372)) (>= x1601 420) (= x1304 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (= (x2894 196) x1994) x1897) (= x6984 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1601 4)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1601 4)) true) (> 192 (- x1601 4))))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1734 x3482)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5141) (>= 127 x7345) (= x851 x1601) (= (x8219 x2730) x1176) (= x264 x5372))) (and (=> (and (= x5083 true) (not x6984)) (and (=> (and x5083 (= x1424 (and (= true (<= x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 227 x1601)))) (and (=> (and x1424 (and (= x7910 (x6217 196)) (= x5216 (> x7910 18446744073709551615)))) (and (=> x5216 x2261) (=> (and (not x5216) (and (= x6618 (> x4051 x1601)) (= (x8120 (+ 228 x7910)) x4051))) (and (=> (and (not x6618) (= x1559 (> x2669 18446744073709551615))) (and (=> x1559 x6826) (=> (and (not x1559) (and (= x360 (x8120 (+ x4473 31))) (= x4473 (x8120 (+ 4 x2669))) (= x4687 (or (and (> x360 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x360 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1601 x360)))))) (and (=> (and x4687 (and (= (x6217 x4473) x4945) (= x8470 (< 18446744073709551615 x4945)))) (and (=> (and (not x8470) (and (= (x8120 (+ x4473 32)) x3627) (= (x8120 (+ x3627 x4945)) x8530) (= (< x1601 x8530) x6244))) (and (=> x6244 x8010) (=> (and (not x6244) (= x6161 (> x5721 18446744073709551615))) (and (=> (and (and (= (x8120 (+ x5721 4)) x7219) (= x3230 (x8120 (+ 31 x7219))) (= (or (and (< x3230 x1601) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1601) (<= x3230 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x3230 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1601 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x3955)) (not x6161)) (and (=> (not x3955) x482) (=> (and (and (= x2748 (x6217 x7219)) (= (> x2748 18446744073709551615) x5912)) x3955) (and (=> x5912 x2261) (=> (and (not x5912) (and (= (x8120 (+ x2312 x2748)) x4235) (= x1923 (> x4235 x1601)) (= (x8120 (+ 32 x7219)) x2312))) (and (=> x1923 x8010) (=> (and (and (= x1174 x2875) (= x4425 1) (= x1072 x7519) (= x1412 x7621) (= x7110 x630)) (not x1923)) x4471))))))) (=> x6161 x6826))))) (=> x8470 x2261))) (=> (not x4687) x482))))) (=> x6618 x8010))))) (=> (not x1424) x482))) (=> (not x5083) x6826))) (=> x6984 x6826))))) (=> (and (and (= x7826 true) (= false x1141) (= x758 0)) x1763) x624))) (=> (and x2440 (and (= false x4736) (= x1857 (x8120 (+ 32 x2582))) (= true x5665) (= x2582 (x8120 (+ 4 x251))) (= 100 x758) (= x3325 (x8120 (+ x1857 32))))) x624))))) x7854))
(assert (= (x5346 (x6292 x5494 x6256 x6233 x6797 x424 x5377)) (x6292 x5494 x6256 x6233 x6797 x424 x5377)))
(assert (x308 x2689))
(assert (x308 x7521))
(assert (= (or (and x3812 x7013) (and x3984 x4989) (and x3864 x205)) x6403))
(assert (=> (>= 10000 x7686) (= 0 (x5346 x7686))))
(assert (= x2290 (and x7695 (not x1147))))
(assert (= (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966) (x5346 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (= (=> (and (= x2426 x4579) (= x6668 x5341) (= x7361 2) (= false x6834) (= x2448 x2731) (= x2759 x4025) (= true x1961) (= x5029 x2833) (= x3661 x4183) (= x959 x8060) (= x3597 x2620) (= x1418 0) (= x309 x3173) (= x8532 x7905) (= x4216 x4957) (= x644 x7023) (= x4250 x5263)) x6447) x693))
(assert (x308 x7679))
(assert (< (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x5346 34591783479076665047274362116096262703299809091723987870014818727818681087008)))
(assert (x308 x481))
(assert (=> (<= x6985 10000) (= (x5346 x6985) 0)))
(assert (= (x4162 (x1300 x4982 x3441 x1676 x4732)) x3441))
(assert (x308 x184))
(assert (x308 x6436))
(assert (< 10000 (x6754 64 x5996 36)))
(assert (x308 x4065))
(assert (=> (>= 10000 x233) (= (x5346 x233) 0)))
(assert (x308 x5494))
(assert (= 7 (x932 (x6754 64 x7418 7))))
(assert (x308 x6925))
(assert (=> (<= x3635 10000) (= (x5346 x3635) 0)))
(assert (= x8113 (and x3974 x3120)))
(assert (=> (<= x6949 10000) (= (x5346 x6949) 0)))
(assert (x308 x3496))
(assert (x308 x6982))
(assert (= x1185 (x5881 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (x308 x7888))
(assert (= x2792 (x3587 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (x308 x3597))
(assert (= x1655 (=> (and (= x8060 x198) (= x3759 x2575) (= x1061 x3597) (= x6529 0) (= x4840 x6150) (= x1949 x5263) (= x5695 1) (= x1632 x1203) (= x2426 x2702) (= x1587 x2736) (= x6753 x2448) (= x5317 x5559) (= x4183 x7575) (= x1202 x4025) (= x6118 x1571)) x1974)))
(assert (x308 x2819))
(assert (= (and x5312 x2772) x5443))
(assert (x2741 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (< 10000 (x6754 64 x676 36)))
(assert (= (or (and x2556 x4602) (and x7641 x5833)) x3485))
(assert (= (x3587 (x6292 x352 x8047 x418 x8424 x2868 x7699)) x7699))
(assert (= (and x4626 (not x2542)) x4922))
(assert (x5602 x2870))
(assert (x308 x4117))
(assert (=> (>= 10000 x398) (= 0 (x5346 x398))))
(assert (x308 x2384))
(assert (= (=> (and (= (= x1570 0) x1993) (or (not x1993) x1993)) x3130) x1327))
(assert (x308 x8429))
(assert (x308 x6831))
(assert (not (x2741 (x1300 x5494 x4421 x4614 x7667))))
(assert (x308 x4935))
(assert (< 10000 (x4041 x516 x2133 x1302 x1004 x6925)))
(assert (x308 x483))
(assert (x308 x7265))
(assert (x308 x3440))
(assert (x308 x5928))
(assert (x308 x1307))
(assert (= x2438 x3429))
(assert (< (x6754 64 x2836 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7730))
(assert (= (x5346 (x1300 x3019 x981 x4009 x1972)) (x1300 x3019 x981 x4009 x1972)))
(assert (x308 x2123))
(assert (< (x6754 64 x4998 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6353))
(assert (x2741 3957931183))
(assert (x5886 x1730))
(assert (x308 x4225))
(assert (x308 x2484))
(assert (x308 x2898))
(assert (= (x1459 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x3783))
(assert (x308 x6947))
(assert (< 10000 (x4041 x8305 x8444 x811 x4050 x7088)))
(assert (= (x2151 (x4041 x7655 x6068 x7455 x134 x1096)) x134))
(assert (= (or x2358 x7228) x7617))
(assert (x308 x165))
(assert (= (or (and x5871 x3322) (and x1760 x6544)) x4111))
(assert (x308 x4926))
(assert (= x728 (x2151 (x1300 x516 x3067 x6100 x728))))
(assert (x308 x2627))
(assert (= x1219 (=> (and (= (= 0 x5277) x5510) (or x5510 (not x5510))) x6847)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 32 x6757)))
(assert (x308 x7367))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (= (or x4825 x7752) x8072))
(assert (x308 x1143))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x4982 x8150)))
(assert (x308 x5037))
(assert (x308 x7806))
(assert (x308 x8461))
(assert (= 1 (x4162 (x6754 64 1 x1293))))
(assert (x308 x6923))
(assert (x5886 x5339))
(assert (= x4613 (x932 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x5086 x2153 x8353 x3686 x1447)))
(assert (=> (<= x3303 10000) (= (x5346 x3303) 0)))
(assert (x308 x7539))
(assert (= (=> (and (= x5528 (x8405 x1037)) (= (- x5528 x3142) x6329) (>= x961 0) (= (+ x4855 x3142) x961) (= x6934 x961) (< (+ x3142 x4855) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2592 x333) x4855) (= x1150 x1110) (= x3420 2) (<= x961 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5846 (x2321 255 x7347))) x8525) x5851))
(assert (= (x6754 64 x4875 36) (x5346 (x6754 64 x4875 36))))
(assert (x2741 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (x308 x7368))
(assert (=> (<= x1896 10000) (= (x5346 x1896) 0)))
(assert (x308 x3015))
(assert (= (and x2562 x6560) x6514))
(assert (= (x4162 (x5919 x1198 x3379)) x3379))
(assert (x308 x5263))
(assert (=> (<= x5467 10000) (= (x5346 x5467) 0)))
(assert (= x377 (x5843 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (x308 x8439))
(assert (x308 x1901))
(assert (x308 x4473))
(assert (x308 x1039))
(assert (=> (<= x1420 10000) (= (x5346 x1420) 0)))
(assert (x308 x271))
(assert (x308 x7847))
(assert (x308 x1335))
(assert (= x4838 (x5881 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050))))
(assert (= x5710 (or x5487 x2477 (and x7050 x3271) x3936 (and x3444 x1819) x4334 x5564)))
(assert (x308 x947))
(assert (x308 x4262))
(assert (=> (>= 10000 x6412) (= 0 (x5346 x6412))))
(assert (=> (>= 10000 x6797) (= (x5346 x6797) 0)))
(assert (= x6435 (and x1921 x2838)))
(assert (not (x2741 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (x308 x2046))
(assert (= (x5881 (x6754 64 x2323 36)) 64))
(assert (= (x5881 (x5919 x4801 x8289)) x4801))
(assert (x308 x5777))
(assert (= x1640 (x932 (x6754 x7051 x4961 x1640))))
(assert (> (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198) 10000))
(assert (x308 x2655))
(assert (= (and x4603 (not x8327)) x5862))
(assert (x308 x3475))
(assert (x308 x5798))
(assert (x308 x778))
(assert (= (x6754 64 x6894 11) (x5346 (x6754 64 x6894 11))))
(assert (=> (<= x3783 10000) (= 0 (x5346 x3783))))
(assert (x308 x6421))
(assert (=> (>= 10000 x6405) (= (x5346 x6405) 0)))
(assert (x308 x455))
(assert (x308 x5149))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x7133 12)))
(assert (x308 x6028))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)))
(assert (x308 x1519))
(assert (x308 x30))
(assert (= (x5843 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024)) x5024))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x1198 x8188 x2116 x5208 x7624 x827)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x4982 x8366 x1336)))
(assert (=> (<= x518 10000) (= 0 (x5346 x518))))
(assert (x308 x4554))
(assert (= (and x20 (not x6556)) x2262))
(assert (x308 x6233))
(assert (x308 x6068))
(assert (x308 x2246))
(assert (= 64 (x5881 (x6754 64 x7418 7))))
(assert (x308 x322))
(assert (x308 x4698))
(assert (x308 x5974))
(assert (x308 x5326))
(assert (x308 x4716))
(assert (x308 x7258))
(assert (< 10000 (x5919 x5086 x8457)))
(assert (= (x4162 (x4041 x352 x6999 x653 x1979 x5899)) x6999))
(assert (= (and x2121 (not x6584)) x7862))
(assert (x308 x333))
(assert (x308 x2779))
(assert (x308 x3236))
(assert (= x4776 (x1459 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (x308 x6481))
(assert (< 10000 (x4041 x4727 x7444 x344 x2019 x3523)))
(assert (= x4306 (and x138 (not x127))))
(assert (> (x1300 x1391 x380 x5080 x487) 10000))
(assert (= x2134 (and x2621 x8331)))
(assert (x308 x4027))
(assert (x308 x5867))
(assert (x308 x4176))
(assert (x308 x294))
(assert (x2741 100000))
(assert (x308 x5088))
(assert (not (x2741 (x1300 x4801 x781 x5176 x1674))))
(assert (x308 x2893))
(assert (x308 x3626))
(assert (= x7344 (x932 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (= x7122 (and (not x4325) x2043)))
(assert (= (x6754 64 x6287 5) (x5346 (x6754 64 x6287 5))))
(assert (= x653 (x932 (x4041 x352 x6999 x653 x1979 x5899))))
(assert (x308 x7994))
(assert (x308 x6443))
(assert (x308 x3727))
(assert (x308 x1301))
(assert (=> (>= 10000 x6214) (= 0 (x5346 x6214))))
(assert (= x3981 (x5843 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (x308 x1463))
(assert (x308 x5382))
(assert (= (x5881 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297)) x3019))
(assert (x2741 1722637450))
(assert (x308 x4158))
(assert (x308 x2885))
(assert (x308 x7845))
(assert (x308 x5790))
(assert (= (x5346 (x5919 x1185 x6644)) (x5919 x1185 x6644)))
(assert (= x1185 (x5881 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (x308 x3849))
(assert (= (and (not x6050) x7528) x8342))
(assert (< 10000 (x4041 x352 x6999 x653 x1979 x5899)))
(assert (x308 x1861))
(assert (x308 x8388))
(assert (x5886 x4315))
(assert (x308 x4180))
(assert (= x6499 (and x625 x3930)))
(assert (= x2164 (and x4475 (not x3272))))
(assert (= x7578 (=> (and (= x588 x5305) (= x8336 x7283) (= x5859 x5667) (= x8174 x5473) (= x4551 x2990)) x2170)))
(assert (= (and x7515 (not x8271)) x4902))
(assert (x308 x1168))
(assert (x308 x1365))
(assert (x3057 x6187))
(assert (x308 x4131))
(assert (x308 x7111))
(assert (> (x6292 x7491 x844 x4507 x582 x6160 x7095) 10000))
(assert (= x3744 (and x7422 (not x3039))))
(assert (x308 x1268))
(assert (x5886 x1523))
(assert (x308 x5293))
(assert (= (x6754 64 x3739 12) (x5346 (x6754 64 x3739 12))))
(assert (x308 x8528))
(assert (x308 x3151))
(assert (=> (>= 10000 x8098) (= 0 (x5346 x8098))))
(assert (=> (>= 10000 x4050) (= (x5346 x4050) 0)))
(assert (x308 x4272))
(assert (= (x3071 (x6292 x8305 x4409 x3735 x4724 x5489 x7293)) x5489))
(assert (=> (<= x4272 10000) (= 0 (x5346 x4272))))
(assert (=> (<= x5372 10000) (= 0 (x5346 x5372))))
(assert (=> (<= x2914 10000) (= 0 (x5346 x2914))))
(assert (x308 x6366))
(assert (= x2868 (x3071 (x6292 x352 x8047 x418 x8424 x2868 x7699))))
(assert (x308 x5506))
(assert (x308 x3428))
(assert (= x2364 (and x499 x4930)))
(assert (=> (<= x3686 10000) (= (x5346 x3686) 0)))
(assert (x308 x5678))
(assert (= (and x3722 x4503) x1378))
(assert (x3057 x1188))
(assert (x308 x1458))
(assert (x3057 x3626))
(assert (= (x932 (x1300 x7655 x6392 x4048 x6185)) x4048))
(assert (x308 x5166))
(assert (= (x1459 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889)) x5889))
(assert (= x6633 (x2151 (x1300 x3850 x7052 x7836 x6633))))
(assert (x308 x1858))
(assert (= x7015 (x3071 (x4041 x4203 x3492 x6286 x1991 x7015))))
(assert (x308 x4429))
(assert (x308 x1674))
(assert (= x1969 (x3071 (x6292 x4301 x3767 x6440 x7374 x1969 x3086))))
(assert (x308 x8142))
(assert (= 64 (x5881 (x6754 64 x5691 7))))
(assert (=> (>= 10000 x5306) (= 0 (x5346 x5306))))
(assert (= (=> (and (= x7283 x386) (= x5305 x2096) (= x5859 x8013) (= x3531 x8174) (= 2 x4027) (= 0 x4551)) x7578) x526))
(assert (x308 x8560))
(assert (< 10000 (x6754 x1198 x3346 x5783)))
(assert (< (x5919 x1391 x677) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3454))
(assert (x308 x6502))
(assert (= (x932 (x6754 64 x6287 5)) 5))
(assert (= (x5346 (x4041 x4727 x7444 x344 x2019 x3523)) (x4041 x4727 x7444 x344 x2019 x3523)))
(assert (= (or (and x3039 x7422) (and x1673 x7955)) x2357))
(assert (x3057 x5029))
(assert (= x5494 (x5881 (x6754 x5494 x555 x6037))))
(assert (x308 x6795))
(assert (x308 x6504))
(assert (= (x4162 (x6292 x2135 x1295 x6039 x2766 x7689 x8433)) x1295))
(assert (= (and (not x7680) x4245) x1623))
(assert (=> (>= 10000 x5167) (= 0 (x5346 x5167))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x3850 x5673 x6483 x2284 x4803 x233)))
(assert (= (x1300 x8305 x7028 x1718 x1000) (x5346 (x1300 x8305 x7028 x1718 x1000))))
(assert (= (or x7912 x8195) x8146))
(assert (= x3812 (and (not x5124) x5591)))
(assert (x308 x5240))
(assert (x308 x2231))
(assert (x308 x406))
(assert (x308 x811))
(assert (x308 x6668))
(assert (x308 x7973))
(assert (x308 x8121))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x308 x1971))
(assert (x308 x4138))
(assert (= (and (not x7012) x7931) x8159))
(assert (=> (<= x5889 10000) (= 0 (x5346 x5889))))
(assert (= (=> (and (= x5318 x2426) (= false x4714) (= x3190 x8060) (= x644 x4303) (= x6005 x1748) (= x6005 (x2321 255 x1483)) (= 0 x4350) (= true x2149) (= x2448 x1365) (= x2627 x4183) (= x6668 x1781) (= x5051 x5263) (= x4216 x1548) (= x805 x3173) (= x7969 0) (= 2 x7712) (= x3287 x5029) (= x1339 x3597) (= x4025 x839)) x5753) x3781))
(assert (x308 x3307))
(assert (x308 x4364))
(assert (x308 x7095))
(assert (=> (<= x2271 10000) (= 0 (x5346 x2271))))
(assert (x308 x3489))
(assert (=> (<= x7667 10000) (= (x5346 x7667) 0)))
(assert (x308 x1564))
(assert (= (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896) (x5346 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x1198 x3242 x8275 x7224 x8162)))
(assert (x308 x1359))
(assert (x308 x4811))
(assert (= x3113 (and x7306 x5261)))
(assert (not (x2741 (x1300 x7655 x6392 x4048 x6185))))
(assert (x308 x1831))
(assert (x792 x4194))
(assert (= (x5919 x5086 x8457) (x5346 (x5919 x5086 x8457))))
(assert (x308 x5921))
(assert (= x1389 (and x6878 (not x5359))))
(assert (x308 x8268))
(assert (= x6425 (x4162 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (not (x2741 (x6754 64 x2448 3))))
(assert (x308 x1373))
(assert (x308 x400))
(assert (= (x2151 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x2173))
(assert (x308 x5470))
(assert (x308 x4305))
(assert (= (x5843 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420)) x5578))
(assert (x308 x8275))
(assert (x308 x3102))
(assert (x308 x1029))
(assert (= (x932 (x6754 64 x6966 11)) 11))
(assert (x308 x4663))
(assert (= x2684 (x4162 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (x308 x4241))
(assert (x308 x5145))
(assert (= (x5346 34591783479076665122502074927488338969190252781858077677016911635275368785765) 0))
(assert (=> (<= x3492 10000) (= 0 (x5346 x3492))))
(assert (= x4603 (and x8217 x3315)))
(assert (=> (>= 10000 x6230) (= (x5346 x6230) 0)))
(assert (not (x2741 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966))))
(assert (= (x2151 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)) x2531))
(assert (x308 x2183))
(assert (= x4409 (x4162 (x6292 x8305 x4409 x3735 x4724 x5489 x7293))))
(assert (= (x4162 (x6754 64 x6108 6)) x6108))
(assert (x308 x871))
(assert (x308 x4637))
(assert (=> (<= x6925 10000) (= 0 (x5346 x6925))))
(assert (x308 x8336))
(assert (x308 x5688))
(assert (= (and (not x1940) x3553) x8069))
(assert (= x6282 (and x2061 x8203)))
(assert (x308 x696))
(assert (x5886 x1701))
(assert (= (x3071 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x4223))
(assert (x308 x1082))
(assert (= x6954 (and x5370 (not x2565))))
(assert (x308 x5860))
(assert (x308 x6562))
(assert (= (x3587 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)) x3086))
(assert (= x6100 (x932 (x1300 x516 x3067 x6100 x728))))
(assert (x792 x5236))
(assert (x308 x7593))
(assert (x308 x5305))
(assert (x308 x3458))
(assert (= (x5346 (x6754 64 x6966 11)) (x6754 64 x6966 11)))
(assert (= 0 (x5346 1461501637330902918203684832716283019655932542975)))
(assert (= 64 (x5881 (x6754 64 x6421 11))))
(assert (= x8255 (and (not x8356) x1127)))
(assert (x308 x3109))
(assert (= (or x656 x2437) x1230))
(assert (x308 x7672))
(assert (=> (>= 10000 x5715) (= 0 (x5346 x5715))))
(assert (x308 x518))
(assert (x308 x1408))
(assert (x308 x6065))
(assert (= x3772 (and (not x319) x3645)))
(assert (x308 x131))
(assert (x308 x4146))
(assert (x308 x6983))
(assert (x308 x612))
(assert (x308 x3800))
(assert (= (x932 (x6754 x516 x1484 x7371)) x7371))
(assert (> (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743) 10000))
(assert (= (and (not x8242) x6339) x6114))
(assert (x308 x8197))
(assert (x308 x8207))
(assert (< 10000 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)))
(assert (= (=> (and (or (and x8558 (and (and (= (x6693 x3660) x7549) (= (< 32 x3738) x6090)) (or (and x6090 (and (or (not x1922) (and x1922 (and (or (and x1940 (and (>= 128 x3738) (= x7297 (x8120 (+ x7448 96))) (= x4543 (x8120 (+ x3660 96))) (= (x7431 x4543) x6876))) (not x1940)) (and (= (x2747 x168) x3158) (= (x8120 (+ 64 x3660)) x168) (= x1940 (< 96 x3738)) (= x6379 (x8120 (+ 64 x7448))))))) (and (= (x4062 x2048) x3460) (= (x8120 (+ 32 x7448)) x6623) (= (x8120 (+ 32 x3660)) x2048) (= x1922 (> x3738 64))))) (not x6090)))) (not x8558)) (and (= (x8120 (+ x1087 32)) x7448) (= (x8120 (+ x4730 32)) x4189) (= x8558 (< 0 x3738)) (= x1087 (x8120 (+ x139 x2454))) (= (x8120 (+ 32 x402)) x4730) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3856) x2454) (= x3738 (x4569 x131)) (= x2246 (x8120 (+ x136 x139))) (= x3856 (x8120 (+ x136 31))) (= x2963 (x7553 (- x1087 x2220))))) x4375) x5125))
(assert (x308 x627))
(assert (x5886 x2093))
(assert (x308 x5397))
(assert (x308 x6774))
(assert (x308 x6310))
(assert (x308 x7328))
(assert (x308 x1368))
(assert (= (=> (and (= x6493 x1299) (= x7847 x4701) (= x7348 x8078) (= x6477 x6140)) x3087) x2137))
(assert (= (or (and x7703 x7581) (and x3095 x4759)) x3145))
(assert (= (x5843 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038)) x2038))
(assert (= (x4162 (x6754 64 x5082 6)) x5082))
(assert (= (and x3004 x606) x3144))
(assert (x308 x5275))
(assert (= x6071 (x4162 (x1300 x5086 x6071 x7368 x6250))))
(assert (= x4047 x3503))
(assert (x308 x2089))
(assert (= (or x4688 x3916) x6645))
(assert (=> (>= 10000 x6999) (= 0 (x5346 x6999))))
(assert (= (x4162 (x6754 64 x5691 7)) x5691))
(assert (= x3916 (and x3844 x4256)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x1582 12)))
(assert (=> (>= 10000 x3199) (= 0 (x5346 x3199))))
(assert (=> (>= 10000 x458) (= (x5346 x458) 0)))
(assert (= x1538 (and x1728 x7520)))
(assert (=> (>= 10000 x6966) (= 0 (x5346 x6966))))
(assert (= (and x5689 x3745) x2452))
(assert (> (x6754 64 x1041 36) 10000))
(assert (= (or x365 x8211 x2357 x6435 x97) x5659))
(assert (= (x5881 (x6292 x8305 x4409 x3735 x4724 x5489 x7293)) x8305))
(assert (x308 x8151))
(assert (= 64 (x5881 (x6754 64 x7463 100))))
(assert (=> (<= x5413 10000) (= (x5346 x5413) 0)))
(assert (= x3624 (x3071 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (= x7689 (x3071 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (x3057 x3518))
(assert (x308 x2624))
(assert (= x2284 (x2151 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x1391 x2471 x8074)))
(assert (not (x2741 (x6754 64 1 x4465))))
(assert (x308 x1304))
(assert (x308 x2098))
(assert (= x934 x8392))
(assert (= (=> (and (= x5341 x6668) (= x4025 x2759) (= x4250 x5263) (= x4579 x2426) (= x4183 x3661) (= true x3680) (= x2833 x5029) (= x876 2) (= x7023 x644) (= x4957 x4216) (= x2731 x2448) (= x8060 x959) (= x2620 x3597) (= false x6587) (= x7905 x8532) (= x1418 0) (= x309 x3173)) x6447) x484))
(assert (x308 x1361))
(assert (x308 x4390))
(assert (x308 x6187))
(assert (x308 x8305))
(assert (= x5799 (x3071 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (= (=> (and (= (x2321 255 x1861) x1895) (= x2573 x54) (= x386 x4680) (= x1589 x8013) (= x8252 2) (= x3531 x2159) (= x1372 0) (= x1895 x6970)) x4656) x351))
(assert (x308 x602))
(assert (x308 x1428))
(assert (= x5511 (and x2392 (not x7538))))
(assert (=> (>= 10000 x5858) (= (x5346 x5858) 0)))
(assert (x2741 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (= x4838 (x5881 (x1300 x4838 x3875 x4582 x5553))))
(assert (x308 x5252))
(assert (x308 x3217))
(assert (=> (<= x3776 10000) (= 0 (x5346 x3776))))
(assert (not (x2741 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (=> (<= x7224 10000) (= (x5346 x7224) 0)))
(assert (x308 x3862))
(assert (x308 x8021))
(assert (x308 x4651))
(assert (x308 x1679))
(assert (x308 x5792))
(assert (= (x2151 (x4041 x7051 x7748 x1747 x7938 x3085)) x7938))
(assert (= (x4162 (x4041 x7051 x7748 x1747 x7938 x3085)) x7748))
(assert (x308 x1204))
(assert (x308 x2033))
(assert (x308 x1076))
(assert (x308 x7451))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)))
(assert (x308 x5854))
(assert (x308 x1555))
(assert (= (and (not x7042) x1357) x7702))
(assert (= (and x2309 (not x7073)) x3751))
(assert (x308 x5804))
(assert (=> (>= 10000 x6440) (= (x5346 x6440) 0)))
(assert (x308 x722))
(assert (=> (>= 10000 x5195) (= 0 (x5346 x5195))))
(assert (x308 x312))
(assert (= x7571 (and x2803 x1581)))
(assert (= x7269 (or x7571 x7733 x5336 x2854 x6449 x4068 x5443 x888 x997 x615 x2296)))
(assert (x3057 x1960))
(assert (=> (<= x333 10000) (= (x5346 x333) 0)))
(assert (= (and (not x3252) x1670) x3622))
(assert (= (x4162 (x6754 64 x4252 (ite (<= x4801 32) x141 (ite (>= 64 x4801) x6060 (ite (>= 96 x4801) x1044 (ite (<= x4801 128) x3825 (ite (>= 160 x4801) x8076 (ite (<= x4801 192) x3253 x4761)))))))) x4252))
(assert (=> (>= 10000 x2745) (= (x5346 x2745) 0)))
(assert (x308 x3082))
(assert (< 10000 (x6754 x7491 x4888 x3832)))
(assert (= x7780 (and x6317 (not x4826))))
(assert (x308 x3300))
(assert (x3057 x2552))
(assert (x308 x4727))
(assert (x308 x2376))
(assert (=> (<= x4252 10000) (= (x5346 x4252) 0)))
(assert (x308 x7080))
(assert (=> (>= 10000 x1297) (= 0 (x5346 x1297))))
(assert (x308 x3413))
(assert (x308 x7273))
(assert (x3057 x3433))
(assert (=> (<= x2323 10000) (= (x5346 x2323) 0)))
(assert (not (x2741 (x6754 x3850 x7892 x6405))))
(assert (= x1429 (x1459 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (x308 x7345))
(assert (x308 x3105))
(assert (x792 x3589))
(assert (x308 x6621))
(assert (= x6331 (and (not x8302) x5140)))
(assert (= x2733 (or (and x787 x6021) (and x1209 x3681))))
(assert (x308 x1812))
(assert (=> (>= 10000 x8166) (= 0 (x5346 x8166))))
(assert (= (and x5644 x7280) x7092))
(assert (= (or x6832 x5817) x6196))
(assert (= x1597 (and (not x3539) x6535)))
(assert (not (x2741 (x6754 x1391 x2471 x8074))))
(assert (= (x5919 x8305 x6208) (x5346 (x5919 x8305 x6208))))
(assert (< (x4041 x4801 x1351 x7080 x611 x5938) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4773))
(assert (x308 x6230))
(assert (x308 x6373))
(assert (< (x6754 64 x6898 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x4611) x2415) x6560))
(assert (= (and x7823 x252) x1735))
(assert (= (x932 (x6754 x4727 x2484 x4546)) x4546))
(assert (< 10000 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)))
(assert (= (and (not x5718) x3937) x8022))
(assert (= (x5881 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)) x7051))
(assert (x308 x221))
(assert (x308 x2273))
(assert (= (=> (and (= x7754 (= x2990 0)) (or x7754 (not x7754))) x5000) x2170))
(assert (x308 x6248))
(assert (x308 x4048))
(assert (= (and x2058 (not x4686)) x8030))
(assert (= (x5346 (x6754 64 x551 11)) (x6754 64 x551 11)))
(assert (= (x5346 (x6754 64 x7470 36)) (x6754 64 x7470 36)))
(assert (x308 x309))
(assert (= (=> (and (= x546 x2656) (= x5064 x5666) (= x7996 x3176) (= x2198 x5269) (= x7891 x3613) (= x8279 x6700) (= x6389 x6928) (= x869 x607) (= x7623 x4429) (= x4398 x4685) (= x1945 x7125) (= x3749 x6077) (= x801 x7389)) x6478) x178))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x8398 6)))
(assert (= (or x6663 x3145 x7688 x5786 x394) x7504))
(assert (< (x1300 x3019 x981 x4009 x1972) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x1779))
(assert (x308 x5414))
(assert (x308 x7761))
(assert (x308 x4805))
(assert (x308 x5231))
(assert (= (and x790 (not x3356)) x2392))
(assert (= (x5346 (x5919 x4203 x6504)) (x5919 x4203 x6504)))
(assert (= (x5346 (x5919 32 104)) (x5919 32 104)))
(assert (x308 x5988))
(assert (x308 x8136))
(assert (x3057 x1701))
(assert (x308 x5538))
(assert (x308 x1483))
(assert (=> (>= 10000 x4683) (= 0 (x5346 x4683))))
(assert (=> (<= x4507 10000) (= (x5346 x4507) 0)))
(assert (x308 x7614))
(assert (x308 x1170))
(assert (x308 x378))
(assert (x308 x5176))
(assert (x308 x7068))
(assert (< 10000 (x6754 x1185 x8205 x7758)))
(assert (x308 x1075))
(assert (= (and (not x979) x2991) x5484))
(assert (x308 x1684))
(assert (x308 x4316))
(assert (= x1198 (x5881 (x5919 x1198 x3379))))
(assert (x308 x6682))
(assert (x308 x2457))
(assert (x308 x5875))
(assert (x308 x8056))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x5082 6)))
(assert (x308 x6363))
(assert (x308 x4776))
(assert (= x3406 (and (not x2690) x8022)))
(assert (= (and x606 (not x3004)) x6725))
(assert (not (x2741 (x6754 64 x3285 6))))
(assert (x308 x4168))
(assert (= x4879 (=> (and (= x1873 (x8120 (+ 32 x83))) (= x8403 (> x8364 0)) (= x6540 (ite (< 150 x6956) 150 x6956))) (and (=> (and (not x8403) (and (or (and x2256 (and (or (and (and (and (= x4642 (x8120 (+ x6625 32))) (= x6503 (< 64 x1156)) (= x6581 (x5478 x4642)) (= x2439 (x8120 (+ x6492 32)))) (or (and x6503 (and (or (not x6050) (and x6050 (and (= x1315 (x8120 (+ 96 x6625))) (<= x1156 128) (= (x8120 (+ x6492 96)) x3899) (= x1553 (x700 x1315))))) (and (= x6050 (< 96 x1156)) (= x7166 (x8120 (+ 64 x6625))) (= x4935 (x8120 (+ 64 x6492))) (= x4951 (x826 x7166))))) (not x6503))) x1583) (not x1583)) (and (= x1583 (< 32 x1156)) (= (x7947 x6625) x7960)))) (not x2256)) (and (= x1794 (x7947 x1446)) (= x2533 (x8120 (+ x5734 96))) (= x7784 (x7947 x89)) (= x985 (x8120 (+ x5734 64))) (= (x8120 (+ x5734 96)) x5908) (= x7487 (x7947 x2668)) (= (x8120 (+ x5734 32)) x6612) (= x6850 (x8120 (+ x5734 64))) (= x3112 (x7947 x4264)) (= x6045 (x8120 (+ 160 x5734))) (= (x8120 (+ 160 x5734)) x8486) (= x877 (x8120 (+ 32 x5734))) (= (x8120 (+ x5734 32)) x1446) (= (x7947 x5734) x1484) (= (x8120 (+ 128 x5734)) x89) (= x401 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024)) (= (x7947 x2533) x2423) (= x2594 (x6754 x516 x1484 x7371)) (= x6528 (x8120 (+ 64 x5734))) (= (x8120 (+ 64 x5734)) x4264) (= x3672 (x4041 x516 x2133 x1302 x1004 x6925)) (= (x8120 (+ x5734 96)) x2668) (= x6925 (x7947 x5908)) (= x1681 (x7947 x4564)) (= (x7947 x3098) x3263) (= x494 (x7947 x6612)) (= (x7947 x5734) x3800) (= x5649 (x7947 x6912)) (= x1968 (x1300 x516 x3067 x6100 x728)) (= (x7947 x877) x6100) (= x4564 (x8120 (+ 32 x5734))) (= x3010 (x7947 x156)) (= (x6754 64 x4343 7) x41) (= (x6292 x516 x3800 x1794 x5062 x7487 x7784) x3321) (= (x8120 (+ 128 x5734)) x3098) (= (x5919 x516 x5371) x3965) (= (x7947 x5734) x5371) (= (x7947 x6528) x1004) (= x6912 (x8120 (+ x5734 192))) (= (x8120 (+ 128 x5734)) x156) (>= 224 x516) (= (x7947 x5734) x2133) (= (x7947 x6850) x4176) (= x7409 (x8120 (+ 32 x5734))) (= x1156 (x7947 x7723)) (= x7371 (x7947 x2871)) (= (x8120 (+ x5734 64)) x9) (= x5062 (x7947 x985)) (= (x7947 x6045) x5024) (= (x7947 x8486) x277) (= (x8120 (+ 32 x5734)) x2871) (= x516 (x7947 x4143)) (= x7173 (x7947 x5734)) (= x893 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) (= (x7947 x4117) x3624) (= x728 (x7947 x9)) (= (x7947 x7409) x1302) (= x2256 (< 0 x1156)) (= (ite (= x516 0) x2999 (ite (>= 32 x516) x3965 (ite (>= 64 x516) x2594 (ite (<= x516 96) x1968 (ite (<= x516 128) x3672 (ite (<= x516 160) x3321 (ite (>= 192 x516) x401 x893))))))) x317) (= x3067 (x7947 x5734)) (= (x7947 x5734) x6214) (= (x8120 (+ x5734 96)) x4117) (= (x4383 0) x2999)))) x4821) (=> x8403 x4497)))))
(assert (= (x4162 (x6754 x3019 x573 x5207)) x573))
(assert (x308 x4102))
(assert (x308 x3956))
(assert (x308 x4799))
(assert (=> (<= x3850 10000) (= (x5346 x3850) 0)))
(assert (=> (<= x7455 10000) (= (x5346 x7455) 0)))
(assert (x308 x1949))
(assert (x308 x5878))
(assert (= (or (and x4530 (not x6024)) x7802) x2974))
(assert (x308 x4350))
(assert (x308 x3669))
(assert (x308 x2496))
(assert (not (x2741 (x6292 x4801 x7411 x4782 x1324 x2659 x1983))))
(assert (= x3242 (x4162 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (x308 x3483))
(assert (= x2914 (x2151 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (x308 x3579))
(assert (x308 x3154))
(assert (= (and (not x6597) x181) x8472))
(assert (x308 x5301))
(assert (x792 x1960))
(assert (x308 x3242))
(assert (x308 x3223))
(assert (x308 x7667))
(assert (= x3284 (x2151 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (x308 x3948))
(assert (x308 x8279))
(assert (x3057 x4053))
(assert (= (and x8184 (not x7567)) x6765))
(assert (x3057 x6758))
(assert (x308 x2692))
(assert (=> (<= x677 10000) (= (x5346 x677) 0)))
(assert (x308 x8353))
(assert (x308 x7856))
(assert (x308 x1945))
(assert (x308 x7715))
(assert (=> (>= 10000 x5062) (= 0 (x5346 x5062))))
(assert (= (x3587 (x6292 x1391 x7138 x7296 x1932 x3069 x8182)) x8182))
(assert (x308 x1195))
(assert (x308 x4409))
(assert (x308 x1713))
(assert (not (x2741 (x6754 64 x2836 36))))
(assert (=> (<= x5001 10000) (= (x5346 x5001) 0)))
(assert (x308 x7177))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x6108 6)))
(assert (x308 x1547))
(assert (= x531 (and x1521 (not x3073))))
(assert (= (and (not x6393) x1187) x2330))
(assert (= (and x7862 (not x2911)) x5158))
(assert (x308 x6357))
(assert (= x4249 (=> (and (= x6904 false) (= 0 x3104) (= true x3827)) x8425)))
(assert (= x8371 (and x8411 x6119)))
(assert (= (and x3363 x7950) x1643))
(assert (x2569 x791))
(assert (x308 x2101))
(assert (= x2302 (x932 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (= x5415 (x932 (x4041 x4301 x7294 x5415 x3796 x1901))))
(assert (x308 x8078))
(assert (x308 x8016))
(assert (= (x5881 (x1300 x4982 x3441 x1676 x4732)) x4982))
(assert (x308 x4140))
(assert (x308 x8068))
(assert (x308 x1107))
(assert (= (x5881 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x3850))
(assert (not (x2741 (x6754 64 x6966 11))))
(assert (x308 x95))
(assert (x308 x5496))
(assert (x308 x4491))
(assert (= (and x1123 x8146) x2415))
(assert (= x8305 (x5881 (x5919 x8305 x6208))))
(assert (=> (>= 10000 x1971) (= 0 (x5346 x1971))))
(assert (= (and x4743 x1437) x1421))
(assert (x308 x5767))
(assert (= x490 (and x4563 x6977)))
(assert (= x2844 (x3071 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (= x5648 (and x7838 (not x2743))))
(assert (= x529 (and (not x3323) x2744)))
(assert (= x5358 (x4162 (x6754 64 x5358 36))))
(assert (= (and x3894 (not x1118)) x3722))
(assert (not (x2741 (x5919 x4801 x8289))))
(assert (x308 x1509))
(assert (x308 x5954))
(assert (x308 x1542))
(assert (x308 x985))
(assert (= (and (not x60) x4013) x2301))
(assert (x308 x8096))
(assert (x308 x6970))
(assert (x308 x7557))
(assert (x308 x2947))
(assert (= (x5881 (x1300 x7655 x6392 x4048 x6185)) x7655))
(assert (= x3019 (x5881 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (x308 x5930))
(assert (=> (>= 10000 x418) (= (x5346 x418) 0)))
(assert (x308 x189))
(assert (x308 x1051))
(assert (= (x6754 64 x3285 2) (x5346 (x6754 64 x3285 2))))
(assert (x308 x7099))
(assert (x308 x3700))
(assert (x308 x6641))
(assert (= x4144 (=> (= (= x1564 0) x2901) (and (=> (and (and (= false x2413) (= x2407 0) (= true x2317)) x2901) x6381) (=> (and (and (= x8434 x5550) (= x4212 x4489) (= x1752 x3621) (= x600 x4354) (= x6357 x409) (= x1852 x7926) (= x1003 x8009) (= x8562 x4806) (= x5178 x7832) (= x6040 1) (= x4944 x3477) (= x5840 0) (= x7025 x4987) (= x5427 x2567) (= x855 x8276)) (not x2901)) x935)))))
(assert (< 10000 (x6754 64 x206 7)))
(assert (= x3285 (x4162 (x6754 64 x3285 36))))
(assert (< (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7519))
(assert (= (x5881 (x5919 x4203 x6504)) x4203))
(assert (x308 x1829))
(assert (x308 x653))
(assert (x308 x316))
(assert (= (x5881 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) x3850))
(assert (x308 x5801))
(assert (x308 x2864))
(assert (x308 x4724))
(assert (not (x2741 (x6754 64 x5372 1))))
(assert (= (and (not x304) x6113) x4619))
(assert (= x5842 (x3587 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (= (x6754 64 x6421 11) (x5346 (x6754 64 x6421 11))))
(assert (x308 x4354))
(assert (= x1535 (and (not x3984) x4989)))
(assert (x792 x5767))
(assert (=> (>= 10000 x2879) (= (x5346 x2879) 0)))
(assert (x308 x1592))
(assert (= (and (not x7641) x5833) x5155))
(assert (x3057 x4194))
(assert (not (x2741 (x1300 x2135 x5205 x5858 x2587))))
(assert (x308 x2529))
(assert (= x5494 (x5881 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108))))
(assert (= (x3587 (x6292 x4203 x2643 x5854 x1971 x1016 x518)) x518))
(assert (x308 x4242))
(assert (x308 x8051))
(assert (=> (>= 10000 x5205) (= 0 (x5346 x5205))))
(assert (x308 x1997))
(assert (x308 x6814))
(assert (x3057 1))
(assert (x308 x6844))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 32 x6410)))
(assert (= (x5346 (x4041 x7491 x2618 x1565 x4794 x3415)) (x4041 x7491 x2618 x1565 x4794 x3415)))
(assert (x308 x7738))
(assert (x308 x211))
(assert (x308 x5489))
(assert (x308 x6579))
(assert (x308 x4096))
(assert (x308 x3194))
(assert (x308 x7686))
(assert (x308 x6809))
(assert (x308 x2100))
(assert (x308 x8373))
(assert (= 0 (x5346 49960157028345592648530624234191905822321225401495951855107091972775720517632)))
(assert (= x7991 (x2151 (x4041 x3850 x177 x7031 x7991 x4266))))
(assert (x308 x8457))
(assert (x308 x1008))
(assert (x308 x4344))
(assert (x308 x7164))
(assert (not (x2741 (x4041 x1391 x6781 x3736 x3616 x5169))))
(assert (= (x5843 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)) x5349))
(assert (x308 x6453))
(assert (x308 x6509))
(assert (x308 x3183))
(assert (= x6738 (and x5183 x6327)))
(assert (= x352 (x5881 (x6292 x352 x8047 x418 x8424 x2868 x7699))))
(assert (= (or x8157 (and x3960 (not x2717))) x2443))
(assert (x308 x5615))
(assert (x308 x981))
(assert (x308 x8293))
(assert (x308 x5207))
(assert (x308 x1676))
(assert (x308 x4099))
(assert (= x4079 (and x4687 x2515)))
(assert (x308 x4841))
(assert (x308 x7294))
(assert (x308 x6727))
(assert (= (x4041 x1185 x144 x3889 x2914 x2129) (x5346 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (= 64 (x5881 (x6754 64 x551 11))))
(assert (x308 x4416))
(assert (= (x4162 (x5919 x4801 x8289)) x8289))
(assert (x308 x4080))
(assert (= x5899 (x3071 (x4041 x352 x6999 x653 x1979 x5899))))
(assert (= (x5346 (x1300 x352 x8553 x6809 x7834)) (x1300 x352 x8553 x6809 x7834)))
(assert (= x5494 (x5881 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349))))
(assert (x308 x5990))
(assert (x308 x1757))
(assert (= (x2151 (x6292 x8305 x4409 x3735 x4724 x5489 x7293)) x4724))
(assert (x308 x5520))
(assert (x308 x6361))
(assert (=> (<= x5377 10000) (= (x5346 x5377) 0)))
(assert (x308 x6037))
(assert (x308 x4303))
(assert (= x595 (or x3235 x8519)))
(assert (x308 x6108))
(assert (x308 x1215))
(assert (=> (<= x2586 10000) (= 0 (x5346 x2586))))
(assert (x308 x3115))
(assert (x308 x6626))
(assert (x308 x6137))
(assert (x308 x2379))
(assert (= x4988 (and (not x2478) x36)))
(assert (x308 x106))
(assert (= x5423 x6078))
(assert (x308 x1851))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x2135 x1295 x6039 x2766 x7689 x8433)))
(assert (x308 x1973))
(assert (= x248 (and x3869 x2283)))
(assert (= (and (not x3561) x3304) x1469))
(assert (x308 x1710))
(assert (x308 x1883))
(assert (= x1321 (or x2622 x372 x6570)))
(assert (x308 x4141))
(assert (x308 x4944))
(assert (x308 x267))
(assert (= x8020 (and (not x8137) x50)))
(assert (< 10000 (x5919 32 x6410)))
(assert (= x7907 (and x2675 x5446)))
(assert (x308 x4052))
(assert (= (x932 (x6754 64 x1041 6)) 6))
(assert (< (x6754 x4203 x6076 x7017) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x8200))
(assert (x308 x3571))
(assert (x308 x2738))
(assert (= (and x3730 (not x6014)) x699))
(assert (= (and x2591 (not x2636)) x170))
(assert (= (x6754 64 x4998 100) (x5346 (x6754 64 x4998 100))))
(assert (x308 x4210))
(assert (x308 x5626))
(assert (x308 x2659))
(assert (x308 x247))
(assert (not (x2741 (x6754 64 x3125 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x7051 x382 x8284 x7275 x7761 x5763)))
(assert (= (x4162 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)) x3776))
(assert (= x6342 (and x1430 x3114)))
(assert (x308 x5868))
(assert (=> (>= 10000 x1640) (= 0 (x5346 x1640))))
(assert (= x7833 (and x1773 x8450)))
(assert (x3057 x1483))
(assert (= (and x3486 x7107) x7163))
(assert (x308 x6400))
(assert (x308 x1028))
(assert (not (x2741 (x6754 64 x3739 12))))
(assert (x308 x424))
(assert (= (x5881 (x6754 64 x6287 5)) 64))
(assert (= x4794 (x2151 (x4041 x7491 x2618 x1565 x4794 x3415))))
(assert (x308 x5349))
(assert (x308 x195))
(assert (x308 x7466))
(assert (=> (<= x715 10000) (= 0 (x5346 x715))))
(assert (= (or (and x5359 x6878) (and x1566 x6994) (and x1401 x2962) (and x7406 x5685) (and x7300 x4684)) x2152))
(assert (= x4396 (and (not x4039) x3762)))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (< (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x6754 64 x4757 2))))
(assert (= x2895 (and (not x3902) x7266)))
(assert (= (and x7342 x8317) x4844))
(assert (x3057 x5767))
(assert (= x4751 (or x2827 x1811 x5625 x3705 x6006)))
(assert (x308 x3838))
(assert (< (x1300 x4838 x3875 x4582 x5553) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x932 (x6292 x516 x3800 x1794 x5062 x7487 x7784)) x1794))
(assert (=> (>= 10000 x8297) (= 0 (x5346 x8297))))
(assert (x308 x6764))
(assert (x308 x3994))
(assert (= 36 (x932 (x6754 64 x2836 36))))
(assert (x308 x384))
(assert (not (x2741 (x6754 64 x5996 36))))
(assert (x308 x1265))
(assert (x308 x6480))
(assert (x308 x6172))
(assert (x308 x3759))
(assert (= (or x1201 x3817 x559 x2461 x8255) x5514))
(assert (x308 x4806))
(assert (= x649 (=> (and (= x1093 x8016) (= x756 x898) (= x7585 x7901) (= x5585 x601) (= x736 x386) (= x7521 x2011) (= x8016 (x2321 255 x1861)) (= x3531 x1405) (= 2 x3372) (= x1037 x6871) (= x5426 x5674) (= x6026 x7724) (= x8013 x415) (= x2001 0) (= false x1125) (= x5599 x6866) (= x5979 true) (= x6287 x356) (= x6283 0)) x5388)))
(assert (x308 x1570))
(assert (= (and (not x1819) x3444) x4738))
(assert (x308 x4435))
(assert (x308 x386))
(assert (x308 x2735))
(assert (x308 x4936))
(assert (= x6296 (and x3018 (not x7154))))
(assert (=> (>= 10000 x5828) (= (x5346 x5828) 0)))
(assert (=> (>= 10000 x7137) (= 0 (x5346 x7137))))
(assert (= (and x5883 (not x1232)) x2203))
(assert (= 64 (x5881 (x6754 64 x4343 3))))
(assert (< (x6754 64 x4875 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1300 x7655 x6392 x4048 x6185)))
(assert (x308 x2026))
(assert (x3057 x1499))
(assert (x308 x7699))
(assert (= x8230 (x3071 (x6292 x5086 x3403 x3380 x6212 x8230 x7797))))
(assert (x308 x4613))
(assert (= (and x6512 x3266) x5978))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x308 x6662))
(assert (not (x2741 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050))))
(assert (= (x2151 (x1300 x1391 x380 x5080 x487)) x487))
(assert (not (x2741 (x6754 x4838 x6412 x7245))))
(assert (= 0 (x5346 1084734224)))
(assert (x308 x8545))
(assert (= (and x4611 x2415) x6449))
(assert (= (=> (and (= 0 x1418) (= x4216 x4957) (= x3597 x2620) (= x2448 x2731) (= x6668 x5341) (= x4579 x2426) (= x3173 x309) (= x959 x8060) (= x4025 x2759) (= x644 x7023) (= x5263 x4250) (= x3402 2) (= x7544 false) (= x6931 true) (= x2833 x5029) (= x8532 x7905) (= x4183 x3661)) x6447) x6812))
(assert (= x3243 (and (not x4605) x5648)))
(assert (= x5676 (and x138 x127)))
(assert (x308 x5047))
(assert (x792 x1864))
(assert (=> (>= 10000 x5494) (= 0 (x5346 x5494))))
(assert (=> (>= 10000 x2129) (= (x5346 x2129) 0)))
(assert (= (or x1190 x6355) x160))
(assert (x308 x2096))
(assert (= (and x7708 x1689) x1023))
(assert (not (x2741 (x6754 64 x3285 2))))
(assert (=> (>= 10000 x4409) (= 0 (x5346 x4409))))
(assert (x308 x4953))
(assert (> (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493) 10000))
(assert (x308 x5700))
(assert (x792 x22))
(assert (x308 x7074))
(assert (= (x5346 (x6754 64 x1041 2)) (x6754 64 x1041 2)))
(assert (= (x3071 (x4041 x1185 x144 x3889 x2914 x2129)) x2129))
(assert (x308 x6343))
(assert (x308 x7215))
(assert (x308 x1725))
(assert (=> (>= 10000 x7245) (= (x5346 x7245) 0)))
(assert (x308 x2017))
(assert (x2569 x343))
(assert (x308 x4744))
(assert (=> (<= x6037 10000) (= 0 (x5346 x6037))))
(assert (=> (<= x5615 10000) (= (x5346 x5615) 0)))
(assert (x308 x4901))
(assert (x308 x2325))
(assert (x308 x2144))
(assert (> (x6292 x2135 x1295 x6039 x2766 x7689 x8433) 10000))
(assert (x792 x8109))
(assert (x308 x2620))
(assert (not (x2741 (x6754 64 x7133 12))))
(assert (x308 x8166))
(assert (=> (<= x3683 10000) (= (x5346 x3683) 0)))
(assert (= x3238 (or x4389 x1744 x4584 x8382 x266)))
(assert (> (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889) 10000))
(assert (> (x6754 64 x4343 7) 10000))
(assert (= x7252 (or x62 x5102)))
(assert (not (x2741 (x6754 64 x2762 100))))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x308 x3433))
(assert (x308 x3021))
(assert (x308 x8273))
(assert (x308 x4987))
(assert (> (x5919 x1185 x6644) 10000))
(assert (x308 x8553))
(assert (x308 x1960))
(assert (= (and x3383 (not x3521)) x5379))
(assert (=> (<= x8074 10000) (= 0 (x5346 x8074))))
(assert (x3057 x4167))
(assert (x308 x4680))
(assert (x308 x6276))
(assert (= x1847 (and x8544 x4332)))
(assert (=> (>= 10000 x6227) (= (x5346 x6227) 0)))
(assert (= x1334 (and x636 x1930)))
(assert (= x1793 (and (not x6466) x6722)))
(assert (= (or (and x7522 x111) (and x3108 x7565) (and x2843 x5484)) x3341))
(assert (=> (>= 10000 x6399) (= (x5346 x6399) 0)))
(assert (x308 x7023))
(assert (=> (<= x8194 10000) (= 0 (x5346 x8194))))
(assert (x308 x5743))
(assert (x308 x7716))
(assert (= (x6754 x352 x4242 x5347) (x5346 (x6754 x352 x4242 x5347))))
(assert (< (x6292 x4727 x3776 x7451 x6604 x2761 x2213) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4422))
(assert (x308 x3678))
(assert (= x1251 (=> (and (= (x8219 x1037) x8306) (= x3022 (= 0 x8306)) (= 128 x2617) (= x143 (x7553 (- x2319 128)))) (and (=> (and (and (= x2442 x3531) (= 0 x7171) (= 2 x6236) (= false x5299) (= x5940 x8013) (= 0 x2651) (= true x2372) (= x386 x7111)) x3022) x561) (=> (and (and (= x1369 x2976) (= (> x7944 18446744073709551615) x3922) x6661 (= x7944 (x3032 132)) (<= 1 x7420) (>= x143 196) (>= x8378 196) (= x2167 x6481) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x6919) (= x8446 x2368) (= (= x613 (x5452 132)) x6661) (= x5730 1722637450) (>= 127 x3975) (<= x3975 127) (= x8378 x143) (= 128 x4915) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8378) (= x7278 false) (= false x2900) (= x7420 (x8219 x5372)) (<= x143 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not x3022)) (and (=> (and (and (= 164 x1677) (= x1228 (x8120 (+ x7944 164))) (= (> x1228 x8378) x6556)) (not x3922)) (and (=> x6556 x7681) (=> (and (not x6556) (and (= x3091 (+ x8446 4)) (= (> x8378 (+ 31 x3091)) x6670))) (and (=> (and (and (= x6505 false) (= 0 x4958) (= true x331)) (not x6670)) x6628) (=> (and (and (= x3329 (x3032 x3091)) (= x2522 (> x3329 18446744073709551615))) x6670) (and (=> x2522 x2599) (=> (and (not x2522) (and (= (> x2543 x8378) x1987) (= x2543 (x8120 (+ x3329 x6460))) (= (+ 32 x3091) x6460))) (and (=> (and (and (= x8331 (= x5372 x333)) (or (and (not x8331) (and (= x2388 true) (= 132 x4958) (= x5923 false))) (and x8331 (and (> x6124 x5412) (= x1200 false) (or (>= 31 x1081) (>= x1081 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x7573 (* 32 x4940)) (= x5412 (+ x7573 160)) (= true x1262) (= (div x4076 32) x2601) (= (x8120 (+ x3282 x5412)) x6124) (= x3282 (x8120 (+ x6626 32))) (= x755 (x8120 (+ 32 x5412))) (= x6982 128) (= x4940 (div x1542 32)) (<= 161 x6124) (= (x8120 (+ x755 x3329)) x2988) (= (* x2601 32) x6626) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x7944) (<= x7944 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x4958 0) (= (x1814 x5412) x1081) (= x4076 (x8120 (+ x3329 31))) (= x1542 (x8120 (+ x7944 31))))))) (not x1987)) x6628) (=> x1987 x7681))))))))) (=> x3922 x2599)))))))
(assert (not (x2741 (x5919 x516 x5371))))
(assert (=> (>= 10000 x611) (= 0 (x5346 x611))))
(assert (x308 x3090))
(assert (= (and x2546 x5284) x4990))
(assert (=> (<= x7374 10000) (= (x5346 x7374) 0)))
(assert (x308 x151))
(assert (x3057 x84))
(assert (not (x2741 (x6754 x7051 x4961 x1640))))
(assert (= (x932 (x1300 x1391 x380 x5080 x487)) x5080))
(assert (= x3308 (and (not x4602) x2556)))
(assert (x308 x1746))
(assert (x308 x5066))
(assert (x308 x3335))
(assert (x308 x169))
(assert (=> (<= x4203 10000) (= 0 (x5346 x4203))))
(assert (= x3961 (and x5454 x490)))
(assert (x308 x2993))
(assert (= (x6754 64 1 x7526) (x5346 (x6754 64 1 x7526))))
(assert (= (and (not x5788) x5369) x4224))
(assert (= (and x1240 x5571) x4986))
(assert (=> (>= 10000 x2375) (= (x5346 x2375) 0)))
(assert (x308 x4915))
(assert (= (x5346 (x6754 x7051 x4961 x1640)) (x6754 x7051 x4961 x1640)))
(assert (not (x2741 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700))))
(assert (x308 x4428))
(assert (= (x4162 (x6754 x352 x4242 x5347)) x4242))
(assert (x308 x839))
(assert (x308 x3621))
(assert (= x3050 (x5843 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050))))
(assert (= (and x3308 x8523) x1500))
(assert (= (=> (= x4112 (+ x4912 x3581)) x3181) x5757))
(assert (< (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2741 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (x308 x5832))
(assert (= (or x7366 x5640) x8123))
(assert (< 10000 (x6754 64 x4998 100)))
(assert (x3057 x5150))
(assert (=> (>= 10000 x8147) (= (x5346 x8147) 0)))
(assert (x308 x3534))
(assert (= x3240 (and (not x8112) x4655)))
(assert (= x2043 (or x3631 (and x7635 (not x5670)))))
(assert (x308 x3819))
(assert (= (x4162 (x1300 x1185 x3977 x6373 x133)) x3977))
(assert (x308 x1000))
(assert (> (x6754 64 1 x113) 10000))
(assert (= (and x5917 x7907) x8062))
(assert (x308 x2202))
(assert (=> (>= 10000 x6185) (= 0 (x5346 x6185))))
(assert (= (x5346 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889)) (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889)))
(assert (= x521 (or x8371 x4783)))
(assert (x308 x6460))
(assert (=> (>= 10000 x2423) (= (x5346 x2423) 0)))
(assert (x308 x6894))
(assert (= (=> (and (and (<= x676 255) (= x4743 (= x676 255))) (or (and (and (= x1275 (+ 1 x676)) (= (x486 x4276) x5901) (= x8106 x2442) (= x1856 (x2321 255 x1275)) (= x5940 x6962) (= x741 false) (= x7171 32) (= 1 x2651) (= x5248 (x2321 255 x1275)) (= x7111 x6965) (= false x1970) (= (x6754 64 x676 36) x4276)) (not x4743)) (and (and (= x5403 true) (= x5363 2) (= x3531 x2442) (= false x710) (= x7171 36) (= 0 x2651) (= x8013 x5940) (= x386 x7111)) x4743))) x561) x213))
(assert (=> (<= x7655 10000) (= 0 (x5346 x7655))))
(assert (x792 x112))
(assert (=> (>= 10000 x7296) (= (x5346 x7296) 0)))
(assert (=> (<= x4788 10000) (= (x5346 x4788) 0)))
(assert (= 0 (x5346 486791245)))
(assert (x308 x4143))
(assert (= x3721 (or x5642 x2382 x3921 x4369 x8159 x4985 x71 x2493 x5565)))
(assert (x308 x8048))
(assert (x308 x3525))
(assert (x308 x8110))
(assert (x308 x7032))
(assert (x308 x8310))
(assert (= (x5346 (+ x5111 2)) (x5346 x5111)))
(assert (= (and (not x716) x699) x8519))
(assert (x308 x5226))
(assert (x308 x7209))
(assert (x308 x1116))
(assert (x308 x3983))
(assert (= x4982 (x5881 (x4041 x4982 x31 x2830 x5306 x2456))))
(assert (x308 x7762))
(assert (not (x2741 (x6754 64 x6421 11))))
(assert (not (x2741 (x5919 x4203 x6504))))
(assert (= x2774 (and x5871 (not x3322))))
(assert (= x8084 (x2151 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (= (and (not x8454) x8517) x3444))
(assert (= x870 (=> (= (+ x7407 292) x8491) x599)))
(assert (x308 x5600))
(assert (x308 x7967))
(assert (= x3430 (and x1321 (not x6543))))
(assert (> (x6754 x2135 x6129 x8099) 10000))
(assert (x792 x1214))
(assert (x308 x8269))
(assert (= 64 (x5881 (x6754 64 x3303 12))))
(assert (= x8531 x4095))
(assert (x308 x3091))
(assert (x308 x578))
(assert (= x4353 (=> (= (+ x4260 x4601) x2241) x6563)))
(assert (= x6185 (x2151 (x1300 x7655 x6392 x4048 x6185))))
(assert (x308 x5399))
(assert (= x2456 (x3071 (x4041 x4982 x31 x2830 x5306 x2456))))
(assert (x308 x7219))
(assert (x308 x7064))
(assert (x308 x4444))
(assert (= x6847 (=> (= (= x5277 0) x2108) (and (=> (and (not x2108) (and (= x5293 x8504) (= x6923 x114) (= x7611 x4948) (= x1012 x2150) (= x4470 x8180) (= x2027 x4102) (= x5073 x3103) (= x3291 x7666) (= x6278 x6774) (= x355 x6515) (= x2380 x7341) (= x6402 x5645) (= x2492 x5976))) x3480) (=> (and x2108 (and (= x6668 x5341) (= false x1668) (= x2620 x3597) (= x4025 x2759) (= x4957 x4216) (= x8532 x7905) (= x5442 2) (= x5029 x2833) (= x959 x8060) (= x5263 x4250) (= x7023 x644) (= x1418 0) (= x4183 x3661) (= x3173 x309) (= x6247 true) (= x4579 x2426) (= x2448 x2731))) x6447)))))
(assert (= x2794 (and x1521 x3073)))
(assert (= (x5346 (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (>= 128 x4982) x2386 (ite (>= 160 x4982) x4970 (ite (>= 192 x4982) x6333 x1291)))))))) (x6754 64 x6756 (ite (>= 32 x4982) x2607 (ite (<= x4982 64) x6590 (ite (<= x4982 96) x1654 (ite (<= x4982 128) x2386 (ite (>= 160 x4982) x4970 (ite (<= x4982 192) x6333 x1291)))))))))
(assert (x308 x2201))
(assert (= (=> (and (= x7926 x5263) (= x3173 x855) (= x1752 x644) (= x4489 x4216) (= x1488 2) (= x600 x4183) (= x3901 (x2321 255 x1483)) (= x5427 x8060) (= x2448 x4944) (= 0 x6040) (= x4025 x8009) (= x5840 x2407) (= x3901 x7832) (= x2426 x4987) (= x5550 x6668) (= x3597 x4806) (= x5029 x6357)) x935) x6381))
(assert (= x2282 (and (not x4731) x3436)))
(assert (x308 x3439))
(assert (x308 x640))
(assert (= (x3587 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)) x10))
(assert (x308 x6026))
(assert (x308 x7638))
(assert (x308 x3010))
(assert (x308 x1017))
(assert (= x660 (and x7919 x1712)))
(assert (x308 x5734))
(assert (x308 x6985))
(assert (=> (>= 10000 x2448) (= 0 (x5346 x2448))))
(assert (= (x2151 (x1300 x1198 x268 x4771 x1098)) x1098))
(assert (x308 x4458))
(assert (x308 x4929))
(assert (< (x5919 32 103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3524 x1647) x7752))
(assert (not (x2741 (x4041 x352 x6999 x653 x1979 x5899))))
(assert (x308 x4631))
(assert (x3057 x1214))
(assert (= x5324 (x932 (x6754 x4801 x2232 x5324))))
(assert (= (x2151 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)) x2003))
(assert (x308 x540))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)))
(assert (= (and x1658 x783) x1399))
(assert (= x4982 (x5881 (x5919 x4982 x8150))))
(assert (= 64 (x5881 (x6754 64 x3082 100))))
(assert (x308 x6073))
(assert (=> (>= 10000 x706) (= (x5346 x706) 0)))
(assert (= (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411) (x5346 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (x308 x2580))
(assert (= (and x669 x2877) x8338))
(assert (x308 x7063))
(assert (< (x6754 64 x6756 (ite (>= 32 x4982) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (<= x4982 128) x2386 (ite (>= 160 x4982) x4970 (ite (>= 192 x4982) x6333 x1291))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x6754 64 x551 11)))
(assert (= (and x1687 x5344) x1309))
(assert (x308 x6260))
(assert (x308 x1420))
(assert (x308 x6320))
(assert (= (or x4896 x5373) x7337))
(assert (x308 x1932))
(assert (x308 x3482))
(assert (x792 x1778))
(assert (= (x5881 (x6754 64 x6287 3)) 64))
(assert (< (x1300 x4203 x29 x3306 x7648) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x792 x7817))
(assert (= x5181 (or (and x3240 x4842) (and x2682 x6331))))
(assert (< 10000 (x4041 x7051 x7748 x1747 x7938 x3085)))
(assert (x308 x8299))
(assert (= (and x2840 x6712) x7228))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966)))
(assert (x308 x5976))
(assert (x308 x2978))
(assert (x308 x3655))
(assert (x308 x5706))
(assert (x3057 x3634))
(assert (x308 x2669))
(assert (x308 x2602))
(assert (= 0 (x5346 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (=> (<= x5192 10000) (= 0 (x5346 x5192))))
(assert (= 100 (x932 (x6754 64 x4998 100))))
(assert (x308 x382))
(assert (= (x5881 (x6754 64 x8532 36)) 64))
(assert (> (x1300 x5494 x4421 x4614 x7667) 10000))
(assert (= x5487 (or (and x3072 x5813) (and x8517 x8454) (and x4538 x933))))
(assert (x308 x5029))
(assert (x308 x2587))
(assert (> (x5919 x1391 x677) 10000))
(assert (x308 x8150))
(assert (x308 x6405))
(assert (x308 x1982))
(assert (=> (>= 10000 x8438) (= 0 (x5346 x8438))))
(assert (> (x6754 x3850 x7892 x6405) 10000))
(assert (= x1347 (=> (and (= x6516 (x7553 (- x7417 (mod (ite (< x3368 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- x5072 132) x8446) (= x8235 (< 0 x6516)) (= (x2321 1 x6866) x7417) (= x8428 (div x6866 2)) (= x3368 (ite (> x7417 0) x8428 (x2321 127 x8428)))) (and (=> (not x8235) x6376) (=> (and (and (= (x2321 1 x6866) x7657) (= (+ 32 x5072) x72) (= (= 0 x7657) x6398)) x8235) (and (=> (and (and (= x814 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6866)) (or (= x1795 0) (= x1795 32)) (= (* (ite (not (= x3368 0)) 1 0) 32) x1795) (= x2319 (+ x1795 x72))) x6398) x1251) (=> (and (not x6398) (and (or (and (= x3641 0) (not x2635)) (and x2635 (and (<= x3368 32) (= (x3733 x6080) x7060) (= x3641 32)))) (and (= x6080 (x5919 32 104)) (= (< 0 x3368) x2635)))) x1578)))))))
(assert (x308 x6638))
(assert (x308 x3554))
(assert (= (=> (and (= x304 (= 0 x2693)) (= (x8219 x1037) x2693) (= (x7553 (- x171 128)) x1352) (= x8136 128)) (and (=> (and x304 (and (= x5940 x8013) (= false x2184) (= 0 x7171) (= x3531 x2442) (= 2 x3620) (= true x7059) (= x7111 x386) (= x2651 0))) x561) (=> (and (and (= x2993 x8094) (<= x1352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x1352 196) (= (x8219 x5372) x8153) (>= x8153 1) (= x6948 false) (= (x4088 132) x1391) (= x4343 x465) (= (= (x2427 132) x4698) x1659) x1659 (= x2401 x1352) (<= x2753 127) (= x2655 51607134309459761954548520284799282329936326410793501951915747293203005440) (>= 127 x2753) (= x1824 x5739) (= (< 18446744073709551615 x1391) x8143) (= 1914215 x1746) (= 128 x4802) (= false x3381) (<= 196 x2401) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2401)) (not x304)) (and (=> x8143 x7536) (=> (and (and (= (> x4207 x2401) x4602) (= (x8120 (+ 164 x1391)) x4207) (= 164 x820)) (not x8143)) (and (=> x4602 x2362) (=> (and (and (= (+ x2993 4) x3525) (= (> x2401 (+ 31 x3525)) x8523)) (not x4602)) (and (=> (and x8523 (and (= (x4088 x3525) x6691) (= (< 18446744073709551615 x6691) x2274))) (and (=> (and (not x2274) (and (= (x8120 (+ x7738 x6691)) x4960) (= (< x2401 x4960) x7641) (= (+ x3525 32) x7738))) (and (=> (and (= x1253 (= x756 x333)) (not x7641)) (and (=> (and (and (= x6757 (x6754 64 x4343 3)) (= x8007 (x2321 1 x7781)) (= (ite (> x8007 0) x4215 (x2321 127 x4215)) x8102) (= x7781 (x2804 x6757)) (= (div x7781 2) x4215) (= (x7553 (- x8007 (mod (ite (< x8102 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5804) (= (> x5804 0) x7042)) x1253) (and (=> (and (and (= (+ x5502 160) x7723) (= x2431 (div (+ x8102 31) 32)) (= x5502 (* 32 x2431)) (= (= 0 x8102) x8201)) x7042) (and (=> (and (= (< 31 x8102) x4120) (not x8201)) (and (=> (and (and (= x8478 (x2804 x6757)) (= (* x446 256) x5259) (= (div x8478 256) x446)) (not x4120)) x3143) (=> (and x4120 (and (and (= x5016 (+ 160 x8102)) (= (x2259 x7707) x762) (= (> x5016 192) x1712) (= x7707 (x5919 32 x6757)) (= (+ 1 x7707) x6592)) (or (and x1712 (and (<= 160 x5016) (<= x5016 224) (= x8079 (x2259 x6592)))) (not x1712)))) x2614))) (=> x8201 x3143))) (=> (and (not x7042) (and (= 36 x4319) (= x4388 true) (= false x3221))) x651))) (=> (and (and (= 100 x4319) (= false x5291) (= x3720 true)) (not x1253)) x651))) (=> x7641 x2362))) (=> x2274 x7536))) (=> (and (not x8523) (and (= x4319 0) (= x4451 true) (= false x1768))) x651))))))))) x501))
(assert (x308 x7004))
(assert (x308 x3627))
(assert (x308 x7642))
(assert (x308 x6997))
(assert (=> (<= x5169 10000) (= (x5346 x5169) 0)))
(assert (x308 x3580))
(assert (= x4777 (or x6885 x7416)))
(assert (= (and x3252 x1670) x274))
(assert (x308 x1928))
(assert (= (x4162 (x4041 x4301 x7294 x5415 x3796 x1901)) x7294))
(assert (x308 x1890))
(assert (x308 x4076))
(assert (x308 x3305))
(assert (x308 x5628))
(assert (= (x5346 (x6754 64 x1011 11)) (x6754 64 x1011 11)))
(assert (x308 x7736))
(assert (x308 x3069))
(assert (= (=> (= (= x4350 0) x5718) (and (=> (and (and (= x2407 x7969) (= false x340) (= x1314 true)) x5718) x6381) (=> (and (= x2690 (< x7969 64)) (not x5718)) (and (=> (and x2690 (and (= x2407 0) (= true x173) (= false x6667))) x6381) (=> (and (and (= (x4407 290) x612) (= x8142 0) (= x312 354) (= x7352 (x507 x3089)) (= (div x3518 2) x8347) (= (x6754 64 x551 11) x3281) (= x1052 (x6754 64 x551 11)) (= (x6754 64 x2448 3) x2853) (= x7129 (x2321 1 x3518)) (= 450 x3049) (= (+ 2 x1052) x6770) (= (x2804 x2853) x3518) (= x3089 (+ x8144 1)) (= x6422 (x4407 322)) (= (x4261 x6770) x8151) (= (x7553 (- x7129 (mod (ite (< x2645 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2188) (= x2645 (ite (< 0 x7129) x8347 (x2321 127 x8347))) (= x8144 (x6754 64 x551 11)) (= (> x2188 0) x8349)) (not x2690)) (and (=> (and (not x8349) (and (= x8418 false) (= 36 x2407) (= true x7851))) x6381) (=> (and (and (= x7556 (* x4060 32)) (= x4060 (div (+ 31 x2645) 32)) (= x7897 (= x2645 0)) (= x1263 (+ 548 x7556))) x8349) (and (=> (and (not x7897) (= x1238 (< 31 x2645))) (and (=> (and (not x1238) (and (= x4744 (* 256 x5627)) (= x5627 (div x6058 256)) (= (x2804 x2853) x6058))) x934) (=> (and x1238 (and (or (and x1714 (and (>= 612 x5933) (<= 548 x5933) (= (x2259 x4378) x6579))) (not x1714)) (and (= x1714 (> x5933 580)) (= (+ x6107 1) x4378) (= (x5919 32 x2853) x6107) (= x5933 (+ 548 x2645)) (= (x2259 x6107) x4556)))) x8392))) (=> x7897 x934))))))))) x5753))
(assert (= (x5881 (x6754 64 x6898 36)) 64))
(assert (= x3063 (or x913 x5552)))
(assert (=> (<= x2643 10000) (= 0 (x5346 x2643))))
(assert (= (x4041 x8305 x8444 x811 x4050 x7088) (x5346 (x4041 x8305 x8444 x811 x4050 x7088))))
(assert (= (x932 (x6754 64 x4343 7)) 7))
(assert (not (x2741 (x5919 x4727 x7961))))
(assert (= x5373 (and x5595 x5978)))
(assert (x308 x3891))
(assert (= (x932 (x4041 x3850 x177 x7031 x7991 x4266)) x7031))
(assert (= 64 (x5881 (x6754 64 x6108 6))))
(assert (x308 x7149))
(assert (= (x2151 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)) x5545))
(assert (x308 x6733))
(assert (= (or x3685 x6047 x7331) x451))
(assert (=> (<= x7160 10000) (= (x5346 x7160) 0)))
(assert (= (x5346 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x308 x8404))
(assert (x2569 x3518))
(assert (x2741 3628442803))
(assert (x308 x2365))
(assert (= x4166 (and x5815 x8547)))
(assert (= x1041 (x4162 (x6754 64 x1041 6))))
(assert (x308 x77))
(assert (x308 x6250))
(assert (x308 x7512))
(assert (x308 x2323))
(assert (x308 x6865))
(assert (x308 x4357))
(assert (x308 x8009))
(assert (x308 x4070))
(assert (=> (<= x1537 10000) (= 0 (x5346 x1537))))
(assert (= x6399 (x3587 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (< (x5919 x352 x7287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7562))
(assert (x308 x177))
(assert (= x7918 (=> (and (= false x202) (= 0 x1551) (= x3995 true)) x2916)))
(assert (= (x3933 x352 x3635 x7997 x2531 x4877 x10 x593) (x5346 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593))))
(assert (x308 x6370))
(assert (x3057 x4232))
(assert (=> (>= 10000 x4998) (= 0 (x5346 x4998))))
(assert (x308 x4763))
(assert (x308 x4216))
(assert (x308 x751))
(assert (x308 x93))
(assert (= (and x4833 x6532) x5732))
(assert (= x3683 (x2151 (x1300 x7051 x5930 x6429 x3683))))
(assert (< (x6754 64 x5691 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038) 10000))
(assert (x308 x1898))
(assert (= x5755 (=> (= x5312 (= 0 x3203)) (and (=> (and (and (= x3618 x1235) (= x2424 true) (= x1166 false)) x5312) x4392) (=> (and (= (> 64 x3618) x8005) (not x5312)) (and (=> (and x8005 (and (= x8407 true) (= x1235 0) (= false x2681))) x4392) (=> (and (not x8005) (and (= 354 x6036) (= x6001 x4065) (= x1529 x5543) (= x7858 x6055) (= x3910 x1033) (= x6997 x5213) (= x1413 x1867) (= x1851 x8560) (= x159 x4719) (= x42 x1006) (= x6025 x5110) (= (x5009 322) x1738) (= (x5009 290) x6025) (= x5624 x3106) (= x13 x7762) (= x2238 x3828) (= x6364 x8469))) x982)))))))
(assert (x308 x1061))
(assert (x308 x1950))
(assert (x308 x6154))
(assert (x308 x8230))
(assert (x308 x2990))
(assert (x308 x7238))
(assert (= x5086 (x5881 (x4041 x5086 x2153 x8353 x3686 x1447))))
(assert (=> (>= 10000 x1484) (= (x5346 x1484) 0)))
(assert (x2741 1461501637330902918203684832716283019655932542975))
(assert (= x3076 (=> (and (or (not x6482) x6482) (= (= 0 x8364) x6482)) x4879)))
(assert (=> (>= 10000 x6605) (= 0 (x5346 x6605))))
(assert (x308 x5844))
(assert (= x5714 (=> (and (= x1633 x8009) (= x5795 x4806) (= x4489 x7534) (= x628 x5427) (= x855 x5920) (= x600 x8232) (= x8463 1) (= x7926 x3194) (= x3867 0) (= x6357 x3670) (= x5902 x1752) (= x5628 x7832) (= x4987 x3102) (= x4721 x5550) (= x4944 x4702)) x6340)))
(assert (x308 x4287))
(assert (x308 x5932))
(assert (< (x6754 64 x2375 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2741 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (x308 x2510))
(assert (< (x6754 64 x3303 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x8154 (and x5566 (not x3640))))
(assert (= (and (not x6420) x2950) x2889))
(assert (x308 x706))
(assert (x2741 49960157028345592648530624234191905822321225401495951855107091972775720517632))
(assert (=> (<= x7065 10000) (= 0 (x5346 x7065))))
(assert (x308 x6696))
(assert (= (x932 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024)) x494))
(assert (x308 x6567))
(assert (= x2261 x6826))
(assert (x308 x5467))
(assert (= (x4162 (x1300 x352 x8553 x6809 x7834)) x8553))
(assert (not (x2741 (x1300 x7051 x5930 x6429 x3683))))
(assert (x308 x7712))
(assert (> (x6292 x1185 x6425 x8518 x6985 x6699 x7844) 10000))
(assert (= x1185 (x5881 (x5919 x1185 x6644))))
(assert (x308 x2871))
(assert (x308 x2933))
(assert (= x800 (and x4007 x3184)))
(assert (x308 x2745))
(assert (x308 x2875))
(assert (= 64 (x5881 (x6754 64 1 x7526))))
(assert (= x5229 (and x5395 x7484)))
(assert (x308 x3232))
(assert (x308 x5128))
(assert (x308 x5150))
(assert (= (=> (and (= x5226 (x7553 (- x2241 128))) (= (x8219 x1037) x201) (= 128 x6489) (= x130 (= x201 0))) (and (=> (and (and (= (<= x3142 x379) x6575) (= (and x6575 x2102) x5770) (= x379 (x978 x333)) (= (x978 x1037) x1890) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3142 x1890)) x2102)) (not x130)) (and (=> (and (and (= x787 (> x2405 18446744073709551615)) (>= x5226 196) (= x7256 false) (>= x207 0) (<= x6541 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3809 127) (= x5226 x6541) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x207) (= x206 x6093) (= 128 x6363) (= (= (x7447 132) x910) x6238) (<= 196 x6541) (= x4491 (x8219 x5372)) (= x1914 false) (= x7925 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x7889 x4552) (= x6611 x207) (= x7302 (x2175 x1037)) (= x3515 (x978 x333)) (= (x5033 132) x2405) (= (- x3515 x3142) x1742) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5226) (= x6756 x7106) x6238 (= x6911 3521034783) (>= x4491 1) (= x207 (+ x7302 x3142)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3142 x7302)) (<= x3809 127)) x5770) (and (=> (and (and (= x5678 (x8120 (+ x2405 164))) (= 164 x2122) (= x6544 (> x5678 x6541))) (not x787)) (and (=> x6544 x4340) (=> (and (and (= (> x6541 (+ x3320 31)) x3539) (= x3320 (+ x7889 4))) (not x6544)) (and (=> (and x3539 (and (= (> x1503 18446744073709551615) x3681) (= (x5033 x3320) x1503))) (and (=> x3681 x4578) (=> (and (not x3681) (and (= x3322 (> x3879 x6541)) (= x3879 (x8120 (+ x1503 x6269))) (= x6269 (+ 32 x3320)))) (and (=> x3322 x4340) (=> (and (not x3322) (and (and (= (x8193 128) x2809) (<= 32 x4982) (= (x8193 160) x1336) (= x8444 (x8193 128)) (= x2078 (x4041 x8305 x8444 x811 x4050 x7088)) (= x3193 (x8193 192)) (= (x8193 160) x2830) (= x8366 (x8193 128)) (= x706 (x8193 224)) (= (x6754 x4982 x8366 x1336) x6590) (= x4613 (x8193 160)) (= (x4648 x8507) x2433) (= x4732 (x8193 192)) (= (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966) x6333) (= x212 (x8120 (+ x2405 128))) (<= x4982 224) (= (x8193 128) x4409) (= (x8193 160) x8186) (= x7028 (x8193 128)) (= (x6754 64 x206 7) x2888) (= x1718 (x8193 160)) (= (x1300 x4982 x3441 x1676 x4732) x1654) (= x8247 (x8120 (+ 32 x212))) (= x7293 (x8193 256)) (= (x8193 192) x4050) (= x1030 (x1300 x8305 x7028 x1718 x1000)) (= x6208 (x8193 128)) (= x3735 (x8193 160)) (= (x8193 192) x1537) (= (x8193 160) x1676) (= (x8193 256) x6162) (= x1291 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) (= (x8193 224) x4223) (= x6718 (x6754 x8305 x2809 x4963)) (= x6227 (x8193 192)) (= (x8193 160) x4963) (= (x8193 160) x811) (= x31 (x8193 128)) (= (x8193 320) x3783) (= x8238 (x4383 0)) (= (x8193 288) x5966) (= (x8193 288) x6648) (= x2386 (x4041 x4982 x31 x2830 x5306 x2456)) (= (x8193 192) x4724) (= x5954 (x8193 128)) (= x8166 (x8193 128)) (= x7273 (x8193 128)) (= x1323 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610)) (= (x5919 x8305 x6208) x5725) (= x2456 (x8193 224)) (= (x6292 x8305 x4409 x3735 x4724 x5489 x7293) x5507) (= x5489 (x8193 224)) (= x1246 (x8193 256)) (= (x6292 x4982 x7273 x8186 x1537 x706 x4512) x4970) (= (x8193 256) x4512) (= (x8193 192) x5306) (= (ite (= x8305 0) x8238 (ite (>= 32 x8305) x5725 (ite (<= x8305 64) x6718 (ite (>= 96 x8305) x1030 (ite (>= 128 x8305) x2078 (ite (>= 160 x8305) x5507 x1323)))))) x528) (= x7686 (x8193 128)) (= x627 (x8120 (+ x2405 128))) (= (x8193 160) x8438) (= x6949 (x8193 192)) (= x7088 (x8193 224)) (= x3205 (x8193 256)) (= x5985 (x8193 224)) (= (= x2433 0) x4665) (= x8150 (x8193 128)) (= (x8193 288) x3610) (= x1029 (x8193 224)) (= (x7553 (- x8247 128)) x4982) (= x5187 (x8193 160)) (= x3441 (x8193 128)) (= (- x4982 32) x8305) (= x1000 (x8193 192)) (= x2607 (x5919 x4982 x8150)) (= (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (>= 128 x4982) x2386 (ite (>= 160 x4982) x4970 (ite (>= 192 x4982) x6333 x1291))))))) x8507)) (or (and x4665 (and (= x2128 true) (= x937 false) (= x1110 132))) (and (not x4665) (and (and (= (x1046 320) x8297) (= (x1046 192) x1434) (= (x1046 224) x5001) (= x3862 (x1046 128)) (= (x1046 256) x7953) (= (x1046 128) x5310) (= x573 (x1046 128)) (= (x1046 128) x570) (= x3019 (x7553 (- x5999 128))) (= (x1046 160) x7137) (= (x4041 x3019 x3862 x1710 x715 x7694) x8160) (= (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297) x3734) (= (x8120 (+ 128 x1503)) x5999) (= (x1046 160) x4009) (= x7694 (x1046 224)) (= x4101 (x1046 160)) (= (x1046 288) x3286) (= (x1046 128) x6029) (= (x1046 160) x1710) (= (= (ite (= 0 x3019) x3566 (ite (>= 32 x3019) x2083 (ite (<= x3019 64) x2237 (ite (<= x3019 96) x5499 (ite (<= x3019 128) x8160 (ite (>= 160 x3019) x3388 (ite (<= x3019 192) x1178 x3734))))))) x2433) x3949) (= (x6754 x3019 x573 x5207) x2237) (= (x1046 192) x2332) (>= 224 x3019) (= (x6292 x3019 x4312 x4101 x3816 x5001 x1691) x3388) (= x4312 (x1046 128)) (= x3816 (x1046 192)) (= x3493 (x1046 288)) (= x6086 (x1046 160)) (= (x1046 160) x5207) (= (x1046 192) x715) (= (x1046 224) x8323) (= x3566 (x4383 0)) (= x981 (x1046 128)) (= x2792 (x1046 256)) (= (x1300 x3019 x981 x4009 x1972) x5499) (= (x1046 256) x1691) (= x1178 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493)) (= x1972 (x1046 192)) (= x2083 (x5919 x3019 x5310)) (= x681 (x1046 224))) (or (and x3949 (and (= (x1828 128) x3492) (= x3928 (x1828 160)) (= (x1828 192) x1991) (= 0 x1110) (= (x8120 (+ x5586 x294)) x6643) (= x5464 (x8120 (+ x2405 128))) (= x6071 (x1828 128)) (= (x8120 (+ 32 x7513)) x5586) (= false x4283) (= x1051 (* 32 x4090)) (>= x4203 32) (= x3550 (x1828 224)) (= (x6292 x4203 x2643 x5854 x1971 x1016 x518) x5612) (= x6399 (x1828 256)) (= x1786 (x8120 (+ 31 x2405))) (= (x1828 128) x8457) (< x294 x6643) (= (div x1786 32) x4090) (= x8283 (x1300 x5086 x6071 x7368 x6250)) (= (x1828 160) x3306) (= x1016 (x1828 224)) (= (x4041 x4203 x3492 x6286 x1991 x7015) x125) (= x294 (+ x1051 160)) (= x6237 (x8120 (+ 32 x294))) (= x7590 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)) (= (x1828 160) x3380) (= (x1828 160) x7368) (= (x1828 128) x4422) (= x6286 (x1828 160)) (= (x6754 x4203 x6076 x7017) x1318) (= x6076 (x1828 128)) (= (x1828 192) x3686) (= (x4383 0) x5046) (>= 224 x4203) (= (x6754 x5086 x4422 x4929) x1594) (= (x1828 256) x7797) (= (x1828 160) x5854) (= (x1828 160) x5879) (= (x1828 192) x1971) (= x4038 (x8120 (+ x6237 x1503))) (= (x1828 288) x2038) (= (x1828 160) x8353) (= x2643 (x1828 128)) (= (div x4096 32) x6865) (= x7215 (x7100 x294)) (= x6456 true) (= (x1828 224) x5715) (= (x1828 256) x518) (= x4096 (x8120 (+ 31 x1503))) (= (x1828 160) x4929) (= (x5919 x4203 x6504) x941) (>= x6643 161) (= x326 (x8120 (+ 160 x2405))) (= x952 (ite (= x5086 0) x5046 (ite (>= 32 x5086) x6879 (ite (>= 64 x5086) x1594 (ite (<= x5086 96) x8283 (ite (<= x5086 128) x1332 (ite (<= x5086 160) x48 x7590))))))) (= x5294 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038)) (= (x4041 x5086 x2153 x8353 x3686 x1447) x1332) (= (x1828 288) x1265) (= (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (>= 64 x4203) x1318 (ite (>= 96 x4203) x6457 (ite (<= x4203 128) x125 (ite (>= 160 x4203) x5612 (ite (>= 192 x4203) x5294 x6741))))))) x6013) (= (x1828 128) x859) (= (x1828 224) x7015) (= x458 (x1828 288)) (= x6741 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429)) (= x29 (x1828 128)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x2405) (>= x2405 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x1828 320) x1429) (= x6253 (x1828 160)) (= x6879 (x5919 x5086 x8457)) (= (x1828 192) x6250) (= x6457 (x1300 x4203 x29 x3306 x7648)) (= x1447 (x1828 224)) (= x3403 (x1828 128)) (= x6504 (x1828 128)) (= (x1828 192) x7638) (= (x7553 (- (mod (+ 32 x1636) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x4203) (= x7648 (x1828 192)) (= (x1828 256) x1082) (= x7602 128) (= x3326 (x6754 64 x206 7)) (= x5086 (- x4203 32)) (= (x1828 128) x7160) (= x7513 (* 32 x6865)) (= x3461 (x1828 224)) (= x48 (x6292 x5086 x3403 x3380 x6212 x8230 x7797)) (= x8230 (x1828 224)) (or (<= x7215 31) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x7215)) (= (x1828 192) x5467) (= x6660 (x1828 128)) (= x1636 (x8120 (+ 128 x2405))) (= (x1828 160) x7017) (= (x1828 192) x6212) (= x3924 (x1828 256)) (= (x1828 128) x2153) (= x4168 (x1828 192)))) (and (not x3949) (and (= false x8387) (= 132 x1110) (= true x8264))))))))) x5851))))) (=> (and (and (= x2664 true) (= 0 x1110) (= false x955)) (not x3539)) x5851))))) (=> x787 x4578))) (=> (and (= 0 x1150) (not x5770)) x8525))) (=> (and x130 (and (= x2442 x3531) (= x2651 0) (= 2 x5273) (= x386 x7111) (= x5940 x8013) (= false x7747) (= x7793 true) (= 0 x7171))) x561))) x6563))
(assert (=> (>= 10000 x6648) (= 0 (x5346 x6648))))
(assert (x308 x1681))
(assert (x308 x7407))
(assert (x308 x314))
(assert (= x6663 (and x7232 x2298)))
(assert (x308 x7633))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x8532 36)))
(assert (x308 x2761))
(assert (x308 x2973))
(assert (= x4782 (x932 (x6292 x4801 x7411 x4782 x1324 x2659 x1983))))
(assert (x308 x1073))
(assert (x308 x7595))
(assert (= x336 (and x8248 x3577)))
(assert (x308 x8156))
(assert (= x3380 (x932 (x6292 x5086 x3403 x3380 x6212 x8230 x7797))))
(assert (x308 x5332))
(assert (x308 x9))
(assert (= (x4162 (x5919 32 x3913)) x3913))
(assert (= x7268 (=> (= x3604 (= 0 x4851)) (and (=> (and (and (= x2442 x3531) (= x7111 x386) (= x674 true) (= 0 x2651) (= x7330 2) (= false x5619) (= x5940 x8013) (= x5165 x7171)) x3604) x561) (=> (and (and (= x6098 x3929) (= x5249 x1641) (= x324 x5480) (= x8288 x148)) (not x3604)) x7144)))))
(assert (x308 x7917))
(assert (x308 x5250))
(assert (= (or (and x5536 x5912) (and x4079 x8470) (and x5216 x4699)) x7916))
(assert (=> (<= x5199 10000) (= 0 (x5346 x5199))))
(assert (not (x2741 (x6292 x4982 x7273 x8186 x1537 x706 x4512))))
(assert (x3057 x891))
(assert (x308 x4630))
(assert (=> (<= x7968 10000) (= (x5346 x7968) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2253 10)))
(assert (= (and x3312 x6514) x1095))
(assert (x308 x1908))
(assert (> (x4041 x5494 x7249 x5828 x4400 x2630) 10000))
(assert (x308 x8458))
(assert (= (x932 (x6754 x4982 x8366 x1336)) x1336))
(assert (=> (>= 10000 x4732) (= (x5346 x4732) 0)))
(assert (= x1644 (x4162 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (=> (>= 10000 x2821) (= 0 (x5346 x2821))))
(assert (= (x4162 (x5919 32 x6410)) x6410))
(assert (x308 x2696))
(assert (x308 x1991))
(assert (> (x5919 x4727 x7961) 10000))
(assert (x308 x1568))
(assert (x308 x6303))
(assert (= (x5346 (x6292 x516 x3800 x1794 x5062 x7487 x7784)) (x6292 x516 x3800 x1794 x5062 x7487 x7784)))
(assert (x308 x2816))
(assert (> (x5919 32 104) 10000))
(assert (x308 x5086))
(assert (= x3244 (or x5181 x6114 x5058 x2065 x5800)))
(assert (x308 x755))
(assert (x792 x7049))
(assert (x308 x5840))
(assert (x308 x1136))
(assert (> (x4041 x7491 x2618 x1565 x4794 x3415) 10000))
(assert (not (x2741 (x6754 64 x5615 36))))
(assert (= x1490 (and x1337 x911)))
(assert (x308 x5805))
(assert (x308 x3067))
(assert (x308 x5651))
(assert (x308 x6100))
(assert (= (x5346 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (= x7245 (x932 (x6754 x4838 x6412 x7245))))
(assert (not (x2741 (x1300 x1185 x3977 x6373 x133))))
(assert (x308 x4556))
(assert (x308 x3103))
(assert (=> (>= 10000 x6233) (= 0 (x5346 x6233))))
(assert (x308 x724))
(assert (= x5001 (x3071 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (= x8198 (=> (and (= x3750 x2201) (= false x1540) (= x61 x2248) (= x61 true) (= x5079 x7404) (= true x661) (= false x3171) (= x7856 x166)) x6804)))
(assert (x308 x7417))
(assert (= x6679 (x3071 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (x308 x403))
(assert (x308 x2311))
(assert (< 10000 (x6754 64 x3739 12)))
(assert (x308 x4264))
(assert (x792 x7710))
(assert (x308 x7723))
(assert (x308 x1037))
(assert (x308 x3856))
(assert (= (or x468 x5765) x4930))
(assert (x308 x1348))
(assert (x308 x7259))
(assert (not (x2741 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (x308 x3448))
(assert (x308 x4992))
(assert (x308 x4512))
(assert (not (x2741 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x5356))
(assert (x308 x4318))
(assert (x308 x3036))
(assert (x308 x4642))
(assert (x308 x2604))
(assert (=> (>= 10000 x6032) (= 0 (x5346 x6032))))
(assert (x308 x7901))
(assert (= 0 (x5346 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (x308 x582))
(assert (x308 x1338))
(assert (= x7095 (x3587 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x8301))
(assert (= (and x3788 x2282) x3198))
(assert (= x4538 (and (not x7794) x7899)))
(assert (=> (<= x5799 10000) (= 0 (x5346 x5799))))
(assert (x3057 x5984))
(assert (=> (>= 10000 x573) (= (x5346 x573) 0)))
(assert (= x6332 (and x4562 x1054)))
(assert (x308 x4487))
(assert (x308 x3589))
(assert (x308 x5122))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x1041 6)))
(assert (= x3850 (x5881 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (= (x3071 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)) x398))
(assert (= (=> (and (= x4749 (x5523 x4318)) (= (>= x4749 x5716) x7357) (<= 1 x5372) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6857) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2874) (<= x6873 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2730 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1891) (<= x1986 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2730 x1891) (<= x5420 1461501637330902918203684832716283019655932542975) (<= x6105 1461501637330902918203684832716283019655932542975) (<= 0 x6873) (<= x5372 1461501637330902918203684832716283019655932542975) (= x5492 x2253) (<= x5716 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4681 (< 0 (x8219 x6957))) (<= 1 x1891) x3140 (>= x7473 0) x4681 (>= x6257 0) (<= 1 x6957) (>= x5420 0) (<= x6957 1461501637330902918203684832716283019655932542975) (>= x4835 0) (= x6105 x5372) (= x3140 (> (x8219 x333) 0)) (<= x6257 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x333) (>= x2730 1) (<= 0 x6857) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1780) (not (= x333 x5372)) x5509 (<= 1 x333) (not (= x6957 x5372)) (<= 0 x1780) (>= x2874 0) (not (= x6957 x2730)) (>= x5716 0) (>= x1986 0) (not (= x2730 x5372)) (>= 1461501637330902918203684832716283019655932542975 x4835) (not (= x333 x6957)) (= x4318 x4835) (= x6444 (< 0 (x8219 x5372))) x6444 (= (< 0 (x8219 x2730)) x5509) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7473) (not (= x333 x2730)) (= x4199 0) (>= x6105 1) (= x2534 0)) (and (=> (and x7357 (and (= x1130 (x5523 x387)) (< (+ x2020 x7757) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4835 x387) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x354) (= x354 (+ x2020 x7757)) (= x6215 68) (= x7505 2001815235) (= (x8219 x5372) x5857) (= x7757 x5716) (= false x3717) (= x354 x6814) (= 0 x1821) (= x684 (- x1130 x7757)) (= x8399 x6636) (= false x4768) (= x2253 x6636) (>= x5857 1) (<= x2612 127) (= x663 x4835) (= (= 1 x2325) x7494) (= false x7774) (= x8502 0) (>= x354 0) (= x2020 (x6779 x5372)) (>= 127 x2612))) (and (=> (and (not x7494) (and (= x2798 x5079) (= x4763 x2201) (= x7856 x2688))) x8198) (=> (and (and (or (and x7483 (and (= x8268 (ite (not (= x663 x1194)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x1194))) (and (not x7483) (= (ite x7483 1 0) x8268))) (and (= 2 x7239) (= x7483 (not (= x5372 x663))))) x7494) x4515))) (=> (and (not x7357) (and (= x2798 x7404) (= x1720 true) (= x6802 false) (= x1720 x2248) (= x3750 x4763) (= x2688 x166))) x6804))) x8489))
(assert (=> (>= 10000 x1324) (= (x5346 x1324) 0)))
(assert (= x5211 (or x8354 x7916 x2742 (and x4240 x1559) x479 (and x6161 x5608) x6210)))
(assert (x308 x3892))
(assert (x308 x1295))
(assert (x308 x613))
(assert (x308 x6053))
(assert (x308 x3659))
(assert (= 36 (x932 (x6754 64 x676 36))))
(assert (= x346 (or x5417 (and (not x6482) x3592))))
(assert (= x1686 (and x1535 (not x5722))))
(assert (= (x5881 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420)) x4727))
(assert (= (x5843 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297)) x3286))
(assert (= x5745 (and (not x4759) x3095)))
(assert (= (and x4394 (not x7604)) x2309))
(assert (x308 x156))
(assert (= x1406 x2000))
(assert (= (x5881 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) x1391))
(assert (x308 x389))
(assert (x5886 x7260))
(assert (not (x2741 (x6754 64 x5082 6))))
(assert (x308 x7245))
(assert (x308 x6350))
(assert (=> (>= 10000 x1747) (= (x5346 x1747) 0)))
(assert (=> (<= x981 10000) (= 0 (x5346 x981))))
(assert (x308 x7312))
(assert (x308 x1963))
(assert (= x992 (or x3721 x8277 x2518)))
(assert (x308 x1175))
(assert (= (and x1254 x2290) x6585))
(assert (x308 x8106))
(assert (= x4580 (x932 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562))))
(assert (= x1910 (x3587 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914))))
(assert (= x5177 (=> (= x2252 (< 0 x8391)) (and (=> (and (and (= x3141 x6565) (= x4811 x2725)) x2252) x5264) (=> (and (not x2252) (and (= x3046 4) (= x5516 true) (= false x6441))) x383)))))
(assert (= (=> (and (= x7348 x8106) (= x6477 x6962) (= x6965 x6493) (= x4701 x676)) x213) x3087))
(assert (x308 x4702))
(assert (x308 x198))
(assert (=> (<= x5358 10000) (= (x5346 x5358) 0)))
(assert (x308 x5902))
(assert (x308 x7807))
(assert (= x1391 (x5881 (x6292 x1391 x7138 x7296 x1932 x3069 x8182))))
(assert (x308 x2837))
(assert (= x7090 (=> (and (= x1272 (x8120 (+ x5364 32))) (= (ite (< 0 x2179) x6324 (x2321 127 x6324)) x2885) (= x4984 (x507 x1182)) (= x2179 (x2321 1 x791)) (= x791 (x2804 x3913)) (= (x8120 (+ 32 x7994)) x8156) (> x7994 x3359) (<= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639933) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x3359) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x3359) (and (<= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639838) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x3359))) (= x7994 (x8120 (+ 32 x2595))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x3359) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x3359) (and (>= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x3359))) (= x2678 (x7553 (- x7994 x3359))) (< x7994 x1272) (= (x8120 (+ x8055 32)) x2595) (= x3913 (x6754 64 x6287 3)) (= 0 x7142) (= (x8120 (+ 32 x3359)) x8055) (= x7557 (x7553 (- x1272 x7994))) (= (x6754 64 x6421 11) x4247) (or (>= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x3359))) (= x5547 (> x2886 0)) (= x40 (x6754 64 x6421 11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3359) (= (x7553 (- x2179 (mod (ite (> 32 x2885) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2886) (= x2499 (x7553 (- x7557 32))) (= (div x791 2) x6324) (= x3701 (x6130 x63)) (= (+ x40 2) x63) (= (+ 1 x4247) x1182) (= (x7553 (- x2678 32)) x4631) (= x5364 (x8120 (+ x8156 2))) (<= x3359 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1400 (x6754 64 x6421 11))) (and (=> (and (and (= x7286 (x8120 (+ x1272 32))) (<= 1 x251) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1272) (= x5109 (* 32 x2732)) (> x251 x1272) (<= x1272 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2732 (div (+ x2885 31) 32)) (= (x8120 (+ x1272 (mod (+ 32 x5109) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x251) (= x8248 (= x2885 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1272)) x5547) (and (=> (and (= x2404 (< 31 x2885)) (not x8248)) (and (=> (and (and (and (= (x8120 (+ x7286 x2885)) x4317) (= (x2259 x8017) x6089) (= (< x5008 x4317) x1430) (= (x5919 32 x3913) x8017) (= x5008 (x8120 (+ x7286 32))) (= x5233 (+ x8017 1))) (or (not x1430) (and x1430 (and (= x3343 (x2259 x5233)) (not (< x2924 x4317)) (= x2924 (x8120 (+ x5008 32))))))) x2404) x7714) (=> (and (and (= x6683 (x2804 x3913)) (= (* x7684 256) x668) (= x7684 (div x6683 256))) (not x2404)) x7854))) (=> x8248 x7854))) (=> (and (and (= x1937 false) (= x758 36) (= x1341 true)) (not x5547)) x624)))))
(assert (= (x5881 (x6754 x1198 x3346 x5783)) x1198))
(assert (x308 x4125))
(assert (= x1187 (and x558 (not x3684))))
(assert (x3057 x6213))
(assert (x308 x8058))
(assert (< (x6754 64 x5372 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2394))
(assert (= (and x5596 x1022) x2408))
(assert (x308 x1587))
(assert (=> (<= x4838 10000) (= (x5346 x4838) 0)))
(assert (=> (<= x7748 10000) (= 0 (x5346 x7748))))
(assert (x308 x2482))
(assert (=> (>= 10000 x5176) (= 0 (x5346 x5176))))
(assert (x308 x5105))
(assert (x308 x4982))
(assert (=> (<= x5324 10000) (= 0 (x5346 x5324))))
(assert (= (x4162 (x6754 64 x4998 100)) x4998))
(assert (=> (>= 10000 x5691) (= (x5346 x5691) 0)))
(assert (x308 x2225))
(assert (=> (<= x696 10000) (= 0 (x5346 x696))))
(assert (= (x2151 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)) x786))
(assert (x308 x8012))
(assert (= 12 (x932 (x6754 64 x3739 12))))
(assert (x308 x4710))
(assert (x2741 65535))
(assert (x308 x3688))
(assert (= (=> (= x3003 (= x1372 0)) (and (=> (and (and (= x2442 x3531) (= x2651 0) (= x7171 x2573) (= true x4227) (= x8013 x5940) (= x386 x7111) (= false x4770) (= 2 x4169)) x3003) x561) (=> (and (and (= x1299 x4680) (= x8078 x2159) (= x6970 x7847) (= x6140 x1589)) (not x3003)) x2137))) x6311))
(assert (x308 x3938))
(assert (x308 x5809))
(assert (x308 x2219))
(assert (x308 x3325))
(assert (x308 x851))
(assert (x308 x3939))
(assert (x308 x2963))
(assert (= (x5881 (x6754 64 x7470 36)) 64))
(assert (x308 x43))
(assert (= x330 (and x5581 x6827)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x5494 x6209)))
(assert (= (x932 (x6754 64 x2375 2)) 2))
(assert (x308 x8185))
(assert (= (or (and x3272 x4475) (and x1892 x4265) (and x556 x1817)) x5983))
(assert (= x1782 (not (and (= false x5544) (= true x4017) (= (x6808 128) x5223) (= x5010 false) (= x1719 false) (= x3295 true) (= false x3538) (= x5223 x4248) (= x6200 false) (= x5197 0) (= x5323 true) (= x746 0) (= false x6988)))))
(assert (< 10000 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)))
(assert (< 10000 (x4041 x3850 x177 x7031 x7991 x4266)))
(assert (x308 x2726))
(assert (= (x4162 (x6754 64 x3082 100)) x3082))
(assert (x308 x6156))
(assert (= x7443 (and (not x5912) x5536)))
(assert (x308 x5317))
(assert (x308 x3792))
(assert (= x4240 (and x6487 (not x6618))))
(assert (x308 x4589))
(assert (= (x4162 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)) x3767))
(assert (x3057 x5331))
(assert (= (and (not x2522) x7658) x1486))
(assert (= (=> (and (= (= x6040 0) x3991) (or x3991 (not x3991))) x3319) x935))
(assert (> (x6754 64 x8398 6) 10000))
(assert (= (x1300 x4727 x3458 x596 x714) (x5346 (x1300 x4727 x3458 x596 x714))))
(assert (= x2852 (and x8340 x7298)))
(assert (= (x5346 x8384) (x5346 (+ 1 x8384))))
(assert (x308 x6933))
(assert (x308 x2050))
(assert (= (or (and x8406 (not x6518)) (and x6479 (not x2944)) (and (not x2646) x5152) (and (not x3908) x3110) x6003) x7172))
(assert (= x827 (x3587 (x6292 x1198 x8188 x2116 x5208 x7624 x827))))
(assert (= x4301 (x5881 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700))))
(assert (= x155 (and x5634 x2786)))
(assert (= x4105 (and x7188 (not x6437))))
(assert (x308 x936))
(assert (= x8157 (and x3960 x2717)))
(assert (x308 x82))
(assert (x308 x6323))
(assert (x308 x7505))
(assert (x308 x6489))
(assert (x308 x324))
(assert (= x1811 (and (not x4332) x8544)))
(assert (= (x5346 x6892) (x5346 (+ x6892 1))))
(assert (=> (>= 10000 x4776) (= (x5346 x4776) 0)))
(assert (x308 x5310))
(assert (= x7635 (or x560 x7066)))
(assert (x308 x8379))
(assert (= (x4162 (x6754 64 x5372 2)) x5372))
(assert (= x6878 (and x4091 (not x1089))))
(assert (x308 x5115))
(assert (x308 x644))
(assert (= (and x6272 x4393) x5702))
(assert (x2741 486791245))
(assert (x308 x1259))
(assert (< 10000 (x1300 x4801 x781 x5176 x1674)))
(assert (not (x2741 (x6754 64 x551 11))))
(assert (=> (>= 10000 x182) (= 0 (x5346 x182))))
(assert (= 64 (x5881 (x6754 64 x3285 36))))
(assert (= (x6292 x8305 x4409 x3735 x4724 x5489 x7293) (x5346 (x6292 x8305 x4409 x3735 x4724 x5489 x7293))))
(assert (= (or x2939 x6335) x2773))
(assert (< (x6754 64 x6287 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x8518 (x932 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (> (x3933 x352 x3635 x7997 x2531 x4877 x10 x593) 10000))
(assert (=> (>= 10000 x2531) (= 0 (x5346 x2531))))
(assert (=> (<= x4482 10000) (= (x5346 x4482) 0)))
(assert (= (x2151 (x4041 x8305 x8444 x811 x4050 x7088)) x4050))
(assert (x308 x8355))
(assert (= x4963 (x932 (x6754 x8305 x2809 x4963))))
(assert (x308 x6856))
(assert (= (=> (= (< 0 x7378) x4490) (and (=> (and (and (= x6347 x5506) (= x68 x8104) (= x6831 x7309) (= x5391 x2219) (= x2808 x4220) (= x1225 x2365)) x4490) x6063) (=> (and (not x4490) (and (= true x3407) (= false x2212) (= 4 x8229))) x2178))) x2945))
(assert (x308 x1456))
(assert (x308 x4112))
(assert (x308 x8094))
(assert (< 10000 (x6754 64 x7418 7)))
(assert (x308 x381))
(assert (x308 x5273))
(assert (x308 x2564))
(assert (x308 x2749))
(assert (x308 x277))
(assert (= (x3071 (x4041 x4301 x7294 x5415 x3796 x1901)) x1901))
(assert (= x5494 (x5881 (x1300 x5494 x4421 x4614 x7667))))
(assert (x308 x2208))
(assert (x308 x2644))
(assert (= x1185 (x5881 (x1300 x1185 x3977 x6373 x133))))
(assert (x308 x3536))
(assert (x308 x7470))
(assert (= x7520 (and x3812 (not x7013))))
(assert (x308 x1734))
(assert (= (and (not x6446) x4408) x138))
(assert (x308 x5213))
(assert (x308 x7952))
(assert (x308 x3977))
(assert (= (and x7094 x1686) x3383))
(assert (x2307 x5029))
(assert (x308 x1126))
(assert (x308 x4643))
(assert (> (x6754 x352 x4242 x5347) 10000))
(assert (not (x2741 (x6754 64 x2448 4))))
(assert (= (x5881 (x6754 x1391 x2471 x8074)) x1391))
(assert (x308 x1996))
(assert (x308 x2748))
(assert (= x8243 (and x4626 x2542)))
(assert (= (and (not x5312) x2772) x8521))
(assert (x308 x677))
(assert (x308 x4275))
(assert (x308 x1345))
(assert (x308 x3749))
(assert (=> (>= 10000 x8398) (= 0 (x5346 x8398))))
(assert (x308 x4282))
(assert (= x4176 (x2151 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649))))
(assert (x308 x4614))
(assert (x308 x7031))
(assert (x308 x1487))
(assert (x308 x5751))
(assert (not (x2741 (x6754 64 x1041 36))))
(assert (= (and x7337 (not x7509)) x2622))
(assert (x2741 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x308 x289))
(assert (= x3110 (or x752 x7970 x7010 x6082 x8069)))
(assert (x308 x1979))
(assert (=> (>= 10000 x244) (= 0 (x5346 x244))))
(assert (= (and x6806 (not x7044)) x2121))
(assert (= x8398 (x4162 (x6754 64 x8398 6))))
(assert (= (ite (>= 32 x4203) x941 (ite (<= x4203 64) x1318 (ite (>= 96 x4203) x6457 (ite (<= x4203 128) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741)))))) (x932 (x6754 64 x6756 (ite (<= x4203 32) x941 (ite (>= 64 x4203) x1318 (ite (<= x4203 96) x6457 (ite (>= 128 x4203) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741))))))))))
(assert (x308 x5054))
(assert (= (or x5288 x849) x5937))
(assert (< (x6754 64 x5358 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x4041 x516 x2133 x1302 x1004 x6925))))
(assert (> (x1300 x7491 x4344 x2851 x1075) 10000))
(assert (x308 x3555))
(assert (= x3510 (and x8349 x3406)))
(assert (x308 x4328))
(assert (= (and x2234 (not x4447)) x995))
(assert (= x2477 (or (and (not x5819) x4738) (and x625 (not x3930)) (and (not x6572) x5026))))
(assert (x308 x5363))
(assert (=> (<= x4803 10000) (= (x5346 x4803) 0)))
(assert (x2741 1313998243))
(assert (x308 x1942))
(assert (< (x6292 x1185 x6425 x8518 x6985 x6699 x7844) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5881 (x6754 64 x993 36)) 64))
(assert (= (x5881 (x6754 x4801 x2232 x5324)) x4801))
(assert (= (=> (and (= (x8219 x3173) x3753) (= (x7553 (- x3105 128)) x3845) (= (= 0 x3753) x519) (= x5238 128)) (and (=> (and (and (<= x2898 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x6789 x5766) (= x8377 x5691) (= (= x3517 (x3886 132)) x6325) (>= 127 x3296) (= x7806 (x8219 x5372)) (>= 127 x3296) x6325 (= x76 false) (= x7965 51607134309459761954548520284799282329936326410793501951915747293203005440) (<= 196 x3845) (= x1917 false) (= x3845 x2898) (= (> x4727 18446744073709551615) x7963) (>= x7806 1) (= x875 x7251) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3845) (= x1928 128) (= x4581 1914215) (>= x2898 196) (= (x4531 132) x4727)) (not x519)) (and (=> x7963 x2615) (=> (and (not x7963) (and (= x3451 (x8120 (+ 164 x4727))) (= (> x3451 x2898) x1915) (= 164 x6863))) (and (=> (and (and (= x1440 (> x2898 (+ 31 x6408))) (= x6408 (+ 4 x6789))) (not x1915)) (and (=> (and (and (= x4431 true) (= x562 false) (= x8501 0)) (not x1440)) x5308) (=> (and x1440 (and (= (x4531 x6408) x6835) (= x5237 (< 18446744073709551615 x6835)))) (and (=> x5237 x2615) (=> (and (not x5237) (and (= (x8120 (+ x7461 x6835)) x6310) (= (> x6310 x2898) x847) (= x7461 (+ x6408 32)))) (and (=> x847 x7441) (=> (and (not x847) (= x2878 (= x5263 x333))) (and (=> (and (and (= x6111 (x7553 (- x2464 (mod (ite (< x5057 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x6754 64 x5691 3) x1959) (= (x2321 1 x84) x2464) (= (ite (> x2464 0) x2870 (x2321 127 x2870)) x5057) (= x2870 (div x84 2)) (= (x2804 x1959) x84) (= x6018 (< 0 x6111))) x2878) (and (=> (and (and (= x1796 (* x8041 32)) (= x8041 (div (+ 31 x5057) 32)) (= (+ x1796 160) x7811) (= (= x5057 0) x2434)) x6018) (and (=> (and (= (< 31 x5057) x7306) (not x2434)) (and (=> (and (and (= (x2804 x1959) x1294) (= x7037 (* 256 x291)) (= (div x1294 256) x291)) (not x7306)) x2000) (=> (and x7306 (and (or (not x2143) (and (and (= (x2259 x2264) x1615) (<= x3903 224) (>= x3903 160)) x2143)) (and (= x2143 (> x3903 192)) (= (x2259 x5936) x1642) (= x5936 (x5919 32 x1959)) (= (+ 160 x5057) x3903) (= x2264 (+ 1 x5936))))) x1406))) (=> x2434 x2000))) (=> (and (not x6018) (and (= x1221 false) (= true x3594) (= 36 x8501))) x5308))) (=> (and (not x2878) (and (= x3261 false) (= x8501 100) (= true x1990))) x5308))))))))) (=> x1915 x7441))))) (=> (and x519 (and (= x2267 false) (= x4957 x4216) (= x1418 0) (= x2759 x4025) (= x4579 x2426) (= x8532 x7905) (= true x7162) (= x3597 x2620) (= 2 x5576) (= x3661 x4183) (= x5263 x4250) (= x7023 x644) (= x959 x8060) (= x309 x3173) (= x5341 x6668) (= x2833 x5029) (= x2731 x2448))) x6447))) x4417))
(assert (= x6374 (and x5588 (not x4659))))
(assert (x308 x816))
(assert (x308 x2552))
(assert (x308 x2220))
(assert (x308 x3334))
(assert (=> (<= x6129 10000) (= (x5346 x6129) 0)))
(assert (x308 x4054))
(assert (x308 x4993))
(assert (= (x5346 (x6754 x8305 x2809 x4963)) (x6754 x8305 x2809 x4963)))
(assert (x308 x84))
(assert (x308 x2398))
(assert (x308 x1537))
(assert (x308 x7173))
(assert (x308 x3943))
(assert (x308 x7287))
(assert (x308 x5690))
(assert (x308 x6422))
(assert (x308 x2766))
(assert (=> (>= 10000 x6256) (= (x5346 x6256) 0)))
(assert (= (and x6024 x4530) x7802))
(assert (x308 x8167))
(assert (x308 x8368))
(assert (> (x6754 64 x2448 5) 10000))
(assert (not (x2741 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (x308 x4153))
(assert (x3057 x3292))
(assert (= (x5346 (x6754 64 x1582 12)) (x6754 64 x1582 12)))
(assert (x308 x6705))
(assert (x308 x4582))
(assert (x308 x377))
(assert (=> (>= 10000 x474) (= (x5346 x474) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x7491 x844 x4507 x582 x6160 x7095)))
(assert (x308 x4165))
(assert (x308 x4591))
(assert (= x2195 (x3071 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (x308 x3845))
(assert (x308 x5269))
(assert (x308 x6204))
(assert (= (and (not x8005) x8521) x7692))
(assert (=> (>= 10000 x5879) (= (x5346 x5879) 0)))
(assert (x308 x8512))
(assert (= 11 (x932 (x6754 64 x1011 11))))
(assert (not (x2741 (x6754 64 x7572 6))))
(assert (x308 x1196))
(assert (x308 x5806))
(assert (x308 x6679))
(assert (= (and x3240 (not x4842)) x5462))
(assert (= (and x6836 x2635) x6796))
(assert (x308 x1591))
(assert (x308 x1006))
(assert (x308 x1404))
(assert (x308 x6870))
(assert (x308 x565))
(assert (not (x2741 (x1300 x3850 x7052 x7836 x6633))))
(assert (= x6535 (and (not x6544) x1760)))
(assert (x308 x5781))
(assert (= (x5346 x4561) (x5346 (+ x4561 2))))
(assert (= (x2151 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743)) x2652))
(assert (= (and x669 (not x2877)) x1878))
(assert (x308 x6029))
(assert (= (=> (= x5868 (+ x5613 x1569)) x3646) x8330))
(assert (x308 x1081))
(assert (= x5372 (x4162 (x6754 64 x5372 1))))
(assert (x308 x6623))
(assert (= x7451 (x932 (x6292 x4727 x3776 x7451 x6604 x2761 x2213))))
(assert (x5886 x5679))
(assert (= x6722 (or x3741 x4615)))
(assert (= (x5346 3313512704) 0))
(assert (< 10000 (x6754 x7051 x4961 x1640)))
(assert (x308 x4194))
(assert (< 10000 (x1300 x4982 x3441 x1676 x4732)))
(assert (= x3072 (and x802 (not x4438))))
(assert (x308 x5586))
(assert (= x5581 (or x4720 x8133)))
(assert (= (x5346 (x6292 x3850 x5673 x6483 x2284 x4803 x233)) (x6292 x3850 x5673 x6483 x2284 x4803 x233)))
(assert (= x7950 (and (not x4966) x2364)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x3850 x7052 x7836 x6633)))
(assert (= (x932 (x6754 x7491 x4888 x3832)) x3832))
(assert (x5602 x6721))
(assert (x3057 x6337))
(assert (= (and x1686 (not x7094)) x5288))
(assert (> (x6754 64 x3125 12) 10000))
(assert (x308 x5987))
(assert (= (and (not x5823) x1023) x647))
(assert (x308 x1657))
(assert (= (x5881 (x4041 x4727 x7444 x344 x2019 x3523)) x4727))
(assert (x308 x6160))
(assert (=> (>= 10000 x6086) (= (x5346 x6086) 0)))
(assert (= x6028 (x2151 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967))))
(assert (x308 x8451))
(assert (x308 x3716))
(assert (x308 x1049))
(assert (x3057 x7710))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x8305 x2809 x4963)))
(assert (= (x4162 (x1300 x5494 x4421 x4614 x7667)) x4421))
(assert (< 10000 (x4041 x3019 x3862 x1710 x715 x7694)))
(assert (x308 x8490))
(assert (= x2659 (x3071 (x6292 x4801 x7411 x4782 x1324 x2659 x1983))))
(assert (= (x932 (x6292 x352 x8047 x418 x8424 x2868 x7699)) x418))
(assert (x308 x1627))
(assert (x308 x5205))
(assert (x308 x7028))
(assert (x308 x6283))
(assert (x308 x7552))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x7655 x6392 x4048 x6185)))
(assert (x308 x4335))
(assert (x308 x7472))
(assert (= (or (and x7237 (not x1424)) (and (not x4687) x2515) (and (not x3955) x3567)) x6210))
(assert (= (x3587 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x5413))
(assert (= (x5843 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x966))
(assert (= (x4162 (x6754 x5086 x4422 x4929)) x4422))
(assert (=> (>= 10000 x5426) (= (x5346 x5426) 0)))
(assert (= x7051 (x5881 (x5919 x7051 x4164))))
(assert (x308 x7138))
(assert (= x8083 (x2151 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (= x3112 (x2151 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (= x1041 (x4162 (x6754 64 x1041 36))))
(assert (=> (>= 10000 x4070) (= 0 (x5346 x4070))))
(assert (x792 x1483))
(assert (x308 x4400))
(assert (= x4121 (and x949 (not x2289))))
(assert (x308 x6023))
(assert (x308 x8125))
(assert (= 3 (x932 (x6754 64 x5691 3))))
(assert (= x7496 (or x1461 x7726)))
(assert (x308 x1427))
(assert (= x4621 (and x6050 x7528)))
(assert (= (=> (and (= x2833 x5029) (= false x3865) (= x2620 x3597) (= x8532 x7905) (= x239 true) (= x309 x3173) (= 2 x6156) (= x2426 x4579) (= x3661 x4183) (= x4216 x4957) (= x2448 x2731) (= x644 x7023) (= x2759 x4025) (= x959 x8060) (= x5341 x6668) (= 0 x1418) (= x5263 x4250)) x6447) x285))
(assert (= (and x5883 x1232) x5515))
(assert (x792 x5587))
(assert (= x6377 (and x5994 x7740)))
(assert (x308 x782))
(assert (> (x6754 x4982 x8366 x1336) 10000))
(assert (=> (>= 10000 x728) (= (x5346 x728) 0)))
(assert (x308 x7098))
(assert (x308 x3978))
(assert (= x3889 (x932 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (= (x5346 (x1300 x516 x3067 x6100 x728)) (x1300 x516 x3067 x6100 x728)))
(assert (= (and (not x2635) x6836) x3423))
(assert (x308 x6854))
(assert (x308 x7170))
(assert (= x4327 (x4162 (x6754 64 x4327 12))))
(assert (not (x2741 (x1300 x516 x3067 x6100 x728))))
(assert (= (and x8137 x50) x4610))
(assert (x308 x4255))
(assert (x308 x6528))
(assert (= (and x3551 (not x1583)) x226))
(assert (x308 x5762))
(assert (x308 x5911))
(assert (= x1921 (and x5837 x6165)))
(assert (x308 x2015))
(assert (x308 x3641))
(assert (x308 x402))
(assert (= (=> (and (= x1773 (= 0 x5654)) (or x1773 (not x1773))) x434) x5529))
(assert (x308 x5803))
(assert (x308 x6271))
(assert (x3057 255))
(assert (x3057 x2752))
(assert (x308 x7654))
(assert (= x5817 (and x196 x2181)))
(assert (=> (<= x1932 10000) (= (x5346 x1932) 0)))
(assert (not (x2741 (x6754 x4301 x4290 x3083))))
(assert (= (x5346 (x6754 64 1 x113)) (x6754 64 1 x113)))
(assert (x5602 x4215))
(assert (= (or x7421 x3169) x1210))
(assert (= x2297 (and x1437 (not x4743))))
(assert (x308 x2684))
(assert (x308 x6652))
(assert (x308 x6185))
(assert (= (x5881 (x6292 x5494 x6256 x6233 x6797 x424 x5377)) x5494))
(assert (=> (<= x676 10000) (= 0 (x5346 x676))))
(assert (= 64 (x5881 (x6754 64 x7866 36))))
(assert (x308 x6803))
(assert (= (and x6614 (not x4008)) x1999))
(assert (= x3180 (and (not x2126) x8113)))
(assert (=> (>= 10000 x2836) (= 0 (x5346 x2836))))
(assert (x308 x2639))
(assert (< 10000 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)))
(assert (x3057 x6727))
(assert (x308 x21))
(assert (= x5786 (or (and x3935 x7089) (and x8057 x5745))))
(assert (= (x5881 (x6754 x4838 x6412 x7245)) x4838))
(assert (= x4203 (x5881 (x6292 x4203 x2643 x5854 x1971 x1016 x518))))
(assert (x308 x6866))
(assert (=> (>= 10000 x2133) (= 0 (x5346 x2133))))
(assert (x308 x5375))
(assert (= x6836 (and x2402 (not x6398))))
(assert (x308 x7993))
(assert (= x7634 (and x425 x161)))
(assert (< (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2368))
(assert (< (x1300 x5494 x4421 x4614 x7667) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x5503))
(assert (x308 x2456))
(assert (=> (>= 10000 x2019) (= (x5346 x2019) 0)))
(assert (= (x4041 x2135 x2713 x3983 x8194 x2844) (x5346 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (= x8141 (and x3885 x2068)))
(assert (x308 x8155))
(assert (x308 x3735))
(assert (x308 x6678))
(assert (= x6250 (x2151 (x1300 x5086 x6071 x7368 x6250))))
(assert (x2741 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x308 x3318))
(assert (x308 x2012))
(assert (=> (<= x1710 10000) (= (x5346 x1710) 0)))
(assert (=> (>= 10000 x3286) (= (x5346 x3286) 0)))
(assert (= x2957 (x3587 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967))))
(assert (= x777 (x4162 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967))))
(assert (= (x932 (x6754 x3850 x7892 x6405)) x6405))
(assert (x308 x6152))
(assert (=> (<= x8444 10000) (= (x5346 x8444) 0)))
(assert (= (x5346 (x4041 x516 x2133 x1302 x1004 x6925)) (x4041 x516 x2133 x1302 x1004 x6925)))
(assert (=> (<= x2284 10000) (= (x5346 x2284) 0)))
(assert (x308 x1964))
(assert (= x7688 (and (not x5163) x1735)))
(assert (=> (>= 10000 x7761) (= (x5346 x7761) 0)))
(assert (x5602 x3374))
(assert (= x7296 (x932 (x6292 x1391 x7138 x7296 x1932 x3069 x8182))))
(assert (= (x5346 x2136) (x5346 (+ x2136 1))))
(assert (= x5498 (and x4468 x5510)))
(assert (=> (>= 10000 x3173) (= 0 (x5346 x3173))))
(assert (=> (<= x5675 10000) (= (x5346 x5675) 0)))
(assert (x308 x6756))
(assert (= x2332 (x2151 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (x308 x4214))
(assert (x308 x1505))
(assert (= (x932 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) x1681))
(assert (x308 x5578))
(assert (x308 x6946))
(assert (x308 x6607))
(assert (= x770 (x4162 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (x308 x3477))
(assert (x308 x655))
(assert (= x6604 (x2151 (x6292 x4727 x3776 x7451 x6604 x2761 x2213))))
(assert (= (and x1759 x7159) x7422))
(assert (x308 x5371))
(assert (x308 x4815))
(assert (x308 x8438))
(assert (x308 x3941))
(assert (x308 x4206))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x4727 x7961)))
(assert (x308 x2310))
(assert (x308 x335))
(assert (x2741 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x308 x244))
(assert (x308 x1283))
(assert (x308 x7968))
(assert (= (x5346 57896044618658097711785492504343953926634992332820282019728792003956) 0))
(assert (> (x6754 x5086 x4422 x4929) 10000))
(assert (=> (>= 10000 x172) (= 0 (x5346 x172))))
(assert (= (and x1330 x7791) x6145))
(assert (= 0 (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (x5881 (x5919 x4301 x4482)) x4301))
(assert (= x4512 (x3587 (x6292 x4982 x7273 x8186 x1537 x706 x4512))))
(assert (x308 x6634))
(assert (x2741 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x308 x2688))
(assert (= (=> (and (= x2791 true) (= 36 x7171) (= 2 x5590) (= x6782 false) (= x3531 x2442) (= x386 x7111) (= 0 x2651) (= x8013 x5940)) x561) x7577))
(assert (x308 x3379))
(assert (x308 x3929))
(assert (x308 x1644))
(assert (= (=> (and (= x7171 x4958) (= x8013 x5940) (= x2651 0) (= true x6830) (= x3531 x2442) (= 2 x4206) (= x3006 (x2321 255 x416)) (= x7064 2) (= x3874 false) (= x386 x7111)) x561) x6628))
(assert (x308 x5322))
(assert (x3057 x8109))
(assert (x308 x5834))
(assert (x308 x588))
(assert (x308 x668))
(assert (x308 x5893))
(assert (= (x5881 (x6754 64 x1041 6)) 64))
(assert (= x6547 (and x443 x5447)))
(assert (= x812 (and (not x130) x4467)))
(assert (x308 x7781))
(assert (x308 x8060))
(assert (x308 x3642))
(assert (= (and (not x110) x8309) x3315))
(assert (= (=> (= x5815 (> x2846 0)) (and (=> (and x5815 (and (or (and x2383 (and (and (= x3687 (x6224 x5503)) (= (> x1359 32) x5596)) (or (and (and (or (and x2600 (and (and (= x783 (< 96 x1359)) (= (x8120 (+ x7098 64)) x3440) (= x5655 (x6485 x3678)) (= (x8120 (+ 64 x5503)) x3678)) (or (and x783 (and (= x8324 (x4314 x8058)) (= (x8120 (+ 96 x5503)) x8058) (<= x1359 128) (= x7959 (x8120 (+ x7098 96))))) (not x783)))) (not x2600)) (and (= (x8120 (+ x5503 32)) x3982) (= (> x1359 64) x2600) (= x6064 (x8282 x3982)) (= (x8120 (+ x7098 32)) x7271))) x5596) (not x5596)))) (not x2383)) (and (= (x8120 (+ x4727 x5503)) x169) (= (x8120 (+ 31 x6835)) x1431) (= x3941 (x8120 (+ 31 x4727))) (= x2571 (div x3941 32)) (< x131 x3529) (= (* x2571 32) x4609) (> x131 x7811) (= x6427 150) (= (x8120 (+ 36 x3529)) x837) (>= x3529 2) (= (* x8308 32) x8537) (= x3660 (x8120 (+ 32 x131))) (= x131 (x8120 (+ x6961 x7811))) (= x8308 (div x1431 32)) (= (x8120 (+ 32 x4609)) x6961) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x131) (= x3529 (x8120 (+ x2467 x131))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x7811) (= (x8120 (+ x837 32)) x6917) (= x5352 (x8120 (+ x837 128))) (= x2472 (x8120 (+ x3660 x6835))) (= (x8120 (+ x8537 32)) x2467) (<= 1 x131) (= x5503 (x8120 (+ 32 x7811))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x7811) (= (< 0 x1359) x2383) (= (x8120 (+ x5352 32)) x7098) (<= x7811 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1359 (x6463 x7811))))) x1893) (=> (and (not x5815) (and (= true x4828) (= x6245 (x8120 (+ 4 x7811))) (= false x6020) (= x1340 (x8120 (+ 32 x6245))) (= (x8120 (+ 32 x1340)) x3688) (= x6652 (x8120 (+ 32 x3688))) (= x8501 132))) x5308))) x2196))
(assert (x308 x7061))
(assert (x308 x8111))
(assert (x308 x7239))
(assert (=> (<= x3082 10000) (= 0 (x5346 x3082))))
(assert (x308 x666))
(assert (not (x2741 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108))))
(assert (x308 x6549))
(assert (= x2298 (and x2943 x8369)))
(assert (x308 x5318))
(assert (x308 x3227))
(assert (x308 x3531))
(assert (= (x5346 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)))
(assert (x308 x1599))
(assert (= (x3071 (x4041 x3850 x177 x7031 x7991 x4266)) x4266))
(assert (x308 x8095))
(assert (= x4720 (or x3404 x3795 x4121 x3485 x7702 x6622)))
(assert (x308 x4236))
(assert (x308 x7347))
(assert (x308 x2475))
(assert (= x2135 (x5881 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (x308 x8129))
(assert (= x3523 (x3071 (x4041 x4727 x7444 x344 x2019 x3523))))
(assert (= (x932 (x6754 64 x5996 36)) 36))
(assert (= (and (not x8558) x4751) x7010))
(assert (= (x4162 (x4041 x1391 x6781 x3736 x3616 x5169)) x6781))
(assert (= x7912 (and x2794 (not x5126))))
(assert (= x7563 (and (not x6291) x2480)))
(assert (x308 x133))
(assert (x308 x7065))
(assert (= (and (not x4831) x2895) x5015))
(assert (x308 x8396))
(assert (x308 x7750))
(assert (x308 x8487))
(assert (x308 x5360))
(assert (x308 x3593))
(assert (x308 x3453))
(assert (x308 x989))
(assert (x308 x7987))
(assert (= (x4162 (x5919 32 x6757)) x6757))
(assert (= (and x4396 (not x3841)) x5335))
(assert (=> (>= 10000 x5334) (= (x5346 x5334) 0)))
(assert (x308 x5872))
(assert (< 10000 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411)))
(assert (x308 x1096))
(assert (=> (>= 10000 x5320) (= (x5346 x5320) 0)))
(assert (x308 x3517))
(assert (x308 x5051))
(assert (=> (<= x4343 10000) (= (x5346 x4343) 0)))
(assert (= (and x6560 (not x2562)) x7733))
(assert (x308 x1286))
(assert (= (or x5463 x8243) x1403))
(assert (= x7160 (x4162 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038))))
(assert (=> (>= 10000 x7762) (= (x5346 x7762) 0)))
(assert (not (x2741 (x5919 32 x1959))))
(assert (=> (<= x487 10000) (= 0 (x5346 x487))))
(assert (= x2922 (and (not x621) x3189)))
(assert (= 1 (x932 (x6754 64 x5372 1))))
(assert (x308 x5590))
(assert (= (and (not x5813) x3072) x7050))
(assert (x308 x3648))
(assert (= x6144 (and x6104 (not x7101))))
(assert (= x8375 (and x3473 x497)))
(assert (x308 x2582))
(assert (= x2480 (and (not x4562) x1054)))
(assert (x308 x3836))
(assert (x308 x2596))
(assert (x308 x4567))
(assert (= x8531 (=> (and (= 0 x2869) (= x3564 x5543) (= x123 x6001) (= x1775 x1591) (= x159 x1404) (= 2 x6019) (= false x3505) (= true x6149) (= x6364 x3880) (= x1713 x1033) (= x7762 x8085) (= x5580 x5213) (= x3828 x5707) (= x3106 x1063) (= x7858 x824) (= x1851 x999) (= x2907 x1413) (= x1775 (x2321 255 x5587))) x2171)))
(assert (x308 x286))
(assert (x308 x22))
(assert (x308 x7355))
(assert (=> (<= x2957 10000) (= 0 (x5346 x2957))))
(assert (= x3645 (and x4941 x2648)))
(assert (x3057 x6624))
(assert (x308 x622))
(assert (= x1933 (and x8018 (not x6711))))
(assert (x308 x2643))
(assert (= (or x4932 x2166) x3960))
(assert (= x1048 (or (and x7424 x847) (and x1915 x6298))))
(assert (x308 x1721))
(assert (= (x4162 (x4041 x7655 x6068 x7455 x134 x1096)) x6068))
(assert (< 10000 (x6292 x4838 x8171 x5375 x8084 x4487 x540)))
(assert (> (x6754 64 x6287 3) 10000))
(assert (= (or x4633 x2889) x7027))
(assert (=> (<= x5578 10000) (= (x5346 x5578) 0)))
(assert (= x631 (x2151 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (x308 x767))
(assert (x308 x3367))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x4301 x7294 x5415 x3796 x1901)))
(assert (= x7051 (x5881 (x6754 x7051 x4961 x1640))))
(assert (= x5060 (and x1440 x6301)))
(assert (= (and x4527 x3251) x5444))
(assert (x308 x2674))
(assert (=> (>= 10000 x2273) (= 0 (x5346 x2273))))
(assert (= x261 (x4162 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602))))
(assert (= (and x2883 (not x2404)) x2935))
(assert (x308 x3402))
(assert (x308 x6649))
(assert (x308 x2566))
(assert (= (x5346 (x4041 x4982 x31 x2830 x5306 x2456)) (x4041 x4982 x31 x2830 x5306 x2456)))
(assert (x308 x3907))
(assert (= (and x410 (not x4671)) x6616))
(assert (x308 x5758))
(assert (x308 x7048))
(assert (= x5564 (and x4028 x1761)))
(assert (= (x5346 59118985759084958080972419199848406897631161684926069324597705158744233476096) 0))
(assert (= x1690 (and x5579 x1763)))
(assert (= x3019 (x5881 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (< (x6754 x7051 x4961 x1640) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x233))
(assert (x308 x7020))
(assert (=> (<= x2830 10000) (= 0 (x5346 x2830))))
(assert (x308 x2))
(assert (=> (>= 10000 x5024) (= (x5346 x5024) 0)))
(assert (= (and x1692 x6760) x6355))
(assert (= (x5346 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)))
(assert (not (x2741 (x4041 x4203 x3492 x6286 x1991 x7015))))
(assert (x308 x8539))
(assert (x308 x7580))
(assert (x308 x1087))
(assert (x308 x5398))
(assert (= (and x5340 x8201) x3942))
(assert (= (=> (= (= 0 x8268) x7012) (and (=> (and x7012 (and (>= 255 x4326) (= x4326 (x33 x1919)) (= x1919 (x6754 64 x2253 10)) (= (< 0 x4326) x3080))) (and (=> (and (and (= x2201 x4763) (= x5079 x2798) (= x7856 x2688)) (not x3080)) x8198) (=> (and (and (or (and (and (or (and x3331 (and (<= 0 x808) (= x7917 1) (= x2688 x4183) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x808) (= x1194 x2426) (= false x8416) (= x1891 x5263) (= x8060 x4284) (= x7468 x8532) (= x2798 x644) (= x5322 x4216) (= x3183 x5029) (= false x4030) (= x2448 x2545) (= x4763 x3597) (= x3173 x6105) (= x4025 x1367) (= x2790 x808) (= x4055 x6668))) (and (not x3331) (and (= x8532 x7468) (= x6105 x3173) (= x5098 false) (= x6668 x4055) (= x4284 x8060) (= x3474 2) (= x2545 x2448) (= x4025 x1367) (= x5263 x1891) (= x4183 x2688) (= x644 x2798) (= 0 x7917) (= x7315 true) (= x4216 x5322) (= x1194 x2426) (= x3597 x4763) (= x5029 x3183)))) (and (>= 127 x2459) (= x6359 (< (* 1000000000 x2688) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x6276 x2491) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4864) (= x7816 (x8219 x6957)) (<= 1 x7816) (= 310283853 x7423) (>= 127 x2459) (= false x4126) (= false x7729) (= (* 1000000000 x2688) x808) (= (and x6359 x1799) x3331) (= x2688 x6276) (= x7405 36) (= x1799 (<= x808 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x4522) (and (and (<= 1 x4763) (= x2961 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= 1461501637330902918203684832716283019655932542975 x4763) (= x2426 x1194) (= x2448 x2545) (= x4055 x6668) (>= x6833 1) (= x8060 x4284) (= x6833 (x8219 x333)) (= x7739 false) (= x275 310283853) (= x3597 x4763) (= x4183 x2688) (= x8532 x7468) (= x333 x4763) (= false x6126) (= x8512 36) (>= 127 x3792) (<= x3792 127) (= x644 x2798) (= x7488 false) (= x2688 x5959) (= x4025 x1367) (= x6105 x3173) (= x3183 x5029) (= x1129 false) (= x5263 x1891) (= x4216 x5322) (= 1 x7917)) (not x4522))) (and (= x4522 (= x6957 x4763)) (= 128 x1679) (<= x4763 1461501637330902918203684832716283019655932542975))) x3080) x3769))) (=> (and (not x7012) (and (= x7856 x2688) (= x2201 x4763) (= x2798 x5079))) x8198))) x4515))
(assert (not (x2741 (x6754 64 x7418 7))))
(assert (= x2518 (and x5505 x4445)))
(assert (< (x6754 64 x551 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3374))
(assert (x308 x1418))
(assert (=> (>= 10000 x3806) (= 0 (x5346 x3806))))
(assert (= (x3071 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)) x4877))
(assert (x308 x3618))
(assert (> (x6754 64 1 x1293) 10000))
(assert (x308 x2328))
(assert (= x4267 (or (and x2536 x3900) (and x7620 x2164) (and x4016 x1159))))
(assert (not (x2741 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (= x395 (=> (= x7320 (= 0 x4722)) (and (=> (and (not x7320) (and (= 4 x5332) (= false x780) (= x1939 true))) x5059) (=> (and x7320 (and (>= 255 x1060) (= (x2099 x5713) x1060) (= x5713 (x6754 64 x6966 11)) (= (> x1060 3) x2409))) (and (=> (and x2409 (and (= false x5486) (= true x541) (= x5332 36))) x5059) (=> (and (not x2409) (= (= x1060 2) x8369)) (and (=> (and x8369 (and (= x5150 (x8120 (+ 31 x299))) (>= x5700 1) (= 0 x5574) (= (x6754 64 x6287 4) x1293) (= x2393 (x6858 224)) (= x7369 0) (= false x1929) x1173 (= x2235 (x8120 (+ x2699 32))) (= (x8120 (+ 31 x2393)) x7715) x6125 (<= 356 x2026) (= (= 34 (x6938 260)) x1173) (= false x6268) (= (= (x6938 196) (x6299 486)) x3392) (= x6538 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5150)) (= 290 x7597) (= (= (x6938 228) (x6299 518)) x6125) (= x4328 1084734224) (>= 127 x7139) x3392 (>= 65535 x6287) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7715) x2067) (= (x6754 64 1 x1293) x5508) x3801 (= x7669 (x8120 (+ x2235 x2067))) (= x7232 (or (> (- x2026 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 (- x2026 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2026 4)))))) (= x4307 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= x2026 x404) (= x404 (x7553 (- x7669 290))) (= x6287 x1955) (<= 356 x404) (= x1816 x5372) (= x6890 160) (= x1709 (x7553 (- x2699 294))) (= x5700 (x8219 x2730)) (= (x8120 (+ x6538 486)) x2699) (= x7057 (x1108 x5508)) (= (x4418 128) x299) (= x3801 (= (x6938 164) 64)) (>= 127 x7139) (= 256 x8068))) (and (=> (and (= true x7823) (not x7232)) (and (=> (not x7823) x649) (=> (and x7823 (= x5163 (and (> x2026 195) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2026))))) (and (=> (not x5163) x649) (=> (and x5163 (and (= x406 (x1308 164)) (= x4759 (> x406 18446744073709551615)))) (and (=> x4759 x7787) (=> (and (and (= x8057 (< x2026 x6186)) (= x6186 (x8120 (+ x406 196)))) (not x4759)) (and (=> x8057 x337) (=> (and (and (= x7703 (> x7332 18446744073709551615)) (<= x2026 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 356 x2026) (= (x1308 260) x7332)) (not x8057)) (and (=> x7703 x7787) (=> (and (not x7703) (and (= x3935 (> x3476 x2026)) (= x3476 (x8120 (+ 292 x7332))))) (and (=> x3935 x337) (=> (and (and (= x7901 x7585) (= x6283 1) (= x2942 (x6864 128)) (= x7633 (x6864 128)) (= x2011 x7521) (= x6620 false) (= false x7705) (= x2001 64) (= x736 x386) (= x3531 x1405) (= (x6864 160) x6723) (= x1093 x3179) (= x2398 (x6864 160)) (= x6287 x356) (= x5426 x5674) (= x5599 x6866) (= x7724 x6026) (= x601 x5585) (= x898 x756) (= x8013 x415) (= x6871 x1037)) (not x3935)) x5388))))))))))))) (=> x7232 x649))) (=> (and (not x8369) (and (= true x6497) (= x1975 false) (= x5332 4))) x5059)))))))))
(assert (x308 x5331))
(assert (= (or x248 (and (not x3869) x2283)) x2058))
(assert (= x1691 (x3587 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (x308 x7996))
(assert (= (=> (= x4325 (= x5695 0)) (and (=> (and (not x4325) (and (= x5666 x7575) (= x198 x801) (= x6118 x4398) (= x2702 x4429) (= x546 x5559) (= x7996 x3759) (= x1203 x6077) (= x6753 x5269) (= x607 x1061) (= x6389 x1587) (= x7125 x1202) (= x1949 x3613) (= x4840 x8279))) x178) (=> (and x4325 (and (= x8060 x959) (= x3173 x309) (= 2 x2864) (= x2731 x2448) (= x5029 x2833) (= x7905 x8532) (= x644 x7023) (= x4579 x2426) (= x574 true) (= false x1550) (= x3597 x2620) (= x4025 x2759) (= x5341 x6668) (= x3661 x4183) (= x5263 x4250) (= x4957 x4216) (= x1418 0))) x6447))) x774))
(assert (= (=> (and (= x8060 x2775) (= x1225 x4225) (= x2219 x2925) (= x4025 x1307) (= x2968 x5263) (= x2098 x8104) (= x2808 x1236) (= x2426 x1887) (= x4549 x4183) (= 1 x5654) (= x1393 x6831) (= x4297 0) (= x3597 x6733) (= x722 x2448) (= x5506 x8396)) x5529) x6063))
(assert (= (or x5379 x5937) x6057))
(assert (= (x6754 64 x5615 36) (x5346 (x6754 64 x5615 36))))
(assert (x308 x7182))
(assert (x308 x7938))
(assert (= (x2151 (x6292 x352 x8047 x418 x8424 x2868 x7699)) x8424))
(assert (=> (>= 10000 x8284) (= 0 (x5346 x8284))))
(assert (x308 x6833))
(assert (< 10000 (x6754 64 x7133 12)))
(assert (x308 x6385))
(assert (< 10000 (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (>= 64 x1185) x301 (ite (<= x1185 96) x7132 (ite (<= x1185 128) x8307 (ite (>= 160 x1185) x5117 (ite (<= x1185 192) x8181 x2835)))))))))
(assert (x308 x7666))
(assert (not (x2741 (x6754 64 x4998 100))))
(assert (= x6622 (or (and x1500 x2274) (and x8143 x4619))))
(assert (= (x3071 (x6292 x4203 x2643 x5854 x1971 x1016 x518)) x1016))
(assert (= (and x5085 (not x7962)) x7743))
(assert (= (or (and x7346 x6674) (and x2206 x3744)) x365))
(assert (= (x932 (x6754 x3019 x573 x5207)) x5207))
(assert (x308 x1372))
(assert (= (and x7617 x4573) x2174))
(assert (x308 x3403))
(assert (= x7455 (x932 (x4041 x7655 x6068 x7455 x134 x1096))))
(assert (x308 x7051))
(assert (= x2019 (x2151 (x4041 x4727 x7444 x344 x2019 x3523))))
(assert (x308 x4722))
(assert (x308 x2702))
(assert (= (=> (and (= x5341 x6668) (= false x7824) (= x4579 x2426) (= x5029 x2833) (= x7905 x8532) (= x3597 x2620) (= x2759 x4025) (= x3661 x4183) (= x5263 x4250) (= x6511 2) (= 0 x1418) (= true x7640) (= x4957 x4216) (= x2731 x2448) (= x644 x7023) (= x959 x8060) (= x3173 x309)) x6447) x618))
(assert (=> (<= x6634 10000) (= (x5346 x6634) 0)))
(assert (< (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x6160 10000) (= 0 (x5346 x6160))))
(assert (not (x2741 (x5919 x4838 x7149))))
(assert (x308 x959))
(assert (x308 x8352))
(assert (x308 x718))
(assert (x308 x2844))
(assert (x308 x3686))
(assert (= x5739 (x4162 (x6754 64 x5739 (ite (>= 32 x4301) x553 (ite (>= 64 x4301) x3366 (ite (<= x4301 96) x6432 (ite (>= 128 x4301) x4345 (ite (>= 160 x4301) x4093 (ite (>= 192 x4301) x539 x3309))))))))))
(assert (x308 x2091))
(assert (=> (<= x6495 10000) (= (x5346 x6495) 0)))
(assert (= (and x6717 x3056) x1103))
(assert (x308 x1068))
(assert (= x4109 (or (and x7548 x4575) (and x6423 x2513))))
(assert (= x3385 (and x7605 x2347)))
(assert (x308 x4049))
(assert (=> (>= 10000 x7251) (= 0 (x5346 x7251))))
(assert (= (x4162 (x4041 x516 x2133 x1302 x1004 x6925)) x2133))
(assert (= (x6754 x5086 x4422 x4929) (x5346 (x6754 x5086 x4422 x4929))))
(assert (> (x5919 x4982 x8150) 10000))
(assert (x308 x6455))
(assert (x308 x7403))
(assert (x308 x1264))
(assert (x308 x3055))
(assert (= x479 (and x7402 (not x5083))))
(assert (x308 x517))
(assert (x308 x820))
(assert (= (and x327 x3126) x797))
(assert (=> (<= x3739 10000) (= (x5346 x3739) 0)))
(assert (x308 x4963))
(assert (x308 x3818))
(assert (= x4684 (and (not x3007) x2971)))
(assert (= (x4162 (x6754 64 x1582 12)) x1582))
(assert (=> (<= x2253 10000) (= 0 (x5346 x2253))))
(assert (=> (>= 10000 x4591) (= (x5346 x4591) 0)))
(assert (= (x5881 (x6754 64 x8398 6)) 64))
(assert (x308 x236))
(assert (x2307 x6866))
(assert (x308 x5694))
(assert (x308 x6067))
(assert (x308 x6402))
(assert (x308 x1266))
(assert (= (x6754 64 x3303 12) (x5346 (x6754 64 x3303 12))))
(assert (= 36 (x932 (x6754 64 x7866 36))))
(assert (= x7052 (x4162 (x1300 x3850 x7052 x7836 x6633))))
(assert (x308 x5873))
(assert (not (x2741 (x1300 x1198 x268 x4771 x1098))))
(assert (not (x2741 (x6754 x4982 x8366 x1336))))
(assert (x308 x6004))
(assert (x308 x7285))
(assert (x308 x2007))
(assert (x308 x458))
(assert (= (x5346 (x6754 64 x2762 100)) (x6754 64 x2762 100)))
(assert (x308 x3797))
(assert (= (x6754 64 x6287 4) (x5346 (x6754 64 x6287 4))))
(assert (= (and x7266 x3902) x1650))
(assert (x308 x4223))
(assert (x308 x3445))
(assert (x308 x2132))
(assert (= x2695 (and x2364 x4966)))
(assert (= (or x5229 x4105) x2483))
(assert (= x8054 x8011))
(assert (= (x5346 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (= x4101 (x932 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (= (and x6437 x7188) x7484))
(assert (not (x2741 (x6754 64 x4875 36))))
(assert (= x1484 (x4162 (x6754 x516 x1484 x7371))))
(assert (x308 x862))
(assert (x308 x1246))
(assert (x308 x7502))
(assert (x308 x2678))
(assert (x308 x2543))
(assert (x308 x5645))
(assert (x308 x8537))
(assert (< 10000 (x6754 64 x5691 3)))
(assert (x308 x4384))
(assert (=> (<= x770 10000) (= 0 (x5346 x770))))
(assert (> (x6754 64 x2448 4) 10000))
(assert (= x3479 (and (not x1712) x7919)))
(assert (x308 x5493))
(assert (= x4633 (and (not x4337) x2773)))
(assert (= x1351 (x4162 (x4041 x4801 x1351 x7080 x611 x5938))))
(assert (= (=> (and (= x2784 (x2321 255 x6187)) (= 2 x3907) (= x2833 x5029) (= x5341 x6668) (= x309 x3173) (= x4025 x2759) (= x5263 x4250) (= 2 x8426) (= x4216 x4957) (= x8060 x959) (= x3661 x4183) (= 0 x1418) (= x840 true) (= false x7877) (= x8532 x7905) (= x2731 x2448) (= x644 x7023) (= x4579 x2426) (= x2620 x3597)) x6447) x8425))
(assert (x308 x6356))
(assert (= (and (not x7677) x1216) x8018))
(assert (x308 x6877))
(assert (x792 x3626))
(assert (x308 x4232))
(assert (= (and x7295 (not x8034)) x7587))
(assert (x308 x5339))
(assert (= (or (and x6057 (not x1993)) x5201) x8541))
(assert (=> (<= x2195 10000) (= (x5346 x2195) 0)))
(assert (x308 x6944))
(assert (x308 x2759))
(assert (= (=> (= (+ x974 292) x7303) x3692) x7400))
(assert (= x7071 (and (not x8349) x3406)))
(assert (x308 x5421))
(assert (x308 x1441))
(assert (= (x2151 (x4041 x4982 x31 x2830 x5306 x2456)) x5306))
(assert (=> (>= 10000 x2618) (= 0 (x5346 x2618))))
(assert (=> (<= x7028 10000) (= (x5346 x7028) 0)))
(assert (x308 x2217))
(assert (= x5954 (x4162 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (x308 x380))
(assert (= (x5881 (x6754 64 x7133 12)) 64))
(assert (= (x4162 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743)) x204))
(assert (= 0 (x5346 2088793519)))
(assert (= x4655 (and (not x2682) x6331)))
(assert (x2307 x6668))
(assert (> (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322) 10000))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (= (or x6952 x5154) x8274))
(assert (= x3273 (x4162 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (= x4301 (x5881 (x6754 x4301 x4290 x3083))))
(assert (x308 x1989))
(assert (x308 x1042))
(assert (x308 x5460))
(assert (= (x932 (x6754 64 x2323 36)) 36))
(assert (= (x1459 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)) x3835))
(assert (x308 x3068))
(assert (= (x932 (x4041 x1391 x6781 x3736 x3616 x5169)) x3736))
(assert (= x297 (or x1538 x8108 x639 x7127 x6738 x1520 x6816 x7868 x1637 x983 x3234 x49 x8477 x4695 x7307 x4980 x7252 x2152 x6813 x7769 x345 x6403 x7382 x6989 x4087 x24 x5444)))
(assert (x308 x7248))
(assert (x3057 x1861))
(assert (= (and x2308 x2203) x2937))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x3285 2)))
(assert (= (and (not x542) x6734) x3201))
(assert (x308 x4976))
(assert (= (x6292 x2135 x1295 x6039 x2766 x7689 x8433) (x5346 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (x308 x2154))
(assert (x308 x8549))
(assert (= (x5346 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195)) (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195)))
(assert (x308 x7009))
(assert (< 10000 (x6292 x5086 x3403 x3380 x6212 x8230 x7797)))
(assert (x2741 18446744073709551615))
(assert (= x6401 (and x977 x8208)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 32 x3913)))
(assert (= x7655 (x5881 (x5919 x7655 x4498))))
(assert (= (x6754 64 x6898 36) (x5346 (x6754 64 x6898 36))))
(assert (= (or x145 x2330 x8138) x7695))
(assert (= x4815 (x2151 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (x308 x4057))
(assert (x308 x6565))
(assert (= x6918 (or (and x5862 x4019) (and x2084 x4455) (and x6273 x69) (and x7329 x1988) (and x7764 x6771))))
(assert (x308 x4525))
(assert (not (x2741 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914))))
(assert (= x352 (x5881 (x5919 x352 x7287))))
(assert (x308 x5682))
(assert (x308 x5750))
(assert (x308 x2339))
(assert (x308 x2833))
(assert (x308 x872))
(assert (x308 x1476))
(assert (< 10000 (x5919 32 x3913)))
(assert (x308 x3634))
(assert (= (or x4534 x6282) x3473))
(assert (= (=> (and (= (= 0 x6320) x3056) (or (and (and (= x4936 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1978)) (<= x4936 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 1 x4936) (= x1978 (x8120 (+ x6320 63))) (= x4316 (+ x4936 128))) (not x3056)) (and (= x4316 128) x3056))) x2945) x4226))
(assert (= (or x4952 x717) x4825))
(assert (x308 x2595))
(assert (= (and x3604 x2443) x471))
(assert (x308 x2821))
(assert (x308 x2476))
(assert (= (x5843 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)) x1386))
(assert (= (x3071 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)) x4322))
(assert (< (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6754 64 x5691 7) (x5346 (x6754 64 x5691 7))))
(assert (x308 x3481))
(assert (= (x5346 x581) (x5346 (+ 2 x581))))
(assert (x308 x7410))
(assert (= (and x2774 (not x4665)) x5756))
(assert (x308 x1874))
(assert (x2741 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x308 x2981))
(assert (x5886 x1771))
(assert (x308 x2271))
(assert (x308 x6888))
(assert (x308 x1367))
(assert (= x2097 (=> (and (= x5601 2) (= x5940 x8013) (= x7171 36) (= x3531 x2442) (= x386 x7111) (= x2651 0) (= x6275 true) (= x5290 false)) x561)))
(assert (x308 x1628))
(assert (x308 x1393))
(assert (x308 x3329))
(assert (x308 x328))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)))
(assert (= (x5346 (x6292 x7051 x382 x8284 x7275 x7761 x5763)) (x6292 x7051 x382 x8284 x7275 x7761 x5763)))
(assert (= (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776) (x5346 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (x308 x7253))
(assert (x308 x7438))
(assert (x308 x8398))
(assert (=> (<= x7411 10000) (= 0 (x5346 x7411))))
(assert (x308 x2679))
(assert (x308 x2798))
(assert (= 0 (x5346 44057028636630039105102054091366763171729008530599747929804322044178077843456)))
(assert (= (x4162 (x5919 x4203 x6504)) x6504))
(assert (= (and (not x1330) x7791) x7605))
(assert (x308 x8424))
(assert (= (x5346 (x5919 32 x6410)) (x5919 32 x6410)))
(assert (x308 x7426))
(assert (x308 x135))
(assert (x308 x897))
(assert (= x8296 (and x7284 x1732)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)))
(assert (= x5182 (and x568 (not x3331))))
(assert (=> (>= 10000 x7648) (= 0 (x5346 x7648))))
(assert (=> (>= 10000 x382) (= 0 (x5346 x382))))
(assert (x308 x8070))
(assert (x308 x6098))
(assert (=> (>= 10000 x5080) (= (x5346 x5080) 0)))
(assert (x308 x5959))
(assert (x308 x2884))
(assert (x308 x2691))
(assert (=> (<= x6425 10000) (= (x5346 x6425) 0)))
(assert (x308 x47))
(assert (x308 x3270))
(assert (x308 x7129))
(assert (= (and (not x3421) x8101) x7161))
(assert (x308 x6344))
(assert (= (x5346 (x5919 x516 x5371)) (x5919 x516 x5371)))
(assert (not (x2741 (x5919 x1198 x3379))))
(assert (=> (<= x1718 10000) (= (x5346 x1718) 0)))
(assert (x308 x5062))
(assert (x308 x6780))
(assert (x3057 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (<= x6029 10000) (= 0 (x5346 x6029))))
(assert (x308 x6752))
(assert (=> (<= x4344 10000) (= 0 (x5346 x4344))))
(assert (x308 x4957))
(assert (x308 x7313))
(assert (= (x5346 (x6292 x4801 x7411 x4782 x1324 x2659 x1983)) (x6292 x4801 x7411 x4782 x1324 x2659 x1983)))
(assert (=> (<= x2659 10000) (= (x5346 x2659) 0)))
(assert (x308 x4782))
(assert (x308 x2426))
(assert (not (x2741 (x1300 x3019 x981 x4009 x1972))))
(assert (x308 x3286))
(assert (= (x6754 64 x1041 36) (x5346 (x6754 64 x1041 36))))
(assert (x308 x4820))
(assert (x308 x6208))
(assert (x308 x4774))
(assert (= (x5346 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (x308 x8288))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x352 x4242 x5347)))
(assert (x308 x4870))
(assert (= x7758 (x932 (x6754 x1185 x8205 x7758))))
(assert (= (or (and x1906 x8239) (and x4603 x8327) (and x2946 x6690) (and x2124 x6545) (and x6968 x7634) (and x2117 x4990) (and x4682 x3030) (and x1609 x7537) (and x193 x7445)) x1876))
(assert (= (and (not x1692) x6760) x1190))
(assert (= (x5346 (+ x7233 2)) (x5346 x7233)))
(assert (> (x6292 x352 x8047 x418 x8424 x2868 x7699) 10000))
(assert (= (and x7605 (not x2347)) x4980))
(assert (x308 x350))
(assert (=> (<= x7694 10000) (= (x5346 x7694) 0)))
(assert (= x949 (or x4519 x1793)))
(assert (= x8194 (x2151 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (x308 x5859))
(assert (x308 x7755))
(assert (x308 x8501))
(assert (not (x2741 (x5919 x4982 x8150))))
(assert (= (and (not x1728) x7520) x1521))
(assert (x308 x2983))
(assert (< (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x5919 x3019 x5310))))
(assert (x308 x375))
(assert (not (x2741 (x4041 x4801 x1351 x7080 x611 x5938))))
(assert (x308 x6362))
(assert (x308 x4115))
(assert (x308 x5827))
(assert (= (x932 (x1300 x3850 x7052 x7836 x6633)) x7836))
(assert (= (x932 (x6292 x7655 x2538 x2738 x696 x7977 x7973)) x2738))
(assert (= x1011 (x4162 (x6754 64 x1011 11))))
(assert (x308 x4296))
(assert (< (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6347))
(assert (x308 x791))
(assert (x308 x3851))
(assert (x308 x1607))
(assert (x308 x6723))
(assert (x5886 x3634))
(assert (= (x5881 (x6754 64 x5372 2)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x516 x5371)))
(assert (x308 x7037))
(assert (x308 x6601))
(assert (not (x2741 (x6754 64 x7463 100))))
(assert (= x3816 (x2151 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (x308 x3190))
(assert (x308 x7648))
(assert (x308 x2630))
(assert (= (x5346 (x6754 64 x2253 10)) (x6754 64 x2253 10)))
(assert (= x2283 (or x8274 x7588)))
(assert (x308 x7507))
(assert (= x345 (and x5566 x3640)))
(assert (x308 x3302))
(assert (x308 x6956))
(assert (= x6826 x8010))
(assert (= x4465 (x932 (x6754 64 1 x4465))))
(assert (x308 x2209))
(assert (x308 x3848))
(assert (= (x2151 (x4041 x516 x2133 x1302 x1004 x6925)) x1004))
(assert (not (x2741 (x4041 x7655 x6068 x7455 x134 x1096))))
(assert (x308 x4066))
(assert (x308 x8109))
(assert (x308 x994))
(assert (< (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5346 (x5919 x4727 x7961)) (x5919 x4727 x7961)))
(assert (x308 x4301))
(assert (= (=> (and (or (not x81) (and (and (or (and (and (and (= (x7600 x376) x1005) (= (< 64 x5789) x3773) (= x376 (x8120 (+ 32 x5734))) (= x2209 (x8120 (+ 32 x247)))) (or (and (and (or (and (and (= x7976 (x8120 (+ x5734 96))) (= (x8120 (+ 96 x247)) x3298) (= x8412 (x26 x7976)) (>= 128 x5789)) x3250) (not x3250)) (and (= (x8120 (+ x247 64)) x8127) (= x3250 (> x5789 96)) (= (x4981 x1001) x3013) (= x1001 (x8120 (+ x5734 64))))) x3773) (not x3773))) x3561) (not x3561)) (and (= x7659 (x643 x5734)) (= (> x5789 32) x3561))) x81)) (and (= x4232 (x8120 (+ x5584 31))) (= x6154 (x7553 (- x4428 x2172))) (= (x6841 x4143) x5789) (= (x8120 (+ x4428 32)) x247) (= x5414 (x8120 (+ x1762 32))) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4232) x5221) (= x81 (< 0 x5789)) (= (x8120 (+ x3595 x5221)) x4428) (= (x8120 (+ x3595 x5584)) x6803) (= (x8120 (+ 32 x5354)) x1762))) x7105) x7335))
(assert (= x6783 x8053))
(assert (> (x6754 x4301 x4290 x3083) 10000))
(assert (x308 x2848))
(assert (x308 x4320))
(assert (=> (<= x1434 10000) (= 0 (x5346 x1434))))
(assert (x308 x1805))
(assert (x308 x1704))
(assert (x308 x2245))
(assert (x308 x2652))
(assert (x308 x7495))
(assert (x308 x5599))
(assert (x792 x8129))
(assert (= (x5346 1914215) 0))
(assert (=> (>= 10000 x7149) (= (x5346 x7149) 0)))
(assert (x308 x4310))
(assert (x308 x5286))
(assert (x308 x2831))
(assert (x308 x4875))
(assert (x308 x1228))
(assert (x308 x6921))
(assert (x308 x6789))
(assert (= (x2151 (x1300 x5494 x4421 x4614 x7667)) x7667))
(assert (= x2085 (x3587 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602))))
(assert (= 64 (x5881 (x6754 64 x2448 4))))
(assert (x5886 x8178))
(assert (x308 x4873))
(assert (=> (<= x7704 10000) (= (x5346 x7704) 0)))
(assert (x308 x5438))
(assert (= x913 (or x1943 x7592 x4133 x1383)))
(assert (= (=> (and (= (= 0 x2187) x3421) (or (and (and (= x2187 x7378) (= x68 x195) (= x7309 x1472) (= x2365 x2893) (= x6344 (x5392 x5372)) (= x7148 (ite (= x2187 0) x6666 0)) (< (+ x6344 x7148) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7683 x6347) (= x82 x5391) (= (- x5132 x7148) x7760) (= x5132 (x3245 x47)) (= x3843 (+ x6344 x7148)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3843) (= x4220 x5321) (= x867 x3843) (= x8409 x6320) (<= 0 x3843)) x3421) (and (and (= x6320 x8409) (= x7683 x6347) (= x195 x68) (= x2187 x7378) (= x2365 x2893) (= x1472 x7309) (= x5321 x4220) (= x5391 x82)) (not x3421)))) x4226) x1756))
(assert (x2741 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x308 x7815))
(assert (x308 x8337))
(assert (=> (>= 10000 x6821) (= (x5346 x6821) 0)))
(assert (= x3562 (=> (and (= x5122 x4025) (= x2426 x6709) (= x4612 x5263) (= x5118 x3173) (= x1820 2) (= x4592 x5029) (= x6362 x8060) (= x495 x3597) (= x4444 x644) (= x4976 x7495) (= x6668 x1473) (= x4183 x5873) (= x5133 x1944) (= x1570 0) (= x374 x2448) (= (x2321 255 x1456) x5133) (= x4216 x7164)) x1327)))
(assert (x308 x5473))
(assert (= x6993 (and (not x2292) x4937)))
(assert (x308 x1340))
(assert (x308 x5966))
(assert (x308 x5842))
(assert (= x8305 (x5881 (x1300 x8305 x7028 x1718 x1000))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x516 x2133 x1302 x1004 x6925)))
(assert (= (and x6584 x2121) x7850))
(assert (x308 x4588))
(assert (x308 x5635))
(assert (x308 x896))
(assert (x308 x962))
(assert (= x8099 (x932 (x6754 x2135 x6129 x8099))))
(assert (< (x6754 64 x6421 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x6754 64 x5739 (ite (>= 32 x4301) x553 (ite (>= 64 x4301) x3366 (ite (<= x4301 96) x6432 (ite (<= x4301 128) x4345 (ite (>= 160 x4301) x4093 (ite (>= 192 x4301) x539 x3309))))))) 10000))
(assert (= (x932 (x6754 64 x8532 36)) 36))
(assert (x308 x3738))
(assert (x308 x1641))
(assert (> (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458) 10000))
(assert (= x1059 (and x2943 (not x8369))))
(assert (x308 x3330))
(assert (= x385 (=> (and (or (and x1104 (and (= x6146 x1068) (= x5635 x2563) (= x8373 (x633 x3173)) (= x1255 x2326) (= x3345 x8012) (= x3147 x6231) (= x8067 (- x8373 x1050)) (= x4320 x5911) (= x3911 x4710) (= x4131 x6877) (= x7993 x2949) (<= x8359 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8359 (+ x962 x1050)) (= x5811 x1989) (= x3611 x5374) (= x7679 x921) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1050 x962)) (= x1050 (ite (= x4153 0) x3211 0)) (= x962 (x5316 x333)) (= x5382 x4153) (= x8397 x7607) (<= 0 x8359) (= x1172 x5762) (= x8359 x5618))) (and (and (= x4131 x6877) (= x1255 x2326) (= x5762 x1172) (= x7679 x921) (= x3345 x8012) (= x2563 x5635) (= x2949 x7993) (= x1068 x6146) (= x8397 x7607) (= x5811 x1989) (= x3611 x5374) (= x3911 x4710) (= x5911 x4320) (= x6231 x3147) (= x5382 x4153)) (not x1104))) (= x1104 (= x4153 0))) x6448)))
(assert (x308 x832))
(assert (x308 x5569))
(assert (= (and x6722 x6466) x4519))
(assert (x3057 x5339))
(assert (=> (>= 10000 x4888) (= (x5346 x4888) 0)))
(assert (x308 x6580))
(assert (x308 x584))
(assert (=> (<= x6756 10000) (= (x5346 x6756) 0)))
(assert (= x3064 (x932 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (x308 x4481))
(assert (=> (>= 10000 x7638) (= 0 (x5346 x7638))))
(assert (=> (>= 10000 x3796) (= (x5346 x3796) 0)))
(assert (x308 x631))
(assert (= x2744 (and x1179 (not x8116))))
(assert (= x279 (or x1103 x2359)))
(assert (= x4498 (x4162 (x5919 x7655 x4498))))
(assert (= (x5346 3812630263) 0))
(assert (= (x5919 x7655 x4498) (x5346 (x5919 x7655 x4498))))
(assert (x308 x4181))
(assert (= (x3071 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x764))
(assert (= (x3071 (x6292 x4838 x8171 x5375 x8084 x4487 x540)) x4487))
(assert (x308 x895))
(assert (x308 x715))
(assert (x308 x2239))
(assert (x308 x3306))
(assert (= (x6292 x7655 x2538 x2738 x696 x7977 x7973) (x5346 (x6292 x7655 x2538 x2738 x696 x7977 x7973))))
(assert (= x5642 (and x5479 x5511)))
(assert (not (x2741 (x6754 x8305 x2809 x4963))))
(assert (= 64 (x5881 (x6754 64 x3285 6))))
(assert (x3057 x7502))
(assert (= (x3587 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411)) x6072))
(assert (x308 x2807))
(assert (not (x2741 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (= (and (not x8215) x5450) x4760))
(assert (x308 x6010))
(assert (x308 x1322))
(assert (x308 x4498))
(assert (x308 x6797))
(assert (< 10000 (x6292 x4801 x7411 x4782 x1324 x2659 x1983)))
(assert (x308 x4327))
(assert (= (x6754 x1185 x8205 x7758) (x5346 (x6754 x1185 x8205 x7758))))
(assert (x308 x2656))
(assert (= (or (and x346 x8403) x3360) x8133))
(assert (=> (<= x5673 10000) (= 0 (x5346 x5673))))
(assert (x308 x5982))
(assert (=> (>= 10000 x681) (= (x5346 x681) 0)))
(assert (x308 x721))
(assert (x308 x586))
(assert (x308 x4312))
(assert (= x6447 (=> (and (= x2620 x2481) (= x4341 x2833) (= x7905 x5286) (= x5690 x7023) (= x2731 x7776) (= x7671 x4250) (= x6534 x309) (= x1418 x7777) (= x4579 x5682) (= x3919 x3661) (= x1243 x5341) (= x959 x2839) (= x6012 x2759) (= x6248 x4957)) x302)))
(assert (x308 x197))
(assert (= (x1300 x5494 x4421 x4614 x7667) (x5346 (x1300 x5494 x4421 x4614 x7667))))
(assert (x308 x592))
(assert (x308 x4700))
(assert (x308 x980))
(assert (x308 x5321))
(assert (x308 x4801))
(assert (= (and x3730 x6014) x8295))
(assert (=> (<= x8230 10000) (= (x5346 x8230) 0)))
(assert (not (x2741 (x5919 x2135 x2271))))
(assert (= (x4162 (x6754 64 1 x7526)) 1))
(assert (x308 x4251))
(assert (= (x5881 (x5919 x3850 x1562)) x3850))
(assert (=> (<= x516 10000) (= (x5346 x516) 0)))
(assert (not (x2741 (x6754 64 x3303 12))))
(assert (x308 x5759))
(assert (= (x5346 (x6754 x4838 x6412 x7245)) (x6754 x4838 x6412 x7245)))
(assert (x308 x1255))
(assert (x3057 x3534))
(assert (x308 x8240))
(assert (x308 x8114))
(assert (=> (<= x3977 10000) (= (x5346 x3977) 0)))
(assert (= (and x4619 (not x8143)) x2556))
(assert (= (x5346 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)) (x6292 x4301 x3767 x6440 x7374 x1969 x3086)))
(assert (x308 x4864))
(assert (x308 x1565))
(assert (not (x2741 (x5919 x8305 x6208))))
(assert (> (x6754 64 x6287 4) 10000))
(assert (= (and x7477 x726) x5140))
(assert (= (and (not x6837) x1334) x6760))
(assert (not (x2741 (x6292 x1391 x7138 x7296 x1932 x3069 x8182))))
(assert (= x715 (x2151 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x1575))
(assert (=> (>= 10000 x4757) (= (x5346 x4757) 0)))
(assert (x5886 x5658))
(assert (= (and x6547 x5668) x468))
(assert (x308 x7632))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x3850 x7892 x6405)))
(assert (= 64 (x5881 (x6754 64 x4343 7))))
(assert (< (x5919 x7051 x4164) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4338))
(assert (x308 x6025))
(assert (=> (>= 10000 x7784) (= 0 (x5346 x7784))))
(assert (x308 x1329))
(assert (= x6783 (=> (and (= x5029 x2238) (= x5681 true) (= x5263 x13) (= false x3382) (= x3618 0) (= x1006 x124) (= x1529 x4183) (= x6668 x8560) (= x4065 x8060) (= x3910 x3173) (= x2448 x1867) (= x4719 x4025) (= x3597 x8469) (= x644 x6997) (= x3203 0) (= x124 (x2321 255 x5587)) (= x5624 x2426) (= 2 x3413) (= x4216 x6055)) x5755)))
(assert (x308 x5434))
(assert (x308 x1275))
(assert (x308 x3504))
(assert (x308 x1589))
(assert (x308 x1969))
(assert (x308 x2581))
(assert (=> (>= 10000 x6794) (= (x5346 x6794) 0)))
(assert (= (or x7820 (and x3063 (not x6582))) x7460))
(assert (< 10000 (x6754 x516 x1484 x7371)))
(assert (x3057 x7715))
(assert (x3057 x7817))
(assert (= x6794 (x4162 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x308 x201))
(assert (x308 x1648))
(assert (= x6920 (or (and x979 x2991) (and x6732 x3824) (and x3314 x4494) (and x4433 x5210) (and x7734 x671))))
(assert (x308 x5495))
(assert (= x7149 (x4162 (x5919 x4838 x7149))))
(assert (= (x5346 (x6754 64 x6287 3)) (x6754 64 x6287 3)))
(assert (x308 x6412))
(assert (< (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4839))
(assert (x308 x7409))
(assert (x2741 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (= x2587 (x2151 (x1300 x2135 x5205 x5858 x2587))))
(assert (x308 x4101))
(assert (=> (>= 10000 x8305) (= (x5346 x8305) 0)))
(assert (not (x2741 (x5919 x7655 x4498))))
(assert (= (x4162 (x6292 x4203 x2643 x5854 x1971 x1016 x518)) x2643))
(assert (= 0 (x5346 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (x308 x39))
(assert (x308 x7430))
(assert (x308 x5589))
(assert (< (x6754 x4801 x2232 x5324) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6166))
(assert (not (x2741 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458))))
(assert (= (and (not x933) x4538) x7814))
(assert (= x7424 (and x5060 (not x5237))))
(assert (x308 x1112))
(assert (x308 x7388))
(assert (= x5491 (=> (= x1123 (= 0 x6235)) (and (=> (and x1123 (and (= x1963 (x5793 x3962)) (>= 255 x1963) (= (> x1963 3) x4611) (= (x6754 64 x6894 11) x3962))) (and (=> (and x4611 (and (= x4717 false) (= x7058 true) (= 36 x1235))) x4392) (=> (and (= x2562 (= x1963 2)) (not x4611)) (and (=> (and (and (<= x2448 65535) (= (x1108 x2970) x8110) (= x2970 (x6754 64 1 x7526)) (= (= x5105 0) x3312) (= x7526 (x6754 64 x2448 4))) x2562) (and (=> (and (= x8110 x4005) x3312) x3233) (=> (and (= x8034 (> x8110 x5105)) (not x3312)) (and (=> (and (and (= false x1256) (= x3424 true) (= 4 x1235)) x8034) x4392) (=> (and (not x8034) (= x4005 x5105)) x3233))))) (=> (and (not x2562) (and (= 4 x1235) (= x6688 true) (= x3673 false))) x4392))))) (=> (and (not x1123) (and (= x3197 false) (= x399 true) (= 4 x1235))) x4392)))))
(assert (x3057 x4134))
(assert (x308 x6364))
(assert (x308 x4703))
(assert (=> (>= 10000 x1676) (= (x5346 x1676) 0)))
(assert (= (=> (and (or (and x8208 (and (and (= (x4339 x5734) x737) (= x3449 (> x5809 32))) (or (not x3449) (and x3449 (and (and (= x4713 (x8120 (+ x5734 32))) (= (< 64 x5809) x8314) (= x8236 (x8120 (+ x517 32))) (= (x3437 x4713) x1831)) (or (and (and (or (and (and (= (x8120 (+ 96 x517)) x5054) (>= 128 x5809) (= x6630 (x8120 (+ 96 x5734))) (= x8213 (x7596 x6630))) x6521) (not x6521)) (and (= (< 96 x5809) x6521) (= (x8120 (+ x5734 64)) x7238) (= x2624 (x8339 x7238)) (= (x8120 (+ 64 x517)) x5445))) x8314) (not x8314))))))) (not x8208)) (and (= x517 (x8120 (+ x3648 32))) (= x3605 (x8120 (+ x3999 x897))) (= (x7553 (- x3648 x6492)) x8065) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2752) x1208) (= (> x5809 0) x8208) (= x5809 (x3259 x4143)) (= (x8120 (+ x1208 x897)) x3648) (= (x8120 (+ x3999 31)) x2752) (= (x8120 (+ x6752 32)) x718) (= (x8120 (+ x718 32)) x2966))) x3884) x1009))
(assert (=> (<= x6943 10000) (= (x5346 x6943) 0)))
(assert (x308 x4910))
(assert (x308 x6071))
(assert (=> (>= 10000 x4875) (= (x5346 x4875) 0)))
(assert (=> (>= 10000 x5649) (= 0 (x5346 x5649))))
(assert (= (or x79 x7812 x2909 x4784 x1399) x8538))
(assert (= x5724 (x2151 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322))))
(assert (x308 x6051))
(assert (x308 x4307))
(assert (x308 x4484))
(assert (= x7413 (=> (= (> x5743 0) x2289) (and (=> (and (and (or (not x8356) (and (and (and (= x1680 (x3740 x6625)) (= x2675 (> x5584 32))) (or (not x2675) (and (and (and (= (x8120 (+ x6625 32)) x2007) (= x5917 (> x5584 64)) (= (x8120 (+ 32 x3595)) x515) (= x3573 (x438 x2007))) (or (and x5917 (and (or (not x742) (and (and (= x4820 (x8120 (+ x3595 96))) (= x1468 (x6658 x2310)) (<= x5584 128) (= (x8120 (+ 96 x6625)) x2310)) x742)) (and (= (x5533 x1423) x5144) (= (> x5584 96) x742) (= (x8120 (+ x3595 64)) x2598) (= (x8120 (+ 64 x6625)) x1423)))) (not x5917))) x2675))) x8356)) (and (= (* x5614 32) x3483) (= (x8120 (+ x6691 x5734)) x3927) (= (x8120 (+ 36 x5686)) x2172) (= (x3157 x7723) x5584) (= (* 32 x3727) x2899) (= x3371 150) (= x4143 (x8120 (+ x7723 x8539))) (= x87 (x8120 (+ x6691 31))) (<= x7723 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x8120 (+ x1740 32)) x3595) (= x2225 (x8120 (+ x6625 x1391))) (= (x8120 (+ 32 x3483)) x8539) (< x4143 x5686) (= x5686 (x8120 (+ x4143 x7642))) (< x7723 x4143) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x7723) (= x5734 (x8120 (+ 32 x4143))) (= x5354 (x8120 (+ 32 x2172))) (<= 1 x4143) (= x6625 (x8120 (+ 32 x7723))) (<= x7723 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (div x87 32) x3727) (= x5614 (div x4202 32)) (<= 2 x5686) (<= x4143 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< 0 x5584) x8356) (= (x8120 (+ 128 x2172)) x1740) (= (x8120 (+ 31 x1391)) x4202) (= (x8120 (+ 32 x2899)) x7642))) x2289) x7335) (=> (and (and (= (x8120 (+ x3248 32)) x4338) (= (x8120 (+ x3153 32)) x3248) (= x3153 (x8120 (+ 32 x43))) (= 132 x4319) (= x43 (x8120 (+ x7723 4))) (= x1450 false) (= x7653 true)) (not x2289)) x651)))))
(assert (not (x2741 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349))))
(assert (x308 x3754))
(assert (x308 x2573))
(assert (x308 x4326))
(assert (= (x5346 (x4041 x5494 x7249 x5828 x4400 x2630)) (x4041 x5494 x7249 x5828 x4400 x2630)))
(assert (= (x5881 (x1300 x1391 x380 x5080 x487)) x1391))
(assert (= (x932 (x6292 x1198 x8188 x2116 x5208 x7624 x827)) x2116))
(assert (= x1383 (and x7567 x8184)))
(assert (< 10000 (x6754 x8305 x2809 x4963)))
(assert (=> (<= x1584 10000) (= (x5346 x1584) 0)))
(assert (= x1293 (x932 (x6754 64 1 x1293))))
(assert (x308 x8442))
(assert (= (and (not x2124) x6545) x5210))
(assert (x308 x600))
(assert (= x3584 (and x7342 (not x8317))))
(assert (x3057 x3856))
(assert (x308 x6881))
(assert (= x1519 (x3071 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (= x1760 (and (not x787) x6021)))
(assert (x308 x2302))
(assert (x308 x877))
(assert (x308 x1882))
(assert (= (or x1015 x6993) x3592))
(assert (= x3266 (and x7154 x3018)))
(assert (= x3018 (and x7515 x8271)))
(assert (x308 x4235))
(assert (=> (<= x1096 10000) (= (x5346 x1096) 0)))
(assert (=> (>= 10000 x1519) (= (x5346 x1519) 0)))
(assert (x308 x6540))
(assert (= (and (not x1440) x6301) x7511))
(assert (x308 x1319))
(assert (x308 x4341))
(assert (x308 x7891))
(assert (= (and (not x5395) x7484) x3038))
(assert (x308 x2353))
(assert (= x3246 (and (not x1763) x5579)))
(assert (= x5942 x8054))
(assert (= (x4162 (x6754 x4203 x6076 x7017)) x6076))
(assert (= (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420) (x5346 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (=> (>= 10000 x3928) (= (x5346 x3928) 0)))
(assert (> (x5919 32 x6757) 10000))
(assert (= (and x7581 (not x7703)) x7089))
(assert (x308 x5236))
(assert (=> (<= x3193 10000) (= 0 (x5346 x3193))))
(assert (x308 x4672))
(assert (= x516 (x5881 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649))))
(assert (x308 x3460))
(assert (=> (>= 10000 x8083) (= (x5346 x8083) 0)))
(assert (x308 x3124))
(assert (= x849 (and x3521 x3383)))
(assert (x308 x8229))
(assert (x308 x2150))
(assert (x308 x8079))
(assert (= (or (and x1445 x1563) (and x5732 x2186) (and x5830 x4526)) x1504))
(assert (x2741 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x308 x5433))
(assert (x308 x126))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (x3057 x30))
(assert (= x5783 (x932 (x6754 x1198 x3346 x5783))))
(assert (x308 x8085))
(assert (not (x2741 (x6754 64 1 x7526))))
(assert (x308 x6012))
(assert (= x2547 (and x5011 x6588)))
(assert (not (x2741 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (= x4985 (and x7538 x2392)))
(assert (x308 x5558))
(assert (= (and x2058 x4686) x6569))
(assert (x308 x5534))
(assert (x308 x1128))
(assert (=> (>= 10000 x743) (= 0 (x5346 x743))))
(assert (=> (<= x6028 10000) (= 0 (x5346 x6028))))
(assert (x308 x4790))
(assert (x308 x6171))
(assert (=> (<= x29 10000) (= 0 (x5346 x29))))
(assert (=> (>= 10000 x7487) (= (x5346 x7487) 0)))
(assert (not (x2741 (x6754 64 x1011 11))))
(assert (= (x3071 (x6292 x3850 x5673 x6483 x2284 x4803 x233)) x4803))
(assert (= (and x25 (not x1877)) x3189))
(assert (x308 x4322))
(assert (x308 x2401))
(assert (x308 x1764))
(assert (x308 x8455))
(assert (= x2653 (=> (and (= x6543 (= 0 x5360)) (or (and (not x6543) (and (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6337) x8445) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x8445) (>= x8445 1) (= (+ 128 x8445) x4364) (= (x8120 (+ x5360 63)) x6337))) (and (= 128 x4364) x6543))) x5177)))
(assert (x308 x5880))
(assert (x308 x7137))
(assert (= (or x3038 x2483) x4530))
(assert (= (and (not x327) x3126) x5447))
(assert (x308 x1101))
(assert (x5050 x7502))
(assert (x308 x4189))
(assert (x308 x3098))
(assert (= (and x5210 (not x4433)) x69))
(assert (= (x6754 64 x2323 36) (x5346 (x6754 64 x2323 36))))
(assert (=> (>= 10000 x1004) (= 0 (x5346 x1004))))
(assert (x308 x7364))
(assert (x308 x2628))
(assert (= x5308 (=> (and (= x2702 x2426) (= (x2321 255 x8129) x4141) (= x5263 x1949) (= x1587 x5029) (= x4216 x5559) (= x2448 x6753) (= x7004 2) (= x4840 x644) (= x198 x8060) (= x3597 x1061) (= x4141 x6118) (= x3759 x6668) (= x1203 x3173) (= x4025 x1202) (= x6529 x8501) (= x4183 x7575) (= 0 x5695)) x1974)))
(assert (x308 x2133))
(assert (x308 x7450))
(assert (x308 x837))
(assert (= (x932 (x6754 64 x3082 100)) 100))
(assert (x308 x7108))
(assert (=> (<= x6699 10000) (= (x5346 x6699) 0)))
(assert (= x7469 (x3587 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x308 x5455))
(assert (x308 x2746))
(assert (x308 x8098))
(assert (not (x2741 (x5919 x1391 x677))))
(assert (= (x4162 (x4041 x3850 x177 x7031 x7991 x4266)) x177))
(assert (x308 x7645))
(assert (= x6387 (=> (= x5072 (+ x4066 292)) x1347)))
(assert (= (and x7375 (not x2409)) x2943))
(assert (> (x1300 x352 x8553 x6809 x7834) 10000))
(assert (> (x6754 64 x3285 6) 10000))
(assert (x308 x2013))
(assert (= (x4041 x1198 x3242 x8275 x7224 x8162) (x5346 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (x308 x8486))
(assert (x308 x879))
(assert (not (x2741 (x5919 x3850 x1562))))
(assert (x308 x5553))
(assert (x308 x494))
(assert (=> (>= 10000 x3862) (= (x5346 x3862) 0)))
(assert (x308 x7371))
(assert (= x2851 (x932 (x1300 x7491 x4344 x2851 x1075))))
(assert (= 0 (x5346 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (x308 x1231))
(assert (=> (<= x4961 10000) (= 0 (x5346 x4961))))
(assert (x308 x7040))
(assert (x308 x6474))
(assert (x308 x3540))
(assert (x308 x6999))
(assert (= (x5881 (x4041 x4838 x4788 x6549 x5334 x6859)) x4838))
(assert (= x2423 (x3071 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649))))
(assert (x308 x487))
(assert (x308 x3850))
(assert (= (and x2412 (not x6244)) x5608))
(assert (x308 x1172))
(assert (x3057 x1771))
(assert (x308 x7380))
(assert (= x2946 (and x8309 x110)))
(assert (x308 x1680))
(assert (= x3285 (x4162 (x6754 64 x3285 2))))
(assert (x308 x1171))
(assert (= (=> (= (< 0 (ite (= x7507 0) x7507 1)) x4731) (and (=> (and (not x4731) (and (or (not x3788) x3788) (= x3788 (= x7883 0)))) x2438) (=> x4731 x3429))) x701))
(assert (=> (<= x1644 10000) (= 0 (x5346 x1644))))
(assert (= (x4162 (x6754 64 x4343 3)) x4343))
(assert (= (x932 (x6754 x7655 x6943 x4201)) x4201))
(assert (x308 x5167))
(assert (x308 x3846))
(assert (= (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879) (x5346 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879))))
(assert (x308 x8504))
(assert (x308 x3178))
(assert (x308 x4134))
(assert (= x2827 (and x1664 x3839)))
(assert (= x5353 (x932 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (x308 x3174))
(assert (=> (<= x7293 10000) (= (x5346 x7293) 0)))
(assert (= (and x2164 (not x7620)) x2066))
(assert (= x8138 (and x4472 x5733)))
(assert (x308 x7038))
(assert (not (x2741 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (=> (<= x5996 10000) (= 0 (x5346 x5996))))
(assert (< (x6292 x8305 x4409 x3735 x4724 x5489 x7293) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x5393))
(assert (x308 x2507))
(assert (= (and x7406 (not x5685)) x205))
(assert (=> (>= 10000 x7198) (= (x5346 x7198) 0)))
(assert (x308 x1027))
(assert (= (x1300 x1198 x268 x4771 x1098) (x5346 (x1300 x1198 x268 x4771 x1098))))
(assert (x308 x7389))
(assert (< 10000 (x6754 x4838 x6412 x7245)))
(assert (= (x932 (x1300 x5086 x6071 x7368 x6250)) x7368))
(assert (x308 x2904))
(assert (x3057 x655))
(assert (x308 x3650))
(assert (not (x2741 (x6754 64 x6756 (ite (>= 32 x4982) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (>= 128 x4982) x2386 (ite (<= x4982 160) x4970 (ite (<= x4982 192) x6333 x1291))))))))))
(assert (= (and x4930 (not x499)) x564))
(assert (= x6192 (=> (= (= x4758 0) x2650) (and (=> (and (and (= x6962 x6657) (= x3409 x6965) (= x3237 x676) (= x7285 x8106)) (not x2650)) x213) (=> (and (and (= x5481 x7171) (= x386 x7111) (= x2286 false) (= 0 x2651) (= x5940 x8013) (= x3531 x2442) (= true x4765) (= x2200 2)) x2650) x561)))))
(assert (= x5100 (and x4467 x130)))
(assert (= x2856 (=> (and (= x496 true) (= x7023 x644) (= x959 x8060) (= x4025 x2759) (= x1418 0) (= x4957 x4216) (= x4579 x2426) (= x3597 x2620) (= x4183 x3661) (= x8532 x7905) (= x2448 x2731) (= x3173 x309) (= x5341 x6668) (= x3743 false) (= x4250 x5263) (= x5029 x2833) (= x6548 2)) x6447)))
(assert (x792 x8551))
(assert (x308 x2907))
(assert (x308 x6089))
(assert (x308 x4545))
(assert (= 64 (x5881 (x6754 64 x4252 (ite (<= x1185 32) x5946 (ite (>= 64 x1185) x301 (ite (<= x1185 96) x7132 (ite (<= x1185 128) x8307 (ite (<= x1185 160) x5117 (ite (<= x1185 192) x8181 x2835))))))))))
(assert (< 10000 (x6754 64 x2253 10)))
(assert (x308 x5846))
(assert (= 0 (x5346 50226347614966974677930900640024090345938424853691168920094736542366852710400)))
(assert (< 10000 (x6754 64 x1041 2)))
(assert (= (x5881 (x6754 x516 x1484 x7371)) x516))
(assert (= (x5346 (x6754 64 1 x4465)) (x6754 64 1 x4465)))
(assert (= x5571 (and x5862 (not x4019))))
(assert (=> (<= x653 10000) (= (x5346 x653) 0)))
(assert (> (x6292 x7051 x382 x8284 x7275 x7761 x5763) 10000))
(assert (x308 x3736))
(assert (= x3817 (and (not x5917) x7907)))
(assert (= (and x1394 (not x7867)) x7700))
(assert (= (or x7651 x7555) x7931))
(assert (x308 x8285))
(assert (= (and x6670 x2262) x7658))
(assert (x308 x1333))
(assert (x308 x8389))
(assert (= x36 (and x3844 (not x4256))))
(assert (= 64 (x5881 (x6754 64 1 x113))))
(assert (x308 x7500))
(assert (x308 x2441))
(assert (< (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (<= x2135 64) x809 (ite (>= 96 x2135) x1233 (ite (>= 128 x2135) x8345 (ite (>= 160 x2135) x1769 (ite (>= 192 x2135) x5904 x332))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x6292 x4727 x3776 x7451 x6604 x2761 x2213))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x3082 100)))
(assert (x308 x5110))
(assert (=> (<= x7797 10000) (= (x5346 x7797) 0)))
(assert (= (=> (and (= x4225 x3173) (= x2968 x5263) (= x6733 x3597) (= x8060 x2775) (= 0 x5654) (= x8396 x4216) (= x1887 x2426) (= x644 x1393) (= x8000 2) (= x6751 (x2321 255 x655)) (= x1307 x4025) (= x5029 x2925) (= x4297 x8229) (= x4183 x4549) (= x6751 x1236) (= x6668 x2098) (= x2448 x722)) x5529) x2178))
(assert (x308 x1642))
(assert (x308 x2020))
(assert (= (or x5462 x3244) x8086))
(assert (=> (<= x4801 10000) (= (x5346 x4801) 0)))
(assert (x308 x3785))
(assert (= x5092 (and (not x1687) x5344)))
(assert (= x2135 (x5881 (x6754 x2135 x6129 x8099))))
(assert (x308 x4616))
(assert (x308 x6017))
(assert (= x6506 (and (not x1714) x5246)))
(assert (= (=> (and (= x1117 (= x7507 0)) (or x1117 (not x1117))) x701) x5130))
(assert (< (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3783))
(assert (= x3936 (or (and x4438 x802) (and x7794 x7899) (and x6499 x2342))))
(assert (x308 x2034))
(assert (=> (>= 10000 x844) (= (x5346 x844) 0)))
(assert (x308 x6203))
(assert (x308 x3345))
(assert (= (x5843 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x6648))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x7463 100)))
(assert (= 64 (x5881 (x6754 64 x2448 5))))
(assert (x308 x5248))
(assert (= (and x3778 (not x5488)) x1133))
(assert (x308 x1150))
(assert (x308 x4215))
(assert (= x7051 (x5881 (x4041 x7051 x7748 x1747 x7938 x3085))))
(assert (=> (<= x144 10000) (= 0 (x5346 x144))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x4343 7)))
(assert (x308 x4193))
(assert (x308 x6297))
(assert (x308 x842))
(assert (=> (>= 10000 x5930) (= (x5346 x5930) 0)))
(assert (= (x6754 x516 x1484 x7371) (x5346 (x6754 x516 x1484 x7371))))
(assert (= x4334 (and (not x1442) x8482)))
(assert (x308 x538))
(assert (= (=> (and (= x6827 (= x1883 0)) (or x6827 (not x6827))) x4520) x5485))
(assert (x308 x535))
(assert (x308 x476))
(assert (x308 x3529))
(assert (x308 x4172))
(assert (x308 x926))
(assert (= x6949 (x2151 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (not (x2741 (x1300 x4982 x3441 x1676 x4732))))
(assert (= (or (and x6556 x20) (and x1987 x1486)) x1675))
(assert (x308 x3019))
(assert (x308 x4164))
(assert (= (and x1118 x3894) x5914))
(assert (= x4875 (x4162 (x6754 64 x4875 36))))
(assert (x308 x7140))
(assert (=> (<= x2213 10000) (= 0 (x5346 x2213))))
(assert (= (=> (= (+ x4747 x1237) x171) x501) x7062))
(assert (= (and x7027 (not x5547)) x3066))
(assert (x308 x7348))
(assert (= (or x7984 x28) x6823))
(assert (=> (<= x1794 10000) (= (x5346 x1794) 0)))
(assert (x308 x3662))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x6966 11)))
(assert (= (=> (and (= true x8320) (= 0 x2096) (= false x785)) x526) x6872))
(assert (= (x3587 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493)) x7953))
(assert (x308 x3903))
(assert (=> (>= 10000 x6496) (= 0 (x5346 x6496))))
(assert (=> (>= 10000 x6068) (= (x5346 x6068) 0)))
(assert (x3057 x8428))
(assert (x308 x5587))
(assert (x308 x781))
(assert (= x3446 (and x1689 (not x7708))))
(assert (x5602 x6624))
(assert (= x4727 (x5881 (x5919 x4727 x7961))))
(assert (x3057 x3954))
(assert (= x482 x6826))
(assert (x308 x412))
(assert (x308 x4612))
(assert (x308 x2336))
(assert (not (x2741 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (= 0 (x5346 310283853)))
(assert (= (and x6316 x6984) x8354))
(assert (x308 x573))
(assert (x308 x4580))
(assert (= (x2151 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493)) x1434))
(assert (= (x5919 x7491 x5167) (x5346 (x5919 x7491 x5167))))
(assert (= (x932 (x4041 x7491 x2618 x1565 x4794 x3415)) x1565))
(assert (=> (>= 10000 x4421) (= 0 (x5346 x4421))))
(assert (> (x4041 x7655 x6068 x7455 x134 x1096) 10000))
(assert (< 10000 (x4041 x1198 x3242 x8275 x7224 x8162)))
(assert (x308 x7628))
(assert (> (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776) 10000))
(assert (x308 x3799))
(assert (x308 x1063))
(assert (x308 x1798))
(assert (x308 x908))
(assert (x308 x2792))
(assert (x308 x7585))
(assert (x308 x5623))
(assert (x308 x1572))
(assert (= x1562 (x4162 (x5919 x3850 x1562))))
(assert (=> (<= x6253 10000) (= (x5346 x6253) 0)))
(assert (= x7491 (x5881 (x4041 x7491 x2618 x1565 x4794 x3415))))
(assert (= (and x3784 x3751) x5044))
(assert (x308 x6337))
(assert (=> (>= 10000 x3939) (= 0 (x5346 x3939))))
(assert (= (x5346 (x6754 64 x5739 (ite (>= 32 x4301) x553 (ite (>= 64 x4301) x3366 (ite (>= 96 x4301) x6432 (ite (>= 128 x4301) x4345 (ite (<= x4301 160) x4093 (ite (>= 192 x4301) x539 x3309)))))))) (x6754 64 x5739 (ite (>= 32 x4301) x553 (ite (<= x4301 64) x3366 (ite (>= 96 x4301) x6432 (ite (>= 128 x4301) x4345 (ite (<= x4301 160) x4093 (ite (>= 192 x4301) x539 x3309)))))))))
(assert (x308 x5094))
(assert (x308 x8178))
(assert (x308 x5408))
(assert (x308 x5220))
(assert (= x6021 (and x5770 x812)))
(assert (= x7293 (x3587 (x6292 x8305 x4409 x3735 x4724 x5489 x7293))))
(assert (x308 x474))
(assert (x308 x411))
(assert (= x6822 (and x2210 x3339)))
(assert (x308 x4507))
(assert (< (x6292 x3019 x4312 x4101 x3816 x5001 x1691) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2173 10000) (= 0 (x5346 x2173))))
(assert (= x802 (and x6572 x5026)))
(assert (x308 x5649))
(assert (x308 x1902))
(assert (= (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038) (x5346 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038))))
(assert (x5886 x30))
(assert (x2741 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x308 x8024))
(assert (= x5930 (x4162 (x1300 x7051 x5930 x6429 x3683))))
(assert (= x4591 (x3587 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172))))
(assert (x308 x1560))
(assert (x308 x7491))
(assert (= x3524 (and x6645 x4903)))
(assert (x308 x6005))
(assert (x308 x4838))
(assert (= x3800 (x4162 (x6292 x516 x3800 x1794 x5062 x7487 x7784))))
(assert (< (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3205 (x3587 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783))))
(assert (x308 x6246))
(assert (= (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024) (x5346 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (x308 x7623))
(assert (not (x2741 (x5919 32 x2853))))
(assert (x308 x2235))
(assert (x308 x1912))
(assert (= (x932 (x6754 64 x6898 36)) 36))
(assert (x308 x220))
(assert (x308 x5938))
(assert (< 10000 (x6754 64 x4757 2)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x6287 5)))
(assert (=> (>= 10000 x6366) (= 0 (x5346 x6366))))
(assert (x308 x5528))
(assert (x308 x1551))
(assert (=> (<= x2003 10000) (= 0 (x5346 x2003))))
(assert (x308 x910))
(assert (= x4848 (and (not x5410) x6822)))
(assert (= x97 (and (not x1759) x7159)))
(assert (= (x6754 64 x7418 7) (x5346 (x6754 64 x7418 7))))
(assert (x308 x3199))
(assert (= (=> (and (= x644 x3291) (= 0 x5277) (= x2027 x2426) (= x7611 x3597) (= x5645 x2448) (= x8060 x6923) (= x6774 x4216) (= x3173 x3103) (= x5263 x4470) (= x6668 x5293) (= x4241 2) (= x968 x2356) (= (x2321 255 x7135) x7434) (= x7434 x355) (= x2150 x4025) (= x2380 x5029) (= x4183 x5976)) x1219) x8210))
(assert (= (or (and x5918 (not x7146)) (and (not x4810) x241) (and (not x18) x7482)) x5405))
(assert (x308 x408))
(assert (x308 x7198))
(assert (= (and (not x115) x7359) x6339))
(assert (= (x5346 (x6754 x3850 x7892 x6405)) (x6754 x3850 x7892 x6405)))
(assert (= x2836 (x4162 (x6754 64 x2836 36))))
(assert (= x6421 (x4162 (x6754 64 x6421 11))))
(assert (=> (>= 10000 x3889) (= (x5346 x3889) 0)))
(assert (x308 x3313))
(assert (= (x5881 (x5919 32 x6757)) 32))
(assert (= (x4162 (x6754 64 x5426 0)) x5426))
(assert (= (and x7082 (not x697)) x880))
(assert (=> (<= x7689 10000) (= 0 (x5346 x7689))))
(assert (= x1185 (x5881 (x6754 x1185 x8205 x7758))))
(assert (x308 x6066))
(assert (= (and (not x7522) x111) x3126))
(assert (x308 x670))
(assert (x308 x3100))
(assert (x308 x3954))
(assert (= (x5881 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x1198))
(assert (x308 x1762))
(assert (= (x5346 (x1300 x4838 x3875 x4582 x5553)) (x1300 x4838 x3875 x4582 x5553)))
(assert (x308 x3630))
(assert (= x7334 (and x525 x6018)))
(assert (not (x2741 (x6754 64 x6898 36))))
(assert (x308 x3620))
(assert (x308 x1395))
(assert (= (and x7329 (not x1988)) x8258))
(assert (= (x4041 x4801 x1351 x7080 x611 x5938) (x5346 (x4041 x4801 x1351 x7080 x611 x5938))))
(assert (x2741 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (x308 x5120))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x4801 x8289)))
(assert (x308 x2598))
(assert (x308 x8267))
(assert (= x7655 (x5881 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (= x6483 (x932 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (= (and (not x1254) x2290) x7454))
(assert (x308 x7420))
(assert (x308 x2326))
(assert (= x4792 (and (not x3363) x7950)))
(assert (= (x5881 (x6292 x7655 x2538 x2738 x696 x7977 x7973)) x7655))
(assert (= x6531 (and x2621 (not x8331))))
(assert (x308 x4154))
(assert (= x1546 (=> (and (= x2993 (- x1192 132)) (= (ite (< 0 x8352) x4410 (x2321 127 x4410)) x7589) (= x636 (< 0 x3419)) (= x4410 (div x6866 2)) (= (x7553 (- x8352 (mod (ite (> 32 x7589) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3419) (= (x2321 1 x6866) x8352)) (and (=> (and x636 (and (= x1237 (+ x1192 32)) (= x6122 (x2321 1 x6866)) (= (= x6122 0) x6837))) (and (=> (and (and (= x171 (+ x1237 x7009)) (= (* 32 (ite (not (= x7589 0)) 1 0)) x7009) (= x4643 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6866)) (or (= 0 x7009) (= x7009 32))) x6837) x501) (=> (and (not x6837) (and (or (and x1692 (and (= (x3733 x100) x3484) (= x4747 32) (<= x7589 32))) (and (= x4747 0) (not x1692))) (and (= x100 (x5919 32 104)) (= (< 0 x7589) x1692)))) x7062))) (=> (not x636) x6376)))))
(assert (x308 x3590))
(assert (= x3193 (x2151 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (x308 x4060))
(assert (= x717 (and (not x2897) x3574)))
(assert (x308 x6891))
(assert (x308 x2469))
(assert (=> (<= x2851 10000) (= 0 (x5346 x2851))))
(assert (=> (<= x6208 10000) (= (x5346 x6208) 0)))
(assert (x308 x6105))
(assert (= x2192 (or x857 x7323)))
(assert (= (and (not x6771) x7764) x7565))
(assert (x308 x762))
(assert (x308 x2809))
(assert (x308 x7607))
(assert (x308 x6495))
(assert (not (x2741 (x5919 x4301 x4482))))
(assert (= x3774 (and (not x1224) x7454)))
(assert (=> (>= 10000 x8518) (= (x5346 x8518) 0)))
(assert (x308 x6214))
(assert (= (and x5450 x8215) x6461))
(assert (x308 x1452))
(assert (x308 x8163))
(assert (= 64 (x5881 (x6754 64 1 x4465))))
(assert (= (and x7091 x5092) x3804))
(assert (x308 x867))
(assert (= (x2151 (x4041 x4838 x4788 x6549 x5334 x6859)) x5334))
(assert (> (x1300 x7051 x5930 x6429 x3683) 10000))
(assert (x308 x3690))
(assert (x308 x907))
(assert (x308 x6476))
(assert (x308 x8174))
(assert (x308 x4038))
(assert (= (x2151 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411)) x5320))
(assert (x308 x1784))
(assert (= x6608 (and (not x7533) x3586)))
(assert (= (and (not x6327) x5183) x3120))
(assert (=> (>= 10000 x7469) (= (x5346 x7469) 0)))
(assert (x308 x1867))
(assert (not (x2741 (x6754 x352 x4242 x5347))))
(assert (x308 x1795))
(assert (x308 x6048))
(assert (= x1285 (and x3643 (not x5468))))
(assert (x308 x1771))
(assert (= 6 (x932 (x6754 64 x3285 6))))
(assert (> (x4041 x4203 x3492 x6286 x1991 x7015) 10000))
(assert (x308 x2232))
(assert (x308 x4439))
(assert (< 10000 (x4041 x1185 x144 x3889 x2914 x2129)))
(assert (x308 x786))
(assert (x308 x270))
(assert (=> (<= x5094 10000) (= 0 (x5346 x5094))))
(assert (x3057 x2972))
(assert (x308 x1632))
(assert (< 10000 (x6754 64 x5372 1)))
(assert (x308 x1298))
(assert (x308 x7784))
(assert (= (x3071 (x4041 x4801 x1351 x7080 x611 x5938)) x5938))
(assert (= x2599 (=> (and (= x2057 false) (= x958 true) (= x4958 0)) x6628)))
(assert (= (and x7308 (not x1980)) x4939))
(assert (x308 x5190))
(assert (x308 x3161))
(assert (x308 x3687))
(assert (= 0 (x5346 35477284059277649309253622239531857712935939406416048698883813673932370764389)))
(assert (=> (>= 10000 x3924) (= 0 (x5346 x3924))))
(assert (x308 x4587))
(assert (x308 x8074))
(assert (=> (<= x781 10000) (= 0 (x5346 x781))))
(assert (x308 x7724))
(assert (=> (<= x5415 10000) (= 0 (x5346 x5415))))
(assert (= x6501 (x3071 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (x308 x1576))
(assert (x308 x3782))
(assert (< (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5881 (x6754 x3019 x573 x5207)) x3019))
(assert (x308 x3750))
(assert (x308 x7440))
(assert (= (x5346 (x6754 x1391 x2471 x8074)) (x6754 x1391 x2471 x8074)))
(assert (x308 x1208))
(assert (= (x3071 (x6292 x5494 x6256 x6233 x6797 x424 x5377)) x424))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x4982 x7273 x8186 x1537 x706 x4512)))
(assert (x308 x7007))
(assert (= x2950 (and x8086 (not x6054))))
(assert (x308 x5652))
(assert (= (x5346 (x5919 32 x2853)) (x5919 32 x2853)))
(assert (x2741 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (= (x4162 (x4041 x7491 x2618 x1565 x4794 x3415)) x2618))
(assert (x308 x7939))
(assert (=> (>= 10000 x5208) (= 0 (x5346 x5208))))
(assert (> (x1300 x4838 x3875 x4582 x5553) 10000))
(assert (=> (>= 10000 x6419) (= (x5346 x6419) 0)))
(assert (= x5336 (and x6614 x4008)))
(assert (=> (>= 10000 x2332) (= (x5346 x2332) 0)))
(assert (x2741 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (=> (= (= x2123 0) x5488) (and (=> (and (and (= false x3150) (= x5332 0) (= x4669 true)) x5488) x5059) (=> (and (not x5488) (and (= 0 x7883) (= x1580 x6350) (= x7220 x2539) (= 1 x7507) (= x5088 x1982) (= x3188 x5803))) x5130))) x4477))
(assert (= x396 (=> (= x4898 (= x8463 0)) (and (=> (and (and (= x4672 2) (= x3597 x2620) (= x5341 x6668) (= x1418 0) (= x5029 x2833) (= x3661 x4183) (= x2448 x2731) (= x5263 x4250) (= false x4476) (= x8532 x7905) (= x959 x8060) (= x644 x7023) (= x3173 x309) (= x608 true) (= x4957 x4216) (= x2759 x4025) (= x2426 x4579)) x4898) x6447) (=> (and (and (= x4919 x5902) (= x5628 x2694) (= x7534 x6870) (= x3708 x3670) (= x5116 x4721) (= x7282 x3194) (= x7845 x1633) (= x5920 x2700) (= x5225 x5795) (= x8232 x3530) (= x5744 x3102) (= x7796 x4702) (= x628 x245)) (not x4898)) x5156)))))
(assert (= (x5346 (x6754 64 x5691 3)) (x6754 64 x5691 3)))
(assert (< (x6754 64 x3125 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2802))
(assert (x308 x5953))
(assert (=> (>= 10000 x4312) (= 0 (x5346 x4312))))
(assert (= x883 (and x3909 (not x1936))))
(assert (x308 x1880))
(assert (x308 x2429))
(assert (= (x3071 (x4041 x4838 x4788 x6549 x5334 x6859)) x6859))
(assert (= (x4162 (x6754 64 x3303 12)) x3303))
(assert (x308 x4167))
(assert (x308 x7361))
(assert (= (x5881 (x5919 32 104)) 32))
(assert (=> (>= 10000 x6250) (= 0 (x5346 x6250))))
(assert (x308 x8428))
(assert (x792 x3433))
(assert (x308 x1480))
(assert (x308 x5824))
(assert (= (=> (and (= (x2321 255 x1214) x4196) (= x1883 0) (= x4275 x8013) (= x3580 x4196) (= x2033 2) (= x4664 x386) (= x6454 x4319) (= x8362 x3531)) x5485) x651))
(assert (= (x5346 (+ x5936 1)) (x5346 x5936)))
(assert (= x6335 (and (not x4639) x1835)))
(assert (x308 x7039))
(assert (= (x5881 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)) x7491))
(assert (=> (<= x5310 10000) (= (x5346 x5310) 0)))
(assert (x308 x5934))
(assert (x308 x7949))
(assert (x308 x5426))
(assert (= (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147) (x5346 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x308 x3515))
(assert (x308 x5674))
(assert (x308 x2135))
(assert (x5886 x5434))
(assert (= (x3071 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)) x5715))
(assert (= x6003 (and x2944 x6479)))
(assert (= x3862 (x4162 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x2741 1084734224))
(assert (= x79 (and x4166 (not x2383))))
(assert (x3057 x601))
(assert (= (=> (and (= (ite (> x1973 150) 150 x1973) x619) (= (< 0 x3662) x5864) (= (x8120 (+ x8351 32)) x7021)) (and (=> x5864 x1655) (=> (and (and (and (= (x8120 (+ 64 x3660)) x6234) (= (x8089 x2551) x4201) (= x2581 (x8089 x1114)) (= (x8089 x4187) x7973) (= (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889) x15) (= (x8089 x1091) x4188) (= (x8120 (+ 192 x3660)) x7939) (= (x8089 x4502) x7977) (= (x8120 (+ x3660 64)) x2453) (= (> x2541 0) x1936) (= x5709 (x5919 x7655 x4498)) (= x7147 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) (= (x8089 x7840) x4178) (= (x1300 x7655 x6392 x4048 x6185) x6434) (= (x8089 x3713) x966) (= (x8089 x5531) x4048) (= (x8120 (+ x3660 128)) x5872) (= x862 (x8120 (+ 96 x3660))) (= x4498 (x8089 x3660)) (= x6943 (x8089 x3660)) (= (x8120 (+ x3660 96)) x4502) (= x1568 (x8120 (+ x3660 96))) (= x5227 (x6292 x7655 x2538 x2738 x696 x7977 x7973)) (= (x8089 x1306) x2738) (= x7775 (x4383 0)) (= (x8120 (+ 32 x3660)) x4146) (= x7253 (x8089 x862)) (= (x8120 (+ x3660 64)) x1880) (= x6603 (x6754 x7655 x6943 x4201)) (= (x8089 x3660) x6281) (= x1091 (x8120 (+ x3660 128))) (= x5889 (x8089 x7939)) (= (x8089 x3660) x6392) (= (x8120 (+ 96 x3660)) x7840) (= (x8120 (+ x3660 64)) x7644) (>= 224 x7655) (= (x8089 x6234) x8130) (= x6792 (x6754 64 x5691 7)) (= x2959 (ite (= x7655 0) x7775 (ite (>= 32 x7655) x5709 (ite (<= x7655 64) x6603 (ite (<= x7655 96) x6434 (ite (<= x7655 128) x7749 (ite (>= 160 x7655) x5227 (ite (>= 192 x7655) x7147 x15)))))))) (= (x8089 x2453) x134) (= x4187 (x8120 (+ 128 x3660))) (= x856 (x8120 (+ x3660 64))) (= (x4041 x7655 x6068 x7455 x134 x1096) x7749) (= x7628 (x8089 x5872)) (= x6068 (x8089 x3660)) (= x7216 (x8120 (+ 160 x3660))) (= x1114 (x8120 (+ 32 x3660))) (= x5675 (x8089 x1880)) (= x2745 (x8089 x3660)) (= (x8089 x6134) x7455) (= (x8120 (+ x3660 32)) x2551) (= (x8120 (+ 32 x3660)) x1306) (= x2541 (x8089 x7811)) (= x6134 (x8120 (+ x3660 32))) (= (x8089 x1568) x1096) (= x2586 (x8089 x4146)) (= x7655 (x8089 x131)) (= (x8120 (+ x3660 160)) x3713) (= (x8120 (+ 32 x3660)) x5531) (= x1297 (x8089 x7216)) (= (x8089 x7644) x6185) (= x2538 (x8089 x3660)) (= x696 (x8089 x856))) (or (not x1936) (and (and (and (= x2565 (< 32 x2541)) (= (x8089 x5503) x7358)) (or (and (and (or (and x7708 (and (and (= (> x2541 96) x5823) (= (x4555 x7399) x2010) (= x7399 (x8120 (+ 64 x5503))) (= x6361 (x8120 (+ 64 x2220)))) (or (not x5823) (and (and (= x7299 (x8120 (+ 96 x5503))) (= (x8120 (+ 96 x2220)) x1071) (>= 128 x2541) (= (x2250 x7299) x8293)) x5823)))) (not x7708)) (and (= x7304 (x8120 (+ x2220 32))) (= (x8120 (+ x5503 32)) x6817) (= x3540 (x3760 x6817)) (= x7708 (< 64 x2541)))) x2565) (not x2565))) x1936))) (not x5864)) x1941))) x14))
(assert (= (and x7375 x2409) x5168))
(assert (= (and x2480 x6291) x1696))
(assert (= (x3071 (x4041 x5494 x7249 x5828 x4400 x2630)) x2630))
(assert (x308 x2167))
(assert (x308 x1198))
(assert (x308 x1701))
(assert (= x4801 (x5881 (x6292 x4801 x7411 x4782 x1324 x2659 x1983))))
(assert (x308 x460))
(assert (x308 x2244))
(assert (=> (>= 10000 x5086) (= 0 (x5346 x5086))))
(assert (not (x2741 (x5919 32 x3913))))
(assert (= x4830 (or (and x1269 x1284) (and x5648 x4605))))
(assert (x308 x5391))
(assert (x308 x6969))
(assert (= (x2151 (x6292 x4203 x2643 x5854 x1971 x1016 x518)) x1971))
(assert (x308 x3342))
(assert (x308 x2879))
(assert (= (or (and x6645 (not x4903)) (and x260 (not x5228))) x49))
(assert (x308 x6761))
(assert (= x1931 (and x692 (not x6503))))
(assert (x308 x419))
(assert (x308 x2460))
(assert (x308 x3153))
(assert (= (and x4905 (not x7483)) x7555))
(assert (x308 x1816))
(assert (< (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5375 (x932 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (x308 x7021))
(assert (x308 x6709))
(assert (= (and x1940 x3553) x6082))
(assert (< (x6292 x5086 x3403 x3380 x6212 x8230 x7797) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4778))
(assert (x308 x2067))
(assert (x308 x5951))
(assert (=> (<= x4614 10000) (= 0 (x5346 x4614))))
(assert (x308 x986))
(assert (x308 x5624))
(assert (x308 x1243))
(assert (x3057 x8163))
(assert (= (x5881 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x4982))
(assert (x308 x1580))
(assert (x308 x1446))
(assert (= x2135 (x5881 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (=> (<= x4178 10000) (= 0 (x5346 x4178))))
(assert (not (x2741 (x6754 x5086 x4422 x4929))))
(assert (= x3741 (and x1218 x6675)))
(assert (not (x2741 (x6754 x3019 x573 x5207))))
(assert (= x8531 x2954))
(assert (x308 x7360))
(assert (x308 x6842))
(assert (=> (>= 10000 x8457) (= 0 (x5346 x8457))))
(assert (= (=> (and (= x1137 0) (= x6613 x918) (= x6705 x3439) (= x6613 (x2321 255 x1499)) (= x4255 x3531) (= 2 x1142) (= x1316 x8013) (= x386 x1822)) x1305) x5089))
(assert (= x7133 (x4162 (x6754 64 x7133 12))))
(assert (> (x6754 64 x3285 2) 10000))
(assert (= x2296 (and (not x1123) x8146)))
(assert (=> (<= x4327 10000) (= (x5346 x4327) 0)))
(assert (x2569 x6866))
(assert (x308 x3564))
(assert (x308 x3170))
(assert (x308 x7808))
(assert (x3057 x8178))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)))
(assert (= (and x5897 (not x5692)) x817))
(assert (x308 x7969))
(assert (x308 x6302))
(assert (=> (>= 10000 x6504) (= (x5346 x6504) 0)))
(assert (= x4123 (and x4769 x1847)))
(assert (> (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024) 10000))
(assert (= x7066 (or x392 x1048 x5198 x3418 x7511 x6653)))
(assert (x5602 x4167))
(assert (x308 x6602))
(assert (= (x5881 (x1300 x7051 x5930 x6429 x3683)) x7051))
(assert (x308 x1620))
(assert (x308 x7446))
(assert (x308 x850))
(assert (= (x5346 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297)) (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297)))
(assert (= x4888 (x4162 (x6754 x7491 x4888 x3832))))
(assert (=> (<= x4727 10000) (= 0 (x5346 x4727))))
(assert (= (x4162 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x8166))
(assert (x308 x974))
(assert (= x2412 (and x4079 (not x8470))))
(assert (= (x5881 (x6754 64 x5426 0)) 64))
(assert (= (or x6242 x1933) x4928))
(assert (x308 x4757))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x7655 x6943 x4201)))
(assert (x308 x139))
(assert (= x5102 (and x306 (not x2158))))
(assert (x308 x1730))
(assert (< 10000 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966)))
(assert (= x7055 (and x5447 (not x443))))
(assert (= (x4162 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x6764))
(assert (= (x6754 x3019 x573 x5207) (x5346 (x6754 x3019 x573 x5207))))
(assert (=> (<= x3284 10000) (= 0 (x5346 x3284))))
(assert (> (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108) 10000))
(assert (x308 x2918))
(assert (= (x5346 x7707) (x5346 (+ 1 x7707))))
(assert (= x4471 (=> (and (or (and x4826 (and (= x721 (x8540 x5372)) (= x4883 x4425) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x721 x3453)) (= x3336 x5861) (= (ite (= x4425 0) x3482 0) x3453) (= (x4463 x6821) x7079) (= x2875 x77) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3336) (= x7110 x4678) (= x7213 (- x7079 x3453)) (>= x3336 0) (= (+ x3453 x721) x3336) (= x8177 x1412) (= x2978 x1072))) (and (not x4826) (and (= x2978 x1072) (= x4883 x4425) (= x2875 x77) (= x7110 x4678) (= x1412 x8177)))) (= (= 0 x4425) x4826)) x4816)))
(assert (x308 x7262))
(assert (< (x5919 32 x1959) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5346 x3186) (x5346 (+ 1 x3186))))
(assert (= (and x3778 x5488) x7029))
(assert (= (and x2721 x3246) x6316))
(assert (=> (>= 10000 x3050) (= (x5346 x3050) 0)))
(assert (= (x4162 (x6754 64 x7418 7)) x7418))
(assert (x308 x7148))
(assert (x308 x1775))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)))
(assert (= (x932 (x6754 64 x2448 5)) 5))
(assert (x308 x7704))
(assert (= 64 (x5881 (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (<= x4203 64) x1318 (ite (>= 96 x4203) x6457 (ite (>= 128 x4203) x125 (ite (<= x4203 160) x5612 (ite (<= x4203 192) x5294 x6741))))))))))
(assert (= (x5881 (x6754 x7491 x4888 x3832)) x7491))
(assert (= (and x4325 x2043) x639))
(assert (= x1082 (x3587 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038))))
(assert (=> (>= 10000 x2135) (= (x5346 x2135) 0)))
(assert (x308 x8262))
(assert (x308 x707))
(assert (= x5085 (or x1931 x4621 x226 x7913 x8342)))
(assert (= x5603 (=> (= (= 0 x1576) x1147) (and (=> (and x1147 (and (= x2201 x386) (= x7856 x8013) (= x5079 x3531))) x8198) (=> (and (not x1147) (and (= 160 x6007) (= (= x386 x6957) x1254))) (and (=> (and (and (= false x2495) (= x1224 (= x5372 x1037)) (<= x269 127) (= x2902 false) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x4061) (= x386 x333) (>= x4841 1) (= x7649 x8013) (<= 1 x386) (= x4841 (x8219 x333)) (<= x386 1461501637330902918203684832716283019655932542975) (<= x269 127) (>= 1461501637330902918203684832716283019655932542975 x1037) (= x1065 36) (= 3628442803 x702)) (not x1254)) (and (=> (and (and (= x2764 (= 255 x993)) (>= 255 x993)) x1224) (and (=> (and x2764 (and (= true x3059) (= x2651 0) (= x7171 36) (= x5940 x8013) (= x7111 x386) (= x3531 x2442) (= 2 x6896) (= false x3470))) x561) (=> (and (not x2764) (and (= x8023 (x6754 64 x993 36)) (= (x2321 255 x6213) x766) (= (+ x993 1) x6213) (= x3285 (x2321 255 x6213)) (= (x2436 x8023) x1750) (= (= 0 x1750) x110))) (and (=> (and (not x110) (= x8217 (= 1 x1750))) (and (=> (and (not x8217) (= (= x1750 2) x5284)) (and (=> (and (not x5284) (= (= 3 x1750) x425)) (and (=> (and x425 (= (= x3285 255) x6968)) (and (=> x6968 x2097) (=> (and (not x6968) (and (= (x2321 255 x3534) x1249) (= x4998 (x2321 255 x3534)) (= x6966 (x2436 x5090)) (= x671 (= x4998 255)) (= x3534 (+ 1 x3285)) (= x5090 (x6754 64 x3285 36)))) (and (=> x671 x7577) (=> (and (and (= x7356 (x8219 x1037)) (= x1021 (x2321 255 x1861)) (= x3179 (x2321 255 x1861)) (= 128 x1652) (= x1861 (+ 1 x4998)) (= (= x7356 0) x2815) (= (x6754 64 x4998 100) x2455) (= (x2637 x2455) x6343)) (not x671)) (and (=> (and (not x2815) (and (>= x3947 1) (= (= x386 x333) x6117) (= x4572 x6966) (= x7701 x4572) (<= x3490 127) (= 68 x4999) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x2050) (= x8410 false) (= x7040 x6343) (>= 127 x3490) (= (x8219 x5372) x3947) (= false x8218) (= x7486 3957931183))) (and (=> (and (not x6117) (and (= x2193 false) (= 4 x54) (= true x1343))) x351) (=> (and x6117 (and (<= x4596 255) (= x8561 (x6754 64 x6966 11)) (= x4596 (x174 x8561)) (= (< 3 x4596) x7567))) (and (=> (and (not x7567) (= (= x4596 1) x3615)) (and (=> (and (and (= false x6270) (= x3548 true) (= x54 4)) (not x3615)) x351) (=> (and x3615 (and (= x581 (x6754 64 x6966 11)) (= (+ 2 x581) x745) (= x4103 128) (= (= x6677 0) x697) (= (x8219 x5372) x6677) (= (x6754 64 x6966 11) x146))) (and (=> (and (not x697) (and (and (= x1264 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= 100 x4357) (= 486791245 x7201) (<= x4229 127) (= x1076 x7701) (= x1076 x616) (= x78 (x8219 x5372)) (= 0 x3797) (= false x44) (= x4694 false) (<= 1 x78) (= x483 0) (= false x6074) (= 0 x271) (>= 127 x4229) (= x151 0)) (or (and x4694 (and (= x4722 (ite (not (= x7521 x5372)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x7521))) (and (not x4694) (= x4722 (ite x4694 1 0)))))) x395) (=> (and (and (= x54 0) (= x3920 false) (= true x687)) x697) x351))))) (=> (and x7567 (and (= true x7929) (= 36 x54) (= x4278 false))) x351))))) (=> (and x2815 (and (= x3689 false) (= x3324 2) (= x7171 0) (= x5909 true) (= x8013 x5940) (= x3531 x2442) (= x7111 x386) (= x2651 0))) x561))))))) (=> (and (= x1877 (= x1750 4)) (not x425)) (and (=> (and (= (= x1750 5) x621) (not x1877)) (and (=> (and x621 (= x7445 (= x3285 255))) (and (=> x7445 x2097) (=> (and (not x7445) (and (= x5767 (+ 1 x3285)) (= x7363 (x6754 64 x3285 36)) (= (x2321 255 x5767) x5903) (= x979 (= x6108 255)) (= (x2321 255 x5767) x6108) (= (x2436 x7363) x3142))) (and (=> x979 x7577) (=> (and (and (= x3954 (+ 1 x6108)) (= (= 255 x1582) x2843) (= (x2321 255 x3954) x1582) (= x246 (x6754 64 x6108 6)) (= x206 (x1167 x246)) (= (x2321 255 x3954) x7978) (>= 65535 x206)) (not x979)) (and (=> x2843 x2703) (=> (and (not x2843) (and (= x910 (ite (< 0 x6239) x4167 (x2321 127 x4167))) (= (x1733 x5297) x6756) (= x5694 (x2321 255 x7347)) (= x1611 (x2321 255 x7347)) (= x7347 (+ 1 x1582)) (= (div x601 2) x4167) (= (x6754 64 x1582 12) x5297) (= x5882 (> x6406 0)) (= x6239 (x2321 1 x601)) (= (x7553 (- x6239 (mod (ite (> 32 x910) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6406) (<= x6756 18446744073709551615))) (and (=> (and x5882 (and (= x6014 (= x8429 0)) (= x8429 (x2321 1 x601)))) (and (=> (and (not x6014) (and (and (= (< 0 x910) x716) (= x2707 (x5919 32 103))) (or (and (and (= (x882 x2707) x6867) (= 32 x7407) (>= 32 x910)) x716) (and (= 0 x7407) (not x716))))) x870) (=> (and (and (or (= 0 x4452) (= 32 x4452)) (= x4452 (* (ite (not (= 0 x910)) 1 0) 32)) (= (+ 292 x4452) x8491) (= x907 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x601))) x6014) x599))) (=> (not x5882) x1848))))))))) (=> (and (not x621) (= (= 6 x1750) x7998)) (and (=> (and (= x1906 (= 255 x3285)) x7998) (and (=> (and (and (= x2836 (x2321 255 x6758)) (= (x2436 x1685) x3017) (= (+ x3285 1) x6758) (= (= x2836 255) x3824) (= x1685 (x6754 64 x3285 36)) (= x4799 (x2321 255 x6758))) (not x1906)) (and (=> x3824 x7577) (=> (and (not x3824) (and (= (+ 1 x2836) x8109) (= x7470 (x2321 255 x8109)) (= x2590 (x6754 64 x2836 36)) (= x2084 (= 255 x7470)) (= x6421 (x2436 x2590)) (= (x2321 255 x8109) x6099))) (and (=> x2084 x7542) (=> (and (and (= (x2321 255 x8357) x5119) (= x8357 (+ 1 x7470)) (= x7522 (= 255 x6230)) (= (x2321 255 x8357) x6230) (= (x6754 64 x7470 36) x835) (= (x2436 x835) x5534)) (not x2084)) (and (=> x7522 x2703) (=> (and (and (= x7990 (x6754 64 x6230 36)) (= 128 x4819) (= x7830 (x8219 x1037)) (= x327 (= x7830 0)) (= (x2321 255 x1074) x2339) (= x3401 (x2321 255 x1074)) (= x1463 (x2436 x7990)) (= (+ 1 x6230) x1074)) (not x7522)) (and (=> (and (not x327) (and (= (x978 x1037) x408) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x408 x3017)) x5945) (= x4036 (>= x8432 x3017)) (= (and x5945 x4036) x443) (= (x978 x333) x8432))) (and (=> (and (not x443) (and (= x1088 x8013) (= x3644 x3531) (= 0 x6088) (= x7987 x386) (= 0 x4505) (= x5646 x2339))) x7674) (=> (and x443 (and (or (and (= (ite x5668 1 0) x4032) (not x5668)) (and x5668 (and (= (ite (not (= x333 x7521)) 1 0) x4032) (<= x7521 1461501637330902918203684832716283019655932542975)))) (and (= x8430 x4026) (= x6421 x6910) (>= x4839 1) (<= x4026 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5043 false) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x105 x3017)) (= x3905 false) (= x1574 x7645) (= (x8219 x5372) x4839) (= x5668 (not (= x333 x5372))) (= x5534 x4640) (= (x8196 x1037) x105) (= x1574 x1463) (= 100 x2580) (= x4026 (+ x105 x3017)) (= x2973 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= (x978 x333) x2735) (= x7426 x4640) (= x6649 486791245) (= x6910 x6271) (= x2425 (- x2735 x3017)) (<= x2015 127) (>= 127 x2015) (>= x4026 0)))) x7205))) (=> (and x327 (and (= true x3653) (= 0 x2651) (= 0 x7171) (= x3531 x2442) (= x5940 x8013) (= x3377 false) (= x386 x7111) (= x211 2))) x561))))))))) (=> x1906 x2097))) (=> (and (not x7998) (= x6597 (= 7 x1750))) (and (=> (and (= x4682 (= x3285 255)) x6597) (and (=> (and (not x4682) (and (= x3475 128) (= x3412 (x2321 255 x5639)) (<= x4906 1461501637330902918203684832716283019655932542975) (= x4906 (x1886 x7532)) (= (x6754 64 x3285 2) x7532) (= (x2321 255 x5639) x7063) (= x3184 (= 0 x2458)) (= x5639 (+ x3285 1)) (= x2458 (x8219 x1037)))) (and (=> (and (and (= x3531 x2442) (= 0 x7171) (= true x3395) (= x5940 x8013) (= x386 x7111) (= 2 x2660) (= false x2288) (= x2651 0)) x3184) x561) (=> (and (and (<= x1170 127) (<= x1170 127) (= x8271 (= x333 x7521)) (>= x7902 1) (>= 1461501637330902918203684832716283019655932542975 x7521) (= x4193 36) (= x5104 2770781680) (= x5778 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= false x1346) (= x4906 x816) (= x7902 (x8219 x5372)) (= false x454)) (not x3184)) (and (=> (and (and (= x7154 (< 0 x7466)) (= (x978 x5372) x7466)) x8271) (and (=> (and (and (= x3531 x4811) (= x7063 x3141)) (not x7154)) x5264) (=> (and x7154 (and (= (x978 x5372) x3034) (= 128 x7177) (= (>= x3034 x7466) x4793) (= x3944 (x978 x4906)) (= x2948 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7466 x3944))) (= x6512 (and x4793 x2948)))) (and (=> (and (and (or (and (not x5595) (and (= x1898 x7063) (= x3531 x673))) (and x5595 (and (= x5313 (>= (x3075 x5372) x4789)) x3979 (= (x8506 x4906) x3870) (>= 4294967295 x5987) x5313 (= x1898 x5326) (= x4789 (x8506 x5372)) (= (= (x3075 x4906) x3870) x3979) (= x690 x673)))) (and (= x4893 (- x8250 x7466)) (<= x5717 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5717) (= x5595 (< 0 x7355)) (= x5717 (+ x1704 x7466)) (= x5717 x1613) (= x8250 (x978 x5372)) (= (x5028 x4906) x1704) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1704 x7466)))) x6512) x7934) (=> (and (not x6512) (and (= x2725 x3531) (= x8391 0) (= x5360 0) (= x7063 x6565))) x2653))))) (=> (and (not x8271) (and (= x2080 true) (= x7319 false) (= 100 x3046))) x383))))) (=> x4682 x2097))) (=> (and (= x6714 (= x1750 8)) (not x6597)) (and (=> (and (= x7537 (= x3285 255)) x6714) (and (=> (and (and (= x3852 (x2321 255 x1499)) (= x2797 (x6754 64 x3285 36)) (= x5689 (= 0 x3021)) (= (x2436 x2797) x8402) (= (x2321 255 x1499) x7492) (= x1499 (+ x3285 1)) (= x975 128) (= x3021 (x8219 x1037))) (not x7537)) (and (=> (and (and (= x7171 0) (= false x1134) (= x5940 x8013) (= x6053 2) (= x2651 0) (= x2442 x3531) (= x7111 x386) (= x6184 true)) x5689) x561) (=> (and (and (= x8402 x8049) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x6023) (>= 127 x2807) (= x6488 false) (= (x8219 x5372) x6442) (= 1313998243 x5538) (= false x431) (= 36 x1567) (= (= x7521 x333) x2817) (<= x7521 1461501637330902918203684832716283019655932542975) (>= x6442 1) (<= x2807 127)) (not x5689)) (and (=> (and x2817 (= (> 100000 x8402) x6987)) (and (=> (and x6987 (and (= false x1355) (= 4 x3439) (= x4504 true))) x5089) (=> (and (not x6987) (and (= x3531 x4255) (= 1 x1137) (= 0 x6705) (= x7492 x918) (= (x2436 x2797) x3925) (= x3925 x1316) (= x386 x1822))) x1305))) (=> (and (and (= 100 x3439) (= x5915 false) (= x5407 true)) (not x2817)) x5089))))) (=> x7537 x2097))) (=> (and (not x6714) (and (= x7312 x8013) (= x3285 x4916) (= x8461 x386) (= x3531 x793))) x3746))))))))) (=> (and x1877 (= (= x3285 255) x2124)) (and (=> x2124 x2097) (=> (and (not x2124) (and (= (+ x3285 1) x6696) (= x4433 (= x2762 255)) (= (x6754 64 x3285 36) x2841) (= (x2321 255 x6696) x7061) (= (x2436 x2841) x2081) (= x2762 (x2321 255 x6696)))) (and (=> x4433 x7577) (=> (and (and (= (x6754 64 x2762 100) x472) (= (x2321 255 x22) x3876) (= x6273 (= x2323 255)) (= x534 (x2637 x472)) (= x22 (+ 1 x2762)) (= (x2321 255 x22) x2323)) (not x4433)) (and (=> x6273 x7542) (=> (and (and (= x771 (x6754 64 x2323 36)) (= 2 x4618) (= 0 x2651) (= x7279 (<= x2081 x235)) (= x4553 true) (= x1109 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7074 x2081))) (= x235 (x978 x333)) (= false x4124) (= 0 x7171) (= x3531 x2442) (not (and x1109 x7279)) (= (x2436 x771) x2779) (= (+ x2323 1) x7817) (= (x2321 255 x7817) x4304) (= (x2321 255 x7817) x4380) (= x7074 (x978 x1037)) (= x5940 x8013) (= x7111 x386)) (not x6273)) x561))))))))))) (=> (and (= (= x3285 255) x2117) x5284) (and (=> (and (and (>= 65535 x2167) (= x566 (x6754 64 x3285 6)) (= x3963 (x2321 255 x3626)) (= x1988 (= x3739 255)) (= x3626 (+ 1 x3285)) (= x2167 (x1167 x566)) (= (x2321 255 x3626) x3739)) (not x2117)) (and (=> (and (not x1988) (and (= (+ x3739 1) x416) (= x613 (ite (> x1964 0) x3292 (x2321 127 x3292))) (= (x6754 64 x3739 12) x1708) (= x3292 (div x601 2)) (= (> x4432 0) x7583) (= x5750 (x2321 255 x416)) (= (x2321 1 x601) x1964) (= x1369 (x1733 x1708)) (= x4432 (x7553 (- x1964 (mod (ite (> 32 x613) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x1369 18446744073709551615) (= (x2321 255 x416) x2626))) (and (=> (not x7583) x6376) (=> (and x7583 (and (= x7740 (= x1485 0)) (= (x2321 1 x601) x1485))) (and (=> (and (not x7740) (and (or (and x7746 (and (>= 32 x613) (= x475 (x882 x4092)) (= 32 x4066))) (and (= 0 x4066) (not x7746))) (and (= (x5919 32 103) x4092) (= x7746 (< 0 x613))))) x6387) (=> (and (and (= (+ x5367 292) x5072) (= x5367 (* (ite (not (= 0 x613)) 1 0) 32)) (or (= 32 x5367) (= x5367 0)) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x601) x3236)) x7740) x1347))))) (=> x1988 x7542))) (=> x2117 x2097))))) (=> (and x8217 (= (= 255 x3285) x8327)) (and (=> (and (not x8327) (and (= (x2321 255 x1960) x1547) (= (x6754 64 x3285 6) x373) (>= 65535 x4343) (= x1960 (+ x3285 1)) (= (x2321 255 x1960) x3303) (= (x1167 x373) x4343) (= x4019 (= 255 x3303)))) (and (=> x4019 x7542) (=> (and (and (= (x6754 64 x3303 12) x868) (>= 18446744073709551615 x5739) (= x5739 (x1733 x868)) (= (x2321 255 x1214) x8125) (= (x7553 (- x1242 (mod (ite (> 32 x4698) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2036) (= x1214 (+ 1 x3303)) (= (x2321 1 x601) x1242) (= (ite (< 0 x1242) x5711 (x2321 127 x5711)) x4698) (= x5711 (div x601 2)) (= (x2321 255 x1214) x2311) (= (< 0 x2036) x1240)) (not x4019)) (and (=> (not x1240) x6376) (=> (and x1240 (and (= x2929 (= x2880 0)) (= (x2321 1 x601) x2880))) (and (=> (and (not x2929) (and (and (= x8411 (< 0 x4698)) (= (x5919 32 103) x6551)) (or (and (= 0 x412) (not x8411)) (and (and (= (x882 x6551) x6577) (= x412 32) (>= 32 x4698)) x8411)))) x7281) (=> (and x2929 (and (= x5878 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x601)) (= x3978 (* 32 (ite (not (= x4698 0)) 1 0))) (= (+ x3978 292) x1192) (or (= 32 x3978) (= 0 x3978)))) x1546))))))) (=> x8327 x2097))))) (=> (and (= (= 255 x3285) x6690) x110) (and (=> (and (and (= (x6754 64 x3285 2) x8093) (= (x1886 x8093) x2156) (= x4494 (= 255 x8398)) (= x8398 (x2321 255 x5984)) (= x5984 (+ x3285 1)) (= (x2321 255 x5984) x7360) (>= 1461501637330902918203684832716283019655932542975 x2156)) (not x6690)) (and (=> x4494 x7577) (=> (and (and (= (x2321 255 x1864) x2375) (= x6771 (= 255 x2375)) (= x1864 (+ x8398 1)) (= (x6754 64 x8398 6) x7362) (= (x1167 x7362) x461) (= x6775 (x2321 255 x1864)) (>= 65535 x461)) (not x4494)) (and (=> (and (and (= (x1886 x7116) x964) (= (x6754 64 x2375 2) x7116) (= x7866 (x2321 255 x7049)) (= x3108 (= x7866 255)) (= x3277 (x2321 255 x7049)) (= x7049 (+ x2375 1)) (<= x964 1461501637330902918203684832716283019655932542975)) (not x6771)) (and (=> (and (not x3108) (and (= (x2436 x357) x3891) (= x4416 (x2321 255 x3589)) (= x2977 (= 0 x4149)) (= (x8219 x1037) x4149) (= (x6754 64 x7866 36) x357) (= (x2321 255 x3589) x7697) (= (+ x7866 1) x3589) (= 128 x8063))) (and (=> (and x2977 (and (= 2 x842) (= x386 x7111) (= false x6829) (= x2698 true) (= 0 x7171) (= 0 x2651) (= x2442 x3531) (= x8013 x5940))) x561) (=> (and (and (= x461 x2029) (= x1561 (x8219 x5372)) (= x6908 x3891) (= x6437 (= x7521 x333)) (= x2115 false) (<= 1 x1561) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x6101) (= x2156 x620) (<= x7521 1461501637330902918203684832716283019655932542975) (= 132 x3537) (= x7043 x964) (= 3812630263 x8555) (>= 127 x1215) (>= 127 x1215) (= false x6998)) (not x2977)) (and (=> (and (and (= x3335 100) (= false x1019) (= true x7951)) (not x6437)) x3394) (=> (and x6437 (= (> 100000 x3891) x5395)) (and (=> (and x5395 (and (= 4 x3335) (= true x3786) (= x3897 false))) x3394) (=> (and (and (= x3531 x7285) (= (x2436 x357) x4150) (= x1049 (x1886 x8093)) (= 1 x4758) (= x4150 x6657) (= x5457 x3409) (= x4416 x3237) (= (x1167 x7362) x2778) (= x5481 0) (= x5457 (x1886 x7116))) (not x5395)) x7751))))))) (=> x3108 x2703))) (=> x6771 x7542))))) (=> x6690 x2097))))))) (=> (and (and (= x896 2) (= 0 x2651) (= x8013 x5940) (= x7171 0) (= x2240 false) (= true x969) (= x7111 x386) (= x2442 x3531)) (not x1224)) x561))) (=> (and (and (= x3487 (<= x417 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x8219 x6957) x2696) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000 x8013)) x3269) (= x6944 x8013) (= x5623 3628442803) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x7182) (= x650 x6944) (= x7390 false) (<= 1 x2696) (= (* 1000000000 x8013) x417) (>= 127 x6453) (= x7558 (and x3487 x3269)) (>= 127 x6453) (= false x225) (= x3373 36)) x1254) (and (=> (and (and (<= x417 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2482 (x3766 x2494)) (= x417 x2918) (= (> x2482 x3861) x7284) (>= x417 0) (= x7995 (x6754 64 x5372 1)) (= x3861 (x5820 x7995)) (= x2494 (x6754 64 x5372 2))) x7558) (and (=> (and (= x8545 (ite x7284 1 0)) x7284) x6676) (=> (and (and (= (x7553 (- x3861 x2482)) x6825) (= x4447 (> x6825 x3861))) (not x7284)) (and (=> (and (not x4447) (= x8545 (ite (> x2918 x6825) 1 0))) x6676) (=> (and (and (= 36 x2096) (= x4653 true) (= false x8202)) x4447) x526))))) (=> (not x7558) x6872)))))))))
(assert (= (and x5547 x7027) x3577))
(assert (x308 x2961))
(assert (x308 x2432))
(assert (= x3967 (and x2434 x7334)))
(assert (x3057 x8455))
(assert (x308 x5377))
(assert (= (x1300 x4801 x781 x5176 x1674) (x5346 (x1300 x4801 x781 x5176 x1674))))
(assert (> (x6754 x1391 x2471 x8074) 10000))
(assert (x308 x6501))
(assert (x308 x4313))
(assert (= (and (not x7107) x3486) x4715))
(assert (= x3769 (=> (= (= x7917 0) x3684) (and (=> (and (and (= x5079 x644) (= x3597 x2201) (= x7856 x4183)) x3684) x8198) (=> (and (not x3684) (and (= x6393 (and x7240 x609)) (= x7380 (x7974 x5372)) (<= 1 x6664) (= 160 x5951) (= (x8219 x3597) x6664) (= (<= x6915 x7380) x609) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x989 x6915)) x7240) (= (x7974 x3597) x989) (= x6915 (x2662 128)))) (and (=> (and x6393 (and (= x1477 x2785) (= (x6593 x3597) x3590) (= x27 (- x4545 x6915)) (= (+ x6915 x3590) x2785) (= (= x6957 x3597) x1330) (= x4545 (x7974 x5372)) (<= x2785 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3590 x6915)) (<= 0 x2785))) (and (=> (and (not x1330) (and (= x3597 x333) (= (x8219 x333) x187) (<= x845 127) (<= x845 127) (>= x187 1) (= true x2347) (= x6992 1341992515) (= x5372 x925) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x6536) (>= x3597 1) (= x5204 36) (<= x3597 1461501637330902918203684832716283019655932542975) (= x7979 false) (= x5384 false))) (and (=> (and (not x2347) (and (= x5263 x4250) (= x6845 false) (= x8532 x7905) (= x2426 x4579) (= 2 x7535) (= x4183 x3661) (= x309 x3173) (= 0 x1418) (= x2833 x5029) (= x8060 x959) (= x6668 x5341) (= x4025 x2759) (= x644 x7023) (= x2620 x3597) (= true x6307) (= x2731 x2448) (= x4216 x4957))) x6447) (=> (and (= (= x3173 x5372) x8440) x2347) (and (=> (and x8440 (and (>= 255 x8532) (= (= x8532 255) x1980))) (and (=> (and x1980 (and (= x8496 true) (= 2 x4953) (= x7905 x8532) (= x8060 x959) (= x3173 x309) (= x4025 x2759) (= x4579 x2426) (= x1418 0) (= x2731 x2448) (= x834 false) (= x6668 x5341) (= x4216 x4957) (= x2833 x5029) (= x3597 x2620) (= x4250 x5263) (= x4183 x3661) (= x7023 x644))) x6447) (=> (and (and (= x1818 (= 0 x8191)) (= x1041 (x2321 255 x3416)) (= (x2321 255 x3416) x7452) (= x8191 (x3301 x1366)) (= x3416 (+ 1 x8532)) (= (x6754 64 x8532 36) x1366)) (not x1980)) (and (=> (and (= x2928 (= 1 x8191)) (not x1818)) (and (=> (and (not x2928) (= x4562 (= 2 x8191))) (and (=> (and (= x7971 (= 255 x1041)) x4562) (and (=> (and (and (>= 65535 x5428) (= x3425 (x2321 255 x112)) (= (x315 x1064) x5428) (= x4327 (x2321 255 x112)) (= (= 255 x4327) x7680) (= x112 (+ x1041 1)) (= x1064 (x6754 64 x1041 6))) (not x7971)) (and (=> (and (and (= (x2321 1 x6668) x7259) (= x316 (x2321 255 x6187)) (= x1812 (x7553 (- x7259 (mod (ite (> 32 x8114) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (>= 18446744073709551615 x3882) (= x4804 (x2321 255 x6187)) (= x6383 (x6754 64 x4327 12)) (= x5331 (div x6668 2)) (= (x6164 x6383) x3882) (= (< 0 x1812) x598) (= x6187 (+ x4327 1)) (= (ite (> x7259 0) x5331 (x2321 127 x5331)) x8114)) (not x7680)) (and (=> (and x598 (and (= x2810 (= x2338 0)) (= (x2321 1 x6668) x2338))) (and (=> (and (and (= x5356 (+ 292 x1158)) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6668) x7750) (or (= x1158 32) (= x1158 0)) (= (* 32 (ite (not (= 0 x8114)) 1 0)) x1158)) x2810) x7018) (=> (and (not x2810) (and (and (= x2181 (> x8114 0)) (= (x5919 32 103) x7890)) (or (and (and (= x3527 (x3196 x7890)) (>= 32 x8114) (= x4873 32)) x2181) (and (not x2181) (= 0 x4873))))) x7778))) (=> (not x598) x618))) (=> x7680 x6812))) (=> x7971 x1634))) (=> (and (not x4562) (= (= 3 x8191) x6291)) (and (=> (and (= (= x8191 4) x88) (not x6291)) (and (=> (and x88 (= x3007 (= x1041 255))) (and (=> x3007 x1634) (=> (and (not x3007) (and (= (x2321 255 x8551) x3174) (= x3914 (x6754 64 x1041 36)) (= (= x7463 255) x7300) (= (x2321 255 x8551) x7463) (= x8551 (+ 1 x1041)) (= (x3301 x3914) x5164))) (and (=> x7300 x693) (=> (and (not x7300) (and (= (x2321 255 x1863) x314) (= (x6754 64 x7463 100) x1257) (= x1863 (+ 1 x7463)) (= (= x6898 255) x8220) (= x6898 (x2321 255 x1863)) (= (x7070 x1257) x2469))) (and (=> (and (and (= x5341 x6668) (= x1778 (+ 1 x6898)) (= (x6009 x3173) x270) (= x2426 x4579) (= x4352 true) (= x4216 x4957) (= (x6754 64 x6898 36) x5497) (= x4250 x5263) (= x3173 x309) (= x4025 x2759) (= false x6438) (= (x3301 x5497) x7446) (= x4183 x3661) (= (x2321 255 x1778) x1560) (= x3597 x2620) (= (x2321 255 x1778) x1881) (= x7023 x644) (not (and x6629 x8266)) (= 0 x1418) (= x5029 x2833) (= (< (+ x270 x5164) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8266) (= x7905 x8532) (= x2731 x2448) (= x6328 2) (= x1373 (x6009 x333)) (= x6629 (<= x5164 x1373)) (= x959 x8060)) (not x8220)) x6447) (=> x8220 x6812))))))) (=> (and (= (= x8191 5) x7280) (not x88)) (and (=> (and x7280 (= x4942 (= x1041 255))) (and (=> (and (and (= x5685 (= 255 x5082)) (= x5236 (+ 1 x1041)) (= (x6754 64 x1041 36) x8292) (= x1189 (x2321 255 x5236)) (= (x3301 x8292) x5982) (= x5082 (x2321 255 x5236))) (not x4942)) (and (=> x5685 x693) (=> (and (not x5685) (and (= (x2321 255 x3280) x3125) (= (x2321 255 x3280) x4616) (= x3599 (x6754 64 x5082 6)) (= x3280 (+ x5082 1)) (<= x7418 65535) (= (x315 x3599) x7418) (= (= x3125 255) x3864))) (and (=> x3864 x2856) (=> (and (not x3864) (and (= x2041 (x2321 255 x4053)) (= x5034 (div x6668 2)) (= x1700 (ite (> x6137 0) x5034 (x2321 127 x5034))) (= x4053 (+ 1 x3125)) (<= x4252 18446744073709551615) (= x5228 (< 0 x6641)) (= x423 (x6754 64 x3125 12)) (= (x7553 (- x6137 (mod (ite (< x1700 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6641) (= (x6164 x423) x4252) (= (x2321 1 x6668) x6137) (= x5636 (x2321 255 x4053)))) (and (=> (and x5228 (and (= (= x1671 0) x4256) (= x1671 (x2321 1 x6668)))) (and (=> (and (and (= x4750 (* (ite (not (= 0 x1700)) 1 0) 32)) (= x4049 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6668)) (or (= 32 x4750) (= x4750 0)) (= x5093 (+ 292 x4750))) x4256) x7045) (=> (and (not x4256) (and (or (and x2478 (and (= 32 x4305) (= x55 (x3196 x4073)) (>= 32 x1700))) (and (= 0 x4305) (not x2478))) (and (= (x5919 32 103) x4073) (= x2478 (> x1700 0))))) x5114))) (=> (not x5228) x484))))))) (=> x4942 x1634))) (=> (and (= x1687 (= x8191 6)) (not x7280)) (and (=> (and (= (= x8191 7) x7091) (not x1687)) (and (=> (and (not x7091) (= x900 (= 8 x8191))) (and (=> (and x900 (= x648 (= x1041 255))) (and (=> (and (not x648) (and (= x4822 (x8219 x3173)) (= (= x4822 0) x6327) (= (x6754 64 x1041 36) x7922) (= x4185 (x3301 x7922)) (= (x2321 255 x7135) x257) (= x8503 (x2321 255 x7135)) (= 128 x5567) (= x7135 (+ 1 x1041)))) (and (=> (and (not x6327) (and (>= 127 x1135) (= x666 x4185) (= x3974 (= x2426 x333)) (= false x6094) (<= x1135 127) (>= 1461501637330902918203684832716283019655932542975 x2426) (= 36 x5947) (>= x5217 1) (= x846 35425322552009646506518338594398286811668114190755561836384294568426616127488) (= false x6069) (= (x8219 x5372) x5217) (= 1313998243 x2394))) (and (=> (and (not x3974) (and (= x4372 false) (= x1371 true) (= 100 x968))) x8210) (=> (and x3974 (= x2126 (< x4185 100000))) (and (=> (and x2126 (and (= x991 true) (= 4 x968) (= x232 false))) x8210) (=> (and (and (= x4216 x6774) (= x2448 x5645) (= x5277 1) (= x2027 x2426) (= x1996 x5976) (= x2356 0) (= x7611 x3597) (= x4470 x5263) (= x6668 x5293) (= x3173 x3103) (= x3291 x644) (= x5029 x2380) (= (x3301 x7922) x1996) (= x6923 x8060) (= x4025 x2150) (= x257 x355)) (not x2126)) x1219))))) (=> (and x6327 (and (= false x2063) (= x3173 x309) (= true x243) (= x4216 x4957) (= x1418 0) (= x8532 x7905) (= x2759 x4025) (= x7023 x644) (= x5263 x4250) (= x6668 x5341) (= x2620 x3597) (= x2426 x4579) (= x2833 x5029) (= x959 x8060) (= 2 x3209) (= x2731 x2448) (= x3661 x4183))) x6447))) (=> x648 x1634))) (=> (and (not x900) (and (= x4183 x2492) (= x644 x7666) (= x7341 x5029) (= x2426 x4102) (= x8060 x114) (= x3597 x4948) (= x6515 x1041) (= x5073 x3173) (= x6402 x2448) (= x5263 x8180) (= x6668 x8504) (= x4025 x1012) (= x6278 x4216))) x3480))) (=> (and x7091 (= (= 255 x1041) x1385)) (and (=> x1385 x1634) (=> (and (not x1385) (and (= (= x7450 0) x7101) (= x655 (+ 1 x1041)) (= (x2501 x5071) x47) (= (x2321 255 x655) x8117) (>= 1461501637330902918203684832716283019655932542975 x47) (= (x6754 64 x1041 2) x5071) (= x2640 128) (= (x2321 255 x655) x2819) (= (x8219 x3173) x7450))) (and (=> (and (and (= x763 true) (= 0 x1418) (= x2833 x5029) (= x4579 x2426) (= x5556 false) (= x5341 x6668) (= x3173 x309) (= x6601 2) (= x959 x8060) (= x8532 x7905) (= x3597 x2620) (= x2448 x2731) (= x644 x7023) (= x4025 x2759) (= x4250 x5263) (= x4183 x3661) (= x4957 x4216)) x7101) x6447) (=> (and (not x7101) (and (= x1163 (= x333 x2426)) (= x4457 x47) (>= 127 x39) (= x5151 false) (<= x39 127) (= x4834 false) (= 36 x6066) (= x358 74700126319118050543342327103397598470879858733489597287354029460387927162880) (<= 1 x6510) (= x5771 2770781680) (= x6510 (x8219 x5372)) (>= 1461501637330902918203684832716283019655932542975 x2426))) (and (=> (and x1163 (and (= x6666 (x6009 x5372)) (= x4108 (> x6666 0)))) (and (=> (and (and (= x2021 (< (+ x2683 x6666) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x4671 (and x5243 x2021)) (= (x6009 x47) x2683) (= 128 x165) (= (<= x6666 x1630) x5243) (= (x6009 x5372) x1630)) x4108) (and (=> (and (and (or (and x911 (and (= (<= x1603 (x8485 x5372)) x1935) (= x1839 (x7175 x47)) (= x1472 x3559) (= x6048 x2893) (>= 4294967295 x8409) x1935 (= x6874 (= x1839 (x8485 x47))) x6874 (= x5459 x195) (= x5321 x5252) (= x4214 x82) (= x6580 x7683) (= x1603 (x7175 x5372)))) (and (and (= x1472 x644) (= x2819 x5321) (= x6668 x195) (= x2893 x3173) (= x4216 x7683) (= x82 x5029)) (not x911))) (and (= x4845 (- x5128 x6666)) (= (< 0 x2187) x911) (= (x6009 x5372) x5128) (<= x2497 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2497) (< (+ x1592 x6666) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2497 (+ x1592 x6666)) (= x1592 (x2787 x47)) (= x2497 x4974))) x4671) x1756) (=> (and (and (= x7378 0) (= 0 x6320) (= x644 x7309) (= x5391 x5029) (= x3173 x2365) (= x6668 x68) (= x4216 x6347) (= x4220 x2819)) (not x4671)) x4226))) (=> (and (not x4108) (and (= x6831 x644) (= x2219 x5029) (= x6668 x8104) (= x4216 x5506) (= x1225 x3173) (= x2808 x2819))) x6063))) (=> (and (and (= true x6916) (= 100 x8229) (= x1621 false)) (not x1163)) x2178))))))))) (=> (and (= x4192 (= x1041 255)) x1687) (and (=> x4192 x1634) (=> (and (and (= x3211 (x3301 x162)) (= x2628 (x2321 255 x4194)) (= (+ 1 x1041) x4194) (= x6994 (= x5615 255)) (= x162 (x6754 64 x1041 36)) (= x5615 (x2321 255 x4194))) (not x4192)) (and (=> (and (and (= x5358 (x2321 255 x6279)) (= x6279 (+ 1 x5615)) (= x6851 (x6754 64 x5615 36)) (= x3445 (x2321 255 x6279)) (= x5124 (= 255 x5358)) (= x6894 (x3301 x6851))) (not x6994)) (and (=> x5124 x6812) (=> (and (and (= (+ 1 x5358) x3872) (= x4875 (x2321 255 x3872)) (= (x2321 255 x3872) x8337) (= (x3301 x4729) x5105) (= x4729 (x6754 64 x5358 36)) (= x7013 (= 255 x4875))) (not x5124)) (and (=> (and (not x7013) (and (= (x2321 255 x5587) x6416) (= x1417 (x6754 64 x4875 36)) (= x1728 (= 0 x280)) (= x5587 (+ 1 x4875)) (= x95 (x2321 255 x5587)) (= (x8219 x3173) x280) (= 128 x7512) (= x2017 (x3301 x1417)))) (and (=> (and x1728 (and (= x5263 x4250) (= true x427) (= x2731 x2448) (= x2620 x3597) (= x1418 0) (= x4957 x4216) (= x7905 x8532) (= x2833 x5029) (= x2222 false) (= 2 x4525) (= x2759 x4025) (= x6668 x5341) (= x309 x3173) (= x8060 x959) (= x4183 x3661) (= x644 x7023) (= x2426 x4579))) x6447) (=> (and (and (= (x6009 x3173) x3489) (= (<= x3211 x2144) x6635) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3489 x3211)) x5206) (= x2144 (x6009 x333)) (= x3073 (and x6635 x5206))) (not x1728)) (and (=> (and (and (and (>= 127 x6748) (= x1663 x7143) (= x8015 x5990) (= x3821 x3669) (< (+ x7007 x3211) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1663 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1663 0) (= (not (= x5372 x333)) x5126) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x2013) (= x3818 x3258) (= x6642 false) (= (x6009 x333) x5988) (>= x3943 1) (= 100 x1871) (<= x6748 127) (= x3706 false) (= x7007 (x3952 x3173)) (= x4379 486791245) (= x153 (- x5988 x3211)) (= x3669 x5105) (= (+ x7007 x3211) x1663) (= x3258 x2017) (= (x8219 x5372) x3943) (= x6894 x5990)) (or (and (and (= x6235 (ite (not (= x2426 x333)) 1 0)) (<= x2426 1461501637330902918203684832716283019655932542975)) x5126) (and (= x6235 (ite x5126 1 0)) (not x5126)))) x3073) x5491) (=> (and (and (= x3173 x6877) (= x5762 x4183) (= x8060 x1068) (= x5029 x2563) (= x2426 x2326) (= x644 x2949) (= x4710 x5263) (= 0 x5382) (= x4025 x3147) (= x4320 x3597) (= x8012 0) (= x8397 x4216) (= x3611 x6668) (= x7679 x95) (= x2448 x5811)) (not x3073)) x6448))))) (=> x7013 x2856))))) (=> x6994 x693))))))))))) (=> (and (= (= x1041 255) x4623) x6291) (and (=> x4623 x1634) (=> (and (not x4623) (and (= x3082 (x2321 255 x7710)) (= (+ x1041 1) x7710) (= x197 (x2321 255 x7710)) (= x2554 (x6754 64 x1041 36)) (= x2962 (= x3082 255)) (= (x3301 x2554) x551))) (and (=> x2962 x693) (=> (and (and (= x6166 (x2321 255 x1483)) (= (= 0 x2639) x7867) (= (x2321 255 x1483) x5268) (= (x6754 64 x3082 100) x7896) (= 128 x6385) (= (x8219 x3173) x2639) (= (x7070 x7896) x4972) (= (+ 1 x3082) x1483)) (not x2962)) (and (=> (and (and (= x3504 2) (= x3661 x4183) (= x644 x7023) (= x4250 x5263) (= x2620 x3597) (= x309 x3173) (= x8060 x959) (= x4216 x4957) (= false x940) (= 0 x1418) (= x2426 x4579) (= x2448 x2731) (= x2833 x5029) (= x5341 x6668) (= x1244 true) (= x4025 x2759) (= x8532 x7905)) x7867) x6447) (=> (and (and (= 3957931183 x223) (= x2367 (= x333 x3597)) (>= x5835 1) (= x7728 false) (= x5774 x1474) (= 68 x3077) (= x2629 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x1474 x551) (>= 127 x5824) (= x6309 x4972) (= (x8219 x5372) x5835) (= false x3012) (<= x5824 127)) (not x7867)) (and (=> (and (and (= x1212 false) (= x6436 4) (= true x240)) (not x2367)) x4360) (=> (and (and (= x6971 (x5793 x1909)) (>= 255 x6971) (= x1909 (x6754 64 x551 11)) (= (> x6971 3) x8116)) x2367) (and (=> (and x8116 (and (= x6436 36) (= x2760 false) (= x4585 true))) x4360) (=> (and (= x3323 (= 1 x6971)) (not x8116)) (and (=> (and (not x3323) (and (= x2446 false) (= x6436 4) (= x4645 true))) x4360) (=> (and x3323 (and (= x3478 (x6754 64 x551 11)) (= x2754 (x8219 x5372)) (= x5111 (x6754 64 x551 11)) (= (+ 2 x5111) x6132) (= x5692 (= x2754 0)) (= 128 x5867))) (and (=> (and x5692 (and (= false x4865) (= true x276) (= 0 x6436))) x4360) (=> (and (not x5692) (and (and (= x4872 0) (= (x8219 x5372) x6010) (= false x823) (>= 127 x3047) (= 0 x4195) (<= 1 x6010) (>= 127 x3047) (= x2613 x2052) (= x5890 false) (= 0 x5437) (= false x4787) (= x4926 0) (= 486791245 x5798) (= x2052 x5774) (= x7932 100) (= x476 13123866003235860548192500634644069355060014211693331341089165407210616913920)) (or (and (not x4787) (= (ite x4787 1 0) x3642)) (and x4787 (and (<= x2426 1461501637330902918203684832716283019655932542975) (= (ite (not (= x5372 x2426)) 1 0) x3642)))))) x6651))))))))))))))))))) (=> (and (= x7663 (= x1041 255)) x2928) (and (=> (and (and (= x7414 (x6754 64 x1041 6)) (<= x5691 65535) (= x1188 (+ x1041 1)) (= x8140 (x2321 255 x1188)) (= x2636 (= 255 x7133)) (= x5691 (x315 x7414)) (= x7133 (x2321 255 x1188))) (not x7663)) (and (=> x2636 x6812) (=> (and (and (= x7251 (x6164 x6576)) (= x7940 (> x2691 0)) (= x2691 (x7553 (- x4693 (mod (ite (< x3517 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x6754 64 x7133 12) x6576) (= x4114 (div x6668 2)) (= x3517 (ite (> x4693 0) x4114 (x2321 127 x4114))) (= (+ x7133 1) x8129) (<= x7251 18446744073709551615) (= (x2321 1 x6668) x4693) (= x2094 (x2321 255 x8129)) (= (x2321 255 x8129) x2512)) (not x2636)) (and (=> (not x7940) x618) (=> (and x7940 (and (= (= 0 x6844) x2061) (= x6844 (x2321 1 x6668)))) (and (=> (and (and (or (= 0 x7388) (= x7388 32)) (= x7388 (* 32 (ite (not (= x3517 0)) 1 0))) (= x8200 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6668)) (= (+ 292 x7388) x7303)) x2061) x3692) (=> (and (and (and (= (x5919 32 103) x4349) (= x8052 (< 0 x3517))) (or (and (= x974 0) (not x8052)) (and (and (= x974 32) (<= x3517 32) (= (x3196 x4349) x2802)) x8052))) (not x2061)) x7400))))))) (=> x7663 x1634))))) (=> (and (= (= x1041 255) x1089) x1818) (and (=> x1089 x1634) (=> (and (not x1089) (and (= x7815 (x2501 x6391)) (= x2217 (x2321 255 x8163)) (= x6391 (x6754 64 x1041 2)) (= (= x7572 255) x5359) (>= 1461501637330902918203684832716283019655932542975 x7815) (= x7572 (x2321 255 x8163)) (= (+ 1 x1041) x8163))) (and (=> x5359 x693) (=> (and (not x5359) (and (= (x315 x8231) x6016) (= x4757 (x2321 255 x3433)) (= x3433 (+ 1 x7572)) (= x8231 (x6754 64 x7572 6)) (<= x6016 65535) (= (x2321 255 x3433) x3785) (= (= 255 x4757) x5129))) (and (=> x5129 x6812) (=> (and (and (= (x6754 64 x4757 2) x8350) (= (x2321 255 x6727) x135) (<= x6173 1461501637330902918203684832716283019655932542975) (= x6727 (+ x4757 1)) (= (x2321 255 x6727) x5996) (= x3984 (= 255 x5996)) (= (x2501 x8350) x6173)) (not x5129)) (and (=> x3984 x2856) (=> (and (not x3984) (and (= 128 x4244) (= (= x5166 0) x5722) (= x8021 (x3301 x7250)) (= x1456 (+ 1 x5996)) (= x5166 (x8219 x3173)) (= (x2321 255 x1456) x5759) (= x7250 (x6754 64 x5996 36)) (= x5569 (x2321 255 x1456)))) (and (=> (and (and (= true x8483) (= x3173 x309) (= x644 x7023) (= x4957 x4216) (= x2448 x2731) (= x8060 x959) (= x2833 x5029) (= x2759 x4025) (= x7078 false) (= x3675 2) (= x5341 x6668) (= x2620 x3597) (= x4250 x5263) (= x4579 x2426) (= x4183 x3661) (= 0 x1418) (= x8532 x7905)) x5722) x6447) (=> (and (not x5722) (and (= x1962 x6173) (<= 1 x7813) (= 132 x7609) (= x7019 102788308552044517260959567728648622381392053106279845986800620074717893623808) (= x7815 x2101) (= 3812630263 x5399) (>= 127 x5438) (= (= x333 x2426) x7094) (<= x2426 1461501637330902918203684832716283019655932542975) (= false x4662) (<= x5438 127) (= false x3603) (= x6016 x6243) (= x7813 (x8219 x5372)) (= x7839 x8021))) (and (=> (and (= x3521 (< x8021 100000)) x7094) (and (=> (and (and (= false x1966) (= 4 x4976) (= true x8464)) x3521) x3562) (=> (and (not x3521) (and (= x1657 (x3301 x7250)) (= x4444 x644) (= (x2501 x6391) x1924) (= x6668 x1473) (= x4592 x5029) (= x7316 x495) (= x4862 (x315 x8231)) (= x7164 x4216) (= x8060 x6362) (= x6709 x2426) (= 0 x7495) (= x4862 x374) (= x5873 x1657) (= (x2501 x8350) x7316) (= x5569 x1944) (= x4612 x1924) (= 1 x1570) (= x4025 x5122) (= x5118 x3173))) x1327))) (=> (and (not x7094) (and (= 100 x4976) (= x7076 true) (= false x5852))) x3562))))))))))))))))) (=> (and (not x8440) (and (= 2 x1175) (= true x92) (= x3597 x2620) (= x2759 x4025) (= x1418 0) (= x309 x3173) (= x3661 x4183) (= x4579 x2426) (= x7905 x8532) (= x4957 x4216) (= x5029 x2833) (= x959 x8060) (= x3871 false) (= x6668 x5341) (= x4250 x5263) (= x2731 x2448) (= x7023 x644))) x6447))))) (=> (and (and (<= x4399 127) (>= 127 x4399) (= false x1090) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x1014) (= x6458 (x8219 x6957)) (= true x3053) (= x5748 false) (= 1341992515 x8490) (= x289 36) (= x2295 x5372) (<= 1 x6458)) x1330) (and (=> (and (and (= false x4675) (= x7305 true)) (not x3053)) x575) (=> (and x3053 (and (= (x3117 x5203) x3224) (= (x6754 64 x5372 1) x5203) (= x2113 (x8120 (+ x3224 x6915))) (= x2542 (> x3224 x2113)))) (and (=> (and (not x2542) (and (= x2770 x5029) (= x5115 x8060) (= x4025 x5953) (= x2426 x2384) (= x5656 1) (= x4892 x3597) (= x4183 x2228) (= x1196 x4216) (= x8532 x4818) (= x5263 x8042) (= x6668 x1360) (= x5696 x2448) (= x4969 x3173) (= x644 x6203))) x8420) (=> (and x2542 (and (= x3545 false) (= true x5490))) x575))))))) (=> (and (and (= x5029 x6866) (= x5426 x4216) (= x993 x8532) (= x386 x3597) (= x1037 x3173) (= x8013 x4183) (= x601 x6668) (= x7585 x8060) (= 0 x1576) (= x4025 x7724) (= x2448 x6287) (= x5263 x756) (= x2426 x7521) (= x3531 x644)) (not x6393)) x5603)))))))
(assert (x308 x326))
(assert (x308 x2754))
(assert (= (and x7089 (not x3935)) x6169))
(assert (x308 x1386))
(assert (= (or (and x8018 x6711) (and (not x7558) x6585)) x8479))
(assert (x308 x4803))
(assert (not (x2741 (x5919 32 x6757))))
(assert (= (x932 (x6754 64 x6894 11)) 11))
(assert (= (x3071 (x6292 x7051 x382 x8284 x7275 x7761 x5763)) x7761))
(assert (x308 x4972))
(assert (x308 x2439))
(assert (=> (>= 10000 x31) (= 0 (x5346 x31))))
(assert (< (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x5696))
(assert (x308 x4564))
(assert (x308 x6269))
(assert (x308 x5673))
(assert (= x516 (x5881 (x5919 x516 x5371))))
(assert (= (=> (and (and (<= x8351 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x8120 (+ x4800 x8355)) x5315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8351) (= (x8120 (+ 192 x8351)) x2220) (> x2220 x8351) (= x7552 (x8120 (+ 32 x3529))) (not (= x8351 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (> x8351 x3529) (= x8027 (x7553 (- x5821 32))) (<= x8351 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3529 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x8351 1) (= x420 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x5758)) (<= x3529 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3885 (< 0 x3662)) (<= x3529 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x32 x7552) x3948) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4315) x5076) (= x6737 (x4106 x3529)) (= x8351 (x8120 (+ x5076 x4800))) (= x1526 (x8120 (+ x8351 32))) (= x4315 (x8120 (+ 31 x8355))) (not (= x8351 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x2321 26959946667150639794667015087019630673637144422540572481103610249215 x3948) x5758) (not (= x8351 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x7553 (- x8351 x3529)) x5821)) (or (and (and (= x644 x6150) (= x5317 x4216) (= x2094 x1571) (= x1632 x3173) (= x5029 x2736) (= x2575 x6668)) (not x3885)) (and x3885 (and (= (x6009 x5372) x6073) x5241 (= (x6009 x5372) x7885) (>= 4294967295 x1973) (= x5241 (>= (x5337 x5372) x7885)) (= x7140 x5317) (= x7808 x2575) (= (= x6073 (x5337 x5372)) x948) (= x154 x2736) x948 (= x6150 x1329) (= x1571 x7109) (= x4762 x1632))))) x2268) x6689))
(assert (= x1075 (x2151 (x1300 x7491 x4344 x2851 x1075))))
(assert (= x7491 (x5881 (x1300 x7491 x4344 x2851 x1075))))
(assert (x308 x628))
(assert (x308 x5372))
(assert (x308 x2724))
(assert (= (or (and x170 (not x7940)) (and x1623 (not x598)) (and x6838 (not x2348)) (and x3473 (not x497))) x6989))
(assert (x308 x846))
(assert (=> (<= x1972 10000) (= (x5346 x1972) 0)))
(assert (=> (<= x7368 10000) (= (x5346 x7368) 0)))
(assert (x308 x3287))
(assert (x308 x5627))
(assert (x308 x7043))
(assert (x308 x2938))
(assert (x308 x212))
(assert (=> (>= 10000 x5739) (= (x5346 x5739) 0)))
(assert (x308 x299))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x2135 x6129 x8099)))
(assert (not (x2741 (x6754 64 1 x113))))
(assert (= (and x3030 (not x4682)) x4007))
(assert (=> (>= 10000 x4176) (= 0 (x5346 x4176))))
(assert (> (x6754 64 x993 36) 10000))
(assert (< (x6754 x1185 x8205 x7758) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x4685))
(assert (not (x2741 (x6754 64 x1582 12))))
(assert (= x62 (or x1650 x6887 x1853 x7941 x3633 x5015)))
(assert (x308 x5223))
(assert (x308 x2790))
(assert (< 10000 (x5919 x5494 x6209)))
(assert (not (x2741 (x1300 x8305 x7028 x1718 x1000))))
(assert (= (x932 (x1300 x7051 x5930 x6429 x3683)) x6429))
(assert (x308 x4819))
(assert (x308 x2770))
(assert (= x7295 (and x6514 (not x3312))))
(assert (x308 x1548))
(assert (x2569 x5029))
(assert (= x2614 x3143))
(assert (x308 x2753))
(assert (x308 x6986))
(assert (= x5566 (or x7833 (and (not x1773) x8450))))
(assert (= x3233 (=> (= (= x2017 0) x5837) (and (=> (and x5837 (and (= x1040 (x4670 224)) (<= 356 x4366) (= 0 x2389) x5184 (= x3055 256) (= x6368 (x8120 (+ x7949 x8509))) (= x4058 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5679)) (= x2838 (or (and (= true (<= (- x6730 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 (- x6730 4))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x6730 4)))) (= x7260 (x8120 (+ x1040 31))) (= x5007 290) (= x3647 (x7553 (- x850 294))) (>= x6065 1) (= x6730 x4366) (= 1084734224 x6769) (= x4404 (= (x2381 228) (x7616 518))) (= x6927 160) (= x5372 x4181) x1466 (= (x8120 (+ x4058 486)) x850) (= x5679 (x8120 (+ 31 x5974))) (= x1466 (= (x2381 196) (x7616 486))) (= x3632 29244376827073035548771643948814531551534385112760475998805679327281764368384) (>= 127 x6189) x7202 (= false x4381) (= x2418 false) x4404 (= x7949 (x8120 (+ x850 32))) (= x8509 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7260)) (<= x6189 127) (= x2448 x2376) (= (= (x2381 260) 34) x7202) (= x6065 (x8219 x2730)) (= (= 64 (x2381 164)) x5184) (= x4366 (x7553 (- x6368 290))) (= x7518 0) (= x5974 (x4849 128)) (<= 356 x6730))) (and (=> x2838 x6783) (=> (and (= true x1635) (not x2838)) (and (=> (and (= (and (> x6730 195) (= (<= x6730 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x1759) x1635) (and (=> (not x1759) x6783) (=> (and (and (= (x924 164) x6638) (= (> x6638 18446744073709551615) x3039)) x1759) (and (=> x3039 x4897) (=> (and (not x3039) (and (= (> x3495 x6730) x2206) (= (x8120 (+ x6638 196)) x3495))) (and (=> x2206 x8053) (=> (and (and (= (x924 260) x1788) (<= x6730 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1673 (> x1788 18446744073709551615)) (>= x6730 356)) (not x2206)) (and (=> x1673 x4897) (=> (and (not x1673) (and (= x5200 (x8120 (+ x1788 292))) (= x7346 (< x6730 x5200)))) (and (=> x7346 x8053) (=> (and (not x7346) (and (= x5525 false) (= x3980 (x7437 128)) (= x5029 x2238) (= x3618 64) (= x1529 x4183) (= x1977 (x7437 128)) (= x8060 x4065) (= (x7437 160) x1599) (= x3910 x3173) (= x644 x6997) (= x6428 false) (= x5624 x2426) (= x1006 x95) (= x3203 1) (= x4023 (x7437 160)) (= x8560 x6668) (= x5263 x13) (= x4216 x6055) (= x8469 x3597) (= x1867 x2448) (= x4025 x4719))) x5755))))))))))) (=> (not x1635) x6783))))) (=> (and (and (= x644 x5213) (= x2448 x1413) (= x4216 x7858) (= 128 x6036) (= x6668 x1851) (= x5110 x2017) (= x3173 x1033) (= x42 x95) (= x5029 x3828) (= x5543 x4183) (= x6001 x8060) (= x2426 x3106) (= x7762 x5263) (= x4025 x159) (= x6364 x3597)) (not x5837)) x982)))))
(assert (x308 x6253))
(assert (= x7118 (and x7350 (not x186))))
(assert (> (x4041 x2135 x2713 x3983 x8194 x2844) 10000))
(assert (= x7491 (x5881 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x1468))
(assert (x308 x5775))
(assert (x308 x3821))
(assert (x308 x1871))
(assert (x308 x6458))
(assert (x308 x3767))
(assert (> (x6292 x4301 x3767 x6440 x7374 x1969 x3086) 10000))
(assert (x308 x8153))
(assert (x308 x6644))
(assert (not (x2741 (x6754 64 x5691 7))))
(assert (=> (<= x381 10000) (= (x5346 x381) 0)))
(assert (x308 x3739))
(assert (= x904 (or x2937 x8134)))
(assert (x308 x6555))
(assert (x308 x8347))
(assert (= x5218 (or x5335 (and x4889 x2066) (and x4923 x3494) x4267 x5983 x5405 x4148)))
(assert (x308 x5585))
(assert (= x1974 (=> (and (or (not x5670) x5670) (= x5670 (= 0 x5695))) x774)))
(assert (x308 x5208))
(assert (x308 x3358))
(assert (x308 x465))
(assert (= (x3071 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x8389))
(assert (= (and x441 (not x519)) x3011))
(assert (= x5675 (x2151 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (= x4757 (x4162 (x6754 64 x4757 2))))
(assert (= x1198 (x5881 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (x3057 x3589))
(assert (x308 x7757))
(assert (x308 x607))
(assert (= (x5346 1766847064778384329583297500742918515827483896875618958121606201292619776) 0))
(assert (=> (>= 10000 x1967) (= (x5346 x1967) 0)))
(assert (x2741 2001815235))
(assert (x308 x5960))
(assert (x308 x2198))
(assert (= x3781 x6313))
(assert (= x2546 (and x3315 (not x8217))))
(assert (x308 x1016))
(assert (=> (>= 10000 x6809) (= (x5346 x6809) 0)))
(assert (x308 x4114))
(assert (x308 x1924))
(assert (x308 x5457))
(assert (= (x932 (x6754 x4301 x4290 x3083)) x3083))
(assert (x308 x5663))
(assert (= x196 (and (not x2810) x779)))
(assert (= (x5881 (x1300 x516 x3067 x6100 x728)) x516))
(assert (x308 x251))
(assert (> (x4041 x4301 x7294 x5415 x3796 x1901) 10000))
(assert (> (x1300 x2135 x5205 x5858 x2587) 10000))
(assert (=> (<= x4318 10000) (= (x5346 x4318) 0)))
(assert (=> (>= 10000 x4498) (= (x5346 x4498) 0)))
(assert (= x5615 (x4162 (x6754 64 x5615 36))))
(assert (= x5086 (x5881 (x6292 x5086 x3403 x3380 x6212 x8230 x7797))))
(assert (= (and x60 x4013) x6272))
(assert (not (x2741 (x6754 64 x5739 (ite (<= x4301 32) x553 (ite (>= 64 x4301) x3366 (ite (>= 96 x4301) x6432 (ite (>= 128 x4301) x4345 (ite (>= 160 x4301) x4093 (ite (<= x4301 192) x539 x3309))))))))))
(assert (x308 x5329))
(assert (=> (<= x3550 10000) (= 0 (x5346 x3550))))
(assert (x308 x7271))
(assert (= (x932 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x126))
(assert (= x6530 (and (not x1104) x1079)))
(assert (x308 x3005))
(assert (x308 x1156))
(assert (x308 x1034))
(assert (=> (>= 10000 x8366) (= (x5346 x8366) 0)))
(assert (= (x4162 (x1300 x4203 x29 x3306 x7648)) x29))
(assert (x308 x6492))
(assert (= (x5346 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (x308 x1967))
(assert (x308 x1616))
(assert (= (or (and x4342 (not x1117)) x6591) x3436))
(assert (= (and x8107 x4777) x2199))
(assert (x308 x5268))
(assert (=> (<= x1016 10000) (= (x5346 x1016) 0)))
(assert (x308 x737))
(assert (x308 x203))
(assert (= x2268 (=> (and (= x8361 (= x3662 0)) (or x8361 (not x8361))) x14)))
(assert (x308 x1360))
(assert (x308 x3461))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x4203 x2643 x5854 x1971 x1016 x518)))
(assert (= x4982 (x5881 (x6292 x4982 x7273 x8186 x1537 x706 x4512))))
(assert (= (or x6788 x297) x5733))
(assert (x308 x1183))
(assert (= x383 (=> (and (= x3531 x5249) (= x4851 0) (= x5165 x3046) (= x386 x148) (= x5480 x8013) (= x6098 x1266) (= 2 x267) (= x1266 (x2321 255 x5639))) x4666)))
(assert (not (x2741 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x3057 x6721))
(assert (x308 x6581))
(assert (= (x932 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198)) x6495))
(assert (=> (<= x5545 10000) (= 0 (x5346 x5545))))
(assert (=> (<= x5763 10000) (= 0 (x5346 x5763))))
(assert (x308 x1813))
(assert (x308 x7513))
(assert (x308 x6747))
(assert (x792 x6279))
(assert (= 64 (x5881 (x6754 64 x5358 36))))
(assert (< (x1300 x5086 x6071 x7368 x6250) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2571))
(assert (=> (>= 10000 x7138) (= 0 (x5346 x7138))))
(assert (x308 x4969))
(assert (x5050 x3948))
(assert (not (x2741 (x6754 64 x3285 36))))
(assert (= x1655 x5973))
(assert (= x6414 (x4162 (x5919 32 x6414))))
(assert (x308 x3237))
(assert (x308 x3828))
(assert (< 10000 (x5919 x8305 x6208)))
(assert (= (x4162 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) x6091))
(assert (x3057 x1456))
(assert (= (and x5676 x7870) x7214))
(assert (x308 x8236))
(assert (= x2271 (x4162 (x5919 x2135 x2271))))
(assert (x308 x6510))
(assert (= (=> (and (= (= 0 x7355) x7509) (or (and (and (= (x6958 x4906) x8167) (= (x4708 x5372) x7254) (= x1898 x6565) (= x673 x2725) (>= x90 0) (= x7355 x8391) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90) (= (+ x460 x7254) x90) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7254 x460)) (= x460 (ite (= 0 x7355) x7466 0)) (= x6038 (- x8167 x460)) (= x5360 x5987) (= x90 x980)) x7509) (and (and (= x7355 x8391) (= x5987 x5360) (= x1898 x6565) (= x673 x2725)) (not x7509)))) x2653) x7934))
(assert (x308 x822))
(assert (x308 x1743))
(assert (x308 x844))
(assert (x308 x8232))
(assert (= x7331 (and x2997 x5044)))
(assert (= x514 (x932 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700))))
(assert (=> (>= 10000 x277) (= (x5346 x277) 0)))
(assert (= (x4162 (x6754 64 x5691 3)) x5691))
(assert (= x6887 (and x6588 (not x5011))))
(assert (x308 x7249))
(assert (< 10000 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)))
(assert (x308 x7874))
(assert (x308 x7965))
(assert (= x6233 (x932 (x6292 x5494 x6256 x6233 x6797 x424 x5377))))
(assert (= (x4162 (x4041 x4203 x3492 x6286 x1991 x7015)) x3492))
(assert (x308 x1110))
(assert (x308 x6583))
(assert (= (x5346 (x5919 x4982 x8150)) (x5919 x4982 x8150)))
(assert (x308 x5109))
(assert (x308 x12))
(assert (= (and (not x765) x4123) x3705))
(assert (x308 x5076))
(assert (x308 x6876))
(assert (x308 x638))
(assert (= (or (and (not x4753) x3144) (and x6532 (not x4833)) (and (not x5087) x1356)) x3953))
(assert (= x2530 (and x2252 x8204)))
(assert (= (and (not x4694) x880) x5621))
(assert (x308 x5787))
(assert (= x6230 (x4162 (x6754 64 x6230 36))))
(assert (= (and x2714 x2901) x2719))
(assert (= x5871 (and x1209 (not x3681))))
(assert (x308 x4592))
(assert (x308 x5057))
(assert (x308 x2023))
(assert (x308 x3612))
(assert (x308 x5133))
(assert (x308 x5257))
(assert (< (x5919 x1185 x6644) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x915))
(assert (< (x4041 x7051 x7748 x1747 x7938 x3085) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6515))
(assert (x308 x1682))
(assert (= (=> (= (+ x72 x3641) x2319) x1251) x1578))
(assert (= (x2151 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420)) x5199))
(assert (= x2166 (or x2530 x6296)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2448 4)))
(assert (= (and x5958 x5731) x7465))
(assert (x308 x5013))
(assert (x308 x4042))
(assert (x308 x154))
(assert (= (x3587 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) x3806))
(assert (x5886 x1042))
(assert (x308 x4201))
(assert (=> (<= x164 10000) (= (x5346 x164) 0)))
(assert (=> (>= 10000 x1691) (= (x5346 x1691) 0)))
(assert (x3057 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (> (x6754 64 x1582 12) 10000))
(assert (x308 x4005))
(assert (= (and (not x7306) x5261) x775))
(assert (= (x5346 65459779515086145227071195481915504640854538040456829512690024447692440076288) 0))
(assert (x308 x4916))
(assert (x308 x376))
(assert (=> (>= 10000 x352) (= (x5346 x352) 0)))
(assert (x308 x5785))
(assert (= (=> (= x7706 (= 0 x8545)) (and (=> (and (and (= (x8120 (+ x2918 x3015)) x6046) (= x4084 (x6754 64 x5372 2)) (= x3015 (x3766 x4084)) (= x7677 (< x6046 x3015))) x7706) (and (=> (and (and (= false x7243) (= true x8206) (= 36 x2096)) x7677) x526) (=> (and (not x7677) (= x6711 (= x5426 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x6711) (and (= 1 x4551) (= false x1552) (= x6891 (x8120 (+ x5426 1))) (= x7283 x386) (= x8174 x3531) (= x5825 false) (= x8013 x5859) (= x5305 32) (= x5841 (x8120 (+ x5426 1))) (= (+ 1 x6892) x6153) (= (x6754 64 x5426 0) x6892))) x7578) (=> x6711 x6872))))) (=> (and (and (= false x7790) (= true x3096) (= x2096 4)) (not x7706)) x526))) x6676))
(assert (= (x932 (x6754 64 x6421 11)) 11))
(assert (=> (<= x7095 10000) (= (x5346 x7095) 0)))
(assert (=> (<= x2456 10000) (= (x5346 x2456) 0)))
(assert (= x4896 (and (not x5595) x5978)))
(assert (not (x2741 (x6754 64 x676 36))))
(assert (x308 x3789))
(assert (x308 x4075))
(assert (x308 x343))
(assert (= (x6292 x4203 x2643 x5854 x1971 x1016 x518) (x5346 (x6292 x4203 x2643 x5854 x1971 x1016 x518))))
(assert (x308 x6277))
(assert (= 36 (x932 (x6754 64 x5358 36))))
(assert (x3057 x1275))
(assert (x308 x6286))
(assert (=> (<= x8424 10000) (= 0 (x5346 x8424))))
(assert (x308 x5320))
(assert (x308 x3835))
(assert (x308 x4824))
(assert (x308 x7683))
(assert (x308 x8502))
(assert (x308 x3595))
(assert (= (x2151 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)) x7374))
(assert (= 0 (x5346 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (x308 x8065))
(assert (x308 x6762))
(assert (x308 x6442))
(assert (x308 x8364))
(assert (= (and (not x3053) x6145) x5463))
(assert (= x1727 (or (and x3432 x3243) (and x3498 x8343))))
(assert (x308 x2718))
(assert (x308 x420))
(assert (=> (>= 10000 x7953) (= 0 (x5346 x7953))))
(assert (x308 x258))
(assert (x2741 3313512704))
(assert (=> (<= x7834 10000) (= (x5346 x7834) 0)))
(assert (x308 x3651))
(assert (< 10000 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147)))
(assert (x308 x6664))
(assert (x308 x6227))
(assert (x308 x5984))
(assert (= (x5346 13123866003235860548192500634644069355060014211693331341089165407210616913920) 0))
(assert (x792 x5984))
(assert (x308 x7701))
(assert (x308 x3882))
(assert (= (=> (and (and (> x6492 x83) (= (< 0 x8364) x2292) (= (x7553 (- x535 32)) x1283) (= x4813 (x4649 x5686)) (= (x1056 x6) x7502) (<= x5686 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x83)) (= (x2321 26959946667150639794667015087019630673637144422540572481103610249215 x7502) x86) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x83)) (= x83 (x8120 (+ x247 x1610))) (= x3090 (x8120 (+ 32 x83))) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x83)) (= (x8120 (+ x5686 32)) x6) (= x1610 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3634)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x83) (= (x8120 (+ x83 192)) x6492) (= x535 (x7553 (- x83 x5686))) (= x769 (x8120 (+ x5789 x247))) (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3634 (x8120 (+ x5789 31))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5686) (< x5686 x83) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5686) (= x7054 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x86)) (<= 1 x83)) (or (and (not x2292) (and (= x1481 x2311) (= x3531 x1136))) (and (and x3369 (= x1136 x5751) (= x3311 (= (x2127 x5372) x1682)) (= (x978 x5372) x3481) (= x3369 (>= (x2127 x5372) x3481)) x3311 (= x1682 (x978 x5372)) (>= 4294967295 x6956) (= x4386 x1481)) x2292))) x3076) x7105))
(assert (x3057 x1042))
(assert (x308 x6513))
(assert (=> (>= 10000 x3205) (= 0 (x5346 x3205))))
(assert (not (x2741 (x6754 64 x5426 0))))
(assert (x308 x1339))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639838) 0))
(assert (x308 x3549))
(assert (x308 x5482))
(assert (x308 x2868))
(assert (> (x5919 32 x6414) 10000))
(assert (x2741 4294967295))
(assert (> (x6754 64 x6287 5) 10000))
(assert (=> (<= x4963 10000) (= 0 (x5346 x4963))))
(assert (x308 x3380))
(assert (x308 x7275))
(assert (= x4683 (x5843 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (= (x5346 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610)) (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610)))
(assert (= (x5843 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)) x1967))
(assert (= (and x451 x2313) x502))
(assert (= (and x5554 (not x4898)) x5607))
(assert (=> (<= x6644 10000) (= 0 (x5346 x6644))))
(assert (=> (<= x5954 10000) (= (x5346 x5954) 0)))
(assert (x308 x8434))
(assert (=> (>= 10000 x424) (= 0 (x5346 x424))))
(assert (= (x932 (x4041 x5086 x2153 x8353 x3686 x1447)) x8353))
(assert (x308 x966))
(assert (= x8444 (x4162 (x4041 x8305 x8444 x811 x4050 x7088))))
(assert (= x2359 (and x6717 (not x3056))))
(assert (= (and x1253 x5155) x1357))
(assert (not (x2741 (x5919 x1185 x6644))))
(assert (= (=> (= (= 0 x1463) x4337) (and (=> (and x4337 (and (= x782 290) (= x5372 x5955) (>= 127 x3849) x5276 (= x5215 x4588) (= false x5961) (= (x8120 (+ x645 x6533)) x3036) (= x2399 29244376827073035548771643948814531551534385112760475998805679327281764368384) x3466 (= x6533 (x8120 (+ 32 x7379))) (<= 1 x1370) (= x3787 (= 34 (x7652 260))) (<= 356 x5215) x6294 (= x3154 x6287) (= 0 x3710) (= (= (x7652 196) (x147 486)) x5276) (= x4134 (x8120 (+ 31 x5311))) (= (= 64 (x7652 164)) x6294) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x891) x645) (= (x8120 (+ x3888 486)) x7379) x3787 (= x3466 (= (x147 518) (x7652 228))) (= 160 x7048) (= x1370 (x8219 x2730)) (= x5311 (x8513 128)) (= x3829 false) (>= x4588 356) (= x1757 0) (= (x8120 (+ x5768 31)) x891) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4134) x3888) (= (or (> (- x4588 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 (- x4588 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x4588 4))))) x115) (= x5215 (x7553 (- x3036 290))) (<= x3849 127) (= x7099 (x7553 (- x7379 294))) (= 256 x6559) (= x5768 (x2251 224)) (= 1084734224 x908))) (and (=> x115 x6352) (=> (and (= x8242 true) (not x115)) (and (=> (and (= (and (< 195 x4588) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4588))) x726) x8242) (and (=> (and (and (= x8302 (> x4442 18446744073709551615)) (= (x1 164) x4442)) x726) (and (=> x8302 x91) (=> (and (not x8302) (and (= x2596 (x8120 (+ 196 x4442))) (= (> x2596 x4588) x2682))) (and (=> (and (not x2682) (and (= x8528 (x1 260)) (>= x4588 356) (<= x4588 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (> x8528 18446744073709551615) x8112))) (and (=> (and (and (= (x8120 (+ x8528 292)) x3690) (= x4842 (< x4588 x3690))) (not x8112)) (and (=> x4842 x5870) (=> (and (not x4842) (and (= x4335 x601) (= x5343 (x4258 128)) (= false x8073) (= x8013 x3507) (= x2339 x3290) (= x872 (x4258 160)) (= x7521 x1476) (= 64 x1942) (= x7724 x4547) (= x6287 x6059) (= false x7561) (= x756 x2674) (= (x4258 128) x3836) (= x386 x1840) (= x3068 x7585) (= (x4258 160) x1458) (= x3938 1) (= x1037 x2724) (= x6866 x8155) (= x6902 x5426) (= x3531 x7576))) x5944))) (=> x8112 x91))) (=> x2682 x5870))))) (=> (not x726) x6352))) (=> (not x8242) x6352))))) (=> (and (and (= x7724 x1213) (= x756 x6821) (= x7585 x3448) (= x3359 128) (= x1487 x7521) (= x7039 x5426) (= x8013 x630) (= x1037 x879) (= x3482 x1463) (= x6866 x2227) (= x1764 x6287) (= x601 x228) (= x3531 x1174) (= x7621 x386) (= x7519 x2339)) (not x4337)) x7090))) x5477))
(assert (x308 x5686))
(assert (= x7838 (or x904 x5515)))
(assert (x308 x7550))
(assert (x3057 x1074))
(assert (x5602 x4410))
(assert (x308 x3328))
(assert (= x7899 (and x4738 x5819)))
(assert (x308 x8399))
(assert (=> (>= 10000 x4724) (= (x5346 x4724) 0)))
(assert (= (and x3722 (not x4503)) x4074))
(assert (< (x6754 64 x5615 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5208 (x2151 (x6292 x1198 x8188 x2116 x5208 x7624 x827))))
(assert (= (and (not x2977) x7831) x7188))
(assert (= (x6292 x1391 x7138 x7296 x1932 x3069 x8182) (x5346 (x6292 x1391 x7138 x7296 x1932 x3069 x8182))))
(assert (= (and (not x2817) x4629) x5154))
(assert (x308 x7079))
(assert (x308 x3049))
(assert (=> (>= 10000 x5371) (= 0 (x5346 x5371))))
(assert (= (x3071 (x6292 x516 x3800 x1794 x5062 x7487 x7784)) x7487))
(assert (= x3488 (and (not x7897) x3510)))
(assert (x308 x2520))
(assert (=> (<= x6209 10000) (= (x5346 x6209) 0)))
(assert (x308 x6309))
(assert (x308 x7369))
(assert (< 10000 (x6292 x3850 x5673 x6483 x2284 x4803 x233)))
(assert (= (and x697 x7082) x1943))
(assert (x308 x5415))
(assert (= x6298 (and x3011 (not x7963))))
(assert (= (x6754 64 x2448 5) (x5346 (x6754 64 x2448 5))))
(assert (= (x4162 (x6292 x5494 x6256 x6233 x6797 x424 x5377)) x6256))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x7418 7)))
(assert (x3057 127))
(assert (x308 x7317))
(assert (x792 x6696))
(assert (= (and x5340 (not x8201)) x5146))
(assert (x308 x3934))
(assert (=> (<= x2538 10000) (= (x5346 x2538) 0)))
(assert (= (x6292 x1185 x6425 x8518 x6985 x6699 x7844) (x5346 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (= (=> (and (= x2845 x805) (= x5609 (x2321 255 x1483)) (= x5318 x538) (= x1798 0) (= x2998 x4303) (= x1781 x767) (= x3287 x3496) (= x6566 x1548) (= x1368 x1339) (= x3190 x6411) (= x2627 x5785) (= x871 x839) (= x939 x5609) (= x818 true) (= x1858 x5051) (= x93 x1365) (= 2 x6095) (= x2197 false)) x3601) x8054))
(assert (= (x5919 x352 x7287) (x5346 (x5919 x352 x7287))))
(assert (= x811 (x932 (x4041 x8305 x8444 x811 x4050 x7088))))
(assert (= (x4162 (x6754 x4801 x2232 x5324)) x2232))
(assert (x308 x6045))
(assert (x308 x4871))
(assert (= x4311 (and x5588 x4659)))
(assert (x308 x2899))
(assert (= x3019 (x5881 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x5771))
(assert (x308 x3557))
(assert (x308 x6216))
(assert (x308 x175))
(assert (x308 x5358))
(assert (x308 x3193))
(assert (= (and x4565 (not x2764)) x8309))
(assert (= x7366 (and x2126 x8113)))
(assert (=> (>= 10000 x53) (= (x5346 x53) 0)))
(assert (x308 x4683))
(assert (= (x5346 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (= (x5346 34591783479076665078880830389440322441076534786459098783165778951140825654127) 0))
(assert (x308 x1636))
(assert (= (or x8030 x4853) x6413))
(assert (x308 x2626))
(assert (x308 x536))
(assert (= (and x8062 x742) x559))
(assert (x308 x7908))
(assert (= (=> (and (= x4183 x8232) (= x4702 x2448) (= x4216 x7534) (= 2 x5013) (= x2426 x3102) (= x1633 x4025) (= 0 x8463) (= x3173 x5920) (= x3597 x5795) (= (x2321 255 x1483) x4262) (= x6436 x3867) (= x4262 x5628) (= x5263 x3194) (= x644 x5902) (= x5029 x3670) (= x8060 x628) (= x4721 x6668)) x6340) x4360))
(assert (=> (<= x4546 10000) (= 0 (x5346 x4546))))
(assert (= x2221 (and x4692 x3250)))
(assert (= (x5843 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x7322))
(assert (x308 x1497))
(assert (< 10000 (x6754 64 x6108 6)))
(assert (x308 x7741))
(assert (x308 x5962))
(assert (= (x5881 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038)) x4203))
(assert (x308 x8186))
(assert (x308 x2406))
(assert (= (=> (and (= x629 false) (= 0 x8501) (= x583 true)) x5308) x7441))
(assert (=> (>= 10000 x3083) (= 0 (x5346 x3083))))
(assert (x308 x7260))
(assert (x308 x7304))
(assert (= (x932 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038)) x6253))
(assert (x308 x7732))
(assert (x308 x6807))
(assert (x308 x5531))
(assert (x308 x7932))
(assert (= (x3071 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743)) x7893))
(assert (x308 x7976))
(assert (= x1972 (x2151 (x1300 x3019 x981 x4009 x1972))))
(assert (x308 x2925))
(assert (= (and x5882 x3976) x3730))
(assert (= x1566 (and (not x4192) x1309)))
(assert (x5886 x4843))
(assert (< (x6754 x516 x1484 x7371) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x5881 (x4383 0)) 0))
(assert (=> (<= x6162 10000) (= (x5346 x6162) 0)))
(assert (= x6266 (and (not x7706) x8548)))
(assert (x308 x3518))
(assert (x308 x4796))
(assert (x308 x2775))
(assert (x308 x5113))
(assert (x308 x3415))
(assert (x308 x6643))
(assert (= x3850 (x5881 (x6754 x3850 x7892 x6405))))
(assert (= (x932 (x6754 64 x1041 36)) 36))
(assert (x308 x6147))
(assert (=> (>= 10000 x6429) (= (x5346 x6429) 0)))
(assert (=> (<= x2762 10000) (= 0 (x5346 x2762))))
(assert (= (and x880 x4694) x5539))
(assert (< (x6754 x3019 x573 x5207) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x1405))
(assert (= x6545 (and x25 x1877)))
(assert (x308 x544))
(assert (= x1892 (and x7146 x5918)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x1041 36)))
(assert (x308 x7836))
(assert (x308 x5679))
(assert (x308 x3137))
(assert (=> (<= x2713 10000) (= 0 (x5346 x2713))))
(assert (= (and x2546 (not x5284)) x161))
(assert (< (x4041 x7491 x2618 x1565 x4794 x3415) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (> (x6754 64 x3082 100) 10000))
(assert (= (=> (and (= x4916 x3929) (= x793 x1641) (= x324 x7312) (= x8288 x8461)) x7144) x3746))
(assert (x2741 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x308 x1447))
(assert (x308 x6767))
(assert (x308 x3282))
(assert (= (x932 (x6754 64 x2448 4)) 4))
(assert (= (x2151 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) x4158))
(assert (x308 x461))
(assert (= x7438 (x3071 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050))))
(assert (x308 x2375))
(assert (=> (<= x1602 10000) (= 0 (x5346 x1602))))
(assert (x308 x5774))
(assert (= x6285 (and (not x2872) x2314)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)))
(assert (x308 x2107))
(assert (x308 x4009))
(assert (not (x2741 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (x308 x6079))
(assert (x308 x6360))
(assert (x308 x7167))
(assert (x308 x5199))
(assert (= x7088 (x3071 (x4041 x8305 x8444 x811 x4050 x7088))))
(assert (= (x5881 (x1300 x3019 x981 x4009 x1972)) x3019))
(assert (x308 x2129))
(assert (=> (<= x7892 10000) (= 0 (x5346 x7892))))
(assert (x308 x7725))
(assert (= (x5346 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)))
(assert (x308 x1857))
(assert (not (x2741 (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (<= x1185 64) x301 (ite (<= x1185 96) x7132 (ite (<= x1185 128) x8307 (ite (>= 160 x1185) x5117 (ite (<= x1185 192) x8181 x2835))))))))))
(assert (= (x6754 64 x7866 36) (x5346 (x6754 64 x7866 36))))
(assert (= x3692 (=> (and (= (div x5029 2) x6828) (= x6761 (x2321 1 x5029)) (= x866 (x7553 (- x6761 (mod (ite (< x106 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (< 0 x866) x497) (= x106 (ite (> x6761 0) x6828 (x2321 127 x6828))) (= x6789 (- x7303 132))) (and (=> (and (and (= (= 0 x7381) x3133) (= (x2321 1 x5029) x7381) (= (+ 32 x7303) x8261)) x497) (and (=> (and (not x3133) (and (or (and x542 (and (<= x106 32) (= (x3663 x8237) x286) (= 32 x8122))) (and (= x8122 0) (not x542))) (and (= (> x106 0) x542) (= x8237 (x5919 32 104))))) x919) (=> (and x3133 (and (= x2132 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5029)) (or (= x328 0) (= x328 32)) (= (* 32 (ite (not (= 0 x106)) 1 0)) x328) (= (+ x8261 x328) x3105))) x4417))) (=> (not x497) x618)))))
(assert (= x3191 (and (not x4108) x4540)))
(assert (x308 x3373))
(assert (x308 x6095))
(assert (x3057 x7135))
(assert (x308 x4664))
(assert (x308 x2485))
(assert (x308 x2539))
(assert (x308 x5807))
(assert (=> (>= 10000 x1011) (= 0 (x5346 x1011))))
(assert (x308 x3224))
(assert (x308 x6965))
(assert (= (and x4123 x765) x3839))
(assert (x308 x245))
(assert (=> (<= x3064 10000) (= (x5346 x3064) 0)))
(assert (x308 x601))
(assert (x308 x8205))
(assert (= (and x2513 (not x6423)) x3887))
(assert (x308 x2836))
(assert (x308 x2338))
(assert (x308 x4061))
(assert (= x1180 (and (not x5232) x6743)))
(assert (x308 x702))
(assert (x308 x5118))
(assert (x308 x5576))
(assert (x2741 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (= (and x5514 (not x81)) x6932))
(assert (x308 x3616))
(assert (= x3909 (and x4370 (not x5864))))
(assert (x308 x5518))
(assert (x3057 x7049))
(assert (x308 x2173))
(assert (=> (<= x4771 10000) (= 0 (x5346 x4771))))
(assert (x308 x869))
(assert (not (x2741 (x1300 x5086 x6071 x7368 x6250))))
(assert (x308 x8313))
(assert (= (and (not x671) x7734) x572))
(assert (x308 x4297))
(assert (x308 x4250))
(assert (x308 x6077))
(assert (x308 x5687))
(assert (= (x932 (x6292 x4982 x7273 x8186 x1537 x706 x4512)) x8186))
(assert (x3057 x8357))
(assert (=> (>= 10000 x7015) (= (x5346 x7015) 0)))
(assert (= (=> (and (= x7847 x4213) (= x1299 x5558) (= x7745 x6140) (= x8078 x5149)) x2137) x2813))
(assert (x308 x5955))
(assert (x308 x7840))
(assert (= x8074 (x932 (x6754 x1391 x2471 x8074))))
(assert (x308 x3657))
(assert (not (x2741 (x6754 x4727 x2484 x4546))))
(assert (=> (<= x7031 10000) (= 0 (x5346 x7031))))
(assert (x308 x6724))
(assert (x308 x5567))
(assert (= (=> (and (= x3612 x8240) (= x5583 x2532) (= x6888 x2202) (= x4559 x1950) (= x5932 x1034) (= x2476 x1721) (= x5775 x7086) (= x4282 x5493) (= x455 x7595) (= x1426 x6067) (= x3161 x5147) (= x3547 x3275) (= x7032 x3093)) x6484) x5049))
(assert (< 10000 (x1300 x3850 x7052 x7836 x6633)))
(assert (x308 x5789))
(assert (x308 x6554))
(assert (= (and x1163 x6144) x4540))
(assert (= x7854 x7714))
(assert (=> (>= 10000 x1029) (= 0 (x5346 x1029))))
(assert (> (x5919 x3019 x5310) 10000))
(assert (x308 x1613))
(assert (= (x5919 32 x6757) (x5346 (x5919 32 x6757))))
(assert (x3057 x5034))
(assert (x308 x4622))
(assert (= x844 (x4162 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x1615))
(assert (x308 x1794))
(assert (= (and x4396 x3841) x7482))
(assert (= x6162 (x3587 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (= x3553 (and x6886 x1922)))
(assert (=> (<= x8084 10000) (= 0 (x5346 x8084))))
(assert (= (x932 (x6754 64 x7572 6)) 6))
(assert (= x6227 (x2151 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783))))
(assert (> (x6754 64 x6966 11) 10000))
(assert (x308 x3278))
(assert (x308 x8491))
(assert (= x5369 (or x7814 x5710)))
(assert (x308 x6140))
(assert (x308 x228))
(assert (= (or (and x5424 (not x8115)) (and (not x5882) x3976)) x7768))
(assert (x308 x2423))
(assert (not (x2741 (x6754 64 x8398 6))))
(assert (= x5910 (x932 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (= x1284 (and x4599 x150)))
(assert (x308 x6042))
(assert (x308 x2808))
(assert (not (x2741 (x6754 64 x5691 3))))
(assert (x308 x3389))
(assert (x308 x2238))
(assert (x308 x3563))
(assert (x308 x2988))
(assert (= x5763 (x3587 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (x308 x1176))
(assert (x308 x3185))
(assert (= x5554 (or x2199 (and x4777 (not x8107)))))
(assert (= x967 (and x597 x8535)))
(assert (x308 x736))
(assert (x3057 x4410))
(assert (= (x3587 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600)) x6747))
(assert (x308 x4809))
(assert (= (x3587 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966)) x1246))
(assert (= (x5919 x4301 x4482) (x5346 (x5919 x4301 x4482))))
(assert (x308 x3206))
(assert (=> (>= 10000 x2471) (= (x5346 x2471) 0)))
(assert (< 10000 (x5919 x7655 x4498)))
(assert (= (x6754 64 x6756 (ite (<= x4203 32) x941 (ite (<= x4203 64) x1318 (ite (<= x4203 96) x6457 (ite (<= x4203 128) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741))))))) (x5346 (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (<= x4203 64) x1318 (ite (>= 96 x4203) x6457 (ite (<= x4203 128) x125 (ite (<= x4203 160) x5612 (ite (<= x4203 192) x5294 x6741))))))))))
(assert (x792 x416))
(assert (x308 x2976))
(assert (=> (<= x1991 10000) (= (x5346 x1991) 0)))
(assert (x308 x3632))
(assert (x308 x8518))
(assert (not (x2741 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (x308 x2312))
(assert (=> (>= 10000 x1000) (= 0 (x5346 x1000))))
(assert (= (or x6075 x6522) x3169))
(assert (= (x1459 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) x5649))
(assert (x308 x3990))
(assert (x308 x2886))
(assert (x308 x4888))
(assert (not (x2741 (x4041 x4727 x7444 x344 x2019 x3523))))
(assert (= (x1300 x4203 x29 x3306 x7648) (x5346 (x1300 x4203 x29 x3306 x7648))))
(assert (= x7350 (or x6288 x3048)))
(assert (= (x5919 32 103) (x5346 (x5919 32 103))))
(assert (= (x3071 (x6292 x7491 x844 x4507 x582 x6160 x7095)) x6160))
(assert (x308 x3081))
(assert (x308 x2730))
(assert (= x4188 (x3587 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (= x4996 (and (not x3885) x2068)))
(assert (= x4168 (x2151 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (= x2218 x8531))
(assert (= (=> (and (= x8115 (< 0 x936)) (= (x7553 (- x5066 (mod (ite (> 32 x5688) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x936) (= (- x8491 132) x7889) (= (div x6866 2) x4637) (= x5066 (x2321 1 x6866)) (= (ite (< 0 x5066) x4637 (x2321 127 x4637)) x5688)) (and (=> (not x8115) x1848) (=> (and (and (= (x2321 1 x6866) x5520) (= (= 0 x5520) x118) (= x4601 (+ 32 x8491))) x8115) (and (=> (and (and (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6866) x707) (= x2241 (+ x4403 x4601)) (= (* 32 (ite (not (= 0 x5688)) 1 0)) x4403) (or (= x4403 0) (= x4403 32))) x118) x6563) (=> (and (and (or (and (= x4260 0) (not x8137)) (and x8137 (and (>= 32 x5688) (= (x3733 x2281) x1335) (= 32 x4260)))) (and (= (x5919 32 104) x2281) (= (< 0 x5688) x8137))) (not x118)) x4353))))) x599))
(assert (x308 x4882))
(assert (=> (>= 10000 x7844) (= (x5346 x7844) 0)))
(assert (= (and x1104 x1079) x2039))
(assert (x308 x4551))
(assert (x308 x4442))
(assert (x308 x3263))
(assert (x308 x6992))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (= x5671 (or x1230 x8154)))
(assert (x308 x7341))
(assert (x308 x6245))
(assert (x308 x2172))
(assert (= (x5881 (x6754 x4982 x8366 x1336)) x4982))
(assert (x308 x4788))
(assert (= (=> (= (= x6088 0) x510) (and (=> (and x510 (and (= x7111 x386) (= x7171 x4505) (= false x7480) (= 2 x1038) (= x2651 0) (= true x8447) (= x5940 x8013) (= x3531 x2442))) x561) (=> (and (not x510) (and (= x7987 x5558) (= x1088 x7745) (= x3644 x5149) (= x5646 x4213))) x2813))) x7674))
(assert (x308 x4480))
(assert (x308 x971))
(assert (x308 x4252))
(assert (= (x3587 (x6292 x4801 x7411 x4782 x1324 x2659 x1983)) x1983))
(assert (x5886 x8455))
(assert (x308 x168))
(assert (x3057 x343))
(assert (x5886 x6229))
(assert (= (and x1216 x7677) x4536))
(assert (x308 x8013))
(assert (x308 x6170))
(assert (x308 x7549))
(assert (x308 x2454))
(assert (= (or x8123 x3180) x4468))
(assert (x308 x6902))
(assert (x308 x418))
(assert (= (x4162 (x6292 x1391 x7138 x7296 x1932 x3069 x8182)) x7138))
(assert (x308 x5413))
(assert (x308 x6577))
(assert (> (x5919 x4301 x4482) 10000))
(assert (= x8047 (x4162 (x6292 x352 x8047 x418 x8424 x2868 x7699))))
(assert (= x2809 (x4162 (x6754 x8305 x2809 x4963))))
(assert (x308 x2093))
(assert (x308 x8080))
(assert (x308 x7599))
(assert (x308 x4917))
(assert (x308 x3179))
(assert (< (x4041 x352 x6999 x653 x1979 x5899) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 0 (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (< 10000 (x6754 64 x5615 36)))
(assert (= x8203 (and x170 x7940)))
(assert (= x7298 (and x998 x6049)))
(assert (x3057 x4843))
(assert (= (x5346 (x6754 64 x1041 6)) (x6754 64 x1041 6)))
(assert (= (=> (and (or x6024 (not x6024)) (= x6024 (= 0 x4758))) x6192) x7751))
(assert (x308 x2211))
(assert (< (x6754 64 x5372 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x358))
(assert (x2741 3812630263))
(assert (x308 x4149))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x5691 3)))
(assert (x308 x5920))
(assert (= x8205 (x4162 (x6754 x1185 x8205 x7758))))
(assert (x308 x2541))
(assert (= x1941 (=> (and (or (and x4332 (and (and (= (x5967 x5503) x4233) (= (< 32 x136) x4769)) (or (and (and (or (and (and (and (= (x8120 (+ 64 x5503)) x6986) (= x5790 (x8120 (+ 64 x139))) (= (< 96 x136) x1664) (= x6263 (x5255 x6986))) (or (not x1664) (and x1664 (and (= (x8120 (+ 96 x139)) x6353) (<= x136 128) (= x4210 (x8120 (+ x5503 96))) (= (x6336 x4210) x3328))))) x765) (not x765)) (and (= (x2387 x1039) x335) (= x7908 (x8120 (+ x139 32))) (= (x8120 (+ x5503 32)) x1039) (= (< 64 x136) x765))) x4769) (not x4769)))) (not x4332)) (and (= (x8120 (+ 64 x2220)) x7716) (= (x750 x2220) x5205) (= x5858 (x750 x1997)) (= x8084 (x750 x339)) (= (x750 x3799) x5910) (= (x8120 (+ x2220 160)) x7942) (= x4329 (x6754 64 x7251 (ite (>= 32 x2135) x75 (ite (<= x2135 64) x809 (ite (>= 96 x2135) x1233 (ite (<= x2135 128) x8345 (ite (<= x2135 160) x1769 (ite (>= 192 x2135) x5904 x332)))))))) (= x5375 (x750 x1492)) (= (x750 x2220) x4788) (= x8098 (x750 x1958)) (= x258 (x8120 (+ 32 x2220))) (= (x8120 (+ 128 x2220)) x436) (= x3875 (x750 x2220)) (= (x750 x524) x8099) (= (x750 x2220) x6412) (= x4280 (x6754 x4838 x6412 x7245)) (= (x750 x5891) x377) (= x75 (x5919 x2135 x2271)) (= x7245 (x750 x1073)) (= (x750 x2220) x7149) (= (x8120 (+ 128 x2220)) x8207) (= (x8120 (+ 64 x2220)) x339) (= (x8120 (+ 96 x2220)) x6172) (= x3983 (x750 x6476)) (= (x750 x8495) x4487) (= x411 (x750 x7632)) (= x2 (x8120 (+ x2541 x2220))) (= x6909 (x8120 (+ 64 x2220))) (= (x750 x7630) x6495) (= x8194 (x750 x5706)) (= (x8120 (+ x2220 128)) x8299) (= x1073 (x8120 (+ x2220 32))) (= x2195 (x750 x1628)) (= x6129 (x750 x2220)) (= (x4383 0) x1047) (= x6039 (x750 x1478)) (= x5663 (x8120 (+ x2220 64))) (= x6476 (x8120 (+ x2220 32))) (= x1958 (x8120 (+ x2220 32))) (= (x8120 (+ x2220 96)) x8495) (= x5904 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411)) (= (x4041 x4838 x4788 x6549 x5334 x6859) x7848) (= (x750 x4107) x6859) (= x402 (x8120 (+ 32 x2220))) (= x6549 (x750 x3625)) (= (x8120 (+ x2 32)) x1882) (= x7438 (x750 x1667)) (= (x8120 (+ x7942 32)) x139) (= x1667 (x8120 (+ 96 x2220))) (= (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198) x332) (= (x7553 (- x1882 x2220)) x2135) (= x4838 (- x2135 32)) (= (x4041 x2135 x2713 x3983 x8194 x2844) x8345) (= x5334 (x750 x7716)) (= x3630 (x8120 (+ x2220 64))) (= (x750 x6909) x3284) (= (x8120 (+ x2220 64)) x7067) (= (x750 x2100) x2273) (= x2587 (x750 x1112)) (= x8171 (x750 x2220)) (= (x750 x436) x53) (= (x750 x4975) x6072) (= x7689 (x750 x6172)) (= (x750 x4824) x7198) (= x3799 (x8120 (+ x2220 32))) (= x4332 (> x136 0)) (= (x8120 (+ x2220 x2541)) x2564) (= (x750 x2220) x4778) (= x2271 (x750 x2220)) (= x2684 (x750 x2220)) (= x4582 (x750 x258)) (= x1492 (x8120 (+ 32 x2220))) (= x3715 (x750 x1684)) (= x2003 (x750 x7067)) (= x1478 (x8120 (+ x2220 32))) (= x7387 (x5919 x4838 x7149)) (<= x2135 224) (= x540 (x750 x8299)) (= x1769 (x6292 x2135 x1295 x6039 x2766 x7689 x8433)) (= x8433 (x750 x8207)) (= (x8120 (+ 32 x2220)) x7630) (= x1233 (x1300 x2135 x5205 x5858 x2587)) (= (x750 x2220) x244) (= x4107 (x8120 (+ x2220 96))) (= x1295 (x750 x2220)) (= x478 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)) (= x1684 (x8120 (+ x2220 96))) (= (x750 x2220) x2713) (<= 32 x2135) (= (x750 x3923) x2844) (= x6315 (x1300 x4838 x3875 x4582 x5553)) (= (ite (= x4838 0) x1047 (ite (>= 32 x4838) x7387 (ite (<= x4838 64) x4280 (ite (<= x4838 96) x6315 (ite (>= 128 x4838) x7848 (ite (>= 160 x4838) x5074 x478)))))) x8346) (= (x8120 (+ x2220 64)) x2933) (= (x8120 (+ 96 x2220)) x3923) (= (x8120 (+ 64 x2220)) x1112) (= x1628 (x8120 (+ x2220 96))) (= x5320 (x750 x5663)) (= (x750 x5240) x3050) (= x5553 (x750 x2933)) (= (x750 x3630) x2766) (= (x8120 (+ 128 x2220)) x2100) (= x136 (x371 x7811)) (= (x8120 (+ x2220 160)) x5240) (= x5891 (x8120 (+ 160 x2220))) (= x4824 (x8120 (+ 192 x2220))) (= x5074 (x6292 x4838 x8171 x5375 x8084 x4487 x540)) (= x3625 (x8120 (+ x2220 32))) (= (x8120 (+ x2220 128)) x4975) (= (x8120 (+ 160 x2220)) x7632) (= x1997 (x8120 (+ 32 x2220))) (= x5706 (x8120 (+ 64 x2220))) (= x809 (x6754 x2135 x6129 x8099)) (= x524 (x8120 (+ x2220 32))))) x5125)))
(assert (x308 x3064))
(assert (x308 x866))
(assert (x308 x676))
(assert (x308 x4758))
(assert (= (x3071 (x4041 x1198 x3242 x8275 x7224 x8162)) x8162))
(assert (x308 x4814))
(assert (=> (<= x2684 10000) (= (x5346 x2684) 0)))
(assert (= 7 (x932 (x6754 64 x206 7))))
(assert (= x3304 (and x5514 x81)))
(assert (= 36 (x932 (x6754 64 x5615 36))))
(assert (x308 x5707))
(assert (x2569 x7781))
(assert (= (x5881 (x6754 64 x5615 36)) 64))
(assert (= (x932 (x6754 x4203 x6076 x7017)) x7017))
(assert (x308 x3125))
(assert (= x5726 (and x2650 x2974)))
(assert (x308 x8366))
(assert (=> (>= 10000 x5113) (= (x5346 x5113) 0)))
(assert (x308 x3320))
(assert (=> (>= 10000 x7017) (= (x5346 x7017) 0)))
(assert (= (x5881 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)) x1391))
(assert (= x3567 (and (not x6161) x5608)))
(assert (= (and x3323 x2744) x5897))
(assert (= (and x8314 x6937) x1415))
(assert (= (and x8115 x5424) x4696))
(assert (= (or x1606 x4650 x549) x4677))
(assert (x308 x1541))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x2135 x2713 x3983 x8194 x2844)))
(assert (x308 x2319))
(assert (= (x932 (x6292 x7491 x844 x4507 x582 x6160 x7095)) x4507))
(assert (x308 x7611))
(assert (x308 x6040))
(assert (x308 x6086))
(assert (x308 x8444))
(assert (=> (>= 10000 x859) (= (x5346 x859) 0)))
(assert (=> (<= x4009 10000) (= (x5346 x4009) 0)))
(assert (x308 x3188))
(assert (> (x6754 x4727 x2484 x4546) 10000))
(assert (= (and (not x2840) x6712) x2358))
(assert (x308 x4705))
(assert (x308 x4863))
(assert (x308 x2295))
(assert (x308 x1369))
(assert (= x6039 (x932 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (= 11 (x932 (x6754 64 x551 11))))
(assert (= x6694 (and x779 x2810)))
(assert (= (and x161 (not x425)) x25))
(assert (=> (>= 10000 x4158) (= (x5346 x4158) 0)))
(assert (< 10000 (x6292 x4982 x7273 x8186 x1537 x706 x4512)))
(assert (= x5114 (=> (= (+ 292 x4305) x5093) x7045)))
(assert (< (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x1300 x4727 x3458 x596 x714))))
(assert (= 64 (x5881 (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (>= 64 x2135) x809 (ite (<= x2135 96) x1233 (ite (>= 128 x2135) x8345 (ite (>= 160 x2135) x1769 (ite (>= 192 x2135) x5904 x332))))))))))
(assert (= (and (not x2786) x5634) x3079))
(assert (x308 x2694))
(assert (x308 x6910))
(assert (x308 x1214))
(assert (= (and x7402 x5083) x7237))
(assert (= x3937 (or x5977 x3)))
(assert (x308 x5636))
(assert (x308 x3371))
(assert (= x1374 x5423))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x5426 0)))
(assert (= (x4162 (x6754 64 x993 36)) x993))
(assert (= (and x205 (not x3864)) x260))
(assert (= x3726 (and (not x4787) x817)))
(assert (x308 x3927))
(assert (= (and x5446 (not x2675)) x2461))
(assert (x308 x2011))
(assert (x308 x6440))
(assert (=> (>= 10000 x6679) (= (x5346 x6679) 0)))
(assert (= x144 (x4162 (x4041 x1185 x144 x3889 x2914 x2129))))
(assert (= x7477 (and x6339 x8242)))
(assert (x308 x2740))
(assert (= x6209 (x4162 (x5919 x5494 x6209))))
(assert (not (x2741 (x4383 0))))
(assert (x308 x3713))
(assert (x308 x1130))
(assert (= x5310 (x4162 (x5919 x3019 x5310))))
(assert (= (x5881 (x1300 x4301 x3939 x5461 x4272)) x4301))
(assert (x5602 x4114))
(assert (= x743 (x5843 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743))))
(assert (=> (>= 10000 x7438) (= 0 (x5346 x7438))))
(assert (=> (>= 10000 x7938) (= 0 (x5346 x7938))))
(assert (x308 x2576))
(assert (= (and x4240 (not x1559)) x2515))
(assert (= (and (not x4120) x5146) x4485))
(assert (= (or x1080 x3191) x4746))
(assert (x308 x5481))
(assert (= (and (not x8523) x3308) x3795))
(assert (not (x2741 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (= (and x4826 x6317) x1629))
(assert (x308 x8532))
(assert (x308 x7056))
(assert (not (x2741 (x6754 64 x2253 10))))
(assert (=> (>= 10000 x387) (= 0 (x5346 x387))))
(assert (x308 x7534))
(assert (= (and x282 (not x4094)) x6532))
(assert (= x6591 (and x1117 x4342)))
(assert (= x3633 (and x4831 x2895)))
(assert (= x6943 (x4162 (x6754 x7655 x6943 x4201))))
(assert (x308 x4505))
(assert (= (x5881 (x6754 64 x676 36)) 64))
(assert (x308 x5249))
(assert (x308 x5580))
(assert (= (x5346 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)) (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)))
(assert (= (and (not x2143) x3113) x7984))
(assert (x308 x4709))
(assert (< 10000 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)))
(assert (=> (>= 10000 x4794) (= 0 (x5346 x4794))))
(assert (= x6773 (and x8204 (not x2252))))
(assert (x308 x2105))
(assert (not (x2741 (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (>= 64 x4203) x1318 (ite (<= x4203 96) x6457 (ite (>= 128 x4203) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741))))))))))
(assert (=> (>= 10000 x1098) (= 0 (x5346 x1098))))
(assert (x308 x8363))
(assert (x308 x8297))
(assert (x308 x2253))
(assert (> (x1300 x5086 x6071 x7368 x6250) 10000))
(assert (x308 x1748))
(assert (> (x1300 x3019 x981 x4009 x1972) 10000))
(assert (= x183 (and (not x1514) x8541)))
(assert (x308 x1484))
(assert (x308 x4881))
(assert (not (x2741 (x5919 32 x6410))))
(assert (x308 x4998))
(assert (x308 x1411))
(assert (= x352 (x5881 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593))))
(assert (x308 x2968))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x4327 12)))
(assert (x792 x6758))
(assert (= x656 (and x5283 (not x2108))))
(assert (> (x5919 x1198 x3379) 10000))
(assert (= x4203 (x5881 (x1300 x4203 x29 x3306 x7648))))
(assert (= (or x529 x7835 x6181 x7603) x6885))
(assert (x308 x7756))
(assert (> (x6754 64 x2448 3) 10000))
(assert (x308 x6378))
(assert (x308 x3490))
(assert (= x6242 (or x6266 x4536 x8479 x6220)))
(assert (= x5370 (and x1936 x3909)))
(assert (x3057 x1778))
(assert (x308 x1242))
(assert (= x2821 (x3071 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967))))
(assert (x308 x8284))
(assert (x308 x8127))
(assert (x308 x3492))
(assert (= (x4162 (x1300 x4301 x3939 x5461 x4272)) x3939))
(assert (= (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743) (x5346 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743))))
(assert (= x4408 (and (not x1953) x8004)))
(assert (= 0 (x5346 38584857114614344130707641774870441135179346817440091772946614992565446901760)))
(assert (=> (>= 10000 x2792) (= 0 (x5346 x2792))))
(assert (=> (<= x6747 10000) (= 0 (x5346 x6747))))
(assert (x308 x1370))
(assert (=> (<= x4481 10000) (= (x5346 x4481) 0)))
(assert (x308 x4292))
(assert (x308 x4379))
(assert (x308 x8510))
(assert (x308 x1036))
(assert (= (and x5864 x4370) x2975))
(assert (< 10000 (x6754 64 x3303 12)))
(assert (x308 x5630))
(assert (x3057 x1523))
(assert (= x1416 (and (not x3788) x2282)))
(assert (=> (>= 10000 x1725) (= 0 (x5346 x1725))))
(assert (x308 x7411))
(assert (x308 x7309))
(assert (= (x5881 (x6754 64 x5372 1)) 64))
(assert (=> (<= x5082 10000) (= (x5346 x5082) 0)))
(assert (= 36 (x932 (x6754 64 x6230 36))))
(assert (=> (<= x1447 10000) (= 0 (x5346 x1447))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1185 x3977 x6373 x133)))
(assert (x308 x4212))
(assert (< (x5919 x4301 x4482) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x766))
(assert (x308 x149))
(assert (=> (<= x4982 10000) (= (x5346 x4982) 0)))
(assert (x308 x3200))
(assert (x2741 1341992515))
(assert (=> (<= x6501 10000) (= (x5346 x6501) 0)))
(assert (x308 x6076))
(assert (x308 x3581))
(assert (x308 x83))
(assert (> (x6754 64 x2762 100) 10000))
(assert (x308 x6389))
(assert (< 10000 (x6754 64 x6898 36)))
(assert (= (or x5211 x2722) x6317))
(assert (x308 x5570))
(assert (= x779 (and x598 x1623)))
(assert (x308 x1569))
(assert (= (and (not x6512) x3266) x372))
(assert (x792 x1275))
(assert (not (x2741 (x6754 64 x7470 36))))
(assert (=> (>= 10000 x1336) (= (x5346 x1336) 0)))
(assert (=> (<= x3832 10000) (= (x5346 x3832) 0)))
(assert (= (x5346 (+ x4247 1)) (x5346 x4247)))
(assert (x308 x7556))
(assert (x308 x7046))
(assert (x308 x551))
(assert (= (x4162 (x6754 64 x2448 3)) x2448))
(assert (= x2703 (=> (and (= x2651 0) (= false x6341) (= x7111 x386) (= x5940 x8013) (= x3531 x2442) (= 36 x7171) (= x3791 true) (= x4453 2)) x561)))
(assert (= x6788 (or x1403 x4922)))
(assert (= (x5881 (x1300 x5086 x6071 x7368 x6250)) x5086))
(assert (= x4081 (and x6674 (not x7346))))
(assert (= (and x1023 x5823) x8526))
(assert (x308 x6091))
(assert (x308 x1749))
(assert (=> (>= 10000 x204) (= (x5346 x204) 0)))
(assert (= (x932 (x6754 64 x2762 100)) 100))
(assert (x308 x5459))
(assert (x308 x7225))
(assert (= x6487 (and (not x5216) x4699)))
(assert (= x6732 (and x8239 (not x1906))))
(assert (< (x6754 64 x3739 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6683))
(assert (=> (<= x966 10000) (= 0 (x5346 x966))))
(assert (=> (>= 10000 x2116) (= 0 (x5346 x2116))))
(assert (x308 x4031))
(assert (x308 x6613))
(assert (x308 x352))
(assert (x308 x261))
(assert (= x3480 (=> (and (= x4102 x3547) (= x455 x7341) (= x1012 x4282) (= x5583 x4948) (= x6515 x5147) (= x1950 x5073) (= x1721 x114) (= x7666 x2202) (= x6067 x6278) (= x5932 x2492) (= x8180 x3612) (= x8504 x7032) (= x6402 x7086)) x5049)))
(assert (= (x932 (x6754 64 x5691 7)) 7))
(assert (x308 x7776))
(assert (= (x5346 (x5919 x3019 x5310)) (x5919 x3019 x5310)))
(assert (= (or x5593 x2301 x3677 x5736 x1493) x2068))
(assert (= x7329 (and (not x2117) x4990)))
(assert (= x1265 (x5843 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (x308 x3888))
(assert (x308 x8562))
(assert (= (x932 (x4041 x7051 x7748 x1747 x7938 x3085)) x1747))
(assert (= (x5346 (x4041 x4301 x7294 x5415 x3796 x1901)) (x4041 x4301 x7294 x5415 x3796 x1901)))
(assert (= x7734 (and x7634 (not x6968))))
(assert (= (x5346 74700126319118050543342327103397598470879858733489597287354029460387927162880) 0))
(assert (= (and x6482 x3592) x5417))
(assert (x308 x3944))
(assert (x308 x1135))
(assert (> (x6754 x4203 x6076 x7017) 10000))
(assert (=> (>= 10000 x3461) (= 0 (x5346 x3461))))
(assert (x308 x4721))
(assert (x308 x7689))
(assert (=> (<= x2738 10000) (= 0 (x5346 x2738))))
(assert (x308 x1584))
(assert (= (or (and (not x7754) x5998) x1131) x790))
(assert (x3057 x4114))
(assert (x308 x2442))
(assert (= (and x3574 x2897) x4952))
(assert (=> (>= 10000 x5349) (= 0 (x5346 x5349))))
(assert (x308 x6328))
(assert (x308 x1001))
(assert (< 10000 (x6754 64 x4252 (ite (>= 32 x4801) x141 (ite (>= 64 x4801) x6060 (ite (<= x4801 96) x1044 (ite (>= 128 x4801) x3825 (ite (>= 160 x4801) x8076 (ite (>= 192 x4801) x3253 x4761)))))))))
(assert (x308 x964))
(assert (= (and x1827 (not x648)) x5183))
(assert (= (and x2298 (not x7232)) x252))
(assert (= x2171 (=> (and (or (and (and (= x2869 x1143) (= x5433 x1404) (= x3934 x824) (= x7736 x1063) (= x632 x1713) (= x3355 x123) (= x8085 x7123) (= x999 x2120) (= x1591 x6216) (= x5137 x2907) (= x5580 x6205) (= x3880 x1008) (= x5707 x8051) (= x6807 x3564)) (not x5788)) (and x5788 (and (= x7736 x1063) (>= x1626 0) (= x6205 x5580) (= x3564 x6807) (= x3798 x1626) (= x999 x2120) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5598 x4661)) (= x8085 x7123) (= x8051 x5707) (= (x2550 x7762) x2145) (= x2608 (- x2145 x5598)) (= x1713 x632) (= x3880 x1008) (= x5598 (ite (= 0 x2869) x5110 0)) (= x2907 x5137) (= x123 x3355) (= x2869 x1143) (= x4661 (x7711 x5372)) (= x5433 x1404) (= x824 x3934) (= x6216 x1591) (<= x1626 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x5598 x4661) x1626)))) (= x5788 (= x2869 0))) x3747)))
(assert (x308 x6134))
(assert (= x5900 (and x3586 x7533)))
(assert (=> (>= 10000 x4582) (= 0 (x5346 x4582))))
(assert (= (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562) (x5346 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562))))
(assert (x308 x8261))
(assert (x308 x6681))
(assert (x3057 x2870))
(assert (= (and x2570 (not x1653)) x4650))
(assert (x308 x2949))
(assert (= x5169 (x3071 (x4041 x1391 x6781 x3736 x3616 x5169))))
(assert (= (x4162 (x5919 32 103)) 103))
(assert (x308 x6419))
(assert (< (x6292 x4838 x8171 x5375 x8084 x4487 x540) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3069 10000) (= 0 (x5346 x3069))))
(assert (x308 x7758))
(assert (=> (<= x6039 10000) (= 0 (x5346 x6039))))
(assert (x308 x7223))
(assert (x308 x534))
(assert (x308 x2448))
(assert (x3057 x5639))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x1198 x3346 x5783)))
(assert (= x7831 (and x7565 (not x3108))))
(assert (x308 x379))
(assert (= (x5346 (x6754 64 x4757 2)) (x6754 64 x4757 2)))
(assert (< 10000 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429)))
(assert (=> (<= x4613 10000) (= (x5346 x4613) 0)))
(assert (x308 x7697))
(assert (x308 x4239))
(assert (x308 x6896))
(assert (x308 x4207))
(assert (= x8284 (x932 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (=> (<= x7977 10000) (= (x5346 x7977) 0)))
(assert (=> (<= x593 10000) (= 0 (x5346 x593))))
(assert (x308 x7133))
(assert (x308 x650))
(assert (x5602 x5711))
(assert (x308 x4204))
(assert (x308 x5053))
(assert (= (x4162 (x6754 64 x7866 36)) x7866))
(assert (=> (>= 10000 x268) (= (x5346 x268) 0)))
(assert (= (or x4306 x8338 x1878) x3778))
(assert (= (=> (and (= x7662 true) (= 0 x8501) (= x305 false)) x5308) x2615))
(assert (= (x4162 (x6754 64 x6966 11)) x6966))
(assert (x308 x1887))
(assert (x308 x5204))
(assert (x308 x4304))
(assert (=> (<= x631 10000) (= 0 (x5346 x631))))
(assert (x5602 x8347))
(assert (= (or x3513 x5607) x8082))
(assert (= (and x2715 x3773) x4692))
(assert (x308 x2586))
(assert (=> (<= x126 10000) (= 0 (x5346 x126))))
(assert (= (x5346 (x6754 64 x5372 1)) (x6754 64 x5372 1)))
(assert (x308 x143))
(assert (= x7359 (and x4337 x2773)))
(assert (=> (<= x1901 10000) (= (x5346 x1901) 0)))
(assert (= x7540 (and x8052 x2588)))
(assert (x308 x6927))
(assert (=> (>= 10000 x4101) (= (x5346 x4101) 0)))
(assert (x308 x1529))
(assert (x308 x6129))
(assert (x308 x6027))
(assert (x308 x4343))
(assert (x308 x8402))
(assert (= x381 (x2151 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (= (x2151 (x4041 x4203 x3492 x6286 x1991 x7015)) x1991))
(assert (=> (>= 10000 x6303) (= (x5346 x6303) 0)))
(assert (x308 x224))
(assert (x308 x7785))
(assert (x308 x355))
(assert (x308 x5861))
(assert (x308 x6633))
(assert (= (=> (= (= x1137 0) x4686) (and (=> (and (and (= x4916 x918) (= x8461 x1822) (= x793 x4255) (= x7312 x1316)) (not x4686)) x3746) (=> (and (and (= x7111 x386) (= 0 x2651) (= x2442 x3531) (= false x1250) (= true x6955) (= x5940 x8013) (= x7171 x6705) (= x6947 2)) x4686) x561))) x6404))
(assert (x308 x5024))
(assert (= 0 (x5346 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x308 x222))
(assert (x308 x5353))
(assert (= x4312 (x4162 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (not x8489))
(assert (x3057 x416))
(assert (x308 x7303))
(assert (x308 x1895))
(assert (x5602 x4637))
(assert (x308 x2705))
(assert (x308 x4606))
(assert (x308 x6281))
(assert (x308 x1881))
(assert (= x676 (x4162 (x6754 64 x676 36))))
(assert (x308 x7953))
(assert (= (x932 (x6292 x4203 x2643 x5854 x1971 x1016 x518)) x5854))
(assert (= (x2151 (x1300 x4801 x781 x5176 x1674)) x1674))
(assert (= (=> (= x3356 (= 0 x2990)) (and (=> (and (not x3356) (= x7538 (< x588 32))) (and (=> (and (not x7538) (and (= x5479 (> x3247 3)) (<= x3247 255) (= (x3146 x7340) x3247) (= (x2663 160) x1011) (= x7340 (x6754 64 x1011 11)))) (and (=> (and (not x5479) (= x5505 (= x3247 0))) (and (=> (and (and (= x2952 (x6754 64 x1011 11)) (= (+ x2136 1) x8088) (= x3750 x8336) (= x166 x5667) (= x103 false) (= x7404 x5473) (= false x6123) (= x2248 x103) (= false x7719) (= x2549 false) (= (+ x2952 1) x2136) (= 1 x2168) (= x2767 (x6754 64 x2253 10))) x5505) x6804) (=> (and (and (= x8336 x2201) (= x5079 x5473) (= x7856 x5667)) (not x5505)) x8198))) (=> (and x5479 (and (= x5079 x5473) (= x7856 x5667) (= x8336 x2201))) x8198))) (=> (and (and (= x8336 x2201) (= x7856 x5667) (= x5079 x5473)) x7538) x8198))) (=> (and x3356 (and (= x5667 x7856) (= x5079 x5473) (= x2201 x8336))) x8198))) x5000))
(assert (x308 x2038))
(assert (x308 x1434))
(assert (= (or x4081 x5659) x2772))
(assert (=> (<= x5938 10000) (= 0 (x5346 x5938))))
(assert (not (x2741 (x5919 x7491 x5167))))
(assert (= (x6754 x4982 x8366 x1336) (x5346 (x6754 x4982 x8366 x1336))))
(assert (= x677 (x4162 (x5919 x1391 x677))))
(assert (x308 x7160))
(assert (= (and x4445 (not x5505)) x3921))
(assert (x3057 x6668))
(assert (= x5388 (=> (= (= 0 x6283) x7604) (and (=> (and (and (= true x1363) (= false x806) (= x2001 x5332)) x7604) x5059) (=> (and (not x7604) (= (< x2001 64) x7073)) (and (=> (and x7073 (and (= x7818 true) (= x5332 0) (= x709 false))) x5059) (=> (and (and (= (ite (> x1507 0) x6721 (x2321 127 x6721)) x5257) (= (+ 1 x3186) x4113) (= (x7553 (- x1507 (mod (ite (> 32 x5257) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x7464) (= 354 x7690) (= x1648 (x4077 x3497)) (= x3497 (+ 2 x7233)) (= (> x7464 0) x3784) (= x6414 (x6754 64 x6287 3)) (= (x6754 64 x6966 11) x1666) (= x1507 (x2321 1 x343)) (= x6721 (div x343 2)) (= x3851 450) (= (x4931 322) x6260) (= (x6754 64 x6966 11) x3186) (= (x507 x4113) x1575) (= 0 x1600) (= (x6754 64 x6966 11) x7233) (= (x2804 x6414) x343) (= (x4931 290) x1598)) (not x7073)) (and (=> (and (and (= x3782 (div (+ 31 x5257) 32)) (= x5212 (* 32 x3782)) (= (+ x5212 548) x7247) (= x2997 (= x5257 0))) x3784) (and (=> (and (= x6977 (< 31 x5257)) (not x2997)) (and (=> (and (not x6977) (and (= x1128 (div x971 256)) (= (* x1128 256) x3557) (= (x2804 x6414) x971))) x4047) (=> (and (and (and (= x2676 (x2259 x8384)) (= (< 580 x5378) x5454) (= x8384 (x5919 32 x6414)) (= (+ x5257 548) x5378) (= (+ 1 x8384) x509)) (or (not x5454) (and x5454 (and (= x6027 (x2259 x509)) (>= 612 x5378) (>= x5378 548))))) x6977) x3503))) (=> x2997 x4047))) (=> (and (not x3784) (and (= x892 false) (= 36 x5332) (= x7930 true))) x5059)))))))))
(assert (not (x2741 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (= (x5346 3521034783) 0))
(assert (= x3519 (x3587 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743))))
(assert (x308 x2380))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x4727 x3458 x596 x714)))
(assert (x308 x4023))
(assert (x308 x8377))
(assert (x308 x8401))
(assert (< (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (<= x1185 64) x301 (ite (>= 96 x1185) x7132 (ite (>= 128 x1185) x8307 (ite (>= 160 x1185) x5117 (ite (>= 192 x1185) x8181 x2835))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4162 (x6754 x3850 x7892 x6405)) x7892))
(assert (x308 x3923))
(assert (x308 x1174))
(assert (not (x2741 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783))))
(assert (= x6165 (or x1095 x7587)))
(assert (x308 x3860))
(assert (x308 x6411))
(assert (x308 x1065))
(assert (= (=> (and (= x7533 (= 0 x1798)) (or (and (and (= x7025 x538) (= x1564 x1798) (= x2845 x8276) (= x3477 x93) (= x2567 x6411) (= x871 x1003) (= x4212 x6566) (= x3496 x409) (= x3621 x2998) (= x1858 x1852) (= x8562 x1368) (= x767 x8434) (= x5178 x939) (= x5785 x4354)) (not x7533)) (and x7533 (and (= x409 x3496) (= (x5108 x5372) x1268) (= x4212 x6566) (= x7887 x4374) (= (x6811 x5051) x1449) (= x4354 x5785) (= x6411 x2567) (= (- x1449 x224) x470) (= x2998 x3621) (= x767 x8434) (= (+ x1268 x224) x7887) (= x3477 x93) (= x2845 x8276) (= x1798 x1564) (= x8562 x1368) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1268 x224)) (= x224 (ite (= x1798 0) x612 0)) (= x1003 x871) (<= x7887 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7025 x538) (= x1858 x1852) (= x5178 x939) (>= x7887 0))))) x4144) x3601))
(assert (x308 x235))
(assert (=> (<= x2844 10000) (= 0 (x5346 x2844))))
(assert (x308 x5296))
(assert (= (and x3488 x1238) x5246))
(assert (=> (<= x47 10000) (= 0 (x5346 x47))))
(assert (> (x6292 x3019 x4312 x4101 x3816 x5001 x1691) 10000))
(assert (= (x2151 (x1300 x4727 x3458 x596 x714)) x714))
(assert (x308 x4823))
(assert (= (x3071 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429)) x3550))
(assert (x308 x8308))
(assert (= x5814 (x932 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602))))
(assert (x308 x6949))
(assert (= (x5346 (x6754 x4727 x2484 x4546)) (x6754 x4727 x2484 x4546)))
(assert (x308 x1336))
(assert (= (and x665 (not x7314)) x6240))
(assert (x5886 x891))
(assert (= (or x4817 x1133) x4342))
(assert (x308 x3142))
(assert (x308 x7644))
(assert (=> (>= 10000 x8130) (= (x5346 x8130) 0)))
(assert (= (or x7191 x1629 x7780) x597))
(assert (x308 x7463))
(assert (x308 x7301))
(assert (x308 x1562))
(assert (< (x6754 64 1 x1293) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3205))
(assert (x308 x2294))
(assert (= x4013 (and x1800 x8538)))
(assert (x308 x4452))
(assert (x308 x5971))
(assert (= (and x1394 x7867) x6813))
(assert (= x3234 (and x5283 x2108)))
(assert (x308 x2693))
(assert (x308 x3683))
(assert (x308 x7813))
(assert (x308 x2683))
(assert (x308 x8426))
(assert (x308 x6007))
(assert (= (x932 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743)) x7756))
(assert (x308 x1041))
(assert (x308 x4912))
(assert (x308 x2924))
(assert (= (x2151 (x4041 x5494 x7249 x5828 x4400 x2630)) x4400))
(assert (x308 x5079))
(assert (= x6075 (or x3229 x6413)))
(assert (x3057 x5711))
(assert (< 10000 (x5919 x7051 x4164)))
(assert (= x4389 (and x6937 (not x8314))))
(assert (x308 x695))
(assert (= (or x3479 x660) x3155))
(assert (not (x2741 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (x2741 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (x308 x7296))
(assert (= x5424 (or x8295 x595)))
(assert (= x1833 (and x186 x7350)))
(assert (=> (<= x1082 10000) (= 0 (x5346 x1082))))
(assert (x308 x6416))
(assert (= x2323 (x4162 (x6754 64 x2323 36))))
(assert (=> (<= x7470 10000) (= 0 (x5346 x7470))))
(assert (x308 x8341))
(assert (x308 x55))
(assert (= (=> (= x4527 (= x5382 0)) (and (=> (and (not x4527) (and (= x1034 x5762) (= x2326 x3275) (= x4320 x2532) (= x7595 x2563) (= x4559 x6877) (= x3611 x3093) (= x2949 x6888) (= x5493 x3147) (= x5775 x5811) (= x1068 x2476) (= x3161 x7679) (= x8397 x1426) (= x4710 x8240))) x6484) (=> (and (and (= x4250 x5263) (= x3597 x2620) (= x309 x3173) (= x959 x8060) (= false x6929) (= x2759 x4025) (= x5029 x2833) (= x4441 true) (= x1418 0) (= x7023 x644) (= x5341 x6668) (= x4579 x2426) (= x3661 x4183) (= x4216 x4957) (= x8532 x7905) (= x2731 x2448) (= 2 x1164)) x4527) x6447))) x6448))
(assert (= (or x6377 x7920) x6221))
(assert (x308 x5277))
(assert (= (and x6822 x5410) x1670))
(assert (x308 x2731))
(assert (not (x2741 (x4041 x7491 x2618 x1565 x4794 x3415))))
(assert (=> (>= 10000 x2652) (= 0 (x5346 x2652))))
(assert (x308 x3583))
(assert (x308 x3086))
(assert (x308 x3980))
(assert (x308 x1611))
(assert (x308 x3416))
(assert (x308 x6118))
(assert (x308 x7104))
(assert (= (x5881 (x6754 64 x5996 36)) 64))
(assert (= (x5919 x2135 x2271) (x5346 (x5919 x2135 x2271))))
(assert (x308 x673))
(assert (= (x3587 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x164))
(assert (x308 x7374))
(assert (x308 x6427))
(assert (x308 x6566))
(assert (x308 x6215))
(assert (= (x4162 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)) x244))
(assert (= x4369 (and x558 x3684)))
(assert (x308 x5889))
(assert (= (x5346 (x6754 64 x8532 36)) (x6754 64 x8532 36)))
(assert (x308 x2618))
(assert (x308 x1603))
(assert (x308 x6072))
(assert (x308 x99))
(assert (= 0 (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x308 x3675))
(assert (x2569 x601))
(assert (x308 x6036))
(assert (x308 x5238))
(assert (= x2971 (and x88 x7563)))
(assert (= (x4162 (x6754 64 x7463 100)) x7463))
(assert (= 64 (x5881 (x6754 64 x4252 (ite (>= 32 x4801) x141 (ite (>= 64 x4801) x6060 (ite (<= x4801 96) x1044 (ite (>= 128 x4801) x3825 (ite (>= 160 x4801) x8076 (ite (<= x4801 192) x3253 x4761))))))))))
(assert (x308 x7142))
(assert (< (x6754 64 x5996 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2730) (= (x5346 x2730) 0)))
(assert (= x3418 (and x525 (not x6018))))
(assert (x308 x3947))
(assert (= (x5346 (x1300 x3850 x7052 x7836 x6633)) (x1300 x3850 x7052 x7836 x6633)))
(assert (x308 x5895))
(assert (not (x2741 (x6754 x4203 x6076 x7017))))
(assert (= (x1459 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198)) x7198))
(assert (not (x2741 (x6754 64 x1041 2))))
(assert (x308 x3409))
(assert (= (or (and x3922 x6640) (and x7658 x2522)) x7742))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x308 x6928))
(assert (= x6049 (and x4237 x3238)))
(assert (x2741 50226347614966974677930900640024090345938424853691168920094736542366852710400))
(assert (x308 x1824))
(assert (x308 x5502))
(assert (x308 x1958))
(assert (x308 x4179))
(assert (x308 x2481))
(assert (x308 x2160))
(assert (= x7812 (and (not x2600) x2408)))
(assert (x308 x8000))
(assert (= x2273 (x3587 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (=> (<= x7936 10000) (= 0 (x5346 x7936))))
(assert (= x2830 (x932 (x4041 x4982 x31 x2830 x5306 x2456))))
(assert (x308 x1856))
(assert (x308 x1426))
(assert (x308 x1474))
(assert (=> (>= 10000 x3523) (= (x5346 x3523) 0)))
(assert (= x7375 (and x7320 x2092)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x4252 (ite (<= x4801 32) x141 (ite (>= 64 x4801) x6060 (ite (>= 96 x4801) x1044 (ite (>= 128 x4801) x3825 (ite (>= 160 x4801) x8076 (ite (<= x4801 192) x3253 x4761)))))))))
(assert (=> (<= x1910 10000) (= (x5346 x1910) 0)))
(assert (x308 x5200))
(assert (x308 x374))
(assert (=> (>= 10000 x1681) (= (x5346 x1681) 0)))
(assert (x308 x3046))
(assert (not (x2741 (x4041 x7051 x7748 x1747 x7938 x3085))))
(assert (not (x2741 (x6754 64 x1041 6))))
(assert (=> (<= x4322 10000) (= 0 (x5346 x4322))))
(assert (= (x4162 (x1300 x7655 x6392 x4048 x6185)) x6392))
(assert (x308 x3275))
(assert (< 10000 (x6754 64 x8532 36)))
(assert (= x5600 (x5843 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600))))
(assert (x308 x4855))
(assert (= x1893 (=> (and (and (= x4484 (x7553 (- x4082 x837))) (= x4082 (x8120 (+ x7098 x7392))) (= (x8120 (+ x1359 31)) x1771) (= (x8120 (+ 32 x4082)) x4800) (= (x8120 (+ 32 x6917)) x7516) (= x6621 (x8120 (+ x7516 32))) (= x7392 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1771)) (= (> x8355 0) x1800) (= (x3556 x131) x8355) (= (x8120 (+ x7098 x1359)) x4965)) (or (not x1800) (and x1800 (and (and (= (< 32 x8355) x60) (= (x5289 x3660) x5482)) (or (not x60) (and x60 (and (or (not x4393) (and x4393 (and (or (not x7964) (and x7964 (and (= (x8120 (+ 96 x4800)) x4154) (>= 128 x8355) (= (x8120 (+ x3660 96)) x5787) (= (x7903 x5787) x5518)))) (and (= x7964 (> x8355 96)) (= (x8120 (+ x4800 64)) x6356) (= (x8120 (+ 64 x3660)) x2837) (= (x8031 x2837) x2328))))) (and (= x1036 (x8120 (+ x3660 32))) (= x4393 (< 64 x8355)) (= x6348 (x3255 x1036)) (= (x8120 (+ x4800 32)) x3009))))))))) x6689)))
(assert (x308 x2431))
(assert (x308 x6493))
(assert (x308 x1071))
(assert (= x8305 (x5881 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (= (x6292 x7491 x844 x4507 x582 x6160 x7095) (x5346 (x6292 x7491 x844 x4507 x582 x6160 x7095))))
(assert (x308 x3559))
(assert (x308 x1610))
(assert (= (and x1835 x4639) x4764))
(assert (x308 x6828))
(assert (= x554 (and x3208 x155)))
(assert (= (x5843 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) x277))
(assert (= x3461 (x3071 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038))))
(assert (x308 x928))
(assert (x308 x1342))
(assert (x308 x8007))
(assert (= (or x731 x7208 x3491) x8436))
(assert (= (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198) (x5346 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (x308 x2405))
(assert (= (or x4311 x6374) x4385))
(assert (x308 x4271))
(assert (=> (<= x6091 10000) (= 0 (x5346 x6091))))
(assert (> (x6754 64 x6894 11) 10000))
(assert (x308 x6483))
(assert (=> (>= 10000 x2587) (= (x5346 x2587) 0)))
(assert (= (x5346 107317874183463056701504662589741776198067464202343767264461527615735374807040) 0))
(assert (=> (<= x7108 10000) (= (x5346 x7108) 0)))
(assert (x3057 x4637))
(assert (> (x1300 x8305 x7028 x1718 x1000) 10000))
(assert (x308 x4202))
(assert (x308 x5664))
(assert (x308 x6737))
(assert (x308 x7220))
(assert (= (or x4928 x1843) x5998))
(assert (not (x2741 (x6292 x1198 x8188 x2116 x5208 x7624 x827))))
(assert (= (x5346 3957931183) 0))
(assert (= x1854 (and x510 x6228)))
(assert (x5886 x3856))
(assert (x308 x7621))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x308 x1481))
(assert (= (x5346 (x6754 64 x2836 36)) (x6754 64 x2836 36)))
(assert (x308 x4661))
(assert (x308 x1496))
(assert (x308 x3924))
(assert (x308 x7316))
(assert (x308 x7811))
(assert (x308 x6348))
(assert (= (x5881 (x5919 x4838 x7149)) x4838))
(assert (= x2135 (x5881 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (x308 x1582))
(assert (= x7536 (=> (and (= 0 x4319) (= false x6893) (= x229 true)) x651)))
(assert (x308 x7946))
(assert (= (or (and x46 x4852) (and x6285 x4033)) x7941))
(assert (= (x3587 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x7628))
(assert (x308 x7054))
(assert (= (and x1179 x8116) x6181))
(assert (x308 x8324))
(assert (x308 x5324))
(assert (x308 x1158))
(assert (x308 x1098))
(assert (= (and (not x7537) x1609) x3745))
(assert (x308 x475))
(assert (x308 x5119))
(assert (= (or x6954 x3446 x883 x8526 x647) x8544))
(assert (x308 x7694))
(assert (x308 x3452))
(assert (= (and x4346 x2878) x525))
(assert (x308 x3209))
(assert (x308 x7609))
(assert (= x593 (x5843 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593))))
(assert (x308 x307))
(assert (x308 x5715))
(assert (x308 x1839))
(assert (= x6104 (and (not x1385) x3804)))
(assert (= (x932 (x6754 64 x5082 6)) 6))
(assert (= x7681 (=> (and (= x2642 true) (= x4958 0) (= false x729)) x6628)))
(assert (= 0 (x932 (x6754 64 x5426 0))))
(assert (x308 x1700))
(assert (x2307 x601))
(assert (x308 x3173))
(assert (x5886 x2552))
(assert (x308 x2531))
(assert (= x516 (x5881 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (x308 x1344))
(assert (= x665 (and (not x1563) x1445)))
(assert (x308 x2116))
(assert (=> (>= 10000 x5375) (= 0 (x5346 x5375))))
(assert (x308 x1137))
(assert (=> (<= x5724 10000) (= 0 (x5346 x5724))))
(assert (not (x2741 (x6754 64 x6230 36))))
(assert (x308 x101))
(assert (x308 x2216))
(assert (x308 x3476))
(assert (x308 x1503))
(assert (= x4301 (x5881 (x6292 x4301 x3767 x6440 x7374 x1969 x3086))))
(assert (x308 x6205))
(assert (x308 x3277))
(assert (x308 x824))
(assert (= (x5346 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)) (x6292 x4727 x3776 x7451 x6604 x2761 x2213)))
(assert (x308 x6666))
(assert (= 0 (x5346 4294967295)))
(assert (x308 x1005))
(assert (x308 x3806))
(assert (= (x932 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x4070))
(assert (x308 x6781))
(assert (< (x1300 x516 x3067 x6100 x728) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x1954))
(assert (< 10000 (x6754 64 x5691 7)))
(assert (= (x932 (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783)) x8438))
(assert (x308 x7158))
(assert (= x3735 (x932 (x6292 x8305 x4409 x3735 x4724 x5489 x7293))))
(assert (= x2713 (x4162 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (= (and (not x8248) x3577) x2883))
(assert (= (x6754 64 x5372 2) (x5346 (x6754 64 x5372 2))))
(assert (not (x2741 (x6754 x1198 x3346 x5783))))
(assert (x308 x5835))
(assert (x308 x7353))
(assert (= (x5346 34591783479076665078880830389440322436311164112910831269305739813291000201216) 0))
(assert (x308 x1203))
(assert (=> (>= 10000 x4929) (= (x5346 x4929) 0)))
(assert (= (x3587 (x6292 x4838 x8171 x5375 x8084 x4487 x540)) x540))
(assert (x308 x3520))
(assert (< 10000 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)))
(assert (x308 x2575))
(assert (x308 x1788))
(assert (= x2536 (and x1817 (not x556))))
(assert (x308 x6538))
(assert (= x5765 (and x6547 (not x5668))))
(assert (= x3631 (and x7635 x5670)))
(assert (= (and x7700 (not x2367)) x7603))
(assert (= (x5346 (+ x7517 1)) (x5346 x7517)))
(assert (=> (<= x7628 10000) (= 0 (x5346 x7628))))
(assert (= (x6754 64 x6230 36) (x5346 (x6754 64 x6230 36))))
(assert (x308 x275))
(assert (x308 x1189))
(assert (x308 x8276))
(assert (< (x6754 64 x993 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x6754 x7655 x6943 x4201))))
(assert (> (x6754 64 x1041 6) 10000))
(assert (x308 x5445))
(assert (x308 x2001))
(assert (x308 x4135))
(assert (= 2 (x932 (x6754 64 x1041 2))))
(assert (= (or (and x7503 x2318) x3953 x6725 x66 x7214 x1504 (and x282 x4094)) x7551))
(assert (x308 x447))
(assert (=> (<= x3835 10000) (= (x5346 x3835) 0)))
(assert (= (and (not x4490) x279) x857))
(assert (= x458 (x5843 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458))))
(assert (x308 x5212))
(assert (x308 x6648))
(assert (x308 x4800))
(assert (= x2402 (and x8235 x6221)))
(assert (x308 x1891))
(assert (x308 x5913))
(assert (x308 x7302))
(assert (x308 x1994))
(assert (= 64 (x5881 (x6754 64 x6966 11))))
(assert (= x5195 (x5843 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (x308 x7885))
(assert (< (x1300 x1391 x380 x5080 x487) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7961))
(assert (= (or x2174 x1162) x8547))
(assert (x308 x5969))
(assert (= x1298 (x4162 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349))))
(assert (x308 x5016))
(assert (x308 x4559))
(assert (x308 x4593))
(assert (x308 x8))
(assert (x308 x4877))
(assert (x308 x166))
(assert (x308 x889))
(assert (x308 x1671))
(assert (= (and x7483 x4905) x7651))
(assert (x308 x8194))
(assert (= x4582 (x932 (x1300 x4838 x3875 x4582 x5553))))
(assert (= (x1300 x7051 x5930 x6429 x3683) (x5346 (x1300 x7051 x5930 x6429 x3683))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x8305 x7028 x1718 x1000)))
(assert (x308 x3249))
(assert (x3057 x1612))
(assert (x308 x3723))
(assert (x308 x3981))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x5494 x7249 x5828 x4400 x2630)))
(assert (x308 x1398))
(assert (= (or (and x4468 (not x5510)) x5498) x5283))
(assert (=> (<= x6483 10000) (= 0 (x5346 x6483))))
(assert (x308 x1074))
(assert (= (x1300 x2135 x5205 x5858 x2587) (x5346 (x1300 x2135 x5205 x5858 x2587))))
(assert (x308 x5695))
(assert (x792 x3954))
(assert (x308 x4374))
(assert (not (x2741 (x4041 x8305 x8444 x811 x4050 x7088))))
(assert (x3057 x6279))
(assert (=> (<= x6678 10000) (= 0 (x5346 x6678))))
(assert (= (and x346 (not x8403)) x3765))
(assert (x308 x7418))
(assert (x308 x3519))
(assert (= (x5346 (x6754 64 x7133 12)) (x6754 64 x7133 12)))
(assert (x308 x5724))
(assert (= x6086 (x932 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (= (and x3243 (not x3432)) x4599))
(assert (= (or x3942 x4485 x3155) x6675))
(assert (=> (<= x7253 10000) (= 0 (x5346 x7253))))
(assert (x308 x3872))
(assert (= (and x6535 x3539) x1209))
(assert (= (x4162 (x6754 64 x2762 100)) x2762))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)))
(assert (x308 x7910))
(assert (= x441 (or x3052 x5084)))
(assert (x308 x5584))
(assert (= (and x7351 (not x4522)) x6860))
(assert (x308 x4719))
(assert (x308 x8099))
(assert (x308 x7130))
(assert (= (x4162 (x1300 x4801 x781 x5176 x1674)) x781))
(assert (= (and x6521 x1415) x4584))
(assert (x308 x7944))
(assert (= (or x7789 x6616 x7161) x6717))
(assert (= (x5346 (+ 1 x8017)) (x5346 x8017)))
(assert (=> (>= 10000 x7294) (= 0 (x5346 x7294))))
(assert (not (x2741 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (= (and x4692 (not x3250)) x8480))
(assert (x308 x1804))
(assert (x308 x7135))
(assert (x308 x5857))
(assert (x308 x5072))
(assert (= (x5881 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195)) x4727))
(assert (= x8134 (and (not x2308) x2203)))
(assert (x308 x5064))
(assert (x308 x2725))
(assert (x308 x5632))
(assert (= (or x3961 x6397) x6047))
(assert (x3057 x6378))
(assert (< (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3537))
(assert (=> (>= 10000 x7052) (= 0 (x5346 x7052))))
(assert (=> (<= x1302 10000) (= 0 (x5346 x1302))))
(assert (=> (<= x2302 10000) (= (x5346 x2302) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x206 7)))
(assert (x308 x975))
(assert (not (x2741 (x6292 x352 x8047 x418 x8424 x2868 x7699))))
(assert (< 10000 (x1300 x1185 x3977 x6373 x133)))
(assert (=> (>= 10000 x7273) (= (x5346 x7273) 0)))
(assert (=> (<= x2484 10000) (= (x5346 x2484) 0)))
(assert (x308 x3870))
(assert (not (x2741 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602))))
(assert (= (x5346 (+ 1 x6107)) (x5346 x6107)))
(assert (x308 x3876))
(assert (x308 x6056))
(assert (< (x4041 x1391 x6781 x3736 x3616 x5169) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x4727 x7444 x344 x2019 x3523)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2323 36)))
(assert (x308 x8173))
(assert (not (x2741 (x6754 64 x5358 36))))
(assert (< (x4041 x7655 x6068 x7455 x134 x1096) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2122))
(assert (= x8305 (x5881 (x6754 x8305 x2809 x4963))))
(assert (x308 x4386))
(assert (= x5996 (x4162 (x6754 64 x5996 36))))
(assert (x308 x3610))
(assert (x308 x4794))
(assert (x308 x6454))
(assert (= (and x5085 x7962) x3339))
(assert (x308 x2153))
(assert (= x6925 (x3071 (x4041 x516 x2133 x1302 x1004 x6925))))
(assert (x308 x5963))
(assert (= (x932 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)) x6303))
(assert (=> (>= 10000 x344) (= (x5346 x344) 0)))
(assert (x308 x4051))
(assert (= (and x1732 (not x7284)) x2234))
(assert (= x203 (x3071 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (x3057 x6866))
(assert (x308 x7448))
(assert (= (x5881 (x1300 x1198 x268 x4771 x1098)) x1198))
(assert (x308 x7067))
(assert (= (x4162 (x6292 x1198 x8188 x2116 x5208 x7624 x827)) x8188))
(assert (= x3085 (x3071 (x4041 x7051 x7748 x1747 x7938 x3085))))
(assert (= x1035 (or (and (not x1240) x5571) (and x1930 (not x636)) (and (not x8235) x6221) (and x8258 (not x7583)))))
(assert (x308 x8430))
(assert (= (x932 (x6754 64 x5739 (ite (<= x4301 32) x553 (ite (<= x4301 64) x3366 (ite (<= x4301 96) x6432 (ite (<= x4301 128) x4345 (ite (>= 160 x4301) x4093 (ite (<= x4301 192) x539 x3309)))))))) (ite (<= x4301 32) x553 (ite (>= 64 x4301) x3366 (ite (<= x4301 96) x6432 (ite (>= 128 x4301) x4345 (ite (<= x4301 160) x4093 (ite (>= 192 x4301) x539 x3309))))))))
(assert (x308 x1352))
(assert (=> (>= 10000 x377) (= (x5346 x377) 0)))
(assert (x308 x2036))
(assert (=> (<= x3086 10000) (= (x5346 x3086) 0)))
(assert (x2741 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (=> (<= x3019 10000) (= 0 (x5346 x3019))))
(assert (x308 x2393))
(assert (x308 x5147))
(assert (= x8450 (or x4746 x2192)))
(assert (= x2570 (and x6672 (not x7759))))
(assert (x308 x3034))
(assert (= (x932 (x6754 64 x8398 6)) 6))
(assert (= (x6754 64 x2375 2) (x5346 (x6754 64 x2375 2))))
(assert (x308 x1955))
(assert (= x1817 (and x241 x4810)))
(assert (x308 x1413))
(assert (x792 x1074))
(assert (= (x3071 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x7253))
(assert (x3057 x6324))
(assert (=> (>= 10000 x3549) (= 0 (x5346 x3549))))
(assert (x308 x7352))
(assert (x308 x4183))
(assert (= (and x118 x4696) x5351))
(assert (not (x2741 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (x308 x1667))
(assert (x308 x1781))
(assert (x308 x4961))
(assert (= x53 (x3587 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050))))
(assert (> (x6754 64 x4327 12) 10000))
(assert (x308 x1391))
(assert (x308 x4693))
(assert (x308 x3975))
(assert (not (x2741 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562))))
(assert (x308 x5374))
(assert (=> (<= x2432 10000) (= 0 (x5346 x2432))))
(assert (=> (>= 10000 x3981) (= 0 (x5346 x3981))))
(assert (x308 x2088))
(assert (= x7559 (or x8141 x4996)))
(assert (=> (>= 10000 x4242) (= (x5346 x4242) 0)))
(assert (x308 x594))
(assert (= x8101 (or x1490 x4085)))
(assert (x308 x78))
(assert (= x7444 (x4162 (x4041 x4727 x7444 x344 x2019 x3523))))
(assert (= (and x6285 (not x4033)) x6588))
(assert (not (x2741 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (x308 x7143))
(assert (x308 x7659))
(assert (x308 x8300))
(assert (= x4370 (or (and (not x8361) x7559) x5292)))
(assert (x308 x690))
(assert (x308 x6101))
(assert (x308 x1097))
(assert (= (x5346 (x6292 x4982 x7273 x8186 x1537 x706 x4512)) (x6292 x4982 x7273 x8186 x1537 x706 x4512)))
(assert (= (x932 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)) x7997))
(assert (= (x6754 64 x3125 12) (x5346 (x6754 64 x3125 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2448 5)))
(assert (x308 x7744))
(assert (=> (<= x261 10000) (= 0 (x5346 x261))))
(assert (= (x5346 (x6754 x1198 x3346 x5783)) (x6754 x1198 x3346 x5783)))
(assert (=> (<= x6859 10000) (= 0 (x5346 x6859))))
(assert (not (x2741 (x1300 x7491 x4344 x2851 x1075))))
(assert (x308 x1317))
(assert (x308 x1194))
(assert (=> (>= 10000 x7491) (= (x5346 x7491) 0)))
(assert (= (and x6398 x2402) x610))
(assert (= (or x8294 x3042) x1437))
(assert (x308 x4958))
(assert (x308 x1672))
(assert (=> (>= 10000 x8275) (= 0 (x5346 x8275))))
(assert (= x7835 (and x5692 x5897)))
(assert (x308 x5073))
(assert (= x7655 (x5881 (x4041 x7655 x6068 x7455 x134 x1096))))
(assert (x308 x1225))
(assert (= (x5346 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)) (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)))
(assert (x308 x7883))
(assert (> (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420) 10000))
(assert (=> (>= 10000 x2232) (= 0 (x5346 x2232))))
(assert (=> (<= x7961 10000) (= 0 (x5346 x7961))))
(assert (x308 x5574))
(assert (x308 x1601))
(assert (x308 x2120))
(assert (= x6985 (x2151 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (= (and x5718 x3937) x6030))
(assert (x3057 x8451))
(assert (x308 x1188))
(assert (=> (>= 10000 x7699) (= (x5346 x7699) 0)))
(assert (= x1278 (and x2817 x4629)))
(assert (> (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602) 10000))
(assert (x308 x6700))
(assert (= (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493) (x5346 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (x308 x3963))
(assert (x308 x1944))
(assert (= x7789 (and x8101 x3421)))
(assert (x308 x8130))
(assert (x3057 x22))
(assert (= x596 (x932 (x1300 x4727 x3458 x596 x714))))
(assert (x3057 x8551))
(assert (x308 x4945))
(assert (> (x5919 32 x2853) 10000))
(assert (= x3251 (or x531 x6530 x2039)))
(assert (x308 x7322))
(assert (= 0 (x5346 35477284059277649309253622239531857712935939529143554018288893216769000107873)))
(assert (not (x2741 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593))))
(assert (= (and x4939 (not x1818)) x2577))
(assert (= (=> (and (= x7661 true) (= false x3568) (= 0 x1110)) x5851) x4578))
(assert (=> (<= x4201 10000) (= (x5346 x4201) 0)))
(assert (x308 x4732))
(assert (x308 x2732))
(assert (x308 x8397))
(assert (x308 x8122))
(assert (= (x5919 x1198 x3379) (x5346 (x5919 x1198 x3379))))
(assert (not (x2741 (x1300 x4203 x29 x3306 x7648))))
(assert (= (and (not x2650) x2974) x3042))
(assert (= (x5346 29244376827073035548771643948814531551534385112760475998805679327281764368384) 0))
(assert (x308 x1717))
(assert (x308 x2472))
(assert (= x8038 x6906))
(assert (x308 x134))
(assert (x308 x5841))
(assert (= (x4162 (x5919 x4727 x7961)) x7961))
(assert (x308 x5981))
(assert (x308 x5178))
(assert (= (and x5511 (not x5479)) x4445))
(assert (> (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195) 10000))
(assert (= (and x3488 (not x1238)) x731))
(assert (= (x5346 (x4041 x3850 x177 x7031 x7991 x4266)) (x4041 x3850 x177 x7031 x7991 x4266)))
(assert (> (x6754 x3019 x573 x5207) 10000))
(assert (x308 x7332))
(assert (x308 x7893))
(assert (x308 x1045))
(assert (x2741 2770781680))
(assert (x308 x7858))
(assert (x308 x7902))
(assert (x308 x1840))
(assert (= x7920 (or x4198 x2982)))
(assert (=> (>= 10000 x6781) (= 0 (x5346 x6781))))
(assert (x308 x4822))
(assert (x308 x8306))
(assert (=> (>= 10000 x6100) (= 0 (x5346 x6100))))
(assert (x308 x3230))
(assert (x308 x6766))
(assert (x308 x876))
(assert (x308 x914))
(assert (x308 x3867))
(assert (=> (>= 10000 x898) (= 0 (x5346 x898))))
(assert (x308 x7171))
(assert (= (x4162 (x1300 x1198 x268 x4771 x1098)) x268))
(assert (not (x2741 (x3933 x4203 x7160 x6253 x5467 x3461 x1082 x2038))))
(assert (x308 x5622))
(assert (x308 x7399))
(assert (= (x1300 x4982 x3441 x1676 x4732) (x5346 (x1300 x4982 x3441 x1676 x4732))))
(assert (= x1537 (x2151 (x6292 x4982 x7273 x8186 x1537 x706 x4512))))
(assert (x308 x3708))
(assert (x308 x5631))
(assert (x308 x8015))
(assert (x308 x5899))
(assert (= x5565 (and (not x7494) x3195)))
(assert (x308 x187))
(assert (= x2648 (and (not x3964) x3348)))
(assert (= x7955 (and (not x2206) x3744)))
(assert (x308 x7960))
(assert (= x4497 x7875))
(assert (= (x4162 (x5919 x8305 x6208)) x6208))
(assert (= (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (>= 64 x1185) x301 (ite (>= 96 x1185) x7132 (ite (<= x1185 128) x8307 (ite (<= x1185 160) x5117 (ite (<= x1185 192) x8181 x2835))))))) (x5346 (x6754 64 x4252 (ite (<= x1185 32) x5946 (ite (<= x1185 64) x301 (ite (<= x1185 96) x7132 (ite (>= 128 x1185) x8307 (ite (<= x1185 160) x5117 (ite (>= 192 x1185) x8181 x2835))))))))))
(assert (x308 x5646))
(assert (= (x5346 1722637450) 0))
(assert (x308 x3798))
(assert (x308 x1992))
(assert (= x575 (=> (and (= x6203 x644) (= 0 x5656) (= x5029 x2770) (= x5953 x4025) (= x1360 x6668) (= x4216 x1196) (= x3597 x4892) (= x2228 x4183) (= x2426 x2384) (= x8060 x5115) (= 2 x7178) (= x3173 x4969) (= x2448 x5696) (= x8532 x4818) (= x5263 x8042)) x8420)))
(assert (not (x2741 (x6754 x1185 x8205 x7758))))
(assert (x308 x1553))
(assert (x308 x5442))
(assert (x308 x2870))
(assert (= x6287 (x4162 (x6754 64 x6287 4))))
(assert (x308 x3647))
(assert (x308 x268))
(assert (x308 x5440))
(assert (= (and (not x6322) x4677) x2803))
(assert (x308 x5165))
(assert (= (and x3762 x4039) x4148))
(assert (x308 x6957))
(assert (= (x4162 (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (<= x4203 64) x1318 (ite (<= x4203 96) x6457 (ite (<= x4203 128) x125 (ite (>= 160 x4203) x5612 (ite (>= 192 x4203) x5294 x6741)))))))) x6756))
(assert (= (and x7955 (not x1673)) x6674))
(assert (x308 x5215))
(assert (= x7051 (x5881 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (= x4732 (x2151 (x1300 x4982 x3441 x1676 x4732))))
(assert (x308 x31))
(assert (x308 x4461))
(assert (= (and x8440 x3385) x7308))
(assert (= x6340 (=> (and (= x8107 (= x8463 0)) (or x8107 (not x8107))) x396)))
(assert (= (and x8541 x1514) x8108))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x5739 (ite (>= 32 x4301) x553 (ite (<= x4301 64) x3366 (ite (>= 96 x4301) x6432 (ite (<= x4301 128) x4345 (ite (<= x4301 160) x4093 (ite (<= x4301 192) x539 x3309)))))))))
(assert (x308 x5461))
(assert (=> (<= x8099 10000) (= 0 (x5346 x8099))))
(assert (=> (<= x4400 10000) (= (x5346 x4400) 0)))
(assert (x308 x347))
(assert (x308 x3247))
(assert (= x2670 (and x542 x6734)))
(assert (= x4394 (or x6169 x7504)))
(assert (= (x932 (x6754 64 x993 36)) 36))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198)))
(assert (x308 x13))
(assert (=> (>= 10000 x2153) (= (x5346 x2153) 0)))
(assert (x5602 x8428))
(assert (x308 x6971))
(assert (= x6479 (and x5152 x2646)))
(assert (> (x6754 x4801 x2232 x5324) 10000))
(assert (x308 x3391))
(assert (= 64 (x5881 (x6754 64 x2253 10))))
(assert (x308 x1202))
(assert (= (x6754 64 x4343 3) (x5346 (x6754 64 x4343 3))))
(assert (= x8291 (and x2478 x36)))
(assert (=> (<= x5854 10000) (= 0 (x5346 x5854))))
(assert (x308 x2094))
(assert (x308 x3999))
(assert (x308 x6677))
(assert (=> (<= x6281 10000) (= 0 (x5346 x6281))))
(assert (x308 x257))
(assert (= x3052 (and x3133 x8375)))
(assert (= (x5346 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)))
(assert (x308 x1093))
(assert (x308 x4975))
(assert (x2741 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (x308 x3083))
(assert (x308 x3141))
(assert (=> (<= x551 10000) (= (x5346 x551) 0)))
(assert (x308 x6186))
(assert (x792 x6213))
(assert (x308 x3696))
(assert (> (x6292 x1198 x8188 x2116 x5208 x7624 x827) 10000))
(assert (x308 x7830))
(assert (= x1461 (and x2714 (not x2901))))
(assert (= x4575 (and x3887 (not x2465))))
(assert (= (x2151 (x6292 x7655 x2538 x2738 x696 x7977 x7973)) x696))
(assert (x308 x1747))
(assert (= x7515 (and x4007 (not x3184))))
(assert (x5602 x5331))
(assert (x308 x3611))
(assert (= x266 (and x977 (not x8208))))
(assert (> (x6754 64 x7463 100) 10000))
(assert (x308 x6235))
(assert (= (x5346 (x1300 x7655 x6392 x4048 x6185)) (x1300 x7655 x6392 x4048 x6185)))
(assert (> (x6754 64 x6421 11) 10000))
(assert (= x3114 (and x2404 x2883)))
(assert (= x1725 (x3587 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700))))
(assert (x308 x8446))
(assert (= x8038 (=> (and (= (x3737 x347) x6304) (= x6322 (= 0 x6304))) (and (=> (and x6322 (and (= (x8120 (+ 32 x7479)) x960) (= false x3823) (= x1235 132) (= x5053 (x8120 (+ x960 32))) (= (x8120 (+ x5053 32)) x5895) (= true x5138) (= (x8120 (+ 4 x1480)) x7479))) x4392) (=> (and (not x6322) (and (= x7257 (x708 x3427)) (= x3427 (x6754 64 x2448 5)) (= x8173 (x8265 x6036)) (= x1581 (> x8173 (ite (= x7257 0) 10000 x7257))))) (and (=> (and x1581 (and (= false x2428) (= (x8120 (+ 4 x1480)) x4287) (= x1992 (x8120 (+ x4287 32))) (= x4246 true) (= x1235 100) (= (x8120 (+ 32 x1992)) x1207))) x4392) (=> (and (and (= x4204 (x8120 (+ x1301 x8006))) (= x2552 (x8120 (+ 31 x5832))) (= (x8120 (+ x5829 192)) x3100) (= (x8219 x7762) x3330) (= (x8120 (+ 31 x4071)) x8451) (= x1859 (x8120 (+ 32 x3667))) (= x1730 (x8120 (+ 31 x2529))) (= x8006 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8451)) (= x2457 (x7553 (- x2589 x1480))) (= x2163 (x8120 (+ 32 x3334))) (= (x8120 (+ x2163 32)) x5120) (= x2589 (x8120 (+ x3316 x6627))) (= x2435 (x7553 (- x6921 x5829))) (= (x8120 (+ x6036 32)) x6147) (= (x6138 x3667) x2529) (= (x8120 (+ x5856 x4805)) x6921) (= x4008 (= x3330 0)) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2552) x4805) (= x1301 (x8120 (+ x3100 32))) (= (x8120 (+ x4204 32)) x5856) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1730) x6627) (= (x7553 (- x4204 x5829)) x5860) (= x2855 (x8120 (+ 32 x6555))) (= (x8120 (+ 4 x1480)) x5829) (= x4071 (x3737 x347)) (= (x8265 x6036) x5832) (= x3334 (x8120 (+ 32 x5829))) (= x3316 (x8120 (+ 32 x6921))) (= (x8120 (+ 32 x5120)) x6555)) (not x1581)) (and (=> (and (and (= x1303 (and x7244 x3167)) (= x2528 (x1948 x7762)) (= (x1948 x5372) x6190) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5110 x2528)) x3167) (= x7244 (<= x5110 x6190))) (not x4008)) (and (=> (and x1303 (and (= x7562 192) (= x7643 x2448) (= x5806 (x8219 x2730)) (= x2435 x7439) (= x4871 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (x6338 x7762) x1625) (= 0 x2183) (= (= x4071 (x3469 196)) x6746) (< (+ x5110 x1625) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 127 x8549) (= x5372 x1452) (= x7646 false) (= x5575 (- x670 x5110)) (= (x1948 x5372) x670) (<= 0 x6527) (= x1954 x2457) (>= x2457 420) (= x1358 x5860) (= x6527 x3608) (= 3313512704 x4458) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1954 4)) (and (> 192 (- x1954 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1954 4))))) x1761) x6746 (>= 127 x8549) (= x6527 (+ x5110 x1625)) (>= x1954 420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6527) (<= 1 x5806) (= x3365 false))) (and (=> x1761 x8531) (=> (and (= x1442 true) (not x1761)) (and (=> (not x1442) x8531) (=> (and x1442 (= (and (> x1954 227) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1954))) x6572)) (and (=> (not x6572) x2218) (=> (and x6572 (and (= (< 18446744073709551615 x2638) x4438) (= (x1803 196) x2638))) (and (=> x4438 x2954) (=> (and (and (= x5813 (> x4755 x1954)) (= (x8120 (+ x2638 228)) x4755)) (not x4438)) (and (=> x5813 x4095) (=> (and (not x5813) (= x3271 (< 18446744073709551615 x5860))) (and (=> (and (and (= x6004 (x8120 (+ 31 x322))) (= (x8120 (+ x5860 4)) x322) (= (or (and (<= x1954 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x6004 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x6004 x1954) (= (<= x6004 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1954)))) x3930)) (not x3271)) (and (=> (not x3930) x2218) (=> (and x3930 (and (= (> x3754 18446744073709551615) x2342) (= (x1803 x322) x3754))) (and (=> x2342 x2954) (=> (and (not x2342) (and (= (x8120 (+ x322 32)) x7881) (= (> x5175 x1954) x8454) (= (x8120 (+ x7881 x3754)) x5175))) (and (=> (and (= x1819 (> x2435 18446744073709551615)) (not x8454)) (and (=> (and (and (= x307 (x8120 (+ 4 x2435))) (= x5819 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1954) (> x1326 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1954 x1326) (= (<= x1954 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1326))))) (= x1326 (x8120 (+ x307 31)))) (not x1819)) (and (=> (and x5819 (and (= (> x5350 18446744073709551615) x7794) (= (x1803 x307) x5350))) (and (=> x7794 x2954) (=> (and (not x7794) (and (= x3270 (x8120 (+ x6681 x5350))) (= (x8120 (+ 32 x307)) x6681) (= (< x1954 x3270) x933))) (and (=> x933 x4095) (=> (and (and (= x159 x1404) (= x2869 1) (= x7762 x8085) (= x1591 x42) (= x6364 x3880) (= x123 x6001) (= x824 x7858) (= x999 x1851) (= x5707 x3828) (= x5543 x3564) (= x1713 x1033) (= x1063 x3106) (= x5580 x5213) (= x1413 x2907)) (not x933)) x2171))))) (=> (not x5819) x2218))) (=> x1819 x8531))) (=> x8454 x4095))))))) (=> x3271 x8531))))))))))))) (=> (and (and (= x6364 x1008) (= x8051 x3828) (= x1033 x632) (= 0 x1143) (= x7736 x3106) (= x6216 x42) (= x6807 x5543) (= x7858 x3934) (= x159 x5433) (= x3355 x6001) (= x5213 x6205) (= x7762 x7123) (= x2120 x1851) (= x5137 x1413)) (not x1303)) x3747))) (=> (and (and (= true x1618) (= x1235 0) (= x4867 false)) x4008) x4392)))))))))
(assert (x308 x2640))
(assert (not (x2741 (x6754 64 x6287 4))))
(assert (x308 x7201))
(assert (x308 x6392))
(assert (=> (<= x1351 10000) (= (x5346 x1351) 0)))
(assert (= (x6754 64 x6108 6) (x5346 (x6754 64 x6108 6))))
(assert (= (and x597 (not x8535)) x6288))
(assert (< 10000 (x6754 x5494 x555 x6037)))
(assert (= (x3071 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)) x3199))
(assert (=> (<= x2630 10000) (= 0 (x5346 x2630))))
(assert (x308 x446))
(assert (= x6029 (x4162 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (= (and (not x3192) x8436) x6806))
(assert (=> (<= x2581 10000) (= (x5346 x2581) 0)))
(assert (= (=> (and (= x2990 x2651) (= x2442 x5473) (= x7111 x8336) (= x5940 x5667) (= x7171 x588)) x2170) x561))
(assert (= (or x7118 x1833 x7055) x6228))
(assert (= (x4162 (x4041 x5494 x7249 x5828 x4400 x2630)) x7249))
(assert (=> (>= 10000 x3263) (= 0 (x5346 x3263))))
(assert (= 64 (x5881 (x6754 64 x3125 12))))
(assert (=> (<= x8186 10000) (= (x5346 x8186) 0)))
(assert (x308 x136))
(assert (= (x5881 (x5919 32 x1959)) 32))
(assert (x308 x918))
(assert (< (x6754 64 x6894 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x1412))
(assert (x308 x7892))
(assert (= (and x8472 (not x6714)) x4853))
(assert (x308 x7049))
(assert (= x6352 x5870))
(assert (x308 x7664))
(assert (x308 x5169))
(assert (not (x2741 (x5919 x5086 x8457))))
(assert (x308 x6908))
(assert (not (x2741 (x6292 x4301 x3767 x6440 x7374 x1969 x3086))))
(assert (= x4301 (x5881 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835))))
(assert (x308 x8311))
(assert (=> (>= 10000 x7893) (= (x5346 x7893) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)))
(assert (x308 x6612))
(assert (= (x1459 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x7108))
(assert (x308 x1507))
(assert (=> (<= x514 10000) (= (x5346 x514) 0)))
(assert (x308 x2589))
(assert (= (x5346 (+ 1 x5432)) (x5346 x5432)))
(assert (= x1848 (=> (and (= x386 x7111) (= false x439) (= 2 x1027) (= x5940 x8013) (= x2442 x3531) (= 36 x7171) (= 0 x2651) (= true x6553)) x561)))
(assert (< (x5919 32 x2853) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x8553) (= (x5346 x8553) 0)))
(assert (= x3195 (and x8183 x7357)))
(assert (= x3415 (x3071 (x4041 x7491 x2618 x1565 x4794 x3415))))
(assert (not (x2741 (x6754 64 x6108 6))))
(assert (= (and x1337 (not x911)) x4085))
(assert (> (x4041 x1391 x6781 x3736 x3616 x5169) 10000))
(assert (= (x5881 (x1300 x3850 x7052 x7836 x6633)) x3850))
(assert (< (x6754 64 x7866 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x1300 x4801 x781 x5176 x1674) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x5137))
(assert (x308 x8280))
(assert (x3057 x3374))
(assert (x308 x4018))
(assert (x308 x2846))
(assert (x5886 x6337))
(assert (= (or x2670 x3201) x5084))
(assert (x308 x4974))
(assert (x308 x4713))
(assert (= x1120 (and x69 (not x6273))))
(assert (= (x5919 x7051 x4164) (x5346 (x5919 x7051 x4164))))
(assert (=> (<= x4290 10000) (= 0 (x5346 x4290))))
(assert (x308 x3176))
(assert (x308 x2082))
(assert (= x8316 (and x2950 x6420)))
(assert (x308 x6721))
(assert (= (and x4490 x279) x1080))
(assert (x5602 x6324))
(assert (x308 x2414))
(assert (x308 x6379))
(assert (= x8171 (x4162 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (= (x3071 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) x480))
(assert (< 10000 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610)))
(assert (x308 x7123))
(assert (= (x5881 (x6754 64 x4998 100)) 64))
(assert (x308 x6122))
(assert (x308 x3401))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x1198 x3379)))
(assert (= x681 (x3071 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (< (x6754 x4301 x4290 x3083) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3637))
(assert (x308 x7834))
(assert (= (and (not x847) x7424) x4346))
(assert (= 64 (x5881 (x6754 64 x1041 2))))
(assert (x308 x5144))
(assert (= (x932 (x6754 64 x2253 10)) 10))
(assert (x308 x5315))
(assert (x308 x6093))
(assert (x308 x5739))
(assert (= x7572 (x4162 (x6754 64 x7572 6))))
(assert (= (x932 (x6754 64 x1582 12)) 12))
(assert (x308 x1488))
(assert (=> (<= x811 10000) (= (x5346 x811) 0)))
(assert (x308 x2601))
(assert (x308 x6274))
(assert (x308 x3670))
(assert (x308 x7943))
(assert (x308 x4789))
(assert (x308 x8546))
(assert (= (x2151 (x6292 x1391 x7138 x7296 x1932 x3069 x8182)) x1932))
(assert (x308 x6615))
(assert (= (x4162 (x1300 x516 x3067 x6100 x728)) x3067))
(assert (= (x5346 (x6754 64 x7251 (ite (>= 32 x2135) x75 (ite (<= x2135 64) x809 (ite (<= x2135 96) x1233 (ite (<= x2135 128) x8345 (ite (<= x2135 160) x1769 (ite (<= x2135 192) x5904 x332)))))))) (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (<= x2135 64) x809 (ite (>= 96 x2135) x1233 (ite (<= x2135 128) x8345 (ite (>= 160 x2135) x1769 (ite (<= x2135 192) x5904 x332)))))))))
(assert (= x3285 (x4162 (x6754 64 x3285 6))))
(assert (x308 x2029))
(assert (x308 x645))
(assert (x308 x144))
(assert (= 64 (x5881 (x6754 64 x4875 36))))
(assert (x308 x6912))
(assert (x308 x3714))
(assert (x308 x4411))
(assert (x308 x7109))
(assert (x308 x3462))
(assert (x308 x2085))
(assert (= x6778 x5714))
(assert (=> (>= 10000 x4512) (= (x5346 x4512) 0)))
(assert (= (x5881 (x6754 64 x1011 11)) 64))
(assert (=> (<= x5814 10000) (= 0 (x5346 x5814))))
(assert (= (x6754 64 x4343 7) (x5346 (x6754 64 x4343 7))))
(assert (x308 x398))
(assert (x308 x1740))
(assert (= x8118 (or x6796 x3423)))
(assert (x308 x3982))
(assert (x308 x1561))
(assert (x308 x6180))
(assert (= x5966 (x5843 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (> (x6754 64 x6756 (ite (>= 32 x4203) x941 (ite (>= 64 x4203) x1318 (ite (>= 96 x4203) x6457 (ite (<= x4203 128) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741))))))) 10000))
(assert (= (x4162 (x6754 64 x7470 36)) x7470))
(assert (x308 x4453))
(assert (x308 x4319))
(assert (x308 x2010))
(assert (= (x4162 (x5919 x516 x5371)) x5371))
(assert (x308 x387))
(assert (x308 x7991))
(assert (=> (<= x7371 10000) (= 0 (x5346 x7371))))
(assert (x308 x7582))
(assert (not (x2741 (x6754 64 1 x1293))))
(assert (x308 x7434))
(assert (x308 x902))
(assert (= x6853 (or x2134 x1675 x6531 x7742 x4995)))
(assert (x308 x4618))
(assert (x308 x1709))
(assert (= (x2151 (x4041 x352 x6999 x653 x1979 x5899)) x1979))
(assert (x308 x6146))
(assert (= x1930 (or x3628 x521)))
(assert (= 3 (x932 (x6754 64 x4343 3))))
(assert (x308 x7461))
(assert (x308 x3796))
(assert (= (x5881 (x4041 x5494 x7249 x5828 x4400 x2630)) x5494))
(assert (x308 x2145))
(assert (= (x932 (x6754 64 x4875 36)) 36))
(assert (x308 x5437))
(assert (x308 x2736))
(assert (x308 x8530))
(assert (not (x2741 (x6754 x7491 x4888 x3832))))
(assert (= (x932 (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (<= x1185 64) x301 (ite (<= x1185 96) x7132 (ite (<= x1185 128) x8307 (ite (>= 160 x1185) x5117 (ite (>= 192 x1185) x8181 x2835)))))))) (ite (>= 32 x1185) x5946 (ite (<= x1185 64) x301 (ite (>= 96 x1185) x7132 (ite (>= 128 x1185) x8307 (ite (>= 160 x1185) x5117 (ite (<= x1185 192) x8181 x2835))))))))
(assert (x308 x8432))
(assert (= (=> (and (or (and (and (= x2623 (- x4529 x7068)) (= x7776 x6287) (= x6012 x7724) (<= x7625 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7521 x5682) (= x7585 x2839) (= x2481 x386) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7068 x4882)) (= x3919 x8013) (= x756 x7671) (= x6534 x1037) (= x601 x1243) (>= x7625 0) (= x7068 (ite (= 0 x7777) x6915 0)) (= (+ x7068 x4882) x7625) (= x5286 x993) (= x3531 x5690) (= x1576 x7777) (= x5426 x6248) (= x4529 (x5451 x3597)) (= x4882 (x5030 x5372)) (= x4341 x6866) (= x5626 x7625)) x4472) (and (not x4472) (and (= x7521 x5682) (= x3531 x5690) (= x6866 x4341) (= x5426 x6248) (= x386 x2481) (= x7776 x6287) (= x6012 x7724) (= x1243 x601) (= x7585 x2839) (= x993 x5286) (= x1037 x6534) (= x756 x7671) (= x1576 x7777) (= x3919 x8013)))) (= x4472 (= 0 x7777))) x5603) x302))
(assert (x2741 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (x308 x7777))
(assert (= x3486 (or x2935 x5826 x336)))
(assert (= x7082 (and x3615 x6765)))
(assert (=> (<= x3125 10000) (= 0 (x5346 x3125))))
(assert (= x4272 (x2151 (x1300 x4301 x3939 x5461 x4272))))
(assert (= (or x274 x3622 x4848 x7743 x2114) x977))
(assert (= (x5346 (+ x2952 1)) (x5346 x2952)))
(assert (= x6656 (and x4599 (not x150))))
(assert (= (or x1586 (and (not x4237) x3238) (and (not x998) x6049) (and x7298 (not x8340)) (and (not x5235) x2852)) x3360))
(assert (= (and (not x1253) x5155) x3404))
(assert (= x2016 (or x7122 x8082)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x7655 x4498)))
(assert (< (x6754 64 x1041 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x5919 32 x1959) 10000))
(assert (x792 x3872))
(assert (x308 x4244))
(assert (= (x5346 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600)) (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600)))
(assert (= x1086 (and (not x2186) x5732)))
(assert (x308 x769))
(assert (= (or x1247 x3430) x8204))
(assert (x3057 x3416))
(assert (> (x6754 64 1 x7526) 10000))
(assert (x2741 2088793519))
(assert (= x1420 (x1459 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (= (x4162 (x6754 64 x6894 11)) x6894))
(assert (= 2 (x932 (x6754 64 x4757 2))))
(assert (= x7591 (and x8086 x6054)))
(assert (= (x5346 (x4041 x4203 x3492 x6286 x1991 x7015)) (x4041 x4203 x3492 x6286 x1991 x7015)))
(assert (=> (<= x2809 10000) (= 0 (x5346 x2809))))
(assert (= (or x2072 x160) x6113))
(assert (x308 x3530))
(assert (x308 x4771))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x4727 x2484 x4546)))
(assert (x308 x2942))
(assert (= x2430 (x4162 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896))))
(assert (=> (>= 10000 x4422) (= (x5346 x4422) 0)))
(assert (x308 x4951))
(assert (= (x6754 64 x3082 100) (x5346 (x6754 64 x3082 100))))
(assert (= (and x1479 (not x1635)) x8211))
(assert (= (and x7509 x7337) x6570))
(assert (x308 x1983))
(assert (= (x6754 64 x8398 6) (x5346 (x6754 64 x8398 6))))
(assert (=> (<= x764 10000) (= 0 (x5346 x764))))
(assert (x308 x3106))
(assert (= x3263 (x3587 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649))))
(assert (not (x2741 (x6292 x3019 x4312 x4101 x3816 x5001 x1691))))
(assert (= (x5881 (x6754 64 x2448 3)) 64))
(assert (x308 x1478))
(assert (= (x6754 64 x206 7) (x5346 (x6754 64 x206 7))))
(assert (= x859 (x4162 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458))))
(assert (= x5347 (x932 (x6754 x352 x4242 x5347))))
(assert (x308 x6016))
(assert (x308 x8463))
(assert (= (x932 (x6754 64 x6287 3)) 3))
(assert (x308 x6429))
(assert (= (and x699 x716) x3235))
(assert (= (and x6743 x5232) x997))
(assert (= x2448 (x4162 (x6754 64 x2448 5))))
(assert (x308 x5744))
(assert (x308 x7589))
(assert (=> (>= 10000 x203) (= 0 (x5346 x203))))
(assert (= x8277 (and x8183 (not x7357))))
(assert (= x7791 (and x1187 x6393)))
(assert (x308 x3047))
(assert (= (x5919 x4801 x8289) (x5346 (x5919 x4801 x8289))))
(assert (x308 x8162))
(assert (x308 x6465))
(assert (=> (<= x8532 10000) (= 0 (x5346 x8532))))
(assert (x308 x1652))
(assert (= x5828 (x932 (x4041 x5494 x7249 x5828 x4400 x2630))))
(assert (x308 x2491))
(assert (x308 x6256))
(assert (= (x5881 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)) x4727))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x2135 x2271)))
(assert (x308 x6691))
(assert (= (or x797 x6569 x5100 x3341 x1035 x2297 x1421 x5551 x6853 x5726 x4844 x1876 x5831 x3774 x6918 x6920 x1120 x6849 x7768 x4373 x8064 x800 x2452 x2514 x1854 x471 x4904) x1843))
(assert (x308 x5874))
(assert (x308 x5080))
(assert (< (x5919 x5086 x8457) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x932 (x6754 64 x3285 2)) 2))
(assert (x308 x2187))
(assert (=> (>= 10000 x1246) (= (x5346 x1246) 0)))
(assert (= (x932 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) x2432))
(assert (x308 x3472))
(assert (= x8552 (and x572 (not x2815))))
(assert (x308 x8213))
(assert (= (x2151 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x7936))
(assert (= (or (and x7680 x4245) (and x2636 x2591) (and x5124 x5591) (and x5129 x1389) (and x284 x8220)) x24))
(assert (x3057 x1863))
(assert (x308 x4045))
(assert (= (x5881 (x5919 32 x6414)) 32))
(assert (x308 x172))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 32 x6414)))
(assert (x308 x8412))
(assert (> (x1300 x1198 x268 x4771 x1098) 10000))
(assert (x308 x6237))
(assert (= (and x7460 x3003) x6849))
(assert (= x5292 (and x7559 x8361)))
(assert (x308 x2676))
(assert (= x4475 (and x18 x7482)))
(assert (x308 x5545))
(assert (= (x3587 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)) x3178))
(assert (=> (<= x3736 10000) (= (x5346 x3736) 0)))
(assert (= (x5881 (x6754 64 x1041 36)) 64))
(assert (=> (>= 10000 x827) (= (x5346 x827) 0)))
(assert (=> (<= x3610 10000) (= 0 (x5346 x3610))))
(assert (x792 x6187))
(assert (= (x5919 32 x6414) (x5346 (x5919 32 x6414))))
(assert (= x6412 (x4162 (x6754 x4838 x6412 x7245))))
(assert (= (and (not x3080) x4510) x2382))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x8305 x6208)))
(assert (x308 x7486))
(assert (not (x2741 (x6292 x7655 x2538 x2738 x696 x7977 x7973))))
(assert (=> (>= 10000 x1185) (= (x5346 x1185) 0)))
(assert (x308 x6324))
(assert (x308 x6966))
(assert (x308 x6758))
(assert (= (and (not x6090) x85) x7970))
(assert (= x5344 (and x5644 (not x7280))))
(assert (= (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108) (x5346 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108))))
(assert (x308 x6867))
(assert (x308 x4254))
(assert (= (x5881 (x6754 64 x5082 6)) 64))
(assert (= x6898 (x4162 (x6754 64 x6898 36))))
(assert (= 64 (x5881 (x6754 64 x3285 2))))
(assert (x308 x5112))
(assert (x308 x6190))
(assert (= x8532 (x4162 (x6754 64 x8532 36))))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (x308 x6548))
(assert (x308 x7817))
(assert (x308 x3291))
(assert (x308 x2572))
(assert (not (x2741 (x6754 64 x7866 36))))
(assert (x308 x881))
(assert (x308 x2869))
(assert (x308 x1473))
(assert (x308 x1351))
(assert (= x5883 (and x6838 x2348)))
(assert (=> (>= 10000 x5470) (= (x5346 x5470) 0)))
(assert (x308 x7942))
(assert (x308 x1477))
(assert (x308 x2435))
(assert (x308 x5763))
(assert (= x1015 (and x4937 x2292)))
(assert (x308 x7655))
(assert (x308 x5367))
(assert (x308 x7837))
(assert (x308 x123))
(assert (= x6301 (and x6298 (not x1915))))
(assert (= x6220 (and x4447 x2234)))
(assert (x308 x3660))
(assert (x308 x7576))
(assert (=> (>= 10000 x7051) (= (x5346 x7051) 0)))
(assert (= x338 (and (not x2248) x992)))
(assert (=> (>= 10000 x5910) (= (x5346 x5910) 0)))
(assert (= (and x4346 (not x2878)) x392))
(assert (= (or x1227 x338) x5588))
(assert (x308 x7218))
(assert (x308 x1752))
(assert (= (x6754 64 1 x1293) (x5346 (x6754 64 1 x1293))))
(assert (= (and x7092 (not x4942)) x7406))
(assert (< 10000 (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (>= 64 x2135) x809 (ite (>= 96 x2135) x1233 (ite (>= 128 x2135) x8345 (ite (>= 160 x2135) x1769 (ite (<= x2135 192) x5904 x332)))))))))
(assert (= x7876 (and x8022 x2690)))
(assert (x308 x3880))
(assert (= x7275 (x2151 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (x308 x2811))
(assert (=> (<= x3380 10000) (= (x5346 x3380) 0)))
(assert (= x3143 (=> (and (and (= (= x1391 x6081) x1218) (= (x8139 128) x6081)) (or (and (and (= x6302 (ite (> x5801 0) 1 0)) (= x5801 (x8139 128))) x1218) (and (not x1218) (= (ite x1218 1 0) x6302)))) x8044)))
(assert (= x4904 (or x5019 x1579)))
(assert (x308 x5814))
(assert (x308 x4213))
(assert (=> (<= x8047 10000) (= (x5346 x8047) 0)))
(assert (= (x4162 (x1300 x7491 x4344 x2851 x1075)) x4344))
(assert (x308 x2041))
(assert (x308 x2228))
(assert (x308 x1050))
(assert (< 10000 (x6754 64 x6230 36)))
(assert (x308 x8378))
(assert (x308 x3625))
(assert (= (x932 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889)) x2581))
(assert (= (x1300 x1391 x380 x5080 x487) (x5346 (x1300 x1391 x380 x5080 x487))))
(assert (x308 x1038))
(assert (= (x4162 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) x6366))
(assert (x308 x5225))
(assert (< 10000 (x4041 x4838 x4788 x6549 x5334 x6859)))
(assert (= x3616 (x2151 (x4041 x1391 x6781 x3736 x3616 x5169))))
(assert (> (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (<= x4982 128) x2386 (ite (<= x4982 160) x4970 (ite (>= 192 x4982) x6333 x1291))))))) 10000))
(assert (x308 x619))
(assert (= (ite (<= x4801 32) x141 (ite (<= x4801 64) x6060 (ite (>= 96 x4801) x1044 (ite (>= 128 x4801) x3825 (ite (<= x4801 160) x8076 (ite (>= 192 x4801) x3253 x4761)))))) (x932 (x6754 64 x4252 (ite (<= x4801 32) x141 (ite (<= x4801 64) x6060 (ite (>= 96 x4801) x1044 (ite (<= x4801 128) x3825 (ite (>= 160 x4801) x8076 (ite (<= x4801 192) x3253 x4761))))))))))
(assert (x308 x5427))
(assert (x308 x3104))
(assert (= (x4162 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x2745))
(assert (x308 x2168))
(assert (not (x2741 (x1300 x1391 x380 x5080 x487))))
(assert (x308 x10))
(assert (x308 x7397))
(assert (= x4467 (or x5351 x4331)))
(assert (x308 x1777))
(assert (x308 x7283))
(assert (=> (>= 10000 x206) (= (x5346 x206) 0)))
(assert (x308 x777))
(assert (x308 x7444))
(assert (x308 x8191))
(assert (x308 x4579))
(assert (x308 x7404))
(assert (x308 x6850))
(assert (x308 x6055))
(assert (x308 x4432))
(assert (= (x932 (x6754 64 x7251 (ite (>= 32 x2135) x75 (ite (>= 64 x2135) x809 (ite (>= 96 x2135) x1233 (ite (>= 128 x2135) x8345 (ite (<= x2135 160) x1769 (ite (>= 192 x2135) x5904 x332)))))))) (ite (<= x2135 32) x75 (ite (>= 64 x2135) x809 (ite (<= x2135 96) x1233 (ite (<= x2135 128) x8345 (ite (>= 160 x2135) x1769 (ite (<= x2135 192) x5904 x332))))))))
(assert (x308 x1612))
(assert (x308 x4187))
(assert (= x1324 (x2151 (x6292 x4801 x7411 x4782 x1324 x2659 x1983))))
(assert (x308 x5598))
(assert (x5886 x2752))
(assert (= (x932 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147)) x4774))
(assert (x308 x5614))
(assert (= (and x3751 (not x3784)) x2673))
(assert (x308 x159))
(assert (= x4615 (and (not x1218) x6675)))
(assert (x3057 x2093))
(assert (= (=> (and (= x2717 (= x4851 0)) (or x2717 (not x2717))) x7268) x4666))
(assert (= (x1459 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x172))
(assert (= (and (not x4393) x6272) x1493))
(assert (x308 x4266))
(assert (x308 x8216))
(assert (= x6937 (and x3449 x6401)))
(assert (x308 x801))
(assert (x308 x5341))
(assert (x308 x1040))
(assert (= x1297 (x5843 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (=> (<= x7463 10000) (= (x5346 x7463) 0)))
(assert (x2741 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (=> (>= 10000 x1037) (= (x5346 x1037) 0)))
(assert (=> (>= 10000 x3597) (= (x5346 x3597) 0)))
(assert (> (x5919 32 103) 10000))
(assert (= (x4162 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429)) x6660))
(assert (= 64 (x5881 (x6754 64 x3739 12))))
(assert (= (x5843 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610)) x3610))
(assert (= x929 (x4162 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172))))
(assert (x2741 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (= x1586 (and x2852 x5235)))
(assert (x308 x1863))
(assert (= x4783 (and x6119 (not x8411))))
(assert (=> (<= x4164 10000) (= (x5346 x4164) 0)))
(assert (= (x4162 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)) x5094))
(assert (x308 x2533))
(assert (= (x4162 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)) x7173))
(assert (=> (>= 10000 x1969) (= 0 (x5346 x1969))))
(assert (x308 x921))
(assert (= (=> (= x1192 (+ x412 292)) x1546) x7281))
(assert (= (x4162 (x5919 32 x2853)) x2853))
(assert (x308 x6212))
(assert (= (and (not x3022) x1312) x6640))
(assert (x308 x1294))
(assert (x3057 x791))
(assert (= (=> (and (= x5149 x1641) (= x3929 x4213) (= x8288 x5558) (= x7745 x324)) x2813) x7144))
(assert (= (x932 (x6754 64 x6108 6)) 6))
(assert (< (x1300 x2135 x5205 x5858 x2587) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2443 (not x3604)) x3229))
(assert (x308 x1598))
(assert (= (x6754 64 x4252 (ite (<= x4801 32) x141 (ite (<= x4801 64) x6060 (ite (<= x4801 96) x1044 (ite (>= 128 x4801) x3825 (ite (>= 160 x4801) x8076 (ite (>= 192 x4801) x3253 x4761))))))) (x5346 (x6754 64 x4252 (ite (>= 32 x4801) x141 (ite (>= 64 x4801) x6060 (ite (<= x4801 96) x1044 (ite (>= 128 x4801) x3825 (ite (<= x4801 160) x8076 (ite (>= 192 x4801) x3253 x4761))))))))))
(assert (= (=> (and (= x6454 0) (= x1481 x3580) (= x8013 x4275) (= x8362 x1136) (= x4664 x386) (= 1 x1883)) x5485) x4497))
(assert (= (and x5044 (not x2997)) x4563))
(assert (x308 x1302))
(assert (x308 x8503))
(assert (x308 x925))
(assert (not (x2741 (x6754 64 x4252 (ite (>= 32 x4801) x141 (ite (>= 64 x4801) x6060 (ite (<= x4801 96) x1044 (ite (>= 128 x4801) x3825 (ite (<= x4801 160) x8076 (ite (>= 192 x4801) x3253 x4761))))))))))
(assert (x308 x819))
(assert (x308 x3085))
(assert (= (x5881 (x5919 x5494 x6209)) x5494))
(assert (= x8184 (and x8552 x6117)))
(assert (x308 x2914))
(assert (= x219 (and x4731 x3436)))
(assert (< 10000 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)))
(assert (x308 x3298))
(assert (x308 x5270))
(assert (> (x5919 x2135 x2271) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2448 3)))
(assert (= (x2151 (x4041 x5086 x2153 x8353 x3686 x1447)) x3686))
(assert (x308 x8147))
(assert (x5886 x4134))
(assert (= x4510 (and x7012 x7931)))
(assert (x308 x3303))
(assert (x308 x4195))
(assert (x792 x3534))
(assert (x308 x8117))
(assert (= (x5843 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411)) x411))
(assert (x308 x5655))
(assert (= (x3071 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)) x2761))
(assert (x308 x8409))
(assert (x308 x789))
(assert (= (or x4610 x8020) x4331))
(assert (= x3983 (x932 (x4041 x2135 x2713 x3983 x8194 x2844))))
(assert (= x4028 (and x1303 x1999)))
(assert (x308 x1324))
(assert (x308 x4843))
(assert (x2741 1000000000))
(assert (=> (>= 10000 x993) (= 0 (x5346 x993))))
(assert (x308 x2563))
(assert (x792 x3416))
(assert (x308 x758))
(assert (= x2471 (x4162 (x6754 x1391 x2471 x8074))))
(assert (x308 x6835))
(assert (x2741 1914215))
(assert (= (or x1416 x3198) x863))
(assert (x308 x5352))
(assert (x308 x105))
(assert (x792 x1499))
(assert (= (and (not x5830) x4526) x1631))
(assert (= x7307 (and x5554 x4898)))
(assert (= (x932 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x2586))
(assert (= (x932 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966)) x5187))
(assert (x308 x5903))
(assert (x308 x3613))
(assert (= x6037 (x932 (x6754 x5494 x555 x6037))))
(assert (= (x5346 (x5919 x1391 x677)) (x5919 x1391 x677)))
(assert (=> (>= 10000 x582) (= 0 (x5346 x582))))
(assert (= (x5346 (x6754 64 x2448 3)) (x6754 64 x2448 3)))
(assert (x308 x5583))
(assert (x308 x8171))
(assert (< (x6754 x7491 x4888 x3832) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 100 (x932 (x6754 64 x7463 100))))
(assert (x308 x1526))
(assert (= (=> (and (= x2313 (= 0 x6465)) (= x6465 (x1425 516))) (and (=> (and (and (= x1953 (< (ite (= 0 x4139) 10000 x4139) x1805)) (= (x5925 354) x1805) (= x4152 (x6754 64 x6287 5)) (= x4139 (x708 x4152))) (not x2313)) (and (=> (and (not x1953) (and (= (x8120 (+ 32 x7946)) x8367) (= (= 0 x3462) x6446) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1042) x6056) (= (x7553 (- x6274 x4775)) x1912) (= x8313 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1612)) (= x3149 (x8120 (+ 32 x4775))) (= (x8120 (+ x1451 32)) x6724) (= (x8120 (+ x6274 32)) x1717) (= (x8219 x898) x3462) (= x1612 (x8120 (+ x6583 31))) (= x6274 (x8120 (+ x6056 x6724))) (= x4775 (x8120 (+ x7247 4))) (= x1042 (x8120 (+ 31 x7170))) (= (x8120 (+ x256 x5329)) x1451) (= x2740 (x7553 (- x8325 x7247))) (= (x8120 (+ x4439 32)) x256) (= (x8120 (+ x3149 32)) x5928) (= (x1425 516) x4271) (= (x8120 (+ x1454 32)) x7946) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2093) x5329) (= x6334 (x7553 (- x1451 x4775))) (= x4439 (x8120 (+ 192 x4775))) (= x7170 (x5925 354)) (= (x8120 (+ x1717 x8313)) x8325) (= (x1258 450) x6583) (= (x8120 (+ x4271 31)) x2093) (= x1454 (x8120 (+ 32 x5928))))) (and (=> (and (not x6446) (and (= x909 (<= x1598 x4313)) (= x4313 (x978 x5372)) (= (and x909 x7894) x127) (= (x978 x898) x6936) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1598 x6936)) x7894))) (and (=> (and (and (= x1405 x1580) (= 0 x2123) (= x736 x5803) (= x2539 x1093) (= x1982 x415)) (not x127)) x4477) (=> (and x127 (and (= 3313512704 x7038) (>= x1124 1) (= x947 x6334) (= (- x3542 x1598) x7236) (<= 420 x7732) (= x8197 x5372) (= x6287 x4045) (= x7870 (or (> (- x7732 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< (- x7732 4) 192) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x7732 4)) true)))) (= (x8219 x2730) x1124) (<= x544 127) (= (x1397 x898) x2403) (= x7732 x2740) (= false x1432) (= x5777 x3136) (>= x2740 420) (= (x978 x5372) x3542) (= x7317 x1912) (= (+ x1598 x2403) x3136) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3136) (= x5096 0) (< (+ x1598 x2403) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= false x5193) (= x5934 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= x3414 (= (x4836 196) x4271)) (= x5631 192) (<= x544 127) x3414 (<= 0 x3136))) (and (=> x7870 x5423) (=> (and (= x3004 true) (not x7870)) (and (=> (not x3004) x5423) (=> (and x3004 (= (and (< 227 x7732) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7732))) x4753)) (and (=> (not x4753) x1374) (=> (and (and (= x1441 (x4654 196)) (= (< 18446744073709551615 x1441) x5830)) x4753) (and (=> x5830 x6078) (=> (and (not x5830) (and (= x4496 (< x7732 x3109)) (= (x8120 (+ 228 x1441)) x3109))) (and (=> (and (not x4496) (= x4094 (> x6334 18446744073709551615))) (and (=> (and (not x4094) (and (= x1869 (x8120 (+ x2602 31))) (= x2602 (x8120 (+ 4 x6334))) (= x4833 (or (and (= (<= x1869 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x7732 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x7732 x1869)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1869) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7732)))))) (and (=> (and x4833 (and (= x2186 (< 18446744073709551615 x8290)) (= (x4654 x2602) x8290))) (and (=> x2186 x6078) (=> (and (not x2186) (and (= (x8120 (+ x8290 x184)) x7807) (= (> x7807 x7732) x887) (= x184 (x8120 (+ 32 x2602))))) (and (=> (and (= (< 18446744073709551615 x1912) x7503) (not x887)) (and (=> x7503 x5423) (=> (and (and (= (or (and (> x594 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x7732 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7732) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x594)) (> x7732 x594))) x5087) (= (x8120 (+ 4 x1912)) x1436) (= x594 (x8120 (+ 31 x1436)))) (not x7503)) (and (=> (not x5087) x1374) (=> (and (and (= x3723 (x4654 x1436)) (= (< 18446744073709551615 x3723) x1563)) x5087) (and (=> (and (not x1563) (and (= (< x7732 x6854) x7314) (= x3655 (x8120 (+ x1436 32))) (= x6854 (x8120 (+ x3723 x3655))))) (and (=> x7314 x953) (=> (and (not x7314) (and (= x1093 x7626) (= x415 x6969) (= x6431 1) (= x3307 x1405) (= x1509 x736))) x6598))) (=> x1563 x6078))))))) (=> x887 x953))))) (=> (not x4833) x1374))) (=> x4094 x5423))) (=> x4496 x953))))))))))))) (=> (and x6446 (and (= x2631 false) (= x5332 0) (= true x6382))) x5059))) (=> (and (and (= x5332 100) (= true x5357) (= (x8120 (+ x7247 4)) x5301) (= false x7650) (= x8311 (x8120 (+ x5301 32))) (= x7554 (x8120 (+ 32 x8311)))) x1953) x5059))) (=> (and (and (= (x8120 (+ 32 x5495)) x8096) (= (x8120 (+ x6795 32)) x5495) (= false x2823) (= x7989 true) (= (x8120 (+ 32 x724)) x6795) (= (x8120 (+ 4 x7247)) x724) (= 132 x5332)) x2313) x5059))) x4047))
(assert (= x5423 (=> (and (= x4480 2) (= x6969 x415) (= x3651 x7626) (= (x2321 255 x1861) x3651) (= x4624 true) (= false x2829) (= 0 x6431) (= x736 x1509) (= x3307 x1405)) x6598)))
(assert (x308 x7905))
(assert (x308 x5311))
(assert (= (and (not x2274) x1500) x5833))
(assert (x308 x570))
(assert (= x4886 (=> (and (= x3104 0) (= true x5409) (= x3940 false)) x8425)))
(assert (= x8294 (or x3584 x1210)))
(assert (x3057 x7347))
(assert (=> (<= x3767 10000) (= (x5346 x3767) 0)))
(assert (x308 x8149))
(assert (x308 x7110))
(assert (x308 x6278))
(assert (= (and x5994 (not x7740)) x761))
(assert (x308 x5794))
(assert (=> (<= x6898 10000) (= 0 (x5346 x6898))))
(assert (x308 x856))
(assert (x308 x2407))
(assert (x308 x1625))
(assert (= (and x5745 (not x8057)) x7581))
(assert (x308 x3349))
(assert (x308 x2430))
(assert (x308 x7669))
(assert (x308 x4775))
(assert (x308 x6399))
(assert (= x611 (x2151 (x4041 x4801 x1351 x7080 x611 x5938))))
(assert (= (and x5468 x3643) x3348))
(assert (x308 x728))
(assert (= (x1459 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)) x1896))
(assert (= (=> (= x5356 (+ 292 x4873)) x7018) x7778))
(assert (not (x2741 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x5266))
(assert (x308 x3425))
(assert (x5886 x1612))
(assert (= x337 x649))
(assert (x308 x4883))
(assert (= x8147 (x5843 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x308 x3861))
(assert (= (=> (= x3105 (+ x8261 x8122)) x4417) x919))
(assert (x308 x1751))
(assert (= (=> (and (or (and (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x6036) (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= (x7553 (- x347 x3667)) x4172) (= (x8120 (+ x2507 2)) x4567) (= x6980 (x6754 64 x6894 11)) (= (x7553 (- x7223 (mod (ite (> 32 x3509) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2848) (= 0 x6509) (= x2972 (x2804 x6410)) (= (x7553 (- x4172 32)) x5827) (= (x7553 (- x3667 x6036)) x1779) (= x2507 (x8120 (+ 32 x3667))) (= (div x2972 2) x6378) (= x7223 (x2321 1 x2972)) (= x4814 (x5513 x2921)) (= x6410 (x6754 64 x2448 3)) (= (x8120 (+ x6036 32)) x5421) (= x890 (> x2848 0)) (= x347 (x8120 (+ 32 x4567))) (< x3667 x347) (= x2921 (+ 2 x4561)) (= x6554 (x507 x104)) (= (x6754 64 x6894 11) x4561) (= x536 (x8120 (+ x5421 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x6036) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x6036) (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x6036)) (= (+ 1 x7517) x104) (< x6036 x3667) (= x7517 (x6754 64 x6894 11)) (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x4057 (x7553 (- x1779 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x6036) (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x6036) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x6036))) (<= x6036 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x6036) (= (ite (> x7223 0) x6378 (x2321 127 x6378)) x3509) (= x3667 (x8120 (+ x536 32)))) (and (=> (and (and (>= x1480 1) (= x321 (div (+ 31 x3509) 32)) (= (x8120 (+ x347 (mod (+ x3650 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1480) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x347) (> x1480 x347) (= (x8120 (+ x347 32)) x4992) (= x3650 (* 32 x321)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x347) (<= x347 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= 0 x3509) x7759)) x890) (and (=> (and (not x7759) (= (< 31 x3509) x1653)) (and (=> (and (and (= (x2804 x6410) x2604) (= x757 (div x2604 256)) (= (* x757 256) x986)) (not x1653)) x8038) (=> (and (and (and (= (+ 1 x5432) x4772) (= x5453 (x8120 (+ x4992 32))) (= x5432 (x5919 32 x6410)) (= (> x5632 x5453) x5731) (= (x2259 x5432) x2644) (= x5632 (x8120 (+ x4992 x3509)))) (or (and (and (not (> x5632 x7158)) (= (x8120 (+ 32 x5453)) x7158) (= (x2259 x4772) x874)) x5731) (not x5731))) x1653) x6906))) (=> x7759 x8038))) (=> (and (not x890) (and (= x1235 36) (= true x5683) (= x2421 false))) x4392))) x982))
(assert (= (and x6543 x1321) x1247))
(assert (= x3635 (x4162 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593))))
(assert (x308 x7797))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x3285 36)))
(assert (= (or x6973 x7465) x549))
(assert (= (and (not x7872) x7873) x3))
(assert (= x7018 (=> (and (= x6624 (div x5029 2)) (= (< 0 x6787) x2348) (= (- x5356 132) x5981) (= x2046 (x2321 1 x5029)) (= (x7553 (- x2046 (mod (ite (< x8185 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6787) (= x8185 (ite (> x2046 0) x6624 (x2321 127 x6624)))) (and (=> (and (and (= x1627 (x2321 1 x5029)) (= x3581 (+ 32 x5356)) (= x1232 (= 0 x1627))) x2348) (and (=> (and x1232 (and (= (* (ite (not (= 0 x8185)) 1 0) 32) x8095) (= x6946 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5029)) (or (= 0 x8095) (= 32 x8095)) (= x4112 (+ x3581 x8095)))) x3181) (=> (and (not x1232) (and (or (and (= x4912 0) (not x2308)) (and x2308 (and (>= 32 x8185) (= (x3663 x2266) x4554) (= 32 x4912)))) (and (= x2308 (< 0 x8185)) (= (x5919 32 104) x2266)))) x5757))) (=> (not x2348) x618)))))
(assert (x308 x632))
(assert (x308 x7844))
(assert (< 10000 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)))
(assert (= x606 (and (not x7870) x5676)))
(assert (x308 x1272))
(assert (= (x5346 (x6754 64 x5082 6)) (x6754 64 x5082 6)))
(assert (x308 x2363))
(assert (= (and x812 (not x5770)) x5019))
(assert (= (x5881 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)) x5086))
(assert (= (and x900 x137) x1827))
(assert (x308 x4119))
(assert (x308 x8357))
(assert (= (x2151 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966)) x8130))
(assert (= 64 (x5881 (x6754 64 x2762 100))))
(assert (x308 x164))
(assert (= x4164 (x4162 (x5919 x7051 x4164))))
(assert (= (x6754 64 x5358 36) (x5346 (x6754 64 x5358 36))))
(assert (x308 x4984))
(assert (= (or x3967 x775 x6823) x6712))
(assert (x308 x5187))
(assert (= (=> (= x5232 (= x1143 0)) (and (=> (and (and (= x1008 x5911) (= x6146 x3355) (= x5137 x1989) (= x3345 0) (= x3911 x7123) (= 1 x4153) (= x7993 x6205) (= x5374 x2120) (= x8051 x5635) (= x921 x6216) (= x1255 x7736) (= x632 x4131) (= x6807 x1172) (= x7607 x3934) (= x6231 x5433)) (not x5232)) x385) (=> (and (and (= true x7779) (= x1235 0) (= false x6158)) x5232) x4392))) x3747))
(assert (x308 x7898))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x2762 100)))
(assert (= x1029 (x3071 (x3933 x8305 x5954 x4613 x3193 x1029 x6162 x3610))))
(assert (x308 x6279))
(assert (= (x5346 (x5919 x4838 x7149)) (x5919 x4838 x7149)))
(assert (=> (<= x5187 10000) (= (x5346 x5187) 0)))
(assert (x308 x1436))
(assert (= (x5346 (x1300 x7491 x4344 x2851 x1075)) (x1300 x7491 x4344 x2851 x1075)))
(assert (= x7491 (x5881 (x5919 x7491 x5167))))
(assert (x308 x2828))
(assert (= x4565 (and x1224 x7454)))
(assert (= (x932 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420)) x182))
(assert (x308 x4604))
(assert (x308 x280))
(assert (= x5826 (or x6342 x7475)))
(assert (x308 x3910))
(assert (not (x2741 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172))))
(assert (= (and (not x1987) x1486) x2621))
(assert (= (x932 (x6754 64 x3285 36)) 36))
(assert (x308 x2612))
(assert (=> (>= 10000 x1582) (= 0 (x5346 x1582))))
(assert (x308 x8469))
(assert (=> (>= 10000 x7572) (= (x5346 x7572) 0)))
(assert (= (and x260 x5228) x3844))
(assert (= x6804 (=> (or (and (not x2248) (and (= x99 x166) (= x7404 x1270) (= x1126 x3750))) (and x2248 (and (>= 1461501637330902918203684832716283019655932542975 x4763) (= x1270 x2798) (= x1126 x4763) (= x2688 x99)))) x7134)))
(assert (not (x2741 (x4041 x3850 x177 x7031 x7991 x4266))))
(assert (x308 x4082))
(assert (x308 x1859))
(assert (= (and (not x3208) x155) x3643))
(assert (= x1609 (and x8472 x6714)))
(assert (=> (<= x3735 10000) (= (x5346 x3735) 0)))
(assert (=> (>= 10000 x4048) (= (x5346 x4048) 0)))
(assert (= (x6754 64 x5426 0) (x5346 (x6754 64 x5426 0))))
(assert (x308 x1820))
(assert (> (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297) 10000))
(assert (x308 x2855))
(assert (= x2538 (x4162 (x6292 x7655 x2538 x2738 x696 x7977 x7973))))
(assert (x308 x5856))
(assert (=> (<= x555 10000) (= (x5346 x555) 0)))
(assert (x308 x1523))
(assert (x308 x1287))
(assert (= x3019 (x5881 (x5919 x3019 x5310))))
(assert (=> (>= 10000 x4580) (= 0 (x5346 x4580))))
(assert (= (=> (and (or (and (and (= x7626 x2539) (= x1509 x5803) (= x6431 x2123) (= x1580 x3307) (= x6969 x1982)) (not x2877)) (and x2877 (and (= x1509 x5803) (= x2123 x6431) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4031 x4310)) (>= x3008 0) (= x1982 x6969) (= (ite (= x6431 0) x1598 0) x4031) (= x3307 x1580) (= x2539 x7626) (= x3008 (+ x4310 x4031)) (= (x1904 x898) x4901) (= x4310 (x7904 x5372)) (= x3008 x7209) (<= x3008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- x4901 x4031) x6594)))) (= (= 0 x6431) x2877)) x4477) x6598))
(assert (not (x2741 (x6754 64 x2448 5))))
(assert (x308 x5355))
(assert (= (=> (and (= (= x5220 0) x3192) (= x5220 (x1510 516))) (and (=> (and (not x3192) (and (= x5537 (x6754 64 x2448 5)) (= x7044 (> x1541 (ite (= x5496 0) 10000 x5496))) (= x5496 (x708 x5537)) (= x1541 (x440 354)))) (and (=> (and x7044 (and (= x675 true) (= x2407 100) (= (x8120 (+ 32 x592)) x3657) (= x3859 false) (= x7112 (x8120 (+ x3657 32))) (= (x8120 (+ x1263 4)) x592))) x6381) (=> (and (not x7044) (and (= (x7553 (- x3714 x6974)) x1804) (= x4448 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x30)) (= x4239 (x8120 (+ x5266 32))) (= (x8120 (+ 32 x6170)) x6875) (= (x8120 (+ 192 x6974)) x6170) (= x2811 (x8120 (+ 32 x6974))) (= x5408 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5658)) (= (x8120 (+ x4448 x6881)) x3714) (= (x8120 (+ x3536 x6875)) x1607) (= x5266 (x8120 (+ 32 x8404))) (= (x8120 (+ 32 x2811)) x8404) (= x5658 (x8120 (+ 31 x4587))) (= (x8120 (+ 32 x4239)) x5275) (= (x8120 (+ x1263 4)) x6974) (= x30 (x8120 (+ x4054 31))) (= (x8120 (+ x3714 32)) x3860) (= x6584 (= 0 x8262)) (= (x8120 (+ x5408 x3860)) x8025) (= (x7805 450) x4587) (= x4054 (x440 354)) (= x8262 (x8219 x5051)) (= x1259 (x7553 (- x8025 x1263))) (= (x1510 516) x3563) (= x1701 (x8120 (+ x3563 31))) (= (x8120 (+ 32 x1607)) x6881) (= (x7553 (- x1607 x6974)) x2940) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1701) x3536))) (and (=> (and x6584 (and (= false x6267) (= x5441 true) (= x2407 0))) x6381) (=> (and (not x6584) (and (= x5027 (x6009 x5051)) (= x6550 (< (+ x5027 x612) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2911 (and x6550 x3533)) (= x1572 (x6009 x5372)) (= x3533 (>= x1572 x612)))) (and (=> (and (and (= x5318 x7025) (= x8562 x1339) (= x8276 x805) (= x3477 x1365) (= x1748 x5178) (= x2627 x4354) (= x839 x1003) (= x4212 x1548) (= x3287 x409) (= x5051 x1852) (= x3190 x2567) (= x8434 x1781) (= x3621 x4303) (= x1564 0)) (not x2911)) x4144) (=> (and x2911 (and (= x2940 x4589) (= 0 x5969) (>= x1259 420) (= x5483 (+ x4946 x612)) (= x5483 x622) (= x5247 x2448) (= x1259 x2938) (= (- x4296 x612) x6684) (>= x2938 420) (<= x5393 127) (= x4946 (x3724 x5051)) (= (x6009 x5372) x4296) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x4622) (<= 1 x2496) (= 3313512704 x4042) x1699 (= x3128 false) (= x5372 x6079) (= (x8219 x2730) x2496) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2938 4)) (and (> 192 (- x2938 4)) (= true (<= (- x2938 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4039) (<= 0 x5483) (= (= (x108 196) x3563) x1699) (>= 127 x5393) (= 192 x759) (< (+ x612 x4946) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7222 false) (= x1804 x2231) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5483))) (and (=> x4039 x8054) (=> (and (not x4039) (= true x3841)) (and (=> (not x3841) x8054) (=> (and x3841 (= (and (= (<= x2938 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 227 x2938)) x18)) (and (=> (and x18 (and (= (> x4236 18446744073709551615) x3272) (= (x5712 196) x4236))) (and (=> x3272 x8011) (=> (and (and (= (x8120 (+ 228 x4236)) x1116) (= x7620 (> x1116 x2938))) (not x3272)) (and (=> (and (not x7620) (= (< 18446744073709551615 x2940) x4889)) (and (=> x4889 x8054) (=> (and (not x4889) (and (= x220 (x8120 (+ 31 x1729))) (= x7146 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2938) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220)) (and (< x220 x2938) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2938) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x220))))) (= (x8120 (+ x2940 4)) x1729))) (and (=> (not x7146) x1362) (=> (and x7146 (and (= x4265 (< 18446744073709551615 x1638)) (= x1638 (x5712 x1729)))) (and (=> x4265 x8011) (=> (and (not x4265) (and (= x1159 (> x1013 x2938)) (= x3302 (x8120 (+ 32 x1729))) (= x1013 (x8120 (+ x1638 x3302))))) (and (=> (and (= (> x1804 18446744073709551615) x4923) (not x1159)) (and (=> x4923 x8054) (=> (and (not x4923) (and (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2938) (> x1751 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2938 x1751) (= (<= x2938 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1751 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4810) (= x1751 (x8120 (+ x3454 31))) (= (x8120 (+ x1804 4)) x3454))) (and (=> (and x4810 (and (= x2884 (x5712 x3454)) (= x556 (< 18446744073709551615 x2884)))) (and (=> x556 x8011) (=> (and (not x556) (and (= x3900 (< x2938 x8368)) (= x8368 (x8120 (+ x2884 x3206))) (= x3206 (x8120 (+ 32 x3454))))) (and (=> x3900 x5942) (=> (and (not x3900) (and (= x1368 x1339) (= x2627 x5785) (= x1548 x6566) (= x805 x2845) (= x538 x5318) (= x767 x1781) (= x871 x839) (= x6411 x3190) (= x2998 x4303) (= x1798 1) (= x1365 x93) (= x1748 x939) (= x5051 x1858) (= x3287 x3496))) x3601))))) (=> (not x4810) x1362))))) (=> x1159 x5942))))))))) (=> x7620 x5942))))) (=> (not x18) x1362))))))))))))) (=> (and x3192 (and (= true x5042) (= (x8120 (+ 32 x4052)) x1743) (= x5254 false) (= (x8120 (+ 4 x1263)) x4052) (= x5250 (x8120 (+ 32 x1101))) (= x1101 (x8120 (+ 32 x1743))) (= 132 x2407))) x6381))) x934))
(assert (> (x5919 x516 x5371) 10000))
(assert (= (and x7042 x1357) x5340))
(assert (= (x932 (x6754 64 1 x7526)) x7526))
(assert (x308 x2699))
(assert (> (x6754 x7655 x6943 x4201) 10000))
(assert (x308 x2845))
(assert (x308 x6380))
(assert (x792 x3280))
(assert (= x4290 (x4162 (x6754 x4301 x4290 x3083))))
(assert (= (and x2408 x2600) x1658))
(assert (> (x5919 x352 x7287) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195)))
(assert (=> (<= x777 10000) (= (x5346 x777) 0)))
(assert (x3057 x8129))
(assert (x308 x1738))
(assert (=> (<= x6071 10000) (= (x5346 x6071) 0)))
(assert (x308 x54))
(assert (= (and (not x3900) x2536) x3833))
(assert (= (x4162 (x5919 32 x1959)) x1959))
(assert (= (x5881 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198)) x2135))
(assert (x308 x1377))
(assert (= (and x115 x7359) x5058))
(assert (= 0 (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639773)))
(assert (x308 x4596))
(assert (= (x5881 (x6754 x7655 x6943 x4201)) x7655))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 1 x4465)))
(assert (x308 x6630))
(assert (x308 x3290))
(assert (= x6373 (x932 (x1300 x1185 x3977 x6373 x133))))
(assert (= x7648 (x2151 (x1300 x4203 x29 x3306 x7648))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x4343 3)))
(assert (= (and x8406 x6518) x5152))
(assert (> (x6754 64 x7572 6) 10000))
(assert (= (and (not x118) x4696) x50))
(assert (x2741 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= (x5881 (x1300 x4727 x3458 x596 x714)) x4727))
(assert (x308 x8367))
(assert (= (x4041 x1391 x6781 x3736 x3616 x5169) (x5346 (x4041 x1391 x6781 x3736 x3616 x5169))))
(assert (= (and x5733 (not x4472)) x145))
(assert (=> (>= 10000 x1620) (= (x5346 x1620) 0)))
(assert (x308 x4730))
(assert (x3057 x4315))
(assert (= x2780 (and x5246 x1714)))
(assert (x308 x7597))
(assert (< (x1300 x4982 x3441 x1676 x4732) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5899 10000) (= (x5346 x5899) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x3850 x177 x7031 x7991 x4266)))
(assert (x308 x3203))
(assert (x792 x1456))
(assert (x308 x5027))
(assert (= x3549 (x932 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879))))
(assert (x3057 x7260))
(assert (x308 x4965))
(assert (=> (<= x5347 10000) (= 0 (x5346 x5347))))
(assert (x308 x7286))
(assert (x308 x4284))
(assert (= (x2151 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) x1584))
(assert (x308 x7017))
(assert (= x1606 (and x7759 x6672)))
(assert (< 10000 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)))
(assert (x308 x7839))
(assert (not (x2741 (x5919 32 103))))
(assert (=> (>= 10000 x3441) (= 0 (x5346 x3441))))
(assert (= x71 (and x790 x3356)))
(assert (x3057 x1978))
(assert (= x8150 (x4162 (x5919 x4982 x8150))))
(assert (= (x4162 (x1300 x4838 x3875 x4582 x5553)) x3875))
(assert (x308 x6406))
(assert (= x551 (x4162 (x6754 64 x551 11))))
(assert (x308 x6189))
(assert (x308 x5723))
(assert (=> (>= 10000 x1784) (= (x5346 x1784) 0)))
(assert (= (or (and x6244 x2412) (and x6487 x6618) (and x1923 x7443)) x2742))
(assert (> (x6754 64 x2836 36) 10000))
(assert (= x6129 (x4162 (x6754 x2135 x6129 x8099))))
(assert (x308 x8362))
(assert (x792 x6727))
(assert (x308 x4749))
(assert (x792 x1188))
(assert (= (and x692 x6503) x7528))
(assert (x308 x6646))
(assert (not (x2741 (x6754 64 x5372 2))))
(assert (= (x932 (x6754 64 1 x113)) x113))
(assert (= (and x304 x6113) x8064))
(assert (not (x2741 (x6292 x5086 x3403 x3380 x6212 x8230 x7797))))
(assert (x308 x3343))
(assert (x308 x7000))
(assert (=> (>= 10000 x1075) (= (x5346 x1075) 0)))
(assert (= (and x7334 (not x2434)) x5261))
(assert (< (x5919 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4375 (=> (and (and (= (x8120 (+ x3738 x7448)) x2831) (= (x8120 (+ 32 x4189)) x1902) (= x3908 (< 0 x7725)) (= x1287 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4843)) (= x4843 (x8120 (+ x3738 31))) (= x7755 (x7553 (- x4709 x2220))) (= (x8120 (+ x1287 x7448)) x4709) (= x7725 (x1517 x8351))) (or (and x3908 (and (or (not x6518) (and x6518 (and (= x2646 (> x7725 64)) (or (and (and (or (and x2944 (>= 128 x7725)) (not x2944)) (= x2944 (> x7725 96))) x2646) (not x2646))))) (= (< 32 x7725) x6518))) (not x3908))) x5973)))
(assert (x3057 x1730))
(assert (x308 x2812))
(assert (= x8406 (and x3110 x3908)))
(assert (= x4816 (=> (= (= 0 x4883) x8535) (and (=> (and (and (= false x1588) (= x758 0) (= true x1066)) x8535) x624) (=> (and (and (= x7429 x4678) (= x6900 1) (= x6842 x77) (= x5355 0) (= x4604 x8177) (= x2978 x4251)) (not x8535)) x652)))))
(assert (< 10000 (x6754 64 x5358 36)))
(assert (x308 x6859))
(assert (x308 x7626))
(assert (= 2 (x932 (x6754 64 x5372 2))))
(assert (= (x5346 2001815235) 0))
(assert (= (x6292 x352 x8047 x418 x8424 x2868 x7699) (x5346 (x6292 x352 x8047 x418 x8424 x2868 x7699))))
(assert (= (x5346 (x1300 x4301 x3939 x5461 x4272)) (x1300 x4301 x3939 x5461 x4272)))
(assert (=> (>= 10000 x2766) (= (x5346 x2766) 0)))
(assert (= (x3587 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)) x3924))
(assert (= x4526 (and x4753 x3144)))
(assert (x308 x1092))
(assert (x308 x8252))
(assert (=> (>= 10000 x3816) (= (x5346 x3816) 0)))
(assert (= x7704 (x4162 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108))))
(assert (= (and x1953 x8004) x1186))
(assert (=> (<= x4223 10000) (= 0 (x5346 x4223))))
(assert (x308 x3006))
(assert (=> (<= x3285 10000) (= (x5346 x3285) 0)))
(assert (x308 x4948))
(assert (= (x6754 x7655 x6943 x4201) (x5346 (x6754 x7655 x6943 x4201))))
(assert (< (x6754 64 x6756 (ite (<= x4203 32) x941 (ite (>= 64 x4203) x1318 (ite (>= 96 x4203) x6457 (ite (>= 128 x4203) x125 (ite (<= x4203 160) x5612 (ite (>= 192 x4203) x5294 x6741))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x7692 x2177) x4004))
(assert (x308 x1633))
(assert (x308 x593))
(assert (=> (>= 10000 x7756) (= 0 (x5346 x7756))))
(assert (= (x5881 (x6754 64 1 x1293)) 64))
(assert (= x4534 (or x2986 x7540)))
(assert (= (and x3120 (not x3974)) x5640))
(assert (x308 x5766))
(assert (x308 x4103))
(assert (= x1185 (x5881 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602))))
(assert (x792 x655))
(assert (= (and x6765 (not x3615)) x7592))
(assert (=> (<= x6108 10000) (= 0 (x5346 x6108))))
(assert (= x7208 (and x7897 x3510)))
(assert (= x233 (x3587 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (= (x5881 (x4041 x516 x2133 x1302 x1004 x6925)) x516))
(assert (= (=> (and (= x186 (= 0 x6900)) (or (and (and (= x1088 x7429) (= x3644 x6842) (= x4604 x7987) (= x6088 x6900) (= x4505 x5355) (= x5646 x4251)) (not x186)) (and (and (= (ite (= x6900 0) x3017 0) x3583) (= x4505 x5355) (< (+ x3583 x5012) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x7895) (= x7895 x2244) (= x6900 x6088) (= x3349 (x2008 x1037)) (= x5012 (x4231 x333)) (= x4251 x5646) (= x7895 (+ x5012 x3583)) (= x4604 x7987) (= x1088 x7429) (<= x7895 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6842 x3644) (= (- x3349 x3583) x7263)) x186))) x7674) x652))
(assert (x308 x3093))
(assert (x308 x8445))
(assert (x308 x3635))
(assert (x308 x7657))
(assert (x2741 310283853))
(assert (= x6211 (or x4074 x1378)))
(assert (=> (>= 10000 x5985) (= 0 (x5346 x5985))))
(assert (= (and x7998 x2922) x8239))
(assert (= (or x2016 x183) x7868))
(assert (x308 x1449))
(assert (x308 x8509))
(assert (x308 x3451))
(assert (=> (<= x1429 10000) (= (x5346 x1429) 0)))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (=> (>= 10000 x3715) (= 0 (x5346 x3715))))
(assert (x308 x4399))
(assert (x308 x1297))
(assert (= x6522 (and (not x510) x6228)))
(assert (=> (>= 10000 x6421) (= 0 (x5346 x6421))))
(assert (x308 x714))
(assert (= (x5881 (x4041 x4301 x7294 x5415 x3796 x1901)) x4301))
(assert (x792 x4053))
(assert (= (x4162 (x5919 x352 x7287)) x7287))
(assert (=> (<= x5600 10000) (= (x5346 x5600) 0)))
(assert (x308 x2613))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x308 x7492))
(assert (x308 x4546))
(assert (x308 x2512))
(assert (x308 x2195))
(assert (x308 x4169))
(assert (= 64 (x5881 (x6754 64 x4327 12))))
(assert (x308 x223))
(assert (= x6006 (and x1847 (not x4769))))
(assert (> (x5919 x7491 x5167) 10000))
(assert (= (and x5386 (not x7663)) x2591))
(assert (x308 x4196))
(assert (= (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458) (x5346 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458))))
(assert (x308 x4150))
(assert (not (x2741 (x6754 64 x6287 3))))
(assert (< 10000 (x6292 x7655 x2538 x2738 x696 x7977 x7973)))
(assert (= x6605 (x3587 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349))))
(assert (x308 x620))
(assert (=> (<= x914 10000) (= 0 (x5346 x914))))
(assert (x308 x2525))
(assert (x308 x1750))
(assert (x308 x514))
(assert (= (and x3964 x3348) x6926))
(assert (x308 x4178))
(assert (= (or x7269 x1180) x1079))
(assert (= x3739 (x4162 (x6754 64 x3739 12))))
(assert (x308 x5776))
(assert (x308 x5730))
(assert (=> (<= x7973 10000) (= (x5346 x7973) 0)))
(assert (x308 x2389))
(assert (x308 x2778))
(assert (= (x2151 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458)) x7638))
(assert (x308 x2113))
(assert (= (x5843 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) x4700))
(assert (x308 x1977))
(assert (x308 x5821))
(assert (x308 x1600))
(assert (x3057 x3280))
(assert (not (x2741 (x6754 64 x4343 7))))
(assert (x308 x4750))
(assert (not (x2741 (x6292 x516 x3800 x1794 x5062 x7487 x7784))))
(assert (= (and x621 x3189) x193))
(assert (= 12 (x932 (x6754 64 x3125 12))))
(assert (= (x5843 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)) x5113))
(assert (x308 x4678))
(assert (= (and x1735 x5163) x3095))
(assert (x308 x8289))
(assert (= x8004 (and x451 (not x2313))))
(assert (=> (>= 10000 x7997) (= 0 (x5346 x7997))))
(assert (=> (>= 10000 x714) (= (x5346 x714) 0)))
(assert (< 10000 (x4041 x4801 x1351 x7080 x611 x5938)))
(assert (x308 x7088))
(assert (= (and x7754 x5998) x1131))
(assert (x308 x2638))
(assert (x308 x6162))
(assert (x308 x6961))
(assert (=> (<= x133 10000) (= 0 (x5346 x133))))
(assert (= 64 (x5881 (x6754 64 x2836 36))))
(assert (= (x3071 (x6292 x4982 x7273 x8186 x1537 x706 x4512)) x706))
(assert (= (and (not x7964) x5702) x5593))
(assert (x308 x6751))
(assert (x308 x1315))
(assert (x308 x5350))
(assert (= (x5843 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) x5913))
(assert (> (x4041 x4982 x31 x2830 x5306 x2456) 10000))
(assert (= (and x6144 (not x1163)) x7323))
(assert (= (x5881 (x6754 64 x4757 2)) 64))
(assert (x308 x7518))
(assert (x308 x2832))
(assert (x308 x2179))
(assert (x3057 x3872))
(assert (= (and x2764 x4565) x5551))
(assert (= x7769 (and x519 x441)))
(assert (=> (>= 10000 x1265) (= (x5346 x1265) 0)))
(assert (= 64 (x5881 (x6754 64 x5691 3))))
(assert (= x3010 (x3587 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (not (x2741 (x4041 x4982 x31 x2830 x5306 x2456))))
(assert (x308 x7106))
(assert (x308 x5601))
(assert (x308 x124))
(assert (x308 x1640))
(assert (= (x932 (x6754 64 x7133 12)) 12))
(assert (= (=> (= (= 0 x1570) x1514) (and (=> (and (and (= x309 x3173) (= x8532 x7905) (= 2 x2812) (= true x1534) (= x4183 x3661) (= x959 x8060) (= x4216 x4957) (= x2426 x4579) (= x4025 x2759) (= x4250 x5263) (= x644 x7023) (= x2833 x5029) (= x2731 x2448) (= x1418 0) (= x6668 x5341) (= x2620 x3597) (= x1099 false)) x1514) x6447) (=> (and (not x1514) (and (= x4592 x6928) (= x1945 x5122) (= x869 x495) (= x374 x2198) (= x5064 x5873) (= x6362 x7389) (= x7623 x6709) (= x3176 x1473) (= x7164 x2656) (= x6700 x4444) (= x1944 x4685) (= x3749 x5118) (= x7891 x4612))) x6478))) x3130))
(assert (x308 x2661))
(assert (x308 x4139))
(assert (< 10000 (x6754 64 x2323 36)))
(assert (= (and x196 (not x2181)) x6832))
(assert (=> (<= x1983 10000) (= 0 (x5346 x1983))))
(assert (x308 x6748))
(assert (x308 x4482))
(assert (x308 x1571))
(assert (x308 x2162))
(assert (x308 x6209))
(assert (x2569 x2972))
(assert (x308 x5012))
(assert (x308 x5034))
(assert (= x4016 (and (not x4265) x1892)))
(assert (x308 x8551))
(assert (= (and x6582 x3063) x7820))
(assert (x308 x1574))
(assert (x308 x5217))
(assert (= x1718 (x932 (x1300 x8305 x7028 x1718 x1000))))
(assert (< 10000 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649)))
(assert (x308 x8433))
(assert (x308 x6150))
(assert (x308 x6704))
(assert (x308 x1677))
(assert (= (x5881 (x5919 32 103)) 32))
(assert (not (x2741 (x1300 x4301 x3939 x5461 x4272))))
(assert (x308 x7554))
(assert (= x2916 (=> (and (= (x2321 255 x4053) x3819) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x238) (= x513 (x5396 x3173)) (= (- x513 x5982) x7474) (= x238 x8285) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5397 x5982)) (= x5296 x1551) (= x238 (+ x5397 x5982)) (= x5397 (x996 x333)) (= x2726 2) (>= x238 0)) x285)))
(assert (= 0 (x5346 1341992515)))
(assert (x308 x4572))
(assert (x308 x630))
(assert (= x1853 (or (and x7770 x2547) (and x2872 x2314))))
(assert (x308 x2524))
(assert (= x4995 (and x2262 (not x6670))))
(assert (< (x6754 64 x7572 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x2200))
(assert (= x1710 (x932 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x6143))
(assert (< 10000 (x6754 64 x5372 2)))
(assert (=> (>= 10000 x1198) (= (x5346 x1198) 0)))
(assert (x308 x7455))
(assert (= x8297 (x1459 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297))))
(assert (= (x6754 x5494 x555 x6037) (x5346 (x6754 x5494 x555 x6037))))
(assert (x308 x4188))
(assert (x308 x367))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x3587 (x6292 x4727 x3776 x7451 x6604 x2761 x2213)) x2213))
(assert (x308 x1869))
(assert (=> (<= x1041 10000) (= 0 (x5346 x1041))))
(assert (= x5205 (x4162 (x1300 x2135 x5205 x5858 x2587))))
(assert (= (and x7496 x3991) x422))
(assert (= (x5346 1000000000) 0))
(assert (not (x2741 (x4041 x4838 x4788 x6549 x5334 x6859))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x5086 x4422 x4929)))
(assert (x308 x6943))
(assert (x308 x5272))
(assert (= x4937 (or x1469 x8480 x2221 x3906 x6932)))
(assert (x308 x6058))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x8305 x8444 x811 x4050 x7088)))
(assert (= (x5881 (x6754 64 x6287 4)) 64))
(assert (x308 x1192))
(assert (x308 x8323))
(assert (= x5059 (=> (and (= x3472 2) (= x386 x3188) (= x8013 x5088) (= x3531 x6350) (= x7507 0) (= (x2321 255 x1861) x1333) (= x1333 x7220) (= x7883 x5332)) x5130)))
(assert (> (x6754 64 x5082 6) 10000))
(assert (x308 x5858))
(assert (< 10000 (x6292 x516 x3800 x1794 x5062 x7487 x7784)))
(assert (x308 x2603))
(assert (= (and x6806 x7044) x4735))
(assert (=> (>= 10000 x3379) (= (x5346 x3379) 0)))
(assert (= (ite (>= 32 x4982) x2607 (ite (>= 64 x4982) x6590 (ite (<= x4982 96) x1654 (ite (<= x4982 128) x2386 (ite (>= 160 x4982) x4970 (ite (>= 192 x4982) x6333 x1291)))))) (x932 (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (<= x4982 64) x6590 (ite (>= 96 x4982) x1654 (ite (>= 128 x4982) x2386 (ite (<= x4982 160) x4970 (ite (>= 192 x4982) x6333 x1291))))))))))
(assert (= x6032 (x5843 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879))))
(assert (x308 x7224))
(assert (x308 x4892))
(assert (x308 x7710))
(assert (= x7977 (x3071 (x6292 x7655 x2538 x2738 x696 x7977 x7973))))
(assert (x308 x1072))
(assert (= (x5346 (x4041 x4838 x4788 x6549 x5334 x6859)) (x4041 x4838 x4788 x6549 x5334 x6859)))
(assert (x308 x4260))
(assert (x308 x87))
(assert (x2741 3521034783))
(assert (x308 x1796))
(assert (x308 x4851))
(assert (< (x4383 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4455 (and x6732 (not x3824))))
(assert (x308 x4549))
(assert (x308 x8027))
(assert (x308 x5093))
(assert (x308 x8325))
(assert (= (x5346 (x6754 64 x2448 4)) (x6754 64 x2448 4)))
(assert (x308 x5654))
(assert (x308 x1454))
(assert (x308 x204))
(assert (x308 x3527))
(assert (x308 x360))
(assert (x5602 x6378))
(assert (x5886 x8451))
(assert (x308 x1249))
(assert (not (x2741 (x1300 x352 x8553 x6809 x7834))))
(assert (= x5591 (and x1566 (not x6994))))
(assert (x308 x5829))
(assert (x308 x2002))
(assert (= x66 (or (and x7314 x665) (and x887 x1086) (and x4496 x1631))))
(assert (x308 x4025))
(assert (x3057 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (=> (<= x3800 10000) (= 0 (x5346 x3800))))
(assert (= (x932 (x1300 x1198 x268 x4771 x1098)) x4771))
(assert (not (x2741 (x6754 64 x6894 11))))
(assert (x308 x1213))
(assert (x308 x546))
(assert (= x3850 (x5881 (x4041 x3850 x177 x7031 x7991 x4266))))
(assert (< (x5919 x3850 x1562) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6088))
(assert (x308 x5221))
(assert (= x4340 (=> (and (= x1110 0) (= x7882 true) (= x1791 false)) x5851)))
(assert (=> (>= 10000 x6660) (= (x5346 x6660) 0)))
(assert (= (=> (and (= 0 x4153) (= x3911 x5263) (= x1255 x2426) (= x644 x7993) (= x6231 x4025) (= x5374 x6668) (= x8060 x6146) (= x4216 x7607) (= x5911 x3597) (= x481 2) (= x5029 x5635) (= x4131 x3173) (= x1172 x4183) (= x1619 x921) (= (x2321 255 x5587) x1619) (= x2448 x1989) (= x1235 x3345)) x385) x4392))
(assert (x308 x3359))
(assert (x308 x1485))
(assert (= x587 (and x3949 x5756)))
(assert (= x2177 (and (not x5837) x6165)))
(assert (= x2255 (and (not x4941) x2648)))
(assert (= (and x2577 (not x2928)) x1054))
(assert (=> (>= 10000 x4301) (= (x5346 x4301) 0)))
(assert (= x4961 (x4162 (x6754 x7051 x4961 x1640))))
(assert (= x981 (x4162 (x1300 x3019 x981 x4009 x1972))))
(assert (> (x6754 64 x7866 36) 10000))
(assert (x308 x5828))
(assert (x308 x7915))
(assert (> (x1300 x4203 x29 x3306 x7648) 10000))
(assert (x308 x1718))
(assert (x2741 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (=> (>= 10000 x3306) (= 0 (x5346 x3306))))
(assert (=> (>= 10000 x3010) (= 0 (x5346 x3010))))
(assert (= x6653 (and x8547 (not x5815))))
(assert (< (x6754 64 x4757 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6754 x4203 x6076 x7017) (x5346 (x6754 x4203 x6076 x7017))))
(assert (x308 x1429))
(assert (=> (>= 10000 x5842) (= (x5346 x5842) 0)))
(assert (=> (<= x929 10000) (= (x5346 x929) 0)))
(assert (not (x2741 (x4041 x4301 x7294 x5415 x3796 x1901))))
(assert (= x1022 (and x2383 x4166)))
(assert (= x4784 (and (not x783) x1658)))
(assert (x308 x5811))
(assert (x308 x6825))
(assert (x308 x4489))
(assert (= x1162 (and x7617 (not x4573))))
(assert (= 0 (x5346 45231284858326638837332416019018714005183587760015845327913118753091066265600)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x676 36)))
(assert (x308 x5691))
(assert (= 0 (x5346 1313998243)))
(assert (x308 x2528))
(assert (=> (<= x1562 10000) (= 0 (x5346 x1562))))
(assert (not (x2741 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967))))
(assert (x308 x1105))
(assert (< 10000 (x1300 x516 x3067 x6100 x728)))
(assert (= (and (not x7320) x2092) x2161))
(assert (x308 x1263))
(assert (= (and x8558 x4751) x85))
(assert (=> (<= x3346 10000) (= (x5346 x3346) 0)))
(assert (= (and (not x7998) x2922) x181))
(assert (x308 x112))
(assert (x308 x7429))
(assert (< (x4041 x3019 x3862 x1710 x715 x7694) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x8047))
(assert (= x8275 (x932 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (= (or x6506 x2780) x3491))
(assert (x308 x7166))
(assert (x308 x898))
(assert (x308 x2762))
(assert (x308 x3879))
(assert (x308 x3009))
(assert (=> (>= 10000 x411) (= (x5346 x411) 0)))
(assert (x308 x4001))
(assert (= x1356 (and x2318 (not x7503))))
(assert (= (x3071 (x4041 x7655 x6068 x7455 x134 x1096)) x1096))
(assert (= x2583 (and x568 x3331)))
(assert (x308 x8006))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 1 x7526)))
(assert (x308 x416))
(assert (=> (<= x2955 10000) (= 0 (x5346 x2955))))
(assert (= x6478 (=> (and (= x7023 x6700) (= x7905 x4685) (= x1945 x2759) (= x7891 x4250) (= x309 x3749) (= x5341 x3176) (= x4957 x2656) (= x2833 x6928) (= x869 x2620) (= x7389 x959) (= x3661 x5064) (= x1418 1) (= x2198 x2731) (= x4579 x7623)) x6447)))
(assert (> (x6754 64 x3285 36) 10000))
(assert (x3057 x5236))
(assert (x308 x3889))
(assert (x308 x5354))
(assert (= (x2151 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) x4481))
(assert (= (or x2975 x7172) x560))
(assert (= (and x4665 x2774) x5611))
(assert (x308 x7405))
(assert (= (x5346 (x6292 x5086 x3403 x3380 x6212 x8230 x7797)) (x6292 x5086 x3403 x3380 x6212 x8230 x7797)))
(assert (x308 x3715))
(assert (< 10000 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)))
(assert (x308 x4421))
(assert (x308 x5439))
(assert (x792 x5639))
(assert (= (and x7477 (not x726)) x5800))
(assert (= x568 (and x7351 x4522)))
(assert (= (or x5621 x5539) x2092))
(assert (= x4343 (x4162 (x6754 64 x4343 7))))
(assert (x308 x3296))
(assert (=> (<= x3178 10000) (= (x5346 x3178) 0)))
(assert (x308 x3507))
(assert (= x4905 (and x7494 x3195)))
(assert (x308 x2433))
(assert (x308 x72))
(assert (x308 x4185))
(assert (= (or x995 x8296) x8548))
(assert (x308 x7602))
(assert (x3057 x7781))
(assert (x308 x4107))
(assert (=> (>= 10000 x6072) (= (x5346 x6072) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x7470 36)))
(assert (x308 x5933))
(assert (x308 x148))
(assert (x308 x7978))
(assert (= x4929 (x932 (x6754 x5086 x4422 x4929))))
(assert (= x7475 (and x3114 (not x1430))))
(assert (x3057 x6828))
(assert (< (x6292 x1391 x7138 x7296 x1932 x3069 x8182) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x7832))
(assert (= (x5346 (x1300 x1185 x3977 x6373 x133)) (x1300 x1185 x3977 x6373 x133)))
(assert (= x5673 (x4162 (x6292 x3850 x5673 x6483 x2284 x4803 x233))))
(assert (x308 x6496))
(assert (= (and (not x7971) x6332) x4245))
(assert (x308 x7629))
(assert (= (or x3833 x5218) x3586))
(assert (= (x5881 (x5919 32 x3913)) 32))
(assert (x308 x1003))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x4301 x3939 x5461 x4272)))
(assert (= (x932 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429)) x5879))
(assert (= x8195 (and x5126 x2794)))
(assert (x308 x6516))
(assert (= (or x554 x6030 x7850 x4735 x1285 x7876 x3079 x7231 x2719 x7071) x7726))
(assert (= x7655 (x5881 (x3933 x7655 x2745 x2586 x8130 x7253 x7628 x966))))
(assert (= x1302 (x932 (x4041 x516 x2133 x1302 x1004 x6925))))
(assert (x308 x8247))
(assert (= x3906 (and (not x3773) x2715)))
(assert (= (x4162 (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (<= x2135 64) x809 (ite (<= x2135 96) x1233 (ite (<= x2135 128) x8345 (ite (<= x2135 160) x1769 (ite (<= x2135 192) x5904 x332)))))))) x7251))
(assert (= x3551 (and x2256 x3765)))
(assert (= x4520 (=> (= (= 0 x1883) x8317) (and (=> (and (and (= x4664 x6493) (= x7348 x8362) (= x4701 x3580) (= x4275 x6477)) (not x8317)) x3087) (=> (and x8317 (and (= 2 x5844) (= 0 x2651) (= x5476 false) (= x2442 x3531) (= x386 x7111) (= x5940 x8013) (= x7171 x6454) (= x1320 true))) x561)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x1198 x268 x4771 x1098)))
(assert (not (x2741 (x6754 64 x7251 (ite (<= x2135 32) x75 (ite (>= 64 x2135) x809 (ite (>= 96 x2135) x1233 (ite (<= x2135 128) x8345 (ite (>= 160 x2135) x1769 (ite (<= x2135 192) x5904 x332))))))))))
(assert (x308 x8536))
(assert (x308 x8290))
(assert (not (x2741 (x6292 x4203 x2643 x5854 x1971 x1016 x518))))
(assert (=> (>= 10000 x6894) (= 0 (x5346 x6894))))
(assert (x308 x6898))
(assert (= (x3071 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)) x7968))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x308 x5418))
(assert (= x8525 (=> (and (= x2429 2) (= x1313 false) (= true x1155) (= x386 x7111) (= x2442 x3531) (= x7171 x1150) (= 0 x2651) (= x5940 x8013)) x561)))
(assert (= (and x6446 x4408) x7131))
(assert (x2741 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= x2484 (x4162 (x6754 x4727 x2484 x4546))))
(assert (x308 x2880))
(assert (= x4982 (x5881 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (=> (<= x570 10000) (= 0 (x5346 x570))))
(assert (=> (<= x3493 10000) (= (x5346 x3493) 0)))
(assert (x308 x2851))
(assert (x308 x5908))
(assert (x308 x4398))
(assert (< 10000 (x5919 x3850 x1562)))
(assert (x308 x3644))
(assert (x308 x4872))
(assert (x308 x7112))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x5494 x6256 x6233 x6797 x424 x5377)))
(assert (x308 x8084))
(assert (x308 x1896))
(assert (= (and x4715 x2440) x11))
(assert (x308 x596))
(assert (= (and x85 x6090) x6886))
(assert (= (x4162 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966)) x7686))
(assert (x308 x4220))
(assert (=> (<= x177 10000) (= 0 (x5346 x177))))
(assert (= (x4162 (x6292 x4801 x7411 x4782 x1324 x2659 x1983)) x7411))
(assert (= x4634 (and (not x4527) x3251)))
(assert (x308 x4317))
(assert (x308 x3273))
(assert (x308 x5001))
(assert (= x3048 (or x967 x11 x4764 x8316 x2695 x3066 x7163 x4792 x564 x1690 x7591)))
(assert (x308 x3573))
(assert (=> (<= x3273 10000) (= (x5346 x3273) 0)))
(assert (= (x5346 (+ x40 2)) (x5346 x40)))
(assert (x308 x7959))
(assert (x308 x5464))
(assert (x308 x5347))
(assert (=> (<= x6287 10000) (= (x5346 x6287) 0)))
(assert (x308 x5666))
(assert (= x3796 (x2151 (x4041 x4301 x7294 x5415 x3796 x1901))))
(assert (= x133 (x2151 (x1300 x1185 x3977 x6373 x133))))
(assert (x308 x2645))
(assert (x308 x3919))
(assert (= (and x284 (not x8220)) x4695))
(assert (x308 x5082))
(assert (x308 x5940))
(assert (= (x5881 (x1300 x4801 x781 x5176 x1674)) x4801))
(assert (= (=> (= x3640 (= x5654 0)) (and (=> (and (and (= x3547 x1887) (= x1393 x2202) (= x6067 x8396) (= x6733 x5583) (= x5147 x1236) (= x5932 x4549) (= x4225 x1950) (= x1307 x4282) (= x722 x7086) (= x1721 x2775) (= x2925 x455) (= x7032 x2098) (= x2968 x3612)) (not x3640)) x5049) (=> (and x3640 (and (= x2833 x5029) (= x644 x7023) (= x3597 x2620) (= x5341 x6668) (= 2 x6131) (= x2448 x2731) (= x4250 x5263) (= x4216 x4957) (= x8164 true) (= false x506) (= x2759 x4025) (= x309 x3173) (= x2426 x4579) (= x959 x8060) (= x1418 0) (= x4183 x3661) (= x8532 x7905))) x6447))) x434))
(assert (x5886 x1978))
(assert (= (and x7460 (not x3003)) x7421))
(assert (x308 x8182))
(assert (x308 x7649))
(assert (= 0 (x5346 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (= (and x5146 x4120) x7919))
(assert (x308 x6962))
(assert (not (x2741 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (= x2854 (and x8005 x8521)))
(assert (=> (>= 10000 x7249) (= 0 (x5346 x7249))))
(assert (> (x6754 64 x7470 36) 10000))
(assert (not (x2741 (x5919 x5494 x6209))))
(assert (= (x5346 (x4041 x7051 x7748 x1747 x7938 x3085)) (x4041 x7051 x7748 x1747 x7938 x3085)))
(assert (= x1362 x8054))
(assert (x308 x7479))
(assert (x308 x6534))
(assert (= (or x8118 x610) x1312))
(assert (= (x5881 (x6754 64 x5739 (ite (<= x4301 32) x553 (ite (>= 64 x4301) x3366 (ite (<= x4301 96) x6432 (ite (>= 128 x4301) x4345 (ite (>= 160 x4301) x4093 (ite (>= 192 x4301) x539 x3309)))))))) 64))
(assert (=> (<= x2038 10000) (= (x5346 x2038) 0)))
(assert (x308 x7378))
(assert (= 0 (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639776)))
(assert (x308 x2213))
(assert (x3057 x5434))
(assert (= (x932 (x1300 x5494 x4421 x4614 x7667)) x4614))
(assert (x308 x3368))
(assert (= (x3071 (x6292 x1391 x7138 x7296 x1932 x3069 x8182)) x3069))
(assert (= (=> (and (= (- x5093 132) x5808) (= x4903 (< 0 x5962)) (= (ite (> x7741 0) x3374 (x2321 127 x3374)) x3367) (= x7741 (x2321 1 x5029)) (= (x7553 (- x7741 (mod (ite (> 32 x3367) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5962) (= (div x5029 2) x3374)) (and (=> (and x4903 (and (= x2055 (x2321 1 x5029)) (= (= 0 x2055) x1647) (= (+ x5093 32) x1569))) (and (=> (and x1647 (and (= (+ x1569 x6360) x5868) (or (= 0 x6360) (= x6360 32)) (= x6474 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5029)) (= (* (ite (not (= x3367 0)) 1 0) 32) x6360))) x3646) (=> (and (not x1647) (and (and (= x2006 (x5919 32 104)) (= (> x3367 0) x2897)) (or (and (= x5613 0) (not x2897)) (and x2897 (and (<= x3367 32) (= 32 x5613) (= (x3663 x2006) x1427)))))) x8330))) (=> (not x4903) x484))) x7045))
(assert (= (x5881 (x6754 64 x2375 2)) 64))
(assert (x308 x8250))
(assert (= (x5346 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x6230 36)))
(assert (x308 x2492))
(assert (= x7694 (x3071 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x4071))
(assert (x308 x7026))
(assert (x308 x2502))
(assert (x308 x5667))
(assert (x308 x8063))
(assert (= x3677 (and x7964 x5702)))
(assert (x308 x3605))
(assert (x308 x42))
(assert (= (x2151 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)) x7654))
(assert (x308 x1567))
(assert (= x8366 (x4162 (x6754 x4982 x8366 x1336))))
(assert (= x3398 (=> (and (= x4573 (= 0 x350)) (or (and (= x2846 x350) x4573) (and (and (= (x965 x7225) x1420) (= (x8120 (+ 96 x7811)) x6567) (= x5673 (x7864 160)) (= x1731 (x5919 x4727 x7961)) (= (x7864 224) x7991) (= x2284 (x7864 224)) (= x233 (x7864 288)) (= (x8120 (+ 96 x7811)) x8216) (= x7722 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)) (= x7344 (x965 x1502)) (= x7031 (x7864 192)) (= (x8120 (+ 192 x7811)) x7225) (= x6604 (x965 x7647)) (= (x8120 (+ x7811 32)) x889) (= (x965 x6856) x5842) (= x3115 (x8120 (+ 32 x7811))) (= (x965 x403) x6678) (= x5192 (x965 x8510)) (= (x7864 160) x1562) (= (x8120 (+ 128 x7811)) x3185) (= (x7864 192) x7836) (= x7936 (x7864 224)) (= x1836 (x1300 x3850 x7052 x7836 x6633)) (= x3273 (x965 x7811)) (= (x8120 (+ x7811 64)) x7440) (= (x7864 160) x6051) (= (x6292 x3850 x5673 x6483 x2284 x4803 x233) x5773) (= x5195 (x965 x7582)) (= x4481 (x7864 224)) (>= 224 x4727) (= x2432 (x7864 192)) (= x4266 (x7864 256)) (= x7046 (x8120 (+ 160 x7811))) (= x914 (x7864 320)) (= (x965 x7898) x4546) (= x6856 (x8120 (+ x7811 128))) (= x403 (x8120 (+ x7811 128))) (= x6405 (x7864 192)) (>= 224 x3850) (= (x8120 (+ x7811 160)) x7582) (= (x6754 x3850 x7892 x6405) x8476) (= x296 (x6754 x4727 x2484 x4546)) (= x344 (x965 x3115)) (= (x965 x6567) x6501) (= (x4041 x3850 x177 x7031 x7991 x4266) x7608) (= x5578 (x965 x7046)) (= (x8120 (+ 64 x7811)) x5460) (= x6496 (x965 x7440)) (= (x7864 160) x177) (= (x965 x7811) x3776) (= x6483 (x7864 192)) (= (x965 x7811) x770) (= (x965 x7811) x3458) (= x1555 (x8120 (+ 32 x7811))) (= (x8120 (+ 64 x7811)) x7647) (= (x965 x3514) x2761) (= (x4383 0) x4528) (= x2019 (x965 x895)) (= x7898 (x8120 (+ x7811 32))) (= x3514 (x8120 (+ 96 x7811))) (= (x4041 x4727 x7444 x344 x2019 x3523) x3946) (= x714 (x965 x5460)) (= x2846 (ite (= (ite (= 0 x3850) x4528 (ite (<= x3850 32) x1947 (ite (<= x3850 64) x8476 (ite (<= x3850 96) x1836 (ite (<= x3850 128) x7608 (ite (>= 160 x3850) x5773 (ite (<= x3850 192) x6418 x7722))))))) (ite (= 0 x4727) x5760 (ite (<= x4727 32) x1731 (ite (>= 64 x4727) x296 (ite (>= 96 x4727) x57 (ite (<= x4727 128) x3946 (ite (>= 160 x4727) x3576 (ite (>= 192 x4727) x4157 x8419)))))))) 1 0)) (= x7444 (x965 x7811)) (= (x7864 224) x6633) (= (x1300 x4727 x3458 x596 x714) x57) (= x7892 (x7864 160)) (= x4803 (x7864 256)) (= (x7864 256) x8389) (= (x7864 288) x4591) (= (x4383 0) x5760) (= (x7864 160) x7052) (= (x965 x3185) x2213) (= (x965 x889) x596) (= (x965 x1555) x182) (= x7961 (x965 x7811)) (= (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420) x8419) (= (x7864 256) x480) (= x2484 (x965 x7811)) (= x6418 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) (= x6400 (x8120 (+ x7811 x4727))) (= (x8120 (+ x7811 32)) x7672) (= x895 (x8120 (+ x7811 64))) (= x1947 (x5919 x3850 x1562)) (= (x7864 320) x5913) (= (x7864 288) x1910) (= x4070 (x7864 192)) (= (x8120 (+ x7811 64)) x8458) (= x3523 (x965 x8216)) (= (x6292 x4727 x3776 x7451 x6604 x2761 x2213) x3576) (= x4157 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195)) (= x172 (x7864 352)) (= x1502 (x8120 (+ x7811 32))) (= x929 (x7864 160)) (= x3850 (x7864 128)) (= x8510 (x8120 (+ x7811 96))) (= (x965 x8458) x5199) (= (x965 x7672) x7451)) (not x4573)))) x2196)))
(assert (x308 x6974))
(assert (=> (<= x786 10000) (= 0 (x5346 x786))))
(assert (= (=> (and (= true x705) (= x6866 x8155) (= x3290 x7952) (= x4547 x7724) (= x6059 x6287) (= x7521 x1476) (= 0 x3938) (= x4335 x601) (= 2 x2131) (= x8013 x3507) (= x2674 x756) (= x1942 0) (= x1037 x2724) (= x6902 x5426) (= x7576 x3531) (= x386 x1840) (= x6905 false) (= x7952 (x2321 255 x1074)) (= x3068 x7585)) x5944) x6352))
(assert (x308 x3709))
(assert (= 1 (x4162 (x6754 64 1 x113))))
(assert (x308 x5795))
(assert (x308 x524))
(assert (x308 x3701))
(assert (= (and x1415 (not x6521)) x8382))
(assert (x308 x5180))
(assert (= (x932 (x1300 x4203 x29 x3306 x7648)) x3306))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1300 x7051 x5930 x6429 x3683)))
(assert (=> (<= x480 10000) (= 0 (x5346 x480))))
(assert (x308 x5639))
(assert (x3057 x6229))
(assert (x308 x291))
(assert (x308 x3292))
(assert (x308 x3875))
(assert (= (x5881 (x5919 x5086 x8457)) x5086))
(assert (=> (>= 10000 x5353) (= (x5346 x5353) 0)))
(assert (x308 x1691))
(assert (= 32 (x5881 (x5919 32 x2853))))
(assert (x308 x7572))
(assert (= x5552 (or x219 x863)))
(assert (x308 x5985))
(assert (x308 x6529))
(assert (x308 x321))
(assert (x308 x6915))
(assert (x308 x7297))
(assert (x308 x2523))
(assert (< (x1300 x7491 x4344 x2851 x1075) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3884 (=> (and (and (= x1317 (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8455)) (= (x7553 (- x7167 x6492)) x4358) (= x6983 (x1913 x83)) (= x4237 (< 0 x6983)) (= (x8120 (+ x2966 32)) x2216) (= (x8120 (+ x5809 31)) x8455) (= (x8120 (+ x5809 x517)) x7530) (= x7167 (x8120 (+ x517 x1317)))) (or (and (and (or (and (and (or (not x8340) (and (and (= (< 96 x6983) x5235) (or (not x5235) (and (>= 128 x6983) x5235))) x8340)) (= (< 64 x6983) x8340)) x998) (not x998)) (= (> x6983 32) x998)) x4237) (not x4237))) x7875)))
(assert (< (x6754 64 x1011 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429) (x5346 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (= (and x8072 x6139) x1520))
(assert (x308 x7487))
(assert (= (x5346 100000) 0))
(assert (x2741 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (not (x2741 (x1300 x4838 x3875 x4582 x5553))))
(assert (= 64 (x5881 (x6754 64 x6230 36))))
(assert (x308 x6304))
(assert (x308 x2332))
(assert (x308 x6875))
(assert (= (or x3772 x6926 x2255 x4200 x4109) x5977))
(assert (x308 x6917))
(assert (x308 x513))
(assert (x308 x1864))
(assert (= (and (not x8052) x2588) x2986))
(assert (> (x6754 64 x4875 36) 10000))
(assert (= x7784 (x3587 (x6292 x516 x3800 x1794 x5062 x7487 x7784))))
(assert (x308 x4358))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x8161 x3850 x929 x4070 x7936 x8389 x4591 x5913 x172)))
(assert (x308 x7381))
(assert (= (x4162 (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297)) x570))
(assert (= (and (not x1923) x7443) x2722))
(assert (= 0 (x5346 35425322552009646506518338594398286811668114190755561836384294568426616127488)))
(assert (=> (<= x7173 10000) (= (x5346 x7173) 0)))
(assert (=> (>= 10000 x1565) (= 0 (x5346 x1565))))
(assert (= (and x3645 x319) x2513))
(assert (= 0 (x5346 48755886422350550937420582033662272622158303343164848365600209189876434731008)))
(assert (=> (>= 10000 x3415) (= 0 (x5346 x3415))))
(assert (x5886 x5150))
(assert (x2741 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x5919 x7491 x5167)))
(assert (= (x5346 3628442803) 0))
(assert (x308 x6660))
(assert (= (and x3839 (not x1664)) x5625))
(assert (= x7266 (and (not x4852) x46)))
(assert (= (x5919 x3850 x1562) (x5346 (x5919 x3850 x1562))))
(assert (x308 x663))
(assert (x308 x6032))
(assert (x308 x3629))
(assert (= x1179 (and x7700 x2367)))
(assert (=> (<= x1183 10000) (= (x5346 x1183) 0)))
(assert (=> (<= x3616 10000) (= (x5346 x3616) 0)))
(assert (x308 x5711))
(assert (= (x5881 (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (>= 64 x4982) x6590 (ite (>= 96 x4982) x1654 (ite (<= x4982 128) x2386 (ite (<= x4982 160) x4970 (ite (<= x4982 192) x6333 x1291)))))))) 64))
(assert (x2741 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (= (and x1086 (not x887)) x2318))
(assert (x308 x3832))
(assert (x308 x3667))
(assert (x308 x5613))
(assert (x308 x6046))
(assert (not (x2741 (x5919 x7051 x4164))))
(assert (x308 x480))
(assert (x308 x6631))
(assert (= 104 (x4162 (x5919 32 104))))
(assert (= x615 (and x4004 (not x890))))
(assert (= x5985 (x3071 (x3933 x4982 x7686 x5187 x6949 x5985 x1246 x5966))))
(assert (x308 x5195))
(assert (= x370 (=> (and (= false x6115) (= 0 x1551) (= true x1217)) x2916)))
(assert (=> (<= x4877 10000) (= 0 (x5346 x4877))))
(assert (= x6440 (x932 (x6292 x4301 x3767 x6440 x7374 x1969 x3086))))
(assert (x308 x2241))
(assert (x308 x827))
(assert (=> (<= x6562 10000) (= (x5346 x6562) 0)))
(assert (= (x932 (x4041 x4801 x1351 x7080 x611 x5938)) x7080))
(assert (x308 x5406))
(assert (= (x5346 102788308552044517260959567728648622381392053106279845986800620074717893623808) 0))
(assert (= x5167 (x4162 (x5919 x7491 x5167))))
(assert (x308 x6368))
(assert (=> (>= 10000 x4651) (= (x5346 x4651) 0)))
(assert (= x6614 (and (not x1581) x2803)))
(assert (= (x5346 (x4383 0)) (x4383 0)))
(assert (= x1000 (x2151 (x1300 x8305 x7028 x1718 x1000))))
(assert (x308 x4552))
(assert (= (and (not x2084) x4455) x111))
(assert (=> (<= x5461 10000) (= (x5346 x5461) 0)))
(assert (= x4009 (x932 (x1300 x3019 x981 x4009 x1972))))
(assert (x3057 x4215))
(assert (=> (<= x2868 10000) (= (x5346 x2868) 0)))
(assert (x308 x756))
(assert (x308 x3324))
(assert (> (x8161 x4982 x8166 x8438 x6227 x4223 x3205 x6648 x3783) 10000))
(assert (= 64 (x5881 (x6754 64 x206 7))))
(assert (x2741 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x1216 (and x8548 x7706)))
(assert (x308 x859))
(assert (x2741 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (x308 x3928))
(assert (not (x2741 (x5919 32 104))))
(assert (x308 x5453))
(assert (x308 x5175))
(assert (= (x4162 (x6754 64 x6287 5)) x6287))
(assert (x308 x1165))
(assert (= x1445 (and x5087 x1356)))
(assert (x308 x7257))
(assert (x308 x3547))
(assert (x308 x743))
(assert (x308 x1502))
(assert (= (x3071 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) x6634))
(assert (=> (<= x3875 10000) (= 0 (x5346 x3875))))
(assert (x308 x891))
(assert (x308 x7630))
(assert (=> (>= 10000 x4700) (= (x5346 x4700) 0)))
(assert (x308 x2045))
(assert (x308 x6111))
(assert (x308 x4960))
(assert (x308 x7573))
(assert (x308 x6627))
(assert (=> (>= 10000 x8289) (= (x5346 x8289) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x5494 x555 x6037)))
(assert (=> (>= 10000 x1979) (= (x5346 x1979) 0)))
(assert (x308 x4366))
(assert (= (=> (and (= x1412 x7621) (= x7110 x630) (= x8024 x1072) (= x1174 x2875) (= x4425 0) (= x3222 true) (= false x2390) (= (x2321 255 x1074) x8024) (= x6513 2)) x4471) x6826))
(assert (x308 x2453))
(assert (= (or x4406 x3726) x5634))
(assert (x3057 x5679))
(assert (= x4932 (or x4902 x6773)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x4203 x3492 x6286 x1991 x7015)))
(assert (x308 x2830))
(assert (not (x2741 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743))))
(assert (= x1185 (x5881 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (x308 x4755))
(assert (x3057 x8347))
(assert (x308 x7060))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x516 x3800 x1794 x5062 x7487 x7784)))
(assert (x308 x7816))
(assert (x308 x53))
(assert (= (and x1583 x3551) x692))
(assert (= (or x5182 x6860 x2583) x558))
(assert (x308 x5164))
(assert (x308 x3158))
(assert (= x1391 (x5881 (x5919 x1391 x677))))
(assert (x308 x6611))
(assert (=> (>= 10000 x7088) (= 0 (x5346 x7088))))
(assert (x2569 x6668))
(assert (x308 x4058))
(assert (x308 x185))
(assert (< (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x3159))
(assert (x308 x770))
(assert (= x2766 (x2151 (x6292 x2135 x1295 x6039 x2766 x7689 x8433))))
(assert (x308 x3285))
(assert (x308 x2660))
(assert (x308 x875))
(assert (x308 x4290))
(assert (= (x5881 (x6754 x4203 x6076 x7017)) x4203))
(assert (not (x2741 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879))))
(assert (= x3498 (and x1284 (not x1269))))
(assert (=> (>= 10000 x5051) (= (x5346 x5051) 0)))
(assert (x308 x3484))
(assert (x308 x7926))
(assert (x308 x29))
(assert (x308 x5334))
(assert (= (x5881 (x4041 x4203 x3492 x6286 x1991 x7015)) x4203))
(assert (x308 x4233))
(assert (x308 x6821))
(assert (= (and x5722 x1535) x983))
(assert (< 10000 (x4383 0)))
(assert (x308 x4448))
(assert (= (and (not x2256) x3765) x7913))
(assert (x308 x4410))
(assert (=> (<= x5489 10000) (= (x5346 x5489) 0)))
(assert (not (x2741 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322))))
(assert (x792 x7347))
(assert (=> (<= x4906 10000) (= (x5346 x4906) 0)))
(assert (=> (<= x2761 10000) (= 0 (x5346 x2761))))
(assert (x308 x1962))
(assert (x308 x2299))
(assert (x308 x4946))
(assert (x308 x1638))
(assert (not (x2741 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (x308 x2048))
(assert (= (x4162 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889)) x6281))
(assert (= (x3587 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)) x474))
(assert (x308 x8550))
(assert (x308 x1326))
(assert (= (x4041 x5086 x2153 x8353 x3686 x1447) (x5346 (x4041 x5086 x2153 x8353 x3686 x1447))))
(assert (x308 x4502))
(assert (= x6797 (x2151 (x6292 x5494 x6256 x6233 x6797 x424 x5377))))
(assert (x308 x3248))
(assert (x308 x5769))
(assert (not (x2741 (x6292 x5494 x6256 x6233 x6797 x424 x5377))))
(assert (= (x5346 (x6754 64 x5996 36)) (x6754 64 x5996 36)))
(assert (= (x1459 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)) x602))
(assert (x308 x1012))
(assert (= x2879 (x1459 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879))))
(assert (= x4068 (and x7295 x8034)))
(assert (= (and x6585 x7558) x1732))
(assert (x308 x6624))
(assert (x308 x2998))
(assert (= x8420 (=> (and (= x1243 x1360) (= x8042 x7671) (= x4892 x2481) (= x2770 x4341) (= x3919 x2228) (= x6534 x4969) (= x1196 x6248) (= x2839 x5115) (= x5953 x6012) (= x7777 x5656) (= x6203 x5690) (= x5696 x7776) (= x5286 x4818) (= x2384 x5682)) x302)))
(assert (= (and (not x8440) x3385) x1637))
(assert (x308 x7052))
(assert (x308 x8180))
(assert (x308 x5219))
(assert (x308 x6477))
(assert (< (x6292 x7655 x2538 x2738 x696 x7977 x7973) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6484 (=> (and (= x5116 x3093) (= x3275 x5744) (= x2532 x5225) (= x4919 x6888) (= x2694 x3161) (= x2700 x4559) (= x3708 x7595) (= x1034 x3530) (= x1426 x6870) (= x5775 x7796) (= x8240 x7282) (= x7845 x5493) (= x245 x2476)) x5156)))
(assert (x308 x6239))
(assert (x308 x1460))
(assert (x308 x2236))
(assert (x308 x6059))
(assert (= (or (and (not x6827) x5581) x330) x7342))
(assert (= 0 (x5346 2770781680)))
(assert (= x5944 (=> (= (= x3938 0) x6054) (and (=> (and (and (= x4064 true) (= x1942 x758) (= x5097 false)) x6054) x624) (=> (and (= x6420 (< x1942 64)) (not x6054)) (and (=> (and (and (= x7519 x3290) (= x2082 (x3370 290)) (= x4547 x1213) (= x1476 x1487) (= x1764 x6059) (= x7039 x6902) (= x4018 (x3370 322)) (= x2227 x8155) (= x3507 x630) (= x3068 x3448) (= x1840 x7621) (= 354 x3359) (= x7576 x1174) (= x4335 x228) (= x6821 x2674) (= x3482 x2082) (= x879 x2724)) (not x6420)) x7090) (=> (and (and (= 0 x758) (= x6659 false) (= true x8214)) x6420) x624)))))))
(assert (= (and (not x3271) x7050) x625))
(assert (x308 x5996))
(assert (= x352 (x5881 (x1300 x352 x8553 x6809 x7834))))
(assert (x308 x1822))
(assert (x308 x5247))
(assert (x308 x2964))
(assert (x308 x8140))
(assert (x308 x7925))
(assert (= x3894 (or x422 (and (not x3991) x7496))))
(assert (x3057 x1864))
(assert (= x5994 (and x8258 x7583)))
(assert (= x5201 (and x6057 x1993)))
(assert (x308 x759))
(assert (x308 x7748))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 64 x3285 6)))
(assert (= (x5346 x8144) (x5346 (+ x8144 1))))
(assert (= x2715 (and x3304 x3561)))
(assert (x308 x1060))
(assert (x308 x1013))
(assert (x308 x1910))
(assert (x308 x7977))
(assert (= (x4162 (x1300 x4727 x3458 x596 x714)) x3458))
(assert (x308 x6001))
(assert (x308 x6604))
(assert (= (and (not x5731) x5958) x6973))
(assert (x308 x7514))
(assert (= (or x587 x4111 x2733 x7200 x5611 x1597) x1579))
(assert (= x5198 (or (and x5237 x5060) (and x3011 x7963))))
(assert (= x206 (x4162 (x6754 64 x206 7))))
(assert (= x2065 (or (and x4655 x8112) (and x5140 x8302))))
(assert (x308 x1951))
(assert (= (or x4830 x1727 x4760 x6461 x6656) x7382))
(assert (= (x3071 (x6292 x1185 x6425 x8518 x6985 x6699 x7844)) x6699))
(assert (= 64 (x5881 (x6754 64 x1582 12))))
(assert (not (x2741 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024))))
(assert (x308 x1164))
(assert (x308 x7125))
(assert (x308 x2955))
(assert (x308 x3372))
(assert (= (x5843 (x3933 x3850 x6051 x2432 x4481 x480 x1910 x914)) x914))
(assert (=> (>= 10000 x4487) (= (x5346 x4487) 0)))
(assert (x308 x5428))
(assert (x308 x3352))
(assert (= (x4162 (x1300 x1391 x380 x5080 x487)) x380))
(assert (> (x5919 x4203 x6504) 10000))
(assert (x308 x6511))
(assert (x308 x339))
(assert (> (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600) 10000))
(assert (= (x6754 x2135 x6129 x8099) (x5346 (x6754 x2135 x6129 x8099))))
(assert (= (x5346 (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)) (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602)))
(assert (= 0 (x5346 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (x308 x4006))
(assert (x308 x8025))
(assert (x308 x7690))
(assert (= (and x3567 x3955) x5536))
(assert (x308 x4802))
(assert (x308 x6934))
(assert (x308 x6890))
(assert (x308 x939))
(assert (x308 x1316))
(assert (=> (<= x6212 10000) (= 0 (x5346 x6212))))
(assert (=> (>= 10000 x8353) (= 0 (x5346 x8353))))
(assert (= x4203 (x5881 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (x308 x2532))
(assert (x308 x7379))
(assert (= x4727 (x5881 (x6754 x4727 x2484 x4546))))
(assert (x308 x4940))
(assert (x308 x8495))
(assert (x308 x4543))
(assert (x308 x954))
(assert (=> (<= x6076 10000) (= (x5346 x6076) 0)))
(assert (= (=> (and (and (= x4345 (x4041 x4301 x7294 x5415 x3796 x1901)) (= (x8120 (+ 32 x6704)) x8439) (= x5208 (x3351 x2749)) (= x2294 (x8120 (+ x6492 32))) (= (x3351 x2692) x1098) (= (x8120 (+ x6492 32)) x6752) (= (x3351 x6682) x3178) (= x4180 (x8120 (+ x1156 x6492))) (= (x3351 x8080) x4771) (= x1198 (- x4301 32)) (= x3086 (x3351 x6685)) (= x6682 (x8120 (+ x6492 128))) (= (x8120 (+ 64 x6492)) x4135) (= (x3351 x6492) x3939) (= (x6754 x1198 x3346 x5783) x938) (<= 32 x4301) (= (x1300 x1198 x268 x4771 x1098) x788) (= x514 (x3351 x6766)) (= x539 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) (= x8408 (x8120 (+ x6492 32))) (= (x8120 (+ 32 x6492)) x2603) (= x5783 (x3351 x5219)) (= (x3351 x6492) x268) (= (x8120 (+ 32 x6492)) x5219) (= (x3351 x6933) x4700) (= (x1300 x4301 x3939 x5461 x4272) x6432) (= (x6754 x4301 x4290 x3083) x3366) (= (x3351 x3696) x7374) (= (x8120 (+ x6492 64)) x7258) (= x1428 (x8120 (+ x6492 128))) (= x5113 (x3351 x1460)) (= x2749 (x8120 (+ 64 x6492))) (= x6933 (x8120 (+ 160 x6492))) (= x3696 (x8120 (+ 64 x6492))) (= (x3351 x2023) x5461) (= x6766 (x8120 (+ x6492 32))) (<= x4301 224) (= x6685 (x8120 (+ 128 x6492))) (= (x3351 x2294) x4630) (= x185 (x8120 (+ 96 x6492))) (= (> x3999 0) x7962) (= x2692 (x8120 (+ 64 x6492))) (= x7798 (x5919 x1198 x3379)) (= (x3351 x6492) x4290) (= (x3351 x7104) x6440) (= x7224 (x3351 x7258)) (= (x3351 x2768) x1183) (= x3796 (x3351 x4993)) (= x7104 (x8120 (+ 32 x6492))) (= (x3351 x6492) x8188) (= x2947 (x8120 (+ x6492 32))) (= x3309 (x8161 x4301 x1644 x2302 x4815 x1519 x3178 x5113 x3835)) (= x3083 (x3351 x4790)) (= (x3351 x6492) x6764) (= (x3351 x6492) x3379) (= (x8120 (+ x6492 128)) x4254) (= x7367 (x8120 (+ x6492 96))) (= x4158 (x3351 x2828)) (= (x3351 x6492) x1644) (= (x3351 x1428) x164) (= (x8120 (+ x6492 32)) x3668) (= x6366 (x3351 x6492)) (= (x8120 (+ x6492 64)) x4910) (= x7401 (x6754 64 x5739 (ite (<= x4301 32) x553 (ite (<= x4301 64) x3366 (ite (<= x4301 96) x6432 (ite (>= 128 x4301) x4345 (ite (>= 160 x4301) x4093 (ite (<= x4301 192) x539 x3309)))))))) (= x7730 (x8120 (+ x6492 96))) (= (x8120 (+ x6492 96)) x8) (= x4815 (x3351 x4135)) (= (x8120 (+ x6492 128)) x6607) (= x4790 (x8120 (+ 32 x6492))) (= (x3351 x6492) x3242) (= (x3351 x7730) x1901) (= (x4041 x1198 x3242 x8275 x7224 x8162) x8376) (= (x3351 x6492) x3346) (= x4093 (x6292 x4301 x3767 x6440 x7374 x1969 x3086)) (= (ite (= x1198 0) x5943 (ite (<= x1198 32) x7798 (ite (>= 64 x1198) x938 (ite (>= 96 x1198) x788 (ite (>= 128 x1198) x8376 (ite (>= 160 x1198) x4440 x6206)))))) x5680) (= (x8120 (+ x6492 96)) x2768) (= x2828 (x8120 (+ 64 x6492))) (= x4993 (x8120 (+ 64 x6492))) (= x2023 (x8120 (+ x6492 32))) (= x5415 (x3351 x2603)) (= x7294 (x3351 x6492)) (= x7322 (x3351 x2414)) (= x8162 (x3351 x1672)) (= (x3351 x2947) x2302) (= x1969 (x3351 x7367)) (= x2955 (x3351 x8)) (= (x8120 (+ x6492 x1156)) x6704) (= (x3351 x584) x4272) (= (x8120 (+ x6492 64)) x584) (= (x8120 (+ x6492 160)) x2414) (= x5724 (x3351 x4910)) (= (x8120 (+ x6492 192)) x6152) (= x5943 (x4383 0)) (= (x3351 x3668) x8275) (= (x3351 x185) x7624) (= x6206 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) (= (x5919 x4301 x4482) x553) (= x4301 (x7553 (- x8439 x6492))) (= (x8120 (+ x6492 160)) x4798) (= x3835 (x3351 x6152)) (= x4440 (x6292 x1198 x8188 x2116 x5208 x7624 x827)) (= (x8120 (+ x4798 32)) x897) (= x4482 (x3351 x6492)) (= (x3351 x8408) x2116) (= (x8120 (+ x6492 96)) x1672) (= (x8120 (+ x6492 96)) x6646) (= (x3351 x6607) x827) (= (x3351 x6492) x3767) (= x1725 (x3351 x4254)) (= (x2979 x7723) x3999) (= (x8120 (+ 32 x6492)) x8080) (= (x8120 (+ x6492 160)) x1460) (= (x3351 x6646) x1519)) (or (not x7962) (and x7962 (and (and (= x2210 (> x3999 32)) (= x7888 (x1723 x6625))) (or (and x2210 (and (or (and x5410 (and (or (and (and (= x638 (x8120 (+ x897 96))) (= (x2781 x2718) x3358) (<= x3999 128) (= x2718 (x8120 (+ 96 x6625)))) x3252) (not x3252)) (and (= (x8120 (+ x897 64)) x1874) (= (x4171 x8267) x902) (= x8267 (x8120 (+ 64 x6625))) (= x3252 (> x3999 96))))) (not x5410)) (and (= (x8120 (+ 32 x897)) x7410) (= x5410 (< 64 x3999)) (= x3694 (x3522 x4663)) (= x4663 (x8120 (+ 32 x6625)))))) (not x2210)))))) x1009) x4821))
(assert (=> (<= x4630 10000) (= 0 (x5346 x4630))))
(assert (not (x2741 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (= x7127 (and x7101 x6104)))
(assert (x308 x3346))
(assert (x308 x6000))
(assert (= x3646 (=> (and (= (x7553 (- x5868 128)) x1105) (= (= 0 x2904) x6139) (= 128 x8273) (= x2904 (x8219 x3173))) (and (=> (and x6139 (and (= 2 x3629) (= x5263 x4250) (= x8532 x7905) (= false x231) (= x5029 x2833) (= x3661 x4183) (= x2448 x2731) (= x2426 x4579) (= x6668 x5341) (= x4216 x4957) (= x3228 true) (= x644 x7023) (= x1418 0) (= x3597 x2620) (= x309 x3173) (= x959 x8060) (= x4025 x2759))) x6447) (=> (and (and (= x4823 (x6009 x3173)) (= (<= x5982 x2053) x253) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4823 x5982)) x6745) (= (x6009 x333) x2053) (= (and x253 x6745) x2158)) (not x6139)) (and (=> (and x2158 (and (= x2249 false) (= x1165 128) (= (+ x1411 x5982) x2303) (= x5894 (- x3352 x5982)) (<= 0 x2303) (= x1338 3521034783) (= x2245 x4252) (= x2303 x4501) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2303) (= x400 (x8219 x5372)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x222) (= (x5278 132) x8546) (= (= (x943 132) x1700) x5606) x5606 (= x7744 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x3170 x5808) (<= 1 x400) (<= 196 x222) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1411 x5982)) (<= x1105 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x5589 x7418) (>= x1105 196) (<= x1497 127) (>= 127 x1497) (= x1105 x222) (= x1411 (x426 x3173)) (= (x6009 x333) x3352) (= (> x8546 18446744073709551615) x2872) (= false x5022))) (and (=> x2872 x7918) (=> (and (and (= x4033 (> x5475 x222)) (= x5475 (x8120 (+ 164 x8546))) (= x5880 164)) (not x2872)) (and (=> x4033 x370) (=> (and (not x4033) (and (= (+ x5808 4) x1398) (= x5011 (> x222 (+ x1398 31))))) (and (=> (and (and (= x3111 false) (= true x5501) (= 0 x1551)) (not x5011)) x2916) (=> (and x5011 (and (= x7770 (< 18446744073709551615 x5429)) (= x5429 (x5278 x1398)))) (and (=> (and (and (= (+ x1398 32) x2336) (= x3249 (x8120 (+ x2336 x5429))) (= x4852 (< x222 x3249))) (not x7770)) (and (=> x4852 x370) (=> (and (and (or (and x3902 (and (= x5647 false) (= true x2619) (= 132 x1551))) (and (not x3902) (and (or (and (and (= x4703 (x8120 (+ x5429 31))) (= x5167 (x3868 128)) (= (x3868 128) x4888) (= (x3868 224) x4322) (<= 161 x6171) (= x1107 (x8120 (+ x5037 x5429))) (= x6747 (x3868 256)) (= x5037 (x8120 (+ x8259 32))) (= x2194 false) (= x7020 (div x4703 32)) (= x6985 (x3868 192)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x8546) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x8546)) (= x2701 (x1300 x7491 x4344 x2851 x1075)) (= x844 (x3868 128)) (= x1551 0) (= (x3868 224) x3415) (= (x3868 192) x381) (= x5814 (x3868 160)) (= x6160 (x3868 224)) (= x7968 (x3868 224)) (= (x3868 128) x6644) (= (x1300 x1185 x3977 x6373 x133) x7132) (= (x3868 320) x602) (= x4580 (x3868 160)) (= (x4041 x1185 x144 x3889 x2914 x2129) x8307) (= x8518 (x3868 160)) (or (<= x7328 31) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x7328)) (= x8259 (+ x378 160)) (= (x3868 128) x4344) (= (x3868 192) x786) (= (div x4716 32) x1361) (= (x3868 192) x2914) (= x3389 128) (= x133 (x3868 192)) (= x8181 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600)) (= (x3868 160) x3832) (= x7844 (x3868 256)) (= (x3868 128) x7403) (= (x3868 160) x2851) (= (x8120 (+ x8546 128)) x4424) (= (- x1185 32) x7491) (= (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562) x1465) (= x1565 (x3868 160)) (= x6897 (x5919 x7491 x5167)) (= (x5919 x1185 x6644) x5946) (= x2618 (x3868 128)) (= x8205 (x3868 128)) (= (x3868 192) x4794) (= (x4041 x7491 x2618 x1565 x4794 x3415) x1527) (= (x3868 160) x3889) (= (x8161 x1185 x261 x5814 x786 x4322 x2085 x1386 x602) x2835) (= (x3868 288) x5600) (= x7095 (x3868 256)) (= x301 (x6754 x1185 x8205 x7758)) (= x3338 (x6292 x7491 x844 x4507 x582 x6160 x7095)) (= (x3868 128) x3977) (= (x3868 160) x4507) (= (x3868 192) x1075) (= (x3868 192) x582) (= x7328 (x3310 x8259)) (= x362 (x6754 64 x4252 (ite (>= 32 x1185) x5946 (ite (<= x1185 64) x301 (ite (<= x1185 96) x7132 (ite (>= 128 x1185) x8307 (ite (>= 160 x1185) x5117 (ite (>= 192 x1185) x8181 x2835)))))))) (= x144 (x3868 128)) (= x474 (x3868 256)) (<= x1185 224) (= x6967 (x6754 x7491 x4888 x3832)) (= (x3868 160) x6373) (= x7442 (ite (= 0 x7491) x3893 (ite (<= x7491 32) x6897 (ite (<= x7491 64) x6967 (ite (>= 96 x7491) x2701 (ite (<= x7491 128) x1527 (ite (>= 160 x7491) x3338 x1465))))))) (= x7933 true) (= x3893 (x4383 0)) (= (* 32 x7020) x3846) (= (x3868 288) x6562) (= (x3868 160) x7758) (= (x8120 (+ 31 x8546)) x4716) (= x6679 (x3868 224)) (= x2129 (x3868 224)) (= x6171 (x8120 (+ x1496 x8259))) (= (x3868 256) x2085) (= (x3868 160) x3064) (= (x6754 64 x7418 7) x4894) (< x8259 x6171) (= x5117 (x6292 x1185 x6425 x8518 x6985 x6699 x7844)) (= x1496 (x8120 (+ x3846 32))) (= x378 (* x1361 32)) (= x5094 (x3868 128)) (= (x8120 (+ x8546 128)) x3716) (= x6425 (x3868 128)) (= (x8120 (+ 160 x8546)) x1319) (= (x3868 224) x6699) (= (x7553 (- (mod (+ 32 x3716) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x1185) (= (x3868 192) x7654) (= (x3868 128) x261) (= x1386 (x3868 288)) (<= 32 x1185)) x4831) (and (not x4831) (and (= true x1392) (= 132 x1551) (= x8459 false)))) (and (= x5570 (x8120 (+ x5429 128))) (= (x1157 160) x6303) (= (x1157 160) x6429) (= (x1157 256) x6419) (= (x1157 128) x7748) (= x3519 (x1157 256)) (= x4961 (x1157 128)) (= x7541 (x1300 x7051 x5930 x6429 x3683)) (>= 224 x7051) (= (x1157 160) x8284) (= (x1157 224) x3199) (= x5763 (x1157 256)) (= x7893 (x1157 224)) (= x2686 (x8161 x7051 x2430 x6303 x8083 x3199 x6419 x3981 x1896)) (= (x1157 128) x204) (= x7761 (x1157 224)) (= (x1157 192) x7275) (= (x4383 0) x1903) (= (x7553 (- x5570 128)) x7051) (= x4164 (x1157 128)) (= x3683 (x1157 192)) (= x3135 (x6754 x7051 x4961 x1640)) (= x2430 (x1157 128)) (= x5888 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743)) (= (x5919 x7051 x4164) x5836) (= (x1157 320) x1896) (= x2652 (x1157 192)) (= x7756 (x1157 160)) (= x1640 (x1157 160)) (= (x6292 x7051 x382 x8284 x7275 x7761 x5763) x6578) (= x1747 (x1157 160)) (= (= x3391 (ite (= 0 x7051) x1903 (ite (>= 32 x7051) x5836 (ite (<= x7051 64) x3135 (ite (>= 96 x7051) x7541 (ite (>= 128 x7051) x807 (ite (>= 160 x7051) x6578 (ite (>= 192 x7051) x5888 x2686)))))))) x4831) (= x7938 (x1157 192)) (= x807 (x4041 x7051 x7748 x1747 x7938 x3085)) (= x5930 (x1157 128)) (= x3085 (x1157 224)) (= (x1157 288) x3981) (= x382 (x1157 128)) (= x8083 (x1157 192)) (= (x1157 288) x743))))) (and (= (x8120 (+ 32 x7837)) x3956) (= (x6292 x4801 x7411 x4782 x1324 x2659 x1983) x8076) (= x611 (x825 192)) (= x203 (x825 224)) (= (x825 128) x7287) (= (x825 192) x631) (= x7878 (x4383 0)) (= x3826 (x3933 x352 x3635 x7997 x2531 x4877 x10 x593)) (= (- x4801 32) x352) (= x5176 (x825 160)) (= (x825 128) x8289) (= (x1300 x352 x8553 x6809 x7834) x7234) (= (x825 160) x653) (= (x6754 64 x7418 7) x8460) (= (x825 256) x1983) (= x781 (x825 128)) (= (x4041 x352 x6999 x653 x1979 x5899) x4291) (= (x825 256) x7699) (= (x825 288) x593) (= x6060 (x6754 x4801 x2232 x5324)) (= x141 (x5919 x4801 x8289)) (= (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776) x4761) (= x3253 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147)) (= x6999 (x825 128)) (= (x6754 x352 x4242 x5347) x7290) (= (x825 128) x4242) (= x3825 (x4041 x4801 x1351 x7080 x611 x5938)) (<= 32 x4801) (= x4651 (x825 128)) (= (x825 128) x8047) (= x7080 (x825 160)) (= (ite (= 0 x352) x7878 (ite (>= 32 x352) x3119 (ite (<= x352 64) x7290 (ite (>= 96 x352) x7234 (ite (<= x352 128) x4291 (ite (>= 160 x352) x747 x3826)))))) x2470) (= x1351 (x825 128)) (= (x825 128) x8553) (= (x825 224) x5799) (<= x4801 224) (= (x825 128) x7411) (= x5899 (x825 224)) (= (x825 320) x4776) (= x7927 (x6754 64 x4252 (ite (>= 32 x4801) x141 (ite (>= 64 x4801) x6060 (ite (>= 96 x4801) x1044 (ite (>= 128 x4801) x3825 (ite (>= 160 x4801) x8076 (ite (<= x4801 192) x3253 x4761)))))))) (= (x825 160) x4774) (= x7834 (x825 192)) (= (x825 192) x1620) (= x1602 (x825 256)) (= (x5919 x352 x7287) x3119) (= x7997 (x825 160)) (= x10 (x825 256)) (= x4801 (x7553 (- x3956 128))) (= x2531 (x825 192)) (= x5347 (x825 160)) (= (x3541 x7927) x3391) (= (x825 288) x4683) (= (x825 224) x5938) (= x4782 (x825 160)) (= x2232 (x825 128)) (= (x825 224) x2868) (= (x825 288) x8147) (= x6809 (x825 160)) (= x1044 (x1300 x4801 x781 x5176 x1674)) (= (x825 128) x6794) (= (x825 128) x3635) (= (x825 160) x5353) (= x1674 (x825 192)) (= (x825 160) x5324) (= x7837 (x8120 (+ x8546 128))) (= (x6292 x352 x8047 x418 x8424 x2868 x7699) x747) (= (x825 256) x7469) (= (x825 160) x418) (= x2659 (x825 224)) (= (x825 192) x8424) (= (x825 224) x4877) (= x3902 (= 0 x3391)) (= x1979 (x825 192)) (= (x8120 (+ x8546 128)) x1377) (= (x825 192) x1324))) (not x4852)) x2916))) (=> x7770 x7918))))))))) (=> (and (not x2158) (= x5296 0)) x285)))))))
(assert (x5886 x7715))
(assert (= x4989 (and x1389 (not x5129))))
(assert (x308 x515))
(assert (x308 x6131))
(assert (x308 x3284))
(assert (x5602 x5034))
(assert (=> (>= 10000 x4188) (= (x5346 x4188) 0)))
(assert (x308 x3668))
(assert (= (x5346 (x6754 64 x4327 12)) (x6754 64 x4327 12)))
(assert (=> (<= x6373 10000) (= (x5346 x6373) 0)))
(assert (= (x4041 x3019 x3862 x1710 x715 x7694) (x5346 (x4041 x3019 x3862 x1710 x715 x7694))))
(assert (x308 x6919))
(assert (= (x6754 64 x993 36) (x5346 (x6754 64 x993 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x4982 x31 x2830 x5306 x2456)))
(assert (x308 x6213))
(assert (= x752 (and x6886 (not x1922))))
(assert (= (x4162 (x4041 x4982 x31 x2830 x5306 x2456)) x31))
(assert (x308 x2053))
(assert (=> (>= 10000 x7344) (= 0 (x5346 x7344))))
(assert (x308 x1207))
(assert (x308 x4609))
(assert (x3057 x5587))
(assert (x308 x4323))
(assert (x308 x6175))
(assert (x308 x3509))
(assert (= (and x193 (not x7445)) x2991))
(assert (x308 x5999))
(assert (= (=> (and (= x6077 x2700) (= x5116 x7996) (= x5744 x4429) (= x245 x801) (= x5269 x7796) (= x5225 x607) (= x7845 x7125) (= x2694 x4398) (= x8279 x4919) (= x7282 x3613) (= x3708 x6389) (= x546 x6870) (= x5666 x3530)) x178) x5156))
(assert (x308 x1142))
(assert (= (x4162 (x4041 x4838 x4788 x6549 x5334 x6859)) x4788))
(assert (x308 x3412))
(assert (x308 x1236))
(assert (x308 x8555))
(assert (x308 x6685))
(assert (=> (>= 10000 x7322) (= 0 (x5346 x7322))))
(assert (x308 x3147))
(assert (x3057 x3948))
(assert (= x555 (x4162 (x6754 x5494 x555 x6037))))
(assert (x308 x3901))
(assert (x308 x8055))
(assert (x308 x5192))
(assert (x308 x6730))
(assert (x308 x4295))
(assert (= 64 (x5881 (x6754 64 x7572 6))))
(assert (x308 x6124))
(assert (x308 x5559))
(assert (x308 x1499))
(assert (x308 x4547))
(assert (= (and x8538 (not x1800)) x5736))
(assert (x308 x2356))
(assert (x308 x7358))
(assert (x308 x2027))
(assert (not (x2741 (x6754 64 x993 36))))
(assert (x308 x5675))
(assert (x308 x5609))
(assert (x308 x3355))
(assert (= (x6292 x4838 x8171 x5375 x8084 x4487 x540) (x5346 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (x308 x2019))
(assert (= (x5346 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)) (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)))
(assert (not (x2741 (x8161 x516 x7173 x1681 x4176 x2423 x3263 x277 x5649))))
(assert (x308 x8041))
(assert (x308 x6173))
(assert (x308 x6099))
(assert (x308 x1431))
(assert (=> (>= 10000 x4774) (= 0 (x5346 x4774))))
(assert (=> (>= 10000 x8433) (= (x5346 x8433) 0)))
(assert (x308 x3077))
(assert (x308 x7057))
(assert (= (x5346 (x6292 x3019 x4312 x4101 x3816 x5001 x1691)) (x6292 x3019 x4312 x4101 x3816 x5001 x1691)))
(assert (=> (>= 10000 x5966) (= 0 (x5346 x5966))))
(assert (x308 x7139))
(assert (= (x6754 64 x3285 6) (x5346 (x6754 64 x3285 6))))
(assert (x308 x855))
(assert (= (x4162 (x1300 x8305 x7028 x1718 x1000)) x7028))
(assert (x308 x6794))
(assert (x308 x7745))
(assert (x308 x6787))
(assert (x308 x409))
(assert (x308 x3661))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x352 x8047 x418 x8424 x2868 x7699)))
(assert (= (and x3745 (not x5689)) x4629))
(assert (= (and x2309 x7073) x3026))
(assert (x308 x7216))
(assert (x308 x5658))
(assert (= (=> (and (= 0 x2573) (= x1372 1) (= x6350 x2159) (= x1589 x5088) (= x6970 x7220) (= x4680 x3188)) x4656) x3429))
(assert (=> (>= 10000 x1674) (= (x5346 x1674) 0)))
(assert (x308 x89))
(assert (x308 x5891))
(assert (< 10000 (x6292 x8305 x4409 x3735 x4724 x5489 x7293)))
(assert (=> (>= 10000 x596) (= 0 (x5346 x596))))
(assert (= (or x6196 x6694) x6838))
(assert (= (x932 (x4041 x4203 x3492 x6286 x1991 x7015)) x6286))
(assert (= (x5881 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776)) x4801))
(assert (x308 x874))
(assert (x308 x7997))
(assert (x308 x3495))
(assert (x308 x3280))
(assert (= x5470 (x932 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349))))
(assert (= (x4162 (x6292 x5086 x3403 x3380 x6212 x8230 x7797)) x3403))
(assert (< (x4041 x1185 x144 x3889 x2914 x2129) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x308 x6))
(assert (= x1198 (x5881 (x6292 x1198 x8188 x2116 x5208 x7624 x827))))
(assert (x308 x5910))
(assert (x308 x1021))
(assert (= x3715 (x3071 (x8161 x2135 x2684 x6495 x3284 x3715 x2273 x377 x7198))))
(assert (= x2000 (=> (and (and (= (x7864 128) x4323) (= (= x4727 x4323) x2840)) (or (and (and (= x2746 (x7864 128)) (= (ite (> x2746 0) 1 0) x350)) x2840) (and (not x2840) (= (ite x2840 1 0) x350)))) x3398)))
(assert (x792 x7135))
(assert (= (x5346 (x6754 x4801 x2232 x5324)) (x6754 x4801 x2232 x5324)))
(assert (=> (<= x7418 10000) (= (x5346 x7418) 0)))
(assert (= (and x1818 x4939) x4091))
(assert (> (x6292 x1391 x7138 x7296 x1932 x3069 x8182) 10000))
(assert (x308 x5480))
(assert (= x7844 (x3587 (x6292 x1185 x6425 x8518 x6985 x6699 x7844))))
(assert (= (or (and x1827 x648) (and x4942 x7092) (and x1696 x4623) (and x3804 x1385) (and x1309 x4192) (and x5386 x7663) (and x6332 x7971) (and x1089 x4091) (and x3007 x2971)) x6816))
(assert (x308 x1011))
(assert (=> (<= x602 10000) (= 0 (x5346 x602))))
(assert (= x382 (x4162 (x6292 x7051 x382 x8284 x7275 x7761 x5763))))
(assert (> (x1300 x4727 x3458 x596 x714) 10000))
(assert (x308 x269))
(assert (= x7764 (and (not x4494) x3314)))
(assert (x308 x8083))
(assert (x3057 x5658))
(assert (x308 x4840))
(assert (= (x5346 (x6754 64 x3285 36)) (x6754 64 x3285 36)))
(assert (x308 x1573))
(assert (=> (<= x7836 10000) (= (x5346 x7836) 0)))
(assert (x308 x1306))
(assert (x308 x5132))
(assert (x308 x3710))
(assert (x308 x4356))
(assert (x308 x2227))
(assert (x308 x8520))
(assert (x308 x7468))
(assert (< 10000 (x4041 x5086 x2153 x8353 x3686 x1447)))
(assert (x308 x8391))
(assert (x308 x3316))
(assert (x308 x2567))
(assert (x308 x436))
(assert (= x8323 (x3071 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (= x1394 (and x1401 (not x2962))))
(assert (= (x932 (x4041 x4838 x4788 x6549 x5334 x6859)) x6549))
(assert (x308 x793))
(assert (x2741 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (= (x4162 (x6754 64 x6287 3)) x6287))
(assert (x792 x8357))
(assert (=> (>= 10000 x7133) (= 0 (x5346 x7133))))
(assert (x308 x7247))
(assert (= (and x252 (not x7823)) x394))
(assert (x308 x495))
(assert (=> (>= 10000 x6957) (= 0 (x5346 x6957))))
(assert (x308 x3809))
(assert (x308 x814))
(assert (x308 x6703))
(assert (= (x3071 (x4041 x5086 x2153 x8353 x3686 x1447)) x1447))
(assert (= (and x3192 x8436) x7231))
(assert (x308 x843))
(assert (= (=> (= (= x3642 0) x2786) (and (=> (and (and (<= x2236 255) (= (x6754 64 x551 11) x4726) (= (> x2236 3) x3208) (= (x3212 x4726) x2236)) x2786) (and (=> (and (not x3208) (= (= 2 x2236) x5468)) (and (=> (and x5468 (and (= (= (x7810 518) (x3107 228)) x353) x353 (= x5272 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (x1108 x2331) x5664) (= 1084734224 x1813) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1523) x4075) (= x113 (x6754 64 x2448 4)) (<= 1 x5047) x5002 x5035 (= (x8120 (+ x2964 x4075)) x1573) (= 256 x8341) (= x4119 (x6358 128)) (<= x2448 65535) (= x3709 (x8120 (+ x1231 486))) (= (x8120 (+ 31 x4119)) x8178) (= 0 x6175) (= x2572 x2448) (= 290 x1286) (= 160 x8301) (= x2585 false) (= false x8462) (= (x6754 64 1 x113) x2331) (<= x4870 127) (= (x2321 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8178) x1231) (<= 356 x1168) (= (x8120 (+ x8300 31)) x1523) (= x1168 (x7553 (- x1573 290))) (= x8487 0) (= (x8120 (+ 32 x3709)) x2964) (= x1168 x5687) (= (= (x3107 164) 64) x6390) (= x5047 (x8219 x2730)) x6390 (<= 356 x5687) (<= x4870 127) (= x4705 x5372) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x5687 4)) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x5687 4))) (< (- x5687 4) 160))) x3964) (= x8300 (x6848 224)) (= x5002 (= (x7810 486) (x3107 196))) (= (= 34 (x3107 260)) x5035) (= (x7553 (- x3709 294)) x5834))) (and (=> (and (= true x4941) (not x3964)) (and (=> (and (= (and (< 195 x5687) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5687) true)) x319) x4941) (and (=> (not x319) x3781) (=> (and x319 (and (= x2816 (x3340 164)) (= (> x2816 18446744073709551615) x6423))) (and (=> (and (not x6423) (and (= x2465 (> x2832 x5687)) (= x2832 (x8120 (+ 196 x2816))))) (and (=> (and (not x2465) (and (<= 356 x5687) (= x7026 (x3340 260)) (= x7548 (< 18446744073709551615 x7026)) (<= x5687 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> (and (not x7548) (and (= (x8120 (+ x7026 292)) x6662) (= x7872 (< x5687 x6662)))) (and (=> (and (not x7872) (and (= x4216 x1548) (= false x96) (= x8060 x3190) (= (x7156 160) x4080) (= x4183 x2627) (= x839 x4025) (= x1781 x6668) (= x805 x3173) (= x4303 x644) (= x2448 x1365) (= x2426 x5318) (= x5268 x1748) (= 1 x4350) (= x5051 x5263) (= x3313 (x7156 160)) (= x5029 x3287) (= false x7727) (= (x7156 128) x2091) (= 64 x7969) (= (x7156 128) x175) (= x1339 x3597))) x5753) (=> x7872 x8039))) (=> x7548 x6313))) (=> x2465 x8039))) (=> x6423 x6313))))) (=> (not x4941) x3781))) (=> x3964 x3781))) (=> (and (and (= x7527 false) (= 4 x2407) (= true x6710)) (not x5468)) x6381))) (=> (and (and (= x1905 false) (= x262 true) (= 36 x2407)) x3208) x6381))) (=> (and (and (= false x7598) (= 4 x2407) (= x8128 true)) (not x2786)) x6381))) x6651))
(assert (x308 x6231))
(assert (x308 x4457))
(assert (x308 x5364))
(assert (x308 x2188))
(assert (x308 x4818))
(assert (x308 x2966))
(assert (x308 x2156))
(assert (x2741 34591783479076665078880830389440322441076534786459098783165778951140825654127))
(assert (> (x6754 64 1 x4465) 10000))
(assert (= x4178 (x3071 (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889))))
(assert (x308 x7293))
(assert (= 3 (x932 (x6754 64 x2448 3))))
(assert (= (x4162 (x6754 64 x1041 2)) x1041))
(assert (x308 x1492))
(assert (= (x932 (x1300 x4801 x781 x5176 x1674)) x5176))
(assert (x792 x1861))
(assert (= x3762 (and x2911 x7862)))
(assert (x308 x6081))
(assert (x308 x681))
(assert (= (x932 (x3933 x4838 x244 x8098 x2003 x7438 x53 x3050)) x8098))
(assert (=> (<= x3403 10000) (= 0 (x5346 x3403))))
(assert (=> (<= x7624 10000) (= 0 (x5346 x7624))))
(assert (x308 x1114))
(assert (not (x2741 (x6754 64 x2323 36))))
(assert (= (x3071 (x3933 x4301 x6366 x514 x4158 x2955 x1725 x4700)) x2955))
(assert (x308 x5799))
(assert (x308 x7464))
(assert (= (and x4914 x1643) x2939))
(assert (x308 x2003))
(assert (=> (>= 10000 x8389) (= (x5346 x8389) 0)))
(assert (= x4198 (and x761 x7746)))
(assert (x308 x3211))
(assert (x308 x4813))
(assert (= x953 x5423))
(assert (= (x5346 (x6292 x1198 x8188 x2116 x5208 x7624 x827)) (x6292 x1198 x8188 x2116 x5208 x7624 x827)))
(assert (x308 x7423))
(assert (x308 x4315))
(assert (x792 x1863))
(assert (= (x932 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)) x7065))
(assert (x308 x2839))
(assert (= x888 (and x6322 x4677)))
(assert (x308 x7452))
(assert (= x6743 (or x4224 x804 x1792)))
(assert (x308 x6657))
(assert (x308 x2378))
(assert (=> (>= 10000 x6286) (= 0 (x5346 x6286))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4041 x4838 x4788 x6549 x5334 x6859)))
(assert (x308 x3441))
(assert (x308 x206))
(assert (x308 x356))
(assert (x2741 34591783479076665078880830389440322436311164112910831269305739813291000201216))
(assert (x308 x6234))
(assert (x308 x5721))
(assert (x308 x3149))
(assert (= (and x4108 x4540) x410))
(assert (= x2375 (x4162 (x6754 64 x2375 2))))
(assert (x308 x4053))
(assert (x308 x3112))
(assert (=> (>= 10000 x3085) (= (x5346 x3085) 0)))
(assert (x308 x7025))
(assert (x308 x283))
(assert (x308 x4229))
(assert (x308 x6243))
(assert (x308 x1423))
(assert (not (x2741 (x4041 x5494 x7249 x5828 x4400 x2630))))
(assert (x308 x1004))
(assert (= (and (not x1303) x1999) x1792))
(assert (= x8044 (=> (and (or (and (not x6466) (and (= x5080 (x8050 x1322)) (= (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108) x34) (= (x8139 192) x6233) (= x8442 (x8120 (+ x7723 128))) (= (x8120 (+ x7723 128)) x6180) (= x5723 (x8120 (+ x7723 96))) (= x5535 (x6754 x5494 x555 x6037)) (= (x8050 x7723) x7138) (= (x8120 (+ 96 x7723)) x2363) (= x5545 (x8139 224)) (= x2173 (x8139 224)) (= x7667 (x8139 224)) (= (x8050 x5622) x1967) (= (x8139 192) x5828) (= (x8050 x5723) x2821) (= (x8139 288) x5413) (= x555 (x8139 160)) (= x7301 (x8120 (+ 96 x7723))) (= (x8050 x5190) x3549) (= x2378 (x8120 (+ 96 x7723))) (<= x5494 224) (= x777 (x8050 x7723)) (= x5905 (x1300 x1391 x380 x5080 x487)) (= x7773 (x4041 x5494 x7249 x5828 x4400 x2630)) (= x126 (x8139 192)) (= (x8050 x4881) x6032) (= x3069 (x8050 x2378)) (= (x8139 320) x5349) (= (x6292 x5494 x6256 x6233 x6797 x424 x5377) x2468) (= x5743 (ite (= (ite (= 0 x5494) x3337 (ite (>= 32 x5494) x3691 (ite (>= 64 x5494) x5535 (ite (<= x5494 96) x2987 (ite (<= x5494 128) x7773 (ite (<= x5494 160) x2468 (ite (<= x5494 192) x6568 x34))))))) (ite (= 0 x1391) x7203 (ite (>= 32 x1391) x7373 (ite (<= x1391 64) x23 (ite (<= x1391 96) x5905 (ite (<= x1391 128) x4973 (ite (<= x1391 160) x6133 (ite (<= x1391 192) x6354 x5657)))))))) 1 0)) (= x6256 (x8139 160)) (= x8182 (x8050 x6180)) (= x424 (x8139 256)) (= x7249 (x8139 160)) (= x7203 (x4383 0)) (= (x8050 x101) x2879) (= (x8050 x3838) x2957) (= x6797 (x8139 224)) (= x3691 (x5919 x5494 x6209)) (= (x8139 160) x7704) (= (x8050 x7723) x677) (= x5377 (x8139 288)) (= (x8139 256) x2630) (= (x8139 256) x398) (= x1322 (x8120 (+ 32 x7723))) (= (x8050 x2088) x3616) (= x5190 (x8120 (+ 32 x7723))) (= x6605 (x8139 288)) (= (x8120 (+ x7723 32)) x4138) (= x7296 (x8050 x2105)) (= (x8120 (+ x7723 32)) x2105) (= x764 (x8139 256)) (= x2987 (x1300 x5494 x4421 x4614 x7667)) (= (x8050 x2363) x5169) (= (x8139 192) x5470) (= (x8050 x4384) x7065) (= (x8120 (+ 192 x7723)) x101) (= x6634 (x8050 x7301)) (= (x8120 (+ 160 x7723)) x5622) (= x7373 (x5919 x1391 x677)) (= x3736 (x8050 x7539)) (= x5657 (x8161 x1391 x6091 x3549 x1584 x6634 x3806 x6032 x2879)) (= (x6754 x1391 x2471 x8074) x23) (= x1932 (x8050 x1171)) (= (x8139 192) x6037) (= (x8139 128) x5494) (= x4614 (x8139 192)) (= x3806 (x8050 x8442)) (= x3838 (x8120 (+ x7723 128))) (= (x8139 352) x7108) (= (x8139 320) x1784) (= x8074 (x8050 x4138)) (= x6781 (x8050 x7723)) (= x6568 (x3933 x5494 x1298 x5470 x5545 x398 x6605 x5349)) (= x2471 (x8050 x7723)) (= (x8120 (+ x7723 64)) x1171) (= (x4383 0) x3337) (= (x8139 160) x6209) (= x8070 (x8120 (+ x7723 64))) (= x4400 (x8139 224)) (= x6028 (x8050 x6443)) (>= 224 x1391) (= x7539 (x8120 (+ x7723 32))) (= (x8139 160) x4421) (= x8048 (x8120 (+ x1391 x7723))) (= x2088 (x8120 (+ 64 x7723))) (= x4881 (x8120 (+ 160 x7723))) (= (x4041 x1391 x6781 x3736 x3616 x5169) x4973) (= x6133 (x6292 x1391 x7138 x7296 x1932 x3069 x8182)) (= (x8120 (+ x7723 64)) x6443) (= (x8120 (+ x7723 32)) x4384) (= (x8050 x7723) x380) (= x6354 (x3933 x1391 x777 x7065 x6028 x2821 x2957 x1967)) (= (x8050 x7723) x6091) (= x881 (x8120 (+ x7723 64))) (= x487 (x8050 x8070)) (= (x8139 160) x1298) (= x1584 (x8050 x881)))) (and x6466 (= x6302 x5743))) (= x6466 (= x6302 0))) x7413)))
(assert (x308 x1088))
(assert (x308 x8390))
(assert (x308 x2055))
(assert (= 0 (x5346 106705613605932439001713296114446454776331749937047859905631657259250407702528)))
(assert (=> (>= 10000 x7451) (= 0 (x5346 x7451))))
(assert (= (and x1334 x6837) x2072))
(assert (x308 x2784))
(assert (x308 x2752))
(assert (= x6496 (x2151 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (= (x5881 (x4041 x8305 x8444 x811 x4050 x7088)) x8305))
(assert (not (x2741 (x6754 64 x6287 5))))
(assert (x308 x2972))
(assert (x308 x845))
(assert (x308 x4644))
(assert (= (x4162 (x5919 x4301 x4482)) x4482))
(assert (= x7224 (x2151 (x4041 x1198 x3242 x8275 x7224 x8162))))
(assert (x792 x8163))
(assert (x308 x7624))
(assert (= x5062 (x2151 (x6292 x516 x3800 x1794 x5062 x7487 x7784))))
(assert (x308 x6431))
(assert (x308 x4640))
(assert (= (and x2946 (not x6690)) x3314))
(assert (x308 x5656))
(assert (x308 x6625))
(assert (x308 x8104))
(assert (= (x932 (x6754 64 x7470 36)) 36))
(assert (x308 x86))
(assert (x308 x7469))
(assert (= x1634 (=> (and (= x2448 x2731) (= x2426 x4579) (= x3661 x4183) (= x309 x3173) (= x7905 x8532) (= x644 x7023) (= x4025 x2759) (= x5029 x2833) (= x5263 x4250) (= x4957 x4216) (= x8060 x959) (= x6668 x5341) (= x2045 2) (= 0 x1418) (= x8554 false) (= x2620 x3597) (= true x8319)) x6447)))
(assert (not (x2741 (x6754 64 x8532 36))))
(assert (=> (>= 10000 x7758) (= 0 (x5346 x7758))))
(assert (= x3493 (x5843 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493))))
(assert (= x3394 (=> (and (= 0 x4758) (= x3237 x6615) (= x5481 x3335) (= 2 x3593) (= x6657 x8013) (= x7285 x3531) (= x6615 (x2321 255 x3589)) (= x386 x3409)) x7751)))
(assert (= (and x4394 x7604) x2634))
(assert (x308 x6287))
(assert (=> (>= 10000 x5913) (= (x5346 x5913) 0)))
(assert (x308 x3013))
(assert (= (and x7308 x1980) x4087))
(assert (= (=> (and (= x2280 true) (= x1229 false) (= x7171 36) (= x3342 2) (= x8013 x5940) (= x2442 x3531) (= x2651 0) (= x386 x7111)) x561) x6376))
(assert (x308 x7251))
(assert (= (x5843 (x8161 x5494 x7704 x126 x2173 x764 x5413 x1784 x7108)) x1784))
(assert (x308 x8049))
(assert (= x3319 (=> (= x1118 (> (ite (= x6040 0) x6040 1) 0)) (and (=> (and (not x1118) (and (= x4503 (= 0 x5840)) (or (not x4503) x4503))) x6778) (=> x1118 x5714)))))
(assert (= (x4162 (x3933 x516 x6214 x494 x3112 x3624 x3010 x5024)) x6214))
(assert (x308 x1472))
(assert (x308 x6408))
(assert (x308 x611))
(assert (= x4838 (x5881 (x6292 x4838 x8171 x5375 x8084 x4487 x540))))
(assert (x308 x2551))
(assert (=> (<= x2085 10000) (= (x5346 x2085) 0)))
(assert (=> (>= 10000 x4815) (= 0 (x5346 x4815))))
(assert (not (x2741 (x6754 x4801 x2232 x5324))))
(assert (= (x5346 (x4041 x352 x6999 x653 x1979 x5899)) (x4041 x352 x6999 x653 x1979 x5899)))
(assert (= x4651 (x4162 (x8161 x4801 x4651 x5353 x631 x203 x1602 x4683 x4776))))
(assert (= (and x2547 (not x7770)) x46))
(assert (= x3628 (and x4986 x2929)))
(assert (= x5086 (x5881 (x6754 x5086 x4422 x4929))))
(assert (=> (>= 10000 x7080) (= (x5346 x7080) 0)))
(assert (x308 x7647))
(assert (= (x6754 64 x7572 6) (x5346 (x6754 64 x7572 6))))
(assert (=> (<= x8182 10000) (= (x5346 x8182) 0)))
(assert (= x1835 (and x1643 (not x4914))))
(assert (=> (>= 10000 x1298) (= (x5346 x1298) 0)))
(assert (= x6562 (x5843 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562))))
(assert (x308 x8351))
(assert (x308 x6936))
(assert (=> (>= 10000 x6604) (= (x5346 x6604) 0)))
(assert (x308 x3474))
(assert (x308 x7643))
(assert (= (x1300 x5086 x6071 x7368 x6250) (x5346 (x1300 x5086 x6071 x7368 x6250))))
(assert (x308 x8177))
(assert (x308 x415))
(assert (= x7416 (or x5914 x6211)))
(assert (x308 x1124))
(assert (= (or x5671 x4634) x3513))
(assert (x308 x2957))
(assert (< 10000 (x3933 x7491 x5094 x4580 x7654 x7968 x474 x6562)))
(assert (x308 x7535))
(assert (x308 x1873))
(assert (= x1744 (and x6401 (not x3449))))
(assert (x308 x3258))
(assert (x308 x4762))
(assert (= (x932 (x1300 x2135 x5205 x5858 x2587)) x5858))
(assert (x308 x5007))
(assert (= x2448 (x4162 (x6754 64 x2448 4))))
(assert (x308 x6334))
(assert (x308 x114))
(assert (x308 x7516))
(assert (= (x4162 (x6754 64 x4252 (ite (<= x1185 32) x5946 (ite (<= x1185 64) x301 (ite (>= 96 x1185) x7132 (ite (<= x1185 128) x8307 (ite (<= x1185 160) x5117 (ite (>= 192 x1185) x8181 x2835)))))))) x4252))
(assert (not (x2741 (x6754 64 x3082 100))))
(assert (x308 x616))
(assert (=> (<= x5207 10000) (= (x5346 x5207) 0)))
(assert (= x7787 x649))
(assert (x308 x1451))
(assert (= 4 (x932 (x6754 64 x6287 4))))
(assert (x308 x3816))
(assert (= x3928 (x932 (x3933 x5086 x859 x3928 x7638 x5715 x3924 x458))))
(assert (= (x4162 (x3933 x1185 x7403 x3064 x381 x6679 x6747 x5600)) x7403))
(assert (x308 x516))
(assert (x308 x1026))
(assert (x308 x7392))
(assert (x308 x6909))
(assert (x308 x4050))
(assert (< 10000 (x6292 x4203 x2643 x5854 x1971 x1016 x518)))
(assert (= (or x5158 x5900 x6608) x2714))
(assert (x308 x5550))
(assert (= (and (not x2721) x3246) x7191))
(assert (x308 x1729))
(assert (x308 x3813))
(assert (x308 x1602))
(assert (x308 x5879))
(assert (=> (<= x5553 10000) (= 0 (x5346 x5553))))
(assert (x308 x2131))
(assert (x308 x8042))
(assert (= x6119 (and (not x2929) x4986)))
(assert (= x3976 (and (not x2843) x5484)))
(assert (= x1127 (and x2289 x949)))
(assert (=> (<= x8162 10000) (= (x5346 x8162) 0)))
(assert (= (x932 (x3933 x3019 x6029 x7137 x1434 x8323 x7953 x3493)) x7137))
(assert (x308 x8478))
(assert (x308 x80))
(assert (=> (>= 10000 x1295) (= 0 (x5346 x1295))))
(assert (x308 x5306))
(assert (x308 x6753))
(assert (= (x5346 18446744073709551615) 0))
(assert (x308 x2163))
(assert (= x1227 (and x992 x2248)))
(assert (< 10000 (x6754 64 x1011 11)))
(assert (= x284 (and x4684 (not x7300))))
(assert (x308 x848))
(assert (x308 x2373))
(assert (x308 x5492))
(assert (x308 x2668))
(assert (x5886 x4232))
(assert (not (x2741 (x6754 64 x206 7))))
(assert (= x7588 (and (not x6987) x1278)))
(assert (x308 x1786))
(assert (=> (<= x3519 10000) (= 0 (x5346 x3519))))
(assert (= (x5346 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x308 x7019))
(assert (< (x6754 64 1 x113) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= x7508 false) (= x4319 0) (= x4508 true)) x651) x2362))
(assert (=> (>= 10000 x3067) (= (x5346 x3067) 0)))
(assert (= x3494 (and (not x1159) x4016)))
(assert (x308 x5901))
(assert (x308 x6019))
(assert (x308 x5768))
(assert (= x669 (or x7551 x6240)))
(assert (x308 x999))
(assert (= (x5881 (x6754 64 x6894 11)) 64))
(assert (x308 x6775))
(assert (x308 x5778))
(assert (x308 x7656))
(assert (= x1391 (x5881 (x4041 x1391 x6781 x3736 x3616 x5169))))
(assert (= (and (not x2210) x3339) x2114))
(assert (x308 x853))
(assert (= x137 (and x5092 (not x7091))))
(assert (x308 x6236))
(assert (= x8517 (and x6499 (not x2342))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6292 x4801 x7411 x4782 x1324 x2659 x1983)))
(assert (= (and x5756 (not x3949)) x7200))
(assert (= (x5346 (x6754 x7491 x4888 x3832)) (x6754 x7491 x4888 x3832)))
(assert (x308 x8188))
(assert (x308 x7936))
(assert (x308 x1235))
(assert (x308 x1237))
(assert (= (=> (and (= 0 x6900) (= x7629 x4251) (= x4604 x386) (= x8013 x7429) (= (x2321 255 x1074) x7629) (= x4125 2) (= x3531 x6842) (= x5355 x758)) x652) x624))
(assert (x308 x1358))
(assert (x308 x6817))
(assert (x308 x4804))
(assert (= (and x2928 x2577) x5386))
(assert (not (x2741 (x6754 64 x4343 3))))
(assert (= x6756 (x4162 (x6754 64 x6756 (ite (<= x4982 32) x2607 (ite (>= 64 x4982) x6590 (ite (<= x4982 96) x1654 (ite (<= x4982 128) x2386 (ite (>= 160 x4982) x4970 (ite (>= 192 x4982) x6333 x1291))))))))))
(assert (x308 x7157))
(assert (x308 x6605))
(assert (< 10000 (x6754 64 x4343 3)))
(assert (> (x6292 x5494 x6256 x6233 x6797 x424 x5377) 10000))
(assert (x308 x3753))
(assert (= (and x5370 x2565) x1689))
(assert (x308 x1185))
(assert (x308 x3852))
(assert (x308 x2403))
(assert (x308 x1033))
(assert (x308 x5096))
(assert (=> (<= x380 10000) (= 0 (x5346 x380))))
(assert (= x4778 (x4162 (x3933 x2135 x4778 x5910 x5320 x2195 x6072 x411))))
(assert (= (x5346 (x5919 32 x1959)) (x5919 32 x1959)))
(assert (not (x2741 (x4041 x5086 x2153 x8353 x3686 x1447))))
(assert (x308 x5116))
(assert (= (x3071 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x1183))
(assert (x308 x6541))
(assert (= x6809 (x932 (x1300 x352 x8553 x6809 x7834))))
(assert (= x5192 (x3071 (x3933 x4727 x770 x7344 x6496 x5192 x5842 x5195))))
(assert (= x5958 (and x2570 x1653)))
(assert (not (x2741 (x6754 x516 x1484 x7371))))
(assert (x308 x3624))
(assert (= x1479 (and (not x2838) x1921)))
(assert (x308 x1299))
(assert (= (x5346 (x5919 x5494 x6209)) (x5919 x5494 x6209)))
(assert (= (and x1631 (not x4496)) x282))
(assert (x308 x8408))
(assert (x308 x404))
(assert (not (x2741 (x6754 64 x4327 12))))
(assert (=> (<= x1386 10000) (= (x5346 x1386) 0)))
(assert (< (x8161 x7655 x6281 x2581 x5675 x4178 x4188 x1297 x5889) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2741 (x8161 x4203 x6660 x5879 x4168 x3550 x6399 x1265 x1429))))
(assert (x308 x7866))
(assert (=> (<= x1391 10000) (= 0 (x5346 x1391))))
(assert (x308 x1978))
(assert (= x2514 (and x2977 x7831)))
(assert (x308 x4293))
(assert (= (x932 (x6754 64 x4327 12)) 12))
(assert (= x4688 (or x4988 x8291)))
(assert (= 0 (x5346 35477284059277649309253622239531857712935939630608236286772267603529442882419)))
(assert (=> (<= x8323 10000) (= 0 (x5346 x8323))))
(assert (x5602 x6828))
(assert (= x4801 (x5881 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (=> (>= 10000 x7991) (= (x5346 x7991) 0)))
(assert (x308 x5412))
(assert (x308 x2700))
(assert (x308 x3694))
(assert (=> (<= x7275 10000) (= (x5346 x7275) 0)))
(assert (= x7273 (x4162 (x6292 x4982 x7273 x8186 x1537 x706 x4512))))
(assert (x308 x3050))
(assert (x308 x6900))
(assert (x2741 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (not (x2741 (x5919 x352 x7287))))
(assert (x308 x1972))
(assert (x308 x3017))
(assert (< (x5919 x3019 x5310) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6678 (x3587 (x8161 x4727 x3273 x182 x5199 x6501 x6678 x5578 x1420))))
(assert (x308 x4798))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6754 x4838 x6412 x7245)))
(assert (x308 x4090))
(assert (=> (<= x6051 10000) (= 0 (x5346 x6051))))
(assert (x5602 x3292))
(assert (< (x8161 x3019 x570 x6086 x2332 x681 x2792 x3286 x8297) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x134 10000) (= 0 (x5346 x134))))
(assert (x308 x5555))
(assert (= (and x2158 x306) x2314))
(assert (x308 x6559))
(assert (= (x932 (x3933 x1198 x6764 x4630 x5724 x1183 x164 x7322)) x4630))
(assert (x308 x5378))
(assert (x308 x2081))
(assert (=> (<= x6764 10000) (= (x5346 x6764) 0)))
(assert (= x6672 (and x4004 x890)))
(assert (x308 x3514))
(assert (= (x932 (x1300 x4301 x3939 x5461 x4272)) x5461))
(assert (= x7797 (x3587 (x6292 x5086 x3403 x3380 x6212 x8230 x7797))))
(assert (x308 x2159))
(assert (= (x5881 (x6292 x516 x3800 x1794 x5062 x7487 x7784)) x516))
(assert (= (x932 (x1300 x4982 x3441 x1676 x4732)) x1676))
(assert (=> (>= 10000 x7866) (= 0 (x5346 x7866))))
(assert (=> (>= 10000 x8188) (= 0 (x5346 x8188))))
(assert (< 10000 (x5919 x4838 x7149)))
(assert (x308 x2467))
(assert (x308 x6911))
(assert (= (x932 (x4041 x4727 x7444 x344 x2019 x3523)) x344))
(assert (= 32 (x5881 (x5919 32 x6410))))
(assert (= (and x8203 (not x2061)) x2588))
(assert (x308 x7254))
(assert (=> (>= 10000 x3458) (= 0 (x5346 x3458))))
(assert (x308 x6229))
(assert (= 12 (x932 (x6754 64 x3303 12))))
(assert (x308 x5947))
(assert (= (x2151 (x6292 x5086 x3403 x3380 x6212 x8230 x7797)) x6212))
(assert (= (and (not x1647) x3524) x3574))
(assert (= x1620 (x2151 (x3933 x4801 x6794 x4774 x1620 x5799 x7469 x8147))))
(assert (x2569 x84))
(assert (x308 x7344))
(assert (=> (>= 10000 x7287) (= (x5346 x7287) 0)))
(assert (> (x1300 x4301 x3939 x5461 x4272) 10000))
(assert (x308 x5618))
(assert (x308 x1091))
(assert (= (x4162 (x6754 64 x2253 10)) x2253))
(assert (x308 x3550))
(assert (not (x2741 (x6754 64 x2375 2))))
(assert (x308 x4470))
(assert (x308 x7439))
(assert (= (and (not x6139) x8072) x306))
(assert (=> (>= 10000 x10) (= 0 (x5346 x10))))
(assert (x308 x757))
(assert (=> (<= x3112 10000) (= (x5346 x3112) 0)))
(assert (x308 x2284))
(assert (x308 x1619))
(assert (x308 x5104))
(assert (= (=> (= (= 0 x4032) x499) (and (=> (and x499 (and (= x3207 (x6754 64 x6421 11)) (= x3318 (x174 x3207)) (<= x3318 255) (= x4966 (< 3 x3318)))) (and (=> (and (not x4966) (= (= x3318 2) x3363)) (and (=> (and (and (= x1153 true) (= x758 4) (= false x3575)) (not x3363)) x624) (=> (and (and (= x3511 (x6754 64 1 x4465)) (= (x6754 64 x6287 4) x4465) (= x1829 (x1108 x3511)) (= x4914 (= 0 x5534)) (<= x6287 65535)) x3363) (and (=> (and (not x4914) (= (< x5534 x1829) x4639)) (and (=> (and (and (= x758 4) (= true x6777) (= x7427 false)) x4639) x624) (=> (and (not x4639) (= x2485 x5534)) x5477))) (=> (and (= x2485 x1829) x4914) x5477))))) (=> (and x4966 (and (= x2765 false) (= true x7151) (= 36 x758))) x624))) (=> (and (and (= x7370 true) (= 4 x758) (= false x6430)) (not x499)) x624))) x7205))
(assert (x308 x2458))
(assert (x308 x6680))
(assert (x308 x2597))
(assert (x308 x7575))
(assert (x308 x4747))
(assert (= x3346 (x4162 (x6754 x1198 x3346 x5783))))
(assert (x308 x3523))
(assert (x308 x764))
(assert (= x1305 (=> (and (= (= 0 x1137) x3869) (or (not x3869) x3869)) x6404)))
(assert (x308 x6263))
(assert (x308 x1778))
(assert (x308 x1852))
(assert (=> (<= x494 10000) (= 0 (x5346 x494))))
(assert (=> (<= x2430 10000) (= 0 (x5346 x2430))))
(assert (= (x4162 (x6754 64 x3125 12)) x3125))
(assert (x308 x1270))
(assert (not (x2741 (x5919 32 x6414))))
(assert (x308 x2464))
(assert (= x7051 (x5881 (x3933 x7051 x204 x7756 x2652 x7893 x3519 x743))))
(assert (x308 x4999))
(check-sat)
(exit)
