(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x912 () Int)
(declare-fun x831 () Bool)
(declare-fun x98 () Int)
(declare-fun x1092 () Int)
(declare-fun x190 () Bool)
(declare-fun x652 () Bool)
(declare-fun x1164 () Int)
(declare-fun x494 () Int)
(declare-fun x595 () Int)
(declare-fun x684 (Int) Int)
(declare-fun x970 () Int)
(declare-fun x341 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1109 () Int)
(declare-fun x844 () Int)
(declare-fun x549 () Int)
(declare-fun x340 () Int)
(declare-fun x89 () Bool)
(declare-fun x893 () Bool)
(declare-fun x110 () Bool)
(declare-fun x584 (Int Int) Int)
(declare-fun x1119 () Int)
(declare-fun x734 () Int)
(declare-fun x433 () Int)
(declare-fun x222 () Int)
(declare-fun x497 (Int) Int)
(declare-fun x100 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1123 () Bool)
(declare-fun x410 () Int)
(declare-fun x235 () Bool)
(declare-fun x767 () Bool)
(declare-fun x508 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x103 () Int)
(declare-fun x980 () Bool)
(declare-fun x133 () Int)
(declare-fun x41 () Int)
(declare-fun x24 () Bool)
(declare-fun x837 () Bool)
(declare-fun x810 () Bool)
(declare-fun x9 () Int)
(declare-fun x214 () Int)
(declare-fun x803 () Int)
(declare-fun x888 () Int)
(declare-fun x576 () Bool)
(declare-fun x514 () Bool)
(declare-fun x336 () Int)
(declare-fun x552 () Bool)
(declare-fun x461 () Int)
(declare-fun x873 () Int)
(declare-fun x601 () Int)
(declare-fun x1146 () Int)
(declare-fun x895 () Int)
(declare-fun x1079 () Int)
(declare-fun x539 () Bool)
(declare-fun x891 () Bool)
(declare-fun x536 () Bool)
(declare-fun x939 () Int)
(declare-fun x875 () Int)
(declare-fun x330 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x94 () Int)
(declare-fun x833 (Int Int) Int)
(declare-fun x515 () Int)
(declare-fun x436 () Bool)
(declare-fun x142 () Int)
(declare-fun x1174 (Int) Int)
(declare-fun x154 () Bool)
(declare-fun x462 () Int)
(declare-fun x26 () Bool)
(declare-fun x553 () Int)
(declare-fun x112 () Int)
(declare-fun x713 () Int)
(declare-fun x782 () Int)
(declare-fun x1153 () Bool)
(declare-fun x175 () Bool)
(declare-fun x357 () Int)
(declare-fun x944 () Int)
(declare-fun x1103 (Int Int) Int)
(declare-fun x1075 () Int)
(declare-fun x1086 () Int)
(declare-fun x604 () Int)
(declare-fun x80 () Int)
(declare-fun x361 () Bool)
(declare-fun x616 () Int)
(declare-fun x202 () Bool)
(declare-fun x738 () Bool)
(declare-fun x990 () Int)
(declare-fun x692 () Int)
(declare-fun x894 () Int)
(declare-fun x807 () Int)
(declare-fun x641 () Int)
(declare-fun x387 () Int)
(declare-fun x404 () Int)
(declare-fun x117 () Int)
(declare-fun x292 () Int)
(declare-fun x1117 () Bool)
(declare-fun x885 () Int)
(declare-fun x240 () Int)
(declare-fun x309 () Bool)
(declare-fun x498 () Bool)
(declare-fun x1152 (Int) Int)
(declare-fun x85 () Bool)
(declare-fun x84 () Bool)
(declare-fun x548 () Int)
(declare-fun x858 () Bool)
(declare-fun x147 () Int)
(declare-fun x623 () Int)
(declare-fun x1009 () Int)
(declare-fun x867 () Bool)
(declare-fun x764 () Int)
(declare-fun x1 () Int)
(declare-fun x1018 () Int)
(declare-fun x1104 () Int)
(declare-fun x863 () Int)
(declare-fun x128 () Bool)
(declare-fun x57 () Int)
(declare-fun x73 () Bool)
(declare-fun x274 () Int)
(declare-fun x138 () Int)
(declare-fun x314 () Bool)
(declare-fun x768 () Int)
(declare-fun x1126 () Bool)
(declare-fun x213 () Int)
(declare-fun x21 () Int)
(declare-fun x555 () Int)
(declare-fun x458 () Bool)
(declare-fun x271 () Int)
(declare-fun x1045 () Int)
(declare-fun x69 () Int)
(declare-fun x2 () Bool)
(declare-fun x683 () Bool)
(declare-fun x806 () Int)
(declare-fun x493 () Int)
(declare-fun x1064 () Bool)
(declare-fun x1194 (Int) Int)
(declare-fun x643 () Int)
(declare-fun x945 () Bool)
(declare-fun x665 () Int)
(declare-fun x699 () Int)
(declare-fun x760 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1047 () Int)
(declare-fun x892 () Int)
(declare-fun x261 () Bool)
(declare-fun x1026 () Int)
(declare-fun x265 () Bool)
(declare-fun x311 () Bool)
(declare-fun x979 () Int)
(declare-fun x194 () Int)
(declare-fun x985 () Int)
(declare-fun x231 () Int)
(declare-fun x301 () Bool)
(declare-fun x582 () Int)
(declare-fun x922 (Int Int) Int)
(declare-fun x619 (Int) Int)
(declare-fun x997 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1032 () Int)
(declare-fun x43 () Int)
(declare-fun x682 () Int)
(declare-fun x776 () Bool)
(declare-fun x268 () Int)
(declare-fun x901 (Int) Int)
(declare-fun x781 () Int)
(declare-fun x622 () Bool)
(declare-fun x159 (Int) Int)
(declare-fun x392 () Int)
(declare-fun x812 () Int)
(declare-fun x345 () Int)
(declare-fun x312 () Int)
(declare-fun x1179 () Int)
(declare-fun x725 () Int)
(declare-fun x769 () Int)
(declare-fun x890 () Int)
(declare-fun x986 () Int)
(declare-fun x122 () Bool)
(declare-fun x935 () Bool)
(declare-fun x587 () Int)
(declare-fun x108 () Int)
(declare-fun x853 () Int)
(declare-fun x12 () Bool)
(declare-fun x822 () Int)
(declare-fun x747 () Bool)
(declare-fun x389 () Int)
(declare-fun x899 () Int)
(declare-fun x399 () Int)
(declare-fun x506 () Int)
(declare-fun x382 () Int)
(declare-fun x42 () Int)
(declare-fun x534 () Bool)
(declare-fun x439 () Bool)
(declare-fun x1002 () Int)
(declare-fun x428 () Bool)
(declare-fun x864 () Bool)
(declare-fun x766 () Int)
(declare-fun x1131 () Bool)
(declare-fun x590 () Int)
(declare-fun x460 () Bool)
(declare-fun x210 () Int)
(declare-fun x956 () Int)
(declare-fun x237 () Int)
(declare-fun x605 () Int)
(declare-fun x1181 (Int) Int)
(declare-fun x401 () Int)
(declare-fun x1155 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1099 () Int)
(declare-fun x463 () Bool)
(declare-fun x245 () Bool)
(declare-fun x702 () Bool)
(declare-fun x482 () Int)
(declare-fun x114 () Bool)
(declare-fun x53 () Int)
(declare-fun x1005 () Int)
(declare-fun x403 () Int)
(declare-fun x92 () Int)
(declare-fun x1133 () Bool)
(declare-fun x633 () Int)
(declare-fun x394 () Bool)
(declare-fun x217 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x171 () Int)
(declare-fun x380 () Int)
(declare-fun x1170 () Bool)
(declare-fun x446 () Bool)
(declare-fun x25 () Int)
(declare-fun x617 () Bool)
(declare-fun x809 () Int)
(declare-fun x775 () Int)
(declare-fun x197 () Int)
(declare-fun x386 () Int)
(declare-fun x1020 () Int)
(declare-fun x125 () Bool)
(declare-fun x488 () Int)
(declare-fun x811 () Int)
(declare-fun x816 () Int)
(declare-fun x353 () Int)
(declare-fun x1065 () Bool)
(declare-fun x60 () Int)
(declare-fun x198 () Bool)
(declare-fun x983 () Bool)
(declare-fun x700 () Bool)
(declare-fun x426 () Int)
(declare-fun x444 () Bool)
(declare-fun x212 () Bool)
(declare-fun x736 () Int)
(declare-fun x780 () Int)
(declare-fun x719 () Bool)
(declare-fun x338 () Int)
(declare-fun x742 () Int)
(declare-fun x538 () Int)
(declare-fun x753 () Bool)
(declare-fun x965 () Int)
(declare-fun x606 () Bool)
(declare-fun x17 () Int)
(declare-fun x861 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x294 () Int)
(declare-fun x1168 () Int)
(declare-fun x972 () Bool)
(declare-fun x37 (Int) Int)
(declare-fun x328 () Bool)
(declare-fun x490 () Int)
(declare-fun x656 (Int) Int)
(declare-fun x516 () Bool)
(declare-fun x208 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x225 () Bool)
(declare-fun x1058 () Int)
(declare-fun x646 () Int)
(declare-fun x603 () Bool)
(declare-fun x1169 () Int)
(declare-fun x55 () Int)
(declare-fun x583 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x1145 () Int)
(declare-fun x31 () Int)
(declare-fun x967 () Bool)
(declare-fun x838 () Int)
(declare-fun x1158 () Int)
(declare-fun x310 () Bool)
(declare-fun x881 () Int)
(declare-fun x166 () Bool)
(declare-fun x250 () Bool)
(declare-fun x256 () Int)
(declare-fun x1141 (Int) Int)
(declare-fun x377 () Bool)
(declare-fun x542 () Int)
(declare-fun x1114 () Int)
(declare-fun x95 () Int)
(declare-fun x969 () Bool)
(declare-fun x596 () Int)
(declare-fun x44 () Bool)
(declare-fun x391 () Bool)
(declare-fun x321 () Int)
(declare-fun x487 () Int)
(declare-fun x949 () Int)
(declare-fun x269 () Int)
(declare-fun x1019 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1076 () Int)
(declare-fun x987 () Int)
(declare-fun x670 () Bool)
(declare-fun x54 () Int)
(declare-fun x735 () Int)
(declare-fun x796 () Int)
(declare-fun x820 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x34 () Int)
(declare-fun x544 () Int)
(declare-fun x169 () Int)
(declare-fun x67 () Bool)
(declare-fun x49 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1017 (Int) Bool)
(declare-fun x568 () Int)
(declare-fun x1120 () Int)
(declare-fun x40 () Int)
(declare-fun x731 () Int)
(declare-fun x889 () Int)
(declare-fun x1130 () Bool)
(declare-fun x1098 () Int)
(declare-fun x209 () Int)
(declare-fun x543 () Bool)
(declare-fun x673 () Bool)
(declare-fun x479 () Int)
(declare-fun x220 () Int)
(declare-fun x164 () Int)
(declare-fun x701 () Bool)
(declare-fun x145 () Bool)
(declare-fun x299 () Int)
(declare-fun x907 () Int)
(declare-fun x640 () Bool)
(declare-fun x793 () Bool)
(declare-fun x801 () Bool)
(declare-fun x626 () Bool)
(declare-fun x874 () Int)
(declare-fun x186 () Bool)
(declare-fun x721 () Bool)
(declare-fun x765 () Int)
(declare-fun x727 () Int)
(declare-fun x920 () Bool)
(declare-fun x1090 () Int)
(declare-fun x866 () Int)
(declare-fun x1102 () Int)
(declare-fun x270 () Int)
(declare-fun x854 () Int)
(declare-fun x958 () Bool)
(declare-fun x201 () Bool)
(declare-fun x671 () Int)
(declare-fun x373 () Int)
(declare-fun x628 () Bool)
(declare-fun x277 () Int)
(declare-fun x562 () Bool)
(declare-fun x551 () Int)
(declare-fun x87 () Bool)
(declare-fun x851 () Int)
(declare-fun x406 () Bool)
(declare-fun x113 () Int)
(declare-fun x180 () Int)
(declare-fun x23 () Bool)
(declare-fun x957 () Bool)
(declare-fun x432 () Int)
(declare-fun x308 () Bool)
(declare-fun x859 () Bool)
(declare-fun x862 () Bool)
(declare-fun x302 () Int)
(declare-fun x236 () Bool)
(declare-fun x531 () Bool)
(declare-fun x608 () Bool)
(declare-fun x629 () Bool)
(declare-fun x599 () Int)
(declare-fun x1211 () Int)
(declare-fun x429 () Int)
(declare-fun x711 () Int)
(declare-fun x476 () Bool)
(declare-fun x242 () Int)
(declare-fun x664 (Int) Int)
(declare-fun x865 () Int)
(declare-fun x999 () Int)
(declare-fun x183 () Bool)
(declare-fun x115 () Bool)
(declare-fun x105 () Bool)
(declare-fun x565 () Int)
(declare-fun x675 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x4 () Bool)
(declare-fun x685 () Bool)
(declare-fun x739 () Int)
(declare-fun x414 () Int)
(declare-fun x1034 () Int)
(declare-fun x797 () Int)
(declare-fun x559 () Bool)
(declare-fun x418 (Int) Int)
(declare-fun x127 () Bool)
(declare-fun x577 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x680 () Int)
(declare-fun x846 () Int)
(declare-fun x499 () Bool)
(declare-fun x925 () Int)
(declare-fun x927 () Bool)
(declare-fun x96 () Int)
(declare-fun x982 () Int)
(declare-fun x932 () Bool)
(declare-fun x139 () Int)
(declare-fun x45 () Int)
(declare-fun x1027 () Int)
(declare-fun x1085 () Bool)
(declare-fun x185 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x613 () Bool)
(declare-fun x187 () Int)
(declare-fun x1191 () Int)
(declare-fun x818 () Int)
(declare-fun x1116 () Int)
(declare-fun x607 () Int)
(declare-fun x249 () Bool)
(declare-fun x293 () Int)
(declare-fun x196 () Bool)
(declare-fun x437 () Bool)
(declare-fun x763 () Int)
(declare-fun x385 () Bool)
(declare-fun x243 () Int)
(declare-fun x370 () Int)
(declare-fun x368 () Int)
(declare-fun x748 () Bool)
(declare-fun x334 () Int)
(declare-fun x1136 () Int)
(declare-fun x959 () Int)
(declare-fun x146 () Int)
(declare-fun x181 () Int)
(declare-fun x161 () Int)
(declare-fun x726 () Bool)
(declare-fun x356 () Int)
(declare-fun x124 () Int)
(declare-fun x1176 () Int)
(declare-fun x610 () Int)
(declare-fun x1206 () Int)
(declare-fun x878 () Bool)
(declare-fun x224 () Bool)
(declare-fun x273 () Int)
(declare-fun x567 () Bool)
(declare-fun x417 () Int)
(declare-fun x407 () Int)
(declare-fun x717 () Bool)
(declare-fun x118 () Int)
(declare-fun x693 () Bool)
(declare-fun x630 () Int)
(declare-fun x97 () Int)
(declare-fun x206 () Bool)
(declare-fun x3 () Bool)
(declare-fun x588 () Int)
(declare-fun x303 () Bool)
(declare-fun x278 () Bool)
(declare-fun x489 () Bool)
(declare-fun x219 () Int)
(declare-fun x981 () Bool)
(declare-fun x575 () Int)
(declare-fun x390 () Bool)
(declare-fun x705 () Bool)
(declare-fun x101 (Int) Int)
(declare-fun x778 () Bool)
(declare-fun x402 () Bool)
(declare-fun x720 () Int)
(declare-fun x141 () Bool)
(declare-fun x522 () Int)
(declare-fun x411 () Int)
(declare-fun x248 () Int)
(declare-fun x984 () Bool)
(declare-fun x38 () Int)
(declare-fun x1171 () Int)
(declare-fun x911 () Int)
(declare-fun x255 () Bool)
(declare-fun x352 () Int)
(declare-fun x120 () Int)
(declare-fun x253 () Int)
(declare-fun x1127 () Int)
(declare-fun x961 () Bool)
(declare-fun x513 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x1197 () Int)
(declare-fun x393 () Int)
(declare-fun x526 () Int)
(declare-fun x876 () Bool)
(declare-fun x282 () Bool)
(declare-fun x465 () Int)
(declare-fun x36 () Bool)
(declare-fun x106 () Int)
(declare-fun x880 (Int) Int)
(declare-fun x789 () Int)
(declare-fun x471 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x788 () Int)
(declare-fun x528 () Bool)
(declare-fun x1056 () Int)
(declare-fun x227 () Int)
(declare-fun x723 (Int) Int)
(declare-fun x304 (Int) Int)
(declare-fun x1043 () Bool)
(declare-fun x102 () Int)
(declare-fun x33 () Int)
(declare-fun x519 () Int)
(declare-fun x284 () Int)
(declare-fun x109 () Int)
(declare-fun x289 (Int) Int)
(declare-fun x518 (Int) Int)
(declare-fun x602 () Bool)
(declare-fun x335 () Bool)
(declare-fun x143 () Bool)
(declare-fun x350 () Bool)
(declare-fun x88 () Int)
(declare-fun x852 () Int)
(declare-fun x450 () Bool)
(declare-fun x130 () Bool)
(declare-fun x842 () Int)
(declare-fun x153 () Int)
(declare-fun x189 () Int)
(declare-fun x1151 () Bool)
(declare-fun x121 () Int)
(declare-fun x264 () Int)
(declare-fun x505 () Bool)
(declare-fun x430 () Bool)
(declare-fun x1038 () Int)
(declare-fun x492 () Int)
(declare-fun x18 () Bool)
(declare-fun x532 () Bool)
(declare-fun x283 () Int)
(declare-fun x1073 () Int)
(declare-fun x591 () Int)
(declare-fun x677 () Bool)
(declare-fun x257 () Bool)
(declare-fun x272 () Int)
(declare-fun x525 () Bool)
(declare-fun x71 () Int)
(declare-fun x151 () Int)
(declare-fun x457 () Int)
(declare-fun x16 () Int)
(declare-fun x597 () Int)
(declare-fun x1134 () Int)
(declare-fun x657 () Bool)
(declare-fun x541 () Int)
(declare-fun x672 () Int)
(declare-fun x686 () Int)
(declare-fun x58 () Int)
(declare-fun x661 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1096 () Int)
(declare-fun x500 () Int)
(declare-fun x923 () Int)
(declare-fun x365 () Int)
(declare-fun x137 () Bool)
(declare-fun x931 () Int)
(declare-fun x170 () Bool)
(declare-fun x592 () Bool)
(declare-fun x20 () Int)
(declare-fun x1177 () Int)
(declare-fun x1118 () Int)
(declare-fun x655 () Int)
(declare-fun x1069 (Int) Int)
(declare-fun x211 () Bool)
(declare-fun x715 () Bool)
(declare-fun x558 () Int)
(declare-fun x926 () Int)
(declare-fun x119 () Bool)
(declare-fun x1125 () Int)
(declare-fun x772 () Int)
(declare-fun x371 () Bool)
(declare-fun x948 () Bool)
(declare-fun x1080 () Int)
(declare-fun x756 () Bool)
(declare-fun x841 () Bool)
(declare-fun x968 () Bool)
(declare-fun x379 () Bool)
(declare-fun x348 () Bool)
(declare-fun x184 () Int)
(declare-fun x507 () Int)
(declare-fun x836 () Int)
(declare-fun x638 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1089 (Int Int) Int)
(declare-fun x752 () Int)
(declare-fun x827 () Int)
(declare-fun x1175 () Bool)
(declare-fun x76 () Int)
(declare-fun x8 () Int)
(declare-fun x741 () Int)
(declare-fun x884 () Int)
(declare-fun x728 () Bool)
(declare-fun x459 () Int)
(declare-fun x104 () Bool)
(declare-fun x366 () Int)
(declare-fun x645 () Bool)
(declare-fun x478 () Int)
(declare-fun x491 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x70 () Int)
(declare-fun x254 () Int)
(declare-fun x354 () Int)
(declare-fun x998 () Bool)
(declare-fun x557 () Bool)
(declare-fun x381 () Bool)
(declare-fun x581 () Int)
(declare-fun x706 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x571 () Int)
(declare-fun x632 (Int) Int)
(declare-fun x681 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1003 () Int)
(declare-fun x228 () Bool)
(declare-fun x660 () Bool)
(declare-fun x200 () Int)
(declare-fun x1113 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1190 () Int)
(declare-fun x762 () Int)
(declare-fun x845 () Int)
(declare-fun x1112 () Int)
(declare-fun x1110 () Bool)
(declare-fun x205 () Int)
(declare-fun x1210 () Int)
(declare-fun x358 () Bool)
(declare-fun x1087 () Int)
(declare-fun x65 () Int)
(declare-fun x472 () Bool)
(declare-fun x331 () Int)
(declare-fun x504 () Bool)
(declare-fun x611 () Int)
(declare-fun x847 () Bool)
(declare-fun x172 () Int)
(declare-fun x712 () Bool)
(declare-fun x669 () Int)
(declare-fun x474 () Int)
(declare-fun x47 () Bool)
(declare-fun x964 () Int)
(declare-fun x1121 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1150 () Int)
(declare-fun x246 () Int)
(declare-fun x556 () Bool)
(declare-fun x993 () Int)
(declare-fun x697 () Int)
(declare-fun x59 () Bool)
(declare-fun x974 () Int)
(declare-fun x1081 () Bool)
(declare-fun x573 () Bool)
(declare-fun x342 () Int)
(declare-fun x384 () Int)
(declare-fun x919 () Int)
(declare-fun x600 () Int)
(declare-fun x501 () Int)
(declare-fun x233 () Bool)
(declare-fun x946 () Int)
(declare-fun x286 () Int)
(declare-fun x452 () Int)
(declare-fun x260 () Int)
(declare-fun x996 () Int)
(declare-fun x132 (Int) Int)
(declare-fun x451 () Int)
(declare-fun x443 () Int)
(declare-fun x1037 () Int)
(declare-fun x469 () Int)
(declare-fun x1093 () Bool)
(declare-fun x832 () Bool)
(declare-fun x654 () Bool)
(declare-fun x329 () Int)
(declare-fun x1077 () Bool)
(declare-fun x933 () Int)
(declare-fun x343 () Int)
(declare-fun x668 (Int Int Int) Int)
(declare-fun x1137 () Int)
(declare-fun x486 () Int)
(declare-fun x419 () Bool)
(declare-fun x376 () Bool)
(declare-fun x750 () Int)
(declare-fun x244 () Int)
(declare-fun x1044 () Int)
(declare-fun x344 () Bool)
(declare-fun x456 () Int)
(declare-fun x1199 () Bool)
(declare-fun x148 () Int)
(declare-fun x877 () Int)
(declare-fun x1167 () Int)
(declare-fun x975 () Int)
(declare-fun x68 () Bool)
(declare-fun x396 () Int)
(declare-fun x897 () Bool)
(declare-fun x480 () Int)
(declare-fun x992 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x636 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x116 (Int Int Int) Int)
(declare-fun x824 () Bool)
(declare-fun x520 () Bool)
(declare-fun x650 () Int)
(declare-fun x29 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x445 () Bool)
(declare-fun x1115 () Int)
(declare-fun x749 () Bool)
(declare-fun x174 () Int)
(declare-fun x221 () Int)
(declare-fun x496 () Bool)
(declare-fun x262 () Bool)
(declare-fun x849 () Bool)
(declare-fun x825 () Bool)
(declare-fun x510 () Bool)
(declare-fun x521 () Bool)
(declare-fun x52 () Bool)
(declare-fun x1039 () Int)
(declare-fun x99 () Bool)
(declare-fun x679 () Bool)
(declare-fun x953 () Bool)
(declare-fun x695 () Int)
(declare-fun x297 () Int)
(declare-fun x369 () Int)
(declare-fun x333 () Int)
(declare-fun x819 (Int) Int)
(declare-fun x758 () Int)
(declare-fun x509 (Int) Int)
(declare-fun x839 () Int)
(declare-fun x495 () Bool)
(declare-fun x703 () Int)
(declare-fun x1033 () Bool)
(declare-fun x952 () Int)
(declare-fun x188 () Int)
(declare-fun x609 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x19 () Bool)
(declare-fun x707 () Int)
(declare-fun x1016 () Bool)
(declare-fun x485 () Int)
(declare-fun x466 () Int)
(declare-fun x1106 () Bool)
(declare-fun x740 () Int)
(declare-fun x316 () Bool)
(declare-fun x1006 () Int)
(declare-fun x634 () Int)
(declare-fun x805 () Bool)
(declare-fun x631 () Int)
(declare-fun x667 () Int)
(declare-fun x223 () Int)
(declare-fun x1185 () Bool)
(declare-fun x475 () Int)
(declare-fun x821 () Bool)
(declare-fun x290 () Int)
(declare-fun x593 () Int)
(declare-fun x942 () Int)
(declare-fun x663 () Int)
(declare-fun x177 () Bool)
(declare-fun x737 () Int)
(declare-fun x924 () Int)
(declare-fun x800 () Int)
(declare-fun x902 () Int)
(declare-fun x751 () Int)
(declare-fun x754 () Int)
(declare-fun x938 () Bool)
(declare-fun x218 () Bool)
(declare-fun x779 () Int)
(declare-fun x546 () Int)
(declare-fun x658 () Bool)
(declare-fun x635 () Int)
(declare-fun x477 () Bool)
(declare-fun x799 () Int)
(declare-fun x280 () Int)
(declare-fun x107 () Int)
(declare-fun x1012 () Int)
(declare-fun x28 () Bool)
(declare-fun x523 () Bool)
(declare-fun x502 () Bool)
(declare-fun x560 () Bool)
(declare-fun x32 () Int)
(declare-fun x163 () Bool)
(declare-fun x511 () Int)
(declare-fun x561 () Bool)
(declare-fun x1105 () Int)
(declare-fun x61 (Int Int) Int)
(declare-fun x453 () Int)
(declare-fun x802 () Int)
(declare-fun x111 () Bool)
(declare-fun x995 () Bool)
(declare-fun x834 () Int)
(declare-fun x317 () Int)
(declare-fun x903 () Bool)
(declare-fun x826 () Bool)
(declare-fun x787 () Bool)
(declare-fun x78 () Bool)
(declare-fun x724 () Int)
(declare-fun x869 () Bool)
(declare-fun x165 () Int)
(declare-fun x977 () Bool)
(declare-fun x374 () Int)
(declare-fun x207 () Bool)
(declare-fun x1023 () Int)
(declare-fun x647 () Int)
(declare-fun x140 () Bool)
(declare-fun x1053 () Int)
(declare-fun x307 () Int)
(declare-fun x594 () Bool)
(declare-fun x687 () Int)
(declare-fun x770 () Int)
(declare-fun x540 () Bool)
(declare-fun x918 () Int)
(declare-fun x251 () Bool)
(declare-fun x618 () Int)
(declare-fun x204 () Bool)
(declare-fun x659 (Int) Int)
(declare-fun x1051 () Bool)
(declare-fun x704 () Bool)
(declare-fun x66 () Int)
(declare-fun x367 () Int)
(declare-fun x1122 () Bool)
(declare-fun x759 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x1148 () Int)
(declare-fun x241 () Int)
(declare-fun x908 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1031 (Int) Int)
(declare-fun x1049 () Int)
(declare-fun x397 () Bool)
(declare-fun x435 () Bool)
(declare-fun x259 () Int)
(declare-fun x1212 () Bool)
(declare-fun x64 () Bool)
(declare-fun x784 () Int)
(declare-fun x10 () Int)
(declare-fun x422 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x960 () Int)
(declare-fun x82 () Int)
(declare-fun x940 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x193 () Bool)
(declare-fun x173 () Int)
(declare-fun x612 () Bool)
(declare-fun x898 () Int)
(declare-fun x614 () Int)
(declare-fun x882 () Int)
(declare-fun x318 () Bool)
(declare-fun x263 () Int)
(declare-fun x615 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1074 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1198 () Int)
(declare-fun x529 () Bool)
(declare-fun x950 () Int)
(declare-fun x1097 () Int)
(declare-fun x178 () Int)
(declare-fun x79 () Int)
(declare-fun x639 () Bool)
(declare-fun x378 () Int)
(declare-fun x648 () Int)
(declare-fun x1163 () Int)
(declare-fun x192 () Bool)
(declare-fun x547 () Bool)
(declare-fun x91 () Bool)
(declare-fun x785 () Int)
(declare-fun x777 () Int)
(declare-fun x1140 () Int)
(declare-fun x916 () Int)
(declare-fun x288 () Int)
(declare-fun x481 () Bool)
(declare-fun x815 () Int)
(declare-fun x580 () Int)
(declare-fun x362 () Int)
(declare-fun x215 () Bool)
(declare-fun x1178 () Int)
(declare-fun x929 () Int)
(declare-fun x448 () Int)
(declare-fun x730 () Bool)
(declare-fun x1011 () Bool)
(declare-fun x917 () Int)
(declare-fun x966 () Bool)
(declare-fun x709 () Bool)
(declare-fun x162 () Int)
(declare-fun x791 () Int)
(declare-fun x545 () Int)
(declare-fun x6 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x226 () Int)
(declare-fun x1025 () Int)
(declare-fun x879 () Int)
(declare-fun x470 () Int)
(declare-fun x349 () Int)
(declare-fun x994 () Int)
(declare-fun x991 () Bool)
(declare-fun x962 () Int)
(declare-fun x324 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x914 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1052 () Int)
(declare-fun x1143 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x714 () Bool)
(declare-fun x689 () Int)
(declare-fun x883 () Bool)
(declare-fun x856 () Bool)
(declare-fun x160 () Int)
(declare-fun x566 () Int)
(declare-fun x383 () Int)
(declare-fun x1007 () Int)
(declare-fun x1108 () Bool)
(declare-fun x662 () Int)
(declare-fun x449 () Bool)
(declare-fun x792 () Bool)
(declare-fun x360 () Int)
(declare-fun x1022 () Int)
(declare-fun x910 () Bool)
(declare-fun x963 () Int)
(declare-fun x295 () Bool)
(declare-fun x347 () Bool)
(declare-fun x134 () Int)
(declare-fun x755 () Int)
(declare-fun x415 () Int)
(declare-fun x829 (Int) Int)
(declare-fun x530 () Int)
(declare-fun x627 () Bool)
(declare-fun x230 () Bool)
(declare-fun x325 () Int)
(declare-fun x93 () Int)
(declare-fun x913 () Bool)
(declare-fun x569 () Int)
(declare-fun x637 () Int)
(declare-fun x954 () Bool)
(declare-fun x848 () Int)
(declare-fun x813 () Int)
(declare-fun x398 () Bool)
(declare-fun x455 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x337 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x156 () Bool)
(declare-fun x830 () Bool)
(declare-fun x149 () Int)
(declare-fun x195 () Bool)
(declare-fun x86 () Int)
(declare-fun x773 () Int)
(declare-fun x454 () Bool)
(declare-fun x364 () Bool)
(declare-fun x624 () Bool)
(declare-fun x158 () Int)
(declare-fun x708 () Int)
(declare-fun x795 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1066 () Int)
(declare-fun x620 () Int)
(declare-fun x1059 () Int)
(declare-fun x943 () Bool)
(declare-fun x951 () Bool)
(declare-fun x1041 () Int)
(declare-fun x473 () Bool)
(declare-fun x971 () Bool)
(declare-fun x168 () Bool)
(declare-fun x351 () Int)
(declare-fun x823 () Int)
(declare-fun x757 () Int)
(declare-fun x1172 () Bool)
(declare-fun x323 () Int)
(declare-fun x135 () Int)
(declare-fun x537 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x512 () Int)
(declare-fun x306 () Bool)
(declare-fun x774 () Int)
(declare-fun x808 () Int)
(declare-fun x887 () Int)
(declare-fun x167 () Bool)
(declare-fun x238 () Bool)
(declare-fun x976 () Int)
(declare-fun x688 () Int)
(declare-fun x716 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x934 () Bool)
(declare-fun x27 () Int)
(declare-fun x909 () Int)
(declare-fun x413 (Int) Int)
(declare-fun x275 () Bool)
(declare-fun x182 () Int)
(declare-fun x239 () Bool)
(declare-fun x287 () Int)
(declare-fun x1091 () Bool)
(declare-fun x395 () Int)
(declare-fun x744 () Bool)
(declare-fun x732 () Bool)
(declare-fun x234 () Int)
(declare-fun x434 () Bool)
(declare-fun x56 () Int)
(define-fun x296 ((x988 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x988) (>= x988 0)) x988 (- x988 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x327 ((x988 Int)) Int (ite (and (< x988 0) (>= x988 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x988 115792089237316195423570985008687907853269984665640564039457584007913129639936) x988))
(define-fun x642 ((x14 Int)) Bool (and (>= x14 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x14)))
(define-fun x503 ((x14 Int)) Bool (and (= (x1103 x14 115792089237316195423570985008687907853269984665640564039457584007913129639935) x14) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14) x14)))
(define-fun x315 ((x14 Int)) Bool (and (= 0 (x1103 x14 0)) (= (x1103 0 x14) 0)))
(define-fun x1200 ((x14 Int)) Bool (= (x1103 x14 x14) x14))
(define-fun x840 ((x14 Int)) Bool (and (x1200 x14) (x503 x14) (x315 x14)))
(define-fun x258 ((x14 Int) (x51 Int)) Bool (= (x1103 x14 x51) (x1103 x51 x14)))
(define-fun x11 ((x14 Int) (x51 Int)) Bool (and (=> (>= x14 0) (>= x14 (x1103 x14 x51))) (<= 0 (x1103 x14 x51)) (=> (>= x51 0) (<= (x1103 x14 x51) x51))))
(define-fun x798 ((x14 Int) (x51 Int)) Bool (and (x11 x14 x51) (x258 x14 x51)))
(define-fun x372 ((x14 Int)) Bool (= (+ (mod x14 32) (x1103 x14 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x14 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x570 ((x14 Int)) Bool (and (x798 x14 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x372 x14)))
(define-fun x484 ((x14 Int)) Bool (and (<= 0 x14) (>= 1461501637330902918203684832716283019655932542975 x14)))
(define-fun x150 ((x14 Int)) Bool (= (x1103 x14 1) (mod x14 2)))
(define-fun x585 ((x14 Int)) Bool (and (x798 x14 1) (x150 x14)))
(define-fun x843 ((x14 Int)) Bool (= (mod x14 128) (x1103 x14 127)))
(define-fun x339 ((x14 Int)) Bool (and (x843 x14) (x798 x14 127)))
(define-fun x794 ((x14 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1089 x14 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1089 115792089237316195423570985008687907853269984665640564039457584007913129639935 x14))))
(define-fun x586 ((x14 Int)) Bool (and (= (x1089 0 x14) x14) (= x14 (x1089 x14 0))))
(define-fun x412 ((x14 Int)) Bool (= (x1089 x14 x14) x14))
(define-fun x973 ((x14 Int)) Bool (and (x412 x14) (x586 x14) (x794 x14)))
(define-fun x947 ((x14 Int) (x51 Int)) Bool (= (x1089 x51 x14) (x1089 x14 x51)))
(define-fun x1166 ((x14 Int) (x51 Int)) Bool (and (>= (+ x14 x51) (x1089 x14 x51)) (=> (>= x51 0) (>= (x1089 x14 x51) x51)) (=> (<= 0 x14) (>= (x1089 x14 x51) x14))))
(define-fun x75 ((x14 Int) (x51 Int)) Bool (and (x947 x14 x51) (x1166 x14 x51)))
(define-fun x651 ((x14 Int)) Bool (= (mod x14 32) (x1103 x14 31)))
(define-fun x550 ((x14 Int)) Bool (and (x651 x14) (x798 x14 31)))
(define-fun x900 ((x828 Int)) Int (ite (> x338 x828) (x418 x828) 0))
(define-fun x527 ((x828 Int)) Int 0)
(define-fun x860 ((x828 Int)) Int 0)
(define-fun x22 ((x828 Int)) Int 0)
(define-fun x63 ((x828 Int)) Int 0)
(define-fun x285 ((x828 Int)) Int 0)
(define-fun x1010 ((x828 Int)) Int 0)
(define-fun x420 ((x828 Int)) Int 0)
(define-fun x1014 ((x828 Int)) Int 0)
(define-fun x722 ((x828 Int)) Int 0)
(define-fun x572 ((x828 Int)) Int 0)
(define-fun x77 ((x828 Int)) Int 0)
(define-fun x524 ((x828 Int)) Int 0)
(define-fun x733 ((x828 Int)) Int 0)
(define-fun x1187 ((x828 Int)) Int 0)
(define-fun x790 ((x828 Int)) Int 0)
(define-fun x1030 ((x828 Int)) Int 0)
(define-fun x535 ((x828 Int)) Int 0)
(define-fun x690 ((x828 Int)) Int 0)
(define-fun x232 ((x828 Int)) Int 0)
(define-fun x74 ((x828 Int)) Int (ite (= 4 x828) 256 (x232 x828)))
(define-fun x298 ((x828 Int)) Int (ite (= 260 x828) x404 (x74 x828)))
(define-fun x90 ((x828 Int)) Int (ite (and (>= x828 292) (< x828 (+ x404 292))) (x518 (- x828 292)) (x298 x828)))
(define-fun x199 ((x828 Int)) Int (ite (= 36 x828) x590 (x90 x828)))
(define-fun x319 ((x828 Int)) Int (ite (= x964 x828) x601 (x199 x828)))
(define-fun x533 ((x828 Int)) Int (ite (and (>= x828 x146) (> (+ x601 x146) x828)) (x159 (- x828 x146)) (x319 x828)))
(define-fun x578 ((x828 Int)) Int (ite (= x828 68) x979 (x533 x828)))
(define-fun x375 ((x828 Int)) Int (ite (= 100 x828) x648 (x578 x828)))
(define-fun x989 ((x828 Int)) Int (ite (= 132 x828) x470 (x375 x828)))
(define-fun x1124 ((x828 Int)) Int (ite (= 164 x828) x27 (x989 x828)))
(define-fun x359 ((x828 Int)) Int (ite (= x828 196) x1167 (x1124 x828)))
(define-fun x1095 ((x828 Int)) Int (ite (= 228 x828) x369 (x359 x828)))
(define-fun x915 ((x828 Int)) Int (ite (= x828 x269) x1044 (x632 x828)))
(define-fun x1015 ((x828 Int)) Int (ite (= x226 x828) x1079 (x915 x828)))
(define-fun x1157 ((x828 Int)) Int (ite (= x828 128) x284 (x420 x828)))
(define-fun x408 ((x828 Int)) Int (ite (and (> (+ 160 x284) x828) (>= x828 160)) (x1095 (+ 132 x828)) (x1157 x828)))
(define-fun x62 ((x828 Int)) Int (ite (= x828 x273) 0 (x408 x828)))
(define-fun x1183 ((x828 Int)) Int (ite (= x828 x924) x686 (x62 x828)))
(define-fun x1162 ((x828 Int)) Int (ite (and (>= x828 x1023) (< x828 (+ x1023 x686))) (x1095 (- (+ x975 x828) x1023)) (x1183 x828)))
(define-fun x691 ((x828 Int)) Int (ite (= x828 x1026) 0 (x1162 x828)))
(define-fun x1001 ((x828 Int)) Int (ite (= x828 x226) x1097 (x1015 x828)))
(define-fun x467 ((x828 Int)) Int (ite (= x828 x331) x647 (x1001 x828)))
(define-fun x326 ((x828 Int)) Int (ite (= x331 x828) x727 (x467 x828)))
(define-fun x666 ((x828 Int)) Int (ite (= x226 x828) x757 (x326 x828)))
(define-fun x1088 ((x828 Int)) Int (ite (= x511 x828) 12815038762725729950469637984808671091927904450484496604235796788765047914496 (x691 x828)))
(define-fun x804 ((x828 Int)) Int (ite (= x828 x53) x487 (x1088 x828)))
(define-fun x783 ((x828 Int)) Int (ite (= x222 x828) x813 (x804 x828)))
(define-fun x35 ((x828 Int)) Int (ite (= x828 x248) x1022 (x783 x828)))
(define-fun x1173 ((x828 Int)) Int (ite (= x828 x680) x307 (x35 x828)))
(define-fun x155 ((x828 Int)) Int (ite (= x828 x873) x106 (x1173 x828)))
(define-fun x1129 ((x828 Int)) Int (ite (= x828 160) x69 (x1014 x828)))
(define-fun x696 ((x828 Int)) Int (ite (= x828 192) x1150 (x1129 x828)))
(define-fun x817 ((x828 Int)) Int (ite (= x828 160) x148 (x1014 x828)))
(define-fun x424 ((x828 Int)) Int (ite x583 (x572 x828) (ite x3 (ite x110 (x1129 x828) (x696 x828)) (x817 x828))))
(define-fun x936 ((x828 Int)) Int (ite (= x828 x689) 32 (x790 x828)))
(define-fun x771 ((x828 Int)) Int (ite (= x828 x1118) x124 (x936 x828)))
(define-fun x855 ((x828 Int)) Int (ite (and (> (+ x124 x188) x828) (>= x828 x188)) (x424 (- (+ 160 x828) x188)) (x771 x828)))
(define-fun x483 ((x828 Int)) Int (ite (and (>= x828 0) (< x828 x465)) (x855 (+ x828 x689)) (x723 x828)))
(define-fun x131 ((x828 Int)) Int (ite (= x828 160) x655 (x1030 x828)))
(define-fun x1054 ((x828 Int)) Int (ite (= 192 x828) x396 (x131 x828)))
(define-fun x625 ((x828 Int)) Int (ite (= x828 160) x933 (x1030 x828)))
(define-fun x136 ((x828 Int)) Int (ite x193 (x722 x828) (ite x654 (ite x1100 (x131 x828) (x1054 x828)) (x625 x828))))
(define-fun x563 ((x828 Int)) Int (ite (= x828 x669) 32 (x733 x828)))
(define-fun x554 ((x828 Int)) Int (ite (= x828 x782) x1073 (x563 x828)))
(define-fun x441 ((x828 Int)) Int (ite (and (< x828 (+ x842 x1073)) (<= x842 x828)) (x136 (- (+ 160 x828) x842)) (x554 x828)))
(define-fun x1135 ((x828 Int)) Int (ite (and (< x828 x848) (<= 0 x828)) (x441 (+ x669 x828)) (x497 x828)))
(define-fun x157 ((x828 Int)) Int (ite (= x828 x1179) x944 (x155 x828)))
(define-fun x694 ((x828 Int)) Int (ite x12 (x155 x828) (ite x824 (x1173 x828) (ite x308 (x35 x828) (ite x1083 (x783 x828) (x157 x828))))))
(define-fun x761 ((x828 Int)) Int (ite (= x828 x623) 0 (x694 x828)))
(define-fun x676 ((x828 Int)) Int (ite (= x828 x631) x9 (x761 x828)))
(define-fun x1046 ((x828 Int)) Int (ite (= x828 x288) x741 (x676 x828)))
(define-fun x48 ((x828 Int)) Int (ite (= x546 x828) x526 (x1046 x828)))
(define-fun x868 ((x828 Int)) Int (ite (= x828 x788) x325 (x48 x828)))
(define-fun x729 ((x828 Int)) Int (ite (= x828 x758) x755 (x868 x828)))
(define-fun x409 ((x828 Int)) Int (ite (= x828 x671) x917 (x729 x828)))
(define-fun x1094 ((x828 Int)) Int (ite x381 (x729 x828) (ite x1212 (x868 x828) (ite x391 (x48 x828) (ite x562 (x1046 x828) (x409 x828))))))
(define-fun x252 ((x828 Int)) Int (ite (= x752 x828) 0 (x1094 x828)))
(define-fun x191 ((x828 Int)) Int (ite (= x595 x828) x280 (x252 x828)))
(define-fun x313 ((x828 Int)) Int (ite (= x530 x828) x292 (x191 x828)))
(define-fun x1149 ((x828 Int)) Int (ite (= x389 x828) x368 (x313 x828)))
(define-fun x346 ((x828 Int)) Int (ite (= x511 x828) 3162421667457357072237249128631551985524704858613737409516517017801010970624 (x1149 x828)))
(define-fun x1063 ((x828 Int)) Int (ite (= x511 x828) x848 (x346 x828)))
(define-fun x421 ((x828 Int)) Int (ite (and (< x828 (+ x848 x403)) (<= x403 x828)) (x1135 (- x828 x403)) (x1063 x828)))
(define-fun x1062 ((x828 Int)) Int (ite (= x828 x650) x1109 (x421 x828)))
(define-fun x746 ((x828 Int)) Int (ite (= x770 x828) x76 (x1062 x828)))
(define-fun x718 ((x828 Int)) Int (ite (= x828 x1096) x797 (x746 x828)))
(define-fun x743 ((x828 Int)) Int (ite (= x82 x828) x591 (x718 x828)))
(define-fun x904 ((x828 Int)) Int (ite (= x1148 x828) x299 (x743 x828)))
(define-fun x937 ((x828 Int)) Int (ite x185 (x743 x828) (ite x617 (x718 x828) (ite x439 (x746 x828) (ite x968 (x1062 x828) (x904 x828))))))
(define-fun x83 ((x828 Int)) Int (ite (= x828 x1027) 0 (x937 x828)))
(define-fun x564 ((x828 Int)) Int (ite (= x828 x1120) 67777324927979108784993931169012987862363405992453817108598075344574249697280 (x83 x828)))
(define-fun x1142 ((x828 Int)) Int (ite (= x828 x1120) x465 (x564 x828)))
(define-fun x598 ((x828 Int)) Int (ite (and (> (+ x465 x345) x828) (>= x828 x345)) (x483 (- x828 x345)) (x1142 x828)))
(define-fun x291 ((x828 Int)) Int (ite (= x31 x828) x488 (x598 x828)))
(define-fun x425 ((x828 Int)) Int (ite (= x828 x209) x993 (x291 x828)))
(define-fun x835 ((x828 Int)) Int (ite (= x828 x735) x635 (x425 x828)))
(define-fun x649 ((x828 Int)) Int (ite (= x828 x317) x365 (x835 x828)))
(define-fun x1071 ((x828 Int)) Int (ite (= x219 x828) x461 (x649 x828)))
(define-fun x30 ((x828 Int)) Int (ite x679 (x649 x828) (ite x995 (x835 x828) (ite x398 (x425 x828) (ite x295 (x291 x828) (x1071 x828))))))
(define-fun x440 ((x828 Int)) Int (ite (= x1146 x828) 0 (x30 x828)))
(define-fun x870 ((x828 Int)) Int (ite (= x828 x16) 64 (x440 x828)))
(define-fun x621 ((x828 Int)) Int (ite (= x828 x164) x724 (x870 x828)))
(define-fun x15 ((x828 Int)) Int (ite (= x828 x806) x844 (x621 x828)))
(define-fun x1207 ((x828 Int)) Int (ite (= x828 x1121) x231 (x15 x828)))
(define-fun x1204 ((x828 Int)) Int (ite (= x828 x763) x577 (x1207 x828)))
(define-fun x5 ((x828 Int)) Int (ite (= x828 x986) x566 (x1204 x828)))
(define-fun x438 ((x828 Int)) Int (ite x717 (x1204 x828) (ite x1154 (x1207 x828) (ite x940 (x15 x828) (ite x341 (x621 x828) (x5 x828))))))
(define-fun x678 ((x828 Int)) Int (ite (= x737 x828) 0 (x438 x828)))
(define-fun x388 ((x828 Int)) Int (ite (= x828 x353) x888 (x678 x828)))
(define-fun x745 ((x828 Int)) Int (ite (= x828 x1159) x1039 (x388 x828)))
(define-fun x203 ((x828 Int)) Int (ite (= x828 x663) x366 (x745 x828)))
(define-fun x921 ((x828 Int)) Int (ite (= x399 x828) x357 (x203 x828)))
(define-fun x1202 ((x828 Int)) Int (ite (= x828 x569) x492 (x921 x828)))
(define-fun x266 ((x828 Int)) Int (ite (= x828 x571) x963 (x1202 x828)))
(define-fun x447 ((x828 Int)) Int (ite (= 128 x828) x807 (x524 x828)))
(define-fun x978 ((x828 Int)) Int (ite (= x828 x378) 0 (x1141 x828)))
(define-fun x50 ((x828 Int)) Int (ite x141 (x1141 x828) (ite x183 (x1141 x828) (x978 x828))))
(define-fun x126 ((x828 Int)) Int (ite (= x828 x703) x227 (x50 x828)))
(define-fun x886 ((x828 Int)) Int (ite x1057 (x50 x828) (x126 x828)))
(define-fun x129 ((x828 Int)) Int (ite (= x828 x165) x965 (x886 x828)))
(define-fun x123 ((x828 Int)) Int (ite x1008 (ite x670 (x886 x828) (x129 x828)) (x50 x828)))
(define-fun x906 ((x828 Int)) Int (ite (and (> x501 x828) (>= x828 196)) (x1149 (- (+ (x296 (+ x511 196)) x828) 196)) (x900 x828)))
(define-fun x1078 ((x828 Int)) Int (ite (= 128 x828) x646 (x77 x828)))
(define-fun x267 ((x828 Int)) Int (ite (and (>= x828 160) (> (+ 160 x646) x828)) (x906 (+ x828 36)) (x1010 x828)))
(define-fun x1209 ((x828 Int)) Int (ite (= x828 x1038) 0 (x267 x828)))
(define-fun x574 ((x828 Int)) Int (ite (= x828 x846) x367 (x63 x828)))
(define-fun x72 ((x828 Int)) Int (ite (and (>= x828 x312) (> (+ x367 x312) x828)) (x906 (- (+ x828 x1164) x312)) (x860 x828)))
(define-fun x176 ((x828 Int)) Int (ite (= x1045 x828) 0 (x72 x828)))
(define-fun x431 ((x828 Int)) Int (ite x390 (x1202 x828) (ite x638 (x921 x828) (ite x91 (x203 x828) (ite x536 (x745 x828) (x266 x828))))))
(define-fun x674 ((x828 Int)) Int (ite (= x45 x828) 0 (x431 x828)))
(define-fun x216 ((x828 Int)) Int (ite (= x16 x828) 102723710039514930950152684451134735340491996533626151901403227563028629159936 (x674 x828)))
(define-fun x152 ((x828 Int)) Int (ite (= x828 x879) x331 (x216 x828)))
(define-fun x442 ((x828 Int)) Int (ite (= x828 x874) x362 (x152 x828)))
(define-fun x786 ((x828 Int)) Int (ite (= x160 x828) 1 (x442 x828)))
(define-fun x1144 ((x828 Int)) Int (ite (and (> x16 x828) (<= x16 x828)) (x37 (- x828 x16)) (x786 x828)))
(define-fun x871 ((x828 Int)) Int (ite (= x16 x828) 102723710039514930950152684451134735340491996533626151901403227563028629159936 (x1144 x828)))
(define-fun x464 ((x828 Int)) Int (ite (= x108 x828) x331 (x871 x828)))
(define-fun x39 ((x828 Int)) Int (ite (= x828 x519) x134 (x464 x828)))
(define-fun x279 ((x828 Int)) Int (ite (= x828 x866) 1 (x39 x828)))
(define-fun x1036 ((x828 Int)) Int (ite (and (>= x828 x16) (< x828 x16)) (x101 (- x828 x16)) (x279 x828)))
(define-fun x1165 ((x828 Int)) Int (ite (= x828 x600) 82925012820599246762017191553447313009453208785080852368581866743583805014016 (x1036 x828)))
(define-fun x896 ((x828 Int)) Int (ite (= x764 x828) x331 (x1165 x828)))
(define-fun x930 ((x828 Int)) Int (ite (= x828 x95) x462 (x896 x828)))
(define-fun x427 ((x828 Int)) Int (ite (= x734 x828) x70 (x930 x828)))
(define-fun x400 ((x828 Int)) Int (ite (= x161 x828) x1020 (x427 x828)))
(define-fun x468 ((x828 Int)) Int (ite (= x538 x828) x443 (x400 x828)))
(define-fun x1072 ((x828 Int)) Int (ite (= x828 x1125) x773 (x468 x828)))
(define-fun x653 ((x828 Int)) Int (ite (= x828 x1099) x1113 (x1072 x828)))
(define-fun x517 ((x828 Int)) Int (ite (and (<= x600 x828) (> x600 x828)) (x304 (- x828 x600)) (x653 x828)))
(define-fun x872 ((x828 Int)) Int (ite (= x600 x828) 109908292108392705413647700182009080257555005842447634700842110517808040247296 (x517 x828)))
(define-fun x1160 ((x828 Int)) Int (ite (= x478 x828) x697 (x872 x828)))
(define-fun x281 ((x828 Int)) Int (ite (= x271 x828) 1 (x1174 x828)))
(define-fun x941 ((x828 Int)) Int (ite (= 128 x828) x1009 (x535 x828)))
(define-fun x710 ((x828 Int)) Int (ite (= x828 x457) 0 (x1069 x828)))
(define-fun x1070 ((x828 Int)) Int (ite x186 (x1069 x828) (ite x140 (x1069 x828) (x710 x828))))
(define-fun x46 ((x828 Int)) Int (ite (= x169 x828) x889 (x1070 x828)))
(define-fun x644 ((x828 Int)) Int (ite x377 (x1070 x828) (x46 x828)))
(define-fun x589 ((x828 Int)) Int (ite (= x151 x828) x142 (x644 x828)))
(define-fun x7 ((x828 Int)) Int (ite x971 (ite x513 (x644 x828) (x589 x828)) (x1070 x828)))
(define-fun x300 ((x828 Int)) Int (ite (= x828 x1206) 72962670233317687161045261331826126319863115189623388230215292944087915692032 (x285 x828)))
(define-fun x305 ((x828 Int)) Int (ite (and (<= x1206 x828) (< x828 (+ 32 x1206))) (x1152 (- x828 x1206)) (x300 x828)))
(define-fun x579 ((x828 Int)) Int (ite x891 (x1187 x828) (ite x1147 (ite x706 (x305 x828) (x300 x828)) (x1187 x828))))
(define-fun x405 ((x828 Int)) Int (ite (= x851 x828) 1 (x619 x828)))
(define-fun x1042 ((x828 Int)) Int (ite x556 (x619 x828) (x405 x828)))
(define-fun x144 ((x828 Int)) Int (ite (= x828 x931) 72962670233317687161045261331826126319863115189623388230215292944087915692032 (x579 x828)))
(define-fun x229 ((x828 Int)) Int (ite (and (> (+ x931 32) x828) (<= x931 x828)) (x659 (- x828 x931)) (x144 x828)))
(define-fun x276 ((x828 Int)) Int (ite x347 (ite x73 (ite x945 (x229 x828) (x144 x828)) (x579 x828)) (x579 x828)))
(define-fun x247 ((x828 Int)) Int (ite (= x990 x828) 72962670233317687161045261331826126319863115189623388230215292944087915692032 (x276 x828)))
(define-fun x322 ((x828 Int)) Int (ite x140 (x1069 x828) (x710 x828)))
(define-fun x363 ((x828 Int)) Int (ite x183 (x1141 x828) (x978 x828)))
(define-fun x814 ((x828 Int)) Int (ite x513 (x644 x828) (x589 x828)))
(define-fun x905 ((x828 Int)) Int (ite x670 (x886 x828) (x129 x828)))
(define-fun x857 ((x828 Int)) Int (ite (and (<= x1206 x828) (< x828 (+ 32 x1206))) (x1152 (- x828 x1206)) (x690 x828)))
(define-fun x320 ((x828 Int)) Int (ite (and (>= x828 x931) (> (+ x931 32) x828)) (x659 (- x828 x931)) (x527 x828)))
(define-fun x81 ((x828 Int)) Int (ite (and (<= x990 x828) (< x828 (+ x990 32))) (x132 (- x828 x990)) (x22 x828)))
(assert (x840 x1080))
(assert (x570 x1041))
(assert (x642 x686))
(assert (x642 x269))
(assert (= (or x328 (and x422 (not x44))) x612))
(assert (= (=> (and (= x845 (* 2 x994)) (= x816 (x296 (+ x480 x845))) (<= 1 x482) (= (x1089 x480 x845) x1161) (= x1203 (<= x480 1)) (= x189 (ite x1203 x816 x1161)) (= x480 (x1103 x803 x486)) (= x486 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x482)) (= x260 (ite x1203 x816 x1161)) (= x482 (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630)) (= (* x994 8) x630)) x1019) x928))
(assert (x642 x807))
(assert (= (or x510 x670) x1008))
(assert (x642 x8))
(assert (x339 x187))
(assert (x642 x631))
(assert (=> (>= 10000 x697) (= (x829 x697) 0)))
(assert (x642 x1023))
(assert (x1017 3703880962))
(assert (=> (>= 10000 x331) (= 0 (x829 x331))))
(assert (not (x1017 (x833 32 159))))
(assert (x642 x180))
(assert (x642 x242))
(assert (x642 x1006))
(assert (= x1208 (=> (and (= (x327 (- x288 x53)) x9) (= x546 (x296 (+ 32 x288))) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x182) x1076) (= (x296 (+ x248 x813)) x623) (= x463 (> x741 0)) (= x631 (+ 32 x53)) (= (x676 x924) x741) (= (x296 (+ x1076 x248)) x288) (= (x296 (+ x813 31)) x182)) (and (=> (not x463) x573) (=> (and (and (= x526 (x1046 x1023)) (= x1132 (> x741 32))) x463) (and (=> (not x1132) x573) (=> (and (and (= x780 (+ x1023 32)) (= (x48 x780) x325) (= x255 (< 64 x741)) (= x788 (x296 (+ x546 32)))) x1132) (and (=> (and (and (= x755 (x868 x323)) (= (x296 (+ 64 x546)) x758) (= (+ x1023 64) x323) (= (< 96 x741) x991)) x255) (and (=> (not x991) x573) (=> x991 x236))) (=> (not x255) x573)))))))))
(assert (= x859 (and x652 x1192)))
(assert (x642 x620))
(assert (= x477 (and (not x869) x154)))
(assert (x642 x899))
(assert (x570 x1127))
(assert (x1017 8589934718))
(assert (x642 x184))
(assert (= x309 (and x198 x516)))
(assert (x642 x1140))
(assert (x642 x96))
(assert (x642 x846))
(assert (x840 x863))
(assert (not x324))
(assert (x642 x697))
(assert (x642 x898))
(assert (x642 x79))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 64 x697 151)))
(assert (= (=> (and (= x938 (not (< 224 x582))) (= x396 (x7 x708))) (and x938 x557)) x537))
(assert (x840 x949))
(assert (= (=> (and (= (> x994 x32) x531) (or (and (and (= x142 (x1103 x800 x429)) (= x912 (* 8 x469)) (= (x1103 31 x994) x469) (= x429 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x912))) (= x800 (x1209 x79)) (= x79 (+ x611 128))) x531) (not x531))) x4) x639))
(assert (x642 x545))
(assert (= x1133 (or x183 x859)))
(assert (= (=> (and (= (+ x884 1) x681) (= x946 (+ 1 x884)) (= (* 2 x411) x884)) x841) x502))
(assert (x642 x172))
(assert (x570 x604))
(assert (x642 x290))
(assert (x642 x69))
(assert (x642 x680))
(assert (x642 x522))
(assert (= (and x847 x792) x953))
(assert (x642 x646))
(assert (x642 x292))
(assert (x642 x1073))
(assert (= (x829 (+ x457 1)) (x829 x457)))
(assert (= (and x792 (not x847)) x536))
(assert (= x940 (and (not x1130) x376)))
(assert (x642 x648))
(assert (x642 x596))
(assert (= (=> (and (= x990 x614) (= x925 x1163)) x628) x450))
(assert (= (x116 64 x697 151) (x829 (x116 64 x697 151))))
(assert (x642 x844))
(assert (x840 x411))
(assert (x642 x588))
(assert (x642 x302))
(assert (= x552 (=> (and (= x963 (x1202 x1066)) (= x571 (x296 (+ x663 96))) (= x1066 (+ x448 96)) (= x700 (not (< 128 x1039)))) (and x348 x700))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 64 x392 151)))
(assert (x642 x106))
(assert (= (and x567 (not x559)) x1043))
(assert (= (=> (and (= (x296 (+ x846 32)) x1090) (= x1172 (not (< 32 x808))) (= x227 (x176 x1090)) (= x254 (+ 1 x703))) (and (=> (and (= x254 x165) (= 64 x401)) x685) x1172)) x705))
(assert (x642 x452))
(assert (x642 x1136))
(assert (= x145 x59))
(assert (and (= 187072209578355573530071658587684226515959365500928 (x922 2 167)) (= 2 (x922 2 1)) (= 730750818665451459101842416358141509827966271488 (x922 2 159)) (= (x922 2 103) 10141204801825835211973625643008) (= 18446744073709551616 (x922 2 64)) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x922 2 244)) (= 4294967296 (x922 2 32)) (= (x922 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x922 2 230)) (= (x922 2 87) 154742504910672534362390528) (= 1125899906842624 (x922 2 50)) (= (x922 2 146) 89202980794122492566142873090593446023921664) (= 2993155353253689176481146537402947624255349848014848 (x922 2 171)) (= 2722258935367507707706996859454145691648 (x922 2 131)) (= 1073741824 (x922 2 30)) (= (x922 2 0) 1) (= 144115188075855872 (x922 2 57)) (= 24519928653854221733733552434404946937899825954937634816 (x922 2 184)) (= (x922 2 16) 65536) (= 4194304 (x922 2 22)) (= 549755813888 (x922 2 39)) (= (x922 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 604462909807314587353088 (x922 2 79)) (= (x922 2 163) 11692013098647223345629478661730264157247460343808) (= 19342813113834066795298816 (x922 2 84)) (= 72057594037927936 (x922 2 56)) (= (x922 2 23) 8388608) (= 664613997892457936451903530140172288 (x922 2 119)) (= (x922 2 226) 107839786668602559178668060348078522694548577690162289924414440996864) (= (x922 2 133) 10889035741470030830827987437816582766592) (= (x922 2 114) 20769187434139310514121985316880384) (= (x922 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x922 2 53) 9007199254740992) (= (x922 2 63) 9223372036854775808) (= (x922 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x922 2 172) 5986310706507378352962293074805895248510699696029696) (= 288230376151711744 (x922 2 58)) (= (x922 2 37) 137438953472) (= (x922 2 92) 4951760157141521099596496896) (= (x922 2 14) 16384) (= (x922 2 78) 302231454903657293676544) (= (x922 2 198) 401734511064747568885490523085290650630550748445698208825344) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x922 2 249)) (= (x922 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= 81129638414606681695789005144064 (x922 2 106)) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x922 2 222)) (= 45671926166590716193865151022383844364247891968 (x922 2 155)) (= 37778931862957161709568 (x922 2 75)) (= 1180591620717411303424 (x922 2 70)) (= (x922 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= 324518553658426726783156020576256 (x922 2 108)) (= (x922 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= 1569275433846670190958947355801916604025588861116008628224 (x922 2 190)) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x922 2 227)) (= 332306998946228968225951765070086144 (x922 2 118)) (= (x922 2 136) 87112285931760246646623899502532662132736) (= (x922 2 33) 8589934592) (= (x922 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= 128 (x922 2 7)) (= 524288 (x922 2 19)) (= 12259964326927110866866776217202473468949912977468817408 (x922 2 183)) (= 196159429230833773869868419475239575503198607639501078528 (x922 2 187)) (= (x922 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= 19807040628566084398385987584 (x922 2 94)) (= 590295810358705651712 (x922 2 69)) (= (x922 2 34) 17179869184) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x922 2 220)) (= 365375409332725729550921208179070754913983135744 (x922 2 158)) (= (x922 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= (x922 2 195) 50216813883093446110686315385661331328818843555712276103168) (= 1393796574908163946345982392040522594123776 (x922 2 140)) (= 1427247692705959881058285969449495136382746624 (x922 2 150)) (= (x922 2 117) 166153499473114484112975882535043072) (= 26328072917139296674479506920917608079723773850137277813577744384 (x922 2 214)) (= (x922 2 82) 4835703278458516698824704) (= (x922 2 196) 100433627766186892221372630771322662657637687111424552206336) (= (x922 2 101) 2535301200456458802993406410752) (= 4611686018427387904 (x922 2 62)) (= (x922 2 5) 32) (= (x922 2 36) 68719476736) (= (x922 2 20) 1048576) (= (x922 2 192) 6277101735386680763835789423207666416102355444464034512896) (= (x922 2 122) 5316911983139663491615228241121378304) (= (x922 2 52) 4503599627370496) (= (x922 2 120) 1329227995784915872903807060280344576) (= 21778071482940061661655974875633165533184 (x922 2 134)) (= 16 (x922 2 4)) (= (x922 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= 9444732965739290427392 (x922 2 73)) (= (x922 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x922 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= (x922 2 113) 10384593717069655257060992658440192) (= 174224571863520493293247799005065324265472 (x922 2 137)) (= 23384026197294446691258957323460528314494920687616 (x922 2 164)) (= 2596148429267413814265248164610048 (x922 2 111)) (= (x922 2 97) 158456325028528675187087900672) (= (x922 2 143) 11150372599265311570767859136324180752990208) (= 16777216 (x922 2 24)) (= 1152921504606846976 (x922 2 60)) (= (x922 2 256) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= 392318858461667547739736838950479151006397215279002157056 (x922 2 188)) (= (x922 2 135) 43556142965880123323311949751266331066368) (= 2475880078570760549798248448 (x922 2 91)) (= 102844034832575377634685573909834406561420991602098741459288064 (x922 2 206)) (= 42535295865117307932921825928971026432 (x922 2 125)) (= (x922 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x922 2 241)) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x922 2 242)) (= (x922 2 98) 316912650057057350374175801344) (= (x922 2 18) 262144) (= (x922 2 189) 784637716923335095479473677900958302012794430558004314112) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x922 2 224)) (= 98079714615416886934934209737619787751599303819750539264 (x922 2 186)) (= (x922 2 173) 11972621413014756705924586149611790497021399392059392) (= 17592186044416 (x922 2 44)) (= (x922 2 105) 40564819207303340847894502572032) (= (x922 2 71) 2361183241434822606848) (= 83076749736557242056487941267521536 (x922 2 116)) (= (x922 2 2) 4) (= 822752278660603021077484591278675252491367932816789931674304512 (x922 2 209)) (= 803469022129495137770981046170581301261101496891396417650688 (x922 2 199)) (= 274877906944 (x922 2 38)) (= (x922 2 180) 1532495540865888858358347027150309183618739122183602176) (= 36028797018963968 (x922 2 55)) (= 51422017416287688817342786954917203280710495801049370729644032 (x922 2 205)) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x922 2 237)) (= (x922 2 157) 182687704666362864775460604089535377456991567872) (= 842498333348457493583344221469363458551160763204392890034487820288 (x922 2 219)) (= 13164036458569648337239753460458804039861886925068638906788872192 (x922 2 213)) (= (x922 2 191) 3138550867693340381917894711603833208051177722232017256448) (= 32768 (x922 2 15)) (= 374144419156711147060143317175368453031918731001856 (x922 2 168)) (= 151115727451828646838272 (x922 2 77)) (= 4398046511104 (x922 2 42)) (= 44601490397061246283071436545296723011960832 (x922 2 145)) (= (x922 2 100) 1267650600228229401496703205376) (= 2787593149816327892691964784081045188247552 (x922 2 141)) (= (x922 2 29) 536870912) (= 2305843009213693952 (x922 2 61)) (= (x922 2 130) 1361129467683753853853498429727072845824) (= (x922 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 5192296858534827628530496329220096 (x922 2 112)) (= 25108406941546723055343157692830665664409421777856138051584 (x922 2 194)) (= (x922 2 174) 23945242826029513411849172299223580994042798784118784) (= 18889465931478580854784 (x922 2 74)) (= (x922 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= 441711766194596082395824375185729628956870974218904739530401550323154944 (x922 2 238)) (= (x922 2 149) 713623846352979940529142984724747568191373312) (= 340282366920938463463374607431768211456 (x922 2 128)) (= 633825300114114700748351602688 (x922 2 99)) (= (x922 2 47) 140737488355328) (= 2251799813685248 (x922 2 51)) (= 10633823966279326983230456482242756608 (x922 2 123)) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x922 2 251)) (= (x922 2 21) 2097152) (= 22300745198530623141535718272648361505980416 (x922 2 144)) (= (x922 2 6) 64) (= 6901746346790563787434755862277025452451108972170386555162524223799296 (x922 2 232)) (= (x922 2 48) 281474976710656) (= 8192 (x922 2 13)) (= 680564733841876926926749214863536422912 (x922 2 129)) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x922 2 254)) (= 2417851639229258349412352 (x922 2 81)) (= (x922 2 80) 1208925819614629174706176) (= 8796093022208 (x922 2 43)) (= (x922 2 76) 75557863725914323419136) (= (x922 2 49) 562949953421312) (= 67108864 (x922 2 26)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x922 2 248)) (= (x922 2 152) 5708990770823839524233143877797980545530986496) (= (x922 2 93) 9903520314283042199192993792) (= 36893488147419103232 (x922 2 65)) (= 46768052394588893382517914646921056628989841375232 (x922 2 165)) (= 191561942608236107294793378393788647952342390272950272 (x922 2 177)) (= 11417981541647679048466287755595961091061972992 (x922 2 153)) (= 9671406556917033397649408 (x922 2 83)) (= (x922 2 9) 512) (= 6129982163463555433433388108601236734474956488734408704 (x922 2 182)) (= 12554203470773361527671578846415332832204710888928069025792 (x922 2 193)) (= (x922 2 178) 383123885216472214589586756787577295904684780545900544) (= 696898287454081973172991196020261297061888 (x922 2 139)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x922 2 255)) (= 1024 (x922 2 10)) (= (x922 2 59) 576460752303423488) (= (x922 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= 348449143727040986586495598010130648530944 (x922 2 138)) (= 205688069665150755269371147819668813122841983204197482918576128 (x922 2 207)) (= 12855504354071922204335696738729300820177623950262342682411008 (x922 2 203)) (= 73786976294838206464 (x922 2 66)) (= 77371252455336267181195264 (x922 2 86)) (= 766247770432944429179173513575154591809369561091801088 (x922 2 179)) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x922 2 235)) (= 309485009821345068724781056 (x922 2 88)) (= (x922 2 110) 1298074214633706907132624082305024) (= (x922 2 121) 2658455991569831745807614120560689152) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x922 2 245)) (= 95780971304118053647396689196894323976171195136475136 (x922 2 176)) (= (x922 2 35) 34359738368) (= 1237940039285380274899124224 (x922 2 90)) (= 134217728 (x922 2 27)) (= (x922 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= 85070591730234615865843651857942052864 (x922 2 126)) (= (x922 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x922 2 40) 1099511627776) (= 21267647932558653966460912964485513216 (x922 2 124)) (= 5846006549323611672814739330865132078623730171904 (x922 2 162)) (= (x922 2 147) 178405961588244985132285746181186892047843328) (= (x922 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= 1496577676626844588240573268701473812127674924007424 (x922 2 170)) (= (x922 2 175) 47890485652059026823698344598447161988085597568237568) (= (x922 2 142) 5575186299632655785383929568162090376495104) (= 18014398509481984 (x922 2 54)) (= (x922 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 162259276829213363391578010288128 (x922 2 107)) (= (x922 2 72) 4722366482869645213696) (= 356811923176489970264571492362373784095686656 (x922 2 148)) (= 20282409603651670423947251286016 (x922 2 104)) (= (x922 2 11) 2048) (= (x922 2 228) 431359146674410236714672241392314090778194310760649159697657763987456) (= (x922 2 223) 13479973333575319897333507543509815336818572211270286240551805124608) (= 1461501637330902918203684832716283019655932542976 (x922 2 160)) (= (x922 2 151) 2854495385411919762116571938898990272765493248) (= (x922 2 132) 5444517870735015415413993718908291383296) (= (x922 2 28) 268435456) (= (x922 2 115) 41538374868278621028243970633760768) (= 256 (x922 2 8)) (= (x922 2 45) 35184372088832) (= 39614081257132168796771975168 (x922 2 95)) (= 170141183460469231731687303715884105728 (x922 2 127)) (= (x922 2 161) 2923003274661805836407369665432566039311865085952) (= 200867255532373784442745261542645325315275374222849104412672 (x922 2 197)) (= 53919893334301279589334030174039261347274288845081144962207220498432 (x922 2 225)) (= (x922 2 46) 70368744177664) (= 131072 (x922 2 17)) (= (x922 2 169) 748288838313422294120286634350736906063837462003712) (= (x922 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x922 2 25) 33554432) (= 8 (x922 2 3)) (= (x922 2 89) 618970019642690137449562112) (= 5070602400912917605986812821504 (x922 2 102)) (= (x922 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x922 2 181) 3064991081731777716716694054300618367237478244367204352) (= (x922 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x922 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= 295147905179352825856 (x922 2 68)) (= 147573952589676412928 (x922 2 67)) (= (x922 2 109) 649037107316853453566312041152512) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x922 2 229)) (= (x922 2 31) 2147483648) (= (x922 2 154) 22835963083295358096932575511191922182123945984) (= 4096 (x922 2 12)) (= 93536104789177786765035829293842113257979682750464 (x922 2 166)) (= 79228162514264337593543950336 (x922 2 96)) (= (x922 2 156) 91343852333181432387730302044767688728495783936) (= (x922 2 85) 38685626227668133590597632) (= 2199023255552 (x922 2 41)) (= (x922 2 210) 1645504557321206042154969182557350504982735865633579863348609024)))
(assert (x642 x784))
(assert (x840 x909))
(assert (=> (<= x392 10000) (= 0 (x829 x392))))
(assert (x642 x526))
(assert (x840 x994))
(assert (= (and (not x335) x309) x12))
(assert (x642 x766))
(assert (x642 x775))
(assert (x642 x264))
(assert (x642 x299))
(assert (x642 x370))
(assert (x642 x244))
(assert (= (x289 (x116 64 x25 151)) 151))
(assert (= x935 (and x531 x1201)))
(assert (x642 x486))
(assert (x840 1))
(assert (x550 x994))
(assert (x642 x270))
(assert (x642 x160))
(assert (= (x829 115792089237316195423570985008687907853269984665640564039439137263839420088227) 0))
(assert (x642 x297))
(assert (= x677 (or x1212 x391 x381 x29 x562)))
(assert (x642 x1138))
(assert (x642 x188))
(assert (=> (<= x269 10000) (= (x829 x269) 0)))
(assert (x642 x993))
(assert (= (x829 8589934624) 0))
(assert (= (x829 x568) (x829 (+ x290 x568))))
(assert (x642 x16))
(assert (x75 x882 x243))
(assert (x642 x214))
(assert (x642 x1197))
(assert (x840 x171))
(assert (x642 x946))
(assert (= (x829 3703880962) 0))
(assert (x570 x223))
(assert (= x602 x557))
(assert (= x706 (and x1106 x1151)))
(assert (x642 x635))
(assert (x642 x307))
(assert (= x510 (and x1213 x927)))
(assert (x1017 82925012820599246762017191553447313009453208785080852368581866743583805014016))
(assert (x75 x480 x845))
(assert (x642 x383))
(assert (x642 x365))
(assert (x1017 102723710039514930950152684451134735340491996533626151901403227563028629159936))
(assert (x642 x571))
(assert (x642 x286))
(assert (x973 x882))
(assert (x642 x1041))
(assert (= x481 (or x308 x824 x12 x776 x1083)))
(assert (x642 x173))
(assert (x840 x919))
(assert (x484 x321))
(assert (= (x829 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (x642 x501))
(assert (x642 x1075))
(assert (= (and x961 x920) x1139))
(assert (x642 x221))
(assert (< 10000 (x668 64 x226 x259)))
(assert (x642 x117))
(assert (x642 x1102))
(assert (= x23 (and x1043 x19)))
(assert (= (x829 17179869532) 0))
(assert (= (ite (< x912 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x922 2 x912)) 0) (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x912)))
(assert (x642 x349))
(assert (= (and x115 (not x64)) x341))
(assert (= 0 (x829 18446744073709551614)))
(assert (x642 x10))
(assert (x642 x60))
(assert (x642 x964))
(assert (not (x1017 (x116 64 x25 151))))
(assert (x642 x916))
(assert (= (and x125 (not x192)) x295))
(assert (= (and x1123 x255) x28))
(assert (= x1057 (and x314 (not x661))))
(assert (x642 x511))
(assert (x642 x551))
(assert (x642 x223))
(assert (x642 x342))
(assert (< (x833 32 160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x520 (and x230 x1139)) x660))
(assert (= x166 (and x1117 x540)))
(assert (x642 x80))
(assert (x642 x963))
(assert (x840 x1127))
(assert (x642 x31))
(assert (x642 x1116))
(assert (x642 x57))
(assert (= (=> (and (= x1211 (x1103 1 x1006)) (<= 1 x766) (= (x1078 128) x994) (or (= 1 x588) (= x588 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x588 (x327 (- x1211 (mod (ite (> 32 x1114) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1005 (div x1006 2)) (>= 255 x766) (= x310 (< 31 x1114)) (= x1114 (ite (< 0 x1211) x1005 (x1103 127 x1005))) (>= 18446744073709551615 x994)) (and (=> (and (and (= x351 (div (+ 31 x994) 32)) (= (ite (> 32 x994) x568 x352) x457) (= (+ x290 x568) x515) (= (< x457 x515) x615) (= (x833 32 159) x568) (= x290 (div (+ x1114 31) 32)) (= (+ x568 x351) x352)) x310) (and (=> x615 x446) (=> (not x615) x1077))) (=> (not x310) x981))) x514))
(assert (= x439 (and (not x406) x239)))
(assert (x642 x614))
(assert (x642 x982))
(assert (x642 x121))
(assert (x642 x42))
(assert (= (or x556 x1035) x207))
(assert (x642 x260))
(assert (x642 x9))
(assert (x642 x917))
(assert (x1017 115792089237316195423570985007226406215939081747436879206741300988257197096962))
(assert (x840 31))
(assert (x642 x273))
(assert (x642 x630))
(assert (= (and x957 (not x998)) x1083))
(assert (= (x829 57896044618658097711785492504343953926634992332820282019728792003956564819907) 0))
(assert (= x573 (=> (and (or (and (not x44) (= x545 (ite x44 1 0))) (and x44 (and (>= 255 x811) (= (ite (< x811 1) 1 0) x545)))) (and (= x687 x240) (>= x777 1) (<= 228 x210) (<= x846 18446744073709551614) (= (+ x580 63) x456) (<= x9 18446744073709551615) (<= x210 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1038 (+ x646 160)) (= x331 x184) (= (+ 4 x9) x500) (= x263 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x41)) (= false x523) (= x846 (+ 128 x634)) (<= x1206 18446744073709551615) (>= x501 228) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088227 x846) (<= x846 18446744073709551615)) (= (+ x646 31) x41) (<= x407 255) (= (+ 31 x367) x775) (= x781 x853) (= x44 (= x407 0)) (<= x846 18446744073709551615) (>= 18446744073709551615 x846) (= x687 x280) (= x781 x292) (= x791 160) (= x337 false) (>= 18446744073709551614 x846) (< x451 x210) (= (x819 x331) x772) (= (= x813 (x900 164)) x402) (= x286 (x296 (+ x380 x546))) (<= x846 18446744073709551614) (= x210 x501) (or (>= 18446744073709551615 x846) (>= x846 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (= x1206 (x296 (+ x846 x1169))) (>= 18446744073709551487 x634) (= x618 x368) (not (< x210 x982)) (= x1080 (+ 63 x263)) (= x380 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1190)) (>= 18446744073709551615 x846) (<= x827 127) (>= x634 1) (= x618 x21) (<= x501 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x270 (+ x367 x1164)) (= (x296 (+ x741 31)) x1190) (= x501 (x327 (- x286 x511))) (or (>= 18446744073709551615 x846) (>= x846 115792089237316195423570985008687907853269984665640564039439137263839420088227)) (= x367 (x906 x500)) (>= 18446744073709551615 x367) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x456) x1169) (= x982 (+ x646 196)) (<= x646 18446744073709551615) (= (+ 32 x500) x1164) (<= 1 x772) (= (x296 (+ 32 x846)) x312) (>= 127 x827) (= (+ x631 32) x595) (= x634 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1080)) (= x9 x10) x402 (= (+ x530 32) x389) (<= 1 x1206) (= (x296 (+ x312 x367)) x1045) (= x1055 128) (= x887 12815038762725729950469637984808671091927904450484496604235796788765047914496) (= (x819 x184) x777) (= 475336206 x739) (= x646 (x906 164)) (= (x296 (+ x741 x546)) x752) (not (< x1206 x846)) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x775) x580) (not (< x210 x270)) (> x1206 x846) (= x530 (+ x595 32)) (= (+ x500 31) x451))) x458)))
(assert (= (=> (and (= x1199 false) (= x331 x929) (= x78 (= x1021 x331)) (= x321 x1021) (= false x361) (= x801 false) (= false x861)) x78) x261))
(assert (x642 x813))
(assert (x642 x360))
(assert (x642 x549))
(assert (x642 x340))
(assert (x642 x888))
(assert (= 0 (x829 67777324927979108784993931169012987862363405992453817108598075344574249697280)))
(assert (x642 x1176))
(assert (x642 x751))
(assert (x642 x366))
(assert (x642 x93))
(assert (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x642 x148))
(assert (x642 x392))
(assert (x642 x1171))
(assert (x642 x785))
(assert (x642 x949))
(assert (x642 x133))
(assert (x642 x334))
(assert (x642 x1120))
(assert (x840 x1006))
(assert (= 0 (x829 8589934718)))
(assert (x642 x500))
(assert (x840 x187))
(assert (x1017 17179869532))
(assert (x642 x507))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 64 x226 151)))
(assert (x642 x102))
(assert (x642 x727))
(assert (x642 x1099))
(assert (x642 x389))
(assert (= 0 (x829 134217728)))
(assert (x840 x54))
(assert (x642 x591))
(assert (= x893 (and x1151 (not x1106))))
(assert (= (x684 (x116 64 x697 151)) 64))
(assert (x642 x354))
(assert (= (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) (ite (< x426 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x922 2 x426)) 0)))
(assert (x642 x466))
(assert (x642 x512))
(assert (= (and (not x230) x1139) x627))
(assert (x642 x566))
(assert (x642 x538))
(assert (x642 x147))
(assert (x570 x411))
(assert (= (=> (and (and (= 0 x237) (= x942 1)) (or (not x44) (and (= x162 0) x44))) x435) x675))
(assert (= (=> (and (= (x1042 x881) x34) (= x1177 0) (<= x34 255) (= (x116 64 x226 151) x881) (= x215 (< 0 x34))) (and (=> (and (and (<= 1 x34) (= x34 x1050) (<= x34 255)) x215) x675) (=> (and (not x215) (and (= (ite x26 1 0) x268) (= x26 (= x387 x226)))) (and (=> (and (not x26) (and (= x268 1) (= 1 x66))) x137) (=> (and (and (and (>= x707 32) (<= x707 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x1101 (> x264 0))) (or (and (= x264 x1137) (not x1101)) (and (and (>= x707 32) (>= 4294967295 x707) (= x1137 1)) x1101))) x26) x640))))) x628))
(assert (x642 x734))
(assert (x642 x994))
(assert (x642 x86))
(assert (= (or x1154 x350 x940 x341 x717) x792))
(assert (x642 x889))
(assert (= (and x1201 (not x531)) x513))
(assert (x642 x200))
(assert (x1017 115792089237316195423570985008687907853269984665640564039439137263839420088227))
(assert (< (x668 64 x226 x259) 340282366920938463463374607431768211456))
(assert (x642 x312))
(assert (= (x684 (x116 64 x1115 151)) 64))
(assert (x642 x415))
(assert (x642 x248))
(assert (= (and (not x44) x677) x473))
(assert (x585 x754))
(assert (= x1182 (=> (and (<= 1 x31) (= x93 32) (= (+ 31 x465) x751) (= x173 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x751)) (= (x296 (+ x124 31)) x1127) (>= 18446744073709551613 x1120) (>= 18446744073709551614 x31) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819971 x246) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x246)) (= x815 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x949)) (<= x1120 18446744073709551613) (= x188 (x296 (+ x1118 32))) (or (>= 18446744073709551582 x1120) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819907 x1120)) (not (< x246 x1136)) (= x616 128) (= (x296 (+ x345 x302)) x996) (= x192 (< 0 x488)) (= x949 (+ 63 x959)) (<= x16 18446744073709551615) (> x16 x31) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x863) x959) (<= x1120 18446744073709551613) (= (x296 (+ x488 x474)) x1136) (or (>= 18446744073709551582 x1120) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819907 x1120)) (= x512 (x296 (+ x188 x373))) (> x31 x1120) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1127) x373) (<= x488 18446744073709551615) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x465) (= x124 (x447 128)) (= (x296 (+ 32 x689)) x1118) (>= 18446744073709551615 x302) (= x302 (x598 x345)) (not (< x16 x31)) (= x370 128) (<= 32 x465) (= (+ x815 x31) x16) (or (>= 18446744073709551582 x1120) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819907 x1120)) (<= 2 x16) (= x84 false) (= x1003 (x296 (+ x996 31))) (= x209 (+ 32 x31)) (or (and (> x1003 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x246)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x246) (<= x1003 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1003 x246))) (= x474 (x296 (+ x996 32))) (= x465 (x327 (- x512 x689))) (= x488 (x598 x996)) (<= x815 18446744073709551614) (= (x296 (+ x345 x173)) x31) (= x246 (x296 (+ x345 x465))) (= x345 (x296 (+ 32 x1120))) (= x18 false) (= (+ x488 31) x863)) (and (=> (not x192) x1108) (=> (and (and (= (< 32 x488) x225) (= (x291 x474) x993)) x192) (and (=> (and x225 (and (= (x425 x274) x635) (= (+ 32 x209) x735) (= x499 (> x488 64)) (= x274 (x296 (+ x474 32))))) (and (=> (not x499) x1108) (=> (and x499 (and (= (x296 (+ x474 64)) x1032) (= (> x488 96) x250) (= x317 (+ x209 64)) (= (x835 x1032) x365))) (and (=> (not x250) x1108) (=> x250 x6))))) (=> (not x225) x1108)))))))
(assert (= x698 (or x436 x2)))
(assert (= (or x706 x893) x1147))
(assert (= x301 (or x185 x617 x968 x439 x525)))
(assert (x642 x171))
(assert (x642 x758))
(assert (x642 x1163))
(assert (x642 x187))
(assert (x840 x692))
(assert (x642 x395))
(assert (x642 x443))
(assert (= (and x778 x225) x1011))
(assert (x642 x1009))
(assert (not (x1017 (x833 32 160))))
(assert (x642 x1003))
(assert (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x642 x616))
(assert (= 159 (x1194 (x833 32 159))))
(assert (= x379 (=> (and (<= x1128 255) (= x1025 1) (= (> x1128 0) x624) (= (x116 64 x226 151) x384) (= x1128 (x1042 x384))) (and (=> (and (and (= x1128 x382) (= x931 x1206) (>= 255 x1128) (>= x1128 1)) x624) x445) (=> (and (and (= x471 (= x226 x387)) (= x194 (ite x471 1 0))) (not x624)) (and (=> (and (and (and (= (> x779 0) x1106) (<= 32 x620) (<= x620 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (or (and (= x779 x33) (not x1106)) (and (and (>= 4294967295 x620) (<= 32 x620) (= x33 1)) x1106))) x471) x143) (=> (and (not x471) (and (= x1206 x1) (= x875 1) (= x194 1))) x496)))))))
(assert (x570 x1190))
(assert (= (and x612 x52) x193))
(assert (= x6 (=> (and (= x219 (+ 96 x209)) (= x1007 (x296 (+ 96 x474))) (= (x649 x1007) x461) (= x1170 (not (> x488 128)))) (and x1108 x1170))))
(assert (= x201 (=> (and (<= x1115 1461501637330902918203684832716283019655932542975) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x931)) (= x614 x329) (<= x931 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x296 (+ 32 x931)) x329) (not (= x931 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x931 x329) (= (x116 64 x1115 151) x713) (= x1052 (x1042 x713)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x931) (= (x320 x931) x1115) (<= 1 x1052) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x931)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x931) (<= 1 x610) (= x1163 x1052) (>= 255 x1052)) x450)))
(assert (x642 x17))
(assert (x642 x240))
(assert (x642 x623))
(assert (= (x829 (+ x417 x1059)) (x829 x417)))
(assert (= 0 (x829 57896044618658097711785492504343953926634992332820282019728792003956564819971)))
(assert (= x1201 (or x122 x377)))
(assert (x973 x480))
(assert (= x261 x59))
(assert (x642 x345))
(assert (x840 x109))
(assert (x840 x80))
(assert (x642 x506))
(assert (= (or x110 x810) x3))
(assert (x642 x56))
(assert (x642 x237))
(assert (x642 x135))
(assert (x642 x490))
(assert (x642 x827))
(assert (x642 x142))
(assert (x642 x219))
(assert (x642 x368))
(assert (x642 x1105))
(assert (not (x1017 (x116 64 x226 151))))
(assert (= x864 (=> (and (= (x388 x31) x1039) (= (+ x31 32) x448) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1041) x695) (= x888 (x327 (- x1159 x16))) (= (x296 (+ 32 x16)) x353) (= x663 (x296 (+ 32 x1159))) (= x1159 (x296 (+ x695 x806))) (= x847 (< 0 x1039)) (= (x296 (+ 31 x724)) x1041) (= x737 (x296 (+ x724 x806)))) (and (=> (and x847 (and (= x366 (x745 x448)) (= (> x1039 32) x744))) (and (=> (not x744) x348) (=> (and x744 (and (= (+ x448 32) x1056) (= x357 (x203 x1056)) (= x249 (< 64 x1039)) (= x399 (x296 (+ 32 x663))))) (and (=> (not x249) x348) (=> (and x249 (and (= (x921 x354) x492) (= x569 (x296 (+ x663 64))) (= x354 (+ 64 x448)) (= (< 96 x1039) x1189))) (and (=> (not x1189) x348) (=> x1189 x552))))))) (=> (not x847) x348)))))
(assert (x642 x253))
(assert (x642 x1115))
(assert (x642 x27))
(assert (x642 x781))
(assert (x642 x65))
(assert (= (and x543 (not x1205)) x617))
(assert (x1017 12815038762725729950469637984808671091927904450484496604235796788765047914496))
(assert (= x1077 x981))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 64 x1115 151)))
(assert (= (and x454 x856) x516))
(assert (= x850 (or x1028 x891)))
(assert (x642 x1045))
(assert (x642 x220))
(assert (x642 x770))
(assert (= 0 (x829 109908292108392705413647700182009080257555005842447634700842110517808040247296)))
(assert (x642 x1025))
(assert (= (and (not x561) x477) x460))
(assert (x642 x1121))
(assert (= x314 (and x344 x748)))
(assert (= x971 (or x935 x513)))
(assert (> (x116 64 x226 151) 10000))
(assert (x642 x362))
(assert (x642 x1097))
(assert (x798 x1087 x109))
(assert (= (x829 x703) (x829 (+ x703 1))))
(assert (x642 x985))
(assert (= (and x858 x215) x177))
(assert (x840 x41))
(assert (x642 x1211))
(assert (x642 x1))
(assert (= x348 (=> (and (= (x819 x331) x507) (= x785 (x664 x280)) (<= x894 4294967295) x1153 (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x16)) (= 1 x667) x721 (<= 1 x507) (= (x296 (+ 32 x519)) x866) (>= x56 1) (= x1086 (x819 x280)) (>= x172 1) (= x160 (x296 (+ x874 32))) x1111 (= x874 (x296 (+ 32 x879))) (= x890 36) (= x734 (x296 (+ 32 x95))) (= x712 (<= x205 (x656 x226))) (= (x296 (+ x734 32)) x161) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x16)) (= x764 (x296 (+ x600 4))) (>= x86 1) (= x879 (x296 (+ x16 4))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x16)) (>= x1086 1) (= 1 x548) (= (= x785 (x656 x280)) x528) (<= 1 x637) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x16) (= x890 (x327 (- x688 x600))) (= x333 (x666 x226)) (= x256 (x656 x280)) (= (>= (x664 x226) x333) x1153) (<= x134 1461501637330902918203684832716283019655932542975) (= (= (x901 x280) x256) x1111) x528 (= (x819 x280) x86) (= x478 (x296 (+ 4 x600))) (= x139 (x819 x280)) (>= x139 1) (= x205 (x664 x226)) (= (x296 (+ 32 x538)) x1125) (<= x16 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x688 (x296 (+ x478 32))) (<= x549 4294967295) (= (= x184 x331) x920) (= (x656 x226) x253) (= x538 (x296 (+ 32 x161))) (<= x16 115792089237316195423570985008687907853269984665640564039457584007913129639934) x603 (< x16 x600) (= x600 (x296 (+ 192 x16))) (>= 1461501637330902918203684832716283019655932542975 x362) (= x985 (x666 x280)) (= (<= x253 (x901 x226)) x721) (= (x296 (+ x1125 32)) x1099) (= x45 (x296 (+ x663 x1039))) x712 (>= 4294967295 x340) (= (x296 (+ x16 4)) x108) (= (x296 (+ x764 32)) x95) (= x519 (x296 (+ x108 32))) (= (= (x664 x280) x985) x603)) (and (=> (and (and (<= 1 x60) (>= 127 x98) (>= 1461501637330902918203684832716283019655932542975 x506) (= (x819 x184) x60) (= x697 x736) (= false x878) (= x1037 36) (= false x13) (= x226 x506) (= x40 4076725131) (= 109908292108392705413647700182009080257555005842447634700842110517808040247296 x750) (>= x506 1) (= (= x506 x697) x230) (<= x98 127) (= x453 x736)) x920) (and (=> x230 x59) (=> (and (not x230) (and (or (and (not x505) (= x271 (x116 64 x697 151))) x505) (and (>= 255 x725) (= (x116 64 x697 151) x956) (or (<= 115792089237316195423570985007226406215939081747436879206741300988257197096962 x823) (and (>= x823 1) (<= x823 1461501637330902918203684832716283019655932542975))) (= x823 (x327 (- x697 x1198))) (= x226 x506) (= (x1174 x956) x725) (>= 1461501637330902918203684832716283019655932542975 x1198) (>= x697 1) (<= x697 1461501637330902918203684832716283019655932542975) (= x505 (> x725 0)) (= x414 x38)))) x145))) (=> (and (not x920) (and (= false x997) (<= x336 127) (= x393 x697) (>= 1461501637330902918203684832716283019655932542975 x697) (= x393 x581) (<= 1 x71) (= 109908292108392705413647700182009080257555005842447634700842110517808040247296 x1171) (= x103 4076725131) (= x71 x226) (= 36 x410) (>= 127 x336) (= x1168 x414) (= (x819 x226) x605) (<= x71 1461501637330902918203684832716283019655932542975) (>= x605 1) (>= x697 1) (= x331 x226) (= x130 false))) x261)))))
(assert (x1017 475336206))
(assert (x642 x924))
(assert (x642 x1079))
(assert (x642 x246))
(assert (x570 x456))
(assert (x642 x823))
(assert (x642 x1098))
(assert (x570 x54))
(assert (= x1185 (and x211 x594)))
(assert (x642 x124))
(assert (x642 x94))
(assert (x642 x274))
(assert (x642 x959))
(assert (x642 x762))
(assert (x642 x210))
(assert (= (=> (and (and (= x174 (x619 x149)) (= x149 (x116 64 x226 151)) (<= x387 1461501637330902918203684832716283019655932542975) (= x740 (x327 (- x226 x387))) (<= x147 1461501637330902918203684832716283019655932542975) (or (>= x740 115792089237316195423570985007226406215939081747436879206741300988257197096962) (and (>= 1461501637330902918203684832716283019655932542975 x740) (>= x740 1))) (<= x174 255) (= x753 (> x174 0))) (or (and (= x851 (x116 64 x226 151)) (not x753)) x753)) x379) x841))
(assert (x642 x600))
(assert (x642 x724))
(assert (x642 x1191))
(assert (x642 x433))
(assert (x642 x569))
(assert (= 0 (x829 18446744073709551613)))
(assert (> (x116 64 x1115 151) 10000))
(assert (x642 x95))
(assert (= x726 (and x314 x661)))
(assert (x1017 18446744073709551582))
(assert (x798 x1138 x692))
(assert (= (=> (and (= x882 (x1103 x1138 x692)) (= (* 8 x411) x426) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x885) x692) (= (* x411 2) x243) (= (x296 (+ x882 x243)) x153) (= (<= x882 1) x658) (= (x1089 x882 x243) x133) (= x544 (ite x658 x153 x133)) (= (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) x885) (>= x885 1) (= x946 (ite x658 x153 x133))) x841) x980))
(assert (x642 x1049))
(assert (x642 x451))
(assert (= 0 (x829 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (x642 x541))
(assert (x642 x662))
(assert (x642 x410))
(assert (x642 x146))
(assert (x642 x103))
(assert (x840 x751))
(assert (x1017 18446744073709551615))
(assert (= (x116 64 x25 151) (x829 (x116 64 x25 151))))
(assert (x642 x894))
(assert (x642 x816))
(assert (= 151 (x289 (x116 64 x392 151))))
(assert (= 151 (x289 (x116 64 x226 151))))
(assert (x642 x808))
(assert (x642 x453))
(assert (= (or x995 x398 x679 x303 x295) x115))
(assert (x642 x380))
(assert (x642 x853))
(assert (= 160 (x1194 (x833 32 160))))
(assert (= (x829 82925012820599246762017191553447313009453208785080852368581866743583805014016) 0))
(assert (x840 x189))
(assert (x642 x1190))
(assert (> (x116 64 x697 151) 10000))
(assert (x642 x873))
(assert (= (and x44 x677) x397))
(assert (x642 x1002))
(assert (= (and x1205 x543) x645))
(assert (= (and (not x1192) x652) x183))
(assert (x1017 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x642 x109))
(assert (x642 x754))
(assert (x840 x182))
(assert (= (x1194 (x116 64 x392 151)) x392))
(assert (x642 x283))
(assert (x642 x461))
(assert (x642 x82))
(assert (x570 x949))
(assert (x840 x946))
(assert (x642 x1109))
(assert (= (=> (and (= (ite (< 0 x293) x575 (x1103 127 x575)) x1009) (= (x1103 1 x189) x293) (= x334 (x327 (- x293 (mod (ite (< x1009 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x1018 127) (= 3162421667457357072237249128631551985524704858613737409516517017801010970624 x839) (= x575 (div x189 2)) (>= x522 1) (= x331 x184) (= x433 (* 32 x244)) (= x599 4) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x334) (= x334 1)) (= (x819 x184) x522) (= 117300739 x135) (= false x728) (= false x170) (<= x1018 127) (= (div (+ 31 x1009) 32) x244) (= (= 0 x1009) x52) (= (+ 160 x433) x669)) (and (=> x52 x602) (=> (and (= (> x1009 31) x521) (not x52)) (and (=> (and (not x521) (and (= (div x189 256) x796) (= (* x796 256) x933))) x602) (=> (and x521 (and (= x504 (< 192 x582)) (= (+ 160 x1009) x582) (= x655 (x7 x774)) (= (+ 1 x774) x708) (= x774 (x833 32 159)))) (and (=> x504 x537) (=> (not x504) x557))))))) x435))
(assert (x642 x879))
(assert (x642 x54))
(assert (= (=> (and (= (x729 x926) x917) (= x671 (x296 (+ x546 96))) (= x1029 (not (> x741 128))) (= x926 (+ 96 x1023))) (and x1029 x573)) x236))
(assert (x1017 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (x642 x740))
(assert (x642 x643))
(assert (x642 x737))
(assert (x642 x530))
(assert (x570 x542))
(assert (x642 x429))
(assert (x642 x777))
(assert (x642 x546))
(assert (x840 x575))
(assert (x642 x965))
(assert (= (and x1123 (not x255)) x1212))
(assert (= (or x1180 x660) x1193))
(assert (= (x829 x774) (x829 (+ 1 x774))))
(assert (x642 x338))
(assert (x642 x112))
(assert (x642 x396))
(assert (x642 x21))
(assert (= x137 (=> (= x66 x1050) x675)))
(assert (x642 x25))
(assert (x642 x1177))
(assert (x642 x493))
(assert (x642 x1090))
(assert (= x613 (and x612 (not x52))))
(assert (= 0 (x829 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x840 x1087))
(assert (x1017 18446744073709551613))
(assert (x642 x838))
(assert (= (x829 8589934916) 0))
(assert (=> (>= 10000 x184) (= 0 (x829 x184))))
(assert (x840 x1138))
(assert (x642 x1052))
(assert (= (x829 (+ 1 x378)) (x829 x378)))
(assert (x550 x411))
(assert (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x642 x222))
(assert (x642 x757))
(assert (x642 x669))
(assert (= x1013 (and x1011 x499)))
(assert (x840 x604))
(assert (x642 x848))
(assert (x585 x189))
(assert (x642 x40))
(assert (x840 x429))
(assert (x642 x411))
(assert (x642 x682))
(assert (x642 x1150))
(assert (= x508 (and x463 x481)))
(assert (x642 x519))
(assert (x642 x788))
(assert (x642 x604))
(assert (x642 x647))
(assert (= (x829 12815038762725729950469637984808671091927904450484496604235796788765047914496) 0))
(assert (= 0 (x829 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (< 10000 (x116 64 x25 151)))
(assert (x642 x108))
(assert (x642 x839))
(assert (x642 x485))
(assert (x642 x387))
(assert (= (and (not x943) x1185) x110))
(assert (x642 x331))
(assert (= x1117 (and (not x1122) x850)))
(assert (x642 x595))
(assert (x642 x887))
(assert (x642 x287))
(assert (x642 x650))
(assert (x642 x336))
(assert (= (and x914 x471) x1151))
(assert (= x876 (=> (= (= 1 (ite (> x411 31) 1 0)) x748) (and (=> (and x748 (and (= (x833 32 160) x703) (= (< 0 x808) x661) (= x808 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x411)))) (and (=> (and (and (= x703 x165) (= x401 32)) (not x661)) x685) (=> x661 x705))) (=> (and (not x748) (and (or (and (= x1138 0) x1126) (and (not x1126) (and (= x665 (x176 x312)) (= x665 x1138)))) (= x1126 (= 0 x411)))) x980)))))
(assert (x642 x996))
(assert (x642 x1020))
(assert (= x143 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1206) (not (= x1206 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x392 1461501637330902918203684832716283019655932542975) (>= x1176 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1206)) (<= 1 x33) (<= x1176 255) (= x1176 x875) (< x1206 x415) (= (x857 x1206) x392) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1206)) (= (x116 64 x392 151) x181) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1206) (= x415 (x296 (+ 32 x1206))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1206) (= (x1042 x181) x1176) (= x415 x1)) x496)))
(assert (= (x829 (+ x169 1)) (x829 x169)))
(assert (x642 x688))
(assert (x642 x474))
(assert (x642 x1164))
(assert (= x831 (and x521 x613)))
(assert (x642 x866))
(assert (x1017 67777324927979108784993931169012987862363405992453817108598075344574249697280))
(assert (x642 x382))
(assert (x642 x548))
(assert (x642 x599))
(assert (x642 x479))
(assert (= x316 (and x951 x1189)))
(assert (= 0 (x829 3162421667457357072237249128631551985524704858613737409516517017801010970624)))
(assert (x1017 18446744073709551614))
(assert (x642 x582))
(assert (= (x289 (x116 64 x697 151)) 151))
(assert (x570 x916))
(assert (x642 x174))
(assert (= x458 (=> (= (> x545 0) x559) (and (=> (and x559 (= 1 x545)) x1155) (=> (and (not x559) (and (and (= x234 (ite (< 0 x490) 1 0)) (= x102 (ite x19 1 0)) (= (x819 x184) x490) (= x19 (= 0 x234))) (or (and (= 1 x102) (not x19)) (and x19 (= 1 x811))))) x1081)))))
(assert (= 64 (x1181 (x668 64 x226 x259))))
(assert (x1017 57896044618658097711785492504343953926634992332820282019728792003956564819971))
(assert (x642 x1059))
(assert (= (x684 (x116 64 x25 151)) 64))
(assert (x840 x542))
(assert (= (and x504 x831) x969))
(assert (x642 x1128))
(assert (x642 x875))
(assert (x642 x197))
(assert (x642 x58))
(assert (x642 x1055))
(assert (x642 x707))
(assert (x642 x45))
(assert (x642 x66))
(assert (= x1186 (and (not x471) x914)))
(assert (x642 x812))
(assert (x642 x779))
(assert (x642 x581))
(assert (x642 x448))
(assert (x642 x772))
(assert (x642 x822))
(assert (= (and x68 x645) x525))
(assert (= x652 (and x472 x1175)))
(assert (x642 x153))
(assert (x570 x919))
(assert (x570 x171))
(assert (x642 x593))
(assert (x585 x1006))
(assert (= (and x508 (not x1132)) x391))
(assert (x642 x178))
(assert (x642 x577))
(assert (x1017 18446744073709551487))
(assert (x642 x1118))
(assert (x1017 109908292108392705413647700182009080257555005842447634700842110517808040247296))
(assert (x642 x456))
(assert (x1017 1461501637330902918203684832716283019655932542975))
(assert (x642 x665))
(assert (x642 x492))
(assert (= 32 (x684 (x833 32 160))))
(assert (x642 x1210))
(assert (= x445 (=> (and (= (x1042 x742) x112) (= 0 x1098) (= x1122 (< 0 x112)) (= x742 (x116 64 x226 151)) (<= x112 255)) (and (=> (and x1122 (and (>= x112 1) (= x112 x925) (= x990 x931) (<= x112 255))) x628) (=> (and (not x1122) (and (= (= x226 x387) x540) (= x220 (ite x540 1 0)))) (and (=> (and x540 (and (or (and (not x972) (= x610 x180)) (and (and (= x610 1) (<= 32 x242) (>= 4294967295 x242)) x972)) (and (<= 32 x242) (= x972 (< 0 x180)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x242)))) x201) (=> (and (and (= x614 x931) (= 1 x1163) (= 1 x220)) (not x540)) x450)))))))
(assert (x642 x426))
(assert (x642 x1179))
(assert (x642 x580))
(assert (x642 x407))
(assert (x570 x182))
(assert (x642 x962))
(assert (x642 x209))
(assert (x642 x1044))
(assert (= x958 (or x654 x756 x193)))
(assert (x642 x356))
(assert (x642 x226))
(assert (x642 x1198))
(assert (not (x1017 (x116 64 x1115 151))))
(assert (x339 x909))
(assert (= x954 (and x1000 x204)))
(assert (x642 x895))
(assert (= (and x1117 (not x540)) x709))
(assert (= x805 (and x154 x869)))
(assert (x642 x259))
(assert (x642 x806))
(assert (= (and x477 x561) x111))
(assert (x642 x369))
(assert (x642 x912))
(assert (= (and (not x927) x1213) x670))
(assert (x642 x256))
(assert (x642 x1080))
(assert (x642 x293))
(assert (x642 x865))
(assert (= (or x709 x73) x347))
(assert (x642 x1127))
(assert (x642 x689))
(assert (x1017 2514000705))
(assert (x642 x877))
(assert (= (x289 (x116 64 x1115 151)) 151))
(assert (x642 x605))
(assert (x840 x1041))
(assert (x642 x164))
(assert (= (=> (and (= (x296 (+ x16 64)) x164) (= (+ 32 x650) x838) (= (> x724 0) x64) (= x724 (x870 x650)) (= x1146 (+ x209 x488)) (= (x296 (+ x164 32)) x806)) (and (=> (and (and (= x1130 (< 32 x724)) (= x844 (x621 x838))) x64) (and (=> (not x1130) x864) (=> (and (and (= (+ x838 32) x822) (= (< 64 x724) x204) (= (x296 (+ x806 32)) x1121) (= (x15 x822) x231)) x1130) (and (=> (and (and (= (x296 (+ x806 64)) x763) (= x1084 (> x724 96)) (= x577 (x1207 x356)) (= x356 (+ 64 x838))) x204) (and (=> (not x1084) x864) (=> x1084 x693))) (=> (not x204) x864))))) (=> (not x64) x864))) x1108))
(assert (x642 x926))
(assert (x642 x944))
(assert (= (x684 (x833 32 159)) 32))
(assert (> (x833 32 160) 10000))
(assert (x642 x799))
(assert (= (and x778 (not x225)) x398))
(assert (x642 x1007))
(assert (x642 x1114))
(assert (x840 x803))
(assert (x642 x404))
(assert (x642 x469))
(assert (x642 x113))
(assert (x840 127))
(assert (x642 x986))
(assert (x642 x923))
(assert (x642 x323))
(assert (= (x833 32 160) (x829 (x833 32 160))))
(assert (=> (>= 10000 x25) (= 0 (x829 x25))))
(assert (= (=> (and (= x889 (x1209 160)) (= (+ 1 x169) x834) (= x49 (not (< 32 x32)))) (and x49 (=> (and (= 64 x611) (= x151 x834)) x639))) x934))
(assert (= (x829 72962670233317687161045261331826126319863115189623388230215292944087915692032) 0))
(assert (= (and x1084 x954) x350))
(assert (x642 x488))
(assert (x642 x234))
(assert (= x543 (and x406 x239)))
(assert (= (or x141 x1133) x344))
(assert (x642 x1161))
(assert (= (and (not x505) x627) x202))
(assert (x642 x634))
(assert (= x778 (and x125 x192)))
(assert (x840 x754))
(assert (= x594 (and x301 (not x747))))
(assert (x642 x960))
(assert (x642 x76))
(assert (x1017 4076725131))
(assert (= (x829 18446744073709551582) 0))
(assert (x642 x268))
(assert (x642 x607))
(assert (x642 x764))
(assert (x642 x874))
(assert (x642 x462))
(assert (x642 x1137))
(assert (x1017 8589934592))
(assert (= x520 (or (and x505 x627) x202)))
(assert (x642 x950))
(assert (x642 x755))
(assert (x642 x70))
(assert (x642 x763))
(assert (x840 x800))
(assert (x642 x487))
(assert (= (or x913 x347) x858))
(assert (= x125 (or x330 x583 x3)))
(assert (x642 x854))
(assert (x642 x1112))
(assert (= x832 x876))
(assert (= (and x26 x208) x238))
(assert (= (and x422 x44) x328))
(assert (x585 x946))
(assert (= (=> (and (= (x296 (+ x1109 x593)) x895) (>= 18446744073709551613 x511) (= (x296 (+ 32 x241)) x593) (= x241 (x296 (+ x403 x662))) (>= x650 1) (= x117 128) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x54) x1210) (= (x296 (+ 32 x511)) x403) (< x511 x650) (= x1120 (+ x711 x650)) (= x386 (x296 (+ 31 x241))) (>= 18446744073709551614 x711) (= (x941 128) x1073) (or (and (<= x96 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x386 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x96 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x386 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x96 x386))) (>= 18446744073709551613 x511) (= (x296 (+ 32 x669)) x782) (<= x650 18446744073709551614) (<= 2 x1120) (= x491 false) (>= x848 32) (= x977 false) (= x650 (x296 (+ x403 x494))) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x919) x494) (or (>= 18446744073709551582 x511) (>= x511 57896044618658097711785492504343953926634992332820282019728792003956564819907)) (= (x421 x241) x1109) (>= 18446744073709551615 x662) (= (+ x1109 31) x54) (= x962 32) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x223) x711) (= (x327 (- x349 x669)) x848) (= x96 (x296 (+ x403 x848))) (= (> x1109 0) x168) (= x662 (x421 x403)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x848) (= (+ x848 31) x919) (not (< x1120 x650)) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x96) (>= x96 57896044618658097711785492504343953926634992332820282019728792003956564819971)) (= x770 (+ 32 x650)) (= (+ x1210 63) x223) (= x672 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x80)) (<= x511 18446744073709551613) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819907 x511) (>= 18446744073709551582 x511)) (= (x296 (+ x1073 31)) x80) (>= 18446744073709551615 x1109) (< x650 x1120) (= (x296 (+ x842 x672)) x349) (or (<= x511 18446744073709551582) (>= x511 57896044618658097711785492504343953926634992332820282019728792003956564819907)) (>= 18446744073709551615 x1120) (not (< x96 x895)) (= x842 (x296 (+ x782 32)))) (and (=> (and x168 (and (= x76 (x1062 x593)) (= x406 (< 32 x1109)))) (and (=> (not x406) x576) (=> (and (and (= x802 (x296 (+ x593 32))) (= x1205 (> x1109 64)) (= (+ 32 x770) x1096) (= x797 (x746 x802))) x406) (and (=> (and x1205 (and (= (x296 (+ 64 x593)) x277) (= (x718 x277) x591) (= x68 (> x1109 96)) (= (+ 64 x770) x82))) (and (=> x68 x245) (=> (not x68) x576))) (=> (not x1205) x576))))) (=> (not x168) x576))) x602))
(assert (= (=> (and (or (and x44 (and (= 1 x214) (= x766 1))) (and (not x44) (= x766 x407))) (= x720 1)) x514) x1155))
(assert (x642 x925))
(assert (x642 x1050))
(assert (= (x829 (+ x351 x568)) (x829 x568)))
(assert (x642 x367))
(assert (x642 x182))
(assert (x642 x601))
(assert (x642 x1206))
(assert (= x1180 (and (not x920) x961)))
(assert (x642 x663))
(assert (= x756 (and x613 (not x521))))
(assert (not (x1017 (x116 64 x697 151))))
(assert (x642 x53))
(assert (= (=> (and (= (* 32 x1049) x374) (= x1049 (div (+ x807 31) 32)) (= (+ x1109 x770) x1027) (= 67777324927979108784993931169012987862363405992453817108598075344574249697280 x731) (>= x479 1) (= x807 (ite (< 0 x272) x187 (x1103 127 x187))) (= (x1103 1 x946) x272) (= x606 false) (>= 127 x200) (>= 127 x200) (= x184 x331) (or (= x682 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x682 1)) (= (+ 160 x374) x689) (= x479 (x819 x184)) (= (div x946 2) x187) (= 4 x974) (= x20 2514000705) (= x747 (= 0 x807)) (= false x437) (= (x327 (- x272 (mod (ite (> 32 x807) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x682)) (and (=> x747 x1182) (=> (and (= x211 (< 31 x807)) (not x747)) (and (=> (and (and (= x960 (div x946 256)) (= x148 (* x960 256))) (not x211)) x1182) (=> (and (and (= x943 (> x197 192)) (= x138 (x833 32 160)) (= x197 (+ x807 160)) (= x976 (+ x138 1)) (= x69 (x123 x138))) x211) (and (=> (not x943) x719) (=> x943 x179))))))) x576))
(assert (x798 x800 x429))
(assert (x642 x736))
(assert (x642 x20))
(assert (x642 x687))
(assert (x642 x637))
(assert (x642 x1066))
(assert (= 0 (x829 117300739)))
(assert (x642 x333))
(assert (x840 x223))
(assert (= (and x957 x998) x454))
(assert (x642 x1159))
(assert (x642 x1096))
(assert (= (and (not x499) x1011) x995))
(assert (x642 x134))
(assert (x642 x1032))
(assert (= x1051 (and x744 x953)))
(assert (x642 x842))
(assert (x642 x263))
(assert (x642 x741))
(assert (= (x829 8589934592) 0))
(assert (= x992 (and x208 (not x26))))
(assert (x642 x118))
(assert (x642 x815))
(assert (x642 x918))
(assert (= x308 (and (not x856) x454)))
(assert (= x945 (and x972 x166)))
(assert (x642 x907))
(assert (= x1000 (and x1130 x376)))
(assert (x642 x231))
(assert (x642 x1048))
(assert (x642 x1113))
(assert (x973 x845))
(assert (x642 x33))
(assert (x642 x432))
(assert (= x556 (and x753 x967)))
(assert (x1017 134217728))
(assert (x339 x1005))
(assert (x642 x494))
(assert (= x140 (and (not x615) x251)))
(assert (= (or x423 x683) x262))
(assert (x1017 72962670233317687161045261331826126319863115189623388230215292944087915692032))
(assert (x973 x243))
(assert (= x1107 (=> (and (= (x155 256) x944) (= x1179 (+ x248 96)) (= x355 (not (> x813 128)))) (and x355 x1208))))
(assert (= x212 (or x111 x460)))
(assert (= x903 (and x114 x1126)))
(assert (x642 x739))
(assert (x642 x750))
(assert (= x423 (and x1101 x238)))
(assert (x642 x931))
(assert (= (and x301 x747) x583))
(assert (= (=> (= (= 1 (ite (< 31 x994) 1 0)) x869) (and (=> (and x869 (and (= x169 (x833 32 159)) (= x32 (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x994)) (= x1188 (> x32 0)))) (and (=> x1188 x934) (=> (and (not x1188) (and (= 32 x611) (= x151 x169))) x639))) (=> (and (and (or (and (not x561) (and (= x1102 (x1209 160)) (= x1102 x803))) (and (= x803 0) x561)) (= (= x994 0) x561)) (not x869)) x928))) x981))
(assert (x642 x71))
(assert (= (and x943 x1185) x810))
(assert (x642 x852))
(assert (x339 x575))
(assert (= (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x784) (ite (> 256 x784) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x922 2 x784)) 0)))
(assert (= (or x473 x397) x567))
(assert (x642 x357))
(assert (x642 x818))
(assert (= (x829 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x642 x386))
(assert (= (and x567 x559) x714))
(assert (= (or x1024 x177) x422))
(assert (x1017 8589934916))
(assert (= x967 (or x908 x1008)))
(assert (= x1123 (and x1132 x508)))
(assert (< 10000 (x833 32 159)))
(assert (= 0 (x829 4294967295)))
(assert (= (and (not x19) x1043) x318))
(assert (= 0 (x829 4076725131)))
(assert (x642 x401))
(assert (x642 x43))
(assert (x642 x863))
(assert (x642 x1087))
(assert (x642 x1037))
(assert (= x154 (or x186 x119)))
(assert (x840 x775))
(assert (x840 x916))
(assert (x642 x952))
(assert (x840 x1005))
(assert (= (=> (and (and (= x765 x979) (and (and (and (= x70 x902) (and (= x470 x565) (and (= x565 x1020) (and (and (and (and (= x699 x773) (and (= x369 x892) (and (and (and (>= x120 1) (> x511 x924) (<= x8 8589934718) (= (x668 64 x226 x259) x331) (= 3703880962 x877) (= x1097 (x1015 x226)) (= (x1095 260) x284) (= (+ x8 128) x924) (>= 17179869532 x511) (= (+ 292 x284) x899) (not (> x899 x94)) (= x511 (+ x924 x852)) (= (+ x383 31) x1075) (= x647 x952) (>= x1105 324) (not (< x511 x924)) (>= 127 x1158) (= x1023 (+ x924 32)) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x171) x643) (>= 1461501637330902918203684832716283019655932542975 x287) (= 0 x42) (>= 1461501637330902918203684832716283019655932542975 x597) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x916) x852) (> x94 x1075) (= x171 (+ 31 x686)) (= (x915 x226) x360) (= x70 x818) (= x217 false) (= x998 (> x813 0)) (= x1105 (+ x686 x975)) x455 (<= x280 1461501637330902918203684832716283019655932542975) (= x918 x1113) (>= 1461501637330902918203684832716283019655932542975 x331) (<= 1 x8) (= x1020 x121) (= x455 (= x331 x1034)) (= (+ 63 x643) x916) (not (> x1105 x94)) (= x952 (x1001 x331)) (= x1002 x462) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x604) x8) (<= x1105 8589934916) (= (x1103 115792089237316195423570985008687907853269984665640564039457584007913129639904 x542) x1053) (>= 1461501637330902918203684832716283019655932542975 x368) (= (x632 x269) x1044) (= x686 (x1095 x383)) (<= x1158 127) (= x248 (+ 32 x222)) (= x1026 (+ x1023 x686)) (= x975 (+ 32 x383)) (= 0 x641) (>= x511 130) (= (x326 x226) x57) (= x222 (+ 160 x53)) (<= 1 x331) (= x604 (+ 63 x1053)) (= x414 x269) (= (x327 (- x222 x53)) x487) (= x773 x342) (= x53 (+ 4 x511)) (= false x1110) (= x443 x58) (= (+ 160 x284) x273) (= x727 (x467 x331)) (<= x292 1461501637330902918203684832716283019655932542975) (= (x509 x226) x259) (>= 8589934592 x686) (>= x597 1) (= x813 (x804 128)) (<= x284 8589934624) (= 128 x923) (= x757 x57) (= x1079 x360) (= x1034 x597) (= x120 (x819 x226)) (= (+ x590 4) x383) (= x542 (+ 31 x284))) (= x414 x697)) (and (= x1143 false) (= x94 x283) (= x892 x1113))))) (= x699 x1167)) (= x343 x443)) (= x343 x27))))) (= x648 x902)) (= x462 x765))) (and (<= x911 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x226 1) (= (x327 (- x601 (mod (mod x601 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x43) (<= 0 x213) (>= x1104 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1047) (<= x768 134217728) (not (= x184 x226)) (>= x94 324) (= x762 0) (>= x1058 x769) (<= 0 x414) (= x769 x404) (>= x1047 0) (< x836 x555) (<= x475 1461501637330902918203684832716283019655932542975) (<= x789 18446744073709551615) (<= x1012 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (* 32 (- x1092 1)) x553) (= x555 x601) (= x534 (< 0 (x819 x184))) (>= x294 0) (= (- x964 4) x590) (>= 4294967295 x404) (>= 1461501637330902918203684832716283019655932542975 x226) (= x765 x1104) (>= x184 1) (= (+ 292 x1058) x964) (= 0 x1048) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x158) (= x587 x343) (= x1058 (* x1092 32)) x534 (= x902 x88) (<= 0 x809) (>= x768 0) (= (x327 (- x404 (mod (mod x404 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x865) (= (* 32 (- x768 1)) x836) (= (x518 x865) x1048) (= x762 (x159 x43)) (>= x911 0) (<= 0 x587) (= x789 x565) (>= x1012 0) (= (> (x819 x226) 0) x983) (<= x414 1461501637330902918203684832716283019655932542975) (>= 134217728 x1092) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x294) (= x294 x892) (<= x88 18446744073709551615) (= x939 256) (= x999 x590) (<= x1104 18446744073709551615) (= (+ x964 32) x146) (>= x158 0) (>= x970 0) (<= x601 4294967295) x983 (= 0 x55) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x459) (<= x970 1461501637330902918203684832716283019655932542975) (>= x88 0) (= x283 (+ x964 x92 32)) (>= x475 0) (<= x94 8589934916) (< x553 x769) (<= 0 x789) (= (* x768 32) x92) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x809) (>= x92 x555) (>= x459 0) (>= 1461501637330902918203684832716283019655932542975 x184) (>= x1092 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x587) (= x475 x699))) (and (=> (not x998) x1208) (=> (and (and (= x856 (< 32 x813)) (= x1022 (x783 160))) x998) (and (=> (and x856 (and (= (> x813 64) x198) (= x680 (+ 32 x248)) (= (x35 192) x307))) (and (=> (and x198 (and (= x335 (> x813 96)) (= (x1173 224) x106) (= (+ x248 64) x873))) (and (=> (not x335) x1208) (=> x335 x1107))) (=> (not x198) x1208))) (=> (not x856) x1208))))) x324))
(assert (x642 x205))
(assert (x642 x284))
(assert (x570 x1080))
(assert (x642 x470))
(assert (x642 x1167))
(assert (= (and x594 (not x211)) x330))
(assert (= x562 (and (not x463) x481)))
(assert (x642 x711))
(assert (x642 x590))
(assert (x642 x1168))
(assert (x642 x34))
(assert (= 0 (x829 115792089237316195423570985007226406215939081747436879206741300988257197096962)))
(assert (x840 x1190))
(assert (= (x829 18446744073709551615) 0))
(assert (= (x684 (x116 64 x226 151)) 64))
(assert (x642 x975))
(assert (x642 x939))
(assert (= x141 (and x1175 (not x472))))
(assert (x642 x558))
(assert (x642 x1026))
(assert (x642 x667))
(assert (x642 x811))
(assert (= 0 (x829 2514000705)))
(assert (= (and x954 (not x1084)) x717))
(assert (x642 x802))
(assert (x642 x329))
(assert (x642 x780))
(assert (x642 x671))
(assert (x1017 117300739))
(assert (= x436 (and x99 x44)))
(assert (= x226 (x1194 (x116 64 x226 151))))
(assert (= x849 (and x166 (not x972))))
(assert (= (and (not x748) x344) x114))
(assert (x642 x782))
(assert (x642 x1053))
(assert (= (=> (and (= (+ x457 1) x1178) (= (not (< x1178 x515)) x820)) (and x1077 x820)) x446))
(assert (x642 x803))
(assert (= 0 (x829 102723710039514930950152684451134735340491996533626151901403227563028629159936)))
(assert (x642 x351))
(assert (=> (>= 10000 x1115) (= 0 (x829 x1115))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x116 64 x25 151)))
(assert (= x218 (=> (and (= (not (< x1134 x1119)) x1065) (= x1134 (+ 1 x378))) (and x1065 x832))))
(assert (x642 x974))
(assert (= x1175 (or x212 x971)))
(assert (= (x116 64 x226 151) (x829 (x116 64 x226 151))))
(assert (= (or x1057 x726) x1213))
(assert (x642 x1056))
(assert (x642 x1169))
(assert (x642 x107))
(assert (x642 x725))
(assert (x642 x277))
(assert (= (x829 18446744073709551487) 0))
(assert (= (x829 (x833 32 159)) (x833 32 159)))
(assert (x642 x162))
(assert (= (x684 (x116 64 x392 151)) 64))
(assert (x642 x1039))
(assert (x642 x752))
(assert (x642 x241))
(assert (x642 x317))
(assert (= x968 (and (not x168) x958)))
(assert (x642 x280))
(assert (= x73 (or x945 x849)))
(assert (x570 x41))
(assert (= x1100 (and x831 (not x504))))
(assert (= (and (not x744) x953) x91))
(assert (x642 x1022))
(assert (= x824 (and x516 (not x198))))
(assert (= x951 (and x249 x1051)))
(assert (= (and (not x68) x645) x185))
(assert (= x2 (and x99 (not x44))))
(assert (= x496 (=> (and (= x875 x382) (= x1 x931)) x445)))
(assert (x642 x288))
(assert (x642 x353))
(assert (= (and x207 (not x624)) x914))
(assert (x642 x909))
(assert (=> (>= 10000 x226) (= (x829 x226) 0)))
(assert (x642 x1005))
(assert (x1017 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= x303 (and x1013 x250)))
(assert (x642 x120))
(assert (x1017 4294967295))
(assert (x642 x98))
(assert (= x1028 (or x1147 x1186)))
(assert (x642 x990))
(assert (x642 x979))
(assert (x642 x885))
(assert (x642 x890))
(assert (= (and x1122 x850) x913))
(assert (= (x1194 (x116 64 x697 151)) x697))
(assert (= x679 (and (not x250) x1013)))
(assert (= (x829 (+ x138 1)) (x829 x138)))
(assert (= (and x805 (not x1188)) x377))
(assert (x642 x194))
(assert (x642 x797))
(assert (= (or x127 x140) x119))
(assert (x642 x482))
(assert (= x1081 x1155))
(assert (= (and x238 (not x1101)) x683))
(assert (= (and (not x204) x1000) x1154))
(assert (x840 x456))
(assert (= (and x207 x624) x891))
(assert (x642 x1027))
(assert (< 10000 (x116 64 x392 151)))
(assert (x642 x41))
(assert (x642 x1076))
(assert (x642 x189))
(assert (x642 x243))
(assert (= (=> (and (= (x743 x1140) x299) (= (not (> x1109 128)) x85) (= x1140 (x296 (+ 96 x593))) (= (+ x770 96) x1148)) (and x85 x576)) x245))
(assert (= x99 (or x100 x714)))
(assert (= x685 (=> (and (= (< x808 x411) x927) (or (not x927) (and x927 (and (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x784)) x109) (= (x1103 x1087 x109) x965) (= (x296 (+ x846 x401)) x907) (= (* 8 x607) x784) (= (x1103 31 x411) x607) (= (x176 x907) x1087))))) x502)))
(assert (= 0 (x829 1461501637330902918203684832716283019655932542975)))
(assert (x642 x641))
(assert (= (and (not x1189) x951) x390))
(assert (= x25 (x1194 (x116 64 x25 151))))
(assert (= (and x309 x335) x776))
(assert (= (and x114 (not x1126)) x233))
(assert (= (x829 (+ x417 x1112)) (x829 x417)))
(assert (= (and x115 x64) x376))
(assert (x642 x796))
(assert (x642 x655))
(assert (x642 x1125))
(assert (x840 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x116 64 x1115 151) (x829 (x116 64 x1115 151))))
(assert (x840 x486))
(assert (x642 x325))
(assert (x642 x544))
(assert (= (or x638 x536 x91 x316 x390) x961))
(assert (x642 x773))
(assert (x1017 57896044618658097711785492504343953926634992332820282019728792003956564819907))
(assert (x642 x1018))
(assert (= (and x805 x1188) x122))
(assert (x642 x1146))
(assert (not (x1017 (x116 64 x392 151))))
(assert (x642 x480))
(assert (x642 x735))
(assert (x642 x791))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x833 32 159)))
(assert (= (or x903 x233) x908))
(assert (x642 x272))
(assert (x642 x942))
(assert (= x100 (or x318 x23)))
(assert (x570 x751))
(assert (= (=> (and (= x566 (x1204 x65)) (= (x296 (+ x806 96)) x986) (= (+ x838 96) x65) (= (not (< 128 x724)) x716)) (and x716 x864)) x693))
(assert (x642 x999))
(assert (x642 x919))
(assert (x642 x618))
(assert (= x1035 (and (not x753) x967)))
(assert (x642 x403))
(assert (= x719 x1182))
(assert (x642 x884))
(assert (x642 x575))
(assert (= x381 (and (not x991) x28)))
(assert (= x186 (and x698 (not x310))))
(assert (x642 x373))
(assert (= (and x991 x28) x29))
(assert (= (=> (and (= (* x994 2) x799) (= (+ 1 x799) x189) (= x395 (+ 1 x799))) x1019) x4))
(assert (= (x1194 (x116 64 x1115 151)) x1115))
(assert (=> (>= 10000 x280) (= (x829 x280) 0)))
(assert (= x957 true))
(assert (= x640 (=> (and (<= 1 x1137) (not (= x990 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (> x1116 x990) (= (x116 64 x25 151) x97) (= (x81 x990) x25) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x990) (not (= x990 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= x221 1) (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1116 (x296 (+ x990 32))) (not (= x990 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 255 x221) (= x221 x66) (= (x1042 x97) x221) (<= x990 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x25 1461501637330902918203684832716283019655932542975)) x137)))
(assert (x642 x32))
(assert (x570 x775))
(assert (x570 x80))
(assert (x642 x478))
(assert (x642 x542))
(assert (x642 x399))
(assert (x642 x800))
(assert (x642 x374))
(assert (x642 x845))
(assert (x798 x803 x486))
(assert (x570 x863))
(assert (= (=> (and (= (not (> x197 224)) x759) (= (x123 x976) x1150)) (and x759 x719)) x179))
(assert (x642 x610))
(assert (x642 x393))
(assert (x642 x695))
(assert (x570 x994))
(assert (x642 x38))
(assert (= x208 (and x858 (not x215))))
(assert (x642 x987))
(assert (= (ite (< x630 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x922 2 x630)) 0) (x61 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630)))
(assert (x642 x1145))
(assert (= (or x969 x1100) x654))
(assert (= (and x615 x251) x127))
(assert (= (and x958 x168) x239))
(assert (= (x116 64 x392 151) (x829 (x116 64 x392 151))))
(assert (x642 x692))
(assert (x642 x465))
(assert (x642 x933))
(assert (x642 x1086))
(assert (x1017 8589934624))
(assert (x642 x139))
(assert (x642 x720))
(assert (= x1019 (=> (and (= (div x754 2) x909) (= x485 (ite (> x950 0) x909 (x1103 127 x909))) (>= 18446744073709551615 x411) (= (x1103 1 x754) x950) (or (= x178 1) (= x178 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x411 (x574 x846)) (= (< 31 x485) x472) (= x178 (x327 (- x950 (mod (ite (> 32 x485) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (not x472) x876) (=> (and (and (= (div (+ x485 31) 32) x1059) (= (ite (> 32 x411) x417 x633) x378) (= (x833 32 160) x417) (= (> x1119 x378) x1192) (= x633 (+ x1112 x417)) (= (+ x417 x1059) x1119) (= x1112 (div (+ x411 31) 32))) x472) (and (=> x1192 x218) (=> (not x1192) x832)))))))
(assert (= 0 (x829 475336206)))
(assert (x642 x672))
(assert (x642 x1158))
(assert (x642 x1038))
(assert (x1017 3162421667457357072237249128631551985524704858613737409516517017801010970624))
(assert (= (and x1051 (not x249)) x638))
(assert (x642 x882))
(assert (= (or x262 x992) x1024))
(assert (x484 x597))
(assert (= x226 (x413 (x668 64 x226 x259))))
(assert (x642 x681))
(assert (= (x880 (x668 64 x226 x259)) x259))
(assert (x642 x227))
(assert (x642 x731))
(assert (x642 x611))
(assert (x642 x1148))
(assert (x642 x161))
(assert (= (x829 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (= (and x310 x698) x251))
(check-sat)
(exit)
