(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x868 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x292 () Int)
(declare-fun x1671 () Bool)
(declare-fun x79 () Int)
(declare-fun x1178 () Int)
(declare-fun x662 () Int)
(declare-fun x2034 () Int)
(declare-fun x1019 () Int)
(declare-fun x1879 () Int)
(declare-fun x1975 () Int)
(declare-fun x244 () Int)
(declare-fun x949 () Int)
(declare-fun x449 () Bool)
(declare-fun x1759 () Int)
(declare-fun x342 () Int)
(declare-fun x3136 () Int)
(declare-fun x141 () Int)
(declare-fun x1218 () Int)
(declare-fun x957 () Int)
(declare-fun x888 () Int)
(declare-fun x2658 () Bool)
(declare-fun x2697 () Int)
(declare-fun x2031 () Bool)
(declare-fun x816 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x1509 () Int)
(declare-fun x954 () Int)
(declare-fun x323 () Int)
(declare-fun x397 (Int) Int)
(declare-fun x1796 () Int)
(declare-fun x1788 () Int)
(declare-fun x2973 () Int)
(declare-fun x1088 () Int)
(declare-fun x745 () Bool)
(declare-fun x2650 () Int)
(declare-fun x2576 () Int)
(declare-fun x341 () Int)
(declare-fun x140 () Int)
(declare-fun x1990 () Int)
(declare-fun x332 () Bool)
(declare-fun x2083 () Int)
(declare-fun x1898 () Int)
(declare-fun x3072 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2622 () Int)
(declare-fun x1731 () Bool)
(declare-fun x736 () Int)
(declare-fun x3125 () Int)
(declare-fun x2376 () Int)
(declare-fun x176 () Int)
(declare-fun x2660 () Int)
(declare-fun x2657 () Int)
(declare-fun x792 () Int)
(declare-fun x1588 () Bool)
(declare-fun x407 () Int)
(declare-fun x56 () Bool)
(declare-fun x2062 () Int)
(declare-fun x1664 () Int)
(declare-fun x1521 () Int)
(declare-fun x400 () Bool)
(declare-fun x2843 () Int)
(declare-fun x2196 () Int)
(declare-fun x2361 () Int)
(declare-fun x1169 () Bool)
(declare-fun x1099 () Int)
(declare-fun x534 () Int)
(declare-fun x153 () Int)
(declare-fun x1239 () Int)
(declare-fun x2166 () Bool)
(declare-fun x298 () Bool)
(declare-fun x2233 () Int)
(declare-fun x1003 () Int)
(declare-fun x2108 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x3030 () Int)
(declare-fun x257 () Int)
(declare-fun x2403 () Bool)
(declare-fun x1434 () Int)
(declare-fun x2236 () Bool)
(declare-fun x1805 () Int)
(declare-fun x272 () Int)
(declare-fun x1516 () Int)
(declare-fun x1401 () Bool)
(declare-fun x114 () Int)
(declare-fun x1559 () Int)
(declare-fun x864 () Int)
(declare-fun x1742 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2862 () Int)
(declare-fun x2860 () Int)
(declare-fun x313 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x2945 () Int)
(declare-fun x690 () Int)
(declare-fun x1640 () Int)
(declare-fun x1328 () Bool)
(declare-fun x192 () Bool)
(declare-fun x3090 () Int)
(declare-fun x2533 () Bool)
(declare-fun x1122 () Int)
(declare-fun x1921 () Int)
(declare-fun x1086 () Int)
(declare-fun x1851 () Int)
(declare-fun x1021 () Int)
(declare-fun x640 () Int)
(declare-fun x1271 () Int)
(declare-fun x2542 () Int)
(declare-fun x2256 () Int)
(declare-fun x3113 () Bool)
(declare-fun x986 () Bool)
(declare-fun x721 () Int)
(declare-fun x81 () Int)
(declare-fun x3131 () Bool)
(declare-fun x1687 () Int)
(declare-fun x769 () Bool)
(declare-fun x2084 () Int)
(declare-fun x2094 () Int)
(declare-fun x1498 (Int) Int)
(declare-fun x1432 () Int)
(declare-fun x2759 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x519 () Int)
(declare-fun x2524 () Int)
(declare-fun x2258 () Int)
(declare-fun x307 () Int)
(declare-fun x834 () Int)
(declare-fun x2765 () Int)
(declare-fun x172 () Int)
(declare-fun x1791 () Int)
(declare-fun x1722 () Int)
(declare-fun x3079 () Bool)
(declare-fun x924 () Int)
(declare-fun x1000 () Int)
(declare-fun x661 () Int)
(declare-fun x355 () Int)
(declare-fun x1993 () Int)
(declare-fun x859 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1905 () Int)
(declare-fun x2718 () Bool)
(declare-fun x1523 () Int)
(declare-fun x2036 () Int)
(declare-fun x684 () Int)
(declare-fun x1100 () Int)
(declare-fun x2967 () Int)
(declare-fun x3118 () Int)
(declare-fun x2033 () Int)
(declare-fun x2427 () Int)
(declare-fun x1443 () Int)
(declare-fun x795 () Int)
(declare-fun x1490 () Int)
(declare-fun x2861 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x2131 () Int)
(declare-fun x3018 () Int)
(declare-fun x3135 () Bool)
(declare-fun x1157 () Int)
(declare-fun x702 () Int)
(declare-fun x2543 () Int)
(declare-fun x2395 () Int)
(declare-fun x2539 () Int)
(declare-fun x1348 () Int)
(declare-fun x1398 () Int)
(declare-fun x1331 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1652 () Int)
(declare-fun x906 () Bool)
(declare-fun x222 () Int)
(declare-fun x2666 () Int)
(declare-fun x1589 () Int)
(declare-fun x1983 () Bool)
(declare-fun x452 () Bool)
(declare-fun x756 () Int)
(declare-fun x2059 () Int)
(declare-fun x1366 () Bool)
(declare-fun x2415 () Int)
(declare-fun x1821 () Int)
(declare-fun x773 () Int)
(declare-fun x118 () Int)
(declare-fun x168 () Bool)
(declare-fun x214 () Int)
(declare-fun x2745 () Int)
(declare-fun x1097 () Int)
(declare-fun x1661 () Int)
(declare-fun x1058 () Bool)
(declare-fun x700 () Int)
(declare-fun x747 () Int)
(declare-fun x130 () Bool)
(declare-fun x1619 () Int)
(declare-fun x991 () Int)
(declare-fun x1707 () Int)
(declare-fun x2393 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1510 () Int)
(declare-fun x2561 () Int)
(declare-fun x2854 () Int)
(declare-fun x1340 () Int)
(declare-fun x336 () Int)
(declare-fun x1511 () Int)
(declare-fun x2115 () Int)
(declare-fun x2688 () Int)
(declare-fun x18 () Bool)
(declare-fun x798 () Bool)
(declare-fun x2487 () Int)
(declare-fun x1883 () Int)
(declare-fun x642 () Int)
(declare-fun x2194 () Int)
(declare-fun x2891 () Int)
(declare-fun x76 () Int)
(declare-fun x2590 () Int)
(declare-fun x572 () Bool)
(declare-fun x2221 () Int)
(declare-fun x241 () Int)
(declare-fun x840 () Int)
(declare-fun x109 () Int)
(declare-fun x2951 () Int)
(declare-fun x1156 () Int)
(declare-fun x3111 () Bool)
(declare-fun x1110 () Int)
(declare-fun x2154 () Bool)
(declare-fun x1179 () Int)
(declare-fun x2151 () Int)
(declare-fun x2999 () Int)
(declare-fun x2038 () Int)
(declare-fun x1986 () Int)
(declare-fun x1911 () Int)
(declare-fun x2235 () Int)
(declare-fun x405 () Int)
(declare-fun x2878 () Int)
(declare-fun x2596 () Bool)
(declare-fun x803 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x3 () Int)
(declare-fun x1385 () Bool)
(declare-fun x335 () Int)
(declare-fun x2228 () Int)
(declare-fun x3137 () Int)
(declare-fun x422 () Int)
(declare-fun x2735 () Int)
(declare-fun x817 () Int)
(declare-fun x574 () Int)
(declare-fun x36 () Int)
(declare-fun x1062 () Int)
(declare-fun x1205 () Bool)
(declare-fun x2703 () Int)
(declare-fun x2277 () Int)
(declare-fun x1018 () Int)
(declare-fun x112 () Int)
(declare-fun x2624 () Int)
(declare-fun x1970 () Bool)
(declare-fun x229 () Int)
(declare-fun x1651 () Int)
(declare-fun x106 () Int)
(declare-fun x3154 () Int)
(declare-fun x955 () Int)
(declare-fun x682 () Int)
(declare-fun x1067 () Int)
(declare-fun x1377 () Int)
(declare-fun x1037 () Int)
(declare-fun x3029 () Int)
(declare-fun x929 () Bool)
(declare-fun x1059 () Int)
(declare-fun x2764 () Bool)
(declare-fun x2188 () Int)
(declare-fun x839 () Int)
(declare-fun x2930 () Int)
(declare-fun x59 () Int)
(declare-fun x2184 () Int)
(declare-fun x2264 () Int)
(declare-fun x791 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2040 () Int)
(declare-fun x1079 () Int)
(declare-fun x1828 () Int)
(declare-fun x1564 () Int)
(declare-fun x1061 () Int)
(declare-fun x339 () Int)
(declare-fun x2011 () Int)
(declare-fun x463 () Int)
(declare-fun x1034 () Int)
(declare-fun x448 () Int)
(declare-fun x960 () Int)
(declare-fun x49 () Int)
(declare-fun x1780 () Int)
(declare-fun x267 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x3057 () Int)
(declare-fun x1015 () Int)
(declare-fun x896 () Int)
(declare-fun x752 () Int)
(declare-fun x1202 () Int)
(declare-fun x1293 () Int)
(declare-fun x1488 () Int)
(declare-fun x706 () Int)
(declare-fun x2204 () Int)
(declare-fun x931 () Int)
(declare-fun x728 () Int)
(declare-fun x1995 () Int)
(declare-fun x320 () Bool)
(declare-fun x1891 (Int) Int)
(declare-fun x2240 () Bool)
(declare-fun x1238 () Int)
(declare-fun x709 () Int)
(declare-fun x1225 () Int)
(declare-fun x980 () Int)
(declare-fun x2144 () Int)
(declare-fun x1049 () Int)
(declare-fun x2582 () Int)
(declare-fun x1846 () Int)
(declare-fun x2645 () Int)
(declare-fun x2708 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1962 () Int)
(declare-fun x264 () Int)
(declare-fun x1952 () Int)
(declare-fun x2629 () Int)
(declare-fun x2391 () Bool)
(declare-fun x147 () Bool)
(declare-fun x585 () Int)
(declare-fun x399 () Int)
(declare-fun x2676 () Int)
(declare-fun x568 () Int)
(declare-fun x1778 () Int)
(declare-fun x1926 () Int)
(declare-fun x1374 () Int)
(declare-fun x255 () Bool)
(declare-fun x1585 () Int)
(declare-fun x1755 () Bool)
(declare-fun x907 () Bool)
(declare-fun x2916 () Int)
(declare-fun x1947 () Int)
(declare-fun x1277 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x181 () Bool)
(declare-fun x1229 () Int)
(declare-fun x476 () Bool)
(declare-fun x1824 () Int)
(declare-fun x2883 () Int)
(declare-fun x2058 () Int)
(declare-fun x580 () Bool)
(declare-fun x1955 () Int)
(declare-fun x2755 () Int)
(declare-fun x1503 (Int) Int)
(declare-fun x697 () Int)
(declare-fun x2544 () Int)
(declare-fun x1057 () Int)
(declare-fun x2378 () Int)
(declare-fun x2674 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x2758 () Int)
(declare-fun x535 () Int)
(declare-fun x2997 () Int)
(declare-fun x1659 () Int)
(declare-fun x596 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1916 () Int)
(declare-fun x324 () Int)
(declare-fun x282 () Int)
(declare-fun x101 () Int)
(declare-fun x1923 () Int)
(declare-fun x1484 () Int)
(declare-fun x522 () Int)
(declare-fun x165 () Int)
(declare-fun x993 () Int)
(declare-fun x1167 () Int)
(declare-fun x1262 () Int)
(declare-fun x1491 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x1665 () Int)
(declare-fun x910 () Int)
(declare-fun x1249 () Bool)
(declare-fun x343 () Int)
(declare-fun x899 () Bool)
(declare-fun x3122 () Int)
(declare-fun x1194 () Int)
(declare-fun x33 () Int)
(declare-fun x82 () Bool)
(declare-fun x886 () Int)
(declare-fun x1620 () Int)
(declare-fun x581 () Bool)
(declare-fun x790 () Int)
(declare-fun x1445 () Int)
(declare-fun x1550 () Bool)
(declare-fun x174 () Int)
(declare-fun x1895 () Int)
(declare-fun x939 () Int)
(declare-fun x1324 () Int)
(declare-fun x744 () Int)
(declare-fun x77 () Int)
(declare-fun x1546 () Int)
(declare-fun x1688 () Int)
(declare-fun x2373 () Int)
(declare-fun x753 () Bool)
(declare-fun x2316 () Int)
(declare-fun x2936 () Int)
(declare-fun x2272 () Int)
(declare-fun x2246 () Int)
(declare-fun x547 () Int)
(declare-fun x442 () Bool)
(declare-fun x2573 () Int)
(declare-fun x1403 () Int)
(declare-fun x322 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1129 () Int)
(declare-fun x1201 () Bool)
(declare-fun x2585 () Int)
(declare-fun x3121 () Int)
(declare-fun x357 () Int)
(declare-fun x1670 () Int)
(declare-fun x277 () Bool)
(declare-fun x1621 () Int)
(declare-fun x772 () Bool)
(declare-fun x457 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1020 () Int)
(declare-fun x509 () Int)
(declare-fun x914 () Int)
(declare-fun x1542 () Int)
(declare-fun x1678 () Int)
(declare-fun x2802 () Int)
(declare-fun x2227 () Bool)
(declare-fun x2931 () Int)
(declare-fun x364 () Int)
(declare-fun x1965 () Int)
(declare-fun x560 () Bool)
(declare-fun x827 () Int)
(declare-fun x2099 () Bool)
(declare-fun x402 () Int)
(declare-fun x2921 () Int)
(declare-fun x2177 () Bool)
(declare-fun x1760 () Int)
(declare-fun x171 () Bool)
(declare-fun x3093 () Int)
(declare-fun x377 () Int)
(declare-fun x1372 () Int)
(declare-fun x3045 () Int)
(declare-fun x518 () Int)
(declare-fun x1025 () Bool)
(declare-fun x2476 () Int)
(declare-fun x294 () Int)
(declare-fun x2970 () Int)
(declare-fun x1553 () Int)
(declare-fun x207 () Int)
(declare-fun x3023 () Int)
(declare-fun x137 () Int)
(declare-fun x2956 () Bool)
(declare-fun x2142 () Int)
(declare-fun x2820 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1845 () Int)
(declare-fun x1127 () Int)
(declare-fun x363 () Int)
(declare-fun x1960 () Int)
(declare-fun x628 () Bool)
(declare-fun x477 () Int)
(declare-fun x2187 () Int)
(declare-fun x806 () Int)
(declare-fun x512 () Bool)
(declare-fun x820 () Int)
(declare-fun x485 () Int)
(declare-fun x513 () Int)
(declare-fun x2621 () Int)
(declare-fun x943 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x678 () Int)
(declare-fun x666 () Int)
(declare-fun x454 (Int) Int)
(declare-fun x1691 () Int)
(declare-fun x1409 () Int)
(declare-fun x2965 () Int)
(declare-fun x1143 () Int)
(declare-fun x1711 () Int)
(declare-fun x2003 () Int)
(declare-fun x1406 () Int)
(declare-fun x793 () Int)
(declare-fun x1370 () Bool)
(declare-fun x884 () Int)
(declare-fun x812 () Int)
(declare-fun x639 () Int)
(declare-fun x2601 () Int)
(declare-fun x3081 () Int)
(declare-fun x2178 () Bool)
(declare-fun x2734 () Int)
(declare-fun x2123 () Int)
(declare-fun x203 () Int)
(declare-fun x2504 () Int)
(declare-fun x1266 () Int)
(declare-fun x3007 () Bool)
(declare-fun x1629 () Int)
(declare-fun x1981 () Int)
(declare-fun x1768 () Int)
(declare-fun x3031 () Int)
(declare-fun x1656 () Int)
(declare-fun x1308 () Int)
(declare-fun x2299 () Bool)
(declare-fun x530 () Int)
(declare-fun x2517 () Bool)
(declare-fun x1066 () Int)
(declare-fun x3143 () Int)
(declare-fun x1396 () Int)
(declare-fun x362 () Int)
(declare-fun x1384 () Int)
(declare-fun x1994 () Bool)
(declare-fun x1244 () Int)
(declare-fun x333 () Int)
(declare-fun x2471 () Int)
(declare-fun x2784 () Bool)
(declare-fun x295 () Int)
(declare-fun x1124 () Bool)
(declare-fun x2411 () Int)
(declare-fun x2055 () Int)
(declare-fun x2156 () Int)
(declare-fun x2480 () Int)
(declare-fun x1344 () Int)
(declare-fun x2474 () Int)
(declare-fun x605 () Int)
(declare-fun x2769 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1910 () Int)
(declare-fun x1495 () Bool)
(declare-fun x1367 () Int)
(declare-fun x228 (Int) Int)
(declare-fun x1154 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x2143 () Int)
(declare-fun x1954 () Bool)
(declare-fun x2338 () Int)
(declare-fun x2611 () Int)
(declare-fun x3024 () Int)
(declare-fun x582 () Bool)
(declare-fun x2653 () Int)
(declare-fun x759 () Int)
(declare-fun x1391 () Int)
(declare-fun x556 () Int)
(declare-fun x86 () Int)
(declare-fun x865 () Int)
(declare-fun x615 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2698 () Int)
(declare-fun x554 () Int)
(declare-fun x2828 () Int)
(declare-fun x1705 () Int)
(declare-fun x1337 () Int)
(declare-fun x121 () Int)
(declare-fun x243 () Int)
(declare-fun x2064 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1897 () Int)
(declare-fun x3070 () Int)
(declare-fun x348 () Int)
(declare-fun x881 () Int)
(declare-fun x1013 () Bool)
(declare-fun x2499 () Int)
(declare-fun x2335 () Int)
(declare-fun x2443 () Int)
(declare-fun x2056 () Int)
(declare-fun x1885 () Int)
(declare-fun x1571 () Int)
(declare-fun x1868 () Bool)
(declare-fun x2578 () Int)
(declare-fun x155 () Int)
(declare-fun x1849 () Bool)
(declare-fun x2498 () Int)
(declare-fun x2267 () Bool)
(declare-fun x2625 () Int)
(declare-fun x2833 () Int)
(declare-fun x175 (Int) Int)
(declare-fun x2186 () Int)
(declare-fun x925 () Int)
(declare-fun x1235 () Int)
(declare-fun x2356 () Bool)
(declare-fun x3065 () Int)
(declare-fun x1782 () Int)
(declare-fun x1904 () Int)
(declare-fun x258 () Int)
(declare-fun x1920 () Bool)
(declare-fun x3117 () Int)
(declare-fun x2211 () Int)
(declare-fun x622 () Int)
(declare-fun x2950 () Bool)
(declare-fun x880 () Bool)
(declare-fun x404 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x488 () Bool)
(declare-fun x2328 () Int)
(declare-fun x1478 () Int)
(declare-fun x497 () Int)
(declare-fun x498 () Bool)
(declare-fun x1817 () Int)
(declare-fun x2279 () Int)
(declare-fun x1187 () Int)
(declare-fun x805 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x912 () Int)
(declare-fun x2662 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x604 () Bool)
(declare-fun x276 (Int) Int)
(declare-fun x2829 () Bool)
(declare-fun x1394 () Int)
(declare-fun x2690 () Int)
(declare-fun x1383 () Int)
(declare-fun x1288 () Int)
(declare-fun x340 () Int)
(declare-fun x148 () Bool)
(declare-fun x1696 () Int)
(declare-fun x2789 () Bool)
(declare-fun x1938 () Int)
(declare-fun x2847 () Int)
(declare-fun x2 () Bool)
(declare-fun x3134 () Int)
(declare-fun x2671 () Int)
(declare-fun x58 () Bool)
(declare-fun x1741 () Int)
(declare-fun x1028 () Bool)
(declare-fun x974 () Int)
(declare-fun x1570 () Int)
(declare-fun x2324 () Int)
(declare-fun x435 () Int)
(declare-fun x963 () Int)
(declare-fun x871 () Int)
(declare-fun x1777 () Int)
(declare-fun x1150 () Bool)
(declare-fun x2086 () Int)
(declare-fun x1650 () Int)
(declare-fun x483 () Int)
(declare-fun x2217 () Int)
(declare-fun x872 () Int)
(declare-fun x40 () Int)
(declare-fun x1230 () Int)
(declare-fun x376 () Int)
(declare-fun x2903 () Int)
(declare-fun x2074 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x2045 () Int)
(declare-fun x2051 () Int)
(declare-fun x2375 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1549 () Int)
(declare-fun x390 () Int)
(declare-fun x959 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x2583 () Int)
(declare-fun x946 () Int)
(declare-fun x3152 () Int)
(declare-fun x2852 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2738 () Int)
(declare-fun x739 () Int)
(declare-fun x2460 () Bool)
(declare-fun x867 () Bool)
(declare-fun x2104 () Int)
(declare-fun x2081 () Bool)
(declare-fun x2351 () Int)
(declare-fun x1164 () Int)
(declare-fun x504 () Int)
(declare-fun x123 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1360 () Bool)
(declare-fun x385 () Int)
(declare-fun x92 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x1748 () Int)
(declare-fun x1108 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x371 () Int)
(declare-fun x2929 () Int)
(declare-fun x1548 () Int)
(declare-fun x2626 () Int)
(declare-fun x2229 () Int)
(declare-fun x2118 () Int)
(declare-fun x1528 () Int)
(declare-fun x2368 () Bool)
(declare-fun x1834 (Int) Int)
(declare-fun x856 () Int)
(declare-fun x1855 (Int Int) Int)
(declare-fun x2343 () Bool)
(declare-fun x415 () Int)
(declare-fun x1872 () Int)
(declare-fun x3139 () Int)
(declare-fun x2294 () Bool)
(declare-fun x1494 () Int)
(declare-fun x3082 () Bool)
(declare-fun x2972 () Int)
(declare-fun x2505 () Int)
(declare-fun x459 () Int)
(declare-fun x2026 () Int)
(declare-fun x1114 () Int)
(declare-fun x904 () Int)
(declare-fun x1483 () Bool)
(declare-fun x850 () Bool)
(declare-fun x1508 () Int)
(declare-fun x124 () Int)
(declare-fun x1754 () Bool)
(declare-fun x693 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x337 () Int)
(declare-fun x356 () Int)
(declare-fun x119 () Int)
(declare-fun x2336 () Int)
(declare-fun x2097 () Int)
(declare-fun x1371 () Int)
(declare-fun x1719 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2606 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1942 () Int)
(declare-fun x184 () Int)
(declare-fun x2602 () Int)
(declare-fun x755 () Int)
(declare-fun x2088 () Int)
(declare-fun x2512 () Int)
(declare-fun x2484 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x2286 () Int)
(declare-fun x2247 () Int)
(declare-fun x1011 () Int)
(declare-fun x444 () Int)
(declare-fun x479 () Int)
(declare-fun x1077 () Int)
(declare-fun x1681 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x953 () Int)
(declare-fun x873 () Int)
(declare-fun x2110 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1634 () Int)
(declare-fun x25 () Int)
(declare-fun x1412 () Int)
(declare-fun x3128 () Int)
(declare-fun x1692 (Int) Int)
(declare-fun x2901 () Int)
(declare-fun x381 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x367 () Int)
(declare-fun x2831 () Int)
(declare-fun x2888 () Int)
(declare-fun x2459 () Int)
(declare-fun x2223 () Int)
(declare-fun x2452 () Bool)
(declare-fun x2889 () Int)
(declare-fun x127 () Bool)
(declare-fun x2163 () Int)
(declare-fun x2434 () Int)
(declare-fun x894 () Int)
(declare-fun x1189 () Int)
(declare-fun x2947 (Int Int Int Int Int) Int)
(declare-fun x306 () Bool)
(declare-fun x779 () Int)
(declare-fun x1835 () Bool)
(declare-fun x1232 () Int)
(declare-fun x1036 () Int)
(declare-fun x2793 () Int)
(declare-fun x712 () Bool)
(declare-fun x571 () Int)
(declare-fun x2203 () Int)
(declare-fun x1906 () Int)
(declare-fun x2091 () Int)
(declare-fun x3037 () Int)
(declare-fun x2648 () Int)
(declare-fun x2835 () Int)
(declare-fun x1706 () Int)
(declare-fun x1224 () Int)
(declare-fun x1557 () Int)
(declare-fun x1715 () Int)
(declare-fun x1038 () Bool)
(declare-fun x860 () Int)
(declare-fun x2030 () Int)
(declare-fun x2002 () Bool)
(declare-fun x85 () Bool)
(declare-fun x2647 () Int)
(declare-fun x2733 () Int)
(declare-fun x238 () Bool)
(declare-fun x2725 () Int)
(declare-fun x676 () Int)
(declare-fun x2589 () Bool)
(declare-fun x1098 () Int)
(declare-fun x2600 () Int)
(declare-fun x1628 () Int)
(declare-fun x3028 () Int)
(declare-fun x748 () Int)
(declare-fun x780 () Int)
(declare-fun x2491 () Int)
(declare-fun x388 () Int)
(declare-fun x775 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1349 () Int)
(declare-fun x1131 () Int)
(declare-fun x1839 () Bool)
(declare-fun x2581 () Int)
(declare-fun x608 () Int)
(declare-fun x1420 () Int)
(declare-fun x1184 () Int)
(declare-fun x2912 () Int)
(declare-fun x2431 () Bool)
(declare-fun x111 () Int)
(declare-fun x2344 () Int)
(declare-fun x215 () Int)
(declare-fun x2595 () Int)
(declare-fun x2827 () Int)
(declare-fun x613 () Int)
(declare-fun x2430 () Int)
(declare-fun x970 () Int)
(declare-fun x711 () Int)
(declare-fun x1436 () Int)
(declare-fun x2558 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1453 () Int)
(declare-fun x327 () Int)
(declare-fun x1117 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x202 () Int)
(declare-fun x1583 () Int)
(declare-fun x1973 () Int)
(declare-fun x69 () Bool)
(declare-fun x159 () Int)
(declare-fun x811 () Int)
(declare-fun x1068 () Int)
(declare-fun x2293 () Int)
(declare-fun x927 () Bool)
(declare-fun x2754 () Int)
(declare-fun x2497 () Bool)
(declare-fun x2782 (Int) Int)
(declare-fun x2423 () Int)
(declare-fun x3119 () Int)
(declare-fun x579 () Int)
(declare-fun x2756 () Int)
(declare-fun x2966 () Int)
(declare-fun x1918 () Bool)
(declare-fun x987 () Bool)
(declare-fun x2610 () Int)
(declare-fun x2763 () Int)
(declare-fun x440 () Int)
(declare-fun x1703 () Bool)
(declare-fun x68 () Bool)
(declare-fun x546 () Int)
(declare-fun x1822 () Int)
(declare-fun x1551 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x161 () Bool)
(declare-fun x494 () Int)
(declare-fun x1865 () Int)
(declare-fun x1568 () Int)
(declare-fun x398 () Int)
(declare-fun x380 () Int)
(declare-fun x2615 () Int)
(declare-fun x2992 () Bool)
(declare-fun x2271 () Int)
(declare-fun x1024 () Int)
(declare-fun x2871 () Int)
(declare-fun x2669 () Int)
(declare-fun x844 () Int)
(declare-fun x3132 () Bool)
(declare-fun x965 () Int)
(declare-fun x293 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1121 () Int)
(declare-fun x979 () Int)
(declare-fun x2334 () Int)
(declare-fun x252 () Bool)
(declare-fun x2502 () Int)
(declare-fun x401 () Bool)
(declare-fun x2127 () Int)
(declare-fun x318 () Int)
(declare-fun x2752 () Bool)
(declare-fun x774 () Int)
(declare-fun x2806 () Int)
(declare-fun x1943 () Int)
(declare-fun x1612 () Bool)
(declare-fun x975 () Int)
(declare-fun x2365 () Int)
(declare-fun x144 () Int)
(declare-fun x1309 () Int)
(declare-fun x1770 () Bool)
(declare-fun x194 () Int)
(declare-fun x921 () Bool)
(declare-fun x1422 () Int)
(declare-fun x2795 () Int)
(declare-fun x1963 () Int)
(declare-fun x2386 () Int)
(declare-fun x983 () Int)
(declare-fun x870 () Int)
(declare-fun x1307 () Bool)
(declare-fun x232 () Int)
(declare-fun x366 () Int)
(declare-fun x1160 () Int)
(declare-fun x2817 () Int)
(declare-fun x481 () Int)
(declare-fun x2353 () Int)
(declare-fun x1355 () Int)
(declare-fun x2164 () Int)
(declare-fun x1729 () Bool)
(declare-fun x940 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1848 () Int)
(declare-fun x2813 () Int)
(declare-fun x3036 () Int)
(declare-fun x2350 () Bool)
(declare-fun x1787 () Int)
(declare-fun x1313 () Int)
(declare-fun x2192 () Int)
(declare-fun x3148 () Int)
(declare-fun x1133 () Int)
(declare-fun x3162 () Bool)
(declare-fun x1267 () Int)
(declare-fun x2100 () Int)
(declare-fun x110 () Int)
(declare-fun x1774 () Int)
(declare-fun x1455 () Int)
(declare-fun x1864 () Int)
(declare-fun x1101 () Int)
(declare-fun x564 () Int)
(declare-fun x1997 () Int)
(declare-fun x2771 () Int)
(declare-fun x2872 () Int)
(declare-fun x692 () Bool)
(declare-fun x1417 () Int)
(declare-fun x484 () Int)
(declare-fun x2384 () Int)
(declare-fun x503 () Int)
(declare-fun x2270 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1676 () Int)
(declare-fun x177 () Bool)
(declare-fun x2241 (Int) Int)
(declare-fun x1236 () Int)
(declare-fun x2552 () Int)
(declare-fun x80 () Int)
(declare-fun x2136 () Bool)
(declare-fun x1012 () Int)
(declare-fun x2442 () Bool)
(declare-fun x1027 () Int)
(declare-fun x2766 () Bool)
(declare-fun x2791 () Int)
(declare-fun x3009 () Int)
(declare-fun x2165 () Int)
(declare-fun x516 () Int)
(declare-fun x1530 () Bool)
(declare-fun x838 () Int)
(declare-fun x1166 () Int)
(declare-fun x2846 () Bool)
(declare-fun x964 () Int)
(declare-fun x3071 () Bool)
(declare-fun x98 () Int)
(declare-fun x2052 (Int) Int)
(declare-fun x2870 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1427 () Int)
(declare-fun x2496 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x1771 () Int)
(declare-fun x2417 () Int)
(declare-fun x3130 () Bool)
(declare-fun x2054 () Int)
(declare-fun x3151 () Bool)
(declare-fun x1700 () Int)
(declare-fun x626 () Int)
(declare-fun x911 () Bool)
(declare-fun x1137 () Int)
(declare-fun x41 () Int)
(declare-fun x1219 () Int)
(declare-fun x2209 () Int)
(declare-fun x1415 () Bool)
(declare-fun x2161 () Int)
(declare-fun x1695 () Int)
(declare-fun x2977 () Int)
(declare-fun x182 () Int)
(declare-fun x2783 () Int)
(declare-fun x3076 () Int)
(declare-fun x209 () Int)
(declare-fun x784 () Int)
(declare-fun x2702 () Bool)
(declare-fun x1140 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1575 () Int)
(declare-fun x345 () Int)
(declare-fun x3017 () Int)
(declare-fun x1931 () Int)
(declare-fun x2548 () Int)
(declare-fun x1657 () Int)
(declare-fun x918 () Int)
(declare-fun x208 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1379 () Bool)
(declare-fun x2307 () Int)
(declare-fun x2183 () Bool)
(declare-fun x2071 () Int)
(declare-fun x216 () Int)
(declare-fun x1985 () Bool)
(declare-fun x2749 () Int)
(declare-fun x169 () Int)
(declare-fun x851 () Int)
(declare-fun x1242 () Int)
(declare-fun x1603 () Int)
(declare-fun x89 () Int)
(declare-fun x2231 () Int)
(declare-fun x91 () Int)
(declare-fun x2348 () Int)
(declare-fun x577 () Int)
(declare-fun x117 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1496 () Int)
(declare-fun x300 () Int)
(declare-fun x166 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x875 () Int)
(declare-fun x2296 () Int)
(declare-fun x528 () Int)
(declare-fun x108 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1978 () Int)
(declare-fun x2323 () Int)
(declare-fun x765 () Int)
(declare-fun x1159 () Bool)
(declare-fun x245 () Int)
(declare-fun x250 () Int)
(declare-fun x1260 () Int)
(declare-fun x686 () Bool)
(declare-fun x167 () Int)
(declare-fun x1320 () Int)
(declare-fun x1278 () Int)
(declare-fun x490 () Int)
(declare-fun x2526 () Bool)
(declare-fun x3104 () Int)
(declare-fun x2741 () Int)
(declare-fun x597 () Int)
(declare-fun x612 () Int)
(declare-fun x1342 () Int)
(declare-fun x2853 () Bool)
(declare-fun x1912 () Int)
(declare-fun x2569 () Int)
(declare-fun x1195 () Int)
(declare-fun x3056 () Int)
(declare-fun x1614 () Int)
(declare-fun x2957 () Bool)
(declare-fun x2347 () Int)
(declare-fun x126 () Int)
(declare-fun x1152 () Int)
(declare-fun x2139 () Int)
(declare-fun x2777 () Int)
(declare-fun x283 () Int)
(declare-fun x1228 () Int)
(declare-fun x1400 () Int)
(declare-fun x2775 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2984 () Int)
(declare-fun x523 () Bool)
(declare-fun x2555 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1132 () Int)
(declare-fun x969 () Int)
(declare-fun x107 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x240 () Int)
(declare-fun x1256 () Int)
(declare-fun x624 () Int)
(declare-fun x3027 (Int Int) Int)
(declare-fun x2077 () Bool)
(declare-fun x908 () Int)
(declare-fun x259 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1056 () Bool)
(declare-fun x42 () Int)
(declare-fun x1094 () Bool)
(declare-fun x2440 () Int)
(declare-fun x1843 () Int)
(declare-fun x707 () Bool)
(declare-fun x828 () Int)
(declare-fun x2824 () Int)
(declare-fun x2612 () Int)
(declare-fun x2700 () Bool)
(declare-fun x1836 (Int) Int)
(declare-fun x2409 () Bool)
(declare-fun x1561 () Int)
(declare-fun x2222 () Int)
(declare-fun x945 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x2050 () Int)
(declare-fun x2721 () Bool)
(declare-fun x2135 () Int)
(declare-fun x1351 () Bool)
(declare-fun x205 () Int)
(declare-fun x1896 () Int)
(declare-fun x2811 () Bool)
(declare-fun x2158 () Int)
(declare-fun x909 () Bool)
(declare-fun x936 () Int)
(declare-fun x2245 (Int) Int)
(declare-fun x1425 () Int)
(declare-fun x2461 () Bool)
(declare-fun x2713 () Int)
(declare-fun x1814 () Int)
(declare-fun x2287 () Bool)
(declare-fun x458 () Int)
(declare-fun x1405 () Int)
(declare-fun x2180 () Int)
(declare-fun x1939 () Bool)
(declare-fun x486 () Bool)
(declare-fun x961 () Bool)
(declare-fun x2711 () Int)
(declare-fun x3073 () Int)
(declare-fun x3052 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2332 () Int)
(declare-fun x2906 () Bool)
(declare-fun x1075 () Int)
(declare-fun x2389 () Int)
(declare-fun x1263 () Int)
(declare-fun x589 () Int)
(declare-fun x204 () Int)
(declare-fun x2884 () Int)
(declare-fun x256 () Int)
(declare-fun x2940 () Int)
(declare-fun x659 () Int)
(declare-fun x2087 () Int)
(declare-fun x3043 () Int)
(declare-fun x877 () Int)
(declare-fun x2364 () Int)
(declare-fun x60 () Int)
(declare-fun x2728 () Bool)
(declare-fun x1151 () Int)
(declare-fun x211 () Int)
(declare-fun x1837 () Int)
(declare-fun x1354 () Bool)
(declare-fun x4 () Int)
(declare-fun x3008 () Bool)
(declare-fun x890 () Bool)
(declare-fun x2358 () Int)
(declare-fun x2438 () Int)
(declare-fun x3080 () Int)
(declare-fun x75 () Int)
(declare-fun x2291 () Int)
(declare-fun x754 () Int)
(declare-fun x717 () Int)
(declare-fun x1375 () Int)
(declare-fun x1693 () Int)
(declare-fun x382 () Int)
(declare-fun x1482 () Bool)
(declare-fun x1809 () Int)
(declare-fun x2021 () Int)
(declare-fun x1560 () Bool)
(declare-fun x623 () Int)
(declare-fun x2212 () Int)
(declare-fun x1429 () Int)
(declare-fun x1873 () Int)
(declare-fun x359 () Int)
(declare-fun x200 () Int)
(declare-fun x429 () Int)
(declare-fun x1373 () Int)
(declare-fun x500 () Bool)
(declare-fun x2311 () Int)
(declare-fun x1644 () Int)
(declare-fun x3062 () Int)
(declare-fun x815 () Int)
(declare-fun x2910 () Int)
(declare-fun x1654 () Int)
(declare-fun x2140 () Bool)
(declare-fun x326 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x2937 () Int)
(declare-fun x1145 () Bool)
(declare-fun x2974 () Int)
(declare-fun x1710 () Int)
(declare-fun x2172 () Int)
(declare-fun x1253 () Int)
(declare-fun x2109 () Int)
(declare-fun x722 () Int)
(declare-fun x679 () Int)
(declare-fun x2401 () Int)
(declare-fun x2274 () Int)
(declare-fun x52 () Int)
(declare-fun x1181 () Int)
(declare-fun x2857 () Int)
(declare-fun x2925 () Int)
(declare-fun x386 () Int)
(declare-fun x312 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x133 () Int)
(declare-fun x2810 () Bool)
(declare-fun x3133 () Bool)
(declare-fun x3096 () Int)
(declare-fun x937 () Int)
(declare-fun x2436 () Bool)
(declare-fun x2550 () Int)
(declare-fun x3032 () Int)
(declare-fun x1176 () Bool)
(declare-fun x237 () Int)
(declare-fun x254 (Int) Int)
(declare-fun x1790 () Int)
(declare-fun x1016 () Bool)
(declare-fun x93 () Bool)
(declare-fun x2314 () Int)
(declare-fun x1624 () Bool)
(declare-fun x2248 () Int)
(declare-fun x1786 () Int)
(declare-fun x2359 () Bool)
(declare-fun x2464 () Int)
(declare-fun x999 () Int)
(declare-fun x1893 () Int)
(declare-fun x1541 () Int)
(declare-fun x2882 () Bool)
(declare-fun x600 () Bool)
(declare-fun x2283 () Int)
(declare-fun x88 () Int)
(declare-fun x1441 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1900 () Int)
(declare-fun x2479 () Bool)
(declare-fun x2575 () Int)
(declare-fun x2740 () Int)
(declare-fun x2851 () Int)
(declare-fun x1305 () Bool)
(declare-fun x2696 () Int)
(declare-fun x2778 () Int)
(declare-fun x1275 () Bool)
(declare-fun x480 () Bool)
(declare-fun x1116 () Int)
(declare-fun x2706 () Int)
(declare-fun x2025 () Int)
(declare-fun x3100 () Int)
(declare-fun x3120 () Int)
(declare-fun x487 () Bool)
(declare-fun x956 () Int)
(declare-fun x2554 () Bool)
(declare-fun x162 () Int)
(declare-fun x713 () Int)
(declare-fun x427 () Int)
(declare-fun x1669 () Int)
(declare-fun x1801 () Int)
(declare-fun x1784 () Int)
(declare-fun x496 () Int)
(declare-fun x2907 () Int)
(declare-fun x460 () Int)
(declare-fun x129 () Int)
(declare-fun x2593 () Bool)
(declare-fun x1941 () Int)
(declare-fun x1593 () Int)
(declare-fun x1863 () Int)
(declare-fun x743 () Bool)
(declare-fun x420 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x814 () Int)
(declare-fun x1565 () Int)
(declare-fun x705 () Bool)
(declare-fun x1450 () Int)
(declare-fun x2310 () Int)
(declare-fun x1107 () Int)
(declare-fun x1746 () Int)
(declare-fun x885 () Int)
(declare-fun x848 () Int)
(declare-fun x2680 () Int)
(declare-fun x2710 () Int)
(declare-fun x847 () Int)
(declare-fun x2468 () Int)
(declare-fun x1361 () Int)
(declare-fun x315 () Bool)
(declare-fun x475 () Bool)
(declare-fun x160 () Int)
(declare-fun x1694 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1175 () Int)
(declare-fun x1325 () Int)
(declare-fun x2678 () Int)
(declare-fun x591 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x329 () Int)
(declare-fun x620 () Int)
(declare-fun x2048 () Int)
(declare-fun x1815 () Int)
(declare-fun x1797 () Bool)
(declare-fun x2116 () Int)
(declare-fun x3110 () Int)
(declare-fun x1635 () Int)
(declare-fun x2821 () Int)
(declare-fun x64 () Int)
(declare-fun x1222 () Int)
(declare-fun x2619 () Bool)
(declare-fun x2995 () Int)
(declare-fun x1775 () Int)
(declare-fun x2693 () Bool)
(declare-fun x3163 () Int)
(declare-fun x1607 () Int)
(declare-fun x409 () Int)
(declare-fun x2770 () Bool)
(declare-fun x1212 () Int)
(declare-fun x103 () Int)
(declare-fun x2825 () Int)
(declare-fun x465 () Int)
(declare-fun x562 () Int)
(declare-fun x3055 () Int)
(declare-fun x2145 () Int)
(declare-fun x1689 () Bool)
(declare-fun x443 (Int Int) Int)
(declare-fun x2837 () Int)
(declare-fun x2808 () Int)
(declare-fun x1739 () Int)
(declare-fun x656 () Bool)
(declare-fun x592 () Int)
(declare-fun x2005 () Int)
(declare-fun x2150 () Int)
(declare-fun x1426 () Int)
(declare-fun x492 () Bool)
(declare-fun x1148 () Int)
(declare-fun x3074 () Int)
(declare-fun x2668 () Int)
(declare-fun x1111 () Int)
(declare-fun x1721 () Int)
(declare-fun x1592 () Int)
(declare-fun x2985 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1935 () Int)
(declare-fun x1662 () Bool)
(declare-fun x2090 () Int)
(declare-fun x2978 () Int)
(declare-fun x757 () Bool)
(declare-fun x3069 () Int)
(declare-fun x2826 () Int)
(declare-fun x2244 () Int)
(declare-fun x1638 () Int)
(declare-fun x3105 () Int)
(declare-fun x2282 () Int)
(declare-fun x2284 () Bool)
(declare-fun x2397 () Int)
(declare-fun x1982 () Bool)
(declare-fun x125 () Int)
(declare-fun x2407 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x447 () Int)
(declare-fun x2750 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x2898 () Int)
(declare-fun x352 () Int)
(declare-fun x3013 () Int)
(declare-fun x633 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x253 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x3092 () Int)
(declare-fun x2001 () Int)
(declare-fun x1830 () Int)
(declare-fun x1199 () Int)
(declare-fun x1311 () Int)
(declare-fun x2214 () Int)
(declare-fun x231 () Int)
(declare-fun x3034 () Int)
(declare-fun x2980 () Int)
(declare-fun x2599 () Bool)
(declare-fun x1642 () Int)
(declare-fun x2333 () Int)
(declare-fun x1281 () Int)
(declare-fun x1126 () Int)
(declare-fun x2963 () Bool)
(declare-fun x506 () Int)
(declare-fun x2381 () Int)
(declare-fun x3088 () Int)
(declare-fun x1335 () Bool)
(declare-fun x1204 () Int)
(declare-fun x2000 () Int)
(declare-fun x922 () Int)
(declare-fun x601 () Int)
(declare-fun x1889 () Int)
(declare-fun x967 () Int)
(declare-fun x421 () Int)
(declare-fun x2398 () Bool)
(declare-fun x2876 () Int)
(declare-fun x2147 () Bool)
(declare-fun x1297 () Int)
(declare-fun x2451 () Int)
(declare-fun x1416 () Int)
(declare-fun x2300 () Int)
(declare-fun x2167 () Int)
(declare-fun x2723 () Bool)
(declare-fun x998 () Int)
(declare-fun x2112 () Int)
(declare-fun x2191 () Int)
(declare-fun x2776 () Int)
(declare-fun x1203 () Int)
(declare-fun x1690 () Int)
(declare-fun x2072 () Bool)
(declare-fun x2394 () Int)
(declare-fun x1001 () Int)
(declare-fun x3040 () Int)
(declare-fun x2641 () Int)
(declare-fun x947 () Int)
(declare-fun x353 () Int)
(declare-fun x1080 () Int)
(declare-fun x1386 () Int)
(declare-fun x822 () Int)
(declare-fun x631 () Int)
(declare-fun x738 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x26 () Int)
(declare-fun x2897 () Int)
(declare-fun x3114 () Bool)
(declare-fun x903 () Int)
(declare-fun x2478 () Int)
(declare-fun x373 () Int)
(declare-fun x3003 () Int)
(declare-fun x462 () Int)
(declare-fun x2572 () Int)
(declare-fun x2580 () Int)
(declare-fun x1810 () Int)
(declare-fun x1485 () Int)
(declare-fun x2659 () Int)
(declare-fun x1825 () Int)
(declare-fun x1613 () Bool)
(declare-fun x521 () Int)
(declare-fun x655 () Int)
(declare-fun x1645 () Int)
(declare-fun x651 () Bool)
(declare-fun x648 () Int)
(declare-fun x2574 () Bool)
(declare-fun x27 () Int)
(declare-fun x735 () Int)
(declare-fun x2911 () Int)
(declare-fun x1673 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2927 () Int)
(declare-fun x273 () Int)
(declare-fun x1474 () Int)
(declare-fun x2405 () Int)
(declare-fun x930 () Int)
(declare-fun x1004 () Int)
(declare-fun x1206 () Int)
(declare-fun x701 () Int)
(declare-fun x919 () Int)
(declare-fun x2399 () Int)
(declare-fun x2210 () Bool)
(declare-fun x2304 () Int)
(declare-fun x1419 () Int)
(declare-fun x802 () Int)
(declare-fun x2979 () Bool)
(declare-fun x710 () Int)
(declare-fun x2053 () Int)
(declare-fun x152 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1927 () Int)
(declare-fun x551 () Bool)
(declare-fun x179 () Int)
(declare-fun x289 () Bool)
(declare-fun x1106 () Int)
(declare-fun x2661 () Int)
(declare-fun x2320 () Int)
(declare-fun x2160 () Int)
(declare-fun x2444 () Bool)
(declare-fun x1880 () Int)
(declare-fun x968 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x846 () Int)
(declare-fun x197 () Bool)
(declare-fun x1950 () Int)
(declare-fun x2035 () Int)
(declare-fun x347 () Int)
(declare-fun x2207 () Int)
(declare-fun x644 () Bool)
(declare-fun x2121 () Int)
(declare-fun x819 () Bool)
(declare-fun x1726 () Int)
(declare-fun x766 () Int)
(declare-fun x414 () Int)
(declare-fun x1698 () Int)
(declare-fun x849 () Int)
(declare-fun x154 () Int)
(declare-fun x2695 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1183 () Int)
(declare-fun x2243 () Int)
(declare-fun x3149 () Int)
(declare-fun x2948 () Int)
(declare-fun x1919 () Int)
(declare-fun x1517 () Int)
(declare-fun x861 () Bool)
(declare-fun x958 () Bool)
(declare-fun x3147 () Int)
(declare-fun x1504 () Int)
(declare-fun x857 () Int)
(declare-fun x720 () Int)
(declare-fun x383 () Int)
(declare-fun x2767 () Bool)
(declare-fun x1502 () Int)
(declare-fun x1082 () Bool)
(declare-fun x411 () Int)
(declare-fun x3144 () Int)
(declare-fun x1125 () Bool)
(declare-fun x261 () Int)
(declare-fun x1639 () Int)
(declare-fun x1625 () Int)
(declare-fun x900 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x138 () Int)
(declare-fun x1463 () Bool)
(declare-fun x610 () Int)
(declare-fun x311 () Int)
(declare-fun x646 () Int)
(declare-fun x1404 () Int)
(declare-fun x1327 () Bool)
(declare-fun x668 () Bool)
(declare-fun x78 () Int)
(declare-fun x1806 () Int)
(declare-fun x1573 () Int)
(declare-fun x673 () Int)
(declare-fun x1240 () Int)
(declare-fun x1447 () Int)
(declare-fun x1330 () Int)
(declare-fun x1766 () Int)
(declare-fun x3006 () Int)
(declare-fun x2914 () Int)
(declare-fun x2331 () Int)
(declare-fun x349 () Int)
(declare-fun x331 () Int)
(declare-fun x2181 () Int)
(declare-fun x1752 () Int)
(declare-fun x1762 () Int)
(declare-fun x2885 () Int)
(declare-fun x558 () Bool)
(declare-fun x1393 () Int)
(declare-fun x2337 () Int)
(declare-fun x201 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x2117 () Int)
(declare-fun x1119 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1506 () Int)
(declare-fun x3112 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x643 () Int)
(declare-fun x2799 () Int)
(declare-fun x1738 () Int)
(declare-fun x227 () Int)
(declare-fun x2280 () Int)
(declare-fun x1272 () Int)
(declare-fun x2422 () Int)
(declare-fun x1538 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1761 () Int)
(declare-fun x1655 () Int)
(declare-fun x2632 () Int)
(declare-fun x1967 () Int)
(declare-fun x893 () Int)
(declare-fun x2019 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x1902 () Int)
(declare-fun x3025 () Int)
(declare-fun x1469 () Int)
(declare-fun x426 () Int)
(declare-fun x423 () Bool)
(declare-fun x3158 () Int)
(declare-fun x446 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x1274 () Int)
(declare-fun x942 () Bool)
(declare-fun x1841 () Int)
(declare-fun x10 () Bool)
(declare-fun x645 () Int)
(declare-fun x1580 () Int)
(declare-fun x2043 () Int)
(declare-fun x1070 () Bool)
(declare-fun x2483 () Int)
(declare-fun x1257 () Bool)
(declare-fun x1430 () Int)
(declare-fun x2798 () Int)
(declare-fun x2673 () Int)
(declare-fun x2008 () Int)
(declare-fun x1002 () Int)
(declare-fun x1948 () Int)
(declare-fun x863 () Int)
(declare-fun x1243 () Int)
(declare-fun x771 () Int)
(declare-fun x1989 () Bool)
(declare-fun x2220 () Int)
(declare-fun x2991 () Int)
(declare-fun x1723 () Int)
(declare-fun x1029 () Int)
(declare-fun x799 () Bool)
(declare-fun x695 () Int)
(declare-fun x741 () Int)
(declare-fun x770 () Bool)
(declare-fun x1369 () Int)
(declare-fun x603 () Int)
(declare-fun x1602 () Int)
(declare-fun x1300 (Int Int) Int)
(declare-fun x671 () Int)
(declare-fun x984 () Int)
(declare-fun x472 () Int)
(declare-fun x1295 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x1431 () Int)
(declare-fun x2841 () Int)
(declare-fun x1501 () Int)
(declare-fun x843 () Int)
(declare-fun x1163 () Int)
(declare-fun x2913 () Bool)
(declare-fun x3048 () Int)
(declare-fun x1030 () Int)
(declare-fun x542 () Int)
(declare-fun x2859 () Bool)
(declare-fun x469 () Int)
(declare-fun x2975 () Bool)
(declare-fun x660 () Int)
(declare-fun x696 () Bool)
(declare-fun x1878 () Int)
(declare-fun x898 () Int)
(declare-fun x1795 () Int)
(declare-fun x2605 () Bool)
(declare-fun x3103 () Int)
(declare-fun x510 () Int)
(declare-fun x1479 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x1720 () Int)
(declare-fun x2367 (Int) Bool)
(declare-fun x2009 () Int)
(declare-fun x2877 () Int)
(declare-fun x641 () Int)
(declare-fun x767 () Bool)
(declare-fun x2494 () Int)
(declare-fun x635 () Int)
(declare-fun x1451 () Bool)
(declare-fun x2285 () Int)
(declare-fun x1717 () Int)
(declare-fun x1363 () Int)
(declare-fun x1333 (Int) Int)
(declare-fun x2563 () Bool)
(declare-fun x2276 () Int)
(declare-fun x437 () Int)
(declare-fun x2457 () Int)
(declare-fun x2111 () Int)
(declare-fun x2466 () Int)
(declare-fun x561 () Int)
(declare-fun x225 () Bool)
(declare-fun x593 () Int)
(declare-fun x2532 () Int)
(declare-fun x2022 () Int)
(declare-fun x116 () Int)
(declare-fun x2705 () Int)
(declare-fun x2689 (Int) Int)
(declare-fun x2623 () Int)
(declare-fun x966 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2503 () Int)
(declare-fun x2832 () Int)
(declare-fun x2076 () Int)
(declare-fun x150 () Int)
(declare-fun x3068 () Int)
(declare-fun x1380 () Int)
(declare-fun x1683 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1525 () Int)
(declare-fun x2803 () Int)
(declare-fun x2418 () Bool)
(declare-fun x375 () Int)
(declare-fun x514 () Bool)
(declare-fun x296 () Int)
(declare-fun x1042 () Int)
(declare-fun x338 () Int)
(declare-fun x2260 () Int)
(declare-fun x1869 () Bool)
(declare-fun x559 () Int)
(declare-fun x100 (Int Int Int Int Int Int Int) Int)
(declare-fun x199 () Int)
(declare-fun x301 () Int)
(declare-fun x2567 () Bool)
(declare-fun x2292 () Int)
(declare-fun x2586 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x461 () Int)
(declare-fun x1234 () Int)
(declare-fun x2085 () Int)
(declare-fun x1708 () Int)
(declare-fun x1544 () Int)
(declare-fun x275 () Int)
(declare-fun x2371 () Int)
(declare-fun x1462 () Int)
(declare-fun x73 () Int)
(declare-fun x2266 () Bool)
(declare-fun x2493 () Int)
(declare-fun x944 () Bool)
(declare-fun x1813 () Int)
(declare-fun x2092 () Int)
(declare-fun x2521 () Int)
(declare-fun x2010 () Int)
(declare-fun x354 () Bool)
(declare-fun x2089 () Int)
(declare-fun x2408 () Int)
(declare-fun x2065 () Int)
(declare-fun x2200 () Bool)
(declare-fun x34 () Int)
(declare-fun x1310 () Int)
(declare-fun x2068 () Int)
(declare-fun x1539 () Int)
(declare-fun x689 () Int)
(declare-fun x2747 () Int)
(declare-fun x2724 () Int)
(declare-fun x529 () Int)
(declare-fun x2722 () Int)
(declare-fun x212 () Int)
(declare-fun x2278 () Int)
(declare-fun x1888 () Int)
(declare-fun x2849 () Bool)
(declare-fun x2633 () Int)
(declare-fun x467 () Int)
(declare-fun x230 () Int)
(declare-fun x1653 () Int)
(declare-fun x321 () Int)
(declare-fun x1972 () Bool)
(declare-fun x2329 () Int)
(declare-fun x2604 () Int)
(declare-fun x1783 (Int) Int)
(declare-fun x2170 () Bool)
(declare-fun x1357 () Int)
(declare-fun x575 () Int)
(declare-fun x113 () Int)
(declare-fun x2215 () Bool)
(declare-fun x54 () Int)
(declare-fun x2553 () Int)
(declare-fun x823 () Bool)
(declare-fun x234 () Int)
(declare-fun x2303 () Int)
(declare-fun x1773 () Int)
(declare-fun x219 () Int)
(declare-fun x2933 () Int)
(declare-fun x1221 () Int)
(declare-fun x365 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2492 () Int)
(declare-fun x2305 () Int)
(declare-fun x2454 () Int)
(declare-fun x1552 () Int)
(declare-fun x2254 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x2637 () Int)
(declare-fun x3060 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x879 () Bool)
(declare-fun x2355 () Int)
(declare-fun x1047 () Bool)
(declare-fun x2162 () Int)
(declare-fun x2326 () Int)
(declare-fun x441 () Int)
(declare-fun x1153 () Int)
(declare-fun x1513 () Int)
(declare-fun x2413 () Int)
(declare-fun x2943 () Bool)
(declare-fun x71 () Int)
(declare-fun x32 () Int)
(declare-fun x310 () Bool)
(declare-fun x821 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1725 () Int)
(declare-fun x1461 () Int)
(declare-fun x20 () Int)
(declare-fun x1198 () Int)
(declare-fun x2636 () Bool)
(declare-fun x758 () Int)
(declare-fun x1831 () Int)
(declare-fun x1071 () Int)
(declare-fun x2197 () Int)
(declare-fun x810 () Int)
(declare-fun x248 () Bool)
(declare-fun x2804 () Int)
(declare-fun x1709 () Int)
(declare-fun x3014 () Int)
(declare-fun x2534 () Int)
(declare-fun x16 () Bool)
(declare-fun x3050 () Int)
(declare-fun x2787 () Int)
(declare-fun x681 () Int)
(declare-fun x2060 () Bool)
(declare-fun x97 () Int)
(declare-fun x685 () Int)
(declare-fun x3129 () Int)
(declare-fun x517 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2261 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1515 () Int)
(declare-fun x2281 () Int)
(declare-fun x2342 () Int)
(declare-fun x1315 () Int)
(declare-fun x1769 () Int)
(declare-fun x1299 (Int) Int)
(declare-fun x674 () Int)
(declare-fun x1750 () Int)
(declare-fun x2915 () Bool)
(declare-fun x3012 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1946 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1793 () Int)
(declare-fun x1252 () Int)
(declare-fun x2620 () Int)
(declare-fun x1615 () Int)
(declare-fun x1258 () Int)
(declare-fun x2234 () Int)
(declare-fun x694 () Int)
(declare-fun x1460 () Int)
(declare-fun x2928 () Int)
(declare-fun x2616 () Int)
(declare-fun x934 () Bool)
(declare-fun x456 () Int)
(declare-fun x895 () Int)
(declare-fun x2122 () Int)
(declare-fun x143 () Int)
(declare-fun x2677 () Int)
(declare-fun x48 () Int)
(declare-fun x586 () Int)
(declare-fun x1069 () Int)
(declare-fun x625 () Int)
(declare-fun x3138 () Int)
(declare-fun x1966 () Int)
(declare-fun x2743 () Bool)
(declare-fun x284 () Int)
(declare-fun x3126 () Int)
(declare-fun x2339 () Int)
(declare-fun x379 () Int)
(declare-fun x2490 () Int)
(declare-fun x1802 () Int)
(declare-fun x2095 () Int)
(declare-fun x2237 () Int)
(declare-fun x2704 () Int)
(declare-fun x1586 () Int)
(declare-fun x55 () Int)
(declare-fun x1934 () Int)
(declare-fun x1233 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x2557 () Int)
(declare-fun x1246 () Int)
(declare-fun x1908 () Int)
(declare-fun x672 () Int)
(declare-fun x3005 () Int)
(declare-fun x389 () Int)
(declare-fun x3020 () Int)
(declare-fun x2570 () Int)
(declare-fun x2467 () Int)
(declare-fun x985 () Int)
(declare-fun x764 () Int)
(declare-fun x14 () Int)
(declare-fun x346 () Bool)
(declare-fun x2024 () Int)
(declare-fun x2513 () Int)
(declare-fun x1600 () Int)
(declare-fun x932 () Int)
(declare-fun x982 () Bool)
(declare-fun x431 () Int)
(declare-fun x438 () Int)
(declare-fun x1241 () Int)
(declare-fun x729 () Int)
(declare-fun x2080 () Bool)
(declare-fun x1854 () Int)
(declare-fun x2981 () Int)
(declare-fun x2880 () Int)
(declare-fun x2449 () Int)
(declare-fun x614 () Int)
(declare-fun x2372 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x915 () Int)
(declare-fun x762 () Bool)
(declare-fun x2465 () Int)
(declare-fun x1702 () Int)
(declare-fun x2205 () Bool)
(declare-fun x471 () Int)
(declare-fun x2640 () Int)
(declare-fun x2152 () Int)
(declare-fun x527 () Int)
(declare-fun x2794 () Int)
(declare-fun x2675 () Bool)
(declare-fun x726 () Int)
(declare-fun x1487 () Int)
(declare-fun x1095 () Int)
(declare-fun x952 () Int)
(declare-fun x2887 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x478 () Int)
(declare-fun x1486 () Int)
(declare-fun x948 () Int)
(declare-fun x699 () Int)
(declare-fun x2044 () Int)
(declare-fun x2404 () Int)
(declare-fun x1807 () Int)
(declare-fun x1128 () Int)
(declare-fun x1245 () Int)
(declare-fun x698 () Int)
(declare-fun x439 () Int)
(declare-fun x664 () Bool)
(declare-fun x286 () Int)
(declare-fun x134 (Int) Int)
(declare-fun x778 () Int)
(declare-fun x2176 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1411 () Int)
(declare-fun x829 () Int)
(declare-fun x1961 () Bool)
(declare-fun x1399 () Int)
(declare-fun x2522 () Bool)
(declare-fun x800 () Int)
(declare-fun x418 () Int)
(declare-fun x2649 () Int)
(declare-fun x2146 () Int)
(declare-fun x1087 (Int) Int)
(declare-fun x2103 () Bool)
(declare-fun x2781 (Int) Int)
(declare-fun x2385 () Int)
(declare-fun x557 () Int)
(declare-fun x3097 () Int)
(declare-fun x1992 () Int)
(declare-fun x2157 () Int)
(declare-fun x923 () Bool)
(declare-fun x468 () Int)
(declare-fun x691 () Bool)
(declare-fun x1454 () Int)
(declare-fun x226 () Int)
(declare-fun x2730 () Int)
(declare-fun x2788 () Int)
(declare-fun x2132 () Bool)
(declare-fun x663 () Int)
(declare-fun x1341 () Int)
(declare-fun x35 () Int)
(declare-fun x2529 () Bool)
(declare-fun x424 () Int)
(declare-fun x2325 () Int)
(declare-fun x1712 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2607 () Int)
(declare-fun x2858 () Int)
(declare-fun x387 () Int)
(declare-fun x417 () Int)
(declare-fun x1356 () Int)
(declare-fun x731 () Int)
(declare-fun x1255 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2226 () Int)
(declare-fun x2630 () Int)
(declare-fun x2834 () Int)
(declare-fun x636 () Int)
(declare-fun x2402 (Int Int Int Int) Int)
(declare-fun x515 () Int)
(declare-fun x3161 () Int)
(declare-fun x1072 () Int)
(declare-fun x1909 () Int)
(declare-fun x977 () Int)
(declare-fun x1294 () Int)
(declare-fun x2987 () Int)
(declare-fun x1209 () Int)
(declare-fun x384 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x901 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x842 () Int)
(declare-fun x2801 () Bool)
(declare-fun x2421 () Int)
(declare-fun x578 () Int)
(declare-fun x553 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x2425 () Int)
(declare-fun x1812 () Int)
(declare-fun x2751 () Bool)
(declare-fun x186 () Int)
(declare-fun x1861 () Int)
(declare-fun x2390 () Int)
(declare-fun x1610 () Bool)
(declare-fun x619 () Int)
(declare-fun x2113 () Int)
(declare-fun x1999 () Bool)
(declare-fun x2748 () Int)
(declare-fun x2470 () Int)
(declare-fun x1388 () Bool)
(declare-fun x2295 () Int)
(declare-fun x1533 () Int)
(declare-fun x874 () Int)
(declare-fun x309 () Int)
(declare-fun x1776 () Int)
(declare-fun x2881 () Int)
(declare-fun x1599 () Int)
(declare-fun x1572 () Int)
(declare-fun x2559 () Int)
(declare-fun x271 () Int)
(declare-fun x786 () Int)
(declare-fun x1875 () Int)
(declare-fun x1633 () Int)
(declare-fun x1792 () Int)
(declare-fun x2805 () Int)
(declare-fun x2714 () Int)
(declare-fun x2796 () Bool)
(declare-fun x629 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x128 () Int)
(declare-fun x3102 () Int)
(declare-fun x2079 () Int)
(declare-fun x499 () Int)
(declare-fun x2938 () Bool)
(declare-fun x1794 () Int)
(declare-fun x992 () Bool)
(declare-fun x22 () Int)
(declare-fun x1050 () Int)
(declare-fun x2138 () Bool)
(declare-fun x1799 () Int)
(declare-fun x11 () Int)
(declare-fun x2007 () Int)
(declare-fun x649 () Int)
(declare-fun x1078 () Int)
(declare-fun x1279 () Int)
(declare-fun x869 () Int)
(declare-fun x2173 () Bool)
(declare-fun x1675 () Int)
(declare-fun x3159 () Int)
(declare-fun x891 () Int)
(declare-fun x2614 () Int)
(declare-fun x149 () Int)
(declare-fun x1949 () Bool)
(declare-fun x1566 () Int)
(declare-fun x491 () Int)
(declare-fun x90 () Int)
(declare-fun x2564 () Int)
(declare-fun x1358 () Int)
(declare-fun x1714 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2265 () Bool)
(declare-fun x2902 () Int)
(declare-fun x2016 () Int)
(declare-fun x45 () Int)
(declare-fun x1933 () Int)
(declare-fun x2015 () Int)
(declare-fun x1887 () Int)
(declare-fun x368 () Int)
(declare-fun x139 () Int)
(declare-fun x1930 () Int)
(declare-fun x2416 () Int)
(declare-fun x2744 () Bool)
(declare-fun x270 () Bool)
(declare-fun x2433 () Int)
(declare-fun x104 () Int)
(declare-fun x2592 () Int)
(declare-fun x1296 () Int)
(declare-fun x189 () Bool)
(declare-fun x835 () Int)
(declare-fun x841 () Int)
(declare-fun x1089 () Bool)
(declare-fun x1907 () Int)
(declare-fun x1945 (Int) Int)
(declare-fun x1031 () Bool)
(declare-fun x2587 () Int)
(declare-fun x3051 () Int)
(declare-fun x1744 () Int)
(declare-fun x3049 () Int)
(declare-fun x746 () Int)
(declare-fun x1424 () Int)
(declare-fun x1017 () Int)
(declare-fun x2692 () Int)
(declare-fun x1914 () Bool)
(declare-fun x1090 (Int) Int)
(declare-fun x280 () Int)
(declare-fun x2594 () Int)
(declare-fun x1492 () Int)
(declare-fun x1852 () Int)
(declare-fun x588 (Int Int Int Int Int Int) Int)
(declare-fun x3039 () Int)
(declare-fun x1631 () Int)
(declare-fun x21 () Int)
(declare-fun x818 () Int)
(declare-fun x2608 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1743 () Int)
(declare-fun x1609 () Int)
(declare-fun x83 () Int)
(declare-fun x2732 () Int)
(declare-fun x2549 () Int)
(declare-fun x1345 () Bool)
(declare-fun x2670 () Int)
(declare-fun x1408 () Int)
(declare-fun x1663 () Int)
(declare-fun x1023 () Bool)
(declare-fun x2655 () Int)
(declare-fun x2627 () Bool)
(declare-fun x1368 () Int)
(declare-fun x831 () Int)
(declare-fun x3146 () Bool)
(declare-fun x1287 () Int)
(declare-fun x2922 () Bool)
(declare-fun x833 () Bool)
(declare-fun x2308 () Int)
(declare-fun x1273 () Int)
(declare-fun x1582 () Int)
(declare-fun x2537 () Int)
(declare-fun x43 () Int)
(declare-fun x2107 () Int)
(declare-fun x2946 () Int)
(declare-fun x1632 () Int)
(declare-fun x2213 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x724 () Int)
(declare-fun x3002 () Int)
(declare-fun x2560 () Int)
(declare-fun x1892 () Int)
(declare-fun x2909 () Int)
(declare-fun x1191 () Int)
(declare-fun x1677 () Int)
(declare-fun x1757 () Int)
(declare-fun x3127 () Int)
(declare-fun x1074 () Bool)
(declare-fun x825 () Int)
(declare-fun x2037 () Int)
(declare-fun x598 () Int)
(declare-fun x2953 () Bool)
(declare-fun x151 () Int)
(declare-fun x2652 () Int)
(declare-fun x1758 () Int)
(declare-fun x2971 () Int)
(declare-fun x563 () Int)
(declare-fun x1860 () Int)
(declare-fun x537 () Int)
(declare-fun x115 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x2667 () Int)
(declare-fun x2432 () Int)
(declare-fun x1737 () Int)
(declare-fun x2093 () Int)
(declare-fun x2046 () Int)
(declare-fun x30 () Int)
(declare-fun x607 () Int)
(declare-fun x2807 () Int)
(declare-fun x2463 () Bool)
(declare-fun x72 () Int)
(declare-fun x2134 (Int) Int)
(declare-fun x3160 () Int)
(declare-fun x2078 () Int)
(declare-fun x51 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x191 () Int)
(declare-fun x325 () Bool)
(declare-fun x495 () Int)
(declare-fun x31 () Bool)
(declare-fun x2507 () Int)
(declare-fun x2818 () Int)
(declare-fun x951 () Int)
(declare-fun x316 () Int)
(declare-fun x2485 () Int)
(declare-fun x938 () Int)
(declare-fun x1188 () Int)
(declare-fun x2934 () Bool)
(declare-fun x1867 () Int)
(declare-fun x734 () Int)
(declare-fun x796 () Int)
(declare-fun x1500 () Int)
(declare-fun x1953 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x2199 () Int)
(declare-fun x1192 () Int)
(declare-fun x2171 () Bool)
(declare-fun x584 () Int)
(declare-fun x2387 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x187 () Int)
(declare-fun x193 () Bool)
(declare-fun x1767 () Int)
(declare-fun x2879 () Bool)
(declare-fun x688 () Int)
(declare-fun x5 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1193 () Int)
(declare-fun x1765 () Int)
(declare-fun x501 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1859 () Int)
(declare-fun x3078 () Bool)
(declare-fun x2868 () Int)
(declare-fun x989 () Int)
(declare-fun x1382 () Int)
(declare-fun x933 () Int)
(declare-fun x2681 () Int)
(declare-fun x2124 () Int)
(declare-fun x2345 () Bool)
(declare-fun x2643 () Int)
(declare-fun x1481 () Int)
(declare-fun x2839 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1162 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x1338 () Int)
(declare-fun x3061 () Bool)
(declare-fun x102 () Int)
(declare-fun x1514 () Int)
(declare-fun x2924 () Bool)
(declare-fun x1704 () Int)
(declare-fun x2942 () Bool)
(declare-fun x2541 () Int)
(declare-fun x2263 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x450 () Int)
(declare-fun x3123 () Int)
(declare-fun x2515 () Int)
(declare-fun x1882 () Int)
(declare-fun x996 () Int)
(declare-fun x2066 () Bool)
(declare-fun x1858 () Int)
(declare-fun x573 () Int)
(declare-fun x2129 () Int)
(declare-fun x1317 () Int)
(declare-fun x1874 () Int)
(declare-fun x545 () Int)
(declare-fun x1005 () Bool)
(declare-fun x675 () Int)
(declare-fun x2075 () Int)
(declare-fun x1213 () Int)
(declare-fun x1605 () Int)
(declare-fun x2737 () Int)
(declare-fun x2458 () Int)
(declare-fun x3156 () Int)
(declare-fun x962 () Int)
(declare-fun x493 () Bool)
(declare-fun x1172 () Int)
(declare-fun x3106 () Int)
(declare-fun x3085 () Int)
(declare-fun x2814 () Int)
(declare-fun x1120 () Int)
(declare-fun x1856 () Int)
(declare-fun x2527 () Int)
(declare-fun x1736 () Int)
(declare-fun x1937 () Int)
(declare-fun x2370 () Bool)
(declare-fun x1161 () Int)
(declare-fun x396 () Int)
(declare-fun x897 () Int)
(declare-fun x737 () Int)
(declare-fun x1606 () Int)
(declare-fun x66 () Int)
(declare-fun x2125 () Bool)
(declare-fun x2726 () Int)
(declare-fun x2313 () Int)
(declare-fun x1334 () Bool)
(declare-fun x334 (Int) Int)
(declare-fun x1590 () Int)
(declare-fun x1026 () Int)
(declare-fun x2816 () Bool)
(declare-fun x1142 () Int)
(declare-fun x2819 () Int)
(declare-fun x2701 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x470 () Int)
(declare-fun x2842 (Int) Int)
(declare-fun x789 () Int)
(declare-fun x3087 () Int)
(declare-fun x852 () Int)
(declare-fun x1008 () Int)
(declare-fun x2290 () Int)
(declare-fun x1991 () Int)
(declare-fun x1745 () Int)
(declare-fun x2195 () Int)
(declare-fun x132 () Bool)
(declare-fun x96 () Int)
(declare-fun x489 () Int)
(declare-fun x145 () Int)
(declare-fun x1789 () Bool)
(declare-fun x2959 () Int)
(declare-fun x15 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x2219 () Int)
(declare-fun x716 () Int)
(declare-fun x658 () Int)
(declare-fun x730 () Int)
(declare-fun x1886 () Int)
(declare-fun x44 () Int)
(declare-fun x221 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1442 () Int)
(declare-fun x2238 () Bool)
(declare-fun x2400 () Int)
(declare-fun x1048 () Int)
(declare-fun x7 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1280 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1251 () Int)
(declare-fun x1433 () Int)
(declare-fun x1924 () Int)
(declare-fun x866 () Bool)
(declare-fun x1587 () Int)
(declare-fun x594 () Int)
(declare-fun x2665 () Bool)
(declare-fun x830 () Int)
(declare-fun x392 () Int)
(declare-fun x1756 () Int)
(declare-fun x3099 () Int)
(declare-fun x1216 () Bool)
(declare-fun x2360 () Int)
(declare-fun x595 () Int)
(declare-fun x1134 () Bool)
(declare-fun x882 () Int)
(declare-fun x413 () Int)
(declare-fun x2685 () Bool)
(declare-fun x279 () Int)
(declare-fun x889 () Int)
(declare-fun x196 () Bool)
(declare-fun x2939 () Int)
(declare-fun x627 () Int)
(declare-fun x565 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x941 () Int)
(declare-fun x455 () Int)
(declare-fun x433 () Int)
(declare-fun x583 () Int)
(declare-fun x122 () Int)
(declare-fun x1697 () Bool)
(declare-fun x976 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x2414 () Int)
(declare-fun x2867 () Int)
(declare-fun x742 () Bool)
(declare-fun x511 () Int)
(declare-fun x1641 () Int)
(declare-fun x163 () Int)
(declare-fun x1562 () Int)
(declare-fun x704 () Int)
(declare-fun x768 () Int)
(declare-fun x1751 () Int)
(declare-fun x2990 () Int)
(declare-fun x2382 () Int)
(declare-fun x2201 () Bool)
(declare-fun x587 () Int)
(declare-fun x3063 () Bool)
(declare-fun x1359 () Int)
(declare-fun x218 () Int)
(declare-fun x2686 () Int)
(declare-fun x2251 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x862 () Int)
(declare-fun x291 () Int)
(declare-fun x24 (Int) Int)
(declare-fun x2603 () Int)
(declare-fun x1438 () Int)
(declare-fun x2960 () Bool)
(declare-fun x1535 () Int)
(declare-fun x555 () Int)
(declare-fun x1680 () Int)
(declare-fun x1118 () Int)
(declare-fun x2189 () Int)
(declare-fun x1996 () Int)
(declare-fun x2379 () Bool)
(declare-fun x1291 () Int)
(declare-fun x1378 () Int)
(declare-fun x1660 () Bool)
(declare-fun x190 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1818 () Int)
(declare-fun x135 () Int)
(declare-fun x47 () Bool)
(declare-fun x611 () Int)
(declare-fun x434 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1472 () Int)
(declare-fun x1679 () Int)
(declare-fun x2289 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1578 () Int)
(declare-fun x2453 () Int)
(declare-fun x2664 () Int)
(declare-fun x1569 () Int)
(declare-fun x23 () Bool)
(declare-fun x2488 () Int)
(declare-fun x2638 () Bool)
(declare-fun x1352 () Int)
(declare-fun x2098 () Bool)
(declare-fun x2538 () Int)
(declare-fun x1951 () Bool)
(declare-fun x777 () Bool)
(declare-fun x473 () Int)
(declare-fun x1362 () Int)
(declare-fun x1672 () Int)
(declare-fun x2617 () Bool)
(declare-fun x2890 () Int)
(declare-fun x549 () Int)
(declare-fun x2346 () Int)
(declare-fun x428 () Int)
(declare-fun x1009 () Int)
(declare-fun x2073 () Int)
(declare-fun x2899 () Int)
(declare-fun x787 () Bool)
(declare-fun x406 () Int)
(declare-fun x680 () Bool)
(declare-fun x2357 () Int)
(declare-fun x1870 () Bool)
(declare-fun x1884 () Int)
(declare-fun x727 () Int)
(declare-fun x2269 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x3019 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x2268 () Int)
(declare-fun x1302 () Int)
(declare-fun x239 () Int)
(declare-fun x543 () Int)
(declare-fun x1534 () Bool)
(declare-fun x785 (Int Int Int) Int)
(declare-fun x887 () Int)
(declare-fun x38 () Int)
(declare-fun x2952 () Bool)
(declare-fun x1518 () Int)
(declare-fun x988 () Int)
(declare-fun x2545 () Int)
(declare-fun x1804 () Int)
(declare-fun x3108 () Int)
(declare-fun x19 () Int)
(declare-fun x1322 () Bool)
(declare-fun x3010 () Int)
(declare-fun x2568 () Int)
(declare-fun x2380 () Int)
(declare-fun x2753 () Int)
(declare-fun x807 () Int)
(declare-fun x372 () Bool)
(declare-fun x1611 () Int)
(declare-fun x1577 () Bool)
(declare-fun x1170 () Int)
(declare-fun x2631 () Int)
(declare-fun x2836 () Int)
(declare-fun x1730 () Int)
(declare-fun x1646 () Bool)
(declare-fun x902 () Int)
(declare-fun x524 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1456 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x302 () Int)
(declare-fun x391 () Int)
(declare-fun x876 () Int)
(declare-fun x533 () Int)
(declare-fun x1421 () Int)
(declare-fun x350 () Bool)
(declare-fun x1083 () Int)
(declare-fun x87 () Int)
(declare-fun x1579 () Int)
(declare-fun x854 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x2388 () Int)
(declare-fun x809 () Int)
(declare-fun x268 () Int)
(declare-fun x2354 () Int)
(declare-fun x2986 () Int)
(declare-fun x2006 () Int)
(declare-fun x1881 () Int)
(declare-fun x1876 () Int)
(declare-fun x220 () Int)
(declare-fun x570 () Int)
(declare-fun x2646 () Int)
(declare-fun x845 () Int)
(declare-fun x2168 () Int)
(declare-fun x1041 () Int)
(declare-fun x1753 () Int)
(declare-fun x2023 () Int)
(declare-fun x1785 () Int)
(declare-fun x905 () Int)
(declare-fun x1608 () Int)
(declare-fun x2426 () Int)
(declare-fun x2682 () Int)
(declare-fun x2137 () Bool)
(declare-fun x1197 () Int)
(declare-fun x1929 () Int)
(declare-fun x1803 () Bool)
(declare-fun x638 () Int)
(declare-fun x3015 () Int)
(declare-fun x146 () Bool)
(declare-fun x3116 () Int)
(declare-fun x654 () Int)
(declare-fun x2591 () Int)
(declare-fun x2302 () Int)
(declare-fun x1734 () Int)
(declare-fun x3157 () Int)
(declare-fun x2262 () Int)
(declare-fun x2520 () Int)
(declare-fun x2322 (Int Int Int Int) Int)
(declare-fun x2224 () Int)
(declare-fun x120 () Int)
(declare-fun x2013 () Int)
(declare-fun x3042 () Int)
(declare-fun x290 () Bool)
(declare-fun x188 () Int)
(declare-fun x2133 () Int)
(declare-fun x1223 () Int)
(declare-fun x1520 () Int)
(declare-fun x474 () Int)
(declare-fun x2719 () Int)
(declare-fun x2410 () Int)
(declare-fun x1658 () Int)
(declare-fun x1647 () Bool)
(declare-fun x997 () Int)
(declare-fun x185 () Int)
(declare-fun x1177 () Bool)
(declare-fun x544 () Int)
(declare-fun x28 () Int)
(declare-fun x526 () Int)
(declare-fun x781 () Int)
(declare-fun x1480 (Int) Int)
(declare-fun x1389 () Int)
(declare-fun x2656 () Int)
(declare-fun x2679 () Int)
(declare-fun x29 () Int)
(declare-fun x552 () Int)
(declare-fun x2481 () Int)
(declare-fun x1392 () Int)
(declare-fun x3109 () Bool)
(declare-fun x950 () Bool)
(declare-fun x2556 () Int)
(declare-fun x2216 () Int)
(declare-fun x797 () Int)
(declare-fun x2896 () Int)
(declare-fun x2297 () Bool)
(declare-fun x2848 () Int)
(declare-fun x2439 () Int)
(declare-fun x2773 () Int)
(declare-fun x2317 () Bool)
(declare-fun x718 () Int)
(declare-fun x6 () Int)
(declare-fun x2362 () Int)
(declare-fun x548 () Int)
(declare-fun x1959 () Int)
(declare-fun x1043 () Int)
(declare-fun x1103 () Bool)
(declare-fun x826 () Int)
(declare-fun x808 () Bool)
(declare-fun x319 () Int)
(declare-fun x2014 () Int)
(declare-fun x3016 (Int) Int)
(declare-fun x50 () Int)
(declare-fun x782 () Int)
(declare-fun x361 () Int)
(declare-fun x2239 () Int)
(declare-fun x1286 () Int)
(declare-fun x278 () Int)
(declare-fun x1316 () Int)
(declare-fun x1576 () Int)
(declare-fun x251 () Bool)
(declare-fun x2225 () Int)
(declare-fun x1323 () Int)
(declare-fun x3046 () Int)
(declare-fun x394 () Bool)
(declare-fun x3054 () Int)
(declare-fun x3026 () Int)
(declare-fun x445 () Int)
(declare-fun x1604 () Int)
(declare-fun x3095 () Bool)
(declare-fun x567 () Int)
(declare-fun x617 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x2844 () Int)
(declare-fun x263 () Int)
(declare-fun x1407 () Int)
(declare-fun x1987 () Int)
(declare-fun x801 () Int)
(declare-fun x2169 () Int)
(declare-fun x715 () Int)
(declare-fun x1007 () Int)
(declare-fun x1594 () Int)
(declare-fun x1899 () Int)
(declare-fun x1543 () Bool)
(declare-fun x314 () Int)
(declare-fun x1112 () Int)
(declare-fun x1301 () Int)
(declare-fun x1637 () Int)
(declare-fun x1733 () Int)
(declare-fun x1862 () Bool)
(declare-fun x2061 () Int)
(declare-fun x2057 () Int)
(declare-fun x2812 () Int)
(declare-fun x1626 () Int)
(declare-fun x2618 () Bool)
(declare-fun x1032 () Int)
(declare-fun x2588 () Bool)
(declare-fun x505 () Int)
(declare-fun x95 () Bool)
(declare-fun x2672 () Int)
(declare-fun x714 () Int)
(declare-fun x2838 () Int)
(declare-fun x131 () Int)
(declare-fun x2908 () Int)
(declare-fun x1044 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2790 () Int)
(declare-fun x297 () Int)
(declare-fun x1649 () Bool)
(declare-fun x2684 () Int)
(declare-fun x142 () Int)
(declare-fun x2993 () Int)
(declare-fun x1254 () Int)
(declare-fun x2926 () Int)
(declare-fun x2301 () Int)
(declare-fun x1452 () Int)
(declare-fun x2905 () Int)
(declare-fun x550 () Int)
(declare-fun x1190 () Int)
(declare-fun x1046 () Int)
(declare-fun x1682 () Int)
(declare-fun x453 () Int)
(declare-fun x616 () Int)
(declare-fun x2067 () Bool)
(declare-fun x2651 () Int)
(declare-fun x2654 () Int)
(declare-fun x2275 () Int)
(declare-fun x1174 () Int)
(declare-fun x1536 () Int)
(declare-fun x824 () Int)
(declare-fun x2917 () Bool)
(declare-fun x247 () Int)
(declare-fun x1282 () Bool)
(declare-fun x2779 () Int)
(declare-fun x502 () Int)
(declare-fun x304 () Int)
(declare-fun x1747 () Int)
(declare-fun x1800 () Int)
(declare-fun x1458 () Int)
(declare-fun x374 () Bool)
(declare-fun x1922 () Int)
(declare-fun x783 () Int)
(declare-fun x2923 () Int)
(declare-fun x223 () Bool)
(declare-fun x1826 () Int)
(declare-fun x1397 () Int)
(declare-fun x1339 () Int)
(declare-fun x1139 () Int)
(declare-fun x2230 () Int)
(declare-fun x913 () Int)
(declare-fun x8 () Int)
(declare-fun x1314 () Bool)
(declare-fun x1684 () Int)
(declare-fun x274 () Bool)
(declare-fun x2691 () Int)
(declare-fun x2472 () Int)
(declare-fun x1390 () Int)
(declare-fun x416 () Int)
(declare-fun x3053 () Int)
(declare-fun x236 () Bool)
(declare-fun x2508 () Int)
(declare-fun x2757 () Int)
(declare-fun x832 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x217 () Int)
(declare-fun x928 () Int)
(declare-fun x2699 () Int)
(declare-fun x2250 () Int)
(declare-fun x2495 () Bool)
(declare-fun x1847 () Int)
(declare-fun x837 () Int)
(declare-fun x157 () Int)
(declare-fun x2341 () Bool)
(declare-fun x1901 () Int)
(declare-fun x1306 () Int)
(declare-fun x2739 () Bool)
(declare-fun x265 () Int)
(declare-fun x206 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x670 () Int)
(declare-fun x2865 () Int)
(declare-fun x408 () Int)
(declare-fun x1493 () Int)
(declare-fun x1055 () Int)
(declare-fun x136 () Int)
(declare-fun x2530 (Int) Int)
(declare-fun x1932 () Bool)
(declare-fun x1507 () Int)
(declare-fun x2694 () Int)
(declare-fun x195 () Int)
(declare-fun x1423 () Int)
(declare-fun x2106 () Int)
(declare-fun x2242 () Int)
(declare-fun x917 () Int)
(declare-fun x531 () Bool)
(declare-fun x602 () Int)
(declare-fun x1418 () Int)
(declare-fun x1261 () Int)
(declare-fun x3066 () Int)
(declare-fun x2396 () Bool)
(declare-fun x2012 () Int)
(declare-fun x2941 () Int)
(declare-fun x1685 () Bool)
(declare-fun x858 () Bool)
(declare-fun x2419 () Int)
(declare-fun x2392 () Int)
(declare-fun x1844 () Int)
(declare-fun x67 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x2525 () Int)
(declare-fun x2070 () Int)
(declare-fun x2028 () Int)
(declare-fun x2792 () Int)
(declare-fun x1248 () Bool)
(declare-fun x3083 () Int)
(declare-fun x751 () Int)
(declare-fun x105 () Bool)
(declare-fun x2249 () Int)
(declare-fun x2716 () Bool)
(declare-fun x1823 () Int)
(declare-fun x813 () Int)
(declare-fun x2731 () Int)
(declare-fun x1085 () Int)
(declare-fun x2687 () Int)
(declare-fun x566 () Int)
(declare-fun x3001 () Int)
(declare-fun x2565 () Int)
(declare-fun x2255 () Int)
(declare-fun x285 () Int)
(declare-fun x2895 () Bool)
(declare-fun x2042 () Int)
(declare-fun x1168 () Int)
(declare-fun x1217 () Int)
(declare-fun x2218 () Int)
(declare-fun x1816 () Int)
(declare-fun x1499 () Bool)
(declare-fun x378 () Int)
(declare-fun x2063 () Int)
(declare-fun x750 () Bool)
(declare-fun x2153 () Int)
(declare-fun x1064 () Bool)
(declare-fun x1332 () Int)
(declare-fun x1699 () Int)
(declare-fun x395 () Bool)
(declare-fun x3142 () Int)
(declare-fun x916 () Int)
(declare-fun x308 () Int)
(declare-fun x1250 () Int)
(declare-fun x920 () Int)
(declare-fun x1284 () Bool)
(declare-fun x46 () Int)
(declare-fun x892 () Int)
(declare-fun x667 () Int)
(declare-fun x3044 () Bool)
(declare-fun x1540 () Int)
(declare-fun x650 () Int)
(declare-fun x62 () Bool)
(declare-fun x725 () Bool)
(declare-fun x1853 () Int)
(declare-fun x2477 () Int)
(declare-fun x1104 () Int)
(declare-fun x358 () Int)
(declare-fun x883 () Int)
(define-fun x2893 ((x1141 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1141) (>= x1141 0)) x1141 (- x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1149 ((x1141 Int)) Int (ite (and (< x1141 0) (>= x1141 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1141))
(define-fun x246 ((x419 Int)) Bool (and (>= x419 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x419)))
(define-fun x1292 ((x419 Int)) Bool (and (= (x1300 x419 115792089237316195423570985008687907853269984665640564039457584007913129639935) x419) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639935 x419) x419)))
(define-fun x1505 ((x419 Int)) Bool (and (= 0 (x1300 x419 0)) (= (x1300 0 x419) 0)))
(define-fun x37 ((x419 Int)) Bool (= (x1300 x419 x419) x419))
(define-fun x3077 ((x419 Int)) Bool (and (x37 x419) (x1292 x419) (x1505 x419)))
(define-fun x410 ((x419 Int) (x1285 Int)) Bool (= (x1300 x419 x1285) (x1300 x1285 x419)))
(define-fun x1312 ((x419 Int) (x1285 Int)) Bool (and (=> (>= x419 0) (>= x419 (x1300 x419 x1285))) (<= 0 (x1300 x419 x1285)) (=> (>= x1285 0) (<= (x1300 x419 x1285) x1285))))
(define-fun x2968 ((x419 Int) (x1285 Int)) Bool (and (x1312 x419 x1285) (x410 x419 x1285)))
(define-fun x1290 ((x419 Int)) Bool (= (mod x419 1461501637330902918203684832716283019655932542976) (x1300 x419 1461501637330902918203684832716283019655932542975)))
(define-fun x1105 ((x419 Int)) Bool (and (x1290 x419) (x2968 x419 1461501637330902918203684832716283019655932542975)))
(define-fun x360 ((x419 Int)) Bool (= (+ (x1300 x419 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x419 32)) (mod x419 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1630 ((x419 Int)) Bool (and (x360 x419) (x2968 x419 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1476 ((x2424 Int)) Int (ite (< x2424 x782) (x1333 x2424) 0))
(define-fun x776 ((x2424 Int)) Int 0)
(define-fun x2309 ((x2424 Int)) Int (x2241 x2424))
(define-fun x1529 ((x2424 Int)) Int (x276 x2424))
(define-fun x2988 ((x2424 Int)) Int (x334 x2424))
(define-fun x532 ((x2424 Int)) Int (x397 x2424))
(define-fun x70 ((x2424 Int)) Int (x1783 x2424))
(define-fun x2252 ((x2424 Int)) Int 0)
(define-fun x180 ((x2424 Int)) Int (ite (= x2424 x111) x2747 (x2134 x2424)))
(define-fun x2159 ((x2424 Int)) Int (ite (= x684 x2424) x378 (x180 x2424)))
(define-fun x1186 ((x2424 Int)) Int 0)
(define-fun x330 ((x2424 Int)) Int (ite (= x2424 4) 32 (x1186 x2424)))
(define-fun x1928 ((x2424 Int)) Int (ite (= x2424 36) x643 (x330 x2424)))
(define-fun x2535 ((x2424 Int)) Int (ite (= x2424 68) x2474 (x1928 x2424)))
(define-fun x1622 ((x2424 Int)) Int (ite (= 100 x2424) x898 (x2535 x2424)))
(define-fun x508 ((x2424 Int)) Int (ite (= 132 x2424) 352 (x1622 x2424)))
(define-fun x1014 ((x2424 Int)) Int (ite (= x2424 388) x2290 (x508 x2424)))
(define-fun x1842 ((x2424 Int)) Int (ite (and (< x2424 (+ x2291 420)) (<= 420 x2424)) (x2309 (- x2424 420)) (x1014 x2424)))
(define-fun x1727 ((x2424 Int)) Int (ite (= 164 x2424) x2123 (x1842 x2424)))
(define-fun x525 ((x2424 Int)) Int (ite (= x2424 x355) x1620 (x1727 x2424)))
(define-fun x1713 ((x2424 Int)) Int (ite (and (>= x2424 x818) (< x2424 (+ x818 x2229))) (x1529 (- x2424 x818)) (x525 x2424)))
(define-fun x2366 ((x2424 Int)) Int (ite (= 196 x2424) x2748 (x1713 x2424)))
(define-fun x1764 ((x2424 Int)) Int (ite (= x2129 x2424) x623 (x2366 x2424)))
(define-fun x351 ((x2424 Int)) Int (ite (and (>= x2424 x2590) (< x2424 (+ x2590 x2974))) (x2988 (- x2424 x2590)) (x1764 x2424)))
(define-fun x1894 ((x2424 Int)) Int (ite (= 228 x2424) x1156 (x351 x2424)))
(define-fun x2473 ((x2424 Int)) Int (ite (= x2016 x2424) x318 (x1894 x2424)))
(define-fun x2863 ((x2424 Int)) Int (ite (and (>= x2424 x552) (> (+ x318 x552) x2424)) (x532 (- x2424 x552)) (x2473 x2424)))
(define-fun x853 ((x2424 Int)) Int (ite (= x2424 260) x1241 (x2863 x2424)))
(define-fun x1402 ((x2424 Int)) Int (ite (= x948 x2424) x1261 (x853 x2424)))
(define-fun x2944 ((x2424 Int)) Int (ite (and (< x2424 (+ x3156 x215)) (>= x2424 x215)) (x70 (- x2424 x215)) (x1402 x2424)))
(define-fun x1035 ((x2424 Int)) Int (ite (= x2424 292) x2101 (x2944 x2424)))
(define-fun x13 ((x2424 Int)) Int (ite (= 324 x2424) x659 (x1035 x2424)))
(define-fun x2032 ((x2424 Int)) Int (ite (= 356 x2424) x1813 (x13 x2424)))
(define-fun x540 ((x2424 Int)) Int (ite (= x2424 x2916) x545 (x2159 x2424)))
(define-fun x1957 ((x2424 Int)) Int (ite (= x2361 x2424) x932 (x540 x2424)))
(define-fun x2815 ((x2424 Int)) Int (ite (= x2424 128) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x776 x2424)))
(define-fun x935 ((x2424 Int)) Int (ite (= 132 x2424) x1935 (x2815 x2424)))
(define-fun x1440 ((x2424 Int)) Int (ite (= x2424 164) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x935 x2424)))
(define-fun x2149 ((x2424 Int)) Int (ite (and (< x2424 160) (<= 128 x2424)) (x1498 (- x2424 128)) (x1440 x2424)))
(define-fun x2840 ((x2424 Int)) Int (ite x1999 (x2149 x2424) (x1440 x2424)))
(define-fun x1623 ((x2424 Int)) Int (ite (and (>= x2424 128) (< x2424 160)) (x1498 (- x2424 128)) (x2840 x2424)))
(define-fun x1913 ((x2424 Int)) Int (ite (= x2424 288) x2666 (x1623 x2424)))
(define-fun x2746 ((x2424 Int)) Int (ite (= x2424 160) 288 (x1913 x2424)))
(define-fun x1925 ((x2424 Int)) Int (ite (= x2424 320) x720 (x2746 x2424)))
(define-fun x1616 ((x2424 Int)) Int (ite (= 352 x2424) x1991 (x1925 x2424)))
(define-fun x634 ((x2424 Int)) Int (ite (= 448 x2424) x2481 (x1616 x2424)))
(define-fun x2273 ((x2424 Int)) Int (ite (= x2424 x2640) x1066 (x634 x2424)))
(define-fun x269 ((x2424 Int)) Int (ite (= x2424 x2745) x420 (x2273 x2424)))
(define-fun x669 ((x2424 Int)) Int (ite (= x2424 x2410) x243 (x269 x2424)))
(define-fun x2639 ((x2424 Int)) Int (ite (and (<= x1386 x2424) (< x2424 (+ x243 x1386))) (x2032 (- (+ x764 x2424) x1386)) (x669 x2424)))
(define-fun x2330 ((x2424 Int)) Int (ite (= x2424 x1098) 0 (x2639 x2424)))
(define-fun x539 ((x2424 Int)) Int (ite (= x2676 x2424) x2410 (x2330 x2424)))
(define-fun x749 ((x2424 Int)) Int (ite (= 480 x2424) x2640 (x539 x2424)))
(define-fun x1473 ((x2424 Int)) Int (ite x2593 (x634 x2424) (x749 x2424)))
(define-fun x763 ((x2424 Int)) Int (ite (= 384 x2424) 448 (x1473 x2424)))
(define-fun x1601 ((x2424 Int)) Int (ite (= x424 x2424) x1506 (x763 x2424)))
(define-fun x1045 ((x2424 Int)) Int (ite (and (<= x1641 x2424) (< x2424 (+ x1506 x1641))) (x2032 (- (+ x1626 x2424) x1641)) (x1601 x2424)))
(define-fun x2202 ((x2424 Int)) Int (ite (= x2057 x2424) 0 (x1045 x2424)))
(define-fun x1969 ((x2424 Int)) Int (ite (= x2424 416) x424 (x2202 x2424)))
(define-fun x2920 ((x2424 Int)) Int (ite (= x2424 192) 320 (x1969 x2424)))
(define-fun x1636 ((x2424 Int)) Int (ite (= 224 x2424) x1881 (x2920 x2424)))
(define-fun x3011 ((x2424 Int)) Int (ite (= x2424 256) x726 (x1636 x2424)))
(define-fun x2663 ((x2424 Int)) Int (ite (= x2424 x3020) x1748 (x3011 x2424)))
(define-fun x1974 ((x2424 Int)) Int (ite (and (> (+ x2231 x1748) x2424) (<= x2231 x2424)) (x2032 (- (+ x1148 x2424) x2231)) (x2663 x2424)))
(define-fun x2377 ((x2424 Int)) Int (ite (= x2424 x1867) 0 (x1974 x2424)))
(define-fun x2584 ((x2424 Int)) Int (ite (= x2464 x2424) x1861 (x2377 x2424)))
(define-fun x637 ((x2424 Int)) Int (ite (= x456 x2424) x1656 (x2584 x2424)))
(define-fun x1200 ((x2424 Int)) Int (ite (= x563 x2424) x1858 (x637 x2424)))
(define-fun x1497 ((x2424 Int)) Int (ite (= x126 x2424) x2734 (x1200 x2424)))
(define-fun x3101 ((x2424 Int)) Int (ite (= x3015 x2424) x2513 (x1497 x2424)))
(define-fun x2954 ((x2424 Int)) Int (ite (= x2424 x1556) x2672 (x3101 x2424)))
(define-fun x2644 ((x2424 Int)) Int (ite (= x2424 x2260) x1160 (x2954 x2424)))
(define-fun x1618 ((x2424 Int)) Int (ite (= x2424 x309) x126 (x2644 x2424)))
(define-fun x541 ((x2424 Int)) Int (ite x2486 (x1200 x2424) (x1618 x2424)))
(define-fun x1276 ((x2424 Int)) Int (ite (= x283 x2424) x563 (x541 x2424)))
(define-fun x2683 ((x2424 Int)) Int (ite (= x1586 x2424) x1488 (x1276 x2424)))
(define-fun x536 ((x2424 Int)) Int (ite (= x1361 x2424) x2347 (x2683 x2424)))
(define-fun x2319 ((x2424 Int)) Int (ite (= x2424 x472) x2504 (x536 x2424)))
(define-fun x2018 ((x2424 Int)) Int (ite (= x2424 x278) x869 (x2319 x2424)))
(define-fun x1811 ((x2424 Int)) Int (ite (= x1027 x2424) x1934 (x2018 x2424)))
(define-fun x1977 ((x2424 Int)) Int (ite (= x1678 x2424) x1274 (x1811 x2424)))
(define-fun x1231 ((x2424 Int)) Int (ite (= x160 x2424) x1361 (x1977 x2424)))
(define-fun x288 ((x2424 Int)) Int (ite x498 (x2683 x2424) (x1231 x2424)))
(define-fun x2998 ((x2424 Int)) Int (ite (= x1828 x2424) x1586 (x288 x2424)))
(define-fun x3058 ((x2424 Int)) Int (ite (= x1122 x2424) x1746 (x2998 x2424)))
(define-fun x224 ((x2424 Int)) Int (ite (= x2424 x1639) x2160 (x3058 x2424)))
(define-fun x1259 ((x2424 Int)) Int (ite (= x3001 x2424) x3128 (x224 x2424)))
(define-fun x1459 ((x2424 Int)) Int (ite (= x1810 x2424) x1896 (x1259 x2424)))
(define-fun x2232 ((x2424 Int)) Int (ite (= x2424 x122) x3120 (x1459 x2424)))
(define-fun x2577 ((x2424 Int)) Int (ite (= x1390 x2424) x2939 (x2232 x2424)))
(define-fun x2253 ((x2424 Int)) Int (ite (= x839 x2424) x1639 (x2577 x2424)))
(define-fun x2823 ((x2424 Int)) Int (ite x982 (x3058 x2424) (x2253 x2424)))
(define-fun x156 ((x2424 Int)) Int (ite (= x2424 x671) x1122 (x2823 x2424)))
(define-fun x170 ((x2424 Int)) Int (ite (= x3069 x2424) x150 (x156 x2424)))
(define-fun x393 ((x2424 Int)) Int (ite (= x2424 x186) x2633 (x170 x2424)))
(define-fun x926 ((x2424 Int)) Int (ite (= x2424 x2449) x2515 (x393 x2424)))
(define-fun x1555 ((x2424 Int)) Int (ite (= x2424 x368) x1329 (x926 x2424)))
(define-fun x2288 ((x2424 Int)) Int (ite (= x431 x2424) x2731 (x1555 x2424)))
(define-fun x1364 ((x2424 Int)) Int (ite (= x2285 x2424) x2068 (x2288 x2424)))
(define-fun x878 ((x2424 Int)) Int (ite (and (> (+ x1514 x516) x2424) (<= x1514 x2424)) (x2032 (- (+ x2424 x212) x1514)) (x1364 x2424)))
(define-fun x3004 ((x2424 Int)) Int (ite x1731 (x1364 x2424) (x878 x2424)))
(define-fun x1247 ((x2424 Int)) Int (ite (= x2424 x468) x1378 (x3004 x2424)))
(define-fun x1319 ((x2424 Int)) Int (ite (= x2424 x1230) x2843 (x1247 x2424)))
(define-fun x2450 ((x2424 Int)) Int (ite (= x2424 x676) x256 (x1319 x2424)))
(define-fun x2175 ((x2424 Int)) Int (ite (= x302 x2424) 128 (x2450 x2424)))
(define-fun x2597 ((x2424 Int)) Int (ite (= x2424 x1232) x775 (x2175 x2424)))
(define-fun x760 ((x2424 Int)) Int (ite (= x2424 x3139) x587 (x2597 x2424)))
(define-fun x2822 ((x2424 Int)) Int (ite (= x2424 x2928) x1863 (x760 x2424)))
(define-fun x53 ((x2424 Int)) Int (ite (= x951 x2424) x1011 (x2822 x2424)))
(define-fun x2760 ((x2424 Int)) Int (ite (= x2424 x2225) x380 (x53 x2424)))
(define-fun x9 ((x2424 Int)) Int (ite x1989 (x53 x2424) (ite x2708 (x2822 x2424) (ite x1577 (x760 x2424) (ite x2895 (x2597 x2424) (x2760 x2424))))))
(define-fun x2374 ((x2424 Int)) Int (ite (= x2424 x2937) 0 (x9 x2424)))
(define-fun x2873 ((x2424 Int)) Int (ite (= x2424 x2884) x1765 (x2374 x2424)))
(define-fun x703 ((x2424 Int)) Int (ite (= x2424 x1562) x3099 (x2873 x2424)))
(define-fun x1598 ((x2424 Int)) Int (ite x255 (x3004 x2424) (x703 x2424)))
(define-fun x2318 ((x2424 Int)) Int (ite (= x2424 x1785) x2824 (x1598 x2424)))
(define-fun x1537 ((x2424 Int)) Int (ite (= x2424 x437) x3143 (x2318 x2424)))
(define-fun x235 ((x2424 Int)) Int (ite (= x991 x2424) x2910 (x1537 x2424)))
(define-fun x836 ((x2424 Int)) Int (ite (= x2424 x574) x60 (x235 x2424)))
(define-fun x3038 ((x2424 Int)) Int (ite x2662 (x235 x2424) (ite x1798 (x1537 x2424) (ite x1918 (x2318 x2424) (ite x306 (x1598 x2424) (x836 x2424))))))
(define-fun x2412 ((x2424 Int)) Int (ite (= x2424 x1931) x2541 (x3038 x2424)))
(define-fun x621 ((x2424 Int)) Int (ite (= x2424 x106) x1927 (x2412 x2424)))
(define-fun x618 ((x2424 Int)) Int (ite (= x2351 x2424) x1568 (x621 x2424)))
(define-fun x3022 ((x2424 Int)) Int (ite (= x2424 x3092) x2667 (x618 x2424)))
(define-fun x1838 ((x2424 Int)) Int (ite (= x2424 x700) x2881 (x3022 x2424)))
(define-fun x1414 ((x2424 Int)) Int (ite (= x1941 x2424) x2207 (x1838 x2424)))
(define-fun x1591 ((x2424 Int)) Int (ite (= x2424 x2180) x759 (x1414 x2424)))
(define-fun x2809 ((x2424 Int)) Int (ite (= x3045 x2424) x922 (x1591 x2424)))
(define-fun x1524 ((x2424 Int)) Int (ite (= x2424 x408) x1396 (x2809 x2424)))
(define-fun x1435 ((x2424 Int)) Int (ite (= x2945 x2424) x204 (x1524 x2424)))
(define-fun x1283 ((x2424 Int)) Int (ite (= x2424 x1127) x247 (x1435 x2424)))
(define-fun x2518 ((x2424 Int)) Int (ite (= x2606 x2424) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x1283 x2424)))
(define-fun x1968 ((x2424 Int)) Int (ite (= x2237 x2424) x2719 (x2518 x2424)))
(define-fun x3153 ((x2424 Int)) Int (ite (= x2424 x503) x969 (x1968 x2424)))
(define-fun x3155 ((x2424 Int)) Int (ite (= x2606 x2424) 0 (x3153 x2424)))
(define-fun x432 ((x2424 Int)) Int (ite (= x2424 x3147) x1221 (x3155 x2424)))
(define-fun x183 ((x2424 Int)) Int (ite (= x2424 x608) x2997 (x432 x2424)))
(define-fun x299 ((x2424 Int)) Int (ite (= x2424 x3152) x1407 (x183 x2424)))
(define-fun x2866 ((x2424 Int)) Int (ite (= x2424 x1323) x3043 (x299 x2424)))
(define-fun x2994 ((x2424 Int)) Int (ite (= x1405 x2424) x199 (x2866 x2424)))
(define-fun x971 ((x2424 Int)) Int (ite x108 (ite x2205 (x2994 x2424) (ite x47 (x2994 x2424) (x3153 x2424))) (x3153 x2424)))
(define-fun x2976 ((x2424 Int)) Int (ite (= x1015 x2424) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x971 x2424)))
(define-fun x855 ((x2424 Int)) Int (ite (= x2424 x2993) x616 (x2976 x2424)))
(define-fun x213 ((x2424 Int)) Int (ite (= x1207 x2424) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x855 x2424)))
(define-fun x3145 ((x2424 Int)) Int (ite (and (> (+ 32 x1015) x2424) (>= x2424 x1015)) (x1090 (- x2424 x1015)) (x213 x2424)))
(define-fun x1060 ((x2424 Int)) Int (ite x1370 (x3145 x2424) (x213 x2424)))
(define-fun x3098 ((x2424 Int)) Int (ite (and (<= x1015 x2424) (< x2424 (+ x1015 32))) (x1090 (- x2424 x1015)) (x1060 x2424)))
(define-fun x2437 ((x2424 Int)) Int (ite (= x2424 x663) x515 (x3098 x2424)))
(define-fun x57 ((x2424 Int)) Int (ite (and (>= x2424 x2115) (< x2424 (+ x2115 x1251))) (x2032 (- (+ x2424 x212) x2115)) (x2437 x2424)))
(define-fun x2206 ((x2424 Int)) Int (ite x1117 (x2437 x2424) (x57 x2424)))
(define-fun x2932 ((x2424 Int)) Int (ite (= x2711 x2424) x1378 (x2206 x2424)))
(define-fun x1136 ((x2424 Int)) Int (ite (= x2901 x2424) x1332 (x2932 x2424)))
(define-fun x2306 ((x2424 Int)) Int (ite (= x2424 x2116) x2247 (x1136 x2424)))
(define-fun x652 ((x2424 Int)) Int (ite (= x2424 x1325) 128 (x2306 x2424)))
(define-fun x2321 ((x2424 Int)) Int (ite (= x2003 x2424) x2507 (x652 x2424)))
(define-fun x1763 ((x2424 Int)) Int (ite (= x2228 x2424) x838 (x2321 x2424)))
(define-fun x260 ((x2424 Int)) Int (ite (= x2424 x1071) x1522 (x1763 x2424)))
(define-fun x3021 ((x2424 Int)) Int (ite (= x1501 x2424) x426 (x260 x2424)))
(define-fun x1180 ((x2424 Int)) Int (ite (= x2424 x128) x902 (x3021 x2424)))
(define-fun x2609 ((x2424 Int)) Int (ite x1058 (x3021 x2424) (ite x1551 (x260 x2424) (ite x449 (x1763 x2424) (ite x1742 (x2321 x2424) (x1180 x2424))))))
(define-fun x2955 ((x2424 Int)) Int (ite (= x2631 x2424) 0 (x2609 x2424)))
(define-fun x1395 ((x2424 Int)) Int (ite (= x1565 x2424) x2040 (x2955 x2424)))
(define-fun x1096 ((x2424 Int)) Int (ite (= x2424 x1766) x1175 (x1395 x2424)))
(define-fun x2736 ((x2424 Int)) Int (ite x2882 (x2206 x2424) (x1096 x2424)))
(define-fun x2958 ((x2424 Int)) Int (ite (= x219 x2424) x2575 (x2736 x2424)))
(define-fun x2462 ((x2424 Int)) Int (ite (= x2424 x43) x2891 (x2958 x2424)))
(define-fun x2715 ((x2424 Int)) Int (ite (= x2424 x2062) x1419 (x2462 x2424)))
(define-fun x344 ((x2424 Int)) Int (ite (= x1250 x2424) x976 (x2715 x2424)))
(define-fun x1210 ((x2424 Int)) Int (ite x582 (x2715 x2424) (ite x2263 (x2462 x2424) (ite x16 (x2958 x2424) (ite x372 (x2736 x2424) (x344 x2424))))))
(define-fun x3140 ((x2424 Int)) Int (ite (= x2381 x2424) x2152 (x1210 x2424)))
(define-fun x2445 ((x2424 Int)) Int (ite (= x2424 x2401) x1927 (x3140 x2424)))
(define-fun x2102 ((x2424 Int)) Int (ite (= x2991 x2424) x1243 (x2445 x2424)))
(define-fun x708 ((x2424 Int)) Int (ite (= x2424 x1126) x1101 (x2102 x2424)))
(define-fun x3089 ((x2424 Int)) Int (ite (= x2521 x2424) x1889 (x708 x2424)))
(define-fun x1829 ((x2424 Int)) Int (ite (= x2424 x387) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x3089 x2424)))
(define-fun x2961 ((x2424 Int)) Int (ite (= x2424 x1655) x2857 (x1829 x2424)))
(define-fun x2004 ((x2424 Int)) Int (ite (and (> (+ x387 32) x2424) (<= x387 x2424)) (x134 (- x2424 x387)) (x2961 x2424)))
(define-fun x1350 ((x2424 Int)) Int (ite x2031 (x2004 x2424) (x2961 x2424)))
(define-fun x1740 ((x2424 Int)) Int (ite (and (<= x387 x2424) (> (+ x387 32) x2424)) (x134 (- x2424 x387)) (x1350 x2424)))
(define-fun x430 ((x2424 Int)) Int (ite (= x1908 x2424) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x1740 x2424)))
(define-fun x84 ((x2424 Int)) Int (ite (= x920 x2424) x308 (x430 x2424)))
(define-fun x210 ((x2424 Int)) Int (ite (and (>= x2424 x1908) (< x2424 (+ 32 x1908))) (x1692 (- x2424 x1908)) (x84 x2424)))
(define-fun x1735 ((x2424 Int)) Int (ite x1468 (x210 x2424) (x84 x2424)))
(define-fun x538 ((x2424 Int)) Int (ite (and (< x2424 (+ 32 x1908)) (>= x2424 x1908)) (x1692 (- x2424 x1908)) (x1735 x2424)))
(define-fun x1022 ((x2424 Int)) Int (ite (= x2424 x1578) x362 (x538 x2424)))
(define-fun x2729 ((x2424 Int)) Int (ite (= x2424 x416) 0 (x1022 x2424)))
(define-fun x3115 ((x2424 Int)) Int (ite (= x2424 x429) 0 (x2729 x2424)))
(define-fun x2845 ((x2424 Int)) Int (ite (= x871 x2424) 0 (x3115 x2424)))
(define-fun x2456 ((x2424 Int)) Int (ite (= x2424 x1901) 0 (x2845 x2424)))
(define-fun x2571 ((x2424 Int)) Int (ite (= x2024 x2424) 0 (x2456 x2424)))
(define-fun x719 ((x2424 Int)) Int (ite (= x2424 x1605) x416 (x2571 x2424)))
(define-fun x2727 ((x2424 Int)) Int (ite (= x2131 x2424) 0 (x719 x2424)))
(define-fun x63 ((x2424 Int)) Int (ite (= x970 x2424) 0 (x2727 x2424)))
(define-fun x464 ((x2424 Int)) Int (ite (= x2424 x2433) 0 (x63 x2424)))
(define-fun x1465 ((x2424 Int)) Int (ite (= x2424 x863) 0 (x464 x2424)))
(define-fun x425 ((x2424 Int)) Int (ite (= x1602 x2424) 0 (x1465 x2424)))
(define-fun x1980 ((x2424 Int)) Int (ite (= x915 x2424) x2131 (x425 x2424)))
(define-fun x794 ((x2424 Int)) Int (ite x3113 (x1022 x2424) (ite x725 (x719 x2424) (x1980 x2424))))
(define-fun x2039 ((x2424 Int)) Int (ite (= x2424 x2094) x626 (x794 x2424)))
(define-fun x158 ((x2424 Int)) Int (ite (= x2424 x304) 0 (x2039 x2424)))
(define-fun x369 ((x2424 Int)) Int (ite (= x2641 x2424) x286 (x158 x2424)))
(define-fun x2514 ((x2424 Int)) Int (ite (= x2424 x1286) x2276 (x369 x2424)))
(define-fun x466 ((x2424 Int)) Int (ite (= x2424 x648) x1816 (x2514 x2424)))
(define-fun x2536 ((x2424 Int)) Int (ite (= x3104 x2424) x2094 (x466 x2424)))
(define-fun x1321 ((x2424 Int)) Int (ite x2762 (x794 x2424) (x2536 x2424)))
(define-fun x2349 ((x2424 Int)) Int (ite (= x46 x2424) 2 (x1321 x2424)))
(define-fun x2406 ((x2424 Int)) Int (ite (= x2424 x1036) 0 (x2349 x2424)))
(define-fun x2886 ((x2424 Int)) Int (ite (= x2408 x2424) x1916 (x2406 x2424)))
(define-fun x1 ((x2424 Int)) Int (ite (= x1339 x2424) x2965 (x2886 x2424)))
(define-fun x1336 ((x2424 Int)) Int (ite (= x2512 x2424) x3163 (x1 x2424)))
(define-fun x2193 ((x2424 Int)) Int (ite (= x792 x2424) x46 (x1336 x2424)))
(define-fun x173 ((x2424 Int)) Int (ite (= x2424 x2094) x1143 (x794 x2424)))
(define-fun x630 ((x2424 Int)) Int (ite (= x1313 x2424) x2847 (x173 x2424)))
(define-fun x2096 ((x2424 Int)) Int (ite (= x1020 x2424) x1301 (x630 x2424)))
(define-fun x2894 ((x2424 Int)) Int (ite (= x2424 x1907) x2373 (x2096 x2424)))
(define-fun x804 ((x2424 Int)) Int (ite (= x1633 x2424) x1262 (x2894 x2424)))
(define-fun x1584 ((x2424 Int)) Int (ite (= x1760 x2424) x2094 (x804 x2424)))
(define-fun x1820 ((x2424 Int)) Int (ite x1307 (x794 x2424) (x1584 x2424)))
(define-fun x2613 ((x2424 Int)) Int (ite x1216 (ite x2270 (x1321 x2424) (x2193 x2424)) (ite x833 (x794 x2424) (x1820 x2424))))
(define-fun x2546 ((x2424 Int)) Int (ite (= x2424 x1371) 0 (x2613 x2424)))
(define-fun x2141 ((x2424 Int)) Int (ite (= x1030 x2424) x331 (x2546 x2424)))
(define-fun x370 ((x2424 Int)) Int (ite (= x1107 x2424) x2470 (x2141 x2424)))
(define-fun x317 ((x2424 Int)) Int (ite (= x1438 x2424) x2557 (x370 x2424)))
(define-fun x2742 ((x2424 Int)) Int (ite (= x2424 x2490) x793 (x317 x2424)))
(define-fun x2797 ((x2424 Int)) Int (ite (= x2424 x1371) 32 (x2742 x2424)))
(define-fun x2547 ((x2424 Int)) Int (ite (= x97 x2424) 0 (x2797 x2424)))
(define-fun x2441 ((x2424 Int)) Int (ite x2120 (x2742 x2424) (x2547 x2424)))
(define-fun x1903 ((x2424 Int)) Int (ite (= x1371 x2424) x2389 (x2441 x2424)))
(define-fun x978 ((x2424 Int)) Int (ite (= x2339 x2424) x1629 (x1903 x2424)))
(define-fun x1051 ((x2424 Int)) Int (ite (= x2424 x359) x3049 (x978 x2424)))
(define-fun x1444 ((x2424 Int)) Int (ite (= x1077 x2424) x889 (x1051 x2424)))
(define-fun x2523 ((x2424 Int)) Int (ite x105 (x2546 x2424) (x1444 x2424)))
(define-fun x328 ((x2424 Int)) Int (ite x1646 (x2546 x2424) (x2523 x2424)))
(define-fun x1115 ((x2424 Int)) Int (ite (= x1965 x2424) x1367 (x328 x2424)))
(define-fun x1158 ((x2424 Int)) Int (ite (= x1424 x2424) x1578 (x1115 x2424)))
(define-fun x981 ((x2424 Int)) Int (ite (= x2424 x1750) x2740 (x1158 x2424)))
(define-fun x1728 ((x2424 Int)) Int (ite (= x279 x2424) x829 (x981 x2424)))
(define-fun x2989 ((x2424 Int)) Int (ite (= x809 x2424) x1733 (x1728 x2424)))
(define-fun x3141 ((x2424 Int)) Int (ite (= x2424 x52) x124 (x2989 x2424)))
(define-fun x65 ((x2424 Int)) Int (ite (= x2611 x2424) x1806 (x3141 x2424)))
(define-fun x3091 ((x2424 Int)) Int (ite (= x2311 x2424) x329 (x65 x2424)))
(define-fun x687 ((x2424 Int)) Int (ite (= x2424 x1348) x2735 (x3091 x2424)))
(define-fun x12 ((x2424 Int)) Int (ite (= x1104 x2424) x748 (x687 x2424)))
(define-fun x653 ((x2424 Int)) Int (ite (and (< x2424 (+ x448 x954)) (>= x2424 x954)) (x2032 (- (+ x212 x2424) x954)) (x12 x2424)))
(define-fun x1303 ((x2424 Int)) Int (ite x238 (x2245 x2424) (x1891 x2424)))
(define-fun x1779 ((x2424 Int)) Int (ite x2752 (x12 x2424) (x653 x2424)))
(define-fun x1135 ((x2424 Int)) Int (ite (= x2948 x2424) x2459 (x1779 x2424)))
(define-fun x2892 ((x2424 Int)) Int (ite (and (<= x2325 x2424) (> (+ x2325 x501) x2424)) (x2032 (- (+ x2424 x212) x2325)) (x1135 x2424)))
(define-fun x1648 ((x2424 Int)) Int (ite x1994 (x1135 x2424) (x2892 x2424)))
(define-fun x788 ((x2424 Int)) Int (ite (= x155 x2424) x1824 (x1648 x2424)))
(define-fun x590 ((x2424 Int)) Int (ite (= x2424 x445) x1393 (x788 x2424)))
(define-fun x1936 ((x2424 Int)) Int (ite (= x2424 x2902) x1137 (x590 x2424)))
(define-fun x2510 ((x2424 Int)) Int (ite (= x679 x2424) x1743 (x1936 x2424)))
(define-fun x1053 ((x2424 Int)) Int (ite (= x1425 x2424) x142 (x2510 x2424)))
(define-fun x198 ((x2424 Int)) Int (ite (= x2424 x2903) x1705 (x1053 x2424)))
(define-fun x2506 ((x2424 Int)) Int (ite (= x2424 x1048) x495 (x198 x2424)))
(define-fun x1464 ((x2424 Int)) Int (ite (= x2424 x438) x187 (x2506 x2424)))
(define-fun x1512 ((x2424 Int)) Int (ite x2702 (x1648 x2424) (x1464 x2424)))
(define-fun x1040 ((x2424 Int)) Int (ite (= x2424 x1086) x1378 (x1512 x2424)))
(define-fun x2712 ((x2424 Int)) Int (ite (= x1083 x2424) x2600 (x1040 x2424)))
(define-fun x3047 ((x2424 Int)) Int (ite (= x2424 x2107) x543 (x2712 x2424)))
(define-fun x1877 ((x2424 Int)) Int (ite (= x2424 x1759) 128 (x3047 x2424)))
(define-fun x1944 ((x2424 Int)) Int (ite (= x407 x2424) x2808 (x1877 x2424)))
(define-fun x242 ((x2424 Int)) Int (ite (= x379 x2424) x673 (x1944 x2424)))
(define-fun x609 ((x2424 Int)) Int (ite (= x2659 x2424) x473 (x242 x2424)))
(define-fun x2579 ((x2424 Int)) Int (ite (= x1518 x2424) x427 (x609 x2424)))
(define-fun x1073 ((x2424 Int)) Int (ite (= x2424 x1579) x1341 (x2579 x2424)))
(define-fun x677 ((x2424 Int)) Int (ite x2658 (x2579 x2424) (ite x2716 (x609 x2424) (ite x879 (x242 x2424) (ite x1789 (x1944 x2424) (x1073 x2424))))))
(define-fun x733 ((x2424 Int)) Int (ite (= x1561 x2424) 0 (x677 x2424)))
(define-fun x2855 ((x2424 Int)) Int (ite (= x2696 x2424) x30 (x733 x2424)))
(define-fun x2634 ((x2424 Int)) Int (ite (= x925 x2424) x265 (x2855 x2424)))
(define-fun x1081 ((x2424 Int)) Int (ite x1714 (x1512 x2424) (x2634 x2424)))
(define-fun x1289 ((x2424 Int)) Int (ite (= x678 x2424) x918 (x1081 x2424)))
(define-fun x1554 ((x2424 Int)) Int (ite (= x2424 x977) x2883 (x1289 x2424)))
(define-fun x507 ((x2424 Int)) Int (ite (= x2424 x828) x1394 (x1554 x2424)))
(define-fun x2904 ((x2424 Int)) Int (ite (= x2569 x2424) x1592 (x507 x2424)))
(define-fun x2709 ((x2424 Int)) Int (ite x147 (x507 x2424) (ite x907 (x1554 x2424) (ite x1354 (x1289 x2424) (ite x58 (x1081 x2424) (x2904 x2424))))))
(define-fun x2475 ((x2424 Int)) Int (ite (= x860 x2424) x1273 (x2709 x2424)))
(define-fun x576 ((x2424 Int)) Int (ite (= x779 x2424) x579 (x2475 x2424)))
(define-fun x2531 ((x2424 Int)) Int (ite (= x2424 x1995) x89 (x576 x2424)))
(define-fun x1123 ((x2424 Int)) Int (ite (= x2424 x1684) x2553 (x2531 x2424)))
(define-fun x39 ((x2424 Int)) Int (ite (= x2424 x497) x2044 (x1123 x2424)))
(define-fun x2130 ((x2424 Int)) Int (ite x3007 (x1123 x2424) (ite x1084 (x2531 x2424) (ite x1039 (x576 x2424) (ite x1360 (x2475 x2424) (x39 x2424))))))
(define-fun x2856 ((x2424 Int)) Int (ite (= x2426 x2424) x301 (x2130 x2424)))
(define-fun x2540 ((x2424 Int)) Int (ite (= x2424 x1690) x1715 (x2856 x2424)))
(define-fun x2598 ((x2424 Int)) Int (ite (= x2424 x1377) x2430 (x2540 x2424)))
(define-fun x1827 ((x2424 Int)) Int (ite (= x1695 x2424) x2827 (x2598 x2424)))
(define-fun x2363 ((x2424 Int)) Int (ite (= x2680 x2424) x2411 (x1827 x2424)))
(define-fun x632 ((x2424 Int)) Int (ite (= x2384 x2424) x1698 (x2363 x2424)))
(define-fun x1428 ((x2424 Int)) Int (ite (= x2424 x699) x421 (x632 x2424)))
(define-fun x1489 ((x2424 Int)) Int (ite (= x2424 x1330) x1619 (x1428 x2424)))
(define-fun x1109 ((x2424 Int)) Int (ite (= x2424 x891) x1909 (x1489 x2424)))
(define-fun x287 ((x2424 Int)) Int (ite (= x1784 x2424) x2100 (x1109 x2424)))
(define-fun x2800 ((x2424 Int)) Int (ite (= x2424 x1566) x1452 (x287 x2424)))
(define-fun x3067 ((x2424 Int)) Int (ite (= x2424 x1790) x2555 (x2800 x2424)))
(define-fun x1668 ((x2424 Int)) Int (ite (= x2329 x2424) 0 (x3067 x2424)))
(define-fun x2962 ((x2424 Int)) Int (ite (= x2424 x79) 0 (x1668 x2424)))
(define-fun x1270 ((x2424 Int)) Int (ite (= x2168 x2424) x2329 (x2962 x2424)))
(define-fun x2340 ((x2424 Int)) Int (ite (= x2424 x1202) 0 (x1270 x2424)))
(define-fun x1298 ((x2424 Int)) Int (ite (= x1910 x2424) 0 (x2340 x2424)))
(define-fun x1781 ((x2424 Int)) Int (ite (= x2014 x2424) x1202 (x1298 x2424)))
(define-fun x74 ((x2424 Int)) Int (ite x2299 (x3067 x2424) (ite x404 (x1270 x2424) (x1781 x2424))))
(define-fun x2864 ((x2424 Int)) Int (ite (= x159 x2424) x494 (x74 x2424)))
(define-fun x3064 ((x2424 Int)) Int (ite (= x2424 x527) x827 (x2864 x2424)))
(define-fun x2918 ((x2424 Int)) Int (ite (= x2424 x1217) x159 (x3064 x2424)))
(define-fun x1956 ((x2424 Int)) Int (ite x2526 (x74 x2424) (x2918 x2424)))
(define-fun x723 ((x2424 Int)) Int (ite (= x1844 x2424) 32542679537407071897843112657522291873774333932075415528008786499928730894336 (x1956 x2424)))
(define-fun x1617 ((x2424 Int)) Int (ite (= x2424 x1674) x857 (x723 x2424)))
(define-fun x2119 ((x2424 Int)) Int (ite (= x2424 x2825) 64 (x1617 x2424)))
(define-fun x412 ((x2424 Int)) Int (ite (= x2930 x2424) x2720 (x2119 x2424)))
(define-fun x281 ((x2424 Int)) Int (ite (= x2471 x2424) x2188 (x412 x2424)))
(define-fun x520 ((x2424 Int)) Int (ite (= x2424 x2629) x2741 (x281 x2424)))
(define-fun x1596 ((x2424 Int)) Int (ite x1328 (x412 x2424) (x520 x2424)))
(define-fun x2850 ((x2424 Int)) Int (ite (and (> x1844 x2424) (<= x1844 x2424)) (x3019 (- x2424 x1844)) (x1596 x2424)))
(define-fun x2785 ((x2424 Int)) Int (ite (= x2424 x1844) 95932229227554293267862761608555258089024927314852490146714677558661980618752 (x2850 x2424)))
(define-fun x178 ((x2424 Int)) Int (ite (= x2655 x2424) x1166 (x2785 x2424)))
(define-fun x1988 ((x2424 Int)) Int (ite (= x2817 x2424) x1504 (x178 x2424)))
(define-fun x2447 ((x2424 Int)) Int (ite (and (<= x1844 x2424) (< x2424 x1844)) (x2052 (- x2424 x1844)) (x1988 x2424)))
(define-fun x740 ((x2424 Int)) Int (ite x238 (x2850 x2424) (x2447 x2424)))
(define-fun x266 ((x2424 Int)) Int (ite x1159 (x2245 x2424) (ite x238 (x2245 x2424) (x1891 x2424))))
(define-fun x1976 ((x2424 Int)) Int (ite x1159 (x1503 x2424) (ite x238 (x1503 x2424) (x254 x2424))))
(define-fun x761 ((x2424 Int)) Int (ite x1159 (x2850 x2424) (x740 x2424)))
(define-fun x1226 ((x2424 Int)) Int (ite (= x2424 x1844) 0 (x761 x2424)))
(define-fun x657 ((x2424 Int)) Int (ite (= x2424 x614) 0 (x1226 x2424)))
(define-fun x665 ((x2424 Int)) Int (ite (= x1422 x2424) 0 (x657 x2424)))
(define-fun x1211 ((x2424 Int)) Int (ite (= x2424 x681) 0 (x665 x2424)))
(define-fun x94 ((x2424 Int)) Int (ite (= x2424 x241) 88383320980755791914082775550597828907713979028428263264130000526486271950848 (x1211 x2424)))
(define-fun x1574 ((x2424 Int)) Int (ite (= x2424 x2926) x768 (x94 x2424)))
(define-fun x17 ((x2424 Int)) Int (ite (and (> (+ 32 x241) x2424) (<= x241 x2424)) (x1834 (- x2424 x241)) (x1574 x2424)))
(define-fun x973 ((x2424 Int)) Int (ite x1970 (x266 x2424) (ite x2098 (x2782 x2424) (x266 x2424))))
(define-fun x3150 ((x2424 Int)) Int (ite x1647 (x266 x2424) (x973 x2424)))
(define-fun x2982 ((x2424 Int)) Int (ite x823 (x17 x2424) (x1574 x2424)))
(define-fun x1265 ((x2424 Int)) Int (ite (and (> (+ 32 x241) x2424) (>= x2424 x241)) (x1834 (- x2424 x241)) (x2982 x2424)))
(define-fun x1268 ((x2424 Int)) Int (ite (= x2424 x1493) 111117225372770300986259473995147604481826136133417213952520719377678811004928 (x1265 x2424)))
(define-fun x2257 ((x2424 Int)) Int (ite (= x2424 x1311) x2112 (x1268 x2424)))
(define-fun x3124 ((x2424 Int)) Int (ite (= x2424 x1234) x2765 (x2257 x2424)))
(define-fun x2352 ((x2424 Int)) Int (ite (= x2424 x1637) x1517 (x3124 x2424)))
(define-fun x403 ((x2424 Int)) Int (ite (= x1800 x2424) x2248 (x2352 x2424)))
(define-fun x305 ((x2424 Int)) Int (ite (= x2424 x2194) 160 (x403 x2424)))
(define-fun x3107 ((x2424 Int)) Int (ite (= x947 x2424) x211 (x305 x2424)))
(define-fun x1866 ((x2424 Int)) Int (ite (= x2424 x856) x3053 (x3107 x2424)))
(define-fun x2469 ((x2424 Int)) Int (ite (= x55 x2424) x6 (x1866 x2424)))
(define-fun x1667 ((x2424 Int)) Int (ite (= x2424 x118) x3029 (x2469 x2424)))
(define-fun x994 ((x2424 Int)) Int (ite (= x1085 x2424) x19 (x1667 x2424)))
(define-fun x1595 ((x2424 Int)) Int (ite x2178 (x1667 x2424) (ite x745 (x2469 x2424) (ite x2497 (x1866 x2424) (ite x2017 (x3107 x2424) (x994 x2424))))))
(define-fun x2259 ((x2424 Int)) Int (ite (= x2424 x230) 0 (x1595 x2424)))
(define-fun x2482 ((x2424 Int)) Int (ite (and (> x1493 x2424) (<= x1493 x2424)) (x2842 (- x2424 x1493)) (x2259 x2424)))
(define-fun x990 ((x2424 Int)) Int (ite x2098 (x2482 x2424) (x2259 x2424)))
(define-fun x61 ((x2424 Int)) Int (ite x1647 (x761 x2424) (ite x1970 (x1211 x2424) (x990 x2424))))
(define-fun x2148 ((x2424 Int)) Int (ite (= x1924 x2424) x857 (x61 x2424)))
(define-fun x164 ((x2424 Int)) Int (ite (= x1721 x2424) 288 (x2148 x2424)))
(define-fun x482 ((x2424 Int)) Int (ite (= x2424 x98) x2656 (x164 x2424)))
(define-fun x2551 ((x2424 Int)) Int (ite (= x2558 x2424) x765 (x482 x2424)))
(define-fun x1413 ((x2424 Int)) Int (ite (= x2467 x2424) x876 (x2551 x2424)))
(define-fun x2428 ((x2424 Int)) Int (ite (= x2217 x2424) x294 (x1413 x2424)))
(define-fun x2935 ((x2424 Int)) Int (ite x332 (x1836 x2424) (ite x1647 (x266 x2424) (x973 x2424))))
(define-fun x1749 ((x2424 Int)) Int (ite x332 (x1957 x2424) (ite x1647 (x1976 x2424) (ite x1970 (x1976 x2424) (ite x2098 (x454 x2424) (x1976 x2424))))))
(define-fun x599 ((x2424 Int)) Int 0)
(define-fun x569 ((x2424 Int)) Int (ite (= x2424 x358) x2117 (x1749 x2424)))
(define-fun x1006 ((x2424 Int)) Int (ite (= x2424 x747) x1875 (x2428 x2424)))
(define-fun x1527 ((x2424 Int)) Int (ite x1915 (x2428 x2424) (ite x3061 (x1413 x2424) (ite x2108 (x2551 x2424) (ite x668 (x482 x2424) (x1006 x2424))))))
(define-fun x1871 ((x2424 Int)) Int (ite (= x1854 x2424) 0 (x1527 x2424)))
(define-fun x732 ((x2424 Int)) Int (ite (= x3134 x2424) x2279 (x1871 x2424)))
(define-fun x233 ((x2424 Int)) Int (ite (= x2424 x2143) x1110 (x732 x2424)))
(define-fun x1832 ((x2424 Int)) Int (ite (= x104 x2424) x373 (x233 x2424)))
(define-fun x2983 ((x2424 Int)) Int (x1476 x2424))
(define-fun x2500 ((x2424 Int)) Int (ite (= x2424 x1873) x2246 (x1832 x2424)))
(define-fun x1890 ((x2424 Int)) Int (ite (= x2424 x3142) x2564 (x2500 x2424)))
(define-fun x2635 ((x2424 Int)) Int (ite (= x205 x2424) x307 (x1890 x2424)))
(define-fun x1581 ((x2424 Int)) Int (ite (= x2927 x2424) x2737 (x2635 x2424)))
(define-fun x2179 ((x2424 Int)) Int (ite (= x2424 x3076) x1658 (x1581 x2424)))
(define-fun x995 ((x2424 Int)) Int (ite x2618 (x1832 x2424) (x2179 x2424)))
(define-fun x2528 ((x2424 Int)) Int (ite (= x2424 x1455) x701 (x995 x2424)))
(define-fun x2830 ((x2424 Int)) Int (ite (= x7 x2424) x2607 (x2528 x2424)))
(define-fun x2768 ((x2424 Int)) Int (ite (= x1225 x2424) x1357 (x2830 x2424)))
(define-fun x1065 ((x2424 Int)) Int (ite (= x2424 x1068) x2818 (x2768 x2424)))
(define-fun x683 ((x2424 Int)) Int (ite (= x2424 x1426) x245 (x1065 x2424)))
(define-fun x2772 ((x2424 Int)) Int (ite (= x2424 x413) 96 (x683 x2424)))
(define-fun x2869 ((x2424 Int)) Int (ite x2098 (x2782 x2424) (x266 x2424)))
(assert (x246 x2390))
(assert (x246 x1267))
(assert (x246 x1860))
(assert (x246 x153))
(assert (x246 x748))
(assert (x246 x2169))
(assert (< (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x1375 x1590 x2357 x715)))
(assert (x246 x1472))
(assert (x3077 x1879))
(assert (= (x1945 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)) (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)))
(assert (not (x2367 (x785 64 x1199 1))))
(assert (< 10000 (x3027 x2826 x458)))
(assert (= 0 (x1945 111117225372770300986259473995147604481826136133417213952520719377678811004928)))
(assert (x246 x2541))
(assert (x246 x851))
(assert (not (x2367 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (x246 x655))
(assert (x246 x755))
(assert (x246 x1157))
(assert (x246 x448))
(assert (x246 x2279))
(assert (x246 x1419))
(assert (=> (<= x1712 10000) (= (x1945 x1712) 0)))
(assert (not (x2367 (x3027 x1269 x2380))))
(assert (= 1 (x1087 (x785 64 x257 1))))
(assert (= x554 (x24 (x2947 x2972 x650 x697 x554 x2034))))
(assert (x246 x559))
(assert (x246 x272))
(assert (= (and x1666 (not x1295)) x2263))
(assert (x246 x3156))
(assert (= 0 (x1945 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (=> (>= 10000 x862) (= (x1945 x862) 0)))
(assert (= (=> (and (or (and (= 0 x1063) (not x808)) x808) (= (= x1063 0) x808)) x252) x2105))
(assert (= (x1945 2065879269376) 0))
(assert (x246 x440))
(assert (x246 x2414))
(assert (x246 x2612))
(assert (= x2432 (x1087 (x588 x2088 x2756 x2432 x1993 x335 x2415))))
(assert (x246 x1261))
(assert (x246 x3136))
(assert (< 10000 (x3027 x1375 x846)))
(assert (x246 x722))
(assert (= (x1087 (x2947 x2104 x2281 x2026 x1736 x2476)) x2026))
(assert (=> (<= x2365 10000) (= 0 (x1945 x2365))))
(assert (= false x2455))
(assert (= (x175 (x2947 x2151 x406 x1887 x1559 x865)) x2151))
(assert (= (x1945 (x785 x2151 x513 x433)) (x785 x2151 x513 x433)))
(assert (x246 x383))
(assert (x2367 18446744073709551613))
(assert (x246 x1823))
(assert (=> (>= 10000 x3090) (= 0 (x1945 x3090))))
(assert (x3077 x282))
(assert (x246 x456))
(assert (x246 x1582))
(assert (=> (<= x2710 10000) (= (x1945 x2710) 0)))
(assert (= x414 (x1087 (x2322 x2826 x1140 x414 x2262))))
(assert (= (x1945 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (=> (>= 10000 x509) (= 0 (x1945 x509))))
(assert (= (x228 (x785 x1375 x2837 x2885)) x2837))
(assert (x246 x1126))
(assert (x246 x2594))
(assert (= (x785 x2669 x2862 x1788) (x1945 (x785 x2669 x2862 x1788))))
(assert (= (x1945 (x3027 x1206 x1753)) (x3027 x1206 x1753)))
(assert (x246 x796))
(assert (x246 x358))
(assert (= (x175 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x1375))
(assert (x246 x2023))
(assert (=> (<= x1545 10000) (= (x1945 x1545) 0)))
(assert (x246 x877))
(assert (=> (>= 10000 x2790) (= 0 (x1945 x2790))))
(assert (x246 x2250))
(assert (x246 x2507))
(assert (not (x2367 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573))))
(assert (x246 x626))
(assert (x246 x2538))
(assert (x246 x2694))
(assert (x1630 x2405))
(assert (> (x2947 x2972 x650 x697 x554 x2034) 10000))
(assert (= (x1480 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) x41))
(assert (x246 x1439))
(assert (x246 x2440))
(assert (x246 x78))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (= x803 (x2781 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036))))
(assert (x246 x2055))
(assert (x246 x2421))
(assert (x246 x3080))
(assert (= x2281 (x228 (x2947 x2104 x2281 x2026 x1736 x2476))))
(assert (x246 x405))
(assert (= (x1087 (x785 x2669 x2862 x1788)) x1788))
(assert (= x2454 (x1087 (x785 x2088 x112 x2454))))
(assert (=> (>= 10000 x3037) (= (x1945 x3037) 0)))
(assert (= (x2781 (x588 x2104 x557 x1544 x1686 x1756 x2868)) x1756))
(assert (x246 x860))
(assert (x246 x1199))
(assert (= (x1480 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x2271))
(assert (< (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x2322 x2826 x1140 x414 x2262) 10000))
(assert (x246 x1580))
(assert (x1630 x2487))
(assert (x246 x112))
(assert (x2367 1461501637330902918203684832716283019655932542975))
(assert (< 10000 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042)))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639832))
(assert (x246 x2353))
(assert (x246 x1680))
(assert (x1105 x32))
(assert (x246 x179))
(assert (x246 x2410))
(assert (> (x3027 x1269 x2380) 10000))
(assert (x246 x341))
(assert (= x2315 (=> (and (= (x2893 (+ x2381 32)) x219) (= x1814 (x2893 (+ x663 32))) (= (x2736 x663) x356) (= (< 0 x356) x987) (= (x2736 x2000) x1243)) (and (=> (and (and (= 0 x2122) (= x1814 x2793) (= x219 x2521)) (not x987)) x3035) (=> (and (and (= (x2893 (+ x219 32)) x43) (= x1576 (x2893 (+ x1814 32))) (= (< 1 x356) x1479) (= x2575 (x2736 x1814))) x987) (and (=> (and x1479 (and (= (x2893 (+ 32 x1576)) x143) (= (< 2 x356) x1295) (= (x2893 (+ x43 32)) x2062) (= (x2958 x1576) x2891))) (and (=> (and (and (= x1419 (x2462 x143)) (= x983 (x2893 (+ 32 x143))) (= x1250 (x2893 (+ 32 x2062))) (= (< 3 x356) x93)) x1295) (and (=> (and (and (= x2122 3) (= x2521 x1250) (= x983 x2793)) (not x93)) x3035) (=> x93 x1681))) (=> (and (and (= x2122 2) (= x2521 x2062) (= x143 x2793)) (not x1295)) x3035))) (=> (and (not x1479) (and (= x2521 x43) (= 1 x2122) (= x2793 x1576))) x3035)))))))
(assert (=> (>= 10000 x2353) (= (x1945 x2353) 0)))
(assert (x246 x3088))
(assert (= (=> (and (or (and x2176 (and (<= x2038 4294967295) (= 1 x3161) (<= 32 x2038))) (and (not x2176) (= x3161 x1900))) (and (= x616 (x1300 1461501637330902918203684832716283019655932542975 x2697)) (= x2813 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= (x2893 (+ 4 x1015)) x2993) (<= 32 x2038) (= x2176 (< 0 x1900)) (= x1538 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x1207 (x2893 (+ x2993 32))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2038))) x2166) x252))
(assert (=> (>= 10000 x2799) (= 0 (x1945 x2799))))
(assert (= x182 (x1087 (x2947 x1269 x2280 x182 x2371 x1302))))
(assert (x246 x2061))
(assert (x246 x1500))
(assert (x246 x43))
(assert (x246 x35))
(assert (x246 x1995))
(assert (= x2900 (and x2766 x707)))
(assert (= x1173 (x175 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616))))
(assert (= (x3027 x2151 x1515) (x1945 (x3027 x2151 x1515))))
(assert (x246 x1474))
(assert (x246 x813))
(assert (x246 x594))
(assert (x246 x88))
(assert (x246 x1386))
(assert (= (x228 (x2322 x3129 x138 x479 x789)) x138))
(assert (= (and x2429 x2567) x67))
(assert (= x668 (and x1850 (not x2846))))
(assert (x246 x1872))
(assert (= (and x400 (not x1314)) x1415))
(assert (=> (<= x996 10000) (= (x1945 x996) 0)))
(assert (x246 x1365))
(assert (= (or x152 x767) x680))
(assert (x246 x1478))
(assert (x246 x2228))
(assert (x246 x1736))
(assert (> (x588 x1206 x1093 x2264 x323 x2790 x796) 10000))
(assert (x246 x1858))
(assert (= x2183 (or x51 x2708 x1989 x1577 x2895)))
(assert (=> (<= x2543 10000) (= (x1945 x2543) 0)))
(assert (=> (>= 10000 x2616) (= (x1945 x2616) 0)))
(assert (=> (<= x957 10000) (= 0 (x1945 x957))))
(assert (x246 x1626))
(assert (x246 x2690))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x246 x2090))
(assert (x246 x1705))
(assert (=> (>= 10000 x149) (= (x1945 x149) 0)))
(assert (x246 x789))
(assert (=> (<= x111 10000) (= (x1945 x111) 0)))
(assert (x246 x1369))
(assert (=> (<= x1338 10000) (= 0 (x1945 x1338))))
(assert (x246 x2247))
(assert (= (x1087 (x2322 x2151 x1017 x847 x2834)) x847))
(assert (x246 x2794))
(assert (= (and (not x2128) x401) x2593))
(assert (x246 x3108))
(assert (=> (<= x1711 10000) (= 0 (x1945 x1711))))
(assert (x246 x1131))
(assert (x246 x1514))
(assert (=> (<= x2940 10000) (= (x1945 x2940) 0)))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x246 x2223))
(assert (x246 x2373))
(assert (x246 x2660))
(assert (= (and x2266 (not x1718)) x313))
(assert (= (x175 (x2947 x1375 x2681 x2625 x755 x1882)) x1375))
(assert (> (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421) 10000))
(assert (x246 x2008))
(assert (= (x2689 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)) x849))
(assert (x246 x1746))
(assert (= (=> (and (= (< 0 x547) x787) (= x547 (x1648 x1139)) (= x1139 (x1648 x1424))) (and (=> x787 x1869) (=> (and (not x787) (= x2696 x1048)) x1958))) x1185))
(assert (x246 x2189))
(assert (x246 x670))
(assert (= x2104 (x175 (x785 x2104 x2704 x660))))
(assert (x246 x1699))
(assert (> (x785 x1929 x2986 x38) 10000))
(assert (= x927 (=> (and (= x28 (x1149 (- x2871 x1565))) (= x1475 (<= x1206 224)) (<= x1565 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1209 (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1352)) (<= x1565 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x2871 1) (= x1352 (x2893 (+ 31 x2507))) (= x1722 (x2893 (+ x1565 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1565) (= x2631 (x2893 (+ x2507 x2228))) (= (x1149 (- x28 32)) x2040) (< x1565 x2871) (= x2871 (x2893 (+ x2228 x1209))) (= (x1395 x1565) x1206)) (and x1475 (=> (and (= (x1395 x2073) x704) (= x1119 (x1395 x1429)) (= (x1299 0) x1037) (= (x2947 x1206 x22 x141 x1119 x924) x2338) (= x1442 (x1395 x2095)) (= (x588 x1206 x1093 x2264 x323 x2790 x796) x2268) (= x291 (x1395 x2615)) (= (x1096 x1675) x140) (= x1093 (x1395 x1722)) (= (x1395 x2804) x342) (= (x1395 x1722) x1852) (= (x1395 x1722) x1753) (= (x1096 x985) x1675) (= (not (< 1 x140)) x177) (= (x1395 x2164) x2790) (= x2164 (x2893 (+ 96 x1722))) (= x2073 (x2893 (+ x1722 64))) (= (x785 x1206 x1817 x1899) x2197) (= x2580 (x2893 (+ 64 x1722))) (= (x1395 x2488) x908) (= x22 (x1395 x1722)) (= x2773 (x1395 x663)) (= x2421 (x2893 (+ 64 x1722))) (= x2095 (x2893 (+ 192 x1722))) (= (x2893 (+ 32 x663)) x1766) (= x1738 (x100 x1206 x110 x342 x704 x2990 x1540 x447)) (= x1817 (x1395 x1722)) (= (x2893 (+ 96 x1722)) x2222) (= x2043 (x2893 (+ x1722 96))) (= (x1395 x910) x447) (= (x1395 x1722) x1069) (= x1429 (x2893 (+ 64 x1722))) (= (x2322 x1206 x1069 x1651 x2544) x227) (= x924 (x1395 x2222)) (= (x1395 x2725) x1651) (= x1654 (x2893 (+ 32 x1722))) (= (x1395 x2421) x2544) (= x1032 (x2893 (+ 32 x1722))) (= x110 (x1395 x1722)) (= x2440 (x2893 (+ x1722 128))) (= (x1395 x568) x1899) (= x2990 (x1395 x1293)) (= x568 (x2893 (+ 32 x1722))) (= (x1395 x2580) x323) (= (x1395 x2440) x796) (= (x2893 (+ 64 x1722)) x3122) (<= 1 x2773) (= (x1395 x1032) x141) (= (ite (= x1206 0) x1037 (ite (>= 32 x1206) x327 (ite (>= 64 x1206) x2197 (ite (<= x1206 96) x227 (ite (>= 128 x1206) x2338 (ite (<= x1206 160) x2268 (ite (>= 192 x1206) x1738 (ite (<= x1206 224) x2296 x1400)))))))) x1175) (= x2804 (x2893 (+ x1722 32))) (= x910 (x2893 (+ 160 x1722))) (= x2615 (x2893 (+ x1722 128))) (= x843 (x2893 (+ 32 x1722))) (= (x1395 x1654) x2438) (= x2264 (x1395 x843)) (= x1142 (x1395 x3122)) (= x631 (x2893 (+ 128 x1722))) (= (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442) x2296) (= (x2893 (+ 32 x1722)) x2725) (= (x3027 x1206 x1753) x327) (= x2488 (x2893 (+ 160 x1722))) (= x993 (x1395 x2043)) (= x1293 (x2893 (+ 96 x1722))) (= x1540 (x1395 x631))) (and (=> (= x2871 x2381) x2315) x177))))))
(assert (= (x175 (x785 x1375 x2837 x2885)) x1375))
(assert (x246 x741))
(assert (x246 x2095))
(assert (x246 x2926))
(assert (x246 x2336))
(assert (x246 x2903))
(assert (> (x1299 0) 10000))
(assert (= x1949 (=> (and (= x671 (+ x1828 32)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x584) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2867)) (> x2867 x584)) (and (> x584 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2867)))) (= (x2893 (+ x1122 32)) x839) (<= x1746 18446744073709551615) (>= x1639 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1122) (= x1746 (x2032 x1650)) (= x2867 (x2893 (+ 32 x1650))) (= x1639 (x2893 (+ (mod (+ 32 x1997) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1122))) (= x1650 (x2893 (+ x1638 36))) (= x2849 (< 0 x1746)) (or (and (<= x2583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1638)) (and (> x2583 x1638) (= (<= x1638 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2583)))) (= x2090 (* 160 x1746)) (= x584 (x1149 (- x212 x2090))) (= x1638 (x2032 196)) (<= x1122 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1997 (* 32 x1746)) (or (<= x1638 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1638)) (< x1122 x1639) (<= x1122 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (not x2849) (= x431 x1639)) x92) (=> x2849 x850)))))
(assert (x1630 x2033))
(assert (x246 x704))
(assert (x246 x1515))
(assert (x246 x22))
(assert (=> (<= x592 10000) (= (x1945 x592) 0)))
(assert (=> (>= 10000 x1885) (= 0 (x1945 x1885))))
(assert (x246 x2026))
(assert (= (or x1117 x945) x1028))
(assert (x246 x886))
(assert (x246 x2285))
(assert (x246 x887))
(assert (x246 x1302))
(assert (x2367 18446746139588821027))
(assert (= x2140 (or x16 x2263 x372 x582 x1052)))
(assert (not (x2367 (x2947 x2104 x2281 x2026 x1736 x2476))))
(assert (x246 x1673))
(assert (x246 x1311))
(assert (=> (<= x2476 10000) (= 0 (x1945 x2476))))
(assert (x246 x2172))
(assert (= x2192 (x24 (x2947 x2669 x709 x3005 x2192 x672))))
(assert (x246 x2332))
(assert (< (x785 x2104 x2704 x660) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x827))
(assert (= (x1945 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)) (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)))
(assert (= x2538 (x24 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (= (x1945 (x785 x2826 x2896 x1019)) (x785 x2826 x2896 x1019)))
(assert (< (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2632))
(assert (x246 x1600))
(assert (x246 x775))
(assert (x246 x3015))
(assert (= (x1087 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151)) x1906))
(assert (x246 x1143))
(assert (=> (>= 10000 x1478) (= 0 (x1945 x1478))))
(assert (x246 x2471))
(assert (= (x3016 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x1711))
(assert (x246 x2310))
(assert (x246 x1196))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (< 10000 (x2322 x1929 x1267 x756 x2221)))
(assert (= x404 (and x753 x146)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2826 x470 x535 x505 x1294 x389)))
(assert (= (x24 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) x624))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x1375 x2837 x2885)))
(assert (> (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533) 10000))
(assert (x246 x2749))
(assert (x246 x1633))
(assert (= x3118 (x1087 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (= (and x62 x2849) x488))
(assert (< 10000 (x2322 x2326 x2242 x1297 x194)))
(assert (=> (<= x2333 10000) (= (x1945 x2333) 0)))
(assert (x246 x1856))
(assert (x246 x243))
(assert (x3077 x2487))
(assert (x246 x875))
(assert (x246 x2488))
(assert (=> (>= 10000 x194) (= (x1945 x194) 0)))
(assert (= x1973 (x1087 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286))))
(assert (x246 x1325))
(assert (x246 x1315))
(assert (< (x2322 x1173 x848 x3096 x1507) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2838))
(assert (x246 x2286))
(assert (= x3094 (=> (and (= x184 (x2206 x1606)) (= x1526 (> x184 0)) (= x1606 (x2206 x985))) (and (=> (and (not x1526) (= x2381 x1565)) x2315) (=> (and x1526 (and (= (x2893 (+ 32 x2003)) x2228) (= x841 (x2893 (+ 32 x1628))) (= x1332 (x1300 1461501637330902918203684832716283019655932542975 x815)) (= x2003 (x2893 (+ x2711 128))) (= (x2893 (+ x2711 32)) x2901) (= x2247 (x2206 x2732)) (= x1461 (x2893 (+ 32 x2732))) (= x1325 (x2893 (+ x2116 32))) (= x815 (x2206 x820)) (= (x2893 (+ 32 x820)) x2732) (= (x2206 x1461) x2603) (= (x2206 x841) x820) (= x2711 (x2893 (+ 32 x1565))) (= (x2206 x985) x1628) (>= x109 1) (= x2116 (x2893 (+ x2901 32))) (= (x2206 x1628) x109) (= x2507 (x652 x2603)) (= x3086 (> x2507 0)) (= (x2893 (+ x2603 32)) x2776))) (and (=> (not x3086) x927) (=> (and (and (= (> x2507 32) x395) (= (x2321 x2776) x838)) x3086) (and (=> (and (and (= (x2893 (+ x2776 32)) x1129) (= x1071 (x2893 (+ x2228 32))) (= x1522 (x1763 x1129)) (= x423 (< 64 x2507))) x395) (and (=> (and x423 (and (= (x260 x440) x426) (= (x2893 (+ x2228 64)) x1501) (= x867 (> x2507 96)) (= x440 (x2893 (+ x2776 64))))) (and (=> x867 x2082) (=> (not x867) x927))) (=> (not x423) x927))) (=> (not x395) x927)))))))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x1206 x1069 x1651 x2544)))
(assert (x246 x1193))
(assert (=> (>= 10000 x1573) (= (x1945 x1573) 0)))
(assert (x246 x764))
(assert (= (x3027 x2326 x736) (x1945 (x3027 x2326 x736))))
(assert (x246 x718))
(assert (x246 x2248))
(assert (= (or x1216 x2297) x1982))
(assert (x246 x1332))
(assert (not (x2367 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078))))
(assert (x246 x1664))
(assert (x246 x496))
(assert (x246 x285))
(assert (=> (>= 10000 x14) (= 0 (x1945 x14))))
(assert (= x1064 (=> (and (= (x1321 x217) x396) (<= 1 x396) (= (x1321 x217) x956) (= (< 0 x956) x10) (= (x1321 x1815) x116)) (and (=> (and (= x46 x2653) (not x10)) x2717) (=> x10 x750)))))
(assert (x246 x3121))
(assert (= x1178 (x2781 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (= x2544 (x24 (x2322 x1206 x1069 x1651 x2544))))
(assert (= x38 (x1087 (x785 x1929 x2986 x38))))
(assert (x3077 x822))
(assert (x246 x2643))
(assert (< (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1630 x1352))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x246 x1637))
(assert (= (=> (and (= x2933 1) (= 1 x353) (= 0 x873)) x2938) x531))
(assert (= (x1945 (x588 x2972 x2139 x2300 x295 x2097 x3048)) (x588 x2972 x2139 x2300 x295 x2097 x3048)))
(assert (x246 x323))
(assert (= x2415 (x3016 (x588 x2088 x2756 x2432 x1993 x335 x2415))))
(assert (x246 x1639))
(assert (< (x2322 x2104 x471 x188 x1450) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2720))
(assert (x246 x2097))
(assert (= (x228 (x3027 x2326 x736)) x736))
(assert (x246 x1675))
(assert (=> (<= x1238 10000) (= (x1945 x1238) 0)))
(assert (x246 x1901))
(assert (= x1614 (x3016 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786))))
(assert (= (x785 x1269 x383 x2876) (x1945 (x785 x1269 x383 x2876))))
(assert (x246 x2395))
(assert (x246 x1766))
(assert (x246 x1256))
(assert (x246 x244))
(assert (< 10000 (x588 x2326 x218 x895 x226 x1240 x2010)))
(assert (x246 x782))
(assert (x246 x768))
(assert (= (and x277 x1839) x1731))
(assert (= x458 (x228 (x3027 x2826 x458))))
(assert (x246 x1536))
(assert (x246 x1602))
(assert (x246 x893))
(assert (x246 x2235))
(assert (x246 x2434))
(assert (= (x175 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)) x2826))
(assert (x246 x462))
(assert (x246 x2876))
(assert (x1105 x2841))
(assert (x246 x589))
(assert (= (and x2950 (not x1519)) x2017))
(assert (x246 x2862))
(assert (= (x1945 111717504842162250273123531270270194031611963357183166590777697365354585522176) 0))
(assert (x246 x1926))
(assert (x246 x518))
(assert (= x2826 (x175 (x2322 x2826 x1140 x414 x2262))))
(assert (=> (<= x2946 10000) (= (x1945 x2946) 0)))
(assert (x246 x595))
(assert (= x381 (or x2810 x2752)))
(assert (= x1269 (x175 (x3027 x1269 x2380))))
(assert (x246 x1119))
(assert (x246 x1068))
(assert (x246 x1778))
(assert (x246 x2907))
(assert (x246 x2091))
(assert (x246 x102))
(assert (=> (>= 10000 x3157) (= (x1945 x3157) 0)))
(assert (= x1119 (x24 (x2947 x1206 x22 x141 x1119 x924))))
(assert (x246 x2773))
(assert (=> (>= 10000 x2834) (= 0 (x1945 x2834))))
(assert (x246 x125))
(assert (x246 x1168))
(assert (= (and x2516 (not x2147)) x1307))
(assert (= (and x2341 x2173) x171))
(assert (x246 x308))
(assert (x246 x2616))
(assert (x246 x219))
(assert (x246 x2056))
(assert (x246 x296))
(assert (= (or x488 x982) x1839))
(assert (= (x3016 (x588 x3129 x3083 x1099 x1696 x1349 x388)) x388))
(assert (= x2917 (and x3146 x148)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x2088 x2687 x2333 x1472)))
(assert (x246 x829))
(assert (x246 x1575))
(assert (=> (>= 10000 x1178) (= 0 (x1945 x1178))))
(assert (x246 x1122))
(assert (x246 x2884))
(assert (= 0 (x1945 37664329658542632380461339884011895550187483938955784695590509376205521682432)))
(assert (= (x228 (x3027 x1173 x1841)) x1841))
(assert (= (=> (= x2509 (< 0 x2555)) (and (=> x2509 x274) (=> (and (not x2509) (= x1844 x159)) x2599))) x2154))
(assert (= (x443 x1644 248) (div x1644 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x246 x951))
(assert (=> (<= x2650 10000) (= (x1945 x2650) 0)))
(assert (= (and x374 x2519) x950))
(assert (x246 x1223))
(assert (= (x228 (x785 64 x1199 1)) x1199))
(assert (=> (>= 10000 x1884) (= 0 (x1945 x1884))))
(assert (x246 x2184))
(assert (x246 x1357))
(assert (x246 x786))
(assert (=> (>= 10000 x2986) (= (x1945 x2986) 0)))
(assert (=> (>= 10000 x1887) (= 0 (x1945 x1887))))
(assert (= x1780 (x2689 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (not (x2367 (x2322 x2669 x1741 x1726 x2710))))
(assert (= (x1480 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) x2616))
(assert (x246 x1251))
(assert (= (x1945 (x785 64 x257 1)) (x785 64 x257 1)))
(assert (x246 x1822))
(assert (=> (>= 10000 x1830) (= 0 (x1945 x1830))))
(assert (x246 x1075))
(assert (=> (<= x672 10000) (= 0 (x1945 x672))))
(assert (= (x1945 18446744073709551167) 0))
(assert (=> (>= 10000 x806) (= 0 (x1945 x806))))
(assert (=> (>= 10000 x1447) (= (x1945 x1447) 0)))
(assert (= x3129 (x175 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (x246 x1443))
(assert (x246 x891))
(assert (= x2859 (and x1666 x1295)))
(assert (x246 x714))
(assert (= x1741 (x228 (x2322 x2669 x1741 x1726 x2710))))
(assert (x246 x268))
(assert (= (x228 (x588 x1173 x2987 x1228 x2195 x3018 x2061)) x2987))
(assert (=> (>= 10000 x1540) (= 0 (x1945 x1540))))
(assert (x246 x1493))
(assert (x1105 x461))
(assert (x246 x2050))
(assert (x246 x546))
(assert (= (x2781 (x588 x1929 x300 x1260 x86 x3024 x627)) x3024))
(assert (> (x100 x1375 x2118 x810 x2951 x706 x1631 x1573) 10000))
(assert (x246 x1805))
(assert (x246 x2416))
(assert (x246 x1426))
(assert (x246 x1338))
(assert (=> (<= x1507 10000) (= (x1945 x1507) 0)))
(assert (x246 x936))
(assert (= 0 (x1945 1461501637330902918203684832716283019655932542975)))
(assert (x246 x2012))
(assert (x246 x2142))
(assert (= (x2781 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)) x2243))
(assert (=> (<= x3112 10000) (= 0 (x1945 x3112))))
(assert (= (x1945 (x2322 x1929 x1267 x756 x2221)) (x2322 x1929 x1267 x756 x2221)))
(assert (x246 x343))
(assert (x246 x848))
(assert (= x557 (x228 (x588 x2104 x557 x1544 x1686 x1756 x2868))))
(assert (= x99 (or (and x2519 (not x374)) (and (not x2887) x950) (and (not x821) x2917) (and (not x148) x3146) x115)))
(assert (x246 x3045))
(assert (x246 x468))
(assert (x246 x1653))
(assert (= (x228 (x2947 x1929 x2404 x2650 x675 x1587)) x2404))
(assert (x246 x2042))
(assert (x2367 4294967295))
(assert (= x705 (and x3095 (not x1448))))
(assert (x246 x150))
(assert (x246 x2521))
(assert (x246 x898))
(assert (x246 x1167))
(assert (x246 x583))
(assert (x246 x2083))
(assert (= (x1087 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)) x2472))
(assert (x246 x2851))
(assert (x246 x1009))
(assert (x246 x1810))
(assert (= (and x1169 x2721) x2460))
(assert (=> (<= x2777 10000) (= (x1945 x2777) 0)))
(assert (x246 x329))
(assert (=> (<= x529 10000) (= (x1945 x529) 0)))
(assert (x246 x391))
(assert (= x1349 (x2781 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (x246 x1455))
(assert (x2367 18446744073709551615))
(assert (> (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078) 10000))
(assert (x246 x2005))
(assert (=> (>= 10000 x38) (= 0 (x1945 x38))))
(assert (x246 x1341))
(assert (x246 x842))
(assert (= (x175 (x2947 x1269 x2280 x182 x2371 x1302)) x1269))
(assert (x246 x2679))
(assert (not (x2367 (x3027 x2088 x1975))))
(assert (x246 x585))
(assert (=> (>= 10000 x1106) (= 0 (x1945 x1106))))
(assert (> (x2947 x1375 x2681 x2625 x755 x1882) 10000))
(assert (=> (>= 10000 x1614) (= (x1945 x1614) 0)))
(assert (= (x2781 (x2947 x2025 x1168 x77 x1118 x234)) x234))
(assert (x246 x484))
(assert (= (x1087 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x810))
(assert (x246 x1059))
(assert (x246 x2858))
(assert (x246 x72))
(assert (= x2826 (x175 (x2947 x2826 x1545 x293 x2035 x2941))))
(assert (= x1370 (and x1567 x2176)))
(assert (x246 x163))
(assert (x3077 x1652))
(assert (> (x588 x1929 x300 x1260 x86 x3024 x627) 10000))
(assert (x246 x2650))
(assert (= (and x3111 (not x1305)) x146))
(assert (= (x2689 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x1193))
(assert (x246 x1599))
(assert (x246 x889))
(assert (x246 x83))
(assert (= x2761 (and x1718 x2266)))
(assert (= x2964 (and x1519 x2950)))
(assert (= (and (not x2511) x942) x606))
(assert (= (x175 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) x1269))
(assert (= (x2947 x2151 x406 x1887 x1559 x865) (x1945 (x2947 x2151 x406 x1887 x1559 x865))))
(assert (= (=> (and (= x2930 (x2893 (+ x1674 64))) (= x2721 (> x2720 0)) (= x2573 (x2893 (+ x1790 32))) (= x2825 (x2893 (+ 32 x1674))) (= (x2893 (+ x1844 4)) x1674) (= (x2893 (+ x2930 32)) x2471) (= (x2119 x1790) x2720)) (and (=> x2721 x193) (=> (and (and (= 0 x405) (= x2471 x1802) (= x1831 x2573)) (not x2721)) x1649))) x2599))
(assert (x246 x2378))
(assert (= x745 (and (not x1322) x816)))
(assert (=> (<= x2454 10000) (= 0 (x1945 x2454))))
(assert (x246 x3138))
(assert (= (and x2566 x2343) x500))
(assert (x246 x2652))
(assert (x246 x1229))
(assert (x246 x1721))
(assert (=> (>= 10000 x1222) (= (x1945 x1222) 0)))
(assert (< (x588 x1206 x1093 x2264 x323 x2790 x796) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x462 (x228 (x588 x2669 x462 x1244 x1460 x3093 x741))))
(assert (x246 x2351))
(assert (x246 x6))
(assert (x246 x1063))
(assert (x246 x2763))
(assert (x246 x2673))
(assert (= x3129 (x175 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078))))
(assert (x246 x2527))
(assert (x246 x8))
(assert (x246 x1570))
(assert (= x2923 (x2781 (x2947 x3129 x1966 x1100 x229 x2923))))
(assert (x246 x2229))
(assert (= (and x1953 x3041) x2265))
(assert (= x800 (x2781 (x2947 x1173 x1431 x1239 x996 x800))))
(assert (x246 x436))
(assert (x246 x905))
(assert (= x1753 (x228 (x3027 x1206 x1753))))
(assert (x246 x2512))
(assert (= (x3016 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87)) x2316))
(assert (= x2438 (x1087 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442))))
(assert (x246 x378))
(assert (= x44 (x2781 (x2947 x2088 x1809 x2063 x264 x44))))
(assert (=> (<= x2332 10000) (= (x1945 x2332) 0)))
(assert (x246 x1963))
(assert (= (x228 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87)) x1223))
(assert (x246 x2226))
(assert (x246 x2967))
(assert (x246 x1784))
(assert (x246 x1114))
(assert (= x3036 (x1480 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036))))
(assert (= (and x1387 x1624) x1953))
(assert (= x1173 (x175 (x3027 x1173 x1841))))
(assert (x246 x2532))
(assert (x246 x1020))
(assert (x246 x2145))
(assert (x246 x552))
(assert (x246 x1986))
(assert (=> (<= x2572 10000) (= 0 (x1945 x2572))))
(assert (= (x228 (x2322 x1929 x1267 x756 x2221)) x1267))
(assert (= (x3016 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x1631))
(assert (=> (<= x589 10000) (= 0 (x1945 x589))))
(assert (not (x2367 (x100 x2088 x2328 x2612 x957 x965 x504 x1826))))
(assert (x2367 2065879269284))
(assert (x246 x2417))
(assert (x246 x422))
(assert (x246 x1309))
(assert (= (and (not x987) x2368) x372))
(assert (= (and (not x2208) x2761) x1495))
(assert (x246 x3070))
(assert (x246 x1140))
(assert (x246 x2369))
(assert (= (x175 (x588 x1929 x300 x1260 x86 x3024 x627)) x1929))
(assert (= (x24 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x2951))
(assert (x246 x2295))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x2025 x2235 x1238)))
(assert (x3077 x960))
(assert (x246 x1686))
(assert (x246 x216))
(assert (x246 x2865))
(assert (< (x2322 x1269 x537 x1389 x529) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1164))
(assert (x246 x103))
(assert (= x2826 (x175 (x588 x2826 x470 x535 x505 x1294 x389))))
(assert (=> (<= x182 10000) (= (x1945 x182) 0)))
(assert (= (=> (= x1371 x29) x2563) x2588))
(assert (= x2092 (x1087 (x785 x2326 x2705 x2092))))
(assert (x246 x1533))
(assert (< 10000 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)))
(assert (x246 x1748))
(assert (x246 x2555))
(assert (x246 x2151))
(assert (x246 x2003))
(assert (x246 x1631))
(assert (= x1966 (x228 (x2947 x3129 x1966 x1100 x229 x2923))))
(assert (x246 x81))
(assert (x246 x711))
(assert (= (and x2846 x1850) x1979))
(assert (x246 x2302))
(assert (x246 x1255))
(assert (=> (>= 10000 x2235) (= 0 (x1945 x2235))))
(assert (x246 x2854))
(assert (= (and x2020 x315) x1532))
(assert (x246 x1241))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2151 x361 x2336 x2369 x989 x377)))
(assert (> (x3027 x2025 x2967) 10000))
(assert (x246 x1050))
(assert (x246 x1344))
(assert (= (x2322 x2151 x1017 x847 x2834) (x1945 (x2322 x2151 x1017 x847 x2834))))
(assert (= x2403 (=> (and (= (x2475 x860) x2151) (<= x860 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* 32 x1947) x2966) (= x2426 x284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x860) (= x2691 (x2893 (+ x860 32))) (= x284 (x2893 (+ x678 x2978))) (<= 1 x284) (= (x2893 (+ x402 x2966)) x131) (>= x2426 1) (< x860 x2426) (= x131 x1212) (= x1947 x2537) (= x1569 (x1149 (- x2426 x860))) (= x1233 (>= 224 x2151)) (<= x860 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (* x1947 32) x2978) (= (x1149 (- x1569 32)) x1273) (>= 4 x1947)) (and (=> (and (= x1868 (< 0 x2046)) (= (x2475 x3066) x2295) (= x1893 (x2475 x2783)) (= x847 (x2475 x1948)) (= x2046 (x2475 x2948)) (= (x588 x2151 x361 x2336 x2369 x989 x377) x1326) (= (x2475 x2691) x1515) (= x1887 (x2475 x64)) (= (x2475 x1310) x3036) (= (x2475 x613) x433) (= (x2475 x2691) x1017) (= (x2475 x877) x1494) (= x1625 (x3027 x2151 x1515)) (= (ite (= x2151 0) x2832 (ite (<= x2151 32) x1625 (ite (<= x2151 64) x3110 (ite (>= 96 x2151) x1368 (ite (<= x2151 128) x339 (ite (>= 160 x2151) x1326 (ite (<= x2151 192) x980 (ite (>= 224 x2151) x2127 x2304)))))))) x2827) (= x613 (x2893 (+ x2691 32))) (= x1795 (x2893 (+ 96 x2691))) (= (x2893 (+ 128 x2691)) x2783) (= x2520 (x2893 (+ 32 x2691))) (= (x2475 x2699) x2834) (= (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193) x2127) (= (x2893 (+ 32 x2691)) x64) (= (x2893 (+ 160 x2691)) x1310) (= x1723 (x2893 (+ x2691 192))) (= x2832 (x1299 0)) (= x2336 (x2475 x2520)) (= x377 (x2475 x2416)) (= (x2947 x2151 x406 x1887 x1559 x865) x339) (= (x2893 (+ 64 x2691)) x1075) (= (x2475 x2691) x1720) (= (x2475 x1095) x803) (= (x2893 (+ 32 x2691)) x3066) (= x1948 (x2893 (+ x2691 32))) (= (x2475 x549) x2417) (= (x2475 x766) x1559) (= x35 (x2475 x1430)) (= (x2475 x533) x2369) (= (x2475 x2691) x361) (= x779 (x2893 (+ 32 x2426))) (= (x2475 x1795) x2835) (= x1430 (x2893 (+ x2691 32))) (= x406 (x2475 x2691)) (= (x2893 (+ x2691 64)) x877) (= x549 (x2893 (+ x2691 128))) (= (x2893 (+ 128 x2691)) x2416) (= x533 (x2893 (+ x2691 64))) (= x1368 (x2322 x2151 x1017 x847 x2834)) (= x1095 (x2893 (+ 96 x2691))) (= (x100 x2151 x2111 x2295 x894 x803 x1893 x3036) x980) (= x1193 (x2475 x1723)) (= x1492 (x2893 (+ 32 x2948))) (= (x2475 x1981) x2271) (= (x2893 (+ 96 x2691)) x1288) (= x2111 (x2475 x2691)) (= (x785 x2151 x513 x433) x3110) (= x865 (x2475 x1288)) (= (x2475 x1408) x989) (= x513 (x2475 x2691)) (= (x2893 (+ 160 x2691)) x1981) (= x766 (x2893 (+ x2691 64))) (= x2699 (x2893 (+ 64 x2691))) (= (x2893 (+ 96 x2691)) x1408) (= (x2475 x1075) x894)) (and (=> (and (and (= (x2893 (+ 32 x779)) x1995) (= x579 (x2475 x1492)) (= x315 (> x2046 1)) (= (x2893 (+ 32 x1492)) x367)) x1868) (and (=> (and x315 (and (= (x2893 (+ x367 32)) x2313) (= x1684 (x2893 (+ x1995 32))) (= x89 (x576 x367)) (= x1248 (< 2 x2046)))) (and (=> (and (not x1248) (and (= x1566 x1684) (= x2313 x1520) (= x2677 2))) x580) (=> (and (and (= x3050 (x2893 (+ x2313 32))) (= (> x2046 3) x2067) (= x2553 (x2531 x2313)) (= (x2893 (+ x1684 32)) x497)) x1248) (and (=> x2067 x2072) (=> (and (not x2067) (and (= x1566 x497) (= x2677 3) (= x3050 x1520))) x580))))) (=> (and (not x315) (and (= x367 x1520) (= x1995 x1566) (= x2677 1))) x580))) (=> (and (not x1868) (and (= x1566 x779) (= x1520 x1492) (= 0 x2677))) x580))) x1233))))
(assert (x246 x1032))
(assert (x246 x2325))
(assert (=> (>= 10000 x851) (= 0 (x1945 x851))))
(assert (= x1246 (x1087 (x2322 x2025 x2084 x1246 x336))))
(assert (not (x2367 (x785 64 x257 1))))
(assert (= x959 (=> (and (= x350 (not (< 4 x1947))) (= x506 (x2893 (+ 32 x2569))) (= (x2893 (+ x1331 32)) x2157) (= (x507 x1331) x1592)) (and x350 (=> (and (= x2537 4) (= x2426 x506) (= x1212 x2157)) x2403)))))
(assert (= (and x2964 x1304) x816))
(assert (x1105 x885))
(assert (x246 x280))
(assert (= x1379 (or x1789 x2658 x2716 x762 x879)))
(assert (= (x2781 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042)) x2898))
(assert (x246 x1885))
(assert (= (x175 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595)) x1375))
(assert (x3077 x2422))
(assert (= (x1087 (x2947 x2025 x1168 x77 x1118 x234)) x77))
(assert (x246 x3065))
(assert (=> (<= x1741 10000) (= (x1945 x1741) 0)))
(assert (x246 x993))
(assert (x246 x684))
(assert (x246 x2058))
(assert (x246 x681))
(assert (x246 x2620))
(assert (= (x1087 (x2322 x1929 x1267 x756 x2221)) x756))
(assert (=> (>= 10000 x2831) (= 0 (x1945 x2831))))
(assert (= (x1087 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) x2660))
(assert (= (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208) (x1945 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (x3077 x91))
(assert (x246 x2704))
(assert (=> (<= x1253 10000) (= 0 (x1945 x1253))))
(assert (x246 x1130))
(assert (x246 x2686))
(assert (x246 x2806))
(assert (x246 x2180))
(assert (x246 x2101))
(assert (= (x1945 (x3027 x1375 x846)) (x3027 x1375 x846)))
(assert (x2367 79228162514264337593543950336))
(assert (x3077 x455))
(assert (= x2120 (and x1772 (not x2379))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x2972 x341 x1805)))
(assert (=> (>= 10000 x2078) (= 0 (x1945 x2078))))
(assert (x246 x543))
(assert (= x2151 (x175 (x2322 x2151 x1017 x847 x2834))))
(assert (=> (>= 10000 x102) (= (x1945 x102) 0)))
(assert (x246 x1661))
(assert (= x1786 (x228 (x3027 x2972 x1786))))
(assert (x246 x1656))
(assert (= (and (not x1849) x2665) x1577))
(assert (=> (<= x2025 10000) (= 0 (x1945 x2025))))
(assert (> (x785 x1206 x1817 x1899) 10000))
(assert (=> (<= x874 10000) (= 0 (x1945 x874))))
(assert (x246 x1330))
(assert (= x117 (or x1282 x313)))
(assert (x246 x331))
(assert (x246 x2539))
(assert (= (x3016 (x588 x2151 x361 x2336 x2369 x989 x377)) x377))
(assert (x246 x2113))
(assert (=> (>= 10000 x594) (= (x1945 x594) 0)))
(assert (x246 x1222))
(assert (=> (>= 10000 x706) (= 0 (x1945 x706))))
(assert (x246 x1271))
(assert (not (x2367 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885))))
(assert (x246 x1655))
(assert (x246 x679))
(assert (x246 x812))
(assert (x246 x1996))
(assert (x246 x1962))
(assert (x246 x1520))
(assert (x246 x2825))
(assert (=> (<= x800 10000) (= (x1945 x800) 0)))
(assert (= (or x117 x1307) x2213))
(assert (x246 x3074))
(assert (x246 x1110))
(assert (x246 x1566))
(assert (x246 x2146))
(assert (=> (<= x1421 10000) (= 0 (x1945 x1421))))
(assert (x246 x1792))
(assert (x246 x2375))
(assert (x246 x1297))
(assert (x246 x417))
(assert (x3077 x3017))
(assert (x246 x2847))
(assert (x246 x1629))
(assert (x246 x250))
(assert (x246 x571))
(assert (x246 x1496))
(assert (x246 x567))
(assert (< (x785 x1929 x2986 x38) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x3062))
(assert (= (and (not x808) x2596) x940))
(assert (= (x1945 (x588 x2826 x470 x535 x505 x1294 x389)) (x588 x2826 x470 x535 x505 x1294 x389)))
(assert (x246 x2313))
(assert (= (and x2251 (not x1124)) x2934))
(assert (x2367 18446744073709551614))
(assert (x246 x3161))
(assert (x246 x119))
(assert (= (x2781 (x588 x1375 x589 x562 x1661 x2777 x2191)) x2777))
(assert (x246 x1674))
(assert (x246 x2986))
(assert (x246 x2803))
(assert (= (=> (and (or (and (and (= x1251 (* x515 32)) (= x2115 (x2893 (+ 32 x663)))) (not x2786)) x2786) (and (<= x1015 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x2893 (+ 32 x1015)) x663) (>= 18446744073709551615 x515) (>= x3161 1) (= x2508 (x3098 x1015)) (<= 2 x1565) (= x1565 (x2893 (+ x663 (mod (+ 32 x1007) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x1015) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x1015)) (or (<= x1015 115792089237316195423570985008687907853269984665640564039457584007913129639902) (>= x1015 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (< x1015 x663) (= x645 (x3098 x456)) (= (= x515 0) x2786) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1015) (= (x2893 (+ 32 x2000)) x985) (>= x195 1) (= (x3098 192) x842) (< x663 x1565) (= x515 (x3098 x2189)) (= x195 (x3098 x2000)) (= (x3098 x985) x2189) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1015) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x1015) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x1015)) (= x2000 (x2893 (+ x842 32))) (= x1007 (* 32 x515)) (= x2508 1))) x3094) x2166))
(assert (x246 x2738))
(assert (x246 x91))
(assert (x246 x616))
(assert (=> (>= 10000 x3118) (= 0 (x1945 x3118))))
(assert (=> (>= 10000 x2304) (= (x1945 x2304) 0)))
(assert (= x2035 (x24 (x2947 x2826 x1545 x293 x2035 x2941))))
(assert (x246 x2908))
(assert (x246 x892))
(assert (x246 x1821))
(assert (= (x1087 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) x319))
(assert (x246 x2714))
(assert (= (=> (and (and (= x936 (x2613 x3097)) (= (x2613 192) x3097) (= (> x1725 0) x206) (= (ite (= x936 0) 1 0) x1725) (>= 2 x936)) (or (and (and (= x884 x2984) (<= x1181 2) (= (ite (= x1181 1) 1 0) x884) (= (x2613 x42) x1181) (= (x2613 192) x42)) (not x206)) (and (= x2984 x1725) x206))) x270) x2563))
(assert (=> (>= 10000 x704) (= 0 (x1945 x704))))
(assert (= (or x2200 x1646) x2136))
(assert (= x505 (x24 (x588 x2826 x470 x535 x505 x1294 x389))))
(assert (x246 x418))
(assert (= (x2689 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x1442))
(assert (x246 x396))
(assert (x246 x2305))
(assert (x246 x1991))
(assert (x246 x1166))
(assert (=> (<= x179 10000) (= (x1945 x179) 0)))
(assert (x246 x602))
(assert (x246 x441))
(assert (not (x2367 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (=> (>= 10000 x1114) (= (x1945 x1114) 0)))
(assert (= (and x629 (not x123)) x498))
(assert (x246 x645))
(assert (x246 x1927))
(assert (x246 x3053))
(assert (x246 x1207))
(assert (x246 x876))
(assert (x246 x735))
(assert (x246 x1521))
(assert (x246 x3039))
(assert (x246 x121))
(assert (= (x175 (x785 x1173 x2679 x1640)) x1173))
(assert (=> (>= 10000 x2970) (= (x1945 x2970) 0)))
(assert (x246 x2691))
(assert (> (x2322 x2104 x471 x188 x1450) 10000))
(assert (= (or x832 x1731) x1047))
(assert (=> (<= x2836 10000) (= (x1945 x2836) 0)))
(assert (x246 x1228))
(assert (= (x228 (x2947 x2972 x650 x697 x554 x2034)) x650))
(assert (=> (<= x2527 10000) (= 0 (x1945 x2527))))
(assert (= (x3016 (x588 x2826 x470 x535 x505 x1294 x389)) x389))
(assert (=> (<= x2070 10000) (= 0 (x1945 x2070))))
(assert (x246 x1549))
(assert (x246 x1407))
(assert (= x2357 (x1087 (x2322 x1375 x1590 x2357 x715))))
(assert (x246 x1775))
(assert (=> (<= x3093 10000) (= (x1945 x3093) 0)))
(assert (x246 x41))
(assert (x246 x2503))
(assert (=> (>= 10000 x2161) (= (x1945 x2161) 0)))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x100 x1206 x110 x342 x704 x2990 x1540 x447) (x1945 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (= (x1945 (x2322 x1173 x848 x3096 x1507)) (x2322 x1173 x848 x3096 x1507)))
(assert (x246 x1129))
(assert (= (x1945 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)))
(assert (x246 x2401))
(assert (x246 x557))
(assert (x246 x792))
(assert (x1105 x815))
(assert (x246 x3147))
(assert (< (x3027 x1206 x1753) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x175 (x3027 x2669 x3108)) x2669))
(assert (x246 x2844))
(assert (x246 x699))
(assert (= x2051 (x1480 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (= (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595) (x1945 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (=> (<= x722 10000) (= (x1945 x722) 0)))
(assert (= x2409 (=> (and (= (ite (= 0 x1937) x1937 1) x1710) (<= 1 x1710) (= x1467 (not (> x2375 1))) (= (x990 x802) x2375)) (and (=> (= x2749 x1493) x2496) x1467))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1299 0)))
(assert (x246 x424))
(assert (=> (>= 10000 x755) (= (x1945 x755) 0)))
(assert (= (x24 (x588 x1375 x589 x562 x1661 x2777 x2191)) x1661))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639712)))
(assert (x246 x1722))
(assert (x246 x967))
(assert (x246 x1642))
(assert (< (x785 x2826 x2896 x1019) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2611))
(assert (x246 x390))
(assert (= (x3016 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) x1061))
(assert (= (and x500 (not x1754)) x85))
(assert (not (x2367 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421))))
(assert (= (or x823 x2975) x693))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x2972 x1786)))
(assert (x246 x2625))
(assert (= (and x1305 x3111) x2299))
(assert (x246 x869))
(assert (x246 x2556))
(assert (x246 x2973))
(assert (x246 x2427))
(assert (x246 x1708))
(assert (x246 x882))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)))
(assert (= (x1945 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)))
(assert (= (and (not x10) x3162) x2270))
(assert (< (x3027 x1375 x846) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x340))
(assert (x246 x659))
(assert (x246 x2710))
(assert (x246 x1036))
(assert (x246 x803))
(assert (x246 x1641))
(assert (x246 x2242))
(assert (x246 x1644))
(assert (x246 x1561))
(assert (=> (>= 10000 x624) (= (x1945 x624) 0)))
(assert (=> (>= 10000 x2280) (= 0 (x1945 x2280))))
(assert (x246 x138))
(assert (=> (>= 10000 x2295) (= 0 (x1945 x2295))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (x246 x2502))
(assert (= x1227 (and x987 x2368)))
(assert (x246 x1723))
(assert (= (x24 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)) x620))
(assert (x246 x1911))
(assert (=> (>= 10000 x2223) (= (x1945 x2223) 0)))
(assert (= x1388 (or x2265 x907 x147 x58 x1354)))
(assert (x246 x1828))
(assert (x246 x1454))
(assert (= x2810 (and x2136 (not x2767))))
(assert (x246 x831))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (=> (<= x1131 10000) (= 0 (x1945 x1131))))
(assert (=> (<= x1787 10000) (= 0 (x1945 x1787))))
(assert (x246 x2937))
(assert (x246 x3023))
(assert (x246 x2813))
(assert (= (and x1729 x423) x770))
(assert (x246 x1846))
(assert (x246 x3))
(assert (x246 x1884))
(assert (= (and x1953 (not x3041)) x147))
(assert (= x2088 (x175 (x2947 x2088 x1809 x2063 x264 x44))))
(assert (x246 x1941))
(assert (=> (<= x2271 10000) (= (x1945 x2271) 0)))
(assert (x246 x218))
(assert (=> (>= 10000 x388) (= (x1945 x388) 0)))
(assert (x246 x245))
(assert (=> (>= 10000 x557) (= (x1945 x557) 0)))
(assert (x246 x2133))
(assert (x246 x747))
(assert (=> (<= x1515 10000) (= 0 (x1945 x1515))))
(assert (= (x1087 (x2947 x3129 x1966 x1100 x229 x2923)) x1100))
(assert (= (x175 (x588 x2972 x2139 x2300 x295 x2097 x3048)) x2972))
(assert (x246 x3083))
(assert (x246 x709))
(assert (= (x1945 (x785 x1173 x2679 x1640)) (x785 x1173 x2679 x1640)))
(assert (= x2669 (x175 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (x246 x2735))
(assert (x246 x2971))
(assert (x246 x386))
(assert (= x2151 (x175 (x785 x2151 x513 x433))))
(assert (x246 x809))
(assert (x246 x90))
(assert (=> (>= 10000 x1400) (= (x1945 x1400) 0)))
(assert (x246 x837))
(assert (x246 x60))
(assert (= x806 (x3016 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078))))
(assert (x246 x771))
(assert (x246 x2912))
(assert (=> (>= 10000 x847) (= 0 (x1945 x847))))
(assert (x246 x429))
(assert (x246 x960))
(assert (x246 x2745))
(assert (x246 x2430))
(assert (x246 x2807))
(assert (x246 x2587))
(assert (x246 x1042))
(assert (x246 x211))
(assert (x246 x1393))
(assert (x246 x1349))
(assert (=> (>= 10000 x406) (= 0 (x1945 x406))))
(assert (= (=> (and (>= 18446744073709551615 x1488) (<= x1586 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1775 (x2032 164)) (= (x1149 (- x212 x220)) x2559) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1434) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2559)) (> x1434 x2559)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1434) (> x2559 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1828 (+ x283 32)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1586) (= (* x1488 160) x220) (= x1434 (x2893 (+ 32 x2493))) (= x1488 (x2032 x2493)) (= (x2893 (+ x1586 32)) x160) (= (x2893 (+ x1586 (mod (+ x1024 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1361) (or (<= x1775 2065879269376) (>= x1775 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x2893 (+ x1775 36)) x2493) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1775) (<= x2583 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2583 x1775)) (and (<= x2583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1775))) (> x1361 x1586) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1586) (= (< 0 x1488) x123) (<= 1 x1361) (= (* x1488 32) x1024)) (and (=> x123 x901) (=> (and (= x1122 x1361) (not x123)) x1949))) x1482))
(assert (x246 x2222))
(assert (= x2088 (x175 (x2322 x2088 x2687 x2333 x1472))))
(assert (= (x1945 (x588 x1269 x862 x1525 x1594 x722 x1564)) (x588 x1269 x862 x1525 x1594 x722 x1564)))
(assert (x246 x316))
(assert (= (and x899 (not x2906)) x1277))
(assert (= (x1945 (x785 64 x1199 1)) (x785 64 x1199 1)))
(assert (= (x1945 (x588 x2669 x462 x1244 x1460 x3093 x741)) (x588 x2669 x462 x1244 x1460 x3093 x741)))
(assert (= (and x1028 x1526) x3084))
(assert (=> (<= x2705 10000) (= (x1945 x2705) 0)))
(assert (= x2996 (or x2098 x606)))
(assert (= x2717 (=> (= x1371 x2653) x2563)))
(assert (= (or x923 x332) x617))
(assert (=> (>= 10000 x797) (= 0 (x1945 x797))))
(assert (=> (>= 10000 x218) (= 0 (x1945 x218))))
(assert (= (x1945 (x588 x2088 x2756 x2432 x1993 x335 x2415)) (x588 x2088 x2756 x2432 x1993 x335 x2415)))
(assert (x246 x607))
(assert (not (x2367 (x3027 x2104 x2664))))
(assert (= (x175 (x3027 x2826 x458)) x2826))
(assert (> (x785 64 x1199 1) 10000))
(assert (x246 x2808))
(assert (= (x1945 (x588 x2104 x557 x1544 x1686 x1756 x2868)) (x588 x2104 x557 x1544 x1686 x1756 x2868)))
(assert (x246 x2230))
(assert (x246 x3005))
(assert (x246 x2344))
(assert (=> (<= x1121 10000) (= (x1945 x1121) 0)))
(assert (x246 x188))
(assert (x246 x550))
(assert (not (x2367 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (x246 x966))
(assert (= (and x1754 x500) x2957))
(assert (x246 x159))
(assert (= (x24 (x2322 x1929 x1267 x756 x2221)) x2221))
(assert (x2367 2065879269316))
(assert (x246 x2899))
(assert (x246 x1382))
(assert (x246 x1187))
(assert (x246 x2929))
(assert (x3077 x716))
(assert (x246 x28))
(assert (< 10000 (x2947 x1206 x22 x141 x1119 x924)))
(assert (= x394 (=> (and (or (and (and (= (x2893 (+ x2948 32)) x2325) (= (* x2459 32) x501)) (not x1275)) x1275) (and (= x1549 (* x2459 32)) (= x1275 (= x2459 0)) (<= x2948 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2654 (x1779 x1750)) (= (x1779 x2654) x2459) (<= x2459 18446744073709551615) (<= x2948 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1048) (<= x2948 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ x2948 (mod (+ x1549 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1048) (> x1048 x2948))) x1185)))
(assert (x246 x3069))
(assert (x246 x140))
(assert (x246 x2158))
(assert (= (x1945 (x2947 x1269 x2280 x182 x2371 x1302)) (x2947 x1269 x2280 x182 x2371 x1302)))
(assert (x246 x489))
(assert (x246 x1826))
(assert (x246 x983))
(assert (not (x2367 (x3027 x1375 x846))))
(assert (> (x785 x3129 x1751 x1029) 10000))
(assert (=> (<= x229 10000) (= 0 (x1945 x229))))
(assert (= x1696 (x24 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (= x1572 (x24 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (x246 x1160))
(assert (x246 x3093))
(assert (x246 x1540))
(assert (x246 x2543))
(assert (x246 x2668))
(assert (x246 x294))
(assert (= (=> (and (= x135 (x2893 (+ x605 x2592))) (>= 1 x2607) (<= x1768 2) (= x2607 x1308) (= x135 x1767) (or (= 0 x2592) (= x2592 32)) (= x1068 x548) (= (* 32 x2607) x2592)) x1054) x2829))
(assert (= x1683 (and x742 x1862)))
(assert (x246 x1586))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x2104 x2281 x2026 x1736 x2476)))
(assert (x246 x1219))
(assert (x246 x1062))
(assert (=> (>= 10000 x345) (= (x1945 x345) 0)))
(assert (=> (>= 10000 x479) (= (x1945 x479) 0)))
(assert (=> (>= 10000 x1966) (= (x1945 x1966) 0)))
(assert (= x1151 (x1480 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (=> (<= x1791 10000) (= (x1945 x1791) 0)))
(assert (= x2108 (and (not x600) x1979)))
(assert (x246 x2476))
(assert (x246 x1733))
(assert (x2367 2065879269376))
(assert (< 10000 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151)))
(assert (x246 x2871))
(assert (x246 x2890))
(assert (= (x588 x3129 x3083 x1099 x1696 x1349 x388) (x1945 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (= (x588 x2025 x444 x824 x2657 x728 x641) (x1945 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (x246 x1372))
(assert (< (x100 x2669 x2250 x1906 x893 x928 x1787 x1151) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1442 10000) (= (x1945 x1442) 0)))
(assert (=> (>= 10000 x295) (= (x1945 x295) 0)))
(assert (= (x1945 (x588 x1375 x589 x562 x1661 x2777 x2191)) (x588 x1375 x589 x562 x1661 x2777 x2191)))
(assert (= x1121 (x3016 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849))))
(assert (= (x24 (x100 x2025 x457 x2946 x1041 x655 x735 x2223)) x1041))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (=> (>= 10000 x414) (= 0 (x1945 x414))))
(assert (=> (>= 10000 x358) (= (x1945 x358) 0)))
(assert (= (x1945 (x2947 x2025 x1168 x77 x1118 x234)) (x2947 x2025 x1168 x77 x1118 x234)))
(assert (= 0 (x1945 18446744073709551613)))
(assert (= (x3027 x3129 x2865) (x1945 (x3027 x3129 x2865))))
(assert (= (x1945 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)))
(assert (=> (>= 10000 x323) (= (x1945 x323) 0)))
(assert (x246 x2881))
(assert (= x1929 (x175 (x3027 x1929 x2485))))
(assert (not (x2367 (x588 x1173 x2987 x1228 x2195 x3018 x2061))))
(assert (x246 x497))
(assert (< 10000 (x2947 x1269 x2280 x182 x2371 x1302)))
(assert (x246 x902))
(assert (> (x588 x1269 x862 x1525 x1594 x722 x1564) 10000))
(assert (x1630 x113))
(assert (x246 x1634))
(assert (=> (>= 10000 x1450) (= 0 (x1945 x1450))))
(assert (x246 x601))
(assert (= (=> (and (= (x2893 (+ 32 x1250)) x2427) (= (x2715 x983) x976) (= (not (< 4 x356)) x1983) (= x1287 (x2893 (+ 32 x983)))) (and (=> (and (= x2793 x1287) (= x2521 x2427) (= x2122 4)) x3035) x1983)) x1681))
(assert (=> (>= 10000 x22) (= (x1945 x22) 0)))
(assert (x246 x1853))
(assert (< (x785 x1269 x383 x2876) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x220))
(assert (= x2326 (x175 (x785 x2326 x2705 x2092))))
(assert (x246 x2580))
(assert (= (x1945 18446744073709551614) 0))
(assert (not (x2367 (x2947 x2025 x1168 x77 x1118 x234))))
(assert (x246 x38))
(assert (x246 x2281))
(assert (x246 x2783))
(assert (= x3061 (and (not x2924) x1643)))
(assert (x246 x2688))
(assert (= (x1087 (x2322 x1269 x537 x1389 x529)) x1389))
(assert (=> (>= 10000 x1778) (= 0 (x1945 x1778))))
(assert (x246 x1650))
(assert (=> (>= 10000 x3096) (= (x1945 x3096) 0)))
(assert (= x300 (x228 (x588 x1929 x300 x1260 x86 x3024 x627))))
(assert (x246 x1132))
(assert (x246 x1234))
(assert (x246 x165))
(assert (x246 x1412))
(assert (=> (>= 10000 x1756) (= (x1945 x1756) 0)))
(assert (x246 x1250))
(assert (x246 x1854))
(assert (=> (<= x2951 10000) (= 0 (x1945 x2951))))
(assert (=> (<= x1142 10000) (= 0 (x1945 x1142))))
(assert (x246 x1106))
(assert (x246 x643))
(assert (= x2708 (and x487 (not x3109))))
(assert (x246 x1001))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639618))
(assert (x246 x2557))
(assert (= x1084 (and (not x1248) x1532)))
(assert (=> (<= x1572 10000) (= 0 (x1945 x1572))))
(assert (not (x2367 (x588 x2326 x218 x895 x226 x1240 x2010))))
(assert (= x551 (=> (and (= x909 (not (> x2258 1))) (= (x2523 x1578) x2258)) (and x909 (=> (= x1895 x1965) x1171)))))
(assert (x246 x2623))
(assert (< (x588 x3129 x3083 x1099 x1696 x1349 x388) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1752))
(assert (x246 x2292))
(assert (= (x175 (x2322 x2326 x2242 x1297 x194)) x2326))
(assert (x246 x2951))
(assert (x246 x1518))
(assert (= x401 (or x1277 x1999)))
(assert (< 10000 (x2322 x2972 x851 x1878 x1078)))
(assert (=> (>= 10000 x952) (= 0 (x1945 x952))))
(assert (=> (<= x2371 10000) (= (x1945 x2371) 0)))
(assert (x246 x1845))
(assert (=> (>= 10000 x226) (= (x1945 x226) 0)))
(assert (x246 x2121))
(assert (x246 x1603))
(assert (=> (>= 10000 x928) (= (x1945 x928) 0)))
(assert (x246 x2165))
(assert (=> (<= x1208 10000) (= 0 (x1945 x1208))))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (=> (>= 10000 x1651) (= 0 (x1945 x1651))))
(assert (= (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804) (x1945 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (x246 x954))
(assert (= (x785 x2326 x2705 x2092) (x1945 (x785 x2326 x2705 x2092))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2104 x557 x1544 x1686 x1756 x2868)))
(assert (x246 x371))
(assert (= x751 (x3016 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (x246 x1851))
(assert (x246 x1776))
(assert (x2367 134217728))
(assert (x246 x2425))
(assert (x246 x2725))
(assert (x246 x1771))
(assert (x246 x2548))
(assert (x246 x42))
(assert (x246 x2021))
(assert (x246 x1873))
(assert (x246 x989))
(assert (= (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193) (x1945 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193))))
(assert (= x1805 (x1087 (x785 x2972 x341 x1805))))
(assert (= x2625 (x1087 (x2947 x1375 x2681 x2625 x755 x1882))))
(assert (x246 x658))
(assert (< 10000 (x2947 x1173 x1431 x1239 x996 x800)))
(assert (= (or x2979 x2619) x833))
(assert (x246 x2153))
(assert (=> (<= x895 10000) (= (x1945 x895) 0)))
(assert (x246 x27))
(assert (x246 x1002))
(assert (x246 x2931))
(assert (x246 x710))
(assert (x246 x387))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x1929 x2485)))
(assert (= (x1087 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)) x519))
(assert (x2367 18446744073709551455))
(assert (= (and x2444 x2879) x1534))
(assert (=> (<= x1099 10000) (= (x1945 x1099) 0)))
(assert (x246 x34))
(assert (x3077 x1959))
(assert (= x1093 (x228 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (x246 x1487))
(assert (= (x175 (x2322 x1206 x1069 x1651 x2544)) x1206))
(assert (x246 x3100))
(assert (x246 x2207))
(assert (x246 x2231))
(assert (x246 x86))
(assert (x246 x1569))
(assert (= x3130 (=> (= (not (> x2145 128)) x1437) (and x1437 x1939))))
(assert (x246 x863))
(assert (x246 x2798))
(assert (x246 x965))
(assert (x246 x25))
(assert (x246 x598))
(assert (=> (<= x2092 10000) (= 0 (x1945 x2092))))
(assert (not (x2367 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (x246 x1242))
(assert (= (x1945 (x2322 66 x573 x3003 x2156)) (x2322 66 x573 x3003 x2156)))
(assert (x1105 x1879))
(assert (x246 x2028))
(assert (x246 x109))
(assert (= (and (not x2509) x3151) x2526))
(assert (=> (>= 10000 x470) (= 0 (x1945 x470))))
(assert (x246 x1921))
(assert (x246 x1844))
(assert (x246 x2966))
(assert (=> (>= 10000 x1460) (= (x1945 x1460) 0)))
(assert (x246 x1943))
(assert (x246 x2016))
(assert (x246 x2654))
(assert (x246 x319))
(assert (= x823 (and x3044 x2132)))
(assert (x246 x2152))
(assert (x246 x2123))
(assert (x246 x2071))
(assert (x246 x1696))
(assert (= (and x1716 x1683) x1387))
(assert (=> (<= x1042 10000) (= 0 (x1945 x1042))))
(assert (=> (>= 10000 x2357) (= 0 (x1945 x2357))))
(assert (x1105 x282))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639649) 0))
(assert (= (or x1415 x1381) x1732))
(assert (= (x1945 (x2947 x2326 x2831 x2354 x1315 x1778)) (x2947 x2326 x2831 x2354 x1315 x1778)))
(assert (x246 x1528))
(assert (=> (<= x694 10000) (= (x1945 x694) 0)))
(assert (x246 x1127))
(assert (= x2173 (or x1550 x2702)))
(assert (= (and (not x1560) x2081) x1918))
(assert (x246 x1874))
(assert (= (x1945 (x2322 x1375 x1590 x2357 x715)) (x2322 x1375 x1590 x2357 x715)))
(assert (= (x175 (x2322 x1375 x1590 x2357 x715)) x1375))
(assert (= (x3016 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x2622))
(assert (=> (>= 10000 x3048) (= (x1945 x3048) 0)))
(assert (x246 x194))
(assert (not (x2367 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (x246 x1907))
(assert (x3077 x815))
(assert (x246 x562))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)))
(assert (=> (<= x1061 10000) (= (x1945 x1061) 0)))
(assert (x246 x1017))
(assert (< 10000 (x3027 x1929 x2485)))
(assert (x246 x1563))
(assert (x246 x1780))
(assert (=> (>= 10000 x1973) (= 0 (x1945 x1973))))
(assert (x246 x2995))
(assert (= x1228 (x1087 (x588 x1173 x2987 x1228 x2195 x3018 x2061))))
(assert (= (x1087 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x35))
(assert (x246 x49))
(assert (x3077 x2385))
(assert (x246 x2804))
(assert (x246 x1978))
(assert (x246 x2655))
(assert (x246 x1694))
(assert (x246 x2271))
(assert (not (x2367 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679))))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x431)) (= x1329 (x1300 1461501637330902918203684832716283019655932542975 x2505)) (= x2505 (x393 x2872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x431) (= x186 (+ 32 x3069)) (= x1758 (x393 256)) (>= 1461501637330902918203684832716283019655932542975 x2633) (= x1535 (x1300 1461501637330902918203684832716283019655932542975 x1758)) (= x2872 (x393 160)) (= x1535 x1355) (= x1173 (x2288 x431)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x431)) (= x1516 (x393 224)) (= x1355 (x1300 1461501637330902918203684832716283019655932542975 x3017)) (= x45 (x1149 (- x2285 x431))) (= (x2893 (+ x431 32)) x2449) (= x95 (<= x1173 224)) (>= 1461501637330902918203684832716283019655932542975 x150) (<= x431 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (> x329 x1516)) (> x2285 x431) (= (x2893 (+ x431 32)) x526) (= x368 (x2893 (+ 32 x2449))) (= x2633 (x2032 100)) (= (x2032 68) x150) (= x2731 (x1149 (- x45 32))) (= (x2893 (+ x2449 64)) x2285) (not (= x431 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (<= x431 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3017 (x393 x3069)) (= (+ x671 32) x3069)) (and (=> (and (or (and (and (= x1514 (x2893 (+ 32 x2285))) (= (* 32 x2068) x516)) (not x277)) x277) (and (= (x2893 (+ x526 32)) x2314) (>= x2285 1) (= x1585 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) (= x2030 (x2947 x1173 x1431 x1239 x996 x800)) (= x59 (x2893 (+ x526 64))) (= (x2288 x526) x2332) (= x518 (x2893 (+ x526 128))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2285) (= (x2288 x1946) x2616) (>= 18446744073709551615 x2068) (= x340 (x2893 (+ x526 128))) (> x2884 x2285) (= x1640 (x2288 x939)) (= x1088 (x2893 (+ 64 x1546))) (= x1263 (x2893 (+ 192 x526))) (= (x2288 192) x1546) (= (x2288 x340) x1131) (= (x2893 (+ x526 32)) x939) (= x2726 (x2893 (+ x526 32))) (= x2187 (x2893 (+ x526 32))) (= (x2893 (+ 160 x526)) x441) (= (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208) x2936) (<= 2 x2884) (= (x2288 x526) x2015) (= x1485 (x2893 (+ 96 x526))) (= x2414 (x2893 (+ 64 x526))) (= x36 (* 32 x2068)) (= (x2288 x441) x564) (= x2483 (x2893 (+ x526 64))) (= (= 0 x2068) x277) (= (x2288 x534) x2068) (= x848 (x2288 x526)) (= x3137 (x2893 (+ x526 64))) (= x996 (x2288 x1242)) (= x2560 (x3027 x1173 x1841)) (= (x2288 x526) x2679) (= x3096 (x2288 x2314)) (= x33 (x2893 (+ 96 x526))) (= (x2288 x1508) x3018) (= (x2288 x1263) x1208) (= (x2288 x2858) x1608) (= (x2893 (+ 96 x526)) x1508) (= (x2288 x1088) x534) (= x800 (x2288 x125)) (= (x2288 x526) x1431) (= (x785 x1173 x2679 x1640) x1266) (= x2353 (x2288 x33)) (= (x2288 x2414) x2195) (= (x2288 x3137) x1507) (= (x2288 x526) x1841) (= (x1299 0) x2443) (= (x2322 x1173 x848 x3096 x1507) x737) (= x2061 (x2288 x518)) (= x718 (x2288 x2483)) (= x1946 (x2893 (+ x526 160))) (= x759 (ite (= 0 x1173) x2443 (ite (>= 32 x1173) x2560 (ite (>= 64 x1173) x1266 (ite (<= x1173 96) x737 (ite (<= x1173 128) x2030 (ite (<= x1173 160) x357 (ite (<= x1173 192) x1585 (ite (<= x1173 224) x2936 x2836))))))))) (= x2858 (x2893 (+ 128 x526))) (= (x2893 (+ 64 x526)) x1242) (= (x2893 (+ x526 32)) x1418) (= (x2288 x526) x2987) (= (x2893 (+ 96 x526)) x125) (= x1880 (x2288 x59)) (= x149 (x2288 x1536)) (= x1228 (x2288 x2726)) (= (x588 x1173 x2987 x1228 x2195 x3018 x2061) x357) (= (x2893 (+ x526 32)) x1536) (= x1447 (x2288 x2187)) (= x1239 (x2288 x1418)) (= (x2893 (+ (mod (+ x36 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2285)) x2884) (= (x2288 x1485) x2070))) x656) x95)) x92))
(assert (= (x1945 (x2322 x2326 x2242 x1297 x194)) (x2322 x2326 x2242 x1297 x194)))
(assert (x246 x871))
(assert (x246 x1116))
(assert (=> (>= 10000 x462) (= 0 (x1945 x462))))
(assert (x246 x169))
(assert (< (x100 x2326 x1278 x813 x624 x1253 x2940 x1679) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1628))
(assert (= (x228 (x588 x2151 x361 x2336 x2369 x989 x377)) x361))
(assert (x246 x579))
(assert (x246 x766))
(assert (=> (<= x2472 10000) (= (x1945 x2472) 0)))
(assert (x246 x2493))
(assert (=> (<= x275 10000) (= (x1945 x275) 0)))
(assert (x246 x435))
(assert (x246 x1240))
(assert (not (x2367 (x2322 x1206 x1069 x1651 x2544))))
(assert (= (and x487 x3109) x1346))
(assert (= 0 (x1945 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x246 x925))
(assert (x246 x502))
(assert (=> (>= 10000 x2885) (= 0 (x1945 x2885))))
(assert (x246 x864))
(assert (= x2529 (=> (and (= x2501 (not (> x2331 4))) (= (x2893 (+ 32 x1256)) x801) (= x60 (x235 x1256)) (= (x2893 (+ x574 32)) x190)) (and (=> (and (= x801 x625) (= 4 x774) (= x700 x190)) x572) x2501))))
(assert (x246 x1627))
(assert (x246 x2150))
(assert (x246 x654))
(assert (x246 x185))
(assert (x246 x1605))
(assert (= (x1087 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)) x594))
(assert (x246 x663))
(assert (= x2669 (x175 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (=> (>= 10000 x2051) (= 0 (x1945 x2051))))
(assert (x246 x806))
(assert (x246 x2641))
(assert (x246 x2885))
(assert (> (x588 x2972 x2139 x2300 x295 x2097 x3048) 10000))
(assert (x246 x888))
(assert (x246 x2724))
(assert (= x2420 (or x2701 x2900)))
(assert (=> (<= x141 10000) (= (x1945 x141) 0)))
(assert (= (=> (and (= x104 (x2893 (+ x2558 x734))) (= x3134 (x2893 (+ x1721 32))) (= x250 (x2893 (+ x2656 31))) (= x1873 (x2893 (+ x104 32))) (= x2143 (x2893 (+ 32 x3134))) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x250) x734) (= x2780 (< 0 x373)) (= x1854 (x2893 (+ x2558 x2656))) (= (x1149 (- x104 x1924)) x1110) (= x1955 (x2893 (+ 32 x2787))) (= (x233 x2787) x373)) (and (=> (and (not x2780) (= x7 x1873)) x2627) (=> x2780 x2182))) x2801))
(assert (x246 x1403))
(assert (x246 x2311))
(assert (x246 x2696))
(assert (< (x2322 x3129 x138 x479 x789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x588 x2669 x462 x1244 x1460 x3093 x741)))
(assert (x246 x697))
(assert (x246 x55))
(assert (= (x3016 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)) x1627))
(assert (x246 x2258))
(assert (=> (<= x2109 10000) (= 0 (x1945 x2109))))
(assert (x246 x2940))
(assert (= x2097 (x2781 (x588 x2972 x2139 x2300 x295 x2097 x3048))))
(assert (x3077 x2505))
(assert (x246 x1552))
(assert (x246 x1861))
(assert (x246 x1291))
(assert (x246 x33))
(assert (x246 x3001))
(assert (x246 x483))
(assert (x246 x1814))
(assert (x246 x845))
(assert (= x641 (x3016 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (x246 x715))
(assert (< (x2947 x1375 x2681 x2625 x755 x1882) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2765))
(assert (x246 x574))
(assert (= (and x2728 x3052) x1376))
(assert (x246 x2194))
(assert (= (and (not x686) x289) x1915))
(assert (x246 x2921))
(assert (not (x2367 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286))))
(assert (=> (>= 10000 x433) (= 0 (x1945 x433))))
(assert (= (x1945 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)))
(assert (x246 x1254))
(assert (x246 x2569))
(assert (=> (<= x1533 10000) (= 0 (x1945 x1533))))
(assert (x246 x2779))
(assert (x246 x2706))
(assert (x246 x2637))
(assert (x246 x2880))
(assert (x246 x537))
(assert (x246 x2614))
(assert (x246 x838))
(assert (> (x785 x1173 x2679 x1640) 10000))
(assert (x246 x1404))
(assert (=> (>= 10000 x2423) (= (x1945 x2423) 0)))
(assert (= 0 (x175 (x1299 0))))
(assert (= (and x2852 x2002) x1468))
(assert (x246 x2666))
(assert (x246 x1893))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2025 x444 x824 x2657 x728 x641)))
(assert (=> (<= x2326 10000) (= 0 (x1945 x2326))))
(assert (x246 x2817))
(assert (= (x175 (x588 x1269 x862 x1525 x1594 x722 x1564)) x1269))
(assert (x246 x2364))
(assert (=> (>= 10000 x735) (= (x1945 x735) 0)))
(assert (= (x1945 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)))
(assert (= (and x171 x1597) x3052))
(assert (x246 x614))
(assert (x246 x1208))
(assert (x246 x1178))
(assert (= x2088 (x175 (x3027 x2088 x1975))))
(assert (= x486 (or x3072 x725)))
(assert (= (x1945 (x2947 x1929 x2404 x2650 x675 x1587)) (x2947 x1929 x2404 x2650 x675 x1587)))
(assert (< 10000 (x785 64 x257 1)))
(assert (x246 x26))
(assert (=> (>= 10000 x268) (= 0 (x1945 x268))))
(assert (= (x228 (x3027 x1375 x846)) x846))
(assert (= x1450 (x24 (x2322 x2104 x471 x188 x1450))))
(assert (=> (<= x2063 10000) (= 0 (x1945 x2063))))
(assert (=> (>= 10000 x2243) (= (x1945 x2243) 0)))
(assert (x246 x3118))
(assert (not (x2367 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x2972 x650 x697 x554 x2034)))
(assert (x246 x1812))
(assert (x1630 x250))
(assert (not (x2367 (x588 x2972 x2139 x2300 x295 x2097 x3048))))
(assert (= x1269 (x175 (x2322 x1269 x537 x1389 x529))))
(assert (= x907 (and x1387 (not x1624))))
(assert (=> (>= 10000 x2195) (= (x1945 x2195) 0)))
(assert (x246 x2544))
(assert (x246 x1946))
(assert (x246 x2927))
(assert (x246 x1294))
(assert (x246 x2740))
(assert (< 10000 (x2947 x2669 x709 x3005 x2192 x672)))
(assert (=> (>= 10000 x1240) (= (x1945 x1240) 0)))
(assert (x246 x1198))
(assert (= (x785 x2972 x341 x1805) (x1945 (x785 x2972 x341 x1805))))
(assert (= x890 (=> (and (= x1947 (x1081 x1104)) (= x2430 (x1081 x1965)) (= x402 (x2893 (+ 32 x1104))) (= x678 (x2893 (+ 32 x860))) (= (> x1947 0) x742)) (and (=> (and x742 (and (= x2150 (x2893 (+ x402 32))) (= x918 (x1081 x402)) (= (< 1 x1947) x1716) (= (x2893 (+ 32 x678)) x977))) (and (=> (and (not x1716) (and (= x2537 1) (= x2150 x1212) (= x977 x2426))) x2403) (=> (and (and (= x2534 (x2893 (+ x2150 32))) (= x828 (x2893 (+ 32 x977))) (= (x1289 x2150) x2883) (= (> x1947 2) x1624)) x1716) (and (=> (and (and (= (x1554 x2534) x1394) (= (x2893 (+ 32 x828)) x2569) (= (x2893 (+ x2534 32)) x1331) (= x3041 (< 3 x1947))) x1624) (and (=> (and (not x3041) (and (= x2426 x2569) (= 3 x2537) (= x1212 x1331))) x2403) (=> x3041 x959))) (=> (and (not x1624) (and (= 2 x2537) (= x2426 x828) (= x1212 x2534))) x2403))))) (=> (and (and (= x678 x2426) (= 0 x2537) (= x402 x1212)) (not x742)) x2403)))))
(assert (=> (<= x848 10000) (= (x1945 x848) 0)))
(assert (> (x785 x2669 x2862 x1788) 10000))
(assert (=> (<= x715 10000) (= 0 (x1945 x715))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)))
(assert (x246 x1960))
(assert (=> (<= x1375 10000) (= 0 (x1945 x1375))))
(assert (=> (<= x2432 10000) (= (x1945 x2432) 0)))
(assert (x246 x1938))
(assert (x246 x234))
(assert (=> (>= 10000 x377) (= 0 (x1945 x377))))
(assert (x246 x1442))
(assert (x246 x501))
(assert (=> (>= 10000 x86) (= (x1945 x86) 0)))
(assert (x246 x2112))
(assert (= (x175 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) x2972))
(assert (= (x1945 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)) (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)))
(assert (x246 x519))
(assert (x246 x3068))
(assert (= (and x2723 x1755) x2125))
(assert (x246 x528))
(assert (=> (>= 10000 x2361) (= (x1945 x2361) 0)))
(assert (= (or x404 x2963) x2642))
(assert (x2367 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (x246 x1318))
(assert (x246 x1139))
(assert (x246 x2360))
(assert (x246 x2633))
(assert (= x767 (and x2463 x3059)))
(assert (x246 x566))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (= (x24 (x2322 x1375 x1590 x2357 x715)) x715))
(assert (= x2975 (and x2132 (not x3044))))
(assert (=> (<= x2806 10000) (= 0 (x1945 x2806))))
(assert (= (=> (and (= x280 (x466 x1578)) (= (x2893 (+ 32 x304)) x2641) (= x304 (x2893 (+ 32 x2094))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2094) (= x1857 (x158 x1528)) (= x1998 (not (> x386 1))) (= x286 (x1300 1461501637330902918203684832716283019655932542975 x1857)) (= (x2893 (+ x1528 64)) x26) (<= 1 x280) (= x648 (x2893 (+ 32 x1286))) (= x1816 (x2514 x2877)) (= (x2893 (+ x2094 160)) x1978) (= (x2893 (+ 32 x1161)) x1528) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2094)) (= (x369 x26) x2276) (= x1286 (x2893 (+ x2641 32))) (not (= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2094)) (= (x2536 x1815) x386) (= x3104 (x2893 (+ 32 x1578))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2094) (<= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ x1528 32)) x2877) (> x1978 x2094)) (and (=> (= x46 x1978) x1064) x1998)) x2674))
(assert (= x1401 (=> (and (= x2919 (not (< 128 x2656))) (= (x2893 (+ x2167 96)) x905) (= (x2893 (+ x2558 96)) x747) (= x1875 (x2428 x905))) (and x2801 x2919))))
(assert (= (x228 (x2322 x2151 x1017 x847 x2834)) x1017))
(assert (x246 x337))
(assert (x246 x700))
(assert (x246 x2212))
(assert (x246 x20))
(assert (x246 x2837))
(assert (= x2286 (x1480 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286))))
(assert (not (x2367 (x2322 x2151 x1017 x847 x2834))))
(assert (x246 x2260))
(assert (x246 x2748))
(assert (x246 x1546))
(assert (= (x3027 x1173 x1841) (x1945 (x3027 x1173 x1841))))
(assert (x246 x2790))
(assert (x246 x1072))
(assert (x246 x933))
(assert (=> (<= x2612 10000) (= (x1945 x2612) 0)))
(assert (> (x588 x2025 x444 x824 x2657 x728 x641) 10000))
(assert (x246 x2459))
(assert (x246 x839))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639902) 0))
(assert (x246 x2603))
(assert (= x2118 (x228 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573))))
(assert (x246 x478))
(assert (x246 x2093))
(assert (x246 x2109))
(assert (x246 x2640))
(assert (x246 x202))
(assert (< 10000 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)))
(assert (= x796 (x3016 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (x246 x2828))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)))
(assert (x246 x964))
(assert (=> (>= 10000 x2242) (= (x1945 x2242) 0)))
(assert (< 10000 (x2947 x1929 x2404 x2650 x675 x1587)))
(assert (= x3082 (and x192 x475)))
(assert (x246 x2388))
(assert (=> (>= 10000 x1847) (= (x1945 x1847) 0)))
(assert (= (=> (and (= x29 x2094) (= x1184 (ite (= 0 x352) (ite (= 0 x352) 1 0) (ite (= x744 0) 1 0))) (= 0 x1184)) x2588) x738))
(assert (x246 x1620))
(assert (=> (>= 10000 x342) (= (x1945 x342) 0)))
(assert (x246 x494))
(assert (x246 x336))
(assert (x246 x955))
(assert (= x101 (x2781 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286))))
(assert (=> (>= 10000 x136) (= (x1945 x136) 0)))
(assert (= x924 (x2781 (x2947 x1206 x22 x141 x1119 x924))))
(assert (x246 x1011))
(assert (x246 x2038))
(assert (x246 x1427))
(assert (= (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849) (x1945 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849))))
(assert (x246 x1658))
(assert (x246 x2314))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x246 x1097))
(assert (= x2574 (and x2081 x1560)))
(assert (=> (<= x1206 10000) (= 0 (x1945 x1206))))
(assert (x246 x2549))
(assert (=> (<= x2393 10000) (= 0 (x1945 x2393))))
(assert (x246 x2225))
(assert (x246 x801))
(assert (> (x2322 x1375 x1590 x2357 x715) 10000))
(assert (x246 x1516))
(assert (x246 x2025))
(assert (= (and (not x2431) x2969) x1159))
(assert (x246 x1057))
(assert (x246 x3085))
(assert (x246 x970))
(assert (=> (<= x2192 10000) (= (x1945 x2192) 0)))
(assert (x246 x3017))
(assert (= (x24 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x1142))
(assert (x3077 x586))
(assert (x246 x1355))
(assert (x246 x506))
(assert (x246 x797))
(assert (x246 x672))
(assert (x246 x1684))
(assert (x246 x2534))
(assert (= x400 (and x866 x354)))
(assert (x246 x2568))
(assert (= (x2781 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) x2070))
(assert (= (=> (and (and (and (= x2743 false) (= x2117 (x1749 x358)) (= x1130 x1391) (= (x785 64 x257 1) x2645) (= (x2309 96) x1397) (= false x3133) (<= x2480 127) (>= 127 x2480) (= x239 x358) (= x2582 (x2530 x684)) (>= x2582 1) (= x1548 (+ x1707 x1055)) (= x3025 1889567281) (>= 4294967295 x1582) (= false x553) (= x930 0) (= false x2874) (= x2637 x2678) (<= 128 x1582) (= x1082 (= x2678 x1548)) (= x1155 false) (= x1391 (x569 x684)) (= (x2935 x2645) x2637) (= x1410 false) (= x1707 x1034) (= x1397 x1034)) (and (= x2799 x257) (= x2041 false))) (and (= false x1932) (= false x1835) (= false x2517) (= 36 x2457) (= x868 false))) x1082) x1054))
(assert (= (x3027 x1929 x2485) (x1945 (x3027 x1929 x2485))))
(assert (= (x785 x1375 x2837 x2885) (x1945 (x785 x1375 x2837 x2885))))
(assert (= x326 (or x2484 x2934)))
(assert (x246 x1900))
(assert (=> (>= 10000 x3129) (= 0 (x1945 x3129))))
(assert (=> (>= 10000 x2704) (= 0 (x1945 x2704))))
(assert (=> (<= x562 10000) (= 0 (x1945 x562))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x2151 x513 x433)))
(assert (x246 x2657))
(assert (x246 x613))
(assert (x2367 18446744073709551487))
(assert (x246 x3160))
(assert (x246 x1191))
(assert (x3077 x2135))
(assert (x246 x2713))
(assert (= x633 (or (and x2996 (not x1165)) x2875)))
(assert (x246 x1831))
(assert (x246 x1392))
(assert (= (x175 (x785 x3129 x1751 x1029)) x3129))
(assert (not (x2367 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849))))
(assert (= (x24 (x2947 x1929 x2404 x2650 x675 x1587)) x675))
(assert (x246 x639))
(assert (= (x3016 (x588 x2972 x2139 x2300 x295 x2097 x3048)) x3048))
(assert (= (x2322 x2025 x2084 x1246 x336) (x1945 (x2322 x2025 x2084 x1246 x336))))
(assert (=> (>= 10000 x2664) (= (x1945 x2664) 0)))
(assert (= x2665 (and x1662 x1531)))
(assert (x246 x818))
(assert (x1630 x960))
(assert (=> (<= x1369 10000) (= 0 (x1945 x1369))))
(assert (=> (>= 10000 x718) (= (x1945 x718) 0)))
(assert (= x2284 (=> (and (= x1438 (x2893 (+ x1107 20))) (= x3160 (x2546 160)) (= (* 79228162514264337593543950336 x385) x331) (= (x2893 (+ 64 x496)) x2839) (= x793 (x1149 (- x1174 32))) (<= 1 x1264) (= x2104 (x2742 x2490)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2490)) (= (<= x2104 224) x1125) (= (x2546 x1578) x1264) (<= x2490 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ x2490 32)) x1734) (< x2490 x162) (= x2661 (x1300 1461501637330902918203684832716283019655932542975 x1700)) (= x1700 (x2546 x2839)) (not (= x2490 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= (x1149 (- x162 x2490)) x1174) (= (x2893 (+ x2839 64)) x3039) (= x385 (x1300 1461501637330902918203684832716283019655932542975 x76)) (= (x2893 (+ 32 x2490)) x1030) (= x162 (x2893 (+ x1438 32))) (= x2557 (x2546 x3039)) (= (x2546 x528) x496) (not (= x2490 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= (* 79228162514264337593543950336 x2661) x2470) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2490) (= x76 (x2546 x3160)) (= (x2893 (+ 20 x1030)) x1107) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2490)) (and (=> (and (and (= (x2742 x1734) x2244) (= (x2893 (+ 96 x1734)) x382) (= (x2742 x528) x90) (= x557 (x2742 x1734)) (= (x2742 x1116) x1450) (= (x2742 x1734) x2704) (= x2791 (x2893 (+ x1734 96))) (= (ite (= 0 x2104) x428 (ite (>= 32 x2104) x3054 (ite (<= x2104 64) x555 (ite (>= 96 x2104) x3009 (ite (<= x2104 128) x2608 (ite (<= x2104 160) x612 (ite (<= x2104 192) x1905 (ite (>= 224 x2104) x834 x2076)))))))) x3049) (= x1600 (x2742 x1888)) (= (x2893 (+ x1734 128)) x1372) (= (x588 x2104 x557 x1544 x1686 x1756 x2868) x612) (= (x2893 (+ x1734 32)) x571) (= (x2742 x1734) x471) (= (x2893 (+ 128 x1734)) x892) (= x694 (x2742 x1653)) (= x2026 (x2742 x1902)) (= (x2893 (+ 96 x1734)) x2899) (= (x2742 x949) x889) (= x2763 (x2893 (+ 32 x1734))) (= (x2893 (+ 64 x1734)) x1116) (= x3157 (x2742 x571)) (= (x2893 (+ 64 x1734)) x1003) (= (x2742 x1578) x185) (= x2556 (x2742 x1603)) (= (x2893 (+ 32 x1734)) x75) (<= 1 x185) (= x875 (x2742 x1371)) (= x1874 (x2742 x2091)) (= x3054 (x3027 x2104 x2664)) (= (x2322 x2104 x471 x188 x1450) x3009) (= x2622 (x2742 x467)) (= (x2742 x1003) x1736) (= (x1299 0) x428) (= x1544 (x2742 x75)) (= x660 (x2742 x2763)) (= (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421) x834) (= (x2893 (+ x1734 32)) x1902) (= x467 (x2893 (+ x1734 128))) (= x2281 (x2742 x1734)) (= (x100 x2104 x2848 x2172 x682 x694 x2622 x1600) x1905) (= (x2742 x2899) x1756) (= x1653 (x2893 (+ 96 x1734))) (= x1921 (x2893 (+ 32 x1734))) (= x2083 (x2893 (+ x1734 64))) (= (= 0 x875) x2379) (= (x2742 x1734) x2664) (= (x2893 (+ 64 x1734)) x2091) (= x1338 (x2742 x382)) (= x188 (x2742 x1921)) (= (x2742 x2791) x2476) (= x1664 (x2893 (+ 32 x1734))) (= x2868 (x2742 x892)) (= x1603 (x2893 (+ 160 x1734))) (= (x2742 x1372) x1711) (= x2539 (x2893 (+ x1734 192))) (= x555 (x785 x2104 x2704 x660)) (= (x2947 x2104 x2281 x2026 x1736 x2476) x2608) (= x1888 (x2893 (+ 160 x1734))) (= x2172 (x2742 x1664)) (= x1686 (x2742 x2083)) (= (x2893 (+ x1734 64)) x2196) (= x949 (x2893 (+ 96 x90))) (= (x2742 x1734) x2848) (= x1421 (x2742 x2539)) (= x682 (x2742 x2196))) (or (not x2379) (and x2379 (= (x2893 (+ 32 x1371)) x97)))) x1685) x1125))))
(assert (= (x100 x1375 x2118 x810 x2951 x706 x1631 x1573) (x1945 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573))))
(assert (x246 x481))
(assert (= (x1945 57896044618658097711785492504343953926634992332820282019728792003956564820036) 0))
(assert (x246 x1252))
(assert (x246 x1761))
(assert (=> (<= x3024 10000) (= 0 (x1945 x3024))))
(assert (= (x228 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) x1278))
(assert (x246 x624))
(assert (=> (<= x1600 10000) (= (x1945 x1600) 0)))
(assert (= x2326 (x175 (x2947 x2326 x2831 x2354 x1315 x1778))))
(assert (x246 x1899))
(assert (= (and (not x2943) x2267) x2658))
(assert (x246 x977))
(assert (x246 x1973))
(assert (x3077 x795))
(assert (= x208 (and x1985 x2155)))
(assert (= (x24 (x2322 x2972 x851 x1878 x1078)) x1078))
(assert (not (x2367 (x3027 x2972 x1786))))
(assert (x246 x526))
(assert (= (x24 (x588 x2972 x2139 x2300 x295 x2097 x3048)) x295))
(assert (x246 x1937))
(assert (not (x2367 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (= (x175 (x588 x2326 x218 x895 x226 x1240 x2010)) x2326))
(assert (x246 x641))
(assert (= (x2781 (x588 x2025 x444 x824 x2657 x728 x641)) x728))
(assert (= x2084 (x228 (x2322 x2025 x2084 x1246 x336))))
(assert (=> (<= x1926 10000) (= (x1945 x1926) 0)))
(assert (=> (>= 10000 x1661) (= 0 (x1945 x1661))))
(assert (x246 x631))
(assert (=> (<= x2397 10000) (= 0 (x1945 x2397))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2088 x2756 x2432 x1993 x335 x2415)))
(assert (=> (>= 10000 x2868) (= (x1945 x2868) 0)))
(assert (x246 x2831))
(assert (x246 x293))
(assert (not (x2367 (x785 x1375 x2837 x2885))))
(assert (= (or x168 x1994) x934))
(assert (= (x228 (x588 x3129 x3083 x1099 x1696 x1349 x388)) x3083))
(assert (x246 x1837))
(assert (not (x2367 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (=> (<= x2156 10000) (= (x1945 x2156) 0)))
(assert (x246 x1490))
(assert (x246 x353))
(assert (> (x2322 x2151 x1017 x847 x2834) 10000))
(assert (x246 x1606))
(assert (x246 x1308))
(assert (x246 x897))
(assert (x246 x1253))
(assert (x246 x2381))
(assert (x246 x2157))
(assert (x246 x1077))
(assert (x246 x1107))
(assert (= x750 (=> (and (> x272 x46) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x116) (= x3163 (x1 x1380)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x46) (= x1963 (x2893 (+ x1384 32))) (not (= x46 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x46)) (> x1316 x116) (= x2408 (x2893 (+ 32 x1036))) (= (x1336 x1578) x1316) (<= x46 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ x34 x1578)) x792) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x46) (= 1 x363) (= x2965 (x2886 x1344)) (= (x2893 (+ x1963 64)) x1344) (= (x1321 x2692) x1384) (= x34 (x2893 (+ 32 x695))) (<= 1 x1316) (= (x2893 (+ x46 160)) x272) (= (x2893 (+ x1339 32)) x2512) (<= 1 x2226) (= 1 x1672) (= x1339 (x2893 (+ x2408 32))) (= x1036 (x2893 (+ x46 32))) (= x1672 (x1321 x1384)) (not (= x46 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2942 (not (< 1 x2021))) (= x2226 (x1321 x217)) (= x2385 (x2406 x1963)) (= (mod (* x116 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x695) (= (x2893 (+ 32 x217)) x2692) (= (x2893 (+ 32 x1963)) x1380) (= (x2193 x217) x2021) (= (x1300 1461501637330902918203684832716283019655932542975 x2385) x1916)) (and x2942 (=> (= x272 x2653) x2717)))))
(assert (< (x2947 x1269 x2280 x182 x2371 x1302) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2970))
(assert (x246 x948))
(assert (x246 x2848))
(assert (=> (>= 10000 x535) (= 0 (x1945 x535))))
(assert (x246 x1469))
(assert (x246 x1790))
(assert (x246 x941))
(assert (x246 x4))
(assert (x246 x324))
(assert (x246 x1848))
(assert (= (x175 (x3027 x2326 x736)) x2326))
(assert (x246 x2868))
(assert (x246 x1615))
(assert (= (x1087 (x100 x2025 x457 x2946 x1041 x655 x735 x2223)) x2946))
(assert (= (x2689 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595)) x2595))
(assert (x246 x544))
(assert (= x255 (and (not x1145) x1047)))
(assert (= (x3027 x2088 x1975) (x1945 (x3027 x2088 x1975))))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x246 x1238))
(assert (= x2852 (or x2031 x3114)))
(assert (not (x2367 (x785 x1269 x383 x2876))))
(assert (x246 x472))
(assert (x246 x366))
(assert (x246 x2458))
(assert (x246 x2262))
(assert (x246 x1544))
(assert (x246 x282))
(assert (= (x175 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) x2972))
(assert (x246 x2464))
(assert (x246 x2758))
(assert (x246 x2357))
(assert (= x1812 (x24 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286))))
(assert (x3077 x2307))
(assert (x246 x931))
(assert (= x2151 (x175 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (> (x785 x2088 x112 x2454) 10000))
(assert (x246 x2626))
(assert (=> (>= 10000 x1439) (= 0 (x1945 x1439))))
(assert (x246 x2221))
(assert (x246 x407))
(assert (= (x1945 (x3027 x2972 x1786)) (x3027 x2972 x1786)))
(assert (=> (>= 10000 x2438) (= 0 (x1945 x2438))))
(assert (= x1019 (x1087 (x785 x2826 x2896 x1019))))
(assert (= x923 (or x691 x99)))
(assert (= x332 (and x249 x2238)))
(assert (x246 x1619))
(assert (=> (>= 10000 x2876) (= 0 (x1945 x2876))))
(assert (x246 x2788))
(assert (x246 x2432))
(assert (x246 x527))
(assert (x246 x368))
(assert (< (x2947 x2151 x406 x1887 x1559 x865) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x824 10000) (= 0 (x1945 x824))))
(assert (=> (>= 10000 x1696) (= (x1945 x1696) 0)))
(assert (x246 x2070))
(assert (= (=> (and (= (x2893 (+ x888 32)) x2028) (= x1201 (not (< 1 x373))) (= x2737 (x2635 x888)) (= x1773 (x2893 (+ 32 x2890))) (<= x2246 2) (= (x2893 (+ x205 32)) x2927) (= x864 (x1890 x2390)) (= (x2500 x1773) x2564) (= (x2893 (+ x2927 32)) x3076) (= (x1832 x2890) x2246) (= x1658 (x1581 x2028)) (= (x1832 x1955) x2890) (<= x2564 1) (= x888 (x2893 (+ x2390 32))) (= (x2893 (+ 32 x3142)) x205) (= (x2893 (+ x3076 32)) x2929) (= x2390 (x2893 (+ 32 x1773))) (= x3142 (x2893 (+ x1873 32))) (= x307 (x1300 1461501637330902918203684832716283019655932542975 x864))) (and x1201 (=> (= x7 x2929) x2627))) x2182))
(assert (= x3096 (x1087 (x2322 x1173 x848 x3096 x1507))))
(assert (x246 x46))
(assert (x1105 x1652))
(assert (= (and x1146 x743) x3146))
(assert (=> (>= 10000 x1899) (= (x1945 x1899) 0)))
(assert (x246 x3046))
(assert (=> (<= x1278 10000) (= (x1945 x1278) 0)))
(assert (> (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442) 10000))
(assert (x246 x635))
(assert (x246 x1768))
(assert (=> (>= 10000 x903) (= 0 (x1945 x903))))
(assert (x246 x1450))
(assert (= (and x2922 x854) x2766))
(assert (x246 x2824))
(assert (x246 x2747))
(assert (x246 x261))
(assert (x246 x2753))
(assert (= (and x2136 x2767) x2752))
(assert (x246 x258))
(assert (< 10000 (x588 x1375 x589 x562 x1661 x2777 x2191)))
(assert (= true x899))
(assert (x246 x2792))
(assert (=> (<= x447 10000) (= 0 (x1945 x447))))
(assert (x246 x2045))
(assert (x3077 x1857))
(assert (x246 x817))
(assert (x246 x1539))
(assert (x246 x2524))
(assert (= (and (not x2215) x1376) x2716))
(assert (= (x1945 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (x246 x75))
(assert (x246 x1396))
(assert (= x1239 (x1087 (x2947 x1173 x1431 x1239 x996 x800))))
(assert (=> (>= 10000 x641) (= 0 (x1945 x641))))
(assert (x246 x1278))
(assert (= x105 (and x1463 x1732)))
(assert (x246 x1981))
(assert (x246 x1590))
(assert (= (x228 (x3027 x1929 x2485)) x2485))
(assert (= x1544 (x1087 (x588 x2104 x557 x1544 x1686 x1756 x2868))))
(assert (x246 x96))
(assert (x2367 32542679537407071897843112657522291873774333932075415528008786499928730894336))
(assert (= x529 (x24 (x2322 x1269 x537 x1389 x529))))
(assert (= x2312 (=> (and (and (= (< 0 x1937) x2511) (= (x1149 (- x88 x1493)) x1188) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x103) x556) (= x88 (x2893 (+ x856 x556))) (<= 1 x781) (= x781 (x2530 x585)) (= (x2893 (+ x211 x856)) x230) (= x103 (x2893 (+ x211 31)))) (or (not x2511) (and x2511 (and (= x169 (x1976 x585)) (= (= x169 (x454 x585)) x1803) (= x481 (x1976 x2361)) (= x1964 (>= (x454 x2361) x481)) x1803 x1964 (>= 4294967295 x439))))) x604)))
(assert (= (x3016 (x588 x1375 x589 x562 x1661 x2777 x2191)) x2191))
(assert (= (or x591 x2593) x2155))
(assert (= x859 (and x1982 (not x206))))
(assert (=> (<= x2778 10000) (= 0 (x1945 x2778))))
(assert (x246 x1100))
(assert (x246 x2192))
(assert (x246 x1824))
(assert (x246 x1876))
(assert (x246 x2930))
(assert (x3077 x1758))
(assert (= (x228 (x785 x2669 x2862 x1788)) x2862))
(assert (=> (<= x2191 10000) (= 0 (x1945 x2191))))
(assert (=> (>= 10000 x727) (= (x1945 x727) 0)))
(assert (= (x1945 57896044618658097711785492504343953926634992332820282019728792003956564820645) 0))
(assert (= x2280 (x228 (x2947 x1269 x2280 x182 x2371 x1302))))
(assert (x246 x1808))
(assert (x246 x376))
(assert (x246 x3158))
(assert (not (x2367 (x100 x2972 x2688 x1904 x1926 x592 x602 x41))))
(assert (x246 x304))
(assert (= x2200 (or x692 x105)))
(assert (= x697 (x1087 (x2947 x2972 x650 x697 x554 x2034))))
(assert (x246 x2883))
(assert (= (x2322 x2669 x1741 x1726 x2710) (x1945 (x2322 x2669 x1741 x1726 x2710))))
(assert (x246 x59))
(assert (x246 x307))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (=> (<= x789 10000) (= (x1945 x789) 0)))
(assert (x246 x1430))
(assert (x246 x301))
(assert (x246 x756))
(assert (=> (>= 10000 x3003) (= 0 (x1945 x3003))))
(assert (< 10000 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)))
(assert (x246 x411))
(assert (= (x228 (x588 x1375 x589 x562 x1661 x2777 x2191)) x589))
(assert (= (and (not x277) x1839) x832))
(assert (= (x100 x2669 x2250 x1906 x893 x928 x1787 x1151) (x1945 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (x246 x2615))
(assert (= x824 (x1087 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (x246 x2144))
(assert (x246 x1572))
(assert (= (x3027 x2669 x3108) (x1945 (x3027 x2669 x3108))))
(assert (= x1958 (=> (and (= x2341 (> x202 0)) (= x1382 (x1512 x1750)) (= x202 (x1512 x1382))) (and (=> (and (and (= x860 x2696) (= x1750 x2204)) (not x2341)) x890) (=> (and (and (= (x2893 (+ x1083 32)) x2107) (= x3028 (x1512 x1750)) (= x2999 (x1512 x2502)) (= x282 (x1512 x2999)) (= x689 (x2893 (+ x2999 32))) (= (x1300 1461501637330902918203684832716283019655932542975 x282) x2600) (<= 1 x2089) (= x2502 (x2893 (+ 32 x3028))) (= x2042 (x2893 (+ 32 x522))) (= x407 (x2893 (+ x1086 128))) (= (x2893 (+ 32 x2696)) x1086) (= x1759 (x2893 (+ x2107 32))) (= x522 (x1512 x1373)) (= (x1512 x3028) x2089) (= x379 (x2893 (+ x407 32))) (= x2808 (x1877 x522)) (= (x1512 x689) x543) (= x1083 (x2893 (+ 32 x1086))) (= x1373 (x2893 (+ x689 32))) (= (< 0 x2808) x1597)) x2341) (and (=> (not x1597) x565) (=> (and x1597 (and (= x673 (x1944 x2042)) (= x2728 (> x2808 32)))) (and (=> (and x2728 (and (= x473 (x242 x1046)) (= x2215 (> x2808 64)) (= (x2893 (+ x379 32)) x2659) (= (x2893 (+ x2042 32)) x1046))) (and (=> (and (and (= (> x2808 96) x2943) (= x714 (x2893 (+ 64 x2042))) (= (x2893 (+ x379 64)) x1518) (= (x609 x714) x427)) x2215) (and (=> (not x2943) x565) (=> x2943 x1547))) (=> (not x2215) x565))) (=> (not x2728) x565)))))))))
(assert (x246 x2088))
(assert (x246 x2014))
(assert (=> (<= x1686 10000) (= (x1945 x1686) 0)))
(assert (= (and (not x2238) x249) x354))
(assert (not (x2367 (x785 x2972 x341 x1805))))
(assert (x246 x1288))
(assert (x3077 x1933))
(assert (x246 x1391))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639618)))
(assert (x246 x209))
(assert (=> (>= 10000 x1041) (= (x1945 x1041) 0)))
(assert (x246 x2542))
(assert (x246 x1747))
(assert (x246 x1029))
(assert (x246 x2684))
(assert (= x1173 (x175 (x2322 x1173 x848 x3096 x1507))))
(assert (= x1171 (=> (and (or x2767 (and (and (= x954 (x2893 (+ 32 x1104))) (= (* 32 x748) x448)) (not x2767))) (and (= (* x748 32) x1776) (= x2311 (x2893 (+ 32 x2611))) (= x124 (x1300 1461501637330902918203684832716283019655932542975 x2355)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x1965) (<= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639646)) (= x2146 (x2893 (+ 64 x710))) (= (x1300 1461501637330902918203684832716283019655932542975 x887) x1806) (= x1348 (x2893 (+ 32 x2311))) (< x1965 x1104) (= x2738 (x2893 (+ 32 x3065))) (= x203 (x687 x1424)) (= x2948 (x2893 (+ (mod (+ x1776 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1104))) (= (x1300 1461501637330902918203684832716283019655932542975 x2841) x1733) (= x279 (x2893 (+ 32 x1750))) (= (x687 x203) x748) (>= x2948 2) (= x2611 (x2893 (+ x52 32))) (or (<= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639646) (>= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639649)) (= (x3091 192) x3065) (= x896 (x3141 160)) (= (x981 x2079) x829) (= x1104 (x2893 (+ 288 x1965))) (= x1750 (x2893 (+ 32 x1424))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x1965) (<= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639646)) (= (x3091 x2738) x1950) (= x1367 (x328 x2464)) (<= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x2079 (x981 192)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x1965) (<= x1965 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 18446744073709551615 x748) (= x2355 (x2989 256)) (= x2735 (x2893 (+ x1950 x329))) (= x2841 (x1728 x186)) (not (>= (+ x1950 x329) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 2 x829) (= (x2893 (+ 32 x279)) x809) (= x710 (x1158 192)) (= x52 (x2893 (+ 32 x809))) (= x2767 (= x748 0)) (< x1104 x2948) (= x1424 (x2893 (+ 32 x1965))) (= (x3141 x896) x887) (= x2740 (x1158 x2146)))) x394)))
(assert (x246 x421))
(assert (= x1847 (x1087 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (= (=> (and (= (x2893 (+ 96 x2776)) x3138) (= (x3021 x3138) x902) (= x128 (x2893 (+ 96 x2228))) (= x1249 (not (> x2507 128)))) (and x927 x1249)) x2082))
(assert (x246 x865))
(assert (x246 x2553))
(assert (x246 x3120))
(assert (x246 x1865))
(assert (x246 x1934))
(assert (x246 x157))
(assert (x246 x985))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x246 x2035))
(assert (x246 x2453))
(assert (x246 x1083))
(assert (= (x1945 (x785 x1929 x2986 x38)) (x785 x1929 x2986 x38)))
(assert (= x112 (x228 (x785 x2088 x112 x2454))))
(assert (x246 x1173))
(assert (=> (>= 10000 x1780) (= 0 (x1945 x1780))))
(assert (=> (<= x1726 10000) (= (x1945 x1726) 0)))
(assert (=> (>= 10000 x341) (= (x1945 x341) 0)))
(assert (= x2063 (x1087 (x2947 x2088 x1809 x2063 x264 x44))))
(assert (= x2662 (and (not x2060) x921)))
(assert (= (x1087 (x2947 x2326 x2831 x2354 x1315 x1778)) x2354))
(assert (= (x1945 (x2947 x2826 x1545 x293 x2035 x2941)) (x2947 x2826 x1545 x293 x2035 x2941)))
(assert (x246 x1433))
(assert (x246 x2196))
(assert (x246 x2946))
(assert (x246 x2972))
(assert (x246 x3024))
(assert (=> (>= 10000 x257) (= (x1945 x257) 0)))
(assert (x2367 2065879269444))
(assert (= (x2322 x2088 x2687 x2333 x1472) (x1945 (x2322 x2088 x2687 x2333 x1472))))
(assert (x246 x3117))
(assert (x246 x915))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (= (x228 (x2947 x1173 x1431 x1239 x996 x800)) x1431))
(assert (x246 x237))
(assert (x246 x1212))
(assert (x246 x186))
(assert (= x1539 (x24 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (not (x2367 (x2947 x2669 x709 x3005 x2192 x672))))
(assert (= x2326 (x175 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679))))
(assert (= x1108 (and (not x2317) x3082)))
(assert (x246 x1513))
(assert (x246 x133))
(assert (= x2972 (x175 (x3027 x2972 x1786))))
(assert (x246 x229))
(assert (x246 x1922))
(assert (x246 x2404))
(assert (x246 x1679))
(assert (x246 x2802))
(assert (x246 x1331))
(assert (x246 x172))
(assert (x246 x1576))
(assert (= x1929 (x175 (x2947 x1929 x2404 x2650 x675 x1587))))
(assert (= (x3016 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x504))
(assert (= (x228 (x2322 x2826 x1140 x414 x2262)) x1140))
(assert (x246 x3126))
(assert (x246 x2393))
(assert (= x2476 (x2781 (x2947 x2104 x2281 x2026 x1736 x2476))))
(assert (=> (<= x638 10000) (= (x1945 x638) 0)))
(assert (= x1530 (and x3162 x10)))
(assert (x246 x2291))
(assert (= (x100 x2088 x2328 x2612 x957 x965 x504 x1826) (x1945 (x100 x2088 x2328 x2612 x957 x965 x504 x1826))))
(assert (x246 x778))
(assert (x246 x3103))
(assert (= (x1945 57896044618658097711785492504343953926634992332820282019728792003956564820100) 0))
(assert (=> (>= 10000 x2538) (= (x1945 x2538) 0)))
(assert (x246 x2836))
(assert (= x2088 (x175 (x588 x2088 x2756 x2432 x1993 x335 x2415))))
(assert (= x2790 (x2781 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (x246 x160))
(assert (not (x2367 (x3027 x2826 x458))))
(assert (x246 x1436))
(assert (=> (>= 10000 x924) (= 0 (x1945 x924))))
(assert (x246 x904))
(assert (x246 x2631))
(assert (x246 x729))
(assert (x246 x830))
(assert (x246 x1188))
(assert (x246 x21))
(assert (= x2104 (x175 (x588 x2104 x557 x1544 x1686 x1756 x2868))))
(assert (x246 x1324))
(assert (x246 x1709))
(assert (= (=> (= (= 0 x2984) x2238) (and (=> x2238 x1054) (=> (and (and (<= x1371 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2758 (x2546 x1578)) (not (= x1371 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (< x1371 x2490) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1371) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1371)) (= x2490 (x2893 (+ 32 x1371))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1371) (= x866 (> x2758 0)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1371))) (not x2238)) (and (=> (and (and (and (= x1314 (> x1990 0)) (= x2458 (x2546 x528)) (= (x2546 x1578) x1987) (= (ite (= 0 x1665) 1 0) x1990) (= x528 (x2893 (+ x1578 32))) (<= x1665 2) (>= x1987 1) (= (x2546 x2458) x1665)) (or (and (and (<= x1552 2) (= (ite (= 1 x1552) 1 0) x603) (= x1552 (x2546 x2458)) (= x1922 x603)) (not x1314)) (and x1314 (= x1990 x1922)))) x866) x2236) (=> (and (= x2490 x1965) (not x866)) x1171))))) x270))
(assert (x246 x2978))
(assert (< (x785 x2326 x2705 x2092) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2107))
(assert (x246 x894))
(assert (= x908 (x1480 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442))))
(assert (x246 x221))
(assert (x246 x1162))
(assert (x246 x3125))
(assert (= (x228 (x2322 x1269 x537 x1389 x529)) x537))
(assert (=> (<= x2415 10000) (= (x1945 x2415) 0)))
(assert (x246 x2945))
(assert (= (and x395 x320) x1729))
(assert (< (x2322 x2326 x2242 x1297 x194) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x184))
(assert (> (x2947 x2326 x2831 x2354 x1315 x1778) 10000))
(assert (= x226 (x24 (x588 x2326 x218 x895 x226 x1240 x2010))))
(assert (x246 x1654))
(assert (x246 x201))
(assert (x246 x1966))
(assert (x246 x2651))
(assert (x246 x774))
(assert (x246 x3123))
(assert (= (=> (= x1463 (= x1922 0)) (and (=> (not x1463) x2284) (=> (and (= x1895 x2490) x1463) x551))) x2236))
(assert (x246 x1118))
(assert (=> (>= 10000 x2681) (= 0 (x1945 x2681))))
(assert (x246 x802))
(assert (x246 x1743))
(assert (=> (>= 10000 x1119) (= (x1945 x1119) 0)))
(assert (x246 x2897))
(assert (x246 x2380))
(assert (x1630 x103))
(assert (x246 x2585))
(assert (=> (>= 10000 x1631) (= (x1945 x1631) 0)))
(assert (x246 x3163))
(assert (x246 x505))
(assert (x246 x2293))
(assert (x246 x1133))
(assert (x1630 x1420))
(assert (=> (<= x1472 10000) (= 0 (x1945 x1472))))
(assert (x246 x3087))
(assert (=> (>= 10000 x2544) (= (x1945 x2544) 0)))
(assert (=> (<= x2300 10000) (= 0 (x1945 x2300))))
(assert (= x2627 (=> (and (= (< 0 x2607) x1146) (= x701 (x1149 (- x7 x1924))) (= x1225 (x2893 (+ 32 x7))) (= x605 (x2893 (+ 32 x375))) (= x1357 (mod (* 32 x2607) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2893 (+ 32 x2143)) x1455) (= x1068 (x2893 (+ x1225 x1357))) (= x2607 (x2528 x375))) (and (=> (and (and (= (x2893 (+ x3116 32)) x2224) (= x2818 (x1300 1461501637330902918203684832716283019655932542975 x885)) (= (x2893 (+ x273 32)) x3116) (= x413 (x2893 (+ x1426 32))) (= x261 (x683 x2224)) (= (x2768 x273) x885) (= x1426 (x2893 (+ x1068 32))) (= x2145 (x2772 x261)) (= (x1065 x3116) x245) (= x273 (x2768 x605)) (= x148 (< 0 x2145))) x1146) (and (=> (not x148) x1939) (=> (and x148 (= x821 (< 32 x2145))) (and (=> (and x821 (= x374 (< 64 x2145))) (and (=> (not x374) x1939) (=> (and (= (> x2145 96) x2887) x374) (and (=> x2887 x3130) (=> (not x2887) x1939))))) (=> (not x821) x1939))))) (=> (and (not x1146) (and (= x548 x1225) (= 0 x1308) (= x1767 x605))) x2829)))))
(assert (= (x228 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x2848))
(assert (x246 x2705))
(assert (x246 x2622))
(assert (=> (<= x2835 10000) (= (x1945 x2835) 0)))
(assert (= x477 (x228 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595))))
(assert (< (x2322 x1929 x1267 x756 x2221) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1970 (and (not x384) x2125)))
(assert (= (and x1479 x1227) x1666))
(assert (= (x228 (x785 x2151 x513 x433)) x513))
(assert (= (x1945 1889567281) 0))
(assert (x246 x937))
(assert (x246 x1026))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (=> (>= 10000 x1751) (= (x1945 x1751) 0)))
(assert (=> (<= x2076 10000) (= (x1945 x2076) 0)))
(assert (x246 x1383))
(assert (=> (>= 10000 x1294) (= (x1945 x1294) 0)))
(assert (= x2397 (x24 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885))))
(assert (= x1898 (x1087 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (x246 x392))
(assert (x246 x2525))
(assert (=> (<= x112 10000) (= 0 (x1945 x112))))
(assert (= x2491 (x2781 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527))))
(assert (=> (<= x1608 10000) (= (x1945 x1608) 0)))
(assert (x246 x126))
(assert (= (x3016 (x588 x1269 x862 x1525 x1594 x722 x1564)) x1564))
(assert (x246 x2333))
(assert (x246 x1813))
(assert (not (x2367 (x2947 x1375 x2681 x2625 x755 x1882))))
(assert (x246 x2939))
(assert (= x3129 (x175 (x2322 x3129 x138 x479 x789))))
(assert (x246 x279))
(assert (= x1899 (x1087 (x785 x1206 x1817 x1899))))
(assert (x1105 x1959))
(assert (= (x1945 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)))
(assert (x246 x1371))
(assert (x3077 x461))
(assert (= x433 (x1087 (x785 x2151 x513 x433))))
(assert (= x2990 (x2781 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (x246 x908))
(assert (= x1260 (x1087 (x588 x1929 x300 x1260 x86 x3024 x627))))
(assert (x246 x610))
(assert (= (x228 (x588 x2088 x2756 x2432 x1993 x335 x2415)) x2756))
(assert (= (x175 (x2947 x3129 x1966 x1100 x229 x2923)) x3129))
(assert (x246 x1432))
(assert (x246 x548))
(assert (x246 x1672))
(assert (x246 x2161))
(assert (= (x24 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151)) x893))
(assert (x246 x1019))
(assert (x246 x437))
(assert (= x942 (or x2017 x1534 x2497 x745 x2178)))
(assert (x246 x1485))
(assert (x246 x1659))
(assert (x246 x447))
(assert (x246 x807))
(assert (= (x3016 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) x602))
(assert (=> (<= x865 10000) (= 0 (x1945 x865))))
(assert (< 10000 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)))
(assert (x246 x2901))
(assert (not (x2367 (x2322 x2326 x2242 x1297 x194))))
(assert (> (x3027 x1206 x1753) 10000))
(assert (x246 x673))
(assert (= (x2689 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) x2527))
(assert (x246 x1750))
(assert (x246 x2276))
(assert (x246 x513))
(assert (x246 x843))
(assert (x246 x1786))
(assert (=> (>= 10000 x2657) (= (x1945 x2657) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x2972 x851 x1878 x1078)))
(assert (=> (>= 10000 x361) (= (x1945 x361) 0)))
(assert (x246 x3128))
(assert (= (x1480 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) x1885))
(assert (=> (<= x2669 10000) (= 0 (x1945 x2669))))
(assert (x246 x1888))
(assert (= x5 (=> (and (or (and (> x2583 x1632) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1632) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2583))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1632) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2583))) (= (x2893 (+ x3088 x639)) x3081) (= x2632 (x2893 (+ 32 x1458))) (= (x2032 x2277) x720) (not (< x1220 x658)) (= x1632 (x2032 228)) (<= x391 18446744073709551615) (= (x2032 x639) x3088) (= (+ x771 448) x2640) (<= x2023 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (* x2481 32) x200) (= x845 (x1149 (- x1220 x3081))) (= x570 (x2032 x3127)) (or (and (= (<= x2181 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220)) (< x2181 x1220)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220) (> x2181 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (> x658 x2632) x2128) (= x3127 (x2893 (+ x1632 36))) (= (x2893 (+ x3081 x391)) x2277) (= x2821 (x2893 (+ x1358 32))) (= x391 (x2032 x595)) (>= 18446744073709551167 x771) (= x1458 (x2893 (+ x1542 x2277))) (= (x2032 x3081) x2666) (<= x1542 18446744073709551615) (= (x2893 (+ 32 x2277)) x1358) (or (>= x1458 57896044618658097711785492504343953926634992332820282019728792003956564820036) (>= 18446746139588821027 x1458)) (not (or (and (< x2897 x639) (= (<= x2897 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x639 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x639 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2897 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (>= x1632 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x1632 2065879269376)) (<= x720 2) (<= 128 x845) (or (<= x1220 18446746139588821059) (>= x1220 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= x2602 160) (= x1991 (x2032 x1358)) (= x2583 (- x212 67)) (= x1542 (x2032 x2821)) (= (x1149 (- x1220 x2277)) x2023) (= x658 (x2893 (+ x2632 x1026))) (<= x845 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x2893 (+ x3127 32)) x639) (= x1794 1) (>= 1461501637330902918203684832716283019655932542975 x2666) (>= x771 1) (>= 18446744073709551615 x3088) (= x2181 (x2893 (+ x1458 31))) (= x771 (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x960)) (= x2897 (x1149 (- x212 x570))) (>= 18446744073709551615 x2481) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x570) (= (x1623 128) x1794) (>= x2023 128) (= (x2893 (+ x570 x639)) x1220) (<= 1 x872) (= x595 (x2893 (+ x3081 32))) (or (>= x3081 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x3081 18446746139588821027)) (or (>= 18446746139588821027 x2277) (>= x2277 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (= (+ x200 63) x960) (>= 18446744073709551615 x570) (= x1026 (* 32 x2481)) (<= 64 x570) (= (x2032 x1458) x2481)) (and (=> (and (= x424 x2640) (not x2128)) x1334) (=> x2128 x1215)))))
(assert (x246 x1214))
(assert (= (or x3007 x1039 x1360 x2774 x1084) x3111))
(assert (x246 x1453))
(assert (x246 x1232))
(assert (x246 x720))
(assert (x246 x2722))
(assert (not (x2367 (x2947 x1929 x2404 x2650 x675 x1587))))
(assert (x246 x828))
(assert (= (x2689 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) x786))
(assert (= (and (not x2176) x1567) x2435))
(assert (= (and x2574 x107) x921))
(assert (= x268 (x228 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (x246 x2320))
(assert (x246 x682))
(assert (x246 x885))
(assert (x246 x1204))
(assert (= x2178 (and x2879 (not x2444))))
(assert (x246 x226))
(assert (x246 x2515))
(assert (not (x2367 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (x246 x490))
(assert (x246 x2793))
(assert (not (x2367 (x2322 x2088 x2687 x2333 x1472))))
(assert (x246 x2079))
(assert (x246 x1929))
(assert (=> (>= 10000 x1173) (= (x1945 x1173) 0)))
(assert (x246 x2111))
(assert (= (and x1772 x2379) x1005))
(assert (x246 x545))
(assert (= x2669 (x175 (x2322 x2669 x1741 x1726 x2710))))
(assert (= (x175 (x3027 x2025 x2967)) x2025))
(assert (= (x2781 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87)) x509))
(assert (x246 x111))
(assert (x246 x1935))
(assert (x246 x1992))
(assert (= x14 (x24 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (< (x2947 x2326 x2831 x2354 x1315 x1778) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2073))
(assert (= x2104 (x175 (x3027 x2104 x2664))))
(assert (x1105 x2422))
(assert (x246 x2303))
(assert (x246 x946))
(assert (=> (>= 10000 x2034) (= (x1945 x2034) 0)))
(assert (x246 x2857))
(assert (x246 x1486))
(assert (x246 x2382))
(assert (= x2775 (and x2074 (not x2383))))
(assert (= (and x401 x2128) x591))
(assert (x246 x2902))
(assert (= x1240 (x2781 (x588 x2326 x218 x895 x226 x1240 x2010))))
(assert (x246 x1121))
(assert (= x2701 (and (not x707) x2766)))
(assert (= (x228 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)) x2111))
(assert (x246 x2776))
(assert (x246 x2933))
(assert (= x2034 (x2781 (x2947 x2972 x650 x697 x554 x2034))))
(assert (> (x3027 x2151 x1515) 10000))
(assert (x3077 x864))
(assert (x246 x996))
(assert (not (x2367 (x785 x2088 x112 x2454))))
(assert (x246 x2498))
(assert (=> (<= x1594 10000) (= (x1945 x1594) 0)))
(assert (x246 x2000))
(assert (x246 x2304))
(assert (> (x785 x2972 x341 x1805) 10000))
(assert (x246 x2168))
(assert (x246 x113))
(assert (x246 x1741))
(assert (x246 x342))
(assert (=> (>= 10000 x1260) (= (x1945 x1260) 0)))
(assert (=> (>= 10000 x1993) (= (x1945 x1993) 0)))
(assert (x246 x1170))
(assert (=> (>= 10000 x2221) (= (x1945 x2221) 0)))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x162) (= x3056 (x1149 (- x2203 32))) (= x1629 (x2893 (+ x1687 1))) (= (x2893 (+ x2339 x3056)) x359) (= (x2893 (+ 32 x1371)) x2339) (= x2358 (x2441 x1371)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x359)) (= x2055 (x2893 (+ x1077 32))) (= x2389 (x2893 (+ 64 x2358))) (> x2055 x162) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x162) (= x2055 x1895) (= x2203 (mod (* x1629 64) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1687 (x2441 x2339)) (= x1077 (x2893 (+ x359 32)))) x551) x1685))
(assert (< 10000 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)))
(assert (x246 x3056))
(assert (=> (>= 10000 x2896) (= (x1945 x2896) 0)))
(assert (not (x2367 (x2947 x1206 x22 x141 x1119 x924))))
(assert (= x2359 (or x2435 x1370)))
(assert (= (x1945 (x588 x1206 x1093 x2264 x323 x2790 x796)) (x588 x1206 x1093 x2264 x323 x2790 x796)))
(assert (x246 x2483))
(assert (> (x785 x2025 x2235 x1238) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x2088 x112 x2454)))
(assert (= (and x1729 (not x423)) x1551))
(assert (= (x175 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x2151))
(assert (= x627 (x3016 (x588 x1929 x300 x1260 x86 x3024 x627))))
(assert (= (x1087 (x588 x1375 x589 x562 x1661 x2777 x2191)) x562))
(assert (= (x1087 (x2947 x2151 x406 x1887 x1559 x865)) x1887))
(assert (=> (>= 10000 x44) (= 0 (x1945 x44))))
(assert (x246 x2339))
(assert (= x3162 (or x2420 x2762)))
(assert (< 10000 (x2947 x2151 x406 x1887 x1559 x865)))
(assert (= (x24 (x2947 x1269 x2280 x182 x2371 x1302)) x2371))
(assert (= (or x108 x1697) x2596))
(assert (x246 x3026))
(assert (x246 x573))
(assert (x246 x137))
(assert (< (x785 x2669 x2862 x1788) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2860))
(assert (not (x2367 (x3027 x2151 x1515))))
(assert (= x2669 (x175 (x785 x2669 x2862 x1788))))
(assert (x1105 x887))
(assert (=> (<= x1269 10000) (= 0 (x1945 x1269))))
(assert (x246 x385))
(assert (x246 x1791))
(assert (= (x175 (x3027 x3129 x2865)) x3129))
(assert (x246 x50))
(assert (x246 x2246))
(assert (x246 x1137))
(assert (x246 x1883))
(assert (= x2369 (x24 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (= (x588 x1929 x300 x1260 x86 x3024 x627) (x1945 (x588 x1929 x300 x1260 x86 x3024 x627))))
(assert (=> (>= 10000 x2336) (= (x1945 x2336) 0)))
(assert (x246 x1225))
(assert (x246 x2307))
(assert (= (x175 (x785 x1929 x2986 x38)) x1929))
(assert (x246 x516))
(assert (= (x785 x2025 x2235 x1238) (x1945 (x785 x2025 x2235 x1238))))
(assert (x246 x264))
(assert (=> (<= x1239 10000) (= (x1945 x1239) 0)))
(assert (x246 x1422))
(assert (x246 x3137))
(assert (not (x2367 (x785 x3129 x1751 x1029))))
(assert (x246 x2923))
(assert (= (x175 (x2947 x1206 x22 x141 x1119 x924)) x1206))
(assert (x246 x2106))
(assert (=> (>= 10000 x741) (= 0 (x1945 x741))))
(assert (=> (<= x87 10000) (= (x1945 x87) 0)))
(assert (x246 x2756))
(assert (x246 x460))
(assert (x246 x54))
(assert (=> (>= 10000 x2417) (= (x1945 x2417) 0)))
(assert (x246 x1665))
(assert (x246 x420))
(assert (x246 x2048))
(assert (x246 x144))
(assert (x3077 1461501637330902918203684832716283019655932542975))
(assert (x246 x2661))
(assert (= (x2689 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208)) x1208))
(assert (=> (>= 10000 x1709) (= (x1945 x1709) 0)))
(assert (x246 x2821))
(assert (= x1751 (x228 (x785 x3129 x1751 x1029))))
(assert (= x957 (x24 (x100 x2088 x2328 x2612 x957 x965 x504 x1826))))
(assert (=> (<= x989 10000) (= (x1945 x989) 0)))
(assert (= (x1087 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595)) x1676))
(assert (= (x2781 (x588 x2669 x462 x1244 x1460 x3093 x741)) x3093))
(assert (x246 x1202))
(assert (= x1269 (x175 (x785 x1269 x383 x2876))))
(assert (x246 x2346))
(assert (=> (<= x3083 10000) (= (x1945 x3083) 0)))
(assert (x246 x1818))
(assert (= 0 (x1945 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (= (x175 (x785 x2088 x112 x2454)) x2088))
(assert (x246 x124))
(assert (= (x1480 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)) x275))
(assert (x246 x2771))
(assert (= x2834 (x24 (x2322 x2151 x1017 x847 x2834))))
(assert (> (x588 x2151 x361 x2336 x2369 x989 x377) 10000))
(assert (= (and (not x2429) x2567) x2516))
(assert (= x1042 (x2689 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (x246 x773))
(assert (= x1328 (and x1169 (not x2721))))
(assert (x246 x1460))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 64 x257 1)))
(assert (=> (<= x620 10000) (= 0 (x1945 x620))))
(assert (x246 x2687))
(assert (=> (<= x1805 10000) (= (x1945 x1805) 0)))
(assert (= (x1945 88383320980755791914082775550597828907713979028428263264130000526486271950848) 0))
(assert (=> (<= x2139 10000) (= 0 (x1945 x2139))))
(assert (= (x2322 x2826 x1140 x414 x2262) (x1945 (x2322 x2826 x1140 x414 x2262))))
(assert (x246 x784))
(assert (x246 x814))
(assert (x2367 1889567281))
(assert (x246 x608))
(assert (= (x228 (x588 x2025 x444 x824 x2657 x728 x641)) x444))
(assert (x246 x2237))
(assert (x246 x849))
(assert (x246 x1174))
(assert (x246 x1374))
(assert (x2367 18446746139588821059))
(assert (x246 x1841))
(assert (=> (<= x300 10000) (= (x1945 x300) 0)))
(assert (x246 x2570))
(assert (x246 x2819))
(assert (= x1880 (x24 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (= x2532 (x3016 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (=> (<= x803 10000) (= 0 (x1945 x803))))
(assert (x246 x2600))
(assert (x246 x623))
(assert (x246 x1398))
(assert (x246 x988))
(assert (=> (<= x962 10000) (= (x1945 x962) 0)))
(assert (x246 x3076))
(assert (x246 x2086))
(assert (= (and (not x2343) x2566) x1697))
(assert (=> (>= 10000 x2837) (= (x1945 x2837) 0)))
(assert (x246 x2454))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x246 x2559))
(assert (=> (<= x519 10000) (= 0 (x1945 x519))))
(assert (= (=> (and (= x1038 (not (> x2303 1))) (= x2303 (x794 x217))) (and x1038 (=> (and (= x744 x873) (= x2933 x352)) x738))) x2938))
(assert (x246 x2659))
(assert (=> (>= 10000 x1315) (= (x1945 x1315) 0)))
(assert (= (x24 (x588 x2104 x557 x1544 x1686 x1756 x2868)) x1686))
(assert (x246 x3020))
(assert (x246 x2737))
(assert (x246 x1712))
(assert (=> (<= x2622 10000) (= 0 (x1945 x2622))))
(assert (x246 x2282))
(assert (x246 x302))
(assert (x246 x2371))
(assert (x246 x840))
(assert (=> (>= 10000 x21) (= 0 (x1945 x21))))
(assert (= (x175 (x2322 x2025 x2084 x1246 x336)) x2025))
(assert (= x1789 (and x171 (not x1597))))
(assert (x246 x1726))
(assert (x246 x406))
(assert (x246 x1608))
(assert (x246 x1104))
(assert (= x2972 (x175 (x2322 x2972 x851 x1878 x1078))))
(assert (x246 x1663))
(assert (x246 x1507))
(assert (x246 x1794))
(assert (= (x1945 (x785 x1206 x1817 x1899)) (x785 x1206 x1817 x1899)))
(assert (x246 x1423))
(assert (x246 x1715))
(assert (x246 x884))
(assert (= x1375 (x175 (x3027 x1375 x846))))
(assert (x246 x511))
(assert (= x3059 (and x615 x2562)))
(assert (x246 x2394))
(assert (x246 x1711))
(assert (= (x2781 (x2947 x2326 x2831 x2354 x1315 x1778)) x1778))
(assert (= (and x2147 x2516) x2266))
(assert (= (x3016 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)) x1893))
(assert (= (x228 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x2244))
(assert (x246 x702))
(assert (> (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208) 10000))
(assert (x246 x2965))
(assert (= x762 (and x2267 x2943)))
(assert (x246 x852))
(assert (< 10000 (x588 x1173 x2987 x1228 x2195 x3018 x2061)))
(assert (x246 x2217))
(assert (=> (<= x993 10000) (= 0 (x1945 x993))))
(assert (x246 x835))
(assert (=> (<= x1521 10000) (= (x1945 x1521) 0)))
(assert (= (x228 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)) x3112))
(assert (=> (>= 10000 x2015) (= (x1945 x2015) 0)))
(assert (x246 x426))
(assert (> (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780) 10000))
(assert (x246 x1458))
(assert (= x2669 (x175 (x2947 x2669 x709 x3005 x2192 x672))))
(assert (x246 x2326))
(assert (not (x2367 (x785 x2025 x2235 x1238))))
(assert (=> (>= 10000 x2703) (= 0 (x1945 x2703))))
(assert (x246 x398))
(assert (= (and x2913 x67) x615))
(assert (> (x2322 x2088 x2687 x2333 x1472) 10000))
(assert (x246 x1128))
(assert (= x2025 (x175 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (x246 x2219))
(assert (= (=> (and (= x1914 (>= 224 x2025)) (= (x2893 (+ 32 x1318)) x2880) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x1048)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1048) (<= x1048 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x667 (x2893 (+ 32 x1048))) (>= 1 x1137) (= x1846 (x2893 (+ x3006 32))) (= x2902 (x2893 (+ 32 x445))) (= (x1149 (- x1580 x1048)) x3023) (= x1743 (x1300 1461501637330902918203684832716283019655932542975 x2135)) (= (x1648 x3006) x1137) (= x2025 (x2506 x1048)) (= (x1648 x2921) x142) (= x1318 (x1648 x1424)) (= (x2893 (+ 192 x155)) x1580) (= x155 (x2893 (+ x1048 32))) (= x3006 (x2893 (+ 32 x1392))) (= (x1648 x1318) x3026) (= x495 (x1149 (- x3023 32))) (= (x2893 (+ 32 x155)) x445) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x1048)) (<= x1393 2) (= (x1648 x1846) x2135) (<= x1048 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x679 (x2893 (+ x2902 32))) (< x1048 x1580) (= x2648 (x2893 (+ 32 x2921))) (not (= x1048 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= (x1648 x2648) x1705) (= (x2893 (+ 32 x679)) x1425) (= (x1648 x2880) x1392) (= (x1648 x1392) x1393) (= (x2893 (+ x1846 32)) x2921) (= (x2893 (+ x1425 32)) x2903) (<= 1 x3026)) (and (=> (and (= (x2506 x2647) x655) (= x778 (x2893 (+ x667 192))) (= x415 (x2506 x2912)) (= (x2506 x2889) x2657) (= (x2893 (+ x667 96)) x2698) (= (x2506 x667) x2084) (= (x785 x2025 x2235 x1238) x2114) (= (x2506 x2959) x3118) (= x1041 (x2506 x2624)) (= (x2506 x1967) x735) (= (x2893 (+ 64 x667)) x2552) (= x457 (x2506 x667)) (= x724 (x100 x2025 x457 x2946 x1041 x655 x735 x2223)) (= x1120 (x2893 (+ 64 x667))) (= (x2893 (+ 128 x667)) x1453) (= x2624 (x2893 (+ x667 64))) (= x2334 (x1299 0)) (>= x2234 1) (= x546 (x2893 (+ 32 x667))) (= x2946 (x2506 x2620)) (= (x2893 (+ 32 x667)) x1133) (= (x2893 (+ 96 x667)) x2069) (= x2967 (x2506 x667)) (= (x2506 x1133) x77) (= (x2506 x3031) x2223) (= x2647 (x2893 (+ x667 96))) (= (x2506 x667) x1168) (= x1153 (x2322 x2025 x2084 x1246 x336)) (= (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042) x1194) (= (x2893 (+ 32 x667)) x670) (= x1823 (x1464 x1680)) (= x2234 (x2506 x1104)) (= x824 (x2506 x546)) (= (x3027 x2025 x2967) x2755) (= (x2893 (+ 160 x667)) x2912) (= x728 (x2506 x2698)) (= x984 (x2947 x2025 x1168 x77 x1118 x234)) (= (x2506 x2093) x1118) (= x444 (x2506 x667)) (= x438 (x2893 (+ 32 x1104))) (= (x2893 (+ 64 x667)) x2093) (= (x2893 (+ x667 64)) x2889) (= (not (< 1 x1823)) x1441) (= x2235 (x2506 x667)) (= (x2506 x1120) x336) (= x234 (x2506 x2069)) (= x1238 (x2506 x670)) (= (x2506 x1272) x641) (= (x2893 (+ 128 x667)) x1272) (= (x2506 x1453) x2532) (= x2959 (x2893 (+ x667 32))) (= x1246 (x2506 x176)) (= (x2506 x667) x268) (= (x2506 x778) x1042) (= (x2506 x1892) x2898) (= (ite (= 0 x2025) x2334 (ite (<= x2025 32) x2755 (ite (>= 64 x2025) x2114 (ite (<= x2025 96) x1153 (ite (<= x2025 128) x984 (ite (>= 160 x2025) x2059 (ite (<= x2025 192) x724 (ite (<= x2025 224) x1194 x1222)))))))) x187) (= x176 (x2893 (+ 32 x667))) (= x2620 (x2893 (+ 32 x667))) (= x2059 (x588 x2025 x444 x824 x2657 x728 x641)) (= x1892 (x2893 (+ x667 96))) (= (x2893 (+ x667 160)) x3031) (= x1680 (x1464 x1424)) (= x2538 (x2506 x2552)) (= x1967 (x2893 (+ x667 128)))) (and (=> (= x1580 x2696) x1958) x1441)) x1914)) x1869))
(assert (x246 x2504))
(assert (x3077 x1420))
(assert (= x1294 (x2781 (x588 x2826 x470 x535 x505 x1294 x389))))
(assert (x246 x438))
(assert (x246 x1542))
(assert (= x874 (x1480 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (x246 x2449))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (= (=> (and (= (ite (= x882 0) 1 0) x2651) (= (= x2651 0) x512) (<= x882 2)) (and (=> (and x512 (and (= (ite (= x882 1) 1 0) x2542) (= x2429 (= x2542 0)))) (and (=> (and x2429 (and (= (< 0 x1309) x2913) (= 0 x2812) (= (x794 x217) x1309) (= x882 2) (= x2812 (x794 x1815)) (= 1 x2400))) (and (=> (and (not x2913) (and (= x744 0) (= 0 x352))) x738) (=> (and (and (= (ite (= 1 x216) 1 0) x711) (= (x794 x217) x137) (= x490 (x2893 (+ x217 32))) (>= 5 x216) (= (= x711 0) x2562) (= (x794 x490) x2301) (= x216 (x794 x2301)) (>= x137 1)) x2913) (and (=> (and (and (and (= (x794 x2301) x2425) (= x1822 (ite (= x2425 2) 1 0)) (<= x2425 5) (= x2463 (> x1822 0))) (or (and (not x2463) (and (= 1 x1782) (= x411 3) (= (x794 x2301) x411))) (and x2463 (= 1 x1822)))) x2562) x531) (=> (and (and (= 1 x873) (= 0 x2933)) (not x2562)) x2938))))) (=> (and (not x2429) (and (= (> x1306 0) x2147) (= x3149 0) (= (x794 x1815) x1306))) (and (=> (and (not x2147) (and (= 0 x1433) (= x729 x2094) (= x2545 0))) x2789) (=> (and (and (= (x794 x1432) x2995) (<= x2995 5) (= (x794 x222) x1432) (= x1487 (x794 x1815)) (= (x2893 (+ 32 x1815)) x222) (= (= 0 x1853) x1718) (= x1853 (ite (= 2 x2995) 1 0)) (<= 1 x1487)) x2147) (and (=> (and x1718 (and (and (>= 5 x72) (= x2208 (= x1291 0)) (= (ite (= 3 x72) 1 0) x1291) (= x72 (x794 x1432))) (or (and (and (= 1 x3010) (= 2 x1848) (= x1986 1) (= 0 x25) (= x1986 (x794 x1432)) (= x685 1) (= 1 x964)) x2208) (and (not x2208) (and (= x1848 1) (= 1 x25) (= 0 x964) (= 0 x685)))))) x1138) (=> (and (and (= 0 x2124) (= 1 x2914) (= 0 x1143) (= 0 x2847)) (not x1718)) x2589))))))) (=> (and (not x512) (and (>= x1324 1) (= x459 0) (= x1324 (x794 x1815)) (= x854 (< 0 x1992)) (= x1992 (x794 x1815)))) (and (=> (and x854 (and (or (and x707 (and (= 1 x626) (= (x794 x1161) x133) (= 1 x2142) (= 3 x133))) (and (not x707) (= x626 0))) (and (= (x794 x1815) x1484) (= x611 (ite (= x1635 2) 1 0)) (>= 5 x1635) (>= x1484 1) (= x1635 (x794 x1161)) (= (x794 x3105) x1161) (= (= x611 0) x707) (= (x2893 (+ x1815 32)) x3105)))) x2674) (=> (and (not x854) (= x2094 x46)) x1064))))) x2853))
(assert (x246 x2485))
(assert (= (x24 (x588 x1269 x862 x1525 x1594 x722 x1564)) x1594))
(assert (> (x3027 x2326 x736) 10000))
(assert (x246 x1213))
(assert (= x725 (and x705 x1091)))
(assert (x246 x3040))
(assert (= (and x2317 x3082) x2251))
(assert (= (x588 x2326 x218 x895 x226 x1240 x2010) (x1945 (x588 x2326 x218 x895 x226 x1240 x2010))))
(assert (not (x2367 (x785 x1173 x2679 x1640))))
(assert (= (and (not x1531) x1662) x2895))
(assert (x246 x662))
(assert (= x1477 (=> (and (= x1085 (x2893 (+ 96 x856))) (= x3080 (x2893 (+ x2163 96))) (= (not (< 128 x211)) x262) (= x19 (x1667 x3080))) (and x262 x2312))))
(assert (x246 x1274))
(assert (< (x3027 x2326 x736) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2941))
(assert (= (x3016 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208)) x1131))
(assert (=> (>= 10000 x2380) (= 0 (x1945 x2380))))
(assert (= 0 (x1945 95932229227554293267862761608555258089024927314852490146714677558661980618752)))
(assert (=> (>= 10000 x796) (= (x1945 x796) 0)))
(assert (= x21 (x24 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (x1630 x795))
(assert (x246 x1405))
(assert (x246 x1220))
(assert (x246 x2040))
(assert (= (and x1047 x1145) x1662))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x246 x678))
(assert (x246 x106))
(assert (=> (<= x554 10000) (= 0 (x1945 x554))))
(assert (x246 x1112))
(assert (= (x228 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x1720))
(assert (x246 x706))
(assert (=> (>= 10000 x96) (= 0 (x1945 x96))))
(assert (< 10000 (x3027 x2088 x1975)))
(assert (= (x175 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x2104))
(assert (x246 x1080))
(assert (not (x2367 (x785 x2326 x2705 x2092))))
(assert (< (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1019 10000) (= 0 (x1945 x1019))))
(assert (x246 x1461))
(assert (= x193 (=> (and (= x1570 (x2893 (+ x825 32))) (= (x281 x1570) x2741) (= (x412 x2573) x825) (= (x412 x825) x2188) (= x2610 (x2893 (+ 32 x2573))) (= x2629 (x2893 (+ 32 x2471))) (= x831 (x2893 (+ x2629 32))) (= (not (< 1 x2720)) x1701)) (and x1701 (=> (and (= x1802 x831) (= 1 x405) (= x2610 x1831)) x1649)))))
(assert (=> (>= 10000 x709) (= 0 (x1945 x709))))
(assert (x246 x3042))
(assert (x246 x2928))
(assert (x246 x297))
(assert (x246 x694))
(assert (= (x3016 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)) x1883))
(assert (x246 x167))
(assert (x246 x352))
(assert (= (x175 (x588 x1173 x2987 x1228 x2195 x3018 x2061)) x1173))
(assert (x246 x1310))
(assert (x246 x1556))
(assert (x246 x1510))
(assert (=> (>= 10000 x35) (= (x1945 x35) 0)))
(assert (x246 x2787))
(assert (x246 x586))
(assert (= x2705 (x228 (x785 x2326 x2705 x2092))))
(assert (x246 x2022))
(assert (= x2875 (and x2996 x1165)))
(assert (= (x228 (x785 x1269 x383 x2876)) x383))
(assert (x246 x135))
(assert (x246 x1702))
(assert (x246 x495))
(assert (< 10000 (x785 x1375 x2837 x2885)))
(assert (= (x1480 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)) x151))
(assert (=> (>= 10000 x965) (= (x1945 x965) 0)))
(assert (= (x1087 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) x1830))
(assert (= (x228 (x785 x2826 x2896 x1019)) x2896))
(assert (x3077 x113))
(assert (= (x2947 x2972 x650 x697 x554 x2034) (x1945 (x2947 x2972 x650 x697 x554 x2034))))
(assert (= x285 (x228 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885))))
(assert (x3077 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x246 x375))
(assert (x1105 x2135))
(assert (= (x1087 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x3157))
(assert (< (x3027 x2088 x1975) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x3129))
(assert (x246 x947))
(assert (x246 x856))
(assert (x246 x1930))
(assert (= (and x3151 x2509) x346))
(assert (=> (>= 10000 x1559) (= (x1945 x1559) 0)))
(assert (x246 x800))
(assert (= x2816 (and x629 x123)))
(assert (x246 x149))
(assert (x246 x241))
(assert (= (x1945 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)) (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)))
(assert (= (x228 (x2947 x2151 x406 x1887 x1559 x865)) x406))
(assert (= (x175 (x3027 x2151 x1515)) x2151))
(assert (= x982 (and x62 (not x2849))))
(assert (= (and x146 (not x753)) x2963))
(assert (x246 x611))
(assert (x246 x1535))
(assert (x246 x1161))
(assert (=> (>= 10000 x2848) (= (x1945 x2848) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)))
(assert (= (x2781 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)) x1106))
(assert (x246 x2139))
(assert (= x2679 (x228 (x785 x1173 x2679 x1640))))
(assert (x246 x2561))
(assert (x246 x1867))
(assert (> (x2947 x3129 x1966 x1100 x229 x2923) 10000))
(assert (x246 x143))
(assert (= (x175 (x785 x1206 x1817 x1899)) x1206))
(assert (= x1010 (=> (and (= (x53 x783) x380) (= x236 (not (< 128 x775))) (= x783 (x2893 (+ 96 x754))) (= x2225 (x2893 (+ 96 x3139)))) (and x1951 x236))))
(assert (x246 x2537))
(assert (x246 x278))
(assert (x246 x1384))
(assert (x246 x217))
(assert (x2367 18446744073709551518))
(assert (x246 x1852))
(assert (= x342 (x1087 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (= x3046 (x1480 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527))))
(assert (=> (<= x1223 10000) (= (x1945 x1223) 0)))
(assert (x246 x1142))
(assert (x246 x1195))
(assert (x246 x1607))
(assert (=> (<= x1423 10000) (= 0 (x1945 x1423))))
(assert (x246 x1720))
(assert (x246 x1739))
(assert (=> (<= x1297 10000) (= 0 (x1945 x1297))))
(assert (x246 x1452))
(assert (x246 x587))
(assert (x246 x145))
(assert (= x1533 (x2689 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (=> (>= 10000 x602) (= 0 (x1945 x602))))
(assert (= x655 (x2781 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (= x1052 (and x2859 x93)))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (=> (<= x2987 10000) (= 0 (x1945 x2987))))
(assert (x246 x2187))
(assert (= (x1945 2065879269316) 0))
(assert (x246 x1804))
(assert (x246 x2209))
(assert (x246 x2681))
(assert (x246 x76))
(assert (x246 x2069))
(assert (=> (>= 10000 x264) (= 0 (x1945 x264))))
(assert (x246 x1587))
(assert (x246 x2656))
(assert (x246 x1030))
(assert (x246 x2698))
(assert (= (x1087 (x2322 x2669 x1741 x1726 x2710)) x1726))
(assert (=> (<= x1078 10000) (= (x1945 x1078) 0)))
(assert (=> (<= x335 10000) (= 0 (x1945 x335))))
(assert (< (x588 x2326 x218 x895 x226 x1240 x2010) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1313))
(assert (x246 x640))
(assert (x246 x2331))
(assert (x246 x40))
(assert (= (x175 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x2104))
(assert (x246 x1260))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 64 x1199 1)))
(assert (= (and x1056 x2780) x2174))
(assert (> (x785 x1269 x383 x2876) 10000))
(assert (x246 x1041))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639615) 0))
(assert (x246 x1015))
(assert (x246 x1420))
(assert (x246 x2308))
(assert (= (x228 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x1852))
(assert (x246 x2778))
(assert (=> (>= 10000 x2923) (= (x1945 x2923) 0)))
(assert (=> (>= 10000 x1193) (= (x1945 x1193) 0)))
(assert (=> (>= 10000 x2061) (= 0 (x1945 x2061))))
(assert (= x2771 (x24 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722))))
(assert (= (x228 (x785 x2025 x2235 x1238)) x2235))
(assert (x246 x1373))
(assert (x246 x3116))
(assert (x246 x2576))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639832) 0))
(assert (< (x100 x2104 x2848 x2172 x682 x694 x2622 x1600) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2888))
(assert (x3077 x1511))
(assert (< 10000 (x785 x2326 x2705 x2092)))
(assert (=> (>= 10000 x188) (= (x1945 x188) 0)))
(assert (x246 x726))
(assert (x246 x1192))
(assert (x246 x129))
(assert (x246 x2280))
(assert (< (x2947 x2826 x1545 x293 x2035 x2941) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x474))
(assert (x1105 x1758))
(assert (x246 x1359))
(assert (= x1254 (x2689 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (=> (>= 10000 x1017) (= (x1945 x1017) 0)))
(assert (= 0 (x1945 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x246 x584))
(assert (=> (>= 10000 x2625) (= (x1945 x2625) 0)))
(assert (x246 x2243))
(assert (x246 x917))
(assert (x246 x2997))
(assert (= x2499 (x2781 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (x246 x1197))
(assert (= x2568 (x1480 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (x246 x48))
(assert (= x1360 (and (not x1868) x1388)))
(assert (not (x2367 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (= (x1945 2065879269284) 0))
(assert (= (=> (and (and (<= x387 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x387 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x2757 (x1300 1461501637330902918203684832716283019655932542975 x1652)) (= (> x2492 0) x2002) (<= x469 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x920 (x2893 (+ 4 x1908))) (> x1908 x387) (<= 1 x1747) (>= x469 32) (>= x2153 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x387) (= (x1300 1461501637330902918203684832716283019655932542975 x716) x308) (not (= x387 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x387 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1740 x387) x1747) (not (= x387 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x2893 (+ x387 32)) x1908)) (or (and (not x2002) (= x2492 x931)) (and (and (>= 4294967295 x469) (>= x469 32) (= 1 x931)) x2002))) x189) x2675))
(assert (< (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1950))
(assert (x246 x1340))
(assert (x246 x427))
(assert (x246 x2163))
(assert (x246 x3006))
(assert (x246 x795))
(assert (< 10000 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)))
(assert (x246 x3127))
(assert (x246 x1589))
(assert (= (or x1530 x2270) x1216))
(assert (x246 x2365))
(assert (x246 x1424))
(assert (= x2722 (x1480 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722))))
(assert (x246 x642))
(assert (= x2368 (or x2882 x2298)))
(assert (x246 x815))
(assert (x246 x1358))
(assert (x246 x2468))
(assert (< 10000 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)))
(assert (=> (>= 10000 x2556) (= (x1945 x2556) 0)))
(assert (= (x785 x2104 x2704 x660) (x1945 (x785 x2104 x2704 x660))))
(assert (x246 x688))
(assert (x246 x1323))
(assert (= (x228 (x2322 x2972 x851 x1878 x1078)) x851))
(assert (= x1117 (and x2359 x2786)))
(assert (= (x3016 (x100 x2025 x457 x2946 x1041 x655 x735 x2223)) x735))
(assert (x246 x903))
(assert (x246 x1753))
(assert (= (x1480 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x1826))
(assert (= x2061 (x3016 (x588 x1173 x2987 x1228 x2195 x3018 x2061))))
(assert (x246 x3143))
(assert (=> (<= x1302 10000) (= (x1945 x1302) 0)))
(assert (=> (<= x1168 10000) (= (x1945 x1168) 0)))
(assert (x246 x3154))
(assert (=> (>= 10000 x2404) (= (x1945 x2404) 0)))
(assert (= x2657 (x24 (x588 x2025 x444 x824 x2657 x728 x641))))
(assert (= (x2781 (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595)) x1521))
(assert (=> (>= 10000 x893) (= 0 (x1945 x893))))
(assert (x246 x570))
(assert (= x862 (x228 (x588 x1269 x862 x1525 x1594 x722 x1564))))
(assert (=> (>= 10000 x2990) (= (x1945 x2990) 0)))
(assert (= (and x2852 (not x2002)) x2398))
(assert (x246 x2167))
(assert (x1105 x2355))
(assert (x2367 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (= (x1087 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) x941))
(assert (= (x1945 (x785 x2088 x112 x2454)) (x785 x2088 x112 x2454)))
(assert (x246 x3097))
(assert (=> (>= 10000 x2286) (= (x1945 x2286) 0)))
(assert (x246 x999))
(assert (= x62 (or x498 x2816)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x1269 x862 x1525 x1594 x722 x1564)))
(assert (=> (>= 10000 x2244) (= 0 (x1945 x2244))))
(assert (= (and x2208 x2761) x3060))
(assert (= x2025 (x175 (x785 x2025 x2235 x1238))))
(assert (x246 x1506))
(assert (not (x2367 (x588 x2826 x470 x535 x505 x1294 x389))))
(assert (x246 x1148))
(assert (< 10000 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)))
(assert (x246 x2993))
(assert (=> (<= x1804 10000) (= (x1945 x1804) 0)))
(assert (x246 x1230))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (= (and x934 x787) x1550))
(assert (= x1878 (x1087 (x2322 x2972 x851 x1878 x1078))))
(assert (x246 x521))
(assert (x1105 x76))
(assert (< (x100 x2025 x457 x2946 x1041 x655 x735 x2223) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2592))
(assert (x246 x2595))
(assert (x246 x1337))
(assert (x246 x1339))
(assert (x246 x444))
(assert (x246 x822))
(assert (x246 x793))
(assert (x246 x1990))
(assert (= (x2781 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) x2778))
(assert (x246 x509))
(assert (x1630 x455))
(assert (= (x1945 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)) (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)))
(assert (= x1215 (=> (and (not (> x2640 x2410)) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2033) x917) (= (x2893 (+ x764 x243)) x1510) (or (>= 18446744073709551518 x2640) (>= x2640 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (not (> x1510 x1220)) (<= x1196 18446744073709551615) (>= 18446744073709551614 x2640) (>= 18446744073709551614 x2640) (= (x2032 x2212) x243) (< x2640 x2410) (< x2410 x2037) (= x1252 (x1149 (- x1220 x550))) (>= 18446744073709551615 x243) (>= 18446744073709551613 x2640) (<= 96 x1252) (= (x2893 (+ x2632 32)) x2626) (not (< x2037 x2410)) (>= 18446744073709551615 x2037) (or (>= x2640 115792089237316195423570985008687907853269984665640564039457584007913129639841) (>= 18446744073709551518 x2640)) (= x2037 (+ x773 x2410)) (>= 18446744073709551614 x2640) (<= x2394 18446744073709551615) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x2212) (>= 18446746139588821027 x2212)) (>= 1461501637330902918203684832716283019655932542975 x1066) (= x795 (+ x917 63)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1167) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220)) (> x1220 x1167)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1167) (<= x1220 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1066 (x2032 x550)) (= (x2032 x1012) x420) (= x1245 (x2893 (+ 32 x1012))) (= (x2893 (+ x2212 32)) x764) (or (<= x2640 18446744073709551518) (>= x2640 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x1167 (x2893 (+ 31 x2212))) (<= x773 18446744073709551614) (= (x2893 (+ x550 x1196)) x2212) (or (>= 18446746139588821027 x2632) (>= x2632 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= (x2893 (+ x2745 32)) x2676) (= (x2032 x2632) x2394) (= x2745 (x2893 (+ 32 x2640))) (= (+ 32 x2410) x1386) (= (x2893 (+ 32 x550)) x1012) (= x550 (x2893 (+ x2394 x2632))) (<= x2640 18446744073709551613) (= (+ x243 x1386) x1098) (= (x2032 x1245) x1196) (= x2033 (+ x243 31)) (= x2410 (x2893 (+ x2640 96))) (<= x1252 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x795) x773) (= x1033 (not (> x658 x2626))) (>= 18446744073709551613 x2640) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x550) (>= 18446746139588821027 x550)) (>= x2037 2) (or (>= 18446746139588821059 x1220) (>= x1220 57896044618658097711785492504343953926634992332820282019728792003956564820100))) (and x1033 (=> (= x424 x2037) x1334)))))
(assert (= (=> (and (= x2086 (x1584 x1815)) (<= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2094)) (<= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x460 x2094) (= (x630 x1204) x1337) (= (x2894 x937) x1262) (= x1301 (x1300 1461501637330902918203684832716283019655932542975 x1337)) (= x258 (x804 x1578)) (= (x2096 x780) x2373) (= (x2893 (+ 160 x2094)) x460) (<= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ 32 x1204)) x937) (= (x2893 (+ 32 x1907)) x1633) (= (x2893 (+ x2094 32)) x1313) (>= x258 1) (= (not (< 1 x2086)) x2064) (not (= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x2893 (+ 32 x1578)) x1760) (= x780 (x2893 (+ x1204 64))) (= x1907 (x2893 (+ x1020 32))) (= (x2893 (+ 32 x1313)) x1020) (= x1204 (x2893 (+ x1432 32))) (not (= x2094 115792089237316195423570985008687907853269984665640564039457584007913129639776))) (and (=> (and (= x729 x460) (= x2124 x1433) (= x2545 x2914)) x2789) x2064)) x2589))
(assert (= (and x384 x2125) x2132))
(assert (x246 x1352))
(assert (= (x24 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) x718))
(assert (= (x3016 (x588 x2326 x218 x895 x226 x1240 x2010)) x2010))
(assert (x246 x781))
(assert (= x601 (x24 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (x246 x2867))
(assert (= x2332 (x228 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616))))
(assert (= x3035 (=> (and (= x2521 x713) (= x356 x2122) (= x2335 (x2893 (+ 32 x2381))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2381) (= x2088 (x3140 x2381)) (= (x2893 (+ x1814 x422)) x2908) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2381) (< x2381 x2521) (<= 1 x713) (= x2152 (x1149 (- x2570 32))) (= x2570 (x1149 (- x2521 x2381))) (>= x2521 1) (= (* x356 32) x422) (>= 4 x356) (= x2925 (* 32 x356)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2381) (= x664 (>= 224 x2088)) (= (x2893 (+ x2925 x219)) x713) (= x2908 x2793)) (and x664 (=> (and (= x2991 (x2893 (+ x2401 32))) (= x2392 (x2947 x2088 x1809 x2063 x264 x44)) (= (x3140 x2335) x2687) (= x2454 (x3140 x2110)) (= (x3140 x4) x264) (= (x3140 x2272) x2612) (= x335 (x3140 x3103)) (= (x2893 (+ 96 x2401)) x387) (= x3103 (x2893 (+ x2335 96))) (= x44 (x3140 x530)) (= (x2893 (+ 32 x2335)) x297) (= (x2893 (+ x2335 32)) x933) (= (x3140 x654) x941) (> x387 x2521) (= (x2893 (+ 32 x2335)) x2272) (= x2415 (x3140 x392)) (= x883 (x2893 (+ 32 x2335))) (= (x588 x2088 x2756 x2432 x1993 x335 x2415) x1717) (= x2012 (x2893 (+ x2335 96))) (= x1101 (ite (= x2088 0) x938 (ite (>= 32 x2088) x2909 (ite (>= 64 x2088) x510 (ite (<= x2088 96) x2730 (ite (<= x2088 128) x2392 (ite (>= 160 x2088) x1717 (ite (<= x2088 192) x597 (ite (<= x2088 224) x1172 x2806))))))))) (= x510 (x785 x2088 x112 x2454)) (= x2333 (x3140 x297)) (= (x2893 (+ x2335 192)) x154) (= (x3140 x337) x504) (= (x3089 x2521) x2972) (= x2432 (x3140 x933)) (= x4 (x2893 (+ x2335 64))) (= x2110 (x2893 (+ x2335 32))) (= x2491 (x3140 x2388)) (= x938 (x1299 0)) (= (<= x2972 224) x2372) (= x1172 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) (= x1271 (x2893 (+ 160 x2335))) (= x1796 (x2893 (+ x2521 32))) (= (x2893 (+ x2335 64)) x1851) (= x2401 (x2893 (+ x2521 32))) (= (x3140 x3068) x2543) (= x654 (x2893 (+ x2335 32))) (= x530 (x2893 (+ x2335 96))) (= x2388 (x2893 (+ x2335 96))) (= x2703 (x3140 x2335)) (= (x3140 x1362) x3046) (= (x3140 x2844) x27) (= (x3140 x2335) x112) (= (x3140 x1851) x1472) (= x3 (x1149 (- x387 x2521))) (= (x3140 x2335) x1809) (= (x3140 x1271) x1826) (= x2756 (x3140 x2335)) (= (x2893 (+ 64 x2335)) x316) (= (x2893 (+ x2991 32)) x1126) (= x2063 (x3140 x883)) (= (x3140 x2335) x1975) (= x337 (x2893 (+ 128 x2335))) (= (x2893 (+ x2335 128)) x392) (= x3068 (x2893 (+ x2335 64))) (= x957 (x3140 x1059)) (= x2328 (x3140 x2335)) (= (x2893 (+ 128 x2335)) x2844) (= (x1149 (- x3 32)) x1889) (or (and (<= x2521 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x2521 115792089237316195423570985008687907853269984665640564039457584007913129639810)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x2521) (>= x2521 1))) (= (x2893 (+ 64 x2335)) x1059) (= (x3140 x2012) x965) (= x1362 (x2893 (+ 160 x2335))) (= (x3140 x316) x1993) (= x2527 (x3140 x154)) (= (x3027 x2088 x1975) x2909) (= x597 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) (= x2730 (x2322 x2088 x2687 x2333 x1472))) (and x2372 (=> (and (or (and (and (<= 32 x1399) (>= 4294967295 x1399) (= 1 x2153)) x476) (and (= x2905 x2153) (not x476))) (and (= x1843 (x785 x2972 x341 x1805)) (= x645 x844) (= (x3089 x666) x295) (= x1078 (x3089 x2036)) (= x1043 (x588 x2972 x2139 x2300 x295 x2097 x3048)) (>= x1399 32) (= x666 (x2893 (+ x1796 64))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1399) (= x2097 (x3089 x167)) (= (x3089 x840) x2300) (= (x2893 (+ 32 x1796)) x2121) (= x979 (x2893 (+ x1796 96))) (= (x2893 (+ 96 x1796)) x1072) (= x476 (< 0 x2905)) (= x592 (x3089 x348)) (= (x2893 (+ 64 x1796)) x153) (= x721 (x2893 (+ 160 x1796))) (= (x2322 x2972 x851 x1878 x1078) x2249) (= x784 (x2893 (+ 32 x1796))) (= (x3089 x153) x1694) (= (x1300 1461501637330902918203684832716283019655932542975 x1652) x2857) (= x2382 (x2893 (+ x1796 64))) (= (x3089 x366) x1878) (= x2682 (x1299 0)) (= (x3089 x1796) x341) (= x1859 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) (= x602 (x3089 x2833)) (= x167 (x2893 (+ x1796 96))) (= x697 (x3089 x784)) (= x727 (x3089 x1796)) (= x554 (x3089 x1856)) (= (x2893 (+ 64 x1796)) x2036) (= (x3089 x1214) x786) (= (x2947 x2972 x650 x697 x554 x2034) x1897) (= x1818 (x2893 (+ 128 x1796))) (= (x2893 (+ 128 x1796)) x1583) (= (x3027 x2972 x1786) x913) (= (x2893 (+ x1796 64)) x1856) (= x851 (x3089 x1796)) (= (x3089 x2364) x717) (= x622 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) (= (x2893 (+ x387 4)) x1655) (= (x2893 (+ x1796 96)) x348) (= (x2893 (+ x1796 32)) x366) (= x2139 (x3089 x1796)) (= (x2893 (+ x1796 32)) x837) (= (ite (= 0 x2972) x2682 (ite (<= x2972 32) x913 (ite (>= 64 x2972) x1843 (ite (<= x2972 96) x2249 (ite (<= x2972 128) x1897 (ite (>= 160 x2972) x1043 (ite (<= x2972 192) x622 (ite (<= x2972 224) x1859 x179)))))))) x844) (= x1652 (x3089 x1403)) (= x2034 (x3089 x979)) (= x1786 (x3089 x1796)) (= (x3089 x3069) x716) (= x1403 (x3089 160)) (= (x3089 x721) x41) (= x3048 (x3089 x1818)) (= x650 (x3089 x1796)) (= (x3089 x2382) x1926) (= (x3089 x837) x2660) (= (x3089 x1796) x2688) (= x1214 (x2893 (+ 192 x1796))) (= (x3089 x2121) x1904) (= x2364 (x2893 (+ x1796 160))) (= x1417 (x2893 (+ 32 x1796))) (= (x2893 (+ 32 x1796)) x840) (= x1614 (x3089 x1583)) (= (x3089 x1072) x2778) (= x2833 (x2893 (+ x1796 128))) (= x1805 (x3089 x1417)))) x2675)))))))
(assert (< (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x182))
(assert (x246 x3096))
(assert (=> (<= x1808 10000) (= (x1945 x1808) 0)))
(assert (x246 x101))
(assert (x246 x415))
(assert (x246 x1765))
(assert (x246 x1948))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)))
(assert (not (x2367 (x3027 x2326 x736))))
(assert (x2367 2189116922))
(assert (> (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286) 10000))
(assert (x246 x118))
(assert (x246 x321))
(assert (=> (<= x2026 10000) (= (x1945 x2026) 0)))
(assert (x1105 x1933))
(assert (=> (>= 10000 x2771) (= 0 (x1945 x2771))))
(assert (x246 x2451))
(assert (x246 x2905))
(assert (x246 x2552))
(assert (x246 x247))
(assert (x246 x139))
(assert (=> (<= x1244 10000) (= 0 (x1945 x1244))))
(assert (= (x24 (x2322 x2826 x1140 x414 x2262)) x2262))
(assert (= (x24 (x588 x2088 x2756 x2432 x1993 x335 x2415)) x1993))
(assert (x246 x1759))
(assert (= x188 (x1087 (x2322 x2104 x471 x188 x1450))))
(assert (x246 x783))
(assert (x246 x997))
(assert (x246 x2316))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (= (and (not x1275) x381) x168))
(assert (= (and x1643 x2924) x289))
(assert (= x727 (x228 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786))))
(assert (x246 x1676))
(assert (= x2744 (=> (and (= (> x2331 0) x911) (= (x2893 (+ x2285 32)) x662) (= (x2893 (+ 32 x1546)) x1474) (= x1785 (x2893 (+ 32 x1931))) (= (x1598 x1474) x1568) (= x2331 (x1598 x2285))) (and (=> (and (not x911) (and (= x700 x1785) (= x774 0) (= x662 x625))) x572) (=> (and (and (= (x2893 (+ x1785 32)) x437) (= (x2893 (+ x662 32)) x2652) (= (x1598 x662) x2824) (= (< 1 x2331) x1560)) x911) (and (=> (and (and (= x3143 (x2318 x2652)) (= (x2893 (+ x2652 32)) x640) (= (x2893 (+ 32 x437)) x991) (= (< 2 x2331) x107)) x1560) (and (=> (and x107 (and (= (x2893 (+ x991 32)) x574) (= (x1537 x640) x2910) (= (x2893 (+ x640 32)) x1256) (= x2060 (> x2331 3)))) (and (=> (and (and (= x700 x574) (= x774 3) (= x1256 x625)) (not x2060)) x572) (=> x2060 x2529))) (=> (and (not x107) (and (= x625 x640) (= x774 2) (= x700 x991))) x572))) (=> (and (not x1560) (and (= x625 x2652) (= 1 x774) (= x700 x437))) x572)))))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x246 x1484))
(assert (x246 x2415))
(assert (x246 x810))
(assert (x246 x578))
(assert (x3077 x2033))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x2826 x1140 x414 x2262)))
(assert (not (x2367 (x2947 x3129 x1966 x1100 x229 x2923))))
(assert (= (x785 x3129 x1751 x1029) (x1945 (x785 x3129 x1751 x1029))))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x246 x382))
(assert (=> (<= x736 10000) (= (x1945 x736) 0)))
(assert (x246 x2385))
(assert (x246 x2480))
(assert (x246 x1239))
(assert (= x2201 (and x2628 x693)))
(assert (x246 x2974))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (= x267 (=> (= x1359 x159) x2154)))
(assert (= (x228 (x2947 x2088 x1809 x2063 x264 x44)) x1809))
(assert (= (and (not x2728) x3052) x879))
(assert (= (x1945 (x3027 x2025 x2967)) (x3027 x2025 x2967)))
(assert (= x647 (or x238 x2775)))
(assert (x246 x1806))
(assert (x246 x110))
(assert (x246 x883))
(assert (x246 x2834))
(assert (< 10000 (x2322 x1206 x1069 x1651 x2544)))
(assert (x246 x1361))
(assert (x246 x1693))
(assert (x246 x1594))
(assert (not (x2367 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (x246 x666))
(assert (= x2156 (x24 (x2322 66 x573 x3003 x2156))))
(assert (x246 x575))
(assert (x246 x2814))
(assert (x246 x1955))
(assert (= x238 (and x2074 x2383)))
(assert (x246 x1501))
(assert (x246 x1875))
(assert (x246 x1993))
(assert (x246 x1462))
(assert (x246 x1947))
(assert (= (x3027 x1269 x2380) (x1945 (x3027 x1269 x2380))))
(assert (x246 x504))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (x246 x2078))
(assert (= (and x867 x770) x1972))
(assert (not (x2367 (x2322 x2025 x2084 x1246 x336))))
(assert (x246 x2094))
(assert (=> (>= 10000 x1267) (= (x1945 x1267) 0)))
(assert (x246 x2036))
(assert (x246 x388))
(assert (= x755 (x24 (x2947 x1375 x2681 x2625 x755 x1882))))
(assert (x246 x1880))
(assert (x246 x1959))
(assert (= 0 (x1945 18446744073709551518)))
(assert (= x2774 (and x2067 x880)))
(assert (=> (<= x564 10000) (= 0 (x1945 x564))))
(assert (= x989 (x2781 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (x246 x1809))
(assert (x246 x2494))
(assert (x246 x2607))
(assert (= x447 (x1480 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (< (x2322 x2151 x1017 x847 x2834) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x3159))
(assert (=> (<= x1841 10000) (= (x1945 x1841) 0)))
(assert (x246 x1887))
(assert (x246 x1802))
(assert (x246 x3066))
(assert (not (x2367 (x2947 x2151 x406 x1887 x1559 x865))))
(assert (x246 x257))
(assert (=> (>= 10000 x1627) (= 0 (x1945 x1627))))
(assert (= x2025 (x175 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (= (x1087 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) x1447))
(assert (x246 x2624))
(assert (x246 x2799))
(assert (= (=> (and (>= 1 x2720) x2099 (= x1831 x988) (= x2282 (x1957 x2361)) (= x1164 (x2893 (+ x3119 x2471))) (= x2431 (> x1213 0)) (or (= 0 x3119) (= 64 x3119)) (= (x2893 (+ x975 x2573)) x988) (= (>= (x1503 x2361) x2282) x2436) (or (= 0 x975) (= 32 x975)) (= x1571 (x1957 x2970)) (= x2720 x405) (= (* 64 x2720) x3119) x2436 (= x1802 x1164) (<= x349 4294967295) (= x635 (x2530 x2970)) (= (* 32 x2720) x975) (= (= x1571 (x1503 x2970)) x2099) (<= 1 x635) (= (x1149 (- x1802 x1844)) x698) (>= x474 1) (= x1213 (x2850 x1578))) (and (=> (and x2431 (and (and (>= x2931 1) (= (x2850 x1840) x3117) (= (= x1050 0) x2383) (= x1050 (ite (= 2 x3117) 1 0)) (<= x3117 2) (= x231 (x2893 (+ x1578 32))) (= (x2850 x1578) x2931) (= (x2850 x231) x1840)) (or (and (not x2383) (and (>= 4294967295 x2798) (= (>= (x254 x2361) x1224) x2759) (= (x2893 (+ x1844 4)) x2655) (= (x2893 (+ x2819 64)) x1593) (= x2819 (x2850 x231)) x1770 (>= x1876 1) x2759 (= (x2850 x1578) x20) (= x1224 (x1503 x2361)) (= x2817 (x2893 (+ 32 x2655))) (<= 1 x20) (= x1876 (x2850 x1578)) (= x1504 (x2850 x54)) (<= 1 x3159) (>= x2802 1) (= (x2893 (+ x2498 96)) x54) (= (x2530 x797) x3159) (= x2219 (x1503 x797)) (= x2498 (x2850 x231)) (= (= x2219 (x254 x797)) x1770) (= x1166 (x1300 1461501637330902918203684832716283019655932542975 x1511)) (= (x2850 x1593) x1511))) x2383))) x2254) (=> (not x2431) x1499))) x1649))
(assert (= (x2781 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) x1919))
(assert (x246 x1012))
(assert (= (x175 (x2947 x2025 x1168 x77 x1118 x234)) x2025))
(assert (x246 x1236))
(assert (= (x1945 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)) (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)))
(assert (=> (<= x1615 10000) (= 0 (x1945 x1615))))
(assert (x246 x2438))
(assert (x246 x2156))
(assert (= (=> (and (= x1673 (x2893 (+ x605 32))) (= (not (> x2607 1)) x560) (= x1845 (x2893 (+ 32 x1225)))) (and (=> (and (= x548 x1845) (= x1673 x1767) (= x1308 1)) x2829) x560)) x1939))
(assert (x1105 x1700))
(assert (x246 x2984))
(assert (< (x2322 66 x573 x3003 x2156) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x2367 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (x246 x77))
(assert (x246 x717))
(assert (x246 x1003))
(assert (x246 x1525))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)))
(assert (x1105 x822))
(assert (x246 x2057))
(assert (x246 x2164))
(assert (= x660 (x1087 (x785 x2104 x2704 x660))))
(assert (x246 x3149))
(assert (x246 x64))
(assert (> (x2322 66 x573 x3003 x2156) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x2025 x2967)))
(assert (= (x1945 (x3027 x2826 x458)) (x3027 x2826 x458)))
(assert (x246 x1245))
(assert (x246 x3034))
(assert (=> (<= x1587 10000) (= (x1945 x1587) 0)))
(assert (x246 x1120))
(assert (=> (<= x1809 10000) (= 0 (x1945 x1809))))
(assert (x246 x1557))
(assert (=> (<= x1100 10000) (= 0 (x1945 x1100))))
(assert (x246 x2006))
(assert (x246 x1184))
(assert (> (x3027 x2104 x2664) 10000))
(assert (x246 x485))
(assert (x246 x2891))
(assert (= (x100 x2025 x457 x2946 x1041 x655 x735 x2223) (x1945 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (x246 x1417))
(assert (= (x1945 (x2322 x1206 x1069 x1651 x2544)) (x2322 x1206 x1069 x1651 x2544)))
(assert (=> (<= x2722 10000) (= 0 (x1945 x2722))))
(assert (=> (>= 10000 x1720) (= (x1945 x1720) 0)))
(assert (x246 x2001))
(assert (= x2031 (and x2140 x476)))
(assert (=> (>= 10000 x655) (= 0 (x1945 x655))))
(assert (x246 x408))
(assert (=> (>= 10000 x2104) (= (x1945 x2104) 0)))
(assert (x246 x431))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x2669 x709 x3005 x2192 x672)))
(assert (= (x2781 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x694))
(assert (x1105 x91))
(assert (x246 x1494))
(assert (=> (>= 10000 x2281) (= (x1945 x2281) 0)))
(assert (=> (>= 10000 x2118) (= 0 (x1945 x2118))))
(assert (x246 x1471))
(assert (x1105 x1511))
(assert (= (x24 (x2322 x1173 x848 x3096 x1507)) x1507))
(assert (x246 x2697))
(assert (x246 x1774))
(assert (x246 x461))
(assert (x246 x1272))
(assert (= x110 (x228 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (=> (>= 10000 x1975) (= (x1945 x1975) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2972 x2139 x2300 x295 x2097 x3048)))
(assert (= (=> (= x2094 x1621) x2853) x1366))
(assert (= x3129 (x175 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (x246 x2925))
(assert (= (and x1388 x1868) x2020))
(assert (= x115 (and x2887 x950)))
(assert (x246 x603))
(assert (= x1714 (and x2173 (not x2341))))
(assert (=> (>= 10000 x1898) (= (x1945 x1898) 0)))
(assert (x246 x2550))
(assert (= (x1480 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x1573))
(assert (x3077 x32))
(assert (x246 x1262))
(assert (x246 x2278))
(assert (< (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2174 x2618) x743))
(assert (= (or x2137 (and (not x475) x192)) x3095))
(assert (= (and x1532 x1248) x880))
(assert (< 10000 (x2322 x2025 x2084 x1246 x336)))
(assert (x246 x1895))
(assert (=> (>= 10000 x627) (= (x1945 x627) 0)))
(assert (x246 x2044))
(assert (x246 x2063))
(assert (= x2885 (x1087 (x785 x1375 x2837 x2885))))
(assert (=> (<= x151 10000) (= 0 (x1945 x151))))
(assert (= (or x633 x1970) x1102))
(assert (= (x2322 x1269 x537 x1389 x529) (x1945 (x2322 x1269 x537 x1389 x529))))
(assert (=> (>= 10000 x2278) (= 0 (x1945 x2278))))
(assert (x246 x66))
(assert (x246 x3002))
(assert (= x1975 (x228 (x3027 x2088 x1975))))
(assert (< (x3027 x2151 x1515) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1199) (= 0 (x1945 x1199))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639646))
(assert (= (and (not x1146) x743) x691))
(assert (= x2669 (x175 (x588 x2669 x462 x1244 x1460 x3093 x741))))
(assert (x246 x2129))
(assert (x246 x2234))
(assert (x3077 x103))
(assert (x246 x556))
(assert (x246 x89))
(assert (x246 x1744))
(assert (= x2353 (x2781 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (x246 x1046))
(assert (x246 x2135))
(assert (x246 x2726))
(assert (not (x2367 (x2322 x1375 x1590 x2357 x715))))
(assert (=> (>= 10000 x660) (= (x1945 x660) 0)))
(assert (= (x228 (x2322 x2104 x471 x188 x1450)) x471))
(assert (x246 x758))
(assert (x246 x2573))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x246 x1762))
(assert (not (x2367 (x785 x2104 x2704 x660))))
(assert (= (x24 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) x2543))
(assert (= x1354 (and (not x1716) x1683)))
(assert (not (x2367 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527))))
(assert (x246 x2731))
(assert (x246 x1218))
(assert (x246 x230))
(assert (= x2298 (or x1551 x1972 x1742 x1058 x449)))
(assert (= (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421) (x1945 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421))))
(assert (=> (>= 10000 x2084) (= 0 (x1945 x2084))))
(assert (= (x228 (x2322 x2326 x2242 x1297 x194)) x2242))
(assert (= x1369 (x3016 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722))))
(assert (not (x2367 (x588 x2088 x2756 x2432 x1993 x335 x2415))))
(assert (x246 x120))
(assert (= (x1945 18446744073709551487) 0))
(assert (x246 x530))
(assert (x246 x1488))
(assert (= (x228 (x785 x2104 x2704 x660)) x2704))
(assert (< 10000 (x3027 x2669 x3108)))
(assert (=> (>= 10000 x1525) (= 0 (x1945 x1525))))
(assert (x246 x1847))
(assert (not (x2367 (x785 x2826 x2896 x1019))))
(assert (< (x100 x2088 x2328 x2612 x957 x965 x504 x1826) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1568))
(assert (x2367 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (x246 x465))
(assert (x246 x730))
(assert (x246 x2606))
(assert (x246 x463))
(assert (=> (>= 10000 x1640) (= (x1945 x1640) 0)))
(assert (x246 x790))
(assert (x3077 x1352))
(assert (x246 x203))
(assert (x246 x333))
(assert (< 10000 (x588 x3129 x3083 x1099 x1696 x1349 x388)))
(assert (not (x2367 (x2322 x2826 x1140 x414 x2262))))
(assert (x1105 x864))
(assert (> (x2322 x1269 x537 x1389 x529) 10000))
(assert (=> (<= x477 10000) (= (x1945 x477) 0)))
(assert (x246 x746))
(assert (= (x1480 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) x1679))
(assert (x246 x2191))
(assert (x246 x2664))
(assert (not (x2367 (x3027 x1929 x2485))))
(assert (x246 x3157))
(assert (= x345 (x3016 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (x246 x2188))
(assert (x246 x309))
(assert (< (x100 x2151 x2111 x2295 x894 x803 x1893 x3036) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1378))
(assert (x246 x873))
(assert (= (x24 (x588 x1929 x300 x1260 x86 x3024 x627)) x86))
(assert (= x2941 (x2781 (x2947 x2826 x1545 x293 x2035 x2941))))
(assert (not (x2367 (x2322 x1929 x1267 x756 x2221))))
(assert (= (=> (and (= x1768 (x61 x279)) (= (> x2656 0) x2846) (= (x2893 (+ x98 32)) x2558) (= x375 (x61 x2204)) (= (x164 x2561) x2656) (= (x2893 (+ 32 x2561)) x2167) (= x98 (x2893 (+ 288 x1924))) (= (x2893 (+ x1924 32)) x1721) (= x2561 (x61 x3013)) (= (x2893 (+ x1219 96)) x3013) (= x2279 (x61 x1965)) (= (x61 x1424) x2787) (= (x61 192) x1219)) (and (=> (not x2846) x2801) (=> (and x2846 (and (= x765 (x482 x2167)) (= x600 (< 32 x2656)))) (and (=> (not x600) x2801) (=> (and x600 (and (= (x2893 (+ x2167 32)) x207) (= x876 (x2551 x207)) (= x2467 (x2893 (+ x2558 32))) (= (< 64 x2656) x2924))) (and (=> (and (and (= x2217 (x2893 (+ x2558 64))) (= x294 (x1413 x491)) (= x491 (x2893 (+ x2167 64))) (= x686 (> x2656 96))) x2924) (and (=> (not x686) x2801) (=> x686 x1401))) (=> (not x2924) x2801))))))) x3079))
(assert (=> (>= 10000 x1878) (= (x1945 x1878) 0)))
(assert (= 0 (x1945 18446746139588821059)))
(assert (x246 x2991))
(assert (x246 x534))
(assert (x246 x348))
(assert (=> (>= 10000 x291) (= (x1945 x291) 0)))
(assert (x246 x2492))
(assert (=> (<= x1544 10000) (= 0 (x1945 x1544))))
(assert (x246 x2581))
(assert (=> (<= x1254 10000) (= 0 (x1945 x1254))))
(assert (x246 x2754))
(assert (= x565 (=> (and (>= x2255 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2696) (= x1420 (x2893 (+ x2808 31))) (= (x1149 (- x2255 x2696)) x1157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2696) (> x2255 x2696) (= x30 (x1149 (- x1157 32))) (= x174 (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1420)) (= (x2893 (+ x174 x379)) x2255) (= x1929 (x2855 x2696)) (= x1561 (x2893 (+ x379 x2808))) (= x463 (x2893 (+ 32 x2696))) (<= x2696 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (>= 224 x1929) x2769)) (and x2769 (=> (and (= x347 (x2947 x1929 x2404 x2650 x675 x1587)) (= (x2855 x463) x1267) (= x409 (x3027 x1929 x2485)) (= x2722 (x2855 x2649)) (= x2771 (x2855 x2911)) (= (x2855 x2694) x620) (= x209 (x2893 (+ 64 x463))) (= x2478 (x2893 (+ x463 64))) (= (x2855 x450) x594) (= x2404 (x2855 x463)) (= x3090 (x2855 x463)) (= (x2855 x2948) x2216) (= x2986 (x2855 x463)) (= (x2893 (+ 32 x463)) x1693) (= x627 (x2855 x1183)) (= x1657 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)) (= (x2634 x2058) x2838) (= x300 (x2855 x463)) (= (not (> x2838 1)) x2915) (= x1121 (x2855 x1872)) (= x71 (x2893 (+ x463 96))) (= (x2893 (+ 128 x463)) x1872) (= (x2322 x1929 x1267 x756 x2221) x2630) (= x2485 (x2855 x463)) (= x1260 (x2855 x1886)) (= x38 (x2855 x1162)) (= x2109 (x2855 x71)) (= (x2893 (+ 64 x463)) x1634) (= (x2855 x209) x675) (= x2694 (x2893 (+ 64 x463))) (= (x2893 (+ 128 x463)) x998) (= (x2855 x1688) x2650) (= (x2893 (+ 32 x463)) x1162) (= x756 (x2855 x1693)) (= (x1299 0) x1757) (= (x2893 (+ 32 x463)) x1356) (= x265 (ite (= x1929 0) x1757 (ite (<= x1929 32) x409 (ite (<= x1929 64) x974 (ite (>= 96 x1929) x2630 (ite (<= x1929 128) x347 (ite (<= x1929 160) x914 (ite (<= x1929 192) x1657 (ite (>= 224 x1929) x1004 x2393))))))))) (= (x2893 (+ 32 x2948)) x925) (= (x2855 x1864) x849) (<= 1 x2216) (= (x2634 x1750) x2058) (= x1255 (x2893 (+ x463 160))) (= (x2855 x144) x1587) (= x86 (x2855 x1634)) (= x2221 (x2855 x2478)) (= x96 (x2855 x463)) (= (x2855 x1255) x151) (= (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849) x1004) (= x450 (x2893 (+ 32 x463))) (= (x2855 x1192) x1106) (= (x2855 x1229) x3024) (= (x2893 (+ 64 x463)) x2911) (= (x2893 (+ 96 x463)) x144) (= (x785 x1929 x2986 x38) x974) (= x1688 (x2893 (+ x463 32))) (= (x2893 (+ x463 128)) x1183) (= x1423 (x2855 x1356)) (= x2649 (x2893 (+ 160 x463))) (= x1369 (x2855 x998)) (= (x2893 (+ x463 96)) x1192) (= (x588 x1929 x300 x1260 x86 x3024 x627) x914) (= x1229 (x2893 (+ x463 96))) (= (x2893 (+ 192 x463)) x1864) (= x1886 (x2893 (+ x463 32)))) (and (=> (and (= x1750 x2204) (= x860 x2255)) x890) x2915))))))
(assert (=> (<= x728 10000) (= 0 (x1945 x728))))
(assert (x246 x1492))
(assert (x246 x3012))
(assert (x246 x1830))
(assert (x246 x2582))
(assert (x246 x1730))
(assert (= (x2781 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)) x1709))
(assert (x246 x2604))
(assert (= x1640 (x1087 (x785 x1173 x2679 x1640))))
(assert (x246 x2977))
(assert (=> (>= 10000 x1786) (= (x1945 x1786) 0)))
(assert (= (x3016 (x100 x1206 x110 x342 x704 x2990 x1540 x447)) x1540))
(assert (< (x2322 x2669 x1741 x1726 x2710) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1852) (= (x1945 x1852) 0)))
(assert (x246 x1751))
(assert (x246 x620))
(assert (not (x2367 (x785 x1929 x2986 x38))))
(assert (x246 x450))
(assert (> (x2947 x2104 x2281 x2026 x1736 x2476) 10000))
(assert (x246 x554))
(assert (= x1297 (x1087 (x2322 x2326 x2242 x1297 x194))))
(assert (x246 x962))
(assert (x246 x2384))
(assert (= (x228 (x588 x2826 x470 x535 x505 x1294 x389)) x470))
(assert (x246 x2124))
(assert (=> (>= 10000 x319) (= 0 (x1945 x319))))
(assert (= 0 (x1945 18446744073709551615)))
(assert (x246 x2911))
(assert (=> (<= x751 10000) (= 0 (x1945 x751))))
(assert (not (x2367 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786))))
(assert (= (x1945 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042)) (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042)))
(assert (x246 x1181))
(assert (x246 x205))
(assert (= 0 (x1945 18446746139588821027)))
(assert (=> (>= 10000 x2035) (= (x1945 x2035) 0)))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639646) 0))
(assert (x246 x956))
(assert (x246 x2877))
(assert (x246 x136))
(assert (x246 x2010))
(assert (= (x24 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x1494))
(assert (= (=> (and (> x2464 x3020) (= x2686 (x2893 (+ x1148 x1748))) (= x1777 (+ x1506 31)) (or (>= 18446744073709551614 x424) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x424)) (= (x2893 (+ x1469 32)) x1148) (not (> x2686 x1220)) (= x1112 (x2893 (+ x1626 x1506))) (= x1669 (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2487)) (<= x1748 18446744073709551615) (= x78 (x2893 (+ 32 x2045))) (= x1881 (x2032 x2045)) (or (>= 2065879269376 x1575) (>= x1575 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x726 (x2032 x78)) (= x2045 (x2893 (+ 32 x595))) (= x1708 (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x455)) (= x456 (+ x2464 32)) (= (x2032 356) x1656) (= (< 0 x1858) x1985) (not (< x1220 x1112)) (= x2487 (+ x1748 31)) (or (and (<= x2583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575)) (and (> x2583 x1575) (= (<= x1575 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2583 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1777) x1682) (= (+ 32 x563) x309) (<= x424 18446744073709551614) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1436) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x418)) (< x418 x1436)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1436) (> x418 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (>= 18446744073709551615 x3062) (>= 18446744073709551614 x3020) (= (x2893 (+ x639 32)) x2623) (= (x2032 36) x1861) (>= 18446744073709551614 x1708) (>= 18446744073709551615 x2464) (> x3020 x424) (= x2231 (+ 32 x3020)) (<= x1858 18446744073709551615) (<= x424 18446744073709551613) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x113) x2594) (= x1469 (x2893 (+ x3062 x639))) (or (>= 18446746139588821027 x1469) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x1469)) (< x563 x126) (= x1858 (x2032 x2453)) (= (+ 224 x2464) x563) (>= 18446744073709551615 x343) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x2581) (>= 18446746139588821027 x2581)) (not (> x424 x3020)) (= (x2893 (+ x1641 x1506)) x2057) (= x2503 (x2893 (+ x2581 31))) (= (+ 63 x1669) x455) (>= 18446744073709551613 x424) (= (x2893 (+ x2581 32)) x1626) (= x283 (+ x456 32)) (>= 18446744073709551614 x424) (= x1506 (x2032 x2581)) (<= 1 x3020) (= (x2032 x1469) x1748) (= (+ x567 x563 32) x126) (or (>= 18446744073709551614 x424) (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x424)) (= x1575 (x2032 132)) (= x343 (x2032 x1752)) (<= x1506 18446744073709551615) (>= 18446744073709551614 x424) (= x418 (x1149 (- x212 x338))) (>= 18446744073709551613 x424) (= (* 128 x1858) x338) (>= x2464 2) (or (and (= (<= x1220 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2503)) (> x1220 x2503)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2503))) (= x1867 (+ x2231 x1748)) (= (x2032 x2623) x3062) (= (+ x1708 x3020) x2464) (= x113 (+ x1682 63)) (>= 1461501637330902918203684832716283019655932542975 x726) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x424) (<= x424 18446744073709551614)) (or (and (> x1220 x2466) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2466) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1220))) (and (> x2466 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1220 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1641 (x2893 (+ x424 32))) (= x2453 (x2893 (+ 36 x1575))) (= (x2893 (+ x2277 x343)) x2581) (not (> x3020 x2464)) (= (x2893 (+ 32 x2453)) x1436) (= x567 (* 32 x1858)) (= x2466 (x2893 (+ 31 x1469))) (= (x2893 (+ x2594 x424)) x3020) (= x1752 (x2893 (+ x2821 32))) (< x2464 x563)) (and (=> x1985 x986) (=> (and (= x1586 x126) (not x1985)) x1482))) x1334))
(assert (x246 x1018))
(assert (= (x1087 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208)) x149))
(assert (x246 x1522))
(assert (= (and x1971 (not x512)) x2922))
(assert (= (and x2431 x2969) x2074))
(assert (x246 x30))
(assert (x246 x3112))
(assert (= x2223 (x1480 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (< (x2947 x1206 x22 x141 x1119 x924) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x100 x1206 x110 x342 x704 x2990 x1540 x447)))
(assert (x246 x780))
(assert (x246 x2068))
(assert (x246 x174))
(assert (= x2025 (x175 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042))))
(assert (x246 x1429))
(assert (= x1173 (x175 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (=> (>= 10000 x2532) (= (x1945 x2532) 0)))
(assert (= (and (not x1526) x1028) x2882))
(assert (x246 x2477))
(assert (= (x1087 (x785 64 x1199 1)) 1))
(assert (x246 x862))
(assert (= (=> (and (= (= x362 0) x1448) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3055 x661))) (= x416 (x2893 (+ (mod (+ x1943 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1578))) (= (x538 x283) x1815) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1578) (= x362 (x2893 (+ x3055 x661))) (= x2525 (x538 192)) (= (x538 x2525) x882) (= (x538 x1828) x217) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1578) (<= 1 x416) (= (* 32 x362) x1943) (= (x538 x1815) x3055) (<= x362 18446744073709551615) (< x1578 x416) (<= x1578 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x538 x217) x661)) (and (=> (and (= x416 x2094) x1448) x2853) (=> (and (and (= (x2893 (+ x871 32)) x1901) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x416) (= x1605 (x2893 (+ x1578 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x416)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x416)) (= (x2893 (+ x416 32)) x429) (= (x1149 (- x362 1)) x2011) (= x871 (x2893 (+ 32 x429))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x416) (= (= x362 1) x1091) (= (x2893 (+ 32 x1901)) x2024) (not (= x416 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x416 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x915 (x2893 (+ x1605 32))) (= (x2893 (+ 160 x416)) x2131) (< x416 x2131)) (not x1448)) (and (=> (and (not x1091) (and (= (x2893 (+ x970 32)) x2433) (not (= x2131 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (= x2011 1) x2396) (= x863 (x2893 (+ 32 x2433))) (<= x2131 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ 160 x2131)) x1659) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2131) (= (x2893 (+ x2131 32)) x970) (= x1602 (x2893 (+ x863 32))) (not (= x2131 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2131) (> x1659 x2131) (not (= x2131 115792089237316195423570985008687907853269984665640564039457584007913129639776)))) (and (=> (and (= x1659 x1621) x2396) x1366) (=> (not x2396) x2455))) (=> (and x1091 (= x2131 x1621)) x1366))))) x2452))
(assert (not (x2367 (x2947 x1173 x1431 x1239 x996 x800))))
(assert (< (x588 x1929 x300 x1260 x86 x3024 x627) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x3055))
(assert (x246 x1878))
(assert (x246 x1909))
(assert (x246 x1293))
(assert (= (x175 (x588 x1206 x1093 x2264 x323 x2790 x796)) x1206))
(assert (=> (<= x2111 10000) (= 0 (x1945 x2111))))
(assert (x246 x1710))
(assert (= (x1945 (x2947 x3129 x1966 x1100 x229 x2923)) (x2947 x3129 x1966 x1100 x229 x2923)))
(assert (< 10000 (x3027 x3129 x2865)))
(assert (x246 x896))
(assert (= x1971 (or x3113 x486)))
(assert (=> (>= 10000 x2941) (= 0 (x1945 x2941))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (x246 x1517))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639712))
(assert (x246 x1700))
(assert (= (and x1755 (not x2723)) x1647))
(assert (= (x2947 x1375 x2681 x2625 x755 x1882) (x1945 (x2947 x1375 x2681 x2625 x755 x1882))))
(assert (= x3018 (x2781 (x588 x1173 x2987 x1228 x2195 x3018 x2061))))
(assert (x246 x2474))
(assert (= x1238 (x1087 (x785 x2025 x2235 x1238))))
(assert (=> (<= x2264 10000) (= 0 (x1945 x2264))))
(assert (x246 x2508))
(assert (x246 x2692))
(assert (x246 x1578))
(assert (=> (<= x941 10000) (= 0 (x1945 x941))))
(assert (x246 x176))
(assert (not x2210))
(assert (x246 x2818))
(assert (x246 x2290))
(assert (= x672 (x2781 (x2947 x2669 x709 x3005 x2192 x672))))
(assert (x246 x52))
(assert (x246 x1621))
(assert (x246 x1614))
(assert (x2367 18446744073709551167))
(assert (=> (<= x1029 10000) (= 0 (x1945 x1029))))
(assert (x246 x2795))
(assert (= (and x880 (not x2067)) x3007))
(assert (x246 x32))
(assert (x3077 x885))
(assert (= (x24 (x2947 x2326 x2831 x2354 x1315 x1778)) x1315))
(assert (= (x3016 (x588 x2104 x557 x1544 x1686 x1756 x2868)) x2868))
(assert (= (and x816 x1322) x2879))
(assert (= (and x2020 (not x315)) x1039))
(assert (x246 x2216))
(assert (= (=> (and (= (not (< 1 x417)) x259) (= x417 (x740 x1578))) (and x1499 x259)) x2254))
(assert (= x3108 (x228 (x3027 x2669 x3108))))
(assert (x246 x3092))
(assert (> (x2322 x1173 x848 x3096 x1507) 10000))
(assert (= (x228 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)) x2161))
(assert (< (x588 x1173 x2987 x1228 x2195 x3018 x2061) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2220))
(assert (x246 x734))
(assert (x2367 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (= x47 (and x3135 x85)))
(assert (x246 x701))
(assert (= (and x298 (not x911)) x306))
(assert (x246 x45))
(assert (x246 x1301))
(assert (= (and (not x2913) x67) x2979))
(assert (x246 x275))
(assert (= (x2781 (x588 x2088 x2756 x2432 x1993 x335 x2415)) x335))
(assert (x246 x2116))
(assert (x1105 x2307))
(assert (x246 x1264))
(assert (= x1114 (x1480 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (x246 x731))
(assert (x2367 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x246 x1362))
(assert (x246 x2089))
(assert (x246 x1892))
(assert (x246 x14))
(assert (=> (<= x2316 10000) (= (x1945 x2316) 0)))
(assert (x246 x1782))
(assert (x246 x2423))
(assert (x246 x695))
(assert (= (x2781 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x993))
(assert (= (x24 (x100 x1206 x110 x342 x704 x2990 x1540 x447)) x704))
(assert (x246 x846))
(assert (x246 x627))
(assert (= (and x2638 x1346) x51))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x3129 x1966 x1100 x229 x2923)))
(assert (= x722 (x2781 (x588 x1269 x862 x1525 x1594 x722 x1564))))
(assert (= (x175 (x785 64 x1199 1)) 64))
(assert (x246 x1504))
(assert (x246 x549))
(assert (x246 x44))
(assert (not (x2367 (x2322 x3129 x138 x479 x789))))
(assert (x246 x1931))
(assert (= (or x326 x1108) x2137))
(assert (= x1545 (x228 (x2947 x2826 x1545 x293 x2035 x2941))))
(assert (x246 x154))
(assert (x246 x1189))
(assert (x246 x3081))
(assert (x246 x2491))
(assert (= x928 (x2781 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x2669 x3108)))
(assert (not (x2367 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442))))
(assert (=> (>= 10000 x3036) (= (x1945 x3036) 0)))
(assert (x246 x1508))
(assert (x246 x1840))
(assert (=> (<= x2151 10000) (= (x1945 x2151) 0)))
(assert (x246 x2203))
(assert (x246 x1912))
(assert (= x592 (x2781 (x100 x2972 x2688 x1904 x1926 x592 x602 x41))))
(assert (x246 x3010))
(assert (x246 x1329))
(assert (x246 x675))
(assert (x246 x2118))
(assert (=> (>= 10000 x684) (= (x1945 x684) 0)))
(assert (= (x1945 77929798818658108206329458850487298488570292587025318323788629963054520467456) 0))
(assert (x246 x2565))
(assert (x246 x1408))
(assert (x246 x295))
(assert (not (x2367 (x3027 x1173 x1841))))
(assert (x246 x1151))
(assert (= (x228 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722)) x3090))
(assert (x246 x142))
(assert (x2367 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (< 10000 (x785 x2151 x513 x433)))
(assert (x246 x1967))
(assert (=> (>= 10000 x41) (= 0 (x1945 x41))))
(assert (x246 x3105))
(assert (x246 x698))
(assert (x246 x2916))
(assert (x246 x667))
(assert (= x2151 (x175 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036))))
(assert (= x2519 (and x821 x2917)))
(assert (=> (>= 10000 x1906) (= 0 (x1945 x1906))))
(assert (x246 x1511))
(assert (x246 x467))
(assert (x246 x2457))
(assert (= x572 (=> (and (= (x2412 x1931) x2669) (= (x2893 (+ x662 x897)) x2788) (<= 1 x1296) (= x2541 (x1149 (- x3040 32))) (= x700 x1296) (<= x1931 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2788 x625) (<= x1931 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2893 (+ 32 x1931)) x2085) (= x757 (>= 224 x2669)) (= x1296 (x2893 (+ x1785 x83))) (= (* 32 x2331) x897) (<= x2331 4) (= x83 (* x2331 32)) (<= x1931 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x774 x2331) (<= 1 x700) (= x3040 (x1149 (- x700 x1931))) (< x1931 x700)) (and x757 (=> (and (= (x2893 (+ x2085 96)) x390) (= (x2893 (+ 128 x2085)) x2814) (= x559 (x2893 (+ x2085 64))) (= (x2893 (+ 32 x2085)) x1821) (= x2981 (x2893 (+ x2085 64))) (= (x2412 x1821) x1847) (= x2071 (x2893 (+ 160 x2085))) (= x2250 (x2412 x2085)) (= x2256 (x2947 x2669 x709 x3005 x2192 x672)) (= x165 (x2893 (+ x2085 96))) (= (x2893 (+ x2085 96)) x3123) (= x741 (x2412 x690)) (= (x2412 x1563) x1787) (= (ite (= 0 x2669) x3073 (ite (<= x2669 32) x3148 (ite (<= x2669 64) x1670 (ite (<= x2669 96) x1008 (ite (>= 128 x2669) x2256 (ite (<= x2669 160) x881 (ite (<= x2669 192) x916 (ite (<= x2669 224) x364 x1791)))))))) x2667) (= (x3027 x2669 x3108) x3148) (= (x2412 x1057) x672) (< x700 x1127) (= x1670 (x785 x2669 x2862 x1788)) (= x462 (x2412 x2085)) (= (x2893 (+ 32 x2085)) x2601) (= (x588 x2669 x462 x1244 x1460 x3093 x741) x881) (= x2710 (x2412 x814)) (= x364 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)) (= (x2893 (+ x2085 192)) x2690) (= x893 (x2412 x1320)) (= x1741 (x2412 x2085)) (= x1726 (x2412 x2233)) (= (x2893 (+ 32 x106)) x2351) (= x916 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151)) (= x814 (x2893 (+ x2085 64))) (= (x2893 (+ 64 x2085)) x1730) (= (x2893 (+ 128 x2085)) x1563) (= (x2893 (+ x2085 32)) x1383) (= (x2412 x1730) x2192) (= (x2412 x165) x928) (= (x2412 x2071) x1151) (= (x2893 (+ 32 x700)) x106) (= x1176 (<= x1375 224)) (= (x2893 (+ x2085 160)) x2001) (= x3093 (x2412 x3123)) (= x3005 (x2412 x2601)) (= x2360 (x2893 (+ 32 x2085))) (= x3092 (x2893 (+ x2351 32))) (= x1244 (x2412 x1383)) (= (x2412 x2085) x709) (= (x2893 (+ 32 x2085)) x2233) (= x1375 (x1838 x700)) (= (x2893 (+ x2085 32)) x812) (= (x2893 (+ x700 32)) x1097) (= (x2893 (+ 96 x2085)) x1057) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x700) (>= x700 1)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x700) (<= x700 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= x1906 (x2412 x812)) (= (x2412 x2690) x1780) (= x345 (x2412 x2814)) (= (x2412 x559) x1572) (= (x2412 x390) x1178) (= (x1149 (- x172 32)) x2881) (= x1320 (x2893 (+ 64 x2085))) (= x172 (x1149 (- x1127 x700))) (= (x2412 x2085) x2862) (= x1008 (x2322 x2669 x1741 x1726 x2710)) (= (x2412 x2085) x3108) (= (x2412 x2085) x1478) (= x1788 (x2412 x2360)) (= (x2412 x2981) x1460) (= x275 (x2412 x2001)) (= x1127 (x2893 (+ 96 x106))) (= (x1299 0) x3073) (= (x2893 (+ 128 x2085)) x690)) (and x1176 (=> (and (= (x1838 x1938) x1521) (= x2199 (x1299 0)) (= x1882 (x1838 x2684)) (= (x2893 (+ 32 x1941)) x2180) (= x163 (x2893 (+ x1097 128))) (= x1938 (x2893 (+ 96 x1097))) (= x1590 (x1838 x1097)) (= (x1838 x1163) x1676) (= x922 (ite (= 0 x1375) x2199 (ite (<= x1375 32) x561 (ite (<= x1375 64) x1000 (ite (<= x1375 96) x1079 (ite (<= x1375 128) x2376 (ite (>= 160 x1375) x311 (ite (>= 192 x1375) x2348 (ite (>= 224 x1375) x811 x2158))))))))) (= (x1838 x1097) x589) (= (x1838 x2451) x2625) (= x2451 (x2893 (+ 32 x1097))) (= x1500 (x2893 (+ 64 x1097))) (= (x2893 (+ 32 x1097)) x752) (= (x2947 x1375 x2681 x2625 x755 x1882) x2376) (= (x2893 (+ 32 x1097)) x1960) (= x1837 (x2893 (+ x1097 32))) (= x2945 (x2893 (+ x408 32))) (= (>= 224 x2326) x2185) (= x2075 (x2893 (+ 192 x1097))) (= (x2893 (+ 96 x1097)) x1557) (= (x2893 (+ x1097 96)) x2684) (= x846 (x1838 x1097)) (= x1941 (x2893 (+ 32 x1127))) (= (x1838 x1097) x477) (= x1631 (x1838 x371)) (= x1416 (x2893 (+ 64 x1097))) (= (x1838 224) x1396) (= (x1838 x1018) x2777) (= (x2893 (+ 128 x1097)) x371) (= (x1838 x2468) x755) (= x1000 (x785 x1375 x2837 x2885)) (= (x2893 (+ x1941 160)) x2606) (= x2468 (x2893 (+ 64 x1097))) (= (x1838 x145) x562) (= x1163 (x2893 (+ x1097 32))) (= x2191 (x1838 x3014)) (= (x1149 (- x2606 x1127)) x1769) (= x2348 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) (= x1079 (x2322 x1375 x1590 x2357 x715)) (= (x1838 x1960) x2885) (= x2837 (x1838 x1097)) (= (x3027 x1375 x846) x561) (= x610 (x2893 (+ 64 x1097))) (= (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595) x811) (= (x1838 x610) x2951) (= x3014 (x2893 (+ 128 x1097))) (= (x1838 x2320) x2051) (= (x1838 x1097) x2118) (= x247 (x1149 (- x1769 32))) (= x204 (x1300 1461501637330902918203684832716283019655932542975 x2646)) (> x2606 x1127) (= x119 (x2893 (+ x1097 160))) (= x1539 (x1838 x1416)) (= (x1838 x163) x751) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x1127) (>= x1127 129)) (and (<= x1127 126) (<= 2 x1127)) (and (<= x1127 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1127 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= (x1838 x1500) x715) (= x3070 (x2893 (+ x1127 32))) (= x311 (x588 x1375 x589 x562 x1661 x2777 x2191)) (= (x1838 x1837) x810) (= (x2893 (+ 160 x1097)) x2320) (= (x1838 x2075) x2595) (= (x1838 x119) x1573) (= (x1838 x1557) x706) (= (x2893 (+ 32 x2180)) x3045) (= x2681 (x1838 x1097)) (= x3121 (x2893 (+ 64 x1097))) (= (x1838 256) x2646) (= x408 (x2893 (+ x3045 32))) (= (x2893 (+ 96 x1097)) x1018) (= (x1838 x3121) x1661) (= (x2893 (+ 32 x1097)) x145) (= x2326 (x1283 x1127)) (= (x1838 x752) x2357)) (and x2185 (=> (and (= x2753 (x2893 (+ x3070 64))) (= (x1283 x2274) x874) (= (x2893 (+ 64 x2606)) x1825) (= x1799 (x785 x2326 x2705 x2092)) (= x2494 (x2893 (+ x3070 32))) (= x218 (x1283 x3070)) (= x2643 (x2893 (+ x2606 32))) (= (x1283 x3070) x3112) (= (x2893 (+ 128 x3070)) x1170) (= x736 (x1283 x3070)) (= (x1283 x1365) x1679) (= (x588 x2326 x218 x895 x226 x1240 x2010) x292) (= x519 (x1283 x435)) (= x2156 (x3153 x1825)) (= (x1283 x2550) x1253) (= (x2893 (+ 64 x3070)) x2779) (= (x100 x2326 x1278 x813 x624 x1253 x2940 x1679) x870) (= (x1283 x1170) x2010) (= (x1283 x48) x895) (= (x2893 (+ x3070 32)) x1911) (= (x2893 (+ 32 x3070)) x48) (= (x1283 x244) x2499) (= (x1299 0) x943) (= x1860 (x2893 (+ 96 x3070))) (= (x2893 (+ x3070 32)) x3012) (= x573 (x3153 x2606)) (= x2854 (x2893 (+ 128 x3070))) (= x157 (x2893 (+ 32 x3070))) (= x2940 (x1283 x2854)) (= x1745 (x2893 (+ x3070 96))) (= (x1283 x1911) x1297) (= (x1283 x758) x194) (= x1240 (x1283 x1860)) (= (x1283 x2494) x2092) (= (x2893 (+ 160 x3070)) x2274) (= x2242 (x1283 x3070)) (= (x3027 x2326 x736) x3057) (= x1778 (x1283 x1745)) (= (x2893 (+ x3070 32)) x435) (= x503 (x2893 (+ 32 x2237))) (= x1365 (x2893 (+ 160 x3070))) (= (x2322 66 x573 x3003 x2156) x1221) (= x1278 (x1283 x3070)) (= (= x835 65) x2343) (= x244 (x2893 (+ x3070 96))) (= x2550 (x2893 (+ 96 x3070))) (= (x1283 x483) x601) (= x226 (x1283 x3042)) (= (x1283 x2779) x1315) (= (x1283 x398) x1533) (= x2831 (x1283 x3070)) (= x398 (x2893 (+ 192 x3070))) (= x2065 (x2322 x2326 x2242 x1297 x194)) (= (x1283 x157) x2354) (= x919 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533)) (= (x2893 (+ x3070 64)) x483) (= x624 (x1283 x2753)) (= x1952 (x2893 (+ x3070 128))) (= (x2893 (+ 2 x2606)) x2237) (= (x1283 x1952) x1627) (= x835 (x3153 x3020)) (= x3003 (x3153 x2643)) (= (x2893 (+ x3070 64)) x3042) (= x969 (ite (= x2326 0) x943 (ite (>= 32 x2326) x3057 (ite (<= x2326 64) x1799 (ite (<= x2326 96) x2065 (ite (<= x2326 128) x912 (ite (>= 160 x2326) x292 (ite (>= 192 x2326) x870 (ite (<= x2326 224) x919 x2423))))))))) (= x912 (x2947 x2326 x2831 x2354 x1315 x1778)) (= x813 (x1283 x3012)) (= (x2893 (+ 64 x3070)) x758) (= x2705 (x1283 x3070))) (and (=> (and (and (= (x3153 x3020) x2714) (= x2697 0) (= x1063 2) (= x2714 x2283) (= x2606 x1015)) (not x2343)) x2105) (=> (and (and (or (and x1754 (and (= x2346 x2606) (= 3 x688) (= 0 x8) (= x2585 x3043))) (and (not x1754) (and (or (and x3135 (and (= x3147 x2346) (= 0 x8) (= x2585 0) (= 1 x688))) (and (and (= 0 x2585) (= x3147 x2346) (= x822 x8) (= 0 x688)) (not x3135))) (and (= x1405 (x1149 (- x3147 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2606) (<= x2606 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2866 (x2893 (+ 64 x3147))) x201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2606) (= x2576 (x1149 (- x3147 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2606)) (= (x2893 (+ 32 x3147)) x608) (= x2378 (x2866 (x2893 (+ x3147 96)))) (= (x2893 (+ x2606 32)) x3147) (= x967 (x1300 1461501637330902918203684832716283019655932542975 x822)) (not (= x2606 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 1461501637330902918203684832716283019655932542975 x199) (not (= x2606 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x2866 (x2893 (+ 32 x3147))) x955) (= x3135 (= 0 x967)) (= (x2893 (+ 32 x608)) x3152) (= (x2893 (+ 32 x3152)) x1323) (= (x2994 x2576) x822) (> x3147 x2606) (= 128 x1152) (= x199 (x2402 x1523 x955 x201 x2378)) (= x1523 (x2866 x3147)))))) (and (= (> x3043 57896044618658097711785492504343953926418782139537452191302581570759080747168) x1754) (= (x3153 x2231) x1407) (= x2997 (x443 x1644 248)) (= (x3153 x3002) x3043) (= (+ 32 x3002) x2005) (= (+ x2231 32) x3002) (= (x3153 x2005) x1644))) x2343) x2617)))))))))))
(assert (x246 x1864))
(assert (= (and (not x2786) x2359) x945))
(assert (= (=> (and (= x964 x2124) (= x25 x2914) (= x2847 x685) (= x1143 x1848)) x2589) x1138))
(assert (= (or x1379 x1714) x1862))
(assert (=> (>= 10000 x336) (= 0 (x1945 x336))))
(assert (x2367 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (x246 x2433))
(assert (x246 x646))
(assert (x246 x356))
(assert (x246 x1152))
(assert (x246 x1086))
(assert (= x1929 (x175 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722))))
(assert (x246 x2733))
(assert (x246 x1243))
(assert (x246 x2467))
(assert (=> (>= 10000 x285) (= 0 (x1945 x285))))
(assert (=> (>= 10000 x3046) (= 0 (x1945 x3046))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2322 x2025 x2084 x1246 x336)))
(assert (=> (<= x786 10000) (= (x1945 x786) 0)))
(assert (x246 x2676))
(assert (x246 x1445))
(assert (= (x228 (x3027 x3129 x2865)) x2865))
(assert (=> (<= x2491 10000) (= 0 (x1945 x2491))))
(assert (x1105 x1857))
(assert (x246 x648))
(assert (= x457 (x228 (x100 x2025 x457 x2946 x1041 x655 x735 x2223))))
(assert (x246 x2009))
(assert (=> (<= x1736 10000) (= 0 (x1945 x1736))))
(assert (x246 x29))
(assert (x246 x2999))
(assert (< (x2947 x1173 x1431 x1239 x996 x800) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1206 (x175 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (x246 x2104))
(assert (=> (>= 10000 x2687) (= 0 (x1945 x2687))))
(assert (x246 x2826))
(assert (= (x1945 134217728) 0))
(assert (x1630 x1777))
(assert (x246 x2990))
(assert (x246 x1564))
(assert (=> (>= 10000 x1462) (= (x1945 x1462) 0)))
(assert (= x573 (x228 (x2322 66 x573 x3003 x2156))))
(assert (= x2295 (x1087 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036))))
(assert (x246 x1942))
(assert (= x1056 (or x668 x3061 x1915 x696 x2108)))
(assert (= x2264 (x1087 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639649))
(assert (=> (>= 10000 x1679) (= 0 (x1945 x1679))))
(assert (x246 x389))
(assert (= (and x770 (not x867)) x1058))
(assert (> (x100 x1269 x285 x319 x2397 x1919 x1061 x1885) 10000))
(assert (x246 x1418))
(assert (x246 x1356))
(assert (x246 x2889))
(assert (x246 x1745))
(assert (x246 x1678))
(assert (x246 x568))
(assert (= (x2322 x2104 x471 x188 x1450) (x1945 (x2322 x2104 x471 x188 x1450))))
(assert (not (x2367 (x3027 x2025 x2967))))
(assert (x2367 88383320980755791914082775550597828907713979028428263264130000526486271950848))
(assert (x246 x2843))
(assert (x246 x2490))
(assert (x246 x2034))
(assert (x246 x2878))
(assert (x246 x373))
(assert (x246 x2275))
(assert (= x1269 (x175 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (x246 x939))
(assert (x246 x1545))
(assert (x246 x1263))
(assert (= (x588 x1173 x2987 x1228 x2195 x3018 x2061) (x1945 (x588 x1173 x2987 x1228 x2195 x3018 x2061))))
(assert (< 10000 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)))
(assert (= (x228 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) x2572))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)))
(assert (= (x228 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) x2688))
(assert (x246 x2757))
(assert (= x1587 (x2781 (x2947 x1929 x2404 x2650 x675 x1587))))
(assert (x246 x3014))
(assert (=> (<= x601 10000) (= 0 (x1945 x601))))
(assert (= x108 (or x2205 x2957 x47)))
(assert (= (x1945 (x2322 x2972 x851 x1878 x1078)) (x2322 x2972 x851 x1878 x1078)))
(assert (= x152 (and x3059 (not x2463))))
(assert (x246 x2478))
(assert (not (x2367 (x2322 66 x573 x3003 x2156))))
(assert (x246 x2610))
(assert (x246 x2545))
(assert (x246 x2590))
(assert (x246 x1886))
(assert (= x1643 (and x600 x1979)))
(assert (x246 x7))
(assert (x246 x2741))
(assert (x246 x963))
(assert (x246 x1273))
(assert (x246 x2131))
(assert (=> (<= x1893 10000) (= (x1945 x1893) 0)))
(assert (x246 x1390))
(assert (=> (<= x2916 10000) (= (x1945 x2916) 0)))
(assert (= (x1087 (x2947 x2826 x1545 x293 x2035 x2941)) x293))
(assert (=> (<= x1883 10000) (= (x1945 x1883) 0)))
(assert (= (x1945 (x2322 x3129 x138 x479 x789)) (x2322 x3129 x138 x479 x789)))
(assert (x1105 x2697))
(assert (=> (<= x3005 10000) (= (x1945 x3005) 0)))
(assert (= x1525 (x1087 (x588 x1269 x862 x1525 x1594 x722 x1564))))
(assert (x246 x1342))
(assert (x246 x671))
(assert (x246 x689))
(assert (= (x2781 (x2947 x1269 x2280 x182 x2371 x1302)) x1302))
(assert (= x274 (=> (and (= (x2893 (+ 32 x159)) x527) (>= x1762 1) (<= x159 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x159 x2292) (= (x2893 (+ x966 32)) x3125) (= x2292 (x2893 (+ x159 64))) (= x1762 (x3064 x1790)) (= (x2893 (+ 32 x1790)) x1217) (= x494 (x74 x3125)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x159) (= (x2893 (+ 32 x3125)) x2794) (not (= x159 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x159 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x827 (x74 x2794)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x159)) (= (not (< 1 x2555)) x1092) (<= x159 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (= x2292 x1844) x2599) x1092))))
(assert (= (and x1346 (not x2638)) x1989))
(assert (x246 x2672))
(assert (= (x175 (x2947 x2104 x2281 x2026 x1736 x2476)) x2104))
(assert (not (x2367 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036))))
(assert (=> (>= 10000 x457) (= (x1945 x457) 0)))
(assert (x246 x1611))
(assert (x246 x1881))
(assert (= x2015 (x228 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (not (x2367 (x1299 0))))
(assert (not (x2367 (x2947 x1269 x2280 x182 x2371 x1302))))
(assert (= x535 (x1087 (x588 x2826 x470 x535 x505 x1294 x389))))
(assert (not (x2367 (x3027 x1206 x1753))))
(assert (= x986 (=> (and (= (x2893 (+ x2668 32)) x50) (= (x2032 x2434) x2513) (= (x2893 (+ 32 x1556)) x2260) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x126) (<= x126 18446744073709551487)) (not (< x1599 x126)) (= (x2893 (+ 32 x2434)) x2668) (= x1599 (x2893 (+ 128 x126))) (= x2672 (x2032 x2668)) (<= x126 18446744073709551614) (= (x2893 (+ x3015 32)) x1556) (>= 18446744073709551614 x126) (= (x2893 (+ x1436 32)) x2434) (or (<= x1436 2065879269316) (>= x1436 57896044618658097711785492504343953926634992332820282019728792003956564820645)) (>= 5 x2734) (= (not (> x1858 1)) x1466) (<= x2513 1461501637330902918203684832716283019655932542975) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1609) (or (<= x126 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x126)) (<= x126 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x126)) (< x126 x1599) (= x3015 (x2893 (+ x126 32))) (= (x2032 x50) x1160) (= x2734 (x2032 x1436)) (<= x126 18446744073709551615) (= (x1149 (- x212 x1436)) x1609) (<= 128 x1609) (>= 18446744073709551615 x126)) (and x1466 (=> (= x1599 x1586) x1482)))))
(assert (x246 x1244))
(assert (x246 x1190))
(assert (x246 x363))
(assert (x246 x1863))
(assert (x246 x469))
(assert (= x1694 (x24 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786))))
(assert (x246 x114))
(assert (=> (<= x2172 10000) (= (x1945 x2172) 0)))
(assert (x246 x2677))
(assert (=> (>= 10000 x110) (= (x1945 x110) 0)))
(assert (x246 x2601))
(assert (x246 x2204))
(assert (x246 x379))
(assert (x246 x1541))
(assert (x246 x2791))
(assert (x246 x1066))
(assert (< (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1217))
(assert (x246 x1997))
(assert (x246 x660))
(assert (x246 x2397))
(assert (x246 x1882))
(assert (= x1439 (x1087 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (=> (>= 10000 x813) (= (x1945 x813) 0)))
(assert (x246 x2007))
(assert (= (x3016 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) x2940))
(assert (= x2619 (or x680 x2751)))
(assert (x246 x2301))
(assert (= (x228 (x2947 x1375 x2681 x2625 x755 x1882)) x2681))
(assert (= (x24 (x100 x2972 x2688 x1904 x1926 x592 x602 x41)) x1926))
(assert (= (x1480 (x253 x2025 x268 x3118 x2538 x2898 x2532 x415 x1042)) x415))
(assert (x246 x1769))
(assert (x246 x1397))
(assert (= (x228 (x588 x2972 x2139 x2300 x295 x2097 x3048)) x2139))
(assert (x246 x2732))
(assert (not (x2367 (x2322 x2972 x851 x1878 x1078))))
(assert (= 0 (x1945 2189116922)))
(assert (not (x2367 (x588 x2669 x462 x1244 x1460 x3093 x741))))
(assert (= (x1945 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)))
(assert (x246 x2948))
(assert (x246 x975))
(assert (x246 x2323))
(assert (x246 x1908))
(assert (x246 x2211))
(assert (x246 x1760))
(assert (= (and x298 x911) x2081))
(assert (x246 x1538))
(assert (x246 x3119))
(assert (=> (<= x2756 10000) (= 0 (x1945 x2756))))
(assert (=> (>= 10000 x1874) (= 0 (x1945 x1874))))
(assert (x246 x895))
(assert (x246 x190))
(assert (x246 x1825))
(assert (x246 x207))
(assert (= x709 (x228 (x2947 x2669 x709 x3005 x2192 x672))))
(assert (= (x24 (x2947 x2088 x1809 x2063 x264 x44)) x264))
(assert (not (x2367 (x2947 x2088 x1809 x2063 x264 x44))))
(assert (x246 x1737))
(assert (> (x3027 x2972 x1786) 10000))
(assert (= x2876 (x1087 (x785 x1269 x383 x2876))))
(assert (x246 x3028))
(assert (= (x228 (x2947 x1206 x22 x141 x1119 x924)) x22))
(assert (= (x24 (x588 x2669 x462 x1244 x1460 x3093 x741)) x1460))
(assert (= (and x1056 (not x2780)) x2618))
(assert (= x2486 (and x2155 (not x1985))))
(assert (=> (<= x2679 10000) (= 0 (x1945 x2679))))
(assert (x246 x2400))
(assert (=> (<= x505 10000) (= 0 (x1945 x505))))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1105 x586))
(assert (x246 x359))
(assert (x246 x338))
(assert (= x1646 (and (not x866) x354)))
(assert (x246 x1734))
(assert (= x848 (x228 (x2322 x1173 x848 x3096 x1507))))
(assert (= (x588 x2151 x361 x2336 x2369 x989 x377) (x1945 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (= (or x1159 x647) x1755))
(assert (x246 x1007))
(assert (x246 x380))
(assert (x246 x1048))
(assert (x246 x1099))
(assert (x246 x1923))
(assert (= x1237 (and x290 (not x2396))))
(assert (x246 x3025))
(assert (x246 x1787))
(assert (= (=> (and (or x1165 (not x1165)) (= x1165 (= 0 x1937))) x2409) x604))
(assert (x246 x605))
(assert (=> (>= 10000 x1246) (= (x1945 x1246) 0)))
(assert (= (x228 (x3027 x2104 x2664)) x2664))
(assert (x246 x2699))
(assert (x246 x1695))
(assert (x246 x1801))
(assert (= (x228 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151)) x2250))
(assert (x246 x2896))
(assert (= (and (not x742) x1862) x58))
(assert (= x1787 (x3016 (x100 x2669 x2250 x1906 x893 x928 x1787 x1151))))
(assert (< (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1275 x381) x1994))
(assert (x246 x3152))
(assert (x3077 x1337))
(assert (x246 x1416))
(assert (< (x785 x1173 x2679 x1640) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x1987))
(assert (=> (<= x1389 10000) (= (x1945 x1389) 0)))
(assert (x246 x2959))
(assert (x3077 x1700))
(assert (x246 x232))
(assert (= (x24 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x682))
(assert (not (x2367 (x2947 x2326 x2831 x2354 x1315 x1778))))
(assert (= x2826 (x175 (x785 x2826 x2896 x1019))))
(assert (x246 x716))
(assert (x246 x2648))
(assert (x246 x2013))
(assert (= (x228 (x785 x1206 x1817 x1899)) x1817))
(assert (= (x228 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780)) x1478))
(assert (x246 x872))
(assert (x246 x2355))
(assert (x246 x231))
(assert (= x2831 (x228 (x2947 x2326 x2831 x2354 x1315 x1778))))
(assert (x246 x2277))
(assert (= x629 (or x2486 x208)))
(assert (=> (>= 10000 x717) (= 0 (x1945 x717))))
(assert (=> (<= x1817 10000) (= (x1945 x1817) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)))
(assert (x246 x2719))
(assert (not (x2367 (x2322 x1173 x848 x3096 x1507))))
(assert (= x2789 (=> (and (= x607 0) (= (x1820 x217) x607) (= x29 x729) (= 0 x1513) (= (ite (= x2545 0) (ite (= x2545 0) 1 0) (ite (= 0 x1433) 1 0)) x1513)) x2588)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)))
(assert (x246 x1400))
(assert (x246 x131))
(assert (x246 x752))
(assert (=> (>= 10000 x471) (= (x1945 x471) 0)))
(assert (= (and x693 (not x2628)) x523))
(assert (x246 x2505))
(assert (x246 x1919))
(assert (x2367 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (x246 x593))
(assert (x246 x1206))
(assert (x246 x122))
(assert (= (x2781 (x2947 x1375 x2681 x2625 x755 x1882)) x1882))
(assert (x246 x2465))
(assert (= (=> (and (= x2008 (x2893 (+ 128 x1001))) (= x702 x2337) (= (x1300 1461501637330902918203684832716283019655932542975 x1933) x2337) (= 1 x2056) (= (x538 x2008) x1933) (= (x1300 1461501637330902918203684832716283019655932542975 x1879) x702)) x2949) x2495))
(assert (= (x24 (x2322 x2326 x2242 x1297 x194)) x194))
(assert (not (x2367 (x3027 x3129 x2865))))
(assert (x246 x3037))
(assert (= (x228 (x3027 x1269 x2380)) x2380))
(assert (= x1999 (and x899 x2906)))
(assert (not (x2367 (x2947 x2972 x650 x697 x554 x2034))))
(assert (x246 x535))
(assert (x246 x256))
(assert (= (x1945 115792089237316195423570985008687907853269984665640564039439137263839420088228) 0))
(assert (x246 x920))
(assert (=> (>= 10000 x2595) (= 0 (x1945 x2595))))
(assert (x246 x1281))
(assert (x246 x690))
(assert (x246 x1592))
(assert (= x2497 (and x2964 (not x1304))))
(assert (not (x2367 (x253 x2669 x1478 x1847 x1572 x1178 x345 x275 x1780))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x2826 x458)))
(assert (< 10000 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)))
(assert (x246 x1795))
(assert (=> (<= x1093 10000) (= 0 (x1945 x1093))))
(assert (x246 x2195))
(assert (> (x253 x1375 x477 x1676 x1539 x1521 x751 x2051 x2595) 10000))
(assert (x246 x952))
(assert (x246 x2386))
(assert (= x2172 (x1087 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600))))
(assert (= (x3016 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)) x2278))
(assert (= (x1480 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) x717))
(assert (not (x2367 (x588 x1375 x589 x562 x1661 x2777 x2191))))
(assert (=> (>= 10000 x513) (= 0 (x1945 x513))))
(assert (< 10000 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)))
(assert (x246 x2085))
(assert (x246 x3102))
(assert (x246 x2043))
(assert (=> (>= 10000 x1140) (= 0 (x1945 x1140))))
(assert (=> (<= x389 10000) (= 0 (x1945 x389))))
(assert (= x2333 (x1087 (x2322 x2088 x2687 x2333 x1472))))
(assert (x246 x638))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x246 x2244))
(assert (= (x228 (x3027 x2151 x1515)) x1515))
(assert (=> (>= 10000 x2865) (= 0 (x1945 x2865))))
(assert (x246 x1952))
(assert (= (and (not x1091) x705) x290))
(assert (x246 x1306))
(assert (x246 x918))
(assert (=> (>= 10000 x2826) (= (x1945 x2826) 0)))
(assert (= (x1087 (x588 x2326 x218 x895 x226 x1240 x2010)) x895))
(assert (= x1253 (x2781 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679))))
(assert (=> (<= x1349 10000) (= (x1945 x1349) 0)))
(assert (x246 x2833))
(assert (= (or x2299 x2642) x3151))
(assert (x246 x2653))
(assert (=> (>= 10000 x2568) (= 0 (x1945 x2568))))
(assert (=> (>= 10000 x2293) (= 0 (x1945 x2293))))
(assert (= (or x1468 x2398) x192))
(assert (=> (<= x2250 10000) (= (x1945 x2250) 0)))
(assert (x246 x416))
(assert (=> (>= 10000 x444) (= (x1945 x444) 0)))
(assert (=> (<= x2967 10000) (= (x1945 x2967) 0)))
(assert (=> (>= 10000 x1539) (= (x1945 x1539) 0)))
(assert (= (x100 x2972 x2688 x1904 x1926 x592 x602 x41) (x1945 (x100 x2972 x2688 x1904 x1926 x592 x602 x41))))
(assert (x246 x1111))
(assert (= (x1945 (x3027 x2104 x2664)) (x3027 x2104 x2664)))
(assert (= x789 (x24 (x2322 x3129 x138 x479 x789))))
(assert (= x1804 (x2689 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (x246 x1481))
(assert (x246 x949))
(assert (x246 x79))
(assert (x246 x1296))
(assert (= x2336 (x1087 (x588 x2151 x361 x2336 x2369 x989 x377))))
(assert (x246 x2841))
(assert (=> (>= 10000 x3108) (= 0 (x1945 x3108))))
(assert (x246 x1573))
(assert (not (x2367 (x100 x1929 x3090 x594 x2771 x1106 x1369 x2722))))
(assert (x246 x1652))
(assert (= x582 (and x2859 (not x93))))
(assert (x246 x1421))
(assert (=> (<= x1069 10000) (= (x1945 x1069) 0)))
(assert (x246 x1975))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x1269 x2380)))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (x246 x155))
(assert (= (x2781 (x100 x1375 x2118 x810 x2951 x706 x1631 x1573)) x706))
(assert (x246 x1640))
(assert (= x1559 (x24 (x2947 x2151 x406 x1887 x1559 x865))))
(assert (x246 x413))
(assert (x246 x2987))
(assert (=> (>= 10000 x2660) (= (x1945 x2660) 0)))
(assert (= (x1945 (x2947 x2669 x709 x3005 x2192 x672)) (x2947 x2669 x709 x3005 x2192 x672)))
(assert (x246 x2647))
(assert (not (x2367 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616))))
(assert (= (x175 (x785 x2972 x341 x1805)) x2972))
(assert (x246 x1910))
(assert (x246 x1906))
(assert (x246 x459))
(assert (x246 x2389))
(assert (x246 x1375))
(assert (=> (>= 10000 x3018) (= 0 (x1945 x3018))))
(assert (x246 x2143))
(assert (x246 x273))
(assert (x246 x1785))
(assert (x246 x87))
(assert (=> (<= x458 10000) (= (x1945 x458) 0)))
(assert (x246 x2487))
(assert (x246 x728))
(assert (x246 x1071))
(assert (= x1742 (and x3084 (not x3086))))
(assert (x246 x2329))
(assert (= (and (not x2562) x615) x2751))
(assert (x246 x1021))
(assert (x246 x3050))
(assert (=> (<= x1151 10000) (= (x1945 x1151) 0)))
(assert (= x229 (x24 (x2947 x3129 x1966 x1100 x229 x2923))))
(assert (x246 x97))
(assert (x246 x2337))
(assert (=> (<= x1919 10000) (= 0 (x1945 x1919))))
(assert (x246 x1817))
(assert (= (x1945 79228162514264337593543950336) 0))
(assert (x246 x1773))
(assert (x246 x3029))
(assert (x246 x2835))
(assert (x246 x751))
(assert (=> (<= x2010 10000) (= (x1945 x2010) 0)))
(assert (x1105 x3017))
(assert (= (x2781 (x2947 x2151 x406 x1887 x1559 x865)) x865))
(assert (x246 x1224))
(assert (x246 x2084))
(assert (x246 x2405))
(assert (< 10000 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)))
(assert (x246 x1579))
(assert (x246 x2649))
(assert (x246 x1583))
(assert (x246 x470))
(assert (=> (>= 10000 x2499) (= 0 (x1945 x2499))))
(assert (x246 x744))
(assert (= 0 (x1945 18446744073709551455)))
(assert (x246 x284))
(assert (> (x2322 x3129 x138 x479 x789) 10000))
(assert (x246 x1638))
(assert (x246 x2024))
(assert (x246 x2583))
(assert (x246 x2520))
(assert (= x2326 (x175 (x253 x2326 x3112 x519 x601 x2499 x1627 x874 x1533))))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x246 x1688))
(assert (=> (<= x756 10000) (= (x1945 x756) 0)))
(assert (x246 x151))
(assert (x246 x2564))
(assert (=> (>= 10000 x1431) (= 0 (x1945 x1431))))
(assert (= x2072 (=> (and (= (x2893 (+ 32 x3050)) x1049) (= x56 (not (< 4 x2046))) (= (x2893 (+ x497 32)) x2220) (= x2044 (x1123 x3050))) (and x56 (=> (and (= x2677 4) (= x1520 x1049) (= x2220 x1566)) x580)))))
(assert (x246 x991))
(assert (=> (<= x2158 10000) (= (x1945 x2158) 0)))
(assert (x246 x625))
(assert (x246 x2033))
(assert (= (=> (and (= x1015 x2346) (= x2283 x2585) (= x8 x2697) (= x1063 x688)) x2105) x2617))
(assert (x246 x2233))
(assert (x246 x300))
(assert (= (or x1328 x2460) x2969))
(assert (x246 x2335))
(assert (x246 x1183))
(assert (= x323 (x24 (x588 x1206 x1093 x2264 x323 x2790 x796))))
(assert (x246 x3018))
(assert (x246 x1889))
(assert (=> (<= x2485 10000) (= (x1945 x2485) 0)))
(assert (= x2109 (x2781 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849))))
(assert (x246 x1687))
(assert (x246 x3090))
(assert (= (or x2526 x346) x1169))
(assert (x246 x2046))
(assert (= x1244 (x1087 (x588 x2669 x462 x1244 x1460 x3093 x741))))
(assert (x246 x661))
(assert (x246 x1593))
(assert (x246 x1800))
(assert (= (x24 (x100 x2151 x2111 x2295 x894 x803 x1893 x3036)) x894))
(assert (x246 x314))
(assert (x246 x2053))
(assert (=> (<= x1694 10000) (= (x1945 x1694) 0)))
(assert (= (=> (and (= (x538 x1611) x598) (= x3000 (not (> x598 1)))) (and x3000 x2452)) x2949))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x100 x1206 x110 x342 x704 x2990 x1540 x447)))
(assert (> (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87) 10000))
(assert (not (x2367 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193))))
(assert (= (x2689 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x1421))
(assert (x246 x1093))
(assert (x246 x1179))
(assert (= x336 (x24 (x2322 x2025 x2084 x1246 x336))))
(assert (=> (>= 10000 x383) (= 0 (x1945 x383))))
(assert (=> (>= 10000 x2354) (= 0 (x1945 x2354))))
(assert (x246 x2898))
(assert (x246 x1085))
(assert (= x1884 (x24 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078))))
(assert (=> (<= x2262 10000) (= 0 (x1945 x2262))))
(assert (not (x2367 (x100 x1206 x110 x342 x704 x2990 x1540 x447))))
(assert (x246 x1269))
(assert (x246 x2361))
(assert (x246 x473))
(assert (x246 x3122))
(assert (x246 x1447))
(assert (=> (<= x2688 10000) (= (x1945 x2688) 0)))
(assert (x246 x128))
(assert (x246 x36))
(assert (x246 x2413))
(assert (=> (>= 10000 x675) (= 0 (x1945 x675))))
(assert (x246 x2075))
(assert (x246 x727))
(assert (x246 x2272))
(assert (x3077 x2841))
(assert (= x772 (and x1982 x206)))
(assert (x246 x636))
(assert (= x1874 (x24 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421))))
(assert (=> (>= 10000 x2898) (= 0 (x1945 x2898))))
(assert (x246 x1286))
(assert (=> (<= x810 10000) (= 0 (x1945 x810))))
(assert (= (and x2396 x290) x3072))
(assert (x246 x976))
(assert (= (and x2922 (not x854)) x2762))
(assert (= x2210 (=> (and (and (<= 0 x239) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2162) (<= x2290 4294967295) (= x2362 x2799) (not (= x2799 x2293)) (not (= x952 x684)) (>= 1461501637330902918203684832716283019655932542975 x797) (not (= x952 x2799)) (<= x318 4294967295) (<= 0 x399) (>= x953 0) (= x1940 (< 0 (x2530 x903))) (<= x2524 1461501637330902918203684832716283019655932542975) (<= 1 x102) (<= 1 x2290) (<= x623 4294967295) (>= 1461501637330902918203684832716283019655932542975 x102) (>= x2970 1) (>= x2162 0) (not (= x903 x952)) x452 (not (= x102 x1502)) (not (= x1808 x2361)) (<= x1704 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2795 (x2309 32)) (not (= x1808 x952)) (= (< 0 (x2530 x684)) x452) x712 (>= 1461501637330902918203684832716283019655932542975 x2795) (<= x2293 1461501637330902918203684832716283019655932542975) (<= x1363 1461501637330902918203684832716283019655932542975) (>= x684 1) (<= 0 x1411) (not (= x2361 x102)) (>= x1502 1) (= x2186 x684) (>= x2980 0) (<= x3136 4294967295) (>= x3051 0) (not (= x2361 x952)) (>= 1461501637330902918203684832716283019655932542975 x239) (not (= x1808 x2293)) (not (= x903 x684)) (>= x2795 1) x1284 (>= 1461501637330902918203684832716283019655932542975 x953) (= 0 x1677) (= x2356 (> (x2530 x102) 0)) (not (= x102 x903)) x1703 (<= x399 1461501637330902918203684832716283019655932542975) (not (= x1502 x1808)) (not (= x1502 x2799)) (not (= x684 x1808)) (not (= x2799 x2361)) (<= x2144 1461501637330902918203684832716283019655932542975) (= x797 x2799) (= (< 0 (x2530 x952)) x712) (= (> (x2530 x1502) 0) x1284) (>= x2799 1) (>= x2670 0) (not (= x1502 x952)) (= x903 x2706) (not (= x1808 x102)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x263) (>= x1582 64) (not (= x1808 x903)) (<= 1 x797) (>= x1363 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1411) (<= x2706 1461501637330902918203684832716283019655932542975) (not (= x2799 x684)) (>= 1461501637330902918203684832716283019655932542975 x684) (>= 1461501637330902918203684832716283019655932542975 x2799) (not (= x2799 x903)) (<= 1 x1808) (not (= x2361 x903)) (<= 0 x1704) (= x1588 (< 0 (x2530 x2799))) (>= x2293 1) (<= x1582 4294967295) (>= x903 1) (>= 1461501637330902918203684832716283019655932542975 x2361) (>= x2706 1) (not (= x2293 x2361)) x2356 (= x502 36) (>= 1461501637330902918203684832716283019655932542975 x1502) (not (= x903 x2293)) (>= 1461501637330902918203684832716283019655932542975 x903) (<= 0 x1317) x929 (<= x3051 1461501637330902918203684832716283019655932542975) (= (> (x2530 x1808) 0) x1074) (<= 0 x263) (>= x1509 0) x2784 (<= x1317 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2275 4294967295) (>= x2361 1) (>= 4294967295 x1620) (<= x2670 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> (x2530 x2293) 0) x929) (not (= x903 x1502)) (not (= x684 x2293)) (= x903 x333) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2980) (= (< 0 (x2530 x2361)) x2784) x1940 (not (= x1808 x2799)) (<= x1261 4294967295) (<= 1 x952) x1074 (not (= x102 x952)) (not (= x2799 x102)) x1588 (<= x333 1461501637330902918203684832716283019655932542975) (= x2293 x2970) (>= 1461501637330902918203684832716283019655932542975 x2970) (not (= x1502 x2293)) (not (= x2293 x102)) (>= 1461501637330902918203684832716283019655932542975 x1808) (= 0 x2239) (not (= x952 x2293)) (>= x333 1) (<= x952 1461501637330902918203684832716283019655932542975) (not (= x2361 x684)) (= (= x2795 x684) x1703) (not (= x684 x1502)) (not (= x102 x684)) (not (= x1502 x2361))) (and (and (and (= x221 (x180 x684)) (= x121 32) (<= 1 x1761) (= x251 false) (= (x785 64 x1199 1) x2805) (<= x212 2065879269444) (= (x2134 x111) x2747) (= x221 x378) (= false x2047) (= x166 false) (= x111 x239) (<= x40 127) (= x196 false) (= x2448 false) (= false x1154) (= x2386 1889567281) (<= 676 x212) (= (x2530 x684) x1761) (>= 127 x40) (= x2549 x1055) (= x2549 (x1836 x2805))) (and (= x2474 x1363) (and (and (= x2129 (+ x2229 x355 32)) (= (* x1261 32) x3156) (= x355 (+ 420 x2291)) (= x2016 (+ x2129 32 x2974)) (= x2748 (- x2129 36)) (= (- x355 36) x2123) (= (- x2016 36) x1156) (= (* 160 x1620) x2229) (= x818 (+ 32 x355)) (= x1404 (+ x3156 x948 32)) (= (+ 32 x2016) x552) (= x215 (+ 32 x948)) (= x898 x399) (>= x2621 0) (>= 134217728 x2621) (= x1241 (- x948 36)) (= x318 x2870) (= (* x2621 32) x2342) (< x2054 x2870) (= (* 32 (- x2621 1)) x2054) (= x2590 (+ x2129 32)) (= (* x623 160) x2974) (>= x2342 x2870) (= x2291 (* 128 x2290)) (= x948 (+ 32 x2016 x2342))) (and (= x2101 x1317) (and (and (= x2442 false) (= x659 x1411) (= x212 x1404)) (and (and (and (or (and (and (>= x2578 32) (<= x2578 4294967295) (= x872 1)) x2906) (and (= x2184 x872) (not x2906))) (and (= x2170 false) (>= 127 x2614) (= x997 (x540 x2361)) (= x239 x2916) (= x997 x932) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x2013) (<= 1 x1771) (= x2308 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= (x2530 x2361) x1771) (= 128 x1486) (<= x2578 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 127 x2614) (= x1023 false) (= 2189116922 x2878) (= x545 (x2159 x2916)) (<= 32 x2578) (= x2906 (> x2184 0)))) (= x2162 x329)) (= x239 x1935))))))) (and (= x2362 x1199) (= x1335 false)))) x5)))
(assert (x246 x1767))
(assert (x246 x1406))
(assert (= x298 (or x255 x2183)))
(assert (x246 x2669))
(assert (x246 x2354))
(assert (= (x175 (x785 64 x257 1)) 64))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x246 x1758))
(assert (=> (>= 10000 x1590) (= 0 (x1945 x1590))))
(assert (= x136 (x1480 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (x246 x2092))
(assert (x246 x1904))
(assert (not (x2367 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (=> (>= 10000 x1788) (= (x1945 x1788) 0)))
(assert (=> (<= x1904 10000) (= (x1945 x1904) 0)))
(assert (x246 x2181))
(assert (=> (>= 10000 x2862) (= 0 (x1945 x2862))))
(assert (= x1499 (=> (and (= x1412 (x2893 (+ x1080 64))) (= x1340 (x761 x1412)) (= (< 0 x790) x2723) (= x1080 (x761 192)) (= (x761 x1340) x790)) (and (=> (and (and (> x241 x1844) (<= x1844 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2007 (x761 160)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1844)) (= x681 (x2893 (+ x1422 32))) (<= x1844 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x384 (> x214 0)) (<= x1844 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x614 (x2893 (+ 32 x1844))) (= (x761 x2007) x91) (= x241 (x2893 (+ x1844 128))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1844)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1844)) (= x802 (x761 x2310)) (= (x761 192) x1445) (= (x2893 (+ x614 32)) x1422) (= (x1211 x802) x214) (= x2310 (x2893 (+ x1445 64))) (= x1490 (x761 x283))) x2723) (and (=> (and (and (or (and (not x3044) (= x3126 x1942)) (and x3044 (and (= x1942 1) (>= x2803 32) (>= 4294967295 x2803)))) (and (= x2926 (x2893 (+ 4 x241))) (= (x1211 x802) x2604) (>= x2604 1) (<= x2803 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x1300 1461501637330902918203684832716283019655932542975 x461) x768) (= (x1211 x731) x2053) (= (x2893 (+ x802 32)) x731) (= (x1211 x2053) x461) (= x3044 (> x3126 0)) (>= x2803 32))) x384) x517) (=> (and (not x384) (= x2749 x241)) x2496))) (=> (and (not x2723) (= x1844 x1924)) x3079)))))
(assert (x246 x471))
(assert (x246 x563))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x246 x1024))
(assert (x246 x2499))
(assert (x246 x2087))
(assert (> (x785 x2826 x2896 x1019) 10000))
(assert (=> (<= x101 10000) (= (x1945 x101) 0)))
(assert (= x962 (x228 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804))))
(assert (= (x1945 (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)) (x253 x2972 x727 x2660 x1694 x2778 x1614 x717 x786)))
(assert (< (x100 x2972 x2688 x1904 x1926 x592 x602 x41) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2015))
(assert (=> (<= x849 10000) (= 0 (x1945 x849))))
(assert (= (=> (and (= (> x296 0) x1145) (= x296 (x3004 x139)) (= x139 (x3004 x1088))) (and (=> (and (not x1145) (= x2884 x1931)) x2744) (=> (and x1145 (and (= (x2893 (+ 32 x1232)) x3139) (= x2324 (x2893 (+ x646 32))) (= x256 (x3004 x999)) (= x2843 (x1300 1461501637330902918203684832716283019655932542975 x1959)) (= (x2893 (+ x11 32)) x754) (= (x3004 x1398) x1959) (= (x3004 x646) x1191) (= x676 (x2893 (+ x1230 32))) (= (> x775 0) x1531) (>= x1191 1) (= (x2893 (+ 32 x468)) x1230) (= x2165 (x2893 (+ x999 32))) (= (x2175 x11) x775) (= x302 (x2893 (+ x676 32))) (= x468 (x2893 (+ x2884 32))) (= x999 (x2893 (+ x1398 32))) (= x646 (x3004 x1088)) (= x11 (x3004 x2165)) (= x1398 (x3004 x2324)) (= x1232 (x2893 (+ 128 x468))))) (and (=> (not x1531) x1951) (=> (and x1531 (and (= x587 (x2597 x754)) (= x1849 (> x775 32)))) (and (=> (and (and (= (x2893 (+ 32 x3139)) x2928) (= x1218 (x2893 (+ x754 32))) (= x3109 (> x775 64)) (= (x760 x1218) x1863)) x1849) (and (=> (not x3109) x1951) (=> (and (and (= x1541 (x2893 (+ x754 64))) (= (x2822 x1541) x1011) (= (> x775 96) x2638) (= x951 (x2893 (+ x3139 64)))) x3109) (and (=> (not x2638) x1951) (=> x2638 x1010))))) (=> (not x1849) x1951))))))) x656))
(assert (x246 x1399))
(assert (= x16 (and (not x1479) x1227)))
(assert (=> (<= x293 10000) (= (x1945 x293) 0)))
(assert (x246 x2160))
(assert (x3077 x887))
(assert (= (x24 (x2322 x2088 x2687 x2333 x1472)) x1472))
(assert (x246 x1816))
(assert (x246 x2578))
(assert (x246 x1777))
(assert (x246 x2283))
(assert (=> (>= 10000 x2972) (= (x1945 x2972) 0)))
(assert (x246 x479))
(assert (x246 x522))
(assert (= (x2781 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x965))
(assert (= x2088 (x175 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527))))
(assert (< (x588 x1375 x589 x562 x1661 x2777 x2191) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x246 x2037))
(assert (x246 x928))
(assert (= (x228 (x785 64 x257 1)) x257))
(assert (x246 x2575))
(assert (x246 x2347))
(assert (x246 x1879))
(assert (x246 x491))
(assert (x246 x3030))
(assert (= (x2947 x2104 x2281 x2026 x1736 x2476) (x1945 (x2947 x2104 x2281 x2026 x1736 x2476))))
(assert (x246 x2224))
(assert (x246 x222))
(assert (x246 x2122))
(assert (x246 x1523))
(assert (not (x2367 (x588 x2104 x557 x1544 x1686 x1756 x2868))))
(assert (= x1099 (x1087 (x588 x3129 x3083 x1099 x1696 x1349 x388))))
(assert (= x2205 (and x85 (not x3135))))
(assert (=> (>= 10000 x846) (= 0 (x1945 x846))))
(assert (x246 x1725))
(assert (x246 x2872))
(assert (x246 x3013))
(assert (x246 x195))
(assert (x246 x2558))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= x2687 (x228 (x2322 x2088 x2687 x2333 x1472))))
(assert (x246 x204))
(assert (= x1381 (and x400 x1314)))
(assert (x246 x291))
(assert (x246 x3139))
(assert (=> (<= x1826 10000) (= (x1945 x1826) 0)))
(assert (x246 x736))
(assert (x246 x104))
(assert (x246 x1609))
(assert (= x2098 (and x2511 x942)))
(assert (=> (<= x1882 10000) (= (x1945 x1882) 0)))
(assert (= (x2689 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87)) x87))
(assert (x246 x2981))
(assert (= x1423 (x1087 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849))))
(assert (x3077 x2646))
(assert (x246 x1069))
(assert (x246 x1933))
(assert (x246 x957))
(assert (x246 x162))
(assert (= (x3016 (x100 x1173 x2332 x1447 x718 x2070 x1608 x2616)) x1608))
(assert (not (x2367 (x588 x1929 x300 x1260 x86 x3024 x627))))
(assert (x246 x457))
(assert (= (x175 (x2322 x1929 x1267 x756 x2221)) x1929))
(assert (=> (>= 10000 x234) (= 0 (x1945 x234))))
(assert (=> (<= x2328 10000) (= 0 (x1945 x2328))))
(assert (< 10000 (x2947 x2025 x1168 x77 x1118 x234)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x2088 x1809 x2063 x264 x44)))
(assert (= x996 (x24 (x2947 x1173 x1431 x1239 x996 x800))))
(assert (x246 x1438))
(assert (= (x24 (x588 x1173 x2987 x1228 x2195 x3018 x2061)) x2195))
(assert (x246 x286))
(assert (x1105 x716))
(assert (x3077 x1777))
(assert (= x218 (x228 (x588 x2326 x218 x895 x226 x1240 x2010))))
(assert (= (and (not x787) x934) x2702))
(assert (x2367 111117225372770300986259473995147604481826136133417213952520719377678811004928))
(assert (x246 x1209))
(assert (x246 x1559))
(assert (=> (>= 10000 x1929) (= (x1945 x1929) 0)))
(assert (= (x1945 (x2947 x2088 x1809 x2063 x264 x44)) (x2947 x2088 x1809 x2063 x264 x44)))
(assert (x246 x1049))
(assert (= (and (not x476) x2140) x3114))
(assert (x3077 x250))
(assert (x246 x3104))
(assert (= (x1087 (x2947 x1206 x22 x141 x1119 x924)) x141))
(assert (x246 x1898))
(assert (= (x1480 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x2556))
(assert (x246 x2328))
(assert (x246 x1088))
(assert (=> (<= x2097 10000) (= 0 (x1945 x2097))))
(assert (x246 x1425))
(assert (=> (>= 10000 x697) (= (x1945 x697) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x785 x3129 x1751 x1029)))
(assert (x246 x998))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x1173 x1841)))
(assert (x246 x2680))
(assert (x246 x3134))
(assert (=> (>= 10000 x77) (= (x1945 x77) 0)))
(assert (= (x228 (x785 x1929 x2986 x38)) x2986))
(assert (x246 x841))
(assert (x246 x271))
(assert (= (and x1849 x2665) x487))
(assert (=> (<= x1880 10000) (= (x1945 x1880) 0)))
(assert (x246 x2214))
(assert (x246 x1902))
(assert (x246 x402))
(assert (x246 x1698))
(assert (= x692 (or x2120 x1005)))
(assert (x246 x2839))
(assert (not (x2367 (x2322 x2104 x471 x188 x1450))))
(assert (x246 x200))
(assert (= (x1087 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x2612))
(assert (x246 x71))
(assert (< (x2947 x1929 x2404 x2650 x675 x1587) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or (and x2596 x808) x940) x1567))
(assert (> (x100 x2326 x1278 x813 x624 x1253 x2940 x1679) 10000))
(assert (x246 x458))
(assert (= x2566 (or x2662 x2080 x1798 x306 x1918)))
(assert (=> (<= x650 10000) (= 0 (x1945 x650))))
(assert (= x27 (x3016 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527))))
(assert (x246 x215))
(assert (= (=> (and (= (x2856 x2426) x1269) (<= 1 x1702) (= (* x2046 32) x436) (= (x2893 (+ x2426 32)) x2022) (= x1021 (x2893 (+ x436 x1492))) (<= x2426 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1149 (- x1566 x2426)) x817) (<= x2426 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (>= 224 x1269) x1094) (<= x2046 4) (<= 1 x1566) (= x301 (x1149 (- x817 32))) (= x1702 (x2893 (+ x779 x3102))) (= x1566 x1702) (= x2677 x2046) (< x2426 x1566) (= (* x2046 32) x3102) (= x1021 x1520) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2426)) (and x1094 (=> (and (= (x2893 (+ x2022 128)) x807) (= (x2856 x2022) x285) (= (x2893 (+ 32 x2022)) x2113) (= (x2856 x279) x1698) (= (x2893 (+ x1377 32)) x1695) (= x862 (x2856 x2022)) (= x509 (x2856 x484)) (= (x2893 (+ x2022 32)) x324) (= (x2893 (+ x2022 96)) x1406) (= x484 (x2893 (+ 96 x2022))) (= x1690 (x2893 (+ 32 x1566))) (= (x2893 (+ x2022 32)) x2344) (= (x2893 (+ x2022 32)) x1132) (= x529 (x2856 x1739)) (= x722 (x2856 x1406)) (= x2826 (x2800 x1566)) (= x1553 (x2322 x1269 x537 x1389 x529)) (= x1790 (x2893 (+ 288 x1690))) (= (x1149 (- x2591 32)) x1452) (= (x2856 x2211) x1061) (= (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87) x1645) (= (x588 x1269 x862 x1525 x1594 x722 x1564) x1706) (= x1594 (x2856 x2807)) (= x1179 (x2893 (+ 96 x2022))) (= (x2856 x904) x2316) (= (x2893 (+ x2022 128)) x904) (= (x2856 x1496) x1525) (= (x2893 (+ x2022 64)) x1739) (= (x2893 (+ 160 x2022)) x2106) (= (x1300 1461501637330902918203684832716283019655932542975 x32) x421) (= x852 (x2893 (+ x2022 64))) (= x1619 (x1300 1461501637330902918203684832716283019655932542975 x2422)) (= x2384 (x2893 (+ x2680 32))) (= (x2856 x1132) x1389) (= (x2856 x2022) x383) (or (and (>= x1566 115792089237316195423570985008687907853269984665640564039457584007913129639618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1566)) (and (<= x1566 115792089237316195423570985008687907853269984665640564039457584007913129639615) (>= x1566 1))) (= x1377 (x2893 (+ x1690 32))) (= x1111 (x2893 (+ 32 x1566))) (= (x2856 x2851) x1885) (= (x2856 x52) x2422) (= x1439 (x2856 x2344)) (= (x2893 (+ x891 32)) x1784) (= x2828 (x2893 (+ 64 x2022))) (= x2851 (x2893 (+ 160 x2022))) (= x1223 (x2856 x2022)) (= x87 (x2856 x2305)) (= (x2893 (+ 32 x1695)) x2680) (= (x2856 x1179) x1302) (= x319 (x2856 x1189)) (= x21 (x2856 x852)) (= x32 (x2856 x809)) (= (x2893 (+ x2384 32)) x699) (<= x1698 2) (= x1496 (x2893 (+ 32 x2022))) (= (x2856 x2311) x1909) (= (x1299 0) x1203) (= (x2856 x2828) x2371) (= x2397 (x2856 x1962)) (= x1189 (x2893 (+ x2022 32))) (= (x2856 x1348) x2100) (< x1566 x1790) (= x1919 (x2856 x2888)) (= (x3027 x1269 x2380) x542) (= (x2856 x2106) x2568) (= x2380 (x2856 x2022)) (= (x2893 (+ 64 x2022)) x1962) (= (x2893 (+ x2022 128)) x2211) (= x182 (x2856 x324)) (= (x2856 x2022) x2280) (= (x1149 (- x1790 x1566)) x2591) (= x2807 (x2893 (+ x2022 64))) (= (x785 x1269 x383 x2876) x619) (= x2888 (x2893 (+ x2022 96))) (= x537 (x2856 x2022)) (= x2305 (x2893 (+ x2022 192))) (= x2218 (x100 x1269 x285 x319 x2397 x1919 x1061 x1885)) (= (<= x2826 224) x2287) (= (x2893 (+ x699 32)) x1330) (= x2411 (ite (= 0 x1269) x1203 (ite (>= 32 x1269) x542 (ite (>= 64 x1269) x619 (ite (>= 96 x1269) x1553 (ite (>= 128 x1269) x826 (ite (>= 160 x1269) x1706 (ite (>= 192 x1269) x2218 (ite (<= x1269 224) x1645 x2365))))))))) (= x891 (x2893 (+ 32 x1330))) (= (x2947 x1269 x2280 x182 x2371 x1302) x826) (= x2876 (x2856 x2113)) (= x1564 (x2856 x807))) (and (=> (and (<= 3 x2329) (= x1067 (x2893 (+ x1111 192))) (= x2555 (x2800 x966)) (= x73 (x3027 x2826 x458)) (= (x785 x2826 x2896 x1019) x2399) (= x2329 (x2893 (+ x1790 (mod (+ 32 x730) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (or (and (<= x1790 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1790 321)) (and (>= 318 x1790) (>= x1790 2))) (= (x2800 x1067) x1254) (= (x2893 (+ 32 x1111)) x2860) (<= x2555 18446744073709551615) (= (x1299 0) x3032) (= x458 (x2800 x1111)) (= x2477 (x2893 (+ 160 x1111))) (= x1898 (x2800 x2302)) (= x1305 (= 0 x2555)) (= (x2893 (+ x1111 64)) x49) (= x2302 (x2893 (+ 32 x1111))) (= (x2893 (+ x1111 160)) x80) (= (x2893 (+ x1111 64)) x1342) (= (x2893 (+ x1111 64)) x886) (> x2329 x1790) (= x1807 (x588 x2826 x470 x535 x505 x1294 x389)) (= x1744 (x2893 (+ 32 x1111))) (= (x2893 (+ x1111 128)) x1607) (= (x2800 x49) x2035) (= x1190 (x2893 (+ 64 x1111))) (= (x2800 x2465) x1883) (= x1235 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254)) (= (x2893 (+ 32 x1371)) x966) (= (x2800 x1744) x1019) (= (x2800 x2006) x14) (= (x2800 x314) x2941) (= (x2800 x1342) x1812) (= (x2800 x1111) x1545) (= (x2800 x1111) x2896) (= (x2893 (+ x1111 96)) x2209) (= (x2893 (+ 64 x1111)) x2006) (= (x2893 (+ x1111 96)) x1774) (= x3100 (x2893 (+ 32 x1111))) (= (x2800 x1190) x505) (= x389 (x2800 x1607)) (= x2262 (x2800 x886)) (= (x2893 (+ x1111 32)) x2673) (= (x2800 x2792) x1709) (= (x2947 x2826 x1545 x293 x2035 x2941) x2671) (= x674 (x2322 x2826 x1140 x414 x2262)) (= x314 (x2893 (+ x1111 96))) (= x535 (x2800 x3100)) (= x1114 (x2800 x80)) (= (ite (= 0 x2826) x3032 (ite (>= 32 x2826) x73 (ite (<= x2826 64) x2399 (ite (>= 96 x2826) x674 (ite (>= 128 x2826) x2671 (ite (>= 160 x2826) x1807 (ite (>= 192 x2826) x739 (ite (<= x2826 224) x1235 x638)))))))) x857) (= (x2800 x2209) x101) (= (* 32 x2555) x730) (= (x2800 x2214) x414) (= (x2893 (+ x1111 96)) x2792) (= (x2800 x2860) x1973) (= x2286 (x2800 x2477)) (= (x2800 x1774) x1294) (= x739 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)) (= (x2800 x1111) x1140) (= x470 (x2800 x1111)) (= (x2893 (+ x1111 128)) x2465) (= (x2800 x2673) x293) (= (x2800 x499) x2278) (= (x2800 x1111) x3037) (= x2214 (x2893 (+ x1111 32))) (= (x2893 (+ 128 x1111)) x499) (= (x2800 x1111) x2161)) (and (=> (and (= x159 x2329) x1305) x2154) (=> (and (not x1305) (and (= x753 (= 1 x2555)) (not (= x2329 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x2893 (+ x2168 32)) x2014) (> x1202 x2329) (= (x2893 (+ x1790 32)) x2168) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2329)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2329)) (= x1202 (x2893 (+ x2329 64))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2329) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2329) (= x1792 (x1149 (- x2555 1))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2329) (= x79 (x2893 (+ x2329 32))))) (and (=> (and x753 (= x1202 x1359)) x267) (=> (not x753) x451))))) x2287)))) x580))
(assert (x246 x1916))
(assert (=> (<= x1676 10000) (= (x1945 x1676) 0)))
(assert (x246 x2255))
(assert (= (x228 (x3027 x2025 x2967)) x2967))
(assert (x246 x1389))
(assert (x246 x2110))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1202) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1202) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1202)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1202) (= (= 1 x1792) x2407) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1202)) (> x963 x1202) (= x963 (x2893 (+ 64 x1202))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1202)) (= (x2893 (+ x1202 32)) x1910)) (and x2407 (=> (= x963 x1359) x267))) x451))
(assert (x246 x685))
(assert (x246 x874))
(assert (x246 x318))
(assert (x246 x1669))
(assert (= x249 (or x772 x859)))
(assert (x246 x1061))
(assert (= (x3016 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)) x1712))
(assert (= x517 (=> (and (and (= 1 x578) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x241)) (= (x1265 x1198) x2548) (= x2565 (x2893 (+ x1801 32))) (= x2907 (x1265 x2565)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x241) (> x271 x2907) (= x478 (mod (* x2907 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x271 (x1265 x1490)) (= (x1265 x731) x1801) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2907) (<= x241 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x241) (>= x271 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x241)) (not (= x241 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x3030 (x1265 x2548)) (= x2628 (> x511 0)) (< x241 x1493) (= (x2893 (+ x478 32)) x1062) (= (x1265 x241) x578) (= x2230 (x1265 x802)) (= x511 (ite (= 2 x3030) 1 0)) (= x1198 (x2893 (+ x1490 x1062))) (<= x3030 5) (>= x2230 1) (= x1493 (x2893 (+ x241 32))) (<= 1 x1942)) (or (and (= x511 1) x2628) (and (and (= x3144 (x1265 x2548)) (= x1663 1) (= x3144 3)) (not x2628)))) x2126)))
(assert (x246 x11))
(assert (x246 x1965))
(assert (= (x228 (x2322 x1206 x1069 x1651 x2544)) x1069))
(assert (x246 x362))
(assert (x246 x1067))
(assert (= x1951 (=> (and (= (x1149 (- x2973 32)) x1765) (= x2724 (x2893 (+ x3139 x1009))) (= (x2893 (+ 31 x775)) x2405) (= x2973 (x1149 (- x2724 x2884))) (= (x1300 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2405) x1009) (< x2884 x2724) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2884) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2884) (= x2937 (x2893 (+ x3139 x775))) (>= x2724 1) (= x2960 (<= x3129 224)) (<= x2884 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3129 (x2873 x2884)) (= x2133 (x2893 (+ 32 x2884)))) (and x2960 (=> (and (= x136 (x2873 x1281)) (= (x2873 x2169) x1712) (= (x2873 x2977) x1349) (= x1100 (x2873 x1195)) (= (x2873 x1197) x1462) (>= x240 1) (= x191 (x3027 x3129 x2865)) (= (x2893 (+ x2133 160)) x81) (= x240 (x2873 x2285)) (= x138 (x2873 x2133)) (= x232 (x2893 (+ 128 x2133))) (= x1128 (x2893 (+ x2133 64))) (= (x2893 (+ 32 x2133)) x1589) (= x2413 (x2893 (+ 192 x2133))) (= x746 (x703 x1088)) (= (x2873 x232) x388) (= (x2873 x1923) x1884) (= x465 (x2893 (+ 32 x2133))) (= (x2893 (+ 128 x2133)) x1481) (= x1610 (not (> x3158 1))) (= (x703 x746) x3158) (= x120 (x2893 (+ 32 x2133))) (= (x2873 x2133) x2865) (= x1099 (x2873 x465)) (= (x2893 (+ 96 x2133)) x2977) (= x1696 (x2873 x521)) (= x830 (x2893 (+ x2133 32))) (= (x2893 (+ x2133 160)) x1281) (= (x2873 x2413) x1804) (= (x2893 (+ x2133 32)) x1195) (= (x2873 x1589) x1029) (= x521 (x2893 (+ x2133 64))) (= (x2893 (+ x2133 96)) x2971) (= (x2893 (+ 32 x2133)) x237) (= x1699 (x2893 (+ 64 x2133))) (= (ite (= 0 x3129) x1409 (ite (<= x3129 32) x191 (ite (>= 64 x3129) x649 (ite (>= 96 x3129) x577 (ite (<= x3129 128) x1793 (ite (<= x3129 160) x453 (ite (>= 192 x3129) x1691 (ite (<= x3129 224) x2419 x1615)))))))) x3099) (= x2572 (x2873 x2133)) (= (x2873 x2133) x3083) (= x479 (x2873 x237)) (= x2419 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)) (= x1002 (x2893 (+ x2133 96))) (= (x2893 (+ 32 x2285)) x1562) (= (x2873 x1699) x789) (= x2169 (x2893 (+ 128 x2133))) (= (x2873 x1002) x2243) (= x453 (x588 x3129 x3083 x1099 x1696 x1349 x388)) (= (x2873 x120) x2472) (= (x2873 x830) x1830) (= x962 (x2873 x2133)) (= (x2873 x2971) x2923) (= x1197 (x2893 (+ x2133 64))) (= x229 (x2873 x1128)) (= (x1299 0) x1409) (= (x2873 x1481) x806) (= (x2322 x3129 x138 x479 x789) x577) (= (x2893 (+ x2133 96)) x1865) (= (x2873 x81) x2078) (= (x2873 x1865) x2754) (= x1923 (x2893 (+ x2133 64))) (= x649 (x785 x3129 x1751 x1029)) (= (x2873 x2133) x1751) (= x1691 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) (= x1966 (x2873 x2133)) (= x1793 (x2947 x3129 x1966 x1100 x229 x2923))) (and (=> (= x2724 x1931) x2744) x1610))))))
(assert (x246 x1095))
(assert (=> (>= 10000 x504) (= 0 (x1945 x504))))
(assert (=> (>= 10000 x27) (= 0 (x1945 x27))))
(assert (x246 x2513))
(assert (x246 x199))
(assert (x246 x1246))
(assert (< (x3027 x3129 x2865) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 66 (x175 (x2322 66 x573 x3003 x2156))))
(assert (x246 x2264))
(assert (x246 x529))
(assert (x246 x3031))
(assert (x246 x439))
(assert (x246 x2646))
(assert (=> (<= x2754 10000) (= 0 (x1945 x2754))))
(assert (not (x2367 (x2322 x1269 x537 x1389 x529))))
(assert (x246 x503))
(assert (x246 x2591))
(assert (x246 x2481))
(assert (= (=> (and (= (x2893 (+ x379 96)) x1579) (= (x2893 (+ 96 x2042)) x114) (= x1341 (x2579 x114)) (= (not (< 128 x2808)) x2387)) (and x565 x2387)) x1547))
(assert (x246 x2358))
(assert (x246 x2466))
(assert (= x1736 (x24 (x2947 x2104 x2281 x2026 x1736 x2476))))
(assert (x246 x349))
(assert (=> (>= 10000 x537) (= (x1945 x537) 0)))
(assert (= x2300 (x1087 (x588 x2972 x2139 x2300 x295 x2097 x3048))))
(assert (x246 x2300))
(assert (x246 x1163))
(assert (x246 x2472))
(assert (= x2835 (x2781 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193))))
(assert (x246 x2703))
(assert (x246 x1896))
(assert (not (x2367 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600))))
(assert (x246 x2408))
(assert (not (x2367 (x785 x2151 x513 x433))))
(assert (= x2650 (x1087 (x2947 x1929 x2404 x2650 x675 x1587))))
(assert (= x2126 (=> (and (= (x2893 (+ x2548 32)) x1187) (= (x2893 (+ x947 32)) x856) (= x3085 (x1265 x802)) (= x2307 (x1265 x1187)) (= x2765 (x1300 1461501637330902918203684832716283019655932542975 x2307)) (= (x2893 (+ 160 x1311)) x947) (= x583 (x2893 (+ 64 x3074))) (= x1517 (x1265 x2050)) (= (x1265 x1258) x2248) (= x211 (x305 x946)) (= x636 1) (= x2050 (x2893 (+ 32 x1187))) (= (x2893 (+ 32 x2050)) x1258) (= (x2893 (+ x1311 32)) x1234) (= (x1265 x583) x946) (= x2112 (x1300 1461501637330902918203684832716283019655932542975 x91)) (= (x2893 (+ 32 x1234)) x1637) (= (> x211 0) x1519) (= (x2893 (+ 32 x946)) x2163) (>= x3085 1) (= x585 (x1300 1461501637330902918203684832716283019655932542975 x461)) (= (x2893 (+ x1493 4)) x1311) (= (x2893 (+ x1637 32)) x1800) (= (x1265 x731) x3074) (= (x2893 (+ x1800 32)) x2194)) (and (=> (and (and (= x1304 (< 32 x211)) (= x3053 (x3107 x2163))) x1519) (and (=> (not x1304) x2312) (=> (and (and (= x1322 (> x211 64)) (= (x2893 (+ x2163 32)) x2587) (= x55 (x2893 (+ x856 32))) (= x6 (x1866 x2587))) x1304) (and (=> (and (and (= x118 (x2893 (+ x856 64))) (= x3029 (x2469 x2009)) (= (< 96 x211) x2444) (= x2009 (x2893 (+ 64 x2163)))) x1322) (and (=> (not x2444) x2312) (=> x2444 x1477))) (=> (not x1322) x2312))))) (=> (not x1519) x2312)))))
(assert (= (x2947 x1173 x1431 x1239 x996 x800) (x1945 (x2947 x1173 x1431 x1239 x996 x800))))
(assert (x246 x2274))
(assert (x246 x141))
(assert (x246 x80))
(assert (= (and (not x1463) x1732) x1772))
(assert (x246 x433))
(assert (x246 x713))
(assert (= (x175 (x2947 x2972 x650 x697 x554 x2034)) x2972))
(assert (x246 x1348))
(assert (= (x175 (x588 x1375 x589 x562 x1661 x2777 x2191)) x1375))
(assert (= (x175 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x1206))
(assert (= (x1945 (x1299 0)) (x1299 0)))
(assert (= (x1480 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) x2078))
(assert (x246 x2011))
(assert (= (and x1124 x2251) x2484))
(assert (x246 x547))
(assert (x246 x592))
(assert (x1105 x2646))
(assert (< 10000 (x3027 x1173 x1841)))
(assert (x246 x2470))
(assert (= (x228 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x2328))
(assert (x246 x2100))
(assert (=> (<= x585 10000) (= 0 (x1945 x585))))
(assert (x246 x1682))
(assert (x246 x1690))
(assert (= x2080 (and x921 x2060)))
(assert (= x1029 (x1087 (x785 x3129 x1751 x1029))))
(assert (= (x175 (x2322 x2104 x471 x188 x1450)) x2104))
(assert (= 0 (x1945 4294967295)))
(assert (= (x2781 (x100 x3129 x2572 x1830 x1884 x2754 x806 x2078)) x2754))
(assert (< 10000 (x588 x2826 x470 x535 x505 x1294 x389)))
(assert (= (x1087 (x100 x2326 x1278 x813 x624 x1253 x2940 x1679)) x813))
(assert (x246 x932))
(assert (=> (>= 10000 x1753) (= 0 (x1945 x1753))))
(assert (< (x785 x1206 x1817 x1899) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1651 (x1087 (x2322 x1206 x1069 x1651 x2544))))
(assert (x1105 x2385))
(assert (x246 x1377))
(assert (x246 x754))
(assert (x246 x3036))
(assert (> (x588 x2104 x557 x1544 x1686 x1756 x2868) 10000))
(assert (x2367 95932229227554293267862761608555258089024927314852490146714677558661980618752))
(assert (x246 x240))
(assert (not (x2367 (x785 x2669 x2862 x1788))))
(assert (x246 x924))
(assert (< 10000 (x2947 x2088 x1809 x2063 x264 x44)))
(assert (x246 x3003))
(assert (x246 x1434))
(assert (not (x2367 (x588 x1269 x862 x1525 x1594 x722 x1564))))
(assert (x246 x2777))
(assert (= (x228 (x2947 x2025 x1168 x77 x1118 x234)) x1168))
(assert (x3077 x2697))
(assert (x246 x3106))
(assert (x246 x1796))
(assert (x246 x2076))
(assert (= (x1945 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (= 0 (x1945 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (x246 x1651))
(assert (x1105 x1337))
(assert (x246 x2439))
(assert (x246 x820))
(assert (x3077 x2405))
(assert (= 0 (x1945 32542679537407071897843112657522291873774333932075415528008786499928730894336)))
(assert (x246 x1380))
(assert (x246 x2117))
(assert (> (x785 x2104 x2704 x660) 10000))
(assert (= (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87) (x1945 (x253 x1269 x1223 x1439 x21 x509 x2316 x2568 x87))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2947 x2025 x1168 x77 x1118 x234)))
(assert (x246 x212))
(assert (= x479 (x1087 (x2322 x3129 x138 x479 x789))))
(assert (x246 x1924))
(assert (= x696 (and x686 x289)))
(assert (x246 x1156))
(assert (= (x175 (x3027 x1206 x1753)) x1206))
(assert (=> (<= x1502 10000) (= (x1945 x1502) 0)))
(assert (x246 x1279))
(assert (x246 x1316))
(assert (= x2297 (or x2213 x833)))
(assert (=> (>= 10000 x2369) (= 0 (x1945 x2369))))
(assert (=> (<= x415 10000) (= 0 (x1945 x415))))
(assert (not (x2367 (x2947 x2826 x1545 x293 x2035 x2941))))
(assert (x246 x477))
(assert (= x2267 (and x1376 x2215)))
(assert (x246 x2629))
(assert (x246 x1788))
(assert (x246 x2812))
(assert (x246 x1258))
(assert (=> (>= 10000 x1118) (= 0 (x1945 x1118))))
(assert (x246 x1756))
(assert (=> (>= 10000 x894) (= (x1945 x894) 0)))
(assert (= (=> (and (= x2939 (x2032 x1279)) (<= x1639 18446744073709551614) (or (>= x1639 115792089237316195423570985008687907853269984665640564039457584007913129639777) (>= 18446744073709551455 x1639)) (<= x1639 18446744073709551615) (= (x2032 x3087) x1896) (>= 1461501637330902918203684832716283019655932542975 x2939) (= x3120 (x2032 x1454)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1639) (= (not (> x1746 1)) x644) (= x485 (x1149 (- x212 x2867))) (>= 18446744073709551615 x1639) (<= x2160 5) (= (x2893 (+ x3087 32)) x1454) (not (< x2395 x1639)) (<= x485 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (>= x2867 57896044618658097711785492504343953926634992332820282019728792003956564820645) (<= x2867 2065879269284)) (= x593 (x2893 (+ x2867 32))) (not (= x1639 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x3128 1461501637330902918203684832716283019655932542975) (= (x2032 x2867) x2160) (= x3001 (x2893 (+ x1639 32))) (= (x2032 x593) x3128) (= (x2893 (+ 32 x593)) x3087) (= (x2893 (+ 32 x3001)) x1810) (= x1279 (x2893 (+ x1454 32))) (<= x1639 18446744073709551614) (= x122 (x2893 (+ x1810 32))) (<= 160 x485) (= x2395 (x2893 (+ 160 x1639))) (or (<= x1639 18446744073709551455) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1639)) (= x1390 (x2893 (+ x122 32))) (< x1639 x2395)) (and x644 (=> (= x431 x2395) x92))) x850))
(assert (x246 x676))
(assert (x246 x3043))
(assert (= (x228 (x2322 x1375 x1590 x2357 x715)) x1590))
(assert (= (x228 (x253 x2088 x2703 x941 x2543 x2491 x27 x3046 x2527)) x2703))
(assert (x246 x1367))
(assert (x246 x414))
(assert (=> (<= x1564 10000) (= (x1945 x1564) 0)))
(assert (=> (>= 10000 x908) (= 0 (x1945 x908))))
(assert (= (and x1971 x512) x2567))
(assert (x246 x979))
(assert (x246 x3144))
(assert (= (or x1647 x1102) x1850))
(assert (x246 x2062))
(assert (> (x2322 x2669 x1741 x1726 x2710) 10000))
(assert (x246 x377))
(assert (x246 x445))
(assert (=> (>= 10000 x2088) (= 0 (x1945 x2088))))
(assert (= (x3016 (x253 x1206 x1852 x2438 x1142 x993 x291 x908 x1442)) x291))
(assert (x246 x499))
(assert (x246 x98))
(assert (= (x2781 (x253 x2104 x2244 x3157 x1874 x1338 x1711 x2556 x1421)) x1338))
(assert (=> (<= x1494 10000) (= 0 (x1945 x1494))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x588 x2669 x462 x1244 x1460 x3093 x741)))
(assert (x246 x1394))
(assert (= (x3016 (x253 x2151 x1720 x35 x1494 x2835 x2417 x2271 x1193)) x2417))
(assert (= (x1087 (x2947 x2669 x709 x3005 x2192 x672)) x3005))
(assert (= (x228 (x785 x2972 x341 x1805)) x341))
(assert (not (x2367 (x785 x1206 x1817 x1899))))
(assert (= x1904 (x1087 (x100 x2972 x2688 x1904 x1926 x592 x602 x41))))
(assert (< 10000 (x100 x2025 x457 x2946 x1041 x655 x735 x2223)))
(assert (=> (<= x138 10000) (= 0 (x1945 x138))))
(assert (x246 x1632))
(assert (= (x228 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)) x96))
(assert (= (x175 (x2947 x1173 x1431 x1239 x996 x800)) x1173))
(assert (= x3003 (x1087 (x2322 66 x573 x3003 x2156))))
(assert (x246 x2734))
(assert (x246 x650))
(assert (x246 x1571))
(assert (= (x24 (x2947 x2025 x1168 x77 x1118 x234)) x1118))
(assert (x246 x214))
(assert (=> (>= 10000 x573) (= (x1945 x573) 0)))
(assert (x246 x564))
(assert (= (and x3084 x3086) x320))
(assert (x246 x1027))
(assert (x246 x2910))
(assert (x246 x779))
(assert (x246 x2426))
(assert (= x741 (x3016 (x588 x2669 x462 x1244 x1460 x3093 x741))))
(assert (x246 x515))
(assert (x246 x367))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3027 x2104 x2664)))
(assert (x246 x1320))
(assert (x246 x2572))
(assert (x246 x1287))
(assert (x246 x361))
(assert (= (x1945 (x2947 x1206 x22 x141 x1119 x924)) (x2947 x1206 x22 x141 x1119 x924)))
(assert (x246 x2602))
(assert (x246 x2422))
(assert (= (x1480 (x100 x2104 x2848 x2172 x682 x694 x2622 x1600)) x1600))
(assert (x246 x1604))
(assert (x246 x910))
(assert (= x449 (and x320 (not x395))))
(assert (x246 x533))
(assert (x246 x3142))
(assert (x246 x721))
(assert (> (x2947 x2826 x1545 x293 x2035 x2941) 10000))
(assert (> (x588 x2088 x2756 x2432 x1993 x335 x2415) 10000))
(assert (= (x175 (x253 x1929 x96 x1423 x620 x2109 x1121 x151 x849)) x1929))
(assert (not (x2367 (x3027 x2669 x3108))))
(assert (=> (<= x1228 10000) (= 0 (x1945 x1228))))
(assert (= (x1945 2065879269444) 0))
(assert (=> (<= x682 10000) (= (x1945 x682) 0)))
(assert (x246 x1078))
(assert (x246 x1635))
(assert (x246 x825))
(assert (= x1282 (or x3060 x1495)))
(assert (x246 x355))
(assert (= (x228 (x100 x2826 x3037 x1973 x1812 x101 x1883 x2286)) x3037))
(assert (x246 x824))
(assert (= x2496 (=> (= x1924 x2749) x3079)))
(assert (= (x24 (x253 x3129 x962 x2472 x1462 x2243 x1712 x136 x1804)) x1462))
(assert (=> (<= x1812 10000) (= 0 (x1945 x1812))))
(assert (x246 x3048))
(assert (x246 x765))
(assert (x246 x2324))
(assert (x246 x847))
(assert (x246 x283))
(assert (x246 x2914))
(assert (= (=> (and (> x1578 x1908) (= (x538 x1737) x1879) (= 1 x2733) (= x2733 (x538 x1908)) (= (x2893 (+ 32 x1908)) x1578) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1908) (not (= x1908 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x1908 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x538 x671) x1611) (= (< 0 x2323) x475) (not (= x1908 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1737 (x538 160)) (>= x931 1) (<= x1908 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1908 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2323 (x538 x1611))) (and (=> (not x475) x2452) (=> (and (and (>= 5 x1236) (<= 1 x129) (= x321 (x2893 (+ 32 x1611))) (= (x538 x1001) x1236) (= (ite (= 1 x1236) 1 0) x1642) (= (x538 x321) x1001) (= x2317 (= x1642 0)) (= x129 (x538 x1611))) x475) (and (=> (and (not x2317) (and (<= 1 x376) (= x376 x797) (= (x1300 1461501637330902918203684832716283019655932542975 x586) x376) (>= 1461501637330902918203684832716283019655932542975 x376) (= x544 (x2893 (+ 128 x1001))) (= x586 (x538 x544)))) x2949) (=> (and (and (and (= (> x2713 0) x1124) (<= x3106 5) (= x2713 (ite (= 2 x3106) 1 0)) (= (x538 x1001) x3106)) (or (and x1124 (= 1 x2713)) (and (and (= 1 x642) (= 3 x1912) (= (x538 x1001) x1912)) (not x1124)))) x2317) x2495))))) x189))
(assert (= (x175 (x100 x2088 x2328 x2612 x957 x965 x504 x1826)) x2088))
(assert (x246 x2711))
(assert (x246 x2051))
(assert (x1105 x2505))
(assert (x3077 x76))
(assert (x246 x455))
(assert (x246 x1502))
(assert (= (or x523 x2201) x2950))
(assert (x246 x2115))
(assert (x246 x116))
(assert (x2367 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= (x24 (x2322 x2669 x1741 x1726 x2710)) x2710))
(assert (x246 x1857))
(assert (x2367 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (= x1798 (and (not x107) x2574)))
(assert (x246 x1815))
(assert (x246 x1098))
(assert (x246 x335))
(assert (x246 x19))
(assert (x3077 x2355))
(assert (= x564 (x1480 (x253 x1173 x2015 x149 x1880 x2353 x1131 x564 x1208))))
(assert (= x901 (=> (and (= x1934 (x2032 x1996)) (= x1274 (x2032 x2087)) (= x1996 (x2893 (+ 32 x1930))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1361) (>= 18446744073709551455 x1361)) (= (x1149 (- x212 x1434)) x1604) (<= x1361 18446744073709551614) (not (= x1361 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (not (< x1374 x1361)) (= (x2893 (+ 32 x1996)) x2087) (< x1361 x1374) (= (x2893 (+ 32 x278)) x1027) (= x869 (x2032 x1930)) (<= 160 x1604) (= (x2893 (+ x1361 160)) x1374) (= (x2032 x1443) x2504) (= x2347 (x2032 x1434)) (<= x2347 5) (= x1930 (x2893 (+ 32 x1443))) (>= 18446744073709551614 x1361) (= (x2893 (+ x1027 32)) x1678) (>= 18446744073709551615 x1361) (>= 1461501637330902918203684832716283019655932542975 x2504) (or (>= x1434 57896044618658097711785492504343953926634992332820282019728792003956564820645) (>= 2065879269284 x1434)) (or (<= x1361 18446744073709551455) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1361)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1361) (<= x1274 1461501637330902918203684832716283019655932542975) (= (x2893 (+ 32 x1434)) x1443) (>= 18446744073709551615 x1361) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1604) (= x968 (not (> x1488 1))) (= x278 (x2893 (+ x472 32))) (= (x2893 (+ 32 x1361)) x472)) (and x968 (=> (= x1122 x1374) x1949)))))
(assert (x246 x1431))
(assert (x246 x1562))
(assert (= x2826 (x175 (x253 x2826 x2161 x1898 x14 x1709 x2278 x1114 x1254))))
(assert (x246 x345))
(assert (= x3113 (and x3095 x1448)))
(assert (x246 x1565))
(check-sat)
(exit)
