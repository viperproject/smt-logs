(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x428 () Int)
(declare-fun x1326 () Bool)
(declare-fun x41 () Int)
(declare-fun x745 (Int) Int)
(declare-fun x903 () Bool)
(declare-fun x956 () Int)
(declare-fun x1477 () Int)
(declare-fun x819 () Bool)
(declare-fun x642 () Int)
(declare-fun x1422 () Bool)
(declare-fun x891 () Int)
(declare-fun x474 () Bool)
(declare-fun x811 () Int)
(declare-fun x592 () Int)
(declare-fun x1641 () Bool)
(declare-fun x384 () Bool)
(declare-fun x73 () Int)
(declare-fun x50 () Int)
(declare-fun x232 () Int)
(declare-fun x543 () Int)
(declare-fun x1728 () Int)
(declare-fun x1872 () Int)
(declare-fun x1936 () Int)
(declare-fun x961 () Int)
(declare-fun x1748 () Int)
(declare-fun x1427 () Int)
(declare-fun x406 () Int)
(declare-fun x1960 () Bool)
(declare-fun x1906 () Int)
(declare-fun x968 () Int)
(declare-fun x1593 () Int)
(declare-fun x331 () Int)
(declare-fun x763 () Int)
(declare-fun x1833 () Int)
(declare-fun x1955 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x738 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x202 () Int)
(declare-fun x1044 () Int)
(declare-fun x1635 () Bool)
(declare-fun x506 () Int)
(declare-fun x319 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x578 () Int)
(declare-fun x372 () Int)
(declare-fun x539 () Int)
(declare-fun x42 () Int)
(declare-fun x1382 (Int) Int)
(declare-fun x74 () Int)
(declare-fun x916 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x1120 () Int)
(declare-fun x1978 () Int)
(declare-fun x1267 () Int)
(declare-fun x1129 () Int)
(declare-fun x1484 () Int)
(declare-fun x9 () Int)
(declare-fun x1761 () Int)
(declare-fun x153 () Int)
(declare-fun x861 () Int)
(declare-fun x1011 () Int)
(declare-fun x1704 () Int)
(declare-fun x1368 () Int)
(declare-fun x529 () Bool)
(declare-fun x87 () Int)
(declare-fun x1695 () Int)
(declare-fun x1515 (Int) Int)
(declare-fun x1042 () Bool)
(declare-fun x493 () Int)
(declare-fun x1098 () Int)
(declare-fun x496 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x6 () Bool)
(declare-fun x655 () Bool)
(declare-fun x302 () Int)
(declare-fun x1962 () Bool)
(declare-fun x1862 () Int)
(declare-fun x618 () Bool)
(declare-fun x415 () Int)
(declare-fun x1976 () Int)
(declare-fun x1118 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1526 () Int)
(declare-fun x1441 () Int)
(declare-fun x1341 () Bool)
(declare-fun x66 () Bool)
(declare-fun x269 () Int)
(declare-fun x822 () Int)
(declare-fun x1174 () Bool)
(declare-fun x1289 () Int)
(declare-fun x68 () Bool)
(declare-fun x216 () Int)
(declare-fun x186 () Bool)
(declare-fun x844 () Int)
(declare-fun x1148 () Int)
(declare-fun x1181 () Int)
(declare-fun x198 () Int)
(declare-fun x1523 () Int)
(declare-fun x155 () Int)
(declare-fun x1106 () Int)
(declare-fun x1442 () Bool)
(declare-fun x996 () Int)
(declare-fun x1791 () Bool)
(declare-fun x712 () Int)
(declare-fun x1734 () Int)
(declare-fun x241 () Int)
(declare-fun x1055 () Int)
(declare-fun x689 () Bool)
(declare-fun x404 () Bool)
(declare-fun x599 () Int)
(declare-fun x316 () Int)
(declare-fun x1338 () Int)
(declare-fun x1780 () Int)
(declare-fun x1271 () Bool)
(declare-fun x991 () Int)
(declare-fun x1541 () Int)
(declare-fun x245 () Int)
(declare-fun x976 () Int)
(declare-fun x1835 () Int)
(declare-fun x18 () Bool)
(declare-fun x860 () Int)
(declare-fun x1682 () Int)
(declare-fun x360 () Int)
(declare-fun x389 () Int)
(declare-fun x35 () Int)
(declare-fun x1238 () Int)
(declare-fun x1760 () Bool)
(declare-fun x1404 () Int)
(declare-fun x1202 () Int)
(declare-fun x295 () Int)
(declare-fun x199 () Int)
(declare-fun x1152 () Int)
(declare-fun x1189 (Int) Int)
(declare-fun x775 () Int)
(declare-fun x533 () Int)
(declare-fun x255 () Int)
(declare-fun x1588 () Int)
(declare-fun x973 () Int)
(declare-fun x1926 () Int)
(declare-fun x1941 () Int)
(declare-fun x1969 () Bool)
(declare-fun x477 () Int)
(declare-fun x557 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1582 () Int)
(declare-fun x751 () Int)
(declare-fun x1612 () Bool)
(declare-fun x1772 () Int)
(declare-fun x273 () Bool)
(declare-fun x1790 () Int)
(declare-fun x505 () Int)
(declare-fun x669 () Int)
(declare-fun x1160 () Int)
(declare-fun x520 () Bool)
(declare-fun x1046 () Int)
(declare-fun x674 () Bool)
(declare-fun x707 () Int)
(declare-fun x942 () Int)
(declare-fun x149 (Int) Int)
(declare-fun x1540 () Int)
(declare-fun x222 () Int)
(declare-fun x1913 () Int)
(declare-fun x1975 () Int)
(declare-fun x1333 () Int)
(declare-fun x1664 () Int)
(declare-fun x632 () Int)
(declare-fun x1548 () Int)
(declare-fun x1973 () Bool)
(declare-fun x482 () Int)
(declare-fun x3 () Int)
(declare-fun x1062 () Int)
(declare-fun x1388 () Int)
(declare-fun x63 () Int)
(declare-fun x815 () Int)
(declare-fun x1045 () Int)
(declare-fun x944 () Int)
(declare-fun x767 () Int)
(declare-fun x1737 () Int)
(declare-fun x1322 () Int)
(declare-fun x1385 () Int)
(declare-fun x593 () Bool)
(declare-fun x1827 () Int)
(declare-fun x597 () Bool)
(declare-fun x349 () Int)
(declare-fun x56 () Int)
(declare-fun x289 () Bool)
(declare-fun x586 () Bool)
(declare-fun x449 () Int)
(declare-fun x611 () Int)
(declare-fun x731 () Int)
(declare-fun x67 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1850 () Int)
(declare-fun x190 () Int)
(declare-fun x145 () Int)
(declare-fun x298 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x321 () Int)
(declare-fun x948 () Bool)
(declare-fun x147 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x749 () Bool)
(declare-fun x1410 () Int)
(declare-fun x388 () Int)
(declare-fun x1866 () Int)
(declare-fun x1631 () Int)
(declare-fun x1220 () Int)
(declare-fun x1149 () Int)
(declare-fun x878 () Int)
(declare-fun x4 () Int)
(declare-fun x1443 () Bool)
(declare-fun x564 () Int)
(declare-fun x1336 () Int)
(declare-fun x947 () Int)
(declare-fun x423 () Int)
(declare-fun x1673 () Int)
(declare-fun x48 () Int)
(declare-fun x1455 () Int)
(declare-fun x623 () Int)
(declare-fun x1864 () Int)
(declare-fun x366 () Int)
(declare-fun x1091 () Int)
(declare-fun x1927 () Int)
(declare-fun x677 () Int)
(declare-fun x1831 () Bool)
(declare-fun x913 () Int)
(declare-fun x581 () Int)
(declare-fun x927 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x54 (Int Int Int Int Int Int Int) Int)
(declare-fun x1030 () Int)
(declare-fun x1359 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1508 () Int)
(declare-fun x1232 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x472 () Int)
(declare-fun x824 () Int)
(declare-fun x567 () Int)
(declare-fun x1389 () Int)
(declare-fun x34 () Int)
(declare-fun x825 (Int) Int)
(declare-fun x907 () Int)
(declare-fun x789 () Int)
(declare-fun x1539 () Int)
(declare-fun x1209 () Int)
(declare-fun x970 () Int)
(declare-fun x595 () Int)
(declare-fun x447 () Int)
(declare-fun x487 () Int)
(declare-fun x732 () Int)
(declare-fun x836 () Int)
(declare-fun x196 () Int)
(declare-fun x936 () Int)
(declare-fun x1985 () Int)
(declare-fun x554 () Int)
(declare-fun x627 () Int)
(declare-fun x1489 () Int)
(declare-fun x1803 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1935 () Bool)
(declare-fun x132 () Int)
(declare-fun x448 () Int)
(declare-fun x52 () Int)
(declare-fun x1567 () Int)
(declare-fun x272 () Int)
(declare-fun x988 () Int)
(declare-fun x521 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1451 (Int) Int)
(declare-fun x117 () Int)
(declare-fun x513 () Int)
(declare-fun x768 () Int)
(declare-fun x788 () Int)
(declare-fun x1005 () Int)
(declare-fun x121 () Int)
(declare-fun x33 (Int) Int)
(declare-fun x602 (Int) Int)
(declare-fun x177 () Int)
(declare-fun x1905 () Int)
(declare-fun x163 () Int)
(declare-fun x135 () Int)
(declare-fun x183 () Int)
(declare-fun x1851 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x355 (Int) Int)
(declare-fun x1633 () Int)
(declare-fun x1543 () Int)
(declare-fun x14 () Int)
(declare-fun x548 () Int)
(declare-fun x683 () Int)
(declare-fun x514 () Bool)
(declare-fun x187 () Int)
(declare-fun x263 () Int)
(declare-fun x1518 (Int) Int)
(declare-fun x1630 () Int)
(declare-fun x1947 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1059 () Int)
(declare-fun x1836 () Int)
(declare-fun x238 () Bool)
(declare-fun x453 () Int)
(declare-fun x437 () Int)
(declare-fun x1309 () Int)
(declare-fun x284 () Bool)
(declare-fun x650 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1628 () Int)
(declare-fun x1770 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1313 () Int)
(declare-fun x110 (Int Int Int) Int)
(declare-fun x335 () Int)
(declare-fun x1213 () Int)
(declare-fun x1475 () Int)
(declare-fun x1919 () Int)
(declare-fun x1766 () Int)
(declare-fun x1802 () Int)
(declare-fun x1101 () Int)
(declare-fun x879 () Int)
(declare-fun x718 () Int)
(declare-fun x1757 () Int)
(declare-fun x786 () Int)
(declare-fun x982 () Bool)
(declare-fun x267 () Int)
(declare-fun x237 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x940 () Int)
(declare-fun x471 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x473 () Bool)
(declare-fun x1870 () Int)
(declare-fun x403 () Int)
(declare-fun x1431 () Int)
(declare-fun x1830 () Int)
(declare-fun x1383 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x1078 () Int)
(declare-fun x1773 () Int)
(declare-fun x978 () Int)
(declare-fun x831 () Int)
(declare-fun x37 () Int)
(declare-fun x461 (Int) Int)
(declare-fun x120 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1105 () Int)
(declare-fun x1703 () Int)
(declare-fun x320 () Int)
(declare-fun x1629 () Int)
(declare-fun x1401 () Int)
(declare-fun x171 () Int)
(declare-fun x969 () Int)
(declare-fun x1465 () Int)
(declare-fun x1914 () Int)
(declare-fun x1529 () Int)
(declare-fun x168 () Bool)
(declare-fun x805 () Int)
(declare-fun x864 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1898 () Int)
(declare-fun x715 () Int)
(declare-fun x1032 () Int)
(declare-fun x1663 () Int)
(declare-fun x1054 () Int)
(declare-fun x1920 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1051 () Int)
(declare-fun x771 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x209 () Int)
(declare-fun x468 () Int)
(declare-fun x312 () Int)
(declare-fun x1544 () Int)
(declare-fun x954 () Int)
(declare-fun x666 () Int)
(declare-fun x1650 () Bool)
(declare-fun x779 () Int)
(declare-fun x1820 () Int)
(declare-fun x1159 () Int)
(declare-fun x1597 () Int)
(declare-fun x425 () Int)
(declare-fun x275 (Int) Int)
(declare-fun x96 () Int)
(declare-fun x1950 () Int)
(declare-fun x925 () Bool)
(declare-fun x625 () Bool)
(declare-fun x601 () Int)
(declare-fun x1394 () Int)
(declare-fun x1846 () Int)
(declare-fun x867 () Int)
(declare-fun x1424 () Int)
(declare-fun x1248 () Int)
(declare-fun x376 () Int)
(declare-fun x782 () Int)
(declare-fun x1684 () Int)
(declare-fun x1787 () Int)
(declare-fun x553 (Int Int Int Int Int) Int)
(declare-fun x1121 () Int)
(declare-fun x150 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x1692 () Int)
(declare-fun x287 () Bool)
(declare-fun x636 () Int)
(declare-fun x928 () Int)
(declare-fun x872 () Bool)
(declare-fun x932 () Int)
(declare-fun x1687 () Int)
(declare-fun x1262 () Int)
(declare-fun x633 () Int)
(declare-fun x1266 () Int)
(declare-fun x240 () Int)
(declare-fun x1685 () Int)
(declare-fun x1447 () Int)
(declare-fun x2 () Int)
(declare-fun x671 () Int)
(declare-fun x737 () Int)
(declare-fun x1637 () Int)
(declare-fun x1968 () Int)
(declare-fun x382 () Int)
(declare-fun x1070 () Int)
(declare-fun x1530 () Int)
(declare-fun x1143 (Int) Int)
(declare-fun x575 () Int)
(declare-fun x624 () Int)
(declare-fun x341 () Int)
(declare-fun x1300 () Int)
(declare-fun x606 () Int)
(declare-fun x413 () Int)
(declare-fun x1236 () Bool)
(declare-fun x1922 (Int) Int)
(declare-fun x1502 () Int)
(declare-fun x1434 () Bool)
(declare-fun x702 () Int)
(declare-fun x296 () Int)
(declare-fun x901 (Int) Int)
(declare-fun x1887 () Bool)
(declare-fun x522 () Int)
(declare-fun x843 () Int)
(declare-fun x1375 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1705 () Int)
(declare-fun x400 () Bool)
(declare-fun x1013 () Int)
(declare-fun x432 () Int)
(declare-fun x1117 () Int)
(declare-fun x1068 () Int)
(declare-fun x1244 () Int)
(declare-fun x1196 () Int)
(declare-fun x1377 () Int)
(declare-fun x1358 () Int)
(declare-fun x1577 () Int)
(declare-fun x1829 () Int)
(declare-fun x1150 () Int)
(declare-fun x1122 () Int)
(declare-fun x358 () Int)
(declare-fun x724 () Bool)
(declare-fun x1315 () Int)
(declare-fun x1201 () Int)
(declare-fun x773 () Int)
(declare-fun x853 () Int)
(declare-fun x1776 () Int)
(declare-fun x1379 () Int)
(declare-fun x1437 () Int)
(declare-fun x1000 () Int)
(declare-fun x1843 () Int)
(declare-fun x1676 (Int) Int)
(declare-fun x248 () Int)
(declare-fun x1047 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x742 () Int)
(declare-fun x1782 () Bool)
(declare-fun x1017 () Int)
(declare-fun x653 () Int)
(declare-fun x310 () Int)
(declare-fun x1930 () Int)
(declare-fun x922 () Int)
(declare-fun x1792 () Int)
(declare-fun x1346 () Int)
(declare-fun x27 () Int)
(declare-fun x1652 () Int)
(declare-fun x1074 () Bool)
(declare-fun x614 () Int)
(declare-fun x1371 () Int)
(declare-fun x1357 () Bool)
(declare-fun x999 () Int)
(declare-fun x1948 () Int)
(declare-fun x249 () Int)
(declare-fun x949 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1918 () Int)
(declare-fun x1626 () Int)
(declare-fun x1944 () Int)
(declare-fun x8 () Int)
(declare-fun x1749 () Int)
(declare-fun x479 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1257 () Bool)
(declare-fun x537 () Int)
(declare-fun x828 () Int)
(declare-fun x1006 () Bool)
(declare-fun x1102 () Int)
(declare-fun x214 () Int)
(declare-fun x217 () Bool)
(declare-fun x1828 () Int)
(declare-fun x1116 () Int)
(declare-fun x869 () Bool)
(declare-fun x92 () Int)
(declare-fun x1419 () Bool)
(declare-fun x226 () Int)
(declare-fun x572 () Bool)
(declare-fun x280 () Bool)
(declare-fun x1911 () Int)
(declare-fun x1557 () Int)
(declare-fun x950 () Int)
(declare-fun x743 () Int)
(declare-fun x541 () Int)
(declare-fun x1769 () Int)
(declare-fun x512 () Int)
(declare-fun x1408 () Int)
(declare-fun x1426 (Int) Int)
(declare-fun x1331 () Int)
(declare-fun x1337 () Int)
(declare-fun x634 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1233 () Int)
(declare-fun x1688 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x700 () Int)
(declare-fun x1077 () Int)
(declare-fun x1356 () Int)
(declare-fun x656 () Int)
(declare-fun x1891 () Int)
(declare-fun x1268 () Int)
(declare-fun x585 () Int)
(declare-fun x1488 () Int)
(declare-fun x460 () Int)
(declare-fun x974 () Bool)
(declare-fun x205 () Bool)
(declare-fun x566 () Int)
(declare-fun x1069 () Int)
(declare-fun x1026 () Int)
(declare-fun x1952 () Int)
(declare-fun x796 () Bool)
(declare-fun x1222 () Int)
(declare-fun x985 (Int Int Int Int) Int)
(declare-fun x1808 () Int)
(declare-fun x1450 () Int)
(declare-fun x294 (Int) Bool)
(declare-fun x960 () Int)
(declare-fun x1387 () Int)
(declare-fun x1501 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x509 () Int)
(declare-fun x587 () Int)
(declare-fun x1516 () Int)
(declare-fun x338 () Int)
(declare-fun x39 () Bool)
(declare-fun x1707 () Int)
(declare-fun x924 () Int)
(declare-fun x1644 () Int)
(declare-fun x411 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1154 () Int)
(declare-fun x1669 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x189 () Int)
(declare-fun x1693 () Int)
(declare-fun x1984 () Bool)
(declare-fun x1185 (Int) Int)
(declare-fun x1730 () Int)
(declare-fun x812 () Int)
(declare-fun x1433 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1534 () Int)
(declare-fun x698 () Bool)
(declare-fun x1981 () Int)
(declare-fun x146 () Int)
(declare-fun x551 () Bool)
(declare-fun x1490 () Int)
(declare-fun x204 () Int)
(declare-fun x1270 () Int)
(declare-fun x10 () Int)
(declare-fun x257 () Bool)
(declare-fun x518 () Int)
(declare-fun x1571 () Bool)
(declare-fun x1732 () Int)
(declare-fun x1332 () Int)
(declare-fun x1545 () Bool)
(declare-fun x966 () Int)
(declare-fun x810 (Int) Int)
(declare-fun x1815 () Int)
(declare-fun x1391 () Bool)
(declare-fun x584 () Bool)
(declare-fun x1056 (Int) Int)
(declare-fun x426 () Int)
(declare-fun x975 () Int)
(declare-fun x1330 () Int)
(declare-fun x112 () Int)
(declare-fun x919 () Bool)
(declare-fun x705 () Int)
(declare-fun x469 () Int)
(declare-fun x1467 () Bool)
(declare-fun x323 () Int)
(declare-fun x1128 () Int)
(declare-fun x1184 (Int) Int)
(declare-fun x806 () Bool)
(declare-fun x100 () Int)
(declare-fun x464 (Int) Int)
(declare-fun x340 () Bool)
(declare-fun x368 () Int)
(declare-fun x455 () Int)
(declare-fun x1083 () Int)
(declare-fun x47 () Int)
(declare-fun x1092 () Int)
(declare-fun x1781 () Bool)
(declare-fun x264 () Int)
(declare-fun x1619 () Int)
(declare-fun x1754 () Int)
(declare-fun x1329 () Int)
(declare-fun x1111 () Int)
(declare-fun x784 () Int)
(declare-fun x884 () Int)
(declare-fun x652 () Int)
(declare-fun x726 () Int)
(declare-fun x727 () Int)
(declare-fun x1314 () Int)
(declare-fun x1025 () Int)
(declare-fun x1263 () Int)
(declare-fun x1306 () Int)
(declare-fun x1075 () Int)
(declare-fun x849 () Int)
(declare-fun x151 () Int)
(declare-fun x297 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1294 (Int) Int)
(declare-fun x1115 () Int)
(declare-fun x1938 () Int)
(declare-fun x798 () Int)
(declare-fun x1723 () Int)
(declare-fun x898 () Int)
(declare-fun x800 () Int)
(declare-fun x253 () Int)
(declare-fun x678 () Int)
(declare-fun x492 () Bool)
(declare-fun x1932 () Int)
(declare-fun x1157 () Int)
(declare-fun x1296 () Int)
(declare-fun x1844 () Int)
(declare-fun x1452 () Int)
(declare-fun x427 () Int)
(declare-fun x1416 () Int)
(declare-fun x1744 () Int)
(declare-fun x1061 () Int)
(declare-fun x1123 () Bool)
(declare-fun x808 () Int)
(declare-fun x527 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1904 (Int Int Int Int Int Int) Int)
(declare-fun x489 () Int)
(declare-fun x1035 () Int)
(declare-fun x723 () Int)
(declare-fun x157 () Int)
(declare-fun x1114 () Int)
(declare-fun x1753 () Int)
(declare-fun x127 () Int)
(declare-fun x756 (Int Int) Int)
(declare-fun x1889 () Int)
(declare-fun x1643 () Int)
(declare-fun x1689 () Int)
(declare-fun x1924 () Int)
(declare-fun x1496 () Int)
(declare-fun x990 () Int)
(declare-fun x1215 () Bool)
(declare-fun x1278 () Int)
(declare-fun x32 () Bool)
(declare-fun x885 () Int)
(declare-fun x1058 () Int)
(declare-fun x1076 () Int)
(declare-fun x1624 () Bool)
(declare-fun x502 () Int)
(declare-fun x1873 () Int)
(declare-fun x1138 () Bool)
(declare-fun x481 () Bool)
(declare-fun x1855 () Int)
(declare-fun x1756 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x876 () Int)
(declare-fun x1355 () Bool)
(declare-fun x433 (Int) Int)
(declare-fun x801 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1175 () Int)
(declare-fun x459 () Bool)
(declare-fun x256 () Bool)
(declare-fun x1896 (Int) Int)
(declare-fun x1057 () Bool)
(declare-fun x1758 () Int)
(declare-fun x609 () Int)
(declare-fun x1680 () Int)
(declare-fun x842 () Int)
(declare-fun x1736 () Bool)
(declare-fun x16 () Int)
(declare-fun x1715 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1354 () Int)
(declare-fun x626 () Int)
(declare-fun x535 () Int)
(declare-fun x1144 () Int)
(declare-fun x780 () Int)
(declare-fun x1949 () Bool)
(declare-fun x300 () Int)
(declare-fun x1405 () Bool)
(declare-fun x1436 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x1414 () Int)
(declare-fun x161 () Bool)
(declare-fun x649 () Int)
(declare-fun x957 () Int)
(declare-fun x1242 () Int)
(declare-fun x933 () Int)
(declare-fun x1438 () Int)
(declare-fun x55 () Bool)
(declare-fun x1094 () Int)
(declare-fun x670 () Int)
(declare-fun x1024 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x23 () Int)
(declare-fun x814 () Int)
(declare-fun x1259 () Int)
(declare-fun x1600 () Int)
(declare-fun x1746 () Bool)
(declare-fun x301 () Int)
(declare-fun x118 () Int)
(declare-fun x580 () Int)
(declare-fun x462 () Int)
(declare-fun x646 () Int)
(declare-fun x51 () Int)
(declare-fun x88 () Bool)
(declare-fun x857 () Int)
(declare-fun x1929 () Int)
(declare-fun x75 () Int)
(declare-fun x992 () Bool)
(declare-fun x620 () Int)
(declare-fun x1575 () Bool)
(declare-fun x827 () Int)
(declare-fun x1409 () Bool)
(declare-fun x886 () Int)
(declare-fun x495 () Bool)
(declare-fun x158 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1182 () Bool)
(declare-fun x308 () Int)
(declare-fun x552 () Int)
(declare-fun x1819 () Int)
(declare-fun x951 () Int)
(declare-fun x1457 (Int) Int)
(declare-fun x476 () Int)
(declare-fun x160 () Int)
(declare-fun x1344 () Int)
(declare-fun x1049 () Int)
(declare-fun x1547 () Int)
(declare-fun x1130 () Int)
(declare-fun x1786 () Int)
(declare-fun x588 () Bool)
(declare-fun x419 () Int)
(declare-fun x854 () Int)
(declare-fun x1208 (Int) Int)
(declare-fun x1767 () Int)
(declare-fun x1165 () Bool)
(declare-fun x662 () Int)
(declare-fun x887 () Int)
(declare-fun x467 () Int)
(declare-fun x765 () Bool)
(declare-fun x681 () Int)
(declare-fun x1019 () Int)
(declare-fun x1376 () Int)
(declare-fun x1040 () Int)
(declare-fun x1459 () Int)
(declare-fun x252 () Int)
(declare-fun x1980 () Int)
(declare-fun x391 () Bool)
(declare-fun x387 () Int)
(declare-fun x1497 () Int)
(declare-fun x989 () Int)
(declare-fun x1564 () Bool)
(declare-fun x838 () Int)
(declare-fun x1742 () Int)
(declare-fun x1700 () Int)
(declare-fun x203 () Int)
(declare-fun x941 () Int)
(declare-fun x70 () Int)
(declare-fun x1053 () Int)
(declare-fun x1722 () Int)
(declare-fun x309 () Int)
(declare-fun x629 () Int)
(declare-fun x1987 () Int)
(declare-fun x1319 () Int)
(declare-fun x807 () Bool)
(declare-fun x11 () Int)
(declare-fun x600 () Int)
(declare-fun x197 () Int)
(declare-fun x1200 () Int)
(declare-fun x1145 () Int)
(declare-fun x799 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1859 () Int)
(declare-fun x1720 () Int)
(declare-fun x1036 () Int)
(declare-fun x1697 () Int)
(declare-fun x1458 () Int)
(declare-fun x1507 () Int)
(declare-fun x1801 () Bool)
(declare-fun x401 () Bool)
(declare-fun x434 () Int)
(declare-fun x1009 () Int)
(declare-fun x373 () Int)
(declare-fun x1979 () Int)
(declare-fun x1318 () Bool)
(declare-fun x5 () Int)
(declare-fun x1576 () Int)
(declare-fun x86 () Int)
(declare-fun x1399 () Int)
(declare-fun x1088 () Int)
(declare-fun x30 () Int)
(declare-fun x1660 () Int)
(declare-fun x895 () Int)
(declare-fun x61 () Int)
(declare-fun x1146 () Bool)
(declare-fun x1183 (Int) Int)
(declare-fun x647 () Int)
(declare-fun x740 () Int)
(declare-fun x1386 () Int)
(declare-fun x1001 () Int)
(declare-fun x1124 () Int)
(declare-fun x1672 () Int)
(declare-fun x1699 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1574 () Bool)
(declare-fun x125 () Int)
(declare-fun x1167 () Int)
(declare-fun x1735 () Int)
(declare-fun x1390 () Int)
(declare-fun x848 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x313 () Int)
(declare-fun x1498 () Int)
(declare-fun x412 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1869 () Int)
(declare-fun x550 () Int)
(declare-fun x1279 () Int)
(declare-fun x1755 () Int)
(declare-fun x1611 () Bool)
(declare-fun x456 () Int)
(declare-fun x1890 () Bool)
(declare-fun x785 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1324 () Bool)
(declare-fun x830 () Int)
(declare-fun x138 () Int)
(declare-fun x380 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1552 () Int)
(declare-fun x1883 () Int)
(declare-fun x823 () Int)
(declare-fun x1493 () Int)
(declare-fun x837 () Bool)
(declare-fun x1071 () Int)
(declare-fun x370 (Int) Int)
(declare-fun x451 () Int)
(declare-fun x1050 () Int)
(declare-fun x1351 () Int)
(declare-fun x1784 () Int)
(declare-fun x1857 () Int)
(declare-fun x1186 () Int)
(declare-fun x856 () Int)
(declare-fun x239 () Bool)
(declare-fun x1395 () Int)
(declare-fun x596 () Int)
(declare-fun x85 () Int)
(declare-fun x225 () Int)
(declare-fun x643 () Int)
(declare-fun x1312 () Int)
(declare-fun x1775 () Int)
(declare-fun x1666 () Int)
(declare-fun x1880 () Int)
(declare-fun x1605 () Bool)
(declare-fun x617 () Bool)
(declare-fun x682 () Int)
(declare-fun x833 () Int)
(declare-fun x1112 () Int)
(declare-fun x852 () Int)
(declare-fun x1406 () Int)
(declare-fun x1665 () Int)
(declare-fun x1397 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x1573 () Int)
(declare-fun x583 () Int)
(declare-fun x1522 () Int)
(declare-fun x1865 () Int)
(declare-fun x1340 (Int) Int)
(declare-fun x1578 () Int)
(declare-fun x1727 () Bool)
(declare-fun x305 () Int)
(declare-fun x1739 () Int)
(declare-fun x1413 () Bool)
(declare-fun x172 () Int)
(declare-fun x1311 () Int)
(declare-fun x1261 () Bool)
(declare-fun x180 () Int)
(declare-fun x1884 () Int)
(declare-fun x615 () Int)
(declare-fun x129 () Int)
(declare-fun x568 () Int)
(declare-fun x262 () Bool)
(declare-fun x545 () Int)
(declare-fun x657 () Int)
(declare-fun x1877 () Int)
(declare-fun x1153 () Int)
(declare-fun x1216 () Int)
(declare-fun x532 (Int) Int)
(declare-fun x1299 () Bool)
(declare-fun x303 () Int)
(declare-fun x573 () Int)
(declare-fun x407 () Int)
(declare-fun x709 () Int)
(declare-fun x1928 () Bool)
(declare-fun x306 () Int)
(declare-fun x1453 () Int)
(declare-fun x234 () Int)
(declare-fun x1709 (Int) Int)
(declare-fun x1464 () Int)
(declare-fun x1811 () Int)
(declare-fun x452 () Int)
(declare-fun x1264 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x1946 () Int)
(declare-fun x1839 (Int) Int)
(declare-fun x102 () Bool)
(declare-fun x911 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1943 () Bool)
(declare-fun x192 (Int) Int)
(declare-fun x1706 () Int)
(declare-fun x621 () Int)
(declare-fun x1162 () Int)
(declare-fun x1691 () Int)
(declare-fun x292 () Int)
(declare-fun x1136 () Int)
(declare-fun x1570 (Int) Int)
(declare-fun x1698 () Int)
(declare-fun x1817 (Int) Int)
(declare-fun x1247 () Int)
(declare-fun x1897 () Bool)
(declare-fun x648 () Int)
(declare-fun x22 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1028 () Int)
(declare-fun x89 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1022 () Int)
(declare-fun x1325 () Bool)
(declare-fun x755 () Int)
(declare-fun x964 () Int)
(declare-fun x937 () Int)
(declare-fun x185 () Int)
(declare-fun x1899 () Int)
(declare-fun x1275 () Bool)
(declare-fun x794 () Int)
(declare-fun x1594 () Int)
(declare-fun x1809 () Int)
(declare-fun x1912 () Int)
(declare-fun x1104 () Int)
(declare-fun x559 () Int)
(declare-fun x1297 () Int)
(declare-fun x540 () Bool)
(declare-fun x182 () Int)
(declare-fun x542 () Int)
(declare-fun x859 () Int)
(declare-fun x1234 () Int)
(declare-fun x1512 () Int)
(declare-fun x757 () Int)
(declare-fun x1463 () Bool)
(declare-fun x676 () Int)
(declare-fun x184 () Int)
(declare-fun x318 () Int)
(declare-fun x1566 () Int)
(declare-fun x802 () Int)
(declare-fun x846 () Int)
(declare-fun x1601 () Int)
(declare-fun x875 () Int)
(declare-fun x977 () Int)
(declare-fun x304 () Int)
(declare-fun x134 () Int)
(declare-fun x1614 () Int)
(declare-fun x26 () Int)
(declare-fun x1910 () Int)
(declare-fun x817 () Bool)
(declare-fun x795 () Int)
(declare-fun x910 () Int)
(declare-fun x892 () Int)
(declare-fun x1777 () Int)
(declare-fun x952 () Int)
(declare-fun x1139 () Int)
(declare-fun x897 () Bool)
(declare-fun x1015 () Int)
(declare-fun x236 () Int)
(declare-fun x194 () Int)
(declare-fun x777 () Int)
(declare-fun x342 () Int)
(declare-fun x645 () Int)
(declare-fun x65 () Int)
(declare-fun x1398 () Bool)
(declare-fun x1486 () Int)
(declare-fun x1608 () Int)
(declare-fun x28 () Int)
(declare-fun x148 () Bool)
(declare-fun x15 () Bool)
(declare-fun x697 () Int)
(declare-fun x1140 () Bool)
(declare-fun x420 () Int)
(declare-fun x797 () Int)
(declare-fun x1229 () Int)
(declare-fun x769 () Int)
(declare-fun x576 () Int)
(declare-fun x1461 () Int)
(declare-fun x959 () Int)
(declare-fun x503 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1038 () Int)
(declare-fun x279 () Int)
(declare-fun x445 () Int)
(declare-fun x416 () Int)
(declare-fun x409 () Int)
(declare-fun x1779 () Int)
(declare-fun x165 () Bool)
(declare-fun x170 () Int)
(declare-fun x690 () Int)
(declare-fun x813 () Int)
(declare-fun x735 () Int)
(declare-fun x311 () Int)
(declare-fun x987 () Int)
(declare-fun x1622 () Int)
(declare-fun x1253 () Int)
(declare-fun x1763 () Int)
(declare-fun x1853 () Int)
(declare-fun x896 () Bool)
(declare-fun x60 () Int)
(declare-fun x607 () Int)
(declare-fun x685 () Bool)
(declare-fun x141 () Int)
(declare-fun x1288 () Int)
(declare-fun x1589 () Int)
(declare-fun x1060 () Int)
(declare-fun x754 () Int)
(declare-fun x1317 () Bool)
(declare-fun x1307 () Int)
(declare-fun x1623 () Int)
(declare-fun x850 () Int)
(declare-fun x747 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1193 () Int)
(declare-fun x369 () Int)
(declare-fun x719 () Bool)
(declare-fun x1708 () Int)
(declare-fun x20 () Int)
(declare-fun x1207 () Bool)
(declare-fun x790 () Int)
(declare-fun x862 () Int)
(declare-fun x1587 () Int)
(declare-fun x971 () Bool)
(declare-fun x1429 () Int)
(declare-fun x443 () Int)
(declare-fun x179 () Bool)
(declare-fun x465 () Int)
(declare-fun x488 () Int)
(declare-fun x1610 () Int)
(declare-fun x701 () Int)
(declare-fun x79 () Int)
(declare-fun x1751 () Int)
(declare-fun x1479 () Int)
(declare-fun x565 () Int)
(declare-fun x730 () Int)
(declare-fun x826 () Int)
(declare-fun x229 () Int)
(declare-fun x725 () Int)
(declare-fun x616 () Int)
(declare-fun x1176 () Int)
(declare-fun x1977 () Int)
(declare-fun x1783 () Int)
(declare-fun x574 () Int)
(declare-fun x81 () Int)
(declare-fun x1407 () Int)
(declare-fun x515 () Int)
(declare-fun x684 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x348 () Int)
(declare-fun x748 () Int)
(declare-fun x1482 () Int)
(declare-fun x1510 () Int)
(declare-fun x1239 () Bool)
(declare-fun x247 () Int)
(declare-fun x1171 () Int)
(declare-fun x1804 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1280 () Int)
(declare-fun x1198 () Int)
(declare-fun x638 (Int) Int)
(declare-fun x332 () Bool)
(declare-fun x166 () Int)
(declare-fun x29 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x1974 () Int)
(declare-fun x1542 () Bool)
(declare-fun x920 () Int)
(declare-fun x1762 () Int)
(declare-fun x946 () Int)
(declare-fun x374 () Int)
(declare-fun x156 () Int)
(declare-fun x49 () Bool)
(declare-fun x1648 () Int)
(declare-fun x498 () Int)
(declare-fun x759 () Int)
(declare-fun x1537 () Int)
(declare-fun x1249 () Bool)
(declare-fun x386 () Int)
(declare-fun x1750 () Bool)
(declare-fun x1188 () Int)
(declare-fun x1683 () Int)
(declare-fun x912 () Int)
(declare-fun x31 () Int)
(declare-fun x628 () Int)
(declare-fun x265 () Int)
(declare-fun x1173 () Int)
(declare-fun x1365 () Int)
(declare-fun x1010 () Int)
(declare-fun x378 () Bool)
(declare-fun x1519 () Int)
(declare-fun x1158 () Bool)
(declare-fun x673 () Int)
(declare-fun x1591 () Int)
(declare-fun x250 () Int)
(declare-fun x106 () Int)
(declare-fun x103 () Bool)
(declare-fun x1403 () Int)
(declare-fun x223 () Int)
(declare-fun x894 () Int)
(declare-fun x841 () Int)
(declare-fun x1609 () Int)
(declare-fun x329 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1655 () Bool)
(declare-fun x344 () Int)
(declare-fun x418 () Int)
(declare-fun x1961 () Int)
(declare-fun x909 () Int)
(declare-fun x931 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x379 (Int) Int)
(declare-fun x1470 () Bool)
(declare-fun x793 () Bool)
(declare-fun x544 () Bool)
(declare-fun x124 () Int)
(declare-fun x105 () Bool)
(declare-fun x1806 () Int)
(declare-fun x1246 () Int)
(declare-fun x791 () Int)
(declare-fun x820 () Bool)
(declare-fun x422 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1858 () Bool)
(declare-fun x691 () Int)
(declare-fun x1362 () Bool)
(declare-fun x972 () Int)
(declare-fun x431 () Int)
(declare-fun x1714 () Int)
(declare-fun x758 () Int)
(declare-fun x116 () Int)
(declare-fun x1834 () Int)
(declare-fun x1052 () Int)
(declare-fun x1945 () Int)
(declare-fun x774 () Bool)
(declare-fun x126 () Bool)
(declare-fun x417 () Bool)
(declare-fun x1304 () Int)
(declare-fun x871 () Int)
(declare-fun x98 () Int)
(declare-fun x631 () Int)
(declare-fun x531 () Int)
(declare-fun x1701 () Int)
(declare-fun x523 () Bool)
(declare-fun x1824 () Int)
(declare-fun x258 () Int)
(declare-fun x993 () Int)
(declare-fun x1440 () Int)
(declare-fun x1965 (Int) Int)
(declare-fun x435 () Bool)
(declare-fun x1381 () Int)
(declare-fun x525 () Int)
(declare-fun x1378 () Int)
(declare-fun x475 () Bool)
(declare-fun x560 (Int) Int)
(declare-fun x1840 () Int)
(declare-fun x1832 () Int)
(declare-fun x354 () Int)
(declare-fun x571 () Int)
(declare-fun x1492 () Int)
(declare-fun x1219 () Int)
(declare-fun x1256 () Int)
(declare-fun x1003 () Int)
(declare-fun x283 () Bool)
(declare-fun x77 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1284 () Int)
(declare-fun x663 () Bool)
(declare-fun x43 () Int)
(declare-fun x392 () Int)
(declare-fun x178 () Bool)
(declare-fun x1774 (Int) Int)
(declare-fun x1852 () Bool)
(declare-fun x93 () Int)
(declare-fun x918 () Int)
(declare-fun x1067 () Int)
(declare-fun x210 () Int)
(declare-fun x1031 () Int)
(declare-fun x1308 () Bool)
(declare-fun x1468 () Int)
(declare-fun x787 () Int)
(declare-fun x563 () Int)
(declare-fun x281 () Bool)
(declare-fun x101 () Int)
(declare-fun x883 () Int)
(declare-fun x1821 () Int)
(declare-fun x193 () Int)
(declare-fun x143 () Int)
(declare-fun x208 () Int)
(declare-fun x1487 () Bool)
(declare-fun x900 () Int)
(declare-fun x1879 () Int)
(declare-fun x995 () Int)
(declare-fun x362 () Int)
(declare-fun x809 () Int)
(declare-fun x1065 () Int)
(declare-fun x546 () Bool)
(declare-fun x1894 () Int)
(declare-fun x218 () Int)
(declare-fun x1886 () Int)
(declare-fun x1795 () Int)
(declare-fun x792 () Int)
(declare-fun x1402 () Int)
(declare-fun x1606 () Bool)
(declare-fun x589 () Int)
(declare-fun x667 () Bool)
(declare-fun x997 () Bool)
(declare-fun x930 () Int)
(declare-fun x1568 () Int)
(declare-fun x1580 () Int)
(declare-fun x1747 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1702 () Int)
(declare-fun x1901 () Int)
(declare-fun x1668 () Bool)
(declare-fun x1103 () Int)
(declare-fun x40 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1569 () Int)
(declare-fun x385 () Int)
(declare-fun x943 () Int)
(declare-fun x201 () Bool)
(declare-fun x1900 () Int)
(declare-fun x1039 () Bool)
(declare-fun x612 () Bool)
(declare-fun x395 () Int)
(declare-fun x45 () Bool)
(declare-fun x206 () Bool)
(declare-fun x444 () Int)
(declare-fun x1885 () Int)
(declare-fun x517 () Int)
(declare-fun x839 () Int)
(declare-fun x1816 () Int)
(declare-fun x36 () Int)
(declare-fun x1615 () Int)
(declare-fun x1360 () Int)
(declare-fun x58 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1679 () Int)
(declare-fun x1532 () Int)
(declare-fun x501 () Int)
(declare-fun x1863 () Bool)
(declare-fun x524 () Int)
(declare-fun x711 () Int)
(declare-fun x1903 () Bool)
(declare-fun x641 () Int)
(declare-fun x1187 () Int)
(declare-fun x128 () Int)
(declare-fun x855 () Int)
(declare-fun x877 () Int)
(declare-fun x832 () Bool)
(declare-fun x1845 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x1303 () Bool)
(declare-fun x1933 () Int)
(declare-fun x57 () Int)
(declare-fun x688 () Bool)
(declare-fun x1934 () Int)
(declare-fun x981 () Int)
(declare-fun x934 () Int)
(declare-fun x334 (Int) Int)
(declare-fun x271 () Int)
(declare-fun x902 () Int)
(declare-fun x1603 () Int)
(declare-fun x1350 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x1439 () Int)
(declare-fun x679 () Int)
(declare-fun x1255 () Bool)
(declare-fun x314 () Int)
(declare-fun x1525 () Int)
(declare-fun x84 () Int)
(declare-fun x377 () Int)
(declare-fun x776 () Bool)
(declare-fun x713 () Int)
(declare-fun x114 () Int)
(declare-fun x494 () Int)
(declare-fun x1616 () Int)
(declare-fun x1435 () Int)
(declare-fun x1639 () Int)
(declare-fun x1191 () Int)
(declare-fun x470 () Int)
(declare-fun x619 () Int)
(declare-fun x1881 () Int)
(declare-fun x986 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1348 () Int)
(declare-fun x772 () Int)
(declare-fun x1595 () Bool)
(declare-fun x337 () Int)
(declare-fun x17 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1301 () Int)
(declare-fun x1814 () Int)
(declare-fun x1170 () Int)
(declare-fun x353 () Int)
(declare-fun x1613 () Int)
(declare-fun x1651 () Int)
(declare-fun x672 () Int)
(declare-fun x1556 () Int)
(declare-fun x1192 () Bool)
(declare-fun x286 () Int)
(declare-fun x1555 () Int)
(declare-fun x219 () Int)
(declare-fun x821 () Int)
(declare-fun x1585 () Int)
(declare-fun x246 () Int)
(declare-fun x1559 () Int)
(declare-fun x1625 () Int)
(declare-fun x654 () Int)
(declare-fun x1511 () Int)
(declare-fun x881 () Bool)
(declare-fun x324 () Int)
(declare-fun x242 () Int)
(declare-fun x484 () Int)
(declare-fun x436 () Bool)
(declare-fun x1345 () Int)
(declare-fun x142 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1812 () Bool)
(declare-fun x463 () Int)
(declare-fun x276 () Int)
(declare-fun x322 () Int)
(declare-fun x1690 () Int)
(declare-fun x1921 () Int)
(declare-fun x290 () Int)
(declare-fun x1194 () Int)
(declare-fun x1562 () Int)
(declare-fun x1939 () Bool)
(declare-fun x1085 () Int)
(declare-fun x107 () Bool)
(declare-fun x692 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x530 () Bool)
(declare-fun x526 () Int)
(declare-fun x847 (Int) Int)
(declare-fun x270 () Int)
(declare-fun x1733 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1164 () Int)
(declare-fun x139 () Int)
(declare-fun x661 () Bool)
(declare-fun x965 () Int)
(declare-fun x905 () Int)
(declare-fun x507 () Int)
(declare-fun x1553 () Int)
(declare-fun x694 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1871 () Int)
(declare-fun x680 () Int)
(declare-fun x547 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1849 () Int)
(declare-fun x766 () Int)
(declare-fun x215 () Int)
(declare-fun x357 () Int)
(declare-fun x1572 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1694 () Int)
(declare-fun x906 () Int)
(declare-fun x1029 () Int)
(declare-fun x59 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x555 () Int)
(declare-fun x904 () Bool)
(declare-fun x863 () Int)
(declare-fun x1291 () Int)
(declare-fun x1480 () Int)
(declare-fun x1048 () Bool)
(declare-fun x371 () Int)
(declare-fun x1343 () Int)
(declare-fun x1361 () Int)
(declare-fun x510 () Int)
(declare-fun x1235 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1986 () Bool)
(declare-fun x579 () Int)
(declare-fun x111 () Int)
(declare-fun x739 () Bool)
(declare-fun x1959 () Int)
(declare-fun x935 () Int)
(declare-fun x1953 () Int)
(declare-fun x94 () Int)
(declare-fun x519 () Int)
(declare-fun x880 () Int)
(declare-fun x1549 () Int)
(declare-fun x211 (Int) Int)
(declare-fun x1915 () Bool)
(declare-fun x243 () Int)
(declare-fun x176 () Bool)
(declare-fun x958 () Int)
(declare-fun x220 () Int)
(declare-fun x361 () Int)
(declare-fun x1738 () Int)
(declare-fun x534 () Bool)
(declare-fun x1711 () Int)
(declare-fun x1093 () Int)
(declare-fun x1925 () Bool)
(declare-fun x424 () Int)
(declare-fun x1505 () Int)
(declare-fun x430 () Int)
(declare-fun x874 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1640 () Int)
(declare-fun x764 () Int)
(declare-fun x984 () Int)
(declare-fun x1500 () Int)
(declare-fun x1485 () Bool)
(declare-fun x21 () Int)
(declare-fun x299 () Int)
(declare-fun x1642 () Int)
(declare-fun x1081 () Bool)
(declare-fun x781 () Bool)
(declare-fun x622 () Bool)
(declare-fun x25 () Int)
(declare-fun x1842 () Int)
(declare-fun x159 () Int)
(declare-fun x1882 () Int)
(declare-fun x706 () Int)
(declare-fun x213 () Int)
(declare-fun x762 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1916 () Int)
(declare-fun x658 () Int)
(declare-fun x528 () Bool)
(declare-fun x325 () Int)
(declare-fun x644 () Int)
(declare-fun x1151 () Int)
(declare-fun x1305 () Int)
(declare-fun x359 () Int)
(declare-fun x254 () Int)
(declare-fun x1785 () Int)
(declare-fun x1645 () Int)
(declare-fun x603 () Int)
(declare-fun x1364 () Int)
(declare-fun x251 () Int)
(declare-fun x998 () Int)
(declare-fun x1867 () Int)
(declare-fun x699 () Int)
(declare-fun x866 () Int)
(declare-fun x144 () Int)
(declare-fun x967 () Int)
(declare-fun x873 () Int)
(declare-fun x870 () Bool)
(declare-fun x500 () Int)
(declare-fun x1822 () Int)
(declare-fun x598 (Int Int Int Int) Int)
(declare-fun x562 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1217 () Int)
(declare-fun x1661 () Int)
(declare-fun x704 () Int)
(declare-fun x1752 () Int)
(declare-fun x1764 () Int)
(declare-fun x137 () Int)
(declare-fun x414 () Bool)
(declare-fun x1972 () Int)
(declare-fun x1868 () Int)
(declare-fun x1514 () Int)
(declare-fun x1741 () Bool)
(declare-fun x770 () Int)
(declare-fun x538 () Bool)
(declare-fun x923 () Int)
(declare-fun x364 () Int)
(declare-fun x24 () Int)
(declare-fun x1421 () Int)
(declare-fun x1658 () Int)
(declare-fun x1837 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1940 () Int)
(declare-fun x1677 () Bool)
(declare-fun x260 () Bool)
(declare-fun x590 () Int)
(declare-fun x1907 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1119 () Int)
(declare-fun x375 () Int)
(declare-fun x1710 () Int)
(declare-fun x1759 () Bool)
(declare-fun x108 () Int)
(declare-fun x1892 () Int)
(declare-fun x668 () Int)
(declare-fun x1020 () Int)
(declare-fun x708 () Bool)
(declare-fun x104 () Int)
(declare-fun x441 () Bool)
(declare-fun x1352 () Int)
(declare-fun x195 () Int)
(declare-fun x1895 () Int)
(declare-fun x228 () Int)
(declare-fun x1082 (Int) Int)
(declare-fun x7 () Int)
(declare-fun x686 () Bool)
(declare-fun x259 () Bool)
(declare-fun x1460 () Int)
(declare-fun x1127 () Int)
(declare-fun x330 () Int)
(declare-fun x1392 () Int)
(declare-fun x398 () Int)
(declare-fun x438 () Int)
(declare-fun x230 () Int)
(declare-fun x1310 () Int)
(declare-fun x1659 () Int)
(declare-fun x343 () Int)
(declare-fun x393 () Bool)
(declare-fun x499 () Bool)
(declare-fun x480 () Int)
(declare-fun x328 () Bool)
(declare-fun x491 () Int)
(declare-fun x1495 () Bool)
(declare-fun x95 () Int)
(declare-fun x356 () Int)
(declare-fun x635 () Int)
(declare-fun x1636 () Int)
(declare-fun x630 () Int)
(declare-fun x397 () Int)
(declare-fun x608 () Bool)
(declare-fun x486 () Int)
(declare-fun x1563 () Int)
(declare-fun x1021 () Int)
(declare-fun x1023 () Int)
(declare-fun x1230 () Int)
(declare-fun x899 () Int)
(declare-fun x714 () Bool)
(declare-fun x613 () Int)
(declare-fun x1656 () Int)
(declare-fun x1132 () Int)
(declare-fun x1667 () Int)
(declare-fun x761 () Int)
(declare-fun x664 () Int)
(declare-fun x1551 () Int)
(declare-fun x72 () Bool)
(declare-fun x466 () Int)
(declare-fun x442 () Int)
(declare-fun x315 () Bool)
(declare-fun x1415 () Int)
(declare-fun x1793 () Int)
(declare-fun x478 () Bool)
(declare-fun x1245 () Int)
(declare-fun x38 (Int Int) Int)
(declare-fun x1008 () Int)
(declare-fun x1579 () Int)
(declare-fun x1533 () Int)
(declare-fun x733 () Bool)
(declare-fun x1797 () Int)
(declare-fun x227 () Int)
(declare-fun x1524 () Int)
(declare-fun x1717 () Bool)
(declare-fun x1712 (Int) Int)
(declare-fun x865 () Int)
(declare-fun x1418 () Int)
(declare-fun x167 () Int)
(declare-fun x746 () Int)
(declare-fun x115 () Bool)
(declare-fun x1954 () Int)
(declare-fun x752 () Int)
(declare-fun x1250 () Int)
(declare-fun x1546 () Int)
(declare-fun x939 () Int)
(declare-fun x188 () Int)
(declare-fun x64 () Int)
(declare-fun x454 () Int)
(declare-fun x816 () Int)
(declare-fun x1807 () Bool)
(declare-fun x421 () Bool)
(declare-fun x333 (Int) Int)
(declare-fun x1430 () Bool)
(declare-fun x327 () Int)
(declare-fun x1471 () Int)
(declare-fun x829 () Bool)
(declare-fun x53 () Int)
(declare-fun x1 () Int)
(declare-fun x1177 (Int) Int)
(declare-fun x570 () Int)
(declare-fun x136 () Int)
(declare-fun x285 () Int)
(declare-fun x1072 () Int)
(declare-fun x720 () Int)
(declare-fun x926 () Int)
(declare-fun x1113 () Bool)
(declare-fun x1729 () Int)
(declare-fun x888 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x915 () Int)
(declare-fun x350 () Int)
(declare-fun x1254 () Int)
(declare-fun x729 () Int)
(declare-fun x511 () Int)
(define-fun x1131 ((x1363 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1363) (>= x1363 0)) x1363 (- x1363 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x845 ((x1363 Int)) Int (ite (and (< x1363 0) (>= x1363 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1363 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1363))
(define-fun x439 ((x1561 Int)) Bool (and (>= x1561 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1561)))
(define-fun x921 ((x1561 Int)) Bool (and (= (x38 x1561 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1561) (= (x38 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1561) x1561)))
(define-fun x1226 ((x1561 Int)) Bool (and (= 0 (x38 x1561 0)) (= (x38 0 x1561) 0)))
(define-fun x1768 ((x1561 Int)) Bool (= (x38 x1561 x1561) x1561))
(define-fun x336 ((x1561 Int)) Bool (and (x1768 x1561) (x921 x1561) (x1226 x1561)))
(define-fun x1800 ((x1561 Int) (x840 Int)) Bool (= (x38 x1561 x840) (x38 x840 x1561)))
(define-fun x1197 ((x1561 Int) (x840 Int)) Bool (and (=> (>= x1561 0) (>= x1561 (x38 x1561 x840))) (<= 0 (x38 x1561 x840)) (=> (>= x840 0) (<= (x38 x1561 x840) x840))))
(define-fun x99 ((x1561 Int) (x840 Int)) Bool (and (x1197 x1561 x840) (x1800 x1561 x840)))
(define-fun x1494 ((x1561 Int)) Bool (= (+ (mod x1561 32) (x38 x1561 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1561 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x200 ((x1561 Int)) Bool (and (x99 x1561 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1494 x1561)))
(define-fun x1156 ((x1561 Int)) Bool (= (x38 x1561 1461501637330902918203684832716283019655932542975) (mod x1561 1461501637330902918203684832716283019655932542976)))
(define-fun x1856 ((x1561 Int)) Bool (and (x1156 x1561) (x99 x1561 1461501637330902918203684832716283019655932542975)))
(define-fun x750 ((x1561 Int)) Bool (= (mod x1561 1099511627776) (x38 x1561 1099511627775)))
(define-fun x963 ((x1561 Int)) Bool (and (x99 x1561 1099511627775) (x750 x1561)))
(define-fun x1678 ((x734 Int)) Int (ite (< x734 x388) (x638 x734) 0))
(define-fun x1342 ((x734 Int)) Int 0)
(define-fun x783 ((x734 Int)) Int 0)
(define-fun x82 ((x734 Int)) Int 0)
(define-fun x558 ((x734 Int)) Int 0)
(define-fun x317 ((x734 Int)) Int 0)
(define-fun x1272 ((x734 Int)) Int 0)
(define-fun x665 ((x734 Int)) Int 0)
(define-fun x1374 ((x734 Int)) Int 0)
(define-fun x1474 ((x734 Int)) Int 0)
(define-fun x1627 ((x734 Int)) Int 0)
(define-fun x1713 ((x734 Int)) Int 0)
(define-fun x834 ((x734 Int)) Int 0)
(define-fun x804 ((x734 Int)) Int 0)
(define-fun x1432 ((x734 Int)) Int 0)
(define-fun x485 ((x734 Int)) Int 0)
(define-fun x1240 ((x734 Int)) Int 0)
(define-fun x1016 ((x734 Int)) Int 0)
(define-fun x381 ((x734 Int)) Int 0)
(define-fun x741 ((x734 Int)) Int 0)
(define-fun x1621 ((x734 Int)) Int 0)
(define-fun x130 ((x734 Int)) Int 0)
(define-fun x687 ((x734 Int)) Int 0)
(define-fun x410 ((x734 Int)) Int (ite (= 704 x734) x1117 (x1474 x734)))
(define-fun x955 ((x734 Int)) Int (ite (= 736 x734) x397 (x410 x734)))
(define-fun x1726 ((x734 Int)) Int (ite (= 768 x734) x1151 (x955 x734)))
(define-fun x367 ((x734 Int)) Int (ite (= 800 x734) x1052 (x1726 x734)))
(define-fun x1462 ((x734 Int)) Int (ite (= 832 x734) x75 (x367 x734)))
(define-fun x1602 ((x734 Int)) Int (ite (= 864 x734) x42 (x1462 x734)))
(define-fun x1169 ((x734 Int)) Int (ite (= x734 896) x1164 (x1602 x734)))
(define-fun x1155 ((x734 Int)) Int (ite (= x734 928) x1026 (x1169 x734)))
(define-fun x610 ((x734 Int)) Int (ite (= 960 x734) x241 (x1155 x734)))
(define-fun x818 ((x734 Int)) Int (x1712 x734))
(define-fun x1066 ((x734 Int)) Int (x334 x734))
(define-fun x1396 ((x734 Int)) Int (x1183 x734))
(define-fun x1018 ((x734 Int)) Int (x333 x734))
(define-fun x62 ((x734 Int)) Int (x1515 x734))
(define-fun x979 ((x734 Int)) Int (x1184 x734))
(define-fun x83 ((x734 Int)) Int (x1839 x734))
(define-fun x1063 ((x734 Int)) Int (x1570 x734))
(define-fun x1966 ((x734 Int)) Int (x211 x734))
(define-fun x1718 ((x734 Int)) Int (x1177 x734))
(define-fun x1265 ((x734 Int)) Int (x1056 x734))
(define-fun x938 ((x734 Int)) Int (x1208 x734))
(define-fun x893 ((x734 Int)) Int (x803 x734))
(define-fun x154 ((x734 Int)) Int (x1676 x734))
(define-fun x76 ((x734 Int)) Int (x275 x734))
(define-fun x1841 ((x734 Int)) Int (x461 x734))
(define-fun x174 ((x734 Int)) Int (x433 x734))
(define-fun x651 ((x734 Int)) Int (x1143 x734))
(define-fun x994 ((x734 Int)) Int (x355 x734))
(define-fun x504 ((x734 Int)) Int (x1082 x734))
(define-fun x1335 ((x734 Int)) Int (x847 x734))
(define-fun x1874 ((x734 Int)) Int (x1896 x734))
(define-fun x390 ((x734 Int)) Int (x745 x734))
(define-fun x207 ((x734 Int)) Int (x901 x734))
(define-fun x1823 ((x734 Int)) Int 0)
(define-fun x1321 ((x734 Int)) Int (ite (= 256 x734) x789 (x82 x734)))
(define-fun x44 ((x734 Int)) Int (ite (= x734 288) x1934 (x1321 x734)))
(define-fun x1290 ((x734 Int)) Int 0)
(define-fun x1499 ((x734 Int)) Int (ite (= x734 704) x1886 (x1627 x734)))
(define-fun x1686 ((x734 Int)) Int (ite (= x734 736) x5 (x1499 x734)))
(define-fun x1281 ((x734 Int)) Int (ite (= 768 x734) x1690 (x1686 x734)))
(define-fun x693 ((x734 Int)) Int (ite (= 800 x734) x816 (x1281 x734)))
(define-fun x953 ((x734 Int)) Int (ite (= 832 x734) x1187 (x693 x734)))
(define-fun x1147 ((x734 Int)) Int (ite (= x734 864) x1010 (x953 x734)))
(define-fun x1445 ((x734 Int)) Int (ite (= 896 x734) x1297 (x1147 x734)))
(define-fun x1241 ((x734 Int)) Int (ite (= 928 x734) x960 (x1445 x734)))
(define-fun x1180 ((x734 Int)) Int (ite (= 960 x734) x658 (x1241 x734)))
(define-fun x1745 ((x734 Int)) Int 0)
(define-fun x1560 ((x734 Int)) Int (ite (= 256 x734) x337 (x558 x734)))
(define-fun x717 ((x734 Int)) Int (ite (= x734 288) x1127 (x1560 x734)))
(define-fun x1367 ((x734 Int)) Int 0)
(define-fun x261 ((x734 Int)) Int (ite (= 128 x734) 85963009616197036880240088340724629170983710335684291091497906406952890531840 (x1342 x734)))
(define-fun x1126 ((x734 Int)) Int (ite (= 132 x734) x813 (x261 x734)))
(define-fun x1079 ((x734 Int)) Int (ite (= x734 128) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1621 x734)))
(define-fun x890 ((x734 Int)) Int (ite (= 132 x734) 729466174051048026939049150500379070045048658665 (x1079 x734)))
(define-fun x97 ((x734 Int)) Int (ite (= x734 164) x813 (x890 x734)))
(define-fun x639 ((x734 Int)) Int (ite (= 0 x734) x859 (x1518 x734)))
(define-fun x569 ((x734 Int)) Int (ite (= x734 128) x859 (x97 x734)))
(define-fun x1473 ((x734 Int)) Int (ite (and (< x734 160) (<= 128 x734)) (x639 (- x734 128)) (x381 x734)))
(define-fun x1243 ((x734 Int)) Int (ite (= x734 224) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x569 x734)))
(define-fun x490 ((x734 Int)) Int (ite (= 228 x734) 443215666480553238610125355434898879895743000821 (x1243 x734)))
(define-fun x1292 ((x734 Int)) Int (ite (= x734 260) x813 (x490 x734)))
(define-fun x908 ((x734 Int)) Int (ite (= x734 0) x800 (x1965 x734)))
(define-fun x561 ((x734 Int)) Int (ite (= 224 x734) x800 (x1292 x734)))
(define-fun x1012 ((x734 Int)) Int (ite (and (> 256 x734) (<= 224 x734)) (x908 (- x734 224)) (x1240 x734)))
(define-fun x1554 ((x734 Int)) Int (ite (= 320 x734) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x561 x734)))
(define-fun x1034 ((x734 Int)) Int (ite (= x734 324) 953417218992365150631206543442508943947348309705 (x1554 x734)))
(define-fun x1719 ((x734 Int)) Int (ite (= x734 356) x813 (x1034 x734)))
(define-fun x164 ((x734 Int)) Int (ite (= x734 0) x977 (x1451 x734)))
(define-fun x483 ((x734 Int)) Int (ite (= x734 320) x977 (x1719 x734)))
(define-fun x173 ((x734 Int)) Int (ite (and (<= 320 x734) (> 352 x734)) (x164 (- x734 320)) (x1432 x734)))
(define-fun x1875 ((x734 Int)) Int (ite (= x734 416) 85421856841599162343179548931066850070836787616102889281506983661126589349888 (x483 x734)))
(define-fun x760 ((x734 Int)) Int (ite (= 420 x734) x813 (x1875 x734)))
(define-fun x1860 ((x734 Int)) Int (ite (= 452 x734) 443215666480553238610125355434898879895743000821 (x760 x734)))
(define-fun x123 ((x734 Int)) Int (ite (= x734 484) 81 (x1860 x734)))
(define-fun x1095 ((x734 Int)) Int (ite (= 0 x734) x330 (x370 x734)))
(define-fun x119 ((x734 Int)) Int (ite (and (<= 416 x734) (< x734 448)) (x1095 (- x734 416)) (x834 x734)))
(define-fun x1527 ((x734 Int)) Int (x1183 x734))
(define-fun x326 ((x734 Int)) Int (x847 x734))
(define-fun x516 ((x734 Int)) Int (x333 x734))
(define-fun x917 ((x734 Int)) Int (x1712 x734))
(define-fun x1788 ((x734 Int)) Int (x1184 x734))
(define-fun x1620 ((x734 Int)) Int (x334 x734))
(define-fun x1826 ((x734 Int)) Int (x1839 x734))
(define-fun x1320 ((x734 Int)) Int (x1056 x734))
(define-fun x591 ((x734 Int)) Int (x803 x734))
(define-fun x244 ((x734 Int)) Int (x1208 x734))
(define-fun x1810 ((x734 Int)) Int (x211 x734))
(define-fun x399 ((x734 Int)) Int (x355 x734))
(define-fun x1302 ((x734 Int)) Int (x1676 x734))
(define-fun x307 ((x734 Int)) Int (x275 x734))
(define-fun x1937 ((x734 Int)) Int (x1177 x734))
(define-fun x675 ((x734 Int)) Int (x433 x734))
(define-fun x858 ((x734 Int)) Int (x461 x734))
(define-fun x868 ((x734 Int)) Int (x901 x734))
(define-fun x721 ((x734 Int)) Int (x1570 x734))
(define-fun x1214 ((x734 Int)) Int (x1515 x734))
(define-fun x1675 ((x734 Int)) Int (x1143 x734))
(define-fun x1179 ((x734 Int)) Int (x1082 x734))
(define-fun x446 ((x734 Int)) Int (x1896 x734))
(define-fun x1536 ((x734 Int)) Int (x745 x734))
(define-fun x122 ((x734 Int)) Int (ite (> x1106 x734) (x1382 x734) 0))
(define-fun x1632 ((x734 Int)) Int (ite (and (>= x734 0) (< x734 x1106)) (x1189 x734) (x122 x734)))
(define-fun x69 ((x734 Int)) Int (ite (= x559 x734) x1523 (x1294 x734)))
(define-fun x1298 ((x734 Int)) Int (ite (= x734 128) x747 (x1272 x734)))
(define-fun x1956 ((x734 Int)) Int (ite (and (> (+ x747 160) x734) (>= x734 160)) (x1632 (- (+ x734 x36) 160)) (x1298 x734)))
(define-fun x1108 ((x734 Int)) Int (ite (= x734 x1051) 0 (x1956 x734)))
(define-fun x133 ((x734 Int)) Int (ite (= x1843 x734) x742 (x1108 x734)))
(define-fun x1293 ((x734 Int)) Int (ite (and (> (+ x782 x740) x734) (>= x734 x782)) (x1632 (- (+ x734 x1106) x782)) (x133 x734)))
(define-fun x1007 ((x734 Int)) Int 0)
(define-fun x80 ((x734 Int)) Int (ite (= x734 256) x987 (x317 x734)))
(define-fun x1206 ((x734 Int)) Int (ite (= x734 288) x219 (x80 x734)))
(define-fun x1412 ((x734 Int)) Int 0)
(define-fun x351 ((x734 Int)) Int (ite (= 128 x734) 85963009616197036880240088340724629170983710335684291091497906406952890531840 (x783 x734)))
(define-fun x1565 ((x734 Int)) Int (ite (= x734 132) x936 (x351 x734)))
(define-fun x1724 ((x734 Int)) Int (ite (= x734 128) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x130 x734)))
(define-fun x1469 ((x734 Int)) Int (ite (= x734 132) 729466174051048026939049150500379070045048658665 (x1724 x734)))
(define-fun x352 ((x734 Int)) Int (ite (= 164 x734) x936 (x1469 x734)))
(define-fun x1967 ((x734 Int)) Int (ite (= 0 x734) x382 (x560 x734)))
(define-fun x983 ((x734 Int)) Int (ite (= 128 x734) x382 (x352 x734)))
(define-fun x1205 ((x734 Int)) Int (ite (and (>= x734 128) (< x734 160)) (x1967 (- x734 128)) (x741 x734)))
(define-fun x1456 ((x734 Int)) Int (ite (= 224 x734) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x983 x734)))
(define-fun x440 ((x734 Int)) Int (ite (= 228 x734) 443215666480553238610125355434898879895743000821 (x1456 x734)))
(define-fun x1125 ((x734 Int)) Int (ite (= x734 260) x936 (x440 x734)))
(define-fun x1334 ((x734 Int)) Int (ite (= 0 x734) x1378 (x33 x734)))
(define-fun x1014 ((x734 Int)) Int (ite (= 224 x734) x1378 (x1125 x734)))
(define-fun x1604 ((x734 Int)) Int (ite (and (>= x734 224) (> 256 x734)) (x1334 (- x734 224)) (x1016 x734)))
(define-fun x604 ((x734 Int)) Int (ite (= 320 x734) 58652715557392481136322917363278564085642169142198350659161099264462031945728 (x1014 x734)))
(define-fun x1133 ((x734 Int)) Int (ite (= x734 324) 953417218992365150631206543442508943947348309705 (x604 x734)))
(define-fun x1583 ((x734 Int)) Int (ite (= 356 x734) x936 (x1133 x734)))
(define-fun x1347 ((x734 Int)) Int (ite (= 0 x734) x1642 (x810 x734)))
(define-fun x1316 ((x734 Int)) Int (ite (= 320 x734) x1642 (x1583 x734)))
(define-fun x339 ((x734 Int)) Int (ite (and (>= x734 320) (< x734 352)) (x1347 (- x734 320)) (x485 x734)))
(define-fun x722 ((x734 Int)) Int (ite (= x734 416) 85421856841599162343179548931066850070836787616102889281506983661126589349888 (x1316 x734)))
(define-fun x1716 ((x734 Int)) Int (ite (= x734 420) x936 (x722 x734)))
(define-fun x1963 ((x734 Int)) Int (ite (= 452 x734) 443215666480553238610125355434898879895743000821 (x1716 x734)))
(define-fun x402 ((x734 Int)) Int (ite (= 484 x734) 81 (x1963 x734)))
(define-fun x980 ((x734 Int)) Int (ite (= x734 0) x1153 (x192 x734)))
(define-fun x1339 ((x734 Int)) Int (ite (and (< x734 448) (>= x734 416)) (x980 (- x734 416)) (x804 x734)))
(define-fun x1135 ((x734 Int)) Int (ite x1299 (x133 x734) (x1293 x734)))
(define-fun x221 ((x734 Int)) Int (ite (= x734 x942) 57 (x1135 x734)))
(define-fun x1957 ((x734 Int)) Int (ite (= x1088 x734) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x221 x734)))
(define-fun x1509 ((x734 Int)) Int (ite (= x734 x324) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x1957 x734)))
(define-fun x1617 ((x734 Int)) Int (ite (= x194 x734) x272 (x1509 x734)))
(define-fun x396 ((x734 Int)) Int (ite (= x1389 x734) x255 (x1617 x734)))
(define-fun x696 ((x734 Int)) Int (ite (= x141 x734) x444 (x396 x734)))
(define-fun x508 ((x734 Int)) Int (ite (= x734 x543) x970 (x696 x734)))
(define-fun x1743 ((x734 Int)) Int (ite x931 (x696 x734) (ite x1165 (x396 x734) (ite x1931 (x1617 x734) (ite x176 (x1509 x734) (x508 x734))))))
(define-fun x1848 ((x734 Int)) Int (ite (= x734 x1149) 0 (x1743 x734)))
(define-fun x345 ((x734 Int)) Int (ite (= x734 x455) x63 (x1848 x734)))
(define-fun x1224 ((x734 Int)) Int (ite (= x216 x734) x954 (x345 x734)))
(define-fun x1231 ((x734 Int)) Int (ite (= x734 x1211) x407 (x1224 x734)))
(define-fun x90 ((x734 Int)) Int (ite (= x502 x734) x794 (x1231 x734)))
(define-fun x536 ((x734 Int)) Int (ite (= x1149 x734) x1511 (x90 x734)))
(define-fun x1064 ((x734 Int)) Int (ite (= x734 x1388) x535 (x536 x734)))
(define-fun x1080 ((x734 Int)) Int (ite x688 (x1135 x734) (x1064 x734)))
(define-fun x728 ((x734 Int)) Int (ite (= x734 x1953) 57 (x1080 x734)))
(define-fun x594 ((x734 Int)) Int (ite (= x1680 x734) 39095828447348766818467541868648093896559026261938444753180772323039453799525 (x728 x734)))
(define-fun x497 ((x734 Int)) Int (ite (= x734 x1820) 51755322175217624492750805572474109157238378692794855914282927279451288895488 (x594 x734)))
(define-fun x1878 ((x734 Int)) Int (ite (= x734 x1112) 37749366859872002549862985897619888669665948435824635674531347399775013991474 (x497 x734)))
(define-fun x191 ((x734 Int)) Int (ite (= x1387 x734) 24068214603859720034826088920346711864364023158142564334732402816841156945010 (x1878 x734)))
(define-fun x347 ((x734 Int)) Int (ite (= x734 x1059) 45887579694954924622689847950937698470056863744033464196450664576267108643884 (x191 x734)))
(define-fun x660 ((x734 Int)) Int (ite (= x1524 x734) 39095828447348766818467541868648093896559026265977760979361568868651215582053 (x347 x734)))
(define-fun x1908 ((x734 Int)) Int (ite (= x734 x348) 52672081143094129087634851003622940732604441515226977473621344926390909140992 (x660 x734)))
(define-fun x346 ((x734 Int)) Int (ite (= x43 x734) x1578 (x1908 x734)))
(define-fun x1134 ((x734 Int)) Int (ite (= x734 x681) x1104 (x346 x734)))
(define-fun x695 ((x734 Int)) Int (ite (= x547 x734) x1280 (x1134 x734)))
(define-fun x152 ((x734 Int)) Int (ite (= x1306 x734) x1566 (x695 x734)))
(define-fun x1902 ((x734 Int)) Int (ite x586 (x695 x734) (ite x1409 (x1134 x734) (ite x1731 (x346 x734) (ite x1434 (x1908 x734) (x152 x734))))))
(define-fun x91 ((x734 Int)) Int (ite (= x734 x385) 0 (x1902 x734)))
(define-fun x1444 ((x734 Int)) Int (ite (= x734 x1933) x620 (x91 x734)))
(define-fun x1073 ((x734 Int)) Int (ite (= x734 x1279) x1152 (x1444 x734)))
(define-fun x1084 ((x734 Int)) Int (ite (= x973 x734) x251 (x1073 x734)))
(define-fun x1520 ((x734 Int)) Int (ite (= x41 x734) x143 (x1084 x734)))
(define-fun x1794 ((x734 Int)) Int (ite (= x734 x1974) x1714 (x1520 x734)))
(define-fun x1596 ((x734 Int)) Int (ite x597 (x1520 x734) (ite x1398 (x1084 x734) (ite x475 (x1073 x734) (ite x1113 (x1444 x734) (x1794 x734))))))
(define-fun x605 ((x734 Int)) Int (ite (= x734 x385) x1769 (x1596 x734)))
(define-fun x889 ((x734 Int)) Int (ite (= x734 x1098) x905 (x605 x734)))
(define-fun x637 ((x734 Int)) Int (ite (= x757 x734) x1687 (x889 x734)))
(define-fun x1607 ((x734 Int)) Int (ite (= x734 x526) x1857 (x637 x734)))
(define-fun x1420 ((x734 Int)) Int (ite (= x734 x764) x1304 (x1607 x734)))
(define-fun x363 ((x734 Int)) Int (ite (= x734 x1815) x312 (x1420 x734)))
(define-fun x113 ((x734 Int)) Int (ite (= x734 x1563) x838 (x363 x734)))
(define-fun x1654 ((x734 Int)) Int (ite (= x734 x701) x1267 (x113 x734)))
(define-fun x224 ((x734 Int)) Int (ite (= x734 x1919) 63076024560530113402979550242307453568063438748328787417531900361828837441551 (x1654 x734)))
(define-fun x1411 ((x734 Int)) Int (ite (= x734 x1266) x854 (x224 x734)))
(define-fun x1538 ((x734 Int)) Int (ite (= x56 x734) x1698 (x1411 x734)))
(define-fun x278 ((x734 Int)) Int (ite (= x448 x734) x1351 (x1538 x734)))
(define-fun x1286 ((x734 Int)) Int (ite (= x734 x773) x801 (x278 x734)))
(define-fun x1277 ((x734 Int)) Int (ite (= x734 x321) x150 (x1286 x734)))
(define-fun x962 ((x734 Int)) Int (ite x1285 (x1277 x734) (x1654 x734)))
(define-fun x582 ((x734 Int)) Int (ite (= x734 x1055) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x962 x734)))
(define-fun x851 ((x734 Int)) Int (ite (= x16 x734) x755 (x582 x734)))
(define-fun x1586 ((x734 Int)) Int (ite (= x1390 x734) x1918 (x851 x734)))
(define-fun x109 ((x734 Int)) Int (ite (= x734 x1055) 0 (x1586 x734)))
(define-fun x175 ((x734 Int)) Int (ite (= x187 x734) x967 (x109 x734)))
(define-fun x1178 ((x734 Int)) Int (ite (= x734 x798) x1085 (x175 x734)))
(define-fun x1276 ((x734 Int)) Int (ite (= x537 x734) x525 (x1178 x734)))
(define-fun x1190 ((x734 Int)) Int (ite (= x4 x734) x910 (x1276 x734)))
(define-fun x12 ((x734 Int)) Int (x1678 x734))
(define-fun x235 ((x734 Int)) Int (ite (= x734 x1707) x297 (x1190 x734)))
(define-fun x1109 ((x734 Int)) Int (ite x1962 (x235 x734) (ite x1237 (x235 x734) (x1586 x734))))
(define-fun x1662 ((x734 Int)) Int (ite (= x734 x596) 2 (x1109 x734)))
(define-fun x162 ((x734 Int)) Int (ite (= x1049 x734) 22260506169142864168419965211860030380910469616735923253374116530085716557824 (x1662 x734)))
(define-fun x1478 ((x734 Int)) Int (ite (= x811 x734) 2 (x162 x734)))
(define-fun x1671 ((x734 Int)) Int (ite (= x734 x1636) 24522070412059196110286586012810966081169649004736715519769772467740269871104 (x1478 x734)))
(define-fun x13 ((x734 Int)) Int (ite (= x2 x734) x1857 (x1671 x734)))
(define-fun x778 ((x734 Int)) Int (ite (= x1287 x734) 9 (x13 x734)))
(define-fun x1273 ((x734 Int)) Int (ite (= x590 x734) x127 (x778 x734)))
(define-fun x1646 ((x734 Int)) Int (ite (= x734 x1625) x1351 (x1273 x734)))
(define-fun x394 ((x734 Int)) Int (ite (= x1032 x734) x487 (x1646 x734)))
(define-fun x1448 ((x734 Int)) Int (ite (= x1737 x734) x990 (x394 x734)))
(define-fun x1087 ((x734 Int)) Int (ite (= x734 x118) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x1448 x734)))
(define-fun x291 ((x734 Int)) Int (ite (= x996 x734) x290 (x1087 x734)))
(define-fun x1366 ((x734 Int)) Int (ite (= x460 x734) x359 (x291 x734)))
(define-fun x46 ((x734 Int)) Int (ite (= x1319 x734) x1932 (x1366 x734)))
(define-fun x1847 ((x734 Int)) Int (ite (= x734 x1720) 128 (x46 x734)))
(define-fun x710 ((x734 Int)) Int (ite (= x734 x1364) x623 (x1847 x734)))
(define-fun x929 ((x734 Int)) Int (ite (= x592 x734) x1312 (x710 x734)))
(define-fun x744 ((x734 Int)) Int (ite (= x734 x1608) x928 (x929 x734)))
(define-fun x1481 ((x734 Int)) Int (ite (= x734 x213) x298 (x744 x734)))
(define-fun x1199 ((x734 Int)) Int (ite (= x1652 x734) x1465 (x1481 x734)))
(define-fun x882 ((x734 Int)) Int (ite x380 (x1481 x734) (ite x796 (x744 x734) (ite x625 (x929 x734) (ite x404 (x710 x734) (x1199 x734))))))
(define-fun x1369 ((x734 Int)) Int (ite (= x1629 x734) 0 (x882 x734)))
(define-fun x1472 ((x734 Int)) Int (ite (and (>= x734 x118) (< x734 (+ 64 x118))) (x1817 (- x734 x118)) (x1369 x734)))
(define-fun x1327 ((x734 Int)) Int (ite x1380 (x1472 x734) (x1369 x734)))
(define-fun x1813 ((x734 Int)) Int (ite (and (< x734 (+ 64 x118)) (>= x734 x118)) (x1817 (- x734 x118)) (x1327 x734)))
(define-fun x457 ((x734 Int)) Int (ite (= x734 x1821) 2 (x1813 x734)))
(define-fun x659 ((x734 Int)) Int (ite (= x734 x1361) 25877242110744216891076975195880784582809329153640315260649044424131709239296 (x457 x734)))
(define-fun x408 ((x734 Int)) Int (ite (= x734 x95) 2 (x659 x734)))
(define-fun x753 ((x734 Int)) Int (ite (= x1749 x734) 22264039863272420937079131806861516217942124584529674491290359742488301797376 (x408 x734)))
(define-fun x78 ((x734 Int)) Int (ite (= x734 x1161) 2 (x753 x734)))
(define-fun x1861 ((x734 Int)) Int (ite (= x1873 x734) 22700451088272681866486206289545017091351513107057952373946396474207578882048 (x78 x734)))
(define-fun x914 ((x734 Int)) Int (ite (= x734 x86) 2 (x1861 x734)))
(define-fun x1805 ((x734 Int)) Int (ite (= x87 x734) 22702217935337460250815789587045760009867340590954827992904518080408871501824 (x914 x734)))
(define-fun x212 ((x734 Int)) Int (ite x49 (x1861 x734) (x1805 x734)))
(define-fun x577 ((x734 Int)) Int (ite (= x734 x1450) 103603067176188370116793463780953604340491603117933565163376133325037439549440 (x212 x734)))
(define-fun x266 ((x734 Int)) Int (ite (= x734 x1403) x1816 (x577 x734)))
(define-fun x736 ((x734 Int)) Int (ite (= x338 x734) x341 (x266 x734)))
(define-fun x1260 ((x734 Int)) Int (ite (= x999 x734) x1416 (x736 x734)))
(define-fun x1771 ((x734 Int)) Int (ite (= x1651 x734) 128 (x1260 x734)))
(define-fun x131 ((x734 Int)) Int (ite (= x1623 x734) x1811 (x1771 x734)))
(define-fun x383 ((x734 Int)) Int (ite (and (>= x734 x836) (> (+ x836 x1811) x734)) (x1632 (- (+ x734 x1029) x836)) (x131 x734)))
(define-fun x1958 ((x734 Int)) Int (ite (= x1869 x734) 0 (x383 x734)))
(define-fun x268 ((x734 Int)) Int (ite (and (>= x734 x1450) (< x734 (+ x1450 64))) (x1426 (- x734 x1450)) (x1958 x734)))
(define-fun x458 ((x734 Int)) Int (ite (= x1 x734) x1223 (x461 x734)))
(define-fun x181 ((x734 Int)) Int (ite (= x734 x442) x223 (x1183 x734)))
(define-fun x1483 ((x734 Int)) Int (ite x262 (x1183 x734) (x181 x734)))
(define-fun x1825 ((x734 Int)) Int (ite x262 (x458 x734) (x461 x734)))
(define-fun x1353 ((x734 Int)) Int (ite (= x1658 x734) x1217 (x901 x734)))
(define-fun x1598 ((x734 Int)) Int (ite (= x1658 x734) x759 (x355 x734)))
(define-fun x1212 ((x734 Int)) Int 0)
(define-fun x429 ((x734 Int)) Int (ite (= x734 704) x22 (x1713 x734)))
(define-fun x450 ((x734 Int)) Int (ite (= 736 x734) x969 (x429 x734)))
(define-fun x945 ((x734 Int)) Int (ite (= 768 x734) x564 (x450 x734)))
(define-fun x1086 ((x734 Int)) Int (ite (= x734 800) x1824 (x945 x734)))
(define-fun x1172 ((x734 Int)) Int (ite (= 832 x734) x226 (x1086 x734)))
(define-fun x282 ((x734 Int)) Int (ite (= 864 x734) x454 (x1172 x734)))
(define-fun x716 ((x734 Int)) Int (ite (= 896 x734) x509 (x282 x734)))
(define-fun x835 ((x734 Int)) Int (ite (= 928 x734) x657 (x716 x734)))
(define-fun x231 ((x734 Int)) Int (ite (= 960 x734) x754 (x835 x734)))
(define-fun x1778 ((x734 Int)) Int (ite x799 (x268 x734) (x1958 x734)))
(define-fun x405 ((x734 Int)) Int (ite (and (> (+ x1450 64) x734) (>= x734 x1450)) (x1426 (- x734 x1450)) (x1778 x734)))
(define-fun x1027 ((x734 Int)) Int (ite (= x937 x734) 2 (x405 x734)))
(define-fun x549 ((x734 Int)) Int (ite (= x387 x734) 22703984782402238635145372884546502928383168074851703611862639686610164121600 (x1027 x734)))
(define-fun x19 ((x734 Int)) Int (ite (= x734 x269) 19198514131333069964808701557143768876432618777570657477111002777175690575872 (x549 x734)))
(define-fun x640 ((x734 Int)) Int (ite (= x631 x734) x158 (x19 x734)))
(define-fun x1225 ((x734 Int)) Int (ite (= x734 x1622) x1264 (x640 x734)))
(define-fun x1228 ((x734 Int)) Int (ite (= x1202 x734) x853 (x1225 x734)))
(define-fun x1799 ((x734 Int)) Int (ite (= x679 x734) x341 (x1228 x734)))
(define-fun x556 ((x734 Int)) Int (ite (and (< x734 (+ x269 32)) (<= x269 x734)) (x464 (- x734 x269)) (x1799 x734)))
(define-fun x71 ((x734 Int)) Int (ite x400 (x556 x734) (x1799 x734)))
(define-fun x274 ((x734 Int)) Int (ite (and (< x734 (+ 32 x269)) (>= x734 x269)) (x464 (- x734 x269)) (x71 x734)))
(assert (x439 x541))
(assert (x439 x1919))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639742))
(assert (x439 x599))
(assert (x439 x732))
(assert (=> (>= 10000 x112) (= (x1709 x112) 0)))
(assert (> (x54 x856 x567 x809 x752 x1703 x1539 x1429) 10000))
(assert (= (x110 64 729466174051048026939049150500379070045048658665 0) (x1709 (x110 64 729466174051048026939049150500379070045048658665 0))))
(assert (x439 x34))
(assert (= x995 (x1340 (x553 x995 x707 x420 x758 x517))))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x598 x995 x494 x677 x964) (x1709 (x598 x995 x494 x677 x964))))
(assert (x439 x1300))
(assert (x439 x1695))
(assert (x439 x1921))
(assert (x439 x28))
(assert (= x1271 (and (not x1791) x617)))
(assert (=> (>= 10000 x190) (= 0 (x1709 x190))))
(assert (x439 x909))
(assert (=> (<= x1834 10000) (= (x1709 x1834) 0)))
(assert (x439 x1038))
(assert (x439 x1609))
(assert (=> (>= 10000 x705) (= 0 (x1709 x705))))
(assert (= (x1340 (x553 x856 x1377 x214 x563 x934)) x856))
(assert (= x1398 (and (not x1984) x684)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x1845 x1245 x1905 x279)))
(assert (=> (<= x225 10000) (= (x1709 x225) 0)))
(assert (= (x1709 (x598 x1881 x432 x966 x424)) (x598 x1881 x432 x966 x424)))
(assert (x439 x768))
(assert (x439 x566))
(assert (= (x1709 25877242110744216891076975195880784582809329153640315260649044424131709239296) 0))
(assert (x439 x1737))
(assert (=> (<= x430 10000) (= 0 (x1709 x430))))
(assert (x439 x1222))
(assert (x294 18446744073709551391))
(assert (x439 x1916))
(assert (x439 x763))
(assert (not (x294 (x54 x670 x1314 x301 x253 x852 x1244 x242))))
(assert (x439 x359))
(assert (= x308 (x379 (x553 x670 x308 x1637 x1849 x573))))
(assert (= (x149 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x1480))
(assert (x439 x9))
(assert (x439 x1681))
(assert (x439 x1036))
(assert (< (x110 64 x22 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x151))
(assert (x439 x101))
(assert (= 0 (x1709 22700451088272681866486206289545017091351513107057952373946396474207578882048)))
(assert (= (x756 x670 x1439) (x1709 (x756 x670 x1439))))
(assert (= (x1340 (x110 64 x936 x246)) 64))
(assert (x439 x939))
(assert (x439 x771))
(assert (x439 x987))
(assert (x439 x157))
(assert (x439 x959))
(assert (= (x1774 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x705))
(assert (not (x294 (x110 64 x813 x1512))))
(assert (> (x110 64 x1687 3) 10000))
(assert (x439 x603))
(assert (x439 x48))
(assert (= (x1340 (x1904 x222 x1569 x644 x1808 x1379 x652)) x222))
(assert (= (x1709 (+ x1526 1)) (x1709 x1526)))
(assert (x439 x621))
(assert (x439 x1159))
(assert (x439 x460))
(assert (x439 x305))
(assert (= (x1709 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)) (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)))
(assert (= x254 (x149 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (x439 x432))
(assert (x439 x512))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x439 x1734))
(assert (not (x294 (x110 64 x936 x246))))
(assert (= x1687 (x379 (x110 64 x1687 4))))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (= x1301 (x1922 (x598 x222 x906 x1301 x1773))))
(assert (x439 x1441))
(assert (x439 x646))
(assert (= (x1922 (x1904 x1881 x1477 x418 x808 x712 x476)) x418))
(assert (= 0 (x1709 4067465820)))
(assert (x439 x1524))
(assert (= (x1709 (x110 x84 x542 x574)) (x110 x84 x542 x574)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x413 x430 x866 x666)))
(assert (x439 x682))
(assert (= x1247 (x379 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x439 x1784))
(assert (=> (>= 10000 x316) (= 0 (x1709 x316))))
(assert (< 10000 (x553 x84 x578 x1458 x1751 x1980)))
(assert (x439 x672))
(assert (= (=> (and (and (= x853 (x405 x922)) (= (x1131 (+ 64 x1450)) x1176) (= x322 (x1632 x766)) (or (>= 18446744073709551487 x1450) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1450)) (< x1450 x1176) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639806) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x770) (>= 1461501637330902918203684832716283019655932542975 x158) (< x1176 x937) (<= 1 x853) (= x1264 (x1632 x1589)) (>= 18446744073709551550 x1450) (not (> x1176 x937)) (= (x1131 (+ x322 x766)) x163) (< x937 x269) (or (and (> x1762 x322) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x322) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762))) (and (> x322 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1450) (<= x1450 115792089237316195423570985008687907853269984665640564039457584007913129639743)) (= x1927 (x1131 (+ x1070 x766))) (= (x1131 (+ x1622 32)) x1202) (or (and (< x1070 x1762) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070))) (and (> x1070 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762))) (= (+ 64 x937) x269) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1070) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1070)) (= (x405 x1450) x92) (or (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x322) (>= x322 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= 340282366920938463463374607431768211455 x1264) (>= x770 32) (>= x132 1) (= x1622 (x1131 (+ x631 32))) (= x387 (+ x937 32)) (= (< 0 x1752) x1255) (= (x1131 (+ x163 32)) x1589) (= (x1131 (+ 4 x269)) x631) (= x158 (x1632 x1927)) (= x937 (+ 64 x1176)) (= (x1131 (+ 32 x1202)) x679) (= (x1131 (+ 32 x1450)) x922) (or (>= 18446744073709551487 x1450) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1450)) (= x1070 (x1632 x766)) (= 1 x92) (>= 18446744073709551550 x1450)) (or (and x1255 (and (>= 4294967295 x770) (>= x770 32) (= 1 x1945))) (and (= x1945 x1752) (not x1255)))) x781) x1653))
(assert (= x1068 (x149 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705))))
(assert (x439 x1853))
(assert (x439 x950))
(assert (x439 x575))
(assert (x439 x623))
(assert (x439 x353))
(assert (= x796 (and x1812 (not x393))))
(assert (x439 x234))
(assert (x439 x1455))
(assert (not (x294 (x110 64 x1886 3))))
(assert (= x66 (and x703 x1923)))
(assert (x439 x1313))
(assert (x439 x1464))
(assert (=> (<= x302 10000) (= (x1709 x302) 0)))
(assert (x439 x511))
(assert (x439 x879))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (= (or x1237 x540 x1962) x888))
(assert (x439 x1900))
(assert (=> (>= 10000 x1489) (= 0 (x1709 x1489))))
(assert (x439 x158))
(assert (> (x110 64 x813 x632) 10000))
(assert (x439 x1069))
(assert (x439 x678))
(assert (x439 x787))
(assert (< (x1904 x670 x1475 x1069 x1427 x555 x1122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x110 64 443215666480553238610125355434898879895743000821 1) (x1709 (x110 64 443215666480553238610125355434898879895743000821 1))))
(assert (= (x1922 (x110 64 81 x1089)) x1089))
(assert (not (x294 (x756 x1881 x1948))))
(assert (x439 x692))
(assert (= (x553 x413 x1500 x1868 x427 x199) (x1709 (x553 x413 x1500 x1868 x427 x199))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x553 x995 x707 x420 x758 x517)))
(assert (= (x379 (x110 64 x936 x968)) x936))
(assert (x439 x304))
(assert (x439 x1797))
(assert (x439 x989))
(assert (=> (<= x1404 10000) (= (x1709 x1404) 0)))
(assert (= (x532 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x1639))
(assert (= (x379 (x110 64 x112 4)) x112))
(assert (= (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486) (x1709 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486))))
(assert (= (x1709 45887579694954924622689847950937698470056863744033464196450664576267108643884) 0))
(assert (x439 x1310))
(assert (=> (<= x177 10000) (= (x1709 x177) 0)))
(assert (=> (>= 10000 x418) (= 0 (x1709 x418))))
(assert (= (x379 (x553 x222 x1322 x711 x1154 x74)) x1322))
(assert (x439 x1833))
(assert (x439 x1667))
(assert (x439 x1816))
(assert (=> (<= x1263 10000) (= (x1709 x1263) 0)))
(assert (x439 x482))
(assert (x439 x316))
(assert (=> (<= x924 10000) (= (x1709 x924) 0)))
(assert (x439 x1153))
(assert (x439 x324))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1904 x413 x1533 x300 x958 x1987 x57)))
(assert (=> (>= 10000 x574) (= 0 (x1709 x574))))
(assert (x439 x1264))
(assert (= (x1340 (x110 64 x813 x632)) 64))
(assert (x439 x496))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639868))
(assert (= (x379 (x54 x84 x576 x926 x1269 x364 x227 x1209)) x576))
(assert (x439 x325))
(assert (=> (<= x567 10000) (= 0 (x1709 x567))))
(assert (x439 x826))
(assert (x439 x677))
(assert (x439 x129))
(assert (= x686 (=> (and (= x746 0) (= false x284) (= true x1168)) x986)))
(assert (= (x1774 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)) x545))
(assert (< (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x656))
(assert (= x1470 (or x1299 x1430)))
(assert (=> (>= 10000 x1128) (= 0 (x1709 x1128))))
(assert (x439 x601))
(assert (= x1634 (and x1925 x527)))
(assert (x439 x498))
(assert (x439 x1589))
(assert (= x1430 (and (not x1807) x260)))
(assert (x439 x875))
(assert (=> (>= 10000 x568) (= 0 (x1709 x568))))
(assert (= (and (not x1182) x674) x586))
(assert (= (x1922 (x553 x856 x1377 x214 x563 x934)) x214))
(assert (= 64 (x1340 (x110 64 x1886 3))))
(assert (=> (>= 10000 x909) (= 0 (x1709 x909))))
(assert (x439 x1889))
(assert (x439 x809))
(assert (x200 x1855))
(assert (= (and (not x1852) x107) x597))
(assert (x439 x1119))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x553 x84 x578 x1458 x1751 x1980)))
(assert (x439 x4))
(assert (= x1050 (x379 (x553 x1845 x1050 x1408 x104 x1198))))
(assert (x294 57896044618658097711785492504343953926634992332820282019728792003956564819999))
(assert (x439 x63))
(assert (x439 x1270))
(assert (x439 x190))
(assert (x439 x254))
(assert (=> (<= x792 10000) (= 0 (x1709 x792))))
(assert (x439 x385))
(assert (x439 x1176))
(assert (= (or x688 x1400) x319))
(assert (x439 x747))
(assert (x439 x1836))
(assert (x439 x1187))
(assert (x439 x652))
(assert (x439 x1702))
(assert (= 0 (x1709 340282366920938463463374607431768211454)))
(assert (x439 x957))
(assert (= (x1709 11309588061646438093662687302255421419811724423900836950936401294474059186176) 0))
(assert (= x1648 (x1922 (x1904 x1845 x137 x1648 x50 x720 x316))))
(assert (x439 x576))
(assert (x439 x590))
(assert (x439 x1065))
(assert (x439 x653))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639679))
(assert (x439 x100))
(assert (x439 x1118))
(assert (=> (<= x1315 10000) (= 0 (x1709 x1315))))
(assert (< (x110 64 x1186 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1614))
(assert (x439 x337))
(assert (x439 x1891))
(assert (= (x1709 (x598 x1845 x1245 x1905 x279)) (x598 x1845 x1245 x1905 x279)))
(assert (x439 x1751))
(assert (not (x294 (x110 64 x1687 4))))
(assert (x439 x1787))
(assert (x439 x792))
(assert (=> (>= 10000 x677) (= (x1709 x677) 0)))
(assert (= x1230 (x379 (x110 x1845 x1230 x900))))
(assert (x439 x1770))
(assert (x439 x1345))
(assert (x439 x1136))
(assert (x439 x880))
(assert (=> (>= 10000 x392) (= (x1709 x392) 0)))
(assert (> (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944) 10000))
(assert (x439 x1553))
(assert (x439 x681))
(assert (x439 x1061))
(assert (= (x1340 (x110 x995 x802 x79)) x995))
(assert (< (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x160))
(assert (x439 x85))
(assert (x439 x789))
(assert (=> (<= x958 10000) (= 0 (x1709 x958))))
(assert (=> (>= 10000 x1886) (= (x1709 x1886) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)))
(assert (x439 x1754))
(assert (x439 x96))
(assert (=> (>= 10000 x1924) (= 0 (x1709 x1924))))
(assert (= x1541 (x1457 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (= x424 (x1457 (x598 x1881 x432 x966 x424))))
(assert (=> (>= 10000 x1703) (= (x1709 x1703) 0)))
(assert (= (=> (and (= x1939 (= x1898 0)) (or x1939 (and (= x1898 0) (not x1939)))) x1485) x848))
(assert (x439 x472))
(assert (= x1777 (x379 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x756 x84 x1767)))
(assert (=> (>= 10000 x301) (= 0 (x1709 x301))))
(assert (= (or x1271 x1039) x273))
(assert (x439 x628))
(assert (=> (>= 10000 x1188) (= 0 (x1709 x1188))))
(assert (x439 x1304))
(assert (x439 x1898))
(assert (= x1408 (x1922 (x553 x1845 x1050 x1408 x104 x1198))))
(assert (x294 18446744073709551487))
(assert (x439 x1032))
(assert (x439 x407))
(assert (= (x1340 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)) x856))
(assert (> (x110 64 x813 x342) 10000))
(assert (x439 x1845))
(assert (x439 x1407))
(assert (x439 x852))
(assert (x439 x548))
(assert (x439 x1629))
(assert (x439 x1085))
(assert (x439 x1697))
(assert (= (x1709 (x110 64 953417218992365150631206543442508943947348309705 0)) (x110 64 953417218992365150631206543442508943947348309705 0)))
(assert (x439 x1829))
(assert (= (and (not x1789) x544) x1113))
(assert (= x926 (x1922 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (x439 x1835))
(assert (x439 x1846))
(assert (= x1729 (x379 (x598 x670 x1729 x1392 x234))))
(assert (x439 x1490))
(assert (= x404 (and (not x949) x927)))
(assert (x294 1099511627775))
(assert (x439 x1160))
(assert (x439 x1175))
(assert (x439 x465))
(assert (x439 x1128))
(assert (x439 x1763))
(assert (x439 x1593))
(assert (= 0 (x1709 18446744073709551487)))
(assert (x439 x1587))
(assert (x439 x770))
(assert (x439 x75))
(assert (= (x756 x222 x1753) (x1709 (x756 x222 x1753))))
(assert (= x752 (x1457 (x54 x856 x567 x809 x752 x1703 x1539 x1429))))
(assert (x439 x757))
(assert (x439 x735))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x84 x542 x574)))
(assert (= (x602 (x1904 x1845 x137 x1648 x50 x720 x316)) x316))
(assert (= (x1709 (x553 x995 x707 x420 x758 x517)) (x553 x995 x707 x420 x758 x517)))
(assert (< 10000 (x110 64 443215666480553238610125355434898879895743000821 1)))
(assert (= (or (and x1595 (not x1699)) (and x974 x1123) (and x1419 x1037) (and x667 x1097)) x1323))
(assert (= (or x280 x262) x1138))
(assert (x439 x619))
(assert (x439 x1630))
(assert (x439 x1628))
(assert (x439 x1431))
(assert (> (x110 64 x936 x1672) 10000))
(assert (= x420 (x1922 (x553 x995 x707 x420 x758 x517))))
(assert (= (x1709 (x1904 x84 x431 x1614 x621 x496 x350)) (x1904 x84 x431 x1614 x621 x496 x350)))
(assert (=> (<= x1569 10000) (= (x1709 x1569) 0)))
(assert (x439 x1311))
(assert (x336 1461501637330902918203684832716283019655932542975))
(assert (x294 3686331914))
(assert (=> (<= x1429 10000) (= (x1709 x1429) 0)))
(assert (< (x110 x995 x802 x79) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x276))
(assert (x439 x611))
(assert (x439 x1692))
(assert (< 10000 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)))
(assert (< 10000 (x553 x222 x1322 x711 x1154 x74)))
(assert (= (x1709 (x110 64 81 x902)) (x110 64 81 x902)))
(assert (= (x1457 (x1904 x670 x1475 x1069 x1427 x555 x1122)) x1427))
(assert (= (and x126 x459) x904))
(assert (x439 x1440))
(assert (x439 x1092))
(assert (= x1674 (=> (and (and (= x117 3686331914) x289 (>= x1562 0) (= x1019 x1145) (not (= x353 x1865)) (<= x371 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x801) x1887 (>= 1461501637330902918203684832716283019655932542975 x892) (= x1275 (< 0 (x1185 x1865))) (= x1038 36) (>= x892 0) (>= 1461501637330902918203684832716283019655932542975 x895) (= x1887 (< 0 (x1185 x353))) (not (= x648 x801)) (not (= x1936 x353)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x779) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1106) (>= 1461501637330902918203684832716283019655932542975 x1011) (>= x895 0) (<= 356 x1106) (>= 1461501637330902918203684832716283019655932542975 x1865) (= (> (x1185 x801) 0) x257) (= false x1741) (= x627 7) (>= x629 0) (>= x779 0) (= x289 (< 0 (x1185 x648))) (>= 1461501637330902918203684832716283019655932542975 x1507) (<= 1 x1936) (<= x1385 1461501637330902918203684832716283019655932542975) x663 (= false x421) (<= 0 x299) (= x1562 x1019) (>= 4294967295 x299) (= false x1341) x257 (>= x198 0) (<= x668 1461501637330902918203684832716283019655932542975) x1275 (not (= x1936 x648)) (<= x1550 1461501637330902918203684832716283019655932542975) (>= x371 0) (not (= x801 x353)) (<= x1167 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1865 x648)) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x17 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1659) (= x801 x1401) (>= x1659 0) (<= x629 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1936) (>= x1011 1) (not (= x648 x1011)) x1677 (not (= x1011 x1936)) (<= x290 1461501637330902918203684832716283019655932542975) (<= x1562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1865 x1936)) (<= x353 1461501637330902918203684832716283019655932542975) (not (= x353 x1011)) (= x636 0) (>= x1865 1) (= x1145 x1619) (>= x1507 0) (<= 0 x1167) (<= x801 1461501637330902918203684832716283019655932542975) (<= x648 1461501637330902918203684832716283019655932542975) (not (= x1011 x801)) (>= x477 0) (>= x1385 0) (not (= x1011 x1865)) (<= x477 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x663 (> (x1185 x1936) 0)) (not (= x1936 x801)) (= x1677 (> (x1185 x1011) 0)) (not (= x353 x648)) (<= 1 x648) (<= 1 x353) (not (= x1865 x801))) (and (= x1410 x844) (= (x1839 x690) x1151) (= (x1896 x690) x1121) (= (x1570 x873) x241) (= x1114 (x610 928)) (= (x610 864) x114) (>= x184 1) (= x1619 x1117) (<= x75 1099511627775) (= x1888 false) (>= 1099511627775 x1151) (= x1706 (x610 896)) (= x690 (+ 1 x907)) (>= 340282366920938463463374607431768211455 x42) (= (x610 960) x580) (= (x110 64 x1117 3) x907) (= (+ 1 x690) x389) (= x1410 (x610 768)) (= x702 x580) (= x599 x1291) (= x1052 (x275 x690)) (= (+ 1 x389) x343) (= x1577 (x610 704)) (= (x1143 x690) x75) (= x997 false) (= 0 x1000) (= x1164 (x461 x389)) (<= x73 127) (= x683 x1114) (= false x161) (>= 1099511627775 x1052) (= x184 (x1185 x801)) (= (ite (not (= (ite (not (= 0 x1121)) 1 0) 0)) 1 0) x397) (= x1706 x1103) (= x599 (x610 800)) (>= 127 x73) (= x1587 x270) (<= x1121 255) (= x1158 (not x1803)) (= x774 false) (= (+ 1 x343) x873) (= (= 0 x1291) x1803) (= (x1056 x343) x1026) (<= x1164 340282366920938463463374607431768211455) (= x1960 false) (= x1577 x694) (= x42 (x1183 x690)) (= false x1393) (= (x610 832) x1587) (= x114 x1201) (= x1941 911662625))) (and (=> (and (not x1158) (and (= x1535 true) (= x698 x1535) (= x1096 x1951))) x1081) (=> x1158 x6)))))
(assert (x439 x1601))
(assert (=> (>= 10000 x700) (= 0 (x1709 x700))))
(assert (x439 x1002))
(assert (x1856 x1338))
(assert (=> (>= 10000 x353) (= 0 (x1709 x353))))
(assert (x439 x1556))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639869))
(assert (= (x598 x856 x1441 x700 x1288) (x1709 (x598 x856 x1441 x700 x1288))))
(assert (not (x294 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944))))
(assert (x439 x567))
(assert (= 64 (x1340 (x110 64 x813 x395))))
(assert (x439 x1049))
(assert (x439 x1761))
(assert (x439 x563))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x825 0)))
(assert (= x958 (x1457 (x1904 x413 x1533 x300 x958 x1987 x57))))
(assert (x200 x1510))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x439 x1288))
(assert (x439 x245))
(assert (x439 x1940))
(assert (x439 x1356))
(assert (=> (<= x413 10000) (= (x1709 x413) 0)))
(assert (x439 x313))
(assert (= x720 (x149 (x1904 x1845 x137 x1648 x50 x720 x316))))
(assert (= (x1340 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)) x1881))
(assert (x439 x1546))
(assert (x439 x795))
(assert (< 10000 (x1904 x84 x431 x1614 x621 x496 x350)))
(assert (x439 x1544))
(assert (x439 x112))
(assert (x439 x936))
(assert (x439 x1050))
(assert (x439 x1830))
(assert (x439 x156))
(assert (= (and (not x1146) x655) x1928))
(assert (= x293 (=> (and (and (and (or (and (and (= x782 (+ 32 x1843)) (= x740 (* x742 32))) (not x1807)) x1807) (and (= x1348 x704) (= x36 (+ x972 32)) (= x465 3686331914) (= x1142 x1929) (= x1872 (x1185 x801)) (= x310 x1407) (<= x957 18446744073709551391) (= x559 x1385) (= x957 (x38 115792089237316195423570985008687907853269984665640564039457584007913129639904 x409)) (>= 18446744073709551615 x747) (= x1523 (x1294 x559)) (>= x957 1) (= (x1632 x1160) x742) (= x506 x183) (< x601 x1843) (= x1137 (* x742 32)) (= x942 (+ 32 x1843 x1137)) (<= x1144 127) (<= x742 18446744073709551615) (> x942 x1843) (not (> x601 x1843)) (= (+ x766 x565) x1333) (= (+ 63 x1645) x409) (= (+ x1160 32) x766) (= (+ x36 x747) x1532) (= x1613 (+ 31 x1160)) (= x1329 x723) (< x1613 x1106) (= x1792 (x69 x801)) (= x1051 (+ 160 x747)) (= (x1632 x972) x747) (not (> x1333 x1106)) (not (> x1532 x1106)) (= x972 (+ x956 4)) (= (+ x965 4) x1160) (= (* 32 x742) x565) (= (+ x601 96) x1843) (= x1597 x1371) (= (= 0 x742) x1807) (= (+ x957 128) x601) (= x1976 (+ x747 31)) (= x531 x9) (= x1645 (x38 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1976)) (>= x1872 1) (= false x618) (= (+ 31 x972) x1310) (= x685 false) (= x1792 x920) (= 128 x357) (> x1106 x1310) (<= x1144 127))) (= x1148 x629)) (and (= (x1189 228) x525) (= x1085 x1142) (= x1328 (ite x1146 x435 x829)) (= x956 (x1189 132)) (= x1889 (x1189 0)) x1328 (<= x1857 1461501637330902918203684832716283019655932542975) (= (x1189 260) x910) (>= 18446744073709551615 x965) (= x525 x183) (= x374 x965) (= x1304 x704) (= x933 (x1189 100)) (= false x622) (= x310 x933) (= x1889 x1776) (= x965 (x1189 164)) (= x1857 (x1189 36)) (= (x1189 68) x1304) (= x827 x956) (= x910 x531) (= x1857 x1597) (= x723 x1687) (>= 18446744073709551615 x956) (<= x1085 255) (= x1687 (x1189 4)) (= x1085 (x1189 196)) (<= x1304 1461501637330902918203684832716283019655932542975))) x329)))
(assert (x439 x1577))
(assert (= (x553 x1845 x1050 x1408 x104 x1198) (x1709 (x553 x1845 x1050 x1408 x104 x1198))))
(assert (=> (<= x125 10000) (= 0 (x1709 x125))))
(assert (=> (<= x204 10000) (= 0 (x1709 x204))))
(assert (= (x379 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)) x1797))
(assert (= (and (not x1255) x529) x29))
(assert (x439 x772))
(assert (not (x294 (x54 x1845 x204 x887 x1978 x1263 x1188 x606))))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639810) 0))
(assert (x439 x754))
(assert (x439 x1552))
(assert (= x574 (x1922 (x110 x84 x542 x574))))
(assert (not (x294 (x110 64 x813 x342))))
(assert (x439 x1753))
(assert (= x1614 (x1922 (x1904 x84 x431 x1614 x621 x496 x350))))
(assert (x439 x1338))
(assert (< (x110 64 x813 x342) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1340 (x110 64 953417218992365150631206543442508943947348309705 0)) 64))
(assert (=> (>= 10000 x1546) (= (x1709 x1546) 0)))
(assert (= x1753 (x379 (x756 x222 x1753))))
(assert (not (x294 (x553 x1845 x1050 x1408 x104 x1198))))
(assert (= (x1709 (+ x1715 1)) (x1709 x1715)))
(assert (not (x294 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x756 x413 x1979)))
(assert (x439 x1024))
(assert (=> (>= 10000 x1288) (= 0 (x1709 x1288))))
(assert (x439 x1151))
(assert (x294 4067465820))
(assert (= x142 (or x58 x332)))
(assert (x439 x489))
(assert (x439 x995))
(assert (= (x1709 x907) (x1709 (+ 1 x907))))
(assert (=> (<= x463 10000) (= 0 (x1709 x463))))
(assert (x439 x616))
(assert (x439 x1685))
(assert (not (x294 (x110 x995 x802 x79))))
(assert (x439 x438))
(assert (= (x110 64 x180 4) (x1709 (x110 64 x180 4))))
(assert (= x1314 (x379 (x54 x670 x1314 x301 x253 x852 x1244 x242))))
(assert (= 0 (x1709 18446744073709551391)))
(assert (=> (>= 10000 x1370) (= 0 (x1709 x1370))))
(assert (> (x54 x670 x1314 x301 x253 x852 x1244 x242) 10000))
(assert (x439 x64))
(assert (= 64 (x1340 (x110 64 81 x1089))))
(assert (x439 x1636))
(assert (x439 x1488))
(assert (= 0 (x1709 24068214603859720034826088920346711864364023158142564334732402816841156945010)))
(assert (x439 x1410))
(assert (x439 x1170))
(assert (= x524 (x532 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (= x817 (=> (and (and (= 36 x678) (= x1217 (ite (not (= 0 x933)) 1 0)) (= x1631 x61) (= x1669 false) (= false x206) (= x718 x1631) (= x1562 x718)) (and (<= x1824 1099511627775) (= (x275 x1009) x1824) (= 0 x1083) (>= 127 x841) (= x925 false) (= x940 (x231 896)) (= x3 x1663) (<= x564 1099511627775) (= false x870) (= x911 false) (= x940 x790) (= x1415 (+ 1 x1009)) (= (+ x1415 1) x976) (= x1162 x1732) (<= 1 x1827) (= (x1185 x801) x1827) (= x1545 false) (= (x1839 x1009) x564) (= x1093 (+ 1 x976)) (= x1695 (x231 928)) (= x846 x1498) (= x1498 (x231 960)) (= x919 (= 0 x1912)) (= (x1896 x1009) x228) (= x969 (ite (not (= (ite (not (= x228 0)) 1 0) 0)) 1 0)) (= (x231 704) x815) (= (x231 800) x1119) (= x1882 x737) (<= x509 340282366920938463463374607431768211455) (= x815 x579) (= x1060 911662625) (= x754 (x1570 x1093)) (<= x841 127) (= false x1897) (= (x231 832) x1663) (= (x231 768) x737) (= x1695 x21) (= (x1143 x1009) x226) (= x1504 false) (= x1715 (x110 64 x22 3)) (= x22 x61) (= x1047 (not x919)) (= (x1483 x1009) x454) (<= x454 340282366920938463463374607431768211455) (= (+ 1 x1715) x1009) (= (x1825 x1415) x509) (= x1912 x1119) (<= x228 255) (<= x226 1099511627775) (= x1162 (x231 864)) (= x657 (x1056 x976)))) (and (=> x1047 x689) (=> (and (not x1047) (and (= x1781 true) (= x1204 x1781) (= x1454 x1236))) x1969)))))
(assert (=> (<= x424 10000) (= 0 (x1709 x424))))
(assert (= (x1457 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)) x1786))
(assert (x439 x416))
(assert (x439 x1491))
(assert (=> (>= 10000 x720) (= (x1709 x720) 0)))
(assert (= x1736 (and x1423 (not x992))))
(assert (= (and x572 x608) x1285))
(assert (=> (<= x60 10000) (= (x1709 x60) 0)))
(assert (x439 x225))
(assert (= (x1457 (x553 x1845 x1050 x1408 x104 x1198)) x104))
(assert (x439 x501))
(assert (= x1039 (and x617 x1791)))
(assert (x439 x635))
(assert (x439 x295))
(assert (= x1892 (x1922 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (x439 x857))
(assert (= (x1340 (x1904 x995 x1022 x285 x344 x1802 x489)) x995))
(assert (x439 x669))
(assert (=> (>= 10000 x988) (= (x1709 x988) 0)))
(assert (= x1245 (x379 (x598 x1845 x1245 x1905 x279))))
(assert (> (x756 x222 x1753) 10000))
(assert (= x449 (x1922 (x110 x1881 x568 x449))))
(assert (> (x553 x995 x707 x420 x758 x517) 10000))
(assert (x439 x1188))
(assert (= (x1340 (x110 64 443215666480553238610125355434898879895743000821 0)) 64))
(assert (x439 x376))
(assert (< (x598 x222 x906 x1301 x1773) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1340 (x110 64 443215666480553238610125355434898879895743000821 1)) 64))
(assert (= (x532 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)) x771))
(assert (x439 x466))
(assert (= (x379 (x756 x995 x360)) x360))
(assert (= x459 (or x1634 x872)))
(assert (x439 x518))
(assert (not (x294 (x110 64 x936 x649))))
(assert (=> (<= x1754 10000) (= (x1709 x1754) 0)))
(assert (x439 x972))
(assert (x439 x940))
(assert (= x1315 (x532 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (not (x294 (x110 64 443215666480553238610125355434898879895743000821 0))))
(assert (x439 x1840))
(assert (=> (<= x74 10000) (= 0 (x1709 x74))))
(assert (< 10000 (x598 x995 x494 x677 x964)))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639844))
(assert (x439 x310))
(assert (not (x294 (x553 x995 x707 x420 x758 x517))))
(assert (x439 x839))
(assert (x439 x1637))
(assert (x439 x309))
(assert (= x906 (x379 (x598 x222 x906 x1301 x1773))))
(assert (> (x1904 x1881 x1477 x418 x808 x712 x476) 10000))
(assert (=> (<= x1797 10000) (= (x1709 x1797) 0)))
(assert (= (x1340 (x110 x1845 x1230 x900)) x1845))
(assert (x439 x56))
(assert (x439 x171))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639742)))
(assert (=> (<= x769 10000) (= 0 (x1709 x769))))
(assert (= x806 (and x1227 x1470)))
(assert (x439 x297))
(assert (x439 x1886))
(assert (x439 x251))
(assert (=> (>= 10000 x934) (= (x1709 x934) 0)))
(assert (= (x1709 24522070412059196110286586012810966081169649004736715519769772467740269871104) 0))
(assert (x439 x1244))
(assert (x439 x1011))
(assert (= (x1709 (x756 x1845 x1072)) (x756 x1845 x1072)))
(assert (= (x1709 (x110 x856 x1754 x1489)) (x110 x856 x1754 x1489)))
(assert (< (x110 64 x813 x1512) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x899))
(assert (=> (>= 10000 x906) (= 0 (x1709 x906))))
(assert (x439 x26))
(assert (= x1380 (and x1163 x1915)))
(assert (= (=> (and (= x1791 (< 0 (ite (= x53 0) x53 1))) (or (and x1791 (= x1567 1)) (and (= 0 x1567) (not x1791)))) x412) x315))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1904 x222 x1569 x644 x1808 x1379 x652)))
(assert (x439 x443))
(assert (< 10000 (x110 x856 x1754 x1489)))
(assert (= (x1904 x1845 x137 x1648 x50 x720 x316) (x1709 (x1904 x1845 x137 x1648 x50 x720 x316))))
(assert (= (x149 (x1904 x413 x1533 x300 x958 x1987 x57)) x1987))
(assert (x439 x519))
(assert (=> (<= x420 10000) (= 0 (x1709 x420))))
(assert (= (x1457 (x553 x84 x578 x1458 x1751 x1980)) x1751))
(assert (=> (>= 10000 x1244) (= 0 (x1709 x1244))))
(assert (x439 x1642))
(assert (x439 x267))
(assert (< (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x808 10000) (= 0 (x1709 x808))))
(assert (x439 x25))
(assert (x439 x194))
(assert (= (x110 64 81 x1089) (x1709 (x110 64 81 x1089))))
(assert (= (and (not x441) x1721) x625))
(assert (= (x379 (x1904 x1845 x137 x1648 x50 x720 x316)) x137))
(assert (=> (<= x361 10000) (= 0 (x1709 x361))))
(assert (= (x1709 (x1904 x222 x1569 x644 x1808 x1379 x652)) (x1904 x222 x1569 x644 x1808 x1379 x652)))
(assert (= (x532 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)) x924))
(assert (= (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249) (x1709 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249))))
(assert (x439 x1198))
(assert (x294 22264039863272420937079131806861516217942124584529674491290359742488301797376))
(assert (x439 x1873))
(assert (=> (>= 10000 x801) (= 0 (x1709 x801))))
(assert (= x253 (x1457 (x54 x670 x1314 x301 x253 x852 x1244 x242))))
(assert (x439 x1815))
(assert (= 64 (x1340 (x110 64 x936 x1672))))
(assert (x439 x743))
(assert (x439 x934))
(assert (x439 x1687))
(assert (x439 x830))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639679)))
(assert (x439 x1762))
(assert (= 0 (x1709 953417218992365150631206543442508943947348309705)))
(assert (= (x1340 (x110 64 x813 x342)) 64))
(assert (x439 x509))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639714) 0))
(assert (x439 x821))
(assert (x439 x854))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639805) 0))
(assert (x439 x1941))
(assert (= (x110 64 x936 x649) (x1709 (x110 64 x936 x649))))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (x439 x1044))
(assert (= x1269 (x1457 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (> (x110 64 81 x902) 10000))
(assert (> (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52) 10000))
(assert (x439 x73))
(assert (> (x110 64 x1857 x1111) 10000))
(assert (not (x294 (x553 x856 x1377 x214 x563 x934))))
(assert (x294 4294967295))
(assert (x439 x1306))
(assert (= (=> (and (and (= x1783 (x110 64 x1886 3)) (= x1187 (x1143 x1526)) (= (x1180 768) x1911) (= x1010 (x1183 x1526)) (= false x1657) (= x826 (x1180 704)) (= x960 (x1056 x1256)) (= (ite (not (= 0 (ite (not (= 0 x1685)) 1 0))) 1 0) x5) (= false x1397) (= x1297 (x461 x823)) (= x1394 x1234) (= (x1180 800) x111) (= x1728 (x1185 x801)) (= x195 x129) (= (= 0 x812) x1581) (= x823 (+ 1 x1526)) (= x1191 x1603) (= x398 x292) (= (x1839 x1526) x1690) (= x658 (x1570 x1884)) (= x812 x111) (= (+ 1 x823) x1256) (= x474 false) (<= x1297 340282366920938463463374607431768211455) (= x557 x826) (= (x1180 896) x1242) (= x178 false) (= x1704 0) (= (x1180 864) x1394) (= x1362 false) (= (x1180 928) x129) (= x1884 (+ x1256 1)) (>= 1099511627775 x1690) (= (x1180 832) x292) (= 911662625 x1421) (>= 255 x1685) (= x1911 x1862) (= x1526 (+ x1783 1)) (= x867 x1886) (<= x816 1099511627775) (= x1822 x1242) (= (x1180 960) x1603) (= (x275 x1526) x816) (<= x1010 340282366920938463463374607431768211455) (>= 127 x1701) (= (not x1581) x1146) (= (x1896 x1526) x1685) (>= 127 x1701) (>= x1728 1) (= x1057 false) (<= x1187 1099511627775)) (and (= x1562 x1337) (= x1337 x1723) (= x1200 36) (= x1501 (ite x1158 x1096 x698)) (= x1723 x867) x1501)) (and (=> (and (not x1146) (and (= x435 x874) (= x1899 x65) (= x1036 x1579) (= x77 x1015) (= x72 true) (= x72 x829) (= x1844 x503) (= x1352 x1054))) x293) (=> x1146 x179))) x1081))
(assert (x294 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x439 x1253))
(assert (x439 x35))
(assert (x439 x420))
(assert (= x204 (x379 (x54 x1845 x204 x887 x1978 x1263 x1188 x606))))
(assert (= x1379 (x149 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (not (x294 (x598 x84 x1573 x894 x541))))
(assert (=> (<= x1753 10000) (= (x1709 x1753) 0)))
(assert (= (x379 (x110 64 x813 x342)) x813))
(assert (= x1670 (and x459 (not x126))))
(assert (x963 x1148))
(assert (x439 x1387))
(assert (< 10000 (x110 64 x180 4)))
(assert (x439 x1379))
(assert (x439 x139))
(assert (= (x1340 (x54 x84 x576 x926 x1269 x364 x227 x1209)) x84))
(assert (x439 x648))
(assert (x294 911662625))
(assert (x439 x1679))
(assert (= x1845 (x1340 (x54 x1845 x204 x887 x1978 x1263 x1188 x606))))
(assert (< (x756 x222 x1753) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x866 10000) (= (x1709 x866) 0)))
(assert (= 3 (x1922 (x110 64 x1886 3))))
(assert (= x802 (x379 (x110 x995 x802 x79))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x670 x144 x727)))
(assert (x439 x1573))
(assert (x294 443215666480553238610125355434898879895743000821))
(assert (= (x1709 x469) (x1709 (+ 1 x469))))
(assert (x439 x188))
(assert (x439 x1744))
(assert (x439 x1238))
(assert (not (x294 (x110 x84 x542 x574))))
(assert (x439 x1772))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1904 x1881 x1477 x418 x808 x712 x476)))
(assert (x439 x1905))
(assert (x439 x1392))
(assert (= 0 (x1709 19198514131333069964808701557143768876432618777570657477111002777175690575872)))
(assert (=> (>= 10000 x1773) (= 0 (x1709 x1773))))
(assert (x439 x448))
(assert (x439 x1663))
(assert (=> (>= 10000 x20) (= 0 (x1709 x20))))
(assert (= (and x1725 x1917) x1425))
(assert (x439 x1001))
(assert (x439 x1500))
(assert (=> (>= 10000 x1751) (= 0 (x1709 x1751))))
(assert (= (x1922 (x110 x995 x802 x79)) x79))
(assert (=> (<= x1639 10000) (= 0 (x1709 x1639))))
(assert (x439 x1122))
(assert (x439 x1733))
(assert (=> (>= 10000 x1072) (= 0 (x1709 x1072))))
(assert (= (and x949 x927) x1721))
(assert (=> (<= x1892 10000) (= (x1709 x1892) 0)))
(assert (=> (>= 10000 x489) (= (x1709 x489) 0)))
(assert (x439 x1899))
(assert (< (x110 64 x1886 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (x1131 (+ 96 x1953)) x1933) (not (= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x1820 (x1131 (+ 32 x1680))) (= x1194 (x1908 x1953)) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1059 (x1131 (+ 32 x1387))) (= x1112 (x1131 (+ x1933 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1953)) (= (x1131 (+ x1112 32)) x1387) (= x1383 (< 0 x1194)) (= x348 (x1131 (+ x1524 32))) (= x1680 (x1131 (+ x1953 32))) (not (= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x1524 (x1131 (+ x1059 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1953) (<= x1953 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x43 (x1131 (+ 139 x1112))) (> x1933 x1953)) (and (=> (not x1383) x45) (=> (and (and (= x1578 (x1908 x1680)) (= x1725 (< 32 x1194))) x1383) (and (=> (and x1725 (and (= (x346 x1076) x1104) (= (x1131 (+ 32 x43)) x681) (= x165 (> x1194 64)) (= x1076 (x1131 (+ 32 x1680))))) (and (=> (not x165) x45) (=> (and (and (= (x1134 x1543) x1280) (= (x1131 (+ 64 x1680)) x1543) (= (> x1194 96) x1182) (= x547 (x1131 (+ x43 64)))) x165) (and (=> (not x1182) x45) (=> x1182 x1650))))) (=> (not x1725) x45))))) x785))
(assert (x294 18446744073709551615))
(assert (x439 x941))
(assert (x439 x1977))
(assert (x439 x144))
(assert (x439 x1171))
(assert (x439 x1824))
(assert (= (x1774 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)) x249))
(assert (x439 x570))
(assert (x439 x185))
(assert (x439 x1429))
(assert (= (x379 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x106))
(assert (= x35 (x379 (x553 x1881 x35 x243 x177 x1846))))
(assert (= (x1709 (x110 x995 x802 x79)) (x110 x995 x802 x79)))
(assert (x294 52672081143094129087634851003622940732604441515226977473621344926390909140992))
(assert (x439 x876))
(assert (x439 x900))
(assert (x439 x1427))
(assert (= x626 (x602 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (x439 x956))
(assert (= x1573 (x379 (x598 x84 x1573 x894 x541))))
(assert (x439 x918))
(assert (= x1349 (and x1595 x1699)))
(assert (x439 x462))
(assert (= x144 (x379 (x110 x670 x144 x727))))
(assert (not (x294 (x553 x670 x308 x1637 x1849 x573))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x1687 3)))
(assert (x439 x723))
(assert (x439 x369))
(assert (x439 x335))
(assert (> (x598 x222 x906 x1301 x1773) 10000))
(assert (x439 x827))
(assert (= (x1340 (x553 x670 x308 x1637 x1849 x573)) x670))
(assert (not (x294 (x110 x222 x1853 x939))))
(assert (< (x553 x1881 x35 x243 x177 x1846) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1979 (x379 (x756 x413 x1979))))
(assert (x439 x1055))
(assert (x294 25877242110744216891076975195880784582809329153640315260649044424131709239296))
(assert (x439 x41))
(assert (= (x1457 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20)) x1002))
(assert (= x1576 (x1922 (x110 x413 x225 x1576))))
(assert (x439 x146))
(assert (=> (>= 10000 x809) (= 0 (x1709 x809))))
(assert (x439 x1950))
(assert (> (x553 x856 x1377 x214 x563 x934) 10000))
(assert (< 10000 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)))
(assert (=> (<= x524 10000) (= (x1709 x524) 0)))
(assert (= x413 (x1340 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (=> (>= 10000 x227) (= (x1709 x227) 0)))
(assert (x439 x777))
(assert (= (x379 (x598 x856 x1441 x700 x1288)) x1441))
(assert (x439 x1023))
(assert (x439 x132))
(assert (< (x553 x670 x308 x1637 x1849 x573) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x54 x856 x567 x809 x752 x1703 x1539 x1429)))
(assert (= (x110 64 x936 x968) (x1709 (x110 64 x936 x968))))
(assert (= x684 (and x584 x1442)))
(assert (x439 x203))
(assert (x439 x286))
(assert (x439 x1738))
(assert (= x74 (x149 (x553 x222 x1322 x711 x1154 x74))))
(assert (= x102 (and (not x1158) x1218)))
(assert (x439 x1927))
(assert (x439 x788))
(assert (x439 x1639))
(assert (=> (>= 10000 x563) (= 0 (x1709 x563))))
(assert (x439 x1506))
(assert (x294 340282366920938463463374607431768211455))
(assert (x439 x24))
(assert (> (x1904 x995 x1022 x285 x344 x1802 x489) 10000))
(assert (= x1404 (x1457 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (x439 x1975))
(assert (not (x294 (x110 64 x180 4))))
(assert (x439 x581))
(assert (x439 x1194))
(assert (x439 x822))
(assert (x439 x578))
(assert (< 10000 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20)))
(assert (=> (>= 10000 x350) (= 0 (x1709 x350))))
(assert (x439 x426))
(assert (x439 x1040))
(assert (x439 x1585))
(assert (x439 x1150))
(assert (= (or x1323 x1349) x617))
(assert (=> (>= 10000 x1979) (= 0 (x1709 x1979))))
(assert (x439 x550))
(assert (=> (>= 10000 x285) (= (x1709 x285) 0)))
(assert (x439 x449))
(assert (x439 x1030))
(assert (x439 x172))
(assert (x439 x341))
(assert (= x45 (=> (and (= (x1444 x1933) x1881) (= (x845 (- x385 x1933)) x136) (= (x1131 (+ x1933 32)) x236) (> x385 x1933) (<= x1933 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x385 (x1131 (+ x43 x1194))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1933) (= (x845 (- x136 32)) x620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1933) (= x807 (>= 224 x1881)) (>= x385 1)) (and (=> (and (= x1948 (x1444 x236)) (= x1468 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)) (= (x756 x1881 x1948) x202) (= (x1131 (+ x236 64)) x188) (= (x1444 x1593) x449) (= x641 (x1131 (+ x236 32))) (= x1477 (x1444 x236)) (= (ite (= x1881 0) x1591 (ite (<= x1881 32) x202 (ite (>= 64 x1881) x356 (ite (<= x1881 96) x153 (ite (<= x1881 128) x1885 (ite (>= 160 x1881) x1985 (ite (<= x1881 192) x1468 (ite (<= x1881 224) x1435 x1546)))))))) x905) (= (x1444 x236) x568) (= (x1444 x570) x966) (= x1101 (x1131 (+ x236 64))) (= (+ 32 x1843) x1684) (= (x1444 x511) x476) (= x432 (x1444 x236)) (= (x1131 (+ 192 x236)) x203) (= (x1131 (+ x236 64)) x879) (= (x1444 x641) x418) (= x715 (x1131 (+ 128 x236))) (= (x1131 (+ x236 160)) x445) (= x243 (x1444 x26)) (= x1733 (x1131 (+ x236 96))) (= x792 (x1444 x236)) (= (x1444 x203) x1944) (= (x1444 x311) x1859) (= (x1444 x1837) x25) (= x153 (x598 x1881 x432 x966 x424)) (= (x1444 x1733) x1846) (= (x1444 x1950) x771) (= x1591 (x825 0)) (= x1593 (x1131 (+ x236 32))) (= (x1444 x247) x1556) (= (x1131 (+ x236 96)) x247) (= (x1444 x1171) x177) (= (x553 x1881 x35 x243 x177 x1846) x1885) (= x1959 (x1444 x1503)) (= x1278 (x1444 x1843)) (= x35 (x1444 x236)) (= x1985 (x1904 x1881 x1477 x418 x808 x712 x476)) (= x1435 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) (= (x1444 x488) x1748) (= (x1131 (+ 32 x236)) x570) (= (x1444 x236) x366) (= (x1444 x1101) x808) (= x511 (x1131 (+ x236 128))) (= x26 (x1131 (+ x236 32))) (= (x1444 x232) x1044) (= (x1131 (+ 96 x236)) x232) (= x1503 (x1131 (+ x236 32))) (= x712 (x1444 x1594)) (= (x1131 (+ x236 160)) x1950) (= x1171 (x1131 (+ x236 64))) (= x1789 (< 0 x1278)) (= x424 (x1444 x879)) (= x488 (x1131 (+ 64 x236))) (= (x1444 x445) x1866) (= (x1131 (+ 128 x236)) x311) (= x1279 (x1131 (+ 32 x385))) (= (x1444 x715) x642) (= (x1444 x188) x125) (= x1837 (x1131 (+ x236 32))) (= (x110 x1881 x568 x449) x356) (= (x1131 (+ 96 x236)) x1594)) (and (=> (and x1789 (and (= (< 1 x1278) x584) (= x973 (x1131 (+ x1279 32))) (= x1152 (x1444 x1684)) (= (+ x1684 32) x1395))) (and (=> (and (and (= 1 x170) (= x701 x973) (= x1220 x1395)) (not x584)) x1740) (=> (and (and (= x41 (x1131 (+ x973 32))) (= x437 (+ x1395 32)) (= (x1073 x1395) x251) (= (< 2 x1278) x1984)) x584) (and (=> (and (not x1984) (and (= x1220 x437) (= 2 x170) (= x701 x41))) x1740) (=> (and x1984 (and (= x143 (x1084 x437)) (= x1975 (+ x437 32)) (= x1852 (< 3 x1278)) (= x1974 (x1131 (+ 32 x41))))) (and (=> (and (not x1852) (and (= x1974 x701) (= x1975 x1220) (= x170 3))) x1740) (=> x1852 x233))))))) (=> (and (not x1789) (and (= x1220 x1684) (= 0 x170) (= x1279 x701))) x1740))) x807))))
(assert (= x514 (and x1100 x1949)))
(assert (= x624 (x1922 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x439 x913))
(assert (x200 x1976))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x413 x225 x1576)))
(assert (x439 x348))
(assert (= (x1457 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x125))
(assert (= (x110 64 x813 x632) (x1709 (x110 64 x813 x632))))
(assert (x439 x958))
(assert (x439 x1683))
(assert (= x234 (x1457 (x598 x670 x1729 x1392 x234))))
(assert (x439 x303))
(assert (= (x149 (x54 x84 x576 x926 x1269 x364 x227 x1209)) x364))
(assert (> (x110 64 81 x1089) 10000))
(assert (= (x379 (x110 64 x936 x1672)) x936))
(assert (= (and x1592 (not x259)) x1165))
(assert (x439 x1395))
(assert (x439 x836))
(assert (not (x294 (x54 x1881 x366 x25 x1748 x1556 x1859 x771))))
(assert (x439 x437))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x813 x632)))
(assert (= (x1709 85421856841599162343179548931066850070836787616102889281506983661126589349888) 0))
(assert (x439 x1394))
(assert (x439 x1934))
(assert (< (x756 x670 x1439) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1403))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x995 x494 x677 x964)))
(assert (x439 x1549))
(assert (= (x1922 (x598 x413 x430 x866 x666)) x866))
(assert (= (=> (and (and (= x499 false) (= x1772 x1115) (= x869 false) (= x105 false) (<= x1343 127) (= 68 x1756) (<= x1343 127) (= x1772 x1626) (= x932 (x1206 256)) (= x1356 1551562514) (= x240 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= (x1185 x801) x1708) (= (x1206 288) x936) (= x1605 false) (= 729466174051048026939049150500379070045048658665 x1835) (= x1354 (+ 1 x1600)) (= x245 x1115) (<= x987 16777215) (>= 127 x362) (= false x68) (= x876 128) (= x1102 729466174051048026939049150500379070045048658665) (= x1906 x932) (= x422 false) (>= 127 x100) (= false x749) (= 36 x313) (<= 1 x1708) (= x729 (x110 64 x936 x246)) (= x382 (x1177 x729)) (= false x546) (= x1210 (= x1345 0)) (>= 127 x1175) (= x219 (x1515 x1354)) (= x64 (x1185 x1011)) (= (x1185 x1936) x862) (= x1092 3188545240) (= 36 x519) (= x67 128) (= false x365) (= x1345 (x1205 128)) (= x1683 x1626) (= (x110 64 x180 4) x1600) (= x263 (x1185 x1011)) (<= x1175 127) (= 4067465820 x513) (= x1476 false) (= x492 false) (<= 1 x263) (<= x100 127) (= x1530 2175550133) (= false x256) (= x987 (x333 x1600)) (>= x64 1) (= x936 x1683) (<= 1 x1710) (>= x862 1) (= 85963009616197036880240088340724629170983710335684291091497906406952890531840 x1588) (= false x650) (= (x110 64 729466174051048026939049150500379070045048658665 0) x246) (= x824 x180) (= false x1107) (= (x1185 x1011) x1710) (>= 127 x362)) (and (= x824 x94) (= x305 36) (= x1195 x94) (= x1195 x1562))) (and (=> (and (not x1210) (and (= x530 false) (= x1017 443215666480553238610125355434898879895743000821) (= (x1177 x128) x1378) (= x1065 (x1604 224)) (= x1141 (= x1065 0)) (= x1115 x468) (= x205 false) (= x615 2175550133) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x1021) (= x1372 false) (= x220 224) (= x1118 68) (= x649 (x110 64 443215666480553238610125355434898879895743000821 0)) (= x1665 443215666480553238610125355434898879895743000821) (= x128 (x110 64 x936 x649)) (>= x510 1) (= x510 (x1185 x1936)) (>= 127 x1030) (>= 127 x1030) (= x1641 false))) (and (=> (and (and (= x1115 x1734) (= (= x428 0) x1252) (= x1806 (x110 64 x936 x1672)) (= (x339 320) x428) (= false x1611) (= x1120 953417218992365150631206543442508943947348309705) (= x1433 false) (= false x1513) (>= 127 x296) (= 320 x98) (= x1642 (x1177 x1806)) (>= 127 x296) (= x186 false) (= (x1185 x1936) x304) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x1437) (<= 1 x304) (= x1132 2175550133) (= 953417218992365150631206543442508943947348309705 x875) (= (x110 64 953417218992365150631206543442508943947348309705 0) x1672) (= x323 68)) (not x1141)) (and (=> (and (not x1252) (and (= false x1838) (= 3168472768 x31) (= x1981 100) (<= x1582 127) (= (x110 64 x936 x968) x902) (>= x23 1) (= (x1339 416) x671) (= x968 (x110 64 443215666480553238610125355434898879895743000821 1)) (= x1358 85421856841599162343179548931066850070836787616102889281506983661126589349888) (= x1153 (x1184 x425)) (= 81 x1766) (= (x1185 x1936) x23) (= 443215666480553238610125355434898879895743000821 x633) (= (x110 64 81 x902) x425) (= 443215666480553238610125355434898879895743000821 x1406) (= x101 x1115) (= false x1858) (= 416 x1702) (= x1487 false) (<= x1582 127) (= x1925 (< 0 x671)) (= false x168))) (and (=> (and x1925 (= x746 1)) x986) (=> (not x1925) x686))) (=> x1252 x686))) (=> x1141 x686))) (=> x1210 x686))) x689))
(assert (x439 x1329))
(assert (x439 x311))
(assert (x439 x624))
(assert (=> (>= 10000 x57) (= (x1709 x57) 0)))
(assert (= (x1340 (x553 x222 x1322 x711 x1154 x74)) x222))
(assert (x439 x524))
(assert (x336 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x439 x1735))
(assert (x439 x23))
(assert (= (x1709 x469) (x1709 (+ x469 5))))
(assert (x439 x764))
(assert (=> (>= 10000 x606) (= 0 (x1709 x606))))
(assert (x439 x1883))
(assert (= (x1340 (x756 x856 x151)) x856))
(assert (= x1924 (x1457 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486))))
(assert (= (x602 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x642))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639806)))
(assert (x336 x1148))
(assert (x439 x27))
(assert (=> (<= x887 10000) (= (x1709 x887) 0)))
(assert (x439 x670))
(assert (= (x1709 (x110 64 x936 x246)) (x110 64 x936 x246)))
(assert (=> (<= x199 10000) (= (x1709 x199) 0)))
(assert (x439 x1968))
(assert (= (x1709 57896044618658097711785492504343953926634992332820282019728792003956564819999) 0))
(assert (= x909 (x149 (x54 x995 x769 x447 x1274 x909 x628 x480))))
(assert (=> (>= 10000 x648) (= (x1709 x648) 0)))
(assert (x439 x1274))
(assert (x439 x388))
(assert (= x227 (x602 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (x439 x1665))
(assert (x439 x424))
(assert (x439 x759))
(assert (=> (<= x1689 10000) (= (x1709 x1689) 0)))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639711)))
(assert (x439 x1557))
(assert (=> (>= 10000 x222) (= 0 (x1709 x222))))
(assert (x439 x1530))
(assert (x439 x996))
(assert (= (x1709 (x110 64 x813 x395)) (x110 64 x813 x395)))
(assert (x439 x565))
(assert (= x939 (x1922 (x110 x222 x1853 x939))))
(assert (= x58 (and x514 (not x148))))
(assert (x439 x214))
(assert (x439 x1043))
(assert (= x222 (x1340 (x598 x222 x906 x1301 x1773))))
(assert (x439 x1857))
(assert (x439 x1458))
(assert (x439 x1511))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639711))
(assert (= x1209 (x532 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (x439 x1130))
(assert (x439 x1402))
(assert (x439 x387))
(assert (x439 x22))
(assert (= x1638 (x149 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (x439 x886))
(assert (x439 x1626))
(assert (x439 x1755))
(assert (< (x756 x1881 x1948) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x553 x856 x1377 x214 x563 x934) (x1709 (x553 x856 x1377 x214 x563 x934))))
(assert (< 10000 (x110 64 x813 x1512)))
(assert (=> (<= x1947 10000) (= (x1709 x1947) 0)))
(assert (x439 x1954))
(assert (x439 x1656))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639747) 0))
(assert (=> (>= 10000 x735) (= 0 (x1709 x735))))
(assert (x439 x43))
(assert (= x1299 (and x260 x1807)))
(assert (=> (>= 10000 x1808) (= 0 (x1709 x1808))))
(assert (x439 x969))
(assert (x439 x1892))
(assert (=> (<= x234 10000) (= 0 (x1709 x234))))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1821) (= 1 x1926) (<= x423 1099511627775) (= (x38 1099511627775 x1148) x1053) (= (x1131 (+ x118 64)) x672) (= x1418 (x1813 x118)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x95) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639747 x95) (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639805)) (and (>= x95 115792089237316195423570985008687907853269984665640564039457584007913129639810) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x95)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x95) (and (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639742) (>= x95 115792089237316195423570985008687907853269984665640564039457584007913129639684))) (= (x110 64 x1857 x1111) x1658) (= x1926 (ite (= x265 x1304) (ite (not (= x1304 0)) 1 0) (ite (= x1304 x265) 1 0))) (> x95 x1821) (not (= x1821 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (+ x469 5) x1111) (= x28 (ite (not (= x1418 0)) 1 0)) (>= x748 1) (or (>= x118 115792089237316195423570985008687907853269984665640564039457584007913129639873) (>= 18446744073709551487 x118)) (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639931) (> x86 x182) (<= x1914 16777215) (<= x1821 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x86 (x1131 (+ x182 64))) (= (x38 1461501637330902918203684832716283019655932542975 x1338) x265) (or (and (>= x95 115792089237316195423570985008687907853269984665640564039457584007913129639747) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x95)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x95) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x95) (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639868)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639684 x95) (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639742)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x95)) (= x1161 (x1131 (+ x95 64))) (= x1338 (x1813 x1024)) (= (x275 x442) x47) (= (> x742 0) x1831) (> x182 x1584) (= (x1131 (+ 64 x1821)) x95) (= (x1131 (+ x118 32)) x1024) (not (= x1821 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x95) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639679 x95) (and (>= x95 115792089237316195423570985008687907853269984665640564039457584007913129639684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639742 x95)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639805 x95) (>= x95 115792089237316195423570985008687907853269984665640564039457584007913129639747)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x95) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639868 x95))) (= x1749 (x1131 (+ x95 32))) (= 0 x276) (= x1914 (x333 x680)) (= (x355 x1658) x276) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1821) (not (< x47 x1053)) (= x423 (x275 x442)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639931 x95) (= x1584 (x1131 (+ 64 x1161))) (> x1584 x1161) (= (x1515 x1643) x341) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1821)) (= x877 1) (or (<= x118 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x118)) (<= x95 115792089237316195423570985008687907853269984665640564039457584007913129639931) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x118) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x118)) (> x1821 x672) (<= x118 115792089237316195423570985008687907853269984665640564039457584007913129639870) (not (> x672 x1821)) (= (+ x680 1) x1643) (>= 1099511627775 x47) (= (+ 64 x672) x1821) (> x1161 x95) (>= 1 x1418) (= x1418 x28) (= (+ x469 1) x442) (>= 18446744073709551550 x118) (= x182 (x1131 (+ x1584 64))) (= (x110 64 x1687 3) x469) (= (x110 64 x1687 4) x680) (= x1361 (x1131 (+ 32 x1821))) (< x118 x672) (= x1873 (x1131 (+ 32 x1161))) (>= x423 1) (<= x118 18446744073709551550)) (and (=> (and (and (<= 1 x742) (= x1949 (< 1 x742)) (>= 18446744073709551615 x742)) x1831) (and (=> (and (and (and (>= x742 2) (= x493 (x1131 (+ x912 x766))) (= (+ 32 x766) x1525) (<= x849 340282366920938463463374607431768211455) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1270) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x1270)) (= (x1131 (+ 32 x493)) x1864) (= x849 (x1632 x1667)) (= x1023 (x845 (- x1730 95))) (>= 340282366920938463463374607431768211455 x978) (= x912 (x1632 x766)) (= x978 (x1632 x1864)) (= x1580 (x1131 (+ x766 x1270))) (>= 18446744073709551615 x742) (= (x845 (- x1106 x766)) x1730) (= (x1632 x1525) x1270) (or (and (<= x1023 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x912)) (and (= (<= x912 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1023)) (< x912 x1023))) (= (x1131 (+ 32 x1580)) x1667) (= x1735 (ite x148 1 0)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x912) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x912)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1270) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1023)) (and (> x1023 x1270) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1023) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1270)))) (= x148 (not (= x978 x849)))) (or (and (not x148) (and (= (x1131 (+ x766 x885)) x1891) (= (x1632 x725) x993) (= x1739 (x1632 x766)) (<= x993 1461501637330902918203684832716283019655932542975) (not (= x993 x1640)) (= (x1632 x1891) x1640) (= (x1632 x1525) x885) (>= 1461501637330902918203684832716283019655932542975 x1640) (or (<= x885 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x885 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (or (and (<= x1023 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x885)) (and (> x1023 x885) (= (<= x1023 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x885 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (or (and (= (<= x1739 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1023)) (> x1023 x1739)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1023) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1739))) (or (>= x1739 57896044618658097711785492504343953926634992332820282019728792003956564819968) (<= x1739 57896044618658097711785492504343953926634992332820282019728792003956564819835)) (= (x1131 (+ x1739 x766)) x725))) (and x148 (= x1735 1)))) x1949) x1324) (=> (and (= x1450 x86) (not x1949)) x1041))) (=> (and (not x1831) (and (= x86 x1045) (= x1761 0))) x776))) x1239))
(assert (x439 x1486))
(assert (= (x1709 (+ x871 1)) (x1709 x871)))
(assert (= x107 (and x1984 x684)))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x439 x1333))
(assert (=> (<= x752 10000) (= 0 (x1709 x752))))
(assert (x294 37749366859872002549862985897619888669665948435824635674531347399775013991474))
(assert (not (x294 (x1904 x995 x1022 x285 x344 x1802 x489))))
(assert (> (x110 64 x1886 3) 10000))
(assert (= x632 (x1922 (x110 64 x813 x632))))
(assert (= (x379 (x1904 x1881 x1477 x418 x808 x712 x476)) x1477))
(assert (x439 x853))
(assert (= (x1709 340282366920938463463374607431768211455) 0))
(assert (=> (<= x1877 10000) (= 0 (x1709 x1877))))
(assert (= (x379 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) x567))
(assert (=> (>= 10000 x926) (= (x1709 x926) 0)))
(assert (= (x532 (x54 x670 x1314 x301 x253 x852 x1244 x242)) x242))
(assert (= (or x971 x1759) x411))
(assert (x439 x505))
(assert (x439 x218))
(assert (x439 x828))
(assert (= (x1709 3168472768) 0))
(assert (x439 x1129))
(assert (x439 x1067))
(assert (> (x110 64 x936 x246) 10000))
(assert (= (x1922 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20)) x392))
(assert (= x1282 (or x1564 x1380)))
(assert (=> (>= 10000 x555) (= (x1709 x555) 0)))
(assert (= (x1904 x670 x1475 x1069 x1427 x555 x1122) (x1709 (x1904 x670 x1475 x1069 x1427 x555 x1122))))
(assert (x439 x467))
(assert (not (x294 (x110 64 x936 x968))))
(assert (= 64 (x1340 (x110 64 x1186 4))))
(assert (x294 22702217935337460250815789587045760009867340590954827992904518080408871501824))
(assert (x439 x1785))
(assert (=> (>= 10000 x476) (= 0 (x1709 x476))))
(assert (x439 x7))
(assert (=> (>= 10000 x1458) (= 0 (x1709 x1458))))
(assert (< (x756 x995 x360) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x910))
(assert (> (x598 x84 x1573 x894 x541) 10000))
(assert (= (x602 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)) x1188))
(assert (= (x1340 (x110 64 x936 x968)) 64))
(assert (= x856 (x1340 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (=> (>= 10000 x377) (= (x1709 x377) 0)))
(assert (x439 x1652))
(assert (> (x54 x84 x576 x926 x1269 x364 x227 x1209) 10000))
(assert (= (x532 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)) x606))
(assert (not (x294 (x1904 x1881 x1477 x418 x808 x712 x476))))
(assert (=> (>= 10000 x22) (= 0 (x1709 x22))))
(assert (=> (<= x1245 10000) (= (x1709 x1245) 0)))
(assert (= (x532 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x1866))
(assert (=> (<= x1548 10000) (= 0 (x1709 x1548))))
(assert (= (x1709 x1256) (x1709 (+ 1 x1256))))
(assert (< (x1904 x84 x431 x1614 x621 x496 x350) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1709 (x825 0)) (x825 0)))
(assert (x439 x350))
(assert (x439 x67))
(assert (x439 x531))
(assert (= 0 (x1709 3188545240)))
(assert (x439 x1102))
(assert (x439 x1492))
(assert (x294 729466174051048026939049150500379070045048658665))
(assert (not (x294 (x756 x84 x1767))))
(assert (= (x379 (x756 x856 x151)) x151))
(assert (= (x756 x856 x151) (x1709 (x756 x856 x151))))
(assert (x439 x444))
(assert (= (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575) (x1709 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575))))
(assert (=> (<= x1408 10000) (= (x1709 x1408) 0)))
(assert (x439 x1296))
(assert (x439 x300))
(assert (x439 x970))
(assert (x294 39095828447348766818467541868648093896559026265977760979361568868651215582053))
(assert (not (x294 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575))))
(assert (= (x54 x995 x769 x447 x1274 x909 x628 x480) (x1709 (x54 x995 x769 x447 x1274 x909 x628 x480))))
(assert (= x1192 (or x29 x400)))
(assert (x439 x344))
(assert (=> (<= x1117 10000) (= 0 (x1709 x1117))))
(assert (x439 x136))
(assert (x439 x1105))
(assert (=> (<= x1500 10000) (= 0 (x1709 x1500))))
(assert (= 0 (x1922 (x110 64 729466174051048026939049150500379070045048658665 0))))
(assert (=> (>= 10000 x936) (= 0 (x1709 x936))))
(assert (x439 x1154))
(assert (x439 x1404))
(assert (x439 x431))
(assert (=> (>= 10000 x935) (= (x1709 x935) 0)))
(assert (x439 x673))
(assert (x439 x1944))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1904 x856 x1877 x735 x1404 x254 x361)))
(assert (=> (>= 10000 x1637) (= (x1709 x1637) 0)))
(assert (=> (>= 10000 x1881) (= 0 (x1709 x1881))))
(assert (=> (>= 10000 x541) (= (x1709 x541) 0)))
(assert (x439 x1594))
(assert (x439 x452))
(assert (= x1650 (=> (and (= (x1131 (+ x1680 96)) x372) (= (x1131 (+ x43 96)) x1306) (= (x695 x372) x1566) (= (not (> x1194 128)) x1804)) (and x1804 x45))))
(assert (x439 x150))
(assert (x439 x542))
(assert (x439 x382))
(assert (= 3 (x1922 (x110 64 x1117 3))))
(assert (x294 1461501637330902918203684832716283019655932542975))
(assert (x439 x1497))
(assert (=> (>= 10000 x500) (= 0 (x1709 x500))))
(assert (x439 x1305))
(assert (=> (<= x712 10000) (= (x1709 x712) 0)))
(assert (x439 x1827))
(assert (x439 x592))
(assert (x439 x1700))
(assert (= (or x142 x49) x473))
(assert (x439 x1124))
(assert (=> (>= 10000 x1868) (= 0 (x1709 x1868))))
(assert (=> (<= x1441 10000) (= 0 (x1709 x1441))))
(assert (=> (<= x449 10000) (= (x1709 x449) 0)))
(assert (=> (<= x494 10000) (= 0 (x1709 x494))))
(assert (= (x1457 (x1904 x995 x1022 x285 x344 x1802 x489)) x344))
(assert (= (x1340 (x110 64 729466174051048026939049150500379070045048658665 0)) 64))
(assert (= x377 (x379 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249))))
(assert (= x1905 (x1922 (x598 x1845 x1245 x1905 x279))))
(assert (= x1400 (or x931 x176 x66 x1931 x1165)))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (x439 x1120))
(assert (x439 x114))
(assert (x439 x866))
(assert (x439 x419))
(assert (not (x294 (x1904 x670 x1475 x1069 x1427 x555 x1122))))
(assert (not (x294 (x110 x1881 x568 x449))))
(assert (x439 x552))
(assert (= (x110 x670 x144 x727) (x1709 (x110 x670 x144 x727))))
(assert (not (x294 (x825 0))))
(assert (not (x294 (x110 64 x112 4))))
(assert (=> (<= x253 10000) (= (x1709 x253) 0)))
(assert (> (x756 x1845 x1072) 10000))
(assert (x439 x1279))
(assert (x439 x1978))
(assert (x439 x1368))
(assert (=> (>= 10000 x369) (= 0 (x1709 x369))))
(assert (not (x294 (x598 x413 x430 x866 x666))))
(assert (< 10000 (x110 x995 x802 x79)))
(assert (= (x1922 (x598 x995 x494 x677 x964)) x677))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x1117 3)))
(assert (x439 x1689))
(assert (= x727 (x1922 (x110 x670 x144 x727))))
(assert (x439 x232))
(assert (x439 x1802))
(assert (x439 x1644))
(assert (= x971 (and (not x1047) x1138)))
(assert (= (x532 (x54 x413 x415 x1892 x935 x1370 x626 x1834)) x1834))
(assert (= (x1709 57896044618658097711785492504343953926634992332820282019728792003956564819835) 0))
(assert (=> (>= 10000 x1802) (= (x1709 x1802) 0)))
(assert (x439 x715))
(assert (x439 x596))
(assert (x439 x1864))
(assert (x439 x707))
(assert (= (x379 (x553 x413 x1500 x1868 x427 x199)) x1500))
(assert (= x447 (x1922 (x54 x995 x769 x447 x1274 x909 x628 x480))))
(assert (=> (<= x1785 10000) (= 0 (x1709 x1785))))
(assert (x439 x1388))
(assert (x439 x571))
(assert (< (x54 x222 x1797 x185 x1895 x1128 x1216 x1139) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x49 (and (not x1949) x1100)))
(assert (=> (<= x1301 10000) (= (x1709 x1301) 0)))
(assert (= x573 (x149 (x553 x670 x308 x1637 x1849 x573))))
(assert (=> (<= x856 10000) (= (x1709 x856) 0)))
(assert (x294 18446744073709551550))
(assert (x439 x463))
(assert (=> (<= x106 10000) (= 0 (x1709 x106))))
(assert (= (x1340 (x825 0)) 0))
(assert (x200 x409))
(assert (x439 x53))
(assert (=> (>= 10000 x900) (= 0 (x1709 x900))))
(assert (x439 x607))
(assert (x439 x1622))
(assert (x439 x1209))
(assert (=> (>= 10000 x883) (= 0 (x1709 x883))))
(assert (x439 x1364))
(assert (x439 x323))
(assert (=> (>= 10000 x964) (= (x1709 x964) 0)))
(assert (x439 x1116))
(assert (x439 x808))
(assert (= (x1340 (x1904 x413 x1533 x300 x958 x1987 x57)) x413))
(assert (x439 x361))
(assert (x439 x1465))
(assert (x439 x1078))
(assert (=> (>= 10000 x366) (= 0 (x1709 x366))))
(assert (x439 x978))
(assert (x439 x658))
(assert (=> (<= x517 10000) (= (x1709 x517) 0)))
(assert (= (x1922 (x110 64 953417218992365150631206543442508943947348309705 0)) 0))
(assert (= 0 (x1709 37749366859872002549862985897619888669665948435824635674531347399775013991474)))
(assert (= (x602 (x54 x670 x1314 x301 x253 x852 x1244 x242)) x1244))
(assert (x439 x585))
(assert (x439 x134))
(assert (x439 x124))
(assert (not (x294 (x553 x222 x1322 x711 x1154 x74))))
(assert (=> (>= 10000 x243) (= (x1709 x243) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x1845 x1230 x900)))
(assert (not (x294 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (x439 x960))
(assert (x439 x1389))
(assert (x439 x1722))
(assert (= x1592 (and x520 x1207)))
(assert (= (x1457 (x598 x1845 x1245 x1905 x279)) x279))
(assert (not (x294 (x110 64 443215666480553238610125355434898879895743000821 1))))
(assert (x439 x312))
(assert (= 0 (x1709 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x439 x507))
(assert (= (=> (= (= x451 0) x572) (and (=> (and (and (= x755 x1289) (= x321 x1055)) (not x572)) x1110) (=> x572 x1422))) x40))
(assert (= (x1340 (x54 x995 x769 x447 x1274 x909 x628 x480)) x995))
(assert (x439 x242))
(assert (x439 x1514))
(assert (= 0 (x1709 63076024560530113402979550242307453568063438748328787417531900361828837441551)))
(assert (x439 x1936))
(assert (x439 x47))
(assert (x439 x298))
(assert (= x1069 (x1922 (x1904 x670 x1475 x1069 x1427 x555 x1122))))
(assert (=> (>= 10000 x1987) (= (x1709 x1987) 0)))
(assert (x439 x574))
(assert (=> (<= x318 10000) (= 0 (x1709 x318))))
(assert (=> (>= 10000 x670) (= 0 (x1709 x670))))
(assert (= (x756 x84 x1767) (x1709 (x756 x84 x1767))))
(assert (x439 x409))
(assert (= (x1340 (x756 x1881 x1948)) x1881))
(assert (x439 x213))
(assert (x439 x606))
(assert (x439 x1361))
(assert (x439 x1344))
(assert (= (x110 64 x936 x1672) (x1709 (x110 64 x936 x1672))))
(assert (x439 x1651))
(assert (= (x1340 (x110 64 x22 3)) 64))
(assert (not (x294 (x110 x413 x225 x1576))))
(assert (x439 x1539))
(assert (x439 x1779))
(assert (= (x1904 x1881 x1477 x418 x808 x712 x476) (x1709 (x1904 x1881 x1477 x418 x808 x712 x476))))
(assert (=> (>= 10000 x652) (= (x1709 x652) 0)))
(assert (x439 x1710))
(assert (= (x1922 (x598 x856 x1441 x700 x1288)) x700))
(assert (=> (<= x1439 10000) (= (x1709 x1439) 0)))
(assert (x439 x502))
(assert (=> (<= x25 10000) (= 0 (x1709 x25))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x670 x1729 x1392 x234)))
(assert (= x500 (x1457 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249))))
(assert (x439 x1773))
(assert (x294 3188545240))
(assert (< 10000 (x598 x670 x1729 x1392 x234)))
(assert (= x1442 (and x544 x1789)))
(assert (= (x379 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x1681))
(assert (=> (>= 10000 x861) (= (x1709 x861) 0)))
(assert (= (x1709 (x756 x995 x360)) (x756 x995 x360)))
(assert (x439 x1529))
(assert (x439 x1976))
(assert (= x670 (x1340 (x598 x670 x1729 x1392 x234))))
(assert (x439 x642))
(assert (x439 x397))
(assert (= (x1340 (x110 x222 x1853 x939)) x222))
(assert (x439 x1008))
(assert (= (x1709 443215666480553238610125355434898879895743000821) 0))
(assert (not (x294 (x110 x670 x144 x727))))
(assert (x439 x1821))
(assert (= (x1457 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x1548))
(assert (= (x1922 (x598 x84 x1573 x894 x541)) x894))
(assert (x439 x1729))
(assert (x439 x1868))
(assert (x439 x644))
(assert (x439 x1684))
(assert (x439 x993))
(assert (x439 x1471))
(assert (> (x110 x1845 x1230 x900) 10000))
(assert (=> (>= 10000 x1216) (= (x1709 x1216) 0)))
(assert (x439 x1331))
(assert (=> (>= 10000 x1247) (= 0 (x1709 x1247))))
(assert (= x1881 (x1340 (x553 x1881 x35 x243 x177 x1846))))
(assert (x439 x583))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x553 x222 x1322 x711 x1154 x74)))
(assert (x439 x1673))
(assert (x439 x1054))
(assert (=> (<= x185 10000) (= 0 (x1709 x185))))
(assert (= (and x391 (not x88)) x380))
(assert (=> (<= x830 10000) (= (x1709 x830) 0)))
(assert (x439 x671))
(assert (x439 x1439))
(assert (not (x294 (x1904 x413 x1533 x300 x958 x1987 x57))))
(assert (x439 x1115))
(assert (=> (>= 10000 x1573) (= (x1709 x1573) 0)))
(assert (x294 22700451088272681866486206289545017091351513107057952373946396474207578882048))
(assert (= (x1709 (+ x1233 1)) (x1709 x1233)))
(assert (= (x1340 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x995))
(assert (= 0 (x1709 729466174051048026939049150500379070045048658665)))
(assert (x439 x1267))
(assert (x439 x704))
(assert (=> (>= 10000 x1068) (= (x1709 x1068) 0)))
(assert (= x361 (x602 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (=> (>= 10000 x50) (= (x1709 x50) 0)))
(assert (= x936 (x379 (x110 64 x936 x246))))
(assert (x439 x751))
(assert (x439 x1058))
(assert (=> (>= 10000 x364) (= (x1709 x364) 0)))
(assert (=> (>= 10000 x1044) (= 0 (x1709 x1044))))
(assert (= (x1340 (x110 x84 x542 x574)) x84))
(assert (= (x1709 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)) (x54 x1881 x366 x25 x1748 x1556 x1859 x771)))
(assert (x439 x915))
(assert (=> (>= 10000 x144) (= (x1709 x144) 0)))
(assert (< 10000 (x110 64 729466174051048026939049150500379070045048658665 0)))
(assert (x439 x364))
(assert (= (x1340 (x756 x222 x1753)) x222))
(assert (= (x1340 (x598 66 x988 x1043 x1785)) 66))
(assert (=> (<= x1936 10000) (= (x1709 x1936) 0)))
(assert (x439 x1588))
(assert (=> (>= 10000 x1866) (= 0 (x1709 x1866))))
(assert (= x1687 (x379 (x110 64 x1687 3))))
(assert (= (and x1425 (not x165)) x1409))
(assert (=> (>= 10000 x852) (= 0 (x1709 x852))))
(assert (not (x294 (x598 x995 x494 x677 x964))))
(assert (x336 x1510))
(assert (x439 x1359))
(assert (=> (<= x480 10000) (= 0 (x1709 x480))))
(assert (x439 x31))
(assert (< 10000 (x756 x413 x1979)))
(assert (= x262 (and x1074 x1903)))
(assert (= x1944 (x1774 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944))))
(assert (x439 x445))
(assert (= (x149 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)) x1556))
(assert (x439 x609))
(assert (x294 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x439 x1424))
(assert (x439 x758))
(assert (x439 x1447))
(assert (=> (>= 10000 x626) (= 0 (x1709 x626))))
(assert (x439 x285))
(assert (x439 x1437))
(assert (x439 x1418))
(assert (=> (>= 10000 x84) (= (x1709 x84) 0)))
(assert (x439 x1811))
(assert (= true x1218))
(assert (> (x756 x995 x360) 10000))
(assert (x439 x1157))
(assert (=> (<= x998 10000) (= (x1709 x998) 0)))
(assert (=> (<= x1533 10000) (= 0 (x1709 x1533))))
(assert (x439 x1517))
(assert (= (x1709 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)))
(assert (= (x1340 (x598 x84 x1573 x894 x541)) x84))
(assert (= x20 (x1774 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (= x1489 (x1922 (x110 x856 x1754 x1489))))
(assert (x439 x1348))
(assert (= (x1709 (x756 x413 x1979)) (x756 x413 x1979)))
(assert (> (x598 x413 x430 x866 x666) 10000))
(assert (= (or x417 (and x888 x1939)) x927))
(assert (x439 x1378))
(assert (x439 x423))
(assert (x439 x943))
(assert (= x285 (x1922 (x1904 x995 x1022 x285 x344 x1802 x489))))
(assert (= (x1457 (x598 x222 x906 x1301 x1773)) x1773))
(assert (x294 57896044618658097711785492504343953926634992332820282019728792003956564819835))
(assert (x439 x1959))
(assert (= (and x39 (not x1210)) x115))
(assert (x439 x906))
(assert (x439 x1216))
(assert (=> (>= 10000 x360) (= 0 (x1709 x360))))
(assert (x439 x517))
(assert (x439 x1625))
(assert (= 0 (x1709 1551562514)))
(assert (< (x110 64 443215666480553238610125355434898879895743000821 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x54 x84 x576 x926 x1269 x364 x227 x1209)))
(assert (x439 x784))
(assert (= (x379 (x110 x84 x542 x574)) x542))
(assert (x439 x811))
(assert (= x427 (x1457 (x553 x413 x1500 x1868 x427 x199))))
(assert (x439 x79))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (= x384 (=> (and (= x419 x1579) (= x77 x1258) (= x819 true) (= x65 x743) (= x1551 x1844) (= x53 0) (= x1054 x1402) (= x562 false)) x315)))
(assert (x439 x357))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639714))
(assert (= (x1457 (x1904 x84 x431 x1614 x621 x496 x350)) x621))
(assert (= (and x319 x1383) x1917))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639932) 0))
(assert (= (=> (and (or (and (not x1915) (= x375 x748)) (and (and (>= x1519 64) (= 1 x748) (<= x1519 4294967295)) x1915)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1519) (= (x1131 (+ x592 x512)) x14) (= (x1131 (+ x592 x623)) x1629) (= (< 0 x375) x1915) (= (x845 (- x14 x118)) x981) (>= x1519 64) (= (x38 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1855) x512) (= (x1131 (+ x623 31)) x1855))) x1239) x169))
(assert (=> (<= x1614 10000) (= (x1709 x1614) 0)))
(assert (= (x553 x1881 x35 x243 x177 x1846) (x1709 (x553 x1881 x35 x243 x177 x1846))))
(assert (x439 x16))
(assert (x439 x1870))
(assert (x439 x1450))
(assert (= (x1709 (x598 x670 x1729 x1392 x234)) (x598 x670 x1729 x1392 x234)))
(assert (x439 x167))
(assert (= (or x1398 x475 x1113 x597 x1575) x1325))
(assert (x439 x1790))
(assert (not (x294 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139))))
(assert (x439 x1946))
(assert (= (x1709 (x110 64 x112 4)) (x110 64 x112 4)))
(assert (= x544 (or x1409 x586 x239 x1731 x1434)))
(assert (=> (<= x1040 10000) (= 0 (x1709 x1040))))
(assert (= (x1922 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)) x1078))
(assert (= (x1922 (x110 64 x1186 4)) 4))
(assert (x439 x1028))
(assert (x439 x1832))
(assert (x439 x486))
(assert (= (x110 x222 x1853 x939) (x1709 (x110 x222 x1853 x939))))
(assert (x439 x932))
(assert (x439 x1777))
(assert (x439 x662))
(assert (x439 x1479))
(assert (=> (>= 10000 x1959) (= (x1709 x1959) 0)))
(assert (x439 x228))
(assert (=> (<= x1948 10000) (= 0 (x1709 x1948))))
(assert (x439 x375))
(assert (= (x1709 (x110 x1845 x1230 x900)) (x110 x1845 x1230 x900)))
(assert (= 0 (x1709 4294967295)))
(assert (x439 x725))
(assert (x439 x1106))
(assert (= (x1709 (x110 64 x1886 3)) (x110 64 x1886 3)))
(assert (x439 x330))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x439 x292))
(assert (=> (<= x1377 10000) (= (x1709 x1377) 0)))
(assert (= 0 (x1709 58652715557392481136322917363278564085642169142198350659161099264462031945728)))
(assert (= 0 (x1709 3686331914)))
(assert (= x541 (x1457 (x598 x84 x1573 x894 x541))))
(assert (x439 x912))
(assert (< (x110 64 x112 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1284))
(assert (x439 x503))
(assert (= (x1457 (x54 x995 x769 x447 x1274 x909 x628 x480)) x1274))
(assert (= x808 (x1457 (x1904 x1881 x1477 x418 x808 x712 x476))))
(assert (= (x1709 (+ 1 x680)) (x1709 x680)))
(assert (x439 x761))
(assert (=> (>= 10000 x1486) (= (x1709 x1486) 0)))
(assert (x439 x1584))
(assert (= x872 (or (and x527 (not x1925)) (and x1210 x39) (and x1252 x1326) (and x1141 x115))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)))
(assert (x439 x74))
(assert (x439 x813))
(assert (x439 x1820))
(assert (=> (<= x1230 10000) (= 0 (x1709 x1230))))
(assert (= (x1340 (x553 x84 x578 x1458 x1751 x1980)) x84))
(assert (=> (>= 10000 x1043) (= 0 (x1709 x1043))))
(assert (not (x294 (x110 64 x1857 x1111))))
(assert (x439 x476))
(assert (= x670 (x1340 (x756 x670 x1439))))
(assert (= x415 (x379 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (=> (<= x254 10000) (= (x1709 x254) 0)))
(assert (x439 x1579))
(assert (= (x1709 (x110 64 x813 x342)) (x110 64 x813 x342)))
(assert (x439 x1381))
(assert (x336 x692))
(assert (x439 x296))
(assert (= (x1340 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20)) x670))
(assert (= x22 (x379 (x110 64 x22 3))))
(assert (not (x294 (x756 x995 x360))))
(assert (x439 x1793))
(assert (= (x54 x84 x576 x926 x1269 x364 x227 x1209) (x1709 (x54 x84 x576 x926 x1269 x364 x227 x1209))))
(assert (x439 x1408))
(assert (= x540 (and x1423 x992)))
(assert (x439 x891))
(assert (= (x379 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) x607))
(assert (= (x1709 22260506169142864168419965211860030380910469616735923253374116530085716557824) 0))
(assert (= (x602 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)) x1514))
(assert (x439 x1503))
(assert (x439 x699))
(assert (= (x1709 16777215) 0))
(assert (= (x1922 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x1959))
(assert (x439 x1033))
(assert (= (x1709 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)))
(assert (= (x1709 (+ 1 x389)) (x1709 x389)))
(assert (x439 x1974))
(assert (x439 x159))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)))
(assert (x439 x545))
(assert (x439 x1752))
(assert (= 64 (x1340 (x110 64 x1117 3))))
(assert (x439 x488))
(assert (= x1022 (x379 (x1904 x995 x1022 x285 x344 x1802 x489))))
(assert (x336 x1809))
(assert (x439 x1708))
(assert (x439 x86))
(assert (x439 x645))
(assert (x439 x92))
(assert (=> (<= x427 10000) (= (x1709 x427) 0)))
(assert (< 10000 (x110 64 x22 3)))
(assert (= (x149 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) x772))
(assert (not (x294 (x756 x413 x1979))))
(assert (x439 x226))
(assert (< 10000 (x756 x1881 x1948)))
(assert (x439 x253))
(assert (=> (>= 10000 x453) (= (x1709 x453) 0)))
(assert (= (x379 (x110 64 81 x1089)) 81))
(assert (= (x598 66 x988 x1043 x1785) (x1709 (x598 66 x988 x1043 x1785))))
(assert (x439 x965))
(assert (x439 x1525))
(assert (x439 x1020))
(assert (x294 340282366920938463463374607431768211454))
(assert (= (x110 64 x1687 4) (x1709 (x110 64 x1687 4))))
(assert (x439 x920))
(assert (x439 x65))
(assert (=> (<= x624 10000) (= 0 (x1709 x624))))
(assert (x439 x318))
(assert (x439 x1808))
(assert (not (x294 (x553 x413 x1500 x1868 x427 x199))))
(assert (= (x110 64 x22 3) (x1709 (x110 64 x22 3))))
(assert (=> (>= 10000 x1314) (= (x1709 x1314) 0)))
(assert (x439 x1703))
(assert (=> (<= x575 10000) (= 0 (x1709 x575))))
(assert (x439 x964))
(assert (x294 24068214603859720034826088920346711864364023158142564334732402816841156945010))
(assert (x439 x209))
(assert (x439 x430))
(assert (= x302 (x1922 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705))))
(assert (x439 x1421))
(assert (x439 x1714))
(assert (=> (>= 10000 x1196) (= (x1709 x1196) 0)))
(assert (x439 x491))
(assert (=> (<= x1729 10000) (= (x1709 x1729) 0)))
(assert (< (x598 66 x988 x1043 x1785) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1855))
(assert (x439 x377))
(assert (x439 x1314))
(assert (not (x294 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x439 x1582))
(assert (= x1845 (x1340 (x1904 x1845 x137 x1648 x50 x720 x316))))
(assert (x439 x1211))
(assert (x439 x1914))
(assert (x439 x1021))
(assert (x439 x183))
(assert (= x412 (=> (and (= x767 (ite (not (= 0 x1567)) 1 0)) (= x503 x1551) (= x435 x479) (= false x719) (= x1402 x1352) (= (not (= x767 0)) x479) (= x481 false) (= x419 x1036) (= x829 x281) (= x1635 false) (= x1258 x1015) (= x743 x1899) (= false x1818)) x293)))
(assert (x439 x1844))
(assert (= (x602 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) x60))
(assert (= (or x793 x1285) x1423))
(assert (x439 x1580))
(assert (< 10000 (x1904 x222 x1569 x644 x1808 x1379 x652)))
(assert (x439 x1623))
(assert (= x527 (and (not x1252) x1326)))
(assert (= (x1340 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x413))
(assert (= (and x165 x1425) x674))
(assert (= (x1340 (x598 x995 x494 x677 x964)) x995))
(assert (x439 x937))
(assert (not (x294 (x54 x995 x769 x447 x1274 x909 x628 x480))))
(assert (= 64 (x1340 (x110 64 x1687 4))))
(assert (not (x294 (x110 64 x22 3))))
(assert (= 3 (x1922 (x110 64 x22 3))))
(assert (= (x149 (x1904 x1881 x1477 x418 x808 x712 x476)) x712))
(assert (x439 x1088))
(assert (x439 x988))
(assert (x439 x428))
(assert (= (x379 (x110 x856 x1754 x1489)) x1754))
(assert (x439 x1297))
(assert (x439 x413))
(assert (x439 x141))
(assert (=> (>= 10000 x1322) (= (x1709 x1322) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x1881 x568 x449)))
(assert (x439 x1701))
(assert (x439 x180))
(assert (=> (>= 10000 x1857) (= (x1709 x1857) 0)))
(assert (< 10000 (x54 x995 x769 x447 x1274 x909 x628 x480)))
(assert (x439 x1866))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639805))
(assert (x439 x143))
(assert (x336 x409))
(assert (= x769 (x379 (x54 x995 x769 x447 x1274 x909 x628 x480))))
(assert (= (x1709 18446744073709551550) 0))
(assert (x439 x863))
(assert (< (x110 64 x1687 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x380 x1463 x625 x796 x404) x1163))
(assert (not (x294 (x598 x856 x1441 x700 x1288))))
(assert (x439 x1072))
(assert (x439 x42))
(assert (= x670 (x1340 (x110 x670 x144 x727))))
(assert (x439 x1948))
(assert (= 0 (x1709 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (>= 10000 x1514) (= (x1709 x1514) 0)))
(assert (= (x1709 (x553 x670 x308 x1637 x1849 x573)) (x553 x670 x308 x1637 x1849 x573)))
(assert (x439 x1550))
(assert (not (x294 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (x439 x626))
(assert (x439 x861))
(assert (not (x294 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (x439 x666))
(assert (=> (>= 10000 x1262) (= (x1709 x1262) 0)))
(assert (x439 x272))
(assert (x439 x1307))
(assert (x439 x1645))
(assert (x439 x746))
(assert (x439 x1981))
(assert (=> (>= 10000 x1379) (= 0 (x1709 x1379))))
(assert (x439 x338))
(assert (x439 x1312))
(assert (x439 x713))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x936 x246)))
(assert (x439 x1322))
(assert (x439 x537))
(assert (=> (<= x707 10000) (= (x1709 x707) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 81 x1089)))
(assert (= x1881 (x1340 (x1904 x1881 x1477 x418 x808 x712 x476))))
(assert (= (x1340 (x110 x856 x1754 x1489)) x856))
(assert (x439 x1062))
(assert (x439 x208))
(assert (=> (<= x214 10000) (= 0 (x1709 x214))))
(assert (x439 x1498))
(assert (= 0 (x1709 103603067176188370116793463780953604340491603117933565163376133325037439549440)))
(assert (= x495 (=> (and (= x1313 (x1131 (+ 96 x1088))) (= (x696 x1313) x970) (= x1920 (not (< 128 x443))) (= (x1131 (+ x194 96)) x543)) (and x1920 x593))))
(assert (x439 x922))
(assert (x439 x1213))
(assert (< 10000 (x598 66 x988 x1043 x1785)))
(assert (= x1972 (x602 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (= (x379 (x110 x413 x225 x1576)) x225))
(assert (=> (<= x542 10000) (= (x1709 x542) 0)))
(assert (x439 x831))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639868)))
(assert (not (x294 (x110 64 81 x902))))
(assert (x439 x1952))
(assert (x439 x630))
(assert (x439 x877))
(assert (x439 x711))
(assert (= (x602 (x1904 x670 x1475 x1069 x1427 x555 x1122)) x1122))
(assert (x439 x418))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x54 x995 x769 x447 x1274 x909 x628 x480)))
(assert (< 10000 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)))
(assert (x439 x935))
(assert (= (x1340 (x110 64 x1857 x1111)) 64))
(assert (x439 x1930))
(assert (x439 x1767))
(assert (=> (<= x1186 10000) (= (x1709 x1186) 0)))
(assert (= x1040 (x1457 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575))))
(assert (x439 x1749))
(assert (= (x1340 (x1904 x84 x431 x1614 x621 x496 x350)) x84))
(assert (< 10000 (x825 0)))
(assert (= 0 (x1709 39095828447348766818467541868648093896559026265977760979361568868651215582053)))
(assert (= (x1922 (x553 x84 x578 x1458 x1751 x1980)) x1458))
(assert (= (x1709 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) (x54 x856 x567 x809 x752 x1703 x1539 x1429)))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (x439 x470))
(assert (= (x1457 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)) x1978))
(assert (x439 x1223))
(assert (x439 x392))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x756 x1845 x1072)))
(assert (= x1808 (x1457 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (x439 x138))
(assert (x336 x1855))
(assert (x439 x1059))
(assert (x439 x998))
(assert (= (x149 (x1904 x84 x431 x1614 x621 x496 x350)) x496))
(assert (x439 x8))
(assert (x439 x926))
(assert (x439 x991))
(assert (x439 x712))
(assert (= (x1709 (+ 1 x1009)) (x1709 x1009)))
(assert (x439 x1343))
(assert (x439 x944))
(assert (x439 x1613))
(assert (x439 x1953))
(assert (= x1748 (x1457 (x54 x1881 x366 x25 x1748 x1556 x1859 x771))))
(assert (x439 x1217))
(assert (< 10000 (x110 x222 x1853 x939)))
(assert (x439 x1070))
(assert (x439 x52))
(assert (= x861 (x532 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486))))
(assert (x439 x468))
(assert (x439 x1010))
(assert (x439 x1894))
(assert (= x593 (=> (and (= x1283 (>= 224 x670)) (= x673 (x1131 (+ x455 32))) (<= x455 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x63 (x845 (- x1284 32))) (<= 1 x1149) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x455) (= (x1131 (+ x194 x443)) x1149) (<= x455 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1284 (x845 (- x1149 x455))) (= (x345 x455) x670) (< x455 x1149)) (and (=> (and (= (x345 x768) x1002) (= (x1131 (+ x673 32)) x1491) (= x20 (x345 x1035)) (= (x1131 (+ x673 96)) x891) (= (ite (= x670 0) x1610 (ite (<= x670 32) x923 (ite (>= 64 x670) x709 (ite (>= 96 x670) x1248 (ite (>= 128 x670) x1522 (ite (>= 160 x670) x1516 (ite (<= x670 192) x1221 (ite (>= 224 x670) x1332 x48)))))))) x954) (= (x1131 (+ x216 32)) x1211) (= x852 (x345 x1438)) (= (x1131 (+ x673 128)) x1479) (= x856 (x536 x1149)) (= x1248 (x598 x670 x1729 x1392 x234)) (= x1705 (x1131 (+ 32 x673))) (= x1315 (x345 x1360)) (= x349 (x1131 (+ x673 32))) (= (x1131 (+ x673 64)) x768) (= (x1131 (+ 32 x1058)) x1664) (= (x345 x891) x555) (> x1700 x1149) (= (x345 x470) x573) (= x883 (x345 x673)) (= x426 (x1131 (+ x673 64))) (= x1094 (x1131 (+ x673 128))) (= (x1131 (+ x673 96)) x609) (= (x345 x434) x242) (= (x1131 (+ 64 x673)) x208) (= x1035 (x1131 (+ 192 x673))) (= (x1131 (+ x1618 x766)) x1058) (= (x1131 (+ 96 x673)) x470) (= x216 (x1131 (+ 32 x1149))) (= (x1131 (+ x673 64)) x1656) (= x709 (x110 x670 x144 x727)) (= (x1131 (+ x167 x766)) x1181) (<= x742 18446744073709551615) (= x1947 (x345 x1094)) (= (x1131 (+ x673 32)) x1585) (<= x794 340282366920938463463374607431768211455) (= (x345 x673) x1729) (= (x1131 (+ 32 x1149)) x662) (= x1610 (x825 0)) (or (and (< x1618 x1033) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1033) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1618))) (and (<= x1033 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1618 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (>= x167 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x167)) (= x1244 (x345 x1479)) (= (x345 x1828) x1392) (= (x845 (- x1106 x766)) x1129) (= (x845 (- x1700 x1149)) x466) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1149) (<= 1 x1149)) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1149) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1149))) (= x1700 (x1131 (+ x216 96))) (= (x1904 x670 x1475 x1069 x1427 x555 x1122) x1516) (= (x345 x172) x1122) (= x1314 (x345 x673)) (= x1522 (x553 x670 x308 x1637 x1849 x573)) (= (x1632 x1181) x407) (= (x345 x609) x1638) (= x1427 (x345 x1656)) (= x144 (x345 x673)) (= x308 (x345 x673)) (or (<= x1618 57896044618658097711785492504343953926634992332820282019728792003956564819835) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1618)) (<= 1 x742) (= (x345 x673) x1439) (= x392 (x345 x1705)) (= (x1131 (+ x673 64)) x462) (= (x54 x670 x1314 x301 x253 x852 x1244 x242) x1221) (= x616 (x1131 (+ x673 32))) (= x1475 (x345 x673)) (= (x1131 (+ 160 x673)) x434) (= (x1632 x1664) x794) (= x1511 (x845 (- x466 32))) (= (x1131 (+ 128 x673)) x172) (= (x1131 (+ x673 96)) x1438) (= x234 (x345 x208)) (= x1618 (x1632 x766)) (= x923 (x756 x670 x1439)) (= x1590 (>= 224 x856)) (= (x345 x349) x301) (= (x345 x426) x253) (or (and (> x1033 x167) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1033) (<= x167 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x1033 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x167))) (= x167 (x1632 x766)) (<= x407 1461501637330902918203684832716283019655932542975) (= (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20) x1332) (= (x1131 (+ x1211 32)) x502) (= x1069 (x345 x616)) (= (x1131 (+ 32 x673)) x1828) (= (x345 x1585) x727) (= x1360 (x1131 (+ 160 x673))) (= (x345 x1491) x1637) (= x1033 (x845 (- x1129 95))) (= (x345 x462) x1849)) (and x1590 (=> (and (= (x1131 (+ 64 x662)) x1901) (= (x536 x662) x1441) (= x361 (x536 x706)) (<= 1 x645) (= x1754 (x536 x662)) (= (x1131 (+ x662 160)) x603) (= x10 (x1904 x856 x1877 x735 x1404 x254 x361)) (= x491 (x1131 (+ 32 x662))) (= x1877 (x536 x662)) (= x377 (x536 x662)) (= x1359 (x1131 (+ x662 64))) (= x1534 (x110 x856 x1754 x1489)) (= (x1131 (+ 32 x662)) x550) (= x1004 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) (= x563 (x536 x1901)) (= (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249) x1879) (= (x536 x662) x1377) (= (x1131 (+ 96 x662)) x1008) (= (x1131 (+ x662 96)) x1529) (= x201 (not (> x742 1))) (= (x536 x662) x567) (= x249 (x536 x8)) (= x8 (x1131 (+ x662 192))) (= (x536 x491) x1078) (= (x1131 (+ 64 x662)) x863) (= (x1131 (+ x662 64)) x991) (= x1388 (+ 32 x1843)) (= (x536 x763) x1404) (= x1288 (x536 x991)) (= (x536 x358) x1539) (= (ite (= x856 0) x230 (ite (<= x856 32) x691 (ite (>= 64 x856) x1534 (ite (>= 96 x856) x1764 (ite (<= x856 128) x961 (ite (>= 160 x856) x10 (ite (<= x856 192) x1004 (ite (>= 224 x856) x1879 x647)))))))) x535) (= x1660 (x1131 (+ x662 32))) (= (x1131 (+ x662 64)) x763) (= (x536 x863) x500) (= x254 (x536 x1529)) (= (x1131 (+ 32 x662)) x1305) (= (x1131 (+ x662 32)) x1336) (= x961 (x553 x856 x1377 x214 x563 x934)) (= x151 (x536 x662)) (= (x1131 (+ x662 128)) x358) (= x1764 (x598 x856 x1441 x700 x1288)) (= x1689 (x536 x603)) (= (x1131 (+ x662 96)) x676) (= (x536 x1008) x777) (= x1644 (x536 x34)) (= (x825 0) x230) (= (x536 x1359) x752) (= (x536 x1311) x1429) (= (x1131 (+ x662 96)) x1775) (= (x1131 (+ 128 x662)) x34) (= x1254 (x1131 (+ 32 x662))) (= x706 (x1131 (+ x662 128))) (= x1703 (x536 x1775)) (= x214 (x536 x1305)) (= x1311 (x1131 (+ x662 160))) (= (x536 x1660) x809) (= (x536 x1336) x735) (= (x536 x1254) x700) (= x691 (x756 x856 x151)) (= (x536 x1843) x645) (= (x536 x550) x1489) (= (x536 x676) x934)) (and x201 (=> (= x1700 x1953) x785))))) x1283))))
(assert (x439 x182))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x936 x968)))
(assert (= (x379 (x110 64 443215666480553238610125355434898879895743000821 0)) 443215666480553238610125355434898879895743000821))
(assert (= (x1709 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)) (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)))
(assert (=> (<= x559 10000) (= (x1709 x559) 0)))
(assert (x439 x1475))
(assert (x439 x1510))
(assert (= (x1340 (x756 x84 x1767)) x84))
(assert (=> (<= x545 10000) (= (x1709 x545) 0)))
(assert (x439 x1013))
(assert (= x707 (x379 (x553 x995 x707 x420 x758 x517))))
(assert (=> (>= 10000 x151) (= 0 (x1709 x151))))
(assert (x439 x1766))
(assert (x439 x842))
(assert (= (x379 (x110 64 x1857 x1111)) x1857))
(assert (= x1859 (x602 (x54 x1881 x366 x25 x1748 x1556 x1859 x771))))
(assert (x439 x1254))
(assert (= (x379 (x110 x1881 x568 x449)) x568))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639869) 0))
(assert (= x366 (x379 (x54 x1881 x366 x25 x1748 x1556 x1859 x771))))
(assert (= (x1922 (x54 x670 x1314 x301 x253 x852 x1244 x242)) x301))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)))
(assert (not (x294 (x598 x670 x1729 x1392 x234))))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639873)))
(assert (< 10000 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)))
(assert (x439 x215))
(assert (x439 x564))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639932))
(assert (= 3 (x1922 (x110 64 x1687 3))))
(assert (= x1139 (x532 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139))))
(assert (> (x756 x84 x1767) 10000))
(assert (=> (<= x1544 10000) (= (x1709 x1544) 0)))
(assert (= (x602 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)) x1644))
(assert (x439 x184))
(assert (x439 x1865))
(assert (= (x1709 (+ x1415 1)) (x1709 x1415)))
(assert (x439 x1406))
(assert (= (x1340 (x598 x856 x1441 x700 x1288)) x856))
(assert (= (x1709 (x54 x670 x1314 x301 x253 x852 x1244 x242)) (x54 x670 x1314 x301 x253 x852 x1244 x242)))
(assert (= (x1340 (x110 64 x936 x649)) 64))
(assert (x439 x1045))
(assert (x439 x1924))
(assert (= (x379 (x110 64 953417218992365150631206543442508943947348309705 0)) 953417218992365150631206543442508943947348309705))
(assert (x439 x451))
(assert (x439 x1186))
(assert (x439 x633))
(assert (x439 x1460))
(assert (not (x294 (x553 x84 x578 x1458 x1751 x1980))))
(assert (= (x1340 (x110 x1881 x568 x449)) x1881))
(assert (= (x1922 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) x453))
(assert (x439 x1278))
(assert (< (x110 64 x180 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x589))
(assert (= (x149 (x553 x995 x707 x420 x758 x517)) x517))
(assert (= x813 (x379 (x110 64 x813 x1512))))
(assert (x294 39095828447348766818467541868648093896559026261938444753180772323039453799525))
(assert (x439 x1077))
(assert (= (x1457 (x598 x856 x1441 x700 x1288)) x1288))
(assert (= (x532 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x369))
(assert (> (x598 x1881 x432 x966 x424) 10000))
(assert (not (x294 (x110 64 729466174051048026939049150500379070045048658665 0))))
(assert (= (x1709 22702217935337460250815789587045760009867340590954827992904518080408871501824) 0))
(assert (=> (>= 10000 x180) (= 0 (x1709 x180))))
(assert (x439 x1029))
(assert (x439 x1358))
(assert (x439 x362))
(assert (= x1463 (and x88 x391)))
(assert (=> (<= x644 10000) (= 0 (x1709 x644))))
(assert (x439 x521))
(assert (x439 x543))
(assert (x439 x1880))
(assert (=> (<= x1836 10000) (= 0 (x1709 x1836))))
(assert (= x1881 (x1340 (x598 x1881 x432 x966 x424))))
(assert (x439 x170))
(assert (not (x294 (x110 64 x1186 4))))
(assert (= x6 (=> (and (and (= x789 (x333 x1233)) (= x1447 (x1185 x801)) (>= 127 x1506) (= x1977 4067465820) (= x1375 x698) (= false x237) (= false x551) (<= x1506 127) (= (+ 1 x1233) x843) (>= 16777215 x789) (= (= 0 x159) x471) (= x112 x898) (= x1096 x1048) (= false x1571) (= (x1515 x843) x1934) (= (not x471) x1048) (= x325 x1693) (= (x44 256) x325) (= x18 false) (<= 1 x1447) (= false x523) (= x159 (x44 288)) (= (x110 64 x112 4) x1233) (= x612 false)) (and (= x762 x1484) (= x1484 x898) (= x1562 x762) (= 36 x699))) x1081)))
(assert (x439 x775))
(assert (x439 x118))
(assert (x439 x816))
(assert (x439 x878))
(assert (x439 x999))
(assert (x439 x484))
(assert (x439 x720))
(assert (x439 x1352))
(assert (x439 x1877))
(assert (x439 x20))
(assert (= (x379 (x110 64 443215666480553238610125355434898879895743000821 1)) 443215666480553238610125355434898879895743000821))
(assert (x439 x1543))
(assert (x439 x1757))
(assert (x439 x77))
(assert (x336 x1976))
(assert (x439 x1351))
(assert (= (x1709 (x54 x413 x415 x1892 x935 x1370 x626 x1834)) (x54 x413 x415 x1892 x935 x1370 x626 x1834)))
(assert (x439 x1597))
(assert (= (x598 x222 x906 x1301 x1773) (x1709 (x598 x222 x906 x1301 x1773))))
(assert (x439 x1910))
(assert (x439 x1220))
(assert (x439 x798))
(assert (x439 x1947))
(assert (x439 x1913))
(assert (= (x1904 x413 x1533 x300 x958 x1987 x57) (x1709 (x1904 x413 x1533 x300 x958 x1987 x57))))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x379 (x756 x1845 x1072)) x1072))
(assert (= (x1709 (+ x1376 1)) (x1709 x1376)))
(assert (x439 x1756))
(assert (= (x110 64 443215666480553238610125355434898879895743000821 0) (x1709 (x110 64 443215666480553238610125355434898879895743000821 0))))
(assert (x294 85963009616197036880240088340724629170983710335684291091497906406952890531840))
(assert (x439 x127))
(assert (x439 x358))
(assert (x439 x1330))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x439 x453))
(assert (=> (<= x104 10000) (= (x1709 x104) 0)))
(assert (x439 x1555))
(assert (= (and x148 x514) x332))
(assert (=> (<= x447 10000) (= 0 (x1709 x447))))
(assert (x439 x187))
(assert (x439 x1680))
(assert (x1856 x1809))
(assert (= x1595 (and (not x1097) x667)))
(assert (=> (<= x1849 10000) (= 0 (x1709 x1849))))
(assert (= (x1709 85963009616197036880240088340724629170983710335684291091497906406952890531840) 0))
(assert (= x1486 (x1774 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486))))
(assert (x439 x1258))
(assert (= (x1340 (x110 64 x112 4)) 64))
(assert (x439 x1980))
(assert (< (x756 x856 x151) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x1982) x1736) x1962))
(assert (= (x1709 (x110 64 x1857 x1111)) (x110 64 x1857 x1111)))
(assert (x439 x769))
(assert (x439 x805))
(assert (= 0 (x1709 51755322175217624492750805572474109157238378692794855914282927279451288895488)))
(assert (x439 x1202))
(assert (x439 x620))
(assert (=> (<= x308 10000) (= (x1709 x308) 0)))
(assert (x439 x1200))
(assert (=> (>= 10000 x727) (= 0 (x1709 x727))))
(assert (x439 x1319))
(assert (x439 x177))
(assert (x439 x95))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639839))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639870))
(assert (= x176 (and (not x1174) x806)))
(assert (x439 x265))
(assert (=> (>= 10000 x79) (= (x1709 x79) 0)))
(assert (x439 x800))
(assert (= (x1709 (+ 1 x976)) (x1709 x976)))
(assert (=> (>= 10000 x52) (= (x1709 x52) 0)))
(assert (x294 45887579694954924622689847950937698470056863744033464196450664576267108643884))
(assert (= x1731 (and x1917 (not x1725))))
(assert (< 10000 (x110 64 x1117 3)))
(assert (= x832 (and (not x1831) x1282)))
(assert (x439 x1881))
(assert (x439 x1287))
(assert (x439 x647))
(assert (not (x294 (x110 64 953417218992365150631206543442508943947348309705 0))))
(assert (= (x1774 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x575))
(assert (x439 x269))
(assert (x439 x368))
(assert (x439 x1929))
(assert (x439 x37))
(assert (x439 x513))
(assert (= (x1457 (x1904 x1845 x137 x1648 x50 x720 x316)) x50))
(assert (< (x110 64 x936 x649) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1365))
(assert (= (x1922 (x110 64 x936 x246)) x246))
(assert (x439 x631))
(assert (x439 x1926))
(assert (x439 x1792))
(assert (x439 x250))
(assert (= x1110 (=> (and (or (and (and (and (not (= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 1461501637330902918203684832716283019655932542975 x297) (= x297 (x985 x1692 x1331 x1020 x286)) (= x1692 (x1190 x187)) (= x1982 (= x918 0)) (= x286 (x1190 (x1131 (+ 96 x187)))) (= (x235 x797) x1809) (<= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1055) (< x1055 x187) (= (x1131 (+ x537 32)) x4) (= (x38 1461501637330902918203684832716283019655932542975 x1809) x918) (not (= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= (x1131 (+ x1055 32)) x187) (= x537 (x1131 (+ x798 32))) (= (x1131 (+ 32 x187)) x798) (<= x1055 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x845 (- x187 32)) x797) (= 128 x1490) (= (x845 (- x187 32)) x1707) (= x1331 (x1190 (x1131 (+ 32 x187)))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1055)) (= x1020 (x1190 (x1131 (+ 64 x187))))) (or (and (not x1982) (and (= x692 x1809) (= 0 x1898) (= x187 x596))) (and (and (= x692 0) (= x596 x187) (= x1898 1)) x1982))) (not x992)) (and x992 (and (= x1898 3) (= x1055 x596) (= x692 0)))) (and (= (x1131 (+ x1055 64)) x515) (= x1785 (x1586 x515)) (= (x1586 x784) x1043) (= (x1131 (+ 32 x16)) x1390) (= (x1586 x1055) x988) (= x784 (x1131 (+ x1055 32))) (= (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x910) x992) (= x16 (x1131 (+ 2 x1055))) (= (x598 66 x988 x1043 x1785) x967))) x848)))
(assert (x439 x1638))
(assert (= x1760 (and x534 x1325)))
(assert (= (x1340 (x110 64 81 x902)) 64))
(assert (x439 x1346))
(assert (= x758 (x1457 (x553 x995 x707 x420 x758 x517))))
(assert (not (x294 (x598 x1845 x1245 x1905 x279))))
(assert (x439 x1563))
(assert (not (x294 (x756 x670 x1439))))
(assert (= (=> (and (and (= (x1131 (+ x1738 x766)) x1424) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1738) (<= x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1762 x1738) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1738)))) (>= 1461501637330902918203684832716283019655932542975 x1816) (= x1651 (x1131 (+ 32 x999))) (= x1811 (x1632 x1124)) (= (x1632 x766) x327) (= (x1632 x943) x139) (= x1762 (x845 (- x522 95))) (= x630 (x845 (- x406 x1450))) (= x943 (x1131 (+ 64 x1424))) (= x1105 (x1131 (+ x795 32))) (= x406 (x1131 (+ x656 x836))) (= (x1632 x1517) x1816) (= (x845 (- x1106 x1424)) x1883) (= x1124 (x1131 (+ x1424 x139))) (or (>= x93 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819835 x93)) (= x1558 (< 0 x1309)) (>= 18446744073709551615 x1811) (= (x1131 (+ 4 x1450)) x1403) (<= x654 57896044618658097711785492504343953926634992332820282019728792003956564819967) (or (<= x1738 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x1738 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x795 (x1131 (+ x327 x766))) (or (<= x327 57896044618658097711785492504343953926634992332820282019728792003956564819835) (>= x327 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x1510 (+ 31 x1811)) (= (x1131 (+ 32 x1623)) x836) (= x999 (x1131 (+ 32 x338))) (= x656 (x38 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1510)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252) (> x139 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x139) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252)) (> x252 x139))) (= x338 (x1131 (+ x1403 32))) (= x595 (x1632 x1105)) (= x1517 (x1131 (+ x766 x93))) (not (= x1883 57896044618658097711785492504343953926634992332820282019728792003956564819999)) (not (= x139 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (or (and (> x1762 x327) (= (<= x327 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x327 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762))) (= x1738 (x1632 x766)) (= (x1632 x766) x93) (= x1623 (x1131 (+ 128 x1403))) (= x522 (x845 (- x1106 x766))) (or (and (<= x1762 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93)) (and (> x1762 x93) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x93) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1762)))) (= x252 (x845 (- x1883 31))) (>= x654 64) (= x1029 (x1131 (+ 32 x1124))) (>= 340282366920938463463374607431768211455 x595) (= (x1131 (+ x836 x1811)) x1869) (not (or (and (> x1029 x138) (= (<= x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1029 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x138) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1029)))) (= x138 (x845 (- x1106 x1811)))) (or (and x1558 (and (= 1 x132) (<= 64 x654) (<= x654 4294967295))) (and (not x1558) (= x1309 x132)))) x1653) x1041))
(assert (x439 x1137))
(assert (x439 x1386))
(assert (= 1 (x1922 (x110 64 443215666480553238610125355434898879895743000821 1))))
(assert (x439 x1489))
(assert (not (x294 (x110 64 x1117 3))))
(assert (=> (<= x1289 10000) (= (x1709 x1289) 0)))
(assert (not (x294 (x110 64 x813 x632))))
(assert (x439 x247))
(assert (x439 x1961))
(assert (x439 x145))
(assert (x439 x406))
(assert (x439 x1537))
(assert (=> (>= 10000 x431) (= 0 (x1709 x431))))
(assert (x439 x372))
(assert (= (x1922 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)) x887))
(assert (x439 x1452))
(assert (not (x294 (x110 64 81 x1089))))
(assert (= x1637 (x1922 (x553 x670 x308 x1637 x1849 x573))))
(assert (=> (>= 10000 x1122) (= (x1709 x1122) 0)))
(assert (= (x1922 (x110 64 x936 x649)) x649))
(assert (= (x1709 x823) (x1709 (+ x823 1))))
(assert (= x1544 (x149 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x294 63076024560530113402979550242307453568063438748328787417531900361828837441551))
(assert (x439 x1837))
(assert (x439 x500))
(assert (x439 x1633))
(assert (x439 x1161))
(assert (x439 x748))
(assert (x439 x1438))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x813 x395)))
(assert (=> (<= x647 10000) (= 0 (x1709 x647))))
(assert (= (x149 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x1044))
(assert (x439 x657))
(assert (x439 x193))
(assert (x439 x308))
(assert (x439 x664))
(assert (=> (>= 10000 x607) (= 0 (x1709 x607))))
(assert (=> (>= 10000 x666) (= 0 (x1709 x666))))
(assert (x439 x455))
(assert (> (x553 x1845 x1050 x1408 x104 x1198) 10000))
(assert (x439 x1245))
(assert (x439 x81))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (=> (>= 10000 x1905) (= 0 (x1709 x1905))))
(assert (x439 x1301))
(assert (=> (<= x1477 10000) (= 0 (x1709 x1477))))
(assert (=> (>= 10000 x1972) (= 0 (x1709 x1972))))
(assert (x439 x833))
(assert (= (x379 (x598 x995 x494 x677 x964)) x494))
(assert (not (x294 (x110 64 x813 x395))))
(assert (= x1895 (x1457 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139))))
(assert (x439 x306))
(assert (x439 x1094))
(assert (x439 x1289))
(assert (x294 22703984782402238635145372884546502928383168074851703611862639686610164121600))
(assert (=> (>= 10000 x1687) (= (x1709 x1687) 0)))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639931) 0))
(assert (< 10000 (x110 64 x1186 4)))
(assert (x439 x615))
(assert (x439 x1370))
(assert (x439 x797))
(assert (x439 x928))
(assert (= x902 (x1922 (x110 64 81 x902))))
(assert (= (x1340 (x110 x413 x225 x1576)) x413))
(assert (x439 x1618))
(assert (x439 x1541))
(assert (x439 x1569))
(assert (= (x1340 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) x856))
(assert (x439 x1742))
(assert (=> (>= 10000 x344) (= (x1709 x344) 0)))
(assert (= x260 (or x1928 x273)))
(assert (x439 x98))
(assert (= (x379 (x1904 x670 x1475 x1069 x1427 x555 x1122)) x1475))
(assert (x294 22260506169142864168419965211860030380910469616735923253374116530085716557824))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x856 x1441 x700 x1288)))
(assert (x439 x1748))
(assert (x439 x731))
(assert (= x199 (x149 (x553 x413 x1500 x1868 x427 x199))))
(assert (=> (>= 10000 x1002) (= (x1709 x1002) 0)))
(assert (= (x1709 (x1904 x856 x1877 x735 x1404 x254 x361)) (x1904 x856 x1877 x735 x1404 x254 x361)))
(assert (x439 x595))
(assert (=> (>= 10000 x1475) (= 0 (x1709 x1475))))
(assert (x439 x924))
(assert (< (x110 x222 x1853 x939) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x349))
(assert (x439 x1869))
(assert (= (x1709 22703984782402238635145372884546502928383168074851703611862639686610164121600) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x553 x1845 x1050 x1408 x104 x1198)))
(assert (x439 x1132))
(assert (= (x1709 x1600) (x1709 (+ 1 x1600))))
(assert (= (x1709 (x110 64 x1186 4)) (x110 64 x1186 4)))
(assert (x439 x533))
(assert (= (x149 (x54 x670 x1314 x301 x253 x852 x1244 x242)) x852))
(assert (x439 x814))
(assert (x439 x802))
(assert (x439 x767))
(assert (= 81 (x379 (x110 64 81 x902))))
(assert (= (=> (= x1227 (> x742 0)) (and (=> (and (= x1953 x942) (not x1227)) x785) (=> (and x1227 (and (not (= x942 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x194 (x1131 (+ 32 x455))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x942) (= x1088 (x1131 (+ x942 32))) (= x324 (x1131 (+ 32 x1088))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x942) (= (x1509 x942) x443) (> x455 x942) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x942)) (<= x942 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1174 (> x443 0)) (= (x1131 (+ x942 96)) x455) (not (= x942 115792089237316195423570985008687907853269984665640564039457584007913129639840)))) (and (=> (and (and (= x272 (x1509 x1088)) (= x1207 (< 32 x443))) x1174) (and (=> (not x1207) x593) (=> (and x1207 (and (= (x1131 (+ x194 32)) x1389) (= (x1617 x1116) x255) (= (x1131 (+ 32 x1088)) x1116) (= (< 64 x443) x259))) (and (=> (not x259) x593) (=> (and (and (= (x1131 (+ x194 64)) x141) (= (> x443 96) x703) (= x368 (x1131 (+ x1088 64))) (= (x396 x368) x444)) x259) (and (=> (not x703) x593) (=> x703 x495))))))) (=> (not x1174) x593))))) x329))
(assert (= x1100 (and x1831 x1282)))
(assert (x439 x587))
(assert (= (x1340 (x553 x1845 x1050 x1408 x104 x1198)) x1845))
(assert (x439 x480))
(assert (x439 x1399))
(assert (x439 x975))
(assert (x439 x1477))
(assert (= (x1340 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)) x222))
(assert (x439 x1017))
(assert (x439 x515))
(assert (x439 x1540))
(assert (x439 x1843))
(assert (x439 x966))
(assert (x439 x1972))
(assert (= (x1340 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) x84))
(assert (x439 x1173))
(assert (not (x294 (x110 x856 x1754 x1489))))
(assert (= (x602 (x1904 x1881 x1477 x418 x808 x712 x476)) x476))
(assert (= x350 (x602 (x1904 x84 x431 x1614 x621 x496 x350))))
(assert (x439 x11))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639844)))
(assert (= (x1709 (x1904 x995 x1022 x285 x344 x1802 x489)) (x1904 x995 x1022 x285 x344 x1802 x489)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)))
(assert (= (x1340 (x598 x413 x430 x866 x666)) x413))
(assert (= x652 (x602 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (x294 24522070412059196110286586012810966081169649004736715519769772467740269871104))
(assert (x439 x742))
(assert (=> (>= 10000 x1274) (= (x1709 x1274) 0)))
(assert (x439 x222))
(assert (x439 x1938))
(assert (< 10000 (x598 x856 x1441 x700 x1288)))
(assert (x439 x1508))
(assert (= (x1709 x1783) (x1709 (+ 1 x1783))))
(assert (= (x602 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) x1539))
(assert (= (x379 (x756 x84 x1767)) x1767))
(assert (= x555 (x149 (x1904 x670 x1475 x1069 x1427 x555 x1122))))
(assert (x439 x1532))
(assert (x439 x1148))
(assert (x439 x705))
(assert (= (x1340 (x553 x413 x1500 x1868 x427 x199)) x413))
(assert true)
(assert (x439 x240))
(assert (x439 x1263))
(assert (= (x598 x413 x430 x866 x666) (x1709 (x598 x413 x430 x866 x666))))
(assert (= x417 (and x888 (not x1939))))
(assert (< 10000 (x1904 x856 x1877 x735 x1404 x254 x361)))
(assert (< 10000 (x54 x413 x415 x1892 x935 x1370 x626 x1834)))
(assert (not (x294 (x756 x1845 x1072))))
(assert (x439 x1416))
(assert (= (x1709 911662625) 0))
(assert (=> (<= x1022 10000) (= (x1709 x1022) 0)))
(assert (= x1037 (and x655 x1146)))
(assert (= (x1340 (x1904 x670 x1475 x1069 x1427 x555 x1122)) x670))
(assert (< 10000 (x110 64 953417218992365150631206543442508943947348309705 0)))
(assert (x439 x930))
(assert (x439 x740))
(assert (= x644 (x1922 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (= x1422 (=> (and (= x150 (x845 (- x1552 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x321)) (= x56 (x1131 (+ 32 x1266))) (= (x1131 (+ 32 x56)) x448) (= x1919 (x1131 (+ x321 32))) (= x773 (x1131 (+ x448 32))) (= x413 (x1277 x321)) (not (= x321 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x1413 (>= 224 x413)) (not (= x321 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (<= x321 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1131 (+ 32 x1919)) x1266) (<= x321 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1005 x321) (= (x1131 (+ 160 x1919)) x1005) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x321) (= x1661 (x1131 (+ 32 x321))) (= (x845 (- x1005 x321)) x1552)) (and (=> (and (= (x825 0) x1459) (= (x1277 x354) x1868) (= x575 (x1277 x210)) (= x780 (ite (= 0 x413) x1459 (ite (>= 32 x413) x456 (ite (>= 64 x413) x1496 (ite (>= 96 x413) x1350 (ite (<= x413 128) x189 (ite (>= 160 x413) x155 (ite (<= x413 192) x1250 (ite (<= x413 224) x1414 x548))))))))) (= x1055 x1005) (= (x1277 x1661) x225) (= x1500 (x1277 x1661)) (= (x1277 x989) x666) (= (x1131 (+ 128 x1661)) x403) (= (x1277 x403) x57) (= (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575) x1414) (= x135 (x1131 (+ x1661 96))) (= x1455 (x1131 (+ x1661 128))) (= x1850 (x1131 (+ 32 x1661))) (= x1268 (x1131 (+ x1661 32))) (= x210 (x1131 (+ x1661 192))) (= (x756 x413 x1979) x456) (= x1987 (x1277 x135)) (= (x1277 x831) x318) (= (x1131 (+ 32 x1661)) x354) (= x215 (x1131 (+ x1661 96))) (= (x1131 (+ 64 x1661)) x1940) (= x156 (x1131 (+ 64 x1661))) (= x1892 (x1277 x1268)) (= (x598 x413 x430 x866 x666) x1350) (= (x1277 x1850) x866) (= x935 (x1277 x1159)) (= (x1277 x156) x1040) (= (x1277 x1770) x369) (= (x1131 (+ 96 x1661)) x589) (= (x1131 (+ x1661 32)) x1784) (= (x1277 x589) x1370) (= x415 (x1277 x1661)) (= (x1131 (+ x1661 64)) x484) (= (x1277 x1455) x626) (= x1770 (x1131 (+ x1661 160))) (= (x54 x413 x415 x1892 x935 x1370 x626 x1834) x1250) (= (x1131 (+ 64 x1661)) x1159) (= (x1131 (+ 128 x1661)) x822) (= x755 x780) (= (x1131 (+ x1661 64)) x989) (= x430 (x1277 x1661)) (= (x1277 x1661) x106) (= x1533 (x1277 x1661)) (= (x1277 x1940) x958) (= x189 (x553 x413 x1500 x1868 x427 x199)) (= x1496 (x110 x413 x225 x1576)) (= x1296 (x1131 (+ x1661 32))) (= (x1277 x1296) x1576) (= (x1277 x822) x830) (= (x1131 (+ x1661 96)) x1938) (= x199 (x1277 x215)) (= x1979 (x1277 x1661)) (= (x1904 x413 x1533 x300 x958 x1987 x57) x155) (= x787 (x1131 (+ x1661 160))) (= x300 (x1277 x1784)) (= x831 (x1131 (+ 32 x1661))) (= x1480 (x1277 x1938)) (= x427 (x1277 x484)) (= x1834 (x1277 x787))) x1110) x1413))))
(assert (x439 x1482))
(assert (x294 103603067176188370116793463780953604340491603117933565163376133325037439549440))
(assert (x439 x1578))
(assert (= 0 (x1709 1461501637330902918203684832716283019655932542975)))
(assert (= (x149 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)) x1755))
(assert (< 10000 (x110 64 443215666480553238610125355434898879895743000821 0)))
(assert (x439 x539))
(assert (= x1969 (=> (= x340 (ite x1047 x1236 x1204)) x340)))
(assert (= x1043 (x1922 (x598 66 x988 x1043 x1785))))
(assert (x439 x1911))
(assert (x439 x1867))
(assert (x439 x252))
(assert (not (x294 (x756 x222 x1753))))
(assert (x439 x1005))
(assert (x439 x1076))
(assert (x439 x57))
(assert (= (x379 (x110 64 x1186 4)) x1186))
(assert (x439 x125))
(assert (=> (>= 10000 x1767) (= (x1709 x1767) 0)))
(assert (=> (>= 10000 x432) (= 0 (x1709 x432))))
(assert (x439 x1360))
(assert (x439 x1983))
(assert (x439 x320))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639870) 0))
(assert (= (x1709 (x553 x84 x578 x1458 x1751 x1980)) (x553 x84 x578 x1458 x1751 x1980)))
(assert (x439 x104))
(assert (x439 x1060))
(assert (x439 x248))
(assert (x439 x447))
(assert (x439 x108))
(assert (x439 x1776))
(assert (x439 x1559))
(assert (x439 x216))
(assert (x294 19198514131333069964808701557143768876432618777570657477111002777175690575872))
(assert (x439 x984))
(assert (not (x294 (x598 x1881 x432 x966 x424))))
(assert (x439 x1051))
(assert (x439 x815))
(assert (x439 x1480))
(assert (x439 x1895))
(assert (not (x294 (x598 66 x988 x1043 x1785))))
(assert (x439 x60))
(assert (x439 x50))
(assert (x439 x106))
(assert (x336 x1338))
(assert (x439 x93))
(assert (< 10000 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)))
(assert (x439 x1730))
(assert (x294 2175550133))
(assert (x439 x977))
(assert (= (x532 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) x1429))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (= x1237 (and x1982 x1736)))
(assert (= 4 (x1922 (x110 64 x1687 4))))
(assert (=> (<= x1480 10000) (= 0 (x1709 x1480))))
(assert (x439 x1025))
(assert (= x1923 (and x259 x1592)))
(assert (= x1845 (x1340 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x439 x1664))
(assert (x439 x321))
(assert (x439 x1872))
(assert (=> (>= 10000 x576) (= 0 (x1709 x576))))
(assert (x439 x555))
(assert (x439 x1230))
(assert (= x809 (x1922 (x54 x856 x567 x809 x752 x1703 x1539 x1429))))
(assert (x439 x1035))
(assert (x439 x197))
(assert (x439 x801))
(assert (= (or x102 x1746) x655))
(assert (x439 x236))
(assert (not (x294 (x54 x856 x567 x809 x752 x1703 x1539 x1429))))
(assert (= (x1709 (x110 x1881 x568 x449)) (x110 x1881 x568 x449)))
(assert (x439 x573))
(assert (> (x553 x1881 x35 x243 x177 x1846) 10000))
(assert (=> (<= x1427 10000) (= 0 (x1709 x1427))))
(assert (= (x1922 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)) x185))
(assert (= x966 (x1922 (x598 x1881 x432 x966 x424))))
(assert (= (x1922 (x110 64 443215666480553238610125355434898879895743000821 0)) 0))
(assert (= (x1709 x343) (x1709 (+ 1 x343))))
(assert (x439 x14))
(assert (= (and x1158 x1218) x1746))
(assert (x439 x1181))
(assert (=> (>= 10000 x1845) (= 0 (x1709 x1845))))
(assert (= (and x1903 (not x1074)) x280))
(assert (=> (<= x1069 10000) (= 0 (x1709 x1069))))
(assert (x439 x1390))
(assert (x439 x290))
(assert (x439 x1706))
(assert (x439 x865))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 953417218992365150631206543442508943947348309705 0)))
(assert (x439 x494))
(assert (x336 1099511627775))
(assert (=> (>= 10000 x1895) (= 0 (x1709 x1895))))
(assert (= x1128 (x149 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139))))
(assert (x439 x1640))
(assert (= (=> (and (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x269 x1559) (not (= x269 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x1945 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x269)) (= x915 (x274 x269)) (= (not (< 1 x742)) x1599) (= x1559 (x1131 (+ x269 32))) (<= x269 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x269 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (and (=> (and (= x1761 x915) (= x1559 x1045)) x776) x1599)) x781))
(assert (x439 x1015))
(assert (=> (>= 10000 x1944) (= (x1709 x1944) 0)))
(assert (= x1931 (and (not x1207) x520)))
(assert (< 10000 (x110 64 x813 x395)))
(assert (= x1907 (and (not x1558) x473)))
(assert (x294 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x439 x1523))
(assert (= 64 (x1340 (x110 64 x180 4))))
(assert (x439 x559))
(assert (= (x1457 (x598 x413 x430 x866 x666)) x666))
(assert (not x1674))
(assert (= x413 (x1340 (x756 x413 x1979))))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639684))
(assert (not (x294 (x598 x222 x906 x1301 x1773))))
(assert (x439 x933))
(assert (x439 x547))
(assert (> (x110 x670 x144 x727) 10000))
(assert (= (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x86)) (= (x1131 (+ 32 x86)) x87) (> x1130 x86) (not (= x86 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x86 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x86) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x733 (not (< 2 x742))) (= (x1131 (+ x86 64)) x1130) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (= x1450 x1130) x1041) x733)) x1324))
(assert (x439 x1608))
(assert (x439 x973))
(assert (x439 x981))
(assert (= x900 (x1922 (x110 x1845 x1230 x900))))
(assert (x439 x568))
(assert (< (x110 64 x936 x1672) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1785 (x1457 (x598 66 x988 x1043 x1785))))
(assert (= x995 (x1340 (x756 x995 x360))))
(assert (> (x110 x84 x542 x574) 10000))
(assert (x439 x427))
(assert (x439 x887))
(assert (x439 x1052))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639806))
(assert (= x1948 (x379 (x756 x1881 x1948))))
(assert (x439 x374))
(assert (x439 x951))
(assert (< 10000 (x110 64 x936 x968)))
(assert (x439 x1075))
(assert (= (and x1852 x107) x1575))
(assert (x439 x227))
(assert (x439 x1269))
(assert (x439 x1775))
(assert (=> (<= x249 10000) (= 0 (x1709 x249))))
(assert (= x968 (x1922 (x110 64 x936 x968))))
(assert (x439 x510))
(assert (= x1569 (x379 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (= (x1709 18446744073709551615) 0))
(assert (= (x1922 (x110 64 x112 4)) 4))
(assert (=> (<= x1748 10000) (= 0 (x1709 x1748))))
(assert (x439 x773))
(assert (x439 x668))
(assert (= (=> (and (= (not (> x1278 4)) x1428) (= (x1520 x1975) x1714) (= (x1131 (+ 32 x1974)) x1399)) (and x1428 (=> (and (= (+ 32 x1975) x1220) (= x1399 x701) (= x170 4)) x1740))) x233))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639839) 0))
(assert (x439 x322))
(assert (x439 x1112))
(assert (not (x294 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (not (x294 (x1904 x84 x431 x1614 x621 x496 x350))))
(assert (= x1740 (=> (and (= x552 (* 32 x1278)) (= x15 (>= 224 x1845)) (= (x1131 (+ 32 x385)) x452) (= x1769 (x845 (- x731 32))) (<= 1 x701) (= x1220 x1630) (= x1431 x701) (= x731 (x845 (- x701 x385))) (= (+ x1684 x552) x1630) (= x170 x1278) (< x385 x701) (= (x1131 (+ x1954 x1279)) x1431) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1431) (= x1954 (* x1278 32)) (<= x385 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 4 x1278) (= x1845 (x605 x385)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x385)) (and (=> (and (= (x605 x1894) x887) (< x701 x321) (= x1247 (x605 x452)) (= x1563 (x1131 (+ 32 x1815))) (= x1905 (x605 x376)) (= x316 (x605 x166)) (= (x1131 (+ x452 32)) x1609) (= (x1131 (+ x452 96)) x1744) (= (x110 x1845 x1230 x900) x791) (= x1978 (x605 x1961)) (= (x605 x248) x1198) (= (x605 x1609) x1408) (= (x605 x947) x279) (= (x1131 (+ x452 64)) x1307) (= (x605 x1003) x1544) (= x757 (x1131 (+ x1098 32))) (= (x605 x452) x1245) (= (x605 x452) x1050) (= (x54 x1845 x204 x887 x1978 x1263 x1188 x606) x1711) (= (x605 x197) x924) (= (x605 x134) x1188) (= x30 (x825 0)) (= (x605 x585) x1514) (= x995 (x1654 x701)) (= (x605 x1779) x50) (= x335 (x845 (- x321 x701))) (= x482 (x1131 (+ x452 64))) (= (x1131 (+ 96 x452)) x1003) (= x545 (x605 x886)) (= (x1131 (+ 32 x757)) x526) (= (x605 x1307) x1786) (= x321 (x1131 (+ x1098 192))) (= (x1131 (+ x701 32)) x1098) (= x720 (x605 x1744)) (= (x605 x1549) x606) (= x166 (x1131 (+ 128 x452))) (= x587 (x1131 (+ 32 x452))) (= x1072 (x605 x452)) (= x1648 (x605 x1780)) (= x1961 (x1131 (+ x452 64))) (= (x605 x1067) x900) (= (ite (= 0 x1845) x30 (ite (<= x1845 32) x1871 (ite (<= x1845 64) x791 (ite (>= 96 x1845) x121 (ite (<= x1845 128) x1819 (ite (<= x1845 160) x271 (ite (<= x1845 192) x1711 (ite (<= x1845 224) x1572 x1196)))))))) x838) (= (x1904 x1845 x137 x1648 x50 x720 x316) x271) (= (x1131 (+ 32 x701)) x959) (= (x1131 (+ x452 32)) x376) (or (and (<= x701 115792089237316195423570985008687907853269984665640564039457584007913129639711) (>= x701 1)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x701) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639714 x701))) (= (x1131 (+ 32 x764)) x1815) (= x248 (x1131 (+ x452 96))) (= x121 (x598 x1845 x1245 x1905 x279)) (= x1819 (x553 x1845 x1050 x1408 x104 x1198)) (= x1067 (x1131 (+ 32 x452))) (= x1780 (x1131 (+ 32 x452))) (= x1549 (x1131 (+ x452 160))) (= (x605 x482) x104) (= x878 (x1131 (+ x452 96))) (= x886 (x1131 (+ x452 192))) (= x1572 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)) (= x708 (>= 224 x995)) (= x1263 (x605 x878)) (= x204 (x605 x452)) (= (x1131 (+ x452 64)) x1779) (= (x605 x452) x1230) (= (x1131 (+ x452 128)) x134) (= (ite (not (= 0 x933)) 1 0) x312) (= (x845 (- x335 32)) x1267) (= (x1131 (+ 32 x526)) x764) (= (x605 x587) x624) (= x1894 (x1131 (+ x452 32))) (= (x1131 (+ 160 x452)) x197) (= x1871 (x756 x1845 x1072)) (= x947 (x1131 (+ 64 x452))) (= (x605 x452) x137) (= x585 (x1131 (+ x452 128)))) (and x708 (=> (and (and (= (x1131 (+ 96 x959)) x1537) (= x517 (x1654 x1601)) (= x769 (x1654 x959)) (= (x1654 x303) x1802) (= (x1131 (+ x959 128)) x751) (= x420 (x1654 x1344)) (= x303 (x1131 (+ x959 96))) (= (x1654 x193) x344) (= x930 (x1131 (+ x959 128))) (= (x1654 x959) x360) (= x1681 (x1654 x959)) (= x758 (x1654 x669)) (= (x1654 x751) x60) (= (x825 0) x860) (= x705 (x1654 x855)) (= (x1131 (+ x959 96)) x1601) (= x1918 (ite (= x995 0) x860 (ite (>= 32 x995) x264 (ite (>= 64 x995) x1615 (ite (>= 96 x995) x196 (ite (<= x995 128) x730 (ite (<= x995 160) x70 (ite (<= x995 192) x1814 (ite (<= x995 224) x1758 x1836))))))))) (= x70 (x1904 x995 x1022 x285 x344 x1802 x489)) (= (x1654 x416) x1274) (= x707 (x1654 x959)) (= (x1654 x959) x1022) (= x669 (x1131 (+ x959 64))) (= (x1131 (+ x959 128)) x1238) (= (x1131 (+ 32 x959)) x85) (= (x598 x995 x494 x677 x964) x196) (= x1068 (x1654 x386)) (= (x1654 x507) x1639) (= (x1131 (+ x959 96)) x386) (= x447 (x1654 x27)) (= (x1654 x930) x628) (= (x1131 (+ 32 x959)) x833) (= x494 (x1654 x959)) (= (x1131 (+ 32 x959)) x1344) (= x302 (x1654 x913)) (= (x1654 x833) x79) (= (x756 x995 x360) x264) (= (x1131 (+ x959 32)) x1452) (= x1814 (x54 x995 x769 x447 x1274 x909 x628 x480)) (= (= x801 x1550) x534) (= x677 (x1654 x85)) (= x1615 (x110 x995 x802 x79)) (= (x1654 x959) x802) (= (x1131 (+ 64 x959)) x193) (= x507 (x1131 (+ x959 160))) (= (x1131 (+ 160 x959)) x646) (= (x1131 (+ 64 x959)) x1682) (= x913 (x1131 (+ x959 32))) (= x1548 (x1654 x1682)) (= x855 (x1131 (+ x959 192))) (= (x1654 x501) x964) (= x1758 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705)) (= x480 (x1654 x646)) (= (x1654 x1452) x285) (= (x1654 x1238) x489) (= x416 (x1131 (+ x959 64))) (= (x553 x995 x707 x420 x758 x517) x730) (= (x1131 (+ 32 x959)) x27) (= x909 (x1654 x1537)) (= x501 (x1131 (+ 64 x959)))) (or (and (= (ite x534 1 0) x451) (not x534)) (and (= (ite (= x1351 x611) 1 0) x451) x534))) x40))) x15))))
(assert (x439 x1371))
(assert (= (x379 (x598 x1881 x432 x966 x424)) x432))
(assert (= x608 (or x1760 x1727)))
(assert (= (x379 (x110 64 x180 4)) x180))
(assert (not (x294 (x110 x1845 x1230 x900))))
(assert (> (x110 64 x112 4) 10000))
(assert (x439 x1859))
(assert (x439 x855))
(assert (= 0 (x1709 2175550133)))
(assert (> (x1904 x413 x1533 x300 x958 x1987 x57) 10000))
(assert (= (=> (and (and (= (x1131 (+ x1045 64)) x1460) (<= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x1074 (= x933 0)) (not (= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x1761 340282366920938463463374607431768211455) (>= x1761 1) (< x1045 x1460) (<= x1045 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1045)) (or (and (and (<= x223 340282366920938463463374607431768211455) (= x1761 x759) (<= 1 x223) (>= 340282366920938463463374607431768211454 x229) (= x223 (+ x229 x1761)) (= x229 (x1183 x442))) (not x1074)) (and x1074 (and (= x1223 (+ x1761 x1001)) (>= 340282366920938463463374607431768211454 x1001) (>= x1223 1) (>= 340282366920938463463374607431768211455 x1223) (= x1001 (x461 x1)) (= x1761 x759) (= x1 (+ x442 1)))))) x817) x776))
(assert (x439 x727))
(assert (x439 x752))
(assert (= (x1922 (x553 x222 x1322 x711 x1154 x74)) x711))
(assert (x439 x454))
(assert (> (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545) 10000))
(assert (= (x1922 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x318))
(assert (= (x379 (x553 x856 x1377 x214 x563 x934)) x1377))
(assert (= (x1709 22264039863272420937079131806861516217942124584529674491290359742488301797376) 0))
(assert (x439 x331))
(assert (x439 x1068))
(assert (= 64 (x1340 (x110 64 x813 x1512))))
(assert (x439 x2))
(assert (x439 x990))
(assert (x439 x1242))
(assert (= x391 (and x393 x1812)))
(assert (=> (<= x1681 10000) (= 0 (x1709 x1681))))
(assert (= (x149 (x1904 x995 x1022 x285 x344 x1802 x489)) x1802))
(assert (x439 x204))
(assert (= (and x1037 (not x1419)) x974))
(assert (x439 x229))
(assert (x439 x199))
(assert (= (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545) (x1709 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545))))
(assert (x439 x327))
(assert (x439 x654))
(assert (= (x1709 (x598 x84 x1573 x894 x541)) (x598 x84 x1573 x894 x541)))
(assert (= x1672 (x1922 (x110 64 x936 x1672))))
(assert (= (and (not x1915) x1163) x1564))
(assert (= x52 (x1774 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (x439 x1849))
(assert (x439 x1162))
(assert (x439 x1834))
(assert (x439 x434))
(assert (=> (<= x771 10000) (= (x1709 x771) 0)))
(assert (= (x149 (x553 x1845 x1050 x1408 x104 x1198)) x1198))
(assert (x439 x163))
(assert (= (and x806 x1174) x520))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (< (x54 x670 x1314 x301 x253 x852 x1244 x242) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1235 x1845 x1247 x624 x1786 x1544 x1514 x924 x545)))
(assert (= x239 (and x674 x1182)))
(assert (= 4 (x1922 (x110 64 x180 4))))
(assert (=> (>= 10000 x1269) (= 0 (x1709 x1269))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x54 x1881 x366 x25 x1748 x1556 x1859 x771)))
(assert (= x1512 (x1922 (x110 64 x813 x1512))))
(assert (x439 x1121))
(assert (=> (<= x1980 10000) (= 0 (x1709 x1980))))
(assert (= x300 (x1922 (x1904 x413 x1533 x300 x958 x1987 x57))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 x1857 x1111)))
(assert (=> (<= x628 10000) (= 0 (x1709 x628))))
(assert (= x813 (x379 (x110 64 x813 x632))))
(assert (x439 x1247))
(assert (x439 x87))
(assert (< 10000 (x598 x1845 x1245 x1905 x279)))
(assert (= (and x1923 (not x703)) x931))
(assert (x439 x737))
(assert (x439 x862))
(assert (= x936 (x379 (x110 64 x936 x649))))
(assert (= (x1709 (+ 1 x690)) (x1709 x690)))
(assert (= (and x1047 x1138) x39))
(assert (x439 x314))
(assert (= (x602 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)) x1216))
(assert (x294 953417218992365150631206543442508943947348309705))
(assert (x439 x1533))
(assert (=> (>= 10000 x1576) (= 0 (x1709 x1576))))
(assert (x439 x1739))
(assert (x439 x885))
(assert (= x1154 (x1457 (x553 x222 x1322 x711 x1154 x74))))
(assert (= 64 (x1340 (x110 64 x1687 3))))
(assert (not (x294 (x1904 x222 x1569 x644 x1808 x1379 x652))))
(assert (x439 x1705))
(assert (x439 x697))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639715))
(assert (= (x379 (x1904 x413 x1533 x300 x958 x1987 x57)) x1533))
(assert (=> (>= 10000 x939) (= 0 (x1709 x939))))
(assert (=> (<= x1541 10000) (= (x1709 x1541) 0)))
(assert (not (x294 (x110 64 x1687 3))))
(assert (< 10000 (x1904 x1845 x137 x1648 x50 x720 x316)))
(assert (= x1485 (=> (and (= 1 x1077) (= (x38 1461501637330902918203684832716283019655932542975 x692) x1832) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x596) (= (+ x1376 1) x258) (<= 1 x1857) (= (x110 64 x1687 4) x1376) (= (x1131 (+ 32 x596)) x1049) (>= 1461501637330902918203684832716283019655932542975 x1857) (= x1737 (x1131 (+ x1287 32))) (= x1077 (ite (= x1304 x1832) (ite (not (= (x38 1461501637330902918203684832716283019655932542975 x692) 0)) 1 0) (ite (= x1304 x1832) 1 0))) (= (x1515 x258) x359) (or (and (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639806) (>= x596 115792089237316195423570985008687907853269984665640564039457584007913129639715)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x596) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639711 x596) (and (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639869) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x596))) (= (x1131 (+ x2 32)) x1287) (> x1737 x590) (= x1636 (x1131 (+ x811 32))) (or (>= x596 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639711) (and (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639806) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x596)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639869 x596) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x596))) (= (x1273 x590) x84) (= (x1131 (+ 32 x590)) x1691) (= x209 9) (= x2 (x1131 (+ 32 x590))) (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639932) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639932 x596) (= x590 (x1131 (+ 64 x811))) (= (x845 (- x1386 32)) x127) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639869 x596) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x596)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639806 x596) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639715 x596)) (<= x596 115792089237316195423570985008687907853269984665640564039457584007913129639711) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x596)) (= x811 (x1131 (+ 64 x596))) (> x590 x811) (< x596 x811) (= (x845 (- x1737 x590)) x1386) (= x1467 (>= 224 x84))) (and (=> (and (= (x1273 x1691) x1573) (= (x1273 x1691) x576) (= (x1131 (+ 128 x1691)) x1136) (= (x598 x84 x1573 x894 x541) x1694) (= (x1273 x518) x1486) (= (x1131 (+ 128 x1691)) x828) (= (x1273 x635) x1614) (= (x1273 x1691) x542) (= (x1131 (+ x1691 96)) x1157) (= x884 (x825 0)) (= (x1273 x1691) x1767) (= x880 (x1131 (+ x1691 96))) (= (x1273 x581) x861) (= (x1273 x1346) x350) (= x227 (x1273 x1136)) (= x1980 (x1273 x880)) (= (x1448 x1737) x222) (= x583 (x1131 (+ 64 x1691))) (= (x1273 x941) x1751) (= x814 (x1131 (+ x1691 32))) (= x772 (x1273 x1157)) (= x453 (x1273 x1830)) (= (x1273 x1464) x1924) (= x1269 (x1273 x1673)) (or (and (<= x1737 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639844 x1737)) (and (>= x1737 3) (<= x1737 94)) (and (>= 157 x1737) (>= x1737 98)) (and (<= 161 x1737) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639839 x1737))) (= x621 (x1273 x218)) (= x1464 (x1131 (+ 64 x1691))) (= x1616 (x1904 x84 x431 x1614 x621 x496 x350)) (= x1547 (x756 x84 x1767)) (= (x1273 x1691) x431) (= x786 (x110 x84 x542 x574)) (= (x1131 (+ 32 x1691)) x314) (= x1625 (x1131 (+ 32 x1737))) (= (x1131 (+ x1691 32)) x984) (= x607 (x1273 x1691)) (= (x1131 (+ 64 x1691)) x218) (= x1830 (x1131 (+ x1691 32))) (= x990 (x845 (- x1793 32))) (= x578 (x1273 x1691)) (= x1032 (x1131 (+ x1625 32))) (= x496 (x1273 x145)) (= x581 (x1131 (+ 160 x1691))) (= x1493 (x54 x84 x576 x926 x1269 x364 x227 x1209)) (= (x1131 (+ 96 x1691)) x145) (= x1006 (<= x222 224)) (= x7 (x1131 (+ x1691 160))) (= x463 (x1273 x828)) (= x574 (x1273 x314)) (= (x1131 (+ 96 x1691)) x571) (= (x553 x84 x578 x1458 x1751 x1980) x1046) (= (x1131 (+ 128 x1691)) x1346) (= (x1273 x984) x1458) (< x1737 x118) (= x373 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) (= x894 (x1273 x814)) (= x1673 (x1131 (+ x1691 64))) (= x1793 (x845 (- x118 x1737))) (= (x1273 x7) x1209) (= x1867 (x1131 (+ 32 x1737))) (= x518 (x1131 (+ 192 x1691))) (= x487 (ite (= 0 x84) x884 (ite (>= 32 x84) x1547 (ite (>= 64 x84) x786 (ite (>= 96 x84) x1694 (ite (<= x84 128) x1046 (ite (>= 160 x84) x1616 (ite (>= 192 x84) x1493 (ite (<= x84 224) x373 x1262))))))))) (= x116 (x1131 (+ 32 x1691))) (= x635 (x1131 (+ 32 x1691))) (= x926 (x1273 x116)) (= x364 (x1273 x571)) (= (x1273 x583) x541) (= (x1131 (+ x1691 64)) x941) (= (x1131 (+ x1032 32)) x118)) (and x1006 (=> (and (= (x1131 (+ x1867 32)) x839) (= x899 (x1131 (+ 160 x1867))) (= (x1448 x653) x1773) (= x1139 (x1448 x643)) (= x864 (x110 x222 x1853 x939)) (= x185 (x1448 x1851)) (= x653 (x1131 (+ 64 x1867))) (= x1797 (x1448 x1867)) (= x1557 (x1131 (+ x1867 64))) (= (x1448 x81) x1216) (= (x756 x222 x1753) x726) (= (x1448 x160) x644) (= (x1448 x309) x1972) (= (x1448 x975) x1154) (= x996 (x1131 (+ 4 x118))) (= (x1448 x1557) x1541) (= x1319 (x1131 (+ x460 32))) (= x1569 (x1448 x1867)) (= (x1131 (+ x1364 32)) x592) (= (x54 x222 x1797 x185 x1895 x1128 x1216 x1139) x554) (= x1568 (x1131 (+ x1867 32))) (= (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52) x600) (= x267 (x1131 (+ 128 x1867))) (= x623 (x1847 128)) (= (ite (= x222 0) x1502 (ite (>= 32 x222) x726 (ite (>= 64 x222) x864 (ite (<= x222 96) x89 (ite (<= x222 128) x1031 (ite (>= 160 x222) x946 (ite (>= 192 x222) x554 (ite (<= x222 224) x600 x998)))))))) x1932) (= x89 (x598 x222 x906 x1301 x1773)) (= x1720 (x1131 (+ 32 x1319))) (= (x1448 x839) x939) (= (x1131 (+ 96 x1867)) x1440) (= x1222 (x1131 (+ 96 x1867))) (= (x1131 (+ x1867 32)) x1851) (= x711 (x1448 x842)) (= (x1448 x1222) x1755) (= x1322 (x1448 x1867)) (= (x1448 x1840) x1301) (= x1128 (x1448 x1833)) (= (x1448 x533) x52) (= (x1131 (+ 128 x996)) x1364) (= (x1448 x1440) x74) (= (x1131 (+ x1867 128)) x309) (= (x1448 x267) x652) (= x949 (< 0 x623)) (= x1502 (x825 0)) (= x975 (x1131 (+ x1867 64))) (= x1808 (x1448 x1952)) (= x842 (x1131 (+ x1867 32))) (= x460 (x1131 (+ 32 x996))) (= (x1448 x1697) x1895) (= (x1448 x899) x524) (= (x1131 (+ 96 x1867)) x1946) (= x1379 (x1448 x1946)) (= (x1131 (+ x1867 32)) x1840) (= (x1448 x1867) x1853) (= (x553 x222 x1322 x711 x1154 x74) x1031) (= (x1904 x222 x1569 x644 x1808 x1379 x652) x946) (= (x1448 x1867) x906) (= (x1448 x1867) x1753) (= (x1448 x1568) x190) (= (x1131 (+ x1867 32)) x160) (= (x1131 (+ 64 x1867)) x1697) (= (x1131 (+ x1867 192)) x533) (= x1777 (x1448 x1867)) (= x1833 (x1131 (+ 96 x1867))) (= x1952 (x1131 (+ x1867 64))) (= (x1131 (+ 160 x1867)) x643) (= (x1131 (+ x1867 128)) x81)) (and (=> (not x949) x169) (=> (and x949 (and (= (> x623 32) x441) (= x1312 (x710 160)))) (and (=> (not x441) x169) (=> (and x441 (and (= (< 64 x623) x393) (= (x1131 (+ x592 32)) x1608) (= x928 (x929 192)))) (and (=> (and (and (= (x1131 (+ x592 64)) x213) (= (x744 224) x298) (= x88 (< 96 x623))) x393) (and (=> (not x88) x169) (=> x88 x1973))) (=> (not x393) x169))))))))) x1467))))
(assert (= (x602 (x54 x995 x769 x447 x1274 x909 x628 x480)) x628))
(assert (= x1689 (x532 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249))))
(assert (= x988 (x379 (x598 66 x988 x1043 x1785))))
(assert (= x25 (x1922 (x54 x1881 x366 x25 x1748 x1556 x1859 x771))))
(assert (x294 3168472768))
(assert (x439 x1548))
(assert (=> (<= x1786 10000) (= 0 (x1709 x1786))))
(assert (x439 x415))
(assert (x439 x1660))
(assert (= (=> (and (and (= (= x539 0) x1419) (<= 1 x1910) (= x1203 false) (= x1355 false) (= 68 x51) (>= 127 x146) (>= 127 x1150) (= (x1177 x614) x859) (= 36 x1553) (>= 127 x1150) (= false x1449) (= x1909 false) (= 729466174051048026939049150500379070045048658665 x37) (= x1876 false) (= 128 x732) (= x1913 2175550133) (= (x1185 x801) x1910) (<= x1365 127) (= x1170 (x1185 x1011)) (= x1042 false) (= x124 (x1185 x1936)) (= x613 (x717 256)) (>= 127 x1365) (= 1551562514 x1508) (= x395 (x110 64 729466174051048026939049150500379070045048658665 0)) (= x1497 (x1185 x1011)) (<= x250 127) (= x1381 x306) (= x1186 x952) (>= x1170 1) (= x1300 x306) (= false x724) (= x1075 729466174051048026939049150500379070045048658665) (= x337 (x333 x871)) (<= 1 x124) (= (x717 288) x813) (= false x1649) (<= 1 x1213) (= (x110 64 x813 x395) x614) (= false x738) (= 85963009616197036880240088340724629170983710335684291091497906406952890531840 x944) (= false x59) (= x157 x1300) (= (x110 64 x1186 4) x871) (<= x146 127) (= x1303 false) (= x613 x1219) (<= 1 x1497) (= false x1443) (= x1213 (x1185 x1011)) (= 36 x1492) (= (+ x871 1) x1666) (>= 16777215 x337) (= (x1473 128) x539) (= false x1099) (= 128 x805) (= x157 x1633) (= x1253 3188545240) (= 58652715557392481136322917363278564085642169142198350659161099264462031945728 x697) (>= 127 x250) (= (x1515 x1666) x1127) (= x813 x1381) (= x566 4067465820) (= x1935 false)) (and (= x1505 x1091) (= x1562 x1505) (= x1246 36) (= x952 x1091))) (and (=> x1419 x384) (=> (and (and (= x1417 false) (= (x110 64 443215666480553238610125355434898879895743000821 0) x1512) (= false x1668) (>= 127 x1900) (= false x1574) (= x800 (x1177 x850)) (>= x467 1) (= x850 (x110 64 x813 x1512)) (<= x1900 127) (= 443215666480553238610125355434898879895743000821 x1763) (= x1555 68) (= x171 224) (= false x1466) (= (x1012 224) x11) (= x438 2175550133) (= x865 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= x157 x713) (= x1123 (= x11 0)) (= 443215666480553238610125355434898879895743000821 x775) (= (x1185 x1936) x467)) (not x1419)) (and (=> (and (and (= false x1942) (>= x1229 1) (= 68 x486) (= (x173 320) x1436) (= x1097 (= 0 x1436)) (= x1722 953417218992365150631206543442508943947348309705) (= x1229 (x1185 x1936)) (= x1193 953417218992365150631206543442508943947348309705) (= x977 (x1177 x1259)) (>= 127 x1062) (= x857 58652715557392481136322917363278564085642169142198350659161099264462031945728) (= x1798 false) (= x1679 2175550133) (= x1259 (x110 64 x813 x342)) (= false x1717) (<= x1062 127) (= x1368 320) (= x881 false) (= (x110 64 953417218992365150631206543442508943947348309705 0) x342) (= x331 x157)) (not x1123)) (and (=> (and (and (= x472 85421856841599162343179548931066850070836787616102889281506983661126589349888) (= x682 100) (= x24 x157) (= x1699 (> x788 0)) (= 443215666480553238610125355434898879895743000821 x1870) (= x1318 false) (= x951 (x1185 x1936)) (= x330 (x1184 x1453)) (<= 1 x951) (>= 127 x1880) (= x1612 false) (= 81 x295) (= x1628 416) (= (x119 416) x788) (= x1261 false) (= false x414) (= x1089 (x110 64 x813 x632)) (<= x1880 127) (= 3168472768 x1540) (= x1482 443215666480553238610125355434898879895743000821) (= x1453 (x110 64 81 x1089)) (= (x110 64 443215666480553238610125355434898879895743000821 1) x632)) (not x1097)) (and (=> (not x1699) x384) (=> (and x1699 (and (= x1551 x1844) (= x419 x1579) (= x1258 x77) (= x743 x65) (= 1 x53) (= x1402 x1054))) x315))) (=> x1097 x384))) (=> x1123 x384))))) x179))
(assert (= (and x115 (not x1141)) x1326))
(assert (=> (<= x1050 10000) (= 0 (x1709 x1050))))
(assert (=> (<= x1644 10000) (= (x1709 x1644) 0)))
(assert (= x1370 (x149 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (= x1947 (x602 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (=> (<= x1539 10000) (= (x1709 x1539) 0)))
(assert (= x670 (x1340 (x54 x670 x1314 x301 x253 x852 x1244 x242))))
(assert (x439 x1568))
(assert (< (x598 x84 x1573 x894 x541) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x255))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639743) 0))
(assert (x439 x1139))
(assert (=> (>= 10000 x300) (= (x1709 x300) 0)))
(assert (< (x1904 x1845 x137 x1648 x50 x720 x316) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639715) 0))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639931))
(assert (= (x1922 (x1904 x856 x1877 x735 x1404 x254 x361)) x735))
(assert (= x1853 (x379 (x110 x222 x1853 x939))))
(assert (=> (<= x1648 10000) (= 0 (x1709 x1648))))
(assert (=> (>= 10000 x1853) (= (x1709 x1853) 0)))
(assert (= (x1340 (x598 x1845 x1245 x1905 x279)) x1845))
(assert (= (x379 (x110 64 x1117 3)) x1117))
(assert (= (x1922 (x110 64 x813 x395)) x395))
(assert (x439 x1842))
(assert (= (x1457 (x598 x995 x494 x677 x964)) x964))
(assert (=> (>= 10000 x1154) (= 0 (x1709 x1154))))
(assert (x439 x701))
(assert (= (x1709 39095828447348766818467541868648093896559026261938444753180772323039453799525) 0))
(assert (x294 85421856841599162343179548931066850070836787616102889281506983661126589349888))
(assert (x439 x1142))
(assert (x439 x51))
(assert (> (x110 x413 x225 x1576) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x553 x413 x1500 x1868 x427 x199)))
(assert (= x793 (and x608 (not x572))))
(assert (< 10000 (x553 x413 x1500 x1868 x427 x199)))
(assert (x294 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= (x1340 (x54 x222 x1797 x185 x1895 x1128 x1216 x1139)) x222))
(assert (=> (>= 10000 x1198) (= 0 (x1709 x1198))))
(assert (x439 x1098))
(assert (= x57 (x602 (x1904 x413 x1533 x300 x958 x1987 x57))))
(assert (= x1439 (x379 (x756 x670 x1439))))
(assert (< 10000 (x110 64 x1687 4)))
(assert (x439 x1114))
(assert (= (and x441 x1721) x1812))
(assert (x294 51755322175217624492750805572474109157238378692794855914282927279451288895488))
(assert (= x1849 (x1457 (x553 x670 x308 x1637 x1849 x573))))
(assert (=> (<= x1755 10000) (= 0 (x1709 x1755))))
(assert (x439 x137))
(assert (= (x149 (x1235 x856 x377 x1078 x500 x777 x1644 x1689 x249)) x777))
(assert (= x1434 (and x319 (not x1383))))
(assert (x439 x1461))
(assert (x439 x219))
(assert (not (x294 (x1235 x995 x1681 x302 x1548 x1068 x60 x1639 x705))))
(assert (x439 x1648))
(assert (=> (>= 10000 x1859) (= 0 (x1709 x1859))))
(assert (x439 x1603))
(assert (> (x756 x856 x151) 10000))
(assert (x439 x1101))
(assert (= (x379 (x110 64 x813 x395)) x813))
(assert (< 10000 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)))
(assert (=> (>= 10000 x642) (= (x1709 x642) 0)))
(assert (=> (<= x415 10000) (= 0 (x1709 x415))))
(assert (= x792 (x379 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944))))
(assert (x439 x1309))
(assert (x439 x1127))
(assert (= x883 (x379 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (x439 x1280))
(assert (x439 x135))
(assert (= (x1709 (x110 64 x1687 3)) (x110 64 x1687 3)))
(assert (= (x1709 (x756 x1881 x1948)) (x756 x1881 x1948)))
(assert (x439 x1071))
(assert (= (x1922 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52)) x190))
(assert (x439 x1164))
(assert (x439 x210))
(assert (= (x1709 52672081143094129087634851003622940732604441515226977473621344926390909140992) 0))
(assert (= (x379 (x1904 x84 x431 x1614 x621 x496 x350)) x431))
(assert (= (x1709 x442) (x1709 (+ x442 1))))
(assert (x439 x36))
(assert (x439 x859))
(assert (< 10000 (x553 x670 x308 x1637 x1849 x573)))
(assert (x439 x1246))
(assert (= (x1709 (x110 x413 x225 x1576)) (x110 x413 x225 x1576)))
(assert (=> (>= 10000 x1777) (= (x1709 x1777) 0)))
(assert (x439 x1229))
(assert (x439 x1551))
(assert (= x1846 (x149 (x553 x1881 x35 x243 x177 x1846))))
(assert (not (x294 (x110 64 x936 x1672))))
(assert (x439 x1003))
(assert (x439 x1780))
(assert (x439 x1691))
(assert (= (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x439 x1436))
(assert (x439 x1026))
(assert (=> (>= 10000 x1078) (= (x1709 x1078) 0)))
(assert (x439 x794))
(assert (x294 16777215))
(assert (x439 x1196))
(assert (=> (>= 10000 x279) (= (x1709 x279) 0)))
(assert (x439 x301))
(assert (= (x1709 1099511627775) 0))
(assert (< (x553 x856 x1377 x214 x563 x934) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1945))
(assert (x439 x1519))
(assert (= (x110 64 x813 x1512) (x1709 (x110 64 x813 x1512))))
(assert (=> (>= 10000 x242) (= 0 (x1709 x242))))
(assert (x439 x241))
(assert (= (and x1255 x529) x400))
(assert (= x1877 (x379 (x1904 x856 x1877 x735 x1404 x254 x361))))
(assert (not (x294 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486))))
(assert (x439 x700))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x598 x1881 x432 x966 x424)))
(assert (= (and (not x1123) x974) x667))
(assert (x439 x279))
(assert (= (and (not x584) x1442) x475))
(assert (x439 x1053))
(assert (x439 x111))
(assert (x439 x166))
(assert (x439 x1193))
(assert (x439 x1266))
(assert (x439 x5))
(assert (= (x532 (x54 x995 x769 x447 x1274 x909 x628 x480)) x480))
(assert (= (or x1907 x799) x529))
(assert (< (x110 64 443215666480553238610125355434898879895743000821 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1315))
(assert (x439 x1987))
(assert (x439 x243))
(assert (x439 x841))
(assert (x439 x883))
(assert (x439 x1268))
(assert (x439 x1262))
(assert (= 0 (x1709 115792089237316195423570985008687907853269984665640564039457584007913129639684)))
(assert (= (x1922 (x598 x670 x1729 x1392 x234)) x1392))
(assert (x439 x302))
(assert (x439 x116))
(assert (x439 x493))
(assert (x439 x506))
(assert (=> (>= 10000 x1139) (= 0 (x1709 x1139))))
(assert (=> (<= x995 10000) (= 0 (x1709 x995))))
(assert (x439 x1851))
(assert (= (=> (and (= x1488 (ite (not (= x320 0)) 1 0)) (= false x739) (= x217 false) (= x55 (not (= 0 x1488))) (= x528 false) (= x55 x1236) (= false x401) (= x1890 x1204)) x1969) x661))
(assert (= (x149 (x54 x856 x567 x809 x752 x1703 x1539 x1429)) x1703))
(assert (= x1868 (x1922 (x553 x413 x1500 x1868 x427 x199))))
(assert (x439 x1809))
(assert (= (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20) (x1709 (x1235 x670 x883 x392 x1002 x1638 x1947 x1315 x20))))
(assert (x439 x1567))
(assert (= (=> (and (= (x1481 256) x1465) (= x1405 (not (< 128 x623))) (= x1652 (x1131 (+ 96 x592)))) (and x1405 x169)) x1973))
(assert (x439 x643))
(assert (x439 x220))
(assert (x439 x676))
(assert (x439 x1144))
(assert (x439 x1720))
(assert (= (=> (and (= (< 0 (ite (= x746 0) x746 1)) x126) (or (and (= x320 1) x126) (and (= 0 x320) (not x126)))) x661) x986))
(assert (= (and x1470 (not x1227)) x688))
(assert (x439 x706))
(assert (= (x602 (x1235 x84 x607 x453 x1924 x772 x463 x861 x1486)) x463))
(assert (x439 x522))
(assert (x439 x354))
(assert (x439 x526))
(assert (=> (>= 10000 x758) (= (x1709 x758) 0)))
(assert (=> (<= x1556 10000) (= 0 (x1709 x1556))))
(assert (=> (<= x496 10000) (= (x1709 x496) 0)))
(assert (x439 x782))
(assert (= (x1340 (x1235 x1881 x792 x1959 x125 x1044 x642 x1866 x1944)) x1881))
(assert (x439 x679))
(assert (= x1759 (or x904 x1670)))
(assert (x1856 x692))
(assert (x439 x1566))
(assert (x439 x223))
(assert (x439 x641))
(assert (= x935 (x1457 (x54 x413 x415 x1892 x935 x1370 x626 x1834))))
(assert (= (x602 (x1235 x413 x106 x318 x1040 x1480 x830 x369 x575)) x830))
(assert (= (x149 (x553 x84 x578 x1458 x1751 x1980)) x1980))
(assert (= (x379 (x598 x413 x430 x866 x666)) x430))
(assert (x439 x1117))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 64 81 x902)))
(assert (=> (>= 10000 x621) (= (x1709 x621) 0)))
(assert (=> (<= x1846 10000) (= (x1709 x1846) 0)))
(assert (= (x1340 (x756 x1845 x1072)) x1845))
(assert (> (x110 x1881 x568 x449) 10000))
(assert (x439 x1104))
(assert (=> (<= x813 10000) (= 0 (x1709 x813))))
(assert (not (x294 (x1235 x222 x1777 x190 x1541 x1755 x1972 x524 x52))))
(assert (x439 x1661))
(assert (> (x1904 x670 x1475 x1069 x1427 x555 x1122) 10000))
(assert (x439 x947))
(assert (x439 x1901))
(assert (x439 x403))
(assert (x439 x263))
(assert (=> (>= 10000 x1638) (= (x1709 x1638) 0)))
(assert (x294 1551562514))
(assert (x294 58652715557392481136322917363278564085642169142198350659161099264462031945728))
(assert (x439 x249))
(assert (= x1903 (or x832 x1192)))
(assert (x439 x1698))
(assert (=> (<= x777 10000) (= 0 (x1709 x777))))
(assert (= (x1709 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (= (x553 x222 x1322 x711 x1154 x74) (x1709 (x553 x222 x1322 x711 x1154 x74))))
(assert (x439 x1682))
(assert (= (x379 (x553 x84 x578 x1458 x1751 x1980)) x578))
(assert (=> (<= x966 10000) (= 0 (x1709 x966))))
(assert (=> (<= x1978 10000) (= (x1709 x1978) 0)))
(assert (x439 x849))
(assert (= (and x1558 x473) x799))
(assert (x439 x1933))
(assert (x439 x1576))
(assert (x439 x1795))
(assert (=> (>= 10000 x1011) (= (x1709 x1011) 0)))
(assert (< (x1904 x995 x1022 x285 x344 x1802 x489) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x613))
(assert (not (x294 (x553 x1881 x35 x243 x177 x1846))))
(assert (=> (>= 10000 x802) (= (x1709 x802) 0)))
(assert (=> (>= 10000 x1865) (= (x1709 x1865) 0)))
(assert (=> (>= 10000 x137) (= (x1709 x137) 0)))
(assert (= x489 (x602 (x1904 x995 x1022 x285 x344 x1802 x489))))
(assert (not (x294 (x756 x856 x151))))
(assert (x439 x1728))
(assert (= (x1709 (x54 x1845 x204 x887 x1978 x1263 x1188 x606)) (x54 x1845 x204 x887 x1978 x1263 x1188 x606)))
(assert (< (x54 x413 x415 x1892 x935 x1370 x626 x1834) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x1149))
(assert (x439 x1022))
(assert (x439 x1707))
(assert (x439 x1850))
(assert (x439 x766))
(assert (=> (<= x1392 10000) (= (x1709 x1392) 0)))
(assert (x439 x1690))
(assert (x439 x856))
(assert (> (x756 x670 x1439) 10000))
(assert (x439 x894))
(assert (x439 x580))
(assert (x439 x84))
(assert (x439 x1979))
(assert (< (x110 64 729466174051048026939049150500379070045048658665 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x439 x366))
(assert (x439 x1769))
(assert (x439 x1152))
(assert (x439 x1828))
(assert (=> (<= x1209 10000) (= (x1709 x1209) 0)))
(assert (=> (<= x35 10000) (= (x1709 x35) 0)))
(assert (=> (<= x548 10000) (= 0 (x1709 x548))))
(assert (= (x379 (x110 64 x1886 3)) x1886))
(assert (x439 x1336))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x110 x856 x1754 x1489)))
(assert (= x563 (x1457 (x553 x856 x1377 x214 x563 x934))))
(assert (= x342 (x1922 (x110 64 x813 x342))))
(assert (= x177 (x1457 (x553 x1881 x35 x243 x177 x1846))))
(assert (x439 x360))
(assert (> (x110 64 x936 x649) 10000))
(assert (not (x294 (x1904 x1845 x137 x1648 x50 x720 x316))))
(assert (x439 x1786))
(assert (= (x1922 (x110 64 x1857 x1111)) x1111))
(assert (=> (>= 10000 x48) (= (x1709 x48) 0)))
(assert (= x1263 (x149 (x54 x1845 x204 x887 x1978 x1263 x1188 x606))))
(assert (=> (>= 10000 x711) (= 0 (x1709 x711))))
(assert (x294 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (=> (<= x894 10000) (= 0 (x1709 x894))))
(assert (=> (>= 10000 x573) (= (x1709 x573) 0)))
(assert (=> (>= 10000 x772) (= 0 (x1709 x772))))
(assert (= x1727 (and x1325 (not x534))))
(assert (= x934 (x149 (x553 x856 x1377 x214 x563 x934))))
(assert (x439 x1377))
(assert (x439 x525))
(assert (= (x110 64 x1117 3) (x1709 (x110 64 x1117 3))))
(assert (=> (>= 10000 x578) (= (x1709 x578) 0)))
(assert (x439 x942))
(assert (= (x1922 (x553 x1881 x35 x243 x177 x1846)) x243))
(assert (x439 x386))
(assert (= 729466174051048026939049150500379070045048658665 (x379 (x110 64 729466174051048026939049150500379070045048658665 0))))
(check-sat)
(exit)
