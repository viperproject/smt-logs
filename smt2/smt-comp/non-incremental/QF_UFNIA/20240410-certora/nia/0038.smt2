(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2938 () Int)
(declare-fun x3755 () Bool)
(declare-fun x6250 () Bool)
(declare-fun x6098 () Int)
(declare-fun x1143 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x3110 () Int)
(declare-fun x8001 () Bool)
(declare-fun x5977 () Int)
(declare-fun x1199 () Bool)
(declare-fun x223 () Int)
(declare-fun x4074 () Int)
(declare-fun x7149 () Int)
(declare-fun x7216 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x3808 () Int)
(declare-fun x3746 () Bool)
(declare-fun x8463 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x710 () Int)
(declare-fun x4951 () Bool)
(declare-fun x8426 () Int)
(declare-fun x6925 () Int)
(declare-fun x6135 () Bool)
(declare-fun x6760 () Int)
(declare-fun x5398 () Int)
(declare-fun x7991 () Int)
(declare-fun x6819 () Int)
(declare-fun x6661 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x853 () Bool)
(declare-fun x4348 () Bool)
(declare-fun x26 () Int)
(declare-fun x6126 () Bool)
(declare-fun x8271 () Int)
(declare-fun x4754 () Int)
(declare-fun x526 () Bool)
(declare-fun x7165 () Int)
(declare-fun x7771 () Bool)
(declare-fun x6332 () Int)
(declare-fun x8236 () Int)
(declare-fun x638 () Int)
(declare-fun x837 () Bool)
(declare-fun x1471 () Int)
(declare-fun x5407 () Bool)
(declare-fun x5726 () Int)
(declare-fun x3806 () Int)
(declare-fun x8484 () Int)
(declare-fun x1945 () Bool)
(declare-fun x3774 () Int)
(declare-fun x2567 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x6079 () Bool)
(declare-fun x6018 () Bool)
(declare-fun x4933 () Bool)
(declare-fun x1754 () Int)
(declare-fun x4496 () Bool)
(declare-fun x4675 () Int)
(declare-fun x8338 () Bool)
(declare-fun x7770 () Bool)
(declare-fun x6867 () Bool)
(declare-fun x8210 () Int)
(declare-fun x814 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2429 () Bool)
(declare-fun x4379 () Bool)
(declare-fun x5373 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1965 () Int)
(declare-fun x7495 () Bool)
(declare-fun x4109 () Int)
(declare-fun x6118 () Bool)
(declare-fun x6448 () Int)
(declare-fun x2196 () Int)
(declare-fun x2937 () Bool)
(declare-fun x908 () Int)
(declare-fun x4467 () Int)
(declare-fun x1988 () Bool)
(declare-fun x4949 () Bool)
(declare-fun x5392 () Int)
(declare-fun x956 () Bool)
(declare-fun x450 () Int)
(declare-fun x7687 () Bool)
(declare-fun x8002 () Bool)
(declare-fun x7101 () Int)
(declare-fun x8533 () Int)
(declare-fun x5395 () Int)
(declare-fun x8117 () Int)
(declare-fun x3302 () Int)
(declare-fun x6920 () Int)
(declare-fun x2471 () Int)
(declare-fun x4213 () Int)
(declare-fun x4301 () Int)
(declare-fun x8542 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x5156 () Int)
(declare-fun x7028 () Int)
(declare-fun x6556 () Int)
(declare-fun x3417 () Bool)
(declare-fun x1737 () Int)
(declare-fun x2596 () Int)
(declare-fun x1944 () Int)
(declare-fun x3942 () Bool)
(declare-fun x8279 () Int)
(declare-fun x3981 () Bool)
(declare-fun x2781 () Bool)
(declare-fun x5728 () Int)
(declare-fun x7623 () Int)
(declare-fun x7091 () Int)
(declare-fun x3424 () Int)
(declare-fun x3120 () Int)
(declare-fun x4542 () Int)
(declare-fun x2377 () Bool)
(declare-fun x5863 () Int)
(declare-fun x1676 () Int)
(declare-fun x2616 () Int)
(declare-fun x2583 () Bool)
(declare-fun x1179 () Int)
(declare-fun x1139 () Int)
(declare-fun x350 () Int)
(declare-fun x5711 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x6858 () Bool)
(declare-fun x2232 () Int)
(declare-fun x2952 () Bool)
(declare-fun x4610 () Int)
(declare-fun x4453 () Bool)
(declare-fun x8223 () Bool)
(declare-fun x5249 () Bool)
(declare-fun x8150 () Bool)
(declare-fun x4386 () Int)
(declare-fun x969 () Bool)
(declare-fun x4691 () Int)
(declare-fun x6331 () Int)
(declare-fun x2969 () Int)
(declare-fun x530 () Int)
(declare-fun x426 () Int)
(declare-fun x2893 () Int)
(declare-fun x1113 () Bool)
(declare-fun x6254 () Int)
(declare-fun x3818 () Int)
(declare-fun x7957 () Bool)
(declare-fun x4557 () Int)
(declare-fun x7685 () Bool)
(declare-fun x6017 () Bool)
(declare-fun x8040 () Int)
(declare-fun x7130 () Int)
(declare-fun x2773 () Bool)
(declare-fun x5987 () Int)
(declare-fun x5519 () Int)
(declare-fun x6225 () Bool)
(declare-fun x5528 () Int)
(declare-fun x6365 () Bool)
(declare-fun x7956 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1453 () Int)
(declare-fun x2956 () Int)
(declare-fun x6701 () Int)
(declare-fun x6287 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x1642 () Int)
(declare-fun x6131 () Bool)
(declare-fun x3315 () Int)
(declare-fun x1118 (Int) Int)
(declare-fun x118 () Bool)
(declare-fun x6329 () Bool)
(declare-fun x7805 () Int)
(declare-fun x7725 () Int)
(declare-fun x1041 () Int)
(declare-fun x6318 () Bool)
(declare-fun x3221 () Int)
(declare-fun x4004 () Bool)
(declare-fun x5232 () Int)
(declare-fun x4077 () Int)
(declare-fun x5832 () Int)
(declare-fun x1936 () Bool)
(declare-fun x1591 () Int)
(declare-fun x3439 () Bool)
(declare-fun x6808 () Int)
(declare-fun x6438 () Int)
(declare-fun x6476 () Int)
(declare-fun x2409 () Int)
(declare-fun x4005 () Bool)
(declare-fun x7463 () Bool)
(declare-fun x6067 () Bool)
(declare-fun x5403 () Bool)
(declare-fun x2384 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x4259 () Int)
(declare-fun x6230 () Int)
(declare-fun x7117 () Int)
(declare-fun x3045 () Bool)
(declare-fun x5774 () Bool)
(declare-fun x3433 () Bool)
(declare-fun x8030 () Int)
(declare-fun x6545 (Int) Int)
(declare-fun x3535 () Bool)
(declare-fun x6890 () Bool)
(declare-fun x8178 () Int)
(declare-fun x1192 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x5520 () Int)
(declare-fun x5083 () Bool)
(declare-fun x7890 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x2935 () Int)
(declare-fun x8374 () Int)
(declare-fun x1137 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x7538 () Int)
(declare-fun x2405 () Int)
(declare-fun x959 () Int)
(declare-fun x7245 () Int)
(declare-fun x8081 () Int)
(declare-fun x5912 () Int)
(declare-fun x6097 () Int)
(declare-fun x3141 () Bool)
(declare-fun x3033 () Int)
(declare-fun x6809 () Int)
(declare-fun x597 () Int)
(declare-fun x1641 () Bool)
(declare-fun x8500 () Int)
(declare-fun x2949 () Int)
(declare-fun x6003 () Int)
(declare-fun x3597 () Int)
(declare-fun x3256 () Bool)
(declare-fun x722 () Int)
(declare-fun x6793 () Bool)
(declare-fun x8390 () Int)
(declare-fun x3552 () Int)
(declare-fun x6117 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x6762 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x4802 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x5748 () Int)
(declare-fun x4471 () Int)
(declare-fun x1849 () Bool)
(declare-fun x270 () Int)
(declare-fun x3599 () Int)
(declare-fun x6508 () Bool)
(declare-fun x4151 () Int)
(declare-fun x8137 () Bool)
(declare-fun x2891 () Int)
(declare-fun x1146 () Int)
(declare-fun x2171 () Int)
(declare-fun x1269 () Int)
(declare-fun x8454 () Bool)
(declare-fun x5673 () Int)
(declare-fun x3003 () Bool)
(declare-fun x7276 () Int)
(declare-fun x5679 () Int)
(declare-fun x6680 () Int)
(declare-fun x4879 () Int)
(declare-fun x89 () Int)
(declare-fun x7235 () Bool)
(declare-fun x3182 () Int)
(declare-fun x5541 () Int)
(declare-fun x7077 () Bool)
(declare-fun x667 () Int)
(declare-fun x3063 () Int)
(declare-fun x6336 () Bool)
(declare-fun x8548 () Bool)
(declare-fun x547 () Bool)
(declare-fun x2030 () Int)
(declare-fun x5668 () Int)
(declare-fun x4827 () Int)
(declare-fun x2767 () Int)
(declare-fun x2524 () Int)
(declare-fun x4891 () Bool)
(declare-fun x2930 () Int)
(declare-fun x3133 () Bool)
(declare-fun x5242 () Int)
(declare-fun x5201 () Bool)
(declare-fun x390 () Bool)
(declare-fun x2752 () Int)
(declare-fun x4408 () Bool)
(declare-fun x4462 () Int)
(declare-fun x6845 () Bool)
(declare-fun x622 () Int)
(declare-fun x3416 () Bool)
(declare-fun x600 () Int)
(declare-fun x6409 () Bool)
(declare-fun x4650 () Bool)
(declare-fun x6456 () Bool)
(declare-fun x6268 () Int)
(declare-fun x3414 (Int) Int)
(declare-fun x4455 () Int)
(declare-fun x7789 () Bool)
(declare-fun x4817 () Int)
(declare-fun x2375 () Bool)
(declare-fun x7104 () Int)
(declare-fun x4013 () Int)
(declare-fun x1284 () Int)
(declare-fun x3986 () Int)
(declare-fun x7232 () Bool)
(declare-fun x4680 () Int)
(declare-fun x2100 () Int)
(declare-fun x3240 () Int)
(declare-fun x4466 () Int)
(declare-fun x1275 () Bool)
(declare-fun x7869 () Int)
(declare-fun x6217 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x7872 () Int)
(declare-fun x486 () Bool)
(declare-fun x7828 () Int)
(declare-fun x6900 () Bool)
(declare-fun x7532 () Int)
(declare-fun x258 () Bool)
(declare-fun x685 () Int)
(declare-fun x6666 () Int)
(declare-fun x7308 () Int)
(declare-fun x5867 () Int)
(declare-fun x5275 () Bool)
(declare-fun x8094 () Int)
(declare-fun x2920 () Int)
(declare-fun x5750 () Int)
(declare-fun x7823 () Bool)
(declare-fun x7933 () Int)
(declare-fun x1427 () Int)
(declare-fun x2201 () Bool)
(declare-fun x6918 () Int)
(declare-fun x1917 () Bool)
(declare-fun x1496 () Int)
(declare-fun x105 () Bool)
(declare-fun x3067 () Int)
(declare-fun x1171 () Int)
(declare-fun x6557 () Int)
(declare-fun x6167 () Bool)
(declare-fun x1755 () Int)
(declare-fun x3757 () Int)
(declare-fun x8539 () Int)
(declare-fun x7915 () Int)
(declare-fun x2942 () Int)
(declare-fun x1918 () Bool)
(declare-fun x4553 () Int)
(declare-fun x751 (Int) Int)
(declare-fun x4181 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x5905 () Bool)
(declare-fun x4312 () Int)
(declare-fun x3161 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1331 () Int)
(declare-fun x2472 () Int)
(declare-fun x4533 () Int)
(declare-fun x6405 () Int)
(declare-fun x1705 () Bool)
(declare-fun x6429 () Int)
(declare-fun x5937 () Int)
(declare-fun x3748 () Bool)
(declare-fun x4560 () Int)
(declare-fun x2248 () Bool)
(declare-fun x7434 () Int)
(declare-fun x7545 () Int)
(declare-fun x367 () Int)
(declare-fun x7455 () Int)
(declare-fun x3048 () Int)
(declare-fun x3009 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x5581 () Int)
(declare-fun x6065 () Int)
(declare-fun x7864 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x6210 () Bool)
(declare-fun x8005 () Int)
(declare-fun x3658 () Int)
(declare-fun x5082 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x961 () Int)
(declare-fun x2794 () Int)
(declare-fun x2188 () Int)
(declare-fun x3441 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x7573 () Bool)
(declare-fun x1941 () Int)
(declare-fun x6251 (Int) Int)
(declare-fun x356 () Int)
(declare-fun x2889 () Int)
(declare-fun x7776 () Int)
(declare-fun x8104 () Int)
(declare-fun x1901 () Int)
(declare-fun x414 () Bool)
(declare-fun x3190 () Int)
(declare-fun x3545 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x4038 () Bool)
(declare-fun x7291 () Int)
(declare-fun x8043 () Int)
(declare-fun x7753 () Bool)
(declare-fun x5793 () Int)
(declare-fun x1442 () Bool)
(declare-fun x7262 () Int)
(declare-fun x7968 () Bool)
(declare-fun x8240 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x7690 () Bool)
(declare-fun x4450 () Int)
(declare-fun x6930 () Bool)
(declare-fun x6501 () Bool)
(declare-fun x7796 () Bool)
(declare-fun x2394 (Int) Int)
(declare-fun x8564 () Bool)
(declare-fun x2440 () Int)
(declare-fun x6679 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x7064 () Int)
(declare-fun x5351 () Int)
(declare-fun x5014 () Int)
(declare-fun x5019 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x5438 () Int)
(declare-fun x1110 () Int)
(declare-fun x2174 () Bool)
(declare-fun x5070 () Int)
(declare-fun x4042 () Int)
(declare-fun x3269 () Int)
(declare-fun x1455 () Bool)
(declare-fun x3762 () Int)
(declare-fun x612 () Bool)
(declare-fun x3237 () Int)
(declare-fun x2507 () Bool)
(declare-fun x2810 () Int)
(declare-fun x7859 () Int)
(declare-fun x1669 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2436 () Int)
(declare-fun x3811 () Bool)
(declare-fun x1735 () Int)
(declare-fun x599 () Int)
(declare-fun x1300 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x8501 () Bool)
(declare-fun x5787 () Int)
(declare-fun x8157 () Int)
(declare-fun x3517 () Int)
(declare-fun x6836 () Bool)
(declare-fun x7013 () Int)
(declare-fun x3651 () Int)
(declare-fun x113 () Int)
(declare-fun x6593 () Bool)
(declare-fun x6585 () Bool)
(declare-fun x3353 () Int)
(declare-fun x1274 () Bool)
(declare-fun x874 () Int)
(declare-fun x7059 () Bool)
(declare-fun x3675 () Int)
(declare-fun x6045 () Bool)
(declare-fun x8200 () Bool)
(declare-fun x6683 () Int)
(declare-fun x7489 () Bool)
(declare-fun x841 () Bool)
(declare-fun x3252 () Int)
(declare-fun x1167 () Bool)
(declare-fun x5997 () Int)
(declare-fun x7215 () Int)
(declare-fun x6694 () Int)
(declare-fun x4187 () Int)
(declare-fun x692 () Int)
(declare-fun x1724 () Bool)
(declare-fun x7286 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x7839 () Bool)
(declare-fun x4714 () Int)
(declare-fun x4133 () Bool)
(declare-fun x5989 () Int)
(declare-fun x3047 () Bool)
(declare-fun x255 () Bool)
(declare-fun x4440 () Int)
(declare-fun x6224 () Int)
(declare-fun x4458 () Bool)
(declare-fun x5489 () Int)
(declare-fun x6681 () Int)
(declare-fun x1161 () Int)
(declare-fun x6731 () Int)
(declare-fun x5467 () Bool)
(declare-fun x2433 () Int)
(declare-fun x2974 () Bool)
(declare-fun x2839 () Int)
(declare-fun x4513 () Int)
(declare-fun x4166 () Int)
(declare-fun x4588 () Int)
(declare-fun x1268 () Int)
(declare-fun x6369 () Bool)
(declare-fun x5483 () Int)
(declare-fun x395 () Bool)
(declare-fun x7979 () Int)
(declare-fun x7897 () Int)
(declare-fun x7960 () Bool)
(declare-fun x4906 () Int)
(declare-fun x5248 () Bool)
(declare-fun x1880 () Int)
(declare-fun x4841 () Int)
(declare-fun x2811 () Int)
(declare-fun x174 () Bool)
(declare-fun x935 () Int)
(declare-fun x2772 () Bool)
(declare-fun x343 () Int)
(declare-fun x1500 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x5332 (Int) Int)
(declare-fun x1618 () Bool)
(declare-fun x1931 () Int)
(declare-fun x3979 () Bool)
(declare-fun x5624 () Bool)
(declare-fun x6678 () Int)
(declare-fun x3671 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x5965 () Bool)
(declare-fun x6840 () Bool)
(declare-fun x6785 () Bool)
(declare-fun x6613 () Int)
(declare-fun x7535 () Bool)
(declare-fun x972 () Int)
(declare-fun x4356 () Bool)
(declare-fun x5374 () Bool)
(declare-fun x5795 () Int)
(declare-fun x1218 () Int)
(declare-fun x6646 () Bool)
(declare-fun x8355 () Int)
(declare-fun x8356 () Int)
(declare-fun x1520 () Bool)
(declare-fun x1104 () Int)
(declare-fun x299 () Int)
(declare-fun x6482 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1242 () Int)
(declare-fun x2074 () Int)
(declare-fun x4658 () Bool)
(declare-fun x380 () Int)
(declare-fun x4615 () Bool)
(declare-fun x7813 () Int)
(declare-fun x364 () Int)
(declare-fun x1549 () Bool)
(declare-fun x4572 (Int) Int)
(declare-fun x3718 () Bool)
(declare-fun x6020 (Int) Int)
(declare-fun x3832 () Int)
(declare-fun x3298 () Int)
(declare-fun x11 () Int)
(declare-fun x3939 () Int)
(declare-fun x2923 () Int)
(declare-fun x7542 () Int)
(declare-fun x1794 () Int)
(declare-fun x3050 () Bool)
(declare-fun x8369 () Int)
(declare-fun x7698 () Bool)
(declare-fun x504 () Bool)
(declare-fun x6397 () Bool)
(declare-fun x7626 () Bool)
(declare-fun x8425 () Int)
(declare-fun x4060 () Int)
(declare-fun x453 () Bool)
(declare-fun x6237 () Int)
(declare-fun x939 () Bool)
(declare-fun x743 () Int)
(declare-fun x2374 () Int)
(declare-fun x7603 () Bool)
(declare-fun x2073 () Int)
(declare-fun x6962 () Int)
(declare-fun x5513 () Bool)
(declare-fun x4039 () Int)
(declare-fun x289 () Int)
(declare-fun x4698 () Int)
(declare-fun x934 () Int)
(declare-fun x1728 () Bool)
(declare-fun x5300 () Int)
(declare-fun x6377 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x2732 () Int)
(declare-fun x467 () Int)
(declare-fun x2458 () Int)
(declare-fun x6115 () Bool)
(declare-fun x2416 () Int)
(declare-fun x4431 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x5895 () Bool)
(declare-fun x2417 () Int)
(declare-fun x3848 () Bool)
(declare-fun x5010 () Int)
(declare-fun x6968 () Int)
(declare-fun x5175 () Int)
(declare-fun x7749 () Int)
(declare-fun x1366 () Bool)
(declare-fun x8381 () Bool)
(declare-fun x2257 () Int)
(declare-fun x6066 () Bool)
(declare-fun x7393 () Bool)
(declare-fun x5209 () Int)
(declare-fun x82 () Bool)
(declare-fun x5709 () Int)
(declare-fun x1614 () Int)
(declare-fun x8481 () Bool)
(declare-fun x5854 () Bool)
(declare-fun x4045 () Int)
(declare-fun x1480 () Int)
(declare-fun x5348 () Int)
(declare-fun x4916 () Int)
(declare-fun x442 () Int)
(declare-fun x8069 () Bool)
(declare-fun x6709 () Int)
(declare-fun x7457 () Int)
(declare-fun x6720 () Int)
(declare-fun x1470 () Int)
(declare-fun x6620 () Int)
(declare-fun x3375 () Bool)
(declare-fun x593 () Bool)
(declare-fun x1773 () Int)
(declare-fun x5850 () Int)
(declare-fun x7793 () Int)
(declare-fun x2235 () Int)
(declare-fun x2047 (Int) Int)
(declare-fun x7895 () Int)
(declare-fun x1178 () Bool)
(declare-fun x4789 () Bool)
(declare-fun x4433 () Int)
(declare-fun x266 () Int)
(declare-fun x2389 (Int) Int)
(declare-fun x3051 () Bool)
(declare-fun x3576 () Int)
(declare-fun x5560 () Bool)
(declare-fun x6883 () Int)
(declare-fun x2533 () Int)
(declare-fun x6835 () Int)
(declare-fun x7966 () Int)
(declare-fun x3038 () Int)
(declare-fun x566 () Int)
(declare-fun x154 () Bool)
(declare-fun x4404 () Int)
(declare-fun x5576 () Int)
(declare-fun x30 () Int)
(declare-fun x5490 () Bool)
(declare-fun x5055 () Int)
(declare-fun x8441 () Bool)
(declare-fun x5890 () Int)
(declare-fun x663 () Int)
(declare-fun x4826 () Int)
(declare-fun x1702 () Int)
(declare-fun x3079 () Int)
(declare-fun x237 () Bool)
(declare-fun x5558 () Bool)
(declare-fun x793 () Bool)
(declare-fun x8197 () Bool)
(declare-fun x5859 () Bool)
(declare-fun x942 () Int)
(declare-fun x313 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x4543 () Bool)
(declare-fun x3838 () Int)
(declare-fun x6852 () Int)
(declare-fun x156 () Int)
(declare-fun x6033 () Int)
(declare-fun x2149 () Bool)
(declare-fun x2521 (Int) Int)
(declare-fun x6898 () Bool)
(declare-fun x2470 () Int)
(declare-fun x1388 (Int) Int)
(declare-fun x6417 () Bool)
(declare-fun x8496 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x2600 () Int)
(declare-fun x3713 () Bool)
(declare-fun x5429 (Int) Int)
(declare-fun x4491 () Int)
(declare-fun x6272 () Bool)
(declare-fun x8220 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x3551 () Int)
(declare-fun x3536 () Int)
(declare-fun x6099 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x4598 () Int)
(declare-fun x5632 () Int)
(declare-fun x884 () Int)
(declare-fun x5585 () Bool)
(declare-fun x6533 () Int)
(declare-fun x3142 () Int)
(declare-fun x2744 () Bool)
(declare-fun x709 () Int)
(declare-fun x3010 () Int)
(declare-fun x6110 () Int)
(declare-fun x2258 () Int)
(declare-fun x4855 () Int)
(declare-fun x1459 () Int)
(declare-fun x3839 () Int)
(declare-fun x989 () Int)
(declare-fun x6354 () Int)
(declare-fun x3364 () Bool)
(declare-fun x7237 () Bool)
(declare-fun x3963 () Int)
(declare-fun x8429 () Bool)
(declare-fun x2209 () Int)
(declare-fun x3060 () Int)
(declare-fun x5883 () Int)
(declare-fun x2514 () Bool)
(declare-fun x7337 () Bool)
(declare-fun x1659 () Int)
(declare-fun x6096 () Bool)
(declare-fun x803 () Bool)
(declare-fun x6872 () Bool)
(declare-fun x4179 () Int)
(declare-fun x1443 () Int)
(declare-fun x8012 () Bool)
(declare-fun x5580 () Int)
(declare-fun x4322 () Int)
(declare-fun x2175 () Bool)
(declare-fun x4568 () Int)
(declare-fun x7297 () Int)
(declare-fun x899 () Bool)
(declare-fun x3745 () Int)
(declare-fun x538 () Bool)
(declare-fun x5118 () Int)
(declare-fun x6805 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x1068 () Int)
(declare-fun x2593 () Bool)
(declare-fun x3113 () Bool)
(declare-fun x3991 () Int)
(declare-fun x8409 () Int)
(declare-fun x7068 () Int)
(declare-fun x7368 () Bool)
(declare-fun x7962 () Bool)
(declare-fun x964 () Int)
(declare-fun x3472 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x7272 () Bool)
(declare-fun x4601 () Bool)
(declare-fun x4040 (Int) Int)
(declare-fun x6632 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2633 () Int)
(declare-fun x157 () Bool)
(declare-fun x8245 () Bool)
(declare-fun x3173 () Int)
(declare-fun x2997 () Int)
(declare-fun x7518 () Int)
(declare-fun x6088 () Int)
(declare-fun x5437 () Int)
(declare-fun x7097 () Int)
(declare-fun x4510 () Bool)
(declare-fun x4354 () Int)
(declare-fun x3689 () Int)
(declare-fun x8494 () Int)
(declare-fun x7015 () Int)
(declare-fun x2865 () Int)
(declare-fun x7671 () Bool)
(declare-fun x200 () Int)
(declare-fun x4823 () Bool)
(declare-fun x7105 () Bool)
(declare-fun x553 () Int)
(declare-fun x7699 () Bool)
(declare-fun x1861 () Int)
(declare-fun x2310 () Bool)
(declare-fun x2216 () Int)
(declare-fun x850 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x2628 () Int)
(declare-fun x6050 () Int)
(declare-fun x1287 () Int)
(declare-fun x3638 () Bool)
(declare-fun x2950 () Int)
(declare-fun x1767 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x5948 () Int)
(declare-fun x6062 () Bool)
(declare-fun x4075 () Int)
(declare-fun x1774 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x4934 () Bool)
(declare-fun x348 () Int)
(declare-fun x2164 () Int)
(declare-fun x6992 () Int)
(declare-fun x4722 () Int)
(declare-fun x2612 () Bool)
(declare-fun x2029 () Int)
(declare-fun x3382 () Int)
(declare-fun x247 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x6996 () Int)
(declare-fun x2061 () Int)
(declare-fun x3528 () Bool)
(declare-fun x389 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x3846 () Int)
(declare-fun x1482 () Int)
(declare-fun x5894 () Int)
(declare-fun x8169 () Int)
(declare-fun x7236 () Bool)
(declare-fun x5030 () Bool)
(declare-fun x4752 () Int)
(declare-fun x7565 () Bool)
(declare-fun x6479 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x7485 () Int)
(declare-fun x7280 () Bool)
(declare-fun x1744 () Int)
(declare-fun x4411 () Bool)
(declare-fun x7122 () Int)
(declare-fun x5170 () Int)
(declare-fun x3297 () Int)
(declare-fun x2444 () Int)
(declare-fun x4382 () Bool)
(declare-fun x7039 () Bool)
(declare-fun x2953 () Int)
(declare-fun x4779 () Int)
(declare-fun x3909 () Int)
(declare-fun x7803 () Int)
(declare-fun x4305 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x4318 () Int)
(declare-fun x6601 () Bool)
(declare-fun x953 () Bool)
(declare-fun x357 () Int)
(declare-fun x1606 () Bool)
(declare-fun x455 () Bool)
(declare-fun x4958 (Int) Int)
(declare-fun x5960 () Bool)
(declare-fun x3136 () Int)
(declare-fun x8278 () Int)
(declare-fun x7570 () Int)
(declare-fun x2502 () Int)
(declare-fun x6063 () Bool)
(declare-fun x8437 () Bool)
(declare-fun x198 () Bool)
(declare-fun x77 () Int)
(declare-fun x6378 () Bool)
(declare-fun x4120 () Int)
(declare-fun x5230 () Int)
(declare-fun x7822 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1858 () Int)
(declare-fun x1377 () Bool)
(declare-fun x7412 () Bool)
(declare-fun x4183 () Int)
(declare-fun x3361 () Bool)
(declare-fun x6025 () Bool)
(declare-fun x707 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x5313 () Int)
(declare-fun x362 () Int)
(declare-fun x4659 () Bool)
(declare-fun x6451 () Int)
(declare-fun x470 () Int)
(declare-fun x5312 () Bool)
(declare-fun x7729 () Bool)
(declare-fun x168 () Bool)
(declare-fun x4476 () Bool)
(declare-fun x4422 () Int)
(declare-fun x2485 () Int)
(declare-fun x6901 () Bool)
(declare-fun x7998 () Int)
(declare-fun x6973 () Int)
(declare-fun x6886 () Int)
(declare-fun x5710 () Int)
(declare-fun x54 () Bool)
(declare-fun x5808 () Bool)
(declare-fun x2086 () Int)
(declare-fun x4605 () Bool)
(declare-fun x1291 () Int)
(declare-fun x1538 () Int)
(declare-fun x374 () Bool)
(declare-fun x7405 () Bool)
(declare-fun x4167 () Bool)
(declare-fun x7640 () Int)
(declare-fun x5615 () Int)
(declare-fun x2849 () Int)
(declare-fun x4902 () Bool)
(declare-fun x963 () Bool)
(declare-fun x4690 () Int)
(declare-fun x577 () Bool)
(declare-fun x2051 () Int)
(declare-fun x1892 () Int)
(declare-fun x7374 () Int)
(declare-fun x4600 () Int)
(declare-fun x8166 () Int)
(declare-fun x7164 () Int)
(declare-fun x310 () Bool)
(declare-fun x71 () Bool)
(declare-fun x3469 () Bool)
(declare-fun x196 () Int)
(declare-fun x5206 () Int)
(declare-fun x3430 () Int)
(declare-fun x7474 () Int)
(declare-fun x2758 () Int)
(declare-fun x4246 () Int)
(declare-fun x2116 () Bool)
(declare-fun x2515 () Int)
(declare-fun x1000 () Bool)
(declare-fun x4464 () Int)
(declare-fun x2337 () Int)
(declare-fun x4463 () Int)
(declare-fun x5944 () Int)
(declare-fun x7171 () Int)
(declare-fun x1543 () Int)
(declare-fun x5777 () Int)
(declare-fun x1193 () Bool)
(declare-fun x3645 () Int)
(declare-fun x6291 () Int)
(declare-fun x1756 () Bool)
(declare-fun x5536 () Bool)
(declare-fun x92 () Int)
(declare-fun x7009 () Int)
(declare-fun x1375 () Int)
(declare-fun x7053 () Bool)
(declare-fun x7120 () Bool)
(declare-fun x4956 () Int)
(declare-fun x1227 () Int)
(declare-fun x646 () Int)
(declare-fun x423 () Bool)
(declare-fun x7676 () Int)
(declare-fun x5304 () Int)
(declare-fun x741 () Int)
(declare-fun x3068 (Int) Int)
(declare-fun x7466 () Int)
(declare-fun x4178 () Int)
(declare-fun x6878 (Int) Int)
(declare-fun x3581 () Bool)
(declare-fun x6222 () Int)
(declare-fun x916 () Bool)
(declare-fun x4067 () Int)
(declare-fun x3421 () Bool)
(declare-fun x5920 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x8328 () Int)
(declare-fun x2341 (Int Int Int Int Int Int Int) Int)
(declare-fun x1282 () Int)
(declare-fun x5372 () Int)
(declare-fun x7138 () Int)
(declare-fun x5835 () Int)
(declare-fun x6804 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x185 () Bool)
(declare-fun x7984 () Int)
(declare-fun x2647 () Int)
(declare-fun x661 () Int)
(declare-fun x542 () Bool)
(declare-fun x8534 () Int)
(declare-fun x6022 () Bool)
(declare-fun x6657 () Bool)
(declare-fun x8290 () Bool)
(declare-fun x7476 () Int)
(declare-fun x5163 () Int)
(declare-fun x5956 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x671 () Int)
(declare-fun x607 () Int)
(declare-fun x1278 () Bool)
(declare-fun x2383 () Int)
(declare-fun x51 () Bool)
(declare-fun x5600 () Int)
(declare-fun x3199 () Int)
(declare-fun x5983 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x5645 (Int) Int)
(declare-fun x2986 () Bool)
(declare-fun x4423 () Bool)
(declare-fun x2358 () Int)
(declare-fun x3518 (Int) Int)
(declare-fun x1693 () Bool)
(declare-fun x6185 () Int)
(declare-fun x1022 (Int Int) Int)
(declare-fun x8410 () Bool)
(declare-fun x4064 () Int)
(declare-fun x3143 () Int)
(declare-fun x7658 () Bool)
(declare-fun x4618 () Int)
(declare-fun x2121 () Bool)
(declare-fun x5353 () Int)
(declare-fun x6577 () Bool)
(declare-fun x7976 () Bool)
(declare-fun x5333 () Bool)
(declare-fun x7169 () Int)
(declare-fun x3902 () Int)
(declare-fun x518 () Bool)
(declare-fun x5669 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x6739 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1214 () Int)
(declare-fun x836 () Bool)
(declare-fun x2859 () Int)
(declare-fun x6077 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x6473 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x7597 () Int)
(declare-fun x5056 () Int)
(declare-fun x3932 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x438 () Int)
(declare-fun x7186 () Int)
(declare-fun x6682 () Int)
(declare-fun x1220 () Int)
(declare-fun x2270 () Bool)
(declare-fun x8556 () Int)
(declare-fun x2869 () Int)
(declare-fun x3000 () Int)
(declare-fun x1933 () Int)
(declare-fun x6058 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x978 () Int)
(declare-fun x1595 () Bool)
(declare-fun x2312 () Int)
(declare-fun x8532 () Int)
(declare-fun x6994 () Int)
(declare-fun x7087 (Int Int Int Int) Int)
(declare-fun x954 () Bool)
(declare-fun x4475 () Int)
(declare-fun x1932 () Bool)
(declare-fun x721 () Bool)
(declare-fun x2392 () Int)
(declare-fun x718 () Bool)
(declare-fun x5180 () Bool)
(declare-fun x1721 () Int)
(declare-fun x6464 (Int) Int)
(declare-fun x2505 () Int)
(declare-fun x621 () Int)
(declare-fun x6182 () Bool)
(declare-fun x6521 () Int)
(declare-fun x4808 () Int)
(declare-fun x6691 () Int)
(declare-fun x1306 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x7928 () Int)
(declare-fun x4613 () Int)
(declare-fun x5822 () Int)
(declare-fun x6262 () Int)
(declare-fun x886 () Int)
(declare-fun x2610 () Bool)
(declare-fun x6376 () Int)
(declare-fun x1881 () Int)
(declare-fun x7419 () Bool)
(declare-fun x5006 () Bool)
(declare-fun x3967 () Int)
(declare-fun x2658 () Int)
(declare-fun x1360 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x748 () Bool)
(declare-fun x7268 () Bool)
(declare-fun x8079 () Bool)
(declare-fun x7560 () Int)
(declare-fun x7717 () Int)
(declare-fun x4394 () Int)
(declare-fun x4708 () Bool)
(declare-fun x2085 () Int)
(declare-fun x8272 () Int)
(declare-fun x797 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x7114 () Bool)
(declare-fun x6179 () Int)
(declare-fun x3916 () Int)
(declare-fun x1558 () Bool)
(declare-fun x3611 () Int)
(declare-fun x3758 () Int)
(declare-fun x7947 () Int)
(declare-fun x5802 () Bool)
(declare-fun x4597 () Int)
(declare-fun x141 () Int)
(declare-fun x1020 () Int)
(declare-fun x2853 () Int)
(declare-fun x6104 () Int)
(declare-fun x40 () Int)
(declare-fun x912 () Int)
(declare-fun x3948 () Int)
(declare-fun x5295 () Int)
(declare-fun x7907 () Int)
(declare-fun x2378 () Bool)
(declare-fun x2316 () Int)
(declare-fun x7255 () Bool)
(declare-fun x1762 () Int)
(declare-fun x1550 () Int)
(declare-fun x1343 () Bool)
(declare-fun x6777 () Int)
(declare-fun x7855 () Int)
(declare-fun x2176 () Int)
(declare-fun x6159 () Bool)
(declare-fun x3105 () Int)
(declare-fun x3170 () Bool)
(declare-fun x7350 () Bool)
(declare-fun x6514 () Int)
(declare-fun x1553 () Int)
(declare-fun x5547 () Bool)
(declare-fun x5079 () Bool)
(declare-fun x7919 () Int)
(declare-fun x2604 () Int)
(declare-fun x2554 () Int)
(declare-fun x2770 () Int)
(declare-fun x7464 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x7878 () Int)
(declare-fun x6590 () Int)
(declare-fun x7145 () Bool)
(declare-fun x2139 () Int)
(declare-fun x4812 () Int)
(declare-fun x6500 () Int)
(declare-fun x6427 () Int)
(declare-fun x6833 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x7921 () Int)
(declare-fun x305 () Bool)
(declare-fun x8193 () Int)
(declare-fun x7222 () Int)
(declare-fun x217 () Bool)
(declare-fun x765 () Bool)
(declare-fun x7063 () Int)
(declare-fun x6949 () Int)
(declare-fun x8246 () Bool)
(declare-fun x4721 () Int)
(declare-fun x1076 () Int)
(declare-fun x811 () Int)
(declare-fun x4932 () Bool)
(declare-fun x3759 () Int)
(declare-fun x8153 () Int)
(declare-fun x1803 () Bool)
(declare-fun x2631 () Int)
(declare-fun x6927 () Int)
(declare-fun x1954 () Int)
(declare-fun x7888 () Int)
(declare-fun x4915 () Bool)
(declare-fun x4487 () Int)
(declare-fun x5892 () Int)
(declare-fun x107 () Bool)
(declare-fun x6014 () Int)
(declare-fun x7606 () Bool)
(declare-fun x2599 () Int)
(declare-fun x7125 () Bool)
(declare-fun x7243 () Bool)
(declare-fun x1812 () Int)
(declare-fun x2219 () Int)
(declare-fun x5088 () Int)
(declare-fun x3907 () Int)
(declare-fun x5259 () Bool)
(declare-fun x4295 () Int)
(declare-fun x4096 () Bool)
(declare-fun x2932 (Int) Int)
(declare-fun x5830 () Int)
(declare-fun x4909 () Bool)
(declare-fun x2036 () Int)
(declare-fun x3407 (Int Int Int) Int)
(declare-fun x3344 () Bool)
(declare-fun x3616 () Int)
(declare-fun x7422 () Bool)
(declare-fun x8046 () Bool)
(declare-fun x6770 (Int) Int)
(declare-fun x3989 () Int)
(declare-fun x7370 () Int)
(declare-fun x5105 () Bool)
(declare-fun x4182 () Int)
(declare-fun x1831 () Int)
(declare-fun x2864 () Int)
(declare-fun x6028 () Int)
(declare-fun x6747 () Bool)
(declare-fun x8312 () Bool)
(declare-fun x5692 () Int)
(declare-fun x130 () Int)
(declare-fun x5569 () Int)
(declare-fun x7173 () Int)
(declare-fun x4139 () Int)
(declare-fun x554 () Int)
(declare-fun x7106 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1546 () Int)
(declare-fun x8199 () Int)
(declare-fun x79 () Int)
(declare-fun x7873 () Bool)
(declare-fun x3787 () Int)
(declare-fun x4050 () Bool)
(declare-fun x4079 () Int)
(declare-fun x1182 () Bool)
(declare-fun x774 () Bool)
(declare-fun x6552 () Bool)
(declare-fun x7653 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x8421 () Bool)
(declare-fun x4160 () Bool)
(declare-fun x8469 () Int)
(declare-fun x8018 () Int)
(declare-fun x8268 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x7277 () Int)
(declare-fun x2801 () Int)
(declare-fun x8467 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x8300 () Int)
(declare-fun x1779 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x4635 () Int)
(declare-fun x4216 () Int)
(declare-fun x7734 () Int)
(declare-fun x2400 () Int)
(declare-fun x347 () Int)
(declare-fun x4137 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x2070 () Int)
(declare-fun x4936 () Int)
(declare-fun x2068 () Int)
(declare-fun x6186 () Bool)
(declare-fun x6776 () Int)
(declare-fun x3790 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x6209 () Int)
(declare-fun x2268 () Bool)
(declare-fun x5292 () Bool)
(declare-fun x186 (Int) Int)
(declare-fun x4335 () Int)
(declare-fun x1885 () Bool)
(declare-fun x3164 () Int)
(declare-fun x2885 () Int)
(declare-fun x4616 () Int)
(declare-fun x5108 () Bool)
(declare-fun x549 () Int)
(declare-fun x7598 () Bool)
(declare-fun x6341 () Int)
(declare-fun x2439 () Int)
(declare-fun x4548 () Bool)
(declare-fun x2500 () Int)
(declare-fun x3308 () Bool)
(declare-fun x8154 () Bool)
(declare-fun x5415 () Int)
(declare-fun x546 () Bool)
(declare-fun x764 () Int)
(declare-fun x618 () Int)
(declare-fun x4397 () Int)
(declare-fun x1005 () Int)
(declare-fun x4701 () Bool)
(declare-fun x6174 () Bool)
(declare-fun x4777 () Int)
(declare-fun x3685 () Int)
(declare-fun x3506 () Bool)
(declare-fun x4219 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x2467 () Int)
(declare-fun x1329 () Int)
(declare-fun x7624 (Int) Int)
(declare-fun x6807 () Int)
(declare-fun x4984 () Int)
(declare-fun x6749 () Bool)
(declare-fun x4545 () Bool)
(declare-fun x5137 (Int) Int)
(declare-fun x7824 () Int)
(declare-fun x3481 () Int)
(declare-fun x5779 () Bool)
(declare-fun x5003 () Bool)
(declare-fun x1355 () Int)
(declare-fun x6411 () Bool)
(declare-fun x2944 () Int)
(declare-fun x7682 () Int)
(declare-fun x832 () Int)
(declare-fun x7680 () Int)
(declare-fun x2211 () Bool)
(declare-fun x4478 () Bool)
(declare-fun x1426 () Int)
(declare-fun x8297 () Int)
(declare-fun x5306 () Int)
(declare-fun x3502 () Int)
(declare-fun x5950 () Int)
(declare-fun x7400 () Int)
(declare-fun x179 () Int)
(declare-fun x5092 () Int)
(declare-fun x5434 () Bool)
(declare-fun x6153 () Int)
(declare-fun x3007 () Int)
(declare-fun x7360 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x5696 () Int)
(declare-fun x6326 () Bool)
(declare-fun x7060 () Int)
(declare-fun x5462 () Bool)
(declare-fun x5681 () Int)
(declare-fun x4611 () Int)
(declare-fun x6054 () Int)
(declare-fun x2425 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x7838 () Int)
(declare-fun x4836 () Int)
(declare-fun x1417 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x8537 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x6457 () Int)
(declare-fun x6891 () Int)
(declare-fun x7562 () Int)
(declare-fun x642 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x8215 () Int)
(declare-fun x756 () Bool)
(declare-fun x1197 () Int)
(declare-fun x7693 () Bool)
(declare-fun x6542 () Int)
(declare-fun x7899 () Int)
(declare-fun x6259 () Bool)
(declare-fun x7871 () Int)
(declare-fun x5532 () Bool)
(declare-fun x2181 () Int)
(declare-fun x8159 () Bool)
(declare-fun x5420 () Int)
(declare-fun x8299 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x3734 () Int)
(declare-fun x2825 () Bool)
(declare-fun x6899 () Int)
(declare-fun x2463 () Int)
(declare-fun x617 () Int)
(declare-fun x5630 () Int)
(declare-fun x8101 () Int)
(declare-fun x6094 () Int)
(declare-fun x4449 () Bool)
(declare-fun x3865 () Int)
(declare-fun x3290 () Bool)
(declare-fun x5791 () Int)
(declare-fun x329 () Bool)
(declare-fun x5190 () Int)
(declare-fun x3549 () Bool)
(declare-fun x18 () Int)
(declare-fun x1680 () Int)
(declare-fun x999 () Int)
(declare-fun x8033 () Int)
(declare-fun x3233 () Int)
(declare-fun x5941 () Bool)
(declare-fun x8470 () Int)
(declare-fun x1271 () Int)
(declare-fun x6799 () Bool)
(declare-fun x4589 () Int)
(declare-fun x3541 () Int)
(declare-fun x4490 () Int)
(declare-fun x1684 () Int)
(declare-fun x3844 () Bool)
(declare-fun x1509 () Int)
(declare-fun x533 () Int)
(declare-fun x2977 () Bool)
(declare-fun x694 () Int)
(declare-fun x681 () Bool)
(declare-fun x2522 () Int)
(declare-fun x787 () Bool)
(declare-fun x5700 () Bool)
(declare-fun x3714 () Int)
(declare-fun x4593 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x568 () Int)
(declare-fun x5955 () Int)
(declare-fun x933 () Bool)
(declare-fun x1906 () Int)
(declare-fun x6212 () Bool)
(declare-fun x6361 () Int)
(declare-fun x8304 () Int)
(declare-fun x6236 () Int)
(declare-fun x1445 () Int)
(declare-fun x5418 () Bool)
(declare-fun x4630 () Int)
(declare-fun x7143 () Bool)
(declare-fun x6424 () Int)
(declare-fun x4189 () Int)
(declare-fun x684 () Bool)
(declare-fun x6266 () Int)
(declare-fun x5152 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x5820 () Int)
(declare-fun x8140 () Int)
(declare-fun x5993 () Int)
(declare-fun x7585 () Int)
(declare-fun x1620 () Bool)
(declare-fun x1694 () Int)
(declare-fun x2733 () Bool)
(declare-fun x190 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x1732 () Int)
(declare-fun x6522 () Int)
(declare-fun x2484 () Int)
(declare-fun x5084 () Int)
(declare-fun x6158 () Int)
(declare-fun x827 () Bool)
(declare-fun x3842 () Int)
(declare-fun x2751 () Bool)
(declare-fun x5991 () Int)
(declare-fun x6325 () Int)
(declare-fun x7005 () Int)
(declare-fun x1502 () Int)
(declare-fun x8296 () Bool)
(declare-fun x1194 () Int)
(declare-fun x7644 () Int)
(declare-fun x6246 () Int)
(declare-fun x2165 () Bool)
(declare-fun x6247 (Int) Int)
(declare-fun x1993 () Int)
(declare-fun x7834 () Bool)
(declare-fun x4800 () Int)
(declare-fun x1432 () Int)
(declare-fun x1107 () Int)
(declare-fun x6244 () Int)
(declare-fun x6294 () Bool)
(declare-fun x5369 () Bool)
(declare-fun x5021 () Bool)
(declare-fun x5131 () Bool)
(declare-fun x5801 () Int)
(declare-fun x6794 () Int)
(declare-fun x475 () Bool)
(declare-fun x6089 () Int)
(declare-fun x3415 () Int)
(declare-fun x5805 () Bool)
(declare-fun x7448 () Int)
(declare-fun x8352 () Int)
(declare-fun x3896 () Int)
(declare-fun x2371 () Int)
(declare-fun x3778 () Bool)
(declare-fun x2184 () Int)
(declare-fun x3235 () Bool)
(declare-fun x1221 () Int)
(declare-fun x2759 () Bool)
(declare-fun x5123 () Int)
(declare-fun x3823 () Int)
(declare-fun x3912 () Int)
(declare-fun x5336 () Int)
(declare-fun x7679 () Bool)
(declare-fun x729 () Bool)
(declare-fun x6690 () Bool)
(declare-fun x5099 () Int)
(declare-fun x14 () Int)
(declare-fun x8398 (Int) Bool)
(declare-fun x5871 () Bool)
(declare-fun x6837 () Bool)
(declare-fun x4217 () Int)
(declare-fun x7353 () Bool)
(declare-fun x7507 () Bool)
(declare-fun x752 () Int)
(declare-fun x37 () Bool)
(declare-fun x4506 () Bool)
(declare-fun x6400 () Int)
(declare-fun x6984 () Int)
(declare-fun x5447 () Bool)
(declare-fun x6184 () Int)
(declare-fun x6686 (Int) Int)
(declare-fun x4416 () Bool)
(declare-fun x8189 () Bool)
(declare-fun x7031 () Int)
(declare-fun x7727 () Int)
(declare-fun x62 () Bool)
(declare-fun x2659 () Int)
(declare-fun x5052 () Int)
(declare-fun x984 () Bool)
(declare-fun x1390 () Int)
(declare-fun x5204 () Int)
(declare-fun x8335 () Bool)
(declare-fun x567 () Int)
(declare-fun x1825 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x1504 () Int)
(declare-fun x2013 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x5228 () Bool)
(declare-fun x6823 () Bool)
(declare-fun x4435 () Int)
(declare-fun x7829 () Bool)
(declare-fun x4872 () Int)
(declare-fun x4713 () Int)
(declare-fun x833 () Int)
(declare-fun x6718 () Bool)
(declare-fun x570 () Int)
(declare-fun x57 () Int)
(declare-fun x2730 () Int)
(declare-fun x1276 () Bool)
(declare-fun x58 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x457 () Int)
(declare-fun x3890 () Int)
(declare-fun x6989 () Int)
(declare-fun x2094 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x2226 () Int)
(declare-fun x2926 () Int)
(declare-fun x5986 () Bool)
(declare-fun x1150 () Int)
(declare-fun x8080 () Bool)
(declare-fun x6849 () Bool)
(declare-fun x2723 () Int)
(declare-fun x1124 () Bool)
(declare-fun x5419 (Int) Int)
(declare-fun x1793 () Bool)
(declare-fun x906 () Int)
(declare-fun x7720 () Bool)
(declare-fun x2784 (Int) Int)
(declare-fun x2737 () Int)
(declare-fun x3011 () Bool)
(declare-fun x901 () Bool)
(declare-fun x8462 () Int)
(declare-fun x8550 () Int)
(declare-fun x202 () Bool)
(declare-fun x5387 () Int)
(declare-fun x3959 (Int) Int)
(declare-fun x8008 () Int)
(declare-fun x276 () Bool)
(declare-fun x3387 () Int)
(declare-fun x6465 () Bool)
(declare-fun x5404 () Bool)
(declare-fun x7981 () Int)
(declare-fun x3098 () Bool)
(declare-fun x4607 () Int)
(declare-fun x3610 (Int) Int)
(declare-fun x7939 () Int)
(declare-fun x1450 () Int)
(declare-fun x5893 () Int)
(declare-fun x6551 () Int)
(declare-fun x4502 () Int)
(declare-fun x7183 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x4085 () Int)
(declare-fun x2844 () Bool)
(declare-fun x7714 () Bool)
(declare-fun x4609 () Int)
(declare-fun x5311 () Int)
(declare-fun x7821 () Int)
(declare-fun x8282 () Int)
(declare-fun x1115 () Bool)
(declare-fun x4948 () Int)
(declare-fun x1170 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x5620 () Int)
(declare-fun x8330 () Int)
(declare-fun x2680 () Bool)
(declare-fun x2464 () Int)
(declare-fun x2617 () Int)
(declare-fun x1640 () Int)
(declare-fun x8011 () Int)
(declare-fun x1740 () Bool)
(declare-fun x6862 () Int)
(declare-fun x4441 () Int)
(declare-fun x8100 () Int)
(declare-fun x2545 () Bool)
(declare-fun x6952 () Bool)
(declare-fun x6699 () Int)
(declare-fun x3082 () Int)
(declare-fun x3323 () Bool)
(declare-fun x1964 () Int)
(declare-fun x8435 () Int)
(declare-fun x5115 () Int)
(declare-fun x4541 () Int)
(declare-fun x6544 () Int)
(declare-fun x7499 () Bool)
(declare-fun x8258 () Int)
(declare-fun x928 () Int)
(declare-fun x844 () Bool)
(declare-fun x6786 () Bool)
(declare-fun x8170 () Int)
(declare-fun x9 () Int)
(declare-fun x3219 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x5862 () Bool)
(declare-fun x7172 () Bool)
(declare-fun x4473 () Int)
(declare-fun x4177 () Bool)
(declare-fun x5837 () Int)
(declare-fun x5607 () Bool)
(declare-fun x7252 () Bool)
(declare-fun x3731 () Int)
(declare-fun x4170 () Int)
(declare-fun x905 () Bool)
(declare-fun x7931 () Int)
(declare-fun x3123 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x7213 () Int)
(declare-fun x5818 () Bool)
(declare-fun x6884 () Int)
(declare-fun x2845 () Int)
(declare-fun x7773 () Bool)
(declare-fun x2726 () Int)
(declare-fun x3984 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x3024 () Int)
(declare-fun x8209 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x238 () Bool)
(declare-fun x696 () Bool)
(declare-fun x312 () Int)
(declare-fun x6729 () Int)
(declare-fun x5923 () Int)
(declare-fun x2592 () Bool)
(declare-fun x1625 () Int)
(declare-fun x6711 () Bool)
(declare-fun x5626 () Int)
(declare-fun x780 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x3563 () Int)
(declare-fun x859 () Int)
(declare-fun x7267 () Bool)
(declare-fun x6935 () Int)
(declare-fun x6105 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x7572 () Int)
(declare-fun x366 () Int)
(declare-fun x867 () Bool)
(declare-fun x6735 () Int)
(declare-fun x8024 () Int)
(declare-fun x3575 () Bool)
(declare-fun x2609 () Int)
(declare-fun x6363 () Bool)
(declare-fun x78 () Bool)
(declare-fun x5065 () Int)
(declare-fun x778 () Int)
(declare-fun x3936 () Int)
(declare-fun x2635 () Bool)
(declare-fun x1890 () Int)
(declare-fun x4729 () Int)
(declare-fun x8480 () Bool)
(declare-fun x494 () Int)
(declare-fun x2623 () Int)
(declare-fun x2037 () Int)
(declare-fun x5856 () Int)
(declare-fun x3693 () Bool)
(declare-fun x2638 () Int)
(declare-fun x1998 () Int)
(declare-fun x2435 () Bool)
(declare-fun x4501 () Int)
(declare-fun x1063 () Bool)
(declare-fun x3900 () Int)
(declare-fun x3002 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1191 () Int)
(declare-fun x2834 () Bool)
(declare-fun x7861 () Int)
(declare-fun x7292 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x5080 () Int)
(declare-fun x1569 () Bool)
(declare-fun x4175 () Int)
(declare-fun x4025 () Int)
(declare-fun x4946 () Bool)
(declare-fun x4229 () Int)
(declare-fun x5544 () Int)
(declare-fun x4033 () Int)
(declare-fun x7306 (Int) Int)
(declare-fun x4637 () Bool)
(declare-fun x5889 () Bool)
(declare-fun x4285 () Bool)
(declare-fun x214 () Int)
(declare-fun x3687 () Int)
(declare-fun x1067 () Bool)
(declare-fun x4522 () Bool)
(declare-fun x6801 () Int)
(declare-fun x8106 () Int)
(declare-fun x7994 () Int)
(declare-fun x6507 () Bool)
(declare-fun x4877 () Int)
(declare-fun x6978 () Int)
(declare-fun x8244 () Bool)
(declare-fun x584 () Int)
(declare-fun x513 () Int)
(declare-fun x5066 () Int)
(declare-fun x6665 () Int)
(declare-fun x4508 () Bool)
(declare-fun x6019 () Int)
(declare-fun x1709 () Int)
(declare-fun x3280 () Int)
(declare-fun x3507 () Int)
(declare-fun x241 () Int)
(declare-fun x3781 () Bool)
(declare-fun x1373 () Int)
(declare-fun x4115 () Int)
(declare-fun x7787 () Bool)
(declare-fun x7407 () Int)
(declare-fun x4664 () Int)
(declare-fun x3546 () Int)
(declare-fun x1053 () Bool)
(declare-fun x3933 () Int)
(declare-fun x630 () Int)
(declare-fun x431 () Bool)
(declare-fun x5611 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x8270 () Bool)
(declare-fun x1847 () Int)
(declare-fun x7559 () Int)
(declare-fun x8433 () Int)
(declare-fun x3171 () Bool)
(declare-fun x6207 () Int)
(declare-fun x3329 () Bool)
(declare-fun x7924 () Int)
(declare-fun x6895 () Int)
(declare-fun x4730 () Bool)
(declare-fun x6847 () Int)
(declare-fun x6535 () Bool)
(declare-fun x6923 () Int)
(declare-fun x5386 () Int)
(declare-fun x1031 () Bool)
(declare-fun x115 () Int)
(declare-fun x4393 () Int)
(declare-fun x3885 () Int)
(declare-fun x441 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x4606 () Int)
(declare-fun x7432 () Int)
(declare-fun x4324 () Int)
(declare-fun x6480 () Bool)
(declare-fun x1040 () Int)
(declare-fun x6328 () Int)
(declare-fun x805 () Int)
(declare-fun x2622 () Int)
(declare-fun x3788 () Int)
(declare-fun x5898 () Bool)
(declare-fun x6181 () Int)
(declare-fun x6248 () Bool)
(declare-fun x6767 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1368 () Int)
(declare-fun x6298 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x8115 () Bool)
(declare-fun x3400 () Int)
(declare-fun x61 () Bool)
(declare-fun x561 () Int)
(declare-fun x6954 () Int)
(declare-fun x8187 () Bool)
(declare-fun x3956 () Int)
(declare-fun x3373 () Int)
(declare-fun x1286 () Int)
(declare-fun x3835 (Int) Int)
(declare-fun x7647 () Int)
(declare-fun x421 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x5384 () Int)
(declare-fun x3853 () Int)
(declare-fun x3132 () Int)
(declare-fun x2247 () Int)
(declare-fun x5988 (Int) Int)
(declare-fun x2333 () Int)
(declare-fun x7683 () Int)
(declare-fun x3521 () Int)
(declare-fun x6589 () Bool)
(declare-fun x218 () Int)
(declare-fun x3097 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x5106 () Bool)
(declare-fun x6032 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x5550 () Bool)
(declare-fun x7781 () Bool)
(declare-fun x6947 () Bool)
(declare-fun x1177 () Int)
(declare-fun x4881 () Int)
(declare-fun x7131 () Int)
(declare-fun x7078 () Int)
(declare-fun x8007 () Int)
(declare-fun x6612 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x890 () Bool)
(declare-fun x3564 () Int)
(declare-fun x8017 () Int)
(declare-fun x655 () Bool)
(declare-fun x4136 () Int)
(declare-fun x6076 () Int)
(declare-fun x1759 () Int)
(declare-fun x4043 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x4716 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x8520 () Int)
(declare-fun x3352 () Bool)
(declare-fun x8322 () Bool)
(declare-fun x3766 () Int)
(declare-fun x2585 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x6608 () Int)
(declare-fun x8058 () Int)
(declare-fun x4302 () Int)
(declare-fun x3527 () Int)
(declare-fun x5776 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x6643 () Int)
(declare-fun x8232 () Int)
(declare-fun x8148 () Bool)
(declare-fun x5126 () Int)
(declare-fun x679 () Int)
(declare-fun x7471 () Int)
(declare-fun x5225 () Int)
(declare-fun x4495 () Bool)
(declare-fun x13 () Int)
(declare-fun x473 () Bool)
(declare-fun x5185 () Bool)
(declare-fun x3183 () Int)
(declare-fun x2843 () Bool)
(declare-fun x2648 () Bool)
(declare-fun x7857 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x7884 () Int)
(declare-fun x396 () Int)
(declare-fun x4138 () Int)
(declare-fun x3044 () Int)
(declare-fun x835 () Int)
(declare-fun x2024 (Int) Int)
(declare-fun x770 () Int)
(declare-fun x1418 () Bool)
(declare-fun x1312 () Int)
(declare-fun x7487 () Int)
(declare-fun x1619 () Int)
(declare-fun x203 () Int)
(declare-fun x6208 () Int)
(declare-fun x7815 () Int)
(declare-fun x6306 () Int)
(declare-fun x1187 () Int)
(declare-fun x8411 () Int)
(declare-fun x5113 () Int)
(declare-fun x2888 () Bool)
(declare-fun x3519 () Int)
(declare-fun x3850 () Bool)
(declare-fun x324 () Int)
(declare-fun x6834 () Bool)
(declare-fun x240 () Int)
(declare-fun x1832 () Int)
(declare-fun x4717 () Bool)
(declare-fun x2082 () Int)
(declare-fun x8453 () Int)
(declare-fun x7092 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x149 () Int)
(declare-fun x2415 () Int)
(declare-fun x2225 () Bool)
(declare-fun x2603 () Bool)
(declare-fun x429 () Bool)
(declare-fun x3128 () Int)
(declare-fun x5089 () Int)
(declare-fun x3594 () Int)
(declare-fun x3185 () Bool)
(declare-fun x1088 () Int)
(declare-fun x6080 () Bool)
(declare-fun x6002 () Bool)
(declare-fun x5516 () Int)
(declare-fun x6048 () Int)
(declare-fun x6754 () Int)
(declare-fun x5218 () Int)
(declare-fun x4571 () Bool)
(declare-fun x7761 () Bool)
(declare-fun x7492 () Bool)
(declare-fun x1971 () Int)
(declare-fun x5722 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x8527 () Int)
(declare-fun x29 () Bool)
(declare-fun x7043 () Bool)
(declare-fun x2307 () Int)
(declare-fun x3970 () Int)
(declare-fun x5857 () Int)
(declare-fun x2489 () Int)
(declare-fun x2001 () Int)
(declare-fun x4862 () Bool)
(declare-fun x137 () Int)
(declare-fun x1299 () Bool)
(declare-fun x5338 () Bool)
(declare-fun x7425 () Int)
(declare-fun x342 () Int)
(declare-fun x1379 () Int)
(declare-fun x3431 () Int)
(declare-fun x3653 () Int)
(declare-fun x6335 () Bool)
(declare-fun x860 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x799 () Int)
(declare-fun x2450 () Bool)
(declare-fun x1056 () Int)
(declare-fun x3720 () Bool)
(declare-fun x3490 () Int)
(declare-fun x5761 () Int)
(declare-fun x3960 () Bool)
(declare-fun x5623 () Int)
(declare-fun x334 () Bool)
(declare-fun x4811 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x6139 () Int)
(declare-fun x6406 () Bool)
(declare-fun x4400 () Int)
(declare-fun x2032 () Bool)
(declare-fun x1940 () Int)
(declare-fun x1352 () Int)
(declare-fun x6496 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x28 () Int)
(declare-fun x3096 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x2597 () Int)
(declare-fun x5067 () Int)
(declare-fun x3046 () Bool)
(declare-fun x3304 () Int)
(declare-fun x4392 () Int)
(declare-fun x7819 () Int)
(declare-fun x1304 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x6955 () Int)
(declare-fun x5497 () Bool)
(declare-fun x3016 () Int)
(declare-fun x321 () Int)
(declare-fun x7811 () Bool)
(declare-fun x2959 () Int)
(declare-fun x6961 () Int)
(declare-fun x7037 () Bool)
(declare-fun x7972 () Bool)
(declare-fun x3783 () Int)
(declare-fun x7949 () Bool)
(declare-fun x7901 () Bool)
(declare-fun x8566 () Bool)
(declare-fun x5967 () Int)
(declare-fun x2727 () Int)
(declare-fun x8145 () Bool)
(declare-fun x8095 () Bool)
(declare-fun x2968 () Int)
(declare-fun x4814 () Int)
(declare-fun x100 () Bool)
(declare-fun x60 () Int)
(declare-fun x683 () Int)
(declare-fun x3089 () Int)
(declare-fun x252 () Bool)
(declare-fun x7522 () Int)
(declare-fun x6980 () Int)
(declare-fun x7554 () Bool)
(declare-fun x3966 () Int)
(declare-fun x1072 () Bool)
(declare-fun x6591 () Bool)
(declare-fun x6647 () Int)
(declare-fun x2324 (Int) Int)
(declare-fun x4194 () Bool)
(declare-fun x2056 () Int)
(declare-fun x5994 () Bool)
(declare-fun x44 () Int)
(declare-fun x7205 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x7240 () Bool)
(declare-fun x8131 () Int)
(declare-fun x3453 () Int)
(declare-fun x4565 () Int)
(declare-fun x6879 () Bool)
(declare-fun x6290 () Int)
(declare-fun x2872 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x219 () Bool)
(declare-fun x6116 () Int)
(declare-fun x469 () Bool)
(declare-fun x5 () Bool)
(declare-fun x4057 () Int)
(declare-fun x1349 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x3829 () Int)
(declare-fun x6860 () Bool)
(declare-fun x639 () Int)
(declare-fun x3147 () Bool)
(declare-fun x4937 () Int)
(declare-fun x7116 () Bool)
(declare-fun x7376 () Int)
(declare-fun x3230 () Bool)
(declare-fun x3598 () Int)
(declare-fun x5551 () Int)
(declare-fun x5238 () Int)
(declare-fun x1686 () Bool)
(declare-fun x7730 () Int)
(declare-fun x925 () Int)
(declare-fun x8173 () Int)
(declare-fun x5639 () Int)
(declare-fun x665 () Bool)
(declare-fun x7124 () Bool)
(declare-fun x8551 () Bool)
(declare-fun x36 () Int)
(declare-fun x3204 () Int)
(declare-fun x5827 () Bool)
(declare-fun x476 () Int)
(declare-fun x3925 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x6958 () Int)
(declare-fun x212 () Bool)
(declare-fun x5836 () Bool)
(declare-fun x4437 () Int)
(declare-fun x5094 () Bool)
(declare-fun x7742 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x3679 () Int)
(declare-fun x6241 () Int)
(declare-fun x5130 () Bool)
(declare-fun x2402 () Int)
(declare-fun x8129 () Int)
(declare-fun x6277 () Bool)
(declare-fun x6607 () Int)
(declare-fun x8036 () Bool)
(declare-fun x2873 () Int)
(declare-fun x7234 () Int)
(declare-fun x5301 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1006 () Int)
(declare-fun x7579 () Int)
(declare-fun x735 () Bool)
(declare-fun x1308 () Int)
(declare-fun x464 () Bool)
(declare-fun x3904 () Int)
(declare-fun x5282 () Int)
(declare-fun x5872 () Bool)
(declare-fun x4523 () Int)
(declare-fun x3603 () Bool)
(declare-fun x2493 () Int)
(declare-fun x7580 () Int)
(declare-fun x4768 () Int)
(declare-fun x3591 () Int)
(declare-fun x6037 () Int)
(declare-fun x524 () Bool)
(declare-fun x85 () Bool)
(declare-fun x5320 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x1899 () Int)
(declare-fun x7912 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x7217 () Int)
(declare-fun x8283 () Bool)
(declare-fun x16 () Int)
(declare-fun x3632 () Bool)
(declare-fun x5886 () Int)
(declare-fun x6769 () Int)
(declare-fun x7551 () Bool)
(declare-fun x5957 () Int)
(declare-fun x7318 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x5157 () Bool)
(declare-fun x5531 () Bool)
(declare-fun x5474 () Bool)
(declare-fun x2901 () Int)
(declare-fun x2189 () Int)
(declare-fun x3299 () Int)
(declare-fun x2503 () Int)
(declare-fun x3213 () Bool)
(declare-fun x2301 () Int)
(declare-fun x8456 () Int)
(declare-fun x6640 () Bool)
(declare-fun x6854 () Int)
(declare-fun x5445 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x7980 () Int)
(declare-fun x3193 () Bool)
(declare-fun x840 () Bool)
(declare-fun x960 () Int)
(declare-fun x1818 () Int)
(declare-fun x3310 () Int)
(declare-fun x7359 () Bool)
(declare-fun x2909 () Int)
(declare-fun x8373 () Int)
(declare-fun x275 () Int)
(declare-fun x6471 () Int)
(declare-fun x5546 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x791 () Int)
(declare-fun x5428 () Int)
(declare-fun x7881 () Bool)
(declare-fun x4359 () Bool)
(declare-fun x4037 () Int)
(declare-fun x572 (Int) Int)
(declare-fun x2795 () Int)
(declare-fun x1718 () Int)
(declare-fun x6109 () Int)
(declare-fun x5139 () Bool)
(declare-fun x5027 () Bool)
(declare-fun x1734 () Int)
(declare-fun x7076 () Int)
(declare-fun x8394 () Bool)
(declare-fun x6286 () Bool)
(declare-fun x4105 () Int)
(declare-fun x717 () Int)
(declare-fun x7629 () Bool)
(declare-fun x139 () Bool)
(declare-fun x6193 () Bool)
(declare-fun x7997 () Int)
(declare-fun x6368 () Bool)
(declare-fun x8185 () Bool)
(declare-fun x4645 () Int)
(declare-fun x2406 () Int)
(declare-fun x8218 () Int)
(declare-fun x3677 () Bool)
(declare-fun x3968 () Int)
(declare-fun x3026 () Bool)
(declare-fun x6495 () Bool)
(declare-fun x1152 () Int)
(declare-fun x4332 () Bool)
(declare-fun x5621 () Bool)
(declare-fun x6082 () Int)
(declare-fun x1900 () Int)
(declare-fun x3208 () Int)
(declare-fun x3642 () Int)
(declare-fun x6515 () Bool)
(declare-fun x3779 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x3958 () Int)
(declare-fun x5421 () Int)
(declare-fun x6529 () Int)
(declare-fun x3992 () Int)
(declare-fun x1806 () Bool)
(declare-fun x532 () Int)
(declare-fun x7810 () Bool)
(declare-fun x4734 () Int)
(declare-fun x3889 () Int)
(declare-fun x7200 () Bool)
(declare-fun x4163 () Bool)
(declare-fun x5444 () Bool)
(declare-fun x7853 () Int)
(declare-fun x6221 () Bool)
(declare-fun x6151 () Int)
(declare-fun x745 () Int)
(declare-fun x7281 () Bool)
(declare-fun x7208 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x5879 () Int)
(declare-fun x727 () Int)
(declare-fun x7006 () Int)
(declare-fun x1991 () Int)
(declare-fun x8510 () Int)
(declare-fun x7156 (Int) Int)
(declare-fun x5643 () Bool)
(declare-fun x5843 () Int)
(declare-fun x5687 () Bool)
(declare-fun x5294 () Int)
(declare-fun x5280 () Bool)
(declare-fun x5849 () Bool)
(declare-fun x5473 () Bool)
(declare-fun x6134 () Bool)
(declare-fun x8286 () Int)
(declare-fun x6969 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1208 () Bool)
(declare-fun x254 () Bool)
(declare-fun x2089 () Int)
(declare-fun x627 () Int)
(declare-fun x3639 () Int)
(declare-fun x5897 () Int)
(declare-fun x5477 (Int) Int)
(declare-fun x3261 () Bool)
(declare-fun x6114 () Int)
(declare-fun x1531 () Int)
(declare-fun x3069 () Int)
(declare-fun x8107 () Int)
(declare-fun x6668 () Int)
(declare-fun x2081 () Bool)
(declare-fun x3078 () Int)
(declare-fun x4790 () Int)
(declare-fun x812 () Int)
(declare-fun x7491 () Int)
(declare-fun x6622 () Int)
(declare-fun x4657 () Bool)
(declare-fun x6758 () Bool)
(declare-fun x1251 () Int)
(declare-fun x3115 () Int)
(declare-fun x967 () Bool)
(declare-fun x1836 () Int)
(declare-fun x2516 () Bool)
(declare-fun x4980 () Int)
(declare-fun x6876 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x4727 () Int)
(declare-fun x3300 () Bool)
(declare-fun x2571 () Int)
(declare-fun x5009 () Int)
(declare-fun x1093 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x8561 () Int)
(declare-fun x1406 (Int) Int)
(declare-fun x1722 () Int)
(declare-fun x3241 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x1911 () Int)
(declare-fun x4256 () Int)
(declare-fun x8315 () Int)
(declare-fun x7136 () Bool)
(declare-fun x6825 () Int)
(declare-fun x1485 () Int)
(declare-fun x5780 () Int)
(declare-fun x6664 () Int)
(declare-fun x5103 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x4720 () Int)
(declare-fun x3767 () Int)
(declare-fun x7025 () Bool)
(declare-fun x5713 () Bool)
(declare-fun x5939 () Int)
(declare-fun x1866 () Bool)
(declare-fun x6567 () Bool)
(declare-fun x6938 () Int)
(declare-fun x2547 () Int)
(declare-fun x4945 () Int)
(declare-fun x5077 () Bool)
(declare-fun x5213 () Int)
(declare-fun x1985 () Bool)
(declare-fun x7147 () Bool)
(declare-fun x5521 () Int)
(declare-fun x1612 () Int)
(declare-fun x1605 () Bool)
(declare-fun x5678 () Bool)
(declare-fun x5755 () Int)
(declare-fun x4250 () Bool)
(declare-fun x4751 () Int)
(declare-fun x7210 () Int)
(declare-fun x4460 () Int)
(declare-fun x5964 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x4143 () Bool)
(declare-fun x5540 () Bool)
(declare-fun x5200 () Int)
(declare-fun x1013 () Int)
(declare-fun x5848 () Int)
(declare-fun x8052 () Int)
(declare-fun x301 () Int)
(declare-fun x2003 () Bool)
(declare-fun x3319 () Int)
(declare-fun x7843 () Int)
(declare-fun x448 () Int)
(declare-fun x5638 (Int) Int)
(declare-fun x2327 () Int)
(declare-fun x245 () Bool)
(declare-fun x7458 () Int)
(declare-fun x3533 () Int)
(declare-fun x479 () Bool)
(declare-fun x7437 () Int)
(declare-fun x4673 () Int)
(declare-fun x5911 () Int)
(declare-fun x4388 () Int)
(declare-fun x2833 () Bool)
(declare-fun x1540 () Int)
(declare-fun x2271 () Int)
(declare-fun x2221 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1499 () Int)
(declare-fun x341 () Int)
(declare-fun x4438 () Bool)
(declare-fun x7273 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x3500 () Int)
(declare-fun x2799 () Bool)
(declare-fun x4249 () Int)
(declare-fun x843 () Int)
(declare-fun x1515 () Int)
(declare-fun x6888 () Int)
(declare-fun x2814 () Int)
(declare-fun x1264 () Bool)
(declare-fun x8054 () Int)
(declare-fun x7964 () Int)
(declare-fun x3789 () Bool)
(declare-fun x7987 () Bool)
(declare-fun x2228 () Int)
(declare-fun x6038 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x6253 () Int)
(declare-fun x2722 () Bool)
(declare-fun x8305 () Int)
(declare-fun x7442 () Bool)
(declare-fun x2621 () Int)
(declare-fun x6882 () Int)
(declare-fun x3095 () Bool)
(declare-fun x5783 () Bool)
(declare-fun x4992 () Bool)
(declare-fun x703 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x3965 () Bool)
(declare-fun x3524 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x6775 () Int)
(declare-fun x5694 () Bool)
(declare-fun x7977 () Bool)
(declare-fun x5602 () Int)
(declare-fun x7312 () Int)
(declare-fun x2933 () Bool)
(declare-fun x8247 () Int)
(declare-fun x1788 () Int)
(declare-fun x1711 () Int)
(declare-fun x1361 () Bool)
(declare-fun x4048 () Int)
(declare-fun x3178 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x6474 () Bool)
(declare-fun x331 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x4315 (Int) Int)
(declare-fun x6238 () Bool)
(declare-fun x7389 () Int)
(declare-fun x1254 () Int)
(declare-fun x8313 () Int)
(declare-fun x3406 () Int)
(declare-fun x8336 () Bool)
(declare-fun x3104 () Int)
(declare-fun x6249 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x5534 () Int)
(declare-fun x6599 () Bool)
(declare-fun x4089 () Int)
(declare-fun x6881 () Int)
(declare-fun x2551 () Int)
(declare-fun x7614 () Bool)
(declare-fun x4034 () Int)
(declare-fun x1573 () Int)
(declare-fun x4942 () Int)
(declare-fun x3561 () Bool)
(declare-fun x1392 () Int)
(declare-fun x2562 () Int)
(declare-fun x5388 () Int)
(declare-fun x5675 () Int)
(declare-fun x3477 () Int)
(declare-fun x8078 () Bool)
(declare-fun x4694 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x7473 () Int)
(declare-fun x5050 () Bool)
(declare-fun x987 () Bool)
(declare-fun x4856 () Bool)
(declare-fun x7555 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x6140 () Int)
(declare-fun x489 () Bool)
(declare-fun x6380 () Bool)
(declare-fun x4755 () Bool)
(declare-fun x403 () Bool)
(declare-fun x4901 () Int)
(declare-fun x7385 () Int)
(declare-fun x3707 () Int)
(declare-fun x3148 () Bool)
(declare-fun x4240 () Int)
(declare-fun x2618 () Int)
(declare-fun x2102 () Bool)
(declare-fun x6435 () Int)
(declare-fun x1801 () Int)
(declare-fun x1307 () Bool)
(declare-fun x3325 () Int)
(declare-fun x7023 () Int)
(declare-fun x5299 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x5671 () Int)
(declare-fun x7827 () Int)
(declare-fun x5254 () Int)
(declare-fun x6034 () Bool)
(declare-fun x783 () Int)
(declare-fun x1780 () Int)
(declare-fun x7748 () Int)
(declare-fun x3212 () Int)
(declare-fun x6145 () Int)
(declare-fun x2187 () Int)
(declare-fun x527 () Int)
(declare-fun x6708 () Bool)
(declare-fun x847 () Bool)
(declare-fun x319 () Int)
(declare-fun x3425 () Int)
(declare-fun x6194 () Bool)
(declare-fun x7369 () Int)
(declare-fun x4888 () Int)
(declare-fun x4634 () Int)
(declare-fun x1383 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x1884 () Int)
(declare-fun x1567 () Int)
(declare-fun x4489 () Int)
(declare-fun x4134 () Int)
(declare-fun x2611 () Bool)
(declare-fun x4585 (Int) Int)
(declare-fun x4482 () Bool)
(declare-fun x7768 () Bool)
(declare-fun x7754 () Int)
(declare-fun x1656 () Int)
(declare-fun x8025 () Bool)
(declare-fun x456 () Bool)
(declare-fun x6349 () Int)
(declare-fun x8495 () Bool)
(declare-fun x8133 () Int)
(declare-fun x5765 () Int)
(declare-fun x420 () Bool)
(declare-fun x8161 () Int)
(declare-fun x7428 () Int)
(declare-fun x263 () Bool)
(declare-fun x148 () Int)
(declare-fun x5782 () Int)
(declare-fun x2878 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x2978 () Int)
(declare-fun x4865 () Int)
(declare-fun x8302 () Bool)
(declare-fun x3667 () Int)
(declare-fun x6796 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x8370 () Int)
(declare-fun x5796 () Bool)
(declare-fun x6273 () Int)
(declare-fun x7842 () Int)
(declare-fun x7283 () Bool)
(declare-fun x2808 () Int)
(declare-fun x1303 () Int)
(declare-fun x668 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1570 () Int)
(declare-fun x8275 () Bool)
(declare-fun x5284 () Bool)
(declare-fun x8037 () Int)
(declare-fun x5834 () Int)
(declare-fun x6215 () Int)
(declare-fun x4555 () Int)
(declare-fun x3210 () Bool)
(declare-fun x7047 () Int)
(declare-fun x6740 () Bool)
(declare-fun x998 () Int)
(declare-fun x96 () Int)
(declare-fun x7894 () Bool)
(declare-fun x603 (Int) Int)
(declare-fun x626 () Int)
(declare-fun x3994 () Bool)
(declare-fun x7229 () Bool)
(declare-fun x5069 (Int) Int)
(declare-fun x7992 () Int)
(declare-fun x4129 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x5631 () Int)
(declare-fun x5751 () Bool)
(declare-fun x3855 () Bool)
(declare-fun x5128 () Int)
(declare-fun x2264 () Int)
(declare-fun x101 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x1660 () Int)
(declare-fun x4209 () Int)
(declare-fun x896 () Bool)
(declare-fun x1715 () Int)
(declare-fun x3301 () Int)
(declare-fun x3662 () Int)
(declare-fun x2796 () Bool)
(declare-fun x8227 () Int)
(declare-fun x5539 () Bool)
(declare-fun x45 () Int)
(declare-fun x930 () Int)
(declare-fun x3647 (Int) Int)
(declare-fun x6829 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x3355 () Int)
(declare-fun x7750 () Int)
(declare-fun x7777 () Int)
(declare-fun x1103 () Int)
(declare-fun x128 () Bool)
(declare-fun x6234 () Bool)
(declare-fun x4990 () Bool)
(declare-fun x2973 () Int)
(declare-fun x7363 () Int)
(declare-fun x2806 () Bool)
(declare-fun x2052 () Int)
(declare-fun x3496 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x7621 (Int) Int)
(declare-fun x7743 () Bool)
(declare-fun x439 () Bool)
(declare-fun x3138 () Int)
(declare-fun x5076 () Bool)
(declare-fun x8205 () Int)
(declare-fun x4041 () Int)
(declare-fun x3040 () Bool)
(declare-fun x3570 () Bool)
(declare-fun x4298 () Int)
(declare-fun x1058 () Int)
(declare-fun x7265 () Int)
(declare-fun x6911 () Int)
(declare-fun x5752 () Bool)
(declare-fun x5507 () Int)
(declare-fun x3020 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x8281 () Int)
(declare-fun x6765 () Int)
(declare-fun x2236 () Int)
(declare-fun x3081 () Int)
(declare-fun x3328 () Bool)
(declare-fun x7293 () Bool)
(declare-fun x6645 () Bool)
(declare-fun x4719 () Bool)
(declare-fun x6459 () Bool)
(declare-fun x4110 () Int)
(declare-fun x6282 () Bool)
(declare-fun x5142 () Bool)
(declare-fun x6717 () Int)
(declare-fun x286 () Bool)
(declare-fun x6784 () Bool)
(declare-fun x5925 () Bool)
(declare-fun x2836 () Int)
(declare-fun x6726 () Bool)
(declare-fun x6705 () Int)
(declare-fun x6950 () Bool)
(declare-fun x2961 () Int)
(declare-fun x7794 () Bool)
(declare-fun x4559 () Int)
(declare-fun x491 () Int)
(declare-fun x422 () Int)
(declare-fun x5309 () Int)
(declare-fun x2459 () Bool)
(declare-fun x4576 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x3015 () Int)
(declare-fun x550 () Bool)
(declare-fun x303 () Bool)
(declare-fun x7271 () Bool)
(declare-fun x4311 () Int)
(declare-fun x6358 () Bool)
(declare-fun x6419 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x7791 () Bool)
(declare-fun x510 () Int)
(declare-fun x2829 () Int)
(declare-fun x3995 () Int)
(declare-fun x6390 () Int)
(declare-fun x8316 () Int)
(declare-fun x3931 () Bool)
(declare-fun x736 () Int)
(declare-fun x4205 () Int)
(declare-fun x966 () Int)
(declare-fun x6903 () Int)
(declare-fun x4066 () Int)
(declare-fun x7728 () Int)
(declare-fun x4518 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x892 () Int)
(declare-fun x1172 () Int)
(declare-fun x8184 () Int)
(declare-fun x3659 () Int)
(declare-fun x2135 () Bool)
(declare-fun x3162 () Int)
(declare-fun x1045 () Int)
(declare-fun x5594 () Bool)
(declare-fun x5928 () Int)
(declare-fun x7315 () Bool)
(declare-fun x8113 () Bool)
(declare-fun x435 () Bool)
(declare-fun x5685 () Int)
(declare-fun x705 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x7575 () Int)
(declare-fun x4661 () Bool)
(declare-fun x517 () Int)
(declare-fun x565 () Int)
(declare-fun x2295 () Bool)
(declare-fun x4840 () Int)
(declare-fun x2442 () Int)
(declare-fun x5257 () Bool)
(declare-fun x6513 () Int)
(declare-fun x828 () Int)
(declare-fun x6396 () Bool)
(declare-fun x5005 () Int)
(declare-fun x3379 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x6744 () Int)
(declare-fun x1875 () Int)
(declare-fun x1827 () Int)
(declare-fun x7176 () Int)
(declare-fun x5509 () Int)
(declare-fun x6530 () Bool)
(declare-fun x7195 () Int)
(declare-fun x2298 () Bool)
(declare-fun x5908 () Int)
(declare-fun x5828 () Int)
(declare-fun x462 () Bool)
(declare-fun x8042 () Int)
(declare-fun x2289 () Bool)
(declare-fun x7038 () Bool)
(declare-fun x822 () Int)
(declare-fun x2309 () Int)
(declare-fun x229 () Int)
(declare-fun x7040 () Bool)
(declare-fun x5291 () Int)
(declare-fun x3272 () Int)
(declare-fun x6191 () Bool)
(declare-fun x5998 () Int)
(declare-fun x5134 () Int)
(declare-fun x7856 () Int)
(declare-fun x8098 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x633 () Int)
(declare-fun x3878 (Int) Int)
(declare-fun x8139 () Int)
(declare-fun x4703 () Int)
(declare-fun x158 () Int)
(declare-fun x1149 () Int)
(declare-fun x3371 () Bool)
(declare-fun x4019 () Int)
(declare-fun x6075 () Bool)
(declare-fun x4985 () Bool)
(declare-fun x7398 () Int)
(declare-fun x5743 () Bool)
(declare-fun x3505 () Int)
(declare-fun x6399 () Int)
(declare-fun x4012 () Int)
(declare-fun x4816 () Bool)
(declare-fun x6595 () Int)
(declare-fun x2756 () Int)
(declare-fun x4564 () Bool)
(declare-fun x6343 () Int)
(declare-fun x7941 () Int)
(declare-fun x6350 () Int)
(declare-fun x5335 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x5184 () Int)
(declare-fun x1201 () Int)
(declare-fun x602 () Bool)
(declare-fun x3052 () Bool)
(declare-fun x2929 () Int)
(declare-fun x6698 () Bool)
(declare-fun x701 (Int) Int)
(declare-fun x7695 () Bool)
(declare-fun x4745 () Int)
(declare-fun x3741 () Int)
(declare-fun x3558 () Bool)
(declare-fun x8108 () Bool)
(declare-fun x7539 () Bool)
(declare-fun x4406 () Bool)
(declare-fun x635 () Int)
(declare-fun x699 () Bool)
(declare-fun x4639 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x1055 (Int) Int)
(declare-fun x7536 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x6011 () Bool)
(declare-fun x8009 () Bool)
(declare-fun x3247 () Int)
(declare-fun x8013 () Bool)
(declare-fun x5878 () Int)
(declare-fun x1522 () Bool)
(declare-fun x39 () Bool)
(declare-fun x8051 () Int)
(declare-fun x2928 () Int)
(declare-fun x6169 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x4570 () Int)
(declare-fun x5363 () Int)
(declare-fun x3532 () Bool)
(declare-fun x268 () Int)
(declare-fun x4505 () Int)
(declare-fun x3018 () Int)
(declare-fun x8192 () Bool)
(declare-fun x15 () Bool)
(declare-fun x3637 () Int)
(declare-fun x3555 () Int)
(declare-fun x539 () Bool)
(declare-fun x2140 () Int)
(declare-fun x4176 () Int)
(declare-fun x7160 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x4950 () Int)
(declare-fun x4214 () Bool)
(declare-fun x2128 () Int)
(declare-fun x5788 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x5146 () Int)
(declare-fun x4092 () Int)
(declare-fun x7409 () Int)
(declare-fun x2279 () Bool)
(declare-fun x419 () Int)
(declare-fun x5221 () Int)
(declare-fun x4387 () Int)
(declare-fun x1922 () Int)
(declare-fun x465 () Int)
(declare-fun x755 () Int)
(declare-fun x5747 () Int)
(declare-fun x3101 () Bool)
(declare-fun x817 () Int)
(declare-fun x7844 () Bool)
(declare-fun x5689 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x894 () Bool)
(declare-fun x3348 () Bool)
(declare-fun x7019 () Bool)
(declare-fun x3032 () Int)
(declare-fun x1895 () Int)
(declare-fun x1813 () Bool)
(declare-fun x6905 () Bool)
(declare-fun x8228 () Bool)
(declare-fun x4890 (Int) Int)
(declare-fun x5929 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x1309 () Int)
(declare-fun x176 () Bool)
(declare-fun x5464 () Bool)
(declare-fun x2352 () Int)
(declare-fun x2134 () Bool)
(declare-fun x8014 () Int)
(declare-fun x6165 () Int)
(declare-fun x2678 () Bool)
(declare-fun x4878 () Bool)
(declare-fun x6046 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x8516 () Bool)
(declare-fun x6315 () Int)
(declare-fun x5323 () Int)
(declare-fun x410 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x7036 () Int)
(declare-fun x1817 () Bool)
(declare-fun x5575 () Int)
(declare-fun x8250 () Bool)
(declare-fun x1243 () Int)
(declare-fun x6641 () Int)
(declare-fun x8324 () Bool)
(declare-fun x4517 () Int)
(declare-fun x6057 () Int)
(declare-fun x1864 () Bool)
(declare-fun x2667 () Int)
(declare-fun x8414 () Bool)
(declare-fun x5841 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x6917 () Int)
(declare-fun x5807 () Bool)
(declare-fun x7556 () Int)
(declare-fun x4102 () Int)
(declare-fun x3813 () Int)
(declare-fun x8303 () Bool)
(declare-fun x5969 () Int)
(declare-fun x8327 () Int)
(declare-fun x7191 () Int)
(declare-fun x6928 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x4242 () Bool)
(declare-fun x7404 () Int)
(declare-fun x7909 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x290 () Bool)
(declare-fun x3367 () Int)
(declare-fun x917 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x84 () Int)
(declare-fun x7757 () Int)
(declare-fun x4843 (Int) Int)
(declare-fun x1907 () Int)
(declare-fun x2009 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x1927 () Int)
(declare-fun x4869 () Bool)
(declare-fun x8255 () Int)
(declare-fun x7386 () Int)
(declare-fun x1043 () Int)
(declare-fun x7303 () Bool)
(declare-fun x5041 () Int)
(declare-fun x7452 () Bool)
(declare-fun x653 () Bool)
(declare-fun x2691 () Int)
(declare-fun x8317 () Int)
(declare-fun x2218 () Int)
(declare-fun x7007 () Int)
(declare-fun x576 () Int)
(declare-fun x3683 () Bool)
(declare-fun x830 () Bool)
(declare-fun x5976 () Bool)
(declare-fun x7710 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x6384 () Bool)
(declare-fun x8419 () Bool)
(declare-fun x2672 () Int)
(declare-fun x6658 () Int)
(declare-fun x4443 () Int)
(declare-fun x1351 () Bool)
(declare-fun x5116 () Int)
(declare-fun x1190 () Bool)
(declare-fun x6942 () Int)
(declare-fun x3606 () Bool)
(declare-fun x269 () Bool)
(declare-fun x3283 () Int)
(declare-fun x4201 () Int)
(declare-fun x8442 () Bool)
(declare-fun x2705 () Int)
(declare-fun x5971 () Bool)
(declare-fun x8489 () Bool)
(declare-fun x5804 () Int)
(declare-fun x7935 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x233 () Bool)
(declare-fun x3134 () Int)
(declare-fun x7983 () Int)
(declare-fun x1419 () Bool)
(declare-fun x5047 () Int)
(declare-fun x4325 () Bool)
(declare-fun x6578 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x1138 () Int)
(declare-fun x7604 () Int)
(declare-fun x2456 () Int)
(declare-fun x5104 () Int)
(declare-fun x686 () Bool)
(declare-fun x4515 () Int)
(declare-fun x731 () Int)
(declare-fun x5913 () Int)
(declare-fun x848 () Bool)
(declare-fun x1912 () Int)
(declare-fun x3572 () Int)
(declare-fun x1824 () Int)
(declare-fun x4952 () Int)
(declare-fun x90 () Bool)
(declare-fun x6041 () Int)
(declare-fun x2569 () Bool)
(declare-fun x636 () Bool)
(declare-fun x458 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x1598 () Int)
(declare-fun x5017 () Int)
(declare-fun x5411 () Int)
(declare-fun x4804 () Bool)
(declare-fun x8071 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x7380 () Int)
(declare-fun x4614 () Int)
(declare-fun x3447 () Int)
(declare-fun x2120 () Bool)
(declare-fun x591 () Int)
(declare-fun x6161 () Bool)
(declare-fun x7113 () Bool)
(declare-fun x4870 () Int)
(declare-fun x8439 () Bool)
(declare-fun x7898 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1238 () Int)
(declare-fun x2283 () Int)
(declare-fun x1234 () Bool)
(declare-fun x4154 () Int)
(declare-fun x7206 () Int)
(declare-fun x2931 () Bool)
(declare-fun x3090 () Int)
(declare-fun x436 () Bool)
(declare-fun x5188 () Bool)
(declare-fun x1119 () Int)
(declare-fun x3858 () Bool)
(declare-fun x2092 () Int)
(declare-fun x766 () Int)
(declare-fun x3227 () Int)
(declare-fun x7762 () Int)
(declare-fun x5475 () Int)
(declare-fun x7420 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x6012 () Bool)
(declare-fun x70 () Int)
(declare-fun x4989 () Bool)
(declare-fun x2421 () Bool)
(declare-fun x6374 () Int)
(declare-fun x7605 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x3054 () Int)
(declare-fun x7115 () Int)
(declare-fun x171 () Int)
(declare-fun x3854 () Int)
(declare-fun x417 () Bool)
(declare-fun x7546 () Int)
(declare-fun x6460 () Int)
(declare-fun x945 () Int)
(declare-fun x8517 () Int)
(declare-fun x7459 () Int)
(declare-fun x724 () Int)
(declare-fun x1155 () Int)
(declare-fun x4970 () Bool)
(declare-fun x7351 () Int)
(declare-fun x1643 () Int)
(declare-fun x1678 () Int)
(declare-fun x5603 () Bool)
(declare-fun x328 () Bool)
(declare-fun x3094 () Int)
(declare-fun x6873 () Bool)
(declare-fun x1420 () Int)
(declare-fun x6454 () Bool)
(declare-fun x512 (Int) Int)
(declare-fun x5738 () Int)
(declare-fun x244 () Int)
(declare-fun x4994 () Int)
(declare-fun x6715 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x5426 () Int)
(declare-fun x864 () Bool)
(declare-fun x5816 () Int)
(declare-fun x1075 () Bool)
(declare-fun x5829 () Bool)
(declare-fun x7970 () Bool)
(declare-fun x3820 () Int)
(declare-fun x6841 () Int)
(declare-fun x5746 () Bool)
(declare-fun x716 () Bool)
(declare-fun x3809 () Bool)
(declare-fun x3191 () Bool)
(declare-fun x8332 () Int)
(declare-fun x4549 () Int)
(declare-fun x2133 () Int)
(declare-fun x4157 () Int)
(declare-fun x3664 () Int)
(declare-fun x351 () Bool)
(declare-fun x7792 () Int)
(declare-fun x2223 () Int)
(declare-fun x4575 () Int)
(declare-fun x5378 () Bool)
(declare-fun x920 (Int) Int)
(declare-fun x6192 () Bool)
(declare-fun x5900 () Int)
(declare-fun x2792 () Int)
(declare-fun x609 () Bool)
(declare-fun x3470 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x7942 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x7325 () Bool)
(declare-fun x5559 () Int)
(declare-fun x915 () Bool)
(declare-fun x7953 () Bool)
(declare-fun x6428 () Int)
(declare-fun x5253 () Int)
(declare-fun x8340 () Int)
(declare-fun x4620 () Int)
(declare-fun x6707 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x1814 () Int)
(declare-fun x8237 () Int)
(declare-fun x738 () Int)
(declare-fun x3554 () Int)
(declare-fun x5511 () Bool)
(declare-fun x5296 () Bool)
(declare-fun x4090 () Int)
(declare-fun x6662 () Bool)
(declare-fun x6555 () Int)
(declare-fun x1066 (Int Int) Int)
(declare-fun x3976 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x3037 () Int)
(declare-fun x865 () Int)
(declare-fun x8529 () Int)
(declare-fun x4123 () Bool)
(declare-fun x1030 () Int)
(declare-fun x8064 () Bool)
(declare-fun x7581 () Int)
(declare-fun x6714 () Bool)
(declare-fun x5617 () Int)
(declare-fun x4724 () Bool)
(declare-fun x7357 () Bool)
(declare-fun x7566 () Int)
(declare-fun x983 () Bool)
(declare-fun x2904 () Int)
(declare-fun x4274 () Bool)
(declare-fun x5861 () Int)
(declare-fun x5572 () Int)
(declare-fun x3776 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x3628 () Int)
(declare-fun x3205 () Int)
(declare-fun x372 () Bool)
(declare-fun x7940 () Int)
(declare-fun x7775 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x3363 () Int)
(declare-fun x898 () Bool)
(declare-fun x4863 () Int)
(declare-fun x7413 () Int)
(declare-fun x7874 () Int)
(declare-fun x5690 () Bool)
(declare-fun x4068 () Int)
(declare-fun x3179 () Int)
(declare-fun x1142 () Bool)
(declare-fun x1233 () Int)
(declare-fun x5657 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x7751 () Int)
(declare-fun x6671 () Bool)
(declare-fun x2294 () Int)
(declare-fun x1259 () Int)
(declare-fun x3257 () Int)
(declare-fun x5847 () Int)
(declare-fun x2380 () Bool)
(declare-fun x4519 () Int)
(declare-fun x1479 () Bool)
(declare-fun x3884 () Bool)
(declare-fun x8293 () Int)
(declare-fun x10 () Bool)
(declare-fun x3881 () Int)
(declare-fun x2408 () Bool)
(declare-fun x222 () Bool)
(declare-fun x7451 () Bool)
(declare-fun x3146 () Int)
(declare-fun x102 () Bool)
(declare-fun x5518 () Bool)
(declare-fun x5953 () Int)
(declare-fun x3630 () Int)
(declare-fun x2858 () Bool)
(declare-fun x2686 () Int)
(declare-fun x877 () Int)
(declare-fun x2078 () Int)
(declare-fun x1878 () Bool)
(declare-fun x4492 () Bool)
(declare-fun x8541 () Bool)
(declare-fun x2841 () Int)
(declare-fun x7651 () Int)
(declare-fun x3876 () Int)
(declare-fun x1120 () Int)
(declare-fun x7356 () Bool)
(declare-fun x4711 () Int)
(declare-fun x3927 () Bool)
(declare-fun x3225 () Int)
(declare-fun x2917 () Int)
(declare-fun x4882 () Bool)
(declare-fun x6323 () Bool)
(declare-fun x8509 () Int)
(declare-fun x809 () Int)
(declare-fun x2087 () Bool)
(declare-fun x1101 () Int)
(declare-fun x4786 () Bool)
(declare-fun x6364 () Int)
(declare-fun x2651 () Int)
(declare-fun x4853 () Int)
(declare-fun x1204 () Int)
(declare-fun x1223 () Int)
(declare-fun x8326 () Bool)
(declare-fun x7952 () Bool)
(declare-fun x5915 () Int)
(declare-fun x6299 () Bool)
(declare-fun x4270 () Int)
(declare-fun x7765 () Int)
(declare-fun x757 () Int)
(declare-fun x8266 () Int)
(declare-fun x8003 () Int)
(declare-fun x8252 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x5410 () Int)
(declare-fun x7107 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x4924 () Int)
(declare-fun x6951 () Int)
(declare-fun x4792 () Int)
(declare-fun x1566 () Bool)
(declare-fun x8206 () Int)
(declare-fun x2791 () Int)
(declare-fun x440 () Int)
(declare-fun x1654 () Int)
(declare-fun x7441 () Int)
(declare-fun x6702 () Int)
(declare-fun x4592 () Int)
(declare-fun x7510 (Int) Int)
(declare-fun x163 () Int)
(declare-fun x1279 () Int)
(declare-fun x3674 () Bool)
(declare-fun x6265 () Int)
(declare-fun x6211 () Int)
(declare-fun x6489 () Int)
(declare-fun x1176 () Int)
(declare-fun x1325 () Int)
(declare-fun x5874 () Int)
(declare-fun x2557 () Int)
(declare-fun x1033 () Int)
(declare-fun x3174 () Bool)
(declare-fun x5293 () Int)
(declare-fun x7344 () Int)
(declare-fun x1226 () Int)
(declare-fun x7849 () Bool)
(declare-fun x2632 () Int)
(declare-fun x6610 () Bool)
(declare-fun x728 () Int)
(declare-fun x103 () Bool)
(declare-fun x5659 () Bool)
(declare-fun x4837 () Int)
(declare-fun x8422 () Int)
(declare-fun x7289 () Int)
(declare-fun x5845 () Int)
(declare-fun x6491 () Bool)
(declare-fun x7450 () Int)
(declare-fun x7326 () Bool)
(declare-fun x2566 () Int)
(declare-fun x2315 () Int)
(declare-fun x5376 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x8337 () Int)
(declare-fun x283 () Bool)
(declare-fun x32 (Int) Int)
(declare-fun x3873 () Int)
(declare-fun x6820 () Bool)
(declare-fun x5725 () Int)
(declare-fun x4262 () Bool)
(declare-fun x248 () Int)
(declare-fun x5365 () Bool)
(declare-fun x974 () Int)
(declare-fun x4931 () Bool)
(declare-fun x2559 () Int)
(declare-fun x6403 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x5522 () Bool)
(declare-fun x5470 () Int)
(declare-fun x773 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x5881 () Bool)
(declare-fun x5930 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x330 () Bool)
(declare-fun x7066 () Bool)
(declare-fun x4289 () Int)
(declare-fun x5062 () Int)
(declare-fun x7609 () Int)
(declare-fun x6572 () Int)
(declare-fun x2778 () Int)
(declare-fun x2385 () Int)
(declare-fun x6685 () Bool)
(declare-fun x3672 (Int) Int)
(declare-fun x3362 () Int)
(declare-fun x2775 () Int)
(declare-fun x7989 () Int)
(declare-fun x5729 () Int)
(declare-fun x8447 () Bool)
(declare-fun x5510 () Bool)
(declare-fun x6618 () Int)
(declare-fun x180 () Bool)
(declare-fun x472 () Int)
(declare-fun x8186 () Bool)
(declare-fun x7718 () Int)
(declare-fun x7611 () Int)
(declare-fun x7227 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x5114 () Int)
(declare-fun x5931 () Bool)
(declare-fun x20 () Int)
(declare-fun x4268 () Int)
(declare-fun x2420 () Bool)
(declare-fun x5946 () Int)
(declare-fun x480 () Int)
(declare-fun x913 () Bool)
(declare-fun x4928 () Int)
(declare-fun x6366 () Int)
(declare-fun x4052 () Bool)
(declare-fun x5514 () Bool)
(declare-fun x6074 () Bool)
(declare-fun x5025 () Bool)
(declare-fun x7733 () Bool)
(declare-fun x5391 () Int)
(declare-fun x7159 () Int)
(declare-fun x7631 () Bool)
(declare-fun x5963 (Int) Int)
(declare-fun x173 () Int)
(declare-fun x6000 () Int)
(declare-fun x3197 () Int)
(declare-fun x5973 () Int)
(declare-fun x1758 () Bool)
(declare-fun x4646 () Int)
(declare-fun x6506 () Int)
(declare-fun x1752 () Bool)
(declare-fun x6059 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x6537 () Int)
(declare-fun x7876 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x5192 () Bool)
(declare-fun x7622 (Int Int Int Int Int Int) Int)
(declare-fun x8138 () Int)
(declare-fun x4838 () Int)
(declare-fun x3106 () Bool)
(declare-fun x6721 () Int)
(declare-fun x629 () Bool)
(declare-fun x256 () Int)
(declare-fun x7634 () Int)
(declare-fun x583 () Int)
(declare-fun x1843 () Int)
(declare-fun x1288 () Int)
(declare-fun x7674 () Bool)
(declare-fun x795 () Int)
(declare-fun x1203 () Int)
(declare-fun x1792 () Int)
(declare-fun x8027 () Bool)
(declare-fun x5487 () Int)
(declare-fun x8301 () Int)
(declare-fun x5990 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x4195 () Int)
(declare-fun x7193 () Bool)
(declare-fun x7018 () Int)
(declare-fun x1215 () Bool)
(declare-fun x5310 () Int)
(declare-fun x8311 () Int)
(declare-fun x2107 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x7490 () Int)
(declare-fun x7354 () Bool)
(declare-fun x6779 () Bool)
(declare-fun x5826 () Int)
(declare-fun x785 () Bool)
(declare-fun x714 () Int)
(declare-fun x514 () Int)
(declare-fun x1132 () Int)
(declare-fun x7188 () Bool)
(declare-fun x368 () Bool)
(declare-fun x7330 () Bool)
(declare-fun x739 () Bool)
(declare-fun x4766 () Int)
(declare-fun x3728 () Int)
(declare-fun x5165 () Int)
(declare-fun x280 () Int)
(declare-fun x5337 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x8382 () Bool)
(declare-fun x7197 () Bool)
(declare-fun x4469 () Bool)
(declare-fun x3473 () Int)
(declare-fun x8195 () Int)
(declare-fun x6027 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x3152 () Int)
(declare-fun x5719 () Int)
(declare-fun x5810 () Int)
(declare-fun x3001 () Int)
(declare-fun x4401 () Int)
(declare-fun x7704 () Bool)
(declare-fun x2286 () Int)
(declare-fun x2613 () Bool)
(declare-fun x459 () Bool)
(declare-fun x5227 () Int)
(declare-fun x992 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x4366 () Int)
(declare-fun x4746 () Bool)
(declare-fun x7529 () Int)
(declare-fun x6826 () Bool)
(declare-fun x2850 () Int)
(declare-fun x80 () Bool)
(declare-fun x5302 () Int)
(declare-fun x2040 () Bool)
(declare-fun x5877 () Int)
(declare-fun x6822 () Int)
(declare-fun x3841 () Bool)
(declare-fun x2192 () Int)
(declare-fun x5234 () Int)
(declare-fun x6163 () Bool)
(declare-fun x6009 () Bool)
(declare-fun x3402 () Int)
(declare-fun x3422 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x5074 () Int)
(declare-fun x6442 () Bool)
(declare-fun x7329 () Int)
(declare-fun x7430 () Int)
(declare-fun x4011 () Bool)
(declare-fun x3869 () Int)
(declare-fun x4094 () Bool)
(declare-fun x5229 () Bool)
(declare-fun x3937 () Int)
(declare-fun x2925 () Int)
(declare-fun x3807 () Int)
(declare-fun x8385 () Bool)
(declare-fun x4871 () Int)
(declare-fun x8457 () Int)
(declare-fun x8545 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x8021 (Int) Int)
(declare-fun x1528 () Bool)
(declare-fun x136 () Bool)
(declare-fun x4608 () Bool)
(declare-fun x7133 () Bool)
(declare-fun x297 () Int)
(declare-fun x2342 () Bool)
(declare-fun x6636 () Bool)
(declare-fun x1747 () Int)
(declare-fun x5171 () Int)
(declare-fun x4807 () Int)
(declare-fun x6100 () Int)
(declare-fun x2573 () Int)
(declare-fun x373 () Int)
(declare-fun x7866 () Bool)
(declare-fun x788 () Int)
(declare-fun x3127 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x5499 (Int) Int)
(declare-fun x6722 () Int)
(declare-fun x4080 () Bool)
(declare-fun x7608 () Int)
(declare-fun x2305 () Int)
(declare-fun x412 () Int)
(declare-fun x2682 () Int)
(declare-fun x5935 () Int)
(declare-fun x1655 () Int)
(declare-fun x2194 () Bool)
(declare-fun x6155 () Bool)
(declare-fun x3817 () Int)
(declare-fun x5385 () Int)
(declare-fun x3410 () Int)
(declare-fun x2985 () Int)
(declare-fun x7736 () Int)
(declare-fun x3327 () Int)
(declare-fun x5792 () Int)
(declare-fun x2113 () Bool)
(declare-fun x5256 () Int)
(declare-fun x4999 () Int)
(declare-fun x5176 () Int)
(declare-fun x610 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x7003 () Bool)
(declare-fun x7501 () Int)
(declare-fun x2022 () Int)
(declare-fun x4169 () Bool)
(declare-fun x4186 () Int)
(declare-fun x3773 () Bool)
(declare-fun x6907 () Bool)
(declare-fun x4988 () Bool)
(declare-fun x7564 () Bool)
(declare-fun x207 () Bool)
(declare-fun x3548 () Int)
(declare-fun x2025 () Bool)
(declare-fun x73 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x5423 () Int)
(declare-fun x7391 () Int)
(declare-fun x1174 () Bool)
(declare-fun x1888 () Int)
(declare-fun x6461 () Int)
(declare-fun x6732 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x279 (Int) Int)
(declare-fun x3043 () Bool)
(declare-fun x8460 () Int)
(declare-fun x1842 () Int)
(declare-fun x1001 () Bool)
(declare-fun x123 () Bool)
(declare-fun x5917 () Int)
(declare-fun x6064 () Int)
(declare-fun x3893 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x7152 () Bool)
(declare-fun x5869 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x697 () Int)
(declare-fun x2709 () Bool)
(declare-fun x7795 () Bool)
(declare-fun x8121 () Int)
(declare-fun x109 () Int)
(declare-fun x1065 () Bool)
(declare-fun x2451 () Int)
(declare-fun x8256 () Int)
(declare-fun x6832 () Int)
(declare-fun x7540 () Int)
(declare-fun x868 () Int)
(declare-fun x2177 () Int)
(declare-fun x3 () Bool)
(declare-fun x6797 () Bool)
(declare-fun x6312 () Bool)
(declare-fun x4895 () Int)
(declare-fun x1741 () Bool)
(declare-fun x4199 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x161 () Bool)
(declare-fun x5400 () Bool)
(declare-fun x6582 () Int)
(declare-fun x648 () Bool)
(declare-fun x8438 () Int)
(declare-fun x5119 () Int)
(declare-fun x133 () Bool)
(declare-fun x2452 () Int)
(declare-fun x4017 () Bool)
(declare-fun x7345 () Int)
(declare-fun x7846 () Int)
(declare-fun x2721 () Int)
(declare-fun x4303 () Int)
(declare-fun x7085 () Int)
(declare-fun x6292 () Int)
(declare-fun x4859 () Int)
(declare-fun x6137 () Int)
(declare-fun x4844 () Int)
(declare-fun x4373 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x523 () Int)
(declare-fun x5736 () Bool)
(declare-fun x7290 () Int)
(declare-fun x6855 () Bool)
(declare-fun x6824 () Int)
(declare-fun x1516 () Int)
(declare-fun x5606 () Int)
(declare-fun x4591 () Bool)
(declare-fun x4647 () Int)
(declare-fun x1657 () Int)
(declare-fun x7601 () Int)
(declare-fun x5552 () Bool)
(declare-fun x6418 () Int)
(declare-fun x108 () Int)
(declare-fun x2280 () Bool)
(declare-fun x2065 () Int)
(declare-fun x1615 () Int)
(declare-fun x7472 () Bool)
(declare-fun x821 (Int) Int)
(declare-fun x4756 () Bool)
(declare-fun x2626 () Int)
(declare-fun x3484 () Int)
(declare-fun x3008 () Bool)
(declare-fun x323 () Int)
(declare-fun x4329 () Bool)
(declare-fun x314 () Int)
(declare-fun x3468 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x3593 () Int)
(declare-fun x3172 () Bool)
(declare-fun x4706 () Int)
(declare-fun x5885 () Int)
(declare-fun x1014 () Int)
(declare-fun x4965 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x3369 () Bool)
(declare-fun x690 () Int)
(declare-fun x7469 () Int)
(declare-fun x7475 () Int)
(declare-fun x2695 () Bool)
(declare-fun x337 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x1904 () Int)
(declare-fun x7199 () Int)
(declare-fun x5740 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x2564 () Int)
(declare-fun x1476 () Int)
(declare-fun x1999 () Int)
(declare-fun x2222 () Bool)
(declare-fun x543 () Bool)
(declare-fun x5028 () Bool)
(declare-fun x8565 () Bool)
(declare-fun x6957 () Int)
(declare-fun x1467 () Int)
(declare-fun x2018 () Int)
(declare-fun x6511 () Bool)
(declare-fun x7421 () Bool)
(declare-fun x5491 () Int)
(declare-fun x6703 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x7505 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x7927 () Int)
(declare-fun x702 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x5565 () Bool)
(declare-fun x5555 () Bool)
(declare-fun x7889 () Bool)
(declare-fun x6452 () Bool)
(declare-fun x8143 () Int)
(declare-fun x3479 () Int)
(declare-fun x8045 () Bool)
(declare-fun x7767 () Bool)
(declare-fun x7479 () Int)
(declare-fun x6197 () Int)
(declare-fun x4920 () Int)
(declare-fun x5866 () Int)
(declare-fun x753 () Int)
(declare-fun x3487 () Bool)
(declare-fun x3843 () Int)
(declare-fun x3028 () Bool)
(declare-fun x5676 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x3488 () Int)
(declare-fun x4750 () Int)
(declare-fun x1696 () Bool)
(declare-fun x5921 () Bool)
(declare-fun x7155 () Int)
(declare-fun x2649 () Int)
(declare-fun x6979 () Int)
(declare-fun x7613 () Bool)
(declare-fun x3782 () Int)
(declare-fun x619 () Bool)
(declare-fun x5574 () Int)
(declare-fun x5476 () Int)
(declare-fun x3754 () Int)
(declare-fun x502 () Int)
(declare-fun x5120 () Int)
(declare-fun x4612 () Bool)
(declare-fun x6407 (Int) Int)
(declare-fun x339 () Bool)
(declare-fun x5326 () Int)
(declare-fun x4682 () Int)
(declare-fun x8507 () Int)
(declare-fun x2948 () Bool)
(declare-fun x4604 () Bool)
(declare-fun x6926 () Bool)
(declare-fun x4642 () Int)
(declare-fun x8152 () Int)
(declare-fun x7493 () Bool)
(declare-fun x5329 () Int)
(declare-fun x3196 () Int)
(declare-fun x3448 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x8519 () Bool)
(declare-fun x605 () Int)
(declare-fun x261 () Bool)
(declare-fun x8562 () Int)
(declare-fun x1891 () Int)
(declare-fun x7061 () Int)
(declare-fun x6737 () Int)
(declare-fun x516 () Bool)
(declare-fun x5803 () Bool)
(declare-fun x2561 () Int)
(declare-fun x4020 () Bool)
(declare-fun x8260 () Bool)
(declare-fun x8492 () Bool)
(declare-fun x2027 () Int)
(declare-fun x66 () Bool)
(declare-fun x7057 () Bool)
(declare-fun x98 () Int)
(declare-fun x3579 () Bool)
(declare-fun x7305 () Int)
(declare-fun x6127 () Bool)
(declare-fun x6906 () Int)
(declare-fun x598 () Int)
(declare-fun x2703 () Int)
(declare-fun x4927 () Bool)
(declare-fun x6868 () Bool)
(declare-fun x7406 () Bool)
(declare-fun x7636 () Int)
(declare-fun x810 () Int)
(declare-fun x1956 () Bool)
(declare-fun x1140 () Int)
(declare-fun x5601 () Bool)
(declare-fun x8530 () Int)
(declare-fun x5349 () Bool)
(declare-fun x5661 () Int)
(declare-fun x3175 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x7304 () Int)
(declare-fun x2038 () Int)
(declare-fun x2584 () Bool)
(declare-fun x4104 () Int)
(declare-fun x2349 () Bool)
(declare-fun x5361 (Int) Int)
(declare-fun x7541 () Bool)
(declare-fun x5405 () Bool)
(declare-fun x5651 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x5315 () Int)
(declare-fun x3356 () Int)
(declare-fun x5101 () Int)
(declare-fun x5985 () Int)
(declare-fun x2881 () Int)
(declare-fun x3153 () Bool)
(declare-fun x220 () Bool)
(declare-fun x5812 () Bool)
(declare-fun x6813 () Int)
(declare-fun x1834 () Int)
(declare-fun x1209 () Int)
(declare-fun x7367 () Int)
(declare-fun x6704 () Int)
(declare-fun x6083 () Int)
(declare-fun x8162 () Int)
(declare-fun x5819 () Int)
(declare-fun x7364 () Bool)
(declare-fun x293 () Bool)
(declare-fun x7119 () Int)
(declare-fun x6763 () Bool)
(declare-fun x8212 () Bool)
(declare-fun x3819 () Int)
(declare-fun x4537 () Bool)
(declare-fun x4031 () Int)
(declare-fun x6023 () Int)
(declare-fun x2147 () Int)
(declare-fun x4498 () Int)
(declare-fun x5758 () Int)
(declare-fun x6314 (Int) Int)
(declare-fun x1748 () Bool)
(declare-fun x6205 () Bool)
(declare-fun x8395 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x2361 () Int)
(declare-fun x8097 () Int)
(declare-fun x2704 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1530 () Bool)
(declare-fun x977 () Int)
(declare-fun x4904 () Int)
(declare-fun x392 () Int)
(declare-fun x1367 () Int)
(declare-fun x1959 () Bool)
(declare-fun x2809 () Bool)
(declare-fun x5042 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x346 () Int)
(declare-fun x2921 () Bool)
(declare-fun x49 () Int)
(declare-fun x7198 () Bool)
(declare-fun x8357 () Bool)
(declare-fun x3859 () Int)
(declare-fun x4009 () Bool)
(declare-fun x5479 () Int)
(declare-fun x3508 () Bool)
(declare-fun x488 () Int)
(declare-fun x5771 () Int)
(declare-fun x6512 () Int)
(declare-fun x3696 (Int) Int)
(declare-fun x4566 () Int)
(declare-fun x7582 () Int)
(declare-fun x4763 () Int)
(declare-fun x7279 () Bool)
(declare-fun x7270 () Int)
(declare-fun x4405 () Bool)
(declare-fun x6745 () Int)
(declare-fun x3100 () Bool)
(declare-fun x6305 () Bool)
(declare-fun x1389 () Int)
(declare-fun x3547 () Bool)
(declare-fun x4141 () Int)
(declare-fun x6581 () Int)
(declare-fun x7635 () Int)
(declare-fun x6756 () Int)
(declare-fun x5045 () Int)
(declare-fun x4926 (Int) Int)
(declare-fun x3716 () Bool)
(declare-fun x8062 () Int)
(declare-fun x5117 () Int)
(declare-fun x3372 () Bool)
(declare-fun x7697 () Int)
(declare-fun x6498 () Bool)
(declare-fun x7808 () Int)
(declare-fun x2670 () Int)
(declare-fun x6271 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x2475 () Int)
(declare-fun x4150 () Int)
(declare-fun x1575 () Int)
(declare-fun x3321 () Int)
(declare-fun x1617 () Int)
(declare-fun x4070 () Bool)
(declare-fun x8359 () Int)
(declare-fun x4785 () Int)
(declare-fun x7902 () Int)
(declare-fun x4998 () Bool)
(declare-fun x1914 () Int)
(declare-fun x5968 () Bool)
(declare-fun x3620 () Int)
(declare-fun x492 () Int)
(declare-fun x2490 () Bool)
(declare-fun x3515 () Int)
(declare-fun x6108 () Int)
(declare-fun x1440 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x2579 () Int)
(declare-fun x8319 () Bool)
(declare-fun x2766 () Int)
(declare-fun x6571 () Bool)
(declare-fun x846 () Int)
(declare-fun x1057 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x750 () Bool)
(declare-fun x2005 () Int)
(declare-fun x4976 () Bool)
(declare-fun x6562 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x3577 () Int)
(declare-fun x3313 () Int)
(declare-fun x7726 () Int)
(declare-fun x4849 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x3793 () Int)
(declare-fun x7619 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x3168 () Int)
(declare-fun x3880 () Int)
(declare-fun x6838 () Int)
(declare-fun x1662 () Int)
(declare-fun x6001 () Bool)
(declare-fun x7242 () Bool)
(declare-fun x6204 () Bool)
(declare-fun x1771 () Int)
(declare-fun x5268 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x2272 () Int)
(declare-fun x8022 (Int) Int)
(declare-fun x6848 () Bool)
(declare-fun x3621 () Int)
(declare-fun x4983 () Int)
(declare-fun x7630 () Bool)
(declare-fun x4409 () Bool)
(declare-fun x3833 () Int)
(declare-fun x3654 () Bool)
(declare-fun x6441 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x6575 () Int)
(declare-fun x7525 () Int)
(declare-fun x8175 () Bool)
(declare-fun x3911 () Int)
(declare-fun x5007 () Int)
(declare-fun x2495 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x192 () Bool)
(declare-fun x7709 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x7384 () Int)
(declare-fun x1644 () Int)
(declare-fun x5172 () Int)
(declare-fun x4663 () Bool)
(declare-fun x6490 () Bool)
(declare-fun x6787 () Bool)
(declare-fun x962 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x3604 () Int)
(declare-fun x608 () Int)
(declare-fun x308 () Bool)
(declare-fun x4509 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x6751 () Bool)
(declare-fun x1159 () Int)
(declare-fun x4917 () Int)
(declare-fun x5414 () Bool)
(declare-fun x5051 () Int)
(declare-fun x2692 () Int)
(declare-fun x4905 () Int)
(declare-fun x2453 () Bool)
(declare-fun x2083 () Int)
(declare-fun x3704 () Int)
(declare-fun x1091 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2474 () Bool)
(declare-fun x5975 () Int)
(declare-fun x3365 () Int)
(declare-fun x4728 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x6426 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x1586 () Int)
(declare-fun x3467 () Bool)
(declare-fun x7099 () Int)
(declare-fun x7620 () Int)
(declare-fun x1385 () Bool)
(declare-fun x2203 () Int)
(declare-fun x2894 () Int)
(declare-fun x5823 () Bool)
(declare-fun x7577 () Bool)
(declare-fun x5918 () Bool)
(declare-fun x904 () Bool)
(declare-fun x4693 (Int) Int)
(declare-fun x5641 () Int)
(declare-fun x7014 () Int)
(declare-fun x5763 () Bool)
(declare-fun x5493 () Int)
(declare-fun x7179 () Int)
(declare-fun x4339 () Int)
(declare-fun x3144 () Int)
(declare-fun x56 () Bool)
(declare-fun x3284 () Int)
(declare-fun x664 () Int)
(declare-fun x3423 () Int)
(declare-fun x5186 () Int)
(declare-fun x3768 () Bool)
(declare-fun x5597 () Int)
(declare-fun x7109 () Bool)
(declare-fun x211 () Int)
(declare-fun x6081 () Int)
(declare-fun x1555 () Int)
(declare-fun x8167 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x3035 () Int)
(declare-fun x371 () Int)
(declare-fun x204 () Int)
(declare-fun x5533 () Int)
(declare-fun x5205 () Int)
(declare-fun x8367 () Int)
(declare-fun x1716 () Int)
(declare-fun x6144 () Bool)
(declare-fun x197 () Int)
(declare-fun x625 () Int)
(declare-fun x3388 () Int)
(declare-fun x6146 () Int)
(declare-fun x4370 () Int)
(declare-fun x7833 () Bool)
(declare-fun x2972 () Int)
(declare-fun x580 () Int)
(declare-fun x292 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x5744 () Bool)
(declare-fun x5972 () Int)
(declare-fun x3312 () Int)
(declare-fun x6663 () Int)
(declare-fun x3228 () Int)
(declare-fun x4158 () Bool)
(declare-fun x2066 () Int)
(declare-fun x4775 () Int)
(declare-fun x7333 () Bool)
(declare-fun x8294 (Int) Int)
(declare-fun x5350 () Int)
(declare-fun x8465 () Bool)
(declare-fun x7251 () Bool)
(declare-fun x8288 () Bool)
(declare-fun x8208 () Bool)
(declare-fun x3260 () Int)
(declare-fun x676 () Bool)
(declare-fun x6606 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x4001 () Int)
(declare-fun x1527 () Int)
(declare-fun x7610 () Int)
(declare-fun x8269 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x4342 () Int)
(declare-fun x4638 () Bool)
(declare-fun x7741 () Int)
(declare-fun x7331 () Bool)
(declare-fun x4279 () Bool)
(declare-fun x7925 () Int)
(declare-fun x6605 () Int)
(declare-fun x706 () Int)
(declare-fun x5207 () Int)
(declare-fun x3940 () Bool)
(declare-fun x7586 () Bool)
(declare-fun x7877 () Int)
(declare-fun x2753 () Int)
(declare-fun x4223 () Int)
(declare-fun x914 () Bool)
(declare-fun x8141 () Int)
(declare-fun x8396 () Int)
(declare-fun x7230 () Bool)
(declare-fun x7184 () Bool)
(declare-fun x3560 () Bool)
(declare-fun x857 () Bool)
(declare-fun x5887 () Int)
(declare-fun x744 () Bool)
(declare-fun x443 () Int)
(declare-fun x2045 () Bool)
(declare-fun x4873 () Int)
(declare-fun x6604 () Int)
(declare-fun x7072 () Int)
(declare-fun x4656 () Bool)
(declare-fun x4795 () Int)
(declare-fun x302 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x2229 () Int)
(declare-fun x6827 () Int)
(declare-fun x407 () Int)
(declare-fun x5582 () Int)
(declare-fun x5688 () Int)
(declare-fun x2768 () Bool)
(declare-fun x7784 () Int)
(declare-fun x2556 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x8118 () Int)
(declare-fun x7433 () Int)
(declare-fun x2355 () Int)
(declare-fun x7689 () Bool)
(declare-fun x1810 () Int)
(declare-fun x8430 () Int)
(declare-fun x3724 () Int)
(declare-fun x2641 () Bool)
(declare-fun x1298 () Int)
(declare-fun x8092 () Bool)
(declare-fun x461 () Int)
(declare-fun x869 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x6939 () Int)
(declare-fun x4288 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x3396 () Int)
(declare-fun x6633 () Bool)
(declare-fun x715 () Int)
(declare-fun x1841 () Int)
(declare-fun x8320 () Bool)
(declare-fun x5770 () Int)
(declare-fun x8392 () Int)
(declare-fun x6547 () Int)
(declare-fun x5457 () Int)
(declare-fun x4228 () Int)
(declare-fun x4291 () Int)
(declare-fun x4911 () Int)
(declare-fun x5646 () Bool)
(declare-fun x3188 () Bool)
(declare-fun x7686 () Bool)
(declare-fun x3514 () Int)
(declare-fun x7806 () Bool)
(declare-fun x4091 () Int)
(declare-fun x5613 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x6324 () Bool)
(declare-fun x1425 () Int)
(declare-fun x5587 () Int)
(declare-fun x8284 () Int)
(declare-fun x1957 () Int)
(declare-fun x3583 () Bool)
(declare-fun x6548 () Int)
(declare-fun x4276 () Int)
(declare-fun x6337 () Bool)
(declare-fun x2970 () Int)
(declare-fun x1225 () Bool)
(declare-fun x2183 () Int)
(declare-fun x4544 () Int)
(declare-fun x8341 () Int)
(declare-fun x4677 () Int)
(declare-fun x1461 () Bool)
(declare-fun x6190 () Int)
(declare-fun x6150 () Int)
(declare-fun x3769 () Bool)
(declare-fun x8446 () Int)
(declare-fun x7194 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x6497 () Int)
(declare-fun x1608 () Bool)
(declare-fun x5496 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x4188 () Int)
(declare-fun x4910 () Int)
(declare-fun x4347 () Bool)
(declare-fun x1946 () Int)
(declare-fun x2233 () Bool)
(declare-fun x1044 () Int)
(declare-fun x4062 () Bool)
(declare-fun x5468 () Int)
(declare-fun x7662 () Int)
(declare-fun x582 () Int)
(declare-fun x227 () Int)
(declare-fun x3264 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x3073 () Int)
(declare-fun x879 () Bool)
(declare-fun x3771 () Int)
(declare-fun x1869 () Bool)
(declare-fun x6233 () Int)
(declare-fun x1408 () Int)
(declare-fun x1250 () Int)
(declare-fun x4516 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x6738 () Bool)
(declare-fun x6128 (Int) Int)
(declare-fun x3643 () Int)
(declare-fun x1533 () Bool)
(declare-fun x5322 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x5773 () Int)
(declare-fun x1344 () Int)
(declare-fun x7851 () Int)
(declare-fun x1816 () Bool)
(declare-fun x5448 () Bool)
(declare-fun x5663 () Bool)
(declare-fun x4744 () Bool)
(declare-fun x5656 () Int)
(declare-fun x5316 () Int)
(declare-fun x1473 () Int)
(declare-fun x1435 () Bool)
(declare-fun x7923 () Int)
(declare-fun x304 () Int)
(declare-fun x5036 () Int)
(declare-fun x183 () Int)
(declare-fun x6010 () Bool)
(declare-fun x7627 () Int)
(declare-fun x6934 () Int)
(declare-fun x159 () Int)
(declare-fun x1454 () Bool)
(declare-fun x7862 () Bool)
(declare-fun x8147 () Int)
(declare-fun x6310 () Int)
(declare-fun x4712 () Int)
(declare-fun x1926 () Bool)
(declare-fun x740 () Int)
(declare-fun x188 () Bool)
(declare-fun x7054 () Int)
(declare-fun x1698 () Int)
(declare-fun x1805 () Int)
(declare-fun x8006 () Bool)
(declare-fun x644 () Int)
(declare-fun x4439 () Bool)
(declare-fun x2 () Bool)
(declare-fun x506 () Bool)
(declare-fun x5383 () Int)
(declare-fun x2419 () Bool)
(declare-fun x5720 () Bool)
(declare-fun x7373 (Int) Int)
(declare-fun x926 () Int)
(declare-fun x1909 () Bool)
(declare-fun x5422 () Int)
(declare-fun x7254 () Bool)
(declare-fun x4762 () Int)
(declare-fun x4384 () Bool)
(declare-fun x771 () Bool)
(declare-fun x7523 () Bool)
(declare-fun x6164 () Bool)
(declare-fun x777 () Bool)
(declare-fun x1046 () Int)
(declare-fun x6791 () Bool)
(declare-fun x6695 () Int)
(declare-fun x3253 () Bool)
(declare-fun x7456 () Int)
(declare-fun x4759 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x6220 () Int)
(declare-fun x620 () Int)
(declare-fun x5435 () Bool)
(declare-fun x726 () Bool)
(declare-fun x4320 () Int)
(declare-fun x2488 () Int)
(declare-fun x971 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1112 () Int)
(declare-fun x216 () Bool)
(declare-fun x7241 () Int)
(declare-fun x5061 () Int)
(declare-fun x1845 () Bool)
(declare-fun x6477 () Int)
(declare-fun x7022 () Bool)
(declare-fun x7069 () Bool)
(declare-fun x940 () Bool)
(declare-fun x1048 () Int)
(declare-fun x2645 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1207 () Int)
(declare-fun x4963 () Bool)
(declare-fun x5817 () Int)
(declare-fun x8472 () Int)
(declare-fun x1095 () Bool)
(declare-fun x5258 () Int)
(declare-fun x7804 () Bool)
(declare-fun x7716 () Bool)
(declare-fun x2924 () Int)
(declare-fun x5974 () Int)
(declare-fun x2989 () Bool)
(declare-fun x4907 () Int)
(declare-fun x5958 () Bool)
(declare-fun x4117 () Int)
(declare-fun x4321 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x260 () Int)
(declare-fun x2246 () Bool)
(declare-fun x404 () Int)
(declare-fun x300 () Bool)
(declare-fun x6561 () Bool)
(declare-fun x7779 () Int)
(declare-fun x2652 () Int)
(declare-fun x3130 () Bool)
(declare-fun x5000 () Int)
(declare-fun x2362 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x4854 () Int)
(declare-fun x5698 () Bool)
(declare-fun x5635 () Int)
(declare-fun x1198 () Int)
(declare-fun x2167 () Bool)
(declare-fun x3957 () Int)
(declare-fun x6123 (Int) Int)
(declare-fun x6624 () Int)
(declare-fun x4880 () Bool)
(declare-fun x7440 () Int)
(declare-fun x7027 () Int)
(declare-fun x695 () Bool)
(declare-fun x8168 () Bool)
(declare-fun x1272 () Int)
(declare-fun x5465 () Int)
(declare-fun x5660 () Bool)
(declare-fun x6771 () Bool)
(declare-fun x6814 () Bool)
(declare-fun x7932 () Int)
(declare-fun x2480 () Int)
(declare-fun x3250 () Int)
(declare-fun x6830 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x3837 () Int)
(declare-fun x5732 () Int)
(declare-fun x1916 () Int)
(declare-fun x5297 () Bool)
(declare-fun x4655 () Int)
(declare-fun x1319 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x2568 () Int)
(declare-fun x7524 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x6629 () Bool)
(declare-fun x4277 () Bool)
(declare-fun x4784 () Bool)
(declare-fun x5715 (Int) Int)
(declare-fun x325 () Bool)
(declare-fun x6894 () Bool)
(declare-fun x7403 () Int)
(declare-fun x1054 () Bool)
(declare-fun x528 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x7461 () Int)
(declare-fun x8384 () Int)
(declare-fun x1029 () Bool)
(declare-fun x4644 () Bool)
(declare-fun x7220 () Int)
(declare-fun x922 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x4499 () Int)
(declare-fun x1633 () Int)
(declare-fun x6071 () Int)
(declare-fun x5342 () Bool)
(declare-fun x747 () Bool)
(declare-fun x8399 () Bool)
(declare-fun x7809 () Bool)
(declare-fun x6124 () Int)
(declare-fun x383 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1664 () Int)
(declare-fun x1983 () Int)
(declare-fun x1668 () Bool)
(declare-fun x5370 () Bool)
(declare-fun x449 () Int)
(declare-fun x2249 (Int) Int)
(declare-fun x2870 () Int)
(declare-fun x8056 () Int)
(declare-fun x5136 () Int)
(declare-fun x481 () Int)
(declare-fun x3137 () Int)
(declare-fun x4652 () Int)
(declare-fun x5508 () Int)
(declare-fun x7712 () Int)
(declare-fun x230 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x682 () Bool)
(declare-fun x4145 () Bool)
(declare-fun x1632 () Int)
(declare-fun x3389 () Int)
(declare-fun x7920 () Bool)
(declare-fun x4547 () Bool)
(declare-fun x5272 () Int)
(declare-fun x2511 () Int)
(declare-fun x3666 () Int)
(declare-fun x5308 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x4819 () Int)
(declare-fun x6932 () Bool)
(declare-fun x7759 () Bool)
(declare-fun x3306 () Int)
(declare-fun x1557 () Int)
(declare-fun x5024 () Bool)
(declare-fun x2519 () Int)
(declare-fun x8512 () Int)
(declare-fun x5305 () Bool)
(declare-fun x1874 () Int)
(declare-fun x7583 () Int)
(declare-fun x7678 () Bool)
(declare-fun x5097 () Int)
(declare-fun x8502 () Int)
(declare-fun x3386 () Int)
(declare-fun x7657 () Int)
(declare-fun x5073 () Int)
(declare-fun x6974 () Bool)
(declare-fun x4234 () Bool)
(declare-fun x4200 () Int)
(declare-fun x7816 () Int)
(declare-fun x3509 () Bool)
(declare-fun x7355 () Int)
(declare-fun x3223 () Bool)
(declare-fun x7287 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x5321 () Bool)
(declare-fun x415 () Int)
(declare-fun x6638 () Bool)
(declare-fun x1996 () Int)
(declare-fun x1731 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x4773 () Bool)
(declare-fun x3648 () Int)
(declare-fun x6311 () Bool)
(declare-fun x2499 () Int)
(declare-fun x8070 () Bool)
(declare-fun x7056 () Int)
(declare-fun x8506 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x3288 () Int)
(declare-fun x282 () Bool)
(declare-fun x335 () Bool)
(declare-fun x7772 () Int)
(declare-fun x5239 () Bool)
(declare-fun x322 () Bool)
(declare-fun x1305 () Int)
(declare-fun x2750 () Bool)
(declare-fun x6943 () Int)
(declare-fun x3360 () Int)
(declare-fun x52 () Bool)
(declare-fun x394 () Bool)
(declare-fun x6367 () Bool)
(declare-fun x7593 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x2356 () Int)
(declare-fun x4718 (Int) Int)
(declare-fun x2007 () Bool)
(declare-fun x3627 () Int)
(declare-fun x4962 () Bool)
(declare-fun x2861 () Int)
(declare-fun x4897 () Bool)
(declare-fun x2366 () Int)
(declare-fun x1685 () Bool)
(declare-fun x1582 () Int)
(declare-fun x5015 () Int)
(declare-fun x8473 () Bool)
(declare-fun x6142 () Int)
(declare-fun x1133 () Int)
(declare-fun x3845 () Int)
(declare-fun x4552 () Int)
(declare-fun x3988 () Int)
(declare-fun x808 () Int)
(declare-fun x3444 () Int)
(declare-fun x5144 () Int)
(declare-fun x5389 () Bool)
(declare-fun x7521 () Int)
(declare-fun x7146 () Bool)
(declare-fun x1481 () Int)
(declare-fun x5537 () Bool)
(declare-fun x647 () Int)
(declare-fun x3949 () Bool)
(declare-fun x7739 () Bool)
(declare-fun x3027 () Int)
(declare-fun x4326 () Bool)
(declare-fun x5844 () Bool)
(declare-fun x525 () Bool)
(declare-fun x5504 () Int)
(declare-fun x6689 () Bool)
(declare-fun x8128 () Bool)
(declare-fun x6239 () Int)
(declare-fun x83 () Int)
(declare-fun x725 () Int)
(declare-fun x4671 () Bool)
(declare-fun x7135 (Int) Int)
(declare-fun x3220 () Int)
(declare-fun x2642 () Int)
(declare-fun x711 () Bool)
(declare-fun x2963 () Int)
(declare-fun x3295 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x287 () Bool)
(declare-fun x8123 () Bool)
(declare-fun x27 () Bool)
(declare-fun x5174 () Int)
(declare-fun x2699 () Bool)
(declare-fun x7307 () Int)
(declare-fun x5577 () Int)
(declare-fun x4282 () Bool)
(declare-fun x508 () Bool)
(declare-fun x5981 () Int)
(declare-fun x4227 () Int)
(declare-fun x5662 () Bool)
(declare-fun x361 () Int)
(declare-fun x7219 () Bool)
(declare-fun x4148 () Int)
(declare-fun x7790 () Bool)
(declare-fun x4925 () Int)
(declare-fun x4474 () Int)
(declare-fun x5652 () Int)
(declare-fun x4448 () Bool)
(declare-fun x1032 () Int)
(declare-fun x7346 () Bool)
(declare-fun x7747 () Int)
(declare-fun x6252 () Bool)
(declare-fun x7818 () Int)
(declare-fun x8055 () Int)
(declare-fun x6260 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x5724 () Int)
(declare-fun x1542 () Int)
(declare-fun x7204 () Int)
(declare-fun x7177 () Int)
(declare-fun x8388 () Int)
(declare-fun x5325 () Int)
(declare-fun x236 () Bool)
(declare-fun x2724 () Int)
(declare-fun x2734 () Bool)
(declare-fun x8344 () Int)
(declare-fun x135 () Int)
(declare-fun x6346 () Int)
(declare-fun x1513 () Int)
(declare-fun x2412 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x624 () Bool)
(declare-fun x5701 () Int)
(declare-fun x6421 () Bool)
(declare-fun x4095 () Int)
(declare-fun x6024 () Int)
(declare-fun x8371 () Bool)
(declare-fun x5481 () Bool)
(declare-fun x6206 () Int)
(declare-fun x5825 () Int)
(declare-fun x5331 () Int)
(declare-fun x2344 () Int)
(declare-fun x41 () Int)
(declare-fun x8570 () Int)
(declare-fun x842 () Bool)
(declare-fun x5043 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x316 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x4982 () Int)
(declare-fun x852 () Int)
(declare-fun x3456 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x249 () Bool)
(declare-fun x7988 () Int)
(declare-fun x4152 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1796 () Int)
(declare-fun x7443 () Int)
(declare-fun x4125 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1791 () Bool)
(declare-fun x1811 () Int)
(declare-fun x4748 () Bool)
(declare-fun x114 () Bool)
(declare-fun x1979 () Int)
(declare-fun x5515 () Int)
(declare-fun x2062 () Bool)
(declare-fun x936 () Int)
(declare-fun x5430 () Int)
(declare-fun x8353 () Int)
(declare-fun x4140 () Int)
(declare-fun x3888 () Int)
(declare-fun x1579 () Int)
(declare-fun x206 () Int)
(declare-fun x6162 () Int)
(declare-fun x8403 () Int)
(declare-fun x6453 () Int)
(declare-fun x6106 () Int)
(declare-fun x6313 () Int)
(declare-fun x140 () Int)
(declare-fun x5730 () Int)
(declare-fun x7257 () Int)
(declare-fun x444 () Int)
(declare-fun x120 () Bool)
(declare-fun x7084 () Bool)
(declare-fun x2466 () Int)
(declare-fun x6258 () Bool)
(declare-fun x4168 (Int) Int)
(declare-fun x2334 () Int)
(declare-fun x820 () Bool)
(declare-fun x243 () Bool)
(declare-fun x5087 () Bool)
(declare-fun x6576 () Bool)
(declare-fun x7153 () Int)
(declare-fun x8555 () Bool)
(declare-fun x4780 () Bool)
(declare-fun x5412 () Bool)
(declare-fun x7203 () Int)
(declare-fun x2265 () Int)
(declare-fun x5026 () Bool)
(declare-fun x4667 () Int)
(declare-fun x7503 () Int)
(declare-fun x8068 () Int)
(declare-fun x5512 () Int)
(declare-fun x5693 () Bool)
(declare-fun x767 () Bool)
(declare-fun x6030 () Int)
(declare-fun x7648 () Int)
(declare-fun x153 () Bool)
(declare-fun x4044 () Bool)
(declare-fun x2509 () Int)
(declare-fun x1920 () Int)
(declare-fun x2021 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x2915 () Int)
(declare-fun x2080 () Int)
(declare-fun x7371 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x7192 () Int)
(declare-fun x5452 () Int)
(declare-fun x6993 () Bool)
(declare-fun x6846 () Bool)
(declare-fun x5460 () Bool)
(declare-fun x6198 () Int)
(declare-fun x8549 () Int)
(declare-fun x7020 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x8471 () Bool)
(declare-fun x4035 () Int)
(declare-fun x8406 () Int)
(declare-fun x8190 () Int)
(declare-fun x387 () Bool)
(declare-fun x2206 () Int)
(declare-fun x121 () Int)
(declare-fun x6965 () Int)
(declare-fun x3243 () Bool)
(declare-fun x6439 () Int)
(declare-fun x1706 () Bool)
(declare-fun x5903 () Bool)
(declare-fun x4442 () Int)
(declare-fun x427 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x3397 () Int)
(declare-fun x4535 () Bool)
(declare-fun x7465 () Int)
(declare-fun x6560 () Bool)
(declare-fun x3701 () Int)
(declare-fun x6443 () Int)
(declare-fun x5759 () Int)
(declare-fun x802 () Int)
(declare-fun x541 () Bool)
(declare-fun x657 () Bool)
(declare-fun x5243 () Int)
(declare-fun x3217 () Int)
(declare-fun x5831 () Int)
(declare-fun x3860 () Bool)
(declare-fun x6072 () Int)
(declare-fun x4587 () Bool)
(declare-fun x6602 () Bool)
(declare-fun x3198 () Int)
(declare-fun x858 () Bool)
(declare-fun x5604 () Bool)
(declare-fun x6383 () Int)
(declare-fun x7656 () Int)
(declare-fun x7963 () Int)
(declare-fun x3277 () Bool)
(declare-fun x7157 () Int)
(declare-fun x3409 () Int)
(declare-fun x5716 () Int)
(declare-fun x3924 () Int)
(declare-fun x2035 () Bool)
(declare-fun x285 () Int)
(declare-fun x6176 () Bool)
(declare-fun x2143 () Int)
(declare-fun x995 () Int)
(declare-fun x824 () Int)
(declare-fun x5498 () Int)
(declare-fun x7382 () Bool)
(declare-fun x8558 () Bool)
(declare-fun x3239 () Int)
(declare-fun x7969 () Int)
(declare-fun x4912 () Bool)
(declare-fun x131 () Bool)
(declare-fun x7673 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1949 () Bool)
(declare-fun x5413 () Int)
(declare-fun x3708 () Bool)
(declare-fun x6697 () Bool)
(declare-fun x4255 () Int)
(declare-fun x6047 () Bool)
(declare-fun x4687 () Int)
(declare-fun x5978 () Int)
(declare-fun x3281 () Int)
(declare-fun x1129 () Bool)
(declare-fun x345 () Bool)
(declare-fun x1604 () Int)
(declare-fun x4672 () Bool)
(declare-fun x4452 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x6587 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x6440 () Bool)
(declare-fun x1064 () Int)
(declare-fun x2395 () Int)
(declare-fun x2662 () Bool)
(declare-fun x7752 () Int)
(declare-fun x6523 () Int)
(declare-fun x1431 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x4271 () Int)
(declare-fun x6008 () Bool)
(declare-fun x2602 () Int)
(declare-fun x1783 () Int)
(declare-fun x2655 () Bool)
(declare-fun x259 () Int)
(declare-fun x2698 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x979 () Int)
(declare-fun x2166 () Int)
(declare-fun x3725 () Int)
(declare-fun x6831 () Int)
(declare-fun x991 () Int)
(declare-fun x6866 () Bool)
(declare-fun x8298 () Int)
(declare-fun x8264 () Int)
(declare-fun x7515 () Bool)
(declare-fun x8343 () Bool)
(declare-fun x5020 () Int)
(declare-fun x7788 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x5456 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x7187 () Int)
(declare-fun x5220 () Int)
(declare-fun x4465 () Int)
(declare-fun x6541 () Int)
(declare-fun x6815 () Int)
(declare-fun x6975 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x8461 () Int)
(declare-fun x8023 () Int)
(declare-fun x7111 () Int)
(declare-fun x8221 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x281 () Bool)
(declare-fun x7875 () Bool)
(declare-fun x6752 () Bool)
(declare-fun x6472 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x5269 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x5839 () Bool)
(declare-fun x7666 () Int)
(declare-fun x5193 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x1688 (Int) Int)
(declare-fun x3268 () Bool)
(declare-fun x5609 () Int)
(declare-fun x3540 () Int)
(declare-fun x3442 () Bool)
(declare-fun x2614 () Int)
(declare-fun x2282 () Bool)
(declare-fun x7075 () Bool)
(declare-fun x5813 () Int)
(declare-fun x3625 () Int)
(declare-fun x6871 () Bool)
(declare-fun x6596 () Bool)
(declare-fun x8417 () Int)
(declare-fun x921 () Int)
(declare-fun x3157 () Int)
(declare-fun x1723 () Int)
(declare-fun x2277 () Bool)
(declare-fun x8035 () Int)
(declare-fun x2840 () Bool)
(declare-fun x274 () Bool)
(declare-fun x6386 () Int)
(declare-fun x1422 () Int)
(declare-fun x5936 () Int)
(declare-fun x5133 () Bool)
(declare-fun x834 () Int)
(declare-fun x7408 () Int)
(declare-fun x4222 () Bool)
(declare-fun x1116 () Int)
(declare-fun x6676 () Int)
(declare-fun x932 () Bool)
(declare-fun x7481 () Bool)
(declare-fun x5482 () Int)
(declare-fun x1489 () Int)
(declare-fun x4002 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x5093 () Bool)
(declare-fun x3719 () Int)
(declare-fun x3074 () Int)
(declare-fun x3977 () Bool)
(declare-fun x86 () Bool)
(declare-fun x5053 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x6283 () Int)
(declare-fun x2145 () Bool)
(declare-fun x1398 () Int)
(declare-fun x3941 () Bool)
(declare-fun x4567 () Int)
(declare-fun x5705 () Bool)
(declare-fun x5008 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x7090 () Bool)
(declare-fun x6768 () Bool)
(declare-fun x1313 () Int)
(declare-fun x3851 () Int)
(declare-fun x521 () Bool)
(declare-fun x6549 () Bool)
(declare-fun x6502 () Bool)
(declare-fun x3167 () Int)
(declare-fun x8105 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1645 () Int)
(declare-fun x4851 () Bool)
(declare-fun x6189 () Int)
(declare-fun x7602 () Bool)
(declare-fun x7264 () Bool)
(declare-fun x6727 () Bool)
(declare-fun x7934 () Bool)
(declare-fun x4220 () Int)
(declare-fun x5815 () Int)
(declare-fun x4202 () Bool)
(declare-fun x813 () Int)
(declare-fun x3489 () Int)
(declare-fun x7387 () Bool)
(declare-fun x8119 () Int)
(declare-fun x5717 () Int)
(declare-fun x4599 () Int)
(declare-fun x3108 () Int)
(declare-fun x6285 () Bool)
(declare-fun x72 () Int)
(declare-fun x2182 () Int)
(declare-fun x5235 () Bool)
(declare-fun x881 () Int)
(declare-fun x3503 () Int)
(declare-fun x990 () Int)
(declare-fun x3918 () Int)
(declare-fun x8560 () Bool)
(declare-fun x5151 () Bool)
(declare-fun x6469 () Int)
(declare-fun x125 () Bool)
(declare-fun x5401 () Int)
(declare-fun x8339 () Bool)
(declare-fun x6309 () Int)
(declare-fun x4456 () Bool)
(declare-fun x6303 () Int)
(declare-fun x2304 () Int)
(declare-fun x2059 () Bool)
(declare-fun x487 () Int)
(declare-fun x5459 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x5454 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x1084 () Int)
(declare-fun x8111 () Int)
(declare-fun x2197 () Bool)
(declare-fun x5048 () Int)
(declare-fun x579 () Bool)
(declare-fun x8386 () Int)
(declare-fun x4377 () Int)
(declare-fun x7659 (Int) Int)
(declare-fun x6470 () Bool)
(declare-fun x2819 () Int)
(declare-fun x2263 () Int)
(declare-fun x1081 () Int)
(declare-fun x2046 (Int) Int)
(declare-fun x3266 () Int)
(declare-fun x3756 () Bool)
(declare-fun x4340 () Int)
(declare-fun x6710 () Int)
(declare-fun x604 () Int)
(declare-fun x949 () Int)
(declare-fun x4695 () Int)
(declare-fun x7030 () Bool)
(declare-fun x3218 () Int)
(declare-fun x4144 () Int)
(declare-fun x5702 () Int)
(declare-fun x6351 () Bool)
(declare-fun x12 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x8084 () Bool)
(declare-fun x7094 () Bool)
(declare-fun x5397 () Int)
(declare-fun x2589 () Int)
(declare-fun x4146 () Int)
(declare-fun x116 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x3342 () Int)
(declare-fun x8136 () Int)
(declare-fun x2261 () Bool)
(declare-fun x5884 () Int)
(declare-fun x948 () Int)
(declare-fun x1725 () Int)
(declare-fun x4525 () Int)
(declare-fun x1585 () Bool)
(declare-fun x6232 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1051 () Int)
(declare-fun x7713 () Bool)
(declare-fun x6061 () Int)
(declare-fun x3209 () Int)
(declare-fun x7735 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1266 (Int) Int)
(declare-fun x8201 () Bool)
(declare-fun x8285 () Bool)
(declare-fun x7379 () Int)
(declare-fun x6389 () Int)
(declare-fun x400 () Int)
(declare-fun x7590 () Bool)
(declare-fun x4867 () Int)
(declare-fun x7248 (Int) Int)
(declare-fun x8345 () Int)
(declare-fun x4874 () Bool)
(declare-fun x3357 () Int)
(declare-fun x5766 () Int)
(declare-fun x7358 () Bool)
(declare-fun x7879 () Bool)
(declare-fun x3969 () Bool)
(declare-fun x2064 () Int)
(declare-fun x7645 () Bool)
(declare-fun x5797 () Bool)
(declare-fun x5864 () Bool)
(declare-fun x7223 () Bool)
(declare-fun x1009 () Int)
(declare-fun x8102 () Bool)
(declare-fun x5677 () Bool)
(declare-fun x1975 () Int)
(declare-fun x5029 () Int)
(declare-fun x5046 () Bool)
(declare-fun x3692 () Int)
(declare-fun x5100 () Int)
(declare-fun x3678 () Bool)
(declare-fun x6223 () Bool)
(declare-fun x8057 () Int)
(declare-fun x2619 () Int)
(declare-fun x2454 () Int)
(declare-fun x3270 () Int)
(declare-fun x5016 () Int)
(declare-fun x1340 () Int)
(declare-fun x1411 () Int)
(declare-fun x8423 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x5223 () Int)
(declare-fun x4343 () Int)
(declare-fun x2895 () Int)
(declare-fun x1451 () Bool)
(declare-fun x5984 () Bool)
(declare-fun x8096 () Int)
(declare-fun x5449 () Bool)
(declare-fun x2481 () Int)
(declare-fun x5757 () Int)
(declare-fun x340 () Int)
(declare-fun x3607 () Bool)
(declare-fun x1252 () Int)
(declare-fun x2357 () Bool)
(declare-fun x5542 () Bool)
(declare-fun x2132 () Bool)
(declare-fun x8053 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x1958 () Int)
(declare-fun x8334 () Bool)
(declare-fun x5927 () Int)
(declare-fun x1277 () Int)
(declare-fun x6725 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x6516 () Int)
(declare-fun x4913 () Bool)
(declare-fun x5380 () Bool)
(declare-fun x7258 () Bool)
(declare-fun x3641 () Int)
(declare-fun x1994 () Bool)
(declare-fun x6864 () Int)
(declare-fun x4294 () Int)
(declare-fun x7701 () Bool)
(declare-fun x4602 () Int)
(declare-fun x1433 () Int)
(declare-fun x8321 () Int)
(declare-fun x3086 () Int)
(declare-fun x7782 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x6322 () Bool)
(declare-fun x8538 () Bool)
(declare-fun x4561 () Bool)
(declare-fun x1508 () Int)
(declare-fun x2205 () Bool)
(declare-fun x2300 () Int)
(declare-fun x5564 () Bool)
(declare-fun x6372 () Int)
(declare-fun x2990 () Int)
(declare-fun x8478 () Int)
(declare-fun x6170 () Int)
(declare-fun x7088 () Bool)
(declare-fun x5396 () Int)
(declare-fun x801 () Int)
(declare-fun x2535 () Int)
(declare-fun x2668 () Bool)
(declare-fun x700 () Int)
(declare-fun x4003 () Bool)
(declare-fun x5427 () Int)
(declare-fun x870 () Bool)
(declare-fun x3493 () Int)
(declare-fun x1315 () Bool)
(declare-fun x6423 () Int)
(declare-fun x6909 () Bool)
(declare-fun x1600 () Int)
(declare-fun x6999 () Int)
(declare-fun x4584 () Int)
(declare-fun x8416 () Bool)
(declare-fun x5096 () Int)
(declare-fun x7918 () Bool)
(declare-fun x3753 () Bool)
(declare-fun x8151 () Bool)
(declare-fun x7848 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x1099 () Int)
(declare-fun x7378 () Int)
(declare-fun x1992 () Bool)
(declare-fun x5098 () Int)
(declare-fun x4365 () Int)
(declare-fun x6921 () Int)
(declare-fun x8354 () Int)
(declare-fun x1394 () Int)
(declare-fun x1290 () Int)
(declare-fun x5501 () Int)
(declare-fun x2875 () Bool)
(declare-fun x5926 () Bool)
(declare-fun x1624 () Int)
(declare-fun x8351 () Int)
(declare-fun x7550 () Bool)
(declare-fun x8082 () Bool)
(declare-fun x1969 () Int)
(declare-fun x3961 () Int)
(declare-fun x2468 () Int)
(declare-fun x2396 () Bool)
(declare-fun x7774 () Bool)
(declare-fun x1775 () Int)
(declare-fun x2096 () Int)
(declare-fun x2443 () Int)
(declare-fun x2331 () Int)
(declare-fun x2326 () Int)
(declare-fun x4550 () Bool)
(declare-fun x2199 () Int)
(declare-fun x4651 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x5781 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x7042 () Bool)
(declare-fun x5530 () Int)
(declare-fun x1260 () Int)
(declare-fun x3922 () Bool)
(declare-fun x4959 () Int)
(declare-fun x1679 () Int)
(declare-fun x1733 () Int)
(declare-fun x6904 () Int)
(declare-fun x5683 () Int)
(declare-fun x3626 () Bool)
(declare-fun x947 () Bool)
(declare-fun x885 () Int)
(declare-fun x2428 () Int)
(declare-fun x2572 () Int)
(declare-fun x8342 () Int)
(declare-fun x6053 () Bool)
(declare-fun x7660 () Int)
(declare-fun x2684 () Int)
(declare-fun x7975 () Int)
(declare-fun x4850 () Int)
(declare-fun x1376 () Bool)
(declare-fun x7128 () Bool)
(declare-fun x4378 () Int)
(declare-fun x2741 () Int)
(declare-fun x1736 () Int)
(declare-fun x5680 () Bool)
(declare-fun x5949 () Int)
(declare-fun x613 () Int)
(declare-fun x466 () Int)
(declare-fun x5554 () Bool)
(declare-fun x4088 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x1424 () Int)
(declare-fun x8362 () Bool)
(declare-fun x3318 () Int)
(declare-fun x7887 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x358 () Int)
(declare-fun x994 () Bool)
(declare-fun x6853 () Int)
(declare-fun x7004 () Bool)
(declare-fun x5703 () Int)
(declare-fun x8289 () Int)
(declare-fun x1873 () Int)
(declare-fun x1544 () Int)
(declare-fun x1156 () Bool)
(declare-fun x5873 () Int)
(declare-fun x2960 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x6910 () Bool)
(declare-fun x5246 () Bool)
(declare-fun x31 () Bool)
(declare-fun x2665 () Int)
(declare-fun x5909 () Int)
(declare-fun x4640 () Int)
(declare-fun x5596 () Int)
(declare-fun x5057 () Int)
(declare-fun x1935 () Int)
(declare-fun x5932 () Bool)
(declare-fun x6436 () Bool)
(declare-fun x5653 () Bool)
(declare-fun x897 () Bool)
(declare-fun x2824 () Int)
(declare-fun x3826 () Bool)
(declare-fun x2886 () Int)
(declare-fun x2114 () Int)
(declare-fun x1311 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x4624 () Int)
(declare-fun x1235 () Int)
(declare-fun x7322 () Bool)
(declare-fun x408 () Bool)
(declare-fun x3565 () Int)
(declare-fun x4631 () Int)
(declare-fun x2141 () Int)
(declare-fun x7142 () Int)
(declare-fun x6504 () Int)
(declare-fun x7514 () Int)
(declare-fun x5772 () Bool)
(declare-fun x3412 () Int)
(declare-fun x6321 () Int)
(declare-fun x2677 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x5360 () Bool)
(declare-fun x4577 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x4894 () Bool)
(declare-fun x5472 () Int)
(declare-fun x6553 () Int)
(declare-fun x4796 () Int)
(declare-fun x8528 () Int)
(declare-fun x4973 () Int)
(declare-fun x1948 () Int)
(declare-fun x8459 () Bool)
(declare-fun x861 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x1750 (Int) Int)
(declare-fun x882 () Int)
(declare-fun x6214 () Int)
(declare-fun x5085 () Int)
(declare-fun x1862 () Int)
(declare-fun x4114 () Int)
(declare-fun x5241 () Int)
(declare-fun x2231 () Int)
(declare-fun x3531 () Int)
(declare-fun x3962 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x3395 () Int)
(declare-fun x1630 () Bool)
(declare-fun x5899 () Bool)
(declare-fun x7798 () Bool)
(declare-fun x6684 () Bool)
(declare-fun x7557 () Int)
(declare-fun x2831 () Bool)
(declare-fun x7563 () Int)
(declare-fun x7394 () Int)
(declare-fun x5966 () Int)
(declare-fun x3151 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x3990 () Int)
(declare-fun x8333 () Int)
(declare-fun x2407 () Bool)
(declare-fun x189 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x7982 () Bool)
(declare-fun x2118 () Int)
(declare-fun x4010 () Int)
(declare-fun x7632 () Bool)
(declare-fun x8497 () Int)
(declare-fun x3231 () Int)
(declare-fun x4569 () Int)
(declare-fun x7278 () Int)
(declare-fun x515 () Bool)
(declare-fun x6468 () Int)
(declare-fun x6851 () Int)
(declare-fun x3181 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x7170 () Bool)
(declare-fun x6621 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x8329 () Int)
(declare-fun x2890 () Bool)
(declare-fun x888 () Bool)
(declare-fun x1462 () Int)
(declare-fun x5756 () Int)
(declare-fun x3721 () Bool)
(declare-fun x6195 () Int)
(declare-fun x3777 () Bool)
(declare-fun x3709 () Int)
(declare-fun x2508 () Int)
(declare-fun x8401 () Bool)
(declare-fun x5853 () Int)
(declare-fun x2213 () Int)
(declare-fun x1019 () Int)
(declare-fun x8198 () Bool)
(declare-fun x7335 () Bool)
(declare-fun x519 () Int)
(declare-fun x4161 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x6188 () Int)
(declare-fun x3871 () Bool)
(declare-fun x7309 () Int)
(declare-fun x3760 () Bool)
(declare-fun x1790 () Int)
(declare-fun x3686 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x5753 () Int)
(declare-fun x3866 () Bool)
(declare-fun x7298 () Int)
(declare-fun x1867 () Bool)
(declare-fun x4084 () Int)
(declare-fun x3652 () Int)
(declare-fun x7233 () Int)
(declare-fun x4809 () Int)
(declare-fun x5535 () Int)
(declare-fun x1601 () Int)
(declare-fun x3258 () Int)
(declare-fun x8379 () Bool)
(declare-fun x660 () Int)
(declare-fun x4367 () Int)
(declare-fun x6404 () Int)
(declare-fun x3251 () Int)
(declare-fun x1639 () Int)
(declare-fun x5037 () Int)
(declare-fun x1976 () Int)
(declare-fun x6347 () Bool)
(declare-fun x3274 () Int)
(declare-fun x5523 () Bool)
(declare-fun x5212 () Int)
(declare-fun x8049 () Int)
(declare-fun x122 () Bool)
(declare-fun x4578 () Int)
(declare-fun x5058 () Int)
(declare-fun x7708 () Bool)
(declare-fun x8172 () Int)
(declare-fun x1857 () Int)
(declare-fun x6869 () Bool)
(declare-fun x5980 () Int)
(declare-fun x7226 () Bool)
(declare-fun x2629 (Int) Int)
(declare-fun x7482 () Bool)
(declare-fun x8408 () Int)
(declare-fun x4758 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x5442 () Int)
(declare-fun x3459 () Bool)
(declare-fun x7477 () Int)
(declare-fun x6874 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x6839 () Int)
(declare-fun x2903 (Int) Int)
(declare-fun x1525 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x205 () Bool)
(declare-fun x3339 () Int)
(declare-fun x1910 () Bool)
(declare-fun x6166 () Int)
(declare-fun x2823 () Bool)
(declare-fun x7654 () Int)
(declare-fun x6660 () Bool)
(declare-fun x4264 () Int)
(declare-fun x1536 () Bool)
(declare-fun x4046 () Int)
(declare-fun x4252 () Bool)
(declare-fun x1799 () Int)
(declare-fun x3945 () Bool)
(declare-fun x6919 () Int)
(declare-fun x226 () Int)
(declare-fun x4355 () Int)
(declare-fun x2542 () Int)
(declare-fun x6856 () Bool)
(declare-fun x7669 () Bool)
(declare-fun x6875 () Int)
(declare-fun x2418 () Int)
(declare-fun x7865 () Bool)
(declare-fun x7347 () Bool)
(declare-fun x1746 () Int)
(declare-fun x5343 () Bool)
(declare-fun x6013 () Int)
(declare-fun x5276 () Int)
(declare-fun x5226 () Int)
(declare-fun x589 () Bool)
(declare-fun x50 () Bool)
(declare-fun x349 () Bool)
(declare-fun x7696 () Int)
(declare-fun x5271 () Int)
(declare-fun x2663 () Bool)
(declare-fun x393 () Int)
(declare-fun x2234 () Bool)
(declare-fun x6517 () Int)
(declare-fun x5682 () Bool)
(declare-fun x3429 () Int)
(declare-fun x5910 () Bool)
(declare-fun x1216 () Int)
(declare-fun x2162 () Bool)
(declare-fun x7323 () Bool)
(declare-fun x677 () Int)
(declare-fun x7141 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1086 () Bool)
(declare-fun x2150 () Int)
(declare-fun x7744 () Int)
(declare-fun x4000 () Int)
(declare-fun x22 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x2303 () Int)
(declare-fun x7189 () Int)
(declare-fun x3973 () Int)
(declare-fun x288 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x6583 () Int)
(declare-fun x6635 () Bool)
(declare-fun x6485 () Bool)
(declare-fun x5799 () Bool)
(declare-fun x5494 () Bool)
(declare-fun x5982 () Int)
(declare-fun x1421 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x6617 () Int)
(declare-fun x2126 () Int)
(declare-fun x6147 () Int)
(declare-fun x910 () Int)
(declare-fun x5345 () Int)
(declare-fun x1764 () Int)
(declare-fun x941 () Int)
(declare-fun x742 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x5274 () Int)
(declare-fun x4868 () Int)
(declare-fun x7561 () Int)
(declare-fun x6603 () Int)
(declare-fun x782 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x798 () Bool)
(declare-fun x6203 () Bool)
(declare-fun x5222 () Int)
(declare-fun x6755 () Int)
(declare-fun x5216 () Bool)
(declare-fun x1404 (Int) Int)
(declare-fun x2958 () Bool)
(declare-fun x3463 () Int)
(declare-fun x5440 () Bool)
(declare-fun x6693 () Int)
(declare-fun x6536 () Bool)
(declare-fun x7592 () Bool)
(declare-fun x8067 () Bool)
(declare-fun x7891 () Bool)
(declare-fun x7185 () Int)
(declare-fun x5245 () Int)
(declare-fun x3072 () Int)
(declare-fun x3849 () Bool)
(declare-fun x5814 () Int)
(declare-fun x3891 () Bool)
(declare-fun x1714 () Int)
(declare-fun x7377 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x6478 () Bool)
(declare-fun x5166 () Bool)
(declare-fun x7807 () Bool)
(declare-fun x7436 () Int)
(declare-fun x4530 () Int)
(declare-fun x2039 () Int)
(declare-fun x6706 () Int)
(declare-fun x555 (Int) Int)
(declare-fun x213 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x6042 () Int)
(declare-fun x8380 () Int)
(declare-fun x8310 () Int)
(declare-fun x8449 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x6574 () Bool)
(declare-fun x6168 () Int)
(declare-fun x6445 () Int)
(declare-fun x2220 () Int)
(declare-fun x1345 () Bool)
(declare-fun x8490 () Int)
(declare-fun x6817 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x4245 () Int)
(declare-fun x1850 () Int)
(declare-fun x4239 () Bool)
(declare-fun x8427 () Int)
(declare-fun x2482 () Int)
(declare-fun x2982 () Int)
(declare-fun x4668 () Int)
(declare-fun x4415 () Bool)
(declare-fun x6937 () Int)
(declare-fun x194 () Bool)
(declare-fun x411 () Bool)
(declare-fun x3206 () Bool)
(declare-fun x7096 () Bool)
(declare-fun x6600 () Int)
(declare-fun x6712 () Int)
(declare-fun x19 () Bool)
(declare-fun x720 () Bool)
(declare-fun x5933 () Bool)
(declare-fun x5768 () Int)
(declare-fun x4889 () Int)
(declare-fun x3513 () Int)
(declare-fun x2370 () Bool)
(declare-fun x5545 () Int)
(declare-fun x8142 () Int)
(declare-fun x3092 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x4582 () Bool)
(declare-fun x7497 () Int)
(declare-fun x1241 () Bool)
(declare-fun x5637 () Int)
(declare-fun x1951 () Bool)
(declare-fun x6696 () Bool)
(declare-fun x5734 () Int)
(declare-fun x8508 () Bool)
(declare-fun x170 () Bool)
(declare-fun x499 () Int)
(declare-fun x209 () Bool)
(declare-fun x5031 () Int)
(declare-fun x1415 () Bool)
(declare-fun x3825 () Int)
(declare-fun x4135 () Bool)
(declare-fun x7893 () Bool)
(declare-fun x4287 () Bool)
(declare-fun x7568 () Int)
(declare-fun x4316 () Bool)
(declare-fun x4190 () Int)
(declare-fun x6650 () Int)
(declare-fun x2321 () Int)
(declare-fun x4314 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x7341 () Bool)
(declare-fun x6525 () Int)
(declare-fun x317 () Bool)
(declare-fun x318 () Int)
(declare-fun x7700 () Int)
(declare-fun x5217 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x4534 () Int)
(declare-fun x7239 () Int)
(declare-fun x3088 () Int)
(declare-fun x7738 () Bool)
(declare-fun x5745 () Bool)
(declare-fun x4821 () Int)
(declare-fun x1761 () Int)
(declare-fun x4197 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x6432 () Bool)
(declare-fun x5195 () Int)
(declare-fun x4899 () Int)
(declare-fun x5356 () Int)
(declare-fun x4065 () Int)
(declare-fun x5488 () Bool)
(declare-fun x6425 () Bool)
(declare-fun x4953 () Int)
(declare-fun x7820 () Int)
(declare-fun x4016 () Int)
(declare-fun x2255 () Bool)
(declare-fun x7034 () Int)
(declare-fun x6289 () Int)
(declare-fun x5202 () Bool)
(declare-fun x6688 () Int)
(declare-fun x5628 () Int)
(declare-fun x689 () Int)
(declare-fun x6086 () Int)
(declare-fun x7937 () Int)
(declare-fun x4434 () Bool)
(declare-fun x723 () Int)
(declare-fun x2777 () Int)
(declare-fun x1414 () Int)
(declare-fun x7797 () Int)
(declare-fun x7954 () Int)
(declare-fun x2813 () Bool)
(declare-fun x678 () Bool)
(declare-fun x4778 () Int)
(declare-fun x1905 () Bool)
(declare-fun x1763 () Int)
(declare-fun x2995 () Int)
(declare-fun x7996 () Int)
(declare-fun x2293 () Int)
(declare-fun x485 () Int)
(declare-fun x6120 () Int)
(declare-fun x4538 () Int)
(declare-fun x463 () Int)
(declare-fun x927 () Bool)
(declare-fun x6534 () Int)
(declare-fun x571 () Int)
(declare-fun x253 () Bool)
(declare-fun x1928 () Int)
(declare-fun x4263 () Bool)
(declare-fun x7182 () Int)
(declare-fun x7231 () Bool)
(declare-fun x3917 () Bool)
(declare-fun x6434 () Bool)
(declare-fun x5591 () Int)
(declare-fun x7299 () Bool)
(declare-fun x1370 () Int)
(declare-fun x4380 () Int)
(declare-fun x6609 () Int)
(declare-fun x2461 () Int)
(declare-fun x8314 () Int)
(declare-fun x3623 () Bool)
(declare-fun x3906 () Int)
(declare-fun x1854 () Bool)
(declare-fun x38 () Int)
(declare-fun x2155 () Bool)
(declare-fun x4281 () Int)
(declare-fun x6060 () Bool)
(declare-fun x7945 () Bool)
(declare-fun x6420 () Int)
(declare-fun x2398 () Int)
(declare-fun x863 () Int)
(declare-fun x6494 () Int)
(declare-fun x8020 () Int)
(declare-fun x4521 () Int)
(declare-fun x6870 () Bool)
(declare-fun x6948 () Bool)
(declare-fun x8163 () Int)
(declare-fun x104 () Int)
(declare-fun x587 () Int)
(declare-fun x1283 () Int)
(declare-fun x1700 () Bool)
(declare-fun x6798 () Int)
(declare-fun x3112 () Int)
(declare-fun x5054 () Int)
(declare-fun x4960 () Bool)
(declare-fun x1902 () Int)
(declare-fun x4364 () Int)
(declare-fun x3334 () Bool)
(declare-fun x5737 () Int)
(declare-fun x5288 () Int)
(declare-fun x8276 () Int)
(declare-fun x5466 (Int) Int)
(declare-fun x3390 () Int)
(declare-fun x7826 () Int)
(declare-fun x8568 () Int)
(declare-fun x520 () Bool)
(declare-fun x5655 () Bool)
(declare-fun x7926 () Int)
(declare-fun x6199 () Int)
(declare-fun x4420 () Int)
(declare-fun x6466 () Int)
(declare-fun x2153 (Int) Int)
(declare-fun x4078 () Int)
(declare-fun x7269 () Int)
(declare-fun x296 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x804 () Int)
(declare-fun x4861 () Int)
(declare-fun x3189 () Bool)
(declare-fun x8160 () Int)
(declare-fun x6370 () Int)
(declare-fun x2702 () Int)
(declare-fun x5183 () Bool)
(declare-fun x2835 () Int)
(declare-fun x5450 () Int)
(declare-fun x7211 () Int)
(declare-fun x6255 () Int)
(declare-fun x2012 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x1092 () Int)
(declare-fun x5833 () Int)
(declare-fun x7600 () Int)
(declare-fun x6956 () Bool)
(declare-fun x8525 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x6274 () Int)
(declare-fun x5672 () Bool)
(declare-fun x8188 () Bool)
(declare-fun x7052 () Int)
(declare-fun x5563 () Bool)
(declare-fun x1852 () Int)
(declare-fun x4444 () Int)
(declare-fun x5279 () Bool)
(declare-fun x1232 () Int)
(declare-fun x768 () Int)
(declare-fun x2351 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x6597 () Bool)
(declare-fun x3816 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1587 () Int)
(declare-fun x2111 () Bool)
(declare-fun x7506 () Bool)
(declare-fun x5267 () Int)
(declare-fun x5255 () Int)
(declare-fun x4914 () Bool)
(declare-fun x8376 () Int)
(declare-fun x5636 () Int)
(declare-fun x2314 () Bool)
(declare-fun x87 () Bool)
(declare-fun x1144 () Int)
(declare-fun x1256 () Int)
(declare-fun x2142 () Bool)
(declare-fun x7830 () Int)
(declare-fun x845 () Bool)
(declare-fun x178 () Int)
(declare-fun x4218 () Int)
(declare-fun x4743 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x7035 () Bool)
(declare-fun x3378 () Int)
(declare-fun x3440 () Int)
(declare-fun x4056 () Bool)
(declare-fun x794 () Int)
(declare-fun x2581 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x1769 () Int)
(declare-fun x6433 () Bool)
(declare-fun x2119 () Int)
(declare-fun x5549 () Int)
(declare-fun x332 () Int)
(declare-fun x7021 () Int)
(declare-fun x1488 () Bool)
(declare-fun x8251 () Int)
(declare-fun x5432 () Bool)
(declare-fun x4806 () Int)
(declare-fun x232 () Int)
(declare-fun x5393 () Int)
(declare-fun x2776 () Int)
(declare-fun x2098 () Int)
(declare-fun x900 () Bool)
(declare-fun x5610 () Bool)
(declare-fun x4023 () Int)
(declare-fun x3780 () Int)
(declare-fun x5588 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x2473 () Int)
(declare-fun x6187 () Bool)
(declare-fun x7892 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x6261 () Int)
(declare-fun x3875 () Bool)
(declare-fun x99 () Int)
(declare-fun x1395 () Int)
(declare-fun x2244 () Int)
(declare-fun x1534 () Int)
(declare-fun x2311 () Bool)
(declare-fun x758 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x5125 () Int)
(declare-fun x816 () Bool)
(declare-fun x2988 () Int)
(declare-fun x5471 () Int)
(declare-fun x6568 (Int) Int)
(declare-fun x7746 () Int)
(declare-fun x6070 () Bool)
(declare-fun x5553 () Int)
(declare-fun x5697 () Int)
(declare-fun x5860 () Int)
(declare-fun x1859 () Int)
(declare-fun x7615 () Int)
(declare-fun x7886 () Bool)
(declare-fun x6296 (Int) Int)
(declare-fun x1518 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x3023 () Int)
(declare-fun x6802 () Int)
(declare-fun x7246 () Bool)
(declare-fun x7722 () Int)
(declare-fun x3542 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x7999 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x162 () Bool)
(declare-fun x650 () Int)
(declare-fun x3286 () Int)
(declare-fun x3609 () Bool)
(declare-fun x8383 () Bool)
(declare-fun x437 () Bool)
(declare-fun x7967 () Int)
(declare-fun x6256 () Int)
(declare-fun x3504 () Int)
(declare-fun x6843 () Bool)
(declare-fun x871 () Bool)
(declare-fun x2191 () Int)
(declare-fun x8217 () Int)
(declare-fun x8241 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x1674 () Int)
(declare-fun x4230 () Int)
(declare-fun x2815 () Int)
(declare-fun x2957 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x3234 () Int)
(declare-fun x1262 () Int)
(declare-fun x2740 () Int)
(declare-fun x7417 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x1539 () Int)
(declare-fun x7137 () Bool)
(declare-fun x451 () Int)
(declare-fun x996 () Int)
(declare-fun x2193 () Int)
(declare-fun x6970 () Int)
(declare-fun x5013 () Int)
(declare-fun x1229 () Int)
(declare-fun x7943 () Int)
(declare-fun x6007 () Int)
(declare-fun x6642 () Int)
(declare-fun x8476 () Int)
(declare-fun x6728 () Bool)
(declare-fun x7454 () Bool)
(declare-fun x7327 () Int)
(declare-fun x985 () Int)
(declare-fun x2598 () Int)
(declare-fun x8191 () Int)
(declare-fun x6056 () Bool)
(declare-fun x5634 () Bool)
(declare-fun x7095 () Bool)
(declare-fun x3381 () Int)
(declare-fun x6563 () Int)
(declare-fun x474 () Int)
(declare-fun x8065 () Int)
(declare-fun x3084 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x6279 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x7661 () Int)
(declare-fun x3345 () Int)
(declare-fun x4579 () Bool)
(declare-fun x8262 () Int)
(declare-fun x6971 () Int)
(declare-fun x1554 () Int)
(declare-fun x6316 () Int)
(declare-fun x6393 () Int)
(declare-fun x6213 () Int)
(declare-fun x8028 () Bool)
(declare-fun x7778 () Int)
(declare-fun x5888 () Int)
(declare-fun x5644 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x534 () Int)
(declare-fun x3997 () Int)
(declare-fun x7764 () Bool)
(declare-fun x3738 () Bool)
(declare-fun x2714 () Int)
(declare-fun x5907 () Int)
(declare-fun x4132 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1571 (Int) Int)
(declare-fun x4336 () Bool)
(declare-fun x59 () Int)
(declare-fun x5723 () Int)
(declare-fun x8361 () Bool)
(declare-fun x5244 () Int)
(declare-fun x8243 () Int)
(declare-fun x4142 () Bool)
(declare-fun x5855 () Bool)
(declare-fun x5371 () Bool)
(declare-fun x6644 () Bool)
(declare-fun x501 () Bool)
(declare-fun x3049 () Int)
(declare-fun x8116 () Int)
(declare-fun x4238 () Bool)
(declare-fun x1635 () Int)
(declare-fun x7468 () Int)
(declare-fun x4153 () Int)
(declare-fun x3093 () Int)
(declare-fun x4715 () Bool)
(declare-fun x2497 () Int)
(declare-fun x3512 () Int)
(declare-fun x4445 () Bool)
(declare-fun x7049 () Bool)
(declare-fun x6447 () Int)
(declare-fun x8130 () Bool)
(declare-fun x5785 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x6340 (Int) Int)
(declare-fun x2798 () Int)
(declare-fun x509 () Bool)
(declare-fun x3322 () Int)
(declare-fun x2537 () Bool)
(declare-fun x315 () Int)
(declare-fun x7760 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x377 () Bool)
(declare-fun x6651 () Int)
(declare-fun x2713 () Int)
(declare-fun x6302 () Int)
(declare-fun x6297 () Int)
(declare-fun x6413 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x3248 () Int)
(declare-fun x1010 () Bool)
(declare-fun x4451 () Int)
(declare-fun x6455 () Int)
(declare-fun x6611 () Bool)
(declare-fun x7571 () Int)
(declare-fun x2273 () Bool)
(declare-fun x8103 () Int)
(declare-fun x6946 () Bool)
(declare-fun x4887 () Int)
(declare-fun x4697 () Bool)
(declare-fun x3539 () Int)
(declare-fun x4771 () Int)
(declare-fun x7275 () Int)
(declare-fun x4363 () Bool)
(declare-fun x7758 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x3131 () Int)
(declare-fun x6766 () Bool)
(declare-fun x2918 () Int)
(declare-fun x391 () Int)
(declare-fun x1609 () Int)
(declare-fun x680 () Bool)
(declare-fun x2848 () Int)
(declare-fun x7596 () Int)
(declare-fun x5486 () Int)
(declare-fun x968 () Bool)
(declare-fun x7012 () Bool)
(declare-fun x5187 () Bool)
(declare-fun x8182 () Int)
(declare-fun x5735 () Int)
(declare-fun x3618 () Int)
(declare-fun x3736 () Int)
(declare-fun x4207 () Bool)
(declare-fun x8325 () Int)
(declare-fun x2108 () Int)
(declare-fun x2880 () Bool)
(declare-fun x950 () Int)
(declare-fun x7854 () Bool)
(declare-fun x2975 () Int)
(declare-fun x8487 () Bool)
(declare-fun x586 () Bool)
(declare-fun x6733 () Bool)
(declare-fun x3354 () Int)
(declare-fun x5236 () Int)
(declare-fun x2169 () Int)
(declare-fun x4483 () Int)
(declare-fun x4532 () Bool)
(declare-fun x6353 () Int)
(declare-fun x6566 () Bool)
(declare-fun x7769 () Int)
(declare-fun x4896 () Int)
(declare-fun x8567 () Bool)
(declare-fun x8477 () Bool)
(declare-fun x8091 () Int)
(declare-fun x1189 () Int)
(declare-fun x2487 () Bool)
(declare-fun x34 () Bool)
(declare-fun x3461 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x2195 () Int)
(declare-fun x7336 () Int)
(declare-fun x5699 () Bool)
(declare-fun x3761 () Bool)
(declare-fun x2805 () Int)
(declare-fun x8127 () Int)
(declare-fun x7633 () Bool)
(declare-fun x6148 () Int)
(declare-fun x2657 () Int)
(declare-fun x4368 () Int)
(declare-fun x6914 () Bool)
(declare-fun x4852 () Int)
(declare-fun x3330 () Int)
(declare-fun x7569 () Int)
(declare-fun x406 () Int)
(declare-fun x4193 () Bool)
(declare-fun x3380 () Int)
(declare-fun x3867 () Int)
(declare-fun x1292 () Bool)
(declare-fun x3450 () Int)
(declare-fun x5952 () Bool)
(declare-fun x3129 () Int)
(declare-fun x7664 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x923 () Int)
(declare-fun x4251 () Int)
(declare-fun x2019 () Int)
(declare-fun x3224 () Int)
(declare-fun x7048 () Int)
(declare-fun x2595 () Int)
(declare-fun x239 () Int)
(declare-fun x7745 () Bool)
(declare-fun x8257 () Int)
(declare-fun x6672 () Int)
(declare-fun x5355 () Bool)
(declare-fun x4126 () Bool)
(declare-fun x4299 () Int)
(declare-fun x7103 () Int)
(declare-fun x1634 () Int)
(declare-fun x2441 () Int)
(declare-fun x3497 () Int)
(declare-fun x381 () Bool)
(declare-fun x4662 () Int)
(declare-fun x3267 () Int)
(declare-fun x7044 () Bool)
(declare-fun x4554 () Int)
(declare-fun x2541 () Bool)
(declare-fun x7763 () Bool)
(declare-fun x6090 () Bool)
(declare-fun x7900 () Bool)
(declare-fun x5954 () Bool)
(declare-fun x7024 () Bool)
(declare-fun x5612 () Bool)
(declare-fun x6084 () Int)
(declare-fun x4352 (Int) Int)
(declare-fun x5570 () Int)
(declare-fun x1896 (Int Int Int Int Int) Int)
(declare-fun x3511 (Int) Int)
(declare-fun x4828 () Int)
(declare-fun x1563 () Int)
(declare-fun x8452 () Bool)
(declare-fun x6998 () Int)
(declare-fun x2644 () Int)
(declare-fun x5328 () Bool)
(declare-fun x6029 () Bool)
(declare-fun x2528 () Int)
(declare-fun x7316 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x4030 () Int)
(declare-fun x1652 () Int)
(declare-fun x3158 () Int)
(declare-fun x4054 () Bool)
(declare-fun x201 () Int)
(declare-fun x965 () Int)
(declare-fun x8418 () Bool)
(declare-fun x3723 () Int)
(declare-fun x3021 () Int)
(declare-fun x5153 () Bool)
(declare-fun x5059 () Int)
(declare-fun x3139 () Bool)
(declare-fun x370 (Int) Int)
(declare-fun x3265 () Bool)
(declare-fun x6278 () Bool)
(declare-fun x5446 () Bool)
(declare-fun x5495 () Int)
(declare-fun x2588 () Bool)
(declare-fun x4684 () Int)
(declare-fun x2071 () Int)
(declare-fun x3413 () Bool)
(declare-fun x482 () Int)
(declare-fun x3452 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x6652 () Bool)
(declare-fun x7649 () Bool)
(declare-fun x6183 () Bool)
(declare-fun x2274 () Int)
(declare-fun x6588 () Bool)
(declare-fun x4391 (Int) Int)
(declare-fun x7224 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x8179 () Bool)
(declare-fun x3119 () Int)
(declare-fun x1851 () Int)
(declare-fun x5642 () Int)
(declare-fun x142 () Bool)
(declare-fun x6156 () Bool)
(declare-fun x1381 () Int)
(declare-fun x3480 () Bool)
(declare-fun x8391 () Int)
(declare-fun x557 () Bool)
(declare-fun x6408 () Int)
(declare-fun x5846 () Bool)
(declare-fun x8483 () Int)
(declare-fun x5851 () Int)
(declare-fun x6929 () Int)
(declare-fun x5265 () Bool)
(declare-fun x6381 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1059 () Int)
(declare-fun x3661 () Int)
(declare-fun x7618 () Int)
(declare-fun x2212 () Int)
(declare-fun x2517 () Int)
(declare-fun x3592 () Bool)
(declare-fun x5196 () Int)
(declare-fun x856 () Int)
(declare-fun x6481 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x7911 () Bool)
(declare-fun x662 () Int)
(declare-fun x4858 () Int)
(declare-fun x4636 () Bool)
(declare-fun x75 () Int)
(declare-fun x988 () Int)
(declare-fun x2685 () Bool)
(declare-fun x6487 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x5109 (Int) Int)
(declare-fun x4512 () Bool)
(declare-fun x5571 () Int)
(declare-fun x1062 () Int)
(declare-fun x210 () Int)
(declare-fun x3901 () Bool)
(declare-fun x7467 () Int)
(declare-fun x5527 () Int)
(declare-fun x2122 () Int)
(declare-fun x7509 () Bool)
(declare-fun x3114 () Int)
(declare-fun x3399 () Int)
(declare-fun x138 () Int)
(declare-fun x4098 () Int)
(declare-fun x6743 () Int)
(declare-fun x1121 () Int)
(declare-fun x8202 () Bool)
(declare-fun x4627 () Int)
(declare-fun x7334 () Int)
(declare-fun x7209 () Bool)
(declare-fun x3368 () Int)
(declare-fun x1038 () Int)
(declare-fun x8158 () Int)
(declare-fun x5718 () Bool)
(declare-fun x7702 () Int)
(declare-fun x4892 () Bool)
(declare-fun x592 () Bool)
(declare-fun x242 () Int)
(declare-fun x730 () Int)
(declare-fun x3550 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x4848 () Int)
(declare-fun x1995 () Int)
(declare-fun x4741 () Int)
(declare-fun x6091 () Bool)
(declare-fun x6619 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x8309 () Bool)
(declare-fun x1446 () Int)
(declare-fun x6789 () Bool)
(declare-fun x4118 () Int)
(declare-fun x6653 () Int)
(declare-fun x4524 () Int)
(declare-fun x2530 () Int)
(declare-fun x3703 () Int)
(declare-fun x4470 () Bool)
(declare-fun x6842 () Int)
(declare-fun x1478 () Int)
(declare-fun x4846 () Int)
(declare-fun x6586 () Bool)
(declare-fun x2308 () Int)
(declare-fun x2826 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x3254 () Int)
(declare-fun x4427 () Int)
(declare-fun x3600 () Int)
(declare-fun x1710 () Int)
(declare-fun x8348 () Int)
(declare-fun x3784 () Bool)
(declare-fun x7167 () Int)
(declare-fun x698 () Int)
(declare-fun x819 () Bool)
(declare-fun x4185 () Int)
(declare-fun x2185 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x7445 () Bool)
(declare-fun x1117 () Int)
(declare-fun x3102 () Bool)
(declare-fun x1200 () Int)
(declare-fun x2227 () Int)
(declare-fun x7274 () Int)
(declare-fun x6806 () Bool)
(declare-fun x7324 (Int) Int)
(declare-fun x8349 () Bool)
(declare-fun x7313 () Int)
(declare-fun x416 (Int) Int)
(declare-fun x8360 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x1145 () Int)
(declare-fun x4184 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x402 () Bool)
(declare-fun x8482 () Int)
(declare-fun x1524 () Bool)
(declare-fun x5741 () Bool)
(declare-fun x2615 () Int)
(declare-fun x4113 () Bool)
(declare-fun x5441 () Int)
(declare-fun x2981 () Int)
(declare-fun x7259 () Int)
(declare-fun x5914 () Int)
(declare-fun x4244 () Bool)
(declare-fun x1717 () Int)
(declare-fun x2710 () Bool)
(declare-fun x6280 () Int)
(declare-fun x4334 () Int)
(declare-fun x6850 () Int)
(declare-fun x5940 () Int)
(declare-fun x7498 () Int)
(declare-fun x4621 () Bool)
(declare-fun x6359 () Int)
(declare-fun x3929 () Int)
(declare-fun x2011 () Int)
(declare-fun x6889 () Int)
(declare-fun x425 () Int)
(declare-fun x8428 () Bool)
(declare-fun x363 () Bool)
(declare-fun x3669 () Int)
(declare-fun x3733 () Int)
(declare-fun x5674 () Int)
(declare-fun x8076 () Bool)
(declare-fun x6800 () Bool)
(declare-fun x4832 () Int)
(declare-fun x3920 () Bool)
(declare-fun x7338 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x3534 () Int)
(declare-fun x6782 () Bool)
(declare-fun x8393 () Int)
(declare-fun x7502 () Int)
(declare-fun x5210 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x1599 () Int)
(declare-fun x6178 () Bool)
(declare-fun x7780 () Int)
(declare-fun x5141 () Bool)
(declare-fun x3887 () Int)
(declare-fun x6092 () Bool)
(declare-fun x4898 () Int)
(declare-fun x1380 () Bool)
(declare-fun x5231 () Bool)
(declare-fun x4331 () Int)
(declare-fun x5478 () Int)
(declare-fun x8230 () Bool)
(declare-fun x2353 () Int)
(declare-fun x3676 (Int) Int)
(declare-fun x5453 () Bool)
(declare-fun x4494 () Int)
(declare-fun x889 () Bool)
(declare-fun x2432 () Int)
(declare-fun x3460 () Int)
(declare-fun x6395 () Int)
(declare-fun x1650 () Int)
(declare-fun x1079 () Int)
(declare-fun x6997 () Int)
(declare-fun x2317 () Int)
(declare-fun x3116 (Int) Int)
(declare-fun x460 () Bool)
(declare-fun x7643 () Int)
(declare-fun x7625 () Bool)
(declare-fun x385 () Int)
(declare-fun x6143 () Bool)
(declare-fun x5366 () Int)
(declare-fun x5902 () Bool)
(declare-fun x6564 () Bool)
(declare-fun x733 () Int)
(declare-fun x2296 () Bool)
(declare-fun x6275 () Int)
(declare-fun x1148 () Int)
(declare-fun x8164 () Int)
(declare-fun x7427 () Int)
(declare-fun x8358 () Bool)
(declare-fun x6933 (Int) Int)
(declare-fun x1393 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x5789 () Int)
(declare-fun x3331 () Int)
(declare-fun x6073 () Bool)
(declare-fun x8466 () Bool)
(declare-fun x6675 () Bool)
(declare-fun x1122 () Int)
(declare-fun x5159 () Int)
(declare-fun x3118 () Int)
(declare-fun x2876 () Int)
(declare-fun x2934 () Int)
(declare-fun x7516 () Int)
(declare-fun x8 () Bool)
(declare-fun x8174 () Bool)
(declare-fun x4258 () Bool)
(declare-fun x8090 () Bool)
(declare-fun x3596 () Int)
(declare-fun x7965 () Bool)
(declare-fun x2529 () Int)
(declare-fun x4747 () Int)
(declare-fun x3080 () Bool)
(declare-fun x5708 () Bool)
(declare-fun x544 () Bool)
(declare-fun x6344 () Int)
(declare-fun x48 () Int)
(declare-fun x931 () Int)
(declare-fun x6569 () Bool)
(declare-fun x7513 () Bool)
(declare-fun x2738 () Int)
(declare-fun x5140 () Bool)
(declare-fun x8474 () Int)
(declare-fun x5875 () Int)
(declare-fun x4539 () Bool)
(declare-fun x1258 () Int)
(declare-fun x5778 () Bool)
(declare-fun x3633 () Bool)
(declare-fun x616 () Int)
(declare-fun x433 () Int)
(declare-fun x2049 () Bool)
(declare-fun x6637 () Int)
(declare-fun x7973 () Int)
(declare-fun x1930 () Bool)
(declare-fun x7724 () Int)
(declare-fun x7951 () Bool)
(declare-fun x1015 () Int)
(declare-fun x8093 () Int)
(declare-fun x2028 () Int)
(declare-fun x4337 () Bool)
(declare-fun x6132 () Bool)
(declare-fun x7081 () Int)
(declare-fun x3036 () Bool)
(declare-fun x8229 () Bool)
(declare-fun x4290 () Bool)
(declare-fun x4794 () Bool)
(declare-fun x675 () Int)
(declare-fun x2457 () Bool)
(declare-fun x5666 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x6774 () Bool)
(declare-fun x6546 () Bool)
(declare-fun x6200 () Int)
(declare-fun x4507 () Bool)
(declare-fun x2031 () Int)
(declare-fun x2245 () Int)
(declare-fun x6734 () Int)
(declare-fun x6674 () Bool)
(declare-fun x3419 () Int)
(declare-fun x6392 () Int)
(declare-fun x1078 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1302 () Int)
(declare-fun x7677 () Bool)
(declare-fun x8524 () Int)
(declare-fun x7168 () Bool)
(declare-fun x1273 () Int)
(declare-fun x7845 () Int)
(declare-fun x3553 () Bool)
(declare-fun x7971 () Int)
(declare-fun x601 () Int)
(declare-fun x3478 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1169 () Bool)
(declare-fun x454 () Int)
(declare-fun x3340 () Bool)
(declare-fun x7399 () Int)
(declare-fun x1876 () Int)
(declare-fun x2587 () Int)
(declare-fun x1083 () Bool)
(declare-fun x3694 () Bool)
(declare-fun x7102 () Bool)
(declare-fun x1281 () Int)
(declare-fun x7390 () Int)
(declare-fun x2653 () Int)
(declare-fun x1882 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x3358 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1397 () Bool)
(declare-fun x477 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x1829 () Bool)
(declare-fun x2736 () Int)
(declare-fun x8488 () Int)
(declare-fun x986 () Bool)
(declare-fun x7880 () Int)
(declare-fun x1186 () Bool)
(declare-fun x6243 () Int)
(declare-fun x7225 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x430 () Bool)
(declare-fun x6510 () Bool)
(declare-fun x1391 () Int)
(declare-fun x669 () Bool)
(declare-fun x6154 () Bool)
(declare-fun x596 () Bool)
(declare-fun x7852 () Bool)
(declare-fun x5240 () Bool)
(declare-fun x5122 () Int)
(declare-fun x5959 () Int)
(declare-fun x93 () Int)
(declare-fun x6463 () Bool)
(declare-fun x1438 () Int)
(declare-fun x7652 () Int)
(declare-fun x2506 () Int)
(declare-fun x1596 () Bool)
(declare-fun x6988 () Int)
(declare-fun x5500 () Bool)
(declare-fun x569 () Int)
(declare-fun x3822 () Int)
(declare-fun x732 () Int)
(declare-fun x5063 () Bool)
(declare-fun x7882 () Int)
(declare-fun x5640 () Bool)
(declare-fun x7002 () Bool)
(declare-fun x2360 () Bool)
(declare-fun x6401 () Bool)
(declare-fun x3602 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1822 () Int)
(declare-fun x7929 () Int)
(declare-fun x2319 () Int)
(declare-fun x1653 () Int)
(declare-fun x106 () Bool)
(declare-fun x4704 () Int)
(declare-fun x2620 () Int)
(declare-fun x3590 () Int)
(declare-fun x8085 () Int)
(declare-fun x4108 () Int)
(declare-fun x5289 () Bool)
(declare-fun x5250 () Int)
(declare-fun x1919 () Bool)
(declare-fun x307 () Int)
(declare-fun x333 () Bool)
(declare-fun x1011 () Int)
(declare-fun x8547 () Bool)
(declare-fun x6579 () Int)
(declare-fun x6795 () Bool)
(declare-fun x6398 () Bool)
(declare-fun x6410 () Bool)
(declare-fun x3557 () Int)
(declare-fun x8088 () Bool)
(declare-fun x5382 () Int)
(declare-fun x7985 () Int)
(declare-fun x529 () Bool)
(declare-fun x7589 () Int)
(declare-fun x228 () Bool)
(declare-fun x1047 () Int)
(declare-fun x5283 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x944 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x235 () Int)
(declare-fun x1175 () Bool)
(declare-fun x8331 () Bool)
(declare-fun x8522 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x831 () Bool)
(declare-fun x7244 () Int)
(declare-fun x6345 () Bool)
(declare-fun x6995 () Bool)
(declare-fun x1503 () Int)
(declare-fun x2525 () Int)
(declare-fun x6043 () Int)
(declare-fun x929 () Int)
(declare-fun x2208 () Int)
(declare-fun x8563 () Bool)
(declare-fun x3612 () Int)
(declare-fun x7599 () Int)
(declare-fun x5919 () Int)
(declare-fun x4580 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x7537 () Bool)
(declare-fun x7071 () Bool)
(declare-fun x7214 () Int)
(declare-fun x320 () Bool)
(declare-fun x6499 () Int)
(declare-fun x2964 () Bool)
(declare-fun x2095 () Int)
(declare-fun x7995 () Int)
(declare-fun x6130 () Bool)
(declare-fun x2198 () Int)
(declare-fun x536 () Int)
(declare-fun x3629 () Bool)
(declare-fun x6269 () Bool)
(declare-fun x3201 () Int)
(declare-fun x262 () Bool)
(declare-fun x4955 () Int)
(declare-fun x2866 () Int)
(declare-fun x7144 () Bool)
(declare-fun x7029 () Int)
(declare-fun x4082 () Bool)
(declare-fun x2477 () Int)
(declare-fun x6966 () Bool)
(declare-fun x7549 () Bool)
(declare-fun x5485 () Int)
(declare-fun x2210 () Int)
(declare-fun x8122 () Bool)
(declare-fun x5138 (Int) Int)
(declare-fun x4293 () Int)
(declare-fun x1222 () Int)
(declare-fun x8274 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x484 () Int)
(declare-fun x8440 () Int)
(declare-fun x375 () Int)
(declare-fun x4410 () Int)
(declare-fun x4097 () Int)
(declare-fun x6944 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x5579 () Int)
(declare-fun x4323 () Int)
(declare-fun x8505 () Bool)
(declare-fun x7959 () Int)
(declare-fun x5838 () Int)
(declare-fun x8443 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x1552 () Int)
(declare-fun x7612 () Int)
(declare-fun x1111 () Int)
(declare-fun x4022 () Int)
(declare-fun x4974 () Int)
(declare-fun x155 () Bool)
(declare-fun x2532 () Int)
(declare-fun x3405 () Int)
(declare-fun x7825 () Int)
(declare-fun x145 () Int)
(declare-fun x5197 () Int)
(declare-fun x8295 () Int)
(declare-fun x3309 () Int)
(declare-fun x4283 () Int)
(declare-fun x3903 () Bool)
(declare-fun x6580 () Int)
(declare-fun x2158 () Int)
(declare-fun x784 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x401 () Bool)
(declare-fun x2851 () Int)
(declare-fun x4486 () Int)
(declare-fun x2832 () Bool)
(declare-fun x6964 () Int)
(declare-fun x4665 () Int)
(declare-fun x4969 () Int)
(declare-fun x3263 () Bool)
(declare-fun x4369 () Bool)
(declare-fun x2939 () Int)
(declare-fun x719 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1042 () Int)
(declare-fun x3058 () Int)
(declare-fun x4847 () Bool)
(declare-fun x2715 () Bool)
(declare-fun x7486 () Bool)
(declare-fun x169 (Int) Int)
(declare-fun x6594 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x2343 () Int)
(declare-fun x938 () Bool)
(declare-fun x6916 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x6133 () Int)
(declare-fun x7375 () Int)
(declare-fun x2160 () Int)
(declare-fun x7584 () Bool)
(declare-fun x5290 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x8156 () Int)
(declare-fun x6885 () Int)
(declare-fun x6748 () Int)
(declare-fun x826 () Bool)
(declare-fun x2700 () Int)
(declare-fun x1077 () Int)
(declare-fun x2763 () Bool)
(declare-fun x1889 (Int) Int)
(declare-fun x8060 () Int)
(declare-fun x311 (Int) Int)
(declare-fun x2250 () Int)
(declare-fun x1839 () Int)
(declare-fun x6700 () Int)
(declare-fun x1564 () Bool)
(declare-fun x3765 () Int)
(declare-fun x5161 () Bool)
(declare-fun x3017 () Int)
(declare-fun x2320 () Bool)
(declare-fun x4919 () Bool)
(declare-fun x4531 () Int)
(declare-fun x2292 () Int)
(declare-fun x1970 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x327 () Int)
(declare-fun x8389 () Int)
(declare-fun x88 () Int)
(declare-fun x511 () Int)
(declare-fun x6371 () Bool)
(declare-fun x2399 () Int)
(declare-fun x3140 () Bool)
(declare-fun x5375 () Bool)
(declare-fun x5760 () Int)
(declare-fun x42 () Int)
(declare-fun x3691 () Int)
(declare-fun x6257 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x3529 () Int)
(declare-fun x4390 () Int)
(declare-fun x8404 () Int)
(declare-fun x5562 () Bool)
(declare-fun x6308 () Bool)
(declare-fun x3831 () Int)
(declare-fun x2069 () Bool)
(declare-fun x7314 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x5896 () Int)
(declare-fun x8155 () Bool)
(declare-fun x8265 () Int)
(declare-fun x6125 () Int)
(declare-fun x8387 () Int)
(declare-fun x4736 () Int)
(declare-fun x8196 () Int)
(declare-fun x5367 () Int)
(declare-fun x7397 () Bool)
(declare-fun x4149 () Int)
(declare-fun x4629 () Int)
(declare-fun x4308 () Bool)
(declare-fun x2504 () Int)
(declare-fun x3025 () Int)
(declare-fun x8267 () Int)
(declare-fun x5529 () Int)
(declare-fun x7201 () Bool)
(declare-fun x3805 () Int)
(declare-fun x7800 () Int)
(declare-fun x5307 () Int)
(declare-fun x3124 () Int)
(declare-fun x4106 () Int)
(declare-fun x6375 () Bool)
(declare-fun x6859 () Int)
(declare-fun x4248 () Bool)
(declare-fun x7301 () Int)
(declare-fun x7150 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x749 () Int)
(declare-fun x8491 () Int)
(declare-fun x7083 () Bool)
(declare-fun x781 () Bool)
(declare-fun x1962 () Int)
(declare-fun x1802 () Int)
(declare-fun x7835 () Bool)
(declare-fun x278 () Int)
(declare-fun x2954 () Int)
(declare-fun x2262 () Bool)
(declare-fun x1535 () Int)
(declare-fun x2868 () Int)
(declare-fun x713 () Int)
(declare-fun x1465 () Bool)
(declare-fun x5670 () Bool)
(declare-fun x2789 () Int)
(declare-fun x1719 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x7352 () Int)
(declare-fun x6656 () Int)
(declare-fun x8177 (Int) Int)
(declare-fun x4286 () Int)
(declare-fun x4641 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x7480 () Bool)
(declare-fun x5148 () Int)
(declare-fun x6761 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x6649 () Int)
(declare-fun x1255 () Int)
(declare-fun x5880 () Int)
(declare-fun x7534 () Int)
(declare-fun x5664 () Int)
(declare-fun x5347 () Bool)
(declare-fun x2217 () Int)
(declare-fun x1673 () Bool)
(declare-fun x6327 () Bool)
(declare-fun x7553 () Bool)
(declare-fun x2871 () Int)
(declare-fun x3595 () Bool)
(declare-fun x434 () Bool)
(declare-fun x5767 () Int)
(declare-fun x7110 () Bool)
(declare-fun x7112 () Int)
(declare-fun x7418 () Int)
(declare-fun x428 () Bool)
(declare-fun x6857 () Bool)
(declare-fun x6959 () Int)
(declare-fun x208 () Int)
(declare-fun x5182 () Int)
(declare-fun x1134 () Int)
(declare-fun x4929 () Bool)
(declare-fun x5032 () Int)
(declare-fun x6764 () Int)
(declare-fun x5334 () Bool)
(declare-fun x195 () Bool)
(declare-fun x3103 () Bool)
(declare-fun x2079 () Int)
(declare-fun x2679 () Bool)
(declare-fun x7126 () Int)
(declare-fun x3814 () Int)
(declare-fun x352 () Bool)
(declare-fun x6811 () Bool)
(declare-fun x4787 () Int)
(declare-fun x5870 () Bool)
(declare-fun x4235 () Int)
(declare-fun x3159 () Int)
(declare-fun x6334 () Bool)
(declare-fun x6505 () Bool)
(declare-fun x2807 () Int)
(declare-fun x1815 () Bool)
(declare-fun x2804 () Bool)
(declare-fun x5431 () Bool)
(declare-fun x7343 () Int)
(declare-fun x7310 () Int)
(declare-fun x4996 () Bool)
(declare-fun x7694 () Int)
(declare-fun x5568 () Int)
(declare-fun x2479 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x5598 () Int)
(declare-fun x3735 () Bool)
(declare-fun x951 () Int)
(declare-fun x7127 () Int)
(declare-fun x4767 () Int)
(declare-fun x5354 () Int)
(declare-fun x4735 () Int)
(declare-fun x1320 () Int)
(declare-fun x1070 () Bool)
(declare-fun x4981 () Int)
(declare-fun x4725 () Bool)
(declare-fun x6983 () Int)
(declare-fun x5281 () Int)
(declare-fun x2368 () Bool)
(declare-fun x7349 () Bool)
(declare-fun x5214 () Int)
(declare-fun x5362 () Bool)
(declare-fun x4737 () Int)
(declare-fun x369 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x6623 () Int)
(declare-fun x3732 () Bool)
(declare-fun x8468 () Int)
(declare-fun x7449 () Bool)
(declare-fun x8514 () Int)
(declare-fun x5934 () Int)
(declare-fun x3285 () Int)
(declare-fun x1154 () Int)
(declare-fun x2043 () Int)
(declare-fun x2084 () Int)
(declare-fun x5525 () Int)
(declare-fun x498 () Int)
(declare-fun x2666 () Int)
(declare-fun x2426 () Bool)
(declare-fun x4051 () Bool)
(declare-fun x7783 () Int)
(declare-fun x151 () Int)
(declare-fun x4399 () Bool)
(declare-fun x2993 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x7616 () Int)
(declare-fun x6281 () Bool)
(declare-fun x4810 () Int)
(declare-fun x3544 () Bool)
(declare-fun x6897 () Int)
(declare-fun x4632 () Int)
(declare-fun x7832 () Bool)
(declare-fun x3293 () Int)
(declare-fun x6087 () Bool)
(declare-fun x754 () Bool)
(declare-fun x2103 () Int)
(declare-fun x2239 () Bool)
(declare-fun x6293 () Bool)
(declare-fun x2690 (Int) Int)
(declare-fun x8521 () Bool)
(declare-fun x6449 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x7484 () Bool)
(declare-fun x5749 () Int)
(declare-fun x8171 () Bool)
(declare-fun x3943 () Int)
(declare-fun x6172 () Int)
(declare-fun x7439 () Bool)
(declare-fun x4676 () Int)
(declare-fun x1808 () Bool)
(declare-fun x5001 () Int)
(declare-fun x7294 () Int)
(declare-fun x1584 () Int)
(declare-fun x2367 () Int)
(declare-fun x160 () Int)
(declare-fun x8475 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x6227 () Bool)
(declare-fun x3437 () Int)
(declare-fun x6422 () Int)
(declare-fun x5208 () Bool)
(declare-fun x5287 () Int)
(declare-fun x6915 () Int)
(declare-fun x3729 () Int)
(declare-fun x1027 () Bool)
(declare-fun x548 () Bool)
(declare-fun x6415 () Int)
(declare-fun x1475 () Int)
(declare-fun x807 () Int)
(declare-fun x4520 () Bool)
(declare-fun x3383 () Int)
(declare-fun x1955 () Int)
(declare-fun x6107 () Int)
(declare-fun x3752 () Bool)
(declare-fun x2347 () Int)
(declare-fun x5049 () Bool)
(declare-fun x6781 () Bool)
(declare-fun x4723 () Int)
(declare-fun x7302 () Int)
(declare-fun x8346 () Bool)
(declare-fun x8047 () Int)
(declare-fun x7707 () Int)
(declare-fun x2669 () Int)
(declare-fun x4165 () Int)
(declare-fun x1035 () Int)
(declare-fun x8165 () Bool)
(declare-fun x1545 () Int)
(declare-fun x8261 () Bool)
(declare-fun x2112 () Int)
(declare-fun x8144 () Int)
(declare-fun x522 () Int)
(declare-fun x4231 () Bool)
(declare-fun x7663 (Int) Int)
(declare-fun x3585 () Int)
(declare-fun x6598 () Int)
(declare-fun x6300 () Int)
(declare-fun x4776 () Bool)
(declare-fun x6687 () Int)
(declare-fun x3804 () Bool)
(declare-fun x3569 () Int)
(declare-fun x4383 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x6307 () Int)
(declare-fun x3947 () Int)
(declare-fun x8063 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x7123 () Int)
(declare-fun x2510 () Int)
(declare-fun x191 () Bool)
(declare-fun x2550 () Int)
(declare-fun x806 () Bool)
(declare-fun x4226 () Bool)
(declare-fun x1037 () Int)
(declare-fun x2513 () Bool)
(declare-fun x531 () Int)
(declare-fun x6941 () Int)
(declare-fun x1267 () Int)
(declare-fun x5589 () Int)
(declare-fun x8041 () Int)
(declare-fun x2827 () Bool)
(declare-fun x7574 () Int)
(declare-fun x6936 () Bool)
(declare-fun x7703 () Int)
(declare-fun x483 () Bool)
(declare-fun x5583 () Int)
(declare-fun x2492 () Int)
(declare-fun x7755 () Int)
(declare-fun x4484 () Int)
(declare-fun x5095 () Int)
(declare-fun x7801 () Int)
(declare-fun x119 () Int)
(declare-fun x8207 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x432 () Bool)
(declare-fun x5567 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x6180 () Int)
(declare-fun x1106 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x8499 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x6138 () Int)
(declare-fun x2207 () Int)
(declare-fun x5147 () Int)
(declare-fun x2816 () Int)
(declare-fun x4147 () Int)
(declare-fun x4674 () Int)
(declare-fun x1386 () Int)
(declare-fun x3135 () Bool)
(declare-fun x7362 () Bool)
(declare-fun x1629 () Int)
(declare-fun x4412 () Bool)
(declare-fun x7837 () Bool)
(declare-fun x5901 () Int)
(declare-fun x1114 () Bool)
(declare-fun x5938 () Int)
(declare-fun x4709 () Bool)
(declare-fun x3908 () Int)
(declare-fun x1548 () Bool)
(declare-fun x1484 () Int)
(declare-fun x1682 () Int)
(declare-fun x8464 () Int)
(declare-fun x4468 () Bool)
(declare-fun x5764 () Int)
(declare-fun x4069 () Int)
(declare-fun x8077 () Int)
(declare-fun x880 () Int)
(declare-fun x5945 () Bool)
(declare-fun x117 () Bool)
(declare-fun x496 () Int)
(declare-fun x5806 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x7684 () Int)
(declare-fun x4749 () Int)
(declare-fun x7026 () Int)
(declare-fun x8498 () Int)
(declare-fun x5002 () Bool)
(declare-fun x769 () Int)
(declare-fun x7392 () Int)
(declare-fun x8242 () Bool)
(declare-fun x3156 () Int)
(declare-fun x4345 () Int)
(declare-fun x1753 () Bool)
(declare-fun x8120 () Int)
(declare-fun x6543 () Int)
(declare-fun x3921 () Int)
(declare-fun x424 () Bool)
(declare-fun x2445 () Int)
(declare-fun x4313 () Bool)
(declare-fun x563 () Int)
(declare-fun x6976 () Int)
(declare-fun x6095 () Bool)
(declare-fun x4742 () Bool)
(declare-fun x7675 () Int)
(declare-fun x5121 () Int)
(declare-fun x2281 () Bool)
(declare-fun x2044 () Int)
(declare-fun x5647 () Int)
(declare-fun x4159 () Int)
(declare-fun x5619 () Bool)
(declare-fun x8233 () Int)
(declare-fun x4619 () Int)
(declare-fun x3408 () Int)
(declare-fun x7383 () Bool)
(declare-fun x4417 () Int)
(declare-fun x33 () Bool)
(declare-fun x1704 () Int)
(declare-fun x3420 () Bool)
(declare-fun x8535 () Bool)
(declare-fun x5167 () Bool)
(declare-fun x7628 () Bool)
(declare-fun x7295 () Bool)
(declare-fun x359 () Int)
(declare-fun x2498 () Bool)
(declare-fun x6388 () Int)
(declare-fun x7161 () Bool)
(declare-fun x4594 () Bool)
(declare-fun x2591 () Int)
(declare-fun x2594 () Int)
(declare-fun x6673 () Int)
(declare-fun x1130 () Bool)
(declare-fun x8216 () Int)
(declare-fun x6616 () Int)
(declare-fun x3717 () Int)
(declare-fun x2299 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x8066 () Int)
(declare-fun x4831 () Int)
(declare-fun x5399 () Bool)
(declare-fun x6486 () Int)
(declare-fun x5906 () Bool)
(declare-fun x2411 () Int)
(declare-fun x7001 () Int)
(declare-fun x2688 () Bool)
(declare-fun x5107 () Bool)
(declare-fun x6648 () Bool)
(declare-fun x4885 () Int)
(declare-fun x7655 () Int)
(declare-fun x4204 () Bool)
(declare-fun x7641 () Bool)
(declare-fun x588 () Bool)
(declare-fun x4413 () Int)
(declare-fun x3337 () Int)
(declare-fun x1681 () Bool)
(declare-fun x7756 () Bool)
(declare-fun x1294 () Int)
(declare-fun x7317 () Int)
(declare-fun x3445 () Int)
(declare-fun x1966 () Bool)
(declare-fun x7721 () Int)
(declare-fun x1202 () Int)
(declare-fun x1135 () Bool)
(declare-fun x5790 () Int)
(declare-fun x3568 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x2422 () Int)
(declare-fun x8248 () Int)
(declare-fun x5379 () Bool)
(declare-fun x3341 () Int)
(declare-fun x97 () Int)
(declare-fun x2846 () Int)
(define-fun x7100 ((x3874 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3874) (>= x3874 0)) x3874 (- x3874 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2230 ((x3874 Int)) Int (ite (and (< x3874 0) (>= x3874 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3874 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3874))
(define-fun x4938 ((x7154 Int)) Bool (and (>= x7154 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7154)))
(define-fun x2857 ((x7154 Int)) Bool (and (= (x1066 x7154 115792089237316195423570985008687907853269984665640564039457584007913129639935) x7154) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7154) x7154)))
(define-fun x284 ((x7154 Int)) Bool (and (= 0 (x1066 x7154 0)) (= (x1066 0 x7154) 0)))
(define-fun x3862 ((x7154 Int)) Bool (= (x1066 x7154 x7154) x7154))
(define-fun x150 ((x7154 Int)) Bool (and (x3862 x7154) (x2857 x7154) (x284 x7154)))
(define-fun x6149 ((x7154 Int) (x6519 Int)) Bool (= (x1066 x7154 x6519) (x1066 x6519 x7154)))
(define-fun x4648 ((x7154 Int) (x6519 Int)) Bool (and (=> (>= x7154 0) (>= x7154 (x1066 x7154 x6519))) (<= 0 (x1066 x7154 x6519)) (=> (>= x6519 0) (<= (x1066 x7154 x6519) x6519))))
(define-fun x3824 ((x7154 Int) (x6519 Int)) Bool (and (x4648 x7154 x6519) (x6149 x7154 x6519)))
(define-fun x5408 ((x7154 Int)) Bool (= (mod x7154 256) (x1066 x7154 255)))
(define-fun x704 ((x7154 Int)) Bool (and (x5408 x7154) (x3824 x7154 255)))
(define-fun x2243 ((x7154 Int)) Bool (= (x1066 x7154 1) (mod x7154 2)))
(define-fun x4546 ((x7154 Int)) Bool (and (x2243 x7154) (x3824 x7154 1)))
(define-fun x17 ((x7154 Int)) Bool (= (mod x7154 128) (x1066 x7154 127)))
(define-fun x4485 ((x7154 Int)) Bool (and (x17 x7154) (x3824 x7154 127)))
(define-fun x2202 ((x7154 Int)) Bool (= (+ (mod x7154 256) (x1066 x7154 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (mod x7154 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2131 ((x7154 Int)) Bool (and (x3824 x7154 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x2202 x7154)))
(define-fun x2318 ((x7154 Int)) Bool (= (+ (x1066 x7154 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x7154 32)) (mod x7154 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3670 ((x7154 Int)) Bool (and (x3824 x7154 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2318 x7154)))
(define-fun x3800 ((x7154 Int)) Bool (= (x1066 x7154 26959946667150639794667015087019630673637144422540572481103610249215) (mod x7154 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x3580 ((x7154 Int)) Bool (and (x3800 x7154) (x3824 x7154 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1 ((x6015 Int)) Int 0)
(define-fun x5695 ((x6015 Int)) Int 0)
(define-fun x1760 ((x6015 Int)) Int 0)
(define-fun x398 ((x6015 Int)) Int 0)
(define-fun x1495 ((x6015 Int)) Int 0)
(define-fun x1921 ((x6015 Int)) Int 0)
(define-fun x1894 ((x6015 Int)) Int 0)
(define-fun x4943 ((x6015 Int)) Int (ite (< x6015 x5834) (x7373 x6015) 0))
(define-fun x6570 ((x6015 Int)) Int (ite (> x3408 x6015) (x416 x6015) 0))
(define-fun x1016 ((x6015 Int)) Int (ite (> x197 x6015) (x6314 x6015) 0))
(define-fun x6634 ((x6015 Int)) Int (ite (< x6015 x5036) (x8294 x6015) 0))
(define-fun x5219 ((x6015 Int)) Int (ite (> x4331 x6015) (x4352 x6015) 0))
(define-fun x6240 ((x6015 Int)) Int (ite (> x7404 x6015) (x32 x6015) 0))
(define-fun x3202 ((x6015 Int)) Int (ite (> x627 x6015) (x4040 x6015) 0))
(define-fun x7544 ((x6015 Int)) Int (ite (< x6015 x3319) (x4890 x6015) 0))
(define-fun x6267 ((x6015 Int)) Int (ite (> x6951 x6015) (x2932 x6015) 0))
(define-fun x2912 ((x6015 Int)) Int (ite (> x1976 x6015) (x3414 x6015) 0))
(define-fun x2965 ((x6015 Int)) Int (ite (> x6499 x6015) (x512 x6015) 0))
(define-fun x7917 ((x6015 Int)) Int (ite (> x1818 x6015) (x3835 x6015) 0))
(define-fun x3492 ((x6015 Int)) Int (ite (< x6015 x4736) (x5332 x6015) 0))
(define-fun x4254 ((x6015 Int)) Int (ite (> x2511 x6015) (x5988 x6015) 0))
(define-fun x199 ((x6015 Int)) Int 0)
(define-fun x8032 ((x6015 Int)) Int 0)
(define-fun x1613 ((x6015 Int)) Int 0)
(define-fun x7668 ((x6015 Int)) Int 0)
(define-fun x1960 ((x6015 Int)) Int 0)
(define-fun x1697 ((x6015 Int)) Int 0)
(define-fun x4803 ((x6015 Int)) Int 0)
(define-fun x6284 ((x6015 Int)) Int 0)
(define-fun x7129 ((x6015 Int)) Int 0)
(define-fun x7860 ((x6015 Int)) Int 0)
(define-fun x4211 ((x6015 Int)) Int 0)
(define-fun x3077 ((x6015 Int)) Int 0)
(define-fun x7896 ((x6015 Int)) Int 0)
(define-fun x3062 ((x6015 Int)) Int 0)
(define-fun x7045 ((x6015 Int)) Int 0)
(define-fun x3913 ((x6015 Int)) Int 0)
(define-fun x1687 ((x6015 Int)) Int 0)
(define-fun x574 ((x6015 Int)) Int 0)
(define-fun x1537 ((x6015 Int)) Int 0)
(define-fun x7681 ((x6015 Int)) Int 0)
(define-fun x3828 ((x6015 Int)) Int 0)
(define-fun x3482 ((x6015 Int)) Int 0)
(define-fun x6102 ((x6015 Int)) Int 0)
(define-fun x1853 ((x6015 Int)) Int 0)
(define-fun x7065 ((x6015 Int)) Int 0)
(define-fun x1541 ((x6015 Int)) Int 0)
(define-fun x1903 ((x6015 Int)) Int 0)
(define-fun x1730 ((x6015 Int)) Int 0)
(define-fun x2054 ((x6015 Int)) Int 0)
(define-fun x1210 ((x6015 Int)) Int 0)
(define-fun x7786 ((x6015 Int)) Int 0)
(define-fun x2267 ((x6015 Int)) Int 0)
(define-fun x4707 ((x6015 Int)) Int 0)
(define-fun x5072 ((x6015 Int)) Int 0)
(define-fun x3660 ((x6015 Int)) Int 0)
(define-fun x6716 ((x6015 Int)) Int 0)
(define-fun x1402 ((x6015 Int)) Int 0)
(define-fun x3983 ((x6015 Int)) Int 0)
(define-fun x4964 ((x6015 Int)) Int 0)
(define-fun x1348 ((x6015 Int)) Int 0)
(define-fun x2731 ((x6015 Int)) Int 0)
(define-fun x1877 ((x6015 Int)) Int 0)
(define-fun x6333 ((x6015 Int)) Int 0)
(define-fun x4770 ((x6015 Int)) Int 0)
(define-fun x7799 ((x6015 Int)) Int 0)
(define-fun x2754 ((x6015 Int)) Int 0)
(define-fun x6783 ((x6015 Int)) Int 0)
(define-fun x3303 ((x6015 Int)) Int 0)
(define-fun x3377 ((x6015 Int)) Int 0)
(define-fun x8231 ((x6015 Int)) Int 0)
(define-fun x4688 ((x6015 Int)) Int 0)
(define-fun x8183 ((x6015 Int)) Int 0)
(define-fun x7453 ((x6015 Int)) Int 0)
(define-fun x8180 ((x6015 Int)) Int 0)
(define-fun x3847 ((x6015 Int)) Int 0)
(define-fun x7108 ((x6015 Int)) Int 0)
(define-fun x6654 ((x6015 Int)) Int 0)
(define-fun x6982 ((x6015 Int)) Int 0)
(define-fun x5633 ((x6015 Int)) Int 0)
(define-fun x4018 ((x6015 Int)) Int 0)
(define-fun x4685 ((x6015 Int)) Int 0)
(define-fun x8544 ((x6015 Int)) Int 0)
(define-fun x495 ((x6015 Int)) Int 0)
(define-fun x2242 ((x6015 Int)) Int 0)
(define-fun x5556 ((x6015 Int)) Int 0)
(define-fun x7706 ((x6015 Int)) Int 0)
(define-fun x4059 ((x6015 Int)) Int 0)
(define-fun x7528 ((x6015 Int)) Int 0)
(define-fun x7221 ((x6015 Int)) Int 0)
(define-fun x8112 ((x6015 Int)) Int 0)
(define-fun x3466 ((x6015 Int)) Int 0)
(define-fun x3864 ((x6015 Int)) Int 0)
(define-fun x5469 ((x6015 Int)) Int 0)
(define-fun x1401 ((x6015 Int)) Int 0)
(define-fun x1297 ((x6015 Int)) Int 0)
(define-fun x8415 ((x6015 Int)) Int 0)
(define-fun x6437 ((x6015 Int)) Int 0)
(define-fun x2643 ((x6015 Int)) Int 0)
(define-fun x4822 ((x6015 Int)) Int 0)
(define-fun x4732 ((x6015 Int)) Int 0)
(define-fun x1212 ((x6015 Int)) Int 0)
(define-fun x2830 ((x6015 Int)) Int 0)
(define-fun x1981 ((x6015 Int)) Int 0)
(define-fun x5417 ((x6015 Int)) Int 0)
(define-fun x772 ((x6015 Int)) Int 0)
(define-fun x6828 ((x6015 Int)) Int 0)
(define-fun x1342 ((x6015 Int)) Int 0)
(define-fun x6330 ((x6015 Int)) Int 0)
(define-fun x181 ((x6015 Int)) Int 0)
(define-fun x6626 ((x6015 Int)) Int 0)
(define-fun x4280 ((x6015 Int)) Int 0)
(define-fun x3289 ((x6015 Int)) Int 0)
(define-fun x7646 ((x6015 Int)) Int 0)
(define-fun x4726 ((x6015 Int)) Int 0)
(define-fun x3763 ((x6015 Int)) Int 0)
(define-fun x5943 ((x6015 Int)) Int 0)
(define-fun x6509 ((x6015 Int)) Int 0)
(define-fun x3998 ((x6015 Int)) Int 0)
(define-fun x3635 ((x6015 Int)) Int 0)
(define-fun x5339 ((x6015 Int)) Int 0)
(define-fun x3905 ((x6015 Int)) Int 0)
(define-fun x6270 ((x6015 Int)) Int 0)
(define-fun x1387 ((x6015 Int)) Int 0)
(define-fun x2437 ((x6015 Int)) Int (ite (= x2029 x6015) x5936 (x5109 x6015)))
(define-fun x6 ((x6015 Int)) Int (ite (= x1579 x6015) x945 (x2437 x6015)))
(define-fun x2438 ((x6015 Int)) Int 0)
(define-fun x911 ((x6015 Int)) Int (ite (= 128 x6015) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1537 x6015)))
(define-fun x2129 ((x6015 Int)) Int (ite (= x6015 132) x89 (x911 x6015)))
(define-fun x551 ((x6015 Int)) Int (ite (= x6015 0) x4846 (x5429 x6015)))
(define-fun x7841 ((x6015 Int)) Int (ite (= 0 x6015) x2975 (x5429 x6015)))
(define-fun x1757 ((x6015 Int)) Int (ite (= x6015 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x2731 x6015)))
(define-fun x5616 ((x6015 Int)) Int (ite (= x6015 132) x3353 (x1757 x6015)))
(define-fun x7705 ((x6015 Int)) Int (ite (= x6015 0) x4034 (x5499 x6015)))
(define-fun x3401 ((x6015 Int)) Int (ite (= 128 x6015) x4034 (x5616 x6015)))
(define-fun x776 ((x6015 Int)) Int (ite (= x6015 4) 17 (x181 x6015)))
(define-fun x6202 ((x6015 Int)) Int (ite (and (< x6015 36) (>= x6015 0)) (x776 x6015) (x5499 x6015)))
(define-fun x4430 ((x6015 Int)) Int (ite (= 0 x6015) x7981 (x5499 x6015)))
(define-fun x4361 ((x6015 Int)) Int (ite (= x6015 128) x7981 (x5616 x6015)))
(define-fun x3475 ((x6015 Int)) Int (ite x6029 (ite x3735 (x4315 x6015) (x2629 x6015)) (ite x3126 (ite x3735 (x4315 x6015) (x2629 x6015)) (x2629 x6015))))
(define-fun x7010 ((x6015 Int)) Int (ite x2314 (x2629 x6015) (ite x7025 (x2629 x6015) (x3475 x6015))))
(define-fun x3980 ((x6015 Int)) Int (ite x2627 (ite x3056 (x2629 x6015) (x7010 x6015)) (x2629 x6015)))
(define-fun x1523 ((x6015 Int)) Int (ite x4965 (x7659 x6015) (x2629 x6015)))
(define-fun x6896 ((x6015 Int)) Int (ite x2553 (ite x6502 (x3980 x6015) (x2629 x6015)) (ite x1854 (x2629 x6015) (x1523 x6015))))
(define-fun x7607 ((x6015 Int)) Int (ite x3566 (x2629 x6015) (ite x5289 (x2629 x6015) (ite x15 (x2629 x6015) (ite x5454 (x2629 x6015) (ite x6947 (x2629 x6015) (ite x7876 (x2629 x6015) (ite x5374 (x2629 x6015) (ite x5160 (x2629 x6015) (ite x7894 (x2629 x6015) (ite x696 (x2629 x6015) (ite x2413 (x2629 x6015) (ite x4421 (x2629 x6015) (ite x6178 (x2629 x6015) (ite x233 (x2629 x6015) (ite x6335 (x2629 x6015) (ite x771 (x2629 x6015) (ite x7489 (x2629 x6015) (ite x4849 (x2629 x6015) (ite x1093 (x2629 x6015) (ite x6894 (x2629 x6015) (ite x1867 (x2629 x6015) (ite x4032 (ite x1100 (x6896 x6015) (x2629 x6015)) (x2629 x6015))))))))))))))))))))))))
(define-fun x3582 ((x6015 Int)) Int (ite x7454 (ite x5700 (x2629 x6015) (x7607 x6015)) (ite x4728 (x2629 x6015) (ite x5700 (x2629 x6015) (x7607 x6015)))))
(define-fun x24 ((x6015 Int)) Int (ite x6029 (ite x3735 (x4718 x6015) (x6878 x6015)) (ite x3126 (ite x3735 (x4718 x6015) (x6878 x6015)) (x6878 x6015))))
(define-fun x2916 ((x6015 Int)) Int (ite x2314 (x6878 x6015) (ite x7025 (x6878 x6015) (x24 x6015))))
(define-fun x875 ((x6015 Int)) Int (ite x2627 (ite x3056 (x6878 x6015) (x2916 x6015)) (x6878 x6015)))
(define-fun x3971 ((x6015 Int)) Int (ite x4965 (x572 x6015) (x6878 x6015)))
(define-fun x2991 ((x6015 Int)) Int (ite x2553 (ite x6502 (x875 x6015) (x6878 x6015)) (ite x1854 (x6878 x6015) (x3971 x6015))))
(define-fun x2224 ((x6015 Int)) Int (ite x3566 (x6878 x6015) (ite x5289 (x6878 x6015) (ite x15 (x6878 x6015) (ite x5454 (x6878 x6015) (ite x6947 (x6878 x6015) (ite x7876 (x6878 x6015) (ite x5374 (x6878 x6015) (ite x5160 (x6878 x6015) (ite x7894 (x6878 x6015) (ite x696 (x6878 x6015) (ite x2413 (x6878 x6015) (ite x4421 (x6878 x6015) (ite x6178 (x6878 x6015) (ite x233 (x6878 x6015) (ite x6335 (x6878 x6015) (ite x771 (x6878 x6015) (ite x7489 (x6878 x6015) (ite x4849 (x6878 x6015) (ite x1093 (x6878 x6015) (ite x6894 (x6878 x6015) (ite x1867 (x6878 x6015) (ite x4032 (ite x1100 (x2991 x6015) (x6878 x6015)) (x6878 x6015))))))))))))))))))))))))
(define-fun x5233 ((x6015 Int)) Int (ite x7454 (ite x5700 (x6878 x6015) (x2224 x6015)) (ite x4728 (x6878 x6015) (ite x5700 (x6878 x6015) (x2224 x6015)))))
(define-fun x4418 ((x6015 Int)) Int (ite x6029 (ite x3735 (x5645 x6015) (x2690 x6015)) (ite x3126 (ite x3735 (x5645 x6015) (x2690 x6015)) (x2690 x6015))))
(define-fun x5704 ((x6015 Int)) Int (ite x2314 (x2690 x6015) (ite x7025 (x2690 x6015) (x4418 x6015))))
(define-fun x3041 ((x6015 Int)) Int (ite x2627 (ite x3056 (x2690 x6015) (x5704 x6015)) (x2690 x6015)))
(define-fun x2852 ((x6015 Int)) Int (ite x4965 (x7510 x6015) (x2690 x6015)))
(define-fun x7858 ((x6015 Int)) Int (ite x2553 (ite x6502 (x3041 x6015) (x2690 x6015)) (ite x1854 (x2690 x6015) (x2852 x6015))))
(define-fun x68 ((x6015 Int)) Int (ite x3566 (x2690 x6015) (ite x5289 (x2690 x6015) (ite x15 (x2690 x6015) (ite x5454 (x2690 x6015) (ite x6947 (x2690 x6015) (ite x7876 (x2690 x6015) (ite x5374 (x2690 x6015) (ite x5160 (x2690 x6015) (ite x7894 (x2690 x6015) (ite x696 (x2690 x6015) (ite x2413 (x2690 x6015) (ite x4421 (x2690 x6015) (ite x6178 (x2690 x6015) (ite x233 (x2690 x6015) (ite x6335 (x2690 x6015) (ite x771 (x2690 x6015) (ite x7489 (x2690 x6015) (ite x4849 (x2690 x6015) (ite x1093 (x2690 x6015) (ite x6894 (x2690 x6015) (ite x1867 (x2690 x6015) (ite x4032 (ite x1100 (x7858 x6015) (x2690 x6015)) (x2690 x6015))))))))))))))))))))))))
(define-fun x4459 ((x6015 Int)) Int (ite x7454 (ite x5700 (x2690 x6015) (x68 x6015)) (ite x4728 (x2690 x6015) (ite x5700 (x2690 x6015) (x68 x6015)))))
(define-fun x7415 ((x6015 Int)) Int (ite (= x4390 x6015) x4140 (x3068 x6015)))
(define-fun x6527 ((x6015 Int)) Int (ite x7354 (x3068 x6015) (x7415 x6015)))
(define-fun x1263 ((x6015 Int)) Int (ite x2553 (x3068 x6015) (ite x1854 (x3068 x6015) (x6527 x6015))))
(define-fun x5357 ((x6015 Int)) Int (ite x3566 (x3068 x6015) (ite x5289 (x3068 x6015) (ite x15 (x3068 x6015) (ite x5454 (x3068 x6015) (ite x6947 (x3068 x6015) (ite x7876 (x3068 x6015) (ite x5374 (x3068 x6015) (ite x5160 (x3068 x6015) (ite x7894 (x3068 x6015) (ite x696 (x3068 x6015) (ite x2413 (x3068 x6015) (ite x4421 (x3068 x6015) (ite x6178 (x3068 x6015) (ite x233 (x3068 x6015) (ite x6335 (x3068 x6015) (ite x771 (x3068 x6015) (ite x7489 (x3068 x6015) (ite x4849 (x3068 x6015) (ite x1093 (x3068 x6015) (ite x6894 (x3068 x6015) (ite x1867 (x3068 x6015) (ite x4032 (ite x1100 (x1263 x6015) (x3068 x6015)) (x3068 x6015))))))))))))))))))))))))
(define-fun x3211 ((x6015 Int)) Int (ite x7454 (ite x5700 (x3068 x6015) (x5357 x6015)) (ite x4728 (x3068 x6015) (ite x5700 (x3068 x6015) (x5357 x6015)))))
(define-fun x4457 ((x6015 Int)) Int (x4585 x6015))
(define-fun x7339 ((x6015 Int)) Int (ite x6029 (ite x3735 (x7624 x6015) (x6251 x6015)) (ite x3126 (ite x3735 (x7624 x6015) (x6251 x6015)) (x6251 x6015))))
(define-fun x5686 ((x6015 Int)) Int (ite x2314 (x6251 x6015) (ite x7025 (x6251 x6015) (x7339 x6015))))
(define-fun x6803 ((x6015 Int)) Int (ite x2627 (ite x3056 (x6251 x6015) (x5686 x6015)) (x6251 x6015)))
(define-fun x2254 ((x6015 Int)) Int (ite x4965 (x1055 x6015) (x6251 x6015)))
(define-fun x6235 ((x6015 Int)) Int (ite x2553 (ite x6502 (x6803 x6015) (x6251 x6015)) (ite x1854 (x6251 x6015) (x2254 x6015))))
(define-fun x5809 ((x6015 Int)) Int (ite x3566 (x6251 x6015) (ite x5289 (x6251 x6015) (ite x15 (x6251 x6015) (ite x5454 (x6251 x6015) (ite x6947 (x6251 x6015) (ite x7876 (x6251 x6015) (ite x5374 (x6251 x6015) (ite x5160 (x6251 x6015) (ite x7894 (x6251 x6015) (ite x696 (x6251 x6015) (ite x2413 (x6251 x6015) (ite x4421 (x6251 x6015) (ite x6178 (x6251 x6015) (ite x233 (x6251 x6015) (ite x6335 (x6251 x6015) (ite x771 (x6251 x6015) (ite x7489 (x6251 x6015) (ite x4849 (x6251 x6015) (ite x1093 (x6251 x6015) (ite x6894 (x6251 x6015) (ite x1867 (x6251 x6015) (ite x4032 (ite x1100 (x6235 x6015) (x6251 x6015)) (x6251 x6015))))))))))))))))))))))))
(define-fun x5524 ((x6015 Int)) Int (ite x7454 (ite x5700 (x6251 x6015) (x5809 x6015)) (ite x4728 (x6251 x6015) (ite x5700 (x6251 x6015) (x5809 x6015)))))
(define-fun x7719 ((x6015 Int)) Int (ite (= x6015 x1033) x5890 (x7306 x6015)))
(define-fun x8511 ((x6015 Int)) Int (ite x2390 (x7306 x6015) (x7719 x6015)))
(define-fun x4947 ((x6015 Int)) Int (ite x6029 (ite x3735 (x2394 x6015) (x7306 x6015)) (ite x3126 (ite x3735 (x2394 x6015) (x7306 x6015)) (x7306 x6015))))
(define-fun x670 ((x6015 Int)) Int (ite x2314 (x7306 x6015) (ite x7025 (x7306 x6015) (x4947 x6015))))
(define-fun x8448 ((x6015 Int)) Int (ite x2627 (ite x3056 (x7306 x6015) (x670 x6015)) (x7306 x6015)))
(define-fun x8347 ((x6015 Int)) Int (ite x4965 (x603 x6015) (x7306 x6015)))
(define-fun x3485 ((x6015 Int)) Int (ite x2553 (ite x6502 (x8448 x6015) (x7306 x6015)) (ite x1854 (x7306 x6015) (x8347 x6015))))
(define-fun x7530 ((x6015 Int)) Int (ite x3566 (x7306 x6015) (ite x5289 (x7306 x6015) (ite x15 (x7306 x6015) (ite x5454 (x7306 x6015) (ite x6947 (x7306 x6015) (ite x7876 (x7306 x6015) (ite x5374 (x7306 x6015) (ite x5160 (x7306 x6015) (ite x7894 (x7306 x6015) (ite x696 (x7306 x6015) (ite x2413 (x7306 x6015) (ite x4421 (x7306 x6015) (ite x6178 (x7306 x6015) (ite x233 (x7306 x6015) (ite x6335 (x7306 x6015) (ite x771 (x7306 x6015) (ite x7489 (x7306 x6015) (ite x4849 (x7306 x6015) (ite x1093 (x7306 x6015) (ite x6894 (x7306 x6015) (ite x1867 (x7306 x6015) (ite x4032 (ite x1100 (x3485 x6015) (x7306 x6015)) (x7306 x6015))))))))))))))))))))))))
(define-fun x7446 ((x6015 Int)) Int (ite x7454 (ite x5700 (x8511 x6015) (x7530 x6015)) (ite x4728 (x7306 x6015) (ite x5700 (x8511 x6015) (x7530 x6015)))))
(define-fun x3657 ((x6015 Int)) Int (x3511 x6015))
(define-fun x2624 ((x6015 Int)) Int (ite x6029 (ite x3735 (x3518 x6015) (x1406 x6015)) (ite x3126 (ite x3735 (x3518 x6015) (x1406 x6015)) (x1406 x6015))))
(define-fun x4212 ((x6015 Int)) Int (ite x2314 (x1406 x6015) (ite x7025 (x1406 x6015) (x2624 x6015))))
(define-fun x1396 ((x6015 Int)) Int (ite x2627 (ite x3056 (x1406 x6015) (x4212 x6015)) (x1406 x6015)))
(define-fun x5618 ((x6015 Int)) Int (ite x4965 (x2153 x6015) (x1406 x6015)))
(define-fun x3987 ((x6015 Int)) Int (ite x2553 (ite x6502 (x1396 x6015) (x1406 x6015)) (ite x1854 (x1406 x6015) (x5618 x6015))))
(define-fun x4447 ((x6015 Int)) Int (ite x3566 (x1406 x6015) (ite x5289 (x1406 x6015) (ite x15 (x1406 x6015) (ite x5454 (x1406 x6015) (ite x6947 (x1406 x6015) (ite x7876 (x1406 x6015) (ite x5374 (x1406 x6015) (ite x5160 (x1406 x6015) (ite x7894 (x1406 x6015) (ite x696 (x1406 x6015) (ite x2413 (x1406 x6015) (ite x4421 (x1406 x6015) (ite x6178 (x1406 x6015) (ite x233 (x1406 x6015) (ite x6335 (x1406 x6015) (ite x771 (x1406 x6015) (ite x7489 (x1406 x6015) (ite x4849 (x1406 x6015) (ite x1093 (x1406 x6015) (ite x6894 (x1406 x6015) (ite x1867 (x1406 x6015) (ite x4032 (ite x1100 (x3987 x6015) (x1406 x6015)) (x1406 x6015))))))))))))))))))))))))
(define-fun x3320 ((x6015 Int)) Int (ite x7454 (ite x5700 (x1406 x6015) (x4447 x6015)) (ite x4728 (x1406 x6015) (ite x5700 (x1406 x6015) (x4447 x6015)))))
(define-fun x6394 ((x6015 Int)) Int (x1404 x6015))
(define-fun x3392 ((x6015 Int)) Int (x6128 x6015))
(define-fun x981 ((x6015 Int)) Int (ite (= x1262 x6015) 3 (x7324 x6015)))
(define-fun x1934 ((x6015 Int)) Int (ite x5371 (x7324 x6015) (x981 x6015)))
(define-fun x2646 ((x6015 Int)) Int (ite x2627 (x7324 x6015) (ite x6843 (x1934 x6015) (ite x8244 (x1934 x6015) (x7324 x6015)))))
(define-fun x8405 ((x6015 Int)) Int (ite (= x4690 x6015) 2 (x7324 x6015)))
(define-fun x815 ((x6015 Int)) Int (ite (= x6015 x2684) 3 (x8405 x6015)))
(define-fun x7812 ((x6015 Int)) Int (ite x469 (x7324 x6015) (ite x7292 (x8405 x6015) (x815 x6015))))
(define-fun x306 ((x6015 Int)) Int (ite x2553 (ite x6502 (x2646 x6015) (x7812 x6015)) (x7324 x6015)))
(define-fun x1666 ((x6015 Int)) Int (ite x3566 (x7324 x6015) (ite x5289 (x7324 x6015) (ite x15 (x7324 x6015) (ite x5454 (x7324 x6015) (ite x6947 (x7324 x6015) (ite x7876 (x7324 x6015) (ite x5374 (x7324 x6015) (ite x5160 (x7324 x6015) (ite x7894 (x7324 x6015) (ite x696 (x7324 x6015) (ite x2413 (x7324 x6015) (ite x4421 (x7324 x6015) (ite x6178 (x7324 x6015) (ite x233 (x7324 x6015) (ite x6335 (x7324 x6015) (ite x771 (x7324 x6015) (ite x7489 (x7324 x6015) (ite x4849 (x7324 x6015) (ite x1093 (x7324 x6015) (ite x6894 (x7324 x6015) (ite x1867 (x7324 x6015) (ite x4032 (ite x1100 (x306 x6015) (x7324 x6015)) (x7324 x6015))))))))))))))))))))))))
(define-fun x5754 ((x6015 Int)) Int (ite x7454 (ite x5700 (x7324 x6015) (x1666 x6015)) (ite x4728 (x7324 x6015) (ite x5700 (x7324 x6015) (x1666 x6015)))))
(define-fun x5762 ((x6015 Int)) Int (x7156 x6015))
(define-fun x4710 ((x6015 Int)) Int (ite x6029 (ite x3735 (x3610 x6015) (x2784 x6015)) (ite x3126 (ite x3735 (x3610 x6015) (x2784 x6015)) (x2784 x6015))))
(define-fun x64 ((x6015 Int)) Int (ite x2314 (x2784 x6015) (ite x7025 (x2784 x6015) (x4710 x6015))))
(define-fun x8431 ((x6015 Int)) Int (ite x2627 (ite x3056 (x2784 x6015) (x64 x6015)) (x2784 x6015)))
(define-fun x91 ((x6015 Int)) Int (ite x4965 (x5069 x6015) (x2784 x6015)))
(define-fun x919 ((x6015 Int)) Int (ite x2553 (ite x6502 (x8431 x6015) (x2784 x6015)) (ite x1854 (x2784 x6015) (x91 x6015))))
(define-fun x2577 ((x6015 Int)) Int (ite x3566 (x2784 x6015) (ite x5289 (x2784 x6015) (ite x15 (x2784 x6015) (ite x5454 (x2784 x6015) (ite x6947 (x2784 x6015) (ite x7876 (x2784 x6015) (ite x5374 (x2784 x6015) (ite x5160 (x2784 x6015) (ite x7894 (x2784 x6015) (ite x696 (x2784 x6015) (ite x2413 (x2784 x6015) (ite x4421 (x2784 x6015) (ite x6178 (x2784 x6015) (ite x233 (x2784 x6015) (ite x6335 (x2784 x6015) (ite x771 (x2784 x6015) (ite x7489 (x2784 x6015) (ite x4849 (x2784 x6015) (ite x1093 (x2784 x6015) (ite x6894 (x2784 x6015) (ite x1867 (x2784 x6015) (ite x4032 (ite x1100 (x919 x6015) (x2784 x6015)) (x2784 x6015))))))))))))))))))))))))
(define-fun x1399 ((x6015 Int)) Int (ite x7454 (ite x5700 (x2784 x6015) (x2577 x6015)) (ite x4728 (x2784 x6015) (ite x5700 (x2784 x6015) (x2577 x6015)))))
(define-fun x5922 ((x6015 Int)) Int (x751 x6015))
(define-fun x3428 ((x6015 Int)) Int (ite x6029 (ite x3735 (x5361 x6015) (x370 x6015)) (ite x3126 (ite x3735 (x5361 x6015) (x370 x6015)) (x370 x6015))))
(define-fun x4100 ((x6015 Int)) Int (ite x2314 (x370 x6015) (ite x7025 (x370 x6015) (x3428 x6015))))
(define-fun x5742 ((x6015 Int)) Int (ite x2627 (ite x3056 (x370 x6015) (x4100 x6015)) (x370 x6015)))
(define-fun x943 ((x6015 Int)) Int (ite x4965 (x279 x6015) (x370 x6015)))
(define-fun x2004 ((x6015 Int)) Int (ite x2553 (ite x6502 (x5742 x6015) (x370 x6015)) (ite x1854 (x370 x6015) (x943 x6015))))
(define-fun x7139 ((x6015 Int)) Int (ite x3566 (x370 x6015) (ite x5289 (x370 x6015) (ite x15 (x370 x6015) (ite x5454 (x370 x6015) (ite x6947 (x370 x6015) (ite x7876 (x370 x6015) (ite x5374 (x370 x6015) (ite x5160 (x370 x6015) (ite x7894 (x370 x6015) (ite x696 (x370 x6015) (ite x2413 (x370 x6015) (ite x4421 (x370 x6015) (ite x6178 (x370 x6015) (ite x233 (x370 x6015) (ite x6335 (x370 x6015) (ite x771 (x370 x6015) (ite x7489 (x370 x6015) (ite x4849 (x370 x6015) (ite x1093 (x370 x6015) (ite x6894 (x370 x6015) (ite x1867 (x370 x6015) (ite x4032 (ite x1100 (x2004 x6015) (x370 x6015)) (x370 x6015))))))))))))))))))))))))
(define-fun x5394 ((x6015 Int)) Int (ite x7454 (ite x5700 (x370 x6015) (x7139 x6015)) (ite x4728 (x370 x6015) (ite x5700 (x370 x6015) (x7139 x6015)))))
(define-fun x8458 ((x6015 Int)) Int (ite x6029 (ite x3735 (x6407 x6015) (x1571 x6015)) (ite x3126 (ite x3735 (x6407 x6015) (x1571 x6015)) (x1571 x6015))))
(define-fun x6171 ((x6015 Int)) Int (ite x2314 (x1571 x6015) (ite x7025 (x1571 x6015) (x8458 x6015))))
(define-fun x2994 ((x6015 Int)) Int (ite x2627 (ite x3056 (x1571 x6015) (x6171 x6015)) (x1571 x6015)))
(define-fun x2689 ((x6015 Int)) Int (ite x4965 (x6686 x6015) (x1571 x6015)))
(define-fun x849 ((x6015 Int)) Int (ite x2553 (ite x6502 (x2994 x6015) (x1571 x6015)) (ite x1854 (x1571 x6015) (x2689 x6015))))
(define-fun x6592 ((x6015 Int)) Int (ite x3566 (x1571 x6015) (ite x5289 (x1571 x6015) (ite x15 (x1571 x6015) (ite x5454 (x1571 x6015) (ite x6947 (x1571 x6015) (ite x7876 (x1571 x6015) (ite x5374 (x1571 x6015) (ite x5160 (x1571 x6015) (ite x7894 (x1571 x6015) (ite x696 (x1571 x6015) (ite x2413 (x1571 x6015) (ite x4421 (x1571 x6015) (ite x6178 (x1571 x6015) (ite x233 (x1571 x6015) (ite x6335 (x1571 x6015) (ite x771 (x1571 x6015) (ite x7489 (x1571 x6015) (ite x4849 (x1571 x6015) (ite x1093 (x1571 x6015) (ite x6894 (x1571 x6015) (ite x1867 (x1571 x6015) (ite x4032 (ite x1100 (x849 x6015) (x1571 x6015)) (x1571 x6015))))))))))))))))))))))))
(define-fun x4692 ((x6015 Int)) Int (ite x7454 (ite x5700 (x1571 x6015) (x6592 x6015)) (ite x4728 (x1571 x6015) (ite x5700 (x1571 x6015) (x6592 x6015)))))
(define-fun x4087 ((x6015 Int)) Int (ite x6029 (ite x3735 (x2046 x6015) (x2024 x6015)) (ite x3126 (ite x3735 (x2046 x6015) (x2024 x6015)) (x2024 x6015))))
(define-fun x478 ((x6015 Int)) Int (ite x2314 (x2024 x6015) (ite x7025 (x2024 x6015) (x4087 x6015))))
(define-fun x2984 ((x6015 Int)) Int (ite x2627 (ite x3056 (x2024 x6015) (x478 x6015)) (x2024 x6015)))
(define-fun x3926 ((x6015 Int)) Int (ite x4965 (x2389 x6015) (x2024 x6015)))
(define-fun x4127 ((x6015 Int)) Int (ite x2553 (ite x6502 (x2984 x6015) (x2024 x6015)) (ite x1854 (x2024 x6015) (x3926 x6015))))
(define-fun x4660 ((x6015 Int)) Int (ite x3566 (x2024 x6015) (ite x5289 (x2024 x6015) (ite x15 (x2024 x6015) (ite x5454 (x2024 x6015) (ite x6947 (x2024 x6015) (ite x7876 (x2024 x6015) (ite x5374 (x2024 x6015) (ite x5160 (x2024 x6015) (ite x7894 (x2024 x6015) (ite x696 (x2024 x6015) (ite x2413 (x2024 x6015) (ite x4421 (x2024 x6015) (ite x6178 (x2024 x6015) (ite x233 (x2024 x6015) (ite x6335 (x2024 x6015) (ite x771 (x2024 x6015) (ite x7489 (x2024 x6015) (ite x4849 (x2024 x6015) (ite x1093 (x2024 x6015) (ite x6894 (x2024 x6015) (ite x1867 (x2024 x6015) (ite x4032 (ite x1100 (x4127 x6015) (x2024 x6015)) (x2024 x6015))))))))))))))))))))))))
(define-fun x5443 ((x6015 Int)) Int (ite x7454 (ite x5700 (x2024 x6015) (x4660 x6015)) (ite x4728 (x2024 x6015) (ite x5700 (x2024 x6015) (x4660 x6015)))))
(define-fun x4432 ((x6015 Int)) Int (ite x6029 (ite x3735 (x169 x6015) (x2249 x6015)) (ite x3126 (ite x3735 (x169 x6015) (x2249 x6015)) (x2249 x6015))))
(define-fun x4884 ((x6015 Int)) Int (ite x2314 (x2249 x6015) (ite x7025 (x2249 x6015) (x4432 x6015))))
(define-fun x2157 ((x6015 Int)) Int (ite x2627 (ite x3056 (x2249 x6015) (x4884 x6015)) (x2249 x6015)))
(define-fun x4818 ((x6015 Int)) Int (ite x4965 (x6545 x6015) (x2249 x6015)))
(define-fun x8493 ((x6015 Int)) Int (ite x2553 (ite x6502 (x2157 x6015) (x2249 x6015)) (ite x1854 (x2249 x6015) (x4818 x6015))))
(define-fun x1211 ((x6015 Int)) Int (ite x3566 (x2249 x6015) (ite x5289 (x2249 x6015) (ite x15 (x2249 x6015) (ite x5454 (x2249 x6015) (ite x6947 (x2249 x6015) (ite x7876 (x2249 x6015) (ite x5374 (x2249 x6015) (ite x5160 (x2249 x6015) (ite x7894 (x2249 x6015) (ite x696 (x2249 x6015) (ite x2413 (x2249 x6015) (ite x4421 (x2249 x6015) (ite x6178 (x2249 x6015) (ite x233 (x2249 x6015) (ite x6335 (x2249 x6015) (ite x771 (x2249 x6015) (ite x7489 (x2249 x6015) (ite x4849 (x2249 x6015) (ite x1093 (x2249 x6015) (ite x6894 (x2249 x6015) (ite x1867 (x2249 x6015) (ite x4032 (ite x1100 (x8493 x6015) (x2249 x6015)) (x2249 x6015))))))))))))))))))))))))
(define-fun x1008 ((x6015 Int)) Int (ite x7454 (ite x5700 (x2249 x6015) (x1211 x6015)) (ite x4728 (x2249 x6015) (ite x5700 (x2249 x6015) (x1211 x6015)))))
(define-fun x1052 ((x6015 Int)) Int (ite (= x6015 x1014) x1019 (x7248 x6015)))
(define-fun x1872 ((x6015 Int)) Int (ite x469 (x7248 x6015) (x1052 x6015)))
(define-fun x6967 ((x6015 Int)) Int (ite x2553 (ite x6502 (x7248 x6015) (x1872 x6015)) (x7248 x6015)))
(define-fun x674 ((x6015 Int)) Int (ite x3566 (x7248 x6015) (ite x5289 (x7248 x6015) (ite x15 (x7248 x6015) (ite x5454 (x7248 x6015) (ite x6947 (x7248 x6015) (ite x7876 (x7248 x6015) (ite x5374 (x7248 x6015) (ite x5160 (x7248 x6015) (ite x7894 (x7248 x6015) (ite x696 (x7248 x6015) (ite x2413 (x7248 x6015) (ite x4421 (x7248 x6015) (ite x6178 (x7248 x6015) (ite x233 (x7248 x6015) (ite x6335 (x7248 x6015) (ite x771 (x7248 x6015) (ite x7489 (x7248 x6015) (ite x4849 (x7248 x6015) (ite x1093 (x7248 x6015) (ite x6894 (x7248 x6015) (ite x1867 (x7248 x6015) (ite x4032 (ite x1100 (x6967 x6015) (x7248 x6015)) (x7248 x6015))))))))))))))))))))))))
(define-fun x5733 ((x6015 Int)) Int (ite x7454 (ite x5700 (x7248 x6015) (x674 x6015)) (ite x4728 (x7248 x6015) (ite x5700 (x7248 x6015) (x674 x6015)))))
(define-fun x7870 ((x6015 Int)) Int (x2047 x6015))
(define-fun x6953 ((x6015 Int)) Int (ite x6029 (ite x3735 (x2903 x6015) (x5963 x6015)) (ite x3126 (ite x3735 (x2903 x6015) (x5963 x6015)) (x5963 x6015))))
(define-fun x4203 ((x6015 Int)) Int (ite x2314 (x5963 x6015) (ite x7025 (x5963 x6015) (x6953 x6015))))
(define-fun x8149 ((x6015 Int)) Int (ite x2627 (ite x3056 (x5963 x6015) (x4203 x6015)) (x5963 x6015)))
(define-fun x1002 ((x6015 Int)) Int (ite x4965 (x6020 x6015) (x5963 x6015)))
(define-fun x5424 ((x6015 Int)) Int (ite x2553 (ite x6502 (x8149 x6015) (x5963 x6015)) (ite x1854 (x5963 x6015) (x1002 x6015))))
(define-fun x6319 ((x6015 Int)) Int (ite x3566 (x5963 x6015) (ite x5289 (x5963 x6015) (ite x15 (x5963 x6015) (ite x5454 (x5963 x6015) (ite x6947 (x5963 x6015) (ite x7876 (x5963 x6015) (ite x5374 (x5963 x6015) (ite x5160 (x5963 x6015) (ite x7894 (x5963 x6015) (ite x696 (x5963 x6015) (ite x2413 (x5963 x6015) (ite x4421 (x5963 x6015) (ite x6178 (x5963 x6015) (ite x233 (x5963 x6015) (ite x6335 (x5963 x6015) (ite x771 (x5963 x6015) (ite x7489 (x5963 x6015) (ite x4849 (x5963 x6015) (ite x1093 (x5963 x6015) (ite x6894 (x5963 x6015) (ite x1867 (x5963 x6015) (ite x4032 (ite x1100 (x5424 x6015) (x5963 x6015)) (x5963 x6015))))))))))))))))))))))))
(define-fun x7511 ((x6015 Int)) Int (ite x7454 (ite x5700 (x5963 x6015) (x6319 x6015)) (ite x4728 (x5963 x6015) (ite x5700 (x5963 x6015) (x6319 x6015)))))
(define-fun x6625 ((x6015 Int)) Int (ite x6029 (ite x3735 (x3959 x6015) (x1889 x6015)) (ite x3126 (ite x3735 (x3959 x6015) (x1889 x6015)) (x1889 x6015))))
(define-fun x3523 ((x6015 Int)) Int (ite x2314 (x1889 x6015) (ite x7025 (x1889 x6015) (x6625 x6015))))
(define-fun x5517 ((x6015 Int)) Int (ite x2627 (ite x3056 (x1889 x6015) (x3523 x6015)) (x1889 x6015)))
(define-fun x4027 ((x6015 Int)) Int (ite x4965 (x311 x6015) (x1889 x6015)))
(define-fun x2765 ((x6015 Int)) Int (ite x2553 (ite x6502 (x5517 x6015) (x1889 x6015)) (ite x1854 (x1889 x6015) (x4027 x6015))))
(define-fun x5237 ((x6015 Int)) Int (ite x3566 (x1889 x6015) (ite x5289 (x1889 x6015) (ite x15 (x1889 x6015) (ite x5454 (x1889 x6015) (ite x6947 (x1889 x6015) (ite x7876 (x1889 x6015) (ite x5374 (x1889 x6015) (ite x5160 (x1889 x6015) (ite x7894 (x1889 x6015) (ite x696 (x1889 x6015) (ite x2413 (x1889 x6015) (ite x4421 (x1889 x6015) (ite x6178 (x1889 x6015) (ite x233 (x1889 x6015) (ite x6335 (x1889 x6015) (ite x771 (x1889 x6015) (ite x7489 (x1889 x6015) (ite x4849 (x1889 x6015) (ite x1093 (x1889 x6015) (ite x6894 (x1889 x6015) (ite x1867 (x1889 x6015) (ite x4032 (ite x1100 (x2765 x6015) (x1889 x6015)) (x1889 x6015))))))))))))))))))))))))
(define-fun x3999 ((x6015 Int)) Int (ite x7454 (ite x5700 (x1889 x6015) (x5237 x6015)) (ite x4728 (x1889 x6015) (ite x5700 (x1889 x6015) (x5237 x6015)))))
(define-fun x8372 ((x6015 Int)) Int (ite x6029 (ite x3735 (x4168 x6015) (x4926 x6015)) (ite x3126 (ite x3735 (x4168 x6015) (x4926 x6015)) (x4926 x6015))))
(define-fun x6670 ((x6015 Int)) Int (ite x2314 (x4926 x6015) (ite x7025 (x4926 x6015) (x8372 x6015))))
(define-fun x7732 ((x6015 Int)) Int (ite x2627 (ite x3056 (x4926 x6015) (x6670 x6015)) (x4926 x6015)))
(define-fun x4253 ((x6015 Int)) Int (ite x4965 (x8022 x6015) (x4926 x6015)))
(define-fun x2259 ((x6015 Int)) Int (ite x2553 (ite x6502 (x7732 x6015) (x4926 x6015)) (ite x1854 (x4926 x6015) (x4253 x6015))))
(define-fun x3663 ((x6015 Int)) Int (ite x3566 (x4926 x6015) (ite x5289 (x4926 x6015) (ite x15 (x4926 x6015) (ite x5454 (x4926 x6015) (ite x6947 (x4926 x6015) (ite x7876 (x4926 x6015) (ite x5374 (x4926 x6015) (ite x5160 (x4926 x6015) (ite x7894 (x4926 x6015) (ite x696 (x4926 x6015) (ite x2413 (x4926 x6015) (ite x4421 (x4926 x6015) (ite x6178 (x4926 x6015) (ite x233 (x4926 x6015) (ite x6335 (x4926 x6015) (ite x771 (x4926 x6015) (ite x7489 (x4926 x6015) (ite x4849 (x4926 x6015) (ite x1093 (x4926 x6015) (ite x6894 (x4926 x6015) (ite x1867 (x4926 x6015) (ite x4032 (ite x1100 (x2259 x6015) (x4926 x6015)) (x4926 x6015))))))))))))))))))))))))
(define-fun x763 ((x6015 Int)) Int (ite x7454 (ite x5700 (x4926 x6015) (x3663 x6015)) (ite x4728 (x4926 x6015) (ite x5700 (x4926 x6015) (x3663 x6015)))))
(define-fun x2899 ((x6015 Int)) Int (ite (= x1579 x6015) x3918 (x6 x6015)))
(define-fun x6175 ((x6015 Int)) Int (ite (= x4368 x6015) x6390 (x2899 x6015)))
(define-fun x562 ((x6015 Int)) Int (ite (= x6015 x1579) x2371 (x6175 x6015)))
(define-fun x6450 ((x6015 Int)) Int (ite (= x6015 x5227) x5125 (x562 x6015)))
(define-fun x5330 ((x6015 Int)) Int (ite x3735 (x5137 x6015) (x6450 x6015)))
(define-fun x4581 ((x6015 Int)) Int (ite (= x5227 x6015) x3373 (x5330 x6015)))
(define-fun x7438 ((x6015 Int)) Int (ite (= x6015 x1579) x1037 (x4581 x6015)))
(define-fun x5179 ((x6015 Int)) Int (ite (= x3521 x6015) x644 (x6175 x6015)))
(define-fun x2842 ((x6015 Int)) Int (ite (= x621 x6015) x769 (x5179 x6015)))
(define-fun x1623 ((x6015 Int)) Int (ite (= x6015 x1579) x2794 (x2842 x6015)))
(define-fun x7247 ((x6015 Int)) Int (ite (= x5853 x6015) x4906 (x1623 x6015)))
(define-fun x7850 ((x6015 Int)) Int (ite (= x6015 x5853) x6600 (x7247 x6015)))
(define-fun x5627 ((x6015 Int)) Int (ite (= x1579 x6015) x8101 (x7850 x6015)))
(define-fun x4436 ((x6015 Int)) Int (ite x5371 (x2842 x6015) (ite x7704 (x7247 x6015) (ite x521 (x5627 x6015) (x2842 x6015)))))
(define-fun x5840 ((x6015 Int)) Int (ite (= x621 x6015) x5980 (x4436 x6015)))
(define-fun x3154 ((x6015 Int)) Int (ite (= x3521 x6015) x5583 (x5840 x6015)))
(define-fun x1460 ((x6015 Int)) Int (ite (= x1579 x6015) x4294 (x6175 x6015)))
(define-fun x4269 ((x6015 Int)) Int (ite (= x6015 x5830) x3707 (x1460 x6015)))
(define-fun x6362 ((x6015 Int)) Int (ite (= x5830 x6015) x1935 (x4269 x6015)))
(define-fun x7000 ((x6015 Int)) Int (ite (= x6015 x1579) x1614 (x6362 x6015)))
(define-fun x8273 ((x6015 Int)) Int (ite x5700 (x6175 x6015) (ite x3566 (x6175 x6015) (ite x5289 (x6175 x6015) (ite x15 (x6175 x6015) (ite x5454 (x6175 x6015) (ite x6947 (x6175 x6015) (ite x7876 (x6175 x6015) (ite x5374 (x6175 x6015) (ite x5160 (x6175 x6015) (ite x7894 (x6175 x6015) (ite x696 (x6175 x6015) (ite x2413 (x6175 x6015) (ite x4421 (x6175 x6015) (ite x6178 (x6175 x6015) (ite x233 (x6175 x6015) (ite x6335 (x6175 x6015) (ite x771 (x6175 x6015) (ite x7489 (x6175 x6015) (ite x4849 (x6175 x6015) (ite x1093 (x6175 x6015) (ite x6894 (x6175 x6015) (ite x1867 (x6175 x6015) (ite x4032 (ite x1100 (ite x2553 (ite x6502 (ite x2627 (ite x3056 (x6175 x6015) (ite x2314 (x6175 x6015) (ite x7025 (x6175 x6015) (ite x6029 (x5330 x6015) (ite x3126 (x7438 x6015) (x6175 x6015)))))) (ite x6843 (x4436 x6015) (ite x8244 (x3154 x6015) (x6175 x6015)))) (ite x469 (x6175 x6015) (ite x7292 (x6175 x6015) (ite x7024 (x4269 x6015) (ite x7735 (x7000 x6015) (x6175 x6015)))))) (ite x1854 (x6175 x6015) (ite x4965 (x2324 x6015) (x6175 x6015)))) (x6175 x6015)) (x6175 x6015)))))))))))))))))))))))))
(define-fun x8109 ((x6015 Int)) Int (ite (= x6015 x4368) x2218 (x8273 x6015)))
(define-fun x5868 ((x6015 Int)) Int (ite (= x6015 x1579) x4342 (x8109 x6015)))
(define-fun x5769 ((x6015 Int)) Int (ite x7454 (x8273 x6015) (ite x4728 (x6 x6015) (x5868 x6015))))
(define-fun x4454 ((x6015 Int)) Int (ite x5448 (x3401 x6015) (ite x3516 (x5616 x6015) (x4361 x6015))))
(define-fun x5721 ((x6015 Int)) Int (ite (= x6015 160) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x4454 x6015)))
(define-fun x7814 ((x6015 Int)) Int (ite (= 164 x6015) x1579 (x5721 x6015)))
(define-fun x4081 ((x6015 Int)) Int (ite (= 160 x6015) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x7814 x6015)))
(define-fun x7 ((x6015 Int)) Int (ite (= 164 x6015) x2926 (x4081 x6015)))
(define-fun x225 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x8183 x6015)))
(define-fun x6402 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 36)) (x225 x6015) (x920 x6015)))
(define-fun x6559 ((x6015 Int)) Int (ite (= x6015 4) 17 (x1212 x6015)))
(define-fun x397 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 36 x6015)) (x6559 x6015) (x920 x6015)))
(define-fun x6391 ((x6015 Int)) Int (ite (= x6015 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x3377 x6015)))
(define-fun x2539 ((x6015 Int)) Int (ite (= x6015 132) x5242 (x6391 x6015)))
(define-fun x2719 ((x6015 Int)) Int (ite (= 164 x6015) x3283 (x2539 x6015)))
(define-fun x8444 ((x6015 Int)) Int (ite (= x6015 196) x1484 (x2719 x6015)))
(define-fun x4174 ((x6015 Int)) Int (ite (= 228 x6015) x2089 (x8444 x6015)))
(define-fun x5463 ((x6015 Int)) Int (ite (= 128 x6015) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2054 x6015)))
(define-fun x1474 ((x6015 Int)) Int (ite (and (> 4 x6015) (>= x6015 0)) (x5463 (+ x6015 128)) (x186 x6015)))
(define-fun x4700 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2054 x6015)))
(define-fun x4196 ((x6015 Int)) Int (ite (= x6015 132) 32 (x4700 x6015)))
(define-fun x2284 ((x6015 Int)) Int (ite (= x6015 164) 12 (x4196 x6015)))
(define-fun x7366 ((x6015 Int)) Int (ite (= 196 x6015) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2284 x6015)))
(define-fun x1328 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 100 x6015)) (x7366 (+ 128 x6015)) (x186 x6015)))
(define-fun x3631 ((x6015 Int)) Int (ite (= x6015 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x3377 x6015)))
(define-fun x81 ((x6015 Int)) Int (ite (= x6015 132) x3533 (x3631 x6015)))
(define-fun x3530 ((x6015 Int)) Int (ite (= x6015 164) 128 (x81 x6015)))
(define-fun x7175 ((x6015 Int)) Int (ite (= x6015 260) x364 (x3530 x6015)))
(define-fun x3562 ((x6015 Int)) Int (ite (= x6015 292) x959 (x7175 x6015)))
(define-fun x503 ((x6015 Int)) Int (ite (= 292 x6015) x600 (x7175 x6015)))
(define-fun x3614 ((x6015 Int)) Int (ite (= 128 x6015) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x3377 x6015)))
(define-fun x1778 ((x6015 Int)) Int (ite (= x6015 132) x7989 (x3614 x6015)))
(define-fun x7238 ((x6015 Int)) Int (ite (= 164 x6015) 128 (x1778 x6015)))
(define-fun x6902 ((x6015 Int)) Int (ite (= 260 x6015) x6477 (x7238 x6015)))
(define-fun x3004 ((x6015 Int)) Int (ite (= 292 x6015) x5457 (x6902 x6015)))
(define-fun x975 ((x6015 Int)) Int (ite (= x6015 292) x1032 (x6902 x6015)))
(define-fun x65 ((x6015 Int)) Int (ite (= 128 x6015) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x3377 x6015)))
(define-fun x760 ((x6015 Int)) Int (ite (= 132 x6015) x5351 (x65 x6015)))
(define-fun x7429 ((x6015 Int)) Int (ite (= x6015 164) x2868 (x760 x6015)))
(define-fun x5794 ((x6015 Int)) Int (ite (= x6015 4) 33 (x4688 x6015)))
(define-fun x5203 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x5794 x6015) (x5638 x6015)))
(define-fun x6484 ((x6015 Int)) Int (ite (= x7924 x6015) 2 (x5754 x6015)))
(define-fun x540 ((x6015 Int)) Int (ite (= x6015 x7367) x2868 (x5733 x6015)))
(define-fun x2190 ((x6015 Int)) Int (ite (= x6015 128) x2868 (x1894 x6015)))
(define-fun x2565 ((x6015 Int)) Int (ite (= x6015 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2190 x6015)))
(define-fun x2178 ((x6015 Int)) Int (ite (= x6015 132) x5351 (x2565 x6015)))
(define-fun x8015 ((x6015 Int)) Int (ite (= x6015 164) 0 (x2178 x6015)))
(define-fun x4731 ((x6015 Int)) Int (ite (= 196 x6015) 0 (x8015 x6015)))
(define-fun x643 ((x6015 Int)) Int (ite (= x6015 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4688 x6015)))
(define-fun x6356 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x643 (+ x6015 128)) (x5638 x6015)))
(define-fun x3706 ((x6015 Int)) Int (ite (= 128 x6015) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x4688 x6015)))
(define-fun x3870 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x3706 (+ x6015 128)) (x5638 x6015)))
(define-fun x5451 ((x6015 Int)) Int 0)
(define-fun x8553 ((x6015 Int)) Int (ite (= 128 x6015) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x3377 x6015)))
(define-fun x4903 ((x6015 Int)) Int (ite (= 132 x6015) x4706 (x8553 x6015)))
(define-fun x413 ((x6015 Int)) Int (ite (= x6015 164) 128 (x4903 x6015)))
(define-fun x167 ((x6015 Int)) Int (ite (= 260 x6015) x4286 (x413 x6015)))
(define-fun x3697 ((x6015 Int)) Int (ite (= 292 x6015) x7820 (x167 x6015)))
(define-fun x6382 ((x6015 Int)) Int (ite (= x6015 292) x8196 (x167 x6015)))
(define-fun x6430 ((x6015 Int)) Int (ite (= x6015 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x3377 x6015)))
(define-fun x4414 ((x6015 Int)) Int (ite (= x6015 132) x4120 (x6430 x6015)))
(define-fun x3803 ((x6015 Int)) Int (ite (= x6015 164) x2692 (x4414 x6015)))
(define-fun x1665 ((x6015 Int)) Int (ite (= 196 x6015) x6142 (x3803 x6015)))
(define-fun x5368 ((x6015 Int)) Int (ite (= x6015 x3521) x1780 (x5769 x6015)))
(define-fun x6736 ((x6015 Int)) Int (ite (= x685 x6015) x7902 (x5368 x6015)))
(define-fun x6913 ((x6015 Int)) Int 0)
(define-fun x5060 ((x6015 Int)) Int (ite (= x6015 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x3377 x6015)))
(define-fun x1559 ((x6015 Int)) Int (ite (= 132 x6015) x4404 (x5060 x6015)))
(define-fun x7401 ((x6015 Int)) Int (ite (= x1579 x6015) x8264 (x5769 x6015)))
(define-fun x2476 ((x6015 Int)) Int (ite (= x6015 x4404) x2043 (x7401 x6015)))
(define-fun x8194 ((x6015 Int)) Int 0)
(define-fun x7163 ((x6015 Int)) Int (ite (= 128 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6333 x6015)))
(define-fun x5215 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x7163 x6015)))
(define-fun x1561 ((x6015 Int)) Int (ite (= 164 x6015) 12 (x5215 x6015)))
(define-fun x378 ((x6015 Int)) Int (ite (= 196 x6015) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x1561 x6015)))
(define-fun x55 ((x6015 Int)) Int (ite (and (< x6015 100) (<= 0 x6015)) (x378 (+ 128 x6015)) (x6247 x6015)))
(define-fun x5039 ((x6015 Int)) Int (ite (= x6015 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x3377 x6015)))
(define-fun x2088 ((x6015 Int)) Int (ite (= x6015 132) x7443 (x5039 x6015)))
(define-fun x3474 ((x6015 Int)) Int (ite (= 128 x6015) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3660 x6015)))
(define-fun x3464 ((x6015 Int)) Int (ite (and (> 4 x6015) (>= x6015 0)) (x3474 (+ 128 x6015)) (x3672 x6015)))
(define-fun x7715 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3660 x6015)))
(define-fun x8083 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x7715 x6015)))
(define-fun x891 ((x6015 Int)) Int (ite (= 164 x6015) 12 (x8083 x6015)))
(define-fun x5962 ((x6015 Int)) Int (ite (= 196 x6015) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x891 x6015)))
(define-fun x976 ((x6015 Int)) Int (ite (and (> 100 x6015) (>= x6015 0)) (x5962 (+ x6015 128)) (x3672 x6015)))
(define-fun x3944 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x8183 x6015)))
(define-fun x4107 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x3944 x6015) (x920 x6015)))
(define-fun x4922 ((x6015 Int)) Int (ite (= 128 x6015) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x8183 x6015)))
(define-fun x3951 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x4922 (+ x6015 128)) (x920 x6015)))
(define-fun x6539 ((x6015 Int)) Int (ite x142 (x920 x6015) (ite x6299 (x4107 x6015) (ite x5518 (x3951 x6015) (x6402 x6015)))))
(define-fun x4232 ((x6015 Int)) Int (ite (= x6015 0) x1842 (x920 x6015)))
(define-fun x6730 ((x6015 Int)) Int (ite x7442 (x6539 x6015) (x4232 x6015)))
(define-fun x2172 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1342 x6015)))
(define-fun x5592 ((x6015 Int)) Int (ite (= x6015 132) 32 (x2172 x6015)))
(define-fun x7328 ((x6015 Int)) Int (ite (= 164 x6015) 38 (x5592 x6015)))
(define-fun x2099 ((x6015 Int)) Int (ite (= x6015 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x7328 x6015)))
(define-fun x6006 ((x6015 Int)) Int (ite (= 228 x6015) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x2099 x6015)))
(define-fun x6985 ((x6015 Int)) Int (ite (and (> 132 x6015) (<= 0 x6015)) (x6006 (+ x6015 128)) (x8021 x6015)))
(define-fun x6360 ((x6015 Int)) Int (ite x7893 (x8021 x6015) (ite x2569 (x8021 x6015) (ite x1595 (x8021 x6015) (ite x3830 (x8021 x6015) (x6985 x6015))))))
(define-fun x4529 ((x6015 Int)) Int (ite (and (> x108 x6015) (<= 0 x6015)) (x6360 x6015) (x1212 x6015)))
(define-fun x3710 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x108)) (x4529 x6015) (x920 x6015)))
(define-fun x4670 ((x6015 Int)) Int (ite (= x6015 4) 17 (x1212 x6015)))
(define-fun x4049 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 36 x6015)) (x4670 x6015) (x920 x6015)))
(define-fun x2325 ((x6015 Int)) Int (ite (= x6015 4) 17 (x1212 x6015)))
(define-fun x1293 ((x6015 Int)) Int (ite (and (< x6015 36) (<= 0 x6015)) (x2325 x6015) (x920 x6015)))
(define-fun x687 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x1212 x6015)))
(define-fun x2580 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x687 x6015) (x920 x6015)))
(define-fun x4130 ((x6015 Int)) Int (ite (= x6015 4) 34 (x1212 x6015)))
(define-fun x4099 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x4130 x6015) (x920 x6015)))
(define-fun x7548 ((x6015 Int)) Int (ite (= x6015 4) 34 (x1212 x6015)))
(define-fun x6005 ((x6015 Int)) Int (ite (and (< x6015 36) (>= x6015 0)) (x7548 x6015) (x920 x6015)))
(define-fun x4128 ((x6015 Int)) Int (ite (= 0 x6015) x3120 (x920 x6015)))
(define-fun x6759 ((x6015 Int)) Int (ite (= x6015 4) 17 (x1212 x6015)))
(define-fun x4930 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 36 x6015)) (x6759 x6015) (x920 x6015)))
(define-fun x3868 ((x6015 Int)) Int (ite x897 (x3464 x6015) (x976 x6015)))
(define-fun x1244 ((x6015 Int)) Int (ite x7341 (x3868 x6015) (x3672 x6015)))
(define-fun x3938 ((x6015 Int)) Int (ite (and (< x6015 x6603) (<= 0 x6015)) (x1244 x6015) (x1212 x6015)))
(define-fun x5416 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x6603)) (x3938 x6015) (x920 x6015)))
(define-fun x3296 ((x6015 Int)) Int (ite (= x6015 x5029) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x6333 x6015)))
(define-fun x7950 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 4 x6015)) (x3296 (+ x5029 x6015)) (x6247 x6015)))
(define-fun x8307 ((x6015 Int)) Int (ite x3495 (x7950 x6015) (x55 x6015)))
(define-fun x2328 ((x6015 Int)) Int (ite x6834 (x8307 x6015) (x6247 x6015)))
(define-fun x2578 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> x7214 x6015)) (x2328 x6015) (x1212 x6015)))
(define-fun x2401 ((x6015 Int)) Int (ite (and (> x7214 x6015) (<= 0 x6015)) (x2578 x6015) (x920 x6015)))
(define-fun x5707 ((x6015 Int)) Int (ite (= 4 x6015) 34 (x4732 x6015)))
(define-fun x8569 ((x6015 Int)) Int (ite (and (> 36 x6015) (>= x6015 0)) (x5707 x6015) (x6770 x6015)))
(define-fun x1622 ((x6015 Int)) Int (ite (= x6015 x5348) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4732 x6015)))
(define-fun x7253 ((x6015 Int)) Int (ite (= x1654 x6015) 32 (x1622 x6015)))
(define-fun x6713 ((x6015 Int)) Int (ite (= x7099 x6015) 32 (x7253 x6015)))
(define-fun x2729 ((x6015 Int)) Int (ite (= x6015 x179) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x6713 x6015)))
(define-fun x7132 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 100 x6015)) (x2729 (+ x5348 x6015)) (x6770 x6015)))
(define-fun x5999 ((x6015 Int)) Int (ite (= x6015 x5348) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4732 x6015)))
(define-fun x6201 ((x6015 Int)) Int (ite (= x6015 x1895) 32 (x5999 x6015)))
(define-fun x1677 ((x6015 Int)) Int (ite (= x3679 x6015) 48 (x6201 x6015)))
(define-fun x5285 ((x6015 Int)) Int (ite (= x2517 x6015) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x1677 x6015)))
(define-fun x2661 ((x6015 Int)) Int (ite (= x3402 x6015) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x5285 x6015)))
(define-fun x5298 ((x6015 Int)) Int (ite (and (< x6015 132) (<= 0 x6015)) (x2661 (+ x5348 x6015)) (x6770 x6015)))
(define-fun x2215 ((x6015 Int)) Int (ite (= 0 x6015) x3514 (x4391 x6015)))
(define-fun x3747 ((x6015 Int)) Int (ite (= x6015 32) x868 (x2215 x6015)))
(define-fun x4815 ((x6015 Int)) Int (ite x7823 (x4391 x6015) (x3747 x6015)))
(define-fun x4124 ((x6015 Int)) Int (ite (and (< x6015 x5156) (<= 0 x6015)) (x4815 x6015) (x4732 x6015)))
(define-fun x2430 ((x6015 Int)) Int (ite (and (< x6015 x5156) (>= x6015 0)) (x4124 x6015) (x6770 x6015)))
(define-fun x6160 ((x6015 Int)) Int (ite (= 128 x6015) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4732 x6015)))
(define-fun x6338 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x6160 (+ 128 x6015)) (x6770 x6015)))
(define-fun x792 ((x6015 Int)) Int (ite (= x6015 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4732 x6015)))
(define-fun x673 ((x6015 Int)) Int (ite (and (< x6015 4) (>= x6015 0)) (x792 (+ 128 x6015)) (x6770 x6015)))
(define-fun x6990 ((x6015 Int)) Int (ite (= x6015 4) 33 (x4732 x6015)))
(define-fun x4083 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x6990 x6015) (x6770 x6015)))
(define-fun x5314 ((x6015 Int)) Int (ite (= x6015 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x4732 x6015)))
(define-fun x623 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 4)) (x5314 (+ x6015 128)) (x6770 x6015)))
(define-fun x2204 ((x6015 Int)) Int (ite x6761 (x8569 x6015) (ite x7092 (x7132 x6015) (ite x6771 (x6770 x6015) (ite x2611 (x6770 x6015) (ite x6271 (x5298 x6015) (ite x8473 (x6770 x6015) (ite x2427 (x2430 x6015) (ite x7742 (x6338 x6015) (ite x8102 (x673 x6015) (ite x7201 (x4083 x6015) (x623 x6015))))))))))))
(define-fun x5608 ((x6015 Int)) Int (ite x6212 (x2204 x6015) (x6770 x6015)))
(define-fun x3974 ((x6015 Int)) Int (ite x5153 (x5608 x6015) (ite x8036 (x5608 x6015) (x6913 x6015))))
(define-fun x6373 ((x6015 Int)) Int (ite (and (< x6015 x5144) (>= x6015 0)) (x3974 x6015) (x1212 x6015)))
(define-fun x1785 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> x5144 x6015)) (x6373 x6015) (x920 x6015)))
(define-fun x6416 ((x6015 Int)) Int (ite x2768 (ite x3413 (x167 x6015) (x6382 x6015)) (x3697 x6015)))
(define-fun x3613 ((x6015 Int)) Int (ite (= x6015 196) x4889 (x6416 x6015)))
(define-fun x6387 ((x6015 Int)) Int (ite (= x6015 228) x7534 (x3613 x6015)))
(define-fun x1374 ((x6015 Int)) Int (ite (= x6015 x6831) x7728 (x6387 x6015)))
(define-fun x6788 ((x6015 Int)) Int (ite (= x6015 x3490) x1657 (x1374 x6015)))
(define-fun x6821 ((x6015 Int)) Int (ite (= x3490 x6015) x5465 (x1374 x6015)))
(define-fun x8235 ((x6015 Int)) Int (ite x5855 (ite x2093 (x1374 x6015) (x6788 x6015)) (x6821 x6015)))
(define-fun x2455 ((x6015 Int)) Int (ite (and (< x6015 x4867) (>= x6015 164)) (x8235 (+ 128 x6015)) (x2912 x6015)))
(define-fun x5352 ((x6015 Int)) Int (ite (and (<= 128 x6015) (< x6015 (+ 128 x565))) (x2455 (+ 36 x6015)) (x4707 x6015)))
(define-fun x6628 ((x6015 Int)) Int (ite (= x1394 x6015) 0 (x5352 x6015)))
(define-fun x5595 ((x6015 Int)) Int (ite (= x6015 x4837) x2316 (x6628 x6015)))
(define-fun x3772 ((x6015 Int)) Int (ite (and (>= x6015 128) (< x6015 (+ x171 128))) (x2455 (- (+ x2530 x6015) 128)) (x5595 x6015)))
(define-fun x8503 ((x6015 Int)) Int (ite (= x6015 x18) 0 (x3772 x6015)))
(define-fun x8306 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x8503 x6015)))
(define-fun x7567 ((x6015 Int)) Int (ite (= x6015 132) 32 (x8306 x6015)))
(define-fun x2582 ((x6015 Int)) Int (ite (= x6015 164) 33 (x7567 x6015)))
(define-fun x4511 ((x6015 Int)) Int (ite (= 196 x6015) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x2582 x6015)))
(define-fun x4857 ((x6015 Int)) Int (ite (= 228 x6015) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x4511 x6015)))
(define-fun x2403 ((x6015 Int)) Int (ite (and (> 132 x6015) (>= x6015 0)) (x4857 (+ 128 x6015)) (x6933 x6015)))
(define-fun x74 ((x6015 Int)) Int (ite (= 128 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5595 x6015)))
(define-fun x6773 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x74 x6015)))
(define-fun x7086 ((x6015 Int)) Int (ite (= 164 x6015) 35 (x6773 x6015)))
(define-fun x7512 ((x6015 Int)) Int (ite (= x6015 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x7086 x6015)))
(define-fun x6746 ((x6015 Int)) Int (ite (= x6015 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x7512 x6015)))
(define-fun x3370 ((x6015 Int)) Int (ite (and (> 132 x6015) (<= 0 x6015)) (x6746 (+ x6015 128)) (x6933 x6015)))
(define-fun x4908 ((x6015 Int)) Int (ite x2200 (x6933 x6015) (ite x3145 (x6933 x6015) (ite x5607 (x6933 x6015) (ite x6298 (x6933 x6015) (ite x6785 (x2403 x6015) (x3370 x6015)))))))
(define-fun x4738 ((x6015 Int)) Int 0)
(define-fun x2743 ((x6015 Int)) Int (ite x4746 (x4908 x6015) (x4738 x6015)))
(define-fun x344 ((x6015 Int)) Int (ite (and (< x6015 x7475) (<= 0 x6015)) (x2743 x6015) (x1212 x6015)))
(define-fun x132 ((x6015 Int)) Int (ite (and (< x6015 x7475) (<= 0 x6015)) (x344 x6015) (x920 x6015)))
(define-fun x6320 ((x6015 Int)) Int (ite x3841 (x5638 x6015) (ite x4701 (x6356 x6015) (ite x4356 (x5203 x6015) (x3870 x6015)))))
(define-fun x6355 ((x6015 Int)) Int (ite x4160 (x6320 x6015) (x5638 x6015)))
(define-fun x4918 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x7657)) (x6355 x6015) (x1212 x6015)))
(define-fun x4503 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x7657)) (x4918 x6015) (x920 x6015)))
(define-fun x2256 ((x6015 Int)) Int (ite (= 4 x6015) 34 (x2267 x6015)))
(define-fun x7319 ((x6015 Int)) Int (ite (and (< x6015 36) (>= x6015 0)) (x2256 x6015) (x6296 x6015)))
(define-fun x8124 ((x6015 Int)) Int (ite (= 128 x6015) x4680 (x2267 x6015)))
(define-fun x8114 ((x6015 Int)) Int (ite (= 160 x6015) x454 (x8124 x6015)))
(define-fun x1701 ((x6015 Int)) Int (ite (= x6015 192) x2938 (x8114 x6015)))
(define-fun x3155 ((x6015 Int)) Int (ite (= 160 x6015) x2895 (x8124 x6015)))
(define-fun x165 ((x6015 Int)) Int (ite x6282 (x8124 x6015) (ite x6401 (ite x5025 (x8114 x6015) (x1701 x6015)) (x3155 x6015))))
(define-fun x4071 ((x6015 Int)) Int (ite x3193 (ite x6610 (x7175 x6015) (x503 x6015)) (x3562 x6015)))
(define-fun x1937 ((x6015 Int)) Int (ite (= 196 x6015) x26 (x4071 x6015)))
(define-fun x5811 ((x6015 Int)) Int (ite (= x6015 228) x4552 (x1937 x6015)))
(define-fun x1521 ((x6015 Int)) Int (ite (= x8276 x6015) x804 (x5811 x6015)))
(define-fun x4586 ((x6015 Int)) Int (ite (= x6015 x3842) x523 (x1521 x6015)))
(define-fun x336 ((x6015 Int)) Int (ite (= x6015 x3842) x3736 (x1521 x6015)))
(define-fun x3350 ((x6015 Int)) Int (ite x5490 (ite x4492 (x1521 x6015) (x4586 x6015)) (x336 x6015)))
(define-fun x2130 ((x6015 Int)) Int (ite (and (> x4183 x6015) (<= 164 x6015)) (x3350 (+ x6015 128)) (x7544 x6015)))
(define-fun x6861 ((x6015 Int)) Int (ite (and (< x6015 (+ x5569 x4598)) (<= x5569 x6015)) (x2130 (- (+ x6015 164) x5569)) (x165 x6015)))
(define-fun x7688 ((x6015 Int)) Int (ite (= x5325 x6015) 0 (x6861 x6015)))
(define-fun x5319 ((x6015 Int)) Int (ite x4512 (x7688 x6015) (x165 x6015)))
(define-fun x6173 ((x6015 Int)) Int (ite (= x5569 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5319 x6015)))
(define-fun x2486 ((x6015 Int)) Int (ite (= x6015 x1809) 32 (x6173 x6015)))
(define-fun x1628 ((x6015 Int)) Int (ite (= x6015 x5791) 38 (x2486 x6015)))
(define-fun x2762 ((x6015 Int)) Int (ite (= x6015 x824) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x1628 x6015)))
(define-fun x6880 ((x6015 Int)) Int (ite (= x6015 x6581) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x2762 x6015)))
(define-fun x594 ((x6015 Int)) Int (ite (and (> 132 x6015) (>= x6015 0)) (x6880 (+ x5569 x6015)) (x6296 x6015)))
(define-fun x1004 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2267 x6015)))
(define-fun x8434 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x1004 x6015)))
(define-fun x8072 ((x6015 Int)) Int (ite (= 164 x6015) 30 (x8434 x6015)))
(define-fun x2882 ((x6015 Int)) Int (ite (= 196 x6015) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x8072 x6015)))
(define-fun x3338 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 100)) (x2882 (+ 128 x6015)) (x6296 x6015)))
(define-fun x4793 ((x6015 Int)) Int (ite x3705 (x7319 x6015) (ite x7170 (x6296 x6015) (ite x7854 (x6296 x6015) (ite x2733 (x6296 x6015) (ite x3665 (x594 x6015) (x3338 x6015)))))))
(define-fun x789 ((x6015 Int)) Int (ite x2785 (x4793 x6015) (x6296 x6015)))
(define-fun x3744 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> x7525 x6015)) (x789 x6015) (x1212 x6015)))
(define-fun x4338 ((x6015 Int)) Int (ite (and (>= x6015 0) (> x7525 x6015)) (x3744 x6015) (x920 x6015)))
(define-fun x7093 ((x6015 Int)) Int (ite x5621 (x1474 x6015) (x1328 x6015)))
(define-fun x47 ((x6015 Int)) Int (ite x3508 (x7093 x6015) (x186 x6015)))
(define-fun x3385 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x7846)) (x47 x6015) (x1212 x6015)))
(define-fun x8515 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x7846)) (x3385 x6015) (x920 x6015)))
(define-fun x1003 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x1212 x6015)))
(define-fun x2838 ((x6015 Int)) Int (ite (and (> 36 x6015) (>= x6015 0)) (x1003 x6015) (x920 x6015)))
(define-fun x5078 ((x6015 Int)) Int (ite x5049 (x3710 x6015) (ite x5859 (x920 x6015) (ite x5983 (x4049 x6015) (ite x7480 (x1293 x6015) (ite x4658 (x2580 x6015) (ite x4434 (x4099 x6015) (ite x6507 (x6005 x6015) (ite x5651 (x4128 x6015) (ite x2867 (x4930 x6015) (ite x785 (x5416 x6015) (ite x7039 (x920 x6015) (ite x2761 (x2401 x6015) (ite x797 (x920 x6015) (ite x128 (x1785 x6015) (ite x3277 (x920 x6015) (ite x4405 (x132 x6015) (ite x2514 (x920 x6015) (ite x5239 (x4503 x6015) (ite x1285 (x920 x6015) (ite x5844 (x920 x6015) (ite x1772 (x4338 x6015) (ite x2590 (x920 x6015) (ite x2408 (x8515 x6015) (ite x2546 (x920 x6015) (ite x4758 (x2838 x6015) (ite x3932 (x397 x6015) (x920 x6015))))))))))))))))))))))))))))
(define-fun x2447 ((x6015 Int)) Int (ite x6995 (x6730 x6015) (x5078 x6015)))
(define-fun x5654 ((x6015 Int)) Int (ite (and (> 192 x6015) (<= 160 x6015)) (x2447 (- x6015 160)) (x4770 x6015)))
(define-fun x7533 ((x6015 Int)) Int (ite (= x1721 x6015) 3 (x5754 x6015)))
(define-fun x982 ((x6015 Int)) Int (ite x5153 (ite x6212 (x5754 x6015) (x7533 x6015)) (ite x8036 (ite x6212 (x5754 x6015) (x7533 x6015)) (x5754 x6015))))
(define-fun x5622 ((x6015 Int)) Int (ite (= x6015 x8111) 3 (x6484 x6015)))
(define-fun x2536 ((x6015 Int)) Int (ite x6047 (x6484 x6015) (x5622 x6015)))
(define-fun x1777 ((x6015 Int)) Int (ite x1142 (ite x4403 (x5754 x6015) (x982 x6015)) (ite x4160 (x5754 x6015) (x2536 x6015))))
(define-fun x2168 ((x6015 Int)) Int (ite x1833 (ite x953 (x1777 x6015) (x5754 x6015)) (x5754 x6015)))
(define-fun x5409 ((x6015 Int)) Int (ite x6995 (x5754 x6015) (ite x5049 (x5754 x6015) (ite x5859 (x5754 x6015) (ite x5983 (x5754 x6015) (ite x7480 (x5754 x6015) (ite x4658 (x5754 x6015) (ite x4434 (x5754 x6015) (ite x6507 (x5754 x6015) (ite x5651 (x2168 x6015) (x5754 x6015)))))))))))
(define-fun x6677 ((x6015 Int)) Int (ite (= x3621 x6015) 0 (x4585 x6015)))
(define-fun x265 ((x6015 Int)) Int (ite (= x5738 x6015) 1 (x5409 x6015)))
(define-fun x2033 ((x6015 Int)) Int (ite (= x6015 x5397) x2140 (x6128 x6015)))
(define-fun x8211 ((x6015 Int)) Int (ite x1142 (x5733 x6015) (ite x4160 (x5733 x6015) (x540 x6015))))
(define-fun x5327 ((x6015 Int)) Int (ite x1833 (ite x953 (x8211 x6015) (x5733 x6015)) (x5733 x6015)))
(define-fun x4686 ((x6015 Int)) Int (ite x6995 (x5733 x6015) (ite x5049 (x5733 x6015) (ite x5859 (x5733 x6015) (ite x5983 (x5733 x6015) (ite x7480 (x5733 x6015) (ite x4658 (x5733 x6015) (ite x4434 (x5733 x6015) (ite x6507 (x5733 x6015) (ite x5651 (x5327 x6015) (x5733 x6015)))))))))))
(define-fun x3076 ((x6015 Int)) Int (ite (= x6015 x5935) 0 (x4686 x6015)))
(define-fun x4446 ((x6015 Int)) Int (ite x5700 (x2629 x6015) (x7607 x6015)))
(define-fun x2922 ((x6015 Int)) Int (ite x5700 (x6251 x6015) (x5809 x6015)))
(define-fun x2877 ((x6015 Int)) Int (ite x5700 (x6878 x6015) (x2224 x6015)))
(define-fun x382 ((x6015 Int)) Int (ite x5700 (x2690 x6015) (x68 x6015)))
(define-fun x6991 ((x6015 Int)) Int (ite x5700 (x3068 x6015) (x5357 x6015)))
(define-fun x8366 ((x6015 Int)) Int (x4585 x6015))
(define-fun x193 ((x6015 Int)) Int (ite x5700 (x8511 x6015) (x7530 x6015)))
(define-fun x8543 ((x6015 Int)) Int (x3511 x6015))
(define-fun x6723 ((x6015 Int)) Int (x1404 x6015))
(define-fun x3335 ((x6015 Int)) Int (ite x5700 (x1406 x6015) (x4447 x6015)))
(define-fun x3042 ((x6015 Int)) Int (ite x5700 (x7324 x6015) (x1666 x6015)))
(define-fun x5318 ((x6015 Int)) Int (x6128 x6015))
(define-fun x873 ((x6015 Int)) Int (x7156 x6015))
(define-fun x7639 ((x6015 Int)) Int (ite x5700 (x2784 x6015) (x2577 x6015)))
(define-fun x3226 ((x6015 Int)) Int (x751 x6015))
(define-fun x1768 ((x6015 Int)) Int (ite x5700 (x2024 x6015) (x4660 x6015)))
(define-fun x3287 ((x6015 Int)) Int (ite x5700 (x370 x6015) (x7139 x6015)))
(define-fun x7483 ((x6015 Int)) Int (ite x5700 (x7248 x6015) (x674 x6015)))
(define-fun x3792 ((x6015 Int)) Int (ite x5700 (x2249 x6015) (x1211 x6015)))
(define-fun x6892 ((x6015 Int)) Int (ite x5700 (x1571 x6015) (x6592 x6015)))
(define-fun x2034 ((x6015 Int)) Int (x2047 x6015))
(define-fun x1359 ((x6015 Int)) Int (ite x5700 (x1889 x6015) (x5237 x6015)))
(define-fun x5865 ((x6015 Int)) Int (ite x5700 (x4926 x6015) (x3663 x6015)))
(define-fun x8287 ((x6015 Int)) Int (ite x5700 (x5963 x6015) (x6319 x6015)))
(define-fun x1447 ((x6015 Int)) Int (x3392 x6015))
(define-fun x7993 ((x6015 Int)) Int (x4457 x6015))
(define-fun x4788 ((x6015 Int)) Int (x4585 x6015))
(define-fun x147 ((x6015 Int)) Int (x1404 x6015))
(define-fun x146 ((x6015 Int)) Int (x6128 x6015))
(define-fun x1021 ((x6015 Int)) Int (x3511 x6015))
(define-fun x4296 ((x6015 Int)) Int (x7156 x6015))
(define-fun x1497 ((x6015 Int)) Int (x751 x6015))
(define-fun x5502 ((x6015 Int)) Int (x2047 x6015))
(define-fun x2717 ((x6015 Int)) Int (ite (= x6015 4) 17 (x6284 x6015)))
(define-fun x1183 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 36)) (x2717 x6015) (x4572 x6015)))
(define-fun x7740 ((x6015 Int)) Int (ite (= x6015 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x1730 x6015)))
(define-fun x3462 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x7740 (+ x6015 128)) (x4693 x6015)))
(define-fun x8536 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1730 x6015)))
(define-fun x6379 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x8536 x6015)))
(define-fun x1658 ((x6015 Int)) Int (ite (= 164 x6015) 12 (x6379 x6015)))
(define-fun x2026 ((x6015 Int)) Int (ite (= x6015 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x1658 x6015)))
(define-fun x7411 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 100)) (x2026 (+ x6015 128)) (x4693 x6015)))
(define-fun x6141 ((x6015 Int)) Int (ite x7629 (x3462 x6015) (x7411 x6015)))
(define-fun x1720 ((x6015 Int)) Int (ite x7020 (x6141 x6015) (x4693 x6015)))
(define-fun x3810 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x201)) (x1720 x6015) (x6284 x6015)))
(define-fun x637 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x201)) (x3810 x6015) (x4572 x6015)))
(define-fun x3071 ((x6015 Int)) Int (x6128 x6015))
(define-fun x182 ((x6015 Int)) Int (ite x1100 (x2765 x6015) (x1889 x6015)))
(define-fun x1437 ((x6015 Int)) Int (ite x1100 (x849 x6015) (x1571 x6015)))
(define-fun x4886 ((x6015 Int)) Int (x7156 x6015))
(define-fun x6922 ((x6015 Int)) Int (ite x1100 (x6235 x6015) (x6251 x6015)))
(define-fun x8075 ((x6015 Int)) Int (x3511 x6015))
(define-fun x3458 ((x6015 Int)) Int (ite x1100 (x2004 x6015) (x370 x6015)))
(define-fun x5629 ((x6015 Int)) Int (ite x1100 (x3987 x6015) (x1406 x6015)))
(define-fun x446 ((x6015 Int)) Int (x751 x6015))
(define-fun x2048 ((x6015 Int)) Int (ite x1100 (x7858 x6015) (x2690 x6015)))
(define-fun x2252 ((x6015 Int)) Int (ite x1100 (x5424 x6015) (x5963 x6015)))
(define-fun x5191 ((x6015 Int)) Int (ite x1100 (x4127 x6015) (x2024 x6015)))
(define-fun x2478 ((x6015 Int)) Int (ite x1100 (x306 x6015) (x7324 x6015)))
(define-fun x6818 ((x6015 Int)) Int (ite x1100 (x2991 x6015) (x6878 x6015)))
(define-fun x712 ((x6015 Int)) Int (x4585 x6015))
(define-fun x4180 ((x6015 Int)) Int (ite x1100 (x6967 x6015) (x7248 x6015)))
(define-fun x7847 ((x6015 Int)) Int (ite x1100 (x3485 x6015) (x7306 x6015)))
(define-fun x2023 ((x6015 Int)) Int (ite x1100 (x2259 x6015) (x4926 x6015)))
(define-fun x7867 ((x6015 Int)) Int (x1404 x6015))
(define-fun x5150 ((x6015 Int)) Int (ite x1100 (x8493 x6015) (x2249 x6015)))
(define-fun x708 ((x6015 Int)) Int (ite x1100 (x919 x6015) (x2784 x6015)))
(define-fun x2496 ((x6015 Int)) Int (x2047 x6015))
(define-fun x2945 ((x6015 Int)) Int (ite x1100 (x6896 x6015) (x2629 x6015)))
(define-fun x7672 ((x6015 Int)) Int (ite x1100 (x1263 x6015) (x3068 x6015)))
(define-fun x3075 ((x6015 Int)) Int (ite (= x6015 4) 34 (x1210 x6015)))
(define-fun x4626 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 36 x6015)) (x3075 x6015) (x5477 x6015)))
(define-fun x2076 ((x6015 Int)) Int (ite (= 128 x6015) x5195 (x1210 x6015)))
(define-fun x5439 ((x6015 Int)) Int (ite (= 160 x6015) x4065 (x2076 x6015)))
(define-fun x5586 ((x6015 Int)) Int (ite (= x6015 192) x6976 (x5439 x6015)))
(define-fun x5211 ((x6015 Int)) Int (ite (= 160 x6015) x2080 (x2076 x6015)))
(define-fun x1163 ((x6015 Int)) Int (ite x2459 (x2076 x6015) (ite x1000 (ite x501 (x5439 x6015) (x5586 x6015)) (x5211 x6015))))
(define-fun x493 ((x6015 Int)) Int (ite (= x6015 128) 51607134309459761954548520284799282329936326410793501951915747293203005440 (x1 x6015)))
(define-fun x291 ((x6015 Int)) Int (ite (= 132 x6015) x3627 (x493 x6015)))
(define-fun x134 ((x6015 Int)) Int (ite (= x6015 164) 128 (x291 x6015)))
(define-fun x5081 ((x6015 Int)) Int (ite (= x6015 260) x766 (x134 x6015)))
(define-fun x6960 ((x6015 Int)) Int (ite (= 292 x6015) x2873 (x5081 x6015)))
(define-fun x8259 ((x6015 Int)) Int (ite (= 292 x6015) x2065 (x5081 x6015)))
(define-fun x2269 ((x6015 Int)) Int (ite x1234 (ite x8331 (x5081 x6015) (x6960 x6015)) (x8259 x6015)))
(define-fun x2976 ((x6015 Int)) Int (ite (= 196 x6015) x1453 (x2269 x6015)))
(define-fun x6986 ((x6015 Int)) Int (ite (= x6015 228) x7712 (x2976 x6015)))
(define-fun x7868 ((x6015 Int)) Int (ite (= x2930 x6015) x1235 (x6986 x6015)))
(define-fun x1341 ((x6015 Int)) Int (ite (= x6015 x7599) x7845 (x7868 x6015)))
(define-fun x5124 ((x6015 Int)) Int (ite (= x7599 x6015) x951 (x7868 x6015)))
(define-fun x8099 ((x6015 Int)) Int (ite x2302 (ite x5929 (x7868 x6015) (x1341 x6015)) (x5124 x6015)))
(define-fun x43 ((x6015 Int)) Int (ite (and (> x5000 x6015) (<= 164 x6015)) (x8099 (+ x6015 128)) (x4943 x6015)))
(define-fun x3030 ((x6015 Int)) Int (ite (and (>= x6015 x3489) (> (+ x3489 x4400) x6015)) (x43 (- (+ x6015 164) x3489)) (x1163 x6015)))
(define-fun x3812 ((x6015 Int)) Int (ite (= x6015 x4858) 0 (x3030 x6015)))
(define-fun x537 ((x6015 Int)) Int (ite x2583 (x3812 x6015) (x1163 x6015)))
(define-fun x1925 ((x6015 Int)) Int (ite (= x6015 x3489) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x537 x6015)))
(define-fun x5891 ((x6015 Int)) Int (ite (= x6015 x8262) 32 (x1925 x6015)))
(define-fun x7395 ((x6015 Int)) Int (ite (= x6015 x451) 38 (x5891 x6015)))
(define-fun x973 ((x6015 Int)) Int (ite (= x4318 x6015) 34591783479076665078880830389440322441076534786459098783165778951140825654127 (x7395 x6015)))
(define-fun x3863 ((x6015 Int)) Int (ite (= x6015 x6254) 49960157028345592648530624234191905822321225401495951855107091972775720517632 (x973 x6015)))
(define-fun x1856 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 132)) (x3863 (+ x6015 x3489)) (x5477 x6015)))
(define-fun x5506 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1210 x6015)))
(define-fun x8038 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x5506 x6015)))
(define-fun x8125 ((x6015 Int)) Int (ite (= x6015 164) 30 (x8038 x6015)))
(define-fun x4820 ((x6015 Int)) Int (ite (= x6015 196) 34591783479076665078880830389440322436311164112910831269305739813291000201216 (x8125 x6015)))
(define-fun x5714 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 100 x6015)) (x4820 (+ 128 x6015)) (x5477 x6015)))
(define-fun x893 ((x6015 Int)) Int (ite x2588 (x4626 x6015) (ite x8545 (x5477 x6015) (ite x8382 (x5477 x6015) (ite x3791 (x5477 x6015) (ite x4285 (x1856 x6015) (x5714 x6015)))))))
(define-fun x3150 ((x6015 Int)) Int (ite x1854 (x893 x6015) (x5477 x6015)))
(define-fun x2386 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x5128)) (x3150 x6015) (x6284 x6015)))
(define-fun x4526 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x5128)) (x2386 x6015) (x4572 x6015)))
(define-fun x590 ((x6015 Int)) Int (x7156 x6015))
(define-fun x3950 ((x6015 Int)) Int (x3511 x6015))
(define-fun x3070 ((x6015 Int)) Int (x6128 x6015))
(define-fun x8540 ((x6015 Int)) Int (x751 x6015))
(define-fun x1025 ((x6015 Int)) Int (x1404 x6015))
(define-fun x6157 ((x6015 Int)) Int (x4585 x6015))
(define-fun x3029 ((x6015 Int)) Int (x2047 x6015))
(define-fun x4480 ((x6015 Int)) Int (ite (= 128 x6015) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x8231 x6015)))
(define-fun x1963 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 4)) (x4480 (+ 128 x6015)) (x2521 x6015)))
(define-fun x8377 ((x6015 Int)) Int (ite (= 4 x6015) 33 (x8231 x6015)))
(define-fun x2354 ((x6015 Int)) Int (ite (and (> 36 x6015) (<= 0 x6015)) (x8377 x6015) (x2521 x6015)))
(define-fun x5169 ((x6015 Int)) Int (ite (= 128 x6015) 50226347614966974677930900640024090345938424853691168920094736542366852710400 (x8231 x6015)))
(define-fun x1638 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x5169 (+ x6015 128)) (x2521 x6015)))
(define-fun x4596 ((x6015 Int)) Int (ite x5043 (x2521 x6015) (ite x8537 (x1963 x6015) (ite x7223 (x2354 x6015) (x1638 x6015)))))
(define-fun x6492 ((x6015 Int)) Int (ite x469 (x4596 x6015) (x2521 x6015)))
(define-fun x641 ((x6015 Int)) Int (ite (and (> x4475 x6015) (>= x6015 0)) (x6492 x6015) (x6284 x6015)))
(define-fun x8048 ((x6015 Int)) Int (ite (and (>= x6015 0) (> x4475 x6015)) (x641 x6015) (x4572 x6015)))
(define-fun x3586 ((x6015 Int)) Int (x4585 x6015))
(define-fun x1253 ((x6015 Int)) Int (ite x6502 (x7732 x6015) (x4926 x6015)))
(define-fun x4772 ((x6015 Int)) Int (ite x6502 (x2984 x6015) (x2024 x6015)))
(define-fun x7955 ((x6015 Int)) Int (ite x6502 (x8448 x6015) (x7306 x6015)))
(define-fun x2575 ((x6015 Int)) Int (ite x6502 (x8431 x6015) (x2784 x6015)))
(define-fun x4260 ((x6015 Int)) Int (ite x6502 (x1396 x6015) (x1406 x6015)))
(define-fun x2856 ((x6015 Int)) Int (ite x6502 (x2646 x6015) (x7812 x6015)))
(define-fun x7311 ((x6015 Int)) Int (ite x6502 (x5742 x6015) (x370 x6015)))
(define-fun x825 ((x6015 Int)) Int (ite x6502 (x3041 x6015) (x2690 x6015)))
(define-fun x6263 ((x6015 Int)) Int (x6128 x6015))
(define-fun x7802 ((x6015 Int)) Int (ite x6502 (x3980 x6015) (x2629 x6015)))
(define-fun x4839 ((x6015 Int)) Int (ite x6502 (x8149 x6015) (x5963 x6015)))
(define-fun x1821 ((x6015 Int)) Int (ite x6502 (x2157 x6015) (x2249 x6015)))
(define-fun x6742 ((x6015 Int)) Int (ite x6502 (x6803 x6015) (x6251 x6015)))
(define-fun x1997 ((x6015 Int)) Int (ite x6502 (x7248 x6015) (x1872 x6015)))
(define-fun x7118 ((x6015 Int)) Int (x7156 x6015))
(define-fun x353 ((x6015 Int)) Int (ite x6502 (x5517 x6015) (x1889 x6015)))
(define-fun x1519 ((x6015 Int)) Int (x2047 x6015))
(define-fun x7321 ((x6015 Int)) Int (x3511 x6015))
(define-fun x4801 ((x6015 Int)) Int (x751 x6015))
(define-fun x6741 ((x6015 Int)) Int (x3068 x6015))
(define-fun x7470 ((x6015 Int)) Int (x1404 x6015))
(define-fun x5691 ((x6015 Int)) Int (ite x6502 (x2994 x6015) (x1571 x6015)))
(define-fun x634 ((x6015 Int)) Int (ite x6502 (x875 x6015) (x6878 x6015)))
(define-fun x4086 ((x6015 Int)) Int (ite (= x6015 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x1 x6015)))
(define-fun x970 ((x6015 Int)) Int (ite (= x6015 132) x1891 (x4086 x6015)))
(define-fun x4172 ((x6015 Int)) Int (ite (= 164 x6015) 128 (x970 x6015)))
(define-fun x4428 ((x6015 Int)) Int (ite (= 260 x6015) x6266 (x4172 x6015)))
(define-fun x2745 ((x6015 Int)) Int (ite (= x6015 292) x373 (x4428 x6015)))
(define-fun x4866 ((x6015 Int)) Int (ite (= x6015 292) x6489 (x4428 x6015)))
(define-fun x7320 ((x6015 Int)) Int (ite x7236 (ite x7229 (x4428 x6015) (x2745 x6015)) (x4866 x6015)))
(define-fun x866 ((x6015 Int)) Int (ite (= 196 x6015) x1232 (x7320 x6015)))
(define-fun x5852 ((x6015 Int)) Int (ite (= 228 x6015) x2949 (x866 x6015)))
(define-fun x7162 ((x6015 Int)) Int (ite (= x8562 x6015) x1509 (x5852 x6015)))
(define-fun x5344 ((x6015 Int)) Int (ite (= x5975 x6015) x3221 (x7162 x6015)))
(define-fun x1589 ((x6015 Int)) Int (ite (= x6015 x5975) x8333 (x7162 x6015)))
(define-fun x3982 ((x6015 Int)) Int (ite x2211 (ite x489 (x7162 x6015) (x5344 x6015)) (x1589 x6015)))
(define-fun x1158 ((x6015 Int)) Int (ite (and (< x6015 x4850) (<= 164 x6015)) (x3982 (+ 128 x6015)) (x1016 x6015)))
(define-fun x2379 ((x6015 Int)) Int (ite (and (> (+ 128 x2894) x6015) (>= x6015 128)) (x1158 (+ 36 x6015)) (x7786 x6015)))
(define-fun x1185 ((x6015 Int)) Int (ite (= x6015 x2638) 0 (x2379 x6015)))
(define-fun x3276 ((x6015 Int)) Int (ite (= x882 x6015) x8127 (x1185 x6015)))
(define-fun x8559 ((x6015 Int)) Int (ite (and (< x6015 (+ x3630 128)) (>= x6015 128)) (x1158 (- (+ x6015 x2925) 128)) (x3276 x6015)))
(define-fun x1248 ((x6015 Int)) Int (ite (= x7215 x6015) 0 (x8559 x6015)))
(define-fun x67 ((x6015 Int)) Int (ite (= 128 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1248 x6015)))
(define-fun x5194 ((x6015 Int)) Int (ite (= x6015 132) 32 (x67 x6015)))
(define-fun x8176 ((x6015 Int)) Int (ite (= 164 x6015) 33 (x5194 x6015)))
(define-fun x2548 ((x6015 Int)) Int (ite (= x6015 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x8176 x6015)))
(define-fun x2523 ((x6015 Int)) Int (ite (= 228 x6015) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x2548 x6015)))
(define-fun x851 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 132)) (x2523 (+ x6015 128)) (x6123 x6015)))
(define-fun x4047 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3276 x6015)))
(define-fun x7140 ((x6015 Int)) Int (ite (= x6015 132) 32 (x4047 x6015)))
(define-fun x112 ((x6015 Int)) Int (ite (= 164 x6015) 35 (x7140 x6015)))
(define-fun x2951 ((x6015 Int)) Int (ite (= x6015 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x112 x6015)))
(define-fun x6036 ((x6015 Int)) Int (ite (= x6015 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x2951 x6015)))
(define-fun x672 ((x6015 Int)) Int (ite (and (> 132 x6015) (<= 0 x6015)) (x6036 (+ 128 x6015)) (x6123 x6015)))
(define-fun x7883 ((x6015 Int)) Int (ite x2067 (x6123 x6015) (ite x4429 (x6123 x6015) (ite x7631 (x6123 x6015) (ite x1208 (x6123 x6015) (ite x5846 (x851 x6015) (x672 x6015)))))))
(define-fun x3121 ((x6015 Int)) Int 0)
(define-fun x127 ((x6015 Int)) Int (ite x6159 (x7883 x6015) (x3121 x6015)))
(define-fun x2431 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> x8005 x6015)) (x127 x6015) (x6284 x6015)))
(define-fun x4957 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x8005)) (x2431 x6015) (x4572 x6015)))
(define-fun x7650 ((x6015 Int)) Int (x3511 x6015))
(define-fun x4702 ((x6015 Int)) Int (x370 x6015))
(define-fun x3187 ((x6015 Int)) Int (x2629 x6015))
(define-fun x1923 ((x6015 Int)) Int (ite (= 4 x6015) 34 (x2643 x6015)))
(define-fun x4224 ((x6015 Int)) Int (ite (and (< x6015 36) (<= 0 x6015)) (x1923 x6015) (x1266 x6015)))
(define-fun x7348 ((x6015 Int)) Int (ite (= x6015 x1662) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2643 x6015)))
(define-fun x4623 ((x6015 Int)) Int (ite (= x6015 x4722) 32 (x7348 x6015)))
(define-fun x6893 ((x6015 Int)) Int (ite (= x5074 x6015) 32 (x4623 x6015)))
(define-fun x2338 ((x6015 Int)) Int (ite (= x6015 x6941) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x6893 x6015)))
(define-fun x3928 ((x6015 Int)) Int (ite (and (> 100 x6015) (>= x6015 0)) (x2338 (+ x1662 x6015)) (x1266 x6015)))
(define-fun x3125 ((x6015 Int)) Int (ite (= x6015 x1662) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2643 x6015)))
(define-fun x4192 ((x6015 Int)) Int (ite (= x6015 x6108) 32 (x3125 x6015)))
(define-fun x5706 ((x6015 Int)) Int (ite (= x6015 x4819) 48 (x4192 x6015)))
(define-fun x5086 ((x6015 Int)) Int (ite (= x6015 x4907) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x5706 x6015)))
(define-fun x4036 ((x6015 Int)) Int (ite (= x2849 x6015) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x5086 x6015)))
(define-fun x6044 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 132 x6015)) (x4036 (+ x1662 x6015)) (x1266 x6015)))
(define-fun x8513 ((x6015 Int)) Int (ite (= x6015 0) x3217 (x7663 x6015)))
(define-fun x8086 ((x6015 Int)) Int (ite (= 32 x6015) x1746 (x8513 x6015)))
(define-fun x5091 ((x6015 Int)) Int (ite x8525 (x7663 x6015) (x8086 x6015)))
(define-fun x3229 ((x6015 Int)) Int (ite (and (< x6015 x671) (<= 0 x6015)) (x5091 x6015) (x2643 x6015)))
(define-fun x3815 ((x6015 Int)) Int (ite (and (< x6015 x671) (<= 0 x6015)) (x3229 x6015) (x1266 x6015)))
(define-fun x272 ((x6015 Int)) Int (ite (= 128 x6015) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2643 x6015)))
(define-fun x7410 ((x6015 Int)) Int (ite (and (< x6015 4) (<= 0 x6015)) (x272 (+ 128 x6015)) (x1266 x6015)))
(define-fun x6524 ((x6015 Int)) Int (ite (= x6015 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x2643 x6015)))
(define-fun x3366 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 4)) (x6524 (+ x6015 128)) (x1266 x6015)))
(define-fun x7578 ((x6015 Int)) Int (ite (= x6015 4) 33 (x2643 x6015)))
(define-fun x2914 ((x6015 Int)) Int (ite (and (< x6015 36) (>= x6015 0)) (x7578 x6015) (x1266 x6015)))
(define-fun x8031 ((x6015 Int)) Int (ite (= x6015 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x2643 x6015)))
(define-fun x790 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> 4 x6015)) (x8031 (+ x6015 128)) (x1266 x6015)))
(define-fun x1743 ((x6015 Int)) Int (ite x2163 (x4224 x6015) (ite x3602 (x3928 x6015) (ite x335 (x1266 x6015) (ite x7295 (x1266 x6015) (ite x3375 (x6044 x6015) (ite x6473 (x1266 x6015) (ite x4931 (x3815 x6015) (ite x8385 (x7410 x6015) (ite x7037 (x3366 x6015) (ite x2222 (x2914 x6015) (x790 x6015))))))))))))
(define-fun x818 ((x6015 Int)) Int (ite x5371 (x1743 x6015) (x1266 x6015)))
(define-fun x7288 ((x6015 Int)) Int 0)
(define-fun x2860 ((x6015 Int)) Int (ite x6843 (x818 x6015) (ite x8244 (x818 x6015) (x7288 x6015))))
(define-fun x3109 ((x6015 Int)) Int (x4926 x6015))
(define-fun x1400 ((x6015 Int)) Int (x1406 x6015))
(define-fun x2148 ((x6015 Int)) Int (x7306 x6015))
(define-fun x6035 ((x6015 Int)) Int (x2249 x6015))
(define-fun x7073 ((x6015 Int)) Int (x2024 x6015))
(define-fun x3292 ((x6015 Int)) Int (x5963 x6015))
(define-fun x6659 ((x6015 Int)) Int (x7248 x6015))
(define-fun x8203 ((x6015 Int)) Int (x1889 x6015))
(define-fun x2382 ((x6015 Int)) Int (x2047 x6015))
(define-fun x1246 ((x6015 Int)) Int (x6878 x6015))
(define-fun x4972 ((x6015 Int)) Int (ite x6843 (x1934 x6015) (ite x8244 (x1934 x6015) (x7324 x6015))))
(define-fun x1830 ((x6015 Int)) Int (x6128 x6015))
(define-fun x1787 ((x6015 Int)) Int (x4585 x6015))
(define-fun x3617 ((x6015 Int)) Int (x1404 x6015))
(define-fun x3294 ((x6015 Int)) Int (x3068 x6015))
(define-fun x1452 ((x6015 Int)) Int (x751 x6015))
(define-fun x632 ((x6015 Int)) Int (x6251 x6015))
(define-fun x2854 ((x6015 Int)) Int (x7156 x6015))
(define-fun x2345 ((x6015 Int)) Int (x2784 x6015))
(define-fun x8089 ((x6015 Int)) Int (x1571 x6015))
(define-fun x7158 ((x6015 Int)) Int (x2690 x6015))
(define-fun x4398 ((x6015 Int)) Int (ite (and (>= x6015 0) (> x1888 x6015)) (x2860 x6015) (x6284 x6015)))
(define-fun x8523 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x1888)) (x4398 x6015) (x4572 x6015)))
(define-fun x3605 ((x6015 Int)) Int (x3511 x6015))
(define-fun x7426 ((x6015 Int)) Int (x7248 x6015))
(define-fun x8249 ((x6015 Int)) Int (x2047 x6015))
(define-fun x7504 ((x6015 Int)) Int (x6128 x6015))
(define-fun x6231 ((x6015 Int)) Int (x4585 x6015))
(define-fun x1472 ((x6015 Int)) Int (x1404 x6015))
(define-fun x2782 ((x6015 Int)) Int (x3068 x6015))
(define-fun x4939 ((x6015 Int)) Int (x7156 x6015))
(define-fun x2336 ((x6015 Int)) Int (x751 x6015))
(define-fun x4333 ((x6015 Int)) Int (ite (= x6015 x7569) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x1877 x6015)))
(define-fun x6908 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 4)) (x4333 (+ x6015 x7569)) (x7621 x6015)))
(define-fun x5566 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1877 x6015)))
(define-fun x172 ((x6015 Int)) Int (ite (= x6015 132) 32 (x5566 x6015)))
(define-fun x1230 ((x6015 Int)) Int (ite (= 164 x6015) 12 (x172 x6015)))
(define-fun x631 ((x6015 Int)) Int (ite (= 196 x6015) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x1230 x6015)))
(define-fun x1578 ((x6015 Int)) Int (ite (and (< x6015 100) (>= x6015 0)) (x631 (+ 128 x6015)) (x7621 x6015)))
(define-fun x4654 ((x6015 Int)) Int (ite x3053 (x6908 x6015) (x1578 x6015)))
(define-fun x8323 ((x6015 Int)) Int (ite x2314 (x4654 x6015) (x7621 x6015)))
(define-fun x6493 ((x6015 Int)) Int (ite (and (> x2816 x6015) (>= x6015 0)) (x8323 x6015) (x6284 x6015)))
(define-fun x578 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x2816)) (x6493 x6015) (x4572 x6015)))
(define-fun x1369 ((x6015 Int)) Int (x1404 x6015))
(define-fun x6844 ((x6015 Int)) Int (ite x3056 (x7306 x6015) (x670 x6015)))
(define-fun x1483 ((x6015 Int)) Int (x751 x6015))
(define-fun x5573 ((x6015 Int)) Int (ite x3056 (x370 x6015) (x4100 x6015)))
(define-fun x1356 ((x6015 Int)) Int (ite x3056 (x2784 x6015) (x64 x6015)))
(define-fun x2014 ((x6015 Int)) Int (ite x3056 (x1406 x6015) (x4212 x6015)))
(define-fun x1205 ((x6015 Int)) Int (x7248 x6015))
(define-fun x124 ((x6015 Int)) Int (ite x3056 (x4926 x6015) (x6670 x6015)))
(define-fun x1984 ((x6015 Int)) Int (x2047 x6015))
(define-fun x8238 ((x6015 Int)) Int (x7324 x6015))
(define-fun x1346 ((x6015 Int)) Int (ite x3056 (x2690 x6015) (x5704 x6015)))
(define-fun x3057 ((x6015 Int)) Int (ite x3056 (x2249 x6015) (x4884 x6015)))
(define-fun x3332 ((x6015 Int)) Int (ite x3056 (x6251 x6015) (x5686 x6015)))
(define-fun x2905 ((x6015 Int)) Int (ite x3056 (x1889 x6015) (x3523 x6015)))
(define-fun x111 ((x6015 Int)) Int (x6128 x6015))
(define-fun x7282 ((x6015 Int)) Int (ite x3056 (x5963 x6015) (x4203 x6015)))
(define-fun x7402 ((x6015 Int)) Int (ite x3056 (x2024 x6015) (x478 x6015)))
(define-fun x2105 ((x6015 Int)) Int (ite x3056 (x1571 x6015) (x6171 x6015)))
(define-fun x7462 ((x6015 Int)) Int (ite x3056 (x2629 x6015) (x7010 x6015)))
(define-fun x6136 ((x6015 Int)) Int (ite x3056 (x6878 x6015) (x2916 x6015)))
(define-fun x4210 ((x6015 Int)) Int (x3068 x6015))
(define-fun x3446 ((x6015 Int)) Int (x7156 x6015))
(define-fun x1416 ((x6015 Int)) Int (x4585 x6015))
(define-fun x1436 ((x6015 Int)) Int (x3511 x6015))
(define-fun x3279 ((x6015 Int)) Int (x2690 x6015))
(define-fun x164 ((x6015 Int)) Int (x2024 x6015))
(define-fun x166 ((x6015 Int)) Int (x7324 x6015))
(define-fun x7361 ((x6015 Int)) Int (x4585 x6015))
(define-fun x7207 ((x6015 Int)) Int (x7248 x6015))
(define-fun x3498 ((x6015 Int)) Int (x2784 x6015))
(define-fun x1024 ((x6015 Int)) Int (x7156 x6015))
(define-fun x4595 ((x6015 Int)) Int (x1406 x6015))
(define-fun x6085 ((x6015 Int)) Int (x6128 x6015))
(define-fun x8432 ((x6015 Int)) Int (x1889 x6015))
(define-fun x1334 ((x6015 Int)) Int (x4926 x6015))
(define-fun x6317 ((x6015 Int)) Int (x6878 x6015))
(define-fun x69 ((x6015 Int)) Int (x6251 x6015))
(define-fun x3262 ((x6015 Int)) Int (x3068 x6015))
(define-fun x7416 ((x6015 Int)) Int (x1571 x6015))
(define-fun x5260 ((x6015 Int)) Int (x2047 x6015))
(define-fun x7067 ((x6015 Int)) Int (x2629 x6015))
(define-fun x4330 ((x6015 Int)) Int (x3511 x6015))
(define-fun x1327 ((x6015 Int)) Int (x751 x6015))
(define-fun x7840 ((x6015 Int)) Int (x370 x6015))
(define-fun x6627 ((x6015 Int)) Int (x7306 x6015))
(define-fun x4360 ((x6015 Int)) Int (x5963 x6015))
(define-fun x7552 ((x6015 Int)) Int (x1404 x6015))
(define-fun x6532 ((x6015 Int)) Int (x2249 x6015))
(define-fun x4424 ((x6015 Int)) Int (ite (= 128 x6015) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x5072 x6015)))
(define-fun x8004 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x4424 (+ 128 x6015)) (x6464 x6015)))
(define-fun x7070 ((x6015 Int)) Int (ite (= 128 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x5072 x6015)))
(define-fun x693 ((x6015 Int)) Int (ite (= 132 x6015) 32 (x7070 x6015)))
(define-fun x4995 ((x6015 Int)) Int (ite (= 164 x6015) 12 (x693 x6015)))
(define-fun x4625 ((x6015 Int)) Int (ite (= x6015 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x4995 x6015)))
(define-fun x500 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 100)) (x4625 (+ x6015 128)) (x6464 x6015)))
(define-fun x7974 ((x6015 Int)) Int (ite x1845 (x8004 x6015) (x500 x6015)))
(define-fun x7447 ((x6015 Int)) Int (ite x236 (x7974 x6015) (x6464 x6015)))
(define-fun x5942 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x6582)) (x7447 x6015) (x6284 x6015)))
(define-fun x6483 ((x6015 Int)) Int (ite (and (> x6582 x6015) (>= x6015 0)) (x5942 x6015) (x4572 x6015)))
(define-fun x215 ((x6015 Int)) Int (ite (= x6015 4) 34 (x6284 x6015)))
(define-fun x2491 ((x6015 Int)) Int (ite (and (> 36 x6015) (<= 0 x6015)) (x215 x6015) (x4572 x6015)))
(define-fun x1974 ((x6015 Int)) Int (ite (= 4 x6015) 34 (x6284 x6015)))
(define-fun x2154 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 36 x6015)) (x1974 x6015) (x4572 x6015)))
(define-fun x4977 ((x6015 Int)) Int (ite (= x3521 x6015) x608 (x6175 x6015)))
(define-fun x2576 ((x6015 Int)) Int (ite (= x6015 x621) x587 (x4977 x6015)))
(define-fun x3655 ((x6015 Int)) Int (ite (and (>= x6015 128) (> (+ x2894 128) x6015)) (x1158 (+ x6015 36)) (x1248 x6015)))
(define-fun x6049 ((x6015 Int)) Int (ite (= x8393 x6015) 0 (x3655 x6015)))
(define-fun x5149 ((x6015 Int)) Int (ite (= x8387 x6015) x5122 (x6049 x6015)))
(define-fun x7785 ((x6015 Int)) Int (ite (= x2038 x6015) 0 (x3068 x6015)))
(define-fun x6069 ((x6015 Int)) Int (ite (= x6015 128) x2894 (x5149 x6015)))
(define-fun x952 ((x6015 Int)) Int (ite (and (< x6015 (+ x2894 160)) (<= 160 x6015)) (x1158 (+ x6015 4)) (x6069 x6015)))
(define-fun x7372 ((x6015 Int)) Int (ite (= x6015 x7047) 0 (x952 x6015)))
(define-fun x2947 ((x6015 Int)) Int (ite (= x1132 x6015) x3630 (x7372 x6015)))
(define-fun x7692 ((x6015 Int)) Int (ite (and (> (+ x3630 x1390) x6015) (>= x6015 x1390)) (x1158 (- (+ x2925 x6015) x1390)) (x2947 x6015)))
(define-fun x3034 ((x6015 Int)) Int (ite (= x6958 x6015) 0 (x7692 x6015)))
(define-fun x7519 ((x6015 Int)) Int (ite (= 128 x6015) 46442213778836376901753710468615024683576072693327014300388496345503314739200 (x1 x6015)))
(define-fun x3985 ((x6015 Int)) Int (ite (= 132 x6015) x2347 (x7519 x6015)))
(define-fun x3166 ((x6015 Int)) Int (ite (= 164 x6015) 128 (x3985 x6015)))
(define-fun x8026 ((x6015 Int)) Int (ite (= x6015 260) x4952 (x3166 x6015)))
(define-fun x1781 ((x6015 Int)) Int (ite (= 292 x6015) x3254 (x8026 x6015)))
(define-fun x7148 ((x6015 Int)) Int (ite (= 292 x6015) x5780 (x8026 x6015)))
(define-fun x2387 ((x6015 Int)) Int (ite x7524 (ite x754 (x8026 x6015) (x1781 x6015)) (x7148 x6015)))
(define-fun x6488 ((x6015 Int)) Int (ite (= x6015 196) x5606 (x2387 x6015)))
(define-fun x7526 ((x6015 Int)) Int (ite (= 228 x6015) x6525 (x6488 x6015)))
(define-fun x3244 ((x6015 Int)) Int (ite (= x4711 x6015) x4665 (x7526 x6015)))
(define-fun x7531 ((x6015 Int)) Int (ite (= x6015 x6189) x3423 (x3244 x6015)))
(define-fun x876 ((x6015 Int)) Int (ite (= x6015 x6189) x2614 (x3244 x6015)))
(define-fun x1012 ((x6015 Int)) Int (ite x6075 (ite x5772 (x3244 x6015) (x876 x6015)) (x7531 x6015)))
(define-fun x7016 ((x6015 Int)) Int (ite (and (< x6015 x7351) (<= 164 x6015)) (x1012 (+ 128 x6015)) (x6570 x6015)))
(define-fun x8378 ((x6015 Int)) Int (ite (= x1277 x6015) x4283 (x1687 x6015)))
(define-fun x4824 ((x6015 Int)) Int (ite (and (>= x6015 x4677) (< x6015 (+ x4283 x4677))) (x7016 (- (+ x4339 x6015) x4677)) (x1960 x6015)))
(define-fun x6865 ((x6015 Int)) Int (ite (= x3733 x6015) 0 (x4824 x6015)))
(define-fun x1060 ((x6015 Int)) Int (ite (= x6015 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6828 x6015)))
(define-fun x2855 ((x6015 Int)) Int (ite (= x6015 132) 32 (x1060 x6015)))
(define-fun x595 ((x6015 Int)) Int (ite (= x6015 164) 38 (x2855 x6015)))
(define-fun x8253 ((x6015 Int)) Int (ite (= x6015 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x595 x6015)))
(define-fun x3680 ((x6015 Int)) Int (ite (= 228 x6015) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x8253 x6015)))
(define-fun x4061 ((x6015 Int)) Int (ite (and (> 132 x6015) (<= 0 x6015)) (x3680 (+ 128 x6015)) (x5138 x6015)))
(define-fun x6414 ((x6015 Int)) Int (ite (= x6015 4) 17 (x6284 x6015)))
(define-fun x1049 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x6414 x6015) (x4572 x6015)))
(define-fun x7948 ((x6015 Int)) Int (ite (= x6015 4) 17 (x6284 x6015)))
(define-fun x2348 ((x6015 Int)) Int (ite (and (> 36 x6015) (>= x6015 0)) (x7948 x6015) (x4572 x6015)))
(define-fun x3895 ((x6015 Int)) Int (ite (= x6015 4) 17 (x6284 x6015)))
(define-fun x3730 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 36)) (x3895 x6015) (x4572 x6015)))
(define-fun x7032 ((x6015 Int)) Int (x1406 x6015))
(define-fun x6039 ((x6015 Int)) Int (x7032 x6015))
(define-fun x7196 ((x6015 Int)) Int (x2024 x6015))
(define-fun x1372 ((x6015 Int)) Int (x7196 x6015))
(define-fun x1568 ((x6015 Int)) Int (x6128 x6015))
(define-fun x560 ((x6015 Int)) Int (x1568 x6015))
(define-fun x5278 ((x6015 Int)) Int (x1571 x6015))
(define-fun x5526 ((x6015 Int)) Int (x5278 x6015))
(define-fun x3394 ((x6015 Int)) Int (x3511 x6015))
(define-fun x1590 ((x6015 Int)) Int (x3394 x6015))
(define-fun x6639 ((x6015 Int)) Int (x7156 x6015))
(define-fun x5090 ((x6015 Int)) Int (x6639 x6015))
(define-fun x3207 ((x6015 Int)) Int (x4926 x6015))
(define-fun x2675 ((x6015 Int)) Int (x3207 x6015))
(define-fun x2075 ((x6015 Int)) Int (x751 x6015))
(define-fun x7342 ((x6015 Int)) Int (x2075 x6015))
(define-fun x6863 ((x6015 Int)) Int (x3068 x6015))
(define-fun x1588 ((x6015 Int)) Int (x6863 x6015))
(define-fun x7527 ((x6015 Int)) Int (x2249 x6015))
(define-fun x1646 ((x6015 Int)) Int (x7527 x6015))
(define-fun x3486 ((x6015 Int)) Int (x5963 x6015))
(define-fun x2979 ((x6015 Int)) Int (x3486 x6015))
(define-fun x7249 ((x6015 Int)) Int (x2629 x6015))
(define-fun x4208 ((x6015 Int)) Int (x7249 x6015))
(define-fun x2711 ((x6015 Int)) Int (x6878 x6015))
(define-fun x3952 ((x6015 Int)) Int (x2711 x6015))
(define-fun x8479 ((x6015 Int)) Int (x4585 x6015))
(define-fun x5648 ((x6015 Int)) Int (x8479 x6015))
(define-fun x2793 ((x6015 Int)) Int (x1889 x6015))
(define-fun x8010 ((x6015 Int)) Int (x2793 x6015))
(define-fun x1675 ((x6015 Int)) Int (x7248 x6015))
(define-fun x4076 ((x6015 Int)) Int (x1675 x6015))
(define-fun x7665 ((x6015 Int)) Int (x1404 x6015))
(define-fun x1507 ((x6015 Int)) Int (x7665 x6015))
(define-fun x4307 ((x6015 Int)) Int (x2784 x6015))
(define-fun x4551 ((x6015 Int)) Int (x4307 x6015))
(define-fun x5593 ((x6015 Int)) Int (x7306 x6015))
(define-fun x144 ((x6015 Int)) Int (x5593 x6015))
(define-fun x6031 ((x6015 Int)) Int (x7324 x6015))
(define-fun x2540 ((x6015 Int)) Int (x6031 x6015))
(define-fun x5189 ((x6015 Int)) Int (x370 x6015))
(define-fun x5548 ((x6015 Int)) Int (x5189 x6015))
(define-fun x4740 ((x6015 Int)) Int (x6251 x6015))
(define-fun x4528 ((x6015 Int)) Int (x4740 x6015))
(define-fun x6772 ((x6015 Int)) Int (x2047 x6015))
(define-fun x4764 ((x6015 Int)) Int (x6772 x6015))
(define-fun x8204 ((x6015 Int)) Int (x2690 x6015))
(define-fun x762 ((x6015 Int)) Int (x8204 x6015))
(define-fun x6692 ((x6015 Int)) Int (ite x1854 (x1889 x6015) (x4027 x6015)))
(define-fun x6518 ((x6015 Int)) Int (ite x1854 (x1571 x6015) (x2689 x6015)))
(define-fun x360 ((x6015 Int)) Int (ite x1854 (x2024 x6015) (x3926 x6015)))
(define-fun x7178 ((x6015 Int)) Int (x6639 x6015))
(define-fun x1071 ((x6015 Int)) Int (ite x1854 (x3068 x6015) (x6527 x6015)))
(define-fun x5538 ((x6015 Int)) Int (ite x1854 (x6251 x6015) (x2254 x6015)))
(define-fun x8455 ((x6015 Int)) Int (x1568 x6015))
(define-fun x4344 ((x6015 Int)) Int (ite x1854 (x370 x6015) (x943 x6015)))
(define-fun x7737 ((x6015 Int)) Int (x3394 x6015))
(define-fun x6352 ((x6015 Int)) Int (ite x1854 (x2690 x6015) (x2852 x6015)))
(define-fun x126 ((x6015 Int)) Int (x2075 x6015))
(define-fun x2322 ((x6015 Int)) Int (x7665 x6015))
(define-fun x5798 ((x6015 Int)) Int (ite x1854 (x5963 x6015) (x1002 x6015)))
(define-fun x6669 ((x6015 Int)) Int (ite x1854 (x1406 x6015) (x5618 x6015)))
(define-fun x3393 ((x6015 Int)) Int (ite x1854 (x6878 x6015) (x3971 x6015)))
(define-fun x4991 ((x6015 Int)) Int (x8479 x6015))
(define-fun x5164 ((x6015 Int)) Int (x1675 x6015))
(define-fun x2863 ((x6015 Int)) Int (ite x1854 (x7306 x6015) (x8347 x6015)))
(define-fun x4272 ((x6015 Int)) Int (ite x1854 (x4926 x6015) (x4253 x6015)))
(define-fun x6753 ((x6015 Int)) Int (ite x1854 (x2249 x6015) (x4818 x6015)))
(define-fun x338 ((x6015 Int)) Int (x6772 x6015))
(define-fun x1863 ((x6015 Int)) Int (ite x1854 (x2784 x6015) (x91 x6015)))
(define-fun x5178 ((x6015 Int)) Int (x6031 x6015))
(define-fun x3246 ((x6015 Int)) Int (ite x1854 (x2629 x6015) (x1523 x6015)))
(define-fun x129 ((x6015 Int)) Int (ite (= x6015 x3489) x4400 (x537 x6015)))
(define-fun x7228 ((x6015 Int)) Int (ite (and (< x6015 (+ x4400 x6521)) (<= x6521 x6015)) (x43 (- (+ x6015 164) x6521)) (x129 x6015)))
(define-fun x4358 ((x6015 Int)) Int (ite (= x4245 x6015) 0 (x7228 x6015)))
(define-fun x2728 ((x6015 Int)) Int (ite (= x6015 x8498) x5222 (x4358 x6015)))
(define-fun x3311 ((x6015 Int)) Int (ite (and (< x6015 (+ x5878 x5222)) (<= x5878 x6015)) (x43 (- (+ x7871 x6015) x5878)) (x2728 x6015)))
(define-fun x3646 ((x6015 Int)) Int (ite (= x6015 x5761) 0 (x3311 x6015)))
(define-fun x2306 ((x6015 Int)) Int (ite (= x8476 x6015) x3627 (x3646 x6015)))
(define-fun x1989 ((x6015 Int)) Int (ite (= x6015 x8301) 128 (x2306 x6015)))
(define-fun x8254 ((x6015 Int)) Int (ite (= x6015 x6181) x6200 (x1989 x6015)))
(define-fun x3737 ((x6015 Int)) Int (ite (= x4734 x6015) x2353 (x8254 x6015)))
(define-fun x8263 ((x6015 Int)) Int (ite (= x5498 x6015) x6466 (x3737 x6015)))
(define-fun x854 ((x6015 Int)) Int (ite (= x6015 x995) x6307 (x8263 x6015)))
(define-fun x3764 ((x6015 Int)) Int (ite (= x3719 x6015) x7532 (x854 x6015)))
(define-fun x5614 ((x6015 Int)) Int (ite x4233 (x854 x6015) (ite x2635 (x8263 x6015) (ite x4238 (x3737 x6015) (ite x7323 (x8254 x6015) (x3764 x6015))))))
(define-fun x656 ((x6015 Int)) Int (ite (= x6668 x6015) 0 (x5614 x6015)))
(define-fun x8318 ((x6015 Int)) Int (ite (= x6015 x115) x1453 (x656 x6015)))
(define-fun x5947 ((x6015 Int)) Int (ite (= x6015 x4855) x6321 (x8318 x6015)))
(define-fun x3316 ((x6015 Int)) Int (ite (= x6015 x3725) x5679 (x5947 x6015)))
(define-fun x3700 ((x6015 Int)) Int (ite (= x2356 x6015) x4491 (x3316 x6015)))
(define-fun x3898 ((x6015 Int)) Int (ite (= x6015 x660) x8317 (x3700 x6015)))
(define-fun x7460 ((x6015 Int)) Int (ite (= x6015 x3782) x8284 (x3898 x6015)))
(define-fun x4327 ((x6015 Int)) Int (ite (= x6015 x3124) x4249 (x7460 x6015)))
(define-fun x3180 ((x6015 Int)) Int (ite x4582 (x7460 x6015) (ite x7240 (x3898 x6015) (ite x3858 (x3700 x6015) (ite x6059 (x3316 x6015) (x4327 x6015))))))
(define-fun x6724 ((x6015 Int)) Int (ite (= x6015 x7819) 0 (x3180 x6015)))
(define-fun x1249 ((x6015 Int)) Int (ite (= x7392 x6015) x6580 (x6724 x6015)))
(define-fun x2746 ((x6015 Int)) Int (ite (= x1619 x6015) x2504 (x1249 x6015)))
(define-fun x4461 ((x6015 Int)) Int (ite (= x8266 x6015) 150 (x2746 x6015)))
(define-fun x2151 ((x6015 Int)) Int (ite (and (<= x8478 x6015) (> (+ 150 x8478) x6015)) (x43 (- (+ x6015 x1092) x8478)) (x4461 x6015)))
(define-fun x651 ((x6015 Int)) Int (ite (and (< x6015 0) (>= x6015 0)) (x1750 x6015) (x2151 x6015)))
(define-fun x5590 ((x6015 Int)) Int (ite x4965 (x651 x6015) (x2151 x6015)))
(define-fun x4407 ((x6015 Int)) Int (ite (= x6015 x8266) x6448 (x5590 x6015)))
(define-fun x8485 ((x6015 Int)) Int (ite (and (< x6015 (+ x6448 x208)) (>= x6015 x208)) (x1750 (- x6015 x208)) (x4407 x6015)))
(define-fun x6229 ((x6015 Int)) Int (ite (= x6015 x6349) x4499 (x8485 x6015)))
(define-fun x1096 ((x6015 Int)) Int (ite (= x6015 x1725) x7915 (x6229 x6015)))
(define-fun x2330 ((x6015 Int)) Int (ite (= x141 x6015) x7091 (x1096 x6015)))
(define-fun x7256 ((x6015 Int)) Int (ite (= x2542 x6015) x4895 (x2330 x6015)))
(define-fun x7008 ((x6015 Int)) Int (ite x4811 (x2330 x6015) (ite x6495 (x1096 x6015) (ite x871 (x6229 x6015) (ite x5308 (x8485 x6015) (x7256 x6015))))))
(define-fun x1670 ((x6015 Int)) Int (ite (= x6015 x8527) 0 (x7008 x6015)))
(define-fun x7576 ((x6015 Int)) Int (ite (= x422 x6015) x1099 (x1670 x6015)))
(define-fun x2586 ((x6015 Int)) Int (ite (= x6349 x6015) x3627 (x7576 x6015)))
(define-fun x5951 ((x6015 Int)) Int (ite (= x6015 x1812) 160 (x2586 x6015)))
(define-fun x379 ((x6015 Int)) Int (ite (= x4673 x6015) x5065 (x5951 x6015)))
(define-fun x7423 ((x6015 Int)) Int (ite (= x1771 x6015) x1716 (x379 x6015)))
(define-fun x452 ((x6015 Int)) Int (ite (= x5485 x6015) x881 (x7423 x6015)))
(define-fun x6924 ((x6015 Int)) Int (ite (= x6015 x7491) x3881 (x452 x6015)))
(define-fun x838 ((x6015 Int)) Int (ite (= x3991 x6015) x4045 (x6924 x6015)))
(define-fun x878 ((x6015 Int)) Int (ite x8551 (x6924 x6015) (ite x6644 (x452 x6015) (ite x3609 (x7423 x6015) (ite x6602 (x379 x6015) (x838 x6015))))))
(define-fun x7986 ((x6015 Int)) Int (ite (= x1650 x6015) 0 (x878 x6015)))
(define-fun x3935 ((x6015 Int)) Int (ite (= x6015 x3968) x1453 (x7986 x6015)))
(define-fun x376 ((x6015 Int)) Int (ite (= x6015 x6195) x2143 (x3935 x6015)))
(define-fun x6565 ((x6015 Int)) Int (ite (= x6043 x6015) x6137 (x376 x6015)))
(define-fun x545 ((x6015 Int)) Int (ite (= x7182 x6015) x75 (x6565 x6015)))
(define-fun x8059 ((x6015 Int)) Int (ite (= x4483 x6015) x4090 (x545 x6015)))
(define-fun x5970 ((x6015 Int)) Int (ite (= x135 x6015) x8490 (x8059 x6015)))
(define-fun x2388 ((x6015 Int)) Int (ite (= x6015 x5580) x2443 (x5970 x6015)))
(define-fun x6218 ((x6015 Int)) Int (ite x7145 (x5970 x6015) (ite x8508 (x8059 x6015) (ite x3544 (x545 x6015) (ite x3855 (x6565 x6015) (x2388 x6015))))))
(define-fun x4164 ((x6015 Int)) Int (ite (= x6015 x7211) 0 (x6218 x6015)))
(define-fun x4236 ((x6015 Int)) Int (ite (= x6015 x757) x4240 (x4164 x6015)))
(define-fun x7558 ((x6015 Int)) Int (x4585 x6015))
(define-fun x5480 ((x6015 Int)) Int (x6878 x6015))
(define-fun x7062 ((x6015 Int)) Int (x7306 x6015))
(define-fun x4783 ((x6015 Int)) Int (x1889 x6015))
(define-fun x23 ((x6015 Int)) Int (x2784 x6015))
(define-fun x1592 ((x6015 Int)) Int (x370 x6015))
(define-fun x6458 ((x6015 Int)) Int (x2690 x6015))
(define-fun x2240 ((x6015 Int)) Int (x2629 x6015))
(define-fun x6101 ((x6015 Int)) Int (x1571 x6015))
(define-fun x1929 ((x6015 Int)) Int (x6128 x6015))
(define-fun x7266 ((x6015 Int)) Int (x2024 x6015))
(define-fun x7667 ((x6015 Int)) Int (x7156 x6015))
(define-fun x1108 ((x6015 Int)) Int (x4926 x6015))
(define-fun x3886 ((x6015 Int)) Int (x2047 x6015))
(define-fun x5145 ((x6015 Int)) Int (x6251 x6015))
(define-fun x2159 ((x6015 Int)) Int (x3068 x6015))
(define-fun x3794 ((x6015 Int)) Int (x3511 x6015))
(define-fun x5731 ((x6015 Int)) Int (x751 x6015))
(define-fun x277 ((x6015 Int)) Int (x2249 x6015))
(define-fun x7831 ((x6015 Int)) Int (x1404 x6015))
(define-fun x2055 ((x6015 Int)) Int (x1406 x6015))
(define-fun x5224 ((x6015 Int)) Int (x5963 x6015))
(define-fun x1597 ((x6015 Int)) Int (x4926 x6015))
(define-fun x7543 ((x6015 Int)) Int (x5963 x6015))
(define-fun x8424 ((x6015 Int)) Int (x1889 x6015))
(define-fun x4935 ((x6015 Int)) Int (x2024 x6015))
(define-fun x1953 ((x6015 Int)) Int (x2629 x6015))
(define-fun x2718 ((x6015 Int)) Int (x6251 x6015))
(define-fun x8039 ((x6015 Int)) Int (x1052 x6015))
(define-fun x2560 ((x6015 Int)) Int (x7156 x6015))
(define-fun x909 ((x6015 Int)) Int (x1571 x6015))
(define-fun x3177 ((x6015 Int)) Int (x2249 x6015))
(define-fun x3455 ((x6015 Int)) Int (x4585 x6015))
(define-fun x1651 ((x6015 Int)) Int (x6128 x6015))
(define-fun x855 ((x6015 Int)) Int (x3511 x6015))
(define-fun x1180 ((x6015 Int)) Int (x1406 x6015))
(define-fun x8291 ((x6015 Int)) Int (x2784 x6015))
(define-fun x5425 ((x6015 Int)) Int (x751 x6015))
(define-fun x1820 ((x6015 Int)) Int (x2047 x6015))
(define-fun x6987 ((x6015 Int)) Int (x2690 x6015))
(define-fun x5665 ((x6015 Int)) Int (x7306 x6015))
(define-fun x1023 ((x6015 Int)) Int (x370 x6015))
(define-fun x3786 ((x6015 Int)) Int (x6878 x6015))
(define-fun x6810 ((x6015 Int)) Int (x3068 x6015))
(define-fun x4426 ((x6015 Int)) Int (x1404 x6015))
(define-fun x1871 ((x6015 Int)) Int (ite x7292 (x8405 x6015) (x815 x6015)))
(define-fun x902 ((x6015 Int)) Int (ite (= 4 x6015) 33 (x6437 x6015)))
(define-fun x3336 ((x6015 Int)) Int (ite (and (< x6015 36) (>= x6015 0)) (x902 x6015) (x3676 x6015)))
(define-fun x6113 ((x6015 Int)) Int (ite (= x6015 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1853 x6015)))
(define-fun x7444 ((x6015 Int)) Int (ite (= x6015 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6113 x6015)))
(define-fun x1695 ((x6015 Int)) Int (ite (= 128 x6015) 64 (x7896 x6015)))
(define-fun x2900 ((x6015 Int)) Int (ite (= x6015 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x199 x6015)))
(define-fun x895 ((x6015 Int)) Int (ite (= x6015 258) x7597 (x2900 x6015)))
(define-fun x6026 ((x6015 Int)) Int (ite (= x6015 224) 34 (x3998 x6015)))
(define-fun x7055 ((x6015 Int)) Int (ite (= 290 x6015) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x6716 x6015)))
(define-fun x2693 ((x6015 Int)) Int (ite (= x6015 294) x6717 (x7055 x6015)))
(define-fun x5364 ((x6015 Int)) Int (ite (= 326 x6015) x1579 (x2693 x6015)))
(define-fun x2735 ((x6015 Int)) Int (ite (= x6015 358) 160 (x5364 x6015)))
(define-fun x5924 ((x6015 Int)) Int (ite (= 454 x6015) x733 (x2735 x6015)))
(define-fun x5358 ((x6015 Int)) Int (ite (and (>= x6015 486) (< x6015 (+ 486 x733))) (x7444 (- x6015 326)) (x5924 x6015)))
(define-fun x654 ((x6015 Int)) Int (ite (= x6015 390) 0 (x5358 x6015)))
(define-fun x5961 ((x6015 Int)) Int (ite (= 422 x6015) x3134 (x654 x6015)))
(define-fun x355 ((x6015 Int)) Int (ite (= x4887 x6015) x4904 (x5961 x6015)))
(define-fun x8061 ((x6015 Int)) Int (ite (and (>= x6015 x2631) (< x6015 (+ x4904 x2631))) (x895 (- (+ 256 x6015) x2631)) (x355 x6015)))
(define-fun x7181 ((x6015 Int)) Int (ite (and (> x7031 x6015) (>= x6015 292)) (x8061 (+ 290 x6015)) (x5219 x6015)))
(define-fun x1407 ((x6015 Int)) Int (ite (= 128 x6015) 0 (x2830 x6015)))
(define-fun x7296 ((x6015 Int)) Int (ite (= 160 x6015) 0 (x1407 x6015)))
(define-fun x4833 ((x6015 Int)) Int (ite (= 290 x6015) x1058 (x8061 x6015)))
(define-fun x2494 ((x6015 Int)) Int (ite (= 322 x6015) x4645 (x4833 x6015)))
(define-fun x3879 ((x6015 Int)) Int (ite (= x6015 0) x5851 (x3696 x6015)))
(define-fun x2940 ((x6015 Int)) Int (ite (= 32 x6015) x4768 (x3879 x6015)))
(define-fun x6004 ((x6015 Int)) Int (ite (= x6015 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x6437 x6015)))
(define-fun x3589 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 4)) (x6004 (+ x6015 128)) (x3676 x6015)))
(define-fun x1335 ((x6015 Int)) Int (ite (= 128 x6015) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x6437 x6015)))
(define-fun x1371 ((x6015 Int)) Int (ite (and (>= x6015 0) (> 4 x6015)) (x1335 (+ 128 x6015)) (x3676 x6015)))
(define-fun x3702 ((x6015 Int)) Int (ite (= x6015 548) x3001 (x7799 x6015)))
(define-fun x8225 ((x6015 Int)) Int (ite (= x6015 580) x4220 (x3702 x6015)))
(define-fun x6558 ((x6015 Int)) Int (ite (= x6015 548) x7064 (x7799 x6015)))
(define-fun x1089 ((x6015 Int)) Int (ite x6474 (x2242 x6015) (ite x4975 (ite x6481 (x3702 x6015) (x8225 x6015)) (x6558 x6015))))
(define-fun x6462 ((x6015 Int)) Int (ite (= 516 x6015) x2969 (x5469 x6015)))
(define-fun x2706 ((x6015 Int)) Int (ite (= x1456 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6437 x6015)))
(define-fun x8234 ((x6015 Int)) Int (ite (= x724 x6015) 32 (x2706 x6015)))
(define-fun x8219 ((x6015 Int)) Int (ite (= x6461 x6015) 48 (x8234 x6015)))
(define-fun x5824 ((x6015 Int)) Int (ite (= x4074 x6015) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x8219 x6015)))
(define-fun x3574 ((x6015 Int)) Int (ite (= x4490 x6015) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x5824 x6015)))
(define-fun x2787 ((x6015 Int)) Int (ite (and (< x6015 132) (>= x6015 0)) (x3574 (+ x1456 x6015)) (x3676 x6015)))
(define-fun x3972 ((x6015 Int)) Int (ite (= 354 x6015) 64 (x5695 x6015)))
(define-fun x7638 ((x6015 Int)) Int (ite (= x1456 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x6437 x6015)))
(define-fun x76 ((x6015 Int)) Int (ite (= x7155 x6015) 32 (x7638 x6015)))
(define-fun x7046 ((x6015 Int)) Int (ite (= x5495 x6015) 32 (x76 x6015)))
(define-fun x1123 ((x6015 Int)) Int (ite (= x6015 x3767) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x7046 x6015)))
(define-fun x3149 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 100)) (x1123 (+ x6015 x1456)) (x3676 x6015)))
(define-fun x8350 ((x6015 Int)) Int (ite x1245 (x8061 x6015) (x2494 x6015)))
(define-fun x4757 ((x6015 Int)) Int (ite (= x1456 x6015) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x8350 x6015)))
(define-fun x2534 ((x6015 Int)) Int (ite (= x6015 x8065) x6717 (x4757 x6015)))
(define-fun x7517 ((x6015 Int)) Int (ite (= x6015 x6353) 192 (x2534 x6015)))
(define-fun x8224 ((x6015 Int)) Int (ite (= x8215 x6015) x7620 (x7517 x6015)))
(define-fun x8134 ((x6015 Int)) Int (ite (and (< x6015 (+ x3301 x7620)) (<= x3301 x6015)) (x1089 (- (+ 548 x6015) x3301)) (x8224 x6015)))
(define-fun x2237 ((x6015 Int)) Int (ite (= x6015 x5420) x4098 (x8134 x6015)))
(define-fun x3796 ((x6015 Int)) Int (ite (= x6015 x8351) x5911 (x2237 x6015)))
(define-fun x1136 ((x6015 Int)) Int (ite (= 386 x6015) x3284 (x7129 x6015)))
(define-fun x8375 ((x6015 Int)) Int (ite (= x6015 418) x3354 (x1136 x6015)))
(define-fun x3111 ((x6015 Int)) Int (ite (and (>= x6015 x1370) (< x6015 (+ x1370 x5911))) (x8375 (- (+ 386 x6015) x1370)) (x3796 x6015)))
(define-fun x1667 ((x6015 Int)) Int (ite (= x6015 x6383) x1579 (x3111 x6015)))
(define-fun x7904 ((x6015 Int)) Int (ite (= x2392 x6015) 0 (x1667 x6015)))
(define-fun x4628 ((x6015 Int)) Int (ite (= x315 x6015) x6370 (x7904 x6015)))
(define-fun x5842 ((x6015 Int)) Int (ite (= 450 x6015) 34 (x6626 x6015)))
(define-fun x2847 ((x6015 Int)) Int (ite (= x6015 x6616) x5491 (x4628 x6015)))
(define-fun x1972 ((x6015 Int)) Int (ite (= 482 x6015) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x4726 x6015)))
(define-fun x5543 ((x6015 Int)) Int (ite (= x6015 484) x7597 (x1972 x6015)))
(define-fun x640 ((x6015 Int)) Int (ite (and (<= x8310 x6015) (< x6015 (+ x5491 x8310))) (x5543 (- (+ x6015 482) x8310)) (x2847 x6015)))
(define-fun x6912 ((x6015 Int)) Int (ite (and (< x6015 x647) (<= 228 x6015)) (x640 (- (+ x6015 (x7100 (+ 228 x1456))) 228)) (x6634 x6015)))
(define-fun x2739 ((x6015 Int)) Int 0)
(define-fun x2907 ((x6015 Int)) Int (x6878 x6015))
(define-fun x7365 ((x6015 Int)) Int (x815 x6015))
(define-fun x688 ((x6015 Int)) Int (x5963 x6015))
(define-fun x3404 ((x6015 Int)) Int (x7156 x6015))
(define-fun x6475 ((x6015 Int)) Int (x7306 x6015))
(define-fun x6614 ((x6015 Int)) Int (x6128 x6015))
(define-fun x8213 ((x6015 Int)) Int (x2249 x6015))
(define-fun x234 ((x6015 Int)) Int (x751 x6015))
(define-fun x4300 ((x6015 Int)) Int (x3068 x6015))
(define-fun x1339 ((x6015 Int)) Int (x1571 x6015))
(define-fun x1439 ((x6015 Int)) Int (x4585 x6015))
(define-fun x2962 ((x6015 Int)) Int (x3511 x6015))
(define-fun x221 ((x6015 Int)) Int (x4926 x6015))
(define-fun x4237 ((x6015 Int)) Int (x2784 x6015))
(define-fun x7098 ((x6015 Int)) Int (x2024 x6015))
(define-fun x7905 ((x6015 Int)) Int (x1404 x6015))
(define-fun x4883 ((x6015 Int)) Int (x1889 x6015))
(define-fun x7938 ((x6015 Int)) Int (x6251 x6015))
(define-fun x5406 ((x6015 Int)) Int (x2690 x6015))
(define-fun x1621 ((x6015 Int)) Int (x370 x6015))
(define-fun x3770 ((x6015 Int)) Int (x2047 x6015))
(define-fun x1314 ((x6015 Int)) Int (x2629 x6015))
(define-fun x7500 ((x6015 Int)) Int (x1052 x6015))
(define-fun x1363 ((x6015 Int)) Int (x1406 x6015))
(define-fun x4171 ((x6015 Int)) Int (x3486 x6015))
(define-fun x3775 ((x6015 Int)) Int (x4171 x6015))
(define-fun x1804 ((x6015 Int)) Int (x7527 x6015))
(define-fun x7017 ((x6015 Int)) Int (x1804 x6015))
(define-fun x6177 ((x6015 Int)) Int (x6639 x6015))
(define-fun x6111 ((x6015 Int)) Int (x6177 x6015))
(define-fun x7588 ((x6015 Int)) Int (x5593 x6015))
(define-fun x1505 ((x6015 Int)) Int (x7588 x6015))
(define-fun x1556 ((x6015 Int)) Int (x1568 x6015))
(define-fun x7174 ((x6015 Int)) Int (x1556 x6015))
(define-fun x2701 ((x6015 Int)) Int (x2711 x6015))
(define-fun x4275 ((x6015 Int)) Int (x2701 x6015))
(define-fun x7051 ((x6015 Int)) Int (x2075 x6015))
(define-fun x110 ((x6015 Int)) Int (x7051 x6015))
(define-fun x649 ((x6015 Int)) Int (x6863 x6015))
(define-fun x5341 ((x6015 Int)) Int (x649 x6015))
(define-fun x3347 ((x6015 Int)) Int (x5278 x6015))
(define-fun x4940 ((x6015 Int)) Int (x3347 x6015))
(define-fun x3587 ((x6015 Int)) Int (x8479 x6015))
(define-fun x2397 ((x6015 Int)) Int (x3587 x6015))
(define-fun x7074 ((x6015 Int)) Int (x3394 x6015))
(define-fun x5132 ((x6015 Int)) Int (x7074 x6015))
(define-fun x1649 ((x6015 Int)) Int (x7196 x6015))
(define-fun x1196 ((x6015 Int)) Int (x1649 x6015))
(define-fun x3326 ((x6015 Int)) Int (x4307 x6015))
(define-fun x6790 ((x6015 Int)) Int (x3326 x6015))
(define-fun x5023 ((x6015 Int)) Int (x3207 x6015))
(define-fun x4353 ((x6015 Int)) Int (x5023 x6015))
(define-fun x4504 ((x6015 Int)) Int (x7665 x6015))
(define-fun x35 ((x6015 Int)) Int (x4504 x6015))
(define-fun x5557 ((x6015 Int)) Int (x4740 x6015))
(define-fun x5277 ((x6015 Int)) Int (x5557 x6015))
(define-fun x7990 ((x6015 Int)) Int (x8204 x6015))
(define-fun x5916 ((x6015 Int)) Int (x7990 x6015))
(define-fun x4617 ((x6015 Int)) Int (x2793 x6015))
(define-fun x2527 ((x6015 Int)) Int (x4617 x6015))
(define-fun x7250 ((x6015 Int)) Int (x7249 x6015))
(define-fun x2291 ((x6015 Int)) Int (x7250 x6015))
(define-fun x3245 ((x6015 Int)) Int (x6772 x6015))
(define-fun x1405 ((x6015 Int)) Int (x3245 x6015))
(define-fun x143 ((x6015 Int)) Int (x1052 x6015))
(define-fun x5127 ((x6015 Int)) Int (x143 x6015))
(define-fun x5068 ((x6015 Int)) Int (x7032 x6015))
(define-fun x1547 ((x6015 Int)) Int (x5068 x6015))
(define-fun x6526 ((x6015 Int)) Int (x5189 x6015))
(define-fun x3795 ((x6015 Int)) Int (x6526 x6015))
(define-fun x887 ((x6015 Int)) Int (x815 x6015))
(define-fun x2828 ((x6015 Int)) Int (x8405 x6015))
(define-fun x2381 ((x6015 Int)) Int (ite x1245 (x3696 x6015) (x2940 x6015)))
(define-fun x354 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 x4110)) (x2381 x6015) (x6437 x6015)))
(define-fun x3877 ((x6015 Int)) Int (ite (and (> x4110 x6015) (>= x6015 0)) (x354 x6015) (x3676 x6015)))
(define-fun x3526 ((x6015 Int)) Int (ite (and (< x6015 354) (<= 290 x6015)) (x2381 (- x6015 290)) (x7681 x6015)))
(define-fun x1358 ((x6015 Int)) Int (ite (= x6015 4) 34 (x6437 x6015)))
(define-fun x8000 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x1358 x6015) (x3676 x6015)))
(define-fun x6348 ((x6015 Int)) Int (x3511 x6015))
(define-fun x3571 ((x6015 Int)) Int (x370 x6015))
(define-fun x7930 ((x6015 Int)) Int (x2629 x6015))
(define-fun x21 ((x6015 Int)) Int (x4926 x6015))
(define-fun x1886 ((x6015 Int)) Int (x1406 x6015))
(define-fun x505 ((x6015 Int)) Int (x7306 x6015))
(define-fun x6129 ((x6015 Int)) Int (x2249 x6015))
(define-fun x1562 ((x6015 Int)) Int (x2024 x6015))
(define-fun x5433 ((x6015 Int)) Int (x2047 x6015))
(define-fun x8126 ((x6015 Int)) Int (x7248 x6015))
(define-fun x7121 ((x6015 Int)) Int (x1889 x6015))
(define-fun x6540 ((x6015 Int)) Int (x5963 x6015))
(define-fun x2520 ((x6015 Int)) Int (x6878 x6015))
(define-fun x3802 ((x6015 Int)) Int (x3068 x6015))
(define-fun x7903 ((x6015 Int)) Int (x6128 x6015))
(define-fun x1487 ((x6015 Int)) Int (x1404 x6015))
(define-fun x231 ((x6015 Int)) Int (x2690 x6015))
(define-fun x2483 ((x6015 Int)) Int (x4585 x6015))
(define-fun x6431 ((x6015 Int)) Int (x7156 x6015))
(define-fun x5346 ((x6015 Int)) Int (x6251 x6015))
(define-fun x3384 ((x6015 Int)) Int (x751 x6015))
(define-fun x775 ((x6015 Int)) Int (x2784 x6015))
(define-fun x7414 ((x6015 Int)) Int (x1571 x6015))
(define-fun x8412 ((x6015 Int)) Int (ite (= 160 x6015) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x7065 x6015)))
(define-fun x8400 ((x6015 Int)) Int (ite (= x6015 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x8412 x6015)))
(define-fun x2238 ((x6015 Int)) Int (ite (= x6015 128) 64 (x3062 x6015)))
(define-fun x2393 ((x6015 Int)) Int (ite (= 256 x6015) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x8032 x6015)))
(define-fun x8277 ((x6015 Int)) Int (ite (= 258 x6015) x549 (x2393 x6015)))
(define-fun x7202 ((x6015 Int)) Int (ite (= x6015 224) 34 (x3635 x6015)))
(define-fun x3698 ((x6015 Int)) Int (ite (= x6015 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x1402 x6015)))
(define-fun x246 ((x6015 Int)) Int (ite (= x6015 294) x6717 (x3698 x6015)))
(define-fun x3006 ((x6015 Int)) Int (ite (= 326 x6015) x1579 (x246 x6015)))
(define-fun x4825 ((x6015 Int)) Int (ite (= 358 x6015) 160 (x3006 x6015)))
(define-fun x409 ((x6015 Int)) Int (ite (= x6015 454) x874 (x4825 x6015)))
(define-fun x7435 ((x6015 Int)) Int (ite (and (> (+ x874 486) x6015) (>= x6015 486)) (x8400 (- x6015 326)) (x409 x6015)))
(define-fun x184 ((x6015 Int)) Int (ite (= x6015 390) 0 (x7435 x6015)))
(define-fun x7958 ((x6015 Int)) Int (ite (= 422 x6015) x2235 (x184 x6015)))
(define-fun x606 ((x6015 Int)) Int (ite (= x6015 x1711) x4795 (x7958 x6015)))
(define-fun x2180 ((x6015 Int)) Int (ite (and (< x6015 (+ x3783 x4795)) (<= x3783 x6015)) (x8277 (- (+ 256 x6015) x3783)) (x606 x6015)))
(define-fun x8557 ((x6015 Int)) Int (ite (and (>= x6015 292) (< x6015 x1890)) (x2180 (+ x6015 290)) (x3202 x6015)))
(define-fun x3883 ((x6015 Int)) Int (ite (= x6015 128) 0 (x1981 x6015)))
(define-fun x2278 ((x6015 Int)) Int (ite (= x6015 160) 0 (x3883 x6015)))
(define-fun x6757 ((x6015 Int)) Int (ite (= x6015 290) x4380 (x2180 x6015)))
(define-fun x5022 ((x6015 Int)) Int (ite (= x6015 322) x3173 (x6757 x6015)))
(define-fun x1978 ((x6015 Int)) Int (x5593 x6015))
(define-fun x1727 ((x6015 Int)) Int (x3486 x6015))
(define-fun x8407 ((x6015 Int)) Int (x6639 x6015))
(define-fun x497 ((x6015 Int)) Int (x2711 x6015))
(define-fun x2276 ((x6015 Int)) Int (x1568 x6015))
(define-fun x7731 ((x6015 Int)) Int (x5278 x6015))
(define-fun x8073 ((x6015 Int)) Int (x3394 x6015))
(define-fun x3005 ((x6015 Int)) Int (x7665 x6015))
(define-fun x7591 ((x6015 Int)) Int (x6863 x6015))
(define-fun x1627 ((x6015 Int)) Int (x4307 x6015))
(define-fun x7508 ((x6015 Int)) Int (x2075 x6015))
(define-fun x5252 ((x6015 Int)) Int (x8479 x6015))
(define-fun x6288 ((x6015 Int)) Int (x7032 x6015))
(define-fun x1237 ((x6015 Int)) Int (x3207 x6015))
(define-fun x3291 ((x6015 Int)) Int (x7196 x6015))
(define-fun x4376 ((x6015 Int)) Int (x1675 x6015))
(define-fun x2802 ((x6015 Int)) Int (x5189 x6015))
(define-fun x1490 ((x6015 Int)) Int (x4740 x6015))
(define-fun x7218 ((x6015 Int)) Int (x8204 x6015))
(define-fun x6040 ((x6015 Int)) Int (ite x4038 (ite x8525 (x2180 x6015) (x5022 x6015)) (x4685 x6015)))
(define-fun x4351 ((x6015 Int)) Int (x7527 x6015))
(define-fun x1224 ((x6015 Int)) Int (x7249 x6015))
(define-fun x6972 ((x6015 Int)) Int (x2793 x6015))
(define-fun x3085 ((x6015 Int)) Int (x6031 x6015))
(define-fun x4310 ((x6015 Int)) Int (x6772 x6015))
(define-fun x924 ((x6015 Int)) Int (ite (= x6015 x7068) x3512 (x7860 x6015)))
(define-fun x5018 ((x6015 Int)) Int (ite (= x5937 x6015) x5055 (x924 x6015)))
(define-fun x666 ((x6015 Int)) Int (ite (= x7142 x6015) x5833 (x1760 x6015)))
(define-fun x1317 ((x6015 Int)) Int (ite (= x6015 x736) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x3763 x6015)))
(define-fun x6520 ((x6015 Int)) Int (ite (= x2473 x6015) x549 (x1317 x6015)))
(define-fun x3194 ((x6015 Int)) Int (ite (= x6015 x3611) x3831 (x4280 x6015)))
(define-fun x5492 ((x6015 Int)) Int (ite (= x6015 x4000) x7616 (x1401 x6015)))
(define-fun x8504 ((x6015 Int)) Int (ite (= x5887 x6015) x2456 (x2754 x6015)))
(define-fun x7642 ((x6015 Int)) Int (ite (= x2559 x6015) x2705 (x8504 x6015)))
(define-fun x1514 ((x6015 Int)) Int (ite (= x6015 x5887) x2066 (x2754 x6015)))
(define-fun x1961 ((x6015 Int)) Int (ite x237 (x5556 x6015) (ite x3882 (ite x3686 (x8504 x6015) (x7642 x6015)) (x1514 x6015))))
(define-fun x5040 ((x6015 Int)) Int (ite (= x1662 x6015) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x6040 x6015)))
(define-fun x6196 ((x6015 Int)) Int (ite (= x5702 x6015) x6717 (x5040 x6015)))
(define-fun x4829 ((x6015 Int)) Int (ite (= x5953 x6015) 192 (x6196 x6015)))
(define-fun x7212 ((x6015 Int)) Int (ite (= x6798 x6015) x5664 (x4829 x6015)))
(define-fun x5110 ((x6015 Int)) Int (ite (and (< x6015 (+ x5664 x5617)) (>= x6015 x5617)) (x1961 (- (+ x6015 x5887) x5617)) (x7212 x6015)))
(define-fun x3435 ((x6015 Int)) Int (ite (= x1993 x6015) x3666 (x5110 x6015)))
(define-fun x759 ((x6015 Int)) Int (ite (= x6015 x7097) x5207 (x3435 x6015)))
(define-fun x3457 ((x6015 Int)) Int (ite (and (>= x6015 x859) (< x6015 (+ x5207 x859))) (x5018 (- (+ x6015 x6494) x859)) (x759 x6015)))
(define-fun x5112 ((x6015 Int)) Int (ite (= x4838 x6015) x1579 (x3457 x6015)))
(define-fun x6016 ((x6015 Int)) Int (ite (= x7730 x6015) 0 (x5112 x6015)))
(define-fun x5143 ((x6015 Int)) Int (ite (= x6015 x7899) x2775 (x6016 x6015)))
(define-fun x1897 ((x6015 Int)) Int (ite (= x6015 x2956) x6408 (x5143 x6015)))
(define-fun x2340 ((x6015 Int)) Int (ite (and (<= x4022 x6015) (> (+ x4022 x6408) x6015)) (x6520 (- (+ x6015 x2633) x4022)) (x1897 x6015)))
(define-fun x6051 ((x6015 Int)) Int (ite (and (> x6888 x6015) (<= 228 x6015)) (x2340 (- (+ (x7100 (+ 228 x1662)) x6015) 228)) (x6240 x6015)))
(define-fun x585 ((x6015 Int)) Int 0)
(define-fun x1837 ((x6015 Int)) Int (x2784 x6015))
(define-fun x4993 ((x6015 Int)) Int (x2024 x6015))
(define-fun x2391 ((x6015 Int)) Int (x2690 x6015))
(define-fun x2136 ((x6015 Int)) Int (x981 x6015))
(define-fun x3681 ((x6015 Int)) Int (x4585 x6015))
(define-fun x2936 ((x6015 Int)) Int (x7248 x6015))
(define-fun x1826 ((x6015 Int)) Int (x370 x6015))
(define-fun x7496 ((x6015 Int)) Int (x6878 x6015))
(define-fun x2908 ((x6015 Int)) Int (x4926 x6015))
(define-fun x4357 ((x6015 Int)) Int (x1889 x6015))
(define-fun x6467 ((x6015 Int)) Int (x1406 x6015))
(define-fun x8074 ((x6015 Int)) Int (x6128 x6015))
(define-fun x2138 ((x6015 Int)) Int (x6251 x6015))
(define-fun x6554 ((x6015 Int)) Int (x7306 x6015))
(define-fun x5340 ((x6015 Int)) Int (x1571 x6015))
(define-fun x3573 ((x6015 Int)) Int (x751 x6015))
(define-fun x2673 ((x6015 Int)) Int (x2249 x6015))
(define-fun x2818 ((x6015 Int)) Int (x2629 x6015))
(define-fun x8019 ((x6015 Int)) Int (x3068 x6015))
(define-fun x2707 ((x6015 Int)) Int (x7156 x6015))
(define-fun x2041 ((x6015 Int)) Int (x2047 x6015))
(define-fun x779 ((x6015 Int)) Int (x3511 x6015))
(define-fun x4500 ((x6015 Int)) Int (x1404 x6015))
(define-fun x5876 ((x6015 Int)) Int (x5963 x6015))
(define-fun x4028 ((x6015 Int)) Int (x1627 x6015))
(define-fun x5650 ((x6015 Int)) Int (x981 x6015))
(define-fun x3411 ((x6015 Int)) Int (x5252 x6015))
(define-fun x8486 ((x6015 Int)) Int (x497 x6015))
(define-fun x3749 ((x6015 Int)) Int (x2802 x6015))
(define-fun x761 ((x6015 Int)) Int (x1237 x6015))
(define-fun x4558 ((x6015 Int)) Int (x8407 x6015))
(define-fun x1583 ((x6015 Int)) Int (x6972 x6015))
(define-fun x46 ((x6015 Int)) Int (x1490 x6015))
(define-fun x6112 ((x6015 Int)) Int (x7218 x6015))
(define-fun x746 ((x6015 Int)) Int (x2276 x6015))
(define-fun x5599 ((x6015 Int)) Int (x6288 x6015))
(define-fun x6778 ((x6015 Int)) Int (x7731 x6015))
(define-fun x4024 ((x6015 Int)) Int (x7508 x6015))
(define-fun x2681 ((x6015 Int)) Int (x8073 x6015))
(define-fun x7594 ((x6015 Int)) Int (x4351 x6015))
(define-fun x3919 ((x6015 Int)) Int (x3005 x6015))
(define-fun x6103 ((x6015 Int)) Int (x1224 x6015))
(define-fun x1498 ((x6015 Int)) Int (x7591 x6015))
(define-fun x4304 ((x6015 Int)) Int (x4310 x6015))
(define-fun x2526 ((x6015 Int)) Int (x4376 x6015))
(define-fun x4372 ((x6015 Int)) Int (x1978 x6015))
(define-fun x7079 ((x6015 Int)) Int (x3291 x6015))
(define-fun x2656 ((x6015 Int)) Int (x1727 x6015))
(define-fun x1321 ((x6015 Int)) Int (x7527 x6015))
(define-fun x365 ((x6015 Int)) Int (x3486 x6015))
(define-fun x1458 ((x6015 Int)) Int (x5593 x6015))
(define-fun x8554 ((x6015 Int)) Int (x6639 x6015))
(define-fun x5198 ((x6015 Int)) Int (x2711 x6015))
(define-fun x3249 ((x6015 Int)) Int (x6863 x6015))
(define-fun x2654 ((x6015 Int)) Int (x1568 x6015))
(define-fun x4782 ((x6015 Int)) Int (x3394 x6015))
(define-fun x2967 ((x6015 Int)) Int (x5278 x6015))
(define-fun x1611 ((x6015 Int)) Int (x7665 x6015))
(define-fun x8308 ((x6015 Int)) Int (x2075 x6015))
(define-fun x7134 ((x6015 Int)) Int (x8479 x6015))
(define-fun x5390 ((x6015 Int)) Int (x7196 x6015))
(define-fun x2749 ((x6015 Int)) Int (x3207 x6015))
(define-fun x7488 ((x6015 Int)) Int (x1675 x6015))
(define-fun x4540 ((x6015 Int)) Int (x5189 x6015))
(define-fun x2097 ((x6015 Int)) Int (x4307 x6015))
(define-fun x5262 ((x6015 Int)) Int (x4740 x6015))
(define-fun x1141 ((x6015 Int)) Int (x8204 x6015))
(define-fun x1637 ((x6015 Int)) Int (x6772 x6015))
(define-fun x4705 ((x6015 Int)) Int (x7249 x6015))
(define-fun x7617 ((x6015 Int)) Int (x2793 x6015))
(define-fun x6615 ((x6015 Int)) Int (x7032 x6015))
(define-fun x6342 ((x6015 Int)) Int (x6031 x6015))
(define-fun x7520 ((x6015 Int)) Int (ite (and (< x6015 354) (<= 290 x6015)) (x5091 (- x6015 290)) (x3828 x6015)))
(define-fun x1908 ((x6015 Int)) Int (x7665 x6015))
(define-fun x6446 ((x6015 Int)) Int (x6031 x6015))
(define-fun x937 ((x6015 Int)) Int (x6772 x6015))
(define-fun x1798 ((x6015 Int)) Int (x1675 x6015))
(define-fun x800 ((x6015 Int)) Int (x1568 x6015))
(define-fun x8044 ((x6015 Int)) Int (x2075 x6015))
(define-fun x8365 ((x6015 Int)) Int (x6863 x6015))
(define-fun x1162 ((x6015 Int)) Int (x8479 x6015))
(define-fun x4941 ((x6015 Int)) Int (x6639 x6015))
(define-fun x1102 ((x6015 Int)) Int (x3394 x6015))
(define-fun x5377 ((x6015 Int)) Int (ite x7025 (x7306 x6015) (x4947 x6015)))
(define-fun x7817 ((x6015 Int)) Int (ite x7025 (x370 x6015) (x3428 x6015)))
(define-fun x2671 ((x6015 Int)) Int (ite x7025 (x2784 x6015) (x4710 x6015)))
(define-fun x6152 ((x6015 Int)) Int (ite x7025 (x4926 x6015) (x8372 x6015)))
(define-fun x4679 ((x6015 Int)) Int (ite x7025 (x2690 x6015) (x4418 x6015)))
(define-fun x3398 ((x6015 Int)) Int (ite x7025 (x1406 x6015) (x2624 x6015)))
(define-fun x4696 ((x6015 Int)) Int (ite x7025 (x6251 x6015) (x7339 x6015)))
(define-fun x1726 ((x6015 Int)) Int (ite x7025 (x6878 x6015) (x24 x6015)))
(define-fun x8518 ((x6015 Int)) Int (ite x7025 (x2249 x6015) (x4432 x6015)))
(define-fun x3624 ((x6015 Int)) Int (ite x7025 (x1889 x6015) (x6625 x6015)))
(define-fun x7906 ((x6015 Int)) Int (ite x7025 (x5963 x6015) (x6953 x6015)))
(define-fun x1184 ((x6015 Int)) Int (ite x7025 (x1571 x6015) (x8458 x6015)))
(define-fun x8214 ((x6015 Int)) Int (ite x7025 (x2629 x6015) (x3475 x6015)))
(define-fun x4979 ((x6015 Int)) Int (ite x7025 (x2024 x6015) (x4087 x6015)))
(define-fun x4967 ((x6015 Int)) Int (x6031 x6015))
(define-fun x535 ((x6015 Int)) Int (x1675 x6015))
(define-fun x8420 ((x6015 Int)) Int (x8479 x6015))
(define-fun x4103 ((x6015 Int)) Int (x4307 x6015))
(define-fun x1973 ((x6015 Int)) Int (x6639 x6015))
(define-fun x1517 ((x6015 Int)) Int (x7032 x6015))
(define-fun x2518 ((x6015 Int)) Int (x1568 x6015))
(define-fun x3278 ((x6015 Int)) Int (x3207 x6015))
(define-fun x6931 ((x6015 Int)) Int (x2793 x6015))
(define-fun x4008 ((x6015 Int)) Int (x8204 x6015))
(define-fun x1776 ((x6015 Int)) Int (x2711 x6015))
(define-fun x7595 ((x6015 Int)) Int (x4740 x6015))
(define-fun x6216 ((x6015 Int)) Int (x6863 x6015))
(define-fun x7910 ((x6015 Int)) Int (x6772 x6015))
(define-fun x7914 ((x6015 Int)) Int (x5278 x6015))
(define-fun x2060 ((x6015 Int)) Int (x7665 x6015))
(define-fun x1357 ((x6015 Int)) Int (x2075 x6015))
(define-fun x8029 ((x6015 Int)) Int (x7249 x6015))
(define-fun x5995 ((x6015 Int)) Int (x3394 x6015))
(define-fun x4395 ((x6015 Int)) Int (x5189 x6015))
(define-fun x1883 ((x6015 Int)) Int (x5593 x6015))
(define-fun x8016 ((x6015 Int)) Int (x3486 x6015))
(define-fun x7033 ((x6015 Int)) Int (x7527 x6015))
(define-fun x6631 ((x6015 Int)) Int (x7196 x6015))
(define-fun x5038 ((x6015 Int)) Int (x8204 x6015))
(define-fun x4053 ((x6015 Int)) Int (x4307 x6015))
(define-fun x8364 ((x6015 Int)) Int (x2075 x6015))
(define-fun x918 ((x6015 Int)) Int (x7665 x6015))
(define-fun x4876 ((x6015 Int)) Int (x2711 x6015))
(define-fun x2015 ((x6015 Int)) Int (x6772 x6015))
(define-fun x6887 ((x6015 Int)) Int (x4740 x6015))
(define-fun x3019 ((x6015 Int)) Int (x1675 x6015))
(define-fun x8087 ((x6015 Int)) Int (x3207 x6015))
(define-fun x2214 ((x6015 Int)) Int (x6031 x6015))
(define-fun x5102 ((x6015 Int)) Int (x5189 x6015))
(define-fun x1477 ((x6015 Int)) Int (x7196 x6015))
(define-fun x8135 ((x6015 Int)) Int (x7032 x6015))
(define-fun x2708 ((x6015 Int)) Int (x6639 x6015))
(define-fun x4319 ((x6015 Int)) Int (x5278 x6015))
(define-fun x559 ((x6015 Int)) Int (x7249 x6015))
(define-fun x3894 ((x6015 Int)) Int (x1568 x6015))
(define-fun x5821 ((x6015 Int)) Int (x3486 x6015))
(define-fun x4527 ((x6015 Int)) Int (x3394 x6015))
(define-fun x1860 ((x6015 Int)) Int (x8479 x6015))
(define-fun x6357 ((x6015 Int)) Int (x2793 x6015))
(define-fun x1560 ((x6015 Int)) Int (x6863 x6015))
(define-fun x1712 ((x6015 Int)) Int (x7527 x6015))
(define-fun x8445 ((x6015 Int)) Int (x3392 x6015))
(define-fun x737 ((x6015 Int)) Int (x4457 x6015))
(define-fun x2156 ((x6015 Int)) Int (ite x5049 (x5733 x6015) (ite x5859 (x5733 x6015) (ite x5983 (x5733 x6015) (ite x7480 (x5733 x6015) (ite x4658 (x5733 x6015) (ite x4434 (x5733 x6015) (ite x6507 (x5733 x6015) (ite x5651 (x5327 x6015) (x5733 x6015))))))))))
(define-fun x7089 ((x6015 Int)) Int (ite x5049 (x5754 x6015) (ite x5859 (x5754 x6015) (ite x5983 (x5754 x6015) (ite x7480 (x5754 x6015) (ite x4658 (x5754 x6015) (ite x4434 (x5754 x6015) (ite x6507 (x5754 x6015) (ite x5651 (x2168 x6015) (x5754 x6015))))))))))
(define-fun x264 ((x6015 Int)) Int (ite x7673 (x7135 x6015) (x3582 x6015)))
(define-fun x4055 ((x6015 Int)) Int (ite x420 (x3582 x6015) (ite x1864 (x264 x6015) (ite x5269 (x264 x6015) (x3582 x6015)))))
(define-fun x4371 ((x6015 Int)) Int (ite x6371 (x3582 x6015) (ite x6834 (x3582 x6015) (x4055 x6015))))
(define-fun x4761 ((x6015 Int)) Int (ite x1142 (ite x4403 (x4371 x6015) (x3582 x6015)) (x3582 x6015)))
(define-fun x6719 ((x6015 Int)) Int (ite x2785 (x3582 x6015) (ite x479 (x1118 x6015) (x3582 x6015))))
(define-fun x1131 ((x6015 Int)) Int (ite x1833 (ite x953 (x4761 x6015) (x6719 x6015)) (x3582 x6015)))
(define-fun x1403 ((x6015 Int)) Int (x3392 x6015))
(define-fun x980 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5658 ((x6015 Int)) Int (ite x953 (x4761 x6015) (x6719 x6015)))
(define-fun x399 ((x6015 Int)) Int (x4457 x6015))
(define-fun x7261 ((x6015 Int)) Int (x3392 x6015))
(define-fun x6538 ((x6015 Int)) Int (ite x953 (x8211 x6015) (x5733 x6015)))
(define-fun x5605 ((x6015 Int)) Int (ite x953 (x1777 x6015) (x5754 x6015)))
(define-fun x271 ((x6015 Int)) Int (x3392 x6015))
(define-fun x2664 ((x6015 Int)) Int (x4457 x6015))
(define-fun x7547 ((x6015 Int)) Int (x5733 x6015))
(define-fun x6750 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5004 ((x6015 Int)) Int (x3392 x6015))
(define-fun x2161 ((x6015 Int)) Int (x3582 x6015))
(define-fun x1126 ((x6015 Int)) Int (x5733 x6015))
(define-fun x829 ((x6015 Int)) Int (ite x4403 (x4371 x6015) (x3582 x6015)))
(define-fun x6242 ((x6015 Int)) Int (x4457 x6015))
(define-fun x8397 ((x6015 Int)) Int (x3392 x6015))
(define-fun x490 ((x6015 Int)) Int (ite x4403 (x5754 x6015) (x982 x6015)))
(define-fun x2902 ((x6015 Int)) Int (x5733 x6015))
(define-fun x7723 ((x6015 Int)) Int (x5754 x6015))
(define-fun x3436 ((x6015 Int)) Int (x4457 x6015))
(define-fun x3897 ((x6015 Int)) Int (x3392 x6015))
(define-fun x3418 ((x6015 Int)) Int (x3582 x6015))
(define-fun x4306 ((x6015 Int)) Int (x5754 x6015))
(define-fun x5303 ((x6015 Int)) Int (x5733 x6015))
(define-fun x5667 ((x6015 Int)) Int (x4457 x6015))
(define-fun x734 ((x6015 Int)) Int (x3392 x6015))
(define-fun x3359 ((x6015 Int)) Int (ite (= x6015 x3521) x244 (x5769 x6015)))
(define-fun x1441 ((x6015 Int)) Int (ite (= x6015 x685) x5753 (x3359 x6015)))
(define-fun x6945 ((x6015 Int)) Int (ite (and (>= x6015 128) (< x6015 (+ x565 128))) (x2455 (+ x6015 36)) (x8503 x6015)))
(define-fun x3501 ((x6015 Int)) Int (ite (= x4092 x6015) 0 (x6945 x6015)))
(define-fun x4063 ((x6015 Int)) Int (ite (= x6015 x4877) x966 (x3501 x6015)))
(define-fun x3059 ((x6015 Int)) Int (ite (= x5822 x6015) 0 (x3211 x6015)))
(define-fun x839 ((x6015 Int)) Int (ite (= x6015 128) x565 (x4063 x6015)))
(define-fun x7041 ((x6015 Int)) Int (ite (and (>= x6015 160) (> (+ 160 x565) x6015)) (x2455 (+ x6015 4)) (x839 x6015)))
(define-fun x4649 ((x6015 Int)) Int (ite (= x7755 x6015) 0 (x7041 x6015)))
(define-fun x3840 ((x6015 Int)) Int (ite (= x4817 x6015) x171 (x4649 x6015)))
(define-fun x7936 ((x6015 Int)) Int (ite (and (<= x510 x6015) (> (+ x171 x510) x6015)) (x2455 (- (+ x2530 x6015) x510)) (x3840 x6015)))
(define-fun x6276 ((x6015 Int)) Int (ite (= x2464 x6015) 0 (x7936 x6015)))
(define-fun x7431 ((x6015 Int)) Int (ite x8466 (ite x4954 (x6902 x6015) (x975 x6015)) (x3004 x6015)))
(define-fun x5858 ((x6015 Int)) Int (ite (= x6015 196) x5057 (x7431 x6015)))
(define-fun x8181 ((x6015 Int)) Int (ite (= 228 x6015) x8534 (x5858 x6015)))
(define-fun x4961 ((x6015 Int)) Int (ite (= x6015 x3299) x2659 (x8181 x6015)))
(define-fun x997 ((x6015 Int)) Int (ite (= x5884 x6015) x808 (x4961 x6015)))
(define-fun x6667 ((x6015 Int)) Int (ite (= x5884 x6015) x6097 (x4961 x6015)))
(define-fun x4374 ((x6015 Int)) Int (ite x3009 (ite x3011 (x4961 x6015) (x6667 x6015)) (x997 x6015)))
(define-fun x2115 ((x6015 Int)) Int (ite (and (> x6165 x6015) (<= 164 x6015)) (x4374 (+ 128 x6015)) (x6267 x6015)))
(define-fun x2639 ((x6015 Int)) Int (ite (= x6015 x8091) x4471 (x574 x6015)))
(define-fun x1647 ((x6015 Int)) Int (ite (and (> (+ x5175 x4471) x6015) (>= x6015 x5175)) (x2115 (- (+ x6015 x3948) x5175)) (x1697 x6015)))
(define-fun x3186 ((x6015 Int)) Int (ite (= x6015 x5100) 0 (x1647 x6015)))
(define-fun x2683 ((x6015 Int)) Int (x3582 x6015))
(define-fun x1977 ((x6015 Int)) Int (x3392 x6015))
(define-fun x6052 ((x6015 Int)) Int (x4457 x6015))
(define-fun x8132 ((x6015 Int)) Int (x5754 x6015))
(define-fun x4653 ((x6015 Int)) Int (x5733 x6015))
(define-fun x5075 ((x6015 Int)) Int (x5754 x6015))
(define-fun x883 ((x6015 Int)) Int (x5733 x6015))
(define-fun x3022 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5727 ((x6015 Int)) Int (x3392 x6015))
(define-fun x4419 ((x6015 Int)) Int (ite (= x6015 x5569) x4598 (x5319 x6015)))
(define-fun x4603 ((x6015 Int)) Int (ite (and (> (+ x4427 x4598) x6015) (>= x6015 x4427)) (x2130 (- (+ x6015 164) x4427)) (x4419 x6015)))
(define-fun x2996 ((x6015 Int)) Int (ite (= x6015 x6889) 0 (x4603 x6015)))
(define-fun x3827 ((x6015 Int)) Int (ite (= x6015 x5493) x3604 (x2996 x6015)))
(define-fun x4760 ((x6015 Int)) Int (ite (and (< x6015 (+ x3604 x3539)) (>= x6015 x3539)) (x2130 (- (+ x5896 x6015) x3539)) (x3827 x6015)))
(define-fun x3742 ((x6015 Int)) Int (ite (= x6015 x5609) 0 (x4760 x6015)))
(define-fun x955 ((x6015 Int)) Int (ite (= x6015 x1744) x3533 (x3742 x6015)))
(define-fun x2170 ((x6015 Int)) Int (ite (= x7741 x6015) 128 (x955 x6015)))
(define-fun x4206 ((x6015 Int)) Int (ite (= x6015 x2509) x1824 (x2170 x6015)))
(define-fun x2650 ((x6015 Int)) Int (ite (= x6015 x6819) x6310 (x4206 x6015)))
(define-fun x7284 ((x6015 Int)) Int (ite (= x5969 x6015) x2493 (x2650 x6015)))
(define-fun x1353 ((x6015 Int)) Int (ite (= x4136 x6015) x2226 (x7284 x6015)))
(define-fun x5784 ((x6015 Int)) Int (ite (= x6015 x1554) x3689 (x1353 x6015)))
(define-fun x658 ((x6015 Int)) Int (ite x2329 (x1353 x6015) (ite x4988 (x7284 x6015) (ite x2862 (x2650 x6015) (ite x2937 (x4206 x6015) (x5784 x6015))))))
(define-fun x3954 ((x6015 Int)) Int (ite (= x6015 x6239) 0 (x658 x6015)))
(define-fun x6816 ((x6015 Int)) Int (ite (= x6015 x6393) x26 (x3954 x6015)))
(define-fun x5882 ((x6015 Int)) Int (ite (= x6015 x1251) x7736 (x6816 x6015)))
(define-fun x7381 ((x6015 Int)) Int (ite (= x6015 x650) x1832 (x5882 x6015)))
(define-fun x5044 ((x6015 Int)) Int (ite (= x6015 x2995) x2604 (x7381 x6015)))
(define-fun x6021 ((x6015 Int)) Int (ite (= x6015 x1783) x3227 (x5044 x6015)))
(define-fun x2570 ((x6015 Int)) Int (ite (= x6015 x942) x6962 (x6021 x6015)))
(define-fun x1795 ((x6015 Int)) Int (ite (= x5843 x6015) x3889 (x2570 x6015)))
(define-fun x2636 ((x6015 Int)) Int (ite x6873 (x2570 x6015) (ite x2435 (x6021 x6015) (ite x5161 (x5044 x6015) (ite x867 (x7381 x6015) (x1795 x6015))))))
(define-fun x6503 ((x6015 Int)) Int (ite (= x8468 x6015) 0 (x2636 x6015)))
(define-fun x8239 ((x6015 Int)) Int (ite (= x4704 x6015) x5302 (x6503 x6015)))
(define-fun x6295 ((x6015 Int)) Int (ite (= x5909 x6015) x6476 (x8239 x6015)))
(define-fun x5739 ((x6015 Int)) Int (ite (= x5553 x6015) 150 (x6295 x6015)))
(define-fun x4481 ((x6015 Int)) Int (ite (and (<= x4826 x6015) (< x6015 (+ x4826 150))) (x2130 (- (+ x6015 x6106) x4826)) (x5739 x6015)))
(define-fun x7396 ((x6015 Int)) Int (ite (and (< x6015 0) (>= x6015 0)) (x5466 x6015) (x4481 x6015)))
(define-fun x2125 ((x6015 Int)) Int (ite x479 (x7396 x6015) (x4481 x6015)))
(define-fun x2373 ((x6015 Int)) Int (ite (= x6015 x5553) x4394 (x2125 x6015)))
(define-fun x2757 ((x6015 Int)) Int (ite (and (<= x6086 x6015) (< x6015 (+ x6086 x4394))) (x5466 (- x6015 x6086)) (x2373 x6015)))
(define-fun x3946 ((x6015 Int)) Int (ite (= x6015 x5541) x7877 (x2757 x6015)))
(define-fun x1094 ((x6015 Int)) Int (ite (= x5917 x6015) x8199 (x3946 x6015)))
(define-fun x1691 ((x6015 Int)) Int (ite (= x318 x6015) x2196 (x1094 x6015)))
(define-fun x5168 ((x6015 Int)) Int (ite (= x6015 x2815) x5088 (x1691 x6015)))
(define-fun x5011 ((x6015 Int)) Int (ite x5027 (x1691 x6015) (ite x4842 (x1094 x6015) (ite x1692 (x3946 x6015) (ite x8108 (x2757 x6015) (x5168 x6015))))))
(define-fun x8292 ((x6015 Int)) Int (ite (= x5196 x6015) 0 (x5011 x6015)))
(define-fun x8363 ((x6015 Int)) Int (ite (= x6015 x6208) x1443 (x8292 x6015)))
(define-fun x2987 ((x6015 Int)) Int (ite (= x6015 x5541) x3533 (x8363 x6015)))
(define-fun x4243 ((x6015 Int)) Int (ite (= x3757 x6015) 160 (x2987 x6015)))
(define-fun x4860 ((x6015 Int)) Int (ite (= x6015 x5047) x635 (x4243 x6015)))
(define-fun x405 ((x6015 Int)) Int (ite (= x7023 x6015) x7815 (x4860 x6015)))
(define-fun x6219 ((x6015 Int)) Int (ite (= x1476 x6015) x3904 (x405 x6015)))
(define-fun x7058 ((x6015 Int)) Int (ite (= x6701 x6015) x5600 (x6219 x6015)))
(define-fun x63 ((x6015 Int)) Int (ite (= x6015 x7159) x1176 (x7058 x6015)))
(define-fun x2077 ((x6015 Int)) Int (ite x5444 (x7058 x6015) (ite x8275 (x6219 x6015) (ite x4577 (x405 x6015) (ite x5849 (x4860 x6015) (x63 x6015))))))
(define-fun x1338 ((x6015 Int)) Int (ite (= x4567 x6015) 0 (x2077 x6015)))
(define-fun x5155 ((x6015 Int)) Int (ite (= x5535 x6015) x26 (x1338 x6015)))
(define-fun x7961 ((x6015 Int)) Int (ite (= x1852 x6015) x7928 (x5155 x6015)))
(define-fun x7587 ((x6015 Int)) Int (ite (= x6081 x6015) x6007 (x7961 x6015)))
(define-fun x6385 ((x6015 Int)) Int (ite (= x6938 x6015) x3806 (x7587 x6015)))
(define-fun x7332 ((x6015 Int)) Int (ite (= x7425 x6015) x846 (x6385 x6015)))
(define-fun x2434 ((x6015 Int)) Int (ite (= x6015 x5213) x7153 (x7332 x6015)))
(define-fun x1280 ((x6015 Int)) Int (ite (= x6015 x713) x465 (x2434 x6015)))
(define-fun x3013 ((x6015 Int)) Int (ite x2012 (x2434 x6015) (ite x5028 (x7332 x6015) (ite x374 (x6385 x6015) (ite x5404 (x7587 x6015) (x1280 x6015))))))
(define-fun x5786 ((x6015 Int)) Int (ite (= x4498 x6015) 0 (x3013 x6015)))
(define-fun x273 ((x6015 Int)) Int (ite (= x7461 x6015) x2776 (x5786 x6015)))
(define-fun x152 ((x6015 Int)) Int (ite (= x1305 x6015) x7301 (x3211 x6015)))
(define-fun x7424 ((x6015 Int)) Int (x3392 x6015))
(define-fun x447 ((x6015 Int)) Int (ite x4160 (x5733 x6015) (x540 x6015)))
(define-fun x4112 ((x6015 Int)) Int (x4457 x6015))
(define-fun x4968 ((x6015 Int)) Int (x3582 x6015))
(define-fun x5317 ((x6015 Int)) Int (ite x4160 (x5754 x6015) (x2536 x6015)))
(define-fun x5286 ((x6015 Int)) Int (x3392 x6015))
(define-fun x2376 ((x6015 Int)) Int (x3582 x6015))
(define-fun x3200 ((x6015 Int)) Int (x4457 x6015))
(define-fun x267 ((x6015 Int)) Int (x540 x6015))
(define-fun x5034 ((x6015 Int)) Int (ite (= 4 x6015) 33 (x4822 x6015)))
(define-fun x309 ((x6015 Int)) Int (ite (and (< x6015 36) (<= 0 x6015)) (x5034 x6015) (x821 x6015)))
(define-fun x468 ((x6015 Int)) Int (ite (= 160 x6015) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1541 x6015)))
(define-fun x7766 ((x6015 Int)) Int (ite (= x6015 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x468 x6015)))
(define-fun x2927 ((x6015 Int)) Int (ite (= 128 x6015) 64 (x7045 x6015)))
(define-fun x8526 ((x6015 Int)) Int (ite (= 256 x6015) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1613 x6015)))
(define-fun x3169 ((x6015 Int)) Int (ite (= x6015 258) x8077 (x8526 x6015)))
(define-fun x2288 ((x6015 Int)) Int (ite (= 224 x6015) 34 (x5339 x6015)))
(define-fun x3122 ((x6015 Int)) Int (ite (= x6015 290) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x3983 x6015)))
(define-fun x1980 ((x6015 Int)) Int (ite (= 294 x6015) x7048 (x3122 x6015)))
(define-fun x5154 ((x6015 Int)) Int (ite (= 326 x6015) x1579 (x1980 x6015)))
(define-fun x4797 ((x6015 Int)) Int (ite (= 358 x6015) 160 (x5154 x6015)))
(define-fun x7944 ((x6015 Int)) Int (ite (= 454 x6015) x7856 (x4797 x6015)))
(define-fun x4791 ((x6015 Int)) Int (ite (and (< x6015 (+ 486 x7856)) (<= 486 x6015)) (x7766 (- x6015 326)) (x7944 x6015)))
(define-fun x3346 ((x6015 Int)) Int (ite (= x6015 390) 0 (x4791 x6015)))
(define-fun x6792 ((x6015 Int)) Int (ite (= 422 x6015) x3168 (x3346 x6015)))
(define-fun x3712 ((x6015 Int)) Int (ite (= x6015 x7697) x5126 (x6792 x6015)))
(define-fun x2127 ((x6015 Int)) Int (ite (and (<= x7001 x6015) (> (+ x5126 x7001) x6015)) (x3169 (- (+ x6015 256) x7001)) (x3712 x6015)))
(define-fun x7151 ((x6015 Int)) Int (ite (and (< x6015 x4289) (>= x6015 292)) (x2127 (+ 290 x6015)) (x7917 x6015)))
(define-fun x6780 ((x6015 Int)) Int (ite (= x6015 128) 0 (x5417 x6015)))
(define-fun x3184 ((x6015 Int)) Int (ite (= x6015 160) 0 (x6780 x6015)))
(define-fun x2696 ((x6015 Int)) Int (ite (= 290 x6015) x2191 (x2127 x6015)))
(define-fun x4278 ((x6015 Int)) Int (ite (= x6015 322) x6994 (x2696 x6015)))
(define-fun x2260 ((x6015 Int)) Int (ite (= x6015 0) x6709 (x5715 x6015)))
(define-fun x2640 ((x6015 Int)) Int (ite (= 32 x6015) x8391 (x2260 x6015)))
(define-fun x3993 ((x6015 Int)) Int (ite (= x6015 128) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x4822 x6015)))
(define-fun x5649 ((x6015 Int)) Int (ite (and (< x6015 4) (>= x6015 0)) (x3993 (+ x6015 128)) (x821 x6015)))
(define-fun x5402 ((x6015 Int)) Int (ite (= x6015 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x4822 x6015)))
(define-fun x2544 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 4)) (x5402 (+ x6015 128)) (x821 x6015)))
(define-fun x5162 ((x6015 Int)) Int (ite (= 548 x6015) x7192 (x6783 x6015)))
(define-fun x5904 ((x6015 Int)) Int (ite (= 580 x6015) x1287 (x5162 x6015)))
(define-fun x6119 ((x6015 Int)) Int (ite (= x6015 548) x1723 (x6783 x6015)))
(define-fun x823 ((x6015 Int)) Int (ite x2630 (x8544 x6015) (ite x6907 (ite x3324 (x5162 x6015) (x5904 x6015)) (x6119 x6015))))
(define-fun x5181 ((x6015 Int)) Int (ite (= 516 x6015) x625 (x1297 x6015)))
(define-fun x2423 ((x6015 Int)) Int (ite (= x6015 x834) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4822 x6015)))
(define-fun x3203 ((x6015 Int)) Int (ite (= x6015 x5300) 32 (x2423 x6015)))
(define-fun x3305 ((x6015 Int)) Int (ite (= x865 x6015) 48 (x3203 x6015)))
(define-fun x7050 ((x6015 Int)) Int (ite (= x6015 x1659) 34591783479076665047274362116096262703299809091723987870014818727818681087008 (x3305 x6015)))
(define-fun x7978 ((x6015 Int)) Int (ite (= x8227 x6015) 43931689107028929153831073962459296230956404255593708771276734084804920737792 (x7050 x6015)))
(define-fun x4396 ((x6015 Int)) Int (ite (and (> 132 x6015) (<= 0 x6015)) (x7978 (+ x6015 x834)) (x821 x6015)))
(define-fun x1915 ((x6015 Int)) Int (ite (= 354 x6015) 64 (x398 x6015)))
(define-fun x2660 ((x6015 Int)) Int (ite (= x834 x6015) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4822 x6015)))
(define-fun x3690 ((x6015 Int)) Int (ite (= x7872 x6015) 32 (x2660 x6015)))
(define-fun x3695 ((x6015 Int)) Int (ite (= x6015 x4871) 32 (x3690 x6015)))
(define-fun x3910 ((x6015 Int)) Int (ite (= x6015 x1544) 34591783479076665122502074927488338969190252781858077677016911635275368785765 (x3695 x6015)))
(define-fun x388 ((x6015 Int)) Int (ite (and (< x6015 100) (>= x6015 0)) (x3910 (+ x834 x6015)) (x821 x6015)))
(define-fun x3117 ((x6015 Int)) Int (ite x6293 (x2127 x6015) (x4278 x6015)))
(define-fun x7711 ((x6015 Int)) Int (ite (= x834 x6015) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x3117 x6015)))
(define-fun x5800 ((x6015 Int)) Int (ite (= x6015 x2691) x7048 (x7711 x6015)))
(define-fun x1080 ((x6015 Int)) Int (ite (= x6015 x1625) 192 (x5800 x6015)))
(define-fun x4678 ((x6015 Int)) Int (ite (= x6015 x7572) x743 (x1080 x6015)))
(define-fun x8531 ((x6015 Int)) Int (ite (and (<= x5777 x6015) (< x6015 (+ x743 x5777))) (x823 (- (+ x6015 548) x5777)) (x4678 x6015)))
(define-fun x3619 ((x6015 Int)) Int (ite (= x6015 x2488) x7627 (x8531 x6015)))
(define-fun x1819 ((x6015 Int)) Int (ite (= x4840 x6015) x3600 (x3619 x6015)))
(define-fun x5071 ((x6015 Int)) Int (ite (= x6015 386) x2621 (x4211 x6015)))
(define-fun x573 ((x6015 Int)) Int (ite (= x6015 418) x3090 (x5071 x6015)))
(define-fun x2531 ((x6015 Int)) Int (ite (and (> (+ x1598 x3600) x6015) (<= x1598 x6015)) (x573 (- (+ 386 x6015) x1598)) (x1819 x6015)))
(define-fun x8280 ((x6015 Int)) Int (ite (= x832 x6015) x1579 (x2531 x6015)))
(define-fun x6301 ((x6015 Int)) Int (ite (= x6015 x4153) 0 (x8280 x6015)))
(define-fun x7080 ((x6015 Int)) Int (ite (= x6015 x8216) x8258 (x6301 x6015)))
(define-fun x5578 ((x6015 Int)) Int (ite (= x6015 450) 34 (x3289 x6015)))
(define-fun x2874 ((x6015 Int)) Int (ite (= x5101 x6015) x3519 (x7080 x6015)))
(define-fun x3682 ((x6015 Int)) Int (ite (= 482 x6015) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x5943 x6015)))
(define-fun x1165 ((x6015 Int)) Int (ite (= x6015 484) x8077 (x3682 x6015)))
(define-fun x1168 ((x6015 Int)) Int (ite (and (<= x4853 x6015) (< x6015 (+ x4853 x3519))) (x1165 (- (+ x6015 482) x4853)) (x2874 x6015)))
(define-fun x2017 ((x6015 Int)) Int (ite (= x6015 x1579) x3724 (x5769 x6015)))
(define-fun x1239 ((x6015 Int)) Int (ite (= x3481 x6015) x3484 (x2017 x6015)))
(define-fun x1217 ((x6015 Int)) Int (ite (and (> x3477 x6015) (<= 228 x6015)) (x1168 (- (+ x6015 (x7100 (+ x834 228))) 228)) (x2965 x6015)))
(define-fun x2110 ((x6015 Int)) Int 0)
(define-fun x1782 ((x6015 Int)) Int (x5622 x6015))
(define-fun x7478 ((x6015 Int)) Int (x3582 x6015))
(define-fun x872 ((x6015 Int)) Int (x3392 x6015))
(define-fun x3799 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5035 ((x6015 Int)) Int (x540 x6015))
(define-fun x2501 ((x6015 Int)) Int (x5622 x6015))
(define-fun x4284 ((x6015 Int)) Int (x3582 x6015))
(define-fun x6630 ((x6015 Int)) Int (x4284 x6015))
(define-fun x1729 ((x6015 Int)) Int (x3392 x6015))
(define-fun x2563 ((x6015 Int)) Int (x1729 x6015))
(define-fun x628 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5033 ((x6015 Int)) Int (x628 x6015))
(define-fun x581 ((x6015 Int)) Int (x540 x6015))
(define-fun x3451 ((x6015 Int)) Int (x581 x6015))
(define-fun x8413 ((x6015 Int)) Int (ite (= x6015 x3481) x38 (x1239 x6015)))
(define-fun x2812 ((x6015 Int)) Int (x5394 x6015))
(define-fun x2919 ((x6015 Int)) Int (x3211 x6015))
(define-fun x5270 ((x6015 Int)) Int (x4459 x6015))
(define-fun x946 ((x6015 Int)) Int (x763 x6015))
(define-fun x4389 ((x6015 Int)) Int (x5233 x6015))
(define-fun x7913 ((x6015 Int)) Int (x6394 x6015))
(define-fun x3066 ((x6015 Int)) Int (x7870 x6015))
(define-fun x3801 ((x6015 Int)) Int (x5922 x6015))
(define-fun x1247 ((x6015 Int)) Int (x5524 x6015))
(define-fun x5129 ((x6015 Int)) Int (x1008 x6015))
(define-fun x2106 ((x6015 Int)) Int (x6484 x6015))
(define-fun x2359 ((x6015 Int)) Int (x7511 x6015))
(define-fun x1350 ((x6015 Int)) Int (x3320 x6015))
(define-fun x1050 ((x6015 Int)) Int (x4692 x6015))
(define-fun x445 ((x6015 Int)) Int (x7446 x6015))
(define-fun x6573 ((x6015 Int)) Int (x5443 x6015))
(define-fun x5458 ((x6015 Int)) Int (x3999 x6015))
(define-fun x786 ((x6015 Int)) Int (x1399 x6015))
(define-fun x5461 ((x6015 Int)) Int (x5762 x6015))
(define-fun x2971 ((x6015 Int)) Int (x3657 x6015))
(define-fun x3668 ((x6015 Int)) Int (ite x6293 (x5715 x6015) (x2640 x6015)))
(define-fun x1526 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 x4033)) (x3668 x6015) (x4822 x6015)))
(define-fun x6412 ((x6015 Int)) Int (ite (and (<= 0 x6015) (> x4033 x6015)) (x1526 x6015) (x821 x6015)))
(define-fun x3255 ((x6015 Int)) Int (ite (and (> 354 x6015) (>= x6015 290)) (x3668 (- x6015 290)) (x3482 x6015)))
(define-fun x4733 ((x6015 Int)) Int (ite (= x6015 4) 34 (x4822 x6015)))
(define-fun x4739 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 36)) (x4733 x6015) (x821 x6015)))
(define-fun x4556 ((x6015 Int)) Int (ite (= x6015 x1579) x4646 (x6736 x6015)))
(define-fun x3727 ((x6015 Int)) Int (ite (= x2997 x6015) x7754 (x4556 x6015)))
(define-fun x4292 ((x6015 Int)) Int (ite (= x6015 x2997) x2227 (x3727 x6015)))
(define-fun x903 ((x6015 Int)) Int (ite (= x6015 x1579) x4035 (x4292 x6015)))
(define-fun x6245 ((x6015 Int)) Int (ite x6212 (x6736 x6015) (ite x5248 (x3727 x6015) (ite x6975 (x903 x6015) (x6736 x6015)))))
(define-fun x7300 ((x6015 Int)) Int (x4457 x6015))
(define-fun x5324 ((x6015 Int)) Int (x3392 x6015))
(define-fun x1034 ((x6015 Int)) Int (x3582 x6015))
(define-fun x6304 ((x6015 Int)) Int (x5733 x6015))
(define-fun x1318 ((x6015 Int)) Int (ite x6212 (x5754 x6015) (x7533 x6015)))
(define-fun x4875 ((x6015 Int)) Int (ite (= x685 x6015) x6934 (x6245 x6015)))
(define-fun x6264 ((x6015 Int)) Int (ite (= x6015 160) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1903 x6015)))
(define-fun x1699 ((x6015 Int)) Int (ite (= x6015 192) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6264 x6015)))
(define-fun x4971 ((x6015 Int)) Int (ite (= x6015 128) 64 (x3913 x6015)))
(define-fun x4006 ((x6015 Int)) Int (ite (= x6015 256) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x7668 x6015)))
(define-fun x7388 ((x6015 Int)) Int (ite (= 258 x6015) x4320 (x4006 x6015)))
(define-fun x552 ((x6015 Int)) Int (ite (= x6015 224) 34 (x3905 x6015)))
(define-fun x1448 ((x6015 Int)) Int (ite (= 290 x6015) 29244376827073035548771643948814531551534385112760475998805679327281764368384 (x4964 x6015)))
(define-fun x8436 ((x6015 Int)) Int (ite (= 294 x6015) x7048 (x1448 x6015)))
(define-fun x7082 ((x6015 Int)) Int (ite (= 326 x6015) x1579 (x8436 x6015)))
(define-fun x94 ((x6015 Int)) Int (ite (= x6015 358) 160 (x7082 x6015)))
(define-fun x1648 ((x6015 Int)) Int (ite (= x6015 454) x6613 (x94 x6015)))
(define-fun x1823 ((x6015 Int)) Int (ite (and (>= x6015 486) (< x6015 (+ 486 x6613))) (x1699 (- x6015 326)) (x1648 x6015)))
(define-fun x1703 ((x6015 Int)) Int (ite (= x6015 390) 0 (x1823 x6015)))
(define-fun x8050 ((x6015 Int)) Int (ite (= x6015 422) x2915 (x1703 x6015)))
(define-fun x6121 ((x6015 Int)) Int (ite (= x6015 x2484) x4166 (x8050 x6015)))
(define-fun x4799 ((x6015 Int)) Int (ite (and (< x6015 (+ x4166 x8033)) (>= x6015 x8033)) (x7388 (- (+ x6015 256) x8033)) (x6121 x6015)))
(define-fun x862 ((x6015 Int)) Int (ite (and (<= 292 x6015) (< x6015 x4515)) (x4799 (+ 290 x6015)) (x4254 x6015)))
(define-fun x5712 ((x6015 Int)) Int (ite (= x6015 128) 0 (x772 x6015)))
(define-fun x4349 ((x6015 Int)) Int (ite (= x6015 160) 0 (x5712 x6015)))
(define-fun x5505 ((x6015 Int)) Int (ite (= 290 x6015) x2441 (x4799 x6015)))
(define-fun x2287 ((x6015 Int)) Int (ite (= x6015 322) x7101 (x5505 x6015)))
(define-fun x3634 ((x6015 Int)) Int (x4457 x6015))
(define-fun x8402 ((x6015 Int)) Int (x1399 x6015))
(define-fun x1838 ((x6015 Int)) Int (x5394 x6015))
(define-fun x2449 ((x6015 Int)) Int (x3320 x6015))
(define-fun x418 ((x6015 Int)) Int (ite x1681 (ite x7823 (x4799 x6015) (x2287 x6015)) (x4018 x6015)))
(define-fun x5263 ((x6015 Int)) Int (x763 x6015))
(define-fun x3317 ((x6015 Int)) Int (x5524 x6015))
(define-fun x8552 ((x6015 Int)) Int (x5443 x6015))
(define-fun x6940 ((x6015 Int)) Int (x6394 x6015))
(define-fun x8451 ((x6015 Int)) Int (x3999 x6015))
(define-fun x1610 ((x6015 Int)) Int (x7870 x6015))
(define-fun x2716 ((x6015 Int)) Int (x3582 x6015))
(define-fun x2275 ((x6015 Int)) Int (x5733 x6015))
(define-fun x5996 ((x6015 Int)) Int (x5762 x6015))
(define-fun x6655 ((x6015 Int)) Int (x5754 x6015))
(define-fun x4015 ((x6015 Int)) Int (x3392 x6015))
(define-fun x1125 ((x6015 Int)) Int (x5233 x6015))
(define-fun x2543 ((x6015 Int)) Int (x7511 x6015))
(define-fun x3588 ((x6015 Int)) Int (x1008 x6015))
(define-fun x7260 ((x6015 Int)) Int (x7446 x6015))
(define-fun x4997 ((x6015 Int)) Int (x5922 x6015))
(define-fun x1879 ((x6015 Int)) Int (x4459 x6015))
(define-fun x7180 ((x6015 Int)) Int (x3211 x6015))
(define-fun x2676 ((x6015 Int)) Int (x4692 x6015))
(define-fun x558 ((x6015 Int)) Int (x3657 x6015))
(define-fun x2058 ((x6015 Int)) Int (ite (= x4959 x6015) x4749 (x3077 x6015)))
(define-fun x7908 ((x6015 Int)) Int (ite (= x6015 x1229) x4276 (x2058 x6015)))
(define-fun x1689 ((x6015 Int)) Int (ite (= x2477 x6015) x6261 (x1495 x6015)))
(define-fun x7340 ((x6015 Int)) Int (ite (= x6015 x5696) 1766847064778384329583297500742918515827483896875618958121606201292619776 (x6509 x6015)))
(define-fun x5111 ((x6015 Int)) Int (ite (= x2217 x6015) x4320 (x7340 x6015)))
(define-fun x8546 ((x6015 Int)) Int (ite (= x6015 x5908) x2792 (x7646 x6015)))
(define-fun x5177 ((x6015 Int)) Int (ite (= x7005 x6015) x5165 (x8415 x6015)))
(define-fun x7836 ((x6015 Int)) Int (ite (= x6015 x3131) x7971 (x3303 x6015)))
(define-fun x3892 ((x6015 Int)) Int (ite (= x3534 x6015) x6919 (x7836 x6015)))
(define-fun x5158 ((x6015 Int)) Int (ite (= x6015 x3131) x4046 (x3303 x6015)))
(define-fun x1870 ((x6015 Int)) Int (ite x4257 (x495 x6015) (ite x803 (ite x5379 (x7836 x6015) (x3892 x6015)) (x5158 x6015))))
(define-fun x2896 ((x6015 Int)) Int (ite (= x6015 x5348) 89332125780766104441357105940599211734484755930370930871569612501041822040064 (x418 x6015)))
(define-fun x3750 ((x6015 Int)) Int (ite (= x6015 x1110) x7048 (x2896 x6015)))
(define-fun x6068 ((x6015 Int)) Int (ite (= x6015 x2182) 192 (x3750 x6015)))
(define-fun x7670 ((x6015 Int)) Int (ite (= x6015 x440) x6388 (x6068 x6015)))
(define-fun x6228 ((x6015 Int)) Int (ite (and (<= x5642 x6015) (< x6015 (+ x6388 x5642))) (x1870 (- (+ x3131 x6015) x5642)) (x7670 x6015)))
(define-fun x6977 ((x6015 Int)) Int (ite (= x6015 x3970) x8121 (x6228 x6015)))
(define-fun x7691 ((x6015 Int)) Int (ite (= x6015 x2502) x6151 (x6977 x6015)))
(define-fun x4765 ((x6015 Int)) Int (ite (and (>= x6015 x1904) (< x6015 (+ x6151 x1904))) (x7908 (- (+ x7399 x6015) x1904)) (x7691 x6015)))
(define-fun x1848 ((x6015 Int)) Int (ite (= x6015 x3916) x1579 (x4765 x6015)))
(define-fun x575 ((x6015 Int)) Int (ite (= x1491 x6015) 0 (x1848 x6015)))
(define-fun x507 ((x6015 Int)) Int (ite (= x6015 x7052) x4387 (x575 x6015)))
(define-fun x1181 ((x6015 Int)) Int (ite (= x8411 x6015) x2428 (x507 x6015)))
(define-fun x5992 ((x6015 Int)) Int (ite (and (<= x6925 x6015) (< x6015 (+ x6925 x2428))) (x5111 (- (+ x6015 x7861) x6925)) (x1181 x6015)))
(define-fun x4267 ((x6015 Int)) Int (ite (and (< x6015 x1250) (<= 228 x6015)) (x5992 (- (+ x6015 (x7100 (+ x5348 228))) 228)) (x3492 x6015)))
(define-fun x3930 ((x6015 Int)) Int 0)
(define-fun x5561 ((x6015 Int)) Int (x7533 x6015))
(define-fun x95 ((x6015 Int)) Int (x3582 x6015))
(define-fun x957 ((x6015 Int)) Int (x5733 x6015))
(define-fun x2090 ((x6015 Int)) Int (x3392 x6015))
(define-fun x187 ((x6015 Int)) Int (x4457 x6015))
(define-fun x7885 ((x6015 Int)) Int (x2275 x6015))
(define-fun x3525 ((x6015 Int)) Int (x7533 x6015))
(define-fun x6963 ((x6015 Int)) Int (x2716 x6015))
(define-fun x1468 ((x6015 Int)) Int (x3634 x6015))
(define-fun x2992 ((x6015 Int)) Int (x4015 x6015))
(define-fun x1580 ((x6015 Int)) Int (x4457 x6015))
(define-fun x326 ((x6015 Int)) Int (x5524 x6015))
(define-fun x6528 ((x6015 Int)) Int (x1399 x6015))
(define-fun x4835 ((x6015 Int)) Int (x5394 x6015))
(define-fun x224 ((x6015 Int)) Int (x5733 x6015))
(define-fun x2764 ((x6015 Int)) Int (x3320 x6015))
(define-fun x4562 ((x6015 Int)) Int (x6394 x6015))
(define-fun x8146 ((x6015 Int)) Int (x763 x6015))
(define-fun x6981 ((x6015 Int)) Int (x5443 x6015))
(define-fun x6339 ((x6015 Int)) Int (x3582 x6015))
(define-fun x5775 ((x6015 Int)) Int (x3999 x6015))
(define-fun x6584 ((x6015 Int)) Int (x5754 x6015))
(define-fun x250 ((x6015 Int)) Int (x7870 x6015))
(define-fun x993 ((x6015 Int)) Int (x5762 x6015))
(define-fun x4978 ((x6015 Int)) Int (x3392 x6015))
(define-fun x5484 ((x6015 Int)) Int (x5233 x6015))
(define-fun x8034 ((x6015 Int)) Int (x7511 x6015))
(define-fun x3785 ((x6015 Int)) Int (x7446 x6015))
(define-fun x25 ((x6015 Int)) Int (x4692 x6015))
(define-fun x2297 ((x6015 Int)) Int (x1008 x6015))
(define-fun x2008 ((x6015 Int)) Int (x3211 x6015))
(define-fun x7263 ((x6015 Int)) Int (x4459 x6015))
(define-fun x4769 ((x6015 Int)) Int (x3657 x6015))
(define-fun x2955 ((x6015 Int)) Int (x5922 x6015))
(define-fun x7166 ((x6015 Int)) Int (ite (and (<= 290 x6015) (> 354 x6015)) (x4815 (- x6015 290)) (x6102 x6015)))
(define-fun x2448 ((x6015 Int)) Int (ite x6834 (x3582 x6015) (x4055 x6015)))
(define-fun x611 ((x6015 Int)) Int (x5733 x6015))
(define-fun x6531 ((x6015 Int)) Int (x5754 x6015))
(define-fun x294 ((x6015 Int)) Int (x3392 x6015))
(define-fun x4944 ((x6015 Int)) Int (x4457 x6015))
(define-fun x4699 ((x6015 Int)) Int (ite x1864 (x264 x6015) (ite x5269 (x264 x6015) (x3582 x6015))))
(define-fun x556 ((x6015 Int)) Int (x5754 x6015))
(define-fun x251 ((x6015 Int)) Int (x3582 x6015))
(define-fun x4753 ((x6015 Int)) Int (x5733 x6015))
(define-fun x5584 ((x6015 Int)) Int (x3392 x6015))
(define-fun x5625 ((x6015 Int)) Int (x4457 x6015))
(define-fun x2910 ((x6015 Int)) Int (x3392 x6015))
(define-fun x2779 ((x6015 Int)) Int (x5733 x6015))
(define-fun x386 ((x6015 Int)) Int (x4457 x6015))
(define-fun x3343 ((x6015 Int)) Int (x5754 x6015))
(define-fun x1173 ((x6015 Int)) Int (ite (= x6015 x3110) x3902 (x3320 x6015)))
(define-fun x5979 ((x6015 Int)) Int (ite (= x4836 x6015) x7923 (x5524 x6015)))
(define-fun x3039 ((x6015 Int)) Int (ite (= x5387 x6015) x1579 (x5443 x6015)))
(define-fun x7190 ((x6015 Int)) Int (ite x3735 (x2394 x6015) (x7306 x6015)))
(define-fun x2290 ((x6015 Int)) Int (ite x3735 (x5645 x6015) (x2690 x6015)))
(define-fun x6093 ((x6015 Int)) Int (ite x3735 (x4168 x6015) (x4926 x6015)))
(define-fun x3996 ((x6015 Int)) Int (ite x3735 (x3610 x6015) (x2784 x6015)))
(define-fun x4093 ((x6015 Int)) Int (ite x3735 (x3518 x6015) (x1406 x6015)))
(define-fun x5381 ((x6015 Int)) Int (ite x3735 (x4718 x6015) (x6878 x6015)))
(define-fun x4921 ((x6015 Int)) Int (ite x3735 (x7624 x6015) (x6251 x6015)))
(define-fun x2020 ((x6015 Int)) Int (ite x3735 (x5361 x6015) (x370 x6015)))
(define-fun x4798 ((x6015 Int)) Int (ite x3735 (x6407 x6015) (x1571 x6015)))
(define-fun x7494 ((x6015 Int)) Int (ite x3735 (x169 x6015) (x2249 x6015)))
(define-fun x4297 ((x6015 Int)) Int (ite x3735 (x2903 x6015) (x5963 x6015)))
(define-fun x8226 ((x6015 Int)) Int (ite x3735 (x4315 x6015) (x2629 x6015)))
(define-fun x8368 ((x6015 Int)) Int (ite x3735 (x3959 x6015) (x1889 x6015)))
(define-fun x6078 ((x6015 Int)) Int (ite x3735 (x2046 x6015) (x2024 x6015)))
(define-fun x6122 ((x6015 Int)) Int (ite x479 (x1118 x6015) (x3582 x6015)))
(define-fun x6055 ((x6015 Int)) Int (ite x7673 (x3878 x6015) (x2476 x6015)))
(define-fun x1671 ((x6015 Int)) Int (ite (= x6015 x4404) x7408 (x6055 x6015)))
(define-fun x5273 ((x6015 Int)) Int (ite x5202 (x551 x6015) (x7841 x6015)))
(define-fun x6444 ((x6015 Int)) Int (ite (and (> 160 x6015) (<= 128 x6015)) (x5273 (- x6015 128)) (x4803 x6015)))
(define-fun x645 ((x6015 Int)) Int (ite x5448 (x7705 x6015) (ite x3516 (x6202 x6015) (x4430 x6015))))
(define-fun x5455 ((x6015 Int)) Int (ite (and (<= 128 x6015) (< x6015 160)) (x645 (- x6015 128)) (x6270 x6015)))
(define-fun x7011 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x6330 x6015)))
(define-fun x295 ((x6015 Int)) Int (ite (and (<= 0 x6015) (< x6015 36)) (x7011 x6015) (x4572 x6015)))
(define-fun x652 ((x6015 Int)) Int (ite (= 4 x6015) 17 (x6284 x6015)))
(define-fun x1990 ((x6015 Int)) Int (ite (and (>= x6015 0) (< x6015 36)) (x652 x6015) (x4572 x6015)))
(define-fun x1828 ((x6015 Int)) Int (ite (= x6015 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x1 x6015)))
(define-fun x5012 ((x6015 Int)) Int (ite (= 132 x6015) x3267 (x1828 x6015)))
(define-fun x3537 ((x6015 Int)) Int (ite (= 164 x6015) x1754 (x5012 x6015)))
(define-fun x615 ((x6015 Int)) Int (ite (= x6015 196) x630 (x3537 x6015)))
(define-fun x7863 ((x6015 Int)) Int (ite (= x6015 228) x533 (x615 x6015)))
(define-fun x8222 ((x6015 Int)) Int (ite (= 128 x6015) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x1 x6015)))
(define-fun x4225 ((x6015 Int)) Int (ite (= x6015 132) x8491 (x8222 x6015)))
(define-fun x3636 ((x6015 Int)) Int (ite (= x6015 164) x1019 (x4225 x6015)))
(define-fun x5173 ((x6015 Int)) Int (ite (= x6015 128) x1019 (x1921 x6015)))
(define-fun x3852 ((x6015 Int)) Int (ite (= 128 x6015) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x5173 x6015)))
(define-fun x2817 ((x6015 Int)) Int (ite (= x6015 132) x8491 (x3852 x6015)))
(define-fun x6550 ((x6015 Int)) Int (ite (= x6015 164) 0 (x2817 x6015)))
(define-fun x6812 ((x6015 Int)) Int (ite (= x6015 196) 0 (x6550 x6015)))
(define-fun x5503 ((x6015 Int)) Int 0)
(define-fun x3856 ((x6015 Int)) Int (ite (= x6015 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1 x6015)))
(define-fun x8450 ((x6015 Int)) Int (ite (= 132 x6015) x5520 (x3856 x6015)))
(define-fun x2574 ((x6015 Int)) Int (ite (= 164 x6015) x4589 (x8450 x6015)))
(define-fun x8110 ((x6015 Int)) Int (ite (= 196 x6015) x6220 (x2574 x6015)))
(define-fun x7946 ((x6015 Int)) Int (ite (= 128 x6015) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1 x6015)))
(define-fun x6226 ((x6015 Int)) Int (ite (= x6015 132) x5227 (x7946 x6015)))
(define-fun x7285 ((x6015 Int)) Int 0)
(define-fun x7637 ((x6015 Int)) Int (ite (= x6015 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1 x6015)))
(define-fun x6877 ((x6015 Int)) Int (ite (= 132 x6015) x438 (x7637 x6015)))
(define-fun x7922 ((x6015 Int)) Int 0)
(define-fun x7916 ((x6015 Int)) Int (ite x1558 (x5138 x6015) (ite x1114 (x5138 x6015) (ite x8082 (x5138 x6015) (ite x831 (x5138 x6015) (x4061 x6015))))))
(define-fun x2771 ((x6015 Int)) Int (ite (and (> x3196 x6015) (<= 0 x6015)) (x7916 x6015) (x6284 x6015)))
(define-fun x4058 ((x6015 Int)) Int (ite (and (>= x6015 0) (> x3196 x6015)) (x2771 x6015) (x4572 x6015)))
(define-fun x2998 ((x6015 Int)) Int (ite (= x621 x6015) x2973 (x2576 x6015)))
(define-fun x2742 ((x6015 Int)) Int (ite (= x6015 x685) x923 (x1441 x6015)))
(assert (= (x1388 (x3407 64 x1680 12)) (x3407 64 x1680 12)))
(assert (= (=> (and (= true x7084) (= 0 x5315) (= false x5678)) x3583) x4608))
(assert (not (x8398 (x1896 x3224 x6110 x1045 x8162 x2618))))
(assert (=> (>= 10000 x4440) (= (x1388 x4440) 0)))
(assert (= x596 (and x1713 x238)))
(assert (x4938 x7820))
(assert (x4938 x8440))
(assert (x4938 x4868))
(assert (x4938 x7824))
(assert (x8398 486791245))
(assert (x4938 x6875))
(assert (= (and (not x3969) x7695) x6478))
(assert (< 10000 (x3407 64 x7048 3)))
(assert (x4938 x3234))
(assert (x4938 x5877))
(assert (= x1676 (x701 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (x4938 x5395))
(assert (x704 x8529))
(assert (= x6715 (=> (and (= x7837 true) (= x7078 x584) (= x2126 x6283) (= x8267 x4066) (= x6168 0) (= x307 x7374) (= x1991 x138) (= x4368 x4010) (= x2850 x2398) (= x661 x6676) (= x6717 x5099) (= x621 x1927) (= x6291 x2331) (= x1641 false) (= x2133 x5801) (= x5098 x6331) (= x985 2)) x5672)))
(assert (x4938 x5912))
(assert (= x4441 (x3647 (x1896 x4400 x4441 x7780 x8359 x6150))))
(assert (= x462 (=> (and (or (and (and (= x3766 x5602) (= x2257 x5244) (= x8561 x4928) (= x1931 x3687) (= x6504 x8206) (= x8435 x6302) (= x2598 x1952) (= x723 x8119) (= x4624 x1426) (= x4691 x8353) (= x7947 x7747) (= x8193 x2851) (= x6537 x6534) (= x4223 x3956)) (not x5389)) (and x5389 (and (= x1931 x3687) (>= x5589 0) (= x7747 x7947) (= x3956 x4223) (= x8101 x5589) (= x723 x8119) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5119 x5577)) (= x2598 x1952) (= x6534 x6537) (= (x7247 x5853) x7644) (= x6600 (- x7644 x5119)) (= x8206 x6504) (= x8193 x2851) (= x5119 (ite (= 0 x3766) x4723 0)) (= x8353 x4691) (= x6302 x8435) (= x3766 x5602) (= x5577 (x7850 x1579)) (= x2257 x5244) (= x4928 x8561) (= x1426 x4624) (<= x5589 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x5119 x5577) x5589)))) (= x5389 (= x3766 0))) x5435)))
(assert (x4938 x6220))
(assert (x4938 x7895))
(assert (= (x701 (x3407 x7199 x226 x4057)) x4057))
(assert (x4938 x8353))
(assert (= x1378 (=> (and (= x3554 x6283) (= x3015 x6717) (= x679 x5311) (= 0 x8054) (= x2686 x584) (= x5801 x7233) (= (x1066 255 x3044) x679) (= x138 x1155) (= x7374 x5113) (= x3293 x2331) (= x6428 x4368) (= x8267 x1038) (= x5886 x2850) (= x3814 x5128) (= x5098 x232) (= x5770 2) (= x7469 x621)) x5910)))
(assert (x4938 x8041))
(assert (x4938 x580))
(assert (= x3533 (x3647 (x3407 64 x3533 3))))
(assert (= (x5419 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756)) x433))
(assert (x4938 x3283))
(assert (=> (<= x1411 10000) (= 0 (x1388 x1411))))
(assert (= (x1688 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)) x3788))
(assert (x4938 x3807))
(assert (x4938 x5553))
(assert (x4938 x6043))
(assert (> (x7087 x7199 x5813 x4981 x3966) 10000))
(assert (= x5197 (x6568 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (x4938 x3120))
(assert (x4938 x7085))
(assert (x4938 x4334))
(assert (=> (>= 10000 x1381) (= (x1388 x1381) 0)))
(assert (> (x1896 x4809 x2199 x4831 x3620 x4599) 10000))
(assert (= (x3647 (x3407 64 x5504 36)) x5504))
(assert (= (or (and x1128 x441) (and x3579 x7886)) x5778))
(assert (x4938 x2452))
(assert (x4938 x6057))
(assert (= x1766 (and (not x4252) x6470)))
(assert (x4938 x4994))
(assert (x4938 x2143))
(assert (x4938 x6859))
(assert (= x407 (x3647 (x3407 x6088 x407 x3652))))
(assert (= x1241 (or x1234 x3261)))
(assert (= (and x1593 x3236) x4009))
(assert (= (and (not x619) x1054) x2827))
(assert (x4938 x2985))
(assert (x4938 x461))
(assert (= (and x3459 x329) x897))
(assert (x4938 x6065))
(assert (=> (<= x7206 10000) (= 0 (x1388 x7206))))
(assert (= x1790 (x3647 (x1896 x3651 x1790 x3653 x910 x8305))))
(assert (=> (<= x3839 10000) (= (x1388 x3839) 0)))
(assert (x8398 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (x4938 x3563))
(assert (= (and x7053 x7900) x5349))
(assert (x4938 x7921))
(assert (x4938 x7597))
(assert (x4938 x5991))
(assert (x150 x7765))
(assert (= (x3407 64 x7048 4) (x1388 (x3407 64 x7048 4))))
(assert (= (x7622 x2119 x6964 x1957 x8286 x7477 x7270) (x1388 (x7622 x2119 x6964 x1957 x8286 x7477 x7270))))
(assert (x4938 x7119))
(assert (x4938 x2150))
(assert (< (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8398 1914215))
(assert (=> (<= x3481 10000) (= 0 (x1388 x3481))))
(assert (=> (>= 10000 x5507) (= 0 (x1388 x5507))))
(assert (x4938 x882))
(assert (= (x1388 (x3407 64 x4889 (ite (>= 32 x3989) x2070 (ite (<= x3989 64) x1013 (ite (<= x3989 96) x8488 (ite (>= 128 x3989) x7028 (ite (>= 160 x3989) x801 (ite (>= 192 x3989) x6233 x449)))))))) (x3407 64 x4889 (ite (<= x3989 32) x2070 (ite (<= x3989 64) x1013 (ite (>= 96 x3989) x8488 (ite (<= x3989 128) x7028 (ite (>= 160 x3989) x801 (ite (<= x3989 192) x6233 x449)))))))))
(assert (not (x8398 (x3407 x6541 x4467 x2703))))
(assert (x4938 x6084))
(assert (x4938 x8530))
(assert (= x270 (x555 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (= x4429 (or (and x4415 x7492) (and x1124 x579))))
(assert (x4938 x2895))
(assert (= (x3116 (x3407 64 x4502 36)) 64))
(assert (x4938 x2633))
(assert (=> (>= 10000 x7477) (= 0 (x1388 x7477))))
(assert (x4938 x6937))
(assert (= (x3647 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) x1906))
(assert (x3670 x5768))
(assert (= (or x4285 x2588 x3633 x8382 x8545 x3791) x1854))
(assert (x4938 x6988))
(assert (= x2986 (and (not x847) x1065)))
(assert (x4938 x1841))
(assert (x4938 x2485))
(assert (not (x8398 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094))))
(assert (x4938 x4001))
(assert (= x5550 x7768))
(assert (= x8094 (x3647 (x7087 x4159 x8094 x3597 x5628))))
(assert (= x4627 (x6340 (x7087 x3989 x5981 x1922 x4627))))
(assert (x4938 x4525))
(assert (x4938 x5679))
(assert (= (x1388 (x3407 x2454 x2923 x2510)) (x3407 x2454 x2923 x2510)))
(assert (> (x3407 64 x3627 7) 10000))
(assert (= (or x7614 x6474 x4975) x6034))
(assert (= x2364 (=> (and (= 0 x5306) (= x517 x2926) (= x3900 x8161) (= (x1066 255 x7969) x6057) (= x1948 x6057) (= 2 x1604) (= x6603 x8483) (= x4984 x3218)) x1454)))
(assert (=> (>= 10000 x2864) (= 0 (x1388 x2864))))
(assert (x4938 x6851))
(assert (= (x6340 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)) x6124))
(assert (x150 x1609))
(assert (= (or x1936 x4492) x5490))
(assert (= (and x7593 x194) x5105))
(assert (x4938 x4039))
(assert (not (x8398 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (x4938 x3167))
(assert (< (x3407 64 x4502 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5832 (x701 (x7087 x4809 x1858 x5832 x2909))))
(assert (= x6178 (and x2137 x3123)))
(assert (=> (>= 10000 x6918) (= (x1388 x6918) 0)))
(assert (=> (>= 10000 x3569) (= 0 (x1388 x3569))))
(assert (= (and x116 (not x4002)) x1893))
(assert (= 64 (x3116 (x3407 64 x7048 3))))
(assert (x4938 x4747))
(assert (x4938 x549))
(assert (=> (<= x1969 10000) (= 0 (x1388 x1969))))
(assert (x8398 310283853))
(assert (x4938 x5907))
(assert (x4938 x5771))
(assert (= (x7087 x3651 x4747 x210 x8417) (x1388 (x7087 x3651 x4747 x210 x8417))))
(assert (x4938 x4613))
(assert (= (and x4017 x3509) x5669))
(assert (= x3204 (x3647 (x1896 x2119 x3204 x7545 x6185 x4559))))
(assert (= (x1022 32 x200) (x1388 (x1022 32 x200))))
(assert (x4938 x1624))
(assert (x4938 x5568))
(assert (x4938 x1859))
(assert (x4938 x3717))
(assert (x4938 x2846))
(assert (x4938 x8258))
(assert (= x2703 (x701 (x3407 x6541 x4467 x2703))))
(assert (= (x4958 0) (x1388 (x4958 0))))
(assert (< 10000 (x3407 x3479 x2164 x2366)))
(assert (= (and (not x3756) x4021) x3665))
(assert (= x4809 (x3116 (x1896 x4809 x2199 x4831 x3620 x4599))))
(assert (< (x7087 x2119 x1810 x1425 x7992) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x4090))
(assert (= (x1388 (x7622 x3989 x2981 x6000 x7436 x7177 x1427)) (x7622 x3989 x2981 x6000 x7436 x7177 x1427)))
(assert (x4938 x4139))
(assert (x4938 x3094))
(assert (x4938 x6370))
(assert (x4938 x3701))
(assert (x4938 x8301))
(assert (= x3833 (x3647 (x3407 64 x3833 36))))
(assert (x4938 x5875))
(assert (x4938 x2736))
(assert (= (x6340 (x1896 x3224 x6110 x1045 x8162 x2618)) x8162))
(assert (= x4842 (and x202 (not x424))))
(assert (x4938 x5088))
(assert (= x7293 (and x4199 (not x3866))))
(assert (x4938 x4567))
(assert (x4938 x8297))
(assert (x150 x5393))
(assert (not (x8398 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176))))
(assert (= (and x7188 x377) x1274))
(assert (x4938 x6864))
(assert (x4938 x4950))
(assert (x4938 x5848))
(assert (x4938 x2923))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x5478 x2096 x4048)))
(assert (not (x8398 (x3407 x5857 x3212 x3321))))
(assert (x3670 x7696))
(assert (x4938 x6954))
(assert (x4938 x5549))
(assert (= (x3647 (x3407 64 x7195 12)) x7195))
(assert (= (x3407 x6088 x407 x3652) (x1388 (x3407 x6088 x407 x3652))))
(assert (x4938 x4465))
(assert (= (x6340 (x1896 x6541 x6699 x7203 x7803 x4524)) x7803))
(assert (not (x8398 (x3407 64 x1891 7))))
(assert (= (=> (and (= (- x6897 x1352) x923) (<= 0 x1735) (= (x2742 x3521) x3037) (= (+ x1352 x3037) x1735) (= x3596 (x1066 255 x3272)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3037 x1352)) (<= x1735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1441 x685) x6897) (= x1735 x5159) (= x3563 2) (= x7475 x2766)) x5594) x4152))
(assert (x4938 x6268))
(assert (x4938 x1288))
(assert (=> (<= x3661 10000) (= 0 (x1388 x3661))))
(assert (x4938 x4091))
(assert (< 10000 (x3407 64 x1232 (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (>= 96 x206) x8332 (ite (<= x206 128) x5271 (ite (>= 160 x206) x312 (ite (>= 192 x206) x2304 x5765)))))))))
(assert (x4938 x4013))
(assert (= (or x7767 x420) x7873))
(assert (x4546 x6153))
(assert (x4938 x4861))
(assert (= (or (and (not x5229) x3265) x8565 (and x6774 (not x7848)) (and (not x4902) x4468) (and x1337 (not x4123))) x3601))
(assert (= 32 (x3116 (x1022 32 x200))))
(assert (x4938 x4542))
(assert (x4938 x2506))
(assert (= x8491 (x3647 (x3407 64 x8491 11))))
(assert (x4485 x999))
(assert (x4938 x5415))
(assert (> (x3407 64 x2876 36) 10000))
(assert (< 10000 (x3407 64 x8491 11)))
(assert (x3670 x1822))
(assert (= (or x5373 x3718 x3031 x4998 x5531 x5087 x4184 x1793 x4919) x602))
(assert (= x8288 (and x520 x4326)))
(assert (x4938 x7027))
(assert (x4938 x4911))
(assert (x150 x3924))
(assert (x4938 x4722))
(assert (x4938 x979))
(assert (= (and x3334 x390) x2694))
(assert (x4938 x1799))
(assert (x4938 x5045))
(assert (= (x1388 (x1896 x206 x3365 x1392 x1612 x2988)) (x1896 x206 x3365 x1392 x1612 x2988)))
(assert (= x2583 (and x317 (not x5872))))
(assert (=> (>= 10000 x6214) (= 0 (x1388 x6214))))
(assert (= (and (not x7495) x4191) x526))
(assert (x4938 x1257))
(assert (x4938 x2385))
(assert (= x1715 (x3647 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (x8398 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (x8398 1000000000))
(assert (=> (>= 10000 x2644) (= 0 (x1388 x2644))))
(assert (= (x3116 (x1022 x2726 x3440)) x2726))
(assert (= x2869 (x701 (x1896 x3989 x7933 x2869 x5737 x214))))
(assert (= 0 (x1388 1000000000)))
(assert (=> (<= x3298 10000) (= (x1388 x3298) 0)))
(assert (= x4234 (=> (= x7773 (= x5685 0)) (and (=> (and (and (= x2461 2) (= x4368 x4010) (= x6291 x2331) (= x6168 0) (= x5098 x6331) (= x2398 x2850) (= x6717 x5099) (= x5801 x2133) (= false x6811) (= x661 x6676) (= x2126 x6283) (= x584 x7078) (= x621 x1927) (= x2173 true) (= x307 x7374) (= x4066 x8267) (= x138 x1991)) x7773) x5672) (=> (and (and (= x6529 x7164) (= x607 x7813) (= x3119 x527) (= x2795 x44) (= x5146 x1814) (= x2361 x8461) (= x7585 x4870) (= x6915 x1312) (= x8066 x3529) (= x6542 x5674) (= x5450 x4619) (= x3851 x4001) (= x5225 x4618)) (not x7773)) x6117)))))
(assert (x4938 x3168))
(assert (=> (>= 10000 x96) (= 0 (x1388 x96))))
(assert (x4938 x7457))
(assert (x4938 x3825))
(assert (x4485 x6691))
(assert (x4938 x2264))
(assert (x4938 x1201))
(assert (= (and x596 x6846) x2222))
(assert (x4938 x2399))
(assert (x4938 x5170))
(assert (x4938 x2036))
(assert (= (x6568 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)) x4462))
(assert (x4938 x7651))
(assert (< (x3407 x6088 x407 x3652) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1022 x2454 x196) 10000))
(assert (x4938 x5016))
(assert (= (x701 (x7622 x7199 x6076 x3424 x7623 x299 x4117)) x3424))
(assert (x4938 x2056))
(assert (x4938 x6547))
(assert (=> (>= 10000 x1502) (= (x1388 x1502) 0)))
(assert (< (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x5087 (and x5720 x5380)))
(assert (x4938 x7966))
(assert (x4938 x8121))
(assert (= (x6340 (x1896 x4809 x2199 x4831 x3620 x4599)) x3620))
(assert (x4938 x5234))
(assert (x4938 x7983))
(assert (x4938 x3415))
(assert (= x2084 (x701 (x7622 x3651 x6841 x2084 x4642 x4462 x3445))))
(assert (= (x6340 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569)) x7185))
(assert (= x4785 (x6340 (x7622 x5478 x3146 x5426 x4785 x7964 x5820))))
(assert (= (and x4313 x3768) x4309))
(assert (x4938 x7842))
(assert (x4938 x5545))
(assert (x4938 x5734))
(assert (x4938 x7964))
(assert (= (x3647 (x7622 x6088 x6608 x929 x2836 x1656 x880)) x6608))
(assert (x4938 x6423))
(assert (= x7810 (or x8558 (and (not x1082) x6619))))
(assert (= x1392 (x701 (x1896 x206 x3365 x1392 x1612 x2988))))
(assert (x4938 x1516))
(assert (x4938 x8233))
(assert (=> (<= x6673 10000) (= 0 (x1388 x6673))))
(assert (x4938 x3212))
(assert (not (x8398 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (= (and x2313 (not x5666)) x3308))
(assert (x4938 x2642))
(assert (=> (<= x5981 10000) (= (x1388 x5981) 0)))
(assert (not (x8398 (x3407 64 x3228 2))))
(assert (not (x8398 (x3407 64 x4440 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x6541 x3112)))
(assert (x4938 x6427))
(assert (x4938 x5411))
(assert (x4938 x7006))
(assert (not (x8398 (x3407 64 x6717 4))))
(assert (= x2960 (and x4156 x3219)))
(assert (=> (<= x2029 10000) (= (x1388 x2029) 0)))
(assert (= 2 (x701 (x3407 64 x3228 2))))
(assert (=> (>= 10000 x1788) (= (x1388 x1788) 0)))
(assert (> (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802) 10000))
(assert (= (=> (= (= x6693 0) x6749) (and (=> (and (and (= false x3743) (= x3645 0) (= x4874 true)) x6749) x4804) (=> (and (not x6749) (and (= 0 x4720) (= x1254 x788) (= x2841 x3142) (= 1 x921) (= x4291 x5900) (= x5272 x6637))) x7110))) x6062))
(assert (= x6646 x4158))
(assert (x4938 x4713))
(assert (= (x3647 (x3407 x2119 x4246 x8011)) x4246))
(assert (= (x701 (x7087 x2119 x1810 x1425 x7992)) x1425))
(assert (x4938 x6166))
(assert (x4938 x4785))
(assert (x150 x6471))
(assert (not (x8398 (x3407 64 x2644 12))))
(assert (x4938 x5089))
(assert (= x6191 (and x3242 x6377)))
(assert (= (or (and x7412 (not x8209)) (and (not x1745) x4564) (and x5932 (not x7314))) x8505))
(assert (not (x8398 (x3407 x5478 x2096 x4048))))
(assert (= (x701 (x3407 64 x8340 6)) 6))
(assert (x4938 x3025))
(assert (=> (>= 10000 x5009) (= 0 (x1388 x5009))))
(assert (x4938 x5847))
(assert (= (x7622 x2454 x7378 x3190 x5182 x1064 x4091) (x1388 (x7622 x2454 x7378 x3190 x5182 x1064 x4091))))
(assert (x4938 x5287))
(assert (x4938 x5893))
(assert (= (x5419 (x7622 x7277 x828 x6423 x4655 x7851 x163)) x163))
(assert (x4938 x4889))
(assert (= (x3407 64 x2140 10) (x1388 (x3407 64 x2140 10))))
(assert (x4938 x5176))
(assert (x4938 x8427))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x6541 x4467 x2703)))
(assert (x4546 x6712))
(assert (= (x701 (x7087 x2726 x8532 x6769 x6672)) x6769))
(assert (= (x5419 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) x738))
(assert (x4938 x4848))
(assert (=> (<= x7334 10000) (= (x1388 x7334) 0)))
(assert (x4938 x1068))
(assert (x4938 x4832))
(assert (x4938 x6767))
(assert (x4938 x6246))
(assert (x4938 x5534))
(assert (< (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5353))
(assert (x4938 x4331))
(assert (=> (<= x7312 10000) (= (x1388 x7312) 0)))
(assert (x4938 x7155))
(assert (= (x3647 (x3407 x206 x6743 x7390)) x6743))
(assert (x4938 x5015))
(assert (= x6139 (x5419 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (x4938 x5856))
(assert (x4938 x3627))
(assert (= x7682 (x3647 (x7087 x206 x7682 x314 x3818))))
(assert (= x4804 (=> (and (= x3645 x4720) (= x2926 x4291) (= x3900 x788) (= x4984 x5272) (= 2 x6316) (= x2841 x928) (= x928 (x1066 255 x6471)) (= 0 x921)) x7110)))
(assert (x4938 x1834))
(assert (< 10000 (x3407 64 x2140 10)))
(assert (x4938 x3399))
(assert (not (x8398 (x1896 x206 x3365 x1392 x1612 x2988))))
(assert (x4938 x1684))
(assert (x4938 x995))
(assert (= x2102 (and x6784 x8285)))
(assert (x4938 x4235))
(assert (x4938 x5051))
(assert (= (or x7037 x2163 x3602 x4931 x7295 x6473 x3375 x2222 x335 x8385 x3095) x5371))
(assert (x150 x6418))
(assert (x4938 x7370))
(assert (= (or (and x2262 x4574) (and x5130 x5399) (and x5259 x3434)) x125))
(assert (not (x8398 (x3407 64 x8340 6))))
(assert (= x7551 (and x5932 x7314)))
(assert (=> (>= 10000 x6139) (= (x1388 x6139) 0)))
(assert (x4938 x2428))
(assert (= x7678 (and x816 x1817)))
(assert (x4938 x4618))
(assert (= (=> (and (and (= x6700 (x1896 x2119 x3204 x7545 x6185 x4559)) (= (x7100 (+ 32 x6208)) x6244) (= x4785 (x8363 x930)) (= x5441 (x7100 (+ x5541 32))) (= (x8363 x7433) x1504) (= (x7100 (+ x5541 32)) x3757) (= (x8363 x361) x2439) (= x5196 (x7100 (+ x6041 x5541))) (= (x8363 x5757) x8330) (= x5478 (- x2119 32)) (= x7270 (x8363 x5134)) (= x361 (x7100 (+ x5541 128))) (= (x7100 (+ 64 x5541)) x6694) (= (x8363 x5541) x1810) (= (x3407 x5478 x2096 x4048) x1539) (<= 32 x2119) (= (x7087 x5478 x7722 x8330 x1504) x5656) (= x2292 (x8363 x1704)) (= x1309 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582)) (= x7589 (x7100 (+ x5541 32))) (= (x7100 (+ 32 x5541)) x1424) (= x4048 (x8363 x7165)) (= (x8363 x5541) x7722) (= (x7100 (+ 32 x5541)) x7165) (= (x8363 x1975) x7582) (= (x7087 x2119 x1810 x1425 x7992) x568) (= (x3407 x2119 x4246 x8011) x1207) (= (x8363 x2550) x8286) (= (x7100 (+ x5541 64)) x8348) (= x6332 (x7100 (+ x5541 128))) (= x3298 (x8363 x728)) (= x930 (x7100 (+ 64 x5541))) (= x1975 (x7100 (+ 160 x5541))) (= x2550 (x7100 (+ 64 x5541))) (= (x8363 x332) x1425) (= x1704 (x7100 (+ x5541 32))) (<= x2119 224) (= x5134 (x7100 (+ 128 x5541))) (= (x8363 x5441) x4465) (= x5927 (x7100 (+ 96 x5541))) (= (> x635 0) x2116) (= x7433 (x7100 (+ 64 x5541))) (= x5331 (x1022 x5478 x42)) (= (x8363 x5541) x4246) (= (x8363 x5073) x1957) (= x5940 (x8363 x8348)) (= (x8363 x7149) x2982) (= x6185 (x8363 x1634)) (= x5073 (x7100 (+ 32 x5541))) (= (x8363 x5541) x3146) (= x3854 (x7100 (+ x5541 32))) (= x2250 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) (= x8011 (x8363 x8528)) (= (x8363 x5541) x151) (= (x8363 x5541) x42) (= (x7100 (+ x5541 128)) x2615) (= x3967 (x7100 (+ x5541 96))) (= x7808 (x8363 x3002)) (= (x8363 x5541) x5959) (= (x8363 x6332) x5749) (= (x7100 (+ x5541 32)) x7596) (= x8295 (x8363 x5541)) (= (x7100 (+ x5541 64)) x7466) (= x1305 (x3407 64 x26 (ite (<= x2119 32) x5997 (ite (<= x2119 64) x1207 (ite (<= x2119 96) x568 (ite (>= 128 x2119) x6700 (ite (>= 160 x2119) x285 (ite (<= x2119 192) x1309 x2250)))))))) (= x5118 (x7100 (+ x5541 96))) (= (x7100 (+ x5541 96)) x6292) (= x2647 (x8363 x6694)) (= (x7100 (+ x5541 128)) x677) (= x8528 (x7100 (+ 32 x5541))) (= (x8363 x5541) x5582) (= (x8363 x5118) x4559) (= (x1896 x5478 x5582 x4037 x5940 x3546) x5723) (= (x8363 x5541) x2096) (= x285 (x7622 x2119 x6964 x1957 x8286 x7477 x7270)) (= (ite (= x5478 0) x6190 (ite (<= x5478 32) x5331 (ite (>= 64 x5478) x1539 (ite (>= 96 x5478) x5656 (ite (>= 128 x5478) x5723 (ite (>= 160 x5478) x5675 x8051)))))) x7376) (= (x7100 (+ x5541 96)) x7149) (= x3002 (x7100 (+ 64 x5541))) (= x1634 (x7100 (+ 64 x5541))) (= x332 (x7100 (+ x5541 32))) (= x7545 (x8363 x1424)) (= x3204 (x8363 x5541)) (= x3616 (x8363 x7127)) (= x3546 (x8363 x4541)) (= (x8363 x3854) x3270) (= x7477 (x8363 x3967)) (= x1373 (x8363 x6292)) (= (x7100 (+ x5541 x6041)) x6208) (= (x8363 x5766) x7992) (= (x7100 (+ x5541 64)) x5766) (= (x7100 (+ x5541 160)) x7127) (= x7467 (x8363 x7466)) (= (x7100 (+ x5541 192)) x4557) (= x6190 (x4958 0)) (= (x8363 x7596) x4037) (= (x8363 x5927) x7964) (= x8051 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) (= (x1022 x2119 x6911) x5997) (= x2119 (x2230 (- x6244 x5541))) (= (x7100 (+ x5541 160)) x5047) (= x2564 (x8363 x4557)) (= x5675 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) (= (x7100 (+ x5047 32)) x7023) (= x6911 (x8363 x5541)) (= (x8363 x7589) x5426) (= (x7100 (+ x5541 96)) x4541) (= (x7100 (+ x5541 96)) x6048) (= (x8363 x677) x5820) (= (x8363 x5541) x6964) (= x2978 (x8363 x2615)) (= (x4243 x5569) x635) (= (x7100 (+ 32 x5541)) x5757) (= (x7100 (+ x5541 160)) x728) (= (x8363 x6048) x20)) (or (not x2116) (and x2116 (and (and (= x5829 (> x635 32)) (= x7815 (x4860 x4427))) (or (and x5829 (and (or (and x1494 (and (or (and (and (= x7159 (x7100 (+ x7023 96))) (= (x7058 x511) x1176) (<= x635 128) (= x511 (x7100 (+ 96 x4427)))) x6857) (not x6857)) (and (= (x7100 (+ x7023 64)) x6701) (= (x6219 x7707) x5600) (= x7707 (x7100 (+ 64 x4427))) (= x6857 (> x635 96))))) (not x1494)) (and (= (x7100 (+ 32 x7023)) x1476) (= x1494 (< 64 x635)) (= x3904 (x405 x8052)) (= x8052 (x7100 (+ 32 x4427)))))) (not x5829)))))) x1007) x1143))
(assert (x4938 x6516))
(assert (= (x3647 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x5888))
(assert (= (x3647 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023)) x6663))
(assert (= (or (and (not x6417) x300) x3008) x7857))
(assert (x4938 x3331))
(assert (x4938 x7712))
(assert (x4938 x5172))
(assert (= (x6340 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)) x7265))
(assert (x4938 x7937))
(assert (x4938 x4150))
(assert (x4938 x1809))
(assert (= x5607 (and (not x7577) x1930)))
(assert (= (x6340 (x7622 x3479 x7884 x1998 x3288 x2864 x1503)) x3288))
(assert (x4938 x4631))
(assert (= x7832 (and x2668 x2457)))
(assert (x4938 x6555))
(assert (x4938 x859))
(assert (x4938 x6030))
(assert (> (x7622 x2454 x7378 x3190 x5182 x1064 x4091) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x4159 x5486 x1676 x2617 x1395)))
(assert (x4938 x3010))
(assert (x4938 x3967))
(assert (=> (<= x4706 10000) (= 0 (x1388 x4706))))
(assert (= x771 (and x3045 x1455)))
(assert (x4938 x6273))
(assert (= x1285 (and x1451 x6442)))
(assert (=> (>= 10000 x6964) (= (x1388 x6964) 0)))
(assert (x4938 x4855))
(assert (x4938 x8037))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x2876 36)))
(assert (= (and (not x3098) x6826) x1129))
(assert (< 10000 (x3407 64 x2616 6)))
(assert (=> (<= x5294 10000) (= 0 (x1388 x5294))))
(assert (= (x3116 (x3407 64 x1680 12)) 64))
(assert (x4938 x4635))
(assert (x4938 x3440))
(assert (=> (>= 10000 x151) (= (x1388 x151) 0)))
(assert (= (and x170 (not x6312)) x2933))
(assert (=> (<= x764 10000) (= 0 (x1388 x764))))
(assert (x150 x7696))
(assert (x4938 x6224))
(assert (= x2415 (x6340 (x7087 x7277 x7748 x160 x2415))))
(assert (x4938 x1573))
(assert (= x702 (or x7480 x5049 x6507 x5844 x7039 x5239 x5983 x4658 x2867 x5216 x128 x5859 x3277 x4758 x5651 x2408 x1285 x4405 x785 x4434 x2761 x2546 x797 x3932 x1772 x2590 x2514)))
(assert (x704 x5393))
(assert (< (x3407 64 x7048 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8384))
(assert (x4938 x1762))
(assert (= x1296 (=> (and (= x5146 x4741) (= x1759 x5450) (= x2301 x8066) (= x6529 x1475) (= x7813 x8062) (= x1312 x7838) (= x2795 x5121) (= x689 x5674) (= x2519 x527) (= x7380 x3851) (= x3745 x2361) (= x7585 x6620) (= x4618 x4606)) x6117)))
(assert (=> (<= x8117 10000) (= (x1388 x8117) 0)))
(assert (= x3265 (and x1337 x4123)))
(assert (= (and x6661 x1261) x4550))
(assert (= (and x4547 (not x316)) x116))
(assert (< 10000 (x1896 x4400 x4441 x7780 x8359 x6150)))
(assert (x4938 x3159))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)))
(assert (= x4020 x6690))
(assert (x4938 x3731))
(assert (= x5269 (and x8535 x1276)))
(assert (=> (<= x7780 10000) (= (x1388 x7780) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x5504 36)))
(assert (= (x6340 (x7087 x5857 x604 x2406 x7313)) x7313))
(assert (= x3544 (and x7987 (not x5903))))
(assert (x4938 x4483))
(assert (x4938 x7696))
(assert (x4938 x2416))
(assert (x4938 x799))
(assert (x4938 x2039))
(assert (= (x5419 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)) x6214))
(assert (x4938 x8255))
(assert (= x3626 (and x1421 (not x5180))))
(assert (x4938 x3248))
(assert (= x6397 (and x1001 x3532)))
(assert (x4938 x6088))
(assert (= (x701 (x3407 x5857 x3212 x3321)) x3321))
(assert (= (and x933 x6009) x4996))
(assert (x4938 x2871))
(assert (x4938 x1553))
(assert (= (x1388 (x1022 x206 x1048)) (x1022 x206 x1048)))
(assert (x4938 x7859))
(assert (= (x6568 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802)) x6748))
(assert (not (x8398 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (x150 x6237))
(assert (= (and x6703 x8447) x7679))
(assert (x4938 x7615))
(assert (=> (>= 10000 x7455) (= 0 (x1388 x7455))))
(assert (= x953 (or x3978 x1142)))
(assert (x4938 x2808))
(assert (x4938 x248))
(assert (x4938 x8140))
(assert (=> (<= x2305 10000) (= 0 (x1388 x2305))))
(assert (x4938 x2938))
(assert (x4938 x7407))
(assert (= x6604 (x3647 (x3407 64 x6604 12))))
(assert (= (x3407 64 x8409 6) (x1388 (x3407 64 x8409 6))))
(assert (= (and x6820 x5343) x7349))
(assert (x4938 x2044))
(assert (= (x3647 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) x3063))
(assert (= (x3647 (x3407 64 x2644 12)) x2644))
(assert (x150 x7479))
(assert (< (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4546 x4616))
(assert (= (and x6718 (not x8046)) x3711))
(assert (= x8558 (and x1082 x6619)))
(assert (= x6825 (x3647 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (> (x3407 x3224 x5218 x6215) 10000))
(assert (x4938 x1971))
(assert (x4938 x1680))
(assert (= (x5419 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)) x1076))
(assert (not (x8398 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (x4938 x7001))
(assert (=> (>= 10000 x3652) (= 0 (x1388 x3652))))
(assert (x150 x4821))
(assert (x4938 x5118))
(assert (x4938 x4078))
(assert (x4938 x5074))
(assert (= (x3116 (x1022 x1389 x5939)) x1389))
(assert (x4938 x7572))
(assert (x704 x3639))
(assert (=> (<= x604 10000) (= (x1388 x604) 0)))
(assert (=> (>= 10000 x4105) (= 0 (x1388 x4105))))
(assert (= 64 (x3116 (x3407 64 x8356 36))))
(assert (= (and (not x5389) x7630) x7704))
(assert (= x4467 (x3647 (x3407 x6541 x4467 x2703))))
(assert (= (x701 (x7622 x3224 x7683 x1344 x5037 x3808 x8369)) x1344))
(assert (= (and x4305 x8471) x3047))
(assert (x4938 x5000))
(assert (x4938 x319))
(assert (= (x3116 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) x3479))
(assert (x4938 x2609))
(assert (not (x8398 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (x4938 x3539))
(assert (x4938 x6109))
(assert (x4938 x361))
(assert (= (and x5008 (not x8443)) x1431))
(assert (> (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890) 10000))
(assert (= x7183 (and x5870 (not x6249))))
(assert (x4938 x4413))
(assert (x4938 x5923))
(assert (x4938 x4523))
(assert (= x3989 (x3116 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427))))
(assert (= x6115 (and x5093 (not x6482))))
(assert (x4938 x8142))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x4809 x2723 x5385)))
(assert (= x8096 (x3647 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (x4938 x808))
(assert (not (x8398 (x3407 64 1 x1120))))
(assert (x4938 x121))
(assert (= x206 (x3116 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (x4938 x3301))
(assert (x4938 x4467))
(assert (x4938 x7540))
(assert (not (x8398 (x3407 x1389 x5288 x1940))))
(assert (x4938 x2358))
(assert (x4938 x5817))
(assert (x4938 x6422))
(assert (x4938 x104))
(assert (x4938 x6959))
(assert (x4938 x4255))
(assert (x4938 x3924))
(assert (= x5140 (and x2155 x2827)))
(assert (< 10000 (x1022 x7277 x4298)))
(assert (x4938 x4602))
(assert (x4938 x4340))
(assert (> (x7622 x1389 x6653 x1971 x4729 x3159 x1076) 10000))
(assert (= x7966 (x5419 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499))))
(assert (x4938 x1242))
(assert (x4938 x4355))
(assert (< 10000 (x1896 x6088 x2440 x5482 x1969 x6350)))
(assert (x4938 x1340))
(assert (x4938 x5363))
(assert (< (x3407 64 x1232 (ite (>= 32 x206) x2881 (ite (>= 64 x206) x5724 (ite (<= x206 96) x8332 (ite (<= x206 128) x5271 (ite (<= x206 160) x312 (ite (>= 192 x206) x2304 x5765))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x828) (= 0 (x1388 x828))))
(assert (=> (>= 10000 x2617) (= 0 (x1388 x2617))))
(assert (= x6088 (x3116 (x1896 x6088 x2440 x5482 x1969 x6350))))
(assert (= x4809 (x3116 (x3407 x4809 x2723 x5385))))
(assert (=> (<= x6729 10000) (= 0 (x1388 x6729))))
(assert (x4938 x6181))
(assert (x4938 x332))
(assert (x4938 x5070))
(assert (= (or (and x5899 x2989) (and x5103 x3176)) x2200))
(assert (= (x1388 (x3407 64 x3822 36)) (x3407 64 x3822 36)))
(assert (= x2313 (or x6907 x5677 x2630)))
(assert (= x2427 (and x5297 x1415)))
(assert (x4938 x3318))
(assert (x4938 x832))
(assert (x4938 x5163))
(assert (x4938 x1941))
(assert (= x3989 (x3116 (x7622 x3989 x2981 x6000 x7436 x7177 x1427))))
(assert (= (x1688 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503)) x2503))
(assert (= (and x2993 x4672) x4101))
(assert (x4938 x5957))
(assert (x4938 x7103))
(assert (x4938 x8193))
(assert (not (x8398 (x7087 x4809 x1858 x5832 x2909))))
(assert (=> (>= 10000 x622) (= 0 (x1388 x622))))
(assert (= (x701 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) x807))
(assert (= x4160 (or x3841 x4701 x5445 x4356)))
(assert (x4938 x511))
(assert (=> (<= x3533 10000) (= (x1388 x3533) 0)))
(assert (= x3145 (or (and x4816 x8360) (and x8268 x349))))
(assert (x150 x1822))
(assert (x4938 x7203))
(assert (= x6501 (and x8449 x1413)))
(assert (=> (<= x8141 10000) (= 0 (x1388 x8141))))
(assert (x4938 x7502))
(assert (= (and x729 (not x1942)) x7420))
(assert (x4938 x1081))
(assert (x4938 x1489))
(assert (x4938 x5730))
(assert (x4938 x4345))
(assert (= (x1896 x6213 x8096 x4464 x7643 x4486) (x1388 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (= 64 (x3116 (x3407 64 x8491 11))))
(assert (= (and x3456 (not x870)) x4145))
(assert (= (or x4423 x7965) x4142))
(assert (= x7628 (and x2827 (not x2155))))
(assert (x4938 x5382))
(assert (x4938 x4675))
(assert (x4938 x7185))
(assert (= x6894 (and x7810 x1668)))
(assert (= (and (not x4043) x2233) x1479))
(assert (< 10000 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569)))
(assert (= (x3116 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x2119))
(assert (x150 x6289))
(assert (= (and x1569 (not x7193)) x1083))
(assert (x4938 x6998))
(assert (= x4743 (and (not x2799) x1469)))
(assert (= (x701 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) x5426))
(assert (x4938 x2098))
(assert (x4938 x6979))
(assert (= x287 (=> (= x7095 (> (ite (= x1272 0) x1272 1) 0)) (and (=> (and (not x7095) (and (= x2603 (= 0 x84)) (or (not x2603) x2603))) x7004) (=> x7095 x29)))))
(assert (x4938 x7529))
(assert (= x2734 (and (not x5718) x4639)))
(assert (= (x5419 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) x5820))
(assert (= x6088 (x3116 (x7622 x6088 x6608 x929 x2836 x1656 x880))))
(assert (x4938 x5884))
(assert (x4938 x8388))
(assert (= (x5419 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x5701))
(assert (= (x3407 64 x8356 36) (x1388 (x3407 64 x8356 36))))
(assert (= (x3647 (x7622 x7277 x828 x6423 x4655 x7851 x163)) x828))
(assert (< (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1552 10000) (= 0 (x1388 x1552))))
(assert (= (and (not x1817) x816) x5445))
(assert (x4938 x7933))
(assert (x4938 x2217))
(assert (x4938 x7707))
(assert (x4938 x8392))
(assert (= x4176 (x1688 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176))))
(assert (= x5008 (and x1479 x2396)))
(assert (x4938 x1810))
(assert (x4938 x7399))
(assert (= (x3647 (x3407 64 x1891 7)) x1891))
(assert (=> (>= 10000 x2140) (= (x1388 x2140) 0)))
(assert (x4938 x5218))
(assert (> (x3407 x2726 x235 x5998) 10000))
(assert (x4938 x2192))
(assert (x4938 x5310))
(assert (x4938 x7559))
(assert (=> (<= x3989 10000) (= (x1388 x3989) 0)))
(assert (x4938 x5410))
(assert (x4938 x2532))
(assert (= (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503) (x1388 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (x4938 x5652))
(assert (= 36 (x701 (x3407 64 x3822 36))))
(assert (x4938 x4642))
(assert (x4938 x3007))
(assert (x4938 x4370))
(assert (= (x3116 (x3407 64 x6325 2)) 64))
(assert (x4938 x2183))
(assert (not (x8398 (x1896 x6541 x6699 x7203 x7803 x4524))))
(assert (x4938 x3564))
(assert (x8398 34591783479076665122502074927488338969190252781858077677016911635275368785765))
(assert (x4485 x4138))
(assert (x4938 x7981))
(assert (= (and x2897 x7809) x6636))
(assert (x4938 x8003))
(assert (= x2970 (x6568 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (= x3193 (or x6610 x2000)))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639905) 0))
(assert (x4938 x1044))
(assert (x4938 x6313))
(assert (x4938 x4220))
(assert (x704 x6903))
(assert (= x8168 x1672))
(assert (= (x701 (x3407 64 x3585 36)) 36))
(assert (= x204 (x3647 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (x4938 x348))
(assert (x4938 x3450))
(assert (x4938 x7029))
(assert (x4938 x2188))
(assert (x4938 x2789))
(assert (x150 x6678))
(assert (x4938 x2816))
(assert (x4938 x2653))
(assert (x4938 x6404))
(assert (= x2616 (x3647 (x3407 64 x2616 6))))
(assert (x4485 x7634))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x3479 x7013)))
(assert (= (and x7255 x2748) x1440))
(assert (= (=> (and (= x1216 x358) (= x1103 x2632) (= x3973 x2926) (= 0 x5016) (= x6268 x4984) (= x2632 (x1066 255 x3709)) (= x3900 x4629) (= 2 x2829)) x2194) x5369))
(assert (< 10000 (x7087 x2454 x2103 x342 x6680)))
(assert (x4938 x5577))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)))
(assert (= (=> (= x4711 (+ 292 x8131)) x5653) x5459))
(assert (x4938 x532))
(assert (=> (>= 10000 x6061) (= 0 (x1388 x6061))))
(assert (x4938 x3304))
(assert (= x7563 (x1688 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (=> (>= 10000 x5701) (= 0 (x1388 x5701))))
(assert (= (x3407 64 x1579 2) (x1388 (x3407 64 x1579 2))))
(assert (= x8409 (x3647 (x3407 64 x8409 2))))
(assert (x4938 x1271))
(assert (= x6327 (and x5019 x1938)))
(assert (=> (>= 10000 x2535) (= (x1388 x2535) 0)))
(assert (= x3761 (and x3151 (not x3592))))
(assert (x4938 x6929))
(assert (= x7653 (or x8466 x4009)))
(assert (= x3270 (x701 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564))))
(assert (= (x701 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)) x1432))
(assert (= (and x7472 x3603) x6409))
(assert (< (x3407 64 x3342 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6213 (x3116 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (= (x1388 (x3407 64 1 x5792)) (x3407 64 1 x5792)))
(assert (= (x6340 (x1896 x2454 x4147 x8278 x3885 x5310)) x3885))
(assert (x4938 x5190))
(assert (x4938 x3266))
(assert (x4938 x4178))
(assert (x4938 x6756))
(assert (x4938 x7557))
(assert (x4938 x5255))
(assert (x4938 x5491))
(assert (not (x8398 (x3407 64 x2616 6))))
(assert (= (and (not x1630) x3483) x4456))
(assert (not (x8398 (x3407 x2726 x235 x5998))))
(assert (x4485 x2074))
(assert (x4938 x3489))
(assert (= x7474 (x6340 (x7087 x4598 x6970 x5977 x7474))))
(assert (x4938 x260))
(assert (= (and x2674 x4438) x1188))
(assert (=> (>= 10000 x5288) (= (x1388 x5288) 0)))
(assert (= (x701 (x3407 64 x1680 12)) 12))
(assert (= x5781 (=> (and (or (and x7325 (and (= x7609 (x4292 x1579)) (= x6374 x92) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7609 x5734)) (= x5814 x4035) (= (ite (= x92 0) x3315 0) x5734) (= (x3727 x2997) x3503) (= x6033 x1999) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5814) (= x41 x5214) (= x2227 (- x3503 x5734)) (>= x5814 0) (= (+ x5734 x7609) x5814) (= x8247 x8427) (= x4602 x3869))) (and (not x7325) (and (= x4602 x3869) (= x6374 x92) (= x6033 x1999) (= x41 x5214) (= x8427 x8247)))) (= (= 0 x92) x7325)) x8092)))
(assert (x4938 x4999))
(assert (x150 x698))
(assert (= x8282 (x6340 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= x4324 (x6340 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968))))
(assert (x4938 x3409))
(assert (x4938 x4041))
(assert (= x6213 (x3116 (x7087 x6213 x8482 x5120 x2533))))
(assert (x4938 x7702))
(assert (=> (<= x4592 10000) (= 0 (x1388 x4592))))
(assert (x4938 x7601))
(assert (= 0 (x1388 3812630263)))
(assert (= (and x7318 x5684) x7645))
(assert (= x300 (or x7341 x588)))
(assert (= x7268 (and (not x7613) x4119)))
(assert (< (x1896 x3651 x1790 x3653 x910 x8305) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x2953))
(assert (= (and x7695 x3969) x1551))
(assert (=> (<= x6680 10000) (= 0 (x1388 x6680))))
(assert (= (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813) (x1388 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= 5 (x701 (x3407 64 x7048 5))))
(assert (x4938 x7409))
(assert (x4938 x1426))
(assert (= (and x2608 (not x4518)) x5228))
(assert (= (x5419 (x7622 x6213 x8556 x4777 x3164 x3734 x5287)) x5287))
(assert (> (x3407 64 x661 36) 10000))
(assert (x4938 x2164))
(assert (= (and (not x6562) x2113) x6495))
(assert (x4938 x5845))
(assert (x704 x979))
(assert (x4938 x1459))
(assert (x4938 x3337))
(assert (=> (>= 10000 x6970) (= 0 (x1388 x6970))))
(assert (< 10000 (x3407 x6213 x3081 x5009)))
(assert (x4938 x3645))
(assert (> (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172) 10000))
(assert (x4938 x7469))
(assert (= (or x7393 x3508) x1261))
(assert (x4938 x7741))
(assert (= 0 (x1388 45231284858326638837332416019018714005183587760015845327913118753091066265600)))
(assert (= (or (and x6482 x5093) (and x847 x1065)) x7854))
(assert (= (x3647 (x1896 x1389 x4433 x5950 x5294 x6030)) x4433))
(assert (x4938 x1294))
(assert (=> (<= x8282 10000) (= (x1388 x8282) 0)))
(assert (= (and x1054 x619) x987))
(assert (x4938 x6668))
(assert (= x7251 x5871))
(assert (x4938 x6097))
(assert (= (or x1994 x5183) x2016))
(assert (x150 x6500))
(assert (= x1713 (or x5105 x5301)))
(assert (= x1680 (x3647 (x3407 64 x1680 12))))
(assert (x4938 x4609))
(assert (= (and x6452 x7232) x4415))
(assert (not (x8398 (x3407 x2119 x4246 x8011))))
(assert (not (x8398 (x3407 64 x4120 11))))
(assert (= (or x8102 x2427 x6761 x6771 x7092 x136 x7742 x2611 x6271 x8473 x7201) x6212))
(assert (x4938 x809))
(assert (= (x3647 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)) x2535))
(assert (= x7029 (x3647 (x7087 x3479 x7029 x183 x5058))))
(assert (x8398 49960157028345592648530624234191905822321225401495951855107091972775720517632))
(assert (x4938 x5609))
(assert (x4938 x5768))
(assert (x4938 x6895))
(assert (x4938 x4735))
(assert (x4938 x8305))
(assert (x4938 x2829))
(assert (x3670 x1874))
(assert (> (x3407 64 x1891 7) 10000))
(assert (=> (>= 10000 x807) (= 0 (x1388 x807))))
(assert (x4938 x3845))
(assert (= x8108 (and (not x6009) x933)))
(assert (x4938 x7389))
(assert (x4938 x5989))
(assert (= (x1688 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) x5323))
(assert (x4938 x2791))
(assert (x4938 x2210))
(assert (x4938 x5569))
(assert (= (x6568 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)) x4301))
(assert (x4938 x1891))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (=> (>= 10000 x20) (= 0 (x1388 x20))))
(assert (=> (>= 10000 x4311) (= (x1388 x4311) 0)))
(assert (not (x8398 (x7087 x7199 x5813 x4981 x3966))))
(assert (x4938 x1171))
(assert (x4938 x2344))
(assert (x4938 x3293))
(assert (x4938 x5793))
(assert (x4938 x8527))
(assert (= (and (not x90) x7890) x1708))
(assert (x4938 x2571))
(assert (x4485 x6386))
(assert (=> (>= 10000 x3415) (= (x1388 x3415) 0)))
(assert (x4938 x5571))
(assert (> (x7622 x4400 x1644 x2724 x7830 x2972 x3839) 10000))
(assert (x4938 x5099))
(assert (x4938 x472))
(assert (x4938 x2321))
(assert (x4938 x8096))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x4809 x5184)))
(assert (x4938 x3783))
(assert (x4938 x8342))
(assert (x4938 x7313))
(assert (= (x3407 64 x5504 36) (x1388 (x3407 64 x5504 36))))
(assert (=> (<= x6813 10000) (= (x1388 x6813) 0)))
(assert (> (x1896 x4598 x3197 x5234 x8550 x4437) 10000))
(assert (= (and (not x6279) x4996) x1692))
(assert (x4938 x2315))
(assert (= x3181 (and x310 (not x3789))))
(assert (x4938 x5885))
(assert (x4938 x3729))
(assert (x4938 x7206))
(assert (x4938 x1287))
(assert (x4938 x5136))
(assert (x4938 x6405))
(assert (= x6619 (or x459 x1854)))
(assert (x4938 x5791))
(assert (x4938 x4541))
(assert (x4938 x7413))
(assert (x4938 x6842))
(assert (x4938 x1995))
(assert (= (and (not x6784) x8285) x3011))
(assert (x4938 x6543))
(assert (x4938 x7390))
(assert (= x5763 (or x4582 x7240 x8202 x6059 x3858)))
(assert (x4938 x1993))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (> (x1896 x6541 x6699 x7203 x7803 x4524) 10000))
(assert (x4938 x13))
(assert (x4938 x4565))
(assert (x4938 x4828))
(assert (= x8545 (or (and x274 x8115) (and x310 x3789))))
(assert (x4938 x4808))
(assert (=> (<= x8081 10000) (= 0 (x1388 x8081))))
(assert (x4938 x3114))
(assert (= (x1388 (x3407 64 x8491 11)) (x3407 64 x8491 11)))
(assert (x4938 x1933))
(assert (= (x1388 (x7087 x3989 x5981 x1922 x4627)) (x7087 x3989 x5981 x1922 x4627)))
(assert (= (x1388 310283853) 0))
(assert (x4938 x2439))
(assert (x4938 x7644))
(assert (x4938 x7518))
(assert (x4938 x3766))
(assert (= x8103 (x3647 (x1022 32 x8103))))
(assert (=> (>= 10000 x1256) (= (x1388 x1256) 0)))
(assert (x4485 x7574))
(assert (x4938 x1395))
(assert (x4938 x443))
(assert (= x2292 (x701 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (< (x7622 x4400 x1644 x2724 x7830 x2972 x3839) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x1542))
(assert (x150 x7969))
(assert (=> (<= x7722 10000) (= 0 (x1388 x7722))))
(assert (x4938 x910))
(assert (x4938 x5529))
(assert (x4938 x6255))
(assert (x4938 x5874))
(assert (x150 x2416))
(assert (> (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564) 10000))
(assert (x4938 x2776))
(assert (x4938 x1037))
(assert (x704 x3044))
(assert (x4938 x7491))
(assert (x4938 x5940))
(assert (x4938 x3679))
(assert (= (x1388 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)) (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)))
(assert (x4938 x1582))
(assert (=> (<= x1194 10000) (= 0 (x1388 x1194))))
(assert (=> (<= x5998 10000) (= (x1388 x5998) 0)))
(assert (x4938 x6737))
(assert (= x6465 (=> (= (= 0 x7975) x619) (and (=> (and (and (= true x5994) (= false x8416) (= x4033 x3645)) x619) x4804) (=> (and (not x619) (= (< x4033 64) x2155)) (and (=> (and x2155 (and (= x4669 true) (= x3645 0) (= x6096 false))) x4804) (=> (and (and (= (ite (> x6622 0) x461 (x1066 127 x461)) x625) (= (+ 1 x6083) x7210) (= (x2230 (- x6622 (mod (ite (> 32 x625) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2515) (= 354 x8093) (= x3090 (x540 x5993)) (= x5993 (+ 2 x7186)) (= (> x2515 0) x3994) (= x200 (x3407 64 x7048 3)) (= (x3407 64 x5351 11) x8111) (= x6622 (x1066 1 x4616)) (= x461 (div x4616 2)) (= x346 450) (= (x3255 322) x1577) (= (x3407 64 x5351 11) x6083) (= (x6128 x7210) x2621) (= 0 x3531) (= (x3407 64 x5351 11) x7186) (= (x7156 x200) x4616) (= (x3255 290) x1714)) (not x2155)) (and (=> (and (and (= x3079 (div (+ 31 x625) 32)) (= x6666 (* 32 x3079)) (= (+ x6666 548) x834) (= x6312 (= x625 0))) x3994) (and (=> (and (= x4332 (< 31 x625)) (not x6312)) (and (=> (and (not x4332) (and (= x4999 (div x6807 256)) (= (* x4999 256) x1723) (= (x7156 x200) x6807))) x6646) (=> (and (and (and (= x7192 (x751 x8232)) (= (< 580 x4911) x2063) (= x8232 (x1022 32 x200)) (= (+ x625 548) x4911) (= (+ 1 x8232) x2657)) (or (not x2063) (and x2063 (and (= x1287 (x751 x2657)) (>= 612 x4911) (>= x4911 548))))) x4332) x4158))) (=> x6312 x6646))) (=> (and (not x3994) (and (= x283 false) (= 36 x3645) (= x4135 true))) x4804)))))))))
(assert (x4938 x3620))
(assert (x4938 x5311))
(assert (= (or x3850 (and (not x3055) x1585)) x6074))
(assert (= (=> (= (= x1282 0) x7335) (and (=> (and x7335 (and (= x6839 x4984) (= x5635 x5144) (= false x1985) (= 2 x5575) (= x1553 0) (= true x4970) (= x5545 x2926) (= x3900 x8178))) x2407) (=> (and (not x7335) (and (= x1773 x1197) (= x5873 x343) (= x7880 x2667) (= x1268 x2463))) x2453))) x2419))
(assert (x4938 x3593))
(assert (= x4963 (or x7236 x3130)))
(assert (x8398 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (x4938 x6748))
(assert (x4938 x3001))
(assert (=> (>= 10000 x2229) (= 0 (x1388 x2229))))
(assert (x4938 x7274))
(assert (= (x3116 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) x3479))
(assert (= (and x7357 (not x7693)) x7145))
(assert (x4938 x4729))
(assert (=> (>= 10000 x3612) (= 0 (x1388 x3612))))
(assert (x4546 x5098))
(assert (= x5594 (=> (and (= x639 2) (= x1323 false) (= true x4476) (= x4984 x6839) (= x8178 x3900) (= x5635 x7475) (= 0 x1553) (= x5545 x2926)) x2407)))
(assert (x4938 x454))
(assert (x4938 x5787))
(assert (x4938 x4984))
(assert (= (and (not x4929) x6115) x2840))
(assert (x4938 x7149))
(assert (x4938 x1344))
(assert (= x8255 (x6568 (x1896 x7277 x2481 x3415 x960 x8255))))
(assert (< (x7087 x5478 x7722 x8330 x1504) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4405 (or x4746 x6574)))
(assert (= x1504 (x6340 (x7087 x5478 x7722 x8330 x1504))))
(assert (x4938 x5354))
(assert (=> (<= x5815 10000) (= (x1388 x5815) 0)))
(assert (x4938 x448))
(assert (x4938 x4138))
(assert (= x335 (and x6336 x7059)))
(assert (= (or (and x7653 (not x117)) (and (not x6612) x5558) (and x6204 (not x4756)) (and x6077 (not x1067))) x4434))
(assert (x4938 x2713))
(assert (=> (<= x5482 10000) (= 0 (x1388 x5482))))
(assert (x4938 x6557))
(assert (=> (<= x223 10000) (= 0 (x1388 x223))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6717 4)))
(assert (x4938 x2990))
(assert (x4938 x802))
(assert (x4938 x7975))
(assert (= x4742 (or x8508 x3855 x3544 x4882 x7145)))
(assert (x4938 x8035))
(assert (x4938 x5636))
(assert (=> (>= 10000 x3787) (= (x1388 x3787) 0)))
(assert (x4938 x664))
(assert (= (x3116 (x3407 64 x7195 12)) 64))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 x7122)))
(assert (= (x6340 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) x3845))
(assert (x4938 x2019))
(assert (=> (>= 10000 x2402) (= 0 (x1388 x2402))))
(assert (x4938 x8093))
(assert (x4938 x8316))
(assert (= x5374 (or (and (not x3014) x4963) (and (not x1001) x3532))))
(assert (x4938 x1544))
(assert (x4938 x1122))
(assert (= x7564 (and x7789 x4359)))
(assert (= (x1388 (x3407 64 x1232 (ite (>= 32 x206) x2881 (ite (>= 64 x206) x5724 (ite (>= 96 x206) x8332 (ite (<= x206 128) x5271 (ite (>= 160 x206) x312 (ite (<= x206 192) x2304 x5765)))))))) (x3407 64 x1232 (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (<= x206 96) x8332 (ite (>= 128 x206) x5271 (ite (>= 160 x206) x312 (ite (>= 192 x206) x2304 x5765)))))))))
(assert (< (x3407 64 x3585 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x3063))
(assert (x4938 x1298))
(assert (x4938 x315))
(assert (x4938 x5820))
(assert (x4938 x3521))
(assert (= (and x5024 (not x4439)) x118))
(assert (= x8482 (x3647 (x7087 x6213 x8482 x5120 x2533))))
(assert (= (x7087 x2726 x8532 x6769 x6672) (x1388 (x7087 x2726 x8532 x6769 x6672))))
(assert (x4938 x6903))
(assert (= x7893 (or (and x5247 x3349) (and x7237 x191))))
(assert (x4938 x6137))
(assert (x4938 x7697))
(assert (x4938 x8478))
(assert (x4938 x5959))
(assert (= (and (not x4332) x2933) x5677))
(assert (x4938 x4907))
(assert (= 3 (x701 (x3407 64 x6717 3))))
(assert (x4938 x4741))
(assert (x4938 x692))
(assert (x4938 x2777))
(assert (=> (>= 10000 x1515) (= 0 (x1388 x1515))))
(assert (x4938 x7826))
(assert (=> (>= 10000 x2383) (= 0 (x1388 x2383))))
(assert (= 64 (x3116 (x3407 64 x8340 6))))
(assert (= x4633 (and x748 x2197)))
(assert (x4938 x1850))
(assert (x4938 x6349))
(assert (not (x8398 (x1022 32 104))))
(assert (x4938 x3734))
(assert (x4938 x44))
(assert (= (x3647 (x1022 x5478 x42)) x42))
(assert (x4938 x846))
(assert (x4938 x6471))
(assert (= 32 (x3116 (x1022 32 x8103))))
(assert (= (x6568 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)) x7189))
(assert (=> (>= 10000 x8191) (= 0 (x1388 x8191))))
(assert (x4938 x7725))
(assert (x4938 x1836))
(assert (x4938 x5639))
(assert (x4938 x2559))
(assert (x4938 x5092))
(assert (= x3768 (and x6725 x5687)))
(assert (x4938 x5031))
(assert (=> (>= 10000 x2846) (= (x1388 x2846) 0)))
(assert (= x6380 (or (and x2479 x4) (and x1569 x7193))))
(assert (x4938 x1733))
(assert (x704 x7783))
(assert (= x5857 (x3116 (x1896 x5857 x4592 x7294 x5171 x2027))))
(assert (x4938 x1769))
(assert (x4938 x1609))
(assert (x4938 x4298))
(assert (= x4641 (or x6916 x7020)))
(assert (< 10000 (x1022 x1389 x5939)))
(assert (x4938 x7700))
(assert (< 10000 (x1896 x2726 x7749 x2789 x3787 x3437)))
(assert (=> (>= 10000 x8556) (= 0 (x1388 x8556))))
(assert (x4938 x3260))
(assert (=> (>= 10000 x4627) (= (x1388 x4627) 0)))
(assert (x4938 x3156))
(assert (x4938 x4463))
(assert (= x4808 (x6340 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405))))
(assert (x4938 x8426))
(assert (x4938 x1775))
(assert (x4938 x6802))
(assert (x4938 x7657))
(assert (x4938 x4720))
(assert (x4938 x5017))
(assert (x4938 x5697))
(assert (x4938 x7404))
(assert (x4938 x5066))
(assert (= (x3647 (x1896 x7277 x2481 x3415 x960 x8255)) x2481))
(assert (= (=> (= (+ x5884 x4227) x817) x3352) x7463))
(assert (= (=> (= x8276 (+ x7998 292)) x3542) x1073))
(assert (x4938 x6904))
(assert (= x3808 (x6568 (x7622 x3224 x7683 x1344 x5037 x3808 x8369))))
(assert (x4938 x4109))
(assert (> (x1022 x4809 x5184) 10000))
(assert (x4938 x5227))
(assert (x4938 x3759))
(assert (x4938 x7604))
(assert (= x6159 (or x5846 x4429 x2067 x1208 x3329 x7631)))
(assert (= (x6568 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) x7310))
(assert (x4938 x8376))
(assert (x4938 x3183))
(assert (x4938 x358))
(assert (= (and x5440 x1070) x1683))
(assert (x4938 x5236))
(assert (x4938 x805))
(assert (x4938 x6919))
(assert (x4938 x5007))
(assert (=> (>= 10000 x7467) (= 0 (x1388 x7467))))
(assert (x4938 x7167))
(assert (=> (>= 10000 x2481) (= 0 (x1388 x2481))))
(assert (x4938 x5392))
(assert (> (x1022 x2726 x3440) 10000))
(assert (= 0 (x1388 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (= x696 (and x3844 x7970)))
(assert (x4938 x3387))
(assert (x4938 x2018))
(assert (= x7308 (x3647 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323))))
(assert (= (or (and x2634 x8230) (and x6017 x4411)) x2946))
(assert (=> (>= 10000 x3651) (= 0 (x1388 x3651))))
(assert (x4938 x4435))
(assert (x4938 x6023))
(assert (x4938 x440))
(assert (x150 x461))
(assert (x4938 x2309))
(assert (= x51 (and (not x4571) x5799)))
(assert (= (x5419 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) x5749))
(assert (= x5507 (x3647 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (= (x1388 (x3407 x4400 x530 x4750)) (x3407 x4400 x530 x4750)))
(assert (x4938 x4179))
(assert (x4938 x4838))
(assert (x4938 x366))
(assert (= (x1688 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x3298))
(assert (x4938 x8062))
(assert (= (x1388 94926909962862326217726538024181891405690106632559804934698421914364834480128) 0))
(assert (= (or x3275 x4177 x2332 x1434 x3922 x6793 x5418 x7349 x2144 x5552) x7292))
(assert (> (x3407 x3989 x6760 x1411) 10000))
(assert (= (x7087 x6541 x7752 x8107 x2402) (x1388 (x7087 x6541 x7752 x8107 x2402))))
(assert (x4938 x6133))
(assert (x4938 x6705))
(assert (= (x555 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)) x8117))
(assert (= x2454 (x3116 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (= x7057 (and x3026 (not x8521))))
(assert (x8398 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (> (x3407 64 x5351 11) 10000))
(assert (= (and (not x429) x1151) x5603))
(assert (x4938 x4000))
(assert (x4938 x5674))
(assert (x4938 x599))
(assert (= x2246 (and x7628 (not x3994))))
(assert (= (and (not x5921) x1380) x2733))
(assert (x3670 x6988))
(assert (= (x1896 x6088 x2440 x5482 x1969 x6350) (x1388 (x1896 x6088 x2440 x5482 x1969 x6350))))
(assert (x4938 x5221))
(assert (x150 x8152))
(assert (x4938 x5323))
(assert (x4938 x6310))
(assert (x4938 x5632))
(assert (=> (<= x6832 10000) (= (x1388 x6832) 0)))
(assert (x4938 x4115))
(assert (= (x1388 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)))
(assert (< 10000 (x3407 64 x1859 100)))
(assert (x4938 x6729))
(assert (x4938 x1659))
(assert (x4938 x3758))
(assert (x4938 x1064))
(assert (x4938 x75))
(assert (x4938 x4754))
(assert (x4938 x6973))
(assert (= x2454 (x3116 (x7622 x2454 x7378 x3190 x5182 x1064 x4091))))
(assert (x4938 x6616))
(assert (=> (>= 10000 x4831) (= (x1388 x4831) 0)))
(assert (x4938 x4311))
(assert (= 0 (x1388 4294967295)))
(assert (x4938 x1273))
(assert (not (x8398 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (=> (<= x7966 10000) (= (x1388 x7966) 0)))
(assert (not (x8398 (x3407 64 x3833 36))))
(assert (x4938 x2510))
(assert (x4938 x1996))
(assert (= (and x4194 x5321) x718))
(assert (x4938 x6961))
(assert (= x3966 (x6340 (x7087 x7199 x5813 x4981 x3966))))
(assert (> (x3407 x6088 x407 x3652) 10000))
(assert (= (x3647 (x1896 x3989 x7933 x2869 x5737 x214)) x7933))
(assert (x4938 x1499))
(assert (x4938 x5470))
(assert (= (x1388 (x3407 64 x6658 6)) (x3407 64 x6658 6)))
(assert (x4938 x7076))
(assert (x3670 x280))
(assert (= (and x168 x7857) x785))
(assert (= x1213 (and (not x3374) x5494)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x5478 x42)))
(assert (not (x8398 (x7087 x5857 x604 x2406 x7313))))
(assert (x4938 x717))
(assert (= (and x7773 x4125) x7489))
(assert (x4938 x2271))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639680) 0))
(assert (x4938 x7378))
(assert (= (or x4663 x1000 x2459) x8269))
(assert (=> (>= 10000 x8120) (= 0 (x1388 x8120))))
(assert (x4938 x5291))
(assert (= (x3116 (x7087 x7199 x5813 x4981 x3966)) x7199))
(assert (= x1373 (x6568 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (x4938 x931))
(assert (x4938 x3805))
(assert (x4938 x965))
(assert (x4938 x1540))
(assert (=> (>= 10000 x2642) (= 0 (x1388 x2642))))
(assert (= (x6340 (x7087 x4809 x1858 x5832 x2909)) x2909))
(assert (= x7695 (and (not x2605) x5960)))
(assert (= (x1388 (x3407 64 x8409 36)) (x3407 64 x8409 36)))
(assert (< 10000 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536)))
(assert (x4938 x5873))
(assert (= (x701 (x3407 64 x5520 11)) 11))
(assert (=> (>= 10000 x5010) (= (x1388 x5010) 0)))
(assert (= (or x337 x6502) x2553))
(assert (= (x3647 (x1022 32 x2141)) x2141))
(assert (= x1810 (x3647 (x7087 x2119 x1810 x1425 x7992))))
(assert (x4938 x18))
(assert (=> (<= x3365 10000) (= (x1388 x3365) 0)))
(assert (= (and x5872 x317) x4416))
(assert (= x2944 (x6340 (x7087 x1389 x4115 x5007 x2944))))
(assert (x4938 x8533))
(assert (= (=> (and (or (and x5540 (and (and (= (x7587 x3539) x3806) (= x7554 (> x6007 32))) (or (not x7554) (and x7554 (and (and (= x7680 (x7100 (+ x3539 32))) (= (< 64 x6007) x6762) (= x7425 (x7100 (+ x6938 32))) (= (x6385 x7680) x846)) (or (and (and (or (and (and (= (x7100 (+ 96 x6938)) x713) (>= 128 x6007) (= x4505 (x7100 (+ 96 x3539))) (= x465 (x2434 x4505))) x4222) (not x4222)) (and (= (< 96 x6007) x4222) (= (x7100 (+ x3539 64)) x6706) (= x7153 (x7332 x6706)) (= (x7100 (+ 64 x6938)) x5213))) x6762) (not x6762))))))) (not x5540)) (and (= x6938 (x7100 (+ x6081 32))) (= x4567 (x7100 (+ x635 x7023))) (= (x2230 (- x6081 x5541)) x7928) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5274) x7309) (= (> x6007 0) x5540) (= x6007 (x7961 x5493)) (= (x7100 (+ x7309 x7023)) x6081) (= (x7100 (+ x635 31)) x5274) (= (x7100 (+ x3757 32)) x5535) (= (x7100 (+ x5535 32)) x1852))) x508) x1007))
(assert (=> (<= x5171 10000) (= (x1388 x5171) 0)))
(assert (= 64 (x3116 (x3407 64 x1958 36))))
(assert (= x5486 (x3647 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (= (and x6636 (not x6351)) x2174))
(assert (x4938 x3630))
(assert (= (x1388 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (>= 96 x4159) x7440 (ite (>= 128 x4159) x6983 (ite (>= 160 x4159) x2778 (ite (<= x4159 192) x1660 x3397)))))))) (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (>= 64 x4159) x935 (ite (>= 96 x4159) x7440 (ite (>= 128 x4159) x6983 (ite (>= 160 x4159) x2778 (ite (<= x4159 192) x1660 x3397)))))))))
(assert (x4938 x4501))
(assert (x4938 x7308))
(assert (= (x701 (x3407 64 x1859 100)) 100))
(assert (= (x3116 (x3407 64 x3833 36)) 64))
(assert (x4938 x7754))
(assert (not (x8398 (x3407 x6213 x3081 x5009))))
(assert (x4938 x4917))
(assert (= x7255 (or x1939 x4160)))
(assert (= (x1388 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)))
(assert (= (x3116 (x3407 64 x3822 36)) 64))
(assert (< (x3407 64 x239 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x433 10000) (= (x1388 x433) 0)))
(assert (x4938 x3823))
(assert (= (x1388 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (= (x1022 x3479 x7013) (x1388 (x1022 x3479 x7013))))
(assert (x3670 x3167))
(assert (< 10000 (x3407 64 x8340 36)))
(assert (> (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503) 10000))
(assert (x4938 x1884))
(assert (x4938 x2925))
(assert (> (x3407 x7199 x226 x4057) 10000))
(assert (x4938 x4809))
(assert (x4938 x6283))
(assert (x4938 x2542))
(assert (= (and x4612 x890) x3375))
(assert (x4938 x3970))
(assert (x4938 x5438))
(assert (x4938 x7980))
(assert (=> (<= x7277 10000) (= 0 (x1388 x7277))))
(assert (x4938 x2433))
(assert (= x3651 (x3116 (x3407 x3651 x633 x7276))))
(assert (= x6530 (and (not x7945) x4261)))
(assert (x4938 x690))
(assert (< (x1896 x2119 x3204 x7545 x6185 x4559) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5528))
(assert (x150 x5901))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3228 2)))
(assert (x4938 x6958))
(assert (= (x3116 (x3407 64 x7413 36)) 64))
(assert (=> (<= x1233 10000) (= 0 (x1388 x1233))))
(assert (x4938 x2866))
(assert (= (x1388 (x1896 x6541 x6699 x7203 x7803 x4524)) (x1896 x6541 x6699 x7203 x7803 x4524)))
(assert (=> (<= x8389 10000) (= 0 (x1388 x8389))))
(assert (x4938 x6579))
(assert (= x5933 (and (not x7952) x1835)))
(assert (x4938 x2071))
(assert (= (x3116 (x7622 x4598 x663 x6206 x1584 x7317 x3231)) x4598))
(assert (= x1672 (=> (and (and (= (x1163 128) x3444) (= (= x4400 x3444) x3061)) (or (and (and (= x3992 (x1163 128)) (= (ite (> x3992 0) 1 0) x5487)) x3061) (and (not x3061) (= (ite x3061 1 0) x5487)))) x6823)))
(assert (x4938 x3018))
(assert (=> (<= x3692 10000) (= (x1388 x3692) 0)))
(assert (= x7199 (x3116 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (not (x8398 (x1022 x2119 x6911))))
(assert (x4938 x2702))
(assert (x4938 x4259))
(assert (=> (>= 10000 x863) (= 0 (x1388 x863))))
(assert (x4938 x3363))
(assert (x4938 x8456))
(assert (= (x3647 (x3407 x4809 x2723 x5385)) x2723))
(assert (x4938 x3991))
(assert (x4938 x4983))
(assert (x4938 x1238))
(assert (= (and (not x3141) x1893) x7412))
(assert (= x7368 (or x8361 x4842 x1692 x5027 x8108)))
(assert (= (and x3671 (not x3584)) x3686))
(assert (x4938 x5057))
(assert (x4938 x567))
(assert (= x5385 (x701 (x3407 x4809 x2723 x5385))))
(assert (x4938 x2622))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x6213 x8096 x4464 x7643 x4486)))
(assert (x4938 x1546))
(assert (= (or x702 x6995) x2225))
(assert (x4938 x7244))
(assert (= x4038 (and (not x4580) x3379)))
(assert (= x6843 (and (not x506) x2878)))
(assert (x4938 x8133))
(assert (x4938 x2343))
(assert (not (x8398 (x7622 x3479 x7884 x1998 x3288 x2864 x1503))))
(assert (= (x1388 (x1896 x5857 x4592 x7294 x5171 x2027)) (x1896 x5857 x4592 x7294 x5171 x2027)))
(assert (= (x1388 (+ x6853 2)) (x1388 x6853)))
(assert (x4938 x2926))
(assert (x3670 x5732))
(assert (x4938 x6048))
(assert (x4938 x7432))
(assert (x4938 x6108))
(assert (< (x3407 64 x1579 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x150 x6691))
(assert (= (and x3101 x7977) x4587))
(assert (x4938 x4079))
(assert (> (x3407 64 x3833 36) 10000))
(assert (= (x6568 (x7622 x6088 x6608 x929 x2836 x1656 x880)) x1656))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 x7608)))
(assert (x4938 x960))
(assert (x4938 x2620))
(assert (= x6059 (and x5684 (not x7318))))
(assert (x4938 x4749))
(assert (= x7417 (and x5460 x2429)))
(assert (x4938 x6882))
(assert (x4938 x6798))
(assert (x4938 x7757))
(assert (=> (<= x5756 10000) (= 0 (x1388 x5756))))
(assert (x4938 x196))
(assert (= x7699 (and x5555 (not x7493))))
(assert (x4938 x7563))
(assert (= x4062 (and x2350 x3185)))
(assert (x4938 x8129))
(assert (= (=> (and (= (= x4023 0) x528) (or (not x528) x528)) x7040) x281))
(assert (x4938 x367))
(assert (x4938 x1410))
(assert (= x8390 (x3647 (x7087 x4400 x8390 x5866 x613))))
(assert (not (x8398 (x1022 x2454 x196))))
(assert (x4938 x5442))
(assert (x4938 x3069))
(assert (x4938 x2670))
(assert (x4938 x874))
(assert (= (x701 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)) x5815))
(assert (= x3094 (x1688 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094))))
(assert (= x2514 (and x5108 x7892)))
(assert (= (x701 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)) x1971))
(assert (not (x8398 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890))))
(assert (= x2402 (x6340 (x7087 x6541 x7752 x8107 x2402))))
(assert (= x4536 (and x1512 x2032)))
(assert (> (x1896 x2119 x3204 x7545 x6185 x4559) 10000))
(assert (x4938 x235))
(assert (= x6293 (or x176 x2339 x434 x969 x8463)))
(assert (x4938 x3817))
(assert (= x8340 (x3647 (x3407 64 x8340 2))))
(assert (= x2312 (x701 (x7622 x2726 x4078 x2312 x1794 x4185 x5530))))
(assert (x4938 x4871))
(assert (x4938 x5928))
(assert (= x8519 (or x5248 x6975 x8338)))
(assert (x4938 x2594))
(assert (= (and x6183 x4716) x6257))
(assert (x4938 x6393))
(assert (x4938 x4295))
(assert (> (x3407 64 x8340 2) 10000))
(assert (x4938 x1818))
(assert (not (x8398 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968))))
(assert (= (x1388 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)))
(assert (= (or x2117 x6873 x5161 x2435 x867) x5708))
(assert (x4938 x8190))
(assert (x4938 x4271))
(assert (= (and (not x4044) x7951) x7323))
(assert (x4938 x1577))
(assert (x150 x8316))
(assert (x4938 x1420))
(assert (x4938 x600))
(assert (= (x701 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756)) x4401))
(assert (x4938 x5955))
(assert (x4938 x8100))
(assert (x4938 x2839))
(assert (= (x6340 (x1896 x7277 x2481 x3415 x960 x8255)) x960))
(assert (=> (<= x3321 10000) (= 0 (x1388 x3321))))
(assert (x704 x5508))
(assert (= x5680 (and x4439 x5024)))
(assert (x4938 x5966))
(assert (x4938 x2915))
(assert (= x5288 (x3647 (x3407 x1389 x5288 x1940))))
(assert (x4938 x6813))
(assert (= x8423 (and x4689 x3753)))
(assert (x4938 x5482))
(assert (x4938 x7830))
(assert (= x524 (and (not x5744) x8122)))
(assert (x704 x6471))
(assert (=> (>= 10000 x5428) (= 0 (x1388 x5428))))
(assert (= (x3116 (x3407 64 x8409 2)) 64))
(assert (= (x3407 64 x2019 12) (x1388 (x3407 64 x2019 12))))
(assert (x4938 x1370))
(assert (= x3542 (=> (and (= x4552 (- x8276 132)) (= (ite (< 0 x4792) x6691 (x1066 127 x6691)) x804) (= x4756 (< 0 x5972)) (= x6691 (div x7828 2)) (= (x2230 (- x4792 (mod (ite (> 32 x804) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5972) (= (x1066 1 x7828) x4792)) (and (=> (and x4756 (and (= x3842 (+ x8276 32)) (= x7566 (x1066 1 x7828)) (= (= x7566 0) x402))) (and (=> (and (and (= x2223 (+ x3842 x8474)) (= (* 32 (ite (not (= x804 0)) 1 0)) x8474) (= x3736 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7828)) (or (= 0 x8474) (= x8474 32))) x402) x3776) (=> (and (not x402) (and (or (and x351 (and (= (x7511 x6275) x523) (= x2150 32) (<= x804 32))) (and (= x2150 0) (not x351))) (and (= x6275 (x1022 32 104)) (= (< 0 x804) x351)))) x879))) (=> (not x4756) x6732)))))
(assert (= x1190 (=> (= (+ x488 292) x6831) x7686)))
(assert (x4938 x7923))
(assert (= (and (not x274) x8115) x4326))
(assert (x4938 x6650))
(assert (x4938 x5626))
(assert (= x5373 (and x3026 x8521)))
(assert (=> (<= x5697 10000) (= (x1388 x5697) 0)))
(assert (x4938 x4853))
(assert (= x5160 (and (not x6725) x5687)))
(assert (= (and x3308 x4932) x296))
(assert (= x6882 (x5419 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (x4938 x3081))
(assert (x4938 x2337))
(assert (x704 x3709))
(assert (< (x1022 x4598 x7006) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x8398 (x3407 x6088 x407 x3652))))
(assert (x4938 x7007))
(assert (= x2785 (or x3665 x3705 x2733 x3816 x7854 x7170)))
(assert (x4938 x7211))
(assert (x150 x4138))
(assert (= (x701 (x3407 64 x6717 4)) 4))
(assert (=> (>= 10000 x1258) (= (x1388 x1258) 0)))
(assert (x4938 x8265))
(assert (x4938 x8512))
(assert (=> (<= x1933 10000) (= 0 (x1388 x1933))))
(assert (= (x1388 (x3407 64 x6673 36)) (x3407 64 x6673 36)))
(assert (= x5730 (x5419 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953))))
(assert (x4938 x6970))
(assert (x4938 x7682))
(assert (= (x3407 x5857 x3212 x3321) (x1388 (x3407 x5857 x3212 x3321))))
(assert (= (and x6993 x6367) x2025))
(assert (= (and x3849 x3677) x4282))
(assert (x4938 x3725))
(assert (not (x8398 (x3407 64 x239 100))))
(assert (x4938 x7749))
(assert (= x2993 (and x2952 x7720)))
(assert (x4938 x6996))
(assert (= (and (not x7892) x5108) x4406))
(assert (x4938 x5748))
(assert (= (x3647 (x3407 64 x1232 (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (<= x206 96) x8332 (ite (<= x206 128) x5271 (ite (<= x206 160) x312 (ite (<= x206 192) x2304 x5765)))))))) x1232))
(assert (=> (<= x3546 10000) (= (x1388 x3546) 0)))
(assert (x4938 x4898))
(assert (= (x1388 (x3407 64 x3833 36)) (x3407 64 x3833 36)))
(assert (> (x1896 x6213 x8096 x4464 x7643 x4486) 10000))
(assert (x4938 x985))
(assert (= (x1388 (x3407 64 x1842 0)) (x3407 64 x1842 0)))
(assert (x4938 x1736))
(assert (= (and x5542 x3626) x233))
(assert (= 64 (x3116 (x3407 64 x6673 36))))
(assert (x4938 x936))
(assert (x4938 x5085))
(assert (x4938 x5985))
(assert (= (x1388 (x1022 32 x7608)) (x1022 32 x7608)))
(assert (< 10000 (x3407 64 1 x3628)))
(assert (x4938 x7380))
(assert (= (=> (and (= x3664 x2463) (= x1899 x1197) (= x343 x1900) (= x2620 x2667)) x5862) x2453))
(assert (x4938 x4246))
(assert (x4938 x4952))
(assert (= (and x85 (not x7150)) x1569))
(assert (x4938 x8438))
(assert (= (x3407 x2119 x4246 x8011) (x1388 (x3407 x2119 x4246 x8011))))
(assert (x4938 x8464))
(assert (x4938 x1229))
(assert (= x4105 (x6340 (x7087 x3224 x8081 x5985 x4105))))
(assert (x4938 x7582))
(assert (x704 x3405))
(assert (x4938 x6618))
(assert (= x4298 (x3647 (x1022 x7277 x4298))))
(assert (x4938 x2869))
(assert (= (x3647 (x7087 x7199 x5813 x4981 x3966)) x5813))
(assert (x4938 x7600))
(assert (x4938 x6693))
(assert (=> (<= x1680 10000) (= 0 (x1388 x1680))))
(assert (x4938 x5944))
(assert (x4938 x4023))
(assert (x4938 x3027))
(assert (= x5624 (and (not x6901) x4992)))
(assert (x4938 x4322))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 x2141)))
(assert (x4938 x7777))
(assert (x4938 x523))
(assert (x4938 x6460))
(assert (= (x1688 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) x5647))
(assert (=> (>= 10000 x6835) (= 0 (x1388 x6835))))
(assert (not (x8398 (x1896 x1389 x4433 x5950 x5294 x6030))))
(assert (= (and x2799 x1469) x2413))
(assert (x8398 1766847064778384329583297500742918515827483896875618958121606201292619776))
(assert (x4938 x6290))
(assert (x4938 x8169))
(assert (x4938 x4589))
(assert (x4938 x885))
(assert (x4938 x5810))
(assert (x4938 x3093))
(assert (= (and x1463 x2948) x5984))
(assert (= (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023) (x1388 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (x8398 89332125780766104441357105940599211734484755930370930871569612501041822040064))
(assert (x4938 x3757))
(assert (x4938 x3389))
(assert (x4938 x2068))
(assert (x4938 x5184))
(assert (x4938 x2432))
(assert (not (x8398 (x7087 x2726 x8532 x6769 x6672))))
(assert (= (=> (and (and (<= x6673 255) (= x4671 (= x6673 255))) (or (and (and (= x7751 (+ 1 x6673)) (= (x1131 x3515) x3120) (= x989 x8178) (= x6116 (x1066 255 x7751)) (= x5545 x1189) (= x4197 false) (= x5635 32) (= 1 x1553) (= x5221 (x1066 255 x7751)) (= x6839 x7428) (= false x5279) (= (x3407 64 x6673 36) x3515)) (not x4671)) (and (and (= x7002 true) (= x1152 2) (= x3900 x8178) (= false x3230) (= x5635 36) (= 0 x1553) (= x2926 x5545) (= x4984 x6839)) x4671))) x2407) x1164))
(assert (< (x1022 x7277 x4298) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x1391))
(assert (not (x8398 (x7087 x206 x7682 x314 x3818))))
(assert (= (x1388 (x3407 64 x7610 6)) (x3407 64 x7610 6)))
(assert (=> (<= x2333 10000) (= (x1388 x2333) 0)))
(assert (x3670 x3924))
(assert (=> (>= 10000 x380) (= 0 (x1388 x380))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x8491 11)))
(assert (=> (<= x6663 10000) (= (x1388 x6663) 0)))
(assert (x4938 x4578))
(assert (x4938 x2196))
(assert (x4938 x8052))
(assert (x4938 x8367))
(assert (< 10000 (x3407 64 x7610 6)))
(assert (= (or x7420 x5202) x6252))
(assert (= (and x1276 (not x8535)) x1864))
(assert (= x395 (=> (= x7968 (= 0 x1635)) (and (=> (and (and (= x671 x340) (= x4449 true) (= x6090 false)) x7968) x6463) (=> (and (= (> 64 x671) x4580) (not x7968)) (and (=> (and x4580 (and (= x6434 true) (= x340 0) (= false x4341))) x6463) (=> (and (not x4580) (and (= 354 x7142) (= x4684 x7167) (= x6211 x1702) (= x4727 x4388) (= x2436 x3072) (= x3963 x5938) (= x7241 x45) (= x356 x4109) (= x6943 x3027) (= x2904 x3280) (= x6089 x4723) (= (x7520 322) x598) (= (x7520 290) x6089) (= x8257 x7291) (= x1006 x5853) (= x3017 x3156) (= x7457 x5020))) x735)))))))
(assert (= x114 (=> (and (= x3196 0) (= true x1345) (= x4966 false)) x2887)))
(assert (= x8495 (and x1574 x7844)))
(assert (x4938 x6000))
(assert (=> (<= x2753 10000) (= (x1388 x2753) 0)))
(assert (= x6138 (x555 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (x4938 x1502))
(assert (x4938 x8091))
(assert (= x3661 (x6568 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890))))
(assert (x4938 x6838))
(assert (= (and x6571 x7506) x5239))
(assert (= x7752 (x3647 (x7087 x6541 x7752 x8107 x2402))))
(assert (= (x6340 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023)) x1841))
(assert (= x4612 (or x3882 x237 x7753)))
(assert (x4938 x7153))
(assert (= (and (not x7789) x4359) x4514))
(assert (x4938 x2312))
(assert (=> (>= 10000 x7413) (= 0 (x1388 x7413))))
(assert (x4938 x8184))
(assert (x4938 x1478))
(assert (= (and x6914 (not x2072)) x2862))
(assert (x4938 x5452))
(assert (x4938 x3907))
(assert (x4938 x5504))
(assert (x4938 x1955))
(assert (x4938 x2445))
(assert (x4938 x5195))
(assert (not (x8398 (x3407 64 x1579 2))))
(assert (x4938 x6769))
(assert (= (x1388 2088793519) 0))
(assert (x4938 x5909))
(assert (x4938 x4795))
(assert (x3670 x4259))
(assert (= x7909 (and x2694 x7209)))
(assert (= (and (not x1926) x3699) x5555))
(assert (=> (>= 10000 x342) (= 0 (x1388 x342))))
(assert (x4938 x6643))
(assert (= (and x4453 x6091) x4539))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 x6445)))
(assert (x4938 x3288))
(assert (x4938 x1110))
(assert (x4938 x1226))
(assert (x4938 x5750))
(assert (= (x3116 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813)) x6541))
(assert (x4938 x7792))
(assert (= x4139 (x3647 (x1896 x7199 x4139 x2108 x7648 x2383))))
(assert (x4938 x2177))
(assert (not (x8398 (x7622 x7277 x828 x6423 x4655 x7851 x163))))
(assert (x4938 x3345))
(assert (=> (>= 10000 x5007) (= 0 (x1388 x5007))))
(assert (= (or x2314 x5807) x1765))
(assert (= (=> (and (= x3055 (= x6300 0)) (or x3055 (not x3055))) x5283) x5705))
(assert (> (x1022 x3224 x2213) 10000))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= (x3647 (x3407 64 x1859 100)) x1859))
(assert (x704 x415))
(assert (= (and (not x4) x2479) x2498))
(assert (x4938 x1714))
(assert (x4938 x7474))
(assert (x4938 x8468))
(assert (=> (>= 10000 x3845) (= (x1388 x3845) 0)))
(assert (= (x6568 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) x7060))
(assert (x4938 x3429))
(assert (not (x8398 (x7087 x5478 x7722 x8330 x1504))))
(assert (x4938 x5949))
(assert (= x3705 (and (not x4508) x765)))
(assert (= (and x1767 (not x8487)) x747))
(assert (= (x701 (x3407 64 x1579 1)) 1))
(assert (= (x3407 x2726 x235 x5998) (x1388 (x3407 x2726 x235 x5998))))
(assert (x150 x8007))
(assert (x4938 x2080))
(assert (x4938 x6089))
(assert (x4938 x8509))
(assert (x4938 x8374))
(assert (x4938 x3400))
(assert (= x3940 (and x888 x1968)))
(assert (x4938 x4810))
(assert (x4938 x2740))
(assert (x4938 x7648))
(assert (= (x3647 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172)) x1552))
(assert (= (=> (= (= 0 x5529) x1078) (and (=> (and x1078 (and (>= 255 x83) (= x83 (x4585 x6651)) (= x6651 (x3407 64 x2140 10)) (= (< 0 x83) x958))) (and (=> (and (and (= x2561 x1238) (= x1839 x7981) (= x8210 x3353)) (not x958)) x6594) (=> (and (and (or (and (and (or (and x917 (and (<= 0 x1912) (= x5329 1) (= x3353 x2850) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1912) (= x6978 x138) (= false x3550) (= x6744 x5801) (= x6283 x1763) (= x5883 x661) (= x7981 x584) (= x4881 x7374) (= x8549 x5098) (= false x258) (= x6717 x3780) (= x1238 x4368) (= x621 x2071) (= x8267 x2801) (= x4034 x1912) (= x1145 x2331))) (and (not x917) (and (= x661 x5883) (= x2071 x621) (= x6546 false) (= x2331 x1145) (= x1763 x6283) (= x5353 2) (= x3780 x6717) (= x8267 x2801) (= x5801 x6744) (= x2850 x3353) (= x584 x7981) (= 0 x5329) (= x4350 true) (= x7374 x4881) (= x6978 x138) (= x4368 x1238) (= x5098 x8549)))) (and (>= 127 x5147) (= x87 (< (* 1000000000 x3353) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x391 x7274) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x4735) (= x8404 (x8177 x4187)) (<= 1 x8404) (= 310283853 x974) (>= 127 x5147) (= false x4263) (= false x2351) (= (* 1000000000 x3353) x1912) (= (and x87 x2050) x917) (= x3353 x391) (= x7498 36) (= x2050 (<= x1912 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x4862) (and (and (<= 1 x1238) (= x6737 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= 1461501637330902918203684832716283019655932542975 x1238) (= x138 x6978) (= x6717 x3780) (= x1145 x2331) (>= x1916 1) (= x6283 x1763) (= x1916 (x8177 x3521)) (= x8188 false) (= x1459 310283853) (= x4368 x1238) (= x2850 x3353) (= x661 x5883) (= x3521 x1238) (= false x8371) (= x783 36) (>= 127 x8133) (<= x8133 127) (= x584 x7981) (= x3328 false) (= x3353 x2187) (= x8267 x2801) (= x2071 x621) (= x8549 x5098) (= x7482 false) (= x5801 x6744) (= x7374 x4881) (= 1 x5329)) (not x4862))) (and (= x4862 (= x4187 x1238)) (= 128 x2367) (<= x1238 1461501637330902918203684832716283019655932542975))) x958) x3826))) (=> (and (not x1078) (and (= x8210 x3353) (= x2561 x1238) (= x7981 x1839))) x6594))) x3834))
(assert (< (x1022 x6213 x863) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x6952 (and (not x8001) x66)))
(assert (x4938 x6754))
(assert (x4938 x5913))
(assert (x4938 x6094))
(assert (= (x3647 (x7087 x4809 x1858 x5832 x2909)) x1858))
(assert (=> (<= x1676 10000) (= (x1388 x1676) 0)))
(assert (x4938 x1473))
(assert (x4938 x2182))
(assert (x4938 x4422))
(assert (x4938 x7752))
(assert (x4938 x3024))
(assert (= (x701 (x1896 x3224 x6110 x1045 x8162 x2618)) x1045))
(assert (x4938 x412))
(assert (x4938 x7503))
(assert (x4938 x689))
(assert (=> (<= x661 10000) (= (x1388 x661) 0)))
(assert (= x7468 (x701 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (= x5334 (=> (and (or (and (not x4017) (and (= x5977 (x7688 x5438)) (= (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016) x3132) (= (x165 192) x2312) (= x6148 (x7100 (+ x5569 128))) (= (x7100 (+ x5569 128)) x3813) (= x1271 (x7100 (+ x5569 96))) (= x2669 (x3407 x2726 x235 x5998)) (= (x7688 x5569) x663) (= (x7100 (+ 96 x5569)) x8355) (= x1836 (x165 224)) (= x3360 (x165 224)) (= x6672 (x165 224)) (= (x7688 x2358) x6968) (= (x165 192) x2789) (= (x7688 x1271) x1133) (= (x165 288) x79) (= x235 (x165 160)) (= x5512 (x7100 (+ 96 x5569))) (= (x7688 x6997) x2333) (= x8014 (x7100 (+ 96 x5569))) (<= x2726 224) (= x5888 (x7688 x5569)) (= x4108 (x7087 x4598 x6970 x5977 x7474)) (= x2819 (x1896 x2726 x7749 x2789 x3787 x3437)) (= x96 (x165 192)) (= (x7688 x5170) x1227) (= x7317 (x7688 x8014)) (= (x165 320) x5323) (= (x7622 x2726 x4078 x2312 x1794 x4185 x5530) x2587) (= x3383 (ite (= (ite (= 0 x2726) x1222 (ite (>= 32 x2726) x2467 (ite (>= 64 x2726) x2669 (ite (<= x2726 96) x2352 (ite (<= x2726 128) x2819 (ite (<= x2726 160) x2587 (ite (<= x2726 192) x3410 x3132))))))) (ite (= 0 x4598) x675 (ite (>= 32 x4598) x4386 (ite (<= x4598 64) x618 (ite (<= x4598 96) x4108 (ite (<= x4598 128) x3577 (ite (<= x4598 160) x6274 (ite (<= x4598 192) x2482 x1204)))))))) 1 0)) (= x4078 (x165 160)) (= x3231 (x7688 x3813)) (= x4185 (x165 256)) (= x7749 (x165 160)) (= x675 (x4958 0)) (= (x7688 x3502) x7334) (= (x7688 x5597) x5701) (= x1794 (x165 224)) (= x2467 (x1022 x2726 x3440)) (= (x165 160) x2293) (= (x7688 x5569) x7006) (= x5530 (x165 288)) (= (x165 256) x3437) (= (x165 256) x3060) (= x5438 (x7100 (+ 32 x5569))) (= (x7688 x7895) x8550) (= x6997 (x7100 (+ 32 x5569))) (= x8297 (x165 288)) (= (x7100 (+ x5569 32)) x3010) (= x6206 (x7688 x8510)) (= (x7100 (+ x5569 32)) x8510) (= x4068 (x165 256)) (= x2352 (x7087 x2726 x8532 x6769 x6672)) (= (x7688 x8355) x4437) (= (x165 192) x1051) (= (x7688 x1308) x4754) (= (x7100 (+ 192 x5569)) x3502) (= x5867 (x7688 x5512)) (= (x7100 (+ 160 x5569)) x2358) (= x4386 (x1022 x4598 x7006)) (= x5234 (x7688 x8289)) (= x1204 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) (= (x3407 x4598 x4609 x1933) x618) (= x1584 (x7688 x3378)) (= (x165 192) x5998) (= (x165 128) x2726) (= x6769 (x165 192)) (= x7312 (x7688 x6148)) (= x5597 (x7100 (+ x5569 128))) (= (x165 352) x4016) (= (x165 320) x5336) (= x1933 (x7688 x3010)) (= x3197 (x7688 x5569)) (= x3410 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) (= x4609 (x7688 x5569)) (= (x7100 (+ x5569 64)) x3378) (= (x4958 0) x1222) (= (x165 160) x3440) (= x5716 (x7100 (+ x5569 64))) (= x3787 (x165 224)) (= x4324 (x7688 x7503)) (>= 224 x4598) (= x8289 (x7100 (+ x5569 32))) (= (x165 160) x8532) (= x5325 (x7100 (+ x4598 x5569))) (= x7895 (x7100 (+ 64 x5569))) (= x5170 (x7100 (+ 160 x5569))) (= (x1896 x4598 x3197 x5234 x8550 x4437) x3577) (= x6274 (x7622 x4598 x663 x6206 x1584 x7317 x3231)) (= (x7100 (+ x5569 64)) x7503) (= (x7100 (+ x5569 32)) x1308) (= (x7688 x5569) x6970) (= x2482 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) (= (x7688 x5569) x3593) (= x8422 (x7100 (+ x5569 64))) (= x7474 (x7688 x5716)) (= (x165 160) x7308) (= x3717 (x7688 x8422)))) (and x4017 (= x5880 x3383))) (= x4017 (= x5880 0))) x6536)))
(assert (x4938 x4455))
(assert (x4938 x2181))
(assert (= (and x6459 x6501) x1994))
(assert (x4938 x3839))
(assert (x4938 x8282))
(assert (= x7304 (x1688 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= (x3647 (x3407 64 x3342 100)) x3342))
(assert (x3670 x5274))
(assert (x4938 x7217))
(assert (= x5267 (x1688 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265))))
(assert (not (x8398 (x1022 x7277 x4298))))
(assert (not (x8398 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x2119 x6964 x1957 x8286 x7477 x7270)))
(assert (not (x8398 (x1022 32 x200))))
(assert (= (x6340 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) x3137))
(assert (x4938 x7973))
(assert (= x5338 (=> (and (= x8027 false) (= x2270 true) (= x108 0)) x5264)))
(assert (=> (>= 10000 x4176) (= 0 (x1388 x4176))))
(assert (x4938 x1149))
(assert (=> (<= x3060 10000) (= 0 (x1388 x3060))))
(assert (x4938 x8517))
(assert (= x4412 (=> (= (= x6094 0) x1137) (and (=> (and (and (= x1189 x7762) (= x5885 x7428) (= x5946 x6673) (= x941 x989)) (not x1137)) x1164) (=> (and (and (= x7846 x5635) (= x4984 x6839) (= x5660 false) (= 0 x1553) (= x5545 x2926) (= x3900 x8178) (= true x3420) (= x8539 2)) x1137) x2407)))))
(assert (= (or (and x2010 x2186) (and x3866 x4199) (and x1027 x3945)) x907))
(assert (x4938 x1233))
(assert (x4938 x3867))
(assert (x4938 x3921))
(assert (=> (<= x2213 10000) (= (x1388 x2213) 0)))
(assert (x4938 x1411))
(assert (= (x1388 (x7087 x4400 x8390 x5866 x613)) (x7087 x4400 x8390 x5866 x613)))
(assert (= (and (not x1457) x750) x8335))
(assert (x4938 x2579))
(assert (x4938 x5080))
(assert (= (x6340 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) x8057))
(assert (= x863 (x3647 (x1022 x6213 x863))))
(assert (x4938 x3224))
(assert (= (=> (and (or (and x2465 (and (and (= (x6565 x5878) x75) (= (< 32 x6137) x5903)) (or (and x5903 (and (or (not x1105) (and x1105 (and (or (and x7693 (and (>= 128 x6137) (= x5580 (x7100 (+ x7182 96))) (= x2505 (x7100 (+ x5878 96))) (= (x5970 x2505) x2443))) (not x7693)) (and (= (x8059 x5914) x8490) (= (x7100 (+ 64 x5878)) x5914) (= x7693 (< 96 x6137)) (= x135 (x7100 (+ 64 x7182))))))) (and (= (x545 x6971) x4090) (= (x7100 (+ 32 x7182)) x4483) (= (x7100 (+ 32 x5878)) x6971) (= x1105 (> x6137 64))))) (not x5903)))) (not x2465)) (and (= (x7100 (+ x6043 32)) x7182) (= (x7100 (+ x3968 32)) x6195) (= x2465 (< 0 x6137)) (= x6043 (x7100 (+ x1771 x2385))) (= (x7100 (+ 32 x1812)) x3968) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8152) x2385) (= x6137 (x376 x8498)) (= x1650 (x7100 (+ x5065 x1771))) (= x8152 (x7100 (+ x5065 31))) (= x2143 (x2230 (- x6043 x6349))))) x8322) x7452))
(assert (= (and x453 x7829) x3459))
(assert (x4938 x5515))
(assert (x4938 x1389))
(assert (x4938 x3666))
(assert (x4938 x5288))
(assert (x4938 x1386))
(assert (x4938 x7874))
(assert (= x206 (x3116 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (x4938 x4841))
(assert (= (or x5025 x80) x6401))
(assert (=> (<= x4981 10000) (= (x1388 x4981) 0)))
(assert (x150 x4852))
(assert (= (x3116 (x1022 x3989 x8396)) x3989))
(assert (> (x3407 x5478 x2096 x4048) 10000))
(assert (= x2383 (x6568 (x1896 x7199 x4139 x2108 x7648 x2383))))
(assert (= (x701 (x3407 64 x8425 36)) 36))
(assert (> (x3407 64 x1202 100) 10000))
(assert (x3670 x3591))
(assert (x4938 x6978))
(assert (x4938 x1040))
(assert (x4938 x5606))
(assert (= x3945 (and x6365 (not x5042))))
(assert (x4938 x950))
(assert (x4938 x6607))
(assert (x4938 x3762))
(assert (= (and x3178 (not x7606)) x3532))
(assert (x4938 x6477))
(assert (x4938 x7369))
(assert (not (x8398 (x7087 x2454 x2103 x342 x6680))))
(assert (x150 x5508))
(assert (x4938 x2126))
(assert (not (x8398 (x3407 x2454 x2923 x2510))))
(assert (= (x6568 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x20))
(assert (x4938 x2030))
(assert (x4938 x5396))
(assert (not (x8398 (x7087 x4400 x8390 x5866 x613))))
(assert (= (x3407 64 x6717 4) (x1388 (x3407 64 x6717 4))))
(assert (x3580 x3021))
(assert (x4938 x6321))
(assert (x4938 x6151))
(assert (x150 x5098))
(assert (x4938 x6917))
(assert (= (x3116 (x1022 x6088 x8345)) x6088))
(assert (x150 x6712))
(assert (x4938 x8430))
(assert (x4938 x6885))
(assert (not (x8398 (x3407 64 x7413 36))))
(assert (= (and x5711 (not x387)) x1091))
(assert (=> (<= x4785 10000) (= 0 (x1388 x4785))))
(assert (= (x3647 (x1022 x3989 x8396)) x8396))
(assert (=> (>= 10000 x7203) (= 0 (x1388 x7203))))
(assert (= (x3116 (x3407 64 x2140 10)) 64))
(assert (=> (<= x6000 10000) (= 0 (x1388 x6000))))
(assert (x4938 x6717))
(assert (= (x1388 34591783479076665078880830389440322441076534786459098783165778951140825654127) 0))
(assert (x4938 x6195))
(assert (x4938 x16))
(assert (= x5687 (and (not x4194) x5321)))
(assert (= (x1388 (x1022 32 x2141)) (x1022 32 x2141)))
(assert (= (or x5689 x1245) x5343))
(assert (= (x5419 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) x5978))
(assert (=> (>= 10000 x7803) (= 0 (x1388 x7803))))
(assert (= (x6568 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536)) x8374))
(assert (= (and x247 x904) x5418))
(assert (x4938 x1653))
(assert (x4938 x2503))
(assert (= (x701 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)) x3205))
(assert (x4938 x3906))
(assert (x4938 x7111))
(assert (x4938 x2918))
(assert (x704 x8163))
(assert (x4938 x948))
(assert (= (or x7689 x1845) x236))
(assert (x4938 x6517))
(assert (= (x1388 (x3407 64 x5351 11)) (x3407 64 x5351 11)))
(assert (x4938 x5894))
(assert (=> (>= 10000 x8517) (= (x1388 x8517) 0)))
(assert (=> (>= 10000 x7792) (= (x1388 x7792) 0)))
(assert (= (=> (and (= (- x8562 132) x2949) (= x3014 (< 0 x6827)) (= (ite (> x3302 0) x7574 (x1066 127 x7574)) x1509) (= x3302 (x1066 1 x5098)) (= (x2230 (- x3302 (mod (ite (> 32 x1509) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6827) (= (div x5098 2) x7574)) (and (=> (and x3014 (and (= x3115 (x1066 1 x5098)) (= (= 0 x3115) x6249) (= (+ x8562 32) x5975))) (and (=> (and x6249 (and (= (+ x5975 x2589) x7859) (or (= 0 x2589) (= x2589 32)) (= x8333 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5098)) (= (* (ite (not (= x1509 0)) 1 0) 32) x2589))) x3195) (=> (and (not x6249) (and (and (= x6265 (x1022 32 104)) (= (> x1509 0) x6369)) (or (and (= x1480 0) (not x6369)) (and x6369 (and (<= x1509 32) (= 32 x1480) (= (x5963 x6265) x3221)))))) x614))) (=> (not x3014) x5713))) x1524))
(assert (< (x1022 x7199 x8191) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x7623 10000) (= (x1388 x7623) 0)))
(assert (x4938 x7728))
(assert (x150 x4365))
(assert (= (x555 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)) x6405))
(assert (=> (<= x1045 10000) (= (x1388 x1045) 0)))
(assert (= x3046 (=> (and (= x2766 0) (= x7264 true) (= x2974 false)) x4152)))
(assert (x4938 x1702))
(assert (= (x3116 (x1896 x2119 x3204 x7545 x6185 x4559)) x2119))
(assert (not (x8398 (x1896 x2119 x3204 x7545 x6185 x4559))))
(assert (=> (<= x314 10000) (= 0 (x1388 x314))))
(assert (x4938 x3818))
(assert (x4938 x5302))
(assert (x4938 x5254))
(assert (x4938 x5671))
(assert (= (x3407 x5478 x2096 x4048) (x1388 (x3407 x5478 x2096 x4048))))
(assert (x4938 x6807))
(assert (x4938 x1476))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x4598 x4609 x1933)))
(assert (x4938 x4342))
(assert (x4938 x3447))
(assert (x4938 x3842))
(assert (=> (<= x6929 10000) (= (x1388 x6929) 0)))
(assert (= 64 (x3116 (x3407 64 x3533 3))))
(assert (x4938 x4117))
(assert (= x4981 (x701 (x7087 x7199 x5813 x4981 x3966))))
(assert (x4938 x843))
(assert (x4938 x6184))
(assert (< 10000 (x1896 x4159 x5486 x1676 x2617 x1395)))
(assert (x4938 x407))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x661 36)))
(assert (x4938 x2841))
(assert (x4938 x5833))
(assert (= (x3116 (x1022 x4809 x5184)) x4809))
(assert (x704 x6289))
(assert (=> (<= x3734 10000) (= 0 (x1388 x3734))))
(assert (= (x7087 x3479 x7029 x183 x5058) (x1388 (x7087 x3479 x7029 x183 x5058))))
(assert (x4938 x1286))
(assert (x4938 x229))
(assert (= (and x1942 x729) x5202))
(assert (= x8356 (x3647 (x3407 64 x8356 36))))
(assert (= (x1388 (+ 2 x466)) (x1388 x466)))
(assert (= x7390 (x701 (x3407 x206 x6743 x7390))))
(assert (x4938 x6332))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3138 6)))
(assert (x4938 x2554))
(assert (=> (<= x1998 10000) (= 0 (x1388 x1998))))
(assert (= (and x6248 x1105) x7357))
(assert (x4938 x7117))
(assert (x4938 x1281))
(assert (x4938 x1843))
(assert (=> (>= 10000 x1540) (= 0 (x1388 x1540))))
(assert (x4938 x2530))
(assert (x4938 x3237))
(assert (= x1968 (and x5634 x3050)))
(assert (x4938 x7585))
(assert (= x564 x707))
(assert (= (=> (and (= x1617 x989) (= x7173 x1189) (= x7428 x3179) (= x1122 x6673)) x1164) x1215))
(assert (x4938 x3190))
(assert (= (x701 (x1896 x4598 x3197 x5234 x8550 x4437)) x5234))
(assert (< (x3407 x206 x6743 x7390) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x7087 x6088 x7455 x5442 x6835) (x1388 (x7087 x6088 x7455 x5442 x6835))))
(assert (x4938 x7676))
(assert (= (and x2655 x120) x916))
(assert (x4938 x5428))
(assert (x4938 x2870))
(assert (< (x3407 x3224 x5218 x6215) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x2975))
(assert (= (x1388 8365236128558009046904410293209581292053118695343348878262597880337030709248) 0))
(assert (x4938 x1084))
(assert (= (x3116 (x3407 64 x8425 36)) 64))
(assert (x150 x5307))
(assert (x4938 x3381))
(assert (x4938 x3997))
(assert (= (or x5945 x489) x2211))
(assert (x4938 x259))
(assert (x4938 x2294))
(assert (x4938 x1177))
(assert (= (x1688 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)) x7123))
(assert (=> (>= 10000 x4889) (= 0 (x1388 x4889))))
(assert (< (x3407 x7199 x226 x4057) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x1771))
(assert (x4938 x5010))
(assert (= x4716 (and (not x1360) x4385)))
(assert (= (x3647 (x3407 64 x1842 0)) x1842))
(assert (=> (<= x7265 10000) (= 0 (x1388 x7265))))
(assert (= (x3116 (x3407 64 x2616 6)) 64))
(assert (not (x8398 (x7087 x1389 x4115 x5007 x2944))))
(assert (= x2119 (x3116 (x7622 x2119 x6964 x1957 x8286 x7477 x7270))))
(assert (x4938 x6353))
(assert (> (x1022 x5478 x42) 10000))
(assert (not (x8398 (x1896 x4809 x2199 x4831 x3620 x4599))))
(assert (= (x3116 (x7087 x4598 x6970 x5977 x7474)) x4598))
(assert (= (or (and x1261 (not x6661)) x4550) x3934))
(assert (not (x8398 (x7087 x6213 x8482 x5120 x2533))))
(assert (not (x8398 (x1022 x2726 x3440))))
(assert (= (x3407 64 x3627 3) (x1388 (x3407 64 x3627 3))))
(assert (x4938 x2807))
(assert (= (x3647 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)) x8157))
(assert (x4938 x2061))
(assert (x4938 x5508))
(assert (x4938 x3270))
(assert (x4938 x1920))
(assert (x4938 x5398))
(assert (= x8379 (or (and (not x1807) x2225) x3268)))
(assert (x4938 x2176))
(assert (x4938 x3405))
(assert (= (x3647 (x3407 64 x8340 36)) x8340))
(assert (= (x3647 (x1022 x2726 x3440)) x3440))
(assert (x4938 x1632))
(assert (= x8556 (x3647 (x7622 x6213 x8556 x4777 x3164 x3734 x5287))))
(assert (x4938 x2213))
(assert (x4938 x2723))
(assert (x4938 x1398))
(assert (=> (<= x5551 10000) (= (x1388 x5551) 0)))
(assert (x4938 x5245))
(assert (x4938 x6086))
(assert (x4938 x6468))
(assert (= x1957 (x701 (x7622 x2119 x6964 x1957 x8286 x7477 x7270))))
(assert (= (=> (and (= 0 x7657) (= x7471 1) (= x788 x1056) (= x2321 x4291) (= x8043 x2841) (= x1257 x5272)) x8246) x7768))
(assert (= x8441 (=> (and (= x661 x7557) (= x6717 x1450) (= x5017 x8267) (= x2850 x5471) (= x301 x5801) (= x4368 x5123) (= x5148 x584) (= x138 x7450) (= x385 2) (= x5423 x6283) (= x7374 x1629) (= x621 x3947) (= x2331 x7448) (= x2232 0) (= x6548 x5098)) x6671)))
(assert (x4938 x7171))
(assert (x4938 x4901))
(assert (x704 x1107))
(assert (x4938 x5780))
(assert (= (x3116 (x3407 64 x1256 11)) 64))
(assert (x8398 4294967295))
(assert (> (x7087 x7277 x7748 x160 x2415) 10000))
(assert (= (and x5083 x8480) x8414))
(assert (=> (<= x8255 10000) (= 0 (x1388 x8255))))
(assert (= x160 (x701 (x7087 x7277 x7748 x160 x2415))))
(assert (= x1849 x27))
(assert (= (and x8519 (not x3713)) x7573))
(assert (x4938 x2265))
(assert (x4938 x8279))
(assert (x4938 x3662))
(assert (= x6832 (x6568 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291))))
(assert (= (and x8268 (not x349)) x2989))
(assert (= (or x6293 x4131) x1054))
(assert (x4938 x1445))
(assert (= (x701 (x3407 64 x4440 36)) 36))
(assert (=> (>= 10000 x463) (= (x1388 x463) 0)))
(assert (x4938 x3444))
(assert (= x6771 (and x8519 x3713)))
(assert (x4938 x7097))
(assert (< (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x881))
(assert (=> (<= x7556 10000) (= 0 (x1388 x7556))))
(assert (= (x3116 (x1896 x4159 x5486 x1676 x2617 x1395)) x4159))
(assert (x4938 x1092))
(assert (= 0 (x701 (x3407 64 x1842 0))))
(assert (= x4502 (x3647 (x3407 64 x4502 36))))
(assert (x4938 x5890))
(assert (x4938 x4640))
(assert (x4938 x8011))
(assert (= (x701 (x3407 64 x7048 4)) 4))
(assert (x4938 x4863))
(assert (x4938 x2089))
(assert (= 64 (x3116 (x3407 64 x3585 36))))
(assert (x4938 x3032))
(assert (x4938 x6608))
(assert (= (and x4101 (not x5187)) x6644))
(assert (x4938 x4819))
(assert (= x5871 x5003))
(assert (x4938 x5998))
(assert (x4938 x5282))
(assert (x4938 x7278))
(assert (= x5043 (and x1360 x4385)))
(assert (x4546 x6695))
(assert (= (x3116 (x1896 x3651 x1790 x3653 x910 x8305)) x3651))
(assert (x4938 x7871))
(assert (= (and (not x1365) x7235) x7619))
(assert (x4938 x2212))
(assert (x4938 x8024))
(assert (=> (>= 10000 x4301) (= (x1388 x4301) 0)))
(assert (x4938 x3719))
(assert (x4938 x3239))
(assert (= x3312 (x5419 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890))))
(assert (= x1969 (x6340 (x1896 x6088 x2440 x5482 x1969 x6350))))
(assert (= x5871 (=> (and (= x1446 2) (= x8271 x4917) (= x7842 x886) (= x7842 (x1066 255 x4779)) (= x5683 x5559) (= x3465 false) (= true x1442) (= x5748 x260) (= x5250 x5830) (= x3642 x8195) (= x8430 x7746) (= x1104 x5415) (= x5515 x7409) (= x694 x4737) (= x3450 x6847) (= x8341 x7983) (= x3598 x1652) (= x4200 0)) x3467)))
(assert (x150 x7824))
(assert (x4938 x1952))
(assert (=> (<= x6023 10000) (= (x1388 x6023) 0)))
(assert (= 64 (x3116 (x3407 64 x2644 12))))
(assert (= (x701 (x3407 64 x3533 7)) 7))
(assert (< 10000 (x1896 x3651 x1790 x3653 x910 x8305)))
(assert (< (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1388 (x7087 x2454 x2103 x342 x6680)) (x7087 x2454 x2103 x342 x6680)))
(assert (x4938 x6889))
(assert (= x6325 (x3647 (x3407 64 x6325 2))))
(assert (x4938 x1030))
(assert (= (or x2722 x1506) x5290))
(assert (x4938 x3531))
(assert (x4938 x6153))
(assert (=> (>= 10000 x2084) (= (x1388 x2084) 0)))
(assert (= x3324 (and x7708 (not x2063))))
(assert (> (x1896 x3989 x7933 x2869 x5737 x214) 10000))
(assert (=> (>= 10000 x3204) (= (x1388 x3204) 0)))
(assert (x4938 x2700))
(assert (= (or x1061 x2390) x5700))
(assert (x4938 x201))
(assert (> (x3407 64 x4120 11) 10000))
(assert (x4938 x7477))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x2454 x2923 x2510)))
(assert (x150 x8529))
(assert (= (=> (= (< 0 (ite (= x921 0) x921 1)) x3677) (and (=> (and (not x3677) (and (or (not x4605) x4605) (= x4605 (= x4720 0)))) x5550) (=> x3677 x7768))) x7358))
(assert (x4938 x1220))
(assert (=> (>= 10000 x1414) (= (x1388 x1414) 0)))
(assert (x4938 x5313))
(assert (= x3483 (and x6067 x5063)))
(assert (x4938 x5055))
(assert (= x3546 (x6568 (x1896 x5478 x5582 x4037 x5940 x3546))))
(assert (= (and x3722 x2081) x3932))
(assert (x4938 x6604))
(assert (= x7049 (and x539 x2295)))
(assert (not (x8398 (x7622 x2726 x4078 x2312 x1794 x4185 x5530))))
(assert (x4938 x3484))
(assert (x4938 x3853))
(assert (=> (>= 10000 x3270) (= 0 (x1388 x3270))))
(assert (x4938 x4734))
(assert (x4938 x817))
(assert (= (and x8288 (not x4708)) x310))
(assert (x4938 x2326))
(assert (= x2128 (x1688 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128))))
(assert (= (and x6830 (not x6398)) x6793))
(assert (= x3081 (x3647 (x3407 x6213 x3081 x5009))))
(assert (= (or x6282 x6401 x6952) x6870))
(assert (< 10000 (x3407 64 x6717 4)))
(assert (< (x7622 x6213 x8556 x4777 x3164 x3734 x5287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1276 (or x7673 x54)))
(assert (= x293 (and x3584 x3671)))
(assert (= (and x1085 x5680) x1512))
(assert (x4938 x357))
(assert (x4938 x270))
(assert (x4938 x783))
(assert (> (x7622 x3651 x6841 x2084 x4642 x4462 x3445) 10000))
(assert (= (x1388 (x3407 64 x1859 100)) (x3407 64 x1859 100)))
(assert (x4938 x7222))
(assert (x4938 x4031))
(assert (x4938 x4553))
(assert (x4938 x745))
(assert (x4938 x4552))
(assert (= x1558 (or (and x3097 x1753) (and x1926 x3699))))
(assert (x4938 x2418))
(assert (x4938 x5813))
(assert (= x1453 (x3647 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (>= 96 x4159) x7440 (ite (<= x4159 128) x6983 (ite (<= x4159 160) x2778 (ite (>= 192 x4159) x1660 x3397))))))))))
(assert (= x992 (and x410 x947)))
(assert (x4938 x974))
(assert (x4938 x2767))
(assert (= x1473 (x701 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352))))
(assert (= (x701 (x3407 64 x8491 11)) 11))
(assert (x4938 x3937))
(assert (x4938 x4513))
(assert (=> (<= x5182 10000) (= 0 (x1388 x5182))))
(assert (= x8141 (x6340 (x7622 x5857 x6884 x2985 x8141 x159 x2846))))
(assert (= (x6340 (x7087 x2726 x8532 x6769 x6672)) x6672))
(assert (x4938 x2988))
(assert (= x2113 (and x6552 x8240)))
(assert (= x5866 (x701 (x7087 x4400 x8390 x5866 x613))))
(assert (x4938 x6544))
(assert (x4938 x2355))
(assert (x4938 x4324))
(assert (= x4314 (and (not x4305) x8471)))
(assert (= x136 (and x2016 (not x3476))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 104)))
(assert (x4938 x5372))
(assert (=> (<= x5442 10000) (= 0 (x1388 x5442))))
(assert (= (and x7693 x7357) x4882))
(assert (= x6699 (x3647 (x1896 x6541 x6699 x7203 x7803 x4524))))
(assert (= (x701 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (<= x4159 96) x7440 (ite (<= x4159 128) x6983 (ite (>= 160 x4159) x2778 (ite (<= x4159 192) x1660 x3397)))))))) (ite (<= x4159 32) x7718 (ite (<= x4159 64) x935 (ite (<= x4159 96) x7440 (ite (<= x4159 128) x6983 (ite (>= 160 x4159) x2778 (ite (<= x4159 192) x1660 x3397))))))))
(assert (x4938 x3341))
(assert (= (=> (and (= x1171 x6775) (= x4984 x8315) (= x7214 x7432) (= x6775 (x1066 255 x3658)) (= x119 x2926) (= 2 x341) (= x6300 0) (= x3900 x710)) x5705) x4892))
(assert (x4938 x5756))
(assert (= (x701 (x3407 64 x1256 11)) 11))
(assert (= 64 (x3116 (x3407 64 x1599 12))))
(assert (x4938 x2522))
(assert (x4938 x2398))
(assert (> (x1022 x3479 x7013) 10000))
(assert (x4938 x1216))
(assert (x4938 x2454))
(assert (x4938 x8017))
(assert (= x3922 (and x7419 x3965)))
(assert (x4938 x7751))
(assert (> (x3407 64 x1579 1) 10000))
(assert (= (and (not x1574) x7844) x2806))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6673 36)))
(assert (x4938 x3267))
(assert (=> (<= x130 10000) (= (x1388 x130) 0)))
(assert (> (x3407 64 x3627 3) 10000))
(assert (= x2098 (x1688 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (x4938 x3182))
(assert (x4938 x6309))
(assert (= (x1388 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)) (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427)))
(assert (x4938 x4223))
(assert (=> (>= 10000 x3957) (= 0 (x1388 x3957))))
(assert (x4938 x3502))
(assert (= x7354 (and x3438 x4864)))
(assert (=> (<= x5730 10000) (= 0 (x1388 x5730))))
(assert (= 64 (x3116 (x3407 64 x6717 4))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)))
(assert (x4938 x3054))
(assert (= (x3116 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x4598))
(assert (= (and x836 x431) x5130))
(assert (= x3569 (x1688 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (x4938 x4134))
(assert (=> (>= 10000 x3424) (= (x1388 x3424) 0)))
(assert (= (x3116 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) x5857))
(assert (= (and x31 (not x7200)) x1898))
(assert (x4938 x2618))
(assert (x4938 x8453))
(assert (x4938 x6691))
(assert (> (x1896 x1389 x4433 x5950 x5294 x6030) 10000))
(assert (x4938 x3767))
(assert (= (and x3509 (not x4017)) x4512))
(assert (x4938 x2519))
(assert (x4938 x4538))
(assert (= (x1388 (+ 1 x5397)) (x1388 x5397)))
(assert (= x3056 (or x2613 x5006)))
(assert (x4938 x2317))
(assert (x4938 x6525))
(assert (x4938 x1138))
(assert (= x3651 (x3116 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176))))
(assert (= (or x6029 x1719 x3126) x4639))
(assert (x4938 x6256))
(assert (=> (<= x2714 10000) (= 0 (x1388 x2714))))
(assert (x4938 x450))
(assert (= (or x5700 x6375) x7687))
(assert (= (x3647 (x3407 64 x5520 11)) x5520))
(assert (= (x1388 (x7622 x206 x130 x7601 x4255 x4343 x6882)) (x7622 x206 x130 x7601 x4255 x4343 x6882)))
(assert (x4938 x4627))
(assert (= x7641 (and x6674 x6652)))
(assert (x4938 x4887))
(assert (x4938 x3948))
(assert (= (and (not x2695) x5968) x52))
(assert (x4938 x3546))
(assert (x4938 x1958))
(assert (x4938 x2573))
(assert (x4938 x2440))
(assert (= 36 (x701 (x3407 64 x2876 36))))
(assert (x4938 x5465))
(assert (x4938 x8020))
(assert (=> (>= 10000 x3138) (= 0 (x1388 x3138))))
(assert (= x5301 (and (not x7593) x194)))
(assert (x4938 x3880))
(assert (x4938 x2850))
(assert (= x6298 (and x6591 x5434)))
(assert (x4938 x8251))
(assert (x4938 x5073))
(assert (x4938 x7189))
(assert (not (x8398 (x3407 64 x1232 (ite (>= 32 x206) x2881 (ite (>= 64 x206) x5724 (ite (<= x206 96) x8332 (ite (>= 128 x206) x5271 (ite (<= x206 160) x312 (ite (>= 192 x206) x2304 x5765))))))))))
(assert (> (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582) 10000))
(assert (x4938 x570))
(assert (x4938 x3378))
(assert (= (and x7628 x3994) x170))
(assert (= (x701 (x3407 64 x239 100)) 100))
(assert (= x5376 (=> (= (= 0 x1615) x195) (and (=> (and (and (= x3594 x3179) (= x1617 x1035) (= x1122 x7979) (= x4201 x7173)) (not x195)) x1215) (=> (and x195 (and (= 2 x3943) (= 0 x1553) (= x7143 false) (= x8178 x3900) (= x4984 x6839) (= x5545 x2926) (= x5635 x7525) (= x39 true))) x2407)))))
(assert (> (x1022 x3651 x1954) 10000))
(assert (x4938 x6529))
(assert (x4938 x4515))
(assert (x4938 x5209))
(assert (= x1098 (or x8475 x1525)))
(assert (= (=> (and (= x5923 x1312) (= x5146 x3337) (= x5450 x6544) (= x4618 x2920) (= x5479 x3851) (= x8066 x1260) (= x7585 x2485) (= x7813 x6996) (= x1281 x6529) (= x2361 x5710) (= x2795 x6184) (= x7843 x527) (= x4345 x5674)) x7891) x6117))
(assert (= (x3116 (x1022 x5478 x42)) x5478))
(assert (< (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7610))
(assert (x4938 x5938))
(assert (x4938 x3822))
(assert (=> (>= 10000 x1679) (= (x1388 x1679) 0)))
(assert (x4938 x1788))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x26 (ite (>= 32 x2119) x5997 (ite (>= 64 x2119) x1207 (ite (<= x2119 96) x568 (ite (>= 128 x2119) x6700 (ite (<= x2119 160) x285 (ite (>= 192 x2119) x1309 x2250)))))))))
(assert (x4938 x2283))
(assert (x4938 x4928))
(assert (x4938 x498))
(assert (x4938 x2511))
(assert (= 1 (x3647 (x3407 64 1 x3628))))
(assert (= x85 (and x6826 x3098)))
(assert (x4938 x2221))
(assert (x4938 x7018))
(assert (= (and x947 (not x410)) x3053))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x4598 x6970 x5977 x7474)))
(assert (x4938 x6583))
(assert (x4938 x8156))
(assert (= x3231 (x5419 (x7622 x4598 x663 x6206 x1584 x7317 x3231))))
(assert (x4938 x7467))
(assert (> (x1022 32 103) 10000))
(assert (x4938 x7919))
(assert (x4938 x569))
(assert (x4938 x5120))
(assert (x4938 x1634))
(assert (= 0 (x1388 3963877391197344453575983046348115674221700746820753546331534351508065746944)))
(assert (= (x6568 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)) x4566))
(assert (= x5672 (=> (and (= x4010 x5817) (= x1462 x6331) (= x6676 x7727) (= x484 x7078) (= x5099 x8140) (= x88 x2133) (= x7995 x1927) (= x6168 x5067) (= x1991 x2181) (= x8248 x2398) (= x2959 x6291) (= x2126 x6523) (= x5309 x4066) (= x4841 x307)) x8499)))
(assert (x4938 x3380))
(assert (= x499 (x1688 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499))))
(assert (= x4167 (=> (and (= x3237 x6283) (= x5764 x4013) (= x5098 x3260) (= x5245 x5801) (= x6842 x6717) (= x3082 x138) (= x584 x1018) (= x2331 x964) (= x8267 x5528) (= 2 x8097) (= x84 x5206) (= x7374 x2609) (= 0 x1272) (= x2850 x7117) (= x4013 (x1066 255 x4779)) (= x621 x6241) (= x4368 x6372)) x5610)))
(assert (= x4117 (x5419 (x7622 x7199 x6076 x3424 x7623 x299 x4117))))
(assert (x4938 x730))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639838))
(assert (not (x8398 (x3407 64 1 x1485))))
(assert (> (x1022 32 104) 10000))
(assert (x2131 x7828))
(assert (x4938 x7762))
(assert (= (and (not x3603) x7472) x2233))
(assert (=> (>= 10000 x5830) (= (x1388 x5830) 0)))
(assert (x4938 x4652))
(assert (= x2119 (x3116 (x7087 x2119 x1810 x1425 x7992))))
(assert (x4938 x3881))
(assert (< (x3407 64 x7048 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7534))
(assert (= x5835 (x5419 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405))))
(assert (=> (>= 10000 x4808) (= 0 (x1388 x4808))))
(assert (= (x701 (x3407 x2119 x4246 x8011)) x8011))
(assert (= (x3116 (x3407 64 x8409 6)) 64))
(assert (x4938 x7967))
(assert (= (=> (and (= x7843 x3551) (= x3714 x4345) (= x3337 x5581) (= x4924 x5479) (= x7369 x5710) (= x1281 x1684) (= x6184 x4354) (= x2811 x1260) (= x2031 x6544) (= x6996 x5382) (= x1535 x2485) (= x1325 x5923) (= x2920 x5948)) x369) x7891))
(assert (=> (<= x4120 10000) (= 0 (x1388 x4120))))
(assert (=> (>= 10000 x1504) (= (x1388 x1504) 0)))
(assert (= x8389 (x5419 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (x4938 x1969))
(assert (x4938 x7400))
(assert (< (x3407 64 x6658 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8348))
(assert (= x6011 (=> (= x7977 (= 0 x149)) (and (=> (and (not x7977) (and (= 4 x3645) (= false x2606) (= x4856 true))) x4804) (=> (and x7977 (and (>= 255 x6961) (= (x6484 x4069) x6961) (= x4069 (x3407 64 x5351 11)) (= (> x6961 3) x8299))) (and (=> (and x8299 (and (= false x6186) (= true x577) (= x3645 36))) x4804) (=> (and (not x8299) (= (= x6961 2) x2197)) (and (=> (and x2197 (and (= x3167 (x7100 (+ 31 x7856))) (>= x6290 1) (= 0 x8068) (= (x3407 64 x7048 4) x1120) (= x5126 (x2288 224)) (= x1545 0) (= false x3206) x4561 (= x7001 (x7100 (+ x7697 32))) (= (x7100 (+ 31 x5126)) x4295) x6685 (<= 356 x5470) (= (= 34 (x7917 260)) x4561) (= false x6419) (= (= (x7917 196) (x2127 486)) x6871) (= x5204 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3167)) (= 290 x178) (= (= (x7917 228) (x2127 518)) x6685) (= x6702 1084734224) (>= 127 x4630) x6871 (>= 65535 x7048) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4295) x6084) (= (x3407 64 1 x1120) x4651) x2111 (= x2807 (x7100 (+ x7001 x6084))) (= x2135 (or (> (- x5470 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 (- x5470 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x5470 4)))))) (= x2623 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= x5470 x4289) (= x4289 (x2230 (- x2807 290))) (= x7048 x2184) (<= 356 x4289) (= x3691 x1579) (= x2891 160) (= x3168 (x2230 (- x7697 294))) (= x6290 (x8177 x7734)) (= (x7100 (+ x5204 486)) x7697) (= x8077 (x3511 x4651)) (= (x2927 128) x7856) (= x2111 (= (x7917 164) 64)) (>= 127 x4630) (= 256 x498))) (and (=> (and (= true x7865) (not x2135)) (and (=> (not x7865) x707) (=> (and x7865 (= x820 (and (> x5470 195) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5470))))) (and (=> (not x820) x707) (=> (and x820 (and (= x6415 (x7151 164)) (= x5030 (> x6415 18446744073709551615)))) (and (=> x5030 x5378) (=> (and (and (= x7515 (< x5470 x7056)) (= x7056 (x7100 (+ x6415 196)))) (not x5030)) (and (=> x7515 x564) (=> (and (and (= x5565 (> x4270 18446744073709551615)) (<= x5470 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 356 x5470) (= (x7151 260) x4270)) (not x7515)) (and (=> x5565 x5378) (=> (and (not x5565) (and (= x7625 (> x8293 x5470)) (= x8293 (x7100 (+ 292 x4270))))) (and (=> x7625 x564) (=> (and (and (= x2475 x4982) (= x7975 1) (= x2191 (x3184 128)) (= x6709 (x3184 128)) (= x3248 x4695) (= x3716 false) (= false x986) (= x4033 64) (= x5241 x4984) (= x3900 x5897) (= (x3184 160) x8391) (= x5291 x1221) (= x6994 (x3184 160)) (= x7048 x5681) (= x1842 x4745) (= x4146 x7828) (= x6172 x8426) (= x6153 x730) (= x3481 x8116) (= x2926 x6420) (= x1482 x685)) (not x7625)) x6465))))))))))))) (=> x2135 x707))) (=> (and (not x2197) (and (= true x5046) (= x5347 false) (= x3645 4))) x4804)))))))))
(assert (x4938 x2930))
(assert (not (x8398 (x3407 64 x3533 7))))
(assert (x4938 x8131))
(assert (x4938 x4229))
(assert (x4938 x6755))
(assert (= x4177 (and x7962 x6034)))
(assert (x4938 x173))
(assert (x4938 x1214))
(assert (= (and x1988 x421) x7791))
(assert (x4938 x8461))
(assert (x4938 x5602))
(assert (x4938 x3209))
(assert (x4938 x5054))
(assert (x4938 x824))
(assert (= (x701 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) x4465))
(assert (not (x8398 (x3407 64 x2876 36))))
(assert (=> (>= 10000 x1842) (= (x1388 x1842) 0)))
(assert (=> (>= 10000 x5197) (= (x1388 x5197) 0)))
(assert (x4938 x3023))
(assert (x4938 x527))
(assert (x4938 x1144))
(assert (x4938 x812))
(assert (= (x3647 (x7087 x2454 x2103 x342 x6680)) x2103))
(assert (=> (>= 10000 x4368) (= (x1388 x4368) 0)))
(assert (x4938 x1640))
(assert (x4938 x3733))
(assert (= (and x6099 x6456) x3051))
(assert (= (=> (and (= x138 x1991) (= x2331 x6291) (= x3933 2) (= false x3264) (= x6717 x5099) (= x4066 x8267) (= true x1385) (= x5098 x6331) (= x2398 x2850) (= x2126 x6283) (= x4368 x4010) (= x6168 0) (= x1927 x621) (= x661 x6676) (= x7374 x307) (= x584 x7078) (= x2133 x5801)) x5672) x6022))
(assert (x4938 x3129))
(assert (x4938 x565))
(assert (= (x6340 (x1896 x3479 x7206 x3209 x7441 x6838)) x7441))
(assert (x4938 x2691))
(assert (= x6061 (x6340 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (x4938 x6664))
(assert (not (x8398 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872))))
(assert (not (x8398 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (x4938 x8391))
(assert (x4938 x3966))
(assert (x4938 x6504))
(assert (= x6707 (or x4965 x4321)))
(assert (= x7413 (x3647 (x3407 64 x7413 36))))
(assert (< 10000 (x3407 64 x8409 36)))
(assert (x4938 x487))
(assert (= (x7087 x7199 x5813 x4981 x3966) (x1388 (x7087 x7199 x5813 x4981 x3966))))
(assert (= x2420 (and (not x4279) x6936)))
(assert (= (=> (and (= (= x5525 0) x7962) (= x5525 (x6462 516))) (and (=> (and (not x7962) (and (= x1802 (x3407 64 x6717 5)) (= x1501 (> x2626 (ite (= x2114 0) 10000 x2114))) (= x2114 (x2047 x1802)) (= x2626 (x3972 354)))) (and (=> (and x1501 (and (= x6167 true) (= x5206 100) (= (x7100 (+ 32 x7155)) x5495) (= x6950 false) (= x3767 (x7100 (+ x5495 32))) (= (x7100 (+ x1456 4)) x7155))) x4167) (=> (and (not x1501) (and (= (x2230 (- x6616 x8065)) x6370) (= x513 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5768)) (= x2392 (x7100 (+ x6383 32))) (= (x7100 (+ 32 x8215)) x3301) (= (x7100 (+ 192 x8065)) x8215) (= x6353 (x7100 (+ 32 x8065))) (= x3990 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6050)) (= (x7100 (+ x513 x1370)) x6616) (= (x7100 (+ x448 x3301)) x8351) (= x6383 (x7100 (+ 32 x5420))) (= (x7100 (+ 32 x6353)) x5420) (= x6050 (x7100 (+ 31 x5491))) (= (x7100 (+ 32 x2392)) x315) (= (x7100 (+ x1456 4)) x8065) (= x5768 (x7100 (+ x5911 31))) (= (x7100 (+ x6616 32)) x8310) (= x4241 (= 0 x2326)) (= (x7100 (+ x3990 x8310)) x1111) (= (x5842 450) x5491) (= x5911 (x3972 354)) (= x2326 (x8177 x5830)) (= x647 (x2230 (- x1111 x1456))) (= (x6462 516) x7620) (= x280 (x7100 (+ x7620 31))) (= (x7100 (+ 32 x8351)) x1370) (= (x2230 (- x8351 x8065)) x4098) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x280) x448))) (and (=> (and x4241 (and (= false x437) (= x2424 true) (= x5206 0))) x4167) (=> (and (not x4241) (and (= x5533 (x6175 x5830)) (= x1057 (< (+ x5533 x4378) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3374 (and x1057 x4477)) (= x3239 (x6175 x1579)) (= x4477 (>= x3239 x4378)))) (and (=> (and (and (= x7409 x5974) (= x5639 x8341) (= x1591 x260) (= x2963 x1104) (= x8497 x4148) (= x3598 x6170) (= x694 x6642) (= x6927 x4917) (= x3450 x2028) (= x5830 x2193) (= x3642 x5831) (= x2188 x5559) (= x1226 x7746) (= x211 0)) (not x3374)) x34) (=> (and x3374 (and (= x4098 x4575) (= 0 x6764) (>= x647 420) (= x1873 (+ x5045 x4378)) (= x1873 x3707) (= x6389 x6717) (= x647 x1709) (= (- x6065 x4378) x4294) (>= x1709 420) (<= x1140 127) (= x5045 (x1460 x5830)) (= (x6175 x1579) x6065) (= 89332125780766104441357105940599211734484755930370930871569612501041822040064 x990) (<= 1 x404) (= 3313512704 x347) x1530 (= x6930 false) (= x1579 x1843) (= (x8177 x7734) x404) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1709 4)) (and (> 192 (- x1709 4)) (= true (<= (- x1709 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x8487) (<= 0 x1873) (= (= (x6634 196) x7620) x1530) (>= 127 x1140) (= 192 x4302) (< (+ x4378 x5045) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3746 false) (= x6370 x2337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1873))) (and (=> x8487 x5871) (=> (and (not x8487) (= true x216)) (and (=> (not x216) x5871) (=> (and x216 (= (and (= (<= x1709 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 227 x1709)) x4730)) (and (=> (and x4730 (and (= (> x5501 18446744073709551615) x5042) (= (x6912 196) x5501))) (and (=> x5042 x5003) (=> (and (and (= (x7100 (+ 228 x5501)) x4664) (= x1027 (> x4664 x1709))) (not x5042)) (and (=> (and (not x1027) (= (< 18446744073709551615 x4098) x7945)) (and (=> x7945 x5871) (=> (and (not x7945) (and (= x7784 (x7100 (+ 31 x6935))) (= x1377 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7784)) (and (< x7784 x1709) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7784))))) (= (x7100 (+ x4098 4)) x6935))) (and (=> (not x1377) x7251) (=> (and x1377 (and (= x1917 (< 18446744073709551615 x4854)) (= x4854 (x6912 x6935)))) (and (=> x1917 x5003) (=> (and (not x1917) (and (= x3866 (> x4937 x1709)) (= x6720 (x7100 (+ 32 x6935))) (= x4937 (x7100 (+ x4854 x6720))))) (and (=> (and (= (> x6370 18446744073709551615) x3560) (not x3866)) (and (=> x3560 x5871) (=> (and (not x3560) (and (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1709) (> x8281 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1709 x8281) (= (<= x1709 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x8281 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3499) (= x8281 (x7100 (+ x6705 31))) (= (x7100 (+ x6370 4)) x6705))) (and (=> (and x3499 (and (= x5717 (x6912 x6705)) (= x1661 (< 18446744073709551615 x5717)))) (and (=> x1661 x5003) (=> (and (not x1661) (and (= x2186 (< x1709 x570)) (= x570 (x7100 (+ x5717 x1044))) (= x1044 (x7100 (+ 32 x6705))))) (and (=> x2186 x7106) (=> (and (not x2186) (and (= x7983 x8341) (= x3598 x1652) (= x4917 x8271) (= x260 x5748) (= x5515 x7409) (= x5683 x5559) (= x4737 x694) (= x8195 x3642) (= x8430 x7746) (= x4200 1) (= x1104 x5415) (= x8497 x886) (= x5830 x5250) (= x3450 x6847))) x3467))))) (=> (not x3499) x7251))))) (=> x3866 x7106))))))))) (=> x1027 x7106))))) (=> (not x4730) x7251))))))))))))) (=> (and x7962 (and (= true x2698) (= (x7100 (+ 32 x724)) x6461) (= x3348 false) (= (x7100 (+ 4 x1456)) x724) (= x4490 (x7100 (+ 32 x4074))) (= x4074 (x7100 (+ 32 x6461))) (= 132 x5206))) x4167))) x7069))
(assert (= (x6568 (x1896 x2454 x4147 x8278 x3885 x5310)) x5310))
(assert (= x6335 (or x6159 x6305)))
(assert (x4938 x8387))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x7610 6)))
(assert (x4938 x1976))
(assert (not (x8398 (x3407 64 x1232 (ite (>= 32 x6541) x1119 (ite (>= 64 x6541) x7379 (ite (<= x6541 96) x7801 (ite (<= x6541 128) x8520 (ite (>= 160 x6541) x7562 (ite (>= 192 x6541) x5591 x6376))))))))))
(assert (= (x1388 35477284059277649309253622239531857712935939630608236286772267603529442882419) 0))
(assert (=> (>= 10000 x2052) (= (x1388 x2052) 0)))
(assert (= (x6340 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)) x4642))
(assert (x4938 x6824))
(assert (=> (>= 10000 x5977) (= 0 (x1388 x5977))))
(assert (x4938 x5144))
(assert (not (x8398 (x3407 64 x1599 12))))
(assert (not (x8398 (x1896 x3651 x1790 x3653 x910 x8305))))
(assert (= (x3116 (x3407 x206 x6743 x7390)) x206))
(assert (= x2760 (or x8275 x5849 x4577 x4381 x5444)))
(assert (x4938 x1373))
(assert (x4938 x4216))
(assert (x4938 x7612))
(assert (=> (<= x2893 10000) (= (x1388 x2893) 0)))
(assert (x4938 x3430))
(assert (= (x3116 (x1022 x7277 x4298)) x7277))
(assert (x4938 x6744))
(assert (= (and x2261 (not x7325)) x5248))
(assert (< 10000 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)))
(assert (x4938 x732))
(assert (= (and x4985 x5231) x3147))
(assert (x150 x4019))
(assert (x4938 x1900))
(assert (not (x8398 (x7622 x6213 x8556 x4777 x3164 x3734 x5287))))
(assert (x4938 x2963))
(assert (x4938 x7998))
(assert (= (x5419 (x7622 x4159 x3114 x2452 x1679 x3341 x8514)) x8514))
(assert (x4938 x3419))
(assert (= (x3407 64 x3342 100) (x1388 (x3407 64 x3342 100))))
(assert (x4938 x6297))
(assert (x4938 x4870))
(assert (x4938 x2928))
(assert (x4938 x6938))
(assert (x4938 x4404))
(assert (x4938 x8247))
(assert (= (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270) (x1388 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (x4938 x1600))
(assert (< (x7087 x2726 x8532 x6769 x6672) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3839 (x5419 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (x4938 x5119))
(assert (= (or x5906 x6371) x4403))
(assert (x4938 x4598))
(assert (= x6541 (x3116 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (= (x1388 (x3407 x3479 x2164 x2366)) (x3407 x3479 x2164 x2366)))
(assert (= (and x8296 x5240) x4992))
(assert (x4938 x7060))
(assert (x4938 x6142))
(assert (= x79 (x5419 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016))))
(assert (x4938 x8300))
(assert (x4938 x941))
(assert (x4938 x6734))
(assert (x4938 x1579))
(assert (x4938 x1991))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x4938 x4599))
(assert (= (and x7057 x209) x589))
(assert (x4938 x148))
(assert (= x7048 (x3647 (x3407 64 x7048 5))))
(assert (x4938 x7755))
(assert (x4938 x8417))
(assert (x4938 x6735))
(assert (x4938 x2028))
(assert (= (x1896 x4159 x5486 x1676 x2617 x1395) (x1388 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (x4938 x4899))
(assert (= (x5419 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)) x5048))
(assert (= x4889 (x3647 (x3407 64 x4889 (ite (>= 32 x3224) x4620 (ite (<= x3224 64) x3986 (ite (>= 96 x3224) x7579 (ite (<= x3224 128) x8321 (ite (>= 160 x3224) x8325 (ite (<= x3224 192) x4873 x2824))))))))))
(assert (x4938 x2477))
(assert (x4938 x1916))
(assert (x4938 x3082))
(assert (not (x8398 (x7622 x3989 x2981 x6000 x7436 x7177 x1427))))
(assert (x4938 x3481))
(assert (= (x3116 (x7087 x7277 x7748 x160 x2415)) x7277))
(assert (x8398 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (x4938 x8534))
(assert (x4938 x1279))
(assert (x4938 x4147))
(assert (x4938 x1200))
(assert (> (x7622 x5857 x6884 x2985 x8141 x159 x2846) 10000))
(assert (x4938 x3313))
(assert (x4938 x5159))
(assert (x4938 x4268))
(assert (= x3949 (and x6210 x8437)))
(assert (x4938 x3199))
(assert (x4938 x2395))
(assert (=> (<= x1747 10000) (= 0 (x1388 x1747))))
(assert (> (x7622 x3989 x2981 x6000 x7436 x7177 x1427) 10000))
(assert (x4938 x84))
(assert (x4938 x3961))
(assert (= x4233 (and x3263 (not x7598))))
(assert (= (and (not x2197) x748) x7042))
(assert (x4938 x1282))
(assert (x4938 x1892))
(assert (=> (<= x4609 10000) (= (x1388 x4609) 0)))
(assert (x4938 x8330))
(assert (= (=> (and (= x3091 true) (= 36 x5635) (= 2 x536) (= x4847 false) (= x3900 x8178) (= x4984 x6839) (= 0 x1553) (= x2926 x5545)) x2407) x101))
(assert (x4938 x393))
(assert (not (x8398 (x1896 x5478 x5582 x4037 x5940 x3546))))
(assert (x4938 x5892))
(assert (x4938 x4154))
(assert (x150 x3591))
(assert (x4938 x6139))
(assert (=> (>= 10000 x7185) (= (x1388 x7185) 0)))
(assert (x4938 x3936))
(assert (x150 x248))
(assert (=> (<= x3231 10000) (= 0 (x1388 x3231))))
(assert (x4938 x6098))
(assert (x4938 x8085))
(assert (= (or x602 x3106 x118) x3307))
(assert (x4938 x6556))
(assert (=> (<= x1453 10000) (= (x1388 x1453) 0)))
(assert (x4938 x1313))
(assert (x4938 x3885))
(assert (= 7 (x701 (x3407 64 x3627 7))))
(assert (= (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802) (x1388 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (=> (<= x8107 10000) (= (x1388 x8107) 0)))
(assert (x4938 x4867))
(assert (= x5283 (=> (= x7224 (= 0 x6300)) (and (=> (and (and (= x8178 x3900) (= x6839 x4984) (= x5783 true) (= 0 x1553) (= x396 2) (= false x2201) (= x5545 x2926) (= x7214 x5635)) x7224) x2407) (=> (and (and (= x1171 x7822) (= x710 x5326) (= x3093 x119) (= x2500 x8315)) (not x7224)) x681)))))
(assert (= x6947 (or (and x7834 x3107) (and x3178 x7606) (and x1421 x5180))))
(assert (x4938 x1303))
(assert (x4938 x2644))
(assert (= (and x2123 (not x402)) x1225))
(assert (not (x8398 (x3407 x7199 x226 x4057))))
(assert (x4938 x697))
(assert (x4938 x8298))
(assert (x4938 x6041))
(assert (= (and (not x3753) x4689) x420))
(assert (x4938 x4606))
(assert (x4938 x4251))
(assert (=> (>= 10000 x3341) (= 0 (x1388 x3341))))
(assert (= x4343 (x6568 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (= (x1388 (x3407 64 1 x3628)) (x3407 64 1 x3628)))
(assert (x4938 x3904))
(assert (x4938 x356))
(assert (= (x3647 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) x692))
(assert (x4938 x723))
(assert (x4938 x8143))
(assert (= (x3647 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569)) x6003))
(assert (x4938 x2692))
(assert (=> (>= 10000 x494) (= 0 (x1388 x494))))
(assert (x4938 x7072))
(assert (=> (<= x7808 10000) (= 0 (x1388 x7808))))
(assert (= x7631 (and x7232 (not x6452))))
(assert (=> (>= 10000 x6748) (= (x1388 x6748) 0)))
(assert (= (x3647 (x7087 x1389 x4115 x5007 x2944)) x4115))
(assert (= (=> (and (= (x1066 255 x2554) x492) (= x5885 x4984) (= x941 x3900) (= x7762 x2926) (= x6125 2) (= x5946 x492) (= x7846 x1850) (= x6094 0)) x3638) x3087))
(assert (= (=> (= x7778 (+ x4647 x6189)) x5431) x4891))
(assert (x4938 x3902))
(assert (x4938 x8284))
(assert (< 10000 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)))
(assert (= x6161 (and x2462 (not x1354))))
(assert (=> (>= 10000 x8157) (= (x1388 x8157) 0)))
(assert (x4938 x740))
(assert (x4938 x5880))
(assert (x4938 x7068))
(assert (= (and x1529 x2420) x4421))
(assert (x4938 x30))
(assert (not (x8398 (x3407 64 x8340 2))))
(assert (x4938 x3943))
(assert (= x5804 (x701 (x3407 x4159 x2229 x5804))))
(assert (x8398 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (x4938 x8462))
(assert (= x4126 (and x8269 x3061)))
(assert (=> (>= 10000 x2208) (= (x1388 x2208) 0)))
(assert (x4938 x6185))
(assert (x4938 x8352))
(assert (= x8169 (x3647 (x1022 x5857 x8169))))
(assert (x4938 x7925))
(assert (x4938 x7021))
(assert (x4938 x928))
(assert (x4938 x2954))
(assert (x4938 x4378))
(assert (= (x1388 43931689107028929153831073962459296230956404255593708771276734084804920737792) 0))
(assert (= (and x1919 (not x4912)) x54))
(assert (x4938 x485))
(assert (= (x1022 32 103) (x1388 (x1022 32 103))))
(assert (x4938 x4630))
(assert (= x3479 (x3116 (x3407 x3479 x2164 x2366))))
(assert (x4938 x3353))
(assert (x4938 x3513))
(assert (=> (>= 10000 x3081) (= (x1388 x3081) 0)))
(assert (x4938 x5735))
(assert (x4938 x28))
(assert (x4938 x5759))
(assert (= (or (and x8130 x8399) (and x6638 x636) (and x6718 x8046) (and x6728 x814) (and x207 x2697)) x5983))
(assert (=> (>= 10000 x6003) (= (x1388 x6003) 0)))
(assert (=> (>= 10000 x6350) (= 0 (x1388 x6350))))
(assert (= (and x7412 x8209) x1663))
(assert (x4938 x4916))
(assert (x4938 x3774))
(assert (= x2726 (x3116 (x7087 x2726 x8532 x6769 x6672))))
(assert (x4938 x6424))
(assert (x4938 x5156))
(assert (= (x3407 x3651 x633 x7276) (x1388 (x3407 x3651 x633 x7276))))
(assert (x4938 x3957))
(assert (x4938 x3787))
(assert (x4938 x6920))
(assert (= x5152 (and x7536 x3790)))
(assert (x4938 x2236))
(assert (= (and (not x5434) x6591) x6785))
(assert (x4938 x2300))
(assert (=> (>= 10000 x3966) (= (x1388 x3966) 0)))
(assert (= x8524 (x6568 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (x4938 x7902))
(assert (x4938 x7298))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 1 x3628)))
(assert (x4938 x6624))
(assert (> (x1022 x206 x1048) 10000))
(assert (= (and x5829 x2146) x4111))
(assert (= (x1388 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)) (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)))
(assert (x4938 x5883))
(assert (x4938 x6580))
(assert (not (x8398 (x7622 x1389 x6653 x1971 x4729 x3159 x1076))))
(assert (= x1767 (and x5494 x3374)))
(assert (x4938 x40))
(assert (x4938 x4680))
(assert (x4938 x4149))
(assert (= (or x12 x4282) x1939))
(assert (x4938 x3048))
(assert (= (and x1098 (not x56)) x3495))
(assert (x4938 x158))
(assert (= (x1388 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x4938 x1290))
(assert (= (=> (and (= x2556 true) (= x2980 false) (= x5635 36) (= x5398 2) (= x2926 x5545) (= x8178 x3900) (= x1553 0) (= x4984 x6839)) x2407) x6732))
(assert (= x5684 (or x4238 x7114 x2635 x7323 x4233)))
(assert (=> (>= 10000 x5048) (= 0 (x1388 x5048))))
(assert (= x5585 (and (not x3295) x7716)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x4159 x2208)))
(assert (x4938 x1538))
(assert (x4938 x8484))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x2454 x196)))
(assert (x4938 x3250))
(assert (x4938 x7191))
(assert (= x6278 (and x7951 x4044)))
(assert (x2131 x6153))
(assert (= (x5419 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) x3381))
(assert (= (or x1864 x7168 x5269) x53))
(assert (x4938 x4487))
(assert (x4938 x3512))
(assert (x4938 x4045))
(assert (x4938 x3639))
(assert (= (and x718 (not x6287)) x7347))
(assert (= (and (not x3740) x7382) x5153))
(assert (= (x3647 (x7087 x3224 x8081 x5985 x4105)) x8081))
(assert (x4938 x5725))
(assert (< (x1022 x2119 x6911) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x617))
(assert (= (x1388 (x3407 x4598 x4609 x1933)) (x3407 x4598 x4609 x1933)))
(assert (=> (>= 10000 x6760) (= (x1388 x6760) 0)))
(assert (x4938 x4276))
(assert (=> (<= x7851 10000) (= 0 (x1388 x7851))))
(assert (= x7199 (x3116 (x1896 x7199 x4139 x2108 x7648 x2383))))
(assert (= x750 (and (not x3955) x5349)))
(assert (= (and x2042 x7362) x1435))
(assert (x4938 x4466))
(assert (x4938 x4821))
(assert (x4938 x725))
(assert (= x3456 (and x5646 x1195)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 1 x5792)))
(assert (x4938 x1496))
(assert (x4938 x582))
(assert (x4938 x700))
(assert (=> (>= 10000 x5912) (= (x1388 x5912) 0)))
(assert (x4938 x5206))
(assert (x4938 x2997))
(assert (= (and x5619 x1501) x2144))
(assert (x704 x4365))
(assert (x4938 x757))
(assert (= (x3116 (x3407 64 x7610 6)) 64))
(assert (x4938 x60))
(assert (= x8538 (and x4072 x4862)))
(assert (x4938 x3594))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x6088 x7455 x5442 x6835)))
(assert (= (x3407 64 x4706 7) (x1388 (x3407 64 x4706 7))))
(assert (not (x8398 (x1022 x5857 x8169))))
(assert (= (x3116 (x1896 x3224 x6110 x1045 x8162 x2618)) x3224))
(assert (=> (>= 10000 x4486) (= (x1388 x4486) 0)))
(assert (= x4809 (x3116 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (x4938 x8356))
(assert (x4938 x4778))
(assert (= x6473 (and x4580 x3379)))
(assert (x8398 3313512704))
(assert (= x748 (and x4587 (not x8299))))
(assert (> (x3407 64 x7195 12) 10000))
(assert (=> (<= x1891 10000) (= (x1388 x1891) 0)))
(assert (x4938 x1077))
(assert (=> (<= x1138 10000) (= 0 (x1388 x1138))))
(assert (x4938 x5709))
(assert (= (x3116 (x7622 x4400 x1644 x2724 x7830 x2972 x3839)) x4400))
(assert (x4938 x2550))
(assert (= 64 (x3116 (x3407 64 x6604 12))))
(assert (= (or x5379 x3188) x803))
(assert (x4938 x3806))
(assert (x4938 x6392))
(assert (=> (<= x7352 10000) (= (x1388 x7352) 0)))
(assert (= x1706 (=> (= (= x2859 0) x1415) (and (=> (and (and (= x1905 true) (= x5156 x1216) (= x3570 false)) x1415) x5369) (=> (and (= x1010 (< x5156 64)) (not x1415)) (and (=> (and (and (= x2961 x576) (= x6875 (x7166 290)) (= x6979 x6071) (= x2307 x4513) (= x1391 x4828) (= x6745 x566) (= x8100 (x7166 322)) (= x4334 x6822) (= x6224 x3572) (= x4355 x2444) (= x2207 x140) (= 354 x2477) (= x2209 x1081) (= x6984 x3731) (= x2997 x5200) (= x3315 x6875) (= x3497 x8376)) (not x1010)) x3575) (=> (and (and (= 0 x1216) (= x6747 false) (= true x8098)) x1010) x5369)))))))
(assert (= (x3116 (x3407 64 x1891 7)) 64))
(assert (x4938 x7081))
(assert (x4938 x3529))
(assert (= x7643 (x6340 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (< (x3407 64 x8340 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x8398 (x7622 x3224 x7683 x1344 x5037 x3808 x8369))))
(assert (= x3978 (and x7506 (not x6571))))
(assert (not (x8398 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (not (x8398 (x3407 64 x1842 0))))
(assert (x4938 x1152))
(assert (= (x1388 (+ x5509 1)) (x1388 x5509)))
(assert (= (x7622 x4159 x3114 x2452 x1679 x3341 x8514) (x1388 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (x4938 x5242))
(assert (x4938 x7845))
(assert (= (and x1663 (not x2821)) x6318))
(assert (x4938 x160))
(assert (x4938 x4067))
(assert (= (x701 (x3407 64 x1232 (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (>= 96 x206) x8332 (ite (>= 128 x206) x5271 (ite (<= x206 160) x312 (ite (>= 192 x206) x2304 x5765)))))))) (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (>= 96 x206) x8332 (ite (<= x206 128) x5271 (ite (>= 160 x206) x312 (ite (>= 192 x206) x2304 x5765))))))))
(assert (x4938 x597))
(assert (= x8417 (x6340 (x7087 x3651 x4747 x210 x8417))))
(assert (< 10000 (x3407 64 x5520 11)))
(assert (x4938 x1471))
(assert (< (x3407 64 x8409 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8386))
(assert (x150 x30))
(assert (= (x3407 64 x4502 36) (x1388 (x3407 64 x4502 36))))
(assert (x150 x6903))
(assert (x4546 x812))
(assert (< (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x921))
(assert (x4938 x4365))
(assert (x4938 x4065))
(assert (x4938 x3425))
(assert (x4938 x2602))
(assert (x4938 x635))
(assert (= (=> (and (= x5099 x6717) (= x7078 x584) (= x2850 x2398) (= 0 x6168) (= x621 x1927) (= x2265 2) (= x1991 x138) (= x357 (x1066 255 x4365)) (= 2 x5828) (= x661 x6676) (= x2133 x5801) (= x6331 x5098) (= x4010 x4368) (= x7374 x307) (= x6291 x2331) (= x4507 true) (= x2126 x6283) (= x3543 false) (= x8267 x4066)) x5672) x2887))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1958 36)))
(assert (= x469 (or x5043 x7223 x8537 x6727)))
(assert (x4938 x4852))
(assert (=> (<= x6124 10000) (= (x1388 x6124) 0)))
(assert (=> (<= x2978 10000) (= (x1388 x2978) 0)))
(assert (x4938 x8314))
(assert (= (x1388 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)) (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)))
(assert (= x5954 (and x7124 (not x7866))))
(assert (= (and (not x543) x3036) x1393))
(assert (= (x3116 (x3407 64 x2876 36)) 64))
(assert (= x5653 (=> (and (= x4948 (div x5098 2)) (= (< 0 x4312) x5634) (= (- x4711 132) x6525) (= x6313 (x1066 1 x5098)) (= (x2230 (- x6313 (mod (ite (< x4665 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4312) (= x4665 (ite (> x6313 0) x4948 (x1066 127 x4948)))) (and (=> (and (and (= x1470 (x1066 1 x5098)) (= x6189 (+ 32 x4711)) (= x888 (= 0 x1470))) x5634) (and (=> (and x888 (and (= (* (ite (not (= 0 x4665)) 1 0) 32) x4916) (= x3423 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5098)) (or (= 0 x4916) (= 32 x4916)) (= x7778 (+ x6189 x4916)))) x5431) (=> (and (not x888) (and (or (and (= x4647 0) (not x3942)) (and x3942 (and (>= 32 x4665) (= (x5963 x4095) x2614) (= 32 x4647)))) (and (= x3942 (< 0 x4665)) (= (x1022 32 104) x4095)))) x4891))) (=> (not x5634) x2490)))))
(assert (= (and (not x3421) x6070) x5161))
(assert (x4938 x7241))
(assert (= (or x1440 (and (not x2748) x7255)) x7506))
(assert (not (x8398 (x7622 x2454 x7378 x3190 x5182 x1064 x4091))))
(assert (x3670 x583))
(assert (= (x1388 (x1022 x2119 x6911)) (x1022 x2119 x6911)))
(assert (x4938 x4030))
(assert (x4938 x2524))
(assert (x4938 x2367))
(assert (< 10000 (x3407 64 x3585 36)))
(assert (x4938 x488))
(assert (x4938 x1645))
(assert (x150 x2247))
(assert (= (and x8299 x4587) x5449))
(assert (x4938 x4312))
(assert (x4938 x3280))
(assert (x4938 x8469))
(assert (= (and x2781 x2512) x2645))
(assert (x8398 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (= x7069 x699))
(assert (x8398 34591783479076665078880830389440322441076534786459098783165778951140825654127))
(assert (x4938 x342))
(assert (x4938 x2801))
(assert (= x5321 (and x1518 x5021)))
(assert (x4938 x7589))
(assert (x4938 x5801))
(assert (x4938 x3124))
(assert (= x7774 (and x4869 (not x5365))))
(assert (x4938 x3814))
(assert (x4938 x2052))
(assert (= x4448 (and x1455 (not x3045))))
(assert (=> (<= x3885 10000) (= (x1388 x3885) 0)))
(assert (x4938 x179))
(assert (> (x1022 32 x6445) 10000))
(assert (x4938 x6964))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (> (x7087 x3651 x4747 x210 x8417) 10000))
(assert (= (and x7645 (not x103)) x3858))
(assert (x4938 x2861))
(assert (x4938 x8446))
(assert (x4938 x3137))
(assert (x4938 x5238))
(assert (x4938 x5637))
(assert (= x4547 (and x4564 x1745)))
(assert (x4938 x2258))
(assert (= (and x1270 x2645) x5621))
(assert (x4938 x639))
(assert (x4938 x769))
(assert (x4938 x1957))
(assert (x150 x2331))
(assert (not (x8398 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (>= 96 x4159) x7440 (ite (>= 128 x4159) x6983 (ite (>= 160 x4159) x2778 (ite (<= x4159 192) x1660 x3397))))))))))
(assert (x4938 x5336))
(assert (x4938 x1045))
(assert (x4938 x3386))
(assert (x4938 x6388))
(assert (x4938 x2489))
(assert (= (and x7738 (not x2747)) x609))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)))
(assert (x4938 x7636))
(assert (x4938 x1814))
(assert (= (x3647 (x3407 64 x26 (ite (<= x2119 32) x5997 (ite (>= 64 x2119) x1207 (ite (<= x2119 96) x568 (ite (>= 128 x2119) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250)))))))) x26))
(assert (=> (>= 10000 x5725) (= (x1388 x5725) 0)))
(assert (x4938 x4240))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x206 x130 x7601 x4255 x4343 x6882)))
(assert (x4938 x8393))
(assert (= x4399 (or x2446 x1749 (and x7952 x1835) x125 (and x1766 x5990) x3964 x3163)))
(assert (> (x3407 x4400 x530 x4750) 10000))
(assert (= (x701 (x3407 x6088 x407 x3652)) x3652))
(assert (x4938 x7461))
(assert (= (x701 (x3407 x3224 x5218 x6215)) x6215))
(assert (x150 x2600))
(assert (= (x6568 (x7622 x7277 x828 x6423 x4655 x7851 x163)) x7851))
(assert (x4938 x7779))
(assert (= (x1688 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) x2953))
(assert (x4938 x5600))
(assert (x150 x280))
(assert (= x7610 (x3647 (x3407 64 x7610 6))))
(assert (> (x7622 x2119 x6964 x1957 x8286 x7477 x7270) 10000))
(assert (=> (<= x196 10000) (= 0 (x1388 x196))))
(assert (x4938 x1717))
(assert (x4938 x7485))
(assert (=> (>= 10000 x668) (= 0 (x1388 x668))))
(assert (x150 x5732))
(assert (= x200 (x3647 (x1022 32 x200))))
(assert (x4938 x1390))
(assert (x4938 x8136))
(assert (x4938 x1650))
(assert (= (or x2211 x6599) x1455))
(assert (=> (<= x2723 10000) (= 0 (x1388 x2723))))
(assert (x4938 x5427))
(assert (= x6658 (x3647 (x3407 64 x6658 6))))
(assert (x4938 x6775))
(assert (x4938 x1796))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1540 (x6568 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= x374 (and x8250 (not x7554))))
(assert (x4938 x7056))
(assert (=> (>= 10000 x530) (= 0 (x1388 x530))))
(assert (= x7094 x5026))
(assert (= (or x7025 x992) x5807))
(assert (x4938 x1367))
(assert (x4938 x2166))
(assert (= (x3647 (x7622 x3989 x2981 x6000 x7436 x7177 x1427)) x2981))
(assert (= (x701 (x3407 64 x4120 11)) 11))
(assert (= x196 (x3647 (x1022 x2454 x196))))
(assert (= x8340 (x3647 (x3407 64 x8340 6))))
(assert (x4938 x5309))
(assert (= (or x4145 x236) x7188))
(assert (x4938 x3859))
(assert (x4938 x3220))
(assert (x150 x7751))
(assert (x4938 x3995))
(assert (x4938 x4610))
(assert (= x5563 (and x5266 (not x2425))))
(assert (x4938 x4895))
(assert (= (and x4262 x2875) x7201))
(assert (= x34 (=> (= (= x211 0) x904) (and (=> (and (and (= false x1409) (= x5206 0) (= true x102)) x904) x4167) (=> (and (and (= x2188 x964) (= x6927 x2609) (= x1018 x1226) (= x7117 x6170) (= x3260 x2028) (= x2193 x5245) (= x6642 x5528) (= x5639 x6372) (= x4148 x5764) (= x1272 1) (= x6842 x2963) (= x84 0) (= x5974 x3082) (= x3237 x5831) (= x6241 x1591)) (not x904)) x5610)))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x3224 x8081 x5985 x4105)))
(assert (x4938 x4560))
(assert (= (x3647 (x3407 64 x8409 36)) x8409))
(assert (= (x3407 64 x3585 36) (x1388 (x3407 64 x3585 36))))
(assert (= x5689 (and x8230 (not x2634))))
(assert (= (x701 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563)) x8517))
(assert (x4938 x4584))
(assert (x4938 x2705))
(assert (= (or x7603 x37) x7716))
(assert (=> (>= 10000 x8386) (= 0 (x1388 x8386))))
(assert (= (and (not x5399) x5130) x1636))
(assert (< 10000 (x3407 64 x8409 6)))
(assert (= 0 (x3116 (x4958 0))))
(assert (x4938 x2232))
(assert (= x5216 (and (not x1466) x8186)))
(assert (= x2268 (=> (and (= x3522 (= 0 x496)) (or (and (not x3522) (and (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8512) x7660) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x7660) (>= x7660 1) (= (+ 128 x7660) x5029) (= (x7100 (+ x496 63)) x8512))) (and (= 128 x5029) x3522))) x8261)))
(assert (= x2199 (x3647 (x1896 x4809 x2199 x4831 x3620 x4599))))
(assert (x4938 x4647))
(assert (= x5444 (and (not x6857) x1333)))
(assert (x3670 x3058))
(assert (x4938 x7997))
(assert (< (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x837 (not x7335)) x6587))
(assert (=> (>= 10000 x4422) (= (x1388 x4422) 0)))
(assert (x4938 x2103))
(assert (x4938 x6815))
(assert (x4938 x959))
(assert (= (x6340 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) x3717))
(assert (=> (<= x7830 10000) (= (x1388 x7830) 0)))
(assert (= (=> (and (= (= 0 x4489) x5718) (or (and (and (= x3285 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7696)) (<= x3285 115792089237316195423570985008687907853269984665640564039457584007913129639807) (<= 1 x3285) (= x7696 (x7100 (+ x4489 63))) (= x7569 (+ x3285 128))) (not x5718)) (and (= x7569 128) x5718))) x7102) x7254))
(assert (x4938 x5860))
(assert (x4938 x8304))
(assert (x4938 x5430))
(assert (=> (>= 10000 x8390) (= (x1388 x8390) 0)))
(assert (= x4400 (x3116 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (= (and x8379 (not x3052)) x8201))
(assert (x8398 57896044618658097711785492504343953926634992332820282019728792003956))
(assert (x4938 x3517))
(assert (not (x8398 (x1022 32 x2141))))
(assert (x4938 x7392))
(assert (> (x1022 32 x8103) 10000))
(assert (x4938 x5146))
(assert (= x5697 (x5419 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (x4938 x3196))
(assert (= (x1388 1084734224) 0))
(assert (=> (>= 10000 x2019) (= (x1388 x2019) 0)))
(assert (x4938 x4035))
(assert (x4938 x8369))
(assert (x4938 x2488))
(assert (x4938 x6300))
(assert (= (and x207 (not x2697)) x1451))
(assert (= (and x6279 x4996) x202))
(assert (= x2875 (and x3476 x2016)))
(assert (x4938 x2970))
(assert (=> (>= 10000 x738) (= (x1388 x738) 0)))
(assert (= (x1896 x2726 x7749 x2789 x3787 x3437) (x1388 (x1896 x2726 x7749 x2789 x3787 x3437))))
(assert (= (=> (and (= x7214 0) (= x710 x7111) (= x7757 x1171) (= x8315 x4984) (= x6300 1) (= x119 x2926)) x5705) x2892))
(assert (x4938 x3143))
(assert (x3670 x7769))
(assert (not (x8398 (x7622 x6088 x6608 x929 x2836 x1656 x880))))
(assert (x4938 x2529))
(assert (= x2724 (x701 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (x4938 x8008))
(assert (= (and x7806 x1551) x3064))
(assert (= (x3647 (x3407 64 x1579 1)) x1579))
(assert (x4938 x7634))
(assert (x4938 x3284))
(assert (= (x6568 (x1896 x2119 x3204 x7545 x6185 x4559)) x4559))
(assert (=> (>= 10000 x3228) (= (x1388 x3228) 0)))
(assert (x4938 x3162))
(assert (= x4131 (and x3694 (not x7625))))
(assert (x4938 x1408))
(assert (= (x1388 (x7622 x6213 x8556 x4777 x3164 x3734 x5287)) (x7622 x6213 x8556 x4777 x3164 x3734 x5287)))
(assert (= x4125 (or (and (not x8522) x4563) x3043)))
(assert (= x6143 (and x5290 x8465)))
(assert (x4938 x6007))
(assert (= (and x5643 x4510) x3106))
(assert (x4938 x4980))
(assert (= (and (not x2335) x1053) x636))
(assert (x4938 x3309))
(assert (x4938 x6359))
(assert (x4938 x604))
(assert (> (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265) 10000))
(assert (= x4482 x1336))
(assert (x4938 x373))
(assert (=> (>= 10000 x1438) (= (x1388 x1438) 0)))
(assert (x4938 x685))
(assert (= x6751 x7976))
(assert (x4938 x7599))
(assert (x4938 x5850))
(assert (= (and (not x6131) x5467) x6490))
(assert (= 64 (x3116 (x3407 64 1 x1485))))
(assert (= 64 (x3116 (x3407 64 x8409 36))))
(assert (= (and (not x3547) x6191) x6873))
(assert (=> (<= x1202 10000) (= 0 (x1388 x1202))))
(assert (x4938 x6054))
(assert (not (x8398 (x7622 x2119 x6964 x1957 x8286 x7477 x7270))))
(assert (x150 x732))
(assert (x4938 x6839))
(assert (=> (>= 10000 x1425) (= 0 (x1388 x1425))))
(assert (< 10000 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)))
(assert (< 10000 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563)))
(assert (x4938 x4189))
(assert (x4938 x5948))
(assert (x4938 x5834))
(assert (= (and x3055 x1585) x3850))
(assert (= 64 (x3116 (x3407 64 x5504 36))))
(assert (=> (<= x4729 10000) (= (x1388 x4729) 0)))
(assert (=> (<= x1940 10000) (= 0 (x1388 x1940))))
(assert (x4938 x3217))
(assert (= (and x2875 (not x4262)) x6674))
(assert (= x831 (and x7493 x5555)))
(assert (= x2558 (and (not x4862) x4072)))
(assert (x4938 x5348))
(assert (= x6047 (or x5140 x987 x7042 x5449 x5305 x1844 x2246 x296 x3549 x7133)))
(assert (x4938 x3128))
(assert (x4938 x8411))
(assert (x4938 x2528))
(assert (= (and x4659 x1866) x3126))
(assert (= x7317 (x6568 (x7622 x4598 x663 x6206 x1584 x7317 x3231))))
(assert (x4938 x3354))
(assert (= (and (not x1270) x2645) x7393))
(assert (= x867 (and x3510 (not x2537))))
(assert (x3670 x476))
(assert (not (x8398 (x3407 x4598 x4609 x1933))))
(assert (x4938 x2600))
(assert (=> (>= 10000 x1432) (= (x1388 x1432) 0)))
(assert (not (x8398 (x3407 64 x6325 2))))
(assert (=> (>= 10000 x6769) (= 0 (x1388 x6769))))
(assert (x4938 x4706))
(assert (=> (<= x6522 10000) (= (x1388 x6522) 0)))
(assert (= (or (and x7920 x7632) x3601) x8080))
(assert (= (and (not x4156) x3219) x7124))
(assert (x4938 x3079))
(assert (= x8302 (and x2512 (not x2781))))
(assert (x3670 x2405))
(assert (= x2588 (and x4155 (not x547))))
(assert (x4938 x476))
(assert (x4938 x6682))
(assert (x4938 x3661))
(assert (x4938 x3383))
(assert (= 3 (x701 (x3407 64 x7048 3))))
(assert (x4938 x5681))
(assert (x4938 x1509))
(assert (x4938 x4505))
(assert (not (x8398 (x1022 x206 x1048))))
(assert (> (x1896 x7277 x2481 x3415 x960 x8255) 10000))
(assert (= (x6568 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) x3060))
(assert (x4938 x4165))
(assert (x4938 x3958))
(assert (x4938 x1427))
(assert (x4938 x5580))
(assert (> (x3407 64 x2019 12) 10000))
(assert (x4938 x3225))
(assert (= (and x5539 (not x7515)) x3441))
(assert (< (x7087 x206 x7682 x314 x3818) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)))
(assert (=> (>= 10000 x7195) (= 0 (x1388 x7195))))
(assert (x4938 x7661))
(assert (=> (>= 10000 x5520) (= 0 (x1388 x5520))))
(assert (=> (<= x7683 10000) (= 0 (x1388 x7683))))
(assert (x4938 x6148))
(assert (x4938 x7939))
(assert (x150 x415))
(assert (x4938 x210))
(assert (x4938 x5866))
(assert (< (x3407 64 1 x1120) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4231 (or (and x5640 x5249) (and x3064 x6640))))
(assert (=> (<= x8139 10000) (= 0 (x1388 x8139))))
(assert (x4938 x6206))
(assert (= (and (not x2897) x7809) x2332))
(assert (x4938 x4872))
(assert (= (and x3064 (not x6640)) x7886))
(assert (x4938 x2066))
(assert (x4938 x698))
(assert (x4938 x1481))
(assert (=> (>= 10000 x5857) (= (x1388 x5857) 0)))
(assert (=> (>= 10000 x1059) (= 0 (x1388 x1059))))
(assert (not (x8398 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (x4938 x650))
(assert (= 0 (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639933)))
(assert (x4938 x204))
(assert (=> (>= 10000 x8409) (= 0 (x1388 x8409))))
(assert (x4938 x3356))
(assert (= (or x2833 x1595 x2569 x3830 x7893) x5049))
(assert (not (x8398 (x3407 64 x3627 7))))
(assert (x4938 x5197))
(assert (x4938 x2084))
(assert (x4938 x1552))
(assert (not (x8398 (x3407 64 x5520 11))))
(assert (= (x3116 (x1896 x5478 x5582 x4037 x5940 x3546)) x5478))
(assert (= (=> (and (= x2042 (= x921 0)) (or x2042 (not x2042))) x7358) x7110))
(assert (x4938 x3002))
(assert (< 10000 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)))
(assert (=> (<= x7029 10000) (= (x1388 x7029) 0)))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (x4938 x1851))
(assert (x4938 x41))
(assert (=> (<= x4324 10000) (= (x1388 x4324) 0)))
(assert (x4938 x6222))
(assert (= x6823 (=> (and (= x5872 (= 0 x5487)) (or (and (= x2886 x5487) x5872) (and (and (= (x3812 x6107) x6405) (= (x7100 (+ 96 x3489)) x3018) (= x7884 (x1163 160)) (= x4554 (x1022 x4400 x833)) (= (x1163 224) x7441) (= x3288 (x1163 224)) (= x1503 (x1163 288)) (= (x7100 (+ 96 x3489)) x4114) (= x4060 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) (= x3220 (x3812 x1732)) (= x3209 (x1163 192)) (= (x7100 (+ 192 x3489)) x6107) (= x7830 (x3812 x1273)) (= (x7100 (+ x3489 32)) x6555) (= (x3812 x6891) x8389) (= x6455 (x7100 (+ 32 x3489))) (= (x3812 x7407) x5835) (= x6729 (x3812 x1964)) (= (x1163 160) x7013) (= (x7100 (+ 128 x3489)) x4674) (= (x1163 192) x183) (= x8057 (x1163 224)) (= x2738 (x7087 x3479 x7029 x183 x5058)) (= x3829 (x3812 x3489)) (= (x7100 (+ x3489 64)) x8136) (= (x1163 160) x692) (= (x7622 x3479 x7884 x1998 x3288 x2864 x1503) x4075) (= x3569 (x3812 x856)) (= x463 (x1163 224)) (>= 224 x4400) (= x3007 (x1163 192)) (= x6838 (x1163 256)) (= x4814 (x7100 (+ 160 x3489))) (= x2128 (x1163 320)) (= (x3812 x2489) x4750) (= x6891 (x7100 (+ x3489 128))) (= x7407 (x7100 (+ x3489 128))) (= x2366 (x1163 192)) (>= 224 x3479) (= (x7100 (+ x3489 160)) x856) (= (x3407 x3479 x2164 x2366) x8494) (= x7827 (x3407 x4400 x530 x4750)) (= x7780 (x3812 x6455)) (= (x3812 x3018) x7189) (= (x1896 x3479 x7206 x3209 x7441 x6838) x6809) (= x5392 (x3812 x4814)) (= (x7100 (+ 64 x3489)) x4844) (= x7185 (x3812 x8136)) (= (x1163 160) x7206) (= (x3812 x3489) x1644) (= x1998 (x1163 192)) (= (x3812 x3489) x6003) (= (x3812 x3489) x8390) (= x3033 (x7100 (+ 32 x3489))) (= (x7100 (+ 64 x3489)) x1273) (= (x3812 x5422) x2972) (= (x4958 0) x8173) (= x8359 (x3812 x5894)) (= x2489 (x7100 (+ x3489 32))) (= x5422 (x7100 (+ 96 x3489))) (= (x1896 x4400 x4441 x7780 x8359 x6150) x5728) (= x613 (x3812 x4844)) (= x2886 (ite (= (ite (= 0 x3479) x8173 (ite (<= x3479 32) x3258 (ite (<= x3479 64) x8494 (ite (<= x3479 96) x2738 (ite (<= x3479 128) x6809 (ite (>= 160 x3479) x4075 (ite (<= x3479 192) x4195 x4060))))))) (ite (= 0 x4400) x266 (ite (<= x4400 32) x4554 (ite (>= 64 x4400) x7827 (ite (>= 96 x4400) x5668 (ite (<= x4400 128) x5728 (ite (>= 160 x4400) x6280 (ite (>= 192 x4400) x4443 x6343)))))))) 1 0)) (= x4441 (x3812 x3489)) (= (x1163 224) x5058) (= (x7087 x4400 x8390 x5866 x613) x5668) (= x2164 (x1163 160)) (= x2864 (x1163 256)) (= (x1163 256) x3661) (= (x1163 288) x3312) (= (x4958 0) x266) (= (x1163 160) x7029) (= (x3812 x4674) x3839) (= (x3812 x6555) x5866) (= (x3812 x3033) x622) (= x833 (x3812 x3489)) (= (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405) x6343) (= (x1163 256) x7060) (= x530 (x3812 x3489)) (= x4195 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) (= x4858 (x7100 (+ x3489 x4400))) (= (x7100 (+ x3489 32)) x1570) (= x5894 (x7100 (+ x3489 64))) (= x3258 (x1022 x3479 x7013)) (= (x1163 320) x8218) (= (x1163 288) x5978) (= x4422 (x1163 192)) (= (x7100 (+ x3489 64)) x5095) (= x6150 (x3812 x4114)) (= (x7622 x4400 x1644 x2724 x7830 x2972 x3839) x6280) (= x4443 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569)) (= x3890 (x1163 352)) (= x1732 (x7100 (+ x3489 32))) (= x1438 (x1163 160)) (= x3479 (x1163 128)) (= x1964 (x7100 (+ x3489 96))) (= (x3812 x5095) x4808) (= (x3812 x1570) x2724)) (not x5872)))) x5337)))
(assert (= x2709 (and x3748 x3781)))
(assert (x4938 x4427))
(assert (= (=> (= x7859 (+ x1480 x5975)) x3195) x614))
(assert (= (x6340 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x2647))
(assert (x4938 x3692))
(assert (= x80 (and x1789 x2964)))
(assert (= (x6568 (x1896 x4400 x4441 x7780 x8359 x6150)) x6150))
(assert (= (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872) (x1388 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872))))
(assert (= (x3116 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)) x3224))
(assert (x4938 x4616))
(assert (x704 x6883))
(assert (= (or x1681 x6480) x2834))
(assert (not (x8398 (x1896 x4400 x4441 x7780 x8359 x6150))))
(assert (= x7884 (x3647 (x7622 x3479 x7884 x1998 x3288 x2864 x1503))))
(assert (x4938 x7822))
(assert (x4938 x3319))
(assert (x4938 x1470))
(assert (= x7362 (or x3953 x6047)))
(assert (x4938 x4302))
(assert (x4938 x7307))
(assert (x4938 x8359))
(assert (x4938 x6400))
(assert (x4938 x5710))
(assert (not (x8398 (x3407 64 x1579 1))))
(assert (x4938 x6125))
(assert (x4938 x340))
(assert (= (and x6077 x1067) x8471))
(assert (= (x1022 x3989 x8396) (x1388 (x1022 x3989 x8396))))
(assert (x4938 x5325))
(assert (x4938 x7036))
(assert (= (x555 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756)) x6756))
(assert (=> (<= x3536 10000) (= 0 (x1388 x3536))))
(assert (= x3694 (and (not x5565) x3441)))
(assert (> (x1896 x3479 x7206 x3209 x7441 x6838) 10000))
(assert (= (x1388 (x1896 x7199 x4139 x2108 x7648 x2383)) (x1896 x7199 x4139 x2108 x7648 x2383)))
(assert (x4938 x7765))
(assert (x4938 x318))
(assert (< (x3407 64 x1202 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5832))
(assert (= x120 (and x6053 x4742)))
(assert (x4938 x1852))
(assert (x4938 x385))
(assert (x4938 x5726))
(assert (= (or (and x5565 x3441) (and x4121 x5030)) x8463))
(assert (x4938 x6854))
(assert (=> (>= 10000 x5504) (= (x1388 x5504) 0)))
(assert (=> (<= x2454 10000) (= (x1388 x2454) 0)))
(assert (x4938 x7327))
(assert (< (x3407 64 x1579 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4777 10000) (= (x1388 x4777) 0)))
(assert (x4938 x6852))
(assert (= (x6340 (x7622 x3224 x7683 x1344 x5037 x3808 x8369)) x5037))
(assert (= (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (>= 64 x3224) x3986 (ite (>= 96 x3224) x7579 (ite (<= x3224 128) x8321 (ite (>= 160 x3224) x8325 (ite (<= x3224 192) x4873 x2824))))))) (x1388 (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (>= 64 x3224) x3986 (ite (<= x3224 96) x7579 (ite (>= 128 x3224) x8321 (ite (<= x3224 160) x8325 (ite (>= 192 x3224) x4873 x2824))))))))))
(assert (x4938 x5047))
(assert (x4938 x5383))
(assert (= (and x7598 x3263) x7114))
(assert (x4938 x4619))
(assert (= x2333 (x701 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334))))
(assert (=> (>= 10000 x5051) (= (x1388 x5051) 0)))
(assert (= x3692 (x1688 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (x4938 x607))
(assert (x4938 x2851))
(assert (=> (<= x6884 10000) (= (x1388 x6884) 0)))
(assert (x8398 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (= (=> (and (= x4984 x6839) (= 2 x8469) (= x5803 true) (= x1553 0) (= x2926 x5545) (= x8178 x3900) (= x5564 false) (= x5635 36)) x2407) x1986))
(assert (= (x1688 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) x3616))
(assert (= x6928 (and x6192 x2858)))
(assert (x4938 x491))
(assert (x4938 x7521))
(assert (x4938 x2118))
(assert (x4938 x3865))
(assert (x4938 x4865))
(assert (= (and (not x6063) x6161) x6077))
(assert (= (x1388 (x3407 x6541 x4467 x2703)) (x3407 x6541 x4467 x2703)))
(assert (= (and x8185 x8155) x2459))
(assert (= 0 (x1388 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (= x2093 (and (not x3848) x524)))
(assert (x4938 x7173))
(assert (x4938 x3989))
(assert (= (and x5157 x4730) x6365))
(assert (x4938 x7345))
(assert (=> (>= 10000 x6658) (= 0 (x1388 x6658))))
(assert (x4938 x5493))
(assert (x4938 x8409))
(assert (x4938 x5737))
(assert (not (x8398 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128))))
(assert (= x7270 (x5419 (x7622 x2119 x6964 x1957 x8286 x7477 x7270))))
(assert (x4938 x822))
(assert (= (x3647 (x3407 x4400 x530 x4750)) x530))
(assert (x4938 x6140))
(assert (=> (>= 10000 x6968) (= (x1388 x6968) 0)))
(assert (x4938 x3115))
(assert (=> (<= x6882 10000) (= (x1388 x6882) 0)))
(assert (x4938 x6801))
(assert (x4938 x2665))
(assert (x4938 x621))
(assert (x4938 x5366))
(assert (x4938 x1979))
(assert (= (x701 (x3407 x7277 x1788 x5949)) x5949))
(assert (x8398 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x4938 x5128))
(assert (x4938 x4570))
(assert (= x6087 (=> (and (= x2871 (x2230 (- x3313 (mod (ite (< x2659 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- x3299 132) x8534) (= x117 (< 0 x2871)) (= (x1066 1 x7828) x3313) (= x732 (div x7828 2)) (= x2659 (ite (> x3313 0) x732 (x1066 127 x732)))) (and (=> (not x117) x6732) (=> (and (and (= (x1066 1 x7828) x3701) (= (+ 32 x3299) x5884) (= (= 0 x3701) x2165)) x117) (and (=> (and (and (= x808 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7828)) (or (= x4157 0) (= x4157 32)) (= (* (ite (not (= x2659 0)) 1 0) 32) x4157) (= x817 (+ x4157 x5884))) x2165) x3352) (=> (and (not x2165) (and (or (and (= x4227 0) (not x6784)) (and x6784 (and (<= x2659 32) (= (x7511 x2086) x6097) (= x4227 32)))) (and (= x2086 (x1022 32 104)) (= (< 0 x2659) x6784)))) x7463)))))))
(assert (x4938 x7815))
(assert (x4938 x4687))
(assert (=> (>= 10000 x3653) (= 0 (x1388 x3653))))
(assert (= x1845 (and x3456 x870)))
(assert (> (x7087 x4159 x8094 x3597 x5628) 10000))
(assert (= (x3647 (x7087 x6088 x7455 x5442 x6835)) x7455))
(assert (x4938 x5973))
(assert (= (and x4563 x8522) x3043))
(assert (x4938 x2361))
(assert (x4938 x4102))
(assert (x4938 x3396))
(assert (x704 x6500))
(assert (= (or x2469 x4536) x5854))
(assert (x4938 x4245))
(assert (x4938 x1801))
(assert (x4938 x6548))
(assert (= x3479 (x3116 (x1022 x3479 x7013))))
(assert (= (or (and x2124 x8260) (and x8006 x269)) x2067))
(assert (=> (>= 10000 x235) (= (x1388 x235) 0)))
(assert (x8398 34591783479076665047274362116096262703299809091723987870014818727818681087008))
(assert (x4938 x391))
(assert (x4938 x2961))
(assert (x4938 x8119))
(assert (x4938 x4367))
(assert (x4938 x7846))
(assert (x4938 x7437))
(assert (= (x6340 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)) x2730))
(assert (= x4872 (x555 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872))))
(assert (=> (<= x3063 10000) (= (x1388 x3063) 0)))
(assert (x4938 x350))
(assert (x4938 x6306))
(assert (= x5518 (and (not x8465) x5290)))
(assert (x4938 x4727))
(assert (x4938 x6188))
(assert (x4938 x6999))
(assert (x4938 x5835))
(assert (= x6480 (and x7322 (not x6561))))
(assert (= (and x4173 x8201) x3031))
(assert (x4938 x2909))
(assert (= 0 (x1388 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (x4938 x297))
(assert (x4938 x1617))
(assert (not (x8398 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616))))
(assert (= x3510 (or x2937 x2862 x7049 x4988 x2329)))
(assert (x4938 x1794))
(assert (=> (<= x8369 10000) (= 0 (x1388 x8369))))
(assert (= (=> (and (= x5666 (= 0 x813)) (= x813 (x5181 516))) (and (=> (and (and (= x4932 (< (ite (= 0 x3447) 10000 x3447) x6140)) (= (x1915 354) x6140) (= x4444 (x3407 64 x7048 5)) (= x3447 (x2047 x4444))) (not x5666)) (and (=> (and (not x4932) (and (= (x7100 (+ 32 x4153)) x8216) (= (= 0 x1478) x4789) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6399) x1499) (= (x2230 (- x5101 x2691)) x8258) (= x2665 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1822)) (= x1625 (x7100 (+ 32 x2691))) (= (x7100 (+ x4840 32)) x1598) (= (x7100 (+ x5101 32)) x4853) (= (x8177 x3481) x1478) (= x1822 (x7100 (+ x3519 31))) (= x5101 (x7100 (+ x1499 x1598))) (= x2691 (x7100 (+ x834 4))) (= x6399 (x7100 (+ 31 x3600))) (= (x7100 (+ x5777 x4533)) x4840) (= x3477 (x2230 (- x3129 x834))) (= (x7100 (+ x7572 32)) x5777) (= (x7100 (+ x1625 32)) x2488) (= (x5181 516) x743) (= (x7100 (+ x832 32)) x4153) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8007) x4533) (= x7627 (x2230 (- x4840 x2691))) (= x7572 (x7100 (+ 192 x2691))) (= x3600 (x1915 354)) (= (x7100 (+ x4853 x2665)) x3129) (= (x5578 450) x3519) (= (x7100 (+ x743 31)) x8007) (= x832 (x7100 (+ 32 x2488))))) (and (=> (and (not x4789) (and (= x956 (<= x1714 x7980)) (= x7980 (x5769 x1579)) (= (and x956 x3720) x3358) (= (x5769 x3481) x6650) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1714 x6650)) x3720))) (and (=> (and (and (= x5897 x1254) (= 0 x6693) (= x5241 x6637) (= x3142 x5291) (= x5900 x6420)) (not x3358)) x6062) (=> (and x3358 (and (= 3313512704 x6303) (>= x1077 1) (= x350 x7627) (= (- x5096 x1714) x3724) (<= 420 x5816) (= x3386 x1579) (= x7048 x36) (= x2610 (or (> (- x5816 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< (- x5816 4) 192) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x5816 4)) true)))) (= (x8177 x7734) x1077) (<= x791 127) (= (x2017 x3481) x4487) (= x5816 x3477) (= false x2053) (= x3484 x1962) (>= x3477 420) (= (x5769 x1579) x5096) (= x4827 x8258) (= (+ x1714 x4487) x1962) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1962) (= x740 0) (< (+ x1714 x4487) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= false x4830) (= x1831 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= x7901 (= (x2965 196) x743)) (= x2939 192) (<= x791 127) x7901 (<= 0 x1962))) (and (=> x2610 x4516) (=> (and (= x6210 true) (not x2610)) (and (=> (not x6210) x4516) (=> (and x6210 (= (and (< 227 x5816) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5816))) x6025)) (and (=> (not x6025) x5722) (=> (and (and (= x2506 (x1217 196)) (= (< 18446744073709551615 x2506) x1932)) x6025) (and (=> x1932 x3568) (=> (and (not x1932) (and (= x7495 (< x5816 x3345)) (= (x7100 (+ 228 x2506)) x3345))) (and (=> (and (not x7495) (= x6232 (> x7627 18446744073709551615))) (and (=> (and (not x6232) (and (= x6262 (x7100 (+ x1489 31))) (= x1489 (x7100 (+ 4 x7627))) (= x8480 (or (and (= (<= x6262 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x5816 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x5816 x6262)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6262) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5816)))))) (and (=> (and x8480 (and (= x1026 (< 18446744073709551615 x925)) (= (x1217 x1489) x925))) (and (=> x1026 x3568) (=> (and (not x1026) (and (= (x7100 (+ x925 x6366)) x1632) (= (> x1632 x5816) x3165) (= x6366 (x7100 (+ 32 x1489))))) (and (=> (and (= (< 18446744073709551615 x8258) x7022) (not x3165)) (and (=> x7022 x4516) (=> (and (and (= (or (and (> x6808 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x5816 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5816) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6808)) (> x5816 x6808))) x4453) (= (x7100 (+ 4 x8258)) x2011) (= x6808 (x7100 (+ 31 x2011)))) (not x7022)) (and (=> (not x4453) x5722) (=> (and (and (= x810 (x1217 x2011)) (= (< 18446744073709551615 x810) x6874)) x4453) (and (=> (and (not x6874) (and (= (< x5816 x2166) x8410) (= x3637 (x7100 (+ x2011 32))) (= x2166 (x7100 (+ x810 x3637))))) (and (=> x8410 x963) (=> (and (not x8410) (and (= x5291 x4501) (= x6420 x7853) (= x7793 1) (= x3409 x5897) (= x6243 x5241))) x4694))) (=> x6874 x3568))))))) (=> x3165 x963))))) (=> (not x8480) x5722))) (=> x6232 x4516))) (=> x7495 x963))))))))))))) (=> (and x4789 (and (= x529 false) (= x3645 0) (= true x4990))) x4804))) (=> (and (and (= x3645 100) (= true x2145) (= (x7100 (+ x834 4)) x7872) (= false x7758) (= x4871 (x7100 (+ x7872 32))) (= x1544 (x7100 (+ 32 x4871)))) x4932) x4804))) (=> (and (and (= (x7100 (+ 32 x1659)) x8227) (= (x7100 (+ x865 32)) x1659) (= false x8212) (= x7555 true) (= (x7100 (+ 32 x5300)) x865) (= (x7100 (+ 4 x834)) x5300) (= 132 x3645)) x5666) x4804))) x6646))
(assert (x4938 x130))
(assert (x4938 x1480))
(assert (= (and x254 (not x7299)) x421))
(assert (= (x1388 (x3407 x206 x6743 x7390)) (x3407 x206 x6743 x7390)))
(assert (= (x701 (x3407 64 x3833 36)) 36))
(assert (= x7341 (or x897 x4622)))
(assert (x4938 x4840))
(assert (x4938 x8104))
(assert (x4938 x6522))
(assert (x4938 x7647))
(assert (= x5619 (and x6034 (not x7962))))
(assert (= 0 (x1388 14609135308879574245051756109060786979925523914932377087145621868633940557824)))
(assert (= x2761 (and x7224 x6074)))
(assert (= x2146 (and x2116 x7368)))
(assert (x4938 x3108))
(assert (= (or x3324 x780) x6907))
(assert (= x3352 (=> (and (= (x8177 x685) x2670) (= x2977 (= 0 x2670)) (= 128 x3939) (= x6165 (x2230 (- x817 128)))) (and (=> (and (and (= x8178 x3900) (= 0 x5635) (= 2 x3762) (= false x6432) (= x5545 x2926) (= 0 x1553) (= true x3693) (= x4984 x6839)) x2977) x2407) (=> (and (and (= x5057 x3252) (= (> x5080 18446744073709551615) x1549) x6311 (= x5080 (x2115 132)) (<= 1 x3771) (>= x6165 196) (>= x3304 196) (= x7989 x1467) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x965) (= x8534 x6590) (= (= x6477 (x6267 132)) x6311) (= x1643 1722637450) (>= 127 x7818) (<= x7818 127) (= x3304 x6165) (= 128 x2272) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3304) (= x5785 false) (= false x1618) (= x3771 (x8177 x1579)) (<= x6165 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (not x2977)) (and (=> (and (and (= 164 x5549) (= x5893 (x7100 (+ x5080 164))) (= (> x5893 x3304) x5247)) (not x1549)) (and (=> x5247 x7811) (=> (and (not x5247) (and (= x5771 (+ x8534 4)) (= (> x3304 (+ 31 x5771)) x5925))) (and (=> (and (and (= x3443 false) (= 0 x108) (= true x7090)) (not x5925)) x5264) (=> (and (and (= x4471 (x2115 x5771)) (= x2062 (> x4471 18446744073709551615))) x5925) (and (=> x2062 x5338) (=> (and (not x2062) (and (= (> x6556 x3304) x7237) (= x6556 (x7100 (+ x4471 x3948))) (= (+ 32 x5771) x3948))) (and (=> (and (and (= x2045 (= x1579 x3521)) (or (and (not x2045) (and (= x5135 true) (= 132 x108) (= x3096 false))) (and x2045 (and (> x6255 x8091) (= x7216 false) (or (>= 31 x885) (>= x885 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= x6624 (* 32 x2183)) (= x8091 (+ x6624 160)) (= true x1075) (= (div x7797 32) x3086) (= (x7100 (+ x2917 x8091)) x6255) (= x2917 (x7100 (+ x4213 32))) (= x5175 (x7100 (+ 32 x8091))) (= x7888 128) (= x2183 (div x93 32)) (<= 161 x6255) (= (x7100 (+ x5175 x4471)) x5100) (= (* x3086 32) x4213) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x5080) (<= x5080 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= x108 0) (= (x2639 x8091) x885) (= x7797 (x7100 (+ x4471 31))) (= x93 (x7100 (+ x5080 31))))))) (not x7237)) x5264) (=> x7237 x7811))))))))) (=> x1549 x5338)))))))
(assert (= (x6568 (x1896 x3224 x6110 x1045 x8162 x2618)) x2618))
(assert (= (and x5870 x6249) x6599))
(assert (= (x1388 100000) 0))
(assert (=> (>= 10000 x6030) (= (x1388 x6030) 0)))
(assert (= (x6568 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) x668))
(assert (= (x6340 (x1896 x2726 x7749 x2789 x3787 x3437)) x3787))
(assert (x4938 x2873))
(assert (=> (<= x6825 10000) (= (x1388 x6825) 0)))
(assert (x4938 x4201))
(assert (= x7767 (and x56 x1098)))
(assert (= x7199 (x3116 (x3407 x7199 x226 x4057))))
(assert (x4938 x5559))
(assert (x4938 x4486))
(assert (x4938 x4394))
(assert (x4938 x8077))
(assert (= (x3407 64 x1232 (ite (>= 32 x6541) x1119 (ite (<= x6541 64) x7379 (ite (>= 96 x6541) x7801 (ite (>= 128 x6541) x8520 (ite (<= x6541 160) x7562 (ite (>= 192 x6541) x5591 x6376))))))) (x1388 (x3407 64 x1232 (ite (<= x6541 32) x1119 (ite (<= x6541 64) x7379 (ite (<= x6541 96) x7801 (ite (<= x6541 128) x8520 (ite (<= x6541 160) x7562 (ite (>= 192 x6541) x5591 x6376))))))))))
(assert (=> (<= x2703 10000) (= (x1388 x2703) 0)))
(assert (x4938 x2139))
(assert (x4938 x268))
(assert (= (=> (and (= x2667 x5326) (= x7822 x2463) (= x2500 x1197) (= x343 x3093)) x2453) x681))
(assert (x4938 x8215))
(assert (x4938 x8065))
(assert (x4938 x989))
(assert (= (x6340 (x7622 x4159 x3114 x2452 x1679 x3341 x8514)) x1679))
(assert (= (=> (= (+ x7925 292) x2930) x6689) x3426))
(assert (x4938 x2535))
(assert (= (=> (= x5453 (> x2886 0)) (and (=> (and x5453 (and (or (and x4044 (and (and (= x2353 (x8254 x6521)) (= (> x6200 32) x4915)) (or (and (and (or (and x2813 (and (and (= x7598 (< 96 x6200)) (= (x7100 (+ x4734 64)) x995) (= x6307 (x8263 x7984)) (= (x7100 (+ 64 x6521)) x7984)) (or (and x7598 (and (= x7532 (x854 x5782)) (= (x7100 (+ 96 x6521)) x5782) (<= x6200 128) (= x3719 (x7100 (+ x4734 96))))) (not x7598)))) (not x2813)) (and (= (x7100 (+ x6521 32)) x3234) (= (> x6200 64) x2813) (= x6466 (x3737 x3234)) (= (x7100 (+ x4734 32)) x5498))) x4915) (not x4915)))) (not x4044)) (and (= (x7100 (+ x4400 x6521)) x4245) (= (x7100 (+ 31 x5222)) x1320) (= x4030 (x7100 (+ 31 x4400))) (= x4667 (div x4030 32)) (< x8498 x7392) (= (* x4667 32) x1079) (> x8498 x3489) (= x4335 150) (= (x7100 (+ 36 x7392)) x8476) (>= x7392 2) (= (* x2082 32) x1546) (= x5878 (x7100 (+ 32 x8498))) (= x8498 (x7100 (+ x2118 x3489))) (= x2082 (div x1320 32)) (= (x7100 (+ 32 x1079)) x2118) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8498) (= x7392 (x7100 (+ x4079 x8498))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3489) (= (x7100 (+ x8476 32)) x8301) (= x6181 (x7100 (+ x8476 128))) (= x5761 (x7100 (+ x5878 x5222))) (= (x7100 (+ x1546 32)) x4079) (<= 1 x8498) (= x6521 (x7100 (+ 32 x3489))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x3489) (= (< 0 x6200) x4044) (= (x7100 (+ x6181 32)) x4734) (<= x3489 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x6200 (x1989 x3489))))) x3773) (=> (and (not x5453) (and (= true x303) (= x8262 (x7100 (+ 4 x3489))) (= false x1924) (= x451 (x7100 (+ 32 x8262))) (= (x7100 (+ 32 x451)) x4318) (= x6254 (x7100 (+ 32 x4318))) (= x3814 132))) x1378))) x5337))
(assert (x4938 x4098))
(assert (=> (<= x4465 10000) (= (x1388 x4465) 0)))
(assert (=> (<= x4139 10000) (= (x1388 x4139) 0)))
(assert (= x7025 (and (not x7209) x2694)))
(assert (x4938 x7104))
(assert (not (x8398 (x3407 64 x6604 12))))
(assert (< 10000 (x7622 x6541 x4268 x7403 x8120 x4393 x5428)))
(assert (=> (>= 10000 x2103) (= (x1388 x2103) 0)))
(assert (x4938 x8396))
(assert (x4938 x2247))
(assert (< (x1022 32 103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5753))
(assert (= x6481 (and (not x3748) x3781)))
(assert (=> (>= 10000 x3717) (= 0 (x1388 x3717))))
(assert (x4938 x1895))
(assert (x4938 x5732))
(assert (x4938 x6672))
(assert (= x6144 (and (not x1135) x612)))
(assert (=> (>= 10000 x2292) (= 0 (x1388 x2292))))
(assert (x150 x4259))
(assert (= (x701 (x3407 64 x2019 12)) 12))
(assert (= (x701 (x3407 64 x8409 2)) 2))
(assert (= x6029 (and (not x4659) x1866)))
(assert (< (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1388 (x3407 64 x26 (ite (<= x2119 32) x5997 (ite (>= 64 x2119) x1207 (ite (>= 96 x2119) x568 (ite (<= x2119 128) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250)))))))) (x3407 64 x26 (ite (<= x2119 32) x5997 (ite (<= x2119 64) x1207 (ite (<= x2119 96) x568 (ite (<= x2119 128) x6700 (ite (>= 160 x2119) x285 (ite (<= x2119 192) x1309 x2250)))))))))
(assert (x4938 x6107))
(assert (x4938 x7575))
(assert (x4938 x7736))
(assert (x4938 x4533))
(assert (= (x1388 (x3407 64 x1202 100)) (x3407 64 x1202 100)))
(assert (x4938 x1189))
(assert (x4938 x6603))
(assert (x4938 x7176))
(assert (= (x1388 1313998243) 0))
(assert (x4938 x6494))
(assert (x4938 x7580))
(assert (x4938 x4182))
(assert (= x6594 (=> (and (= x5236 x2561) (= false x720) (= x1428 x4375) (= x1428 true) (= x1839 x7400) (= true x5612) (= false x2299) (= x8210 x5735)) x5964)))
(assert (= (and x6830 x6398) x3965))
(assert (= x6522 (x6340 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (= (and (not x2823) x7481) x8230))
(assert (x4938 x2327))
(assert (x4938 x7566))
(assert (x4938 x3704))
(assert (x4938 x7275))
(assert (x4938 x671))
(assert (x4938 x7015))
(assert (= x833 (x3647 (x1022 x4400 x833))))
(assert (= x7742 (and x7738 x2747)))
(assert (not (x8398 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352))))
(assert (x4938 x406))
(assert (x4938 x6361))
(assert (x4938 x1268))
(assert (x150 x158))
(assert (x4938 x6984))
(assert (=> (>= 10000 x5985) (= (x1388 x5985) 0)))
(assert (= x2302 (or x8401 x5929)))
(assert (= (x701 (x3407 x3651 x633 x7276)) x7276))
(assert (x4938 x2001))
(assert (not (x8398 (x3407 x3224 x5218 x6215))))
(assert (= (and x6221 x8245) x7759))
(assert (=> (<= x7964 10000) (= 0 (x1388 x7964))))
(assert (x4938 x5225))
(assert (= x4385 (and x5624 x2120)))
(assert (x4938 x3829))
(assert (=> (<= x6672 10000) (= (x1388 x6672) 0)))
(assert (= (x3647 (x1896 x3224 x6110 x1045 x8162 x2618)) x6110))
(assert (not (x8398 (x1022 x3479 x7013))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x6541 x6699 x7203 x7803 x4524)))
(assert (x4938 x3890))
(assert (= (x701 (x1896 x1389 x4433 x5950 x5294 x6030)) x5950))
(assert (x4938 x2950))
(assert (x4938 x7851))
(assert (< (x3407 64 x8340 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8276))
(assert (x4938 x2737))
(assert (= x8139 (x701 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265))))
(assert (= x5870 (and x4963 x3014)))
(assert (x4938 x108))
(assert (= (and x1492 (not x2149)) x207))
(assert (x4938 x5005))
(assert (x4938 x2171))
(assert (= (and x4116 x2421) x7295))
(assert (x4938 x4925))
(assert (=> (<= x910 10000) (= 0 (x1388 x910))))
(assert (= (or (and x1663 x2821) (and x7383 x7551) (and x316 x4547)) x7125))
(assert (x4938 x7943))
(assert (= x1093 (and x3151 x3592)))
(assert (=> (<= x1599 10000) (= (x1388 x1599) 0)))
(assert (=> (<= x2108 10000) (= 0 (x1388 x2108))))
(assert (x4938 x457))
(assert (not (x8398 (x7622 x7199 x6076 x3424 x7623 x299 x4117))))
(assert (= x2081 (and x8186 x1466)))
(assert (= (and x5933 x3901) x4574))
(assert (= (and x539 (not x2295)) x2329))
(assert (x4938 x5764))
(assert (= x7976 (=> (and (and (= (= x4598 x2740) x7356) (= (x165 128) x2740)) (or (and (and (= x5880 (ite (> x4460 0) 1 0)) (= x4460 (x165 128))) x7356) (and (not x7356) (= (ite x7356 1 0) x5880)))) x5334)))
(assert (> (x7622 x5478 x3146 x5426 x4785 x7964 x5820) 10000))
(assert (=> (<= x2366 10000) (= 0 (x1388 x2366))))
(assert (x4938 x8351))
(assert (< 10000 (x3407 64 x8340 6)))
(assert (x4938 x6581))
(assert (x4938 x6935))
(assert (x4938 x6207))
(assert (= x1397 (=> (= (+ 292 x620) x8562) x1524)))
(assert (x4938 x149))
(assert (x4938 x7818))
(assert (=> (>= 10000 x5037) (= 0 (x1388 x5037))))
(assert (x4938 x7468))
(assert (x4938 x4303))
(assert (x4938 x3900))
(assert (x4938 x6702))
(assert (=> (>= 10000 x3146) (= 0 (x1388 x3146))))
(assert (x4938 x5385))
(assert (=> (<= x6325 10000) (= 0 (x1388 x6325))))
(assert (x4938 x8047))
(assert (x4938 x8404))
(assert (x4938 x5512))
(assert (x4938 x1711))
(assert (x4938 x1805))
(assert (= (and x2225 x1807) x3268))
(assert (x4938 x3021))
(assert (= x5965 (and x774 (not x8105))))
(assert (=> (<= x3479 10000) (= 0 (x1388 x3479))))
(assert (x4938 x7101))
(assert (x4938 x214))
(assert (=> (<= x1445 10000) (= 0 (x1388 x1445))))
(assert (= (and (not x6638) x636) x3100))
(assert (= x7229 (and (not x6221) x8245)))
(assert (= x1389 (x3116 (x7622 x1389 x6653 x1971 x4729 x3159 x1076))))
(assert (= (x555 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) x3890))
(assert (x4938 x7471))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (< 10000 (x7087 x4400 x8390 x5866 x613)))
(assert (= (x1388 1461501637330902918203684832716283019655932542975) 0))
(assert (=> (<= x960 10000) (= 0 (x1388 x960))))
(assert (= x3277 (and x6593 x2788)))
(assert (= x6023 (x1688 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (x4938 x7776))
(assert (= (x3407 x6213 x3081 x5009) (x1388 (x3407 x6213 x3081 x5009))))
(assert (x4938 x8498))
(assert (x4938 x4323))
(assert (x4938 x5426))
(assert (x4938 x4200))
(assert (x4938 x5896))
(assert (= x4486 (x6568 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (not (x8398 (x3407 64 x1680 12))))
(assert (x4938 x4684))
(assert (= (=> (and (or (not x2748) x2748) (= (= x7471 0) x2748)) x1982) x8246))
(assert (x4938 x8562))
(assert (= (x701 (x7087 x2454 x2103 x342 x6680)) x342))
(assert (x4938 x2286))
(assert (not (x8398 (x1022 x1389 x5939))))
(assert (x4938 x3520))
(assert (x4938 x2632))
(assert (= (and x5708 x2906) x479))
(assert (= (=> (and (= x2990 (x5109 x5051)) (= (>= x2990 x8023) x4439) (<= 1 x1579) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4288) (<= x7220 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x7734 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x6744) (<= x7302 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7734 x6744) (<= x2652 1461501637330902918203684832716283019655932542975) (<= x2071 1461501637330902918203684832716283019655932542975) (<= 0 x7220) (<= x1579 1461501637330902918203684832716283019655932542975) (= x6955 x2140) (<= x8023 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2289 (< 0 (x8177 x4187))) (<= 1 x6744) x3981 (>= x289 0) x2289 (>= x1563 0) (<= 1 x4187) (>= x2652 0) (<= x4187 1461501637330902918203684832716283019655932542975) (>= x6656 0) (= x2071 x1579) (= x3981 (> (x8177 x3521) 0)) (<= x1563 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3521) (>= x7734 1) (<= 0 x1557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1375) (not (= x3521 x1579)) x5958 (<= 1 x3521) (not (= x4187 x1579)) (<= 0 x1375) (>= x4288 0) (not (= x4187 x7734)) (>= x8023 0) (>= x7302 0) (not (= x7734 x1579)) (>= 1461501637330902918203684832716283019655932542975 x6656) (not (= x3521 x4187)) (= x5051 x6656) (= x3674 (< 0 (x8177 x1579))) x3674 (= (< 0 (x8177 x7734)) x5958) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x289) (not (= x3521 x7734)) (= x2022 0) (>= x2071 1) (= x3105 0)) (and (=> (and x4439 (and (= x4953 (x5109 x2029)) (< (+ x2658 x4956) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x6656 x2029) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5413) (= x5413 (+ x2658 x4956)) (= x2551 68) (= x1481 2001815235) (= (x8177 x1579) x7009) (= x4956 x8023) (= false x5779) (= x5413 x945) (= 0 x7826) (= x5936 (- x4953 x4956)) (= x2954 x3078) (= false x4532) (= x2140 x3078) (>= x7009 1) (<= x3659 127) (= x8568 x6656) (= (= 1 x2005) x1085) (= false x7397) (= x3765 0) (>= x5413 0) (= x2658 (x2437 x1579)) (>= 127 x3659))) (and (=> (and (not x1085) (and (= x7981 x1839) (= x1238 x2561) (= x8210 x3353))) x6594) (=> (and (and (or (and x2032 (and (= x5529 (ite (not (= x8568 x6978)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x6978))) (and (not x2032) (= (ite x2032 1 0) x5529))) (and (= 2 x6447) (= x2032 (not (= x1579 x8568))))) x1085) x3834))) (=> (and (not x4439) (and (= x7981 x7400) (= x4088 true) (= x6752 false) (= x4088 x4375) (= x5236 x1238) (= x3353 x5735))) x5964))) x7044))
(assert (= (x1388 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)) (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)))
(assert (= x7780 (x701 (x1896 x4400 x4441 x7780 x8359 x6150))))
(assert (= x7336 (x701 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)))
(assert (x4938 x4704))
(assert (= x1059 (x6568 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499))))
(assert (=> (<= x4598 10000) (= (x1388 x4598) 0)))
(assert (x4938 x1140))
(assert (x4938 x5084))
(assert (= (x7087 x3224 x8081 x5985 x4105) (x1388 (x7087 x3224 x8081 x5985 x4105))))
(assert (x4938 x571))
(assert (=> (>= 10000 x5184) (= (x1388 x5184) 0)))
(assert (= x3791 (and x4326 (not x520))))
(assert (x4938 x7239))
(assert (=> (<= x2953 10000) (= 0 (x1388 x2953))))
(assert (= x8092 (=> (= (= 0 x6374) x3713) (and (=> (and (and (= false x5292) (= x1216 0) (= true x1987)) x3713) x5369) (=> (and (and (= x3973 x5214) (= x5016 1) (= x4629 x1999) (= x358 0) (= x6268 x8247) (= x4602 x1103)) (not x3713)) x2194)))))
(assert (x4938 x6013))
(assert (x4938 x138))
(assert (= (and x7787 x4406) x4816))
(assert (x4938 x1550))
(assert (x4938 x8529))
(assert (= x5985 (x701 (x7087 x3224 x8081 x5985 x4105))))
(assert (= (x3647 (x3407 64 x7048 3)) x7048))
(assert (= x5720 (and (not x4173) x8201)))
(assert (=> (<= x7270 10000) (= (x1388 x7270) 0)))
(assert (not (x8398 (x7087 x7277 x7748 x160 x2415))))
(assert (= x2773 (=> (= (+ x6439 x3490) x3382) x1418)))
(assert (= x5478 (x3116 (x7087 x5478 x7722 x8330 x1504))))
(assert (x4938 x2464))
(assert (= (and x6905 x6726) x7890))
(assert (= x328 (and (not x5812) x716)))
(assert (x4938 x6447))
(assert (x2131 x5098))
(assert (x4938 x598))
(assert (= x7951 (and x5453 x6787)))
(assert (x150 x6988))
(assert (x4938 x7996))
(assert (x4938 x218))
(assert (x150 x7490))
(assert (= (x3647 (x3407 64 x6717 3)) x6717))
(assert (x4938 x206))
(assert (= (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536) (x1388 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (= (x701 (x3407 x3989 x6760 x1411)) x1411))
(assert (= x2533 (x6340 (x7087 x6213 x8482 x5120 x2533))))
(assert (= (x6340 (x7622 x2454 x7378 x3190 x5182 x1064 x4091)) x5182))
(assert (= (x3647 (x3407 x2726 x235 x5998)) x235))
(assert (not (x8398 (x1022 x3989 x8396))))
(assert (= (=> (= x6571 (= x7471 0)) (and (=> (and (and (= x8178 x3900) (= x1553 0) (= x5635 x7657) (= true x6866) (= x2926 x5545) (= x4984 x6839) (= false x1967) (= 2 x6468)) x6571) x2407) (=> (and (and (= x1899 x1257) (= x2620 x1056) (= x8043 x3664) (= x1900 x2321)) (not x6571)) x5862))) x1982))
(assert (x4938 x3445))
(assert (x4938 x4953))
(assert (x4938 x4066))
(assert (x4938 x426))
(assert (= x4113 (and (not x4932) x3308)))
(assert (= (x3116 (x3407 64 1 x5792)) 64))
(assert (= (x1388 (x3407 64 x7048 5)) (x3407 64 x7048 5)))
(assert (= (x6568 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) x5867))
(assert (x4938 x3548))
(assert (x4938 x6962))
(assert (=> (<= x3164 10000) (= 0 (x1388 x3164))))
(assert (=> (>= 10000 x6824) (= 0 (x1388 x6824))))
(assert (x4938 x7394))
(assert (= (or x3417 x2012 x374 x5404 x5028) x6774))
(assert (x4938 x563))
(assert (x4938 x4392))
(assert (= (=> (and (and (> x5541 x5553) (= (< 0 x7269) x2906) (= (x2230 (- x6973 32)) x5302) (= x367 (x4481 x4704)) (= (x8239 x5909) x3021) (<= x4704 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x5553)) (= (x1066 26959946667150639794667015087019630673637144422540572481103610249215 x3021) x5230) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x5553)) (= x5553 (x7100 (+ x2995 x2848))) (= x4826 (x7100 (+ 32 x5553))) (<= x5553 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x5553)) (= (x7100 (+ x4704 32)) x5909) (= x2848 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3591)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x5553) (= (x7100 (+ x5553 192)) x5541) (= x6973 (x2230 (- x5553 x4704))) (= x8468 (x7100 (+ x1832 x2995))) (<= x5553 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3591 (x7100 (+ x1832 31))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4704) (< x4704 x5553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4704) (= x6476 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x5230)) (<= 1 x5553)) (or (and (not x2906) (and (= x7112 x3728) (= x3900 x8457))) (and (and x477 (= x8457 x7651) (= x2790 (= (x4843 x1579) x8104)) (= (x5769 x1579) x7726) (= x477 (>= (x4843 x1579) x7726)) x2790 (= x8104 (x5769 x1579)) (>= 4294967295 x4703) (= x5238 x7112)) x2906))) x8241) x2))
(assert (= x5640 (and (not x3579) x7886)))
(assert (= x1389 (x3116 (x1896 x1389 x4433 x5950 x5294 x6030))))
(assert (x4938 x1482))
(assert (= x5857 (x3116 (x3407 x5857 x3212 x3321))))
(assert (= (or x2785 x8080) x4989))
(assert (x4938 x2658))
(assert (> (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953) 10000))
(assert (= x3829 (x3647 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405))))
(assert (x4938 x1642))
(assert (x4938 x7872))
(assert (not (x8398 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564))))
(assert (=> (>= 10000 x6841) (= (x1388 x6841) 0)))
(assert (= x1419 (and (not x1501) x5619)))
(assert (x4938 x4879))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x5857 x3212 x3321)))
(assert (not (x8398 (x7087 x6541 x7752 x8107 x2402))))
(assert (x4938 x8218))
(assert (not (x8398 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427))))
(assert (=> (>= 10000 x4117) (= 0 (x1388 x4117))))
(assert (x4938 x3514))
(assert (x4938 x2721))
(assert (x8398 50226347614966974677930900640024090345938424853691168920094736542366852710400))
(assert (x4938 x2333))
(assert (=> (>= 10000 x5982) (= (x1388 x5982) 0)))
(assert (x4938 x5267))
(assert (= x6350 (x6568 (x1896 x6088 x2440 x5482 x1969 x6350))))
(assert (x4938 x3205))
(assert (x704 x3272))
(assert (= (x6340 (x1896 x5857 x4592 x7294 x5171 x2027)) x5171))
(assert (x4938 x4494))
(assert (x4938 x4118))
(assert (x704 x4885))
(assert (x4938 x7717))
(assert (=> (>= 10000 x79) (= (x1388 x79) 0)))
(assert (= x7053 (and (not x6846) x596)))
(assert (x4938 x8199))
(assert (x8398 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (x4938 x1698))
(assert (not (x8398 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (x4938 x996))
(assert (x4938 x4814))
(assert (x4938 x3089))
(assert (not (x8398 (x3407 64 x7195 12))))
(assert (= (x1388 (+ x5755 1)) (x1388 x5755)))
(assert (x4938 x5113))
(assert (x4938 x324))
(assert (=> (>= 10000 x4433) (= (x1388 x4433) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x5857 x4592 x7294 x5171 x2027)))
(assert (x4938 x6420))
(assert (x4938 x1725))
(assert (x4938 x1056))
(assert (> (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427) 10000))
(assert (= x1485 (x701 (x3407 64 1 x1485))))
(assert (x150 x1107))
(assert (x4938 x3597))
(assert (=> (>= 10000 x8085) (= 0 (x1388 x8085))))
(assert (x4938 x1446))
(assert (= (=> (and (= 0 x6168) (= x7374 x307) (= x4368 x4010) (= x6717 x5099) (= x2331 x6291) (= x1991 x138) (= x621 x1927) (= x2126 x6283) (= x8267 x4066) (= x584 x7078) (= x5801 x2133) (= x6722 2) (= x4221 false) (= x3872 true) (= x6331 x5098) (= x661 x6676) (= x2850 x2398)) x5672) x6027))
(assert (x4938 x7532))
(assert (x4938 x4674))
(assert (= (x701 (x7622 x5857 x6884 x2985 x8141 x159 x2846)) x2985))
(assert (x4938 x5401))
(assert (x4938 x4110))
(assert (< 10000 (x1022 x4400 x833)))
(assert (x4938 x7034))
(assert (=> (>= 10000 x2869) (= 0 (x1388 x2869))))
(assert (x4938 x1586))
(assert (x4938 x6827))
(assert (x4938 x6699))
(assert (x4938 x4401))
(assert (x4938 x517))
(assert (> (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138) 10000))
(assert (x150 1))
(assert (< (x3407 64 x4889 (ite (>= 32 x3224) x4620 (ite (>= 64 x3224) x3986 (ite (>= 96 x3224) x7579 (ite (>= 128 x3224) x8321 (ite (>= 160 x3224) x8325 (ite (<= x3224 192) x4873 x2824))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x701 (x7622 x206 x130 x7601 x4255 x4343 x6882)) x7601))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x4159 x8094 x3597 x5628)))
(assert (not (x8398 (x1022 x3651 x1954))))
(assert (x4938 x6325))
(assert (=> (>= 10000 x5939) (= 0 (x1388 x5939))))
(assert (= x2123 (and x6204 x4756)))
(assert (< 10000 (x3407 x2119 x4246 x8011)))
(assert (x4938 x5861))
(assert (=> (<= x6110 10000) (= 0 (x1388 x6110))))
(assert (x150 x8533))
(assert (x4938 x323))
(assert (= x3360 (x6340 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016))))
(assert (= x1206 (and x1938 (not x5019))))
(assert (x4938 x743))
(assert (= x4159 (x3116 (x3407 x4159 x2229 x5804))))
(assert (x4938 x6745))
(assert (x4938 x2616))
(assert (x4938 x1104))
(assert (= x2454 (x3116 (x1896 x2454 x4147 x8278 x3885 x5310))))
(assert (= x837 (or x5153 x3103 x8036)))
(assert (= (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563) (x1388 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (= (x701 (x7087 x5478 x7722 x8330 x1504)) x8330))
(assert (= x4563 (or x469 x544)))
(assert (x4938 x4888))
(assert (x4938 x4010))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x3224 x2213)))
(assert (= x6305 (and x4448 (not x5360))))
(assert (= (and (not x6134) x6472) x4988))
(assert (=> (>= 10000 x2647) (= (x1388 x2647) 0)))
(assert (= (x1388 35477284059277649309253622239531857712935939406416048698883813673932370764389) 0))
(assert (x4938 x7941))
(assert (= x8285 (and (not x2165) x1724)))
(assert (x4938 x5274))
(assert (= (or x3629 x896 x8505 (and x5562 x2872) x7125 (and x1893 x3141) x6156) x7763))
(assert (x4938 x5867))
(assert (= x1070 (and x394 x6193)))
(assert (= x6463 (=> (and (= x138 x1009) (= x6283 x321) (= x7561 2) (= x6649 x584) (= x6717 x3846) (= x4368 x6256) (= x5313 x340) (= x5098 x6904) (= x6306 (x1066 255 x7479)) (= x8267 x2169) (= 0 x5795) (= x2331 x3807) (= x2334 x6306) (= x7374 x173) (= x621 x3054) (= x2850 x7661) (= x5801 x426)) x4897)))
(assert (x4938 x7793))
(assert (= x6423 (x701 (x7622 x7277 x828 x6423 x4655 x7851 x163))))
(assert (= (x5419 (x7622 x6541 x4268 x7403 x8120 x4393 x5428)) x5428))
(assert (= (x3647 (x1022 x7199 x8191)) x8191))
(assert (x4938 x1643))
(assert (= (and x7057 (not x209)) x8186))
(assert (x4938 x7940))
(assert (= x3007 (x701 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128))))
(assert (x150 x502))
(assert (= (x3647 (x7622 x7199 x6076 x3424 x7623 x299 x4117)) x6076))
(assert (< 10000 (x7087 x5857 x604 x2406 x7313)))
(assert (x4938 x6110))
(assert (= (=> (and (= x4867 (x2230 (- x3382 128))) (= (x8177 x685) x8049) (= 128 x11) (= x7892 (= x8049 0))) (and (=> (and (and (= (<= x1352 x6072) x330) (= (and x330 x6837) x7787) (= x6072 (x5769 x3521)) (= (x5769 x685) x3257) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1352 x3257)) x6837)) (not x7892)) (and (=> (and (and (= x8360 (> x565 18446744073709551615)) (>= x4867 196) (= x3608 false) (>= x4973 0) (<= x7021 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x259 127) (= x4867 x7021) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4973) (= x4706 x3887) (= 128 x7931) (= (= (x2912 132) x4286) x5881) (<= 196 x7021) (= x7575 (x8177 x1579)) (= x848 false) (= x4861 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x7534 x8037) (= x5753 x4973) (= x1279 (x3359 x685)) (= x3419 (x5769 x3521)) (= (x2455 132) x565) (= (- x3419 x1352) x244) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4867) (= x4889 x2139) x5881 (= x59 3521034783) (>= x7575 1) (= x4973 (+ x1279 x1352)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1352 x1279)) (<= x259 127)) x7787) (and (=> (and (and (= x4179 (x7100 (+ x565 164))) (= 164 x8354) (= x5103 (> x4179 x7021))) (not x8360)) (and (=> x5103 x3046) (=> (and (and (= (> x7021 (+ x7222 31)) x7577) (= x7222 (+ x7534 4))) (not x5103)) (and (=> (and x7577 (and (= (> x171 18446744073709551615) x349) (= (x2455 x7222) x171))) (and (=> x349 x5952) (=> (and (not x349) (and (= x5899 (> x4712 x7021)) (= x4712 (x7100 (+ x171 x2530))) (= x2530 (+ 32 x7222)))) (and (=> x5899 x3046) (=> (and (not x5899) (and (and (= (x5595 128) x2723) (<= 32 x3989) (= (x5595 160) x1411) (= x2199 (x5595 128)) (= x1267 (x1896 x4809 x2199 x4831 x3620 x4599)) (= x6918 (x5595 192)) (= (x5595 160) x2869) (= x6760 (x5595 128)) (= x7177 (x5595 224)) (= (x3407 x3989 x6760 x1411) x1013) (= x7336 (x5595 160)) (= (x3211 x7581) x3309) (= x4627 (x5595 192)) (= (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427) x6233) (= x4837 (x7100 (+ x565 128))) (<= x3989 224) (= (x5595 128) x5507) (= (x5595 160) x6000) (= x1858 (x5595 128)) (= (x3407 64 x4706 7) x2316) (= x5832 (x5595 160)) (= (x7087 x3989 x5981 x1922 x4627) x8488) (= x3089 (x7100 (+ 32 x4837))) (= x223 (x5595 256)) (= (x5595 192) x3620) (= x5967 (x7087 x4809 x1858 x5832 x2909)) (= x5184 (x5595 128)) (= x591 (x5595 160)) (= (x5595 192) x7436) (= (x5595 160) x1922) (= (x5595 256) x5982) (= x449 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) (= (x5595 224) x7076) (= x3158 (x3407 x4809 x2723 x5385)) (= x2714 (x5595 192)) (= (x5595 160) x5385) (= (x5595 160) x4831) (= x7933 (x5595 128)) (= (x5595 320) x4872) (= x522 (x4958 0)) (= (x5595 288) x5427) (= (x5595 288) x5647) (= x7028 (x1896 x3989 x7933 x2869 x5737 x214)) (= (x5595 192) x4925) (= x8507 (x5595 128)) (= x3063 (x5595 128)) (= x2981 (x5595 128)) (= x1041 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) (= (x1022 x4809 x5184) x6120) (= x214 (x5595 224)) (= (x7622 x4809 x5507 x591 x4925 x8524 x223) x2468) (= x8524 (x5595 224)) (= x6214 (x5595 256)) (= (x7622 x3989 x2981 x6000 x7436 x7177 x1427) x801) (= (x5595 256) x1427) (= (x5595 192) x5737) (= (ite (= x4809 0) x522 (ite (>= 32 x4809) x6120 (ite (<= x4809 64) x3158 (ite (>= 96 x4809) x5967 (ite (>= 128 x4809) x1267 (ite (>= 160 x4809) x2468 x1041)))))) x5631) (= x2535 (x5595 128)) (= x1394 (x7100 (+ x565 128))) (= (x5595 160) x2083) (= x6124 (x5595 192)) (= x4599 (x5595 224)) (= x2305 (x5595 256)) (= x6516 (x5595 224)) (= (= x3309 0) x7536) (= x8396 (x5595 128)) (= (x5595 288) x1291) (= x6832 (x5595 224)) (= (x2230 (- x3089 128)) x3989) (= x5815 (x5595 160)) (= x5981 (x5595 128)) (= (- x3989 32) x4809) (= x2909 (x5595 192)) (= x2070 (x1022 x3989 x8396)) (= (x3407 64 x4889 (ite (<= x3989 32) x2070 (ite (>= 64 x3989) x1013 (ite (>= 96 x3989) x8488 (ite (>= 128 x3989) x7028 (ite (>= 160 x3989) x801 (ite (>= 192 x3989) x6233 x449))))))) x7581)) (or (and x7536 (and (= x339 true) (= x2769 false) (= x2766 132))) (and (not x7536) (and (and (= (x8503 320) x6756) (= (x8503 192) x6522) (= (x8503 224) x3734) (= x8096 (x8503 128)) (= (x8503 256) x6139) (= (x8503 128) x863) (= x3081 (x8503 128)) (= (x8503 128) x6825) (= x6213 (x2230 (- x18 128))) (= (x8503 160) x4367) (= (x1896 x6213 x8096 x4464 x7643 x4486) x6923) (= (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756) x2499) (= (x7100 (+ 128 x171)) x18) (= (x8503 160) x5120) (= x4486 (x8503 224)) (= x4777 (x8503 160)) (= (x8503 288) x2098) (= (x8503 128) x1552) (= (x8503 160) x4464) (= (= (ite (= 0 x6213) x4281 (ite (>= 32 x6213) x7204 (ite (<= x6213 64) x8502 (ite (<= x6213 96) x519 (ite (<= x6213 128) x6923 (ite (>= 160 x6213) x5596 (ite (<= x6213 192) x6794 x2499))))))) x3309) x5434) (= (x3407 x6213 x3081 x5009) x8502) (= (x8503 192) x6162) (>= 224 x6213) (= (x7622 x6213 x8556 x4777 x3164 x3734 x5287) x5596) (= x8556 (x8503 128)) (= x3164 (x8503 192)) (= x5172 (x8503 288)) (= x4401 (x8503 160)) (= (x8503 160) x5009) (= (x8503 192) x7643) (= (x8503 224) x5197) (= x4281 (x4958 0)) (= x8482 (x8503 128)) (= x433 (x8503 256)) (= (x7087 x6213 x8482 x5120 x2533) x519) (= (x8503 256) x5287) (= x6794 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172)) (= x2533 (x8503 192)) (= x7204 (x1022 x6213 x863)) (= x2970 (x8503 224))) (or (and x5434 (and (= (x4063 128) x6110) (= x807 (x4063 160)) (= (x4063 192) x8162) (= 0 x2766) (= (x7100 (+ x1161 x4817)) x2572) (= x4092 (x7100 (+ x565 128))) (= x4747 (x4063 128)) (= (x7100 (+ 32 x2472)) x1161) (= false x7671) (= x3754 (* 32 x5892)) (>= x3224 32) (= x6748 (x4063 224)) (= (x7622 x3224 x7683 x1344 x5037 x3808 x8369) x8325) (= x1861 (x4063 256)) (= x1214 (x7100 (+ 31 x565))) (= (x4063 128) x1954) (< x4817 x2572) (= (div x1214 32) x5892) (= x1575 (x7087 x3651 x4747 x210 x8417)) (= (x4063 160) x5985) (= x3808 (x4063 224)) (= (x1896 x3224 x6110 x1045 x8162 x2618) x8321) (= x4817 (+ x3754 160)) (= x510 (x7100 (+ 32 x4817))) (= x6739 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) (= (x4063 160) x2084) (= (x4063 160) x210) (= (x4063 128) x633) (= x1045 (x4063 160)) (= (x3407 x3224 x5218 x6215) x3986) (= x5218 (x4063 128)) (= (x4063 192) x910) (= (x4958 0) x242) (>= 224 x3224) (= (x3407 x3651 x633 x7276) x3357) (= (x4063 256) x3445) (= (x4063 160) x1344) (= (x4063 160) x494) (= (x4063 192) x5037) (= x2464 (x7100 (+ x510 x171))) (= (x4063 288) x2753) (= (x4063 160) x3653) (= x7683 (x4063 128)) (= (div x4525 32) x2835) (= x3461 (x6276 x4817)) (= x4004 true) (= (x4063 224) x668) (= (x4063 256) x8369) (= x4525 (x7100 (+ 31 x171))) (= (x4063 160) x7276) (= (x1022 x3224 x2213) x4620) (>= x2572 161) (= x7755 (x7100 (+ 160 x565))) (= x5115 (ite (= x3651 0) x242 (ite (>= 32 x3651) x3540 (ite (>= 64 x3651) x3357 (ite (<= x3651 96) x1575 (ite (<= x3651 128) x4597 (ite (<= x3651 160) x7878 x6739))))))) (= x4873 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)) (= (x1896 x3651 x1790 x3653 x910 x8305) x4597) (= (x4063 288) x3957) (= (x3407 64 x4889 (ite (>= 32 x3224) x4620 (ite (>= 64 x3224) x3986 (ite (>= 96 x3224) x7579 (ite (<= x3224 128) x8321 (ite (>= 160 x3224) x8325 (ite (>= 192 x3224) x4873 x2824))))))) x5822) (= (x4063 128) x8300) (= (x4063 224) x2618) (= x4176 (x4063 288)) (= x2824 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802)) (= x8081 (x4063 128)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x565) (>= x565 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= (x4063 320) x802) (= x1432 (x4063 160)) (= x3540 (x1022 x3651 x1954)) (= (x4063 192) x8417) (= x7579 (x7087 x3224 x8081 x5985 x4105)) (= x8305 (x4063 224)) (= x6841 (x4063 128)) (= x2213 (x4063 128)) (= (x4063 192) x3137) (= (x2230 (- (mod (+ 32 x4877) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x3224) (= x4105 (x4063 192)) (= (x4063 256) x6998) (= x6457 128) (= x966 (x3407 64 x4706 7)) (= x3651 (- x3224 32)) (= (x4063 128) x1445) (= x2472 (* 32 x2835)) (= x1381 (x4063 224)) (= x7878 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)) (= x4462 (x4063 224)) (or (<= x3461 31) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3461)) (= (x4063 192) x4542) (= x4311 (x4063 128)) (= x4877 (x7100 (+ 128 x565))) (= (x4063 160) x6215) (= (x4063 192) x4642) (= x738 (x4063 256)) (= (x4063 128) x1790) (= x6061 (x4063 192)))) (and (not x5434) (and (= false x5976) (= 132 x2766) (= true x6909))))))))) x4152))))) (=> (and (and (= x5659 true) (= 0 x2766) (= false x6154)) (not x7577)) x4152))))) (=> x8360 x5952))) (=> (and (= 0 x7475) (not x7787)) x5594))) (=> (and x7892 (and (= x8178 x3900) (= x1553 0) (= 2 x6230) (= x4984 x6839) (= x5545 x2926) (= false x7935) (= x1465 true) (= 0 x5635))) x2407))) x1418))
(assert (= (x3647 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x5959))
(assert (= x3612 (x5419 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= x4411 (and (not x2999) x71)))
(assert (= (and x1419 x4241) x3275))
(assert (x4938 x1655))
(assert (x4938 x6886))
(assert (not (x8398 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (x150 x3639))
(assert (= x8268 (and x1930 x7577)))
(assert (x4938 x1534))
(assert (= x7092 (and x1322 x1091)))
(assert (= x5431 (=> (and (= x1979 128) (= (= 0 x366) x3592) (= x7351 (x2230 (- x7778 128))) (= (x8177 x621) x366)) (and (=> (and x3592 (and (= x1991 x138) (= x2331 x6291) (= x6676 x661) (= x7912 true) (= x2133 x5801) (= false x7549) (= x2398 x2850) (= x307 x7374) (= x6283 x2126) (= 2 x4178) (= x1927 x621) (= x4066 x8267) (= x4010 x4368) (= x6331 x5098) (= x584 x7078) (= x6717 x5099) (= x6168 0))) x5672) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7351) (= x6337 (= (x6570 132) x4952)) (<= x3843 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x5789 128) (<= 196 x7351) (= x8243 x6525) (= false x6285) (= (x7016 132) x4377) (= 1722637450 x7777) (= x6054 (x8177 x1579)) (<= 1 x6054) (= x4417 x2347) (= false x6426) (= x5847 x5606) (= (> x4377 18446744073709551615) x844) (<= x7717 127) (= x7351 x3843) x6337 (= x4271 46442213778836376901753710468615024683576072693327014300388496345503314739200) (<= x7717 127) (>= x3843 196)) (not x3592)) (and (=> x844 x114) (=> (and (not x844) (and (= 164 x2245) (= x1753 (> x443 x3843)) (= x443 (x7100 (+ 164 x4377))))) (and (=> x1753 x5805) (=> (and (and (= (< (+ 31 x3136) x3843) x2858) (= (+ 4 x6525) x3136)) (not x1753)) (and (=> (and (not x2858) (and (= true x6578) (= false x290) (= x3196 0))) x2887) (=> (and (and (= x4283 (x7016 x3136)) (= (> x4283 18446744073709551615) x4683)) x2858) (and (=> (and (and (= (< x3843 x597) x1926) (= x4339 (+ x3136 32)) (= (x7100 (+ x4283 x4339)) x597)) (not x4683)) (and (=> x1926 x5805) (=> (and (and (or (and (and (= x3823 (x7100 (+ x4377 31))) (or (<= x4377 115792089237316195423570985008687907853269984665640564039457584007913129639744) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x4377)) (= (x7100 (+ x1277 x2189)) x4165) (= (x7100 (+ x4283 31)) x1386) (< x1277 x4165) (= (* x2508 32) x4806) (= (x7100 (+ x4283 x4677)) x3733) (= x4719 false) (= (x8378 x1277) x7239) (= (* 32 x5819) x700) (= (div x3823 32) x2508) (>= x4165 161) (= (div x1386 32) x5819) (= (x7100 (+ x700 32)) x2189) (= 0 x3196) (= x7427 128) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x7239) (>= 31 x7239)) (= true x3960) (= x4677 (x7100 (+ 32 x1277))) (= x1277 (+ 160 x4806))) x7493) (and (and (= x2167 true) (= false x133) (= 132 x3196)) (not x7493))) (= (= x1579 x3521) x7493)) (not x1926)) x2887))) (=> x4683 x114)))))))))))))
(assert (x4938 x8286))
(assert (x4938 x6354))
(assert (x4938 x6289))
(assert (x4938 x5570))
(assert (x4938 x3736))
(assert (x8398 51607134309459761954548520284799282329936326410793501951915747293203005440))
(assert (x4938 x6831))
(assert (=> (<= x1579 10000) (= 0 (x1388 x1579))))
(assert (x4938 x5551))
(assert (= (x3116 (x3407 64 1 x3628)) 64))
(assert (> (x3407 x2454 x2923 x2510) 10000))
(assert (= (and (not x5745) x51) x1434))
(assert (< (x1022 x206 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x1678))
(assert (not (x8398 (x3407 64 x8409 36))))
(assert (= 0 (x1388 18446744073709551615)))
(assert (= (x1388 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (x4485 x3000))
(assert (x4938 x4568))
(assert (= (x6340 (x7087 x4400 x8390 x5866 x613)) x613))
(assert (x4938 x2319))
(assert (= x6299 (and x6143 x8071)))
(assert (= (and x3708 x4456) x7279))
(assert (= (x3116 (x3407 64 x4120 11)) 64))
(assert (x4938 x7769))
(assert (not (x8398 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (x4938 x752))
(assert (= (x1388 59118985759084958080972419199848406897631161684926069324597705158744233476096) 0))
(assert (= (and x2072 x6914) x6472))
(assert (= x5977 (x701 (x7087 x4598 x6970 x5977 x7474))))
(assert (x4938 x6344))
(assert (= x3439 (=> (and (= x7385 2) (= x5545 x2926) (= x5635 36) (= x3900 x8178) (= x4984 x6839) (= x1553 0) (= x1690 true) (= x7685 false)) x2407)))
(assert (x4938 x2108))
(assert (=> (<= x4437 10000) (= 0 (x1388 x4437))))
(assert (= (and (not x2120) x5624) x8537))
(assert (x4938 x3233))
(assert (x4938 x1598))
(assert (= x7294 (x701 (x1896 x5857 x4592 x7294 x5171 x2027))))
(assert (x4938 x8507))
(assert (=> (<= x5058 10000) (= 0 (x1388 x5058))))
(assert (=> (<= x42 10000) (= (x1388 x42) 0)))
(assert (x4938 x499))
(assert (= x5722 x4516))
(assert (= x5772 (and (not x3942) x6130)))
(assert (= (x3116 (x1022 32 x7122)) 32))
(assert (x4938 x8380))
(assert (= x3026 (or x6597 x7454 x4728)))
(assert (x4938 x7623))
(assert (x4938 x6680))
(assert (x4938 x1839))
(assert (x4938 x7386))
(assert (x4938 x6687))
(assert (< 10000 (x3407 64 x3342 100)))
(assert (= (x701 (x3407 64 x2644 12)) 12))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6325 2)))
(assert (= (and x4571 x5799) x5552))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (<= x4159 96) x7440 (ite (>= 128 x4159) x6983 (ite (>= 160 x4159) x2778 (ite (>= 192 x4159) x1660 x3397)))))))))
(assert (x4938 x5507))
(assert (< 10000 (x1896 x7199 x4139 x2108 x7648 x2383)))
(assert (x4938 x5888))
(assert (= x1463 (or x3726 x7292)))
(assert (=> (<= x5486 10000) (= 0 (x1388 x5486))))
(assert (x4938 x766))
(assert (= x6066 (and x7810 (not x1668))))
(assert (= (and x3242 (not x6377)) x2435))
(assert (x4938 x7130))
(assert (x4938 x2356))
(assert (x4938 x3572))
(assert (not (x8398 (x1022 x6088 x8345))))
(assert (= x6936 (and x4514 x3941)))
(assert (< (x1896 x6088 x2440 x5482 x1969 x6350) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7391))
(assert (=> (>= 10000 x4502) (= (x1388 x4502) 0)))
(assert (= x8189 (=> (= (= x2343 0) x2774) (and (=> (and (not x2774) (and (= x2579 x1542) (= x77 x3557) (= x4796 x7217) (= x2216 x4980) (= x2628 x7636) (= x1252 x5636) (= x2756 x1516) (= x6019 x3675) (= x7640 x1543) (= x8446 x72) (= x2409 x6533) (= x1892 x5587) (= x7882 x768))) x6496) (=> (and x2774 (and (= x2331 x6291) (= false x2662) (= x4010 x4368) (= x8267 x4066) (= x307 x7374) (= x661 x6676) (= x977 2) (= x5098 x6331) (= x2126 x6283) (= x5801 x2133) (= x7078 x584) (= x6168 0) (= x2850 x2398) (= x621 x1927) (= x3977 true) (= x1991 x138) (= x6717 x5099))) x5672)))))
(assert (x4938 x2651))
(assert (x4938 x7926))
(assert (x4938 x553))
(assert (= (x701 (x1896 x2119 x3204 x7545 x6185 x4559)) x7545))
(assert (x4938 x2810))
(assert (=> (>= 10000 x7199) (= (x1388 x7199) 0)))
(assert (< (x1896 x7199 x4139 x2108 x7648 x2383) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x704 x2600))
(assert (x4938 x8118))
(assert (x4938 x5969))
(assert (x4938 x83))
(assert (x4938 x59))
(assert (x4938 x1998))
(assert (= 1 (x3647 (x3407 64 1 x1485))))
(assert (= x4750 (x701 (x3407 x4400 x530 x4750))))
(assert (x4938 x6179))
(assert (x4938 x1259))
(assert (= x2027 (x6568 (x1896 x5857 x4592 x7294 x5171 x2027))))
(assert (=> (<= x3137 10000) (= (x1388 x3137) 0)))
(assert (x4938 x7270))
(assert (=> (>= 10000 x5234) (= 0 (x1388 x5234))))
(assert (= (=> (and (and (<= x8266 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x7100 (+ x2356 x5679)) x7819) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x8266) (= (x7100 (+ 192 x8266)) x6349) (> x6349 x8266) (= x1619 (x7100 (+ 32 x7392))) (not (= x8266 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (> x8266 x7392) (= x6580 (x2230 (- x646 32))) (<= x8266 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x7392 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= x8266 1) (= x2504 (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x1220)) (<= x7392 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3925 (< 0 x5850)) (<= x7392 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1249 x1619) x4019) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x476) x1734) (= x8003 (x2151 x7392)) (= x8266 (x7100 (+ x1734 x2356))) (= x8478 (x7100 (+ x8266 32))) (= x476 (x7100 (+ 31 x5679))) (not (= x8266 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x1066 26959946667150639794667015087019630673637144422540572481103610249215 x4019) x1220) (not (= x8266 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= (x2230 (- x8266 x7392)) x646)) (or (and (and (= x584 x229) (= x5396 x7374) (= x5877 x5787) (= x6179 x621) (= x5098 x4230) (= x2171 x2331)) (not x3925)) (and x3925 (and (= (x6175 x1579) x948) x2009 (= (x6175 x1579) x4584) (>= 4294967295 x442) (= x2009 (>= (x2324 x1579) x4584)) (= x7600 x5396) (= x1920 x2171) (= (= x948 (x2324 x1579)) x1566) (= x5345 x4230) x1566 (= x229 x4523) (= x5787 x4067) (= x5437 x6179))))) x276) x286))
(assert (< 10000 (x3407 64 1 x5792)))
(assert (= (x1388 (x1022 32 x8103)) (x1022 32 x8103)))
(assert (> (x3407 64 x8425 36) 10000))
(assert (= (x6340 (x7622 x7199 x6076 x3424 x7623 x299 x4117)) x7623))
(assert (< 10000 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)))
(assert (x4938 x7005))
(assert (x4938 x813))
(assert (= (=> (= x4565 (+ x7599 x6767)) x1039) x2251))
(assert (< 10000 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)))
(assert (x4938 x4489))
(assert (= (and x1451 (not x6442)) x816))
(assert (x4938 x2133))
(assert (= (and x195 x5370) x1772))
(assert (x4938 x3590))
(assert (x4938 x1258))
(assert (= (x3116 (x1022 x2119 x6911)) x2119))
(assert (= (x1388 (x3407 64 x1579 1)) (x3407 64 x1579 1)))
(assert (x4938 x3368))
(assert (x4938 x3406))
(assert (= x1337 (and x6774 x7848)))
(assert (x4938 x99))
(assert (x4938 x5716))
(assert (x4938 x5535))
(assert (x4938 x5350))
(assert (= (=> (= (= x5615 0) x6398) (and (=> (and (and (<= x5671 255) (= (x3407 64 x8491 11) x7026) (= (> x5671 3) x7419) (= (x8405 x7026) x5671)) x6398) (and (=> (and (not x7419) (= (= 2 x5671) x2897)) (and (=> (and x2897 (and (= (= (x8061 518) (x5219 228)) x3135) x3135 (= x4865 29244376827073035548771643948814531551534385112760475998805679327281764368384) (= (x3511 x2228) x7597) (= 1084734224 x8184) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1874) x2395) (= x5792 (x3407 64 x6717 4)) (<= 1 x3520) x7405 x1742 (= (x7100 (+ x2631 x2395)) x5810) (= 256 x2770) (= x733 (x1695 128)) (<= x6717 65535) (= x4887 (x7100 (+ x5410 486))) (= (x7100 (+ 31 x733)) x4303) (= 0 x1368) (= x599 x6717) (= 290 x8438) (= 160 x16) (= x6384 false) (= false x4347) (= (x3407 64 1 x5792) x2228) (<= x6392 127) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4303) x5410) (<= 356 x7031) (= (x7100 (+ x4904 31)) x1874) (= x7031 (x2230 (- x5810 290))) (= x4186 0) (= (x7100 (+ 32 x4887)) x2631) (= x7031 x2470) (= (= (x5219 164) 64) x1228) (= x3520 (x8177 x7734)) x1228 (<= 356 x2470) (<= x6392 127) (= x4141 x1579) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2470 4)) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2470 4))) (< (- x2470 4) 160))) x6351) (= x4904 (x6026 224)) (= x7405 (= (x8061 486) (x5219 196))) (= (= 34 (x5219 260)) x1742) (= (x2230 (- x4887 294)) x3134))) (and (=> (and (= true x7771) (not x6351)) (and (=> (and (= (and (< 195 x2470) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2470) true)) x1365) x7771) (and (=> (not x1365) x27) (=> (and x1365 (and (= x4578 (x7181 164)) (= (> x4578 18446744073709551615) x2999))) (and (=> (and (not x2999) (and (= x6017 (> x2622 x2470)) (= x2622 (x7100 (+ 196 x4578))))) (and (=> (and (not x6017) (and (<= 356 x2470) (= x3144 (x7181 260)) (= x2823 (< 18446744073709551615 x3144)) (<= x2470 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (=> (and (not x2823) (and (= (x7100 (+ x3144 292)) x4455) (= x2634 (< x2470 x4455)))) (and (=> (and (not x2634) (and (= x7374 x4917) (= false x2804) (= x6283 x3642) (= (x7296 160) x4645) (= x2850 x3598) (= x694 x8267) (= x5559 x2331) (= x260 x621) (= x7746 x584) (= x6717 x1104) (= x138 x7409) (= x2064 x8497) (= 1 x5928) (= x5830 x5801) (= x4768 (x7296 160)) (= x5098 x3450) (= false x3403) (= (x7296 128) x5851) (= 64 x4110) (= (x7296 128) x1058) (= x8341 x4368))) x8303) (=> x2634 x1849))) (=> x2823 x7287))) (=> x6017 x1849))) (=> x2999 x7287))))) (=> (not x7771) x27))) (=> x6351 x27))) (=> (and (and (= x3175 false) (= 4 x5206) (= true x8346)) (not x2897)) x4167))) (=> (and (and (= x4181 false) (= x3371 true) (= 36 x5206)) x7419) x4167))) (=> (and (and (= false x3752) (= 4 x5206) (= x4717 true)) (not x6398)) x4167))) x5333))
(assert (x4938 x8056))
(assert (x4938 x7475))
(assert (=> (<= x5350 10000) (= 0 (x1388 x5350))))
(assert (=> (>= 10000 x183) (= (x1388 x183) 0)))
(assert (x4938 x1134))
(assert (= (x1688 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582)) x7582))
(assert (x4938 x404))
(assert (x4938 x6939))
(assert (x4938 x534))
(assert (= (x3647 (x3407 x5857 x3212 x3321)) x3212))
(assert (x4938 x3285))
(assert (= x4609 (x3647 (x3407 x4598 x4609 x1933))))
(assert (x4938 x1927))
(assert (= x3957 (x1688 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (=> (<= x4246 10000) (= (x1388 x4246) 0)))
(assert (x4938 x3637))
(assert (=> (>= 10000 x4048) (= (x1388 x4048) 0)))
(assert (= x2820 (=> (and (= x1553 0) (= false x5201) (= x6839 x4984) (= x5545 x2926) (= x3900 x8178) (= 36 x5635) (= x352 true) (= x7926 2)) x2407)))
(assert (> (x3407 x7277 x1788 x5949) 10000))
(assert (=> (>= 10000 x3627) (= (x1388 x3627) 0)))
(assert (= (and (not x1789) x2964) x5025))
(assert (x4938 x2422))
(assert (x4938 x4846))
(assert (x4938 x1874))
(assert (x4938 x4475))
(assert (= (and x6278 x4915) x4900))
(assert (x4938 x6688))
(assert (=> (>= 10000 x4401) (= (x1388 x4401) 0)))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639744) 0))
(assert (= (and x4382 (not x8078)) x1065))
(assert (x4938 x6341))
(assert (< 10000 (x7087 x4598 x6970 x5977 x7474)))
(assert (= x3734 (x6568 (x7622 x6213 x8556 x4777 x3164 x3734 x5287))))
(assert (x4938 x7928))
(assert (= x2674 (and x1070 (not x5440))))
(assert (= x1064 (x6568 (x7622 x2454 x7378 x3190 x5182 x1064 x4091))))
(assert (= x1950 (and x202 x424)))
(assert (= (x1388 (+ 1 x5738)) (x1388 x5738)))
(assert (x4938 x1922))
(assert (=> (<= x8300 10000) (= (x1388 x8300) 0)))
(assert (= x4147 (x3647 (x1896 x2454 x4147 x8278 x3885 x5310))))
(assert (x4938 x3461))
(assert (x4938 x2245))
(assert (= x3095 (and x1713 (not x238))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x4120 11)))
(assert (x4938 x6408))
(assert (x4938 x5953))
(assert (= x5157 (and x216 x747)))
(assert (= (and x3496 x5537) x6914))
(assert (x4938 x4858))
(assert (x4938 x662))
(assert (x4938 x2263))
(assert (x4938 x7884))
(assert (= x142 (or (and x5467 x6131) (and x589 (not x4697)))))
(assert (= x96 (x701 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016))))
(assert (= (and x8442 x2205) x1053))
(assert (x4938 x7138))
(assert (= (=> (= (= x5928 0) x6820) (and (=> (and (and (= x5206 x4110) (= false x6872) (= x3133 true)) x6820) x4167) (=> (and (= x4571 (< x4110 64)) (not x6820)) (and (=> (and x4571 (and (= x5206 0) (= true x1192) (= false x1605))) x4167) (=> (and (and (= (x3526 290) x4378) (= x1068 0) (= x5066 354) (= x3284 (x6128 x5838)) (= (div x6695 2) x999) (= (x3407 64 x8491 11) x2684) (= x466 (x3407 64 x8491 11)) (= (x3407 64 x6717 3) x7122) (= x4235 (x1066 1 x6695)) (= 450 x6754) (= (+ 2 x466) x616) (= (x7156 x7122) x6695) (= x5838 (+ x7434 1)) (= x6801 (x3526 322)) (= (x1052 x616) x3354) (= (x2230 (- x4235 (mod (ite (< x2969 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x561) (= x2969 (ite (< 0 x4235) x999 (x1066 127 x999))) (= x7434 (x3407 64 x8491 11)) (= (> x561 0) x5745)) (not x4571)) (and (=> (and (not x5745) (and (= x705 false) (= 36 x5206) (= true x6675))) x4167) (=> (and (and (= x1538 (* x7571 32)) (= x7571 (div (+ 31 x2969) 32)) (= x1748 (= x2969 0)) (= x1456 (+ 548 x1538))) x5745) (and (=> (and (not x1748) (= x2555 (< 31 x2969))) (and (=> (and (not x2555) (and (= x7064 (* 256 x8464)) (= x8464 (div x8440 256)) (= (x7156 x7122) x8440))) x7069) (=> (and x2555 (and (or (and x3748 (and (>= 612 x7675) (<= 548 x7675) (= (x751 x4264) x4220))) (not x3748)) (and (= x3748 (> x7675 580)) (= (+ x5205 1) x4264) (= (x1022 32 x7122) x5205) (= x7675 (+ 548 x2969)) (= (x751 x5205) x3001)))) x699))) (=> x1748 x7069))))))))) x8303))
(assert (=> (<= x2836 10000) (= (x1388 x2836) 0)))
(assert (x4938 x4153))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x3651 x1954)))
(assert (=> (>= 10000 x1656) (= 0 (x1388 x1656))))
(assert (= (and (not x4672) x2993) x3609))
(assert (x4938 x5056))
(assert (x4938 x3049))
(assert (= x4746 (or x5607 x3145 x5152 x6785 x2200 x6298)))
(assert (x4938 x2443))
(assert (x4938 x2758))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x2726 x7749 x2789 x3787 x3437)))
(assert (= (and x2610 x2342) x154))
(assert (x8398 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (x4938 x1456))
(assert (x4938 x327))
(assert (x150 255))
(assert (x4938 x1599))
(assert (= x7194 (and x3711 (not x4786))))
(assert (x4938 x677))
(assert (= (x1388 (x7087 x2119 x1810 x1425 x7992)) (x7087 x2119 x1810 x1425 x7992)))
(assert (not (x8398 (x3407 64 1 x3628))))
(assert (= x4601 (and x2605 x5960)))
(assert (x4938 x5351))
(assert (=> (>= 10000 x8514) (= (x1388 x8514) 0)))
(assert (not (x8398 (x7622 x5478 x3146 x5426 x4785 x7964 x5820))))
(assert (x4938 x5717))
(assert (= (and x1186 (not x2094)) x2872))
(assert (< (x7622 x7199 x6076 x3424 x7623 x299 x4117) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2988) (= 0 (x1388 x2988))))
(assert (x8398 1084734224))
(assert (x4938 x4320))
(assert (x4938 x3963))
(assert (= (and x6596 x2234) x2414))
(assert (x4938 x3876))
(assert (x4938 x7289))
(assert (x4938 x7722))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x7199 x5813 x4981 x3966)))
(assert (x4938 x6168))
(assert (x4938 x3929))
(assert (= (x5419 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138)) x1847))
(assert (x4938 x1048))
(assert (=> (>= 10000 x3381) (= (x1388 x3381) 0)))
(assert (x4938 x4380))
(assert (x4938 x6706))
(assert (x4938 x6553))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3533 7)))
(assert (x4938 x2082))
(assert (x4938 x5498))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)))
(assert (=> (>= 10000 x159) (= (x1388 x159) 0)))
(assert (= x7753 (and (not x7077) x2941)))
(assert (> (x1022 x7199 x8191) 10000))
(assert (x4938 x72))
(assert (x4938 x36))
(assert (= (and x6905 (not x6726)) x6367))
(assert (x4938 x5853))
(assert (x4938 x3793))
(assert (x4938 x4723))
(assert (x4938 x7473))
(assert (x4938 x2589))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x2019 12)))
(assert (x4938 x6114))
(assert (= x5009 (x701 (x3407 x6213 x3081 x5009))))
(assert (x4938 x3330))
(assert (=> (>= 10000 x1971) (= (x1388 x1971) 0)))
(assert (= (and (not x1748) x2637) x4496))
(assert (= (x6340 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)) x4729))
(assert (x4938 x178))
(assert (x4938 x3658))
(assert (=> (<= x2726 10000) (= 0 (x1388 x2726))))
(assert (= (and x417 x8563) x3841))
(assert (= (x6568 (x7622 x7199 x6076 x3424 x7623 x299 x4117)) x299))
(assert (= x4564 (and x2872 (not x5562))))
(assert (= 64 (x3116 (x3407 64 x3533 7))))
(assert (not (x8398 (x4958 0))))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639773))
(assert (=> (<= x2997 10000) (= (x1388 x2997) 0)))
(assert (= (x3647 (x7087 x3651 x4747 x210 x8417)) x4747))
(assert (=> (<= x633 10000) (= (x1388 x633) 0)))
(assert (x4938 x5702))
(assert (=> (<= x5427 10000) (= (x1388 x5427) 0)))
(assert (x4938 x6150))
(assert (= (x5419 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564)) x2439))
(assert (=> (>= 10000 x2164) (= 0 (x1388 x2164))))
(assert (x4938 x4068))
(assert (x4938 x4146))
(assert (x4938 x5692))
(assert (=> (>= 10000 x5392) (= 0 (x1388 x5392))))
(assert (x4938 x3565))
(assert (x4938 x3431))
(assert (= x622 (x701 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405))))
(assert (x4938 x1975))
(assert (= (x3407 x4809 x2723 x5385) (x1388 (x3407 x4809 x2723 x5385))))
(assert (= x7481 (and x4411 (not x6017))))
(assert (= x6717 (x3647 (x3407 64 x6717 4))))
(assert (x4938 x6743))
(assert (x4938 x7448))
(assert (x4938 x1545))
(assert (=> (<= x3224 10000) (= (x1388 x3224) 0)))
(assert (x4938 x5831))
(assert (< (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7290))
(assert (= x5494 (and x1419 (not x4241))))
(assert (= (and x793 (not x4202)) x2943))
(assert (x8398 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x4938 x422))
(assert (x704 x7437))
(assert (x4938 x6230))
(assert (x4938 x77))
(assert (= (and x1959 x4650) x428))
(assert (x4938 x4569))
(assert (x4938 x583))
(assert (x4938 x7546))
(assert (x4938 x6024))
(assert (x4938 x4655))
(assert (x4938 x1709))
(assert (= x4706 (x3647 (x3407 64 x4706 7))))
(assert (x4938 x1148))
(assert (x4938 x999))
(assert (< (x1896 x4598 x3197 x5234 x8550 x4437) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x3257))
(assert (x4938 x6980))
(assert (x4938 x4148))
(assert (x4938 x1221))
(assert (x4938 x4575))
(assert (not (x8398 (x3407 64 x8356 36))))
(assert (x4938 x6542))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x3989 x5981 x1922 x4627)))
(assert (x4938 x8490))
(assert (x4938 x1614))
(assert (x4938 x7403))
(assert (= x5986 (and x7554 x8250)))
(assert (= (x6340 (x1896 x4400 x4441 x7780 x8359 x6150)) x8359))
(assert (x4938 x364))
(assert (x4938 x4682))
(assert (= x653 (and (not x2977) x6714)))
(assert (x4938 x7459))
(assert (= (and x547 x4155) x8185))
(assert (x4938 x3134))
(assert (x4938 x1964))
(assert (> (x3407 64 x6325 2) 10000))
(assert (= (and x4274 (not x4222)) x2012))
(assert (= (or (and x7188 (not x377)) x1274) x302))
(assert (x4938 x8216))
(assert (=> (>= 10000 x4542) (= (x1388 x4542) 0)))
(assert (> (x1022 x2119 x6911) 10000))
(assert (=> (>= 10000 x2027) (= (x1388 x2027) 0)))
(assert (= (x1688 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) x1227))
(assert (= x6969 (=> (and (= 0 x1179) (= false x7839) (= x5956 true)) x6329)))
(assert (x4938 x6847))
(assert (x4938 x1218))
(assert (x4938 x145))
(assert (= x8425 (x3647 (x3407 64 x8425 36))))
(assert (x4938 x4464))
(assert (= x6602 (and x7720 (not x2952))))
(assert (= (x3407 x7277 x1788 x5949) (x1388 (x3407 x7277 x1788 x5949))))
(assert (x4938 x6676))
(assert (x4938 x7009))
(assert (x4938 x2208))
(assert (= x1835 (and (not x592) x1636)))
(assert (= x6541 (x3116 (x3407 x6541 x4467 x2703))))
(assert (x4938 x2147))
(assert (= (and x1083 (not x252)) x2479))
(assert (x4938 x2814))
(assert (= (or x739 x6257) x6830))
(assert (= (x3647 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) x3146))
(assert (= 0 (x1388 38584857114614344130707641774870441135179346817440091772946614992565446901760)))
(assert (x4938 x1555))
(assert (> (x7622 x6213 x8556 x4777 x3164 x3734 x5287) 10000))
(assert (= x2982 (x6568 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616))))
(assert (x4938 x2686))
(assert (= (x3647 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) x151))
(assert (x4938 x7310))
(assert (x4938 x7099))
(assert (x4938 x1146))
(assert (x4938 x8267))
(assert (= (and x4121 (not x5030)) x5539))
(assert (x4938 x4187))
(assert (=> (<= x2442 10000) (= 0 (x1388 x2442))))
(assert (x4938 x8049))
(assert (x4938 x8172))
(assert (x4938 x7192))
(assert (x4938 x4417))
(assert (x4938 x4441))
(assert (> (x3407 64 x3533 7) 10000))
(assert (=> (<= x2970 10000) (= (x1388 x2970) 0)))
(assert (x4938 x2405))
(assert (x4938 x8340))
(assert (x4938 x4767))
(assert (=> (<= x2923 10000) (= 0 (x1388 x2923))))
(assert (x4938 x531))
(assert (x4938 x6649))
(assert (= (or x4038 x5603) x2429))
(assert (=> (>= 10000 x6199) (= 0 (x1388 x6199))))
(assert (= (and (not x1548) x5965) x5751))
(assert (x4938 x5100))
(assert (x4938 x3664))
(assert (=> (>= 10000 x2730) (= (x1388 x2730) 0)))
(assert (x8398 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (x4938 x6710))
(assert (= 0 (x1388 44057028636630039105102054091366763171729008530599747929804322044178077843456)))
(assert (= x1395 (x6568 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (=> (<= x4462 10000) (= (x1388 x4462) 0)))
(assert (x4938 x2901))
(assert (= x3261 (and x3483 x1630)))
(assert (=> (>= 10000 x7601) (= (x1388 x7601) 0)))
(assert (x4938 x3367))
(assert (= (and x7095 x2003) x7445))
(assert (x4938 x925))
(assert (x4938 x2853))
(assert (= 6 (x701 (x3407 64 x3138 6))))
(assert (x4938 x3780))
(assert (= 64 (x3116 (x3407 64 x3627 3))))
(assert (x4938 x7984))
(assert (=> (<= x4057 10000) (= (x1388 x4057) 0)))
(assert (x4938 x6617))
(assert (< (x3407 64 x5520 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x2604))
(assert (x4938 x6673))
(assert (= (x3647 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)) x5725))
(assert (= (x3647 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503)) x5912))
(assert (= (x6340 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138)) x1502))
(assert (= 36 (x701 (x3407 64 x6673 36))))
(assert (=> (<= x3197 10000) (= (x1388 x3197) 0)))
(assert (= x5799 (and x5343 (not x6820))))
(assert (x4938 x7031))
(assert (x4938 x6331))
(assert (< 10000 (x7087 x6541 x7752 x8107 x2402)))
(assert (x4938 x1462))
(assert (=> (>= 10000 x4750) (= (x1388 x4750) 0)))
(assert (= x5083 (and (not x6232) x526)))
(assert (= (and x4902 x4468) x8565))
(assert (= (and x390 (not x3334)) x4909))
(assert (= x1051 (x701 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323))))
(assert (x4938 x8470))
(assert (= (and x4143 x2006) x194))
(assert (= x3151 (or x6075 x3940)))
(assert (= (and x4880 x7949) x3735))
(assert (x4938 x912))
(assert (x4938 x5421))
(assert (= x5172 (x1688 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172))))
(assert (= x1788 (x3647 (x3407 x7277 x1788 x5949))))
(assert (= (x3116 (x3407 64 x6717 3)) 64))
(assert (> (x1896 x206 x3365 x1392 x1612 x2988) 10000))
(assert (x4938 x4185))
(assert (x4938 x2128))
(assert (x4938 x4440))
(assert (< 10000 (x3407 64 x1453 (ite (<= x4159 32) x7718 (ite (>= 64 x4159) x935 (ite (>= 96 x4159) x7440 (ite (>= 128 x4159) x6983 (ite (>= 160 x4159) x2778 (ite (>= 192 x4159) x1660 x3397)))))))))
(assert (= (and (not x195) x5370) x7710))
(assert (= (x701 (x7622 x6213 x8556 x4777 x3164 x3734 x5287)) x4777))
(assert (x4938 x811))
(assert (x4938 x5857))
(assert (x8398 2001815235))
(assert (= (=> (and (= x1784 (= 0 x2594)) (or x1784 (not x1784))) x6073) x3271))
(assert (x4938 x3286))
(assert (= (or x2302 x1178) x612))
(assert (= (or (and x2986 x5752) (and x6115 x4929)) x7170))
(assert (x150 x3658))
(assert (x150 x113))
(assert (x4938 x3342))
(assert (x4938 x4016))
(assert (x4938 x275))
(assert (= 3 (x701 (x3407 64 x3533 3))))
(assert (< 10000 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)))
(assert (x4938 x4662))
(assert (x4938 x6389))
(assert (x4938 x7142))
(assert (x4938 x2216))
(assert (x4938 x5664))
(assert (= (or (and x4794 x2062) (and x1549 x653)) x2569))
(assert (x4938 x5037))
(assert (= 0 (x1388 3313512704)))
(assert (x4938 x6072))
(assert (x4938 x3869))
(assert (= (or x3413 x1188) x2768))
(assert (= x8082 (and (not x2858) x6192)))
(assert (= (x3647 (x1022 x4159 x2208)) x2208))
(assert (x4938 x2206))
(assert (= (or x6490 x7442) x6995))
(assert (x4938 x7516))
(assert (x4938 x2119))
(assert (x4938 x4942))
(assert (x8398 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (x4938 x856))
(assert (x4938 x5530))
(assert (= (and x1765 x1784) x2049))
(assert (= (and x4934 (not x5192)) x3107))
(assert (= x5628 (x6340 (x7087 x4159 x8094 x3597 x5628))))
(assert (= 64 (x3116 (x3407 64 x6658 6))))
(assert (= 64 (x3116 (x3407 64 x1232 (ite (<= x6541 32) x1119 (ite (<= x6541 64) x7379 (ite (>= 96 x6541) x7801 (ite (>= 128 x6541) x8520 (ite (>= 160 x6541) x7562 (ite (<= x6541 192) x5591 x6376))))))))))
(assert (x4938 x3611))
(assert (x4938 x6582))
(assert (x4938 x3058))
(assert (x4938 x5837))
(assert (=> (>= 10000 x2928) (= (x1388 x2928) 0)))
(assert (= x3365 (x3647 (x1896 x206 x3365 x1392 x1612 x2988))))
(assert (= x3533 (x3647 (x3407 64 x3533 7))))
(assert (x4938 x2551))
(assert (x4938 x5214))
(assert (x4938 x2140))
(assert (x4938 x7816))
(assert (= (x3407 64 x1599 12) (x1388 (x3407 64 x1599 12))))
(assert (x4938 x2598))
(assert (= x226 (x3647 (x3407 x7199 x226 x4057))))
(assert (x4938 x1231))
(assert (= 6 (x701 (x3407 64 x8409 6))))
(assert (= x3224 (x3116 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (= x7467 (x6340 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616))))
(assert (= 36 (x701 (x3407 64 x8340 36))))
(assert (x4938 x6461))
(assert (=> (>= 10000 x1612) (= 0 (x1388 x1612))))
(assert (= x5643 (and x5720 (not x5380))))
(assert (= (and (not x1511) x5895) x501))
(assert (x4938 x6897))
(assert (x4938 x7545))
(assert (= x6474 (and x2637 x1748)))
(assert (< 10000 (x7622 x4598 x663 x6206 x1584 x7317 x3231)))
(assert (x4938 x8315))
(assert (x4938 x6307))
(assert (x4938 x4787))
(assert (x4938 x1587))
(assert (= (x3647 (x1022 32 x7122)) x7122))
(assert (not (x8398 (x3407 64 x8425 36))))
(assert (= x2512 (and (not x7226) x6585)))
(assert (= x1421 (and (not x7835) x5188)))
(assert (= x910 (x6340 (x1896 x3651 x1790 x3653 x910 x8305))))
(assert (= (and x5666 x2313) x5305))
(assert (= (and (not x7492) x4415) x2124))
(assert (x4938 x5029))
(assert (x4938 x7374))
(assert (x4938 x6822))
(assert (x4938 x7772))
(assert (x4938 x5620))
(assert (= x3975 (and x3438 (not x4864))))
(assert (x4938 x3643))
(assert (=> (<= x8057 10000) (= 0 (x1388 x8057))))
(assert (x4938 x433))
(assert (= (x1388 49960157028345592648530624234191905822321225401495951855107091972775720517632) 0))
(assert (x4938 x5250))
(assert (x4938 x2865))
(assert (x4938 x1194))
(assert (= x4897 (=> (and (or (and x506 (and (= x321 x8433) (= x6904 x978) (= x4216 (x4436 x621)) (= x1009 x2344) (= x5313 x1888) (= x3517 x2169) (= x5980 (- x4216 x5176)) (= x5747 x6256) (= x426 x4538) (= x3054 x5521) (= x6649 x2602) (<= x5574 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5574 (+ x5527 x5176)) (= x6851 x3846) (= x1203 x3807) (= x1645 x2334) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5176 x5527)) (= x5176 (ite (= x5795 0) x7724 0)) (= x5527 (x5840 x3521)) (= x3297 x5795) (= x2713 x173) (<= 0 x5574) (= x7661 x3704) (= x5574 x5583))) (and (and (= x3054 x5521) (= x1009 x2344) (= x3704 x7661) (= x1645 x2334) (= x5313 x1888) (= x978 x6904) (= x2602 x6649) (= x8433 x321) (= x2713 x173) (= x6851 x3846) (= x1203 x3807) (= x426 x4538) (= x6256 x5747) (= x2169 x3517) (= x3297 x5795)) (not x506))) (= x506 (= x5795 0))) x5818)))
(assert (> (x3407 64 x6717 3) 10000))
(assert (x4938 x7744))
(assert (x4938 x7618))
(assert (x150 x2554))
(assert (not (x8398 (x3407 64 x1202 100))))
(assert (not (x8398 (x3407 64 x661 36))))
(assert (= x1389 (x3116 (x7087 x1389 x4115 x5007 x2944))))
(assert (= (x3116 (x3407 64 x7048 4)) 64))
(assert (= (x701 (x3407 64 1 x1120)) x1120))
(assert (= x5378 x707))
(assert (x4938 x1209))
(assert (= (x3116 (x3407 x4400 x530 x4750)) x4400))
(assert (=> (>= 10000 x4393) (= (x1388 x4393) 0)))
(assert (= x7177 (x6568 (x7622 x3989 x2981 x6000 x7436 x7177 x1427))))
(assert (= x7733 (and x3559 (not x8548))))
(assert (x4938 x7157))
(assert (x4938 x3251))
(assert (x4938 x2929))
(assert (= (and x5663 (not x1661)) x2010))
(assert (= (x3647 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176)) x8300))
(assert (x4938 x4249))
(assert (x4938 x988))
(assert (=> (>= 10000 x7682) (= (x1388 x7682) 0)))
(assert (x4938 x2944))
(assert (=> (>= 10000 x8345) (= (x1388 x8345) 0)))
(assert (x4938 x8068))
(assert (= x7987 (and x2465 x7449)))
(assert (= x3329 (and x4202 x793)))
(assert (x4938 x2939))
(assert (x4938 x1654))
(assert (x4938 x4283))
(assert (= x2462 (and x8105 x774)))
(assert (x4938 x1899))
(assert (x4938 x1432))
(assert (x4938 x2596))
(assert (x4938 x223))
(assert (=> (<= x6998 10000) (= 0 (x1388 x6998))))
(assert (x4938 x7979))
(assert (= x4925 (x6340 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (x4938 x6262))
(assert (x4938 x1811))
(assert (x4938 x3221))
(assert (x4938 x4301))
(assert (= (or x4126 x7246) x317))
(assert (x4938 x2293))
(assert (x4938 x5982))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x8409 36)))
(assert (x4938 x2461))
(assert (=> (<= x2876 10000) (= 0 (x1388 x2876))))
(assert (= (x3647 (x1022 32 103)) 103))
(assert (x4938 x6598))
(assert (x4938 x3837))
(assert (x4938 x2031))
(assert (x4938 x4806))
(assert (= x1791 (=> (and (= (= 0 x2343) x377) (or x377 (not x377))) x8189)))
(assert (=> (>= 10000 x8305) (= 0 (x1388 x8305))))
(assert (x4938 x2415))
(assert (x4938 x1005))
(assert (= (x1388 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172)) (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172)))
(assert (x4938 x5901))
(assert (= x797 (and x3036 x543)))
(assert (x4938 x2353))
(assert (= (and x6351 x6636) x4193))
(assert (= (=> (and (or (not x2537) (and (and (or (and (and (and (= (x5044 x719) x3227) (= (< 64 x1832) x6377) (= x719 (x7100 (+ 32 x3539))) (= x1783 (x7100 (+ 32 x2995)))) (or (and (and (or (and (and (= x569 (x7100 (+ x3539 96))) (= (x7100 (+ 96 x2995)) x5843) (= x3889 (x2570 x569)) (>= 128 x1832)) x3547) (not x3547)) (and (= (x7100 (+ x2995 64)) x942) (= x3547 (> x1832 96)) (= (x6021 x3038) x6962) (= x3038 (x7100 (+ x3539 64))))) x6377) (not x6377))) x3421) (not x3421)) (and (= x2604 (x7381 x3539)) (= (> x1832 32) x3421))) x2537)) (and (= x6104 (x7100 (+ x1824 31))) (= x7736 (x2230 (- x650 x1744))) (= (x5882 x5493) x1832) (= (x7100 (+ x650 32)) x2995) (= x1251 (x7100 (+ x6393 32))) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6104) x5719) (= x2537 (< 0 x1832)) (= (x7100 (+ x6819 x5719)) x650) (= (x7100 (+ x6819 x1824)) x6239) (= (x7100 (+ 32 x7741)) x6393))) x2) x1488))
(assert (x4938 x2572))
(assert (x4938 x1277))
(assert (not (x8398 (x1022 x3224 x2213))))
(assert (x4938 x4854))
(assert (= (and x4989 x2966) x2412))
(assert (=> (>= 10000 x4524) (= (x1388 x4524) 0)))
(assert (x4938 x4420))
(assert (x4938 x8106))
(assert (x4938 x4209))
(assert (< (x7622 x7277 x828 x6423 x4655 x7851 x163) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x728))
(assert (= x2365 (=> (and (= x8328 x2816) (= x2850 x1718) (= x8041 x584) (= x3759 x1626) (= x4368 x8166) (= x1116 x6717) (= x5098 x5209) (= x5014 x2331) (= x138 x5282) (= x912 x8267) (= (x1066 255 x6678) x1626) (= x7014 x6283) (= x6146 x621) (= 2 x2432) (= x2594 0) (= x1799 x5801) (= x749 x7374)) x3271)))
(assert (x4938 x5521))
(assert (= (x5419 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) x5982))
(assert (x4938 x4270))
(assert (= x2627 (or x4743 x3056)))
(assert (x4938 x7877))
(assert (x4938 x6033))
(assert (x4938 x6291))
(assert (= x3989 (x3116 (x7087 x3989 x5981 x1922 x4627))))
(assert (=> (<= x7313 10000) (= 0 (x1388 x7313))))
(assert (= (x3116 (x7622 x3224 x7683 x1344 x5037 x3808 x8369)) x3224))
(assert (= (x3116 (x1896 x206 x3365 x1392 x1612 x2988)) x206))
(assert (= (and (not x7095) x2003) x7137))
(assert (x4938 x2078))
(assert (x4938 x8271))
(assert (= x4422 (x701 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890))))
(assert (x4938 x7443))
(assert (x704 x30))
(assert (=> (<= x3440 10000) (= 0 (x1388 x3440))))
(assert (x4938 x20))
(assert (> (x3407 64 x6673 36) 10000))
(assert (x4938 x2480))
(assert (not (x8398 (x1896 x7199 x4139 x2108 x7648 x2383))))
(assert (x4938 x2568))
(assert (x4938 x347))
(assert (x4938 x5281))
(assert (not (x8398 (x3407 64 x6673 36))))
(assert (x4938 x4812))
(assert (x4938 x8295))
(assert (x4938 x1570))
(assert (x4938 x7115))
(assert (= (x1388 (x3407 64 x239 100)) (x3407 64 x239 100)))
(assert (x4938 x2043))
(assert (= x7315 (and x3955 x5349)))
(assert (x4938 x5790))
(assert (x4938 x877))
(assert (= x8120 (x6340 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (x4938 x5789))
(assert (x4938 x4400))
(assert (x4938 x768))
(assert (= (x1388 (x1022 x4400 x833)) (x1022 x4400 x833)))
(assert (x4938 x6925))
(assert (x4938 x425))
(assert (= (x6340 (x1896 x4598 x3197 x5234 x8550 x4437)) x8550))
(assert (=> (>= 10000 x929) (= 0 (x1388 x929))))
(assert (= (x3647 (x7622 x5857 x6884 x2985 x8141 x159 x2846)) x6884))
(assert (< 10000 (x3407 64 x4502 36)))
(assert (=> (<= x5888 10000) (= (x1388 x5888) 0)))
(assert (x4938 x1035))
(assert (= (and x4650 (not x1959)) x7472))
(assert (x4938 x7675))
(assert (= (and x7299 x254) x6323))
(assert (not (x8398 (x3407 64 x2019 12))))
(assert (x4938 x26))
(assert (= (x1388 (x3407 64 x5520 11)) (x3407 64 x5520 11)))
(assert (= (x6340 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) x6918))
(assert (=> (<= x3094 10000) (= (x1388 x3094) 0)))
(assert (= x37 (or (and x7022 x1758) x3191 x154 x7242 x7353 (and x526 x6232) x8088)))
(assert (x4938 x715))
(assert (x4938 x4286))
(assert (x4938 x2508))
(assert (not (x8398 (x1896 x5857 x4592 x7294 x5171 x2027))))
(assert (= x2339 (and x1620 (not x820))))
(assert (x4938 x991))
(assert (x4938 x3272))
(assert (x4938 x6709))
(assert (= (=> (and (= x5801 x6862) (= x6517 2) (= x1983 x4368) (= x6283 x514) (= x621 x3937) (= x3463 x584) (= x138 x3399) (= x3049 x8267) (= x7015 x7374) (= 0 x4023) (= x201 x6013) (= x2850 x1433) (= x794 x5098) (= x137 x2331) (= x6717 x8298) (= x3995 x4675) (= x4675 (x1066 255 x6289))) x281) x1945))
(assert (x4938 x1116))
(assert (x4938 x998))
(assert (= (x1896 x4809 x2199 x4831 x3620 x4599) (x1388 (x1896 x4809 x2199 x4831 x3620 x4599))))
(assert (x4938 x5719))
(assert (x4938 x7734))
(assert (x4938 x6989))
(assert (x4938 x561))
(assert (x4938 x5485))
(assert (x4938 x7257))
(assert (= (and (not x3223) x6781) x6585))
(assert (= x5910 (=> (and (or (not x1082) x1082) (= x1082 (= 0 x8054))) x2357)))
(assert (x4938 x3060))
(assert (= x6445 (x3647 (x1022 32 x6445))))
(assert (= (or (and x3678 x7194) (and x3223 x6781) (and x1219 x1686)) x4658))
(assert (x4938 x5673))
(assert (x4938 x8389))
(assert (x4938 x2547))
(assert (x4938 x6390))
(assert (x4938 x2942))
(assert (= (and x5854 x1078) x5436))
(assert (< (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x7622 x7277 x828 x6423 x4655 x7851 x163) 10000))
(assert (x4938 x6881))
(assert (x4938 x7746))
(assert (= x6095 x6817))
(assert (= (x5419 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536)) x5756))
(assert (x4938 x4151))
(assert (x4938 x591))
(assert (=> (<= x1133 10000) (= 0 (x1388 x1133))))
(assert (x4938 x1381))
(assert (= (x1688 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)) x5392))
(assert (x4938 x3653))
(assert (= x1202 (x3647 (x3407 64 x1202 100))))
(assert (x4938 x3112))
(assert (= x6470 (and (not x3434) x5259)))
(assert (x4938 x7385))
(assert (not (x8398 (x1896 x3989 x7933 x2869 x5737 x214))))
(assert (x4938 x4721))
(assert (=> (<= x4091 10000) (= (x1388 x4091) 0)))
(assert (= (or (and x4539 x6874) (and x8414 x1026) (and x1932 x3028)) x7242))
(assert (x4938 x5527))
(assert (x150 x5274))
(assert (= (or x4954 x6182) x8466))
(assert (= (and (not x5193) x4337) x7024))
(assert (= (or x7279 x8331) x1234))
(assert (x4938 x1554))
(assert (= 64 (x3116 (x3407 64 x1842 0))))
(assert (x4938 x7309))
(assert (x4938 x2122))
(assert (x4938 x613))
(assert (x4938 x6003))
(assert (x4938 x710))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)))
(assert (x4938 x2334))
(assert (= x3438 (or x7795 (and x6707 (not x7590)))))
(assert (x4938 x4969))
(assert (= x3236 (and x5558 x6612)))
(assert (x4938 x4517))
(assert (x4938 x620))
(assert (x4938 x8433))
(assert (x4938 x2301))
(assert (not (x8398 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (x4938 x6595))
(assert (x4938 x1232))
(assert (x4938 x7179))
(assert (= (x701 (x3407 64 x1202 100)) 100))
(assert (= x2229 (x3647 (x3407 x4159 x2229 x5804))))
(assert (x4938 x3000))
(assert (= 6 (x701 (x3407 64 x7610 6))))
(assert (< (x3407 64 x3533 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1612 (x6340 (x1896 x206 x3365 x1392 x1612 x2988))))
(assert (x4938 x828))
(assert (= x6671 (=> (and (= x2959 x7448) (= x301 x88) (= x5123 x5817) (= x6548 x1462) (= x8248 x5471) (= x7995 x3947) (= x1629 x4841) (= x6523 x5423) (= x5017 x5309) (= x5067 x2232) (= x5148 x484) (= x1450 x8140) (= x7727 x7557) (= x7450 x2181)) x8499)))
(assert (= x4663 (and x869 (not x6217))))
(assert (= (and x4633 (not x2135)) x4348))
(assert (= x707 (=> (and (= x3248 x4695) (= x2926 x6420) (= x2445 x5291) (= x2445 (x1066 255 x6471)) (= x4146 x7828) (= x8116 x3481) (= x1482 x685) (= x5241 x4984) (= x3900 x5897) (= true x5359) (= 2 x7072) (= false x4346) (= x7975 0) (= x4033 0) (= x730 x6153) (= x5681 x7048) (= x6172 x8426) (= x1842 x4745) (= x2475 x4982)) x6465)))
(assert (x4938 x5934))
(assert (x4938 x8120))
(assert (= x947 (or x2734 x538)))
(assert (x150 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x704 x8055))
(assert (= x5859 (and x5560 (not x5941))))
(assert (x4938 x7800))
(assert (= (=> (and (= (= x1272 0) x2948) (or x2948 (not x2948))) x287) x5610))
(assert (= (x6568 (x1896 x1389 x4433 x5950 x5294 x6030)) x6030))
(assert (x4938 x5767))
(assert (x4938 x8195))
(assert (=> (>= 10000 x6653) (= 0 (x1388 x6653))))
(assert (= (=> (and (or (and (and (= x4501 x3142) (= x6243 x6637) (= x7793 x6693) (= x1254 x3409) (= x7853 x5900)) (not x3295)) (and x3295 (and (= x6243 x6637) (= x6693 x7793) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3513 x14)) (>= x8147 0) (= x5900 x7853) (= (ite (= x7793 0) x1714 0) x3513) (= x3409 x1254) (= x3142 x4501) (= x8147 (+ x14 x3513)) (= (x1239 x3481) x7652) (= x14 (x8413 x1579)) (= x8147 x6881) (<= x8147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (- x7652 x3513) x38)))) (= (= 0 x7793) x3295)) x6062) x4694))
(assert (x4938 x1032))
(assert (x4938 x1331))
(assert (x4938 x1107))
(assert (x4938 x2597))
(assert (x4938 x2835))
(assert (= x2608 (and x261 x7804)))
(assert (x4938 x5516))
(assert (x4938 x6666))
(assert (=> (<= x5978 10000) (= (x1388 x5978) 0)))
(assert (x4938 x6965))
(assert (x4938 x7063))
(assert (=> (<= x2319 10000) (= 0 (x1388 x2319))))
(assert (x4938 x4826))
(assert (x4938 x6399))
(assert (= (x1388 (x1896 x1389 x4433 x5950 x5294 x6030)) (x1896 x1389 x4433 x5950 x5294 x6030)))
(assert (< (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3593 10000) (= (x1388 x3593) 0)))
(assert (x4938 x3252))
(assert (= 0 (x1388 1766847064778384329583297500742918515827483896875618958121606201292619776)))
(assert (x4938 x5541))
(assert (x4938 x3437))
(assert (x4938 x484))
(assert (= (and (not x1970) x7909) x1719))
(assert (x4938 x2504))
(assert (x4938 x4157))
(assert (x4938 x7418))
(assert (x4938 x2917))
(assert (= x1454 (=> (and (= (= 0 x5306) x6417) (or (not x6417) x6417)) x6956)))
(assert (=> (<= x4068 10000) (= 0 (x1388 x4068))))
(assert (x4938 x3142))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x3651 x633 x7276)))
(assert (= (and (not x1095) x3975) x5308))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (not (x8398 (x7087 x3989 x5981 x1922 x4627))))
(assert (not (x8398 (x3407 64 x7610 6))))
(assert (x4938 x4490))
(assert (=> (>= 10000 x4268) (= 0 (x1388 x4268))))
(assert (x4938 x2920))
(assert (x4938 x5641))
(assert (=> (>= 10000 x26) (= (x1388 x26) 0)))
(assert (x4938 x8243))
(assert (x4485 x4948))
(assert (x4938 x7064))
(assert (x4938 x3231))
(assert (not (x8398 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (= x27 x7287))
(assert (= (x3647 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)) x8304))
(assert (= (x1388 (x3407 64 x3228 2)) (x3407 64 x3228 2)))
(assert (x4938 x6489))
(assert (x4938 x7803))
(assert (x4938 x301))
(assert (= (or x6105 (and x4641 (not x528))) x31))
(assert (= (or x7710 x953) x1833))
(assert (> (x3407 64 x6604 12) 10000))
(assert (x4938 x6808))
(assert (x4938 x6469))
(assert (x4938 x211))
(assert (= (x6340 (x1896 x3989 x7933 x2869 x5737 x214)) x5737))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x4598 x663 x6206 x1584 x7317 x3231)))
(assert (x4938 x6455))
(assert (= x515 (not (and (= (x6444 128) x5626) (= x2360 true) (= x7654 0) (= false x5141) (= 0 x1139) (= x2663 true) (= x2160 0) (= x2649 0) (= false x6508) (= x7272 true) (= false x2175) (= x3140 true) (= x331 false) (= x5626 0) (= x2363 false) (= x4122 true) (= false x1951) (= x1117 0) (= false x3640) (= true x5464) (= 0 x4945) (= false x5133)))))
(assert (= x3036 (and x3051 (not x6347))))
(assert (x4938 x2893))
(assert (x4938 x3599))
(assert (=> (>= 10000 x2128) (= (x1388 x2128) 0)))
(assert (x4938 x3939))
(assert (x4938 x6590))
(assert (= (x3116 (x3407 x2726 x235 x5998)) x2726))
(assert (x4938 x8497))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639773) 0))
(assert (x4938 x2207))
(assert (< 10000 (x3407 64 x4706 7)))
(assert (= x6838 (x6568 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (= x6596 (and x7645 x103)))
(assert (= x508 (=> (and (and (= x5760 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3924)) (= (x2230 (- x1710 x5541)) x2776) (= x491 (x273 x5553)) (= x7848 (< 0 x491)) (= (x7100 (+ x1852 32)) x7461) (= (x7100 (+ x6007 31)) x3924) (= (x7100 (+ x6007 x6938)) x4498) (= x1710 (x7100 (+ x6938 x5760)))) (or (and (and (or (and (and (or (not x5229) (and (and (= (< 96 x491) x4902) (or (not x4902) (and (>= 128 x491) x4902))) x5229)) (= (< 64 x491) x5229)) x4123) (not x4123)) (= (> x491 32) x4123)) x7848) (not x7848))) x1063)))
(assert (= (and x8006 (not x269)) x7232))
(assert (x4938 x4974))
(assert (=> (>= 10000 x7582) (= 0 (x1388 x7582))))
(assert (x4938 x8556))
(assert (x4938 x7620))
(assert (x3670 x3643))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= (x701 (x3407 64 x4889 (ite (>= 32 x3989) x2070 (ite (>= 64 x3989) x1013 (ite (<= x3989 96) x8488 (ite (<= x3989 128) x7028 (ite (<= x3989 160) x801 (ite (<= x3989 192) x6233 x449)))))))) (ite (<= x3989 32) x2070 (ite (>= 64 x3989) x1013 (ite (>= 96 x3989) x8488 (ite (>= 128 x3989) x7028 (ite (<= x3989 160) x801 (ite (>= 192 x3989) x6233 x449))))))))
(assert (x4938 x8568))
(assert (x4938 x2517))
(assert (=> (>= 10000 x7441) (= 0 (x1388 x7441))))
(assert (x4938 x6637))
(assert (= x2003 (or x5984 (and x1463 (not x2948)))))
(assert (= 64 (x3116 (x3407 64 x1859 100))))
(assert (x4938 x2037))
(assert (< (x1896 x1389 x4433 x5950 x5294 x6030) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3407 64 x8340 2) (x1388 (x3407 64 x8340 2))))
(assert (x4938 x6199))
(assert (x4938 x4698))
(assert (x4938 x6541))
(assert (= x4524 (x6568 (x1896 x6541 x6699 x7203 x7803 x4524))))
(assert (x4938 x6911))
(assert (= (and (not x4265) x328) x8362))
(assert (x4938 x2257))
(assert (= x1606 x6733))
(assert (x4938 x5065))
(assert (x4938 x4924))
(assert (= x6708 (=> (and (= x3909 2) (= x4984 x1257) (= x2926 x2321) (= x3900 x1056) (= x7471 0) (= (x1066 255 x6471) x3929) (= x3929 x8043) (= x7657 x1313)) x8246)))
(assert (=> (>= 10000 x7310) (= (x1388 x7310) 0)))
(assert (= (x1388 (x3407 x3224 x5218 x6215)) (x3407 x3224 x5218 x6215)))
(assert (< 10000 (x7087 x4809 x1858 x5832 x2909)))
(assert (x4938 x3355))
(assert (x4938 x1931))
(assert (x704 x113))
(assert (x4938 x6918))
(assert (x4938 x3973))
(assert (x4938 x7991))
(assert (x4938 x5766))
(assert (= x1620 (and x4348 x7865)))
(assert (= (x1388 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)))
(assert (=> (<= x7336 10000) (= 0 (x1388 x7336))))
(assert (x4938 x5472))
(assert (x4938 x3669))
(assert (= (and (not x2234) x6596) x7240))
(assert (x4938 x5647))
(assert (x4938 x89))
(assert (x4938 x7054))
(assert (= x729 (or x1366 x5199)))
(assert (x4938 x6971))
(assert (< 10000 (x1022 32 x7122)))
(assert (= (and x1151 x429) x5960))
(assert (= x971 (=> (and (= x8267 x4980) (= x7374 x1543) (= x5098 x2409) (= x5801 x2628) (= 0 x2343) (= x77 x6283) (= x768 x2850) (= x1516 x621) (= x584 x6019) (= x138 x1252) (= x2331 x2579) (= x1201 2) (= (x1066 255 x5901) x1880) (= x4796 x4368) (= x1880 x8446) (= x6582 x6222) (= x6717 x5587)) x1791)))
(assert (x4938 x1567))
(assert (=> (>= 10000 x214) (= (x1388 x214) 0)))
(assert (x4938 x8266))
(assert (x4938 x8217))
(assert (x4938 x1491))
(assert (x4938 x4555))
(assert (= 7 (x701 (x3407 64 x4706 7))))
(assert (= (and x7957 (not x4637)) x5558))
(assert (< (x1022 x2726 x3440) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8141))
(assert (= (x3116 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)) x4159))
(assert (< 10000 (x7622 x206 x130 x7601 x4255 x4343 x6882)))
(assert (= x7683 (x3647 (x7622 x3224 x7683 x1344 x5037 x3808 x8369))))
(assert (= (or (and x6327 x455) (and x2335 x1053) (and x2311 x8495) (and x2149 x1492) (and x6347 x3051) (and x2013 x7205) (and x7258 x8174) (and x2462 x1354) (and x5930 x8501)) x4758))
(assert (=> (>= 10000 x4925) (= 0 (x1388 x4925))))
(assert (= x1186 (and x7551 (not x7383))))
(assert (= x6425 (=> (and (= x6086 (x7100 (+ 32 x5553))) (= x7920 (> x7269 0)) (= x4394 (ite (< 150 x4703) 150 x4703))) (and (=> (and (not x7920) (and (or (and x6009 (and (or (and (and (and (= x2619 (x7100 (+ x4427 32))) (= x424 (< 64 x6041)) (= x8199 (x3946 x2619)) (= x5917 (x7100 (+ x5541 32)))) (or (and x424 (and (or (not x8154) (and x8154 (and (= x2492 (x7100 (+ 96 x4427))) (<= x6041 128) (= (x7100 (+ x5541 96)) x2815) (= x5088 (x1691 x2492))))) (and (= x8154 (< 96 x6041)) (= x7191 (x7100 (+ 64 x4427))) (= x318 (x7100 (+ 64 x5541))) (= x2196 (x1094 x7191))))) (not x424))) x6279) (not x6279)) (and (= x6279 (< 32 x6041)) (= (x2757 x4427) x7877)))) (not x6009)) (and (= x2985 (x2757 x3201)) (= x444 (x7100 (+ x3539 96))) (= x2846 (x2757 x2044)) (= x7234 (x7100 (+ x3539 64))) (= (x7100 (+ x3539 96)) x4084) (= x159 (x2757 x8373)) (= (x7100 (+ x3539 32)) x4610) (= x7485 (x7100 (+ x3539 64))) (= x2730 (x2757 x1633)) (= x319 (x7100 (+ 160 x3539))) (= (x7100 (+ 160 x3539)) x717) (= x1513 (x7100 (+ 32 x3539))) (= (x7100 (+ x3539 32)) x3201) (= (x2757 x3539) x3212) (= (x7100 (+ 128 x3539)) x2044) (= x7430 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)) (= (x2757 x444) x8384) (= x3504 (x3407 x5857 x3212 x3321)) (= x3208 (x7100 (+ 64 x3539))) (= (x7100 (+ 64 x3539)) x1633) (= x7821 (x1896 x5857 x4592 x7294 x5171 x2027)) (= (x7100 (+ x3539 96)) x8373) (= x2027 (x2757 x4084)) (= x1473 (x2757 x6207)) (= (x2757 x7391) x6199) (= x3205 (x2757 x4610)) (= (x2757 x3539) x6884) (= x7352 (x2757 x5031)) (= x5623 (x7087 x5857 x604 x2406 x7313)) (= (x2757 x1513) x2406) (= x6207 (x7100 (+ 32 x3539))) (= x4662 (x2757 x1534)) (= (x3407 64 x3533 7) x1443) (= (x7622 x5857 x6884 x2985 x8141 x159 x2846) x3820) (= (x7100 (+ 128 x3539)) x7391) (= (x1022 x5857 x8169) x706) (= (x2757 x3539) x8169) (= (x2757 x3208) x5171) (= x5031 (x7100 (+ x3539 192))) (= (x7100 (+ 128 x3539)) x1534) (>= 224 x5857) (= (x2757 x3539) x4592) (= (x2757 x7485) x5973) (= x1586 (x7100 (+ 32 x3539))) (= x6041 (x2757 x5569)) (= x3321 (x2757 x3266)) (= (x7100 (+ x3539 64)) x1255) (= x8141 (x2757 x7234)) (= (x2757 x319) x1258) (= (x2757 x717) x450) (= (x7100 (+ 32 x3539)) x3266) (= x5857 (x2757 x5493)) (= x6929 (x2757 x3539)) (= x8460 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) (= (x2757 x481) x2001) (= x7313 (x2757 x1255)) (= (x2757 x1586) x7294) (= x6009 (< 0 x6041)) (= (ite (= x5857 0) x6992 (ite (>= 32 x5857) x706 (ite (>= 64 x5857) x3504 (ite (<= x5857 96) x5623 (ite (<= x5857 128) x7821 (ite (<= x5857 160) x3820 (ite (>= 192 x5857) x7430 x8460))))))) x7301) (= x604 (x2757 x3539)) (= (x2757 x3539) x2893) (= (x7100 (+ x3539 96)) x481) (= (x4958 0) x6992)))) x1143) (=> x7920 x939)))))
(assert (x4938 x6439))
(assert (= x4037 (x701 (x1896 x5478 x5582 x4037 x5940 x3546))))
(assert (x4938 x736))
(assert (= (or (and x2999 x71) (and x2823 x7481)) x5474))
(assert (= x8278 (x701 (x1896 x2454 x4147 x8278 x3885 x5310))))
(assert (x4938 x343))
(assert (= (x1896 x3479 x7206 x3209 x7441 x6838) (x1388 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (x4938 x9))
(assert (x150 x7574))
(assert (x4938 x1291))
(assert (x4938 x380))
(assert (= (x3647 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) x5174))
(assert (= x1100 (or x2553 x6066)))
(assert (=> (>= 10000 x6541) (= 0 (x1388 x6541))))
(assert (= x2929 (x6340 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (x4938 x1635))
(assert (x4938 x109))
(assert (x4938 x7988))
(assert (x4938 x6941))
(assert (x4938 x2666))
(assert (x4938 x5937))
(assert (not (x8398 (x3407 64 x2140 10))))
(assert (= x5259 (and x2101 x6633)))
(assert (x4938 x2562))
(assert (= x6091 (and (not x7022) x1758)))
(assert (x4938 x2732))
(assert (= x7168 (and x8423 (not x6378))))
(assert (x4938 x5422))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)))
(assert (x4938 x3297))
(assert (=> (<= x1064 10000) (= (x1388 x1064) 0)))
(assert (= (or x7823 x2498) x5297))
(assert (= (=> (= x3123 (= x3297 0)) (and (=> (and (not x3123) (and (= x689 x3704) (= x2344 x1759) (= x5747 x2301) (= x5121 x978) (= x7838 x5521) (= x1203 x4741) (= x2602 x1475) (= x6620 x3517) (= x7380 x6851) (= x8433 x4606) (= x8062 x1645) (= x2713 x2519) (= x4538 x3745))) x1296) (=> (and (and (= x2133 x5801) (= x4368 x4010) (= x1927 x621) (= x2126 x6283) (= false x1174) (= x4066 x8267) (= x5098 x6331) (= x8496 true) (= x6168 0) (= x7078 x584) (= x6291 x2331) (= x1991 x138) (= x2398 x2850) (= x7374 x307) (= x661 x6676) (= x5099 x6717) (= 2 x3339)) x3123) x5672))) x5818))
(assert (= 64 (x3116 (x3407 64 x5520 11))))
(assert (=> (<= x5287 10000) (= (x1388 x5287) 0)))
(assert (= (=> (and (= x3920 false) (= x1179 0) (= x8429 true)) x6329) x8274))
(assert (= x5855 (or x2093 x3721)))
(assert (= (x1388 57896044618658097711785492504343953926634992332820282019728792003956) 0))
(assert (= x7808 (x6340 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (x4938 x8476))
(assert (x4938 x6364))
(assert (x4938 x6647))
(assert (x4938 x7450))
(assert (not (x8398 (x3407 64 x1859 100))))
(assert (= x4744 (=> (and (= x8522 (= x5685 0)) (or x8522 (not x8522))) x4234)))
(assert (x4938 x1734))
(assert (x4938 x6372))
(assert (= (x5419 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)) x6998))
(assert (x4938 x4792))
(assert (=> (<= x3865 10000) (= 0 (x1388 x3865))))
(assert (= 10 (x701 (x3407 64 x2140 10))))
(assert (x4938 x4559))
(assert (x4938 x6292))
(assert (x4938 x2456))
(assert (= (and x1449 x3358) x2342))
(assert (=> (<= x8374 10000) (= 0 (x1388 x8374))))
(assert (x4938 x6466))
(assert (= x4159 (x3116 (x1022 x4159 x2208))))
(assert (x4938 x3887))
(assert (=> (<= x6162 10000) (= (x1388 x6162) 0)))
(assert (= x2117 (and x3547 x6191)))
(assert (x4938 x601))
(assert (not (x8398 (x3407 64 x4502 36))))
(assert (= (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890) (x1388 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890))))
(assert (x8398 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (= 64 (x3116 (x3407 64 x8340 36))))
(assert (x4938 x5226))
(assert (=> (>= 10000 x8359) (= 0 (x1388 x8359))))
(assert (x4938 x8066))
(assert (=> (>= 10000 x621) (= 0 (x1388 x621))))
(assert (x4938 x1139))
(assert (x4938 x341))
(assert (not (x8398 (x7087 x3224 x8081 x5985 x4105))))
(assert (= (and x2772 x3181) x4155))
(assert (x4938 x4368))
(assert (x4938 x1302))
(assert (x4938 x3648))
(assert (x4938 x7297))
(assert (=> (>= 10000 x7610) (= 0 (x1388 x7610))))
(assert (x4938 x6208))
(assert (> (x3407 64 x7048 5) 10000))
(assert (= x4078 (x3647 (x7622 x2726 x4078 x2312 x1794 x4185 x5530))))
(assert (x4938 x1088))
(assert (= x7246 (and x8269 (not x3061))))
(assert (x4938 x7627))
(assert (= (x3116 (x7087 x3479 x7029 x183 x5058)) x3479))
(assert (= x6541 (x3116 (x7087 x6541 x7752 x8107 x2402))))
(assert (x4938 x753))
(assert (x4938 x514))
(assert (= x6156 (and (not x4219) x5228)))
(assert (= (or x4403 x6587) x1142))
(assert (= x7277 (x3116 (x1896 x7277 x2481 x3415 x960 x8255))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x4400 x833)))
(assert (= (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352) (x1388 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352))))
(assert (= x4849 (and x1882 x52)))
(assert (= x7436 (x6340 (x7622 x3989 x2981 x6000 x7436 x7177 x1427))))
(assert (not (x8398 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753))))
(assert (not (x8398 (x1022 x5478 x42))))
(assert (x4938 x2383))
(assert (=> (<= x2909 10000) (= (x1388 x2909) 0)))
(assert (x4938 x6862))
(assert (x4938 x3198))
(assert (x4938 x5386))
(assert (= x1245 (or x2946 x4193 x5474 x3113 x7619)))
(assert (x4938 x647))
(assert (< (x7087 x1389 x4115 x5007 x2944) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2001 (x6568 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258))))
(assert (= (and x6378 x8423) x1919))
(assert (=> (>= 10000 x6206) (= 0 (x1388 x6206))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3822 36)))
(assert (x4938 x5581))
(assert (= x4516 (=> (and (= x3409 x5897) (= (x1066 255 x6471) x412) (= x4501 x412) (= x6243 x5241) (= 2 x1624) (= x6164 false) (= x6621 true) (= x7853 x6420) (= x7793 0)) x4694)))
(assert (x4938 x4433))
(assert (x4938 x1744))
(assert (= x2096 (x3647 (x3407 x5478 x2096 x4048))))
(assert (x4938 x7344))
(assert (= x1644 (x3647 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (=> (<= x7304 10000) (= 0 (x1388 x7304))))
(assert (x4938 x964))
(assert (=> (<= x4400 10000) (= (x1388 x4400) 0)))
(assert (=> (<= x2083 10000) (= 0 (x1388 x2083))))
(assert (x4938 x444))
(assert (x4938 x1531))
(assert (x150 x7634))
(assert (=> (>= 10000 x4463) (= 0 (x1388 x4463))))
(assert (x4938 x4775))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x4159 x2229 x5804)))
(assert (= (x3116 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)) x6088))
(assert (= (x1388 (x1896 x3989 x7933 x2869 x5737 x214)) (x1896 x3989 x7933 x2869 x5737 x214)))
(assert (not x7044))
(assert (x4938 x713))
(assert (= (x2341 x3651 x8300 x807 x3137 x668 x738 x4176) (x1388 (x2341 x3651 x8300 x807 x3137 x668 x738 x4176))))
(assert (= (x3116 (x3407 64 x2019 12)) 64))
(assert (= 12 (x701 (x3407 64 x7195 12))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1232 (ite (>= 32 x6541) x1119 (ite (<= x6541 64) x7379 (ite (<= x6541 96) x7801 (ite (>= 128 x6541) x8520 (ite (<= x6541 160) x7562 (ite (>= 192 x6541) x5591 x6376)))))))))
(assert (x4938 x1187))
(assert (= (x1388 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)))
(assert (= x742 (=> (and (= false x7030) (= 0 x8530) (= x2410 true)) x255)))
(assert (x4938 x6435))
(assert (> (x3407 64 x3138 6) 10000))
(assert (x4938 x4777))
(assert (= (and x837 x7335) x128))
(assert (=> (>= 10000 x1223) (= 0 (x1388 x1223))))
(assert (not (x8398 (x7622 x3651 x6841 x2084 x4642 x4462 x3445))))
(assert (x150 x7656))
(assert (=> (>= 10000 x6699) (= (x1388 x6699) 0)))
(assert (not (x8398 (x7087 x6088 x7455 x5442 x6835))))
(assert (= (and x2146 (not x5829)) x4577))
(assert (x4938 x1674))
(assert (=> (<= x3159 10000) (= 0 (x1388 x3159))))
(assert (= x1195 (and (not x3844) x7970)))
(assert (x4938 x6663))
(assert (= x7689 (and x1195 (not x5646))))
(assert (= (or x5621 x8302) x3508))
(assert (x4938 x5391))
(assert (x4938 x4645))
(assert (= x29 (=> (and (= x4870 x5528) (= x3529 x6372) (= x2609 x3119) (= x5225 x3237) (= x6241 x6915) (= x7117 x6542) (= x5685 1) (= x5245 x8461) (= x4475 0) (= x3260 x44) (= x7164 x1018) (= x607 x5764) (= x3082 x4619) (= x1814 x964) (= x6842 x4001)) x4744)))
(assert (= (and x5903 x7987) x6248))
(assert (< 10000 (x7087 x206 x7682 x314 x3818)))
(assert (= (x1388 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)))
(assert (= (or (and x394 (not x6193)) (and (not x1608) x6260)) x6507))
(assert (> (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968) 10000))
(assert (= x7199 (x3116 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (= (x6340 (x7622 x6213 x8556 x4777 x3164 x3734 x5287)) x3164))
(assert (= 0 (x1388 106705613605932439001713296114446454776331749937047859905631657259250407702528)))
(assert (= x5973 (x6340 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352))))
(assert (x4938 x3488))
(assert (x4938 x5642))
(assert (x4938 x3505))
(assert (x4938 x2198))
(assert (=> (<= x3597 10000) (= 0 (x1388 x3597))))
(assert (x4938 x576))
(assert (x4938 x7797))
(assert (= 7 (x701 (x3407 64 x1891 7))))
(assert (x4938 x8116))
(assert (x4938 x7164))
(assert (= x8507 (x3647 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291))))
(assert (= x7673 (and x1919 x4912)))
(assert (= (=> (and (= (x1066 255 x3709) x7635) (= true x1685) (= x92 0) (= x4687 2) (= x41 x3572) (= x7635 x3869) (= x1301 false) (= x6033 x1081) (= x8427 x140)) x5781) x6817))
(assert (=> (>= 10000 x5385) (= 0 (x1388 x5385))))
(assert (=> (<= x2096 10000) (= (x1388 x2096) 0)))
(assert (> (x3407 64 x239 100) 10000))
(assert (x4938 x8262))
(assert (= x5849 (and x7368 (not x2116))))
(assert (x4938 x1644))
(assert (x4938 x3227))
(assert (= (and x3949 x6025) x3028))
(assert (x4938 x8152))
(assert (x4938 x438))
(assert (x4938 x1983))
(assert (x4938 x2226))
(assert (= x394 (and x1219 (not x1686))))
(assert (=> (>= 10000 x7076) (= 0 (x1388 x7076))))
(assert (x4938 x1755))
(assert (x4938 x865))
(assert (x4938 x8561))
(assert (x4938 x5001))
(assert (x4938 x2566))
(assert (> (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872) 10000))
(assert (x4938 x442))
(assert (= x3263 (and x4900 x2813)))
(assert (= x3114 (x3647 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (x4938 x7334))
(assert (x4938 x6106))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x5478 x5582 x4037 x5940 x3546)))
(assert (not (x8398 (x1022 x6541 x3112))))
(assert (x4938 x5587))
(assert (= (x555 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)) x4016))
(assert (x4938 x4981))
(assert (x4938 x5777))
(assert (x4938 x1191))
(assert (x4938 x314))
(assert (= x1579 (x3647 (x3407 64 x1579 2))))
(assert (= (x701 (x1896 x6088 x2440 x5482 x1969 x6350)) x5482))
(assert (x4938 x3078))
(assert (x4938 x6266))
(assert (x4938 x1103))
(assert (= (x6568 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) x7076))
(assert (x150 x5750))
(assert (x4938 x4779))
(assert (x8398 34591783479076665078880830389440322436311164112910831269305739813291000201216))
(assert (= (x3647 (x7622 x2454 x7378 x3190 x5182 x1064 x4091)) x7378))
(assert (=> (<= x685 10000) (= 0 (x1388 x685))))
(assert (x4938 x7655))
(assert (x4938 x96))
(assert (x4938 x7995))
(assert (x4938 x6303))
(assert (=> (<= x8524 10000) (= (x1388 x8524) 0)))
(assert (=> (<= x1810 10000) (= (x1388 x1810) 0)))
(assert (= (and (not x1529) x2420) x390))
(assert (= x2714 (x6340 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872))))
(assert (= (x3647 (x7622 x6541 x4268 x7403 x8120 x4393 x5428)) x4268))
(assert (x4938 x6943))
(assert (x4938 x627))
(assert (x4485 x6418))
(assert (x4938 x2811))
(assert (= x3718 (and x8379 x3052)))
(assert (= (x701 (x3407 x3479 x2164 x2366)) x2366))
(assert (= (and (not x4313) x3768) x8383))
(assert (x4938 x2235))
(assert (x4938 x5253))
(assert (x4938 x5489))
(assert (= x1606 (=> (and (= x1842 x566) (= x2926 x6224) (= x3906 2) (= x685 x8376) (= x576 x1298) (= x5156 0) (= x4982 x4355) (= x6696 true) (= x2207 x4984) (= x6153 x6984) (= false x5462) (= (x1066 255 x3709) x1298) (= x8116 x5200) (= x7828 x6822) (= x4828 x7048) (= x3900 x2209) (= x4695 x2307) (= x6979 x6172) (= x2859 0)) x1706)))
(assert (x4938 x1832))
(assert (= (x6568 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x1133))
(assert (= (and x3934 x1137) x2408))
(assert (= (and x5257 x7774) x254))
(assert (x4938 x3888))
(assert (not (x8398 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (x4938 x2770))
(assert (x4938 x4534))
(assert (x4938 x7048))
(assert (=> (>= 10000 x8482) (= 0 (x1388 x8482))))
(assert (x4938 x6350))
(assert (x4938 x5220))
(assert (x4938 x3017))
(assert (x8398 2770781680))
(assert (x4938 x2614))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563)))
(assert (x4938 x7542))
(assert (< (x7622 x3479 x7884 x1998 x3288 x2864 x1503) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x150 x3021))
(assert (= (and x6787 (not x5453)) x4285))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1599 12)))
(assert (=> (>= 10000 x7436) (= 0 (x1388 x7436))))
(assert (x4938 x1058))
(assert (x8398 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (= x7524 (or x754 x7791)))
(assert (x8398 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (= x7957 (and x8174 (not x7258))))
(assert (=> (>= 10000 x7013) (= 0 (x1388 x7013))))
(assert (= 64 (x3116 (x3407 64 x6717 5))))
(assert (x4938 x794))
(assert (x4938 x6976))
(assert (x4938 x7730))
(assert (=> (>= 10000 x6138) (= (x1388 x6138) 0)))
(assert (x4938 x4676))
(assert (=> (>= 10000 x4754) (= 0 (x1388 x4754))))
(assert (x4938 x3299))
(assert (x704 x323))
(assert (x4938 x6170))
(assert (=> (>= 10000 x7734) (= (x1388 x7734) 0)))
(assert (= (x1388 (x7087 x206 x7682 x314 x3818)) (x7087 x206 x7682 x314 x3818)))
(assert (x4938 x8206))
(assert (x4938 x7165))
(assert (x4938 x1394))
(assert (x4938 x5014))
(assert (x8398 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x4938 x4106))
(assert (x4938 x5617))
(assert (x4938 x1824))
(assert (x4938 x3992))
(assert (= x2261 (or x5447 x7763)))
(assert (x4938 x5222))
(assert (x4938 x1453))
(assert (x4938 x5326))
(assert (x4938 x7989))
(assert (x4938 x8293))
(assert (= x7422 (and (not x4506) x4029)))
(assert (x4938 x6158))
(assert (= (x6568 (x1896 x206 x3365 x1392 x1612 x2988)) x2988))
(assert (x4938 x8030))
(assert (x4938 x304))
(assert (=> (>= 10000 x2001) (= (x1388 x2001) 0)))
(assert (x8398 29244376827073035548771643948814531551534385112760475998805679327281764368384))
(assert (x4938 x2095))
(assert (= (or (and x4742 (not x6053)) (and x2668 (not x2457)) (and (not x2655) x120) (and (not x436) x916) x7832) x7283))
(assert (= (x3407 64 x2876 36) (x1388 (x3407 64 x2876 36))))
(assert (= (x1388 x7375) (x1388 (+ 1 x7375))))
(assert (x4938 x3118))
(assert (x4938 x3072))
(assert (= (x5419 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) x8297))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6717 5)))
(assert (= (and (not x8296) x5240) x6727))
(assert (= (x1022 x6213 x863) (x1388 (x1022 x6213 x863))))
(assert (x4938 x5825))
(assert (x150 x4616))
(assert (x150 x4295))
(assert (= (x1388 (+ 1 x4836)) (x1388 x4836)))
(assert (x4938 x1011))
(assert (> (x3407 64 x4889 (ite (<= x3989 32) x2070 (ite (>= 64 x3989) x1013 (ite (<= x3989 96) x8488 (ite (<= x3989 128) x7028 (ite (<= x3989 160) x801 (ite (>= 192 x3989) x6233 x449))))))) 10000))
(assert (= (x1022 32 x6445) (x1388 (x1022 32 x6445))))
(assert (x4938 x5908))
(assert (=> (>= 10000 x7940) (= (x1388 x7940) 0)))
(assert (= x3871 (and x2123 x402)))
(assert (x4938 x1792))
(assert (x4938 x5345))
(assert (= (x701 (x7087 x206 x7682 x314 x3818)) x314))
(assert (= x4954 (and x4987 (not x2831))))
(assert (x4938 x3714))
(assert (> (x3407 64 x5504 36) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x4400 x4441 x7780 x8359 x6150)))
(assert (=> (<= x4559 10000) (= 0 (x1388 x4559))))
(assert (not (x8398 (x3407 64 x5351 11))))
(assert (= 12 (x701 (x3407 64 x6604 12))))
(assert (x4938 x8054))
(assert (x4938 x6165))
(assert (= x1867 (and x1135 x612)))
(assert (not (x8398 (x1022 x4400 x833))))
(assert (x4938 x3179))
(assert (x150 x476))
(assert (=> (<= x3616 10000) (= (x1388 x3616) 0)))
(assert (x4938 x1911))
(assert (x4938 x3569))
(assert (= x3559 (and x1241 x5265)))
(assert (x4938 x630))
(assert (not (x8398 (x3407 64 x8409 6))))
(assert (x4938 x906))
(assert (= x8085 (x6340 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (x4938 x2112))
(assert (x4938 x1414))
(assert (x4938 x1284))
(assert (=> (<= x3209 10000) (= 0 (x1388 x3209))))
(assert (= 0 (x1388 65535)))
(assert (x150 x6399))
(assert (=> (<= x880 10000) (= 0 (x1388 x880))))
(assert (= (x3116 (x3407 x4598 x4609 x1933)) x4598))
(assert (x4938 x6968))
(assert (x4938 x5295))
(assert (x4938 x3152))
(assert (= x1503 (x5419 (x7622 x3479 x7884 x1998 x3288 x2864 x1503))))
(assert (x4938 x8472))
(assert (< (x3407 64 x2644 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x2564))
(assert (x4938 x6014))
(assert (x4938 x5256))
(assert (= x6162 (x6340 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x4440 36)))
(assert (x4938 x6499))
(assert (= x4809 (x3116 (x7087 x4809 x1858 x5832 x2909))))
(assert (not (x8398 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (= x7451 (or (and x3092 x3189) (and x7564 x1332) (and x5008 x8443) (and x428 x5839) (and x7890 x90) (and x2025 x2298) (and x2162 x73) (and x6936 x4279) (and x691 x6409))))
(assert (= x247 (or x7735 x1213 x7024)))
(assert (= (x1688 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) x1291))
(assert (x4938 x5830))
(assert (= (=> (and (= x3473 (x1066 255 x415)) (= false x262) (= x457 2) (= x108 x5635) (= x8178 x3900) (= x6839 x4984) (= x2926 x5545) (= x1553 0) (= x8067 true) (= 2 x2865)) x2407) x5264))
(assert (= (and (not x1753) x3097) x6192))
(assert (x4938 x8042))
(assert (=> (<= x833 10000) (= (x1388 x833) 0)))
(assert (x4938 x1827))
(assert (x4938 x3037))
(assert (= 0 (x1388 51607134309459761954548520284799282329936326410793501951915747293203005440)))
(assert (x4938 x7199))
(assert (=> (>= 10000 x1392) (= (x1388 x1392) 0)))
(assert (x4938 x3197))
(assert (= (x701 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) x2083))
(assert (x4938 x3832))
(assert (x4938 x7013))
(assert (x4938 x3327))
(assert (x4938 x6146))
(assert (x4938 x4186))
(assert (x4938 x884))
(assert (= (x1388 (x1022 32 x7122)) (x1022 32 x7122)))
(assert (= x5427 (x1688 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427))))
(assert (= (and x6449 (not x4962)) x2421))
(assert (x4938 x7214))
(assert (=> (>= 10000 x163) (= (x1388 x163) 0)))
(assert (= (x3407 x4159 x2229 x5804) (x1388 (x3407 x4159 x2229 x5804))))
(assert (x4938 x4885))
(assert (x4938 x7596))
(assert (x4938 x3424))
(assert (= x659 (and (not x7356) x6870)))
(assert (x4938 x2292))
(assert (x4938 x3073))
(assert (=> (>= 10000 x8330) (= 0 (x1388 x8330))))
(assert (x4938 x3360))
(assert (x4938 x6244))
(assert (< (x3407 64 x7413 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x3402))
(assert (= 0 (x1388 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (x3670 x6399))
(assert (=> (>= 10000 x5647) (= (x1388 x5647) 0)))
(assert (x150 x5768))
(assert (= x5857 (x3116 (x7622 x5857 x6884 x2985 x8141 x159 x2846))))
(assert (not (x8398 (x1022 32 x7608))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x5857 x8169)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1256 11)))
(assert (= (and x4794 (not x2062)) x191))
(assert (=> (<= x1048 10000) (= (x1388 x1048) 0)))
(assert (=> (<= x3437 10000) (= 0 (x1388 x3437))))
(assert (= x441 (and x5640 (not x5249))))
(assert (x4938 x2904))
(assert (x4938 x929))
(assert (= (x5419 (x7622 x3989 x2981 x6000 x7436 x7177 x1427)) x1427))
(assert (= (x6340 (x1896 x5478 x5582 x4037 x5940 x3546)) x5940))
(assert (x4938 x6147))
(assert (= (and x3945 (not x1027)) x4261))
(assert (x4938 x1773))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x8409 6)))
(assert (x4938 x7609))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)))
(assert (= x633 (x3647 (x3407 x3651 x633 x7276))))
(assert (= x2119 (x3116 (x3407 x2119 x4246 x8011))))
(assert (x4938 x1484))
(assert (x4938 x791))
(assert (x4938 x8166))
(assert (= x4032 (or x1100 x1898)))
(assert (x4938 x2792))
(assert (x4938 x3933))
(assert (x4938 x7363))
(assert (= (and (not x4605) x6779) x1306))
(assert (not (x8398 (x7622 x4598 x663 x6206 x1584 x7317 x3231))))
(assert (x4938 x1612))
(assert (=> (>= 10000 x7294) (= (x1388 x7294) 0)))
(assert (= (=> (and (= x6291 x2331) (= false x4621) (= x1991 x138) (= x5098 x6331) (= x6676 x661) (= x4368 x4010) (= x4066 x8267) (= x2398 x2850) (= x5801 x2133) (= x4118 2) (= 0 x6168) (= true x8395) (= x307 x7374) (= x5099 x6717) (= x584 x7078) (= x2126 x6283) (= x621 x1927)) x5672) x2490))
(assert (< (x7087 x7277 x7748 x160 x2415) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x3625))
(assert (=> (<= x299 10000) (= (x1388 x299) 0)))
(assert (< 10000 (x3407 x4809 x2723 x5385)))
(assert (x4938 x1875))
(assert (x3670 x698))
(assert (x4938 x2305))
(assert (x4938 x6497))
(assert (x4938 x622))
(assert (= (x3407 64 1 x1120) (x1388 (x3407 64 1 x1120))))
(assert (x4938 x1132))
(assert (x4938 x5165))
(assert (= x4048 (x701 (x3407 x5478 x2096 x4048))))
(assert (= x6271 (and x5711 x387)))
(assert (x4938 x482))
(assert (= x1381 (x6568 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753))))
(assert (x4938 x2493))
(assert (x4938 x1858))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x206 x3365 x1392 x1612 x2988)))
(assert (= (x3647 (x3407 64 1 x1120)) 1))
(assert (x4938 x2968))
(assert (x4938 x4673))
(assert (x4938 x5795))
(assert (=> (>= 10000 x226) (= 0 (x1388 x226))))
(assert (x4938 x5978))
(assert (x4938 x1504))
(assert (=> (>= 10000 x8532) (= 0 (x1388 x8532))))
(assert (x4938 x749))
(assert (x4938 x11))
(assert (x4938 x5294))
(assert (< (x4958 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x4012))
(assert (= (x5419 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)) x3445))
(assert (=> (>= 10000 x210) (= 0 (x1388 x210))))
(assert (x4938 x1763))
(assert (=> (>= 10000 x5426) (= 0 (x1388 x5426))))
(assert (= x8076 (and x4247 (not x6010))))
(assert (x4938 x5171))
(assert (x4938 x1101))
(assert (=> (>= 10000 x3114) (= (x1388 x3114) 0)))
(assert (=> (<= x5628 10000) (= (x1388 x5628) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x1389 x5288 x1940)))
(assert (x4938 x6236))
(assert (x4938 x496))
(assert (x4938 x2924))
(assert (x4938 x4665))
(assert (=> (<= x2901 10000) (= 0 (x1388 x2901))))
(assert (x4938 x6850))
(assert (= (x3116 (x3407 64 x8340 2)) 64))
(assert (= (and x7641 (not x3632)) x7738))
(assert (= (=> (and (or (and (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639838) (>= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x7142) (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639773)) (= (x2230 (- x4000 x3611)) x268) (= (x7100 (+ x736 2)) x2473) (= x1262 (x3407 64 x5520 11)) (= (x2230 (- x5472 (mod (ite (> 32 x7616) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x8142) (= 0 x5136) (= x7824 (x7156 x8103)) (= (x2230 (- x268 32)) x3831) (= (x2230 (- x3611 x7142)) x5955) (= x736 (x7100 (+ 32 x3611))) (= (div x7824 2) x3000) (= x5472 (x1066 1 x7824)) (= x5055 (x7248 x1269)) (= x8103 (x3407 64 x6717 3)) (= (x7100 (+ x7142 32)) x7068) (= x5460 (> x8142 0)) (= x4000 (x7100 (+ 32 x2473))) (< x3611 x4000) (= x1269 (+ 2 x6853)) (= x3512 (x6128 x7750)) (= (x3407 64 x5520 11) x6853) (= x5937 (x7100 (+ x7068 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x7142) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x7142) (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639838)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x7142)) (= (+ 1 x4397) x7750) (< x7142 x3611) (= x4397 (x3407 64 x5520 11)) (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x5833 (x2230 (- x5955 32))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x7142) (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x7142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x7142))) (<= x7142 115792089237316195423570985008687907853269984665640564039457584007913129639933) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x7142) (= (ite (> x5472 0) x3000 (x1066 127 x3000)) x7616) (= x3611 (x7100 (+ x5937 32)))) (and (=> (and (and (>= x1662 1) (= x4531 (div (+ 31 x7616) 32)) (= (x7100 (+ x4000 (mod (+ x2861 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1662) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4000) (> x1662 x4000) (= (x7100 (+ x4000 32)) x5887) (= x2861 (* 32 x4531)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4000) (<= x4000 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (= 0 x7616) x1464)) x5460) (and (=> (and (not x1464) (= (< 31 x7616) x7077)) (and (=> (and (and (= (x7156 x8103) x5630) (= x5673 (div x5630 256)) (= (* x5673 256) x2066)) (not x7077)) x3344) (=> (and (and (and (= (+ 1 x7487) x470) (= x2559 (x7100 (+ x5887 32))) (= x7487 (x1022 32 x8103)) (= (> x4031 x2559) x3584) (= (x751 x7487) x2456) (= x4031 (x7100 (+ x5887 x7616)))) (or (and (and (not (> x4031 x5220)) (= (x7100 (+ 32 x2559)) x5220) (= (x751 x470) x2705)) x3584) (not x3584))) x7077) x8467))) (=> x1464 x3344))) (=> (and (not x5460) (and (= x340 36) (= true x593) (= x161 false))) x6463))) x735))
(assert (= (and (not x6749) x5547) x3953))
(assert (= (or (and x3165 x1740) (and x4191 x7495) (and x8410 x175)) x3191))
(assert (x4938 x6243))
(assert (x4938 x8550))
(assert (=> (<= x2406 10000) (= 0 (x1388 x2406))))
(assert (x4938 x6613))
(assert (= x3979 (and x6336 (not x7059))))
(assert (= x3209 (x701 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (x4938 x1944))
(assert (x4938 x1812))
(assert (x150 x5632))
(assert (= (x1388 x6083) (x1388 (+ x6083 1))))
(assert (=> (>= 10000 x5866) (= (x1388 x5866) 0)))
(assert (not (x8398 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323))))
(assert (= 36 (x701 (x3407 64 x1958 36))))
(assert (= (and (not x1917) x4290) x4199))
(assert (x4938 x5032))
(assert (x4938 x961))
(assert (= x3593 (x3647 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334))))
(assert (=> (>= 10000 x7992) (= 0 (x1388 x7992))))
(assert (not (x8398 (x3407 x4400 x530 x4750))))
(assert (=> (<= x499 10000) (= (x1388 x499) 0)))
(assert (= (x1388 107317874183463056701504662589741776198067464202343767264461527615735374807040) 0))
(assert (x4938 x6302))
(assert (= x5939 (x3647 (x1022 x1389 x5939))))
(assert (x4938 x2092))
(assert (x4938 x7947))
(assert (x4938 x7652))
(assert (=> (<= x2452 10000) (= (x1388 x2452) 0)))
(assert (= (=> (and (= x6331 x5098) (= false x153) (= x4010 x4368) (= x661 x6676) (= x1770 true) (= x1927 x621) (= 2 x4682) (= x138 x1991) (= x2398 x2850) (= x7374 x307) (= x6717 x5099) (= x584 x7078) (= x4066 x8267) (= x2126 x6283) (= x6291 x2331) (= 0 x6168) (= x5801 x2133)) x5672) x8207))
(assert (= (x6340 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) x463))
(assert (x4938 x4592))
(assert (x4938 x1079))
(assert (=> (>= 10000 x7474) (= (x1388 x7474) 0)))
(assert (x4938 x5917))
(assert (= (and (not x7968) x1913) x3379))
(assert (= (and x4641 x528) x6105))
(assert (= x2000 (and x4314 x5268)))
(assert (x4938 x3144))
(assert (=> (<= x5940 10000) (= 0 (x1388 x5940))))
(assert (x4938 x8390))
(assert (x4938 x4085))
(assert (x4546 x5750))
(assert (x4938 x4745))
(assert (x4938 x6551))
(assert (x4938 x4521))
(assert (= (x1388 (x3407 64 x6717 5)) (x3407 64 x6717 5)))
(assert (x4938 x513))
(assert (x4938 x3088))
(assert (x4938 x778))
(assert (x4938 x2775))
(assert (= (and x506 x2878) x8244))
(assert (x4938 x1352))
(assert (= (or x7347 x3084) x2390))
(assert (= (x7622 x4400 x1644 x2724 x7830 x2972 x3839) (x1388 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (= (x6340 (x1896 x7199 x4139 x2108 x7648 x2383)) x7648))
(assert (x4938 x7023))
(assert (x4938 x119))
(assert (x4938 x1888))
(assert (=> (>= 10000 x4809) (= 0 (x1388 x4809))))
(assert (= (x1388 (x3407 64 x6717 3)) (x3407 64 x6717 3)))
(assert (x4938 x3771))
(assert (x4938 x2959))
(assert (x8398 18446744073709551615))
(assert (x4938 x4519))
(assert (x4938 x633))
(assert (< (x3407 64 x2140 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5761))
(assert (= (x3116 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) x5478))
(assert (x4938 x3090))
(assert (not (x8398 (x3407 x3651 x633 x7276))))
(assert (x4938 x465))
(assert (x4938 x1656))
(assert (< 10000 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)))
(assert (= x5604 (and x1868 x610)))
(assert (= x2726 (x3116 (x7622 x2726 x4078 x2312 x1794 x4185 x5530))))
(assert (= (and x2989 (not x5899)) x3790))
(assert (x4938 x6162))
(assert (x4938 x530))
(assert (x4938 x159))
(assert (= x3112 (x3647 (x1022 x6541 x3112))))
(assert (= (and x7968 x1913) x4931))
(assert (= x7206 (x3647 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (x4938 x679))
(assert (x4938 x1254))
(assert (x4938 x4387))
(assert (=> (>= 10000 x4566) (= (x1388 x4566) 0)))
(assert (x4938 x371))
(assert (not (x8398 (x1022 x4598 x7006))))
(assert (< (x1896 x4809 x2199 x4831 x3620 x4599) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4379 (=> (and (or (and x2952 (and (and (= (x379 x6521) x1716) (= (< 32 x5065) x4672)) (or (and (and (or (and (and (and (= (x7100 (+ 64 x6521)) x3327) (= x7491 (x7100 (+ 64 x1771))) (= (< 96 x5065) x8447) (= x3881 (x452 x3327))) (or (not x8447) (and x8447 (and (= (x7100 (+ 96 x1771)) x3991) (<= x5065 128) (= x4810 (x7100 (+ x6521 96))) (= (x6924 x4810) x4045))))) x5187) (not x5187)) (and (= (x7423 x40) x881) (= x5485 (x7100 (+ x1771 32))) (= (x7100 (+ x6521 32)) x40) (= (< 64 x5065) x5187))) x4672) (not x4672)))) (not x2952)) (and (= (x7100 (+ 64 x6349)) x6665) (= (x7576 x6349) x8094) (= x3597 (x7576 x480)) (= x5182 (x7576 x4039)) (= (x7576 x4752) x6824) (= (x7100 (+ x6349 160)) x4673) (= x4390 (x3407 64 x1453 (ite (>= 32 x4159) x7718 (ite (<= x4159 64) x935 (ite (>= 96 x4159) x7440 (ite (<= x4159 128) x6983 (ite (<= x4159 160) x2778 (ite (>= 192 x4159) x1660 x3397)))))))) (= x3190 (x7576 x7816)) (= (x7576 x6349) x4147) (= x7940 (x7576 x8060)) (= x1172 (x7100 (+ 32 x6349))) (= (x7100 (+ 128 x6349)) x5773) (= x2103 (x7576 x6349)) (= (x7576 x3997) x5804) (= (x7576 x6349) x2923) (= x6512 (x3407 x2454 x2923 x2510)) (= (x7576 x3069) x3692) (= x7718 (x1022 x4159 x2208)) (= x2510 (x7576 x4182)) (= (x7576 x6349) x196) (= (x7100 (+ 128 x6349)) x2258) (= (x7100 (+ 64 x6349)) x4039) (= (x7100 (+ 96 x6349)) x7666) (= x1676 (x7576 x7171)) (= (x7576 x8403) x1064) (= x499 (x7576 x755)) (= x422 (x7100 (+ x7297 x6349))) (= x99 (x7100 (+ 64 x6349))) (= (x7576 x4293) x1414) (= x2617 (x7576 x7007)) (= (x7100 (+ x6349 128)) x1881) (= x4182 (x7100 (+ x6349 32))) (= x1059 (x7576 x2529)) (= x2229 (x7576 x6349)) (= (x4958 0) x5232) (= x2452 (x7576 x4534)) (= x6028 (x7100 (+ x6349 64))) (= x7171 (x7100 (+ x6349 32))) (= x8060 (x7100 (+ x6349 32))) (= (x7100 (+ x6349 96)) x8403) (= x1660 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)) (= (x1896 x2454 x4147 x8278 x3885 x5310) x227) (= (x7576 x1674) x5310) (= x1812 (x7100 (+ 32 x6349))) (= x8278 (x7576 x5383)) (= (x7100 (+ x422 32)) x4942) (= x3865 (x7576 x7655)) (= (x7100 (+ x4673 32)) x1771) (= x7655 (x7100 (+ 96 x6349))) (= (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138) x3397) (= (x2230 (- x4942 x6349)) x4159) (= x2454 (- x4159 32)) (= (x1896 x4159 x5486 x1676 x2617 x1395) x6983) (= x3885 (x7576 x6665)) (= x8143 (x7100 (+ x6349 64))) (= (x7576 x99) x1502) (= (x7100 (+ x6349 64)) x3625) (= (x7576 x1047) x1847) (= x5628 (x7576 x1340)) (= x7378 (x7576 x6349)) (= (x7576 x5773) x1223) (= (x7576 x1587) x7966) (= x3341 (x7576 x7666)) (= (x7576 x5384) x6138) (= x4752 (x7100 (+ x6349 32))) (= x2952 (> x5065 0)) (= (x7100 (+ x6349 x7297)) x8527) (= (x7576 x6349) x8304) (= x2208 (x7576 x6349)) (= x2176 (x7576 x6349)) (= x342 (x7576 x1172)) (= x7816 (x7100 (+ 32 x6349))) (= x5350 (x7576 x7991)) (= x3306 (x7576 x3625)) (= x4534 (x7100 (+ x6349 32))) (= x6683 (x1022 x2454 x196)) (<= x4159 224) (= x4091 (x7576 x1881)) (= x2778 (x7622 x4159 x3114 x2452 x1679 x3341 x8514)) (= x8514 (x7576 x2258)) (= (x7100 (+ 32 x6349)) x4293) (= x7440 (x7087 x4159 x8094 x3597 x5628)) (= (x7576 x6349) x5912) (= x1674 (x7100 (+ x6349 96))) (= x3114 (x7576 x6349)) (= x3618 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503)) (= x7991 (x7100 (+ x6349 96))) (= (x7576 x6349) x5486) (<= 32 x4159) (= (x7576 x7119) x1395) (= x7897 (x7087 x2454 x2103 x342 x6680)) (= (ite (= x2454 0) x5232 (ite (>= 32 x2454) x6683 (ite (<= x2454 64) x6512 (ite (<= x2454 96) x7897 (ite (>= 128 x2454) x227 (ite (>= 160 x2454) x8138 x3618)))))) x7131) (= (x7100 (+ x6349 64)) x5934) (= (x7100 (+ 96 x6349)) x7119) (= (x7100 (+ 64 x6349)) x1340) (= x2529 (x7100 (+ x6349 96))) (= x380 (x7576 x6028)) (= (x7576 x3183) x2503) (= x6680 (x7576 x5934)) (= (x7576 x8143) x1679) (= (x7100 (+ 128 x6349)) x1047) (= x5065 (x5951 x3489)) (= (x7100 (+ x6349 160)) x3183) (= x3069 (x7100 (+ 160 x6349))) (= x5384 (x7100 (+ 192 x6349))) (= x8138 (x7622 x2454 x7378 x3190 x5182 x1064 x4091)) (= x5383 (x7100 (+ x6349 32))) (= (x7100 (+ x6349 128)) x1587) (= (x7100 (+ 160 x6349)) x755) (= x480 (x7100 (+ 32 x6349))) (= x7007 (x7100 (+ 64 x6349))) (= x935 (x3407 x4159 x2229 x5804)) (= x3997 (x7100 (+ x6349 32))))) x7452)))
(assert (=> (>= 10000 x2098) (= (x1388 x2098) 0)))
(assert (x4938 x8373))
(assert (=> (>= 10000 x8491) (= 0 (x1388 x8491))))
(assert (not (x8398 (x3407 64 x7048 4))))
(assert (= x245 (and (not x1137) x3934)))
(assert (x4938 x2209))
(assert (x4938 x2470))
(assert (= x1506 (and x1520 x6805)))
(assert (x4938 x7466))
(assert (x4938 x5747))
(assert (x4938 x2753))
(assert (x4938 x4471))
(assert (x4938 x6071))
(assert (= (x1388 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)) (x7622 x1389 x6653 x1971 x4729 x3159 x1076)))
(assert (x4938 x171))
(assert (x4938 x1159))
(assert (x4938 x7869))
(assert (= x544 (or x7445 x4142)))
(assert (x704 x5307))
(assert (=> (<= x5737 10000) (= (x1388 x5737) 0)))
(assert (x150 x3709))
(assert (x4938 x480))
(assert (= x2893 (x3647 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258))))
(assert (x4938 x2849))
(assert (x4938 x8354))
(assert (= x2052 (x6568 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (= (and x53 x3522) x1525))
(assert (x4938 x3641))
(assert (x704 x7969))
(assert (x4938 x6415))
(assert (x4938 x8483))
(assert (x4938 x5628))
(assert (=> (>= 10000 x6608) (= (x1388 x6608) 0)))
(assert (x3670 x4303))
(assert (= (and x5718 x4639) x538))
(assert (x3670 x2416))
(assert (= x969 (and (not x7865) x4348)))
(assert (x4938 x4491))
(assert (x4938 x1059))
(assert (= x802 (x555 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (=> (>= 10000 x7390) (= (x1388 x7390) 0)))
(assert (= (and (not x243) x7790) x6916))
(assert (=> (<= x3833 10000) (= (x1388 x3833) 0)))
(assert (= (x701 (x3407 64 x1579 2)) 2))
(assert (x4938 x3651))
(assert (x8398 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x4938 x6563))
(assert (x4938 x2406))
(assert (x3580 x4019))
(assert (= x4159 (x3116 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (x4938 x5501))
(assert (x4938 x1018))
(assert (= (=> (and (or (and (and (= x2218 (- x753 x6852)) (= x8140 x7048) (= x5309 x6172) (<= x8500 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4695 x2181) (= x4982 x6523) (= x5817 x4984) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6852 x3825)) (= x8248 x2926) (= x8116 x88) (= x7995 x685) (= x6153 x2959) (>= x8500 0) (= x6852 (ite (= 0 x5067) x7103 0)) (= (+ x6852 x3825) x8500) (= x7727 x3833) (= x3900 x484) (= x2702 x5067) (= x1842 x4841) (= x753 (x8273 x4368)) (= x3825 (x8109 x1579)) (= x1462 x7828) (= x4342 x8500)) x7605) (and (not x7605) (and (= x4695 x2181) (= x3900 x484) (= x7828 x1462) (= x1842 x4841) (= x4984 x5817) (= x8140 x7048) (= x5309 x6172) (= x2959 x6153) (= x4982 x6523) (= x3833 x7727) (= x685 x7995) (= x8116 x88) (= x2702 x5067) (= x8248 x2926)))) (= x7605 (= 0 x5067))) x4329) x8499))
(assert (x4938 x5479))
(assert (x4938 x4736))
(assert (= x8305 (x6568 (x1896 x3651 x1790 x3653 x910 x8305))))
(assert (= x1233 (x3647 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (< (x3407 64 x3627 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7643))
(assert (x4938 x1625))
(assert (x4938 x5041))
(assert (= x6449 (and (not x890) x4612)))
(assert (x4938 x5125))
(assert (x4938 x4227))
(assert (= x2941 (and x7417 (not x1464))))
(assert (= x8174 (and x1548 x5965)))
(assert (= x4393 (x6568 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (= (x3116 (x3407 64 x4889 (ite (<= x3989 32) x2070 (ite (>= 64 x3989) x1013 (ite (>= 96 x3989) x8488 (ite (>= 128 x3989) x7028 (ite (>= 160 x3989) x801 (ite (<= x3989 192) x6233 x449)))))))) 64))
(assert (x4938 x4105))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x6213 x3081 x5009)))
(assert (= (x3116 (x1022 x4598 x7006)) x4598))
(assert (x4938 x5067))
(assert (x4938 x2617))
(assert (= x8501 (and x7371 x2806)))
(assert (= x3865 (x6568 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (x4938 x2065))
(assert (=> (>= 10000 x2982) (= 0 (x1388 x2982))))
(assert (= 0 (x1388 1341992515)))
(assert (= (x3647 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) x6929))
(assert (=> (<= x8356 10000) (= (x1388 x8356) 0)))
(assert (x4938 x4084))
(assert (= (x701 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)) x1138))
(assert (= (x3647 (x1022 x3651 x1954)) x1954))
(assert (= (x1388 (x7087 x7277 x7748 x160 x2415)) (x7087 x7277 x7748 x160 x2415)))
(assert (x4938 x1475))
(assert (=> (<= x5351 10000) (= (x1388 x5351) 0)))
(assert (< (x3407 64 x4706 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x4291))
(assert (= x6653 (x3647 (x7622 x1389 x6653 x1971 x4729 x3159 x1076))))
(assert (< (x7622 x2454 x7378 x3190 x5182 x1064 x4091) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5059))
(assert (= (or x7422 x6380 x1129 x5604 x7083) x7823))
(assert (x4938 x4114))
(assert (x4938 x5393))
(assert (= (and (not x2032) x1512) x2469))
(assert (x4938 x5897))
(assert (=> (>= 10000 x5336) (= 0 (x1388 x5336))))
(assert (x4938 x1121))
(assert (= x4889 (x3647 (x3407 64 x4889 (ite (>= 32 x3989) x2070 (ite (<= x3989 64) x1013 (ite (>= 96 x3989) x8488 (ite (<= x3989 128) x7028 (ite (>= 160 x3989) x801 (ite (>= 192 x3989) x6233 x449))))))))))
(assert (x4938 x4668))
(assert (x4938 x8549))
(assert (x4938 x3591))
(assert (= x5846 (and x2943 (not x5670))))
(assert (=> (>= 10000 x1794) (= 0 (x1388 x1794))))
(assert (x4938 x660))
(assert (=> (<= x3890 10000) (= (x1388 x3890) 0)))
(assert (= 0 (x1388 29244376827073035548771643948814531551534385112760475998805679327281764368384)))
(assert (x4938 x3274))
(assert (= x4662 (x5419 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258))))
(assert (= (or x8362 x803 x4257) x5711))
(assert (x4938 x5661))
(assert (x4938 x6665))
(assert (x4938 x1006))
(assert (x4938 x5121))
(assert (=> (<= x2724 10000) (= (x1388 x2724) 0)))
(assert (= (x3116 (x3407 64 x1453 (ite (<= x4159 32) x7718 (ite (<= x4159 64) x935 (ite (<= x4159 96) x7440 (ite (<= x4159 128) x6983 (ite (<= x4159 160) x2778 (ite (<= x4159 192) x1660 x3397)))))))) 64))
(assert (= (and x7605 x7687) x6597))
(assert (x4938 x6211))
(assert (not (x8398 (x7087 x3479 x7029 x183 x5058))))
(assert (x4938 x3652))
(assert (= (x3116 (x3407 64 x1579 1)) 64))
(assert (x4938 x3551))
(assert (= x591 (x701 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (=> (<= x1503 10000) (= 0 (x1388 x1503))))
(assert (x4938 x6457))
(assert (=> (<= x4441 10000) (= (x1388 x4441) 0)))
(assert (=> (<= x7060 10000) (= 0 (x1388 x7060))))
(assert (= x7203 (x701 (x1896 x6541 x6699 x7203 x7803 x4524))))
(assert (= x175 (and (not x6874) x4539)))
(assert (x4938 x6081))
(assert (x4938 x1145))
(assert (= x8322 (=> (and (and (= (x7100 (+ x6137 x7182)) x7211) (= (x7100 (+ 32 x6195)) x757) (= x6053 (< 0 x5863)) (= x7061 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3643)) (= x3643 (x7100 (+ x6137 31))) (= x4240 (x2230 (- x6497 x6349))) (= (x7100 (+ x7061 x7182)) x6497) (= x5863 (x4236 x8266))) (or (and x6053 (and (or (not x2655) (and x2655 (and (= x436 (> x5863 64)) (or (and (and (or (and x2457 (>= 128 x5863)) (not x2457)) (= x2457 (> x5863 96))) x436) (not x436))))) (= (< 32 x5863) x2655))) (not x6053))) x5026)))
(assert (x4938 x3854))
(assert (= (x1388 (x7622 x4598 x663 x6206 x1584 x7317 x3231)) (x7622 x4598 x663 x6206 x1584 x7317 x3231)))
(assert (x4938 x7969))
(assert (x4938 x7666))
(assert (= (x1388 x4397) (x1388 (+ 1 x4397))))
(assert (x4938 x3838))
(assert (x4938 x4936))
(assert (not (x8398 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (=> (<= x5218 10000) (= 0 (x1388 x5218))))
(assert (= x5379 (and (not x4054) x4776)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x8425 36)))
(assert (x4485 x2247))
(assert (x4938 x8370))
(assert (x4938 x3218))
(assert (= (x1388 (x7622 x2726 x4078 x2312 x1794 x4185 x5530)) (x7622 x2726 x4078 x2312 x1794 x4185 x5530)))
(assert (=> (>= 10000 x8507) (= 0 (x1388 x8507))))
(assert (= (x6340 (x7622 x6088 x6608 x929 x2836 x1656 x880)) x2836))
(assert (x4938 x4019))
(assert (= (x1388 1722637450) 0))
(assert (x4938 x7052))
(assert (x150 x3643))
(assert (x4938 x5204))
(assert (= x3989 (x3116 (x1896 x3989 x7933 x2869 x5737 x214))))
(assert (= (x3116 (x1022 x3224 x2213)) x3224))
(assert (x4938 x5126))
(assert (= (x7087 x5478 x7722 x8330 x1504) (x1388 (x7087 x5478 x7722 x8330 x1504))))
(assert (x4938 x5230))
(assert (x704 x4779))
(assert (not (x8398 (x3407 64 x6658 6))))
(assert (=> (>= 10000 x1473) (= (x1388 x1473) 0)))
(assert (x4938 x3598))
(assert (= x7940 (x701 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (x4938 x7882))
(assert (= x2317 (x6340 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (= (x3407 64 x8425 36) (x1388 (x3407 64 x8425 36))))
(assert (x8398 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x4938 x256))
(assert (x4938 x183))
(assert (x4938 x8317))
(assert (= x2833 (and (not x2045) x7713)))
(assert (x4938 x2199))
(assert (x4938 x1906))
(assert (< 10000 (x3407 64 1 x1120)))
(assert (x4938 x8425))
(assert (= x2108 (x701 (x1896 x7199 x4139 x2108 x7648 x2383))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x3479 x7206 x3209 x7441 x6838)))
(assert (x4938 x6500))
(assert (= (and x1887 x1175) x6282))
(assert (x4938 x492))
(assert (x4938 x3395))
(assert (= (x3116 (x1896 x4400 x4441 x7780 x8359 x6150)) x4400))
(assert (x4938 x8435))
(assert (x4938 x8162))
(assert (= (x6340 (x7622 x2119 x6964 x1957 x8286 x7477 x7270)) x8286))
(assert (x4938 x5773))
(assert (=> (<= x5804 10000) (= (x1388 x5804) 0)))
(assert (x4938 x5576))
(assert (x4938 x5615))
(assert (x4938 x6997))
(assert (not (x8398 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405))))
(assert (= (=> (= x8465 (= 0 x7290)) (and (=> (and (and (= (x7100 (+ x7923 x1040)) x3902) (= x3110 (x3407 64 x1579 2)) (= x1040 (x3320 x3110)) (= x8071 (< x3902 x1040))) x8465) (and (=> (and (and (= false x2641) (= true x2552) (= 36 x5315)) x8071) x3583) (=> (and (not x8071) (= x6131 (= x1842 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x6131) (and (= 1 x145) (= false x8229) (= x1410 (x7100 (+ x1842 1))) (= x4899 x4984) (= x3488 x3900) (= x6848 false) (= x2926 x7540) (= x3703 32) (= x2078 (x7100 (+ x1842 1))) (= (+ 1 x4836) x5387) (= (x3407 64 x1842 0) x4836))) x131) (=> x6131 x4608))))) (=> (and (and (= false x1017) (= true x1199) (= x5315 4)) (not x8465)) x3583))) x4834))
(assert (= x8551 (and x6703 (not x8447))))
(assert (= x6970 (x3647 (x7087 x4598 x6970 x5977 x7474))))
(assert (= (and x4111 x1494) x1333))
(assert (x4938 x6955))
(assert (=> (<= x2972 10000) (= 0 (x1388 x2972))))
(assert (= (and x8538 (not x917)) x3516))
(assert (x4938 x5486))
(assert (x4938 x1619))
(assert (x150 x8163))
(assert (x4938 x5061))
(assert (x4938 x7825))
(assert (x4938 x2726))
(assert (x4938 x7384))
(assert (x4938 x6172))
(assert (< 10000 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117)))
(assert (x4938 x4956))
(assert (x4938 x1255))
(assert (= (x1896 x2454 x4147 x8278 x3885 x5310) (x1388 (x1896 x2454 x4147 x8278 x3885 x5310))))
(assert (=> (>= 10000 x5959) (= (x1388 x5959) 0)))
(assert (x4938 x6927))
(assert (= (x1896 x3224 x6110 x1045 x8162 x2618) (x1388 (x1896 x3224 x6110 x1045 x8162 x2618))))
(assert (< (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x93))
(assert (= (x1388 (+ x7434 1)) (x1388 x7434)))
(assert (< 10000 (x3407 64 1 x1485)))
(assert (= (x701 (x7622 x3989 x2981 x6000 x7436 x7177 x1427)) x6000))
(assert (= x15 (or (and x3673 x1431) (and x2695 x5968) (and x1708 x5662) (and x5320 x665) (and x4119 x7613))))
(assert (x4938 x7514))
(assert (x4938 x2638))
(assert (= x3536 (x1688 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (x4938 x1948))
(assert (=> (<= x8169 10000) (= (x1388 x8169) 0)))
(assert (x4938 x2442))
(assert (= (x6568 (x1896 x4598 x3197 x5234 x8550 x4437)) x4437))
(assert (x4938 x8057))
(assert (x4938 x7276))
(assert (= (and x7449 (not x2465)) x3855))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)))
(assert (= (x1896 x4400 x4441 x7780 x8359 x6150) (x1388 (x1896 x4400 x4441 x7780 x8359 x6150))))
(assert (= (and x4314 (not x5268)) x6610))
(assert (= (=> (and (= x4615 false) (= 0 x3814) (= x2346 true)) x1378) x5335))
(assert (x4938 x2417))
(assert (x4938 x4074))
(assert (x4938 x7778))
(assert (x4938 x3782))
(assert (x4938 x8043))
(assert (=> (<= x160 10000) (= (x1388 x160) 0)))
(assert (x8398 3812630263))
(assert (x4938 x2864))
(assert (= (x701 (x3407 x4598 x4609 x1933)) x1933))
(assert (= (and x3849 (not x3677)) x6779))
(assert (x4938 x7195))
(assert (= (=> (and (= x4451 (x5177 x7005)) (= (= x4451 0) x387)) (and (=> (and (and (= (x7100 (+ x1895 32)) x3679) (= x2844 true) (= x1216 132) (= x4363 false) (= x2517 (x7100 (+ x3679 32))) (= (x7100 (+ 32 x2517)) x3402) (= (x7100 (+ 4 x5348)) x1895)) x387) x5369) (=> (and (and (= (x2047 x5117) x5571) (= (x1689 x2477) x1567) (= x5117 (x3407 64 x7048 5)) (= (> x1567 (ite (= 0 x5571) 10000 x5571)) x1322)) (not x387)) (and (=> (and (and (= x7052 (x7100 (+ x1491 32))) (= (x7100 (+ x6388 31)) x583) (= (x2230 (- x8411 x1110)) x4387) (= x440 (x7100 (+ x1110 192))) (= x6151 (x1689 x2477)) (= (x7100 (+ 32 x2182)) x3970) (= (x7100 (+ x2428 31)) x5732) (= x8533 (x7100 (+ x6151 31))) (= x8121 (x2230 (- x2502 x1110))) (= (x7100 (+ x440 32)) x5642) (= (x8546 x5908) x2428) (= (x7100 (+ 32 x2502)) x1904) (= (x7100 (+ x8411 32)) x6925) (= (x2230 (- x3389 x5348)) x1250) (= x4209 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x583)) (= (x7100 (+ x2477 32)) x7399) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8533) x2562) (= x3389 (x7100 (+ x3896 x6925))) (= x3896 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5732)) (= x7861 (x7100 (+ 32 x5908))) (= x4681 (= 0 x5223)) (= (x7100 (+ x1904 x2562)) x8411) (= (x7100 (+ x1110 32)) x2182) (= (x7100 (+ x5348 4)) x1110) (= (x7100 (+ x3916 32)) x1491) (= (x7100 (+ x4209 x5642)) x2502) (= x3916 (x7100 (+ 32 x3970))) (= x6388 (x5177 x7005)) (= (x8177 x2997) x5223)) (not x1322)) (and (=> (and (not x4681) (and (= x70 (x6736 x1579)) (= (and x798 x4007) x261) (= (x6736 x2997) x6632) (= (>= x70 x3315) x4007) (= x798 (< (+ x6632 x3315) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> (and (and (= 0 x6374) (= x4602 x2961) (= x1081 x1999) (= x5214 x3572) (= x140 x8247)) (not x261)) x8092) (=> (and x261 (and (= x8121 x714) (= false x4591) (= x7721 x7754) (>= x7721 0) (= x4646 (- x3406 x3315)) (= x554 192) (<= 1 x531) (= x6427 x4387) (= x2056 3313512704) (= (+ x3315 x809) x7721) x2450 (>= 127 x4560) (>= x1250 420) (= false x4161) (= x7048 x1928) (= x1355 0) (= x809 (x4556 x2997)) (= x3406 (x6736 x1579)) (>= x1775 420) (= x2079 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (= (x3492 196) x6388) x2450) (= x4518 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1775 4)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x1775 4)) true) (> 192 (- x1775 4))))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x809 x3315)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7721) (>= 127 x4560) (= x1250 x1775) (= (x8177 x7734) x531) (= x2803 x1579))) (and (=> (and (= x4219 true) (not x4518)) (and (=> (and x4219 (= x7314 (and (= true (<= x1775 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 227 x1775)))) (and (=> (and x7314 (and (= x5641 (x4267 196)) (= x7383 (> x5641 18446744073709551615)))) (and (=> x7383 x6095) (=> (and (not x7383) (and (= x2094 (> x3367 x1775)) (= (x7100 (+ 228 x5641)) x3367))) (and (=> (and (not x2094) (= x5562 (> x8121 18446744073709551615))) (and (=> x5562 x6817) (=> (and (not x5562) (and (= x4888 (x7100 (+ x3250 31))) (= x3250 (x7100 (+ 4 x8121))) (= x1745 (or (and (> x4888 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1775 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1775 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4888 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1775 x4888)))))) (and (=> (and x1745 (and (= (x4267 x3250) x2924) (= x316 (< 18446744073709551615 x2924)))) (and (=> (and (not x316) (and (= (x7100 (+ x3250 32)) x709) (= (x7100 (+ x709 x2924)) x8217) (= (< x1775 x8217) x4002))) (and (=> x4002 x4579) (=> (and (not x4002) (= x3141 (> x4387 18446744073709551615))) (and (=> (and (and (= (x7100 (+ x4387 4)) x8020) (= x5568 (x7100 (+ 31 x8020))) (= (or (and (< x5568 x1775) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1775) (<= x5568 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x5568 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1775 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x8209)) (not x3141)) (and (=> (not x8209) x5698) (=> (and (and (= x3832 (x4267 x8020)) (= (> x3832 18446744073709551615) x2821)) x8209) (and (=> x2821 x6095) (=> (and (not x2821) (and (= (x7100 (+ x4025 x3832)) x6064) (= x3232 (> x6064 x1775)) (= (x7100 (+ 32 x8020)) x4025))) (and (=> x3232 x4579) (=> (and (and (= x1081 x6033) (= x92 1) (= x3869 x2961) (= x8427 x140) (= x41 x3572)) (not x3232)) x5781))))))) (=> x3141 x6817))))) (=> x316 x6095))) (=> (not x1745) x5698))))) (=> x2094 x4579))))) (=> (not x7314) x5698))) (=> (not x4219) x6817))) (=> x4518 x6817))))) (=> (and (and (= x6806 true) (= false x8439) (= x1216 0)) x4681) x5369))) (=> (and x1322 (and (= false x4784) (= x7099 (x7100 (+ 32 x1654))) (= true x6396) (= x1654 (x7100 (+ 4 x5348))) (= 100 x1216) (= x179 (x7100 (+ x7099 32))))) x5369))))) x8343))
(assert (x4938 x2444))
(assert (= (or x6478 x107 x5778 x4231 x4601) x8525))
(assert (x4938 x79))
(assert (= x6213 (x3116 (x1022 x6213 x863))))
(assert (< (x7087 x6541 x7752 x8107 x2402) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x4896))
(assert (= (x3116 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) x5478))
(assert (x4938 x3851))
(assert (= (x1388 (x1896 x4598 x3197 x5234 x8550 x4437)) (x1896 x4598 x3197 x5234 x8550 x4437)))
(assert (= x1445 (x3647 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753))))
(assert (= x2635 (and (not x2813) x4900)))
(assert (x704 x3658))
(assert (= (x3407 64 x8340 6) (x1388 (x3407 64 x8340 6))))
(assert (=> (>= 10000 x8550) (= 0 (x1388 x8550))))
(assert (< (x3407 64 1 x1485) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x2400))
(assert (x4938 x3038))
(assert (x4938 x3306))
(assert (not (x8398 (x1022 32 x7122))))
(assert (x4938 x4850))
(assert (= (x3116 (x7087 x3651 x4747 x210 x8417)) x3651))
(assert (= (x3647 (x1022 32 104)) 104))
(assert (x4938 x6720))
(assert (= (x3647 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)) x2293))
(assert (= (or x4416 x2583) x6787))
(assert (= (and (not x5546) x3100) x6781))
(assert (= x2876 (x3647 (x3407 64 x2876 36))))
(assert (x4938 x3912))
(assert (= 0 (x1388 2770781680)))
(assert (= x2928 (x701 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (< (x7622 x3989 x2981 x6000 x7436 x7177 x1427) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x3788))
(assert (= (x3647 (x7622 x2119 x6964 x1957 x8286 x7477 x7270)) x6964))
(assert (= (x701 (x3407 64 x7413 36)) 36))
(assert (= (and x2421 (not x4116)) x5266))
(assert (=> (>= 10000 x2312) (= (x1388 x2312) 0)))
(assert (= x5058 (x6340 (x7087 x3479 x7029 x183 x5058))))
(assert (x4938 x7126))
(assert (x4938 x1038))
(assert (x4938 x140))
(assert (< (x7087 x4400 x8390 x5866 x613) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x4681 x858) x2611))
(assert (= (and x4456 (not x3708)) x8331))
(assert (x4938 x8055))
(assert (= (x6568 (x7622 x1389 x6653 x1971 x4729 x3159 x1076)) x3159))
(assert (= x4382 (or x3871 x5490)))
(assert (x4938 x92))
(assert (= (x7622 x6088 x6608 x929 x2836 x1656 x880) (x1388 (x7622 x6088 x6608 x929 x2836 x1656 x880))))
(assert (= (and x653 (not x1549)) x3349))
(assert (x150 x6386))
(assert (x4938 x451))
(assert (x4938 x5258))
(assert (x4938 x7560))
(assert (x150 x1874))
(assert (x4485 x6237))
(assert (x4938 x502))
(assert (x4938 x6712))
(assert (= x7614 (and x4496 (not x2555))))
(assert (x4938 x7078))
(assert (x4938 x5816))
(assert (= (and x1365 x7235) x71))
(assert (x4938 x5048))
(assert (not (x8398 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (x4938 x5815))
(assert (x4938 x886))
(assert (= (x3116 (x7087 x4400 x8390 x5866 x613)) x4400))
(assert (x4938 x7640))
(assert (=> (>= 10000 x591) (= 0 (x1388 x591))))
(assert (x4938 x5701))
(assert (x4938 x6994))
(assert (=> (<= x1958 10000) (= (x1388 x1958) 0)))
(assert (= 64 (x3116 (x3407 64 x4706 7))))
(assert (x4938 x5579))
(assert (= (x3116 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258)) x5857))
(assert (x4485 x4852))
(assert (x4938 x8422))
(assert (x4938 x5148))
(assert (not (x8398 (x7087 x4598 x6970 x5977 x7474))))
(assert (x4938 x1308))
(assert (< 10000 (x3407 64 x1958 36)))
(assert (= (and x4716 (not x6183)) x739))
(assert (not (x8398 (x1022 x6213 x863))))
(assert (=> (>= 10000 x2317) (= (x1388 x2317) 0)))
(assert (x4938 x4159))
(assert (= (or (and x5042 x6365) (and x4290 x1917) (and x1661 x5663)) x7852))
(assert (= (or x142 x3147 x6299 x5518) x7442))
(assert (= x7199 (x3116 (x7622 x7199 x6076 x3424 x7623 x299 x4117))))
(assert (x4938 x7571))
(assert (=> (<= x3829 10000) (= 0 (x1388 x3829))))
(assert (x4938 x42))
(assert (x4938 x4629))
(assert (x4938 x6622))
(assert (= (and (not x3185) x2350) x4811))
(assert (x4938 x2402))
(assert (x4938 x755))
(assert (not (x8398 (x1022 x4809 x5184))))
(assert (= x5857 (x3116 (x7087 x5857 x604 x2406 x7313))))
(assert (= (and x7678 (not x8290)) x7141))
(assert (= (and x2941 x7077) x3671))
(assert (x4938 x2481))
(assert (= x3176 (and x4816 (not x8360))))
(assert (x4938 x3968))
(assert (=> (<= x3288 10000) (= 0 (x1388 x3288))))
(assert (x4938 x1172))
(assert (x4938 x4831))
(assert (not (x8398 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953))))
(assert (< (x1896 x7277 x2481 x3415 x960 x8255) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x7622 x4159 x3114 x2452 x1679 x3341 x8514) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x5483))
(assert (x4938 x7780))
(assert (x4938 x3365))
(assert (=> (<= x1076 10000) (= (x1388 x1076) 0)))
(assert (= x3290 (and x747 (not x216))))
(assert (=> (<= x1790 10000) (= 0 (x1388 x1790))))
(assert (= (or x3979 x5371) x2878))
(assert (x4938 x2203))
(assert (= (and x1968 (not x888)) x6130))
(assert (x4485 x461))
(assert (= (x1388 (x1022 x4598 x7006)) (x1022 x4598 x7006)))
(assert (= (and (not x6762) x5986) x5028))
(assert (x4938 x8005))
(assert (x4938 x6104))
(assert (x4938 x1747))
(assert (x4938 x4170))
(assert (x4938 x4751))
(assert (x4938 x6832))
(assert (x4938 x88))
(assert (= (x1388 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)) (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)))
(assert (= (and x4111 (not x1494)) x8275))
(assert (x4938 x7498))
(assert (= (x6340 (x7622 x7277 x828 x6423 x4655 x7851 x163)) x4655))
(assert (= x2164 (x3647 (x3407 x3479 x2164 x2366))))
(assert (= x3341 (x6568 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (x4938 x1227))
(assert (x4938 x4611))
(assert (= (x555 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334)) x7334))
(assert (> (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813) 10000))
(assert (x4938 x6197))
(assert (x4938 x7747))
(assert (= x3726 (and x247 (not x904))))
(assert (= (and x7152 x7141) x417))
(assert (x4938 x2085))
(assert (x4938 x1203))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (= x1793 (and x3755 x5797)))
(assert (= x223 (x5419 (x7622 x4809 x5507 x591 x4925 x8524 x223))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x7048 4)))
(assert (x4938 x1202))
(assert (x4938 x2730))
(assert (x150 x2074))
(assert (not (x8398 (x1896 x2726 x7749 x2789 x3787 x3437))))
(assert (x4938 x7014))
(assert (= (and x4222 x4274) x3417))
(assert (=> (<= x5530 10000) (= (x1388 x5530) 0)))
(assert (not (x8398 (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (<= x3224 64) x3986 (ite (<= x3224 96) x7579 (ite (<= x3224 128) x8321 (ite (>= 160 x3224) x8325 (ite (>= 192 x3224) x4873 x2824))))))))))
(assert (= (x3647 (x1022 32 x7608)) x7608))
(assert (x4938 x6899))
(assert (x4938 x3709))
(assert (= (and x2045 x7713) x3830))
(assert (=> (<= x8297 10000) (= 0 (x1388 x8297))))
(assert (x4938 x1842))
(assert (not (x8398 (x3407 64 x7048 5))))
(assert (= x2179 (and x5895 x1511)))
(assert (= (=> (and (= x8078 (= 0 x474)) (= (x8177 x685) x474) (= (x2230 (- x2223 128)) x4183) (= x1231 128)) (and (=> (and x8078 (and (= x5545 x2926) (= false x174) (= 0 x5635) (= x3900 x8178) (= 2 x4950) (= true x686) (= x6839 x4984) (= x1553 0))) x2407) (=> (and (and (= x4552 x1496) (<= x4183 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= x4183 196) (= (x8177 x1579) x6575) (>= x6575 1) (= x4383 false) (= (x2130 132) x4598) (= x3533 x4205) (= (= (x7544 132) x364) x7507) x7507 (= x6106 x4183) (<= x4901 127) (= x961 51607134309459761954548520284799282329936326410793501951915747293203005440) (>= 127 x4901) (= x5860 x26) (= (< 18446744073709551615 x4598) x847) (= 1914215 x8337) (= 128 x2810) (= false x2880) (<= 196 x6106) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6106)) (not x8078)) (and (=> x847 x6969) (=> (and (and (= (> x2870 x6106) x5752) (= (x7100 (+ 164 x4598)) x2870) (= 164 x7662)) (not x847)) (and (=> x5752 x8274) (=> (and (and (= (+ x4552 4) x6949) (= (> x6106 (+ 31 x6949)) x5921)) (not x5752)) (and (=> (and x5921 (and (= (x2130 x6949) x3604) (= (< 18446744073709551615 x3604) x6482))) (and (=> (and (not x6482) (and (= (x7100 (+ x5896 x3604)) x7394) (= (< x6106 x7394) x4929) (= (+ x6949 32) x5896))) (and (=> (and (= x1278 (= x8116 x3521)) (not x4929)) (and (=> (and (and (= x6445 (x3407 64 x3533 3)) (= x6429 (x1066 1 x812)) (= (ite (> x6429 0) x4852 (x1066 127 x4852)) x4680) (= x812 (x7156 x6445)) (= (div x812 2) x4852) (= (x2230 (- x6429 (mod (ite (< x4680 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x6180) (= (> x6180 0) x4508)) x1278) (and (=> (and (and (= (+ x2942 160) x5569) (= x3548 (div (+ x4680 31) 32)) (= x2942 (* 32 x3548)) (= (= 0 x4680) x1175)) x4508) (and (=> (and (= (< 31 x4680) x8001) (not x1175)) (and (=> (and (and (= x3641 (x7156 x6445)) (= (* x5519 256) x2895) (= (div x3641 256) x5519)) (not x8001)) x7976) (=> (and x8001 (and (and (= x8380 (+ 160 x4680)) (= (x751 x5509) x454) (= (> x8380 192) x1789) (= x5509 (x1022 32 x6445)) (= (+ 1 x5509) x3460)) (or (and x1789 (and (<= 160 x8380) (<= x8380 224) (= x2938 (x751 x3460)))) (not x1789)))) x6751))) (=> x1175 x7976))) (=> (and (not x4508) (and (= 36 x1179) (= x2474 true) (= false x5488))) x6329))) (=> (and (and (= 100 x1179) (= false x6334) (= x6645 true)) (not x1278)) x6329))) (=> x4929 x8274))) (=> x6482 x6969))) (=> (and (not x5921) (and (= x1179 0) (= x6056 true) (= false x430))) x6329))))))))) x3776))
(assert (= x7312 (x5419 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334))))
(assert (= (=> (and (= x3179 x1899) (= x3664 x1122) (= x1617 x2620) (= x7173 x1900)) x1215) x5862))
(assert (x4938 x5630))
(assert (< 10000 (x3407 64 x7048 4)))
(assert (not (x8398 (x3407 64 x7048 3))))
(assert (not (x8398 (x3407 64 x3342 100))))
(assert (x4938 x646))
(assert (= x4464 (x701 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (x4938 x6957))
(assert (x4938 x1754))
(assert (x4938 x3500))
(assert (= x6541 (x3116 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (= (x1388 (x3407 64 x1891 7)) (x3407 64 x1891 7)))
(assert (= x7454 (and (not x7605) x7687)))
(assert (= x5120 (x701 (x7087 x6213 x8482 x5120 x2533))))
(assert (> (x7087 x2726 x8532 x6769 x6672) 10000))
(assert (x4938 x3035))
(assert (x4938 x6835))
(assert (x4938 x8524))
(assert (x4938 x6037))
(assert (x150 x999))
(assert (= (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569) (x1388 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (x4938 x8196))
(assert (x4938 x2619))
(assert (= (x3116 (x7087 x206 x7682 x314 x3818)) x206))
(assert (= (x1388 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)) (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)))
(assert (= (and x7053 (not x7900)) x7037))
(assert (= 64 (x3116 (x3407 64 x3228 2))))
(assert (x4938 x4695))
(assert (x4938 x5927))
(assert (x4938 x3423))
(assert (=> (>= 10000 x7752) (= 0 (x1388 x7752))))
(assert (x4938 x6082))
(assert (x8398 1722637450))
(assert (x4938 x1601))
(assert (x4938 x2561))
(assert (x4938 x2935))
(assert (not (x8398 (x3407 x206 x6743 x7390))))
(assert (x4938 x4037))
(assert (x4938 x1450))
(assert (= (x3116 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)) x4400))
(assert (= x3627 (x3647 (x3407 64 x3627 3))))
(assert (x4938 x2073))
(assert (x150 x7473))
(assert (= (x3116 (x3407 64 1 x1120)) 64))
(assert (=> (<= x1427 10000) (= (x1388 x1427) 0)))
(assert (x150 x4885))
(assert (x4938 x2741))
(assert (x4938 x4920))
(assert (> (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352) 10000))
(assert (x4938 x7441))
(assert (= (=> (and (= x6283 x7014) (= x327 x6146) (= x715 x5209) (= x8267 x912) (= x1799 x5801) (= x5014 x6920) (= x6253 x3759) (= x138 x5282) (= x1718 x2850) (= 1 x2594) (= x8041 x1148) (= x2816 0) (= x4368 x8166) (= x1116 x6717) (= x6664 x749)) x3271) x3778))
(assert (< (x7622 x5478 x3146 x5426 x4785 x7964 x5820) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3116 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582)) x2119))
(assert (x4938 x2193))
(assert (= x5945 (and x6369 x7183)))
(assert (= (and x1393 (not x2021)) x3779))
(assert (= (and x4987 x2831) x6182))
(assert (= 0 (x1388 34591783479076665122502074927488338969190252781858077677016911635275368785765)))
(assert (x4938 x7931))
(assert (x4938 x7819))
(assert (=> (>= 10000 x3822) (= 0 (x1388 x3822))))
(assert (= (ite (<= x2119 32) x5997 (ite (<= x2119 64) x1207 (ite (<= x2119 96) x568 (ite (<= x2119 128) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250)))))) (x701 (x3407 64 x26 (ite (<= x2119 32) x5997 (ite (>= 64 x2119) x1207 (ite (<= x2119 96) x568 (ite (<= x2119 128) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250))))))))))
(assert (= (x701 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802)) x494))
(assert (x4938 x6448))
(assert (= x3699 (and (not x4683) x6928)))
(assert (x4938 x3808))
(assert (> (x3407 64 x3533 3) 10000))
(assert (= (and x2233 x4043) x3189))
(assert (x4938 x3600))
(assert (x4938 x7305))
(assert (x4938 x6213))
(assert (x4938 x990))
(assert (x4938 x3990))
(assert (x150 x3162))
(assert (= (or x501 x2179) x1000))
(assert (= (and (not x6369) x7183) x489))
(assert (x8398 1313998243))
(assert (x4938 x533))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)))
(assert (x4938 x5828))
(assert (= (=> (and (= x5193 (= 0 x4200)) (or (and (and (= x5974 x5515) (= x211 x4200) (= x5748 x1591) (= x2963 x5415) (= x5831 x8195) (= x4737 x6642) (= x6927 x8271) (= x6847 x2028) (= x1226 x8430) (= x5250 x2193) (= x5639 x7983) (= x5683 x2188) (= x4148 x886) (= x1652 x6170)) (not x5193)) (and x5193 (and (= x2028 x6847) (= (x6362 x1579) x6989) (= x6927 x8271) (= x667 x1614) (= (x4269 x5830) x2417) (= x6170 x1652) (= x8195 x5831) (= (- x2417 x3500) x1935) (= x8430 x1226) (= x5683 x2188) (= (+ x6989 x3500) x667) (= x2963 x5415) (= x5748 x1591) (= x4200 x211) (= x5639 x7983) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x6989 x3500)) (= x3500 (ite (= x4200 0) x4378 0)) (= x6642 x4737) (<= x667 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5974 x5515) (= x5250 x2193) (= x4148 x886) (>= x667 0))))) x34) x3467))
(assert (> (x3407 x4159 x2229 x5804) 10000))
(assert (x4938 x7660))
(assert (x4938 x1252))
(assert (= x3413 (and x2674 (not x4438))))
(assert (x4938 x7317))
(assert (=> (>= 10000 x4404) (= (x1388 x4404) 0)))
(assert (x4938 x6695))
(assert (x8398 2088793519))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503)))
(assert (x3670 x8007))
(assert (x4938 x764))
(assert (= x7749 (x3647 (x1896 x2726 x7749 x2789 x3787 x3437))))
(assert (=> (>= 10000 x2981) (= (x1388 x2981) 0)))
(assert (= x5108 (or x5855 x2002)))
(assert (x4938 x1914))
(assert (= (x701 (x7087 x6541 x7752 x8107 x2402)) x8107))
(assert (x4938 x7703))
(assert (not (x8398 (x3407 64 x8340 36))))
(assert (= x8508 (and (not x1105) x6248)))
(assert (= x1389 (x3116 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953))))
(assert (= (x1022 x1389 x5939) (x1388 (x1022 x1389 x5939))))
(assert (= (=> (and (= x3740 (= 0 x5016)) (or (and (and (= x5873 x3973) (= x7880 x4629) (= x6268 x1773) (= x1282 x5016) (= x5144 x358) (= x1268 x1103)) (not x3740)) (and (and (= (ite (= x5016 0) x5966 0) x8017) (= x5144 x358) (< (+ x8017 x991) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x7963) (= x7963 x3330) (= x5016 x1282) (= x297 (x6245 x685)) (= x991 (x4875 x3521)) (= x1103 x1268) (= x7963 (+ x991 x8017)) (= x6268 x1773) (= x5873 x3973) (<= x7963 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4629 x7880) (= (- x297 x8017) x6934)) x3740))) x2419) x2194))
(assert (x150 x7568))
(assert (= (or x6212 x7573) x7382))
(assert (x4938 x4120))
(assert (x4938 x7123))
(assert (x4938 x6942))
(assert (=> (>= 10000 x5310) (= (x1388 x5310) 0)))
(assert (x704 x7765))
(assert (x4938 x5977))
(assert (x4938 x1508))
(assert (x4938 x3086))
(assert (x4938 x4948))
(assert (x4938 x719))
(assert (x4938 x6951))
(assert (x4938 x4218))
(assert (=> (>= 10000 x2929) (= 0 (x1388 x2929))))
(assert (= (x1022 x6088 x8345) (x1388 (x1022 x6088 x8345))))
(assert (x150 x8512))
(assert (x4938 x5441))
(assert (=> (>= 10000 x4078) (= (x1388 x4078) 0)))
(assert (x4938 x45))
(assert (= (x1388 (x1022 x4159 x2208)) (x1022 x4159 x2208)))
(assert (x4938 x7583))
(assert (= (or x3495 x3779) x6834))
(assert (=> (>= 10000 x2439) (= (x1388 x2439) 0)))
(assert (x4938 x4136))
(assert (= x5007 (x701 (x7087 x1389 x4115 x5007 x2944))))
(assert (x4938 x4335))
(assert (x4938 x2331))
(assert (x4938 x3339))
(assert (x4938 x3321))
(assert (not (x8398 (x1022 32 103))))
(assert (x4938 x1198))
(assert (x4938 x3479))
(assert (x4938 x1015))
(assert (x4938 x7522))
(assert (x4938 x880))
(assert (x4938 x566))
(assert (x4938 x6346))
(assert (= x5844 (and x2977 x6714)))
(assert (= x6213 (x3116 (x3407 x6213 x3081 x5009))))
(assert (x4938 x626))
(assert (= (or x7524 x6323) x3050))
(assert (= x7965 (and x7137 x2603)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1859 100)))
(assert (x4938 x3533))
(assert (= x2964 (and x66 x8001)))
(assert (x4938 x3164))
(assert (x4938 x6704))
(assert (x4938 x4437))
(assert (= (x1388 (x7622 x7199 x6076 x3424 x7623 x299 x4117)) (x7622 x7199 x6076 x3424 x7623 x299 x4117)))
(assert (x4938 x4057))
(assert (x4938 x8101))
(assert (=> (<= x8096 10000) (= (x1388 x8096) 0)))
(assert (x4938 x770))
(assert (< 10000 (x4958 0)))
(assert (x4938 x4092))
(assert (< (x1022 32 x200) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1715 10000) (= (x1388 x1715) 0)))
(assert (not (x8398 (x3407 64 x6717 5))))
(assert (= x2255 (and x3915 x5796)))
(assert (x4938 x8033))
(assert (= x3822 (x3647 (x3407 64 x3822 36))))
(assert (=> (>= 10000 x3112) (= 0 (x1388 x3112))))
(assert (x4938 x3463))
(assert (= (and x4633 x2135) x176))
(assert (x4938 x1629))
(assert (x4938 x3576))
(assert (x4938 x5098))
(assert (=> (>= 10000 x3620) (= 0 (x1388 x3620))))
(assert (= (=> (and (<= 0 x5544) (= x5544 x6364) (= 2 x7516) (= (x2576 x621) x6359) (< (+ x425 x835) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x5544 (+ x425 x835)) (= x1030 (x1066 255 x5032)) (= x8005 x8530) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5544) (= x2973 (- x6359 x835)) (= (x2998 x3521) x425)) x8207) x255))
(assert (= x4440 (x3647 (x3407 64 x4440 36))))
(assert (x3670 x1639))
(assert (x150 x2405))
(assert (x150 x6153))
(assert (= (and x7226 x6585) x2546))
(assert (x4938 x5972))
(assert (x4938 x1329))
(assert (x4938 x3519))
(assert (x4938 x4144))
(assert (x4938 x7312))
(assert (x4938 x2473))
(assert (= x2305 (x5419 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872))))
(assert (= (and x1464 x7417) x237))
(assert (x4938 x3536))
(assert (=> (<= x2415 10000) (= (x1388 x2415) 0)))
(assert (= (and x3790 (not x7536)) x6591))
(assert (x4938 x2195))
(assert (x4938 x2621))
(assert (x4938 x8107))
(assert (= (and x2608 x4518) x896))
(assert (= (and x7866 x7124) x7790))
(assert (= x5093 (and x1380 x5921)))
(assert (= (=> (and (= x7618 x4624) (= x6302 x4684) (= x5244 x6943) (= x7241 x8353) (= x8193 x7457) (= x4928 x4727) (= x6537 x3156) (= x5938 x7947) (= false x2725) (= (x1066 255 x7479) x7618) (= x723 x356) (= x7271 true) (= x3072 x8206) (= x1664 2) (= x7291 x3687) (= x1702 x3956) (= 0 x3766) (= x2598 x5853)) x462) x4020))
(assert (= (or (and x4002 x116) (and x6318 x3232) (and x1186 x2094)) x3629))
(assert (= x939 x1063))
(assert (= x4159 (x3116 (x7087 x4159 x8094 x3597 x5628))))
(assert (= x4119 (and x3189 (not x3092))))
(assert (=> (<= x6516 10000) (= (x1388 x6516) 0)))
(assert (x4938 x5471))
(assert (= x5651 (and x5806 (not x4671))))
(assert (x4938 x137))
(assert (x4938 x4877))
(assert (x4938 x4190))
(assert (= (or x4073 x2688) x4337))
(assert (x4938 x2027))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x4889 (ite (>= 32 x3989) x2070 (ite (<= x3989 64) x1013 (ite (<= x3989 96) x8488 (ite (<= x3989 128) x7028 (ite (<= x3989 160) x801 (ite (<= x3989 192) x6233 x449)))))))))
(assert (= (=> (= x7059 (= x5602 0)) (and (=> (and (and (= x2851 x6256) (= x321 x8435) (= x4691 x3846) (= x5313 0) (= x426 x1952) (= 1 x5795) (= x6649 x7747) (= x3807 x8119) (= x6534 x6904) (= x2334 x1426) (= x1009 x1931) (= x6504 x3054) (= x4223 x7661) (= x173 x8561) (= x2169 x2257)) (not x7059)) x4897) (=> (and (and (= true x777) (= x340 0) (= false x257)) x7059) x6463))) x5435))
(assert (x3670 x6104))
(assert (x4938 x4837))
(assert (= x453 (and (not x2678) x213)))
(assert (= x665 (and (not x1332) x7564)))
(assert (= (x1896 x7277 x2481 x3415 x960 x8255) (x1388 (x1896 x7277 x2481 x3415 x960 x8255))))
(assert (x4938 x359))
(assert (x4938 x8097))
(assert (x4938 x1019))
(assert (= (and x7293 (not x3560)) x3784))
(assert (= (x1388 (x3407 64 x2616 6)) (x3407 64 x2616 6)))
(assert (=> (>= 10000 x3360) (= 0 (x1388 x3360))))
(assert (x4938 x3247))
(assert (= (x1388 x3507) (x1388 (+ x3507 2))))
(assert (= x2978 (x5419 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (= (and x1225 (not x351)) x4492))
(assert (x4938 x4712))
(assert (=> (>= 10000 x5227) (= 0 (x1388 x5227))))
(assert (< (x3407 x2119 x4246 x8011) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x5949 10000) (= (x1388 x5949) 0)))
(assert (= (x1388 (+ x1902 1)) (x1388 x1902)))
(assert (x4938 x3707))
(assert (= x6574 (and x4406 (not x7787))))
(assert (= x2273 (and x2137 (not x3123))))
(assert (= x4247 (and (not x8563) x417)))
(assert (x4938 x810))
(assert (x4938 x1425))
(assert (=> (>= 10000 x2616) (= 0 (x1388 x2616))))
(assert (x4938 x714))
(assert (x4938 x4410))
(assert (x4938 x5950))
(assert (x704 x7568))
(assert (= (and x1740 (not x3165)) x1758))
(assert (= x3197 (x3647 (x1896 x4598 x3197 x5234 x8550 x4437))))
(assert (x4938 x3616))
(assert (= (x7087 x4159 x8094 x3597 x5628) (x1388 (x7087 x4159 x8094 x3597 x5628))))
(assert (< 10000 (x3407 64 x1680 12)))
(assert (=> (<= x6150 10000) (= 0 (x1388 x6150))))
(assert (x4938 x3642))
(assert (x4938 x226))
(assert (x4938 x510))
(assert (x4938 x3846))
(assert (=> (>= 10000 x6756) (= 0 (x1388 x6756))))
(assert (x4938 x3044))
(assert (= (x3647 (x3407 64 x4120 11)) x4120))
(assert (= x337 (and x4125 (not x7773))))
(assert (x4938 x8329))
(assert (= x7934 (and x2025 (not x2298))))
(assert (= (and (not x168) x7857) x1533))
(assert (x8398 3957931183))
(assert (x4938 x5478))
(assert (x4938 x5095))
(assert (= (=> (and (or x6661 (not x6661)) (= x6661 (= 0 x6094))) x4412) x3638))
(assert (x4938 x4366))
(assert (= x1061 (and x8063 (not x6406))))
(assert (=> (<= x6076 10000) (= (x1388 x6076) 0)))
(assert (x4938 x8327))
(assert (= x276 (=> (and (= x7590 (= x5850 0)) (or x7590 (not x7590))) x473)))
(assert (x4938 x6028))
(assert (x4938 x709))
(assert (x150 x4948))
(assert (=> (<= x1584 10000) (= 0 (x1388 x1584))))
(assert (not (x8398 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291))))
(assert (= (x701 (x3407 x2726 x235 x5998)) x5998))
(assert (x4938 x1652))
(assert (x4938 x163))
(assert (= (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138) (x1388 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (=> (>= 10000 x3212) (= (x1388 x3212) 0)))
(assert (= x7722 (x3647 (x7087 x5478 x7722 x8330 x1504))))
(assert (= (and x1887 (not x1175)) x66))
(assert (= x7830 (x6340 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (= x6516 (x6568 (x2341 x3989 x2535 x5815 x6124 x6516 x6214 x5427))))
(assert (x4938 x4763))
(assert (= (x701 (x2341 x6213 x1552 x4367 x6522 x5197 x6139 x5172)) x4367))
(assert (x4938 x2500))
(assert (x150 x3000))
(assert (x4938 x2703))
(assert (=> (<= x8094 10000) (= 0 (x1388 x8094))))
(assert (= x5454 (or (and x1086 x7268) (and x4934 x5192) (and x7934 x212) (and x5365 x4869) (and x5188 x7835))))
(assert (= (x1388 35477284059277649309253622239531857712935939529143554018288893216769000107873) 0))
(assert (= (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756) (x1388 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756))))
(assert (x4938 x1176))
(assert (x4938 x5572))
(assert (= x933 (and (not x7920) x7632)))
(assert (x8398 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (= x6088 (x3116 (x3407 x6088 x407 x3652))))
(assert (x4938 x6050))
(assert (< 10000 (x7087 x5478 x7722 x8330 x1504)))
(assert (x4938 x5696))
(assert (= (x3647 (x1022 x3224 x2213)) x2213))
(assert (x4938 x8094))
(assert (x4938 x4460))
(assert (= x1584 (x6340 (x7622 x4598 x663 x6206 x1584 x7317 x3231))))
(assert (x4938 x3534))
(assert (= (x6568 (x7622 x3479 x7884 x1998 x3288 x2864 x1503)) x2864))
(assert (x4938 x949))
(assert (x150 x7769))
(assert (x4938 x6438))
(assert (x4938 x5900))
(assert (x4938 x4703))
(assert (x4938 x6777))
(assert (x4938 x6888))
(assert (= (and (not x7338) x5751) x629))
(assert (x150 x7437))
(assert (= (=> (and (= x4388 x7374) (= x3963 x584) (= x3027 x8267) (= x6717 x45) (= x671 0) (= x3280 x9) (= x2436 x621) (= x6211 x2850) (= true x3528) (= x5801 x1006) (= x7167 x6283) (= x826 false) (= (x1066 255 x7479) x9) (= x1635 0) (= x2737 2) (= x5098 x3017) (= x5020 x4368) (= x4109 x2331) (= x8257 x138)) x395) x4482))
(assert (x150 x3405))
(assert (= x1194 (x3647 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094))))
(assert (x150 x6695))
(assert (x4938 x7992))
(assert (=> (<= x4159 10000) (= (x1388 x4159) 0)))
(assert (x4938 x8163))
(assert (x4938 x5757))
(assert (x4938 x7813))
(assert (= 0 (x1388 35425322552009646506518338594398286811668114190755561836384294568426616127488)))
(assert (x4938 x4141))
(assert (= (=> (= x3052 (= 0 x6598)) (and (=> (and (not x3052) (= x4173 (< x7800 32))) (and (=> (and (not x4173) (and (= x5380 (> x5258 3)) (<= x5258 255) (= (x5409 x240) x5258) (= (x5654 160) x1256) (= x240 (x3407 64 x1256 11)))) (and (=> (and (not x5380) (= x4510 (= x5258 0))) (and (=> (and (and (= x5738 (x3407 64 x1256 11)) (= (+ x5397 1) x5935) (= x5236 x8342) (= x5735 x7647) (= x2685 false) (= x7400 x5256) (= false x550) (= x4375 x2685) (= false x5235) (= x680 false) (= (+ x5738 1) x5397) (= 1 x6687) (= x3621 (x3407 64 x2140 10))) x4510) x5964) (=> (and (and (= x8342 x2561) (= x1839 x5256) (= x8210 x7647)) (not x4510)) x6594))) (=> (and x5380 (and (= x1839 x5256) (= x8210 x7647) (= x8342 x2561))) x6594))) (=> (and (and (= x8342 x2561) (= x8210 x7647) (= x1839 x5256)) x4173) x6594))) (=> (and x3052 (and (= x7647 x8210) (= x1839 x5256) (= x2561 x8342))) x6594))) x2677))
(assert (x4938 x6476))
(assert (=> (<= x3190 10000) (= (x1388 x3190) 0)))
(assert (x4938 x3412))
(assert (x4938 x6883))
(assert (= (and (not x261) x7804) x8338))
(assert (= x8295 (x3647 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (x4938 x8139))
(assert (= (x1388 (x3407 64 x6325 2)) (x3407 64 x6325 2)))
(assert (=> (>= 10000 x5867) (= (x1388 x5867) 0)))
(assert (x150 x3272))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)))
(assert (not (x8398 (x1022 32 x6445))))
(assert (x8398 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (< (x7622 x6088 x6608 x929 x2836 x1656 x880) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x765 (and x1278 x2840)))
(assert (=> (<= x4016 10000) (= 0 (x1388 x4016))))
(assert (= x2688 (or x7852 x2822 (and x4261 x7945) (and x7293 x3560) x3290 x5296 x907)))
(assert (x4938 x2766))
(assert (= (and (not x5460) x2429) x2163))
(assert (x4938 x2347))
(assert (x4938 x951))
(assert (= (or x1683 x2768) x6260))
(assert (x4938 x3908))
(assert (x4938 x2064))
(assert (x4938 x6694))
(assert (= (x3407 64 x3627 7) (x1388 (x3407 64 x3627 7))))
(assert (x4938 x1682))
(assert (= (and x1095 x3975) x6552))
(assert (not (x8398 (x3407 64 x3138 6))))
(assert (= (and x4514 (not x3941)) x2134))
(assert (x4938 x4343))
(assert (x4938 x8161))
(assert (=> (>= 10000 x6185) (= (x1388 x6185) 0)))
(assert (= (x3647 (x3407 64 x6673 36)) x6673))
(assert (not (x8398 (x3407 64 x3822 36))))
(assert (=> (>= 10000 x1227) (= 0 (x1388 x1227))))
(assert (x4938 x7855))
(assert (= x5024 true))
(assert (x4938 x3312))
(assert (x4938 x1223))
(assert (= x2846 (x5419 (x7622 x5857 x6884 x2985 x8141 x159 x2846))))
(assert (x4938 x1940))
(assert (= (and x428 (not x5839)) x4869))
(assert (= (x6568 (x7622 x2119 x6964 x1957 x8286 x7477 x7270)) x7477))
(assert (x4938 x7616))
(assert (= x6680 (x6340 (x7087 x2454 x2103 x342 x6680))))
(assert (= x5530 (x5419 (x7622 x2726 x4078 x2312 x1794 x4185 x5530))))
(assert (= (x701 (x3407 64 x3627 3)) 3))
(assert (= (or (and x5933 (not x3901)) (and (not x431) x836) (and x2101 (not x6633))) x2446))
(assert (x4938 x5843))
(assert (x4938 x2934))
(assert (= (x3647 (x3407 64 x239 100)) x239))
(assert (x4938 x1862))
(assert (= x8245 (and x6397 (not x7071))))
(assert (=> (<= x2199 10000) (= 0 (x1388 x2199))))
(assert (x4938 x6884))
(assert (x4938 x2096))
(assert (= x6536 (=> (= (> x3383 0) x3756) (and (=> (and (and (or (not x5537) (and (and (and (= x6310 (x4206 x4427)) (= x2072 (> x1824 32))) (or (not x2072) (and (and (and (= (x7100 (+ x4427 32)) x4848) (= x6134 (> x1824 64)) (= (x7100 (+ 32 x6819)) x5969) (= x2493 (x2650 x4848))) (or (and x6134 (and (or (not x2295) (and (and (= x1554 (x7100 (+ x6819 96))) (= x3689 (x1353 x1996)) (<= x1824 128) (= (x7100 (+ 96 x4427)) x1996)) x2295)) (and (= (x7284 x1508) x2226) (= (> x1824 96) x2295) (= (x7100 (+ x6819 64)) x4136) (= (x7100 (+ 64 x4427)) x1508)))) (not x6134))) x2072))) x5537)) (and (= (* x7959 32) x7967) (= (x7100 (+ x3604 x3539)) x5609) (= (x7100 (+ 36 x4704)) x1744) (= (x2170 x5569) x1824) (= (* 32 x3958) x908) (= x1550 150) (= x5493 (x7100 (+ x5569 x3867))) (= x2935 (x7100 (+ x3604 31))) (<= x5569 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x7100 (+ x2509 32)) x6819) (= x6889 (x7100 (+ x4427 x4598))) (= (x7100 (+ 32 x7967)) x3867) (< x5493 x4704) (= x4704 (x7100 (+ x5493 x2303))) (< x5569 x5493) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x5569) (= x3539 (x7100 (+ 32 x5493))) (= x7741 (x7100 (+ 32 x1744))) (<= 1 x5493) (= x4427 (x7100 (+ 32 x5569))) (<= x5569 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (div x2935 32) x3958) (= x7959 (div x8462 32)) (<= 2 x4704) (<= x5493 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< 0 x1824) x5537) (= (x7100 (+ 128 x1744)) x2509) (= (x7100 (+ 31 x4598)) x8462) (= (x7100 (+ 32 x908)) x2303))) x3756) x1488) (=> (and (and (= (x7100 (+ x824 32)) x6581) (= (x7100 (+ x5791 32)) x824) (= x5791 (x7100 (+ 32 x1809))) (= 132 x1179) (= x1809 (x7100 (+ x5569 4))) (= x915 false) (= x784 true)) (not x3756)) x6329)))))
(assert (x4938 x5174))
(assert (x4938 x1260))
(assert (= (x701 (x7087 x3651 x4747 x210 x8417)) x210))
(assert (x4938 x605))
(assert (= (or x6481 x2709) x4975))
(assert (x4938 x1928))
(assert (= (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582) (x1388 (x2341 x2119 x8295 x2292 x7808 x1373 x2978 x7582))))
(assert (x4938 x1020))
(assert (=> (>= 10000 x663) (= 0 (x1388 x663))))
(assert (x4938 x1847))
(assert (=> (<= x2564 10000) (= (x1388 x2564) 0)))
(assert (= x4650 (and x6367 (not x6993))))
(assert (x4938 x663))
(assert (x4938 x97))
(assert (x4938 x5013))
(assert (x4938 x4299))
(assert (x3670 x8512))
(assert (x4938 x3131))
(assert (= x8401 (and x7953 x7733)))
(assert (x4938 x2647))
(assert (= x6456 (and (not x7371) x2806)))
(assert (= (and x5187 x4101) x6703))
(assert (=> (<= x2789 10000) (= (x1388 x2789) 0)))
(assert (= (x701 (x7087 x3479 x7029 x183 x5058)) x183))
(assert (= (or x5251 x8076) x3101))
(assert (x4938 x1954))
(assert (x4938 x2308))
(assert (= x7844 (and (not x2538) x629)))
(assert (=> (<= x7189 10000) (= (x1388 x7189) 0)))
(assert (x4938 x5116))
(assert (= x2567 (=> (and (= false x726) (= 0 x8530) (= true x3688)) x255)))
(assert (x4938 x6825))
(assert (x150 x3058))
(assert (= (x3647 (x1022 x2119 x6911)) x6911))
(assert (= (x1388 (x3407 64 x661 36)) (x3407 64 x661 36)))
(assert (x4938 x1527))
(assert (= 64 (x3116 (x3407 64 x4440 36))))
(assert (x4938 x2631))
(assert (= (or x5473 x5772) x6075))
(assert (x4938 x7694))
(assert (=> (>= 10000 x7545) (= 0 (x1388 x7545))))
(assert (not (x8398 (x1896 x6088 x2440 x5482 x1969 x6350))))
(assert (x4938 x113))
(assert (= (or x659 x6363) x3509))
(assert (x4938 x4498))
(assert (= x774 (and (not x2205) x8442)))
(assert (x4938 x2502))
(assert (= x6836 (=> (= (= x6220 0) x429) (and (=> (and x429 (and (= x4795 (x7202 224)) (<= 356 x1890) (= 0 x7869) x7105 (= x5421 256) (= x6513 (x7100 (+ x3783 x4766))) (= x3023 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2416)) (= x2605 (or (and (= true (<= (- x731 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 (- x731 4))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x731 4)))) (= x1639 (x7100 (+ x4795 31))) (= x1062 290) (= x2235 (x2230 (- x1711 294))) (>= x3368 1) (= x731 x1890) (= 1084734224 x3400) (= x6277 (= (x3202 228) (x2180 518))) (= x2672 160) (= x1579 x6583) x6498 (= (x7100 (+ x3023 486)) x1711) (= x2416 (x7100 (+ 31 x874))) (= x6498 (= (x3202 196) (x2180 486))) (= x877 29244376827073035548771643948814531551534385112760475998805679327281764368384) (>= 127 x1555) x2152 (= false x7649) (= x4226 false) x6277 (= x3783 (x7100 (+ x1711 32))) (= x4766 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1639)) (<= x1555 127) (= x6717 x5281) (= (= (x3202 260) 34) x2152) (= x3368 (x8177 x7734)) (= (= 64 (x3202 164)) x7105) (= x1890 (x2230 (- x6513 290))) (= x6921 0) (= x874 (x2238 128)) (<= 356 x731))) (and (=> x2605 x4482) (=> (and (= true x3969) (not x2605)) (and (=> (and (= (and (> x731 195) (= (<= x731 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x7806) x3969) (and (=> (not x7806) x4482) (=> (and (and (= (x8557 164) x6755) (= (> x6755 18446744073709551615) x6640)) x7806) (and (=> x6640 x180) (=> (and (not x6640) (and (= (> x1640 x731) x3579) (= (x7100 (+ x6755 196)) x1640))) (and (=> x3579 x1336) (=> (and (and (= (x8557 260) x2808) (<= x731 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x5249 (> x2808 18446744073709551615)) (>= x731 356)) (not x3579)) (and (=> x5249 x180) (=> (and (not x5249) (and (= x2095 (x7100 (+ x2808 292))) (= x1128 (< x731 x2095)))) (and (=> x1128 x1336) (=> (and (not x1128) (and (= x5400 false) (= x3217 (x2278 128)) (= x5098 x3017) (= x671 64) (= x6211 x2850) (= x4380 (x2278 128)) (= x6283 x7167) (= (x2278 160) x3173) (= x2436 x621) (= x584 x3963) (= x8326 false) (= x8257 x138) (= x3280 x8470) (= x1635 1) (= x1746 (x2278 160)) (= x4109 x2331) (= x5801 x1006) (= x7374 x4388) (= x5020 x4368) (= x45 x6717) (= x8267 x3027))) x395))))))))))) (=> (not x3969) x4482))))) (=> (and (and (= x584 x5938) (= x6717 x7241) (= x7374 x4727) (= 128 x7142) (= x2331 x356) (= x4723 x6220) (= x621 x3072) (= x2904 x8470) (= x5098 x3156) (= x1702 x2850) (= x4684 x6283) (= x138 x7291) (= x5853 x5801) (= x8267 x6943) (= x7457 x4368)) (not x429)) x735)))))
(assert (x4938 x5878))
(assert (= (x3647 (x1022 x4598 x7006)) x7006))
(assert (x4938 x2876))
(assert (= x8122 (and x1608 x6260)))
(assert (= (x701 (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (>= 64 x3224) x3986 (ite (<= x3224 96) x7579 (ite (<= x3224 128) x8321 (ite (<= x3224 160) x8325 (ite (>= 192 x3224) x4873 x2824)))))))) (ite (>= 32 x3224) x4620 (ite (<= x3224 64) x3986 (ite (>= 96 x3224) x7579 (ite (<= x3224 128) x8321 (ite (>= 160 x3224) x8325 (ite (<= x3224 192) x4873 x2824))))))))
(assert (= 64 (x3116 (x3407 64 x26 (ite (>= 32 x2119) x5997 (ite (>= 64 x2119) x1207 (ite (>= 96 x2119) x568 (ite (>= 128 x2119) x6700 (ite (<= x2119 160) x285 (ite (>= 192 x2119) x1309 x2250))))))))))
(assert (=> (>= 10000 x6911) (= 0 (x1388 x6911))))
(assert (= x5336 (x1688 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016))))
(assert (x4938 x1235))
(assert (= (x3407 64 x3138 6) (x1388 (x3407 64 x3138 6))))
(assert (x4938 x7479))
(assert (= x6817 x4579))
(assert (x4938 x7724))
(assert (x4938 x4524))
(assert (x4938 x8333))
(assert (< (x7087 x6213 x8482 x5120 x2533) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x7992 (x6340 (x7087 x2119 x1810 x1425 x7992))))
(assert (= x2642 (x6568 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (x4938 x7458))
(assert (= x5792 (x701 (x3407 64 1 x5792))))
(assert (x4938 x3315))
(assert (= x3781 (and x4496 x2555)))
(assert (= x2972 (x6568 (x7622 x4400 x1644 x2724 x7830 x2972 x3839))))
(assert (= (or x3047 x3193) x6204))
(assert (x4938 x1831))
(assert (x4938 x2463))
(assert (= x954 (and x6259 (not x5208))))
(assert (x4938 x536))
(assert (x4938 x6764))
(assert (= (x701 (x3407 x1389 x5288 x1940)) x1940))
(assert (x4938 x4473))
(assert (= (or x8525 x8452) x1913))
(assert (x4938 x5851))
(assert (x4938 x3745))
(assert (x4938 x14))
(assert (x4938 x7683))
(assert (= (x3116 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) x2726))
(assert (= (x3647 (x3407 64 x3585 36)) x3585))
(assert (= (and (not x2603) x7137) x4423))
(assert (= (and x6472 x6134) x539))
(assert (= (and x916 x436) x2668))
(assert (= (and x2834 (not x2898)) x6761))
(assert (x4938 x3388))
(assert (=> (>= 10000 x5478) (= 0 (x1388 x5478))))
(assert (= x8261 (=> (= x56 (< 0 x485)) (and (=> (and (and (= x7757 x7604) (= x7111 x1149)) x56) x2892) (=> (and (not x56) (and (= x7432 4) (= x4431 true) (= false x758))) x4892)))))
(assert (= (and x6449 x4962) x3602))
(assert (x704 x8316))
(assert (x4938 x5307))
(assert (= x4689 (and x1393 x2021)))
(assert (x4938 x4228))
(assert (= (x3407 64 x1958 36) (x1388 (x3407 64 x1958 36))))
(assert (= x1599 (x3647 (x3407 64 x1599 12))))
(assert (= (or x6843 x8244 x7316) x2137))
(assert (x4938 x4022))
(assert (= (or x5448 x3516 x2558) x3755))
(assert (x4938 x6819))
(assert (= x4159 (x3116 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (x4938 x7727))
(assert (= x3633 (and x3181 (not x2772))))
(assert (= x4021 (or x4512 x5669)))
(assert (= (x3116 (x1022 32 x7608)) 32))
(assert (= x5063 (and x7934 (not x212))))
(assert (= x3721 (and x3848 x524)))
(assert (= (x3647 (x1022 x3479 x7013)) x7013))
(assert (= x2901 (x6568 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (x4938 x625))
(assert (x4938 x2894))
(assert (= x1585 (or x7873 x6834)))
(assert (= x3816 (and x2840 (not x1278))))
(assert (x4938 x7680))
(assert (x150 x3044))
(assert (= (x3647 (x1896 x6088 x2440 x5482 x1969 x6350)) x2440))
(assert (x4938 x1243))
(assert (not (x8398 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258))))
(assert (> (x1022 32 x2141) 10000))
(assert (= x3163 (and x6194 (not x2800))))
(assert (x4938 x8539))
(assert (= (x701 (x3407 64 x6325 2)) 2))
(assert (x4938 x6523))
(assert (=> (<= x8417 10000) (= 0 (x1388 x8417))))
(assert (x4938 x7355))
(assert (> (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094) 10000))
(assert (x4938 x668))
(assert (x4938 x7215))
(assert (x4938 x3208))
(assert (x4938 x3604))
(assert (=> (<= x8340 10000) (= 0 (x1388 x8340))))
(assert (x4938 x731))
(assert (= x3242 (and x6070 x3421)))
(assert (x4938 x3896))
(assert (=> (>= 10000 x3808) (= (x1388 x3808) 0)))
(assert (= x4516 x3568))
(assert (x4938 x977))
(assert (x4938 x3723))
(assert (=> (<= x8278 10000) (= 0 (x1388 x8278))))
(assert (= (x3407 x3989 x6760 x1411) (x1388 (x3407 x3989 x6760 x1411))))
(assert (< 10000 (x3407 64 x26 (ite (>= 32 x2119) x5997 (ite (>= 64 x2119) x1207 (ite (<= x2119 96) x568 (ite (>= 128 x2119) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250)))))))))
(assert (x4938 x5009))
(assert (= (and x4113 x4789) x3549))
(assert (= x2314 (or x4909 x3053)))
(assert (= x7630 (or x954 x4399)))
(assert (x4938 x197))
(assert (=> (>= 10000 x4464) (= (x1388 x4464) 0)))
(assert (x4938 x1662))
(assert (not (x8398 (x3407 64 x3627 3))))
(assert (= x2753 (x1688 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753))))
(assert (= x324 (x701 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (> (x7622 x3479 x7884 x1998 x3288 x2864 x1503) 10000))
(assert (=> (>= 10000 x5832) (= (x1388 x5832) 0)))
(assert (=> (>= 10000 x7276) (= (x1388 x7276) 0)))
(assert (= (and x263 (not x5925)) x1595))
(assert (= 32 (x3116 (x1022 32 103))))
(assert (= x7316 (and x2006 (not x4143))))
(assert (= (x6340 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499)) x380))
(assert (= (or x2102 x3011) x3009))
(assert (< 10000 (x7087 x3224 x8081 x5985 x4105)))
(assert (= (=> (and (= x3667 x3745) (= x3648 x2301) (= x1475 x5366) (= x7838 x795) (= x3758 x689) (= x4606 x4553) (= x7380 x2327) (= x2030 x6620) (= x1084 x5121) (= x2519 x906) (= x8062 x4832) (= x7779 x1759) (= x2286 x4741)) x1296) x4845))
(assert (= (x3647 (x3407 64 x1232 (ite (<= x6541 32) x1119 (ite (>= 64 x6541) x7379 (ite (>= 96 x6541) x7801 (ite (<= x6541 128) x8520 (ite (>= 160 x6541) x7562 (ite (>= 192 x6541) x5591 x6376)))))))) x1232))
(assert (=> (<= x1232 10000) (= (x1388 x1232) 0)))
(assert (= 64 (x3116 (x3407 64 x3627 7))))
(assert (x8398 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x4938 x4531))
(assert (= (x1688 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) x8218))
(assert (x150 x6557))
(assert (x704 x158))
(assert (= x4701 (and (not x7152) x7141)))
(assert (x4938 x1325))
(assert (> (x7087 x3989 x5981 x1922 x4627) 10000))
(assert (= (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753) (x1388 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753))))
(assert (= x5299 (and x5708 (not x2906))))
(assert (x4938 x7568))
(assert (x150 x1639))
(assert (= (x1388 (x3407 64 x4440 36)) (x3407 64 x4440 36)))
(assert (= x4191 (and x3028 (not x1932))))
(assert (x4938 x6776))
(assert (= x6864 (x1688 (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117))))
(assert (x4938 x1732))
(assert (= x1114 (or (and x3761 x844) (and x4683 x6928))))
(assert (x4938 x4104))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6604 12)))
(assert (= (and x3349 (not x5247)) x263))
(assert (= 0 (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x7087 x6213 x8482 x5120 x2533) (x1388 (x7087 x6213 x8482 x5120 x2533))))
(assert (= x7004 x29))
(assert (= x4121 (and x820 x1620)))
(assert (x4938 x6042))
(assert (= (x1022 x3651 x1954) (x1388 (x1022 x3651 x1954))))
(assert (= (x3407 64 x8409 2) (x1388 (x3407 64 x8409 2))))
(assert (= x6496 (=> (and (= x5636 x7779) (= x1084 x6533) (= x2216 x2030) (= x3648 x7217) (= x72 x4832) (= x795 x2756) (= x4553 x3557) (= x3675 x5366) (= x906 x7640) (= x3758 x7882) (= x7636 x3667) (= x1542 x2286) (= x1892 x2327)) x4845)))
(assert (= (and (not x7977) x3101) x7133))
(assert (= x7748 (x3647 (x7087 x7277 x7748 x160 x2415))))
(assert (= (x555 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) x8265))
(assert (= (and x8290 x7678) x4356))
(assert (x4938 x5304))
(assert (x2131 x2331))
(assert (x4938 x156))
(assert (< 10000 (x1022 x4598 x7006)))
(assert (x4938 x5020))
(assert (= (or x1833 x245) x5806))
(assert (=> (<= x4187 10000) (= 0 (x1388 x4187))))
(assert (x4938 x3689))
(assert (=> (<= x5749 10000) (= (x1388 x5749) 0)))
(assert (=> (>= 10000 x692) (= 0 (x1388 x692))))
(assert (x4938 x3541))
(assert (x4938 x6605))
(assert (x3670 x8533))
(assert (x4938 x4624))
(assert (< (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7336))
(assert (x4938 x3493))
(assert (x4938 x3833))
(assert (= x1223 (x5419 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (= (and x300 x6417) x3008))
(assert (< 10000 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)))
(assert (=> (>= 10000 x802) (= 0 (x1388 x802))))
(assert (x4938 x3667))
(assert (x4938 x3947))
(assert (not (x8398 (x3407 64 x3533 3))))
(assert (= (and x7322 x6561) x1868))
(assert (not (x8398 (x3407 64 x3585 36))))
(assert (x4938 x6100))
(assert (x4938 x2184))
(assert (x4938 x2981))
(assert (x4938 x4711))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x2454 x4147 x8278 x3885 x5310)))
(assert (< (x3407 x4400 x530 x4750) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2442 (x701 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023))))
(assert (= 6 (x701 (x3407 64 x6658 6))))
(assert (x4938 x8191))
(assert (x4938 x6722))
(assert (x4938 x2891))
(assert (x4938 x6019))
(assert (x4938 x6180))
(assert (= (=> (and (= x1608 (< 0 x7518)) (= (x2230 (- x4188 (mod (ite (> 32 x7728) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x7518) (= (- x6831 132) x7534) (= (div x7828 2) x1609) (= x4188 (x1066 1 x7828)) (= (ite (< 0 x4188) x1609 (x1066 127 x1609)) x7728)) (and (=> (not x1608) x3) (=> (and (and (= (x1066 1 x7828) x4570) (= (= 0 x4570) x5744) (= x3490 (+ 32 x6831))) x1608) (and (=> (and (and (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x7828) x5465) (= x3382 (+ x6735 x3490)) (= (* 32 (ite (not (= 0 x7728)) 1 0)) x6735) (or (= x6735 0) (= x6735 32))) x5744) x1418) (=> (and (and (or (and (= x6439 0) (not x3848)) (and x3848 (and (>= 32 x7728) (= (x7511 x3074) x1657) (= 32 x6439)))) (and (= (x1022 32 104) x3074) (= (< 0 x7728) x3848))) (not x5744)) x2773))))) x7686))
(assert (x4938 x3527))
(assert (x4938 x1042))
(assert (x4938 x1790))
(assert (= (x3407 64 x3533 7) (x1388 (x3407 64 x3533 7))))
(assert (= (and x4382 x8078) x2590))
(assert (x4938 x5200))
(assert (= x4329 (=> (= (= 0 x2702) x8521) (and (=> (and x8521 (and (= x2561 x4984) (= x8210 x2926) (= x1839 x3900))) x6594) (=> (and (not x8521) (and (= 160 x3048) (= (= x4984 x4187) x209))) (and (=> (and (and (= false x2832) (= x1466 (= x1579 x685)) (<= x218 127) (= x3323 false) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x1862) (= x4984 x3521) (>= x6802 1) (= x8406 x2926) (<= 1 x4984) (= x6802 (x8177 x3521)) (<= x4984 1461501637330902918203684832716283019655932542975) (<= x218 127) (>= 1461501637330902918203684832716283019655932542975 x685) (= x6959 36) (= 3628442803 x3425)) (not x209)) (and (=> (and (and (= x3722 (= 255 x3833)) (>= 255 x3833)) x1466) (and (=> (and x3722 (and (= true x6491) (= x1553 0) (= x5635 36) (= x5545 x2926) (= x6839 x4984) (= x3900 x8178) (= 2 x7054) (= false x435))) x2407) (=> (and (not x3722) (and (= x2845 (x3407 64 x3833 36)) (= (x1066 255 x6903) x4668) (= (+ x3833 1) x6903) (= x8409 (x1066 255 x6903)) (= (x3582 x2845) x4631) (= (= 0 x4631) x2205))) (and (=> (and (not x2205) (= x8105 (= 1 x4631))) (and (=> (and (not x8105) (= (= x4631 2) x1548)) (and (=> (and (not x1548) (= (= 3 x4631) x7338)) (and (=> (and x7338 (= (= x8409 255) x2149)) (and (=> x2149 x3439) (=> (and (not x2149) (and (= (x1066 255 x8529) x6682) (= x3342 (x1066 255 x8529)) (= x5351 (x3582 x4077)) (= x2697 (= x3342 255)) (= x8529 (+ 1 x8409)) (= x4077 (x3407 64 x8409 36)))) (and (=> x2697 x101) (=> (and (and (= x7355 (x8177 x685)) (= x7907 (x1066 255 x6471)) (= x1221 (x1066 255 x6471)) (= 128 x5516) (= x6471 (+ 1 x3342)) (= (= x7355 0) x6442) (= (x3407 64 x3342 100) x2727) (= (x4459 x2727) x2868)) (not x2697)) (and (=> (and (not x6442) (and (>= x7570 1) (= (= x4984 x3521) x1817) (= x1088 x5351) (= x4106 x1088) (<= x109 127) (= 68 x7542) (= 106705613605932439001713296114446454776331749937047859905631657259250407702528 x553) (= x5217 false) (= x7034 x2868) (>= 127 x109) (= (x8177 x1579) x7570) (= false x403) (= x5005 3957931183))) (and (=> (and (not x1817) (and (= x2248 false) (= 4 x1313) (= true x1029))) x6708) (=> (and x1817 (and (<= x988 255) (= x1965 (x3407 64 x5351 11)) (= x988 (x5754 x1965)) (= (< 3 x988) x8290))) (and (=> (and (not x8290) (= (= x988 1) x7152)) (and (=> (and (and (= false x3040) (= x313 true) (= x1313 4)) (not x7152)) x6708) (=> (and x7152 (and (= x7456 (x3407 64 x5351 11)) (= (+ 2 x7456) x7367) (= x7927 128) (= (= x770 0) x8563) (= (x8177 x1579) x770) (= (x3407 64 x5351 11) x7924))) (and (=> (and (not x8563) (and (and (= x2315 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= 100 x2177) (= 486791245 x7384) (<= x6424 127) (= x487 x4106) (= x487 x2767) (= x6037 (x8177 x1579)) (= 0 x5255) (= false x7107) (= x6010 false) (<= 1 x6037) (= x1259 0) (= false x624) (= 0 x7418) (>= 127 x6424) (= x2682 0)) (or (and x6010 (and (= x149 (ite (not (= x4695 x1579)) 1 0)) (>= 1461501637330902918203684832716283019655932542975 x4695))) (and (not x6010) (= x149 (ite x6010 1 0)))))) x6011) (=> (and (and (= x1313 0) (= x33 false) (= true x796)) x8563) x6708))))) (=> (and x8290 (and (= true x308) (= 36 x1313) (= x7252 false))) x6708))))) (=> (and x6442 (and (= x5412 false) (= x3073 2) (= x5635 0) (= x1147 true) (= x2926 x5545) (= x3900 x8178) (= x6839 x4984) (= x1553 0))) x2407))))))) (=> (and (= x2538 (= x4631 4)) (not x7338)) (and (=> (and (= (= x4631 5) x1574) (not x2538)) (and (=> (and x1574 (= x2311 (= x8409 255))) (and (=> x2311 x3439) (=> (and (not x2311) (and (= x5632 (+ 1 x8409)) (= x3067 (x3407 64 x8409 36)) (= (x1066 255 x5632) x8008) (= x8399 (= x6658 255)) (= (x1066 255 x5632) x6658) (= (x3582 x3067) x1352))) (and (=> x8399 x101) (=> (and (and (= x30 (+ 1 x6658)) (= (= 255 x2019) x1686) (= (x1066 255 x30) x2019) (= x5475 (x3407 64 x6658 6)) (= x4706 (x763 x5475)) (= (x1066 255 x30) x6422) (>= 65535 x4706)) (not x8399)) (and (=> x1686 x2820) (=> (and (not x1686) (and (= x4286 (ite (< 0 x7259) x6557 (x1066 127 x6557))) (= (x4692 x3524) x4889) (= x7772 (x1066 255 x3272)) (= x5661 (x1066 255 x3272)) (= x3272 (+ 1 x2019)) (= (div x6153 2) x6557) (= (x3407 64 x2019 12) x3524) (= x6193 (> x778 0)) (= x7259 (x1066 1 x6153)) (= (x2230 (- x7259 (mod (ite (> 32 x4286) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x778) (<= x4889 18446744073709551615))) (and (=> (and x6193 (and (= x5440 (= x4713 0)) (= x4713 (x1066 1 x6153)))) (and (=> (and (not x5440) (and (and (= (< 0 x4286) x4438) (= x1907 (x1022 32 103))) (or (and (and (= (x5394 x1907) x8196) (= 32 x488) (>= 32 x4286)) x4438) (and (= 0 x488) (not x4438))))) x1190) (=> (and (and (or (= 0 x3318) (= 32 x3318)) (= x3318 (* (ite (not (= 0 x4286)) 1 0) 32)) (= (+ 292 x3318) x6831) (= x7820 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6153))) x5440) x7686))) (=> (not x6193) x3))))))))) (=> (and (not x1574) (= (= 6 x4631) x7371)) (and (=> (and (= x5930 (= 255 x8409)) x7371) (and (=> (and (and (= x8356 (x1066 255 x8055)) (= (x3582 x5114) x5966) (= (+ x8409 1) x8055) (= (= x8356 255) x8046) (= x5114 (x3407 64 x8409 36)) (= x3035 (x1066 255 x8055))) (not x5930)) (and (=> x8046 x101) (=> (and (not x8046) (and (= (+ 1 x8356) x8316) (= x4502 (x1066 255 x8316)) (= x5915 (x3407 64 x8356 36)) (= x4786 (= 255 x4502)) (= x4120 (x3582 x5915)) (= (x1066 255 x8316) x8205))) (and (=> x4786 x1986) (=> (and (and (= (x1066 255 x6883) x6563) (= x6883 (+ 1 x4502)) (= x3678 (= 255 x2876)) (= (x1066 255 x6883) x2876) (= (x3407 64 x4502 36) x2525) (= (x3582 x2525) x2692)) (not x4786)) (and (=> x3678 x2820) (=> (and (and (= x2805 (x3407 64 x2876 36)) (= 128 x6942) (= x5190 (x8177 x685)) (= x6593 (= x5190 0)) (= (x1066 255 x3709) x805) (= x3880 (x1066 255 x3709)) (= x6142 (x3582 x2805)) (= (+ 1 x2876) x3709)) (not x3678)) (and (=> (and (not x6593) (and (= (x5769 x685) x7954) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7954 x5966)) x6589) (= x4204 (>= x8172 x5966)) (= (and x6589 x4204) x1413) (= (x5769 x3521) x8172))) (and (=> (and (not x1413) (and (= x5873 x2926) (= x7880 x3900) (= 0 x1282) (= x1773 x4984) (= 0 x5144) (= x1268 x805))) x2419) (=> (and x1413 (and (or (and (= (ite x6459 1 0) x8153) (not x6459)) (and x6459 (and (= (ite (not (= x3521 x4695)) 1 0) x8153) (<= x4695 1461501637330902918203684832716283019655932542975)))) (and (= x7902 x57) (= x4120 x7363) (>= x5767 1) (<= x57 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6974 false) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8233 x5966)) (= x249 false) (= x4905 x4218) (= (x8177 x1579) x5767) (= x6459 (not (= x3521 x1579))) (= x2692 x3912) (= (x5368 x685) x8233) (= x4905 x6142) (= 100 x3251) (= x57 (+ x8233 x5966)) (= x7244 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= (x5769 x3521) x664) (= x467 x3912) (= x8509 486791245) (= x7363 x1642) (= x1780 (- x664 x5966)) (<= x3322 127) (>= 127 x3322) (>= x57 0)))) x3259))) (=> (and x6593 (and (= true x5500) (= 0 x1553) (= 0 x5635) (= x3900 x8178) (= x5545 x2926) (= x1349 false) (= x4984 x6839) (= x6815 2))) x2407))))))))) (=> x5930 x3439))) (=> (and (not x7371) (= x6099 (= 7 x4631))) (and (=> (and (= x6347 (= x8409 255)) x6099) (and (=> (and (not x6347) (and (= x1531 128) (= x5534 (x1066 255 x3658)) (<= x4404 1461501637330902918203684832716283019655932542975) (= x4404 (x1008 x2374)) (= (x3407 64 x8409 2) x2374) (= (x1066 255 x3658) x3876) (= x543 (= 0 x822)) (= x3658 (+ x8409 1)) (= x822 (x8177 x685)))) (and (=> (and (and (= x3900 x8178) (= 0 x5635) (= true x3797) (= x5545 x2926) (= x4984 x6839) (= 2 x6341) (= false x3102) (= x1553 0)) x543) x2407) (=> (and (and (<= x7327 127) (<= x7327 127) (= x2021 (= x3521 x4695)) (>= x7514 1) (>= 1461501637330902918203684832716283019655932542975 x4695) (= x371 36) (= x2466 2770781680) (= x2732 74700126319118050543342327103397598470879858733489597287354029460387927162880) (= false x4520) (= x4404 x3225) (= x7514 (x8177 x1579)) (= false x10)) (not x543)) (and (=> (and (and (= x3753 (< 0 x7744)) (= (x5769 x1579) x7744)) x2021) (and (=> (and (and (= x3900 x7111) (= x3876 x7757)) (not x3753)) x2892) (=> (and x3753 (and (= (x5769 x1579) x5363) (= 128 x4787) (= (>= x5363 x7744) x6413) (= x884 (x5769 x4404)) (= x1097 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x884 x7744))) (= x6378 (and x6413 x1097)))) (and (=> (and (and (or (and (not x4912) (and (= x5116 x3876) (= x3900 x2866))) (and x4912 (and (= x6223 (>= (x3878 x1579) x3493)) x8394 (= (x2476 x4404) x4041) (>= 4294967295 x4549) x6223 (= x5116 x3817) (= x3493 (x2476 x1579)) (= (= (x3878 x4404) x4041) x8394) (= x4635 x2866)))) (and (= x8264 (- x5186 x7744)) (<= x8256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8256) (= x4912 (< 0 x4012)) (= x8256 (+ x7744 x2528)) (= x8256 x2043) (= x5186 (x5769 x1579)) (= (x7401 x4404) x2528) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x7744 x2528)))) x6378) x898) (=> (and (not x6378) (and (= x1149 x3900) (= x485 0) (= x496 0) (= x3876 x7604))) x2268))))) (=> (and (not x2021) (and (= x4096 true) (= x4479 false) (= 100 x7432))) x4892))))) (=> x6347 x3439))) (=> (and (= x5019 (= x4631 8)) (not x6099)) (and (=> (and (= x455 (= x8409 255)) x5019) (and (=> (and (and (= x6198 (x1066 255 x7969)) (= x4632 (x3407 64 x8409 36)) (= x2678 (= 0 x5070)) (= (x3582 x4632) x7443) (= (x1066 255 x7969) x4607) (= x7969 (+ x8409 1)) (= x1218 128) (= x5070 (x8177 x685))) (not x455)) (and (=> (and (and (= x5635 0) (= false x464) (= x5545 x2926) (= x626 2) (= x1553 0) (= x8178 x3900) (= x6839 x4984) (= x2809 true)) x2678) x2407) (=> (and (and (= x7443 x3430) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x3396) (>= 127 x8190) (= x5841 false) (= (x8177 x1579) x5879) (= 1313998243 x3936) (= false x1992) (= 36 x4868) (= (= x4695 x3521) x7829) (<= x4695 1461501637330902918203684832716283019655932542975) (>= x5879 1) (<= x8190 127)) (not x2678)) (and (=> (and x7829 (= (> 100000 x7443) x329)) (and (=> (and x329 (and (= false x2710) (= 4 x8483) (= x5261 true))) x2364) (=> (and (not x329) (and (= x3900 x8161) (= 1 x5306) (= 0 x6603) (= x4607 x1948) (= (x3582 x4632) x1294) (= x1294 x517) (= x4984 x3218))) x1454))) (=> (and (and (= 100 x8483) (= x2285 false) (= x3160 true)) (not x7829)) x2364))))) (=> x455 x3439))) (=> (and (not x5019) (and (= x3388 x2926) (= x8409 x571) (= x4175 x4984) (= x3900 x1005))) x4638))))))))) (=> (and x2538 (= (= x8409 255) x7205)) (and (=> x7205 x3439) (=> (and (not x7205) (and (= (+ x8409 1) x7568) (= x814 (= x1859 255)) (= (x3407 64 x8409 36) x362) (= (x1066 255 x7568) x6309) (= (x3582 x362) x4435) (= x1859 (x1066 255 x7568)))) (and (=> x814 x101) (=> (and (and (= (x3407 64 x1859 100) x6609) (= (x1066 255 x4821) x7476) (= x5941 (= x3585 255)) (= x2700 (x4459 x6609)) (= x4821 (+ 1 x1859)) (= (x1066 255 x4821) x3585)) (not x814)) (and (=> x5941 x1986) (=> (and (and (= x5476 (x3407 64 x3585 36)) (= 2 x5726) (= 0 x1553) (= x3606 (<= x4435 x4611)) (= x5746 true) (= x3538 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2221 x4435))) (= x4611 (x5769 x3521)) (= false x6860) (= 0 x5635) (= x3900 x8178) (not (and x3538 x3606)) (= (x3582 x5476) x2263) (= (+ x3585 1) x7765) (= (x1066 255 x7765) x3412) (= (x1066 255 x7765) x5861) (= x2221 (x5769 x685)) (= x5545 x2926) (= x6839 x4984)) (not x5941)) x2407))))))))))) (=> (and (= (= x8409 255) x7258) x1548) (and (=> (and (and (>= 65535 x7989) (= x6451 (x3407 64 x8409 6)) (= x2036 (x1066 255 x7656)) (= x4637 (= x7195 255)) (= x7656 (+ 1 x8409)) (= x7989 (x763 x6451)) (= (x1066 255 x7656) x7195)) (not x7258)) (and (=> (and (not x4637) (and (= (+ x7195 1) x415) (= x6477 (ite (> x5391 0) x6418 (x1066 127 x6418))) (= (x3407 64 x7195 12) x2599) (= x6418 (div x6153 2)) (= (> x8129 0) x6612) (= x4494 (x1066 255 x415)) (= (x1066 1 x6153) x5391) (= x5057 (x4692 x2599)) (= x8129 (x2230 (- x5391 (mod (ite (> 32 x6477) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x5057 18446744073709551615) (= (x1066 255 x415) x5372))) (and (=> (not x6612) x6732) (=> (and x6612 (and (= x1593 (= x4983 0)) (= (x1066 1 x6153) x4983))) (and (=> (and (not x1593) (and (or (and x2831 (and (>= 32 x6477) (= x1032 (x5394 x7538)) (= 32 x926))) (and (= 0 x926) (not x2831))) (and (= (x1022 32 103) x7538) (= x2831 (< 0 x6477))))) x8324) (=> (and (and (= (+ x722 292) x3299) (= x722 (* (ite (not (= 0 x6477)) 1 0) 32)) (or (= 32 x722) (= x722 0)) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6153) x5457)) x1593) x6087))))) (=> x4637 x1986))) (=> x7258 x3439))))) (=> (and x8105 (= (= 255 x8409) x1354)) (and (=> (and (not x1354) (and (= (x1066 255 x3639) x2597) (= (x3407 64 x8409 6) x2411) (>= 65535 x3533) (= x3639 (+ x8409 1)) (= (x1066 255 x3639) x6604) (= (x763 x2411) x3533) (= x6063 (= 255 x6604)))) (and (=> x6063 x1986) (=> (and (and (= (x3407 64 x6604 12) x8237) (>= 18446744073709551615 x26) (= x26 (x4692 x8237)) (= (x1066 255 x7783) x2308) (= (x2230 (- x7307 (mod (ite (> 32 x364) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1288) (= x7783 (+ 1 x6604)) (= (x1066 1 x6153) x7307) (= (ite (< 0 x7307) x7473 (x1066 127 x7473)) x364) (= x7473 (div x6153 2)) (= (x1066 255 x7783) x3728) (= (< 0 x1288) x1067)) (not x6063)) (and (=> (not x1067) x6732) (=> (and x1067 (and (= x4305 (= x1177 0)) (= (x1066 1 x6153) x1177))) (and (=> (and (not x4305) (and (and (= x5268 (< 0 x364)) (= (x1022 32 103) x4256)) (or (and (= 0 x7998) (not x5268)) (and (and (= (x5394 x4256) x600) (= x7998 32) (>= 32 x364)) x5268)))) x1073) (=> (and x4305 (and (= x959 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x6153)) (= x7298 (* 32 (ite (not (= x364 0)) 1 0))) (= (+ x7298 292) x8276) (or (= 32 x7298) (= 0 x7298)))) x3542))))))) (=> x1354 x3439))))) (=> (and (= (= 255 x8409) x2335) x2205) (and (=> (and (and (= (x3407 64 x8409 2) x2752) (= (x1008 x2752) x5242) (= x6638 (= 255 x3138)) (= x3138 (x1066 255 x5393)) (= x5393 (+ x8409 1)) (= (x1066 255 x5393) x4762) (>= 1461501637330902918203684832716283019655932542975 x5242)) (not x2335)) (and (=> x6638 x101) (=> (and (and (= (x1066 255 x5508) x3228) (= x5546 (= 255 x3228)) (= x5508 (+ x3138 1)) (= (x3407 64 x3138 6) x8182) (= (x763 x8182) x3283) (= x2195 (x1066 255 x5508)) (>= 65535 x3283)) (not x6638)) (and (=> (and (and (= (x1008 x3555) x1484) (= (x3407 64 x3228 2) x3555) (= x1958 (x1066 255 x2600)) (= x3223 (= x1958 255)) (= x7973 (x1066 255 x2600)) (= x2600 (+ x3228 1)) (<= x1484 1461501637330902918203684832716283019655932542975)) (not x5546)) (and (=> (and (not x3223) (and (= (x3582 x8170) x2089) (= x4064 (x1066 255 x2554)) (= x7226 (= 0 x6688)) (= (x8177 x685) x6688) (= (x3407 64 x1958 36) x8170) (= (x1066 255 x2554) x3429) (= (+ x1958 1) x2554) (= 128 x6607))) (and (=> (and x7226 (and (= 2 x5991) (= x4984 x6839) (= false x4976) (= x2913 true) (= 0 x5635) (= 0 x1553) (= x8178 x3900) (= x2926 x5545))) x2407) (=> (and (and (= x3283 x4251) (= x392 (x8177 x1579)) (= x5254 x2089) (= x2781 (= x4695 x3521)) (= x2059 false) (<= 1 x392) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x4588) (= x5242 x3552) (<= x4695 1461501637330902918203684832716283019655932542975) (= 132 x393) (= x2264 x1484) (= 3812630263 x7157) (>= 127 x2355) (>= 127 x2355) (= false x3769)) (not x7226)) (and (=> (and (and (= x1850 100) (= false x4056) (= true x7286)) (not x2781)) x3087) (=> (and x2781 (= (> 100000 x2089) x1270)) (and (=> (and x1270 (and (= 4 x1850) (= true x1869) (= x1803 false))) x3087) (=> (and (and (= x3900 x941) (= (x3582 x8170) x1367) (= x4420 (x1008 x2752)) (= 1 x6094) (= x1367 x7762) (= x359 x5885) (= x4064 x5946) (= (x763 x8182) x7725) (= x7846 0) (= x359 (x1008 x3555))) (not x1270)) x3638))))))) (=> x3223 x2820))) (=> x5546 x1986))))) (=> x2335 x3439))))))) (=> (and (and (= x3576 2) (= 0 x1553) (= x2926 x5545) (= x5635 0) (= x3976 false) (= true x78) (= x6839 x4984) (= x8178 x3900)) (not x1466)) x2407))) (=> (and (and (= x676 (<= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x8177 x4187) x4863) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000 x2926)) x1069) (= x7036 x2926) (= x6273 3628442803) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x1046) (= x28 x7036) (= x4755 false) (<= 1 x4863) (= (* 1000000000 x2926) x3911) (>= 127 x1694) (= x4697 (and x676 x1069)) (>= 127 x1694) (= false x7144) (= x8156 36)) x209) (and (=> (and (and (<= x3911 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2758 (x3320 x2885)) (= x3911 x7923) (= (> x2758 x4189) x6805) (>= x3911 0) (= x1382 (x3407 64 x1579 1)) (= x4189 (x7446 x1382)) (= x2885 (x3407 64 x1579 2))) x4697) (and (=> (and (= x7290 (ite x6805 1 0)) x6805) x4834) (=> (and (and (= (x2230 (- x4189 x2758)) x2220) (= x5231 (> x2220 x4189))) (not x6805)) (and (=> (and (not x5231) (= x7290 (ite (> x7923 x2220) 1 0))) x4834) (=> (and (and (= 36 x5315) (= x1423 true) (= false x8381)) x5231) x3583))))) (=> (not x4697) x4608)))))))))
(assert (=> (>= 10000 x7648) (= (x1388 x7648) 0)))
(assert (=> (>= 10000 x1344) (= 0 (x1388 x1344))))
(assert (not (x8398 (x3407 64 x8409 2))))
(assert (x4938 x4354))
(assert (x4938 x4175))
(assert (= 0 (x1388 1914215)))
(assert (= x1256 (x3647 (x3407 64 x1256 11))))
(assert (x4938 x5213))
(assert (=> (>= 10000 x5813) (= (x1388 x5813) 0)))
(assert (= (and x8437 (not x6210)) x7353))
(assert (x4938 x2956))
(assert (x4938 x7888))
(assert (=> (>= 10000 x4599) (= 0 (x1388 x4599))))
(assert (=> (<= x7563 10000) (= 0 (x1388 x7563))))
(assert (x4938 x4388))
(assert (x4938 x7611))
(assert (= x159 (x6568 (x7622 x5857 x6884 x2985 x8141 x159 x2846))))
(assert (=> (<= x4467 10000) (= 0 (x1388 x4467))))
(assert (x4938 x8278))
(assert (x4938 x4566))
(assert (x4938 x733))
(assert (x3670 x8152))
(assert (> (x3407 x6541 x4467 x2703) 10000))
(assert (= (x3407 x1389 x5288 x1940) (x1388 (x3407 x1389 x5288 x1940))))
(assert (=> (<= x1644 10000) (= 0 (x1388 x1644))))
(assert (x4938 x2497))
(assert (x4938 x7427))
(assert (=> (<= x1859 10000) (= 0 (x1388 x1859))))
(assert (x4938 x6906))
(assert (x4938 x6215))
(assert (=> (<= x4747 10000) (= 0 (x1388 x4747))))
(assert (= (x7087 x1389 x4115 x5007 x2944) (x1388 (x7087 x1389 x4115 x5007 x2944))))
(assert (not (x8398 (x3407 64 x1958 36))))
(assert (= (or x3609 x7679 x6644 x8551 x6602) x7449))
(assert (x4938 x7959))
(assert (= (=> (= (= 0 x4023) x7200) (and (=> (and (and (= x1927 x621) (= x661 x6676) (= 2 x3199) (= true x5588) (= x2850 x2398) (= x2126 x6283) (= x7374 x307) (= x138 x1991) (= x8267 x4066) (= x2133 x5801) (= x584 x7078) (= x6331 x5098) (= x5099 x6717) (= x6168 0) (= x2331 x6291) (= x4010 x4368) (= x3615 false)) x7200) x5672) (=> (and (not x7200) (and (= x794 x4354) (= x1535 x3049) (= x2811 x1983) (= x8298 x4924) (= x3714 x1433) (= x514 x5948) (= x2031 x3399) (= x5581 x137) (= x7015 x3551) (= x1684 x3463) (= x3995 x5382) (= x1325 x3937) (= x7369 x6862))) x369))) x7040))
(assert (x4938 x3596))
(assert (= x3224 (x3116 (x3407 x3224 x5218 x6215))))
(assert (x4938 x7929))
(assert (x4938 x4827))
(assert (= x3575 (=> (and (= x7005 (x7100 (+ x2217 32))) (= (ite (< 0 x6551) x4138 (x1066 127 x4138)) x5165) (= x4749 (x6128 x8344)) (= x6551 (x1066 1 x5750)) (= x5750 (x7156 x2141)) (= (x7100 (+ 32 x5908)) x5696) (> x5908 x2477) (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639933) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x2477) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2477) (and (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639838) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2477))) (= x5908 (x7100 (+ 32 x1229))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2477) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639773 x2477) (and (>= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x2477))) (= x4751 (x2230 (- x5908 x2477))) (< x5908 x7005) (= (x7100 (+ x4959 32)) x1229) (= x2141 (x3407 64 x7048 3)) (= 0 x5054) (= (x7100 (+ 32 x2477)) x4959) (= x1329 (x2230 (- x7005 x5908))) (= (x3407 64 x4120 11) x7375) (or (>= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639841) (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639773) (and (>= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639838 x2477))) (= x2898 (> x5729 0)) (= x1043 (x3407 64 x4120 11)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2477) (= (x2230 (- x6551 (mod (ite (> 32 x5165) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5729) (= x2792 (x2230 (- x1329 32))) (= (div x5750 2) x4138) (= x4276 (x5733 x48)) (= (+ x1043 2) x48) (= (+ 1 x7375) x8344) (= (x2230 (- x4751 32)) x6261) (= x2217 (x7100 (+ x5696 2))) (<= x2477 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1721 (x3407 64 x4120 11))) (and (=> (and (and (= x3131 (x7100 (+ x7005 32))) (<= 1 x5348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7005) (= x2566 (* 32 x8327)) (> x5348 x7005) (<= x7005 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x8327 (div (+ x5165 31) 32)) (= (x7100 (+ x7005 (mod (+ 32 x2566) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x5348) (= x5812 (= x5165 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x7005)) x2898) (and (=> (and (= x4265 (< 31 x5165)) (not x5812)) (and (=> (and (and (and (= (x7100 (+ x3131 x5165)) x4149) (= (x751 x1902) x7971) (= (< x3534 x4149) x4054) (= (x1022 32 x2141) x1902) (= x3534 (x7100 (+ x3131 32))) (= x6395 (+ x1902 1))) (or (not x4054) (and x4054 (and (= x6919 (x751 x6395)) (not (< x5059 x4149)) (= x5059 (x7100 (+ x3534 32))))))) x4265) x7161) (=> (and (and (= x4569 (x7156 x2141)) (= (* x2853 256) x4046) (= x2853 (div x4569 256))) (not x4265)) x8343))) (=> x5812 x8343))) (=> (and (and (= x62 false) (= x1216 36) (= x8336 true)) (not x2898)) x5369)))))
(assert (x4938 x98))
(assert (= x7223 (and x4992 x6901)))
(assert (= (x1388 (+ 2 x1043)) (x1388 x1043)))
(assert (x4938 x2079))
(assert (= x6841 (x3647 (x7622 x3651 x6841 x2084 x4642 x4462 x3445))))
(assert (x4938 x6642))
(assert (x4938 x868))
(assert (x4938 x7927))
(assert (=> (<= x1395 10000) (= (x1388 x1395) 0)))
(assert (= (x701 (x3407 64 x8409 36)) 36))
(assert (x4938 x4293))
(assert (=> (>= 10000 x7643) (= 0 (x1388 x7643))))
(assert (= x3219 (and (not x7834) x3107)))
(assert (x4938 x7635))
(assert (= (or x7759 x7229) x7236))
(assert (= (and x3965 (not x7419)) x7809))
(assert (= (and x5540 x2760) x8250))
(assert (= x7811 (=> (and (= x5889 true) (= x108 0) (= false x7230)) x5264)))
(assert (= (x555 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) x7352))
(assert (= (x3116 (x1022 x5857 x8169)) x5857))
(assert (= (x3407 64 x3533 3) (x1388 (x3407 64 x3533 3))))
(assert (x4938 x4955))
(assert (x4938 x3382))
(assert (= (or (and (not x5257) x7774) (and x3050 (not x5634)) (and x1241 (not x5265)) (and x5063 (not x6067))) x7876))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x5857 x604 x2406 x7313)))
(assert (x4938 x2392))
(assert (x4938 x1320))
(assert (x4938 x2978))
(assert (=> (<= x6213 10000) (= 0 (x1388 x6213))))
(assert (= (and x3632 x7641) x6510))
(assert (< (x3407 64 x8356 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x7622 x3224 x7683 x1344 x5037 x3808 x8369) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x6765))
(assert (=> (>= 10000 x1954) (= (x1388 x1954) 0)))
(assert (= (and x8154 x1950) x8361))
(assert (< 10000 (x7087 x1389 x4115 x5007 x2944)))
(assert (=> (>= 10000 x1858) (= (x1388 x1858) 0)))
(assert (= (and x6707 x7590) x7795))
(assert (x4938 x7187))
(assert (= x2788 (and (not x3678) x7194)))
(assert (not (x8398 (x7087 x2119 x1810 x1425 x7992))))
(assert (x4938 x6209))
(assert (not (x8398 (x3407 x7277 x1788 x5949))))
(assert (> (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (<= x3224 64) x3986 (ite (>= 96 x3224) x7579 (ite (<= x3224 128) x8321 (ite (<= x3224 160) x8325 (ite (>= 192 x3224) x4873 x2824))))))) 10000))
(assert (not (x8398 (x1896 x7277 x2481 x3415 x960 x8255))))
(assert (x4938 x6731))
(assert (x4938 x1591))
(assert (= (x1388 (x7622 x7277 x828 x6423 x4655 x7851 x163)) (x7622 x7277 x828 x6423 x4655 x7851 x163)))
(assert (= (and x302 x2774) x7894))
(assert (= x1844 (and x6749 x5547)))
(assert (= (x6340 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265)) x1747))
(assert (x4938 x7880))
(assert (x4938 x7265))
(assert (x4938 x5420))
(assert (x4938 x1467))
(assert (x4938 x4691))
(assert (x4938 x942))
(assert (x4938 x4377))
(assert (= (x1388 (x3407 64 x8340 36)) (x3407 64 x8340 36)))
(assert (= (x1388 65459779515086145227071195481915504640854538040456829512690024447692440076288) 0))
(assert (= (=> (and (= x1807 (= x6598 0)) (or x1807 (not x1807))) x2677) x3210))
(assert (= (and (not x5662) x1708) x4934))
(assert (x4938 x2409))
(assert (= (and x6552 (not x8240)) x871))
(assert (x4938 x5826))
(assert (x4938 x3490))
(assert (x4938 x7425))
(assert (= (x3116 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)) x2726))
(assert (=> (<= x5323 10000) (= 0 (x1388 x5323))))
(assert (= x3153 (and x7862 x4309)))
(assert (= x716 (and x2834 x2898)))
(assert (x4938 x4097))
(assert (x4938 x5703))
(assert (= x2722 (and (not x5231) x4985)))
(assert (= x6718 (and (not x5930) x8501)))
(assert (x4938 x2628))
(assert (x4938 x3240))
(assert (x4938 x4817))
(assert (x4938 x1881))
(assert (= (and x2537 x3510) x6070))
(assert (= x663 (x3647 (x7622 x4598 x663 x6206 x1584 x7317 x3231))))
(assert (= (and (not x8399) x8130) x1219))
(assert (= x3989 (x3116 (x3407 x3989 x6760 x1411))))
(assert (=> (<= x3007 10000) (= 0 (x1388 x3007))))
(assert (< (x1896 x3989 x7933 x2869 x5737 x214) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2162 (and x1127 x2134)))
(assert (x4938 x5207))
(assert (=> (>= 10000 x3306) (= 0 (x1388 x3306))))
(assert (x4938 x1626))
(assert (x4938 x7245))
(assert (< 10000 (x1896 x3224 x6110 x1045 x8162 x2618)))
(assert (< 10000 (x3407 64 x1579 2)))
(assert (= x6185 (x6340 (x1896 x2119 x3204 x7545 x6185 x4559))))
(assert (=> (>= 10000 x4367) (= 0 (x1388 x4367))))
(assert (= (x3647 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138)) x2176))
(assert (=> (<= x5267 10000) (= (x1388 x5267) 0)))
(assert (=> (>= 10000 x1389) (= (x1388 x1389) 0)))
(assert (= (x3647 (x6944 x3479 x1438 x4422 x8057 x3661 x3312 x8218 x3890)) x1438))
(assert (x4938 x481))
(assert (x4938 x4474))
(assert (x4938 x3298))
(assert (x4938 x7329))
(assert (= x3344 x8467))
(assert (= (and x6501 (not x6459)) x5183))
(assert (> (x3407 64 x4440 36) 10000))
(assert (= (x6568 (x7622 x2726 x4078 x2312 x1794 x4185 x5530)) x4185))
(assert (x4938 x4768))
(assert (not (x8398 (x3407 64 x4706 7))))
(assert (=> (>= 10000 x4872) (= 0 (x1388 x4872))))
(assert (x4938 x7525))
(assert (x4938 x278))
(assert (x4938 x5101))
(assert (= (and (not x5542) x3626) x2006))
(assert (x4938 x5367))
(assert (x4938 x1272))
(assert (x4938 x4750))
(assert (=> (>= 10000 x7006) (= 0 (x1388 x7006))))
(assert (x4938 x835))
(assert (x4938 x6572))
(assert (=> (<= x3521 10000) (= (x1388 x3521) 0)))
(assert (x4938 x7343))
(assert (x4938 x8117))
(assert (= (and x4375 x3307) x1366))
(assert (x4938 x7954))
(assert (not (x8398 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (not (x8398 (x3407 x3479 x2164 x2366))))
(assert (= x588 (and (not x329) x3459)))
(assert (= x7106 x5871))
(assert (= x3188 (and x4054 x4776)))
(assert (x4938 x7556))
(assert (x4938 x1111))
(assert (x4938 x3691))
(assert (=> (>= 10000 x6405) (= 0 (x1388 x6405))))
(assert (x4938 x8406))
(assert (x4938 x8158))
(assert (x4938 x7159))
(assert (x4938 x7561))
(assert (= x2253 x4020))
(assert (x4938 x7915))
(assert (x4938 x8248))
(assert (x8398 1341992515))
(assert (= x4373 (=> (and (= x621 x6915) (= 2 x2210) (= x2850 x6542) (= x3108 (x1066 255 x4779)) (= x4870 x8267) (= x1814 x2331) (= x7374 x3119) (= x2471 x4475) (= x5225 x6283) (= x5685 0) (= x584 x7164) (= x4001 x6717) (= x44 x5098) (= x3529 x4368) (= x138 x4619) (= x8461 x5801) (= x607 x3108)) x4744)))
(assert (< 10000 (x7087 x2119 x1810 x1425 x7992)))
(assert (x4546 x7824))
(assert (= x8063 (and x718 x6287)))
(assert (=> (>= 10000 x1291) (= (x1388 x1291) 0)))
(assert (x4938 x1704))
(assert (x4938 x2982))
(assert (= (and x8487 x1767) x2822))
(assert (= (x1388 74700126319118050543342327103397598470879858733489597287354029460387927162880) 0))
(assert (= x3627 (x3647 (x3407 64 x3627 7))))
(assert (x4938 x8532))
(assert (= x4408 (=> (and (and (= 2088793519 x3247) (= x4005 false) (<= x4778 127) (= x5061 (x8177 x1579)) (= x1493 false) (= 128 x3774) (>= 1461501637330902918203684832716283019655932542975 x2039) (= 4 x1755) (>= 127 x4778) (<= 1 x5061) (= x1942 (= x2039 x4187))) (or (and x1942 (and (= false x1384) (= x4217 x4846) (= x7739 false) (<= 1 x2791) (= x2274 x8106) (= x2037 8365236128558009046904410293209581292053118695343348878262597880337030709248) (>= 57896044618658097711785492504343953926634992332820282019728792003956 x89) (= x4217 (* x89 1000000000)) (= 310283853 x4879) (>= 127 x1408) (>= 127 x1408) (= x3723 36) (= x7346 false) (= (x8177 x4187) x2791) (= x1829 false) (= x89 x8106))) (and (not x1942) (and (<= x2039 1461501637330902918203684832716283019655932542975) (= x7231 false) (= false x1808) (<= 1 x2039) (= false x7208) (= x4893 false) (= x5092 310283853) (= x3274 (x8177 x3521)) (>= 127 x3088) (<= 1 x3274) (= x4229 8365236128558009046904410293209581292053118695343348878262597880337030709248) (= x3521 x2039) (<= x3088 127) (= x1527 36) (= x89 x2418))))) x515)))
(assert (x4938 x1424))
(assert (x4938 x8328))
(assert (x4938 x5760))
(assert (= x4359 (and (not x2396) x1479)))
(assert (= (=> (and (= (ite (> x442 150) 150 x442) x6448) (= (< 0 x5850) x4864) (= (x7100 (+ x8266 32)) x208)) (and (=> x4864 x7094) (=> (and (and (and (= (x7100 (+ 64 x5878)) x121) (= (x8485 x7580) x3652) (= x8139 (x8485 x690)) (= (x8485 x3104) x880) (= (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265) x2591) (= (x8485 x6643) x3381) (= (x7100 (+ 192 x5878)) x662) (= (x8485 x7997) x1656) (= (x7100 (+ x5878 64)) x5243) (= (> x7297 0) x1095) (= x1737 (x1022 x6088 x8345)) (= x6486 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)) (= (x8485 x1191) x7310) (= (x7087 x6088 x7455 x5442 x6835) x3281) (= (x8485 x7063) x3094) (= (x8485 x4134) x5442) (= (x7100 (+ x5878 128)) x7825) (= x1198 (x7100 (+ 96 x5878))) (= x8345 (x8485 x5878)) (= x407 (x8485 x5878)) (= (x7100 (+ x5878 96)) x7997) (= x2571 (x7100 (+ x5878 96))) (= x6641 (x7622 x6088 x6608 x929 x2836 x1656 x880)) (= (x8485 x7104) x929) (= x4484 (x4958 0)) (= (x7100 (+ 32 x5878)) x1736) (= x8386 (x8485 x1198)) (= (x7100 (+ x5878 64)) x3921) (= x6514 (x3407 x6088 x407 x3652)) (= (x8485 x5878) x1906) (= x6643 (x7100 (+ x5878 128))) (= x8265 (x8485 x662)) (= (x8485 x5878) x7455) (= (x7100 (+ 96 x5878)) x1191) (= (x7100 (+ x5878 64)) x2085) (>= 224 x6088) (= (x8485 x121) x7265) (= x1099 (x3407 64 x3627 7)) (= x4140 (ite (= x6088 0) x4484 (ite (>= 32 x6088) x1737 (ite (<= x6088 64) x6514 (ite (<= x6088 96) x3281 (ite (<= x6088 128) x4807 (ite (>= 160 x6088) x6641 (ite (>= 192 x6088) x6486 x2591)))))))) (= (x8485 x5243) x1969) (= x3104 (x7100 (+ 128 x5878))) (= x7921 (x7100 (+ x5878 64))) (= (x1896 x6088 x2440 x5482 x1969 x6350) x4807) (= x4463 (x8485 x7825)) (= x2440 (x8485 x5878)) (= x7289 (x7100 (+ 160 x5878))) (= x690 (x7100 (+ 32 x5878))) (= x1747 (x8485 x3921)) (= x1194 (x8485 x5878)) (= (x8485 x5620) x5482) (= (x7100 (+ x5878 32)) x7580) (= (x7100 (+ 32 x5878)) x7104) (= x7297 (x8485 x3489)) (= x5620 (x7100 (+ x5878 32))) (= (x8485 x2571) x6350) (= x1138 (x8485 x1736)) (= x6088 (x8485 x8498)) (= (x7100 (+ x5878 160)) x7063) (= (x7100 (+ 32 x5878)) x4134) (= x5267 (x8485 x7289)) (= (x8485 x2085) x6835) (= x6608 (x8485 x5878)) (= x2836 (x8485 x7921))) (or (not x1095) (and (and (and (= x8240 (< 32 x7297)) (= (x8485 x6521) x4499)) (or (and (and (or (and x6562 (and (and (= (> x7297 96) x3185) (= (x1096 x2068) x7091) (= x2068 (x7100 (+ 64 x6521))) (= x141 (x7100 (+ 64 x6349)))) (or (not x3185) (and (and (= x2092 (x7100 (+ 96 x6521))) (= (x7100 (+ 96 x6349)) x2542) (>= 128 x7297) (= (x2330 x2092) x4895)) x3185)))) (not x6562)) (and (= x1725 (x7100 (+ x6349 32))) (= (x7100 (+ x6521 32)) x7702) (= x7915 (x6229 x7702)) (= x6562 (< 64 x7297)))) x8240) (not x8240))) x1095))) (not x4864)) x4379))) x473))
(assert (= x7277 (x3116 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (= (and x6674 (not x6652)) x8102))
(assert (x4938 x4549))
(assert (x4938 x5729))
(assert (x4938 x7277))
(assert (x4938 x7234))
(assert (x4938 x5487))
(assert (x4938 x8164))
(assert (= (x3116 (x3407 64 x5351 11)) 64))
(assert (x704 x5032))
(assert (x4938 x4937))
(assert (x4938 x7091))
(assert (< (x3407 64 x2616 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x6568 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016)) x4068))
(assert (not (x8398 (x7622 x5857 x6884 x2985 x8141 x159 x2846))))
(assert (= x3344 (=> (and (= (x5492 x4000) x1762) (= x890 (= 0 x1762))) (and (=> (and x890 (and (= (x7100 (+ 32 x6108)) x4819) (= false x4497) (= x340 132) (= x4907 (x7100 (+ x4819 32))) (= (x7100 (+ x4907 32)) x2849) (= true x6046) (= (x7100 (+ 4 x1662)) x6108))) x6463) (=> (and (not x890) (and (= x3118 (x2047 x1154)) (= x1154 (x3407 64 x6717 5)) (= x6209 (x666 x7142)) (= x4962 (> x6209 (ite (= x3118 0) 10000 x3118))))) (and (=> (and x4962 (and (= false x5403) (= (x7100 (+ 4 x1662)) x4722) (= x5074 (x7100 (+ x4722 32))) (= x106 true) (= x340 100) (= (x7100 (+ 32 x5074)) x6941))) x6463) (=> (and (and (= x7097 (x7100 (+ x5617 x1914))) (= x4259 (x7100 (+ 31 x5207))) (= (x7100 (+ x5702 192)) x6798) (= (x8177 x5853) x3025) (= (x7100 (+ 31 x5664)) x6988) (= x2633 (x7100 (+ 32 x3611))) (= x3058 (x7100 (+ 31 x6408))) (= x1914 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x6988)) (= x6888 (x2230 (- x4613 x1662))) (= x1993 (x7100 (+ 32 x5953))) (= (x7100 (+ x1993 32)) x4838) (= x4613 (x7100 (+ x4022 x6400))) (= x2775 (x2230 (- x2956 x5702))) (= (x7100 (+ x7142 32)) x6494) (= (x3194 x3611) x6408) (= (x7100 (+ x859 x4442)) x2956) (= x4116 (= x3025 0)) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4259) x4442) (= x5617 (x7100 (+ x6798 32))) (= (x7100 (+ x7097 32)) x859) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3058) x6400) (= (x2230 (- x7097 x5702)) x3666) (= x7899 (x7100 (+ 32 x7730))) (= (x7100 (+ 4 x1662)) x5702) (= x5664 (x5492 x4000)) (= (x666 x7142) x5207) (= x5953 (x7100 (+ 32 x5702))) (= x4022 (x7100 (+ 32 x2956))) (= (x7100 (+ 32 x4838)) x7730)) (not x4962)) (and (=> (and (and (= x2425 (and x7227 x2281)) (= x4228 (x2842 x5853)) (= (x2842 x1579) x4920) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4723 x4228)) x2281) (= x7227 (<= x4723 x4920))) (not x4116)) (and (=> (and x2425 (and (= x5652 192) (= x725 x6717) (= x1290 (x8177 x7734)) (= x2775 x13) (= x7700 89332125780766104441357105940599211734484755930370930871569612501041822040064) (= (x1623 x5853) x3356) (= 0 x5759) (= (= x5664 (x6240 196)) x4308) (< (+ x4723 x3356) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= 127 x7386) (= x1579 x6765) (= x8564 false) (= x2794 (- x2212 x4723)) (= (x2842 x1579) x2212) (<= 0 x2458) (= x2158 x6888) (>= x6888 420) (= x2524 x3666) (= x2458 x4906) (= 3313512704 x156) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2158 4)) (and (> 192 (- x2158 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x2158 4))))) x7709) x4308 (>= 127 x7386) (= x2458 (+ x4723 x3356)) (>= x2158 420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2458) (<= 1 x1290) (= x292 false))) (and (=> x7709 x4020) (=> (and (= x2800 true) (not x7709)) (and (=> (not x2800) x4020) (=> (and x2800 (= (and (> x2158 227) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2158))) x6633)) (and (=> (not x6633) x2253) (=> (and x6633 (and (= (< 18446744073709551615 x741) x3434) (= (x6051 196) x741))) (and (=> x3434 x2679) (=> (and (and (= x4252 (> x6158 x2158)) (= (x7100 (+ x741 228)) x6158)) (not x3434)) (and (=> x4252 x6690) (=> (and (not x4252) (= x5990 (< 18446744073709551615 x3666))) (and (=> (and (and (= x6899 (x7100 (+ 31 x1811))) (= (x7100 (+ x3666 4)) x1811) (= (or (and (<= x2158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x6899 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x6899 x2158) (= (<= x6899 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2158)))) x431)) (not x5990)) (and (=> (not x431) x2253) (=> (and x431 (and (= (> x2061 18446744073709551615) x5399) (= (x6051 x1811) x2061))) (and (=> x5399 x2679) (=> (and (not x5399) (and (= (x7100 (+ x1811 32)) x7138) (= (> x601 x2158) x592) (= (x7100 (+ x7138 x2061)) x601))) (and (=> (and (= x7952 (> x2775 18446744073709551615)) (not x592)) (and (=> (and (and (= x8042 (x7100 (+ 4 x2775))) (= x3901 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2158) (> x6886 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2158 x6886) (= (<= x2158 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6886))))) (= x6886 (x7100 (+ x8042 31)))) (not x7952)) (and (=> (and x3901 (and (= (> x5084 18446744073709551615) x2262) (= (x6051 x8042) x5084))) (and (=> x2262 x2679) (=> (and (not x2262) (and (= x6965 (x7100 (+ x534 x5084))) (= (x7100 (+ 32 x8042)) x534) (= (< x2158 x6965) x5208))) (and (=> x5208 x6690) (=> (and (and (= x6943 x5244) (= x3766 1) (= x5853 x2598) (= x4624 x2904) (= x7457 x8193) (= x6302 x4684) (= x4928 x4727) (= x723 x356) (= x6537 x3156) (= x1702 x3956) (= x8206 x3072) (= x3687 x7291) (= x7947 x5938) (= x7241 x8353)) (not x5208)) x462))))) (=> (not x3901) x2253))) (=> x7952 x4020))) (=> x592 x6690))))))) (=> x5990 x4020))))))))))))) (=> (and (and (= x7457 x2851) (= x6534 x3156) (= x3072 x6504) (= 0 x5602) (= x1931 x7291) (= x1426 x2904) (= x4223 x1702) (= x4727 x8561) (= x6943 x2257) (= x8435 x4684) (= x5938 x7747) (= x5853 x1952) (= x8119 x356) (= x4691 x7241)) (not x2425)) x5435))) (=> (and (and (= true x384) (= x340 0) (= x5002 false)) x4116) x6463)))))))))
(assert (x150 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (>= 10000 x6838) (= (x1388 x6838) 0)))
(assert (x4938 x7994))
(assert (x4938 x474))
(assert (x4938 x4176))
(assert (x4938 x3585))
(assert (x4938 x3728))
(assert (x4938 x396))
(assert (= (x701 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) x2319))
(assert (x4938 x7455))
(assert (x4938 x4318))
(assert (x4938 x3703))
(assert (x8398 1461501637330902918203684832716283019655932542975))
(assert (< 10000 (x7622 x2726 x4078 x2312 x1794 x4185 x5530)))
(assert (x4938 x6921))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x7195 12)))
(assert (x4938 x6116))
(assert (x4938 x7497))
(assert (x4938 x807))
(assert (> (x3407 64 x2644 12) 10000))
(assert (x4938 x1535))
(assert (= (and (not x4915) x6278) x4238))
(assert (x4938 x3016))
(assert (x4938 x1716))
(assert (= x4985 (and (not x6805) x1520)))
(assert (=> (<= x7748 10000) (= (x1388 x7748) 0)))
(assert (= x459 (or x7283 x7354)))
(assert (x8398 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (x4938 x70))
(assert (x4938 x1715))
(assert (< 10000 (x7622 x4159 x3114 x2452 x1679 x3341 x8514)))
(assert (x4938 x2795))
(assert (x4938 x4033))
(assert (= 32 (x3116 (x1022 32 x6445))))
(assert (x4938 x1904))
(assert (= x6541 (x3116 (x1896 x6541 x6699 x7203 x7803 x4524))))
(assert (x4938 x5036))
(assert (x3670 x6050))
(assert (x4938 x5223))
(assert (x4938 x833))
(assert (= (and (not x691) x6409) x5968))
(assert (= x3597 (x701 (x7087 x4159 x8094 x3597 x5628))))
(assert (x4938 x5879))
(assert (x4938 x6366))
(assert (= (x3647 (x3407 64 x6717 5)) x6717))
(assert (= 0 (x1388 21250608054068894920771655176311299370521669075471658173068242729727453822976)))
(assert (x4938 x7351))
(assert (= (x6340 (x7622 x2726 x4078 x2312 x1794 x4185 x5530)) x1794))
(assert (= (x3647 (x1896 x5857 x4592 x7294 x5171 x2027)) x4592))
(assert (x4938 x7748))
(assert (= (x701 (x7622 x4598 x663 x6206 x1584 x7317 x3231)) x6206))
(assert (=> (<= x5120 10000) (= 0 (x1388 x5120))))
(assert (=> (<= x4655 10000) (= 0 (x1388 x4655))))
(assert (=> (>= 10000 x8286) (= (x1388 x8286) 0)))
(assert (x4938 x926))
(assert (x4938 x2005))
(assert (x4938 x724))
(assert (x4938 x4607))
(assert (= (x3116 (x3407 x2454 x2923 x2510)) x2454))
(assert (= (x701 (x3407 64 x6717 5)) 5))
(assert (=> (>= 10000 x6864) (= 0 (x1388 x6864))))
(assert (x4938 x3497))
(assert (x4938 x4289))
(assert (= x27 (=> (and (= true x7184) (= x4368 x8341) (= 0 x5928) (= x3642 x6283) (= 2 x6109) (= x694 x8267) (= x5483 x8497) (= x621 x260) (= x7746 x584) (= x5801 x5830) (= x6717 x1104) (= x7374 x4917) (= x138 x7409) (= 0 x4110) (= x5098 x3450) (= x5559 x2331) (= x3598 x2850) (= x1846 false) (= x5483 (x1066 255 x4779))) x8303)))
(assert (=> (<= x2176 10000) (= (x1388 x2176) 0)))
(assert (x4938 x4881))
(assert (x704 x4821))
(assert (=> (>= 10000 x450) (= 0 (x1388 x450))))
(assert (x4938 x5635))
(assert (= x869 (and (not x8155) x8185)))
(assert (x4938 x6214))
(assert (< 10000 (x3407 x3651 x633 x7276)))
(assert (x4938 x3310))
(assert (x4938 x4183))
(assert (= x8475 (and (not x3522) x53)))
(assert (= x3479 (x3116 (x1896 x3479 x7206 x3209 x7441 x6838))))
(assert (x4938 x5104))
(assert (= x8473 (and x1010 x5496)))
(assert (x4938 x6261))
(assert (= (and x2134 (not x1127)) x2613))
(assert (= 64 (x3116 (x3407 64 x4889 (ite (<= x3224 32) x4620 (ite (>= 64 x3224) x3986 (ite (>= 96 x3224) x7579 (ite (>= 128 x3224) x8321 (ite (<= x3224 160) x8325 (ite (<= x3224 192) x4873 x2824))))))))))
(assert (= x6375 (or x5454 x7451 x3656 x7894 x5374 x4421 x5289 x8383 x3566 x1093 x15 x7489 x4849 x6178 x6894 x233 x771 x5160 x1867 x6947 x4032 x2413 x3153 x2960 x7876 x696 x6335)))
(assert (= (and x3942 x6130) x5473))
(assert (x4938 x5582))
(assert (x4485 x6557))
(assert (x4938 x5770))
(assert (x4938 x6678))
(assert (x4938 x3765))
(assert (= (x1688 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x6968))
(assert (= 32 (x3116 (x1022 32 x2141))))
(assert (x4938 x8281))
(assert (= (=> (= (= 0 x6142) x6561) (and (=> (and x6561 (and (= x5089 290) (= x1579 x697) (>= 127 x1941) x8045 (= x4515 x3128) (= false x123) (= (x7100 (+ x7988 x8033)) x1717) (= x1582 29244376827073035548771643948814531551534385112760475998805679327281764368384) x6368 (= x8033 (x7100 (+ 32 x2484))) (<= 1 x1134) (= x3480 (= 34 (x4254 260))) (<= 356 x4515) x8547 (= x5957 x7048) (= 0 x4473) (= (= (x4254 196) (x4799 486)) x8045) (= x7769 (x7100 (+ 31 x6613))) (= (= 64 (x4254 164)) x8547) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x698) x7988) (= (x7100 (+ x5386 486)) x2484) x3480 (= x6368 (= (x4799 518) (x4254 228))) (= 160 x2192) (= x1134 (x8177 x7734)) (= x6613 (x4971 128)) (= x5322 false) (>= x3128 356) (= x4600 0) (= (x7100 (+ x4166 31)) x698) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7769) x5386) (= (or (> (- x3128 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 160 (- x3128 4)) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x3128 4))))) x610) (= x4515 (x2230 (- x1717 290))) (<= x1941 127) (= x2915 (x2230 (- x2484 294))) (= 256 x8456) (= x4166 (x552 224)) (= 1084734224 x6999))) (and (=> x610 x1606) (=> (and (= x4506 true) (not x610)) (and (=> (and (= (and (< 195 x3128) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3128))) x3098) x4506) (and (=> (and (and (= x7150 (> x7169 18446744073709551615)) (= (x862 164) x7169)) x3098) (and (=> x7150 x3300) (=> (and (not x7150) (and (= x605 (x7100 (+ 196 x7169))) (= (> x605 x3128) x7193))) (and (=> (and (not x7193) (and (= x1159 (x862 260)) (>= x3128 356) (<= x3128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (> x1159 18446744073709551615) x252))) (and (=> (and (and (= (x7100 (+ x1159 292)) x5944) (= x4 (< x3128 x5944))) (not x252)) (and (=> x4 x6733) (=> (and (not x4) (and (= x6984 x6153) (= x2441 (x4349 128)) (= false x6601) (= x2926 x6224) (= x805 x576) (= x7101 (x4349 160)) (= x4695 x2307) (= 64 x5156) (= x6172 x6979) (= x7048 x4828) (= false x6900) (= x8116 x5200) (= (x4349 128) x3514) (= x4984 x2207) (= x4355 x4982) (= (x4349 160) x868) (= x2859 1) (= x685 x8376) (= x7828 x6822) (= x566 x1842) (= x3900 x2209))) x1706))) (=> x252 x3300))) (=> x7193 x6733))))) (=> (not x3098) x1606))) (=> (not x4506) x1606))))) (=> (and (and (= x6172 x6071) (= x8116 x2997) (= x4982 x2444) (= x2477 128) (= x4513 x4695) (= x6745 x1842) (= x2926 x3572) (= x685 x3497) (= x3315 x6142) (= x7828 x4334) (= x1391 x7048) (= x6153 x3731) (= x3900 x1081) (= x140 x4984) (= x2961 x805)) (not x6561)) x3575))) x456))
(assert (x4938 x7662))
(assert (= (x1022 x2726 x3440) (x1388 (x1022 x2726 x3440))))
(assert (= x3882 (or x3686 x293)))
(assert (x4938 x1633))
(assert (x4938 x1710))
(assert (= x5370 (or (and (not x2966) x4989) x2412)))
(assert (= (x3116 (x7622 x7277 x828 x6423 x4655 x7851 x163)) x7277))
(assert (= 36 (x701 (x3407 64 x5504 36))))
(assert (x8398 3628442803))
(assert (x4938 x7352))
(assert (= (x701 (x7622 x2454 x7378 x3190 x5182 x1064 x4091)) x3190))
(assert (= (and (not x1882) x52) x5240))
(assert (=> (>= 10000 x8384) (= (x1388 x8384) 0)))
(assert (x4938 x3204))
(assert (= (x1388 (x1896 x3651 x1790 x3653 x910 x8305)) (x1896 x3651 x1790 x3653 x910 x8305)))
(assert (= (x701 (x1896 x3651 x1790 x3653 x910 x8305)) x3653))
(assert (= (x1388 2001815235) 0))
(assert (x4938 x4048))
(assert (x4938 x1155))
(assert (x4938 x2219))
(assert (=> (<= x4298 10000) (= (x1388 x4298) 0)))
(assert (x4938 x2659))
(assert (=> (>= 10000 x4642) (= (x1388 x4642) 0)))
(assert (x4938 x5519))
(assert (x4938 x4905))
(assert (= (or (and x85 x7150) (and x252 x1083)) x7083))
(assert (= x6502 (or x2273 x2627)))
(assert (= (and x716 x5812) x4257))
(assert (=> (>= 10000 x5950) (= 0 (x1388 x5950))))
(assert (=> (>= 10000 x4370) (= (x1388 x4370) 0)))
(assert (x4938 x1256))
(assert (= x2867 (and x4671 x5806)))
(assert (=> (<= x3342 10000) (= (x1388 x3342) 0)))
(assert (x4938 x208))
(assert (= (and x5745 x51) x2637))
(assert (x4938 x7269))
(assert (x4938 x1251))
(assert (= x6213 (x3116 (x7622 x6213 x8556 x4777 x3164 x3734 x5287))))
(assert (x4938 x2187))
(assert (= x7720 (or x5308 x871 x4811 x4062 x6495)))
(assert (x4938 x1283))
(assert (= (and x2933 x4332) x7708))
(assert (=> (>= 10000 x4343) (= 0 (x1388 x4343))))
(assert (x4938 x7177))
(assert (= (and (not x4375) x3307) x5199))
(assert (= x4998 (and x5643 (not x4510))))
(assert (= x214 (x6568 (x1896 x3989 x7933 x2869 x5737 x214))))
(assert (= x7949 (and x1970 x7909)))
(assert (= x3818 (x6340 (x7087 x206 x7682 x314 x3818))))
(assert (x150 x6883))
(assert (x4938 x4959))
(assert (= (x6340 (x7087 x6088 x7455 x5442 x6835)) x6835))
(assert (= x5027 (and x1950 (not x8154))))
(assert (x4938 x3173))
(assert (= (and (not x1593) x3236) x4987))
(assert (= (and x3265 x5229) x4468))
(assert (x704 x7656))
(assert (x4938 x4796))
(assert (= (x7087 x4809 x1858 x5832 x2909) (x1388 (x7087 x4809 x1858 x5832 x2909))))
(assert (< (x1022 x1389 x5939) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x407 10000) (= (x1388 x407) 0)))
(assert (= (=> (and (= (= 0 x6236) x4659) (or (and (and (= x6236 x3387) (= x7343 x6617) (= x6147 x1698) (= x2422 x1600) (= x3908 (x4581 x1579)) (= x3590 (ite (= x6236 0) x4151 0)) (< (+ x3908 x3590) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1302 x2219) (= x3286 x8056) (= (- x2557 x3590) x3373) (= x2557 (x5330 x5227)) (= x2231 (+ x3908 x3590)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2231) (= x6114 x6954) (= x1037 x2231) (= x1200 x4489) (<= 0 x2231)) x4659) (and (and (= x4489 x1200) (= x1302 x2219) (= x6617 x7343) (= x6236 x3387) (= x2422 x1600) (= x1698 x6147) (= x6954 x6114) (= x8056 x3286)) (not x4659)))) x7254) x4666))
(assert (x4938 x4667))
(assert (= x1469 (or (and (not x1784) x1765) x2049)))
(assert (x4485 x732))
(assert (x4938 x307))
(assert (= x6329 (=> (and (= x7525 x1179) (= x3594 x4984) (= x3331 (x1066 255 x7783)) (= x6024 2) (= x2926 x4201) (= 0 x1615) (= x1035 x3900) (= x3331 x7979)) x105)))
(assert (=> (>= 10000 x7177) (= (x1388 x7177) 0)))
(assert (= (and x191 (not x7237)) x7713))
(assert (= x5698 x6817))
(assert (= (x701 (x2341 x4598 x5888 x4754 x4324 x1133 x5701 x6968)) x4754))
(assert (x4938 x5300))
(assert (= (and (not x3925) x5763) x4321))
(assert (x4938 x1047))
(assert (= (and x1431 (not x3673)) x3178))
(assert (=> (<= x2119 10000) (= 0 (x1388 x2119))))
(assert (x4938 x494))
(assert (x4938 x7112))
(assert (x4938 x4230))
(assert (> (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258) 10000))
(assert (x4938 x2220))
(assert (= (x3647 (x1022 x206 x1048)) x1048))
(assert (x150 x6050))
(assert (= (x701 (x3407 64 x2616 6)) 6))
(assert (x4938 x6521))
(assert (> (x1896 x5857 x4592 x7294 x5171 x2027) 10000))
(assert (x4938 x5423))
(assert (x150 x4303))
(assert (< 10000 (x7087 x3479 x7029 x183 x5058)))
(assert (=> (>= 10000 x7749) (= (x1388 x7749) 0)))
(assert (= (x3116 (x1022 x6541 x3112)) x6541))
(assert (x4938 x4544))
(assert (> (x1022 32 x7608) 10000))
(assert (= (and x243 x7790) x7629))
(assert (x4938 x3136))
(assert (x4938 x8345))
(assert (=> (<= x6215 10000) (= (x1388 x6215) 0)))
(assert (x4938 x4752))
(assert (not (x8398 (x3407 x3989 x6760 x1411))))
(assert (= x1515 (x701 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813))))
(assert (= 0 (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639841)))
(assert (x4938 x1076))
(assert (x4938 x8257))
(assert (x4938 x8491))
(assert (x4938 x5052))
(assert (= x5351 (x3647 (x3407 64 x5351 11))))
(assert (x4938 x8310))
(assert (< 10000 (x1022 32 x200)))
(assert (= x4598 (x3116 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138)))
(assert (=> (>= 10000 x1906) (= (x1388 x1906) 0)))
(assert (= (or (and x3694 x7625) (and x7515 x5539)) x434))
(assert (= 64 (x3116 (x3407 64 x3138 6))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x2726 x4078 x2312 x1794 x4185 x5530)))
(assert (= (and (not x455) x6327) x213))
(assert (> (x3407 64 x1256 11) 10000))
(assert (=> (<= x5174 10000) (= 0 (x1388 x5174))))
(assert (= (or x7035 x6576 x5585) x5547))
(assert (x4938 x1513))
(assert (= x1938 (and (not x6099) x6456)))
(assert (= (x1388 (+ x7487 1)) (x1388 x7487)))
(assert (x4938 x6915))
(assert (not (x8398 (x1896 x4598 x3197 x5234 x8550 x4437))))
(assert (x4938 x2441))
(assert (= x4073 (and (not x2186) x2010)))
(assert (= x780 (and x7708 x2063)))
(assert (= (and x2414 x1576) x8202))
(assert (x4938 x584))
(assert (x4938 x4025))
(assert (= (=> (and (= x2966 (= x1615 0)) (or x2966 (not x2966))) x5376) x105))
(assert (< (x3407 x3989 x6760 x1411) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4463 (x5419 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094))))
(assert (x4938 x8403))
(assert (x4938 x4205))
(assert (x4938 x7808))
(assert (x4938 x415))
(assert (x4938 x8311))
(assert (< 10000 (x3407 64 x3822 36)))
(assert (= (x3116 (x7622 x3651 x6841 x2084 x4642 x4462 x3445)) x3651))
(assert (x4938 x2886))
(assert (x4938 x2011))
(assert (x4938 x3819))
(assert (= x661 (x3647 (x3407 64 x661 36))))
(assert (x4938 x6623))
(assert (= (x1688 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) x450))
(assert (x4938 x5147))
(assert (x4938 x346))
(assert (=> (>= 10000 x8396) (= (x1388 x8396) 0)))
(assert (= x4020 x2679))
(assert (x4938 x6537))
(assert (= (x701 (x3407 64 x3342 100)) 100))
(assert (x704 x5632))
(assert (= 64 (x3116 (x3407 64 x1579 2))))
(assert (x4938 x2505))
(assert (=> (<= x8162 10000) (= 0 (x1388 x8162))))
(assert (= (and (not x4681) x858) x7804))
(assert (x4938 x4904))
(assert (=> (>= 10000 x7048) (= 0 (x1388 x7048))))
(assert (= (=> (and (= x6291 x2331) (= x8267 x4066) (= x2133 x5801) (= x1991 x138) (= x2850 x2398) (= true x2185) (= x6331 x5098) (= x4898 2) (= x7078 x584) (= x307 x7374) (= x5099 x6717) (= x6283 x2126) (= x4010 x4368) (= false x8339) (= x6676 x661) (= x6168 0) (= x1927 x621)) x5672) x5713))
(assert (= (x1388 (x3407 64 x2644 12)) (x3407 64 x2644 12)))
(assert (x4938 x6386))
(assert (> (x7622 x3224 x7683 x1344 x5037 x3808 x8369) 10000))
(assert (=> (>= 10000 x7123) (= 0 (x1388 x7123))))
(assert (= x4728 (and (not x1518) x5021)))
(assert (x4938 x5575))
(assert (= (x6568 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352)) x8384))
(assert (x4938 x3843))
(assert (= (x701 (x3407 64 x5351 11)) 11))
(assert (x4938 x321))
(assert (x4938 x5134))
(assert (not (x8398 (x3407 x4159 x2229 x5804))))
(assert (= x4370 (x6340 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (x4938 x1433))
(assert (= x793 (and x2124 (not x8260))))
(assert (x4938 x3015))
(assert (= x7094 (=> (and (= x6283 x3554) (= x3293 x2171) (= x6428 x4368) (= x5128 0) (= x2686 x229) (= x7233 x5801) (= x8054 1) (= x6179 x7469) (= x138 x1155) (= x232 x4230) (= x3015 x6717) (= x5396 x5113) (= x2850 x5886) (= x1038 x8267) (= x5311 x5787)) x5910)))
(assert (x4938 x6316))
(assert (x4938 x7169))
(assert (not (x8398 (x6944 x2726 x2293 x96 x3360 x4068 x79 x5336 x4016))))
(assert (x4938 x1543))
(assert (=> (<= x4037 10000) (= (x1388 x4037) 0)))
(assert (= (x1388 (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)) (x6944 x4400 x3829 x622 x4808 x7189 x5835 x5392 x6405)))
(assert (= (and (not x5752) x2986) x1380))
(assert (= (and (not x7829) x453) x4622))
(assert (= (x3647 (x7087 x5857 x604 x2406 x7313)) x604))
(assert (= (and x31 x7200) x3656))
(assert (=> (>= 10000 x5835) (= 0 (x1388 x5835))))
(assert (= x7330 (=> (and (= x6717 x5099) (= x138 x1991) (= x2398 x2850) (= x1927 x621) (= x6676 x661) (= x584 x7078) (= x8267 x4066) (= x5098 x6331) (= x5801 x2133) (= x307 x7374) (= x6283 x2126) (= x2331 x6291) (= x148 2) (= 0 x6168) (= x1581 false) (= x4010 x4368) (= true x22)) x5672)))
(assert (x4938 x1861))
(assert (=> (<= x3585 10000) (= (x1388 x3585) 0)))
(assert (=> (<= x4662 10000) (= (x1388 x4662) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x8340 2)))
(assert (not (x8398 (x1022 32 x8103))))
(assert (= 12 (x701 (x3407 64 x1599 12))))
(assert (x4938 x2029))
(assert (x150 127))
(assert (x4938 x2815))
(assert (= x3103 (and (not x1413) x8449)))
(assert (x4938 x7428))
(assert (=> (>= 10000 x7468) (= 0 (x1388 x7468))))
(assert (x4938 x1250))
(assert (= x3915 (or x5299 x479)))
(assert (x4938 x1312))
(assert (x4938 x4166))
(assert (x4938 x6328))
(assert (x4938 x392))
(assert (x4938 x4339))
(assert (= (x1388 48755886422350550937420582033662272622158303343164848365600209189876434731008) 0))
(assert (x4938 x1676))
(assert (x4938 x2623))
(assert (= (x7622 x3479 x7884 x1998 x3288 x2864 x1503) (x1388 (x7622 x3479 x7884 x1998 x3288 x2864 x1503))))
(assert (= (x1388 (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)) (x2341 x5478 x151 x4465 x7467 x2982 x5749 x3616)))
(assert (x4938 x7294))
(assert (= (and (not x7862) x4309) x6905))
(assert (= (x1388 (x3407 64 x7048 3)) (x3407 64 x7048 3)))
(assert (x4938 x5914))
(assert (x4938 x5974))
(assert (< 10000 (x1022 x6541 x3112)))
(assert (x4938 x3557))
(assert (x4938 x6237))
(assert (= x6088 (x3116 (x7087 x6088 x7455 x5442 x6835))))
(assert (x4938 x4213))
(assert (= (x3647 (x7087 x2726 x8532 x6769 x6672)) x8532))
(assert (not (x8398 (x3407 64 x1256 11))))
(assert (x704 x7751))
(assert (= (x3407 64 x4120 11) (x1388 (x3407 64 x4120 11))))
(assert (=> (<= x6604 10000) (= 0 (x1388 x6604))))
(assert (= x6363 (and x7356 x6870)))
(assert (= (x3116 (x3407 64 x1202 100)) 64))
(assert (= (x3116 (x1022 x4400 x833)) x4400))
(assert (x4938 x2191))
(assert (= (=> (= (< 0 x3387) x410) (and (=> (and (and (= x2219 x6664) (= x7343 x6920) (= x1148 x6147) (= x8056 x715) (= x6253 x6114) (= x327 x2422)) x410) x3778) (=> (and (not x410) (and (= true x2581) (= false x5166) (= 4 x8328))) x2365))) x7102))
(assert (= x3651 (x3116 (x1022 x3651 x1954))))
(assert (=> (>= 10000 x2944) (= 0 (x1388 x2944))))
(assert (= x8449 (and (not x6593) x2788)))
(assert (=> (>= 10000 x843) (= 0 (x1388 x843))))
(assert (> (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323) 10000))
(assert (x4938 x587))
(assert (= x131 (=> (and (= x7800 x3703) (= x8342 x4899) (= x7540 x7647) (= x3488 x5256) (= x145 x6598)) x3210)))
(assert (x4938 x2158))
(assert (=> (<= x4185 10000) (= (x1388 x4185) 0)))
(assert (= (x5419 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023)) x5010))
(assert (= (x3647 (x3407 64 x1958 36)) x1958))
(assert (= (x555 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813)) x6813))
(assert (not (x8398 (x7087 x3651 x4747 x210 x8417))))
(assert (x4938 x6760))
(assert (x4938 x5316))
(assert (= x3306 (x6340 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (=> (<= x3220 10000) (= 0 (x1388 x3220))))
(assert (not (x8398 (x1896 x2454 x4147 x8278 x3885 x5310))))
(assert (x4938 x8007))
(assert (= x5531 (and (not x958) x5436)))
(assert (x4938 x5981))
(assert (not (x8398 (x2341 x2454 x5912 x7940 x3306 x3865 x1223 x2503))))
(assert (= (x3116 (x3407 64 x7048 5)) 64))
(assert (x4938 x2051))
(assert (x4938 x1759))
(assert (x4938 x2114))
(assert (=> (<= x7308 10000) (= (x1388 x7308) 0)))
(assert (=> (<= x8295 10000) (= (x1388 x8295) 0)))
(assert (= x3084 (and x8063 x6406)))
(assert (x4938 x5437))
(assert (x4938 x5241))
(assert (x4938 x892))
(assert (= x1492 (and x7338 x5751)))
(assert (x4938 x2682))
(assert (x4938 x4634))
(assert (< 10000 (x1022 x4159 x2208)))
(assert (x4938 x2492))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x1842 0)))
(assert (= x6824 (x701 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499))))
(assert (x4938 x5886))
(assert (= (and x263 x5925) x4794))
(assert (= (and x7733 (not x7953)) x5929))
(assert (= (=> (= x1668 (= x8054 0)) (and (=> (and (not x1668) (and (= x4345 x5886) (= x3554 x2920) (= x5311 x6996) (= x1155 x6544) (= x7843 x5113) (= x3337 x3293) (= x7469 x5923) (= x3015 x5479) (= x1260 x6428) (= x6184 x232) (= x2485 x1038) (= x7233 x5710) (= x2686 x1281))) x7891) (=> (and x1668 (and (= x6283 x2126) (= x621 x1927) (= 2 x2777) (= x5099 x6717) (= x5098 x6331) (= x6676 x661) (= x584 x7078) (= x1991 x138) (= x4050 true) (= false x3222) (= x4368 x4010) (= x8267 x4066) (= x6291 x2331) (= x2398 x2850) (= x5801 x2133) (= x307 x7374) (= x6168 0))) x5672))) x2357))
(assert (x4938 x1822))
(assert (x4938 x463))
(assert (x4938 x5919))
(assert (x4938 x7436))
(assert (x4938 x2868))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7087 x4809 x1858 x5832 x2909)))
(assert (x4938 x1615))
(assert (x4938 x5457))
(assert (= (x1022 x6541 x3112) (x1388 (x1022 x6541 x3112))))
(assert (= (and (not x3232) x6318) x5447))
(assert (x4938 x4800))
(assert (= x180 x4482))
(assert (x4938 x7784))
(assert (= (x3647 (x1896 x5478 x5582 x4037 x5940 x3546)) x5582))
(assert (= x369 (=> (and (= x7078 x1684) (= x6676 x5382) (= x1535 x4066) (= x7369 x2133) (= x1927 x1325) (= x6291 x5581) (= x307 x3551) (= x6331 x4354) (= x2811 x4010) (= x5948 x2126) (= x2398 x3714) (= x6168 1) (= x4924 x5099) (= x1991 x2031)) x5672)))
(assert (x4938 x4451))
(assert (x8398 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= (and x302 (not x2774)) x5006))
(assert (x4938 x7476))
(assert (x4938 x5597))
(assert (not (x8398 (x2341 x4159 x8304 x6824 x380 x1059 x7966 x499))))
(assert (x4938 x5329))
(assert (x4938 x930))
(assert (= (x3116 (x1022 x206 x1048)) x206))
(assert (x4938 x4762))
(assert (= x3773 (=> (and (and (= x6321 (x2230 (- x3725 x8476))) (= x3725 (x7100 (+ x4734 x7497))) (= (x7100 (+ x6200 31)) x2405) (= (x7100 (+ 32 x3725)) x2356) (= (x7100 (+ 32 x8301)) x115) (= x4855 (x7100 (+ x115 32))) (= x7497 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2405)) (= (> x5679 0) x7318) (= (x5947 x8498) x5679) (= (x7100 (+ x4734 x6200)) x6668)) (or (not x7318) (and x7318 (and (and (= (< 32 x5679) x103) (= (x3316 x5878) x4491)) (or (not x103) (and x103 (and (or (not x2234) (and x2234 (and (or (not x1576) (and x1576 (and (= (x7100 (+ 96 x2356)) x3124) (>= 128 x5679) (= (x7100 (+ x5878 96)) x5790) (= (x7460 x5790) x4249)))) (and (= x1576 (> x5679 96)) (= (x7100 (+ x2356 64)) x3782) (= (x7100 (+ 64 x5878)) x6438) (= (x3898 x6438) x8284))))) (and (= x3505 (x7100 (+ x5878 32))) (= x2234 (< 64 x5679)) (= x8317 (x3700 x3505)) (= (x7100 (+ x2356 32)) x660))))))))) x286)))
(assert (= (and x4029 x4506) x6826))
(assert (= (x1388 (x7622 x3224 x7683 x1344 x5037 x3808 x8369)) (x7622 x3224 x7683 x1344 x5037 x3808 x8369)))
(assert (= x6689 (=> (and (= (div x5098 2) x7634) (= x4340 (x1066 1 x5098)) (= x5845 (x2230 (- x4340 (mod (ite (< x1235 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (< 0 x5845) x5265) (= x1235 (ite (> x4340 0) x7634 (x1066 127 x7634))) (= x7712 (- x2930 132))) (and (=> (and (and (= (= 0 x1733) x8548) (= (x1066 1 x5098) x1733) (= (+ 32 x2930) x7599)) x5265) (and (=> (and (not x8548) (and (or (and x7953 (and (<= x1235 32) (= (x5963 x2889) x7845) (= 32 x6767))) (and (= x6767 0) (not x7953))) (and (= (> x1235 0) x7953) (= x2889 (x1022 32 104))))) x2251) (=> (and x8548 (and (= x951 (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x5098)) (or (= x4521 0) (= x4521 32)) (= (* 32 (ite (not (= 0 x1235)) 1 0)) x4521) (= (+ x7599 x4521) x4565))) x1039))) (=> (not x5265) x2490)))))
(assert (= x3195 (=> (and (= (x2230 (- x7859 128)) x4850) (= (= 0 x8058) x3045) (= 128 x6354) (= x8058 (x8177 x621))) (and (=> (and x3045 (and (= 2 x482) (= x5801 x2133) (= x661 x6676) (= false x7807) (= x5098 x6331) (= x2398 x2850) (= x6717 x5099) (= x138 x1991) (= x2331 x6291) (= x7374 x307) (= x6782 true) (= x584 x7078) (= x6168 0) (= x4368 x4010) (= x1927 x621) (= x2126 x6283) (= x8267 x4066))) x5672) (=> (and (and (= x5874 (x6175 x621)) (= (<= x835 x278) x1324) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5874 x835)) x669) (= (x6175 x3521) x278) (= (and x1324 x669) x5360)) (not x3045)) (and (=> (and x5360 (and (= x8002 false) (= x4410 128) (= (+ x1283 x835) x3453) (= x608 (- x3233 x835)) (<= 0 x3453) (= x1834 3521034783) (= x4614 x1232) (= x3453 x587) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3453) (= x1682 (x8177 x1579)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4474) (= (x1158 132) x2894) (= (= (x1016 132) x6266) x7116) x7116 (= x4366 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x8158 x2949) (<= 1 x1682) (<= 196 x4474) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1283 x835)) (<= x4850 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x7522 x1891) (>= x4850 196) (<= x1020 127) (>= 127 x1020) (= x4850 x4474) (= x1283 (x4977 x621)) (= (x6175 x3521) x3233) (= (> x2894 18446744073709551615) x1124) (= false x3836))) (and (=> x1124 x742) (=> (and (and (= x269 (> x4676 x4474)) (= x4676 (x7100 (+ 164 x2894))) (= x7345 164)) (not x1124)) (and (=> x269 x2567) (=> (and (not x269) (and (= (+ x2949 4) x5692) (= x6452 (> x4474 (+ x5692 31))))) (and (=> (and (and (= x1461 false) (= true x1956) (= 0 x8530)) (not x6452)) x255) (=> (and x6452 (and (= x7492 (< 18446744073709551615 x3630)) (= x3630 (x1158 x5692)))) (and (=> (and (and (= (+ x5692 32) x2925) (= x5013 (x7100 (+ x2925 x3630))) (= x8260 (< x4474 x5013))) (not x7492)) (and (=> x8260 x2567) (=> (and (and (or (and x4202 (and (= x6535 false) (= true x3914) (= 132 x8530))) (and (not x4202) (and (or (and (and (= x3741 (x7100 (+ x3630 31))) (= x4298 (x5149 128)) (= (x5149 128) x1788) (= (x5149 224) x1540) (<= 161 x3819) (= x6958 (x7100 (+ x1390 x3630))) (= x5756 (x5149 256)) (= x1390 (x7100 (+ x1132 32))) (= x1264 false) (= x7458 (div x3741 32)) (= x8120 (x5149 192)) (or (>= 115792089237316195423570985008687907853269984665640564039457584007913129639744 x2894) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2894)) (= x3390 (x7087 x7277 x7748 x160 x2415)) (= x828 (x5149 128)) (= x8530 0) (= (x5149 224) x8255) (= (x5149 192) x764) (= x1515 (x5149 160)) (= x7851 (x5149 224)) (= x2901 (x5149 224)) (= (x5149 128) x3112) (= (x7087 x6541 x7752 x8107 x2402) x7801) (= (x5149 320) x6813) (= x8517 (x5149 160)) (= (x1896 x6541 x6699 x7203 x7803 x4524) x8520) (= x7403 (x5149 160)) (or (<= x6618 31) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x6618)) (= x1132 (+ x3240 160)) (= (x5149 128) x7748) (= (x5149 192) x8282) (= (div x6435 32) x3310) (= (x5149 192) x7803) (= x5401 128) (= x2402 (x5149 192)) (= x5591 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536)) (= (x5149 160) x5949) (= x5428 (x5149 256)) (= (x5149 128) x1233) (= (x5149 160) x160) (= (x7100 (+ x2894 128)) x8393) (= (- x6541 32) x7277) (= (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563) x8408) (= x3415 (x5149 160)) (= x5276 (x1022 x7277 x4298)) (= (x1022 x6541 x3112) x1119) (= x2481 (x5149 128)) (= x4467 (x5149 128)) (= (x5149 192) x960) (= (x1896 x7277 x2481 x3415 x960 x8255) x3873) (= (x5149 160) x7203) (= (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813) x6376) (= (x5149 288) x3536) (= x163 (x5149 256)) (= x7379 (x3407 x6541 x4467 x2703)) (= x49 (x7622 x7277 x828 x6423 x4655 x7851 x163)) (= (x5149 128) x7752) (= (x5149 160) x6423) (= (x5149 192) x2415) (= (x5149 192) x4655) (= x6618 (x3034 x1132)) (= x2038 (x3407 64 x1232 (ite (>= 32 x6541) x1119 (ite (<= x6541 64) x7379 (ite (<= x6541 96) x7801 (ite (>= 128 x6541) x8520 (ite (>= 160 x6541) x7562 (ite (>= 192 x6541) x5591 x6376)))))))) (= x6699 (x5149 128)) (= x7792 (x5149 256)) (<= x6541 224) (= x1764 (x3407 x7277 x1788 x5949)) (= (x5149 160) x8107) (= x8272 (ite (= 0 x7277) x5097 (ite (<= x7277 32) x5276 (ite (<= x7277 64) x1764 (ite (>= 96 x7277) x3390 (ite (<= x7277 128) x3873 (ite (>= 160 x7277) x49 x8408))))))) (= x6326 true) (= x5097 (x4958 0)) (= (* 32 x7458) x5598) (= (x5149 288) x7563) (= (x5149 160) x2703) (= (x7100 (+ 31 x2894)) x6435) (= x8374 (x5149 224)) (= x4524 (x5149 224)) (= x3819 (x7100 (+ x4955 x1132))) (= (x5149 256) x3612) (= (x5149 160) x7468) (= (x3407 64 x1891 7) x5122) (< x1132 x3819) (= x7562 (x7622 x6541 x4268 x7403 x8120 x4393 x5428)) (= x4955 (x7100 (+ x5598 32))) (= x3240 (* x3310 32)) (= x204 (x5149 128)) (= (x7100 (+ x2894 128)) x8387) (= x4268 (x5149 128)) (= (x7100 (+ 160 x2894)) x7047) (= (x5149 224) x4393) (= (x2230 (- (mod (+ 32 x8387) 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128)) x6541) (= (x5149 192) x2929) (= (x5149 128) x843) (= x7304 (x5149 288)) (<= 32 x6541)) x5670) (and (not x5670) (and (= true x7781) (= 132 x8530) (= x8477 false)))) (and (= x7215 (x7100 (+ x3630 128))) (= (x1248 160) x7556) (= (x1248 160) x4981) (= (x1248 256) x5551) (= (x1248 128) x4139) (= x5010 (x1248 256)) (= x226 (x1248 128)) (= x7805 (x7087 x7199 x5813 x4981 x3966)) (>= 224 x7199) (= (x1248 160) x3424) (= (x1248 224) x4566) (= x4117 (x1248 256)) (= x2052 (x1248 224)) (= x4714 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270)) (= (x1248 128) x6663) (= x299 (x1248 224)) (= (x1248 192) x7623) (= (x4958 0) x4089) (= (x2230 (- x7215 128)) x7199) (= x8191 (x1248 128)) (= x3966 (x1248 192)) (= x3325 (x3407 x7199 x226 x4057)) (= x5725 (x1248 128)) (= x4859 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023)) (= (x1022 x7199 x8191) x7932) (= (x1248 320) x270) (= x1841 (x1248 192)) (= x2442 (x1248 160)) (= x4057 (x1248 160)) (= (x7622 x7199 x6076 x3424 x7623 x299 x4117) x5688) (= x2108 (x1248 160)) (= (= x752 (ite (= 0 x7199) x4089 (ite (>= 32 x7199) x7932 (ite (<= x7199 64) x3325 (ite (>= 96 x7199) x7805 (ite (>= 128 x7199) x419 (ite (>= 160 x7199) x5688 (ite (>= 192 x7199) x4859 x4714)))))))) x5670) (= x7648 (x1248 192)) (= x419 (x1896 x7199 x4139 x2108 x7648 x2383)) (= x5813 (x1248 128)) (= x2383 (x1248 224)) (= (x1248 288) x7123) (= x6076 (x1248 128)) (= x2317 (x1248 192)) (= (x1248 288) x6023))))) (and (= (x7100 (+ 32 x882)) x8024) (= (x7622 x206 x130 x7601 x4255 x4343 x6882) x312) (= x1612 (x3276 192)) (= x4301 (x3276 224)) (= (x3276 128) x5939) (= (x3276 192) x8085) (= x6453 (x4958 0)) (= x5293 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) (= (- x206 32) x1389) (= x314 (x3276 160)) (= (x3276 128) x1048) (= (x7087 x1389 x4115 x5007 x2944) x6721) (= (x3276 160) x5950) (= (x3407 64 x1891 7) x8127) (= (x3276 256) x6882) (= x7682 (x3276 128)) (= (x1896 x1389 x4433 x5950 x5294 x6030) x8313) (= (x3276 256) x1076) (= (x3276 288) x2953) (= x5724 (x3407 x206 x6743 x7390)) (= x2881 (x1022 x206 x1048)) (= (x6944 x206 x1715 x324 x8085 x4301 x5048 x6864 x8117) x5765) (= x2304 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788)) (= x4433 (x3276 128)) (= (x3407 x1389 x5288 x1940) x5758) (= (x3276 128) x5288) (= x5271 (x1896 x206 x3365 x1392 x1612 x2988)) (<= 32 x206) (= x1715 (x3276 128)) (= (x3276 128) x6653) (= x1392 (x3276 160)) (= (ite (= 0 x1389) x6453 (ite (>= 32 x1389) x4790 (ite (<= x1389 64) x5758 (ite (>= 96 x1389) x6721 (ite (<= x1389 128) x8313 (ite (>= 160 x1389) x7898 x5293)))))) x1112) (= x3365 (x3276 128)) (= (x3276 128) x4115) (= (x3276 224) x2642) (<= x206 224) (= (x3276 128) x130) (= x6030 (x3276 224)) (= (x3276 320) x8117) (= x727 (x3407 64 x1232 (ite (>= 32 x206) x2881 (ite (>= 64 x206) x5724 (ite (>= 96 x206) x8332 (ite (>= 128 x206) x5271 (ite (>= 160 x206) x312 (ite (<= x206 192) x2304 x5765)))))))) (= (x3276 160) x2928) (= x2944 (x3276 192)) (= (x3276 192) x4370) (= x5048 (x3276 256)) (= (x1022 x1389 x5939) x4790) (= x2319 (x3276 160)) (= x5730 (x3276 256)) (= x206 (x2230 (- x8024 128))) (= x3845 (x3276 192)) (= x1940 (x3276 160)) (= (x3068 x727) x752) (= (x3276 288) x6864) (= (x3276 224) x2988) (= x7601 (x3276 160)) (= x6743 (x3276 128)) (= (x3276 224) x3159) (= (x3276 288) x3788) (= x5007 (x3276 160)) (= x8332 (x7087 x206 x7682 x314 x3818)) (= (x3276 128) x8157) (= (x3276 128) x5174) (= (x3276 160) x324) (= x3818 (x3276 192)) (= (x3276 160) x7390) (= x882 (x7100 (+ x2894 128))) (= (x7622 x1389 x6653 x1971 x4729 x3159 x1076) x7898) (= (x3276 256) x5697) (= (x3276 160) x1971) (= x4343 (x3276 224)) (= (x3276 192) x4729) (= (x3276 224) x1011) (= x4202 (= 0 x752)) (= x5294 (x3276 192)) (= (x7100 (+ x2894 128)) x2638) (= (x3276 192) x4255))) (not x8260)) x255))) (=> x7492 x742))))))))) (=> (and (not x5360) (= x8005 0)) x8207)))))))
(assert (x150 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (x1388 (x7087 x4598 x6970 x5977 x7474)) (x7087 x4598 x6970 x5977 x7474)))
(assert (not (x8398 (x3407 64 x6717 3))))
(assert (= 36 (x701 (x3407 64 x8356 36))))
(assert (x4938 x1197))
(assert (= (and (not x8410) x175) x7603))
(assert (= x1389 (x3116 (x3407 x1389 x5288 x1940))))
(assert (x4546 x2331))
(assert (= 0 (x1388 50226347614966974677930900640024090345938424853691168920094736542366852710400)))
(assert (x4938 x2533))
(assert (= (or x1533 x1206) x6371))
(assert (= x3097 (and x3761 (not x844))))
(assert (= (or x7704 x521 x5563) x6336))
(assert (= x130 (x3647 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (x4938 x3754))
(assert (x4938 x7570))
(assert (=> (>= 10000 x7378) (= (x1388 x7378) 0)))
(assert (x4938 x3552))
(assert (< (x7622 x6541 x4268 x7403 x8120 x4393 x5428) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3407 64 x6604 12) (x1388 (x3407 64 x6604 12))))
(assert (x4938 x2626))
(assert (=> (<= x1922 10000) (= 0 (x1388 x1922))))
(assert (= 0 (x1388 102788308552044517260959567728648622381392053106279845986800620074717893623808)))
(assert (= x6714 (or x4593 x3009)))
(assert (x4938 x3889))
(assert (= x7039 (and x213 x2678)))
(assert (= (x6568 (x1896 x2726 x7749 x2789 x3787 x3437)) x3437))
(assert (x4938 x5863))
(assert (x4938 x945))
(assert (= x2789 (x701 (x1896 x2726 x7749 x2789 x3787 x3437))))
(assert (x4938 x2307))
(assert (x4938 x2475))
(assert (x4938 x4393))
(assert (= (x3647 (x3407 64 x7048 4)) x7048))
(assert (x8398 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (=> (<= x3788 10000) (= 0 (x1388 x3788))))
(assert (=> (>= 10000 x6743) (= 0 (x1388 x6743))))
(assert (= x836 (and x1766 (not x5990))))
(assert (= (x3116 (x6944 x3989 x3063 x2083 x2714 x7076 x2305 x5647 x4872)) x3989))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x3989 x8396)))
(assert (x4938 x4450))
(assert (= (and x4247 x6010) x5251))
(assert (x4938 x3685))
(assert (x4938 x4766))
(assert (x4938 x280))
(assert (x4938 x3916))
(assert (x4938 x1051))
(assert (> (x3407 64 x7413 36) 10000))
(assert (> (x3407 x206 x6743 x7390) 10000))
(assert (= (x1388 (x7087 x5857 x604 x2406 x7313)) (x7087 x5857 x604 x2406 x7313)))
(assert (x704 x2554))
(assert (= (x3647 (x1022 x6088 x8345)) x8345))
(assert (x4938 x2803))
(assert (= (and x7716 x3295) x7035))
(assert (= x3 (=> (and (= x4984 x6839) (= false x3020) (= 2 x6734) (= x5545 x2926) (= x8178 x3900) (= 36 x5635) (= 0 x1553) (= true x8159)) x2407)))
(assert (x150 x4779))
(assert (x4938 x5186))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 32 x8103)))
(assert (> (x7622 x7199 x6076 x3424 x7623 x299 x4117) 10000))
(assert (< 10000 (x3407 x1389 x5288 x1940)))
(assert (x150 x7783))
(assert (=> (>= 10000 x7933) (= 0 (x1388 x7933))))
(assert (=> (<= x2985 10000) (= 0 (x1388 x2985))))
(assert (=> (<= x324 10000) (= (x1388 x324) 0)))
(assert (= (x1388 (x3407 x7199 x226 x4057)) (x3407 x7199 x226 x4057)))
(assert (= (x3116 (x7087 x3224 x8081 x5985 x4105)) x3224))
(assert (= (and x5670 x2943) x1208))
(assert (x4938 x8205))
(assert (x4938 x8355))
(assert (= x4091 (x5419 (x7622 x2454 x7378 x3190 x5182 x1064 x4091))))
(assert (= (x1388 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) (x7622 x5478 x3146 x5426 x4785 x7964 x5820)))
(assert (> (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334) 10000))
(assert (x4938 x8514))
(assert (= x1887 (and x4508 x765)))
(assert (x4938 x1009))
(assert (=> (>= 10000 x204) (= 0 (x1388 x204))))
(assert (x4938 x5244))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094)))
(assert (x4938 x8014))
(assert (= (x701 (x1896 x4809 x2199 x4831 x3620 x4599)) x4831))
(assert (= (and x4021 x3756) x3496))
(assert (x4938 x7182))
(assert (x4938 x5987))
(assert (x4938 x2169))
(assert (= (and (not x1026) x8414) x1740))
(assert (x4938 x7843))
(assert (x4938 x4737))
(assert (x4938 x7233))
(assert (= (and x5297 (not x1415)) x5496))
(assert (x4938 x5782))
(assert (x4938 x1515))
(assert (=> (<= x2503 10000) (= (x1388 x2503) 0)))
(assert (x4938 x2615))
(assert (x4938 x1062))
(assert (= (x1388 x7186) (x1388 (+ 2 x7186))))
(assert (= (and x6143 (not x8071)) x5467))
(assert (= x764 (x6340 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536))))
(assert (x4938 x1161))
(assert (x4938 x2436))
(assert (not (x8398 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265))))
(assert (= (x3116 (x3407 x5478 x2096 x4048)) x5478))
(assert (x4938 x2471))
(assert (= x1922 (x701 (x7087 x3989 x5981 x1922 x4627))))
(assert (x4938 x2509))
(assert (< 10000 (x3407 64 x8409 2)))
(assert (= (x6340 (x2341 x2726 x7308 x1051 x1836 x3060 x8297 x5323)) x1836))
(assert (= (or x609 x6510) x7322))
(assert (= (and x351 x1225) x1936))
(assert (= x5551 (x5419 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (x4938 x6632))
(assert (x4938 x1604))
(assert (x4938 x1438))
(assert (x150 x6104))
(assert (x4938 x6653))
(assert (= (x1388 34591783479076665078880830389440322436311164112910831269305739813291000201216) 0))
(assert (x8398 43931689107028929153831073962459296230956404255593708771276734084804920737792))
(assert (= x1258 (x1688 (x2341 x5857 x2893 x3205 x2730 x2001 x4662 x1258))))
(assert (not (x8398 (x6944 x4598 x3593 x2333 x3717 x5867 x7312 x1227 x7334))))
(assert (< (x3407 x2726 x235 x5998) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x8178))
(assert (x4938 x6239))
(assert (= (or x2255 (and (not x5796) x3915)) x7632))
(assert (= 0 (x1388 89332125780766104441357105940599211734484755930370930871569612501041822040064)))
(assert (x4938 x7259))
(assert (x4938 x3302))
(assert (x4938 x4046))
(assert (x4938 x4906))
(assert (x4938 x804))
(assert (x4938 x467))
(assert (x4938 x7726))
(assert (x4938 x8457))
(assert (x4938 x2859))
(assert (x4938 x6124))
(assert (< (x3407 x7277 x1788 x5949) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4381 (and x1333 x6857)))
(assert (x4485 x7473))
(assert (= (and x4265 x328) x4776))
(assert (not (x8398 (x1022 x4159 x2208))))
(assert (= (=> (= (= 0 x8153) x3476) (and (=> (and x3476 (and (= x1857 (x3407 64 x4120 11)) (= x4969 (x5754 x1857)) (<= x4969 255) (= x4262 (< 3 x4969)))) (and (=> (and (not x4262) (= (= x4969 2) x6652)) (and (=> (and (and (= x894 true) (= x1216 4) (= false x7889)) (not x6652)) x5369) (=> (and (and (= x8018 (x3407 64 1 x3628)) (= (x3407 64 x7048 4) x3628) (= x1805 (x3511 x8018)) (= x3632 (= 0 x2692)) (<= x7048 65535)) x6652) (and (=> (and (not x3632) (= (< x2692 x1805) x2747)) (and (=> (and (and (= x1216 4) (= true x8270) (= x6868 false)) x2747) x5369) (=> (and (not x2747) (= x4320 x2692)) x456))) (=> (and (= x4320 x1805) x3632) x456))))) (=> (and x4262 (and (= x3893 false) (= true x3804) (= 36 x1216))) x5369))) (=> (and (and (= x3172 true) (= 4 x1216) (= false x4239)) (not x3476)) x5369))) x3259))
(assert (x4938 x400))
(assert (x4938 x978))
(assert (x704 x6678))
(assert (= (x7622 x6541 x4268 x7403 x8120 x4393 x5428) (x1388 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (x4938 x4499))
(assert (= x8324 (=> (= x3299 (+ x926 292)) x6087)))
(assert (= (x3647 (x3407 64 x2140 10)) x2140))
(assert (=> (>= 10000 x270) (= 0 (x1388 x270))))
(assert (x4938 x7304))
(assert (= (x3116 (x3407 64 x1232 (ite (<= x206 32) x2881 (ite (>= 64 x206) x5724 (ite (<= x206 96) x8332 (ite (>= 128 x206) x5271 (ite (>= 160 x206) x312 (ite (>= 192 x206) x2304 x5765)))))))) 64))
(assert (= x8386 (x6568 (x2341 x6088 x1194 x1138 x7265 x8386 x4463 x3094))))
(assert (= (x1388 (x3407 64 1 x1485)) (x3407 64 1 x1485)))
(assert (= x1414 (x701 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (= x3220 (x701 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569))))
(assert (x4938 x8058))
(assert (x4938 x7061))
(assert (= (and (not x1085) x5680) x4919))
(assert (x4938 x3269))
(assert (> (x3407 64 x6658 6) 10000))
(assert (< (x7087 x2454 x2103 x342 x6680) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x7884) (= 0 (x1388 x7884))))
(assert (= 0 (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639838)))
(assert (= (x5419 (x7622 x6088 x6608 x929 x2836 x1656 x880)) x880))
(assert (= (x3647 (x3407 64 x2019 12)) x2019))
(assert (= (and x6144 (not x6763)) x8115))
(assert (= (x1388 (x3407 64 x7195 12)) (x3407 64 x7195 12)))
(assert (x4938 x6200))
(assert (= 64 (x3116 (x3407 64 x661 36))))
(assert (x4938 x5175))
(assert (x4938 x2995))
(assert (=> (<= x5973 10000) (= (x1388 x5973) 0)))
(assert (= x6088 (x3116 (x6944 x6088 x1906 x8139 x1747 x7310 x3381 x5267 x8265))))
(assert (x150 x323))
(assert (x4938 x8060))
(assert (x4938 x8289))
(assert (x4938 x2724))
(assert (x4938 x5520))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x6717 3)))
(assert (= (or (and (not x2042) x7362) x1435) x3849))
(assert (x4938 x3033))
(assert (=> (<= x1957 10000) (= 0 (x1388 x1957))))
(assert (x4938 x8341))
(assert (x4938 x1046))
(assert (x4938 x5911))
(assert (x4938 x8474))
(assert (x4938 x7398))
(assert (x4938 x7907))
(assert (=> (<= x8011 10000) (= 0 (x1388 x8011))))
(assert (= 0 (x1388 3957931183)))
(assert (x4938 x1179))
(assert (= x4582 (and x2414 (not x1576))))
(assert (= (x1388 (x3407 64 x7413 36)) (x3407 64 x7413 36)))
(assert (x4938 x3741))
(assert (= (x3647 (x7087 x3989 x5981 x1922 x4627)) x5981))
(assert (x4938 x5356))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1896 x3224 x6110 x1045 x8162 x2618)))
(assert (x4938 x2223))
(assert (x4938 x1392))
(assert (= x5404 (and x2760 (not x5540))))
(assert (x4938 x1723))
(assert (x4938 x4064))
(assert (= (and x629 x2538) x2013))
(assert (x4938 x5525))
(assert (x4938 x8337))
(assert (=> (<= x4255 10000) (= (x1388 x4255) 0)))
(assert (x4938 x3473))
(assert (x4938 x7861))
(assert (x4938 x2484))
(assert (x4938 x2472))
(assert (x8398 3521034783))
(assert (x4938 x3675))
(assert (= x8437 (and (not x2610) x2342)))
(assert (x704 x502))
(assert (=> (>= 10000 x2510) (= (x1388 x2510) 0)))
(assert (x4938 x4442))
(assert (x4938 x2074))
(assert (= x7970 (and x2162 (not x73))))
(assert (x4938 x3503))
(assert (x4938 x5975))
(assert (x4938 x1718))
(assert (=> (>= 10000 x2293) (= (x1388 x2293) 0)))
(assert (= x1151 (or x7315 x8335)))
(assert (x4938 x4982))
(assert (x4938 x4844))
(assert (x4938 x5450))
(assert (< 10000 (x7087 x6213 x8482 x5120 x2533)))
(assert (= x107 (and x1551 (not x7806))))
(assert (x4938 x8210))
(assert (= (=> (= x2799 (= x2594 0)) (and (=> (and (and (= x7779 x5282) (= x8041 x5366) (= x906 x749) (= x8166 x3648) (= x4832 x3759) (= x3758 x1718) (= x6146 x795) (= x912 x2030) (= x1116 x2327) (= x4553 x7014) (= x5209 x1084) (= x2286 x5014) (= x1799 x3667)) (not x2799)) x4845) (=> (and x2799 (and (= x6331 x5098) (= x584 x7078) (= x4368 x4010) (= x6291 x2331) (= 2 x6939) (= x6717 x5099) (= x2133 x5801) (= x7374 x307) (= x2057 true) (= false x4495) (= x4066 x8267) (= x1927 x621) (= x138 x1991) (= x2126 x6283) (= x6168 0) (= x2850 x2398) (= x661 x6676))) x5672))) x6073))
(assert (= 32 (x3116 (x1022 32 104))))
(assert (= x4255 (x6340 (x7622 x206 x130 x7601 x4255 x4343 x6882))))
(assert (x4938 x7856))
(assert (= x5560 (and (not x814) x6728)))
(assert (< 10000 (x7087 x6088 x7455 x5442 x6835)))
(assert (= x5294 (x6340 (x1896 x1389 x4433 x5950 x5294 x6030))))
(assert (= (or (and x3711 x4786) (and x3100 x5546) (and x7957 x4637) (and x5560 x5941) (and x6063 x6161)) x7480))
(assert (=> (>= 10000 x1011) (= (x1388 x1011) 0)))
(assert (= (and x4219 x5228) x5932))
(assert (=> (>= 10000 x239) (= 0 (x1388 x239))))
(assert (x4938 x239))
(assert (= x6199 (x5419 (x6944 x5857 x6929 x1473 x5973 x8384 x6199 x450 x7352))))
(assert (> (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756) 10000))
(assert (x4938 x2756))
(assert (= (x701 (x7087 x6088 x7455 x5442 x6835)) x5442))
(assert (not (x8398 (x3407 x4809 x2723 x5385))))
(assert (> (x7622 x4809 x5507 x591 x4925 x8524 x223) 10000))
(assert (= x4072 (and x5436 x958)))
(assert (x4938 x1368))
(assert (x4938 x3554))
(assert (= (and (not x5797) x3755) x5021))
(assert (= (x3116 (x1022 x2454 x196)) x2454))
(assert (x704 x3162))
(assert (= (and x2013 (not x7205)) x6728))
(assert (x4938 x7899))
(assert (x4938 x6620))
(assert (=> (<= x3312 10000) (= 0 (x1388 x3312))))
(assert (= (x1388 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)))
(assert (= x8241 (=> (and (or (not x5796) x5796) (= (= 0 x7269) x5796)) x6425)))
(assert (= (and x5389 x7630) x521))
(assert (not (x8398 (x1022 x7199 x8191))))
(assert (x4938 x5683))
(assert (= (=> (and (= x7525 0) (= x7112 x7979) (= x2926 x4201) (= x1035 x8457) (= x3594 x4984) (= 1 x1615)) x105) x939))
(assert (x4938 x7783))
(assert (x4485 x1609))
(assert (x4938 x7838))
(assert (= x8343 x7161))
(assert (= (=> (= (= x5306 0) x168) (and (=> (and (and (= x571 x1948) (= x4175 x3218) (= x1005 x8161) (= x3388 x517)) (not x168)) x4638) (=> (and (and (= x6839 x4984) (= 0 x1553) (= x8178 x3900) (= false x372) (= true x889) (= x5545 x2926) (= x5635 x6603) (= x3032 2)) x168) x2407))) x6956))
(assert (x4938 x5243))
(assert (= x3130 (and x7071 x6397)))
(assert (= (x3116 (x7622 x3479 x7884 x1998 x3288 x2864 x1503)) x3479))
(assert (x4938 x5058))
(assert (< (x7087 x3651 x4747 x210 x8417) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8398 65535))
(assert (= (=> (and (= x1319 true) (= 0 x3814) (= x4946 false)) x1378) x2888))
(assert (= (x701 (x3407 64 x1232 (ite (>= 32 x6541) x1119 (ite (<= x6541 64) x7379 (ite (>= 96 x6541) x7801 (ite (>= 128 x6541) x8520 (ite (>= 160 x6541) x7562 (ite (>= 192 x6541) x5591 x6376)))))))) (ite (>= 32 x6541) x1119 (ite (>= 64 x6541) x7379 (ite (>= 96 x6541) x7801 (ite (<= x6541 128) x8520 (ite (>= 160 x6541) x7562 (ite (>= 192 x6541) x5591 x6376))))))))
(assert (= (x1388 (x1022 x7277 x4298)) (x1022 x7277 x4298)))
(assert (= (x1388 34591783479076665047274362116096262703299809091723987870014818727818681087008) 0))
(assert (> (x3407 64 x1842 0) 10000))
(assert (< 10000 (x1896 x5478 x5582 x4037 x5940 x3546)))
(assert (< 10000 (x3407 64 x1232 (ite (<= x6541 32) x1119 (ite (<= x6541 64) x7379 (ite (<= x6541 96) x7801 (ite (>= 128 x6541) x8520 (ite (<= x6541 160) x7562 (ite (<= x6541 192) x5591 x6376)))))))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802)))
(assert (x4938 x3909))
(assert (x4938 x1999))
(assert (x4938 x722))
(assert (x704 x248))
(assert (= (or (and (not x6025) x3949) (and (not x8480) x5083) (and x6091 (not x4453))) x8088))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2341 x6541 x1233 x7468 x764 x8374 x5756 x3536)))
(assert (x4938 x2274))
(assert (= (x3116 (x3407 64 x239 100)) 64))
(assert (= (x3116 (x1896 x4598 x3197 x5234 x8550 x4437)) x4598))
(assert (= x7735 (and x5193 x4337)))
(assert (=> (>= 10000 x8304) (= (x1388 x8304) 0)))
(assert (= (and x1457 x750) x8385))
(assert (x4938 x8153))
(assert (x4938 x6254))
(assert (x4938 x2272))
(assert (x4938 x554))
(assert (= x7199 (x3116 (x1022 x7199 x8191))))
(assert (= x5296 (or (and x5157 (not x4730)) (and x6530 (not x1377)) (and (not x3499) x3784))))
(assert (= (x3647 (x6944 x6541 x843 x1515 x8282 x1540 x3612 x7304 x6813)) x843))
(assert (x4938 x1694))
(assert (x704 x7479))
(assert (x4938 x8510))
(assert (x4938 x3201))
(assert (= x3964 (and x7709 x5510)))
(assert (= (and x2165 x1724) x4593))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1022 x6088 x8345)))
(assert (x4938 x8528))
(assert (= (x3647 (x3407 x3224 x5218 x6215)) x5218))
(assert (x4938 x2949))
(assert (= x963 x4516))
(assert (= (and x5496 (not x1010)) x1681))
(assert (=> (<= x3818 10000) (= 0 (x1388 x3818))))
(assert (=> (<= x1841 10000) (= (x1388 x1841) 0)))
(assert (= x3113 (and (not x7771) x2174)))
(assert (=> (>= 10000 x8265) (= 0 (x1388 x8265))))
(assert (x4938 x6145))
(assert (x4938 x5196))
(assert (x4938 x795))
(assert (= (x1022 x4809 x5184) (x1388 (x1022 x4809 x5184))))
(assert (< 10000 (x7622 x6088 x6608 x929 x2836 x1656 x880)))
(assert (x4938 x5062))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 x3479 x2164 x2366)))
(assert (x4938 x3956))
(assert (= x3228 (x3647 (x3407 64 x3228 2))))
(assert (> (x1896 x2454 x4147 x8278 x3885 x5310) 10000))
(assert (x4938 x6533))
(assert (= x5805 (=> (and (= x6322 false) (= 0 x3196) (= true x6679)) x2887)))
(assert (x4546 x7828))
(assert (x4938 x3322))
(assert (x4938 x2303))
(assert (=> (>= 10000 x613) (= 0 (x1388 x613))))
(assert (x4938 x6198))
(assert (= x6213 (x3116 (x1896 x6213 x8096 x4464 x7643 x4486))))
(assert (x4938 x5598))
(assert (x4938 x3146))
(assert (= x5188 (and x665 (not x5320))))
(assert (x4938 x1946))
(assert (x4938 x1584))
(assert (x4938 x4502))
(assert (x4938 x3138))
(assert (x4938 x7213))
(assert (x4938 x1639))
(assert (< (x3407 64 x5351 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x7574))
(assert (x4938 x5685))
(assert (< 10000 (x1022 x5857 x8169)))
(assert (=> (<= x1051 10000) (= 0 (x1388 x1051))))
(assert (x4938 x6534))
(assert (x4938 x2836))
(assert (= (x3647 (x3407 x2454 x2923 x2510)) x2923))
(assert (= (and x2081 (not x3722)) x8442))
(assert (x704 x7490))
(assert (> (x1022 x6213 x863) 10000))
(assert (not (x8398 (x3407 64 x5504 36))))
(assert (not (x8398 (x3407 64 x26 (ite (>= 32 x2119) x5997 (ite (>= 64 x2119) x1207 (ite (<= x2119 96) x568 (ite (>= 128 x2119) x6700 (ite (>= 160 x2119) x285 (ite (>= 192 x2119) x1309 x2250))))))))))
(assert (x4938 x6418))
(assert (x4938 x1602))
(assert (x4938 x2083))
(assert (x4938 x6061))
(assert (x4938 x5315))
(assert (x4938 x232))
(assert (= x1606 x3300))
(assert (x4938 x2714))
(assert (x4938 x1746))
(assert (x4938 x7569))
(assert (= (x3647 (x3407 64 1 x5792)) 1))
(assert (x4938 x7262))
(assert (= (or (and x592 x1636) (and x4252 x6470) (and x5208 x6259)) x1749))
(assert (x150 x7828))
(assert (x8398 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (x4938 x4677))
(assert (= (x1022 x3224 x2213) (x1388 (x1022 x3224 x2213))))
(assert (x4938 x3228))
(assert (x4938 x4664))
(assert (x4938 x7656))
(assert (x4938 x5096))
(assert (= x3566 (or x1558 x1114 x7699 x8082 x831)))
(assert (= x5289 (and x7268 (not x1086))))
(assert (x4938 x5887))
(assert (x4938 x3104))
(assert (= x1520 (and x4697 x589)))
(assert (x4938 x6658))
(assert (x150 x583))
(assert (x4938 x6253))
(assert (x4938 x908))
(assert (= (x3116 (x6944 x6213 x6825 x4401 x6162 x2970 x433 x2098 x6756)) x6213))
(assert (= (and x6530 x1377) x4290))
(assert (= x8452 (and x441 (not x1128))))
(assert (= (x6568 (x7622 x5478 x3146 x5426 x4785 x7964 x5820)) x7964))
(assert (x4938 x1503))
(assert (= x1178 (and x3559 x8548)))
(assert (= x6259 (and x4574 (not x2262))))
(assert (= (x3647 (x3407 64 x3138 6)) x3138))
(assert (x4938 x8227))
(assert (x4938 x3119))
(assert (=> (>= 10000 x8218) (= 0 (x1388 x8218))))
(assert (= x3415 (x701 (x1896 x7277 x2481 x3415 x960 x8255))))
(assert (= x3654 (and (not x4880) x7949)))
(assert (not (x8398 (x3407 64 x4889 (ite (>= 32 x3989) x2070 (ite (>= 64 x3989) x1013 (ite (<= x3989 96) x8488 (ite (<= x3989 128) x7028 (ite (>= 160 x3989) x801 (ite (>= 192 x3989) x6233 x449))))))))))
(assert (= (x1388 (x3407 64 x1256 11)) (x3407 64 x1256 11)))
(assert (x4938 x2366))
(assert (= x2406 (x701 (x7087 x5857 x604 x2406 x7313))))
(assert (=> (<= x6423 10000) (= (x1388 x6423) 0)))
(assert (x4938 x5306))
(assert (= (and x5763 x3925) x4965))
(assert (x4938 x8040))
(assert (= x2564 (x555 (x6944 x2119 x5959 x3270 x2647 x20 x2439 x3298 x2564))))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (= (or x5954 x7629) x7020))
(assert (x4938 x1880))
(assert (= x8369 (x5419 (x7622 x3224 x7683 x1344 x5037 x3808 x8369))))
(assert (x4938 x4188))
(assert (x4938 x6383))
(assert (= x1861 (x5419 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (x4938 x6428))
(assert (= (x3647 (x3407 64 x8409 6)) x8409))
(assert (x4938 x3659))
(assert (x4938 x6138))
(assert (> (x3407 64 x3228 2) 10000))
(assert (x4938 x4588))
(assert (< 10000 (x3407 64 x6717 5)))
(assert (x4938 x5939))
(assert (x4938 x6513))
(assert (x4938 x1657))
(assert (=> (>= 10000 x3205) (= 0 (x1388 x3205))))
(assert (= (and x5510 (not x7709)) x6194))
(assert (x4938 x4557))
(assert (= (and (not x7224) x6074) x5906))
(assert (x4938 x7047))
(assert (x4938 x5123))
(assert (x4938 x2557))
(assert (x4938 x1133))
(assert (x4938 x2972))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3833 36)))
(assert (= (and x1868 (not x610)) x4029))
(assert (= (x1022 x7199 x8191) (x1388 (x1022 x7199 x8191))))
(assert (= x12 (or x3215 x1306)))
(assert (= x6760 (x3647 (x3407 x3989 x6760 x1411))))
(assert (x4938 x6575))
(assert (x4938 x8236))
(assert (= (x701 (x3407 x2454 x2923 x2510)) x2510))
(assert (= (=> (and (= x6598 x1553) (= x8178 x5256) (= x6839 x8342) (= x5545 x7647) (= x5635 x7800)) x3210) x2407))
(assert (x3670 x4295))
(assert (=> (>= 10000 x1836) (= 0 (x1388 x1836))))
(assert (x4938 x1355))
(assert (x4938 x4034))
(assert (= (=> (and (= x6629 true) (= false x8242) (= 0 x2766)) x4152) x5952))
(assert (= (x701 (x7622 x3479 x7884 x1998 x3288 x2864 x1503)) x1998))
(assert (x150 x5032))
(assert (= x7792 (x5419 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (= (x1388 486791245) 0))
(assert (x4938 x5533))
(assert (= x2452 (x701 (x7622 x4159 x3114 x2452 x1679 x3341 x8514))))
(assert (=> (<= x8425 10000) (= 0 (x1388 x8425))))
(assert (x4938 x2672))
(assert (x4938 x2189))
(assert (x4938 x1664))
(assert (x4938 x1890))
(assert (x4938 x4614))
(assert (x4938 x2244))
(assert (=> (>= 10000 x2440) (= 0 (x1388 x2440))))
(assert (= 36 (x701 (x3407 64 x4502 36))))
(assert (x4938 x6506))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x7622 x4809 x5507 x591 x4925 x8524 x223)))
(assert (=> (>= 10000 x4147) (= (x1388 x4147) 0)))
(assert (x4938 x4462))
(assert (x4938 x7501))
(assert (= (x6568 (x2341 x4400 x6003 x3220 x7185 x6729 x8389 x3569)) x6729))
(assert (=> (>= 10000 x2618) (= 0 (x1388 x2618))))
(assert (x4938 x7490))
(assert (=> (>= 10000 x5820) (= 0 (x1388 x5820))))
(assert (x4938 x3687))
(assert (= (x3116 (x1896 x2726 x7749 x2789 x3787 x3437)) x2726))
(assert (x4938 x834))
(assert (x4938 x5272))
(assert (not (x8398 (x2341 x7277 x204 x8517 x2929 x2901 x7792 x7563))))
(assert (= x4311 (x3647 (x6944 x3224 x4311 x494 x6061 x6748 x1861 x3957 x802))))
(assert (= (and x7653 x117) x1724))
(assert (x4938 x4600))
(assert (x4938 x1901))
(assert (= (x1388 (x1022 x5857 x8169)) (x1022 x5857 x8169)))
(assert (= 0 (x1388 3628442803)))
(assert (x4938 x115))
(assert (x4938 x8482))
(assert (< 10000 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)))
(assert (x4938 x6891))
(assert (< (x7622 x5857 x6884 x2985 x8141 x159 x2846) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3407 64 x3627 3)))
(assert (= (x3116 (x2341 x4809 x8507 x7336 x6918 x6832 x5982 x1291)) x4809))
(assert (x4938 x6949))
(assert (x4938 x741))
(assert (= (x1388 (x7622 x5857 x6884 x2985 x8141 x159 x2846)) (x7622 x5857 x6884 x2985 x8141 x159 x2846)))
(assert (x4938 x788))
(assert (> (x3407 x5857 x3212 x3321) 10000))
(assert (x4938 x135))
(assert (x4938 x299))
(assert (= (x1388 (+ 2 x7456)) (x1388 x7456)))
(assert (x4938 x738))
(assert (= x8220 (=> (= x238 (= 0 x950)) (and (=> (and x238 (and (= x7329 (x7324 x934)) (>= 255 x7329) (= (> x7329 3) x6846) (= (x3407 64 x5520 11) x934))) (and (=> (and x6846 (and (= x5514 false) (= x7377 true) (= 36 x340))) x6463) (=> (and (= x7900 (= x7329 2)) (not x6846)) (and (=> (and (and (<= x6717 65535) (= (x3511 x4530) x2596) (= x4530 (x3407 64 1 x1485)) (= (= x4589 0) x3955) (= x1485 (x3407 64 x6717 4))) x7900) (and (=> (and (= x2596 x549) x3955) x6836) (=> (and (= x1457 (> x2596 x4589)) (not x3955)) (and (=> (and (and (= false x50) (= x864 true) (= 4 x340)) x1457) x6463) (=> (and (not x1457) (= x549 x4589)) x6836))))) (=> (and (not x7900) (and (= 4 x340) (= x2142 true) (= x4933 false))) x6463))))) (=> (and (not x238) (and (= x8079 false) (= x3715 true) (= 4 x340))) x6463)))))
(assert (= 2 (x701 (x3407 64 x8340 2))))
(assert (x150 x8055))
(assert (x4938 x7433))
(assert (x4938 x6841))
(assert (x4938 x5946))
(assert (= (x1388 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x4938 x5804))
(assert (= (and x6312 x170) x2630))
(assert (x4938 x1679))
(assert (= (x1388 (x1896 x2119 x3204 x7545 x6185 x4559)) (x1896 x2119 x3204 x7545 x6185 x4559)))
(assert (= (and x1449 (not x3358)) x6576))
(assert (=> (>= 10000 x4115) (= (x1388 x4115) 0)))
(assert (x4938 x8160))
(assert (=> (<= x3445 10000) (= (x1388 x3445) 0)))
(assert (x4938 x8081))
(assert (=> (<= x7403 10000) (= 0 (x1388 x7403))))
(assert (x4938 x5819))
(assert (=> (>= 10000 x6088) (= (x1388 x6088) 0)))
(assert (= (x1388 (x7622 x4809 x5507 x591 x4925 x8524 x223)) (x7622 x4809 x5507 x591 x4925 x8524 x223)))
(assert (x4938 x7828))
(assert (x8398 100000))
(assert (= (x1388 3521034783) 0))
(assert (=> (>= 10000 x5172) (= (x1388 x5172) 0)))
(assert (= (x7622 x3651 x6841 x2084 x4642 x4462 x3445) (x1388 (x7622 x3651 x6841 x2084 x4642 x4462 x3445))))
(assert (x4938 x2969))
(assert (= (x1388 (x1022 x2454 x196)) (x1022 x2454 x196)))
(assert (= x2937 (and (not x5537) x3496)))
(assert (= x2617 (x6340 (x1896 x4159 x5486 x1676 x2617 x1395))))
(assert (= x5184 (x3647 (x1022 x4809 x5184))))
(assert (x4938 x694))
(assert (= 64 (x3116 (x3407 64 x3342 100))))
(assert (= x6975 (and x7325 x2261)))
(assert (=> (>= 10000 x1373) (= (x1388 x1373) 0)))
(assert (= (x1388 (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)) (x2341 x3479 x692 x3007 x463 x7060 x5978 x2128)))
(assert (x150 x3167))
(assert (=> (<= x6717 10000) (= (x1388 x6717) 0)))
(assert (= (and x4113 (not x4789)) x1449))
(assert (= (=> (and (= (= 0 x4012) x8535) (or (and (and (= (x6055 x4404) x4775) (= (x1671 x1579) x5576) (= x5116 x7604) (= x2866 x1149) (>= x1422 0) (= x4012 x485) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1422) (= (+ x7943 x5576) x1422) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x5576 x7943)) (= x7943 (ite (= 0 x4012) x7744 0)) (= x7408 (- x4775 x7943)) (= x496 x4549) (= x1422 x1827)) x8535) (and (and (= x4012 x485) (= x4549 x496) (= x5116 x7604) (= x2866 x1149)) (not x8535)))) x2268) x898))
(assert (< 10000 (x3407 x4598 x4609 x1933)))
(assert (=> (<= x5582 10000) (= (x1388 x5582) 0)))
(assert (x4938 x661))
(assert (x4938 x4042))
(assert (x4938 x3408))
(assert (x4938 x2848))
(assert (= (and x917 x8538) x5448))
(assert (= x754 (and x421 (not x1988))))
(assert (= (and x869 x6217) x5895))
(assert (x4938 x5495))
(assert (= x7403 (x701 (x7622 x6541 x4268 x7403 x8120 x4393 x5428))))
(assert (x4938 x5749))
(assert (x4938 x5182))
(assert (= (or x3735 x3654) x1866))
(assert (x4938 x141))
(assert (= (x6568 (x2341 x1389 x5174 x2319 x3845 x1011 x5730 x2953)) x1011))
(assert (x4938 x6189))
(assert (= x2002 (and x8122 x5744)))
(assert (x4938 x2229))
(assert (=> (>= 10000 x1847) (= (x1388 x1847) 0)))
(assert (= x2101 (and x6194 x2800)))
(assert (< (x7087 x3479 x7029 x183 x5058) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= (+ x2150 x3842) x2223) x3776) x879))
(assert (< (x3407 64 x1680 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4938 x6429))
(assert (x4938 x5384))
(assert (= (x1388 (+ x8232 1)) (x1388 x8232)))
(assert (x4938 x3612))
(assert (x4938 x3813))
(assert (= (x1022 32 104) (x1388 (x1022 32 104))))
(assert (= x858 (and x1091 (not x1322))))
(assert (< (x3407 64 x1891 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x701 (x3407 64 x661 36)) 36))
(assert (= (x6340 (x2341 x3224 x1445 x1432 x4542 x1381 x6998 x2753)) x4542))
(assert (x4938 x6064))
(assert (= (or (and x8288 x4708) (and x6144 x6763)) x8382))
(assert (x4938 x7971))
(assert (x4938 x3831))
(assert (= x3215 (and x4605 x6779)))
(assert (= (and x7382 x3740) x8036))
(assert (= (x701 (x3407 64 1 x3628)) x3628))
(assert (= x4599 (x6568 (x1896 x4809 x2199 x4831 x3620 x4599))))
(assert (x4938 x8157))
(assert (= (and (not x1124) x579) x8006))
(assert (< 10000 (x1022 x6088 x8345)))
(assert (= (x1896 x5478 x5582 x4037 x5940 x3546) (x1388 (x1896 x5478 x5582 x4037 x5940 x3546))))
(assert (= x7277 (x3116 (x3407 x7277 x1788 x5949))))
(assert (=> (>= 10000 x5853) (= 0 (x1388 x5853))))
(assert (not (x8398 (x3407 64 x8491 11))))
(assert (=> (<= x7317 10000) (= (x1388 x7317) 0)))
(assert (> (x1022 x3989 x8396) 10000))
(assert (x4938 x6701))
(assert (x4938 x6076))
(assert (= x7235 (and x7771 x2174)))
(assert (= (x1388 (x1022 x5478 x42)) (x1022 x5478 x42)))
(assert (x4938 x6374))
(assert (= x5964 (=> (or (and (not x4375) (and (= x89 x5735) (= x7400 x2975) (= x2039 x5236))) (and x4375 (and (>= 1461501637330902918203684832716283019655932542975 x1238) (= x2975 x7981) (= x2039 x1238) (= x3353 x89)))) x4408)))
(assert (< 10000 (x3407 64 x1599 12)))
(assert (< 10000 (x2341 x7199 x6663 x2442 x1841 x2052 x5010 x6023)))
(assert (= (=> (and (= x145 0) (= x4899 x4984) (= 2 x617) (= x2926 x7540) (= x3703 x5315) (= x3488 x3900)) x131) x3583))
(assert (= x2350 (and x6562 x2113)))
(assert (x4938 x7853))
(assert (not (x8398 (x7087 x4159 x8094 x3597 x5628))))
(assert (x4938 x2667))
(assert (> (x3407 64 x8356 36) 10000))
(assert (= (and x5360 x4448) x579))
(assert (=> (>= 10000 x2533) (= (x1388 x2533) 0)))
(assert (= (x1388 (+ 1 x5205)) (x1388 x5205)))
(assert (x4938 x1783))
(assert (= (=> (= (= x5329 0) x5797) (and (=> (and (and (= x2850 x8210) (= x584 x1839) (= x2561 x4368)) x5797) x6594) (=> (and (not x5797) (and (= x1518 (and x5053 x2513)) (>= x4519 1) (= x5356 (x6 x1579)) (= x7103 (x5455 128)) (= x567 (x6 x4368)) (= x2513 (<= x7103 x5356)) (= (< (+ x7103 x567) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5053) (= x2073 160) (= x4519 (x8177 x4368)))) (and (=> (and (and (<= x7985 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x4652 x7103) x7985) (= x4194 (= x4368 x4187)) (= (x6 x1579) x580) (= x6390 x7985) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4652 x7103)) (<= 0 x7985) (= x4652 (x2899 x4368)) (= (- x580 x7103) x3918)) x1518) (and (=> (and (and (= (x8177 x3521) x6605) (= x1398 x1579) (<= 1 x6605) (= x3729 36) (= x3521 x4368) (= false x6092) (>= 127 x4800) (>= x4368 1) (= x7864 false) (= x6725 true) (= x892 36180046632115354981904271164172418022085455641023445553456023893925156618240) (<= x4368 1461501637330902918203684832716283019655932542975) (= 1341992515 x2573) (<= x4800 127)) (not x4194)) (and (=> (and x6725 (= x4313 (= x1579 x621))) (and (=> (and x4313 (and (= (= x661 255) x7862) (<= x661 255))) (and (=> (and (and (= 0 x6168) (= x1927 x621) (= false x6421) (= x7078 x584) (= x4010 x4368) (= x2331 x6291) (= x5099 x6717) (= x5801 x2133) (= x7374 x307) (= x1991 x138) (= x3351 true) (= x8267 x4066) (= x2850 x2398) (= x5098 x6331) (= x6676 x661) (= x2126 x6283) (= x1884 2)) x7862) x5672) (=> (and (and (= (+ 1 x661) x113) (= x1379 (x3407 64 x661 36)) (= x8340 (x1066 255 x113)) (= (= x5253 0) x6726) (= x5253 (x2629 x1379)) (= (x1066 255 x113) x7583)) (not x7862)) (and (=> (and (not x6726) (= (= 1 x5253) x6993)) (and (=> (and (= (= x8340 255) x2298) x6993) (and (=> x2298 x7330) (=> (and (and (= x1680 (x1066 255 x158)) (= (x1066 255 x158) x3143) (= (+ 1 x8340) x158) (= (x3407 64 x8340 6) x2798) (<= x3627 65535) (= x3627 (x4926 x2798)) (= (= 255 x1680) x212)) (not x2298)) (and (=> x212 x6027) (=> (and (and (= (x1571 x1876) x1453) (= x1946 (x1066 1 x2331)) (= x2247 (div x2331 2)) (= x766 (ite (< 0 x1946) x2247 (x1066 127 x2247))) (= (+ 1 x1680) x3044) (= x3837 (x1066 255 x3044)) (= x6067 (< 0 x2480)) (= (x1066 255 x3044) x5877) (= (x2230 (- x1946 (mod (ite (< x766 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2480) (= (x3407 64 x1680 12) x1876) (<= x1453 18446744073709551615)) (not x212)) (and (=> (and (and (= (x1066 1 x2331) x7389) (= (= x7389 0) x1630)) x6067) (and (=> (and (and (= (+ 292 x582) x2930) (or (= 0 x582) (= x582 32)) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2331) x2065) (= (* 32 (ite (not (= 0 x766)) 1 0)) x582)) x1630) x6689) (=> (and (and (and (= x6315 (x1022 32 103)) (= (> x766 0) x3708)) (or (and (not x3708) (= x7925 0)) (and (and (= x7925 32) (>= 32 x766) (= x2873 (x370 x6315))) x3708))) (not x1630)) x3426))) (=> (not x6067) x2490))))))) (=> (and (= (= x5253 2) x1959) (not x6993)) (and (=> (and (= x3603 (= x5253 3)) (not x1959)) (and (=> (and x3603 (= x691 (= x8340 255))) (and (=> x691 x7330) (=> (and (and (= (x1066 255 x6500) x1202) (= x6500 (+ x8340 1)) (= (x2629 x4910) x8491) (= (= x1202 255) x2695) (= (x3407 64 x8340 36) x4910) (= x1573 (x1066 255 x6500))) (not x691)) (and (=> (and (not x2695) (and (= (x8177 x621) x2918) (= x4779 (+ 1 x1202)) (= x3362 (x3407 64 x1202 100)) (= (x2690 x3362) x1019) (= (x1066 255 x4779) x3564) (= (x1066 255 x4779) x2064) (= 128 x8484) (= x1882 (= 0 x2918)))) (and (=> (and (and (<= x6042 127) (= x3269 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= x1019 x8388) (= x8296 (= x3521 x4368)) (= false x5567) (<= x6042 127) (= x8311 (x8177 x1579)) (= x4936 x1243) (= x8491 x1243) (= x5446 false) (= x4544 68) (= x3805 3957931183) (>= x8311 1)) (not x1882)) (and (=> (and (and (= (x7324 x6681) x8392) (>= 255 x8392) (= (x3407 64 x8491 11) x6681) (= x6901 (< 3 x8392))) x8296) (and (=> (and (= x2120 (= x8392 1)) (not x6901)) (and (=> (and x2120 (and (= x3507 (x3407 64 x8491 11)) (= x1360 (= x4322 0)) (= (+ 2 x3507) x1014) (= x6246 128) (= x4322 (x8177 x1579)) (= (x3407 64 x8491 11) x4690))) (and (=> (and x1360 (and (= 0 x2471) (= x6012 false) (= x157 true))) x4373) (=> (and (and (and (= 0 x7611) (= 100 x2244) (<= x3182 127) (>= 127 x3182) (= (x8177 x1579) x1995) (= x7257 x5919) (= x6505 false) (= x5919 x4936) (= x683 0) (= 486791245 x6133) (= x6854 0) (= x6183 false) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x3152) (= false x7096) (= x4190 0) (<= 1 x1995)) (or (and (not x6183) (= x5615 (ite x6183 1 0))) (and x6183 (and (>= 1461501637330902918203684832716283019655932542975 x138) (= x5615 (ite (not (= x1579 x138)) 1 0)))))) (not x1360)) x5333))) (=> (and (not x2120) (and (= true x1522) (= 4 x2471) (= x1310 false))) x4373))) (=> (and x6901 (and (= x3491 false) (= x2471 36) (= x4773 true))) x4373))) (=> (and (and (= false x2282) (= x2471 4) (= x2426 true)) (not x8296)) x4373))) (=> (and (and (= x2126 x6283) (= x584 x7078) (= x5098 x6331) (= 0 x6168) (= x2763 true) (= x6717 x5099) (= x6291 x2331) (= x6676 x661) (= x621 x1927) (= false x8165) (= x6297 2) (= x307 x7374) (= x8267 x4066) (= x1991 x138) (= x4368 x4010) (= x2850 x2398) (= x2133 x5801)) x1882) x5672))) (=> x2695 x6022))))) (=> (and (= (= x5253 4) x4043) (not x3603)) (and (=> (and (= x3092 (= x8340 255)) x4043) (and (=> (and (not x3092) (and (= (+ x8340 1) x5307) (= (= x239 255) x7613) (= (x2629 x375) x6704) (= x2839 (x1066 255 x5307)) (= (x3407 64 x8340 36) x375) (= x239 (x1066 255 x5307)))) (and (=> x7613 x6022) (=> (and (and (= x248 (+ 1 x239)) (= (x2690 x8570) x5837) (= x5504 (x1066 255 x248)) (= (x3407 64 x239 100) x8570) (= (= 255 x5504) x1086) (= (x1066 255 x248) x7187)) (not x7613)) (and (=> x1086 x6027) (=> (and (not x1086) (and (= true x4960) (= x1471 (x6175 x3521)) (= x2126 x6283) (= 2 x7941) (= 0 x6168) (= (x3407 64 x5504 36) x852) (= (< (+ x6704 x7502) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x411) (= x6676 x661) (not (and x411 x2087)) (= x7078 x584) (= (x1066 255 x3405) x5579) (= x3405 (+ x5504 1)) (= x307 x7374) (= x138 x1991) (= x7502 (x6175 x621)) (= x2850 x2398) (= x2133 x5801) (= x5099 x6717) (= x4066 x8267) (= x2814 (x2629 x852)) (= x1927 x621) (= x1655 (x1066 255 x3405)) (= false x2549) (= x5098 x6331) (= x6291 x2331) (= x4010 x4368) (= (>= x1471 x6704) x2087))) x5672))))) (=> x3092 x7330))) (=> (and (not x4043) (= x2396 (= 5 x5253))) (and (=> (and (= (= x8340 255) x8443) x2396) (and (=> x8443 x7330) (=> (and (and (= (= x7610 255) x3673) (= x835 (x2629 x5212)) (= x7610 (x1066 255 x7490)) (= (+ x8340 1) x7490) (= (x3407 64 x8340 36) x5212) (= (x1066 255 x7490) x4323)) (not x8443)) (and (=> x3673 x6022) (=> (and (and (= x4364 (x3407 64 x7610 6)) (= x7521 (x1066 255 x1107)) (<= x1891 65535) (= x1599 (x1066 255 x1107)) (= x7606 (= x1599 255)) (= x1107 (+ x7610 1)) (= x1891 (x4926 x4364))) (not x3673)) (and (=> x7606 x6715) (=> (and (not x7606) (and (= (+ 1 x1599) x5032) (= x5989 (x1066 255 x5032)) (= x1232 (x1571 x2595)) (= x1001 (< 0 x8030)) (= x6237 (div x2331 2)) (= x2595 (x3407 64 x1599 12)) (= (ite (> x2721 0) x6237 (x1066 127 x6237)) x6266) (= x2721 (x1066 1 x2331)) (>= 18446744073709551615 x1232) (= (x1066 255 x5032) x348) (= (x2230 (- x2721 (mod (ite (> 32 x6266) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x8030))) (and (=> (not x1001) x5713) (=> (and (and (= (= 0 x2736) x7071) (= x2736 (x1066 1 x2331))) x1001) (and (=> (and (not x7071) (and (or (and (and (= x373 (x370 x7684)) (= x620 32) (>= 32 x6266)) x6221) (and (not x6221) (= 0 x620))) (and (= (> x6266 0) x6221) (= x7684 (x1022 32 103))))) x1397) (=> (and x7071 (and (or (= 32 x931) (= x931 0)) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2331) x6489) (= x8562 (+ x931 292)) (= x931 (* (ite (not (= x6266 0)) 1 0) 32)))) x1524))))))))))) (=> (and (not x2396) (= x7789 (= x5253 6))) (and (=> (and (= x3941 (= x5253 7)) (not x7789)) (and (=> (and (= x4279 (= 255 x8340)) x3941) (and (=> (and (not x4279) (and (= x6678 (+ 1 x8340)) (= x1286 (x1066 255 x6678)) (= x5227 (x2249 x203)) (= x203 (x3407 64 x8340 2)) (<= x5227 1461501637330902918203684832716283019655932542975) (= x6404 (x8177 x621)) (= (= x6404 0) x1529) (= 128 x1015) (= (x1066 255 x6678) x7676))) (and (=> (and (not x1529) (and (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x7179) (= false x3238) (= x1851 2770781680) (>= x2653 1) (<= x4896 127) (= x8192 false) (= 36 x4097) (<= x138 1461501637330902918203684832716283019655932542975) (= x3334 (= x3521 x138)) (>= 127 x4896) (= x7245 x5227) (= x2653 (x8177 x1579)))) (and (=> (and (and (= (x6175 x1579) x4151) (= x7209 (> x4151 0))) x3334) (and (=> (and x7209 (and (= (x6175 x5227) x1955) (= (and x7136 x3273) x1970) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4151 x1955)) x7136) (= (<= x4151 x400) x3273) (= x400 (x6175 x1579)) (= x6623 128))) (and (=> (and (not x1970) (and (= x4489 0) (= x6147 x584) (= x2331 x7343) (= x8056 x5098) (= x3387 0) (= x7374 x2219) (= x6114 x7676) (= x2422 x621))) x7254) (=> (and (and (or (and (and (= x7374 x1302) (= x2331 x6617) (= x5098 x3286) (= x1698 x584) (= x1600 x621) (= x6954 x7676)) (not x4880)) (and (and (= (= x5570 (x5137 x5227)) x458) (= x1302 x3380) (>= 4294967295 x1200) (= (x6450 x5227) x5570) (= x2568 (x6450 x1579)) (= x6895 x1600) x7972 x458 (= x1698 x5703) (= x7972 (<= x2568 (x5137 x1579))) (= x6954 x5913) (= x3286 x3395) (= x6344 x6617)) x4880)) (and (= x7305 (x562 x5227)) (= x4880 (> x6236 0)) (= x2451 (+ x4151 x7305)) (= x2451 x5125) (< (+ x7305 x4151) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2451 0) (= x6885 (x6175 x1579)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2451) (= x2371 (- x6885 x4151)))) x1970) x4666))) (=> (and (and (= x5098 x715) (= x1148 x584) (= x6664 x7374) (= x327 x621) (= x2331 x6920) (= x7676 x6253)) (not x7209)) x3778))) (=> (and (not x3334) (and (= x4425 false) (= x6038 true) (= 100 x8328))) x2365))) (=> (and x1529 (and (= x5098 x6331) (= x584 x7078) (= x2331 x6291) (= x6833 true) (= false x1840) (= x7374 x307) (= x5801 x2133) (= x2126 x6283) (= 2 x745) (= x8267 x4066) (= x2850 x2398) (= x6676 x661) (= x621 x1927) (= x4010 x4368) (= 0 x6168) (= x1991 x138) (= x6717 x5099))) x5672))) (=> x4279 x7330))) (=> (and (not x3941) (= x1127 (= 8 x5253))) (and (=> (and (= (= x8340 255) x73) x1127) (and (=> x73 x7330) (=> (and (not x73) (and (= x1911 (x8177 x621)) (= (+ 1 x8340) x5901) (= (x3407 64 x8340 36) x7465) (= x3844 (= x1911 0)) (= (x1066 255 x5901) x1187) (= 128 x936) (= x438 (x2629 x7465)) (= (x1066 255 x5901) x3355))) (and (=> (and (and (= x307 x7374) (= x661 x6676) (= x2398 x2850) (= x1927 x621) (= x7615 2) (= x6080 true) (= x6291 x2331) (= x4066 x8267) (= x6717 x5099) (= x2126 x6283) (= x2133 x5801) (= x584 x7078) (= x6331 x5098) (= x138 x1991) (= false x7147) (= x4010 x4368) (= x6168 0)) x3844) x5672) (=> (and (not x3844) (and (= false x4923) (>= 127 x5395) (= x98 36) (= x7197 false) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x7612) (>= 1461501637330902918203684832716283019655932542975 x138) (= x8040 (x8177 x1579)) (>= x8040 1) (>= 127 x5395) (= (= x3521 x138) x5646) (= x1146 1313998243) (= x6957 x438))) (and (=> (and (= x870 (> 100000 x438)) x5646) (and (=> (and (and (= x6019 x584) (= x8267 x4980) (= x1543 x7374) (= x5587 x6717) (= x1252 x138) (= x621 x1516) (= x5801 x2628) (= x768 x4102) (= x8446 x1187) (= x5098 x2409) (= x4368 x4796) (= x2331 x2579) (= x4102 (x2629 x7465)) (= x2343 1) (= 0 x6582) (= x6283 x77)) (not x870)) x1791) (=> (and (and (= true x7764) (= x6910 false) (= x6222 4)) x870) x971))) (=> (and (and (= true x5414) (= x6222 100) (= false x2323)) (not x5646)) x971))))))) (=> (and (and (= x8267 x2216) (= x7636 x5801) (= x621 x2756) (= x2850 x7882) (= x7217 x4368) (= x6717 x1892) (= x3675 x584) (= x1542 x2331) (= x5636 x138) (= x7374 x7640) (= x8340 x72) (= x3557 x6283) (= x5098 x6533)) (not x1127)) x6496))))) (=> (and x7789 (= x1332 (= x8340 255))) (and (=> (and (not x1332) (and (= x4440 (x1066 255 x7437)) (= (+ x8340 1) x7437) (= x7724 (x2629 x5468)) (= x5320 (= 255 x4440)) (= x5468 (x3407 64 x8340 36)) (= x7344 (x1066 255 x7437)))) (and (=> (and (and (= x5520 (x2629 x1150)) (= (x1066 255 x3162) x3822) (= x8370 (x1066 255 x3162)) (= (x3407 64 x4440 36) x1150) (= (= 255 x3822) x7835) (= (+ 1 x4440) x3162)) (not x5320)) (and (=> (and (and (= (x1066 255 x4885) x1801) (= x8425 (x1066 255 x4885)) (= x241 (x3407 64 x3822 36)) (= x5180 (= 255 x8425)) (= x4589 (x2629 x241)) (= (+ 1 x3822) x4885)) (not x7835)) (and (=> x5180 x6715) (=> (and (and (= 128 x8118) (= x8470 (x1066 255 x7479)) (= (x3407 64 x8425 36) x3988) (= (x1066 255 x7479) x3859) (= x6220 (x2629 x3988)) (= (x8177 x621) x4144) (= x5542 (= x4144 0)) (= (+ x8425 1) x7479)) (not x5180)) (and (=> (and (and (= x584 x7078) (= x2398 x2850) (= x138 x1991) (= x4010 x4368) (= x661 x6676) (= x6717 x5099) (= x1678 2) (= x4066 x8267) (= x6331 x5098) (= false x4657) (= x7374 x307) (= x2331 x6291) (= x5801 x2133) (= x2126 x6283) (= 0 x6168) (= x1927 x621) (= true x1909)) x5542) x5672) (=> (and (not x5542) (and (= x3961 (x6175 x3521)) (= x6814 (>= x3961 x7724)) (= (and x8454 x6814) x4143) (= (x6175 x621) x8352) (= (< (+ x8352 x7724) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x8454))) (and (=> (and x4143 (and (and (= x6220 x4466) (= x532 x104) (= false x414) (= 100 x6328) (= x2532 (x8177 x1579)) (= x5709 (x6175 x3521)) (= 13123866003235860548192500634644069355060014211693331341089165407210616913920 x8035) (= (not (= x1579 x3521)) x7593) (= x4589 x104) (<= x4450 127) (= x769 x972) (= (x5179 x621) x4763) (= (- x5709 x7724) x644) (= x4634 x3669) (<= 0 x972) (= x972 (+ x7724 x4763)) (= x7439 false) (= x1242 486791245) (= x5520 x4634) (< (+ x7724 x4763) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x4450 127) (= x4466 x60) (>= x2532 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x972)) (or (and (= x950 (ite x7593 1 0)) (not x7593)) (and x7593 (and (<= x138 1461501637330902918203684832716283019655932542975) (= (ite (not (= x138 x3521)) 1 0) x950)))))) x8220) (=> (and (and (= x3704 x2850) (= 0 x1888) (= x6717 x6851) (= x4368 x5747) (= x4538 x5801) (= x5098 x978) (= x584 x2602) (= x6283 x8433) (= x8470 x1645) (= x3297 0) (= x3517 x8267) (= x2713 x7374) (= x5521 x621) (= x2344 x138) (= x2331 x1203)) (not x4143)) x5818))))))) (=> x7835 x6027))) (=> x5320 x6022))) (=> x1332 x7330))))))))))) (=> (and x1959 (= (= 255 x8340) x5839)) (and (=> x5839 x7330) (=> (and (and (= x2347 (x4926 x4771)) (= (+ 1 x8340) x323) (= x5365 (= x2644 255)) (= x4771 (x3407 64 x8340 6)) (= x6469 (x1066 255 x323)) (= (x1066 255 x323) x2644) (<= x2347 65535)) (not x5839)) (and (=> x5365 x6027) (=> (and (not x5365) (and (= (x1066 255 x4365) x8164) (= (ite (< 0 x7018) x6386 (x1066 127 x6386)) x4952) (= (x2230 (- x7018 (mod (ite (< x4952 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1303) (= x5257 (< 0 x1303)) (= x638 (x3407 64 x2644 12)) (= (x1571 x638) x5606) (= x949 (x1066 255 x4365)) (= x7018 (x1066 1 x2331)) (= (div x2331 2) x6386) (= x4365 (+ x2644 1)) (<= x5606 18446744073709551615))) (and (=> (and (and (= x8236 (x1066 1 x2331)) (= (= 0 x8236) x7299)) x5257) (and (=> (and x7299 (and (or (= x6906 0) (= x6906 32)) (= (+ 292 x6906) x4711) (= (x1066 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2331) x5780) (= x6906 (* (ite (not (= x4952 0)) 1 0) 32)))) x5653) (=> (and (and (or (and (and (= x3254 (x370 x6443)) (= 32 x8131) (<= x4952 32)) x1988) (and (not x1988) (= 0 x8131))) (and (= x6443 (x1022 32 103)) (= x1988 (> x4952 0)))) (not x7299)) x5459))) (=> (not x5257) x2490))))))))))) (=> (and x6726 (= x90 (= 255 x8340))) (and (=> x90 x7330) (=> (and (and (<= x3267 1461501637330902918203684832716283019655932542975) (= (x2249 x3157) x3267) (= (x1066 255 x979) x2616) (= x5662 (= x2616 255)) (= x3157 (x3407 64 x8340 2)) (= x5875 (x1066 255 x979)) (= x979 (+ x8340 1))) (not x90)) (and (=> x5662 x6022) (=> (and (and (= (x4926 x8144) x1754) (<= x1754 65535) (= (= 255 x6325) x5192) (= (x3407 64 x2616 6) x8144) (= x6325 (x1066 255 x8163)) (= x8163 (+ 1 x2616)) (= x6188 (x1066 255 x8163))) (not x5662)) (and (=> x5192 x6027) (=> (and (and (= (x3407 64 x6325 2) x1761) (>= 1461501637330902918203684832716283019655932542975 x630) (= (= x7413 255) x7834) (= (x1066 255 x502) x7413) (= (+ 1 x6325) x502) (= x630 (x2249 x1761)) (= x5056 (x1066 255 x502))) (not x5192)) (and (=> x7834 x6715) (=> (and (and (= (+ x7413 1) x6289) (= (x8177 x621) x5411) (= x1722 (x3407 64 x7413 36)) (= (x1066 255 x6289) x6859) (= x6937 128) (= x4156 (= 0 x5411)) (= x5367 (x1066 255 x6289)) (= x533 (x2629 x1722))) (not x7834)) (and (=> (and x4156 (and (= x5098 x6331) (= x5388 2) (= x6291 x2331) (= x3139 false) (= x661 x6676) (= x2850 x2398) (= x4010 x4368) (= x5801 x2133) (= x7374 x307) (= x584 x7078) (= 0 x6168) (= x621 x1927) (= x6283 x2126) (= x138 x1991) (= x4066 x8267) (= x6717 x5099) (= true x3561))) x5672) (=> (and (not x4156) (and (= (x8177 x1579) x1796) (= x1754 x7176) (= false x2040) (= 132 x2968) (= x630 x563) (= x8314 102788308552044517260959567728648622381392053106279845986800620074717893623808) (>= 127 x2112) (>= 1461501637330902918203684832716283019655932542975 x138) (= 3812630263 x4085) (= x533 x5163) (>= 127 x2112) (= x5823 false) (= x8329 x3267) (= (= x3521 x138) x7866) (<= 1 x1796))) (and (=> (and (not x7866) (and (= true x2007) (= x4458 false) (= 100 x6013))) x1945) (=> (and x7866 (= (> 100000 x533) x243)) (and (=> (and x243 (and (= x6013 4) (= false x3578) (= true x3364))) x1945) (=> (and (not x243) (and (= x7027 x6862) (= (x2249 x1761) x2271) (= x584 x3463) (= x138 x3399) (= x6014 x1433) (= x1983 x2271) (= (x2249 x3157) x7027) (= x794 x5098) (= x621 x3937) (= x6014 (x2629 x1722)) (= 1 x4023) (= x201 0) (= x137 x2331) (= x8267 x3049) (= x6553 (x4926 x8144)) (= x5367 x3995) (= x6283 x514) (= x7374 x7015) (= x6553 x8298))) x281))))))))))))))))))) (=> (and (and (= x7374 x307) (= x661 x6676) (= x4368 x4010) (= false x7911) (= x6291 x2331) (= x6283 x2126) (= x6331 x5098) (= x5801 x2133) (= x7078 x584) (= x5099 x6717) (= x138 x1991) (= x2547 2) (= x1927 x621) (= true x781) (= x6168 0) (= x2398 x2850) (= x4066 x8267)) (not x4313)) x5672))) (=> (and (and (= x2133 x5801) (= x2126 x6283) (= x5098 x6331) (= x307 x7374) (= x6291 x2331) (= x1927 x621) (= x8267 x4066) (= x7078 x584) (= x5099 x6717) (= x799 2) (= x1693 true) (= x2398 x2850) (= x1991 x138) (= x4010 x4368) (= false x6436) (= x6676 x661) (= x6168 0)) (not x6725)) x5672))) (=> (and (and (= x5848 36) (>= x6100 1) (<= x7559 127) (= x1579 x4150) (= x6698 false) (= x3838 36180046632115354981904271164172418022085455641023445553456023893925156618240) (= false x8228) (= (x8177 x4187) x6100) (= x7459 1341992515) (= x6287 true) (<= x7559 127)) x4194) (and (=> (and (not x6287) (and (= true x7541) (= false x6789))) x8441) (=> (and x6287 (and (= (x7306 x1033) x4812) (= x1033 (x3407 64 x1579 1)) (= (< x5890 x4812) x6406) (= x5890 (x7100 (+ x4812 x7103))))) (and (=> (and (and (= x368 false) (= x6008 true)) x6406) x8441) (=> (and (and (= x5098 x6548) (= x1629 x7374) (= x301 x5801) (= x2850 x5471) (= x7448 x2331) (= x7450 x138) (= x8267 x5017) (= x4368 x5123) (= x5423 x6283) (= x5148 x584) (= x661 x7557) (= x1450 x6717) (= x3947 x621) (= x2232 1)) (not x6406)) x6671))))))) (=> (and (not x1518) (and (= x8267 x6172) (= x138 x4695) (= x2702 0) (= x685 x621) (= x584 x3900) (= x7828 x5098) (= x4368 x4984) (= x2850 x2926) (= x2331 x6153) (= x6283 x4982) (= x3833 x661) (= x1842 x7374) (= x6717 x7048) (= x8116 x5801))) x4329))))) x3826))
(assert (= x5350 (x6568 (x6944 x4159 x2176 x1414 x1502 x5350 x1847 x3692 x6138))))
(assert (=> (<= x206 10000) (= (x1388 x206) 0)))
(assert (= x8130 (and (not x2311) x8495)))
(assert (x4938 x3477))
(assert (x4938 x7127))
(assert (x4938 x7291))
(assert (= (and (not x5103) x3176) x1930))
(assert (= x206 (x3116 (x2341 x206 x8157 x2928 x4370 x2642 x5697 x3788))))
(assert (x4938 x6241))
(assert (x4938 x863))
(assert (= (and (not x1078) x5854) x4184))
(assert (x150 x979))
(assert (x150 x812))
(assert (= x5663 (and x3784 x3499)))
(assert (not (x8398 (x3407 64 1 x5792))))
(assert (= (=> (and (= (x8177 x621) x5304) (= (x2230 (- x4565 128)) x5000) (= (= 0 x5304) x1135) (= x6547 128)) (and (=> (and (and (<= x1092 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x7712 x6777) (= x3793 x3627) (= (= x766 (x4943 132)) x1797) (>= 127 x6579) (= x6098 (x8177 x1579)) (>= 127 x6579) x1797 (= x901 false) (= x2309 51607134309459761954548520284799282329936326410793501951915747293203005440) (<= 196 x5000) (= x8428 false) (= x5000 x1092) (= (> x4400 18446744073709551615) x6763) (>= x6098 1) (= x1209 x1453) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5000) (= x6917 128) (= x256 1914215) (>= x1092 196) (= (x43 132) x4400)) (not x1135)) (and (=> x6763 x2888) (=> (and (not x6763) (and (= x4299 (x7100 (+ 164 x4400))) (= (> x4299 x1092) x274) (= 164 x4413))) (and (=> (and (and (= x520 (> x1092 (+ 31 x7874))) (= x7874 (+ 4 x7712))) (not x274)) (and (=> (and (and (= x6169 true) (= x900 false) (= x3814 0)) (not x520)) x1378) (=> (and x520 (and (= (x43 x7874) x5222) (= x4708 (< 18446744073709551615 x5222)))) (and (=> x4708 x2888) (=> (and (not x4708) (and (= (x7100 (+ x7871 x5222)) x7929) (= (> x7929 x1092) x3789) (= x7871 (+ x7874 32)))) (and (=> x3789 x5335) (=> (and (not x3789) (= x2772 (= x5801 x3521))) (and (=> (and (and (= x7529 (x2230 (- x2300 (mod (ite (< x5195 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3407 64 x3627 3) x7608) (= (x1066 1 x6712) x2300) (= (ite (> x2300 0) x2074 (x1066 127 x2074)) x5195) (= x2074 (div x6712 2)) (= (x7156 x7608) x6712) (= x547 (< 0 x7529))) x2772) (and (=> (and (and (= x1944 (* x3541 32)) (= x3541 (div (+ 31 x5195) 32)) (= (+ x1944 160) x3489) (= (= x5195 0) x8155)) x547) (and (=> (and (= (< 31 x5195) x6217) (not x8155)) (and (=> (and (and (= (x7156 x7608) x4555) (= x2080 (* 256 x6361)) (= (div x4555 256) x6361)) (not x6217)) x1672) (=> (and x6217 (and (or (not x1511) (and (and (= (x751 x2100) x6976) (<= x2497 224) (>= x2497 160)) x1511)) (and (= x1511 (> x2497 192)) (= (x751 x5755) x4065) (= x5755 (x1022 32 x7608)) (= (+ 160 x5195) x2497) (= x2100 (+ 1 x5755))))) x8168))) (=> x8155 x1672))) (=> (and (not x547) (and (= x8516 false) (= true x4026) (= 36 x3814))) x1378))) (=> (and (not x2772) (and (= x6485 false) (= x3814 100) (= true x8541))) x1378))))))))) (=> x274 x5335))))) (=> (and x1135 (and (= x4362 false) (= x307 x7374) (= x6168 0) (= x4066 x8267) (= x1991 x138) (= x661 x6676) (= true x1631) (= x4368 x4010) (= 2 x1792) (= x2398 x2850) (= x5801 x2133) (= x7078 x584) (= x2126 x6283) (= x1927 x621) (= x6291 x2331) (= x6331 x5098) (= x5099 x6717))) x5672))) x1039))
(assert (= x5510 (and x5266 x2425)))
(assert (x4938 x3254))
(assert (x4938 x683))
(assert (x4938 x5583))
(assert (= (x701 (x7622 x6088 x6608 x929 x2836 x1656 x880)) x929))
(assert (= (x3116 (x7087 x2454 x2103 x342 x6680)) x2454))
(assert (= x7556 (x701 (x6944 x7199 x5725 x7556 x2317 x4566 x5551 x7123 x270))))
(assert (x4938 x2515))
(assert (x4938 x2466))
(assert (= (and x6762 x5986) x4274))
(assert (x4938 x151))
(assert (=> (<= x1861 10000) (= 0 (x1388 x1861))))
(assert (x704 x5901))
(assert (x4938 x5388))
(assert (= (=> (and (= x571 x7822) (= x1005 x5326) (= x3093 x3388) (= x2500 x4175)) x681) x4638))
(check-sat)
(exit)
