(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x2846 () Int)
(declare-fun x1061 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x1588 () Int)
(declare-fun x3892 () Int)
(declare-fun x856 () Bool)
(declare-fun x4009 () Int)
(declare-fun x370 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1347 () Int)
(declare-fun x2942 () Bool)
(declare-fun x1506 () Int)
(declare-fun x95 () Int)
(declare-fun x2146 () Int)
(declare-fun x1931 () Bool)
(declare-fun x107 () Bool)
(declare-fun x3220 (Int) Int)
(declare-fun x4519 () Bool)
(declare-fun x4073 () Int)
(declare-fun x2679 () Bool)
(declare-fun x567 (Int) Int)
(declare-fun x1748 () Int)
(declare-fun x1798 () Int)
(declare-fun x2568 () Bool)
(declare-fun x3359 () Int)
(declare-fun x1157 () Int)
(declare-fun x2642 () Int)
(declare-fun x4422 () Bool)
(declare-fun x3396 () Int)
(declare-fun x3419 () Int)
(declare-fun x4548 () Bool)
(declare-fun x259 () Int)
(declare-fun x2542 () Int)
(declare-fun x3531 () Bool)
(declare-fun x1918 () Int)
(declare-fun x105 (Int) Bool)
(declare-fun x771 () Int)
(declare-fun x289 () Int)
(declare-fun x2566 () Bool)
(declare-fun x1006 () Int)
(declare-fun x41 () Int)
(declare-fun x3246 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x638 () Bool)
(declare-fun x3431 () Int)
(declare-fun x3138 () Int)
(declare-fun x2256 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x73 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x1443 () Int)
(declare-fun x2646 () Int)
(declare-fun x2364 () Int)
(declare-fun x842 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x257 () Int)
(declare-fun x4344 (Int) Int)
(declare-fun x1290 () Int)
(declare-fun x4181 () Int)
(declare-fun x1043 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x3633 () Int)
(declare-fun x66 () Int)
(declare-fun x1242 () Bool)
(declare-fun x3144 () Int)
(declare-fun x538 () Int)
(declare-fun x1088 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x1482 () Int)
(declare-fun x3229 () Int)
(declare-fun x3983 () Int)
(declare-fun x3522 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x791 () Int)
(declare-fun x86 () Int)
(declare-fun x3934 () Int)
(declare-fun x2806 () Int)
(declare-fun x564 () Bool)
(declare-fun x3351 () Int)
(declare-fun x2223 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x2602 () Int)
(declare-fun x3564 () Int)
(declare-fun x1196 () Int)
(declare-fun x4467 () Int)
(declare-fun x1821 () Int)
(declare-fun x2442 () Bool)
(declare-fun x2357 () Bool)
(declare-fun x1966 () Int)
(declare-fun x187 () Bool)
(declare-fun x384 () Int)
(declare-fun x2446 () Int)
(declare-fun x4205 () Bool)
(declare-fun x4201 () Int)
(declare-fun x3695 () Bool)
(declare-fun x3469 () Int)
(declare-fun x3909 () Int)
(declare-fun x1887 (Int) Int)
(declare-fun x1705 () Int)
(declare-fun x2372 (Int) Int)
(declare-fun x4234 () Int)
(declare-fun x755 () Bool)
(declare-fun x864 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x3792 () Int)
(declare-fun x1055 () Bool)
(declare-fun x622 () Int)
(declare-fun x18 () Int)
(declare-fun x4371 () Bool)
(declare-fun x713 () Bool)
(declare-fun x2594 () Int)
(declare-fun x1166 () Int)
(declare-fun x2699 () Bool)
(declare-fun x959 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x2552 () Int)
(declare-fun x2959 (Int) Int)
(declare-fun x604 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2170 () Int)
(declare-fun x1186 () Bool)
(declare-fun x3945 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1791 () Int)
(declare-fun x2869 () Bool)
(declare-fun x2123 () Int)
(declare-fun x226 (Int) Int)
(declare-fun x2211 () Int)
(declare-fun x4299 () Bool)
(declare-fun x584 () Int)
(declare-fun x134 () Int)
(declare-fun x3550 () Int)
(declare-fun x190 () Int)
(declare-fun x504 () Bool)
(declare-fun x2239 () Int)
(declare-fun x1972 () Int)
(declare-fun x1380 () Int)
(declare-fun x1011 () Int)
(declare-fun x632 () Int)
(declare-fun x2951 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x3543 (Int) Int)
(declare-fun x754 () Int)
(declare-fun x2794 () Bool)
(declare-fun x4185 (Int) Int)
(declare-fun x416 () Bool)
(declare-fun x4105 () Int)
(declare-fun x1507 () Int)
(declare-fun x364 () Bool)
(declare-fun x4041 () Int)
(declare-fun x1303 () Int)
(declare-fun x4366 () Int)
(declare-fun x2816 () Bool)
(declare-fun x4425 () Int)
(declare-fun x921 () Bool)
(declare-fun x412 () Bool)
(declare-fun x3439 () Int)
(declare-fun x3776 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x72 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x2777 () Int)
(declare-fun x1081 () Int)
(declare-fun x3773 () Int)
(declare-fun x1509 () Int)
(declare-fun x131 () Int)
(declare-fun x4097 () Bool)
(declare-fun x2114 () Int)
(declare-fun x3221 () Bool)
(declare-fun x3088 () Bool)
(declare-fun x74 () Int)
(declare-fun x1554 () Int)
(declare-fun x4146 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x643 () Bool)
(declare-fun x32 () Bool)
(declare-fun x548 () Bool)
(declare-fun x734 () Bool)
(declare-fun x4379 () Bool)
(declare-fun x934 () Int)
(declare-fun x2818 () Int)
(declare-fun x4050 () Int)
(declare-fun x503 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x4285 () Int)
(declare-fun x4385 () Bool)
(declare-fun x2843 () Int)
(declare-fun x1366 () Int)
(declare-fun x1858 () Int)
(declare-fun x2433 () Int)
(declare-fun x54 () Int)
(declare-fun x1969 () Bool)
(declare-fun x3730 () Int)
(declare-fun x884 () Int)
(declare-fun x1381 () Int)
(declare-fun x2308 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x1452 () Int)
(declare-fun x608 () Int)
(declare-fun x1612 () Int)
(declare-fun x1038 () Bool)
(declare-fun x2716 () Int)
(declare-fun x427 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x2466 () Int)
(declare-fun x2939 () Int)
(declare-fun x1062 () Int)
(declare-fun x1270 () Int)
(declare-fun x290 () Bool)
(declare-fun x2289 () Int)
(declare-fun x2686 () Bool)
(declare-fun x2009 () Int)
(declare-fun x2983 () Int)
(declare-fun x1839 () Bool)
(declare-fun x1737 () Int)
(declare-fun x472 () Bool)
(declare-fun x3872 () Int)
(declare-fun x2414 () Bool)
(declare-fun x3723 () Int)
(declare-fun x1811 () Int)
(declare-fun x3176 () Bool)
(declare-fun x2592 () Int)
(declare-fun x2772 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1211 () Int)
(declare-fun x4429 () Int)
(declare-fun x1934 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x2660 () Int)
(declare-fun x3360 () Int)
(declare-fun x1257 () Bool)
(declare-fun x269 (Int) Int)
(declare-fun x1000 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x4415 () Int)
(declare-fun x294 () Int)
(declare-fun x2652 () Int)
(declare-fun x1404 () Int)
(declare-fun x4279 () Int)
(declare-fun x3327 () Int)
(declare-fun x3512 () Int)
(declare-fun x4523 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x223 () Int)
(declare-fun x100 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x4343 () Bool)
(declare-fun x650 () Int)
(declare-fun x3300 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x1962 () Int)
(declare-fun x3780 () Int)
(declare-fun x3087 () Bool)
(declare-fun x822 () Int)
(declare-fun x3848 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x4016 () Int)
(declare-fun x2572 () Int)
(declare-fun x3187 () Bool)
(declare-fun x2046 () Int)
(declare-fun x4457 () Int)
(declare-fun x1189 () Bool)
(declare-fun x4538 () Int)
(declare-fun x3450 () Int)
(declare-fun x3804 () Int)
(declare-fun x4401 () Int)
(declare-fun x4472 () Int)
(declare-fun x3625 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x3734 () Int)
(declare-fun x2245 () Int)
(declare-fun x1254 () Int)
(declare-fun x2560 () Int)
(declare-fun x138 () Int)
(declare-fun x999 () Int)
(declare-fun x3742 () Bool)
(declare-fun x2622 () Int)
(declare-fun x712 () Int)
(declare-fun x2400 () Bool)
(declare-fun x168 () Int)
(declare-fun x1008 () Bool)
(declare-fun x3641 () Int)
(declare-fun x531 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x839 () Int)
(declare-fun x1264 () Int)
(declare-fun x2280 () Int)
(declare-fun x4078 () Int)
(declare-fun x413 () Int)
(declare-fun x3838 () Int)
(declare-fun x2461 () Int)
(declare-fun x1388 () Bool)
(declare-fun x2551 () Int)
(declare-fun x2287 () Int)
(declare-fun x236 () Bool)
(declare-fun x228 () Bool)
(declare-fun x4474 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x379 () Int)
(declare-fun x2419 () Bool)
(declare-fun x1090 () Int)
(declare-fun x4175 () Bool)
(declare-fun x336 () Int)
(declare-fun x2127 () Bool)
(declare-fun x438 () Int)
(declare-fun x3223 () Int)
(declare-fun x3268 () Int)
(declare-fun x3486 () Bool)
(declare-fun x774 () Int)
(declare-fun x2096 () Bool)
(declare-fun x624 () Int)
(declare-fun x3445 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x4096 () Int)
(declare-fun x4227 () Int)
(declare-fun x3028 () Bool)
(declare-fun x148 () Int)
(declare-fun x569 () Int)
(declare-fun x585 () Int)
(declare-fun x4204 () Int)
(declare-fun x4057 () Int)
(declare-fun x2795 () Bool)
(declare-fun x3762 () Int)
(declare-fun x1129 (Int) Int)
(declare-fun x1825 () Bool)
(declare-fun x3427 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x1348 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1557 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x3436 () Int)
(declare-fun x3219 () Bool)
(declare-fun x396 () Int)
(declare-fun x3847 () Bool)
(declare-fun x465 () Int)
(declare-fun x1763 () Bool)
(declare-fun x45 () Int)
(declare-fun x3763 () Int)
(declare-fun x2389 () Int)
(declare-fun x2296 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x3775 () Bool)
(declare-fun x1944 () Int)
(declare-fun x2172 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1790 () Int)
(declare-fun x331 () Int)
(declare-fun x400 () Bool)
(declare-fun x491 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x495 () Int)
(declare-fun x2079 () Int)
(declare-fun x4259 () Bool)
(declare-fun x11 () Bool)
(declare-fun x490 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x1874 () Int)
(declare-fun x3878 () Bool)
(declare-fun x603 () Int)
(declare-fun x3638 () Bool)
(declare-fun x2499 () Int)
(declare-fun x320 () Int)
(declare-fun x2842 () Bool)
(declare-fun x3794 () Int)
(declare-fun x1395 () Bool)
(declare-fun x3980 () Int)
(declare-fun x1293 () Int)
(declare-fun x3547 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x4062 (Int) Int)
(declare-fun x840 () Int)
(declare-fun x486 () Bool)
(declare-fun x3602 () Bool)
(declare-fun x3183 () Bool)
(declare-fun x723 () Int)
(declare-fun x2507 () Int)
(declare-fun x3812 () Int)
(declare-fun x2654 () Int)
(declare-fun x4380 () Int)
(declare-fun x767 () Int)
(declare-fun x1585 () Int)
(declare-fun x3879 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1831 () Int)
(declare-fun x3494 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x780 () Int)
(declare-fun x3155 () Int)
(declare-fun x1885 () Int)
(declare-fun x1149 () Int)
(declare-fun x965 () Int)
(declare-fun x4163 () Int)
(declare-fun x1044 () Int)
(declare-fun x3876 () Int)
(declare-fun x2173 () Int)
(declare-fun x1312 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x3142 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x3601 () Int)
(declare-fun x3473 () Bool)
(declare-fun x4040 () Int)
(declare-fun x341 () Int)
(declare-fun x858 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x47 () Int)
(declare-fun x157 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x199 () Int)
(declare-fun x2131 (Int) Int)
(declare-fun x3272 () Int)
(declare-fun x3649 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1047 () Bool)
(declare-fun x2244 () Int)
(declare-fun x1156 () Int)
(declare-fun x2208 () Int)
(declare-fun x3833 () Bool)
(declare-fun x903 () Bool)
(declare-fun x701 () Bool)
(declare-fun x3168 () Int)
(declare-fun x2953 () Bool)
(declare-fun x1447 () Int)
(declare-fun x1772 () Int)
(declare-fun x945 () Bool)
(declare-fun x2373 () Int)
(declare-fun x1499 () Int)
(declare-fun x2139 () Bool)
(declare-fun x4504 () Bool)
(declare-fun x3096 (Int Int) Int)
(declare-fun x627 () Int)
(declare-fun x4092 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1914 () Int)
(declare-fun x2215 () Int)
(declare-fun x1743 () Int)
(declare-fun x2330 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1665 () Int)
(declare-fun x1647 () Int)
(declare-fun x2513 () Bool)
(declare-fun x136 () Int)
(declare-fun x4391 (Int) Int)
(declare-fun x1422 () Bool)
(declare-fun x390 () Int)
(declare-fun x3694 () Int)
(declare-fun x1793 () Int)
(declare-fun x3544 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x2271 () Int)
(declare-fun x3331 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1613 () Int)
(declare-fun x2649 () Bool)
(declare-fun x525 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x266 () Bool)
(declare-fun x2336 () Int)
(declare-fun x3075 () Int)
(declare-fun x3443 () Bool)
(declare-fun x28 () Bool)
(declare-fun x126 () Int)
(declare-fun x2856 () Int)
(declare-fun x4304 () Int)
(declare-fun x1428 () Bool)
(declare-fun x4406 () Int)
(declare-fun x3032 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x1319 () Int)
(declare-fun x344 () Bool)
(declare-fun x621 () Bool)
(declare-fun x4458 () Int)
(declare-fun x3400 () Int)
(declare-fun x425 () Bool)
(declare-fun x2125 () Int)
(declare-fun x3854 () Bool)
(declare-fun x3520 () Int)
(declare-fun x2468 () Int)
(declare-fun x835 () Int)
(declare-fun x1873 () Bool)
(declare-fun x178 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x3715 () Int)
(declare-fun x3745 () Int)
(declare-fun x3035 () Int)
(declare-fun x2025 () Int)
(declare-fun x705 () Int)
(declare-fun x1703 () Int)
(declare-fun x2260 () Bool)
(declare-fun x3628 () Bool)
(declare-fun x4197 () Int)
(declare-fun x1037 () Bool)
(declare-fun x4430 () Int)
(declare-fun x1476 () Bool)
(declare-fun x4517 () Int)
(declare-fun x3052 () Int)
(declare-fun x1222 () Int)
(declare-fun x2525 () Int)
(declare-fun x3944 () Int)
(declare-fun x4494 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x115 () Bool)
(declare-fun x1714 () Int)
(declare-fun x3744 (Int) Int)
(declare-fun x1119 () Int)
(declare-fun x786 () Bool)
(declare-fun x2820 () Int)
(declare-fun x282 () Int)
(declare-fun x1524 () Int)
(declare-fun x2994 () Bool)
(declare-fun x261 () Int)
(declare-fun x10 () Bool)
(declare-fun x936 () Int)
(declare-fun x3746 () Int)
(declare-fun x283 () Int)
(declare-fun x350 () Int)
(declare-fun x4034 () Int)
(declare-fun x1938 () Bool)
(declare-fun x2563 () Int)
(declare-fun x3414 () Int)
(declare-fun x661 () Bool)
(declare-fun x565 () Int)
(declare-fun x1727 () Bool)
(declare-fun x62 () Bool)
(declare-fun x1784 () Int)
(declare-fun x448 () Int)
(declare-fun x4492 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x3749 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x4345 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x1627 () Int)
(declare-fun x2089 () Int)
(declare-fun x2102 () Int)
(declare-fun x2002 () Int)
(declare-fun x759 () Int)
(declare-fun x1662 () Int)
(declare-fun x3380 () Int)
(declare-fun x3292 () Int)
(declare-fun x3517 () Bool)
(declare-fun x4518 () Int)
(declare-fun x2644 () Bool)
(declare-fun x792 () Int)
(declare-fun x4119 () Int)
(declare-fun x554 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x1664 () Int)
(declare-fun x2059 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x1923 () Int)
(declare-fun x366 () Int)
(declare-fun x3995 () Int)
(declare-fun x417 () Int)
(declare-fun x3850 () Int)
(declare-fun x1649 () Bool)
(declare-fun x3086 () Int)
(declare-fun x4328 () Int)
(declare-fun x1608 () Int)
(declare-fun x4397 () Int)
(declare-fun x2845 () Bool)
(declare-fun x909 () Bool)
(declare-fun x906 () Int)
(declare-fun x2297 () Int)
(declare-fun x1209 () Bool)
(declare-fun x455 () Bool)
(declare-fun x3851 () Int)
(declare-fun x3466 () Bool)
(declare-fun x3999 () Int)
(declare-fun x1967 () Int)
(declare-fun x2690 () Int)
(declare-fun x681 () Int)
(declare-fun x3766 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x3065 () Int)
(declare-fun x1015 () Bool)
(declare-fun x4413 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x351 () Int)
(declare-fun x920 () Bool)
(declare-fun x3316 () Int)
(declare-fun x3038 () Bool)
(declare-fun x4028 () Int)
(declare-fun x1098 () Bool)
(declare-fun x668 () Bool)
(declare-fun x1330 () Int)
(declare-fun x1753 () Int)
(declare-fun x1050 () Int)
(declare-fun x779 () Bool)
(declare-fun x556 () Bool)
(declare-fun x1888 () Int)
(declare-fun x2773 () Int)
(declare-fun x50 () Bool)
(declare-fun x1985 () Int)
(declare-fun x1350 () Int)
(declare-fun x3140 () Bool)
(declare-fun x3375 () Int)
(declare-fun x4270 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x4468 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x3099 () Int)
(declare-fun x295 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1 () Int)
(declare-fun x2168 () Bool)
(declare-fun x2584 () Int)
(declare-fun x3681 () Int)
(declare-fun x488 () Bool)
(declare-fun x1984 () Int)
(declare-fun x202 () Bool)
(declare-fun x319 () Int)
(declare-fun x481 () Bool)
(declare-fun x2687 () Int)
(declare-fun x12 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x2617 () Int)
(declare-fun x3818 () Int)
(declare-fun x1172 () Int)
(declare-fun x2171 () Int)
(declare-fun x1448 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x651 () Int)
(declare-fun x4387 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x4037 () Int)
(declare-fun x994 () Bool)
(declare-fun x3106 () Int)
(declare-fun x4398 (Int) Int)
(declare-fun x139 () Bool)
(declare-fun x3647 () Int)
(declare-fun x1603 () Bool)
(declare-fun x3495 () Int)
(declare-fun x761 () Bool)
(declare-fun x2975 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x2979 () Int)
(declare-fun x1697 () Bool)
(declare-fun x4297 () Int)
(declare-fun x1501 () Int)
(declare-fun x250 () Int)
(declare-fun x4515 () Int)
(declare-fun x1730 () Int)
(declare-fun x2133 () Bool)
(declare-fun x861 () Bool)
(declare-fun x268 () Int)
(declare-fun x59 () Bool)
(declare-fun x456 () Int)
(declare-fun x2392 () Int)
(declare-fun x2508 () Int)
(declare-fun x2722 () Bool)
(declare-fun x3478 () Int)
(declare-fun x1020 () Int)
(declare-fun x2377 () Int)
(declare-fun x4302 () Int)
(declare-fun x3841 () Int)
(declare-fun x654 () Int)
(declare-fun x2276 () Bool)
(declare-fun x579 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x644 () Int)
(declare-fun x1525 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x4193 () Int)
(declare-fun x3569 () Int)
(declare-fun x2035 () Int)
(declare-fun x3053 () Bool)
(declare-fun x211 () Int)
(declare-fun x3830 () Int)
(declare-fun x2478 () Int)
(declare-fun x1412 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x4143 () Int)
(declare-fun x117 () Int)
(declare-fun x3739 () Int)
(declare-fun x2831 () Bool)
(declare-fun x997 () Bool)
(declare-fun x854 () Bool)
(declare-fun x2378 () Int)
(declare-fun x1957 () Int)
(declare-fun x114 () Int)
(declare-fun x2504 () Bool)
(declare-fun x2017 () Int)
(declare-fun x2365 () Int)
(declare-fun x3403 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x3476 (Int) Int)
(declare-fun x2922 () Bool)
(declare-fun x688 () Bool)
(declare-fun x4378 () Int)
(declare-fun x553 () Bool)
(declare-fun x4329 () Int)
(declare-fun x2194 () Bool)
(declare-fun x4069 () Int)
(declare-fun x600 () Bool)
(declare-fun x238 () Int)
(declare-fun x962 () Int)
(declare-fun x2291 () Int)
(declare-fun x3664 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x63 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1630 () Int)
(declare-fun x4324 () Bool)
(declare-fun x3123 () Int)
(declare-fun x2315 () Int)
(declare-fun x747 () Int)
(declare-fun x330 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1648 () Int)
(declare-fun x2156 () Int)
(declare-fun x1386 () Int)
(declare-fun x339 () Int)
(declare-fun x3388 () Int)
(declare-fun x3002 () Int)
(declare-fun x626 () Bool)
(declare-fun x496 () Int)
(declare-fun x1145 () Int)
(declare-fun x848 () Int)
(declare-fun x193 () Int)
(declare-fun x2918 () Int)
(declare-fun x2090 () Int)
(declare-fun x2682 () Bool)
(declare-fun x2230 () Int)
(declare-fun x960 () Int)
(declare-fun x1403 () Bool)
(declare-fun x684 () Bool)
(declare-fun x795 () Int)
(declare-fun x3294 () Int)
(declare-fun x1663 () Int)
(declare-fun x4412 () Bool)
(declare-fun x3334 () Int)
(declare-fun x981 () Int)
(declare-fun x2804 () Bool)
(declare-fun x3435 () Bool)
(declare-fun x369 () Int)
(declare-fun x2867 () Int)
(declare-fun x3886 () Int)
(declare-fun x2534 (Int) Int)
(declare-fun x1562 () Int)
(declare-fun x3901 () Int)
(declare-fun x196 () Bool)
(declare-fun x4026 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x3691 () Int)
(declare-fun x222 () Bool)
(declare-fun x4509 () Int)
(declare-fun x933 () Int)
(declare-fun x3816 () Int)
(declare-fun x2662 () Int)
(declare-fun x2733 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x3324 () Int)
(declare-fun x2967 () Int)
(declare-fun x322 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2839 () Int)
(declare-fun x1767 () Bool)
(declare-fun x3418 () Int)
(declare-fun x2632 () Bool)
(declare-fun x3398 () Int)
(declare-fun x2812 () Int)
(declare-fun x1143 () Int)
(declare-fun x3349 () Bool)
(declare-fun x4055 () Int)
(declare-fun x4521 () Bool)
(declare-fun x2116 (Int) Int)
(declare-fun x3666 () Int)
(declare-fun x3608 () Int)
(declare-fun x3782 () Int)
(declare-fun x3530 () Int)
(declare-fun x3690 () Int)
(declare-fun x594 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x2048 () Int)
(declare-fun x2145 () Int)
(declare-fun x2829 () Int)
(declare-fun x1939 () Int)
(declare-fun x430 () Bool)
(declare-fun x872 () Int)
(declare-fun x2491 () Bool)
(declare-fun x830 () Int)
(declare-fun x3535 () Int)
(declare-fun x335 () Int)
(declare-fun x3603 () Bool)
(declare-fun x1306 () Int)
(declare-fun x4260 () Int)
(declare-fun x3295 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x2006 () Int)
(declare-fun x3217 () Bool)
(declare-fun x2444 () Int)
(declare-fun x4542 () Int)
(declare-fun x562 () Int)
(declare-fun x2779 () Int)
(declare-fun x1531 (Int) Int)
(declare-fun x4311 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1560 () Int)
(declare-fun x4551 () Int)
(declare-fun x2032 () Int)
(declare-fun x2045 () Int)
(declare-fun x2985 () Bool)
(declare-fun x3784 () Int)
(declare-fun x201 () Int)
(declare-fun x3765 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x1116 () Int)
(declare-fun x4134 () Int)
(declare-fun x2235 () Int)
(declare-fun x3174 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x52 () Bool)
(declare-fun x832 () Int)
(declare-fun x3623 () Bool)
(declare-fun x3289 () Int)
(declare-fun x509 () Int)
(declare-fun x697 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x1469 () Int)
(declare-fun x1148 () Bool)
(declare-fun x3617 () Int)
(declare-fun x3823 () Int)
(declare-fun x899 () Int)
(declare-fun x232 () Bool)
(declare-fun x2823 () Int)
(declare-fun x1485 () Int)
(declare-fun x3458 () Bool)
(declare-fun x155 () Int)
(declare-fun x980 () Int)
(declare-fun x2837 () Bool)
(declare-fun x4190 () Bool)
(declare-fun x3978 () Int)
(declare-fun x590 () Int)
(declare-fun x770 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x2136 () Int)
(declare-fun x3548 () Int)
(declare-fun x1859 () Bool)
(declare-fun x484 () Int)
(declare-fun x3720 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x3870 () Int)
(declare-fun x1804 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x3578 () Int)
(declare-fun x2695 () Int)
(declare-fun x636 () Int)
(declare-fun x886 () Int)
(declare-fun x1411 () Int)
(declare-fun x1342 () Int)
(declare-fun x307 () Bool)
(declare-fun x1856 () Int)
(declare-fun x2159 () Bool)
(declare-fun x2853 () Int)
(declare-fun x3243 () Bool)
(declare-fun x566 () Int)
(declare-fun x925 () Bool)
(declare-fun x3474 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x2328 () Int)
(declare-fun x4466 () Bool)
(declare-fun x3769 () Int)
(declare-fun x2121 () Int)
(declare-fun x3819 () Bool)
(declare-fun x1683 () Int)
(declare-fun x2980 () Int)
(declare-fun x3738 () Bool)
(declare-fun x4138 () Int)
(declare-fun x3151 () Int)
(declare-fun x3581 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x673 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1206 () Bool)
(declare-fun x714 () Int)
(declare-fun x1454 () Int)
(declare-fun x2898 () Bool)
(declare-fun x3889 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x1488 () Int)
(declare-fun x3330 () Int)
(declare-fun x88 () Bool)
(declare-fun x3997 () Bool)
(declare-fun x1515 () Int)
(declare-fun x3193 () Int)
(declare-fun x500 () Int)
(declare-fun x2186 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x1315 () Int)
(declare-fun x3853 () Bool)
(declare-fun x736 () Int)
(declare-fun x3611 () Int)
(declare-fun x3525 () Int)
(declare-fun x329 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x1093 () Int)
(declare-fun x526 (Int) Int)
(declare-fun x645 () Int)
(declare-fun x3609 () Int)
(declare-fun x4021 () Bool)
(declare-fun x742 () Int)
(declare-fun x3107 () Int)
(declare-fun x955 () Int)
(declare-fun x159 () Int)
(declare-fun x1127 () Int)
(declare-fun x1511 () Int)
(declare-fun x4287 () Int)
(declare-fun x4376 () Bool)
(declare-fun x2195 () Int)
(declare-fun x4252 () Int)
(declare-fun x1526 () Bool)
(declare-fun x859 () Bool)
(declare-fun x2272 () Int)
(declare-fun x2424 () Bool)
(declare-fun x184 () Int)
(declare-fun x3861 () Int)
(declare-fun x4084 () Int)
(declare-fun x2636 () Bool)
(declare-fun x2473 () Int)
(declare-fun x2781 () Int)
(declare-fun x2871 () Int)
(declare-fun x1564 () Int)
(declare-fun x4212 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x389 () Int)
(declare-fun x1965 () Int)
(declare-fun x1328 () Int)
(declare-fun x1031 (Int) Int)
(declare-fun x2545 () Bool)
(declare-fun x631 () Int)
(declare-fun x1021 () Int)
(declare-fun x1389 () Int)
(declare-fun x817 (Int) Int)
(declare-fun x575 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x4130 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x3914 () Int)
(declare-fun x2485 () Int)
(declare-fun x2203 () Bool)
(declare-fun x2304 () Int)
(declare-fun x1032 () Bool)
(declare-fun x3365 () Int)
(declare-fun x3291 () Bool)
(declare-fun x152 () Bool)
(declare-fun x4023 () Bool)
(declare-fun x2467 () Int)
(declare-fun x3891 () Int)
(declare-fun x819 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x794 () Int)
(declare-fun x3014 () Int)
(declare-fun x4352 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x2667 () Int)
(declare-fun x2562 () Bool)
(declare-fun x3591 () Int)
(declare-fun x3511 (Int) Int)
(declare-fun x1097 () Bool)
(declare-fun x274 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x2738 () Int)
(declare-fun x515 () Int)
(declare-fun x2313 () Int)
(declare-fun x313 () Bool)
(declare-fun x3539 () Int)
(declare-fun x3161 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x3426 (Int) Int)
(declare-fun x3046 () Bool)
(declare-fun x1886 () Int)
(declare-fun x2824 () Bool)
(declare-fun x246 () Int)
(declare-fun x4507 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x898 () Bool)
(declare-fun x2758 () Int)
(declare-fun x793 () Bool)
(declare-fun x2454 (Int) Int)
(declare-fun x4184 () Bool)
(declare-fun x2988 () Int)
(declare-fun x1537 () Int)
(declare-fun x1817 (Int) Int)
(declare-fun x2075 () Int)
(declare-fun x1167 () Int)
(declare-fun x82 () Int)
(declare-fun x3245 () Int)
(declare-fun x353 (Int) Int)
(declare-fun x510 () Int)
(declare-fun x4365 () Int)
(declare-fun x2310 () Bool)
(declare-fun x1438 () Int)
(declare-fun x314 () Bool)
(declare-fun x2227 () Int)
(declare-fun x1258 () Bool)
(declare-fun x3379 () Int)
(declare-fun x3129 () Int)
(declare-fun x3777 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1916 () Int)
(declare-fun x4556 () Int)
(declare-fun x4142 () Bool)
(declare-fun x3790 () Int)
(declare-fun x726 () Int)
(declare-fun x2852 () Bool)
(declare-fun x2648 () Bool)
(declare-fun x3333 () Int)
(declare-fun x97 () Int)
(declare-fun x811 () Int)
(declare-fun x2039 () Int)
(declare-fun x2137 () Bool)
(declare-fun x2740 () Int)
(declare-fun x409 () Bool)
(declare-fun x623 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x2325 () Int)
(declare-fun x1620 () Int)
(declare-fun x35 () Bool)
(declare-fun x25 () Bool)
(declare-fun x3369 () Int)
(declare-fun x2997 () Bool)
(declare-fun x2319 () Int)
(declare-fun x3917 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x3224 () Int)
(declare-fun x4174 () Bool)
(declare-fun x447 () Int)
(declare-fun x2388 () Bool)
(declare-fun x243 () Bool)
(declare-fun x345 () Int)
(declare-fun x1609 () Bool)
(declare-fun x4454 () Int)
(declare-fun x1543 () Int)
(declare-fun x2657 () Int)
(declare-fun x1233 () Bool)
(declare-fun x2519 () Int)
(declare-fun x901 () Int)
(declare-fun x2088 () Int)
(declare-fun x1371 () Int)
(declare-fun x4218 () Int)
(declare-fun x1927 () Bool)
(declare-fun x3057 () Int)
(declare-fun x2386 () Int)
(declare-fun x3171 () Bool)
(declare-fun x3968 () Int)
(declare-fun x2222 () Int)
(declare-fun x2060 () Bool)
(declare-fun x4446 () Int)
(declare-fun x943 () Int)
(declare-fun x3667 () Int)
(declare-fun x3549 () Bool)
(declare-fun x2868 () Int)
(declare-fun x1950 () Bool)
(declare-fun x387 () Int)
(declare-fun x2197 () Int)
(declare-fun x952 (Int) Int)
(declare-fun x1678 () Int)
(declare-fun x992 () Bool)
(declare-fun x596 () Int)
(declare-fun x3404 () Bool)
(declare-fun x309 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x3298 () Int)
(declare-fun x671 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x446 () Int)
(declare-fun x3059 () Bool)
(declare-fun x4112 () Int)
(declare-fun x991 () Bool)
(declare-fun x1236 () Int)
(declare-fun x161 () Int)
(declare-fun x4104 () Bool)
(declare-fun x3598 () Int)
(declare-fun x1954 () Int)
(declare-fun x1631 () Int)
(declare-fun x1829 () Int)
(declare-fun x3786 () Int)
(declare-fun x4251 () Int)
(declare-fun x1125 () Bool)
(declare-fun x2040 () Int)
(declare-fun x391 () Int)
(declare-fun x1308 () Int)
(declare-fun x3993 () Bool)
(declare-fun x489 () Int)
(declare-fun x4276 () Int)
(declare-fun x4296 () Int)
(declare-fun x739 () Bool)
(declare-fun x783 () Int)
(declare-fun x80 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x3962 () Int)
(declare-fun x2719 () Bool)
(declare-fun x4180 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x493 () Int)
(declare-fun x3658 () Bool)
(declare-fun x801 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x4202 () Int)
(declare-fun x1219 () Bool)
(declare-fun x2624 () Int)
(declare-fun x1250 () Bool)
(declare-fun x3249 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1408 () Int)
(declare-fun x2300 () Bool)
(declare-fun x2055 () Int)
(declare-fun x3001 () Int)
(declare-fun x4133 () Int)
(declare-fun x110 () Int)
(declare-fun x611 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x1205 (Int) Int)
(declare-fun x2928 () Int)
(declare-fun x2809 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x2269 () Bool)
(declare-fun x3779 () Int)
(declare-fun x2895 () Int)
(declare-fun x3590 () Int)
(declare-fun x1565 () Int)
(declare-fun x1028 () Bool)
(declare-fun x2728 () Bool)
(declare-fun x3160 () Int)
(declare-fun x722 () Int)
(declare-fun x2771 () Int)
(declare-fun x1951 () Bool)
(declare-fun x230 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x3194 () Int)
(declare-fun x3040 () Int)
(declare-fun x2253 () Int)
(declare-fun x3556 () Bool)
(declare-fun x2510 (Int) Int)
(declare-fun x1977 () Int)
(declare-fun x2128 () Bool)
(declare-fun x2509 () Int)
(declare-fun x852 () Bool)
(declare-fun x2150 () Int)
(declare-fun x1668 () Int)
(declare-fun x4022 () Bool)
(declare-fun x2015 () Int)
(declare-fun x1706 () Bool)
(declare-fun x1378 () Int)
(declare-fun x4489 () Int)
(declare-fun x2210 () Bool)
(declare-fun x813 () Bool)
(declare-fun x4369 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x4080 () Int)
(declare-fun x1418 () Int)
(declare-fun x3824 () Int)
(declare-fun x4060 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x689 () Int)
(declare-fun x1117 () Int)
(declare-fun x8 () Int)
(declare-fun x4424 () Int)
(declare-fun x948 () Int)
(declare-fun x3005 () Int)
(declare-fun x120 () Int)
(declare-fun x1284 () Bool)
(declare-fun x229 () Int)
(declare-fun x216 () Int)
(declare-fun x3139 () Int)
(declare-fun x225 () Bool)
(declare-fun x3464 () Int)
(declare-fun x4005 () Int)
(declare-fun x1392 () Bool)
(declare-fun x916 () Int)
(declare-fun x2960 () Int)
(declare-fun x2314 () Int)
(declare-fun x2752 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x4333 () Int)
(declare-fun x3884 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x519 () Bool)
(declare-fun x249 () Int)
(declare-fun x995 () Int)
(declare-fun x4217 () Bool)
(declare-fun x935 () Bool)
(declare-fun x3216 () Int)
(declare-fun x1465 (Int) Int)
(declare-fun x2952 () Int)
(declare-fun x1818 () Int)
(declare-fun x4405 () Int)
(declare-fun x836 () Int)
(declare-fun x2451 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x4370 () Int)
(declare-fun x2445 () Int)
(declare-fun x347 () Bool)
(declare-fun x4171 () Int)
(declare-fun x2033 () Int)
(declare-fun x3679 () Int)
(declare-fun x1596 () Int)
(declare-fun x2495 () Int)
(declare-fun x2784 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x49 () Int)
(declare-fun x4531 () Int)
(declare-fun x3887 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x3796 () Int)
(declare-fun x4056 () Bool)
(declare-fun x2875 () Int)
(declare-fun x2361 () Bool)
(declare-fun x974 () Int)
(declare-fun x407 () Int)
(declare-fun x3045 () Bool)
(declare-fun x2943 () Int)
(declare-fun x2989 () Int)
(declare-fun x1218 () Bool)
(declare-fun x3354 () Bool)
(declare-fun x191 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x1171 () Int)
(declare-fun x3800 () Int)
(declare-fun x457 () Int)
(declare-fun x1675 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x2086 () Int)
(declare-fun x2355 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1584 () Int)
(declare-fun x3308 () Int)
(declare-fun x2741 () Int)
(declare-fun x4355 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x2158 () Int)
(declare-fun x4331 () Int)
(declare-fun x2571 () Int)
(declare-fun x1700 () Bool)
(declare-fun x1153 () Int)
(declare-fun x3381 () Bool)
(declare-fun x478 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1806 () Int)
(declare-fun x1527 () Int)
(declare-fun x4300 () Int)
(declare-fun x2879 () Int)
(declare-fun x3199 () Int)
(declare-fun x908 () Int)
(declare-fun x3752 () Int)
(declare-fun x1390 () Int)
(declare-fun x1636 () Int)
(declare-fun x362 () Int)
(declare-fun x888 () Int)
(declare-fun x2404 () Int)
(declare-fun x1998 () Int)
(declare-fun x2014 () Int)
(declare-fun x4053 () Int)
(declare-fun x3121 (Int Int Int Int Int) Int)
(declare-fun x1111 () Int)
(declare-fun x4213 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x1997 () Int)
(declare-fun x2034 () Int)
(declare-fun x2283 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x4506 () Bool)
(declare-fun x612 () Int)
(declare-fun x4339 () Int)
(declare-fun x4051 () Bool)
(declare-fun x3036 () Int)
(declare-fun x1344 () Int)
(declare-fun x2003 () Bool)
(declare-fun x256 () Int)
(declare-fun x1190 (Int) Int)
(declare-fun x4199 () Int)
(declare-fun x2295 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x2663 () Int)
(declare-fun x1220 () Int)
(declare-fun x904 () Int)
(declare-fun x3250 () Int)
(declare-fun x2595 () Bool)
(declare-fun x3567 () Bool)
(declare-fun x352 () Bool)
(declare-fun x2441 () Int)
(declare-fun x751 () Int)
(declare-fun x3965 () Bool)
(declare-fun x3026 () Int)
(declare-fun x2421 () Bool)
(declare-fun x3252 () Int)
(declare-fun x2554 () Bool)
(declare-fun x3932 () Int)
(declare-fun x3652 () Int)
(declare-fun x4083 () Int)
(declare-fun x2990 () Int)
(declare-fun x1712 () Int)
(declare-fun x3460 () Int)
(declare-fun x1857 () Int)
(declare-fun x4289 () Bool)
(declare-fun x3791 () Int)
(declare-fun x3042 () Bool)
(declare-fun x2155 () Int)
(declare-fun x574 () Int)
(declare-fun x306 () Bool)
(declare-fun x4024 () Int)
(declare-fun x2851 () Bool)
(declare-fun x3227 () Int)
(declare-fun x4012 () Int)
(declare-fun x102 () Bool)
(declare-fun x3587 () Int)
(declare-fun x1820 () Bool)
(declare-fun x4360 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x2800 () Int)
(declare-fun x3181 () Bool)
(declare-fun x4254 () Int)
(declare-fun x3931 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x38 () Bool)
(declare-fun x179 (Int) Int)
(declare-fun x4364 () Bool)
(declare-fun x2872 () Int)
(declare-fun x172 () Int)
(declare-fun x1216 () Bool)
(declare-fun x4310 () Int)
(declare-fun x3751 () Bool)
(declare-fun x982 () Int)
(declare-fun x2381 () Int)
(declare-fun x2010 () Int)
(declare-fun x2643 () Bool)
(declare-fun x667 () Bool)
(declare-fun x4106 () Int)
(declare-fun x3922 (Int) Int)
(declare-fun x3594 () Int)
(declare-fun x812 () Int)
(declare-fun x3211 () Int)
(declare-fun x3503 () Bool)
(declare-fun x185 () Int)
(declare-fun x3888 () Int)
(declare-fun x3596 () Int)
(declare-fun x2904 () Int)
(declare-fun x1616 () Int)
(declare-fun x135 () Int)
(declare-fun x3778 () Int)
(declare-fun x1197 () Int)
(declare-fun x2376 () Bool)
(declare-fun x188 () Int)
(declare-fun x3606 () Int)
(declare-fun x766 () Int)
(declare-fun x1461 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x426 () Int)
(declare-fun x3748 () Int)
(declare-fun x3287 () Bool)
(declare-fun x4100 () Int)
(declare-fun x1191 () Int)
(declare-fun x3646 () Int)
(declare-fun x4124 () Int)
(declare-fun x513 () Int)
(declare-fun x454 () Bool)
(declare-fun x3085 () Int)
(declare-fun x1039 () Bool)
(declare-fun x4377 () Int)
(declare-fun x3146 () Int)
(declare-fun x719 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1333 () Int)
(declare-fun x2236 () Bool)
(declare-fun x1286 () Int)
(declare-fun x2529 () Int)
(declare-fun x728 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x1681 () Int)
(declare-fun x381 () Bool)
(declare-fun x3286 () Int)
(declare-fun x3212 () Bool)
(declare-fun x825 () Int)
(declare-fun x4545 () Bool)
(declare-fun x3654 () Int)
(declare-fun x4182 (Int) Int)
(declare-fun x4404 () Int)
(declare-fun x2078 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x4488 () Int)
(declare-fun x452 () Bool)
(declare-fun x171 () Bool)
(declare-fun x3276 () Int)
(declare-fun x1265 () Int)
(declare-fun x1441 () Int)
(declare-fun x655 () Int)
(declare-fun x3402 () Int)
(declare-fun x1844 () Int)
(declare-fun x3383 () Bool)
(declare-fun x2713 () Int)
(declare-fun x529 () Int)
(declare-fun x4423 () Int)
(declare-fun x4307 () Bool)
(declare-fun x3371 () Bool)
(declare-fun x685 () Int)
(declare-fun x1544 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x971 () Bool)
(declare-fun x3881 () Int)
(declare-fun x1920 () Bool)
(declare-fun x1563 () Int)
(declare-fun x2536 () Int)
(declare-fun x820 () Int)
(declare-fun x1762 () Bool)
(declare-fun x1637 () Int)
(declare-fun x551 () Int)
(declare-fun x2209 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x527 () Int)
(declare-fun x3755 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x4389 () Int)
(declare-fun x158 () Int)
(declare-fun x1450 () Bool)
(declare-fun x2769 () Int)
(declare-fun x874 () Int)
(declare-fun x2254 () Int)
(declare-fun x640 () Bool)
(declare-fun x2179 () Int)
(declare-fun x520 (Int) Int)
(declare-fun x4274 () Bool)
(declare-fun x3169 () Int)
(declare-fun x1260 () Int)
(declare-fun x53 () Int)
(declare-fun x2177 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1241 () Int)
(declare-fun x4075 () Int)
(declare-fun x2538 () Int)
(declare-fun x3877 () Int)
(declare-fun x3105 () Int)
(declare-fun x2631 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1593 () Int)
(declare-fun x674 () Int)
(declare-fun x870 () Int)
(declare-fun x1413 () Int)
(declare-fun x1602 () Bool)
(declare-fun x707 () Bool)
(declare-fun x3866 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1080 () Int)
(declare-fun x3425 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x3665 () Int)
(declare-fun x439 () Int)
(declare-fun x998 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1836 () Int)
(declare-fun x3890 () Int)
(declare-fun x1416 () Bool)
(declare-fun x4288 () Int)
(declare-fun x1709 () Int)
(declare-fun x4384 () Bool)
(declare-fun x4127 () Int)
(declare-fun x1203 () Int)
(declare-fun x90 () Bool)
(declare-fun x3996 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x838 () Int)
(declare-fun x3593 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x365 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1083 () Bool)
(declare-fun x1919 () Int)
(declare-fun x2935 () Int)
(declare-fun x3336 () Int)
(declare-fun x3868 () Bool)
(declare-fun x746 () Bool)
(declare-fun x2729 () Int)
(declare-fun x1361 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x169 () Int)
(declare-fun x940 () Int)
(declare-fun x2076 () Int)
(declare-fun x2225 () Int)
(declare-fun x1496 () Int)
(declare-fun x2924 () Int)
(declare-fun x660 () Int)
(declare-fun x883 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x3551 () Int)
(declare-fun x927 () Int)
(declare-fun x1904 () Int)
(declare-fun x393 () Bool)
(declare-fun x4330 () Int)
(declare-fun x618 () Int)
(declare-fun x2298 () Bool)
(declare-fun x3006 () Int)
(declare-fun x4533 () Bool)
(declare-fun x4147 () Int)
(declare-fun x3164 () Bool)
(declare-fun x706 (Int) Int)
(declare-fun x1322 () Int)
(declare-fun x3918 () Bool)
(declare-fun x2012 () Int)
(declare-fun x395 () Int)
(declare-fun x3880 () Int)
(declare-fun x405 () Int)
(declare-fun x2402 () Bool)
(declare-fun x4246 () Int)
(declare-fun x182 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x2537 (Int) Int)
(declare-fun x2101 () Bool)
(declare-fun x270 () Int)
(declare-fun x875 () Bool)
(declare-fun x475 () Int)
(declare-fun x1201 () Int)
(declare-fun x3806 () Bool)
(declare-fun x1718 () Int)
(declare-fun x3290 () Bool)
(declare-fun x231 () Bool)
(declare-fun x3719 () Int)
(declare-fun x1955 () Bool)
(declare-fun x2825 () Bool)
(declare-fun x343 () Bool)
(declare-fun x2290 () Int)
(declare-fun x2665 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x3030 () Int)
(declare-fun x818 () Bool)
(declare-fun x262 () Int)
(declare-fun x2019 (Int) Int)
(declare-fun x3048 () Int)
(declare-fun x549 (Int) Int)
(declare-fun x2540 () Int)
(declare-fun x2066 () Int)
(declare-fun x3055 () Int)
(declare-fun x3273 () Int)
(declare-fun x3656 () Int)
(declare-fun x224 () Int)
(declare-fun x99 () Int)
(declare-fun x2427 () Int)
(declare-fun x3346 () Bool)
(declare-fun x2707 () Int)
(declare-fun x3984 () Int)
(declare-fun x4449 () Int)
(declare-fun x1536 () Bool)
(declare-fun x2094 (Int) Int)
(declare-fun x2736 () Bool)
(declare-fun x22 () Int)
(declare-fun x1228 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x3822 () Int)
(declare-fun x1457 () Int)
(declare-fun x1879 () Bool)
(declare-fun x1802 () Int)
(declare-fun x2555 () Bool)
(declare-fun x3867 () Int)
(declare-fun x2140 () Int)
(declare-fun x60 () Bool)
(declare-fun x3267 () Bool)
(declare-fun x2972 () Int)
(declare-fun x4121 () Int)
(declare-fun x242 () Int)
(declare-fun x769 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x4388 () Int)
(declare-fun x680 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1666 () Int)
(declare-fun x2367 () Int)
(declare-fun x227 () Bool)
(declare-fun x308 () Int)
(declare-fun x963 () Int)
(declare-fun x3497 () Int)
(declare-fun x1025 () Bool)
(declare-fun x2192 () Int)
(declare-fun x4258 () Int)
(declare-fun x459 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x479 () Int)
(declare-fun x3468 () Int)
(declare-fun x2828 () Int)
(declare-fun x4354 () Bool)
(declare-fun x1745 () Int)
(declare-fun x2527 () Bool)
(declare-fun x2999 () Int)
(declare-fun x2305 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x3926 () Int)
(declare-fun x1816 () Int)
(declare-fun x2044 () Int)
(declare-fun x3619 () Int)
(declare-fun x731 () Bool)
(declare-fun x2700 () Int)
(declare-fun x1830 () Int)
(declare-fun x850 () Int)
(declare-fun x1430 () Int)
(declare-fun x440 () Bool)
(declare-fun x3669 () Int)
(declare-fun x2811 () Int)
(declare-fun x431 () Bool)
(declare-fun x1210 () Int)
(declare-fun x3662 () Bool)
(declare-fun x592 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1629 () Int)
(declare-fun x1122 () Int)
(declare-fun x2311 () Int)
(declare-fun x915 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x1086 () Int)
(declare-fun x4496 () Int)
(declare-fun x2262 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x2057 () Int)
(declare-fun x2030 () Int)
(declare-fun x2456 () Int)
(declare-fun x3675 () Bool)
(declare-fun x1296 () Int)
(declare-fun x2143 () Int)
(declare-fun x1842 () Int)
(declare-fun x851 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x3809 () Bool)
(declare-fun x3124 () Int)
(declare-fun x1012 () Int)
(declare-fun x181 (Int) Int)
(declare-fun x2458 () Int)
(declare-fun x2696 () Bool)
(declare-fun x4490 () Bool)
(declare-fun x693 () Int)
(declare-fun x3471 () Bool)
(declare-fun x3753 () Bool)
(declare-fun x3579 () Int)
(declare-fun x3789 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x3120 () Bool)
(declare-fun x1669 () Int)
(declare-fun x3301 () Int)
(declare-fun x703 () Int)
(declare-fun x683 () Int)
(declare-fun x2434 () Bool)
(declare-fun x435 () Bool)
(declare-fun x949 () Int)
(declare-fun x1744 (Int) Int)
(declare-fun x3552 () Bool)
(declare-fun x4211 () Bool)
(declare-fun x4014 () Int)
(declare-fun x1823 () Int)
(declare-fun x79 () Int)
(declare-fun x144 () Int)
(declare-fun x3882 () Int)
(declare-fun x1693 () Int)
(declare-fun x3175 () Bool)
(declare-fun x494 () Bool)
(declare-fun x423 () Int)
(declare-fun x2380 () Int)
(declare-fun x311 () Int)
(declare-fun x2789 (Int) Int)
(declare-fun x3420 () Int)
(declare-fun x2857 () Int)
(declare-fun x1863 () Int)
(declare-fun x1656 () Bool)
(declare-fun x3152 (Int) Int)
(declare-fun x2117 () Bool)
(declare-fun x4498 () Int)
(declare-fun x2718 () Bool)
(declare-fun x3112 () Int)
(declare-fun x2815 () Bool)
(declare-fun x19 () Bool)
(declare-fun x682 () Int)
(declare-fun x4485 () Int)
(declare-fun x3271 () Int)
(declare-fun x3258 () Int)
(declare-fun x2797 () Int)
(declare-fun x166 () Bool)
(declare-fun x279 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1853 () Int)
(declare-fun x1814 () Int)
(declare-fun x3513 () Int)
(declare-fun x1672 () Int)
(declare-fun x2120 () Int)
(declare-fun x4216 () Int)
(declare-fun x2541 () Bool)
(declare-fun x104 () Bool)
(declare-fun x4335 () Bool)
(declare-fun x1137 () Int)
(declare-fun x3671 () Bool)
(declare-fun x3967 () Int)
(declare-fun x2891 () Bool)
(declare-fun x760 () Int)
(declare-fun x368 () Int)
(declare-fun x3514 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x634 () Bool)
(declare-fun x4482 () Int)
(declare-fun x147 () Int)
(declare-fun x3843 () Int)
(declare-fun x55 () Bool)
(declare-fun x637 () Bool)
(declare-fun x890 () Int)
(declare-fun x4207 () Bool)
(declare-fun x2115 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x911 () Int)
(declare-fun x2819 () Int)
(declare-fun x617 () Int)
(declare-fun x4035 () Int)
(declare-fun x302 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x2460 () Int)
(declare-fun x3707 () Bool)
(declare-fun x2576 () Int)
(declare-fun x1184 () Bool)
(declare-fun x2041 () Int)
(declare-fun x1822 () Int)
(declare-fun x2490 () Bool)
(declare-fun x1022 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x2955 () Int)
(declare-fun x3903 () Bool)
(declare-fun x3573 () Int)
(declare-fun x1994 () Bool)
(declare-fun x3416 () Int)
(declare-fun x4156 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x1812 () Int)
(declare-fun x4508 () Bool)
(declare-fun x433 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x4338 () Bool)
(declare-fun x263 () Int)
(declare-fun x2081 () Int)
(declare-fun x212 () Int)
(declare-fun x3265 () Int)
(declare-fun x2965 () Bool)
(declare-fun x4375 () Int)
(declare-fun x1946 () Int)
(declare-fun x1466 () Bool)
(declare-fun x3571 () Int)
(declare-fun x4295 () Bool)
(declare-fun x153 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1710 () Int)
(declare-fun x3384 () Bool)
(declare-fun x4178 () Bool)
(declare-fun x718 () Bool)
(declare-fun x710 () Int)
(declare-fun x1281 () Int)
(declare-fun x824 () Bool)
(declare-fun x2725 () Int)
(declare-fun x487 () Int)
(declare-fun x428 () Bool)
(declare-fun x297 () Int)
(declare-fun x3722 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1974 () Int)
(declare-fun x2087 () Bool)
(declare-fun x2073 () Int)
(declare-fun x3970 () Bool)
(declare-fun x3293 () Int)
(declare-fun x2130 () Bool)
(declare-fun x3345 () Int)
(declare-fun x2184 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1768 () Int)
(declare-fun x3274 () Int)
(declare-fun x284 () Int)
(declare-fun x1832 () Bool)
(declare-fun x204 () Int)
(declare-fun x1007 () Int)
(declare-fun x860 () Int)
(declare-fun x633 () Int)
(declare-fun x3630 () Bool)
(declare-fun x3712 () Bool)
(declare-fun x2093 (Int) Int)
(declare-fun x3200 () Int)
(declare-fun x2152 () Bool)
(declare-fun x3185 () Int)
(declare-fun x1572 () Int)
(declare-fun x828 () Bool)
(declare-fun x720 () Int)
(declare-fun x2164 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2992 () Bool)
(declare-fun x3716 () Int)
(declare-fun x2775 (Int) Int)
(declare-fun x1095 () Int)
(declare-fun x2802 () Bool)
(declare-fun x2940 () Int)
(declare-fun x764 () Int)
(declare-fun x2925 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x128 () Bool)
(declare-fun x3315 () Int)
(declare-fun x4442 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x665 () Int)
(declare-fun x1498 () Int)
(declare-fun x2338 () Bool)
(declare-fun x61 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x2858 () Int)
(declare-fun x2323 () Int)
(declare-fun x2666 () Int)
(declare-fun x2099 () Int)
(declare-fun x1541 () Int)
(declare-fun x3206 () Bool)
(declare-fun x92 () Int)
(declare-fun x3370 () Int)
(declare-fun x1158 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x1634 () Int)
(declare-fun x560 () Bool)
(declare-fun x4473 () Int)
(declare-fun x2625 () Int)
(declare-fun x2746 () Int)
(declare-fun x26 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x986 () Bool)
(declare-fun x3490 () Int)
(declare-fun x3313 () Int)
(declare-fun x3733 () Int)
(declare-fun x3653 () Int)
(declare-fun x3339 () Bool)
(declare-fun x2403 () Int)
(declare-fun x892 () Int)
(declare-fun x1470 () Int)
(declare-fun x3639 () Bool)
(declare-fun x2524 () Int)
(declare-fun x3022 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x2672 () Int)
(declare-fun x312 () Int)
(declare-fun x1699 () Int)
(declare-fun x2910 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x2306 () Int)
(declare-fun x2061 () Bool)
(declare-fun x461 () Bool)
(declare-fun x1849 () Int)
(declare-fun x3506 () Int)
(declare-fun x2780 () Bool)
(declare-fun x3990 () Int)
(declare-fun x248 () Bool)
(declare-fun x2670 () Int)
(declare-fun x2174 () Int)
(declare-fun x4002 () Int)
(declare-fun x605 () Bool)
(declare-fun x1959 () Int)
(declare-fun x3232 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2637 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1999 () Int)
(declare-fun x3056 () Int)
(declare-fun x2501 () Int)
(declare-fun x321 () Bool)
(declare-fun x4256 () Int)
(declare-fun x4116 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x2986 () Int)
(declare-fun x3896 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x3575 () Bool)
(declare-fun x3037 () Int)
(declare-fun x708 () Bool)
(declare-fun x4187 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x3661 () Int)
(declare-fun x1092 () Int)
(declare-fun x1326 () Bool)
(declare-fun x776 () Bool)
(declare-fun x4158 () Int)
(declare-fun x664 () Bool)
(declare-fun x4063 () Int)
(declare-fun x1657 () Int)
(declare-fun x2873 () Int)
(declare-fun x964 () Bool)
(declare-fun x2129 () Int)
(declare-fun x4019 () Int)
(declare-fun x929 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1385 () Bool)
(declare-fun x111 () Int)
(declare-fun x2886 () Bool)
(declare-fun x3477 () Bool)
(declare-fun x1018 () Int)
(declare-fun x432 () Int)
(declare-fun x3218 () Bool)
(declare-fun x1566 () Int)
(declare-fun x195 () Bool)
(declare-fun x4077 () Int)
(declare-fun x2161 () Int)
(declare-fun x84 () Int)
(declare-fun x2580 () Int)
(declare-fun x1941 () Int)
(declare-fun x758 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1118 () Int)
(declare-fun x2517 () Int)
(declare-fun x2978 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x882 () Bool)
(declare-fun x2493 () Int)
(declare-fun x392 () Int)
(declare-fun x572 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x3659 () Int)
(declare-fun x4020 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x2514 () Int)
(declare-fun x4426 () Int)
(declare-fun x4553 () Bool)
(declare-fun x1440 () Int)
(declare-fun x4435 () Int)
(declare-fun x1467 () Int)
(declare-fun x1323 () Int)
(declare-fun x2471 () Int)
(declare-fun x4280 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x2859 () Int)
(declare-fun x3449 () Bool)
(declare-fun x3277 () Int)
(declare-fun x1355 () Bool)
(declare-fun x3019 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x3182 () Bool)
(declare-fun x2103 () Int)
(declare-fun x474 () Bool)
(declare-fun x3284 () Int)
(declare-fun x4381 (Int) Int)
(declare-fun x1891 () Int)
(declare-fun x2919 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x3957 () Int)
(declare-fun x58 () Bool)
(declare-fun x508 () Bool)
(declare-fun x3772 () Int)
(declare-fun x3757 () Int)
(declare-fun x2340 () Bool)
(declare-fun x3128 () Int)
(declare-fun x2977 () Int)
(declare-fun x2639 () Int)
(declare-fun x1360 () Int)
(declare-fun x2627 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2750 () Int)
(declare-fun x2963 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x4045 () Int)
(declare-fun x380 () Bool)
(declare-fun x415 () Int)
(declare-fun x70 () Bool)
(declare-fun x3729 () Int)
(declare-fun x677 () Int)
(declare-fun x163 () Int)
(declare-fun x2810 () Int)
(declare-fun x3410 () Int)
(declare-fun x2678 () Bool)
(declare-fun x2358 () Int)
(declare-fun x2987 () Int)
(declare-fun x4230 () Int)
(declare-fun x3953 () Int)
(declare-fun x4093 () Int)
(declare-fun x245 () Int)
(declare-fun x2258 () Bool)
(declare-fun x1796 () Int)
(declare-fun x805 () Int)
(declare-fun x71 () Int)
(declare-fun x834 () Bool)
(declare-fun x408 () Int)
(declare-fun x507 () Int)
(declare-fun x288 () Bool)
(declare-fun x2677 () Int)
(declare-fun x2688 () Int)
(declare-fun x4318 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1720 () Int)
(declare-fun x2285 () Int)
(declare-fun x1002 () Int)
(declare-fun x2051 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x2104 () Int)
(declare-fun x2502 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1622 () Int)
(declare-fun x4326 () Bool)
(declare-fun x3186 () Bool)
(declare-fun x3153 () Int)
(declare-fun x3310 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x2798 () Int)
(declare-fun x4353 () Int)
(declare-fun x4203 () Int)
(declare-fun x4286 () Int)
(declare-fun x2764 () Bool)
(declare-fun x3862 () Int)
(declare-fun x3803 () Bool)
(declare-fun x4117 () Int)
(declare-fun x3008 () Bool)
(declare-fun x2027 () Int)
(declare-fun x2893 () Bool)
(declare-fun x914 () Int)
(declare-fun x823 () Int)
(declare-fun x2023 () Int)
(declare-fun x3173 () Bool)
(declare-fun x2680 () Int)
(declare-fun x4322 () Int)
(declare-fun x1828 () Int)
(declare-fun x3655 () Int)
(declare-fun x735 () Int)
(declare-fun x4253 () Int)
(declare-fun x2426 () Int)
(declare-fun x1365 () Int)
(declare-fun x1578 () Int)
(declare-fun x3844 () Int)
(declare-fun x3149 () Int)
(declare-fun x1673 () Bool)
(declare-fun x1397 () Int)
(declare-fun x3071 (Int) Int)
(declare-fun x658 () Int)
(declare-fun x3073 () Int)
(declare-fun x3475 () Int)
(declare-fun x1780 () Int)
(declare-fun x200 () Bool)
(declare-fun x1273 () Int)
(declare-fun x3831 () Int)
(declare-fun x3110 () Int)
(declare-fun x133 () Int)
(declare-fun x1252 () Int)
(declare-fun x1698 () Bool)
(declare-fun x4074 () Bool)
(declare-fun x4164 () Int)
(declare-fun x1495 () Int)
(declare-fun x1415 () Bool)
(declare-fun x2933 () Int)
(declare-fun x2830 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x2756 () Int)
(declare-fun x4061 () Int)
(declare-fun x2603 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x583 () Bool)
(declare-fun x4235 () Int)
(declare-fun x885 () Int)
(declare-fun x94 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x663 () Bool)
(declare-fun x4394 () Int)
(declare-fun x2849 () Bool)
(declare-fun x127 () Int)
(declare-fun x2917 () Int)
(declare-fun x4257 () Int)
(declare-fun x1607 () Int)
(declare-fun x1159 () Bool)
(declare-fun x619 () Int)
(declare-fun x1734 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x1421 () Int)
(declare-fun x1547 () Int)
(declare-fun x1238 () Int)
(declare-fun x3487 () Int)
(declare-fun x1661 () Int)
(declare-fun x2193 (Int) Int)
(declare-fun x1548 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x4243 () Int)
(declare-fun x2757 () Int)
(declare-fun x3817 () Bool)
(declare-fun x4102 () Int)
(declare-fun x2439 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x782 () Int)
(declare-fun x2578 () Int)
(declare-fun x1370 () Int)
(declare-fun x1089 () Int)
(declare-fun x1719 () Bool)
(declare-fun x326 () Int)
(declare-fun x2522 () Int)
(declare-fun x533 () Int)
(declare-fun x975 () Int)
(declare-fun x3936 () Int)
(declare-fun x287 () Int)
(declare-fun x3136 () Int)
(declare-fun x743 () Int)
(declare-fun x2659 () Int)
(declare-fun x4135 () Bool)
(declare-fun x91 () Int)
(declare-fun x4284 () Int)
(declare-fun x2183 () Int)
(declare-fun x2884 () Int)
(declare-fun x2385 () Bool)
(declare-fun x4292 () Int)
(declare-fun x2900 () Int)
(declare-fun x1432 () Bool)
(declare-fun x3948 () Int)
(declare-fun x9 () Int)
(declare-fun x1460 () Int)
(declare-fun x3510 () Int)
(declare-fun x879 () Int)
(declare-fun x3871 () Bool)
(declare-fun x125 () Bool)
(declare-fun x1072 () Int)
(declare-fun x165 () Bool)
(declare-fun x968 () Int)
(declare-fun x3237 () Int)
(declare-fun x3338 () Int)
(declare-fun x2474 () Int)
(declare-fun x717 () Int)
(declare-fun x516 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1181 () Bool)
(declare-fun x979 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1546 () Int)
(declare-fun x4337 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x359 () Bool)
(declare-fun x2354 () Int)
(declare-fun x471 () Int)
(declare-fun x4032 () Int)
(declare-fun x4445 () Int)
(declare-fun x3493 () Int)
(declare-fun x1101 () Int)
(declare-fun x918 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x3756 () Int)
(declare-fun x4159 () Int)
(declare-fun x4241 () Int)
(declare-fun x2944 () Int)
(declare-fun x1733 () Int)
(declare-fun x4427 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x1835 () Int)
(declare-fun x3935 () Int)
(declare-fun x27 () Int)
(declare-fun x1424 () Int)
(declare-fun x214 () Int)
(declare-fun x2178 () Bool)
(declare-fun x3950 () Bool)
(declare-fun x2899 () Int)
(declare-fun x3260 () Bool)
(declare-fun x4215 () Bool)
(declare-fun x3453 () Int)
(declare-fun x33 () Int)
(declare-fun x2293 () Bool)
(declare-fun x1896 () Int)
(declare-fun x4067 () Bool)
(declare-fun x4200 () Int)
(declare-fun x4514 () Bool)
(declare-fun x3408 () Int)
(declare-fun x1580 () Bool)
(declare-fun x4036 () Int)
(declare-fun x3343 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x342 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x4 () Bool)
(declare-fun x213 () Int)
(declare-fun x2788 () Bool)
(declare-fun x4209 () Int)
(declare-fun x3432 () Bool)
(declare-fun x3082 () Int)
(declare-fun x4010 () Bool)
(declare-fun x1953 () Int)
(declare-fun x3068 () Bool)
(declare-fun x376 () Bool)
(declare-fun x745 () Int)
(declare-fun x558 () Int)
(declare-fun x3954 () Int)
(declare-fun x2189 () Int)
(declare-fun x1176 () Int)
(declare-fun x1943 () Bool)
(declare-fun x3062 () Int)
(declare-fun x1289 () Int)
(declare-fun x1570 () Int)
(declare-fun x3489 () Int)
(declare-fun x862 () Int)
(declare-fun x3951 () Int)
(declare-fun x1726 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x2506 () Int)
(declare-fun x2520 () Int)
(declare-fun x4090 () Int)
(declare-fun x4527 () Int)
(declare-fun x4132 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x648 () Int)
(declare-fun x3972 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x1246 () Int)
(declare-fun x2651 () Bool)
(declare-fun x3437 () Int)
(declare-fun x2995 () Int)
(declare-fun x2423 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x1014 () Int)
(declare-fun x386 () Int)
(declare-fun x4140 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2573 () Bool)
(declare-fun x4410 () Int)
(declare-fun x3061 () Int)
(declare-fun x4400 () Int)
(declare-fun x3492 () Int)
(declare-fun x3521 (Int) Int)
(declare-fun x2097 () Bool)
(declare-fun x3955 () Bool)
(declare-fun x4195 () Bool)
(declare-fun x1529 () Int)
(declare-fun x1215 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x1777 () Int)
(declare-fun x2971 () Bool)
(declare-fun x145 () Int)
(declare-fun x203 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x4206 () Int)
(declare-fun x2938 () Int)
(declare-fun x3518 () Bool)
(declare-fun x846 () Int)
(declare-fun x2567 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x2521 () Int)
(declare-fun x2548 () Int)
(declare-fun x151 () Int)
(declare-fun x3648 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x4392 () Int)
(declare-fun x485 () Int)
(declare-fun x4438 (Int Int Int Int) Int)
(declare-fun x4239 () Bool)
(declare-fun x3328 () Bool)
(declare-fun x896 () Bool)
(declare-fun x57 () Bool)
(declare-fun x132 () Bool)
(declare-fun x3533 () Int)
(declare-fun x3145 () Int)
(declare-fun x1783 () Int)
(declare-fun x744 () Int)
(declare-fun x2213 () Int)
(declare-fun x2581 () Bool)
(declare-fun x2993 () Int)
(declare-fun x1016 () Bool)
(declare-fun x3941 () Int)
(declare-fun x2191 () Int)
(declare-fun x2587 () Bool)
(declare-fun x4113 () Int)
(declare-fun x3697 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x3348 () Int)
(declare-fun x1309 () Bool)
(declare-fun x109 () Int)
(declare-fun x4395 () Bool)
(declare-fun x374 () Int)
(declare-fun x2902 () Int)
(declare-fun x1150 () Bool)
(declare-fun x429 () Int)
(declare-fun x1247 () Int)
(declare-fun x3029 () Int)
(declare-fun x4535 () Int)
(declare-fun x1399 () Int)
(declare-fun x2838 () Int)
(declare-fun x1658 () Int)
(declare-fun x3964 () Bool)
(declare-fun x3209 () Int)
(declare-fun x3570 () Bool)
(declare-fun x2302 () Int)
(declare-fun x1266 () Int)
(declare-fun x1677 () Int)
(declare-fun x401 () Int)
(declare-fun x841 () Int)
(declare-fun x1949 () Int)
(declare-fun x609 () Bool)
(declare-fun x2937 () Int)
(declare-fun x4222 () Bool)
(declare-fun x4524 () Bool)
(declare-fun x871 () Int)
(declare-fun x2588 () Bool)
(declare-fun x4043 () Bool)
(declare-fun x807 () Bool)
(declare-fun x205 () Int)
(declare-fun x1866 () Bool)
(declare-fun x378 () Int)
(declare-fun x4225 () Bool)
(declare-fun x2574 () Int)
(declare-fun x2681 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x4505 () Int)
(declare-fun x3846 () Int)
(declare-fun x39 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x3266 () Int)
(declare-fun x4183 () Int)
(declare-fun x1214 () Bool)
(declare-fun x3325 () Int)
(declare-fun x3076 () Bool)
(declare-fun x628 () Int)
(declare-fun x2257 () Int)
(declare-fun x1971 () Int)
(declare-fun x3700 () Int)
(declare-fun x3814 () Bool)
(declare-fun x156 () Bool)
(declare-fun x492 () Bool)
(declare-fun x3855 () Bool)
(declare-fun x2489 () Int)
(declare-fun x1490 () Bool)
(declare-fun x4448 () Bool)
(declare-fun x3498 () Bool)
(declare-fun x34 () Int)
(declare-fun x1689 () Int)
(declare-fun x2661 () Int)
(declare-fun x772 () Int)
(declare-fun x305 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x2162 () Int)
(declare-fun x4162 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x2878 () Int)
(declare-fun x4210 () Bool)
(declare-fun x3904 () Int)
(declare-fun x2455 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x3385 () Int)
(declare-fun x1786 () Int)
(declare-fun x923 () Int)
(declare-fun x573 () Int)
(declare-fun x3787 () Bool)
(declare-fun x2268 () Int)
(declare-fun x2796 () Int)
(declare-fun x4003 () Int)
(declare-fun x1035 () Bool)
(declare-fun x2492 () Int)
(declare-fun x3203 () Int)
(declare-fun x4088 () Bool)
(declare-fun x2435 () Bool)
(declare-fun x3899 () Bool)
(declare-fun x524 () Int)
(declare-fun x1132 () Int)
(declare-fun x725 () Int)
(declare-fun x570 () Int)
(declare-fun x1335 () Bool)
(declare-fun x3467 () Int)
(declare-fun x3678 () Bool)
(declare-fun x468 () Bool)
(declare-fun x1871 () Int)
(declare-fun x3741 () Int)
(declare-fun x3905 () Int)
(declare-fun x2005 () Int)
(declare-fun x1819 () Int)
(declare-fun x4373 () Int)
(declare-fun x2745 () Bool)
(declare-fun x77 () Int)
(declare-fun x3341 () Bool)
(declare-fun x2219 () Int)
(declare-fun x2621 () Bool)
(declare-fun x4408 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x81 () Int)
(declare-fun x1995 () Int)
(declare-fun x4046 () Int)
(declare-fun x4161 () Bool)
(declare-fun x3012 () Int)
(declare-fun x1126 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1925 () Int)
(declare-fun x2805 () Bool)
(declare-fun x1336 () Int)
(declare-fun x3947 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x2242 () Int)
(declare-fun x382 () Bool)
(declare-fun x1492 () Int)
(declare-fun x2307 () Int)
(declare-fun x1877 () Int)
(declare-fun x1473 () Bool)
(declare-fun x4465 () Bool)
(declare-fun x4219 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x3895 () Bool)
(declare-fun x4407 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x1653 () Int)
(declare-fun x2591 () Bool)
(declare-fun x4314 () Int)
(declare-fun x1287 () Int)
(declare-fun x750 () Int)
(declare-fun x1367 () Int)
(declare-fun x947 () Int)
(declare-fun x2265 () Bool)
(declare-fun x3305 () Int)
(declare-fun x1244 () Bool)
(declare-fun x3457 () Int)
(declare-fun x2469 () Int)
(declare-fun x1948 () Int)
(declare-fun x4155 () Int)
(declare-fun x2712 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x4350 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x3428 () Bool)
(declare-fun x547 () Int)
(declare-fun x2598 (Int) Int)
(declare-fun x2970 () Bool)
(declare-fun x3958 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1058 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x2850 () Int)
(declare-fun x1108 () Int)
(declare-fun x4224 () Int)
(declare-fun x3721 () Int)
(declare-fun x2249 () Int)
(declare-fun x3108 () Int)
(declare-fun x797 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x3956 () Int)
(declare-fun x3405 () Int)
(declare-fun x4349 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x1135 () Int)
(declare-fun x2108 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x1280 () Int)
(declare-fun x607 () Int)
(declare-fun x2384 () Int)
(declare-fun x4058 () Int)
(declare-fun x3440 () Int)
(declare-fun x3125 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x4233 () Int)
(declare-fun x4464 () Bool)
(declare-fun x4086 () Bool)
(declare-fun x3344 () Int)
(declare-fun x3714 () Int)
(declare-fun x2370 () Int)
(declare-fun x1232 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x4428 () Int)
(declare-fun x843 () Int)
(declare-fun x3201 () Int)
(declare-fun x2148 () Int)
(declare-fun x1134 () Int)
(declare-fun x4431 () Bool)
(declare-fun x2926 () Int)
(declare-fun x2956 () Int)
(declare-fun x1497 () Int)
(declare-fun x944 () Int)
(declare-fun x4549 () Int)
(declare-fun x2163 () Int)
(declare-fun x2218 () Bool)
(declare-fun x3020 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x1356 () Int)
(declare-fun x3097 () Bool)
(declare-fun x537 () Int)
(declare-fun x2762 () Bool)
(declare-fun x286 () Bool)
(declare-fun x2835 () Int)
(declare-fun x3940 (Int) Int)
(declare-fun x3710 () Bool)
(declare-fun x3536 () Bool)
(declare-fun x863 () Bool)
(declare-fun x4532 () Int)
(declare-fun x2251 () Int)
(declare-fun x2518 () Bool)
(declare-fun x588 () Bool)
(declare-fun x970 () Bool)
(declare-fun x177 () Int)
(declare-fun x2549 () Int)
(declare-fun x1635 () Int)
(declare-fun x3621 () Bool)
(declare-fun x1493 (Int) Int)
(declare-fun x4125 () Int)
(declare-fun x2790 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1267 () Int)
(declare-fun x2344 () Int)
(declare-fun x1567 () Bool)
(declare-fun x4363 () Bool)
(declare-fun x1285 () Int)
(declare-fun x473 () Int)
(declare-fun x1239 (Int) Int)
(declare-fun x1690 () Int)
(declare-fun x2198 () Int)
(declare-fun x3911 () Bool)
(declare-fun x1487 () Int)
(declare-fun x3759 () Bool)
(declare-fun x2080 () Int)
(declare-fun x173 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x3807 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x210 () Int)
(declare-fun x2776 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x802 () Int)
(declare-fun x3572 () Int)
(declare-fun x1838 () Bool)
(declare-fun x577 () Int)
(declare-fun x4137 () Int)
(declare-fun x2004 () Bool)
(declare-fun x950 () Int)
(declare-fun x3717 () Int)
(declare-fun x4359 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x3390 () Int)
(declare-fun x4487 (Int) Int)
(declare-fun x837 () Int)
(declare-fun x2476 () Int)
(declare-fun x2793 () Bool)
(declare-fun x1212 () Int)
(declare-fun x4512 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x1341 () Int)
(declare-fun x4145 () Int)
(declare-fun x3907 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x4242 () Int)
(declare-fun x3696 () Int)
(declare-fun x2353 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x2412 () Int)
(declare-fun x4522 () Bool)
(declare-fun x3713 () Int)
(declare-fun x2396 () Bool)
(declare-fun x3687 () Int)
(declare-fun x3456 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x597 () Bool)
(declare-fun x2187 () Int)
(declare-fun x3528 (Int) Int)
(declare-fun x4469 () Int)
(declare-fun x973 () Int)
(declare-fun x3089 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x1277 () Int)
(declare-fun x3545 () Bool)
(declare-fun x1162 () Int)
(declare-fun x176 () Int)
(declare-fun x2483 () Int)
(declare-fun x3631 () Bool)
(declare-fun x1049 () Int)
(declare-fun x1937 () Int)
(declare-fun x924 () Int)
(declare-fun x2359 () Int)
(declare-fun x2723 () Int)
(declare-fun x482 () Int)
(declare-fun x337 () Int)
(declare-fun x2438 () Int)
(declare-fun x3650 () Int)
(declare-fun x4066 () Int)
(declare-fun x4072 () Int)
(declare-fun x1304 () Int)
(declare-fun x3135 () Int)
(declare-fun x512 () Int)
(declare-fun x233 () Bool)
(declare-fun x3114 () Bool)
(declare-fun x3793 () Int)
(declare-fun x1945 () Bool)
(declare-fun x679 () Int)
(declare-fun x2122 () Bool)
(declare-fun x194 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x4491 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x3938 () Int)
(declare-fun x3597 () Bool)
(declare-fun x1808 () Int)
(declare-fun x2734 () Bool)
(declare-fun x614 () Int)
(declare-fun x1436 () Int)
(declare-fun x2232 () Bool)
(declare-fun x4148 (Int) Int)
(declare-fun x4081 () Bool)
(declare-fun x591 () Int)
(declare-fun x3147 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x3190 () Int)
(declare-fun x2042 () Int)
(declare-fun x220 () Int)
(declare-fun x3103 () Int)
(declare-fun x2429 () Int)
(declare-fun x3524 () Int)
(declare-fun x1056 () Int)
(declare-fun x878 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x2447 () Int)
(declare-fun x702 () Bool)
(declare-fun x2347 () Int)
(declare-fun x3942 () Bool)
(declare-fun x907 () Int)
(declare-fun x445 () Bool)
(declare-fun x3768 () Int)
(declare-fun x4503 () Int)
(declare-fun x3529 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x1505 () Bool)
(declare-fun x983 () Int)
(declare-fun x4068 () Int)
(declare-fun x2706 () Int)
(declare-fun x3795 () Int)
(declare-fun x2470 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x4476 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1376 () Int)
(declare-fun x1854 () Int)
(declare-fun x3017 () Bool)
(declare-fun x1339 (Int) Int)
(declare-fun x4214 () Int)
(declare-fun x1464 () Int)
(declare-fun x2112 () Bool)
(declare-fun x4039 () Int)
(declare-fun x4421 () Bool)
(declare-fun x808 () Bool)
(declare-fun x530 () Bool)
(declare-fun x298 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x1550 () Int)
(declare-fun x1023 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x1573 () Int)
(declare-fun x756 () Int)
(declare-fun x3684 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x2107 () Int)
(declare-fun x4356 () Int)
(declare-fun x2704 () Int)
(declare-fun x3761 () Int)
(declare-fun x3386 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1401 () Int)
(declare-fun x4013 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x724 () Int)
(declare-fun x1624 () Int)
(declare-fun x4511 () Int)
(declare-fun x280 () Int)
(declare-fun x4269 () Int)
(declare-fun x4342 () Int)
(declare-fun x278 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x2063 () Int)
(declare-fun x2190 () Int)
(declare-fun x1766 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x3455 () Int)
(declare-fun x4114 () Bool)
(declare-fun x2968 () Int)
(declare-fun x2817 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x691 () Int)
(declare-fun x2731 () Int)
(declare-fun x40 () Int)
(declare-fun x1646 () Bool)
(declare-fun x189 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x215 () Int)
(declare-fun x2343 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x1687 () Int)
(declare-fun x375 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x3508 () Int)
(declare-fun x4293 () Int)
(declare-fun x464 () Int)
(declare-fun x1795 () Int)
(declare-fun x4340 () Int)
(declare-fun x2333 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x576 () Int)
(declare-fun x4361 () Int)
(declare-fun x3834 () Int)
(declare-fun x2119 () Int)
(declare-fun x2000 () Int)
(declare-fun x3234 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x241 () Bool)
(declare-fun x3178 () Int)
(declare-fun x2982 () Int)
(declare-fun x3507 () Bool)
(declare-fun x2205 () Int)
(declare-fun x1942 () Bool)
(declare-fun x3612 () Int)
(declare-fun x880 () Int)
(declare-fun x2379 () Int)
(declare-fun x4266 () Int)
(declare-fun x2118 () Bool)
(declare-fun x4346 () Int)
(declare-fun x630 () Bool)
(declare-fun x1990 () Int)
(declare-fun x129 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x2864 () Int)
(declare-fun x3839 () Bool)
(declare-fun x1078 () Int)
(declare-fun x635 () Int)
(declare-fun x4029 () Bool)
(declare-fun x502 () Int)
(declare-fun x2708 () Bool)
(declare-fun x4118 () Int)
(declare-fun x1202 () Int)
(declare-fun x2998 () Bool)
(declare-fun x1889 () Int)
(declare-fun x1837 () Int)
(declare-fun x1446 () Int)
(declare-fun x844 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x338 () Int)
(declare-fun x1909 () Int)
(declare-fun x2544 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x4232 () Int)
(declare-fun x3296 () Bool)
(declare-fun x3043 () Int)
(declare-fun x2533 () Int)
(declare-fun x3399 () Int)
(declare-fun x3355 () Int)
(declare-fun x4167 () Int)
(declare-fun x2214 () Int)
(declare-fun x3198 () Int)
(declare-fun x3542 () Int)
(declare-fun x383 () Int)
(declare-fun x647 () Int)
(declare-fun x354 (Int) Int)
(declare-fun x777 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x276 () Bool)
(declare-fun x694 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1221 () Int)
(declare-fun x4223 () Bool)
(declare-fun x2579 () Int)
(declare-fun x1739 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x4004 () Int)
(declare-fun x2744 () Int)
(declare-fun x1325 () Bool)
(declare-fun x78 () Int)
(declare-fun x3282 () Int)
(declare-fun x4076 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x4546 () Int)
(declare-fun x2270 () Bool)
(declare-fun x4554 () Bool)
(declare-fun x1716 () Int)
(declare-fun x3352 () Int)
(declare-fun x1862 () Bool)
(declare-fun x4250 () Int)
(declare-fun x141 () Bool)
(declare-fun x2969 () Int)
(declare-fun x1103 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x1026 () Int)
(declare-fun x2515 () Int)
(declare-fun x1512 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x3280 () Bool)
(declare-fun x4033 () Int)
(declare-fun x2072 () Int)
(declare-fun x3737 () Int)
(declare-fun x480 () Bool)
(declare-fun x3758 () Int)
(declare-fun x404 () Bool)
(declare-fun x3629 () Int)
(declare-fun x1996 () Bool)
(declare-fun x2221 () Int)
(declare-fun x1797 () Bool)
(declare-fun x1807 () Int)
(declare-fun x3 () Bool)
(declare-fun x4440 () Int)
(declare-fun x2279 () Bool)
(declare-fun x2282 () Int)
(declare-fun x1459 () Int)
(declare-fun x3314 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x4470 () Bool)
(declare-fun x4109 () Int)
(declare-fun x4153 () Bool)
(declare-fun x3283 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x1561 () Int)
(declare-fun x2597 () Int)
(declare-fun x3031 () Int)
(declare-fun x4120 () Int)
(declare-fun x2766 () Int)
(declare-fun x17 () Bool)
(declare-fun x2927 () Int)
(declare-fun x1591 () Int)
(declare-fun x264 () Int)
(declare-fun x48 () Int)
(declare-fun x1292 () Int)
(declare-fun x1685 () Bool)
(declare-fun x373 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x876 () Int)
(declare-fun x1513 () Int)
(declare-fun x1983 () Int)
(declare-fun x124 () Int)
(declare-fun x1472 () Bool)
(declare-fun x922 () Int)
(declare-fun x3527 () Int)
(declare-fun x3411 () Int)
(declare-fun x3989 () Bool)
(declare-fun x113 () Bool)
(declare-fun x3568 () Int)
(declare-fun x2149 () Int)
(declare-fun x3196 () Bool)
(declare-fun x436 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x853 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x2607 () Int)
(declare-fun x2126 () Int)
(declare-fun x2754 () Bool)
(declare-fun x239 () Int)
(declare-fun x1456 () Bool)
(declare-fun x3447 () Int)
(declare-fun x642 () Int)
(declare-fun x398 () Bool)
(declare-fun x4528 () Int)
(declare-fun x1396 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x582 () Int)
(declare-fun x1553 () Int)
(declare-fun x3401 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x3018 () Bool)
(declare-fun x450 () Bool)
(declare-fun x3387 () Int)
(declare-fun x399 () Bool)
(declare-fun x827 () Int)
(declare-fun x2701 () Int)
(declare-fun x809 () Bool)
(declare-fun x778 () Int)
(declare-fun x1394 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1619 () Int)
(declare-fun x905 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x2505 () Int)
(declare-fun x325 () Bool)
(declare-fun x784 () Int)
(declare-fun x2480 () Int)
(declare-fun x2966 () Int)
(declare-fun x1223 () Bool)
(declare-fun x46 () Int)
(declare-fun x149 () Int)
(declare-fun x698 () Int)
(declare-fun x3797 () Int)
(declare-fun x1958 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1147 () Int)
(declare-fun x1751 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x2589 () Int)
(declare-fun x292 () Int)
(declare-fun x1908 () Int)
(declare-fun x3050 () Bool)
(declare-fun x1614 () Int)
(declare-fun x2341 () Bool)
(declare-fun x167 () Int)
(declare-fun x2954 () Int)
(declare-fun x1860 () Int)
(declare-fun x3704 () Bool)
(declare-fun x1907 () Int)
(declare-fun x2224 () Bool)
(declare-fun x2543 () Int)
(declare-fun x3353 () Int)
(declare-fun x1975 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1519 (Int) Int)
(declare-fun x2807 () Bool)
(declare-fun x4493 () Bool)
(declare-fun x2874 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x1178 () Int)
(declare-fun x541 () Int)
(declare-fun x4152 () Int)
(declare-fun x1540 () Bool)
(declare-fun x240 () Int)
(declare-fun x4453 () Int)
(declare-fun x358 () Bool)
(declare-fun x1878 () Int)
(declare-fun x542 () Int)
(declare-fun x2593 () Int)
(declare-fun x1682 (Int) Int)
(declare-fun x857 () Bool)
(declare-fun x675 () Bool)
(declare-fun x4263 () Bool)
(declare-fun x768 () Bool)
(declare-fun x2932 () Int)
(declare-fun x3849 () Int)
(declare-fun x3253 () Bool)
(declare-fun x2331 () Int)
(declare-fun x540 () Int)
(declare-fun x610 () Int)
(declare-fun x2443 () Bool)
(declare-fun x3673 () Int)
(declare-fun x51 () Int)
(declare-fun x2863 () Bool)
(declare-fun x1770 () Int)
(declare-fun x2559 () Int)
(declare-fun x4165 () Int)
(declare-fun x738 () Int)
(declare-fun x2585 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x142 () Int)
(declare-fun x16 () Bool)
(declare-fun x3981 () Int)
(declare-fun x2767 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x3635 () Int)
(declare-fun x1405 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x3366 () Int)
(declare-fun x711 () Int)
(declare-fun x4305 () Int)
(declare-fun x1847 () Int)
(declare-fun x639 () Bool)
(declare-fun x2092 () Int)
(declare-fun x3805 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x727 () Int)
(declare-fun x1226 () Int)
(declare-fun x3021 () Int)
(declare-fun x443 () Int)
(declare-fun x3982 () Int)
(declare-fun x2233 () Bool)
(declare-fun x3409 () Int)
(declare-fun x2703 () Int)
(declare-fun x2250 () Int)
(declare-fun x1327 () Int)
(declare-fun x4065 () Int)
(declare-fun x3680 () Bool)
(declare-fun x695 () Bool)
(declare-fun x1579 () Int)
(declare-fun x2273 () Int)
(declare-fun x3491 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1455 () Int)
(declare-fun x3309 () Bool)
(declare-fun x543 () Int)
(declare-fun x2479 () Int)
(declare-fun x2274 () Int)
(declare-fun x3092 () Bool)
(declare-fun x2564 () Int)
(declare-fun x4264 () Bool)
(declare-fun x4357 () Int)
(declare-fun x578 () Int)
(declare-fun x550 () Int)
(declare-fun x2049 () Int)
(declare-fun x957 () Bool)
(declare-fun x532 () Bool)
(declare-fun x881 () Bool)
(declare-fun x2202 () Int)
(declare-fun x1696 () Bool)
(declare-fun x816 () Int)
(declare-fun x1353 () Int)
(declare-fun x1357 () Int)
(declare-fun x2124 () Int)
(declare-fun x1444 () Bool)
(declare-fun x4071 () Int)
(declare-fun x3670 () Int)
(declare-fun x1963 () Bool)
(declare-fun x1752 () Int)
(declare-fun x580 () Bool)
(declare-fun x4110 (Int) Int)
(declare-fun x1516 () Int)
(declare-fun x466 () Int)
(declare-fun x3689 () Bool)
(declare-fun x3081 () Int)
(declare-fun x3389 (Int) Int)
(declare-fun x545 () Int)
(declare-fun x3592 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2715 () Int)
(declare-fun x505 () Bool)
(declare-fun x1736 () Int)
(declare-fun x1301 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x4115 () Bool)
(declare-fun x3170 () Bool)
(declare-fun x3130 () Int)
(declare-fun x2907 () Bool)
(declare-fun x4525 () Int)
(declare-fun x1417 () Int)
(declare-fun x2596 () Bool)
(declare-fun x3207 () Int)
(declare-fun x67 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3009 () Int)
(declare-fun x3771 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x1160 () Int)
(declare-fun x3708 () Int)
(declare-fun x4501 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x3969 () Int)
(declare-fun x497 () Int)
(declare-fun x4372 () Int)
(declare-fun x458 () Int)
(declare-fun x1500 () Bool)
(declare-fun x2570 () Int)
(declare-fun x1973 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x4475 () Bool)
(declare-fun x3703 () Int)
(declare-fun x1036 () Int)
(declare-fun x1477 () Bool)
(declare-fun x721 () Bool)
(declare-fun x2345 () Int)
(declare-fun x3813 () Int)
(declare-fun x897 () Int)
(declare-fun x2826 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x2132 () Int)
(declare-fun x1617 () Int)
(declare-fun x1981 () Int)
(declare-fun x2590 () Bool)
(declare-fun x441 () Int)
(declare-fun x4149 () Bool)
(declare-fun x3840 () Int)
(declare-fun x1398 () Bool)
(declare-fun x85 () Bool)
(declare-fun x2949 () Int)
(declare-fun x3561 () Bool)
(declare-fun x1261 () Int)
(declare-fun x3821 () Int)
(declare-fun x4312 () Bool)
(declare-fun x3394 () Int)
(declare-fun x1294 () Bool)
(declare-fun x873 () Bool)
(declare-fun x2981 () Int)
(declare-fun x1928 () Int)
(declare-fun x442 () Bool)
(declare-fun x2207 () Int)
(declare-fun x2175 () Bool)
(declare-fun x669 () Int)
(declare-fun x821 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x3563 () Int)
(declare-fun x324 () Int)
(declare-fun x1463 () Int)
(declare-fun x3412 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x941 () Bool)
(declare-fun x3347 () Int)
(declare-fun x421 () Bool)
(declare-fun x3210 () Int)
(declare-fun x130 () Int)
(declare-fun x1757 () Int)
(declare-fun x1590 () Bool)
(declare-fun x150 () Int)
(declare-fun x64 () Int)
(declare-fun x1188 () Int)
(declare-fun x4298 () Int)
(declare-fun x2528 () Int)
(declare-fun x2436 () Int)
(declare-fun x2964 () Int)
(declare-fun x954 () Int)
(declare-fun x1960 () Int)
(declare-fun x1359 () Int)
(declare-fun x3011 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x116 () Bool)
(declare-fun x829 () Int)
(declare-fun x3496 () Int)
(declare-fun x1628 () Int)
(declare-fun x2083 () Int)
(declare-fun x803 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1707 () Int)
(declare-fun x3180 (Int) Int)
(declare-fun x1569 () Bool)
(declare-fun x1643 () Int)
(declare-fun x4368 () Int)
(declare-fun x652 () Bool)
(declare-fun x3764 () Int)
(declare-fun x2292 () Bool)
(declare-fun x3372 () Int)
(declare-fun x1138 () Int)
(declare-fun x2024 () Int)
(declare-fun x3288 () Int)
(declare-fun x3973 () Int)
(declare-fun x696 (Int) Int)
(declare-fun x2650 () Int)
(declare-fun x346 () Int)
(declare-fun x4168 () Bool)
(declare-fun x121 () Bool)
(declare-fun x89 () Bool)
(declare-fun x4108 () Int)
(declare-fun x2930 () Int)
(declare-fun x847 () Int)
(declare-fun x1354 () Int)
(declare-fun x2958 () Bool)
(declare-fun x501 () Int)
(declare-fun x1069 () Bool)
(declare-fun x186 () Bool)
(declare-fun x1921 () Int)
(declare-fun x796 () Bool)
(declare-fun x3358 () Int)
(declare-fun x453 () Int)
(declare-fun x2398 () Int)
(declare-fun x3122 () Int)
(declare-fun x174 () Bool)
(declare-fun x917 () Int)
(declare-fun x2407 () Int)
(declare-fun x406 () Int)
(declare-fun x402 () Int)
(declare-fun x1155 () Bool)
(declare-fun x3264 () Int)
(declare-fun x4064 () Int)
(declare-fun x2204 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x3875 () Int)
(declare-fun x4150 () Int)
(declare-fun x2882 () Int)
(declare-fun x4443 () Bool)
(declare-fun x397 () Int)
(declare-fun x557 () Int)
(declare-fun x1502 () Bool)
(declare-fun x3044 () Bool)
(declare-fun x1074 (Int) Int)
(declare-fun x615 () Int)
(declare-fun x3865 () Int)
(declare-fun x3377 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x2350 () Int)
(declare-fun x4451 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x235 () Int)
(declare-fun x1652 () Int)
(declare-fun x2847 () Int)
(declare-fun x1883 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x2322 () Int)
(declare-fun x2582 () Int)
(declare-fun x2641 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x3000 () Bool)
(declare-fun x737 () Int)
(declare-fun x2957 () Int)
(declare-fun x1900 () Int)
(declare-fun x670 () Int)
(declare-fun x1368 () Int)
(declare-fun x410 () Int)
(declare-fun x2577 () Int)
(declare-fun x2416 () Bool)
(declare-fun x75 () Bool)
(declare-fun x3952 () Int)
(declare-fun x1433 () Int)
(declare-fun x535 () Int)
(declare-fun x961 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x3702 () Int)
(declare-fun x1110 () Int)
(declare-fun x4011 () Int)
(declare-fun x349 () Int)
(declare-fun x849 () Int)
(declare-fun x4236 () Int)
(declare-fun x4471 () Bool)
(declare-fun x3063 () Int)
(declare-fun x1978 () Bool)
(declare-fun x3692 () Int)
(declare-fun x1576 () Int)
(declare-fun x3743 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x237 () Int)
(declare-fun x2664 () Bool)
(declare-fun x1435 () Int)
(declare-fun x20 () Bool)
(declare-fun x3994 () Int)
(declare-fun x3504 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x2067 () Int)
(declare-fun x4463 () Int)
(declare-fun x3041 () Bool)
(declare-fun x3971 () Bool)
(declare-fun x1843 () Int)
(declare-fun x108 () Int)
(declare-fun x3740 () Int)
(declare-fun x3688 () Bool)
(declare-fun x418 () Int)
(declare-fun x1272 () Bool)
(declare-fun x4085 () Int)
(declare-fun x1123 () Int)
(declare-fun x1890 () Int)
(declare-fun x2038 () Bool)
(declare-fun x814 () Int)
(declare-fun x3946 () Int)
(declare-fun x2448 () Int)
(declare-fun x1445 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1741 () Int)
(declare-fun x1311 () Bool)
(declare-fun x666 () Bool)
(declare-fun x3614 (Int Int Int) Int)
(declare-fun x3705 () Bool)
(declare-fun x3049 () Int)
(declare-fun x1183 () Int)
(declare-fun x563 () Int)
(declare-fun x3156 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x845 () Int)
(declare-fun x15 (Int) Int)
(declare-fun x3335 () Int)
(declare-fun x4383 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1379 () Int)
(declare-fun x1100 () Int)
(declare-fun x1288 () Int)
(declare-fun x1329 (Int Int) Int)
(declare-fun x6 () Int)
(declare-fun x2606 () Bool)
(declare-fun x316 () Int)
(declare-fun x2430 () Int)
(declare-fun x2814 () Int)
(declare-fun x4336 () Bool)
(declare-fun x3406 () Int)
(declare-fun x2720 () Bool)
(declare-fun x154 (Int) Int)
(declare-fun x733 () Bool)
(declare-fun x3202 () Int)
(declare-fun x1756 () Int)
(declare-fun x363 () Int)
(declare-fun x23 () Int)
(declare-fun x3906 () Bool)
(declare-fun x394 () Int)
(declare-fun x3382 () Int)
(declare-fun x3261 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x752 () Bool)
(declare-fun x3047 () Int)
(declare-fun x1922 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x3263 () Int)
(declare-fun x2546 () Bool)
(declare-fun x3711 () Int)
(declare-fun x1489 () Bool)
(declare-fun x4543 () Int)
(declare-fun x3864 () Int)
(declare-fun x1898 () Bool)
(declare-fun x3023 () Int)
(declare-fun x1654 () Int)
(declare-fun x4483 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x613 () Int)
(declare-fun x902 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x3373 () Int)
(declare-fun x424 () Int)
(declare-fun x3808 () Int)
(declare-fun x106 () Bool)
(declare-fun x3236 () Int)
(declare-fun x1337 () Int)
(declare-fun x460 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1013 () Int)
(declare-fun x3452 (Int) Int)
(declare-fun x2783 () Int)
(declare-fun x1725 () Int)
(declare-fun x4128 () Bool)
(declare-fun x3454 () Int)
(declare-fun x3645 () Int)
(declare-fun x36 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x310 () Int)
(declare-fun x2685 () Int)
(declare-fun x3873 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x989 () Int)
(declare-fun x1041 () Bool)
(declare-fun x420 () Int)
(declare-fun x2535 () Int)
(declare-fun x3698 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x2860 () Int)
(declare-fun x4244 () Bool)
(declare-fun x2342 () Int)
(declare-fun x3004 (Int) Int)
(declare-fun x3677 () Bool)
(declare-fun x4048 () Int)
(declare-fun x3928 () Int)
(declare-fun x653 () Int)
(declare-fun x3165 () Int)
(declare-fun x1660 () Int)
(declare-fun x2732 () Int)
(declare-fun x2608 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1046 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x2888 () Int)
(declare-fun x4248 () Int)
(declare-fun x1732 () Int)
(declare-fun x2390 () Int)
(declare-fun x3084 () Int)
(declare-fun x4419 () Int)
(declare-fun x2946 () Int)
(declare-fun x3444 () Bool)
(declare-fun x4402 () Int)
(declare-fun x1787 () Int)
(declare-fun x4006 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1781 () Int)
(declare-fun x3072 () Int)
(declare-fun x3912 () Int)
(declare-fun x3256 () Bool)
(declare-fun x1332 (Int) Int)
(declare-fun x3269 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x966 () Bool)
(declare-fun x3643 () Int)
(declare-fun x3537 () Int)
(declare-fun x3080 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x4089 () Bool)
(declare-fun x4283 () Int)
(declare-fun x2472 () Int)
(declare-fun x3470 () Bool)
(declare-fun x251 () Int)
(declare-fun x3319 () Int)
(declare-fun x2409 () Int)
(declare-fun x2151 () Bool)
(declare-fun x4393 () Int)
(declare-fun x3783 () Bool)
(declare-fun x2881 () Int)
(declare-fun x4439 () Int)
(declare-fun x709 () Bool)
(declare-fun x4052 () Int)
(declare-fun x1144 () Int)
(declare-fun x2181 () Int)
(declare-fun x1778 () Int)
(declare-fun x3060 () Bool)
(declare-fun x2064 () Int)
(declare-fun x1029 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x3919 () Int)
(declare-fun x559 () Int)
(declare-fun x4499 () Int)
(declare-fun x463 () Bool)
(declare-fun x699 () Bool)
(declare-fun x869 () Int)
(declare-fun x3883 () Int)
(declare-fun x3660 () Int)
(declare-fun x2626 () Int)
(declare-fun x2808 () Int)
(declare-fun x2962 () Bool)
(declare-fun x3856 () Int)
(declare-fun x798 () Int)
(declare-fun x2705 () Int)
(declare-fun x2547 () Int)
(declare-fun x4228 () Int)
(declare-fun x1533 () Bool)
(declare-fun x3663 () Int)
(declare-fun x4452 () Bool)
(declare-fun x303 () Int)
(declare-fun x2862 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x253 () Int)
(declare-fun x2391 () Int)
(declare-fun x2743 () Int)
(declare-fun x1010 () Bool)
(declare-fun x2844 () Bool)
(declare-fun x3924 () Bool)
(declare-fun x3992 () Int)
(declare-fun x3003 (Int) Int)
(declare-fun x2074 () Int)
(declare-fun x4348 () Int)
(declare-fun x3141 () Int)
(declare-fun x4444 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x4396 () Int)
(declare-fun x3058 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x1478 () Bool)
(declare-fun x1532 () Int)
(declare-fun x3558 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x372 () Bool)
(declare-fun x4544 () Int)
(declare-fun x2799 () Int)
(declare-fun x2532 () Int)
(declare-fun x2565 () Int)
(declare-fun x3433 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2841 () Int)
(declare-fun x3281 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x2068 () Int)
(declare-fun x218 () Bool)
(declare-fun x4441 () Int)
(declare-fun x4017 () Int)
(declare-fun x787 () Int)
(declare-fun x164 () Bool)
(declare-fun x462 () Int)
(declare-fun x3523 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x1369 (Int Int Int Int Int Int Int) Int)
(declare-fun x1655 () Bool)
(declare-fun x3093 () Int)
(declare-fun x2923 () Int)
(declare-fun x1243 (Int) Int)
(declare-fun x546 () Bool)
(declare-fun x3501 () Int)
(declare-fun x291 () Int)
(declare-fun x3526 () Bool)
(declare-fun x4316 () Int)
(declare-fun x4160 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x2415 (Int) Int)
(declare-fun x1601 () Int)
(declare-fun x4275 () Int)
(declare-fun x937 () Bool)
(declare-fun x732 () Int)
(declare-fun x3391 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x2406 () Int)
(declare-fun x2405 () Bool)
(declare-fun x3172 () Int)
(declare-fun x318 () Bool)
(declare-fun x327 () Int)
(declare-fun x1910 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1651 () Int)
(declare-fun x1249 () Int)
(declare-fun x938 () Bool)
(declare-fun x4484 () Int)
(declare-fun x4103 () Int)
(declare-fun x1597 () Bool)
(declare-fun x123 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x3788 () Int)
(declare-fun x3015 () Int)
(declare-fun x2865 () Int)
(declare-fun x4539 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x1964 () Int)
(declare-fun x348 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x1316 () Int)
(declare-fun x3239 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x4418 () Bool)
(declare-fun x2770 () Int)
(declare-fun x1471 () Bool)
(declare-fun x506 () Int)
(declare-fun x1913 () Bool)
(declare-fun x3939 () Int)
(declare-fun x3725 () Int)
(declare-fun x1782 () Int)
(declare-fun x3885 () Int)
(declare-fun x2950 () Bool)
(declare-fun x4281 () Bool)
(declare-fun x2138 (Int) Int)
(declare-fun x1431 () Int)
(declare-fun x2673 () Bool)
(declare-fun x4555 () Int)
(declare-fun x3119 () Int)
(declare-fun x1320 () Bool)
(declare-fun x4277 () Int)
(declare-fun x4265 () Int)
(declare-fun x3519 () Bool)
(declare-fun x2774 () Int)
(declare-fun x4433 () Int)
(declare-fun x469 () Int)
(declare-fun x3986 () Bool)
(declare-fun x1850 () Int)
(declare-fun x625 () Int)
(declare-fun x2349 () Int)
(declare-fun x3438 () Bool)
(declare-fun x498 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x3615 () Int)
(declare-fun x4267 () Bool)
(declare-fun x2397 () Int)
(declare-fun x1514 () Bool)
(declare-fun x252 () Int)
(declare-fun x855 () Bool)
(declare-fun x4432 () Bool)
(declare-fun x449 () Int)
(declare-fun x1970 () Int)
(declare-fun x3482 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x1048 () Int)
(declare-fun x3462 () Bool)
(declare-fun x3979 () Int)
(declare-fun x1549 () Bool)
(declare-fun x2749 (Int Int Int Int Int Int) Int)
(declare-fun x810 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x2709 () Bool)
(declare-fun x3303 () Int)
(declare-fun x2481 () Bool)
(declare-fun x2653 (Int) Int)
(declare-fun x2335 () Bool)
(declare-fun x3441 () Int)
(declare-fun x1980 () Int)
(declare-fun x4273 () Bool)
(declare-fun x3102 () Int)
(declare-fun x3364 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x3101 () Int)
(declare-fun x1902 () Int)
(declare-fun x969 () Int)
(declare-fun x1194 () Bool)
(declare-fun x3987 () Int)
(declare-fun x1746 () Bool)
(declare-fun x112 () Int)
(declare-fun x4226 () Bool)
(declare-fun x4294 () Bool)
(declare-fun x910 () Bool)
(declare-fun x4141 () Int)
(declare-fun x2058 () Int)
(declare-fun x900 () Bool)
(declare-fun x3811 () Int)
(declare-fun x3254 () Int)
(declare-fun x3378 () Int)
(declare-fun x2494 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x2782 () Bool)
(declare-fun x477 () Int)
(declare-fun x299 () Int)
(declare-fun x2160 () Int)
(declare-fun x729 () Bool)
(declare-fun x275 () Bool)
(declare-fun x599 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x3585 () Int)
(declare-fun x483 () Int)
(declare-fun x926 () Int)
(declare-fun x1142 () Bool)
(declare-fun x4362 () Int)
(declare-fun x296 () Bool)
(declare-fun x180 () Bool)
(declare-fun x3205 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x21 () Int)
(declare-fun x2036 () Int)
(declare-fun x4547 () Int)
(declare-fun x1274 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x3532 () Int)
(declare-fun x1765 () Int)
(declare-fun x1174 () Int)
(declare-fun x3279 () Int)
(declare-fun x4049 () Bool)
(declare-fun x2463 () Int)
(define-fun x3626 ((x3541 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3541) (>= x3541 0)) x3541 (- x3541 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4315 ((x3541 Int)) Int (ite (and (< x3541 0) (>= x3541 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3541 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3541))
(define-fun x1740 ((x1671 Int)) Bool (and (>= x1671 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1671)))
(define-fun x2022 ((x1671 Int)) Bool (and (= (x1329 x1671 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1671) (= (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1671) x1671)))
(define-fun x411 ((x1671 Int)) Bool (and (= 0 (x1329 x1671 0)) (= (x1329 0 x1671) 0)))
(define-fun x1271 ((x1671 Int)) Bool (= (x1329 x1671 x1671) x1671))
(define-fun x2854 ((x1671 Int)) Bool (and (x1271 x1671) (x2022 x1671) (x411 x1671)))
(define-fun x2332 ((x1671 Int) (x356 Int)) Bool (= (x1329 x1671 x356) (x1329 x356 x1671)))
(define-fun x895 ((x1671 Int) (x356 Int)) Bool (and (=> (>= x1671 0) (>= x1671 (x1329 x1671 x356))) (<= 0 (x1329 x1671 x356)) (=> (>= x356 0) (<= (x1329 x1671 x356) x356))))
(define-fun x865 ((x1671 Int) (x356 Int)) Bool (and (x895 x1671 x356) (x2332 x1671 x356)))
(define-fun x2908 ((x1671 Int)) Bool (= (mod x1671 2) (x1329 x1671 1)))
(define-fun x83 ((x1671 Int)) Bool (and (x2908 x1671) (x865 x1671 1)))
(define-fun x3137 ((x1671 Int)) Bool (= (x1329 x1671 127) (mod x1671 128)))
(define-fun x692 ((x1671 Int)) Bool (and (x3137 x1671) (x865 x1671 127)))
(define-fun x1864 ((x1671 Int)) Bool (= (mod x1671 256) (x1329 x1671 255)))
(define-fun x2348 ((x1671 Int)) Bool (and (x1864 x1671) (x865 x1671 255)))
(define-fun x894 ((x1671 Int)) Bool (= (+ (mod x1671 256) (x1329 x1671 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (mod x1671 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1592 ((x1671 Int)) Bool (and (x865 x1671 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x894 x1671)))
(define-fun x2135 ((x1671 Int)) Bool (= (+ (x1329 x1671 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x1671 32)) (mod x1671 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x304 ((x1671 Int)) Bool (and (x865 x1671 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2135 x1671)))
(define-fun x2054 ((x1671 Int)) Bool (= (x1329 x1671 26959946667150639794667015087019630673637144422540572481103610249215) (mod x1671 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x2931 ((x1671 Int)) Bool (and (x2054 x1671) (x865 x1671 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x3228 ((x207 Int)) Int 0)
(define-fun x2327 ((x207 Int)) Int 0)
(define-fun x662 ((x207 Int)) Int (ite (< x207 x2150) (x1031 x207) 0))
(define-fun x1574 ((x207 Int)) Int (ite (> x155 x207) (x3220 x207) 0))
(define-fun x1810 ((x207 Int)) Int (ite (> x368 x207) (x3152 x207) 0))
(define-fun x2401 ((x207 Int)) Int 0)
(define-fun x958 ((x207 Int)) Int 0)
(define-fun x2375 ((x207 Int)) Int 0)
(define-fun x4358 ((x207 Int)) Int 0)
(define-fun x2915 ((x207 Int)) Int 0)
(define-fun x3472 ((x207 Int)) Int 0)
(define-fun x2437 ((x207 Int)) Int 0)
(define-fun x659 ((x207 Int)) Int 0)
(define-fun x3442 ((x207 Int)) Int 0)
(define-fun x1568 ((x207 Int)) Int 0)
(define-fun x1409 ((x207 Int)) Int 0)
(define-fun x1141 ((x207 Int)) Int 0)
(define-fun x1935 ((x207 Int)) Int 0)
(define-fun x3902 ((x207 Int)) Int 0)
(define-fun x419 ((x207 Int)) Int 0)
(define-fun x1163 ((x207 Int)) Int 0)
(define-fun x1773 ((x207 Int)) Int 0)
(define-fun x2556 ((x207 Int)) Int 0)
(define-fun x3463 ((x207 Int)) Int 0)
(define-fun x2876 ((x207 Int)) Int 0)
(define-fun x1575 ((x207 Int)) Int 0)
(define-fun x690 ((x207 Int)) Int 0)
(define-fun x1933 ((x207 Int)) Int 0)
(define-fun x2539 ((x207 Int)) Int 0)
(define-fun x3459 ((x207 Int)) Int 0)
(define-fun x3158 ((x207 Int)) Int 0)
(define-fun x4151 ((x207 Int)) Int 0)
(define-fun x833 ((x207 Int)) Int 0)
(define-fun x775 ((x207 Int)) Int 0)
(define-fun x1845 ((x207 Int)) Int 0)
(define-fun x1800 ((x207 Int)) Int 0)
(define-fun x3750 ((x207 Int)) Int 0)
(define-fun x1491 ((x207 Int)) Int 0)
(define-fun x3502 ((x207 Int)) Int 0)
(define-fun x1539 ((x207 Int)) Int (ite (< x207 x2758) (x3426 x207) 0))
(define-fun x4245 ((x207 Int)) Int (ite (and (> x2758 x207) (<= 0 x207)) (x1243 x207) (x1539 x207)))
(define-fun x1180 ((x207 Int)) Int (ite (= x207 x3203) x3370 (x549 x207)))
(define-fun x3686 ((x207 Int)) Int (ite (= x3591 x207) x3172 (x1180 x207)))
(define-fun x3150 ((x207 Int)) Int (ite (= x207 128) x2145 (x3472 x207)))
(define-fun x3091 ((x207 Int)) Int (ite (= x207 160) x3455 (x3150 x207)))
(define-fun x1387 ((x207 Int)) Int (ite (= x207 160) x2469 (x3150 x207)))
(define-fun x3582 ((x207 Int)) Int (x526 x207))
(define-fun x4091 ((x207 Int)) Int (ite (= 0 x207) x3453 (x1493 x207)))
(define-fun x137 ((x207 Int)) Int (ite (= x207 4) 17 (x2401 x207)))
(define-fun x355 ((x207 Int)) Int (ite (and (> 36 x207) (<= 0 x207)) (x137 x207) (x1493 x207)))
(define-fun x2822 ((x207 Int)) Int (ite (= 0 x207) x396 (x1493 x207)))
(define-fun x602 ((x207 Int)) Int (ite x2892 (x4091 x207) (ite x3280 (x355 x207) (x2822 x207))))
(define-fun x3312 ((x207 Int)) Int (ite (and (<= 0 x207) (> x3739 x207)) (x602 x207) (x833 x207)))
(define-fun x931 ((x207 Int)) Int (ite (and (< x207 x3739) (<= 0 x207)) (x3312 x207) (x354 x207)))
(define-fun x1410 ((x207 Int)) Int (ite (= x207 192) 21250608054068894920771655176311299370521669075471658173068242729727453822976 (x833 x207)))
(define-fun x2897 ((x207 Int)) Int (ite (and (> 4 x207) (>= x207 0)) (x1410 (+ 192 x207)) (x354 x207)))
(define-fun x1582 ((x207 Int)) Int (ite (= 4 x207) 17 (x1935 x207)))
(define-fun x620 ((x207 Int)) Int (ite (and (> 36 x207) (<= 0 x207)) (x1582 x207) (x2959 x207)))
(define-fun x3208 ((x207 Int)) Int (ite (= x207 128) 48755886422350550937420582033662272622158303343164848365600209189876434731008 (x1935 x207)))
(define-fun x3188 ((x207 Int)) Int (ite (and (> 4 x207) (>= x207 0)) (x3208 (+ 128 x207)) (x2959 x207)))
(define-fun x1468 ((x207 Int)) Int (ite (= 4 x207) 17 (x1935 x207)))
(define-fun x1759 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 36)) (x1468 x207) (x2959 x207)))
(define-fun x4189 ((x207 Int)) Int (ite x611 (x2959 x207) (ite x75 (x620 x207) (ite x3125 (x3188 x207) (x1759 x207)))))
(define-fun x741 ((x207 Int)) Int (ite (= x207 0) x2342 (x2959 x207)))
(define-fun x2464 ((x207 Int)) Int (ite x1512 (x4189 x207) (x741 x207)))
(define-fun x323 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2556 x207)))
(define-fun x2628 ((x207 Int)) Int (ite (= 132 x207) 32 (x323 x207)))
(define-fun x749 ((x207 Int)) Int (ite (= 164 x207) 10 (x2628 x207)))
(define-fun x2188 ((x207 Int)) Int (ite (= x207 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x749 x207)))
(define-fun x3025 ((x207 Int)) Int (ite (and (<= 0 x207) (> 100 x207)) (x2188 (+ 128 x207)) (x181 x207)))
(define-fun x3961 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 100)) (x3025 x207) (x958 x207)))
(define-fun x1483 ((x207 Int)) Int (ite (and (<= 0 x207) (> 100 x207)) (x3961 x207) (x2959 x207)))
(define-fun x1704 ((x207 Int)) Int (ite (= 4 x207) 17 (x958 x207)))
(define-fun x2619 ((x207 Int)) Int (ite (and (> 36 x207) (>= x207 0)) (x1704 x207) (x2959 x207)))
(define-fun x889 ((x207 Int)) Int (ite (= 4 x207) 17 (x958 x207)))
(define-fun x3799 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 36)) (x889 x207) (x2959 x207)))
(define-fun x434 ((x207 Int)) Int (ite (= x207 4) 17 (x958 x207)))
(define-fun x1299 ((x207 Int)) Int (ite (and (< x207 36) (>= x207 0)) (x434 x207) (x2959 x207)))
(define-fun x1063 ((x207 Int)) Int (ite (= x207 4) 34 (x958 x207)))
(define-fun x2109 ((x207 Int)) Int (ite (and (> 36 x207) (<= 0 x207)) (x1063 x207) (x2959 x207)))
(define-fun x2599 ((x207 Int)) Int (ite (= 4 x207) 34 (x958 x207)))
(define-fun x4231 ((x207 Int)) Int (ite (and (>= x207 0) (> 36 x207)) (x2599 x207) (x2959 x207)))
(define-fun x3434 ((x207 Int)) Int (ite (= x207 4) 17 (x958 x207)))
(define-fun x3342 ((x207 Int)) Int (ite (and (<= 0 x207) (> 36 x207)) (x3434 x207) (x2959 x207)))
(define-fun x1213 ((x207 Int)) Int (ite (= 128 x207) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3459 x207)))
(define-fun x3616 ((x207 Int)) Int (ite (and (< x207 4) (>= x207 0)) (x1213 (+ 128 x207)) (x3511 x207)))
(define-fun x3546 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3459 x207)))
(define-fun x788 ((x207 Int)) Int (ite (= x207 132) 32 (x3546 x207)))
(define-fun x285 ((x207 Int)) Int (ite (= 164 x207) 12 (x788 x207)))
(define-fun x3306 ((x207 Int)) Int (ite (= 196 x207) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x285 x207)))
(define-fun x3770 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 100)) (x3306 (+ 128 x207)) (x3511 x207)))
(define-fun x3815 ((x207 Int)) Int (ite x3118 (x3616 x207) (x3770 x207)))
(define-fun x3685 ((x207 Int)) Int (ite x2673 (x3815 x207) (x3511 x207)))
(define-fun x1824 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 x4517)) (x3685 x207) (x958 x207)))
(define-fun x4416 ((x207 Int)) Int (ite (and (>= x207 0) (> x4517 x207)) (x1824 x207) (x2959 x207)))
(define-fun x1834 ((x207 Int)) Int (ite (= x3436 x207) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x1845 x207)))
(define-fun x2299 ((x207 Int)) Int (ite (and (> 4 x207) (<= 0 x207)) (x1834 (+ x3436 x207)) (x1239 x207)))
(define-fun x1351 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1845 x207)))
(define-fun x1605 ((x207 Int)) Int (ite (= 132 x207) 32 (x1351 x207)))
(define-fun x2855 ((x207 Int)) Int (ite (= x207 164) 12 (x1605 x207)))
(define-fun x765 ((x207 Int)) Int (ite (= 196 x207) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2855 x207)))
(define-fun x3079 ((x207 Int)) Int (ite (and (< x207 100) (>= x207 0)) (x765 (+ 128 x207)) (x1239 x207)))
(define-fun x4334 ((x207 Int)) Int (ite x2139 (x2299 x207) (x3079 x207)))
(define-fun x4154 ((x207 Int)) Int (ite x769 (x4334 x207) (x1239 x207)))
(define-fun x3251 ((x207 Int)) Int (ite (and (< x207 x4322) (<= 0 x207)) (x4154 x207) (x958 x207)))
(define-fun x476 ((x207 Int)) Int (ite (and (> x4322 x207) (<= 0 x207)) (x3251 x207) (x2959 x207)))
(define-fun x1071 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2327 x207)))
(define-fun x522 ((x207 Int)) Int (ite (= 132 x207) 32 (x1071 x207)))
(define-fun x2575 ((x207 Int)) Int (ite (= 164 x207) 10 (x522 x207)))
(define-fun x539 ((x207 Int)) Int (ite (= x207 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x2575 x207)))
(define-fun x3622 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 100)) (x539 (+ 128 x207)) (x4182 x207)))
(define-fun x3605 ((x207 Int)) Int 0)
(define-fun x272 ((x207 Int)) Int (ite x1331 (x3622 x207) (x3605 x207)))
(define-fun x1961 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 x2129)) (x272 x207) (x958 x207)))
(define-fun x4301 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 x2129)) (x1961 x207) (x2959 x207)))
(define-fun x1042 ((x207 Int)) Int (ite (= x207 128) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x1491 x207)))
(define-fun x3774 ((x207 Int)) Int (ite (= x207 132) x647 (x1042 x207)))
(define-fun x1587 ((x207 Int)) Int (ite (= 164 x207) 128 (x3774 x207)))
(define-fun x2883 ((x207 Int)) Int (ite (= x207 260) x1404 (x1587 x207)))
(define-fun x1713 ((x207 Int)) Int (ite (= 292 x207) x3838 (x2883 x207)))
(define-fun x1534 ((x207 Int)) Int (ite (= 292 x207) x2198 (x2883 x207)))
(define-fun x956 ((x207 Int)) Int (ite x3 (ite x2942 (x2883 x207) (x1713 x207)) (x1534 x207)))
(define-fun x360 ((x207 Int)) Int (ite (= x207 196) x1856 (x956 x207)))
(define-fun x893 ((x207 Int)) Int (ite (= x207 228) x3468 (x360 x207)))
(define-fun x3636 ((x207 Int)) Int (ite (= x207 x3746) x1608 (x893 x207)))
(define-fun x1676 ((x207 Int)) Int (ite (= x995 x207) x538 (x3636 x207)))
(define-fun x371 ((x207 Int)) Int (ite (= x207 x995) x2935 (x3636 x207)))
(define-fun x42 ((x207 Int)) Int (ite x3868 (ite x2003 (x3636 x207) (x1676 x207)) (x371 x207)))
(define-fun x2834 ((x207 Int)) Int (ite (and (> x3474 x207) (>= x207 164)) (x42 (+ x207 128)) (x1810 x207)))
(define-fun x3927 ((x207 Int)) Int (ite (and (> (+ 128 x2839) x207) (<= 128 x207)) (x2834 (+ 36 x207)) (x659 x207)))
(define-fun x1146 ((x207 Int)) Int (ite (= x207 x1376) 0 (x3927 x207)))
(define-fun x93 ((x207 Int)) Int (ite (= x207 x3288) x4283 (x1146 x207)))
(define-fun x3632 ((x207 Int)) Int (ite (and (>= x207 128) (> (+ x3914 128) x207)) (x2834 (- (+ x3617 x207) 128)) (x93 x207)))
(define-fun x422 ((x207 Int)) Int (ite (= x114 x207) 0 (x3632 x207)))
(define-fun x657 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x422 x207)))
(define-fun x2887 ((x207 Int)) Int (ite (= x207 132) 32 (x657 x207)))
(define-fun x3634 ((x207 Int)) Int (ite (= x207 164) 33 (x2887 x207)))
(define-fun x1872 ((x207 Int)) Int (ite (= 196 x207) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x3634 x207)))
(define-fun x247 ((x207 Int)) Int (ite (= 228 x207) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x1872 x207)))
(define-fun x3857 ((x207 Int)) Int (ite (and (<= 0 x207) (> 132 x207)) (x247 (+ x207 128)) (x4062 x207)))
(define-fun x3421 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x93 x207)))
(define-fun x361 ((x207 Int)) Int (ite (= x207 132) 32 (x3421 x207)))
(define-fun x942 ((x207 Int)) Int (ite (= 164 x207) 35 (x361 x207)))
(define-fun x3113 ((x207 Int)) Int (ite (= 196 x207) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x942 x207)))
(define-fun x2247 ((x207 Int)) Int (ite (= x207 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x3113 x207)))
(define-fun x2921 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 132)) (x2247 (+ 128 x207)) (x4062 x207)))
(define-fun x1848 ((x207 Int)) Int (ite x3290 (x4062 x207) (ite x1003 (x4062 x207) (ite x3186 (x4062 x207) (ite x2118 (x4062 x207) (ite x597 (x3857 x207) (x2921 x207)))))))
(define-fun x3166 ((x207 Int)) Int 0)
(define-fun x444 ((x207 Int)) Int (ite x4156 (x1848 x207) (x3166 x207)))
(define-fun x3368 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 x574)) (x444 x207) (x958 x207)))
(define-fun x912 ((x207 Int)) Int (ite (and (> x574 x207) (>= x207 0)) (x3368 x207) (x2959 x207)))
(define-fun x2791 ((x207 Int)) Int (ite (= 128 x207) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x4151 x207)))
(define-fun x255 ((x207 Int)) Int (ite (and (<= 0 x207) (> 4 x207)) (x2791 (+ x207 128)) (x3180 x207)))
(define-fun x2449 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4151 x207)))
(define-fun x3126 ((x207 Int)) Int (ite (= 132 x207) 32 (x2449 x207)))
(define-fun x281 ((x207 Int)) Int (ite (= 164 x207) 12 (x3126 x207)))
(define-fun x1551 ((x207 Int)) Int (ite (= x207 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x281 x207)))
(define-fun x4054 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 100)) (x1551 (+ 128 x207)) (x3180 x207)))
(define-fun x1004 ((x207 Int)) Int (ite x564 (x255 x207) (x4054 x207)))
(define-fun x4461 ((x207 Int)) Int (ite x2293 (x1004 x207) (x3180 x207)))
(define-fun x2803 ((x207 Int)) Int (ite (and (>= x207 0) (> x489 x207)) (x4461 x207) (x958 x207)))
(define-fun x3732 ((x207 Int)) Int (ite (and (>= x207 0) (> x489 x207)) (x2803 x207) (x2959 x207)))
(define-fun x1318 ((x207 Int)) Int (ite (= x207 4) 17 (x958 x207)))
(define-fun x987 ((x207 Int)) Int (ite (and (> 36 x207) (<= 0 x207)) (x1318 x207) (x2959 x207)))
(define-fun x2248 ((x207 Int)) Int (ite (= x207 4) 17 (x958 x207)))
(define-fun x1968 ((x207 Int)) Int (ite (and (>= x207 0) (> 36 x207)) (x2248 x207) (x2959 x207)))
(define-fun x2453 ((x207 Int)) Int (ite x2780 (x1483 x207) (ite x3157 (x2619 x207) (ite x1284 (x3799 x207) (ite x2185 (x1299 x207) (ite x4325 (x2109 x207) (ite x3249 (x4231 x207) (ite x329 (x3342 x207) (ite x3142 (x4416 x207) (ite x4222 (x2959 x207) (ite x302 (x476 x207) (ite x1869 (x2959 x207) (ite x3471 (x4301 x207) (ite x227 (x2959 x207) (ite x1444 (x912 x207) (ite x1894 (x2959 x207) (ite x56 (x2959 x207) (ite x2815 (x2959 x207) (ite x358 (x2959 x207) (ite x664 (x2959 x207) (ite x709 (x3732 x207) (ite x1552 (x2959 x207) (ite x1841 (x987 x207) (ite x3314 (x1968 x207) (x2959 x207)))))))))))))))))))))))))
(define-fun x160 ((x207 Int)) Int (ite (= x207 0) x1616 (x2959 x207)))
(define-fun x740 ((x207 Int)) Int (ite x2122 (x2453 x207) (x160 x207)))
(define-fun x953 ((x207 Int)) Int (ite x3751 (x2464 x207) (x740 x207)))
(define-fun x2018 ((x207 Int)) Int (ite (and (> x3139 x207) (<= 0 x207)) (x953 x207) (x833 x207)))
(define-fun x3116 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 x3139)) (x2018 x207) (x354 x207)))
(define-fun x3642 ((x207 Int)) Int (ite (= 4 x207) 17 (x1163 x207)))
(define-fun x4290 ((x207 Int)) Int (ite (and (<= 0 x207) (> 36 x207)) (x3642 x207) (x4148 x207)))
(define-fun x4111 ((x207 Int)) Int (ite x3531 (x4290 x207) (x4148 x207)))
(define-fun x1979 ((x207 Int)) Int (ite x3401 (x4111 x207) (x4148 x207)))
(define-fun x2724 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x1773 x207)))
(define-fun x3299 ((x207 Int)) Int (ite (= x207 132) 32 (x2724 x207)))
(define-fun x1650 ((x207 Int)) Int (ite (= 164 x207) 10 (x3299 x207)))
(define-fun x1033 ((x207 Int)) Int (ite (= 196 x207) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x1650 x207)))
(define-fun x2655 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 100)) (x1033 (+ 128 x207)) (x706 x207)))
(define-fun x1755 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 100)) (x2655 x207) (x1141 x207)))
(define-fun x2422 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 100)) (x1755 x207) (x4148 x207)))
(define-fun x2366 ((x207 Int)) Int (ite (= x207 4) 17 (x1141 x207)))
(define-fun x31 ((x207 Int)) Int (ite (and (<= 0 x207) (> 36 x207)) (x2366 x207) (x4148 x207)))
(define-fun x3827 ((x207 Int)) Int (ite (= 4 x207) 17 (x1141 x207)))
(define-fun x3162 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 36)) (x3827 x207) (x4148 x207)))
(define-fun x581 ((x207 Int)) Int (ite (= 4 x207) 17 (x1141 x207)))
(define-fun x1017 ((x207 Int)) Int (ite (and (< x207 36) (<= 0 x207)) (x581 x207) (x4148 x207)))
(define-fun x555 ((x207 Int)) Int (ite (= 4 x207) 34 (x1141 x207)))
(define-fun x3374 ((x207 Int)) Int (ite (and (< x207 36) (>= x207 0)) (x555 x207) (x4148 x207)))
(define-fun x2167 ((x207 Int)) Int (ite (= x207 4) 34 (x1141 x207)))
(define-fun x616 ((x207 Int)) Int (ite (and (>= x207 0) (> 36 x207)) (x2167 x207) (x4148 x207)))
(define-fun x4459 ((x207 Int)) Int (ite (= x207 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x2539 x207)))
(define-fun x4306 ((x207 Int)) Int (ite (and (< x207 4) (>= x207 0)) (x4459 (+ x207 128)) (x1744 x207)))
(define-fun x1305 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x2539 x207)))
(define-fun x3925 ((x207 Int)) Int (ite (= 132 x207) 32 (x1305 x207)))
(define-fun x1199 ((x207 Int)) Int (ite (= x207 164) 12 (x3925 x207)))
(define-fun x2482 ((x207 Int)) Int (ite (= 196 x207) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x1199 x207)))
(define-fun x3599 ((x207 Int)) Int (ite (and (< x207 100) (>= x207 0)) (x2482 (+ x207 128)) (x1744 x207)))
(define-fun x4176 ((x207 Int)) Int (ite x2059 (x4306 x207) (x3599 x207)))
(define-fun x2558 ((x207 Int)) Int (ite x2849 (x4176 x207) (x1744 x207)))
(define-fun x2001 ((x207 Int)) Int (ite (and (> x3939 x207) (>= x207 0)) (x2558 x207) (x1141 x207)))
(define-fun x4390 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 x3939)) (x2001 x207) (x4148 x207)))
(define-fun x3674 ((x207 Int)) Int (ite (= x3380 x207) 65459779515086145227071195481915504640854538040456829512690024447692440076288 (x775 x207)))
(define-fun x2710 ((x207 Int)) Int (ite (and (> 4 x207) (>= x207 0)) (x3674 (+ x3380 x207)) (x817 x207)))
(define-fun x1788 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x775 x207)))
(define-fun x4095 ((x207 Int)) Int (ite (= x207 132) 32 (x1788 x207)))
(define-fun x258 ((x207 Int)) Int (ite (= 164 x207) 12 (x4095 x207)))
(define-fun x1577 ((x207 Int)) Int (ite (= 196 x207) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x258 x207)))
(define-fun x3676 ((x207 Int)) Int (ite (and (> 100 x207) (<= 0 x207)) (x1577 (+ x207 128)) (x817 x207)))
(define-fun x4332 ((x207 Int)) Int (ite x699 (x2710 x207) (x3676 x207)))
(define-fun x4502 ((x207 Int)) Int (ite x4029 (x4332 x207) (x817 x207)))
(define-fun x3361 ((x207 Int)) Int (ite (and (< x207 x1896) (<= 0 x207)) (x4502 x207) (x1141 x207)))
(define-fun x3963 ((x207 Int)) Int (ite (and (< x207 x1896) (>= x207 0)) (x3361 x207) (x4148 x207)))
(define-fun x1520 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3228 x207)))
(define-fun x1253 ((x207 Int)) Int (ite (= x207 132) 32 (x1520 x207)))
(define-fun x3320 ((x207 Int)) Int (ite (= 164 x207) 10 (x1253 x207)))
(define-fun x3604 ((x207 Int)) Int (ite (= x207 196) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x3320 x207)))
(define-fun x1893 ((x207 Int)) Int (ite (and (> 100 x207) (>= x207 0)) (x3604 (+ 128 x207)) (x4344 x207)))
(define-fun x3801 ((x207 Int)) Int 0)
(define-fun x678 ((x207 Int)) Int (ite x3887 (x1893 x207) (x3801 x207)))
(define-fun x1639 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 x2769)) (x678 x207) (x1141 x207)))
(define-fun x260 ((x207 Int)) Int (ite (and (<= 0 x207) (> x2769 x207)) (x1639 x207) (x4148 x207)))
(define-fun x1801 ((x207 Int)) Int (ite (= 128 x207) 94926909962862326217726538024181891405690106632559804934698421914364834480128 (x2375 x207)))
(define-fun x1234 ((x207 Int)) Int (ite (= x207 132) x819 (x1801 x207)))
(define-fun x1259 ((x207 Int)) Int (ite (= 164 x207) 128 (x1234 x207)))
(define-fun x1987 ((x207 Int)) Int (ite (= x207 260) x835 (x1259 x207)))
(define-fun x800 ((x207 Int)) Int (ite (= 292 x207) x261 (x1987 x207)))
(define-fun x2934 ((x207 Int)) Int (ite (= 292 x207) x2995 (x1987 x207)))
(define-fun x3553 ((x207 Int)) Int (ite x4280 (ite x1016 (x1987 x207) (x800 x207)) (x2934 x207)))
(define-fun x267 ((x207 Int)) Int (ite (= 196 x207) x1421 (x3553 x207)))
(define-fun x4382 ((x207 Int)) Int (ite (= x207 228) x1503 (x267 x207)))
(define-fun x1009 ((x207 Int)) Int (ite (= x207 x3890) x1089 (x4382 x207)))
(define-fun x3859 ((x207 Int)) Int (ite (= x207 x27) x2344 (x1009 x207)))
(define-fun x1475 ((x207 Int)) Int (ite (= x27 x207) x2781 (x1009 x207)))
(define-fun x641 ((x207 Int)) Int (ite x2402 (ite x2975 (x1009 x207) (x3859 x207)) (x1475 x207)))
(define-fun x1929 ((x207 Int)) Int (ite (and (>= x207 164) (< x207 x2086)) (x641 (+ 128 x207)) (x1574 x207)))
(define-fun x2176 ((x207 Int)) Int (ite (and (>= x207 128) (< x207 (+ x2322 128))) (x1929 (+ x207 36)) (x2437 x207)))
(define-fun x1508 ((x207 Int)) Int (ite (= x1006 x207) 0 (x2176 x207)))
(define-fun x3586 ((x207 Int)) Int (ite (= x1818 x207) x4472 (x1508 x207)))
(define-fun x1642 ((x207 Int)) Int (ite (and (<= 128 x207) (> (+ 128 x3679) x207)) (x1929 (- (+ x2074 x207) 128)) (x3586 x207)))
(define-fun x4262 ((x207 Int)) Int (ite (= x207 x907) 0 (x1642 x207)))
(define-fun x3356 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x4262 x207)))
(define-fun x2206 ((x207 Int)) Int (ite (= 132 x207) 32 (x3356 x207)))
(define-fun x2231 ((x207 Int)) Int (ite (= 164 x207) 33 (x2206 x207)))
(define-fun x2991 ((x207 Int)) Int (ite (= x207 196) 35477284059277649309253622239531857712935939529143554018288893216769000107873 (x2231 x207)))
(define-fun x3275 ((x207 Int)) Int (ite (= 228 x207) 45231284858326638837332416019018714005183587760015845327913118753091066265600 (x2991 x207)))
(define-fun x2393 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 132)) (x3275 (+ 128 x207)) (x269 x207)))
(define-fun x4367 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3586 x207)))
(define-fun x2141 ((x207 Int)) Int (ite (= 132 x207) 32 (x4367 x207)))
(define-fun x4008 ((x207 Int)) Int (ite (= 164 x207) 35 (x2141 x207)))
(define-fun x1892 ((x207 Int)) Int (ite (= x207 196) 35477284059277649309253622239531857712935939630608236286772267603529442882419 (x4008 x207)))
(define-fun x4129 ((x207 Int)) Int (ite (= x207 228) 44057028636630039105102054091366763171729008530599747929804322044178077843456 (x1892 x207)))
(define-fun x2056 ((x207 Int)) Int (ite (and (<= 0 x207) (> 132 x207)) (x4129 (+ x207 128)) (x269 x207)))
(define-fun x985 ((x207 Int)) Int (ite x3677 (x269 x207) (ite x4059 (x269 x207) (ite x2410 (x269 x207) (ite x189 (x269 x207) (ite x3570 (x2393 x207) (x2056 x207)))))))
(define-fun x799 ((x207 Int)) Int 0)
(define-fun x1598 ((x207 Int)) Int (ite x560 (x985 x207) (x799 x207)))
(define-fun x1729 ((x207 Int)) Int (ite (and (<= 0 x207) (> x2438 x207)) (x1598 x207) (x1141 x207)))
(define-fun x730 ((x207 Int)) Int (ite (and (< x207 x2438) (<= 0 x207)) (x1729 x207) (x4148 x207)))
(define-fun x4172 ((x207 Int)) Int (ite (= x207 128) 107317874183463056701504662589741776198067464202343767264461527615735374807040 (x3158 x207)))
(define-fun x1758 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 4)) (x4172 (+ x207 128)) (x2131 x207)))
(define-fun x2586 ((x207 Int)) Int (ite (= x207 128) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3158 x207)))
(define-fun x1956 ((x207 Int)) Int (ite (= 132 x207) 32 (x2586 x207)))
(define-fun x2765 ((x207 Int)) Int (ite (= 164 x207) 12 (x1956 x207)))
(define-fun x757 ((x207 Int)) Int (ite (= x207 196) 38584857114614344130707641774870441135179346817440091772946614992565446901760 (x2765 x207)))
(define-fun x2477 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 100)) (x757 (+ 128 x207)) (x2131 x207)))
(define-fun x1449 ((x207 Int)) Int (ite x2428 (x1758 x207) (x2477 x207)))
(define-fun x3499 ((x207 Int)) Int (ite x445 (x1449 x207) (x2131 x207)))
(define-fun x4170 ((x207 Int)) Int (ite (and (> x2713 x207) (>= x207 0)) (x3499 x207) (x1141 x207)))
(define-fun x2693 ((x207 Int)) Int (ite (and (<= 0 x207) (> x2713 x207)) (x4170 x207) (x4148 x207)))
(define-fun x2259 ((x207 Int)) Int (ite (= 4 x207) 17 (x1141 x207)))
(define-fun x4447 ((x207 Int)) Int (ite (and (<= 0 x207) (< x207 36)) (x2259 x207) (x4148 x207)))
(define-fun x2277 ((x207 Int)) Int (ite (= x207 4) 17 (x1141 x207)))
(define-fun x1237 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 36)) (x2277 x207) (x4148 x207)))
(define-fun x2475 ((x207 Int)) Int (ite x2527 (x2422 x207) (ite x938 (x31 x207) (ite x233 (x3162 x207) (ite x1706 (x1017 x207) (ite x1603 (x3374 x207) (ite x4020 (x616 x207) (ite x491 (x4148 x207) (ite x1046 (x4390 x207) (ite x1227 (x4148 x207) (ite x1867 (x3963 x207) (ite x579 (x4148 x207) (ite x1136 (x260 x207) (ite x2232 (x4148 x207) (ite x1500 (x730 x207) (ite x3738 (x4148 x207) (ite x3488 (x4148 x207) (ite x1448 (x4148 x207) (ite x425 (x4148 x207) (ite x468 (x4148 x207) (ite x1545 (x2693 x207) (ite x3310 (x4148 x207) (ite x1298 (x4447 x207) (ite x3549 (x1237 x207) (x4148 x207)))))))))))))))))))))))))
(define-fun x586 ((x207 Int)) Int (ite x1250 (x2475 x207) (x4148 x207)))
(define-fun x3159 ((x207 Int)) Int (ite x2217 (x1979 x207) (x586 x207)))
(define-fun x1114 ((x207 Int)) Int 0)
(define-fun x2739 ((x207 Int)) Int (ite x1400 (x3159 x207) (ite x3964 (x1114 x207) (x3159 x207))))
(define-fun x1868 ((x207 Int)) Int (ite (and (< x207 x1423) (>= x207 0)) (x2739 x207) (x833 x207)))
(define-fun x37 ((x207 Int)) Int (ite (and (> x1423 x207) (<= 0 x207)) (x1868 x207) (x354 x207)))
(define-fun x4516 ((x207 Int)) Int (ite (= x207 128) 18563399957492015340621713183830377045030061062230639968016343144629396307968 (x833 x207)))
(define-fun x209 ((x207 Int)) Int (ite (and (< x207 4) (<= 0 x207)) (x4516 (+ 128 x207)) (x354 x207)))
(define-fun x4025 ((x207 Int)) Int (ite (= x207 128) 59118985759084958080972419199848406897631161684926069324597705158744233476096 (x833 x207)))
(define-fun x2450 ((x207 Int)) Int (ite (and (>= x207 0) (< x207 4)) (x4025 (+ x207 128)) (x354 x207)))
(define-fun x3584 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x833 x207)))
(define-fun x499 ((x207 Int)) Int (ite (= 132 x207) 32 (x3584 x207)))
(define-fun x790 ((x207 Int)) Int (ite (= 164 x207) 10 (x499 x207)))
(define-fun x3943 ((x207 Int)) Int (ite (= 196 x207) 37212044363551391237827125972600881127463135526663889129579209803314629705728 (x790 x207)))
(define-fun x3340 ((x207 Int)) Int (ite (and (<= 0 x207) (> 100 x207)) (x3943 (+ 128 x207)) (x354 x207)))
(define-fun x2360 ((x207 Int)) Int (ite x1223 (x354 x207) (ite x688 (x931 x207) (ite x3519 (x2897 x207) (ite x104 (x3116 x207) (ite x1528 (x37 x207) (ite x1767 (x209 x207) (ite x4474 (x2450 x207) (x3340 x207)))))))))
(define-fun x3860 ((x207 Int)) Int (ite (= x207 0) x1316 (x354 x207)))
(define-fun x3302 ((x207 Int)) Int (ite x2308 (x2360 x207) (x3860 x207)))
(define-fun x4271 ((x207 Int)) Int (x526 x207))
(define-fun x2241 ((x207 Int)) Int (ite (= 128 x207) 3963877391197344453575983046348115674221700746820753546331534351508065746944 (x3750 x207)))
(define-fun x2877 ((x207 Int)) Int (ite (= 132 x207) 32 (x2241 x207)))
(define-fun x1425 ((x207 Int)) Int (ite (= 164 x207) 38 (x2877 x207)))
(define-fun x4495 ((x207 Int)) Int (ite (= x207 196) 35477284059277649309253622239531857712935939406416048698883813673932370764389 (x1425 x207)))
(define-fun x2047 ((x207 Int)) Int (ite (= x207 228) 14609135308879574245051756109060786979925523914932377087145621868633940557824 (x4495 x207)))
(define-fun x704 ((x207 Int)) Int (ite (and (>= x207 0) (> 132 x207)) (x2047 (+ 128 x207)) (x1129 x207)))
(define-fun x175 ((x207 Int)) Int (ite x61 (x1129 x207) (ite x1209 (x1129 x207) (ite x4191 (x1129 x207) (ite x994 (x1129 x207) (ite x4444 (x704 x207) (x1129 x207)))))))
(define-fun x4462 ((x207 Int)) Int (ite x3505 (x175 x207) (x1129 x207)))
(define-fun x3760 ((x207 Int)) Int (ite (= 192 x207) x3333 (x3091 x207)))
(define-fun x2635 ((x207 Int)) Int (ite x1673 (x3150 x207) (ite x2813 (ite x1240 (x3091 x207) (x3760 x207)) (x1387 x207))))
(define-fun x4323 ((x207 Int)) Int (ite (and (< x207 (+ x2858 x722)) (>= x207 x2858)) (x4245 (- (+ x3851 x207) x2858)) (x2635 x207)))
(define-fun x2266 ((x207 Int)) Int (ite (= x3002 x207) 0 (x4323 x207)))
(define-fun x1256 ((x207 Int)) Int (ite x589 (x2266 x207) (x2635 x207)))
(define-fun x3131 ((x207 Int)) Int (ite (= x207 x2858) x722 (x1256 x207)))
(define-fun x2698 ((x207 Int)) Int (ite (and (< x207 (+ x3843 x722)) (<= x3843 x207)) (x4245 (- (+ x3851 x207) x3843)) (x3131 x207)))
(define-fun x317 ((x207 Int)) Int (ite (= x1555 x207) 0 (x2698 x207)))
(define-fun x1749 ((x207 Int)) Int (ite (= x207 x3952) x845 (x317 x207)))
(define-fun x467 ((x207 Int)) Int (ite (and (> (+ x845 x4045) x207) (>= x207 x4045)) (x4245 (- (+ x207 x1683) x4045)) (x1749 x207)))
(define-fun x3620 ((x207 Int)) Int (ite (= x2700 x207) 0 (x467 x207)))
(define-fun x781 ((x207 Int)) Int (ite (= x2041 x207) x2602 (x3620 x207)))
(define-fun x789 ((x207 Int)) Int (ite (= x4287 x207) 128 (x781 x207)))
(define-fun x2801 ((x207 Int)) Int (ite (= x207 x2390) x3669 (x789 x207)))
(define-fun x2417 ((x207 Int)) Int (ite (= x207 x446) x2378 (x2801 x207)))
(define-fun x2912 ((x207 Int)) Int (ite (= x207 x3800) x369 (x2417 x207)))
(define-fun x2153 ((x207 Int)) Int (ite (= x4072 x207) x4002 (x2912 x207)))
(define-fun x1340 ((x207 Int)) Int (ite (= x207 x1137) 1 (x3528 x207)))
(define-fun x3595 ((x207 Int)) Int (ite (= x207 128) 8365236128558009046904410293209581292053118695343348878262597880337030709248 (x1800 x207)))
(define-fun x1109 ((x207 Int)) Int (ite (= 132 x207) x758 (x3595 x207)))
(define-fun x1903 ((x207 Int)) Int (ite (= 128 x207) x3453 (x1109 x207)))
(define-fun x4098 ((x207 Int)) Int (ite (= 128 x207) x396 (x1109 x207)))
(define-fun x4177 ((x207 Int)) Int (ite x3339 (x1887 x207) (x2116 x207)))
(define-fun x1113 ((x207 Int)) Int (ite x4215 (x2116 x207) (ite x3775 (x4177 x207) (ite x2351 (x4177 x207) (x2116 x207)))))
(define-fun x4552 ((x207 Int)) Int (ite x430 (x2116 x207) (ite x4029 (x2116 x207) (x1113 x207))))
(define-fun x1442 ((x207 Int)) Int (ite x1250 (x2116 x207) (ite x4270 (x4552 x207) (x2116 x207))))
(define-fun x1523 ((x207 Int)) Int (ite x1400 (ite x2217 (x2116 x207) (x1442 x207)) (ite x3964 (x2116 x207) (ite x2217 (x2116 x207) (x1442 x207)))))
(define-fun x3214 ((x207 Int)) Int (ite x3339 (x1519 x207) (x3922 x207)))
(define-fun x3192 ((x207 Int)) Int (ite x4215 (x3922 x207) (ite x3775 (x3214 x207) (ite x2351 (x3214 x207) (x3922 x207)))))
(define-fun x2786 ((x207 Int)) Int (ite x430 (x3922 x207) (ite x4029 (x3922 x207) (x3192 x207))))
(define-fun x4351 ((x207 Int)) Int (ite x1250 (x3922 x207) (ite x4270 (x2786 x207) (x3922 x207))))
(define-fun x3423 ((x207 Int)) Int (ite x1400 (ite x2217 (x3922 x207) (x4351 x207)) (ite x3964 (x3922 x207) (ite x2217 (x3922 x207) (x4351 x207)))))
(define-fun x4094 ((x207 Int)) Int (ite (= x2703 x207) x4333 (x520 x207)))
(define-fun x4317 ((x207 Int)) Int (ite x3401 (x520 x207) (x4094 x207)))
(define-fun x4221 ((x207 Int)) Int (ite x3339 (x1682 x207) (x520 x207)))
(define-fun x2134 ((x207 Int)) Int (ite x4215 (x520 x207) (ite x3775 (x4221 x207) (ite x2351 (x4221 x207) (x520 x207)))))
(define-fun x2216 ((x207 Int)) Int (ite x430 (x520 x207) (ite x4029 (x520 x207) (x2134 x207))))
(define-fun x4341 ((x207 Int)) Int (ite x1250 (x520 x207) (ite x4270 (x2216 x207) (x520 x207))))
(define-fun x3959 ((x207 Int)) Int (ite x1400 (ite x2217 (x4317 x207) (x4341 x207)) (ite x3964 (x520 x207) (ite x2217 (x4317 x207) (x4341 x207)))))
(define-fun x3016 ((x207 Int)) Int (ite x3339 (x2372 x207) (x3389 x207)))
(define-fun x3226 ((x207 Int)) Int (ite x4215 (x3389 x207) (ite x3775 (x3016 x207) (ite x2351 (x3016 x207) (x3389 x207)))))
(define-fun x1019 ((x207 Int)) Int (ite x430 (x3389 x207) (ite x4029 (x3389 x207) (x3226 x207))))
(define-fun x2387 ((x207 Int)) Int (ite x1250 (x3389 x207) (ite x4270 (x1019 x207) (x3389 x207))))
(define-fun x1391 ((x207 Int)) Int (ite x1400 (ite x2217 (x3389 x207) (x2387 x207)) (ite x3964 (x3389 x207) (ite x2217 (x3389 x207) (x2387 x207)))))
(define-fun x868 ((x207 Int)) Int (ite x3339 (x4110 x207) (x4398 x207)))
(define-fun x3682 ((x207 Int)) Int (ite x4215 (x4398 x207) (ite x3775 (x868 x207) (ite x2351 (x868 x207) (x4398 x207)))))
(define-fun x3516 ((x207 Int)) Int (ite x430 (x4398 x207) (ite x4029 (x4398 x207) (x3682 x207))))
(define-fun x1084 ((x207 Int)) Int (ite x1250 (x4398 x207) (ite x4270 (x3516 x207) (x4398 x207))))
(define-fun x1701 ((x207 Int)) Int (ite x1400 (ite x2217 (x4398 x207) (x1084 x207)) (ite x3964 (x4398 x207) (ite x2217 (x4398 x207) (x1084 x207)))))
(define-fun x2382 ((x207 Int)) Int (ite x3339 (x567 x207) (x2598 x207)))
(define-fun x4101 ((x207 Int)) Int (ite x4215 (x2598 x207) (ite x3775 (x2382 x207) (ite x2351 (x2382 x207) (x2598 x207)))))
(define-fun x1073 ((x207 Int)) Int (ite x430 (x2598 x207) (ite x4029 (x2598 x207) (x4101 x207))))
(define-fun x3233 ((x207 Int)) Int (ite x1250 (x2598 x207) (ite x4270 (x1073 x207) (x2598 x207))))
(define-fun x146 ((x207 Int)) Int (ite x1400 (ite x2217 (x2598 x207) (x3233 x207)) (ite x3964 (x2598 x207) (ite x2217 (x2598 x207) (x3233 x207)))))
(define-fun x265 ((x207 Int)) Int (x2415 x207))
(define-fun x3802 ((x207 Int)) Int (x15 x207))
(define-fun x2026 ((x207 Int)) Int (ite x3339 (x179 x207) (x3521 x207)))
(define-fun x340 ((x207 Int)) Int (ite x4215 (x3521 x207) (ite x3775 (x2026 x207) (ite x2351 (x2026 x207) (x3521 x207)))))
(define-fun x3270 ((x207 Int)) Int (ite x430 (x3521 x207) (ite x4029 (x3521 x207) (x340 x207))))
(define-fun x1932 ((x207 Int)) Int (ite x1250 (x3521 x207) (ite x4270 (x3270 x207) (x3521 x207))))
(define-fun x3893 ((x207 Int)) Int (ite x1400 (ite x2217 (x3521 x207) (x1932 x207)) (ite x3964 (x3521 x207) (ite x2217 (x3521 x207) (x1932 x207)))))
(define-fun x2730 ((x207 Int)) Int (ite x3339 (x1332 x207) (x2510 x207)))
(define-fun x826 ((x207 Int)) Int (ite x4215 (x2510 x207) (ite x3775 (x2730 x207) (ite x2351 (x2730 x207) (x2510 x207)))))
(define-fun x1986 ((x207 Int)) Int (ite x430 (x2510 x207) (ite x4029 (x2510 x207) (x826 x207))))
(define-fun x2761 ((x207 Int)) Int (ite x1250 (x2510 x207) (ite x4270 (x1986 x207) (x2510 x207))))
(define-fun x3921 ((x207 Int)) Int (ite x1400 (ite x2217 (x2510 x207) (x2761 x207)) (ite x3964 (x2510 x207) (ite x2217 (x2510 x207) (x2761 x207)))))
(define-fun x1610 ((x207 Int)) Int (x2537 x207))
(define-fun x4414 ((x207 Int)) Int (x2534 x207))
(define-fun x3897 ((x207 Int)) Int (ite x3339 (x952 x207) (x3543 x207)))
(define-fun x3132 ((x207 Int)) Int (ite x4215 (x3543 x207) (ite x3775 (x3897 x207) (ite x2351 (x3897 x207) (x3543 x207)))))
(define-fun x748 ((x207 Int)) Int (ite x430 (x3543 x207) (ite x4029 (x3543 x207) (x3132 x207))))
(define-fun x3134 ((x207 Int)) Int (ite x1250 (x3543 x207) (ite x4270 (x748 x207) (x3543 x207))))
(define-fun x831 ((x207 Int)) Int (ite x1400 (ite x2217 (x3543 x207) (x3134 x207)) (ite x3964 (x3543 x207) (ite x2217 (x3543 x207) (x3134 x207)))))
(define-fun x1606 ((x207 Int)) Int (ite x3339 (x2138 x207) (x3071 x207)))
(define-fun x1518 ((x207 Int)) Int (ite x4215 (x3071 x207) (ite x3775 (x1606 x207) (ite x2351 (x1606 x207) (x3071 x207)))))
(define-fun x1884 ((x207 Int)) Int (ite x430 (x3071 x207) (ite x4029 (x3071 x207) (x1518 x207))))
(define-fun x2623 ((x207 Int)) Int (ite x1250 (x3071 x207) (ite x4270 (x1884 x207) (x3071 x207))))
(define-fun x1374 ((x207 Int)) Int (ite x1400 (ite x2217 (x3071 x207) (x2623 x207)) (ite x3964 (x3071 x207) (ite x2217 (x3071 x207) (x2623 x207)))))
(define-fun x4481 ((x207 Int)) Int (ite x3339 (x1531 x207) (x2653 x207)))
(define-fun x2383 ((x207 Int)) Int (ite x4215 (x2653 x207) (ite x3775 (x4481 x207) (ite x2351 (x4481 x207) (x2653 x207)))))
(define-fun x2909 ((x207 Int)) Int (ite x430 (x2653 x207) (ite x4029 (x2653 x207) (x2383 x207))))
(define-fun x996 ((x207 Int)) Int (ite x1250 (x2653 x207) (ite x4270 (x2909 x207) (x2653 x207))))
(define-fun x3177 ((x207 Int)) Int (ite x1400 (ite x2217 (x2653 x207) (x996 x207)) (ite x3964 (x2653 x207) (ite x2217 (x2653 x207) (x996 x207)))))
(define-fun x3010 ((x207 Int)) Int (x4487 x207))
(define-fun x2212 ((x207 Int)) Int (ite x3339 (x3004 x207) (x1205 x207)))
(define-fun x1300 ((x207 Int)) Int (ite x4215 (x1205 x207) (ite x3775 (x2212 x207) (ite x2351 (x2212 x207) (x1205 x207)))))
(define-fun x1402 ((x207 Int)) Int (ite x430 (x1205 x207) (ite x4029 (x1205 x207) (x1300 x207))))
(define-fun x715 ((x207 Int)) Int (ite x1250 (x1205 x207) (ite x4270 (x1402 x207) (x1205 x207))))
(define-fun x1813 ((x207 Int)) Int (ite x1400 (ite x2217 (x1205 x207) (x715 x207)) (ite x3964 (x1205 x207) (ite x2217 (x1205 x207) (x715 x207)))))
(define-fun x2031 ((x207 Int)) Int (x696 x207))
(define-fun x1297 ((x207 Int)) Int (x1074 x207))
(define-fun x3363 ((x207 Int)) Int (ite x3339 (x3744 x207) (x2093 x207)))
(define-fun x4107 ((x207 Int)) Int (ite x4215 (x2093 x207) (ite x3775 (x3363 x207) (ite x2351 (x3363 x207) (x2093 x207)))))
(define-fun x1481 ((x207 Int)) Int (ite x430 (x2093 x207) (ite x4029 (x2093 x207) (x4107 x207))))
(define-fun x4249 ((x207 Int)) Int (ite x1250 (x2093 x207) (ite x4270 (x1481 x207) (x2093 x207))))
(define-fun x273 ((x207 Int)) Int (ite x1400 (ite x2217 (x2093 x207) (x4249 x207)) (ite x3964 (x2093 x207) (ite x2217 (x2093 x207) (x4249 x207)))))
(define-fun x1679 ((x207 Int)) Int (x1190 x207))
(define-fun x4031 ((x207 Int)) Int (ite x3339 (x2454 x207) (x3476 x207)))
(define-fun x3238 ((x207 Int)) Int (ite x4215 (x3476 x207) (ite x3775 (x4031 x207) (ite x2351 (x4031 x207) (x3476 x207)))))
(define-fun x2753 ((x207 Int)) Int (ite x430 (x3476 x207) (ite x4029 (x3476 x207) (x3238 x207))))
(define-fun x1530 ((x207 Int)) Int (ite x1250 (x3476 x207) (ite x4270 (x2753 x207) (x3476 x207))))
(define-fun x2941 ((x207 Int)) Int (ite x1400 (ite x2217 (x3476 x207) (x1530 x207)) (ite x3964 (x3476 x207) (ite x2217 (x3476 x207) (x1530 x207)))))
(define-fun x656 ((x207 Int)) Int (x1340 x207))
(define-fun x4198 ((x207 Int)) Int (ite (= x3591 x207) x4342 (x3686 x207)))
(define-fun x2833 ((x207 Int)) Int (ite (= x1752 x207) x812 (x4198 x207)))
(define-fun x1484 ((x207 Int)) Int (ite (= x3591 x207) x2148 (x2833 x207)))
(define-fun x3998 ((x207 Int)) Int (ite (= x4164 x207) x2447 (x1484 x207)))
(define-fun x122 ((x207 Int)) Int (ite x3339 (x3940 x207) (x3998 x207)))
(define-fun x867 ((x207 Int)) Int (ite (= x4164 x207) x848 (x122 x207)))
(define-fun x1248 ((x207 Int)) Int (ite (= x3591 x207) x1397 (x867 x207)))
(define-fun x2697 ((x207 Int)) Int (ite x2217 (x2833 x207) (ite x1250 (x2833 x207) (ite x4270 (ite x430 (x2833 x207) (ite x4029 (x2833 x207) (ite x4215 (x2833 x207) (ite x3775 (x122 x207) (ite x2351 (x1248 x207) (x2833 x207)))))) (x2833 x207)))))
(define-fun x1185 ((x207 Int)) Int (ite (= x207 x1752) x1689 (x2697 x207)))
(define-fun x2676 ((x207 Int)) Int (ite (= x207 x3591) x625 (x1185 x207)))
(define-fun x993 ((x207 Int)) Int (ite x1400 (x2697 x207) (ite x3964 (x3686 x207) (x2676 x207))))
(define-fun x437 ((x207 Int)) Int (x526 x207))
(define-fun x3430 ((x207 Int)) Int (ite x2892 (x1903 x207) (ite x3280 (x1109 x207) (x4098 x207))))
(define-fun x3672 ((x207 Int)) Int (ite (= 160 x207) 36180046632115354981904271164172418022085455641023445553456023893925156618240 (x3430 x207)))
(define-fun x2785 ((x207 Int)) Int (ite (= 164 x207) x3591 (x3672 x207)))
(define-fun x5 ((x207 Int)) Int (ite (= x207 160) 97822624453686575479804928673988797637476738513438931194560248106084831592448 (x2785 x207)))
(define-fun x3559 ((x207 Int)) Int (ite (= 164 x207) x1127 (x5 x207)))
(define-fun x2689 ((x207 Int)) Int (ite (= x207 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x1491 x207)))
(define-fun x4144 ((x207 Int)) Int (ite (= 132 x207) x1117 (x2689 x207)))
(define-fun x3446 ((x207 Int)) Int (ite (= x207 164) x3119 (x4144 x207)))
(define-fun x2264 ((x207 Int)) Int (ite (= 196 x207) x2814 (x3446 x207)))
(define-fun x2694 ((x207 Int)) Int (ite (= x207 228) x3387 (x2264 x207)))
(define-fun x221 ((x207 Int)) Int (ite (= x207 128) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x1491 x207)))
(define-fun x293 ((x207 Int)) Int (ite (= 132 x207) x4300 (x221 x207)))
(define-fun x2511 ((x207 Int)) Int (ite (= 164 x207) x1118 (x293 x207)))
(define-fun x3908 ((x207 Int)) Int 0)
(define-fun x1275 ((x207 Int)) Int (ite (= 128 x207) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x1491 x207)))
(define-fun x672 ((x207 Int)) Int (ite (= 132 x207) x4377 (x1275 x207)))
(define-fun x1774 ((x207 Int)) Int (ite (= 164 x207) x872 (x672 x207)))
(define-fun x3727 ((x207 Int)) Int (ite (= x207 196) x2859 (x1774 x207)))
(define-fun x4272 ((x207 Int)) Int (ite (= x2774 x207) x631 (x993 x207)))
(define-fun x2226 ((x207 Int)) Int (ite (= x207 x1133) x4014 (x4272 x207)))
(define-fun x4497 ((x207 Int)) Int (ite (= x207 x1133) x1811 (x2226 x207)))
(define-fun x4480 ((x207 Int)) Int (ite (= 128 x207) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x1491 x207)))
(define-fun x521 ((x207 Int)) Int (ite (= 132 x207) x2501 (x4480 x207)))
(define-fun x198 ((x207 Int)) Int (ite (= x207 x3591) x633 (x993 x207)))
(define-fun x4477 ((x207 Int)) Int (ite (= x2501 x207) x3723 (x198 x207)))
(define-fun x69 ((x207 Int)) Int 0)
(define-fun x1479 ((x207 Int)) Int (ite (= 128 x207) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x1491 x207)))
(define-fun x1769 ((x207 Int)) Int (ite (= 132 x207) x2350 (x1479 x207)))
(define-fun x939 ((x207 Int)) Int (ite (and (<= 160 x207) (< x207 192)) (x953 (- x207 160)) (x4358 x207)))
(define-fun x534 ((x207 Int)) Int (ite x3751 (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))))) (ite x2122 (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))))) (ite x1472 (ite x2238 (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))))) (ite x769 (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))))) (ite x2355 (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))))) (ite x856 (ite x1751 (x3452 x207) (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207))))))) (ite x531 (ite x1751 (x3452 x207) (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207))))))) (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207))))))))))) (ite x1400 (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207)))) (ite x3964 (x2193 x207) (ite x2217 (x2193 x207) (ite x1250 (x2193 x207) (ite x4270 (ite x430 (x2193 x207) (ite x4029 (x2193 x207) (ite x4215 (x2193 x207) (ite x3775 (ite x3339 (x2775 x207) (x2193 x207)) (ite x2351 (ite x3339 (x2775 x207) (x2193 x207)) (x2193 x207)))))) (x2193 x207))))))))))
(define-fun x1057 ((x207 Int)) Int (ite (= x207 x3273) 0 (x1340 x207)))
(define-fun x1789 ((x207 Int)) Int (ite (= x207 x750) 1 (x696 x207)))
(define-fun x877 ((x207 Int)) Int (ite (= x207 x1316) 1 (x534 x207)))
(define-fun x2742 ((x207 Int)) Int (ite (and (<= x1765 x207) (> (+ 32 x1765) x207)) (x3302 (- x207 x1765)) (x419 x207)))
(define-fun x4500 ((x207 Int)) Int (ite (= x1447 x207) x184 (x2153 x207)))
(define-fun x1282 ((x207 Int)) Int (ite x4303 (x2153 x207) (ite x4364 (x2912 x207) (ite x1375 (x2417 x207) (ite x72 (x2801 x207) (x4500 x207))))))
(define-fun x4520 ((x207 Int)) Int (ite (= x207 x1937) 0 (x1282 x207)))
(define-fun x2683 ((x207 Int)) Int (ite (= x3816 x207) x2980 (x4520 x207)))
(define-fun x3098 ((x207 Int)) Int (ite (= x3431 x207) x1292 (x2683 x207)))
(define-fun x2053 ((x207 Int)) Int (ite (= x207 x860) x3612 (x3098 x207)))
(define-fun x4455 ((x207 Int)) Int (ite (= x3185 x207) x2563 (x2053 x207)))
(define-fun x1803 ((x207 Int)) Int (ite (= x207 x3056) x1144 (x4455 x207)))
(define-fun x753 ((x207 Int)) Int (ite (= x2492 x207) x2057 (x1803 x207)))
(define-fun x2583 ((x207 Int)) Int (ite (= x207 x3351) x689 (x753 x207)))
(define-fun x3095 ((x207 Int)) Int (ite x3092 (x753 x207) (ite x2457 (x1803 x207) (ite x4212 (x4455 x207) (ite x4376 (x2053 x207) (x2583 x207))))))
(define-fun x4320 ((x207 Int)) Int (ite (= x207 x2068) 0 (x3095 x207)))
(define-fun x1583 ((x207 Int)) Int (ite (= x207 x420) x4145 (x4320 x207)))
(define-fun x3074 ((x207 Int)) Int (ite (= x4113 x207) x4216 (x1583 x207)))
(define-fun x3540 ((x207 Int)) Int (ite (= x3667 x207) x2732 (x3074 x207)))
(define-fun x2629 ((x207 Int)) Int (ite (and (>= x207 x1435) (< x207 (+ x1435 x2732))) (x4462 (- x207 x1435)) (x3540 x207)))
(define-fun x2604 ((x207 Int)) Int (ite (= x1808 x207) x351 (x2629 x207)))
(define-fun x2339 ((x207 Int)) Int (ite (= x2024 x207) x2257 (x2604 x207)))
(define-fun x1611 ((x207 Int)) Int (ite (= x628 x207) x3316 (x2339 x207)))
(define-fun x183 ((x207 Int)) Int (ite (= x4137 x207) x2058 (x1611 x207)))
(define-fun x4526 ((x207 Int)) Int (ite x3427 (x1611 x207) (ite x2996 (x2339 x207) (ite x309 (x2604 x207) (ite x2029 (x2629 x207) (x183 x207))))))
(define-fun x3069 ((x207 Int)) Int (ite (= x1221 x207) 0 (x4526 x207)))
(define-fun x2684 ((x207 Int)) Int (ite (= x207 x3348) x837 (x3069 x207)))
(define-fun x2905 ((x207 Int)) Int (ite (= x1808 x207) x2602 (x2684 x207)))
(define-fun x3693 ((x207 Int)) Int (ite (= x4329 x207) 160 (x2905 x207)))
(define-fun x4042 ((x207 Int)) Int (ite (= x2868 x207) x1452 (x3693 x207)))
(define-fun x87 ((x207 Int)) Int (ite (= x1725 x207) x2120 (x4042 x207)))
(define-fun x3376 ((x207 Int)) Int (ite (= x207 x4214) x3945 (x87 x207)))
(define-fun x3318 ((x207 Int)) Int (ite (= x1145 x207) x2126 (x3376 x207)))
(define-fun x4541 ((x207 Int)) Int (ite (= x2072 x207) x389 (x3318 x207)))
(define-fun x1054 ((x207 Int)) Int (ite x3403 (x3318 x207) (ite x3225 (x3376 x207) (ite x4081 (x87 x207) (ite x3231 (x4042 x207) (x4541 x207))))))
(define-fun x598 ((x207 Int)) Int (ite (= x207 x235) 0 (x1054 x207)))
(define-fun x2278 ((x207 Int)) Int (ite (= x2956 x207) x2980 (x598 x207)))
(define-fun x3933 ((x207 Int)) Int (ite (= x1252 x207) x2860 (x2278 x207)))
(define-fun x1302 ((x207 Int)) Int (ite (= x207 x3655) x3784 (x3933 x207)))
(define-fun x234 ((x207 Int)) Int (ite (= x3375 x207) x4019 (x1302 x207)))
(define-fun x3230 ((x207 Int)) Int (ite (= x3360 x207) x3665 (x234 x207)))
(define-fun x4126 ((x207 Int)) Int (ite (= x207 x3990) x1288 (x3230 x207)))
(define-fun x1559 ((x207 Int)) Int (ite (= x4127 x207) x3714 (x4126 x207)))
(define-fun x3580 ((x207 Int)) Int (ite x548 (x4126 x207) (ite x4295 (x3230 x207) (ite x4067 (x234 x207) (ite x1045 (x1302 x207) (x1559 x207))))))
(define-fun x4001 ((x207 Int)) Int (ite (= x207 x2549) 0 (x3580 x207)))
(define-fun x3966 ((x207 Int)) Int (ite (= x934 x207) x4206 (x4001 x207)))
(define-fun x984 ((x207 Int)) Int (ite (= x207 x3352) x3149 (x526 x207)))
(define-fun x1901 ((x207 Int)) Int (ite (and (> x3716 x207) (<= 164 x207)) (x3074 (- (+ x207 (x3626 (+ x4113 164))) 164)) (x662 x207)))
(define-fun x1373 ((x207 Int)) Int (ite (= x207 x2192) x1026 (x3902 x207)))
(define-fun x1231 ((x207 Int)) Int (ite (and (> (+ x1026 x3358) x207) (<= x3358 x207)) (x1901 (- (+ x319 x207) x3358)) (x2915 x207)))
(define-fun x3321 ((x207 Int)) Int (ite (= x1960 x207) 0 (x1231 x207)))
(define-fun x2240 ((x207 Int)) Int (ite (= x1765 x207) 53968831973089624780961702553170747426560148566936995398294956610382735605760 (x3502 x207)))
(define-fun x951 ((x207 Int)) Int (ite (= x207 x3792) x256 (x2240 x207)))
(define-fun x967 ((x207 Int)) Int (ite (= x1341 x207) 0 (x951 x207)))
(define-fun x2870 ((x207 Int)) Int (ite x2217 (x3922 x207) (x4351 x207)))
(define-fun x4229 ((x207 Int)) Int (ite x2217 (x4398 x207) (x1084 x207)))
(define-fun x3724 ((x207 Int)) Int (ite x2217 (x3389 x207) (x2387 x207)))
(define-fun x3618 ((x207 Int)) Int (ite x2217 (x2598 x207) (x3233 x207)))
(define-fun x143 ((x207 Int)) Int (ite x2217 (x3521 x207) (x1932 x207)))
(define-fun x2043 ((x207 Int)) Int (x15 x207))
(define-fun x4319 ((x207 Int)) Int (x2534 x207))
(define-fun x4122 ((x207 Int)) Int (ite x2217 (x2116 x207) (x1442 x207)))
(define-fun x3858 ((x207 Int)) Int (x2537 x207))
(define-fun x1641 ((x207 Int)) Int (ite x2217 (x1205 x207) (x715 x207)))
(define-fun x1688 ((x207 Int)) Int (ite x2217 (x3543 x207) (x3134 x207)))
(define-fun x2362 ((x207 Int)) Int (ite x2217 (x3071 x207) (x2623 x207)))
(define-fun x3555 ((x207 Int)) Int (ite x2217 (x4317 x207) (x4341 x207)))
(define-fun x101 ((x207 Int)) Int (x4487 x207))
(define-fun x4194 ((x207 Int)) Int (ite x2217 (x2093 x207) (x4249 x207)))
(define-fun x333 ((x207 Int)) Int (x696 x207))
(define-fun x2669 ((x207 Int)) Int (x1074 x207))
(define-fun x2778 ((x207 Int)) Int (ite x2217 (x2510 x207) (x2761 x207)))
(define-fun x1079 ((x207 Int)) Int (x1190 x207))
(define-fun x2246 ((x207 Int)) Int (x2415 x207))
(define-fun x2395 ((x207 Int)) Int (ite x2217 (x3476 x207) (x1530 x207)))
(define-fun x3448 ((x207 Int)) Int (x1340 x207))
(define-fun x43 ((x207 Int)) Int (x526 x207))
(define-fun x2645 ((x207 Int)) Int (ite x2217 (x2653 x207) (x996 x207)))
(define-fun x3247 ((x207 Int)) Int (x437 x207))
(define-fun x3668 ((x207 Int)) Int (x2031 x207))
(define-fun x2154 ((x207 Int)) Int (x265 x207))
(define-fun x687 ((x207 Int)) Int (x1297 x207))
(define-fun x3077 ((x207 Int)) Int (x656 x207))
(define-fun x4179 ((x207 Int)) Int (x15 x207))
(define-fun x2609 ((x207 Int)) Int (x2534 x207))
(define-fun x1930 ((x207 Int)) Int (x2537 x207))
(define-fun x1594 ((x207 Int)) Int (x4487 x207))
(define-fun x2169 ((x207 Int)) Int (x696 x207))
(define-fun x891 ((x207 Int)) Int (x1074 x207))
(define-fun x3754 ((x207 Int)) Int (x2415 x207))
(define-fun x3736 ((x207 Int)) Int (x1340 x207))
(define-fun x1175 ((x207 Int)) Int (x1190 x207))
(define-fun x2243 ((x207 Int)) Int (x526 x207))
(define-fun x913 ((x207 Int)) Int (x696 x207))
(define-fun x3566 ((x207 Int)) Int (ite x4270 (x2786 x207) (x3922 x207)))
(define-fun x1200 ((x207 Int)) Int (ite x4270 (x1884 x207) (x3071 x207)))
(define-fun x3304 ((x207 Int)) Int (x1074 x207))
(define-fun x2861 ((x207 Int)) Int (ite x4270 (x1019 x207) (x3389 x207)))
(define-fun x3894 ((x207 Int)) Int (ite x4270 (x2909 x207) (x2653 x207)))
(define-fun x3731 ((x207 Int)) Int (ite x4270 (x1402 x207) (x1205 x207)))
(define-fun x593 ((x207 Int)) Int (ite x4270 (x1073 x207) (x2598 x207)))
(define-fun x1291 ((x207 Int)) Int (x526 x207))
(define-fun x2286 ((x207 Int)) Int (ite x4270 (x3270 x207) (x3521 x207)))
(define-fun x1262 ((x207 Int)) Int (ite x4270 (x2216 x207) (x520 x207)))
(define-fun x2281 ((x207 Int)) Int (x1190 x207))
(define-fun x2288 ((x207 Int)) Int (ite x4270 (x3516 x207) (x4398 x207)))
(define-fun x3554 ((x207 Int)) Int (x2537 x207))
(define-fun x601 ((x207 Int)) Int (ite x4270 (x4552 x207) (x2116 x207)))
(define-fun x3610 ((x207 Int)) Int (x1340 x207))
(define-fun x2321 ((x207 Int)) Int (x2415 x207))
(define-fun x919 ((x207 Int)) Int (ite x4270 (x748 x207) (x3543 x207)))
(define-fun x1556 ((x207 Int)) Int (ite x4270 (x2753 x207) (x3476 x207)))
(define-fun x1779 ((x207 Int)) Int (ite x4270 (x1986 x207) (x2510 x207)))
(define-fun x806 ((x207 Int)) Int (x4487 x207))
(define-fun x646 ((x207 Int)) Int (ite x4270 (x1481 x207) (x2093 x207)))
(define-fun x3244 ((x207 Int)) Int (x2534 x207))
(define-fun x2936 ((x207 Int)) Int (x15 x207))
(define-fun x4044 ((x207 Int)) Int (ite (= x2774 x207) x1823 (x2833 x207)))
(define-fun x3191 ((x207 Int)) Int (x696 x207))
(define-fun x98 ((x207 Int)) Int (x1190 x207))
(define-fun x4220 ((x207 Int)) Int (x1074 x207))
(define-fun x403 ((x207 Int)) Int (x526 x207))
(define-fun x1255 ((x207 Int)) Int (x15 x207))
(define-fun x536 ((x207 Int)) Int (x2415 x207))
(define-fun x511 ((x207 Int)) Int (x1340 x207))
(define-fun x1794 ((x207 Int)) Int (x2537 x207))
(define-fun x1177 ((x207 Int)) Int (x4487 x207))
(define-fun x1204 ((x207 Int)) Int (x2534 x207))
(define-fun x3317 ((x207 Int)) Int (x2598 x207))
(define-fun x523 ((x207 Int)) Int (x2653 x207))
(define-fun x3195 ((x207 Int)) Int (x3521 x207))
(define-fun x2229 ((x207 Int)) Int (x2093 x207))
(define-fun x3640 ((x207 Int)) Int (x526 x207))
(define-fun x3481 ((x207 Int)) Int (x520 x207))
(define-fun x2721 ((x207 Int)) Int (x4487 x207))
(define-fun x3637 ((x207 Int)) Int (x2415 x207))
(define-fun x1926 ((x207 Int)) Int (x15 x207))
(define-fun x3767 ((x207 Int)) Int (x2534 x207))
(define-fun x4079 ((x207 Int)) Int (x4398 x207))
(define-fun x4534 ((x207 Int)) Int (x3922 x207))
(define-fun x4530 ((x207 Int)) Int (x696 x207))
(define-fun x930 ((x207 Int)) Int (x1074 x207))
(define-fun x4478 ((x207 Int)) Int (x3543 x207))
(define-fun x3683 ((x207 Int)) Int (x2510 x207))
(define-fun x716 ((x207 Int)) Int (x2537 x207))
(define-fun x1161 ((x207 Int)) Int (x1205 x207))
(define-fun x2425 ((x207 Int)) Int (x3071 x207))
(define-fun x2600 ((x207 Int)) Int (x3476 x207))
(define-fun x1064 ((x207 Int)) Int (x1190 x207))
(define-fun x328 ((x207 Int)) Int (x2116 x207))
(define-fun x30 ((x207 Int)) Int (x3389 x207))
(define-fun x3937 ((x207 Int)) Int (x1340 x207))
(define-fun x206 ((x207 Int)) Int (ite (= x2774 x207) x3875 (x2833 x207)))
(define-fun x1269 ((x207 Int)) Int (ite (= x207 x3542) x1066 (x206 x207)))
(define-fun x1684 ((x207 Int)) Int (x2116 x207))
(define-fun x1352 ((x207 Int)) Int (x1684 x207))
(define-fun x1434 ((x207 Int)) Int (x696 x207))
(define-fun x3083 ((x207 Int)) Int (x1434 x207))
(define-fun x4399 ((x207 Int)) Int (x2653 x207))
(define-fun x414 ((x207 Int)) Int (x4399 x207))
(define-fun x3213 ((x207 Int)) Int (x2093 x207))
(define-fun x1229 ((x207 Int)) Int (x3213 x207))
(define-fun x3920 ((x207 Int)) Int (x3521 x207))
(define-fun x4136 ((x207 Int)) Int (x3920 x207))
(define-fun x4070 ((x207 Int)) Int (x1190 x207))
(define-fun x140 ((x207 Int)) Int (x4070 x207))
(define-fun x1776 ((x207 Int)) Int (x2598 x207))
(define-fun x1667 ((x207 Int)) Int (x1776 x207))
(define-fun x4460 ((x207 Int)) Int (x520 x207))
(define-fun x4087 ((x207 Int)) Int (x4460 x207))
(define-fun x4313 ((x207 Int)) Int (x15 x207))
(define-fun x1426 ((x207 Int)) Int (x4313 x207))
(define-fun x2671 ((x207 Int)) Int (x3389 x207))
(define-fun x1618 ((x207 Int)) Int (x2671 x207))
(define-fun x3644 ((x207 Int)) Int (x2510 x207))
(define-fun x1427 ((x207 Int)) Int (x3644 x207))
(define-fun x4278 ((x207 Int)) Int (x2537 x207))
(define-fun x561 ((x207 Int)) Int (x4278 x207))
(define-fun x815 ((x207 Int)) Int (x1340 x207))
(define-fun x3064 ((x207 Int)) Int (x815 x207))
(define-fun x1947 ((x207 Int)) Int (x526 x207))
(define-fun x65 ((x207 Int)) Int (x1947 x207))
(define-fun x4434 ((x207 Int)) Int (x3071 x207))
(define-fun x762 ((x207 Int)) Int (x4434 x207))
(define-fun x162 ((x207 Int)) Int (x1205 x207))
(define-fun x3557 ((x207 Int)) Int (x162 x207))
(define-fun x2371 ((x207 Int)) Int (x3476 x207))
(define-fun x606 ((x207 Int)) Int (x2371 x207))
(define-fun x1775 ((x207 Int)) Int (x4487 x207))
(define-fun x3607 ((x207 Int)) Int (x1775 x207))
(define-fun x254 ((x207 Int)) Int (x4398 x207))
(define-fun x2431 ((x207 Int)) Int (x254 x207))
(define-fun x2889 ((x207 Int)) Int (x2415 x207))
(define-fun x3709 ((x207 Int)) Int (x2889 x207))
(define-fun x2727 ((x207 Int)) Int (x2534 x207))
(define-fun x3115 ((x207 Int)) Int (x2727 x207))
(define-fun x1130 ((x207 Int)) Int (x3543 x207))
(define-fun x4208 ((x207 Int)) Int (x1130 x207))
(define-fun x1245 ((x207 Int)) Int (x3922 x207))
(define-fun x3311 ((x207 Int)) Int (x1245 x207))
(define-fun x1674 ((x207 Int)) Int (x1074 x207))
(define-fun x2069 ((x207 Int)) Int (x1674 x207))
(define-fun x2465 ((x207 Int)) Int (ite (and (< x207 (+ 128 x2322)) (>= x207 128)) (x1929 (+ 36 x207)) (x4262 x207)))
(define-fun x1721 ((x207 Int)) Int (ite (= x207 x3741) 0 (x2465 x207)))
(define-fun x977 ((x207 Int)) Int (ite (= x3495 x207) x1916 (x1721 x207)))
(define-fun x3027 ((x207 Int)) Int (ite (= x443 x207) 0 (x526 x207)))
(define-fun x1068 ((x207 Int)) Int (ite (= x207 128) x2322 (x977 x207)))
(define-fun x2638 ((x207 Int)) Int (ite (and (<= 160 x207) (< x207 (+ x2322 160))) (x1929 (+ 4 x207)) (x1068 x207)))
(define-fun x1060 ((x207 Int)) Int (ite (= x133 x207) 0 (x2638 x207)))
(define-fun x3588 ((x207 Int)) Int (ite (= x207 x3840) x3679 (x1060 x207)))
(define-fun x2896 ((x207 Int)) Int (ite (and (> (+ x213 x3679) x207) (>= x207 x213)) (x1929 (- (+ x2074 x207) x213)) (x3588 x207)))
(define-fun x2601 ((x207 Int)) Int (ite (= x207 x719) 0 (x2896 x207)))
(define-fun x4420 ((x207 Int)) Int (ite (= x207 x1463) 1 (x1340 x207)))
(define-fun x3094 ((x207 Int)) Int (x1434 x207))
(define-fun x1659 ((x207 Int)) Int (ite x4029 (x3476 x207) (x3238 x207)))
(define-fun x4550 ((x207 Int)) Int (ite x4029 (x3389 x207) (x3226 x207)))
(define-fun x3977 ((x207 Int)) Int (ite x4029 (x2653 x207) (x2383 x207)))
(define-fun x2711 ((x207 Int)) Int (x4070 x207))
(define-fun x2011 ((x207 Int)) Int (ite x4029 (x1205 x207) (x1300 x207)))
(define-fun x1102 ((x207 Int)) Int (ite x4029 (x3071 x207) (x1518 x207)))
(define-fun x119 ((x207 Int)) Int (ite x4029 (x2598 x207) (x4101 x207)))
(define-fun x2880 ((x207 Int)) Int (ite x4029 (x3521 x207) (x340 x207)))
(define-fun x2196 ((x207 Int)) Int (ite x4029 (x4398 x207) (x3682 x207)))
(define-fun x4409 ((x207 Int)) Int (x4313 x207))
(define-fun x2763 ((x207 Int)) Int (x1947 x207))
(define-fun x2500 ((x207 Int)) Int (ite x4029 (x2116 x207) (x1113 x207)))
(define-fun x2550 ((x207 Int)) Int (ite x4029 (x2510 x207) (x826 x207)))
(define-fun x377 ((x207 Int)) Int (x815 x207))
(define-fun x1686 ((x207 Int)) Int (ite x4029 (x520 x207) (x2134 x207)))
(define-fun x2674 ((x207 Int)) Int (ite x4029 (x3543 x207) (x3132 x207)))
(define-fun x4038 ((x207 Int)) Int (x1674 x207))
(define-fun x1632 ((x207 Int)) Int (x2889 x207))
(define-fun x103 ((x207 Int)) Int (ite x4029 (x3922 x207) (x3192 x207)))
(define-fun x1881 ((x207 Int)) Int (x1775 x207))
(define-fun x629 ((x207 Int)) Int (ite x4029 (x2093 x207) (x4107 x207)))
(define-fun x1731 ((x207 Int)) Int (x4278 x207))
(define-fun x3429 ((x207 Int)) Int (x2727 x207))
(define-fun x804 ((x207 Int)) Int (ite x3775 (x4031 x207) (ite x2351 (x4031 x207) (x3476 x207))))
(define-fun x3832 ((x207 Int)) Int (ite x3775 (x4481 x207) (ite x2351 (x4481 x207) (x2653 x207))))
(define-fun x2316 ((x207 Int)) Int (ite x3775 (x3363 x207) (ite x2351 (x3363 x207) (x2093 x207))))
(define-fun x1105 ((x207 Int)) Int (ite x3775 (x2212 x207) (ite x2351 (x2212 x207) (x1205 x207))))
(define-fun x972 ((x207 Int)) Int (ite x3775 (x1606 x207) (ite x2351 (x1606 x207) (x3071 x207))))
(define-fun x1382 ((x207 Int)) Int (ite x3775 (x2026 x207) (ite x2351 (x2026 x207) (x3521 x207))))
(define-fun x1936 ((x207 Int)) Int (ite x3775 (x4221 x207) (ite x2351 (x4221 x207) (x520 x207))))
(define-fun x3407 ((x207 Int)) Int (ite x3775 (x4177 x207) (ite x2351 (x4177 x207) (x2116 x207))))
(define-fun x4000 ((x207 Int)) Int (ite x3775 (x2730 x207) (ite x2351 (x2730 x207) (x2510 x207))))
(define-fun x1051 ((x207 Int)) Int (ite x3775 (x868 x207) (ite x2351 (x868 x207) (x4398 x207))))
(define-fun x1680 ((x207 Int)) Int (ite x3775 (x3897 x207) (ite x2351 (x3897 x207) (x3543 x207))))
(define-fun x192 ((x207 Int)) Int (ite x3775 (x2382 x207) (ite x2351 (x2382 x207) (x2598 x207))))
(define-fun x1599 ((x207 Int)) Int (ite x3775 (x3016 x207) (ite x2351 (x3016 x207) (x3389 x207))))
(define-fun x1486 ((x207 Int)) Int (ite x3775 (x3214 x207) (ite x2351 (x3214 x207) (x3922 x207))))
(define-fun x3163 ((x207 Int)) Int (x1776 x207))
(define-fun x44 ((x207 Int)) Int (x4399 x207))
(define-fun x68 ((x207 Int)) Int (x3920 x207))
(define-fun x2199 ((x207 Int)) Int (x1130 x207))
(define-fun x3869 ((x207 Int)) Int (x3213 x207))
(define-fun x1991 ((x207 Int)) Int (x1947 x207))
(define-fun x3350 ((x207 Int)) Int (x1775 x207))
(define-fun x4196 ((x207 Int)) Int (x2727 x207))
(define-fun x1982 ((x207 Int)) Int (x2889 x207))
(define-fun x3985 ((x207 Int)) Int (x4313 x207))
(define-fun x1870 ((x207 Int)) Int (x1245 x207))
(define-fun x932 ((x207 Int)) Int (x4460 x207))
(define-fun x2920 ((x207 Int)) Int (x1434 x207))
(define-fun x1053 ((x207 Int)) Int (x1674 x207))
(define-fun x1179 ((x207 Int)) Int (x254 x207))
(define-fun x3988 ((x207 Int)) Int (x3644 x207))
(define-fun x3033 ((x207 Int)) Int (x162 x207))
(define-fun x1085 ((x207 Int)) Int (x4278 x207))
(define-fun x1192 ((x207 Int)) Int (x4434 x207))
(define-fun x2984 ((x207 Int)) Int (x4070 x207))
(define-fun x4374 ((x207 Int)) Int (x1684 x207))
(define-fun x571 ((x207 Int)) Int (x2671 x207))
(define-fun x3392 ((x207 Int)) Int (x2371 x207))
(define-fun x773 ((x207 Int)) Int (x815 x207))
(define-fun x1754 ((x207 Int)) Int (x1947 x207))
(define-fun x2408 ((x207 Int)) Int (x815 x207))
(define-fun x3701 ((x207 Int)) Int (x4278 x207))
(define-fun x2747 ((x207 Int)) Int (x1776 x207))
(define-fun x2714 ((x207 Int)) Int (x162 x207))
(define-fun x2007 ((x207 Int)) Int (x4434 x207))
(define-fun x1604 ((x207 Int)) Int (x3644 x207))
(define-fun x1363 ((x207 Int)) Int (x1684 x207))
(define-fun x1124 ((x207 Int)) Int (x1775 x207))
(define-fun x1358 ((x207 Int)) Int (x2371 x207))
(define-fun x587 ((x207 Int)) Int (x1674 x207))
(define-fun x3167 ((x207 Int)) Int (x1130 x207))
(define-fun x2440 ((x207 Int)) Int (x2727 x207))
(define-fun x4417 ((x207 Int)) Int (x254 x207))
(define-fun x3133 ((x207 Int)) Int (x3213 x207))
(define-fun x3255 ((x207 Int)) Int (x4313 x207))
(define-fun x4247 ((x207 Int)) Int (x2889 x207))
(define-fun x4321 ((x207 Int)) Int (x4399 x207))
(define-fun x3215 ((x207 Int)) Int (x4070 x207))
(define-fun x1106 ((x207 Int)) Int (x3920 x207))
(define-fun x946 ((x207 Int)) Int (x1434 x207))
(define-fun x2692 ((x207 Int)) Int (x2671 x207))
(define-fun x2503 ((x207 Int)) Int (x1245 x207))
(define-fun x4255 ((x207 Int)) Int (x2031 x207))
(define-fun x3949 ((x207 Int)) Int (x265 x207))
(define-fun x14 ((x207 Int)) Int (x437 x207))
(define-fun x244 ((x207 Int)) Int (x1297 x207))
(define-fun x4099 ((x207 Int)) Int (x656 x207))
(define-fun x334 ((x207 Int)) Int (x2031 x207))
(define-fun x2356 ((x207 Int)) Int (x437 x207))
(define-fun x4015 ((x207 Int)) Int (x265 x207))
(define-fun x517 ((x207 Int)) Int (ite x856 (ite x1751 (x3003 x207) (x3177 x207)) (ite x531 (ite x1751 (x3003 x207) (x3177 x207)) (x3177 x207))))
(define-fun x2368 ((x207 Int)) Int (ite x769 (x3177 x207) (ite x2355 (x3177 x207) (x517 x207))))
(define-fun x1217 ((x207 Int)) Int (ite x1472 (ite x2238 (x3177 x207) (x2368 x207)) (x3177 x207)))
(define-fun x568 ((x207 Int)) Int (x656 x207))
(define-fun x3923 ((x207 Int)) Int (x1297 x207))
(define-fun x4018 ((x207 Int)) Int (ite (= x2774 x207) x2617 (x993 x207)))
(define-fun x388 ((x207 Int)) Int (x265 x207))
(define-fun x2180 ((x207 Int)) Int (x437 x207))
(define-fun x3718 ((x207 Int)) Int (x2031 x207))
(define-fun x1480 ((x207 Int)) Int (x656 x207))
(define-fun x3090 ((x207 Int)) Int (ite x2238 (x3177 x207) (x2368 x207)))
(define-fun x2613 ((x207 Int)) Int (x1297 x207))
(define-fun x301 ((x207 Int)) Int (x1297 x207))
(define-fun x1494 ((x207 Int)) Int (x656 x207))
(define-fun x2100 ((x207 Int)) Int (x3177 x207))
(define-fun x2553 ((x207 Int)) Int (x2031 x207))
(define-fun x3240 ((x207 Int)) Int (x437 x207))
(define-fun x3560 ((x207 Int)) Int (x265 x207))
(define-fun x3820 ((x207 Int)) Int (ite (= x207 x2774) x4316 (x993 x207)))
(define-fun x4123 ((x207 Int)) Int (ite (= x1133 x207) x1247 (x3820 x207)))
(define-fun x3706 ((x207 Int)) Int (x2031 x207))
(define-fun x4186 ((x207 Int)) Int (x3177 x207))
(define-fun x2071 ((x207 Int)) Int (x437 x207))
(define-fun x29 ((x207 Int)) Int (x265 x207))
(define-fun x2095 ((x207 Int)) Int (x656 x207))
(define-fun x3034 ((x207 Int)) Int (x1297 x207))
(define-fun x1912 ((x207 Int)) Int (ite (and (>= x207 128) (> (+ 128 x2839) x207)) (x2834 (+ x207 36)) (x422 x207)))
(define-fun x2630 ((x207 Int)) Int (ite (= x207 x1401) 0 (x1912 x207)))
(define-fun x552 ((x207 Int)) Int (ite (= x207 x1460) x3292 (x2630 x207)))
(define-fun x1170 ((x207 Int)) Int (ite (= x207 x3085) 0 (x526 x207)))
(define-fun x3874 ((x207 Int)) Int (ite (= x207 128) x2839 (x552 x207)))
(define-fun x514 ((x207 Int)) Int (ite (and (> (+ x2839 160) x207) (>= x207 160)) (x2834 (+ 4 x207)) (x3874 x207)))
(define-fun x1805 ((x207 Int)) Int (ite (= x207 x1690) 0 (x514 x207)))
(define-fun x3728 ((x207 Int)) Int (ite (= x3396 x207) x3914 (x1805 x207)))
(define-fun x4157 ((x207 Int)) Int (ite (and (<= x21 x207) (> (+ x3914 x21) x207)) (x2834 (- (+ x207 x3617) x21)) (x3728 x207)))
(define-fun x2836 ((x207 Int)) Int (ite (= x1732 x207) 0 (x4157 x207)))
(define-fun x1600 ((x207 Int)) Int (ite (= x207 x4428) 1 (x1340 x207)))
(define-fun x367 ((x207 Int)) Int (x437 x207))
(define-fun x1738 ((x207 Int)) Int (x265 x207))
(define-fun x4192 ((x207 Int)) Int (x2031 x207))
(define-fun x3538 ((x207 Int)) Int (x656 x207))
(define-fun x866 ((x207 Int)) Int (x1297 x207))
(define-fun x3484 ((x207 Int)) Int (ite x2355 (x3177 x207) (x517 x207)))
(define-fun x1917 ((x207 Int)) Int (x1297 x207))
(define-fun x118 ((x207 Int)) Int (x656 x207))
(define-fun x3465 ((x207 Int)) Int (x3177 x207))
(define-fun x2640 ((x207 Int)) Int (x2031 x207))
(define-fun x887 ((x207 Int)) Int (x437 x207))
(define-fun x2615 ((x207 Int)) Int (x265 x207))
(define-fun x4308 ((x207 Int)) Int (x265 x207))
(define-fun x2759 ((x207 Int)) Int (x437 x207))
(define-fun x976 ((x207 Int)) Int (x656 x207))
(define-fun x2903 ((x207 Int)) Int (x2031 x207))
(define-fun x4238 ((x207 Int)) Int (x1297 x207))
(define-fun x1474 ((x207 Int)) Int (ite (= x207 x1417) x4068 (x1701 x207)))
(define-fun x2237 ((x207 Int)) Int (ite (= x126 x207) x1002 (x3893 x207)))
(define-fun x2929 ((x207 Int)) Int (ite (= x207 x3768) x3591 (x1523 x207)))
(define-fun x2324 ((x207 Int)) Int (ite x1751 (x1817 x207) (x4477 x207)))
(define-fun x217 ((x207 Int)) Int (ite x1751 (x3003 x207) (x3177 x207)))
(define-fun x4450 ((x207 Int)) Int (ite (= x207 x2501) x3129 (x2324 x207)))
(define-fun x1522 ((x207 Int)) Int (ite (= x207 x109) x256 (x1074 x207)))
(define-fun x3565 ((x207 Int)) Int (ite (= x207 x1959) 0 (x2415 x207)))
(define-fun x4139 ((x207 Int)) Int (ite (and (<= 128 x207) (> 160 x207)) (x602 (- x207 128)) (x3442 x207)))
(define-fun x3910 ((x207 Int)) Int (ite (= x207 128) 102788308552044517260959567728648622381392053106279845986800620074717893623808 (x2375 x207)))
(define-fun x219 ((x207 Int)) Int (ite (= 132 x207) x3263 (x3910 x207)))
(define-fun x990 ((x207 Int)) Int (ite (= 164 x207) x1819 (x219 x207)))
(define-fun x2512 ((x207 Int)) Int (ite (= 196 x207) x645 (x990 x207)))
(define-fun x3323 ((x207 Int)) Int (ite (= x207 228) x4250 (x2512 x207)))
(define-fun x197 ((x207 Int)) Int (ite (= 128 x207) 106705613605932439001713296114446454776331749937047859905631657259250407702528 (x2375 x207)))
(define-fun x2309 ((x207 Int)) Int (ite (= x207 132) x723 (x197 x207)))
(define-fun x4411 ((x207 Int)) Int (ite (= 164 x207) x405 (x2309 x207)))
(define-fun x1406 ((x207 Int)) Int 0)
(define-fun x1728 ((x207 Int)) Int (ite (= x207 128) 13123866003235860548192500634644069355060014211693331341089165407210616913920 (x2375 x207)))
(define-fun x2569 ((x207 Int)) Int (ite (= x207 132) x3437 (x1728 x207)))
(define-fun x1906 ((x207 Int)) Int (ite (= 164 x207) x4165 (x2569 x207)))
(define-fun x3422 ((x207 Int)) Int (ite (= x207 196) x3199 (x1906 x207)))
(define-fun x4403 ((x207 Int)) Int (ite (= x2774 x207) x869 (x2833 x207)))
(define-fun x3828 ((x207 Int)) Int (ite (= x207 x3542) x1814 (x4403 x207)))
(define-fun x315 ((x207 Int)) Int (ite (= x3542 x207) x3661 (x3828 x207)))
(define-fun x1735 ((x207 Int)) Int (ite (= x207 128) 74700126319118050543342327103397598470879858733489597287354029460387927162880 (x2375 x207)))
(define-fun x1112 ((x207 Int)) Int (ite (= 132 x207) x4164 (x1735 x207)))
(define-fun x1694 ((x207 Int)) Int 0)
(define-fun x208 ((x207 Int)) Int (ite (= x207 128) 35425322552009646506518338594398286811668114190755561836384294568426616127488 (x2375 x207)))
(define-fun x4347 ((x207 Int)) Int (ite (= x207 132) x2823 (x208 x207)))
(define-fun x2098 ((x207 Int)) Int (ite (= x207 x3542) x2155 (x1269 x207)))
(define-fun x2486 ((x207 Int)) Int (ite (= x1133 x207) x3758 (x4123 x207)))
(assert (x1740 x3416))
(assert (x1740 x3612))
(assert (= (x4185 (x2749 x1772 x3512 x825 x3882 x1296 x33)) x825))
(assert (x1740 x282))
(assert (= (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780) (x4391 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (x1740 x2469))
(assert (= (=> (and (= x109 (+ x750 1)) (= x2083 1) (= x530 false) (= 32 x2639) (= x1795 x3035) (= x3060 false) (= x965 1) (= x1959 (+ x109 1))) x855) x3479))
(assert (x1740 x3294))
(assert (not (x105 (x3614 64 x1515 100))))
(assert (x1740 x2463))
(assert (x1740 x981))
(assert (x1740 x1919))
(assert (x1740 x3530))
(assert (x1740 x2027))
(assert (= (x226 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799)) x2386))
(assert (= x3156 (=> (= x3552 (> x3057 0)) (and (=> (and (and (= x3168 x1657) (= x4361 x2964)) x3552) x4418) (=> (and (and (= false x1104) (= x4057 4) (= x17 true)) (not x3552)) x813)))))
(assert (x1740 x2574))
(assert (= (x2019 (x3614 x2313 x2406 x2529)) x2406))
(assert (< (x3614 64 x1856 (ite (= 0 x1847) x408 (ite (>= 32 x1847) x2946 (ite (>= 64 x1847) x1561 (ite (<= x1847 96) x240 (ite (>= 128 x1847) x2899 (ite (<= x1847 160) x1119 (ite (>= 192 x1847) x1235 (ite (<= x1847 224) x172 x324))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1308))
(assert (= (or x4190 x4280) x2717))
(assert (x1740 x252))
(assert (=> (<= x3460 10000) (= (x4391 x3460) 0)))
(assert (= x1791 (x2019 (x2749 x2006 x1791 x108 x4406 x2320 x3533))))
(assert (= (x4185 (x3121 x1772 x3353 x4071 x2867 x151)) x4071))
(assert (x1740 x475))
(assert (=> (>= 10000 x2306) (= 0 (x4391 x2306))))
(assert (= (or x3395 (and (not x810) x2200)) x4371))
(assert (x1740 x1))
(assert (= x742 (x2094 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160))))
(assert (not (x105 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (<= x2268 64) x2239 (ite (<= x2268 96) x2777 (ite (<= x2268 128) x2219 (ite (<= x2268 160) x3031 (ite (>= 192 x2268) x2515 (ite (<= x2268 224) x1359 x3236))))))))))))
(assert (x1740 x1708))
(assert (= (or x4013 x1751) x375))
(assert (not (x105 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460))))
(assert (= (x2094 (x3614 64 x2602 3)) 64))
(assert (x1740 x2145))
(assert (x1740 x845))
(assert (= x2059 (and x421 x3759)))
(assert (> (x2749 x3061 x2884 x3520 x4328 x2729 x1360) 10000))
(assert (=> (<= x250 10000) (= (x4391 x250) 0)))
(assert (= x1993 (or x2122 x2294)))
(assert (=> (<= x2654 10000) (= 0 (x4391 x2654))))
(assert (x105 102788308552044517260959567728648622381392053106279845986800620074717893623808))
(assert (= x341 (x226 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (= (x4185 (x3121 x3122 x3227 x778 x81 x3441)) x778))
(assert (x1740 x655))
(assert (x1740 x3373))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679)))
(assert (x2854 x4202))
(assert (= x2096 (and x2496 x2827)))
(assert (= (and x307 x1910) x2115))
(assert (x1740 x389))
(assert (= 0 (x4391 53968831973089624780961702553170747426560148566936995398294956610382735605760)))
(assert (x1740 x145))
(assert (=> (<= x3336 10000) (= (x4391 x3336) 0)))
(assert (x2854 x632))
(assert (x1740 x4246))
(assert (=> (<= x432 10000) (= (x4391 x432) 0)))
(assert (x1740 x1918))
(assert (= (x2094 (x3614 64 x2559 6)) 64))
(assert (x1740 x2652))
(assert (x2348 x1619))
(assert (< 10000 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780)))
(assert (= (x2019 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) x2663))
(assert (x1740 x4045))
(assert (x1740 x4112))
(assert (= x1999 (x2019 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (= (x4391 (+ 1 x126)) (x4391 x126)))
(assert (x2854 x2107))
(assert (= (x4185 (x4438 x1132 x607 x653 x2622)) x653))
(assert (= (x2094 (x3614 64 x4441 36)) 64))
(assert (= x2686 (=> (and (= x184 (x2153 x3439)) (= x1940 (not (< 128 x3669))) (= x1447 (x3626 (+ x446 96))) (= (x3626 (+ x3843 96)) x3439)) (and x1940 x1186))))
(assert (x1740 x4275))
(assert (= x3036 (x4185 (x3614 x1772 x4380 x3036))))
(assert (x105 18446744073709551615))
(assert (= (x4391 (x4438 x1772 x3892 x336 x1411)) (x4438 x1772 x3892 x336 x1411)))
(assert (x1740 x2564))
(assert (=> (>= 10000 x2384) (= 0 (x4391 x2384))))
(assert (= x1198 (and (not x2840) x3547)))
(assert (x2348 x944))
(assert (=> (>= 10000 x1197) (= (x4391 x1197) 0)))
(assert (x1740 x4404))
(assert (< (x4438 x2006 x566 x2063 x287) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2284 (and (not x503) x3558)))
(assert (= (x2749 x3122 x2773 x1507 x214 x337 x3756) (x4391 (x2749 x3122 x2773 x1507 x214 x337 x3756))))
(assert (=> (>= 10000 x904) (= 0 (x4391 x904))))
(assert (x2348 x3489))
(assert (= (x4185 (x3614 64 x1197 36)) 36))
(assert (x1740 x3108))
(assert (x1740 x3591))
(assert (=> (>= 10000 x814) (= (x4391 x814) 0)))
(assert (= (and x630 x2376) x3648))
(assert (x1740 x3938))
(assert (= (x2019 (x3096 x1847 x1251)) x1251))
(assert (= x4284 (x2019 (x3614 64 x4284 36))))
(assert (x1740 x447))
(assert (x2854 x110))
(assert (< 10000 (x3096 32 x1162)))
(assert (x1740 x2156))
(assert (< 10000 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)))
(assert (= 0 (x4391 46442213778836376901753710468615024683576072693327014300388496345503314739200)))
(assert (= x3591 (x2019 (x3614 64 x3591 1))))
(assert (=> (<= x1399 10000) (= (x4391 x1399) 0)))
(assert (x1740 x874))
(assert (= x3061 (x2094 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (x1740 x1118))
(assert (= (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046) (x4391 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (x1740 x201))
(assert (x1740 x1681))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x3061 x47)))
(assert (= (x226 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)) x4503))
(assert (x1740 x2820))
(assert (x1740 x2075))
(assert (= (or (and x3054 x796) (and x1975 x3068) (and x4161 x1216)) x1706))
(assert (x1740 x1787))
(assert (= 0 (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639744)))
(assert (= (and x1897 (not x604)) x370))
(assert (= (or x347 x611 x75 x3125) x1512))
(assert (< (x3614 64 x1421 (ite (= x2313 0) x2088 (ite (>= 32 x2313) x2987 (ite (>= 64 x2313) x823 (ite (>= 96 x2313) x311 (ite (>= 128 x2313) x922 (ite (>= 160 x2313) x1565 (ite (>= 192 x2313) x2988 (ite (>= 224 x2313) x2034 x326))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3729 10000) (= 0 (x4391 x3729))))
(assert (=> (<= x3372 10000) (= (x4391 x3372) 0)))
(assert (= false x2028))
(assert (=> (<= x1584 10000) (= (x4391 x1584) 0)))
(assert (=> (>= 10000 x2191) (= 0 (x4391 x2191))))
(assert (=> (>= 10000 x1928) (= (x4391 x1928) 0)))
(assert (= x3684 (and (not x2298) x3704)))
(assert (= x1422 (and x370 x1747)))
(assert (= x813 (=> (and (= x1889 2) (= x2207 0) (= x4017 x3831) (= x1672 x2391) (= x1672 (x1329 255 x1306)) (= x4057 x4322) (= x3831 x3647)) x4023)))
(assert (not (x105 (x3096 x1772 x49))))
(assert (= (x2019 (x2749 x1966 x1707 x3979 x496 x2463 x390)) x1707))
(assert (= x3261 (and (not x2487) x4140)))
(assert (= x1081 (x2019 (x3614 64 x1081 36))))
(assert (= (x4391 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)))
(assert (x1740 x2930))
(assert (= x3533 (x226 (x2749 x2006 x1791 x108 x4406 x2320 x3533))))
(assert (= x57 (=> (and (or (not x708) x708) (= (= x1381 0) x708)) x1785)))
(assert (not (x105 (x3614 64 x1421 (ite (= x2313 0) x2088 (ite (<= x2313 32) x2987 (ite (<= x2313 64) x823 (ite (>= 96 x2313) x311 (ite (<= x2313 128) x922 (ite (>= 160 x2313) x1565 (ite (<= x2313 192) x2988 (ite (<= x2313 224) x2034 x326))))))))))))
(assert (= x2743 (x4381 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743))))
(assert (=> (<= x1877 10000) (= 0 (x4391 x1877))))
(assert (x1740 x2662))
(assert (=> (>= 10000 x1011) (= 0 (x4391 x1011))))
(assert (x1740 x3005))
(assert (= x2232 (and x898 x313)))
(assert (x1740 x1488))
(assert (=> (<= x4482 10000) (= 0 (x4391 x4482))))
(assert (= x1772 (x2094 (x3121 x1772 x3353 x4071 x2867 x151))))
(assert (x1740 x3609))
(assert (not (x105 (x3096 x2313 x4036))))
(assert (x1740 x1147))
(assert (x1740 x308))
(assert (= (x1339 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) x3160))
(assert (x1740 x3721))
(assert (= x3964 (and x2755 (not x1335))))
(assert (x1740 x3723))
(assert (< (x2749 x1954 x2843 x3390 x2895 x2966 x341) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1753 (x353 (x2749 x742 x54 x1570 x1753 x3564 x1908))))
(assert (=> (>= 10000 x4400) (= (x4391 x4400) 0)))
(assert (x1740 x3396))
(assert (< (x3614 x1772 x4380 x3036) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x3021))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4438 x736 x1007 x1021 x727)))
(assert (x1740 x150))
(assert (= (=> (and (= x1075 (div x23 2)) (= (ite (> x291 0) x1075 (x1329 127 x1075)) x185) (= x291 (x1329 1 x23)) (= x1496 (x4315 (- x291 (mod (ite (> 32 x185) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (> x1496 0) x1276)) (and (=> (not x1276) x626) (=> (and (and (= x2298 (= x1921 0)) (= x1921 (x1329 1 x23))) x1276) (and (=> (and (= x228 (> x185 0)) (not x2298)) (and (=> (not x228) x3480) (=> x228 x2224))) (=> x2298 x1715))))) x25))
(assert (=> (<= x4426 10000) (= 0 (x4391 x4426))))
(assert (x1740 x2282))
(assert (= (x1339 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)) x4528))
(assert (= (x2019 (x3614 64 x2980 (ite (= x1954 0) x3200 (ite (>= 32 x1954) x1090 (ite (>= 64 x1954) x2853 (ite (<= x1954 96) x2688 (ite (>= 128 x1954) x3252 (ite (>= 160 x1954) x3909 (ite (>= 192 x1954) x2508 (ite (>= 224 x1954) x4032 x2160)))))))))) x2980))
(assert (x1740 x2563))
(assert (= (x4185 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x292))
(assert (= (x2094 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990)) x4440))
(assert (x1740 x843))
(assert (x1740 x4405))
(assert (< (x3614 64 x3591 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)))
(assert (= x2851 (and x1346 (not x1317))))
(assert (not (x105 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (x1740 x3450))
(assert (= (and (not x1747) x370) x2410))
(assert (= (x4185 (x3614 x1132 x45 x429)) x429))
(assert (=> (>= 10000 x1022) (= (x4391 x1022) 0)))
(assert (x1740 x1389))
(assert (= (x2094 (x3121 x1806 x892 x84 x1640 x1925)) x1806))
(assert (= x4440 (x2094 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152))))
(assert (x1740 x1050))
(assert (= (x4185 (x3614 x2268 x4292 x4285)) x4285))
(assert (=> (>= 10000 x3772) (= (x4391 x3772) 0)))
(assert (x1740 x1440))
(assert (=> (<= x297 10000) (= 0 (x4391 x297))))
(assert (x1740 x3984))
(assert (=> (>= 10000 x558) (= (x4391 x558) 0)))
(assert (= (x3614 64 x4330 10) (x4391 (x3614 64 x4330 10))))
(assert (> (x3614 x3122 x4134 x3081) 10000))
(assert (x1740 x2458))
(assert (= (x1465 0) (x4391 (x1465 0))))
(assert (x1740 x4304))
(assert (=> (>= 10000 x1923) (= (x4391 x1923) 0)))
(assert (< 10000 (x4438 x3061 x144 x2535 x415)))
(assert (x1740 x2729))
(assert (= (x353 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) x2701))
(assert (x1740 x906))
(assert (not (x105 (x3096 x1966 x1011))))
(assert (=> (>= 10000 x1342) (= 0 (x4391 x1342))))
(assert (not (x105 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906))))
(assert (x1740 x3791))
(assert (x1740 x1166))
(assert (< 10000 (x3614 64 x3700 10)))
(assert (x1740 x2195))
(assert (= (x4391 (x3614 64 x1858 6)) (x3614 64 x1858 6)))
(assert (= x2504 (and (not x1349) x1420)))
(assert (=> (>= 10000 x2966) (= 0 (x4391 x2966))))
(assert (=> (>= 10000 x144) (= (x4391 x144) 0)))
(assert (x1740 x2663))
(assert (x1740 x108))
(assert (= 12 (x4185 (x3614 64 x432 12))))
(assert (= (or x1250 x4349) x3749))
(assert (= (and (not x3809) x3819) x4508))
(assert (x1740 x2123))
(assert (= (or (and x2130 x583) (and x4169 (not x1931))) x611))
(assert (< (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1222))
(assert (=> (<= x2808 10000) (= (x4391 x2808) 0)))
(assert (x1740 x2756))
(assert (= (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639680) 0))
(assert (= (=> (= (not (< 32 x145)) x3974) (and x3974 x1140)) x882))
(assert (x1740 x2872))
(assert (=> (>= 10000 x1261) (= (x4391 x1261) 0)))
(assert (< 10000 (x3614 x722 x3055 x471)))
(assert (x1740 x2272))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x1313 36)))
(assert (= x1227 (and x4508 x4226)))
(assert (=> (<= x3951 10000) (= (x4391 x3951) 0)))
(assert (=> (>= 10000 x3928) (= (x4391 x3928) 0)))
(assert (=> (<= x2771 10000) (= (x4391 x2771) 0)))
(assert (x1740 x1327))
(assert (x1740 x3840))
(assert (= x1954 (x2094 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (< 10000 (x2749 x1806 x3606 x1022 x1584 x1469 x2466)))
(assert (x1740 x3497))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x1399 6)))
(assert (x1740 x2677))
(assert (= (x226 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) x1285))
(assert (not (x105 (x3614 x3122 x4134 x3081))))
(assert (=> (>= 10000 x2006) (= 0 (x4391 x2006))))
(assert (not (x105 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (= x966 (and x3297 x4506)))
(assert (not (x105 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (x1740 x2129))
(assert (= (x4381 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x1027))
(assert (= (and x4456 (not x3050)) x400))
(assert (x1740 x2639))
(assert (= x3411 (x2019 (x3614 64 x3411 12))))
(assert (=> (>= 10000 x1354) (= 0 (x4391 x1354))))
(assert (= 0 (x4391 35477284059277649309253622239531857712935939406416048698883813673932370764389)))
(assert (=> (<= x2812 10000) (= (x4391 x2812) 0)))
(assert (not (x105 (x4438 x722 x2191 x2213 x148))))
(assert (x2348 x3889))
(assert (x1740 x3467))
(assert (x1740 x1423))
(assert (=> (>= 10000 x2280) (= 0 (x4391 x2280))))
(assert (=> (>= 10000 x1791) (= (x4391 x1791) 0)))
(assert (= (x3614 64 x1863 12) (x4391 (x3614 64 x1863 12))))
(assert (x1740 x3679))
(assert (=> (<= x3757 10000) (= (x4391 x3757) 0)))
(assert (x1740 x3945))
(assert (x1740 x4288))
(assert (x1740 x4171))
(assert (not (x105 (x3614 x1954 x402 x1876))))
(assert (=> (>= 10000 x387) (= 0 (x4391 x387))))
(assert (x1740 x462))
(assert (=> (>= 10000 x3334) (= 0 (x4391 x3334))))
(assert (x1740 x540))
(assert (x1740 x2471))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x256 10)))
(assert (> (x2749 x1847 x1783 x384 x624 x850 x2242) 10000))
(assert (x1740 x1770))
(assert (x2854 1))
(assert (= 12 (x4185 (x3614 64 x1863 12))))
(assert (= (and x3526 x1595) x2265))
(assert (x1740 x2928))
(assert (x1740 x835))
(assert (= x2843 (x2019 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)))
(assert (x1740 x1778))
(assert (= x971 (and x2346 x50)))
(assert (x1740 x2358))
(assert (x1740 x3289))
(assert (x1740 x2474))
(assert (x1740 x747))
(assert (= (x4391 97822624453686575479804928673988797637476738513438931194560248106084831592448) 0))
(assert (x1740 x3439))
(assert (= x1298 (or (and x3819 x3809) (and x920 x1726) (and x348 x1225) (and x966 x652) (and x1326 x2764) (and x640 x171) (and x455 x1646) (and x2252 x3680) (and x248 x2885))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x4284 2)))
(assert (= x1507 (x4185 (x2749 x3122 x2773 x1507 x214 x337 x3756))))
(assert (= (x4185 (x2749 x722 x2659 x1620 x1289 x950 x3715)) x1620))
(assert (x1740 x3387))
(assert (x1740 x714))
(assert (=> (>= 10000 x3405) (= 0 (x4391 x3405))))
(assert (=> (<= x727 10000) (= (x4391 x727) 0)))
(assert (= x430 (or x1746 x1432)))
(assert (= (and x4169 x1931) x4140))
(assert (x1740 x551))
(assert (= (x2789 (x2749 x1772 x3512 x825 x3882 x1296 x33)) x1296))
(assert (= (x4391 18446744073709551615) 0))
(assert (x1740 x2438))
(assert (= (x4185 (x3614 64 x2342 0)) 0))
(assert (= x2726 (and x399 (not x152))))
(assert (= x3813 (x4381 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (= (x4391 x109) (x4391 (+ x109 1))))
(assert (x1740 x2520))
(assert (x1740 x471))
(assert (x1740 x3136))
(assert (< 10000 (x2749 x1954 x2843 x3390 x2895 x2966 x341)))
(assert (> (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882) 10000))
(assert (x1740 x3319))
(assert (= (x2094 (x3121 x1132 x2280 x1443 x2517 x2430)) x1132))
(assert (x1740 x2381))
(assert (=> (>= 10000 x3666) (= 0 (x4391 x3666))))
(assert (= 64 (x2094 (x3614 64 x3411 12))))
(assert (x1740 x4096))
(assert (x1740 x1197))
(assert (x1740 x832))
(assert (= (x2019 (x3614 x2006 x1506 x2079)) x1506))
(assert (= x2130 (and (not x2113) x3648)))
(assert (> (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679) 10000))
(assert (=> (>= 10000 x1718) (= 0 (x4391 x1718))))
(assert (x105 2001815235))
(assert (=> (>= 10000 x2670) (= 0 (x4391 x2670))))
(assert (= (and x3873 x3261) x347))
(assert (x1740 x4125))
(assert (=> (<= x3411 10000) (= 0 (x4391 x3411))))
(assert (= (and x203 x2236) x2976))
(assert (= (and x3050 x4456) x4222))
(assert (x1740 x2873))
(assert (= x2397 (x2019 (x3121 x2313 x2397 x2982 x2731 x1277))))
(assert (= (x3096 x1954 x2574) (x4391 (x3096 x1954 x2574))))
(assert (x1740 x1399))
(assert (= (x4185 (x2749 x2006 x1791 x108 x4406 x2320 x3533)) x108))
(assert (< (x3614 64 x1316 11) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1617))
(assert (=> (>= 10000 x2602) (= (x4391 x2602) 0)))
(assert (= (x2749 x3061 x2884 x3520 x4328 x2729 x1360) (x4391 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x3061 x2884 x3520 x4328 x2729 x1360)))
(assert (= 32 (x2094 (x3096 32 103))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x3061 x2005 x2174 x3711 x1357)))
(assert (= x3218 (=> (and (= (x4315 (- x2250 (mod (ite (> 32 x1089) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x4425) (= x3243 (< 0 x4425)) (= x1503 (- x3890 132)) (= (x1329 1 x426) x2250) (= x1089 (ite (> x2250 0) x316 (x1329 127 x316))) (= x316 (div x426 2))) (and (=> (not x3243) x1055) (=> (and x3243 (and (= (= x2960 0) x187) (= (x1329 1 x426) x2960) (= (+ x3890 32) x27))) (and (=> (and (not x187) (and (= (x3096 32 104) x596) (= x4465 (< 0 x1089)))) (and (=> x4465 x1194) (=> (and (not x4465) (= 0 x1837)) x3785))) (=> (and (and (= x2781 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639680 x426)) (or (= 32 x3325) (= 0 x3325)) (= x3325 (* (ite (not (= x1089 0)) 1 0) 32)) (= x3587 (+ x27 x3325))) x187) x38)))))))
(assert (=> (<= x1822 10000) (= (x4391 x1822) 0)))
(assert (= (x2094 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) x2268))
(assert (= (x2019 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x1078))
(assert (x1740 x1874))
(assert (=> (>= 10000 x2572) (= (x4391 x2572) 0)))
(assert (=> (<= x619 10000) (= (x4391 x619) 0)))
(assert (not (x105 (x4438 x1954 x3524 x1389 x2377))))
(assert (x2348 x1238))
(assert (= (x353 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) x4193))
(assert (= (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077) (x4391 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077))))
(assert (x1740 x3288))
(assert (x1740 x4254))
(assert (=> (<= x3533 10000) (= 0 (x4391 x3533))))
(assert (x1740 x1495))
(assert (x1740 x612))
(assert (= x385 (and (not x1088) x4010)))
(assert (= x1476 (and x3942 x153)))
(assert (x105 35477284059277649309253622239531857712935939406416048698883813673932370764389))
(assert (x105 4294967295))
(assert (=> (>= 10000 x1974) (= (x4391 x1974) 0)))
(assert (=> (<= x1360 10000) (= (x4391 x1360) 0)))
(assert (x1740 x1330))
(assert (x1740 x2205))
(assert (x1740 x3512))
(assert (not (x105 (x3614 x2313 x2406 x2529))))
(assert (=> (<= x392 10000) (= 0 (x4391 x392))))
(assert (= (x2094 (x2749 x742 x54 x1570 x1753 x3564 x1908)) x742))
(assert (=> (<= x2766 10000) (= (x4391 x2766) 0)))
(assert (x2348 x1900))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x1847 x2738 x1877)))
(assert (= x1375 (and x1189 (not x3624))))
(assert (< (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1966 10000) (= (x4391 x1966) 0)))
(assert (< (x3096 x1954 x2574) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)))
(assert (= (x4185 (x3614 64 x908 12)) 12))
(assert (< 10000 (x2749 x1132 x2695 x1710 x1661 x3721 x897)))
(assert (= (=> (and (= 36 x4423) (= false x857) (= true x1656)) x26) x763))
(assert (x1740 x1503))
(assert (x1740 x3293))
(assert (x1740 x78))
(assert (= (=> (and (= x2325 0) (= x1314 false) (= x859 true)) x1268) x2611))
(assert (x1740 x1123))
(assert (=> (>= 10000 x1524) (= (x4391 x1524) 0)))
(assert (=> (<= x3979 10000) (= 0 (x4391 x3979))))
(assert (= 0 (x4391 8365236128558009046904410293209581292053118695343348878262597880337030709248)))
(assert (x2854 x2597))
(assert (= x2634 (and x2719 x2396)))
(assert (x1740 x1160))
(assert (= x2268 (x2094 (x4438 x2268 x1928 x3123 x4389))))
(assert (= (and x4132 (not x409)) x991))
(assert (x1740 x3551))
(assert (= x2590 x3154))
(assert (=> (>= 10000 x1983) (= (x4391 x1983) 0)))
(assert (=> (<= x2213 10000) (= 0 (x4391 x2213))))
(assert (x1740 x2917))
(assert (x1740 x2315))
(assert (= x2363 (and x3960 x1521)))
(assert (= (x4185 (x2749 x1954 x2843 x3390 x2895 x2966 x341)) x3390))
(assert (x1740 x3890))
(assert (x1740 x2507))
(assert (x1740 x3757))
(assert (= x4406 (x353 (x2749 x2006 x1791 x108 x4406 x2320 x3533))))
(assert (x1740 x4158))
(assert (=> (>= 10000 x612) (= 0 (x4391 x612))))
(assert (x1740 x3748))
(assert (=> (>= 10000 x3496) (= 0 (x4391 x3496))))
(assert (> (x4438 x2006 x566 x2063 x287) 10000))
(assert (= x3639 (and x929 (not x883))))
(assert (=> (>= 10000 x3272) (= (x4391 x3272) 0)))
(assert (x1740 x2140))
(assert (=> (>= 10000 x2381) (= 0 (x4391 x2381))))
(assert (=> (>= 10000 x453) (= 0 (x4391 x453))))
(assert (= x1472 (or x2238 x1096)))
(assert (x1740 x3345))
(assert (x1740 x736))
(assert (< 10000 (x3614 x742 x4509 x573)))
(assert (x1740 x3979))
(assert (x1740 x1703))
(assert (= (x3096 x2268 x1273) (x4391 (x3096 x2268 x1273))))
(assert (x1740 x622))
(assert (x1740 x4330))
(assert (= (x2019 (x4438 x722 x2191 x2213 x148)) x2191))
(assert (x1740 x1585))
(assert (not x1159))
(assert (not (x105 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160))))
(assert (= (x2019 (x3614 x1132 x45 x429)) x45))
(assert (x1740 x2666))
(assert (x1740 x205))
(assert (< (x4438 x1132 x607 x653 x2622) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3403 (and x3433 (not x3776))))
(assert (=> (<= x2731 10000) (= 0 (x4391 x2731))))
(assert (> (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820) 10000))
(assert (= (x4185 (x2749 x2313 x2520 x3804 x1652 x3880 x2331)) x3804))
(assert (x1740 x2103))
(assert (= 0 (x4391 74700126319118050543342327103397598470879858733489597287354029460387927162880)))
(assert (x1740 x3808))
(assert (x1740 x975))
(assert (not (x105 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152))))
(assert (=> (<= x2982 10000) (= 0 (x4391 x2982))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)))
(assert (< (x3096 x736 x558) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1960))
(assert (x1740 x2860))
(assert (< (x3096 x2006 x124) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2854 x3021))
(assert (= x4437 (=> (and (= x2087 false) (= true x3900) (= 0 x3601)) x3678)))
(assert (x1740 x1026))
(assert (x1740 x1725))
(assert (< (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x105 46442213778836376901753710468615024683576072693327014300388496345503314739200))
(assert (x1740 x4389))
(assert (= (x4185 (x3614 x2006 x1506 x2079)) x2079))
(assert (x1740 x4105))
(assert (> (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286) 10000))
(assert (=> (>= 10000 x3880) (= (x4391 x3880) 0)))
(assert (= (x4391 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572)) (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572)))
(assert (x1740 x2839))
(assert (not (x105 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882))))
(assert (x1740 x1454))
(assert (> (x4438 x2313 x2314 x282 x441) 10000))
(assert (> (x3614 64 x2766 36) 10000))
(assert (= x2384 (x2019 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743))))
(assert (= (x2094 (x3614 64 x4284 36)) 64))
(assert (x1740 x4269))
(assert (not (x105 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876))))
(assert (= x3534 (or x592 x2673)))
(assert (= x807 (and x2745 (not x1439))))
(assert (= 64 (x2094 (x3614 64 x4339 36))))
(assert (x1740 x924))
(assert (x1740 x1390))
(assert (> (x3121 x4440 x3305 x3268 x363 x1386) 10000))
(assert (x1740 x418))
(assert (x2348 x1056))
(assert (< 10000 (x3096 x2268 x1273)))
(assert (=> (<= x3892 10000) (= (x4391 x3892) 0)))
(assert (x1740 x3764))
(assert (x1740 x1292))
(assert (x1740 x446))
(assert (x1740 x2367))
(assert (= (and x2618 (not x728)) x1325))
(assert (=> (>= 10000 x2902) (= 0 (x4391 x2902))))
(assert (x1740 x3510))
(assert (x1740 x1306))
(assert (x1740 x3351))
(assert (=> (>= 10000 x2349) (= (x4391 x2349) 0)))
(assert (=> (<= x4406 10000) (= 0 (x4391 x4406))))
(assert (= x3836 (and x4490 x1826)))
(assert (= (x4391 (x3121 x2313 x2397 x2982 x2731 x1277)) (x3121 x2313 x2397 x2982 x2731 x1277)))
(assert (= (and x2130 (not x583)) x19))
(assert (= x156 (and x2442 x1403)))
(assert (= (and x1207 x2712) x1833))
(assert (= (=> (and (= false x1838) (= x92 x3716) (= x4171 1722637450) (> x3667 x420) (= (x3626 (+ x1203 x3185)) x3667) (= 46442213778836376901753710468615024683576072693327014300388496345503314739200 x2940) x3955 (= x1203 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1681)) (= false x196) (= x4113 (x3626 (+ x420 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x420) (>= x92 196) (= x1270 x2244) (= (x154 x3591) x78) (<= 1 x78) (= (x3626 (+ x3612 31)) x1681) (= x1516 (x1583 x4113)) (= x3953 x1236) (= x401 (x1329 26959946667150639794667015087019630673637144422540572481103610249215 x1516)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x420) (>= x3667 1) (<= x541 127) (= (or (and (= true (<= (- x92 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< (- x92 4) 128)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- x92 4))) x2037) (= x4366 128) (= (x4315 (- x1677 32)) x4145) (<= x420 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x3074 x420) x3716) (= x1292 x3048) (= (+ 46442213778836376901753710468615024683576072693327014300388496345503314739200 x401) x4216) (>= x3716 196) (= x1677 (x4315 (- x3667 x420))) (= (= x3669 (x662 132)) x3955) (= (x3626 (+ x3185 x3612)) x2068) (<= x541 127)) (and (=> (and (and (= 0 x879) (= x1405 true) (= false x3651)) x2037) x1761) (=> (and (and (= x2260 (and (= true (<= x92 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x92 163))) (= x3953 x3169)) (not x2037)) (and (=> (and (and (= x2253 (x1901 132)) (= (< 18446744073709551615 x2253) x3855)) x2260) (and (=> x3855 x803) (=> (and (and (= 164 x2002) (= (< x92 x2205) x3381) (= (x3626 (+ x2253 164)) x2205)) (not x3855)) (and (=> x3381 x2296) (=> (and (and (= (< 18446744073709551615 x1292) x594) (= x846 x2244)) (not x3381)) (and (=> x594 x3239) (=> (and (and (= x1665 (x3626 (+ 4 x1292))) (= x3161 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x177) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x92)) (and (= (<= x177 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x92 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x177 x92)))) (= x177 (x3626 (+ x1665 31)))) (not x594)) (and (=> (and x3161 (and (= x55 (< 18446744073709551615 x1026)) (= x1026 (x1901 x1665)))) (and (=> x55 x803) (=> (and (and (= x319 (x3626 (+ 32 x1665))) (= (x3626 (+ x1026 x319)) x2472) (= x861 (> x2472 x92))) (not x55)) (and (=> x861 x2296) (=> (and (= true x1826) (not x861)) (and (=> (and (and (= (x1373 x2192) x4124) (or (<= x2253 115792089237316195423570985008687907853269984665640564039457584007913129639744) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2253)) (= x3358 (x3626 (+ x2192 32))) (= (x3626 (+ x2253 31)) x1653) (= x1790 (x3626 (+ x1026 31))) (= x413 (x3626 (+ x3762 32))) (<= 161 x1765) (= (* 32 x3338) x3762) (= x1061 (or (and (= (<= x4124 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4124)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4124))) (< x2192 x1765) (= x1960 (x3626 (+ x1026 x3358))) (= 128 x862) (= x3338 (div x1790 32)) (= x2192 (+ x771 160)) (= (* x1147 32) x771) (= (x3626 (+ x413 x2192)) x1765) (= (div x1653 32) x1147)) x1826) (and (=> x1061 x3239) (=> (and (not x1061) (and (= x3905 (x3626 (+ x3792 64))) (= (x3626 (+ x1765 4)) x3792) (= x1137 (x3614 64 x256 10)) (= x3938 (x154 x3591)) (= 68 x289) (= x1341 (x3626 (+ 32 x3792))) (= 68 x120) (= (x4315 (- x3905 x1765)) x120) (= x256 x2014) (= (x3321 x3358) x256) (= 0 x2121) (= x3969 2001815235) (= x4268 false) (= x4174 false) (= x3517 (= x2918 1)) (= x4445 53968831973089624780961702553170747426560148566936995398294956610382735605760) (= x66 x2014) (= 0 x2741) (>= 127 x3994) (<= 1 x3938) (<= x3994 127))) (and (=> (and (and (= 100 x2271) (= true x2767) (= false x2234)) (not x3517)) x3602) (=> (and x3517 (and (and (= 2 x960) (= x275 false)) (or (and (= (ite x275 1 0) x2000) (not x275)) (and (and (>= 1461501637330902918203684832716283019655932542975 x1123) (= x2000 (ite (not (= x3591 x1123)) 1 0))) x275)))) x2077))))) (=> (and (not x1826) (and (= true x637) (= 132 x879) (= false x3814))) x1761))))))) (=> (not x3161) x3189))))))))) (=> (not x2260) x3189))))) x2353))
(assert (x2854 x2446))
(assert (x1740 x1220))
(assert (x1740 x547))
(assert (= x2816 (=> (and (= x3333 (x4487 x2380)) (= x3597 (not (> x4232 224)))) (and x1242 x3597))))
(assert (= (x4185 (x3614 64 x4441 36)) 36))
(assert (=> (<= x1562 10000) (= 0 (x4391 x1562))))
(assert (x1740 x3794))
(assert (= 0 (x4391 2001815235)))
(assert (=> (>= 10000 x3722) (= (x4391 x3722) 0)))
(assert (= (x2094 (x3614 64 x3591 2)) 64))
(assert (= (=> (and (= x879 0) (= x4043 false) (= true x3699)) x1761) x3239))
(assert (x1740 x2104))
(assert (= x4375 (x226 (x2749 x736 x2211 x1126 x1110 x163 x4375))))
(assert (x105 100000))
(assert (= (x2094 (x3096 x722 x22)) x722))
(assert (< 10000 (x3614 64 x3201 36)))
(assert (= (x4185 (x3614 64 x1856 (ite (= x1132 0) x2937 (ite (<= x1132 32) x2102 (ite (<= x1132 64) x3958 (ite (<= x1132 96) x1380 (ite (>= 128 x1132) x529 (ite (<= x1132 160) x2871 (ite (<= x1132 192) x465 (ite (<= x1132 224) x2624 x111)))))))))) (ite (= 0 x1132) x2937 (ite (>= 32 x1132) x2102 (ite (<= x1132 64) x3958 (ite (<= x1132 96) x1380 (ite (<= x1132 128) x529 (ite (>= 160 x1132) x2871 (ite (>= 192 x1132) x465 (ite (<= x1132 224) x2624 x111))))))))))
(assert (not (x105 (x3096 32 103))))
(assert (= (=> (and (= x2325 0) (= false x2276) (= true x1416)) x1268) x3011))
(assert (= (x3121 x736 x3286 x2163 x1635 x3508) (x4391 (x3121 x736 x3286 x2163 x1635 x3508))))
(assert (x1740 x2572))
(assert (= (x2789 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) x4158))
(assert (= x387 (x2789 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902))))
(assert (x1740 x2990))
(assert (=> (<= x1863 10000) (= (x4391 x1863) 0)))
(assert (x1740 x3372))
(assert (x1740 x923))
(assert (=> (<= x1485 10000) (= 0 (x4391 x1485))))
(assert (= 36 (x4185 (x3614 64 x4284 36))))
(assert (= (or (and x3855 x1219) (and x2220 x55)) x4191))
(assert (= (and x4343 (not x3022)) x580))
(assert (= (x4391 (x4438 x2268 x1928 x3123 x4389)) (x4438 x2268 x1928 x3123 x4389)))
(assert (= x2484 x588))
(assert (x1740 x559))
(assert (=> (>= 10000 x892) (= 0 (x4391 x892))))
(assert (= (and x1717 x4162) x3887))
(assert (= x3328 (or x3964 x4128 x1400)))
(assert (= (x4185 (x3121 x722 x1336 x1923 x495 x2249)) x1923))
(assert (=> (>= 10000 x933) (= 0 (x4391 x933))))
(assert (=> (<= x4396 10000) (= 0 (x4391 x4396))))
(assert (x1740 x2472))
(assert (= x4380 (x2019 (x3614 x1772 x4380 x3036))))
(assert (= (x1339 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x3408))
(assert (= 0 (x4391 35477284059277649309253622239531857712935939630608236286772267603529442882419)))
(assert (= x2313 (x2094 (x2749 x2313 x2520 x3804 x1652 x3880 x2331))))
(assert (= (and x1139 (not x3097)) x2050))
(assert (= (and x2147 x2210) x189))
(assert (= (x2094 (x3614 64 x2980 (ite (= 0 x1954) x3200 (ite (<= x1954 32) x1090 (ite (<= x1954 64) x2853 (ite (>= 96 x1954) x2688 (ite (<= x1954 128) x3252 (ite (<= x1954 160) x3909 (ite (>= 192 x1954) x2508 (ite (<= x1954 224) x4032 x2160)))))))))) 64))
(assert (= x809 (or x1833 x3)))
(assert (= (x2789 (x2749 x722 x2659 x1620 x1289 x950 x3715)) x950))
(assert (= 3 (x4185 (x3614 64 x2602 3))))
(assert (= x2602 (x2019 (x3614 64 x2602 3))))
(assert (= (=> (= x1526 (not (< 32 x1796))) (and x2337 x1526)) x905))
(assert (> (x3121 x1132 x2280 x1443 x2517 x2430) 10000))
(assert (x1740 x3405))
(assert (= x1414 x1242))
(assert (x1740 x965))
(assert (= (=> (and (= x2448 x1668) (= x4200 0) (= 2 x2930) (= x3647 x2089) (= x2089 x3379) (= x489 x4551) (= x2448 (x1329 255 x310))) x2970) x3931))
(assert (= (x4381 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x2882))
(assert (< (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2280 (x2019 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (= x3219 (=> (and (= x701 false) (= 36 x3130) (= true x173)) x3120)))
(assert (= (x2019 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) x1498))
(assert (= x2349 (x2019 (x3614 x1806 x2349 x1322))))
(assert (x692 x316))
(assert (< 10000 (x3614 x1806 x2349 x1322)))
(assert (not (x105 (x3614 64 x4284 36))))
(assert (= (=> (and (= (>= 224 x1772) x1142) (= x1772 (x2629 x3952))) (and x1142 (=> (and (= x4071 (x2629 x2592)) (= (x2629 x4045) x3353) (= x3681 (x3626 (+ 32 x4045))) (= x2379 (x2629 x1622)) (= (x2629 x557) x1411) (= (x3626 (+ 128 x4045)) x2080) (= x535 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) (= (x2629 x2528) x3882) (= x2592 (x3626 (+ x4045 32))) (= (x3626 (+ x4045 32)) x229) (= x2725 (x4438 x1772 x3892 x336 x1411)) (= x4433 (x2629 x963)) (= (x2629 x3881) x3757) (= (x3626 (+ x4045 64)) x2528) (= x2779 (x3096 x1772 x49)) (= x2835 (x3626 (+ x4045 128))) (= (> x2927 0) x3911) (= (x1465 0) x1946) (= (ite (= 0 x1772) x1946 (ite (<= x1772 32) x2779 (ite (>= 64 x1772) x167 (ite (<= x1772 96) x2725 (ite (>= 128 x1772) x1210 (ite (<= x1772 160) x345 (ite (<= x1772 192) x535 (ite (>= 224 x1772) x2291 x4155)))))))) x3149) (= (x2629 x4045) x259) (= (x3626 (+ x4045 64)) x3881) (= (x2629 x1844) x336) (= x557 (x3626 (+ x4045 64))) (= x1498 (x2629 x4045)) (= x151 (x2629 x2872)) (= (x3626 (+ 160 x4045)) x1394) (= x1622 (x3626 (+ 160 x4045))) (= x1077 (x2629 x2345)) (= x2291 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) (= (x3626 (+ 192 x4045)) x2345) (= (x2629 x1265) x2867) (= x4298 (x3626 (+ x4045 32))) (= (x3614 64 x2602 7) x837) (= (x2629 x4045) x49) (= x4380 (x2629 x4045)) (= (x3626 (+ 64 x4045)) x1265) (= x3512 (x2629 x4045)) (= x2927 (x2629 x2858)) (= (x3121 x1772 x3353 x4071 x2867 x151) x1210) (= x4048 (x2629 x3681)) (= (x2629 x2977) x612) (= (x2629 x2080) x2489) (= x1844 (x3626 (+ x4045 32))) (= x2872 (x3626 (+ 96 x4045))) (= x911 (x2629 x2957)) (= x3036 (x2629 x648)) (= (x3626 (+ 96 x4045)) x2783) (= x2254 (x2629 x1394)) (= x3877 (x2629 x229)) (= x1296 (x2629 x2783)) (= x648 (x3626 (+ 32 x4045))) (= (x3626 (+ x4045 128)) x963) (= x2181 (x3626 (+ x4045 96))) (= (x2629 x2181) x1547) (= x33 (x2629 x2835)) (= x345 (x2749 x1772 x3512 x825 x3882 x1296 x33)) (= x3892 (x2629 x4045)) (= x825 (x2629 x4298)) (= x2957 (x3626 (+ 96 x4045))) (= x167 (x3614 x1772 x4380 x3036)) (= (x3626 (+ x4045 64)) x2977)) (and (=> (and (and (= (x2629 x3843) x351) (= (> x2927 32) x90)) x3911) (and (=> (and x90 (and (= x2257 (x2604 x1634)) (= x1634 (x3626 (+ x3843 32))) (= x461 (> x2927 64)) (= x2024 (x3626 (+ 32 x1808))))) (and (=> (not x461) x164) (=> (and x461 (and (= (x3626 (+ 64 x3843)) x1566) (= x3316 (x2339 x1566)) (= x1120 (< 96 x2927)) (= x628 (x3626 (+ 64 x1808))))) (and (=> x1120 x2310) (=> (not x1120) x164))))) (=> (not x90) x164))) (=> (not x3911) x164))))) x2097))
(assert (x1740 x1014))
(assert (= (x3614 64 x432 12) (x4391 (x3614 64 x432 12))))
(assert (x1740 x124))
(assert (x1740 x4439))
(assert (x1740 x1652))
(assert (=> (<= x2179 10000) (= (x4391 x2179) 0)))
(assert (x1740 x4075))
(assert (x1740 x911))
(assert (x1740 x4155))
(assert (x1740 x1730))
(assert (= (x2019 (x3096 32 104)) 104))
(assert (= (and (not x1955) x1037) x4104))
(assert (= x4456 (and (not x3080) x824)))
(assert (= (and (not x195) x2978) x699))
(assert (x1740 x2535))
(assert (> (x3121 x2313 x2397 x2982 x2731 x1277) 10000))
(assert (x1740 x2622))
(assert (= (and x663 x809) x4343))
(assert (= (x2789 (x2749 x736 x2211 x1126 x1110 x163 x4375)) x163))
(assert (x83 x23))
(assert (x1740 x3846))
(assert (= (x4391 (x3614 64 x4284 2)) (x3614 64 x4284 2)))
(assert (x1740 x4057))
(assert (= (and (not x729) x755) x4299))
(assert (x1740 x1153))
(assert (x1740 x4339))
(assert (x692 x3052))
(assert (x1740 x1925))
(assert (x105 107317874183463056701504662589741776198067464202343767264461527615735374807040))
(assert (x1740 x3788))
(assert (x1740 x1949))
(assert (=> (>= 10000 x4441) (= 0 (x4391 x4441))))
(assert (x1740 x159))
(assert (= (x226 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x674))
(assert (= x3019 false))
(assert (x1740 x3795))
(assert (= x56 (and (not x170) x1067)))
(assert (x1740 x111))
(assert (x1740 x4426))
(assert (=> (<= x33 10000) (= (x4391 x33) 0)))
(assert (x2854 255))
(assert (= (=> (and (= (= 0 x965) x295) (or (not x295) x295)) x2907) x855))
(assert (x1740 x3694))
(assert (=> (>= 10000 x2701) (= (x4391 x2701) 0)))
(assert (= x2374 x3196))
(assert (= x851 (and x3552 x684)))
(assert (x1740 x3813))
(assert (x1740 x4287))
(assert (= (or x1697 x4173) x3689))
(assert (x1740 x4241))
(assert (= (or (and x3087 (not x359)) x3183) x2776))
(assert (=> (<= x1316 10000) (= (x4391 x1316) 0)))
(assert (x1740 x670))
(assert (= (x3614 64 x1421 (ite (= 0 x2268) x681 (ite (>= 32 x2268) x3888 (ite (<= x2268 64) x2239 (ite (>= 96 x2268) x2777 (ite (<= x2268 128) x2219 (ite (<= x2268 160) x3031 (ite (<= x2268 192) x2515 (ite (<= x2268 224) x1359 x3236))))))))) (x4391 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (>= 64 x2268) x2239 (ite (<= x2268 96) x2777 (ite (>= 128 x2268) x2219 (ite (>= 160 x2268) x3031 (ite (<= x2268 192) x2515 (ite (<= x2268 224) x1359 x3236))))))))))))
(assert (= x3480 x1715))
(assert (=> (<= x4258 10000) (= (x4391 x4258) 0)))
(assert (= x1132 (x2094 (x2749 x1132 x2695 x1710 x1661 x3721 x897))))
(assert (= (x2094 (x4438 x1132 x607 x653 x2622)) x1132))
(assert (x1740 x2933))
(assert (x1740 x933))
(assert (= (and x3825 x35) x3866))
(assert (= x3154 (=> (and (= (> x3885 0) x3232) (= (ite (< 0 x3748) x3052 (x1329 127 x3052)) x1796) (= x3885 (x4315 (- x3748 (mod (ite (> 32 x1796) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (div x426 2) x3052) (= x3748 (x1329 1 x426))) (and (=> (and x3232 (and (= (= x95 0) x2805) (= x95 (x1329 1 x426)))) (and (=> (and (= (> x1796 0) x1125) (not x2805)) (and (=> x1125 x905) (=> (not x1125) x2337))) (=> x2805 x3766))) (=> (not x3232) x1043)))))
(assert (= x2006 (x2094 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (not (x105 (x3096 x1806 x904))))
(assert (= x3305 (x2019 (x3121 x4440 x3305 x3268 x363 x1386))))
(assert (not (x105 (x3096 x3061 x47))))
(assert (=> (>= 10000 x2972) (= (x4391 x2972) 0)))
(assert (x1740 x1515))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x131 36)))
(assert (x1740 x1467))
(assert (x105 35477284059277649309253622239531857712935939630608236286772267603529442882419))
(assert (x2348 x1922))
(assert (= (x4438 x742 x2285 x1658 x458) (x4391 (x4438 x742 x2285 x1658 x458))))
(assert (x1740 x1421))
(assert (= (x2019 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) x1211))
(assert (< 10000 (x4438 x742 x2285 x1658 x458)))
(assert (x1740 x1188))
(assert (x1740 x2211))
(assert (x1740 x2287))
(assert (x1740 x2814))
(assert (= (and x2209 (not x3269)) x605))
(assert (x1740 x2181))
(assert (= x3081 (x4185 (x3614 x3122 x4134 x3081))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 32 x1162)))
(assert (x1740 x1265))
(assert (x1740 x2741))
(assert (= x4364 (and x2061 (not x1934))))
(assert (=> (<= x725 10000) (= 0 (x4391 x725))))
(assert (= x1966 (x2094 (x2749 x1966 x1707 x3979 x496 x2463 x390))))
(assert (=> (<= x1498 10000) (= (x4391 x1498) 0)))
(assert (= (x353 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) x3646))
(assert (= x3688 (=> (and (= (x3626 (+ x2322 128)) x3495) (= (x3614 64 x819 7) x1916) (= x1696 (>= 224 x1966)) (= x1966 (x4315 (- x2268 32))) (= (x4315 (- x3469 128)) x2268) (= (x3626 (+ 32 x3495)) x3469) (= x3741 (x3626 (+ 128 x2322)))) (and x1696 (=> (and (= (x977 192) x4230) (= x679 (x977 288)) (= (x4438 x1966 x1264 x832 x3788) x1780) (= (x977 128) x1264) (= (x3096 x1966 x1011) x4429) (= (x977 160) x3210) (= x4528 (x977 288)) (= (x977 128) x933) (= x725 (x977 224)) (= x2806 (x977 256)) (= (x977 224) x1354) (= x714 (x977 192)) (= (x977 128) x1707) (= (x977 320) x820) (= (x977 160) x2522) (= (x977 128) x1011) (= (>= 224 x2268) x3170) (= (x977 192) x1082) (= (x3614 x1966 x4426 x2522) x2407) (= (x977 160) x3979) (= x3496 (x977 160)) (= (x977 256) x3796) (= x4426 (x977 128)) (= (x977 160) x832) (= x1527 (x977 160)) (= x280 (x3121 x1966 x933 x3210 x4230 x4404)) (= x660 (ite (= 0 x1966) x4511 (ite (>= 32 x1966) x4429 (ite (<= x1966 64) x2407 (ite (<= x1966 96) x1780 (ite (<= x1966 128) x280 (ite (>= 160 x1966) x2704 (ite (<= x1966 192) x3279 (ite (>= 224 x1966) x3501 x4108))))))))) (= (x977 224) x2463) (= (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679) x3279) (= x4511 (x1465 0)) (= x2704 (x2749 x1966 x1707 x3979 x496 x2463 x390)) (= x4404 (x977 224)) (= x3772 (x977 128)) (= (x977 192) x3788) (= (x977 192) x496) (= x3501 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)) (= x515 (x977 128)) (= (x977 256) x390)) (and (=> (and (= x3780 (x977 288)) (= (x977 128) x1211) (= (x977 128) x4292) (= (x3626 (+ x3840 32)) x213) (= x3690 (x977 128)) (= x4285 (x977 160)) (= x1350 (x977 224)) (< x3840 x1756) (= x2777 (x4438 x2268 x1928 x3123 x4389)) (= (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780) x2515) (= x3123 (x977 160)) (= x3372 (x977 160)) (= x2239 (x3614 x2268 x4292 x4285)) (= x681 (x1465 0)) (= x719 (x3626 (+ x3679 x213))) (= x443 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (<= x2268 64) x2239 (ite (>= 96 x2268) x2777 (ite (<= x2268 128) x2219 (ite (>= 160 x2268) x3031 (ite (<= x2268 192) x2515 (ite (<= x2268 224) x1359 x3236)))))))))) (= x1928 (x977 128)) (= (x977 128) x2663) (= (div x1488 32) x4005) (= x906 (x977 320)) (= x133 (x3626 (+ x2322 160))) (= x4297 (x977 224)) (= x2023 (x977 160)) (= x40 (* x2132 32)) (= x1488 (x3626 (+ 31 x3679))) (= x74 (x977 192)) (= 128 x3224) (= (x977 288) x3673) (= x849 (x977 224)) (= x4394 (x977 128)) (= x2219 (x3121 x2268 x4394 x3334 x3409 x849)) (= x1983 (x977 192)) (= (x977 192) x4389) (= (div x3063 32) x2132) (= (x977 160) x3334) (= x3888 (x3096 x2268 x1273)) (= x2147 (or (and (= true (<= x559 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x559)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x559))) (= x3031 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) (or (<= x2322 115792089237316195423570985008687907853269984665640564039457584007913129639744) (>= x2322 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= x1273 (x977 128)) (= (x977 192) x1267) (= x3840 (+ x40 160)) (= (x3626 (+ x2322 31)) x3063) (= (x977 224) x2542) (= (x977 256) x774) (= x847 (x3626 (+ 32 x3734))) (= (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906) x1359) (= x1756 (x3626 (+ x3840 x847))) (= x4258 (x977 256)) (= (x2601 x3840) x559) (= (* x4005 32) x3734) (= x3409 (x977 192)) (= x2790 (x977 256)) (= x2670 (x977 160)) (<= 161 x1756)) (and (=> (not x2147) x3424) (=> (and (and (= x3089 false) (= 0 x2325) (= true x2824)) x2147) x1268))) x3170))))))
(assert (=> (>= 10000 x3793) (= (x4391 x3793) 0)))
(assert (x1740 x1756))
(assert (=> (<= x1267 10000) (= 0 (x4391 x1267))))
(assert (x1740 x3585))
(assert (< (x3121 x3122 x3227 x778 x81 x3441) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x3614 64 x4339 36)))
(assert (x1740 x1664))
(assert (=> (>= 10000 x2529) (= 0 (x4391 x2529))))
(assert (x1740 x8))
(assert (x1740 x860))
(assert (= (x353 (x3121 x1847 x1714 x2878 x1454 x805)) x1454))
(assert (x1740 x3673))
(assert (x1740 x2290))
(assert (> (x3614 64 x4284 2) 10000))
(assert (> (x3614 64 x432 12) 10000))
(assert (= x363 (x353 (x3121 x4440 x3305 x3268 x363 x1386))))
(assert (x1740 x1134))
(assert (x1740 x2744))
(assert (x1740 x1018))
(assert (= x2313 (x2094 (x3614 x2313 x2406 x2529))))
(assert (x1740 x2707))
(assert (= (x2019 (x3614 64 x1944 100)) x1944))
(assert (= x2502 (and x3515 x2911)))
(assert (=> (>= 10000 x2268) (= (x4391 x2268) 0)))
(assert (x2348 x513))
(assert (x1740 x2495))
(assert (= (x4185 (x2749 x742 x54 x1570 x1753 x3564 x1908)) x1570))
(assert (x1740 x3198))
(assert (not (x105 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077))))
(assert (= x307 (and (not x1862) x2013)))
(assert (=> (>= 10000 x3780) (= 0 (x4391 x3780))))
(assert (=> (>= 10000 x3229) (= 0 (x4391 x3229))))
(assert (x1740 x3962))
(assert (x1740 x794))
(assert (= (x4391 (x2749 x1966 x1707 x3979 x496 x2463 x390)) (x2749 x1966 x1707 x3979 x496 x2463 x390)))
(assert (x1740 x2448))
(assert (= (=> (and (= x2313 (x4315 (- x3264 128))) (= (x3626 (+ x1818 32)) x3264) (= (x3626 (+ x2322 128)) x1818) (= x1006 (x3626 (+ 128 x2322))) (= x2678 (>= 224 x3061)) (= (x4315 (- x2313 32)) x3061) (= x4472 (x3614 64 x819 7))) (and x2678 (=> (and (= (x4438 x3061 x144 x2535 x415) x1348) (= (x3586 160) x2535) (= x1974 (x3586 288)) (= (x3586 288) x1601) (= (x3096 x3061 x47) x2468) (= x677 (x3586 224)) (= x1360 (x3586 256)) (= x4328 (x3586 192)) (= (x3586 128) x144) (= x3928 (x3586 256)) (= x1699 (x3586 256)) (= x1768 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)) (= (x3586 128) x47) (= (x3586 160) x3520) (= x3102 (x3614 x3061 x1446 x3936)) (= x949 (ite (= 0 x3061) x3572 (ite (<= x3061 32) x2468 (ite (<= x3061 64) x3102 (ite (>= 96 x3061) x1348 (ite (<= x3061 128) x4463 (ite (>= 160 x3061) x4243 (ite (>= 192 x3061) x1768 (ite (<= x3061 224) x4546 x1798))))))))) (= (x3586 160) x1981) (= x2005 (x3586 128)) (= x3572 (x1465 0)) (= x4243 (x2749 x3061 x2884 x3520 x4328 x2729 x1360)) (= x2884 (x3586 128)) (= x415 (x3586 192)) (= (x3586 128) x331) (= (x3586 224) x1357) (= x1107 (>= 224 x2313)) (= (x3586 192) x3711) (= (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062) x4546) (= x3062 (x3586 320)) (= (x3586 160) x3487) (= x3099 (x3586 192)) (= (x3586 224) x2729) (= (x3586 160) x3936) (= x1446 (x3586 128)) (= x2174 (x3586 160)) (= (x3586 192) x4396) (= x1999 (x3586 128)) (= x4463 (x3121 x3061 x2005 x2174 x3711 x1357)) (= (x3586 224) x2040)) (and x1107 (=> (and (= (x3614 x2313 x2406 x2529) x823) (= x2808 (x3586 160)) (= (x3586 224) x3880) (= x282 (x3586 160)) (= x2529 (x3586 160)) (= x2314 (x3586 128)) (= (x3586 128) x4331) (= (x3614 64 x1421 (ite (= 0 x2313) x2088 (ite (>= 32 x2313) x2987 (ite (<= x2313 64) x823 (ite (<= x2313 96) x311 (ite (>= 128 x2313) x922 (ite (>= 160 x2313) x1565 (ite (<= x2313 192) x2988 (ite (>= 224 x2313) x2034 x326))))))))) x1636) (= (x3586 192) x441) (= (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460) x2988) (= (x3586 128) x2406) (= (x3586 224) x2009) (= x3086 (x526 x1636)) (= (x3586 192) x1652) (= (x3586 224) x1277) (= x1971 (x3586 256)) (= (x3096 x2313 x4036) x2987) (= x2990 (x3586 192)) (= x3460 (x3586 288)) (= (x3586 256) x3793) (= x3245 (x3586 288)) (= x2731 (x3586 192)) (= (x3586 128) x2397) (= x2331 (x3586 256)) (= (= 0 x3086) x3097) (= x2982 (x3586 160)) (= (x4438 x2313 x2314 x282 x441) x311) (= x2384 (x3586 128)) (= (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743) x2034) (= x2088 (x1465 0)) (= x2743 (x3586 320)) (= (x3586 192) x3646) (= x1562 (x3586 160)) (= (x3586 224) x1849) (= x2520 (x3586 128)) (= (x3121 x2313 x2397 x2982 x2731 x1277) x922) (= (x2749 x2313 x2520 x3804 x1652 x3880 x2331) x1565) (= x3804 (x3586 160)) (= (x3586 128) x4036)) (and (=> (and (and (= x2325 132) (= x988 true) (= x3076 false)) x3097) x1268) (=> (not x3097) x2830))))))) x125))
(assert (= x1785 (=> (= x728 (= x1381 0)) (and (=> (and (not x728) (and (= x3492 x691) (= x2124 x1553) (= x4556 x278) (= x3198 x2347) (= x4525 x3694) (= x2103 x2358) (= x717 x2847) (= x1914 x3237) (= x3844 x2874) (= x980 x4410) (= x3135 x2746) (= x2917 x1281) (= x3464 x150) (= x2427 x3282))) x4239) (=> (and x728 (and (= false x4384) (= x1896 x3130) (= x713 true))) x3120)))))
(assert (x1740 x3881))
(assert (= x2313 (x2094 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460))))
(assert (x1740 x3301))
(assert (x1740 x2509))
(assert (= (or x2942 x4448) x3))
(assert (= (and x684 (not x3552)) x2139))
(assert (=> (<= x2790 10000) (= 0 (x4391 x2790))))
(assert (= x3704 (and x595 x1276)))
(assert (= x3471 (or x1331 x1258)))
(assert (x1740 x1511))
(assert (x1740 x954))
(assert (=> (<= x2489 10000) (= (x4391 x2489) 0)))
(assert (x2348 x4106))
(assert (x1740 x1138))
(assert (x1740 x1315))
(assert (x1740 x812))
(assert (x1740 x3496))
(assert (=> (>= 10000 x2990) (= 0 (x4391 x2990))))
(assert (x1740 x3537))
(assert (= (x2094 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) x2313))
(assert (x2854 x1056))
(assert (not (x105 (x3121 x2268 x4394 x3334 x3409 x849))))
(assert (not (x105 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (x1740 x420))
(assert (x1740 x134))
(assert (x1740 x3901))
(assert (x1740 x3780))
(assert (=> (>= 10000 x543) (= 0 (x4391 x543))))
(assert (=> (<= x2659 10000) (= (x4391 x2659) 0)))
(assert (=> (<= x3298 10000) (= 0 (x4391 x3298))))
(assert (= x49 (x2019 (x3096 x1772 x49))))
(assert (= (and x580 (not x3697)) x2003))
(assert (not (x105 (x3614 64 x1081 36))))
(assert (x1740 x838))
(assert (= (x2094 (x2749 x2006 x1791 x108 x4406 x2320 x3533)) x2006))
(assert (= 64 (x2094 (x3614 64 x3700 10))))
(assert (= x4258 (x226 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (= x3574 (and x1451 x3911)))
(assert (x1740 x1886))
(assert (x2854 x1637))
(assert (= (x4381 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) x1850))
(assert (=> (>= 10000 x4285) (= (x4391 x4285) 0)))
(assert (= x4056 (and (not x4161) x1216)))
(assert (= (x2094 (x3614 x1772 x4380 x3036)) x1772))
(assert (x1740 x1854))
(assert (=> (>= 10000 x677) (= (x4391 x677) 0)))
(assert (= (x3614 64 x3202 12) (x4391 (x3614 64 x3202 12))))
(assert (x1740 x3790))
(assert (x1740 x4138))
(assert (x2348 x1637))
(assert (=> (<= x384 10000) (= (x4391 x384) 0)))
(assert (= (x2789 (x2749 x3061 x2884 x3520 x4328 x2729 x1360)) x2729))
(assert (= x1718 (x2019 (x4438 x1847 x1718 x1485 x1149))))
(assert (x1740 x850))
(assert (not (x105 (x3614 64 x131 36))))
(assert (=> (<= x47 10000) (= (x4391 x47) 0)))
(assert (x1740 x479))
(assert (= (or (and (not x2260) x3589) (and (not x3161) x4519)) x994))
(assert (= x2006 (x2094 (x3121 x2006 x3687 x1342 x2230 x3944))))
(assert (=> (>= 10000 x2314) (= (x4391 x2314) 0)))
(assert (x1740 x3101))
(assert (= x1446 (x2019 (x3614 x3061 x1446 x3936))))
(assert (= (x2789 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780)) x1350))
(assert (x1740 x3122))
(assert (x1740 x3298))
(assert (= x4512 (and (not x55) x2220)))
(assert (= x1772 (x2094 (x3096 x1772 x49))))
(assert (x1740 x336))
(assert (=> (>= 10000 x2397) (= 0 (x4391 x2397))))
(assert (x1740 x766))
(assert (x1740 x2015))
(assert (= x418 (x226 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (x1740 x2207))
(assert (= (and (not x3337) x4225) x661))
(assert (x1740 x2319))
(assert (= x1327 (x1339 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850))))
(assert (x1740 x4518))
(assert (x1740 x369))
(assert (= (and x2432 x881) x695))
(assert (x1740 x3139))
(assert (x1740 x1145))
(assert (x1740 x2952))
(assert (x1740 x989))
(assert (x1740 x3075))
(assert (x1740 x3146))
(assert (= x4146 (and x3627 (not x427))))
(assert (x1740 x1365))
(assert (x1740 x955))
(assert (= x2342 (x2019 (x3614 64 x2342 0))))
(assert (=> (>= 10000 x1132) (= (x4391 x1132) 0)))
(assert (= x2200 (and x3803 (not x4092))))
(assert (x1740 x4322))
(assert (x1740 x368))
(assert (x1740 x2347))
(assert (=> (<= x1100 10000) (= 0 (x4391 x1100))))
(assert (= 0 (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x4443 (and x4217 x1244)))
(assert (x1740 x1828))
(assert (= (and x697 (not x2665)) x821))
(assert (= x4412 (=> (= x431 (= 0 x2297)) (and (=> (and (and (= x1196 x1878) (= x4204 x798)) (not x431)) x2913) (=> (and x431 (and (= x2300 true) (= x4517 x4423) (= x3295 false))) x26)))))
(assert (= (x4391 (x3614 64 x908 12)) (x3614 64 x908 12)))
(assert (x692 x1433))
(assert (x1740 x884))
(assert (x1740 x3681))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x1772 x3353 x4071 x2867 x151)))
(assert (x1740 x2924))
(assert (= (x4185 (x3614 64 x1856 (ite (= x1847 0) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (>= 96 x1847) x240 (ite (<= x1847 128) x2899 (ite (>= 160 x1847) x1119 (ite (<= x1847 192) x1235 (ite (>= 224 x1847) x172 x324)))))))))) (ite (= 0 x1847) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (>= 96 x1847) x240 (ite (<= x1847 128) x2899 (ite (<= x1847 160) x1119 (ite (>= 192 x1847) x1235 (ite (<= x1847 224) x172 x324))))))))))
(assert (x2854 x23))
(assert (= 12 (x4185 (x3614 64 x3411 12))))
(assert (= (x3096 x1966 x1011) (x4391 (x3096 x1966 x1011))))
(assert (= (and x2733 (not x594)) x4519))
(assert (= (x1339 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)) x1974))
(assert (= x3513 (x2019 (x2749 x4440 x3513 x1390 x1100 x4158 x1285))))
(assert (= (x4185 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x968))
(assert (x1740 x3784))
(assert (=> (<= x1661 10000) (= (x4391 x1661) 0)))
(assert (=> (>= 10000 x1167) (= 0 (x4391 x1167))))
(assert (= x564 (and x3866 x776)))
(assert (not (x105 (x3121 x3061 x2005 x2174 x3711 x1357))))
(assert (= (x226 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)) x2806))
(assert (= x725 (x2789 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (= (and x2792 x1825) x3895))
(assert (x1740 x1666))
(assert (= x2656 (and (not x3322) x1309)))
(assert (= x3343 (=> (and (= x18 x3035) (= x4544 1) (= x2732 0)) x961)))
(assert (=> (>= 10000 x3804) (= (x4391 x3804) 0)))
(assert (x1740 x33))
(assert (x1740 x79))
(assert (x1740 x983))
(assert (= (x2094 (x3614 x1966 x4426 x2522)) x1966))
(assert (=> (>= 10000 x2436) (= (x4391 x2436) 0)))
(assert (x1740 x2222))
(assert (x1740 x448))
(assert (x1740 x562))
(assert (x105 53968831973089624780961702553170747426560148566936995398294956610382735605760))
(assert (x1740 x3629))
(assert (= x3314 (and x3485 x436)))
(assert (x2348 x683))
(assert (=> (>= 10000 x1277) (= (x4391 x1277) 0)))
(assert (not (x105 (x3614 64 x256 10))))
(assert (x1740 x337))
(assert (x105 35477284059277649309253622239531857712935939529143554018288893216769000107873))
(assert (x1740 x682))
(assert (x1740 x934))
(assert (x1740 x767))
(assert (x1740 x396))
(assert (= (x2094 (x3614 64 x1455 36)) 64))
(assert (= (and x2568 (not x3045)) x1139))
(assert (= (x4185 (x3614 x4440 x983 x1770)) x1770))
(assert (x1740 x624))
(assert (= (and x3574 (not x90)) x309))
(assert (= x2140 (x2789 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744))))
(assert (x1740 x4298))
(assert (x1740 x3886))
(assert (= x3726 (and (not x1225) x348)))
(assert (not (x105 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902))))
(assert (x1740 x1128))
(assert (x1740 x2079))
(assert (x1740 x3719))
(assert (=> (<= x441 10000) (= 0 (x4391 x441))))
(assert (x1740 x1662))
(assert (x1740 x289))
(assert (= x2255 (and (not x828) x2844)))
(assert (=> (<= x1446 10000) (= (x4391 x1446) 0)))
(assert (=> (>= 10000 x819) (= 0 (x4391 x819))))
(assert (= x3854 (not (and (= (x2836 x21) x3700) (= (x3614 64 x3700 10) x4428)))))
(assert (= x4392 (x226 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882))))
(assert (x1740 x558))
(assert (x1740 x2859))
(assert (x1740 x2444))
(assert (x2348 x3366))
(assert (x1740 x1983))
(assert (x1740 x3643))
(assert (= x1847 (x2094 (x4438 x1847 x1718 x1485 x1149))))
(assert (x1740 x3049))
(assert (x1740 x133))
(assert (=> (<= x3646 10000) (= 0 (x4391 x3646))))
(assert (x1740 x2083))
(assert (= x4339 (x2019 (x3614 64 x4339 6))))
(assert (x1740 x2904))
(assert (x1740 x1654))
(assert (x1740 x4489))
(assert (= x3461 (=> (and (= x115 (= 0 x4078)) (= (x154 x1133) x4078)) (and (=> (not x115) x2028) (=> (and (and (= x2516 true) (= x875 false) (= x4423 0)) x115) x26)))))
(assert (x1740 x897))
(assert (x1592 x3378))
(assert (not (x105 (x3096 x1132 x312))))
(assert (=> (<= x3513 10000) (= (x4391 x3513) 0)))
(assert (x1740 x4036))
(assert (not (x105 (x3614 64 x4330 10))))
(assert (= 64 (x2094 (x3614 64 x4339 2))))
(assert (x1740 x2940))
(assert (not (x105 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850))))
(assert (=> (>= 10000 x722) (= 0 (x4391 x722))))
(assert (x1740 x3655))
(assert (=> (>= 10000 x565) (= 0 (x4391 x565))))
(assert (= (=> (= (= 0 x3954) x32) (and (=> (and (and (= x2271 x1423) (= true x1489) (= x1038 false)) x32) x3602) (=> (and (not x32) (and (= 160 x732) (= (= x3968 x2458) x3070))) (and (=> (and (and (= x3743 (<= x1741 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= false x3246) (= x1931 (and x1385 x3743)) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2315) (= (< (* 1000000000 x1127) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1385) (= x1782 x1737) (= 36 x34) (= (x154 x3968) x3108) (= x1782 x1127) (<= x4248 127) (>= 127 x4248) (= (* 1000000000 x1127) x1741) (= 3628442803 x705) (= x2709 false) (>= x3108 1)) x3070) (and (=> (and x1931 (and (= x871 (x3959 x379)) (= (x1701 x3023) x610) (= (x3614 64 x3591 2) x3023) (= x1741 x1002) (= (< x871 x610) x2487) (<= x1741 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 0 x1741) (= (x3614 64 x3591 1) x379))) (and (=> (and (not x2487) (and (= x3873 (> x1441 x871)) (= (x4315 (- x871 x610)) x1441))) (and (=> (and (not x3873) (= x4357 (ite (< x1441 x1002) 1 0))) x3837) (=> (and (and (= x2916 false) (= 36 x710) (= true x1675)) x3873) x2722))) (=> (and (= x4357 (ite x2487 1 0)) x2487) x3837))) (=> (not x1931) x4207))) (=> (and (not x3070) (and (= x935 false) (<= 1 x2458) (>= 127 x1157) (<= x1133 1461501637330902918203684832716283019655932542975) (= (x154 x2774) x744) (= x1127 x1260) (= x2458 x2774) (= 97822624453686575479804928673988797637476738513438931194560248106084831592448 x2208) (= 3628442803 x1304) (<= x2458 1461501637330902918203684832716283019655932542975) (<= x1157 127) (= (= x1133 x3591) x1490) (>= x744 1) (= x618 36) (= false x1263))) (and (=> (and (not x1490) (and (= true x96) (= x4423 0) (= x4130 false))) x26) (=> (and x1490 (and (>= 255 x4441) (= x436 (= 255 x4441)))) (and (=> (and x436 (and (= false x2585) (= x1702 true) (= 36 x4423))) x26) (=> (and (and (= (= x3141 0) x761) (= x3141 (x3177 x1408)) (= (x1329 255 x91) x4339) (= x91 (+ 1 x4441)) (= (x3614 64 x4441 36) x1408) (= x3138 (x1329 255 x91))) (not x436)) (and (=> (and (= x2186 (= 1 x3141)) (not x761)) (and (=> (and (= x3078 (= x4339 255)) x2186) (and (=> (and (not x3078) (and (= (x1329 255 x4549) x4121) (= x3402 (x3614 64 x4339 6)) (= (= x1863 255) x3197) (>= 65535 x1438) (= x1863 (x1329 255 x4549)) (= x4549 (+ 1 x4339)) (= (x831 x3402) x1438))) (and (=> x3197 x763) (=> (and (and (= x4378 (x1374 x3344)) (= x1244 (< 0 x642)) (= (x1329 255 x2446) x2367) (>= 18446744073709551615 x4378) (= x145 (ite (> x1962 0) x576 (x1329 127 x576))) (= (div x3378 2) x576) (= x642 (x4315 (- x1962 (mod (ite (> 32 x145) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x41 (x1329 255 x2446)) (= (x3614 64 x1863 12) x3344) (= x1962 (x1329 1 x3378)) (= (+ 1 x1863) x2446)) (not x3197)) (and (=> (not x1244) x626) (=> (and (and (= (x1329 1 x3378) x3824) (= x2490 (= 0 x3824))) x1244) (and (=> (and (= x1638 (< 0 x145)) (not x2490)) (and (=> (not x1638) x1140) (=> x1638 x882))) (=> (and (and (or (= 0 x3105) (= x3105 32)) (= x3105 (* (ite (not (= 0 x145)) 1 0) 32))) x2490) x25))))))) (=> x3078 x1193))) (=> (and (= (= x3141 2) x1182) (not x2186)) (and (=> (and (not x1182) (= (= 3 x3141) x828)) (and (=> (and (= (= 4 x3141) x1976) (not x828)) (and (=> (and x1976 (= x2644 (= x4339 255))) (and (=> (and (not x2644) (and (= (x1329 255 x2943) x3535) (= (x3177 x885) x1703) (= x885 (x3614 64 x4339 36)) (= x1035 (= 255 x1944)) (= x1944 (x1329 255 x2943)) (= (+ 1 x4339) x2943))) (and (=> x1035 x2157) (=> (and (not x1035) (and (= (= 255 x3821) x2588) (= x1532 (x1813 x2770)) (= x3821 (x1329 255 x1056)) (= (x1329 255 x1056) x2532) (= (x3614 64 x1944 100) x2770) (= x1056 (+ 1 x1944)))) (and (=> x2588 x763) (=> (and (not x2588) (and (= x170 (and x1839 x236)) (= (x1329 255 x1) x2055) (= x1 (+ x3821 1)) (= (x993 x2774) x462) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1188 x1703)) x1839) (= x2460 (x3614 64 x3821 36)) (= x1188 (x993 x1133)) (= x236 (<= x1703 x462)) (= x3550 (x1329 255 x1)) (= (x3177 x2460) x1333))) (and (=> x170 x4049) (=> (and (not x170) (and (= x4423 0) (= x1466 false) (= x2886 true))) x26))))))) (=> x2644 x1193))) (=> (and (= x1088 (= x3141 5)) (not x1976)) (and (=> (and (not x1088) (= (= 6 x3141) x4436)) (and (=> (and (= (= 255 x4339) x3111) x4436) (and (=> (and (and (= (x1329 255 x204) x1467) (= x2445 (x3614 64 x4339 36)) (= (x3177 x2445) x2195) (= (= x2766 255) x3913) (= (+ x4339 1) x204) (= x2766 (x1329 255 x204))) (not x3111)) (and (=> (and (not x3913) (and (= x4377 (x3177 x4277)) (= x3891 (x1329 255 x2049)) (= x4277 (x3614 64 x2766 36)) (= (+ x2766 1) x2049) (= x4118 (x1329 255 x2049)) (= (= 255 x3891) x4514))) (and (=> x4514 x763) (=> (and (not x4514) (and (= x944 (+ 1 x3891)) (= (= 255 x168) x4335) (= x168 (x1329 255 x944)) (= (x3177 x1909) x872) (= (x1329 255 x944) x362) (= (x3614 64 x3891 36) x1909))) (and (=> (and (and (= (x3614 64 x168 36) x1835) (= x4075 (x1329 255 x1366)) (= (+ x168 1) x1366) (= (x154 x1133) x756) (= 128 x617) (= x503 (= x756 0)) (= x2859 (x3177 x1835)) (= x2104 (x1329 255 x1366))) (not x4335)) (and (=> (and (and (= 0 x4423) (= x1883 false) (= true x3046)) x503) x26) (=> (and (and (or (and (and (= x872 x1111) (= x1050 13123866003235860548192500634644069355060014211693331341089165407210616913920) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3778) (= x4377 x3373) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2195 x1843)) (= x1111 x614) (= false x2837) (= false x4337) (= (x4272 x1133) x1440) (= (+ x1440 x2195) x3778) (= 2 x1012) (= (x1329 255 x1366) x1807) (= (x4497 x2774) x1843) (= x4096 x955) (<= x3211 127) (= x1995 486791245) (= 100 x1371) (= x2652 x193) (= x1811 (- x3308 x2195)) (= true x3899) (<= 1 x2873) (= x193 (+ x2195 x1843)) (= x2873 (x154 x3591)) (>= x3778 0) (= x3308 (x2226 x1133)) (< (+ x2195 x1440) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x631 (- x2570 x2195)) (>= 127 x3211) (= (x993 x2774) x2570) (= x3145 x3373) (= x4451 false) (= x955 x2859) (>= x193 0) (= x2129 100) (<= x193 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4014 x3778)) x2133) (and (= 0 x2129) (not x2133))) (and (= x395 (x993 x2774)) (= (x993 x1133) x3276) (= x3435 (<= x2195 x395)) (= (and x4523 x3435) x2133) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3276 x2195)) x4523))) (not x503)) x2567))) (=> x4335 x202))))) (=> x3913 x2157))) (=> x3111 x1193))) (=> (and (not x4436) (= (= 7 x3141) x4223)) (and (=> (and x4223 (= (= x4339 255) x3544)) (and (=> x3544 x1193) (=> (and (and (= (x154 x1133) x2035) (<= x2501 1461501637330902918203684832716283019655932542975) (= x1018 (x1329 255 x1306)) (= x1306 (+ 1 x4339)) (= x4276 128) (= x2501 (x3921 x1953)) (= x1953 (x3614 64 x4339 2)) (= (x1329 255 x1306) x2304) (= (= 0 x2035) x3291)) (not x3544)) (and (=> (and (not x3291) (and (= x1317 (= x2774 x2551)) (<= x2551 1461501637330902918203684832716283019655932542975) (<= x308 127) (= x754 74700126319118050543342327103397598470879858733489597287354029460387927162880) (>= x3144 1) (= x3628 false) (= x2051 false) (= x2626 x2501) (= x1812 2770781680) (<= x308 127) (= x4073 36) (= (x154 x3591) x3144))) (and (=> (and (and (= (> x4209 0) x2270) (= x4209 (x993 x3591))) x1317) (and (=> (and (and (= x3168 x2304) (= x4361 x3647)) (not x2270)) x4418) (=> (and (and (= (x993 x3591) x4199) (= x3174 (>= x4199 x4209)) (= (< (+ x479 x4209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x854) (= x191 (and x854 x3174)) (= (x993 x2501) x479) (= 128 x3935)) x2270) (and (=> (and (and (= x3647 x2964) (= x3057 0) (= 0 x767) (= x1657 x2304)) (not x191)) x2961) (=> (and x191 (and (or (and (and (= x2304 x4203) (= x3647 x2162)) (not x3059)) (and (and (<= x457 4294967295) x2762 (= x59 (>= (x1817 x3591) x2552)) (= x215 x4203) (= x4388 x2162) (= x2552 (x4477 x3591)) (= x2762 (= (x1817 x2501) x2677)) x59 (= (x4477 x2501) x2677)) x3059)) (and (= x4488 (x198 x2501)) (= (> x3136 0) x3059) (= x3723 x257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (= (x993 x3591) x1080) (>= x257 0) (< (+ x4488 x4209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ x4209 x4488) x257) (= x633 (- x1080 x4209))))) x649))))) (=> (and (and (= true x4540) (= x4057 100) (= x3529 false)) (not x1317)) x813))) (=> (and x3291 (and (= x667 false) (= x4423 0) (= true x3986))) x26))))) (=> (and (= x409 (= x3141 8)) (not x4223)) (and (=> (and x409 (= (= x4339 255) x3080)) (and (=> (and (not x3080) (and (= (x154 x1133) x3619) (= x264 128) (= (+ x4339 1) x4106) (= x2904 (x1329 255 x4106)) (= (x3177 x161) x2350) (= x161 (x3614 64 x4339 36)) (= x1378 (x1329 255 x4106)) (= x3050 (= 0 x3619)))) (and (=> (and (and (= x2566 (= x2551 x2774)) (= x4011 36) (<= x3382 127) (= false x2424) (<= x3382 127) (>= x448 1) (= x1396 false) (= (x154 x3591) x448) (= x2350 x1093) (= 35425322552009646506518338594398286811668114190755561836384294568426616127488 x947) (= 1313998243 x2828) (<= x2551 1461501637330902918203684832716283019655932542975)) (not x3050)) (and (=> (and (= x372 (> 100000 x2350)) x2566) (and (=> (and (not x372) (and (= x4517 0) (= (x3177 x161) x4383) (= 1 x2297) (= x1378 x1196) (= x4204 x3647))) x3514) (=> (and x372 (and (= false x3332) (= x3623 true) (= x1593 4))) x3509))) (=> (and (and (= x1593 100) (= false x2948) (= x544 true)) (not x2566)) x3509))) (=> (and x3050 (and (= false x1815) (= 0 x4423) (= true x1542))) x26))) (=> x3080 x1193))) (=> (and (and (= x4339 x1878) (= x798 x3647)) (not x409)) x2913))))))) (=> (and x1088 (= (= x4339 255) x3024)) (and (=> (and (and (= x1487 (x3177 x2685)) (= x2685 (x3614 64 x4339 36)) (= x2559 (x1329 255 x1637)) (= x1637 (+ x4339 1)) (= x210 (x1329 255 x1637)) (= (= x2559 255) x1832)) (not x3024)) (and (=> (and (and (<= x647 65535) (= (= x2533 255) x152) (= (x1329 255 x513) x2533) (= x4279 (x1329 255 x513)) (= (x3614 64 x2559 6) x1108) (= x647 (x831 x1108)) (= x513 (+ 1 x2559))) (not x1832)) (and (=> x152 x202) (=> (and (not x152) (and (= x1748 (x4315 (- x3029 (mod (ite (> 32 x1404) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3614 64 x2533 12) x880) (= (div x3378 2) x3984) (= x1856 (x1374 x880)) (>= 18446744073709551615 x1856) (= (x1329 255 x683) x724) (= x711 (x1329 255 x683)) (= x3391 (> x1748 0)) (= x683 (+ 1 x2533)) (= x1404 (ite (> x3029 0) x3984 (x1329 127 x3984))) (= x3029 (x1329 1 x3378)))) (and (=> (and x3391 (and (= (= 0 x2025) x1207) (= (x1329 1 x3378) x2025))) (and (=> (and (and (= (x3096 32 103) x4159) (= x3117 (> x1404 0))) (not x1207)) (and (=> (and (= 0 x3773) (not x3117)) x2418) (=> x3117 x4086))) (=> (and x1207 (and (= (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639680 x3378) x2198) (= x827 (* 32 (ite (not (= x1404 0)) 1 0))) (or (= 0 x827) (= 32 x827)) (= x3746 (+ x827 292)))) x2817))) (=> (not x3391) x89))))) (=> x1832 x2157))) (=> x3024 x1193))))))) (=> (and (= (= x4339 255) x2182) x828) (and (=> (and (not x2182) (and (= (x1329 255 x2865) x1515) (= (x3614 64 x4339 36) x245) (= x300 (= x1515 255)) (= x4300 (x3177 x245)) (= (x1329 255 x2865) x512) (= (+ 1 x4339) x2865))) (and (=> (and (not x300) (and (and (= x1957 (x1329 255 x3489)) (= x3489 (+ x1515 1)) (= (x154 x1133) x1174) (= x1171 128) (= x2136 (x3614 64 x1515 100)) (= x3562 (= x1174 0)) (= (x1329 255 x3489) x456) (= (x1813 x2136) x1118)) (or (and (not x3562) (and (= x2687 (x154 x3591)) (>= x2687 1) (>= 127 x3981) (= x1857 2) (= false x4432) (= false x305) (= x1590 false) (= x2394 false) (= x4423 100) (= true x516) (= x4415 (x1329 255 x3489)) (= 68 x1730) (= x4138 106705613605932439001713296114446454776331749937047859905631657259250407702528) (= 3957931183 x1777) (= x1118 x1888) (= x4305 x4300) (<= x3981 127) (= x3000 true))) (and x3562 (and (= x4423 0) (= true x1861) (= x4160 false)))))) x26) (=> x300 x2157))) (=> x2182 x1193))))) (=> (and (= (= 255 x4339) x4309) x1182) (and (=> x4309 x1193) (=> (and (and (>= 65535 x2797) (= x3765 (= x908 255)) (= x908 (x1329 255 x737)) (= x737 (+ 1 x4339)) (= x782 (x3614 64 x4339 6)) (= x2797 (x831 x782)) (= (x1329 255 x737) x2955)) (not x4309)) (and (=> x3765 x763) (=> (and (not x3765) (and (= (ite (< 0 x3066) x366 (x1329 127 x366)) x4028) (= (x1329 255 x2850) x112) (<= x502 18446744073709551615) (= x1595 (> x1246 0)) (= (x3614 64 x908 12) x1541) (= (x1329 255 x2850) x3110) (= x366 (div x3378 2)) (= x1246 (x4315 (- x3066 (mod (ite (> 32 x4028) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1329 1 x3378) x3066) (= (x1374 x1541) x502) (= x2850 (+ x908 1)))) (and (=> (not x1595) x626) (=> (and (and (= (= x2969 0) x2117) (= (x1329 1 x3378) x2969)) x1595) (and (=> (and (not x2117) (= x359 (> x4028 0))) (and (=> (not x359) x2484) (=> x359 x3777))) (=> (and (and (or (= x1459 0) (= 32 x1459)) (= (* 32 (ite (not (= x4028 0)) 1 0)) x1459)) x2117) x588))))))))))))) (=> (and x761 (= (= 255 x4339) x1955)) (and (=> x1955 x1193) (=> (and (and (= x365 (= 255 x1399)) (= x540 (x1329 255 x632)) (= x1117 (x3921 x2429)) (<= x1117 1461501637330902918203684832716283019655932542975) (= x1399 (x1329 255 x632)) (= (x3614 64 x4339 2) x2429) (= (+ x4339 1) x632)) (not x1955)) (and (=> (and (and (= (x1329 255 x3708) x4543) (>= 65535 x3119) (= (x1329 255 x3708) x3579) (= x2576 (x3614 64 x1399 6)) (= x3708 (+ 1 x1399)) (= (= x3579 255) x3630) (= x3119 (x831 x2576))) (not x365)) (and (=> (and (not x3630) (and (= (x1329 255 x927) x940) (= x1313 (x1329 255 x927)) (= x1724 (= 255 x1313)) (= (x3921 x2467) x2814) (= x927 (+ x3579 1)) (= (x3614 64 x3579 2) x2467) (<= x2814 1461501637330902918203684832716283019655932542975))) (and (=> (and (not x1724) (and (= x2661 (x154 x1133)) (= x52 (= 0 x2661)) (= 128 x1579) (= x310 (+ x1313 1)) (= x1202 (x1329 255 x310)) (= x3387 (x3177 x3568)) (= x3568 (x3614 64 x1313 36)) (= (x1329 255 x310) x4527))) (and (=> (and x52 (and (= x3217 true) (= x3917 false) (= 0 x4423))) x26) (=> (and (not x52) (and (= x4228 (x154 x3591)) (= x651 x2814) (= x487 3812630263) (= x464 x3119) (<= x3084 127) (>= x4228 1) (<= x3084 127) (>= 1461501637330902918203684832716283019655932542975 x2551) (= x3387 x1970) (= (= x2551 x2774) x35) (= false x1882) (= x1117 x220) (= x277 false) (= x4555 132) (= 102788308552044517260959567728648622381392053106279845986800620074717893623808 x4180))) (and (=> (and (and (= x2303 true) (= 100 x4551) (= false x1996)) (not x35)) x3931) (=> (and (= x776 (> 100000 x3387)) x35) (and (=> (and (not x776) (and (= x4527 x1668) (= (x831 x2576) x3596) (= x489 0) (= x2642 (x3921 x2429)) (= (x3921 x2467) x284) (= x3379 x3647) (= x4200 1) (= x3571 (x3177 x3568)))) x2970) (=> (and (and (= true x116) (= false x2052) (= x4551 4)) x776) x3931))))))) (=> x1724 x202))) (=> x3630 x763))) (=> x365 x2157))))))))))))))) x63))
(assert (= x1772 (x2094 (x2749 x1772 x3512 x825 x3882 x1296 x33))))
(assert (x1740 x2982))
(assert (x1740 x1626))
(assert (x1740 x1296))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x2602 7)))
(assert (=> (>= 10000 x2140) (= (x4391 x2140) 0)))
(assert (=> (>= 10000 x2160) (= (x4391 x2160) 0)))
(assert (= (x4185 (x3614 64 x1858 6)) 6))
(assert (= x148 (x353 (x4438 x722 x2191 x2213 x148))))
(assert (x1740 x2865))
(assert (x1740 x3165))
(assert (= x945 (and x1398 (not x2720))))
(assert (< (x3614 64 x4251 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x105 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743))))
(assert (x1740 x4061))
(assert (= (=> (and (or (not x1403) x1403) (= x1403 (= 0 x4544))) x492) x961))
(assert (=> (>= 10000 x3305) (= (x4391 x3305) 0)))
(assert (= x61 (and x2037 x3603)))
(assert (= (x3096 x1772 x49) (x4391 (x3096 x1772 x49))))
(assert (= x471 (x4185 (x3614 x722 x3055 x471))))
(assert (x1740 x249))
(assert (= x2907 (=> (= x1395 (= 0 x965)) (and (=> (and x1395 (= 0 x965)) x3343) (=> (and (not x1395) (and (= x2924 (x3626 (+ x1765 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1765)) (not (= x1765 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1765) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1765) (= x2554 (< x2639 32)) (not (= x1765 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= x1765 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1765 x2924))) (and (=> x2554 x3239) (=> (and (= x1669 (x2742 x1765)) (not x2554)) x3343)))))))
(assert (not (x105 (x3614 64 x3891 36))))
(assert (= (x2789 (x3121 x722 x1336 x1923 x495 x2249)) x2249))
(assert (x1740 x2350))
(assert (not (x105 (x3121 x2006 x3687 x1342 x2230 x3944))))
(assert (=> (>= 10000 x49) (= 0 (x4391 x49))))
(assert (=> (<= x1507 10000) (= 0 (x4391 x1507))))
(assert (not (x105 (x3096 x736 x558))))
(assert (x1740 x387))
(assert (= (x2094 (x3614 64 x131 36)) 64))
(assert (= x318 (and x4355 x2096)))
(assert (x1740 x1379))
(assert (x2348 x2446))
(assert (= 100 (x4185 (x3614 64 x1944 100))))
(assert (> (x3121 x3122 x3227 x778 x81 x3441) 10000))
(assert (= (x2094 (x2749 x1806 x3606 x1022 x1584 x1469 x2466)) x1806))
(assert (x1740 x2390))
(assert (x1740 x4331))
(assert (x1740 x3409))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x168 36)))
(assert (x1740 x2433))
(assert (x1740 x4065))
(assert (x2854 x4405))
(assert (not (x105 (x1465 0))))
(assert (= x302 (and x639 x435)))
(assert (x1740 x3883))
(assert (= (x3614 x742 x4509 x573) (x4391 (x3614 x742 x4509 x573))))
(assert (x1740 x4134))
(assert (x1740 x2806))
(assert (= (or x2355 x851) x4345))
(assert (=> (<= x2672 10000) (= (x4391 x2672) 0)))
(assert (= (x4391 (x3121 x742 x2215 x2202 x1513 x1546)) (x3121 x742 x2215 x2202 x1513 x1546)))
(assert (=> (<= x3036 10000) (= (x4391 x3036) 0)))
(assert (x1740 x4441))
(assert (not (x105 (x3614 64 x1863 12))))
(assert (x1740 x1093))
(assert (x1740 x86))
(assert (=> (<= x54 10000) (= 0 (x4391 x54))))
(assert (= (and x4379 x3695) x182))
(assert (x1740 x441))
(assert (= (x4391 x2033) (x4391 (+ 1 x2033))))
(assert (x1740 x2227))
(assert (x692 x2107))
(assert (x2348 x1745))
(assert (=> (<= x622 10000) (= 0 (x4391 x622))))
(assert (=> (>= 10000 x3099) (= 0 (x4391 x3099))))
(assert (x1740 x135))
(assert (< 10000 (x2749 x742 x54 x1570 x1753 x3564 x1908)))
(assert (= (and x2084 (not x275)) x2411))
(assert (> (x3614 x3061 x1446 x3936) 10000))
(assert (= (x4185 (x4438 x1966 x1264 x832 x3788)) x832))
(assert (x1740 x3596))
(assert (= (x353 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) x4201))
(assert (x1740 x292))
(assert (x1740 x509))
(assert (x1740 x2249))
(assert (= (x2789 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)) x2009))
(assert (x1740 x130))
(assert (x1740 x744))
(assert (x1740 x2480))
(assert (= (or x182 (and (not x3695) x4379)) x1355))
(assert (x1740 x363))
(assert (x1740 x229))
(assert (=> (>= 10000 x3122) (= 0 (x4391 x3122))))
(assert (=> (<= x3190 10000) (= (x4391 x3190) 0)))
(assert (= x2900 (x226 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (= (or (and (not x2496) x2827) x318 (and x1295 (not x2091)) (and (not x4355) x2096) (and x680 (not x2159))) x4047))
(assert (x1740 x1277))
(assert (= (x2094 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)) x1966))
(assert (x1740 x3862))
(assert (not (x105 (x3614 64 x647 7))))
(assert (= 6 (x4185 (x3614 64 x2559 6))))
(assert (x1740 x3400))
(assert (= x1954 (x2094 (x3096 x1954 x2574))))
(assert (x1740 x2592))
(assert (not (x105 (x3121 x2313 x2397 x2982 x2731 x1277))))
(assert (= (and x2634 (not x621)) x480))
(assert (x2854 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (=> (>= 10000 x158) (= (x4391 x158) 0)))
(assert (x1740 x303))
(assert (x1740 x2918))
(assert (= (x4391 (x3614 64 x4339 36)) (x3614 64 x4339 36)))
(assert (x1740 x2774))
(assert (= (or x1895 x445) x1521))
(assert (x1740 x1164))
(assert (= (x2789 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) x2542))
(assert (= (x2789 (x2749 x1132 x2695 x1710 x1661 x3721 x897)) x3721))
(assert (= x2562 (and x1976 x2255)))
(assert (= (or x4363 (and x4211 (not x1343))) x4413))
(assert (x1740 x2306))
(assert (x1740 x2213))
(assert (x1740 x2125))
(assert (=> (<= x81 10000) (= 0 (x4391 x81))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x3122 x4134 x3081)))
(assert (x1740 x720))
(assert (= x3496 (x4185 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (x1740 x4286))
(assert (< (x3614 64 x1856 (ite (= x1132 0) x2937 (ite (>= 32 x1132) x2102 (ite (<= x1132 64) x3958 (ite (<= x1132 96) x1380 (ite (>= 128 x1132) x529 (ite (>= 160 x1132) x2871 (ite (>= 192 x1132) x465 (ite (>= 224 x1132) x2624 x111))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2062 (not x992)) x3186))
(assert (=> (>= 10000 x1421) (= (x4391 x1421) 0)))
(assert (= (x2019 (x3614 64 x3821 36)) x3821))
(assert (x1740 x3440))
(assert (x1740 x4353))
(assert (= 64 (x2094 (x3614 64 x3579 2))))
(assert (not (x105 (x2749 x3122 x2773 x1507 x214 x337 x3756))))
(assert (=> (>= 10000 x2695) (= (x4391 x2695) 0)))
(assert (x1740 x4503))
(assert (x1740 x3313))
(assert (x1740 x3057))
(assert (x1740 x2841))
(assert (x1740 x614))
(assert (x1740 x2607))
(assert (x1740 x3646))
(assert (not (x105 (x4438 x736 x1007 x1021 x727))))
(assert (= (or x3577 x2003) x3868))
(assert (= x3522 (=> (and (= x3912 x570) (= x1044 x169) (= x3139 x460)) x1364)))
(assert (x1740 x390))
(assert (= (x4391 (x3614 64 x1197 36)) (x3614 64 x1197 36)))
(assert (= x3493 (x353 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (=> (<= x3725 10000) (= 0 (x4391 x3725))))
(assert (x1740 x40))
(assert (> (x3614 64 x2602 3) 10000))
(assert (x1740 x4113))
(assert (> (x3614 64 x4284 36) 10000))
(assert (= (and (not x746) x2115) x36))
(assert (= 7 (x4185 (x3614 64 x647 7))))
(assert (= (x2094 (x3096 32 104)) 32))
(assert (x1740 x2080))
(assert (= (x4391 (x3121 x722 x1336 x1923 x495 x2249)) (x3121 x722 x1336 x1923 x495 x2249)))
(assert (= x3829 (=> (and (= x4518 x3139) (= x169 x1967) (= x2923 x570)) x1364)))
(assert (x2348 x2282))
(assert (x1740 x2582))
(assert (= x3518 (and (not x1490) x1602)))
(assert (= (or x430 x1325) x4270))
(assert (= (x4185 (x3121 x2313 x2397 x2982 x2731 x1277)) x2982))
(assert (=> (>= 10000 x2187) (= 0 (x4391 x2187))))
(assert (x1740 x4515))
(assert (< (x3121 x736 x3286 x2163 x1635 x3508) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x473))
(assert (x1740 x4396))
(assert (= x3298 (x2789 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (x1740 x46))
(assert (x1740 x469))
(assert (x1740 x2943))
(assert (= x2691 (=> (= x306 (= x4200 0)) (and (=> (and (and (= x3379 x1492) (= x1197 x1668)) (not x306)) x997) (=> (and x306 (and (= x3787 false) (= true x1388) (= x4423 x489))) x26)))))
(assert (x1740 x603))
(assert (=> (<= x3968 10000) (= 0 (x4391 x3968))))
(assert (x2854 x1836))
(assert (x1740 x1921))
(assert (x1740 x3360))
(assert (not (x105 (x3614 64 x1856 (ite (= x1847 0) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (<= x1847 96) x240 (ite (<= x1847 128) x2899 (ite (<= x1847 160) x1119 (ite (<= x1847 192) x1235 (ite (>= 224 x1847) x172 x324))))))))))))
(assert (=> (<= x2163 10000) (= (x4391 x2163) 0)))
(assert (= x4049 (not (and (< (+ x1703 x1356) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3872 x2426) (= (- x507 x1703) x2617) (= (x4018 x1133) x1356) (= (+ x1356 x1703) x3872) (<= 0 x3872) (= (x993 x2774) x507) (<= x3872 115792089237316195423570985008687907853269984665640564039457584007913129639935)))))
(assert (= x2062 (and (not x556) x661)))
(assert (x1740 x1457))
(assert (= x4217 (and x3930 (not x3197))))
(assert (=> (<= x363 10000) (= 0 (x4391 x363))))
(assert (x1740 x3014))
(assert (= (x4185 (x3614 64 x4284 6)) 6))
(assert (=> (<= x968 10000) (= 0 (x4391 x968))))
(assert (x1740 x1527))
(assert (=> (<= x3165 10000) (= 0 (x4391 x3165))))
(assert (=> (<= x2773 10000) (= 0 (x4391 x2773))))
(assert (x1740 x677))
(assert (x1740 x2995))
(assert (= (and (not x106) x818) x113))
(assert (x1740 x2540))
(assert (=> (>= 10000 x2949) (= 0 (x4391 x2949))))
(assert (= (x4185 (x4438 x3061 x144 x2535 x415)) x2535))
(assert (> (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876) 10000))
(assert (= (x4391 (x3614 x2268 x4292 x4285)) (x3614 x2268 x4292 x4285)))
(assert (= x2744 (x1339 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744))))
(assert (x1740 x1469))
(assert (= (x4391 (x3614 64 x2342 0)) (x3614 64 x2342 0)))
(assert (x1740 x4380))
(assert (= (or x1045 x548 x4067 x2204 x4295) x680))
(assert (= (and x2115 x746) x1697))
(assert (= (=> (and (= (x3626 (+ x1808 x2927)) x1221) (= x4440 (x4315 (- x1954 32))) (= (x4315 (- x4430 x1808)) x1954) (= (x3626 (+ x1808 x2927)) x3348) (= x4430 (x3626 (+ x3348 32))) (= (>= 224 x4440) x3147)) (and x3147 (=> (and (= x46 (x3626 (+ 96 x1808))) (= x1386 (x2684 x989)) (= (ite (= 0 x4440) x48 (ite (>= 32 x4440) x545 (ite (<= x4440 64) x1786 (ite (<= x4440 96) x613 (ite (>= 128 x4440) x569 (ite (>= 160 x4440) x4302 (ite (<= x4440 192) x4402 (ite (<= x4440 224) x3194 x3585)))))))) x2099) (= x1100 (x2684 x760)) (= x1390 (x2684 x2027)) (= x760 (x3626 (+ 64 x1808))) (= (x2684 x2046) x3272) (= (x3614 x4440 x983 x1770) x1786) (= (x2684 x46) x3298) (= x2473 (x3626 (+ 160 x1808))) (= x477 (x2684 x870)) (= x4402 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990)) (= (x2684 x547) x4069) (= x983 (x2684 x1808)) (= (x2684 x1808) x3305) (= (x3626 (+ x1808 32)) x547) (= x613 (x4438 x4440 x4356 x4069 x2949)) (= (x2684 x1424) x4538) (= x2654 (x2684 x1808)) (= x569 (x3121 x4440 x3305 x3268 x363 x1386)) (= x2625 (x2684 x482)) (= x4302 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) (= x3194 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) (= (x2684 x4458) x1770) (= (x2684 x3454) x2189) (= x4152 (x2684 x77)) (= x870 (x3626 (+ 64 x1808))) (= (x2684 x500) x4158) (= x363 (x2684 x86)) (= x2123 (x3626 (+ x1808 32))) (= x4004 (x3626 (+ 128 x1808))) (= x4484 (x2684 x1808)) (= x674 (x2684 x1572)) (= (x3626 (+ x1808 32)) x2027) (= (x3626 (+ 128 x1808)) x1572) (= (x1465 0) x48) (= (x3626 (+ x1808 96)) x3454) (= (x3626 (+ 32 x1808)) x1424) (= x989 (x3626 (+ x1808 96))) (= (x2684 x2473) x1990) (= x338 (x2684 x1651)) (= x4166 (>= 224 x1954)) (= (x2684 x1808) x4356) (= (x3626 (+ 96 x1808)) x500) (= (x3626 (+ 64 x1808)) x1308) (= x2046 (x3626 (+ 64 x1808))) (= (x3626 (+ 160 x1808)) x482) (= (x3626 (+ x1808 128)) x1328) (= x545 (x3096 x4440 x4484)) (= x86 (x3626 (+ 64 x1808))) (= (x2684 x4004) x1285) (= x77 (x3626 (+ x1808 192))) (= (x2684 x1808) x3405) (= x1651 (x3626 (+ 32 x1808))) (= (x2684 x1328) x2048) (= x3513 (x2684 x1808)) (= (x3626 (+ x1808 32)) x4458) (= (x2684 x1308) x2949) (= (x2684 x2123) x3268)) (and x4166 (=> (and (= (x3626 (+ x1808 160)) x3850) (= (x2684 x2594) x1389) (= (x2684 x239) x1524) (= (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286) x4032) (= x784 (x2684 x1808)) (= (x3626 (+ 128 x1808)) x239) (= (x2684 x1808) x3530) (= x1090 (x3096 x1954 x2574)) (= x2377 (x2684 x159)) (= (x3121 x1954 x3530 x79 x4473 x2607) x3252) (= x501 (x2684 x2536)) (= x2508 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046)) (= x79 (x2684 x1370)) (= (x2684 x3266) x2895) (= (x2684 x1808) x392) (= x2666 (x2684 x658)) (= (x3626 (+ 160 x1808)) x2868) (= x249 (x3626 (+ 128 x1808))) (= x349 (x3626 (+ x1808 192))) (= x4293 (x3626 (+ x1808 64))) (= (x3626 (+ x1808 128)) x2228) (= (x2684 x3850) x4046) (= x3146 (x3626 (+ x1808 32))) (= x2853 (x3614 x1954 x402 x1876)) (= x2607 (x2684 x135)) (= x1437 (> x1452 0)) (= (x2684 x3043) x2404) (= (x2684 x3761) x2966) (= x3761 (x3626 (+ x1808 96))) (= (x3626 (+ 32 x1808)) x1370) (= (x3626 (+ x1808 32)) x2690) (= (x2684 x874) x2187) (= x4286 (x2684 x349)) (= x402 (x2684 x1808)) (= x3352 (x3614 64 x2980 (ite (= x1954 0) x3200 (ite (<= x1954 32) x1090 (ite (<= x1954 64) x2853 (ite (>= 96 x1954) x2688 (ite (<= x1954 128) x3252 (ite (<= x1954 160) x3909 (ite (>= 192 x1954) x2508 (ite (>= 224 x1954) x4032 x2160)))))))))) (= x2574 (x2684 x1808)) (= x4473 (x2684 x2015)) (= x1452 (x3693 x2858)) (= x3524 (x2684 x1808)) (= (x3626 (+ 32 x1808)) x2594) (= x2843 (x2684 x1808)) (= x4329 (x3626 (+ x1808 32))) (= (x2684 x2690) x1560) (= x341 (x2684 x2228)) (= x1919 (x2684 x249)) (= x159 (x3626 (+ 64 x1808))) (= x3178 (x2684 x4293)) (= (x3626 (+ x1808 64)) x3043) (= x335 (x3626 (+ 32 x1808))) (= (x2684 x3146) x1876) (= (x2749 x1954 x2843 x3390 x2895 x2966 x341) x3909) (= x3266 (x3626 (+ x1808 64))) (= x2589 (x3626 (+ 160 x1808))) (= x2015 (x3626 (+ x1808 64))) (= x3200 (x1465 0)) (= (x2684 x2589) x3578) (= x3390 (x2684 x335)) (= x2536 (x3626 (+ 32 x1808))) (= (x3626 (+ x1808 96)) x135) (= x874 (x3626 (+ 96 x1808))) (= (x3626 (+ x2868 32)) x1725) (= (x4438 x1954 x3524 x1389 x2377) x2688) (= x658 (x3626 (+ x1808 96)))) (and (=> (and (and (= x881 (> x1452 32)) (= (x4042 x3843) x2120)) x1437) (and (=> (not x881) x3386) (=> (and x881 (and (= x1287 (x3626 (+ x3843 32))) (= x3945 (x87 x1287)) (= x3976 (< 64 x1452)) (= x4214 (x3626 (+ 32 x1725))))) (and (=> (not x3976) x3386) (=> (and (and (= (> x1452 96) x3776) (= (x3626 (+ 64 x3843)) x4467) (= (x3626 (+ 64 x1725)) x1145) (= (x3376 x4467) x2126)) x3976) (and (=> (not x3776) x3386) (=> x3776 x2708))))))) (=> (not x1437) x3386))))))) x164))
(assert (x1740 x4366))
(assert (=> (<= x1635 10000) (= (x4391 x1635) 0)))
(assert (not (x105 (x3614 x1847 x2738 x1877))))
(assert (x1740 x21))
(assert (= (x2789 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)) x1591))
(assert (= (x2019 (x3614 64 x4251 36)) x4251))
(assert (x1740 x3333))
(assert (= (x2019 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x2654))
(assert (not (x105 (x2749 x1847 x1783 x384 x624 x850 x2242))))
(assert (not (x105 (x3614 64 x1316 11))))
(assert (= (=> (and (or x3695 (not x3695)) (= (= 0 x2125) x3695)) x3326) x4267))
(assert (x1740 x1596))
(assert (= (or x3887 x2385) x1136))
(assert (x1740 x1459))
(assert (not (x105 (x3614 x722 x3055 x471))))
(assert (= (x4185 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) x2808))
(assert (x1740 x2955))
(assert (= (x4391 (x3121 x3061 x2005 x2174 x3711 x1357)) (x3121 x3061 x2005 x2174 x3711 x1357)))
(assert (< (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4438 x1806 x4346 x1135 x158) (x4391 (x4438 x1806 x4346 x1135 x158))))
(assert (= x4444 (and (not x1826) x4490)))
(assert (= (x4391 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)) (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)))
(assert (x1740 x2850))
(assert (= (and x2737 x2016) x3339))
(assert (x2854 x974))
(assert (= (not (and (< (+ x3692 x840) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3659 (+ x3692 x840)) (= (x2833 x2774) x3901) (= (- x3901 x840) x1823) (= (x4044 x3542) x3692) (>= x3659 0) (= x3093 x3659) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3659))) x3234))
(assert (= (x2789 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679)) x1354))
(assert (x1740 x392))
(assert (x1740 x4373))
(assert (= (x226 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) x3388))
(assert (=> (<= x2535 10000) (= (x4391 x2535) 0)))
(assert (= x2489 (x226 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379))))
(assert (=> (>= 10000 x2882) (= (x4391 x2882) 0)))
(assert (x1740 x1020))
(assert (= (x2094 (x3121 x722 x1336 x1923 x495 x2249)) x722))
(assert (x1740 x4004))
(assert (= (and x3726 (not x2443)) x700))
(assert (=> (>= 10000 x4071) (= 0 (x4391 x4071))))
(assert (= x2152 (and x1346 x1317)))
(assert (x1740 x2700))
(assert (= (x353 (x3121 x3122 x3227 x778 x81 x3441)) x81))
(assert (=> (>= 10000 x1990) (= (x4391 x1990) 0)))
(assert (= x2296 (=> (and (= x2632 true) (= x2518 false) (= 0 x879)) x1761)))
(assert (x1740 x3178))
(assert (> (x3614 x2006 x1506 x2079) 10000))
(assert (=> (>= 10000 x3409) (= (x4391 x3409) 0)))
(assert (x1740 x4375))
(assert (= x2122 (or x3249 x2815 x329 x3314 x1284 x709 x1841 x358 x302 x3157 x3518 x1869 x3142 x4222 x2185 x2780 x4325 x56 x1552 x227 x664 x3471 x1444 x1894)))
(assert (= (x1339 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)) x619))
(assert (x1740 x1529))
(assert (< (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x405))
(assert (x1740 x53))
(assert (< (x4438 x742 x2285 x1658 x458) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x3210) (= (x4391 x3210) 0)))
(assert (= (x2094 (x3614 64 x3201 36)) 64))
(assert (x1740 x1985))
(assert (= (or (and x4442 (not x3171)) x3950) x2997))
(assert (x1740 x3081))
(assert (x1740 x2014))
(assert (= x1451 (and (not x1535) x288)))
(assert (x1740 x1635))
(assert (= x241 (and (not x2490) x4443)))
(assert (x1740 x772))
(assert (= x3979 (x4185 (x2749 x1966 x1707 x3979 x496 x2463 x390))))
(assert (=> (>= 10000 x2666) (= (x4391 x2666) 0)))
(assert (x1740 x3338))
(assert (x1740 x3334))
(assert (x1740 x3420))
(assert (x1740 x4180))
(assert (x1740 x1891))
(assert (= (x2094 (x4438 x742 x2285 x1658 x458)) x742))
(assert (=> (>= 10000 x2607) (= (x4391 x2607) 0)))
(assert (x2348 x2865))
(assert (x1740 x2251))
(assert (x1740 x628))
(assert (x1740 x2740))
(assert (< 10000 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)))
(assert (= x560 (or x189 x2410 x3570 x3260 x3677 x4059)))
(assert (< 10000 (x3614 64 x4251 36)))
(assert (x1740 x3951))
(assert (x1740 x2517))
(assert (x1740 x3370))
(assert (x1740 x4199))
(assert (x1740 x2654))
(assert (=> (>= 10000 x3882) (= (x4391 x3882) 0)))
(assert (= (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972) (x4391 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972))))
(assert (= (or x4338 x1927) x3627))
(assert (x2854 x3416))
(assert (x1740 x147))
(assert (x1740 x2024))
(assert (= (x2019 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) x4105))
(assert (x1740 x737))
(assert (= (or x560 x2082) x1500))
(assert (=> (<= x897 10000) (= (x4391 x897) 0)))
(assert (x1740 x91))
(assert (= x2215 (x2019 (x3121 x742 x2215 x2202 x1513 x1546))))
(assert (= x3520 (x4185 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (x1740 x1588))
(assert (= x3928 (x226 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (x105 45231284858326638837332416019018714005183587760015845327913118753091066265600))
(assert (not (x105 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286))))
(assert (x105 14609135308879574245051756109060786979925523914932377087145621868633940557824))
(assert (x1740 x3358))
(assert (x1740 x2966))
(assert (x1740 x1506))
(assert (< (x3096 x1132 x312) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1592 x4064))
(assert (= (and (not x1832) x3462) x399))
(assert (= x4376 (and (not x3362) x1025)))
(assert (= (or x2892 x3280 x2621) x4524))
(assert (= (x4185 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)) x4254))
(assert (= (=> (and (= x1945 (not (< 32 x1608))) (= x538 (x273 x438))) (and x1945 (=> (= x888 32) x4350))) x4294))
(assert (x2348 x3416))
(assert (= (x2094 (x3614 64 x908 12)) 64))
(assert (= (and x2976 x4027) x2233))
(assert (x1740 x2967))
(assert (x1740 x2314))
(assert (x1740 x1433))
(assert (x1740 x3107))
(assert (x1740 x456))
(assert (x1740 x3952))
(assert (x1740 x2456))
(assert (x1740 x1404))
(assert (x1740 x2126))
(assert (= (x2019 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) x2245))
(assert (< (x3614 64 x819 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x3121 x722 x1336 x1923 x495 x2249) 10000))
(assert (= x3062 (x4381 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (x1740 x4276))
(assert (x1740 x1777))
(assert (x1740 x4372))
(assert (x1740 x3308))
(assert (= x2005 (x2019 (x3121 x3061 x2005 x2174 x3711 x1357))))
(assert (= (x4391 (x3614 x1806 x2349 x1322)) (x3614 x1806 x2349 x1322)))
(assert (= x2673 (or x3118 x472)))
(assert (= x3058 (or (and x241 (not x1638)) x1875)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x2313 x4036)))
(assert (x1740 x1842))
(assert (=> (<= x259 10000) (= 0 (x4391 x259))))
(assert (x1740 x1668))
(assert (= x1003 (or (and x3337 x4225) (and x842 x2974))))
(assert (= x3122 (x2094 (x2749 x3122 x2773 x1507 x214 x337 x3756))))
(assert (= (x2789 (x2749 x1847 x1783 x384 x624 x850 x2242)) x850))
(assert (= x2494 (=> (= (not (< 128 x3769)) x3445) (and x3592 x3445))))
(assert (= 0 (x4391 13123866003235860548192500634644069355060014211693331341089165407210616913920)))
(assert (= x492 (=> (and (> x1808 x3667) (= (+ x2732 63) x1890) (= x1435 (x3626 (+ x3667 32))) (= (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1890) x2017) (= (> x4544 0) x1535) (= (x3626 (+ x3667 x2017)) x1808) (<= 1 x1808) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3667) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3667)) (and (=> (not x1535) x2097) (=> x1535 x1633)))))
(assert (x2348 x91))
(assert (=> (>= 10000 x573) (= 0 (x4391 x573))))
(assert (x1740 x1844))
(assert (=> (<= x2377 10000) (= (x4391 x2377) 0)))
(assert (x1740 x719))
(assert (= (x2094 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)) x722))
(assert (x2854 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (=> (>= 10000 x3510) (= (x4391 x3510) 0)))
(assert (= (and (not x1005) x605) x1216))
(assert (x1740 x1752))
(assert (x1740 x3687))
(assert (not (x105 (x3614 64 x2602 3))))
(assert (x1740 x1452))
(assert (=> (<= x1322 10000) (= 0 (x4391 x1322))))
(assert (= (and x3675 (not x3341)) x3488))
(assert (= (or x769 x4345) x1419))
(assert (x1740 x780))
(assert (= x282 (x4185 (x4438 x2313 x2314 x282 x441))))
(assert (= (x2094 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) x4440))
(assert (not (x105 (x4438 x2313 x2314 x282 x441))))
(assert (x1740 x1144))
(assert (x1740 x3029))
(assert (= (x3096 x736 x558) (x4391 (x3096 x736 x558))))
(assert (x1740 x3110))
(assert (x1740 x3265))
(assert (=> (<= x3441 10000) (= (x4391 x3441) 0)))
(assert (= x1670 (or x1549 (and (not x295) x2787))))
(assert (x1740 x2972))
(assert (= (and x2481 x2805) x2581))
(assert (x1740 x339))
(assert (= (x4391 65535) 0))
(assert (x1740 x698))
(assert (x1740 x1333))
(assert (= x2708 (=> (and (= x2072 (x3626 (+ 96 x1725))) (= x2754 (not (< 128 x1452))) (= x389 (x3318 x3301)) (= x3301 (x3626 (+ 96 x3843)))) (and x2754 x3386))))
(assert (= (x4391 59118985759084958080972419199848406897631161684926069324597705158744233476096) 0))
(assert (not (x105 (x3096 32 x1162))))
(assert (=> (<= x4164 10000) (= (x4391 x4164) 0)))
(assert (= (and x3989 (not x3381)) x2733))
(assert (= (x4391 (x4438 x1132 x607 x653 x2622)) (x4438 x1132 x607 x653 x2622)))
(assert (= x1863 (x2019 (x3614 64 x1863 12))))
(assert (= (x3096 x3122 x916) (x4391 (x3096 x3122 x916))))
(assert (= (x353 (x2749 x1806 x3606 x1022 x1584 x1469 x2466)) x1584))
(assert (> (x3614 64 x4284 6) 10000))
(assert (x2348 x1836))
(assert (= x1448 (and x1567 x4060)))
(assert (< 10000 (x3096 x2313 x4036)))
(assert (x1740 x3268))
(assert (= (x353 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)) x2990))
(assert (x1740 x3978))
(assert (x1740 x4119))
(assert (x1740 x3611))
(assert (= (x2789 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) x2812))
(assert (x1740 x3532))
(assert (x105 3521034783))
(assert (= (and x2985 x3364) x1692))
(assert (x1740 x2701))
(assert (not (x105 (x3614 64 x2342 0))))
(assert (x1740 x1287))
(assert (= x3196 (=> (and (= x3818 (x4315 (- x2392 (mod (ite (< x4362 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (< 0 x3818) x1000) (= (div x426 2) x1433) (= x4362 (ite (> x2392 0) x1433 (x1329 127 x1433))) (= (x1329 1 x426) x2392)) (and (=> (not x1000) x1043) (=> (and x1000 (and (= (x1329 1 x426) x4505) (= (= x4505 0) x1029))) (and (=> x1029 x2128) (=> (and (not x1029) (= x1851 (< 0 x4362))) (and (=> (not x1851) x623) (=> x1851 x519)))))))))
(assert (x1740 x513))
(assert (x1740 x574))
(assert (x1740 x2208))
(assert (=> (>= 10000 x2520) (= (x4391 x2520) 0)))
(assert (= (x4185 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) x2944))
(assert (x1740 x756))
(assert (x1740 x2529))
(assert (= (or x4156 x821) x1444))
(assert (x1740 x3489))
(assert (= (or x2849 x4533) x4379))
(assert (= (and x1762 x431) x3142))
(assert (=> (<= x983 10000) (= 0 (x4391 x983))))
(assert (x1740 x2198))
(assert (= x3193 (x226 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (x1740 x500))
(assert (x1740 x3590))
(assert (= x1849 (x2789 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743))))
(assert (= x2157 (=> (and (= true x470) (= false x11) (= 36 x4423)) x26)))
(assert (x1740 x1819))
(assert (=> (>= 10000 x4069) (= 0 (x4391 x4069))))
(assert (< 10000 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)))
(assert (x1740 x1021))
(assert (< 10000 (x3614 64 x3821 36)))
(assert (=> (<= x4392 10000) (= 0 (x4391 x4392))))
(assert (= (x2019 (x4438 x4440 x4356 x4069 x2949)) x4356))
(assert (x1740 x2597))
(assert (x2854 x944))
(assert (x1740 x1707))
(assert (x1740 x1167))
(assert (=> (<= x2230 10000) (= 0 (x4391 x2230))))
(assert (= (and x2256 (not x2643)) x808))
(assert (x105 94926909962862326217726538024181891405690106632559804934698421914364834480128))
(assert (= (x2789 (x3121 x1806 x892 x84 x1640 x1925)) x1925))
(assert (x1740 x1829))
(assert (= (x4381 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x1077))
(assert (= (x4391 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)) (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)))
(assert (= (=> (and (= (ite (< 0 x1337) x764 (x1329 127 x764)) x1608) (= (< 0 x51) x663) (= x51 (x4315 (- x1337 (mod (ite (< x1608 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (- x3746 132) x3468) (= x1337 (x1329 1 x23)) (= (div x23 2) x764)) (and (=> (and (and (= x995 (+ x3746 32)) (= x3022 (= x4304 0)) (= (x1329 1 x23) x4304)) x663) (and (=> (and (and (= x2935 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639680 x23)) (= (* 32 (ite (not (= 0 x1608)) 1 0)) x142) (or (= 0 x142) (= 32 x142)) (= (+ x995 x142) x3506)) x3022) x3473) (=> (and (and (= (< 0 x1608) x3697) (= x438 (x3096 32 104))) (not x3022)) (and (=> (and (not x3697) (= x888 0)) x4350) (=> x3697 x4294))))) (=> (not x663) x89))) x2817))
(assert (x1740 x3665))
(assert (= (x2094 (x3121 x742 x2215 x2202 x1513 x1546)) x742))
(assert (=> (<= x2090 10000) (= (x4391 x2090) 0)))
(assert (x1740 x1117))
(assert (= x3181 (and x2491 x191)))
(assert (=> (>= 10000 x3764) (= 0 (x4391 x3764))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x1132 x45 x429)))
(assert (x1740 x3667))
(assert (=> (>= 10000 x4117) (= 0 (x4391 x4117))))
(assert (= x222 (=> (and (= x4127 (x3626 (+ x3375 96))) (= x2728 (not (< 128 x3784))) (= (x3626 (+ x4045 96)) x2172) (= x3714 (x4126 x2172))) (and x2168 x2728))))
(assert (x1740 x3414))
(assert (x1740 x3579))
(assert (=> (<= x2463 10000) (= (x4391 x2463) 0)))
(assert (< (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x1966 x1011)))
(assert (x1740 x2743))
(assert (not (x105 (x3614 x1806 x2349 x1322))))
(assert (< (x3096 32 104) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x353 (x3121 x3061 x2005 x2174 x3711 x1357)) x3711))
(assert (= (x4185 (x4438 x736 x1007 x1021 x727)) x1021))
(assert (x2348 x4202))
(assert (x1740 x4469))
(assert (= x4418 (=> (and (= x4322 0) (= x2391 x3168) (= x4361 x4017) (= 1 x2207)) x4023)))
(assert (not (x105 (x3614 64 x908 12))))
(assert (not (x105 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (x105 48755886422350550937420582033662272622158303343164848365600209189876434731008))
(assert (=> (<= x2895 10000) (= (x4391 x2895) 0)))
(assert (= x3705 (and (not x2910) x3494)))
(assert (< 10000 (x3614 64 x1515 100)))
(assert (x105 18563399957492015340621713183830377045030061062230639968016343144629396307968))
(assert (x1740 x4002))
(assert (= (x2019 (x3614 64 x3202 12)) x3202))
(assert (x1740 x246))
(assert (x1740 x1849))
(assert (x1740 x3533))
(assert (x1740 x2378))
(assert (not (x105 (x3121 x1847 x1714 x2878 x1454 x805))))
(assert (x1740 x3882))
(assert (x1740 x1981))
(assert (x1740 x3745))
(assert (x1740 x1236))
(assert (x1740 x1078))
(assert (x1740 x4458))
(assert (x1740 x47))
(assert (= x3494 (or x2616 x2581)))
(assert (x1740 x1260))
(assert (= x256 (x2019 (x3614 64 x256 10))))
(assert (x105 1313998243))
(assert (x1740 x3223))
(assert (=> (<= x2806 10000) (= 0 (x4391 x2806))))
(assert (not (x105 (x3614 64 x2602 7))))
(assert (= (x4185 (x3614 64 x4284 2)) 2))
(assert (x1740 x3130))
(assert (x1740 x4041))
(assert (= (x4185 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)) x2715))
(assert (x1740 x1080))
(assert (x1740 x1532))
(assert (x1740 x3216))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x1847 x1251)))
(assert (x1740 x2430))
(assert (=> (>= 10000 x3487) (= (x4391 x3487) 0)))
(assert (= (x4391 (x3614 64 x4251 36)) (x3614 64 x4251 36)))
(assert (x1740 x3656))
(assert (x1740 x3160))
(assert (= x3485 (and x1602 x1490)))
(assert (= (x4391 3963877391197344453575983046348115674221700746820753546331534351508065746944) 0))
(assert (> (x3614 64 x1856 (ite (= 0 x1847) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (>= 96 x1847) x240 (ite (<= x1847 128) x2899 (ite (>= 160 x1847) x1119 (ite (<= x1847 192) x1235 (ite (>= 224 x1847) x172 x324))))))))) 10000))
(assert (= (and x2587 x3232) x2481))
(assert (x2854 x1900))
(assert (= (x2094 (x3121 x3061 x2005 x2174 x3711 x1357)) x3061))
(assert (x1740 x4167))
(assert (= x4230 (x353 (x3121 x1966 x933 x3210 x4230 x4404))))
(assert (x1740 x1995))
(assert (x1740 x3953))
(assert (x1740 x1847))
(assert (= (x3096 x2006 x124) (x4391 (x3096 x2006 x124))))
(assert (x1740 x1487))
(assert (= x2402 (or x2826 x2975)))
(assert (= x3225 (and x695 (not x3976))))
(assert (x1740 x916))
(assert (x2348 x2507))
(assert (x83 x3378))
(assert (< (x3096 x722 x22) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2854 x91))
(assert (x105 106705613605932439001713296114446454776331749937047859905631657259250407702528))
(assert (x1740 x2090))
(assert (= (and x785 x2504) x3364))
(assert (= (x2019 (x3121 x3122 x3227 x778 x81 x3441)) x3227))
(assert (x1740 x515))
(assert (x1740 x2766))
(assert (= (x2094 (x3614 64 x3202 12)) 64))
(assert (= (x3614 64 x1081 36) (x4391 (x3614 64 x1081 36))))
(assert (x1740 x2307))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3579 2)))
(assert (x1740 x4484))
(assert (= (=> (= x630 (= x4357 0)) (and (=> (and (and (= 4 x710) (= x76 true) (= x1278 false)) (not x630)) x2722) (=> (and x630 (and (= x4068 (x3626 (+ x1002 x948))) (= (x1701 x1417) x948) (= x1417 (x3614 64 x3591 2)) (= x2113 (> x948 x4068)))) (and (=> (and (not x2113) (= x583 (= x2342 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x583 x4207) (=> (and (not x583) (and (= x2156 (x3626 (+ x2342 1))) (= x3768 (+ x126 1)) (= false x4360) (= x3912 1) (= (x3626 (+ x2342 1)) x2667) (= x126 (x3614 64 x2342 0)) (= x3712 false) (= 32 x460) (= x3647 x1044))) x3522))) (=> (and x2113 (and (= true x1279) (= 36 x710) (= x3278 false))) x2722))))) x3837))
(assert (x1740 x3730))
(assert (x1740 x2544))
(assert (x1740 x2731))
(assert (> (x3096 x3122 x916) 10000))
(assert (= x2287 (x2789 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876))))
(assert (x1740 x2552))
(assert (not (x105 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (x1740 x693))
(assert (x1740 x3394))
(assert (x1740 x464))
(assert (x1740 x2406))
(assert (= (x4185 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) x2436))
(assert (= x4273 (and x797 (not x3206))))
(assert (< (x4438 x2268 x1928 x3123 x4389) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x105 (x3614 64 x2766 36))))
(assert (> (x2749 x2268 x1211 x3372 x1267 x2542 x774) 10000))
(assert (= 100 (x4185 (x3614 64 x3229 100))))
(assert (x1740 x2017))
(assert (x1740 x2812))
(assert (= (x2019 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490)) x4269))
(assert (> (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242) 10000))
(assert (not (x105 (x4438 x1772 x3892 x336 x1411))))
(assert (= (x2094 (x3096 x2006 x124)) x2006))
(assert (x1740 x1122))
(assert (=> (>= 10000 x1081) (= 0 (x4391 x1081))))
(assert (= (x1339 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) x4117))
(assert (= x3547 (and (not x2110) x2794)))
(assert (x1740 x2006))
(assert (=> (<= x1389 10000) (= 0 (x4391 x1389))))
(assert (not (x105 (x3096 x722 x22))))
(assert (=> (>= 10000 x906) (= 0 (x4391 x906))))
(assert (x1740 x1757))
(assert (< 10000 (x3121 x2006 x3687 x1342 x2230 x3944)))
(assert (=> (>= 10000 x2875) (= (x4391 x2875) 0)))
(assert (=> (<= x3594 10000) (= (x4391 x3594) 0)))
(assert (not (x105 (x4438 x1806 x4346 x1135 x158))))
(assert (= x1633 x3592))
(assert (x1740 x774))
(assert (x1740 x1791))
(assert (x1740 x142))
(assert (= 64 (x2094 (x3614 64 x3764 36))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x1806 x2349 x1322)))
(assert (= (x4391 (x3614 x2006 x1506 x2079)) (x3614 x2006 x1506 x2079)))
(assert (x1740 x4019))
(assert (x1740 x3324))
(assert (=> (<= x3745 10000) (= (x4391 x3745) 0)))
(assert (x1740 x402))
(assert (x105 2770781680))
(assert (=> (<= x3420 10000) (= 0 (x4391 x3420))))
(assert (= (x4391 35425322552009646506518338594398286811668114190755561836384294568426616127488) 0))
(assert (x1740 x1579))
(assert (x1740 x2932))
(assert (= x2326 (and x3485 (not x436))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x2766 36)))
(assert (x1740 x2858))
(assert (x1740 x1022))
(assert (= x2966 (x2789 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (= x3510 (x353 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972))))
(assert (> (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482) 10000))
(assert (x1740 x1443))
(assert (= (x353 (x3121 x736 x3286 x2163 x1635 x3508)) x1635))
(assert (= x3487 (x4185 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (= (x4185 (x3614 64 x3579 2)) 2))
(assert (x1740 x4014))
(assert (= (and x1792 (not x1700)) x858))
(assert (x2348 x4435))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x742 x4509 x573)))
(assert (x1740 x3939))
(assert (x1740 x2661))
(assert (x1740 x4415))
(assert (x1740 x2979))
(assert (x1740 x3690))
(assert (= x3405 (x2019 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (> (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572) 10000))
(assert (=> (<= x312 10000) (= (x4391 x312) 0)))
(assert (=> (<= x2884 10000) (= (x4391 x2884) 0)))
(assert (= (or x1059 x2428) x445))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x4284 6)))
(assert (x2854 x3984))
(assert (x1740 x1303))
(assert (x1740 x2715))
(assert (x1740 x944))
(assert (= x1538 (or x589 x3377)))
(assert (= (x3096 x4440 x4484) (x4391 (x3096 x4440 x4484))))
(assert (x1740 x3769))
(assert (x1740 x1821))
(assert (x1740 x3475))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)))
(assert (x1740 x1944))
(assert (= (x2749 x736 x2211 x1126 x1110 x163 x4375) (x4391 (x2749 x736 x2211 x1126 x1110 x163 x4375))))
(assert (= (x4438 x1966 x1264 x832 x3788) (x4391 (x4438 x1966 x1264 x832 x3788))))
(assert (=> (<= x3061 10000) (= 0 (x4391 x3061))))
(assert (= (=> (and (= x2344 (x2093 x596)) (= x3781 (not (> x1089 32)))) (and (=> (= x1837 32) x3785) x3781)) x1194))
(assert (x1740 x4103))
(assert (= x2185 (or (and x3806 x4335) (and x3109 x1724) (and x399 x152))))
(assert (= (x2019 (x3614 x742 x4509 x573)) x4509))
(assert (= x2463 (x2789 (x2749 x1966 x1707 x3979 x496 x2463 x390))))
(assert (x2854 x4106))
(assert (= x623 x2128))
(assert (> (x3614 64 x4441 36) 10000))
(assert (= (x2094 (x3096 x3122 x916)) x3122))
(assert (x1740 x407))
(assert (< 10000 (x3614 64 x1944 100)))
(assert (= x3401 (or x643 x3531)))
(assert (x2348 x1984))
(assert (= x358 (and x1533 x115)))
(assert (x1740 x4033))
(assert (= (x2789 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799)) x3745))
(assert (= x3944 (x2789 (x3121 x2006 x3687 x1342 x2230 x3944))))
(assert (x2854 x204))
(assert (= x2451 (and (not x115) x1533)))
(assert (< (x3614 x4440 x983 x1770) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1249))
(assert (=> (>= 10000 x1798) (= 0 (x4391 x1798))))
(assert (= x622 (x2019 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482))))
(assert (= (x1339 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046)) x4046))
(assert (x1740 x4120))
(assert (= (x4391 (x3614 64 x1421 (ite (= x2313 0) x2088 (ite (<= x2313 32) x2987 (ite (>= 64 x2313) x823 (ite (<= x2313 96) x311 (ite (>= 128 x2313) x922 (ite (>= 160 x2313) x1565 (ite (<= x2313 192) x2988 (ite (<= x2313 224) x2034 x326)))))))))) (x3614 64 x1421 (ite (= x2313 0) x2088 (ite (<= x2313 32) x2987 (ite (<= x2313 64) x823 (ite (>= 96 x2313) x311 (ite (>= 128 x2313) x922 (ite (<= x2313 160) x1565 (ite (<= x2313 192) x2988 (ite (>= 224 x2313) x2034 x326)))))))))))
(assert (= x722 (x2094 (x2749 x722 x2659 x1620 x1289 x950 x3715))))
(assert (x1740 x642))
(assert (x1740 x1765))
(assert (= x3950 (and x3171 x4442)))
(assert (= (x353 (x2749 x2313 x2520 x3804 x1652 x3880 x2331)) x1652))
(assert (x1740 x2146))
(assert (= x3462 (and x2679 (not x3024))))
(assert (x1740 x493))
(assert (=> (>= 10000 x674) (= (x4391 x674) 0)))
(assert (= (x1339 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572)) x3128))
(assert (x1740 x2819))
(assert (x1740 x2542))
(assert (= x677 (x2789 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (x692 x1075))
(assert (=> (<= x2878 10000) (= (x4391 x2878) 0)))
(assert (x1740 x510))
(assert (= (and x945 (not x3383)) x3675))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x1515 100)))
(assert (x2348 x4224))
(assert (= (or x1224 x991) x2238))
(assert (x1740 x3885))
(assert (= x1951 (and x1120 x3720)))
(assert (=> (>= 10000 x1077) (= (x4391 x1077) 0)))
(assert (x1740 x2436))
(assert (= x3796 (x226 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (= x1313 (x2019 (x3614 64 x1313 36))))
(assert (= (x2019 (x3614 64 x131 36)) x131))
(assert (= (and (not x2644) x2562) x186))
(assert (x1740 x168))
(assert (= (x2019 (x3096 x4440 x4484)) x4484))
(assert (x2854 x1681))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4438 x2313 x2314 x282 x441)))
(assert (= (x4391 (x3121 x1772 x3353 x4071 x2867 x151)) (x3121 x1772 x3353 x4071 x2867 x151)))
(assert (x1740 x4445))
(assert (=> (>= 10000 x3813) (= 0 (x4391 x3813))))
(assert (=> (<= x1350 10000) (= 0 (x4391 x1350))))
(assert (x1740 x827))
(assert (x1740 x2939))
(assert (= (x4185 (x3614 64 x3591 1)) 1))
(assert (not (x105 (x3096 x1954 x2574))))
(assert (x1740 x2311))
(assert (x1740 x4069))
(assert (x83 x426))
(assert (x1740 x3185))
(assert (= (x353 (x4438 x1806 x4346 x1135 x158)) x158))
(assert (= (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876) (x4391 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876))))
(assert (x1740 x1972))
(assert (= x3766 x2337))
(assert (=> (>= 10000 x3591) (= 0 (x4391 x3591))))
(assert (x692 x3258))
(assert (x1740 x1081))
(assert (x1740 x2642))
(assert (x2854 x2829))
(assert (x1740 x4202))
(assert (=> (<= x3585 10000) (= (x4391 x3585) 0)))
(assert (> (x2749 x2313 x2520 x3804 x1652 x3880 x2331) 10000))
(assert (= x1456 (or x1384 x4215)))
(assert (= x74 (x353 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (x1740 x4121))
(assert (x1740 x3763))
(assert (= x286 (or x1456 x4029)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x3122 x916)))
(assert (x1740 x3336))
(assert (x1740 x4430))
(assert (= (=> (and (= x3404 false) (= x4486 true) (= x2769 x3130)) x3120) x3848))
(assert (= x2804 (=> (and (= x2971 (>= 224 x742)) (= (x2635 128) x742)) (and (=> (and (= (x3096 x742 x1712) x4058) (= x4392 (x2635 288)) (= x1793 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) (= (x2635 160) x565) (= x2820 (x2635 256)) (= x1712 (x2635 160)) (= (x2635 192) x1570) (= (x2635 224) x458) (= (ite (= x742 0) x4040 (ite (>= 32 x742) x4058 (ite (<= x742 64) x423 (ite (<= x742 96) x1049 (ite (>= 128 x742) x4053 (ite (>= 160 x742) x2114 (ite (>= 192 x742) x1576 (ite (>= 224 x742) x1793 x814)))))))) x3457) (= x2882 (x2635 352)) (= x1049 (x4438 x742 x2285 x1658 x458)) (= (x2635 224) x1753) (= x1626 (x2635 224)) (= x54 (x2635 160)) (= (x2635 224) x1513) (= x423 (x3614 x742 x4509 x573)) (= (x2635 192) x292) (= x3160 (x2635 320)) (= (x2635 256) x1546) (= x1511 (x2635 224)) (= (x2635 288) x4535) (= x2944 (x2635 192)) (= (x2635 192) x1658) (= x4188 (<= x722 224)) (= x1908 (x2635 288)) (= x3951 (x2635 320)) (= x3002 (x3626 (+ x722 x2858))) (= x1576 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) (= (x2635 160) x3733) (= (x3121 x742 x2215 x2202 x1513 x1546) x4053) (= x4040 (x1465 0)) (= x2285 (x2635 160)) (= (x2635 192) x573) (= x2202 (x2635 192)) (= x2114 (x2749 x742 x54 x1570 x1753 x3564 x1908)) (= (x2635 160) x4509) (= (x2635 256) x3564) (= x2547 (x2635 256)) (= (x2635 160) x2215)) (and x4188 (=> (and (= (x2266 x1654) x1624) (= x2191 (x2266 x2858)) (= (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482) x2478) (= (x2266 x2819) x950) (= (x3626 (+ x2858 64)) x1654) (= (x2266 x397) x2039) (= (x3096 x722 x22) x2864) (= (x2266 x1254) x1620) (= x2659 (x2266 x2858)) (= (x2266 x3265) x4498) (= (x2266 x4241) x1289) (= x2140 (x2266 x4033)) (= (x2266 x780) x4482) (= (x2266 x2858) x22) (= (x2266 x506) x3715) (= (ite (= 0 x722) x4449 (ite (>= 32 x722) x2864 (ite (>= 64 x722) x2119 (ite (>= 96 x722) x71 (ite (>= 128 x722) x1733 (ite (<= x722 160) x3983 (ite (>= 192 x722) x3369 (ite (>= 224 x722) x2478 x654)))))))) x3303) (= (x3626 (+ 128 x2858)) x397) (= (x3626 (+ x2858 128)) x4266) (= x1743 (x3626 (+ x2858 64))) (= x1254 (x3626 (+ 32 x2858))) (= x4254 (x2266 x838)) (= (x2266 x1743) x3336) (= x4084 (x3626 (+ x2858 96))) (= (x3614 x722 x3055 x471) x2119) (= x2819 (x3626 (+ x2858 96))) (= (x2266 x4084) x537) (= x1167 (x2266 x2858)) (= x299 (x3626 (+ x2858 64))) (= x4033 (x3626 (+ x2858 96))) (= (x3626 (+ 32 x2858)) x3999) (= x1757 (x3626 (+ x2858 96))) (= x148 (x2266 x299)) (= (x3626 (+ x2858 160)) x3265) (= (x2266 x1757) x2249) (= x495 (x2266 x270)) (= (x3626 (+ 32 x2858)) x3250) (= x270 (x3626 (+ 64 x2858))) (= (x3626 (+ x2858 32)) x838) (= (x3626 (+ 192 x2858)) x780) (= x622 (x2266 x2858)) (= (x2266 x2858) x1336) (= (x2266 x242) x1166) (= x2744 (x2266 x4080)) (= (x3626 (+ x2858 32)) x242) (= (x2266 x3999) x2213) (= x1733 (x3121 x722 x1336 x1923 x495 x2249)) (= x1923 (x2266 x3209)) (= x4449 (x1465 0)) (= x3055 (x2266 x2858)) (= x3303 x3457) (= (x2266 x4266) x3165) (= x4241 (x3626 (+ x2858 64))) (= (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744) x3369) (= x71 (x4438 x722 x2191 x2213 x148)) (= x4080 (x3626 (+ x2858 160))) (= (x2749 x722 x2659 x1620 x1289 x950 x3715) x3983) (= x3209 (x3626 (+ 32 x2858))) (= x506 (x3626 (+ x2858 128))) (= (x2266 x3250) x471)) x4327))) x2971))))
(assert (x1740 x144))
(assert (x1740 x3138))
(assert (= (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (x1740 x4279))
(assert (< 10000 (x3614 64 x1708 2)))
(assert (x1740 x3934))
(assert (x1740 x3271))
(assert (not (x105 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379))))
(assert (= (x4391 (x3614 64 x2980 (ite (= 0 x1954) x3200 (ite (<= x1954 32) x1090 (ite (>= 64 x1954) x2853 (ite (>= 96 x1954) x2688 (ite (>= 128 x1954) x3252 (ite (<= x1954 160) x3909 (ite (<= x1954 192) x2508 (ite (<= x1954 224) x4032 x2160)))))))))) (x3614 64 x2980 (ite (= 0 x1954) x3200 (ite (>= 32 x1954) x1090 (ite (<= x1954 64) x2853 (ite (>= 96 x1954) x2688 (ite (>= 128 x1954) x3252 (ite (>= 160 x1954) x3909 (ite (>= 192 x1954) x2508 (ite (>= 224 x1954) x4032 x2160)))))))))))
(assert (x1740 x3725))
(assert (= (and x3070 x16) x4169))
(assert (=> (>= 10000 x3055) (= 0 (x4391 x3055))))
(assert (x1740 x576))
(assert (= (x2094 (x3614 64 x2602 7)) 64))
(assert (=> (>= 10000 x3202) (= 0 (x4391 x3202))))
(assert (x1740 x449))
(assert (x1740 x1624))
(assert (= (and (not x365) x4104) x325))
(assert (=> (>= 10000 x3490) (= 0 (x4391 x3490))))
(assert (not (x105 (x4438 x742 x2285 x1658 x458))))
(assert (x1740 x4400))
(assert (x1740 x1424))
(assert (= x75 (and x2113 x3648)))
(assert (x1740 x3880))
(assert (= x4466 (=> (= x1536 (= x1585 0)) (and (=> (not x1536) x2804) (=> (and (= x1585 1) x1536) x4327)))))
(assert (= x916 (x2019 (x3096 x3122 x916))))
(assert (not (x105 (x3614 64 x432 12))))
(assert (= (x4391 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)))
(assert (x1740 x904))
(assert (x1740 x1501))
(assert (x1740 x2750))
(assert (= (or x2851 x2139) x769))
(assert (x1740 x2048))
(assert (x1740 x1863))
(assert (=> (<= x647 10000) (= (x4391 x647) 0)))
(assert (x1740 x3912))
(assert (x1740 x1446))
(assert (= (x3121 x1132 x2280 x1443 x2517 x2430) (x4391 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (not (x105 (x3614 x2006 x1506 x2079))))
(assert (> (x3614 64 x647 7) 10000))
(assert (= (or x2649 x807) x3971))
(assert (= x2163 (x4185 (x3121 x736 x3286 x2163 x1635 x3508))))
(assert (x1740 x2879))
(assert (x1740 x466))
(assert (= (x4438 x2006 x566 x2063 x287) (x4391 (x4438 x2006 x566 x2063 x287))))
(assert (x1740 x4410))
(assert (= (x226 (x2749 x2313 x2520 x3804 x1652 x3880 x2331)) x2331))
(assert (x2348 x310))
(assert (x1740 x2012))
(assert (=> (<= x1327 10000) (= 0 (x4391 x1327))))
(assert (x1740 x651))
(assert (= x3201 (x2019 (x3614 64 x3201 36))))
(assert (= 64 (x2094 (x3614 64 x1323 100))))
(assert (x1740 x251))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x1954 x402 x1876)))
(assert (< 10000 (x4438 x2268 x1928 x3123 x4389)))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (=> (>= 10000 x4404) (= (x4391 x4404) 0)))
(assert (= (x2789 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x2820))
(assert (x1740 x4165))
(assert (x1740 x3571))
(assert (x105 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1740 x1997))
(assert (x1740 x760))
(assert (x1740 x948))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x2268 x4394 x3334 x3409 x849)))
(assert (x1740 x4333))
(assert (x1740 x1783))
(assert (x1740 x691))
(assert (= (x2019 (x4438 x1966 x1264 x832 x3788)) x1264))
(assert (x1740 x4499))
(assert (x1740 x4370))
(assert (= (=> (and (= (= 255 x1197) x3839) (>= 255 x1197)) (and (=> (and (and (= x1283 false) (= 36 x4423) (= x1544 true)) x3839) x26) (=> (and (not x3839) (and (= x1616 (x1217 x1241)) (= 1 x2923) (= x2979 (x1329 255 x2507)) (= x2507 (+ 1 x1197)) (= false x1184) (= x572 false) (= x4518 32) (= (x3614 64 x1197 36) x1241) (= (x1329 255 x2507) x3527) (= x1492 x1967))) x3829))) x997))
(assert (= (and x2091 x1295) x2827))
(assert (= x1761 (=> (and (= x4544 0) (= x2158 x18) (= 0 x2158) (= x879 x2732)) x961)))
(assert (= x1558 (or x3868 x2658)))
(assert (x1740 x2999))
(assert (= (x2019 (x2749 x1772 x3512 x825 x3882 x1296 x33)) x3512))
(assert (x1740 x4228))
(assert (x2854 x3258))
(assert (= x3334 (x4185 (x3121 x2268 x4394 x3334 x3409 x849))))
(assert (=> (<= x1078 10000) (= (x4391 x1078) 0)))
(assert (x1740 x2956))
(assert (= (x2094 (x3121 x1966 x933 x3210 x4230 x4404)) x1966))
(assert (x1740 x4232))
(assert (= x573 (x4185 (x3614 x742 x4509 x573))))
(assert (= (and x359 x3087) x3183))
(assert (x105 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (= x2731 (x353 (x3121 x2313 x2397 x2982 x2731 x1277))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3201 36)))
(assert (=> (<= x3081 10000) (= (x4391 x3081) 0)))
(assert (= (=> (and (= x3960 (= x2657 0)) (or x3960 (not x3960))) x3879) x3805))
(assert (x1740 x635))
(assert (= (x2094 (x3614 x3122 x4134 x3081)) x3122))
(assert (x1740 x1677))
(assert (=> (>= 10000 x4242) (= 0 (x4391 x4242))))
(assert (> (x3096 x1966 x1011) 10000))
(assert (> (x3614 64 x4339 6) 10000))
(assert (= (and x2893 (not x4309)) x4205))
(assert (= (x353 (x4438 x1132 x607 x653 x2622)) x2622))
(assert (x1740 x326))
(assert (not (x105 (x3096 x1847 x1251))))
(assert (x1740 x3617))
(assert (< 10000 (x3614 x1132 x45 x429)))
(assert (x1740 x862))
(assert (not (x105 (x3614 64 x1399 6))))
(assert (= x2310 (=> (and (= x4137 (x3626 (+ x1808 96))) (= (not (< 128 x2927)) x3067) (= x2058 (x1611 x3641)) (= (x3626 (+ 96 x3843)) x3641)) (and x164 x3067))))
(assert (=> (<= x124 10000) (= 0 (x4391 x124))))
(assert (= (x4381 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)) x876))
(assert (= x2077 (=> (= x4354 (= 0 x2000)) (and (=> (and (not x4354) (and (= true x1473) (= x864 false) (= 4 x2271))) x3602) (=> (and (and (= x3015 (x1340 x1086)) (<= x3015 255) (= (x3614 64 x256 10) x1086) (= x2911 (> x3015 0))) x4354) (and (=> (and x2911 (and (and (<= x1062 1461501637330902918203684832716283019655932542975) (= (= x3968 x1062) x3309) (= 128 x3274)) (or (and (and (and (= x176 36) (= x2891 false) (= x670 x3101) (= (and x129 x2945) x3649) (= x3926 310283853) (<= x253 127) (= x2945 (< (* x758 1000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x2881) (= false x2702) (= (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3419) x129) (= x758 x670) (= x3419 (* 1000000000 x758)) (>= x943 1) (= x943 (x154 x3968)) (<= x253 127)) (or (and x3649 (and (= x4218 1) (= x1752 x1062) (= x3982 x2030) (= x1036 x2846) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3419) (= x4064 x1614) (= x396 x4012) (= x1564 x2856) (= x758 x791) (>= x3419 0) (= x1123 x3794) (= x3542 x738) (= x4052 x1116) (= x3739 32) (= x899 x3934) (= x1948 x3841) (= x1543 x3201) (= x1965 x426) (= x3419 x3453) (= x4244 false) (= x7 false))) (and (not x3649) (and (= x4055 2) (= x4218 0) (= x1614 x4064) (= x791 x758) (= x2846 x1036) (= 0 x3030) (= x3542 x738) (= x396 x4012) (= x3794 x1123) (= true x1950) (= x3982 x2030) (= x1948 x3841) (= x1062 x1752) (= x2421 false) (= x1543 x3201) (= x2856 x3030) (= x426 x1965) (= 36 x3739) (= x1116 x4052) (= x899 x3934))))) x3309) (and (and (= x4064 x1614) (= 310283853 x3532) (= x1116 x4052) (<= x1062 1461501637330902918203684832716283019655932542975) (= x2846 x1036) (= 8365236128558009046904410293209581292053118695343348878262597880337030709248 x3791) (= x2364 (x154 x2774)) (= x3542 x738) (= x426 x1965) (= x1564 x2856) (= x2793 false) (= x1904 36) (= x1123 x3794) (= x1062 x1752) (= x2030 x3982) (= x2369 false) (= x758 x8) (= x4218 1) (= x1948 x3841) (= x3934 x899) (= x638 false) (= x4012 x396) (>= 127 x563) (>= x2364 1) (= 32 x3739) (= x1062 x2774) (<= 1 x1062) (= x791 x758) (= x412 false) (= x3201 x1543) (<= x563 127)) (not x3309))))) x3235) (=> (and (and (= x3176 true) (= x2271 4) (= x4131 false)) (not x2911)) x3602)))))))
(assert (x1740 x2522))
(assert (< 10000 (x3096 x722 x22)))
(assert (= (and x1978 x2419) x1673))
(assert (x1740 x4285))
(assert (x1740 x4150))
(assert (x1740 x384))
(assert (x1740 x327))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x2268 x1211 x3372 x1267 x2542 x774)))
(assert (= (or x3290 x597 x1003 x1623 x2118 x3186) x4156))
(assert (= (x2019 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679)) x515))
(assert (= x697 (and (not x957) x1558)))
(assert (=> (<= x2215 10000) (= 0 (x4391 x2215))))
(assert (x1740 x2365))
(assert (= 32 (x2094 (x3096 32 x1162))))
(assert (> (x3614 x1772 x4380 x3036) 10000))
(assert (x1740 x4424))
(assert (=> (>= 10000 x205) (= 0 (x4391 x205))))
(assert (=> (<= x131 10000) (= (x4391 x131) 0)))
(assert (= (x353 (x3121 x722 x1336 x1923 x495 x2249)) x495))
(assert (x2854 x1745))
(assert (=> (<= x151 10000) (= (x4391 x151) 0)))
(assert (x1740 x3380))
(assert (=> (<= x1527 10000) (= (x4391 x1527) 0)))
(assert (=> (>= 10000 x3944) (= (x4391 x3944) 0)))
(assert (= x3178 (x353 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286))))
(assert (= x3951 (x1339 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882))))
(assert (= x3687 (x2019 (x3121 x2006 x3687 x1342 x2230 x3944))))
(assert (x1740 x3741))
(assert (= x597 (and x3413 (not x2405))))
(assert (= (and x4289 x1969) x2252))
(assert (x1740 x3224))
(assert (x1740 x963))
(assert (x1740 x184))
(assert (< 10000 (x3096 x1132 x312)))
(assert (x1740 x4003))
(assert (= (and x488 (not x187)) x978))
(assert (= x2306 (x2019 (x4438 x3122 x2306 x1784 x1678))))
(assert (=> (<= x805 10000) (= (x4391 x805) 0)))
(assert (= x3526 (and (not x3765) x4205)))
(assert (< (x1465 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4391 (x4438 x3122 x2306 x1784 x1678)) (x4438 x3122 x2306 x1784 x1678)))
(assert (x1740 x3119))
(assert (= x4330 (x2019 (x3614 64 x4330 10))))
(assert (x1740 x2882))
(assert (= (x4381 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) x906))
(assert (not (x105 (x2749 x1772 x3512 x825 x3882 x1296 x33))))
(assert (= x3157 (or (and x3140 x300) (and x1832 x3462) (and x186 x1035) (and x1873 x3913) (and x4104 x365))))
(assert (=> (<= x4389 10000) (= (x4391 x4389) 0)))
(assert (x1740 x4257))
(assert (= (x2019 (x2749 x1806 x3606 x1022 x1584 x1469 x2466)) x3606))
(assert (= (x4391 (x3096 32 x1162)) (x3096 32 x1162)))
(assert (= (and x170 x1067) x1087))
(assert (= (or x19 x1512) x3751))
(assert (= (or (and x4512 x861) (and x3381 x3989)) x1209))
(assert (= x1623 (and x808 x1899)))
(assert (x1740 x4340))
(assert (x1740 x4052))
(assert (> (x3614 64 x2796 6) 10000))
(assert (x2854 x1984))
(assert (= x3549 (and x2634 x621)))
(assert (x1740 x239))
(assert (= (x4391 1000000000) 0))
(assert (= x233 (or (and x1005 x605) (and x718 x700) (and x1862 x2013) (and x1420 x1349) (and x945 x3383))))
(assert (x1740 x278))
(assert (= x3386 (=> (and (= x235 (x3626 (+ x1725 x1452))) (= x2956 (x3626 (+ 32 x4329))) (= x3655 (x3626 (+ x1725 x3107))) (= x3107 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4370)) (= (> x3784 0) x4336) (= (x3626 (+ 32 x2956)) x1252) (= (x3626 (+ x1452 31)) x4370) (= x3375 (x3626 (+ x3655 32))) (= x3784 (x3933 x3952)) (= x2860 (x4315 (- x3655 x1808)))) (and (=> (not x4336) x2168) (=> (and (and (= (x1302 x4045) x4019) (= x1879 (> x3784 32))) x4336) (and (=> (and (and (= x1827 (> x3784 64)) (= x252 (x3626 (+ x4045 32))) (= (x3626 (+ 32 x3375)) x3360) (= (x234 x252) x3665)) x1879) (and (=> (not x1827) x2168) (=> (and x1827 (and (= x3536 (< 96 x3784)) (= (x3626 (+ 64 x4045)) x2235) (= x1288 (x3230 x2235)) (= x3990 (x3626 (+ 64 x3375))))) (and (=> x3536 x222) (=> (not x3536) x2168))))) (=> (not x1879) x2168)))))))
(assert (= 36 (x4185 (x3614 64 x131 36))))
(assert (x1740 x870))
(assert (= (x4438 x3061 x144 x2535 x415) (x4391 (x4438 x3061 x144 x2535 x415))))
(assert (< (x3614 64 x1708 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2926))
(assert (=> (<= x4331 10000) (= (x4391 x4331) 0)))
(assert (x1740 x4133))
(assert (not (x105 (x3614 64 x4339 6))))
(assert (x1740 x3441))
(assert (=> (<= x1708 10000) (= (x4391 x1708) 0)))
(assert (= x1471 (and x3364 (not x2985))))
(assert (x1740 x4284))
(assert (= x3249 (or (and x2726 (not x3391)) (and x809 (not x663)))))
(assert (= x2137 (and (not x2885) x248)))
(assert (= x2815 (and x1039 x3562)))
(assert (x1740 x3786))
(assert (= x1841 (or (and x2679 x3024) (and x1037 x1955) (and x3262 x3544) (and x2562 x2644) (and x3080 x824) (and x3078 x1557) (and x3583 x2182) (and x3111 x3212) (and x2893 x4309))))
(assert (=> (<= x2533 10000) (= (x4391 x2533) 0)))
(assert (= (and x186 (not x1035)) x3253))
(assert (x1740 x1798))
(assert (x1740 x1653))
(assert (= x2242 (x226 (x2749 x1847 x1783 x384 x624 x850 x2242))))
(assert (= x2430 (x2789 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (=> (<= x820 10000) (= (x4391 x820) 0)))
(assert (x1740 x3914))
(assert (= (or x3401 x3639) x2217))
(assert (= 10 (x4185 (x3614 64 x256 10))))
(assert (= (=> (and (= false x1649) (= true x3470) (= x879 0)) x1761) x803))
(assert (x1740 x1172))
(assert (not (x105 (x3096 x4440 x4484))))
(assert (= (x4391 (x3614 64 x3764 36)) (x3614 64 x3764 36)))
(assert (x1740 x1657))
(assert (= (or x1094 x2813 x1673) x279))
(assert (= (and (not x3088) x3354) x1897))
(assert (x1740 x1368))
(assert (=> (>= 10000 x850) (= (x4391 x850) 0)))
(assert (x1740 x1709))
(assert (= x668 (or (and x1535 x288) x4047)))
(assert (x1740 x49))
(assert (x1740 x4542))
(assert (x1740 x4193))
(assert (x1740 x2426))
(assert (= x1527 (x4185 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (< 10000 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)))
(assert (x1740 x3229))
(assert (= x2559 (x2019 (x3614 64 x2559 6))))
(assert (=> (<= x1591 10000) (= 0 (x4391 x1591))))
(assert (x1740 x1386))
(assert (x1740 x1796))
(assert (=> (<= x287 10000) (= 0 (x4391 x287))))
(assert (< 10000 (x4438 x4440 x4356 x4069 x2949)))
(assert (x1740 x1212))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x2602 3)))
(assert (< 10000 (x3614 x1966 x4426 x2522)))
(assert (< (x3614 64 x1421 (ite (= x2268 0) x681 (ite (>= 32 x2268) x3888 (ite (<= x2268 64) x2239 (ite (>= 96 x2268) x2777 (ite (<= x2268 128) x2219 (ite (>= 160 x2268) x3031 (ite (>= 192 x2268) x2515 (ite (<= x2268 224) x1359 x3236))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x2313) (= (x4391 x2313) 0)))
(assert (= x1197 (x2019 (x3614 64 x1197 36))))
(assert (= (x226 (x2749 x1132 x2695 x1710 x1661 x3721 x897)) x897))
(assert (x1740 x2626))
(assert (x1740 x3762))
(assert (x1740 x1802))
(assert (x1740 x2524))
(assert (x1740 x51))
(assert (x2348 x3797))
(assert (> (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990) 10000))
(assert (=> (>= 10000 x4046) (= 0 (x4391 x4046))))
(assert (=> (>= 10000 x402) (= (x4391 x402) 0)))
(assert (x2348 x1))
(assert (x2854 x1075))
(assert (x1740 x811))
(assert (x1740 x4476))
(assert (= (=> (and (= (x3966 x3667) x3769) (= (x3626 (+ x3375 x3784)) x2549) (= (< 0 x3769) x2159) (= x2818 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x110)) (= x386 (x3626 (+ x2818 x3375))) (= x934 (x3626 (+ 32 x1252))) (= (x4315 (- x386 x1808)) x4206) (= (x3626 (+ x3784 31)) x110)) (and (=> (not x2159) x3592) (=> (and x2159 (= (> x3769 32) x2091)) (and (=> (and (= (> x3769 64) x2496) x2091) (and (=> (and (= (< 96 x3769) x4355) x2496) (and (=> x4355 x2494) (=> (not x4355) x3592))) (=> (not x2496) x3592))) (=> (not x2091) x3592))))) x2168))
(assert (x1740 x2191))
(assert (= x2213 (x4185 (x4438 x722 x2191 x2213 x148))))
(assert (< 10000 (x4438 x1132 x607 x653 x2622)))
(assert (x1740 x711))
(assert (= (=> (= (= x570 0) x1151) (and (=> (and (and (= x3965 false) (= true x4) (= x2271 x3139)) x1151) x3602) (=> (and (not x1151) (= x1898 (< x3139 32))) (and (=> (and x1898 (and (= false x4178) (= x2271 0) (= true x902))) x3602) (=> (and (not x1898) (and (= x3660 (x534 x1316)) (= x886 x1316) (= x1316 (x939 160)) (= x4037 (x696 x2565)) x4536 (= x3148 (= x4037 0)) (<= x3660 3) (<= x4037 3) (= x4536 (= x3660 x4037)) (= x2565 (x3614 64 x1316 11)))) (and (=> (and (not x3148) (and (= 4 x2271) (= x3975 false) (= x4187 true))) x3602) (=> (and (and (or (and (and (not x1439) (= x1795 x169) (= true x3817)) (not x1439)) (and x1439 (and (= x2986 (+ x169 1)) x1439 (= 1 x2798) (= x2986 x1795)))) (and (= 1 x2989) (= (x3614 64 x1316 11) x750) (= 1 x4469) (= x4034 x1316) (= x1249 x1156) (= x1439 (not x3753)) (= x1156 x1178) (= x3753 (= 0 x1178)) (= x1249 (x696 x750)) (= x3273 (x3614 64 x256 10)) (<= x1249 255) (= x3399 1) (= 1 x2173) (= x2888 0))) x3148) x3479))))))) x381))
(assert (=> (<= x4286 10000) (= 0 (x4391 x4286))))
(assert (x1740 x665))
(assert (= (x2019 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242)) x703))
(assert (= x1331 (and x2133 x2284)))
(assert (x1740 x2927))
(assert (= (x4391 1914215) 0))
(assert (x1740 x1464))
(assert (< 10000 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062)))
(assert (not (x105 (x3614 64 x1858 6))))
(assert (=> (>= 10000 x2983) (= (x4391 x2983) 0)))
(assert (= (and x1792 x1700) x4190))
(assert (x1740 x1356))
(assert (= (or x1571 (and x286 (not x708))) x2618))
(assert (< (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1783) (= (x4391 x1783) 0)))
(assert (x1740 x705))
(assert (x1740 x1570))
(assert (x1740 x1135))
(assert (x1740 x3305))
(assert (=> (>= 10000 x79) (= (x4391 x79) 0)))
(assert (= (=> (= x2318 (not (> x4163 32))) (and x2318 x2374)) x166))
(assert (= x554 (and (not x3913) x1873)))
(assert (x1740 x2040))
(assert (= x3924 (and x2405 x3413)))
(assert (x1740 x324))
(assert (= 64 (x2094 (x3614 64 x1399 6))))
(assert (x1740 x458))
(assert (=> (>= 10000 x148) (= (x4391 x148) 0)))
(assert (< (x2749 x1847 x1783 x384 x624 x850 x2242) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2790))
(assert (= (and x4056 (not x918)) x2792))
(assert (= (x4185 (x3614 64 x1421 (ite (= 0 x2313) x2088 (ite (<= x2313 32) x2987 (ite (<= x2313 64) x823 (ite (<= x2313 96) x311 (ite (>= 128 x2313) x922 (ite (<= x2313 160) x1565 (ite (>= 192 x2313) x2988 (ite (>= 224 x2313) x2034 x326)))))))))) (ite (= 0 x2313) x2088 (ite (>= 32 x2313) x2987 (ite (>= 64 x2313) x823 (ite (>= 96 x2313) x311 (ite (<= x2313 128) x922 (ite (<= x2313 160) x1565 (ite (>= 192 x2313) x2988 (ite (<= x2313 224) x2034 x326))))))))))
(assert (x1740 x679))
(assert (= (and x4354 x686) x3515))
(assert (= 64 (x2094 (x3614 64 x432 12))))
(assert (= (=> (and (= x3296 (<= x3122 224)) (= (x3626 (+ 128 x3914)) x114) (= x3122 (x4315 (- x114 128)))) (and x3296 (=> (and (= x584 (x1465 0)) (= x916 (x422 128)) (= x188 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) (= (x422 160) x1507) (= (x422 224) x2179) (= x2436 (x422 160)) (= (x422 224) x337) (= (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242) x1413) (= (x422 224) x3441) (= x2773 (x422 128)) (= (x3096 x3122 x916) x138) (= x2983 (x422 160)) (= x2838 (x422 192)) (= (x422 128) x3227) (= x2571 (x422 224)) (= (x422 128) x2306) (= (x422 160) x3081) (= (x422 160) x1784) (= x1327 (x422 288)) (= (x422 192) x4193) (= x2073 (x3614 x3122 x4134 x3081)) (= x3359 (x4438 x3122 x2306 x1784 x1678)) (= x1678 (x422 192)) (= (x422 288) x4242) (= x2543 (x3121 x3122 x3227 x778 x81 x3441)) (= x439 (x422 256)) (= (x422 256) x3756) (= x703 (x422 128)) (= (= (ite (= 0 x3122) x584 (ite (>= 32 x3122) x138 (ite (<= x3122 64) x2073 (ite (>= 96 x3122) x3359 (ite (>= 128 x3122) x2543 (ite (>= 160 x3122) x1497 (ite (>= 192 x3122) x1413 (ite (>= 224 x3122) x188 x1261)))))))) x3410) x2405) (= (x422 192) x81) (= x4134 (x422 128)) (= (x422 256) x250) (= x778 (x422 160)) (= x1850 (x422 320)) (= (x422 192) x214) (= x4105 (x422 128)) (= x1497 (x2749 x3122 x2773 x1507 x214 x337 x3756))) (and (=> x2405 x2795) (=> (and (not x2405) (and (= x3601 132) (= false x3625) (= true x1742))) x3678))))) x1586))
(assert (not (x105 (x3614 64 x3411 12))))
(assert (x1740 x1687))
(assert (= (x4391 (x3614 x1132 x45 x429)) (x3614 x1132 x45 x429)))
(assert (x1740 x1628))
(assert (=> (>= 10000 x2542) (= 0 (x4391 x2542))))
(assert (x1740 x3036))
(assert (= x2574 (x2019 (x3096 x1954 x2574))))
(assert (x1740 x2796))
(assert (=> (>= 10000 x429) (= (x4391 x429) 0)))
(assert (x1740 x2107))
(assert (= (x3614 64 x3591 1) (x4391 (x3614 64 x3591 1))))
(assert (= (x2094 (x3096 x1132 x312)) x1132))
(assert (< (x3614 64 x4284 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x2094 (x3614 64 x2766 36))))
(assert (x1740 x3106))
(assert (x1740 x2066))
(assert (= (x2019 (x3614 64 x432 12)) x432))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (and x3161 x4519) x2220))
(assert (x1740 x2331))
(assert (= (or x3173 x2402) x3755))
(assert (x1740 x943))
(assert (=> (<= x2005 10000) (= (x4391 x2005) 0)))
(assert (x1740 x1111))
(assert (= (x2094 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046)) x1954))
(assert (= (x4391 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)) (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)))
(assert (= (x4391 3521034783) 0))
(assert (x1740 x3844))
(assert (= (x3614 64 x2766 36) (x4391 (x3614 64 x2766 36))))
(assert (=> (>= 10000 x4433) (= (x4391 x4433) 0)))
(assert (=> (>= 10000 x3700) (= 0 (x4391 x3700))))
(assert (x2854 x2049))
(assert (= x2016 (and x3259 x3747)))
(assert (x1740 x4068))
(assert (x1740 x3437))
(assert (= x1562 (x4185 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460))))
(assert (x1740 x2391))
(assert (x2854 x3378))
(assert (= x548 (and (not x3536) x970)))
(assert (= x3122 (x2094 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850))))
(assert (= x1856 (x2019 (x3614 64 x1856 (ite (= 0 x1847) x408 (ite (>= 32 x1847) x2946 (ite (>= 64 x1847) x1561 (ite (<= x1847 96) x240 (ite (<= x1847 128) x2899 (ite (<= x1847 160) x1119 (ite (>= 192 x1847) x1235 (ite (>= 224 x1847) x172 x324))))))))))))
(assert (= x2029 (and (not x3911) x1451)))
(assert (=> (>= 10000 x2547) (= (x4391 x2547) 0)))
(assert (= (x3614 64 x1323 100) (x4391 (x3614 64 x1323 100))))
(assert (< 10000 (x3614 64 x1863 12)))
(assert (x1740 x2461))
(assert (= x1186 (=> (and (= x1292 (x4315 (- x860 x2041))) (= x1482 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x394)) (= x3185 (x3626 (+ 32 x860))) (= (x3626 (+ 32 x4287)) x3816) (= (x3098 x3952) x3612) (= x860 (x3626 (+ x1482 x446))) (= x1937 (x3626 (+ x446 x3669))) (= x3431 (x3626 (+ 32 x3816))) (= x394 (x3626 (+ x3669 31))) (= (> x3612 0) x3362)) (and (=> (not x3362) x2353) (=> (and x3362 (and (= x203 (> x3612 32)) (= x2563 (x2053 x4045)))) (and (=> (not x203) x2353) (=> (and x203 (and (= (x4455 x2993) x1144) (= (x3626 (+ x4045 32)) x2993) (= (x3626 (+ x3185 32)) x3056) (= x4027 (< 64 x3612)))) (and (=> (and x4027 (and (= (x1803 x497) x2057) (= (< 96 x3612) x4115) (= (x3626 (+ x3185 64)) x2492) (= x497 (x3626 (+ 64 x4045))))) (and (=> (not x4115) x2353) (=> x4115 x1711))) (=> (not x4027) x2353)))))))))
(assert (x1740 x1876))
(assert (= (x2094 (x3614 64 x4330 10)) 64))
(assert (= x1560 (x4185 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (= (x3096 x3061 x47) (x4391 (x3096 x3061 x47))))
(assert (x1740 x1806))
(assert (= 64 (x2094 (x3614 64 x1316 11))))
(assert (= (and x1083 (not x3839)) x2294))
(assert (x1740 x3660))
(assert (x1740 x3492))
(assert (= (x4391 (x3121 x4440 x3305 x3268 x363 x1386)) (x3121 x4440 x3305 x3268 x363 x1386)))
(assert (= (x2019 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)) x2381))
(assert (x1740 x876))
(assert (= (x4391 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)))
(assert (< 10000 (x3614 64 x3591 1)))
(assert (x105 74700126319118050543342327103397598470879858733489597287354029460387927162880))
(assert (not (x105 (x4438 x3061 x144 x2535 x415))))
(assert (=> (<= x2738 10000) (= 0 (x4391 x2738))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4438 x3122 x2306 x1784 x1678)))
(assert (= 12 (x4185 (x3614 64 x2533 12))))
(assert (x105 97822624453686575479804928673988797637476738513438931194560248106084831592448))
(assert (= x736 (x2094 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365))))
(assert (=> (<= x336 10000) (= (x4391 x336) 0)))
(assert (x1740 x2049))
(assert (x2854 x3708))
(assert (= 100 (x4185 (x3614 64 x1323 100))))
(assert (x1740 x2501))
(assert (x1740 x3474))
(assert (= x1867 (and x728 x2618)))
(assert (x1740 x1281))
(assert (= (x226 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)) x3165))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x1455 36)))
(assert (= (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242) (x4391 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (< (x3614 64 x1858 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x4509))
(assert (= (=> (and (and (= x3967 x3713) (and (= (+ 4 x1660) x1495) (= x1072 (+ x722 x3851)) (= x3203 x3713) (= 1914215 x4065) (= x2419 (= x2145 0)) (= x2802 false) (not (> x936 x2758)) (= x3851 (+ 32 x493)) (< x582 x2758) (= x2541 false) (= x2650 (x4315 (- x3629 (mod (ite (> 32 x2145) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2145 (ite (< 0 x3629) x3258 (x1329 127 x3258))) (= x2222 (div (+ x2145 31) 32)) (< x1134 x2758) (= (+ 32 x1495) x1683) (= x722 (x4245 x493)) (= (x154 x3591) x2705) (<= x1563 127) (= (+ 160 x901) x2858) (= x3258 (div x2456 2)) (= x608 x1236) (= x1941 x3172) (= x2456 (x15 x1162)) (= x1134 (+ x1495 31)) (not (> x1072 x2758)) (= (x4245 x1495) x845) (= x1941 (x1180 x3591)) (= x2409 x1270) (= (x1329 1 x2456) x3629) (= x901 (* 32 x2222)) (= x3370 (x549 x3203)) (>= 127 x1563) (or (= 1 x2650) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2650)) (>= x2705 1) (>= 18446744073709551615 x722) (= (+ 31 x493) x582) (= x1162 (x3614 64 x2602 3)) (= x2846 x3967) (= (+ x845 x1683) x936) (<= x845 18446744073709551615) (= (+ 4 x4235) x493))) (and (= x4454 x1736) (= x1660 x346) (>= x3151 0) (= 0 x3335) (not (= x3420 x2774)) (<= 0 x3956) (= x1445 (> (x154 x2774) 0)) (= (x1243 100) x1660) (= x2842 false) (>= x4100 0) (= x2409 x2980) x1920 (<= x3968 1461501637330902918203684832716283019655932542975) (>= x738 1) (>= 18446744073709551615 x4235) (= 0 x1564) x1445 (>= x320 0) (= x2470 false) (= 0 x1648) (= x3456 false) (>= x969 0) (<= 0 x3254) (<= 0 x841) (>= 1461501637330902918203684832716283019655932542975 x3713) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2758) (= x2602 (x1243 4)) (<= 1 x2846) (= x508 (< 0 (x154 x3420))) x896 (<= x2980 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x4100) (<= x1660 18446744073709551615) (>= 4294967295 x320) (<= 1 x3591) (>= 1461501637330902918203684832716283019655932542975 x3254) (<= 196 x2758) (<= 1 x3968) (= (> (x154 x3591) 0) x896) x508 (<= 1 x2774) (>= 1461501637330902918203684832716283019655932542975 x3591) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3112) (<= x969 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3112 0) (= x4235 (x1243 36)) (= false x3789) (not (= x2774 x3591)) (= x3420 x2846) (<= x787 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3752) (= x1920 (> (x154 x3968) 0)) (= true x2420) (<= 1 x3420) (= 0 x4547) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2774 1461501637330902918203684832716283019655932542975) (= 4 x4234) (>= 1461501637330902918203684832716283019655932542975 x738) (<= 0 x787) (= x3591 x294) (= x4235 x2389) (= x1470 1914215) (>= 1461501637330902918203684832716283019655932542975 x2846) (not (= x3591 x3420)) (>= 1461501637330902918203684832716283019655932542975 x841) (not (= x3968 x3591)) (>= 65535 x2602) (not (= x3968 x2774)) (= x1736 (x1243 0)) (>= x3713 1) (= (x1243 68) x2980) (<= x3151 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3752) (= x608 x2602) (not (= x3420 x3968)) (<= x3420 1461501637330902918203684832716283019655932542975) (>= x3849 0) (= x3591 x738) (= x1206 false) (<= x3956 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x2419) (= x2734 (< 31 x2145))) (and (=> (and (and (= x4232 (+ x2145 160)) (= (> x4232 192) x2852) (= x2033 (x3096 32 x1162)) (= (x4487 x2033) x3455) (= x2380 (+ 1 x2033))) x2734) (and (=> x2852 x2816) (=> (not x2852) x1242))) (=> (and (and (= x2469 (* 256 x2723)) (= (x15 x1162) x3345) (= x2723 (div x3345 256))) (not x2734)) x1414))) (=> x2419 x1414))) x1159))
(assert (= x212 (x353 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (x1740 x3729))
(assert (= x797 (and x1335 x2755)))
(assert (= x1602 (and (not x3070) x16)))
(assert (x1740 x338))
(assert (x1740 x158))
(assert (x1740 x3740))
(assert (= x4331 (x2019 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460))))
(assert (x304 x110))
(assert (= (x4185 (x3614 x3061 x1446 x3936)) x3936))
(assert (= (and x3710 (not x937)) x332))
(assert (x1740 x819))
(assert (x1740 x743))
(assert (x1740 x4329))
(assert (x1740 x3043))
(assert (= (x2019 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) x1164))
(assert (= (x3614 64 x4441 36) (x4391 (x3614 64 x4441 36))))
(assert (x2348 x4405))
(assert (=> (>= 10000 x3408) (= (x4391 x3408) 0)))
(assert (> (x3121 x1806 x892 x84 x1640 x1925) 10000))
(assert (x1740 x982))
(assert (= x2780 (and x1039 (not x3562))))
(assert (= (x226 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)) x2039))
(assert (x1740 x4072))
(assert (= x3061 (x2094 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (x304 x3786))
(assert (> (x3614 64 x3764 36) 10000))
(assert (=> (<= x2009 10000) (= 0 (x4391 x2009))))
(assert (x1740 x3524))
(assert (< (x2749 x1132 x2695 x1710 x1661 x3721 x897) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2094 (x4438 x2313 x2314 x282 x441)) x2313))
(assert (=> (<= x1082 10000) (= (x4391 x1082) 0)))
(assert (x1740 x1357))
(assert (= x595 (or x3058 x2530)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3202 12)))
(assert (=> (<= x4498 10000) (= 0 (x4391 x4498))))
(assert (= (x4185 (x3614 64 x3201 36)) 36))
(assert (x1740 x4525))
(assert (not (x105 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365))))
(assert (=> (>= 10000 x1770) (= (x4391 x1770) 0)))
(assert (=> (<= x4251 10000) (= 0 (x4391 x4251))))
(assert (= (x4438 x1954 x3524 x1389 x2377) (x4391 (x4438 x1954 x3524 x1389 x2377))))
(assert (x1740 x1980))
(assert (= (and x2038 x1645) x3803))
(assert (=> (<= x4330 10000) (= (x4391 x4330) 0)))
(assert (= x4132 (and (not x4223) x1695)))
(assert (x1740 x578))
(assert (x1740 x3843))
(assert (= (x2019 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)) x3001))
(assert (< 10000 (x2749 x1772 x3512 x825 x3882 x1296 x33)))
(assert (=> (>= 10000 x2174) (= (x4391 x2174) 0)))
(assert (x1740 x4435))
(assert (x1740 x3653))
(assert (x1740 x4383))
(assert (= (x2019 (x3121 x1772 x3353 x4071 x2867 x151)) x3353))
(assert (=> (>= 10000 x1658) (= 0 (x4391 x1658))))
(assert (x1740 x391))
(assert (= (or (and (not x1150) x1419) x1312) x639))
(assert (= (and (not x1975) x3068) x313))
(assert (x1740 x215))
(assert (= 0 (x4391 100000)))
(assert (x1740 x415))
(assert (= (x2094 (x3614 64 x2796 6)) 64))
(assert (= x1952 (and x228 x3684)))
(assert (x1740 x3209))
(assert (x1740 x1341))
(assert (= x1149 (x353 (x4438 x1847 x1718 x1485 x1149))))
(assert (x1740 x1516))
(assert (> (x3614 64 x131 36) 10000))
(assert (= (x3096 x1132 x312) (x4391 (x3096 x1132 x312))))
(assert (x1740 x1807))
(assert (x1740 x2594))
(assert (x1740 x2521))
(assert (=> (<= x4134 10000) (= 0 (x4391 x4134))))
(assert (x1740 x1889))
(assert (x1740 x1537))
(assert (= 64 (x2094 (x3614 64 x1515 100))))
(assert (> (x3096 x4440 x4484) 10000))
(assert (= x348 (and x2840 x3547)))
(assert (= x4076 (and (not x3544) x3262)))
(assert (x1740 x2506))
(assert (= x3879 (=> (= x3322 (= x2657 0)) (and (=> (and (and (= true x1865) (= false x3491) (= x3130 x2713)) x3322) x3120) (=> (and (and (= x1550 x2646) (= x3347 x4348) (= x3886 x1854) (= x3992 x2879) (= x3696 x262) (= x2081 x2525) (= x720 x1368) (= x4542 x3548) (= x3475 x1874) (= x1617 x3014) (= x1353 x3691) (= x1014 x4496) (= x3941 x2290) (= x117 x2841)) (not x3322)) x474)))))
(assert (> (x3614 x1847 x2738 x1877) 10000))
(assert (= (x3096 32 104) (x4391 (x3096 32 104))))
(assert (x1740 x1651))
(assert (x1740 x2944))
(assert (x1740 x3382))
(assert (< 10000 (x3614 64 x168 36)))
(assert (x1740 x2271))
(assert (x1740 x3944))
(assert (x1740 x4048))
(assert (= x2738 (x2019 (x3614 x1847 x2738 x1877))))
(assert (x1740 x4163))
(assert (x1740 x2250))
(assert (x2931 x1516))
(assert (x1740 x2342))
(assert (x1740 x457))
(assert (= (x4185 (x4438 x4440 x4356 x4069 x2949)) x4069))
(assert (= x1722 (=> (and (= x3794 x1226) (= x3542 x2274) (= x791 x973) (= x4064 x1828) (= x3201 x2143) (= x3026 x1752) (= x1330 x1464) (= 0 x1183) (= x2560 x1116) (= x3717 x3841) (= x2030 x1315) (= x3703 x1286) (= 0 x1286) (= x426 x53) (= 2 x3812) (= x1036 x2067) (= x4012 x1338) (= x1720 x3934)) x3798)))
(assert (not (x105 (x3096 32 104))))
(assert (= (x2789 (x3121 x2268 x4394 x3334 x3409 x849)) x849))
(assert (= (x2019 (x2749 x1847 x1783 x384 x624 x850 x2242)) x1783))
(assert (x1740 x4517))
(assert (x1740 x2409))
(assert (x1740 x726))
(assert (x1740 x1338))
(assert (x1740 x1808))
(assert (x1740 x1485))
(assert (x1740 x2499))
(assert (= x4173 (or (and (not x1727) x36) x1625)))
(assert (=> (<= x1624 10000) (= (x4391 x1624) 0)))
(assert (= (x2094 (x3614 64 x168 36)) 64))
(assert (= x3372 (x4185 (x2749 x2268 x1211 x3372 x1267 x2542 x774))))
(assert (= x2092 (x2789 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (x2854 x2456))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490)))
(assert (= x2442 (or x3807 x3505)))
(assert (=> (<= x1135 10000) (= (x4391 x1135) 0)))
(assert (x1740 x482))
(assert (x1740 x3968))
(assert (= x1067 (and (not x2588) x3253)))
(assert (= x4023 (=> (and (= (= 0 x2207) x1150) (or x1150 (not x1150))) x2175)))
(assert (= (x2094 (x3614 x1806 x2349 x1322)) x1806))
(assert (x1740 x66))
(assert (x1740 x820))
(assert (x2348 x246))
(assert (x1740 x3598))
(assert (x1740 x2757))
(assert (=> (>= 10000 x2386) (= (x4391 x2386) 0)))
(assert (x1740 x2667))
(assert (=> (<= x2843 10000) (= 0 (x4391 x2843))))
(assert (= x3212 (and x4436 x385)))
(assert (x1740 x3055))
(assert (= 64 (x2094 (x3614 64 x1081 36))))
(assert (= (x226 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) x1524))
(assert (= x3589 (and x3603 (not x2037))))
(assert (x1740 x2525))
(assert (< 10000 (x4438 x3122 x2306 x1784 x1678)))
(assert (x1740 x847))
(assert (= x970 (and x2555 x1827)))
(assert (x1740 x1607))
(assert (x1740 x2025))
(assert (= (and x2265 x2117) x3593))
(assert (not (x105 (x3614 x1966 x4426 x2522))))
(assert (x1740 x3493))
(assert (x1740 x1394))
(assert (not (x105 (x3614 64 x2796 6))))
(assert (x1740 x653))
(assert (= (x2789 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) x2187))
(assert (x1740 x1238))
(assert (x1740 x2625))
(assert (x1740 x543))
(assert (= (=> (and (= x2358 x4119) (= x1914 x3072) (= x1578 x980) (= x691 x1554) (= x3282 x4476) (= x3694 x4424) (= x278 x3590) (= x1662 x2874) (= x447 x3464) (= x1281 x745) (= x2347 x2952) (= x3153 x3135) (= x717 x3155) (= x4453 x1553)) x4239) x271))
(assert (= x3182 (and (not x306) x4413)))
(assert (x1740 x3277))
(assert (= 0 (x4391 4294967295)))
(assert (x1740 x1183))
(assert (=> (>= 10000 x1379) (= (x4391 x1379) 0)))
(assert (= (x4391 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)) (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)))
(assert (=> (>= 10000 x1652) (= 0 (x4391 x1652))))
(assert (< 10000 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046)))
(assert (= x801 (=> (and (= x3856 x3609) (= x1980 x795) (= x2584 x2307) (= x3049 x1537) (= x3277 x1781) (= x562 x3065) (= x1778 x2716) (= x2926 x2582) (= x4050 x4365) (= x3932 x485) (= x3294 x3207) (= x4353 x4167) (= x2476 x2354) (= x2544 x3563) (= x4077 x3790) (= x2933 x4368)) x3576)))
(assert (x1740 x2828))
(assert (x1740 x4543))
(assert (= (and x241 x1638) x1875))
(assert (= (x353 (x2749 x722 x2659 x1620 x1289 x950 x3715)) x1289))
(assert (not (x105 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (= (and x1538 x3523) x1189))
(assert (x1740 x3047))
(assert (x1740 x1499))
(assert (=> (<= x3123 10000) (= 0 (x4391 x3123))))
(assert (= x2547 (x2789 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160))))
(assert (x1740 x4328))
(assert (x105 65459779515086145227071195481915504640854538040456829512690024447692440076288))
(assert (= (or (and x3765 x4205) (and x4514 x554) (and x3197 x3930) (and x2588 x3253) (and x325 x3630)) x1284))
(assert (= x1873 (and (not x3111) x3212)))
(assert (=> (<= x1560 10000) (= (x4391 x1560) 0)))
(assert (> (x3096 x742 x1712) 10000))
(assert (=> (>= 10000 x3673) (= (x4391 x3673) 0)))
(assert (=> (>= 10000 x4036) (= (x4391 x4036) 0)))
(assert (x1740 x1547))
(assert (x1740 x1174))
(assert (x1740 x899))
(assert (x1740 x1553))
(assert (x1740 x2023))
(assert (x2854 x1366))
(assert (x1740 x1902))
(assert (x1740 x1133))
(assert (x1740 x2559))
(assert (x1740 x4266))
(assert (x1740 x974))
(assert (x1740 x460))
(assert (x1740 x4496))
(assert (= (=> (and (= x3696 x2347) (= x4348 x2358) (= x3548 x3694) (= x3992 x691) (= x1874 x1281) (= x2290 x980) (= x2646 x1553) (= x1617 x278) (= x1914 x720) (= x2841 x3135) (= x3282 x2081) (= x1353 x717) (= x3464 x3886) (= x2874 x1014)) x474) x4239))
(assert (not (x105 (x3121 x4440 x3305 x3268 x363 x1386))))
(assert (x1740 x3670))
(assert (x1740 x3792))
(assert (=> (<= x3520 10000) (= (x4391 x3520) 0)))
(assert (=> (>= 10000 x1570) (= (x4391 x1570) 0)))
(assert (x1740 x3454))
(assert (x1740 x2161))
(assert (x1740 x3082))
(assert (x1740 x2571))
(assert (= (x4391 (x3614 x2313 x2406 x2529)) (x3614 x2313 x2406 x2529)))
(assert (x1740 x2042))
(assert (< (x3614 x2313 x2406 x2529) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2854 x4435))
(assert (x1740 x1246))
(assert (x1740 x1126))
(assert (= x1895 (and x3895 (not x1548))))
(assert (= (x2094 (x3096 x1966 x1011)) x1966))
(assert (< 10000 (x3614 64 x1455 36)))
(assert (= (x4185 (x2749 x1847 x1783 x384 x624 x850 x2242)) x384))
(assert (= (x2789 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) x4297))
(assert (=> (>= 10000 x1954) (= (x4391 x1954) 0)))
(assert (x1740 x4393))
(assert (x1740 x426))
(assert (< 10000 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)))
(assert (= (=> (and (= x4291 false) (= x4423 36) (= true x4195)) x26) x89))
(assert (= (x2019 (x3096 x736 x558)) x558))
(assert (= x2649 (and x2745 x1439)))
(assert (x1740 x4164))
(assert (x1740 x362))
(assert (= x4442 (or x1993 x3751)))
(assert (x1740 x2983))
(assert (= (x2019 (x4438 x736 x1007 x1021 x727)) x1007))
(assert (x105 36180046632115354981904271164172418022085455641023445553456023893925156618240))
(assert (x1740 x331))
(assert (= x380 (=> (and (= x1871 (x3626 (+ 32 x3288))) (= x1152 (>= 224 x1806)) (= x1132 (x4315 (- x1871 128))) (= x4283 (x3614 64 x647 7)) (= x3288 (x3626 (+ 128 x2839))) (= x1806 (x4315 (- x1132 32))) (= (x3626 (+ x2839 128)) x1376)) (and x1152 (=> (and (= (x2749 x1806 x3606 x1022 x1584 x1469 x2466) x3782) (= (x93 128) x3606) (= (x93 288) x3490) (= x2479 (x4438 x1806 x4346 x1135 x158)) (= x3408 (x93 288)) (= x2092 (x93 224)) (= x968 (x93 160)) (= x1135 (x93 160)) (= (x93 192) x3493) (= (x1465 0) x2580) (= x1027 (x93 320)) (= (x93 224) x1469) (= x2493 (x3614 x1806 x2349 x1322)) (= (x93 224) x3666) (= x1584 (x93 192)) (= x4346 (x93 128)) (= x3729 (x93 256)) (= (x93 128) x2349) (= x892 (x93 128)) (= x4269 (x93 128)) (= (x93 224) x1925) (= (x93 256) x2466) (= (x93 160) x636) (= x904 (x93 128)) (= x82 (x3096 x1806 x904)) (= (<= x1132 224) x1362) (= (x93 160) x1022) (= x1078 (x93 128)) (= x127 (ite (= x1806 0) x2580 (ite (<= x1806 32) x82 (ite (>= 64 x1806) x2493 (ite (<= x1806 96) x2479 (ite (<= x1806 128) x3823 (ite (<= x1806 160) x3782 (ite (>= 192 x1806) x3539 (ite (>= 224 x1806) x1191 x297))))))))) (= x1322 (x93 160)) (= (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490) x3539) (= (x93 256) x3193) (= x1191 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) (= (x93 192) x158) (= x84 (x93 160)) (= (x3121 x1806 x892 x84 x1640 x1925) x3823) (= x3190 (x93 192)) (= x1640 (x93 192))) (and x1362 (=> (and (= (x93 160) x429) (= (x3614 x1132 x45 x429) x3958) (= (x93 128) x3001) (= (x93 192) x2701) (= (x93 160) x653) (= (x3121 x1132 x2280 x1443 x2517 x2430) x529) (= (x93 256) x897) (= (x4438 x1132 x607 x653 x2622) x1380) (= (x2749 x1132 x2695 x1710 x1661 x3721 x897) x2871) (= x1443 (x93 160)) (= x3410 (x526 x1885)) (= x1710 (x93 160)) (= x3719 (x93 288)) (= x2280 (x93 128)) (= x3721 (x93 224)) (= x1899 (= x3410 0)) (= (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876) x2624) (= (x93 224) x2812) (= x2430 (x93 224)) (= (x93 192) x2517) (= x449 (x93 192)) (= x1661 (x93 192)) (= (x93 128) x312) (= x45 (x93 128)) (= x2695 (x93 128)) (= (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719) x465) (= (x3614 64 x1856 (ite (= x1132 0) x2937 (ite (<= x1132 32) x2102 (ite (<= x1132 64) x3958 (ite (>= 96 x1132) x1380 (ite (>= 128 x1132) x529 (ite (<= x1132 160) x2871 (ite (>= 192 x1132) x465 (ite (>= 224 x1132) x2624 x111))))))))) x1885) (= (x93 320) x876) (= (x93 288) x619) (= x2090 (x93 256)) (= x2245 (x93 128)) (= (x1465 0) x2937) (= (x93 192) x2622) (= (x93 256) x2771) (= (x93 224) x2287) (= (x93 128) x607) (= (x93 160) x2875) (= (x93 160) x2012) (= (x3096 x1132 x312) x2102)) (and (=> (and (and (= x3601 132) (= true x2606) (= false x2151)) x1899) x3678) (=> (not x1899) x1586)))))))))
(assert (x1740 x3992))
(assert (x1740 x4362))
(assert (= x3184 (=> (and (= x3347 x2740) (= x1854 x2030) (= x791 x2525) (= x3794 x4496) (= x1036 x3475) (= x4542 x1116) (= x1752 x117) (= x3542 x3941) (= x262 x4064) (= 0 x2657) (= x426 x1368) (= 0 x2938) (= x1550 x4012) (= x2938 x3691) (= 2 x4147) (= x2740 (x1329 255 x1984)) (= x147 x2713) (= x3014 x3841) (= x3934 x2879)) x3805)))
(assert (not (x105 (x2749 x2268 x1211 x3372 x1267 x2542 x774))))
(assert (=> (>= 10000 x1251) (= (x4391 x1251) 0)))
(assert (= (x4391 310283853) 0))
(assert (= (and x1762 (not x431)) x1224))
(assert (x1740 x618))
(assert (= x2813 (or x1240 x1232)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)))
(assert (x1740 x1990))
(assert (x1740 x3258))
(assert (x1740 x4064))
(assert (= (x226 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460)) x1971))
(assert (= x425 (and x3494 x2910)))
(assert (= (x2094 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780)) x2268))
(assert (x1740 x3211))
(assert (= (x2019 (x3614 64 x4441 36)) x4441))
(assert (= (x353 (x2749 x1966 x1707 x3979 x496 x2463 x390)) x496))
(assert (x1740 x1964))
(assert (= x1515 (x2019 (x3614 64 x1515 100))))
(assert (= (x2094 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x1806))
(assert (x1740 x1378))
(assert (= x1155 (and x279 (not x1992))))
(assert (= x2293 (or x3575 x564)))
(assert (x1740 x1354))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x722 x2659 x1620 x1289 x950 x3715)))
(assert (x1740 x250))
(assert (x2854 x737))
(assert (= x2745 (and x3242 x3148)))
(assert (x1740 x2650))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x2268 x4292 x4285)))
(assert (x1740 x2214))
(assert (x1740 x2505))
(assert (= (and (not x2338) x1198) x903))
(assert (> (x4438 x1806 x4346 x1135 x158) 10000))
(assert (= x1094 (and (not x2734) x863)))
(assert (= (and x375 x2292) x531))
(assert (=> (<= x3877 10000) (= (x4391 x3877) 0)))
(assert (= (x2094 (x1465 0)) 0))
(assert (=> (<= x292 10000) (= 0 (x4391 x292))))
(assert (< (x3614 64 x3411 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x645))
(assert (= x676 (=> (and (= x1752 x2746) (= x524 x2124) (= x3492 x216) (= x3106 x4410) (= x3794 x3844) (= x2917 x1036) (= 0 x1896) (= x383 x2847) (= x2427 x791) (= x2030 x150) (= x1381 1) (= x2103 x2032) (= x4401 x3198) (= x3841 x4556) (= x3237 x3670) (= x1116 x4525)) x57)))
(assert (= x1010 (=> (and (= 2 x1169) (= x150 x2030) (= x1752 x2746) (= x1070 x1896) (= x4012 x2124) (= x2847 x4397) (= x1116 x4525) (= 0 x4397) (= (x1329 255 x2829) x962) (= x3198 x4064) (= x4556 x3841) (= x3492 x3934) (= x962 x2103) (= x1381 0) (= x3237 x426) (= x3844 x3794) (= x2917 x1036) (= x3542 x4410) (= x791 x2427)) x57)))
(assert (not (x105 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (= x4207 (=> (and (= x710 0) (= true x3127) (= false x1158)) x2722)))
(assert (=> (<= x3178 10000) (= 0 (x4391 x3178))))
(assert (x1740 x1006))
(assert (x1740 x2280))
(assert (< 10000 (x3096 x736 x558)))
(assert (x1740 x4197))
(assert (= x736 (x2094 (x3096 x736 x558))))
(assert (=> (>= 10000 x1752) (= (x4391 x1752) 0)))
(assert (= (x3614 x736 x4400 x1379) (x4391 (x3614 x736 x4400 x1379))))
(assert (not (x105 (x2749 x1966 x1707 x3979 x496 x2463 x390))))
(assert (= (or x156 (and x2442 (not x1403))) x288))
(assert (x1740 x907))
(assert (x1740 x1127))
(assert (x1740 x4183))
(assert (x1740 x683))
(assert (= (x4185 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572)) x3980))
(assert (= 64 (x2094 (x3614 64 x3821 36))))
(assert (=> (<= x390 10000) (= 0 (x4391 x390))))
(assert (= x2466 (x226 (x2749 x1806 x3606 x1022 x1584 x1469 x2466))))
(assert (x1740 x2551))
(assert (= (x226 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) x4535))
(assert (x1740 x2713))
(assert (= (x353 (x3121 x1806 x892 x84 x1640 x1925)) x1640))
(assert (x2854 x1619))
(assert (x1740 x77))
(assert (x1740 x2646))
(assert (x1740 x1319))
(assert (x692 x974))
(assert (= (x4391 (x3614 64 x131 36)) (x3614 64 x131 36)))
(assert (=> (<= x4394 10000) (= (x4391 x4394) 0)))
(assert (x1740 x3889))
(assert (= x755 (and x4508 (not x4226))))
(assert (= (x4185 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799)) x3725))
(assert (x1740 x2304))
(assert (= x2766 (x2019 (x3614 64 x2766 36))))
(assert (= (and (not x3309) x2502) x2621))
(assert (=> (<= x163 10000) (= 0 (x4391 x163))))
(assert (x1740 x636))
(assert (x1740 x3015))
(assert (x1740 x3072))
(assert (x1740 x312))
(assert (x1740 x2868))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x1772 x49)))
(assert (x1740 x1914))
(assert (x1740 x2602))
(assert (=> (>= 10000 x415) (= 0 (x4391 x415))))
(assert (= (x1339 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) x2379))
(assert (< 10000 (x3614 x2268 x4292 x4285)))
(assert (x1740 x110))
(assert (x1740 x4365))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)))
(assert (x1740 x2171))
(assert (= (x2019 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) x3733))
(assert (=> (<= x566 10000) (= (x4391 x566) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x1863 12)))
(assert (x1740 x263))
(assert (x1740 x2723))
(assert (= x3460 (x1339 (x1369 x2313 x4331 x1562 x2990 x2009 x1971 x3460))))
(assert (= (=> (and (= x3130 36) (= false x1655) (= true x2070)) x3120) x1043))
(assert (x1740 x3700))
(assert (x1740 x914))
(assert (=> (<= x1753 10000) (= (x4391 x1753) 0)))
(assert (x1740 x3065))
(assert (x1740 x22))
(assert (= (x2019 (x2749 x2313 x2520 x3804 x1652 x3880 x2331)) x2520))
(assert (x1740 x771))
(assert (= x392 (x2019 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (< (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x3062) (= 0 (x4391 x3062))))
(assert (= (x2789 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) x2571))
(assert (= (and x4056 x918) x3310))
(assert (x1740 x1736))
(assert (< 10000 (x3096 x1772 x49)))
(assert (x1740 x795))
(assert (not (x105 (x3614 x3061 x1446 x3936))))
(assert (x1740 x2895))
(assert (x1740 x1699))
(assert (x1740 x3935))
(assert (x1740 x4394))
(assert (x1740 x2746))
(assert (x1740 x926))
(assert (= x2491 (and x2152 x2270)))
(assert (= (and (not x1969) x4289) x3297))
(assert (=> (>= 10000 x3687) (= 0 (x4391 x3687))))
(assert (x1740 x4152))
(assert (= (and (not x153) x3942) x2922))
(assert (x1740 x3375))
(assert (= (=> (and (and (= x1992 (= x3006 x722)) (= (x2635 128) x3006)) (or (and (not x1992) (= x1585 (ite x1992 1 0))) (and x1992 (and (= (x2635 128) x550) (= x1585 (ite (> x550 0) 1 0)))))) x4466) x1414))
(assert (x1740 x3284))
(assert (x1740 x3135))
(assert (=> (<= x2571 10000) (= (x4391 x2571) 0)))
(assert (x1740 x3692))
(assert (x1740 x1203))
(assert (< 10000 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)))
(assert (x1740 x973))
(assert (= (x2094 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)) x722))
(assert (x1740 x413))
(assert (= (x2094 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) x1132))
(assert (= x1016 (and (not x3397) x858)))
(assert (= (and x375 (not x2292)) x856))
(assert (x1740 x1273))
(assert (= 64 (x2094 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (<= x2268 64) x2239 (ite (<= x2268 96) x2777 (ite (>= 128 x2268) x2219 (ite (<= x2268 160) x3031 (ite (<= x2268 192) x2515 (ite (>= 224 x2268) x1359 x3236))))))))))))
(assert (x1740 x4024))
(assert (x1740 x2857))
(assert (= x1978 true))
(assert (x1740 x4200))
(assert (x1740 x27))
(assert (x1740 x2120))
(assert (x1740 x4377))
(assert (x2348 x2943))
(assert (x1740 x814))
(assert (x1740 x2392))
(assert (x1740 x3608))
(assert (= (x4391 (x3614 x722 x3055 x471)) (x3614 x722 x3055 x471)))
(assert (= x2712 (and x2726 x3391)))
(assert (not (x105 (x3614 x736 x4400 x1379))))
(assert (x1740 x64))
(assert (x1740 x238))
(assert (x1740 x2121))
(assert (x1740 x1266))
(assert (x1740 x1613))
(assert (=> (<= x1944 10000) (= (x4391 x1944) 0)))
(assert (< (x3614 x722 x3055 x471) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1878))
(assert (= x1083 (or x1472 x3182)))
(assert (= (or (and x661 x556) (and x2256 x2643)) x3290))
(assert (x1740 x4485))
(assert (=> (<= x908 10000) (= 0 (x4391 x908))))
(assert (x1740 x2349))
(assert (= x248 (and x2110 x2794)))
(assert (not (x105 (x3121 x742 x2215 x2202 x1513 x1546))))
(assert (=> (>= 10000 x495) (= 0 (x4391 x495))))
(assert (not (x105 (x4438 x1132 x607 x653 x2622))))
(assert (= x451 (=> (and (= x4012 x3082) (= 0 x3919) (= x4120 (x1329 255 x2967)) (= 2 x2272) (= x2433 x791) (= x1787 x1036) (= x3919 x3615) (= x2302 x3794) (= x4064 x2548) (= x3934 x698) (= x1116 x3271) (= x665 x1752) (= x3447 x3939) (= x3542 x3645) (= x2030 x374) (= x4041 x3841) (= x426 x4233) (= x2125 0) (= x3525 x4120)) x4267)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x1847 x1714 x2878 x1454 x805)))
(assert (=> (<= x4284 10000) (= (x4391 x4284) 0)))
(assert (= x3118 (and x731 x372)))
(assert (x1740 x2273))
(assert (= x4448 (and x3117 x2951)))
(assert (= (x2019 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062)) x331))
(assert (x1740 x1578))
(assert (x1740 x2035))
(assert (= x450 (and (not x2805) x2481)))
(assert (= (x2094 (x2749 x736 x2211 x1126 x1110 x163 x4375)) x736))
(assert (= x441 (x353 (x4438 x2313 x2314 x282 x441))))
(assert (x1740 x778))
(assert (x1740 x1431))
(assert (= x1799 (=> (and (= x504 true) (= x39 false) (= x3601 0)) x3678)))
(assert (not (x105 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744))))
(assert (x1740 x879))
(assert (=> (<= x1289 10000) (= (x4391 x1289) 0)))
(assert (x1740 x840))
(assert (= (x4185 (x3614 x736 x4400 x1379)) x1379))
(assert (= (x4391 (x3614 64 x1455 36)) (x3614 64 x1455 36)))
(assert (= 7 (x4185 (x3614 64 x2602 7))))
(assert (x1740 x2808))
(assert (=> (>= 10000 x679) (= (x4391 x679) 0)))
(assert (x2854 x3052))
(assert (=> (<= x784 10000) (= 0 (x4391 x784))))
(assert (=> (>= 10000 x1020) (= (x4391 x1020) 0)))
(assert (< 10000 (x3614 64 x1316 11)))
(assert (x1740 x1957))
(assert (= 0 (x4391 2770781680)))
(assert (= x2517 (x353 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (x2348 x1306))
(assert (= (x353 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)) x3336))
(assert (> (x3614 64 x1856 (ite (= 0 x1132) x2937 (ite (<= x1132 32) x2102 (ite (<= x1132 64) x3958 (ite (>= 96 x1132) x1380 (ite (<= x1132 128) x529 (ite (>= 160 x1132) x2871 (ite (<= x1132 192) x465 (ite (>= 224 x1132) x2624 x111))))))))) 10000))
(assert (x1740 x1904))
(assert (= (and (not x1879) x777) x4067))
(assert (= (x4391 65459779515086145227071195481915504640854538040456829512690024447692440076288) 0))
(assert (x1740 x3061))
(assert (x1740 x2189))
(assert (x1740 x2829))
(assert (= x1076 (or x3339 x1230)))
(assert (x1740 x3408))
(assert (= x2902 (x1339 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902))))
(assert (x1740 x242))
(assert (= (x4185 (x3614 64 x2980 (ite (= x1954 0) x3200 (ite (<= x1954 32) x1090 (ite (<= x1954 64) x2853 (ite (>= 96 x1954) x2688 (ite (>= 128 x1954) x3252 (ite (<= x1954 160) x3909 (ite (>= 192 x1954) x2508 (ite (<= x1954 224) x4032 x2160)))))))))) (ite (= 0 x1954) x3200 (ite (>= 32 x1954) x1090 (ite (>= 64 x1954) x2853 (ite (<= x1954 96) x2688 (ite (<= x1954 128) x3252 (ite (<= x1954 160) x3909 (ite (>= 192 x1954) x2508 (ite (<= x1954 224) x4032 x2160))))))))))
(assert (< 10000 (x4438 x1966 x1264 x832 x3788)))
(assert (= x1020 (x2019 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (x1740 x4251))
(assert (=> (<= x2501 10000) (= 0 (x4391 x2501))))
(assert (= x537 (x2789 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482))))
(assert (=> (<= x3564 10000) (= (x4391 x3564) 0)))
(assert (x1740 x4467))
(assert (= x3882 (x353 (x2749 x1772 x3512 x825 x3882 x1296 x33))))
(assert (x105 59118985759084958080972419199848406897631161684926069324597705158744233476096))
(assert (= 0 (x4391 486791245)))
(assert (=> (<= x439 10000) (= (x4391 x439) 0)))
(assert (x1740 x1438))
(assert (= (x4391 (x3121 x1847 x1714 x2878 x1454 x805)) (x3121 x1847 x1714 x2878 x1454 x805)))
(assert (= (or (and (not x1276) x595) (and (not x2038) x1645) (and (not x1244) x4217) (and (not x1595) x3526)) x4325))
(assert (x1740 x1753))
(assert (x2854 x2507))
(assert (< 10000 (x2749 x736 x2211 x1126 x1110 x163 x4375)))
(assert (= (x3614 x3061 x1446 x3936) (x4391 (x3614 x3061 x1446 x3936))))
(assert (not (x105 (x2749 x4440 x3513 x1390 x1100 x4158 x1285))))
(assert (x1740 x3002))
(assert (= (x4391 44057028636630039105102054091366763171729008530599747929804322044178077843456) 0))
(assert (x1740 x947))
(assert (= x2722 (=> (and (= x3912 0) (= 2 x743) (= x1044 x527) (= x460 x710) (= x527 x3647)) x3522)))
(assert (x1740 x3715))
(assert (=> (>= 10000 x2900) (= (x4391 x2900) 0)))
(assert (x1740 x2446))
(assert (= x1746 (and (not x4082) x903)))
(assert (= x38 (=> (and (= x915 (= x1631 0)) (= x3834 128) (= (x4315 (- x3587 128)) x2086) (= (x154 x3542) x1631)) (and (=> (and (and (= x4522 (and x3331 x2165)) (= x3289 (x2833 x3542)) (= (< (+ x2578 x3289) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3331) (= (>= x3440 x2578) x2165) (= (x2833 x2774) x3440)) (not x915)) (and (=> (and (and (= x3875 (- x4252 x2578)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3103) (<= x2086 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3635 127) (>= x2086 196) (= x2471 3521034783) (= x3103 x2086) (= (x1929 132) x2322) (>= x3861 1) (= x1421 x2706) (<= 196 x3103) (= x1503 x3611) (>= 127 x3635) (= x3569 (+ x3904 x2578)) (= (< 18446744073709551615 x2322) x3088) (= x1066 x3569) (= x1092 128) (= x4288 94926909962862326217726538024181891405690106632559804934698421914364834480128) (= x4252 (x2833 x2774)) (= (x206 x3542) x3904) (= x819 x1160) (= (x154 x3591) x3861) (< (+ x3904 x2578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (= x835 (x1574 132)) x2963) x2963 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3569) (= false x986) (= false x1015) (>= x3569 0)) x4522) (and (=> (and (and (= 164 x816) (= x2707 (x3626 (+ x2322 164))) (= (< x3103 x2707) x604)) (not x3088)) (and (=> (and (not x604) (and (= (+ 4 x1503) x2075) (= x1747 (< (+ 31 x2075) x3103)))) (and (=> (and (not x1747) (and (= x3621 false) (= 0 x2325) (= x505 true))) x1268) (=> (and (and (= x878 (> x3679 18446744073709551615)) (= (x1929 x2075) x3679)) x1747) (and (=> (and (and (= (x3626 (+ x2074 x3679)) x149) (= x2074 (+ x2075 32)) (= (> x149 x3103) x3045)) (not x878)) (and (=> (not x3045) x125) (=> x3045 x3011))) (=> x878 x2611))))) (=> x604 x3011))) (=> x3088 x2611))) (=> (and (= x2438 0) (not x4522)) x4369))) (=> (and (and (= false x3947) (= true x2958) (= 0 x3130)) x915) x3120)))))
(assert (=> (>= 10000 x1390) (= (x4391 x1390) 0)))
(assert (=> (>= 10000 x1601) (= 0 (x4391 x1601))))
(assert (= (not (and (= (x3614 64 x4330 10) x1463) (= x4330 (x2601 x213)))) x3424))
(assert (x1740 x2695))
(assert (=> (<= x3796 10000) (= (x4391 x3796) 0)))
(assert (= x684 (or x1476 x2922)))
(assert (= (x2094 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)) x1847))
(assert (x1740 x901))
(assert (< (x2749 x3122 x2773 x1507 x214 x337 x3756) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x105 (x3121 x1966 x933 x3210 x4230 x4404))))
(assert (= (and (not x2554) x2258) x3991))
(assert (= x4338 (or (and x3684 (not x228)) x1952)))
(assert (= x2480 (x2019 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (= (x2019 (x3614 x1954 x402 x1876)) x402))
(assert (x1740 x2466))
(assert (x1740 x3708))
(assert (= (x2094 (x3614 64 x1856 (ite (= 0 x1132) x2937 (ite (>= 32 x1132) x2102 (ite (<= x1132 64) x3958 (ite (>= 96 x1132) x1380 (ite (<= x1132 128) x529 (ite (<= x1132 160) x2871 (ite (>= 192 x1132) x465 (ite (<= x1132 224) x2624 x111)))))))))) 64))
(assert (x1740 x1954))
(assert (x1740 x1970))
(assert (x1740 x2536))
(assert (= x2210 (and x266 x2050)))
(assert (< (x3614 64 x1323 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x4453))
(assert (x1740 x2384))
(assert (x1740 x3245))
(assert (x1740 x3865))
(assert (x1740 x3123))
(assert (x1740 x1342))
(assert (< (x3614 64 x2796 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2019 (x3614 64 x3891 36)) x3891))
(assert (=> (<= x1850 10000) (= 0 (x4391 x1850))))
(assert (not (x105 (x3614 64 x4284 6))))
(assert (= (x2019 (x4438 x2006 x566 x2063 x287)) x566))
(assert (x1740 x4368))
(assert (x1740 x3861))
(assert (x1740 x92))
(assert (< (x4438 x722 x2191 x2213 x148) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x304 x4370))
(assert (= x2128 (=> (and (= x2680 (x154 x3542)) (= (= 0 x2680) x106)) (and (=> (not x106) x4135) (=> (and x106 (and (= x3130 0) (= true x3248) (= false x3018))) x3120)))))
(assert (= (=> (= (= x4218 0) x3833) (and (=> (and (and (= (x3686 x1752) x406) (= (x3686 x3591) x4489) (<= 1 x2506) (= x1153 (x4139 128)) (= 160 x2066) (= x1335 (and x102 x4470)) (= (< (+ x406 x1153) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x102) (= (>= x4489 x1153) x4470) (= (x154 x1752) x2506)) (not x3833)) (and (=> (and (and (= 0 x1423) (= x2856 x3647) (= x426 x23) (= x3201 x4441) (= x1752 x2458) (= x4064 x3378) (= x3954 0) (= x975 x4012) (= x1127 x791) (= x3841 x533) (= x2342 x3934) (= x484 x2030) (= x2319 x1036) (= x3794 x2551) (= x4372 x1116) (= x1133 x3542)) (not x1335)) x63) (=> (and (and (= (x3686 x3591) x2365) (= (x4198 x1752) x1168) (< (+ x1153 x1168) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1013 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x812 x1013) (= x3206 (= x3968 x1752)) (>= x1013 0) (= (+ x1153 x1168) x1013) (= (- x2365 x1153) x4342)) x1335) (and (=> (and (not x3206) (and (= false x2341) (= x3591 x2227) (= 36 x2483) (>= 1461501637330902918203684832716283019655932542975 x1752) (= x199 (x154 x2774)) (>= x1752 1) (<= x759 127) (= x2774 x1752) (= x4030 false) (= x3995 1341992515) (<= x759 127) (<= 1 x199) (= true x107) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x751))) (and (=> (and (not x107) (and (= x3051 false) (= 0 x3130) (= true x2772))) x3120) (=> (and x107 (= x2396 (= x3591 x3542))) (and (=> (and (and (= x4407 false) (= true x2994) (= x3130 0)) (not x2396)) x3120) (=> (and x2396 (and (= x621 (= x3201 255)) (>= 255 x3201))) (and (=> (and (and (= x1461 (= 0 x4256)) (= (x1329 255 x635) x4284) (= (x1329 255 x635) x2161) (= (+ x3201 1) x635) (= (x3614 64 x3201 36) x2954) (= x4256 (x2653 x2954))) (not x621)) (and (=> (and x1461 (= x1326 (= 255 x4284))) (and (=> (and (and (= (+ 1 x4284) x3889) (= x2796 (x1329 255 x3889)) (<= x3263 1461501637330902918203684832716283019655932542975) (= (x3614 64 x4284 2) x3652) (= x3269 (= 255 x2796)) (= (x2510 x3652) x3263) (= x330 (x1329 255 x3889))) (not x1326)) (and (=> (and (and (= (+ x2796 1) x1238) (<= x1819 65535) (= x1708 (x1329 255 x1238)) (= (= 255 x1708) x1005) (= (x1329 255 x1238) x836) (= (x3614 64 x2796 6) x3650) (= x1819 (x3543 x3650))) (not x3269)) (and (=> x1005 x3283) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x645) (= (+ x1708 1) x1745) (= x4161 (= x3764 255)) (= (x3614 64 x1708 2) x3478) (= (x1329 255 x1745) x2499) (= x645 (x2510 x3478)) (= (x1329 255 x1745) x3764)) (not x1005)) (and (=> (and (not x4161) (and (= (x1329 255 x1984) x327) (= (x3614 64 x3764 36) x2036) (= (x2653 x2036) x4250) (= x918 (= 0 x830)) (= (+ x3764 1) x1984) (= (x154 x3542) x830) (= (x1329 255 x1984) x591) (= x3883 128))) (and (=> (and x918 (and (= x3657 true) (= 0 x3130) (= false x1121))) x3120) (=> (and (and (= x2750 x645) (= (x154 x3591) x424) (= x1540 false) (= x298 false) (>= x424 1) (>= 127 x2928) (= x3957 102788308552044517260959567728648622381392053106279845986800620074717893623808) (= 3812630263 x2757) (= x3047 x3263) (>= 1461501637330902918203684832716283019655932542975 x3794) (= (= x3794 x2774) x1825) (= x4197 x1819) (>= 127 x2928) (= x577 132) (= x4250 x2524)) (not x918)) (and (=> (and (and (= false x1569) (= x147 100) (= x376 true)) (not x1825)) x3184) (=> (and x1825 (= x1548 (> 100000 x4250))) (and (=> (and (and (= x3600 true) (= false x1041) (= x147 4)) x1548) x3184) (=> (and (and (= x466 x117) (= x3542 x3941) (= x1854 x2030) (= x4542 x469) (= x2713 0) (= x426 x1368) (= x4496 x3794) (= x735 (x2510 x3652)) (= x1550 x4012) (= x4090 x2525) (= x3841 x3014) (= x262 x4064) (= x3347 x591) (= (x3543 x3650) x469) (= (x2653 x2036) x4090) (= x3934 x2879) (= (x2510 x3478) x466) (= x3691 x2856) (= 1 x2657) (= x735 x3475)) (not x1548)) x3805))))))) (=> x4161 x553))))) (=> x3269 x2751))) (=> x1326 x3219))) (=> (and (= x937 (= 1 x4256)) (not x1461)) (and (=> (and x937 (= (= 255 x4284) x1726)) (and (=> x1726 x3219) (=> (and (and (= x2495 (x3543 x2190)) (= x1862 (= x432 255)) (= (x1329 255 x3797) x432) (= (x3614 64 x4284 6) x2190) (= x772 (x1329 255 x3797)) (= x3797 (+ 1 x4284)) (>= 65535 x2495)) (not x1726)) (and (=> x1862 x3283) (=> (and (not x1862) (and (= (ite (> x2323 0) x3021 (x1329 127 x3021)) x4163) (= x2323 (x1329 1 x4064)) (= (div x4064 2) x3021) (= x1910 (< 0 x1122)) (= x3737 (x3614 64 x432 12)) (= (x1329 255 x3416) x1802) (= (+ 1 x432) x3416) (= (x1329 255 x3416) x1095) (= x1122 (x4315 (- x2323 (mod (ite (> 32 x4163) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1048 (x3071 x3737)) (<= x1048 18446744073709551615))) (and (=> (and (and (= (= x1303 0) x746) (= (x1329 1 x4064) x1303)) x1910) (and (=> (and (= (< 0 x4163) x1727) (not x746)) (and (=> x1727 x166) (=> (not x1727) x2374))) (=> (and x746 (and (= x2593 (* 32 (ite (not (= 0 x4163)) 1 0))) (or (= x2593 0) (= 32 x2593)))) x3196))) (=> (not x1910) x1043))))))) (=> (and (not x937) (= x2111 (= 2 x4256))) (and (=> (and (= (= x4284 255) x455) x2111) (and (=> x455 x3219) (=> (and (and (= x3411 (x1329 255 x246)) (= (+ x4284 1) x246) (= (= 255 x3411) x1349) (= (x1329 255 x246) x1949) (= (x3543 x410) x4257) (= x410 (x3614 64 x4284 6)) (<= x4257 65535)) (not x455)) (and (=> (and (not x1349) (and (= x1138 (x3071 x3398)) (= x1900 (+ 1 x3411)) (= x3608 (x1329 255 x1900)) (= (div x4064 2) x2107) (= (x1329 1 x4064) x603) (>= 18446744073709551615 x1138) (= (ite (< 0 x603) x2107 (x1329 127 x2107)) x627) (= x3865 (x1329 255 x1900)) (= (> x644 0) x785) (= (x4315 (- x603 (mod (ite (< x627 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x644) (= (x3614 64 x3411 12) x3398))) (and (=> (not x785) x1043) (=> (and (and (= x2985 (= 0 x682)) (= x682 (x1329 1 x4064))) x785) (and (=> (and (= x1859 (< 0 x627)) (not x2985)) (and (=> (not x1859) x2590) (=> x1859 x3500))) (=> (and x2985 (and (or (= x2273 0) (= x2273 32)) (= x2273 (* (ite (not (= x627 0)) 1 0) 32)))) x3154))))) (=> x1349 x3283))))) (=> (and (not x2111) (= x1969 (= x4256 3))) (and (=> (and (not x1969) (= x4506 (= x4256 4))) (and (=> (and (= (= x4284 255) x652) x4506) (and (=> x652 x3219) (=> (and (not x652) (and (= x840 (x2653 x2370)) (= (x3614 64 x4284 36) x2370) (= (+ x4284 1) x1836) (= x3763 (x1329 255 x1836)) (= x2720 (= x3229 255)) (= (x1329 255 x1836) x3229))) (and (=> (and (and (= x3383 (= 255 x131)) (= x1293 (x1205 x4063)) (= (+ 1 x3229) x4435) (= (x1329 255 x4435) x131) (= x4063 (x3614 64 x3229 100)) (= (x1329 255 x4435) x1985)) (not x2720)) (and (=> x3383 x3283) (=> (and (not x3383) (and (= x339 (x2833 x3542)) (= (< (+ x840 x339) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1589) (= x575 (>= x4314 x840)) (= (x1329 255 x1922) x1588) (= (+ 1 x131) x1922) (= (x2833 x2774) x4314) (= x2968 (x1329 255 x1922)) (= (x3614 64 x131 36) x1290) (= x2398 (x2653 x1290)) (= (and x575 x1589) x3341))) (and (=> x3341 x3234) (=> (and (and (= x3130 0) (= x2894 true) (= x1377 false)) (not x3341)) x3120))))) (=> x2720 x2751))))) (=> (and (not x4506) (= x2110 (= x4256 5))) (and (=> (and x2110 (= (= 255 x4284) x2885)) (and (=> x2885 x3219) (=> (and (not x2885) (and (= x2578 (x2653 x1907)) (= (x1329 255 x4296) x1998) (= x4296 (+ 1 x4284)) (= x1907 (x3614 64 x4284 36)) (= x274 (= x1858 255)) (= (x1329 255 x4296) x1858))) (and (=> (and (not x274) (and (= (= 255 x3202) x3054) (= (x1329 255 x4405) x3202) (= x4405 (+ x1858 1)) (= (x1329 255 x4405) x251) (= x819 (x3543 x190)) (<= x819 65535) (= x190 (x3614 64 x1858 6)))) (and (=> (and (and (>= 18446744073709551615 x1421) (= (x1329 255 x2282) x3702) (= x1607 (x1329 1 x4064)) (= x454 (> x3313 0)) (= x835 (ite (< 0 x1607) x1831 (x1329 127 x1831))) (= (x1329 255 x2282) x2045) (= x3313 (x4315 (- x1607 (mod (ite (< x835 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x3654 (x3614 64 x3202 12)) (= (+ x3202 1) x2282) (= x1421 (x3071 x3654)) (= x1831 (div x4064 2))) (not x3054)) (and (=> (not x454) x1055) (=> (and x454 (and (= (= 0 x3315) x1700) (= (x1329 1 x4064) x3315))) (and (=> (and (and (= (< 0 x835) x3397) (= x4310 (x3096 32 103))) (not x1700)) (and (=> (and (not x3397) (= x726 0)) x344) (=> x3397 x3179))) (=> (and x1700 (and (= (* (ite (not (= x835 0)) 1 0) 32) x924) (= (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639680 x4064) x2995) (or (= x924 32) (= 0 x924)) (= (+ x924 292) x3890))) x3218))))) (=> x3054 x553))) (=> x274 x2751))))) (=> (and (= (= x4256 6) x2840) (not x2110)) (and (=> (and x2840 (= x1225 (= x4284 255))) (and (=> (and (not x1225) (and (= x4224 (+ x4284 1)) (= x3811 (x3614 64 x4284 36)) (= x2044 (x2653 x3811)) (= (= x1455 255) x2443) (= x1455 (x1329 255 x4224)) (= x4066 (x1329 255 x4224)))) (and (=> (and (not x2443) (and (= (x1329 255 x1619) x1081) (= (x1329 255 x1619) x1842) (= (x3614 64 x1455 36) x2811) (= x1619 (+ 1 x1455)) (= (= x1081 255) x718) (= x3437 (x2653 x2811)))) (and (=> (and (not x718) (and (= x4165 (x2653 x2485)) (= x4439 (+ 1 x1081)) (= (x1329 255 x4439) x4251) (= x473 (x1329 255 x4439)) (= (= 255 x4251) x1975) (= (x3614 64 x1081 36) x2485))) (and (=> x1975 x553) (=> (and (and (= x2519 (x3614 64 x4251 36)) (= x1716 128) (= x3199 (x2653 x2519)) (= (x1329 255 x4202) x4183) (= (x154 x3542) x1830) (= (x1329 255 x4202) x3124) (= x898 (= 0 x1830)) (= (+ 1 x4251) x4202)) (not x1975)) (and (=> (and x898 (and (= true x1415) (= x4312 false) (= x3130 0))) x3120) (=> (and (not x898) (and (or (and x4162 (and (<= x1101 127) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1347) (= x3199 x766) (= 2 x3216) (= true x2782) (= x2769 100) (= x99 x4165) (= (x315 x2774) x4275) (>= x1347 0) (= x532 false) (= x1709 x99) (= x2225 486791245) (= x3633 100) (< (+ x2044 x4275) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3656 x655) (= x1347 x3740) (= x1347 (+ x2044 x4275)) (= x3808 13123866003235860548192500634644069355060014211693331341089165407210616913920) (= x783 (x4403 x3542)) (<= x1101 127) (= x1816 (x2833 x2774)) (= x869 (- x1816 x2044)) (= x490 false) (= x1814 x1344) (<= x1344 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2044 x783)) (= x1344 (+ x783 x2044)) (= x766 x3005) (= false x752) (= (x3828 x3542) x923) (<= 1 x1628) (= (x154 x3591) x1628) (>= x1344 0) (= x3656 x3437) (= (x1329 255 x4202) x693) (= x3661 (- x923 x2044)))) (and (= 0 x2769) (not x4162))) (and (= (<= x2044 x1829) x2898) (= x1829 (x2833 x2774)) (= x4162 (and x2898 x1428)) (= x3867 (x2833 x3542)) (= x1428 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2044 x3867)))))) x3848))))) (=> x718 x3283))) (=> x2443 x2751))) (=> x1225 x3219))) (=> (and (not x2840) (= (= 7 x4256) x2338)) (and (=> (and (not x2338) (= x4082 (= x4256 8))) (and (=> (and (= x3809 (= 255 x4284)) x4082) (and (=> (and (not x3809) (and (= x3319 128) (= (+ x4284 1) x2967) (= (x2653 x1430) x2823) (= x4226 (= x3573 0)) (= (x3614 64 x4284 36) x1430) (= (x1329 255 x2967) x3037) (= (x154 x3542) x3573) (= x1886 (x1329 255 x2967)))) (and (=> (and x4226 (and (= 0 x3130) (= true x428) (= false x1030))) x3120) (=> (and (and (= x729 (= x2774 x3794)) (= 1313998243 x1840) (<= x4141 127) (= x4125 36) (<= x4141 127) (= (x154 x3591) x1613) (= false x2992) (= false x1345) (= x134 x2823) (>= 1461501637330902918203684832716283019655932542975 x3794) (= x1693 35425322552009646506518338594398286811668114190755561836384294568426616127488) (>= x1613 1)) (not x4226)) (and (=> (and x729 (= (< x2823 100000) x421)) (and (=> (and (not x421) (and (= x3542 x3645) (= 1 x2125) (= x3037 x3525) (= x1787 x1036) (= x665 x1752) (= x374 x2030) (= x914 x2433) (= x698 x3934) (= x4233 x426) (= x4012 x3082) (= x4041 x3841) (= x3939 0) (= (x2653 x1430) x914) (= x3615 x2856) (= x2302 x3794) (= x4064 x2548) (= x3271 x1116))) x4267) (=> (and (and (= x3432 true) (= false x1103) (= 4 x3447)) x421) x451))) (=> (and (and (= x139 true) (= x3447 100) (= false x4168)) (not x729)) x451))))) (=> x3809 x3219))) (=> (and (not x4082) (and (= x1662 x3794) (= x3590 x3841) (= x447 x2030) (= x426 x3072) (= x4064 x2952) (= x1752 x3153) (= x1116 x4424) (= x4012 x4453) (= x4119 x4284) (= x2856 x3155) (= x1036 x745) (= x1578 x3542) (= x4476 x791) (= x3934 x1554))) x271))) (=> (and x2338 (= (= 255 x4284) x171)) (and (=> (and (not x171) (and (= x1705 128) (= x3293 (x154 x3542)) (= x954 (x1329 255 x2829)) (<= x4164 1461501637330902918203684832716283019655932542975) (= (+ x4284 1) x2829) (= (x2510 x3009) x4164) (= (= 0 x3293) x2914) (= (x1329 255 x2829) x4133) (= x3009 (x3614 64 x4284 2)))) (and (=> (and x2914 (and (= true x1215) (= x1739 false) (= 0 x3130))) x3120) (=> (and (not x2914) (and (= x2269 false) (= x201 2770781680) (= 36 x2171) (= x1855 false) (= x2346 (= x3794 x2774)) (= 74700126319118050543342327103397598470879858733489597287354029460387927162880 x1902) (>= 127 x4515) (= x4164 x822) (>= 1461501637330902918203684832716283019655932542975 x3794) (= (x154 x3591) x475) (<= x4515 127) (>= x475 1))) (and (=> (and (and (= x1070 100) (= x900 false) (= x2610 true)) (not x2346)) x1010) (=> (and (and (= (> x4109 0) x1763) (= x4109 (x2833 x3591))) x2346) (and (=> (and (and (= x2032 x4133) (= x3670 x426) (= x216 x3934) (= x524 x4012) (= x3542 x3106) (= x4401 x4064) (= x2856 x383)) (not x1763)) x676) (=> (and (and (= x224 (x2833 x3591)) (= x615 (x2833 x4164)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4109 x615)) x3556) (= x1939 128) (= x3259 (and x3556 x2605)) (= (>= x224 x4109) x2605)) x1763) (and (=> (and (and (or (and x2737 (and (= x551 x483) (= x3355 (x3998 x3591)) (= x136 x4236) (= x1860 x268) (= x1431 x685) x2965 (= (x3998 x4164) x2514) x2361 (>= 4294967295 x1891) (= x811 x3537) (= (= (x3940 x4164) x2514) x2965) (= (>= (x3940 x3591) x3355) x2361) (= x2932 x2251) (= x1643 x211))) (and (and (= x211 x4064) (= x2251 x426) (= x3537 x3934) (= x268 x2856) (= x136 x3542) (= x4133 x483) (= x4012 x685)) (not x2737))) (and (= x2756 (x1484 x4164)) (>= x9 0) (= x9 (+ x4109 x2756)) (= (> x1573 0) x2737) (= x669 (x2833 x3591)) (= x2148 (- x669 x4109)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2756 x4109)) (= x9 x2447) (<= x9 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x3259) x1091) (=> (and (and (= x1501 x4133) (= x2577 x426) (= x2856 x223) (= 0 x4373) (= x4012 x829) (= 0 x2403) (= x4064 x1319) (= x3973 x3542) (= x3934 x3284)) (not x3259)) x518))))))))) (=> x171 x3219))))))))))) (=> (and x1969 (= x3680 (= x4284 255))) (and (=> (and (and (= x1323 (x1329 255 x2597)) (= x1627 (x3614 64 x4284 36)) (= (x1329 255 x2597) x2064) (= (= 255 x1323) x3638) (= (x2653 x1627) x723) (= (+ x4284 1) x2597)) (not x3680)) (and (=> (and (and (and (= x1365 (x154 x3542)) (= x1529 128) (= (x3614 64 x1323 100) x4016) (= (+ 1 x1323) x3366) (= (x1205 x4016) x405) (= x2579 (x1329 255 x3366)) (= x4093 (x1329 255 x3366)) (= (= x1365 0) x1567)) (or (and (and (= x3130 100) (= x417 3957931183) (= 68 x839) (= x4422 false) (= x3100 true) (= x723 x1266) (= false x382) (<= x4143 127) (= (x1329 255 x3366) x1666) (= false x673) (= x2998 false) (= x2149 x405) (= x3223 106705613605932439001713296114446454776331749937047859905631657259250407702528) (<= x4143 127) (>= x407 1) (= 2 x1687) (= true x1274) (= x407 (x154 x3591))) (not x1567)) (and x1567 (and (= x3257 false) (= x3130 0) (= x1412 true))))) (not x3638)) x3120) (=> x3638 x2751))) (=> x3680 x3219))))))))))) (=> (and (and (= 36 x3130) (= x2101 false) (= x2184 true)) x621) x3120))))))) (=> (and (and (= true x3658) (= x2564 (x154 x3968)) (>= 127 x3012) (= 1341992515 x2076) (= x3591 x843) (>= x2564 1) (= x747 36) (<= x3012 127) (= 36180046632115354981904271164172418022085455641023445553456023893925156618240 x2857) (= false x3114) (= false x1334)) x3206) (and (=> (and (not x3658) (and (= x1464 0) (= true x2452) (= false x2))) x1722) (=> (and (and (= (x520 x2703) x4531) (= (x3614 64 x3591 1) x2703) (= x4333 (x3626 (+ x4531 x1153))) (= x883 (> x4531 x4333))) x3658) (and (=> (and x883 (and (= x925 true) (= x1464 36) (= false x296))) x1722) (=> (and (not x883) (and (= x1183 1) (= x3841 x3717) (= x791 x973) (= x3934 x1720) (= x1315 x2030) (= x1116 x2560) (= 0 x1330) (= x2274 x3542) (= x1338 x4012) (= x3794 x1226) (= x2856 x3703) (= x1828 x4064) (= x1752 x3026) (= x53 x426) (= x3201 x2143) (= x2067 x1036))) x3798))))))))) (=> (and x3833 (and (= false x2085) (= x2271 x3739) (= true x599))) x3602))) x3235))
(assert (= x1233 (and x2502 x3309)))
(assert (=> (>= 10000 x1285) (= (x4391 x1285) 0)))
(assert (x1740 x1211))
(assert (x105 21250608054068894920771655176311299370521669075471658173068242729727453822976))
(assert (x1740 x4252))
(assert (x105 310283853))
(assert (= x2658 (and x3022 x4343)))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1740 x3460))
(assert (= x3087 (and (not x2117) x2265)))
(assert (x1740 x351))
(assert (= x519 (=> (= x3428 (not (< 32 x4362))) (and x3428 x623))))
(assert (x1740 x3203))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3821 36)))
(assert (x1740 x3756))
(assert (x1740 x99))
(assert (x1740 x3550))
(assert (x1740 x3578))
(assert (x1740 x216))
(assert (= x3395 (and x810 x2200)))
(assert (x1740 x3877))
(assert (= (x2094 (x3096 x3061 x47)) x3061))
(assert (< 10000 (x3121 x1954 x3530 x79 x4473 x2607)))
(assert (= 64 (x2094 (x3614 64 x819 7))))
(assert (=> (<= x2211 10000) (= (x4391 x2211) 0)))
(assert (= x4395 x3461))
(assert (< 10000 (x1465 0)))
(assert (= (=> (and (= false x3267) (= true x2312) (= x3130 36)) x3120) x3283))
(assert (= x796 (and (not x274) x2137)))
(assert (= x2006 (x2094 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (= (and x808 (not x1899)) x3413))
(assert (= (and x3534 x2343) x3042))
(assert (x1740 x3948))
(assert (= x10 (and x90 x3574)))
(assert (x1740 x3905))
(assert (x105 486791245))
(assert (x1740 x1612))
(assert (x105 8365236128558009046904410293209581292053118695343348878262597880337030709248))
(assert (= x2230 (x353 (x3121 x2006 x3687 x1342 x2230 x3944))))
(assert (x1740 x2949))
(assert (= (x2789 (x3121 x1966 x933 x3210 x4230 x4404)) x4404))
(assert (x1740 x1555))
(assert (= x2400 (and x2439 (not x1029))))
(assert (x1740 x374))
(assert (=> (<= x2023 10000) (= (x4391 x2023) 0)))
(assert (not (x105 (x3614 64 x3821 36))))
(assert (= x4389 (x353 (x4438 x2268 x1928 x3123 x4389))))
(assert (x2854 x927))
(assert (=> (>= 10000 x477) (= (x4391 x477) 0)))
(assert (=> (>= 10000 x3493) (= 0 (x4391 x3493))))
(assert (x1740 x2670))
(assert (x1740 x1683))
(assert (= x4215 (and x971 (not x1763))))
(assert (x1740 x497))
(assert (x1740 x151))
(assert (x1740 x54))
(assert (x1740 x3513))
(assert (=> (<= x1999 10000) (= 0 (x4391 x1999))))
(assert (x2854 x1890))
(assert (x2854 x2850))
(assert (= (=> (and (= x1024 true) (= 0 x879) (= false x2866)) x1761) x3189))
(assert (= (and x3747 (not x3259)) x1069))
(assert (x1740 x2005))
(assert (=> (<= x3733 10000) (= 0 (x4391 x3733))))
(assert (x1740 x1496))
(assert (= (x4391 (x3096 32 103)) (x3096 32 103)))
(assert (= x1167 (x2019 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744))))
(assert (not (x105 (x3614 64 x2559 6))))
(assert (= (and x580 x3697) x3577))
(assert (= x3377 (and x1536 x2333)))
(assert (= (x4391 (x3614 64 x3229 100)) (x3614 64 x3229 100)))
(assert (x1740 x1922))
(assert (= (x2789 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x2189))
(assert (= 0 (x4391 3628442803)))
(assert (x1740 x805))
(assert (= x3884 (or x1069 x2351 x3775)))
(assert (x1740 x483))
(assert (x1740 x566))
(assert (x1740 x34))
(assert (x1740 x3793))
(assert (x1740 x2447))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4438 x4440 x4356 x4069 x2949)))
(assert (= 64 (x2094 (x3614 64 x256 10))))
(assert (x1740 x3388))
(assert (= (x2789 (x3121 x3061 x2005 x2174 x3711 x1357)) x1357))
(assert (=> (>= 10000 x714) (= (x4391 x714) 0)))
(assert (=> (>= 10000 x653) (= 0 (x4391 x653))))
(assert (x1740 x1371))
(assert (x1740 x3365))
(assert (x1740 x3973))
(assert (x1740 x3967))
(assert (=> (<= x2320 10000) (= (x4391 x2320) 0)))
(assert (= 64 (x2094 (x3614 64 x4284 2))))
(assert (x1740 x2289))
(assert (= x4440 (x2094 (x3614 x4440 x983 x1770))))
(assert (= x2006 (x2094 (x4438 x2006 x566 x2063 x287))))
(assert (= x3417 (and x640 (not x171))))
(assert (= x3509 (=> (and (= x3324 x1196) (= (x1329 255 x4106) x3324) (= 0 x2297) (= x1593 x4517) (= x4039 x4204) (= x4039 x3647) (= x1429 2)) x3514)))
(assert (= (and x2334 (not x3638)) x4060))
(assert (x1740 x648))
(assert (= (x2094 (x3096 x2268 x1273)) x2268))
(assert (> (x3121 x3061 x2005 x2174 x3711 x1357) 10000))
(assert (x1740 x723))
(assert (x1592 x426))
(assert (= x2355 (and x2152 (not x2270))))
(assert (x1740 x689))
(assert (x1740 x2030))
(assert (= x640 (and x2338 x1198)))
(assert (x692 x366))
(assert (x1740 x2344))
(assert (=> (<= x337 10000) (= 0 (x4391 x337))))
(assert (= x1273 (x2019 (x3096 x2268 x1273))))
(assert (= (=> (and (= x4003 (x154 x1133)) (= x427 (= x4003 0))) (and (=> (not x427) x3019) (=> (and (and (= false x2008) (= true x3613) (= 0 x4423)) x427) x26))) x1715))
(assert (x1740 x1620))
(assert (= (x3614 64 x2602 3) (x4391 (x3614 64 x2602 3))))
(assert (x1740 x791))
(assert (x105 1341992515))
(assert (= x1942 (and x2201 x3039)))
(assert (=> (<= x1876 10000) (= 0 (x4391 x1876))))
(assert (= x2006 (x2094 (x3614 x2006 x1506 x2079))))
(assert (= (x353 (x4438 x742 x2285 x1658 x458)) x458))
(assert (=> (<= x111 10000) (= 0 (x4391 x111))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x2559 6)))
(assert (x1740 x1116))
(assert (x1740 x4233))
(assert (x1740 x2881))
(assert (= x1140 x25))
(assert (=> (<= x256 10000) (= (x4391 x256) 0)))
(assert (x692 x3984))
(assert (= x3878 (and (not x3054) x796)))
(assert (x1740 x1089))
(assert (= (x2094 (x3096 x1806 x904)) x1806))
(assert (=> (<= x1454 10000) (= 0 (x4391 x1454))))
(assert (x2854 x4370))
(assert (x1740 x524))
(assert (= (and x731 (not x372)) x592))
(assert (x1740 x3666))
(assert (x1740 x1900))
(assert (= (and x195 x2978) x1384))
(assert (x1740 x2823))
(assert (x2348 x635))
(assert (x1740 x3390))
(assert (not (x105 (x2749 x736 x2211 x1126 x1110 x163 x4375))))
(assert (= (x2019 (x3096 x1966 x1011)) x1011))
(assert (= x1603 (or (and x307 (not x1910)) (and x2587 (not x3232)) (and (not x785) x2504) (and (not x1000) x3689))))
(assert (= (x2019 (x3614 64 x647 7)) x647))
(assert (> (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850) 10000))
(assert (= 36 (x4185 (x3614 64 x3821 36))))
(assert (x1740 x2039))
(assert (not (x105 (x2749 x742 x54 x1570 x1753 x3564 x1908))))
(assert (= (and x2612 x1898) x1223))
(assert (x1740 x2977))
(assert (=> (<= x742 10000) (= 0 (x4391 x742))))
(assert (=> (>= 10000 x1455) (= 0 (x4391 x1455))))
(assert (= x2668 (and (not x2396) x2719)))
(assert (=> (<= x3193 10000) (= (x4391 x3193) 0)))
(assert (x1740 x732))
(assert (= (x2019 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) x784))
(assert (x1740 x1831))
(assert (x1740 x1836))
(assert (= x2983 (x4185 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (< (x3614 64 x1944 100) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x3824))
(assert (x1740 x3548))
(assert (x2854 x513))
(assert (=> (>= 10000 x2944) (= (x4391 x2944) 0)))
(assert (x1740 x2489))
(assert (x1740 x3941))
(assert (x2348 x4439))
(assert (x1740 x710))
(assert (= x3519 (and x3242 (not x3148))))
(assert (= (and x1355 x959) x1046))
(assert (= x2432 (and x1052 x1437)))
(assert (x1740 x784))
(assert (x1740 x1261))
(assert (= x54 (x2019 (x2749 x742 x54 x1570 x1753 x3564 x1908))))
(assert (= (x353 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x612))
(assert (= x2830 (=> (and (= (x4315 (- x907 128)) x2006) (= x907 (x3626 (+ x3679 128))) (= x3906 (>= 224 x2006))) (and (=> (and (= x3944 (x4262 224)) (= (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799) x4419) (= x4253 (x1465 0)) (= (x4262 192) x287) (= (x4262 224) x2320) (= x2079 (x4262 160)) (= (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572) x1280) (= x4457 (x2749 x2006 x1791 x108 x4406 x2320 x3533)) (= (x4262 192) x2289) (= (x4262 128) x1020) (= x566 (x4262 128)) (= (x4262 288) x3128) (= (x4262 128) x1506) (= x2900 (x4262 256)) (= x2572 (x4262 320)) (= x212 (x4262 192)) (= x2230 (x4262 192)) (= (x4262 256) x2386) (= (x4262 160) x3980) (= (x4262 288) x2799) (= (x4262 160) x108) (= (x4262 224) x3730) (= x2480 (x4262 128)) (= x3745 (x4262 224)) (= x542 (x3096 x2006 x124)) (= x4406 (x4262 192)) (= x3725 (x4262 160)) (= (x4438 x2006 x566 x2063 x287) x1201) (= x802 (x3614 x2006 x1506 x2079)) (= x1791 (x4262 128)) (= x266 (= (ite (= x2006 0) x4253 (ite (>= 32 x2006) x542 (ite (>= 64 x2006) x802 (ite (<= x2006 96) x1201 (ite (<= x2006 128) x1509 (ite (>= 160 x2006) x4457 (ite (>= 192 x2006) x4419 (ite (>= 224 x2006) x1280 x2672)))))))) x3086)) (= x1509 (x3121 x2006 x3687 x1342 x2230 x3944)) (= (x4262 160) x2063) (= (x4262 128) x124) (= (x4262 128) x3687) (= x3533 (x4262 256)) (= x1342 (x4262 160))) (and (=> x266 x3688) (=> (and (not x266) (and (= 132 x2325) (= x123 false) (= true x4521))) x1268))) x3906))))
(assert (x1740 x3040))
(assert (x1740 x615))
(assert (= (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990) (x4391 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (= x2878 (x4185 (x3121 x1847 x1714 x2878 x1454 x805))))
(assert (= x624 (x353 (x2749 x1847 x1783 x384 x624 x850 x2242))))
(assert (x2854 x1433))
(assert (=> (<= x3606 10000) (= (x4391 x3606) 0)))
(assert (x105 35425322552009646506518338594398286811668114190755561836384294568426616127488))
(assert (x1740 x1856))
(assert (x1740 x2960))
(assert (= x2320 (x2789 (x2749 x2006 x1791 x108 x4406 x2320 x3533))))
(assert (= x3775 (and x1076 (not x1502))))
(assert (= x2118 (and x3482 x3924)))
(assert (= x4284 (x2019 (x3614 64 x4284 2))))
(assert (=> (>= 10000 x2625) (= (x4391 x2625) 0)))
(assert (= (=> (= (+ x3773 292) x3746) x2817) x2418))
(assert (x1740 x3286))
(assert (x1740 x4102))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)))
(assert (=> (>= 10000 x654) (= (x4391 x654) 0)))
(assert (x1740 x3353))
(assert (x1740 x2969))
(assert (< (x2749 x1806 x3606 x1022 x1584 x1469 x2466) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2242))
(assert (x1740 x908))
(assert (= (and x957 x1558) x1894))
(assert (x1740 x4071))
(assert (not (x105 (x3614 64 x4251 36))))
(assert (= (x3096 x742 x1712) (x4391 (x3096 x742 x1712))))
(assert (x1740 x487))
(assert (=> (<= x458 10000) (= (x4391 x458) 0)))
(assert (x2348 x1366))
(assert (x1740 x758))
(assert (= (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639807) 0))
(assert (=> (<= x2744 10000) (= 0 (x4391 x2744))))
(assert (x1740 x95))
(assert (x1740 x1814))
(assert (= x1708 (x2019 (x3614 64 x1708 2))))
(assert (= x1421 (x2019 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (<= x2268 64) x2239 (ite (>= 96 x2268) x2777 (ite (<= x2268 128) x2219 (ite (>= 160 x2268) x3031 (ite (>= 192 x2268) x2515 (ite (>= 224 x2268) x1359 x3236))))))))))))
(assert (=> (>= 10000 x1626) (= 0 (x4391 x1626))))
(assert (x83 x4064))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x742 x1712)))
(assert (x1740 x4117))
(assert (= x1847 (x2094 (x3096 x1847 x1251))))
(assert (= (and (not x3291) x4076) x1346))
(assert (= (and x400 x2566) x731))
(assert (x1740 x3892))
(assert (= (x4391 x750) (x4391 (+ 1 x750))))
(assert (= x2892 (and x1233 x3649)))
(assert (=> (<= x2715 10000) (= (x4391 x2715) 0)))
(assert (= x983 (x2019 (x3614 x4440 x983 x1770))))
(assert (x1740 x4378))
(assert (x1740 x81))
(assert (=> (<= x1772 10000) (= (x4391 x1772) 0)))
(assert (x1740 x3274))
(assert (x1740 x1254))
(assert (= (and x3976 x695) x3433))
(assert (x1740 x2781))
(assert (x1740 x1316))
(assert (=> (<= x2980 10000) (= (x4391 x2980) 0)))
(assert (< (x3121 x1806 x892 x84 x1640 x1925) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2094 (x3614 64 x1944 100)) 64))
(assert (=> (>= 10000 x911) (= (x4391 x911) 0)))
(assert (x1740 x2705))
(assert (x83 x2456))
(assert (= x3530 (x2019 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (= x892 (x2019 (x3121 x1806 x892 x84 x1640 x1925))))
(assert (=> (>= 10000 x1710) (= (x4391 x1710) 0)))
(assert (= x1792 (and x454 x3878)))
(assert (= (x3614 64 x1856 (ite (= 0 x1847) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (<= x1847 96) x240 (ite (>= 128 x1847) x2899 (ite (>= 160 x1847) x1119 (ite (<= x1847 192) x1235 (ite (<= x1847 224) x172 x324))))))))) (x4391 (x3614 64 x1856 (ite (= x1847 0) x408 (ite (<= x1847 32) x2946 (ite (>= 64 x1847) x1561 (ite (>= 96 x1847) x240 (ite (>= 128 x1847) x2899 (ite (>= 160 x1847) x1119 (ite (>= 192 x1847) x1235 (ite (<= x1847 224) x172 x324))))))))))))
(assert (x1740 x299))
(assert (=> (>= 10000 x2254) (= (x4391 x2254) 0)))
(assert (x1740 x4300))
(assert (= (x4185 (x4438 x1954 x3524 x1389 x2377)) x1389))
(assert (< (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x264))
(assert (> (x4438 x736 x1007 x1021 x727) 10000))
(assert (= (x4185 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x4538))
(assert (x1740 x3190))
(assert (= (x2094 (x4438 x3061 x144 x2535 x415)) x3061))
(assert (x1740 x4216))
(assert (> (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077) 10000))
(assert (= (x4185 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)) x1981))
(assert (=> (<= x449 10000) (= 0 (x4391 x449))))
(assert (not (x105 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (x1740 x2389))
(assert (= x805 (x2789 (x3121 x1847 x1714 x2878 x1454 x805))))
(assert (x1740 x1584))
(assert (x1740 x4214))
(assert (x1740 x3957))
(assert (x1740 x2268))
(assert (not (x105 (x3614 64 x1313 36))))
(assert (=> (<= x1264 10000) (= 0 (x4391 x1264))))
(assert (x1740 x1640))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x432 12)))
(assert (=> (>= 10000 x4048) (= (x4391 x4048) 0)))
(assert (x1740 x2074))
(assert (= x3575 (and x3825 (not x35))))
(assert (= (x2094 (x3614 x2268 x4292 x4285)) x2268))
(assert (x1740 x2313))
(assert (= (x3121 x3122 x3227 x778 x81 x3441) (x4391 (x3121 x3122 x3227 x778 x81 x3441))))
(assert (=> (<= x636 10000) (= 0 (x4391 x636))))
(assert (not (x105 (x4438 x3122 x2306 x1784 x1678))))
(assert (= x2498 (=> (= x1310 (not (< 32 x1220))) (and x4395 x1310))))
(assert (x1740 x846))
(assert (= x1806 (x2094 (x4438 x1806 x4346 x1135 x158))))
(assert (x1740 x4106))
(assert (< 10000 (x3096 x1847 x1251)))
(assert (x1740 x120))
(assert (x1740 x2058))
(assert (=> (<= x3530 10000) (= 0 (x4391 x3530))))
(assert (x1740 x3052))
(assert (< (x3614 64 x2980 (ite (= x1954 0) x3200 (ite (>= 32 x1954) x1090 (ite (<= x1954 64) x2853 (ite (<= x1954 96) x2688 (ite (<= x1954 128) x3252 (ite (<= x1954 160) x3909 (ite (<= x1954 192) x2508 (ite (>= 224 x1954) x4032 x2160))))))))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x4158 10000) (= (x4391 x4158) 0)))
(assert (= x3109 (and (not x3630) x325)))
(assert (= x714 (x353 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (x1740 x703))
(assert (= x33 (x226 (x2749 x1772 x3512 x825 x3882 x1296 x33))))
(assert (=> (>= 10000 x282) (= (x4391 x282) 0)))
(assert (=> (>= 10000 x1925) (= (x4391 x1925) 0)))
(assert (x1740 x2124))
(assert (x1740 x1498))
(assert (x1740 x1748))
(assert (x1740 x2379))
(assert (= (x4185 (x3614 64 x3764 36)) 36))
(assert (x1740 x1784))
(assert (< 10000 (x3121 x1772 x3353 x4071 x2867 x151)))
(assert (> (x4438 x722 x2191 x2213 x148) 10000))
(assert (=> (>= 10000 x496) (= 0 (x4391 x496))))
(assert (= (x226 (x2749 x3122 x2773 x1507 x214 x337 x3756)) x3756))
(assert (= (and x1609 (not x3658)) x643))
(assert (x1740 x1036))
(assert (< (x4438 x3061 x144 x2535 x415) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x4227))
(assert (x1740 x1948))
(assert (=> (<= x1971 10000) (= (x4391 x1971) 0)))
(assert (x1740 x3969))
(assert (x105 3963877391197344453575983046348115674221700746820753546331534351508065746944))
(assert (x1740 x550))
(assert (= (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820) (x4391 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (x1740 x4035))
(assert (= x4346 (x2019 (x4438 x1806 x4346 x1135 x158))))
(assert (x1740 x3601))
(assert (= (and x2016 (not x2737)) x1230))
(assert (= (x2094 (x3614 64 x1421 (ite (= 0 x2313) x2088 (ite (>= 32 x2313) x2987 (ite (<= x2313 64) x823 (ite (>= 96 x2313) x311 (ite (>= 128 x2313) x922 (ite (<= x2313 160) x1565 (ite (<= x2313 192) x2988 (ite (>= 224 x2313) x2034 x326)))))))))) 64))
(assert (not (x105 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (= (x226 (x2749 x722 x2659 x1620 x1289 x950 x3715)) x3715))
(assert (= (x4185 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)) x1166))
(assert (= x151 (x2789 (x3121 x1772 x3353 x4071 x2867 x151))))
(assert (= x3558 (and (not x4335) x3806)))
(assert (= x929 (and x3658 x1609)))
(assert (< 10000 (x3096 x3061 x47)))
(assert (x1740 x2884))
(assert (= x722 (x2094 (x3614 x722 x3055 x471))))
(assert (= (and x4512 (not x861)) x4490))
(assert (= (x4381 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820)) x820))
(assert (=> (<= x1273 10000) (= 0 (x4391 x1273))))
(assert (= x1806 (x2094 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (= (and x4524 x3833) x688))
(assert (= x3231 (and x1052 (not x1437))))
(assert (= x3068 (and (not x718) x700)))
(assert (< 10000 (x3614 64 x1421 (ite (= 0 x2313) x2088 (ite (<= x2313 32) x2987 (ite (<= x2313 64) x823 (ite (>= 96 x2313) x311 (ite (<= x2313 128) x922 (ite (>= 160 x2313) x1565 (ite (>= 192 x2313) x2988 (ite (<= x2313 224) x2034 x326)))))))))))
(assert (x2348 x3708))
(assert (> (x3614 64 x1323 100) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 x3061 x1446 x3936)))
(assert (x1740 x1678))
(assert (x1740 x2659))
(assert (x1740 x204))
(assert (= x2333 (or x62 x1155)))
(assert (not (x105 (x3614 64 x4339 36))))
(assert (x105 65535))
(assert (x1740 x1710))
(assert (= (x353 (x2749 x3122 x2773 x1507 x214 x337 x3756)) x214))
(assert (= (and (not x3649) x1233) x3280))
(assert (> (x3614 x2313 x2406 x2529) 10000))
(assert (x2348 x2967))
(assert (x1740 x4005))
(assert (x2854 x764))
(assert (x1740 x3904))
(assert (< (x3614 64 x647 7) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x968))
(assert (< 10000 (x3096 32 104)))
(assert (x1740 x1732))
(assert (=> (>= 10000 x4538) (= 0 (x4391 x4538))))
(assert (= (x1339 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062)) x1601))
(assert (x1740 x3816))
(assert (x1740 x830))
(assert (= x2939 (x2019 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972))))
(assert (= (x2019 (x4438 x742 x2285 x1658 x458)) x2285))
(assert (= (x4391 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)))
(assert (x1740 x2257))
(assert (=> (>= 10000 x3721) (= 0 (x4391 x3721))))
(assert (= (=> (and (= x3598 (x3626 (+ 96 x4045))) (= x600 (not (> x3612 128))) (= (x753 x3598) x689) (= (x3626 (+ 96 x3185)) x3351)) (and x2353 x600)) x1711))
(assert (= (=> (and (= (not (< 32 x835)) x498) (= (x3476 x4310) x261)) (and x498 (=> (= x726 32) x344))) x3179))
(assert (x1740 x2149))
(assert (= (x2749 x2268 x1211 x3372 x1267 x2542 x774) (x4391 (x2749 x2268 x1211 x3372 x1267 x2542 x774))))
(assert (> (x3614 64 x2980 (ite (= 0 x1954) x3200 (ite (>= 32 x1954) x1090 (ite (<= x1954 64) x2853 (ite (<= x1954 96) x2688 (ite (>= 128 x1954) x3252 (ite (>= 160 x1954) x3909 (ite (>= 192 x1954) x2508 (ite (>= 224 x1954) x4032 x2160))))))))) 10000))
(assert (x1740 x3867))
(assert (x1740 x3355))
(assert (x1740 x3103))
(assert (= x3677 (or (and x2568 x3045) (and x1897 x604))))
(assert (= x844 (and (not x13) x3884)))
(assert (x105 38584857114614344130707641774870441135179346817440091772946614992565446901760))
(assert (< (x3121 x4440 x3305 x3268 x363 x1386) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x3981))
(assert (x1740 x2230))
(assert (= (x3614 x1772 x4380 x3036) (x4391 (x3614 x1772 x4380 x3036))))
(assert (= x3427 (and x3720 (not x1120))))
(assert (= (x4391 (x3614 64 x647 7)) (x3614 64 x647 7)))
(assert (not (x105 (x4438 x2006 x566 x2063 x287))))
(assert (> (x2749 x4440 x3513 x1390 x1100 x4158 x1285) 10000))
(assert (= 0 (x4391 94926909962862326217726538024181891405690106632559804934698421914364834480128)))
(assert (= x2376 (or x2275 x357)))
(assert (= x3473 (=> (and (= x1596 (x154 x1133)) (= (= 0 x1596) x957) (= x2509 128) (= (x4315 (- x3506 128)) x3474)) (and (=> (and x957 (and (= x4423 0) (= false x2340) (= true x2681))) x26) (=> (and (not x957) (and (= x2665 (and x734 x2603)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1487 x3870)) x734) (= (x993 x1133) x3870) (= x2603 (<= x1487 x3822)) (= (x993 x2774) x3822))) (and (=> (and (and (= x4114 false) (>= 127 x478) (= 94926909962862326217726538024181891405690106632559804934698421914364834480128 x4102) (>= x238 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1208) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3474) (= 128 x1418) (= x1208 (+ x1487 x3040)) (= x3663 (x993 x2774)) x1924 (= x3337 (< 18446744073709551615 x2839)) (= (x2834 132) x2839) (= x4051 false) (= (- x3663 x1487) x4316) (>= x3474 196) (= x2441 x647) (< (+ x1487 x3040) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1972 x3474) (= x3468 x2010) (= x1856 x4260) (>= x1972 196) (= (x154 x3591) x238) (= x3040 (x3820 x1133)) (>= x1208 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1972) (= (= x1404 (x1810 132)) x1924) (= x1247 x1208) (= 3521034783 x1612) (>= 127 x478)) x2665) (and (=> x3337 x4437) (=> (and (and (= x2662 (x3626 (+ 164 x2839))) (= x556 (< x1972 x2662)) (= x578 164)) (not x3337)) (and (=> x556 x1799) (=> (and (and (= x350 (+ 4 x3468)) (= x992 (< (+ x350 31) x1972))) (not x556)) (and (=> (and x992 (and (= x2974 (> x3914 18446744073709551615)) (= (x2834 x350) x3914))) (and (=> (and (and (= x999 (x3626 (+ x3914 x3617))) (= x2643 (> x999 x1972)) (= (+ 32 x350) x3617)) (not x2974)) (and (=> x2643 x1799) (=> (not x2643) x380))) (=> x2974 x4437))) (=> (and (and (= true x3221) (= x2203 false) (= x3601 0)) (not x992)) x3678))))))) (=> (and (not x2665) (= 0 x574)) x1750)))))))
(assert (x1740 x3733))
(assert (< (x3096 x2268 x1273) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x754))
(assert (= x1552 (and x52 x1099)))
(assert (x1740 x1772))
(assert (= x1045 (and (not x4336) x2647)))
(assert (=> (<= x537 10000) (= (x4391 x537) 0)))
(assert (=> (<= x2574 10000) (= (x4391 x2574) 0)))
(assert (=> (<= x1849 10000) (= 0 (x4391 x1849))))
(assert (=> (<= x950 10000) (= 0 (x4391 x950))))
(assert (= (x4381 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x4152))
(assert (= (x2094 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) x1954))
(assert (= (x4185 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (>= 64 x2268) x2239 (ite (>= 96 x2268) x2777 (ite (>= 128 x2268) x2219 (ite (>= 160 x2268) x3031 (ite (>= 192 x2268) x2515 (ite (<= x2268 224) x1359 x3236)))))))))) (ite (= x2268 0) x681 (ite (>= 32 x2268) x3888 (ite (<= x2268 64) x2239 (ite (>= 96 x2268) x2777 (ite (<= x2268 128) x2219 (ite (>= 160 x2268) x3031 (ite (<= x2268 192) x2515 (ite (<= x2268 224) x1359 x3236))))))))))
(assert (= x4013 (and (not x3059) x3181)))
(assert (=> (>= 10000 x3390) (= (x4391 x3390) 0)))
(assert (x1740 x669))
(assert (=> (<= x2622 10000) (= 0 (x4391 x2622))))
(assert (x1740 x1566))
(assert (= x1678 (x353 (x4438 x3122 x2306 x1784 x1678))))
(assert (= x2666 (x2789 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (x1740 x727))
(assert (x1740 x2336))
(assert (=> (>= 10000 x3388) (= 0 (x4391 x3388))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3591 1)))
(assert (=> (<= x3203 10000) (= (x4391 x3203) 0)))
(assert (not (x105 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719))))
(assert (= x3055 (x2019 (x3614 x722 x3055 x471))))
(assert (x2348 x4296))
(assert (= x3503 (and (not x191) x2491)))
(assert (x1740 x4055))
(assert (= (and x3589 x2260) x1219))
(assert (x1740 x3378))
(assert (x1740 x1267))
(assert (= x1135 (x4185 (x4438 x1806 x4346 x1135 x158))))
(assert (=> (<= x1386 10000) (= 0 (x4391 x1386))))
(assert (x2854 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1740 x4346))
(assert (x1740 x940))
(assert (x1740 x1782))
(assert (x1740 x3168))
(assert (x1740 x565))
(assert (x1740 x1168))
(assert (x1740 x4124))
(assert (x1740 x1573))
(assert (=> (<= x3268 10000) (= 0 (x4391 x3268))))
(assert (x1740 x836))
(assert (= (x4185 (x3614 x1966 x4426 x2522)) x2522))
(assert (x1740 x2064))
(assert (=> (<= x3508 10000) (= (x4391 x3508) 0)))
(assert (x1740 x839))
(assert (x1740 x1928))
(assert (= (x4391 102788308552044517260959567728648622381392053106279845986800620074717893623808) 0))
(assert (= x2884 (x2019 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (x1740 x2045))
(assert (x1740 x117))
(assert (x1740 x1011))
(assert (= x2949 (x353 (x4438 x4440 x4356 x4069 x2949))))
(assert (= (or x1692 x4282) x2587))
(assert (not (x105 (x3614 x1772 x4380 x3036))))
(assert (= (=> (and (= x364 false) (= false x2399) (= 0 x1630) (= x2262 (= x18 0))) x2262) x1633))
(assert (= (x2094 (x3614 64 x1856 (ite (= x1847 0) x408 (ite (<= x1847 32) x2946 (ite (<= x1847 64) x1561 (ite (<= x1847 96) x240 (ite (>= 128 x1847) x2899 (ite (>= 160 x1847) x1119 (ite (<= x1847 192) x1235 (ite (>= 224 x1847) x172 x324)))))))))) 64))
(assert (x1740 x759))
(assert (x1740 x871))
(assert (=> (>= 10000 x1411) (= 0 (x4391 x1411))))
(assert (x1740 x1562))
(assert (x1740 x2549))
(assert (x1740 x1830))
(assert (< 10000 (x3614 64 x2342 0)))
(assert (= (x4391 (x3096 x1806 x904)) (x3096 x1806 x904)))
(assert (x1740 x2067))
(assert (= x1847 (x2094 (x3614 x1847 x2738 x1877))))
(assert (= (x4185 (x3614 64 x3591 2)) 2))
(assert (x1740 x816))
(assert (x1740 x2935))
(assert (x1740 x1743))
(assert (=> (<= x876 10000) (= 0 (x4391 x876))))
(assert (x1740 x658))
(assert (x1740 x1837))
(assert (x1740 x406))
(assert (x1740 x2202))
(assert (= x1082 (x353 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (= x1187 (and x4115 x2233)))
(assert (x1740 x3641))
(assert (< (x2749 x742 x54 x1570 x1753 x3564 x1908) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3614 x1847 x2738 x1877) (x4391 (x3614 x1847 x2738 x1877))))
(assert (x1740 x4258))
(assert (x1740 x3237))
(assert (= (x4391 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) (x2749 x4440 x3513 x1390 x1100 x4158 x1285)))
(assert (= 64 (x2094 (x3614 64 x4251 36))))
(assert (x1740 x1012))
(assert (= 64 (x2094 (x3614 64 x3591 1))))
(assert (= (and x4273 (not x107)) x491))
(assert (= (x4391 37212044363551391237827125972600881127463135526663889129579209803314629705728) 0))
(assert (x1740 x1157))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x1772 x3512 x825 x3882 x1296 x33)))
(assert (x1740 x2072))
(assert (= x1533 (or x3425 x4371)))
(assert (= (x2094 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062)) x3061))
(assert (x1740 x3124))
(assert (x1740 x577))
(assert (= (x4391 (x4438 x736 x1007 x1021 x727)) (x4438 x736 x1007 x1021 x727)))
(assert (= x2377 (x353 (x4438 x1954 x3524 x1389 x2377))))
(assert (= (x2094 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) x1772))
(assert (= x1037 (and x761 x2326)))
(assert (= (x1339 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x2254))
(assert (x1740 x582))
(assert (x1740 x722))
(assert (= (x4185 (x3614 64 x1455 36)) 36))
(assert (x1740 x2187))
(assert (= (and x2997 (not x1151)) x2612))
(assert (not (x105 (x3121 x736 x3286 x2163 x1635 x3508))))
(assert (x1740 x3250))
(assert (< 10000 (x3614 64 x3579 2)))
(assert (= x1557 (and x2186 x4074)))
(assert (= 2 (x4185 (x3614 64 x4339 2))))
(assert (x1740 x3207))
(assert (= x1099 (and x3109 (not x1724))))
(assert (x1740 x4236))
(assert (= (x4185 (x3614 64 x1081 36)) 36))
(assert (x1740 x1712))
(assert (x1740 x4544))
(assert (< 10000 (x3096 x2006 x124)))
(assert (x1740 x4009))
(assert (= (x2019 (x3614 x1966 x4426 x2522)) x4426))
(assert (x1740 x3468))
(assert (> (x2749 x722 x2659 x1620 x1289 x950 x3715) 10000))
(assert (= x4059 (or (and x3354 x3088) (and x1422 x878))))
(assert (=> (>= 10000 x2285) (= (x4391 x2285) 0)))
(assert (x1740 x980))
(assert (= x84 (x4185 (x3121 x1806 x892 x84 x1640 x1925))))
(assert (x1740 x1631))
(assert (=> (<= x2342 10000) (= 0 (x4391 x2342))))
(assert (x1740 x4425))
(assert (x1740 x1634))
(assert (=> (<= x3730 10000) (= 0 (x4391 x3730))))
(assert (x1740 x4046))
(assert (x1740 x2044))
(assert (x2854 x3797))
(assert (x1740 x1077))
(assert (x1740 x4127))
(assert (< (x3614 64 x2342 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x3614 x1966 x4426 x2522) (x4391 (x3614 x1966 x4426 x2522))))
(assert (x2854 x316))
(assert (< (x2749 x1966 x1707 x3979 x496 x2463 x390) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x3719) (= 0 (x4391 x3719))))
(assert (x1740 x617))
(assert (= x3764 (x2019 (x3614 64 x3764 36))))
(assert (= (x4391 (x3614 64 x4284 6)) (x3614 64 x4284 6)))
(assert (x1740 x1221))
(assert (=> (>= 10000 x2466) (= 0 (x4391 x2466))))
(assert (= (and x488 x187) x3173))
(assert (x1740 x3696))
(assert (=> (>= 10000 x4375) (= 0 (x4391 x4375))))
(assert (x1740 x212))
(assert (= 64 (x2094 (x3614 64 x1313 36))))
(assert (x1740 x1252))
(assert (= (and x3181 x3059) x1751))
(assert (= (x353 (x2749 x736 x2211 x1126 x1110 x163 x4375)) x1110))
(assert (= (x2094 (x3121 x4440 x3305 x3268 x363 x1386)) x4440))
(assert (= (and x1538 (not x3523)) x72))
(assert (< 10000 (x3614 64 x1399 6)))
(assert (x1740 x724))
(assert (x1740 x3084))
(assert (= (and (not x300) x3140) x1039))
(assert (x1740 x557))
(assert (not (x105 (x3614 64 x3591 1))))
(assert (= (and (not x2182) x3583) x3140))
(assert (x1740 x1328))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)))
(assert (x1740 x4528))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x1469 (x2789 (x2749 x1806 x3606 x1022 x1584 x1469 x2466))))
(assert (not (x105 (x3096 x742 x1712))))
(assert (= x2950 (and x450 x1125)))
(assert (x1740 x506))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x1954 x3530 x79 x4473 x2607)))
(assert (= x920 (and x3710 x937)))
(assert (= (and x3297 (not x4506)) x2794))
(assert (> (x3614 64 x256 10) 10000))
(assert (=> (>= 10000 x4193) (= (x4391 x4193) 0)))
(assert (x1740 x2716))
(assert (=> (<= x168 10000) (= 0 (x4391 x168))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4438 x1966 x1264 x832 x3788)))
(assert (= (x3614 64 x1708 2) (x4391 (x3614 64 x1708 2))))
(assert (x1740 x3006))
(assert (= (x4391 (x3614 64 x1316 11)) (x3614 64 x1316 11)))
(assert (x1740 x284))
(assert (= x2659 (x2019 (x2749 x722 x2659 x1620 x1289 x950 x3715))))
(assert (= (=> (and (= true x770) (= x3130 36) (= x2845 false)) x3120) x2751))
(assert (x1740 x199))
(assert (x1740 x4549))
(assert (x1740 x1908))
(assert (=> (<= x4473 10000) (= 0 (x4391 x4473))))
(assert (= (or x72 x4303 x1942 x1375 x4364) x1025))
(assert (x1740 x4218))
(assert (= (x4391 (x2749 x722 x2659 x1620 x1289 x950 x3715)) (x2749 x722 x2659 x1620 x1289 x950 x3715)))
(assert (= (x353 (x4438 x2006 x566 x2063 x287)) x287))
(assert (x1740 x4250))
(assert (=> (<= x4528 10000) (= (x4391 x4528) 0)))
(assert (not (x105 (x3614 64 x3229 100))))
(assert (= x1432 (and x1355 (not x959))))
(assert (= (x4185 (x3614 64 x2796 6)) 6))
(assert (not (x105 (x3614 x4440 x983 x1770))))
(assert (x1740 x2528))
(assert (=> (>= 10000 x1707) (= (x4391 x1707) 0)))
(assert (= (x2789 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242)) x2179))
(assert (x1740 x1418))
(assert (=> (<= x4535 10000) (= (x4391 x4535) 0)))
(assert (< (x3614 64 x4330 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3821 10000) (= 0 (x4391 x3821))))
(assert (= (and x3362 x1025) x2236))
(assert (= (x2789 (x3121 x736 x3286 x2163 x1635 x3508)) x3508))
(assert (=> (>= 10000 x1712) (= (x4391 x1712) 0)))
(assert (= x1443 (x4185 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (= x2942 (and (not x3117) x2951)))
(assert (x1740 x2874))
(assert (x1740 x2492))
(assert (=> (<= x1166 10000) (= (x4391 x1166) 0)))
(assert (x1740 x822))
(assert (x1740 x432))
(assert (=> (<= x849 10000) (= 0 (x4391 x849))))
(assert (x1740 x4256))
(assert (> (x3096 x1806 x904) 10000))
(assert (x2854 x635))
(assert (< 10000 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)))
(assert (< (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x3812))
(assert (= 0 (x4391 1313998243)))
(assert (=> (<= x3578 10000) (= (x4391 x3578) 0)))
(assert (x1740 x1560))
(assert (not (x105 (x3614 64 x3764 36))))
(assert (= (or x3749 x2217) x2596))
(assert (x1740 x297))
(assert (= x3500 (=> (= x2335 (not (< 32 x627))) (and x2335 x2590))))
(assert (= (x4185 (x3614 64 x168 36)) 36))
(assert (x1740 x1965))
(assert (= (and x4336 x2647) x777))
(assert (= (and x915 x3755) x3738))
(assert (=> (>= 10000 x418) (= (x4391 x418) 0)))
(assert (x1740 x3236))
(assert (x1740 x3276))
(assert (x1740 x163))
(assert (= (x4391 57896044618658097711785492504343953926634992332820282019728792003956564819967) 0))
(assert (x1740 x627))
(assert (= x1132 (x2094 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876))))
(assert (= x1908 (x226 (x2749 x742 x54 x1570 x1753 x3564 x1908))))
(assert (not (x105 (x3614 64 x3591 2))))
(assert (x1740 x310))
(assert (x1740 x1629))
(assert (not (x105 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482))))
(assert (not (x105 (x3614 64 x1944 100))))
(assert (x2854 x1222))
(assert (x1740 x417))
(assert (= x4135 false))
(assert (= (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882) (x4391 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882))))
(assert (= (x2094 (x3614 64 x2533 12)) 64))
(assert (=> (<= x1856 10000) (= 0 (x4391 x1856))))
(assert (=> (<= x338 10000) (= 0 (x4391 x338))))
(assert (x1740 x3073))
(assert (x1740 x3315))
(assert (= x4350 (=> (= x3506 (+ x888 x995)) x3473)))
(assert (=> (>= 10000 x2039) (= 0 (x4391 x2039))))
(assert (= x22 (x2019 (x3096 x722 x22))))
(assert (< (x3614 64 x4339 6) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x4209))
(assert (= (x4391 48755886422350550937420582033662272622158303343164848365600209189876434731008) 0))
(assert (= (=> (and (= (= 0 x4373) x13) (or (and x13 (= x3380 128)) (and (not x13) (and (= (+ 128 x3551) x3380) (= x3551 (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3786)) (= (x3626 (+ 63 x4373)) x3786) (>= x3551 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x3551))))) x1001) x518))
(assert (x1740 x45))
(assert (= (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x2854 x2943))
(assert (x1740 x1705))
(assert (x1740 x4357))
(assert (= (x4185 (x4438 x2006 x566 x2063 x287)) x2063))
(assert (= x2268 (x2094 (x3121 x2268 x4394 x3334 x3409 x849))))
(assert (= x390 (x226 (x2749 x1966 x1707 x3979 x496 x2463 x390))))
(assert (x1740 x3734))
(assert (= (and x480 x1461) x2764))
(assert (x1740 x1411))
(assert (= (x2094 (x4438 x1966 x1264 x832 x3788)) x1966))
(assert (x1740 x1998))
(assert (x1740 x1202))
(assert (=> (<= x2796 10000) (= (x4391 x2796) 0)))
(assert (= x1919 (x226 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046))))
(assert (=> (<= x501 10000) (= (x4391 x501) 0)))
(assert (x1740 x1226))
(assert (x105 13123866003235860548192500634644069355060014211693331341089165407210616913920))
(assert (=> (<= x1714 10000) (= (x4391 x1714) 0)))
(assert (x1740 x1737))
(assert (< 10000 (x3614 64 x1313 36)))
(assert (x1740 x1812))
(assert (x1740 x1822))
(assert (x1740 x1381))
(assert (= (and x2997 x1151) x104))
(assert (x1740 x3026))
(assert (= (and x639 (not x435)) x1096))
(assert (x1740 x4482))
(assert (x1740 x1247))
(assert (x1740 x3086))
(assert (= x3700 (x2019 (x3614 64 x3700 10))))
(assert (= x818 (or x1911 x4088)))
(assert (x1740 x3141))
(assert (< (x4438 x1847 x1718 x1485 x1149) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2094 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) x2268))
(assert (x2854 x310))
(assert (x1740 x563))
(assert (< (x3614 64 x4339 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2000))
(assert (=> (<= x1806 10000) (= 0 (x4391 x1806))))
(assert (x1740 x262))
(assert (x1740 x570))
(assert (x1740 x3263))
(assert (= x2616 (or (and x450 (not x1125)) x2950)))
(assert (= x439 (x226 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (x1740 x3821))
(assert (x1740 x1871))
(assert (x1740 x3199))
(assert (x1740 x1070))
(assert (x1740 x4406))
(assert (x1740 x2323))
(assert (= x3125 (and (not x630) x2376)))
(assert (= x1767 (and (not x2911) x3515)))
(assert (not (x105 (x3614 64 x4339 2))))
(assert (= x4396 (x353 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (< (x3614 64 x4441 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1550))
(assert (x1740 x533))
(assert (x1740 x3717))
(assert (= (and (not x461) x10) x2996))
(assert (= (x353 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)) x449))
(assert (=> (>= 10000 x3227) (= 0 (x4391 x3227))))
(assert (x1740 x4314))
(assert (x1592 x23))
(assert (x1740 x3012))
(assert (x1740 x3418))
(assert (= (x2094 (x3096 x742 x1712)) x742))
(assert (x2348 x204))
(assert (x1740 x4073))
(assert (=> (>= 10000 x2729) (= 0 (x4391 x2729))))
(assert (= x1250 (or x1448 x1136 x4020 x1046 x1500 x1227 x2232 x3310 x3738 x1603 x1545 x1298 x233 x2668 x491 x2527 x468 x938 x3549 x3488 x425 x1706 x1867 x579)))
(assert (x1740 x1288))
(assert (= (x4185 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) x1390))
(assert (x1740 x1716))
(assert (not (x105 (x3121 x1806 x892 x84 x1640 x1925))))
(assert (not (x105 (x3614 x1132 x45 x429))))
(assert (x1740 x3669))
(assert (x1740 x349))
(assert (= x3722 (x226 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365))))
(assert (= (x2094 (x3614 x3061 x1446 x3936)) x3061))
(assert (x1740 x3385))
(assert (= x3759 (and x755 x729)))
(assert (= (x2019 (x3614 64 x1856 (ite (= x1132 0) x2937 (ite (<= x1132 32) x2102 (ite (<= x1132 64) x3958 (ite (>= 96 x1132) x1380 (ite (>= 128 x1132) x529 (ite (>= 160 x1132) x2871 (ite (<= x1132 192) x465 (ite (>= 224 x1132) x2624 x111)))))))))) x1856))
(assert (x1740 x4118))
(assert (= (x3614 64 x1399 6) (x4391 (x3614 64 x1399 6))))
(assert (x1740 x3201))
(assert (= x2790 (x226 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906))))
(assert (= (x2019 (x3121 x1847 x1714 x2878 x1454 x805)) x1714))
(assert (x2854 127))
(assert (= x357 (and (not x3873) x3261)))
(assert (= (=> (and (= (= x1573 0) x1502) (or (and (not x1502) (and (= x2403 x1573) (= x2251 x2577) (= x1319 x211) (= x3537 x3284) (= x136 x3973) (= x1501 x483) (= x223 x268) (= x1891 x4373) (= x685 x829))) (and x1502 (and (= x136 x3973) (= (ite (= x1573 0) x4109 0) x2981) (>= x712 0) (= x483 x1501) (= (- x4246 x2981) x848) (= x211 x1319) (= x685 x829) (= x2577 x2251) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x712) (= x1573 x2403) (= x3537 x3284) (= x712 x1397) (= x4246 (x122 x4164)) (= x712 (+ x2197 x2981)) (= x1891 x4373) (< (+ x2981 x2197) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x867 x3591) x2197) (= x223 x268))))) x518) x1091))
(assert (x1740 x3594))
(assert (< 10000 (x3614 64 x2533 12)))
(assert (x1740 x1367))
(assert (= 10 (x4185 (x3614 64 x4330 10))))
(assert (= x4280 (or x1016 x3915)))
(assert (x1740 x2900))
(assert (x1740 x849))
(assert (= x1699 (x226 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (=> (<= x1513 10000) (= (x4391 x1513) 0)))
(assert (x1740 x4201))
(assert (x1740 x401))
(assert (= (=> (and (= x3790 x3548) (= 1 x2307) (= x3886 x1980) (= x2582 x2081) (= 0 x3856) (= x1014 x4050) (= x3065 x3992) (= x3696 x3277) (= x1617 x3563) (= x4353 x4348) (= x1537 x2290) (= x2841 x3932) (= x1353 x2476) (= x1874 x3294) (= x720 x1778) (= x2933 x2646)) x801) x474))
(assert (= (and x36 x1727) x1625))
(assert (=> (<= x916 10000) (= 0 (x4391 x916))))
(assert (=> (>= 10000 x3160) (= 0 (x4391 x3160))))
(assert (= x4211 (or x2293 x2784)))
(assert (x1740 x3056))
(assert (x1740 x2578))
(assert (x1740 x4080))
(assert (= (x4185 (x3121 x742 x2215 x2202 x1513 x1546)) x2202))
(assert (x1740 x3804))
(assert (x1740 x4235))
(assert (> (x3614 64 x2602 7) 10000))
(assert (= x1928 (x2019 (x4438 x2268 x1928 x3123 x4389))))
(assert (= (x4391 (x3614 64 x3700 10)) (x3614 64 x3700 10)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3764 36)))
(assert (= x1983 (x353 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906))))
(assert (=> (<= x1547 10000) (= (x4391 x1547) 0)))
(assert (x1740 x1007))
(assert (= (and (not x1461) x480) x3710))
(assert (x1740 x1066))
(assert (x1740 x2403))
(assert (x2854 x683))
(assert (= x1240 (and x1023 (not x2852))))
(assert (= (x4185 (x3614 64 x1708 2)) 2))
(assert (x1740 x2533))
(assert (not (x105 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x1806 x904)))
(assert (x1740 x3818))
(assert (=> (>= 10000 x3891) (= (x4391 x3891) 0)))
(assert (< (x3096 32 103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x933 (x2019 (x3121 x1966 x933 x3210 x4230 x4404))))
(assert (x1740 x4356))
(assert (=> (<= x3001 10000) (= (x4391 x3001) 0)))
(assert (x1740 x2773))
(assert (x1740 x1888))
(assert (= x1258 (and (not x2133) x2284)))
(assert (x1740 x1436))
(assert (x1740 x2957))
(assert (= (x2789 (x2749 x742 x54 x1570 x1753 x3564 x1908)) x3564))
(assert (x1740 x176))
(assert (< 10000 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)))
(assert (= (x353 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) x3757))
(assert (> (x4438 x1847 x1718 x1485 x1149) 10000))
(assert (not (x105 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027))))
(assert (x1740 x4141))
(assert (x1740 x1661))
(assert (x1740 x2769))
(assert (x2854 x366))
(assert (=> (>= 10000 x1323) (= 0 (x4391 x1323))))
(assert (not (x105 (x3614 64 x3202 12))))
(assert (= (and x4076 x3291) x1869))
(assert (x1740 x3542))
(assert (= x3262 (and x4223 x1695)))
(assert (= (x4185 (x3614 x1806 x2349 x1322)) x1322))
(assert (= x3780 (x1339 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (=> (>= 10000 x3715) (= 0 (x4391 x3715))))
(assert (x1740 x395))
(assert (= x1193 (=> (and (= x2664 true) (= false x4264) (= x4423 36)) x26)))
(assert (x1740 x397))
(assert (x1740 x538))
(assert (=> (>= 10000 x1313) (= 0 (x4391 x1313))))
(assert (x1740 x4292))
(assert (= (and x3433 x3776) x4483))
(assert (= x3578 (x1339 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286))))
(assert (= (and x3536 x970) x2204))
(assert (x1740 x484))
(assert (= (or x4270 x2656) x4349))
(assert (< (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1619))
(assert (x1740 x1092))
(assert (= x2289 (x353 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (x1740 x2483))
(assert (x1740 x155))
(assert (= (x2789 (x2749 x3122 x2773 x1507 x214 x337 x3756)) x337))
(assert (=> (<= x607 10000) (= 0 (x4391 x607))))
(assert (= (x1339 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) x3365))
(assert (= x736 (x2094 (x3614 x736 x4400 x1379))))
(assert (x1740 x2843))
(assert (x1740 x1149))
(assert (x1740 x2055))
(assert (< (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= (= x2207 0) x435) (and (=> (and (and (= x4423 x4322) (= false x1938) (= x343 true)) x435) x26) (=> (and (not x435) (and (= x1663 x4017) (= x2391 x1629))) x525))) x2175))
(assert (not (x105 (x3096 x2268 x1273))))
(assert (= (or x844 x546) x2978))
(assert (< (x3614 64 x908 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2163))
(assert (= (=> (and (= x4518 x4423) (= 0 x2923) (= x378 x1967) (= x981 2) (= x378 x3647)) x3829) x26))
(assert (= (x4391 (x3614 64 x3579 2)) (x3614 64 x3579 2)))
(assert (x1740 x3772))
(assert (< 10000 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)))
(assert (= (x4391 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)) (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)))
(assert (= x1712 (x2019 (x3096 x742 x1712))))
(assert (x1740 x3716))
(assert (= x2895 (x353 (x2749 x1954 x2843 x3390 x2895 x2966 x341))))
(assert (= x453 (x353 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902))))
(assert (x1740 x489))
(assert (x1740 x2160))
(assert (= (and x1150 x1419) x1312))
(assert (x1740 x3205))
(assert (= (x4391 (x3614 64 x819 7)) (x3614 64 x819 7)))
(assert (x1740 x477))
(assert (x1740 x1397))
(assert (=> (>= 10000 x3353) (= (x4391 x3353) 0)))
(assert (= (x2094 (x3121 x736 x3286 x2163 x1635 x3508)) x736))
(assert (< (x3614 64 x1081 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x429))
(assert (= x2875 (x4185 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719))))
(assert (=> (<= x825 10000) (= (x4391 x825) 0)))
(assert (x692 x3021))
(assert (< 10000 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490)))
(assert (= x4212 (and x2236 (not x203))))
(assert (=> (<= x3524 10000) (= (x4391 x3524) 0)))
(assert (= x2497 (and (not x2186) x4074)))
(assert (= x3826 (and x2400 x1851)))
(assert (= (x2019 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780)) x3690))
(assert (= x3591 (x2019 (x3614 64 x3591 2))))
(assert (x105 3812630263))
(assert (x1740 x4224))
(assert (x1740 x632))
(assert (x1740 x4433))
(assert (x1740 x3633))
(assert (= (and x279 x1992) x62))
(assert (x1740 x23))
(assert (= (x3614 64 x1515 100) (x4391 (x3614 64 x1515 100))))
(assert (x1740 x495))
(assert (= x1990 (x1339 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (x1740 x496))
(assert (x1740 x2063))
(assert (= x3441 (x2789 (x3121 x3122 x3227 x778 x81 x3441))))
(assert (x1740 x2902))
(assert (= (x3614 x1954 x402 x1876) (x4391 (x3614 x1954 x402 x1876))))
(assert (= (x2094 (x4438 x4440 x4356 x4069 x2949)) x4440))
(assert (= x2457 (and (not x4027) x2976)))
(assert (= x911 (x2789 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077))))
(assert (x2854 x394))
(assert (= 64 (x2094 (x3614 64 x3891 36))))
(assert (< 10000 (x4438 x1954 x3524 x1389 x2377)))
(assert (x1740 x1048))
(assert (x1740 x224))
(assert (not (x105 (x3614 64 x3700 10))))
(assert (x1740 x214))
(assert (x1740 x1337))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799)))
(assert (x1740 x950))
(assert (> (x4438 x1772 x3892 x336 x1411) 10000))
(assert (=> (>= 10000 x3128) (= (x4391 x3128) 0)))
(assert (= (x4185 (x4438 x3122 x2306 x1784 x1678)) x1784))
(assert (x1740 x1100))
(assert (< (x4438 x1954 x3524 x1389 x2377) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)))
(assert (=> (<= x515 10000) (= (x4391 x515) 0)))
(assert (> (x3614 x736 x4400 x1379) 10000))
(assert (= x4474 (and (not x4354) x686)))
(assert (x1740 x3841))
(assert (= (x353 (x1369 x1954 x392 x1560 x2404 x2666 x1919 x4046)) x2404))
(assert (= (x2019 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x565))
(assert (x1740 x1370))
(assert (= x4086 (=> (and (= x3838 (x2941 x4159)) (= (not (< 32 x1404)) x1723)) (and (=> (= x3773 32) x2418) x1723))))
(assert (> (x2749 x2006 x1791 x108 x4406 x2320 x3533) 10000))
(assert (x1740 x4011))
(assert (not (x105 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (= x3242 (and x2612 (not x1898))))
(assert (= (and x828 x2844) x3583))
(assert (not (x105 (x3121 x722 x1336 x1923 x495 x2249))))
(assert (x1740 x3982))
(assert (= (x4391 (x3121 x2268 x4394 x3334 x3409 x849)) (x3121 x2268 x4394 x3334 x3409 x849)))
(assert (x1740 x607))
(assert (not (x105 (x3614 64 x1856 (ite (= 0 x1132) x2937 (ite (>= 32 x1132) x2102 (ite (>= 64 x1132) x3958 (ite (>= 96 x1132) x1380 (ite (<= x1132 128) x529 (ite (<= x1132 160) x2871 (ite (>= 192 x1132) x465 (ite (>= 224 x1132) x2624 x111))))))))))))
(assert (= x2529 (x4185 (x3614 x2313 x2406 x2529))))
(assert (= x1847 (x2094 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (x692 x764))
(assert (= x1661 (x353 (x2749 x1132 x2695 x1710 x1661 x3721 x897))))
(assert (= x3570 (and (not x266) x2050)))
(assert (x1740 x3573))
(assert (= (x2094 (x3121 x1954 x3530 x79 x4473 x2607)) x1954))
(assert (x1740 x3048))
(assert (x1740 x999))
(assert (x1740 x2174))
(assert (= (=> (and (= 36 x4423) (= x3032 true) (= false x60)) x26) x626))
(assert (x1740 x3987))
(assert (x1740 x3447))
(assert (< 10000 (x3614 64 x908 12)))
(assert (x1740 x2221))
(assert (x1740 x1669))
(assert (=> (>= 10000 x2092) (= 0 (x4391 x2092))))
(assert (= (=> (= x959 (= 0 x2125)) (and (=> (and (not x959) (and (= x1662 x2302) (= x1578 x3645) (= x2548 x2952) (= x3525 x4119) (= x745 x1787) (= x4041 x3590) (= x2433 x4476) (= x665 x3153) (= x447 x374) (= x3082 x4453) (= x698 x1554) (= x4233 x3072) (= x4424 x3271) (= x3615 x3155))) x271) (=> (and (and (= x3130 x3939) (= x2633 true) (= x230 false)) x959) x3120))) x3326))
(assert (= (x4391 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679)) (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679)))
(assert (= (x3121 x1954 x3530 x79 x4473 x2607) (x4391 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (=> (<= x324 10000) (= 0 (x4391 x324))))
(assert (=> (<= x4380 10000) (= (x4391 x4380) 0)))
(assert (> (x3121 x1966 x933 x3210 x4230 x4404) 10000))
(assert (x1740 x2577))
(assert (= x4292 (x2019 (x3614 x2268 x4292 x4285))))
(assert (= (x4185 (x4438 x1847 x1718 x1485 x1149)) x1485))
(assert (< 10000 (x3614 64 x1421 (ite (= x2268 0) x681 (ite (<= x2268 32) x3888 (ite (<= x2268 64) x2239 (ite (<= x2268 96) x2777 (ite (<= x2268 128) x2219 (ite (<= x2268 160) x3031 (ite (<= x2268 192) x2515 (ite (<= x2268 224) x1359 x3236)))))))))))
(assert (= x2602 (x2019 (x3614 64 x2602 7))))
(assert (x1740 x2386))
(assert (= (x2094 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x742))
(assert (x1740 x936))
(assert (x2854 x246))
(assert (= (x2019 (x4438 x2313 x2314 x282 x441)) x2314))
(assert (x1740 x2041))
(assert (= x1398 (and x966 (not x652))))
(assert (= x4074 (and x2326 (not x761))))
(assert (= x1400 (and (not x80) x2596)))
(assert (= (and x3417 (not x2914)) x50))
(assert (= (x2094 (x3614 x1132 x45 x429)) x1132))
(assert (=> (>= 10000 x2480) (= 0 (x4391 x2480))))
(assert (x1740 x650))
(assert (x1740 x3464))
(assert (x1740 x2057))
(assert (not (x105 (x2749 x2313 x2520 x3804 x1652 x3880 x2331))))
(assert (x1740 x4296))
(assert (=> (>= 10000 x2331) (= (x4391 x2331) 0)))
(assert (= (x4391 (x3614 64 x2559 6)) (x3614 64 x2559 6)))
(assert (x105 1000000000))
(assert (x1740 x3995))
(assert (= (or x1767 x4474 x3519 x104 x1528 x1223 x2416 x688) x2308))
(assert (= (and (not x3078) x1557) x3930))
(assert (= (and (not x1536) x2333) x589))
(assert (x1740 x3830))
(assert (= (=> (and (= false x1008) (= x2438 x3130) (= true x1097)) x3120) x4369))
(assert (= x1609 (and x3206 x797)))
(assert (= (=> (= (+ 292 x726) x3890) x3218) x344))
(assert (=> (<= x1126 10000) (= (x4391 x1126) 0)))
(assert (< (x4438 x1806 x4346 x1135 x158) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x105 (x3614 64 x2980 (ite (= x1954 0) x3200 (ite (<= x1954 32) x1090 (ite (>= 64 x1954) x2853 (ite (<= x1954 96) x2688 (ite (>= 128 x1954) x3252 (ite (>= 160 x1954) x3909 (ite (<= x1954 192) x2508 (ite (>= 224 x1954) x4032 x2160))))))))))))
(assert (= (x4185 (x3121 x4440 x3305 x3268 x363 x1386)) x3268))
(assert (x1740 x2092))
(assert (x1740 x2322))
(assert (x1740 x4454))
(assert (x1740 x573))
(assert (= (x4391 (x3614 64 x3201 36)) (x3614 64 x3201 36)))
(assert (< 10000 (x3614 64 x3411 12)))
(assert (= x1323 (x2019 (x3614 64 x1323 100))))
(assert (= x679 (x1339 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (= (and x2764 (not x1326)) x2209))
(assert (x1740 x4401))
(assert (< 10000 (x3121 x742 x2215 x2202 x1513 x1546)))
(assert (x1740 x1818))
(assert (x1740 x2086))
(assert (=> (>= 10000 x4339) (= 0 (x4391 x4339))))
(assert (x105 3628442803))
(assert (=> (<= x774 10000) (= 0 (x4391 x774))))
(assert (x1740 x1984))
(assert (x1740 x4077))
(assert (= (=> (and (= x2660 (x4123 x1133)) (= x1058 x2373) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1058) (= x3758 (- x2660 x1487)) (>= x1058 0) (< (+ x1487 x3497) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1058 (+ x3497 x1487)) (= (x1329 255 x683) x4340) (= x3643 2) (= x3601 x574) (= x3497 (x2486 x2774))) x1750) x3678))
(assert (x1740 x2225))
(assert (x1740 x2657))
(assert (= (and x793 x3517) x2084))
(assert (x1740 x1322))
(assert (= x3698 (and x275 x2084)))
(assert (x1740 x610))
(assert (=> (<= x2743 10000) (= (x4391 x2743) 0)))
(assert (= (or x4501 (and x1471 (not x1859))) x4282))
(assert (= 0 (x4391 107317874183463056701504662589741776198067464202343767264461527615735374807040)))
(assert (< (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1981) (= 0 (x4391 x1981))))
(assert (=> (<= x2867 10000) (= (x4391 x2867) 0)))
(assert (=> (<= x1027 10000) (= (x4391 x1027) 0)))
(assert (= (x2789 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) x1436))
(assert (x1740 x2046))
(assert (=> (>= 10000 x778) (= (x4391 x778) 0)))
(assert (x1740 x1974))
(assert (x1740 x3520))
(assert (x1740 x1843))
(assert (= x793 (and (not x1061) x3836)))
(assert (= x3579 (x2019 (x3614 64 x3579 2))))
(assert (= x2773 (x2019 (x2749 x3122 x2773 x1507 x214 x337 x3756))))
(assert (= (x4391 (x3614 64 x1944 100)) (x3614 64 x1944 100)))
(assert (x1740 x1110))
(assert (= (x4391 106705613605932439001713296114446454776331749937047859905631657259250407702528) 0))
(assert (not (x105 (x3614 x742 x4509 x573))))
(assert (= (and x3328 x32) x1528))
(assert (= x4482 (x4381 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482))))
(assert (=> (<= x3201 10000) (= (x4391 x3201) 0)))
(assert (=> (<= x1640 10000) (= 0 (x4391 x1640))))
(assert (x692 x576))
(assert (=> (<= x1908 10000) (= 0 (x4391 x1908))))
(assert (< (x2749 x2313 x2520 x3804 x1652 x3880 x2331) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1149) (= (x4391 x1149) 0)))
(assert (x1740 x1616))
(assert (= x2527 (and (not x1567) x4060)))
(assert (x1740 x3891))
(assert (x1740 x783))
(assert (x1740 x4556))
(assert (x1740 x185))
(assert (= (x4438 x4440 x4356 x4069 x2949) (x4391 (x4438 x4440 x4356 x4069 x2949))))
(assert (x1740 x3564))
(assert (x1740 x2589))
(assert (= (and (not x3482) x3924) x921))
(assert (x1740 x3739))
(assert (x1740 x644))
(assert (< 10000 (x3096 x1954 x2574)))
(assert (=> (<= x341 10000) (= 0 (x4391 x341))))
(assert (x1740 x2132))
(assert (= (x4391 (x2749 x2313 x2520 x3804 x1652 x3880 x2331)) (x2749 x2313 x2520 x3804 x1652 x3880 x2331)))
(assert (= x1455 (x2019 (x3614 64 x1455 36))))
(assert (=> (<= x2406 10000) (= 0 (x4391 x2406))))
(assert (= x3260 (and x1139 x3097)))
(assert (x1740 x2274))
(assert (x1740 x2197))
(assert (x1740 x2799))
(assert (x1740 x3282))
(assert (not (x105 (x4438 x1966 x1264 x832 x3788))))
(assert (= (and x332 (not x2111)) x4289))
(assert (= x3092 (and x2233 (not x4115))))
(assert (= x2572 (x4381 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (=> (>= 10000 x4440) (= (x4391 x4440) 0)))
(assert (= (x4391 (x3614 64 x1313 36)) (x3614 64 x1313 36)))
(assert (= (and x978 (not x4465)) x2975))
(assert (=> (<= x331 10000) (= 0 (x4391 x331))))
(assert (< (x3121 x1132 x2280 x1443 x2517 x2430) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x4391 (x3614 64 x1856 (ite (= x1132 0) x2937 (ite (>= 32 x1132) x2102 (ite (>= 64 x1132) x3958 (ite (<= x1132 96) x1380 (ite (>= 128 x1132) x529 (ite (<= x1132 160) x2871 (ite (<= x1132 192) x465 (ite (<= x1132 224) x2624 x111)))))))))) (x3614 64 x1856 (ite (= 0 x1132) x2937 (ite (<= x1132 32) x2102 (ite (<= x1132 64) x3958 (ite (>= 96 x1132) x1380 (ite (<= x1132 128) x529 (ite (<= x1132 160) x2871 (ite (<= x1132 192) x465 (ite (>= 224 x1132) x2624 x111)))))))))))
(assert (= (=> (and (= (= 0 x1664) x2910) (= x1664 (x154 x3542))) (and (=> (not x2910) x2021) (=> (and x2910 (and (= x2906 false) (= 0 x3130) (= x4464 true))) x3120))) x3766))
(assert (= x3505 (or x4444 x1209 x1195 x4191 x994 x61)))
(assert (=> (<= x4509 10000) (= (x4391 x4509) 0)))
(assert (x1740 x4265))
(assert (x1740 x3431))
(assert (=> (<= x1620 10000) (= 0 (x4391 x1620))))
(assert (= (x2019 (x3614 64 x1316 11)) x1316))
(assert (= x94 (and x2210 (not x2147))))
(assert (=> (<= x74 10000) (= 0 (x4391 x74))))
(assert (= x1954 (x2094 (x4438 x1954 x3524 x1389 x2377))))
(assert (= (x353 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062)) x3099))
(assert (= (and x3417 x2914) x579))
(assert (> (x3614 64 x819 7) 10000))
(assert (x1740 x259))
(assert (< 10000 (x3614 64 x3591 2)))
(assert (not (x105 (x4438 x1847 x1718 x1485 x1149))))
(assert (< (x3614 64 x1197 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x3264))
(assert (=> (<= x4230 10000) (= (x4391 x4230) 0)))
(assert (x1740 x4145))
(assert (= x649 (=> (and (or (and (and (= x4203 x1657) (= x457 x767) (= x3057 x3136) (= x2162 x2964)) (not x2292)) (and (and (= x767 x457) (= x2336 (x4450 x3591)) (= x2042 (ite (= x3136 0) x4209 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2336 x2042)) (= x2964 x2162) (= x3057 x3136) (= x2540 x917) (= x64 (x2324 x2501)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x917) (= x917 (+ x2042 x2336)) (>= x917 0) (= x1657 x4203) (= (- x64 x2042) x3129)) x2292)) (= x2292 (= x3136 0))) x2961)))
(assert (= (x226 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876)) x2090))
(assert (> (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160) 10000))
(assert (= (x353 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990)) x477))
(assert (x1740 x2838))
(assert (x2348 x2049))
(assert (= 6 (x4185 (x3614 64 x1399 6))))
(assert (x1740 x4203))
(assert (= x2787 (or x2308 x3971)))
(assert (= 0 (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x1740 x2297))
(assert (= x1954 (x2094 (x3614 x1954 x402 x1876))))
(assert (x1740 x4260))
(assert (=> (>= 10000 x2249) (= (x4391 x2249) 0)))
(assert (x1740 x1095))
(assert (x1740 x3990))
(assert (x1740 x537))
(assert (=> (>= 10000 x1164) (= (x4391 x1164) 0)))
(assert (= (x4391 1461501637330902918203684832716283019655932542975) 0))
(assert (> (x3614 64 x1081 36) 10000))
(assert (= (x353 (x3121 x2268 x4394 x3334 x3409 x849)) x3409))
(assert (x1740 x1062))
(assert (x1740 x3773))
(assert (x1740 x2398))
(assert (x1740 x1781))
(assert (x1740 x3506))
(assert (x1740 x1293))
(assert (=> (<= x1133 10000) (= 0 (x4391 x1133))))
(assert (x1740 x2244))
(assert (x1740 x2172))
(assert (x1740 x366))
(assert (x1740 x1285))
(assert (x1740 x1350))
(assert (x1740 x3411))
(assert (x2348 x737))
(assert (= x3531 (and x929 x883)))
(assert (x1740 x2514))
(assert (= x2012 (x4185 (x2631 x1132 x3001 x2012 x449 x2287 x2090 x619 x876))))
(assert (= (x4391 14609135308879574245051756109060786979925523914932377087145621868633940557824) 0))
(assert (x2348 x2829))
(assert (x1740 x350))
(assert (=> (<= x3711 10000) (= 0 (x4391 x3711))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)))
(assert (= x3825 (and (not x52) x1099)))
(assert (= (and (not x776) x3866) x2784))
(assert (= (x4185 (x3614 64 x4339 6)) 6))
(assert (x1740 x439))
(assert (x1740 x1939))
(assert (x1740 x2183))
(assert (x1740 x1002))
(assert (=> (<= x703 10000) (= (x4391 x703) 0)))
(assert (= (x4185 (x4438 x742 x2285 x1658 x458)) x1658))
(assert (x1740 x2548))
(assert (x1740 x2758))
(assert (x1740 x3145))
(assert (=> (>= 10000 x45) (= 0 (x4391 x45))))
(assert (= (x2094 (x3614 64 x1863 12)) 64))
(assert (not (x105 (x3121 x1772 x3353 x4071 x2867 x151))))
(assert (x1740 x316))
(assert (= (x2094 (x3614 64 x4284 6)) 64))
(assert (x105 3957931183))
(assert (=> (>= 10000 x1919) (= (x4391 x1919) 0)))
(assert (= (and x4413 x306) x709))
(assert (x2348 x2850))
(assert (=> (>= 10000 x326) (= (x4391 x326) 0)))
(assert (= x3229 (x2019 (x3614 64 x3229 100))))
(assert (x1740 x220))
(assert (=> (<= x2774 10000) (= (x4391 x2774) 0)))
(assert (x1740 x3487))
(assert (x1740 x1482))
(assert (= (=> (and (= false x1047) (= x574 x4423) (= true x2546)) x26) x1750))
(assert (= x3120 (=> (and (= x2476 x2810) (= x4353 x3201) (= x1537 x3542) (= x3065 x3934) (= x1116 x3790) (= x4150 2) (= 0 x2307) (= x4050 x3794) (= x2810 0) (= x791 x2582) (= x3277 x4064) (= x1036 x3294) (= x1752 x3932) (= x1980 x2030) (= x2933 x4012) (= x3563 x3841) (= x1778 x426) (= x3130 x3856)) x801)))
(assert (= x1762 (or (and x3534 (not x2343)) x3042)))
(assert (= (and (not x3680) x2252) x2334))
(assert (< 10000 (x3614 64 x3229 100)))
(assert (x1740 x1858))
(assert (=> (>= 10000 x3542) (= 0 (x4391 x3542))))
(assert (< 10000 (x3614 64 x4339 2)))
(assert (= (x2019 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x259))
(assert (not (x105 (x3121 x1132 x2280 x1443 x2517 x2430))))
(assert (x1740 x1401))
(assert (x1740 x2010))
(assert (x1740 x1608))
(assert (x1740 x1435))
(assert (x1740 x829))
(assert (x1740 x3797))
(assert (x1740 x4505))
(assert (x1740 x3001))
(assert (=> (<= x4152 10000) (= (x4391 x4152) 0)))
(assert (x1740 x3954))
(assert (x1740 x2968))
(assert (= (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799) (x4391 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (= (x4185 (x3614 64 x1515 100)) 100))
(assert (=> (<= x4269 10000) (= (x4391 x4269) 0)))
(assert (x1740 x1660))
(assert (= x1876 (x4185 (x3614 x1954 x402 x1876))))
(assert (x1740 x1816))
(assert (> (x3614 64 x4330 10) 10000))
(assert (not (x105 (x4438 x2268 x1928 x3123 x4389))))
(assert (not (x105 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974))))
(assert (< (x3614 64 x2533 12) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x1572))
(assert (x692 x1831))
(assert (x2348 x2597))
(assert (< (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and (not x4162) x1717) x2385))
(assert (x2854 x426))
(assert (x1740 x3535))
(assert (x1740 x3490))
(assert (= (and x2159 x680) x1295))
(assert (x1740 x742))
(assert (= x2607 (x2789 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (x1740 x927))
(assert (x1740 x4050))
(assert (= x1126 (x4185 (x2749 x736 x2211 x1126 x1110 x163 x4375))))
(assert (= (or x3477 x3991) x3807))
(assert (= (x353 (x4438 x736 x1007 x1021 x727)) x727))
(assert (= (or (and x2443 x3726) (and x3269 x2209) (and x2720 x1398) (and x3638 x2334) (and x274 x2137)) x938))
(assert (x1740 x3796))
(assert (x2854 x1238))
(assert (x1740 x3210))
(assert (x1740 x888))
(assert (= (x3614 64 x3411 12) (x4391 (x3614 64 x3411 12))))
(assert (x1740 x1082))
(assert (= x3122 (x2094 (x4438 x3122 x2306 x1784 x1678))))
(assert (= (and x409 x4132) x824))
(assert (= x1195 (or (and x2733 x594) (and x3836 x1061) (and x2554 x2258))))
(assert (x1740 x1637))
(assert (x1740 x4084))
(assert (x1740 x4248))
(assert (= (and (not x878) x1422) x2568))
(assert (x1740 x4392))
(assert (= x2256 (and (not x2974) x842)))
(assert (x2854 x1516))
(assert (= (x4391 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)))
(assert (x1740 x2228))
(assert (x1740 x685))
(assert (x1740 x1524))
(assert (=> (>= 10000 x1469) (= (x4391 x1469) 0)))
(assert (x1740 x2359))
(assert (x1740 x4488))
(assert (= x3989 (and x1219 (not x3855))))
(assert (x1740 x872))
(assert (=> (<= x2838 10000) (= (x4391 x2838) 0)))
(assert (not (x105 (x3614 64 x819 7))))
(assert (= (x4391 (x3121 x2006 x3687 x1342 x2230 x3944)) (x3121 x2006 x3687 x1342 x2230 x3944)))
(assert (= (x226 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990)) x2048))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x1966 x933 x3210 x4230 x4404)))
(assert (=> (<= x3512 10000) (= 0 (x4391 x3512))))
(assert (x1740 x2364))
(assert (not (x105 (x2749 x1132 x2695 x1710 x1661 x3721 x897))))
(assert (x1740 x1857))
(assert (not (x105 (x3614 64 x1708 2))))
(assert (x1740 x1304))
(assert (= x1966 (x2094 (x1369 x1966 x515 x1527 x1082 x1354 x3796 x679))))
(assert (= x2679 (and x1088 x4010)))
(assert (=> (<= x2079 10000) (= 0 (x4391 x2079))))
(assert (= (and (not x3517) x793) x2416))
(assert (= 64 (x2094 (x3614 64 x647 7))))
(assert (= x3123 (x4185 (x4438 x2268 x1928 x3123 x4389))))
(assert (= x4328 (x353 (x2749 x3061 x2884 x3520 x4328 x2729 x1360))))
(assert (=> (>= 10000 x22) (= 0 (x4391 x22))))
(assert (x1740 x3606))
(assert (= (or x4212 x1187 x2457 x4376 x3092) x3603))
(assert (= (x4391 (x4438 x1847 x1718 x1485 x1149)) (x4438 x1847 x1718 x1485 x1149)))
(assert (x1740 x136))
(assert (< (x2749 x736 x2211 x1126 x1110 x163 x4375) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (and (= (= 0 x767) x153) (or (and x153 (= 128 x3436)) (and (not x153) (and (<= 1 x4499) (= (x1329 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1222) x4499) (= (x3626 (+ 63 x767)) x1222) (= x3436 (+ x4499 128)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x4499))))) x3156) x2961))
(assert (= (x4438 x2313 x2314 x282 x441) (x4391 (x4438 x2313 x2314 x282 x441))))
(assert (=> (>= 10000 x1357) (= 0 (x4391 x1357))))
(assert (x1740 x3635))
(assert (x1740 x1840))
(assert (x1740 x3366))
(assert (= (x4391 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)))
(assert (x1740 x3711))
(assert (x1740 x319))
(assert (x1740 x2076))
(assert (=> (>= 10000 x2517) (= (x4391 x2517) 0)))
(assert (x1740 x825))
(assert (x1740 x2687))
(assert (= x4029 (or x1173 x699)))
(assert (x1740 x1171))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3096 x4440 x4484)))
(assert (x1740 x892))
(assert (x1740 x962))
(assert (< (x3614 x2006 x1506 x2079) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2111 x332) x1646))
(assert (x1740 x1601))
(assert (= (x4381 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) x2972))
(assert (= (x4391 (x3614 64 x4339 6)) (x3614 64 x4339 6)))
(assert (x1740 x2397))
(assert (= (and x2497 x1182) x2893))
(assert (= (or x2776 x3593) x1645))
(assert (x1740 x1270))
(assert (= (and (not x421) x3759) x4533))
(assert (x1740 x1264))
(assert (x1740 x2732))
(assert (x1740 x3563))
(assert (x1740 x3838))
(assert (= x2771 (x226 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719))))
(assert (= (and x3704 x2298) x1927))
(assert (= (=> (and (= 36 x3130) (= x440 false) (= x2901 true)) x3120) x1055))
(assert (x2854 x4549))
(assert (= x2951 (and x2712 (not x1207))))
(assert (=> (<= x1506 10000) (= (x4391 x1506) 0)))
(assert (=> (>= 10000 x1007) (= 0 (x4391 x1007))))
(assert (x1740 x2170))
(assert (=> (>= 10000 x3756) (= 0 (x4391 x3756))))
(assert (x1740 x2254))
(assert (x1740 x3063))
(assert (= x2174 (x4185 (x3121 x3061 x2005 x2174 x3711 x1357))))
(assert (= x250 (x226 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850))))
(assert (= (and x3341 x3675) x2330))
(assert (x1740 x4085))
(assert (= (x2094 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x1772))
(assert (x2854 x2282))
(assert (= (x2019 (x4438 x1132 x607 x653 x2622)) x607))
(assert (= (x4185 (x3614 64 x819 7)) 7))
(assert (= (and (not x881) x2432) x4081))
(assert (= (or (and (not x1851) x2400) x3826) x1911))
(assert (x1740 x4293))
(assert (x1740 x2404))
(assert (x1740 x3714))
(assert (=> (<= x1296 10000) (= (x4391 x1296) 0)))
(assert (= x2695 (x2019 (x2749 x1132 x2695 x1710 x1661 x3721 x897))))
(assert (< 10000 (x3614 x1954 x402 x1876)))
(assert (not (x105 (x3614 64 x3201 36))))
(assert (= x312 (x2019 (x3096 x1132 x312))))
(assert (x2854 x1))
(assert (x1740 x3746))
(assert (= (x226 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x4433))
(assert (=> (>= 10000 x1443) (= (x4391 x1443) 0)))
(assert (= (x2019 (x3614 64 x819 7)) x819))
(assert (= (x2019 (x3614 64 x1858 6)) x1858))
(assert (x1740 x1665))
(assert (=> (<= x1515 10000) (= 0 (x4391 x1515))))
(assert (x1740 x237))
(assert (x1740 x2706))
(assert (x1740 x647))
(assert (> (x3121 x1847 x1714 x2878 x1454 x805) 10000))
(assert (= x863 (and (not x2419) x1978)))
(assert (x1740 x3999))
(assert (= (x3614 64 x168 36) (x4391 (x3614 64 x168 36))))
(assert (not (x105 (x3121 x3122 x3227 x778 x81 x3441))))
(assert (> (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799) 10000))
(assert (< 10000 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)))
(assert (= (x2094 (x4438 x736 x1007 x1021 x727)) x736))
(assert (=> (>= 10000 x2559) (= 0 (x4391 x2559))))
(assert (= x2838 (x353 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (x1740 x386))
(assert (x1740 x335))
(assert (= x908 (x2019 (x3614 64 x908 12))))
(assert (=> (>= 10000 x2663) (= 0 (x4391 x2663))))
(assert (x1740 x590))
(assert (x1740 x2245))
(assert (x1740 x4305))
(assert (x1740 x1999))
(assert (x1740 x2002))
(assert (= (x4391 (x3096 x1847 x1251)) (x3096 x1847 x1251)))
(assert (x1740 x2473))
(assert (=> (>= 10000 x3788) (= 0 (x4391 x3788))))
(assert (= x2013 (and (not x1726) x920)))
(assert (x1740 x2081))
(assert (= (x4391 3957931183) 0))
(assert (x1740 x4423))
(assert (=> (>= 10000 x4356) (= 0 (x4391 x4356))))
(assert (= (x4185 (x3614 64 x4339 36)) 36))
(assert (x1740 x1441))
(assert (= (x4185 (x3614 64 x1316 11)) 11))
(assert (not (x105 (x3096 x3122 x916))))
(assert (x1740 x1313))
(assert (= (and x1189 x3624) x2061))
(assert (x1740 x3169))
(assert (x1740 x2325))
(assert (x1740 x2878))
(assert (= x3720 (and x10 x461)))
(assert (x1740 x41))
(assert (x1740 x1563))
(assert (= 0 (x4391 36180046632115354981904271164172418022085455641023445553456023893925156618240)))
(assert (= (x353 (x1369 x742 x3733 x2944 x1511 x2547 x4535 x3160)) x1511))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x2313 x2397 x2982 x2731 x1277)))
(assert (= x2021 false))
(assert (=> (>= 10000 x4346) (= (x4391 x4346) 0)))
(assert (x1740 x1693))
(assert (x1740 x1366))
(assert (x1740 x764))
(assert (x1740 x4527))
(assert (x1740 x2538))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3614 64 x3229 100)))
(assert (= (x3614 x3122 x4134 x3081) (x4391 (x3614 x3122 x4134 x3081))))
(assert (=> (<= x4201 10000) (= (x4391 x4201) 0)))
(assert (x1740 x3856))
(assert (= (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365) (x4391 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365))))
(assert (= (x226 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) x3793))
(assert (x1740 x424))
(assert (x1740 x3527))
(assert (x1740 x114))
(assert (x1740 x2835))
(assert (= (x353 (x4438 x1772 x3892 x336 x1411)) x1411))
(assert (= x1977 (x1339 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (x1740 x1790))
(assert (x1740 x3932))
(assert (= x1513 (x353 (x3121 x742 x2215 x2202 x1513 x1546))))
(assert (x1740 x2532))
(assert (x1740 x1554))
(assert (= x1268 (=> (and (= x1853 (x1269 x3542)) (= (+ x2311 x2578) x3327) (= x3948 x3327) (= (x2098 x2774) x2311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3327) (< (+ x2311 x2578) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2521 (x1329 255 x2282)) (= x2325 x2438) (>= x3327 0) (= x2155 (- x1853 x2578)) (= 2 x391)) x4369)))
(assert (x1740 x4093))
(assert (= x2040 (x2789 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (not (x105 (x2749 x2006 x1791 x108 x4406 x2320 x3533))))
(assert (x1740 x3272))
(assert (= x2224 (=> (= x3041 (not (< 32 x185))) (and x3041 x3480))))
(assert (= x1710 (x4185 (x2749 x1132 x2695 x1710 x1661 x3721 x897))))
(assert (=> (>= 10000 x108) (= (x4391 x108) 0)))
(assert (x1740 x177))
(assert (= x2867 (x353 (x3121 x1772 x3353 x4071 x2867 x151))))
(assert (x1740 x3266))
(assert (x1740 x3410))
(assert (x1740 x3834))
(assert (= (and x385 (not x4436)) x1695))
(assert (x1740 x619))
(assert (= x1052 (or x2996 x309 x1951 x2029 x3427)))
(assert (x1740 x4535))
(assert (= x501 (x4185 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286))))
(assert (x304 x1681))
(assert (= (x4391 (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)) (x2631 x3122 x4105 x2436 x4193 x2571 x250 x1327 x1850)))
(assert (x1740 x3316))
(assert (= (x4185 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) x543))
(assert (= x1545 (and x1309 x3322)))
(assert (x1740 x291))
(assert (x1740 x211))
(assert (x1740 x1056))
(assert (x1740 x287))
(assert (x1740 x3850))
(assert (= (=> (and (= x1878 x1629) (= x798 x1663)) x525) x2913))
(assert (x1740 x2783))
(assert (x1740 x3864))
(assert (x105 1461501637330902918203684832716283019655932542975))
(assert (x1740 x4206))
(assert (x1740 x4143))
(assert (= (x4185 (x3614 64 x3891 36)) 36))
(assert (= x742 (x2094 (x3614 x742 x4509 x573))))
(assert (= x3514 (=> (and (or (not x2343) x2343) (= (= 0 x2297) x2343)) x4412)))
(assert (x1740 x1690))
(assert (x1740 x3761))
(assert (= x4303 (and x3039 (not x2201))))
(assert (x1740 x3455))
(assert (=> (<= x2012 10000) (= (x4391 x2012) 0)))
(assert (= (x4391 (x3614 64 x4284 36)) (x3614 64 x4284 36)))
(assert (x1740 x3702))
(assert (= (=> (and (or (and (and (<= 0 x4083) (= x3207 x2319) (= x2926 x1127) (= x3609 x1423) (= x3647 x2354) (= x3073 (ite (= x2584 0) x1153 0)) (= (+ x4485 x3073) x4083) (= x2716 x23) (= x975 x4368) (= x1781 x3378) (= x795 x484) (= x2505 (x2697 x1752)) (< (+ x3073 x4485) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1689 (- x2505 x3073)) (= x485 x2458) (= x4372 x4077) (= x2551 x4365) (= x4083 x625) (= x533 x2544) (= x562 x2342) (= x1133 x3049) (= x4167 x4441) (= (x1185 x3591) x4485) (= x3954 x2584) (<= x4083 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x80) (and (and (= x23 x2716) (= x3954 x2584) (= x2354 x3647) (= x975 x4368) (= x1127 x2926) (= x4441 x4167) (= x4077 x4372) (= x3609 x1423) (= x1133 x3049) (= x562 x2342) (= x2319 x3207) (= x4365 x2551) (= x485 x2458) (= x1781 x3378) (= x795 x484) (= x2544 x533)) (not x80))) (= (= 0 x2584) x80)) x63) x3576))
(assert (x1740 x1132))
(assert (x1740 x725))
(assert (not (x105 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972))))
(assert (x1740 x2320))
(assert (< 10000 (x3121 x736 x3286 x2163 x1635 x3508)))
(assert (x1740 x2253))
(assert (= (x4391 26959946667150639794667015087019630673637144422540572481103610249215) 0))
(assert (=> (<= x3579 10000) (= (x4391 x3579) 0)))
(assert (= (x1339 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152)) x2625))
(assert (= (x4185 (x3614 64 x2766 36)) 36))
(assert (= (x2094 (x4438 x722 x2191 x2213 x148)) x722))
(assert (= x2258 (and x1670 (not x1395))))
(assert (x1740 x2547))
(assert (x1740 x1643))
(assert (= x4440 (x2094 (x3096 x4440 x4484))))
(assert (x1740 x654))
(assert (x1740 x3153))
(assert (= (x2019 (x3096 x2006 x124)) x124))
(assert (x1740 x1455))
(assert (= (=> (and (= false x3008) (= x3130 36) (= x3918 true)) x3120) x553))
(assert (x1740 x3330))
(assert (= 64 (x2094 (x3614 64 x1708 2))))
(assert (=> (>= 10000 x1546) (= 0 (x4391 x1546))))
(assert (= (and x2807 x4522) x3354))
(assert (> (x3121 x2268 x4394 x3334 x3409 x849) 10000))
(assert (= (x3121 x1966 x933 x3210 x4230 x4404) (x4391 (x3121 x1966 x933 x3210 x4230 x4404))))
(assert (x2854 x3889))
(assert (not (x105 (x4438 x4440 x4356 x4069 x2949))))
(assert (= x4284 (x2019 (x3614 64 x4284 6))))
(assert (= x1022 (x4185 (x2749 x1806 x3606 x1022 x1584 x1469 x2466))))
(assert (= x79 (x4185 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (=> (<= x2063 10000) (= 0 (x4391 x2063))))
(assert (> (x2749 x3122 x2773 x1507 x214 x337 x3756) 10000))
(assert (= x2313 (x2094 (x3096 x2313 x4036))))
(assert (= (x2789 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379)) x1547))
(assert (x1740 x453))
(assert (x1740 x2560))
(assert (x1740 x1941))
(assert (=> (<= x4484 10000) (= (x4391 x4484) 0)))
(assert (=> (>= 10000 x1336) (= 0 (x4391 x1336))))
(assert (= 0 (x4391 1722637450)))
(assert (x1740 x1745))
(assert (x1740 x4012))
(assert (= (x4391 (x3614 64 x3891 36)) (x3614 64 x3891 36)))
(assert (= (x353 (x1369 x722 x1167 x1166 x1624 x2140 x2039 x2744)) x1624))
(assert (= x1717 (and (not x898) x313)))
(assert (x1740 x4078))
(assert (x1740 x751))
(assert (=> (>= 10000 x1211) (= 0 (x4391 x1211))))
(assert (= x1549 (and x2787 x295)))
(assert (= (x2094 (x3614 64 x3229 100)) 64))
(assert (x1740 x341))
(assert (= x3039 (and x1934 x2061)))
(assert (= (x4391 (x2749 x1806 x3606 x1022 x1584 x1469 x2466)) (x2749 x1806 x3606 x1022 x1584 x1469 x2466)))
(assert (< (x3614 64 x3891 36) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3980 10000) (= (x4391 x3980) 0)))
(assert (not (x105 (x2749 x722 x2659 x1620 x1289 x950 x3715))))
(assert (= x2275 (and x2487 x4140)))
(assert (= (x2019 (x3614 64 x168 36)) x168))
(assert (= x2439 (and x3689 x1000)))
(assert (= x2647 (or x4081 x3231 x3403 x4483 x3225)))
(assert (= x2023 (x4185 (x1369 x2268 x3690 x2023 x74 x1350 x4258 x3780))))
(assert (= (=> (and (= x85 true) (= x3256 false) (= 36 x4423)) x26) x202))
(assert (x1740 x2427))
(assert (= x4036 (x2019 (x3096 x2313 x4036))))
(assert (= (x2789 (x3121 x2313 x2397 x2982 x2731 x1277)) x1277))
(assert (= x3524 (x2019 (x4438 x1954 x3524 x1389 x2377))))
(assert (= (x2019 (x3614 64 x2796 6)) x2796))
(assert (x1740 x1251))
(assert (= (=> (and (= true x1383) (= x4423 x2129) (= false x4504)) x26) x2567))
(assert (= x4400 (x2019 (x3614 x736 x4400 x1379))))
(assert (=> (<= x2048 10000) (= 0 (x4391 x2048))))
(assert (= 0 (x4391 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (x1740 x1447))
(assert (=> (<= x832 10000) (= 0 (x4391 x832))))
(assert (x304 x394))
(assert (=> (>= 10000 x3245) (= 0 (x4391 x3245))))
(assert (not (x105 (x3614 64 x1323 100))))
(assert (=> (>= 10000 x4503) (= 0 (x4391 x4503))))
(assert (=> (>= 10000 x4035) (= 0 (x4391 x4035))))
(assert (x1740 x3172))
(assert (not (x105 (x3614 64 x2533 12))))
(assert (= x415 (x353 (x4438 x3061 x144 x2535 x415))))
(assert (=> (>= 10000 x2939) (= (x4391 x2939) 0)))
(assert (< 10000 (x3614 64 x3891 36)))
(assert (x2854 x3786))
(assert (x1740 x1890))
(assert (= x1420 (and x1646 (not x455))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x742 x2215 x2202 x1513 x1546)))
(assert (x1740 x4109))
(assert (x1740 x2818))
(assert (x1740 x74))
(assert (x1740 x1853))
(assert (= x1059 (and x2792 (not x1825))))
(assert (x1740 x1962))
(assert (x1740 x4147))
(assert (< (x3614 64 x4339 2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1436) (= (x4391 x1436) 0)))
(assert (x1740 x2923))
(assert (= x338 (x4185 (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990))))
(assert (= x4339 (x2019 (x3614 64 x4339 36))))
(assert (= (and (not x915) x3755) x2807))
(assert (x1740 x3822))
(assert (x1740 x2579))
(assert (x2854 x1922))
(assert (=> (<= x2799 10000) (= (x4391 x2799) 0)))
(assert (x1740 x1323))
(assert (x1740 x1513))
(assert (x1740 x210))
(assert (x1740 x3144))
(assert (x1740 x2441))
(assert (= x4242 (x1339 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (x2348 x632))
(assert (= (x1339 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490)) x3490))
(assert (x1740 x1720))
(assert (= (and x2717 x3243) x488))
(assert (not (x105 (x3614 64 x168 36))))
(assert (x1740 x256))
(assert (x2854 x3366))
(assert (x1740 x1977))
(assert (=> (>= 10000 x2289) (= (x4391 x2289) 0)))
(assert (= 0 (x4391 1341992515)))
(assert (x1740 x625))
(assert (x1740 x4297))
(assert (x1740 x3406))
(assert (= (and (not x2346) x50) x1173))
(assert (= x3942 (or x3503 x856 x531)))
(assert (=> (>= 10000 x736) (= (x4391 x736) 0)))
(assert (= x3286 (x2019 (x3121 x736 x3286 x2163 x1635 x3508))))
(assert (= x1162 (x2019 (x3096 32 x1162))))
(assert (< (x1369 x4440 x3405 x338 x477 x3298 x2048 x1990) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2345))
(assert (x1740 x4532))
(assert (x1740 x1714))
(assert (= x525 (=> (and (= x1197 x1629) (= x1492 x1663)) x997)))
(assert (= (x226 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x3729))
(assert (x2854 x4064))
(assert (= (x1339 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906)) x3673))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2749 x2006 x1791 x108 x4406 x2320 x3533)))
(assert (x1740 x131))
(assert (= x3772 (x2019 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (= x588 (=> (and (= x2038 (< 0 x2538)) (= x2538 (x4315 (- x3795 (mod (ite (< x1220 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (ite (< 0 x3795) x974 (x1329 127 x974)) x1220) (= (div x23 2) x974) (= (x1329 1 x23) x3795)) (and (=> (and x2038 (and (= (= 0 x2999) x4092) (= (x1329 1 x23) x2999))) (and (=> (and (= x810 (< 0 x1220)) (not x4092)) (and (=> (not x810) x4395) (=> x810 x2498))) (=> x4092 x3461))) (=> (not x2038) x626)))))
(assert (=> (<= x2522 10000) (= 0 (x4391 x2522))))
(assert (x1740 x3436))
(assert (x1740 x745))
(assert (x1740 x2373))
(assert (x2854 x1831))
(assert (x1740 x674))
(assert (=> (>= 10000 x214) (= (x4391 x214) 0)))
(assert (x1740 x608))
(assert (= x4473 (x353 (x3121 x1954 x3530 x79 x4473 x2607))))
(assert (= x3915 (and x858 x3397)))
(assert (= x4048 (x4185 (x1369 x1772 x1498 x4048 x3757 x1547 x2489 x2379))))
(assert (x1740 x3619))
(assert (= (x3614 64 x2533 12) (x4391 (x3614 64 x2533 12))))
(assert (= x16 (and x3328 (not x32))))
(assert (x1740 x3926))
(assert (= (x353 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) x1267))
(assert (< (x3121 x2006 x3687 x1342 x2230 x3944) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3122 (x2094 (x3121 x3122 x3227 x778 x81 x3441))))
(assert (x1740 x3663))
(assert (> (x3614 64 x1858 6) 10000))
(assert (= (x2019 (x3096 x1806 x904)) x904))
(assert (= (x353 (x2749 x4440 x3513 x1390 x1100 x4158 x1285)) x1100))
(assert (x1740 x3193))
(assert (x1740 x2032))
(assert (x1740 x330))
(assert (= (x4185 (x3614 64 x4251 36)) 36))
(assert (x1740 x3066))
(assert (= (x1339 (x2631 x2313 x2384 x2808 x3646 x1849 x3793 x3245 x2743)) x3245))
(assert (not (x105 (x3614 64 x3579 2))))
(assert (=> (>= 10000 x1858) (= 0 (x4391 x1858))))
(assert (x105 1914215))
(assert (= (or x2363 (and (not x3960) x1521)) x1309))
(assert (x2348 x4549))
(assert (= (and (not x2566) x400) x472))
(assert (x2854 x4439))
(assert (= x4498 (x1339 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482))))
(assert (= (and x80 x2596) x4128))
(assert (x2854 x2967))
(assert (= (x353 (x2631 x742 x565 x292 x1626 x2820 x4392 x3951 x2882)) x1626))
(assert (=> (>= 10000 x4297) (= 0 (x4391 x4297))))
(assert (= (x4185 (x2631 x1772 x259 x3877 x612 x911 x4433 x2254 x1077)) x3877))
(assert (x1740 x3876))
(assert (= (x4391 3812630263) 0))
(assert (x1740 x3980))
(assert (x1740 x2690))
(assert (x1740 x4551))
(assert (= 36 (x4185 (x3614 64 x1313 36))))
(assert (= (or (and (not x454) x3878) (and x2717 (not x3243))) x4020))
(assert (x1740 x4242))
(assert (= x3777 (=> (= x2620 (not (> x4028 32))) (and x2620 x2484))))
(assert (= (x4391 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)))
(assert (x1740 x2980))
(assert (= (x4391 (x3096 x2313 x4036)) (x3096 x2313 x4036)))
(assert (x1740 x1507))
(assert (x1740 x485))
(assert (< 10000 (x3614 x4440 x983 x1770)))
(assert (=> (>= 10000 x3690) (= (x4391 x3690) 0)))
(assert (x1740 x3645))
(assert (= 10 (x4185 (x3614 64 x3700 10))))
(assert (= (x4391 (x3614 64 x3821 36)) (x3614 64 x3821 36)))
(assert (x1740 x2068))
(assert (x1740 x2150))
(assert (< 10000 (x1369 x3061 x1999 x1981 x4396 x677 x1699 x1974)))
(assert (= (x2019 (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902)) x3594))
(assert (= (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062) (x4391 (x2631 x3061 x331 x3487 x3099 x2040 x3928 x1601 x3062))))
(assert (x1740 x3469))
(assert (=> (<= x3365 10000) (= (x4391 x3365) 0)))
(assert (x1740 x2593))
(assert (x1740 x1289))
(assert (x1740 x253))
(assert (x1740 x1101))
(assert (= (x2094 (x3121 x2313 x2397 x2982 x2731 x1277)) x2313))
(assert (= (and x107 x4273) x2719))
(assert (x304 x1890))
(assert (= x4010 (and x2255 (not x1976))))
(assert (= (x4391 (x3614 64 x4339 2)) (x3614 64 x4339 2)))
(assert (= 0 (x4391 18563399957492015340621713183830377045030061062230639968016343144629396307968)))
(assert (x1740 x4137))
(assert (x1740 x2797))
(assert (x1740 x2143))
(assert (x1740 x213))
(assert (= x1847 (x2094 (x2749 x1847 x1783 x384 x624 x850 x2242))))
(assert (< (x4438 x1772 x3892 x336 x1411) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x4108))
(assert (=> (>= 10000 x1511) (= (x4391 x1511) 0)))
(assert (x1740 x1718))
(assert (x1740 x3202))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x722 x622 x4254 x3336 x537 x3165 x4498 x4482)))
(assert (= x842 (and x992 x2062)))
(assert (= (and x863 x2734) x1023))
(assert (x1740 x2584))
(assert (x1740 x995))
(assert (< (x3614 64 x3700 10) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x84))
(assert (= (=> (and (or x3171 (not x3171)) (= (= x570 0) x3171)) x381) x1364))
(assert (= x1546 (x2789 (x3121 x742 x2215 x2202 x1513 x1546))))
(assert (= x2428 (and x1548 x3895)))
(assert (x1740 x1336))
(assert (= 0 (x4391 35477284059277649309253622239531857712935939529143554018288893216769000107873)))
(assert (= (and x2665 x697) x4225))
(assert (x1740 x1143))
(assert (=> (>= 10000 x84) (= 0 (x4391 x84))))
(assert (= (and x1879 x777) x2555))
(assert (= (x4391 (x3121 x1806 x892 x84 x1640 x1925)) (x3121 x1806 x892 x84 x1640 x1925)))
(assert (= x1877 (x4185 (x3614 x1847 x2738 x1877))))
(assert (x1740 x1543))
(assert (x1740 x3936))
(assert (x1740 x1376))
(assert (x2348 x927))
(assert (x1740 x4555))
(assert (x1740 x4498))
(assert (= x1001 (=> (= (< 0 x2403) x195) (and (=> (and x195 (and (= x3284 x216) (= x2032 x1501) (= x3670 x2577) (= x223 x383) (= x524 x829) (= x1319 x4401) (= x3973 x3106))) x676) (=> (and (and (= false x321) (= x1070 4) (= true x3783)) (not x195)) x1010)))))
(assert (x1740 x270))
(assert (= (x2019 (x3614 64 x1421 (ite (= x2313 0) x2088 (ite (<= x2313 32) x2987 (ite (>= 64 x2313) x823 (ite (<= x2313 96) x311 (ite (>= 128 x2313) x922 (ite (>= 160 x2313) x1565 (ite (<= x2313 192) x2988 (ite (>= 224 x2313) x2034 x326)))))))))) x1421))
(assert (= (x4185 (x3121 x1966 x933 x3210 x4230 x4404)) x3210))
(assert (x1740 x1672))
(assert (= 64 (x2094 (x3614 64 x1858 6))))
(assert (= (x4391 (x2749 x1772 x3512 x825 x3882 x1296 x33)) (x2749 x1772 x3512 x825 x3882 x1296 x33)))
(assert (= x3788 (x353 (x4438 x1966 x1264 x832 x3788))))
(assert (< (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2287 10000) (= (x4391 x2287) 0)))
(assert (= (x2019 (x3614 64 x1399 6)) x1399))
(assert (= (x4391 (x3096 x722 x22)) (x3096 x722 x22)))
(assert (= (x2094 (x4438 x1772 x3892 x336 x1411)) x1772))
(assert (x1740 x4028))
(assert (x1740 x1075))
(assert (x1740 x2285))
(assert (=> (<= x471 10000) (= (x4391 x471) 0)))
(assert (= 103 (x2019 (x3096 32 103))))
(assert (x1740 x1593))
(assert (x1740 x235))
(assert (=> (<= x4108 10000) (= 0 (x4391 x4108))))
(assert (= (x4391 (x2749 x2006 x1791 x108 x4406 x2320 x3533)) (x2749 x2006 x1791 x108 x4406 x2320 x3533)))
(assert (x1740 x1896))
(assert (x1740 x507))
(assert (= (=> (and (= x3035 x2800) (= 0 x965) (= x2271 x2639) (= 0 x2800)) x855) x3602))
(assert (= x2795 (=> (and (= (x3626 (+ 128 x2839)) x1401) (= x2183 (x3626 (+ x1460 32))) (= x736 (x4315 (- x1847 32))) (= (x3626 (+ x2839 128)) x1460) (= (x4315 (- x2183 128)) x1847) (= x3292 (x3614 64 x647 7)) (= x1514 (<= x736 224))) (and x1514 (=> (and (= x4201 (x552 192)) (= (x552 128) x558) (= x1007 (x552 128)) (= x1021 (x552 160)) (= (x552 224) x1436) (= (x552 160) x4035) (= (ite (= x736 0) x890 (ite (>= 32 x736) x283 (ite (<= x736 64) x97 (ite (<= x736 96) x4446 (ite (>= 128 x736) x3946 (ite (>= 160 x736) x4427 (ite (<= x736 192) x4181 (ite (<= x736 224) x2328 x1822)))))))) x2412) (= (x552 128) x3286) (= x4181 (x1369 x736 x1164 x543 x4201 x1436 x3722 x3365)) (= x3388 (x552 256)) (= x4446 (x4438 x736 x1007 x1021 x727)) (= x543 (x552 160)) (= x1212 (x552 224)) (= x3365 (x552 288)) (= (x552 320) x2972) (= x1110 (x552 192)) (= x4427 (x2749 x736 x2211 x1126 x1110 x163 x4375)) (= (x552 224) x163) (= (x552 128) x2211) (= x4375 (x552 256)) (= x3508 (x552 224)) (= (x552 192) x727) (= (x552 256) x3722) (= x1635 (x552 192)) (= (x552 128) x2939) (= (x3096 x736 x558) x283) (= x1126 (x552 160)) (= x3946 (x3121 x736 x3286 x2163 x1635 x3508)) (= (x552 160) x1379) (= x3510 (x552 192)) (= (>= 224 x1847) x4026) (= x4400 (x552 128)) (= x2328 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) (= x4117 (x552 288)) (= x1164 (x552 128)) (= x97 (x3614 x736 x4400 x1379)) (= x890 (x1465 0)) (= x2163 (x552 160))) (and (=> (and (= (x552 288) x1977) (= x1591 (x552 224)) (= (x3626 (+ 32 x982)) x3205) (= (* x1499 32) x982) (= x3482 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1172) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1172)) (< x1172 32)))) (or (>= x2839 115792089237316195423570985008687907853269984665640564039457584007913129639905) (<= x2839 115792089237316195423570985008687907853269984665640564039457584007913129639744)) (= 128 x4103) (= x3594 (x552 128)) (= x2715 (x552 160)) (= x805 (x552 224)) (= (x552 256) x4503) (= x303 (x3626 (+ x3914 31))) (= (x552 192) x1454) (= x1251 (x552 128)) (= x21 (x3626 (+ x3396 32))) (= (x3626 (+ x21 x3914)) x1732) (= x1149 (x552 192)) (= x3396 (+ x1964 160)) (= x2381 (x552 128)) (= x1877 (x552 160)) (= (x552 160) x2878) (= x1783 (x552 128)) (= (x1369 x1847 x3594 x2715 x453 x387 x4503 x2902) x1235) (= (x552 224) x850) (= (x3614 64 x1856 (ite (= x1847 0) x408 (ite (>= 32 x1847) x2946 (ite (>= 64 x1847) x1561 (ite (<= x1847 96) x240 (ite (>= 128 x1847) x2899 (ite (>= 160 x1847) x1119 (ite (>= 192 x1847) x1235 (ite (<= x1847 224) x172 x324))))))))) x3085) (= x408 (x1465 0)) (= (x552 192) x205) (= x172 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)) (= (x552 128) x1714) (= (x552 160) x3830) (= (x552 320) x3813) (= x1499 (div x303 32)) (= x1172 (x2836 x3396)) (= (x552 128) x2738) (= x1561 (x3614 x1847 x2738 x1877)) (= (x552 160) x384) (= (x552 128) x1718) (= x453 (x552 192)) (= x418 (x552 256)) (= (x552 160) x1485) (= x624 (x552 192)) (= x387 (x552 224)) (= x2946 (x3096 x1847 x1251)) (= x1964 (* x3653 32)) (= (x3626 (+ x3396 x3205)) x130) (= x2899 (x3121 x1847 x1714 x2878 x1454 x805)) (= x1119 (x2749 x1847 x1783 x384 x624 x850 x2242)) (= (x552 256) x2242) (= (x3626 (+ x2839 31)) x3779) (<= 161 x130) (< x3396 x130) (= (x552 288) x2902) (= (x3626 (+ 160 x2839)) x1690) (= x240 (x4438 x1847 x1718 x1485 x1149)) (= (div x3779 32) x3653)) (and (=> (and x3482 (and (= false x2637) (= 0 x3601) (= true x2459))) x3678) (=> (not x3482) x3854))) x4026))))))
(assert (= (=> (and (= (= x4200 0) x1343) (or (not x1343) x1343)) x2691) x2970))
(assert (x1740 x3347))
(assert (=> (>= 10000 x1847) (= 0 (x4391 x1847))))
(assert (=> (>= 10000 x1212) (= (x4391 x1212) 0)))
(assert (x1740 x1877))
(assert (x1740 x3037))
(assert (x1740 x4440))
(assert (x1740 x3508))
(assert (= (and x286 x708) x1571))
(assert (x1740 x2993))
(assert (x1740 x394))
(assert (x1740 x4473))
(assert (x1740 x2235))
(assert (= x205 (x353 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813))))
(assert (x1740 x4230))
(assert (= x664 (and x3627 x427)))
(assert (=> (<= x2245 10000) (= (x4391 x2245) 0)))
(assert (x1740 x3779))
(assert (= x3892 (x2019 (x4438 x1772 x3892 x336 x1411))))
(assert (x1740 x2192))
(assert (x1740 x4531))
(assert (x1740 x3495))
(assert (x1740 x3722))
(assert (= (x4391 (x2749 x1132 x2695 x1710 x1661 x3721 x897)) (x2749 x1132 x2695 x1710 x1661 x3721 x897)))
(assert (x1740 x1614))
(assert (x1740 x2215))
(assert (x2854 x3489))
(assert (x1740 x3348))
(assert (=> (>= 10000 x2820) (= 0 (x4391 x2820))))
(assert (x1740 x2377))
(assert (x1740 x2570))
(assert (=> (<= x2379 10000) (= (x4391 x2379) 0)))
(assert (x1740 x1658))
(assert (x1740 x3105))
(assert (= (x4391 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)))
(assert (x1740 x2981))
(assert (not (x105 (x3096 x2006 x124))))
(assert (x1740 x4037))
(assert (= (=> (and (= x3026 x485) (= x2584 x1183) (= x4077 x2560) (= x973 x2926) (= x562 x1720) (= x1315 x795) (= x2716 x53) (= x1338 x4368) (= x4365 x1226) (= x1781 x1828) (= x2143 x4167) (= x2544 x3717) (= x1330 x3609) (= x2354 x3703) (= x3049 x2274) (= x2067 x3207)) x3576) x3798))
(assert (x2854 x2865))
(assert (x1740 x541))
(assert (= 64 (x2094 (x3614 64 x2342 0))))
(assert (x1740 x792))
(assert (x1740 x738))
(assert (x1740 x3800))
(assert (=> (>= 10000 x2040) (= (x4391 x2040) 0)))
(assert (x1740 x3099))
(assert (not (x105 (x3614 x2268 x4292 x4285))))
(assert (= 64 (x2094 (x3614 64 x4339 6))))
(assert (= x3190 (x353 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027))))
(assert (x105 44057028636630039105102054091366763171729008530599747929804322044178077843456))
(assert (= x4088 (and x2439 x1029)))
(assert (x1740 x501))
(assert (=> (<= x1678 10000) (= 0 (x4391 x1678))))
(assert (= (and x1471 x1859) x4501))
(assert (= (x4185 (x3121 x2006 x3687 x1342 x2230 x3944)) x1342))
(assert (=> (>= 10000 x2242) (= (x4391 x2242) 0)))
(assert (x1740 x1971))
(assert (= (and x1023 x2852) x1232))
(assert (x1740 x1591))
(assert (x1740 x1622))
(assert (= (x4391 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)) (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)))
(assert (x1740 x3227))
(assert (=> (>= 10000 x624) (= (x4391 x624) 0)))
(assert (> (x3614 64 x1197 36) 10000))
(assert (= (x4391 (x2749 x742 x54 x1570 x1753 x3564 x1908)) (x2749 x742 x54 x1570 x1753 x3564 x1908)))
(assert (= (x4391 (x2749 x1954 x2843 x3390 x2895 x2966 x341)) (x2749 x1954 x2843 x3390 x2895 x2966 x341)))
(assert (x1740 x346))
(assert (x1740 x1647))
(assert (= (or x3698 x2411) x686))
(assert (= (x1339 (x1369 x1132 x2245 x2875 x2701 x2812 x2771 x3719)) x3719))
(assert (x1740 x3994))
(assert (x1740 x2179))
(assert (=> (<= x2404 10000) (= (x4391 x2404) 0)))
(assert (x1740 x3870))
(assert (= x2844 (and x2497 (not x1182))))
(assert (x1740 x591))
(assert (= 64 (x2094 (x3614 64 x1197 36))))
(assert (= x47 (x2019 (x3096 x3061 x47))))
(assert (x1740 x3128))
(assert (= (x2789 (x2631 x1806 x1078 x968 x3190 x3666 x3729 x3408 x1027)) x3666))
(assert (= (and x971 x1763) x3747))
(assert (= (x4391 21250608054068894920771655176311299370521669075471658173068242729727453822976) 0))
(assert (= (and x13 x3884) x546))
(assert (= (x2019 (x3614 x3122 x4134 x3081)) x4134))
(assert (= (and x1076 x1502) x2351))
(assert (= x329 (and x1083 x3839)))
(assert (= x3122 (x2094 (x1369 x3122 x703 x2983 x2838 x2179 x439 x4242))))
(assert (=> (>= 10000 x1699) (= (x4391 x1699) 0)))
(assert (= (x4391 (x3614 64 x256 10)) (x3614 64 x256 10)))
(assert (> (x3614 64 x2559 6) 10000))
(assert (=> (>= 10000 x2430) (= (x4391 x2430) 0)))
(assert (x1740 x2738))
(assert (=> (<= x2189 10000) (= (x4391 x2189) 0)))
(assert (x1740 x1546))
(assert (x1740 x148))
(assert (= x144 (x2019 (x4438 x3061 x144 x2535 x415))))
(assert (x1740 x4538))
(assert (not (x105 (x3614 64 x4441 36))))
(assert (=> (<= x1021 10000) (= 0 (x4391 x1021))))
(assert (=> (>= 10000 x4105) (= 0 (x4391 x4105))))
(assert (=> (>= 10000 x4328) (= (x4391 x4328) 0)))
(assert (= (x3614 64 x2602 7) (x4391 (x3614 64 x2602 7))))
(assert (= (x4185 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490)) x636))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3121 x722 x1336 x1923 x495 x2249)))
(assert (= (x2019 (x3121 x722 x1336 x1923 x495 x2249)) x1336))
(assert (= x1212 (x2789 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972))))
(assert (= (x2094 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) x736))
(assert (=> (<= x3286 10000) (= (x4391 x3286) 0)))
(assert (x1740 x149))
(assert (= (x4381 (x2631 x1954 x784 x501 x3178 x2187 x1524 x3578 x4286)) x4286))
(assert (= (and x2555 (not x1827)) x4295))
(assert (= (x4391 (x3614 64 x2796 6)) (x3614 64 x2796 6)))
(assert (= x3785 (=> (= x3587 (+ x1837 x27)) x38)))
(assert (=> (>= 10000 x4155) (= (x4391 x4155) 0)))
(assert (= (x2094 (x3121 x1847 x1714 x2878 x1454 x805)) x1847))
(assert (x1740 x4066))
(assert (= x468 (and x106 x818)))
(assert (= (x2749 x1847 x1783 x384 x624 x850 x2242) (x4391 (x2749 x1847 x1783 x384 x624 x850 x2242))))
(assert (x1740 x4090))
(assert (x1740 x1937))
(assert (x1740 x1072))
(assert (=> (<= x1784 10000) (= 0 (x4391 x1784))))
(assert (=> (<= x3236 10000) (= (x4391 x3236) 0)))
(assert (= x3806 (and x554 (not x4514))))
(assert (= (x4185 (x2631 x736 x2939 x4035 x3510 x1212 x3388 x4117 x2972)) x4035))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639744))
(assert (= x4327 (=> (and (= (x3626 (+ 32 x3952)) x4045) (= (* x2221 32) x2461) (= (div (+ 31 x845) 32) x585) (= (x3626 (+ 32 x2390)) x446) (= (x3626 (+ x845 x4045)) x2700) (= (x3626 (+ (mod (+ x2444 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3952)) x420) (= (x3626 (+ x420 36)) x2041) (= x4287 (x3626 (+ x2041 32))) (< x3952 x420) (= (x3626 (+ x3843 x722)) x1555) (= (> x3669 0) x3523) (<= 1 x3952) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2858) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3952) (<= x2858 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x510 150) (= (x3626 (+ x2858 (mod (+ x2461 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x3952) (> x3952 x2858) (<= 2 x420) (= (* x585 32) x2444) (= x3669 (x789 x2858)) (= (x3626 (+ x2858 32)) x3843) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2858) (= x2221 (div (+ x722 31) 32)) (= (x3626 (+ 128 x2041)) x2390)) (and (=> (and x3523 (and (= (< 32 x3669) x3624) (= x2378 (x2801 x3843)))) (and (=> (not x3624) x1186) (=> (and (and (= (x3626 (+ 32 x446)) x3800) (= x3962 (x3626 (+ x3843 32))) (= (x2417 x3962) x369) (= (< 64 x3669) x1934)) x3624) (and (=> (and (and (= x4002 (x2912 x237)) (= (> x3669 96) x2201) (= x237 (x3626 (+ x3843 64))) (= x4072 (x3626 (+ x446 64)))) x1934) (and (=> (not x2201) x1186) (=> x2201 x2686))) (=> (not x1934) x1186))))) (=> (not x3523) x1186)))))
(assert (x2854 x4296))
(assert (x1740 x3851))
(assert (x1740 x502))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572)))
(assert (= x3819 (and x903 x4082)))
(assert (=> (>= 10000 x3936) (= 0 (x4391 x3936))))
(assert (x105 37212044363551391237827125972600881127463135526663889129579209803314629705728))
(assert (< 10000 (x2749 x1966 x1707 x3979 x496 x2463 x390)))
(assert (x1740 x1460))
(assert (x1740 x1176))
(assert (= (and x4465 x978) x2826))
(assert (< (x3614 x1966 x4426 x2522) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1740 x2660))
(assert (= 12 (x4185 (x3614 64 x3202 12))))
(assert (= (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490) (x4391 (x1369 x1806 x4269 x636 x3493 x2092 x3193 x3490))))
(assert (x1740 x2771))
(assert (x304 x1222))
(assert (x2854 x1306))
(assert (x1740 x2672))
(assert (=> (<= x4254 10000) (= 0 (x4391 x4254))))
(assert (= (x4185 (x4438 x1772 x3892 x336 x1411)) x336))
(assert (x1740 x3587))
(assert (= (and x4443 x2490) x2530))
(assert (x2854 x4224))
(assert (x1740 x585))
(assert (x1740 x1850))
(assert (x1740 x2009))
(assert (x1740 x1429))
(assert (x1740 x478))
(assert (= x3880 (x2789 (x2749 x2313 x2520 x3804 x1652 x3880 x2331))))
(assert (x1740 x1966))
(assert (= 0 (x4391 38584857114614344130707641774870441135179346817440091772946614992565446901760)))
(assert (x1740 x2875))
(assert (x1740 x1923))
(assert (x1740 x3525))
(assert (not (x105 (x2631 x1966 x3772 x3496 x714 x725 x2806 x4528 x820))))
(assert (= (and x4211 x1343) x4363))
(assert (x1740 x2846))
(assert (not (x105 (x2749 x1806 x3606 x1022 x1584 x1469 x2466))))
(assert (x1740 x2302))
(assert (not (x105 (x3614 64 x1197 36))))
(assert (x1740 x1196))
(assert (= (x4391 (x3614 64 x3591 2)) (x3614 64 x3591 2)))
(assert (= x2799 (x1339 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (x1740 x4348))
(assert (not (x105 (x3614 64 x4284 2))))
(assert (x1740 x2680))
(assert (x1740 x1360))
(assert (not (x105 (x3614 64 x1455 36))))
(assert (< 10000 (x3096 32 103)))
(assert (= x3272 (x353 (x2631 x4440 x2654 x4538 x3272 x2189 x674 x2625 x4152))))
(assert (= (x226 (x2749 x3061 x2884 x3520 x4328 x2729 x1360)) x1360))
(assert (= (and x4092 x3803) x3425))
(assert (x1740 x3453))
(assert (=> (<= x1977 10000) (= (x4391 x1977) 0)))
(assert (= (x2019 (x3121 x2268 x4394 x3334 x3409 x849)) x4394))
(assert (= (x2019 (x2749 x736 x2211 x1126 x1110 x163 x4375)) x2211))
(assert (= (x226 (x2749 x2268 x1211 x3372 x1267 x2542 x774)) x774))
(assert (= x3730 (x2789 (x2631 x2006 x1020 x3980 x212 x3730 x2900 x3128 x2572))))
(assert (x1740 x3062))
(assert (x1740 x960))
(assert (= x2082 (and (not x4522) x2807)))
(assert (x2854 x576))
(assert (x1740 x6))
(assert (x1740 x3093))
(assert (= x1386 (x2789 (x3121 x4440 x3305 x3268 x363 x1386))))
(assert (x1740 x735))
(assert (x105 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= 0 (x4391 45231284858326638837332416019018714005183587760015845327913118753091066265600)))
(assert (=> (<= x3830 10000) (= (x4391 x3830) 0)))
(assert (= (and x4524 (not x3833)) x2755))
(assert (x1740 x3325))
(assert (=> (<= x4292 10000) (= 0 (x4391 x4292))))
(assert (x1740 x512))
(assert (> (x3614 64 x3202 12) 10000))
(assert (x1740 x112))
(assert (= (x4185 (x2631 x1847 x2381 x3830 x205 x1591 x418 x1977 x3813)) x3830))
(assert (x1740 x261))
(assert (=> (<= x212 10000) (= 0 (x4391 x212))))
(assert (x1740 x1169))
(assert (not (x105 (x1369 x2006 x2480 x3725 x2289 x3745 x2386 x2799))))
(assert (= (and x1670 x1395) x3477))
(assert (= (x2019 (x3614 64 x2533 12)) x2533))
(assert (x1740 x2867))
(assert (x1740 x1027))
(assert (=> (<= x1110 10000) (= (x4391 x1110) 0)))
(assert (=> (<= x2202 10000) (= 0 (x4391 x2202))))
(assert (= (or x4299 x2059) x2849))
(assert (x1740 x3928))
(assert (= (x3614 x4440 x983 x1770) (x4391 (x3614 x4440 x983 x1770))))
(assert (= (and x3558 x503) x227))
(assert (= (x4391 (x4438 x722 x2191 x2213 x148)) (x4438 x722 x2191 x2213 x148)))
(assert (= x2670 (x4185 (x2631 x2268 x2663 x2670 x1983 x4297 x2790 x3673 x906))))
(assert (= (x2019 (x3614 64 x4339 2)) x4339))
(assert (x105 1722637450))
(assert (< (x3614 x736 x4400 x1379) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(check-sat)
(exit)
