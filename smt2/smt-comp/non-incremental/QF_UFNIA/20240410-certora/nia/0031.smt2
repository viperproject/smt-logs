(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x4468 () Bool)
(declare-fun x4402 () Int)
(declare-fun x4682 () Int)
(declare-fun x152 () Int)
(declare-fun x2 () Int)
(declare-fun x3194 () Bool)
(declare-fun x290 () Int)
(declare-fun x1345 () Int)
(declare-fun x1195 () Int)
(declare-fun x2547 () Bool)
(declare-fun x2955 () Int)
(declare-fun x3169 () Int)
(declare-fun x1451 () Int)
(declare-fun x2456 () Int)
(declare-fun x1430 () Int)
(declare-fun x2129 () Int)
(declare-fun x1313 () Int)
(declare-fun x744 () Bool)
(declare-fun x179 () Int)
(declare-fun x2354 () Int)
(declare-fun x2093 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1487 () Int)
(declare-fun x251 () Bool)
(declare-fun x2128 () Int)
(declare-fun x3892 () Int)
(declare-fun x122 () Bool)
(declare-fun x1682 () Int)
(declare-fun x740 () Int)
(declare-fun x4740 () Int)
(declare-fun x3873 () Int)
(declare-fun x2137 () Int)
(declare-fun x1291 () Int)
(declare-fun x2816 () Int)
(declare-fun x2672 () Int)
(declare-fun x3645 () Int)
(declare-fun x1622 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x1732 (Int) Int)
(declare-fun x3104 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x2599 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x2959 () Int)
(declare-fun x1348 () Bool)
(declare-fun x541 () Int)
(declare-fun x3201 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x4793 () Bool)
(declare-fun x4147 () Bool)
(declare-fun x1724 () Int)
(declare-fun x3712 () Int)
(declare-fun x1517 () Int)
(declare-fun x4779 () Int)
(declare-fun x2276 () Int)
(declare-fun x4304 () Bool)
(declare-fun x4049 () Int)
(declare-fun x1259 () Int)
(declare-fun x989 () Int)
(declare-fun x1392 () Int)
(declare-fun x3028 () Int)
(declare-fun x1120 () Bool)
(declare-fun x3648 () Int)
(declare-fun x4528 () Int)
(declare-fun x4523 () Int)
(declare-fun x3557 () Int)
(declare-fun x2870 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x2298 () Int)
(declare-fun x459 () Int)
(declare-fun x1753 () Int)
(declare-fun x4676 () Bool)
(declare-fun x2416 () Int)
(declare-fun x481 () Int)
(declare-fun x1834 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x4716 () Int)
(declare-fun x2889 () Int)
(declare-fun x3350 () Int)
(declare-fun x1283 () Int)
(declare-fun x3103 () Int)
(declare-fun x804 (Int) Int)
(declare-fun x4659 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x4204 () Int)
(declare-fun x3510 () Bool)
(declare-fun x2124 () Int)
(declare-fun x3713 () Int)
(declare-fun x562 () Bool)
(declare-fun x918 () Int)
(declare-fun x3242 () Bool)
(declare-fun x4719 () Bool)
(declare-fun x62 () Bool)
(declare-fun x3264 () Int)
(declare-fun x3588 () Bool)
(declare-fun x4255 () Int)
(declare-fun x891 () Int)
(declare-fun x3274 () Int)
(declare-fun x3666 () Int)
(declare-fun x2168 () Bool)
(declare-fun x2853 () Int)
(declare-fun x4016 () Bool)
(declare-fun x1605 () Int)
(declare-fun x1799 () Bool)
(declare-fun x82 () Bool)
(declare-fun x3967 () Int)
(declare-fun x790 () Int)
(declare-fun x4127 () Int)
(declare-fun x137 () Int)
(declare-fun x1058 () Int)
(declare-fun x3512 () Int)
(declare-fun x399 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x3203 () Int)
(declare-fun x4217 () Int)
(declare-fun x4124 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1117 () Bool)
(declare-fun x3757 () Int)
(declare-fun x3933 () Int)
(declare-fun x3359 () Bool)
(declare-fun x760 () Bool)
(declare-fun x3618 () Bool)
(declare-fun x1226 () Bool)
(declare-fun x3342 () Int)
(declare-fun x3374 () Int)
(declare-fun x1432 () Int)
(declare-fun x4527 () Int)
(declare-fun x4089 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x1505 () Int)
(declare-fun x4496 () Bool)
(declare-fun x1954 () Int)
(declare-fun x1904 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x2813 () Int)
(declare-fun x1044 () Int)
(declare-fun x36 () Int)
(declare-fun x3564 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x2269 () Int)
(declare-fun x2511 () Int)
(declare-fun x2299 () Bool)
(declare-fun x392 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x1047 () Int)
(declare-fun x3073 () Int)
(declare-fun x3299 () Bool)
(declare-fun x3635 () Int)
(declare-fun x1403 () Int)
(declare-fun x3380 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x431 () Int)
(declare-fun x3613 () Bool)
(declare-fun x4106 () Int)
(declare-fun x4257 () Int)
(declare-fun x4721 () Int)
(declare-fun x131 () Int)
(declare-fun x2808 () Bool)
(declare-fun x1053 () Int)
(declare-fun x3023 () Bool)
(declare-fun x74 () Int)
(declare-fun x4024 () Int)
(declare-fun x2673 () Int)
(declare-fun x990 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x3636 () Bool)
(declare-fun x1280 () Int)
(declare-fun x4663 () Bool)
(declare-fun x492 () Int)
(declare-fun x363 () Int)
(declare-fun x2726 () Int)
(declare-fun x4093 () Int)
(declare-fun x415 () Int)
(declare-fun x3580 () Int)
(declare-fun x1349 () Int)
(declare-fun x2163 () Bool)
(declare-fun x4777 () Bool)
(declare-fun x1888 () Int)
(declare-fun x4360 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x616 () Int)
(declare-fun x1122 () Int)
(declare-fun x2179 () Bool)
(declare-fun x2847 () Int)
(declare-fun x1573 () Int)
(declare-fun x693 () Bool)
(declare-fun x2535 () Int)
(declare-fun x444 () Int)
(declare-fun x457 () Int)
(declare-fun x3215 () Int)
(declare-fun x1175 () Int)
(declare-fun x3159 () Bool)
(declare-fun x1095 () Int)
(declare-fun x4541 () Bool)
(declare-fun x3668 () Bool)
(declare-fun x2903 () Int)
(declare-fun x3672 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x124 () Int)
(declare-fun x672 () Bool)
(declare-fun x4011 () Int)
(declare-fun x4160 () Int)
(declare-fun x405 () Bool)
(declare-fun x1266 () Int)
(declare-fun x3416 () Int)
(declare-fun x1294 () Int)
(declare-fun x1729 () Int)
(declare-fun x4563 () Int)
(declare-fun x4446 () Bool)
(declare-fun x3442 () Int)
(declare-fun x1842 () Int)
(declare-fun x1073 () Int)
(declare-fun x3410 () Int)
(declare-fun x1867 () Int)
(declare-fun x2712 () Int)
(declare-fun x3343 () Int)
(declare-fun x1160 () Int)
(declare-fun x3148 () Int)
(declare-fun x997 () Int)
(declare-fun x3891 () Bool)
(declare-fun x4761 () Int)
(declare-fun x2064 () Int)
(declare-fun x2236 () Bool)
(declare-fun x2398 () Int)
(declare-fun x4521 () Int)
(declare-fun x3969 () Bool)
(declare-fun x1359 () Int)
(declare-fun x4090 () Bool)
(declare-fun x2331 () Int)
(declare-fun x1570 () Bool)
(declare-fun x4208 () Bool)
(declare-fun x17 () Bool)
(declare-fun x3772 () Int)
(declare-fun x108 () Int)
(declare-fun x4525 () Bool)
(declare-fun x3604 () Int)
(declare-fun x2974 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x4351 () Int)
(declare-fun x2346 (Int Int Int Int Int Int Int) Int)
(declare-fun x1560 () Bool)
(declare-fun x2766 () Bool)
(declare-fun x4601 () Int)
(declare-fun x1380 () Int)
(declare-fun x2374 () Int)
(declare-fun x3893 () Bool)
(declare-fun x3781 () Int)
(declare-fun x914 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x4675 () Int)
(declare-fun x3460 () Int)
(declare-fun x3815 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x4593 () Int)
(declare-fun x1984 () Int)
(declare-fun x302 () Int)
(declare-fun x138 () Bool)
(declare-fun x3647 () Int)
(declare-fun x801 () Int)
(declare-fun x2584 () Int)
(declare-fun x4077 (Int) Bool)
(declare-fun x3941 () Bool)
(declare-fun x646 () Int)
(declare-fun x2002 () Int)
(declare-fun x2156 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2545 () Bool)
(declare-fun x2915 () Int)
(declare-fun x2116 () Int)
(declare-fun x2977 () Int)
(declare-fun x2820 () Int)
(declare-fun x3625 () Int)
(declare-fun x2570 () Int)
(declare-fun x3397 () Bool)
(declare-fun x103 () Bool)
(declare-fun x410 () Int)
(declare-fun x666 () Bool)
(declare-fun x936 () Bool)
(declare-fun x4081 () Bool)
(declare-fun x3407 () Int)
(declare-fun x2960 () Bool)
(declare-fun x2552 () Int)
(declare-fun x3349 () Int)
(declare-fun x4809 () Int)
(declare-fun x4622 () Bool)
(declare-fun x92 () Int)
(declare-fun x20 () Int)
(declare-fun x1006 () Int)
(declare-fun x2732 () Bool)
(declare-fun x331 () Bool)
(declare-fun x4578 () Int)
(declare-fun x4186 () Int)
(declare-fun x4510 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x3710 () Int)
(declare-fun x1064 () Int)
(declare-fun x2234 () Int)
(declare-fun x447 () Int)
(declare-fun x1034 () Int)
(declare-fun x1149 () Int)
(declare-fun x2830 () Int)
(declare-fun x2118 () Bool)
(declare-fun x1305 () Int)
(declare-fun x3208 () Int)
(declare-fun x1868 () Int)
(declare-fun x2507 () Int)
(declare-fun x3805 () Bool)
(declare-fun x1514 () Int)
(declare-fun x505 () Int)
(declare-fun x340 () Bool)
(declare-fun x4125 () Int)
(declare-fun x3010 () Int)
(declare-fun x765 () Int)
(declare-fun x2578 () Int)
(declare-fun x4476 () Bool)
(declare-fun x4313 () Int)
(declare-fun x1931 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x516 () Int)
(declare-fun x3145 () Int)
(declare-fun x728 () Bool)
(declare-fun x3551 () Int)
(declare-fun x162 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x7 () Int)
(declare-fun x3963 () Int)
(declare-fun x3082 () Bool)
(declare-fun x350 () Int)
(declare-fun x2656 () Int)
(declare-fun x534 () Int)
(declare-fun x1793 () Int)
(declare-fun x428 (Int Int Int) Int)
(declare-fun x3004 () Int)
(declare-fun x3837 () Bool)
(declare-fun x417 () Bool)
(declare-fun x3219 () Int)
(declare-fun x3275 () Int)
(declare-fun x906 () Bool)
(declare-fun x1341 () Int)
(declare-fun x3677 () Int)
(declare-fun x922 () Bool)
(declare-fun x613 () Bool)
(declare-fun x2224 () Int)
(declare-fun x3859 () Bool)
(declare-fun x4000 () Int)
(declare-fun x2078 () Int)
(declare-fun x3479 () Bool)
(declare-fun x3694 () Int)
(declare-fun x4330 () Int)
(declare-fun x3808 () Int)
(declare-fun x854 () Int)
(declare-fun x1131 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x575 () Bool)
(declare-fun x2027 () Int)
(declare-fun x4491 () Bool)
(declare-fun x1315 () Int)
(declare-fun x69 () Int)
(declare-fun x1420 () Int)
(declare-fun x259 () Int)
(declare-fun x3923 () Int)
(declare-fun x4143 () Int)
(declare-fun x884 () Bool)
(declare-fun x105 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x2223 () Int)
(declare-fun x2210 () Bool)
(declare-fun x4203 () Int)
(declare-fun x631 () Bool)
(declare-fun x2373 () Int)
(declare-fun x1921 () Int)
(declare-fun x1298 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x110 () Int)
(declare-fun x3688 () Int)
(declare-fun x3935 () Int)
(declare-fun x1549 () Bool)
(declare-fun x390 () Int)
(declare-fun x4712 () Int)
(declare-fun x209 () Int)
(declare-fun x1379 () Bool)
(declare-fun x2382 () Int)
(declare-fun x3128 () Int)
(declare-fun x2980 () Bool)
(declare-fun x419 () Int)
(declare-fun x2665 () Int)
(declare-fun x1655 () Int)
(declare-fun x620 () Int)
(declare-fun x2344 () Bool)
(declare-fun x2240 () Int)
(declare-fun x1252 () Bool)
(declare-fun x3817 () Int)
(declare-fun x2791 () Int)
(declare-fun x730 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x1026 () Int)
(declare-fun x1052 () Int)
(declare-fun x717 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1944 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x565 () Int)
(declare-fun x1666 () Bool)
(declare-fun x978 () Int)
(declare-fun x3236 () Bool)
(declare-fun x3290 () Int)
(declare-fun x2777 () Bool)
(declare-fun x1202 (Int) Int)
(declare-fun x1989 () Int)
(declare-fun x3826 () Int)
(declare-fun x2414 () Int)
(declare-fun x1596 () Bool)
(declare-fun x502 () Int)
(declare-fun x2444 () Int)
(declare-fun x509 () Bool)
(declare-fun x3250 () Bool)
(declare-fun x1209 () Int)
(declare-fun x2913 () Int)
(declare-fun x2696 () Bool)
(declare-fun x3125 () Int)
(declare-fun x1644 () Bool)
(declare-fun x3377 () Bool)
(declare-fun x1740 () Int)
(declare-fun x3259 () Bool)
(declare-fun x182 () Int)
(declare-fun x50 () Int)
(declare-fun x2902 () Int)
(declare-fun x2070 () Int)
(declare-fun x1097 () Bool)
(declare-fun x54 () Bool)
(declare-fun x3862 () Int)
(declare-fun x1603 () Int)
(declare-fun x4662 () Int)
(declare-fun x2527 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x4466 () Int)
(declare-fun x1579 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x2162 () Int)
(declare-fun x1161 () Int)
(declare-fun x1223 () Int)
(declare-fun x560 () Int)
(declare-fun x3263 () Int)
(declare-fun x1894 () Bool)
(declare-fun x3896 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x2951 () Int)
(declare-fun x2384 () Int)
(declare-fun x1088 () Int)
(declare-fun x2560 () Int)
(declare-fun x1476 () Int)
(declare-fun x3461 () Int)
(declare-fun x2866 () Int)
(declare-fun x3918 () Int)
(declare-fun x2722 () Int)
(declare-fun x4295 () Int)
(declare-fun x946 () Bool)
(declare-fun x661 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x1444 () Int)
(declare-fun x3743 () Int)
(declare-fun x3515 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x4450 () Int)
(declare-fun x2733 () Bool)
(declare-fun x776 () Int)
(declare-fun x3381 () Int)
(declare-fun x4429 () Int)
(declare-fun x2751 () Bool)
(declare-fun x424 () Int)
(declare-fun x435 () Bool)
(declare-fun x471 () Int)
(declare-fun x3491 () Int)
(declare-fun x1898 () Int)
(declare-fun x1232 () Bool)
(declare-fun x4804 () Int)
(declare-fun x235 () Bool)
(declare-fun x3408 () Int)
(declare-fun x3489 () Bool)
(declare-fun x757 () Int)
(declare-fun x3729 () Bool)
(declare-fun x258 () Bool)
(declare-fun x3598 () Int)
(declare-fun x2047 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x3558 () Int)
(declare-fun x486 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x2184 () Int)
(declare-fun x4750 () Bool)
(declare-fun x70 () Bool)
(declare-fun x4416 () Int)
(declare-fun x2097 () Int)
(declare-fun x4698 () Int)
(declare-fun x1142 () Int)
(declare-fun x512 () Bool)
(declare-fun x4811 () Bool)
(declare-fun x659 () Int)
(declare-fun x1933 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x583 () Int)
(declare-fun x2899 () Int)
(declare-fun x3523 () Int)
(declare-fun x3731 () Bool)
(declare-fun x1614 () Int)
(declare-fun x23 () Bool)
(declare-fun x4479 () Int)
(declare-fun x2171 () Int)
(declare-fun x15 () Int)
(declare-fun x1018 () Int)
(declare-fun x3214 () Int)
(declare-fun x2159 () Bool)
(declare-fun x2799 () Int)
(declare-fun x1784 () Int)
(declare-fun x2991 () Int)
(declare-fun x4620 () Int)
(declare-fun x3363 () Int)
(declare-fun x2585 () Int)
(declare-fun x3511 () Int)
(declare-fun x523 () Bool)
(declare-fun x633 () Int)
(declare-fun x3684 () Bool)
(declare-fun x2406 () Int)
(declare-fun x1169 () Int)
(declare-fun x2523 () Int)
(declare-fun x3160 () Bool)
(declare-fun x3763 () Int)
(declare-fun x2040 () Bool)
(declare-fun x197 () Int)
(declare-fun x224 () Int)
(declare-fun x3245 () Int)
(declare-fun x852 () Int)
(declare-fun x1831 () Int)
(declare-fun x1697 () Int)
(declare-fun x1170 () Int)
(declare-fun x4246 () Int)
(declare-fun x905 () Int)
(declare-fun x1906 () Int)
(declare-fun x799 (Int Int) Int)
(declare-fun x1692 () Bool)
(declare-fun x916 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x4547 () Bool)
(declare-fun x4780 () Bool)
(declare-fun x2987 () Int)
(declare-fun x4735 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x3970 () Int)
(declare-fun x4063 () Bool)
(declare-fun x254 () Int)
(declare-fun x3249 () Int)
(declare-fun x2515 () Bool)
(declare-fun x2721 () Int)
(declare-fun x2869 () Bool)
(declare-fun x1388 () Int)
(declare-fun x222 () Int)
(declare-fun x629 () Int)
(declare-fun x1054 (Int) Int)
(declare-fun x4299 () Int)
(declare-fun x4499 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x3449 () Int)
(declare-fun x151 () Bool)
(declare-fun x4347 () Int)
(declare-fun x157 () Bool)
(declare-fun x1998 () Int)
(declare-fun x2476 () Int)
(declare-fun x3849 () Int)
(declare-fun x2181 () Int)
(declare-fun x295 () Int)
(declare-fun x3253 () Int)
(declare-fun x268 () Int)
(declare-fun x648 () Int)
(declare-fun x3183 () Int)
(declare-fun x1728 () Bool)
(declare-fun x3995 () Int)
(declare-fun x1712 () Bool)
(declare-fun x2120 () Int)
(declare-fun x3036 () Int)
(declare-fun x1685 () Bool)
(declare-fun x4422 () Int)
(declare-fun x3341 () Bool)
(declare-fun x4736 () Int)
(declare-fun x1814 () Int)
(declare-fun x642 () Int)
(declare-fun x1523 () Int)
(declare-fun x445 () Int)
(declare-fun x2256 () Int)
(declare-fun x3992 () Int)
(declare-fun x220 () Bool)
(declare-fun x2856 () Int)
(declare-fun x1353 () Int)
(declare-fun x2130 () Bool)
(declare-fun x2867 () Bool)
(declare-fun x1932 (Int) Int)
(declare-fun x4021 () Int)
(declare-fun x4505 () Int)
(declare-fun x1437 () Bool)
(declare-fun x1902 () Int)
(declare-fun x517 () Int)
(declare-fun x2919 () Bool)
(declare-fun x4826 () Int)
(declare-fun x454 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x4439 () Bool)
(declare-fun x4044 () Int)
(declare-fun x736 () Int)
(declare-fun x9 () Bool)
(declare-fun x2439 () Int)
(declare-fun x3809 () Int)
(declare-fun x3775 () Bool)
(declare-fun x2462 () Int)
(declare-fun x4256 () Int)
(declare-fun x196 () Int)
(declare-fun x664 () Int)
(declare-fun x1352 () Bool)
(declare-fun x3452 () Int)
(declare-fun x283 () Int)
(declare-fun x2046 () Int)
(declare-fun x2555 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x387 () Int)
(declare-fun x4626 () Bool)
(declare-fun x93 () Bool)
(declare-fun x3210 () Int)
(declare-fun x3589 () Int)
(declare-fun x1261 () Int)
(declare-fun x1667 () Int)
(declare-fun x1151 () Int)
(declare-fun x498 () Int)
(declare-fun x37 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x2702 () Int)
(declare-fun x3386 () Bool)
(declare-fun x883 () Int)
(declare-fun x1057 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1387 () Int)
(declare-fun x1450 () Int)
(declare-fun x4590 () Bool)
(declare-fun x3297 () Int)
(declare-fun x1411 () Bool)
(declare-fun x3094 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x3415 () Int)
(declare-fun x4348 () Int)
(declare-fun x4249 () Bool)
(declare-fun x1993 () Int)
(declare-fun x257 () Int)
(declare-fun x4760 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x3683 () Bool)
(declare-fun x3783 () Int)
(declare-fun x566 () Bool)
(declare-fun x4406 () Int)
(declare-fun x2405 () Bool)
(declare-fun x3703 () Int)
(declare-fun x53 () Int)
(declare-fun x2035 () Bool)
(declare-fun x4017 () Int)
(declare-fun x1841 () Bool)
(declare-fun x386 () Int)
(declare-fun x3170 () Bool)
(declare-fun x4638 () Int)
(declare-fun x418 () Int)
(declare-fun x2379 () Int)
(declare-fun x3686 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1143 () Bool)
(declare-fun x4287 () Bool)
(declare-fun x2533 () Int)
(declare-fun x4083 () Bool)
(declare-fun x4504 () Int)
(declare-fun x4451 () Int)
(declare-fun x4319 () Int)
(declare-fun x1851 () Int)
(declare-fun x1473 () Bool)
(declare-fun x4097 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x696 () Int)
(declare-fun x1937 () Int)
(declare-fun x828 () Int)
(declare-fun x814 () Bool)
(declare-fun x1250 () Int)
(declare-fun x297 () Bool)
(declare-fun x3570 () Int)
(declare-fun x2485 () Int)
(declare-fun x3543 () Int)
(declare-fun x1653 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x3868 () Int)
(declare-fun x2801 () Bool)
(declare-fun x2411 () Int)
(declare-fun x3676 () Int)
(declare-fun x58 () Int)
(declare-fun x3476 () Int)
(declare-fun x4531 () Int)
(declare-fun x2637 () Int)
(declare-fun x2962 (Int) Int)
(declare-fun x2036 () Int)
(declare-fun x1705 () Bool)
(declare-fun x1751 () Bool)
(declare-fun x4759 () Bool)
(declare-fun x355 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1559 () Int)
(declare-fun x2324 () Bool)
(declare-fun x1720 () Int)
(declare-fun x4328 () Int)
(declare-fun x4556 () Int)
(declare-fun x48 () Bool)
(declare-fun x3555 () Int)
(declare-fun x4503 () Bool)
(declare-fun x671 () Int)
(declare-fun x1242 () Int)
(declare-fun x1982 () Bool)
(declare-fun x3079 () Int)
(declare-fun x2612 () Int)
(declare-fun x1581 () Int)
(declare-fun x1422 () Int)
(declare-fun x2747 () Bool)
(declare-fun x3930 () Bool)
(declare-fun x286 () Int)
(declare-fun x528 () Int)
(declare-fun x1510 () Int)
(declare-fun x1727 () Int)
(declare-fun x4346 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1507 () Int)
(declare-fun x3682 () Int)
(declare-fun x90 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x658 () Bool)
(declare-fun x953 () Bool)
(declare-fun x4254 () Int)
(declare-fun x2607 () Int)
(declare-fun x974 () Bool)
(declare-fun x715 () Int)
(declare-fun x3542 () Bool)
(declare-fun x4589 () Int)
(declare-fun x4844 () Int)
(declare-fun x1512 () Int)
(declare-fun x348 () Int)
(declare-fun x4306 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x794 () Bool)
(declare-fun x3076 () Int)
(declare-fun x4283 () Int)
(declare-fun x4621 () Bool)
(declare-fun x3513 () Int)
(declare-fun x472 () Int)
(declare-fun x3699 () Int)
(declare-fun x2016 () Bool)
(declare-fun x3394 () Bool)
(declare-fun x2587 () Int)
(declare-fun x3678 () Int)
(declare-fun x614 () Int)
(declare-fun x3774 () Int)
(declare-fun x2215 () Int)
(declare-fun x4637 () Int)
(declare-fun x4200 () Int)
(declare-fun x2101 () Bool)
(declare-fun x16 () Int)
(declare-fun x4001 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x4458 () Int)
(declare-fun x3239 () Bool)
(declare-fun x2586 () Int)
(declare-fun x726 () Int)
(declare-fun x465 () Bool)
(declare-fun x714 () Int)
(declare-fun x3424 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x3348 () Int)
(declare-fun x4704 () Int)
(declare-fun x4819 () Int)
(declare-fun x2634 () Bool)
(declare-fun x851 () Int)
(declare-fun x3467 () Int)
(declare-fun x2614 () Bool)
(declare-fun x308 () Int)
(declare-fun x1707 () Int)
(declare-fun x1366 () Int)
(declare-fun x1085 () Int)
(declare-fun x1025 () Int)
(declare-fun x3545 () Int)
(declare-fun x3629 () Int)
(declare-fun x2884 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x3518 () Int)
(declare-fun x846 () Bool)
(declare-fun x4652 () Int)
(declare-fun x83 () Bool)
(declare-fun x3418 () Int)
(declare-fun x3885 () Int)
(declare-fun x4331 () Int)
(declare-fun x4284 () Bool)
(declare-fun x1467 () Int)
(declare-fun x320 () Int)
(declare-fun x3268 () Int)
(declare-fun x2458 () Bool)
(declare-fun x837 () Bool)
(declare-fun x1094 () Int)
(declare-fun x2504 () Bool)
(declare-fun x4808 () Int)
(declare-fun x3049 () Int)
(declare-fun x625 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x4244 () Int)
(declare-fun x813 () Bool)
(declare-fun x4840 () Int)
(declare-fun x4337 () Int)
(declare-fun x816 () Bool)
(declare-fun x1949 () Int)
(declare-fun x869 () Int)
(declare-fun x3492 () Int)
(declare-fun x3009 () Int)
(declare-fun x4502 () Bool)
(declare-fun x2968 () Int)
(declare-fun x4201 () Int)
(declare-fun x1962 () Int)
(declare-fun x3584 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x3406 () Int)
(declare-fun x2090 () Int)
(declare-fun x1583 () Int)
(declare-fun x4285 () Bool)
(declare-fun x754 () Bool)
(declare-fun x3218 () Int)
(declare-fun x3991 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x4364 () Int)
(declare-fun x1059 () Int)
(declare-fun x738 () Bool)
(declare-fun x825 () Int)
(declare-fun x522 () Int)
(declare-fun x335 () Int)
(declare-fun x3437 () Bool)
(declare-fun x2780 () Int)
(declare-fun x3867 () Bool)
(declare-fun x3055 () Int)
(declare-fun x2695 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x1708 () Int)
(declare-fun x164 () Bool)
(declare-fun x2313 () Int)
(declare-fun x878 () Bool)
(declare-fun x4822 () Int)
(declare-fun x1855 () Int)
(declare-fun x3911 () Int)
(declare-fun x2720 () Int)
(declare-fun x722 () Int)
(declare-fun x606 () Int)
(declare-fun x558 () Int)
(declare-fun x866 () Bool)
(declare-fun x4397 () Bool)
(declare-fun x4435 () Bool)
(declare-fun x4818 () Bool)
(declare-fun x2153 () Int)
(declare-fun x1541 () Int)
(declare-fun x2048 () Int)
(declare-fun x3591 () Int)
(declare-fun x4369 () Int)
(declare-fun x3269 () Int)
(declare-fun x3366 () Int)
(declare-fun x3306 () Int)
(declare-fun x2928 () Int)
(declare-fun x2581 () Bool)
(declare-fun x3043 () Int)
(declare-fun x4038 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x4697 () Bool)
(declare-fun x4795 () Int)
(declare-fun x704 () Bool)
(declare-fun x695 () Int)
(declare-fun x1244 () Bool)
(declare-fun x3847 () Int)
(declare-fun x4132 () Int)
(declare-fun x1722 () Int)
(declare-fun x79 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x4236 () Bool)
(declare-fun x1578 () Int)
(declare-fun x615 () Int)
(declare-fun x56 () Int)
(declare-fun x1786 () Int)
(declare-fun x4767 (Int) Int)
(declare-fun x2000 () Int)
(declare-fun x2451 () Int)
(declare-fun x4178 () Int)
(declare-fun x2875 () Bool)
(declare-fun x370 () Int)
(declare-fun x2792 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x4309 () Int)
(declare-fun x2353 () Int)
(declare-fun x4412 () Int)
(declare-fun x2424 () Int)
(declare-fun x143 () Bool)
(declare-fun x2274 () Int)
(declare-fun x1664 () Int)
(declare-fun x2471 () Bool)
(declare-fun x239 () Int)
(declare-fun x1263 () Int)
(declare-fun x601 () Bool)
(declare-fun x3172 () Int)
(declare-fun x3719 () Int)
(declare-fun x1694 () Int)
(declare-fun x1189 () Int)
(declare-fun x3471 () Int)
(declare-fun x1200 () Int)
(declare-fun x4664 () Int)
(declare-fun x499 () Int)
(declare-fun x2621 () Int)
(declare-fun x2502 () Bool)
(declare-fun x3221 () Int)
(declare-fun x2828 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x274 () Int)
(declare-fun x3229 () Int)
(declare-fun x3024 () Bool)
(declare-fun x887 () Int)
(declare-fun x61 () Int)
(declare-fun x4769 () Int)
(declare-fun x478 () Bool)
(declare-fun x4226 () Int)
(declare-fun x4498 () Bool)
(declare-fun x1800 () Int)
(declare-fun x2094 () Int)
(declare-fun x4381 () Int)
(declare-fun x1584 () Int)
(declare-fun x496 () Int)
(declare-fun x3455 () Int)
(declare-fun x3902 () Int)
(declare-fun x439 () Int)
(declare-fun x2613 () Int)
(declare-fun x1696 () Int)
(declare-fun x3097 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x3447 () Bool)
(declare-fun x2687 () Bool)
(declare-fun x4516 () Int)
(declare-fun x818 () Bool)
(declare-fun x353 () Int)
(declare-fun x4404 () Int)
(declare-fun x43 () Int)
(declare-fun x4555 () Int)
(declare-fun x3454 () Bool)
(declare-fun x3111 () Int)
(declare-fun x3324 () Bool)
(declare-fun x1010 (Int) Int)
(declare-fun x4606 () Int)
(declare-fun x1958 () Int)
(declare-fun x3800 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x342 () Int)
(declare-fun x1087 () Bool)
(declare-fun x325 () Int)
(declare-fun x3007 () Bool)
(declare-fun x4456 () Int)
(declare-fun x3614 () Bool)
(declare-fun x3871 () Int)
(declare-fun x4717 () Bool)
(declare-fun x1042 () Int)
(declare-fun x449 () Int)
(declare-fun x1647 () Int)
(declare-fun x3337 () Int)
(declare-fun x391 () Int)
(declare-fun x4191 () Int)
(declare-fun x2755 () Bool)
(declare-fun x2963 () Int)
(declare-fun x1116 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x1390 () Int)
(declare-fun x1558 () Bool)
(declare-fun x4671 () Int)
(declare-fun x421 () Bool)
(declare-fun x3658 () Int)
(declare-fun x2418 () Bool)
(declare-fun x1367 () Int)
(declare-fun x3644 () Int)
(declare-fun x2541 () Int)
(declare-fun x2948 () Int)
(declare-fun x4647 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x5 () Int)
(declare-fun x811 () Int)
(declare-fun x3019 () Int)
(declare-fun x4781 () Int)
(declare-fun x3124 () Bool)
(declare-fun x1330 () Int)
(declare-fun x1821 () Bool)
(declare-fun x750 () Int)
(declare-fun x4152 () Bool)
(declare-fun x476 () Int)
(declare-fun x2199 () Bool)
(declare-fun x719 () Bool)
(declare-fun x1454 () Int)
(declare-fun x868 () Bool)
(declare-fun x4156 () Int)
(declare-fun x3317 () Int)
(declare-fun x1783 () Bool)
(declare-fun x4607 () Int)
(declare-fun x2466 (Int) Int)
(declare-fun x1820 () Int)
(declare-fun x3204 () Int)
(declare-fun x3812 () Int)
(declare-fun x4003 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x2642 () Int)
(declare-fun x1009 () Bool)
(declare-fun x3593 () Int)
(declare-fun x2787 () Int)
(declare-fun x4549 () Bool)
(declare-fun x49 () Int)
(declare-fun x3233 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x63 () Bool)
(declare-fun x2326 () Int)
(declare-fun x4286 () Int)
(declare-fun x1287 () Int)
(declare-fun x4342 () Int)
(declare-fun x225 () Int)
(declare-fun x951 (Int) Int)
(declare-fun x1952 () Int)
(declare-fun x4176 () Int)
(declare-fun x1218 () Bool)
(declare-fun x3482 () Bool)
(declare-fun x2322 () Int)
(declare-fun x3997 () Int)
(declare-fun x2752 () Bool)
(declare-fun x533 () Bool)
(declare-fun x2445 () Int)
(declare-fun x3950 () Bool)
(declare-fun x1146 () Int)
(declare-fun x3391 () Int)
(declare-fun x973 () Int)
(declare-fun x26 () Bool)
(declare-fun x4459 () Int)
(declare-fun x2593 () Bool)
(declare-fun x3270 () Int)
(declare-fun x1311 () Int)
(declare-fun x4087 () Int)
(declare-fun x1277 () Int)
(declare-fun x618 () Bool)
(declare-fun x976 () Int)
(declare-fun x4391 () Int)
(declare-fun x1321 () Bool)
(declare-fun x3360 () Int)
(declare-fun x4239 () Bool)
(declare-fun x982 () Int)
(declare-fun x3956 () Int)
(declare-fun x3840 () Int)
(declare-fun x1051 () Int)
(declare-fun x139 () Bool)
(declare-fun x2117 () Int)
(declare-fun x3994 () Bool)
(declare-fun x2689 () Int)
(declare-fun x2925 () Int)
(declare-fun x3298 () Int)
(declare-fun x2743 () Int)
(declare-fun x1672 () Bool)
(declare-fun x3595 () Int)
(declare-fun x2082 () Bool)
(declare-fun x3445 () Int)
(declare-fun x1192 () Int)
(declare-fun x2879 () Bool)
(declare-fun x3174 () Bool)
(declare-fun x3831 () Int)
(declare-fun x703 () Int)
(declare-fun x272 () Bool)
(declare-fun x1112 () Int)
(declare-fun x3413 () Int)
(declare-fun x3927 () Int)
(declare-fun x1198 () Int)
(declare-fun x1431 () Int)
(declare-fun x865 () Int)
(declare-fun x2042 () Int)
(declare-fun x626 () Bool)
(declare-fun x2177 () Int)
(declare-fun x2643 (Int) Int)
(declare-fun x2255 () Int)
(declare-fun x1837 () Int)
(declare-fun x1585 () Int)
(declare-fun x2446 () Int)
(declare-fun x3483 () Int)
(declare-fun x1651 () Bool)
(declare-fun x652 (Int) Int)
(declare-fun x1275 () Int)
(declare-fun x3238 () Int)
(declare-fun x4558 () Bool)
(declare-fun x89 () Int)
(declare-fun x3578 () Bool)
(declare-fun x3505 () Int)
(declare-fun x180 () Int)
(declare-fun x1260 () Int)
(declare-fun x3084 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x923 () Int)
(declare-fun x4630 () Int)
(declare-fun x3403 () Int)
(declare-fun x2684 () Bool)
(declare-fun x460 () Int)
(declare-fun x3834 () Int)
(declare-fun x3501 () Int)
(declare-fun x2164 () Int)
(declare-fun x2401 () Bool)
(declare-fun x610 () Bool)
(declare-fun x920 () Bool)
(declare-fun x163 () Int)
(declare-fun x4699 () Int)
(declare-fun x1474 () Bool)
(declare-fun x470 () Int)
(declare-fun x1616 () Bool)
(declare-fun x4407 () Int)
(declare-fun x1811 () Int)
(declare-fun x2577 () Int)
(declare-fun x550 () Int)
(declare-fun x3503 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x4437 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x200 () Int)
(declare-fun x284 () Bool)
(declare-fun x3453 () Int)
(declare-fun x3620 () Bool)
(declare-fun x1141 () Int)
(declare-fun x3572 () Int)
(declare-fun x1689 () Bool)
(declare-fun x950 () Bool)
(declare-fun x4070 () Int)
(declare-fun x3340 () Int)
(declare-fun x304 () Int)
(declare-fun x3139 () Int)
(declare-fun x1267 () Int)
(declare-fun x2296 () Int)
(declare-fun x3185 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x1436 () Int)
(declare-fun x2180 () Int)
(declare-fun x365 () Int)
(declare-fun x3330 () Int)
(declare-fun x3766 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x789 () Int)
(declare-fun x2957 () Bool)
(declare-fun x2242 () Int)
(declare-fun x3842 () Bool)
(declare-fun x2357 () Int)
(declare-fun x4436 () Int)
(declare-fun x2611 () Bool)
(declare-fun x2315 () Int)
(declare-fun x759 () Int)
(declare-fun x2920 () Int)
(declare-fun x2440 () Int)
(declare-fun x4282 () Int)
(declare-fun x4430 () Int)
(declare-fun x3190 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x2514 () Int)
(declare-fun x1145 () Int)
(declare-fun x3285 () Bool)
(declare-fun x3822 () Int)
(declare-fun x4535 () Int)
(declare-fun x2399 () Int)
(declare-fun x1643 () Int)
(declare-fun x3779 () Bool)
(declare-fun x2366 () Int)
(declare-fun x3638 () Bool)
(declare-fun x3080 () Int)
(declare-fun x411 () Int)
(declare-fun x2441 () Bool)
(declare-fun x3704 () Int)
(declare-fun x3466 () Int)
(declare-fun x1012 () Bool)
(declare-fun x3535 () Int)
(declare-fun x1136 () Int)
(declare-fun x1228 () Int)
(declare-fun x1988 () Bool)
(declare-fun x1001 () Int)
(declare-fun x4151 () Int)
(declare-fun x2931 () Int)
(declare-fun x747 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x1611 () Int)
(declare-fun x3072 () Bool)
(declare-fun x4646 () Int)
(declare-fun x4509 () Int)
(declare-fun x1959 () Int)
(declare-fun x186 () Int)
(declare-fun x1453 () Int)
(declare-fun x808 () Int)
(declare-fun x1618 () Int)
(declare-fun x1477 () Int)
(declare-fun x3846 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x194 () Int)
(declare-fun x3660 () Int)
(declare-fun x121 () Int)
(declare-fun x2711 () Int)
(declare-fun x1270 () Bool)
(declare-fun x2307 () Int)
(declare-fun x3404 () Int)
(declare-fun x4069 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x4264 () Bool)
(declare-fun x1733 () Int)
(declare-fun x479 () Bool)
(declare-fun x262 () Int)
(declare-fun x1934 () Int)
(declare-fun x1747 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2138 () Int)
(declare-fun x1687 () Int)
(declare-fun x858 () Bool)
(declare-fun x4225 () Bool)
(declare-fun x2606 () Int)
(declare-fun x520 () Bool)
(declare-fun x383 () Int)
(declare-fun x840 () Int)
(declare-fun x4272 () Bool)
(declare-fun x4183 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x2143 () Int)
(declare-fun x416 () Int)
(declare-fun x1979 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x1246 () Int)
(declare-fun x67 () Int)
(declare-fun x559 () Int)
(declare-fun x1290 () Int)
(declare-fun x3807 () Int)
(declare-fun x3691 () Bool)
(declare-fun x4405 () Int)
(declare-fun x55 () Int)
(declare-fun x2636 () Int)
(declare-fun x2876 () Int)
(declare-fun x45 () Bool)
(declare-fun x1723 () Int)
(declare-fun x4681 () Int)
(declare-fun x4562 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x2757 () Int)
(declare-fun x408 () Bool)
(declare-fun x2334 () Int)
(declare-fun x3653 () Bool)
(declare-fun x3105 () Int)
(declare-fun x4032 () Bool)
(declare-fun x1125 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2454 () Bool)
(declare-fun x3791 () Int)
(declare-fun x4835 () Int)
(declare-fun x3864 () Bool)
(declare-fun x3590 () Int)
(declare-fun x4588 () Int)
(declare-fun x2749 () Bool)
(declare-fun x3144 () Int)
(declare-fun x1365 () Int)
(declare-fun x4103 () Int)
(declare-fun x4734 () Int)
(declare-fun x2824 () Bool)
(declare-fun x2400 () Int)
(declare-fun x4443 () Int)
(declare-fun x824 () Int)
(declare-fun x2039 () Int)
(declare-fun x1490 () Int)
(declare-fun x1763 () Bool)
(declare-fun x2340 () Int)
(declare-fun x2540 () Int)
(declare-fun x2216 () Int)
(declare-fun x4586 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1506 () Int)
(declare-fun x1046 () Int)
(declare-fun x6 () Int)
(declare-fun x1887 () Bool)
(declare-fun x4612 () Bool)
(declare-fun x3801 () Bool)
(declare-fun x2804 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x4530 () Int)
(declare-fun x4373 () Bool)
(declare-fun x1838 () Int)
(declare-fun x4817 () Bool)
(declare-fun x2789 () Int)
(declare-fun x4799 () Int)
(declare-fun x95 () Int)
(declare-fun x771 () Int)
(declare-fun x433 () Int)
(declare-fun x2192 () Bool)
(declare-fun x4696 () Int)
(declare-fun x4512 () Int)
(declare-fun x1076 () Int)
(declare-fun x3843 () Int)
(declare-fun x2510 () Int)
(declare-fun x2146 () Bool)
(declare-fun x4731 () Int)
(declare-fun x4218 () Bool)
(declare-fun x3559 () Int)
(declare-fun x1767 () Int)
(declare-fun x3441 () Bool)
(declare-fun x4153 () Int)
(declare-fun x3548 () Int)
(declare-fun x1716 () Bool)
(declare-fun x2616 () Int)
(declare-fun x913 () Int)
(declare-fun x3150 () Bool)
(declare-fun x1172 () Int)
(declare-fun x729 () Int)
(declare-fun x3915 () Bool)
(declare-fun x18 () Bool)
(declare-fun x2197 () Int)
(declare-fun x22 () Int)
(declare-fun x4554 () Bool)
(declare-fun x931 () Int)
(declare-fun x2356 () Int)
(declare-fun x3522 () Int)
(declare-fun x1325 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x3785 () Int)
(declare-fun x323 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x4642 () Bool)
(declare-fun x3540 () Int)
(declare-fun x2450 () Bool)
(declare-fun x2228 () Int)
(declare-fun x86 () Int)
(declare-fun x3714 () Int)
(declare-fun x4667 () Int)
(declare-fun x3166 () Bool)
(declare-fun x761 () Int)
(declare-fun x1137 () Int)
(declare-fun x3796 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x2999 () Int)
(declare-fun x2865 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x3637 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x2195 () Int)
(declare-fun x3858 () Int)
(declare-fun x908 () Int)
(declare-fun x4339 () Int)
(declare-fun x2769 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x2554 () Int)
(declare-fun x547 () Bool)
(declare-fun x3852 () Int)
(declare-fun x725 () Int)
(declare-fun x2942 () Int)
(declare-fun x3402 () Bool)
(declare-fun x171 () Bool)
(declare-fun x640 () Bool)
(declare-fun x2693 () Int)
(declare-fun x933 () Bool)
(declare-fun x968 () Bool)
(declare-fun x1407 () Int)
(declare-fun x185 () Bool)
(declare-fun x1564 () Int)
(declare-fun x2765 () Int)
(declare-fun x4039 () Bool)
(declare-fun x2730 () Int)
(declare-fun x3903 () Int)
(declare-fun x800 () Int)
(declare-fun x4548 () Int)
(declare-fun x3457 () Int)
(declare-fun x3628 () Bool)
(declare-fun x734 () Int)
(declare-fun x2700 () Int)
(declare-fun x3914 () Bool)
(declare-fun x4536 () Int)
(declare-fun x1803 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1072 () Int)
(declare-fun x4690 () Int)
(declare-fun x1609 () Bool)
(declare-fun x2028 () Int)
(declare-fun x2639 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x2764 () Int)
(declare-fun x1756 () Int)
(declare-fun x1134 () Bool)
(declare-fun x2076 () Int)
(declare-fun x1522 () Int)
(declare-fun x772 () Int)
(declare-fun x4265 () Int)
(declare-fun x1183 () Int)
(declare-fun x1935 () Bool)
(declare-fun x4732 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x3861 () Int)
(declare-fun x4033 () Int)
(declare-fun x674 () Bool)
(declare-fun x4341 () Int)
(declare-fun x497 () Int)
(declare-fun x653 () Int)
(declare-fun x1386 () Int)
(declare-fun x2842 () Bool)
(declare-fun x2463 (Int) Int)
(declare-fun x2301 () Int)
(declare-fun x233 () Int)
(declare-fun x2342 () Int)
(declare-fun x244 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x2474 () Int)
(declare-fun x2114 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x4297 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x1 () Int)
(declare-fun x3390 () Int)
(declare-fun x3401 () Int)
(declare-fun x4455 () Int)
(declare-fun x2739 () Int)
(declare-fun x298 () Int)
(declare-fun x3910 () Int)
(declare-fun x2727 () Int)
(declare-fun x1318 () Int)
(declare-fun x2041 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2381 () Int)
(declare-fun x943 () Int)
(declare-fun x3741 () Int)
(declare-fun x2701 () Int)
(declare-fun x2694 () Int)
(declare-fun x3071 () Int)
(declare-fun x4684 () Int)
(declare-fun x1960 () Int)
(declare-fun x4322 () Bool)
(declare-fun x557 () Int)
(declare-fun x2522 () Int)
(declare-fun x3168 () Bool)
(declare-fun x3474 () Int)
(declare-fun x469 () Bool)
(declare-fun x2691 () Int)
(declare-fun x3412 () Int)
(declare-fun x2099 () Int)
(declare-fun x4829 () Bool)
(declare-fun x873 () Int)
(declare-fun x3058 () Bool)
(declare-fun x1031 () Int)
(declare-fun x3230 () Int)
(declare-fun x2568 () Int)
(declare-fun x2273 () Bool)
(declare-fun x3690 () Int)
(declare-fun x2970 () Int)
(declare-fun x1840 () Int)
(declare-fun x2422 () Int)
(declare-fun x4222 () Int)
(declare-fun x3769 () Bool)
(declare-fun x2391 () Int)
(declare-fun x2807 () Bool)
(declare-fun x141 () Int)
(declare-fun x4713 () Bool)
(declare-fun x1923 () Int)
(declare-fun x2308 () Int)
(declare-fun x4692 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x99 () Int)
(declare-fun x764 () Bool)
(declare-fun x1873 () Int)
(declare-fun x3225 () Int)
(declare-fun x3117 () Int)
(declare-fun x2243 () Bool)
(declare-fun x4747 () Int)
(declare-fun x2778 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x3502 () Int)
(declare-fun x3514 () Int)
(declare-fun x2836 () Int)
(declare-fun x2183 () Bool)
(declare-fun x395 () Int)
(declare-fun x3116 () Int)
(declare-fun x4122 () Bool)
(declare-fun x3131 () Int)
(declare-fun x1765 () Bool)
(declare-fun x3056 () Bool)
(declare-fun x4782 () Bool)
(declare-fun x1096 () Int)
(declare-fun x2231 () Bool)
(declare-fun x2486 () Int)
(declare-fun x3017 () Int)
(declare-fun x4846 () Bool)
(declare-fun x448 () Int)
(declare-fun x1539 () Bool)
(declare-fun x3304 () Int)
(declare-fun x191 () Int)
(declare-fun x3426 () Bool)
(declare-fun x737 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x966 () Int)
(declare-fun x4174 () Int)
(declare-fun x324 () Int)
(declare-fun x1713 () Bool)
(declare-fun x266 () Bool)
(declare-fun x3054 () Int)
(declare-fun x1099 () Int)
(declare-fun x4488 () Int)
(declare-fun x4140 () Bool)
(declare-fun x394 () Bool)
(declare-fun x2990 () Int)
(declare-fun x4707 () Int)
(declare-fun x798 () Bool)
(declare-fun x3420 () Int)
(declare-fun x3216 () Int)
(declare-fun x4307 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x823 () Int)
(declare-fun x2619 () Bool)
(declare-fun x28 () Int)
(declare-fun x995 () Int)
(declare-fun x1963 () Int)
(declare-fun x1745 () Int)
(declare-fun x4180 () Bool)
(declare-fun x4493 () Int)
(declare-fun x4791 () Int)
(declare-fun x3835 () Int)
(declare-fun x313 () Bool)
(declare-fun x462 () Int)
(declare-fun x4842 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x542 () Int)
(declare-fun x3708 () Int)
(declare-fun x594 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x4060 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x276 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x2494 () Int)
(declare-fun x2409 () Bool)
(declare-fun x3794 () Int)
(declare-fun x1876 () Bool)
(declare-fun x4526 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x3662 () Int)
(declare-fun x3536 () Int)
(declare-fun x784 () Bool)
(declare-fun x29 () Int)
(declare-fun x3761 () Int)
(declare-fun x926 () Bool)
(declare-fun x3069 () Int)
(declare-fun x2397 () Int)
(declare-fun x2809 () Bool)
(declare-fun x3700 () Int)
(declare-fun x647 () Bool)
(declare-fun x3316 () Int)
(declare-fun x2150 () Int)
(declare-fun x1126 () Int)
(declare-fun x1674 () Bool)
(declare-fun x4710 () Int)
(declare-fun x1790 () Int)
(declare-fun x2625 () Int)
(declare-fun x4727 () Bool)
(declare-fun x4778 () Bool)
(declare-fun x4615 () Int)
(declare-fun x4042 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x1650 () Int)
(declare-fun x2553 () Int)
(declare-fun x2543 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x3352 () Int)
(declare-fun x4631 () Bool)
(declare-fun x1709 () Int)
(declare-fun x4469 () Int)
(declare-fun x1197 () Int)
(declare-fun x3429 () Int)
(declare-fun x3739 (Int Int) Int)
(declare-fun x1871 () Int)
(declare-fun x1966 () Int)
(declare-fun x4187 () Int)
(declare-fun x208 () Bool)
(declare-fun x3617 () Int)
(declare-fun x644 () Int)
(declare-fun x4757 () Int)
(declare-fun x1489 () Int)
(declare-fun x845 () Int)
(declare-fun x2489 () Int)
(declare-fun x4533 () Bool)
(declare-fun x3234 () Int)
(declare-fun x1652 () Bool)
(declare-fun x3833 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x3241 () Int)
(declare-fun x3884 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x169 () Bool)
(declare-fun x564 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x3119 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x4338 () Int)
(declare-fun x2592 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x2208 () Int)
(declare-fun x1402 () Bool)
(declare-fun x3365 () Bool)
(declare-fun x660 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x1882 () Int)
(declare-fun x1162 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x4006 () Int)
(declare-fun x312 () Int)
(declare-fun x3888 () Int)
(declare-fun x3759 () Bool)
(declare-fun x2579 () Int)
(declare-fun x381 () Int)
(declare-fun x2348 () Int)
(declare-fun x3358 () Bool)
(declare-fun x2981 () Int)
(declare-fun x2437 () Int)
(declare-fun x3561 () Bool)
(declare-fun x425 () Int)
(declare-fun x2358 () Int)
(declare-fun x2602 () Int)
(declare-fun x2505 () Int)
(declare-fun x2467 () Int)
(declare-fun x3767 () Int)
(declare-fun x4461 () Int)
(declare-fun x985 () Int)
(declare-fun x716 () Int)
(declare-fun x2784 () Int)
(declare-fun x1830 () Int)
(declare-fun x1427 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x3887 () Int)
(declare-fun x3517 () Int)
(declare-fun x4824 () Int)
(declare-fun x115 () Int)
(declare-fun x3715 () Int)
(declare-fun x4321 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x1945 () Int)
(declare-fun x3451 () Int)
(declare-fun x1248 () Int)
(declare-fun x2940 () Int)
(declare-fun x3255 () Int)
(declare-fun x3657 () Int)
(declare-fun x3490 () Int)
(declare-fun x228 () Int)
(declare-fun x2165 () Int)
(declare-fun x3577 () Bool)
(declare-fun x511 () Int)
(declare-fun x305 () Int)
(declare-fun x3198 () Bool)
(declare-fun x1994 () Int)
(declare-fun x3244 () Int)
(declare-fun x1617 () Bool)
(declare-fun x2664 () Int)
(declare-fun x3650 () Int)
(declare-fun x4181 () Int)
(declare-fun x1761 () Int)
(declare-fun x2311 () Int)
(declare-fun x1328 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x2729 (Int) Int)
(declare-fun x4475 () Bool)
(declare-fun x1144 () Int)
(declare-fun x4206 () Int)
(declare-fun x3256 () Int)
(declare-fun x2022 () Int)
(declare-fun x2295 () Int)
(declare-fun x2318 () Int)
(declare-fun x349 () Int)
(declare-fun x1621 () Bool)
(declare-fun x4059 () Int)
(declare-fun x183 () Bool)
(declare-fun x3032 () Int)
(declare-fun x4771 () Int)
(declare-fun x2932 () Int)
(declare-fun x2209 () Bool)
(declare-fun x306 () Int)
(declare-fun x3583 () Int)
(declare-fun x2817 () Int)
(declare-fun x3669 () Bool)
(declare-fun x3127 () Int)
(declare-fun x4043 () Int)
(declare-fun x3525 () Bool)
(declare-fun x2386 () Int)
(declare-fun x3836 () Int)
(declare-fun x2588 () Int)
(declare-fun x839 () Int)
(declare-fun x2019 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x3439 () Int)
(declare-fun x4357 () Int)
(declare-fun x2187 () Int)
(declare-fun x3187 () Bool)
(declare-fun x4172 () Int)
(declare-fun x570 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x2258 () Int)
(declare-fun x3184 () Int)
(declare-fun x3100 () Int)
(declare-fun x3062 () Bool)
(declare-fun x4584 () Int)
(declare-fun x4802 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x928 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1213 () Int)
(declare-fun x4113 () Int)
(declare-fun x466 () Bool)
(declare-fun x2367 () Int)
(declare-fun x2088 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x1465 () Int)
(declare-fun x4715 () Int)
(declare-fun x2277 () Bool)
(declare-fun x2742 () Int)
(declare-fun x1106 () Int)
(declare-fun x255 () Int)
(declare-fun x2460 () Int)
(declare-fun x1215 () Bool)
(declare-fun x4478 () Int)
(declare-fun x4413 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x3283 () Int)
(declare-fun x2509 () Bool)
(declare-fun x4303 () Int)
(declare-fun x265 () Int)
(declare-fun x822 () Int)
(declare-fun x3101 () Bool)
(declare-fun x174 () Int)
(declare-fun x2433 () Bool)
(declare-fun x3574 () Bool)
(declare-fun x3205 () Int)
(declare-fun x4592 () Bool)
(declare-fun x3623 () Int)
(declare-fun x4575 () Bool)
(declare-fun x2136 () Int)
(declare-fun x4158 () Bool)
(declare-fun x39 () Int)
(declare-fun x2335 () Bool)
(declare-fun x3224 () Int)
(declare-fun x369 () Int)
(declare-fun x1123 () Bool)
(declare-fun x1203 () Int)
(declare-fun x3020 () Int)
(declare-fun x1055 () Int)
(declare-fun x4035 () Int)
(declare-fun x3773 () Bool)
(declare-fun x149 () Bool)
(declare-fun x996 () Int)
(declare-fun x2006 () Bool)
(declare-fun x1957 () Int)
(declare-fun x247 () Int)
(declare-fun x4557 () Int)
(declare-fun x4400 () Int)
(declare-fun x3569 () Int)
(declare-fun x4787 () Int)
(declare-fun x3990 () Bool)
(declare-fun x1300 () Int)
(declare-fun x2246 () Bool)
(declare-fun x1013 () Int)
(declare-fun x218 () Int)
(declare-fun x280 (Int) Int)
(declare-fun x1292 () Int)
(declare-fun x4839 () Int)
(declare-fun x158 () Int)
(declare-fun x2516 () Int)
(declare-fun x2029 () Int)
(declare-fun x2362 () Int)
(declare-fun x1768 () Bool)
(declare-fun x2378 () Int)
(declare-fun x3064 () Int)
(declare-fun x612 () Bool)
(declare-fun x977 () Int)
(declare-fun x3733 () Int)
(declare-fun x94 () Int)
(declare-fun x3315 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x1704 () Int)
(declare-fun x948 () Int)
(declare-fun x4034 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x4253 () Int)
(declare-fun x4066 () Int)
(declare-fun x4057 () Int)
(declare-fun x4164 () Int)
(declare-fun x1715 () Bool)
(declare-fun x4234 () Bool)
(declare-fun x4002 () Int)
(declare-fun x3594 () Int)
(declare-fun x870 () Int)
(declare-fun x3143 () Int)
(declare-fun x3368 () Bool)
(declare-fun x142 () Bool)
(declare-fun x3673 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2139 () Int)
(declare-fun x579 () Int)
(declare-fun x2918 () Int)
(declare-fun x4209 () Bool)
(declare-fun x684 () Int)
(declare-fun x2135 () Bool)
(declare-fun x2688 () Int)
(declare-fun x4144 () Bool)
(declare-fun x4564 () Int)
(declare-fun x2841 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1986 () Int)
(declare-fun x1205 () Int)
(declare-fun x2174 () Int)
(declare-fun x888 () Int)
(declare-fun x4486 () Int)
(declare-fun x382 () Bool)
(declare-fun x1684 () Int)
(declare-fun x1005 () Bool)
(declare-fun x3978 () Int)
(declare-fun x351 () Bool)
(declare-fun x903 () Int)
(declare-fun x1771 () Int)
(declare-fun x1816 () Int)
(declare-fun x932 () Int)
(declare-fun x945 () Bool)
(declare-fun x341 () Int)
(declare-fun x2551 () Bool)
(declare-fun x1404 () Int)
(declare-fun x751 () Int)
(declare-fun x4040 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x607 () Bool)
(declare-fun x3819 () Int)
(declare-fun x2917 () Int)
(declare-fun x645 () Bool)
(declare-fun x875 () Bool)
(declare-fun x3480 () Int)
(declare-fun x4796 () Int)
(declare-fun x4775 () Int)
(declare-fun x4463 () Int)
(declare-fun x1336 () Int)
(declare-fun x4036 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x4470 () Int)
(declare-fun x1681 () Bool)
(declare-fun x3096 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x3189 () Bool)
(declare-fun x3848 () Int)
(declare-fun x3075 () Int)
(declare-fun x3821 () Int)
(declare-fun x4366 () Bool)
(declare-fun x1180 () Int)
(declare-fun x2151 () Int)
(declare-fun x3278 () Int)
(declare-fun x2167 () Bool)
(declare-fun x4648 (Int) Int)
(declare-fun x1024 () Bool)
(declare-fun x2737 () Int)
(declare-fun x2149 () Int)
(declare-fun x782 () Bool)
(declare-fun x2008 () Int)
(declare-fun x4679 () Bool)
(declare-fun x3755 () Int)
(declare-fun x3261 () Bool)
(declare-fun x3507 () Int)
(declare-fun x3550 () Int)
(declare-fun x1351 () Bool)
(declare-fun x1108 () Int)
(declare-fun x1048 () Bool)
(declare-fun x4706 () Bool)
(declare-fun x1398 () Int)
(declare-fun x2936 () Int)
(declare-fun x724 () Bool)
(declare-fun x853 () Bool)
(declare-fun x3579 () Int)
(declare-fun x3869 () Bool)
(declare-fun x2337 () Int)
(declare-fun x4726 () Int)
(declare-fun x3432 () Int)
(declare-fun x125 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x3375 () Int)
(declare-fun x1230 () Bool)
(declare-fun x4614 () Int)
(declare-fun x3811 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1460 () Int)
(declare-fun x4398 () Int)
(declare-fun x856 () Int)
(declare-fun x1308 () Int)
(declare-fun x587 () Bool)
(declare-fun x4212 () Int)
(declare-fun x549 () Int)
(declare-fun x3730 () Int)
(declare-fun x3085 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x3999 () Int)
(declare-fun x4610 () Int)
(declare-fun x2110 () Bool)
(declare-fun x35 () Bool)
(declare-fun x4677 () Int)
(declare-fun x1665 () Int)
(declare-fun x1406 () Int)
(declare-fun x855 () Int)
(declare-fun x2800 () Int)
(declare-fun x3839 () Bool)
(declare-fun x833 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x506 () Bool)
(declare-fun x2461 () Int)
(declare-fun x3758 () Int)
(declare-fun x580 () Int)
(declare-fun x1850 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x2803 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1623 () Int)
(declare-fun x3611 () Int)
(declare-fun x2049 () Int)
(declare-fun x2762 () Int)
(declare-fun x1100 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x2823 () Int)
(declare-fun x4279 () Int)
(declare-fun x1639 () Int)
(declare-fun x3605 () Int)
(declare-fun x1588 () Int)
(declare-fun x1540 () Int)
(declare-fun x1295 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x487 () Bool)
(declare-fun x3855 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x3566 () Int)
(declare-fun x3571 () Int)
(declare-fun x3968 () Int)
(declare-fun x3907 () Int)
(declare-fun x3356 () Int)
(declare-fun x2186 () Int)
(declare-fun x2550 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x643 () Int)
(declare-fun x843 () Int)
(declare-fun x3786 () Int)
(declare-fun x1758 () Int)
(declare-fun x42 () Int)
(declare-fun x436 () Int)
(declare-fun x753 (Int) Int)
(declare-fun x2037 () Int)
(declare-fun x3433 () Int)
(declare-fun x4197 () Bool)
(declare-fun x1281 () Int)
(declare-fun x4729 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x4587 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1199 () Int)
(declare-fun x3632 () Int)
(declare-fun x2075 () Bool)
(declare-fun x821 () Int)
(declare-fun x4546 () Int)
(declare-fun x4377 () Bool)
(declare-fun x957 () Int)
(declare-fun x3115 () Int)
(declare-fun x249 () Bool)
(declare-fun x1164 () Int)
(declare-fun x3528 () Int)
(declare-fun x4742 () Bool)
(declare-fun x4724 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x669 () Int)
(declare-fun x203 () Int)
(declare-fun x4098 () Int)
(declare-fun x1634 () Int)
(declare-fun x4298 () Bool)
(declare-fun x215 () Bool)
(declare-fun x3039 () Bool)
(declare-fun x829 () Bool)
(declare-fun x2972 () Int)
(declare-fun x967 () Bool)
(declare-fun x2475 () Int)
(declare-fun x2620 () Bool)
(declare-fun x2283 () Int)
(declare-fun x2958 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x983 () Int)
(declare-fun x1342 () Int)
(declare-fun x2704 () Int)
(declare-fun x1138 () Int)
(declare-fun x1953 () Int)
(declare-fun x981 () Bool)
(declare-fun x47 () Int)
(declare-fun x301 () Int)
(declare-fun x1282 () Int)
(declare-fun x437 () Bool)
(declare-fun x2912 () Int)
(declare-fun x1135 () Int)
(declare-fun x602 () Int)
(declare-fun x4015 () Bool)
(declare-fun x2810 () Int)
(declare-fun x655 () Int)
(declare-fun x850 () Int)
(declare-fun x1354 () Int)
(declare-fun x4314 () Int)
(declare-fun x2141 () Int)
(declare-fun x3485 () Int)
(declare-fun x1749 () Int)
(declare-fun x598 () Int)
(declare-fun x4602 () Int)
(declare-fun x329 () Bool)
(declare-fun x2950 () Int)
(declare-fun x2009 () Int)
(declare-fun x3163 () Int)
(declare-fun x165 () Int)
(declare-fun x2100 () Bool)
(declare-fun x1736 () Int)
(declare-fun x1779 () Bool)
(declare-fun x600 () Bool)
(declare-fun x749 () Bool)
(declare-fun x1686 () Int)
(declare-fun x1635 () Int)
(declare-fun x1459 () Int)
(declare-fun x3544 () Int)
(declare-fun x519 () Bool)
(declare-fun x289 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x4392 () Int)
(declare-fun x1028 () Bool)
(declare-fun x2891 () Int)
(declare-fun x4329 () Int)
(declare-fun x1755 () Int)
(declare-fun x3724 () Int)
(declare-fun x2436 () Bool)
(declare-fun x1457 () Int)
(declare-fun x4326 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x909 () Int)
(declare-fun x3005 () Int)
(declare-fun x4029 () Int)
(declare-fun x2483 () Int)
(declare-fun x250 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2627 () Int)
(declare-fun x2280 () Bool)
(declare-fun x116 () Int)
(declare-fun x3802 () Int)
(declare-fun x3529 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x3053 () Int)
(declare-fun x357 () Int)
(declare-fun x4184 () Int)
(declare-fun x4805 () Bool)
(declare-fun x3663 (Int Int Int Int) Int)
(declare-fun x3296 () Bool)
(declare-fun x3538 () Int)
(declare-fun x1397 () Bool)
(declare-fun x4444 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x1020 (Int) Int)
(declare-fun x4114 () Int)
(declare-fun x4763 () Bool)
(declare-fun x2044 () Int)
(declare-fun x1133 () Int)
(declare-fun x2053 () Int)
(declare-fun x3685 () Bool)
(declare-fun x2833 () Int)
(declare-fun x1027 () Int)
(declare-fun x1272 () Int)
(declare-fun x2844 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x4511 () Bool)
(declare-fun x708 () Bool)
(declare-fun x1777 () Int)
(declare-fun x3050 () Int)
(declare-fun x1794 () Int)
(declare-fun x2855 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1586 () Int)
(declare-fun x3921 () Int)
(declare-fun x1206 () Int)
(declare-fun x2431 () Int)
(declare-fun x2430 () Bool)
(declare-fun x2631 () Int)
(declare-fun x2113 () Int)
(declare-fun x1706 () Bool)
(declare-fun x1065 () Int)
(declare-fun x3228 () Bool)
(declare-fun x2595 () Int)
(declare-fun x1828 () Int)
(declare-fun x352 () Int)
(declare-fun x3042 () Int)
(declare-fun x1690 () Int)
(declare-fun x882 () Bool)
(declare-fun x3153 () Int)
(declare-fun x3552 () Int)
(declare-fun x3824 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x4827 () Int)
(declare-fun x4146 () Int)
(declare-fun x2901 () Bool)
(declare-fun x4211 () Int)
(declare-fun x662 () Bool)
(declare-fun x346 () Int)
(declare-fun x3814 () Int)
(declare-fun x1677 () Int)
(declare-fun x2330 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x1237 () Int)
(declare-fun x1037 () Int)
(declare-fun x3960 () Int)
(declare-fun x1101 () Int)
(declare-fun x1174 () Int)
(declare-fun x4485 () Int)
(declare-fun x4335 () Int)
(declare-fun x4477 () Bool)
(declare-fun x2218 () Int)
(declare-fun x3894 () Int)
(declare-fun x2699 () Int)
(declare-fun x2415 () Int)
(declare-fun x1817 () Bool)
(declare-fun x791 () Int)
(declare-fun x4608 () Int)
(declare-fun x2404 () Bool)
(declare-fun x4571 () Int)
(declare-fun x3912 () Int)
(declare-fun x701 () Bool)
(declare-fun x4464 () Int)
(declare-fun x4415 () Int)
(declare-fun x635 () Int)
(declare-fun x3641 () Bool)
(declare-fun x3728 () Int)
(declare-fun x409 () Int)
(declare-fun x2650 () Int)
(declare-fun x4599 () Bool)
(declare-fun x4764 () Int)
(declare-fun x4380 () Int)
(declare-fun x4336 () Bool)
(declare-fun x1927 () Int)
(declare-fun x3175 () Int)
(declare-fun x4275 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x296 () Int)
(declare-fun x1119 () Int)
(declare-fun x2119 () Int)
(declare-fun x3695 () Int)
(declare-fun x2206 () Int)
(declare-fun x1866 () Int)
(declare-fun x3462 () Int)
(declare-fun x170 () Int)
(declare-fun x362 () Bool)
(declare-fun x3497 () Int)
(declare-fun x4454 () Int)
(declare-fun x2015 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x65 () Bool)
(declare-fun x2961 () Int)
(declare-fun x4594 () Int)
(declare-fun x1974 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x3664 () Int)
(declare-fun x3519 () Int)
(declare-fun x4008 () Int)
(declare-fun x1883 () Bool)
(declare-fun x3820 () Int)
(declare-fun x1554 () Int)
(declare-fun x2419 () Int)
(declare-fun x2447 () Int)
(declare-fun x1895 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1369 () Int)
(declare-fun x4409 () Int)
(declare-fun x1996 () Int)
(declare-fun x504 () Bool)
(declare-fun x4661 () Int)
(declare-fun x3307 () Bool)
(declare-fun x4714 () Int)
(declare-fun x992 () Int)
(declare-fun x4207 () Int)
(declare-fun x687 () Int)
(declare-fun x4018 () Int)
(declare-fun x1178 () Int)
(declare-fun x213 () Int)
(declare-fun x2031 () Int)
(declare-fun x847 () Int)
(declare-fun x2506 () Int)
(declare-fun x1497 () Int)
(declare-fun x3607 () Int)
(declare-fun x2679 () Int)
(declare-fun x3281 () Bool)
(declare-fun x4685 () Int)
(declare-fun x4026 () Int)
(declare-fun x1535 () Int)
(declare-fun x4139 () Bool)
(declare-fun x3481 () Bool)
(declare-fun x3998 () Int)
(declare-fun x473 () Int)
(declare-fun x3913 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x221 () Bool)
(declare-fun x3702 () Int)
(declare-fun x316 () Bool)
(declare-fun x4273 () Int)
(declare-fun x2754 () Int)
(declare-fun x2763 () Bool)
(declare-fun x4687 () Int)
(declare-fun x2435 () Int)
(declare-fun x2542 () Int)
(declare-fun x3018 () Int)
(declare-fun x1412 () Bool)
(declare-fun x4214 () Int)
(declare-fun x2285 () Int)
(declare-fun x1350 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x4660 () Int)
(declare-fun x3725 () Int)
(declare-fun x1219 () Int)
(declare-fun x2544 () Int)
(declare-fun x1309 () Int)
(declare-fun x2892 () Bool)
(declare-fun x389 () Int)
(declare-fun x2706 () Int)
(declare-fun x1339 () Bool)
(declare-fun x3162 () Int)
(declare-fun x2953 () Int)
(declare-fun x3421 () Bool)
(declare-fun x919 () Int)
(declare-fun x2678 () Int)
(declare-fun x1074 () Int)
(declare-fun x1781 () Int)
(declare-fun x2317 () Int)
(declare-fun x317 () Int)
(declare-fun x1597 () Int)
(declare-fun x3059 () Int)
(declare-fun x1273 () Int)
(declare-fun x4467 () Int)
(declare-fun x1568 () Int)
(declare-fun x947 () Int)
(declare-fun x3438 () Bool)
(declare-fun x3881 () Int)
(declare-fun x938 () Bool)
(declare-fun x231 () Int)
(declare-fun x1619 () Int)
(declare-fun x638 () Int)
(declare-fun x4431 () Int)
(declare-fun x2657 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x3122 () Int)
(declare-fun x420 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x2967 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x2596 () Int)
(declare-fun x19 () Bool)
(declare-fun x682 (Int Int Int) Int)
(declare-fun x2225 () Int)
(declare-fun x1089 () Int)
(declare-fun x2226 () Int)
(declare-fun x1571 () Int)
(declare-fun x2083 () Int)
(declare-fun x1990 () Bool)
(declare-fun x98 () Int)
(declare-fun x1844 () Int)
(declare-fun x639 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1485 () Int)
(declare-fun x712 () Int)
(declare-fun x963 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x1625 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x354 () Bool)
(declare-fun x189 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1471 () Int)
(declare-fun x3091 (Int) Int)
(declare-fun x33 () Bool)
(declare-fun x4165 () Int)
(declare-fun x4316 () Int)
(declare-fun x4643 () Int)
(declare-fun x2677 () Int)
(declare-fun x3987 () Bool)
(declare-fun x4359 () Bool)
(declare-fun x237 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x3473 () Int)
(declare-fun x2235 () Int)
(declare-fun x1017 () Int)
(declare-fun x3585 () Int)
(declare-fun x4688 () Bool)
(declare-fun x964 () Int)
(declare-fun x2748 () Int)
(declare-fun x3325 () Int)
(declare-fun x3372 () Int)
(declare-fun x3120 () Int)
(declare-fun x3877 () Int)
(declare-fun x4073 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x102 () Int)
(declare-fun x904 () Int)
(declare-fun x1196 () Int)
(declare-fun x4619 () Int)
(declare-fun x3310 () Int)
(declare-fun x2360 () Int)
(declare-fun x1038 () Int)
(declare-fun x3051 () Int)
(declare-fun x2632 () Int)
(declare-fun x3825 () Bool)
(declare-fun x1098 () Int)
(declare-fun x2572 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1985 () Int)
(declare-fun x4308 () Bool)
(declare-fun x3135 () Int)
(declare-fun x3880 () Int)
(declare-fun x1553 () Int)
(declare-fun x532 () Int)
(declare-fun x998 () Bool)
(declare-fun x4117 () Int)
(declare-fun x634 () Bool)
(declare-fun x561 () Bool)
(declare-fun x3015 () Int)
(declare-fun x3649 () Int)
(declare-fun x4149 () Int)
(declare-fun x574 () Bool)
(declare-fun x2339 () Int)
(declare-fun x229 () Bool)
(declare-fun x4233 () Int)
(declare-fun x4834 () Int)
(declare-fun x1385 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x260 () Int)
(declare-fun x3780 () Int)
(declare-fun x779 () Int)
(declare-fun x3178 () Int)
(declare-fun x1671 () Int)
(declare-fun x195 () Bool)
(declare-fun x41 () Int)
(declare-fun x2487 () Int)
(declare-fun x4192 () Int)
(declare-fun x1194 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x4756 () Bool)
(declare-fun x2102 () Int)
(declare-fun x3626 () Int)
(declare-fun x4 () Int)
(declare-fun x3405 () Bool)
(declare-fun x4243 () Int)
(declare-fun x513 () Int)
(declare-fun x965 () Int)
(declare-fun x2986 () Int)
(declare-fun x493 () Int)
(declare-fun x31 () Int)
(declare-fun x4327 () Int)
(declare-fun x4751 () Int)
(declare-fun x2145 () Bool)
(declare-fun x463 () Bool)
(declare-fun x21 () Int)
(declare-fun x2744 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x3107 () Int)
(declare-fun x864 () Int)
(declare-fun x3765 () Bool)
(declare-fun x2351 () Int)
(declare-fun x4238 () Int)
(declare-fun x2013 () Int)
(declare-fun x3771 () Int)
(declare-fun x676 () Int)
(declare-fun x1288 () Int)
(declare-fun x190 () Bool)
(declare-fun x2059 () Int)
(declare-fun x537 () Bool)
(declare-fun x1399 () Int)
(declare-fun x802 () Int)
(declare-fun x1946 () Bool)
(declare-fun x1360 () Int)
(declare-fun x2096 () Bool)
(declare-fun x2933 () Int)
(declare-fun x3895 () Int)
(declare-fun x4154 () Int)
(declare-fun x955 () Int)
(declare-fun x3063 () Int)
(declare-fun x114 () Int)
(declare-fun x1592 () Bool)
(declare-fun x500 () Int)
(declare-fun x2417 () Bool)
(declare-fun x3981 () Int)
(declare-fun x1494 () Int)
(declare-fun x2983 () Bool)
(declare-fun x863 () Int)
(declare-fun x4170 () Int)
(declare-fun x1948 () Int)
(declare-fun x3379 () Int)
(declare-fun x793 () Int)
(declare-fun x4515 () Int)
(declare-fun x2624 () Int)
(declare-fun x4641 (Int) Int)
(declare-fun x201 () Bool)
(declare-fun x1796 (Int Int) Int)
(declare-fun x2659 () Int)
(declare-fun x3957 () Int)
(declare-fun x2455 () Int)
(declare-fun x127 () Bool)
(declare-fun x2057 () Int)
(declare-fun x2328 () Int)
(declare-fun x1626 () Int)
(declare-fun x1293 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1452 () Int)
(declare-fun x2294 () Int)
(declare-fun x4831 () Bool)
(declare-fun x2785 () Int)
(declare-fun x241 () Bool)
(declare-fun x624 () Int)
(declare-fun x3078 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x2976 () Int)
(declare-fun x3828 () Int)
(declare-fun x4566 () Int)
(declare-fun x3378 () Int)
(declare-fun x1739 () Int)
(declare-fun x1224 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x2108 () Int)
(declare-fun x145 () Bool)
(declare-fun x4323 () Int)
(declare-fun x4311 () Bool)
(declare-fun x3286 () Int)
(declare-fun x930 () Int)
(declare-fun x1725 () Int)
(declare-fun x252 () Int)
(declare-fun x2557 () Int)
(declare-fun x4495 () Bool)
(declare-fun x1086 () Int)
(declare-fun x71 () Int)
(declare-fun x4058 () Bool)
(declare-fun x4267 () Int)
(declare-fun x291 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x556 () Bool)
(declare-fun x2292 () Int)
(declare-fun x3288 () Int)
(declare-fun x3146 () Int)
(declare-fun x2746 () Int)
(declare-fun x4210 () Int)
(declare-fun x546 () Int)
(declare-fun x3689 () Int)
(declare-fun x1314 () Int)
(declare-fun x2304 () Int)
(declare-fun x3874 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x885 () Int)
(declare-fun x1449 () Int)
(declare-fun x934 () Bool)
(declare-fun x2175 () Int)
(declare-fun x2731 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x2268 () Int)
(declare-fun x3265 () Bool)
(declare-fun x4088 () Bool)
(declare-fun x836 () Int)
(declare-fun x3573 () Int)
(declare-fun x831 () Int)
(declare-fun x1363 () Bool)
(declare-fun x3384 () Int)
(declare-fun x3504 () Bool)
(declare-fun x2166 () Int)
(declare-fun x3727 () Int)
(declare-fun x900 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x4085 () Bool)
(declare-fun x911 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1102 () Int)
(declare-fun x4136 () Bool)
(declare-fun x2723 () Int)
(declare-fun x4670 () Int)
(declare-fun x14 () Int)
(declare-fun x1606 () Bool)
(declare-fun x3294 () Int)
(declare-fun x3697 () Int)
(declare-fun x1240 () Int)
(declare-fun x1835 () Int)
(declare-fun x692 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x423 () Bool)
(declare-fun x3154 () Int)
(declare-fun x806 () Bool)
(declare-fun x986 () Bool)
(declare-fun x3333 () Int)
(declare-fun x4746 () Int)
(declare-fun x3395 () Bool)
(declare-fun x573 () Int)
(declare-fun x1093 () Int)
(declare-fun x4014 () Bool)
(declare-fun x2524 () Int)
(declare-fun x4305 () Int)
(declare-fun x844 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x1543 () Int)
(declare-fun x188 () Int)
(declare-fun x2011 () Int)
(declare-fun x3609 () Int)
(declare-fun x385 () Int)
(declare-fun x3287 () Int)
(declare-fun x4820 () Int)
(declare-fun x3942 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x2831 () Int)
(declare-fun x4720 () Int)
(declare-fun x4167 () Int)
(declare-fun x2472 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x2758 () Int)
(declare-fun x212 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x1823 () Int)
(declare-fun x1418 () Bool)
(declare-fun x1836 () Int)
(declare-fun x4440 () Int)
(declare-fun x2941 () Int)
(declare-fun x1929 () Int)
(declare-fun x876 () Int)
(declare-fun x636 () Int)
(declare-fun x1104 () Bool)
(declare-fun x4810 () Bool)
(declare-fun x3949 () Int)
(declare-fun x4390 () Bool)
(declare-fun x380 () Int)
(declare-fun x3744 () Bool)
(declare-fun x2484 () Int)
(declare-fun x4428 () Int)
(declare-fun x1748 () Int)
(declare-fun x4084 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x2617 () Int)
(declare-fun x2750 () Int)
(declare-fun x1991 () Int)
(declare-fun x832 () Bool)
(declare-fun x2370 () Int)
(declare-fun x3083 () Int)
(declare-fun x3164 () Int)
(declare-fun x2848 () Int)
(declare-fun x4773 () Int)
(declare-fun x3922 () Int)
(declare-fun x1971 () Bool)
(declare-fun x4432 () Bool)
(declare-fun x1438 () Int)
(declare-fun x4438 () Int)
(declare-fun x3487 () Bool)
(declare-fun x1214 () Int)
(declare-fun x4012 () Bool)
(declare-fun x632 () Int)
(declare-fun x3640 () Bool)
(declare-fun x3192 () Int)
(declare-fun x1381 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x4268 () Int)
(declare-fun x4426 () Bool)
(declare-fun x530 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x263 () Int)
(declare-fun x4138 () Bool)
(declare-fun x2626 () Int)
(declare-fun x2703 () Int)
(declare-fun x2018 () Int)
(declare-fun x4483 () Int)
(declare-fun x2385 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x4399 () Int)
(declare-fun x4355 () Int)
(declare-fun x4260 () Int)
(declare-fun x464 () Int)
(declare-fun x1864 () Int)
(declare-fun x1370 () Bool)
(declare-fun x4494 () Bool)
(declare-fun x3944 () Int)
(declare-fun x2198 () Int)
(declare-fun x4352 () Int)
(declare-fun x3495 () Bool)
(declare-fun x3191 () Int)
(declare-fun x4216 () Int)
(declare-fun x3011 () Bool)
(declare-fun x307 () Int)
(declare-fun x3526 () Int)
(declare-fun x4372 () Int)
(declare-fun x2080 () Int)
(declare-fun x4624 () Bool)
(declare-fun x3541 () Int)
(declare-fun x126 () Int)
(declare-fun x4096 (Int) Int)
(declare-fun x2934 () Bool)
(declare-fun x2633 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x958 () Int)
(declare-fun x3093 () Int)
(declare-fun x1775 (Int) Int)
(declare-fun x781 () Bool)
(declare-fun x773 () Int)
(declare-fun x4052 () Int)
(declare-fun x1872 () Int)
(declare-fun x1569 () Int)
(declare-fun x1191 () Int)
(declare-fun x490 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1630 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1518 () Int)
(declare-fun x3795 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x303 () Int)
(declare-fun x3435 () Int)
(declare-fun x2772 () Int)
(declare-fun x3829 () Bool)
(declare-fun x2835 () Int)
(declare-fun x2984 () Int)
(declare-fun x4741 () Int)
(declare-fun x2741 (Int) Int)
(declare-fun x874 () Int)
(declare-fun x2270 () Bool)
(declare-fun x4108 () Int)
(declare-fun x1737 () Int)
(declare-fun x539 () Int)
(declare-fun x3986 () Bool)
(declare-fun x3721 () Int)
(declare-fun x2092 () Int)
(declare-fun x4376 () Int)
(declare-fun x2692 () Bool)
(declare-fun x991 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x310 () Int)
(declare-fun x1383 () Int)
(declare-fun x2526 () Int)
(declare-fun x8 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x862 () Int)
(declare-fun x1070 () Int)
(declare-fun x2670 () Int)
(declare-fun x4639 () Int)
(declare-fun x3477 () Int)
(declare-fun x3311 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x1593 () Int)
(declare-fun x1040 () Int)
(declare-fun x264 () Int)
(declare-fun x4657 () Int)
(declare-fun x364 () Int)
(declare-fun x2851 () Int)
(declare-fun x2345 () Int)
(declare-fun x1804 () Int)
(declare-fun x4235 () Bool)
(declare-fun x3882 () Int)
(declare-fun x3199 () Int)
(declare-fun x2390 () Int)
(declare-fun x848 () Int)
(declare-fun x2288 () Int)
(declare-fun x1439 () Int)
(declare-fun x510 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x2389 () Int)
(declare-fun x1808 () Int)
(declare-fun x2282 () Int)
(declare-fun x3181 () Int)
(declare-fun x3866 () Int)
(declare-fun x3095 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x857 (Int) Int)
(declare-fun x318 () Bool)
(declare-fun x3346 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x1111 () Int)
(declare-fun x3046 () Bool)
(declare-fun x2403 () Int)
(declare-fun x507 () Bool)
(declare-fun x4702 () Int)
(declare-fun x3339 () Bool)
(declare-fun x1880 () Int)
(declare-fun x72 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x2470 () Int)
(declare-fun x2104 () Int)
(declare-fun x3931 () Bool)
(declare-fun x484 () Int)
(declare-fun x830 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x27 () Int)
(declare-fun x2608 () Int)
(declare-fun x4792 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x4134 () Int)
(declare-fun x3993 () Bool)
(declare-fun x4312 () Int)
(declare-fun x2973 () Int)
(declare-fun x402 () Bool)
(declare-fun x161 () Int)
(declare-fun x1795 () Int)
(declare-fun x1124 () Bool)
(declare-fun x3782 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x4199 () Int)
(declare-fun x3745 () Int)
(declare-fun x4161 () Bool)
(declare-fun x3112 () Int)
(declare-fun x1516 () Bool)
(declare-fun x3597 () Int)
(declare-fun x2182 () Bool)
(declare-fun x3701 () Int)
(declare-fun x3586 () Bool)
(declare-fun x3656 () Int)
(declare-fun x1668 () Int)
(declare-fun x4219 () Bool)
(declare-fun x2935 () Bool)
(declare-fun x1591 () Int)
(declare-fun x4484 () Int)
(declare-fun x4803 () Int)
(declare-fun x2500 () Int)
(declare-fun x4045 () Int)
(declare-fun x4419 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x810 () Int)
(declare-fun x4701 () Int)
(declare-fun x34 () Bool)
(declare-fun x4157 () Int)
(declare-fun x4768 (Int) Int)
(declare-fun x673 () Int)
(declare-fun x2303 () Int)
(declare-fun x582 () Bool)
(declare-fun x4092 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1832 () Int)
(declare-fun x2410 () Int)
(declare-fun x4375 () Bool)
(declare-fun x581 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1274 () Int)
(declare-fun x597 () Bool)
(declare-fun x1361 () Int)
(declare-fun x3013 () Bool)
(declare-fun x3547 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1590 () Int)
(declare-fun x700 () Int)
(declare-fun x4551 () Int)
(declare-fun x4281 () Int)
(declare-fun x3484 () Int)
(declare-fun x4324 () Int)
(declare-fun x2508 () Int)
(declare-fun x2601 () Bool)
(declare-fun x3947 () Int)
(declare-fun x2365 () Bool)
(declare-fun x1580 () Int)
(declare-fun x4581 () Int)
(declare-fun x521 () Int)
(declare-fun x1249 () Int)
(declare-fun x2667 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x742 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x2796 () Bool)
(declare-fun x175 () Bool)
(declare-fun x4442 () Bool)
(declare-fun x3016 () Int)
(declare-fun x3853 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1676 () Int)
(declare-fun x2333 () Int)
(declare-fun x84 () Int)
(declare-fun x4605 () Int)
(declare-fun x4669 () Int)
(declare-fun x2428 () Int)
(declare-fun x4830 () Bool)
(declare-fun x1900 () Int)
(declare-fun x3500 () Bool)
(declare-fun x2880 () Int)
(declare-fun x3196 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2548 () Int)
(declare-fun x101 () Int)
(declare-fun x4053 () Bool)
(declare-fun x2718 () Int)
(declare-fun x4395 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1572 () Int)
(declare-fun x3532 () Bool)
(declare-fun x2982 () Int)
(declare-fun x4414 () Int)
(declare-fun x2372 () Bool)
(declare-fun x1875 () Int)
(declare-fun x2221 () Bool)
(declare-fun x942 () Bool)
(declare-fun x3797 () Bool)
(declare-fun x4076 () Int)
(declare-fun x285 () Bool)
(declare-fun x4632 () Int)
(declare-fun x2979 () Int)
(declare-fun x797 () Bool)
(declare-fun x786 () Int)
(declare-fun x890 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x1158 () Int)
(declare-fun x4569 () Int)
(declare-fun x3371 () Int)
(declare-fun x242 () Bool)
(declare-fun x2806 () Int)
(declare-fun x4270 () Bool)
(declare-fun x2488 () Int)
(declare-fun x2481 () Int)
(declare-fun x2864 () Bool)
(declare-fun x278 () Int)
(declare-fun x3158 () Bool)
(declare-fun x2133 () Int)
(declare-fun x3251 () Int)
(declare-fun x3762 () Int)
(declare-fun x2434 () Int)
(declare-fun x40 () Int)
(declare-fun x3521 () Int)
(declare-fun x4115 () Bool)
(declare-fun x4230 () Bool)
(declare-fun x3496 () Int)
(declare-fun x1860 () Int)
(declare-fun x4645 () Int)
(declare-fun x2244 () Bool)
(declare-fun x1414 () Int)
(declare-fun x2468 () Int)
(declare-fun x173 () Bool)
(declare-fun x795 () Bool)
(declare-fun x3110 () Int)
(declare-fun x2493 () Int)
(declare-fun x4543 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x4649 () Int)
(declare-fun x1303 () Bool)
(declare-fun x2202 () Int)
(declare-fun x4050 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x897 () Bool)
(declare-fun x458 () Bool)
(declare-fun x3752 () Int)
(declare-fun x1922 () Int)
(declare-fun x1060 () Bool)
(declare-fun x4658 () Int)
(declare-fun x1557 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1286 () Int)
(declare-fun x1780 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x1926 () Int)
(declare-fun x2653 () Bool)
(declare-fun x3959 () Int)
(declare-fun x2395 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1296 () Int)
(declare-fun x267 () Bool)
(declare-fun x4062 () Int)
(declare-fun x1744 () Int)
(declare-fun x3303 () Bool)
(declare-fun x675 (Int) Int)
(declare-fun x1168 () Int)
(declare-fun x3954 () Int)
(declare-fun x2004 () Int)
(declare-fun x333 () Bool)
(declare-fun x4037 () Int)
(declare-fun x954 () Int)
(declare-fun x3784 () Int)
(declare-fun x3860 () Bool)
(declare-fun x896 () Int)
(declare-fun x1919 () Bool)
(declare-fun x4762 () Int)
(declare-fun x3717 () Bool)
(declare-fun x859 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x1797 () Int)
(declare-fun x697 () Int)
(declare-fun x482 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1848 () Int)
(declare-fun x4770 () Int)
(declare-fun x4636 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x57 () Bool)
(declare-fun x3554 () Int)
(declare-fun x3499 () Int)
(declare-fun x4722 () Int)
(declare-fun x452 () Int)
(declare-fun x651 () Int)
(declare-fun x3222 () Int)
(declare-fun x3328 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x1236 () Int)
(declare-fun x959 () Int)
(declare-fun x214 () Bool)
(declare-fun x1825 () Int)
(declare-fun x3707 () Int)
(declare-fun x4758 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x4718 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x1338 () Int)
(declare-fun x3398 () Int)
(declare-fun x1658 () Int)
(declare-fun x3596 () Bool)
(declare-fun x4821 () Int)
(declare-fun x3417 () Bool)
(declare-fun x4790 () Int)
(declare-fun x1165 () Int)
(declare-fun x3909 () Bool)
(declare-fun x3639 () Int)
(declare-fun x2012 () Bool)
(declare-fun x2259 () Int)
(declare-fun x3870 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x2885 () Int)
(declare-fun x192 () Bool)
(declare-fun x2201 () Int)
(declare-fun x940 () Bool)
(declare-fun x3409 () Int)
(declare-fun x51 () Int)
(declare-fun x2252 () Int)
(declare-fun x181 () Int)
(declare-fun x3258 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x4118 () Int)
(declare-fun x780 () Int)
(declare-fun x2858 () Int)
(declare-fun x1829 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x748 () Int)
(declare-fun x576 () Int)
(declare-fun x2111 () Bool)
(declare-fun x1171 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1113 () Int)
(declare-fun x826 () Int)
(declare-fun x154 () Int)
(declare-fun x2254 () Bool)
(declare-fun x1574 () Int)
(declare-fun x429 () Int)
(declare-fun x4221 () Int)
(declare-fun x3114 () Int)
(declare-fun x2871 () Int)
(declare-fun x3905 () Bool)
(declare-fun x4497 () Int)
(declare-fun x1938 () Bool)
(declare-fun x118 () Int)
(declare-fun x2710 () Int)
(declare-fun x3177 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x4739 () Bool)
(declare-fun x1243 () Int)
(declare-fun x1469 () Int)
(declare-fun x193 () Int)
(declare-fun x1016 () Int)
(declare-fun x4315 () Int)
(declare-fun x4247 () Bool)
(declare-fun x4825 () Int)
(declare-fun x3068 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x2675 () Int)
(declare-fun x2559 () Bool)
(declare-fun x4522 () Int)
(declare-fun x925 () Int)
(declare-fun x2521 () Int)
(declare-fun x4447 () Int)
(declare-fun x3696 () Bool)
(declare-fun x4828 () Int)
(declare-fun x4094 () Int)
(declare-fun x4350 () Int)
(declare-fun x2676 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x917 () Int)
(declare-fun x1917 () Int)
(declare-fun x3320 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x4423 () Bool)
(declare-fun x1355 () Int)
(declare-fun x820 () Bool)
(declare-fun x1770 () Int)
(declare-fun x1531 () Int)
(declare-fun x360 () Int)
(declare-fun x12 () Int)
(declare-fun x4142 () Int)
(declare-fun x3 () Bool)
(declare-fun x1268 () Int)
(declare-fun x3200 () Int)
(declare-fun x223 () Int)
(declare-fun x812 () Bool)
(declare-fun x4532 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x427 () Bool)
(declare-fun x842 () Int)
(declare-fun x3262 () Bool)
(declare-fun x4119 () Int)
(declare-fun x3106 () Int)
(declare-fun x2745 () Int)
(declare-fun x2220 () Int)
(declare-fun x2095 () Bool)
(declare-fun x4651 () Int)
(declare-fun x1082 () Int)
(declare-fun x1193 () Bool)
(declare-fun x1312 () Int)
(declare-fun x1977 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x768 () Int)
(declare-fun x1698 () Int)
(declare-fun x1918 () Int)
(declare-fun x1130 () Int)
(declare-fun x4539 () Int)
(declare-fun x1822 () Int)
(declare-fun x4224 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x4618 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x1577 () Int)
(declare-fun x4492 () Bool)
(declare-fun x2528 () Int)
(declare-fun x4847 () Int)
(declare-fun x1637 () Int)
(declare-fun x3273 () Bool)
(declare-fun x880 () Int)
(declare-fun x2767 () Bool)
(declare-fun x328 () Bool)
(declare-fun x3456 () Int)
(declare-fun x3044 () Int)
(declare-fun x1495 () Bool)
(declare-fun x3823 () Int)
(declare-fun x4788 () Int)
(declare-fun x2646 () Bool)
(declare-fun x2205 () Int)
(declare-fun x4591 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x3984 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1434 () Int)
(declare-fun x585 () Int)
(declare-fun x1254 () Int)
(declare-fun x2219 () Int)
(declare-fun x38 () Bool)
(declare-fun x4708 () Int)
(declare-fun x4784 () Int)
(declare-fun x892 () Int)
(declare-fun x984 () Bool)
(declare-fun x2846 () Int)
(declare-fun x4072 () Bool)
(declare-fun x2480 () Int)
(declare-fun x1646 () Bool)
(declare-fun x373 () Int)
(declare-fun x4807 () Int)
(declare-fun x4128 () Int)
(declare-fun x3955 () Int)
(declare-fun x4693 () Int)
(declare-fun x3246 () Bool)
(declare-fun x4232 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x3498 () Int)
(declare-fun x4754 () Bool)
(declare-fun x319 () Bool)
(declare-fun x361 () Int)
(declare-fun x1810 () Int)
(declare-fun x3289 () Int)
(declare-fun x2644 (Int Int Int Int Int Int) Int)
(declare-fun x4577 () Int)
(declare-fun x261 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x2989 () Int)
(declare-fun x4613 () Bool)
(declare-fun x3137 () Bool)
(declare-fun x1401 () Int)
(declare-fun x3088 () Bool)
(declare-fun x994 () Int)
(declare-fun x1738 () Int)
(declare-fun x3546 () Int)
(declare-fun x1466 () Int)
(declare-fun x2229 () Int)
(declare-fun x1212 () Bool)
(declare-fun x4385 () Int)
(declare-fun x956 () Int)
(declare-fun x2615 () Bool)
(declare-fun x2818 () Int)
(declare-fun x545 () Bool)
(declare-fun x1865 () Int)
(declare-fun x256 () Int)
(declare-fun x4457 () Int)
(declare-fun x4418 () Int)
(declare-fun x3749 () Bool)
(declare-fun x1255 () Int)
(declare-fun x3883 () Bool)
(declare-fun x807 () Bool)
(declare-fun x1493 () Int)
(declare-fun x3631 () Int)
(declare-fun x1701 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x4560 () Int)
(declare-fun x1731 () Int)
(declare-fun x2264 () Bool)
(declare-fun x3977 () Int)
(declare-fun x4617 () Int)
(declare-fun x3900 () Bool)
(declare-fun x4371 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1528 () Int)
(declare-fun x2832 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x1806 () Int)
(declare-fun x3952 () Bool)
(declare-fun x787 () Int)
(declare-fun x3818 () Int)
(declare-fun x893 () Int)
(declare-fun x1524 () Int)
(declare-fun x2724 () Int)
(declare-fun x3687 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x1802 () Int)
(declare-fun x1735 () Int)
(declare-fun x707 () Int)
(declare-fun x4427 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x895 () Int)
(declare-fun x3022 () Bool)
(declare-fun x4604 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x2638 () Int)
(declare-fun x2597 () Int)
(declare-fun x1455 () Int)
(declare-fun x1425 () Int)
(declare-fun x4748 () Int)
(declare-fun x4365 () Bool)
(declare-fun x3770 () Int)
(declare-fun x1648 () Int)
(declare-fun x3338 () Int)
(declare-fun x1870 () Bool)
(declare-fun x2888 () Int)
(declare-fun x3655 () Int)
(declare-fun x400 () Bool)
(declare-fun x279 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x4345 () Int)
(declare-fun x4368 () Bool)
(declare-fun x1551 () Int)
(declare-fun x4354 () Int)
(declare-fun x2069 () Bool)
(declare-fun x3878 () Int)
(declare-fun x4730 () Int)
(declare-fun x3747 () Int)
(declare-fun x1394 () Int)
(declare-fun x4576 () Int)
(declare-fun x1500 () Int)
(declare-fun x273 () Bool)
(declare-fun x1973 () Int)
(declare-fun x4145 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x4534 () Bool)
(declare-fun x404 () Bool)
(declare-fun x227 () Bool)
(declare-fun x2393 () Int)
(declare-fun x3587 () Int)
(declare-fun x1163 () Int)
(declare-fun x1343 () Bool)
(declare-fun x650 () Bool)
(declare-fun x3726 () Int)
(declare-fun x4665 () Bool)
(declare-fun x2425 () Int)
(declare-fun x3227 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x451 () Bool)
(declare-fun x2329 () Int)
(declare-fun x2882 () Int)
(declare-fun x649 () Int)
(declare-fun x877 () Int)
(declare-fun x886 () Int)
(declare-fun x2030 () Bool)
(declare-fun x155 () Int)
(declare-fun x705 () Bool)
(declare-fun x477 () Bool)
(declare-fun x2371 () Int)
(declare-fun x1824 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x1544 () Int)
(declare-fun x1239 () Bool)
(declare-fun x379 () Int)
(declare-fun x367 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x2945 () Int)
(declare-fun x2297 () Int)
(declare-fun x3351 () Bool)
(declare-fun x3616 () Int)
(declare-fun x944 () Int)
(declare-fun x1166 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x91 () Int)
(declare-fun x1491 () Bool)
(declare-fun x4765 () Int)
(declare-fun x3582 () Int)
(declare-fun x1443 () Int)
(declare-fun x3443 () Bool)
(declare-fun x3211 () Int)
(declare-fun x2897 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x3575 () Bool)
(declare-fun x4169 (Int) Int)
(declare-fun x393 () Bool)
(declare-fun x975 () Int)
(declare-fun x1221 () Bool)
(declare-fun x2978 () Int)
(declare-fun x2160 () Int)
(declare-fun x3549 () Bool)
(declare-fun x817 () Int)
(declare-fun x3232 () Bool)
(declare-fun x4655 () Int)
(declare-fun x3799 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x2032 () Int)
(declare-fun x112 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x2265 () Int)
(declare-fun x1229 () Int)
(declare-fun x414 () Int)
(declare-fun x1766 () Bool)
(declare-fun x3014 () Int)
(declare-fun x4644 () Bool)
(declare-fun x1186 () Int)
(declare-fun x3254 () Int)
(declare-fun x1140 () Int)
(declare-fun x438 () Int)
(declare-fun x628 () Int)
(declare-fun x4383 () Bool)
(declare-fun x4570 () Int)
(declare-fun x2921 () Int)
(declare-fun x4020 () Int)
(declare-fun x2838 () Bool)
(declare-fun x3427 () Int)
(declare-fun x2965 () Int)
(declare-fun x2908 () Int)
(declare-fun x4410 () Int)
(declare-fun x240 () Int)
(declare-fun x3037 () Bool)
(declare-fun x3943 () Int)
(declare-fun x3531 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x375 () Int)
(declare-fun x44 () Int)
(declare-fun x2089 () Int)
(declare-fun x4654 () Bool)
(declare-fun x1859 () Int)
(declare-fun x3235 () Int)
(declare-fun x3803 () Int)
(declare-fun x971 () Int)
(declare-fun x1462 () Int)
(declare-fun x4261 () Int)
(declare-fun x2427 () Bool)
(declare-fun x619 () Int)
(declare-fun x2603 () Int)
(declare-fun x3314 () Int)
(declare-fun x4801 () Bool)
(declare-fun x3764 () Int)
(declare-fun x4310 () Bool)
(declare-fun x2538 () Int)
(declare-fun x1896 () Int)
(declare-fun x2812 () Int)
(declare-fun x2191 () Int)
(declare-fun x204 () Bool)
(declare-fun x1264 () Int)
(declare-fun x119 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x4545 () Bool)
(declare-fun x3520 () Bool)
(declare-fun x378 () Int)
(declare-fun x4353 () Int)
(declare-fun x3568 () Int)
(declare-fun x4411 () Int)
(declare-fun x13 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1114 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1285 () Bool)
(declare-fun x1813 () Int)
(declare-fun x803 () Int)
(declare-fun x2132 () Int)
(declare-fun x3446 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x3674 () Int)
(declare-fun x1632 () Int)
(declare-fun x3389 () Int)
(declare-fun x377 (Int) Int)
(declare-fun x1714 () Int)
(declare-fun x3323 () Int)
(declare-fun x2715 () Bool)
(declare-fun x733 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x4553 () Bool)
(declare-fun x4700 () Bool)
(declare-fun x3109 () Int)
(declare-fun x3092 () Int)
(declare-fun x4565 () Int)
(declare-fun x2618 () Bool)
(declare-fun x2193 () Int)
(declare-fun x2580 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x376 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x432 () Int)
(declare-fun x2376 () Int)
(declare-fun x2007 () Bool)
(declare-fun x4552 () Int)
(declare-fun x77 () Int)
(declare-fun x374 () Int)
(declare-fun x2923 () Bool)
(declare-fun x4363 () Int)
(declare-fun x343 () Int)
(declare-fun x2971 () Bool)
(declare-fun x3738 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x4202 () Bool)
(declare-fun x4010 () Int)
(declare-fun x2837 () Bool)
(declare-fun x4514 () Int)
(declare-fun x2380 () Int)
(declare-fun x68 () Int)
(declare-fun x1776 () Int)
(declare-fun x271 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x4387 () Int)
(declare-fun x1858 () Bool)
(declare-fun x2350 () Int)
(declare-fun x1760 () Int)
(declare-fun x1508 () Bool)
(declare-fun x4296 () Int)
(declare-fun x3295 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x732 () Int)
(declare-fun x654 () Bool)
(declare-fun x326 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x2708 () Int)
(declare-fun x3301 () Bool)
(declare-fun x879 () Int)
(declare-fun x861 () Int)
(declare-fun x1976 () Int)
(declare-fun x2407 () Int)
(declare-fun x293 () Bool)
(declare-fun x1969 () Int)
(declare-fun x4559 () Bool)
(declare-fun x159 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x4361 () Int)
(declare-fun x81 () Bool)
(declare-fun x3889 () Int)
(declare-fun x2698 () Bool)
(declare-fun x3123 () Int)
(declare-fun x2250 () Int)
(declare-fun x2861 () Int)
(declare-fun x4190 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1079 () Int)
(declare-fun x1656 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x1595 () Int)
(declare-fun x1891 () Int)
(declare-fun x1019 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x4367 () Int)
(declare-fun x691 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x3067 () Int)
(declare-fun x2905 () Bool)
(declare-fun x130 () Bool)
(declare-fun x563 () Bool)
(declare-fun x927 (Int Int) Int)
(declare-fun x3302 () Int)
(declare-fun x4292 () Int)
(declare-fun x1890 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x2563 () Int)
(declare-fun x544 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x3326 () Int)
(declare-fun x2211 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1612 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x788 () Int)
(declare-fun x4561 () Int)
(declare-fun x2947 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1730 () Int)
(declare-fun x1066 () Int)
(declare-fun x4680 () Int)
(declare-fun x1769 () Int)
(declare-fun x2377 () Int)
(declare-fun x2408 () Bool)
(declare-fun x678 () Int)
(declare-fun x1000 () Int)
(declare-fun x3619 () Int)
(declare-fun x2651 () Int)
(declare-fun x731 () Int)
(declare-fun x314 () Int)
(declare-fun x1857 () Int)
(declare-fun x3108 () Bool)
(declare-fun x234 () Int)
(declare-fun x778 () Int)
(declare-fun x166 () Int)
(declare-fun x3240 () Int)
(declare-fun x117 () Bool)
(declare-fun x1899 () Int)
(declare-fun x4269 () Int)
(declare-fun x3260 () Int)
(declare-fun x3045 () Int)
(declare-fun x4508 () Int)
(declare-fun x2115 () Int)
(declare-fun x4259 () Int)
(declare-fun x3026 () Bool)
(declare-fun x3292 () Int)
(declare-fun x2327 () Int)
(declare-fun x1344 () Int)
(declare-fun x2429 () Bool)
(declare-fun x4424 () Bool)
(declare-fun x4471 () Bool)
(declare-fun x4815 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x3459 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x2325 () Int)
(declare-fun x2946 () Bool)
(declare-fun x2649 (Int Int) Int)
(declare-fun x960 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x3567 () Int)
(declare-fun x4749 () Int)
(declare-fun x980 () Int)
(declare-fun x2347 () Bool)
(declare-fun x4686 () Bool)
(declare-fun x1610 () Int)
(declare-fun x3267 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1204 () Int)
(declare-fun x1278 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x567 () Bool)
(declare-fun x2992 () Int)
(declare-fun x2239 () Bool)
(declare-fun x1624 () Int)
(declare-fun x253 () Int)
(declare-fun x2738 () Int)
(declare-fun x2147 () Bool)
(declare-fun x2038 () Int)
(declare-fun x4263 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x330 () Int)
(declare-fun x4634 () Int)
(declare-fun x1801 () Int)
(declare-fun x397 () Int)
(declare-fun x763 () Int)
(declare-fun x2571 () Int)
(declare-fun x774 () Int)
(declare-fun x2760 () Int)
(declare-fun x4198 () Int)
(declare-fun x150 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1014 () Int)
(declare-fun x4538 () Int)
(declare-fun x3508 () Int)
(declare-fun x745 () Bool)
(declare-fun x3041 () Int)
(declare-fun x1023 () Int)
(declare-fun x3734 () Int)
(declare-fun x1323 () Int)
(declare-fun x1121 () Int)
(declare-fun x1156 () Int)
(declare-fun x3608 () Int)
(declare-fun x2465 () Int)
(declare-fun x3033 () Bool)
(declare-fun x3099 () Int)
(declare-fun x2213 () Int)
(declare-fun x621 () Bool)
(declare-fun x3634 () Int)
(declare-fun x3698 () Int)
(declare-fun x2107 () Bool)
(declare-fun x3788 () Int)
(declare-fun x3448 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x4489 () Bool)
(declare-fun x3854 () Int)
(declare-fun x2826 () Int)
(declare-fun x388 () Bool)
(declare-fun x4598 () Int)
(declare-fun x3652 () Int)
(declare-fun x4490 () Bool)
(declare-fun x881 () Bool)
(declare-fun x140 () Bool)
(declare-fun x3428 () Int)
(declare-fun x526 () Int)
(declare-fun x4294 () Int)
(declare-fun x2300 () Int)
(declare-fun x4480 () Bool)
(declare-fun x4276 () Int)
(declare-fun x1217 () Int)
(declare-fun x889 () Int)
(declare-fun x2134 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x147 () Bool)
(declare-fun x4501 () Int)
(declare-fun x4030 () Int)
(declare-fun x3627 () Bool)
(declare-fun x80 () Bool)
(declare-fun x3431 (Int) Int)
(declare-fun x907 () Int)
(declare-fun x4572 () Int)
(declare-fun x440 () Int)
(declare-fun x3318 () Int)
(declare-fun x3493 () Int)
(declare-fun x3670 () Int)
(declare-fun x578 () Int)
(declare-fun x838 () Int)
(declare-fun x2573 () Int)
(declare-fun x746 () Bool)
(declare-fun x2759 () Int)
(declare-fun x1501 () Int)
(declare-fun x688 () Int)
(declare-fun x1718 () Int)
(declare-fun x2067 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x4215 () Int)
(declare-fun x2368 () Bool)
(declare-fun x4579 () Int)
(declare-fun x315 () Int)
(declare-fun x4744 () Int)
(declare-fun x4537 () Bool)
(declare-fun x2232 () Int)
(declare-fun x3332 () Int)
(declare-fun x1782 () Bool)
(declare-fun x667 () Bool)
(declare-fun x792 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x3610 () Int)
(declare-fun x88 () Bool)
(declare-fun x2338 () Int)
(declare-fun x3988 () Int)
(declare-fun x4120 () Int)
(declare-fun x3983 () Int)
(declare-fun x2054 () Bool)
(declare-fun x2821 () Int)
(declare-fun x1346 () Bool)
(declare-fun x3280 () Int)
(declare-fun x770 () Bool)
(declare-fun x311 () Int)
(declare-fun x230 () Int)
(declare-fun x2291 () Bool)
(declare-fun x4462 () Int)
(declare-fun x2169 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x2904 () Int)
(declare-fun x2914 () Bool)
(declare-fun x4091 () Int)
(declare-fun x2073 () Int)
(declare-fun x4105 () Bool)
(declare-fun x2534 () Int)
(declare-fun x2949 () Int)
(declare-fun x756 () Int)
(declare-fun x1319 () Int)
(declare-fun x1030 () Int)
(declare-fun x2943 () Bool)
(declare-fun x4290 () Bool)
(declare-fun x1458 () Int)
(declare-fun x1620 () Int)
(declare-fun x3850 () Bool)
(declare-fun x184 () Int)
(declare-fun x1375 () Int)
(declare-fun x4728 () Int)
(declare-fun x2669 () Bool)
(declare-fun x584 () Int)
(declare-fun x4786 () Bool)
(declare-fun x2125 () Int)
(declare-fun x1382 () Int)
(declare-fun x2237 () Int)
(declare-fun x1582 () Int)
(declare-fun x2212 () Bool)
(declare-fun x898 () Bool)
(declare-fun x2576 () Int)
(declare-fun x66 () Int)
(declare-fun x1807 () Bool)
(declare-fun x1702 () Int)
(declare-fun x929 () Int)
(declare-fun x972 () Int)
(declare-fun x1627 () Int)
(declare-fun x1905 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1448 () Int)
(declare-fun x3651 () Bool)
(declare-fun x4220 () Int)
(declare-fun x1679 () Bool)
(declare-fun x4635 () Bool)
(declare-fun x1105 () Int)
(declare-fun x3865 () Int)
(declare-fun x1778 () Int)
(declare-fun x2736 () Int)
(declare-fun x3646 (Int) Int)
(declare-fun x2477 () Int)
(declare-fun x2499 () Int)
(declare-fun x2725 () Bool)
(declare-fun x2079 () Int)
(declare-fun x2056 () Int)
(declare-fun x4205 () Int)
(declare-fun x2284 () Int)
(declare-fun x4611 () Bool)
(declare-fun x407 () Int)
(declare-fun x1331 () Int)
(declare-fun x2623 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x282 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x4009 () Int)
(declare-fun x2025 () Bool)
(declare-fun x4789 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x3136 () Int)
(declare-fun x3272 () Int)
(declare-fun x4071 () Int)
(declare-fun x1396 () Int)
(declare-fun x3470 () Int)
(declare-fun x344 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x1364 () Int)
(declare-fun x2583 () Int)
(declare-fun x4393 () Int)
(declare-fun x156 () Int)
(declare-fun x835 () Int)
(declare-fun x1109 () Bool)
(declare-fun x3562 () Int)
(declare-fun x4650 () Bool)
(declare-fun x2517 () Int)
(declare-fun x3777 () Int)
(declare-fun x2850 () Bool)
(declare-fun x508 () Int)
(declare-fun x3450 () Int)
(declare-fun x1482 () Int)
(declare-fun x2495 () Bool)
(declare-fun x2995 () Int)
(declare-fun x3040 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x3134 () Int)
(declare-fun x336 () Bool)
(declare-fun x226 () Bool)
(declare-fun x4519 () Int)
(declare-fun x1576 () Int)
(declare-fun x3722 () Int)
(declare-fun x177 () Int)
(declare-fun x3576 () Int)
(declare-fun x3748 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x3367 () Int)
(declare-fun x299 () Int)
(declare-fun x489 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x4082 () Int)
(declare-fun x894 () Bool)
(declare-fun x1201 () Int)
(declare-fun x3975 () Int)
(declare-fun x1424 () Bool)
(declare-fun x657 () Int)
(declare-fun x4403 () Int)
(declare-fun x3140 () Int)
(declare-fun x2349 () Int)
(declare-fun x1008 () Int)
(declare-fun x1660 () Bool)
(declare-fun x4806 () Bool)
(declare-fun x1717 () Int)
(declare-fun x3257 () Bool)
(declare-fun x1628 () Int)
(declare-fun x4567 () Bool)
(declare-fun x2127 () Int)
(declare-fun x4481 () Int)
(declare-fun x3533 () Int)
(declare-fun x1220 () Int)
(declare-fun x4046 () Int)
(declare-fun x689 () Bool)
(declare-fun x3400 () Int)
(declare-fun x775 () Bool)
(declare-fun x4274 () Int)
(declare-fun x2546 () Int)
(declare-fun x4753 () Bool)
(declare-fun x2849 () Int)
(declare-fun x586 () Int)
(declare-fun x134 () Int)
(declare-fun x4231 () Int)
(declare-fun x3098 () Int)
(declare-fun x2453 () Bool)
(declare-fun x3212 () Int)
(declare-fun x3207 () Int)
(declare-fun x2863 () Bool)
(declare-fun x2697 () Int)
(declare-fun x345 () Int)
(declare-fun x1395 () Int)
(declare-fun x3444 () Int)
(declare-fun x3300 () Bool)
(declare-fun x3946 () Int)
(declare-fun x4162 () Int)
(declare-fun x2740 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x4378 () Int)
(declare-fun x2081 () Int)
(declare-fun x1050 () Int)
(declare-fun x1575 () Int)
(declare-fun x3029 () Int)
(declare-fun x366 () Bool)
(declare-fun x665 () Bool)
(declare-fun x552 () Int)
(declare-fun x2975 () Int)
(declare-fun x300 () Int)
(declare-fun x1153 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1599 () Int)
(declare-fun x2531 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x3425 () Int)
(declare-fun x1326 () Int)
(declare-fun x1530 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x2050 () Int)
(declare-fun x1049 () Bool)
(declare-fun x3856 () Int)
(declare-fun x1378 () Bool)
(declare-fun x503 () Int)
(declare-fun x3353 () Int)
(declare-fun x3746 () Int)
(declare-fun x2312 () Int)
(declare-fun x3916 () Bool)
(declare-fun x4196 () Bool)
(declare-fun x949 () Int)
(declare-fun x2087 () Int)
(declare-fun x3936 () Int)
(declare-fun x4743 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x548 () Int)
(declare-fun x461 () Bool)
(declare-fun x4100 () Int)
(declare-fun x467 () Int)
(declare-fun x2200 () Int)
(declare-fun x1600 () Int)
(declare-fun x1150 () Bool)
(declare-fun x2798 () Int)
(declare-fun x73 () Int)
(declare-fun x4597 () Bool)
(declare-fun x3345 () Int)
(declare-fun x1247 () Bool)
(declare-fun x2956 () Int)
(declare-fun x685 () Bool)
(declare-fun x2529 (Int Int Int Int Int) Int)
(declare-fun x2359 () Bool)
(declare-fun x694 () Int)
(declare-fun x3000 () Int)
(declare-fun x3962 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x572 () Int)
(declare-fun x2142 () Int)
(declare-fun x3603 () Bool)
(declare-fun x571 () Bool)
(declare-fun x4448 () Int)
(declare-fun x24 () Int)
(declare-fun x1854 () Int)
(declare-fun x2930 () Int)
(declare-fun x524 () Int)
(declare-fun x4506 () Int)
(declare-fun x1552 () Int)
(declare-fun x106 () Bool)
(declare-fun x4137 () Int)
(declare-fun x1256 () Int)
(declare-fun x3279 () Int)
(declare-fun x2566 () Bool)
(declare-fun x1067 () Int)
(declare-fun x4623 () Int)
(declare-fun x1889 () Int)
(declare-fun x3248 () Int)
(declare-fun x3065 () Bool)
(declare-fun x3989 () Int)
(declare-fun x1408 () Bool)
(declare-fun x398 () Int)
(declare-fun x136 () Int)
(declare-fun x1265 () Int)
(declare-fun x1152 () Int)
(declare-fun x690 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x2666 () Int)
(declare-fun x4379 () Int)
(declare-fun x1843 () Int)
(declare-fun x4126 () Int)
(declare-fun x269 () Bool)
(declare-fun x4542 () Bool)
(declare-fun x3383 () Int)
(declare-fun x2026 () Int)
(declare-fun x4460 () Int)
(declare-fun x2498 () Int)
(declare-fun x1021 () Int)
(declare-fun x1849 () Int)
(declare-fun x4833 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1947 () Int)
(declare-fun x683 () Bool)
(declare-fun x1368 () Int)
(declare-fun x2756 (Int Int) Int)
(declare-fun x3675 () Int)
(declare-fun x4668 () Int)
(declare-fun x2825 () Bool)
(declare-fun x1980 () Int)
(declare-fun x637 () Bool)
(declare-fun x596 (Int) Int)
(declare-fun x1978 () Int)
(declare-fun x3243 () Int)
(declare-fun x1306 () Int)
(declare-fun x849 () Int)
(declare-fun x2103 () Int)
(declare-fun x4065 () Int)
(declare-fun x4109 () Int)
(declare-fun x3030 () Bool)
(declare-fun x3996 () Bool)
(declare-fun x3979 () Int)
(declare-fun x1638 () Int)
(declare-fun x543 () Bool)
(declare-fun x677 () Bool)
(declare-fun x785 () Int)
(declare-fun x4666 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x176 () Int)
(declare-fun x3034 () Bool)
(declare-fun x609 () Bool)
(declare-fun x3976 () Int)
(declare-fun x327 () Bool)
(declare-fun x2589 () Int)
(declare-fun x4625 () Bool)
(declare-fun x4185 () Int)
(declare-fun x1269 () Int)
(declare-fun x1391 () Int)
(declare-fun x4258 () Int)
(declare-fun x2590 () Int)
(declare-fun x2190 () Int)
(declare-fun x198 () Int)
(declare-fun x535 () Bool)
(declare-fun x3463 () Int)
(declare-fun x480 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x3624 () Bool)
(declare-fun x2782 () Int)
(declare-fun x867 () Int)
(declare-fun x4028 () Int)
(declare-fun x3231 () Bool)
(declare-fun x4691 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x3308 () Int)
(declare-fun x1787 () Int)
(declare-fun x4752 () Bool)
(declare-fun x3742 () Int)
(declare-fun x123 () Int)
(declare-fun x2939 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x371 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x2336 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1181 () Int)
(declare-fun x1222 () Int)
(declare-fun x1972 () Int)
(declare-fun x128 () Int)
(declare-fun x2140 () Bool)
(declare-fun x592 () Bool)
(declare-fun x902 () Int)
(declare-fun x1184 () Bool)
(declare-fun x3615 () Int)
(declare-fun x281 () Bool)
(declare-fun x739 () Int)
(declare-fun x4408 () Bool)
(declare-fun x2591 () Int)
(declare-fun x2852 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x1015 () Int)
(declare-fun x4656 () Int)
(declare-fun x1480 () Int)
(declare-fun x1486 (Int) Int)
(declare-fun x921 () Int)
(declare-fun x970 () Bool)
(declare-fun x952 () Int)
(declare-fun x2286 () Int)
(declare-fun x1279 () Int)
(declare-fun x2272 () Bool)
(declare-fun x4627 () Int)
(declare-fun x3810 () Int)
(declare-fun x199 () Int)
(declare-fun x2660 () Int)
(declare-fun x3182 () Bool)
(declare-fun x1785 () Int)
(declare-fun x2536 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x924 () Int)
(declare-fun x107 () Int)
(declare-fun x2309 () Int)
(declare-fun x3506 () Int)
(declare-fun x488 () Int)
(declare-fun x2396 () Int)
(declare-fun x2661 () Int)
(declare-fun x287 () Int)
(declare-fun x4079 () Int)
(declare-fun x4135 () Int)
(declare-fun x4603 () Int)
(declare-fun x3090 () Int)
(declare-fun x1357 () Int)
(declare-fun x937 () Bool)
(declare-fun x3928 () Bool)
(declare-fun x1440 () Int)
(declare-fun x4004 () Bool)
(declare-fun x111 () Int)
(declare-fun x4836 () Int)
(declare-fun x912 () Int)
(declare-fun x3486 () Int)
(declare-fun x1629 () Bool)
(declare-fun x442 () Int)
(declare-fun x1446 () Bool)
(declare-fun x1445 () Int)
(declare-fun x129 () Bool)
(declare-fun x4678 () Int)
(declare-fun x1897 () Int)
(declare-fun x426 () Int)
(declare-fun x2233 () Int)
(declare-fun x406 () Int)
(declare-fun x4472 () Int)
(declare-fun x2564 () Int)
(declare-fun x3720 () Bool)
(declare-fun x75 () Bool)
(declare-fun x1068 () Int)
(declare-fun x168 () Int)
(declare-fun x2622 () Bool)
(declare-fun x3217 () Int)
(declare-fun x1819 () Bool)
(declare-fun x4672 () Bool)
(declare-fun x2530 () Int)
(declare-fun x275 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1233 () Int)
(declare-fun x4580 () Int)
(declare-fun x1210 () Int)
(declare-fun x3155 () Int)
(declare-fun x4595 () Int)
(declare-fun x2753 () Bool)
(declare-fun x1877 () Int)
(declare-fun x2647 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x2001 () Int)
(declare-fun x4473 () Bool)
(declare-fun x96 () Int)
(declare-fun x1371 () Bool)
(declare-fun x332 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x3732 () Int)
(declare-fun x2802 () Int)
(declare-fun x338 () Int)
(declare-fun x2909 () Int)
(declare-fun x3202 () Int)
(declare-fun x758 () Int)
(declare-fun x3753 () Int)
(declare-fun x4177 () Int)
(declare-fun x4349 () Int)
(declare-fun x3313 () Int)
(declare-fun x3964 () Int)
(declare-fun x721 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x4005 () Int)
(declare-fun x2988 () Int)
(declare-fun x456 () Bool)
(declare-fun x4104 () Int)
(declare-fun x483 () Int)
(declare-fun x1421 () Bool)
(declare-fun x100 () Int)
(declare-fun x2497 () Bool)
(declare-fun x4737 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x2194 () Int)
(declare-fun x1080 () Int)
(declare-fun x2438 () Bool)
(declare-fun x4524 () Int)
(declare-fun x2158 () Int)
(declare-fun x3488 () Int)
(declare-fun x4356 () Int)
(declare-fun x988 () Bool)
(declare-fun x2392 () Int)
(declare-fun x1964 () Bool)
(declare-fun x605 () Int)
(declare-fun x1374 () Bool)
(declare-fun x1515 () Int)
(declare-fun x3133 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x4843 () Int)
(declare-fun x3130 () Bool)
(declare-fun x3667 () Int)
(declare-fun x1520 () Int)
(declare-fun x4837 () Int)
(declare-fun x32 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x2017 () Int)
(declare-fun x2539 () Int)
(declare-fun x1498 () Int)
(declare-fun x3630 () Bool)
(declare-fun x815 () Int)
(declare-fun x3737 () Int)
(declare-fun x4616 () Int)
(declare-fun x777 () Bool)
(declare-fun x216 () Bool)
(declare-fun x205 () Bool)
(declare-fun x827 () Int)
(declare-fun x2898 (Int) Int)
(declare-fun x3494 () Bool)
(declare-fun x2034 () Int)
(declare-fun x670 () Bool)
(declare-fun x4051 () Bool)
(declare-fun x455 () Int)
(declare-fun x4262 () Int)
(declare-fun x1241 () Bool)
(declare-fun x207 (Int) Int)
(declare-fun x3152 () Int)
(declare-fun x1238 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x2321 () Int)
(declare-fun x1833 () Int)
(declare-fun x1762 () Int)
(declare-fun x2281 () Int)
(declare-fun x2058 () Int)
(declare-fun x1393 () Int)
(declare-fun x723 () Bool)
(declare-fun x3423 () Bool)
(define-fun x2302 ((x3382 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3382) (>= x3382 0)) x3382 (- x3382 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2361 ((x3382 Int)) Int (ite (and (< x3382 0) (>= x3382 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x3382 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3382))
(define-fun x2609 ((x1773 Int)) Bool (and (>= x1773 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1773)))
(define-fun x2154 ((x1773 Int)) Bool (and (= (x1796 x1773 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1773) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773) x1773)))
(define-fun x1908 ((x1773 Int)) Bool (and (= 0 (x1796 x1773 0)) (= (x1796 0 x1773) 0)))
(define-fun x4023 ((x1773 Int)) Bool (= (x1796 x1773 x1773) x1773))
(define-fun x2085 ((x1773 Int)) Bool (and (x4023 x1773) (x2154 x1773) (x1908 x1773)))
(define-fun x1154 ((x1773 Int) (x2775 Int)) Bool (= (x1796 x1773 x2775) (x1796 x2775 x1773)))
(define-fun x1513 ((x1773 Int) (x2775 Int)) Bool (and (=> (>= x1773 0) (>= x1773 (x1796 x1773 x2775))) (<= 0 (x1796 x1773 x2775)) (=> (>= x2775 0) (<= (x1796 x1773 x2775) x2775))))
(define-fun x3844 ((x1773 Int) (x2775 Int)) Bool (and (x1513 x1773 x2775) (x1154 x1773 x2775)))
(define-fun x2492 ((x1773 Int)) Bool (= (+ (mod x1773 32) (x1796 x1773 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (mod x1773 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1608 ((x1773 Int)) Bool (and (x3844 x1773 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2492 x1773)))
(define-fun x568 ((x1773 Int)) Bool (= (x1796 x1773 1461501637330902918203684832716283019655932542975) (mod x1773 1461501637330902918203684832716283019655932542976)))
(define-fun x611 ((x1773 Int)) Bool (and (x568 x1773) (x3844 x1773 1461501637330902918203684832716283019655932542975)))
(define-fun x4474 ((x1773 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x927 x1773 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x927 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x3070 ((x1773 Int)) Bool (and (= (x927 0 x1773) x1773) (= x1773 (x927 x1773 0))))
(define-fun x1472 ((x1773 Int)) Bool (= x1773 (x927 x1773 x1773)))
(define-fun x2574 ((x1773 Int)) Bool (and (x4474 x1773) (x1472 x1773) (x3070 x1773)))
(define-fun x3621 ((x1773 Int) (x2775 Int)) Bool (= (x927 x2775 x1773) (x927 x1773 x2775)))
(define-fun x1901 ((x1773 Int) (x2775 Int)) Bool (and (=> (<= 0 x1773) (<= x1773 (x927 x1773 x2775))) (>= (+ x1773 x2775) (x927 x1773 x2775)) (=> (>= x2775 0) (>= (x927 x1773 x2775) x2775))))
(define-fun x2369 ((x1773 Int) (x2775 Int)) Bool (and (x1901 x1773 x2775) (x3621 x1773 x2775)))
(define-fun x553 ((x1773 Int)) Bool (= (x1796 x1773 255) (mod x1773 256)))
(define-fun x133 ((x1773 Int)) Bool (and (x553 x1773) (x3844 x1773 255)))
(define-fun x1276 ((x1773 Int)) Bool (and (>= x1773 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773)))
(define-fun x413 ((x1773 Int)) Bool (and (<= x1773 1461501637330902918203684832716283019655932542975) (>= x1773 0)))
(define-fun x4288 ((x1435 Int)) Int 0)
(define-fun x1734 ((x1435 Int)) Int 0)
(define-fun x1075 ((x1435 Int)) Int 0)
(define-fun x4582 ((x1435 Int)) Int 0)
(define-fun x2567 ((x1435 Int)) Int 0)
(define-fun x4302 ((x1435 Int)) Int 0)
(define-fun x4166 ((x1435 Int)) Int 0)
(define-fun x1852 ((x1435 Int)) Int 0)
(define-fun x3890 ((x1435 Int)) Int 0)
(define-fun x590 ((x1435 Int)) Int 0)
(define-fun x1389 ((x1435 Int)) Int 0)
(define-fun x3875 ((x1435 Int)) Int 0)
(define-fun x4022 ((x1435 Int)) Int 0)
(define-fun x4131 ((x1435 Int)) Int 0)
(define-fun x2788 ((x1435 Int)) Int 0)
(define-fun x334 ((x1435 Int)) Int 0)
(define-fun x4673 ((x1435 Int)) Int 0)
(define-fun x4159 ((x1435 Int)) Int 0)
(define-fun x450 ((x1435 Int)) Int 0)
(define-fun x321 ((x1435 Int)) Int 0)
(define-fun x1752 ((x1435 Int)) Int 0)
(define-fun x1547 ((x1435 Int)) Int 0)
(define-fun x3399 ((x1435 Int)) Int 0)
(define-fun x4640 ((x1435 Int)) Int 0)
(define-fun x741 ((x1435 Int)) Int 0)
(define-fun x1845 ((x1435 Int)) Int 0)
(define-fun x46 ((x1435 Int)) Int 0)
(define-fun x4333 ((x1435 Int)) Int 0)
(define-fun x1726 ((x1435 Int)) Int 0)
(define-fun x3841 ((x1435 Int)) Int 0)
(define-fun x2786 ((x1435 Int)) Int 0)
(define-fun x4609 ((x1435 Int)) Int 0)
(define-fun x2997 ((x1435 Int)) Int 0)
(define-fun x551 ((x1435 Int)) Int 0)
(define-fun x4168 ((x1435 Int)) Int 0)
(define-fun x4738 ((x1435 Int)) Int 0)
(define-fun x3327 ((x1435 Int)) Int 0)
(define-fun x4628 ((x1435 Int)) Int 0)
(define-fun x1041 ((x1435 Int)) Int 0)
(define-fun x599 ((x1435 Int)) Int 0)
(define-fun x3171 ((x1435 Int)) Int 0)
(define-fun x206 ((x1435 Int)) Int 0)
(define-fun x1818 ((x1435 Int)) Int 0)
(define-fun x3718 ((x1435 Int)) Int 0)
(define-fun x3113 ((x1435 Int)) Int 0)
(define-fun x4061 ((x1435 Int)) Int 0)
(define-fun x1362 ((x1435 Int)) Int 0)
(define-fun x246 ((x1435 Int)) Int 0)
(define-fun x796 ((x1435 Int)) Int 0)
(define-fun x2877 ((x1435 Int)) Int 0)
(define-fun x4280 ((x1435 Int)) Int 0)
(define-fun x718 ((x1435 Int)) Int 0)
(define-fun x3806 ((x1435 Int)) Int 0)
(define-fun x4291 ((x1435 Int)) Int 0)
(define-fun x2652 ((x1435 Int)) Int 0)
(define-fun x3951 ((x1435 Int)) Int 0)
(define-fun x2513 ((x1435 Int)) Int 0)
(define-fun x87 ((x1435 Int)) Int 0)
(define-fun x2066 ((x1435 Int)) Int 0)
(define-fun x3001 ((x1435 Int)) Int 0)
(define-fun x2449 ((x1435 Int)) Int 0)
(define-fun x2478 ((x1435 Int)) Int 0)
(define-fun x1788 ((x1435 Int)) Int 0)
(define-fun x4242 ((x1435 Int)) Int 0)
(define-fun x2473 ((x1435 Int)) Int 0)
(define-fun x4703 ((x1435 Int)) Int 0)
(define-fun x608 ((x1435 Int)) Int 0)
(define-fun x1262 ((x1435 Int)) Int 0)
(define-fun x2781 ((x1435 Int)) Int 0)
(define-fun x3271 ((x1435 Int)) Int 0)
(define-fun x64 ((x1435 Int)) Int 0)
(define-fun x1846 ((x1435 Int)) Int 0)
(define-fun x113 ((x1435 Int)) Int 0)
(define-fun x3830 ((x1435 Int)) Int 0)
(define-fun x2993 ((x1435 Int)) Int 0)
(define-fun x2287 ((x1435 Int)) Int 0)
(define-fun x2862 ((x1435 Int)) Int 0)
(define-fun x2954 ((x1435 Int)) Int 0)
(define-fun x1478 ((x1435 Int)) Int 0)
(define-fun x1636 ((x1435 Int)) Int 0)
(define-fun x3176 ((x1435 Int)) Int 0)
(define-fun x4133 ((x1435 Int)) Int 0)
(define-fun x2230 ((x1435 Int)) Int 0)
(define-fun x4141 ((x1435 Int)) Int 0)
(define-fun x2916 ((x1435 Int)) Int 0)
(define-fun x368 ((x1435 Int)) Int 0)
(define-fun x2714 ((x1435 Int)) Int 0)
(define-fun x2640 ((x1435 Int)) Int 0)
(define-fun x623 ((x1435 Int)) Int 0)
(define-fun x1335 ((x1435 Int)) Int 0)
(define-fun x1187 ((x1435 Int)) Int 0)
(define-fun x2052 ((x1435 Int)) Int 0)
(define-fun x1179 ((x1435 Int)) Int 0)
(define-fun x1961 ((x1435 Int)) Int 0)
(define-fun x2227 ((x1435 Int)) Int 0)
(define-fun x1663 ((x1435 Int)) Int 0)
(define-fun x3832 ((x1435 Int)) Int 0)
(define-fun x3126 ((x1435 Int)) Int 0)
(define-fun x60 ((x1435 Int)) Int 0)
(define-fun x4370 ((x1435 Int)) Int 0)
(define-fun x4396 ((x1435 Int)) Int 0)
(define-fun x2655 ((x1435 Int)) Int 0)
(define-fun x4420 ((x1435 Int)) Int 0)
(define-fun x588 ((x1435 Int)) Int 0)
(define-fun x2894 ((x1435 Int)) Int 0)
(define-fun x3129 ((x1435 Int)) Int 0)
(define-fun x4783 ((x1435 Int)) Int 0)
(define-fun x2628 ((x1435 Int)) Int 0)
(define-fun x841 ((x1435 Int)) Int 0)
(define-fun x3906 ((x1435 Int)) Int 0)
(define-fun x2448 ((x1435 Int)) Int 0)
(define-fun x3709 ((x1435 Int)) Int 0)
(define-fun x3980 ((x1435 Int)) Int 0)
(define-fun x160 ((x1435 Int)) Int 0)
(define-fun x2412 ((x1435 Int)) Int 0)
(define-fun x1092 ((x1435 Int)) Int 0)
(define-fun x3469 ((x1435 Int)) Int 0)
(define-fun x4814 ((x1435 Int)) Int 0)
(define-fun x702 ((x1435 Int)) Int 0)
(define-fun x358 ((x1435 Int)) Int 0)
(define-fun x2783 ((x1435 Int)) Int 0)
(define-fun x4048 ((x1435 Int)) Int 0)
(define-fun x2020 ((x1435 Int)) Int 0)
(define-fun x475 ((x1435 Int)) Int 0)
(define-fun x1470 ((x1435 Int)) Int 0)
(define-fun x710 ((x1435 Int)) Int 0)
(define-fun x2690 ((x1435 Int)) Int 0)
(define-fun x1615 ((x1435 Int)) Int 0)
(define-fun x245 ((x1435 Int)) Int 0)
(define-fun x4031 ((x1435 Int)) Int 0)
(define-fun x2214 ((x1435 Int)) Int 0)
(define-fun x202 ((x1435 Int)) Int 0)
(define-fun x3193 ((x1435 Int)) Int 0)
(define-fun x4441 ((x1435 Int)) Int 0)
(define-fun x104 ((x1435 Int)) Int 0)
(define-fun x1987 ((x1435 Int)) Int 0)
(define-fun x2728 ((x1435 Int)) Int 0)
(define-fun x3925 ((x1435 Int)) Int 0)
(define-fun x4772 ((x1435 Int)) Int 0)
(define-fun x4344 ((x1435 Int)) Int 0)
(define-fun x2355 ((x1435 Int)) Int 0)
(define-fun x3735 ((x1435 Int)) Int 0)
(define-fun x4252 ((x1435 Int)) Int 0)
(define-fun x2658 ((x1435 Int)) Int 0)
(define-fun x277 ((x1435 Int)) Int 0)
(define-fun x430 ((x1435 Int)) Int 0)
(define-fun x4278 ((x1435 Int)) Int 0)
(define-fun x3161 ((x1435 Int)) Int 0)
(define-fun x3141 ((x1435 Int)) Int (x280 x1435))
(define-fun x3012 ((x1435 Int)) Int 0)
(define-fun x1774 ((x1435 Int)) Int (ite (= x1435 4) 32 (x3012 x1435)))
(define-fun x527 ((x1435 Int)) Int (ite (= 36 x1435) x3202 (x1774 x1435)))
(define-fun x3475 ((x1435 Int)) Int (ite (= 68 x1435) x2885 (x527 x1435)))
(define-fun x899 ((x1435 Int)) Int (ite (= x1435 100) x1835 (x3475 x1435)))
(define-fun x2457 ((x1435 Int)) Int (ite (= 132 x1435) x559 (x899 x1435)))
(define-fun x1333 ((x1435 Int)) Int (ite (= x1435 164) x1758 (x2457 x1435)))
(define-fun x681 ((x1435 Int)) Int (ite (= x1435 196) 256 (x1333 x1435)))
(define-fun x4529 ((x1435 Int)) Int (ite (= x1435 292) 0 (x681 x1435)))
(define-fun x4540 ((x1435 Int)) Int (ite (and (< x1435 324) (>= x1435 324)) (x1932 (- x1435 324)) (x4529 x1435)))
(define-fun x10 ((x1435 Int)) Int (ite (= x1435 228) 288 (x4540 x1435)))
(define-fun x4482 ((x1435 Int)) Int (ite (= 324 x1435) 0 (x10 x1435)))
(define-fun x1532 ((x1435 Int)) Int (ite (and (< x1435 356) (<= 356 x1435)) (x377 (- x1435 356)) (x4482 x1435)))
(define-fun x3142 ((x1435 Int)) Int (ite (= 260 x1435) 320 (x1532 x1435)))
(define-fun x1884 ((x1435 Int)) Int (ite (= x1435 356) x2202 (x3142 x1435)))
(define-fun x359 ((x1435 Int)) Int (ite (= 388 x1435) 192 (x1884 x1435)))
(define-fun x1310 ((x1435 Int)) Int (ite (= 548 x1435) x1386 (x359 x1435)))
(define-fun x1942 ((x1435 Int)) Int (ite (and (< x1435 (+ 580 x1386)) (<= 580 x1435)) (x1010 (- x1435 580)) (x1310 x1435)))
(define-fun x2072 ((x1435 Int)) Int (ite (= x1435 420) x1174 (x1942 x1435)))
(define-fun x1322 ((x1435 Int)) Int (ite (= 452 x1435) x385 (x2072 x1435)))
(define-fun x555 ((x1435 Int)) Int (ite (= x2073 x1435) x499 (x1322 x1435)))
(define-fun x3716 ((x1435 Int)) Int (ite (and (< x1435 (+ x499 x671)) (>= x1435 x671)) (x2962 (- x1435 x671)) (x555 x1435)))
(define-fun x962 ((x1435 Int)) Int (ite (= 484 x1435) x3559 (x3716 x1435)))
(define-fun x4358 ((x1435 Int)) Int (ite (= x1435 516) x2673 (x962 x1435)))
(define-fun x2518 ((x1435 Int)) Int (ite (= x1435 x3310) x4049 (x4358 x1435)))
(define-fun x4513 ((x1435 Int)) Int (ite (and (>= x1435 x3732) (< x1435 (+ x3732 x4049))) (x207 (- x1435 x3732)) (x2518 x1435)))
(define-fun x3197 ((x1435 Int)) Int (ite (= 384 x1435) x391 (x2690 x1435)))
(define-fun x4776 ((x1435 Int)) Int 0)
(define-fun x941 ((x1435 Int)) Int (ite (= x1435 4) 128 (x4776 x1435)))
(define-fun x3600 ((x1435 Int)) Int (ite (= 132 x1435) 0 (x941 x1435)))
(define-fun x1002 ((x1435 Int)) Int (ite (and (<= 164 x1435) (> 164 x1435)) (x4648 (- x1435 164)) (x3600 x1435)))
(define-fun x1022 ((x1435 Int)) Int (ite (= 36 x1435) 160 (x1002 x1435)))
(define-fun x979 ((x1435 Int)) Int (ite (= x1435 164) 0 (x1022 x1435)))
(define-fun x1930 ((x1435 Int)) Int (ite (= x1435 196) x3093 (x979 x1435)))
(define-fun x3813 ((x1435 Int)) Int (ite (= x1435 228) x3889 (x1930 x1435)))
(define-fun x1545 ((x1435 Int)) Int (ite (= 260 x1435) 160 (x3813 x1435)))
(define-fun x2055 ((x1435 Int)) Int (ite (= x1435 324) x4029 (x1545 x1435)))
(define-fun x2985 ((x1435 Int)) Int (ite (and (<= 356 x1435) (< x1435 (+ x4137 356))) (x4768 (- x1435 356)) (x2055 x1435)))
(define-fun x1757 ((x1435 Int)) Int (ite (= x1435 292) x1275 (x2985 x1435)))
(define-fun x4110 ((x1435 Int)) Int (ite (= x1435 x502) x2921 (x1757 x1435)))
(define-fun x3312 ((x1435 Int)) Int (ite (and (>= x1435 x3677) (< x1435 (+ x2921 x3677))) (x2898 (- x1435 x3677)) (x4110 x1435)))
(define-fun x384 ((x1435 Int)) Int (ite (= x1435 68) x4367 (x3312 x1435)))
(define-fun x1827 ((x1435 Int)) Int (ite (= x1394 x1435) 0 (x384 x1435)))
(define-fun x819 ((x1435 Int)) Int (ite (= x1435 x387) x4262 (x1827 x1435)))
(define-fun x2719 ((x1435 Int)) Int (ite (= x1435 x855) x2736 (x819 x1435)))
(define-fun x3530 ((x1435 Int)) Int (ite (= x1435 x3788) x3224 (x2719 x1435)))
(define-fun x1863 ((x1435 Int)) Int (ite (= x353 x1435) x4191 (x3530 x1435)))
(define-fun x2779 ((x1435 Int)) Int (ite (and (>= x1435 x1454) (> (+ x4749 x1454) x1435)) (x2741 (- x1435 x1454)) (x1863 x1435)))
(define-fun x752 ((x1435 Int)) Int (ite (= x1435 x3110) x3975 (x2779 x1435)))
(define-fun x3081 ((x1435 Int)) Int (ite (= x1031 x1435) x4820 (x752 x1435)))
(define-fun x2305 ((x1435 Int)) Int (ite (and (>= x1435 x4796) (> (+ x4820 x4796) x1435)) (x1775 (- x1435 x4796)) (x3081 x1435)))
(define-fun x3581 ((x1435 Int)) Int (ite (= x1435 100) x1027 (x2305 x1435)))
(define-fun x4507 ((x1435 Int)) Int (ite (= x1175 x1435) x1312 (x3581 x1435)))
(define-fun x2267 ((x1435 Int)) Int (ite (= x1435 x2455) x1204 (x4507 x1435)))
(define-fun x1995 ((x1435 Int)) Int (ite (= x1435 x431) x4347 (x2267 x1435)))
(define-fun x515 ((x1435 Int)) Int (ite (= x1435 x3117) x3076 (x1995 x1435)))
(define-fun x1316 ((x1435 Int)) Int (ite (= x1435 x1500) x2190 (x515 x1435)))
(define-fun x2172 ((x1435 Int)) Int (ite (= x1435 x1137) x4645 (x1316 x1435)))
(define-fun x2519 ((x1435 Int)) Int (ite (= x1026 x1435) 0 (x2172 x1435)))
(define-fun x1003 ((x1435 Int)) Int (ite (and (> x1146 x1435) (>= x1435 x1146)) (x1932 (- x1435 x1146)) (x2519 x1435)))
(define-fun x1924 ((x1435 Int)) Int (ite (= x3697 x1435) x865 (x1003 x1435)))
(define-fun x3206 ((x1435 Int)) Int (ite (= x307 x1435) 0 (x1924 x1435)))
(define-fun x4709 ((x1435 Int)) Int (ite (and (< x1435 x3106) (>= x1435 x3106)) (x377 (- x1435 x3106)) (x3206 x1435)))
(define-fun x2774 ((x1435 Int)) Int (ite (= x1435 x3313) x3954 (x4709 x1435)))
(define-fun x97 ((x1435 Int)) Int (ite (= x439 x1435) x3676 (x2774 x1435)))
(define-fun x3319 ((x1435 Int)) Int (ite (= x2399 x1435) x1449 (x97 x1435)))
(define-fun x339 ((x1435 Int)) Int (ite (= x1435 x2524) x1386 (x3319 x1435)))
(define-fun x2247 ((x1435 Int)) Int (ite (and (> (+ x1937 x1386) x1435) (>= x1435 x1937)) (x1010 (- x1435 x1937)) (x339 x1435)))
(define-fun x3066 ((x1435 Int)) Int (ite (= x1435 x3184) x2847 (x2247 x1435)))
(define-fun x2310 ((x1435 Int)) Int (ite (= x1435 x1082) x1357 (x3066 x1435)))
(define-fun x1928 ((x1435 Int)) Int (ite (= x2552 x1435) x499 (x2310 x1435)))
(define-fun x2332 ((x1435 Int)) Int (ite (and (< x1435 (+ x1767 x499)) (<= x1767 x1435)) (x2962 (- x1435 x1767)) (x1928 x1435)))
(define-fun x1691 ((x1435 Int)) Int (ite (= x16 x1435) x3862 (x2332 x1435)))
(define-fun x2610 ((x1435 Int)) Int (ite (= x3610 x1435) x3325 (x1691 x1435)))
(define-fun x4518 ((x1435 Int)) Int (ite (= x1435 x902) x4049 (x2610 x1435)))
(define-fun x59 ((x1435 Int)) Int (ite (and (<= x357 x1435) (< x1435 (+ x357 x4049))) (x207 (- x1435 x357)) (x4518 x1435)))
(define-fun x2503 ((x1435 Int)) Int (ite (= x1435 x1618) x2283 (x3646 x1435)))
(define-fun x3370 ((x1435 Int)) Int (ite (= x1435 128) x2113 (x1726 x1435)))
(define-fun x1227 ((x1435 Int)) Int (ite (= x1435 160) x817 (x3709 x1435)))
(define-fun x767 ((x1435 Int)) Int (ite (= 192 x1435) x4450 (x277 x1435)))
(define-fun x3679 ((x1435 Int)) Int (ite (= x1435 224) x1272 (x358 x1435)))
(define-fun x1981 ((x1435 Int)) Int (ite (= x1435 256) x3907 (x2567 x1435)))
(define-fun x3973 ((x1435 Int)) Int (ite (= x1435 384) x880 (x206 x1435)))
(define-fun x2155 ((x1435 Int)) Int (ite (= x2613 x1435) x3858 (x475 x1435)))
(define-fun x2713 ((x1435 Int)) Int (ite (= x1435 x4174) x4462 (x334 x1435)))
(define-fun x2771 ((x1435 Int)) Int (ite (= x1647 x1435) x1330 (x2066 x1435)))
(define-fun x2854 ((x1435 Int)) Int (ite (= x128 x1435) x1369 (x4441 x1435)))
(define-fun x993 ((x1435 Int)) Int (ite (= x964 x1435) x4847 (x1752 x1435)))
(define-fun x4838 ((x1435 Int)) Int (ite x4234 (x4783 x1435) (x2854 x1435)))
(define-fun x3220 ((x1435 Int)) Int (ite x4234 (x3129 x1435) (x2771 x1435)))
(define-fun x3465 ((x1435 Int)) Int (ite (= x1435 x2393) x2507 (x46 x1435)))
(define-fun x1484 ((x1435 Int)) Int (ite x4234 (x2448 x1435) (x3465 x1435)))
(define-fun x4248 ((x1435 Int)) Int (ite (= x1435 x1708) x2851 (x4772 x1435)))
(define-fun x494 ((x1435 Int)) Int (ite x4234 (x3906 x1435) (x4248 x1435)))
(define-fun x536 ((x1435 Int)) Int (ite (= x257 x1435) x1647 (x3890 x1435)))
(define-fun x4520 ((x1435 Int)) Int (ite x4234 (x4628 x1435) (x536 x1435)))
(define-fun x2549 ((x1435 Int)) Int (ite (= x3105 x1435) x2988 (x4242 x1435)))
(define-fun x569 ((x1435 Int)) Int (ite x4234 (x841 x1435) (x2549 x1435)))
(define-fun x3186 ((x1435 Int)) Int (ite x4234 (x2628 x1435) (x993 x1435)))
(define-fun x167 ((x1435 Int)) Int (ite (= x1435 x4199) 1 (x596 x1435)))
(define-fun x1892 ((x1435 Int)) Int (ite (= x1435 x1145) x3181 (x1389 x1435)))
(define-fun x3252 ((x1435 Int)) Int (ite (= x4428 x1435) x55 (x1892 x1435)))
(define-fun x25 ((x1435 Int)) Int (ite (= x1435 x4634) x4660 (x3252 x1435)))
(define-fun x604 ((x1435 Int)) Int (ite x1536 (x596 x1435) (ite x2685 (x596 x1435) (x167 x1435))))
(define-fun x2005 ((x1435 Int)) Int (ite x2685 (x588 x1435) (x25 x1435)))
(define-fun x935 ((x1435 Int)) Int (ite x1536 (x588 x1435) (x2005 x1435)))
(define-fun x3167 ((x1435 Int)) Int (ite (= x2351 x1435) x4462 (x2355 x1435)))
(define-fun x711 ((x1435 Int)) Int (ite (= x1435 x40) x1353 (x3841 x1435)))
(define-fun x2868 ((x1435 Int)) Int (ite (= x1435 x2166) x2331 (x3980 x1435)))
(define-fun x3787 ((x1435 Int)) Int (ite (= x1435 x508) x842 (x430 x1435)))
(define-fun x4689 ((x1435 Int)) Int (ite (= x111 x1435) x40 (x3327 x1435)))
(define-fun x1235 ((x1435 Int)) Int (ite x4665 (x4420 x1435) (x4689 x1435)))
(define-fun x491 ((x1435 Int)) Int (ite x4665 (x60 x1435) (x3787 x1435)))
(define-fun x591 ((x1435 Int)) Int (ite (= x2548 x1435) x302 (x4288 x1435)))
(define-fun x4394 ((x1435 Int)) Int (ite x4665 (x2655 x1435) (x591 x1435)))
(define-fun x4301 ((x1435 Int)) Int (ite x4665 (x3832 x1435) (x711 x1435)))
(define-fun x1759 ((x1435 Int)) Int (ite (= x1203 x1435) x3218 (x1092 x1435)))
(define-fun x4725 ((x1435 Int)) Int (ite x4665 (x4396 x1435) (x1759 x1435)))
(define-fun x2341 ((x1435 Int)) Int (ite (= x1435 x1432) x3254 (x2997 x1435)))
(define-fun x3291 ((x1435 Int)) Int (ite x4665 (x4370 x1435) (x2341 x1435)))
(define-fun x3151 ((x1435 Int)) Int (ite x4665 (x3126 x1435) (x2868 x1435)))
(define-fun x4101 ((x1435 Int)) Int (ite (= x1435 x1191) 1 (x604 x1435)))
(define-fun x3736 ((x1435 Int)) Int (ite (= x4639 x1435) x3477 (x935 x1435)))
(define-fun x1700 ((x1435 Int)) Int (ite (= x3506 x1435) x55 (x3736 x1435)))
(define-fun x3939 ((x1435 Int)) Int (ite (= x1435 x3316) x4212 (x1700 x1435)))
(define-fun x2893 ((x1435 Int)) Int (ite (= 288 x1435) 384 (x87 x1435)))
(define-fun x1598 ((x1435 Int)) Int (ite (= 416 x1435) x2613 (x2788 x1435)))
(define-fun x270 ((x1435 Int)) Int (ite x4016 (x3176 x1435) (x1598 x1435)))
(define-fun x1920 ((x1435 Int)) Int (ite x4016 (x2862 x1435) (x2155 x1435)))
(define-fun x1661 ((x1435 Int)) Int (ite (= x170 x1435) x703 (x590 x1435)))
(define-fun x2343 ((x1435 Int)) Int (ite x4016 (x2954 x1435) (x1661 x1435)))
(define-fun x187 ((x1435 Int)) Int (ite (= x1820 x1435) x3144 (x3806 x1435)))
(define-fun x4797 ((x1435 Int)) Int (ite x4016 (x1478 x1435) (x187 x1435)))
(define-fun x3563 ((x1435 Int)) Int (ite (= x1435 x3499) x3734 (x1615 x1435)))
(define-fun x4188 ((x1435 Int)) Int (ite x4016 (x1636 x1435) (x3563 x1435)))
(define-fun x1965 ((x1435 Int) (x4194 Int)) Int (ite (and (= x2975 x1435) (= x4194 x2608)) x3573 (x2756 x1435 x4194)))
(define-fun x3369 ((x1435 Int) (x4194 Int)) Int (ite (and (= x2760 x1435) (= x4194 x949)) x522 (x1965 x1435 x4194)))
(define-fun x1911 ((x1435 Int) (x4194 Int)) Int (ite (and (= x4194 x4035) (= x1435 x3333)) x965 (x2649 x1435 x4194)))
(define-fun x656 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x2821 x1435) (= x3169 x4194) (= x1242 x4300)) x3114 (x682 x1435 x4194 x4300)))
(define-fun x2996 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x4300 x4770) (= x4335 x1435) (= x3286 x4194)) x4584 (x656 x1435 x4194 x4300)))
(define-fun x1772 ((x1435 Int) (x4194 Int)) Int (ite x2063 (x3369 x1435 x4194) (x2756 x1435 x4194)))
(define-fun x2776 ((x1435 Int) (x4194 Int)) Int (ite x3775 (x2756 x1435 x4194) (x1772 x1435 x4194)))
(define-fun x372 ((x1435 Int) (x4194 Int)) Int (ite (and (= x1435 x4294) (= x1690 x4194)) x1074 (x2776 x1435 x4194)))
(define-fun x4086 ((x1435 Int) (x4194 Int)) Int (ite (and (= x1435 x4708) (= x1875 x4194)) x3366 (x372 x1435 x4194)))
(define-fun x3305 ((x1435 Int) (x4194 Int)) Int (ite x1402 (x4086 x1435 x4194) (x2776 x1435 x4194)))
(define-fun x1157 ((x1435 Int) (x4194 Int)) Int (ite x2536 (x2776 x1435 x4194) (x3305 x1435 x4194)))
(define-fun x1881 ((x1435 Int) (x4194 Int)) Int (ite x1114 (x2776 x1435 x4194) (x1157 x1435 x4194)))
(define-fun x3982 ((x1435 Int) (x4194 Int)) Int (ite x666 (x2649 x1435 x4194) (x1911 x1435 x4194)))
(define-fun x4107 ((x1435 Int) (x4194 Int)) Int (ite x2063 (x2649 x1435 x4194) (x3982 x1435 x4194)))
(define-fun x2077 ((x1435 Int) (x4194 Int)) Int (ite x3775 (x2649 x1435 x4194) (x4107 x1435 x4194)))
(define-fun x3953 ((x1435 Int) (x4194 Int)) Int (ite (and (= x1435 x3607) (= x4194 x4172)) x3452 (x2077 x1435 x4194)))
(define-fun x396 ((x1435 Int) (x4194 Int)) Int (ite x3209 (x2077 x1435 x4194) (x3953 x1435 x4194)))
(define-fun x356 ((x1435 Int) (x4194 Int)) Int (ite x1402 (x2077 x1435 x4194) (x396 x1435 x4194)))
(define-fun x2464 ((x1435 Int) (x4194 Int)) Int (ite x2536 (x2077 x1435 x4194) (x356 x1435 x4194)))
(define-fun x735 ((x1435 Int) (x4194 Int)) Int (ite x1114 (x2077 x1435 x4194) (x2464 x1435 x4194)))
(define-fun x4054 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x666 (x2996 x1435 x4194 x4300) (x682 x1435 x4194 x4300)))
(define-fun x474 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x2063 (x682 x1435 x4194 x4300) (x4054 x1435 x4194 x4300)))
(define-fun x1159 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x3775 (x682 x1435 x4194 x4300) (x474 x1435 x4194 x4300)))
(define-fun x2900 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x4194 x1205) (= x2197 x1435) (= x1255 x4300)) x2972 (x1159 x1435 x4194 x4300)))
(define-fun x1511 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x4194 x2425) (= x4300 x2031) (= x1435 x3955)) x4296 (x2900 x1435 x4194 x4300)))
(define-fun x593 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x3209 (x1511 x1435 x4194 x4300) (x1159 x1435 x4194 x4300)))
(define-fun x2148 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x1402 (x1159 x1435 x4194 x4300) (x593 x1435 x4194 x4300)))
(define-fun x347 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x2536 (x1159 x1435 x4194 x4300) (x2148 x1435 x4194 x4300)))
(define-fun x4812 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x1114 (x1159 x1435 x4194 x4300) (x347 x1435 x4194 x4300)))
(define-fun x1826 ((x1435 Int)) Int (ite (= x722 x1435) x3215 (x702 x1435)))
(define-fun x4163 ((x1435 Int)) Int (ite (= x1435 x3657) x2700 (x608 x1435)))
(define-fun x3331 ((x1435 Int)) Int (ite (= x1435 x2160) x2986 (x4163 x1435)))
(define-fun x2887 ((x1435 Int)) Int (ite x2179 (x1663 x1435) (ite x1427 (x4163 x1435) (x3331 x1435))))
(define-fun x52 ((x1435 Int)) Int (ite (= x3342 x1435) x3521 (x2887 x1435)))
(define-fun x2795 ((x1435 Int)) Int (ite x4444 (x2887 x1435) (x52 x1435)))
(define-fun x3938 ((x1435 Int)) Int (ite (= x2700 x1435) 0 (x710 x1435)))
(define-fun x3972 ((x1435 Int)) Int (ite (= x2986 x1435) 0 (x3938 x1435)))
(define-fun x1340 ((x1435 Int)) Int (ite x2179 (x2052 x1435) (ite x1427 (x3938 x1435) (x3972 x1435))))
(define-fun x2537 ((x1435 Int)) Int (ite (= x1435 x3521) x1828 (x1340 x1435)))
(define-fun x2501 ((x1435 Int)) Int (ite x4444 (x1340 x1435) (x2537 x1435)))
(define-fun x1525 ((x1435 Int)) Int (ite (= x1435 x1684) 0 (x4022 x1435)))
(define-fun x1337 ((x1435 Int)) Int (ite (= x3981 x1435) 0 (x1525 x1435)))
(define-fun x4228 ((x1435 Int)) Int (ite x2179 (x1179 x1435) (ite x1427 (x1525 x1435) (x1337 x1435))))
(define-fun x172 ((x1435 Int)) Int (ite (= x1435 x2027) x1590 (x4228 x1435)))
(define-fun x2709 ((x1435 Int)) Int (ite x4444 (x4228 x1435) (x172 x1435)))
(define-fun x3373 ((x1435 Int)) Int (ite (= x1435 x635) 0 (x3951 x1435)))
(define-fun x1496 ((x1435 Int)) Int (ite (= x1404 x1435) 0 (x3373 x1435)))
(define-fun x3027 ((x1435 Int)) Int (ite x2179 (x1961 x1435) (ite x1427 (x3373 x1435) (x1496 x1435))))
(define-fun x1951 ((x1435 Int)) Int (ite (= x3582 x1435) x3849 (x3027 x1435)))
(define-fun x1743 ((x1435 Int)) Int (ite x4444 (x3027 x1435) (x1951 x1435)))
(define-fun x554 ((x1435 Int)) Int (ite (= x4411 x1435) 0 (x741 x1435)))
(define-fun x1327 ((x1435 Int)) Int (ite (= x1435 x1260) 0 (x554 x1435)))
(define-fun x834 ((x1435 Int)) Int (ite x2179 (x2227 x1435) (ite x1427 (x554 x1435) (x1327 x1435))))
(define-fun x1710 ((x1435 Int)) Int (ite (= x1435 x729) x3083 (x834 x1435)))
(define-fun x1011 ((x1435 Int)) Int (ite x4444 (x834 x1435) (x1710 x1435)))
(define-fun x4318 ((x1435 Int) (x4194 Int)) Int (ite (and (= x4194 x3625) (= x1435 x1122)) x1425 (x1881 x1435 x4194)))
(define-fun x4823 ((x1435 Int) (x4194 Int)) Int (ite (and (= x2078 x4194) (= x2042 x1435)) x4788 (x4318 x1435 x4194)))
(define-fun x211 ((x1435 Int) (x4194 Int)) Int (ite (and (= x1435 x2171) (= x4693 x4194)) x573 (x735 x1435 x4194)))
(define-fun x412 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x1163 x1435) (= x4555 x4300) (= x3639 x4194)) x3403 (x4812 x1435 x4194 x4300)))
(define-fun x4629 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x4194 x4821) (= x4300 x2296) (= x1042 x1435)) x1844 (x412 x1435 x4194 x4300)))
(define-fun x4453 ((x1435 Int) (x4194 Int)) Int (ite (and (= x2311 x1435) (= x438 x4194)) x2333 (x2077 x1435 x4194)))
(define-fun x2121 ((x1435 Int) (x4194 Int)) Int (ite x1057 (x2077 x1435 x4194) (x4453 x1435 x4194)))
(define-fun x1004 ((x1435 Int) (x4194 Int)) Int (ite x1939 (x2077 x1435 x4194) (x2121 x1435 x4194)))
(define-fun x1997 ((x1435 Int) (x4194 Int)) Int (ite x2182 (x2077 x1435 x4194) (x1004 x1435 x4194)))
(define-fun x3961 ((x1435 Int) (x4194 Int)) Int (ite x878 (x735 x1435 x4194) (x211 x1435 x4194)))
(define-fun x309 ((x1435 Int) (x4194 Int)) Int (ite x1779 (x735 x1435 x4194) (x3961 x1435 x4194)))
(define-fun x3048 ((x1435 Int) (x4194 Int)) Int (ite x3250 (x735 x1435 x4194) (x309 x1435 x4194)))
(define-fun x146 ((x1435 Int) (x4194 Int)) Int (ite x665 (x1997 x1435 x4194) (x3048 x1435 x4194)))
(define-fun x529 ((x1435 Int) (x4194 Int)) Int (ite (and (= x177 x1435) (= x1047 x4194)) x1993 (x2776 x1435 x4194)))
(define-fun x2922 ((x1435 Int) (x4194 Int)) Int (ite (and (= x2904 x4194) (= x1830 x1435)) x2800 (x529 x1435 x4194)))
(define-fun x1699 ((x1435 Int) (x4194 Int)) Int (ite x1939 (x2922 x1435 x4194) (x2776 x1435 x4194)))
(define-fun x3876 ((x1435 Int) (x4194 Int)) Int (ite x2182 (x2776 x1435 x4194) (x1699 x1435 x4194)))
(define-fun x4334 ((x1435 Int) (x4194 Int)) Int (ite x1779 (x4823 x1435 x4194) (x1881 x1435 x4194)))
(define-fun x2432 ((x1435 Int) (x4194 Int)) Int (ite x3250 (x1881 x1435 x4194) (x4334 x1435 x4194)))
(define-fun x4251 ((x1435 Int) (x4194 Int)) Int (ite x665 (x3876 x1435 x4194) (x2432 x1435 x4194)))
(define-fun x531 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x4194 x3871) (= x1730 x4300) (= x1435 x1001)) x4587 (x1159 x1435 x4194 x4300)))
(define-fun x3309 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x678 x4300) (= x452 x1435) (= x4194 x1489)) x546 (x531 x1435 x4194 x4300)))
(define-fun x2263 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x1057 (x3309 x1435 x4194 x4300) (x1159 x1435 x4194 x4300)))
(define-fun x401 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x1939 (x1159 x1435 x4194 x4300) (x2263 x1435 x4194 x4300)))
(define-fun x1633 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x2182 (x1159 x1435 x4194 x4300) (x401 x1435 x4194 x4300)))
(define-fun x2883 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x878 (x4629 x1435 x4194 x4300) (x4812 x1435 x4194 x4300)))
(define-fun x3917 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x1779 (x4812 x1435 x4194 x4300) (x2883 x1435 x4194 x4300)))
(define-fun x1176 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x3250 (x4812 x1435 x4194 x4300) (x3917 x1435 x4194 x4300)))
(define-fun x3419 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite x665 (x1633 x1435 x4194 x4300) (x1176 x1435 x4194 x4300)))
(define-fun x3937 ((x1435 Int)) Int (ite (= 288 x1435) x1259 (x4168 x1435)))
(define-fun x641 ((x1435 Int)) Int (ite (= 320 x1435) x1960 (x4166 x1435)))
(define-fun x4229 ((x1435 Int)) Int (ite x650 (x2287 x1435) (x641 x1435)))
(define-fun x663 ((x1435 Int)) Int (ite (= x1435 x4286) x3349 (x4048 x1435)))
(define-fun x2561 ((x1435 Int)) Int (ite x650 (x2993 x1435) (x663 x1435)))
(define-fun x4465 ((x1435 Int)) Int (ite (= x1435 x4667) x335 (x2214 x1435)))
(define-fun x3422 ((x1435 Int)) Int 0)
(define-fun x4388 ((x1435 Int)) Int (ite (= x1435 4) 64 (x3422 x1435)))
(define-fun x3945 ((x1435 Int)) Int (ite (= x1435 68) x539 (x4388 x1435)))
(define-fun x901 ((x1435 Int)) Int (ite (= x1435 100) x4536 (x3945 x1435)))
(define-fun x4293 ((x1435 Int)) Int (ite (= 132 x1435) x2736 (x901 x1435)))
(define-fun x2314 ((x1435 Int)) Int (ite (= 164 x1435) 160 (x4293 x1435)))
(define-fun x2926 ((x1435 Int)) Int (ite (= 228 x1435) x4191 (x2314 x1435)))
(define-fun x3642 ((x1435 Int)) Int (ite (and (< x1435 (+ 260 x1816)) (>= x1435 260)) (x2741 (- x1435 260)) (x2926 x1435)))
(define-fun x2937 ((x1435 Int)) Int (ite (= x1435 196) x2102 (x3642 x1435)))
(define-fun x4075 ((x1435 Int)) Int (ite (= x1435 x407) x4820 (x2937 x1435)))
(define-fun x2671 ((x1435 Int)) Int (ite (and (<= x1733 x1435) (< x1435 (+ x4820 x1733))) (x1775 (- x1435 x1733)) (x4075 x1435)))
(define-fun x1304 ((x1435 Int)) Int (ite (= 36 x1435) x4355 (x2671 x1435)))
(define-fun x3509 ((x1435 Int)) Int (ite (= x1435 x4664) x3587 (x1304 x1435)))
(define-fun x4095 ((x1435 Int)) Int (ite (= x1665 x1435) x4057 (x3509 x1435)))
(define-fun x1809 ((x1435 Int)) Int (ite (= x409 x1435) x2564 (x4095 x1435)))
(define-fun x1546 ((x1435 Int)) Int 0)
(define-fun x2217 ((x1435 Int)) Int (ite (= 4 x1435) x1762 (x1546 x1435)))
(define-fun x2686 ((x1435 Int)) Int (ite (= x1435 36) 64 (x2217 x1435)))
(define-fun x706 ((x1435 Int)) Int (ite (= 68 x1435) x1144 (x2686 x1435)))
(define-fun x3534 ((x1435 Int)) Int (ite (= x1435 x4803) x886 (x104 x1435)))
(define-fun x1533 ((x1435 Int)) Int (ite (= x1435 x697) x29 (x3534 x1435)))
(define-fun x4389 ((x1435 Int)) Int (ite (= x1435 x12) x2326 (x1533 x1435)))
(define-fun x2060 ((x1435 Int)) Int (ite (= x1917 x1435) x3302 (x4389 x1435)))
(define-fun x1587 ((x1435 Int)) Int (ite (= x500 x1435) x51 (x2060 x1435)))
(define-fun x2890 ((x1435 Int)) Int (ite (= x1435 x2708) x1178 (x1587 x1435)))
(define-fun x4766 ((x1435 Int)) Int (ite (= x3957 x1435) x3136 (x2890 x1435)))
(define-fun x1211 ((x1435 Int)) Int (ite (= x707 x1435) x1292 (x4766 x1435)))
(define-fun x4841 ((x1435 Int)) Int (ite (= x1435 x972) x448 (x1211 x1435)))
(define-fun x755 ((x1435 Int)) Int (ite (= x3836 x1435) x3205 (x4841 x1435)))
(define-fun x2630 ((x1435 Int)) Int (ite (= x1435 x3020) x1099 (x755 x1435)))
(define-fun x4195 ((x1435 Int)) Int (ite (= x1281 x1435) x3140 (x2630 x1435)))
(define-fun x3031 ((x1435 Int)) Int (ite (= x1435 x4415) x4840 (x4195 x1435)))
(define-fun x4816 ((x1435 Int)) Int (ite x1104 (x4841 x1435) (x3031 x1435)))
(define-fun x3553 ((x1435 Int)) Int (ite (= x1435 x3075) x983 (x4816 x1435)))
(define-fun x4041 ((x1435 Int)) Int (ite (= x1435 x2902) x4215 (x3553 x1435)))
(define-fun x872 ((x1435 Int)) Int (ite (= x1435 x3780) x2297 (x4041 x1435)))
(define-fun x987 ((x1435 Int)) Int (ite (= x1435 x4809) x3152 (x872 x1435)))
(define-fun x783 ((x1435 Int)) Int (ite (= x1435 x4566) x2595 (x987 x1435)))
(define-fun x485 ((x1435 Int)) Int (ite (= x1435 x3791) x2049 (x783 x1435)))
(define-fun x2629 ((x1435 Int)) Int (ite x4642 (x4041 x1435) (x485 x1435)))
(define-fun x2952 ((x1435 Int)) Int (ite (= x1435 x2522) x2626 (x2629 x1435)))
(define-fun x453 ((x1435 Int)) Int (ite (= x1435 x2265) x4828 (x2952 x1435)))
(define-fun x4800 ((x1435 Int)) Int (ite (= x1435 x1842) x4356 (x453 x1435)))
(define-fun x3282 ((x1435 Int)) Int (ite (= x1435 x2557) x1126 (x4800 x1435)))
(define-fun x1526 ((x1435 Int)) Int (ite (and (> (+ x3278 x838) x1435) (<= x838 x1435)) (x4513 (- (+ x1435 x2981) x838)) (x3875 x1435)))
(define-fun x3061 ((x1435 Int)) Int (ite (= x1435 x4765) 0 (x1526 x1435)))
(define-fun x2805 ((x1435 Int)) Int (ite (and (>= x1435 x4615) (< x1435 (+ x1126 x4615))) (x3061 (- (+ x2225 x1435) x4615)) (x3282 x1435)))
(define-fun x4596 ((x1435 Int)) Int (ite (= x1576 x1435) x1837 (x2805 x1435)))
(define-fun x1912 ((x1435 Int)) Int (ite (= x2576 x1435) x3318 (x4596 x1435)))
(define-fun x434 ((x1435 Int)) Int (ite (= x1435 x558) x4259 (x1912 x1435)))
(define-fun x1805 ((x1435 Int)) Int (ite (and (>= x1435 x534) (> (+ x534 x4414) x1435)) (x4513 (- (+ x885 x1435) x534)) (x245 x1435)))
(define-fun x403 ((x1435 Int)) Int (ite (= x684 x1435) 0 (x1805 x1435)))
(define-fun x860 ((x1435 Int)) Int (ite (and (> (+ x1256 x4259) x1435) (>= x1435 x1256)) (x403 (- (+ x1435 x1953) x1256)) (x434 x1435)))
(define-fun x443 ((x1435 Int)) Int (ite (= x1435 x4581) x2848 (x860 x1435)))
(define-fun x1741 ((x1435 Int)) Int (ite (= x3626 x1435) x1994 (x443 x1435)))
(define-fun x622 ((x1435 Int)) Int (ite (= x1435 x4244) x4009 (x1741 x1435)))
(define-fun x4173 ((x1435 Int)) Int (ite (and (<= x1795 x1435) (> (+ x2578 x1795) x1435)) (x4513 (- (+ x4563 x1435) x1795)) (x3001 x1435)))
(define-fun x4705 ((x1435 Int)) Int (ite (= x1435 x3747) 0 (x4173 x1435)))
(define-fun x1190 ((x1435 Int)) Int (ite (and (< x1435 (+ x4646 x4009)) (<= x4646 x1435)) (x4705 (- (+ x1435 x633) x4646)) (x622 x1435)))
(define-fun x1127 ((x1435 Int)) Int (ite (= x1435 x4369) 32 (x4252 x1435)))
(define-fun x1556 ((x1435 Int)) Int (ite (= x4681 x1435) x811 (x1127 x1435)))
(define-fun x4745 ((x1435 Int)) Int (ite (and (< x1435 (+ x811 x891)) (<= x891 x1435)) (x1190 (- (+ x2833 x1435) x891)) (x1556 x1435)))
(define-fun x3527 ((x1435 Int)) Int (ite (and (< x1435 x1144) (<= 0 x1435)) (x4745 (+ x2712 x1435)) (x3141 x1435)))
(define-fun x109 ((x1435 Int)) Int (ite (and (<= 100 x1435) (> (+ x1144 100) x1435)) (x3527 (- x1435 100)) (x706 x1435)))
(define-fun x4794 ((x1435 Int)) Int (ite (and (> (+ 160 x4364) x1435) (>= x1435 160)) (x109 (- x1435 60)) (x2412 x1435)))
(define-fun x3924 ((x1435 Int)) Int (ite (= x1435 x4472) 0 (x4794 x1435)))
(define-fun x698 ((x1435 Int)) Int (ite (= x260 x1435) x4315 (x3161 x1435)))
(define-fun x2112 ((x1435 Int)) Int (ite (= x1797 x1435) x176 (x698 x1435)))
(define-fun x2886 ((x1435 Int)) Int (ite (= x1435 x3726) x3595 (x2112 x1435)))
(define-fun x1409 ((x1435 Int)) Int (ite (= x2002 x1435) x1925 (x2886 x1435)))
(define-fun x1956 ((x1435 Int)) Int (ite (and (>= x1435 x1361) (> (+ x1925 x1361) x1435)) (x3924 (- (+ 160 x1435) x1361)) (x1409 x1435)))
(define-fun x4798 ((x1435 Int)) Int (ite (and (<= 0 x1435) (> x2564 x1435)) (x1956 (+ x4488 x1435)) (x4641 x1435)))
(define-fun x2245 ((x1435 Int)) Int (ite (and (<= x343 x1435) (> (+ x2564 x343) x1435)) (x4798 (- x1435 x343)) (x1809 x1435)))
(define-fun x603 ((x1435 Int)) Int (ite (and (< x1435 (+ x2977 x335)) (<= x2977 x1435)) (x2245 (- (+ x1435 x1882) x2977)) (x450 x1435)))
(define-fun x3458 ((x1435 Int)) Int (ite (= x1435 x4458) 0 (x603 x1435)))
(define-fun x4148 ((x1435 Int)) Int (ite (and (<= x4135 x1435) (< x1435 (+ x4135 x2129))) (x3458 (- (+ x731 x1435) x4135)) (x2478 x1435)))
(define-fun x1746 ((x1435 Int)) Int (ite (= x1435 x4469) x2058 (x2728 x1435)))
(define-fun x2605 ((x1435 Int)) Int (ite (= x3349 x1435) x2941 (x1075 x1435)))
(define-fun x3740 ((x1435 Int)) Int (ite x650 (x113 x1435) (x2605 x1435)))
(define-fun x135 ((x1435 Int)) Int (ite (and (> (+ x3762 x2941) x1435) (<= x3762 x1435)) (x2245 (- (+ x3145 x1435) x3762)) (x599 x1435)))
(define-fun x3897 ((x1435 Int)) Int (ite (= x1435 x3391) 0 (x135 x1435)))
(define-fun x446 ((x1435 Int)) Int (ite x650 (x3830 x1435) (x3897 x1435)))
(define-fun x3633 ((x1435 Int)) Int (ite (and (> (+ x4565 x1399) x1435) (>= x1435 x1399)) (x446 (- (+ x1435 x1040) x1399)) (x4640 x1435)))
(define-fun x288 ((x1435 Int)) Int (ite (= x1435 x2855) x3028 (x4703 x1435)))
(define-fun x2289 ((x1435 Int)) Int 0)
(define-fun x1649 ((x1435 Int)) Int (ite (= 4 x1435) 64 (x2289 x1435)))
(define-fun x2859 ((x1435 Int)) Int (ite (= 68 x1435) x1341 (x1649 x1435)))
(define-fun x3665 ((x1435 Int)) Int (ite (= x1435 100) x2220 (x2859 x1435)))
(define-fun x2423 ((x1435 Int)) Int (ite (= 132 x1435) x3878 (x3665 x1435)))
(define-fun x2144 ((x1435 Int)) Int (ite (= 164 x1435) x4094 (x2423 x1435)))
(define-fun x3592 ((x1435 Int)) Int (ite (= x1435 196) x3767 (x2144 x1435)))
(define-fun x1791 ((x1435 Int)) Int (ite (= x1435 228) 256 (x3592 x1435)))
(define-fun x680 ((x1435 Int)) Int (ite (= 324 x1435) 0 (x1791 x1435)))
(define-fun x1640 ((x1435 Int)) Int (ite (and (<= 356 x1435) (< x1435 356)) (x1932 (- x1435 356)) (x680 x1435)))
(define-fun x3006 ((x1435 Int)) Int (ite (= 260 x1435) 288 (x1640 x1435)))
(define-fun x1711 ((x1435 Int)) Int (ite (= x1435 356) 0 (x3006 x1435)))
(define-fun x1107 ((x1435 Int)) Int (ite (and (>= x1435 388) (< x1435 388)) (x377 (- x1435 388)) (x1711 x1435)))
(define-fun x1538 ((x1435 Int)) Int (ite (= 292 x1435) 320 (x1107 x1435)))
(define-fun x1376 ((x1435 Int)) Int (ite (= 388 x1435) x1065 (x1538 x1435)))
(define-fun x769 ((x1435 Int)) Int (ite (= x1435 420) 192 (x1376 x1435)))
(define-fun x969 ((x1435 Int)) Int (ite (= x1435 580) x1386 (x769 x1435)))
(define-fun x766 ((x1435 Int)) Int (ite (and (> (+ 612 x1386) x1435) (>= x1435 612)) (x1010 (- x1435 612)) (x969 x1435)))
(define-fun x3804 ((x1435 Int)) Int (ite (= 452 x1435) x3255 (x766 x1435)))
(define-fun x2452 ((x1435 Int)) Int (ite (= x1435 484) x2237 (x3804 x1435)))
(define-fun x4102 ((x1435 Int)) Int (ite (= x1435 x3111) x499 (x2452 x1435)))
(define-fun x4129 ((x1435 Int)) Int (ite (and (<= x2337 x1435) (> (+ x499 x2337) x1435)) (x2962 (- x1435 x2337)) (x4102 x1435)))
(define-fun x4674 ((x1435 Int)) Int (ite (= x1435 516) x1138 (x4129 x1435)))
(define-fun x4845 ((x1435 Int)) Int (ite (= 548 x1435) x2350 (x4674 x1435)))
(define-fun x2105 ((x1435 Int)) Int (ite (= x1586 x1435) x4049 (x4845 x1435)))
(define-fun x4213 ((x1435 Int)) Int (ite (and (>= x1435 x2165) (> (+ x2165 x4049) x1435)) (x207 (- x1435 x2165)) (x2105 x1435)))
(define-fun x4600 ((x1435 Int)) Int (ite (= x1435 36) x2022 (x4213 x1435)))
(define-fun x4027 ((x1435 Int)) Int (ite (= x1435 x4454) x4678 (x4600 x1435)))
(define-fun x468 ((x1435 Int)) Int (ite (= x4734 x1435) x3892 (x4027 x1435)))
(define-fun x4271 ((x1435 Int)) Int (ite (= x1619 x1435) x2836 (x468 x1435)))
(define-fun x3347 ((x1435 Int)) Int (ite (= x2820 x1435) x373 (x4271 x1435)))
(define-fun x1081 ((x1435 Int)) Int (ite (= x1435 x1209) x1696 (x3347 x1435)))
(define-fun x1509 ((x1435 Int)) Int (ite (= x1435 x2612) x2765 (x1081 x1435)))
(define-fun x4382 ((x1435 Int)) Int (ite (= x1435 x2757) 0 (x1509 x1435)))
(define-fun x2716 ((x1435 Int)) Int (ite (and (< x1435 x521) (>= x1435 x521)) (x1054 (- x1435 x521)) (x4382 x1435)))
(define-fun x1999 ((x1435 Int)) Int (ite (= x2544 x1435) x4393 (x2716 x1435)))
(define-fun x743 ((x1435 Int)) Int (ite (= x379 x1435) 0 (x1999 x1435)))
(define-fun x3560 ((x1435 Int)) Int (ite (and (>= x1435 x1564) (> x1564 x1435)) (x652 (- x1435 x1564)) (x743 x1435)))
(define-fun x243 ((x1435 Int)) Int (ite (= x1435 x3552) x2001 (x3560 x1435)))
(define-fun x2421 ((x1435 Int)) Int (ite (= x1435 x955) x1461 (x243 x1435)))
(define-fun x4056 ((x1435 Int)) Int (ite (= x1025 x1435) x2226 (x2421 x1435)))
(define-fun x2857 ((x1435 Int)) Int (ite (= x1435 x1948) x1738 (x4056 x1435)))
(define-fun x3060 ((x1435 Int)) Int (ite (and (<= x2702 x1435) (< x1435 (+ x2702 x1738))) (x675 (- x1435 x2702)) (x2857 x1435)))
(define-fun x1433 ((x1435 Int)) Int (ite (= x3814 x1435) x1403 (x3060 x1435)))
(define-fun x4182 ((x1435 Int)) Int (ite (= x2925 x1435) x3784 (x1433 x1435)))
(define-fun x2062 ((x1435 Int)) Int (ite (= x1435 x4440) x2666 (x4182 x1435)))
(define-fun x2717 ((x1435 Int)) Int (ite (and (>= x1435 x3710) (< x1435 (+ x2666 x3710))) (x4169 (- x1435 x3710)) (x2062 x1435)))
(define-fun x3147 ((x1435 Int)) Int (ite (= x3673 x1435) x585 (x2717 x1435)))
(define-fun x2558 ((x1435 Int)) Int (ite (= x1367 x1435) x1135 (x3147 x1435)))
(define-fun x3180 ((x1435 Int)) Int (ite (= x4170 x1435) x779 (x2558 x1435)))
(define-fun x910 ((x1435 Int)) Int (ite (and (<= x3704 x1435) (< x1435 (+ x779 x3704))) (x2643 (- x1435 x3704)) (x3180 x1435)))
(define-fun x668 ((x1435 Int)) Int (ite x2685 (x596 x1435) (x167 x1435)))
(define-fun x1909 ((x1435 Int)) Int (ite (= x1435 x1145) 56168211265741800405898417846466446431335698074001377101504018355951975268352 (x2005 x1435)))
(define-fun x3276 ((x1435 Int)) Int (ite (= x1161 x1435) 96 (x1909 x1435)))
(define-fun x1548 ((x1435 Int)) Int (ite (= x1246 x1435) x4349 (x3276 x1435)))
(define-fun x3021 ((x1435 Int)) Int (ite x3296 (x935 x1435) (x3939 x1435)))
(define-fun x30 ((x1435 Int)) Int (ite (= x1435 x4639) 56168211265741800405898417846466446431335698074001377101504018355951975268352 (x3021 x1435)))
(define-fun x3899 ((x1435 Int)) Int (ite (= x4114 x1435) 96 (x30 x1435)))
(define-fun x3606 ((x1435 Int)) Int (ite (= x69 x1435) x418 (x3899 x1435)))
(define-fun x2910 ((x1435 Int)) Int (ite (= x1435 320) x1554 (x551 x1435)))
(define-fun x3237 ((x1435 Int)) Int (ite (= x1554 x1435) x1431 (x3193 x1435)))
(define-fun x2249 ((x1435 Int)) Int (ite (= x2294 x1435) x3412 (x4278 x1435)))
(define-fun x1234 ((x1435 Int)) Int (ite x833 (x368 x1435) (x2249 x1435)))
(define-fun x1257 ((x1435 Int)) Int (ite (= x1435 x3412) x1268 (x1262 x1435)))
(define-fun x2290 ((x1435 Int)) Int (ite x833 (x4133 x1435) (x1257 x1435)))
(define-fun x2895 ((x1435 Int)) Int (ite (= x3968 x1435) x3809 (x3735 x1435)))
(define-fun x1675 ((x1435 Int)) Int (ite x833 (x2230 x1435) (x2895 x1435)))
(define-fun x2938 ((x1435 Int)) Int (ite (= x548 x1435) x2187 (x2786 x1435)))
(define-fun x1428 ((x1435 Int)) Int (ite x833 (x4141 x1435) (x2938 x1435)))
(define-fun x3778 ((x1435 Int)) Int (ite (= x948 x1435) x209 (x160 x1435)))
(define-fun x1207 ((x1435 Int)) Int (ite x833 (x2916 x1435) (x3778 x1435)))
(define-fun x2479 ((x1435 Int)) Int (ite (= x1435 x2286) x1095 (x4738 x1435)))
(define-fun x4055 ((x1435 Int)) Int (ite (= x3523 x1435) 0 (x718 x1435)))
(define-fun x3089 ((x1435 Int)) Int (ite (= x3544 x1435) 0 (x1852 x1435)))
(define-fun x1071 ((x1435 Int)) Int (ite (= x1435 x110) 0 (x3171 x1435)))
(define-fun x3354 ((x1435 Int)) Int (ite (= x1435 x2528) 0 (x2020 x1435)))
(define-fun x4550 ((x1435 Int)) Int (ite (= x3848 x1435) x3523 (x4582 x1435)))
(define-fun x3751 ((x1435 Int)) Int (ite (= x1018 x1435) 0 (x4055 x1435)))
(define-fun x3464 ((x1435 Int)) Int (ite (= x1435 x1569) 0 (x3089 x1435)))
(define-fun x76 ((x1435 Int)) Int (ite (= x4337 x1435) 0 (x1071 x1435)))
(define-fun x1789 ((x1435 Int)) Int (ite (= x3608 x1435) 0 (x3354 x1435)))
(define-fun x2207 ((x1435 Int)) Int (ite (= x789 x1435) x1018 (x4550 x1435)))
(define-fun x2663 ((x1435 Int)) Int (ite x1109 (x1187 x1435) (ite x4227 (x4055 x1435) (x3751 x1435))))
(define-fun x1563 ((x1435 Int)) Int (ite x1109 (x1335 x1435) (ite x4227 (x3089 x1435) (x3464 x1435))))
(define-fun x3132 ((x1435 Int)) Int (ite x1109 (x2714 x1435) (ite x4227 (x4550 x1435) (x2207 x1435))))
(define-fun x4078 ((x1435 Int)) Int (ite x1109 (x623 x1435) (ite x4227 (x3354 x1435) (x1789 x1435))))
(define-fun x961 ((x1435 Int)) Int (ite x1109 (x2640 x1435) (ite x4227 (x1071 x1435) (x76 x1435))))
(define-fun x3602 ((x1435 Int)) Int (ite (= x1435 x4606) 0 (x961 x1435)))
(define-fun x1426 ((x1435 Int)) Int (ite (= x958 x1435) x4657 (x4078 x1435)))
(define-fun x1429 ((x1435 Int)) Int (ite (= x1435 x2087) x1393 (x1563 x1435)))
(define-fun x1885 ((x1435 Int)) Int (ite (= x1435 x2987) x636 (x2663 x1435)))
(define-fun x4434 ((x1435 Int)) Int (ite x4444 (x4078 x1435) (ite x2843 (ite x567 (x1426 x1435) (x4078 x1435)) (x4078 x1435))))
(define-fun x1970 ((x1435 Int)) Int (ite x4444 (x2663 x1435) (ite x2843 (ite x567 (x1885 x1435) (x2663 x1435)) (x2663 x1435))))
(define-fun x1481 ((x1435 Int)) Int (ite x4444 (x961 x1435) (ite x2843 (x3602 x1435) (x961 x1435))))
(define-fun x2278 ((x1435 Int)) Int (ite x4444 (x1563 x1435) (ite x2843 (ite x567 (x1429 x1435) (x1563 x1435)) (x1563 x1435))))
(define-fun x514 ((x1435 Int) (x4194 Int)) Int (ite (and (= x1142 x1435) (= x4194 x526)) x4677 (x4251 x1435 x4194)))
(define-fun x1567 ((x1435 Int) (x4194 Int)) Int (ite (and (= x476 x4194) (= x1435 x3701)) x2424 (x514 x1435 x4194)))
(define-fun x4250 ((x1435 Int) (x4194 Int)) Int (ite (and (= x4746 x4194) (= x4253 x1435)) x826 (x146 x1435 x4194)))
(define-fun x2681 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x2416 x4300) (= x4194 x4707) (= x2108 x1435)) x2606 (x3419 x1435 x4194 x4300)))
(define-fun x595 ((x1435 Int) (x4194 Int) (x4300 Int)) Int (ite (and (= x1553 x4194) (= x3432 x4300) (= x2485 x1435)) x4448 (x2681 x1435 x4194 x4300)))
(define-fun x4130 ((x1435 Int)) Int (ite (= x2032 x1435) x1436 (x4131 x1435)))
(define-fun x148 ((x1435 Int)) Int (ite (= x1258 x1435) x2366 (x2513 x1435)))
(define-fun x153 ((x1435 Int)) Int (ite (= x1435 x1265) x4132 (x202 x1435)))
(define-fun x699 ((x1435 Int)) Int (ite (= x765 x1435) x95 (x321 x1435)))
(define-fun x4080 ((x1435 Int)) Int (ite (= 416 x1435) x2032 (x1788 x1435)))
(define-fun x2600 ((x1435 Int)) Int (ite (= x761 x1435) x1627 (x1845 x1435)))
(define-fun x2316 ((x1435 Int)) Int (ite (= x1435 x2384) x2195 (x2781 x1435)))
(define-fun x2131 ((x1435 Int)) Int (ite (= x1871 x1435) x1445 (x2658 x1435)))
(define-fun x1886 ((x1435 Int)) Int (ite (= x2632 x1435) x1794 (x4302 x1435)))
(define-fun x2086 ((x1435 Int)) Int (ite (= x1790 x1435) x761 (x4280 x1435)))
(define-fun x178 ((x1435 Int)) Int (ite (= x1435 x4551) x2704 (x3469 x1435)))
(define-fun x3322 ((x1435 Int)) Int (ite (= x1435 x1804) x550 (x1734 x1435)))
(define-fun x3965 ((x1435 Int)) Int (ite (and (> (+ x3820 x550) x1435) (>= x1435 x3820)) (x59 (- (+ x4399 x1435) x3820)) (x1041 x1435)))
(define-fun x3388 ((x1435 Int)) Int (ite (= x1435 x1667) 0 (x3965 x1435)))
(define-fun x4585 ((x1435 Int)) Int (ite (= x1702 x1435) x1804 (x2783 x1435)))
(define-fun x1035 ((x1435 Int)) Int (ite (= x1918 x1435) x374 (x2652 x1435)))
(define-fun x4452 ((x1435 Int)) Int (ite (= x1435 x3992) x4210 (x4031 x1435)))
(define-fun x3723 ((x1435 Int)) Int (ite (and (> (+ x3115 x4210) x1435) (>= x1435 x3115)) (x59 (- (+ x1435 x2446) x3115)) (x4159 x1435)))
(define-fun x1968 ((x1435 Int)) Int (ite (= x1435 x4066) 0 (x3723 x1435)))
(define-fun x4189 ((x1435 Int)) Int (ite (= x1435 x3127) x3992 (x2449 x1435)))
(define-fun x11 ((x1435 Int)) Int (ite (= x1435 x4608) x3211 (x1987 x1435)))
(define-fun x294 ((x1435 Int)) Int (ite (= x1140 x1435) x1118 (x3399 x1435)))
(define-fun x337 ((x1435 Int)) Int (ite (and (> (+ x2215 x1118) x1435) (<= x2215 x1435)) (x59 (- (+ x1435 x2933) x2215)) (x2473 x1435)))
(define-fun x1915 ((x1435 Int)) Int (ite (= x1435 x161) 0 (x337 x1435)))
(define-fun x232 ((x1435 Int)) Int (ite (= x3550 x1435) x1140 (x4344 x1435)))
(define-fun x3188 ((x1435 Int)) Int (ite (= x1435 352) x4551 (x4333 x1435)))
(define-fun x322 ((x1435 Int)) Int (ite x2196 (x3113 x1435) (x153 x1435)))
(define-fun x3816 ((x1435 Int)) Int (ite x2196 (x3718 x1435) (x148 x1435)))
(define-fun x236 ((x1435 Int)) Int (ite x2196 (x4061 x1435) (x699 x1435)))
(define-fun x1347 ((x1435 Int)) Int (ite x2196 (x1818 x1435) (x4130 x1435)))
(define-fun x3790 ((x1435 Int)) Int (ite x2196 (x1362 x1435) (x4080 x1435)))
(define-fun x132 ((x1435 Int)) Int (ite (= x1524 x1435) x549 (x3925 x1435)))
(define-fun x3434 ((x1435 Int)) Int (ite x3231 (x3271 x1435) (x1886 x1435)))
(define-fun x2253 ((x1435 Int)) Int (ite x3231 (x246 x1435) (x2600 x1435)))
(define-fun x2293 ((x1435 Int)) Int (ite x3231 (x64 x1435) (x2086 x1435)))
(define-fun x540 ((x1435 Int)) Int (ite x3231 (x796 x1435) (x2316 x1435)))
(define-fun x2045 ((x1435 Int)) Int (ite x3231 (x2877 x1435) (x2131 x1435)))
(define-fun x1815 ((x1435 Int)) Int (ite (= x1435 x579) x3278 (x1470 x1435)))
(define-fun x3121 ((x1435 Int)) Int (ite (= x3616 x1435) x4414 (x4291 x1435)))
(define-fun x1812 ((x1435 Int)) Int (ite (= x3243 x1435) x2578 (x4673 x1435)))
(define-fun x3926 ((x1435 Int)) Int (ite (= x1435 x524) x1781 (x1548 x1435)))
(define-fun x3047 ((x1435 Int)) Int (ite (= x1435 x3921) x1311 (x3926 x1435)))
(define-fun x4683 ((x1435 Int)) Int (ite (= x4327 x1435) x3049 (x3047 x1435)))
(define-fun x210 ((x1435 Int)) Int (ite (= x1435 x1985) x843 (x4683 x1435)))
(define-fun x441 ((x1435 Int)) Int (ite (= x2689 x1435) x4522 (x210 x1435)))
(define-fun x2680 ((x1435 Int)) Int (ite (= x4834 x1435) x2090 (x441 x1435)))
(define-fun x3414 ((x1435 Int)) Int (ite x3603 (x1548 x1435) (x2680 x1435)))
(define-fun x1659 ((x1435 Int)) Int (ite (= x3210 x1435) x2358 (x3414 x1435)))
(define-fun x2238 ((x1435 Int)) Int (ite (= x3658 x1435) x923 (x1659 x1435)))
(define-fun x1358 ((x1435 Int)) Int (ite (= x2304 x1435) x2370 (x2238 x1435)))
(define-fun x292 ((x1435 Int)) Int (ite (= x1803 x1435) x1600 (x1358 x1435)))
(define-fun x1874 ((x1435 Int)) Int (ite (= x4279 x1435) x2917 (x292 x1435)))
(define-fun x4445 ((x1435 Int)) Int (ite (= x1822 x1435) x2535 (x1874 x1435)))
(define-fun x495 ((x1435 Int)) Int (ite (= x1435 x4106) 256 (x4445 x1435)))
(define-fun x589 ((x1435 Int)) Int (ite (= x1435 x1836) x72 (x495 x1435)))
(define-fun x3966 ((x1435 Int)) Int (ite (= x1551 x1435) x2831 (x589 x1435)))
(define-fun x2648 ((x1435 Int)) Int (ite (= x1435 x3989) x4524 (x3966 x1435)))
(define-fun x1669 ((x1435 Int)) Int (ite (= x1595 x1435) x2406 (x2648 x1435)))
(define-fun x2705 ((x1435 Int)) Int (ite (= x1309 x1435) x24 (x1669 x1435)))
(define-fun x2157 ((x1435 Int)) Int (ite (= x455 x1435) x1274 (x3606 x1435)))
(define-fun x4417 ((x1435 Int)) Int (ite (= x484 x1435) x2373 (x2157 x1435)))
(define-fun x4785 ((x1435 Int)) Int (ite (= x1435 x4630) x345 (x4417 x1435)))
(define-fun x2929 ((x1435 Int)) Int (ite (= x1059 x1435) x3418 (x4785 x1435)))
(define-fun x4384 ((x1435 Int)) Int (ite (= x1315 x1435) x4799 (x2929 x1435)))
(define-fun x4237 ((x1435 Int)) Int (ite (= x1435 x98) x4658 (x4384 x1435)))
(define-fun x939 ((x1435 Int)) Int (ite x3614 (x3606 x1435) (x4237 x1435)))
(define-fun x3750 ((x1435 Int)) Int (ite (= x1900 x1435) x4731 (x939 x1435)))
(define-fun x809 ((x1435 Int)) Int (ite (= x4119 x1435) x3960 (x3750 x1435)))
(define-fun x2794 ((x1435 Int)) Int (ite (= x2978 x1435) x4406 (x809 x1435)))
(define-fun x1680 ((x1435 Int)) Int (ite (= x1435 x3343) x2379 (x2794 x1435)))
(define-fun x422 ((x1435 Int)) Int (ite (= x1435 x4548) x2232 (x1680 x1435)))
(define-fun x3173 ((x1435 Int)) Int (ite (= x954 x1435) x2128 (x422 x1435)))
(define-fun x217 ((x1435 Int)) Int (ite (= x3923 x1435) 256 (x3173 x1435)))
(define-fun x4277 ((x1435 Int)) Int (ite (= x264 x1435) x1133 (x217 x1435)))
(define-fun x3659 ((x1435 Int)) Int (ite (= x1435 x758) x4656 (x4277 x1435)))
(define-fun x3138 ((x1435 Int)) Int (ite (= x2772 x1435) x4825 (x3659 x1435)))
(define-fun x1320 ((x1435 Int)) Int (ite (= x1435 x433) x909 (x3138 x1435)))
(define-fun x762 ((x1435 Int)) Int (ite (= x1435 x4478) x4256 (x1320 x1435)))
(define-fun x1662 ((x1435 Int)) Int (ite x922 (x589 x1435) (x2705 x1435)))
(define-fun x3879 ((x1435 Int)) Int (ite (= x1435 x4030) x2538 (x1662 x1435)))
(define-fun x4068 ((x1435 Int)) Int (ite (= x4154 x1435) x840 (x3879 x1435)))
(define-fun x617 ((x1435 Int)) Int (ite (= x1435 x620) x2378 (x4068 x1435)))
(define-fun x2170 ((x1435 Int)) Int (ite (= x1833 x1435) x2034 (x617 x1435)))
(define-fun x4568 ((x1435 Int)) Int (ite (= x73 x1435) x4479 (x2170 x1435)))
(define-fun x2814 ((x1435 Int)) Int (ite (= x3670 x1435) x1748 (x4568 x1435)))
(define-fun x4774 ((x1435 Int)) Int (ite x3307 (x4277 x1435) (x762 x1435)))
(define-fun x4171 ((x1435 Int)) Int (ite (= x1435 x2223) x4309 (x4774 x1435)))
(define-fun x4755 ((x1435 Int)) Int (ite (= x3216 x1435) x1200 (x4171 x1435)))
(define-fun x4733 ((x1435 Int)) Int (ite (= x1263 x1435) x4485 (x4755 x1435)))
(define-fun x3411 ((x1435 Int)) Int (ite (= x1435 x4497) x1149 (x4733 x1435)))
(define-fun x3654 ((x1435 Int)) Int (ite (= x1435 x4747) x4216 (x3411 x1435)))
(define-fun x3223 ((x1435 Int)) Int (ite (= x1435 x1355) x194 (x3654 x1435)))
(define-fun x4074 ((x1435 Int)) Int (ite (= x1960 x1435) x1991 (x4814 x1435)))
(define-fun x3792 ((x1435 Int)) Int (ite x650 (x1846 x1435) (x4074 x1435)))
(define-fun x2815 ((x1435 Int)) Int (ite x2212 (x4068 x1435) (x2814 x1435)))
(define-fun x3102 ((x1435 Int)) Int (ite (= x2596 x1435) x808 (x2815 x1435)))
(define-fun x686 ((x1435 Int)) Int (ite (= x1435 x1677) x1192 (x3102 x1435)))
(define-fun x1847 ((x1435 Int)) Int (ite (= x2750 x1435) 192 (x686 x1435)))
(define-fun x4694 ((x1435 Int)) Int (ite (= x1435 x1575) x1485 (x1847 x1435)))
(define-fun x3052 ((x1435 Int)) Int (ite (and (< x1435 (+ x6 x1485)) (>= x1435 x6)) (x3388 (- (+ x1435 x1085) x6)) (x4694 x1435)))
(define-fun x2532 ((x1435 Int)) Int (ite (= x1435 x440) x2325 (x3052 x1435)))
(define-fun x1413 ((x1435 Int)) Int (ite (= x2721 x1435) x2317 (x2532 x1435)))
(define-fun x2827 ((x1435 Int)) Int (ite (= x1435 x4819) x4594 (x1413 x1435)))
(define-fun x2569 ((x1435 Int)) Int (ite (and (<= x1528 x1435) (> (+ x1528 x4594) x1435)) (x1968 (- (+ x648 x1435) x1528)) (x2827 x1435)))
(define-fun x1950 ((x1435 Int)) Int (ite (= x1147 x1435) x1380 (x2569 x1435)))
(define-fun x3958 ((x1435 Int)) Int (ite (= x1435 x4430) x4128 (x1950 x1435)))
(define-fun x4175 ((x1435 Int)) Int (ite (= x1368 x1435) x2570 (x3958 x1435)))
(define-fun x1103 ((x1435 Int)) Int (ite (and (<= x2348 x1435) (< x1435 (+ x2348 x2570))) (x1915 (- (+ x1435 x4020) x2348)) (x4175 x1435)))
(define-fun x219 ((x1435 Int)) Int (ite (= x1435 x1506) x1199 (x1103 x1435)))
(define-fun x4401 ((x1435 Int)) Int (ite (= x3272 x1435) x1359 (x219 x1435)))
(define-fun x525 ((x1435 Int)) Int (ite (and (> (+ x862 x1359) x1435) (>= x1435 x862)) (x59 (- (+ x3353 x1435) x862)) (x4401 x1435)))
(define-fun x2969 ((x1435 Int)) Int (ite (= x2097 x1435) 0 (x525 x1435)))
(define-fun x501 ((x1435 Int)) Int (ite x3227 (x4755 x1435) (x3223 x1435)))
(define-fun x1297 ((x1435 Int)) Int (ite (= x1435 x3304) x4238 (x501 x1435)))
(define-fun x1475 ((x1435 Int)) Int (ite (= x1435 x2081) x3428 (x1297 x1435)))
(define-fun x1654 ((x1435 Int)) Int (ite (= x1435 x3308) 192 (x1475 x1435)))
(define-fun x1519 ((x1435 Int)) Int (ite (= x1435 x3873) x4775 (x1654 x1435)))
(define-fun x3971 ((x1435 Int)) Int (ite (and (< x1435 (+ x3881 x4775)) (<= x3881 x1435)) (x3388 (- (+ x1435 x1515) x3881)) (x1519 x1435)))
(define-fun x3355 ((x1435 Int)) Int (ite (= x1313 x1435) x1052 (x3971 x1435)))
(define-fun x518 ((x1435 Int)) Int (ite (= x1435 x1934) x3589 (x3355 x1435)))
(define-fun x4573 ((x1435 Int)) Int (ite (= x980 x1435) x771 (x518 x1435)))
(define-fun x4544 ((x1435 Int)) Int (ite (and (<= x3375 x1435) (> (+ x3375 x771) x1435)) (x1968 (- (+ x2738 x1435) x3375)) (x4573 x1435)))
(define-fun x1069 ((x1435 Int)) Int (ite (= x1435 x4701) x462 (x4544 x1435)))
(define-fun x4343 ((x1435 Int)) Int (ite (= x14 x1435) x557 (x1069 x1435)))
(define-fun x1410 ((x1435 Int)) Int (ite (= x1435 x174) x1840 (x4343 x1435)))
(define-fun x679 ((x1435 Int)) Int (ite (and (>= x1435 x1860) (< x1435 (+ x1840 x1860))) (x1915 (- (+ x4508 x1435) x1860)) (x1410 x1435)))
(define-fun x3565 ((x1435 Int)) Int (ite (= x4837 x1435) x2057 (x679 x1435)))
(define-fun x2773 ((x1435 Int)) Int (ite (= x2266 x1435) x3100 (x3565 x1435)))
(define-fun x720 ((x1435 Int)) Int (ite (and (> (+ x3100 x2345) x1435) (>= x1435 x2345)) (x59 (- (+ x180 x1435) x2345)) (x2773 x1435)))
(define-fun x1456 ((x1435 Int)) Int (ite (= x1435 x4791) 0 (x720 x1435)))
(define-fun x4500 ((x1435 Int)) Int (ite (= x1435 x959) x1141 (x1547 x1435)))
(define-fun x2098 ((x1435 Int)) Int (x1732 x1435))
(define-fun x2010 ((x1435 Int)) Int (ite (= x1435 128) x4364 (x4609 x1435)))
(assert (x2609 x2591))
(assert (= (and x4263 x1681) x981))
(assert (x2609 x1677))
(assert (= x4713 (and x3421 x4386)))
(assert (x2609 x3767))
(assert (= (and x4097 x2074) x4067))
(assert (= (x2463 (x428 64 x1365 5)) 5))
(assert (x2085 x3907))
(assert (= x692 (or x2844 x2441)))
(assert (x2609 x3995))
(assert (= x3835 (x753 (x2644 x2973 x102 x696 x1947 x828 x3835))))
(assert (x2609 x1382))
(assert (x611 x3674))
(assert (x2609 x1528))
(assert (x2609 x3064))
(assert (= x4554 (and x2014 x3630)))
(assert (x2609 x1777))
(assert (x2609 x508))
(assert (x2609 x867))
(assert (x2609 x3208))
(assert (x2609 x2704))
(assert (= false x3869))
(assert (= (and (not x1601) x249) x639))
(assert (x2609 x1501))
(assert (x2609 x4000))
(assert (= (and (not x705) x54) x754))
(assert (x2609 x4795))
(assert (x2609 x2461))
(assert (= x3515 (and x4621 x2832)))
(assert (x2609 x1626))
(assert (x2609 x1770))
(assert (x2609 x1089))
(assert (= (or x4719 x4377) x2668))
(assert (x2609 x3626))
(assert (= x1334 (and x3472 x1488)))
(assert (x2609 x4730))
(assert (x2609 x1490))
(assert (= x3472 (and (not x858) x4691)))
(assert (x2609 x2535))
(assert (= x1270 (and x3443 x1024)))
(assert (= x4762 (x2463 (x3663 x2764 x1593 x4762 x252))))
(assert (= x279 (and x1377 (not x4397))))
(assert (= (and x3236 x4753) x4196))
(assert (x2609 x1263))
(assert (x2609 x1082))
(assert (= x3358 (and x4511 (not x667))))
(assert (x2609 x3277))
(assert (x2609 x2470))
(assert (x2609 x4796))
(assert (x4077 12884902532))
(assert (x2574 (ite (> x4174 18446744073709551615) 1 0)))
(assert (x2609 x2282))
(assert (x2609 x673))
(assert (x2609 x2970))
(assert (x2609 x3444))
(assert (= x3618 (and x881 x2809)))
(assert (= (or (and x884 (not x1332)) (and x2520 (not x4495)) (and (not x4373) x3424)) x4742))
(assert (= (or x1057 x192) x3226))
(assert (x2609 x3819))
(assert (= (and x2682 x2924) x4053))
(assert (x4077 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x1618 10000) (= 0 (x4767 x1618))))
(assert (x2609 x2987))
(assert (x2609 x3202))
(assert (x2609 x3136))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639872) 0))
(assert (x2609 x4337))
(assert (x2609 x3294))
(assert (x2609 x4020))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039457584007906687188802)))
(assert (x2609 x3562))
(assert (x2609 x1632))
(assert (x2609 x3907))
(assert (x611 x3959))
(assert (x2609 x3781))
(assert (= (x753 (x2644 x2764 x365 x3808 x3727 x651 x1986)) x1986))
(assert (x2609 x1790))
(assert (x1608 x1391))
(assert (= (and x1270 x999) x3300))
(assert (x2609 x2855))
(assert (x2609 x4577))
(assert (x1276 (x2900 x290 x464 x2784)))
(assert (x4077 18446744073709551612))
(assert (x2609 x2162))
(assert (x2609 x3959))
(assert (= x1674 (and x1919 (not x3800))))
(assert (x2609 x1857))
(assert (x2609 x407))
(assert (x2609 x2205))
(assert (= (x4767 6442451295) 0))
(assert (x2609 x905))
(assert (x2609 x2727))
(assert (x2609 x2468))
(assert (x2609 x1959))
(assert (x2609 x580))
(assert (= x3328 (and (not x281) x3335)))
(assert (x2609 x3093))
(assert (x4077 3516931245))
(assert (x2609 x198))
(assert (= (or x754 x2790) x3796))
(assert (x2609 x1214))
(assert (=> (<= x3835 10000) (= (x4767 x3835) 0)))
(assert (x1608 x2493))
(assert (=> (<= x1983 10000) (= (x4767 x1983) 0)))
(assert (x2609 x532))
(assert (x2085 x47))
(assert (x2609 x4664))
(assert (x2609 x3221))
(assert (x2609 x4347))
(assert (x2609 x3043))
(assert (= x1063 (=> (and (= (or (and (> x1873 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3131)) (and (> x3131 x1873) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1873) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x4532) (= (x59 260) x1873) (= (- x2948 195) x3131)) (and (=> (and x4532 (and (= x2913 (x59 x4372)) (= x1728 (< 18446744073709551615 x2913)) (= x4372 (x2302 (+ 164 x1873))))) (and (=> x1728 x970) (=> (and (and (= x244 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x513) (> x1620 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x513)) (> x513 x1620)))) (= x1620 (x2361 (- x2948 x638))) (= (x2302 (+ 32 x4372)) x513) (= x638 (mod (* x2913 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x1728)) (and (=> x244 x970) (=> (and (and (= x667 (= 0 x2213)) (= x2213 (x59 164))) (not x244)) (and (=> x667 x3008) (=> (and (not x667) (and (= x2939 (= x3090 0)) (= (x428 64 x1365 5) x2308) (= 5 x375) (= x4199 (x428 64 x2787 x2308)) (= x3090 (x596 x4199)) (= (x59 228) x2787))) (and (=> (and x2939 (and (= (x59 228) x4660) (= (x1796 1461501637330902918203684832716283019655932542975 x1365) x3181) (= (x2302 (+ x4428 32)) x4634) (= (x2302 (+ 32 x1145)) x4428))) x3008) (=> (not x2939) x2095))))))))) (=> (not x4532) x970)))))
(assert (x2609 x726))
(assert (x2609 x3016))
(assert (x611 x374))
(assert (x2609 x1369))
(assert (x2609 x4747))
(assert (x2574 (ite (> 384 x2613) 1 0)))
(assert (x2609 x2673))
(assert (x2609 x310))
(assert (= (and x4304 x1689) x878))
(assert (x2609 x440))
(assert (x2609 x4026))
(assert (= (or (and x3860 x2330) (and x2566 x3395)) x4084))
(assert (x2609 x1393))
(assert (x2609 x4576))
(assert (x2609 x883))
(assert (= x2035 (or (and x984 x276) (and x744 x2867))))
(assert (x2609 x203))
(assert (x2609 x815))
(assert (= (x2729 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) x2184))
(assert (= (=> (and (= false x2512) (= x690 true) (= false x4449) (= x271 true) (= x690 x705)) x1298) x1117))
(assert (x2609 x1336))
(assert (< (x428 64 x4795 x4203) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x3491 10000) (= 0 (x4767 x3491))))
(assert (x1608 x3761))
(assert (= (and x3339 (not x4183)) x4665))
(assert (x2609 x1258))
(assert (x2609 x1359))
(assert (= (and x2394 (not x145)) x3825))
(assert (= (or x4642 x1834) x1167))
(assert (=> (<= x184 10000) (= 0 (x4767 x184))))
(assert (x2609 x2422))
(assert (x2609 x1859))
(assert (= (and x463 (not x3085)) x4502))
(assert (x2609 x3123))
(assert (= (x4767 18446744073709551615) 0))
(assert (= x3842 (=> (and (= true x4435) (= false x1858) (= x4235 false) (= x705 x4435) (= true x3838)) x1298)))
(assert (x2609 x3963))
(assert (x2609 x2318))
(assert (x2609 x1778))
(assert (x2609 x2921))
(assert (= x760 (or x3198 x1807)))
(assert (x2609 x4835))
(assert (x2609 x2517))
(assert (x2609 x370))
(assert (= (x4767 3516931245) 0))
(assert (=> (>= 10000 x2386) (= 0 (x4767 x2386))))
(assert (x2609 x1314))
(assert (= x2860 (or x75 x581)))
(assert (x2609 x2342))
(assert (x611 x99))
(assert (x2609 x4216))
(assert (x2609 x4658))
(assert (x2609 x1572))
(assert (> (x3663 x2973 x2908 x4722 x3122) 10000))
(assert (x2609 x2613))
(assert (x2609 x4656))
(assert (x2609 x1135))
(assert (x1276 (x2756 x1581 x2250)))
(assert (x2609 x2936))
(assert (x2609 x1571))
(assert (= (or (and (not x2939) x3358) (and x351 (not x3150))) x1329))
(assert (x2609 x134))
(assert (x2609 x2721))
(assert (x2609 x1146))
(assert (x2609 x2955))
(assert (= 64 (x2466 (x428 64 x4795 x4203))))
(assert (x2085 x3211))
(assert (x2085 x1119))
(assert (= (and x54 x705) x2790))
(assert (x2609 x4356))
(assert (x2609 x787))
(assert (x2609 x688))
(assert (x2609 x2481))
(assert (x2609 x3689))
(assert (= x2021 (and x3257 x1537)))
(assert (= (x2729 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x1744))
(assert (x2085 x2739))
(assert (x2609 x2089))
(assert (= x2842 (=> (and (= x3159 (not (> x2523 1))) (= x2523 (x3973 x3887))) (and x3159 x2599))))
(assert (= x832 true))
(assert (= x3258 (and x2084 x2744)))
(assert (x2609 x4639))
(assert (x2609 x4762))
(assert (x2609 x3933))
(assert (= (=> (and (= false x1631) (= x705 x319) (= true x1411) (= true x319) (= x4692 false)) x1298) x689))
(assert (= (x3739 x2764 x2259) (x4767 (x3739 x2764 x2259))))
(assert (x2085 x1605))
(assert (x2609 x286))
(assert (x4077 18446744073709551611))
(assert (= x2667 (and x1499 x4419)))
(assert (=> (<= x3413 10000) (= 0 (x4767 x3413))))
(assert (x2609 x1582))
(assert (= (x4767 4294967296) 0))
(assert (x2609 x3522))
(assert (x4077 879188153))
(assert (x2609 x3111))
(assert (x2609 x4608))
(assert (= x3775 (and (not x4622) x122)))
(assert (= (=> (and (= 1 x4357) (= x3384 (x1227 160)) (= x2188 (> x3288 0)) (= x3288 (x3973 x3887)) (= x3887 (x2893 288))) (and (=> (and (and (= x2150 (x3973 x3887)) (= x4622 (> x2150 0))) x2188) (and (=> (and x4622 (and (= x383 (x3973 x3887)) (= (> x383 0) x3798))) (and (=> (and (and (= (x1920 x2046) x2691) (= x4226 (x2302 (+ x3852 32))) (= x4010 (x2302 (+ x2046 32))) (= (x2343 x4010) x429) (= x3852 (x2302 (+ x4010 32))) (= x1522 (x2302 (+ x3887 32))) (= (x4188 x4226) x4378) (= x2046 (x270 x1522)) (= (x1796 1461501637330902918203684832716283019655932542975 x429) x1722) (= (x4797 x3852) x1282) (= x2749 (= 0 x4258)) (= x4258 (x1020 x1722))) x3798) (and (=> (and (= (> x2691 5) x3974) (not x2749)) (and (=> (and (= x326 (= 1 x2691)) (not x3974)) (and (=> (and (= (= (ite (< 0 x1282) 1 (ite (> x1282 0) 1 0)) 0) x2809) x326) (and (=> (not x2809) x4060) (=> (and (= x3782 (= 0 (ite (= 0 x4378) 1 (ite (= 0 x4378) 1 0)))) x2809) (and (=> (not x3782) x106) (=> (and x3782 (and (= x1365 x4715) (= x3573 x3148) (= x4126 x2791) (= x1865 x2250) (= (- x4539 x1396) x522) (>= x3573 0) (= (x1965 x4146 x3568) x4539) (= x3163 x2694) (= x1338 x1121) (<= x4539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1973 (x2756 x1581 x2250)) (= x429 x1000) (= x1349 x863) (= x1476 x4087) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1973) (>= x4539 0) (= x2659 x2462) (= x4795 x4684) (= x1349 x3700) (= x3573 (+ x1973 x2791)) (= x3449 x873) (= x2483 x2694) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x522) (= x949 x4715) (= x522 x414) (= x4146 x1000) (= x4684 x4254) (= x2975 x1000) (= x1497 x996) (= x1512 x4005) (= x1581 x1000) (= x1888 x1512) (= x1086 x576) (= x4217 x2637) (= x4087 x4079) (= x1338 x3326) (= x996 x1006) (= x4126 x1396) (<= 0 x1973) (= x1000 x2760) (= x2382 x4217) (= x481 x3449) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3573) (= x3384 x1865) (= x4126 x4378) (<= 0 x522) (= x2608 x1865) (= x4715 x3568) (= x4457 x576))) x2842))))) (=> (and (not x326) (and (>= 5 x2691) (= (= 2 x2691) x3257))) (and (=> (and x3257 (= (= 0 (ite (not (= x4378 1)) 1 (ite (not (= 1 x4378)) 1 0))) x227)) (and (=> (and (and (= x188 x1540) (= x1540 x4795) (= x1895 x965) (= x1888 x1342) (= x3570 x1880) (= x1497 x3645) (= x3700 x94) (= x1342 x4118) (= x2659 x4037) (= x3163 x3721) (= x2588 x1458) (= x1630 x4035) (= x1121 x1458) (= x3044 x4493) (= x301 x3645) (= x2697 x3743) (= x481 x3044) (= x94 x1070) (= x3067 x429) (= x1365 x1243) (= x4457 x1880) (= x1476 x3743) (= x2382 x4143) (= x4143 x715) (= x1895 x3384) (= x976 x3721) (= x1282 x1630) (= x3067 x3333)) x227) x2994) (=> (not x227) x3023))) (=> (and (= (= 3 x2691) x2246) (not x3257)) (and (=> (and x2246 (= (= (ite (= x4378 0) 1 (ite (= 0 x4378) 1 0)) 0) x610)) (and (=> (and (and (= x1121 x4514) (<= x3114 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1671) (= x2659 x1079) (= x481 x1760) (= x429 x1066) (= x4378 x2276) (= x2389 x1476) (= x3753 (x656 x695 x2782 x424)) (= x960 x3662) (= x3169 x1197) (= x1197 x2782) (= x2942 x2912) (= x4770 x4379) (= x4696 x1888) (= x2530 x1066) (<= x4584 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3384 x4379) (= x2336 x4584) (= x1197 x3286) (= x1518 x1375) (= x3163 x3192) (= x2821 x1066) (= (x682 x2530 x263 x1966) x1671) (= x1066 x4335) (= x4795 x3279) (= x1492 x2276) (= x306 x602) (= x4379 x424) (= x1518 x3700) (= x4514 x4546) (= x2915 x1365) (<= x3753 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2912 x2382) (= x3192 x2511) (= x1966 x2915) (= x3245 x3114) (= x2389 x3135) (= x1282 x1197) (<= 0 x3753) (<= 0 x1671) (= x4696 x2398) (= x3279 x3752) (= x1497 x602) (= (+ x3753 x2730) x4584) (= x1760 x123) (= x4457 x3662) (= x3114 (- x1671 x1492)) (= x1242 x2915) (<= 0 x3114) (>= x4584 0) (= x263 x1197) (= x695 x1066) (= x2276 x2730)) x610) x2994) (=> (not x610) x3097))) (=> (not x2246) x3931))))))) (=> x3974 x970))) (=> x2749 x4446))) (=> (not x3798) x2825))) (=> (not x4622) x2599))) (=> (not x2188) x2747))) x1766))
(assert (= x934 (=> (and (= false x1012) (= x601 x705) (= x601 true) (= x719 true) (= x4831 false)) x1298)))
(assert (= (and x1230 x2796) x2695))
(assert (x2609 x4704))
(assert (= (x4767 (x3739 x2973 x1434)) (x3739 x2973 x1434)))
(assert (x2609 x179))
(assert (x2609 x1707))
(assert (x2085 x2704))
(assert (= (and x1491 x3259) x3037))
(assert (=> (>= 10000 x2973) (= 0 (x4767 x2973))))
(assert (x2609 x2259))
(assert (x2609 x3847))
(assert (= x683 (=> (and (= true x1887) (= x2654 x705) (= x2654 true) (= x1657 false) (= false x859)) x1298)))
(assert (x2609 x1275))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x428 x2973 x3128 x1897)))
(assert (x2609 x1201))
(assert (x2609 x2349))
(assert (x2609 x1313))
(assert (= x1536 (and x1876 x685)))
(assert (x2609 x2849))
(assert (x2609 x2979))
(assert (x2609 x436))
(assert (= (and (not x4326) x612) x3329))
(assert (= x665 (or x2182 x2450)))
(assert (x2609 x4721))
(assert (= (x2644 x2973 x102 x696 x1947 x828 x3835) (x4767 (x2644 x2973 x102 x696 x1947 x828 x3835))))
(assert (x2609 x4765))
(assert (x2085 x4827))
(assert (x2609 x1186))
(assert (= x612 (and x2725 x1049)))
(assert (x2609 x664))
(assert (= x4691 (and (not x2867) x744)))
(assert (x2609 x2370))
(assert (x2609 x442))
(assert (x2609 x3172))
(assert (= x3443 (and x1601 x249)))
(assert (x2609 x4601))
(assert (= (x2463 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)) x4206))
(assert (x2609 x2377))
(assert (x2609 x1138))
(assert (x1608 x2349))
(assert (x2609 x3623))
(assert (x2609 x2215))
(assert (x2609 x982))
(assert (= (or x3039 x1622) x2618))
(assert (x2609 x1283))
(assert (x2609 x2080))
(assert (x2609 x108))
(assert (= (=> (and (= x537 false) (= x3299 x705) (= x3299 true) (= true x2622) (= x4654 false)) x1298) x844))
(assert (x2609 x839))
(assert (x2609 x2711))
(assert (x1276 (x4318 x3536 x389)))
(assert (= x1427 (and x2436 x4763)))
(assert (x2085 x821))
(assert (x2609 x409))
(assert (x2609 x3349))
(assert (x2609 x1161))
(assert (= x3170 (and x4499 (not x23))))
(assert (x2085 x303))
(assert (= x3504 (=> (and (= x705 x4072) (= true x4072) (= x4426 false) (= x661 false) (= true x556)) x1298)))
(assert (x2609 x2764))
(assert (x1608 x3995))
(assert (= x2275 (and x3074 x79)))
(assert (> (x428 64 x2787 x2308) 10000))
(assert (x2609 x1969))
(assert (= x1701 (and x130 (not x175))))
(assert (x2609 x774))
(assert (x2609 x174))
(assert (= x1933 (and x1123 x2646)))
(assert (x2609 x3637))
(assert (x2609 x4486))
(assert (x2609 x2918))
(assert (x2609 x1287))
(assert (= (and x4542 (not x1641)) x351))
(assert (= (or (and (not x3034) x3515) (and x3236 (not x4753)) (and (not x3040) x4196)) x2067))
(assert (= x4089 (and x3930 (not x936))))
(assert (x2609 x3947))
(assert (= (and x4032 x1043) x3441))
(assert (x2609 x1709))
(assert (x2085 x1164))
(assert (= x4760 x2581))
(assert (x1608 x4109))
(assert (x2609 x3485))
(assert (x2609 x2548))
(assert (= x4625 (=> (and (= x2548 (x2302 (+ x1203 32))) (= (x59 292) x3218) (= (x2302 (+ 32 x1432)) x1203) (= (x2302 (+ 32 x508)) x1432) (= (x59 324) x302) (= (not (> x4462 1)) x466)) (and (=> (= x4639 x4506) x85) x466))))
(assert (x2609 x3163))
(assert (x2609 x2198))
(assert (not (x4077 (x428 64 x2787 x2308))))
(assert (x2609 x4066))
(assert (x2609 x2871))
(assert (= x970 (=> (and (= x3233 x705) (= x4287 false) (= true x897) (= x3653 false) (= x3233 true)) x1298)))
(assert (x2085 x2410))
(assert (= x3904 (or (and x3472 (not x1488)) x279)))
(assert (x2609 x628))
(assert (=> (<= x2590 10000) (= 0 (x4767 x2590))))
(assert (x2609 x3609))
(assert (x2609 x3128))
(assert (x2609 x4352))
(assert (x2609 x1095))
(assert (x2609 x2351))
(assert (x2609 x363))
(assert (x2609 x3734))
(assert (= (x2463 (x428 x2973 x3128 x1897)) x1897))
(assert (x2609 x1623))
(assert (= (and (not x610) x807) x4377))
(assert (x2609 x3698))
(assert (x2609 x633))
(assert (x2609 x4174))
(assert (x2609 x1945))
(assert (x2609 x739))
(assert (x2609 x2812))
(assert (x2609 x2165))
(assert (x2609 x1240))
(assert (= (x3663 x2764 x1593 x4762 x252) (x4767 (x3663 x2764 x1593 x4762 x252))))
(assert (= x4498 (or x2860 (and x1499 (not x4419)))))
(assert (x2609 x4478))
(assert (= false x3084))
(assert (x2609 x3664))
(assert (x2609 x4135))
(assert (x2609 x196))
(assert (x4077 25769804868))
(assert (x2609 x2820))
(assert (x2609 x1551))
(assert (x2609 x3712))
(assert (x4077 18446744073709551355))
(assert (= x4533 (and x2453 (not x2497))))
(assert (> (x428 64 x956 4) 10000))
(assert (= x3883 (=> (and (= x557 (x2361 (- x174 x2081))) (= (x2302 (+ x980 32)) x3375) (= x2235 (x2302 (+ 32 x3912))) (= (x4585 x3912) x3978) (= (x2302 (+ 32 x1934)) x4701) (= x3304 (x2302 (+ 32 x2223))) (= (x2302 (+ 32 x1313)) x1934) (= (x2302 (+ 32 x2081)) x3308) (= (x2302 (+ x4775 31)) x467) (= x771 (x4452 x516)) (= x4787 (x2302 (+ 31 x3100))) (= (x2361 (- x980 x2081)) x3589) (= x1969 (x1020 x3413)) (= (x178 x4730) x3496) (= x2918 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x442)) (= (x2302 (+ 32 x918)) x380) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x467) x3134) (= x4281 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4787)) (= (x2302 (+ 32 x4701)) x14) (= x3652 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4463)) (= (= x1969 0) x3711) (= (x2361 (- x2266 x4114)) x2057) (= x2266 (x2302 (+ x1860 x2918))) (= (x294 x1801) x1840) (= (x2302 (+ x1801 32)) x4508) (= (x2302 (+ x3881 x3134)) x980) (= (x2302 (+ x3308 32)) x1313) (= (x2302 (+ 31 x1840)) x442) (= (x3322 x3978) x4775) (= (x2302 (+ x2345 x4281)) x896) (= x1801 (x232 x1058)) (= (x1796 1461501637330902918203684832716283019655932542975 x3496) x3428) (= (x1796 1461501637330902918203684832716283019655932542975 x1080) x1052) (= (x1035 x2235) x1080) (= x1515 (x2302 (+ 32 x3978))) (= (x2302 (+ x771 31)) x4463) (= x4730 (x3188 352)) (= (x2302 (+ 32 x3873)) x3881) (= x3873 (x2302 (+ 192 x2081))) (= x174 (x2302 (+ x3375 x3652))) (= x3912 (x2302 (+ x4730 32))) (= (x2302 (+ x2266 32)) x2345) (= (x2302 (+ x2235 32)) x918) (= x1860 (x2302 (+ 32 x174))) (= x516 (x4189 x918)) (= (x2302 (+ x1900 32)) x4837) (= x4791 (x2302 (+ x3100 x2345))) (= x2410 (x11 x380)) (= (x2361 (- x2081 x4119)) x4238) (= (x2361 (- x896 x4639)) x3508) (= (x2302 (+ x516 32)) x2738) (= (x2302 (+ 32 x380)) x1058) (= x462 (x1796 1461501637330902918203684832716283019655932542975 x2410))) (and (=> (and (not x3711) (and (or (and (not x1097) (= x2303 x1770)) (and (and (= x2303 1) (>= 4294967295 x4008)) x1097)) (= (< 0 x1770) x1097))) x4480) (=> x3711 x4759)))))
(assert (= (and x3915 (not x244)) x4511))
(assert (= (=> (and (= true x535) (= x535 x705) (= false x2769) (= true x3160) (= x533 false)) x1298) x3857))
(assert (x2085 x1369))
(assert (= (or x2685 x2751) x1979))
(assert (x2609 x4741))
(assert (x2609 x1395))
(assert (=> (>= 10000 x3808) (= 0 (x4767 x3808))))
(assert (not (x4077 (x428 x2764 x3345 x498))))
(assert (x2609 x3852))
(assert (x2609 x2930))
(assert (x2609 x3184))
(assert (x2609 x4071))
(assert (= x365 (x1486 (x2644 x2764 x365 x3808 x3727 x651 x1986))))
(assert (x2609 x3412))
(assert (= (=> (= (= x2638 0) x3479) (and (=> (and (and (= x4576 (x3237 x750)) (= x4553 (< 0 x4576)) (= 0 x3885) (= x750 (x2910 320))) x3479) (and (=> (and x4553 (and (= x477 (< 0 x426)) (= x426 (x3237 x750)))) (and (=> (and x477 (and (= (> x1017 0) x2683) (= x1017 (x3237 x750)))) (and (=> (and x2683 (and (= x4295 (x2302 (+ 32 x338))) (= x1523 (x1207 x2132)) (= x877 (x1796 1461501637330902918203684832716283019655932542975 x1785)) (= x4268 (x2302 (+ 32 x750))) (= (x1234 x4268) x338) (= (= x4305 0) x454) (= x4305 (x1020 x877)) (= (x1428 x3146) x3123) (= (x2302 (+ 32 x3146)) x2132) (= (x2302 (+ x4295 32)) x3146) (= (x1675 x4295) x1785) (= (x2290 x338) x4200))) (and (=> x454 x4446) (=> (and (not x454) (= x175 (< 5 x4200))) (and (=> (and (= x2947 (= 1 x4200)) (not x175)) (and (=> (and x2947 (= x814 (= (ite (> x3123 0) 0 (ite (< 0 x3123) 1 0)) 0))) (and (=> (and (= (= 0 (ite (= 0 x1523) 0 (ite (= 0 x1523) 1 0))) x3622) x814) (and (=> (and x3622 (and (<= 0 x2800) (= x3120 x1476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1993) (= (+ x1023 x320) x1993) (= x3700 x2411) (= x3109 x4198) (= x2242 x1523) (<= 0 x1993) (= x2603 x4795) (= x320 (x2776 x3098 x2505)) (= x1047 x3840) (= x3474 x4457) (= x2516 x3543) (= x1802 x2242) (= x560 x136) (= x1888 x2234) (= x3840 x1365) (= x2411 x2327) (<= x1267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x924 x2382) (= x971 x1497) (= x2505 x3840) (= x1023 x2242) (= x4822 x3163) (= x136 x1830) (= x2742 x2800) (= x924 x3786) (= x1787 x1016) (= x1787 x481) (= (- x1267 x1802) x2800) (= x4198 x1121) (<= x320 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2516 x2904) (= x4516 x3474) (= x2516 x1480) (= x1267 (x529 x560 x1480)) (= x1921 x2234) (= x136 x177) (= x2659 x1038) (= x3120 x887) (= x971 x2982) (>= x320 0) (= x1785 x136) (>= x1267 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2800) (= x1180 x4822) (= x1993 x1849) (= x3098 x136) (= x2603 x2407))) x3489) (=> (not x3622) x106))) (=> (not x814) x4060))) (=> (and (not x2947) (and (= (= 2 x4200) x2497) (<= x4200 5))) (and (=> (and (= (= 0 (ite (not (= 1 x1523)) 0 (ite (not (= 1 x1523)) 1 0))) x269) x2497) (and (=> (and (and (= x2959 x3314) (= x4593 x1365) (= x1160 x1288) (= x657 x3123) (= x481 x2115) (= x3834 x1888) (= x4484 x3163) (= x4457 x978) (= x1121 x2329) (= x4412 x361) (= x4593 x2333) (= x3486 x4391) (= x2380 x2115) (= x71 x3543) (= x438 x657) (= x4484 x1664) (= x324 x978) (= x1497 x1288) (= x84 x2329) (= x1603 x1785) (= x2659 x4651) (= x4795 x4391) (= x3834 x913) (= x4412 x1476) (= x116 x3557) (= x2311 x1603) (= x3700 x3314) (= x2382 x116)) x269) x4202) (=> (not x269) x3023))) (=> (and (not x2497) (= x2547 (= x4200 3))) (and (=> (and x2547 (= x3994 (= (ite (= x1523 0) 0 (ite (= 0 x1523) 1 0)) 0))) (and (=> (not x3994) x3097) (=> (and x3994 (and (= x2888 x3470) (= x2137 x759) (= x386 x1319) (= (- x3348 x1655) x4587) (= x2992 x473) (= x791 x1450) (= x1450 x1001) (= x1854 x1497) (= x1730 x2039) (= x2823 x2706) (= x4342 x2295) (= x1888 x4342) (= x3143 x2659) (= x4457 x1998) (<= 0 x4671) (= x2039 x3543) (= x473 x1121) (= x3306 x1686) (<= x546 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1450 x1785) (<= x4587 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2706 x1655) (= (x531 x791 x2888 x1686) x4671) (= x3871 x3470) (= x2274 x4795) (<= 0 x546) (<= 0 x3348) (= x2301 x3163) (= x2301 x4387) (= x3470 x168) (= x678 x3306) (= x2274 x2315) (= x452 x1450) (= x1998 x4552) (= x3306 x1365) (<= x4671 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1181 x1450) (= x3348 (x1159 x1181 x168 x3337)) (= x3700 x3667) (= x4557 x3667) (= x4587 x4460) (= x3123 x3470) (= x1489 x3470) (= x2706 x1523) (= x4201 x546) (>= x4587 0) (= x2255 x2208) (= x2382 x2208) (= x759 x1476) (= (+ x2823 x4671) x546) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3348) (= x3337 x2039) (= x1854 x1507) (= x386 x481))) x4202))) (=> (not x2547) x3931))))))) (=> x175 x970))))) (=> (not x2683) x2825))) (=> (not x477) x942))) (=> (not x4553) x2747))) (=> (and (not x3479) (and (= x2510 (x2910 320)) (= (x3237 x2510) x1095) (= x2879 (> x1095 18446744073709551615)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2286) (>= x3523 1) (= x3523 (x2302 (+ x2286 x1171))) (> x3523 x2286) (= x2556 (= x1095 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2286) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2286) (= x1171 (x2302 (+ 32 x4319))) (= x4319 (mod (* x1095 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x2879)) (and (=> (and (and (= (x2361 (- x1095 1)) x2269) (<= x3523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x3523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2302 (+ 128 x3523)) x1018) (= x3848 (x2302 (+ x2286 32))) (<= x3523 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2302 (+ x110 32)) x2528) (= (x2302 (+ x3544 32)) x110) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x3523)) (= x789 (x2302 (+ x3848 32))) (= x238 (= x1095 1)) (> x1018 x3523) (not (= x3523 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (not (= x3523 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x3544 (x2302 (+ x3523 32)))) (not x2556)) (and (=> (and (not x238) (and (<= x1018 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2302 (+ 128 x1018)) x2029) (= (= x2269 1) x1124) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1018)) (= x4337 (x2302 (+ 32 x1569))) (= x1569 (x2302 (+ 32 x1018))) (<= x1018 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2302 (+ x4337 32)) x3608) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1018) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1018)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1018)) (> x2029 x1018))) (and (=> (not x1124) x3869) (=> (and (= x2029 x1572) x1124) x3038))) (=> (and (= x1572 x1018) x238) x3038))) (=> (and (= x722 x3523) x2556) x3267))) (=> x2879 x970))))) x2599))
(assert (= x520 (and x4752 x3119)))
(assert (= (and x571 x3232) x4083))
(assert (x2609 x1814))
(assert (= x3845 (and x3201 x915)))
(assert (= x3768 (and (not x2735) x2559)))
(assert (= (x753 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) x4260))
(assert (x2574 (ite (< 18446744073709551615 x1140) 1 0)))
(assert (x2609 x3713))
(assert (= x2490 x2633))
(assert (= x3717 (or x981 x208)))
(assert (x2609 x2094))
(assert (= (x4767 (x428 64 x3543 5)) (x428 64 x3543 5)))
(assert (x2369 (ite (> x3992 18446744073709551615) 1 0) (ite (> x1804 x3992) 1 0)))
(assert (x2609 x3540))
(assert (x2609 x4775))
(assert (x2609 x4181))
(assert (= x82 (or x4290 x627 x3904 x3328)))
(assert (x2609 x3075))
(assert (= (and x2491 (not x1765)) x4234))
(assert (x2609 x2119))
(assert (x2609 x3229))
(assert (x2574 (ite (< 18446744073709551615 x2613) 1 0)))
(assert (x2609 x4440))
(assert (x2609 x3594))
(assert (x2609 x4563))
(assert (= x144 (and (not x1379) x1768)))
(assert (x2609 x2129))
(assert (= x285 (and x3424 x4373)))
(assert (= x226 (and x2667 x1990)))
(assert (x2609 x3772))
(assert (x2609 x1781))
(assert (x2609 x2286))
(assert (x2609 x2626))
(assert (x2609 x1696))
(assert (= (=> (and (and (<= x4049 4294967295) (<= x1323 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2288) (= x169 (> (x1020 x2659) 0)) (>= 12884902532 x3807) (>= 1461501637330902918203684832716283019655932542975 x483) (>= x4098 0) (<= 0 x4339) (>= x299 0) (= true x1821) (<= 0 x1898) (<= x499 4294967295) (<= 0 x606) (<= 0 x3888) (>= x2568 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835) (= x586 0) (<= x1098 1461501637330902918203684832716283019655932542975) (= x21 0) (<= x606 1461501637330902918203684832716283019655932542975) (<= x299 1461501637330902918203684832716283019655932542975) (<= 0 x2602) (<= 0 x4824) (>= x3517 0) (>= 1461501637330902918203684832716283019655932542975 x3517) (>= 1461501637330902918203684832716283019655932542975 x4422) (>= x3807 644) (<= 0 x1220) (<= 0 x3699) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4165) (= x2390 0) (= 0 x2554) (>= 1461501637330902918203684832716283019655932542975 x2568) (<= 0 x1306) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2371) (<= x1306 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x848) (<= 0 x1280) (<= x1136 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4771 1461501637330902918203684832716283019655932542975) (<= 1 x4422) (= x2560 0) (<= 0 x3029) (>= x2288 0) (<= 0 x835) (<= x2602 1461501637330902918203684832716283019655932542975) x4050 (>= 1461501637330902918203684832716283019655932542975 x1898) (<= x2659 1461501637330902918203684832716283019655932542975) (<= 1 x2659) (>= 4294967295 x1386) (= x3693 true) (= 32 x325) (<= 0 x848) x747 (<= x793 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1136 0) (<= 0 x793) (not (= x1323 x4422)) (>= 1461501637330902918203684832716283019655932542975 x3029) (= (< 0 (x1020 x1323)) x4050) (<= 0 x483) (= 0 x4595) (<= 0 x1098) (not (= x1323 x2659)) (>= 1461501637330902918203684832716283019655932542975 x4098) x169 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1220) (<= 0 x4407) (= x747 (> (x1020 x4422) 0)) (= x3571 0) (= true x3500) (not (= x2659 x4422)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3699) (>= x1954 0) (= 0 x4214) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1877) (>= 1461501637330902918203684832716283019655932542975 x4824) (>= 1461501637330902918203684832716283019655932542975 x3888) (>= 1461501637330902918203684832716283019655932542975 x1283) (<= x1954 1461501637330902918203684832716283019655932542975) (<= x4407 1461501637330902918203684832716283019655932542975) (<= 0 x4165) (= x4015 true) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1280) (<= 0 x2371) (<= 0 x1877) (<= 1 x1323) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4339)) (and (and (and (and (= x4407 x559) (and (= x1758 x299) (and (and (and (= x786 (+ 31 x155)) (= x4839 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3882)) (= (+ 32 x155) x1169) (>= 1461501637330902918203684832716283019655932542975 x3302) (= x871 false) (<= 1 x4839) (= (x4513 196) x2282) (>= 12884902532 x2419) (= (x4513 100) x51) (= x614 (* 32 x1482)) (<= x51 1461501637330902918203684832716283019655932542975) (= x1441 (> x2419 x1169)) (= x2673 (- x3310 356)) (= (* x391 128) x2474) (<= 0 x1482) (= x2419 (+ x1169 x2474)) (= x3732 (+ 32 x3310)) (>= 134217728 x1482) (= x2563 (+ 32 x3310 x614)) (= (x4513 164) x3136) (= x1178 (x4513 132)) (= x2032 (+ x4839 384)) (>= 1461501637330902918203684832716283019655932542975 x1178) (= (x4513 x155) x391) (= x3116 (x1020 x2659)) (<= x4 x614) (>= 12884902464 x2282) (<= x4127 127) (<= x4127 127) (= (* x391 32) x1498) (= x147 false) (= x1954 x3559) (> x4 x3042) (= 1622688491 x2328) (>= 1461501637330902918203684832716283019655932542975 x3136) (not (< x3807 x2419)) (= x155 (+ 36 x2282)) (>= 3221225663 x4839) (= x3882 (+ x1498 63)) (>= x2419 68) (= x2326 (x4513 36)) (= x3042 (* 32 (- x1482 1))) (>= 100663300 x391) (= x4 x4049) (<= 1 x3116) (= x2563 x3807) (< x786 x3807) (= (x4513 68) x3302)) (and (= x86 (* (- x952 1) 32)) (= x1098 x1174) (= x499 x166) (>= x952 0) (= (+ x2073 32 x3585) x3310) (<= x952 134217728) (= (* 32 x952) x3585) (= x385 (- x2073 356)) (< x86 x166) (= x671 (+ 32 x2073)) (>= x3585 x166))) (and (>= x3378 0) (= x2202 x2288) (= (+ 580 x1300) x2073) (< x4431 x348) (>= 134217728 x3378) (<= x348 x1300) (= x348 x1386) (= (* 32 (- x3378 1)) x4431) (= x1300 (* x3378 32)))))) (= x1835 x606)) (= x2602 x2885)) (= x793 x3202))) (and (=> (and (= x2032 x1524) (not x1441)) x4193) (=> x1441 x1850))) x1672))
(assert (x2609 x1183))
(assert (x1608 x3512))
(assert (x4077 18446744073709551327))
(assert (x2085 x3054))
(assert (not (x4077 (x2644 x2764 x365 x3808 x3727 x651 x1986))))
(assert (= (and x3242 (not x587)) x2801))
(assert (= x3578 (and x1216 (not x2565))))
(assert (x2609 x1739))
(assert (= (or x2536 x940) x600))
(assert (x2609 x3211))
(assert (x2609 x4385))
(assert (x2609 x1958))
(assert (x2085 x2651))
(assert (x2609 x2848))
(assert (= (and (not x3671) x4232) x3941))
(assert (x2609 x3747))
(assert (x2609 x541))
(assert (x2609 x3207))
(assert (= (x4096 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) x3774))
(assert (x2609 x4265))
(assert (< (x428 64 x3629 4) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2609 x1828))
(assert (x2609 x822))
(assert (x2609 x1776))
(assert (x2609 x1687))
(assert (= x3242 (and x32 x1670)))
(assert (x2609 x4328))
(assert (x2609 x734))
(assert (x2085 x2743))
(assert (x2609 x2597))
(assert (= (and x2111 (not x1352)) x3984))
(assert (x4077 12884902464))
(assert (= (x4767 100663300) 0))
(assert (x2609 x676))
(assert (x2609 x2334))
(assert (x2609 x2477))
(assert (x1608 x904))
(assert (x2609 x731))
(assert (=> (<= x3483 10000) (= 0 (x4767 x3483))))
(assert (x2609 x2564))
(assert (x611 x3623))
(assert (x2609 x1723))
(assert (x2609 x3725))
(assert (x2609 x1315))
(assert (x2609 x4330))
(assert (=> (>= 10000 x1947) (= 0 (x4767 x1947))))
(assert (x2609 x636))
(assert (x4077 3221225663))
(assert (x1608 x3558))
(assert (x2609 x3352))
(assert (x2609 x4398))
(assert (x2609 x471))
(assert (= (and (not x4752) x3119) x2687))
(assert (= x1992 (and x2264 (not x3108))))
(assert (x2609 x2586))
(assert (= (and (not x2744) x2084) x3011))
(assert (x2609 x2223))
(assert (x2609 x4764))
(assert (= (and x1936 (not x1971)) x1839))
(assert (x2609 x2920))
(assert (x2085 x27))
(assert (x2609 x722))
(assert (= 0 (x4767 25769804352)))
(assert (x2609 x3616))
(assert (= (x2729 (x2644 x2764 x365 x3808 x3727 x651 x1986)) x651))
(assert (x2609 x1906))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639903) 0))
(assert (x2609 x61))
(assert (x2609 x1568))
(assert (= x3056 (and x1167 x297)))
(assert (x2609 x4049))
(assert (x2609 x2679))
(assert (x2609 x2818))
(assert (= (or x149 x3170) x4517))
(assert (x2609 x1055))
(assert (x2609 x4836))
(assert (x2609 x1164))
(assert (= (x2463 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)) x459))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639809)))
(assert (= x1194 (and x4805 (not x405))))
(assert (x1608 x3757))
(assert (x4077 18446744073709551357))
(assert (= x4737 (and x4554 x4136)))
(assert (x2609 x4134))
(assert (x2609 x539))
(assert (x2609 x1454))
(assert (x2609 x3090))
(assert (x2609 x457))
(assert (x2085 x583))
(assert (< 10000 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)))
(assert (x2609 x1436))
(assert (x2369 (ite (< 18446744073709551615 x1140) 1 0) (ite (< x1140 x3992) 1 0)))
(assert (x2609 x1588))
(assert (x2085 x4109))
(assert (x2609 x3491))
(assert (= (x4767 134217728) 0))
(assert (= (and x3795 (not x563)) x4001))
(assert (= x894 (or x4297 x3446)))
(assert (x2609 x1065))
(assert (x2609 x877))
(assert (x2609 x247))
(assert (x611 x836))
(assert (x2609 x1731))
(assert (x2609 x810))
(assert (x2609 x2200))
(assert (= (=> (and (<= x3234 18446744082299486532) (>= 18446744073709551615 x4065) (> x861 x3349) (>= x296 100) (>= 18446744073709551613 x1960) (= x3145 (+ 32 x296)) (= x3349 (x2302 (+ x1960 64))) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4109) x4655) (>= 18446744073709551613 x1960) (>= 18446744073709551615 x3702) (= (+ 31 x296) x1578) (>= 18446744082299486496 x4125) (= x3702 (x2245 x2737)) (= x3356 (+ 32 x3234)) (= (not (< (+ x2737 32) x992)) x2261) (>= 18446744082299486564 x296) (= (x2302 (+ 32 x1960)) x4286) (= (+ x2941 x3762) x3391) (or (>= 18446744073709551550 x1960) (>= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639873)) (<= x4257 18446744082299486596) (< x1578 x39) (< x1960 x3349) (<= x2941 18446744073709551615) (= x2726 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1963)) (not (< x861 x3349)) (= x4065 (x2245 x3356)) (>= 18446744073709551615 x861) (<= 2 x861) (or (>= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639873) (<= x1960 18446744073709551550)) (= (+ x3702 x2737) x3234) (= (+ x2941 31) x1963) (>= 18446744073709551614 x1960) (>= x3234 100) (= x296 (+ x4065 x3234)) (= (x2245 x3234) x1991) (= x4257 (+ x3145 x2941)) (>= 18446744073709551614 x1960) (<= 132 x4257) (not (< x39 x4257)) (= (+ 63 x2726) x4109) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639873 x1960) (<= x1960 18446744073709551550)) (= (+ x3349 32) x3762) (<= x1960 18446744073709551613) (not (> x1960 x3349)) (= x4125 (x2361 (- x39 x3234))) (<= 64 x4125) (>= 18446744073709551614 x4655) (= (x2245 x296) x2941) (= x861 (+ x4655 x3349)) (<= x1991 1461501637330902918203684832716283019655932542975) (>= 18446744073709551614 x1960)) (and (=> (= x2999 x861) x3824) x2261)) x80))
(assert (x2609 x955))
(assert (= (and (not x2251) x4285) x3891))
(assert (x2085 x2018))
(assert (x2609 x2103))
(assert (x2609 x3278))
(assert (= x3417 (and x1029 x3438)))
(assert (x2085 x3055))
(assert (= 0 (x4767 4294967390)))
(assert (x2609 x1822))
(assert (x2609 x2297))
(assert (x2609 x2))
(assert (= (x4767 (x804 0)) (x804 0)))
(assert (x2609 x1984))
(assert (x2609 x39))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2644 x2973 x102 x696 x1947 x828 x3835)))
(assert (=> (<= x2659 10000) (= 0 (x4767 x2659))))
(assert (x2609 x3406))
(assert (x2085 x286))
(assert (= (or (and x2279 x4491) (and x1334 x1351)) x1128))
(assert (x2609 x4402))
(assert (x2609 x2743))
(assert (x2609 x3597))
(assert (x2085 x3543))
(assert (= (and x3196 x2676) x1166))
(assert (x2609 x3619))
(assert (x2609 x2294))
(assert (= x1298 (=> (or x705 (not x705)) x3948)))
(assert (x2609 x2354))
(assert (x2609 x3222))
(assert (= (and x57 (not x3195)) x1363))
(assert (x2085 x2988))
(assert (x2085 x397))
(assert (=> (>= 10000 x3429) (= (x4767 x3429) 0)))
(assert (x2609 x380))
(assert (x1608 x442))
(assert (x2609 x4257))
(assert (x2609 x605))
(assert (= x1139 (and x3952 x2527)))
(assert (x2609 x1281))
(assert (x2609 x426))
(assert (= (=> (and (= x882 true) (= false x3351) (= x1782 true) (= false x658) (= x1782 x705)) x1298) x3097))
(assert (x2609 x3977))
(assert (x2609 x808))
(assert (x2609 x2656))
(assert (= x1841 (=> (and (or (<= x761 18446744073709551487) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x761)) (>= 12884902464 x1477) (= (x4513 x3280) x1627) (= x2195 (x4513 x1923)) (= x2200 (+ 32 x3203)) (= (x2302 (+ 32 x1871)) x2632) (= (+ 32 x3280) x1923) (= x3203 (+ x1923 32)) (<= x761 18446744073709551614) (< x761 x1419) (>= 18446744073709551615 x761) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x761)) (= (x2361 (- x3807 x3280)) x1477) (>= 18446744073709551614 x761) (not (> x761 x1419)) (= (x4513 x3203) x1445) (>= 18446744073709551615 x761) (>= x3280 68) (= x3898 (not (> x4564 (+ 32 x2200)))) (>= 1461501637330902918203684832716283019655932542975 x2195) (= x1419 (x2302 (+ 128 x761))) (or (>= x761 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x761 18446744073709551487)) (= x2384 (x2302 (+ x761 32))) (= (x4513 x2200) x1794) (>= x1477 128) (>= 12884902404 x3280) (<= x1627 5) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x761) (= x1871 (x2302 (+ 32 x2384)))) (and (=> (= x3694 x1419) x1606) x3898))))
(assert (x2609 x4571))
(assert (x2609 x972))
(assert (= 0 (x4767 201326601)))
(assert (x2609 x2831))
(assert (x2609 x4457))
(assert (x2609 x16))
(assert (= 5 (x2463 (x428 64 x3543 5))))
(assert (= (and x3584 (not x2884)) x4225))
(assert (x2609 x3650))
(assert (x2609 x4316))
(assert (x611 x1962))
(assert (x2609 x467))
(assert (x2609 x256))
(assert (x2609 x4030))
(assert (= x1938 (=> (and (= (not (< x4021 x1591)) x3896) (= x3968 (x2302 (+ x3412 32))) (= (x2302 (+ x3946 32)) x4021) (= x3946 (x2302 (+ x2205 32))) (= (x59 x3946) x209) (= x948 (x2302 (+ x548 32))) (= (x2302 (+ 32 x3401)) x2205) (= (x2302 (+ 32 x3968)) x548) (= (x59 x2205) x2187)) (and x3896 (=> (= x2571 x4551) x3692)))))
(assert (x2609 x3927))
(assert (x2609 x419))
(assert (x2609 x2576))
(assert (= (x1486 (x428 64 x4795 x2048)) x4795))
(assert (x2609 x513))
(assert (x2609 x3967))
(assert (x2609 x4177))
(assert (x2609 x2701))
(assert (x2609 x3404))
(assert (=> (>= 10000 x2307) (= 0 (x4767 x2307))))
(assert (x2574 (ite (< x4506 x40) 1 0)))
(assert (= (x4767 25769804800) 0))
(assert (= x3561 x3537))
(assert (= x408 (=> (and (>= 18446744073709551615 x2951) (= x3175 (+ x2539 32)) (= (x910 x3175) x565) (> x2720 x2951) (<= x2688 25769804960) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2951)) (= x2945 (+ x3175 32)) (<= 128 x2688) (= (not (< (+ x584 32) x239)) x1299) (or (>= x2951 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x2951 18446744073709551487)) (<= 100 x2539) (= (x2302 (+ 128 x2951)) x2720) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2951) (or (>= 18446744073709551487 x2951) (>= x2951 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= x2607 (x910 x584)) (= (x910 x2945) x3415) (not (< x2720 x2951)) (>= 18446744073709551615 x2951) (>= 18446744073709551614 x2951) (<= x2951 18446744073709551614) (>= 1461501637330902918203684832716283019655932542975 x565) (= x2688 (x2361 (- x616 x2539))) (<= x4744 5) (= x4744 (x910 x2539)) (= x584 (+ x2945 32)) (>= 25769804932 x2539)) (and x1299 (=> (= x2460 x2720) x4688)))))
(assert (x2609 x2789))
(assert (x2609 x375))
(assert (= (or x2212 x4289) x3421))
(assert (x4077 18446744073709551354))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2529 x2973 x184 x2590 x4402 x1597)))
(assert (= x3773 (=> (and (= (not (= x653 x4795)) x2707) (= (x1796 1461501637330902918203684832716283019655932542975 x3543) x653)) (and (=> (and (= x3999 (ite x2707 1 0)) (not x2707)) x293) (=> (and (and (= x736 (x857 x2447)) (= x2048 (x428 64 x956 4)) (= (> x1186 2) x4249) (= (x428 64 x4795 x2048) x2447) (= x956 (x1796 1461501637330902918203684832716283019655932542975 x3543)) (= x1186 (x1796 255 x736))) x2707) (and (=> (and (not x4249) (= (ite (not (= 2 x1186)) 1 0) x3999)) x293) (=> x4249 x970)))))))
(assert (x2609 x2113))
(assert (= (or x926 (and x1216 x2565) (and x2385 x1464) (and x3239 x1418) (and x2732 (not x4532)) (and x1750 x920) x3769 x1212 (and x1379 x1768) (and x2543 x3448) x1061 (and x4099 x2879) (and x2966 (not x2402)) (and x3377 x1728) x3909 x1609 x2023 (and x749 x1695) (and x3265 x4801) x4089 x404 x3118 (and x2647 x2418) x78 (and x173 x2236) x3827 x4036 (and x2111 x1352) (and x3242 x587) x2383 x1474 (and x2753 x2934) (and x3915 x244) (and x3482 x4249) x1166 x4492 x3300 (and x1621 x1644) (and x3984 x3430) x3825 x4081 (and x2873 x394) x456 x728 x2734 x3920) x3068))
(assert (x2609 x1795))
(assert (x611 x2158))
(assert (x1276 (x2776 x3098 x2505)))
(assert (< 10000 (x2644 x2973 x102 x696 x1947 x828 x3835)))
(assert (x2609 x335))
(assert (x2609 x776))
(assert (x2085 x1724))
(assert (x2609 x43))
(assert (x2609 x4620))
(assert (x2609 x209))
(assert (x2609 x4220))
(assert (x2609 x1590))
(assert (x2609 x1407))
(assert (x2609 x4528))
(assert (x1608 x4827))
(assert (x2609 x1399))
(assert (x2609 x2691))
(assert (x2609 x4467))
(assert (x2609 x2265))
(assert (x2609 x4024))
(assert (x2609 x4615))
(assert (x2609 x1953))
(assert (x2609 x4645))
(assert (= 4 (x2463 (x428 64 x3629 4))))
(assert (= x3577 (or (and x3893 x4051) (and x1893 x4832))))
(assert (x2609 x4214))
(assert (x2085 x1896))
(assert (= x2388 (=> (and (= x1455 (x2893 288)) (= (x1796 1461501637330902918203684832716283019655932542975 x3623) x2128) (= (x2302 (+ 32 x4114)) x1900) (= x2379 (x1796 1461501637330902918203684832716283019655932542975 x2660)) (= (x2302 (+ 32 x2978)) x3343) (= x3960 (x3370 128)) (= (x3679 224) x4570) (= (x2361 (- x4119 x4114)) x4731) (= x2232 (x1796 1461501637330902918203684832716283019655932542975 x4570)) (= (x2302 (+ 32 x954)) x3923) (= (x2302 (+ x4119 256)) x264) (= x2009 (x1227 160)) (= (x3973 x1455) x1133) (= x4406 (x1796 1461501637330902918203684832716283019655932542975 x2009)) (= x3623 (x1981 256)) (= (x2302 (+ x1455 32)) x1395) (= x954 (x2302 (+ x4548 32))) (= x1244 (> x1133 0)) (= x2660 (x767 192)) (= x758 (x2302 (+ 32 x264))) (= (x2302 (+ x4119 32)) x2978) (= x4548 (x2302 (+ x3343 32)))) (and (=> (and x1244 (and (= x4656 (x1920 x644)) (= (< x4656 6) x2071) (= x644 (x270 x1395)))) (and (=> (not x2071) x1117) (=> x2071 x2185))) (=> (and (not x1244) (= x3216 x758)) x2839)))))
(assert (x2609 x498))
(assert (x2609 x4185))
(assert (x2609 x3316))
(assert (x2609 x1627))
(assert (x2609 x1341))
(assert (x2609 x1269))
(assert (x2609 x4619))
(assert (x4077 25769804192))
(assert (x2609 x3342))
(assert (=> (>= 10000 x3674) (= 0 (x4767 x3674))))
(assert (x2609 x3809))
(assert (x2609 x2757))
(assert (x2609 x1597))
(assert (=> (>= 10000 x2259) (= (x4767 x2259) 0)))
(assert (x2085 x1517))
(assert (= (and x3930 x936) x3850))
(assert (= x45 (and x3850 (not x3007))))
(assert (x2609 x4416))
(assert (x611 x2410))
(assert (= 0 (x4767 25769804868)))
(assert (< 10000 (x428 x2973 x3128 x1897)))
(assert (= (x753 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x2099))
(assert (x2085 x3623))
(assert (= x1689 (and x3195 x57)))
(assert (x1608 x27))
(assert (x2609 x3243))
(assert (= (and x512 x782) x249))
(assert (x2609 x2304))
(assert (= x4780 (or x3324 x3768 x1302 x4815)))
(assert (x2609 x154))
(assert (x2609 x3936))
(assert (x2609 x3849))
(assert (= x2048 (x2463 (x428 64 x4795 x2048))))
(assert (x2609 x892))
(assert (x2609 x12))
(assert (x2609 x3484))
(assert (x1608 x4410))
(assert (x2609 x2164))
(assert (x2609 x1178))
(assert (x2609 x1390))
(assert (x2609 x2968))
(assert (x2609 x983))
(assert (x2574 (ite (> x4265 18446744073709551615) 1 0)))
(assert (x2609 x4667))
(assert (x1608 x1963))
(assert (x2609 x2038))
(assert (x1608 x467))
(assert (x2609 x4428))
(assert (x2609 x1141))
(assert (x2609 x3152))
(assert (= (x2466 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)) x2764))
(assert (= (=> (and (= (> x1200 0) x1539) (= (x2302 (+ x3923 32)) x2223) (= x1200 (x3237 x2724)) (= x2665 (x2302 (+ 32 x2724))) (= x2724 (x2910 320)) (= x1263 (x2302 (+ 32 x3216))) (= x4309 (x2361 (- x3216 x4119)))) (and (=> (and (= x1263 x2081) (not x1539)) x3883) (=> (and x1539 (and (= (> 6 x4485) x2735) (= x4485 (x2290 x4071)) (= x4071 (x1234 x2665)))) (and (=> x2735 x4138) (=> (not x2735) x1117))))) x2839))
(assert (x2609 x1217))
(assert (x2609 x3356))
(assert (x2609 x4779))
(assert (= (=> (and (= (< 0 x3172) x745) (= x3172 (x3237 x2510))) (and (=> (not x745) x4846) (=> (and x745 (and (= (x3237 x2510) x3009) (= (> x3009 0) x911))) (and (=> (and (and (= x1401 (x2290 x995)) (= (x2302 (+ x2510 32)) x1314) (= x2796 (> x1401 5)) (= (x1234 x1314) x995)) x911) (and (=> (and (not x2796) (= (= x1401 1) x4432)) (and (=> (and x4432 (and (= (x1796 1461501637330902918203684832716283019655932542975 x921) x3491) (= (x428 64 x3491 3) x3615) (< x3688 x1487) (= x1984 (x3431 x3615)) (<= x3688 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2302 (+ x3688 64)) x1487) (<= x3688 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x4614 (x2479 x2286)) (not (= x3688 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (>= 309485009821345068724781055 x1867) (not (= x3688 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x1675 x2723) x921) (= (> x4614 0) x145) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3688) (>= 255 x1984) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x3688)) (= (x2302 (+ 32 x995)) x2723) (= x1867 (x3091 x3615)))) (and (=> (not x145) x970) (=> (and x145 (and (= x815 (x2302 (+ 32 x2286))) (= (x2302 (+ x2987 64)) x4606) (= x2604 (< 0 x4657)) (= (x3132 x815) x2987))) (and (=> (not x2604) x1967) (=> (and (and (= x636 (x2290 x995)) (= (x2302 (+ x2987 32)) x2087) (= x958 (x2302 (+ 32 x4606))) (= x99 (x1675 x2723)) (= (> x636 5) x1607) (= (x1796 1461501637330902918203684832716283019655932542975 x99) x1393)) x2604) (and (=> (and (>= 5 x636) (not x1607)) x1967) (=> (and (and (= x705 x2763) (= x3756 false) (= true x2763) (= x4112 true) (= false x3454)) x1607) x1298))))))) (=> (and (not x4432) (and (= x3521 x3688) (= 0 x1422))) x4802))) (=> (and (and (= false x1977) (= x705 x1033) (= true x1033) (= false x399) (= x4818 true)) x2796) x1298))) (=> (and (not x911) (and (= x1508 false) (= x4223 false) (= x3837 true) (= x3837 x705) (= x3929 true))) x1298))))) x2114))
(assert (x2609 x4744))
(assert (= (=> (and (= true x3651) (= true x340) (= false x1870) (= false x3801) (= x705 x3651)) x1298) x4218))
(assert (x2609 x1357))
(assert (x2609 x287))
(assert (x611 x3054))
(assert (= (or x1231 x3209) x289))
(assert (x2609 x1575))
(assert (not (x4077 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (x2609 x2360))
(assert (= (and (not x3766) x4067) x3769))
(assert (= x1049 (and (not x2647) x2418)))
(assert (x2609 x3550))
(assert (x2609 x1459))
(assert (x4077 56168211265741800405898417846466446431335698074001377101504018355951975268352))
(assert (= x3993 (or (and (not x275) x2946) (and (not x362) x4311))))
(assert (x2085 x3882))
(assert (x2085 x3715))
(assert (= (or (and x1824 (not x738)) (and (not x677) x737) (and (not x3397) x285)) x2844))
(assert (x2609 x3923))
(assert (= (and x2021 (not x227)) x1807))
(assert (x2609 x3954))
(assert (x2609 x3956))
(assert (x2609 x2978))
(assert (x2609 x534))
(assert (x2609 x2762))
(assert (x2609 x1431))
(assert (= x544 x4659))
(assert (x2609 x3483))
(assert (x2609 x876))
(assert (= (x951 (x2644 x2764 x365 x3808 x3727 x651 x1986)) x3727))
(assert (= (or x3891 x4219) x2944))
(assert (x2609 x1392))
(assert (x2609 x659))
(assert (x2609 x825))
(assert (x2609 x345))
(assert (x611 x3809))
(assert (x4077 201326596))
(assert (= (and x3672 x1373) x4122))
(assert (x2609 x3318))
(assert (= (x4767 2321842044) 0))
(assert (x2609 x2202))
(assert (= (=> (and (= (x2893 288) x4556) (= x72 (x3973 x4556)) (= x2743 (x3679 224)) (= (x2302 (+ 32 x1803)) x4279) (= (x2361 (- x3658 x1161)) x2358) (= (x1796 1461501637330902918203684832716283019655932542975 x2743) x2917) (= x2799 (x1227 160)) (= (x2302 (+ 32 x2304)) x1803) (= (x2302 (+ x3658 256)) x1836) (= (x2302 (+ x4556 32)) x977) (= x1551 (x2302 (+ x1836 32))) (= x3210 (x2302 (+ 32 x1161))) (= x923 (x3370 128)) (= (x2302 (+ x3658 32)) x2304) (= (x767 192) x4527) (= (x1796 1461501637330902918203684832716283019655932542975 x4527) x1600) (= (x2302 (+ x4279 32)) x1822) (= (x1981 256) x788) (= (x2302 (+ 32 x1822)) x4106) (= x2370 (x1796 1461501637330902918203684832716283019655932542975 x2799)) (= (x1796 1461501637330902918203684832716283019655932542975 x788) x2535) (= x1239 (< 0 x72))) (and (=> (and x1239 (and (= (< x2831 6) x1372) (= (x1920 x61) x2831) (= x61 (x270 x977)))) (and (=> (not x1372) x1117) (=> x1372 x4320))) (=> (and (not x1239) (= x4154 x1551)) x2592))) x4635))
(assert (x2609 x3069))
(assert (x2609 x1264))
(assert (= x1609 (and x3158 x3974)))
(assert (x2609 x1487))
(assert (= (x428 64 x4795 x4203) (x4767 (x428 64 x4795 x4203))))
(assert (x2609 x786))
(assert (not (x4077 (x428 64 x3629 4))))
(assert (x2609 x98))
(assert (= x4227 (and x1975 x238)))
(assert (x2609 x4652))
(assert (= x2023 (and (not x782) x512)))
(assert (x2609 x1985))
(assert (x2609 x4660))
(assert (x2609 x305))
(assert (x2609 x1282))
(assert (x2609 x4799))
(assert (x2609 x2552))
(assert (x2085 x3485))
(assert (x4077 18446744073709551163))
(assert (x1276 (x529 x560 x1480)))
(assert (x2609 x1030))
(assert (x2609 x3715))
(assert (x4077 4294967296))
(assert (x2085 x1406))
(assert (= (x4767 309485009821345068724781055) 0))
(assert (x2609 x3055))
(assert (x4077 12884902304))
(assert (x2609 x1801))
(assert (x2609 x4028))
(assert (= x1660 (or x4264 x2843)))
(assert (= (or (and (not x2725) x1049) (and x3578 (not x3426))) x4365))
(assert (x4077 4294967396))
(assert (x2609 x1748))
(assert (x2085 x2158))
(assert (x2609 x2102))
(assert (x1276 (x1159 x3032 x295 x182)))
(assert (x611 x47))
(assert (= x1212 (and x2047 x1596)))
(assert (x2609 x1578))
(assert (x2609 x2057))
(assert (x611 x179))
(assert (= x704 (=> (and (= true x2159) (= false x1856) (= true x2335) (= x2159 x705) (= false x2061)) x1298)))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639873)))
(assert (x2609 x3854))
(assert (= x2420 (and x3030 x2173)))
(assert (=> (<= x2362 10000) (= 0 (x4767 x2362))))
(assert (x2609 x387))
(assert (x2085 x4463))
(assert (= x3265 (or x3437 x833)))
(assert (x2609 x4210))
(assert (= x70 (or (and x4326 x612) (and x4611 x3531))))
(assert (x2609 x2340))
(assert (x611 x817))
(assert (= x1057 (and x898 x3994)))
(assert (= x626 (=> (and (and (and (and (and (and (and (= x606 x4347) (= x3117 (+ x1175 96))) (and (and (and (= x1146 (+ 32 x1026)) (= (+ x307 32) x439) (= (+ x439 192) x2524) (= x1137 (+ 160 x1175)) (= (+ 192 x1175) x3697) (= (x2361 (- x307 x1175)) x865) (= x307 (+ x1026 32)) (= (x2361 (- x439 x1175)) x3954) (= (x2361 (- x1026 x1175)) x4645) (= (+ x1175 224) x3313) (= x2190 x299) (= x3106 (+ x307 32))) (and (and (and (and (and (= x1497 x4165) (and (and (and (and (= x3700 x1220) (and (and (= x4457 x4098) (and (= x3163 x1877) (and (and (and (<= x1611 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1714) (= x3064 (x3646 x1618)) (<= x3004 127) (= x1618 x1306) (= x4325 (> x4462 18446744073709551615)) (= x1611 (+ x2803 x2856)) (= false x4375) (= x1714 (x1020 x2659)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2856 x2803)) (= x2283 (- x3064 x2803)) (= x3315 false) (= x4462 (x59 132)) (= x3080 x1611) (<= 0 x1611) (= x1152 879188153) (>= 127 x3004) (= (x2503 x2659) x2856)) (= x4165 x2803)) (= x3699 x481)))) (= x2382 x1280))) (= x1888 x1136)) (= x4339 x1476)) (= x483 x1121))) (= x4795 x1306)) (and (= (x2361 (- x902 x439)) x3325) (= x2905 false) (= x3610 (+ 160 x439)) (>= 134217728 x3724) (> x3593 x1195) (= x1954 x3862) (= (+ x902 32 x1250) x3462) (= x357 (+ 32 x902)) (= x4049 x3593) (= x1195 (* (- x3724 1) 32)) (>= x3724 0) (>= x1250 x3593) (= (* 32 x3724) x1250) (= x3462 x2948))) (and (<= x3590 x3071) (= x2847 x1098) (>= x1806 0) (= (x2361 (- x2552 x439)) x1357) (<= x1806 134217728) (= x3590 x499) (= x3071 (* 32 x1806)) (= (+ 32 x2552) x1767) (= (* (- x1806 1) 32) x2465) (= (+ x2552 x3071 32) x902) (< x2465 x3590) (= x16 (+ 128 x439)) (= x1082 (+ 96 x439)))) (and (<= 0 x4638) (= x3676 x2288) (= x4670 (* x4638 32)) (= x1937 (+ x2524 32)) (= (+ 64 x439) x3184) (= (* (- x4638 1) 32) x2431) (<= x4638 134217728) (<= x801 x4670) (= (+ x439 32) x2399) (= x2552 (+ x2524 32 x4670)) (> x801 x2431) (= x1386 x801) (= (x2361 (- x2524 x439)) x1449)))) (and (= x3076 x4407) (= x1500 (+ x1175 128))))) (and (= x1204 x2602) (= (+ 64 x1175) x431))) (and (= x1312 x793) (= (+ 32 x1175) x2455))) (and (= (- x1175 4) x1027) (= x827 x2540) (= x1026 (+ x1175 256)) (< x3235 x1366) (= x725 x4749) (= x4796 (+ 32 x1031)) (= (+ x1394 128) x3110) (= x4820 x1366) (= (* 32 (- x2932 1)) x3235) (= x3224 (x2361 (- x353 x1394))) (= (* x1173 32) x725) (= x1454 (+ x353 32)) (>= 576460752303423488 x1173) (>= x425 x1366) (= x855 (+ x1394 64)) (= x3975 (x2361 (- x1031 x1394))) (< x4011 x2540) (= x425 (* x2932 32)) (>= x2932 0) (= (+ 32 x1031 x425) x1175) (>= 134217728 x2932) (<= 0 x1173) (= (+ x353 32 x4749) x1031) (= x4262 x1848) (= (+ 96 x1394) x3788) (>= x725 x2540) (= x4011 (* 32 (- x1173 1))) (= x541 x1027))) (and (>= x1628 0) (= (+ x1394 32) x387) (= x3998 x4367) (= (* x3350 32) x3894) (>= x2013 x1989) (<= x2921 4294967295) (= (* 32 (- x1628 1)) x3014) (= (+ 356 x4137) x502) (= x4142 x1832) (= x1989 x2921) (> x1989 x3014) (<= x3350 576460752303423488) (<= 0 x3350) (<= x1628 134217728) (= x2013 (* x1628 32)) (>= 18446744073709551615 x1832) (>= x3894 x4142) (= x3010 (* (- x3350 1) 32)) (= x3093 x835) (> x4142 x3010) (= (+ 32 x502) x3677) (= x1275 (- x502 164)) (= (+ 160 x1394) x353) (= x1394 (+ 32 x502 x2013)) (= (- x1394 4) x4367) (= x4137 x3894))) (and (>= x2948 1220) (= x3947 160) (= 128 x1650) (<= x2948 36893488168893940932))) (and (=> (and x4325 (and (= x2430 true) (= x3194 x705) (= false x37) (= x427 false) (= x3194 true))) x1298) (=> (and (and (= x2470 (mod (* x4462 192) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x127 (< x2948 x4186)) (= x4186 (x2302 (+ 164 x2470))) (= 164 x1580)) (not x4325)) (and (=> (and (and (= x1056 x705) (= x3281 true) (= x1056 true) (= false x2804) (= false x1447)) x127) x1298) (=> (and (not x127) (and (= 164 x1034) (= (> x4367 18446744073709551615) x2385))) (and (=> x2385 x970) (=> (and (not x2385) (and (= x3811 (or (> x1639 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1639 160) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639) true)))) (= (x2361 (- x2948 x3112)) x1639) (= (+ x4367 4) x3112))) (and (=> (and (not x3811) (= (< 18446744073709551615 x1027) x173)) (and (=> x173 x970) (=> (and (not x173) (and (= (+ x1027 4) x4844) (= x1123 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1777) true) (> 256 x1777)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1777))) (= x1777 (x2361 (- x2948 x4844))))) (and (=> (and (and (= (= x687 x817) x3991) (= x2113 (x59 x4844)) (= (x1796 1461501637330902918203684832716283019655932542975 x817) x687) (= x4835 128) (= (+ x4844 32) x3450) (= x817 (x59 x3450))) (not x1123)) (and (=> (not x3991) x4218) (=> (and (and (= (+ 32 x3450) x2818) (= x4450 (x59 x2818)) (= (x1796 1461501637330902918203684832716283019655932542975 x4450) x1851) (= x3696 (= x1851 x4450))) x3991) (and (=> (and (and (= x1272 (x59 x4531)) (= x3074 (= x1067 x1272)) (= (x1796 1461501637330902918203684832716283019655932542975 x1272) x1067) (= x4531 (+ x2818 32))) x3696) (and (=> (not x3074) x4218) (=> (and (and (= x199 (+ x4531 32)) (= (x59 x199) x3907) (= x4024 (x1796 1461501637330902918203684832716283019655932542975 x3907)) (= x866 (= x4024 x3907))) x3074) (and (=> (not x866) x4218) (=> (and x866 (and (= (x59 x751) x3821) (= (< 18446744073709551615 x3821) x2647) (= (+ 32 x199) x751))) (and (=> x2647 x970) (=> (and (not x2647) (and (= (x2302 (+ x2119 31)) x1552) (= x2119 (x2302 (+ x3821 x4844))) (= x2725 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1552) (<= x2948 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1552 x2948)) (and (> x1552 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2948)))))) (and (=> (not x2725) x564) (=> (and x2725 (and (= x880 (x59 x2119)) (= x1248 (x2302 (+ x2119 32))) (= (< 18446744073709551615 x880) x4326))) (and (=> x4326 x266) (=> (and (not x4326) (and (= (x2302 (+ x3737 384)) x2613) (= (= (x927 (ite (< 18446744073709551615 x2613) 1 0) (ite (< x2613 384) 1 0)) 0) x248) (= x1076 (mod (* x880 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3558) x3737) (= x1201 (x2302 (+ 32 x1076))) (= (x2302 (+ x1201 31)) x3558))) (and (=> (not x248) x906) (=> (and x248 (and (<= 385 x2613) (= x1971 (> x4451 x2948)) (= (x2302 (+ x1248 x4330)) x4451) (= x4330 (mod (* x880 128) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> x1971 x3364) (=> (and (not x1971) (= (> x4451 x1248) x3179)) (and (=> (and (= x1554 x2613) (not x3179)) x3624) (=> (and (and (= (x2361 (- x2948 x1248)) x3591) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3591) (and (< x3591 128) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3591) true))) x3760)) x3179) (and (=> x3760 x3504) (=> (and (not x3760) (and (= (x2302 (+ x2613 128)) x4265) (= x1862 (= (x927 (ite (< 18446744073709551615 x4265) 1 0) (ite (> x2613 x4265) 1 0)) 0)))) (and (=> (not x1862) x1473) (=> (and x1862 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2613) (<= 1 x4265) (< x2613 x4265) (= x3858 (x59 x1248)) (= x3886 (> 6 x3858)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2613) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2613))) (and (=> (and x3886 (and (= (x59 x3036) x703) (= x4836 (x1796 1461501637330902918203684832716283019655932542975 x703)) (= (= x703 x4836) x1373) (= x3036 (x2302 (+ x1248 32))))) (and (=> x1373 x3779) (=> (not x1373) x1783))) (=> (not x3886) x609))))))))))))))))))))))) (=> (not x3696) x4218))))) (=> (and (and (= x1343 true) (= x2897 false) (= x4433 false) (= x705 x1463) (= x1463 true)) x1123) x1298))))) (=> (and (and (= x1883 true) (= false x4817) (= x1048 x705) (= x3293 false) (= true x1048)) x3811) x1298)))))))))))
(assert (= x3341 (and x2156 x2429)))
(assert (x2609 x1564))
(assert (=> (<= x4260 10000) (= (x4767 x4260) 0)))
(assert (= x1115 (and x618 (not x3574))))
(assert (x2609 x1833))
(assert (x2609 x2456))
(assert (x2369 (ite (< 18446744073709551615 x4174) 1 0) (ite (> x1140 x4174) 1 0)))
(assert (= x1365 (x1486 (x428 64 x1365 5))))
(assert (x2609 x4501))
(assert (x2609 x4748))
(assert (x1608 x36))
(assert (x2609 x2802))
(assert (x2609 x1365))
(assert (not (x4077 (x428 64 x3543 5))))
(assert (= x4575 (and x1839 x3179)))
(assert (= 0 (x4767 18446744073709551163)))
(assert (x2609 x1046))
(assert (= x2973 (x2466 (x428 x2973 x3128 x1897))))
(assert (x2609 x3353))
(assert (x2609 x4643))
(assert (x2085 x4714))
(assert (x2609 x2557))
(assert (= (or x2387 x2359) x1919))
(assert (x2609 x3463))
(assert (= (x2729 (x2529 x2764 x2679 x1222 x2307 x3360)) x3360))
(assert (x2609 x3304))
(assert (= (and x2270 x344) x1819))
(assert (x2085 x788))
(assert (x2609 x2083))
(assert (= x3930 (and x4183 x3339)))
(assert (x2609 x3794))
(assert (x2609 x824))
(assert (x2609 x1843))
(assert (x2085 x817))
(assert (x2609 x3502))
(assert (x2609 x3998))
(assert (x2609 x2187))
(assert (= x2907 (or x3603 x331)))
(assert (x2609 x2440))
(assert (x611 x2988))
(assert (x2609 x1794))
(assert (x2609 x2090))
(assert (x2609 x1605))
(assert (x2609 x1144))
(assert (x1608 x3664))
(assert (=> (>= 10000 x102) (= 0 (x4767 x102))))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (x2609 x1452))
(assert (x2609 x1855))
(assert (x2609 x2303))
(assert (x1608 x4787))
(assert (x2609 x200))
(assert (=> (>= 10000 x696) (= (x4767 x696) 0)))
(assert (= (=> (and (= true x3078) (= false x3586) (= false x215) (= true x1616) (= x3078 x705)) x1298) x3620))
(assert (x2609 x3106))
(assert (x2609 x1868))
(assert (= x3303 (and (not x950) x3845)))
(assert (not (x4077 (x804 0))))
(assert (x2609 x439))
(assert (x2609 x980))
(assert (x2609 x2386))
(assert (=> (<= x4160 10000) (= (x4767 x4160) 0)))
(assert (x2609 x3020))
(assert (x2609 x2393))
(assert (< (x3663 x2764 x1593 x4762 x252) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2609 x2672))
(assert (x2609 x4120))
(assert (= 0 (x4767 3221225663)))
(assert (x2085 x1962))
(assert (x2609 x4685))
(assert (x2609 x4267))
(assert (x2609 x181))
(assert (= (and x890 x1097) x1713))
(assert (x2609 x635))
(assert (x2609 x4045))
(assert (x2609 x3710))
(assert (x2609 x2097))
(assert (x2609 x110))
(assert (= x2441 (and x2667 (not x1990))))
(assert (= x140 (and x3905 x4586)))
(assert (x2609 x230))
(assert (x2609 x4787))
(assert (x2609 x3528))
(assert (x2609 x2963))
(assert (x2609 x3499))
(assert (x2609 x3379))
(assert (x2609 x1237))
(assert (x2609 x4840))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)))
(assert (= (and x3765 x2707) x3482))
(assert (x2609 x3100))
(assert (x2609 x1118))
(assert (x2609 x2661))
(assert (x2609 x4108))
(assert (x2609 x2053))
(assert (= x3357 (and x3759 x2550)))
(assert (x2085 x2642))
(assert (x2609 x4819))
(assert (x611 x3715))
(assert (x611 x2281))
(assert (x2609 x578))
(assert (x611 x2660))
(assert (x2609 x2826))
(assert (< 10000 (x428 64 x4795 x4203)))
(assert (x2609 x788))
(assert (x611 x3794))
(assert (x2609 x2190))
(assert (x2609 x2988))
(assert (= 0 (x4767 4294967295)))
(assert (x2609 x1265))
(assert (= (x1486 (x428 64 x956 4)) x956))
(assert (> (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362) 10000))
(assert (x2085 x736))
(assert (x2609 x1871))
(assert (x2609 x2493))
(assert (< (x2529 x2764 x2679 x1222 x2307 x3360) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2609 x3059))
(assert (x2609 x1151))
(assert (x2609 x4488))
(assert (= (and x2562 x4432) x2394))
(assert (x2609 x4610))
(assert (= (or x1356 x2761) x1562))
(assert (x2609 x3000))
(assert (x2609 x1991))
(assert (= x1231 (and x3035 x1931)))
(assert (= (x4767 (x428 x2973 x3128 x1897)) (x428 x2973 x3128 x1897)))
(assert (= x283 (x753 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374))))
(assert (x2609 x3583))
(assert (x2609 x771))
(assert (x611 x3543))
(assert (= x1644 (and (not x2696) x3628)))
(assert (x611 x2018))
(assert (x2609 x1804))
(assert (x2609 x3290))
(assert (x2609 x4404))
(assert (x2609 x1600))
(assert (= x90 (and (not x490) x1693)))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639808)))
(assert (x2609 x1169))
(assert (= x937 (or x3250 x4040)))
(assert (x2609 x102))
(assert (x2609 x4469))
(assert (x2609 x369))
(assert (= (and x4088 x2620) x2520))
(assert (x2609 x2269))
(assert (x611 x1952))
(assert (= (=> (and (= (x2361 (- x616 x908)) x3802) (>= 18446744073709551614 x1588) (= x4464 (+ x908 32)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1588) (>= 5 x757) (> x4153 x1588) (or (>= 18446744073709551487 x1588) (>= x1588 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= x4153 (x2302 (+ x1588 128))) (<= x1588 18446744073709551615) (<= 708 x908) (= x2219 (x910 x3781)) (= (x910 x4464) x1793) (>= 18446744073709551615 x1588) (not (< x4153 x1588)) (= (+ 32 x4464) x240) (<= x1793 1461501637330902918203684832716283019655932542975) (= (x910 x240) x1170) (>= 25769804352 x3802) (= (+ x240 32) x3781) (= x757 (x910 x908)) (= x1442 (not (> x2053 (+ 32 x3781)))) (>= 18446744073709551614 x1588) (or (<= x1588 18446744073709551487) (>= x1588 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (>= x3802 128) (<= x908 25769804932) (not (= x1588 115792089237316195423570985008687907853269984665640564039457584007913129639808))) (and x1442 (=> (= x2711 x4153) x1285))) x1589))
(assert (x2609 x3635))
(assert (= x382 (and x2657 x1862)))
(assert (x2609 x4410))
(assert (x2609 x231))
(assert (x2609 x2903))
(assert (x2609 x4369))
(assert (x2609 x773))
(assert (x4077 18446744073709551614))
(assert (x2609 x3117))
(assert (x2609 x2435))
(assert (= x4047 (and x829 x1408)))
(assert (x2609 x257))
(assert (x2609 x4212))
(assert (x2609 x3053))
(assert (x611 x3254))
(assert (x2609 x4176))
(assert (x2609 x3997))
(assert (x611 x788))
(assert (x2609 x1510))
(assert (x2609 x89))
(assert (x2609 x4472))
(assert (= (or x2551 x3296) x2914))
(assert (x2609 x4392))
(assert (x2609 x223))
(assert (= (or x3614 x520) x1798))
(assert (x2609 x2142))
(assert (x2609 x1635))
(assert (x1608 x3666))
(assert (x611 x2494))
(assert (x2609 x862))
(assert (x1608 x821))
(assert (x2609 x3521))
(assert (x2609 x3389))
(assert (x2609 x1259))
(assert (x1608 x4463))
(assert (= x4144 (and (not x3798) x1679)))
(assert (x2369 (ite (< 18446744073709551615 x1804) 1 0) (ite (< x1804 x4551) 1 0)))
(assert (x2609 x729))
(assert (x2609 x1404))
(assert (x2609 x3989))
(assert (x1608 x1021))
(assert (= (or (and x144 (not x3731)) (and x1670 (not x32)) (and x35 (not x2209))) x1129))
(assert (x2609 x431))
(assert (= x1967 (=> (and (= x1422 x4657) (= x3521 x1487)) x4802)))
(assert (= x4810 (and x1894 (not x1651))))
(assert (= (and x2264 x3108) x451))
(assert (x2609 x2798))
(assert (x2609 x2379))
(assert (x2609 x2022))
(assert (x2609 x651))
(assert (x2609 x481))
(assert (x2609 x3970))
(assert (= x3362 (and x2040 (not x489))))
(assert (= x1850 (=> (and (= (x4513 x4120) x95) (>= 12884902464 x1635) (= (x4513 x1443) x2366) (or (>= 18446744073709551487 x2032) (>= x2032 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (>= 1461501637330902918203684832716283019655932542975 x2366) (<= x2032 18446744073709551614) (= x1265 (x2302 (+ x1258 32))) (= (x4513 x3463) x4132) (>= 12884902404 x1169) (> x892 x2032) (= (x2302 (+ x2032 128)) x892) (not (= x2032 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (not (< x892 x2032)) (= (+ 32 x1169) x1443) (= x1436 (x4513 x1169)) (= x2319 (not (< (+ x4120 32) x2419))) (>= x1169 68) (>= 18446744073709551615 x2032) (<= x2032 18446744073709551615) (>= 5 x1436) (= (x2361 (- x3807 x1169)) x1635) (= x765 (x2302 (+ x1265 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2032) (or (>= x2032 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x2032 18446744073709551487)) (= x4120 (+ 32 x3463)) (<= x2032 18446744073709551614) (= (x2302 (+ x2032 32)) x1258) (= x3463 (+ 32 x1443)) (>= x1635 128)) (and x2319 (=> (= x892 x1524) x4193)))))
(assert (= (or x1128 x261) x938))
(assert (= x2436 (and x2167 (not x1542))))
(assert (x2609 x2099))
(assert (x2609 x1457))
(assert (x2609 x4466))
(assert (x2609 x2835))
(assert (x1276 (x682 x2530 x263 x1966)))
(assert (= (and x794 (not x2556)) x1975))
(assert (x2609 x4406))
(assert (x2574 (ite (< 18446744073709551615 x1804) 1 0)))
(assert (x2609 x44))
(assert (= x2236 (and x4833 (not x3811))))
(assert (x2609 x3976))
(assert (x2609 x1637))
(assert (x2609 x2049))
(assert (= (=> (and (= x4332 false) (= true x273) (= x273 x705) (= x3285 true) (= false x2427)) x1298) x117))
(assert (x2609 x1272))
(assert (x2609 x572))
(assert (x2609 x4512))
(assert (x2609 x4581))
(assert (= x3003 (and x3158 (not x3974))))
(assert (x2609 x957))
(assert (x2085 x442))
(assert (x2609 x1758))
(assert (x2609 x2321))
(assert (x2609 x3526))
(assert (= x3437 (and x2669 x3833)))
(assert (x2609 x2191))
(assert (x2609 x3523))
(assert (x2085 x3995))
(assert (= (and x894 x3033) x1504))
(assert (x2609 x1021))
(assert (x2609 x2322))
(assert (x2609 x1106))
(assert (x2609 x1888))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639745) 0))
(assert (= 4 (x2463 (x428 64 x956 4))))
(assert (x2609 x1873))
(assert (x2609 x2292))
(assert (x2609 x3462))
(assert (x2609 x1577))
(assert (= (and (not x326) x3003) x1537))
(assert (= (or x567 x2878) x2843))
(assert (x1608 x118))
(assert (= x1824 (and x2520 x4495)))
(assert (= x2504 (and x3685 (not x376))))
(assert (x2609 x2772))
(assert (x2609 x1401))
(assert (=> (<= x877 10000) (= (x4767 x877) 0)))
(assert (= x984 (and x275 x2946)))
(assert (= x2946 (and (not x3683) x1979)))
(assert (x2609 x3009))
(assert (= x75 (or x561 x189)))
(assert (x2609 x4008))
(assert (= (x2463 (x3663 x2973 x2908 x4722 x3122)) x4722))
(assert (=> (>= 10000 x4269) (= (x4767 x4269) 0)))
(assert (x2609 x2563))
(assert (x2609 x1443))
(assert (x2609 x302))
(assert (x2609 x3435))
(assert (x2609 x1466))
(assert (= x2491 (and (not x1876) x685)))
(assert (x2609 x3125))
(assert (= (and x313 x2093) x1125))
(assert (= x986 (or x4713 x2927)))
(assert (= (or (and x4806 (not x4423)) (and x2924 (not x2682)) (and (not x1215) x2801)) x2096))
(assert (= (=> (and (= x354 false) (= x336 false) (= true x3086) (= true x3157) (= x705 x3157)) x1298) x2747))
(assert (x2609 x694))
(assert (x2609 x3694))
(assert (x4077 25769804384))
(assert (x2609 x24))
(assert (= (x951 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x850))
(assert (= x547 x4307))
(assert (= (and x3991 x1247) x3468))
(assert (= x3698 (x1486 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (x2609 x3374))
(assert (x2609 x785))
(assert (x2085 x4467))
(assert (x2609 x1918))
(assert (x2085 x36))
(assert (x2609 x2178))
(assert (x2609 x3983))
(assert (x1608 x511))
(assert (x2609 x2384))
(assert (= (and (not x814) x417) x237))
(assert (x2609 x2219))
(assert (< (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x4383 (and (not x4325) x3137)))
(assert (x2609 x3865))
(assert (x2609 x1917))
(assert (x2609 x3737))
(assert (x2609 x3943))
(assert (x2609 x3467))
(assert (x2609 x4678))
(assert (x2609 x4062))
(assert (x1276 (x514 x3409 x2228)))
(assert (x2609 x3473))
(assert (x2609 x2833))
(assert (x2609 x1383))
(assert (> (x428 x2764 x3345 x498) 10000))
(assert (= x2387 (and x1185 (not x204))))
(assert (x2609 x433))
(assert (x2609 x2528))
(assert (x2609 x3848))
(assert (x2609 x4623))
(assert (= x2973 (x2466 (x2644 x2973 x102 x696 x1947 x828 x3835))))
(assert (x2609 x307))
(assert (x2609 x3544))
(assert (x2609 x2240))
(assert (x2609 x1326))
(assert (= (x2466 (x3739 x2973 x1434)) x2973))
(assert (x2609 x2636))
(assert (x2609 x1419))
(assert (x2609 x4259))
(assert (x2609 x3205))
(assert (= (and x241 x2454) x1747))
(assert (x2609 x4847))
(assert (x2609 x2664))
(assert (x2609 x3460))
(assert (x2609 x4527))
(assert (x611 x1896))
(assert (x2609 x3566))
(assert (x2609 x2949))
(assert (x2609 x4403))
(assert (x1608 x803))
(assert (= (x3663 x2973 x2908 x4722 x3122) (x4767 (x3663 x2973 x2908 x4722 x3122))))
(assert (x2609 x4046))
(assert (x2609 x3308))
(assert (= x571 (and x3168 x2509)))
(assert (= x4298 (=> (and (= true x2260) (= x112 false) (= x3950 true) (= x705 x3950) (= x3863 false)) x1298)))
(assert (x2609 x2961))
(assert (= (and x2914 (not x1503)) x4311))
(assert (x2609 x2362))
(assert (= (x4767 25769805060) 0))
(assert (x2609 x2487))
(assert (x2609 x1648))
(assert (x2609 x350))
(assert (= 64 (x2466 (x428 64 x4795 x2048))))
(assert (=> (>= 10000 x283) (= (x4767 x283) 0)))
(assert (=> (>= 10000 x2184) (= (x4767 x2184) 0)))
(assert (x2609 x1228))
(assert (= x2374 (x1202 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374))))
(assert (x2609 x2181))
(assert (x2574 (ite (< x2571 x3412) 1 0)))
(assert (x2609 x1076))
(assert (= x3915 (and x3377 (not x1728))))
(assert (= x547 (=> (and (= x4034 (not (> x3214 1))) (= (x2479 x2286) x3214)) (and x4659 x4034))))
(assert (x2609 x4682))
(assert (x2609 x648))
(assert (x2609 x923))
(assert (= x241 (and x3986 x3520)))
(assert (x2609 x1866))
(assert (x2609 x4127))
(assert (x2609 x4281))
(assert (x2609 x124))
(assert (x2609 x3371))
(assert (=> (>= 10000 x3774) (= (x4767 x3774) 0)))
(assert (x2609 x4364))
(assert (x2609 x3788))
(assert (x2609 x1897))
(assert (x2609 x224))
(assert (x2609 x1279))
(assert (= (=> (and (= x1740 (x2479 x2286)) (= (< 0 x1740) x3168)) (and (=> (not x3168) x544) (=> (and (and (= x3232 (> x572 0)) (= 0 x3497) (= x572 (x2479 x2286))) x3168) (and (=> (and (and (= (< 0 x3983) x1763) (= x3983 (x2479 x2286))) x3232) (and (=> (not x1763) x4659) (=> (and x1763 (and (= (x2479 x2286) x4376) (= (> x4376 0) x2014))) (and (=> (not x2014) x970) (=> (and x2014 (and (= (x1796 1461501637330902918203684832716283019655932542975 x1364) x1983) (= x4136 (= x2500 0)) (= (x4434 x3634) x2876) (= (x1481 x3655) x3545) (= x1364 (x2278 x1344)) (= x3943 (x2302 (+ 32 x2286))) (= (x2302 (+ 32 x3655)) x3634) (= (x2302 (+ 32 x1344)) x3655) (= x1344 (x2302 (+ x3569 32))) (= x3569 (x3132 x3943)) (= x2320 (x1970 x3569)) (= x2500 (x1020 x1983)))) (and (=> (and (= x2884 (< 5 x2320)) (not x4136)) (and (=> (and (not x2884) (= (= 1 x2320) x3423)) (and (=> (and x3423 (= x376 (= 0 (ite (< 0 x3545) 0 (ite (> x3545 0) 1 0))))) (and (=> (and x376 (= (= 0 (ite (= x2876 0) 0 (ite (= x2876 0) 1 0))) x2251)) (and (=> (not x2251) x991) (=> (and x2251 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3366) (= x2638 x1864) (= x989 x4538) (= x1972 x1864) (= x2876 x989) (= x3700 x2116) (= x2104 x700) (= x2710 x3543) (= x1210 x262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3730) (<= 0 x3366) (= x262 x1121) (= x4457 x4283) (= x4190 x4283) (<= 0 x1254) (= x4509 x2589) (= x4795 x1261) (= x655 x1823) (= x1535 x2659) (= x2382 x2104) (= x3099 x3217) (= (- x1254 x4538) x3366) (= x3099 x3163) (>= x3730 0) (= x2589 x1476) (= x3648 x1261) (= x4294 x655) (= x4804 x989) (= x2754 x3708) (= x2710 x1875) (= x4207 x3366) (= x1074 (+ x3730 x4804)) (= x2258 x66) (= x2587 x763) (= x1690 x1864) (= x92 x1074) (= x2710 x4447) (= x2754 x1497) (= x3763 x2116) (= x3730 (x2776 x3714 x1972)) (= x1888 x66) (= x3714 x655) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1074) (<= 0 x1074) (= x655 x4708) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1254) (= x1364 x655) (= x1254 (x372 x1823 x4447)) (= x481 x2587))) x547))) (=> (not x376) x934))) (=> (and (and (= (= 2 x2320) x3365) (<= x2320 5)) (not x3423)) (and (=> (and x3365 (= (= (ite (not (= x2876 1)) 0 (ite (not (= 1 x2876)) 1 0)) 0) x3035)) (and (=> (not x3035) x704) (=> (and x3035 (and (= x1698 x1704) (= x481 x1704) (= x1158 x1888) (= x3204 x4043) (= x4726 x1364) (= x4172 x3240) (= x31 x444) (= x1121 x1229) (= x1158 x2759) (= x879 x3514) (= x893 x3511) (= x2382 x3514) (= x1093 x4649) (= x3511 x4795) (= x3238 x2218) (= x2498 x4457) (= x3238 x1497) (= x2498 x1638) (= x3163 x3204) (= x1476 x31) (= x3700 x1093) (= x2353 x3452) (= x2659 x2017) (= x997 x1229) (= x1543 x3543) (= x3240 x3545) (= x4726 x3607) (= x2353 x2638))) x4307))) (=> (and (not x3365) (= x2863 (= x2320 3))) (and (=> (not x2863) x2471) (=> (and (= (= 0 (ite (= x2876 0) 0 (ite (= 0 x2876) 1 0))) x1944) x2863) (and (=> (and (and (= x3545 x1051) (= x3895 x3032) (= x1643 x3700) (= x381 x2533) (<= 0 x4483) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4483) (<= 0 x1050) (= x182 x1198) (= x3154 x4312) (= x1643 x4773) (= x1476 x1745) (= x2338 x1121) (= x2677 x4843) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4296) (= x4627 x4296) (= x1051 x295) (= x2784 x1980) (= x3163 x4579) (= x4795 x3576) (<= 0 x2972) (<= 0 x4296) (= x1050 (x2900 x290 x464 x2784)) (= (- x4483 x381) x2972) (= x2972 x298) (= x1051 x1205) (= x2425 x1051) (= x1980 x2638) (= x947 x1888) (= x1051 x464) (= x2533 x4632) (= x3895 x3955) (= x552 x1745) (<= x1050 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1364 x3895) (= x1206 x2338) (= x1198 x3543) (= x1105 x947) (= x800 x1096) (= x4483 (x1159 x3032 x295 x182)) (<= x2972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1255 x1198) (= x2876 x2533) (= x481 x4312) (= x3895 x2197) (= x4296 (+ x1050 x4632)) (= x4457 x1233) (= x2659 x1156) (= x1096 x1497) (= x1233 x4436) (= x290 x3895) (= x2252 x3576) (= x4843 x2382) (= x2031 x1980) (= x2621 x4579)) x1944) x4307) (=> (not x1944) x2043))))))))) (=> x2884 x970))) (=> x4136 x195))))))) (=> (not x3232) x65))))) x4846))
(assert (x2609 x549))
(assert (x2609 x4244))
(assert (= x3228 x4490))
(assert (= (=> (and (= x4577 (x2302 (+ 32 x98))) (= x3155 (x2302 (+ 32 x2000))) (= x2870 (not (< 1 x418))) (= (x2302 (+ x3155 32)) x4076) (= x484 (x2302 (+ x455 32))) (= (x4725 x3155) x4799) (= x345 (x1796 1461501637330902918203684832716283019655932542975 x3513)) (= x1577 (x2302 (+ x181 32))) (= x1164 (x3291 x2000)) (= x98 (x2302 (+ x1315 32))) (= x3513 (x491 x1577)) (= x1315 (x2302 (+ 32 x1059))) (= x4658 (x4394 x4076)) (= x3418 (x1796 1461501637330902918203684832716283019655932542975 x1164)) (= x181 (x2302 (+ 32 x4000))) (= x1059 (x2302 (+ 32 x4630))) (= (x1796 1461501637330902918203684832716283019655932542975 x822) x2373) (= x4630 (x2302 (+ x484 32))) (= (x3151 x181) x822) (= x2000 (x2302 (+ x1577 32)))) (and (=> (= x4119 x4577) x2388) x2870)) x4266))
(assert (x2609 x3274))
(assert (= (or (and x3329 (not x248)) (and (not x469) x1374)) x3793))
(assert (= x252 (x951 (x3663 x2764 x1593 x4762 x252))))
(assert (x2609 x1017))
(assert (= (=> (= x1237 x3688) x2114) x4541))
(assert (x2609 x3338))
(assert (> (x428 64 x3543 5) 10000))
(assert (x2609 x2373))
(assert (x2609 x3251))
(assert (x1608 x2076))
(assert (x2609 x448))
(assert (= (and x3800 x1919) x4811))
(assert (x2609 x1810))
(assert (x2609 x740))
(assert (x2609 x4243))
(assert (x2085 x4527))
(assert (x2609 x1797))
(assert (x2609 x2460))
(assert (= x2787 (x1486 (x428 64 x2787 x2308))))
(assert (= x3128 (x1486 (x428 x2973 x3128 x1897))))
(assert (not (x4077 (x3739 x2973 x1434))))
(assert (x4077 18446744073709551615))
(assert (x2609 x1624))
(assert (= (and (not x3365) x1903) x3392))
(assert (=> (>= 10000 x651) (= (x4767 x651) 0)))
(assert (x2609 x4506))
(assert (x2609 x3450))
(assert (x2609 x4200))
(assert (x2609 x1882))
(assert (x2609 x2000))
(assert (x2609 x4578))
(assert (= (and x3362 x1384) x1894))
(assert (= x3385 (=> (and (= (x2302 (+ 32 x1682)) x2461) (= x2281 (x3186 x2487)) (= (x2302 (+ x2461 32)) x2487) (= (x2302 (+ 32 x2689)) x4834) (= x3049 (x1796 1461501637330902918203684832716283019655932542975 x2281)) (= x2984 (x2302 (+ x2487 32))) (= x4327 (x2302 (+ 32 x3921))) (= x3921 (x2302 (+ 32 x524))) (= x2090 (x1484 x4261)) (= (x4838 x2461) x3794) (= x3275 (x2302 (+ x2984 32))) (= (x2302 (+ 32 x3275)) x4261) (= (x1796 1461501637330902918203684832716283019655932542975 x3794) x1311) (= x4704 (x2302 (+ 32 x4834))) (= x4522 (x494 x3275)) (= x4714 (x569 x2984)) (= x2766 (not (> x4349 1))) (= x1985 (x2302 (+ 32 x4327))) (= x843 (x1796 1461501637330902918203684832716283019655932542975 x4714)) (= x2689 (x2302 (+ 32 x1985)))) (and x2766 (=> (= x3658 x4704) x4635)))))
(assert (x2609 x2434))
(assert (x2609 x4565))
(assert (x2609 x3153))
(assert (x2609 x4570))
(assert (x2609 x2585))
(assert (= (and (not x1123) x2646) x1247))
(assert (x2609 x3862))
(assert (x2609 x1394))
(assert (< 10000 (x428 64 x732 x1053)))
(assert (x2609 x503))
(assert (x2609 x3999))
(assert (x2609 x765))
(assert (x2609 x2358))
(assert (= (and x382 (not x3886)) x129))
(assert (x2609 x1219))
(assert (x2609 x3453))
(assert (x2609 x869))
(assert (= x1032 x3396))
(assert (= x2679 (x1486 (x2529 x2764 x2679 x1222 x2307 x3360))))
(assert (x2609 x4598))
(assert (x2609 x4355))
(assert (x2609 x346))
(assert (x2609 x4238))
(assert (x2609 x184))
(assert (x2609 x186))
(assert (x2609 x1900))
(assert (x2609 x1618))
(assert (= x2509 (or x4444 x2684)))
(assert (x2609 x4564))
(assert (= x1251 (=> (= (< 0 x4462) x4419) (and (=> (not x4419) x4496) (=> (and x4419 (and (= x3715 (x59 228)) (>= x4462 1) (= x1990 (= x3715 x3330)) (= x3330 (x1796 1461501637330902918203684832716283019655932542975 x3715)))) (and (=> (not x1990) x2633) (=> (and (and (= x1623 (ite (not (= x1720 x3715)) (ite (not (= (x1796 1461501637330902918203684832716283019655932542975 x3543) x3715)) 1 0) (ite (not (= x1720 x3715)) 1 0))) (= x509 (= (ite (= x1623 0) x1623 (ite (not (= x3715 x4795)) 1 0)) 0)) (= (x1796 1461501637330902918203684832716283019655932542975 x1365) x1720)) x1990) (and (=> (and (and (= true x2244) (= true x607) (= x4750 false) (= x607 x705) (= false x4729)) (not x509)) x1298) (=> x509 x4145)))))))))
(assert (x2609 x3230))
(assert (= (or (and (not x3991) x1247) (and x3468 (not x3696)) (and x79 (not x3074)) (and (not x866) x2275)) x4476))
(assert (x2609 x1308))
(assert (= x2838 (or (and x1979 x3683) (and x2914 x1503))))
(assert (= x192 (and x269 x2433)))
(assert (= x2751 (and x3358 x2939)))
(assert (x2609 x4572))
(assert (x2609 x3777))
(assert (= (or x691 x2196) x830))
(assert (x2609 x1149))
(assert (= (and x1372 x48) x674))
(assert (x2609 x118))
(assert (x2609 x2437))
(assert (x2085 x2493))
(assert (x2085 x2313))
(assert (x4077 25769804800))
(assert (x2609 x3697))
(assert (x2609 x3497))
(assert (x2609 x3968))
(assert (= x3030 (and x3395 (not x2566))))
(assert (x2609 x4497))
(assert (x2609 x1274))
(assert (x2609 x3134))
(assert (= (x4767 (x428 64 x3491 3)) (x428 64 x3491 3)))
(assert (x2609 x1260))
(assert (x2609 x842))
(assert (x2609 x338))
(assert (= (or x2967 x138) x820))
(assert (= x1131 (or (and x1182 x4711) (and x4691 x858))))
(assert (x2609 x95))
(assert (x2609 x2213))
(assert (x2609 x3127))
(assert (= x1251 x942))
(assert (x2609 x565))
(assert (x2609 x1934))
(assert (x2609 x29))
(assert (x2609 x2596))
(assert (x2609 x4305))
(assert (= x4621 (and x4014 x2459)))
(assert (x2609 x3268))
(assert (= (or x600 x1114) x945))
(assert (x2085 x836))
(assert (x2085 x703))
(assert (x611 x4467))
(assert (x2085 x4410))
(assert (= x2967 (and (not x4304) x1689)))
(assert (= (=> (and (not (> x3911 x1996)) (= x2871 (x910 x3656)) (<= x1452 25769804352) (<= x3911 18446744073709551614) (or (>= 18446744073709551487 x3911) (>= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (= (x2302 (+ x3911 128)) x1996) (<= x1610 25769804932) (= (+ 32 x1610) x2153) (<= x3911 18446744073709551615) (or (>= 18446744073709551487 x3911) (>= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639809)) (< x3911 x1996) (<= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1452 (x2361 (- x616 x1610))) (>= x1610 708) (= (x910 x1610) x3856) (= x4374 (not (> x341 (+ 32 x3656)))) (<= 128 x1452) (>= 1461501637330902918203684832716283019655932542975 x3548) (<= x3911 18446744073709551614) (not (= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (>= 18446744073709551615 x3911) (= x2312 (+ 32 x2153)) (= (x910 x2153) x3548) (= x3656 (+ 32 x2312)) (<= x3856 5) (= x3294 (x910 x2312))) (and (=> (= x1996 x1510) x2375) x4374)) x4612))
(assert (x2609 x1816))
(assert (x2609 x629))
(assert (x2609 x2625))
(assert (x1276 (x2776 x3714 x1972)))
(assert (x2609 x850))
(assert (= x151 (and x4397 x1377)))
(assert (x2609 x803))
(assert (x2609 x418))
(assert (x2609 x1559))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3521) (not (= x3521 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (> x1778 x3521) (not (= x3521 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (<= x3521 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x3521)) (= x1913 (> x1828 5)) (= (x2290 x995) x1828) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3521) (= (x2302 (+ 128 x3521)) x1778)) (and (=> x1913 x970) (=> (and (not x1913) (and (= (x2302 (+ 32 x3521)) x2027) (= (x2302 (+ 32 x664)) x1637) (= (x2302 (+ x3956 32)) x664) (= (x1675 x3956) x223) (= x3849 (x1428 x664)) (= (x2302 (+ x3582 32)) x729) (= x3083 (x2361 (- x3340 x1422))) (= (x2302 (+ x995 32)) x3956) (= x3340 (x1207 x1637)) (= (> x3083 x3340) x3108) (= (x2302 (+ 32 x2027)) x3582) (= (x1796 1461501637330902918203684832716283019655932542975 x223) x1590))) (and (=> (and x3108 (and (= x2555 true) (= x705 x2555) (= false x3065) (= x2012 false) (= true x2974))) x1298) (=> (and (and (= x1072 (x1826 x722)) (= (< 0 x1072) x4676)) (not x3108)) (and (=> x4676 x1062) (=> (and (not x4676) (and (= x4758 x705) (= x2409 true) (= x4653 false) (= false x355) (= true x4758))) x1298))))))) x4802))
(assert (x2609 x2081))
(assert (= (and x3795 x563) x3424))
(assert (x2609 x2237))
(assert (x2085 x4787))
(assert (x2609 x3332))
(assert (x2609 x49))
(assert (x2609 x2307))
(assert (= x812 (and (not x1596) x2047)))
(assert (x611 x3496))
(assert (x2609 x1949))
(assert (= (and x2134 (not x216)) x833))
(assert (= (x4767 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)) (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)))
(assert (x4077 6442451295))
(assert (= x3815 (=> (and (= (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4438) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4438 x3131)) (and (> x4438 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3131)))) x1904) (= (x59 260) x4438)) (and x1904 x458))))
(assert (= (and x1763 x4083) x3630))
(assert (= (x4767 201326596) 0))
(assert (x2609 x3887))
(assert (x2609 x1323))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639873))
(assert (x2609 x68))
(assert (= (=> (and (= x433 (x2302 (+ 32 x2772))) (= (x2302 (+ x4478 32)) x1277) (= (x1796 1461501637330902918203684832716283019655932542975 x1896) x4825) (= (x2302 (+ x758 32)) x2772) (= (not (< 1 x1133)) x4004) (= x649 (x2302 (+ 32 x2955))) (= x4256 (x4188 x649)) (= (x2343 x3433) x1896) (= x2955 (x2302 (+ 32 x3433))) (= x4478 (x2302 (+ 32 x433))) (= (x4797 x2955) x909) (= (x2302 (+ 32 x644)) x3433)) (and x4004 (=> (= x1277 x3216) x2839))) x2185))
(assert (= x4160 (x1202 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160))))
(assert (= x3380 (and x2135 x2749)))
(assert (x2609 x4844))
(assert (x2609 x4010))
(assert (x2609 x42))
(assert (x2609 x2002))
(assert (x2609 x2659))
(assert (=> (>= 10000 x3389) (= 0 (x4767 x3389))))
(assert (not (x4077 (x3663 x2973 x2908 x4722 x3122))))
(assert (x2609 x2956))
(assert (x2609 x2703))
(assert (= (or x4811 x151) x4063))
(assert (x2609 x524))
(assert (x2609 x2001))
(assert (= x4777 (or x2067 x1278)))
(assert (= (and (not x2014) x3630) x4081))
(assert (x2609 x1189))
(assert (x2609 x4160))
(assert (x2609 x2882))
(assert (x2609 x548))
(assert (= x846 (and x1289 (not x1437))))
(assert (x2609 x2184))
(assert (= x3267 (=> (and (= (x3237 x2510) x3215) (= (> x3215 18446744073709551615) x2753)) (and (=> (and (not x2753) (and (= (x2302 (+ 32 x42)) x253) (<= 1 x2700) (= x2700 (x2302 (+ x253 x722))) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x722 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (mod (* 32 x3215) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x42) (< x722 x2700) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x722) (= (= x3215 0) x1542))) (and (=> (and (= x2700 x3688) x1542) x2114) (=> (and (and (< x2700 x2986) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2700) (= x2986 (x2302 (+ 128 x2700))) (= (x2302 (+ 32 x2700)) x1684) (= x4763 (= x3215 1)) (= x3657 (x2302 (+ 32 x722))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2700) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2700)) (= (x2302 (+ x3657 32)) x2160) (= (x2302 (+ x1684 32)) x635) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2700)) (not (= x2700 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x2361 (- x3215 1)) x1957) (<= x2700 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x4411 (x2302 (+ 32 x635)))) (not x1542)) (and (=> (and (not x4763) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2986) (= (x2302 (+ 32 x3981)) x1404) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2986)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x2986)) (= (x2302 (+ x2986 128)) x2193) (= x3981 (x2302 (+ 32 x2986))) (<= x2986 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1260 (x2302 (+ x1404 32))) (<= x2986 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x2193 x2986) (= (= 1 x1957) x4586) (not (= x2986 115792089237316195423570985008687907853269984665640564039457584007913129639808)))) (and (=> (and x4586 (= x2193 x1237)) x4541) (=> (not x4586) x3084))) (=> (and (= x1237 x2986) x4763) x4541))))) (=> x2753 x970)))))
(assert (= (x2729 (x2644 x2973 x102 x696 x1947 x828 x3835)) x828))
(assert (= (and x3468 x3696) x79))
(assert (x2609 x2489))
(assert (= x3082 (and x830 x162)))
(assert (x2609 x3297))
(assert (x2369 (ite (< 18446744073709551615 x3412) 1 0) (ite (> x1554 x3412) 1 0)))
(assert (x2609 x2390))
(assert (= x1779 (and x4047 x1716)))
(assert (x2609 x1569))
(assert (x2609 x3041))
(assert (not (x4077 (x3739 x2764 x2259))))
(assert (= x2740 (and x1091 (not x3622))))
(assert (x2609 x2981))
(assert (= x3641 (and x3952 (not x2527))))
(assert (x2609 x2612))
(assert (x2609 x2455))
(assert (x611 x2477))
(assert (x2609 x1820))
(assert (= x1090 (and (not x4676) x1992)))
(assert (= 0 (x4767 18446744082299486596)))
(assert (x2609 x2070))
(assert (x2609 x4454))
(assert (= (x4767 36893488168893940932) 0))
(assert (= x837 (or x1370 x2504)))
(assert (= (x2466 (x428 64 x1365 5)) 64))
(assert (x2609 x3234))
(assert (x4077 25769805060))
(assert (x2609 x758))
(assert (x2574 (ite (> x4506 18446744073709551615) 1 0)))
(assert (x1608 x3485))
(assert (x2609 x2902))
(assert (x2609 x2232))
(assert (x2609 x1736))
(assert (= x149 (and x3030 (not x2173))))
(assert (x611 x3055))
(assert (= x890 (and (not x3711) x3855)))
(assert (x2609 x1531))
(assert (= (or x2101 x1363) x3661))
(assert (x2609 x643))
(assert (x2609 x3589))
(assert (x2609 x1170))
(assert (x2609 x1309))
(assert (x1276 (x4812 x4381 x3611 x932)))
(assert (= x2536 (and (not x1763) x4083)))
(assert (= (and x1645 x1124) x1935))
(assert (x2609 x1983))
(assert (x2609 x584))
(assert (= (and x1167 (not x297)) x650))
(assert (x1608 x4748))
(assert (x2609 x264))
(assert (= x3296 (and x1641 x4542)))
(assert (= (=> (and (= (x3237 x750) x1328) (= (not (< 1 x1328)) x2575)) (and x2575 x942)) x3489))
(assert (= (=> (and (= (x59 x2968) x1614) (= (x2361 (- x2672 31)) x4348) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1614) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348)) (and (= (<= x4348 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1614)) (> x4348 x1614))) x2402) (= (+ x3112 32) x1466) (= (+ x4530 32) x2968) (= (x2361 (- x2948 x3112)) x2672) (= x4530 (+ x3112 64))) (and (=> (not x2402) x970) (=> (and x2402 (and (= x1352 (> x1811 18446744073709551615)) (= x1811 (x59 x3292)) (= x3292 (x2302 (+ x1614 x3112))))) (and (=> x1352 x970) (=> (and (not x1352) (and (= x2414 (x2302 (+ x3292 32))) (= (x2361 (- x2948 x2841)) x4299) (= (mod (* 32 x1811) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2841) (= x3430 (or (and (= (<= x4299 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2414 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2414 x4299)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4299) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2414)))))) (and (=> (and (not x3430) (and (= (= 0 x4512) x1641) (= (x59 x3112) x4512))) (and (=> (and (and (= (x604 x1191) x4675) (= 5 x905) (= (x59 x4530) x732) (= x1053 (x428 64 x3543 5)) (= x1191 (x428 64 x732 x1053)) (= (= x4675 0) x3150)) (not x1641)) (and (=> (not x3150) x2095) (=> (and (and (= (x1796 1461501637330902918203684832716283019655932542975 x3543) x3477) (= x4212 (x59 x4530)) (= (x2302 (+ 32 x3506)) x3316) (= (x2302 (+ 32 x4639)) x3506)) x3150) x3686))) (=> x1641 x3686))) (=> x3430 x970))))))) x85))
(assert (x2609 x750))
(assert (= (or x4371 x1779) x4040))
(assert (= (and x1944 x3539) x3209))
(assert (x2609 x2298))
(assert (= (and x4805 x405) x4666))
(assert (x2609 x2366))
(assert (x2609 x1451))
(assert (x2609 x2004))
(assert (=> (<= x1326 10000) (= 0 (x4767 x1326))))
(assert (= x4038 (or (and x3359 x139) (and x1936 x1971))))
(assert (x2609 x1948))
(assert (x2609 x959))
(assert (< (x3739 x2973 x1434) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x3295 (x4096 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (= x131 (x753 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (= (and x890 (not x1097)) x3901))
(assert (x2609 x2885))
(assert (x4077 18446744082299486304))
(assert (= (=> (and (= true x2344) (= x4604 true) (= x705 x4604) (= x974 false) (= false x4503)) x1298) x4759))
(assert (x2609 x3785))
(assert (x2609 x2806))
(assert (= x794 (and (not x2879) x4099)))
(assert (x2609 x2899))
(assert (x2609 x3582))
(assert (= (and x4533 x2547) x898))
(assert (= x13 (and x1244 x1798)))
(assert (x2609 x2475))
(assert (= x1222 (x2463 (x2529 x2764 x2679 x1222 x2307 x3360))))
(assert (x2609 x55))
(assert (= x3613 (or x17 x437)))
(assert (x2609 x2539))
(assert (= x1116 (and (not x2809) x881)))
(assert (= (=> (and (and (= x1762 x1769) (and (and (= (+ 160 x4364) x4472) (>= 4294967390 x776) (= (x1956 x3566) x4769) (= x776 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x856)) (< x3854 x874) (<= x827 18446744073709551615) (<= x619 115792089237316195423570985008687907853269984665640564039457584007913129639903) (= (+ x4364 31) x1517) (= x851 x4769) (= (x2361 (- x2002 x1797)) x3595) (= x4364 (x109 68)) (>= x776 1) (<= x39 18446744082299486596) (= x185 false) (= x4315 (x2361 (- x1797 x260))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1046 x260)) (>= x3063 x3822) (= x3297 64) (= x1361 (+ 32 x2002)) (= x1769 x176) (= x619 (x2302 (+ x1731 x3566))) (= (x2010 128) x1925) (= (x1956 x4741) x1731) (= x4501 3516931245) (<= 388 x39) (< x3861 x3822) (= (+ x260 32) x1797) (= (+ x3566 32) x4741) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1848) (= x478 false) (= (* 32 (- x2506 1)) x3861) (= x2573 (+ x4364 100)) (= (+ x1797 64) x2002) (= (x1956 x619) x2564) (>= x1848 0) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1517) x4164) (= x4012 false) (>= 4294967295 x4820) (>= 4294967296 x4364) (> x260 x874) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1731 x3566)) (= false x3913) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x3566) (= x3635 (x1020 x2659)) (not (> x2573 x3976)) (= (ite x3261 1 0) x539) (= x3566 (x2302 (+ x1046 x260))) (>= x2506 0) (= x2936 64) (= x874 (+ x3854 64)) (>= x3635 1) (= false x1565) (= (+ x776 128) x3854) (= (* x2506 32) x3063) (= x3726 (+ 32 x1797)) (<= x3103 127) (= x4488 (+ 32 x619)) (>= 134217728 x2506) (= x1144 x3822) (= x856 (+ 63 x4164)) (= false x38) (= x2722 (+ 100 x3063)) (= (+ x874 64) x260) (= x3976 x2722) (<= x2564 4294967295) (= x1046 (x1956 x260)) (<= x3103 127)) (and (and (= x1733 (+ 32 x407)) (= x342 x827) (>= x3695 0) (>= 134217728 x1388) (>= x1236 x3256) (= (- x4664 4) x4355) (= x409 (+ x4664 64)) (<= 0 x1388) (= (+ x1816 260) x407) (>= 576460752303423488 x3695) (= (+ x407 x1236 32) x4664) (= (* 32 (- x1388 1)) x889) (> x3256 x889) (= x1816 x4093) (= x2102 (- x407 68)) (= x4093 (* 32 x3695)) (= x2180 (* 32 (- x3695 1))) (<= x342 x4093) (= x50 x4355) (= x1236 (* x1388 32)) (= x3256 x4820) (= x4536 x1848) (< x2180 x342)) (and (= x824 (ite (not (= x3092 0)) 1 0)) (>= 1 x3092) (= x851 x3587) (not (> x992 x39)) (= (x2245 68) x3092) (= x4103 x39) (= x1945 (* x1259 32)) (= (* 32 x1259) x4721) (= x813 false) (= x3551 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3379)) (= (* (- x2037 1) 32) x2036) (>= x4481 1) (= (+ 32 x2585) x2737) (>= 127 x3818) (<= x43 18446744073709551615) (>= x3551 1) (= x1960 (+ x3551 288)) (= x3092 x824) (= x4057 (x2361 (- x409 x4664))) (= (+ 68 x43) x2585) (= x3928 false) (= x4103 (+ x409 32 x3427)) (< x1101 x39) (= (x2245 132) x694) (<= 0 x2037) (= x1101 (+ x2585 31)) (= x4113 x2564) (= (x2245 x2585) x1259) (= x1008 2321842044) (>= 576460752571858953 x1259) (= x314 (x2245 100)) (< x2036 x4113) (>= 18446744073709551327 x3551) (= (* 32 x2037) x3427) (= x992 (+ x2737 x4721)) (>= x992 100) (= x4481 (x1020 x2659)) (>= 127 x3818) (= (> x992 x2737) x297) (<= x4113 x3427) (<= x992 18446744082299486596) (<= x2037 134217728) (= (+ 32 x409) x343) (= x1665 (+ x4664 32)) (= (+ x1945 63) x3379) (= (x2245 164) x43))))) (and (= x1769 x254) (= x2626 (x2361 (- x2265 x12))) (= x1144 (x4745 x2866)) (<= 100 x3976) (= (+ 32 x1576) x2576) (= x4764 (x2361 (- x4369 x959))) (= x1576 (+ 32 x1842)) (= x2356 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2143)) (= (+ x2576 32) x4581) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x821) x605) (>= x4369 1) (= x4324 (x4745 x4369)) (= x4259 (x3121 x3616)) (>= x254 1) (< (+ x4324 x4369) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= false x1566) (= x1172 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2313)) (= (x2302 (+ 32 x4244)) x4646) (= false x242) (>= 4294967295 x1144) (= (+ 32 x579) x2225) (= (+ 32 x3075) x2522) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x959) (= x1994 (x2361 (- x4244 x2265))) (= x4615 (+ x2557 32)) (<= x959 115792089237316195423570985008687907853269984665640564039457584007913129639934) x3 (= (x2302 (+ x1126 31)) x821) (<= x254 1461501637330902918203684832716283019655932542975) (= x2833 (x2302 (+ x959 32))) (= x1953 (+ x3616 32)) (= (x2302 (+ x4009 31)) x2143) (= x1668 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639903 x2866) (= x633 (+ 32 x3243)) (= (x2302 (+ x605 x4615)) x558) (= (x1812 x3243) x4009) (= x1141 (x2361 (- x4764 32))) (= false x4121) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x959) (= x3 (= x1467 x1323)) (= x1126 (x1815 x579)) (= x2313 (x2302 (+ x4259 31))) (= x3626 (+ x4581 32)) (= (x2302 (+ x2356 x4646)) x4369) (= (x2302 (+ 32 x558)) x1256) (= (x2302 (+ x4369 32)) x4681) (= x3556 false) (= x1842 (+ x2265 32)) (= x3318 (x2361 (- x558 x2265))) (= x4356 (x2361 (- x2557 x2265))) (= (+ 32 x2866) x2712) (= x1467 x254) (= (x2302 (+ 32 x4681)) x891) (<= x3976 4294967396) (= x811 (x4500 x959)) (= x4244 (x2302 (+ x1256 x1172))) (= (+ 192 x2265) x2557) (= x2866 (x2302 (+ x4369 x4324))) (> x4369 x959))) (and (=> x297 x80) (=> (and (= x1960 x2999) (not x297)) x3824))) x2404))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x428 x2764 x3345 x498)))
(assert (= x1400 (and x13 x2071)))
(assert (x2609 x3803))
(assert (x2609 x3215))
(assert (x2609 x4109))
(assert (x2609 x907))
(assert (not (x4077 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160))))
(assert (x2609 x2073))
(assert (= (=> (and (and (and (and (= x606 x3878) (and (= x4407 x4094) (and (= x299 x3767) (and (and (<= x2415 x4044) (<= 0 x4117) (= x1065 x2288) (= x28 (* (- x4117 1) 32)) (= x1386 x2415) (= (+ x4044 612) x3111) (= x4044 (* 32 x4117)) (> x2415 x28) (>= 134217728 x4117)) (and (and (= (+ x3111 32) x2337) (>= 134217728 x2008) (= x499 x3505) (= (* (- x2008 1) 32) x1784) (<= x3505 x2989) (= x1098 x3255) (= (* x2008 32) x2989) (> x3505 x1784) (= x2237 (- x3111 388)) (= (+ x2989 32 x3111) x1586) (>= x2008 0)) (and (and (and (= x4734 (+ 32 x4454)) (= x4678 x2371)) (and (and (and (= x2820 (+ x4454 96)) (= x2836 x4824)) (and (and (= x373 x3888) (= (+ x4454 128) x1209)) (and (and (and (and (= x2925 (+ 96 x955)) (= (+ 128 x955) x3673) (= x2666 x931) (>= x390 x931) (= x4170 (+ 32 x390 x4440)) (= (* x1294 32) x390) (<= x1294 134217728) (> x931 x4662) (= x3710 (+ 32 x4440)) (<= 0 x1294) (= x4662 (* (- x1294 1) 32)) (= x3517 x1403) (= x3784 (x2361 (- x4440 x955)))) (and (<= 100 x3183) (>= 201326601 x4255) (>= 25769805060 x3183) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1406) x3979) (= x3183 (+ x1354 x457)) (= x2957 false) (>= x3783 x615) (= (x1020 x2659) x150) (= x4151 x616) (<= x810 25769804960) (= (x910 196) x2381) (= (< x457 x3183) x3438) (>= x4231 0) (not (< x616 x3183)) (= x1135 (x2361 (- x4170 x955))) (= (+ x2028 63) x1406) (= (* x4255 128) x1354) (= (+ x2670 31) x3244) (>= 1461501637330902918203684832716283019655932542975 x712) (= x3704 (+ 32 x4170)) (= x787 (x910 100)) (= (+ x3979 384) x2963) (<= x4104 127) (= x3783 (* x4231 32)) (= (x910 x2670) x4255) (= x810 (x910 228)) (= (+ x2670 32) x457) (<= x4104 127) (>= 134217728 x4231) (= (+ x3783 32 x4170) x4151) (= (* x4255 32) x2028) (<= x3979 6442451295) (= x1083 false) (>= 1461501637330902918203684832716283019655932542975 x787) (= x2216 (x910 164)) (> x615 x3843) (= x3843 (* 32 (- x4231 1))) (= x3826 (x910 68)) (= x3522 2657635784) (>= x150 1) (<= x2216 1461501637330902918203684832716283019655932542975) (= x712 (x910 132)) (= (+ 160 x955) x1367) (>= 1461501637330902918203684832716283019655932542975 x2381) (< x3244 x616) (= x779 x615) (= x1898 x585) (>= x3979 1) (= (+ x810 68) x2670))) (and (= (* (- x864 1) 32) x4519) (= (+ 32 x1948) x2702) (<= 0 x864) (= (+ x955 64) x3814) (>= x158 x3476) (= x3029 x1461) (= (+ 32 x955) x1025) (= (x2361 (- x1948 x955)) x2226) (>= 134217728 x864) (< x4519 x3476) (= (+ 32 x1948 x158) x4440) (= x3476 x1738) (= x158 (* 32 x864)))) (and (= (x2361 (- x379 x4454)) x4393) (= x2001 (x2361 (- x955 x4454))) (= (+ x955 192) x1948) (= x1696 x2568) (= x3552 (+ 224 x4454)) (= x1564 (+ 32 x379)) (= (+ 32 x2757) x521) (= (+ x379 32) x955) (= (+ x4454 160) x2612) (= (+ 192 x4454) x2544) (= x2765 (x2361 (- x2757 x4454))) (= x379 (+ x2757 32)))))) (and (= x848 x3892) (= (+ x4454 64) x1619)))) (and (= x917 (* (- x2044 1) 32)) (= x1954 x1138) (>= x2044 0) (<= x2044 134217728) (= (+ x1586 32 x2813) x4454) (= x2350 (- x1586 388)) (= (* x2044 32) x2813) (= x2022 (- x4454 4)) (= x4049 x3770) (< x917 x3770) (= x2757 (+ 256 x4454)) (= (+ x1586 32) x2165) (<= x3770 x2813) (= x100 x2022)))))))) (= x2602 x2220)) (= x793 x1341)) (and (= 0 x3918) (= 64 x2422) (>= 25769805060 x616) (= x4700 false) (not x3261) (= x461 false) (= false x1232) (= true x2122) (>= 4294967295 x1738) (not x2118) (<= x779 4294967295) (= x2231 false) (= 0 x3191) (= false x212) (= true x3829) (= true x1646) (>= x616 1284) (<= x2666 4294967295) (= x2413 false))) (and (=> (and (= x470 x2963) (not x3438)) x4152) (=> x3438 x1253))) x2016))
(assert (x1608 x2956))
(assert (= (and x4197 x1703) x2429))
(assert (x2609 x4205))
(assert (x2609 x194))
(assert (x2609 x4331))
(assert (x2609 x2132))
(assert (= (x951 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) x3389))
(assert (x2609 x3401))
(assert (= (=> (and (= x2495 x705) (= x2495 true) (= false x4624) (= false x103) (= x2372 true)) x1298) x3364))
(assert (x611 x3513))
(assert (x2609 x642))
(assert (x2609 x3856))
(assert (= (and x797 x3870) x597))
(assert (x2609 x2256))
(assert (= x4284 (=> (= (= x472 0) x3800) (and (=> x3800 x990) (=> (not x3800) x3815)))))
(assert (= x2453 (and (not x2947) x1701)))
(assert (= x4145 (=> (= x3627 (not (> x4462 1))) (and (=> (and (= x3054 (x59 196)) (= (= x876 x3054) x3085) (= x876 (x1796 1461501637330902918203684832716283019655932542975 x3054))) (and (=> (and (and (= x2835 (x1020 x3054)) (= x490 (= x2835 0))) x3085) (and (=> (and (and (= true x3130) (= false x914) (= x742 x705) (= true x742) (= x654 false)) x490) x1298) (=> (and (and (= (x59 164) x4698) (= x3549 (< x4698 6))) (not x490)) (and (=> (and (and (= (= x4698 1) x3986) (>= 5 x4698)) x3549) (and (=> (and (and (= x1491 (> 6 x2762)) (= x2762 (x59 164))) (not x3986)) (and (=> (not x1491) x3857) (=> (and x1491 (and (= x3636 (= x2762 2)) (<= x2762 5))) (and (=> (and (and (= x831 (x1796 1461501637330902918203684832716283019655932542975 x67)) (= x67 (x59 196)) (= (= x67 x831) x563)) x3636) (and (=> (not x563) x1890) (=> (and x563 (and (= (= x3572 x3055) x4373) (= x3055 (x59 228)) (= x3572 (x1796 1461501637330902918203684832716283019655932542975 x3055)))) (and (=> (not x4373) x4427) (=> (and (and (= (= x583 x3249) x3397) (= x583 (x59 260)) (= (x1796 1461501637330902918203684832716283019655932542975 x583) x3249)) x4373) (and (=> (and x3397 (and (= x415 x4588) (= x165 x756) (= x4184 x1735) (= x3649 x583) (= x4746 x2624) (= x944 x2659) (= x3163 x3678) (= x802 x1108) (= x756 x3700) (= x3812 x1121) (= x4757 x3678) (= x1978 x3017) (= x2976 x67) (= x1888 x2889) (= (x59 292) x2194) (= x4184 x4795) (= x2880 x3812) (= x3649 x826) (= x4457 x1978) (= x2889 x3632) (= x714 x1497) (= x802 x1476) (= x4192 x4354) (= x2382 x4588) (= x213 x3055) (= x2194 x2624) (= x714 x22) (= x2976 x4253) (= x481 x4354))) x3396) (=> (not x3397) x2490))))))) (=> (and (and (= (x59 164) x3229) (= (> 6 x3229) x1378)) (not x3636)) (and (=> (not x1378) x3857) (=> (and x1378 (and (= (= x3229 3) x344) (>= 5 x3229))) (and (=> (and (and (= (x59 324) x4091) (= (> x4091 0) x1721)) x344) (and (=> (not x1721) x1032) (=> (and x1721 (and (= x303 (x59 196)) (= x445 (x1796 1461501637330902918203684832716283019655932542975 x303)) (= (= x445 x303) x4088))) (and (=> (not x4088) x1890) (=> (and x4088 (and (= (= x2437 x643) x4495) (= x2437 (x59 228)) (= x643 (x1796 1461501637330902918203684832716283019655932542975 x2437)))) (and (=> (and x4495 (and (= (= x2494 x432) x738) (= (x1796 1461501637330902918203684832716283019655932542975 x2494) x432) (= x2494 (x59 260)))) (and (=> (not x738) x2490) (=> (and (and (>= x2606 0) (= x3323 x3400) (= x3125 x4070) (= x4070 x4707) (= x191 x1476) (= x748 x3745) (= (- x233 x4504) x2606) (= x2382 x395) (= x4400 x4070) (= x4002 x395) (= x1121 x2011) (= x3480 x4448) (>= x4052 0) (= x4345 x2416) (= x2953 x2011) (= x233 (x3419 x1420 x3212 x1599)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2606) (= x3323 x481) (= x3728 x2494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4448) (= x790 x3163) (= x4070 x1553) (= x3383 x4033) (= x4523 (x59 324)) (= x4795 x3745) (= x3383 x1420) (<= 0 x4448) (= x2606 x2499) (= x1 x4461) (= x3432 x3728) (= x4070 x3212) (<= x4052 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x233 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3922 x3298) (= x2108 x3383) (= x2485 x3383) (<= 0 x233) (= x4461 x4457) (= x191 x925) (= x4448 (+ x4052 x3298)) (= x3922 x4504) (= x4345 x2437) (= x3700 x1634) (= x3922 x4523) (= x1888 x2678) (= x3125 (x59 292)) (= x1599 x4345) (= x2678 x126) (= x2659 x646) (= x966 x790) (= x1634 x1729) (= x1462 x2444) (= (x2681 x4033 x4400 x41) x4052) (= x303 x3383) (= x1497 x1462) (= x3728 x41)) x738) x1032))) (=> (not x4495) x4427))))))) (=> (and (and (= false x3668) (= x4686 true) (= false x4270) (= x26 true) (= x705 x26)) (not x344)) x1298))))))))) (=> (and x3986 (and (= (x59 324) x2961) (= (< 0 x2961) x2454))) (and (=> (and x2454 (and (= (= x4467 x3153) x2069) (= (x1796 1461501637330902918203684832716283019655932542975 x4467) x3153) (= x4467 (x59 196)))) (and (=> (and (and (= x1962 (x59 228)) (= (= x3162 x1962) x1332) (= x3162 (x1796 1461501637330902918203684832716283019655932542975 x1962))) x2069) (and (=> (and (and (= (= x231 x836) x677) (= (x1796 1461501637330902918203684832716283019655932542975 x836) x231) (= x836 (x59 260))) x1332) (and (=> (and (and (= x3701 x2127) (<= 0 x4680) (= x1476 x3690) (= x2382 x3868) (= (x4251 x3367 x517) x1808) (= x1976 x1962) (= x3367 x2127) (= x4292 x3533) (= x4395 x3868) (<= x4677 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2424) (= x4292 x1888) (= x4736 x4637) (= x2127 x1142) (= x4795 x1755) (= x4222 (x59 324)) (= x3269 x4535) (= x2391 x4457) (= x1676 x3690) (= x3264 x517) (= (+ x3817 x1808) x4677) (= x2424 (- x4680 x1658)) (= x526 x3264) (= x4222 x218) (= x476 x1976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1808) (>= x4677 0) (= x2228 x1976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4680) (= x3700 x3050) (= x3451 x1121) (>= x1808 0) (= x3163 x4329) (= x4680 (x514 x3409 x2228)) (= x4677 x1414) (= x4637 x1497) (= x1831 x3050) (<= 0 x2424) (= x4467 x2127) (= x2391 x460) (= x1755 x4617) (= x836 x3264) (= x2127 x3409) (= x4329 x1398) (= x218 x1658) (= x3451 x364) (= x3817 x218) (= x481 x4535) (= x2659 x1331) (= x4246 x2424)) x677) x3537) (=> (not x677) x2490))) (=> (not x1332) x4427))) (=> (not x2069) x1890))) (=> (not x2454) x3537))))) (=> (not x3549) x3857))))) (=> (not x3085) x1890))) x3627))))
(assert (x2609 x1064))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3739 x2764 x2259)))
(assert (x4077 576460752571858953))
(assert (x2609 x2990))
(assert (x2609 x1368))
(assert (x2609 x128))
(assert (= x4064 (and (not x2676) x3196)))
(assert (= (and x667 x4511) x2685))
(assert (x2609 x1591))
(assert (x2609 x2446))
(assert (x2609 x3836))
(assert (x4077 12884902500))
(assert (=> (>= 10000 x3122) (= (x4767 x3122) 0)))
(assert (x2609 x4103))
(assert (=> (<= x3543 10000) (= (x4767 x3543) 0)))
(assert (x2609 x1962))
(assert (x2609 x1925))
(assert (x2609 x1312))
(assert (= (and x4554 (not x4136)) x3584))
(assert (x2609 x2948))
(assert (x2609 x3103))
(assert (> (x2529 x2973 x184 x2590 x4402 x1597) 10000))
(assert (= (=> (and (= true x4756) (= x4756 x705) (= x3190 false) (= x125 true) (= false x2892)) x1298) x609))
(assert (x2609 x2381))
(assert (x2085 x1963))
(assert (x2609 x3275))
(assert (x2609 x918))
(assert (x2609 x3569))
(assert (= (or x4123 x666) x4650))
(assert (= (or (and x250 x597) (and x2531 x4111)) x261))
(assert (x2609 x4341))
(assert (x4077 4294967295))
(assert (x2609 x1386))
(assert (x2609 x4411))
(assert (= (=> (and (= x3346 false) (= true x4245) (= false x1579) (= x3247 true) (= x705 x3247)) x1298) x2825))
(assert (x2609 x3471))
(assert (= x1549 (and (not x1862) x2657)))
(assert (x611 x1605))
(assert (=> (<= x850 10000) (= (x4767 x850) 0)))
(assert (x2609 x856))
(assert (x2609 x4834))
(assert (x2609 x4376))
(assert (= (x1486 (x428 64 x3629 4)) x3629))
(assert (= x3227 (and (not x1539) x4439)))
(assert (x2609 x3183))
(assert (x2609 x2059))
(assert (x2609 x1497))
(assert (x2609 x1112))
(assert (= (and x3362 (not x1384)) x57))
(assert (not (x4077 (x3663 x2764 x1593 x4762 x252))))
(assert (x2609 x3877))
(assert (= x78 (and (not x2459) x4014)))
(assert (x2609 x1080))
(assert (x2609 x374))
(assert (x2609 x2688))
(assert (x2609 x3164))
(assert (= x2973 (x2466 (x3663 x2973 x2908 x4722 x3122))))
(assert (x2609 x2526))
(assert (not (x4077 (x428 64 x3491 3))))
(assert (x2609 x3216))
(assert (x2609 x1476))
(assert (x2609 x3818))
(assert (x2609 x3343))
(assert (x2609 x3988))
(assert (x4077 18446744073709551358))
(assert (x2609 x3732))
(assert (= (x2466 (x428 64 x3629 4)) 64))
(assert (x2609 x1733))
(assert (x2609 x4508))
(assert (= (x4767 18446744073709551355) 0))
(assert (= 64 (x2466 (x428 64 x3543 5))))
(assert (= x2896 x117))
(assert (x2609 x1813))
(assert (= x201 (and x3187 x2007)))
(assert (x2609 x703))
(assert (x2609 x3912))
(assert (x611 x1164))
(assert (= (and x490 x1693) x2176))
(assert (x2609 x4361))
(assert (x2369 (ite (< 18446744073709551615 x4781) 1 0) (ite (> x1647 x4781) 1 0)))
(assert (x1608 x1406))
(assert (x2609 x1555))
(assert (x2609 x2092))
(assert (x2609 x2177))
(assert (= (and x4622 x122) x1679))
(assert (= x3023 (=> (and (= x1446 true) (= true x1120) (= false x1557) (= x705 x1120) (= x3094 false)) x1298)))
(assert (x2609 x2186))
(assert (x2609 x2345))
(assert (x2609 x3253))
(assert (x2609 x4698))
(assert (x2609 x2758))
(assert (x2609 x707))
(assert (= x1474 (and x2189 x2811)))
(assert (x1608 x89))
(assert (x2609 x3831))
(assert (= x4446 (=> (and (= x2850 true) (= x3062 true) (= false x4322) (= x705 x3062) (= false x2611)) x1298)))
(assert (x2609 x2817))
(assert (x2609 x2745))
(assert (x2609 x3477))
(assert (x2609 x3580))
(assert (= x1377 (or x3901 x1713)))
(assert (x2609 x3490))
(assert (= x4815 (and x48 (not x1372))))
(assert (x2609 x1223))
(assert (= x3692 (=> (and (= x4801 (< 18446744073709551615 x1857)) (= (x59 x74) x1857) (= x74 (+ x4026 32))) (and (=> x4801 x970) (=> (and (not x4801) (and (= x4363 (x2361 (- x2948 x2617))) (= (or (and (= (<= x4363 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 192 x4363)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4363)) x3262) (= x2617 (x2302 (+ x1857 x4844))))) (and (=> (and (and (= false x3640) (= true x1412) (= true x875) (= x1177 false) (= x705 x875)) x3262) x1298) (=> (and (not x3262) (and (= x1804 (x2302 (+ 192 x4551))) (= (= (x927 (ite (> x1804 18446744073709551615) 1 0) (ite (< x1804 x4551) 1 0)) 0) x3187))) (and (=> (and (and (<= x4551 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x4551 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x4551 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1804 x4551) (= x4740 (x1796 1461501637330902918203684832716283019655932542975 x2704)) (= x2572 (= x4740 x2704)) (= x2704 (x59 x2617)) (<= 1 x1804)) x3187) (and (=> (and x2572 (and (= x4607 (x59 x1737)) (= x1695 (< 18446744073709551615 x4607)) (= x1737 (x2302 (+ 32 x2617))))) (and (=> x1695 x970) (=> (and (and (= (or (and (< x3725 x2948) (= (<= x3725 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2948))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3725) (<= x2948 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x2209) (= (x2302 (+ x2617 x4607)) x4620) (= x3725 (x2302 (+ x4620 31)))) (not x1695)) (and (=> (not x2209) x3987) (=> (and (and (= x4399 (x2302 (+ 32 x4620))) (= x550 (x59 x4620)) (= x3448 (< 18446744073709551615 x550))) x2209) (and (=> (and (and (= (x2302 (+ 31 x739)) x2493) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2493) x774) (= (x2302 (+ 31 x550)) x1391) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1391) x1505) (= (= (x927 (ite (< 18446744073709551615 x3992) 1 0) (ite (< x3992 x1804) 1 0)) 0) x4423) (= x3992 (x2302 (+ x774 x1804))) (= (x2302 (+ x1505 32)) x739)) (not x3448)) (and (=> (and x4423 (and (<= x1804 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x3992 x1804) (= (> x1291 x2948) x3671) (>= x3992 1) (<= x1804 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1804 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x3820 (x2302 (+ x1804 32))) (= (x2302 (+ x4399 x550)) x1291))) (and (=> (and (not x3671) (and (= x1094 (x2302 (+ x1737 32))) (= (= x374 x3352) x1964) (= x1702 (x2302 (+ 32 x4551))) (= x374 (x59 x1094)) (= (x2302 (+ x3820 x550)) x1667) (= x3352 (x1796 1461501637330902918203684832716283019655932542975 x374)))) (and (=> (and x1964 (and (= x1379 (< 18446744073709551615 x1219)) (= x2476 (x2302 (+ 32 x1094))) (= (x2302 (+ 32 x1702)) x1918) (= x1219 (x59 x2476)))) (and (=> x1379 x970) (=> (and (not x1379) (and (= x1279 (x2302 (+ x2367 31))) (= (or (and (<= x2948 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1279 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x2948 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1279)) (< x1279 x2948))) x3731) (= x2367 (x2302 (+ x2617 x1219))))) (and (=> (not x3731) x3987) (=> (and (and (= (< 18446744073709551615 x4210) x394) (= x4210 (x59 x2367)) (= (x2302 (+ x2367 32)) x2446)) x3731) (and (=> (and (not x394) (and (= x1140 (x2302 (+ x3992 x2631))) (= (= (x927 (ite (> x1140 18446744073709551615) 1 0) (ite (> x3992 x1140) 1 0)) 0) x2682) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1761) x224) (= x2956 (x2302 (+ 31 x4779))) (= (x2302 (+ 32 x224)) x4779) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2956) x2631) (= x1761 (x2302 (+ 31 x4210))))) (and (=> (and x2682 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3992) (< x3992 x1140) (>= x1140 1) (= x3115 (x2302 (+ 32 x3992))) (= x2079 (x2302 (+ x4210 x2446))) (<= x3992 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< x2948 x2079) x4019) (<= x3992 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (and (=> x4019 x2100) (=> (and (and (= x3211 (x59 x4267)) (= x3127 (x2302 (+ x1918 32))) (= (x2302 (+ x2476 32)) x4267) (= x2241 (= x3211 x4710)) (= (x2302 (+ x4210 x3115)) x4066) (= (x1796 1461501637330902918203684832716283019655932542975 x3211) x4710)) (not x4019)) (and (=> (not x2241) x1890) (=> (and (and (= x3239 (< 18446744073709551615 x3703)) (= (x59 x3225) x3703) (= (x2302 (+ x3127 32)) x4608) (= x3225 (x2302 (+ 32 x4267)))) x2241) (and (=> x3239 x970) (=> (and (not x3239) (and (= x101 (x2302 (+ x2617 x3703))) (= (x2302 (+ x101 31)) x416) (= x32 (or (and (< x416 x2948) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2948) (<= x416 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x416 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2948)))))) (and (=> (not x32) x3987) (=> (and x32 (and (= x2933 (x2302 (+ x101 32))) (= x587 (< 18446744073709551615 x1118)) (= (x59 x101) x1118))) (and (=> x587 x970) (=> (and (not x587) (and (= (= (x927 (ite (< 18446744073709551615 x4174) 1 0) (ite (> x1140 x4174) 1 0)) 0) x1215) (= x1264 (x2302 (+ x1118 31))) (= x3507 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1724)) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1264) x3819) (= (x2302 (+ x883 31)) x1724) (= (x2302 (+ 32 x3819)) x883) (= x4174 (x2302 (+ x1140 x3507))))) (and (=> (and (and (<= x1140 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1140 x4174) (= (x2302 (+ x1140 32)) x2215) (= (< x2948 x3230) x2696) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1140) (<= 1 x4174) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1140) (= (x2302 (+ x1118 x2933)) x3230)) x1215) (and (=> (and (not x2696) (and (= (x2302 (+ x2215 x1118)) x161) (= x3550 (x2302 (+ x4608 32))) (= (< 1 x3484) x1621))) (and (=> x1621 x970) (=> (and (and (= x3543 (x3679 224)) (= x4598 (x1796 1461501637330902918203684832716283019655932542975 x1365)) (= x3785 2) (= x1365 (x767 192)) (= (not (= x4598 x4795)) x1084) (<= x2638 1461501637330902918203684832716283019655932542975)) (not x1621)) (and (=> (and x1084 (and (= (x1796 1461501637330902918203684832716283019655932542975 x1365) x3629) (= (> x2139 2) x920) (= (x428 64 x4795 x4203) x1111) (= (x1796 255 x1119) x2139) (= x1119 (x857 x1111)) (= (x428 64 x3629 4) x4203))) (and (=> (and (not x920) (= (ite (not (= 1 x2139)) 1 0) x2083)) x2088) (=> x920 x970))) (=> (and (= x2083 (ite x1084 1 0)) (not x1084)) x2088))))) (=> x2696 x2100))) (=> (not x1215) x683))))))))))))) (=> (not x2682) x683))) (=> x394 x970))))))) (=> (not x1964) x1890))) (=> x3671 x2100))) (=> (not x4423) x683))) (=> x3448 x970))))))) (=> (not x2572) x1890))) (=> (and (and (= true x2482) (= x3748 true) (= x705 x3748) (= false x3077) (= false x1715)) (not x3187)) x1298)))))))))
(assert (x2085 x2437))
(assert (= (and (not x2749) x2135) x3158))
(assert (x2609 x1506))
(assert (x2609 x2428))
(assert (x2609 x3780))
(assert (x2609 x4104))
(assert (x2609 x2486))
(assert (= (or x1132 x3227) x3855))
(assert (x2085 x2799))
(assert (= x3561 (=> (= (not (> x4462 1)) x2033) (and x2033 x4496))))
(assert (x2574 (ite (> x3992 x1140) 1 0)))
(assert (x2609 x4268))
(assert (x2609 x4057))
(assert (= (and x2801 x1215) x3628))
(assert (x2609 x1387))
(assert (x4077 134217728))
(assert (x2609 x4531))
(assert (= x1931 (and x3365 x1903)))
(assert (=> (<= x732 10000) (= 0 (x4767 x732))))
(assert (= (and x1539 x4439) x2559))
(assert (x2609 x2399))
(assert (x133 x1119))
(assert (= (=> (and (= (< x578 x1476) x3683) (= x578 (x59 196))) (and (=> (and (not x3683) (and (= x1055 (x59 292)) (= x275 (or (and (> x3131 x1055) (= (<= x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3131))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (and (=> (and x275 (and (= (x59 x2625) x985) (= x2625 (x2302 (+ 164 x1055))) (= (< 18446744073709551615 x985) x276))) (and (=> (and (and (= x1182 (or (and (= (<= x1926 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x870)) (< x1926 x870)) (and (<= x870 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1926 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x870 (x2302 (+ 32 x2625))) (= x1926 (x2361 (- x2948 x985)))) (not x276)) (and (=> x1182 x4298) (=> (and (and (= (x59 260) x2597) (= 1 x406) (= (or (and (< x2597 x3131) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2597) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2597 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x797)) (not x1182)) (and (=> (not x797) x458) (=> (and (and (= (x2302 (+ x2597 164)) x3139) (= (> x4682 18446744073709551615) x250) (= x4682 (x59 x3139))) x797) (and (=> (and (and (= (x2361 (- x2948 x2354)) x3457) (= x2526 (x2302 (+ x3139 32))) (= (mod (* x4682 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2354) (= x1893 (or (and (< x3457 x2526) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2526) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3457))) (and (<= x2526 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3457))))) (not x250)) (and (=> (and (= (> x4682 0) x405) (not x1893)) (and (=> (and x405 (and (= x1843 (x59 260)) (= x946 (or (and (> x1843 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x3131 x1843) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1843) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (and (=> (and x946 (and (= x1727 (x2302 (+ x1843 164))) (= (x59 x1727) x3471) (= (> x3471 18446744073709551615) x4111))) (and (=> x4111 x2896) (=> (and (not x4111) (and (= (x2302 (+ 32 x1727)) x4456) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3051) (<= x4456 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x4456 x3051) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3051) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4456)))) x3893) (= x3051 (x2361 (- x2948 x839))) (= x839 (mod (* 32 x3471) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (and (=> x3893 x2674) (=> (and (= (< 0 x3471) x23) (not x3893)) (and (=> (not x23) x1317) (=> (and x23 (and (= x4505 (x2361 (- x4156 63))) (= x2675 (x59 x4456)) (= x313 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2675) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4505)) (< x2675 x4505)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4505) (> x2675 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x4156 (x2361 (- x2948 x4456))))) (and (=> (not x313) x3101) (=> (and x313 (and (= (x59 x3583) x3674) (= x3601 (= x3674 x676)) (= x3583 (x2302 (+ x2675 x4456))) (= (x1796 1461501637330902918203684832716283019655932542975 x3674) x676))) (and (=> (not x3601) x3620) (=> (and x3601 (and (= x465 (or (and (< x3069 x3131) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069) (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3131 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3069)))) (= x3069 (x59 260)))) (and (=> (and (and (= x4685 (x59 x3528)) (= x3528 (x2302 (+ x3069 164))) (= (> x4685 18446744073709551615) x1416)) x465) (and (=> x1416 x970) (=> (and (and (= x4181 (mod (* x4685 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x888 (x2361 (- x2948 x4181))) (= (x2302 (+ x3528 32)) x1030) (= x4306 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1030) (> x888 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1030 x888) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1030) (<= x888 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (not x1416)) (and (=> x4306 x970) (=> (and (not x4306) (= x782 (< 0 x4685))) (and (=> (and x782 (and (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x108) (> x225 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x225 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x108 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x225 x108))) x1601) (= (x2361 (- x2948 x1030)) x3000) (= (x59 x1030) x225) (= x108 (x2361 (- x3000 63))))) (and (=> (and (and (= (x2302 (+ x225 x1030)) x141) (= x1036 (x59 x778)) (= x1024 (or (and (> x1305 x1036) (= (<= x1036 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1305 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x1036 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1305)))) (= x4403 (x2361 (- x2948 x141))) (= (x2302 (+ x141 32)) x778) (= (x2361 (- x4403 31)) x1305)) x1601) (and (=> (and x1024 (and (= x999 (< 18446744073709551615 x1359)) (= x3526 (x2302 (+ x141 x1036))) (= (x59 x3526) x1359))) (and (=> x999 x970) (=> (and (and (= (x2302 (+ x3526 32)) x3353) (= x4718 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3338) (<= x3353 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x3353 x3338)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3338) (<= x3353 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x2361 (- x2948 x1359)) x3338)) (not x999)) (and (=> (and (not x4718) (and (= (x2302 (+ 4 x1145)) x1161) (= x3201 (< 0 x4349)) (= x4349 (x2713 x4174)) (= x1246 (x2302 (+ x1161 96))) (= (x2302 (+ 32 x1246)) x524))) (and (=> (and x3201 (and (= x1682 (x4520 x257)) (= x950 (> 6 x1781)) (= x1781 (x3220 x1682)))) (and (=> (not x950) x621) (=> x950 x3385))) (=> (and (not x3201) (= x3658 x524)) x4635))) (=> x4718 x970))))) (=> (not x1024) x970))) (=> (not x1601) x689))) (=> (not x782) x970))))))) (=> (not x465) x970))))))))))))) (=> (not x946) x1077))) (=> (and (= x1145 x2351) (not x405)) x3773))) (=> x1893 x2674))) (=> x250 x2896))))))) (=> x276 x3842))) (=> (not x275) x660))) (=> x3683 x291))) x3008))
(assert (x2609 x3457))
(assert (not (x4077 (x428 x2973 x3128 x1897))))
(assert (x2609 x1296))
(assert (x2609 x751))
(assert (= (and x4311 x362) x744))
(assert (x2609 x2058))
(assert (x2609 x3903))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007906687188642) 0))
(assert (= (=> (and (or (>= x2999 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551550 x2999)) (= (x3792 x268) x2158) (<= 66 x4469) (<= x4355 18446744073709551615) (<= x255 18446744082299486304) (<= x4361 18446744073709551615) (> x39 x2435) (<= x2693 18446744073709551615) (>= 18446744073709551549 x2999) (= x904 (+ 63 x1855)) (= (x2245 x1088) x335) (>= x3903 100) (<= x4469 18446744073709551615) (<= x2999 18446744073709551550) (= x4667 (+ x312 64)) (<= 288 x4355) (>= x2991 324) (= (+ 63 x2292) x3995) (= (x3937 288) x740) (< x312 x4667) (= x268 (x4229 320)) (not (> x2991 x39)) (= x230 (+ 31 x2521)) (not (> x4667 x4469)) (= x4361 (x2245 x77)) (= (+ x3722 x4361) x1088) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3512) x2292) (>= x255 64) (not (< x39 x3903)) (= x2977 (+ x4667 32)) (<= x2999 18446744073709551550) (>= 18446744073709551550 x2201) (not (< x312 x2999)) (= x4469 (+ x2201 x4667)) (not (> x312 x4667)) (>= x740 1) (= (= x1382 x222) x2744) (= x1882 (+ 32 x1088)) (>= 1461501637330902918203684832716283019655932542975 x222) (= x3722 (+ x4355 4)) (< x2999 x312) (>= 18446744073709551549 x2999) (<= 292 x1088) (= (+ 31 x335) x3512) (< x4059 x39) (= (x2302 (+ x2999 x2186)) x312) (<= x3903 18446744082299486596) (= x2201 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3995)) (>= 18446744082299486596 x2991) (= x2693 (x2245 196)) (= (x2245 x4455) x2521) (= (x2245 x3722) x222) (= x1382 (x1796 1461501637330902918203684832716283019655932542975 x2158)) (> x4469 x4667) (>= x312 1) (= (+ 31 x4455) x2435) (= x3903 (+ 32 x2521 x4455)) (= x2186 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x904)) (<= x1088 18446744082299486564) (= x1855 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x230)) (>= 18446744073709551550 x312) (or (>= 18446744073709551550 x2999) (>= x2999 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (or (>= x2999 115792089237316195423570985008687907853269984665640564039439137263839420088228) (>= 18446744073709551550 x2999)) (= (+ x335 x1882) x2991) (= x255 (x2361 (- x39 x3722))) (= (+ 68 x2693) x4455) (= x4458 (+ x335 x2977)) (<= x2999 18446744073709551550) (<= x335 18446744073709551615) (= x247 (ite x2744 1 0)) (<= x2999 18446744073709551549) (>= 18446744073709551615 x2521) (= (+ 32 x3722) x77) (= x4059 (+ 31 x1088))) (and (=> x2744 x4042) (=> (and (not x2744) (= x247 1)) x2016))) x3824))
(assert (= (=> (and (= x33 true) (= x1560 false) (= x4321 false) (= x119 true) (= x119 x705)) x1298) x621))
(assert (x1608 x230))
(assert (x2609 x3826))
(assert (= x1750 (and x327 x1084)))
(assert (x2085 x2281))
(assert (x2609 x3272))
(assert (= x545 (and (not x999) x1270)))
(assert (x2609 x2726))
(assert (x2609 x3146))
(assert (= (and x1964 x3941) x1768))
(assert (x2609 x908))
(assert (x2085 x467))
(assert (x4077 25769805028))
(assert (= (x4767 (x2529 x2973 x184 x2590 x4402 x1597)) (x2529 x2973 x184 x2590 x4402 x1597)))
(assert (x2609 x2913))
(assert (x2609 x77))
(assert (x2609 x4076))
(assert (=> (>= 10000 x828) (= 0 (x4767 x828))))
(assert (x2609 x3757))
(assert (x2609 x3726))
(assert (x2609 x4261))
(assert (x2085 x3512))
(assert (= x3101 (=> (and (= false x2901) (= x2030 false) (= x705 x2469) (= x1385 true) (= x2469 true)) x1298)))
(assert (x1608 x1761))
(assert (= x749 (and x201 x2572)))
(assert (x2609 x854))
(assert (= x3765 (or x1194 x1536)))
(assert (= x2362 (x4096 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362))))
(assert (x2609 x4681))
(assert (x2609 x500))
(assert (=> (<= x3054 10000) (= 0 (x4767 x3054))))
(assert (< 10000 (x3739 x2973 x1434)))
(assert (x2609 x1767))
(assert (= (x4767 12884902500) 0))
(assert (x2609 x671))
(assert (x2609 x828))
(assert (= (and x351 x3150) x2551))
(assert (x2609 x3552))
(assert (x2609 x4315))
(assert (x2609 x499))
(assert (x2609 x447))
(assert (x2609 x4430))
(assert (= x926 (and x4718 x545)))
(assert (x2609 x4710))
(assert (x2609 x2973))
(assert (x2609 x2851))
(assert (x2609 x3439))
(assert (= (x4767 25769804932) 0))
(assert (x2609 x2720))
(assert (x2609 x579))
(assert (= (and (not x1441) x832) x2196))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639903))
(assert (x2085 x1264))
(assert (= (and x1115 (not x3402)) x2040))
(assert (< (x428 64 x1365 5) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2466 (x428 64 x2787 x2308)) 64))
(assert (x2609 x1738))
(assert (x2609 x4790))
(assert (x2609 x1453))
(assert (=> (<= x3345 10000) (= (x4767 x3345) 0)))
(assert (x2609 x3249))
(assert (x2609 x3571))
(assert (x2609 x977))
(assert (x2609 x697))
(assert (= (and x3984 (not x3430)) x4542))
(assert (x2609 x3541))
(assert (x2609 x1593))
(assert (x2609 x1485))
(assert (x2609 x2577))
(assert (x2609 x4153))
(assert (x2609 x4021))
(assert (= (and x1561 x745) x2580))
(assert (x2609 x3310))
(assert (x2609 x4456))
(assert (x2609 x4399))
(assert (= x4672 (and (not x911) x2580)))
(assert (= (and x618 x3574) x1208))
(assert (= x2101 (and (not x2863) x3392)))
(assert (= 0 (x4767 18446744073709551614)))
(assert (x2609 x1130))
(assert (= x3236 (and x3034 x3515)))
(assert (x2609 x4634))
(assert (x2609 x3076))
(assert (x2609 x2326))
(assert (x2609 x3028))
(assert (x2609 x3092))
(assert (x2609 x1040))
(assert (x2609 x4485))
(assert (x2609 x265))
(assert (x1608 x2651))
(assert (= (and (not x3448) x2543) x4806))
(assert (x2609 x3289))
(assert (x2609 x559))
(assert (x2609 x2724))
(assert (x2609 x4607))
(assert (x2609 x3429))
(assert (x2609 x4348))
(assert (= x2927 (and x3855 x3711)))
(assert (= (or x846 x4793) x3952))
(assert (x2609 x3140))
(assert (= x1622 (and x1629 x1188)))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639934) 0))
(assert (= (or (and x2429 (not x2156)) (and (not x3273) x143) (and (not x1703) x4197)) x1278))
(assert (x2085 x4450))
(assert (x2609 x150))
(assert (x1276 (x3419 x1420 x3212 x1599)))
(assert (= (x4767 18446744073709551613) 0))
(assert (= x4016 (and x1839 (not x3179))))
(assert (x2609 x4204))
(assert (= x2819 (and x4383 x127)))
(assert (x2609 x3631))
(assert (x2609 x3572))
(assert (x1276 (x1159 x1181 x168 x3337)))
(assert (= 0 (x4767 18446744082299486532)))
(assert (= x2259 (x1486 (x3739 x2764 x2259))))
(assert (x4077 25769804352))
(assert (= (or x2601 x3380) x2911))
(assert (x2609 x4740))
(assert (x2609 x4809))
(assert (x2609 x2128))
(assert (> (x2644 x2764 x365 x3808 x3727 x651 x1986) 10000))
(assert (= (and x1765 x2491) x4014))
(assert (= x881 (and x3003 x326)))
(assert (= x2088 (=> (= (= 0 x2083) x1876) (and (=> (and (and (<= x4174 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1647 x4174) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4174) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4174) (>= x1647 1) (= x1647 (x2302 (+ x4174 x3933))) (= x3933 (x2302 (+ 32 x196))) (= (mod (* x4462 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x196) (= (> x4462 0) x1765) (= x257 (x2302 (+ x4174 32)))) (not x1876)) (and (=> (and (and (= (= 0 (x927 (ite (< 18446744073709551615 x4781) 1 0) (ite (> x1647 x4781) 1 0))) x2459) (= x4781 (x2302 (+ 192 x1647)))) x1765) (and (=> (not x2459) x970) (=> (and x2459 (and (<= x1647 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2832 (> 6 x1330)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1647) (> x4781 x1647) (<= x1647 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1330 (x59 164)) (<= 1 x4781))) (and (=> (not x2832) x844) (=> (and (and (= (x1796 1461501637330902918203684832716283019655932542975 x1369) x3435) (= (= x1369 x3435) x3034) (= (x59 196) x1369)) x2832) (and (=> (not x3034) x2254) (=> (and x3034 (and (= x128 (x2302 (+ 32 x1647))) (= (x59 228) x4847) (= x4753 (= x2748 x4847)) (= (x1796 1461501637330902918203684832716283019655932542975 x4847) x2748))) (and (=> (not x4753) x2254) (=> (and x4753 (and (= x2481 (x1796 1461501637330902918203684832716283019655932542975 x2988)) (= x2988 (x59 260)) (= (x2302 (+ x128 32)) x964) (= x3040 (= x2481 x2988)))) (and (=> (not x3040) x2254) (=> x3040 x916))))))))))) (=> (and (= x1647 x1145) (not x1765)) x1063))) (=> (and x1876 (= x2351 x4174)) x3773)))))
(assert (= (or x1402 x289) x940))
(assert (x2609 x2702))
(assert (x4077 100663300))
(assert (= 0 (x4767 18446744073709551612)))
(assert (x2609 x303))
(assert (x2609 x1937))
(assert (x2609 x696))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x428 64 x3543 5)))
(assert (x611 x921))
(assert (x2609 x1248))
(assert (x2609 x3538))
(assert (=> (>= 10000 x4422) (= (x4767 x4422) 0)))
(assert (x2609 x2933))
(assert (x2609 x1037))
(assert (x2609 x994))
(assert (x2609 x4603))
(assert (x1276 (x531 x791 x2888 x1686)))
(assert (x2085 x1785))
(assert (x2609 x772))
(assert (x4077 36893488168893940932))
(assert (x2085 x842))
(assert (= (and x670 x2683) x3853))
(assert (x2609 x992))
(assert (= (x2463 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x3018))
(assert (x2609 x484))
(assert (< (x428 64 x732 x1053) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2609 x2737))
(assert (x2609 x2158))
(assert (x2609 x4548))
(assert (x2609 x1761))
(assert (x2609 x1583))
(assert (x2609 x2403))
(assert (x2609 x383))
(assert (x2609 x4839))
(assert (x2609 x4273))
(assert (x611 x124))
(assert (x2609 x4299))
(assert (= (x1486 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) x3251))
(assert (x2609 x948))
(assert (x1608 x2080))
(assert (x611 x3413))
(assert (= x54 (or x1570 x1527 x2828 x3068 x4672 x2695 x1131 x2035 x4362 x2911 x4038 x4063 x2107 x4780 x2019 x4526 x3661 x2130 x3993 x3613 x837 x3793 x4777 x582 x1348 x672 x1780 x2668 x2176 x820 x451 x4468 x4517 x4498 x3002 x487 x2838 x3529 x2923 x692 x1562 x1090 x4476 x1129 x1933 x4336 x938 x258 x4697 x2819 x2944 x82 x4365 x3687 x2618 x4209 x70 x986 x760 x3124 x393 x1468 x4679 x2096 x1329)))
(assert (x2609 x1455))
(assert (x2609 x3992))
(assert (x2085 1461501637330902918203684832716283019655932542975))
(assert (x2609 x1785))
(assert (x2609 x1036))
(assert (= (and x1441 x832) x691))
(assert (x2609 x912))
(assert (x2609 x3742))
(assert (= (and x4053 (not x4019)) x4473))
(assert (x2609 x1554))
(assert (= (=> (and (>= 201326596 x1453) (= (+ x4017 x1610) x341) (>= 18446744073709551615 x2711) (<= 676 x2810) (or (<= x2711 18446744073709551615) (>= x2711 115792089237316195423570985008687907853269984665640564039457584007906687188802)) (>= 18446744073709551615 x2711) (= (x910 x2810) x1453) (= x1610 (+ 32 x2810)) (not (< x3911 x2711)) (<= x2810 25769805028) (>= x3911 1) (>= 18446744073709551615 x3911) (< x2711 x3911) (or (>= x2711 115792089237316195423570985008687907853269984665640564039457584007906687188802) (>= 18446744073709551615 x2711)) (= x4017 (* 128 x1453)) (= x4808 (* 32 x1453)) (= x3911 (x2302 (+ x1739 x2711))) (= (+ 63 x4808) x3664) (= (+ x1223 32) x2817) (or (>= 18446744073709551615 x2711) (<= 115792089237316195423570985008687907853269984665640564039457584007906687188802 x2711)) (<= x2711 18446744073709551614) (<= x2711 18446744073709551614) (>= x341 708) (<= x341 25769805060) (= x895 (+ 31 x2810)) (= (x910 x2817) x3967) (< x895 x616) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3664) x1739) (= (+ x542 x3967) x2810) (>= 25769804352 x3967) (>= 18446744073709551615 x2711) (= x1681 (> x341 x1610)) (<= x2711 18446744073709551614) (not (> x341 x616))) (and (=> (and (= x1510 x3911) (not x1681)) x2375) (=> x1681 x4612))) x1285))
(assert (= (and x4325 x3137) x258))
(assert (x611 x4450))
(assert (=> (>= 10000 x1722) (= (x4767 x1722) 0)))
(assert (= x2111 (and x2402 x2966)))
(assert (= x4320 (=> (and (= (x1796 1461501637330902918203684832716283019655932542975 x2477) x4524) (= x1595 (x2302 (+ x3989 32))) (= x24 (x4188 x3263)) (= x3989 (x2302 (+ 32 x1551))) (= (not (> x72 1)) x3013) (= (x2302 (+ x1309 32)) x1407) (= x310 (x2302 (+ x61 32))) (= (x2343 x310) x2477) (= (x2302 (+ 32 x1112)) x3263) (= x2406 (x4797 x1112)) (= (x2302 (+ 32 x310)) x1112) (= (x2302 (+ x1595 32)) x1309)) (and (=> (= x4154 x1407) x2592) x3013))))
(assert (x2609 x2675))
(assert (x2609 x2064))
(assert (x2609 x274))
(assert (= x2550 (or x3231 x3082)))
(assert (x2609 x2999))
(assert (= (x4767 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)) (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)))
(assert (=> (>= 10000 x3015) (= 0 (x4767 x3015))))
(assert (= x3827 (and x3441 (not x1134))))
(assert (= x1943 (and x670 (not x2683))))
(assert (x2609 x3598))
(assert (x2609 x2787))
(assert (x2609 x2150))
(assert (x2609 x1840))
(assert (= x3561 x3396))
(assert (= x4197 (and x3273 x143)))
(assert (x2609 x1835))
(assert (x2609 x432))
(assert (x2609 x3442))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)))
(assert (x2085 x429))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007906687188642))
(assert (x2609 x2542))
(assert (x2609 x3203))
(assert (x2609 x865))
(assert (x2609 x2708))
(assert (x2609 x1952))
(assert (x2609 x2642))
(assert (x2609 x1889))
(assert (= x2764 (x2466 (x2644 x2764 x365 x3808 x3727 x651 x1986))))
(assert (x2609 x1727))
(assert (x2609 x2908))
(assert (x2609 x4415))
(assert (= (and x4711 (not x1182)) x3870))
(assert (= (and x3850 x3007) x143))
(assert (x2609 x3415))
(assert (x2609 x1963))
(assert (x2609 x1960))
(assert (x2609 x904))
(assert (= (or x3056 x650) x2084))
(assert (x2609 x4132))
(assert (= x4480 (=> (= x4397 (= x2303 0)) (and (=> (not x4397) x4124) (=> x4397 x990)))))
(assert (x2609 x99))
(assert (x2609 x3704))
(assert (= x2646 (and (not x173) x2236)))
(assert (= (and x4583 x3262) x4526))
(assert (x2609 x3885))
(assert (= (x4767 2657635784) 0))
(assert (= (x4096 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)) x907))
(assert (= 0 (x4767 18446744073709551487)))
(assert (x2609 x1524))
(assert (= x991 (=> (and (= true x2192) (= x2145 true) (= false x1878) (= x705 x2192) (= false x272)) x1298)))
(assert (= x1317 (=> (and (= false x2417) (= x3104 true) (= x4735 false) (= true x4317) (= x705 x4317)) x1298)))
(assert (x2085 x2477))
(assert (x2609 x255))
(assert (x2609 x2836))
(assert (x2609 x3508))
(assert (x2609 x2785))
(assert (x2609 x2138))
(assert (x2609 x3079))
(assert (x2609 x1580))
(assert (= (x4767 18446744082299486496) 0))
(assert (x2609 x2151))
(assert (x611 x429))
(assert (= x3429 (x951 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374))))
(assert (x2609 x3244))
(assert (x1276 (x656 x695 x2782 x424)))
(assert (x2609 x542))
(assert (x2609 x3363))
(assert (x2609 x222))
(assert (x2609 x4422))
(assert (x2609 x2522))
(assert (x2609 x4319))
(assert (= x990 (=> (and (= false x2426) (= x705 x2752) (= true x2634) (= x2752 true) (= false x4208)) x1298)))
(assert (x2609 x1168))
(assert (x2609 x1448))
(assert (= x1077 (=> (and (= true x2715) (= x705 x2715) (= true x3510) (= false x3182) (= false x2864)) x1298)))
(assert (x2609 x137))
(assert (x2609 x1927))
(assert (x2609 x176))
(assert (= x1903 (and x4225 (not x3423))))
(assert (= (or x4810 x805) x2107))
(assert (= (=> (and (and (= (<= x4165 x350) x2594) (and (= x350 (x3646 x3483)) (= x3483 x1306))) (and (>= 18446744073709551614 x488) (= false x1155) (not (< x4761 x2191)) (< x488 x3208) (<= x1510 18446744073709551612) (= false x4778) (< x2591 x616) (>= x1958 676) (= x2650 (+ 31 x4466)) (< x4761 x488) (= (+ 63 x3248) x2080) (>= 1461501637330902918203684832716283019655932542975 x4062) (>= 18446744073709551611 x1510) (>= 25769804868 x1571) (= x3248 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x511)) (<= 676 x1949) (= x1451 (+ 32 x854 x1949)) (= x447 (+ 32 x642)) (= (x910 x2064) x3270) (= x1559 (x910 x2858)) (= x3332 (+ x2858 32)) (= (+ x3059 31) x397) (>= x1451 708) (<= x919 25769804352) (>= 25769805028 x1958) (= x4405 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2739)) (= (+ 31 x1958) x2591) (<= x3059 25769804352) (or (<= x1510 18446744073709551420) (>= x1510 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (= (x910 x1544) x919) (= x2858 (+ 32 x1571)) (>= 1461501637330902918203684832716283019655932542975 x1471) (= x543 false) (= (x910 x1949) x854) (>= x1571 676) (not (> x488 x3208)) (<= 4 x3208) (= 0 x2103) (<= x1902 25769804384) (= (x2361 (- x616 x1571)) x1902) (not (< x616 x1293)) (= x3846 false) (= x1293 (+ 32 x4466 x2664)) (<= x4018 25769805060) (= (x910 x1958) x3059) (= (x910 x1571) x1471) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2080) x2142) (>= x1293 708) (= (+ x1571 x2806) x4466) (>= 1461501637330902918203684832716283019655932542975 x3407) (= x488 (+ x4405 x4761)) (= (+ 32 x3332) x1544) (= (+ x2142 x488) x3208) (<= x854 25769804352) (>= 25769805060 x1451) (not (> x1510 x2191)) (<= x1559 25769804352) (<= x1949 25769805028) (< x2392 x616) (= (+ x2817 32) x2064) (not (> x4761 x488)) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3485) x3546) (<= x2806 25769804352) (= (+ 31 x1949) x2392) (>= x1902 192) (< x1510 x2191) (<= x3208 18446744073709551615) (>= 18446744073709551611 x1510) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3757) x436) (not (> x1451 x616)) (<= 676 x4466) (= x1958 (+ x1559 x1571)) (= x4761 (+ x2191 x3546)) (= (ite (= 0 (ite (= x3826 x3675) (ite (= x2579 x787) 1 0) (ite (= x3826 x3675) 1 0))) (ite (= x3675 x3826) (ite (= x2579 x787) 1 0) (ite (= x3826 x3675) 1 0)) (ite (= x4082 x2216) 1 0)) x2103) (= x1916 true) (<= x4466 25769805028) (<= 3 x488) (>= 25769804192 x3270) (>= 18446744073709551613 x4761) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x397) x3707) (>= x4018 708) (= (x910 x3332) x4062) (= x642 (+ 32 x1544)) (= (+ x3059 x1958 32) x4018) (= (x910 x447) x2806) (= x3485 (+ x3707 63)) (= (+ 31 x854) x3757) (> x616 x2650) (or (>= x1510 115792089237316195423570985008687907853269984665640564039457584007913129639745) (<= x1510 18446744073709551420)) (>= 18446744073709551612 x1510) (or (>= 18446744073709551420 x1510) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639745 x1510)) (= x2739 (+ x436 63)) (= x3407 (x910 x642)) (<= x1293 25769805060) (= (x2302 (+ x1510 192)) x2191) (<= x1510 18446744073709551611) (= x2664 (x910 x4466)) (not (< x616 x4018)) (= (+ x3270 x542) x1571) (>= x4761 2) (= x1949 (+ x919 x1571)) (< x2191 x4761) (<= x2664 25769804352) (>= 18446744073709551612 x1510) (= (+ 31 x2664) x511))) (and (=> (and (not x2594) (and (= x1653 true) (= false x1009) (= x1653 x705))) x1298) (=> x2594 x626))) x2375))
(assert (= x2210 (and x3040 x4196)))
(assert (= (or x3226 x1939) x2450))
(assert (x2609 x2803))
(assert (x2609 x3727))
(assert (= x251 (and x465 x3996)))
(assert (x2085 x1899))
(assert (= (and x1332 x884) x737))
(assert (x611 x2181))
(assert (x2085 x2181))
(assert (x1608 x2206))
(assert (x2609 x861))
(assert (x2609 x2866))
(assert (x2609 x1986))
(assert (= x4491 (and x3335 x281)))
(assert (x2609 x4414))
(assert (x2609 x1293))
(assert (x2609 x2141))
(assert (x2609 x2474))
(assert (x2609 x2194))
(assert (= x1402 (and x4285 x2251)))
(assert (= x1271 (and x4644 x4553)))
(assert (x2609 x1311))
(assert (x2609 x1803))
(assert (= (and (not x2385) x1464) x4833))
(assert (x1608 x2143))
(assert (x2609 x2143))
(assert (x2609 x2374))
(assert (x2609 x4256))
(assert (x2085 x2009))
(assert (x2609 x1203))
(assert (x2609 x2500))
(assert (x2609 x1026))
(assert (= x2100 (=> (and (= x705 x594) (= false x1502) (= x4073 true) (= x3321 false) (= x594 true)) x1298)))
(assert (= (x2463 (x2644 x2764 x365 x3808 x3727 x651 x1986)) x3808))
(assert (= (x2463 (x2644 x2973 x102 x696 x1947 x828 x3835)) x696))
(assert (= (and x3685 x376) x4285))
(assert (x2085 x374))
(assert (x2609 x385))
(assert (x2609 x4524))
(assert (x2609 x1515))
(assert (= (and (not x1124) x1645) x510))
(assert (x2609 x3882))
(assert (x2609 x2650))
(assert (= (=> (and (= x1284 true) (= x705 x1284) (= x3516 false) (= false x2777) (= x402 true)) x1298) x266))
(assert (x2609 x1147))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2644 x2764 x365 x3808 x3727 x651 x1986)))
(assert (=> (>= 10000 x1434) (= 0 (x4767 x1434))))
(assert (x2574 (ite (> x1804 x3992) 1 0)))
(assert (not (x4077 (x2529 x2973 x184 x2590 x4402 x1597))))
(assert (x2609 x1058))
(assert (= (and x204 x1185) x2359))
(assert (x2609 x3567))
(assert (x2609 x1460))
(assert (x2609 x3629))
(assert (= x3345 (x1486 (x428 x2764 x3345 x498))))
(assert (x611 x822))
(assert (x2609 x930))
(assert (x2609 x2607))
(assert (x2609 x2009))
(assert (x2609 x4233))
(assert (= 0 (x4767 18446744073709551357)))
(assert (x2609 x2357))
(assert (x2609 x885))
(assert (x2609 x757))
(assert (x2609 x228))
(assert (x2574 (ite (< 18446744073709551615 x3992) 1 0)))
(assert (x2609 x3049))
(assert (= (and (not x394) x2873) x2924))
(assert (= (and (not x4097) x2074) x3250))
(assert (x2609 x40))
(assert (= (x4767 18446744073709551550) 0))
(assert (x2609 x2573))
(assert (x2609 x3112))
(assert (x2609 x550))
(assert (x2609 x4017))
(assert (x2085 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x3265 (not x4801)) x4583))
(assert (x2609 x4357))
(assert (x2574 (ite (< 18446744073709551615 x4781) 1 0)))
(assert (=> (<= x1593 10000) (= (x4767 x1593) 0)))
(assert (= x1185 (and (not x4386) x3421)))
(assert (= x417 (and x2947 x1701)))
(assert (x2609 x1330))
(assert (x2609 x3921))
(assert (x2609 x3658))
(assert (x2609 x2350))
(assert (x2609 x3835))
(assert (x2609 x3858))
(assert (x2609 x1836))
(assert (x4077 18446744073709551613))
(assert (> (x428 64 x1365 5) 10000))
(assert (x2085 x3666))
(assert (x2609 x2079))
(assert (x2609 x2317))
(assert (not (x4077 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362))))
(assert (x4077 4294967390))
(assert (x2609 x2722))
(assert (= x4152 (=> (and (not (< x2951 x470)) (= x1392 (x910 260)) (or (>= x470 115792089237316195423570985008687907853269984665640564039457584007906687188642) (>= 18446744073709551615 x470)) (<= x470 18446744073709551614) (<= x470 18446744073709551614) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1021) x274) (>= x239 100) (= x1648 (+ 31 x2256)) (<= x470 18446744073709551615) (<= x470 18446744073709551615) (= (x910 x2256) x4572) (<= x4572 201326601) (= (* x4572 32) x3079) (not (> x239 x616)) (>= 18446744073709551614 x470) (= x1437 (> x239 x2539)) (= x239 (+ x2539 x903)) (= (+ 63 x3079) x1021) (or (<= x470 18446744073709551615) (<= 115792089237316195423570985008687907853269984665640564039457584007906687188642 x470)) (< x470 x2951) (> x616 x1648) (or (<= 115792089237316195423570985008687907853269984665640564039457584007906687188642 x470) (<= x470 18446744073709551615)) (>= 25769804960 x1392) (<= 1 x2951) (<= x239 25769805060) (= x2951 (x2302 (+ x470 x274))) (= (+ x1392 68) x2256) (= x903 (* x4572 128)) (<= x2951 18446744073709551615) (>= 18446744073709551615 x470) (= (+ x2256 32) x2539)) (and (=> (and (= x2951 x2460) (not x1437)) x4688) (=> x1437 x408)))))
(assert (=> (<= x1986 10000) (= 0 (x4767 x1986))))
(assert (= x3795 (and x3636 x3037)))
(assert (x2609 x2281))
(assert (= x4297 (and x3482 (not x4249))))
(assert (x1608 x2642))
(assert (x2609 x4589))
(assert (x2609 x3674))
(assert (x2609 x2699))
(assert (x2609 x2510))
(assert (= (and x4225 x3423) x3685))
(assert (x2085 x1952))
(assert (x2609 x2554))
(assert (= x1561 (or x507 x2179)))
(assert (x2609 x1113))
(assert (x2609 x836))
(assert (x2609 x2153))
(assert (= (or (and x4053 x4019) (and x2696 x3628) (and x4232 x3671)) x4697))
(assert (< (x428 64 x4795 x2048) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2609 x4731))
(assert (x2609 x378))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x428 64 x956 4)))
(assert (x4077 25769804992))
(assert (x2085 x1272))
(assert (x2609 x1793))
(assert (x2609 x653))
(assert (x2609 x3420))
(assert (x2609 x585))
(assert (= (and (not x3239) x1418) x1670))
(assert (= x117 x3057))
(assert (x2609 x36))
(assert (= (x2466 (x428 64 x732 x1053)) 64))
(assert (= x2307 (x951 (x2529 x2764 x2679 x1222 x2307 x3360))))
(assert (x2609 x2488))
(assert (= x2167 (and x2934 (not x2753))))
(assert (= x1324 (and x737 x677)))
(assert (x2609 x3880))
(assert (x2609 x4566))
(assert (= (and x3853 x454) x2601))
(assert (= x2778 x1325))
(assert (x611 x1080))
(assert (x611 x2704))
(assert (x2085 x3794))
(assert (= (and x2246 x1110) x807))
(assert (x611 x3907))
(assert (= x1109 (and x2556 x794)))
(assert (x2609 x3445))
(assert (= (x1486 (x2529 x2973 x184 x2590 x4402 x1597)) x184))
(assert (x2609 x1354))
(assert (x611 x67))
(assert (x2609 x15))
(assert (x2609 x2546))
(assert (x2609 x2977))
(assert (x2609 x7))
(assert (x2609 x4393))
(assert (x2609 x3325))
(assert (x2609 x3543))
(assert (= x4711 (and x984 (not x276))))
(assert (x2085 x3496))
(assert (x4077 2657635784))
(assert (= x1104 (and (not x3759) x2550)))
(assert (x4077 12884902404))
(assert (= x1397 (and x2394 x145)))
(assert (x2609 x827))
(assert (x2609 x429))
(assert (x2609 x1119))
(assert (= x2368 (and x2093 (not x313))))
(assert (x2609 x909))
(assert (x2085 x99))
(assert (= x2433 (and x2453 x2497)))
(assert (x2609 x2378))
(assert (x2609 x2032))
(assert (x2609 x886))
(assert (=> (<= x3727 10000) (= (x4767 x3727) 0)))
(assert (x2609 x3677))
(assert (= x732 (x1486 (x428 64 x732 x1053))))
(assert (x2609 x3761))
(assert (= (x4767 18446744082299486564) 0))
(assert (= 0 (x4767 12884902464)))
(assert (=> (>= 10000 x2787) (= 0 (x4767 x2787))))
(assert (x2609 x4309))
(assert (x2609 x4807))
(assert (=> (>= 10000 x2099) (= 0 (x4767 x2099))))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007909908414274))
(assert (x2609 x2235))
(assert (x2609 x268))
(assert (x2609 x2739))
(assert (x2609 x239))
(assert (= x1374 (and (not x4611) x3531)))
(assert (x2609 x2494))
(assert (x2609 x1430))
(assert (not (x4077 (x428 64 x4795 x4203))))
(assert (x1608 x1922))
(assert (x2609 x4515))
(assert (x2609 x2313))
(assert (x2609 x1832))
(assert (x2609 x1291))
(assert (x2609 x4009))
(assert (x2085 x2349))
(assert (x2369 (ite (< 18446744073709551615 x4265) 1 0) (ite (< x4265 x2613) 1 0)))
(assert (< 10000 (x428 64 x3629 4)))
(assert (x2609 x598))
(assert (x1608 x1439))
(assert (x2609 x3666))
(assert (x2609 x253))
(assert (x2609 x2018))
(assert (= (x2466 (x428 64 x3491 3)) 64))
(assert (x2609 x3820))
(assert (x2609 x3292))
(assert (= (and x4575 x3760) x3039))
(assert (x2609 x3045))
(assert (x2609 x4450))
(assert (x2609 x1668))
(assert (= (x428 64 x956 4) (x4767 (x428 64 x956 4))))
(assert (x1276 (x4251 x3367 x517)))
(assert (= (and x2863 x3392) x3539))
(assert (x2609 x1957))
(assert (x2609 x4720))
(assert (x2609 x3456))
(assert (= x2257 (and (not x1188) x1629)))
(assert (= x4264 (and (not x4432) x2562)))
(assert (x2609 x956))
(assert (x2609 x4479))
(assert (x2609 x1610))
(assert (x2609 x1584))
(assert (= (and (not x269) x2433) x3198))
(assert (= x2134 (and x139 (not x3359))))
(assert (= (or x1400 x3307) x4439))
(assert (x2609 x3080))
(assert (x2609 x4556))
(assert (= (=> (and (<= x398 25769804800) (= x2928 (+ x688 31)) (= x688 (+ x4392 x3689)) (<= 192 x3283) (= (+ x1308 32 x2340) x2298) (= (x910 x1360) x3865) (>= 18446744073709551354 x2460) (= x4605 (+ x1360 32)) (= (x910 x688) x3222) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4748) x4687) (>= 1461501637330902918203684832716283019655932542975 x2579) (not (< x616 x3260)) (or (<= x2460 18446744073709551163) (>= x2460 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (= x91 (+ x1336 x137)) (= x3460 (x910 x1223)) (= (x910 x4605) x4392) (<= x2460 18446744073709551355) (= x2745 (+ x91 x3650)) (>= x2224 100) (>= 1461501637330902918203684832716283019655932542975 x4082) (= (x910 x2340) x1308) (or (>= x2460 115792089237316195423570985008687907853269984665640564039457584007913129639745) (>= 18446744073709551163 x2460)) (= (+ x398 68) x3689) (= (+ x1707 32 x2089) x3260) (>= 25769804992 x3283) (>= 25769805060 x2053) (= (+ 32 x3689) x2816) (= x2579 (x910 x4176)) (>= 25769805028 x1707) (= (x2302 (+ 192 x2460)) x1336) (= x2661 (+ 31 x2340)) (not (> x2745 x3631)) (= x1866 (+ 32 x2816)) (= (+ x4177 31) x3410) (>= 25769805060 x2298) (<= x4404 25769804960) (= (+ x1457 32) x1360) (not (< x616 x2053)) (= (+ 4 x2022) x542) (>= x1588 261) (not (> x2224 x616)) (= x3439 (+ 31 x1707)) (<= x3460 25769804352) (<= 3 x2745) (<= x2340 25769805028) (<= x3260 25769805060) (> x616 x2661) (= (+ 63 x2162) x803) (= x3764 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2349)) (<= x3865 1461501637330902918203684832716283019655932542975) (= (+ 31 x3222) x2076) (>= 18446744073709551356 x91) (= x2349 (+ 31 x1308)) (not (> x1336 x91)) (>= 201326596 x198) (>= 1461501637330902918203684832716283019655932542975 x580) (< x3619 x1588) (>= 25769805028 x4177) (= (+ x4716 63) x1922) (= x3045 (x910 x363)) (= x4082 (x910 x4046)) (= (+ x542 32) x4176) (= (x910 x3689) x580) (>= x3260 100) (<= x1308 25769804960) (= (x2361 (- x616 x3689)) x3283) (= x3761 (+ x3764 63)) (not (> x3631 x3619)) (<= x3222 25769804960) (= (+ x542 x3460) x4177) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2076) x3562) (>= x2053 708) (<= 68 x688) (>= 1461501637330902918203684832716283019655932542975 x4623) (<= 2 x91) (= x4623 (x910 x1866)) (<= x4392 25769804960) (= x2092 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1922)) (> x2745 x91) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x803) x3650) (= x3772 (+ 32 x4046)) (< x2460 x1336) (<= x2460 18446744073709551355) (= x137 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3761)) (= (x2361 (- x616 x542)) x4211) (>= 1461501637330902918203684832716283019655932542975 x1296) (= (+ x2092 x3619) x1588) (= x2527 (> x2053 x908)) (= (x910 292) x398) (not (< x2745 x91)) (>= 18446744073709551358 x3631) (<= x2460 18446744073709551354) (= (* x198 128) x1583) (= (+ x363 32) x4046) (not (> x2460 x1336)) (<= x1588 18446744073709551615) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3666) x2162) (> x3619 x3631) (> x616 x3439) (= (+ x4720 x3689) x2340) (<= 256 x4211) (<= x3045 1461501637330902918203684832716283019655932542975) (> x616 x3410) (= x2224 (+ x688 32 x3222)) (< x2745 x3631) (= x3631 (+ x2745 x4687)) (< x2928 x616) (not (> x3619 x1588)) (= x3675 (x910 x542)) (or (>= 18446744073709551163 x2460) (>= x2460 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (<= x2089 25769804960) (= x4720 (x910 x2816)) (>= x1707 68) (= (+ 31 x2089) x3666) (= (+ x3689 x4404) x1707) (< x1336 x91) (<= 100 x2298) (= (+ 63 x3562) x4748) (>= 25769804384 x4211) (= (+ 32 x4177) x908) (>= 25769805028 x688) (= x4404 (x910 x1457)) (= (+ x1583 x908) x2053) (>= 18446744073709551357 x2745) (= (* 32 x198) x4716) (<= 68 x2340) (= x2089 (x910 x1707)) (= (x910 x4177) x198) (= (+ x1866 32) x1457) (<= 676 x4177) (<= x2224 25769805060) (= x1223 (+ x3772 32)) (= x1296 (x910 x3772)) (>= 18446744073709551354 x2460) (= x3619 (+ x3631 256)) (<= x4720 25769804960) (= (+ x4176 32) x363) (<= 4 x3631) (<= x2460 18446744073709551355) (not (< x616 x2298))) (and (=> x2527 x1589) (=> (and (not x2527) (= x2711 x1588)) x1285))) x4688))
(assert (x2609 x4260))
(assert (= x2934 (or x1109 x631)))
(assert (= (and x1894 x1651) x4442))
(assert (x2609 x4303))
(assert (x2609 x1434))
(assert (x2609 x1947))
(assert (x2609 x2632))
(assert (x4077 25769804960))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (x2609 x3975))
(assert (= x1629 (and x216 x2134)))
(assert (x2609 x1008))
(assert (= (and x1931 (not x3035)) x805))
(assert (= (x2466 (x428 64 x956 4)) 64))
(assert (x2609 x2125))
(assert (x2609 x96))
(assert (x2609 x1650))
(assert (x2609 x3802))
(assert (x2609 x472))
(assert (= (and x1125 (not x3601)) x3588))
(assert (x2609 x3131))
(assert (x2609 x4206))
(assert (= (x2463 (x428 64 x3491 3)) 3))
(assert (x2609 x4380))
(assert (x2609 x3902))
(assert (x2609 x2738))
(assert (x2609 x3005))
(assert (x2609 x895))
(assert (= x1939 (and x1091 x3622)))
(assert (x2609 x3719))
(assert (x2609 x4114))
(assert (x2609 x963))
(assert (x2609 x3946))
(assert (x2609 x391))
(assert (x2609 x1872))
(assert (x2609 x2693))
(assert (= x1834 (and x2840 x4599)))
(assert (x2609 x4405))
(assert (x2609 x1620))
(assert (x2609 x2665))
(assert (x2609 x349))
(assert (x2609 x3881))
(assert (x2609 x3224))
(assert (= (x4767 12884902532) 0))
(assert (= (and (not x3782) x3618) x2068))
(assert (x1608 x2739))
(assert (x2609 x296))
(assert (= x3905 (and (not x4763) x2436)))
(assert (= x1434 (x1486 (x3739 x2973 x1434))))
(assert (= x582 (or x1208 x4737)))
(assert (x2609 x2638))
(assert (x2609 x3018))
(assert (x2609 x2651))
(assert (= (and x13 (not x2071)) x1302))
(assert (< (x428 64 x2787 x2308) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2085 x2331))
(assert (= (x2466 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x2764))
(assert (= (and x1271 (not x477)) x2182))
(assert (= (x4767 1461501637330902918203684832716283019655932542975) 0))
(assert (x2609 x1720))
(assert (= x2074 (and x2015 x945)))
(assert (x1608 x286))
(assert (not (x4077 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374))))
(assert (x611 x223))
(assert (= x4496 (=> (and (= x3019 x2659) (= false x159) (= x2659 x1520) (= x3088 false) (= 1 x3519) (= x705 x3088)) x1298)))
(assert (=> (>= 10000 x252) (= 0 (x4767 x252))))
(assert (x2609 x311))
(assert (= (and x3601 x1125) x3996))
(assert (= x2212 (and x2280 (not x1688))))
(assert (= x705 x3948))
(assert (=> (<= x3251 10000) (= (x4767 x3251) 0)))
(assert (x2609 x1702))
(assert (x611 x842))
(assert (x2609 x2986))
(assert (= x627 (and (not x946) x4666)))
(assert (x2609 x3372))
(assert (x2609 x111))
(assert (= x4042 (=> (and (= (x2561 x3453) x3910) (= x4790 (x2302 (+ 32 x4469))) (>= x1959 1) (= x4135 (x2302 (+ 32 x4469))) (= x2855 (x2302 (+ x2129 x4135))) (= (x4465 x4667) x2129) (= (x2361 (- x4204 32)) x2058) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4469) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4469) (= x731 (+ x4667 32)) (= (x3937 288) x1959) (>= x2855 1) (< x4469 x2855) (= x1483 (<= x2764 224)) (= x1430 (x4229 320)) (= (x2361 (- x2855 x4469)) x4204) (= x2764 (x1746 x4469)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x4469) (= x3453 (x2302 (+ x1430 32)))) (and (=> (and (= (x2302 (+ x4790 128)) x2486) (= (x4148 x1776) x3808) (= x3637 (x2302 (+ x4790 32))) (= (x2302 (+ x2855 32)) x1399) (= (x4148 x4790) x1593) (= x2386 (x4148 x4751)) (= (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374) x2136) (= (x4148 x2656) x2099) (= x4589 (x2302 (+ 160 x4790))) (= x2451 (x2529 x2764 x2679 x1222 x2307 x3360)) (= (x4148 x4790) x2259) (= x283 (x4148 x629)) (= x3429 (x4148 x3053)) (= (x4148 x3290) x498) (= (<= x2973 224) x1495) (= (x4148 x3637) x459) (= x2679 (x4148 x4790)) (= x785 (x2302 (+ 64 x4790))) (= x3540 (x2302 (+ x1399 x4565))) (= (x4148 x1073) x4762) (>= x3540 1) (= x2553 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) (= x3028 (x2361 (- x4350 32))) (= x3317 (x2302 (+ x4790 32))) (= x1165 (x2302 (+ x4790 64))) (= (x2302 (+ 32 x4790)) x3290) (= (x4148 x4589) x907) (= (x3663 x2764 x1593 x4762 x252) x4702) (= x3727 (x4148 x785)) (= (x2644 x2764 x365 x3808 x3727 x651 x1986) x3733) (= (x3740 x3910) x4565) (= (x4148 x53) x2362) (= (x2302 (+ 160 x4790)) x53) (= (x4148 x3317) x1222) (= (x2302 (+ 64 x4790)) x1151) (= (x2302 (+ 96 x4790)) x3997) (= (x2361 (- x3540 x2855)) x4350) (= (x2302 (+ x4790 96)) x4652) (= (x2302 (+ x4790 192)) x3456) (= (x2302 (+ x4790 32)) x1073) (= x4221 (x2302 (+ x2855 32))) (= x2656 (x2302 (+ 128 x4790))) (< x2855 x3540) (= x2175 (x428 x2764 x3345 x498)) (= (x4148 x4515) x3360) (= x4313 (ite (= x2764 0) x4712 (ite (<= x2764 32) x2995 (ite (<= x2764 64) x2175 (ite (>= 96 x2764) x4702 (ite (<= x2764 128) x2451 (ite (>= 160 x2764) x3733 (ite (<= x2764 192) x2553 (ite (<= x2764 224) x2136 x4341))))))))) (= x651 (x4148 x4652)) (<= x2855 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1744 (x4148 x3997)) (= x4712 (x804 0)) (= (x4148 x3682) x252) (= (x4148 x1165) x2307) (= (x2302 (+ 64 x4790)) x3053) (= (x4148 x2377) x3018) (= x3682 (x2302 (+ x4790 64))) (= (x4148 x4790) x3015) (= (x2302 (+ x4790 96)) x4515) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2855) (= x2995 (x3739 x2764 x2259)) (= x850 (x4148 x1151)) (= x4751 (x2302 (+ 96 x4790))) (= x1040 (x2302 (+ 32 x3910))) (= (x4148 x3456) x2374) (= (x4148 x4790) x3345) (= (x4148 x4790) x4269) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2855) (= (x2302 (+ x4790 128)) x629) (= x365 (x4148 x4790)) (= x1986 (x4148 x2486)) (= x2377 (x2302 (+ 32 x4790))) (= x1776 (x2302 (+ x4790 32))) (= x2973 (x288 x2855))) (and (=> (and (= (x3633 x4221) x3251) (= x3567 (x2302 (+ 64 x4221))) (= (x3633 x975) x2151) (= x4722 (x3633 x4807)) (= (x3633 x2853) x2184) (= (x2302 (+ 32 x4221)) x44) (= x2853 (x2302 (+ 96 x4221))) (= (x2302 (+ x4221 160)) x471) (= x3406 (x2302 (+ 32 x4221))) (= (x3739 x2973 x1434) x4353) (= (x2302 (+ 32 x4221)) x1582) (= (x3663 x2973 x2908 x4722 x3122) x4409) (= (x804 0) x259) (= (x3633 x4178) x1897) (= (x2302 (+ x4221 192)) x4669) (= (x3633 x1582) x2590) (= (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295) x3944) (= x4187 (x428 x2973 x3128 x1897)) (= 1 x2397) (= (x2302 (+ x4221 96)) x2970) (= x4178 (x2302 (+ x4221 32))) (= (x2644 x2973 x102 x696 x1947 x828 x3835) x2233) (= x4108 (x3633 x3936)) (= x2120 (x3633 x2758)) (= (x2302 (+ 64 x4221)) x4282) (= x1434 (x3633 x4221)) (= x317 (ite (= 0 x2973) x259 (ite (<= x2973 32) x4353 (ite (>= 64 x2973) x4187 (ite (<= x2973 96) x4409 (ite (<= x2973 128) x3390 (ite (<= x2973 160) x2233 (ite (>= 192 x2973) x3944 (ite (>= 224 x2973) x3935 x1326))))))))) (= (x3633 x3073) x4260) (= x131 (x3633 x49)) (= x3698 (x3633 x4221)) (= x2758 (x2302 (+ x4221 64))) (= x4206 (x3633 x3406)) (= (x2302 (+ x4221 128)) x49) (= (x2529 x2973 x184 x2590 x4402 x1597) x3390) (= x3936 (x2302 (+ 32 x4221))) (= x3295 (x3633 x471)) (= x317 x4313) (= (x3633 x726) x828) (= (x3633 x4221) x184) (= x3122 (x3633 x3567)) (= (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160) x3935) (= x102 (x3633 x4221)) (= (x3633 x4221) x2908) (= (x2302 (+ 96 x4221)) x726) (= x975 (x2302 (+ 96 x4221))) (= (x3633 x4221) x3128) (= x4807 (x2302 (+ x4221 32))) (= x3389 (x3633 x3594)) (= x2322 (x2302 (+ x4221 160))) (= (x3633 x2703) x3835) (= (x2302 (+ x4221 128)) x2703) (= (x3633 x2802) x1947) (= (x3633 x44) x696) (= x1597 (x3633 x2970)) (= x3073 (x2302 (+ 128 x4221))) (= (x2302 (+ 64 x4221)) x2802) (= (x3633 x2322) x3774) (= (x3633 x4669) x4160) (= x4402 (x3633 x4282)) (= x3594 (x2302 (+ x4221 64)))) x2016) x1495)) x1483))))
(assert (x2085 x4748))
(assert (= x3015 (x1486 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374))))
(assert (= x4760 x2254))
(assert (x2609 x687))
(assert (x2609 x2397))
(assert (= 0 (x4767 18446744073709551327)))
(assert (x2609 x3144))
(assert (x2085 x4570))
(assert (x2609 x1140))
(assert (x1276 (x1881 x1914 x3287)))
(assert (x2085 x1439))
(assert (= (=> (and (= x3334 false) (= x2458 true) (= x3705 false) (= true x3851) (= x3851 x705)) x1298) x2095))
(assert (= x3520 (and x90 x3549)))
(assert (x2085 x1365))
(assert (x2609 x3559))
(assert (= x1405 (and x1747 (not x2069))))
(assert (x2609 x1851))
(assert (= x1597 (x2729 (x2529 x2973 x184 x2590 x4402 x1597))))
(assert (x2609 x360))
(assert (x2609 x4157))
(assert (x2609 x3199))
(assert (x2609 x3384))
(assert (x2609 x3655))
(assert (x2609 x4522))
(assert (=> (<= x3164 10000) (= 0 (x4767 x3164))))
(assert (x2609 x4646))
(assert (x2609 x411))
(assert (= (=> (and (= (+ x751 32) x4026) (= (> x1113 18446744073709551615) x2565) (= x1113 (x59 x4026))) (and (=> x2565 x970) (=> (and (not x2565) (and (= x1927 (x2302 (+ x2468 31))) (= x2468 (x2302 (+ x1113 x4844))) (= x3426 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2948) (> x1927 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2948 x1927) (= (<= x2948 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1927 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))) (and (=> (and x3426 (and (= x772 (x2302 (+ x2468 32))) (= (< 18446744073709551615 x1431) x4611) (= (x59 x2468) x1431))) (and (=> x4611 x266) (=> (and (not x4611) (and (= x1868 (x2302 (+ 32 x4429))) (= x2206 (x2302 (+ x1868 31))) (= x3412 (x2302 (+ x3970 x1554))) (= (mod (* 32 x1431) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4429) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2206) x3970) (= x469 (= 0 (x927 (ite (> x3412 18446744073709551615) 1 0) (ite (> x1554 x3412) 1 0)))))) (and (=> (and (and (<= 1 x3412) (= x1591 (x2302 (+ x772 x56))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1554) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1554) (< x1554 x3412) (= x3359 (> x1591 x2948)) (= x56 (mod (* 128 x1431) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x2302 (+ x1554 32)) x2294) (<= x1554 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x469) (and (=> (and (not x3359) (= (< x772 x1591) x216)) (and (=> (and x216 (and (= (x2361 (- x2948 x772)) x847) (= x1188 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x847) true) (< x847 128)) (> x847 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> x1188 x3504) (=> (and (and (= (= 0 (x927 (ite (> x2571 18446744073709551615) 1 0) (ite (> x3412 x2571) 1 0))) x1424) (= (x2302 (+ x3412 128)) x2571)) (not x1188)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3412) (> x2571 x3412) (<= x3412 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (< x1268 6) x3149) (<= x3412 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x2571) (= x1268 (x59 x772))) x1424) (and (=> (not x3149) x609) (=> (and x3149 (and (= (x2302 (+ 32 x772)) x3401) (= (x1796 1461501637330902918203684832716283019655932542975 x3809) x2541) (= (= x2541 x3809) x2669) (= x3809 (x59 x3401)))) (and (=> x2669 x1938) (=> (not x2669) x1783))))) (=> (not x1424) x1473))))) (=> (and (not x216) (= x3412 x4551)) x3692))) (=> x3359 x3364))) (=> (not x469) x906))))) (=> (not x3426) x564))))) x3624))
(assert (x2609 x638))
(assert (= (x2466 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)) x2973))
(assert (x2085 x2080))
(assert (x2609 x817))
(assert (x2609 x2984))
(assert (x2609 x3878))
(assert (x2609 x2780))
(assert (x2609 x497))
(assert (x2609 x1505))
(assert (= (=> (= x1572 x722) x3267) x3038))
(assert (x2609 x3051))
(assert (=> (<= x1222 10000) (= (x4767 x1222) 0)))
(assert (x2609 x4716))
(assert (x2609 x1860))
(assert (=> (>= 10000 x4108) (= (x4767 x4108) 0)))
(assert (= x2418 (and x866 x2275)))
(assert (= x4492 (and x2496 x4064)))
(assert (x2609 x3866))
(assert (x2609 x3889))
(assert (=> (>= 10000 x3629) (= 0 (x4767 x3629))))
(assert (x2609 x1500))
(assert (x2609 x240))
(assert (> (x3663 x2764 x1593 x4762 x252) 10000))
(assert (x611 x3211))
(assert (x2609 x3911))
(assert (x2609 x1099))
(assert (x2609 x1059))
(assert (x2609 x1867))
(assert (x2609 x929))
(assert (= 0 (x4767 18446744082299486304)))
(assert (> (x804 0) 10000))
(assert (x2609 x1027))
(assert (x2609 x644))
(assert (x2609 x4065))
(assert (x2609 x4837))
(assert (x2085 x1922))
(assert (x2609 x1432))
(assert (x2609 x2193))
(assert (x2609 x3791))
(assert (= x1693 (and x3085 x463)))
(assert (x2609 x131))
(assert (= (and x2257 x1424) x3284))
(assert (x2609 x4255))
(assert (x2085 x3254))
(assert (x2609 x3676))
(assert (x2369 (ite (> x2571 18446744073709551615) 1 0) (ite (< x2571 x3412) 1 0)))
(assert (x2609 x365))
(assert (x611 x2799))
(assert (x2085 x2206))
(assert (=> (>= 10000 x2120) (= 0 (x4767 x2120))))
(assert (= (and x4032 (not x1043)) x3596))
(assert (x4077 18446744082299486596))
(assert (x2609 x1121))
(assert (x2609 x1639))
(assert (x2609 x1034))
(assert (= (and x2330 (not x3860)) x1423))
(assert (= (and x3717 (not x2594)) x393))
(assert (x2609 x2627))
(assert (x2609 x3116))
(assert (x2609 x1204))
(assert (x2609 x1667))
(assert (x2609 x732))
(assert (= x463 (and x509 x226)))
(assert (x2609 x4059))
(assert (=> (>= 10000 x2151) (= 0 (x4767 x2151))))
(assert (x2574 (ite (< x4781 x1647) 1 0)))
(assert (x2609 x2538))
(assert (x2609 x1522))
(assert (x2609 x2847))
(assert (x1608 x397))
(assert (x2609 x357))
(assert (x2574 (ite (> x1554 x3412) 1 0)))
(assert (x2609 x283))
(assert (x2609 x3302))
(assert (x2609 x3210))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x428 64 x3491 3)))
(assert (= x2973 (x2466 (x2529 x2973 x184 x2590 x4402 x1597))))
(assert (= (and x3402 x1115) x4036))
(assert (x2609 x4808))
(assert (x2609 x58))
(assert (x2609 x3115))
(assert (= (or x665 x937) x1499))
(assert (= (and (not x1607) x3799) x567))
(assert (x2609 x3283))
(assert (x2609 x3110))
(assert (= x2842 x2994))
(assert (= x130 (and (not x454) x3853)))
(assert (= (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362) (x4767 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362))))
(assert (> (x2529 x2764 x2679 x1222 x2307 x3360) 10000))
(assert (= (or x3258 x3011) x1029))
(assert (x2609 x2544))
(assert (x2609 x314))
(assert (x2609 x3241))
(assert (x2609 x4551))
(assert (x2609 x4606))
(assert (x2609 x2660))
(assert (x2609 x3707))
(assert (x2085 x3809))
(assert (x2085 x2494))
(assert (x2609 x1277))
(assert (x2609 x3260))
(assert (= x2872 (=> (and (= x4479 (x1428 x3445)) (= x3445 (x2302 (+ x3371 32))) (= (x1796 1461501637330902918203684832716283019655932542975 x47) x2034) (= (not (< 1 x840)) x2123) (= x4603 (x2302 (+ 32 x3445))) (= (x2302 (+ 32 x73)) x3670) (= (x2302 (+ x620 32)) x1833) (= x1748 (x1207 x4603)) (= x73 (x2302 (+ 32 x1833))) (= (x2302 (+ 32 x1632)) x3371) (= (x2302 (+ x3670 32)) x200) (= x47 (x1675 x3371))) (and (=> (= x1677 x200) x2183) x2123))))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x4390 (and x738 x1824)))
(assert (x2085 x2660))
(assert (x2609 x2570))
(assert (x2609 x4481))
(assert (x2609 x4324))
(assert (x2609 x831))
(assert (x2609 x4675))
(assert (x2609 x4106))
(assert (= x3909 (and (not x465) x3996)))
(assert (= 0 (x4767 25769804960)))
(assert (= (and (not x3438) x1029) x214))
(assert (= (x4767 (x428 64 x732 x1053)) (x428 64 x732 x1053)))
(assert (not (x4077 (x428 64 x956 4))))
(assert (x2609 x954))
(assert (x2085 x67))
(assert (x1608 x3882))
(assert (x2609 x3964))
(assert (= x660 (=> (and (= true x2653) (= false x2401) (= x4743 true) (= x2024 false) (= x4743 x705)) x1298)))
(assert (x2609 x3978))
(assert (= (and x2189 (not x2811)) x2047))
(assert (= 0 (x2466 (x804 0))))
(assert (= (and (not x2796) x1230) x2562))
(assert (x2609 x521))
(assert (x2609 x3657))
(assert (x2609 x1614))
(assert (x2609 x2325))
(assert (x2609 x50))
(assert (x2609 x4363))
(assert (= 0 (x4767 18446744073709551358)))
(assert (x2609 x975))
(assert (x2085 x3379))
(assert (x611 x1365))
(assert (= (and x1397 (not x2604)) x2878))
(assert (x2609 x155))
(assert (x2609 x1926))
(assert (x2609 x343))
(assert (x2609 x1292))
(assert (x2609 x1344))
(assert (x2609 x4137))
(assert (x2609 x2348))
(assert (x2609 x3981))
(assert (= (or x3417 x214) x1289))
(assert (x611 x1364))
(assert (x2609 x880))
(assert (= x2620 (and x1819 x1721)))
(assert (x2609 x325))
(assert (= x3687 (or x2368 x3805)))
(assert (x2609 x4803))
(assert (= x4642 (and (not x4599) x2840)))
(assert (= (or x4390 (and (not x1721) x1819)) x561))
(assert (= (and x1423 (not x3185)) x2041))
(assert (x2609 x3762))
(assert (x2609 x1586))
(assert (= (x4767 (x428 64 x3629 4)) (x428 64 x3629 4)))
(assert (x2609 x4178))
(assert (x2609 x260))
(assert (x2609 x2124))
(assert (= 0 (x4767 18446744073709551611)))
(assert (= (=> (and (= x705 x2221) (= true x4754) (= x2306 false) (= x4013 false) (= x2221 true)) x1298) x195))
(assert (= x3931 (=> (and (= x705 x2438) (= x18 false) (= true x1028) (= false x4140) (= true x2438)) x1298)))
(assert (x2609 x3546))
(assert (x2609 x4771))
(assert (=> (>= 10000 x4341) (= (x4767 x4341) 0)))
(assert (= (x1486 (x2644 x2973 x102 x696 x1947 x828 x3835)) x102))
(assert (= x3779 (=> (and (= x3499 (x2302 (+ x1820 32))) (= (x2302 (+ 32 x170)) x1820) (= x3144 (x59 x3404)) (= (x2302 (+ 32 x3036)) x3404) (= (not (> x4451 x1771)) x2199) (= x1771 (x2302 (+ x4690 32))) (= (x2302 (+ 32 x2613)) x170) (= x3734 (x59 x4690)) (= (x2302 (+ x3404 32)) x4690)) (and x2199 (=> (= x4265 x1554) x3624)))))
(assert (= x139 (and x1374 x469)))
(assert (x2609 x3807))
(assert (x2609 x2940))
(assert (x2085 x3513))
(assert (=> (>= 10000 x2764) (= 0 (x4767 x2764))))
(assert (x2609 x69))
(assert (= (and x285 x3397) x189))
(assert (x2609 x1922))
(assert (= (and (not x3149) x3284) x157))
(assert (x2609 x903))
(assert (x2609 x3330))
(assert (= x1325 (=> (and (= x349 (x1826 x722)) (= (not (> x349 1)) x4549)) (and x4487 x4549))))
(assert (x2609 x2120))
(assert (= x3119 (and x2807 x2277)))
(assert (x2609 x416))
(assert (= (and (not x3257) x1537) x1110))
(assert (< (x3663 x2973 x2908 x4722 x3122) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x670 (and x1271 x477)))
(assert (= (x2463 (x428 x2764 x3345 x498)) x498))
(assert (x2609 x3254))
(assert (= (=> (and (= (x2302 (+ x1355 32)) x419) (= (x2302 (+ x4071 32)) x4045) (= x1149 (x1796 1461501637330902918203684832716283019655932542975 x1605)) (= x194 (x1207 x4314)) (= x2793 (not (> x1200 1))) (= x20 (x2302 (+ 32 x4045))) (= x4314 (x2302 (+ x20 32))) (= x1605 (x1675 x4045)) (= x4747 (x2302 (+ 32 x4497))) (= (x1428 x20) x4216) (= (x2302 (+ x4747 32)) x1355) (= (x2302 (+ 32 x1263)) x4497)) (and x2793 (=> (= x419 x2081) x3883))) x4138))
(assert (= x3805 (and (not x2168) x2420)))
(assert (x2609 x4276))
(assert (= x4590 (and (not x4586) x3905)))
(assert (x133 x736))
(assert (x2609 x2616))
(assert (x2609 x3391))
(assert (= x728 (and x2203 (not x1005))))
(assert (x2609 x4211))
(assert (x2609 x2201))
(assert (= x1053 (x2463 (x428 64 x732 x1053))))
(assert (= x1464 (and (not x127) x4383)))
(assert (= x4123 (and x2021 x227)))
(assert (= (and (not x3033) x894) x3339))
(assert (x611 x2437))
(assert (= (=> (and (= x480 false) (= x1705 false) (= true x1792) (= true x329) (= x705 x1792)) x1298) x4060))
(assert (= x138 (and (not x1944) x3539)))
(assert (= x4193 (=> (and (>= 18446744073709551615 x1524) (or (>= 18446744073709551615 x1524) (<= 115792089237316195423570985008687907853269984665640564039457584007909908414274 x1524)) (= (x4513 x3241) x549) (> x761 x1524) (= (+ 36 x2094) x3241) (<= x1524 18446744073709551614) (not (< x761 x1524)) (>= 100663300 x549) (<= 68 x4564) (= (+ x3280 x3444) x4564) (= (+ 31 x3241) x823) (>= 18446744073709551614 x1524) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x286) x2979) (= x286 (+ x4398 63)) (= x761 (x2302 (+ x2979 x1524))) (<= x1524 18446744073709551615) (>= 18446744073709551614 x1524) (< x823 x3807) (= (x4513 228) x2094) (or (>= x1524 115792089237316195423570985008687907853269984665640564039457584007909908414274) (>= 18446744073709551615 x1524)) (>= x761 1) (<= x1524 18446744073709551615) (= x3444 (* x549 128)) (= (+ x3241 32) x3280) (= (x2302 (+ 32 x1524)) x1790) (<= x4564 12884902532) (<= x761 18446744073709551615) (not (> x4564 x3807)) (= x4398 (* x549 32)) (= x162 (> x4564 x3280)) (or (<= x1524 18446744073709551615) (>= x1524 115792089237316195423570985008687907853269984665640564039457584007909908414274)) (>= 12884902464 x2094)) (and (=> (and (= x761 x3694) (not x162)) x1606) (=> x162 x1841)))))
(assert (x2609 x252))
(assert (=> (>= 10000 x3295) (= (x4767 x3295) 0)))
(assert (x2085 x921))
(assert (=> (<= x459 10000) (= (x4767 x459) 0)))
(assert (x2609 x353))
(assert (x2609 x874))
(assert (x2085 x230))
(assert (not (x4077 (x2644 x2973 x102 x696 x1947 x828 x3835))))
(assert (x2609 x56))
(assert (x2609 x3073))
(assert (x1608 x2313))
(assert (= x4290 (or (and x3870 (not x797)) x1674)))
(assert (x2609 x3595))
(assert (x2609 x1718))
(assert (= x1132 (and x2735 x2559)))
(assert (x2609 x3433))
(assert (x2609 x1523))
(assert (= x2590 (x2463 (x2529 x2973 x184 x2590 x4402 x1597))))
(assert (x2609 x2331))
(assert (x2609 x995))
(assert (x2609 x1438))
(assert (= (=> (and (not (= x2963 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x2963) (>= 18446744073709551487 x2963)) (<= x2198 25769804960) (not (< x1448 x2963)) (>= 25769804932 x457) (= (not (< (+ x4643 32) x3183)) x3542) (= x503 (+ 32 x457)) (<= x2963 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (+ x503 32) x193) (= (x2302 (+ x2963 128)) x1448) (<= x352 5) (>= 18446744073709551614 x2963) (< x2963 x1448) (or (>= 18446744073709551487 x2963) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639809 x2963)) (= (x910 x193) x3647) (= x4643 (+ 32 x193)) (<= 100 x457) (<= x2963 18446744073709551614) (= (x910 x457) x352) (<= x2963 18446744073709551615) (= x2198 (x2361 (- x616 x457))) (<= x68 1461501637330902918203684832716283019655932542975) (= (x910 x4643) x2318) (= (x910 x503) x68) (>= x2198 128) (>= 18446744073709551615 x2963)) (and (=> (= x1448 x470) x4152) x3542)) x1253))
(assert (= x3908 (and x2620 (not x4088))))
(assert (= x17 (and x3672 (not x1373))))
(assert (x2085 x124))
(assert (x2085 x3757))
(assert (x2609 x2328))
(assert (=> (>= 10000 x3698) (= 0 (x4767 x3698))))
(assert (x2609 x3554))
(assert (= (and x1408 (not x829)) x1370))
(assert (x2609 x3425))
(assert (x2609 x2117))
(assert (x2609 x964))
(assert (x2609 x4429))
(assert (= x2471 (=> (and (= false x2768) (= x705 x3638) (= true x3638) (= false x420) (= x4597 true)) x1298)))
(assert (x2609 x4258))
(assert (=> (>= 10000 x1365) (= 0 (x4767 x1365))))
(assert (x2609 x1740))
(assert (x2609 x3280))
(assert (x2609 x3225))
(assert (x2609 x4523))
(assert (x2609 x2925))
(assert (x2609 x3700))
(assert (x2609 x2917))
(assert (x2609 x3408))
(assert (=> (<= x907 10000) (= 0 (x4767 x907))))
(assert (x2609 x4154))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x2007 (and (not x3262) x4583)))
(assert (x2574 (ite (< x4174 x1140) 1 0)))
(assert (= x4219 (and (not x1716) x4047)))
(assert (x2609 x4458))
(assert (x2609 x2220))
(assert (x2609 x4378))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= x4832 (and (not x250) x597)))
(assert (x2609 x4605))
(assert (x2609 x2590))
(assert (x2609 x4464))
(assert (= x487 (or x157 x129)))
(assert (x2085 x3558))
(assert (x2609 x74))
(assert (x2609 x1665))
(assert (x2609 x3054))
(assert (= x2840 (or x1104 x3357)))
(assert (x2609 x1246))
(assert (= (or x1427 x140) x507))
(assert (= (x2463 (x428 64 x2787 x2308)) x2308))
(assert (x2085 x3413))
(assert (= 0 (x4767 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (x2609 x4286))
(assert (= x35 (and x749 (not x1695))))
(assert (x2609 x1753))
(assert (x2609 x2406))
(assert (x2609 x161))
(assert (x2609 x4455))
(assert (= (x4767 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)) (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)))
(assert (x2609 x4029))
(assert (= (and x4792 (not x630)) x3324))
(assert (= (and (not x2279) x4491) x3395))
(assert (x2609 x1477))
(assert (x2609 x2595))
(assert (x2609 x3122))
(assert (x2609 x4462))
(assert (x2609 x1838))
(assert (x2609 x1126))
(assert (x2609 x3139))
(assert (x2609 x1152))
(assert (x611 x4714))
(assert (=> (>= 10000 x2679) (= 0 (x4767 x2679))))
(assert (= x915 (and (not x4718) x545)))
(assert (x2609 x1052))
(assert (x2609 x1440))
(assert (x2609 x4784))
(assert (x1608 x1724))
(assert (< 10000 (x428 64 x3491 3)))
(assert (= x2732 (or x2210 x4234)))
(assert (x4077 12884902496))
(assert (= x2019 (or (and x3259 (not x1491)) (and x818 (not x1378)) (and x90 (not x3549)))))
(assert (x2609 x234))
(assert (x2609 x2514))
(assert (= (x1486 (x428 64 x4795 x4203)) x4795))
(assert (= (=> (and (= x2015 (> x4416 0)) (= x2699 0) (= x4416 (x1826 x722))) (and (=> (not x2015) x65) (=> (and x2015 (and (= (x1826 x722) x2) (= (< 0 x2) x4097))) (and (=> (and x4097 (and (= x3766 (< 0 x2141)) (= x2141 (x1826 x722)))) (and (=> (and x3766 (and (= x3574 (= x2584 0)) (= (x2709 x982) x3959) (= x2403 (x1743 x370)) (= (x2302 (+ x722 32)) x4619) (= x3164 (x1796 1461501637330902918203684832716283019655932542975 x3959)) (= (x2302 (+ x982 32)) x370) (= x2050 (x2302 (+ 32 x370))) (= (x2302 (+ x1531 32)) x982) (= (x2795 x4619) x1531) (= (x1020 x3164) x2584) (= x2701 (x2501 x1531)) (= (x1011 x2050) x2149))) (and (=> x3574 x195) (=> (and (not x3574) (= x3402 (> x2701 5))) (and (=> x3402 x970) (=> (and (not x3402) (= x489 (= x2701 1))) (and (=> (and (not x489) (and (<= x2701 5) (= (= x2701 2) x1384))) (and (=> (and x1384 (= (= 0 (ite (not (= x2149 1)) 0 (ite (not (= x2149 1)) 1 0))) x1651)) (and (=> (and x1651 (and (= x3543 x1585) (= x2659 x107) (= x1493 x669) (= x1121 x4602) (= x1476 x1800) (= x1574 x2171) (= x3492 x197) (= x2382 x3492) (= x1249 x4602) (= x2484 x4795) (= x4580 x1717) (= x1365 x2830) (= x4580 x1888) (= x3700 x1213) (= x3163 x3535) (= x4560 x1497) (= x1213 x1444) (= x669 x481) (= x768 x4560) (= x1574 x3959) (= x4693 x943) (= x4323 x2445) (= x3535 x156) (= x1800 x4418) (= x2830 x573) (= x2445 x4457) (= x943 x2403) (= x2484 x1318))) x2778) (=> (not x1651) x704))) (=> (and (= (= x2701 3) x3195) (not x1384)) (and (=> (not x3195) x2471) (=> (and (= x4304 (= (ite (= x2149 0) 0 (ite (= x2149 0) 1 0)) 0)) x3195) (and (=> (and (and (= x493 x308) (>= x1844 0) (= x2296 x3605) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3403) (= x1469 x3178) (= x2534 x2149) (= x2403 x3219) (>= x3403 0) (= x780 x4795) (= x3605 x1365) (= x3219 x3611) (= x4381 x304) (= (+ x3466 x2583) x1844) (= x1121 x2508) (= x2376 x2861) (= x1497 x1469) (= x3200 x2534) (= x3219 x1290) (= x2300 x932) (= x852 x1476) (= x3403 (- x1697 x3200)) (= x2300 x3543) (= x1719 x1888) (<= x1844 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2508 x2950) (= x481 x1345) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2583) (= x3219 x3639) (= x3959 x304) (= x4821 x3219) (= x3466 x2534) (= x4555 x2300) (<= x1697 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x304 x3501) (<= 0 x1697) (= x4616 x1844) (= x304 x1163) (= x3455 x2659) (= x3605 x2284) (= x3700 x2376) (= x1042 x304) (= x5 x852) (= x114 x3163) (= x2382 x493) (= x3660 x4457) (<= 0 x2583) (= x2229 x1345) (= x1719 x3823) (= x1697 (x4812 x4381 x3611 x932)) (= x3604 x3403) (= x2583 (x412 x3501 x1290 x2284)) (= x3660 x2746) (= x780 x3741) (= x3555 x114)) x4304) x2778) (=> (not x4304) x2043))))))) (=> (and x489 (= (= 0 (ite (< 0 x2403) 0 (ite (> x2403 0) 1 0))) x829)) (and (=> (not x829) x934) (=> (and x829 (= x1716 (= 0 (ite (= 0 x2149) 0 (ite (= 0 x2149) 1 0))))) (and (=> (not x1716) x991) (=> (and x1716 (and (= (+ x2965 x496) x1425) (<= x496 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x300 x1497) (= (x4318 x3536 x389) x1694) (= x4100 x2149) (>= x1694 0) (= x3810 x3163) (= x1476 x115) (= x2931 x3810) (= x3498 x3828) (<= 0 x4788) (= x3828 x1888) (= x2056 x2382) (= x1825 x1786) (= x449 x3536) (= x3398 x1273) (= x4100 x4149) (>= x1425 0) (= x1121 x632) (= (x1881 x1914 x3287) x496) (<= 0 x496) (<= x1425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1286 x481) (= x3543 x2439) (= x1365 x3758) (= x1891 x152) (= x4788 (- x1694 x4149)) (= x2078 x2439) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1694) (= x3758 x3287) (= x3700 x152) (= x4457 x1825) (= x449 x3959) (= x1286 x973) (= x449 x1914) (= x3625 x3758) (= x2174 x300) (= x2042 x449) (= x389 x2439) (= x330 x4788) (= x4795 x1273) (= x1425 x849) (= x632 x4167) (= x1749 x2056) (= x1122 x449) (<= x4788 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4728 x115) (= x278 x2659) (= x2965 x4100))) x1325))))))))))) (=> (not x3766) x970))) (=> (not x4097) x4487))))) x544))
(assert (x2609 x516))
(assert (x2085 x89))
(assert (= (=> (and (= x705 x3447) (= true x3447) (= true x1940) (= false x1479) (= x968 false)) x1298) x906))
(assert (= x4792 (and x2280 x1688)))
(assert (x2609 x1471))
(assert (= (or x4665 x3341) x2966))
(assert (x2609 x4162))
(assert (= (x1486 (x428 64 x3491 3)) x3491))
(assert (x2609 x3428))
(assert (x2609 x4594))
(assert (x2609 x1256))
(assert (= (and x3618 x3782) x2063))
(assert (x2609 x1355))
(assert (x2609 x4714))
(assert (= x564 (=> (and (= true x724) (= false x2161) (= false x1946) (= true x1754) (= x705 x1754)) x1298)))
(assert (= (=> (and (= x2091 (not (> x2903 1))) (= (x2302 (+ x722 32)) x3342) (= (x3237 x2510) x2903)) (and x4846 x2091)) x1062))
(assert (= x1936 (and x3329 x248)))
(assert (x2609 x789))
(assert (x2609 x3670))
(assert (x2609 x4215))
(assert (x2609 x2266))
(assert (= 0 (x4767 25769804192)))
(assert (x2085 x223))
(assert (= x3920 (and x3443 (not x1024))))
(assert (x2609 x27))
(assert (> (x428 64 x4795 x2048) 10000))
(assert (x2609 x141))
(assert (x2609 x1172))
(assert (= (or x922 x674) x2280))
(assert (x2609 x2476))
(assert (x2609 x1361))
(assert (x2609 x4222))
(assert (x2085 x2143))
(assert (x4077 309485009821345068724781055))
(assert (= (and x3833 (not x2669)) x437))
(assert (x1608 x1264))
(assert (x2085 x3959))
(assert (x2609 x1403))
(assert (x2609 x1576))
(assert (x2609 x4827))
(assert (x1276 (x412 x3501 x1290 x2284)))
(assert (x2609 x511))
(assert (x2609 x779))
(assert (x2609 x3722))
(assert (x2609 x51))
(assert (x2609 x2160))
(assert (x2609 x2507))
(assert (x2609 x1494))
(assert (x2609 x1353))
(assert (x611 x703))
(assert (= (and (not x3994) x898) x4719))
(assert (x2574 (ite (< 18446744073709551615 x3412) 1 0)))
(assert (x2609 x3513))
(assert (x2609 x3004))
(assert (x2609 x2541))
(assert (x2085 x856))
(assert (x2609 x3608))
(assert (x2609 x3873))
(assert (x2609 x3288))
(assert (x2609 x4186))
(assert (x2609 x1465))
(assert (x2085 x4847))
(assert (x4077 18446744073709551356))
(assert (= x1527 (and (not x344) x2270)))
(assert (x2609 x823))
(assert (= (and x830 (not x162)) x3231))
(assert (x2609 x1175))
(assert (= x327 (and x1644 (not x1621))))
(assert (= x4032 (and x812 x1853)))
(assert (x2609 x2736))
(assert (= (or x1549 x366) x4336))
(assert (x2609 x2524))
(assert (= (x1486 (x428 64 x3543 5)) x3543))
(assert (x2085 x1391))
(assert (x2609 x67))
(assert (= x1783 (=> (and (= x4158 false) (= x1150 x705) (= x482 true) (= true x1150) (= false x4116)) x1298)))
(assert (x2609 x3610))
(assert (x2085 x3674))
(assert (x2609 x2617))
(assert (=> (>= 10000 x498) (= (x4767 x498) 0)))
(assert (x2609 x3647))
(assert (x2609 x4350))
(assert (x2609 x1222))
(assert (not (x4077 (x428 64 x732 x1053))))
(assert (x2609 x3381))
(assert (x2609 x4536))
(assert (= x3672 (and x3886 x382)))
(assert (x2609 x891))
(assert (x2085 x2076))
(assert (x2609 x3036))
(assert (= x1077 x458))
(assert (x2609 x4749))
(assert (= x122 (and x4592 x2188)))
(assert (= (x2466 (x2529 x2764 x2679 x1222 x2307 x3360)) x2764))
(assert (= 0 (x4767 576460752571858953)))
(assert (x2609 x855))
(assert (x2609 x3821))
(assert (x2609 x3551))
(assert (x2609 x193))
(assert (x611 x2743))
(assert (x2609 x1360))
(assert (x2609 x3175))
(assert (x2609 x4170))
(assert (= x2120 (x951 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (x2609 x649))
(assert (x2609 x1133))
(assert (=> (<= x4206 10000) (= 0 (x4767 x4206))))
(assert (not x1672))
(assert (x2609 x505))
(assert (x4077 18446744082299486496))
(assert (x2609 x1595))
(assert (= (and x2167 x1542) x2179))
(assert (x2609 x341))
(assert (= (=> (and (= (x2302 (+ 32 x3105)) x1708) (= (x59 292) x2851) (= (x2302 (+ x1708 32)) x2393) (= (x59 324) x2507) (= x3105 (x2302 (+ 32 x964))) (= x2347 (not (< 1 x4462)))) (and (=> (= x4781 x1145) x1063) x2347)) x916))
(assert (x2609 x4451))
(assert (x2609 x2631))
(assert (not (x4077 (x428 64 x1365 5))))
(assert (x2609 x3682))
(assert (=> (>= 10000 x956) (= 0 (x4767 x956))))
(assert (x4077 1622688491))
(assert (x2609 x3558))
(assert (x2609 x2356))
(assert (x2609 x4505))
(assert (x4077 18446744082299486532))
(assert (= x1742 (or x3884 x3775)))
(assert (x2609 x2810))
(assert (x2609 x2410))
(assert (x2609 x4372))
(assert (x2085 x118))
(assert (x2609 x716))
(assert (x2609 x2382))
(assert (x2609 x3591))
(assert (x2609 x4338))
(assert (= (and (not x2496) x4064) x2277))
(assert (x1608 x3379))
(assert (x2085 x1364))
(assert (= (or x2068 x2740) x2130))
(assert (x2609 x2400))
(assert (= x1617 (=> (and (= (x2302 (+ 32 x2360)) x305) (= (x1347 x2177) x3205) (= (x236 x1287) x4840) (= (not (> x448 1)) x1817) (= x3140 (x322 x305)) (= x1099 (x1796 1461501637330902918203684832716283019655932542975 x1952)) (<= x3205 5) (= (x3816 x2360) x1952) (= x2177 (x3790 416)) (= (+ x1281 32) x4415) (= (+ 32 x3836) x3020) (= (x2302 (+ 32 x2177)) x2360) (= (x2302 (+ 32 x305)) x1287) (= (+ 32 x3020) x1281)) (and (=> (= (+ 32 x4415) x2902) x479) x1817))))
(assert (= x4679 (or (and x201 (not x2572)) x4502 x1405 (and x4473 (not x2241)) x4001 x3908 (and x3941 (not x1964)))))
(assert (< 10000 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295)))
(assert (x2085 x1080))
(assert (= (x4767 (x2529 x2764 x2679 x1222 x2307 x3360)) (x2529 x2764 x2679 x1222 x2307 x3360)))
(assert (= x3990 (and x2420 x2168)))
(assert (= (x4767 12884902304) 0))
(assert (x2609 x4701))
(assert (x4077 18446744073709551487))
(assert (x2609 x4687))
(assert (x2609 x811))
(assert (= x3620 x4427))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x2609 x3506))
(assert (x611 x4847))
(assert (x2609 x1682))
(assert (x2609 x3317))
(assert (x2609 x3755))
(assert (x2609 x2046))
(assert (x2609 x4282))
(assert (= (and x1992 x4676) x2684))
(assert (x2609 x2166))
(assert (x2609 x3155))
(assert (= (x4767 18446744073709551354) 0))
(assert (not (x4077 (x428 64 x4795 x2048))))
(assert (x2609 x1305))
(assert (= x3122 (x951 (x3663 x2973 x2908 x4722 x3122))))
(assert (x2609 x3270))
(assert (x2609 x3493))
(assert (x611 x1272))
(assert (x2609 x4351))
(assert (x2609 x3746))
(assert (x2609 x2367))
(assert (= x2189 (and x2203 x1005)))
(assert (x2609 x1018))
(assert (x2609 x2723))
(assert (x2609 x3418))
(assert (x2609 x462))
(assert (x2609 x2841))
(assert (x2609 x3771))
(assert (x2609 x1171))
(assert (x2609 x1771))
(assert (x611 x2009))
(assert (= (=> (and (= x1955 true) (= x3916 x705) (= false x3612) (= x4475 false) (= true x3916)) x1298) x3987))
(assert (x2609 x2579))
(assert (x611 x4527))
(assert (x2609 x492))
(assert (= (x4767 (x428 x2764 x3345 x498)) (x428 x2764 x3345 x498)))
(assert (x2609 x1996))
(assert (= 0 (x4767 4294967396)))
(assert (= (and x807 x610) x666))
(assert (= (and x130 x175) x3118))
(assert (x2609 x1073))
(assert (x2609 x896))
(assert (= (and x1134 x3441) x3196))
(assert (x2609 x3892))
(assert (= x1408 (and x2040 x489)))
(assert (=> (<= x1744 10000) (= (x4767 x1744) 0)))
(assert (x2609 x3960))
(assert (= x2881 (and (not x920) x1750)))
(assert (= (and (not x3893) x4051) x4499))
(assert (x2609 x4438))
(assert (x2609 x312))
(assert (= x2764 (x2466 (x3739 x2764 x2259))))
(assert (= (or x2041 x1504) x4592))
(assert (= x3307 (and (not x1244) x1798)))
(assert (x1608 x856))
(assert (x4077 18446744073709551549))
(assert (x2609 x1192))
(assert (x2574 (ite (< x1804 x4551) 1 0)))
(assert (x2609 x583))
(assert (x2609 x2392))
(assert (= (=> (and (= x3847 (x59 x2968)) (= x4085 (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (> x3847 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x4348 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3847)) (> x4348 x3847)))))) (and x4085 x435)) x4124))
(assert (x2085 x1021))
(assert (=> (>= 10000 x3018) (= 0 (x4767 x3018))))
(assert (x2609 x624))
(assert (x2609 x1199))
(assert (= x618 (and x4067 x3766)))
(assert (x2609 x3255))
(assert (x2085 x822))
(assert (x2609 x3360))
(assert (= x291 (=> (and (= x4633 false) (= false x142) (= true x4724) (= x592 x705) (= x592 true)) x1298)))
(assert (= (and x630 x4792) x4289))
(assert (x2609 x2718))
(assert (= x2273 (=> (and (= (x540 x2899) x2018) (= (+ 32 x3780) x4809) (= x2798 (x2293 x3461)) (<= x2297 5) (= (x1796 1461501637330902918203684832716283019655932542975 x2018) x3152) (= (x2045 x2517) x2595) (= (x3434 x315) x2049) (= x2297 (x2253 x2798)) (= x4566 (+ x4809 32)) (= (x2302 (+ x2798 32)) x2899) (= (x2302 (+ 32 x2517)) x315) (= (x2302 (+ 32 x2899)) x2517) (= x3791 (+ 32 x4566)) (= x183 (not (< 1 x4215)))) (and x183 (=> (= (+ 32 x3791) x2265) x2404)))))
(assert (x2609 x620))
(assert (x2609 x3214))
(assert (x2609 x1200))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2609 x2876))
(assert (x2609 x557))
(assert (x2609 x3764))
(assert (x2609 x4530))
(assert (= (x4767 18446744073709551549) 0))
(assert (x2085 x904))
(assert (x2609 x3410))
(assert (x2609 x1737))
(assert (= x4402 (x951 (x2529 x2973 x184 x2590 x4402 x1597))))
(assert (= (and x2604 x1397) x3799))
(assert (=> (>= 10000 x2374) (= (x4767 x2374) 0)))
(assert (= (x951 (x2644 x2973 x102 x696 x1947 x828 x3835)) x1947))
(assert (x2609 x2467))
(assert (x2609 x4156))
(assert (x1608 x1899))
(assert (= (and x2580 x911) x1230))
(assert (= (x1486 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)) x4269))
(assert (x2609 x888))
(assert (= x4108 (x2463 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160))))
(assert (x2609 x4018))
(assert (x2609 x1025))
(assert (= (and x1437 x1289) x4793))
(assert (x2609 x4279))
(assert (= (x4767 (x428 64 x1365 5)) (x428 64 x1365 5)))
(assert (x2609 x2139))
(assert (x2609 x4151))
(assert (= (x2644 x2764 x365 x3808 x3727 x651 x1986) (x4767 (x2644 x2764 x365 x3808 x3727 x651 x1986))))
(assert (= x2543 (and x2209 x35)))
(assert (x2609 x985))
(assert (= x4203 (x2463 (x428 64 x4795 x4203))))
(assert (x4077 576460752303423488))
(assert (x2609 x4781))
(assert (= x4468 (and x226 (not x509))))
(assert (x2609 x4561))
(assert (x2609 x3461))
(assert (= x3603 (and x915 (not x3201))))
(assert (x2609 x3162))
(assert (= (and x1660 x1913) x2734))
(assert (= (and x4423 x4806) x4232))
(assert (x2609 x1929))
(assert (= x3614 (and (not x2807) x2277)))
(assert (x2609 x4828))
(assert (x2609 x4262))
(assert (x2609 x2309))
(assert (x2609 x3313))
(assert (x2609 x2149))
(assert (=> (<= x365 10000) (= (x4767 x365) 0)))
(assert (x2609 x2226))
(assert (x2609 x2853))
(assert (x2609 x3688))
(assert (x2609 x2765))
(assert (= x1593 (x1486 (x3663 x2764 x1593 x4762 x252))))
(assert (x2609 x4699))
(assert (x2609 x4470))
(assert (= x435 x1077))
(assert (x2609 x2206))
(assert (x2609 x1445))
(assert (x2609 x1196))
(assert (x2609 x2029))
(assert (= x1570 (or x3577 x4084)))
(assert (= (=> (and (= false x2442) (= false x538) (= x662 true) (= x705 x662) (= x530 true)) x1298) x65))
(assert (x2609 x1067))
(assert (x2609 x1762))
(assert (x1276 (x1965 x4146 x3568)))
(assert (x2609 x3587))
(assert (x2609 x2578))
(assert (x2609 x121))
(assert (x2609 x4463))
(assert (= 0 (x4767 1622688491)))
(assert (x2609 x1174))
(assert (x2609 x3656))
(assert (x2609 x180))
(assert (= x404 (and x251 x1416)))
(assert (x2609 x1896))
(assert (= (and x3284 x3149) x3833))
(assert (x2609 x6))
(assert (x2609 x840))
(assert (x2609 x2028))
(assert (x2609 x3015))
(assert (= 0 (x4767 25769805028)))
(assert (= (=> (and (= x4537 true) (= x1799 false) (= x705 x4346) (= x4346 true) (= x713 false)) x1298) x4760))
(assert (x2609 x1266))
(assert (x2609 x1724))
(assert (= x1468 (or (and (not x3232) x571) (and x945 (not x2015)))))
(assert (x2609 x3652))
(assert (x2609 x761))
(assert (x2609 x373))
(assert (x2609 x3375))
(assert (x2609 x4820))
(assert (= (x2729 (x792 x2764 x3015 x459 x3429 x2386 x283 x907 x2374)) x2386))
(assert (x2609 x4367))
(assert (=> (>= 10000 x4722) (= (x4767 x4722) 0)))
(assert (x2609 x3191))
(assert (x2609 x1422))
(assert (x2609 x616))
(assert (= (x2466 (x3663 x2764 x1593 x4762 x252)) x2764))
(assert (= (=> (and (= x1683 false) (= true x2140) (= x3440 false) (= true x2272) (= x2140 x705)) x1298) x2633))
(assert (x2609 x4295))
(assert (x2609 x1708))
(assert (x2609 x3910))
(assert (x4077 201326601))
(assert (x2609 x1165))
(assert (x2609 x2225))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007906687188802))
(assert (= x1418 (and x4473 x2241)))
(assert (x2609 x2666))
(assert (x2609 x4082))
(assert (= 0 (x4767 576460752303423488)))
(assert (x2609 x4443))
(assert (= (x4767 56168211265741800405898417846466446431335698074001377101504018355951975268352) 0))
(assert (x2609 x3548))
(assert (x2609 x2816))
(assert (x2609 x1837))
(assert (x2609 x4125))
(assert (x2609 x1031))
(assert (x2609 x1088))
(assert (x2609 x4751))
(assert (x2609 x1461))
(assert (= x2761 (and x1110 (not x2246))))
(assert (= (x2466 (x428 x2764 x3345 x498)) x2764))
(assert (x2609 x4761))
(assert (x2609 x1902))
(assert (= x1473 (=> (and (= x2662 false) (= true x1421) (= x2006 x705) (= x4241 false) (= x2006 true)) x1298)))
(assert (x2609 x2928))
(assert (x2609 x4274))
(assert (x2609 x4128))
(assert (= (and x4832 (not x1893)) x4805))
(assert (x2609 x4091))
(assert (x2609 x1678))
(assert (x2609 x488))
(assert (= (and x23 x4499) x2093))
(assert (x2609 x1744))
(assert (x2609 x1380))
(assert (x2609 x4630))
(assert (x2609 x1544))
(assert (x2609 x3512))
(assert (x2609 x4314))
(assert (= x3259 (and (not x3986) x3520)))
(assert (= (and x144 x3731) x2873))
(assert (x2609 x1756))
(assert (x2085 x511))
(assert (x2609 x2584))
(assert (x2609 x1015))
(assert (x2609 x4791))
(assert (= x2330 (and (not x1351) x1334)))
(assert (= (and x1679 x3798) x2135))
(assert (x2609 x3519))
(assert (x2609 x4006))
(assert (x2609 x1811))
(assert (x2609 x4669))
(assert (= x293 (=> (= (= x3999 0) x3033) (and (=> (and (not x3033) (and (< x2351 x40) (= x3289 (mod (* 32 x4462) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2849 (x2302 (+ x3289 32))) (>= x40 1) (= (x2302 (+ x2849 x2351)) x40) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2351) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2351) (= x4183 (< 0 x4462)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2351) (= (x2302 (+ 32 x2351)) x111))) (and (=> (and (= x40 x4639) (not x4183)) x85) (=> (and (and (= (x2302 (+ x40 192)) x4506) (= x936 (= 0 (x927 (ite (> x4506 18446744073709551615) 1 0) (ite (> x40 x4506) 1 0))))) x4183) (and (=> (not x936) x970) (=> (and (and (>= x4506 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x40) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x40) (= x1353 (x59 164)) (< x40 x4506) (= x3007 (> 6 x1353)) (<= x40 115792089237316195423570985008687907853269984665640564039457584007913129639934)) x936) (and (=> (not x3007) x844) (=> (and x3007 (and (= (x59 196) x2331) (= x3273 (= x186 x2331)) (= (x1796 1461501637330902918203684832716283019655932542975 x2331) x186))) (and (=> (not x3273) x2581) (=> (and x3273 (and (= x2070 (x1796 1461501637330902918203684832716283019655932542975 x842)) (= x2166 (x2302 (+ x40 32))) (= x1703 (= x2070 x842)) (= (x59 228) x842))) (and (=> (and (and (= x2156 (= x3254 x2467)) (= x3254 (x59 260)) (= (x1796 1461501637330902918203684832716283019655932542975 x3254) x2467) (= (x2302 (+ 32 x2166)) x508)) x1703) (and (=> (not x2156) x2581) (=> x2156 x4625))) (=> (not x1703) x2581))))))))))) (=> (and (= x2351 x2286) x3033) x1766)))))
(assert (= x3377 (and x2732 x4532)))
(assert (x2609 x4349))
(assert (x2609 x4614))
(assert (= (=> (and (= x4020 (x2302 (+ 32 x497))) (= (= 0 x154) x4386) (= (x2361 (- x624 x1145)) x58) (= x1085 (x2302 (+ 32 x1459))) (= x1380 (x1796 1461501637330902918203684832716283019655932542975 x179)) (= x1528 (x2302 (+ 32 x4819))) (= x89 (x2302 (+ 31 x1485))) (= x1192 (x1796 1461501637330902918203684832716283019655932542975 x2181)) (= (x2302 (+ 32 x1465)) x1584) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2651) x1756) (= x2721 (x2302 (+ 32 x440))) (= x1575 (x2302 (+ x1677 192))) (= x154 (x1020 x3674)) (= (x2302 (+ x4594 31)) x1899) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1439) x1678) (= (x1035 x2342) x124) (= x808 (x2361 (- x1677 x3658))) (= (x232 x2480) x497) (= (x2302 (+ x862 x1359)) x2097) (= (x2302 (+ 32 x1575)) x6) (= x4430 (x2302 (+ 32 x1147))) (= x1465 (x2302 (+ x2342 32))) (= x1459 (x4585 x1037)) (= (x2302 (+ 32 x2721)) x1147) (= (x3188 352) x4699) (= x4128 (x2361 (- x1368 x1677))) (= x1439 (x2302 (+ x2570 31))) (= x3579 (x4189 x1465)) (= x862 (x2302 (+ x3272 32))) (= (x2302 (+ x234 x6)) x4819) (= (x3322 x1459) x1485) (= (x2302 (+ x862 x1756)) x624) (= x2181 (x178 x4699)) (= x1506 (x2302 (+ 32 x3210))) (= (x2302 (+ x1584 32)) x2480) (= (x2302 (+ 32 x4699)) x1037) (= x440 (x2302 (+ x2750 32))) (= x2750 (x2302 (+ x1677 32))) (= x4594 (x4452 x3579)) (= (x2302 (+ x1359 31)) x2651) (= (x2302 (+ 32 x1037)) x2342) (= x2348 (x2302 (+ 32 x1368))) (= x3272 (x2302 (+ x2348 x1678))) (= (x2361 (- x3272 x1161)) x1199) (= (x1796 1461501637330902918203684832716283019655932542975 x124) x2325) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x89) x234) (= x2596 (x2302 (+ x4030 32))) (= (x294 x497) x2570) (= x1368 (x2302 (+ x1528 x3381))) (= (x11 x1584) x179) (= (x2302 (+ x3579 32)) x648) (= x2317 (x2361 (- x4819 x1677))) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1899) x3381)) (and (=> x4386 x4759) (=> (and (and (= x204 (> x2586 0)) (or (and (= x472 x2586) (not x204)) (and x204 (and (= x472 1) (>= 4294967295 x2240))))) (not x4386)) x4284))) x2183))
(assert (= (and x812 (not x1853)) x2383))
(assert (= x884 (and x1747 x2069)))
(assert (= (x4767 12884902404) 0))
(assert (=> (>= 10000 x2908) (= (x4767 x2908) 0)))
(assert (x2609 x1102))
(assert (= (or x3588 x3320 x4742) x1348))
(assert (x2609 x3248))
(assert (= (or x45 x4224) x3124))
(assert (x2609 x712))
(assert (x2609 x4191))
(assert (x2609 x870))
(assert (x2609 x1722))
(assert (x2609 x3407))
(assert (x611 x4570))
(assert (x2609 x4722))
(assert (x2609 x2320))
(assert (x2609 x2941))
(assert (x2609 x1101))
(assert (x2609 x1364))
(assert (x2609 x1013))
(assert (x2609 x2026))
(assert (=> (>= 10000 x1597) (= (x4767 x1597) 0)))
(assert (x2609 x1044))
(assert (x2609 x3703))
(assert (x1276 (x372 x1823 x4447)))
(assert (x2609 x397))
(assert (= x3531 (and x3426 x3578)))
(assert (x2609 x4221))
(assert (= (or x4144 x1943) x1780))
(assert (x2609 x2945))
(assert (= (and (not x745) x1561) x4444))
(assert (x2609 x3345))
(assert (= (and x2884 x3584) x1061))
(assert (= x1645 (and (not x238) x1975)))
(assert (= (=> (and (= x1829 x705) (= true x1829) (= x1612 false) (= x3026 false) (= x988 true)) x1298) x1890))
(assert (x2609 x4661))
(assert (x2609 x2480))
(assert (x2609 x225))
(assert (= (or x878 x4442) x4371))
(assert (x2609 x379))
(assert (x2609 x3083))
(assert (x4077 115792089237316195423570985008687907853269984665640564039457584007913129639745))
(assert (= x818 (and (not x3636) x3037)))
(assert (x2609 x4769))
(assert (x2609 x2799))
(assert (x2574 (ite (> x2571 18446744073709551615) 1 0)))
(assert (x4077 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (x2609 x445))
(assert (x2609 x1367))
(assert (= 0 (x4767 879188153)))
(assert (x2609 x2670))
(assert (x2609 x3181))
(assert (x2609 x4119))
(assert (x2609 x170))
(assert (x2609 x406))
(assert (x2609 x3579))
(assert (x2609 x1209))
(assert (x611 x1369))
(assert (x2609 x3218))
(assert (x2609 x3488))
(assert (x2609 x459))
(assert (x2609 x4734))
(assert (x2085 x2956))
(assert (= x4224 (and x4621 (not x2832))))
(assert (x2609 x4569))
(assert (= (and x570 (not x4306)) x512))
(assert (=> (>= 10000 x3360) (= (x4767 x3360) 0)))
(assert (= (=> (and (= x500 (+ 32 x1917)) (>= 12884902532 x3713) (>= 12884902500 x410) (= x885 (+ x3490 32)) (= (+ x2812 32) x2627) (>= 18446744073709551611 x3694) (>= 12884902464 x2578) (= x29 (x2361 (- x12 x697))) (not (< x3807 x734)) (= (+ 32 x959) x4803) (not (< x3807 x3755)) (= (+ 32 x3771) x2059) (<= x2848 1461501637330902918203684832716283019655932542975) (= x4765 (+ x838 x3278)) (= (+ x2981 x3278) x3713) (= x3747 (+ x2578 x1795)) (= (x4513 x3771) x4828) (= x579 (x2302 (+ 192 x3694))) (= (+ x3274 32) x2981) (= (+ 31 x410) x3964) (>= 12884902532 x3755) (> x3616 x579) (= x3759 (> x448 0)) (= (+ x885 x4414) x3755) (= x3490 (+ x4661 x3771)) (= x1872 (+ 32 x2627)) (<= x4661 12884902464) (>= x410 36) (or (<= x3694 18446744073709551420) (>= x3694 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (>= x3274 36) (= x4661 (x4513 x2627)) (< x228 x3807) (= x3274 (+ x3771 x3880)) (= x1795 (+ 32 x3243)) (= (x4513 x2059) x3880) (>= x3755 68) (<= 3 x3243) (<= x3278 12884902464) (= (x4513 x1872) x2848) (>= 12884902464 x3880) (>= x3490 36) (>= x3616 2) (= (+ 31 x3274) x228) (not (> x579 x3616)) (= x959 (+ x3927 32)) (= (x2361 (- x3807 x3771)) x1687) (>= 12884902500 x3490) (not (< x3927 x3243)) (= (+ 63 x2789) x36) (or (<= x3694 18446744073709551420) (>= x3694 115792089237316195423570985008687907853269984665640564039457584007913129639745)) (>= 12884902464 x4414) (<= x3616 18446744073709551613) (= (+ x4414 x534) x684) (<= x4828 1461501637330902918203684832716283019655932542975) (= (+ 32 x4803) x697) (>= x3713 68) (<= 192 x1687) (or (>= x3694 115792089237316195423570985008687907853269984665640564039457584007913129639745) (<= x3694 18446744073709551420)) (>= 18446744073709551612 x3694) (= x2642 (+ x673 63)) (= x3836 (+ x972 32)) (not (< x579 x3694)) (< x4134 x3807) (= x707 (+ x3957 32)) (<= x3927 18446744073709551615) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4410) x673) (<= x3694 18446744073709551612) (= x2708 (+ x500 32)) (= (+ x3243 x2930) x3927) (>= 18446744073709551611 x3694) (= x4220 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2642)) (< x3927 x959) (<= x1687 12884902496) (= (x2361 (- x697 x4803)) x886) (= x4134 (+ x3490 31)) (= (x4513 x3274) x3278) (= (+ 32 x1872) x4338) (= x1292 (x2361 (- x972 x12))) (> x579 x3694) (= (+ x2578 x4563) x734) (= x3616 (+ x579 x4220)) (= (x4513 x4338) x3988) (= (+ 32 x2708) x3957) (>= x734 68) (>= 12884902464 x3988) (= (+ 32 x3616) x534) (= x1837 (x4513 x2812)) (= x448 (x3197 384)) (>= x3927 4) (= x2949 (x4513 260)) (< x3964 x3807) (>= 18446744073709551611 x3694) (= x1917 (+ x12 32)) (= (+ 256 x12) x972) (= x838 (+ x579 32)) (= (+ x697 32) x12) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4827) x2789) (<= x734 12884902532) (= x2178 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x118)) (= (+ 36 x2949) x3771) (= (+ 31 x4414) x27) (= (+ 31 x3278) x4410) (>= 12884902500 x3274) (<= x3694 18446744073709551612) (not (< x3243 x3616)) (= (x4513 x3490) x4414) (not (> x3713 x3807)) (< x3243 x3927) (= (+ 31 x2578) x4827) (= x360 (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x27)) (= x2578 (x4513 x410)) (= x4563 (+ x410 32)) (>= 1461501637330902918203684832716283019655932542975 x1837) (= (+ x2059 32) x2812) (= x3243 (+ x2178 x3616)) (= x118 (+ 63 x360)) (>= 12884902304 x2949) (< x3616 x3243) (<= x3243 18446744073709551614) (= (x1796 115792089237316195423570985008687907853269984665640564039457584007913129639904 x36) x2930) (= x410 (+ x3771 x3988))) (and (=> x3759 x1617) (=> (and (= x2902 x3836) (not x3759)) x479))) x1606))
(assert (x2085 x803))
(assert (= (and x1423 x3185) x3335))
(assert (x2609 x4826))
(assert (= (and x1239 x2907) x48))
(assert (= (or x1324 (and (not x2454) x241)) x581))
(assert (x2609 x4825))
(assert (x2609 x736))
(assert (x4077 18446744073709551550))
(assert (x2609 x3263))
(assert (x2609 x2034))
(assert (x2609 x4327))
(assert (= x922 (and x2907 (not x1239))))
(assert (x2574 (ite (< x4265 x2613) 1 0)))
(assert (= x2923 (or (and x4644 (not x4553)) (and (not x2188) x4592))))
(assert (= (and x3932 x3990) x2203))
(assert (x2609 x2571))
(assert (x2609 x73))
(assert (x2609 x4269))
(assert (x2609 x4094))
(assert (= x685 (or x3749 x2881)))
(assert (= (and (not x1084) x327) x3749))
(assert (x2609 x101))
(assert (x2609 x958))
(assert (= x4099 (and x1742 (not x3479))))
(assert (= x3884 (or x4650 x2063)))
(assert (x2609 x3949))
(assert (x2609 x455))
(assert (x2609 x1498))
(assert (x2609 x619))
(assert (= x3320 (and x3990 (not x3932))))
(assert (= x106 (=> (and (= x3495 false) (= x235 true) (= x705 x4155) (= x3867 false) (= x4155 true)) x1298)))
(assert (x2609 x1391))
(assert (=> (>= 10000 x4795) (= (x4767 x4795) 0)))
(assert (= (x4767 25769804384) 0))
(assert (x2609 x2689))
(assert (x2609 x72))
(assert (= x456 (and x4306 x570)))
(assert (x2609 x3496))
(assert (x2609 x3634))
(assert (x2609 x684))
(assert (x2609 x2951))
(assert (x2609 x921))
(assert (= (x4767 12884902496) 0))
(assert (=> (>= 10000 x3128) (= 0 (x4767 x3128))))
(assert (x2609 x838))
(assert (x2609 x3808))
(assert (x2609 x3413))
(assert (= (and x1660 (not x1913)) x2264))
(assert (= x2531 (and x4666 x946)))
(assert (x2609 x502))
(assert (= x3489 x4202))
(assert (x2609 x4164))
(assert (x2609 x410))
(assert (x2609 x14))
(assert (x2609 x470))
(assert (x4077 25769804932))
(assert (x2609 x2087))
(assert (x2609 x2027))
(assert (x2609 x47))
(assert (x2609 x100))
(assert (= x3686 (=> (and (= x346 (x59 x1466)) (= (> x1476 x346) x1503)) (and (=> (and (and (= (+ 32 x2968) x1838) (= (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (> x2475 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (<= x2475 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x4348 x2475))) x362) (= x2475 (x59 x1838))) (not x1503)) (and (=> (not x362) x660) (=> (and x362 (and (= x4303 (x59 x1490)) (= (< 18446744073709551615 x4303) x2867) (= (x2302 (+ x3112 x2475)) x1490))) (and (=> (and (and (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2785) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1168)) (and (< x2785 x1168) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2785) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1168)))) x858) (= (x2361 (- x2948 x4303)) x2785) (= x1168 (x2302 (+ x1490 32)))) (not x2867)) (and (=> x858 x4298) (=> (and (and (= x1488 (or (and (> x4348 x1440) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1440))) (and (> x1440 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x4348 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x4331 1) (= (x59 x2968) x1440)) (not x858)) (and (=> (and (and (= x1351 (> x2882 18446744073709551615)) (= (x2302 (+ x3112 x1440)) x1196) (= (x59 x1196) x2882)) x1488) (and (=> x1351 x3057) (=> (and (and (= x2920 (x2302 (+ x1196 32))) (= x3860 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2920) (> x3746 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x3746 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2920)) (< x3746 x2920)))) (= x3746 (x2361 (- x2948 x1501))) (= x1501 (mod (* 32 x2882) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x1351)) (and (=> (and (= x3185 (> x2882 0)) (not x3860)) (and (=> (and (and (= x1044 (x59 x2968)) (= x281 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1044)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1044) (<= x4348 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1044 x4348))))) x3185) (and (=> (not x281) x1077) (=> (and x281 (and (= (> x3609 18446744073709551615) x2279) (= x3977 (x2302 (+ x1044 x3112))) (= (x59 x3977) x3609))) (and (=> x2279 x3057) (=> (and (and (= (or (and (< x2514 x845) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x845) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2514))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2514) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x845))) x2566) (= x845 (x2302 (+ 32 x3977))) (= (mod (* 32 x3609) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1183) (= (x2361 (- x2948 x1183)) x2514)) (not x2279)) (and (=> x2566 x4490) (=> (and (= x2173 (> x3609 0)) (not x2566)) (and (=> (and x2173 (and (= (x2361 (- x2948 x845)) x1068) (= x3467 (x2361 (- x1068 63))) (= x2396 (x59 x845)) (= (or (and (> x2396 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3467 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x3467 x2396) (= (<= x3467 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2396)))) x2168))) (and (=> (not x2168) x3101) (=> (and x2168 (and (= (= x3413 x1269) x3932) (= (x2302 (+ x845 x2396)) x1813) (= (x1796 1461501637330902918203684832716283019655932542975 x3413) x1269) (= (x59 x1813) x3413))) (and (=> (not x3932) x3620) (=> (and x3932 (and (= (x59 x2968) x4443) (= x1005 (or (and (<= x4348 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x4443 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4348) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4443)) (> x4348 x4443)))))) (and (=> (and (and (= x4243 (x2302 (+ x3112 x4443))) (= x2811 (> x4352 18446744073709551615)) (= x4352 (x59 x4243))) x1005) (and (=> x2811 x970) (=> (and (and (= (x2302 (+ 32 x4243)) x3518) (= (or (and (< x912 x3518) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3518) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x912))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3518) (> x912 57896044618658097711785492504343953926634992332820282019728792003956564819967))) x1596) (= x912 (x2361 (- x2948 x3617))) (= (mod (* x4352 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3617)) (not x2811)) (and (=> (and (not x1596) (= (< 0 x4352) x1853)) (and (=> (not x1853) x970) (=> (and (and (= (or (and (<= x1859 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2138)) (and (< x2138 x1859) (= (<= x2138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1859)))) x1043) (= (x59 x3518) x2138) (= x1859 (x2361 (- x1102 63))) (= x1102 (x2361 (- x2948 x3518)))) x1853) (and (=> (not x1043) x689) (=> (and (and (= (x59 x3902) x716) (= x3902 (x2302 (+ 32 x3493))) (= (x2361 (- x2948 x3493)) x3253) (= x1134 (or (and (< x716 x3831) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x716) (<= x3831 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (<= x3831 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x716)))) (= x3831 (x2361 (- x3253 31))) (= (x2302 (+ x3518 x2138)) x3493)) x1043) (and (=> (and x1134 (and (= x2780 (x2302 (+ x3493 x716))) (= (< 18446744073709551615 x3100) x2676) (= x3100 (x59 x2780)))) (and (=> (and (not x2676) (and (= x180 (x2302 (+ 32 x2780))) (= (x2361 (- x2948 x3100)) x4601) (= (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4601) (<= x180 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x4601 x180) (= (<= x4601 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x180)))) x2496))) (and (=> (and (not x2496) (and (= x455 (x2302 (+ 32 x69))) (= x4114 (x2302 (+ x4639 4))) (= (x3167 x2351) x418) (= x69 (x2302 (+ 96 x4114))) (= (> x418 0) x2807))) (and (=> (and (= x4119 x455) (not x2807)) x2388) (=> (and (and (= x1274 (x4301 x4000)) (= x4000 (x1235 x111)) (= x4752 (< x1274 6))) x2807) (and (=> x4752 x4266) (=> (not x4752) x621))))) (=> x2496 x970))) (=> x2676 x970))) (=> (not x1134) x970))))))) (=> x1596 x970))))) (=> (not x1005) x970))))))) (=> (not x2173) x1317))))))))) (=> (and (= x2286 x4639) (not x3185)) x1766))) (=> x3860 x4490))))) (=> (not x1488) x435))))) (=> x2867 x3842))))) (=> x1503 x291)))))
(assert (x2085 x3761))
(assert (x2085 x179))
(assert (< 10000 (x3739 x2764 x2259)))
(assert (= (x4767 115792089237316195423570985008687907853269984665640564039457584007909908414274) 0))
(assert (x2609 x4690))
(assert (x2609 x3673))
(assert (x2609 x3617))
(assert (x2609 x3545))
(assert (x2609 x778))
(assert (x2609 x1923))
(assert (x2609 x2891))
(assert (= (and x4575 (not x3760)) x2657))
(assert (x2609 x3107))
(assert (=> (>= 10000 x1897) (= 0 (x4767 x1897))))
(assert (x2085 255))
(assert (x611 x583))
(assert (x2609 x1137))
(assert (x2609 x3774))
(assert (x2609 x2856))
(assert (=> (>= 10000 x131) (= 0 (x4767 x131))))
(assert (x2609 x1517))
(assert (= (and x2594 x3717) x3137))
(assert (=> (<= x4402 10000) (= (x4767 x4402) 0)))
(assert (x2609 x3702))
(assert (= x3228 (=> (and (= x625 true) (= x775 true) (= x625 x705) (= x3436 false) (= false x2615)) x1298)))
(assert (= x331 (and x950 x3845)))
(assert (x2369 (ite (> x4506 18446744073709551615) 1 0) (ite (< x4506 x40) 1 0)))
(assert (x2609 x902))
(assert (x2609 x1684))
(assert (= (and x4533 (not x2547)) x1356))
(assert (x4077 18446744082299486564))
(assert (x2609 x53))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2346 x2764 x4269 x3018 x850 x1744 x2099 x2362)))
(assert (= 0 (x4767 25769804992)))
(assert (x2609 x1328))
(assert (x2609 x3784))
(assert (= x1114 (and (not x3168) x2509)))
(assert (x2609 x2224))
(assert (= x2973 (x2466 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160))))
(assert (x2609 x1842))
(assert (x2609 x843))
(assert (x2609 x2414))
(assert (x2609 x3105))
(assert (x2609 x2216))
(assert (x611 x303))
(assert (= x672 (or x3303 x2687)))
(assert (x2609 x2396))
(assert (x2369 (ite (> x2613 18446744073709551615) 1 0) (ite (> 384 x2613) 1 0)))
(assert (x2609 x1714))
(assert (=> (<= x4762 10000) (= (x4767 x4762) 0)))
(assert (x2609 x352))
(assert (x4077 18446744073709551420))
(assert (= x2674 x3228))
(assert (= (and x1607 x3799) x3002))
(assert (x2609 x1619))
(assert (x2609 x3957))
(assert (x2609 x1072))
(assert (x2609 x2750))
(assert (= x4209 (or x237 x1116)))
(assert (= (and x4833 x3811) x2828))
(assert (x2609 x398))
(assert (x2609 x3145))
(assert (x2609 x1068))
(assert (not (x4077 (x2529 x2764 x2679 x1222 x2307 x3360))))
(assert (x2609 x3979))
(assert (x2609 x315))
(assert (x4077 2321842044))
(assert (< (x804 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1323 10000) (= 0 (x4767 x1323))))
(assert (x2609 x2523))
(assert (x2609 x2700))
(assert (x2609 x919))
(assert (= x4362 (and x2007 (not x3187))))
(assert (x2609 x199))
(assert (x2609 x2337))
(assert (x2609 x4226))
(assert (x2609 x2050))
(assert (x2609 x2076))
(assert (x2609 x845))
(assert (x2609 x1449))
(assert (x2609 x3644))
(assert (x2609 x1085))
(assert (= (or x3596 x639) x3529))
(assert (= x2043 (=> (and (= false x3872) (= x367 true) (= true x3874) (= false x3387) (= x705 x3874)) x1298)))
(assert (x2609 x4655))
(assert (x2609 x3814))
(assert (x2609 x2339))
(assert (x2609 x3295))
(assert (x2609 x4459))
(assert (= (=> (and (= (< 0 x4215) x4599) (= x3075 (+ x707 32)) (= x983 (x2361 (- x2902 x12))) (= x4215 (x132 x1524)) (= x3780 (+ x2902 32)) (= x3461 (x2302 (+ x1524 32)))) (and (=> (and (not x4599) (= x2265 x3780)) x2404) (=> x4599 x2273))) x479))
(assert (= x631 (or x4227 x1935)))
(assert (x2609 x2991))
(assert (= (=> (and (= (x2302 (+ x4154 32)) x620) (= x4030 (x2302 (+ 32 x4106))) (= (x3237 x2357) x840) (= x1688 (< 0 x840)) (= (x2910 320) x2357) (= x2538 (x2361 (- x4154 x3658))) (= x505 (x2302 (+ 32 x2357)))) (and (=> (and (and (= (x2290 x1632) x2378) (= x1632 (x1234 x505)) (= (< x2378 6) x630)) x1688) (and (=> (not x630) x1117) (=> x630 x2872))) (=> (and (not x1688) (= x620 x1677)) x2183))) x2592))
(assert (x2609 x2846))
(assert (x2609 x847))
(assert (= x1091 (and x417 x814)))
(assert (x2609 x3507))
(assert (x2609 x4657))
(assert (x2609 x1573))
(assert (= x208 (and x4263 (not x1681))))
(assert (< 10000 (x792 x2973 x3251 x4108 x3389 x2184 x4260 x3774 x4160)))
(assert (x2085 x1761))
(assert (= (x428 64 x4795 x2048) (x4767 (x428 64 x4795 x2048))))
(assert (= x366 (and (not x1424) x2257)))
(assert (x2609 x2858))
(assert (= x2908 (x1486 (x3663 x2973 x2908 x4722 x3122))))
(assert (x2609 x1439))
(assert (= x2151 (x2729 (x2346 x2973 x3698 x4206 x2120 x2151 x131 x3295))))
(assert (= (x4767 (x428 64 x2787 x2308)) (x428 64 x2787 x2308)))
(assert (= (x4767 18446744073709551356) 0))
(assert (= x570 (and (not x1416) x251)))
(assert (x611 x1785))
(assert (x2609 x2712))
(assert (x2609 x3675))
(assert (= (and x3765 (not x2707)) x3446))
(assert (x2609 x2521))
(assert (x2609 x2195))
(assert (x1608 x1517))
(assert (x2085 x3664))
(assert (x2609 x1899))
(assert (x2609 x821))
(assert (x2609 x1514))
(assert (= (and x1742 x3479) x4644))
(assert (x1276 (x2681 x4033 x4400 x41)))
(assert (x2609 x1014))
(assert (= (and x818 x1378) x2270))
(assert (= (or x3641 x1139) x4263))
(assert (= x4487 x1251))
(assert (x2609 x1647))
(assert (x2609 x2312))
(assert (x2609 x1552))
(assert (x2609 x3518))
(assert (x2609 x91))
(assert (x2609 x20))
(assert (x2609 x1145))
(assert (x2609 x558))
(assert (x2609 x2133))
(assert (x2609 x1268))
(assert (= (x4767 18446744073709551420) 0))
(assert (x2609 x1094))
(assert (x2609 x2748))
(assert (= (and (not x4111) x2531) x4051))
(assert (x611 x2331))
(assert (x2609 x3340))
(assert (x2609 x2419))
(assert (x2609 x1406))
(assert (= x1216 (or x4016 x4122)))
(assert (x2609 x1994))
(check-sat)
(exit)
