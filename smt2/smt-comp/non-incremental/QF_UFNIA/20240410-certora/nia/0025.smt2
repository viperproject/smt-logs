(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1164 () Int)
(declare-fun x114 () Bool)
(declare-fun x1616 () Int)
(declare-fun x517 () Int)
(declare-fun x3131 () Int)
(declare-fun x361 () Int)
(declare-fun x2133 () Int)
(declare-fun x3094 () Int)
(declare-fun x2325 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x226 () Int)
(declare-fun x1656 (Int Int Int) Int)
(declare-fun x1932 () Bool)
(declare-fun x1805 () Bool)
(declare-fun x28 () Int)
(declare-fun x317 () Int)
(declare-fun x1300 () Int)
(declare-fun x1432 () Bool)
(declare-fun x227 () Bool)
(declare-fun x2275 () Int)
(declare-fun x654 () Bool)
(declare-fun x1344 () Int)
(declare-fun x2439 () Int)
(declare-fun x2812 () Bool)
(declare-fun x780 () Int)
(declare-fun x1889 () Int)
(declare-fun x44 () Int)
(declare-fun x2537 () Int)
(declare-fun x832 () Int)
(declare-fun x2318 (Int Int Int Int Int) Int)
(declare-fun x2551 () Int)
(declare-fun x452 () Int)
(declare-fun x437 (Int Int Int Int Int Int) Int)
(declare-fun x1764 () Int)
(declare-fun x1382 () Int)
(declare-fun x297 () Int)
(declare-fun x1872 () Int)
(declare-fun x2893 () Int)
(declare-fun x861 () Int)
(declare-fun x2338 () Int)
(declare-fun x1599 () Int)
(declare-fun x570 () Int)
(declare-fun x2782 () Int)
(declare-fun x289 () Bool)
(declare-fun x713 () Int)
(declare-fun x676 () Int)
(declare-fun x1301 () Int)
(declare-fun x1675 () Int)
(declare-fun x2539 () Bool)
(declare-fun x1311 (Int) Int)
(declare-fun x262 () Int)
(declare-fun x2355 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x3063 () Int)
(declare-fun x1073 () Int)
(declare-fun x2223 () Int)
(declare-fun x139 () Int)
(declare-fun x1330 () Int)
(declare-fun x1103 () Bool)
(declare-fun x2305 () Int)
(declare-fun x1586 () Int)
(declare-fun x196 () Int)
(declare-fun x939 () Int)
(declare-fun x2484 () Int)
(declare-fun x2294 () Int)
(declare-fun x2671 () Bool)
(declare-fun x1573 () Int)
(declare-fun x112 () Int)
(declare-fun x700 () Int)
(declare-fun x2906 () Int)
(declare-fun x1541 () Bool)
(declare-fun x1466 () Int)
(declare-fun x821 () Int)
(declare-fun x2014 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1444 () Int)
(declare-fun x2398 () Int)
(declare-fun x1319 () Int)
(declare-fun x2074 () Int)
(declare-fun x793 () Int)
(declare-fun x309 () Int)
(declare-fun x1514 () Int)
(declare-fun x2010 () Bool)
(declare-fun x2090 () Int)
(declare-fun x696 () Int)
(declare-fun x489 () Int)
(declare-fun x275 () Bool)
(declare-fun x2669 () Int)
(declare-fun x2719 () Bool)
(declare-fun x1046 () Int)
(declare-fun x293 () Int)
(declare-fun x2910 () Int)
(declare-fun x964 () Bool)
(declare-fun x2555 () Int)
(declare-fun x2683 () Bool)
(declare-fun x408 () Int)
(declare-fun x2250 () Bool)
(declare-fun x502 () Int)
(declare-fun x2738 (Int) Int)
(declare-fun x1509 () Bool)
(declare-fun x418 () Int)
(declare-fun x2867 () Int)
(declare-fun x3149 () Int)
(declare-fun x993 () Bool)
(declare-fun x1703 () Int)
(declare-fun x1088 () Int)
(declare-fun x1129 () Int)
(declare-fun x2700 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x1879 () Int)
(declare-fun x711 () Bool)
(declare-fun x1705 () Int)
(declare-fun x246 () Int)
(declare-fun x818 () Int)
(declare-fun x768 () Int)
(declare-fun x1370 () Int)
(declare-fun x2866 () Bool)
(declare-fun x1488 () Int)
(declare-fun x2948 () Int)
(declare-fun x2413 () Int)
(declare-fun x2604 () Int)
(declare-fun x1833 () Int)
(declare-fun x580 () Int)
(declare-fun x2368 () Int)
(declare-fun x2283 () Int)
(declare-fun x1438 () Int)
(declare-fun x1527 () Int)
(declare-fun x1849 () Int)
(declare-fun x351 () Bool)
(declare-fun x762 () Int)
(declare-fun x438 () Int)
(declare-fun x2594 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x735 () Int)
(declare-fun x2855 () Int)
(declare-fun x2051 () Int)
(declare-fun x2176 () Int)
(declare-fun x278 () Int)
(declare-fun x2548 () Int)
(declare-fun x2584 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1064 () Int)
(declare-fun x2096 () Int)
(declare-fun x1042 () Int)
(declare-fun x1331 () Int)
(declare-fun x1439 () Int)
(declare-fun x2163 () Int)
(declare-fun x553 () Int)
(declare-fun x947 () Int)
(declare-fun x1119 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1385 () Int)
(declare-fun x2078 () Bool)
(declare-fun x401 () Int)
(declare-fun x2982 () Int)
(declare-fun x322 () Int)
(declare-fun x823 () Int)
(declare-fun x2929 () Int)
(declare-fun x2635 () Int)
(declare-fun x381 () Int)
(declare-fun x2602 () Int)
(declare-fun x2432 () Bool)
(declare-fun x299 () Int)
(declare-fun x2313 () Int)
(declare-fun x2848 () Int)
(declare-fun x465 () Bool)
(declare-fun x1836 () Int)
(declare-fun x1611 () Int)
(declare-fun x98 () Int)
(declare-fun x311 () Int)
(declare-fun x2301 () Int)
(declare-fun x1922 () Bool)
(declare-fun x961 () Int)
(declare-fun x78 () Int)
(declare-fun x920 () Int)
(declare-fun x2343 () Int)
(declare-fun x960 () Int)
(declare-fun x1770 () Int)
(declare-fun x2319 () Int)
(declare-fun x1058 () Int)
(declare-fun x347 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1354 () Int)
(declare-fun x616 () Bool)
(declare-fun x233 () Int)
(declare-fun x526 () Int)
(declare-fun x2399 () Int)
(declare-fun x1172 () Int)
(declare-fun x796 () Int)
(declare-fun x715 () Int)
(declare-fun x1882 () Int)
(declare-fun x1887 () Bool)
(declare-fun x2116 () Int)
(declare-fun x1810 () Int)
(declare-fun x2728 () Int)
(declare-fun x2251 () Int)
(declare-fun x1866 () Int)
(declare-fun x2914 () Int)
(declare-fun x2298 () Int)
(declare-fun x2219 () Int)
(declare-fun x2312 (Int) Int)
(declare-fun x819 () Int)
(declare-fun x906 () Int)
(declare-fun x286 () Int)
(declare-fun x1101 () Int)
(declare-fun x1567 () Bool)
(declare-fun x2636 () Int)
(declare-fun x1009 () Int)
(declare-fun x1566 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x1478 (Int) Int)
(declare-fun x1175 () Bool)
(declare-fun x3120 () Int)
(declare-fun x1661 () Int)
(declare-fun x985 (Int) Int)
(declare-fun x974 () Int)
(declare-fun x2516 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x1834 () Int)
(declare-fun x1971 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1902 () Int)
(declare-fun x2047 () Int)
(declare-fun x326 () Int)
(declare-fun x1710 () Int)
(declare-fun x2796 () Int)
(declare-fun x2062 () Int)
(declare-fun x2021 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1052 () Int)
(declare-fun x1929 () Int)
(declare-fun x105 () Bool)
(declare-fun x1934 () Int)
(declare-fun x413 () Int)
(declare-fun x626 () Int)
(declare-fun x2559 () Bool)
(declare-fun x152 () Int)
(declare-fun x1340 () Int)
(declare-fun x2582 () Bool)
(declare-fun x3020 () Int)
(declare-fun x287 () Int)
(declare-fun x2963 () Int)
(declare-fun x1341 () Int)
(declare-fun x701 () Int)
(declare-fun x997 () Int)
(declare-fun x2788 () Int)
(declare-fun x2036 () Bool)
(declare-fun x2120 () Int)
(declare-fun x2259 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1326 () Int)
(declare-fun x1014 () Int)
(declare-fun x2913 () Int)
(declare-fun x70 () Int)
(declare-fun x495 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x525 () Int)
(declare-fun x2049 () Int)
(declare-fun x3138 () Int)
(declare-fun x653 () Int)
(declare-fun x1878 () Bool)
(declare-fun x2043 () Int)
(declare-fun x1760 () Int)
(declare-fun x459 () Int)
(declare-fun x1100 () Int)
(declare-fun x530 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x724 () Int)
(declare-fun x3054 () Int)
(declare-fun x2680 () Int)
(declare-fun x298 () Int)
(declare-fun x564 () Int)
(declare-fun x1561 () Bool)
(declare-fun x547 () Int)
(declare-fun x2744 () Bool)
(declare-fun x1927 () Int)
(declare-fun x2493 () Bool)
(declare-fun x1482 () Int)
(declare-fun x2976 () Bool)
(declare-fun x1601 () Int)
(declare-fun x2359 () Int)
(declare-fun x1338 () Int)
(declare-fun x2026 () Int)
(declare-fun x1742 () Int)
(declare-fun x2357 () Int)
(declare-fun x1811 () Int)
(declare-fun x281 (Int) Int)
(declare-fun x96 () Bool)
(declare-fun x2571 () Int)
(declare-fun x1512 () Int)
(declare-fun x2052 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x1192 () Int)
(declare-fun x2053 () Int)
(declare-fun x367 () Int)
(declare-fun x1832 () Int)
(declare-fun x3049 () Int)
(declare-fun x781 () Bool)
(declare-fun x2568 () Int)
(declare-fun x1483 () Int)
(declare-fun x2641 () Int)
(declare-fun x1195 () Bool)
(declare-fun x2822 () Int)
(declare-fun x378 () Int)
(declare-fun x2344 () Int)
(declare-fun x1893 () Int)
(declare-fun x523 () Bool)
(declare-fun x1523 () Int)
(declare-fun x1606 () Int)
(declare-fun x1650 () Int)
(declare-fun x272 () Int)
(declare-fun x3100 () Int)
(declare-fun x2128 () Int)
(declare-fun x3091 () Bool)
(declare-fun x1498 () Int)
(declare-fun x3055 () Int)
(declare-fun x1441 () Int)
(declare-fun x2375 () Int)
(declare-fun x841 () Int)
(declare-fun x1096 () Int)
(declare-fun x2162 () Int)
(declare-fun x219 () Int)
(declare-fun x2101 () Bool)
(declare-fun x542 () Bool)
(declare-fun x1359 () Int)
(declare-fun x1600 () Int)
(declare-fun x1614 () Int)
(declare-fun x2883 () Bool)
(declare-fun x533 () Int)
(declare-fun x496 () Bool)
(declare-fun x1877 () Int)
(declare-fun x908 () Int)
(declare-fun x52 () Int)
(declare-fun x265 () Int)
(declare-fun x2726 () Bool)
(declare-fun x3025 () Int)
(declare-fun x1036 () Int)
(declare-fun x1831 () Int)
(declare-fun x2444 () Int)
(declare-fun x1159 () Bool)
(declare-fun x2395 () Int)
(declare-fun x2741 () Bool)
(declare-fun x2751 () Int)
(declare-fun x2314 () Int)
(declare-fun x1823 () Int)
(declare-fun x2028 () Int)
(declare-fun x704 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x478 () Bool)
(declare-fun x2899 () Int)
(declare-fun x779 () Int)
(declare-fun x3009 () Int)
(declare-fun x146 () Bool)
(declare-fun x1365 () Int)
(declare-fun x921 (Int) Int)
(declare-fun x2039 () Int)
(declare-fun x2170 () Int)
(declare-fun x61 () Int)
(declare-fun x1141 () Int)
(declare-fun x2831 () Int)
(declare-fun x1431 () Bool)
(declare-fun x3050 () Int)
(declare-fun x1447 () Int)
(declare-fun x1049 () Bool)
(declare-fun x2921 () Int)
(declare-fun x1956 () Int)
(declare-fun x1815 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x2428 () Int)
(declare-fun x1936 () Int)
(declare-fun x2523 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x104 () Bool)
(declare-fun x551 () Int)
(declare-fun x867 () Int)
(declare-fun x1428 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x2159 () Int)
(declare-fun x1857 () Int)
(declare-fun x769 () Int)
(declare-fun x1329 () Int)
(declare-fun x1371 () Int)
(declare-fun x2891 () Bool)
(declare-fun x2366 () Int)
(declare-fun x2253 () Int)
(declare-fun x770 () Int)
(declare-fun x471 () Int)
(declare-fun x108 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x3148 () Int)
(declare-fun x576 () Int)
(declare-fun x1721 () Int)
(declare-fun x2295 () Int)
(declare-fun x2759 () Int)
(declare-fun x162 () Int)
(declare-fun x2206 () Int)
(declare-fun x521 () Int)
(declare-fun x285 () Bool)
(declare-fun x681 () Int)
(declare-fun x137 () Int)
(declare-fun x2220 () Int)
(declare-fun x625 () Bool)
(declare-fun x178 () Int)
(declare-fun x1697 () Int)
(declare-fun x308 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1282 () Int)
(declare-fun x2640 () Bool)
(declare-fun x1829 () Int)
(declare-fun x3121 () Bool)
(declare-fun x2494 () Int)
(declare-fun x726 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1347 () Int)
(declare-fun x506 () Int)
(declare-fun x2382 () Int)
(declare-fun x1664 () Int)
(declare-fun x2243 () Int)
(declare-fun x3036 () Bool)
(declare-fun x469 () Int)
(declare-fun x2717 () Bool)
(declare-fun x600 () Int)
(declare-fun x2278 () Int)
(declare-fun x2277 () Bool)
(declare-fun x2934 () Int)
(declare-fun x2152 () Bool)
(declare-fun x588 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2715 () Int)
(declare-fun x2687 () Int)
(declare-fun x190 () Int)
(declare-fun x271 () Bool)
(declare-fun x407 () Bool)
(declare-fun x1057 () Int)
(declare-fun x2917 (Int) Int)
(declare-fun x702 () Int)
(declare-fun x839 () Bool)
(declare-fun x480 () Int)
(declare-fun x1700 () Bool)
(declare-fun x455 () Bool)
(declare-fun x432 () Int)
(declare-fun x3089 () Int)
(declare-fun x648 () Int)
(declare-fun x2935 () Int)
(declare-fun x2189 () Bool)
(declare-fun x2048 () Int)
(declare-fun x2130 () Int)
(declare-fun x1918 () Int)
(declare-fun x1091 () Int)
(declare-fun x2157 () Int)
(declare-fun x1289 () Int)
(declare-fun x2526 () Int)
(declare-fun x444 () Bool)
(declare-fun x1490 () Int)
(declare-fun x2127 () Int)
(declare-fun x1969 () Bool)
(declare-fun x730 () Int)
(declare-fun x637 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1180 () Int)
(declare-fun x3062 () Int)
(declare-fun x3143 () Int)
(declare-fun x1583 () Int)
(declare-fun x929 () Int)
(declare-fun x635 (Int) Bool)
(declare-fun x2846 () Int)
(declare-fun x414 () Int)
(declare-fun x1921 () Int)
(declare-fun x2377 () Int)
(declare-fun x460 () Bool)
(declare-fun x2166 () Int)
(declare-fun x2805 () Bool)
(declare-fun x2460 () Int)
(declare-fun x3146 () Int)
(declare-fun x562 () Int)
(declare-fun x257 () Int)
(declare-fun x2437 () Int)
(declare-fun x2410 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x132 () Int)
(declare-fun x3057 () Int)
(declare-fun x1635 () Int)
(declare-fun x169 () Int)
(declare-fun x529 () Int)
(declare-fun x850 () Bool)
(declare-fun x2115 () Int)
(declare-fun x1975 () Int)
(declare-fun x2333 () Int)
(declare-fun x1203 () Int)
(declare-fun x163 () Int)
(declare-fun x3122 () Int)
(declare-fun x1081 () Bool)
(declare-fun x603 () Bool)
(declare-fun x2056 (Int) Int)
(declare-fun x3017 () Int)
(declare-fun x1380 () Int)
(declare-fun x72 () Int)
(declare-fun x577 () Int)
(declare-fun x1125 () Int)
(declare-fun x1779 () Int)
(declare-fun x2260 () Int)
(declare-fun x1683 () Int)
(declare-fun x595 () Int)
(declare-fun x202 () Int)
(declare-fun x2405 () Int)
(declare-fun x416 () Int)
(declare-fun x261 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1972 () Bool)
(declare-fun x2311 () Int)
(declare-fun x2348 () Int)
(declare-fun x1115 () Int)
(declare-fun x1609 () Int)
(declare-fun x2245 () Int)
(declare-fun x541 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x375 () Int)
(declare-fun x210 () Int)
(declare-fun x1775 () Int)
(declare-fun x1558 () Bool)
(declare-fun x2825 () Int)
(declare-fun x2656 () Bool)
(declare-fun x1624 () Int)
(declare-fun x2729 () Int)
(declare-fun x2932 () Int)
(declare-fun x970 () Int)
(declare-fun x1945 () Int)
(declare-fun x2252 () Int)
(declare-fun x2203 () Int)
(declare-fun x746 () Int)
(declare-fun x1 () Int)
(declare-fun x2433 () Int)
(declare-fun x1841 () Int)
(declare-fun x2849 () Int)
(declare-fun x1739 () Int)
(declare-fun x133 () Int)
(declare-fun x312 () Int)
(declare-fun x1974 () Int)
(declare-fun x1885 () Int)
(declare-fun x1502 () Int)
(declare-fun x1712 () Int)
(declare-fun x1740 () Int)
(declare-fun x2469 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x1147 () Int)
(declare-fun x41 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1717 () Int)
(declare-fun x771 () Int)
(declare-fun x3124 () Bool)
(declare-fun x2815 () Int)
(declare-fun x2378 () Int)
(declare-fun x1537 () Int)
(declare-fun x1846 () Int)
(declare-fun x1845 () Int)
(declare-fun x2857 () Int)
(declare-fun x250 () Int)
(declare-fun x1484 () Bool)
(declare-fun x1487 () Int)
(declare-fun x720 () Int)
(declare-fun x1594 () Bool)
(declare-fun x2351 () Int)
(declare-fun x2066 () Int)
(declare-fun x1271 () Int)
(declare-fun x331 () Bool)
(declare-fun x3047 () Int)
(declare-fun x3011 () Int)
(declare-fun x592 () Int)
(declare-fun x1007 () Int)
(declare-fun x448 () Int)
(declare-fun x1230 () Int)
(declare-fun x2784 () Int)
(declare-fun x176 () Int)
(declare-fun x2809 () Int)
(declare-fun x2131 () Int)
(declare-fun x782 () Int)
(declare-fun x2154 () Int)
(declare-fun x91 () Int)
(declare-fun x3119 () Int)
(declare-fun x2697 () Int)
(declare-fun x1104 () Bool)
(declare-fun x2949 () Int)
(declare-fun x885 () Int)
(declare-fun x1327 () Bool)
(declare-fun x815 () Int)
(declare-fun x1998 () Int)
(declare-fun x2592 () Int)
(declare-fun x1720 () Int)
(declare-fun x1032 () Int)
(declare-fun x1170 () Int)
(declare-fun x1734 () Int)
(declare-fun x2178 () Int)
(declare-fun x1320 () Int)
(declare-fun x1163 () Int)
(declare-fun x218 () Int)
(declare-fun x658 () Int)
(declare-fun x1324 () Int)
(declare-fun x327 () Int)
(declare-fun x2265 () Int)
(declare-fun x2613 () Int)
(declare-fun x400 () Int)
(declare-fun x838 () Int)
(declare-fun x2105 () Int)
(declare-fun x1362 (Int) Int)
(declare-fun x1673 () Int)
(declare-fun x899 () Int)
(declare-fun x296 () Int)
(declare-fun x508 () Int)
(declare-fun x1458 () Int)
(declare-fun x318 () Bool)
(declare-fun x1905 () Int)
(declare-fun x2565 () Int)
(declare-fun x1681 () Bool)
(declare-fun x2476 () Int)
(declare-fun x2838 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1570 () Int)
(declare-fun x106 () Int)
(declare-fun x1277 () Int)
(declare-fun x2969 () Int)
(declare-fun x288 () Int)
(declare-fun x2902 () Int)
(declare-fun x175 () Int)
(declare-fun x2957 () Int)
(declare-fun x718 () Bool)
(declare-fun x339 () Int)
(declare-fun x1719 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x428 () Int)
(declare-fun x2755 () Int)
(declare-fun x2173 () Int)
(declare-fun x2763 () Int)
(declare-fun x2904 () Int)
(declare-fun x2334 () Bool)
(declare-fun x332 () Int)
(declare-fun x2068 () Int)
(declare-fun x3037 () Int)
(declare-fun x930 () Int)
(declare-fun x3059 () Int)
(declare-fun x1993 () Int)
(declare-fun x94 () Int)
(declare-fun x283 () Int)
(declare-fun x1216 () Int)
(declare-fun x2438 () Int)
(declare-fun x81 () Int)
(declare-fun x2589 () Int)
(declare-fun x2574 () Int)
(declare-fun x2132 () Int)
(declare-fun x2046 () Int)
(declare-fun x2988 (Int) Int)
(declare-fun x1843 () Bool)
(declare-fun x887 () Int)
(declare-fun x1551 () Bool)
(declare-fun x728 () Int)
(declare-fun x2397 () Int)
(declare-fun x3003 () Int)
(declare-fun x2873 () Int)
(declare-fun x1513 () Int)
(declare-fun x963 () Int)
(declare-fun x2506 () Bool)
(declare-fun x174 () Bool)
(declare-fun x2654 () Int)
(declare-fun x1640 () Int)
(declare-fun x2422 () Int)
(declare-fun x1381 () Int)
(declare-fun x1139 () Int)
(declare-fun x1708 () Int)
(declare-fun x2576 () Bool)
(declare-fun x453 () Int)
(declare-fun x1367 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x2110 () Int)
(declare-fun x2663 () Bool)
(declare-fun x321 () Int)
(declare-fun x991 () Int)
(declare-fun x578 () Int)
(declare-fun x520 () Bool)
(declare-fun x3133 () Int)
(declare-fun x2404 () Int)
(declare-fun x2327 () Int)
(declare-fun x2408 () Int)
(declare-fun x623 () Bool)
(declare-fun x421 () Int)
(declare-fun x1667 () Int)
(declare-fun x1657 () Int)
(declare-fun x2293 () Int)
(declare-fun x1191 () Bool)
(declare-fun x504 (Int) Int)
(declare-fun x2279 () Int)
(declare-fun x325 () Int)
(declare-fun x1284 () Int)
(declare-fun x172 () Int)
(declare-fun x3033 () Int)
(declare-fun x1543 () Bool)
(declare-fun x678 () Int)
(declare-fun x979 () Int)
(declare-fun x1695 () Bool)
(declare-fun x430 () Int)
(declare-fun x1037 () Int)
(declare-fun x1898 () Bool)
(declare-fun x1968 () Int)
(declare-fun x193 () Int)
(declare-fun x2390 () Int)
(declare-fun x225 () Int)
(declare-fun x1788 () Int)
(declare-fun x2945 (Int Int Int Int Int Int Int) Int)
(declare-fun x2791 () Bool)
(declare-fun x2638 () Int)
(declare-fun x1072 () Bool)
(declare-fun x74 () Int)
(declare-fun x774 () Int)
(declare-fun x2180 () Int)
(declare-fun x62 () Int)
(declare-fun x215 () Int)
(declare-fun x463 () Int)
(declare-fun x3030 () Int)
(declare-fun x2081 () Int)
(declare-fun x2094 () Int)
(declare-fun x1142 () Int)
(declare-fun x50 () Int)
(declare-fun x1725 (Int) Int)
(declare-fun x2596 () Int)
(declare-fun x2008 () Int)
(declare-fun x3136 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x2727 () Int)
(declare-fun x3087 () Int)
(declare-fun x2012 () Int)
(declare-fun x3161 () Int)
(declare-fun x36 () Int)
(declare-fun x1757 () Int)
(declare-fun x2979 () Int)
(declare-fun x1241 () Bool)
(declare-fun x1190 () Int)
(declare-fun x2192 () Int)
(declare-fun x2695 () Int)
(declare-fun x2813 () Int)
(declare-fun x1148 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x229 () Int)
(declare-fun x2146 () Int)
(declare-fun x1495 () Bool)
(declare-fun x759 () Int)
(declare-fun x935 () Int)
(declare-fun x1337 () Int)
(declare-fun x695 () Bool)
(declare-fun x1047 () Int)
(declare-fun x54 () Int)
(declare-fun x2239 () Int)
(declare-fun x1275 () Bool)
(declare-fun x113 () Bool)
(declare-fun x165 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x1257 () Int)
(declare-fun x2685 () Int)
(declare-fun x1631 () Int)
(declare-fun x1891 () Int)
(declare-fun x2211 () Int)
(declare-fun x1285 () Int)
(declare-fun x1862 () Int)
(declare-fun x1276 () Bool)
(declare-fun x2098 () Int)
(declare-fun x869 () Int)
(declare-fun x1531 () Bool)
(declare-fun x543 () Int)
(declare-fun x42 () Int)
(declare-fun x1171 (Int) Int)
(declare-fun x2748 () Bool)
(declare-fun x2977 () Int)
(declare-fun x992 () Bool)
(declare-fun x3056 () Int)
(declare-fun x1346 () Bool)
(declare-fun x2628 () Int)
(declare-fun x194 () Int)
(declare-fun x166 () Int)
(declare-fun x1714 () Int)
(declare-fun x1546 () Int)
(declare-fun x1654 () Int)
(declare-fun x1238 () Int)
(declare-fun x971 () Bool)
(declare-fun x1435 () Int)
(declare-fun x1178 () Int)
(declare-fun x1234 () Int)
(declare-fun x1501 () Int)
(declare-fun x3081 () Bool)
(declare-fun x186 () Int)
(declare-fun x2191 () Int)
(declare-fun x1401 () Int)
(declare-fun x1793 () Int)
(declare-fun x2737 () Int)
(declare-fun x149 () Int)
(declare-fun x2903 () Int)
(declare-fun x197 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1388 () Int)
(declare-fun x1730 () Int)
(declare-fun x3098 () Int)
(declare-fun x1446 () Int)
(declare-fun x1222 () Int)
(declare-fun x1787 () Int)
(declare-fun x1585 () Int)
(declare-fun x2148 () Int)
(declare-fun x913 () Int)
(declare-fun x522 () Int)
(declare-fun x1612 (Int) Int)
(declare-fun x343 () Bool)
(declare-fun x1097 () Int)
(declare-fun x2462 () Int)
(declare-fun x223 () Bool)
(declare-fun x619 () Int)
(declare-fun x999 () Bool)
(declare-fun x1229 () Int)
(declare-fun x847 () Int)
(declare-fun x2927 () Int)
(declare-fun x1297 () Bool)
(declare-fun x900 () Int)
(declare-fun x3096 () Int)
(declare-fun x3019 () Int)
(declare-fun x909 () Bool)
(declare-fun x651 () Int)
(declare-fun x2321 () Int)
(declare-fun x2221 () Int)
(declare-fun x2156 () Bool)
(declare-fun x2080 () Int)
(declare-fun x2095 () Bool)
(declare-fun x130 () Int)
(declare-fun x22 () Int)
(declare-fun x950 () Int)
(declare-fun x1493 () Int)
(declare-fun x2771 () Int)
(declare-fun x2653 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1827 () Int)
(declare-fun x59 () Int)
(declare-fun x129 () Bool)
(declare-fun x905 () Int)
(declare-fun x2034 () Bool)
(declare-fun x2706 () Int)
(declare-fun x148 () Int)
(declare-fun x2723 () Bool)
(declare-fun x2844 () Int)
(declare-fun x1985 () Int)
(declare-fun x1880 () Int)
(declare-fun x822 () Int)
(declare-fun x1199 () Bool)
(declare-fun x3125 () Int)
(declare-fun x1743 () Bool)
(declare-fun x2322 () Int)
(declare-fun x207 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1290 () Int)
(declare-fun x203 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x2643 () Int)
(declare-fun x1636 () Int)
(declare-fun x1402 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x119 () Bool)
(declare-fun x584 () Int)
(declare-fun x1215 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1077 () Int)
(declare-fun x2547 () Bool)
(declare-fun x644 () Int)
(declare-fun x2989 () Int)
(declare-fun x2975 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1726 (Int) Int)
(declare-fun x1574 () Int)
(declare-fun x11 () Bool)
(declare-fun x2887 () Int)
(declare-fun x786 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x831 () Int)
(declare-fun x458 () Int)
(declare-fun x511 () Int)
(declare-fun x2686 () Bool)
(declare-fun x843 () Int)
(declare-fun x3088 () Int)
(declare-fun x1628 () Int)
(declare-fun x2179 () Int)
(declare-fun x2801 () Int)
(declare-fun x224 () Bool)
(declare-fun x1704 () Int)
(declare-fun x2674 () Int)
(declare-fun x2153 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x1769 () Int)
(declare-fun x2489 () Int)
(declare-fun x844 () Bool)
(declare-fun x1979 () Int)
(declare-fun x532 () Bool)
(declare-fun x1449 () Int)
(declare-fun x2292 () Int)
(declare-fun x2901 () Int)
(declare-fun x980 () Bool)
(declare-fun x1943 () Int)
(declare-fun x2806 () Int)
(declare-fun x1207 () Int)
(declare-fun x1579 () Bool)
(declare-fun x9 () Int)
(declare-fun x880 () Int)
(declare-fun x2740 () Int)
(declare-fun x449 () Bool)
(declare-fun x2027 () Int)
(declare-fun x2779 () Int)
(declare-fun x1854 () Int)
(declare-fun x2479 () Bool)
(declare-fun x1617 () Int)
(declare-fun x816 () Int)
(declare-fun x1236 () Bool)
(declare-fun x2349 () Int)
(declare-fun x2330 () Bool)
(declare-fun x425 () Int)
(declare-fun x3074 () Bool)
(declare-fun x579 () Int)
(declare-fun x1025 () Int)
(declare-fun x251 () Int)
(declare-fun x2711 () Int)
(declare-fun x1082 () Int)
(declare-fun x2117 () Int)
(declare-fun x2567 () Int)
(declare-fun x758 () Bool)
(declare-fun x922 () Int)
(declare-fun x191 () Bool)
(declare-fun x2246 () Int)
(declare-fun x269 () Int)
(declare-fun x1394 () Bool)
(declare-fun x692 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2970 () Int)
(declare-fun x1211 () Int)
(declare-fun x2138 () Int)
(declare-fun x1861 () Int)
(declare-fun x3039 () Int)
(declare-fun x604 () Bool)
(declare-fun x2448 () Int)
(declare-fun x842 () Int)
(declare-fun x307 () Int)
(declare-fun x783 () Int)
(declare-fun x745 () Bool)
(declare-fun x316 () Int)
(declare-fun x1826 () Int)
(declare-fun x931 () Int)
(declare-fun x1379 () Bool)
(declare-fun x67 () Int)
(declare-fun x2226 () Int)
(declare-fun x46 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1168 () Int)
(declare-fun x2513 () Int)
(declare-fun x1666 () Int)
(declare-fun x2985 () Int)
(declare-fun x2337 () Bool)
(declare-fun x561 () Int)
(declare-fun x531 () Int)
(declare-fun x228 () Int)
(declare-fun x1511 () Int)
(declare-fun x1189 () Int)
(declare-fun x2623 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x2558 () Int)
(declare-fun x2647 () Int)
(declare-fun x1680 () Int)
(declare-fun x2754 () Int)
(declare-fun x2586 () Int)
(declare-fun x1582 () Int)
(declare-fun x1149 () Int)
(declare-fun x2542 () Int)
(declare-fun x3000 () Int)
(declare-fun x2550 () Int)
(declare-fun x1959 () Bool)
(declare-fun x2665 () Int)
(declare-fun x3150 () Int)
(declare-fun x25 () Int)
(declare-fun x987 () Int)
(declare-fun x890 () Int)
(declare-fun x2997 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x2939 () Int)
(declare-fun x1915 () Bool)
(declare-fun x161 () Int)
(declare-fun x1335 () Int)
(declare-fun x243 () Int)
(declare-fun x240 () Int)
(declare-fun x740 () Int)
(declare-fun x2234 () Int)
(declare-fun x808 () Int)
(declare-fun x3029 () Int)
(declare-fun x2798 () Int)
(declare-fun x1423 () Int)
(declare-fun x3118 () Bool)
(declare-fun x630 () Int)
(declare-fun x2888 () Int)
(declare-fun x2937 () Int)
(declare-fun x442 () Int)
(declare-fun x982 () Int)
(declare-fun x2911 () Bool)
(declare-fun x1376 () Int)
(declare-fun x482 () Int)
(declare-fun x2440 () Int)
(declare-fun x757 () Bool)
(declare-fun x135 () Int)
(declare-fun x1393 () Bool)
(declare-fun x563 () Int)
(declare-fun x2205 () Int)
(declare-fun x1303 () Int)
(declare-fun x809 () Int)
(declare-fun x164 () Int)
(declare-fun x1553 () Int)
(declare-fun x1653 () Int)
(declare-fun x1745 () Int)
(declare-fun x1630 () Bool)
(declare-fun x2000 () Int)
(declare-fun x292 () Bool)
(declare-fun x763 () Int)
(declare-fun x836 () Int)
(declare-fun x2320 () Int)
(declare-fun x1146 () Bool)
(declare-fun x912 () Int)
(declare-fun x3043 () Int)
(declare-fun x487 () Int)
(declare-fun x691 () Int)
(declare-fun x2099 (Int Int) Int)
(declare-fun x2823 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2626 (Int) Int)
(declare-fun x1075 () Int)
(declare-fun x110 () Bool)
(declare-fun x673 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x195 () Int)
(declare-fun x1610 () Bool)
(declare-fun x2447 () Int)
(declare-fun x540 () Int)
(declare-fun x2092 () Int)
(declare-fun x56 () Bool)
(declare-fun x787 () Int)
(declare-fun x684 () Int)
(declare-fun x1031 () Bool)
(declare-fun x2655 () Int)
(declare-fun x1051 () Bool)
(declare-fun x1916 () Int)
(declare-fun x641 () Int)
(declare-fun x1946 () Int)
(declare-fun x1625 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1006 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1048 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1504 () Int)
(declare-fun x2197 () Bool)
(declare-fun x755 () Bool)
(declare-fun x1652 () Int)
(declare-fun x557 () Bool)
(declare-fun x1688 () Int)
(declare-fun x472 () Int)
(declare-fun x370 () Int)
(declare-fun x2677 () Int)
(declare-fun x550 () Int)
(declare-fun x208 () Int)
(declare-fun x1584 () Int)
(declare-fun x606 () Int)
(declare-fun x669 () Int)
(declare-fun x878 () Bool)
(declare-fun x1659 () Int)
(declare-fun x3060 () Bool)
(declare-fun x380 () Int)
(declare-fun x136 () Int)
(declare-fun x697 () Int)
(declare-fun x743 () Bool)
(declare-fun x1184 () Int)
(declare-fun x2102 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x613 () Int)
(declare-fun x241 () Int)
(declare-fun x1414 () Int)
(declare-fun x1239 () Int)
(declare-fun x2412 () Int)
(declare-fun x2603 () Int)
(declare-fun x872 () Int)
(declare-fun x661 () Int)
(declare-fun x427 () Int)
(declare-fun x898 () Int)
(declare-fun x875 () Int)
(declare-fun x279 () Int)
(declare-fun x2118 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x415 () Int)
(declare-fun x419 () Int)
(declare-fun x1638 () Int)
(declare-fun x2535 () Int)
(declare-fun x706 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1844 () Int)
(declare-fun x3042 () Int)
(declare-fun x2067 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1950 () Int)
(declare-fun x571 () Int)
(declare-fun x1213 () Int)
(declare-fun x1516 () Int)
(declare-fun x2556 () Int)
(declare-fun x1183 () Int)
(declare-fun x1619 () Int)
(declare-fun x1643 () Int)
(declare-fun x513 () Int)
(declare-fun x1595 () Int)
(declare-fun x2384 () Int)
(declare-fun x1992 () Int)
(declare-fun x2839 () Int)
(declare-fun x123 () Int)
(declare-fun x1065 () Int)
(declare-fun x1391 () Int)
(declare-fun x519 () Int)
(declare-fun x2562 () Int)
(declare-fun x486 () Bool)
(declare-fun x2971 () Int)
(declare-fun x2186 () Int)
(declare-fun x2742 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x301 () Int)
(declare-fun x501 () Int)
(declare-fun x2169 () Bool)
(declare-fun x2063 () Int)
(declare-fun x1114 () Int)
(declare-fun x1658 () Int)
(declare-fun x863 () Int)
(declare-fun x2924 () Int)
(declare-fun x2310 () Bool)
(declare-fun x2983 () Int)
(declare-fun x198 () Int)
(declare-fun x828 () Int)
(declare-fun x2269 () Int)
(declare-fun x2353 () Int)
(declare-fun x389 () Int)
(declare-fun x1623 () Int)
(declare-fun x2651 () Int)
(declare-fun x2994 () Int)
(declare-fun x1736 () Int)
(declare-fun x852 () Int)
(declare-fun x2372 () Int)
(declare-fun x664 () Int)
(declare-fun x1205 () Int)
(declare-fun x1987 () Bool)
(declare-fun x2457 () Int)
(declare-fun x2580 () Int)
(declare-fun x481 () Int)
(declare-fun x1177 () Bool)
(declare-fun x334 () Int)
(declare-fun x2468 () Bool)
(declare-fun x2466 () Int)
(declare-fun x2471 () Int)
(declare-fun x1245 () Int)
(declare-fun x698 () Bool)
(declare-fun x2216 () Int)
(declare-fun x1919 () Bool)
(declare-fun x3077 () Int)
(declare-fun x2974 () Int)
(declare-fun x2121 () Bool)
(declare-fun x1530 () Int)
(declare-fun x2263 () Bool)
(declare-fun x2521 () Int)
(declare-fun x1668 () Int)
(declare-fun x1151 () Int)
(declare-fun x2944 () Int)
(declare-fun x2810 () Int)
(declare-fun x2894 () Int)
(declare-fun x1056 () Int)
(declare-fun x382 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x1868 () Int)
(declare-fun x2630 () Bool)
(declare-fun x928 () Int)
(declare-fun x1349 () Int)
(declare-fun x1500 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x2785 () Int)
(declare-fun x2600 () Int)
(declare-fun x2103 () Int)
(declare-fun x3027 () Int)
(declare-fun x493 () Int)
(declare-fun x727 () Int)
(declare-fun x1937 () Bool)
(declare-fun x2895 () Int)
(declare-fun x1200 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1355 () Int)
(declare-fun x834 () Int)
(declare-fun x3024 () Int)
(declare-fun x3044 () Int)
(declare-fun x2274 () Int)
(declare-fun x2231 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1464 () Int)
(declare-fun x1210 () Bool)
(declare-fun x2124 () Int)
(declare-fun x1964 () Int)
(declare-fun x65 () Bool)
(declare-fun x1364 () Int)
(declare-fun x2765 () Int)
(declare-fun x2995 () Int)
(declare-fun x2504 () Int)
(declare-fun x1520 () Int)
(declare-fun x1565 () Bool)
(declare-fun x2083 () Int)
(declare-fun x180 () Int)
(declare-fun x1671 () Int)
(declare-fun x2923 () Bool)
(declare-fun x3058 () Int)
(declare-fun x1154 () Bool)
(declare-fun x545 () Int)
(declare-fun x879 () Bool)
(declare-fun x1218 () Int)
(declare-fun x274 () Int)
(declare-fun x2605 () Bool)
(declare-fun x2244 () Int)
(declare-fun x1685 () Int)
(declare-fun x2528 () Bool)
(declare-fun x84 () Int)
(declare-fun x95 () Int)
(declare-fun x405 () Int)
(declare-fun x1269 () Int)
(declare-fun x1991 () Int)
(declare-fun x599 () Bool)
(declare-fun x1545 () Int)
(declare-fun x355 () Int)
(declare-fun x230 () Int)
(declare-fun x1997 () Int)
(declare-fun x142 () Int)
(declare-fun x739 () Int)
(declare-fun x1727 () Int)
(declare-fun x1407 () Int)
(declare-fun x744 () Int)
(declare-fun x45 () Int)
(declare-fun x886 () Int)
(declare-fun x1532 () Int)
(declare-fun x497 () Int)
(declare-fun x1160 () Int)
(declare-fun x3127 () Bool)
(declare-fun x1256 () Int)
(declare-fun x5 () Int)
(declare-fun x1421 () Int)
(declare-fun x2455 () Int)
(declare-fun x2478 () Int)
(declare-fun x147 () Int)
(declare-fun x1962 () Int)
(declare-fun x1306 () Int)
(declare-fun x2364 () Int)
(declare-fun x748 () Int)
(declare-fun x1848 () Int)
(declare-fun x3151 () Bool)
(declare-fun x2928 () Int)
(declare-fun x2614 () Bool)
(declare-fun x803 () Bool)
(declare-fun x69 () Int)
(declare-fun x3079 () Int)
(declare-fun x2417 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1450 () Int)
(declare-fun x572 () Int)
(declare-fun x364 () Int)
(declare-fun x27 () Bool)
(declare-fun x1850 () Int)
(declare-fun x1581 () Int)
(declare-fun x360 () Int)
(declare-fun x1860 () Int)
(declare-fun x1853 () Int)
(declare-fun x2498 () Int)
(declare-fun x2557 () Int)
(declare-fun x1162 () Int)
(declare-fun x2352 () Bool)
(declare-fun x3045 () Int)
(declare-fun x2077 () Int)
(declare-fun x3018 () Int)
(declare-fun x556 () Int)
(declare-fun x2783 () Int)
(declare-fun x24 () Int)
(declare-fun x2631 () Int)
(declare-fun x994 () Int)
(declare-fun x2442 () Bool)
(declare-fun x143 () Int)
(declare-fun x2544 () Int)
(declare-fun x2400 () Int)
(declare-fun x2424 () Bool)
(declare-fun x1433 () Int)
(declare-fun x2454 () Int)
(declare-fun x2487 () Int)
(declare-fun x2620 () Int)
(declare-fun x2774 () Bool)
(declare-fun x439 () Int)
(declare-fun x189 () Int)
(declare-fun x3075 () Int)
(declare-fun x1547 () Int)
(declare-fun x2676 () Int)
(declare-fun x3106 () Bool)
(declare-fun x2370 () Int)
(declare-fun x672 () Bool)
(declare-fun x627 () Int)
(declare-fun x925 () Bool)
(declare-fun x8 () Int)
(declare-fun x703 () Int)
(declare-fun x1397 () Int)
(declare-fun x1299 () Bool)
(declare-fun x969 () Bool)
(declare-fun x47 () Bool)
(declare-fun x2661 () Int)
(declare-fun x2446 () Int)
(declare-fun x2032 () Int)
(declare-fun x2308 () Int)
(declare-fun x1804 () Bool)
(declare-fun x2350 () Int)
(declare-fun x1266 () Int)
(declare-fun x1977 () Int)
(declare-fun x1232 () Int)
(declare-fun x2472 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1942 () Int)
(declare-fun x466 () Int)
(declare-fun x679 () Int)
(declare-fun x916 () Int)
(declare-fun x2126 () Int)
(declare-fun x464 () Int)
(declare-fun x1655 () Int)
(declare-fun x2952 () Int)
(declare-fun x3102 () Int)
(declare-fun x2512 () Int)
(declare-fun x1028 () Bool)
(declare-fun x3010 () Int)
(declare-fun x2144 () Int)
(declare-fun x3080 () Int)
(declare-fun x177 () Bool)
(declare-fun x2031 () Int)
(declare-fun x2342 () Int)
(declare-fun x2119 () Int)
(declare-fun x185 () Int)
(declare-fun x2650 () Bool)
(declare-fun x2511 () Int)
(declare-fun x846 () Bool)
(declare-fun x2289 () Int)
(declare-fun x2767 () Int)
(declare-fun x1455 () Int)
(declare-fun x2237 () Int)
(declare-fun x1874 () Int)
(declare-fun x3145 () Int)
(declare-fun x2346 () Int)
(declare-fun x1718 () Int)
(declare-fun x2222 () Int)
(declare-fun x722 () Bool)
(declare-fun x607 () Int)
(declare-fun x1302 () Int)
(declare-fun x749 () Int)
(declare-fun x871 () Int)
(declare-fun x2276 () Int)
(declare-fun x1307 () Bool)
(declare-fun x2019 () Int)
(declare-fun x2381 () Int)
(declare-fun x1994 () Int)
(declare-fun x3126 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1672 () Int)
(declare-fun x1472 () Int)
(declare-fun x933 () Bool)
(declare-fun x39 () Int)
(declare-fun x2712 () Int)
(declare-fun x2449 (Int) Int)
(declare-fun x2389 () Int)
(declare-fun x209 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x2134 () Int)
(declare-fun x911 () Int)
(declare-fun x1549 () Bool)
(declare-fun x20 (Int) Int)
(declare-fun x151 () Int)
(declare-fun x2616 () Int)
(declare-fun x938 () Int)
(declare-fun x1824 () Int)
(declare-fun x717 () Bool)
(declare-fun x1494 () Int)
(declare-fun x618 () Bool)
(declare-fun x2285 () Int)
(declare-fun x128 () Int)
(declare-fun x2474 () Int)
(declare-fun x1240 () Int)
(declare-fun x2688 () Int)
(declare-fun x2850 () Int)
(declare-fun x639 () Int)
(declare-fun x2884 () Bool)
(declare-fun x1989 (Int) Int)
(declare-fun x2202 () Bool)
(declare-fun x2743 () Int)
(declare-fun x234 () Bool)
(declare-fun x3103 () Int)
(declare-fun x527 () Int)
(declare-fun x363 () Int)
(declare-fun x2060 () Int)
(declare-fun x499 () Int)
(declare-fun x1377 () Int)
(declare-fun x849 () Int)
(declare-fun x232 () Bool)
(declare-fun x915 () Int)
(declare-fun x2730 () Int)
(declare-fun x1212 () Int)
(declare-fun x2530 (Int) Int)
(declare-fun x884 () Int)
(declare-fun x1358 () Bool)
(declare-fun x2113 () Int)
(declare-fun x2164 () Int)
(declare-fun x1641 () Bool)
(declare-fun x282 () Bool)
(declare-fun x946 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1518 () Int)
(declare-fun x21 () Int)
(declare-fun x2933 () Bool)
(declare-fun x2622 () Int)
(declare-fun x2059 () Bool)
(declare-fun x738 () Int)
(declare-fun x473 () Int)
(declare-fun x1196 () Bool)
(declare-fun x217 () Int)
(declare-fun x2367 () Bool)
(declare-fun x2436 () Int)
(declare-fun x3076 () Int)
(declare-fun x2762 () Int)
(declare-fun x940 () Bool)
(declare-fun x801 () Int)
(declare-fun x2878 () Int)
(declare-fun x870 () Int)
(declare-fun x2670 () Int)
(declare-fun x192 () Int)
(declare-fun x3154 () Int)
(declare-fun x1687 () Int)
(declare-fun x3052 () Int)
(declare-fun x1410 () Bool)
(declare-fun x392 () Bool)
(declare-fun x1443 () Int)
(declare-fun x26 () Bool)
(declare-fun x845 () Int)
(declare-fun x2434 () Int)
(declare-fun x866 () Bool)
(declare-fun x328 () Int)
(declare-fun x2546 () Int)
(declare-fun x1165 () Bool)
(declare-fun x2065 () Int)
(declare-fun x2619 (Int) Int)
(declare-fun x131 () Int)
(declare-fun x2339 () Bool)
(declare-fun x1766 () Int)
(declare-fun x1460 () Int)
(declare-fun x2070 () Int)
(declare-fun x524 () Int)
(declare-fun x2872 () Bool)
(declare-fun x2247 () Int)
(declare-fun x518 () Int)
(declare-fun x2509 () Int)
(declare-fun x2534 () Int)
(declare-fun x1952 () Int)
(declare-fun x1930 () Int)
(declare-fun x752 () Int)
(declare-fun x2425 () Int)
(declare-fun x1592 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x1087 (Int) Int)
(declare-fun x1973 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1298 () Int)
(declare-fun x2236 () Int)
(declare-fun x2280 () Int)
(declare-fun x1390 () Int)
(declare-fun x734 () Int)
(declare-fun x3032 () Int)
(declare-fun x3061 () Bool)
(declare-fun x591 () Bool)
(declare-fun x857 () Int)
(declare-fun x154 () Bool)
(declare-fun x3004 () Int)
(declare-fun x263 () Int)
(declare-fun x2112 () Int)
(declare-fun x456 () Int)
(declare-fun x2689 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1317 () Int)
(declare-fun x582 () Int)
(declare-fun x145 () Bool)
(declare-fun x617 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2851 () Int)
(declare-fun x99 () Bool)
(declare-fun x1792 () Int)
(declare-fun x694 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1986 () Int)
(declare-fun x2617 () Int)
(declare-fun x100 () Int)
(declare-fun x431 () Int)
(declare-fun x2299 () Int)
(declare-fun x575 () Int)
(declare-fun x1761 () Int)
(declare-fun x798 () Int)
(declare-fun x851 () Int)
(declare-fun x612 () Bool)
(declare-fun x662 () Int)
(declare-fun x1901 () Int)
(declare-fun x1043 () Int)
(declare-fun x3142 () Int)
(declare-fun x2190 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1118 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1883 () Int)
(declare-fun x1587 () Int)
(declare-fun x1904 () Int)
(declare-fun x1809 () Int)
(declare-fun x2898 () Bool)
(declare-fun x789 () Int)
(declare-fun x2703 () Int)
(declare-fun x1353 () Int)
(declare-fun x2233 () Int)
(declare-fun x1067 () Int)
(declare-fun x1111 () Int)
(declare-fun x1634 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x88 () Bool)
(declare-fun x693 () Int)
(declare-fun x1983 () Int)
(declare-fun x2122 () Bool)
(declare-fun x1069 () Int)
(declare-fun x2374 () Int)
(declare-fun x2875 () Int)
(declare-fun x2795 () Int)
(declare-fun x712 () Int)
(declare-fun x954 () Int)
(declare-fun x573 () Int)
(declare-fun x2959 () Bool)
(declare-fun x2880 () Int)
(declare-fun x1863 () Int)
(declare-fun x1283 () Int)
(declare-fun x79 () Int)
(declare-fun x1559 (Int) Int)
(declare-fun x2481 () Int)
(declare-fun x622 () Int)
(declare-fun x356 () Int)
(declare-fun x2987 () Int)
(declare-fun x2264 () Int)
(declare-fun x3101 () Int)
(declare-fun x926 () Bool)
(declare-fun x2908 () Int)
(declare-fun x89 () Int)
(declare-fun x2993 () Int)
(declare-fun x2868 () Int)
(declare-fun x855 () Int)
(declare-fun x1801 () Int)
(declare-fun x1698 () Int)
(declare-fun x1785 () Int)
(declare-fun x3064 () Int)
(declare-fun x1194 () Int)
(declare-fun x254 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x3021 () Int)
(declare-fun x830 () Int)
(declare-fun x893 () Int)
(declare-fun x690 () Int)
(declare-fun x1931 () Int)
(declare-fun x2145 () Int)
(declare-fun x1678 () Bool)
(declare-fun x859 () Int)
(declare-fun x2607 () Bool)
(declare-fun x362 () Int)
(declare-fun x402 () Bool)
(declare-fun x2702 () Int)
(declare-fun x369 () Int)
(declare-fun x424 () Int)
(declare-fun x1166 () Bool)
(declare-fun x1884 () Int)
(declare-fun x2287 () Int)
(declare-fun x2054 () Int)
(declare-fun x1557 () Bool)
(declare-fun x2214 () Int)
(declare-fun x2435 () Bool)
(declare-fun x1416 () Int)
(declare-fun x2249 () Int)
(declare-fun x2886 () Int)
(declare-fun x2696 () Int)
(declare-fun x2764 () Int)
(declare-fun x1686 () Int)
(declare-fun x1596 () Int)
(declare-fun x2646 () Int)
(declare-fun x446 () Bool)
(declare-fun x2777 () Int)
(declare-fun x650 () Int)
(declare-fun x2691 () Bool)
(declare-fun x2486 () Int)
(declare-fun x1569 () Int)
(declare-fun x1888 () Int)
(declare-fun x977 () Int)
(declare-fun x1820 () Int)
(declare-fun x1325 () Int)
(declare-fun x2645 () Int)
(declare-fun x2606 () Int)
(declare-fun x2699 () Int)
(declare-fun x2778 () Int)
(declare-fun x1316 () Int)
(declare-fun x1589 () Int)
(declare-fun x2773 () Int)
(declare-fun x397 () Int)
(declare-fun x1637 () Bool)
(declare-fun x2852 () Int)
(declare-fun x116 () Int)
(declare-fun x1348 () Int)
(declare-fun x3108 () Int)
(declare-fun x2187 () Int)
(declare-fun x168 () Int)
(declare-fun x1906 () Int)
(declare-fun x58 () Bool)
(declare-fun x115 () Int)
(declare-fun x2803 () Bool)
(declare-fun x1134 () Int)
(declare-fun x2519 () Int)
(declare-fun x3012 () Int)
(declare-fun x32 () Int)
(declare-fun x410 () Bool)
(declare-fun x2792 () Int)
(declare-fun x1976 () Bool)
(declare-fun x236 () Int)
(declare-fun x1562 () Int)
(declare-fun x2775 () Bool)
(declare-fun x2749 () Int)
(declare-fun x2492 () Bool)
(declare-fun x1505 () Int)
(declare-fun x3130 () Int)
(declare-fun x587 () Int)
(declare-fun x2495 () Int)
(declare-fun x1539 () Int)
(declare-fun x2560 () Int)
(declare-fun x3128 () Int)
(declare-fun x1366 () Int)
(declare-fun x2109 () Int)
(declare-fun x1424 () Int)
(declare-fun x1633 () Int)
(declare-fun x3022 () Int)
(declare-fun x2827 () Int)
(declare-fun x1813 () Int)
(declare-fun x965 () Int)
(declare-fun x1632 () Int)
(declare-fun x1293 () Int)
(declare-fun x983 () Int)
(declare-fun x1951 () Int)
(declare-fun x1731 () Int)
(declare-fun x665 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1255 () Int)
(declare-fun x2538 () Bool)
(declare-fun x387 () Int)
(declare-fun x2817 () Int)
(declare-fun x507 () Int)
(declare-fun x403 () Bool)
(declare-fun x2023 () Int)
(declare-fun x876 () Int)
(declare-fun x1747 () Int)
(declare-fun x2515 () Int)
(declare-fun x1806 () Int)
(declare-fun x2267 () Int)
(declare-fun x907 () Int)
(declare-fun x2427 () Int)
(declare-fun x1776 () Bool)
(declare-fun x2451 () Int)
(declare-fun x1248 () Int)
(declare-fun x1039 () Bool)
(declare-fun x2960 () Int)
(declare-fun x2900 () Int)
(declare-fun x1933 () Int)
(declare-fun x253 () Int)
(declare-fun x399 () Int)
(declare-fun x972 () Int)
(declare-fun x2862 (Int) Int)
(declare-fun x2324 () Int)
(declare-fun x2518 () Int)
(declare-fun x731 () Int)
(declare-fun x941 () Int)
(declare-fun x3156 () Int)
(declare-fun x2598 () Int)
(declare-fun x1970 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x352 () Int)
(declare-fun x294 () Int)
(declare-fun x1208 () Int)
(declare-fun x1254 () Int)
(declare-fun x2272 () Int)
(declare-fun x2030 () Bool)
(declare-fun x2734 () Int)
(declare-fun x2536 () Int)
(declare-fun x242 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1715 () Int)
(declare-fun x2421 () Int)
(declare-fun x2517 () Int)
(declare-fun x2175 () Int)
(declare-fun x1828 () Int)
(declare-fun x3139 () Bool)
(declare-fun x273 () Int)
(declare-fun x2129 () Int)
(declare-fun x1753 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1896 () Bool)
(declare-fun x829 () Int)
(declare-fun x2022 () Int)
(declare-fun x1519 () Int)
(declare-fun x1109 () Int)
(declare-fun x528 () Int)
(declare-fun x368 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x2336 () Int)
(declare-fun x791 () Int)
(declare-fun x1249 () Bool)
(declare-fun x3159 () Int)
(declare-fun x1750 () Bool)
(declare-fun x2388 () Int)
(declare-fun x2524 () Int)
(declare-fun x377 () Int)
(declare-fun x854 () Int)
(declare-fun x820 () Int)
(declare-fun x764 () Bool)
(declare-fun x3157 () Int)
(declare-fun x2909 () Int)
(declare-fun x1127 () Int)
(declare-fun x2885 () Bool)
(declare-fun x978 () Int)
(declare-fun x173 () Bool)
(declare-fun x1237 () Int)
(declare-fun x2999 () Int)
(declare-fun x2907 () Int)
(declare-fun x1004 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x858 () Int)
(declare-fun x2135 () Int)
(declare-fun x346 () Int)
(declare-fun x1674 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x1309 () Int)
(declare-fun x951 () Int)
(declare-fun x2218 () Int)
(declare-fun x560 () Bool)
(declare-fun x2470 () Int)
(declare-fun x111 () Int)
(declare-fun x2955 () Int)
(declare-fun x636 () Int)
(declare-fun x420 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x38 () Int)
(declare-fun x1963 () Int)
(declare-fun x1102 () Int)
(declare-fun x2853 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x1459 () Int)
(declare-fun x1322 () Bool)
(declare-fun x1701 () Int)
(declare-fun x2573 () Int)
(declare-fun x2714 () Int)
(declare-fun x2836 () Int)
(declare-fun x475 () Int)
(declare-fun x1250 () Int)
(declare-fun x3099 () Int)
(declare-fun x3158 () Int)
(declare-fun x348 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x141 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x93 () Int)
(declare-fun x2210 () Int)
(declare-fun x670 () Bool)
(declare-fun x103 () Int)
(declare-fun x1063 () Int)
(declare-fun x358 () Int)
(declare-fun x384 () Int)
(declare-fun x337 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1461 () Bool)
(declare-fun x181 () Int)
(declare-fun x685 () Int)
(declare-fun x222 () Int)
(declare-fun x1568 () Int)
(declare-fun x101 () Int)
(declare-fun x973 () Int)
(declare-fun x1243 () Int)
(declare-fun x2167 () Int)
(declare-fun x1767 () Int)
(declare-fun x357 () Int)
(declare-fun x266 () Int)
(declare-fun x1735 () Int)
(declare-fun x2255 () Int)
(declare-fun x2998 () Int)
(declare-fun x677 () Int)
(declare-fun x433 () Int)
(declare-fun x63 () Int)
(declare-fun x2013 () Bool)
(declare-fun x2500 () Int)
(declare-fun x1400 () Int)
(declare-fun x609 () Bool)
(declare-fun x3153 () Int)
(declare-fun x1314 () Int)
(declare-fun x6 () Int)
(declare-fun x372 () Int)
(declare-fun x956 () Int)
(declare-fun x610 () Int)
(declare-fun x2520 () Int)
(declare-fun x23 () Int)
(declare-fun x1223 () Bool)
(declare-fun x19 () Int)
(declare-fun x124 () Int)
(declare-fun x3104 () Int)
(declare-fun x1620 () Int)
(declare-fun x2150 () Int)
(declare-fun x2808 () Int)
(declare-fun x7 () Int)
(declare-fun x48 () Int)
(declare-fun x2415 () Int)
(declare-fun x1001 () Int)
(declare-fun x894 () Int)
(declare-fun x943 () Int)
(declare-fun x1870 () Int)
(declare-fun x2235 () Int)
(declare-fun x2204 () Int)
(declare-fun x2766 () Bool)
(declare-fun x220 () Int)
(declare-fun x683 () Int)
(declare-fun x1835 () Int)
(declare-fun x170 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x249 () Int)
(declare-fun x1336 () Int)
(declare-fun x2475 () Int)
(declare-fun x1412 () Int)
(declare-fun x2347 () Int)
(declare-fun x1017 () Int)
(declare-fun x1448 (Int Int) Int)
(declare-fun x1066 () Int)
(declare-fun x2304 () Bool)
(declare-fun x2009 () Int)
(declare-fun x158 () Int)
(declare-fun x259 () Int)
(declare-fun x2684 () Int)
(declare-fun x2811 () Int)
(declare-fun x2804 () Bool)
(declare-fun x775 () Bool)
(declare-fun x303 () Bool)
(declare-fun x918 () Int)
(declare-fun x924 () Int)
(declare-fun x927 () Int)
(declare-fun x689 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x2228 () Int)
(declare-fun x716 () Int)
(declare-fun x1941 () Bool)
(declare-fun x2790 () Int)
(declare-fun x1024 () Bool)
(declare-fun x865 () Int)
(declare-fun x1555 () Int)
(declare-fun x2732 () Int)
(declare-fun x1281 () Bool)
(declare-fun x2912 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2768 () Int)
(declare-fun x615 () Int)
(declare-fun x2185 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x2858 () Int)
(declare-fun x1677 () Int)
(declare-fun x2480 () Int)
(declare-fun x1818 () Int)
(declare-fun x1267 () Int)
(declare-fun x1265 () Int)
(declare-fun x2177 () Int)
(declare-fun x2860 () Int)
(declare-fun x917 () Int)
(declare-fun x896 () Int)
(declare-fun x1560 () Int)
(declare-fun x1288 () Int)
(declare-fun x2648 () Int)
(declare-fun x1867 () Bool)
(declare-fun x1897 () Int)
(declare-fun x2926 (Int Int Int Int) Int)
(declare-fun x1456 () Int)
(declare-fun x365 () Int)
(declare-fun x621 () Bool)
(declare-fun x2213 () Int)
(declare-fun x1475 () Int)
(declare-fun x1622 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2725 () Int)
(declare-fun x1839 () Int)
(declare-fun x1122 () Int)
(declare-fun x705 () Int)
(declare-fun x1605 () Int)
(declare-fun x1961 () Int)
(declare-fun x1564 () Int)
(declare-fun x1497 () Int)
(declare-fun x256 () Int)
(declare-fun x2015 () Int)
(declare-fun x1507 () Int)
(declare-fun x2579 () Int)
(declare-fun x1799 () Int)
(declare-fun x1752 () Int)
(declare-fun x1928 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1453 () Int)
(declare-fun x1404 () Int)
(declare-fun x811 () Int)
(declare-fun x1384 () Int)
(declare-fun x889 () Int)
(declare-fun x2735 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1261 () Int)
(declare-fun x1800 () Int)
(declare-fun x1003 () Int)
(declare-fun x1954 () Int)
(declare-fun x2064 () Bool)
(declare-fun x477 () Int)
(declare-fun x153 () Int)
(declare-fun x3048 () Int)
(declare-fun x2996 () Int)
(declare-fun x4 () Bool)
(declare-fun x714 () Bool)
(declare-fun x3046 () Int)
(declare-fun x1469 () Bool)
(declare-fun x778 () Bool)
(declare-fun x937 () Int)
(declare-fun x2385 () Int)
(declare-fun x877 () Int)
(declare-fun x2168 () Bool)
(declare-fun x1050 () Int)
(declare-fun x319 () Int)
(declare-fun x2681 () Bool)
(declare-fun x2701 () Int)
(declare-fun x1876 () Int)
(declare-fun x3123 () Int)
(declare-fun x440 () Int)
(declare-fun x1328 () Int)
(declare-fun x2387 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x2326 () Int)
(declare-fun x1629 () Bool)
(declare-fun x2802 () Int)
(declare-fun x3023 () Int)
(declare-fun x1645 () Int)
(declare-fun x534 () Int)
(declare-fun x903 () Int)
(declare-fun x57 () Bool)
(declare-fun x244 () Bool)
(declare-fun x932 () Int)
(declare-fun x1900 () Int)
(declare-fun x2499 () Int)
(declare-fun x874 () Int)
(declare-fun x2527 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x390 () Int)
(declare-fun x2918 () Int)
(declare-fun x620 (Int Int Int Int) Int)
(declare-fun x1143 () Int)
(declare-fun x3093 () Int)
(declare-fun x284 () Int)
(declare-fun x411 (Int) Int)
(declare-fun x1197 () Int)
(declare-fun x1399 () Int)
(declare-fun x934 () Int)
(declare-fun x2393 () Bool)
(declare-fun x304 () Int)
(declare-fun x825 () Int)
(declare-fun x2414 () Int)
(declare-fun x2057 () Int)
(declare-fun x1405 () Int)
(declare-fun x1350 () Int)
(declare-fun x1094 () Int)
(declare-fun x3085 () Int)
(declare-fun x1068 () Int)
(declare-fun x109 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x2905 () Int)
(declare-fun x1040 () Int)
(declare-fun x2709 () Bool)
(declare-fun x1837 () Int)
(declare-fun x2201 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x1923 () Int)
(declare-fun x802 () Int)
(declare-fun x3016 () Int)
(declare-fun x252 () Int)
(declare-fun x2991 () Bool)
(declare-fun x790 () Bool)
(declare-fun x2024 () Int)
(declare-fun x2215 () Int)
(declare-fun x1133 () Int)
(declare-fun x707 () Int)
(declare-fun x127 () Bool)
(declare-fun x742 () Int)
(declare-fun x901 () Int)
(declare-fun x1452 () Int)
(declare-fun x1542 () Int)
(declare-fun x756 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x1786 () Int)
(declare-fun x80 () Int)
(declare-fun x1372 () Int)
(declare-fun x2423 () Int)
(declare-fun x998 () Bool)
(declare-fun x2040 () Int)
(declare-fun x2581 () Int)
(declare-fun x3109 () Int)
(declare-fun x1078 () Int)
(declare-fun x2430 () Int)
(declare-fun x3134 () Int)
(declare-fun x2869 () Bool)
(declare-fun x235 () Int)
(declare-fun x406 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x366 () Int)
(declare-fun x2055 () Int)
(declare-fun x2501 () Int)
(declare-fun x2085 () Bool)
(declare-fun x3015 () Int)
(declare-fun x1783 () Int)
(declare-fun x2184 () Int)
(declare-fun x2306 () Int)
(declare-fun x18 () Int)
(declare-fun x1733 () Int)
(declare-fun x485 () Bool)
(declare-fun x1422 () Int)
(declare-fun x3083 () Int)
(declare-fun x3141 () Int)
(declare-fun x2097 () Int)
(declare-fun x2871 () Int)
(declare-fun x2232 () Int)
(declare-fun x1339 () Bool)
(declare-fun x2379 () Int)
(declare-fun x1990 () Int)
(declare-fun x2578 () Bool)
(declare-fun x1470 () Int)
(declare-fun x2793 () Int)
(declare-fun x1451 () Int)
(declare-fun x2632 () Int)
(declare-fun x13 () Int)
(declare-fun x77 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1434 () Bool)
(declare-fun x2713 () Int)
(declare-fun x201 () Int)
(declare-fun x3147 () Bool)
(declare-fun x450 () Int)
(declare-fun x1797 () Int)
(declare-fun x1669 () Int)
(declare-fun x817 () Int)
(declare-fun x638 () Int)
(declare-fun x1457 () Int)
(declare-fun x1534 () Int)
(declare-fun x2986 () Int)
(declare-fun x785 () Bool)
(declare-fun x2482 () Int)
(declare-fun x483 () Int)
(declare-fun x862 () Int)
(declare-fun x1881 () Int)
(declare-fun x1914 () Bool)
(declare-fun x409 () Int)
(declare-fun x515 () Int)
(declare-fun x1577 () Int)
(declare-fun x3152 () Int)
(declare-fun x3072 () Int)
(declare-fun x2876 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1059 () Int)
(declare-fun x2720 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1000 () Int)
(declare-fun x1021 () Bool)
(declare-fun x2608 () Int)
(declare-fun x2172 () Int)
(declare-fun x1603 () Int)
(declare-fun x1201 () Int)
(declare-fun x491 () Int)
(declare-fun x2140 () Int)
(declare-fun x2968 () Int)
(declare-fun x92 () Bool)
(declare-fun x1156 () Int)
(declare-fun x853 () Int)
(declare-fun x2843 () Int)
(declare-fun x2426 () Int)
(declare-fun x1093 () Int)
(declare-fun x205 () Int)
(declare-fun x1756 () Int)
(declare-fun x2637 () Bool)
(declare-fun x1716 () Int)
(declare-fun x1161 () Int)
(declare-fun x2441 () Int)
(declare-fun x1086 () Int)
(declare-fun x1263 () Int)
(declare-fun x2044 () Int)
(declare-fun x1858 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x1618 () Int)
(declare-fun x3117 () Int)
(declare-fun x1642 () Int)
(declare-fun x204 () Int)
(declare-fun x2821 () Int)
(declare-fun x2411 () Int)
(declare-fun x601 () Int)
(declare-fun x1762 () Bool)
(declare-fun x868 () Int)
(declare-fun x2224 () Int)
(declare-fun x788 () Bool)
(declare-fun x2142 () Int)
(declare-fun x2980 () Int)
(declare-fun x1107 () Int)
(declare-fun x1233 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1728 () Int)
(declare-fun x1496 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x1967 () Int)
(declare-fun x313 () Bool)
(declare-fun x476 () Int)
(declare-fun x761 () Int)
(declare-fun x2833 () Bool)
(declare-fun x2161 () Int)
(declare-fun x2362 () Int)
(declare-fun x2207 () Bool)
(declare-fun x1258 () Int)
(declare-fun x2965 () Int)
(declare-fun x10 () Int)
(declare-fun x200 () Int)
(declare-fun x2483 () Int)
(declare-fun x2587 () Int)
(declare-fun x247 () Int)
(declare-fun x2938 () Int)
(declare-fun x2038 () Bool)
(declare-fun x179 () Int)
(declare-fun x3092 () Bool)
(declare-fun x605 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x645 () Int)
(declare-fun x1041 () Int)
(declare-fun x1153 () Bool)
(declare-fun x919 () Int)
(declare-fun x2282 () Int)
(declare-fun x1361 () Int)
(declare-fun x751 () Int)
(declare-fun x1105 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x445 () Bool)
(declare-fun x2829 () Int)
(declare-fun x1286 () Int)
(declare-fun x1515 () Int)
(declare-fun x1020 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1292 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x2941 () Int)
(declare-fun x873 () Bool)
(declare-fun x1279 () Int)
(declare-fun x505 () Int)
(declare-fun x1008 () Int)
(declare-fun x1235 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x2199 () Int)
(declare-fun x1117 () Int)
(declare-fun x1221 () Int)
(declare-fun x2552 () Int)
(declare-fun x1755 () Bool)
(declare-fun x989 () Int)
(declare-fun x423 () Int)
(declare-fun x3078 () Int)
(declare-fun x1957 (Int) Int)
(declare-fun x3031 () Int)
(declare-fun x1126 () Bool)
(declare-fun x386 () Int)
(declare-fun x2930 () Int)
(declare-fun x2682 () Int)
(declare-fun x231 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x805 () Int)
(declare-fun x3140 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x2420 () Int)
(declare-fun x1627 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x3105 () Int)
(declare-fun x688 () Int)
(declare-fun x1723 () Int)
(declare-fun x1651 () Int)
(declare-fun x2819 () Int)
(declare-fun x1869 () Int)
(declare-fun x159 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x2114 () Int)
(declare-fun x503 () Int)
(declare-fun x2452 () Bool)
(declare-fun x2585 () Int)
(declare-fun x315 () Int)
(declare-fun x2087 () Int)
(declare-fun x144 () Int)
(declare-fun x1988 () Int)
(declare-fun x826 () Int)
(declare-fun x732 () Int)
(declare-fun x443 () Int)
(declare-fun x2772 () Int)
(declare-fun x2042 () Int)
(declare-fun x3073 () Bool)
(declare-fun x860 () Int)
(declare-fun x1477 () Int)
(declare-fun x2652 () Int)
(declare-fun x797 () Int)
(declare-fun x2212 () Int)
(declare-fun x953 () Int)
(declare-fun x385 () Int)
(declare-fun x14 () Int)
(declare-fun x2171 () Bool)
(declare-fun x2877 () Int)
(declare-fun x2143 () Int)
(declare-fun x2508 () Int)
(declare-fun x2859 () Bool)
(declare-fun x848 () Int)
(declare-fun x1935 () Int)
(declare-fun x795 () Int)
(declare-fun x2540 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1926 () Int)
(declare-fun x2776 () Int)
(declare-fun x2731 () Int)
(declare-fun x596 () Int)
(declare-fun x374 () Int)
(declare-fun x1313 () Int)
(declare-fun x422 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1591 () Bool)
(declare-fun x2642 () Int)
(declare-fun x2006 () Bool)
(declare-fun x336 () Bool)
(declare-fun x539 () Bool)
(declare-fun x216 () Bool)
(declare-fun x150 () Int)
(declare-fun x581 () Int)
(declare-fun x2443 () Int)
(declare-fun x2947 () Int)
(declare-fun x675 (Int Int) Int)
(declare-fun x2659 () Bool)
(declare-fun x33 () Int)
(declare-fun x1746 () Int)
(declare-fun x784 () Int)
(declare-fun x1554 () Int)
(declare-fun x2845 () Bool)
(declare-fun x2597 () Int)
(declare-fun x461 () Int)
(declare-fun x1949 () Bool)
(declare-fun x2297 () Int)
(declare-fun x2879 () Int)
(declare-fun x1593 () Int)
(declare-fun x1722 () Int)
(declare-fun x2629 (Int Int) Int)
(declare-fun x2041 () Int)
(declare-fun x1548 () Int)
(declare-fun x462 () Int)
(declare-fun x1996 () Int)
(declare-fun x2291 () Int)
(declare-fun x559 () Bool)
(declare-fun x302 () Int)
(declare-fun x2722 () Int)
(declare-fun x3028 () Bool)
(declare-fun x2611 () Int)
(declare-fun x1538 () Int)
(declare-fun x2496 () Int)
(declare-fun x3069 () Int)
(declare-fun x2155 () Int)
(declare-fun x1492 () Int)
(declare-fun x102 () Int)
(declare-fun x810 () Int)
(declare-fun x1053 () Int)
(declare-fun x1060 () Bool)
(declare-fun x2990 () Int)
(declare-fun x188 () Int)
(declare-fun x747 () Int)
(declare-fun x2733 () Bool)
(declare-fun x2835 () Bool)
(declare-fun x2992 () Int)
(declare-fun x2 () Int)
(declare-fun x535 () Bool)
(declare-fun x182 () Int)
(declare-fun x942 () Int)
(declare-fun x1960 () Int)
(declare-fun x1332 () Int)
(declare-fun x1978 () Int)
(declare-fun x2300 () Int)
(declare-fun x345 () Int)
(declare-fun x1544 () Int)
(declare-fun x1807 () Int)
(declare-fun x1155 () Int)
(declare-fun x31 () Int)
(declare-fun x1791 () Bool)
(declare-fun x538 () Int)
(declare-fun x2363 () Int)
(declare-fun x2248 () Int)
(declare-fun x1830 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x1576 () Int)
(declare-fun x2962 (Int) Int)
(declare-fun x1137 () Bool)
(declare-fun x1572 () Int)
(declare-fun x2953 () Int)
(declare-fun x1911 () Bool)
(declare-fun x1763 () Int)
(declare-fun x1044 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x1219 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1185 () Int)
(declare-fun x3137 () Int)
(declare-fun x3097 () Int)
(declare-fun x2045 () Int)
(declare-fun x1296 () Bool)
(declare-fun x633 () Int)
(declare-fun x2841 () Bool)
(declare-fun x270 () Bool)
(declare-fun x2371 () Int)
(declare-fun x2694 () Bool)
(declare-fun x1794 () Int)
(declare-fun x2183 () Int)
(declare-fun x1808 () Int)
(declare-fun x1696 () Int)
(declare-fun x976 () Int)
(declare-fun x1090 () Int)
(declare-fun x120 () Int)
(declare-fun x514 () Bool)
(declare-fun x835 () Int)
(declare-fun x206 () Int)
(declare-fun x66 () Int)
(declare-fun x3129 () Int)
(declare-fun x2125 () Bool)
(declare-fun x2002 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2698 () Int)
(declare-fun x2335 () Int)
(declare-fun x984 () Int)
(declare-fun x642 () Bool)
(declare-fun x2402 () Int)
(declare-fun x2577 () Int)
(declare-fun x2716 () Int)
(declare-fun x2323 () Int)
(declare-fun x140 () Int)
(declare-fun x1420 () Int)
(declare-fun x1773 () Bool)
(declare-fun x3070 () Int)
(declare-fun x3026 () Int)
(declare-fun x594 () Bool)
(declare-fun x305 () Int)
(declare-fun x1131 () Int)
(declare-fun x258 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x333 () Int)
(declare-fun x2724 () Int)
(declare-fun x814 () Int)
(declare-fun x138 () Int)
(declare-fun x373 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1398 () Int)
(declare-fun x3090 () Int)
(declare-fun x2830 () Int)
(declare-fun x1334 () Int)
(declare-fun x1342 () Bool)
(declare-fun x2029 () Int)
(declare-fun x1181 () Bool)
(declare-fun x134 () Int)
(declare-fun x1608 () Int)
(declare-fun x2003 () Bool)
(declare-fun x629 () Int)
(declare-fun x1917 () Int)
(declare-fun x1186 () Int)
(declare-fun x15 () Int)
(declare-fun x488 () Int)
(declare-fun x766 () Int)
(declare-fun x754 () Int)
(declare-fun x1771 () Int)
(declare-fun x807 () Bool)
(declare-fun x760 () Bool)
(declare-fun x1871 () Int)
(declare-fun x2789 () Int)
(declare-fun x1782 () Int)
(declare-fun x2406 () Int)
(declare-fun x1130 () Int)
(declare-fun x680 () Bool)
(declare-fun x1253 () Int)
(declare-fun x2864 () Int)
(declare-fun x2419 () Int)
(declare-fun x350 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x335 () Int)
(declare-fun x546 () Bool)
(declare-fun x3086 () Int)
(declare-fun x2890 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x248 (Int) Int)
(declare-fun x1981 () Int)
(declare-fun x902 () Bool)
(declare-fun x1035 () Int)
(declare-fun x34 () Int)
(declare-fun x1061 () Bool)
(declare-fun x1784 () Int)
(declare-fun x2847 () Bool)
(declare-fun x1247 () Int)
(declare-fun x1729 () Bool)
(declare-fun x776 () Int)
(declare-fun x451 () Int)
(declare-fun x2750 () Int)
(declare-fun x16 () Int)
(declare-fun x1135 () Int)
(declare-fun x2710 () Bool)
(declare-fun x2824 () Int)
(declare-fun x2563 () Int)
(declare-fun x1112 () Int)
(declare-fun x1529 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x171 () Int)
(declare-fun x1128 () Bool)
(declare-fun x329 () Int)
(declare-fun x2020 () Int)
(declare-fun x1817 () Int)
(declare-fun x2950 () Bool)
(declare-fun x1966 () Int)
(declare-fun x827 () Int)
(declare-fun x2549 () Bool)
(declare-fun x2609 () Int)
(declare-fun x1822 () Int)
(declare-fun x1321 () Bool)
(declare-fun x160 () Int)
(declare-fun x1613 () Int)
(declare-fun x2079 () Int)
(declare-fun x660 () Int)
(declare-fun x1440 () Int)
(declare-fun x1802 () Bool)
(declare-fun x73 () Bool)
(declare-fun x1491 () Int)
(declare-fun x2208 () Int)
(declare-fun x2644 () Int)
(declare-fun x1089 () Int)
(declare-fun x2463 () Int)
(declare-fun x895 () Int)
(declare-fun x1182 () Int)
(declare-fun x2966 () Int)
(declare-fun x2753 () Int)
(declare-fun x2386 () Int)
(declare-fun x598 () Int)
(declare-fun x2358 () Bool)
(declare-fun x2464 () Int)
(declare-fun x290 () Int)
(declare-fun x554 () Int)
(declare-fun x1693 () Int)
(declare-fun x2194 () Int)
(declare-fun x1789 () Bool)
(declare-fun x2618 () Int)
(declare-fun x2256 () Bool)
(declare-fun x512 () Int)
(declare-fun x37 () Bool)
(declare-fun x2570 () Int)
(declare-fun x1022 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1002 () Int)
(declare-fun x2365 () Int)
(declare-fun x1852 () Int)
(declare-fun x981 () Int)
(declare-fun x2490 () Int)
(declare-fun x1132 () Int)
(declare-fun x1955 () Int)
(declare-fun x583 (Int) Int)
(declare-fun x314 () Int)
(declare-fun x990 () Int)
(declare-fun x2820 () Int)
(declare-fun x2922 () Int)
(declare-fun x2450 () Int)
(declare-fun x1825 () Int)
(declare-fun x1468 () Int)
(declare-fun x3001 () Bool)
(declare-fun x569 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x2624 () Int)
(declare-fun x359 () Int)
(declare-fun x509 () Bool)
(declare-fun x2679 () Int)
(declare-fun x510 () Bool)
(declare-fun x87 () Int)
(declare-fun x1083 () Int)
(declare-fun x1295 () Int)
(declare-fun x268 () Int)
(declare-fun x1228 () Int)
(declare-fun x211 () Int)
(declare-fun x574 () Bool)
(declare-fun x404 (Int) Int)
(declare-fun x1732 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x1454 () Int)
(declare-fun x536 () Int)
(declare-fun x1476 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x2401 () Int)
(declare-fun x1526 () Int)
(declare-fun x1246 () Int)
(declare-fun x126 () Int)
(declare-fun x1865 () Int)
(declare-fun x1345 () Int)
(declare-fun x2943 () Int)
(declare-fun x2828 () Int)
(declare-fun x1575 () Int)
(declare-fun x2188 () Int)
(declare-fun x3112 () Int)
(declare-fun x800 () Int)
(declare-fun x2050 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1920 () Bool)
(declare-fun x888 () Int)
(declare-fun x3006 () Bool)
(declare-fun x1074 () Int)
(declare-fun x340 () Int)
(declare-fun x436 () Bool)
(declare-fun x1903 () Int)
(declare-fun x1578 () Int)
(declare-fun x628 () Int)
(declare-fun x199 () Int)
(declare-fun x2874 () Int)
(declare-fun x1738 () Int)
(declare-fun x1607 () Int)
(declare-fun x2147 () Int)
(declare-fun x3107 () Bool)
(declare-fun x765 () Bool)
(declare-fun x470 () Int)
(declare-fun x1691 () Int)
(declare-fun x1029 () Int)
(declare-fun x1231 () Int)
(declare-fun x2281 () Int)
(declare-fun x2409 () Int)
(declare-fun x1418 () Bool)
(declare-fun x773 () Int)
(declare-fun x2601 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x1536 () Int)
(declare-fun x2756 () Int)
(declare-fun x118 () Int)
(declare-fun x2566 () Int)
(declare-fun x2633 () Bool)
(declare-fun x1895 () Int)
(declare-fun x2807 () Int)
(declare-fun x2533 () Int)
(declare-fun x255 () Int)
(declare-fun x388 () Int)
(declare-fun x667 () Bool)
(declare-fun x1310 () Int)
(declare-fun x167 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2091 () Int)
(declare-fun x1517 () Int)
(declare-fun x1540 () Int)
(declare-fun x568 () Int)
(declare-fun x2973 () Int)
(declare-fun x467 () Int)
(declare-fun x593 () Int)
(declare-fun x2708 () Int)
(declare-fun x2467 () Bool)
(declare-fun x2599 () Bool)
(declare-fun x2025 () Int)
(declare-fun x2431 () Bool)
(declare-fun x3005 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1597 () Int)
(declare-fun x500 () Int)
(declare-fun x277 () Int)
(declare-fun x1226 () Int)
(declare-fun x1737 () Int)
(declare-fun x1679 () Bool)
(declare-fun x2826 () Int)
(declare-fun x2392 () Bool)
(declare-fun x1796 () Int)
(declare-fun x1552 () Int)
(declare-fun x2787 () Int)
(declare-fun x2209 () Bool)
(declare-fun x1621 () Int)
(declare-fun x3082 () Int)
(declare-fun x2634 () Int)
(declare-fun x2196 () Bool)
(declare-fun x777 () Bool)
(declare-fun x2100 () Int)
(declare-fun x2001 () Int)
(declare-fun x1580 () Int)
(declare-fun x1699 () Int)
(declare-fun x498 () Int)
(declare-fun x221 () Int)
(declare-fun x1522 () Int)
(declare-fun x2972 () Int)
(declare-fun x1188 () Bool)
(declare-fun x2814 () Int)
(declare-fun x1291 () Int)
(declare-fun x1425 () Int)
(declare-fun x1121 () Int)
(declare-fun x2818 () Int)
(declare-fun x567 () Bool)
(declare-fun x376 () Int)
(declare-fun x2621 () Int)
(declare-fun x1225 () Int)
(declare-fun x1173 () Int)
(declare-fun x1268 () Int)
(declare-fun x2610 () Int)
(declare-fun x1648 () Int)
(declare-fun x544 () Bool)
(declare-fun x3007 () Int)
(declare-fun x2954 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1999 () Int)
(declare-fun x2229 () Int)
(declare-fun x2639 () Int)
(declare-fun x2391 () Int)
(declare-fun x2354 () Int)
(declare-fun x710 () Int)
(declare-fun x239 () Int)
(declare-fun x2262 () Int)
(declare-fun x1011 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x813 () Int)
(declare-fun x2797 () Int)
(declare-fun x2037 () Bool)
(declare-fun x2160 () Int)
(declare-fun x2089 () Int)
(declare-fun x1392 () Bool)
(declare-fun x2920 () Int)
(declare-fun x1602 () Int)
(declare-fun x1220 () Bool)
(declare-fun x2193 () Int)
(declare-fun x1489 () Int)
(declare-fun x280 () Int)
(declare-fun x1944 () Int)
(declare-fun x856 () Bool)
(declare-fun x516 () Int)
(declare-fun x725 () Int)
(declare-fun x2739 () Bool)
(declare-fun x741 () Int)
(declare-fun x2084 () Int)
(declare-fun x1202 () Int)
(declare-fun x1409 () Int)
(declare-fun x824 () Bool)
(declare-fun x1759 () Int)
(declare-fun x2786 () Int)
(declare-fun x2005 () Int)
(declare-fun x975 () Int)
(declare-fun x1274 () Bool)
(declare-fun x184 () Int)
(declare-fun x767 () Int)
(declare-fun x1278 () Int)
(declare-fun x2104 () Int)
(declare-fun x699 () Int)
(declare-fun x1383 () Int)
(declare-fun x750 () Int)
(declare-fun x772 () Bool)
(declare-fun x1204 () Int)
(declare-fun x649 () Int)
(declare-fun x1315 () Bool)
(declare-fun x794 () Int)
(declare-fun x1070 () Int)
(declare-fun x2794 () Int)
(declare-fun x395 () Int)
(declare-fun x457 () Int)
(declare-fun x1413 () Int)
(declare-fun x2529 () Bool)
(declare-fun x379 () Int)
(declare-fun x2693 () Int)
(declare-fun x2106 () Int)
(declare-fun x891 () Int)
(declare-fun x2799 () Int)
(declare-fun x881 () Int)
(declare-fun x1095 () Int)
(declare-fun x2158 () Int)
(declare-fun x238 () Int)
(declare-fun x2936 () Int)
(declare-fun x3113 () Int)
(declare-fun x566 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1709 () Bool)
(declare-fun x2254 () Int)
(declare-fun x396 () Int)
(declare-fun x3034 () Int)
(declare-fun x484 () Bool)
(declare-fun x2940 () Int)
(declare-fun x2856 () Int)
(declare-fun x2800 () Bool)
(declare-fun x1013 () Int)
(declare-fun x2268 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x2137 () Int)
(declare-fun x548 () Int)
(declare-fun x2458 () Int)
(declare-fun x2964 () Int)
(declare-fun x1437 () Int)
(declare-fun x1795 () Bool)
(declare-fun x1912 () Int)
(declare-fun x2238 () Int)
(declare-fun x1193 () Int)
(declare-fun x2915 () Int)
(declare-fun x2181 () Int)
(declare-fun x2978 () Int)
(declare-fun x264 () Int)
(declare-fun x353 () Int)
(declare-fun x2593 () Int)
(declare-fun x1925 () Int)
(declare-fun x1550 () Int)
(declare-fun x1045 () Int)
(declare-fun x60 () Int)
(declare-fun x682 () Bool)
(declare-fun x1187 () Int)
(declare-fun x1445 () Int)
(declare-fun x721 (Int) Int)
(declare-fun x1563 () Int)
(declare-fun x2569 () Int)
(declare-fun x2072 () Int)
(declare-fun x1027 (Int) Int)
(define-fun x295 ((x1913 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1913) (>= x1913 0)) x1913 (- x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1033 ((x1913 Int)) Int (ite (and (< x1913 0) (>= x1913 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1913 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1913))
(define-fun x85 ((x945 Int)) Bool (and (>= x945 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x945)))
(define-fun x1890 ((x945 Int)) Bool (and (= (x1448 x945 115792089237316195423570985008687907853269984665640564039457584007913129639935) x945) (= (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639935 x945) x945)))
(define-fun x349 ((x945 Int)) Bool (and (= 0 (x1448 x945 0)) (= (x1448 0 x945) 0)))
(define-fun x2071 ((x945 Int)) Bool (= (x1448 x945 x945) x945))
(define-fun x2690 ((x945 Int)) Bool (and (x2071 x945) (x1890 x945) (x349 x945)))
(define-fun x2200 ((x945 Int) (x1386 Int)) Bool (= (x1448 x945 x1386) (x1448 x1386 x945)))
(define-fun x833 ((x945 Int) (x1386 Int)) Bool (and (=> (>= x945 0) (>= x945 (x1448 x945 x1386))) (<= 0 (x1448 x945 x1386)) (=> (>= x1386 0) (<= (x1448 x945 x1386) x1386))))
(define-fun x958 ((x945 Int) (x1386 Int)) Bool (and (x833 x945 x1386) (x2200 x945 x1386)))
(define-fun x468 ((x945 Int)) Bool (= (mod x945 1461501637330902918203684832716283019655932542976) (x1448 x945 1461501637330902918203684832716283019655932542975)))
(define-fun x1842 ((x945 Int)) Bool (and (x468 x945) (x958 x945 1461501637330902918203684832716283019655932542975)))
(define-fun x2257 ((x945 Int)) Bool (= (+ (x1448 x945 115792089237316195423570985008687907853269984665640564039457584007913129639904) (mod x945 32)) (mod x945 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2230 ((x945 Int)) Bool (and (x2257 x945) (x958 x945 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1411 ((x1702 Int)) Int (ite (< x1702 x355) (x2962 x1702) 0))
(define-fun x426 ((x1702 Int)) Int 0)
(define-fun x2240 ((x1702 Int)) Int (x1362 x1702))
(define-fun x2666 ((x1702 Int)) Int (x2738 x1702))
(define-fun x2241 ((x1702 Int)) Int (x1559 x1702))
(define-fun x1908 ((x1702 Int)) Int (x1171 x1702))
(define-fun x719 ((x1702 Int)) Int (x2988 x1702))
(define-fun x1965 ((x1702 Int)) Int 0)
(define-fun x666 ((x1702 Int)) Int (ite (= x1702 x927) x259 (x1027 x1702)))
(define-fun x324 ((x1702 Int)) Int (ite (= x2269 x1702) x36 (x666 x1702)))
(define-fun x1525 ((x1702 Int)) Int 0)
(define-fun x2664 ((x1702 Int)) Int (ite (= x1702 4) 32 (x1525 x1702)))
(define-fun x723 ((x1702 Int)) Int (ite (= x1702 36) x1857 (x2664 x1702)))
(define-fun x897 ((x1702 Int)) Int (ite (= x1702 68) x2359 (x723 x1702)))
(define-fun x479 ((x1702 Int)) Int (ite (= 100 x1702) x529 (x897 x1702)))
(define-fun x1499 ((x1702 Int)) Int (ite (= 132 x1702) 352 (x479 x1702)))
(define-fun x2672 ((x1702 Int)) Int (ite (= x1702 388) x1075 (x1499 x1702)))
(define-fun x2916 ((x1702 Int)) Int (ite (and (< x1702 (+ x1340 420)) (<= 420 x1702)) (x2240 (- x1702 420)) (x2672 x1702)))
(define-fun x2033 ((x1702 Int)) Int (ite (= 164 x1702) x2618 (x2916 x1702)))
(define-fun x1924 ((x1702 Int)) Int (ite (= x1702 x2344) x645 (x2033 x1702)))
(define-fun x2657 ((x1702 Int)) Int (ite (and (>= x1702 x1475) (< x1702 (+ x1475 x3089))) (x2666 (- x1702 x1475)) (x1924 x1702)))
(define-fun x2967 ((x1702 Int)) Int (ite (= 196 x1702) x2977 (x2657 x1702)))
(define-fun x656 ((x1702 Int)) Int (ite (= x2420 x1702) x607 (x2967 x1702)))
(define-fun x3040 ((x1702 Int)) Int (ite (and (>= x1702 x448) (< x1702 (+ x448 x2436))) (x2241 (- x1702 x448)) (x656 x1702)))
(define-fun x342 ((x1702 Int)) Int (ite (= 228 x1702) x2103 (x3040 x1702)))
(define-fun x17 ((x1702 Int)) Int (ite (= x2349 x1702) x1874 (x342 x1702)))
(define-fun x986 ((x1702 Int)) Int (ite (and (>= x1702 x1571) (> (+ x1874 x1571) x1702)) (x1908 (- x1702 x1571)) (x17 x1702)))
(define-fun x2931 ((x1702 Int)) Int (ite (= x1702 260) x932 (x986 x1702)))
(define-fun x640 ((x1702 Int)) Int (ite (= x2785 x1702) x1994 (x2931 x1702)))
(define-fun x840 ((x1702 Int)) Int (ite (and (< x1702 (+ x1667 x728)) (>= x1702 x728)) (x719 (- x1702 x728)) (x640 x1702)))
(define-fun x882 ((x1702 Int)) Int (ite (= x1702 292) x1310 (x840 x1702)))
(define-fun x1079 ((x1702 Int)) Int (ite (= 324 x1702) x2427 (x882 x1702)))
(define-fun x643 ((x1702 Int)) Int (ite (= 356 x1702) x939 (x1079 x1702)))
(define-fun x2182 ((x1702 Int)) Int (ite (= x1702 x1824) x2280 (x324 x1702)))
(define-fun x3071 ((x1702 Int)) Int (ite (= x579 x1702) x1127 (x2182 x1702)))
(define-fun x864 ((x1702 Int)) Int (ite (= x1702 128) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x426 x1702)))
(define-fun x1713 ((x1702 Int)) Int (ite (= 132 x1702) x2602 (x864 x1702)))
(define-fun x624 ((x1702 Int)) Int (ite (= x1702 164) 37664329658542632380461339884011895550187483938955784695590509376205521682432 (x1713 x1702)))
(define-fun x3013 ((x1702 Int)) Int (ite (and (< x1702 160) (<= 128 x1702)) (x2619 (- x1702 128)) (x624 x1702)))
(define-fun x1473 ((x1702 Int)) Int (ite x541 (x3013 x1702) (x624 x1702)))
(define-fun x955 ((x1702 Int)) Int (ite (and (>= x1702 128) (< x1702 160)) (x2619 (- x1702 128)) (x1473 x1702)))
(define-fun x1085 ((x1702 Int)) Int (ite (= x1702 288) x2322 (x955 x1702)))
(define-fun x2961 ((x1702 Int)) Int (ite (= x1702 160) 288 (x1085 x1702)))
(define-fun x1486 ((x1702 Int)) Int (ite (= x1702 320) x3104 (x2961 x1702)))
(define-fun x957 ((x1702 Int)) Int (ite (= 352 x1702) x2096 (x1486 x1702)))
(define-fun x2315 ((x1702 Int)) Int (ite (= 448 x1702) x1088 (x957 x1702)))
(define-fun x2271 ((x1702 Int)) Int (ite (= x1702 x2091) x1706 (x2315 x1702)))
(define-fun x729 ((x1702 Int)) Int (ite (= x1702 x359) x1731 (x2271 x1702)))
(define-fun x1174 ((x1702 Int)) Int (ite (= x1702 x1371) x1661 (x729 x1702)))
(define-fun x1343 ((x1702 Int)) Int (ite (and (<= x739 x1702) (< x1702 (+ x1661 x739))) (x643 (- (+ x2652 x1702) x739)) (x1174 x1702)))
(define-fun x2307 ((x1702 Int)) Int (ite (= x1702 x1451) 0 (x1343 x1702)))
(define-fun x1145 ((x1702 Int)) Int (ite (= x2421 x1702) x1371 (x2307 x1702)))
(define-fun x3 ((x1702 Int)) Int (ite (= 480 x1702) x2091 (x1145 x1702)))
(define-fun x1692 ((x1702 Int)) Int (ite x1154 (x2315 x1702) (x3 x1702)))
(define-fun x2502 ((x1702 Int)) Int (ite (= 384 x1702) 448 (x1692 x1702)))
(define-fun x2595 ((x1702 Int)) Int (ite (= x279 x1702) x262 (x2502 x1702)))
(define-fun x1136 ((x1702 Int)) Int (ite (and (<= x2070 x1702) (< x1702 (+ x262 x2070))) (x643 (- (+ x1354 x1702) x2070)) (x2595 x1702)))
(define-fun x1209 ((x1702 Int)) Int (ite (= x2126 x1702) 0 (x1136 x1702)))
(define-fun x2757 ((x1702 Int)) Int (ite (= x1702 416) x279 (x1209 x1702)))
(define-fun x1076 ((x1702 Int)) Int (ite (= x1702 192) 320 (x2757 x1702)))
(define-fun x2705 ((x1702 Int)) Int (ite (= 224 x1702) x358 (x1076 x1702)))
(define-fun x2746 ((x1702 Int)) Int (ite (= x1702 256) x2208 (x2705 x1702)))
(define-fun x597 ((x1702 Int)) Int (ite (= x1702 x2476) x1045 (x2746 x1702)))
(define-fun x2284 ((x1702 Int)) Int (ite (and (> (+ x2400 x1045) x1702) (<= x2400 x1702)) (x643 (- (+ x1384 x1702) x2400)) (x597 x1702)))
(define-fun x1588 ((x1702 Int)) Int (ite (= x1702 x1619) 0 (x2284 x1702)))
(define-fun x1768 ((x1702 Int)) Int (ite (= x2378 x1702) x385 (x1588 x1702)))
(define-fun x2069 ((x1702 Int)) Int (ite (= x3027 x1702) x887 (x1768 x1702)))
(define-fun x323 ((x1702 Int)) Int (ite (= x3159 x1702) x2786 (x2069 x1702)))
(define-fun x668 ((x1702 Int)) Int (ite (= x919 x1702) x70 (x323 x1702)))
(define-fun x2149 ((x1702 Int)) Int (ite (= x2089 x1702) x3042 (x668 x1702)))
(define-fun x1821 ((x1702 Int)) Int (ite (= x1702 x2651) x400 (x2149 x1702)))
(define-fun x55 ((x1702 Int)) Int (ite (= x1702 x876) x685 (x1821 x1702)))
(define-fun x2615 ((x1702 Int)) Int (ite (= x1702 x1) x919 (x55 x1702)))
(define-fun x2035 ((x1702 Int)) Int (ite x1275 (x323 x1702) (x2615 x1702)))
(define-fun x1864 ((x1702 Int)) Int (ite (= x2051 x1702) x3159 (x2035 x1702)))
(define-fun x1023 ((x1702 Int)) Int (ite (= x1015 x1702) x2245 (x1864 x1702)))
(define-fun x659 ((x1702 Int)) Int (ite (= x1334 x1702) x118 (x1023 x1702)))
(define-fun x837 ((x1702 Int)) Int (ite (= x1702 x1572) x2314 (x659 x1702)))
(define-fun x267 ((x1702 Int)) Int (ite (= x1702 x340) x130 (x837 x1702)))
(define-fun x121 ((x1702 Int)) Int (ite (= x627 x1702) x2218 (x267 x1702)))
(define-fun x83 ((x1702 Int)) Int (ite (= x1068 x1702) x2062 (x121 x1702)))
(define-fun x806 ((x1702 Int)) Int (ite (= x961 x1702) x1334 (x83 x1702)))
(define-fun x1360 ((x1702 Int)) Int (ite x2355 (x1023 x1702) (x806 x1702)))
(define-fun x2531 ((x1702 Int)) Int (ite (= x1966 x1702) x1015 (x1360 x1702)))
(define-fun x2296 ((x1702 Int)) Int (ite (= x63 x1702) x2909 (x2531 x1702)))
(define-fun x1198 ((x1702 Int)) Int (ite (= x1702 x1870) x2811 (x2296 x1702)))
(define-fun x3135 ((x1702 Int)) Int (ite (= x304 x1702) x845 (x1198 x1702)))
(define-fun x2842 ((x1702 Int)) Int (ite (= x2300 x1702) x2534 (x3135 x1702)))
(define-fun x2840 ((x1702 Int)) Int (ite (= x1702 x2593) x3143 (x2842 x1702)))
(define-fun x2863 ((x1702 Int)) Int (ite (= x2806 x1702) x2226 (x2840 x1702)))
(define-fun x674 ((x1702 Int)) Int (ite (= x225 x1702) x1870 (x2863 x1702)))
(define-fun x3002 ((x1702 Int)) Int (ite x1743 (x2296 x1702) (x674 x1702)))
(define-fun x237 ((x1702 Int)) Int (ite (= x1702 x2542) x63 (x3002 x1702)))
(define-fun x1758 ((x1702 Int)) Int (ite (= x2015 x1702) x1996 (x237 x1702)))
(define-fun x1665 ((x1702 Int)) Int (ite (= x1702 x369) x960 (x1758 x1702)))
(define-fun x2897 ((x1702 Int)) Int (ite (= x1702 x466) x1443 (x1665 x1702)))
(define-fun x474 ((x1702 Int)) Int (ite (= x1702 x2827) x2415 (x2897 x1702)))
(define-fun x300 ((x1702 Int)) Int (ite (= x1879 x1702) x2221 (x474 x1702)))
(define-fun x2261 ((x1702 Int)) Int (ite (= x639 x1702) x2641 (x300 x1702)))
(define-fun x2477 ((x1702 Int)) Int (ite (and (> (+ x2239 x524) x1702) (<= x2239 x1702)) (x643 (- (+ x1702 x1445) x2239)) (x2261 x1702)))
(define-fun x1140 ((x1702 Int)) Int (ite x2896 (x2261 x1702) (x2477 x1702)))
(define-fun x330 ((x1702 Int)) Int (ite (= x1702 x2447) x459 (x1140 x1702)))
(define-fun x3066 ((x1702 Int)) Int (ite (= x1702 x773) x2455 (x330 x1702)))
(define-fun x537 ((x1702 Int)) Int (ite (= x1702 x1331) x1696 (x3066 x1702)))
(define-fun x2082 ((x1702 Int)) Int (ite (= x1355 x1702) 128 (x537 x1702)))
(define-fun x2273 ((x1702 Int)) Int (ite (= x1702 x2714) x841 (x2082 x1702)))
(define-fun x2198 ((x1702 Int)) Int (ite (= x1702 x715) x2983 (x2273 x1702)))
(define-fun x565 ((x1702 Int)) Int (ite (= x1702 x2517) x1990 (x2198 x1702)))
(define-fun x2332 ((x1702 Int)) Int (ite (= x622 x1702) x2487 (x565 x1702)))
(define-fun x2758 ((x1702 Int)) Int (ite (= x1702 x1934) x600 (x2332 x1702)))
(define-fun x2416 ((x1702 Int)) Int (ite x2876 (x2332 x1702) (ite x609 (x565 x1702) (ite x1358 (x2198 x1702) (ite x2429 (x2273 x1702) (x2758 x1702))))))
(define-fun x1373 ((x1702 Int)) Int (ite (= x1702 x1877) 0 (x2416 x1702)))
(define-fun x86 ((x1702 Int)) Int (ite (= x1702 x1516) x869 (x1373 x1702)))
(define-fun x910 ((x1702 Int)) Int (ite (= x1702 x2480) x1077 (x86 x1702)))
(define-fun x1798 ((x1702 Int)) Int (ite x1700 (x1140 x1702) (x910 x1702)))
(define-fun x1521 ((x1702 Int)) Int (ite (= x1702 x2512) x1631 (x1798 x1702)))
(define-fun x952 ((x1702 Int)) Int (ite (= x1702 x1502) x566 (x1521 x1702)))
(define-fun x3111 ((x1702 Int)) Int (ite (= x1669 x1702) x710 (x952 x1702)))
(define-fun x2745 ((x1702 Int)) Int (ite (= x1702 x495) x1477 (x3111 x1702)))
(define-fun x276 ((x1702 Int)) Int (ite x496 (x3111 x1702) (ite x1551 (x952 x1702) (ite x114 (x1521 x1702) (ite x1469 (x1798 x1702) (x2745 x1702))))))
(define-fun x2541 ((x1702 Int)) Int (ite (= x1702 x3123) x1738 (x276 x1702)))
(define-fun x3035 ((x1702 Int)) Int (ite (= x1702 x2616) x1645 (x2541 x1702)))
(define-fun x2485 ((x1702 Int)) Int (ite (= x2395 x1702) x433 (x3035 x1702)))
(define-fun x799 ((x1702 Int)) Int (ite (= x1702 x3079) x2574 (x2485 x1702)))
(define-fun x1947 ((x1702 Int)) Int (ite (= x1702 x2223) x1115 (x799 x1702)))
(define-fun x1694 ((x1702 Int)) Int (ite (= x498 x1702) x564 (x1947 x1702)))
(define-fun x959 ((x1702 Int)) Int (ite (= x1702 x2463) x2155 (x1694 x1702)))
(define-fun x2373 ((x1702 Int)) Int (ite (= x1130 x1702) x581 (x959 x1702)))
(define-fun x671 ((x1702 Int)) Int (ite (= x1702 x1668) x487 (x2373 x1702)))
(define-fun x3160 ((x1702 Int)) Int (ite (= x181 x1702) x3102 (x671 x1702)))
(define-fun x2747 ((x1702 Int)) Int (ite (= x1702 x2796) x3083 (x3160 x1702)))
(define-fun x1120 ((x1702 Int)) Int (ite (= x476 x1702) 11309588061646438093662687302255421419811724423900836950936401294474059186176 (x2747 x1702)))
(define-fun x1816 ((x1702 Int)) Int (ite (= x2799 x1702) x1632 (x1120 x1702)))
(define-fun x2016 ((x1702 Int)) Int (ite (= x1702 x983) x2864 (x1816 x1702)))
(define-fun x1474 ((x1702 Int)) Int (ite (= x476 x1702) 0 (x2016 x1702)))
(define-fun x2136 ((x1702 Int)) Int (ite (= x1702 x2604) x1156 (x1474 x1702)))
(define-fun x492 ((x1702 Int)) Int (ite (= x1702 x132) x1164 (x2136 x1702)))
(define-fun x1378 ((x1702 Int)) Int (ite (= x1702 x2996) x2032 (x492 x1702)))
(define-fun x663 ((x1702 Int)) Int (ite (= x1702 x283) x1507 (x1378 x1702)))
(define-fun x2649 ((x1702 Int)) Int (ite (= x1675 x1702) x1449 (x663 x1702)))
(define-fun x2564 ((x1702 Int)) Int (ite x231 (ite x3124 (x2649 x1702) (ite x2627 (x2649 x1702) (x2016 x1702))) (x2016 x1702)))
(define-fun x611 ((x1702 Int)) Int (ite (= x2867 x1702) 77929798818658108206329458850487298488570292587025318323788629963054520467456 (x2564 x1702)))
(define-fun x2141 ((x1702 Int)) Int (ite (= x1702 x206) x911 (x611 x1702)))
(define-fun x2225 ((x1702 Int)) Int (ite (= x2787 x1702) 30450320296159908085414496432607297912280636920234228256796789313041262968832 (x2141 x1702)))
(define-fun x2861 ((x1702 Int)) Int (ite (and (> (+ 32 x2867) x1702) (>= x1702 x2867)) (x248 (- x1702 x2867)) (x2225 x1702)))
(define-fun x291 ((x1702 Int)) Int (ite x2721 (x2861 x1702) (x2225 x1702)))
(define-fun x2736 ((x1702 Int)) Int (ite (and (<= x2867 x1702) (< x1702 (+ x2867 32))) (x248 (- x1702 x2867)) (x291 x1702)))
(define-fun x2554 ((x1702 Int)) Int (ite (= x1702 x321) x1207 (x2736 x1702)))
(define-fun x1123 ((x1702 Int)) Int (ite (and (>= x1702 x39) (< x1702 (+ x39 x211))) (x643 (- (+ x1702 x1445) x39)) (x2554 x1702)))
(define-fun x12 ((x1702 Int)) Int (ite x652 (x2554 x1702) (x1123 x1702)))
(define-fun x1387 ((x1702 Int)) Int (ite (= x2439 x1702) x459 (x12 x1702)))
(define-fun x417 ((x1702 Int)) Int (ite (= x2381 x1702) x346 (x1387 x1702)))
(define-fun x1953 ((x1702 Int)) Int (ite (= x1702 x462) x2555 (x417 x1702)))
(define-fun x310 ((x1702 Int)) Int (ite (= x1702 x13) 128 (x1953 x1702)))
(define-fun x1294 ((x1702 Int)) Int (ite (= x2829 x1702) x2177 (x310 x1702)))
(define-fun x2981 ((x1702 Int)) Int (ite (= x601 x1702) x293 (x1294 x1702)))
(define-fun x586 ((x1702 Int)) Int (ite (= x1702 x380) x2535 (x2981 x1702)))
(define-fun x1647 ((x1702 Int)) Int (ite (= x1653 x1702) x2026 (x586 x1702)))
(define-fun x107 ((x1702 Int)) Int (ite (= x1702 x1718) x195 (x1647 x1702)))
(define-fun x344 ((x1702 Int)) Int (ite x714 (x1647 x1702) (ite x244 (x586 x1702) (ite x1859 (x2981 x1702) (ite x1106 (x1294 x1702) (x107 x1702))))))
(define-fun x3144 ((x1702 Int)) Int (ite (= x2960 x1702) 0 (x344 x1702)))
(define-fun x2532 ((x1702 Int)) Int (ite (= x2278 x1702) x3120 (x3144 x1702)))
(define-fun x1772 ((x1702 Int)) Int (ite (= x1702 x1487) x3161 (x2532 x1702)))
(define-fun x923 ((x1702 Int)) Int (ite x1938 (x12 x1702) (x1772 x1702)))
(define-fun x1273 ((x1702 Int)) Int (ite (= x2222 x1702) x2234 (x923 x1702)))
(define-fun x1838 ((x1702 Int)) Int (ite (= x1702 x2986) x2903 (x1273 x1702)))
(define-fun x2543 ((x1702 Int)) Int (ite (= x1702 x2041) x2901 (x1838 x1702)))
(define-fun x64 ((x1702 Int)) Int (ite (= x2857 x1702) x1703 (x2543 x1702)))
(define-fun x2958 ((x1702 Int)) Int (ite x2174 (x2543 x1702) (ite x1789 (x1838 x1702) (ite x535 (x1273 x1702) (ite x2925 (x923 x1702) (x64 x1702))))))
(define-fun x320 ((x1702 Int)) Int (ite (= x116 x1702) x2724 (x2958 x1702)))
(define-fun x602 ((x1702 Int)) Int (ite (= x1702 x1628) x1645 (x320 x1702)))
(define-fun x3116 ((x1702 Int)) Int (ite (= x1065 x1702) x205 (x602 x1702)))
(define-fun x632 ((x1702 Int)) Int (ite (= x1702 x1295) x87 (x3116 x1702)))
(define-fun x494 ((x1702 Int)) Int (ite (= x1620 x1702) x793 (x632 x1702)))
(define-fun x1415 ((x1702 Int)) Int (ite (= x1702 x769) 111717504842162250273123531270270194031611963357183166590777697365354585522176 (x494 x1702)))
(define-fun x1856 ((x1702 Int)) Int (ite (= x1702 x2970) x2794 (x1415 x1702)))
(define-fun x904 ((x1702 Int)) Int (ite (and (> (+ x769 32) x1702) (<= x769 x1702)) (x504 (- x1702 x769)) (x1856 x1702)))
(define-fun x914 ((x1702 Int)) Int (ite x1867 (x904 x1702) (x1856 x1702)))
(define-fun x2769 ((x1702 Int)) Int (ite (and (<= x769 x1702) (> (+ x769 32) x1702)) (x504 (- x1702 x769)) (x914 x1702)))
(define-fun x3110 ((x1702 Int)) Int (ite (= x1552 x1702) 21408440236001274921485009970742555221786587156444570319896389698385254285312 (x2769 x1702)))
(define-fun x2678 ((x1702 Int)) Int (ite (= x1564 x1702) x2706 (x3110 x1702)))
(define-fun x1533 ((x1702 Int)) Int (ite (and (>= x1702 x1552) (< x1702 (+ 32 x1552))) (x583 (- x1702 x1552)) (x2678 x1702)))
(define-fun x631 ((x1702 Int)) Int (ite x1048 (x1533 x1702) (x2678 x1702)))
(define-fun x555 ((x1702 Int)) Int (ite (and (< x1702 (+ 32 x1552)) (>= x1702 x1552)) (x583 (- x1702 x1552)) (x631 x1702)))
(define-fun x75 ((x1702 Int)) Int (ite (= x1702 x906) x2906 (x555 x1702)))
(define-fun x2510 ((x1702 Int)) Int (ite (= x1702 x1986) 0 (x75 x1702)))
(define-fun x245 ((x1702 Int)) Int (ite (= x1702 x1074) 0 (x2510 x1702)))
(define-fun x1690 ((x1702 Int)) Int (ite (= x900 x1702) 0 (x245 x1702)))
(define-fun x3038 ((x1702 Int)) Int (ite (= x1702 x1053) 0 (x1690 x1702)))
(define-fun x962 ((x1702 Int)) Int (ite (= x2910 x1702) 0 (x3038 x1702)))
(define-fun x1108 ((x1702 Int)) Int (ite (= x1702 x1942) x1986 (x962 x1702)))
(define-fun x1287 ((x1702 Int)) Int (ite (= x526 x1702) 0 (x1108 x1702)))
(define-fun x213 ((x1702 Int)) Int (ite (= x361 x1702) 0 (x1287 x1702)))
(define-fun x1774 ((x1702 Int)) Int (ite (= x1702 x1876) 0 (x213 x1702)))
(define-fun x558 ((x1702 Int)) Int (ite (= x1702 x1854) 0 (x1774 x1702)))
(define-fun x1980 ((x1702 Int)) Int (ite (= x2826 x1702) 0 (x558 x1702)))
(define-fun x2361 ((x1702 Int)) Int (ite (= x1117 x1702) x526 (x1980 x1702)))
(define-fun x371 ((x1702 Int)) Int (ite x980 (x75 x1702) (ite x2190 (x1108 x1702) (x2361 x1702))))
(define-fun x2889 ((x1702 Int)) Int (ite (= x1702 x2104) x1652 (x371 x1702)))
(define-fun x1375 ((x1702 Int)) Int (ite (= x1702 x658) 0 (x2889 x1702)))
(define-fun x737 ((x1702 Int)) Int (ite (= x228 x1702) x1398 (x1375 x1702)))
(define-fun x967 ((x1702 Int)) Int (ite (= x1702 x2327) x3062 (x737 x1702)))
(define-fun x687 ((x1702 Int)) Int (ite (= x1702 x502) x570 (x967 x1702)))
(define-fun x2832 ((x1702 Int)) Int (ite (= x2818 x1702) x2104 (x687 x1702)))
(define-fun x398 ((x1702 Int)) Int (ite x1126 (x371 x1702) (x2832 x1702)))
(define-fun x647 ((x1702 Int)) Int (ite (= x2645 x1702) 2 (x398 x1702)))
(define-fun x2453 ((x1702 Int)) Int (ite (= x1702 x2713) 0 (x647 x1702)))
(define-fun x429 ((x1702 Int)) Int (ite (= x1255 x1702) x941 (x2453 x1702)))
(define-fun x447 ((x1702 Int)) Int (ite (= x3032 x1702) x610 (x429 x1702)))
(define-fun x709 ((x1702 Int)) Int (ite (= x2023 x1702) x1698 (x447 x1702)))
(define-fun x1016 ((x1702 Int)) Int (ite (= x2698 x1702) x2645 (x709 x1702)))
(define-fun x1984 ((x1702 Int)) Int (ite (= x1702 x2104) x1459 (x371 x1702)))
(define-fun x1356 ((x1702 Int)) Int (ite (= x2371 x1702) x101 (x1984 x1702)))
(define-fun x2195 ((x1702 Int)) Int (ite (= x2500 x1702) x2571 (x1356 x1702)))
(define-fun x260 ((x1702 Int)) Int (ite (= x1702 x395) x301 (x2195 x1702)))
(define-fun x2258 ((x1702 Int)) Int (ite (= x548 x1702) x166 (x260 x1702)))
(define-fun x708 ((x1702 Int)) Int (ite (= x2438 x1702) x2104 (x2258 x1702)))
(define-fun x3084 ((x1702 Int)) Int (ite x2584 (x371 x1702) (x708 x1702)))
(define-fun x157 ((x1702 Int)) Int (ite x1175 (ite x119 (x398 x1702) (x1016 x1702)) (ite x1858 (x371 x1702) (x3084 x1702))))
(define-fun x1262 ((x1702 Int)) Int (ite (= x1702 x1125) 0 (x157 x1702)))
(define-fun x1663 ((x1702 Int)) Int (ite (= x867 x1702) x80 (x1262 x1702)))
(define-fun x341 ((x1702 Int)) Int (ite (= x1300 x1702) x1404 (x1663 x1702)))
(define-fun x1535 ((x1702 Int)) Int (ite (= x649 x1702) x1555 (x341 x1702)))
(define-fun x82 ((x1702 Int)) Int (ite (= x1702 x2055) x1850 (x1535 x1702)))
(define-fun x155 ((x1702 Int)) Int (ite (= x1702 x1125) 32 (x82 x1702)))
(define-fun x2718 ((x1702 Int)) Int (ite (= x738 x1702) 0 (x155 x1702)))
(define-fun x3155 ((x1702 Int)) Int (ite x1276 (x82 x1702) (x2718 x1702)))
(define-fun x391 ((x1702 Int)) Int (ite (= x1125 x1702) x2247 (x3155 x1702)))
(define-fun x1899 ((x1702 Int)) Int (ite (= x3097 x1702) x111 (x391 x1702)))
(define-fun x40 ((x1702 Int)) Int (ite (= x1702 x1325) x1160 (x1899 x1702)))
(define-fun x1304 ((x1702 Int)) Int (ite (= x720 x1702) x1135 (x40 x1702)))
(define-fun x1670 ((x1702 Int)) Int (ite x1709 (x1262 x1702) (x1304 x1702)))
(define-fun x1744 ((x1702 Int)) Int (ite x2884 (x1262 x1702) (x1670 x1702)))
(define-fun x804 ((x1702 Int)) Int (ite (= x2335 x1702) x1817 (x1744 x1702)))
(define-fun x944 ((x1702 Int)) Int (ite (= x1243 x1702) x906 (x804 x1702)))
(define-fun x1242 ((x1702 Int)) Int (ite (= x1702 x22) x1316 (x944 x1702)))
(define-fun x2018 ((x1702 Int)) Int (ite (= x1759 x1702) x1298 (x1242 x1702)))
(define-fun x655 ((x1702 Int)) Int (ite (= x34 x1702) x215 (x2018 x1702)))
(define-fun x117 ((x1702 Int)) Int (ite (= x1702 x3007) x1973 (x655 x1702)))
(define-fun x2376 ((x1702 Int)) Int (ite (= x1605 x1702) x2117 (x117 x1702)))
(define-fun x1684 ((x1702 Int)) Int (ite (= x1417 x1702) x3148 (x2376 x1702)))
(define-fun x589 ((x1702 Int)) Int (ite (= x1702 x578) x796 (x1684 x1702)))
(define-fun x995 ((x1702 Int)) Int (ite (= x1677 x1702) x2947 (x589 x1702)))
(define-fun x2781 ((x1702 Int)) Int (ite (and (< x1702 (+ x396 x825)) (>= x1702 x825)) (x643 (- (+ x1445 x1702) x825)) (x995 x1702)))
(define-fun x1244 ((x1702 Int)) Int (ite x2812 (x1989 x1702) (x1478 x1702)))
(define-fun x338 ((x1702 Int)) Int (ite x1873 (x995 x1702) (x2781 x1702)))
(define-fun x1167 ((x1702 Int)) Int (ite (= x2014 x1702) x2212 (x338 x1702)))
(define-fun x892 ((x1702 Int)) Int (ite (and (<= x2145 x1702) (> (+ x2145 x1638) x1702)) (x643 (- (+ x1702 x1445) x2145)) (x1167 x1702)))
(define-fun x1711 ((x1702 Int)) Int (ite x41 (x1167 x1702) (x892 x1702)))
(define-fun x1019 ((x1702 Int)) Int (ite (= x947 x1702) x3152 (x1711 x1702)))
(define-fun x3053 ((x1702 Int)) Int (ite (= x1702 x1796) x669 (x1019 x1702)))
(define-fun x733 ((x1702 Int)) Int (ite (= x1702 x2680) x3093 (x3053 x1702)))
(define-fun x1819 ((x1702 Int)) Int (ite (= x543 x1702) x2166 (x733 x1702)))
(define-fun x454 ((x1702 Int)) Int (ite (= x1083 x1702) x160 (x1819 x1702)))
(define-fun x53 ((x1702 Int)) Int (ite (= x1702 x428) x100 (x454 x1702)))
(define-fun x1308 ((x1702 Int)) Int (ite (= x1702 x497) x3128 (x53 x1702)))
(define-fun x49 ((x1702 Int)) Int (ite (= x1702 x298) x1988 (x1308 x1702)))
(define-fun x35 ((x1702 Int)) Int (ite x68 (x1711 x1702) (x49 x1702)))
(define-fun x187 ((x1702 Int)) Int (ite (= x1702 x1271) x459 (x35 x1702)))
(define-fun x1939 ((x1702 Int)) Int (ite (= x2138 x1702) x2772 (x187 x1702)))
(define-fun x2445 ((x1702 Int)) Int (ite (= x1702 x1202) x987 (x1939 x1702)))
(define-fun x2854 ((x1702 Int)) Int (ite (= x1702 x2391) 128 (x2445 x1702)))
(define-fun x949 ((x1702 Int)) Int (ite (= x3043 x1702) x2275 (x2854 x1702)))
(define-fun x29 ((x1702 Int)) Int (ite (= x979 x1702) x2558 (x949 x1702)))
(define-fun x1113 ((x1702 Int)) Int (ite (= x2342 x1702) x1219 (x29 x1702)))
(define-fun x1481 ((x1702 Int)) Int (ite (= x854 x1702) x2494 (x1113 x1702)))
(define-fun x2403 ((x1702 Int)) Int (ite (= x1702 x518) x2244 (x1481 x1702)))
(define-fun x2139 ((x1702 Int)) Int (ite x2171 (x1481 x1702) (ite x224 (x1113 x1702) (ite x1148 (x29 x1702) (ite x574 (x949 x1702) (x2403 x1702))))))
(define-fun x183 ((x1702 Int)) Int (ite (= x1492 x1702) 0 (x2139 x1702)))
(define-fun x2488 ((x1702 Int)) Int (ite (= x2045 x1702) x1530 (x183 x1702)))
(define-fun x1780 ((x1702 Int)) Int (ite (= x2731 x1702) x1617 (x2488 x1702)))
(define-fun x1644 ((x1702 Int)) Int (ite x2704 (x35 x1702) (x1780 x1702)))
(define-fun x1909 ((x1702 Int)) Int (ite (= x1066 x1702) x1926 (x1644 x1702)))
(define-fun x125 ((x1702 Int)) Int (ite (= x1702 x531) x629 (x1909 x1702)))
(define-fun x2456 ((x1702 Int)) Int (ite (= x1702 x1736) x2825 (x125 x1702)))
(define-fun x2058 ((x1702 Int)) Int (ite (= x23 x1702) x725 (x2456 x1702)))
(define-fun x2369 ((x1702 Int)) Int (ite x1932 (x2456 x1702) (ite x1432 (x125 x1702) (ite x591 (x1909 x1702) (ite x2780 (x1644 x1702) (x2058 x1702))))))
(define-fun x2919 ((x1702 Int)) Int (ite (= x1554 x1702) x423 (x2369 x1702)))
(define-fun x51 ((x1702 Int)) Int (ite (= x815 x1702) x3054 (x2919 x1702)))
(define-fun x2660 ((x1702 Int)) Int (ite (= x1702 x2907) x1057 (x51 x1702)))
(define-fun x1179 ((x1702 Int)) Int (ite (= x1702 x2940) x2577 (x2660 x1702)))
(define-fun x1748 ((x1702 Int)) Int (ite (= x1702 x2172) x2386 (x1179 x1702)))
(define-fun x608 ((x1702 Int)) Int (ite x1402 (x1179 x1702) (ite x1181 (x2660 x1702) (ite x2614 (x51 x1702) (ite x209 (x2919 x1702) (x1748 x1702))))))
(define-fun x2004 ((x1702 Int)) Int (ite (= x2689 x1702) x973 (x608 x1702)))
(define-fun x753 ((x1702 Int)) Int (ite (= x1702 x937) x3044 (x2004 x1702)))
(define-fun x2075 ((x1702 Int)) Int (ite (= x1702 x2260) x2012 (x753 x1702)))
(define-fun x2217 ((x1702 Int)) Int (ite (= x575 x1702) x886 (x2075 x1702)))
(define-fun x394 ((x1702 Int)) Int (ite (= x679 x1702) x1951 (x2217 x1702)))
(define-fun x3132 ((x1702 Int)) Int (ite (= x2184 x1702) x38 (x394 x1702)))
(define-fun x3114 ((x1702 Int)) Int (ite (= x1702 x1608) x1440 (x3132 x1702)))
(define-fun x434 ((x1702 Int)) Int (ite (= x1702 x2815) x1515 (x3114 x1702)))
(define-fun x936 ((x1702 Int)) Int (ite (= x1702 x1655) x828 (x434 x1702)))
(define-fun x2328 ((x1702 Int)) Int (ite (= x2877 x1702) x1425 (x936 x1702)))
(define-fun x441 ((x1702 Int)) Int (ite (= x1702 x1147) x1226 (x2328 x1702)))
(define-fun x966 ((x1702 Int)) Int (ite (= x1702 x2203) x1742 (x441 x1702)))
(define-fun x552 ((x1702 Int)) Int (ite (= x1576 x1702) 0 (x966 x1702)))
(define-fun x792 ((x1702 Int)) Int (ite (= x1702 x1172) 0 (x552 x1702)))
(define-fun x2514 ((x1702 Int)) Int (ite (= x253 x1702) x1576 (x792 x1702)))
(define-fun x393 ((x1702 Int)) Int (ite (= x1702 x2568) 0 (x2514 x1702)))
(define-fun x1084 ((x1702 Int)) Int (ite (= x1441 x1702) 0 (x393 x1702)))
(define-fun x2553 ((x1702 Int)) Int (ite (= x1366 x1702) x2568 (x1084 x1702)))
(define-fun x1689 ((x1702 Int)) Int (ite x1750 (x966 x1702) (ite x1843 (x2514 x1702) (x2553 x1702))))
(define-fun x2752 ((x1702 Int)) Int (ite (= x2291 x1702) x1464 (x1689 x1702)))
(define-fun x2418 ((x1702 Int)) Int (ite (= x1702 x387) x818 (x2752 x1702)))
(define-fun x1403 ((x1702 Int)) Int (ite (= x1702 x1929) x2291 (x2418 x1702)))
(define-fun x948 ((x1702 Int)) Int (ite x410 (x1689 x1702) (x1403 x1702)))
(define-fun x2505 ((x1702 Int)) Int (ite (= x838 x1702) 32542679537407071897843112657522291873774333932075415528008786499928730894336 (x948 x1702)))
(define-fun x1150 ((x1702 Int)) Int (ite (= x1702 x133) x700 (x2505 x1702)))
(define-fun x122 ((x1702 Int)) Int (ite (= x1702 x592) 64 (x1150 x1702)))
(define-fun x1152 ((x1702 Int)) Int (ite (= x339 x1702) x865 (x122 x1702)))
(define-fun x435 ((x1702 Int)) Int (ite (= x2697 x1702) x664 (x1152 x1702)))
(define-fun x2290 ((x1702 Int)) Int (ite (= x1702 x1955) x106 (x435 x1702)))
(define-fun x996 ((x1702 Int)) Int (ite x2601 (x1152 x1702) (x2290 x1702)))
(define-fun x90 ((x1702 Int)) Int (ite (and (> x838 x1702) (<= x838 x1702)) (x1957 (- x1702 x838)) (x996 x1702)))
(define-fun x2341 ((x1702 Int)) Int (ite (= x1702 x838) 95932229227554293267862761608555258089024927314852490146714677558661980618752 (x90 x1702)))
(define-fun x1463 ((x1702 Int)) Int (ite (= x1269 x1702) x2560 (x2341 x1702)))
(define-fun x2394 ((x1702 Int)) Int (ite (= x716 x1702) x288 (x1463 x1702)))
(define-fun x1363 ((x1702 Int)) Int (ite (and (<= x838 x1702) (< x1702 x838)) (x721 (- x1702 x838)) (x2394 x1702)))
(define-fun x490 ((x1702 Int)) Int (ite x2812 (x90 x1702) (x1363 x1702)))
(define-fun x2668 ((x1702 Int)) Int (ite x2663 (x1989 x1702) (ite x2812 (x1989 x1702) (x1478 x1702))))
(define-fun x3095 ((x1702 Int)) Int (ite x2663 (x411 x1702) (ite x2812 (x411 x1702) (x2917 x1702))))
(define-fun x1590 ((x1702 Int)) Int (ite x2663 (x90 x1702) (x490 x1702)))
(define-fun x585 ((x1702 Int)) Int (ite (= x1702 x838) 0 (x1590 x1702)))
(define-fun x1389 ((x1702 Int)) Int (ite (= x1702 x724) 0 (x585 x1702)))
(define-fun x2882 ((x1702 Int)) Int (ite (= x889 x1702) 0 (x1389 x1702)))
(define-fun x2760 ((x1702 Int)) Int (ite (= x1702 x1526) 0 (x2882 x1702)))
(define-fun x1227 ((x1702 Int)) Int (ite (= x1702 x2092) 88383320980755791914082775550597828907713979028428263264130000526486271950848 (x2760 x1702)))
(define-fun x2942 ((x1702 Int)) Int (ite (= x1702 x2526) x2609 (x1227 x1702)))
(define-fun x2123 ((x1702 Int)) Int (ite (and (> (+ 32 x2092) x1702) (<= x2092 x1702)) (x985 (- x1702 x2092)) (x2942 x1702)))
(define-fun x2503 ((x1702 Int)) Int (ite x2387 (x2668 x1702) (ite x1024 (x2626 x1702) (x2668 x1702))))
(define-fun x1948 ((x1702 Int)) Int (ite x2522 (x2668 x1702) (x2503 x1702)))
(define-fun x2770 ((x1702 Int)) Int (ite x1941 (x2123 x1702) (x2942 x1702)))
(define-fun x2407 ((x1702 Int)) Int (ite (and (> (+ 32 x2092) x1702) (>= x1702 x2092)) (x985 (- x1702 x2092)) (x2770 x1702)))
(define-fun x2865 ((x1702 Int)) Int (ite (= x1702 x1082) 111117225372770300986259473995147604481826136133417213952520719377678811004928 (x2407 x1702)))
(define-fun x2356 ((x1702 Int)) Int (ite (= x1702 x810) x982 (x2865 x1702)))
(define-fun x156 ((x1702 Int)) Int (ite (= x1702 x1933) x859 (x2356 x1702)))
(define-fun x686 ((x1702 Int)) Int (ite (= x1702 x1826) x1337 (x156 x1702)))
(define-fun x3008 ((x1702 Int)) Int (ite (= x1208 x1702) x2764 (x686 x1702)))
(define-fun x883 ((x1702 Int)) Int (ite (= x1702 x142) 160 (x3008 x1702)))
(define-fun x43 ((x1702 Int)) Int (ite (= x2411 x1702) x1648 (x883 x1702)))
(define-fun x590 ((x1702 Int)) Int (ite (= x1702 x596) x1283 (x43 x1702)))
(define-fun x1369 ((x1702 Int)) Int (ite (= x1614 x1702) x2148 (x590 x1702)))
(define-fun x97 ((x1702 Int)) Int (ite (= x1702 x2475) x1834 (x1369 x1702)))
(define-fun x1707 ((x1702 Int)) Int (ite (= x568 x1702) x192 (x97 x1702)))
(define-fun x1312 ((x1702 Int)) Int (ite x2432 (x97 x1702) (ite x129 (x1369 x1702) (ite x1039 (x590 x1702) (ite x1914 (x43 x1702) (x1707 x1702))))))
(define-fun x412 ((x1702 Int)) Int (ite (= x1702 x3075) 0 (x1312 x1702)))
(define-fun x1910 ((x1702 Int)) Int (ite (and (> x1082 x1702) (<= x1082 x1702)) (x20 (- x1702 x1082)) (x412 x1702)))
(define-fun x968 ((x1702 Int)) Int (ite x1024 (x1910 x1702) (x412 x1702)))
(define-fun x3014 ((x1702 Int)) Int (ite x2522 (x1590 x1702) (ite x2387 (x2760 x1702) (x968 x1702))))
(define-fun x2667 ((x1702 Int)) Int (ite (= x858 x1702) x700 (x3014 x1702)))
(define-fun x614 ((x1702 Int)) Int (ite (= x1593 x1702) 288 (x2667 x1702)))
(define-fun x71 ((x1702 Int)) Int (ite (= x1702 x1799) x3012 (x614 x1702)))
(define-fun x2151 ((x1702 Int)) Int (ite (= x3048 x1702) x653 (x71 x1702)))
(define-fun x634 ((x1702 Int)) Int (ite (= x2147 x1702) x1978 (x2151 x1702)))
(define-fun x2007 ((x1702 Int)) Int (ite (= x2597 x1702) x139 (x634 x1702)))
(define-fun x1524 ((x1702 Int)) Int (ite x2791 (x2862 x1702) (ite x2522 (x2668 x1702) (x2503 x1702))))
(define-fun x812 ((x1702 Int)) Int (ite x2791 (x3071 x1702) (ite x2522 (x3095 x1702) (ite x2387 (x3095 x1702) (ite x1024 (x404 x1702) (x3095 x1702))))))
(define-fun x549 ((x1702 Int)) Int 0)
(define-fun x1429 ((x1702 Int)) Int (ite (= x1702 x197) x3031 (x812 x1702)))
(define-fun x657 ((x1702 Int)) Int (ite (= x1702 x1036) x499 (x2007 x1702)))
(define-fun x30 ((x1702 Int)) Int (ite x2310 (x2007 x1702) (ite x2153 (x634 x1702) (ite x567 (x2151 x1702) (ite x2003 (x71 x1702) (x657 x1702))))))
(define-fun x214 ((x1702 Int)) Int (ite (= x651 x1702) 0 (x30 x1702)))
(define-fun x1907 ((x1702 Int)) Int (ite (= x138 x1702) x2255 (x214 x1702)))
(define-fun x76 ((x1702 Int)) Int (ite (= x1702 x1491) x626 (x1907 x1702)))
(define-fun x1604 ((x1702 Int)) Int (ite (= x1683 x1702) x2060 (x76 x1702)))
(define-fun x2545 ((x1702 Int)) Int (x1411 x1702))
(define-fun x2837 ((x1702 Int)) Int (ite (= x1702 x1734) x500 (x1604 x1702)))
(define-fun x383 ((x1702 Int)) Int (ite (= x1702 x990) x2646 (x2837 x1702)))
(define-fun x306 ((x1702 Int)) Int (ite (= x2846 x1702) x2929 (x383 x1702)))
(define-fun x1660 ((x1702 Int)) Int (ite (= x1385 x1702) x2511 (x306 x1702)))
(define-fun x2591 ((x1702 Int)) Int (ite (= x1702 x190) x2251 (x1660 x1702)))
(define-fun x2331 ((x1702 Int)) Int (ite x1049 (x1604 x1702) (x2591 x1702)))
(define-fun x736 ((x1702 Int)) Int (ite (= x1702 x1265) x1716 (x2331 x1702)))
(define-fun x1777 ((x1702 Int)) Int (ite (= x309 x1702) x1623 (x736 x1702)))
(define-fun x1676 ((x1702 Int)) Int (ite (= x1253 x1702) x3101 (x1777 x1702)))
(define-fun x1217 ((x1702 Int)) Int (ite (= x1702 x2551) x1580 (x1676 x1702)))
(define-fun x1169 ((x1702 Int)) Int (ite (= x1702 x1372) x33 (x1217 x1702)))
(define-fun x2317 ((x1702 Int)) Int (ite (= x1702 x60) 96 (x1169 x1702)))
(define-fun x2270 ((x1702 Int)) Int (ite x1024 (x2626 x1702) (x2668 x1702)))
(assert (x85 x215))
(assert (x85 x3023))
(assert (= (x2056 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) x2246))
(assert (= x2283 (x1311 (x2318 x1935 x3020 x2002 x2934 x2283))))
(assert (x85 x2749))
(assert (= (and x1719 x909) x1034))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x264 x2219)))
(assert (x635 111117225372770300986259473995147604481826136133417213952520719377678811004928))
(assert (= (x1087 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180)) x813))
(assert (x85 x2029))
(assert (=> (>= 10000 x1992) (= (x921 x1992) 0)))
(assert (= (x1726 (x437 x931 x193 x2860 x1089 x2068 x1009)) x193))
(assert (x85 x950))
(assert (x85 x1162))
(assert (x85 x895))
(assert (x85 x2336))
(assert (< (x2945 x615 x1094 x229 x134 x2348 x827 x660) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x990))
(assert (= x79 (x1311 (x2318 x296 x3021 x1248 x905 x79))))
(assert (x85 x2177))
(assert (x85 x2644))
(assert (=> (<= x162 10000) (= 0 (x921 x162))))
(assert (x85 x2160))
(assert (x85 x246))
(assert (x85 x2244))
(assert (= (and x216 x788) x694))
(assert (x85 x2370))
(assert (x85 x1930))
(assert (x85 x421))
(assert (= (x921 (x2926 x1245 x1093 x414 x240)) (x2926 x1245 x1093 x414 x240)))
(assert (=> (<= x1456 10000) (= 0 (x921 x1456))))
(assert (x85 x228))
(assert (x85 x2170))
(assert (= (or x209 x2614 x1177 x1402 x1181) x232))
(assert (=> (<= x488 10000) (= (x921 x488) 0)))
(assert (x85 x2234))
(assert (= x3028 (=> (and (>= 18446744073709551615 x1661) (or (<= x2639 18446746139588821027) (>= x2639 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (= x2552 (x1033 (- x2094 x2639))) (= x3140 (not (> x257 x870))) (<= x2091 18446744073709551614) (= x2652 (x295 (+ 32 x1633))) (not (> x1371 x683)) (= (x643 x1893) x1453) (= (x643 x3045) x2755) (<= x2091 18446744073709551614) (= (+ x1371 x2871) x683) (<= x2871 18446744073709551614) (= (x643 x1739) x1731) (or (>= x1893 57896044618658097711785492504343953926634992332820282019728792003956564820068) (>= 18446746139588821027 x1893)) (= (+ x1661 31) x302) (<= x2552 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= 96 x2552) (>= 18446744073709551614 x2091) (<= x2755 18446744073709551615) (or (>= 18446744073709551518 x2091) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2091)) (= x1706 (x643 x2639)) (= x739 (+ 32 x1371)) (or (>= 18446744073709551518 x2091) (>= x2091 115792089237316195423570985008687907853269984665640564039457584007913129639841)) (= x1661 (x643 x1633)) (= x2871 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2920)) (<= x2091 18446744073709551613) (not (< x2094 x6)) (= x2920 (+ 63 x1118)) (= x2639 (x295 (+ x1893 x1453))) (>= 1461501637330902918203684832716283019655932542975 x1706) (= (x295 (+ 32 x1893)) x870) (= x1451 (+ x739 x1661)) (or (<= x1633 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820068 x1633)) (= (x295 (+ x1633 31)) x1447) (= x3045 (x295 (+ x1739 32))) (= x359 (x295 (+ 32 x2091))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1447) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094)) (< x1447 x2094)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1447) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094))) (= x2421 (x295 (+ 32 x359))) (or (>= x2094 57896044618658097711785492504343953926634992332820282019728792003956564820100) (>= 18446746139588821059 x2094)) (= (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x302) x1118) (= x1739 (x295 (+ x2639 32))) (< x2091 x1371) (not (< x1371 x2091)) (or (<= x2091 18446744073709551518) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639841 x2091)) (<= x2091 18446744073709551613) (= x1371 (x295 (+ 96 x2091))) (> x683 x1371) (= x6 (x295 (+ x2652 x1661))) (= x1633 (x295 (+ x2755 x2639))) (>= x683 2) (<= x683 18446744073709551615) (>= 18446744073709551615 x1453) (<= x2091 18446744073709551613)) (and (=> (= x279 x683) x1426) x3140))))
(assert (< 10000 (x1612 0)))
(assert (= (x1726 (x2945 x615 x1094 x229 x134 x2348 x827 x660)) x1094))
(assert (x85 x1515))
(assert (= (x1725 (x1656 x931 x1849 x3103)) x931))
(assert (= x2020 (x2530 (x437 x615 x1616 x1809 x2020 x2066 x263))))
(assert (= (x1725 (x2926 x264 x409 x556 x1785)) x264))
(assert (x85 x2222))
(assert (=> (>= 10000 x794) (= (x921 x794) 0)))
(assert (= (x1726 (x437 x1687 x2636 x1818 x1494 x143 x1727)) x2636))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639615))
(assert (x85 x1562))
(assert (x2230 x302))
(assert (= (x1311 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)) x45))
(assert (x85 x172))
(assert (x85 x661))
(assert (x85 x1497))
(assert (= (x1087 (x1656 x264 x1370 x356)) x356))
(assert (= x296 (x1725 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889))))
(assert (= x2237 (x2530 (x437 x1935 x2935 x2372 x2237 x162 x1865))))
(assert (x2690 x1596))
(assert (x85 x1))
(assert (= x893 (x1726 (x2318 x615 x893 x401 x1332 x1991))))
(assert (x85 x2163))
(assert (=> (<= x1444 10000) (= (x921 x1444) 0)))
(assert (x85 x1441))
(assert (= (=> (= x219 x1125) x3001) x2650))
(assert (< 10000 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)))
(assert (= (x921 (x2629 x1139 x2465)) (x2629 x1139 x2465)))
(assert (= (x2945 x264 x453 x1721 x1754 x2220 x702 x554) (x921 (x2945 x264 x453 x1721 x1754 x2220 x702 x554))))
(assert (= (and (not x988) x1128) x1789))
(assert (x85 x1569))
(assert (x85 x874))
(assert (x85 x3058))
(assert (= (x1087 (x437 x931 x193 x2860 x1089 x2068 x1009)) x2860))
(assert (x85 x1872))
(assert (x85 x1417))
(assert (x85 x2817))
(assert (x85 x679))
(assert (x85 x896))
(assert (x85 x960))
(assert (x85 x181))
(assert (= (and x1972 (not x1802)) x2704))
(assert (x85 x3082))
(assert (x85 x363))
(assert (= (x1087 (x437 x1245 x1844 x44 x2924 x1405 x794)) x44))
(assert (x85 x2143))
(assert (x85 x195))
(assert (x85 x1121))
(assert (x85 x2975))
(assert (=> (<= x2119 10000) (= (x921 x2119) 0)))
(assert (x85 x1334))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639777))
(assert (=> (>= 10000 x2406) (= (x921 x2406) 0)))
(assert (= (and x617 (not x1461)) x1049))
(assert (= (x1311 (x2318 x615 x893 x401 x1332 x1991)) x1991))
(assert (=> (>= 10000 x363) (= (x921 x363) 0)))
(assert (x85 x459))
(assert (x85 x720))
(assert (x85 x699))
(assert (=> (<= x1382 10000) (= (x921 x1382) 0)))
(assert (x85 x1449))
(assert (x85 x2642))
(assert (x2690 x2444))
(assert (x85 x2404))
(assert (x635 88383320980755791914082775550597828907713979028428263264130000526486271950848))
(assert (x85 x2776))
(assert (x85 x868))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x85 x696))
(assert (= (and x3006 x1937) x2605))
(assert (x85 x2920))
(assert (x85 x1891))
(assert (x85 x94))
(assert (x635 18446744073709551615))
(assert (x85 x1228))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x464 x834)))
(assert (= x453 (x1726 (x2945 x264 x453 x1721 x1754 x2220 x702 x554))))
(assert (x85 x554))
(assert (= x1719 (or x1938 x2590)))
(assert (x85 x2551))
(assert (x85 x2025))
(assert (not (x635 (x437 x681 x2677 x950 x2232 x418 x15))))
(assert (= x1790 (and x2633 x1260)))
(assert (=> (<= x2001 10000) (= 0 (x921 x2001))))
(assert (=> (>= 10000 x3100) (= 0 (x921 x3100))))
(assert (x85 x931))
(assert (= x1245 (x1725 (x2629 x1245 x2362))))
(assert (= x1765 (and (not x348) x1044)))
(assert (= x834 (x1726 (x2629 x464 x834))))
(assert (x85 x1945))
(assert (=> (<= x1187 10000) (= (x921 x1187) 0)))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (= (x1087 (x1656 x296 x2784 x1216)) x1216))
(assert (x85 x222))
(assert (=> (>= 10000 x112) (= 0 (x921 x112))))
(assert (x85 x2301))
(assert (=> (<= x3154 10000) (= 0 (x921 x3154))))
(assert (x85 x530))
(assert (= x2178 (x2530 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (= (or x1154 x92) x2250))
(assert (= (x2056 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)) x200))
(assert (= (and x2067 x1531) x1940))
(assert (x85 x2851))
(assert (x85 x1757))
(assert (x85 x2233))
(assert (x85 x849))
(assert (= x1158 (or x2118 x1743)))
(assert (x85 x2385))
(assert (x85 x301))
(assert (= x527 (x1311 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639872)))
(assert (=> (<= x1708 10000) (= (x921 x1708) 0)))
(assert (= (x1725 (x2318 x2347 x1446 x2570 x2354 x2281)) x2347))
(assert (x85 x2113))
(assert (x85 x977))
(assert (x85 x1688))
(assert (x85 x2378))
(assert (= (x281 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180)) x2484))
(assert (x85 x81))
(assert (x85 x1705))
(assert (x85 x2472))
(assert (x85 x2983))
(assert (= (x1725 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) x630))
(assert (x85 x1015))
(assert (= x1139 (x1725 (x2629 x1139 x2465))))
(assert (x85 x1423))
(assert (x85 x2982))
(assert (= (x921 (x2629 x630 x1201)) (x2629 x630 x1201)))
(assert (x85 x1163))
(assert (=> (<= x950 10000) (= (x921 x950) 0)))
(assert (x85 x287))
(assert (not (x635 (x1656 64 x1760 1))))
(assert (x85 x1683))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639712))
(assert (x85 x1397))
(assert (x85 x1811))
(assert (x85 x665))
(assert (=> (>= 10000 x3003) (= 0 (x921 x3003))))
(assert (x85 x79))
(assert (< 10000 (x2318 x464 x2385 x1708 x2802 x2915)))
(assert (x85 x2248))
(assert (x85 x2126))
(assert (x85 x2783))
(assert (= (and x1327 x2559) x2169))
(assert (= (and x1804 x726) x3065))
(assert (x85 x1416))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639933) 0))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)))
(assert (x85 x1662))
(assert (=> (>= 10000 x771) (= 0 (x921 x771))))
(assert (x85 x2641))
(assert (x85 x1147))
(assert (= (x921 (x1656 x931 x1849 x3103)) (x1656 x931 x1849 x3103)))
(assert (=> (>= 10000 x399) (= 0 (x921 x399))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x2001 x2374 x861 x1786 x3029)))
(assert (x85 x2963))
(assert (x85 x2928))
(assert (=> (>= 10000 x2701) (= 0 (x921 x2701))))
(assert (x85 x3113))
(assert (=> (<= x2163 10000) (= (x921 x2163) 0)))
(assert (= (x1726 (x437 x264 x907 x2685 x2025 x1326 x1014)) x907))
(assert (=> (>= 10000 x2080) (= (x921 x2080) 0)))
(assert (x85 x901))
(assert (not (x635 (x2318 x1546 x1640 x648 x2406 x222))))
(assert (x85 x2556))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x1935 x2935 x2372 x2237 x162 x1865)))
(assert (x85 x2571))
(assert (> (x2318 x1546 x1640 x648 x2406 x222) 10000))
(assert (x85 x385))
(assert (x85 x36))
(assert (x85 x2026))
(assert (x85 x1701))
(assert (x85 x830))
(assert (x85 x312))
(assert (x85 x2799))
(assert (= (x2629 x1935 x1071) (x921 (x2629 x1935 x1071))))
(assert (=> (>= 10000 x3050) (= 0 (x921 x3050))))
(assert (x85 x835))
(assert (= (x921 (x437 x1245 x1844 x44 x2924 x1405 x794)) (x437 x1245 x1844 x44 x2924 x1405 x794)))
(assert (x85 x2347))
(assert (x85 x2977))
(assert (x85 x1643))
(assert (x85 x3096))
(assert (x85 x2965))
(assert (= 0 (x921 57896044618658097711785492504343953926634992332820282019728792003956564820100)))
(assert (x85 x3022))
(assert (x85 x2426))
(assert (x85 x3026))
(assert (> (x2926 x630 x1840 x1916 x2363) 10000))
(assert (=> (>= 10000 x452) (= 0 (x921 x452))))
(assert (=> (<= x1112 10000) (= 0 (x921 x1112))))
(assert (= x1322 (and x227 x2605)))
(assert (= (x1311 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)) x1232))
(assert (= x2153 (and x1368 (not x642))))
(assert (x85 x2602))
(assert (=> (<= x1945 10000) (= (x921 x1945) 0)))
(assert (=> (<= x644 10000) (= (x921 x644) 0)))
(assert (x85 x2349))
(assert (not (x635 (x2926 x1687 x507 x1289 x226))))
(assert (=> (>= 10000 x1659) (= (x921 x1659) 0)))
(assert (x85 x2220))
(assert (=> (>= 10000 x2908) (= 0 (x921 x2908))))
(assert (x85 x2580))
(assert (> (x2629 x1245 x2362) 10000))
(assert (= (x2530 (x2926 x1935 x2137 x3153 x2)) x2))
(assert (x85 x861))
(assert (= (x2312 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)) x1064))
(assert (x85 x59))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x630 x1905 x2112 x477 x3082)))
(assert (x85 x2900))
(assert (= x615 (x1725 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994))))
(assert (x2230 x1330))
(assert (x85 x193))
(assert (x2690 x1587))
(assert (x85 x2295))
(assert (x85 x1457))
(assert (= x931 (x1725 (x437 x931 x193 x2860 x1089 x2068 x1009))))
(assert (x85 x2608))
(assert (= x2823 (x281 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200))))
(assert (x85 x1516))
(assert (x2690 x3096))
(assert (= x471 (x2530 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x505))
(assert (x85 x533))
(assert (= x2844 (x1087 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208))))
(assert (x85 x2464))
(assert (=> (<= x1520 10000) (= (x921 x1520) 0)))
(assert (=> (>= 10000 x507) (= 0 (x921 x507))))
(assert (x85 x943))
(assert (x85 x374))
(assert (< (x2629 x630 x1201) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x2926 x1546 x1971 x78 x2333) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1974))
(assert (x635 18446744073709551518))
(assert (not (x635 (x2629 x1546 x1733))))
(assert (x85 x2300))
(assert (=> (>= 10000 x1931) (= (x921 x1931) 0)))
(assert (= (x1726 (x1656 x1935 x2589 x2425)) x2589))
(assert (x85 x2974))
(assert (x85 x2677))
(assert (x85 x477))
(assert (=> (<= x2902 10000) (= 0 (x921 x2902))))
(assert (x85 x2399))
(assert (x85 x123))
(assert (not (x635 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (=> (>= 10000 x2425) (= (x921 x2425) 0)))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639807))
(assert (=> (>= 10000 x1680) (= 0 (x921 x1680))))
(assert (> (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163) 10000))
(assert (x85 x1885))
(assert (= (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994) (x921 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994))))
(assert (=> (>= 10000 x1423) (= 0 (x921 x1423))))
(assert (x85 x575))
(assert (x85 x101))
(assert (=> (<= x1991 10000) (= (x921 x1991) 0)))
(assert (= x2935 (x1726 (x437 x1935 x2935 x2372 x2237 x162 x1865))))
(assert (= (x2629 x2347 x1454) (x921 (x2629 x2347 x1454))))
(assert (x85 x1221))
(assert (x85 x450))
(assert (x85 x1239))
(assert (x85 x1961))
(assert (x85 x296))
(assert (x85 x3054))
(assert (x85 x508))
(assert (x85 x728))
(assert (x85 x984))
(assert (x85 x1761))
(assert (not (x635 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x85 x2265))
(assert (= (x281 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957)) x917))
(assert (= (x921 (x437 x630 x1901 x916 x3131 x2790 x1397)) (x437 x630 x1901 x916 x3131 x2790 x1397)))
(assert (=> (<= x50 10000) (= 0 (x921 x50))))
(assert (> (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957) 10000))
(assert (= (x2530 (x2926 x630 x1840 x1916 x2363)) x2363))
(assert (x85 x433))
(assert (x85 x2695))
(assert (= (x1656 x615 x1112 x3064) (x921 (x1656 x615 x1112 x3064))))
(assert (x85 x660))
(assert (x85 x710))
(assert (= x1778 (or x41 x3115)))
(assert (x85 x1380))
(assert (= (x1726 (x2318 x1245 x1006 x2011 x1341 x1825)) x1006))
(assert (= (or x170 x1709) x3074))
(assert (= (or x2584 x2717) x282))
(assert (< 10000 (x437 x1687 x2636 x1818 x1494 x143 x1727)))
(assert (x85 x1918))
(assert (x85 x132))
(assert (= (x2056 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365)) x2365))
(assert (x635 18446744073709551613))
(assert (= x21 (x2056 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (x85 x1194))
(assert (x85 x2489))
(assert (x85 x1248))
(assert (=> (>= 10000 x1370) (= (x921 x1370) 0)))
(assert (x85 x102))
(assert (x85 x918))
(assert (x85 x1655))
(assert (x85 x2172))
(assert (x85 x1232))
(assert (x85 x847))
(assert (x85 x1243))
(assert (= (x1087 (x1656 x1935 x2589 x2425)) x2425))
(assert (x85 x1283))
(assert (=> (>= 10000 x2233) (= (x921 x2233) 0)))
(assert (x85 x538))
(assert (x85 x2938))
(assert (=> (>= 10000 x2938) (= (x921 x2938) 0)))
(assert (x85 x1381))
(assert (= x681 (x1725 (x2629 x681 x942))))
(assert (x85 x328))
(assert (= x2121 (=> (and (= x835 (x295 (+ x424 96))) (= x1280 (not (< 128 x3012))) (= (x2007 x835) x499) (= x1036 (x295 (+ 96 x3048)))) (and x1280 x1119))))
(assert (= x496 (and (not x2067) x1531)))
(assert (x85 x907))
(assert (=> (<= x744 10000) (= (x921 x744) 0)))
(assert (x85 x1721))
(assert (= (x1725 (x2318 x1935 x3020 x2002 x2934 x2283)) x1935))
(assert (= x1733 (x1726 (x2629 x1546 x1733))))
(assert (= (x2530 (x2926 66 x3059 x2040 x677)) x677))
(assert (> (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329) 10000))
(assert (x85 x1820))
(assert (x85 x3027))
(assert (x85 x2524))
(assert (x85 x3125))
(assert (=> (<= x1114 10000) (= 0 (x921 x1114))))
(assert (x85 x1324))
(assert (x85 x1420))
(assert (= x878 (or x2896 x1510)))
(assert (x85 x2486))
(assert (not (x635 (x2318 x1687 x2098 x480 x1116 x598))))
(assert (x85 x169))
(assert (= x483 (x1311 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064))))
(assert (= (x1726 (x2629 x1935 x1071)) x1071))
(assert (= (x1087 (x2318 x464 x2385 x1708 x2802 x2915)) x1708))
(assert (= x660 (x2056 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (x85 x922))
(assert (x1842 x2518))
(assert (x85 x1577))
(assert (x85 x1833))
(assert (x85 x1155))
(assert (x85 x1763))
(assert (x85 x1997))
(assert (x85 x356))
(assert (= (=> (and (= (x2456 x2632) x725) (= x1317 (x295 (+ x2632 32))) (= x572 (x295 (+ 32 x23))) (= (not (< 4 x1999)) x2898)) (and (=> (and (= x1067 x1317) (= 4 x2350) (= x2689 x572)) x1199) x2898)) x1641))
(assert (> (x2629 x630 x1201) 10000))
(assert (=> (<= x1872 10000) (= (x921 x1872) 0)))
(assert (= x2242 (=> (and (= (x295 (+ x63 (mod (+ 32 x1193) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1870) (= x2135 (x1033 (- x1445 x360))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x63) (= (* 160 x2909) x360) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2135) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1671)) (and (> x1671 x2135) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2135) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1671))))) (= (x643 x1056) x2909) (<= x2909 18446744073709551615) (>= x1870 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x63) (or (>= x891 57896044618658097711785492504343953926634992332820282019728792003956564819968) (>= 2065879269376 x891)) (= x1406 (> x2909 0)) (= x1671 (x295 (+ x1056 32))) (= (x643 196) x891) (> x1870 x63) (= (x295 (+ x891 36)) x1056) (= x225 (x295 (+ 32 x63))) (= (+ 32 x1966) x2542) (or (and (> x891 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2460)) (and (> x2460 x891) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2460) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x891)))) (= (* 32 x2909) x1193) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x63)) (and (=> (and (not x1406) (= x1879 x1870)) x2742) (=> x1406 x3068)))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639646)))
(assert (= x1159 (and x1894 x110)))
(assert (=> (<= x2771 10000) (= (x921 x2771) 0)))
(assert (x85 x1813))
(assert (x85 x135))
(assert (< 10000 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)))
(assert (x85 x2216))
(assert (= x1302 (x2312 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302))))
(assert (> (x2318 x630 x1905 x2112 x477 x3082) 10000))
(assert (= x2090 (x2530 (x2926 x1139 x1335 x367 x2090))))
(assert (x85 x831))
(assert (=> (<= x1906 10000) (= 0 (x921 x1906))))
(assert (= x774 (x2530 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (x85 x2724))
(assert (= (x921 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)))
(assert (x85 x2391))
(assert (x85 x534))
(assert (=> (<= x2822 10000) (= (x921 x2822) 0)))
(assert (x85 x2986))
(assert (x85 x453))
(assert (=> (<= x1216 10000) (= 0 (x921 x1216))))
(assert (x85 x192))
(assert (= x1945 (x281 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (=> (>= 10000 x1279) (= 0 (x921 x1279))))
(assert (x85 x378))
(assert (x85 x2613))
(assert (= (x1087 (x437 x464 x1717 x363 x2979 x50 x372)) x363))
(assert (= (x921 (x2318 x1687 x2098 x480 x1116 x598)) (x2318 x1687 x2098 x480 x1116 x598)))
(assert (=> (>= 10000 x44) (= (x921 x44) 0)))
(assert (x85 x15))
(assert (=> (<= x2269 10000) (= 0 (x921 x2269))))
(assert (x85 x2887))
(assert (x85 x1325))
(assert (= (or x670 x980) x2803))
(assert (x85 x1609))
(assert (x85 x1421))
(assert (x85 x180))
(assert (x85 x811))
(assert (x85 x1832))
(assert (=> (<= x2954 10000) (= 0 (x921 x2954))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x681 x2677 x950 x2232 x418 x15)))
(assert (= (and x2847 (not x1028)) x1432))
(assert (x85 x2070))
(assert (x85 x738))
(assert (x85 x2943))
(assert (= (x1087 (x2926 x1139 x1335 x367 x2090)) x367))
(assert (= x2066 (x1311 (x437 x615 x1616 x1809 x2020 x2066 x263))))
(assert (= x726 (or x1024 x3081)))
(assert (x85 x61))
(assert (=> (>= 10000 x1245) (= (x921 x1245) 0)))
(assert (x85 x1658))
(assert (= (x1726 (x2926 66 x3059 x2040 x677)) x3059))
(assert (x85 x2146))
(assert (not (x635 (x2629 x1245 x2362))))
(assert (x85 x98))
(assert (=> (<= x2820 10000) (= (x921 x2820) 0)))
(assert (=> (<= x1341 10000) (= (x921 x1341) 0)))
(assert (=> (<= x1268 10000) (= (x921 x1268) 0)))
(assert (= (or x2627 x3124 x603) x231))
(assert (x85 x2363))
(assert (= (x1726 (x2629 x615 x362)) x362))
(assert (x85 x3117))
(assert (= x1546 (x1725 (x437 x1546 x1239 x1052 x1912 x461 x2902))))
(assert (= x2963 (x1726 (x2926 x615 x2963 x2980 x1650))))
(assert (= x2762 (x1726 (x1656 x1687 x2762 x184))))
(assert (< (x2318 x2347 x1446 x2570 x2354 x2281) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2772))
(assert (x85 x2904))
(assert (=> (>= 10000 x929) (= 0 (x921 x929))))
(assert (x85 x1623))
(assert (= 0 (x921 111717504842162250273123531270270194031611963357183166590777697365354585522176)))
(assert (= x180 (x2056 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x85 x1596))
(assert (x85 x3141))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163)))
(assert (x85 x1978))
(assert (= (and x1368 x642) x254))
(assert (= (x281 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)) x3003))
(assert (x85 x970))
(assert (x85 x975))
(assert (x85 x1282))
(assert (=> (>= 10000 x1235) (= (x921 x1235) 0)))
(assert (=> (<= x893 10000) (= 0 (x921 x893))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639832)))
(assert (=> (<= x1852 10000) (= (x921 x1852) 0)))
(assert (=> (>= 10000 x1284) (= (x921 x1284) 0)))
(assert (x85 x2581))
(assert (x85 x827))
(assert (= (x2530 (x437 x1546 x1239 x1052 x1912 x461 x2902)) x1912))
(assert (= (x2530 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)) x2235))
(assert (x85 x2460))
(assert (x85 x2512))
(assert (= x2733 (or x2171 x1148 x224 x574 x2165)))
(assert (x85 x1070))
(assert (=> (>= 10000 x1895) (= 0 (x921 x1895))))
(assert (= x1914 (and x141 (not x1144))))
(assert (= x2366 (x2530 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388))))
(assert (x85 x2129))
(assert (= x2685 (x1087 (x437 x264 x907 x2685 x2025 x1326 x1014))))
(assert (=> (>= 10000 x457) (= 0 (x921 x457))))
(assert (x85 x2048))
(assert (= (x921 95932229227554293267862761608555258089024927314852490146714677558661980618752) 0))
(assert (x85 x872))
(assert (= (x1087 (x437 x296 x386 x2943 x1680 x2306 x2401)) x2943))
(assert (x85 x2203))
(assert (x85 x2094))
(assert (=> (>= 10000 x1116) (= (x921 x1116) 0)))
(assert (x85 x1254))
(assert (x85 x1189))
(assert (=> (>= 10000 x2348) (= 0 (x921 x2348))))
(assert (= (x2056 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) x1889))
(assert (not (x635 (x437 x296 x386 x2943 x1680 x2306 x2401))))
(assert (= x1031 (and x1428 (not x682))))
(assert (x85 x1399))
(assert (x85 x1845))
(assert (< 10000 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)))
(assert (x85 x1482))
(assert (=> (>= 10000 x175) (= 0 (x921 x175))))
(assert (< 10000 (x2629 x1546 x1733)))
(assert (x85 x1214))
(assert (= (x281 (x437 x931 x193 x2860 x1089 x2068 x1009)) x1009))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x296 x386 x2943 x1680 x2306 x2401)))
(assert (= x368 (=> (and (= x101 x153) (= x780 x920) (= x1542 x2821) (= x2142 x1459)) x1847)))
(assert (< 10000 (x2926 x1139 x1335 x367 x2090)))
(assert (x85 x2400))
(assert (x2690 x1439))
(assert (x85 x178))
(assert (x85 x1631))
(assert (= x1199 (=> (and (<= x1999 4) (= x1139 (x2919 x1554)) (>= x2689 1) (= x2689 x551) (< x1554 x2689) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1554) (= x1067 x2716) (= x913 (* x1999 32)) (= (<= x1139 224) x145) (= x2716 (x295 (+ x1186 x662))) (= x1186 (* x1999 32)) (= x551 (x295 (+ x1066 x913))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1554) (= x423 (x1033 (- x3087 32))) (<= x1554 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1033 (- x2689 x1554)) x3087) (<= 1 x551) (= x1999 x2350) (= x3052 (x295 (+ 32 x1554)))) (and x145 (=> (and (= x1672 (x2919 x1309)) (= x2728 (x437 x1139 x1846 x136 x918 x1672 x3063)) (= (x295 (+ 32 x2689)) x815) (= (x1656 x1139 x965 x1517) x2562) (= (x2919 x1975) x2971) (= (x2919 x678) x136) (= x1945 (x2919 x1568)) (= x1752 (x2919 x1214)) (= (x2919 x2143) x2565) (= (x295 (+ 32 x2014)) x2544) (= (x2919 x3052) x965) (= (x1612 0) x379) (= (x2919 x751) x2090) (= x2248 (x2919 x1766)) (= (x295 (+ 64 x3052)) x587) (= (x295 (+ 160 x3052)) x1735) (= (x2919 x3052) x1416) (= x336 (> x1204 0)) (= (x2919 x1618) x3055) (= x1710 (x295 (+ 128 x3052))) (= x1335 (x2919 x3052)) (= (x295 (+ x3052 32)) x2426) (= (x2919 x3052) x1846) (= x613 (x295 (+ 128 x3052))) (= x918 (x2919 x587)) (= x489 (x295 (+ x3052 192))) (= x1975 (x295 (+ x3052 64))) (= x886 (ite (= 0 x1139) x379 (ite (<= x1139 32) x163 (ite (<= x1139 64) x2562 (ite (<= x1139 96) x1693 (ite (<= x1139 128) x1767 (ite (<= x1139 160) x2728 (ite (>= 192 x1139) x1621 (ite (>= 224 x1139) x877 x268))))))))) (= (x2629 x1139 x2465) x163) (= (x2919 x1848) x367) (= (x295 (+ x3052 128)) x1568) (= x1931 (x2919 x3052)) (= x877 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)) (= (x2919 x2426) x1517) (= x3063 (x2919 x613)) (= x1767 (x2318 x1139 x1931 x3055 x2971 x2451)) (= x2771 (x2919 x382)) (= x384 (x2919 x489)) (= (x2926 x1139 x1335 x367 x2090) x1693) (= x1618 (x295 (+ 32 x3052))) (= x1143 (x2919 x294)) (= (x295 (+ x3052 96)) x832) (= x1214 (x295 (+ x3052 64))) (= (x295 (+ x3052 64)) x751) (= x1848 (x295 (+ 32 x3052))) (= x1309 (x295 (+ 96 x3052))) (= (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771) x1621) (= (x2919 x2014) x1204) (= x1766 (x295 (+ 32 x3052))) (= (x295 (+ x3052 32)) x678) (= (x295 (+ x3052 96)) x821) (= x1197 (x2919 x1710)) (= (x2919 x821) x45) (= (x295 (+ x3052 96)) x2084) (= (x2919 x832) x2451) (= x2831 (x2919 x2084)) (= (x2919 x3052) x2465) (= (x2919 x1735) x2905) (= x1642 (x2919 x3052)) (= x2143 (x295 (+ 64 x3052))) (= x294 (x295 (+ x3052 32))) (= (x295 (+ 160 x3052)) x382)) (and (=> (and x336 (and (= x2907 (x295 (+ 32 x815))) (= x2997 (< 1 x1204)) (= (x295 (+ 32 x2544)) x872) (= x3054 (x2919 x2544)))) (and (=> (and (and (= x2940 (x295 (+ 32 x2907))) (= (< 2 x1204) x3061) (= (x295 (+ 32 x872)) x963) (= x1057 (x51 x872))) x2997) (and (=> (and (and (= (x2660 x963) x2577) (= x425 (x295 (+ 32 x963))) (= (> x1204 3) x1431) (= x2172 (x295 (+ x2940 32)))) x3061) (and (=> (and (and (= x2172 x1147) (= x297 3) (= x2428 x425)) (not x1431)) x765) (=> x1431 x775))) (=> (and (and (= 2 x297) (= x1147 x2940) (= x2428 x963)) (not x3061)) x765))) (=> (and (and (= x1147 x2907) (= x297 1) (= x872 x2428)) (not x2997)) x765))) (=> (and (and (= x2428 x2544) (= 0 x297) (= x815 x1147)) (not x336)) x765)))))))
(assert (x85 x1853))
(assert (< 10000 (x437 x1139 x1846 x136 x918 x1672 x3063)))
(assert (< (x2926 x464 x1921 x2938 x2495) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2584 (and (not x216) x788)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x296 x3021 x1248 x905 x79)))
(assert (x85 x1185))
(assert (= x826 (x1311 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (x85 x1659))
(assert (x85 x2784))
(assert (= 0 (x921 1461501637330902918203684832716283019655932542975)))
(assert (< 10000 (x2926 x296 x693 x924 x1279)))
(assert (x85 x2402))
(assert (=> (>= 10000 x2105) (= (x921 x2105) 0)))
(assert (=> (>= 10000 x1201) (= 0 (x921 x1201))))
(assert (x85 x1129))
(assert (x85 x502))
(assert (x2230 x2819))
(assert (= x2951 (and x1485 x2719)))
(assert (x85 x1309))
(assert (x85 x1828))
(assert (= (and (not x1830) x850) x224))
(assert (x85 x1870))
(assert (x85 x473))
(assert (x85 x1492))
(assert (x85 x2390))
(assert (= (and x1776 (not x127)) x1223))
(assert (x85 x1921))
(assert (x85 x2839))
(assert (x85 x1046))
(assert (= x1416 (x1726 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771))))
(assert (=> (>= 10000 x1672) (= 0 (x921 x1672))))
(assert (= (x2926 x1935 x2137 x3153 x2) (x921 (x2926 x1935 x2137 x3153 x2))))
(assert (x85 x2051))
(assert (x85 x2751))
(assert (x85 x3119))
(assert (x85 x2002))
(assert (x85 x1680))
(assert (= (x1311 (x437 x681 x2677 x950 x2232 x418 x15)) x418))
(assert (> (x437 x296 x386 x2943 x1680 x2306 x2401) 10000))
(assert (= (x1726 (x2318 x931 x1231 x2343 x1968 x789)) x1231))
(assert (x85 x759))
(assert (x85 x2116))
(assert (x85 x1000))
(assert (x85 x2850))
(assert (x85 x1861))
(assert (= (x921 32542679537407071897843112657522291873774333932075415528008786499928730894336) 0))
(assert (=> (<= x136 10000) (= (x921 x136) 0)))
(assert (=> (<= x1454 10000) (= (x921 x1454) 0)))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639743)))
(assert (= (x1726 (x437 x296 x386 x2943 x1680 x2306 x2401)) x386))
(assert (not (x635 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994))))
(assert (= (x1311 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) x1423))
(assert (x85 x294))
(assert (x85 x2980))
(assert (x85 x685))
(assert (x85 x2474))
(assert (= x2644 (x2312 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (x85 x735))
(assert (= (x921 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)) (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)))
(assert (=> (>= 10000 x1809) (= (x921 x1809) 0)))
(assert (=> (<= x1029 10000) (= (x921 x1029) 0)))
(assert (=> (<= x2860 10000) (= 0 (x921 x2860))))
(assert (= x2124 (x1726 (x1656 x681 x2124 x2754))))
(assert (=> (>= 10000 x978) (= 0 (x921 x978))))
(assert (=> (<= x1538 10000) (= (x921 x1538) 0)))
(assert (= (x1726 (x2629 x264 x2219)) x2219))
(assert (x85 x1293))
(assert (x85 x334))
(assert (x85 x865))
(assert (x85 x1245))
(assert (=> (>= 10000 x1824) (= (x921 x1824) 0)))
(assert (= (x1726 (x437 x615 x1616 x1809 x2020 x2066 x263)) x1616))
(assert (x85 x2389))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (= (x281 (x437 x1687 x2636 x1818 x1494 x143 x1727)) x1727))
(assert (x85 x112))
(assert (= x2980 (x1087 (x2926 x615 x2963 x2980 x1650))))
(assert (= (=> (and (= (x295 (+ x1407 32)) x576) (= x1020 (not (> x1623 1))) (= (x295 (+ 32 x1253)) x1383)) (and (=> (and (= x2972 x576) (= x1383 x2193) (= x1324 1)) x2152) x1020)) x2380))
(assert (x85 x358))
(assert (x85 x1532))
(assert (x85 x2072))
(assert (=> (>= 10000 x143) (= (x921 x143) 0)))
(assert (x85 x1289))
(assert (= (or x244 x1859 x2461 x714 x1106) x2590))
(assert (x85 x2428))
(assert (x85 x3122))
(assert (= x2483 (x1087 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (= (x1726 (x2926 x264 x409 x556 x1785)) x409))
(assert (not (x635 (x1656 x1687 x2762 x184))))
(assert (x85 x2148))
(assert (=> (<= x296 10000) (= 0 (x921 x296))))
(assert (> (x2926 x1935 x2137 x3153 x2) 10000))
(assert (= (x1726 (x2926 x630 x1840 x1916 x2363)) x1840))
(assert (= (x1725 (x2629 x296 x1654)) x296))
(assert (= (x2056 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)) x554))
(assert (x85 x854))
(assert (=> (<= x2374 10000) (= (x921 x2374) 0)))
(assert (= x1428 (and x2804 (not x445))))
(assert (x85 x32))
(assert (x85 x2966))
(assert (= (=> (and (= (x12 x1704) x3133) (= x1769 (x12 x3133)) (= x1210 (> x1769 0))) (and (=> (and x1210 (and (= (x12 x3019) x1266) (= (x12 x1503) x2382) (= x2829 (x295 (+ x2439 128))) (= x2439 (x295 (+ x2278 32))) (= (x295 (+ 32 x2381)) x462) (= (x295 (+ x462 32)) x13) (= (x310 x1266) x2177) (= (x12 x1470) x2555) (= x846 (> x2177 0)) (= x2693 (x12 x970)) (= x2381 (x295 (+ x2439 32))) (= (x295 (+ 32 x1266)) x1599) (>= x2693 1) (= (x295 (+ x2829 32)) x601) (= (x295 (+ x2382 32)) x1470) (= x346 (x1448 1461501637330902918203684832716283019655932542975 x1439)) (= (x12 x1704) x970) (= x3019 (x295 (+ x1470 32))) (= (x295 (+ x970 32)) x1503) (= x1439 (x12 x2382)))) (and (=> (and x846 (and (= x3006 (> x2177 32)) (= (x1294 x1599) x293))) (and (=> (not x3006) x1249) (=> (and (and (= x573 (x295 (+ 32 x1599))) (= (x2981 x573) x2535) (= x380 (x295 (+ x601 32))) (= x227 (< 64 x2177))) x3006) (and (=> (not x227) x1249) (=> (and (and (= x2026 (x586 x849)) (= (x295 (+ x1599 64)) x849) (= (> x2177 96) x1281) (= (x295 (+ x601 64)) x1653)) x227) (and (=> x1281 x2976) (=> (not x1281) x1249))))))) (=> (not x846) x1249))) (=> (and (not x1210) (= x116 x2278)) x807))) x1500))
(assert (x85 x2457))
(assert (= (x281 (x437 x2347 x2061 x2216 x1235 x357 x1070)) x1070))
(assert (= x528 (x1311 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (x85 x3017))
(assert (= x2836 (x1726 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x408))
(assert (x85 x1699))
(assert (= x296 (x1725 (x2318 x296 x3021 x1248 x905 x79))))
(assert (x85 x834))
(assert (= x2937 (x1087 (x2318 x264 x2049 x2937 x1581 x1212))))
(assert (=> (>= 10000 x2090) (= 0 (x921 x2090))))
(assert (x85 x2730))
(assert (x85 x1456))
(assert (x85 x601))
(assert (= (x921 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)) (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)))
(assert (not (x635 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (x85 x1118))
(assert (x85 x266))
(assert (x85 x1966))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x615 x1616 x1809 x2020 x2066 x263)))
(assert (= x1142 (x1726 (x2629 x1687 x1142))))
(assert (= (x2312 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589)) x1589))
(assert (x85 x2809))
(assert (x635 32542679537407071897843112657522291873774333932075415528008786499928730894336))
(assert (x85 x240))
(assert (x85 x2936))
(assert (= (x921 (x2926 x1546 x1971 x78 x2333)) (x2926 x1546 x1971 x78 x2333)))
(assert (= (and (not x1296) x1146) x2663))
(assert (=> (<= x208 10000) (= (x921 x208) 0)))
(assert (x85 x924))
(assert (= (and x2911 x2392) x980))
(assert (= x1381 (x2056 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284))))
(assert (< (x1656 x931 x1849 x3103) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x346))
(assert (x85 x1766))
(assert (x85 x1235))
(assert (x85 x1300))
(assert (x85 x2635))
(assert (x85 x595))
(assert (x85 x908))
(assert (< (x1656 64 x2989 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2690 x706))
(assert (x85 x1810))
(assert (x85 x1400))
(assert (x85 x2251))
(assert (< (x2945 x681 x452 x534 x929 x2751 x888 x3141) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1726 (x2318 x1687 x2098 x480 x1116 x598)) x2098))
(assert (x85 x208))
(assert (x85 x2643))
(assert (x85 x1517))
(assert (= (x1726 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) x1563))
(assert (x85 x1573))
(assert (> (x2926 x2347 x2471 x1793 x378) 10000))
(assert (= x264 (x1725 (x2945 x264 x453 x1721 x1754 x2220 x702 x554))))
(assert (x85 x845))
(assert (x85 x2193))
(assert (x85 x1808))
(assert (= x420 (=> (and (= 0 x2598) (= x2229 (ite (= x69 0) (ite (= x69 0) 1 0) (ite (= 0 x2620) 1 0))) (= x1902 x1923) (= x2229 0) (= (x3084 x593) x2598)) x546)))
(assert (=> (<= x3157 10000) (= 0 (x921 x3157))))
(assert (> (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302) 10000))
(assert (= (and (not x2277) x2946) x2174))
(assert (= x2354 (x2530 (x2318 x2347 x1446 x2570 x2354 x2281))))
(assert (= x1700 (and x878 (not x637))))
(assert (x85 x1328))
(assert (x85 x2308))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)))
(assert (x85 x80))
(assert (x85 x3131))
(assert (x85 x1352))
(assert (x85 x653))
(assert (x85 x1601))
(assert (x85 x794))
(assert (= (x2926 x2001 x1029 x2470 x2301) (x921 (x2926 x2001 x1029 x2470 x2301))))
(assert (x85 x1489))
(assert (x1842 x2813))
(assert (x85 x1735))
(assert (= (x921 (x437 x1935 x2935 x2372 x2237 x162 x1865)) (x437 x1935 x2935 x2372 x2237 x162 x1865)))
(assert (> (x2318 x1245 x1006 x2011 x1341 x1825) 10000))
(assert (x85 x817))
(assert (x2690 x1330))
(assert (x85 x1792))
(assert (= x1592 (and x2492 (not x1646))))
(assert (x85 x3063))
(assert (x85 x432))
(assert (x85 x1134))
(assert (= (x1311 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)) x48))
(assert (x85 x2620))
(assert (= x2333 (x2530 (x2926 x1546 x1971 x78 x2333))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x1687 x1142)))
(assert (x85 x463))
(assert (= x905 (x2530 (x2318 x296 x3021 x1248 x905 x79))))
(assert (x2690 x2211))
(assert (x85 x1112))
(assert (= x1442 (and x523 x1241)))
(assert (x85 x3086))
(assert (x85 x2213))
(assert (x85 x153))
(assert (x85 x1526))
(assert (= (and (not x2838) x1339) x2429))
(assert (x85 x573))
(assert (x85 x2696))
(assert (x2230 x2920))
(assert (x85 x2680))
(assert (x85 x359))
(assert (< (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2831))
(assert (= x1745 (x281 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x2080))
(assert (x85 x547))
(assert (=> (<= x2430 10000) (= 0 (x921 x2430))))
(assert (x85 x1575))
(assert (=> (<= x2754 10000) (= (x921 x2754) 0)))
(assert (= x2347 (x1725 (x2629 x2347 x1454))))
(assert (= (and x2675 (not x3106)) x285))
(assert (x85 x225))
(assert (x85 x1390))
(assert (x85 x3010))
(assert (x85 x2720))
(assert (x85 x499))
(assert (x85 x2238))
(assert (x85 x2661))
(assert (= (=> (and (= x2513 (x295 (+ x2689 32))) (= x956 (x1033 (- x1147 x2689))) (>= x2817 1) (> x1147 x2689) (= (x1033 (- x956 32)) x973) (= x759 x2428) (= x297 x1204) (= x1724 (>= 224 x630)) (= x630 (x2004 x2689)) (= x2433 (* 32 x1204)) (<= 1 x1147) (= (x295 (+ x1109 x815)) x2817) (= x759 (x295 (+ x2544 x2433))) (<= x2689 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2689) (>= 4 x1204) (= x1147 x2817) (<= x2689 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1109 (* 32 x1204))) (and x1724 (=> (and (= (x2004 x976) x3154) (= x25 (x295 (+ x2513 128))) (= (x295 (+ x2513 64)) x2732) (= x2557 (x2004 x135)) (= x477 (x2004 x2272)) (= x3069 (x2004 x34)) (= x1178 (x295 (+ x2513 96))) (= (x295 (+ x2513 192)) x1613) (= x828 (x2004 x1417)) (= (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903) x2297) (= (x2004 x2513) x1977) (= x103 (x295 (+ x2513 96))) (= x3082 (x2004 x1178)) (= x381 (x2004 x2520)) (or (and (<= x1147 115792089237316195423570985008687907853269984665640564039457584007913129639615) (<= 1 x1147)) (and (>= x1147 115792089237316195423570985008687907853269984665640564039457584007913129639618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1147))) (= x1901 (x2004 x2513)) (= x1917 (x295 (+ x2513 96))) (= (x295 (+ 32 x2513)) x135) (= x1122 (x295 (+ 32 x2513))) (= x1226 (x1033 (- x1720 32))) (= (x295 (+ 32 x1147)) x937) (< x1147 x2203) (= (x2004 x3007) x2504) (= (x2004 x2513) x1201) (= (x295 (+ 32 x1608)) x2815) (= x1916 (x2004 x2414)) (= (x295 (+ 32 x2513)) x243) (= x1688 (x2004 x2513)) (= (x295 (+ 64 x2513)) x2773) (= (x2004 x1122) x916) (= x1687 (x441 x1147)) (= x575 (x295 (+ x2260 32))) (= (x295 (+ 32 x2184)) x1608) (= x741 (x295 (+ x1147 32))) (= x2363 (x2004 x322)) (= (x295 (+ x575 32)) x679) (>= 2 x38) (= x322 (x295 (+ 64 x2513))) (= (x437 x630 x1901 x916 x3131 x2790 x1397) x158) (= x747 (x2004 x2513)) (= x48 (x2004 x1839)) (= (x295 (+ x1655 32)) x2877) (= (x2318 x630 x1905 x2112 x477 x3082) x816) (= (x2004 x1917) x2624) (= x326 (x2004 x243)) (= x903 (x2004 x1613)) (= (x295 (+ 128 x2513)) x976) (= (x295 (+ x2815 32)) x1655) (= x577 (x295 (+ 64 x2513))) (= (x295 (+ 128 x2513)) x2828) (= (x295 (+ x2513 32)) x2520) (= (x2004 x2513) x1905) (= (x2004 x577) x2366) (= (x1448 1461501637330902918203684832716283019655932542975 x3069) x1440) (= x1574 (x2004 x25)) (= (x2004 x2904) x981) (= (x2926 x630 x1840 x1916 x2363) x2727) (= x1230 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) (= (x1612 0) x727) (= x2184 (x295 (+ x679 32))) (= x2203 (x295 (+ 288 x937))) (= (ite (= 0 x630) x727 (ite (<= x630 32) x1314 (ite (>= 64 x630) x1149 (ite (>= 96 x630) x2727 (ite (>= 128 x630) x816 (ite (<= x630 160) x158 (ite (>= 192 x630) x1230 (ite (<= x630 224) x2297 x2077)))))))) x1951) (= x1314 (x2629 x630 x1201)) (= x2112 (x2004 x782)) (= x182 (x295 (+ 160 x2513))) (= x1397 (x2004 x2828)) (= x1852 (x2004 x2732)) (= (x295 (+ 32 x2513)) x782) (= x2260 (x295 (+ 32 x937))) (= x2388 (x2004 x182)) (= (x2004 x2513) x1840) (= (x295 (+ x2513 64)) x2272) (= (x1448 1461501637330902918203684832716283019655932542975 x2504) x1515) (= x2904 (x295 (+ 160 x2513))) (= (x2004 x103) x2790) (= (<= x1687 224) x756) (= x1839 (x295 (+ 96 x2513))) (= (x2004 x2773) x3131) (= (x2004 x578) x1425) (= x2414 (x295 (+ 32 x2513))) (= (x2004 x1759) x38) (= (x1033 (- x2203 x1147)) x1720) (= (x1656 x630 x747 x2557) x1149)) (and x756 (=> (and (= (x295 (+ 64 x741)) x405) (<= x1742 18446744073709551615) (= x1289 (x441 x1018)) (= x1018 (x295 (+ 32 x741))) (>= x1576 3) (= (x441 x697) x2402) (= x2305 (x2318 x1687 x2098 x480 x1116 x598)) (= (x441 x741) x2636) (= (x441 x741) x1013) (= x2569 (x295 (+ 64 x741))) (= x2808 (* x1742 32)) (= (x441 x1771) x186) (= (x295 (+ x741 160)) x1952) (= (x295 (+ x741 32)) x89) (= (x441 x808) x143) (= (x295 (+ x741 64)) x1376) (= x399 (x441 x2081)) (= (x295 (+ x741 192)) x2028) (= x178 (x295 (+ x741 96))) (< x2203 x1576) (= x2098 (x441 x741)) (= x175 (x441 x1952)) (= x598 (x441 x805)) (= (x295 (+ x741 128)) x1347) (= (x295 (+ x1125 32)) x580) (= x2450 (x441 x2259)) (= x616 (= 0 x1742)) (= x2563 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399)) (= x1302 (x441 x2028)) (= x808 (x295 (+ 96 x741))) (= (x441 x741) x1264) (= (x295 (+ 32 x741)) x1832) (= x1114 (x441 x1347)) (= x507 (x441 x741)) (= (x295 (+ 128 x741)) x2375) (= x3076 (x295 (+ x741 32))) (= (x441 x580) x1742) (= (x441 x2375) x1727) (= x1142 (x441 x741)) (= x805 (x295 (+ 96 x741))) (= x1116 (x441 x1376)) (or (and (<= x2203 318) (<= 2 x2203)) (and (>= x2203 321) (<= x2203 115792089237316195423570985008687907853269984665640564039457584007913129639934))) (= (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302) x2767) (= x582 (x295 (+ 64 x741))) (= (x441 x2569) x353) (= (x1656 x1687 x2762 x184) x503) (= x2132 (x2926 x1687 x507 x1289 x226)) (= x1691 (x2629 x1687 x1142)) (= (x441 x405) x1494) (= (x441 x582) x226) (= (x295 (+ 32 x741)) x2509) (= (x295 (+ 160 x741)) x2081) (= (x295 (+ 64 x741)) x1771) (= (x441 x731) x2105) (= x2762 (x441 x741)) (= (x441 x2509) x184) (= x2793 (x441 x178)) (= x480 (x441 x89)) (= x2998 (x437 x1687 x2636 x1818 x1494 x143 x1727)) (= (x295 (+ x741 96)) x697) (= (ite (= x1687 0) x2922 (ite (<= x1687 32) x1691 (ite (>= 64 x1687) x503 (ite (<= x1687 96) x2132 (ite (<= x1687 128) x2305 (ite (>= 160 x1687) x2998 (ite (>= 192 x1687) x2563 (ite (>= 224 x1687) x2767 x2233)))))))) x700) (= x1788 (x441 x1832)) (= x1576 (x295 (+ x2203 (mod (+ 32 x2808) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x295 (+ 32 x741)) x731) (= x2259 (x295 (+ 128 x741))) (= (x441 x3076) x1818) (= (x1612 0) x2922)) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1576)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1576) (= x253 (x295 (+ 32 x2203))) (= (x295 (+ x253 32)) x1366) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1576)) (not (= x1576 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= x2568 (x295 (+ 64 x1576))) (= x127 (= x1742 1)) (<= x1576 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x1576 x2568) (= x1172 (x295 (+ 32 x1576))) (= x1058 (x1033 (- x1742 1))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1576)) (not x616)) (and (=> (and (= x2568 x1400) x127) x1272) (=> (not x127) x96))) (=> (and (= x1576 x2291) x616) x1679))))))) x765))
(assert (= (=> (and (or (<= x1334 18446744073709551455) (>= x1334 115792089237316195423570985008687907853269984665640564039457584007913129639777)) (>= 1461501637330902918203684832716283019655932542975 x2314) (= x118 (x643 x1575)) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1334) (>= 18446744073709551455 x1334)) (>= 18446744073709551615 x1334) (>= 18446744073709551614 x1334) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x1575) (>= 2065879269284 x1575)) (not (= x1334 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x235 (x295 (+ x2110 32))) (= x340 (x295 (+ 32 x1572))) (= (x295 (+ x1334 160)) x2072) (<= x734 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x473 (x295 (+ x1042 32))) (<= x1334 18446744073709551614) (<= x1334 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2218 (x643 x1042)) (= (x1033 (- x1445 x1575)) x734) (= x2314 (x643 x2110)) (= (x643 x473) x2062) (>= x734 160) (= x1042 (x295 (+ x235 32))) (= (not (> x2245 1)) x484) (= (x295 (+ x1575 32)) x2110) (not (< x2072 x1334)) (= (x295 (+ x1334 32)) x1572) (>= 18446744073709551615 x1334) (= x627 (x295 (+ x340 32))) (= x130 (x643 x235)) (= x1068 (x295 (+ x627 32))) (<= x118 5) (> x2072 x1334) (>= 1461501637330902918203684832716283019655932542975 x2062)) (and (=> (= x2072 x63) x2242) x484)) x1062))
(assert (x85 x166))
(assert (= x482 (x1087 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (x85 x355))
(assert (x85 x2384))
(assert (x85 x1963))
(assert (x85 x1043))
(assert (= (x1725 (x437 x464 x1717 x363 x2979 x50 x372)) x464))
(assert (= 0 (x921 88383320980755791914082775550597828907713979028428263264130000526486271950848)))
(assert (x85 x1981))
(assert (x85 x536))
(assert (x85 x1801))
(assert (x85 x2206))
(assert (x85 x1674))
(assert (= (x921 (x437 x2001 x2798 x2918 x774 x1456 x1268)) (x437 x2001 x2798 x2918 x774 x1456 x1268)))
(assert (x85 x2135))
(assert (x85 x888))
(assert (x85 x1996))
(assert (=> (>= 10000 x2372) (= 0 (x921 x2372))))
(assert (= x2791 (and x1795 x2950)))
(assert (= x1264 (x1726 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302))))
(assert (x85 x1619))
(assert (x85 x1053))
(assert (= (x1725 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)) x1687))
(assert (x85 x2306))
(assert (= (x921 (x2629 x1546 x1733)) (x2629 x1546 x1733)))
(assert (x85 x2386))
(assert (= x2884 (and x2076 (not x856))))
(assert (= (and x2803 x1010) x2034))
(assert (= x3030 (x1726 (x2629 x931 x3030))))
(assert (x85 x3046))
(assert (= (x1311 (x437 x464 x1717 x363 x2979 x50 x372)) x50))
(assert (= (x1725 (x437 x615 x1616 x1809 x2020 x2066 x263)) x615))
(assert (x85 x1107))
(assert (x85 x527))
(assert (=> (>= 10000 x2044) (= 0 (x921 x2044))))
(assert (=> (<= x414 10000) (= (x921 x414) 0)))
(assert (=> (<= x2470 10000) (= (x921 x2470) 0)))
(assert (=> (<= x3064 10000) (= 0 (x921 x3064))))
(assert (x85 x1871))
(assert (not x289))
(assert (= (x1311 (x2318 x264 x2049 x2937 x1581 x1212)) x1212))
(assert (x85 x522))
(assert (x85 x2908))
(assert (= (x2926 x464 x1921 x2938 x2495) (x921 (x2926 x464 x1921 x2938 x2495))))
(assert (= (x1087 (x2318 x296 x3021 x1248 x905 x79)) x1248))
(assert (x85 x1075))
(assert (< 10000 (x2629 x264 x2219)))
(assert (= x1061 (and x2507 x350)))
(assert (= (x921 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)))
(assert (=> (>= 10000 x2524) (= 0 (x921 x2524))))
(assert (=> (>= 10000 x1094) (= 0 (x921 x1094))))
(assert (= (and x2549 x1034) x1128))
(assert (x85 x2420))
(assert (= x2471 (x1726 (x2926 x2347 x2471 x1793 x378))))
(assert (x85 x480))
(assert (x85 x1534))
(assert (= (and (not x1260) x2633) x410))
(assert (x85 x1849))
(assert (= (x2312 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) x208))
(assert (= x2040 (x1087 (x2926 66 x3059 x2040 x677))))
(assert (=> (<= x3141 10000) (= (x921 x3141) 0)))
(assert (=> (<= x2751 10000) (= (x921 x2751) 0)))
(assert (x2690 x2504))
(assert (x85 x1650))
(assert (= (x281 (x437 x615 x1616 x1809 x2020 x2066 x263)) x263))
(assert (= (and (not x3061) x1541) x1181))
(assert (=> (<= x2471 10000) (= (x921 x2471) 0)))
(assert (x85 x1946))
(assert (x85 x1825))
(assert (x85 x2618))
(assert (x85 x2008))
(assert (x635 57896044618658097711785492504343953926418782139537452191302581570759080747168))
(assert (=> (<= x134 10000) (= (x921 x134) 0)))
(assert (x635 30450320296159908085414496432607297912280636920234228256796789313041262968832))
(assert (x85 x2112))
(assert (= (and x637 x878) x1339))
(assert (= x1935 (x1725 (x1656 x1935 x2589 x2425))))
(assert (=> (<= x2422 10000) (= 0 (x921 x2422))))
(assert (= (x921 2065879269284) 0))
(assert (x85 x1419))
(assert (x85 x744))
(assert (x85 x2211))
(assert (=> (>= 10000 x378) (= 0 (x921 x378))))
(assert (x85 x3019))
(assert (= x1154 (and x772 (not x1012))))
(assert (< (x1656 x2347 x2982 x843) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1086))
(assert (x85 x1613))
(assert (=> (<= x1961 10000) (= 0 (x921 x1961))))
(assert (= (x2530 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) x1918))
(assert (x85 x3037))
(assert (=> (>= 10000 x2644) (= (x921 x2644) 0)))
(assert (x85 x1703))
(assert (x85 x890))
(assert (=> (>= 10000 x1237) (= (x921 x1237) 0)))
(assert (x85 x2979))
(assert (x85 x1222))
(assert (= x1126 (and x520 (not x2576))))
(assert (x85 x2515))
(assert (x85 x2224))
(assert (x85 x189))
(assert (= (and x223 x354) x2658))
(assert (x85 x2147))
(assert (= (or x1408 x993) x2662))
(assert (= (x1725 (x437 x264 x907 x2685 x2025 x1326 x1014)) x264))
(assert (= (x1311 (x2318 x1139 x1931 x3055 x2971 x2451)) x2451))
(assert (x85 x2905))
(assert (x85 x48))
(assert (x85 x2409))
(assert (= x1936 (x1087 (x1656 x2001 x1228 x1936))))
(assert (< 10000 (x2926 x1546 x1971 x78 x2333)))
(assert (= (and x1128 x988) x2946))
(assert (=> (<= x2990 10000) (= 0 (x921 x2990))))
(assert (= (x1725 (x1656 x1245 x2734 x912)) x1245))
(assert (> (x2629 x615 x362) 10000))
(assert (x85 x2480))
(assert (x85 x2829))
(assert (=> (<= x3059 10000) (= (x921 x3059) 0)))
(assert (=> (>= 10000 x347) (= 0 (x921 x347))))
(assert (x85 x3094))
(assert (= x3068 (=> (and (>= 18446744073709551614 x1870) (or (>= x1870 115792089237316195423570985008687907853269984665640564039457584007913129639777) (<= x1870 18446744073709551455)) (= x2300 (x295 (+ x304 32))) (= x2593 (x295 (+ x2300 32))) (= x2811 (x643 x1671)) (= (x1033 (- x1445 x1671)) x1380) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1870) (= x2679 (x295 (+ 160 x1870))) (= x3143 (x643 x508)) (= x2226 (x643 x811)) (not (= x1870 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= x2534 (x643 x233)) (not (< x2679 x1870)) (<= x845 1461501637330902918203684832716283019655932542975) (= (x643 x2254) x845) (<= x1870 18446744073709551615) (= x2806 (x295 (+ x2593 32))) (<= x1380 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< x1870 x2679) (= (not (> x2909 1)) x1465) (= (x295 (+ 32 x1870)) x304) (<= x1870 18446744073709551615) (= (x295 (+ x2254 32)) x233) (= x2254 (x295 (+ x1671 32))) (>= x1380 160) (>= 5 x2811) (>= 18446744073709551614 x1870) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564820645 x1671) (<= x1671 2065879269284)) (= (x295 (+ 32 x233)) x508) (<= x2226 1461501637330902918203684832716283019655932542975) (= (x295 (+ 32 x508)) x811) (or (<= x1870 18446744073709551455) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639777 x1870))) (and x1465 (=> (= x2679 x1879) x2742)))))
(assert (x85 x42))
(assert (< 10000 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639615)))
(assert (< (x1656 x264 x1370 x356) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2878))
(assert (= (x1726 (x2318 x2347 x1446 x2570 x2354 x2281)) x1446))
(assert (x85 x2167))
(assert (x85 x2689))
(assert (= x3050 (x2312 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (< 10000 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050)))
(assert (not (x635 (x437 x264 x907 x2685 x2025 x1326 x1014))))
(assert (x85 x2639))
(assert (x85 x2422))
(assert (x85 x345))
(assert (x85 x1817))
(assert (= x2956 (and x2330 x1259)))
(assert (= 1 (x1087 (x1656 64 x2989 1))))
(assert (= (=> (and (= x315 0) (= x1902 x2104) (= x315 (ite (= x311 0) (ite (= x311 0) 1 0) (ite (= 0 x2573) 1 0)))) x546) x1484))
(assert (= (x437 x2347 x2061 x2216 x1235 x357 x1070) (x921 (x437 x2347 x2061 x2216 x1235 x357 x1070))))
(assert (x85 x2299))
(assert (x85 x428))
(assert (x85 x2443))
(assert (= (x1725 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) x1935))
(assert (= (and x232 x616) x1750))
(assert (=> (>= 10000 x2303) (= (x921 x2303) 0)))
(assert (=> (>= 10000 x2589) (= 0 (x921 x2589))))
(assert (x85 x1605))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639809))
(assert (< 10000 (x2318 x2001 x2374 x861 x1786 x3029)))
(assert (= x2858 (x1726 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x85 x2419))
(assert (=> (<= x1844 10000) (= 0 (x921 x1844))))
(assert (< (x437 x630 x1901 x916 x3131 x2790 x1397) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x635 2189116922))
(assert (x85 x3020))
(assert (= x1935 (x1725 (x2926 x1935 x2137 x3153 x2))))
(assert (= (x1087 (x2945 x615 x1094 x229 x134 x2348 x827 x660)) x229))
(assert (x85 x1545))
(assert (= (x1656 x681 x2124 x2754) (x921 (x1656 x681 x2124 x2754))))
(assert (= (x1087 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) x779))
(assert (x85 x2706))
(assert (=> (>= 10000 x2676) (= 0 (x921 x2676))))
(assert (= x1397 (x281 (x437 x630 x1901 x916 x3131 x2790 x1397))))
(assert (x85 x1572))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564820036))
(assert (x85 x2348))
(assert (x635 1461501637330902918203684832716283019655932542975))
(assert (= x1805 (or x1858 x282)))
(assert (x85 x1530))
(assert (> (x437 x615 x1616 x1809 x2020 x2066 x263) 10000))
(assert (= (x1725 (x2318 x264 x2049 x2937 x1581 x1212)) x264))
(assert (< (x2629 x1935 x1071) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1752))
(assert (x85 x1350))
(assert (= (and x2034 (not x1622)) x788))
(assert (x85 x347))
(assert (not (x635 (x2945 x264 x453 x1721 x1754 x2220 x702 x554))))
(assert (x635 111717504842162250273123531270270194031611963357183166590777697365354585522176))
(assert (= x2205 (x2530 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885))))
(assert (x85 x1450))
(assert (x85 x626))
(assert (= (x1726 (x1656 x2347 x2982 x843)) x2982))
(assert (< 10000 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589)))
(assert (not (x635 (x1656 x1546 x2303 x860))))
(assert (= x1106 (and x2599 (not x846))))
(assert (x2690 x2819))
(assert (> (x437 x1546 x1239 x1052 x1912 x461 x2902) 10000))
(assert (= x843 (x1087 (x1656 x2347 x2982 x843))))
(assert (x85 x1494))
(assert (= (x1087 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)) x326))
(assert (x85 x1398))
(assert (= x1627 (and x275 x1887)))
(assert (x85 x1564))
(assert (= (or x2101 x231) x711))
(assert (=> (<= x421 10000) (= (x921 x421) 0)))
(assert (x85 x1671))
(assert (= x2362 (x1726 (x2629 x1245 x2362))))
(assert (x85 x1466))
(assert (< 10000 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)))
(assert (< (x2318 x615 x893 x401 x1332 x1991) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2621))
(assert (x85 x1975))
(assert (not (x635 (x2318 x1935 x3020 x2002 x2934 x2283))))
(assert (x85 x1775))
(assert (x85 x1459))
(assert (x85 x2495))
(assert (x85 x768))
(assert (=> (<= x418 10000) (= 0 (x921 x418))))
(assert (x85 x2471))
(assert (= (x2530 (x2926 x264 x409 x556 x1785)) x1785))
(assert (x85 x2068))
(assert (x85 x2490))
(assert (=> (<= x1918 10000) (= 0 (x921 x1918))))
(assert (= x2171 (and (not x743) x2588)))
(assert (=> (<= x1256 10000) (= (x921 x1256) 0)))
(assert (x85 x293))
(assert (x85 x3076))
(assert (x85 x1904))
(assert (x85 x2351))
(assert (= (and x2956 x2700) x2816))
(assert (x85 x916))
(assert (=> (>= 10000 x1142) (= 0 (x921 x1142))))
(assert (x85 x1628))
(assert (= x1138 (x281 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329))))
(assert (x85 x627))
(assert (x85 x2137))
(assert (x85 x147))
(assert (= x630 (x1725 (x2318 x630 x1905 x2112 x477 x3082))))
(assert (x85 x592))
(assert (x1842 x809))
(assert (=> (>= 10000 x148) (= (x921 x148) 0)))
(assert (x85 x1834))
(assert (x85 x2097))
(assert (= x630 (x1725 (x2926 x630 x1840 x1916 x2363))))
(assert (not (x635 (x2926 x2001 x1029 x2470 x2301))))
(assert (x85 x3012))
(assert (x85 x451))
(assert (=> (>= 10000 x826) (= 0 (x921 x826))))
(assert (x85 x304))
(assert (x85 x2815))
(assert (x85 x2909))
(assert (= x2385 (x1726 (x2318 x464 x2385 x1708 x2802 x2915))))
(assert (= (x2318 x296 x3021 x1248 x905 x79) (x921 (x2318 x296 x3021 x1248 x905 x79))))
(assert (=> (<= x2474 10000) (= (x921 x2474) 0)))
(assert (= x414 (x1087 (x2926 x1245 x1093 x414 x240))))
(assert (x85 x2688))
(assert (x85 x2208))
(assert (= x931 (x1725 (x2926 x931 x2676 x984 x2430))))
(assert (x85 x562))
(assert (x85 x2994))
(assert (x85 x1215))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639872))
(assert (= (x2629 x931 x3030) (x921 (x2629 x931 x3030))))
(assert (=> (>= 10000 x1846) (= (x921 x1846) 0)))
(assert (x85 x2606))
(assert (x85 x1267))
(assert (=> (<= x3029 10000) (= 0 (x921 x3029))))
(assert (< 10000 (x1656 x296 x2784 x1216)))
(assert (x85 x2989))
(assert (x85 x1826))
(assert (= (x437 x681 x2677 x950 x2232 x418 x15) (x921 (x437 x681 x2677 x950 x2232 x418 x15))))
(assert (x85 x953))
(assert (x85 x2077))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564820068))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x1687 x2636 x1818 x1494 x143 x1727)))
(assert (x85 x3007))
(assert (x85 x2281))
(assert (x85 x2455))
(assert (x85 x1967))
(assert (= x1089 (x2530 (x437 x931 x193 x2860 x1089 x2068 x1009))))
(assert (x85 x1083))
(assert (x85 x1468))
(assert (x85 x3070))
(assert (=> (>= 10000 x2734) (= 0 (x921 x2734))))
(assert (= x1679 (=> (= (< 0 x1742) x1260) (and (=> (and (= x2291 x838) (not x1260)) x2468) (=> x1260 x2881)))))
(assert (x85 x309))
(assert (= (x921 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)) (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)))
(assert (x85 x2534))
(assert (= (x921 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)) (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)))
(assert (x85 x2269))
(assert (x85 x31))
(assert (x85 x3049))
(assert (x85 x863))
(assert (= x78 (x1087 (x2926 x1546 x1971 x78 x2333))))
(assert (x85 x641))
(assert (not (x635 (x2629 x1139 x2465))))
(assert (=> (>= 10000 x2347) (= (x921 x2347) 0)))
(assert (= (=> (and (= (* x865 32) x894) (= x196 x1194) (= (* 64 x865) x857) x2726 (= (< 0 x2579) x1296) (or (= x857 0) (= x857 64)) (= x2726 (<= x1488 (x411 x579))) (<= 1 x94) (= x2579 (x90 x906)) (= x1730 x164) (>= 4294967295 x938) (<= x865 1) (= (x2449 x1090) x94) (= x2199 (x1033 (- x1194 x838))) (= (x3071 x579) x1488) (<= 1 x2851) (= (x295 (+ x857 x2697)) x196) (= (x3071 x1090) x2702) (= x1730 (x295 (+ x312 x894))) (= x654 (= x2702 (x411 x1090))) x654 (= x3026 x865) (or (= 0 x894) (= x894 32))) (and (=> (and x1296 (and (and (= x2253 (x90 x906)) (<= x501 2) (= (= x1863 0) x1022) (= x3077 (x295 (+ 32 x906))) (<= 1 x2253) (= x501 (x90 x2323)) (= (x90 x3077) x2323) (= x1863 (ite (= 2 x501) 1 0))) (or (and (not x1022) (and (= (x295 (+ x838 4)) x1269) (= (x295 (+ 64 x2129)) x389) (= x895 (x90 x906)) (= (x90 x3077) x2936) (= x288 (x90 x2008)) (= (x1448 1461501637330902918203684832716283019655932542975 x1737) x2560) (= x2454 (x411 x579)) (<= 1 x895) (= (>= (x2917 x579) x2454) x1297) (= x716 (x295 (+ x1269 32))) (>= x236 1) (= x2206 (x2449 x2990)) (= x1133 (x90 x906)) (<= x1582 4294967295) (= x2129 (x90 x3077)) x1297 (<= 1 x1133) (= (x295 (+ x2936 96)) x2008) (<= 1 x2206) (= (= x563 (x2917 x2990)) x1346) x1346 (= x1737 (x90 x389)) (= (x411 x2990) x563))) x1022))) x1342) (=> (not x1296) x1321))) x514))
(assert (not (x635 (x437 x464 x1717 x363 x2979 x50 x372))))
(assert (= x2025 (x2530 (x437 x264 x907 x2685 x2025 x1326 x1014))))
(assert (< (x1656 x1935 x2589 x2425) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x635 (x2318 x296 x3021 x1248 x905 x79))))
(assert (= x1685 (x2056 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413))))
(assert (x85 x1585))
(assert (= (and (not x1598) x2640) x2309))
(assert (= x1259 (and x1159 x1476)))
(assert (=> (<= x554 10000) (= (x921 x554) 0)))
(assert (x85 x1906))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564820100))
(assert (x85 x373))
(assert (x85 x28))
(assert (=> (<= x193 10000) (= (x921 x193) 0)))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639902)))
(assert (x85 x1013))
(assert (= x2422 (x281 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (= x591 (and (not x2656) x1915)))
(assert (= x2450 (x281 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (=> (>= 10000 x2677) (= 0 (x921 x2677))))
(assert (= x1760 (x1726 (x1656 64 x1760 1))))
(assert (x85 x3031))
(assert (=> (<= x2740 10000) (= (x921 x2740) 0)))
(assert (x85 x773))
(assert (x85 x2990))
(assert (= 0 (x921 37664329658542632380461339884011895550187483938955784695590509376205521682432)))
(assert (x85 x610))
(assert (x85 x545))
(assert (= (and x3051 x254) x2841))
(assert (= x1206 (and x2250 x258)))
(assert (x85 x797))
(assert (= x2165 (and x2588 x743)))
(assert (> (x437 x2347 x2061 x2216 x1235 x357 x1070) 10000))
(assert (= x2431 (=> (and (and (= false x1195) (= x2878 36) (= x824 false) (= x212 false) (= x2681 false)) (and (and (= x933 false) (= x1651 (x1524 x1715)) (= x123 (x2240 96)) (= x2127 x2849) (= x269 (x1429 x2269)) (<= x3145 4294967295) (= x238 x269) (<= x1419 127) (= false x1191) (<= x1419 127) (= x197 x1746) (= x509 false) (= x123 x2127) (= 0 x875) (= (= x2985 x2501) x1886) (= false x2707) (= (x2449 x2269) x3156) (<= 128 x3145) (= x1919 false) (= false x2334) (= x1651 x2985) (>= x3156 1) (= (+ x2849 x525) x2501) (= x3031 (x812 x197)) (= x1715 (x1656 64 x2989 1)) (= 1889567281 x3119)) (and (= x2989 x488) (= false x2442)))) x1886)))
(assert (x85 x2932))
(assert (= x159 (and x682 x1428)))
(assert (x85 x2212))
(assert (= x807 (=> (and (= (x295 (+ x116 32)) x2222) (= x909 (> x1891 0)) (= x1891 (x923 x321)) (= x205 (x923 x855)) (= (x295 (+ 32 x321)) x2289)) (and (=> (and x909 (and (= (x295 (+ x2222 32)) x2986) (= (x295 (+ 32 x2289)) x1602) (= (> x1891 1) x2549) (= x2234 (x923 x2289)))) (and (=> (and (and (= (x1273 x1602) x2903) (= (x295 (+ x1602 32)) x2046) (= (< 2 x1891) x988) (= (x295 (+ 32 x2986)) x2041)) x2549) (and (=> (and (and (= x2005 2) (= x2041 x1620) (= x2046 x2368)) (not x988)) x2207) (=> (and (and (= x3129 (x295 (+ x2046 32))) (= (x1838 x2046) x2901) (= (x295 (+ 32 x2041)) x2857) (= (< 3 x1891) x2277)) x988) (and (=> (and (and (= 3 x2005) (= x1620 x2857) (= x3129 x2368)) (not x2277)) x2207) (=> x2277 x3091))))) (=> (and (not x2549) (and (= x2368 x1602) (= x1620 x2986) (= x2005 1))) x2207))) (=> (and (and (= 0 x2005) (= x2222 x1620) (= x2368 x2289)) (not x909)) x2207)))))
(assert (x85 x439))
(assert (= x465 (or x1815 x652)))
(assert (= (=> (= x3033 x2104) x1030) x2288))
(assert (x85 x2992))
(assert (=> (<= x1090 10000) (= 0 (x921 x1090))))
(assert (=> (>= 10000 x813) (= (x921 x813) 0)))
(assert (= x134 (x2530 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (=> (<= x1546 10000) (= (x921 x1546) 0)))
(assert (=> (<= x2795 10000) (= 0 (x921 x2795))))
(assert (x85 x619))
(assert (= x2643 (x2056 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(assert (x85 x2074))
(assert (= x1935 (x1725 (x2629 x1935 x1071))))
(assert (= x209 (and x1098 (not x336))))
(assert (= (x2926 x296 x693 x924 x1279) (x921 (x2926 x296 x693 x924 x1279))))
(assert (x85 x1069))
(assert (= (x2056 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589)) x1437))
(assert (x85 x1654))
(assert (x85 x1095))
(assert (=> (<= x2980 10000) (= 0 (x921 x2980))))
(assert (= (and x695 x1351) x2686))
(assert (x85 x3080))
(assert (= x2954 (x2530 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (= x1048 (and x1393 x618)))
(assert (x85 x2604))
(assert (= x1809 (x1087 (x437 x615 x1616 x1809 x2020 x2066 x263))))
(assert (=> (>= 10000 x1335) (= 0 (x921 x1335))))
(assert (x85 x1065))
(assert (x85 x1841))
(assert (x85 x1263))
(assert (=> (<= x1977 10000) (= (x921 x1977) 0)))
(assert (=> (<= x942 10000) (= 0 (x921 x942))))
(assert (= x965 (x1726 (x1656 x1139 x965 x1517))))
(assert (x85 x678))
(assert (x85 x1226))
(assert (x85 x3083))
(assert (= x2790 (x1311 (x437 x630 x1901 x916 x3131 x2790 x1397))))
(assert (x85 x1332))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639646))
(assert (=> (<= x3082 10000) (= 0 (x921 x3082))))
(assert (< 10000 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254)))
(assert (x85 x1876))
(assert (= x2263 (or x2387 x1995)))
(assert (> (x2926 x615 x2963 x2980 x1650) 10000))
(assert (x85 x838))
(assert (x2690 x1712))
(assert (= (and x2605 (not x227)) x244))
(assert (x85 x1470))
(assert (x85 x2740))
(assert (x85 x716))
(assert (= x452 (x1726 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (x85 x1686))
(assert (x85 x139))
(assert (x85 x326))
(assert (= (x921 (x2318 x1139 x1931 x3055 x2971 x2451)) (x2318 x1139 x1931 x3055 x2971 x2451)))
(assert (=> (<= x326 10000) (= (x921 x326) 0)))
(assert (not (x635 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (not (x635 (x1656 x464 x1950 x517))))
(assert (x85 x2184))
(assert (x1842 x3096))
(assert (= (and x1567 x672) x2721))
(assert (= (and x2578 (not x2607)) x609))
(assert (x85 x1912))
(assert (= (x921 (x2629 x296 x1654)) (x2629 x296 x1654)))
(assert (x85 x2972))
(assert (x85 x787))
(assert (= (=> (= x2950 (= x1121 0)) (and (=> (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1125)) (<= x1125 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1125)) (= (x295 (+ 32 x1125)) x2055) (= (x1262 x906) x450) (= x856 (< 0 x450)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1125) (> x2055 x1125) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1125)) (<= x1125 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (not x2950)) (and (=> (and (not x856) (= x2335 x2055)) x2623) (=> (and (and (or (and (and (= (ite (= 1 x287) 1 0) x2457) (>= 2 x287) (= x287 (x1262 x2580)) (= x2457 x1078)) (not x2507)) (and x2507 (= x2054 x1078))) (and (= (x1262 x906) x2720) (>= 2 x1129) (= (> x2054 0) x2507) (= (x295 (+ x906 32)) x665) (= x2054 (ite (= 0 x1129) 1 0)) (<= 1 x2720) (= x1129 (x1262 x2580)) (= (x1262 x665) x2580))) x856) x271))) (=> x2950 x2431))) x2078))
(assert (= x1228 (x1726 (x1656 x2001 x1228 x1936))))
(assert (= (and (not x422) x694) x449))
(assert (x85 x808))
(assert (x85 x516))
(assert (= (x1087 (x2318 x2347 x1446 x2570 x2354 x2281)) x2570))
(assert (x85 x1653))
(assert (x85 x1698))
(assert (x85 x3034))
(assert (x85 x290))
(assert (= (x921 18446744073709551518) 0))
(assert (=> (<= x888 10000) (= 0 (x921 x888))))
(assert (= x1858 (or x2612 x2360)))
(assert (=> (<= x381 10000) (= (x921 x381) 0)))
(assert (x85 x1519))
(assert (x85 x1823))
(assert (x85 x1117))
(assert (= (x1725 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)) x1139))
(assert (< 10000 (x2629 x681 x942)))
(assert (= (and (not x1495) x1292) x1815))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639776))
(assert (= (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72) (x921 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (= x2691 (and (not x1196) x711)))
(assert (= x2845 (and x605 (not x2540))))
(assert (x85 x529))
(assert (=> (>= 10000 x1494) (= 0 (x921 x1494))))
(assert (=> (<= x916 10000) (= 0 (x921 x916))))
(assert (x85 x528))
(assert (not (x635 (x2318 x681 x3149 x2914 x1985 x3109))))
(assert (=> (<= x763 10000) (= (x921 x763) 0)))
(assert (=> (>= 10000 x2963) (= 0 (x921 x2963))))
(assert (x85 x1632))
(assert (= x517 (x1087 (x1656 x464 x1950 x517))))
(assert (< 10000 (x2629 x1139 x2465)))
(assert (x85 x1785))
(assert (x85 x598))
(assert (= (=> (and (= (x1033 (- x2223 x3123)) x1747) (= x2673 (<= x931 224)) (<= x3123 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x2223 x3123) (= x1763 x1091) (<= 1 x899) (= (* 32 x172) x784) (= (x295 (+ x1493 x784)) x1763) (= x1944 x172) (= (* x172 32) x954) (<= x172 4) (>= x2223 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x3123) (= (x295 (+ x2512 x954)) x899) (= (x2541 x3123) x931) (= (x295 (+ x3123 32)) x1544) (= x1738 (x1033 (- x1747 32))) (= x899 x2223) (<= x3123 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> (and (= (x2541 x1544) x3030) (= (x295 (+ 160 x1544)) x1962) (= (x2541 x1544) x2676) (= x1141 (x2629 x931 x3030)) (= (x295 (+ 32 x1544)) x2097) (= x3079 (x295 (+ x2395 32))) (= (x437 x931 x193 x2860 x1089 x2068 x1009) x1927) (= (x295 (+ 32 x1544)) x1813) (= x1849 (x2541 x1544)) (= x2795 (x2541 x595)) (= x595 (x295 (+ x1544 128))) (= (x2541 x1180) x2430) (= (x295 (+ x2223 32)) x1001) (= x2687 (x2541 x3037)) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x2223) (>= x2223 1)) (and (<= x2223 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x2223))) (= x2343 (x2541 x2188)) (= x2836 (x2541 x1544)) (= x2188 (x295 (+ x1544 32))) (= (x2541 x522) x1089) (= (x295 (+ x1544 64)) x2973) (= x8 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643)) (= (ite (= 0 x931) x1480 (ite (>= 32 x931) x1141 (ite (>= 64 x931) x1583 (ite (>= 96 x931) x3112 (ite (<= x931 128) x814 (ite (>= 160 x931) x1927 (ite (>= 192 x931) x8 (ite (<= x931 224) x2192 x2524)))))))) x2574) (= (x295 (+ x1544 32)) x332) (= (x2541 x1037) x1009) (= (x2541 x1813) x984) (= (x295 (+ x1544 64)) x522) (= x2181 (x295 (+ 96 x1544))) (= (x2541 x1190) x644) (= (x2541 x1962) x2643) (= (x295 (+ x1544 192)) x1286) (= x471 (x2541 x1472)) (> x2796 x2223) (= x1180 (x295 (+ 64 x1544))) (= (x2541 x1286) x72) (= x814 (x2318 x931 x1231 x2343 x1968 x789)) (= (x2541 x1544) x1231) (= x2157 (x295 (+ 32 x1544))) (= (x2541 x2973) x1968) (= x3112 (x2926 x931 x2676 x984 x2430)) (= x3098 (x295 (+ x1544 96))) (= (x1947 x2223) x1935) (= (x295 (+ 160 x1544)) x1190) (= (x295 (+ 128 x1544)) x1037) (= (x2541 x1836) x2068) (= x1444 (x2541 x189)) (= x1583 (x1656 x931 x1849 x3103)) (= x2860 (x2541 x2097)) (= (x295 (+ 32 x2223)) x2616) (= x1998 (x2541 x2157)) (= x1472 (x295 (+ x1544 64))) (= x2796 (x295 (+ x2616 96))) (= x2024 (x2541 x1544)) (= x789 (x2541 x1853)) (= (x1033 (- x2796 x2223)) x2490) (= x1115 (x1033 (- x2490 32))) (= (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72) x2192) (= (x295 (+ 96 x1544)) x1853) (= x2467 (<= x1935 224)) (= (x295 (+ 64 x1544)) x189) (= x1745 (x2541 x2888)) (= (x295 (+ x1544 32)) x3037) (= (x2541 x3098) x1906) (= x2888 (x295 (+ 128 x1544))) (= (x2541 x332) x3103) (= x1836 (x295 (+ 96 x1544))) (= (x1612 0) x1480) (= x2466 (x2541 x2181)) (= x193 (x2541 x1544)) (= (x295 (+ x2616 32)) x2395)) (and x2467 (=> (and (= (x295 (+ 32 x1001)) x5) (= x2210 (x295 (+ 32 x1001))) (= x1071 (x1947 x1001)) (= x2425 (x1947 x3158)) (= x1570 (x295 (+ x1001 96))) (< x2796 x476) (= (x295 (+ x1001 128)) x201) (= (x295 (+ 64 x1001)) x2556) (= x2283 (x1947 x641)) (= (x1947 x705) x1520) (= x1452 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) (= x2320 (x2926 x1935 x2137 x3153 x2)) (= (x1947 256) x2211) (or (and (>= x2796 129) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639743 x2796)) (and (<= 2 x2796) (>= 126 x2796)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2796) (>= x2796 115792089237316195423570985008687907853269984665640564039457584007913129639747))) (= (x437 x1935 x2935 x2372 x2237 x162 x1865) x137) (= x1810 (x295 (+ x1001 192))) (= (x1947 x201) x2823) (= x2372 (x1947 x2210)) (= (x1947 x896) x2246) (= (x1656 x1935 x2589 x2425) x2053) (= x2160 (x1947 x2556)) (= x2589 (x1947 x1001)) (= (x295 (+ 96 x1001)) x1438) (= (x295 (+ 160 x1001)) x1460) (= x2880 (x295 (+ 32 x1001))) (= (x1947 224) x487) (= (<= x1546 224) x1959) (= (x1947 x366) x1865) (= x641 (x295 (+ 96 x1001))) (= (x295 (+ x1001 64)) x1069) (= (x1448 1461501637330902918203684832716283019655932542975 x2211) x3102) (= (x295 (+ x498 32)) x2463) (= x2137 (x1947 x1001)) (= (x295 (+ 32 x2796)) x498) (= x2002 (x1947 x2880)) (= (x295 (+ 32 x1668)) x181) (= x3153 (x1947 x5)) (= x1107 (x295 (+ 64 x1001))) (= (ite (= 0 x1935) x2440 (ite (<= x1935 32) x2499 (ite (>= 64 x1935) x2053 (ite (>= 96 x1935) x2320 (ite (<= x1935 128) x3005 (ite (<= x1935 160) x137 (ite (>= 192 x1935) x1837 (ite (>= 224 x1935) x1452 x771)))))))) x581) (= (x1947 x2423) x1187) (= x3158 (x295 (+ x1001 32))) (= (x295 (+ x2796 32)) x2215) (= (x1612 0) x2440) (= (x1947 x1460) x200) (= x241 (x1947 x1001)) (= (x1947 x688) x2) (= (x1947 x2647) x2701) (= (x295 (+ 32 x1130)) x1668) (= x3080 (x1947 x1001)) (= x2237 (x1947 x1069)) (= (x295 (+ 128 x1001)) x705) (= x2080 (x1947 x481)) (= (x1033 (- x1522 32)) x3083) (= x1522 (x1033 (- x476 x2796))) (= (x1947 x2638) x2205) (= (x2747 x2796) x1546) (= (x1947 x1001) x2935) (= x2423 (x295 (+ 32 x1001))) (= x885 (x1947 x1810)) (= (x295 (+ 64 x1001)) x2638) (= (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200) x1837) (= x3020 (x1947 x1001)) (= x162 (x1947 x1570)) (= (x295 (+ x1001 160)) x896) (= x2934 (x1947 x1107)) (= (x295 (+ x1001 96)) x481) (= x688 (x295 (+ x1001 64))) (= x2647 (x295 (+ x1001 32))) (= (x1947 x1438) x1659) (= x1130 (x295 (+ x2463 32))) (= (x295 (+ 160 x498)) x476) (= (x2629 x1935 x1071) x2499) (= x366 (x295 (+ 128 x1001))) (= (x2318 x1935 x3020 x2002 x2934 x2283) x3005)) (and (=> (and (= (x2747 x2215) x1239) (= (x2747 x928) x860) (= (x295 (+ 32 x476)) x2336) (= x2262 (x1656 x1546 x2303 x860)) (= (x2747 x2215) x1971) (= x2448 (x295 (+ 192 x2215))) (= (x2016 x2336) x2040) (= (x295 (+ x2215 32)) x1134) (= (x2016 x476) x3059) (= (x295 (+ x2215 128)) x416) (= (x2747 x2215) x1640) (= x2886 (x2318 x1546 x1640 x648 x2406 x222)) (= x1412 (x295 (+ x2215 64))) (= x648 (x2747 x3047)) (= (x2747 x2899) x1329) (= x1156 (x2926 66 x3059 x2040 x677)) (= (x2747 x1714) x1918) (= (x295 (+ x2215 32)) x2183) (= (x295 (+ 160 x2215)) x571) (= x2596 (x295 (+ 96 x2215))) (= x2902 (x2747 x762)) (= x744 (x2747 x1134)) (= x1733 (x2747 x2215)) (= x1097 (x295 (+ 96 x2215))) (= (x295 (+ x2215 64)) x251) (= x2778 (x2747 x2215)) (= x3047 (x295 (+ 32 x2215))) (= x376 (x295 (+ 128 x2215))) (= (x2747 x416) x1138) (= (x295 (+ x2215 64)) x1511) (= x3138 (x2926 x1546 x1971 x78 x2333)) (= x1714 (x295 (+ x2215 64))) (= x230 (x437 x1546 x1239 x1052 x1912 x461 x2902)) (= x375 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) (= x928 (x295 (+ x2215 32))) (= x2899 (x295 (+ x2215 160))) (= x1064 (x2747 x2448)) (= (x2747 x1577) x1052) (= x545 (x295 (+ 64 x2215))) (= x748 (x2629 x1546 x1733)) (= x2875 (x2016 x2476)) (= (x2747 x150) x483) (= x2243 (x2747 x571)) (= (x295 (+ x2215 96)) x1263) (= x461 (x2747 x1263)) (= (x2747 x2183) x779) (= x762 (x295 (+ 128 x2215))) (= x2175 (x2747 x376)) (= x150 (x295 (+ x2215 96))) (= x2864 (ite (= 0 x1546) x475 (ite (<= x1546 32) x748 (ite (<= x1546 64) x2262 (ite (<= x1546 96) x3138 (ite (<= x1546 128) x2886 (ite (<= x1546 160) x230 (ite (<= x1546 192) x375 (ite (<= x1546 224) x997 x2100))))))))) (= (= 65 x2875) x2984) (= x2303 (x2747 x2215)) (= (x2747 x1511) x2333) (= x2822 (x2747 x2215)) (= (x2747 x1412) x974) (= x1388 (x295 (+ 64 x476))) (= (x2016 x1388) x677) (= x2406 (x2747 x251)) (= x475 (x1612 0)) (= (x2747 x1097) x222) (= x983 (x295 (+ x2799 32))) (= (x295 (+ 2 x476)) x2799) (= x78 (x2747 x2324)) (= x1912 (x2747 x545)) (= (x295 (+ x2215 32)) x2324) (= (x2747 x2596) x1423) (= (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064) x997) (= (x295 (+ 32 x2215)) x1577)) (and (=> (and x2984 (and (and (= (x2016 x2154) x273) (= (+ 32 x1101) x2154) (= x1101 (+ 32 x2400)) (= x1507 (x2016 x1101)) (= (x2016 x2400) x2032) (= (> x1507 57896044618658097711785492504343953926418782139537452191302581570759080747168) x1646) (= x1164 (x675 x273 248))) (or (and (not x1646) (and (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x476)) (= (x295 (+ 32 x2996)) x283) (= x1449 (x620 x194 x3085 x2213 x3016)) (> x2604 x476) (= (x295 (+ x2604 32)) x132) (= x1712 (x2649 x3072)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x476)) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x663 x2604) x194) (= (x295 (+ x132 32)) x2996) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x476)) (= 128 x512) (= (= x1505 0) x1430) (= x2604 (x295 (+ 32 x476))) (= (x1448 1461501637330902918203684832716283019655932542975 x1712) x1505) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2213 (x663 (x295 (+ x2604 64)))) (= x3016 (x663 (x295 (+ 96 x2604)))) (<= x1449 1461501637330902918203684832716283019655932542975) (= x3085 (x663 (x295 (+ 32 x2604)))) (<= x476 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1033 (- x2604 32)) x1675) (= (x1033 (- x2604 32)) x3072)) (or (and (not x1430) (and (= x2397 x2604) (= x1712 x408) (= 0 x1539) (= 0 x2486))) (and (and (= x408 0) (= x2486 0) (= 1 x1539) (= x2604 x2397)) x1430)))) (and (and (= x2397 x476) (= x1539 3) (= x408 0) (= x2486 x1507)) x1646)))) x1529) (=> (and (not x2984) (and (= x822 2) (= x2867 x476) (= (x2016 x2476) x2298) (= x2776 0) (= x2298 x2179))) x2833))) x1959)))) x2673)) x3060))
(assert (x85 x770))
(assert (x85 x2333))
(assert (= x1342 (=> (and (= x333 (x490 x906)) (= (not (> x333 1)) x2959)) (and x1321 x2959))))
(assert (=> (<= x1416 10000) (= 0 (x921 x1416))))
(assert (= (x2312 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) x885))
(assert (x85 x1359))
(assert (x635 2065879269284))
(assert (not (x635 (x1656 x264 x1370 x356))))
(assert (x85 x2513))
(assert (x85 x2090))
(assert (x85 x2087))
(assert (x1842 x1161))
(assert (x85 x2536))
(assert (=> (>= 10000 x2915) (= (x921 x2915) 0)))
(assert (= x2441 (x1311 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (= x1931 (x1726 (x2318 x1139 x1931 x3055 x2971 x2451))))
(assert (x85 x150))
(assert (x85 x1552))
(assert (= (and x2951 (not x2933)) x114))
(assert (=> (>= 10000 x1889) (= 0 (x921 x1889))))
(assert (x85 x316))
(assert (= x1872 (x1087 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (x85 x197))
(assert (= (x1725 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)) x1935))
(assert (x85 x2454))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639747))
(assert (x85 x1164))
(assert (=> (>= 10000 x362) (= (x921 x362) 0)))
(assert (x85 x564))
(assert (x85 x1435))
(assert (= x2527 (and x1236 x2658)))
(assert (x85 x1056))
(assert (x85 x2860))
(assert (x85 x766))
(assert (= x2918 (x1087 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (x85 x712))
(assert (= x2925 (and (not x909) x1719)))
(assert (= x3081 (and (not x2417) x3127)))
(assert (x85 x464))
(assert (not (x635 (x437 x931 x193 x2860 x1089 x2068 x1009))))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639776) 0))
(assert (= (x1726 (x2926 x464 x1921 x2938 x2495)) x1921))
(assert (x85 x1142))
(assert (= x1393 (or x285 x1867)))
(assert (x85 x1114))
(assert (x85 x1714))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639841))
(assert (x85 x357))
(assert (x85 x540))
(assert (x85 x1190))
(assert (x85 x1168))
(assert (< (x1656 x1546 x2303 x860) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1063))
(assert (x85 x1784))
(assert (x85 x1652))
(assert (x85 x2223))
(assert (x2690 x2894))
(assert (x85 x2929))
(assert (x85 x2500))
(assert (= (x921 (x1612 0)) (x1612 0)))
(assert (x85 x570))
(assert (not (x635 (x2926 x1546 x1971 x78 x2333))))
(assert (x85 x457))
(assert (x85 x633))
(assert (= x2708 (x281 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (x85 x2335))
(assert (=> (<= x1006 10000) (= (x921 x1006) 0)))
(assert (= (x921 (x2629 x2001 x1556)) (x2629 x2001 x1556)))
(assert (= (=> (and (or (and x2417 (and (= (>= (x404 x579) x1162) x1274) (= (= (x404 x457) x1467) x2383) x1274 x2383 (= (x3095 x579) x1162) (= (x3095 x457) x1467) (<= x3070 4294967295))) (not x2417)) (and (= (x295 (+ x1648 31)) x2819) (<= 1 x16) (= (x295 (+ x596 x761)) x1306) (= x16 (x2449 x457)) (= x2417 (> x2176 0)) (= (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2819) x761) (= x2788 (x1033 (- x1306 x1082))) (= x3075 (x295 (+ x596 x1648))))) x460) x2853))
(assert (x85 x1818))
(assert (x85 x563))
(assert (= x2565 (x2530 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771))))
(assert (=> (>= 10000 x1788) (= (x921 x1788) 0)))
(assert (= x378 (x2530 (x2926 x2347 x2471 x1793 x378))))
(assert (x85 x489))
(assert (x85 x1382))
(assert (= (x921 (x2926 66 x3059 x2040 x677)) (x2926 66 x3059 x2040 x677)))
(assert (< 10000 (x2629 x464 x834)))
(assert (x85 x63))
(assert (x85 x577))
(assert (= (or x1396 x68) x1972))
(assert (=> (>= 10000 x2636) (= (x921 x2636) 0)))
(assert (x85 x3085))
(assert (x85 x1317))
(assert (x85 x1607))
(assert (=> (>= 10000 x1064) (= 0 (x921 x1064))))
(assert (< (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2901))
(assert (x2690 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639809) 0))
(assert (x85 x1040))
(assert (x85 x2880))
(assert (x85 x3159))
(assert (x85 x78))
(assert (x85 x1865))
(assert (x85 x1438))
(assert (= (and x1430 x1592) x2627))
(assert (x85 x235))
(assert (x85 x798))
(assert (=> (>= 10000 x1014) (= 0 (x921 x1014))))
(assert (x85 x1936))
(assert (x85 x905))
(assert (=> (<= x2402 10000) (= 0 (x921 x2402))))
(assert (x85 x1756))
(assert (x85 x2326))
(assert (= (x2312 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72)) x72))
(assert (x1842 x1173))
(assert (x85 x2438))
(assert (=> (<= x15 10000) (= (x921 x15) 0)))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x85 x802))
(assert (x85 x3044))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639618))
(assert (x85 x418))
(assert (x85 x2368))
(assert (=> (<= x2246 10000) (= 0 (x921 x2246))))
(assert (x85 x1706))
(assert (= 0 (x921 18446746139588821027)))
(assert (x85 x1933))
(assert (=> (>= 10000 x912) (= 0 (x921 x912))))
(assert (=> (>= 10000 x1025) (= (x921 x1025) 0)))
(assert (=> (<= x2603 10000) (= (x921 x2603) 0)))
(assert (not (x635 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639777)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x1546 x1239 x1052 x1912 x461 x2902)))
(assert (x85 x1301))
(assert (=> (<= x200 10000) (= (x921 x200) 0)))
(assert (x85 x1202))
(assert (= x1114 (x281 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302))))
(assert (x85 x893))
(assert (x85 x1514))
(assert (x85 x511))
(assert (x85 x853))
(assert (= (x1725 (x1656 x615 x1112 x3064)) x615))
(assert (x85 x2819))
(assert (x85 x3062))
(assert (= (x921 18446744073709551615) 0))
(assert (x85 x2811))
(assert (x85 x543))
(assert (x85 x2412))
(assert (not (x635 (x2629 x2347 x1454))))
(assert (= (or x402 x1629) x673))
(assert (x85 x2996))
(assert (= x1976 (=> (and (= 1 x1532) (= 0 x128) (= 1 x305)) x1543)))
(assert (= (x1311 (x2318 x2347 x1446 x2570 x2354 x2281)) x2281))
(assert (> (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x1139 x1846 x136 x918 x1672 x3063)))
(assert (x85 x1116))
(assert (= (x1087 (x437 x1546 x1239 x1052 x1912 x461 x2902)) x1052))
(assert (x85 x3004))
(assert (x85 x899))
(assert (x2690 x2688))
(assert (x85 x3152))
(assert (= x2516 (and x2277 x2946)))
(assert (x85 x1025))
(assert (x85 x1409))
(assert (x85 x1563))
(assert (< 10000 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)))
(assert (=> (<= x2850 10000) (= (x921 x2850) 0)))
(assert (= (x1725 (x2926 x681 x1538 x2820 x2408)) x681))
(assert (< 10000 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)))
(assert (x85 x186))
(assert (x85 x1017))
(assert (x85 x2587))
(assert (x85 x210))
(assert (x85 x2701))
(assert (= x546 (=> (= x1125 x1902) x3001)))
(assert (x85 x2278))
(assert (= x3136 (=> (and (= (x295 (+ x639 32)) x1493) (= (x295 (+ x2079 32)) x2696) (= (x1798 x2696) x433) (= x2719 (< 0 x172)) (= x2512 (x295 (+ x3123 32))) (= x172 (x1798 x639))) (and (=> (and x2719 (and (= (< 1 x172) x2933) (= x1631 (x1798 x1493)) (= (x295 (+ 32 x1493)) x2797) (= x1502 (x295 (+ 32 x2512))))) (and (=> (and (and (= 1 x1944) (= x1502 x2223) (= x2797 x1091)) (not x2933)) x3060) (=> (and (and (= x566 (x1521 x2797)) (= (x295 (+ x2797 32)) x847) (= (> x172 2) x11) (= x1669 (x295 (+ 32 x1502)))) x2933) (and (=> (and (and (= x2067 (> x172 3)) (= x495 (x295 (+ 32 x1669))) (= x2144 (x295 (+ x847 32))) (= (x952 x847) x710)) x11) (and (=> x2067 x77) (=> (and (and (= 3 x1944) (= x2144 x1091) (= x495 x2223)) (not x2067)) x3060))) (=> (and (and (= x847 x1091) (= x2223 x1669) (= 2 x1944)) (not x11)) x3060))))) (=> (and (not x2719) (and (= x2223 x2512) (= 0 x1944) (= x1091 x1493))) x3060)))))
(assert (not (x635 (x2926 x681 x1538 x2820 x2408))))
(assert (x85 x2272))
(assert (= x1852 (x2530 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903))))
(assert (x85 x384))
(assert (= (x1087 (x1656 64 x1760 1)) 1))
(assert (= x2133 (x1311 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x85 x2235))
(assert (x85 x1401))
(assert (x85 x521))
(assert (x85 x2439))
(assert (x1842 x10))
(assert (= (or x1781 x1873) x646))
(assert (= (x921 (x2629 x681 x942)) (x2629 x681 x942)))
(assert (x85 x553))
(assert (< (x2926 66 x3059 x2040 x677) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1087 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365)) x1895))
(assert (= x2190 (and x445 x2804)))
(assert (x85 x142))
(assert (x85 x2778))
(assert (x85 x947))
(assert (x1842 x1587))
(assert (x85 x2973))
(assert (= (and x2209 x331) x2578))
(assert (= x1687 (x1725 (x2926 x1687 x507 x1289 x226))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639807)))
(assert (x85 x548))
(assert (x85 x2388))
(assert (=> (>= 10000 x2112) (= 0 (x921 x2112))))
(assert (x85 x2768))
(assert (x85 x89))
(assert (x85 x352))
(assert (x85 x1888))
(assert (x85 x2914))
(assert (= (x1725 (x1656 x2347 x2982 x843)) x2347))
(assert (> (x437 x264 x907 x2685 x2025 x1326 x1014) 10000))
(assert (x85 x1971))
(assert (x85 x2436))
(assert (x85 x95))
(assert (= x2001 (x1725 (x2318 x2001 x2374 x861 x1786 x3029))))
(assert (x85 x2313))
(assert (x85 x2596))
(assert (= x1932 (and (not x406) x177)))
(assert (< 10000 (x1656 x1687 x2762 x184)))
(assert (< (x1656 x681 x2124 x2754) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1364))
(assert (x85 x2813))
(assert (x85 x2425))
(assert (x635 18446746139588821059))
(assert (x85 x919))
(assert (x85 x2282))
(assert (x85 x2279))
(assert (x85 x1066))
(assert (x85 x1345))
(assert (x85 x3130))
(assert (=> (<= x3094 10000) (= (x921 x3094) 0)))
(assert (x85 x2743))
(assert (x85 x1553))
(assert (x85 x2782))
(assert (x85 x1733))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639905)))
(assert (= (x921 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)) (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)))
(assert (x85 x1229))
(assert (=> (<= x2685 10000) (= 0 (x921 x2685))))
(assert (= x2111 (or x2709 x1765)))
(assert (x85 x2381))
(assert (=> (<= x1070 10000) (= 0 (x921 x1070))))
(assert (=> (>= 10000 x2858) (= 0 (x921 x2858))))
(assert (x85 x867))
(assert (= x1245 (x1725 (x2318 x1245 x1006 x2011 x1341 x1825))))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639810))
(assert (=> (>= 10000 x2133) (= 0 (x921 x2133))))
(assert (x85 x1771))
(assert (x85 x2788))
(assert (= x2995 (x2530 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (x85 x3158))
(assert (= (x2530 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)) x1754))
(assert (< 10000 (x2629 x2001 x1556)))
(assert (not (x635 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064))))
(assert (= (or x2883 x1276) x170))
(assert (=> (<= x2235 10000) (= 0 (x921 x2235))))
(assert (= (x1725 (x437 x630 x1901 x916 x3131 x2790 x1397)) x630))
(assert (x85 x842))
(assert (= (x2530 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365)) x2319))
(assert (= (or x1805 x1175) x2640))
(assert (= (x2945 x615 x1094 x229 x134 x2348 x827 x660) (x921 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (< 10000 (x437 x931 x193 x2860 x1089 x2068 x1009)))
(assert (x85 x1869))
(assert (= (x921 (x2318 x615 x893 x401 x1332 x1991)) (x2318 x615 x893 x401 x1332 x1991)))
(assert (x85 x1599))
(assert (= (x1087 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) x381))
(assert (x85 x1611))
(assert (= (x1311 (x437 x1139 x1846 x136 x918 x1672 x3063)) x1672))
(assert (= x1358 (and (not x331) x2209)))
(assert (x85 x707))
(assert (= x2243 (x2056 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064))))
(assert (=> (>= 10000 x2451) (= (x921 x2451) 0)))
(assert (x85 x1453))
(assert (= (and x403 x2107) x541))
(assert (x85 x111))
(assert (= (x2530 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)) x974))
(assert (x85 x1216))
(assert (x85 x1538))
(assert (x85 x497))
(assert (x85 x2786))
(assert (x85 x1651))
(assert (x2690 x1161))
(assert (x85 x2414))
(assert (= x964 (or x1469 x496 x114 x1551 x1940)))
(assert (= (=> (and (= x2813 (x1711 x530)) (= (x295 (+ 32 x2680)) x543) (<= x3093 1) (= (x1711 x746) x669) (= x947 (x295 (+ x497 32))) (= (x295 (+ x497 32)) x991) (= x314 (x295 (+ 32 x3150))) (= x428 (x295 (+ x1083 32))) (= x746 (x1711 x2611)) (= x3128 (x1033 (- x1338 32))) (= (x295 (+ 192 x947)) x1345) (= (x1711 x1871) x3093) (= x264 (x1308 x497)) (not (= x497 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= (x295 (+ x947 32)) x1796) (<= x669 2) (= (x295 (+ 32 x530)) x3150) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639712 x497)) (= x530 (x295 (+ 32 x1871))) (= (x1711 x1243) x1673) (= x684 (x1711 x1673)) (= x2680 (x295 (+ x1796 32))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x497) (= (x1448 1461501637330902918203684832716283019655932542975 x2813) x2166) (= (x295 (+ x543 32)) x1083) (= x560 (>= 224 x264)) (> x1345 x497) (= (x295 (+ 32 x1673)) x2611) (>= x684 1) (<= x497 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1711 x314) x100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x497) (= x1871 (x295 (+ x746 32))) (not (= x497 115792089237316195423570985008687907853269984665640564039457584007913129639712)) (= (x1033 (- x1345 x497)) x1338) (= x160 (x1711 x3150))) (and (=> (and (= x1293 (x295 (+ 96 x991))) (= x1212 (x1308 x319)) (= x52 (x295 (+ 128 x991))) (= x2399 (x295 (+ 64 x991))) (= x717 (not (< 1 x493))) (= (x1308 x661) x1600) (= x661 (x295 (+ 32 x991))) (= (x1308 x52) x702) (= (x1308 x81) x1326) (= (x295 (+ 192 x991)) x299) (= x2948 (x1308 x1677)) (= x81 (x295 (+ x991 96))) (= x1754 (x1308 x513)) (= (x295 (+ 160 x991)) x2194) (= (x1308 x922) x2937) (= x907 (x1308 x991)) (= x493 (x49 x54)) (= (x1308 x991) x2049) (= x3117 (x1308 x2158)) (= x1721 (x1308 x2939)) (= x356 (x1308 x98)) (= x1988 (ite (= 0 x264) x1050 (ite (>= 32 x264) x152 (ite (>= 64 x264) x519 (ite (<= x264 96) x1954 (ite (<= x264 128) x120 (ite (<= x264 160) x2585 (ite (<= x264 192) x2042 (ite (>= 224 x264) x915 x801))))))))) (= (x295 (+ 64 x991)) x735) (= (x1308 x991) x1370) (= (x1308 x991) x409) (= x1581 (x1308 x1635)) (= (x295 (+ 32 x991)) x3137) (= x2939 (x295 (+ 32 x991))) (= x519 (x1656 x264 x1370 x356)) (= (x2926 x264 x409 x556 x1785) x1954) (= x453 (x1308 x991)) (= (x2318 x264 x2049 x2937 x1581 x1212) x120) (= (x295 (+ 32 x991)) x98) (= x554 (x1308 x1450)) (= (x1308 x2265) x1014) (= (x1308 x2150) x1285) (= (x295 (+ x991 160)) x1450) (= (x1308 x299) x1284) (= x2585 (x437 x264 x907 x2685 x2025 x1326 x1014)) (= (x1308 x2399) x1785) (= (x1308 x991) x2219) (= (x49 x1243) x54) (= x2685 (x1308 x2993)) (= x1563 (x1308 x991)) (= (x295 (+ 128 x991)) x2265) (= x915 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) (= (x2629 x264 x2219) x152) (= x2993 (x295 (+ x991 32))) (= (x2945 x264 x453 x1721 x1754 x2220 x702 x554) x2042) (= x1050 (x1612 0)) (= x3157 (x1308 x3088)) (= (x1308 x3137) x556) (= x2150 (x295 (+ 64 x991))) (= (x295 (+ 32 x1677)) x298) (>= x2948 1) (= (x295 (+ 32 x991)) x922) (= (x295 (+ x991 96)) x319) (= x1635 (x295 (+ 64 x991))) (= x1381 (x1308 x2194)) (= x3088 (x295 (+ 128 x991))) (= (x295 (+ x991 64)) x513) (= x2220 (x1308 x1293)) (= x2025 (x1308 x735)) (= x2158 (x295 (+ 96 x991)))) (and x717 (=> (= x2045 x1345) x486))) x560)) x2625))
(assert (x85 x238))
(assert (= (or x567 x2310 x2003 x2153 x2841) x617))
(assert (= x2833 (=> (and (or (and (= x822 0) (not x1196)) x1196) (= (= 0 x822) x1196)) x2302)))
(assert (x85 x3078))
(assert (< 10000 (x437 x681 x2677 x950 x2232 x418 x15)))
(assert (x1842 x2839))
(assert (x85 x1779))
(assert (x85 x1192))
(assert (= x2559 (and x2459 x3073)))
(assert (x85 x819))
(assert (x85 x461))
(assert (=> (<= x483 10000) (= 0 (x921 x483))))
(assert (x85 x1096))
(assert (x85 x1848))
(assert (=> (<= x2214 10000) (= 0 (x921 x2214))))
(assert (=> (>= 10000 x630) (= 0 (x921 x630))))
(assert (=> (>= 10000 x2160) (= 0 (x921 x2160))))
(assert (x85 x2120))
(assert (=> (<= x2040 10000) (= (x921 x2040) 0)))
(assert (= x1187 (x1087 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200))))
(assert (not (x635 (x437 x2347 x2061 x2216 x1235 x357 x1070))))
(assert (x85 x182))
(assert (x1842 x1439))
(assert (x85 x1383))
(assert (x85 x483))
(assert (x85 x1956))
(assert (=> (<= x1793 10000) (= (x921 x1793) 0)))
(assert (= x1177 (and x1431 x1634)))
(assert (x85 x3000))
(assert (= x270 (and x2640 x1598)))
(assert (x85 x273))
(assert (x85 x60))
(assert (x85 x2291))
(assert (x635 2065879269376))
(assert (=> (>= 10000 x2565) (= (x921 x2565) 0)))
(assert (x85 x2873))
(assert (= 0 (x921 18446744073709551455)))
(assert (= x2908 (x1726 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (x85 x2228))
(assert (= x916 (x1087 (x437 x630 x1901 x916 x3131 x2790 x1397))))
(assert (x85 x2679))
(assert (x85 x887))
(assert (x85 x2795))
(assert (x85 x2441))
(assert (not (x635 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x1962))
(assert (x85 x1697))
(assert (x85 x2771))
(assert (x85 x2060))
(assert (= (and x1296 x1146) x2304))
(assert (x85 x973))
(assert (= x353 (x2530 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (= x1080 (or x764 x2355)))
(assert (x85 x1279))
(assert (= (x1311 (x2318 x2001 x2374 x861 x1786 x3029)) x3029))
(assert (= x96 (=> (and (not (= x2568 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (not (= x2568 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (<= x2568 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x2568 64)) x3017) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2568) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2568) (> x3017 x2568) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2568)) (= x2866 (= x1058 1)) (= x1441 (x295 (+ 32 x2568)))) (and (=> (= x3017 x1400) x1272) x2866))))
(assert (=> (<= x2385 10000) (= (x921 x2385) 0)))
(assert (x2230 x84))
(assert (= (x1087 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) x2701))
(assert (x85 x2283))
(assert (not (x635 (x2926 x264 x409 x556 x1785))))
(assert (x2230 x2114))
(assert (x85 x934))
(assert (x85 x1460))
(assert (x85 x3030))
(assert (= x2387 (and x57 (not x2523))))
(assert (x85 x1929))
(assert (= (and x2473 x2352) x850))
(assert (= x2567 (x1311 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (x85 x1443))
(assert (not (x635 (x2318 x264 x2049 x2937 x1581 x1212))))
(assert (< (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2188))
(assert (x85 x2298))
(assert (x2230 x2941))
(assert (=> (>= 10000 x480) (= (x921 x480) 0)))
(assert (x85 x1059))
(assert (=> (>= 10000 x1754) (= 0 (x921 x1754))))
(assert (x85 x1074))
(assert (x85 x91))
(assert (= (=> (and (= (x295 (+ x425 32)) x2992) (= (x1179 x425) x2386) (= x2295 (x295 (+ x2172 32))) (= x1812 (not (> x1204 4)))) (and x1812 (=> (and (= x297 4) (= x1147 x2295) (= x2428 x2992)) x765))) x775))
(assert (x85 x1793))
(assert (x85 x2753))
(assert (< (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x481))
(assert (= (and x3147 x2835) x2125))
(assert (= (x2530 (x2318 x1546 x1640 x648 x2406 x222)) x2406))
(assert (x85 x25))
(assert (x85 x116))
(assert (= 0 (x921 1889567281)))
(assert (= x978 (x1311 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208))))
(assert (= x2709 (or (and x1894 (not x110)) x2816 (and (not x1476) x1159) (and (not x2700) x2956) (and (not x2330) x1259))))
(assert (x85 x855))
(assert (x85 x2000))
(assert (x85 x2713))
(assert (x85 x1372))
(assert (= (x921 (x2318 x2001 x2374 x861 x1786 x3029)) (x2318 x2001 x2374 x861 x1786 x3029)))
(assert (x85 x889))
(assert (=> (<= x1786 10000) (= (x921 x1786) 0)))
(assert (x2690 x2830))
(assert (x85 x376))
(assert (x85 x2827))
(assert (=> (<= x2624 10000) (= (x921 x2624) 0)))
(assert (x85 x2836))
(assert (= x3094 (x1726 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (=> (<= x2306 10000) (= 0 (x921 x2306))))
(assert (= (x1726 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)) x1642))
(assert (x85 x386))
(assert (x85 x2444))
(assert (=> (>= 10000 x1745) (= 0 (x921 x1745))))
(assert (x85 x2968))
(assert (= (x2530 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180)) x763))
(assert (= (x1725 (x2629 x264 x2219)) x264))
(assert (x85 x389))
(assert (x85 x250))
(assert (x85 x1205))
(assert (x85 x1580))
(assert (x85 x1866))
(assert (x85 x3079))
(assert (x85 x1052))
(assert (x2690 x817))
(assert (> (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889) 10000))
(assert (x85 x1091))
(assert (= (x921 (x437 x1139 x1846 x136 x918 x1672 x3063)) (x437 x1139 x1846 x136 x918 x1672 x3063)))
(assert (= (x281 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163)) x1961))
(assert (x85 x472))
(assert (= x1546 (x1725 (x1656 x1546 x2303 x860))))
(assert (= (and x2576 x520) x99))
(assert (x85 x2130))
(assert (= (x1725 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)) x1245))
(assert (x85 x3104))
(assert (x85 x2100))
(assert (= x2101 (and x964 (not x2984))))
(assert (= x2360 (or x351 x2583)))
(assert (=> (>= 10000 x229) (= 0 (x921 x229))))
(assert (= x2675 (or x1789 x535 x2174 x2516 x2925)))
(assert (=> (<= x965 10000) (= 0 (x921 x965))))
(assert (x85 x1391))
(assert (x85 x262))
(assert (x85 x1425))
(assert (= x1024 (and x3127 x2417)))
(assert (x85 x3011))
(assert (x85 x2229))
(assert (= 0 (x921 18446746139588821059)))
(assert (x85 x2382))
(assert (x85 x935))
(assert (=> (<= x903 10000) (= (x921 x903) 0)))
(assert (= x3109 (x1311 (x2318 x681 x3149 x2914 x1985 x3109))))
(assert (x85 x2698))
(assert (=> (<= x1971 10000) (= 0 (x921 x1971))))
(assert (= (x2530 (x2318 x1935 x3020 x2002 x2934 x2283)) x2934))
(assert (x85 x2119))
(assert (not (x635 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284))))
(assert (x85 x233))
(assert (= false x1333))
(assert (x85 x1800))
(assert (x85 x3033))
(assert (= x536 (x2056 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (= (x921 (x2926 x264 x409 x556 x1785)) (x2926 x264 x409 x556 x1785)))
(assert (=> (>= 10000 x3153) (= 0 (x921 x3153))))
(assert (x85 x1187))
(assert (x85 x54))
(assert (x85 x606))
(assert (x85 x1943))
(assert (= (x921 (x1656 x1139 x965 x1517)) (x1656 x1139 x965 x1517)))
(assert (x85 x2411))
(assert (x85 x184))
(assert (x85 x1983))
(assert (= (x281 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)) x2175))
(assert (x85 x2057))
(assert (x85 x62))
(assert (= (x921 18446744073709551487) 0))
(assert (x85 x629))
(assert (< (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x982))
(assert (x85 x983))
(assert (x85 x906))
(assert (= x2209 (and x1339 x2838)))
(assert (=> (>= 10000 x3080) (= (x921 x3080) 0)))
(assert (= (x1726 (x2318 x1546 x1640 x648 x2406 x222)) x1640))
(assert (x85 x1157))
(assert (x85 x221))
(assert (=> (<= x2243 10000) (= (x921 x2243) 0)))
(assert (x85 x2221))
(assert (=> (>= 10000 x263) (= (x921 x263) 0)))
(assert (= x994 (x2312 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994))))
(assert (x85 x1422))
(assert (x85 x14))
(assert (x85 x2009))
(assert (x85 x1990))
(assert (=> (>= 10000 x2061) (= 0 (x921 x2061))))
(assert (x85 x2179))
(assert (x85 x1991))
(assert (x85 x1035))
(assert (x85 x3015))
(assert (=> (>= 10000 x702) (= 0 (x921 x702))))
(assert (x1842 x2444))
(assert (=> (<= x1616 10000) (= 0 (x921 x1616))))
(assert (x85 x880))
(assert (x85 x3148))
(assert (=> (>= 10000 x2971) (= (x921 x2971) 0)))
(assert (x2230 x2810))
(assert (not (x635 (x2629 x630 x1201))))
(assert (x635 11309588061646438093662687302255421419811724423900836950936401294474059186176))
(assert (x85 x3048))
(assert (< 10000 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)))
(assert (= x2831 (x1311 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (x85 x2115))
(assert (x85 x1253))
(assert (x85 x1007))
(assert (x85 x1258))
(assert (= (x281 (x437 x264 x907 x2685 x2025 x1326 x1014)) x1014))
(assert (= (x1087 (x1656 x1245 x2734 x912)) x912))
(assert (=> (<= x1642 10000) (= (x921 x1642) 0)))
(assert (x85 x269))
(assert (x85 x419))
(assert (< (x1656 x2001 x1228 x1936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1042))
(assert (= (and (not x2950) x1795) x2076))
(assert (x85 x810))
(assert (= x1292 (or x234 x2721)))
(assert (x85 x2047))
(assert (x85 x1261))
(assert (= x1444 (x2530 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(assert (x85 x2406))
(assert (= x1241 (or x1790 x410)))
(assert (= x1752 (x2530 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (x85 x2089))
(assert (= x3154 (x281 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388))))
(assert (x85 x109))
(assert (x85 x1916))
(assert (=> (>= 10000 x1197) (= 0 (x921 x1197))))
(assert (x85 x1901))
(assert (x85 x761))
(assert (x85 x742))
(assert (x85 x124))
(assert (x85 x730))
(assert (=> (<= x1883 10000) (= 0 (x921 x1883))))
(assert (x85 x702))
(assert (= (x921 (x1656 x1935 x2589 x2425)) (x1656 x1935 x2589 x2425)))
(assert (= (x1725 (x2926 66 x3059 x2040 x677)) 66))
(assert (= x2080 (x1311 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200))))
(assert (x2230 x2274))
(assert (x85 x705))
(assert (x2690 x2550))
(assert (=> (<= x1600 10000) (= 0 (x921 x1600))))
(assert (= (x921 (x2318 x1546 x1640 x648 x2406 x222)) (x2318 x1546 x1640 x648 x2406 x222)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x2001 x2798 x2918 x774 x1456 x1268)))
(assert (x85 x1233))
(assert (=> (<= x2802 10000) (= (x921 x2802) 0)))
(assert (x85 x2684))
(assert (x85 x106))
(assert (x85 x2027))
(assert (=> (>= 10000 x1009) (= (x921 x1009) 0)))
(assert (=> (>= 10000 x534) (= (x921 x534) 0)))
(assert (x85 x1488))
(assert (=> (<= x918 10000) (= 0 (x921 x918))))
(assert (=> (>= 10000 x2935) (= 0 (x921 x2935))))
(assert (= x2232 (x2530 (x437 x681 x2677 x950 x2232 x418 x15))))
(assert (= (and x803 x1639) x308))
(assert (= (x2056 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) x2388))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639743))
(assert (x85 x1201))
(assert (= (x437 x1546 x1239 x1052 x1912 x461 x2902) (x921 (x437 x1546 x1239 x1052 x1912 x461 x2902))))
(assert (x85 x731))
(assert (x85 x2181))
(assert (not (x635 (x1656 x2347 x2982 x843))))
(assert (= x2676 (x1726 (x2926 x931 x2676 x984 x2430))))
(assert (x85 x780))
(assert (x85 x1666))
(assert (=> (>= 10000 x2918) (= 0 (x921 x2918))))
(assert (x85 x1603))
(assert (x85 x1723))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639841) 0))
(assert (=> (<= x461 10000) (= (x921 x461) 0)))
(assert (not (x635 (x1656 x1139 x965 x1517))))
(assert (= (or (and (not x275) x1887) x673) x2392))
(assert (= x615 (x1725 (x2629 x615 x362))))
(assert (x85 x1413))
(assert (= (x2530 (x437 x296 x386 x2943 x1680 x2306 x2401)) x1680))
(assert (= (x2530 (x437 x1139 x1846 x136 x918 x1672 x3063)) x918))
(assert (x85 x1734))
(assert (= x3115 (and (not x1566) x646)))
(assert (x85 x2239))
(assert (=> (>= 10000 x2495) (= (x921 x2495) 0)))
(assert (=> (<= x1601 10000) (= (x921 x1601) 0)))
(assert (x85 x658))
(assert (x85 x2874))
(assert (x635 2065879269444))
(assert (x85 x1407))
(assert (x85 x2520))
(assert (= (x2629 x1245 x2362) (x921 (x2629 x1245 x2362))))
(assert (x85 x372))
(assert (x85 x1608))
(assert (x85 x2557))
(assert (> (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643) 10000))
(assert (x85 x2948))
(assert (x85 x1071))
(assert (x85 x2822))
(assert (x85 x2826))
(assert (x85 x2451))
(assert (< 10000 (x2318 x296 x3021 x1248 x905 x79)))
(assert (= (and x2951 x2933) x1969))
(assert (x85 x220))
(assert (x85 x1548))
(assert (=> (>= 10000 x2823) (= (x921 x2823) 0)))
(assert (< (x2318 x1687 x2098 x480 x1116 x598) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (> (x1656 x2001 x1228 x1936) 10000))
(assert (= (=> (and (= x1804 (= 0 x2176)) (or x1804 (not x1804))) x2268) x460))
(assert (= (x281 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) x1301))
(assert (x85 x994))
(assert (x85 x2844))
(assert (x85 x1955))
(assert (= (x1087 (x2926 x296 x693 x924 x1279)) x924))
(assert (x85 x1640))
(assert (not (x635 (x2318 x2347 x1446 x2570 x2354 x2281))))
(assert (x85 x2797))
(assert (x85 x362))
(assert (x85 x24))
(assert (= (x2530 (x2926 x464 x1921 x2938 x2495)) x2495))
(assert (x85 x1001))
(assert (=> (>= 10000 x334) (= 0 (x921 x334))))
(assert (x85 x821))
(assert (x85 x829))
(assert (= (and (not x1567) x672) x234))
(assert (= x1922 (=> (and (= (x555 160) x2824) (<= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1552)) (= x1888 1) (= (x555 x2542) x934) (= (> x829 0) x275) (= (x555 x1552) x1888) (<= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x2518 (x555 x2824)) (> x906 x1552) (= (x555 x934) x829) (<= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1552)) (>= x290 1) (= x906 (x295 (+ x1552 32)))) (and (=> (and x275 (and (<= 1 x515) (= (ite (= 1 x439) 1 0) x1609) (= x439 (x555 x820)) (= x102 (x295 (+ 32 x934))) (= (x555 x934) x515) (= (x555 x102) x820) (= x2050 (= 0 x1609)) (>= 5 x439))) (and (=> (and (not x2050) (and (= (x555 x2581) x2164) (= x830 x2990) (>= 1461501637330902918203684832716283019655932542975 x830) (= x2581 (x295 (+ x820 128))) (>= x830 1) (= (x1448 1461501637330902918203684832716283019655932542975 x2164) x830))) x2683) (=> (and x2050 (and (or (and x695 (= 1 x3039)) (and (and (= 1 x619) (= x430 3) (= x430 (x555 x820))) (not x695))) (and (= (ite (= x1658 2) 1 0) x3039) (= (x555 x820) x1658) (<= x1658 5) (= x695 (> x3039 0))))) x557))) (=> (not x275) x1928)))))
(assert (x85 x2463))
(assert (x85 x1090))
(assert (= x2506 (and x1098 x336)))
(assert (=> (>= 10000 x801) (= (x921 x801) 0)))
(assert (x85 x2573))
(assert (x85 x364))
(assert (x85 x651))
(assert (= (x921 (x2926 x931 x2676 x984 x2430)) (x2926 x931 x2676 x984 x2430)))
(assert (x85 x2670))
(assert (not (x635 (x437 x1687 x2636 x1818 x1494 x143 x1727))))
(assert (x85 x2294))
(assert (x85 x2855))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72)))
(assert (= (=> (and (= x615 (x2532 x2278)) (= (x295 (+ x601 x3000)) x2955) (<= 1 x2955) (= x84 (x295 (+ 31 x2177))) (= x623 (<= x615 224)) (= (x1033 (- x2955 x2278)) x1151) (<= x2278 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1723 (x295 (+ x2278 32))) (= x2960 (x295 (+ x2177 x601))) (> x2955 x2278) (= x3000 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x84)) (<= x2278 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2278) (= x3120 (x1033 (- x1151 32)))) (and x623 (=> (and (= (x2532 x1000) x2044) (= x1779 (x295 (+ 192 x1723))) (= (x295 (+ 32 x1723)) x1800) (= (x2532 x321) x2928) (= (x2532 x1723) x1616) (= x2963 (x2532 x1723)) (= x3034 (x1772 x1704)) (= x2348 (x2532 x842)) (<= 1 x2928) (= x660 (x2532 x3004)) (= (x2945 x615 x1094 x229 x134 x2348 x827 x660) x703) (= x3161 (ite (= 0 x615) x898 (ite (<= x615 32) x1664 (ite (>= 64 x615) x2789 (ite (<= x615 96) x1518 (ite (<= x615 128) x2106 (ite (>= 160 x615) x1246 (ite (>= 192 x615) x703 (ite (>= 224 x615) x1827 x1382))))))))) (= (x2532 x1569) x2066) (= x1094 (x2532 x1723)) (= x893 (x2532 x1723)) (= x388 (x295 (+ 64 x1723))) (= x994 (x2532 x1779)) (= (x295 (+ 96 x1723)) x2187) (= (x295 (+ 128 x1723)) x1523) (= (x295 (+ 64 x1723)) x2170) (= (x1772 x3034) x1501) (= x1487 (x295 (+ x321 32))) (= x362 (x2532 x1723)) (= (x295 (+ x1723 96)) x752) (= (x2532 x1829) x1650) (= (x2532 x1674) x827) (= x1569 (x295 (+ x1723 96))) (= x1041 (x295 (+ x1723 32))) (= (x2532 x2170) x1332) (= x898 (x1612 0)) (= (x2532 x1523) x347) (= x229 (x2532 x32)) (= x842 (x295 (+ x1723 96))) (= x2665 (x295 (+ x1723 32))) (= (x2532 x1723) x1112) (= x2980 (x2532 x1800)) (= (x295 (+ 160 x1723)) x3004) (= (x2532 x388) x134) (= x401 (x2532 x712)) (= x1664 (x2629 x615 x362)) (= (x2532 x1723) x2740) (= x2020 (x2532 x1835)) (= (x2532 x2187) x1992) (= x2106 (x2318 x615 x893 x401 x1332 x1991)) (= (x2532 x750) x263) (= (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994) x1827) (= x750 (x295 (+ x1723 128))) (= x1835 (x295 (+ 64 x1723))) (= x1809 (x2532 x91)) (= (x2532 x1956) x1025) (= x1674 (x295 (+ 128 x1723))) (= x1829 (x295 (+ x1723 64))) (= x1956 (x295 (+ 160 x1723))) (= x91 (x295 (+ x1723 32))) (= x1246 (x437 x615 x1616 x1809 x2020 x2066 x263)) (= (x2532 x2665) x3064) (= x1000 (x295 (+ x1723 64))) (= (x295 (+ x1723 32)) x32) (= x712 (x295 (+ 32 x1723))) (= x1991 (x2532 x752)) (= (x2926 x615 x2963 x2980 x1650) x1518) (= x2965 (x2532 x1041)) (= (x1656 x615 x1112 x3064) x2789) (= (not (> x1501 1)) x2870)) (and x2870 (=> (= x2955 x116) x807))))) x1249))
(assert (x85 x2548))
(assert (x85 x1923))
(assert (= (x1311 (x2318 x1687 x2098 x480 x1116 x598)) x598))
(assert (= (and (not x2202) x207) x2780))
(assert (= (x2056 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)) x175))
(assert (x85 x1895))
(assert (= (x1726 (x2629 x2001 x1556)) x1556))
(assert (= (x1725 (x437 x1935 x2935 x2372 x2237 x162 x1865)) x1935))
(assert (=> (<= x2762 10000) (= 0 (x921 x2762))))
(assert (x85 x175))
(assert (x85 x917))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)))
(assert (< (x2926 x1935 x2137 x3153 x2) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x598) (= (x921 x598) 0)))
(assert (x85 x2669))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639840))
(assert (x85 x1122))
(assert (x85 x130))
(assert (=> (<= x1326 10000) (= (x921 x1326) 0)))
(assert (= (=> (and (= (x614 x2116) x3012) (= x3048 (x295 (+ 32 x1799))) (= (x295 (+ x858 32)) x1593) (= (x3014 x1243) x1131) (= (x295 (+ 96 x2610)) x1055) (= x2610 (x3014 192)) (= x2116 (x3014 x1055)) (= x3130 (x3014 x149)) (= x2814 (x3014 x1759)) (= (x3014 x2335) x2255) (= x1799 (x295 (+ x858 288))) (= x424 (x295 (+ 32 x2116))) (= x3147 (> x3012 0))) (and (=> (not x3147) x1119) (=> (and x3147 (and (= (> x3012 32) x539) (= (x71 x424) x653))) (and (=> (not x539) x1119) (=> (and (and (= x642 (< 64 x3012)) (= x1978 (x2151 x3056)) (= (x295 (+ 32 x3048)) x2147) (= x3056 (x295 (+ 32 x424)))) x539) (and (=> (and x642 (and (= (x634 x1519) x139) (= (x295 (+ 64 x424)) x1519) (= (> x3012 96) x3051) (= (x295 (+ 64 x3048)) x2597))) (and (=> (not x3051) x1119) (=> x3051 x2121))) (=> (not x642) x1119))))))) x879))
(assert (x85 x388))
(assert (x85 x229))
(assert (= (=> (and (= x1163 (x295 (+ x1516 32))) (= x1245 (x86 x1516)) (<= x1516 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (<= x1245 224) x1751) (= x869 (x1033 (- x2801 32))) (<= x1516 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x1168 x715)) x1697) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1516) (>= x1697 1) (= x1168 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1330)) (= (x295 (+ x841 31)) x1330) (> x1697 x1516) (= x1877 (x295 (+ x715 x841))) (= x2801 (x1033 (- x1697 x1516)))) (and (=> (and (= x2163 (x86 x2729)) (= x2725 (x1656 x1245 x2734 x912)) (= (x295 (+ 64 x1163)) x1881) (= x2924 (x86 x1770)) (= x2362 (x86 x1163)) (= (x295 (+ 32 x1163)) x2932) (= (x86 x1163) x3094) (= (x295 (+ x1163 64)) x1560) (= x1811 (x295 (+ 32 x1163))) (= (x86 x1421) x1961) (= x2661 (x295 (+ 32 x1163))) (= x1770 (x295 (+ x1163 64))) (= (x295 (+ x1163 64)) x1102) (= (x86 x1163) x1006) (= x1165 (not (< 1 x1040))) (= (x295 (+ x1163 96)) x754) (= x1093 (x86 x1163)) (= (x295 (+ x1163 192)) x3108) (= x1657 (x86 x144)) (= x2235 (x86 x1483)) (= (x910 x210) x1043) (= (x86 x1811) x2483) (= (x295 (+ x1163 160)) x1534) (= x1825 (x86 x754)) (= (x86 x3058) x1405) (= x2729 (x295 (+ 160 x1163))) (= (x437 x1245 x1844 x44 x2924 x1405 x794) x2434) (= x1866 (x295 (+ 32 x1163))) (= x247 (x2629 x1245 x2362)) (= x240 (x86 x1102)) (= (x86 x1163) x2734) (= (x86 x1881) x1341) (= (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413) x1925) (= (x2926 x1245 x1093 x414 x240) x491) (= (x295 (+ 96 x1163)) x144) (= x1483 (x295 (+ 64 x1163))) (= (x2318 x1245 x1006 x2011 x1341 x1825) x1862) (= x286 (x295 (+ x1163 128))) (= x2642 (x86 x1560)) (= x2480 (x295 (+ 32 x639))) (= x1421 (x295 (+ 128 x1163))) (= (x295 (+ 128 x1163)) x307) (>= x2000 1) (= x1040 (x910 x1043)) (= (x86 x1163) x1844) (= (x1612 0) x2482) (= x1247 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163)) (= x794 (x86 x286)) (= x527 (x86 x3009)) (= x2119 (x86 x307)) (= (x86 x1132) x2011) (= x1585 (x295 (+ x1163 32))) (= (x295 (+ x1163 32)) x1132) (= x1685 (x86 x1534)) (= (x86 x3108) x2413) (= (x295 (+ 96 x1163)) x3009) (= (x295 (+ x1163 96)) x3058) (= x2635 (x86 x1163)) (= x880 (x86 x1866)) (= (x86 x639) x2000) (= x414 (x86 x2661)) (= x44 (x86 x1585)) (= (x86 x2932) x912) (= x1077 (ite (= 0 x1245) x2482 (ite (<= x1245 32) x247 (ite (>= 64 x1245) x2725 (ite (<= x1245 96) x491 (ite (>= 128 x1245) x1862 (ite (>= 160 x1245) x2434 (ite (>= 192 x1245) x1247 (ite (>= 224 x1245) x1925 x148)))))))))) (and x1165 (=> (= x3123 x1697) x3136))) x1751)) x1436))
(assert (=> (>= 10000 x517) (= 0 (x921 x517))))
(assert (< (x2945 x2347 x2858 x813 x763 x2133 x2484 x180) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2054))
(assert (=> (<= x1239 10000) (= (x921 x1239) 0)))
(assert (x85 x974))
(assert (= (x1725 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643)) x931))
(assert (x85 x1388))
(assert (x85 x1960))
(assert (x85 x2280))
(assert (= (x1311 (x437 x931 x193 x2860 x1089 x2068 x1009)) x2068))
(assert (x85 x3025))
(assert (x85 x932))
(assert (= true x2107))
(assert (x1842 x1974))
(assert (x85 x3123))
(assert (=> (>= 10000 x2708) (= 0 (x921 x2708))))
(assert (=> (<= x2879 10000) (= 0 (x921 x2879))))
(assert (x85 x2274))
(assert (not (x635 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (=> (<= x660 10000) (= 0 (x921 x660))))
(assert (= x2896 (and x1158 x2637)))
(assert (=> (>= 10000 x2570) (= 0 (x921 x2570))))
(assert (> (x2629 x296 x1654) 10000))
(assert (x85 x2314))
(assert (= (and (not x2050) x1627) x1629))
(assert (x85 x148))
(assert (= x2624 (x1311 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388))))
(assert (=> (<= x1390 10000) (= (x921 x1390) 0)))
(assert (< (x2629 x615 x362) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2790))
(assert (= (and (not x539) x2125) x567))
(assert (x85 x171))
(assert (x85 x1404))
(assert (x85 x138))
(assert (=> (<= x2790 10000) (= 0 (x921 x2790))))
(assert (x85 x669))
(assert (= (or x2429 x2876 x758 x1358 x609) x318))
(assert (x85 x16))
(assert (x85 x2110))
(assert (x85 x1213))
(assert (x85 x1512))
(assert (x85 x259))
(assert (x85 x1138))
(assert (= x296 (x1725 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (= (x921 57896044618658097711785492504343953926634992332820282019728792003956564820068) 0))
(assert (x85 x2194))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x2001 x1556)))
(assert (x85 x1288))
(assert (x85 x751))
(assert (x85 x1203))
(assert (= (and (not x1010) x2803) x520))
(assert (x85 x1303))
(assert (=> (>= 10000 x1437) (= 0 (x921 x1437))))
(assert (=> (>= 10000 x2220) (= (x921 x2220) 0)))
(assert (not (x635 (x2629 x681 x942))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x1245 x1006 x2011 x1341 x1825)))
(assert (x85 x2243))
(assert (x85 x3052))
(assert (x85 x645))
(assert (x85 x1606))
(assert (= (or x3065 (and x726 (not x1804))) x1995))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x931 x2676 x984 x2430)))
(assert (= (x1726 (x2629 x296 x1654)) x1654))
(assert (=> (>= 10000 x1935) (= (x921 x1935) 0)))
(assert (x2690 x2114))
(assert (x85 x2729))
(assert (not (x635 (x437 x1546 x1239 x1052 x1912 x461 x2902))))
(assert (< 10000 (x2318 x1139 x1931 x3055 x2971 x2451)))
(assert (x2690 x1173))
(assert (x85 x217))
(assert (x85 x832))
(assert (x85 x243))
(assert (x1842 x817))
(assert (not (x635 (x1656 x296 x2784 x1216))))
(assert (x85 x3143))
(assert (=> (<= x2687 10000) (= 0 (x921 x2687))))
(assert (=> (<= x1071 10000) (= 0 (x921 x1071))))
(assert (= x942 (x1726 (x2629 x681 x942))))
(assert (x85 x488))
(assert (x2690 x255))
(assert (x2690 x2274))
(assert (= (x921 (x2926 x2347 x2471 x1793 x378)) (x2926 x2347 x2471 x1793 x378)))
(assert (x85 x1330))
(assert (x85 x3098))
(assert (= (x921 (x1656 x630 x747 x2557)) (x1656 x630 x747 x2557)))
(assert (= x1546 (x1725 (x2629 x1546 x1733))))
(assert (x85 x1347))
(assert (=> (<= x1721 10000) (= 0 (x921 x1721))))
(assert (= (x1087 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399)) x2105))
(assert (x85 x2764))
(assert (=> (>= 10000 x2124) (= 0 (x921 x2124))))
(assert (x85 x2254))
(assert (x85 x69))
(assert (x85 x5))
(assert (> (x437 x630 x1901 x916 x3131 x2790 x1397) 10000))
(assert (x85 x1950))
(assert (x85 x2484))
(assert (x85 x1935))
(assert (x85 x754))
(assert (> (x1656 x1139 x965 x1517) 10000))
(assert (x85 x894))
(assert (x85 x1753))
(assert (= x486 (=> (and (= (x35 x22) x2437) (= (> x3105 0) x1802) (= (x35 x2437) x3105)) (and (=> (and x1802 (and (= (x295 (+ 32 x3043)) x979) (= x2885 (< 0 x2275)) (<= 1 x265) (= (x35 x2446) x987) (= x972 (x295 (+ x365 32))) (= (x35 x22) x365) (= (x35 x1820) x1203) (= (x35 x972) x443) (= (x295 (+ x2446 32)) x1820) (= x2138 (x295 (+ x1271 32))) (= (x2854 x1203) x2275) (= x2446 (x295 (+ 32 x443))) (= (x35 x443) x2894) (= (x295 (+ 32 x2138)) x1202) (= (x295 (+ 128 x1271)) x3043) (= (x295 (+ x2045 32)) x1271) (= x2391 (x295 (+ x1202 32))) (= x2772 (x1448 1461501637330902918203684832716283019655932542975 x2894)) (= (x35 x365) x265) (= x1401 (x295 (+ 32 x1203))))) (and (=> (not x2885) x786) (=> (and (and (= (< 32 x2275) x2352) (= (x949 x1401) x2558)) x2885) (and (=> (not x2352) x786) (=> (and (and (= x1435 (x295 (+ 32 x1401))) (= (x29 x1435) x1219) (= (> x2275 64) x1830) (= (x295 (+ 32 x979)) x2342)) x2352) (and (=> (and x1830 (and (= x2722 (x295 (+ x1401 64))) (= x854 (x295 (+ 64 x979))) (= x743 (< 96 x2275)) (= (x1113 x2722) x2494))) (and (=> (not x743) x786) (=> x743 x2659))) (=> (not x1830) x786))))))) (=> (and (and (= x1554 x2045) (= x22 x149)) (not x1802)) x2013)))))
(assert (x85 x1787))
(assert (x85 x822))
(assert (= 0 (x921 18446744073709551613)))
(assert (= (x1725 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)) x464))
(assert (= (x2926 x615 x2963 x2980 x1650) (x921 (x2926 x615 x2963 x2980 x1650))))
(assert (= x1546 (x1725 (x2318 x1546 x1640 x648 x2406 x222))))
(assert (x85 x884))
(assert (< 10000 (x2318 x931 x1231 x2343 x1968 x789)))
(assert (= (x1087 (x1656 x681 x2124 x2754)) x2754))
(assert (x85 x2210))
(assert (= (and x1566 x646) x41))
(assert (x85 x2446))
(assert (x85 x1994))
(assert (x85 x93))
(assert (=> (<= x2301 10000) (= 0 (x921 x2301))))
(assert (x85 x2104))
(assert (= x372 (x281 (x437 x464 x1717 x363 x2979 x50 x372))))
(assert (=> (<= x1688 10000) (= 0 (x921 x1688))))
(assert (= (x1087 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)) x744))
(assert (x85 x1132))
(assert (= x2118 (and x1406 x1080)))
(assert (=> (>= 10000 x197) (= (x921 x197) 0)))
(assert (=> (>= 10000 x2441) (= 0 (x921 x2441))))
(assert (= (x921 (x2629 x464 x834)) (x2629 x464 x834)))
(assert (= (x1726 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) x1688))
(assert (= (=> (and (= x1005 (not (< 1 x2060))) (= x2251 (x1660 x881)) (= x908 (x295 (+ 32 x1319))) (= x2292 (x295 (+ x190 32))) (= (x2837 x2613) x2646) (= (x1448 1461501637330902918203684832716283019655932542975 x1904) x2929) (= (x1604 x3134) x2167) (= (x295 (+ x908 32)) x881) (= (x295 (+ 32 x1385)) x190) (>= 1 x2646) (= (x295 (+ x2846 32)) x1385) (= (x295 (+ 32 x2613)) x1319) (= x2613 (x295 (+ 32 x2167))) (= x500 (x1604 x2167)) (= (x295 (+ 32 x990)) x2846) (<= x500 2) (= (x383 x1319) x1904) (= (x295 (+ x1734 32)) x990) (= x2511 (x306 x908))) (and (=> (= x309 x2292) x2196) x1005)) x1626))
(assert (= 0 (x921 57896044618658097711785492504343953926634992332820282019728792003956564820645)))
(assert (= x2633 (or x1750 x1558)))
(assert (x85 x2504))
(assert (x85 x1058))
(assert (x85 x176))
(assert (= x714 (and (not x1281) x1322)))
(assert (=> (<= x222 10000) (= (x921 x222) 0)))
(assert (=> (>= 10000 x1840) (= 0 (x921 x1840))))
(assert (= x772 (or x2748 x541)))
(assert (x85 x3029))
(assert (x2690 x749))
(assert (x85 x2824))
(assert (x85 x1130))
(assert (=> (>= 10000 x2965) (= (x921 x2965) 0)))
(assert (x85 x3105))
(assert (x85 x1310))
(assert (x85 x779))
(assert (= x2529 (=> (and (= x823 (x1262 x665)) (= x1662 (x295 (+ x2055 32))) (<= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= 1 x1504) (= (x82 x2055) x2347) (= (x1262 x2370) x706) (= x2694 (>= 224 x2347)) (= (* x2621 79228162514264337593543950336) x80) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2055)) (= x1850 (x1033 (- x506 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639832 x2055)) (= x1504 (x1262 x906)) (= (x1262 160) x2370) (<= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x2055 x1215) (= x1173 (x1262 x2130)) (= (x1448 1461501637330902918203684832716283019655932542975 x706) x2621) (= (x295 (+ 64 x2130)) x2285) (= x506 (x1033 (- x1215 x2055))) (= x867 (x295 (+ 32 x2055))) (= (x1448 1461501637330902918203684832716283019655932542975 x1173) x977) (not (= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639832)) (= (x295 (+ 20 x1300)) x649) (= (x295 (+ x649 32)) x1215) (<= x2055 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2130 (x295 (+ 64 x823))) (= x1404 (* 79228162514264337593543950336 x977)) (= (x1262 x2285) x1555) (= x1300 (x295 (+ 20 x867)))) (and (=> (and (and (= (x82 x1860) x2844) (= (x295 (+ x1662 64)) x819) (= x220 (x295 (+ x1662 64))) (= x2113 (x295 (+ 160 x1662))) (= (x82 x787) x2354) (= (x82 x906) x31) (= (x82 x1946) x378) (= (x82 x2481) x357) (= x2061 (x82 x1662)) (= (x82 x2807) x813) (= (ite (= x2347 0) x2648 (ite (>= 32 x2347) x2236 (ite (<= x2347 64) x2953 (ite (<= x2347 96) x1550 (ite (<= x2347 128) x2287 (ite (<= x2347 160) x2622 (ite (<= x2347 192) x690 (ite (<= x2347 224) x2338 x2214)))))))) x1160) (= (= x3086 0) x104) (= x1860 (x295 (+ x1662 32))) (= (x295 (+ x1662 32)) x1997) (= (x295 (+ x1662 64)) x787) (= (x82 x1662) x2471) (= x208 (x82 x2969)) (= (x82 x345) x1070) (= (x82 x819) x1471) (= x2969 (x295 (+ 192 x1662))) (= x345 (x295 (+ x1662 128))) (= (x295 (+ x2009 96)) x2039) (= x2338 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) (= x1793 (x82 x1967)) (= (x437 x2347 x2061 x2216 x1235 x357 x1070) x2622) (<= 1 x31) (= x2481 (x295 (+ 96 x1662))) (= (x82 x1845) x978) (= x1235 (x82 x317)) (= (x295 (+ x1662 64)) x1946) (= (x82 x2695) x843) (= x2953 (x1656 x2347 x2982 x843)) (= (x82 x2039) x1135) (= x2648 (x1612 0)) (= x2287 (x2318 x2347 x1446 x2570 x2354 x2281)) (= (x82 x665) x2009) (= (x295 (+ 64 x1662)) x317) (= x1606 (x295 (+ 160 x1662))) (= x3086 (x82 x1125)) (= x2216 (x82 x1997)) (= x2695 (x295 (+ x1662 32))) (= (x82 x2608) x2133) (= (x295 (+ 32 x1662)) x1967) (= (x2629 x2347 x1454) x2236) (= (x82 x2282) x2570) (= x1586 (x295 (+ x1662 128))) (= x180 (x82 x1606)) (= x690 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180)) (= x2608 (x295 (+ x1662 96))) (= x2879 (x82 x1662)) (= x1301 (x82 x1586)) (= (x82 x2357) x2484) (= x1845 (x295 (+ 96 x1662))) (= x2357 (x295 (+ x1662 128))) (= x1454 (x82 x1662)) (= x2858 (x82 x1662)) (= x763 (x82 x220)) (= (x82 x1662) x2982) (= x1233 (x295 (+ 96 x1662))) (= x2807 (x295 (+ x1662 32))) (= (x2926 x2347 x2471 x1793 x378) x1550) (= x2281 (x82 x1233)) (= x1237 (x82 x2113)) (= (x82 x1662) x1446) (= (x295 (+ x1662 32)) x2282)) (or (and (= (x295 (+ 32 x1125)) x738) x104) (not x104))) x2469) x2694))))
(assert (not (x635 (x2926 x296 x693 x924 x1279))))
(assert (= x2248 (x1087 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771))))
(assert (=> (>= 10000 x353) (= 0 (x921 x353))))
(assert (= (and x1004 (not x1949)) x1781))
(assert (x85 x1503))
(assert (= (x1656 64 x2989 1) (x921 (x1656 64 x2989 1))))
(assert (=> (>= 10000 x1687) (= (x921 x1687) 0)))
(assert (x85 x2176))
(assert (x635 2065879269316))
(assert (= (x1311 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) x3117))
(assert (x85 x2987))
(assert (x85 x399))
(assert (x85 x1736))
(assert (=> (<= x1446 10000) (= 0 (x921 x1446))))
(assert (x85 x572))
(assert (x85 x395))
(assert (= x2710 (and x1802 x1972)))
(assert (x85 x1624))
(assert (= x1402 (and (not x1431) x1634)))
(assert (x1842 x2830))
(assert (=> (>= 10000 x1985) (= 0 (x921 x1985))))
(assert (= (x1726 (x2318 x630 x1905 x2112 x477 x3082)) x1905))
(assert (x85 x3064))
(assert (x85 x495))
(assert (x85 x3047))
(assert (= (or x1048 x698) x1887))
(assert (x85 x2779))
(assert (x85 x1097))
(assert (=> (>= 10000 x471) (= (x921 x471) 0)))
(assert (x1842 x1904))
(assert (= x1469 (and (not x2719) x1485)))
(assert (= (x1725 (x2926 x1245 x1093 x414 x240)) x1245))
(assert (x85 x19))
(assert (= (x1725 (x2945 x681 x452 x534 x929 x2751 x888 x3141)) x681))
(assert (=> (<= x3020 10000) (= 0 (x921 x3020))))
(assert (= x1659 (x1311 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885))))
(assert (x85 x2061))
(assert (= (x1087 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643)) x1998))
(assert (< 10000 (x2629 x1687 x1142)))
(assert (x85 x739))
(assert (=> (>= 10000 x325) (= (x921 x325) 0)))
(assert (x85 x2040))
(assert (x85 x1863))
(assert (x85 x2796))
(assert (x85 x2142))
(assert (not (x635 (x2926 x464 x1921 x2938 x2495))))
(assert (x85 x2924))
(assert (= x557 (=> (and (= x798 (x1448 1461501637330902918203684832716283019655932542975 x2550)) (= x442 (x295 (+ x820 128))) (= x2550 (x555 x442)) (= 1 x707) (= x1377 x798) (= x1377 (x1448 1461501637330902918203684832716283019655932542975 x2518))) x2683)))
(assert (> (x1656 x1935 x2589 x2425) 10000))
(assert (=> (<= x527 10000) (= (x921 x527) 0)))
(assert (x85 x3003))
(assert (=> (>= 10000 x241) (= (x921 x241) 0)))
(assert (= (x1725 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)) x630))
(assert (= (x1726 (x2318 x2001 x2374 x861 x1786 x3029)) x2374))
(assert (=> (<= x1912 10000) (= 0 (x921 x1912))))
(assert (x85 x2995))
(assert (> (x2926 x931 x2676 x984 x2430) 10000))
(assert (= (x1087 (x2318 x2001 x2374 x861 x1786 x3029)) x861))
(assert (x85 x1477))
(assert (not (x635 (x437 x615 x1616 x1809 x2020 x2066 x263))))
(assert (x85 x401))
(assert (x85 x188))
(assert (x85 x676))
(assert (= x1695 (=> (and (= (x643 x2140) x685) (<= x919 18446744073709551614) (not (< x2692 x919)) (> x2692 x919) (= x1584 (x1033 (- x1445 x1841))) (<= x919 18446744073709551615) (<= x3042 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x919) (<= x919 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (>= x919 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x919 18446744073709551487)) (= x2651 (x295 (+ 32 x2089))) (= x70 (x643 x1841)) (>= 18446744073709551614 x919) (= x2087 (x295 (+ 32 x1841))) (= (x295 (+ 32 x2087)) x1636) (not (= x919 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x2692 (x295 (+ x919 128))) (<= 128 x1584) (= x3042 (x643 x2087)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1584) (= (x295 (+ 32 x919)) x2089) (= x2140 (x295 (+ x1636 32))) (= x400 (x643 x1636)) (or (>= x1841 57896044618658097711785492504343953926634992332820282019728792003956564820645) (<= x1841 2065879269316)) (>= 5 x70) (= (x295 (+ 32 x2651)) x876) (= x1200 (not (> x2786 1))) (or (>= x919 115792089237316195423570985008687907853269984665640564039457584007913129639809) (<= x919 18446744073709551487))) (and x1200 (=> (= x2692 x1015) x2671)))))
(assert (=> (<= x2354 10000) (= 0 (x921 x2354))))
(assert (< 10000 (x437 x1245 x1844 x44 x2924 x1405 x794)))
(assert (x85 x239))
(assert (x85 x823))
(assert (x635 21408440236001274921485009970742555221786587156444570319896389698385254285312))
(assert (= (and x1022 x2304) x2812))
(assert (x85 x1844))
(assert (x85 x2937))
(assert (x85 x2949))
(assert (x85 x377))
(assert (x85 x2433))
(assert (= (x1725 (x2629 x1687 x1142)) x1687))
(assert (x85 x1487))
(assert (=> (>= 10000 x2066) (= (x921 x2066) 0)))
(assert (=> (>= 10000 x78) (= (x921 x78) 0)))
(assert (= (and (not x2997) x2506) x2614))
(assert (=> (<= x2982 10000) (= (x921 x2982) 0)))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564820645))
(assert (not (x635 (x2926 x931 x2676 x984 x2430))))
(assert (x85 x639))
(assert (= x1743 (and (not x1406) x1080)))
(assert (not (x635 (x2318 x2001 x2374 x861 x1786 x3029))))
(assert (= (and x1591 x1224) x758))
(assert (=> (<= x401 10000) (= (x921 x401) 0)))
(assert (x85 x1003))
(assert (x85 x2292))
(assert (x1842 x2776))
(assert (x85 x2062))
(assert (= (x1311 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)) x2220))
(assert (x85 x2311))
(assert (x85 x2395))
(assert (= (=> (and (<= x1015 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x1015 (mod (+ x713 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1334) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1015) (< x1015 x1334) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1015) (= x961 (x295 (+ x1015 32))) (not (or (and (<= x1575 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1963 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1575 x1963) (= (<= x1963 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575))))) (or (<= x431 2065879269376) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x431)) (>= 18446744073709551615 x2245) (= x1562 (* 160 x2245)) (= (* 32 x2245) x713) (= x2245 (x643 x1433)) (<= 1 x1334) (= (x295 (+ x431 36)) x1433) (= (x295 (+ 32 x1433)) x1575) (= (< 0 x2245) x2630) (= (+ x2051 32) x1966) (= (x643 164) x431) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x431) (<= x2460 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x431 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2460 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x431 x2460))) (= (x1033 (- x1445 x1562)) x1963)) (and (=> x2630 x1062) (=> (and (= x1334 x63) (not x2630)) x2242))) x2671))
(assert (x85 x140))
(assert (x2690 x1974))
(assert (= x2965 (x1087 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994))))
(assert (not (x635 (x2629 x464 x834))))
(assert (x85 x615))
(assert (x85 x2699))
(assert (x85 x2350))
(assert (= (x921 2065879269444) 0))
(assert (x85 x1759))
(assert (=> (<= x3063 10000) (= (x921 x3063) 0)))
(assert (x85 x506))
(assert (x85 x1586))
(assert (x1842 x1712))
(assert (x85 x1738))
(assert (x85 x2828))
(assert (= (=> (and (= (not (< 128 x2275)) x2800) (= (x1481 x989) x2244) (= x518 (x295 (+ x979 96))) (= x989 (x295 (+ 96 x1401)))) (and x2800 x786)) x2659))
(assert (= (x281 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)) x1520))
(assert (= (x1087 (x437 x1687 x2636 x1818 x1494 x143 x1727)) x1818))
(assert (= (x1087 (x2318 x1935 x3020 x2002 x2934 x2283)) x2002))
(assert (x85 x2205))
(assert (= (x1726 (x2318 x264 x2049 x2937 x1581 x1212)) x2049))
(assert (x85 x1329))
(assert (= x1941 (and x2266 x1307)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x1935 x3020 x2002 x2934 x2283)))
(assert (= x2348 (x1311 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (x85 x2577))
(assert (x85 x515))
(assert (x85 x580))
(assert (x85 x3133))
(assert (x85 x2716))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)))
(assert (x85 x1877))
(assert (x85 x826))
(assert (x85 x1685))
(assert (= x2635 (x1726 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413))))
(assert (= x2137 (x1726 (x2926 x1935 x2137 x3153 x2))))
(assert (=> (<= x1727 10000) (= (x921 x1727) 0)))
(assert (x85 x2466))
(assert (x85 x396))
(assert (= x1112 (x1726 (x1656 x615 x1112 x3064))))
(assert (=> (<= x2363 10000) (= (x921 x2363) 0)))
(assert (x85 x1979))
(assert (=> (>= 10000 x2281) (= (x921 x2281) 0)))
(assert (x85 x2750))
(assert (x85 x1675))
(assert (x85 x2777))
(assert (not (x635 (x1656 x681 x2124 x2754))))
(assert (not (x635 (x2629 x2001 x1556))))
(assert (x85 x2450))
(assert (< 10000 (x2926 x2001 x1029 x2470 x2301)))
(assert (x85 x2423))
(assert (not (x635 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(assert (=> (>= 10000 x1603) (= 0 (x921 x1603))))
(assert (< 10000 (x1656 x931 x1849 x3103)))
(assert (x85 x2871))
(assert (x85 x2969))
(assert (x1842 x2211))
(assert (> (x2318 x264 x2049 x2937 x1581 x1212) 10000))
(assert (< 10000 (x1656 x464 x1950 x517)))
(assert (x85 x2616))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589)))
(assert (= (x281 (x437 x1935 x2935 x2372 x2237 x162 x1865)) x1865))
(assert (x85 x321))
(assert (=> (>= 10000 x2642) (= 0 (x921 x2642))))
(assert (x85 x2187))
(assert (x85 x2342))
(assert (= (x1087 (x437 x681 x2677 x950 x2232 x418 x15)) x950))
(assert (x85 x2653))
(assert (=> (<= x931 10000) (= 0 (x921 x931))))
(assert (x85 x3153))
(assert (x85 x2259))
(assert (x85 x3059))
(assert (x85 x568))
(assert (x85 x2597))
(assert (=> (>= 10000 x186) (= (x921 x186) 0)))
(assert (x85 x3108))
(assert (=> (>= 10000 x2366) (= 0 (x921 x2366))))
(assert (x85 x1178))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639840) 0))
(assert (x85 x1490))
(assert (x85 x1089))
(assert (x85 x302))
(assert (=> (>= 10000 x2216) (= 0 (x921 x2216))))
(assert (x85 x2565))
(assert (> (x2926 x681 x1538 x2820 x2408) 10000))
(assert (x85 x1320))
(assert (x85 x3142))
(assert (x85 x84))
(assert (=> (<= x1170 10000) (= 0 (x921 x1170))))
(assert (= (x1311 (x437 x1935 x2935 x2372 x2237 x162 x1865)) x162))
(assert (= (=> (and (or (and (and (>= x1225 32) (<= x1225 4294967295) (= x1573 1)) x1567) (and (= x1573 x2975) (not x1567))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1225) (>= x1225 32) (= x911 (x1448 1461501637330902918203684832716283019655932542975 x2776)) (= (x295 (+ x206 32)) x2787) (= 30450320296159908085414496432607297912280636920234228256796789313041262968832 x2765) (= x3025 30450320296159908085414496432607297912280636920234228256796789313041262968832) (= x206 (x295 (+ x2867 4))) (= (< 0 x2975) x1567))) x2085) x2302))
(assert (x85 x2081))
(assert (x85 x1764))
(assert (= x2835 (or x2522 x2263)))
(assert (x85 x1673))
(assert (x85 x2487))
(assert (x85 x1742))
(assert (x85 x487))
(assert (= (x921 (x2318 x630 x1905 x2112 x477 x3082)) (x2318 x630 x1905 x2112 x477 x3082)))
(assert (= (x281 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050)) x2850))
(assert (x85 x2128))
(assert (x85 x1523))
(assert (x85 x1193))
(assert (= (and x2984 x964) x2492))
(assert (= (x2530 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) x1471))
(assert (= x681 (x1725 (x1656 x681 x2124 x2754))))
(assert (= x3063 (x281 (x437 x1139 x1846 x136 x918 x1672 x3063))))
(assert (x85 x2237))
(assert (x85 x2133))
(assert (=> (<= x827 10000) (= 0 (x921 x827))))
(assert (x85 x333))
(assert (x85 x1337))
(assert (= (x1311 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957)) x1883))
(assert (= (or x1395 x119) x1175))
(assert (x85 x314))
(assert (=> (<= x648 10000) (= (x921 x648) 0)))
(assert (x85 x2825))
(assert (x85 x2140))
(assert (< (x1656 x296 x2784 x1216) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2476))
(assert (x85 x1501))
(assert (= (x921 (x2318 x2347 x1446 x2570 x2354 x2281)) (x2318 x2347 x1446 x2570 x2354 x2281)))
(assert (x85 x1183))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639747)))
(assert (x85 x2001))
(assert (x85 x2846))
(assert (x85 x1094))
(assert (= (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384) (x921 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (= x384 (x2312 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384))))
(assert (x85 x2405))
(assert (x85 x2712))
(assert (x2690 x2518))
(assert (x85 x397))
(assert (x85 x938))
(assert (x85 x1576))
(assert (x85 x198))
(assert (x85 x128))
(assert (x85 x1266))
(assert (=> (<= x2893 10000) (= 0 (x921 x2893))))
(assert (x85 x194))
(assert (x85 x1295))
(assert (=> (<= x180 10000) (= (x921 x180) 0)))
(assert (x85 x903))
(assert (x85 x257))
(assert (= x693 (x1726 (x2926 x296 x693 x924 x1279))))
(assert (x85 x2899))
(assert (=> (>= 10000 x1405) (= 0 (x921 x1405))))
(assert (x85 x2560))
(assert (= (x921 57896044618658097711785492504343953926634992332820282019728792003956564820036) 0))
(assert (=> (<= x1013 10000) (= (x921 x1013) 0)))
(assert (< (x1612 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1656 x464 x1950 x517) (x921 (x1656 x464 x1950 x517))))
(assert (x85 x1377))
(assert (x85 x684))
(assert (= x2347 (x1725 (x2926 x2347 x2471 x1793 x378))))
(assert (x85 x1582))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639933))
(assert (=> (<= x2248 10000) (= (x921 x2248) 0)))
(assert (x85 x2952))
(assert (=> (<= x2100 10000) (= 0 (x921 x2100))))
(assert (x85 x1437))
(assert (x85 x2359))
(assert (= x2216 (x1087 (x437 x2347 x2061 x2216 x1235 x357 x1070))))
(assert (x85 x1143))
(assert (x85 x724))
(assert (= x789 (x1311 (x2318 x931 x1231 x2343 x1968 x789))))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x2612 (and (not x223) x354)))
(assert (x85 x1014))
(assert (= (=> (= x2291 x1400) x1679) x1272))
(assert (x85 x3128))
(assert (=> (>= 10000 x693) (= 0 (x921 x693))))
(assert (x85 x2005))
(assert (x85 x1648))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)))
(assert (x85 x1366))
(assert (x85 x1255))
(assert (x85 x1197))
(assert (x85 x2526))
(assert (= (or x2686 x2766) x402))
(assert (=> (>= 10000 x386) (= (x921 x386) 0)))
(assert (= (x281 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) x42))
(assert (x85 x211))
(assert (> (x2629 x2347 x1454) 10000))
(assert (> (x437 x1935 x2935 x2372 x2237 x162 x1865) 10000))
(assert (x85 x561))
(assert (x85 x1353))
(assert (= x1849 (x1726 (x1656 x931 x1849 x3103))))
(assert (x85 x2856))
(assert (= (x2530 (x437 x630 x1901 x916 x3131 x2790 x1397)) x3131))
(assert (x85 x2579))
(assert (= x334 (x1726 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x2347 x2471 x1793 x378)))
(assert (= (=> (and (= (x371 x593) x1288) (= (not (> x1288 1)) x1496)) (and x1496 (=> (and (= x2573 x128) (= x1532 x311)) x1484))) x1543))
(assert (x85 x2955))
(assert (x85 x1581))
(assert (x85 x3134))
(assert (x85 x115))
(assert (not (x635 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (x85 x448))
(assert (x85 x2375))
(assert (= (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163) (x921 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (= (=> (and (= (x295 (+ x1491 32)) x1265) (= (x295 (+ x1253 x3101)) x2551) (= x1407 (x295 (+ x3130 32))) (= (x295 (+ x309 32)) x1253) (= (> x1623 0) x348) (= x3101 (mod (* x1623 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1033 (- x309 x858)) x1716) (= (x736 x3130) x1623)) (and (=> (and (not x348) (and (= 0 x1324) (= x1253 x2193) (= x1407 x2972))) x2152) (=> (and (and (= (x295 (+ 32 x2551)) x1372) (= x2444 (x1676 x2412)) (= x60 (x295 (+ 32 x1372))) (= x2029 (x1169 x538)) (= x1580 (x1448 1461501637330902918203684832716283019655932542975 x2444)) (= x2412 (x1676 x1407)) (= x110 (> x676 0)) (= x538 (x295 (+ 32 x1740))) (= x33 (x1217 x1740)) (= (x295 (+ x2412 32)) x1740) (= (x2317 x2029) x676)) x348) (and (=> (not x110) x2380) (=> (and x110 (= x1476 (> x676 32))) (and (=> (not x1476) x2380) (=> (and x1476 (= (< 64 x676) x2330)) (and (=> (not x2330) x2380) (=> (and (= (< 96 x676) x2700) x2330) (and (=> x2700 x1649) (=> (not x2700) x2380))))))))))) x2196))
(assert (= (x1726 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) x2879))
(assert (= (x2530 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) x1285))
(assert (x85 x297))
(assert (x85 x1218))
(assert (=> (>= 10000 x1717) (= (x921 x1717) 0)))
(assert (x85 x1133))
(assert (= x2979 (x2530 (x437 x464 x1717 x363 x2979 x50 x372))))
(assert (x85 x1905))
(assert (= (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064) (x921 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064))))
(assert (= x794 (x281 (x437 x1245 x1844 x44 x2924 x1405 x794))))
(assert (x85 x2685))
(assert (x85 x2276))
(assert (= (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643) (x921 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(assert (x85 x2808))
(assert (x85 x3097))
(assert (x85 x1539))
(assert (=> (>= 10000 x2413) (= 0 (x921 x2413))))
(assert (= x2267 (x2530 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889))))
(assert (x85 x662))
(assert (=> (<= x2068 10000) (= 0 (x921 x2068))))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639905))
(assert (=> (>= 10000 x774) (= 0 (x921 x774))))
(assert (x85 x3100))
(assert (x85 x1542))
(assert (x85 x162))
(assert (=> (>= 10000 x1865) (= (x921 x1865) 0)))
(assert (< 10000 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)))
(assert (not (x635 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302))))
(assert (not (x635 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (x85 x2255))
(assert (= (=> (and (= (x1590 x1489) x1979) (= x1851 (< 0 x1822)) (= (x295 (+ x2930 64)) x1489) (= (x1590 192) x2930) (= x1822 (x1590 x1979))) (and (=> (and (not x1851) (= x858 x838)) x879) (=> (and (and (not (= x838 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x1590 x2051) x1353) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x838) (= (x295 (+ x889 32)) x1526) (= x724 (x295 (+ 32 x838))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x838)) (= x10 (x1590 x2377)) (= (x1590 192) x2074) (<= x838 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x838)) (> x2092 x838) (= (< 0 x540) x2523) (= (x2760 x1313) x540) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x838) (= (x1590 160) x2377) (= (x1590 x2083) x1313) (= (x295 (+ x838 128)) x2092) (= x889 (x295 (+ 32 x724))) (= x2083 (x295 (+ 64 x2074)))) x1851) (and (=> (and (= x2092 x3099) (not x2523)) x1038) (=> (and (and (or (and (= x2134 x874) (not x2266)) (and (and (>= 4294967295 x901) (= x874 1) (<= 32 x901)) x2266)) (and (= (x2760 x1313) x2313) (= x1701 (x2760 x2162)) (>= x2313 1) (= x2162 (x295 (+ x1313 32))) (= (x1448 1461501637330902918203684832716283019655932542975 x1161) x2609) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x901) (= (< 0 x2134) x2266) (>= x901 32) (= (x2760 x1701) x1161) (= (x295 (+ x2092 4)) x2526))) x2523) x4))))) x1321))
(assert (not (x635 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208))))
(assert (not (x635 (x2926 x1245 x1093 x414 x240))))
(assert (x85 x462))
(assert (= (x2530 (x2318 x1139 x1931 x3055 x2971 x2451)) x2971))
(assert (= x1639 (and x694 x422)))
(assert (= x464 (x1725 (x2629 x464 x834))))
(assert (x85 x136))
(assert (x85 x424))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x2001 x1029 x2470 x2301)))
(assert (x85 x1268))
(assert (= (x1087 (x2926 x681 x1538 x2820 x2408)) x2820))
(assert (x85 x425))
(assert (= x1581 (x2530 (x2318 x264 x2049 x2937 x1581 x1212))))
(assert (x85 x2787))
(assert (x85 x2366))
(assert (= x2469 (=> (and (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2228 (x295 (+ 32 x720))) (= (x3155 x1125) x2674) (= (x295 (+ x1125 32)) x3097) (= (x295 (+ 64 x2674)) x2247) (< x1215 x2228) (= x2131 (x1033 (- x67 32))) (= x2228 x1548) (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1215 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x2204 1)) x111) (= (x295 (+ 32 x1325)) x720) (= x1325 (x295 (+ x3097 x2131))) (= (x3155 x3097) x2204) (= (mod (* x111 64) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x67) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x1325))) x2325)))
(assert (=> (>= 10000 x1302) (= 0 (x921 x1302))))
(assert (x85 x732))
(assert (= x2430 (x2530 (x2926 x931 x2676 x984 x2430))))
(assert (= x2751 (x1311 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (x85 x2693))
(assert (=> (<= x21 10000) (= (x921 x21) 0)))
(assert (= (=> (and (= x1364 (x295 (+ x3129 32))) (= x1188 (not (> x1891 4))) (= x1703 (x2543 x3129)) (= (x295 (+ x2857 32)) x2628)) (and (=> (and (= x2628 x1620) (= x1364 x2368) (= x2005 4)) x2207) x1188)) x3091))
(assert (= x2603 (x1726 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (< 10000 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)))
(assert (x85 x2397))
(assert (=> (<= x2643 10000) (= (x921 x2643) 0)))
(assert (x85 x1225))
(assert (=> (<= x2483 10000) (= (x921 x2483) 0)))
(assert (not (x635 (x2926 x2347 x2471 x1793 x378))))
(assert (< 10000 (x1656 x615 x1112 x3064)))
(assert (=> (<= x3131 10000) (= (x921 x3131) 0)))
(assert (x85 x2542))
(assert (= (or x3139 x1682) x2583))
(assert (x85 x1717))
(assert (x85 x415))
(assert (= x1119 (=> (and (= x3134 (x295 (+ x1131 32))) (= x2274 (x295 (+ 31 x3012))) (= (x295 (+ x1593 32)) x138) (= x742 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2274)) (= x626 (x1033 (- x1683 x858))) (= (x76 x1131) x2060) (= x1461 (< 0 x2060)) (= x651 (x295 (+ x3012 x3048))) (= x1683 (x295 (+ x742 x3048))) (= (x295 (+ 32 x1683)) x1734) (= x1491 (x295 (+ x138 32)))) (and (=> x1461 x1626) (=> (and (not x1461) (= x309 x1734)) x2196)))))
(assert (x85 x2993))
(assert (= (x1087 (x1656 x630 x747 x2557)) x2557))
(assert (x85 x2154))
(assert (= x2347 (x1725 (x437 x2347 x2061 x2216 x1235 x357 x1070))))
(assert (= x1546 (x1725 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064))))
(assert (x1842 x2504))
(assert (= x1906 (x1311 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x1770))
(assert (= x2876 (and (not x1591) x1224)))
(assert (x85 x1439))
(assert (x85 x2264))
(assert (x85 x1799))
(assert (x85 x2253))
(assert (= (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365) (x921 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (x85 x677))
(assert (x85 x852))
(assert (=> (<= x2567 10000) (= (x921 x2567) 0)))
(assert (x85 x836))
(assert (x2690 x1737))
(assert (x85 x131))
(assert (=> (>= 10000 x2267) (= 0 (x921 x2267))))
(assert (> (x1656 x264 x1370 x356) 10000))
(assert (=> (>= 10000 x42) (= 0 (x921 x42))))
(assert (=> (>= 10000 x3109) (= 0 (x921 x3109))))
(assert (x85 x782))
(assert (x85 x693))
(assert (x85 x885))
(assert (x85 x1944))
(assert (x85 x1471))
(assert (x85 x2518))
(assert (= x421 (x2530 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (x85 x2046))
(assert (x85 x607))
(assert (x85 x164))
(assert (x85 x701))
(assert (x85 x1769))
(assert (=> (>= 10000 x217) (= 0 (x921 x217))))
(assert (x85 x2785))
(assert (= x264 (x1725 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284))))
(assert (> (x2318 x681 x3149 x2914 x1985 x3109) 10000))
(assert (= (x1725 (x2318 x1687 x2098 x480 x1116 x598)) x1687))
(assert (= (x281 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) x3157))
(assert (x85 x319))
(assert (x85 x2124))
(assert (x85 x1008))
(assert (< (x1656 x1245 x2734 x912) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x200))
(assert (= 0 (x921 2065879269376)))
(assert (x85 x2940))
(assert (x85 x1614))
(assert (x85 x1445))
(assert (x85 x2665))
(assert (=> (<= x880 10000) (= 0 (x921 x880))))
(assert (x85 x2903))
(assert (=> (>= 10000 x1289) (= 0 (x921 x1289))))
(assert (x85 x241))
(assert (x85 x3055))
(assert (x85 x3072))
(assert (x85 x1850))
(assert (= (x921 2189116922) 0))
(assert (= x1510 (and x1158 (not x2637))))
(assert (= x672 (or (and x1196 x711) x2691)))
(assert (x85 x2252))
(assert (x85 x1931))
(assert (= (x1725 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163)) x1245))
(assert (= (or x1223 x1843) x1558))
(assert (x635 37664329658542632380461339884011895550187483938955784695590509376205521682432))
(assert (=> (>= 10000 x2798) (= 0 (x921 x2798))))
(assert (x85 x741))
(assert (x85 x322))
(assert (= x3153 (x1087 (x2926 x1935 x2137 x3153 x2))))
(assert (= (=> (and (= x1528 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1222)) (= (* 128 x2786) x328) (= x919 (+ 32 x3159 x59)) (or (and (= (<= x2779 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2094 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2094 x2779)) (and (> x2779 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094))) (= (x295 (+ x185 32)) x1728) (= (x643 356) x887) (< x2476 x2378) (= x1619 (+ x2400 x1045)) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x279) (<= x279 18446744073709551614)) (= (x295 (+ x279 32)) x2070) (= (+ x2378 32) x3027) (= (x295 (+ 36 x1229)) x2952) (or (<= x279 18446744073709551614) (>= x279 115792089237316195423570985008687907853269984665640564039439137263839420088228)) (= x2109 (x295 (+ 32 x266))) (= (x295 (+ x2070 x262)) x2126) (= (x295 (+ 32 x800)) x1354) (= x2311 (+ 63 x2173)) (= x2404 (x643 x1728)) (= (x295 (+ 31 x1861)) x2779) (<= x2404 18446744073709551615) (= x258 (< 0 x2786)) (= x800 (x295 (+ x2404 x1897))) (= x2114 (+ 63 x1528)) (= (x1033 (- x1445 x328)) x1258) (or (>= 2065879269376 x1229) (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1229)) (= x59 (* 32 x2786)) (= (x295 (+ x1045 x1384)) x783) (<= x279 18446744073709551613) (= (x295 (+ x1354 x262)) x2326) (>= 18446744073709551613 x279) (= x2173 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2810)) (= x1861 (x295 (+ x2743 x2419))) (= (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2114) x432) (>= 18446744073709551614 x279) (>= 18446744073709551615 x262) (<= x279 18446744073709551614) (not (> x2476 x2378)) (= x2786 (x643 x2952)) (= x2400 (+ 32 x2476)) (or (<= x800 18446746139588821027) (>= x800 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (not (> x2326 x2094)) (or (>= 18446746139588821027 x1861) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x1861)) (not (< x2094 x783)) (> x919 x3159) (= x2810 (+ x262 31)) (= (+ x3159 32) x1) (= (x643 132) x1229) (= (x295 (+ 32 x1705)) x266) (= (+ x432 x2476) x2378) (= x3011 (x295 (+ x800 31))) (= (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2311) x2968) (< x2378 x3159) (>= x2476 1) (>= 18446744073709551614 x2476) (= (x643 36) x385) (= x1384 (x295 (+ x1861 32))) (= (x295 (+ x2968 x279)) x2476) (= x1222 (+ 31 x1045)) (>= 18446744073709551614 x279) (>= 18446744073709551615 x2378) (= (+ x3027 32) x2051) (>= 18446744073709551615 x2419) (= x358 (x643 x266)) (or (<= 115792089237316195423570985008687907853269984665640564039439137263839420088228 x279) (>= 18446744073709551614 x279)) (>= x2378 2) (= (x643 x2109) x2208) (>= 1461501637330902918203684832716283019655932542975 x2208) (<= x432 18446744073709551614) (= (x643 x800) x262) (> x2476 x279) (= (x643 x1861) x1045) (not (or (and (<= x1841 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1258)) (and (< x1258 x1841) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1841) (<= x1258 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x2786 18446744073709551615) (= x2419 (x643 x3057)) (= x3159 (+ 224 x2378)) (>= 18446744073709551615 x1045) (or (and (<= x2460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229)) (and (< x1229 x2460) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2460) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229)))) (not (> x279 x2476)) (>= 18446744073709551613 x279) (= (x295 (+ x2952 32)) x1841) (or (and (> x3011 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3011) (<= x2094 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3011 x2094))) (= (x295 (+ x2743 32)) x3057)) (and (=> (and (not x258) (= x1015 x919)) x2671) (=> x258 x1695))) x1426))
(assert (x85 x10))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x1546 x1733)))
(assert (= x2957 (x2056 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (= (and x2304 (not x1022)) x1565))
(assert (= (x281 (x437 x296 x386 x2943 x1680 x2306 x2401)) x2401))
(assert (x85 x2131))
(assert (x85 x279))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x630 x1840 x1916 x2363)))
(assert (x85 x2692))
(assert (= (and (not x3051) x254) x2310))
(assert (= x351 (and x2658 (not x1236))))
(assert (x85 x828))
(assert (= (and x1830 x850) x2588))
(assert (not (x635 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (x85 x1874))
(assert (= x222 (x1311 (x2318 x1546 x1640 x648 x2406 x222))))
(assert (=> (>= 10000 x2024) (= 0 (x921 x2024))))
(assert (= (and x2723 (not x1851)) x2522))
(assert (x85 x1284))
(assert (x85 x2088))
(assert (x85 x1661))
(assert (x85 x681))
(assert (x85 x2852))
(assert (= x2802 (x2530 (x2318 x464 x2385 x1708 x2802 x2915))))
(assert (= x1709 (and x303 x1104)))
(assert (= x931 (x1725 (x2318 x931 x1231 x2343 x1968 x789))))
(assert (=> (>= 10000 x2205) (= (x921 x2205) 0)))
(assert (= x1224 (and x2578 x2607)))
(assert (= x1846 (x1726 (x437 x1139 x1846 x136 x918 x1672 x3063))))
(assert (=> (<= x1291 10000) (= 0 (x921 x1291))))
(assert (= x1139 (x1725 (x2318 x1139 x1931 x3055 x2971 x2451))))
(assert (not (x635 (x437 x1935 x2935 x2372 x2237 x162 x1865))))
(assert (= (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050) (x921 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (x85 x2218))
(assert (x85 x2918))
(assert (= (=> (= (= x1078 0) x303) (and (=> (and (= x1548 x2055) x303) x2325) (=> (not x303) x2529))) x271))
(assert (x85 x2754))
(assert (x85 x305))
(assert (= (x1725 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957)) x464))
(assert (x85 x1151))
(assert (x85 x928))
(assert (> (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903) 10000))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1656 x1687 x2762 x184)))
(assert (x85 x2079))
(assert (x85 x2714))
(assert (= (x1311 (x437 x1546 x1239 x1052 x1912 x461 x2902)) x461))
(assert (= x1793 (x1087 (x2926 x2347 x2471 x1793 x378))))
(assert (= (x1087 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) x1600))
(assert (x85 x1068))
(assert (= (x1311 (x437 x2347 x2061 x2216 x1235 x357 x1070)) x357))
(assert (= 0 (x921 4294967295)))
(assert (= x1395 (and x2739 x1506)))
(assert (x85 x2879))
(assert (x85 x789))
(assert (x85 x848))
(assert (x85 x2323))
(assert (= (=> (and (= (x2332 x2048) x600) (= x1934 (x295 (+ x715 96))) (= (not (< 128 x841)) x2367) (= x2048 (x295 (+ 96 x606)))) (and x2367 x1436)) x1741))
(assert (x85 x2164))
(assert (x85 x2430))
(assert (not (x635 (x2629 x1935 x1071))))
(assert (x85 x1078))
(assert (=> (<= x556 10000) (= (x921 x556) 0)))
(assert (x85 x638))
(assert (= (x2530 (x2318 x630 x1905 x2112 x477 x3082)) x477))
(assert (not (x635 (x1656 x630 x747 x2557))))
(assert (x85 x2166))
(assert (= (x1311 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) x1390))
(assert (x85 x1493))
(assert (= (and x2473 (not x2352)) x1148))
(assert (=> (<= x1139 10000) (= (x921 x1139) 0)))
(assert (x85 x2246))
(assert (x85 x2437))
(assert (x1842 x701))
(assert (x85 x2793))
(assert (= x2470 (x1087 (x2926 x2001 x1029 x2470 x2301))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1656 x464 x1950 x517)))
(assert (= (and x1541 x3061) x1634))
(assert (= (x1725 (x2629 x630 x1201)) x630))
(assert (= x27 (=> (and (= x2764 (x2407 x2655)) (= (x295 (+ 32 x2027)) x890) (= x1648 (x883 x2027)) (= (x1448 1461501637330902918203684832716283019655932542975 x2830) x859) (= x1826 (x295 (+ 32 x1933))) (= x1337 (x2407 x1361)) (= x1933 (x295 (+ x810 32))) (= (x1448 1461501637330902918203684832716283019655932542975 x1161) x457) (= (x295 (+ 32 x2146)) x1218) (= (> x1648 0) x1144) (= x1361 (x295 (+ x1218 32))) (= x1833 (x2407 x1313)) (= (x295 (+ x2411 32)) x596) (= 1 x3023) (= (x295 (+ x2057 64)) x7) (= (x295 (+ 32 x1826)) x1208) (= x2027 (x2407 x7)) (= x2411 (x295 (+ x810 160))) (= x2830 (x2407 x1218)) (= (x2407 x2162) x2057) (= x142 (x295 (+ 32 x1208))) (<= 1 x1833) (= x2655 (x295 (+ 32 x1361))) (= x810 (x295 (+ x1082 4))) (= x982 (x1448 1461501637330902918203684832716283019655932542975 x10))) (and (=> (not x1144) x2853) (=> (and (and (= x1283 (x43 x890)) (= (< 32 x1648) x1153)) x1144) (and (=> (not x1153) x2853) (=> (and (and (= x550 (x295 (+ x890 32))) (= x1614 (x295 (+ 32 x596))) (= (x590 x550) x2148) (= (< 64 x1648) x2459)) x1153) (and (=> (not x2459) x2853) (=> (and (and (= x1327 (< 96 x1648)) (= x2475 (x295 (+ x596 64))) (= x1578 (x295 (+ 64 x890))) (= (x1369 x1578) x1834)) x2459) (and (=> (not x1327) x2853) (=> x1327 x2017)))))))))))
(assert (x85 x3157))
(assert (> (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399) 10000))
(assert (x85 x2447))
(assert (=> (<= x861 10000) (= (x921 x861) 0)))
(assert (< (x2318 x1546 x1640 x648 x2406 x222) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x414))
(assert (x85 x2204))
(assert (x85 x1455))
(assert (< (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1752 10000) (= (x921 x1752) 0)))
(assert (x85 x264))
(assert (x85 x2324))
(assert (x85 x1747))
(assert (=> (<= x1228 10000) (= 0 (x921 x1228))))
(assert (x85 x2421))
(assert (= (x281 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)) x1197))
(assert (x85 x1879))
(assert (x85 x2687))
(assert (x85 x151))
(assert (x1842 x2550))
(assert (x85 x2014))
(assert (= x2687 (x1087 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (= (=> (and (= x2073 (not (> x2177 128))) (= x274 (x295 (+ x1599 96))) (= x195 (x1647 x274)) (= x1718 (x295 (+ 96 x601)))) (and x2073 x1249)) x2976))
(assert (=> (>= 10000 x747) (= 0 (x921 x747))))
(assert (x85 x1556))
(assert (x85 x1336))
(assert (= x2001 (x1725 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (x85 x327))
(assert (x85 x272))
(assert (x85 x531))
(assert (= (=> (and (= x1477 (x3111 x2144)) (= x770 (x295 (+ 32 x2144))) (= x1666 (x295 (+ x495 32))) (= x2528 (not (< 4 x172)))) (and x2528 (=> (and (= x770 x1091) (= x2223 x1666) (= x1944 4)) x3060))) x77))
(assert (= x3139 (and x1105 x2527)))
(assert (x85 x518))
(assert (= x680 (=> (and (= (x967 x1189) x570) (= x658 (x295 (+ x2104 32))) (<= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x115 32)) x1903) (not (= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x295 (+ x658 32)) x228) (= (x1375 x1903) x1596) (= (x295 (+ 32 x2327)) x502) (= (x2832 x2294) x1597) (<= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2818 (x295 (+ x906 32))) (= x1189 (x295 (+ x1903 32))) (= (x687 x906) x848) (= (x295 (+ x1903 64)) x740) (not (= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (>= x848 1) (= x1875 (not (> x1597 1))) (= (x737 x740) x3062) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2104)) (= (x1448 1461501637330902918203684832716283019655932542975 x1596) x1398) (= x1290 (x295 (+ 160 x2104))) (<= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x228 32)) x2327) (> x1290 x2104)) (and x1875 (=> (= x1290 x2645) x1892)))))
(assert (x85 x1032))
(assert (x85 x2702))
(assert (x85 x3090))
(assert (x85 x1710))
(assert (x85 x2098))
(assert (x85 x2820))
(assert (x85 x2162))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x1687 x507 x1289 x226)))
(assert (x85 x2219))
(assert (> (x2318 x2347 x1446 x2570 x2354 x2281) 10000))
(assert (x85 x380))
(assert (x85 x800))
(assert (x85 x22))
(assert (x85 x3129))
(assert (x85 x2647))
(assert (x85 x2609))
(assert (x85 x1440))
(assert (x85 x66))
(assert (x85 x767))
(assert (=> (>= 10000 x2020) (= (x921 x2020) 0)))
(assert (x85 x1182))
(assert (= (x921 (x2629 x264 x2219)) (x2629 x264 x2219)))
(assert (= (x281 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)) x1574))
(assert (x85 x517))
(assert (x85 x38))
(assert (x85 x2303))
(assert (= x2372 (x1087 (x437 x1935 x2935 x2372 x2237 x162 x1865))))
(assert (= (x2530 (x2926 x1687 x507 x1289 x226)) x226))
(assert (x85 x2798))
(assert (= (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2014) (= x252 (* x2212 32)) (= x1458 (x338 x22)) (= (x295 (+ x2014 (mod (+ 32 x252) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x497) (<= x2212 18446744073709551615) (<= x2014 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x338 x1458) x2212) (= x1566 (= x2212 0)) (<= x2014 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x497 x2014) (<= 1 x497)) (or x1566 (and (not x1566) (and (= (* x2212 32) x1638) (= x2145 (x295 (+ x2014 32))))))) x2095) x455))
(assert (x85 x1173))
(assert (x85 x1836))
(assert (x85 x1131))
(assert (x85 x2496))
(assert (x85 x1998))
(assert (= x3020 (x1726 (x2318 x1935 x3020 x2002 x2934 x2283))))
(assert (= (x921 (x2318 x1245 x1006 x2011 x1341 x1825)) (x2318 x1245 x1006 x2011 x1341 x1825)))
(assert (x85 x1900))
(assert (x85 x1029))
(assert (= (x2530 (x437 x1687 x2636 x1818 x1494 x143 x1727)) x1494))
(assert (x85 x2183))
(assert (=> (>= 10000 x1916) (= (x921 x1916) 0)))
(assert (=> (>= 10000 x905) (= 0 (x921 x905))))
(assert (x85 x482))
(assert (x85 x2481))
(assert (= (x921 18446744073709551614) 0))
(assert (> (x2926 x464 x1921 x2938 x2495) 10000))
(assert (x85 x2715))
(assert (x85 x3021))
(assert (x85 x2552))
(assert (x85 x416))
(assert (x85 x2321))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x264 x2049 x2937 x1581 x1212)))
(assert (= (x1726 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200)) x241))
(assert (x85 x1472))
(assert (= (x2530 (x2318 x615 x893 x401 x1332 x1991)) x1332))
(assert (x85 x2875))
(assert (x85 x1985))
(assert (=> (>= 10000 x677) (= (x921 x677) 0)))
(assert (x85 x2697))
(assert (= x2301 (x2530 (x2926 x2001 x1029 x2470 x2301))))
(assert (= (and x1646 x2492) x603))
(assert (=> (>= 10000 x1818) (= (x921 x1818) 0)))
(assert (x85 x3087))
(assert (x85 x2114))
(assert (x85 x2145))
(assert (x85 x298))
(assert (= (or x449 x444) x2717))
(assert (x85 x2371))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x931 x193 x2860 x1089 x2068 x1009)))
(assert (x85 x7))
(assert (x85 x2103))
(assert (x85 x1568))
(assert (=> (>= 10000 x367) (= (x921 x367) 0)))
(assert (=> (>= 10000 x681) (= 0 (x921 x681))))
(assert (= (x921 57896044618658097711785492504343953926418782139537452191302581570759080747168) 0))
(assert (< (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2318 x264 x2049 x2937 x1581 x1212) (x921 (x2318 x264 x2049 x2937 x1581 x1212))))
(assert (= (and x2125 x539) x1368))
(assert (x85 x2858))
(assert (=> (<= x2343 10000) (= (x921 x2343) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x681 x942)))
(assert (x85 x793))
(assert (= (and x1153 x689) x3073))
(assert (= x2347 (x1725 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x85 x2603))
(assert (x85 x2756))
(assert (= x1192 (x1726 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050))))
(assert (=> (>= 10000 x3055) (= (x921 x3055) 0)))
(assert (x85 x1354))
(assert (x85 x784))
(assert (x85 x862))
(assert (x85 x2364))
(assert (x85 x2915))
(assert (=> (>= 10000 x221) (= 0 (x921 x221))))
(assert (x85 x987))
(assert (x85 x103))
(assert (x85 x1464))
(assert (x85 x2475))
(assert (x85 x1522))
(assert (x85 x526))
(assert (= (x1725 (x2926 x1139 x1335 x367 x2090)) x1139))
(assert (x85 x2517))
(assert (x85 x1786))
(assert (= (x2056 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)) x2905))
(assert (x85 x2806))
(assert (= x689 (and x141 x1144)))
(assert (< (x437 x1245 x1844 x44 x2924 x1405 x794) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1256))
(assert (x85 x3039))
(assert (x85 x715))
(assert (= (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589) (x921 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (x85 x2814))
(assert (=> (>= 10000 x2831) (= (x921 x2831) 0)))
(assert (x85 x2763))
(assert (x85 x1570))
(assert (< (x2926 x264 x409 x556 x1785) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2818))
(assert (= x888 (x281 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (= x2347 (x1725 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208))))
(assert (=> (>= 10000 x2750) (= (x921 x2750) 0)))
(assert (not (x635 (x2318 x464 x2385 x1708 x2802 x2915))))
(assert (x85 x251))
(assert (x85 x100))
(assert (x85 x2285))
(assert (x2690 x809))
(assert (x85 x613))
(assert (= x3103 (x1087 (x1656 x931 x1849 x3103))))
(assert (x85 x818))
(assert (=> (>= 10000 x1733) (= 0 (x921 x1733))))
(assert (not (x635 (x1612 0))))
(assert (=> (>= 10000 x1517) (= (x921 x1517) 0)))
(assert (=> (>= 10000 x1143) (= 0 (x921 x1143))))
(assert (> (x1656 x1546 x2303 x860) 10000))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (=> (<= x579 10000) (= 0 (x921 x579))))
(assert (x85 x1600))
(assert (= x1601 (x2056 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (not (x635 (x2318 x630 x1905 x2112 x477 x3082))))
(assert (= (x1656 x1687 x2762 x184) (x921 (x1656 x1687 x2762 x184))))
(assert (x85 x2802))
(assert (x85 x1082))
(assert (=> (>= 10000 x453) (= 0 (x921 x453))))
(assert (x85 x2427))
(assert (= x747 (x1726 (x1656 x630 x747 x2557))))
(assert (x85 x2732))
(assert (x85 x813))
(assert (x85 x340))
(assert (x85 x1384))
(assert (x85 x2365))
(assert (not (x635 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903))))
(assert (=> (<= x1556 10000) (= 0 (x921 x1556))))
(assert (= x534 (x1087 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (x85 x956))
(assert (= x2303 (x1726 (x1656 x1546 x2303 x860))))
(assert (= (x2530 (x2945 x681 x452 x534 x929 x2751 x888 x3141)) x929))
(assert (x85 x2877))
(assert (x85 x1708))
(assert (x85 x3137))
(assert (= x2804 (and (not x2911) x2392)))
(assert (x85 x2913))
(assert (= 0 (x921 2065879269316)))
(assert (= x2160 (x2530 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200))))
(assert (= (=> (and (= (< 0 x1686) x637) (= (x1140 x853) x1686) (= x853 (x1140 x210))) (and (=> (and (not x637) (= x3123 x1516)) x3136) (=> (and x637 (and (= x773 (x295 (+ 32 x2447))) (= x2447 (x295 (+ x1516 32))) (= (x1140 x1257) x256) (= x2115 (x1140 x2737)) (= x1331 (x295 (+ 32 x773))) (= (> x841 0) x2838) (= x1355 (x295 (+ 32 x1331))) (= (x295 (+ 32 x1257)) x373) (= x1696 (x1140 x370)) (= (x295 (+ 32 x370)) x2737) (= (x295 (+ 32 x1595)) x370) (= x2455 (x1448 1461501637330902918203684832716283019655932542975 x2839)) (= x2839 (x1140 x1595)) (= (x1140 x210) x1257) (= x1595 (x1140 x373)) (= (x295 (+ x2714 32)) x715) (<= 1 x256) (= x606 (x295 (+ 32 x2115))) (= (x295 (+ 128 x2447)) x2714) (= (x2082 x2115) x841))) (and (=> (and (and (= x331 (> x841 32)) (= (x2273 x606) x2983)) x2838) (and (=> (and x331 (and (= x2607 (< 64 x841)) (= x2517 (x295 (+ x715 32))) (= x1990 (x2198 x2031)) (= (x295 (+ 32 x606)) x2031))) (and (=> (and x2607 (and (= (> x841 96) x1591) (= (x295 (+ 64 x606)) x1828) (= (x295 (+ x715 64)) x622) (= (x565 x1828) x2487))) (and (=> x1591 x1741) (=> (not x1591) x1436))) (=> (not x2607) x1436))) (=> (not x331) x1436))) (=> (not x2838) x1436))))) x1026))
(assert (x85 x981))
(assert (=> (>= 10000 x1052) (= (x921 x1052) 0)))
(assert (x85 x1331))
(assert (=> (>= 10000 x2011) (= 0 (x921 x2011))))
(assert (x85 x1139))
(assert (x85 x2415))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x85 x2755))
(assert (=> (<= x2914 10000) (= (x921 x2914) 0)))
(assert (x85 x381))
(assert (= x1254 (x2312 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (< (x2318 x1139 x1931 x3055 x2971 x2451) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1725 (x2926 x615 x2963 x2980 x1650)) x615))
(assert (< 10000 (x2318 x615 x893 x401 x1332 x1991)))
(assert (=> (<= x3021 10000) (= 0 (x921 x3021))))
(assert (x85 x2353))
(assert (x85 x2535))
(assert (x85 x2655))
(assert (x85 x2498))
(assert (x85 x1657))
(assert (= x2001 (x1725 (x2926 x2001 x1029 x2470 x2301))))
(assert (=> (>= 10000 x834) (= 0 (x921 x834))))
(assert (= x1252 (and x605 x2540)))
(assert (< 10000 (x437 x2001 x2798 x2918 x774 x1456 x1268)))
(assert (= (x437 x1687 x2636 x1818 x1494 x143 x1727) (x921 (x437 x1687 x2636 x1818 x1494 x143 x1727))))
(assert (< (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2651))
(assert (x85 x3009))
(assert (x85 x1571))
(assert (x85 x199))
(assert (x85 x2398))
(assert (= (x2530 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)) x2044))
(assert (= (x1726 (x2926 x2001 x1029 x2470 x2301)) x1029))
(assert (= x2163 (x2056 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (=> (>= 10000 x2466) (= (x921 x2466) 0)))
(assert (x85 x951))
(assert (x85 x469))
(assert (x85 x299))
(assert (x85 x249))
(assert (= (x1726 (x2926 x1546 x1971 x78 x2333)) x1971))
(assert (= (x1725 (x2318 x681 x3149 x2914 x1985 x3109)) x681))
(assert (= (x2530 (x2318 x1245 x1006 x2011 x1341 x1825)) x1341))
(assert (x85 x1754))
(assert (x85 x476))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)))
(assert (x85 x1340))
(assert (= (x2926 x1687 x507 x1289 x226) (x921 (x2926 x1687 x507 x1289 x226))))
(assert (x85 x2555))
(assert (x85 x1852))
(assert (x85 x387))
(assert (= (x921 57896044618658097711785492504343953926634992332820282019728792003956564819968) 0))
(assert (x85 x2638))
(assert (x85 x1093))
(assert (x85 x1618))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639832))
(assert (x85 x771))
(assert (= (or x2733 x2704) x207))
(assert (x85 x3102))
(assert (=> (>= 10000 x1589) (= (x921 x1589) 0)))
(assert (=> (>= 10000 x1089) (= 0 (x921 x1089))))
(assert (x85 x500))
(assert (= 0 (x921 77929798818658108206329458850487298488570292587025318323788629963054520467456)))
(assert (x1842 x749))
(assert (x85 x1578))
(assert (x85 x205))
(assert (= (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399) (x921 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (not (x635 (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200))))
(assert (x85 x361))
(assert (x85 x1208))
(assert (= x670 (or x159 x2190)))
(assert (= x1795 (or x270 x2309)))
(assert (x85 x2226))
(assert (= (and (not x2507) x350) x108))
(assert (x85 x2537))
(assert (= x2683 (=> (and (= (not (> x1514 1)) x940) (= x1514 (x555 x934))) (and x1928 x940))))
(assert (= (and x2675 x3106) x1867))
(assert (x2690 x2941))
(assert (= (x1087 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)) x1721))
(assert (= x2847 (and x1915 x2656)))
(assert (= x1825 (x1311 (x2318 x1245 x1006 x2011 x1341 x1825))))
(assert (x85 x843))
(assert (= x3141 (x2056 (x2945 x681 x452 x534 x929 x2751 x888 x3141))))
(assert (x2690 x1222))
(assert (x85 x1934))
(assert (=> (>= 10000 x1381) (= 0 (x921 x1381))))
(assert (x85 x746))
(assert (x85 x881))
(assert (=> (<= x3149 10000) (= (x921 x3149) 0)))
(assert (x85 x2544))
(assert (x1842 x3069))
(assert (x85 x2028))
(assert (< 10000 (x2926 66 x3059 x2040 x677)))
(assert (= 0 (x921 30450320296159908085414496432607297912280636920234228256796789313041262968832)))
(assert (x85 x23))
(assert (x85 x1036))
(assert (x85 x965))
(assert (x85 x1831))
(assert (< (x2629 x931 x3030) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2065))
(assert (= x2112 (x1087 (x2318 x630 x1905 x2112 x477 x3082))))
(assert (= x1844 (x1726 (x437 x1245 x1844 x44 x2924 x1405 x794))))
(assert (= 0 (x921 79228162514264337593543950336)))
(assert (x85 x3099))
(assert (= (x1725 (x1656 x2001 x1228 x1936)) x2001))
(assert (x85 x400))
(assert (x85 x1952))
(assert (x85 x1502))
(assert (x85 x143))
(assert (x85 x571))
(assert (x85 x622))
(assert (x85 x2593))
(assert (= (x1725 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399)) x1687))
(assert (= (x921 (x1656 64 x1760 1)) (x1656 64 x1760 1)))
(assert (= (x1726 (x165 x1546 x2778 x744 x974 x483 x2175 x2243 x1064)) x2778))
(assert (= x903 (x2312 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903))))
(assert (x85 x1135))
(assert (x85 x1511))
(assert (x85 x2894))
(assert (x85 x2105))
(assert (x85 x697))
(assert (x85 x1237))
(assert (x85 x2765))
(assert (x85 x1520))
(assert (x85 x2645))
(assert (= x648 (x1087 (x2318 x1546 x1640 x648 x2406 x222))))
(assert (= (x1725 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) x1546))
(assert (x85 x1219))
(assert (=> (<= x264 10000) (= (x921 x264) 0)))
(assert (= x3080 (x1726 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885))))
(assert (x85 x1067))
(assert (x635 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x85 x2173))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x681 x3149 x2914 x1985 x3109)))
(assert (x85 x1809))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x296 x693 x924 x1279)))
(assert (x85 x1302))
(assert (x85 x2823))
(assert (< (x437 x464 x1717 x363 x2979 x50 x372) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x401 (x1087 (x2318 x615 x893 x401 x1332 x1991))))
(assert (x85 x3150))
(assert (x85 x2157))
(assert (x85 x1635))
(assert (x85 x683))
(assert (x85 x630))
(assert (=> (>= 10000 x384) (= (x921 x384) 0)))
(assert (= (and x104 x1549) x2883))
(assert (x85 x2180))
(assert (x85 x1505))
(assert (x85 x1782))
(assert (x85 x126))
(assert (x85 x3043))
(assert (x85 x1667))
(assert (= x2938 (x1087 (x2926 x464 x1921 x2938 x2495))))
(assert (= x1268 (x281 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (=> (>= 10000 x2465) (= (x921 x2465) 0)))
(assert (=> (>= 10000 x2995) (= 0 (x921 x2995))))
(assert (= (x921 (x2318 x931 x1231 x2343 x1968 x789)) (x2318 x931 x1231 x2343 x1968 x789)))
(assert (= x605 (or x1941 x926)))
(assert (x85 x2708))
(assert (x85 x2906))
(assert (x85 x288))
(assert (x85 x2910))
(assert (x85 x2231))
(assert (x85 x3120))
(assert (x85 x206))
(assert (x85 x1903))
(assert (x85 x2509))
(assert (= (x675 x273 248) (div x273 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x85 x2158))
(assert (< 10000 (x1656 x630 x747 x2557)))
(assert (= (x1311 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)) x2402))
(assert (x85 x39))
(assert (x85 x278))
(assert (= x1291 (x1087 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644))))
(assert (x85 x1127))
(assert (=> (>= 10000 x528) (= (x921 x528) 0)))
(assert (=> (<= x2408 10000) (= 0 (x921 x2408))))
(assert (x85 x2939))
(assert (= (x2530 (x2318 x681 x3149 x2914 x1985 x3109)) x1985))
(assert (x85 x636))
(assert (= x1051 (=> (and (and (<= 1 x2180) (= x2180 (x2769 x769)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x769) (= (< 0 x1527) x618) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x169) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x769) (= x1983 (x1448 1461501637330902918203684832716283019655932542975 x749)) (not (= x769 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (<= 32 x169) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x769) (<= 1 x456) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x769)) (< x769 x1552) (= x1564 (x295 (+ x1552 4))) (= (x295 (+ x769 32)) x1552) (= x2706 (x1448 1461501637330902918203684832716283019655932542975 x1587)) (not (= x769 115792089237316195423570985008687907853269984665640564039457584007913129639904))) (or (and x618 (and (>= 4294967295 x169) (>= x169 32) (= 1 x290))) (and (= x290 x1527) (not x618)))) x1922)))
(assert (x85 x1737))
(assert (x85 x1291))
(assert (= x68 (and (not x1220) x1778)))
(assert (x85 x2044))
(assert (=> (>= 10000 x1650) (= (x921 x1650) 0)))
(assert (= x1044 (or x745 x1049)))
(assert (x85 x2011))
(assert (x85 x118))
(assert (x2230 x2311))
(assert (x85 x920))
(assert (x85 x664))
(assert (x85 x1720))
(assert (x85 x1370))
(assert (x85 x366))
(assert (= (x1311 (x437 x1687 x2636 x1818 x1494 x143 x1727)) x143))
(assert (= x464 (x1725 (x1656 x464 x1950 x517))))
(assert (x85 x644))
(assert (x2690 x2920))
(assert (x85 x939))
(assert (x85 x2150))
(assert (x85 x265))
(assert (not (x635 (x1656 x931 x1849 x3103))))
(assert (x85 x1361))
(assert (=> (<= x1138 10000) (= 0 (x921 x1138))))
(assert (not (x635 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388))))
(assert (not (x635 (x2926 x1935 x2137 x3153 x2))))
(assert (x85 x452))
(assert (x85 x2448))
(assert (=> (<= x226 10000) (= 0 (x921 x226))))
(assert (x85 x2930))
(assert (=> (<= x536 10000) (= 0 (x921 x536))))
(assert (=> (<= x2219 10000) (= 0 (x921 x2219))))
(assert (=> (<= x357 10000) (= (x921 x357) 0)))
(assert (not (x635 (x437 x630 x1901 x916 x3131 x2790 x1397))))
(assert (not (x635 (x2629 x931 x3030))))
(assert (x85 x1055))
(assert (x85 x2247))
(assert (x85 x1822))
(assert (x85 x1854))
(assert (= (and x2630 x781) x764))
(assert (x85 x196))
(assert (x85 x2199))
(assert (x85 x2494))
(assert (x85 x3146))
(assert (x1842 x255))
(assert (x85 x1839))
(assert (x85 x576))
(assert (x85 x329))
(assert (=> (>= 10000 x516) (= (x921 x516) 0)))
(assert (x635 95932229227554293267862761608555258089024927314852490146714677558661980618752))
(assert (x85 x1483))
(assert (x85 x1881))
(assert (x635 18446744073709551167))
(assert (=> (>= 10000 x2365) (= (x921 x2365) 0)))
(assert (not (x635 (x2926 x630 x1840 x1916 x2363))))
(assert (x85 x1824))
(assert (x85 x1037))
(assert (x85 x1172))
(assert (= (x2926 x681 x1538 x2820 x2408) (x921 (x2926 x681 x1538 x2820 x2408))))
(assert (x2690 x302))
(assert (= (x1725 (x437 x296 x386 x2943 x1680 x2306 x2401)) x296))
(assert (= x644 (x2056 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72))))
(assert (x85 x1796))
(assert (= (=> (and (and (and (and (= x278 32) (= x2493 false) (= x1073 x36) (= x1878 false) (= x525 x650) (>= 2065879269444 x1445) (= false x1251) (<= 676 x1445) (= x1073 (x666 x2269)) (= (x2862 x2682) x650) (>= 127 x2252) (= (x1027 x927) x259) (>= x2873 1) (= (x1656 64 x1760 1) x2682) (= (x2449 x2269) x2873) (>= 127 x2252) (= false x2201) (= x1746 x927) (= false x485) (= x1462 false) (= 1889567281 x2730)) (and (and (and (= x2519 x1310) (and (and (= x2602 x1746) (and (= x3148 x2458) (and (and (>= 127 x2566) (= x2887 (x2182 x579)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x851) (= 37664329658542632380461339884011895550187483938955784695590509376205521682432 x415) (= x2409 2189116922) (= x1127 x2887) (= x1746 x1824) (>= 127 x2566) (= x2515 37664329658542632380461339884011895550187483938955784695590509376205521682432) (= (> x2768 0) x403) (<= x2299 1461501637330902918203684832716283019655932542975) (= 128 x1753) (= (x2449 x579) x2669) (= x2280 (x324 x1824)) (= false x755) (= x167 false) (>= x2669 1) (>= x851 32)) (or (and (not x403) (= x561 x2768)) (and (and (= x561 1) (<= x851 4294967295) (>= x851 32)) x403))))) (and (= x1240 x1445) (= x2427 x18) (= x599 false)))) (and (= x1667 (* 32 x1994)) (>= 134217728 x2964) (= x932 (- x2785 36)) (= (+ x204 32 x2349) x2785) (= x448 (+ x2420 32)) (= x1874 x1536) (= x1240 (+ x2785 32 x1667)) (= x529 x2346) (<= x1536 x204) (= x1211 (* 32 (- x2964 1))) (= x1340 (* x1075 128)) (= x1571 (+ 32 x2349)) (= x3089 (* x645 160)) (= x2436 (* x607 160)) (= (* x2964 32) x204) (= x2344 (+ x1340 420)) (= x2349 (+ x2436 x2420 32)) (= (+ 32 x2344) x1475) (<= 0 x2964) (= x2420 (+ 32 x2344 x3089)) (> x1536 x1211) (= (- x2344 36) x2618) (= x2103 (- x2349 36)) (= (+ x2785 32) x728) (= x2977 (- x2420 36)))) (= x2359 x776))) (and (= x1806 x1760) (= false x790))) (and (= x1137 (> (x2449 x488) 0)) (= (< 0 (x2449 x1256)) x2006) (not (= x2269 x488)) (= 0 x795) (<= 0 x2519) (<= 0 x2458) (not (= x579 x1170)) x2036 (>= 1461501637330902918203684832716283019655932542975 x2269) (>= 1461501637330902918203684832716283019655932542975 x161) (<= x1994 4294967295) (not (= x161 x1256)) (>= x579 1) (= (< 0 (x2449 x2269)) x704) (not (= x161 x1170)) (>= x1170 1) (<= x470 1461501637330902918203684832716283019655932542975) (<= 1 x1090) (<= x335 1461501637330902918203684832716283019655932542975) (= x1414 0) (= (= x1794 x2269) x1392) (not (= x217 x1256)) (>= 1461501637330902918203684832716283019655932542975 x1170) (not (= x516 x1170)) (not (= x579 x516)) (<= x2462 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1746 1461501637330902918203684832716283019655932542975) x2006 (= x488 x1806) (not (= x2269 x1170)) (not (= x579 x488)) (not (= x1256 x579)) (not (= x516 x217)) (>= 1461501637330902918203684832716283019655932542975 x1420) (not (= x488 x161)) (<= x1783 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x516 x488)) (= x2489 36) (<= 1 x2990) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x18) x1773 (<= x607 4294967295) (not (= x2269 x516)) (>= x2521 0) (<= 1 x217) (>= x202 0) (not (= x488 x1256)) (<= 1 x161) (<= x579 1461501637330902918203684832716283019655932542975) (not (= x579 x2269)) (<= x3145 4294967295) (<= x1794 1461501637330902918203684832716283019655932542975) (<= 0 x2462) (not (= x161 x217)) (not (= x1256 x516)) (>= x776 0) (= x1090 x1170) (>= x1099 0) (= (> (x2449 x161) 0) x1773) (not (= x1170 x1256)) (= (< 0 (x2449 x516)) x343) (<= x1099 1461501637330902918203684832716283019655932542975) (<= x1482 4294967295) (<= x767 1461501637330902918203684832716283019655932542975) (>= x488 1) x1315 (not (= x2269 x161)) (= x74 x2269) (<= 1 x1256) x343 (= x488 x2990) x1137 (<= x2990 1461501637330902918203684832716283019655932542975) x704 (not (= x579 x217)) (= x1315 (> (x2449 x217) 0)) (not (= x161 x579)) (not (= x2269 x217)) (>= 1461501637330902918203684832716283019655932542975 x217) (>= x1794 1) (<= x1075 4294967295) (>= 4294967295 x645) (>= x1783 0) x971 (>= x1884 0) (= (x2240 32) x1794) (>= x2269 1) (not (= x488 x217)) (not (= x217 x1170)) (>= x516 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2521) (not (= x516 x161)) (<= x202 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2346 1461501637330902918203684832716283019655932542975) (<= 0 x18) (<= 0 x2346) (>= 1461501637330902918203684832716283019655932542975 x1090) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1884) x1392 (= x2036 (< 0 (x2449 x1170))) (<= x1874 4294967295) (>= 1461501637330902918203684832716283019655932542975 x488) (>= x470 0) (<= x776 1461501637330902918203684832716283019655932542975) (= x971 (< 0 (x2449 x579))) (= x1420 x217) (>= x1420 1) (>= x3145 64) (not (= x488 x1170)) (<= 0 x1746) (<= x2519 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1256 x2269)) (>= 1461501637330902918203684832716283019655932542975 x516) (<= x1256 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2458) (<= 1 x1075) (<= x28 4294967295))) x2912) x289))
(assert (x85 x339))
(assert (x2690 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x984) (= 0 (x921 x984))))
(assert (x85 x927))
(assert (x85 x335))
(assert (x2690 x701))
(assert (=> (>= 10000 x2498) (= (x921 x2498) 0)))
(assert (x85 x2941))
(assert (=> (>= 10000 x3117) (= (x921 x3117) 0)))
(assert (= (x921 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254)) (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254)))
(assert (x2690 x2839))
(assert (= (x921 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)))
(assert (x85 x2632))
(assert (x85 x1234))
(assert (= (=> (= (not (> x676 128)) x2869) (and x2380 x2869)) x1649))
(assert (= (and (not x1327) x2559) x2432))
(assert (x85 x493))
(assert (x85 x1444))
(assert (= (x1087 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) x2750))
(assert (x85 x747))
(assert (x2230 x1222))
(assert (x85 x706))
(assert (x85 x382))
(assert (x85 x752))
(assert (x85 x144))
(assert (x85 x1041))
(assert (x85 x161))
(assert (x85 x801))
(assert (> (x1656 x2347 x2982 x843) 10000))
(assert (x85 x2857))
(assert (x85 x2020))
(assert (=> (<= x48 10000) (= 0 (x921 x48))))
(assert (x85 x976))
(assert (x85 x1716))
(assert (= x2881 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2291) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2291) (= (x295 (+ 64 x2291)) x2587) (= (x295 (+ x2715 32)) x1267) (not (= x2291 115792089237316195423570985008687907853269984665640564039457584007913129639872)) (= (x1689 x1267) x818) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2291)) (> x2587 x2291) (= x2410 (not (> x1742 1))) (= (x1689 x2715) x1464) (<= 1 x1553) (= (x2418 x2203) x1553) (<= x2291 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1929 (x295 (+ x2203 32))) (= x2715 (x295 (+ 32 x580))) (= x387 (x295 (+ x2291 32))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639872 x2291))) (and (=> (= x838 x2587) x2468) x2410))))
(assert (x85 x1385))
(assert (x85 x1250))
(assert (x85 x1731))
(assert (x85 x1101))
(assert (= x1538 (x1726 (x2926 x681 x1538 x2820 x2408))))
(assert (x85 x2084))
(assert (=> (>= 10000 x885) (= (x921 x885) 0)))
(assert (= x1030 (=> (and (= (ite (= 0 x2756) 1 0) x953) (>= 2 x2756) (= x1010 (= 0 x953))) (and (=> (and x1010 (and (= x2749 (ite (= 1 x2756) 1 0)) (= (= x2749 0) x1622))) (and (=> (and (not x1622) (and (= x364 (x371 x2294)) (= x1046 0) (= x216 (> x364 0)))) (and (=> (and (and (= 0 x2620) (= x69 0) (= x2104 x1923)) (not x216)) x420) (=> (and x216 (and (= x422 (= 0 x1320)) (= (x295 (+ 32 x2294)) x451) (= (x371 x2294) x871) (= (ite (= x93 2) 1 0) x1320) (>= x871 1) (= x284 (x371 x451)) (<= x93 5) (= x93 (x371 x284)))) (and (=> (and x422 (and (or (and (and (= x1880 1) (= x153 1) (= 1 x780) (= x2821 0) (= x2142 2) (= x1900 (x371 x284)) (= 1 x1900)) x803) (and (not x803) (and (= 0 x780) (= 1 x2142) (= x2821 1) (= 0 x153)))) (and (= (= 0 x1059) x803) (= (x371 x284) x2617) (= x1059 (ite (= x2617 3) 1 0)) (<= x2617 5)))) x368) (=> (and (and (= x920 0) (= 1 x1542) (= 0 x1459) (= 0 x101)) (not x422)) x1847))))) (=> (and (and (= 0 x397) (= x397 (x371 x2294)) (= x2756 2) (= x223 (< 0 x2351)) (= x147 1) (= (x371 x593) x2351)) x1622) (and (=> (and (and (= 0 x311) (= x2573 0)) (not x223)) x1484) (=> (and (and (= x2065 (x371 x2478)) (= (x371 x2895) x2478) (= x797 (x371 x593)) (>= x797 1) (= (x295 (+ x593 32)) x2895) (= x1236 (= 0 x1282)) (<= x2065 5) (= x1282 (ite (= x2065 1) 1 0))) x223) (and (=> (and x1236 (and (and (= x1105 (> x2670 0)) (= (ite (= 2 x2843) 1 0) x2670) (<= x2843 5) (= x2843 (x371 x2478))) (or (and (and (= 3 x943) (= x1943 1) (= (x371 x2478) x943)) (not x1105)) (and x1105 (= 1 x2670))))) x1976) (=> (and (not x1236) (and (= x1532 0) (= 1 x128))) x1543))))))) (=> (and (not x1010) (and (= x2576 (> x1993 0)) (>= x2472 1) (= x766 0) (= (x371 x2294) x2472) (= x1993 (x371 x2294)))) (and (=> (and (and (and (<= x2128 5) (>= x1003 1) (= (= 0 x1545) x3067) (= x1545 (ite (= 2 x2128) 1 0)) (= x1869 (x295 (+ x2294 32))) (= (x371 x1869) x115) (= x2128 (x371 x115)) (= (x371 x2294) x1003)) (or (and (= x1652 0) (not x3067)) (and x3067 (and (= 1 x1652) (= x1624 (x371 x115)) (= x1184 1) (= 3 x1624))))) x2576) x680) (=> (and (not x2576) (= x2104 x2645)) x1892)))))))
(assert (x85 x255))
(assert (< 10000 (x2945 x615 x1094 x229 x134 x2348 x827 x660)))
(assert (x85 x900))
(assert (= (x921 (x1656 x1546 x2303 x860)) (x1656 x1546 x2303 x860)))
(assert (x1842 x1596))
(assert (=> (>= 10000 x482) (= 0 (x921 x482))))
(assert (= x129 (and x3073 (not x2459))))
(assert (= (or x2432 x1914 x2169 x129 x1039) x3127))
(assert (= x2306 (x1311 (x437 x296 x386 x2943 x1680 x2306 x2401))))
(assert (x85 x2401))
(assert (x85 x2843))
(assert (x85 x133))
(assert (x85 x1057))
(assert (x85 x253))
(assert (x85 x70))
(assert (x85 x2109))
(assert (x85 x937))
(assert (= x1687 (x1725 (x437 x1687 x2636 x1818 x1494 x143 x1727))))
(assert (x85 x2895))
(assert (x85 x1111))
(assert (x85 x513))
(assert (x85 x2550))
(assert (x85 x1475))
(assert (= x1506 (or x2662 x1126)))
(assert (x85 x2807))
(assert (x85 x1018))
(assert (x85 x1204))
(assert (x85 x1365))
(assert (=> (>= 10000 x2319) (= (x921 x2319) 0)))
(assert (= x2413 (x2312 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413))))
(assert (=> (>= 10000 x994) (= (x921 x994) 0)))
(assert (= x1307 (and x2523 x57)))
(assert (x85 x390))
(assert (x85 x315))
(assert (= x2742 (=> (and (= x466 (x295 (+ 32 x1879))) (= (x1665 x2974) x3096) (= (x1033 (- x3126 32)) x2221) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1879)) (= (x1665 160) x2974) (< x1879 x639) (= (x1665 x2015) x809) (= (x1665 256) x817) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1879) (= x2415 (x1448 1461501637330902918203684832716283019655932542975 x3096)) (= x3126 (x1033 (- x639 x1879))) (= x329 (x295 (+ 32 x1879))) (>= 1461501637330902918203684832716283019655932542975 x1996) (>= 1461501637330902918203684832716283019655932542975 x960) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1879) (= (x1448 1461501637330902918203684832716283019655932542975 x817) x1277) (= (x1665 224) x2848) (= x2761 (>= 224 x2001)) (= (x643 68) x1996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1879) (= x2001 (x300 x1879)) (not (= x1879 115792089237316195423570985008687907853269984665640564039457584007913129639840)) (= x369 (+ x2015 32)) (= (x295 (+ x466 64)) x639) (= (+ x2542 32) x2015) (= (x1448 1461501637330902918203684832716283019655932542975 x809) x2249) (= x960 (x643 100)) (= x2827 (x295 (+ x466 32))) (not (> x3148 x2848)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639840 x1879)) (= x2249 x1277)) (and (=> (and (or x2637 (and (not x2637) (and (= (x295 (+ 32 x639)) x2239) (= x524 (* 32 x2641))))) (and (= x1278 (x300 x329)) (= x374 (x295 (+ 32 x329))) (= x2186 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050)) (= x2600 (x295 (+ 32 x329))) (= (x300 x179) x3029) (= x2850 (x300 x1757)) (= (x295 (+ 64 x329)) x732) (> x1516 x639) (= (x295 (+ x329 64)) x802) (= (x300 x1365) x774) (= x862 (x295 (+ 32 x329))) (= x2913 (* x2641 32)) (= (x300 x329) x1556) (= (x295 (+ x329 96)) x179) (= (x295 (+ (mod (+ 32 x2913) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x639)) x1516) (= x1895 (x300 x24)) (= (x295 (+ 96 x329)) x1756) (= x826 (x300 x327)) (= (x300 x472) x2918) (= (x300 x329) x2374) (= (x300 192) x2079) (= x1268 (x300 x3046)) (= (x295 (+ x329 64)) x1365) (= (x300 x732) x2319) (= x2798 (x300 x329)) (= (x300 x2852) x1786) (= (x295 (+ 160 x329)) x628) (= (x300 x628) x536) (= (x300 x802) x112) (= (x300 x2868) x2365) (= x472 (x295 (+ x329 32))) (= x2422 (x300 x198)) (= x1757 (x295 (+ 128 x329))) (= (x437 x2001 x2798 x2918 x774 x1456 x1268) x2043) (= (x295 (+ 192 x329)) x199) (= x1238 (x1612 0)) (= x1936 (x300 x374)) (>= x1516 2) (= (x295 (+ x329 128)) x3046) (= (x295 (+ 64 x329)) x2852) (= x1228 (x300 x329)) (= x2641 (x300 x316)) (= x1868 (x295 (+ x329 32))) (= (x300 x2600) x861) (= (x2926 x2001 x1029 x2470 x2301) x2159) (= (x300 x199) x3050) (= x316 (x300 x210)) (= x2637 (= x2641 0)) (>= 18446744073709551615 x2641) (= (x295 (+ 160 x329)) x2868) (= x2470 (x300 x1868)) (>= x639 1) (= (ite (= 0 x2001) x1238 (ite (>= 32 x2001) x1964 (ite (>= 64 x2001) x1349 (ite (>= 96 x2001) x2159 (ite (<= x2001 128) x2944 (ite (<= x2001 160) x2043 (ite (>= 192 x2001) x2634 (ite (<= x2001 224) x2186 x836)))))))) x2155) (= (x300 x862) x1872) (= (x2629 x2001 x1556) x1964) (= (x2318 x2001 x2374 x861 x1786 x3029) x2944) (= (x1656 x2001 x1228 x1936) x1349) (= (x295 (+ x329 32)) x24) (= (x300 x1756) x528) (= (x295 (+ 64 x2079)) x210) (= (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365) x2634) (= (x295 (+ 64 x329)) x2533) (= (x300 x2533) x2301) (= x1029 (x300 x329)) (<= x639 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x327 (x295 (+ 96 x329))) (= (x300 x329) x1192) (= x198 (x295 (+ 128 x329))) (= (x300 x66) x1456) (= x66 (x295 (+ 96 x329))))) x1026) x2761))))
(assert (x85 x1788))
(assert (x85 x1278))
(assert (< (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x762))
(assert (= (x1726 (x2926 x1245 x1093 x414 x240)) x1093))
(assert (= x2207 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x116) (= x1213 (x1033 (- x1620 x116))) (= x2005 x1891) (<= x116 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2792 x2368) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x116) (= (x1033 (- x1213 32)) x2724) (= x2654 (* 32 x1891)) (= x1594 (<= x681 224)) (= (x320 x116) x681) (= (x295 (+ x2222 x2654)) x1008) (= x1352 (x295 (+ 32 x116))) (= x1620 x1008) (<= 1 x1008) (<= 1 x1620) (= (x295 (+ x2289 x1185)) x2792) (< x116 x1620) (= (* 32 x1891) x1185) (>= 4 x1891)) (and (=> (and (= (x1033 (- x1468 32)) x793) (= (x295 (+ x1620 32)) x3049) (= (x320 x2855) x418) (= x2606 (x295 (+ x1352 64))) (= (x295 (+ 64 x1352)) x249) (= x1643 (x295 (+ 32 x1352))) (= x1409 (x295 (+ 96 x1352))) (= x2703 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589)) (< x1620 x769) (= x730 (x295 (+ 32 x1352))) (= (x295 (+ x1620 32)) x1628) (= x2567 (x320 x2321)) (= x2754 (x320 x2224)) (= (x2945 x681 x452 x534 x929 x2751 x888 x3141) x1547) (= x2537 (x295 (+ 64 x1352))) (= x1468 (x1033 (- x769 x1620))) (= (x295 (+ 32 x1352)) x126) (= (x1612 0) x691) (= x277 (x437 x681 x2677 x950 x2232 x418 x15)) (= x1589 (x320 x975)) (= (ite (= 0 x681) x691 (ite (>= 32 x681) x413 (ite (>= 64 x681) x2161 (ite (<= x681 96) x2592 (ite (>= 128 x681) x218 (ite (<= x681 160) x277 (ite (<= x681 192) x1547 (ite (>= 224 x681) x2703 x221)))))))) x87) (= (x295 (+ x1352 160)) x768) (= x2708 (x320 x2340)) (= (x494 x1620) x296) (= x1538 (x320 x1352)) (= (x295 (+ 192 x1352)) x975) (= (x2926 x681 x1538 x2820 x2408) x2592) (= x2340 (x295 (+ x1352 128))) (= (x2629 x681 x942) x413) (= (x320 x2783) x888) (= (x295 (+ x1352 64)) x171) (= (x320 x1352) x942) (= (x320 x126) x534) (= x2161 (x1656 x681 x2124 x2754)) (= x2224 (x295 (+ 32 x1352))) (= (x320 x249) x2232) (= (x320 x2088) x2751) (= x218 (x2318 x681 x3149 x2914 x1985 x3109)) (= x2855 (x295 (+ x1352 96))) (= x2856 (x295 (+ 64 x1352))) (= (x320 x1352) x452) (= (x295 (+ 160 x1352)) x3142) (= x2954 (x320 x2606)) (= (x295 (+ 96 x1628)) x769) (= (x295 (+ 32 x1352)) x2966) (= x2124 (x320 x1352)) (= (x320 x171) x2408) (= x3141 (x320 x768)) (= x2677 (x320 x1352)) (= (x320 x1409) x3109) (= (x320 x831) x15) (= (x320 x3142) x1437) (= (x295 (+ x1352 96)) x2321) (= (x295 (+ 128 x1352)) x831) (= x950 (x320 x1643)) (= x482 (x320 x2699)) (= x3149 (x320 x1352)) (= x2783 (x295 (+ x1352 128))) (= (x320 x730) x2820) (= x544 (<= x296 224)) (= (x320 x1352) x2631) (= x1295 (x295 (+ 32 x1065))) (or (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1620) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639810 x1620)) (and (<= 1 x1620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639807 x1620))) (= (x320 x2537) x929) (= (x320 x2856) x1985) (= x2914 (x320 x2966)) (= (x295 (+ 32 x1352)) x2699) (= (x295 (+ x1628 32)) x1065) (= x2088 (x295 (+ 96 x1352)))) (and x544 (=> (and (or (and (and (>= 4294967295 x2398) (= x456 1) (>= x2398 32)) x3106) (and (= x456 x14) (not x3106))) (and (= (x295 (+ x3049 64)) x2763) (= (x494 x1063) x2750) (= (x494 x1498) x42) (= (x295 (+ 64 x3049)) x2777) (= x1424 (x1656 x296 x2784 x1216)) (= x693 (x494 x3049)) (= (x295 (+ 64 x3049)) x1350) (= (x295 (+ 160 x3049)) x951) (= (x295 (+ x3049 32)) x1787) (= (x295 (+ x3049 128)) x1498) (= (ite (= 0 x296) x467 (ite (>= 32 x296) x930 (ite (>= 64 x296) x1424 (ite (>= 96 x296) x2927 (ite (>= 128 x296) x1722 (ite (<= x296 160) x280 (ite (<= x296 192) x1540 (ite (<= x296 224) x2293 x2498)))))))) x440) (= (x494 x1350) x2267) (= x2441 (x494 x2264)) (= x2908 (x494 x3049)) (= (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254) x2293) (= (x295 (+ 32 x3049)) x1063) (= (x494 x636) x2401) (= x1831 x440) (= (x494 x1017) x749) (= x636 (x295 (+ x3049 128))) (>= x2398 32) (= x1722 (x2318 x296 x3021 x1248 x905 x79)) (= (x494 x2999) x924) (= x1889 (x494 x951)) (= x386 (x494 x3049)) (= (x494 x3049) x3100) (= (x295 (+ 128 x3049)) x3024) (= x1017 (x494 160)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2398) (= x2794 (x1448 1461501637330902918203684832716283019655932542975 x749)) (= (x295 (+ x3049 96)) x2264) (= x2306 (x494 x1157)) (= x2784 (x494 x3049)) (= (x494 x2015) x1587) (= x1248 (x494 x863)) (= (x437 x296 x386 x2943 x1680 x2306 x2401) x280) (= x2927 (x2926 x296 x693 x924 x1279)) (= (x295 (+ 4 x769)) x2970) (= (x494 x2711) x1254) (= (x494 x2653) x1279) (= x562 (x295 (+ x3049 96))) (= x905 (x494 x1155)) (= (x295 (+ x3049 96)) x2191) (= (x2629 x296 x1654) x930) (= x79 (x494 x2191)) (= (x295 (+ 32 x3049)) x3146) (= (x494 x1787) x1603) (= x3106 (< 0 x14)) (= x1155 (x295 (+ 64 x3049))) (= x1216 (x494 x19)) (= x467 (x1612 0)) (= x2653 (x295 (+ x3049 64))) (= (x494 x562) x1390) (= x863 (x295 (+ x3049 32))) (= (x494 x3146) x2943) (= x935 (x295 (+ x3049 160))) (= x1680 (x494 x2763)) (= (x494 x3049) x3021) (= x2999 (x295 (+ x3049 32))) (= x1157 (x295 (+ x3049 96))) (= (x494 x3049) x1654) (= x1540 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889)) (= (x295 (+ x3049 32)) x19) (= x325 (x494 x3024)) (= x421 (x494 x2777)) (= x2711 (x295 (+ 192 x3049))) (= (x494 x935) x1601))) x1051))) x1594))))
(assert (x2690 x10))
(assert (x85 x550))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039439137263839420088228)))
(assert (x85 x3093))
(assert (x85 x2570))
(assert (= (=> (and (= x1176 (not (> x3125 1))) (= x3125 (x1670 x906))) (and (=> (= x1548 x2335) x2623) x1176)) x2325))
(assert (= x1335 (x1726 (x2926 x1139 x1335 x367 x2090))))
(assert (x85 x749))
(assert (=> (<= x1785 10000) (= (x921 x1785) 0)))
(assert (x85 x2711))
(assert (x85 x1942))
(assert (x85 x2275))
(assert (< 10000 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885)))
(assert (=> (<= x615 10000) (= (x921 x615) 0)))
(assert (= (x1087 (x1656 x1546 x2303 x860)) x860))
(assert (x85 x2))
(assert (x85 x2092))
(assert (= x2038 (or x2791 x2111)))
(assert (= x615 (x1725 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (x85 x582))
(assert (= (x921 (x2926 x630 x1840 x1916 x2363)) (x2926 x630 x1840 x1916 x2363)))
(assert (x85 x2055))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x437 x264 x907 x2685 x2025 x1326 x1014)))
(assert (x85 x2762))
(assert (= x1916 (x1087 (x2926 x630 x1840 x1916 x2363))))
(assert (x85 x2413))
(assert (= (x2056 (x165 x2347 x2879 x2844 x1471 x978 x1301 x1237 x208)) x1237))
(assert (=> (>= 10000 x1581) (= 0 (x921 x1581))))
(assert (x85 x1161))
(assert (x635 18446744073709551487))
(assert (=> (>= 10000 x1471) (= (x921 x1471) 0)))
(assert (x85 x1999))
(assert (x85 x600))
(assert (x85 x2654))
(assert (= (x2530 (x437 x1245 x1844 x44 x2924 x1405 x794)) x2924))
(assert (=> (>= 10000 x1760) (= (x921 x1760) 0)))
(assert (x85 x2631))
(assert (= (x1311 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)) x1992))
(assert (x85 x1073))
(assert (= (x281 (x2945 x264 x453 x1721 x1754 x2220 x702 x554)) x702))
(assert (x85 x688))
(assert (x85 x2611))
(assert (x85 x750))
(assert (= x2468 (=> (and (= x592 (x295 (+ x133 32))) (= x339 (x295 (+ 64 x133))) (= x523 (< 0 x865)) (= (x295 (+ 32 x2203)) x312) (= x133 (x295 (+ x838 4))) (= (x295 (+ x339 32)) x2697) (= x865 (x122 x2203))) (and (=> (and (and (= x1194 x2697) (= x312 x164) (= 0 x3026)) (not x523)) x514) (=> x523 x261)))))
(assert (= (=> (and (= x696 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x868)) (< x2045 x2508) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2045) (= x868 (x295 (+ 31 x2275))) (= x1032 (x1033 (- x2508 x2045))) (= x1530 (x1033 (- x1032 32))) (= (x295 (+ x2275 x979)) x1492) (= x464 (x2488 x2045)) (= x2891 (>= 224 x464)) (<= 1 x2508) (= (x295 (+ x2045 32)) x3010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2045) (= (x295 (+ x696 x979)) x2508) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2045)) (and x2891 (=> (and (= x2495 (x2488 x352)) (= (ite (= x464 0) x3018 (ite (<= x464 32) x1513 (ite (>= 64 x464) x2063 (ite (<= x464 96) x1344 (ite (>= 128 x464) x2379 (ite (>= 160 x464) x2019 (ite (<= x464 192) x1807 (ite (<= x464 224) x1100 x2893)))))))) x1617) (= (x2488 x2276) x2957) (= x1413 (x295 (+ x3010 128))) (= (x2488 x3010) x2385) (= (x295 (+ 64 x3010)) x1537) (= x1359 (x295 (+ 32 x3010))) (= (x2488 x1413) x3003) (= x1291 (x2488 x1359)) (= (x2488 x3010) x1921) (= (x2488 x3010) x834) (= (x295 (+ x3010 32)) x2238) (= (x295 (+ 32 x2014)) x2731) (= x3018 (x1612 0)) (= x2603 (x2488 x3010)) (= x1261 (x2488 x2014)) (= x1232 (x2488 x2364)) (= x246 (x295 (+ x3010 64))) (= x377 (x295 (+ x3010 128))) (<= 1 x1261) (= x21 (x2488 x2548)) (= x1807 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957)) (= x363 (x2488 x2809)) (= x2712 (x1780 x22)) (= x1095 (x295 (+ x3010 96))) (= (x2488 x1537) x2995) (= x1100 (x165 x464 x334 x1291 x2178 x1232 x3003 x21 x2644)) (= x1344 (x2926 x464 x1921 x2938 x2495)) (= (x2488 x1095) x50) (= x1883 (x2488 x124)) (= (not (> x1930 1)) x203) (= x2384 (x295 (+ 32 x3010))) (= x2276 (x295 (+ x3010 160))) (= (x2488 x1183) x2178) (= x2474 (x2488 x1823)) (= (x295 (+ 96 x3010)) x2364) (= x517 (x2488 x2384)) (= x2915 (x2488 x547)) (= x124 (x295 (+ 96 x3010))) (= x1930 (x1780 x2712)) (= (x2488 x2238) x1708) (= (x2488 x377) x372) (= (x2488 x246) x2979) (= (x2629 x464 x834) x1513) (= (x295 (+ 64 x3010)) x1035) (= x2938 (x2488 x2308)) (= x2809 (x295 (+ 32 x3010))) (= x1611 (x295 (+ x3010 192))) (= x2063 (x1656 x464 x1950 x517)) (= (x2488 x463) x917) (= x1717 (x2488 x3010)) (= (x2318 x464 x2385 x1708 x2802 x2915) x2379) (= x463 (x295 (+ 128 x3010))) (= (x2488 x3010) x1950) (= (x295 (+ 32 x3010)) x1823) (= x352 (x295 (+ 64 x3010))) (= (x2488 x3010) x334) (= x2019 (x437 x464 x1717 x363 x2979 x50 x372)) (= x2308 (x295 (+ x3010 32))) (= (x295 (+ 96 x3010)) x547) (= x1183 (x295 (+ x3010 64))) (= (x295 (+ x3010 160)) x2548) (= (x2488 x1611) x2644) (= x2802 (x2488 x1035))) (and x203 (=> (and (= x2508 x1554) (= x22 x149)) x2013))))) x786))
(assert (x85 x2045))
(assert (x85 x1257))
(assert (x85 x1269))
(assert (= x1139 (x1725 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771))))
(assert (x85 x2138))
(assert (x85 x1537))
(assert (x85 x2511))
(assert (x635 1889567281))
(assert (x85 x628))
(assert (x635 18446744073709551455))
(assert (x85 x911))
(assert (= (x1311 (x437 x1245 x1844 x44 x2924 x1405 x794)) x1405))
(assert (x2690 x2810))
(assert (x85 x2319))
(assert (= (x1725 (x1612 0)) 0))
(assert (x85 x311))
(assert (= (x1726 (x2629 x2347 x1454)) x1454))
(assert (x85 x961))
(assert (= x261 (=> (and (= x1955 (x295 (+ 32 x2697))) (= x106 (x435 x2987)) (= (x1152 x312) x2684) (= (x295 (+ 32 x2684)) x2987) (= x1391 (x295 (+ 32 x1955))) (= (x295 (+ x312 32)) x3022) (= (not (< 1 x865)) x1681) (= (x1152 x2684) x664)) (and x1681 (=> (and (= 1 x3026) (= x1391 x1194) (= x164 x3022)) x514)))))
(assert (x85 x2022))
(assert (= x993 (and x99 x3067)))
(assert (=> (>= 10000 x1968) (= 0 (x921 x1968))))
(assert (x85 x1718))
(assert (=> (<= x2793 10000) (= 0 (x921 x2793))))
(assert (x85 x52))
(assert (x85 x160))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x1139 x2465)))
(assert (x85 x2327))
(assert (x85 x3154))
(assert (x85 x284))
(assert (=> (>= 10000 x2450) (= 0 (x921 x2450))))
(assert (x2690 x1466))
(assert (x85 x2191))
(assert (=> (>= 10000 x45) (= 0 (x921 x45))))
(assert (=> (>= 10000 x1654) (= (x921 x1654) 0)))
(assert (=> (>= 10000 x843) (= 0 (x921 x843))))
(assert (=> (>= 10000 x1192) (= 0 (x921 x1192))))
(assert (=> (<= x2937 10000) (= (x921 x2937) 0)))
(assert (=> (>= 10000 x2836) (= 0 (x921 x2836))))
(assert (x85 x2117))
(assert (x85 x1712))
(assert (x85 x2907))
(assert (= x507 (x1726 (x2926 x1687 x507 x1289 x226))))
(assert (x85 x913))
(assert (= (and (not x3006) x1937) x1859))
(assert (= x2914 (x1087 (x2318 x681 x3149 x2914 x1985 x3109))))
(assert (< 10000 (x1656 64 x1760 1)))
(assert (=> (<= x974 10000) (= 0 (x921 x974))))
(assert (x85 x6))
(assert (=> (<= x2178 10000) (= 0 (x921 x2178))))
(assert (=> (<= x2631 10000) (= 0 (x921 x2631))))
(assert (< 10000 (x2629 x1935 x1071)))
(assert (x85 x2134))
(assert (= x1687 (x1725 (x1656 x1687 x2762 x184))))
(assert (= (x921 (x2945 x681 x452 x534 x929 x2751 x888 x3141)) (x2945 x681 x452 x534 x929 x2751 x888 x3141)))
(assert (x85 x409))
(assert (x85 x286))
(assert (=> (<= x2098 10000) (= (x921 x2098) 0)))
(assert (x85 x1868))
(assert (x85 x954))
(assert (x85 x44))
(assert (x85 x283))
(assert (not (x635 (x437 x1245 x1844 x44 x2924 x1405 x794))))
(assert (x85 x851))
(assert (x85 x2408))
(assert (x85 x1992))
(assert (= (x1656 x2347 x2982 x843) (x921 (x1656 x2347 x2982 x843))))
(assert (x85 x2794))
(assert (=> (>= 10000 x2175) (= 0 (x921 x2175))))
(assert (x85 x1467))
(assert (x85 x2935))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1656 64 x1760 1)))
(assert (=> (<= x2049 10000) (= (x921 x2049) 0)))
(assert (x85 x149))
(assert (x85 x2558))
(assert (x85 x2600))
(assert (x85 x650))
(assert (= x3041 (and (not x803) x1639)))
(assert (=> (<= x2943 10000) (= (x921 x2943) 0)))
(assert (x85 x1917))
(assert (x85 x2354))
(assert (x85 x2483))
(assert (= (and (not x618) x1393) x698))
(assert (x85 x134))
(assert (x85 x2628))
(assert (not (x635 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771))))
(assert (x85 x805))
(assert (x85 x1728))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639618) 0))
(assert (x635 134217728))
(assert (x85 x2096))
(assert (not (x635 (x2629 x1687 x1142))))
(assert (x85 x50))
(assert (= x480 (x1087 (x2318 x1687 x2098 x480 x1116 x598))))
(assert (x85 x307))
(assert (x85 x201))
(assert (x2690 x2164))
(assert (= x1915 (and x2202 x207)))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639904) 0))
(assert (x85 x438))
(assert (x85 x34))
(assert (x85 x2031))
(assert (=> (<= x2077 10000) (= (x921 x2077) 0)))
(assert (< 10000 (x2926 x1687 x507 x1289 x226)))
(assert (< 10000 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180)))
(assert (x85 x2947))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x85 x2377))
(assert (x85 x1212))
(assert (x85 x427))
(assert (x85 x1977))
(assert (= x296 (x1725 (x2926 x296 x693 x924 x1279))))
(assert (x85 x1597))
(assert (x85 x774))
(assert (x1842 x706))
(assert (x85 x365))
(assert (=> (>= 10000 x2979) (= (x921 x2979) 0)))
(assert (x85 x1638))
(assert (x85 x3056))
(assert (< 10000 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72)))
(assert (> (x2926 x264 x409 x556 x1785) 10000))
(assert (=> (>= 10000 x1278) (= 0 (x921 x1278))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2629 x2347 x1454)))
(assert (x85 x2012))
(assert (= (x1311 (x2318 x464 x2385 x1708 x2802 x2915)) x2915))
(assert (= x1038 (=> (= x858 x3099) x879)))
(assert (=> (<= x981 10000) (= (x921 x981) 0)))
(assert (x85 x2569))
(assert (x635 18446746139588821027))
(assert (x85 x2267))
(assert (= (and x465 x1210) x2599))
(assert (> (x2945 x1935 x241 x1187 x2160 x2080 x2823 x200) 10000))
(assert (x85 x578))
(assert (not (x635 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (= (x921 (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)) (x2945 x630 x1688 x381 x2366 x2624 x3154 x2388)))
(assert (= x2461 (and x1322 x1281)))
(assert (x85 x979))
(assert (x85 x1341))
(assert (x85 x3088))
(assert (= (x921 (x437 x931 x193 x2860 x1089 x2068 x1009)) (x437 x931 x193 x2860 x1089 x2068 x1009)))
(assert (= x1408 (and x99 (not x3067))))
(assert (= x3100 (x1726 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889))))
(assert (x85 x858))
(assert (=> (>= 10000 x372) (= 0 (x921 x372))))
(assert (x85 x2260))
(assert (x85 x1184))
(assert (= x2001 (x1725 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (x85 x45))
(assert (x85 x1926))
(assert (= (x437 x264 x907 x2685 x2025 x1326 x1014) (x921 (x437 x264 x907 x2685 x2025 x1326 x1014))))
(assert (x85 x2652))
(assert (x85 x168))
(assert (= (and x1044 x348) x1894))
(assert (x85 x1180))
(assert (x85 x1498))
(assert (x85 x1760))
(assert (x85 x1672))
(assert (x85 x820))
(assert (x85 x317))
(assert (x1842 x2894))
(assert (= (and (not x2739) x1506) x119))
(assert (= x1326 (x1311 (x437 x264 x907 x2685 x2025 x1326 x1014))))
(assert (< (x2318 x931 x1231 x2343 x1968 x789) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< 10000 (x2318 x1935 x3020 x2002 x2934 x2283)))
(assert (x85 x941))
(assert (x85 x1882))
(assert (= x1950 (x1726 (x1656 x464 x1950 x517))))
(assert (x85 x1740))
(assert (x85 x190))
(assert (= (x1725 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050)) x2001))
(assert (x85 x219))
(assert (x85 x2091))
(assert (x85 x1986))
(assert (x85 x1687))
(assert (= (x1725 (x1656 x264 x1370 x356)) x264))
(assert (=> (<= x836 10000) (= 0 (x921 x836))))
(assert (= (or x1565 x2812) x37))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643)))
(assert (x85 x13))
(assert (x85 x1371))
(assert (x85 x1574))
(assert (x85 x1797))
(assert (= x464 (x1725 (x2926 x464 x1921 x2938 x2495))))
(assert (x85 x1794))
(assert (x85 x2646))
(assert (= x444 (or x308 x3041)))
(assert (x85 x972))
(assert (=> (<= x2 10000) (= (x921 x2) 0)))
(assert (not (x635 (x1656 x2001 x1228 x1936))))
(assert (= (x437 x296 x386 x2943 x1680 x2306 x2401) (x921 (x437 x296 x386 x2943 x1680 x2306 x2401))))
(assert (= x2798 (x1726 (x437 x2001 x2798 x2918 x774 x1456 x1268))))
(assert (= (x1087 (x1656 x615 x1112 x3064)) x3064))
(assert (= x2902 (x281 (x437 x1546 x1239 x1052 x1912 x461 x2902))))
(assert (= x1551 (and x1969 (not x11))))
(assert (= x136 (x1087 (x437 x1139 x1846 x136 x918 x1672 x3063))))
(assert (= (x1087 (x1656 x1139 x965 x1517)) x1517))
(assert (= (x921 (x2926 x1139 x1335 x367 x2090)) (x2926 x1139 x1335 x367 x2090)))
(assert (= x1843 (and x1776 x127)))
(assert (not (x635 (x1656 x1245 x2734 x912))))
(assert (x85 x1507))
(assert (x85 x430))
(assert (= x2474 (x1087 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (x85 x1277))
(assert (x85 x566))
(assert (= x1235 (x2530 (x437 x2347 x2061 x2216 x1235 x357 x1070))))
(assert (x85 x2041))
(assert (= x2748 (and x2107 (not x403))))
(assert (= x1098 (or x1932 x1432 x2780 x591 x1394)))
(assert (x85 x551))
(assert (x85 x1633))
(assert (not (x635 (x2926 x1139 x1335 x367 x2090))))
(assert (x85 x252))
(assert (x85 x796))
(assert (x85 x1186))
(assert (x85 x2533))
(assert (x85 x1319))
(assert (=> (<= x1574 10000) (= (x921 x1574) 0)))
(assert (=> (<= x789 10000) (= (x921 x789) 0)))
(assert (x85 x1636))
(assert (x85 x268))
(assert (=> (<= x924 10000) (= 0 (x921 x924))))
(assert (=> (>= 10000 x1563) (= (x921 x1563) 0)))
(assert (= (and x1461 x617) x745))
(assert (x85 x2357))
(assert (x85 x769))
(assert (x85 x2868))
(assert (= (=> (and (= (x295 (+ 32 x395)) x548) (not (= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x295 (+ x2371 32)) x2500) (= x1782 (x295 (+ 32 x2994))) (= x2371 (x295 (+ x2104 32))) (= x395 (x295 (+ 32 x2500))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2104) (= (x708 x2294) x3090) (not (= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x2195 x584) x301) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2104) (= (x1356 x2994) x1974) (= (x295 (+ 64 x2994)) x584) (= x2571 (x1448 1461501637330902918203684832716283019655932542975 x1974)) (= (x260 x1782) x166) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2104) (< x2104 x791) (= (not (< 1 x3090)) x2525) (= (x295 (+ x906 32)) x2438) (not (= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x295 (+ 160 x2104)) x791) (= x2994 (x295 (+ x284 32))) (<= 1 x699) (= x699 (x2258 x906))) (and x2525 (=> (and (= x791 x1923) (= x69 x1542) (= x920 x2620)) x420))) x1847))
(assert (not (x635 (x2318 x1139 x1931 x3055 x2971 x2451))))
(assert (x85 x1973))
(assert (=> (<= x2905 10000) (= (x921 x2905) 0)))
(assert (= (x1726 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)) x2740))
(assert (not (x635 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (= (or x37 x2663) x2723))
(assert (=> (>= 10000 x2484) (= (x921 x2484) 0)))
(assert (x85 x2810))
(assert (= x1245 (x1725 (x437 x1245 x1844 x44 x2924 x1405 x794))))
(assert (x85 x274))
(assert (x635 79228162514264337593543950336))
(assert (=> (<= x2237 10000) (= 0 (x921 x2237))))
(assert (x85 x2759))
(assert (x85 x325))
(assert (= (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957) (x921 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (x85 x2589))
(assert (=> (>= 10000 x1685) (= (x921 x1685) 0)))
(assert (< (x2926 x1139 x1335 x367 x2090) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x2601 x1442) x1146))
(assert (= (or x1252 x2845) x141))
(assert (x2690 x868))
(assert (= (x437 x615 x1616 x1809 x2020 x2066 x263) (x921 (x437 x615 x1616 x1809 x2020 x2066 x263))))
(assert (=> (>= 10000 x2283) (= 0 (x921 x2283))))
(assert (= 0 (x921 11309588061646438093662687302255421419811724423900836950936401294474059186176)))
(assert (=> (<= x268 10000) (= (x921 x268) 0)))
(assert (=> (>= 10000 x2778) (= 0 (x921 x2778))))
(assert (x85 x1696))
(assert (x85 x442))
(assert (< (x2629 x296 x1654) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x635 (x2629 x615 x362))))
(assert (=> (<= x2924 10000) (= 0 (x921 x2924))))
(assert (x85 x2731))
(assert (= (and x1949 x1004) x1873))
(assert (= (and x1778 x1220) x1396))
(assert (x85 x649))
(assert (x85 x2867))
(assert (x85 x2902))
(assert (=> (>= 10000 x409) (= 0 (x921 x409))))
(assert (x85 x2734))
(assert (x85 x3156))
(assert (=> (>= 10000 x1901) (= 0 (x921 x1901))))
(assert (= (x1311 (x2318 x630 x1905 x2112 x477 x3082)) x3082))
(assert (= (x921 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)) (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)))
(assert (x85 x2971))
(assert (x85 x2322))
(assert (x85 x2617))
(assert (=> (>= 10000 x2934) (= 0 (x921 x2934))))
(assert (x85 x1846))
(assert (x85 x1504))
(assert (= x574 (and x2710 (not x2885))))
(assert (= x57 (and x2723 x1851)))
(assert (x85 x2340))
(assert (= x1657 (x1311 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413))))
(assert (x85 x1285))
(assert (=> (<= x1921 10000) (= (x921 x1921) 0)))
(assert (x85 x876))
(assert (x85 x1554))
(assert (x85 x1316))
(assert (x85 x2245))
(assert (x85 x456))
(assert (= (x2629 x1687 x1142) (x921 (x2629 x1687 x1142))))
(assert (x85 x891))
(assert (x85 x3149))
(assert (x85 x1286))
(assert (= x2793 (x1311 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (x85 x3103))
(assert (x85 x1491))
(assert (not (x635 (x2945 x464 x2603 x2474 x2995 x1883 x917 x2957))))
(assert (=> (<= x3030 10000) (= (x921 x3030) 0)))
(assert (x85 x1668))
(assert (x85 x1006))
(assert (x85 x2624))
(assert (x85 x3016))
(assert (x85 x185))
(assert (=> (>= 10000 x464) (= 0 (x921 x464))))
(assert (= x2631 (x1726 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (=> (>= 10000 x2557) (= (x921 x2557) 0)))
(assert (= (x1726 (x2318 x681 x3149 x2914 x1985 x3109)) x3149))
(assert (x85 x1727))
(assert (not (x635 (x1656 x615 x1112 x3064))))
(assert (=> (>= 10000 x2957) (= 0 (x921 x2957))))
(assert (=> (>= 10000 x184) (= 0 (x921 x184))))
(assert (x85 x1616))
(assert (=> (>= 10000 x2002) (= 0 (x921 x2002))))
(assert (= x981 (x2056 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903))))
(assert (x85 x498))
(assert (= x2465 (x1726 (x2629 x1139 x2465))))
(assert (x85 x2032))
(assert (=> (<= x1093 10000) (= 0 (x921 x1093))))
(assert (x85 x2970))
(assert (x85 x2921))
(assert (= x296 (x1725 (x1656 x296 x2784 x1216))))
(assert (< 10000 (x2629 x931 x3030)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x681 x1538 x2820 x2408)))
(assert (= (x921 (x1656 x296 x2784 x1216)) (x1656 x296 x2784 x1216)))
(assert (x85 x2957))
(assert (= (and (not x1430) x1592) x3124))
(assert (x85 x587))
(assert (< 10000 (x1656 64 x2989 1)))
(assert (= x2784 (x1726 (x1656 x296 x2784 x1216))))
(assert (x85 x1893))
(assert (= x2473 (and x2885 x2710)))
(assert (x85 x2610))
(assert (x85 x929))
(assert (= (=> (and (or (and (not x2540) (and (= 3 x1882) (= (x2407 x2146) x1882) (= x131 1))) (and (= x884 1) x2540)) (and (= x1699 1) (= x1047 (x2407 x2162)) (<= x2092 115792089237316195423570985008687907853269984665640564039457584007913129639934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2092) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x2092) (>= x874 1) (= x9 (x295 (+ 32 x188))) (< x2092 x1082) (= (x2407 x1336) x553) (<= x511 5) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2092)) (= (x2407 x2146) x511) (= (ite (= x511 2) 1 0) x884) (= (x295 (+ 32 x1047)) x1336) (= x1699 (x2407 x2092)) (not (= x2092 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (= x1082 (x295 (+ x2092 32))) (= x2900 (x2407 x1313)) (= x2540 (< 0 x884)) (>= x3015 1) (= (mod (* x553 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x188) (= (x2407 x469) x2146) (= (x2407 x1353) x3015) (> x3015 x553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x553) (>= x2900 1) (= (x295 (+ x1353 x9)) x469) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2092)))) x27) x4))
(assert (= (and (not x523) x1241) x2601))
(assert (x635 4294967295))
(assert (x85 x3069))
(assert (x85 x2066))
(assert (= (x1726 (x437 x1546 x1239 x1052 x1912 x461 x2902)) x1239))
(assert (x85 x1313))
(assert (= x350 (and x2076 x856)))
(assert (x85 x1088))
(assert (= (x1087 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302)) x1788))
(assert (x85 x2893))
(assert (x85 x579))
(assert (x85 x1730))
(assert (x85 x431))
(assert (= 0 (x921 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (> (x437 x464 x1717 x363 x2979 x50 x372) 10000))
(assert (= (and (not x1153) x689) x1039))
(assert (not (x635 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885))))
(assert (= (x1726 (x437 x2347 x2061 x2216 x1235 x357 x1070)) x2061))
(assert (x85 x3077))
(assert (= (and x2050 x1627) x1351))
(assert (x85 x713))
(assert (=> (>= 10000 x1248) (= (x921 x1248) 0)))
(assert (= (x1726 (x1656 64 x2989 1)) x2989))
(assert (= (x2056 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)) x1025))
(assert (= (x1725 (x1656 64 x2989 1)) 64))
(assert (x85 x1355))
(assert (x85 x3042))
(assert (x2690 x3069))
(assert (x85 x912))
(assert (x85 x1669))
(assert (= x1786 (x2530 (x2318 x2001 x2374 x861 x1786 x3029))))
(assert (= (=> (and (= x192 (x97 x1784)) (= (x295 (+ x596 96)) x568) (= x1784 (x295 (+ 96 x890))) (= x1092 (not (> x1648 128)))) (and x1092 x2853)) x2017))
(assert (x85 x857))
(assert (< (x1656 x1139 x965 x1517) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x921 (x2318 x464 x2385 x1708 x2802 x2915)) (x2318 x464 x2385 x1708 x2802 x2915)))
(assert (= (or x318 x1700) x1485))
(assert (x85 x1125))
(assert (x85 x648))
(assert (x1842 x1737))
(assert (= x1892 (=> (and (= x638 (x398 x593)) (= x2047 (x398 x2294)) (>= x638 1) (= x2586 (x398 x593)) (= x2739 (> x2586 0))) (and (=> x2739 x1508) (=> (and (not x2739) (= x2645 x219)) x2650)))))
(assert (x85 x1968))
(assert (x85 x3075))
(assert (= x1531 (and x1969 x11)))
(assert (= x1104 (or x108 x1061)))
(assert (= x3055 (x1087 (x2318 x1139 x1931 x3055 x2971 x2451))))
(assert (x85 x405))
(assert (x85 x1555))
(assert (= (and x1622 x2034) x354))
(assert (= (x1726 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643)) x2024))
(assert (x2230 x868))
(assert (= x1508 (=> (and (= x239 (x295 (+ x2546 64))) (= x2713 (x295 (+ x2645 32))) (= x1764 (x295 (+ 32 x593))) (= (mod (* 32 x2047) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x95) (= x521 (x398 x1764)) (= x1761 1) (= (x295 (+ x2713 32)) x1255) (<= x2645 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ 32 x2546)) x2921) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2645)) (= (x429 x239) x610) (= x941 (x1448 1461501637330902918203684832716283019655932542975 x2688)) (= x3032 (x295 (+ 32 x1255))) (= (x2453 x2546) x2688) (<= x2645 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x2698 (x295 (+ x2231 x906))) (= x3118 (not (> x1490 1))) (<= x2047 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2645)) (= x2231 (x295 (+ x95 32))) (= (x295 (+ 32 x3032)) x2023) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x2645)) (>= x1455 1) (> x140 x2645) (<= 1 x533) (= x1698 (x447 x2921)) (= (x295 (+ x521 32)) x2546) (= (x1016 x593) x1490) (= x1761 (x398 x521)) (<= x2645 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x398 x593) x533) (= x1455 (x709 x906)) (< x2047 x1455) (= x1981 1) (= x140 (x295 (+ x2645 160)))) (and x3118 (=> (= x140 x219) x2650)))))
(assert (= (x1087 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)) x880))
(assert (x85 x1902))
(assert (=> (<= x2333 10000) (= (x921 x2333) 0)))
(assert (= x1682 (and (not x1105) x2527)))
(assert (x85 x1207))
(assert (=> (<= x2784 10000) (= 0 (x921 x2784))))
(assert (x85 x584))
(assert (x85 x869))
(assert (= (and x2599 x846) x1937))
(assert (< (x437 x2347 x2061 x2216 x1235 x357 x1070) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x1527))
(assert (= x2152 (=> (and (<= x1623 1) (= x1623 x1324) (>= 2 x2814) (= x2353 (* x1623 32)) (= x2551 x2193) (= x2972 x2464) (or (= x2353 32) (= x2353 0)) (= x2464 (x295 (+ x2353 x1407)))) x2431)))
(assert (x85 x1620))
(assert (x85 x1102))
(assert (x85 x1897))
(assert (x85 x3057))
(assert (x85 x2343))
(assert (not (x635 (x437 x1139 x1846 x136 x918 x1672 x3063))))
(assert (x85 x870))
(assert (=> (>= 10000 x2989) (= 0 (x921 x2989))))
(assert (=> (>= 10000 x2635) (= 0 (x921 x2635))))
(assert (x85 x501))
(assert (< (x2629 x1245 x2362) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x779) (= 0 (x921 x779))))
(assert (x85 x2737))
(assert (x85 x471))
(assert (=> (>= 10000 x1231) (= (x921 x1231) 0)))
(assert (=> (>= 10000 x2137) (= (x921 x2137) 0)))
(assert (=> (<= x1285 10000) (= 0 (x921 x1285))))
(assert (= 0 (x921 18446744073709551167)))
(assert (= x1116 (x2530 (x2318 x1687 x2098 x480 x1116 x598))))
(assert (=> (<= x1212 10000) (= (x921 x1212) 0)))
(assert (x85 x1264))
(assert (x85 x458))
(assert (=> (>= 10000 x477) (= 0 (x921 x477))))
(assert (= (x1726 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329)) x2822))
(assert (= (x921 (x2629 x615 x362)) (x2629 x615 x362)))
(assert (x1842 x2688))
(assert (=> (>= 10000 x1825) (= (x921 x1825) 0)))
(assert (= (x281 (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413)) x2119))
(assert (x85 x2598))
(assert (x85 x1338))
(assert (x85 x423))
(assert (= x2001 (x1725 (x2629 x2001 x1556))))
(assert (= (x1725 (x2629 x931 x3030)) x931))
(assert (x85 x332))
(assert (= (x1087 (x2318 x931 x1231 x2343 x1968 x789)) x2343))
(assert (x85 x1883))
(assert (x85 x2999))
(assert (= x1717 (x1726 (x437 x464 x1717 x363 x2979 x50 x372))))
(assert (x85 x1544))
(assert (x85 x1704))
(assert (=> (>= 10000 x2362) (= 0 (x921 x2362))))
(assert (x85 x825))
(assert (x85 x2546))
(assert (x85 x783))
(assert (not (x635 (x2629 x296 x1654))))
(assert (x85 x596))
(assert (= (and x1012 x772) x92))
(assert (= (x1725 (x165 x931 x2836 x2687 x471 x1906 x1745 x644 x72)) x931))
(assert (x85 x1265))
(assert (x85 x1593))
(assert (x85 x353))
(assert (x85 x989))
(assert (= x2623 (=> (and (or x1949 (and (and (= x825 (x295 (+ x1677 32))) (= x396 (* 32 x2947))) (not x1949))) (and (= x34 (x295 (+ 32 x1759))) (= (x2018 x369) x701) (< x1677 x2014) (= (x589 x1243) x1007) (= (x1684 x1096) x2496) (= (x1242 x2978) x1298) (= x2978 (x1242 192)) (<= 2 x2014) (= x2759 (x295 (+ 64 x2405))) (= x3007 (x295 (+ 32 x34))) (or (>= x2335 115792089237316195423570985008687907853269984665640564039457584007913129639649) (<= x2335 115792089237316195423570985008687907853269984665640564039457584007913129639646)) (= x2117 (x1448 1461501637330902918203684832716283019655932542975 x255)) (= x852 (x1684 192)) (= (= x2947 0) x1949) (= x1457 (x117 160)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2496 x3148))) (<= x2335 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= x1316 (x944 x2759)) (= x2014 (x295 (+ (mod (+ 32 x427) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1677))) (= x2405 (x944 192)) (= (x1744 x2378) x1817) (= x1605 (x295 (+ 32 x3007))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2335) (= x1466 (x655 256)) (= (x1448 1461501637330902918203684832716283019655932542975 x701) x215) (>= 18446744073709551615 x2947) (= (x295 (+ x22 32)) x1759) (= (x295 (+ x3148 x2496)) x796) (= x578 (x295 (+ 32 x1417))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2335) (= x1973 (x1448 1461501637330902918203684832716283019655932542975 x1466)) (= x427 (* x2947 32)) (= x1096 (x295 (+ 32 x852))) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639646 x2335)) (= x255 (x117 x1457)) (= (x295 (+ 288 x2335)) x1677) (or (<= x2335 115792089237316195423570985008687907853269984665640564039457584007913129639646) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639649 x2335)) (= (x295 (+ 32 x2335)) x1243) (<= x1298 2) (= x1417 (x295 (+ 32 x1605))) (< x2335 x1677) (= (x295 (+ 32 x1243)) x22) (= (x589 x1007) x2947))) x455)))
(assert (=> (<= x2388 10000) (= (x921 x2388) 0)))
(assert (=> (>= 10000 x927) (= 0 (x921 x927))))
(assert (x85 x507))
(assert (= (x1725 (x1656 x630 x747 x2557)) x630))
(assert (=> (>= 10000 x79) (= (x921 x79) 0)))
(assert (=> (<= x1936 10000) (= (x921 x1936) 0)))
(assert (x85 x1298))
(assert (< 10000 (x1656 x1245 x2734 x912)))
(assert (x85 x21))
(assert (= x827 (x281 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (x85 x2586))
(assert (= x2268 (=> (and (>= x2443 1) (= x1124 (not (> x1792 1))) (= x1792 (x968 x1313)) (= (ite (= 0 x2176) x2176 1) x2443)) (and (=> (= x1082 x3099) x1038) x1124))))
(assert (=> (<= x1998 10000) (= (x921 x1998) 0)))
(assert (=> (<= x860 10000) (= 0 (x921 x860))))
(assert (x85 x2674))
(assert (x85 x1587))
(assert (= x681 (x1725 (x165 x681 x2631 x482 x2954 x2567 x2708 x1437 x1589))))
(assert (x85 x1306))
(assert (< (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x593))
(assert (= (and (not x303) x1104) x1549))
(assert (x85 x815))
(assert (x85 x1231))
(assert (x85 x1560))
(assert (not (x635 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329))))
(assert (= x1977 (x1726 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903))))
(assert (x85 x2888))
(assert (< (x165 x1245 x2635 x880 x2235 x1657 x2119 x1685 x2413) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x226))
(assert (x85 x1739))
(assert (x85 x2374))
(assert (=> (<= x1232 10000) (= (x921 x1232) 0)))
(assert (x85 x1170))
(assert (x635 18446744073709551614))
(assert (=> (>= 10000 x1301) (= 0 (x921 x1301))))
(assert (= x1284 (x2312 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284))))
(assert (= (and x1028 x2847) x177))
(assert (x85 x1589))
(assert (x85 x2821))
(assert (= x1139 (x1725 (x437 x1139 x1846 x136 x918 x1672 x3063))))
(assert (x85 x2289))
(assert (= x1603 (x1087 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (x85 x2023))
(assert (x85 x2830))
(assert (x85 x9))
(assert (= x186 (x2530 (x165 x1687 x1264 x1788 x186 x2402 x1114 x175 x1302))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2926 x1245 x1093 x414 x240)))
(assert (not (x635 (x2318 x615 x893 x401 x1332 x1991))))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639649))
(assert (x85 x1745))
(assert (x85 x1002))
(assert (=> (<= x356 10000) (= 0 (x921 x356))))
(assert (x85 x2175))
(assert (= (x1725 (x2318 x464 x2385 x1708 x2802 x2915)) x464))
(assert (= x556 (x1087 (x2926 x264 x409 x556 x1785))))
(assert (= (and (not x695) x1351) x2766))
(assert (x85 x1348))
(assert (x85 x1993))
(assert (x85 x1645))
(assert (x85 x3050))
(assert (x85 x1109))
(assert (x85 x991))
(assert (x85 x1009))
(assert (x85 x33))
(assert (= (x1725 (x437 x681 x2677 x950 x2232 x418 x15)) x681))
(assert (x85 x1433))
(assert (= (x921 (x1656 x1245 x2734 x912)) (x1656 x1245 x2734 x912)))
(assert (= (x1726 (x1656 x1245 x2734 x912)) x2734))
(assert (x85 x1326))
(assert (x85 x2362))
(assert (x85 x2215))
(assert (= 0 (x921 111117225372770300986259473995147604481826136133417213952520719377678811004928)))
(assert (not (x635 (x2926 x615 x2963 x2980 x1650))))
(assert (= x3001 (=> (and (and (= x61 (x157 x2536)) (= x2874 (ite (= x61 0) 1 0)) (= (x157 192) x2536) (= x1598 (< 0 x2874)) (>= 2 x61)) (or (and x1598 (= x1121 x2874)) (and (and (= (x157 192) x1808) (= x1121 x1234) (>= 2 x1797) (= x1797 (x157 x1808)) (= (ite (= 1 x1797) 1 0) x1234)) (not x1598)))) x2078)))
(assert (x85 x1271))
(assert (= (and x1034 (not x2549)) x535))
(assert (= (and x2997 x2506) x1541))
(assert (=> (>= 10000 x1905) (= 0 (x921 x1905))))
(assert (x85 x860))
(assert (x85 x2470))
(assert (= x2003 (and (not x3147) x2835)))
(assert (x85 x1412))
(assert (x2690 x2813))
(assert (x85 x1840))
(assert (= x1650 (x2530 (x2926 x615 x2963 x2980 x1650))))
(assert (=> (<= x2025 10000) (= 0 (x921 x2025))))
(assert (x85 x2144))
(assert (x85 x2801))
(assert (= x1968 (x2530 (x2318 x931 x1231 x2343 x1968 x789))))
(assert (not (x635 (x1656 x1935 x2589 x2425))))
(assert (=> (<= x2401 10000) (= 0 (x921 x2401))))
(assert (x85 x3126))
(assert (x85 x3089))
(assert (=> (>= 10000 x1950) (= 0 (x921 x1950))))
(assert (= x184 (x1087 (x1656 x1687 x2762 x184))))
(assert (x85 x1546))
(assert (x635 115792089237316195423570985008687907853269984665640564039457584007913129639902))
(assert (x85 x2568))
(assert (=> (>= 10000 x1849) (= (x921 x1849) 0)))
(assert (< 10000 (x1656 x681 x2124 x2754)))
(assert (x85 x2567))
(assert (=> (<= x1640 10000) (= 0 (x921 x1640))))
(assert (x85 x1047))
(assert (= (x1725 (x2318 x615 x893 x401 x1332 x1991)) x615))
(assert (= (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885) (x921 (x165 x1935 x3080 x2701 x2205 x1659 x1520 x2246 x885))))
(assert (x85 x740))
(assert (x635 115792089237316195423570985008687907853269984665640564039439137263839420088228))
(assert (= x2011 (x1087 (x2318 x1245 x1006 x2011 x1341 x1825))))
(assert (= x1901 (x1726 (x437 x630 x1901 x916 x3131 x2790 x1397))))
(assert (= (or x1275 x1206) x781))
(assert (= x1928 (=> (and (= (x555 x593) x1775) (<= x906 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x593 (x555 x1966)) (= (x295 (+ x1775 x1801)) x2906) (not (>= (+ x1775 x1801) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x906) (= (x555 x2294) x1801) (< x906 x1986) (= x2911 (= 0 x2906)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x906) (= (x555 x390) x2756) (= (x555 x2051) x2294) (= (* x2906 32) x2120) (= x390 (x555 192)) (>= x1986 1) (<= x2906 18446744073709551615) (= x1986 (x295 (+ x906 (mod (+ 32 x2120) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (=> (and (not x2911) (and (not (= x1986 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (= (x295 (+ x1942 32)) x1117) (= (x295 (+ 32 x1074)) x900) (= (x295 (+ x906 32)) x1942) (= x1053 (x295 (+ 32 x900))) (= x445 (= 1 x2906)) (= x2910 (x295 (+ 32 x1053))) (<= x1986 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x526 (x295 (+ 160 x1986))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1986) (= (x1033 (- x2906 1)) x3078) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x1986)) (= (x295 (+ x1986 32)) x1074) (< x1986 x526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1986) (not (= x1986 115792089237316195423570985008687907853269984665640564039457584007913129639776)))) (and (=> (and (not x445) (and (= (x295 (+ 32 x1876)) x1854) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639776 x526)) (<= x526 115792089237316195423570985008687907853269984665640564039457584007913129639934) (< x526 x272) (= x361 (x295 (+ x526 32))) (not (= x526 115792089237316195423570985008687907853269984665640564039457584007913129639776)) (<= x526 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x295 (+ x361 32)) x1876) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x526) (= x682 (= 1 x3078)) (= (x295 (+ 160 x526)) x272) (= (x295 (+ x1854 32)) x2826) (not (= x526 115792089237316195423570985008687907853269984665640564039457584007913129639776)))) (and (=> (not x682) x1333) (=> (and x682 (= x3033 x272)) x2288))) (=> (and (= x3033 x526) x445) x2288))) (=> (and (= x1986 x2104) x2911) x1030)))))
(assert (= x240 (x2530 (x2926 x1245 x1093 x414 x240))))
(assert (x85 x1458))
(assert (x85 x1889))
(assert (not (x635 (x2926 66 x3059 x2040 x677))))
(assert (= (x921 (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)) (x165 x264 x1563 x1600 x1285 x3117 x3157 x1381 x1284)))
(assert (x85 x2024))
(assert (> (x2318 x1687 x2098 x480 x1116 x598) 10000))
(assert (x85 x360))
(assert (x2690 x1904))
(assert (x85 x2848))
(assert (x85 x2934))
(assert (=> (>= 10000 x917) (= 0 (x921 x917))))
(assert (= x1329 (x2056 (x2945 x1546 x2822 x779 x1918 x1423 x1138 x1329))))
(assert (x85 x263))
(assert (=> (<= x3103 10000) (= 0 (x921 x3103))))
(assert (x85 x443))
(assert (x85 x2478))
(assert (x85 x1584))
(assert (= (x2318 x1935 x3020 x2002 x2934 x2283) (x921 (x2318 x1935 x3020 x2002 x2934 x2283))))
(assert (x1842 x2164))
(assert (x85 x2978))
(assert (x85 x2676))
(assert (= (x2945 x2347 x2858 x813 x763 x2133 x2484 x180) (x921 (x2945 x2347 x2858 x813 x763 x2133 x2484 x180))))
(assert (x2690 x2311))
(assert (= (x1726 (x2318 x296 x3021 x1248 x905 x79)) x3021))
(assert (= (=> (and (= (x295 (+ x1554 32)) x1066) (= x2202 (< 0 x1999)) (= (x1644 x1677) x1999) (= (x295 (+ 32 x1677)) x662) (= (x1644 x2335) x2012)) (and (=> (and x2202 (and (= (x295 (+ 32 x1066)) x531) (= (> x1999 1) x2656) (= (x295 (+ 32 x662)) x458) (= x1926 (x1644 x662)))) (and (=> (and (and (= x458 x1067) (= x531 x2689) (= 1 x2350)) (not x2656)) x1199) (=> (and x2656 (and (= (x295 (+ x531 32)) x1736) (= x629 (x1909 x458)) (= x1028 (> x1999 2)) (= x633 (x295 (+ 32 x458))))) (and (=> (and (and (= x2632 (x295 (+ x633 32))) (= (< 3 x1999) x406) (= (x125 x633) x2825) (= (x295 (+ 32 x1736)) x23)) x1028) (and (=> (and (and (= x2689 x23) (= x2632 x1067) (= 3 x2350)) (not x406)) x1199) (=> x406 x1641))) (=> (and (not x1028) (and (= 2 x2350) (= x1067 x633) (= x1736 x2689))) x1199))))) (=> (and (not x2202) (and (= 0 x2350) (= x2689 x1066) (= x1067 x662))) x1199))) x2013))
(assert (x85 x763))
(assert (x85 x1454))
(assert (< (x1656 x630 x747 x2557) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x85 x2722))
(assert (x85 x859))
(assert (x85 x3045))
(assert (x85 x963))
(assert (x85 x1115))
(assert (x85 x179))
(assert (x85 x2049))
(assert (x85 x1447))
(assert (> (x2945 x681 x452 x534 x929 x2751 x888 x3141) 10000))
(assert (x85 x978))
(assert (x85 x2015))
(assert (= x1546 (x1725 (x2926 x1546 x1971 x78 x2333))))
(assert (x85 x236))
(assert (x85 x1880))
(assert (x85 x1602))
(assert (= (x1087 (x2926 x931 x2676 x984 x2430)) x984))
(assert (x85 x2344))
(assert (x85 x2792))
(assert (x85 x725))
(assert (x85 x1829))
(assert (not (x635 (x1656 64 x2989 1))))
(assert (x85 x512))
(assert (=> (>= 10000 x2232) (= 0 (x921 x2232))))
(assert (x85 x2566))
(assert (x2690 x2776))
(assert (= (x1656 x264 x1370 x356) (x921 (x1656 x264 x1370 x356))))
(assert (< (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1725 (x1656 64 x1760 1)) 64))
(assert (= (and (not x2266) x1307) x926))
(assert (x85 x67))
(assert (x85 x2039))
(assert (x85 x3109))
(assert (x85 x2960))
(assert (= x1370 (x1726 (x1656 x264 x1370 x356))))
(assert (=> (>= 10000 x907) (= (x921 x907) 0)))
(assert (x85 x1376))
(assert (x85 x370))
(assert (x85 x2214))
(assert (= x399 (x2056 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (=> (>= 10000 x2844) (= (x921 x2844) 0)))
(assert (x85 x1835))
(assert (= (x921 (x1656 x2001 x1228 x1936)) (x1656 x2001 x1228 x1936)))
(assert (x85 x1595))
(assert (= (x1311 (x437 x2001 x2798 x2918 x774 x1456 x1268)) x1456))
(assert (x1842 x1466))
(assert (not (x635 (x2629 x264 x2219))))
(assert (=> (>= 10000 x1397) (= 0 (x921 x1397))))
(assert (= (x2530 (x2926 x681 x1538 x2820 x2408)) x2408))
(assert (x85 x1451))
(assert (< 10000 (x2926 x1245 x1093 x414 x240)))
(assert (= (x281 (x437 x681 x2677 x950 x2232 x418 x15)) x15))
(assert (< (x1656 x615 x1112 x3064) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x635 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399))))
(assert (x85 x1290))
(assert (x85 x1064))
(assert (x85 x1045))
(assert (= x1276 (and (not x104) x1549)))
(assert (x85 x1335))
(assert (x85 x1240))
(assert (= x1279 (x2530 (x2926 x296 x693 x924 x1279))))
(assert (x85 x2178))
(assert (x85 x841))
(assert (= x2677 (x1726 (x437 x681 x2677 x950 x2232 x418 x15))))
(assert (x85 x2773))
(assert (= (x1726 (x2945 x1687 x1013 x2105 x353 x2793 x2450 x399)) x1013))
(assert (x85 x1857))
(assert (x85 x2249))
(assert (x85 x3032))
(assert (x85 x1528))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639712) 0))
(assert (x85 x367))
(assert (x2690 x84))
(assert (= (x281 (x165 x615 x2740 x2965 x2044 x1992 x347 x1025 x994)) x347))
(assert (= 0 (x921 115792089237316195423570985008687907853269984665640564039457584007913129639810)))
(assert (= (=> (and (= x1220 (> x419 0)) (= (x1711 x1243) x109) (= (x1711 x109) x419)) (and (=> x1220 x2625) (=> (and (= x497 x2045) (not x1220)) x486))) x2095))
(assert (x85 x809))
(assert (x85 x2954))
(assert (x85 x2232))
(assert (x635 77929798818658108206329458850487298488570292587025318323788629963054520467456))
(assert (x85 x871))
(assert (= x1275 (and x2250 (not x258))))
(assert (not (x635 (x2945 x296 x3100 x2750 x2267 x1390 x42 x1889))))
(assert (=> (>= 10000 x72) (= 0 (x921 x72))))
(assert (= (and x232 (not x616)) x1776))
(assert (x85 x2508))
(assert (= (x921 (x437 x464 x1717 x363 x2979 x50 x372)) (x437 x464 x1717 x363 x2979 x50 x372)))
(assert (not (x635 (x2318 x931 x1231 x2343 x1968 x789))))
(assert (= (x1087 (x165 x1139 x1642 x1143 x1752 x2831 x1945 x2905 x384)) x1143))
(assert (= (x2530 (x165 x2001 x1192 x1872 x112 x826 x2850 x536 x3050)) x112))
(assert (x85 x524))
(assert (x85 x72))
(assert (= (and x406 x177) x1394))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x165 x630 x1977 x326 x1852 x48 x1574 x981 x903)))
(assert (=> (>= 10000 x161) (= (x921 x161) 0)))
(assert (x85 x1405))
(assert (not (x635 (x2318 x1245 x1006 x2011 x1341 x1825))))
(assert (not (x635 (x2945 x615 x1094 x229 x134 x2348 x827 x660))))
(assert (=> (>= 10000 x1254) (= 0 (x921 x1254))))
(assert (=> (>= 10000 x1332) (= 0 (x921 x1332))))
(assert (x85 x256))
(assert (x85 x3101))
(assert (= (x2056 (x2945 x1139 x1416 x2248 x2565 x45 x1197 x2771)) x2771))
(assert (x85 x369))
(assert (x85 x556))
(assert (x85 x1677))
(assert (x85 x3024))
(assert (= (x1726 (x2629 x630 x1201)) x1201))
(assert (< (x2926 x615 x2963 x2980 x1650) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x1278 (x1726 (x2945 x2001 x1278 x1895 x2319 x528 x2422 x2365))))
(assert (= (x2318 x681 x3149 x2914 x1985 x3109) (x921 (x2318 x681 x3149 x2914 x1985 x3109))))
(assert (=> (>= 10000 x1264) (= (x921 x1264) 0)))
(assert (=> (<= x240 10000) (= 0 (x921 x240))))
(assert (=> (>= 10000 x1657) (= (x921 x1657) 0)))
(assert (x85 x1446))
(assert (= x1529 (=> (and (= x822 x1539) (= x2397 x2867) (= x2776 x408) (= x2179 x2486)) x2833)))
(assert (x85 x2372))
(assert (= x2795 (x281 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(assert (= x2085 (=> (and (and (<= 1 x1573) (= (x295 (+ x855 32)) x1704) (= x2278 (x295 (+ x321 (mod (+ 32 x1205) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x295 (+ 32 x2867)) x321) (> x2278 x321) (= x2389 (x2736 192)) (or (>= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639902 x2867)) (= x1495 (= x1207 0)) (or (<= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639902) (>= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639905)) (= 1 x1086) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2867) (= (x2736 x3027) x1831) (= x1205 (* 32 x1207)) (<= 1 x438) (= x855 (x295 (+ 32 x2389))) (= x438 (x2736 x855)) (< x2867 x321) (<= 2 x2278) (= (x2736 x1607) x1207) (<= x1207 18446744073709551615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639933 x2867) (or (<= 115792089237316195423570985008687907853269984665640564039457584007913129639905 x2867) (<= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639902)) (= (x2736 x1704) x1607) (<= x2867 115792089237316195423570985008687907853269984665640564039457584007913129639933) (= (x2736 x2867) x1086)) (or x1495 (and (and (= (* 32 x1207) x211) (= x39 (x295 (+ 32 x321)))) (not x1495)))) x1500)))
(assert (= (and x465 (not x1210)) x1938))
(assert (= (x1087 (x2926 x1687 x507 x1289 x226)) x1289))
(assert (x85 x466))
(assert (x85 x942))
(assert (x85 x2636))
(assert (x85 x2465))
(assert (= (or x2884 x3074) x1004))
(assert (= (x921 21408440236001274921485009970742555221786587156444570319896389698385254285312) 0))
(assert (= (x921 115792089237316195423570985008687907853269984665640564039457584007913129639649) 0))
(assert (= x2642 (x2530 (x2945 x1245 x3094 x2483 x2642 x527 x1961 x2163))))
(assert (x85 x3145))
(assert (x85 x791))
(assert (=> (>= 10000 x1329) (= (x921 x1329) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2318 x464 x2385 x1708 x2802 x2915)))
(assert (= (x1725 (x1656 x1139 x965 x1517)) x1139))
(assert (x85 x2083))
(assert (= x652 (and x1292 x1495)))
(assert (x85 x1860))
(assert (= x325 (x281 (x165 x296 x2908 x1603 x421 x2441 x325 x1601 x1254))))
(assert (x85 x1642))
(assert (= x2912 (=> (and (>= x561 1) (= (* x1088 32) x1002) (= (x643 x505) x1088) (not (< x2094 x257)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2460) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x250)) (and (= (<= x2460 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x250 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x250 x2460))) (or (<= x1897 18446746139588821027) (<= 57896044618658097711785492504343953926634992332820282019728792003956564820036 x1897)) (>= 18446744073709551615 x2279) (= (x295 (+ x1512 x3113)) x1897) (<= x1328 18446744073709551615) (<= x3113 18446744073709551615) (= (< x1893 x257) x1012) (= x2091 (+ 448 x1182)) (<= x1399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= x2460 (- x1445 67)) (= x2743 (x295 (+ 32 x1422))) (= (x643 x1422) x1328) (= x1399 (x1033 (- x2094 x1512))) (<= 1 x1182) (= (x295 (+ 32 x1512)) x1705) (= x1348 160) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1328) (= x3104 (x643 x1897)) (<= x3104 2) (= (x955 128) x1250) (<= 64 x1328) (= x1303 (x643 x185)) (= x1111 (x295 (+ x505 31))) (<= x1182 18446744073709551167) (= (x295 (+ x1497 32)) x185) (= (+ 63 x1002) x2941) (<= 128 x1399) (= (x295 (+ x505 32)) x1893) (= x250 (x643 228)) (= (x295 (+ x2743 x2279)) x1512) (or (>= x1512 57896044618658097711785492504343953926634992332820282019728792003956564820036) (<= x1512 18446746139588821027)) (>= 18446744073709551615 x1303) (<= x1088 18446744073709551615) (= x505 (x295 (+ x1897 x1303))) (>= x2022 128) (= x1221 (* x1088 32)) (= (x295 (+ x1328 x2743)) x2094) (= x1182 (x1448 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2941)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2022) (= x2322 (x643 x1512)) (not (or (and (<= x2743 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x62 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2743 x62) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x62) (<= x2743 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (<= x2322 1461501637330902918203684832716283019655932542975) (or (>= 18446746139588821027 x505) (>= x505 57896044618658097711785492504343953926634992332820282019728792003956564820036)) (= (x643 x1497) x2096) (= (x295 (+ x1897 32)) x1497) (= x257 (x295 (+ x1221 x1893))) (= (x1033 (- x1445 x1328)) x62) (= x2279 (x643 x2743)) (or (<= 57896044618658097711785492504343953926634992332820282019728792003956564819968 x250) (>= 2065879269376 x250)) (= 1 x1250) (= (x1033 (- x2094 x1897)) x2022) (= (x643 x1705) x3113) (or (<= x2094 18446746139588821059) (>= x2094 57896044618658097711785492504343953926634992332820282019728792003956564820068)) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2094) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1111)) (and (> x2094 x1111) (= (<= x2094 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1111)))) (= (x295 (+ 36 x250)) x1422)) (and (=> x1012 x3028) (=> (and (not x1012) (= x279 x2091)) x1426)))))
(assert (x85 x734))
(assert (= (and x781 (not x2630)) x2355))
(assert (= 0 (x921 134217728)))
(assert (= x2466 (x1311 (x2945 x931 x2024 x1998 x1444 x2466 x2795 x2643))))
(check-sat)
(exit)
