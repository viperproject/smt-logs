(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Certora
Generated on: 2024-04-10
Generator: The Certora Prover
Application: Web3 security
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x1637 () Int)
(declare-fun x1860 () Int)
(declare-fun x2361 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x2335 () Int)
(declare-fun x23 () Int)
(declare-fun x1378 () Int)
(declare-fun x941 () Int)
(declare-fun x584 () Int)
(declare-fun x2350 () Int)
(declare-fun x1949 () Int)
(declare-fun x940 () Int)
(declare-fun x2231 () Int)
(declare-fun x1510 () Int)
(declare-fun x1358 () Bool)
(declare-fun x876 () Bool)
(declare-fun x134 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1620 () Int)
(declare-fun x862 () Int)
(declare-fun x1507 () Int)
(declare-fun x1851 () Int)
(declare-fun x1702 () Bool)
(declare-fun x812 () Bool)
(declare-fun x2115 () Int)
(declare-fun x2343 () Int)
(declare-fun x1086 () Int)
(declare-fun x427 () Int)
(declare-fun x1140 () Bool)
(declare-fun x650 (Int) Int)
(declare-fun x1589 () Bool)
(declare-fun x1970 () Int)
(declare-fun x963 () Int)
(declare-fun x1689 () Bool)
(declare-fun x678 () Int)
(declare-fun x810 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1749 () Bool)
(declare-fun x325 () Bool)
(declare-fun x548 () Int)
(declare-fun x1953 () Int)
(declare-fun x1758 () Int)
(declare-fun x39 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x887 () Bool)
(declare-fun x681 () Bool)
(declare-fun x1020 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1865 () Int)
(declare-fun x1007 (Int Int Int Int Int) Int)
(declare-fun x146 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1343 () Bool)
(declare-fun x564 () Bool)
(declare-fun x746 () Int)
(declare-fun x1621 () Bool)
(declare-fun x739 () Int)
(declare-fun x885 () Bool)
(declare-fun x1135 () Int)
(declare-fun x817 () Int)
(declare-fun x1483 () Int)
(declare-fun x1857 () Int)
(declare-fun x1548 () Int)
(declare-fun x1994 () Int)
(declare-fun x213 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1041 () Int)
(declare-fun x152 () Int)
(declare-fun x1227 () Bool)
(declare-fun x2113 () Int)
(declare-fun x1435 () Bool)
(declare-fun x549 () Int)
(declare-fun x839 () Bool)
(declare-fun x787 (Int) Int)
(declare-fun x1213 () Int)
(declare-fun x933 () Int)
(declare-fun x301 (Int) Bool)
(declare-fun x420 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x2028 () Int)
(declare-fun x205 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2307 () Int)
(declare-fun x767 () Bool)
(declare-fun x854 () Int)
(declare-fun x2027 () Bool)
(declare-fun x2034 () Int)
(declare-fun x1981 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1087 () Int)
(declare-fun x1361 () Int)
(declare-fun x1226 () Int)
(declare-fun x1265 () Int)
(declare-fun x752 () Int)
(declare-fun x251 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x331 () Int)
(declare-fun x1161 () Int)
(declare-fun x1232 () Int)
(declare-fun x1900 () Int)
(declare-fun x805 () Bool)
(declare-fun x395 () Int)
(declare-fun x35 () Int)
(declare-fun x2251 () Int)
(declare-fun x433 () Int)
(declare-fun x2016 () Int)
(declare-fun x1440 () Bool)
(declare-fun x1906 () Int)
(declare-fun x98 () Int)
(declare-fun x1936 () Int)
(declare-fun x1827 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1294 () Int)
(declare-fun x271 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1778 () Int)
(declare-fun x682 () Int)
(declare-fun x1123 () Int)
(declare-fun x1115 () Int)
(declare-fun x2299 (Int) Int)
(declare-fun x86 () Int)
(declare-fun x2141 () Bool)
(declare-fun x589 () Bool)
(declare-fun x707 () Int)
(declare-fun x1389 () Int)
(declare-fun x358 () Int)
(declare-fun x2173 () Bool)
(declare-fun x1105 () Int)
(declare-fun x998 () Bool)
(declare-fun x288 () Int)
(declare-fun x1924 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x508 () Int)
(declare-fun x1905 () Int)
(declare-fun x740 () Int)
(declare-fun x1835 () Bool)
(declare-fun x1162 () Int)
(declare-fun x1376 () Bool)
(declare-fun x555 () Int)
(declare-fun x655 () Bool)
(declare-fun x1659 () Int)
(declare-fun x1990 () Bool)
(declare-fun x1607 () Int)
(declare-fun x384 () Int)
(declare-fun x1465 () Int)
(declare-fun x785 () Int)
(declare-fun x224 () Int)
(declare-fun x1500 () Int)
(declare-fun x782 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1653 () Bool)
(declare-fun x414 () Bool)
(declare-fun x1107 () Int)
(declare-fun x658 () Int)
(declare-fun x30 () Int)
(declare-fun x775 () Int)
(declare-fun x247 () Int)
(declare-fun x795 () Int)
(declare-fun x206 () Int)
(declare-fun x1318 () Int)
(declare-fun x1457 () Int)
(declare-fun x2365 () Int)
(declare-fun x1657 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1031 () Int)
(declare-fun x2204 () Int)
(declare-fun x1644 () Bool)
(declare-fun x2167 () Int)
(declare-fun x923 () Int)
(declare-fun x1447 () Int)
(declare-fun x2168 () Int)
(declare-fun x837 () Bool)
(declare-fun x87 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1691 () Int)
(declare-fun x1341 () Int)
(declare-fun x2164 () Int)
(declare-fun x790 () Int)
(declare-fun x2142 () Bool)
(declare-fun x618 () Bool)
(declare-fun x2075 () Int)
(declare-fun x1655 () Bool)
(declare-fun x926 () Int)
(declare-fun x1927 () Int)
(declare-fun x339 () Bool)
(declare-fun x290 () Int)
(declare-fun x2033 () Bool)
(declare-fun x1333 () Int)
(declare-fun x512 () Int)
(declare-fun x1833 () Int)
(declare-fun x1442 () Int)
(declare-fun x1033 () Int)
(declare-fun x2133 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x698 () Bool)
(declare-fun x1018 () Int)
(declare-fun x1838 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1932 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1656 () Int)
(declare-fun x417 () Int)
(declare-fun x1414 () Int)
(declare-fun x1720 () Int)
(declare-fun x1886 () Int)
(declare-fun x1415 () Int)
(declare-fun x800 (Int) Int)
(declare-fun x436 () Int)
(declare-fun x2181 () Bool)
(declare-fun x261 () Int)
(declare-fun x719 () Bool)
(declare-fun x248 () Bool)
(declare-fun x583 () Int)
(declare-fun x2234 () Int)
(declare-fun x192 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1735 () Int)
(declare-fun x2309 () Int)
(declare-fun x2313 () Bool)
(declare-fun x40 () Bool)
(declare-fun x456 () Bool)
(declare-fun x980 () Int)
(declare-fun x1144 () Int)
(declare-fun x2194 () Bool)
(declare-fun x216 () Int)
(declare-fun x442 () Int)
(declare-fun x569 () Int)
(declare-fun x1235 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1365 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2076 () Int)
(declare-fun x2306 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x2315 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x29 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1549 () Int)
(declare-fun x327 () Int)
(declare-fun x635 () Bool)
(declare-fun x667 () Int)
(declare-fun x2099 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1864 () Int)
(declare-fun x2151 () Int)
(declare-fun x709 () Int)
(declare-fun x2294 () Int)
(declare-fun x2344 () Int)
(declare-fun x1761 () Int)
(declare-fun x2240 () Int)
(declare-fun x2246 () Int)
(declare-fun x768 () Int)
(declare-fun x2182 () Int)
(declare-fun x1322 () Int)
(declare-fun x1811 () Int)
(declare-fun x647 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1859 () Int)
(declare-fun x488 () Int)
(declare-fun x967 () Bool)
(declare-fun x313 () Int)
(declare-fun x6 () Int)
(declare-fun x1136 (Int Int) Int)
(declare-fun x922 () Int)
(declare-fun x1934 () Int)
(declare-fun x1736 () Int)
(declare-fun x701 () Int)
(declare-fun x893 () Int)
(declare-fun x2363 () Int)
(declare-fun x1800 () Int)
(declare-fun x309 () Int)
(declare-fun x459 () Bool)
(declare-fun x317 () Int)
(declare-fun x2108 () Bool)
(declare-fun x699 () Int)
(declare-fun x1840 () Bool)
(declare-fun x1772 () Int)
(declare-fun x912 () Int)
(declare-fun x210 () Int)
(declare-fun x621 () Int)
(declare-fun x123 () Int)
(declare-fun x397 () Int)
(declare-fun x295 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x1332 () Int)
(declare-fun x1973 () Bool)
(declare-fun x423 () Int)
(declare-fun x834 () Int)
(declare-fun x1988 () Int)
(declare-fun x1750 () Bool)
(declare-fun x914 () Int)
(declare-fun x350 () Int)
(declare-fun x471 () Int)
(declare-fun x665 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x246 () Int)
(declare-fun x9 () Int)
(declare-fun x729 () Int)
(declare-fun x1976 () Int)
(declare-fun x1663 () Int)
(declare-fun x991 () Int)
(declare-fun x88 () Bool)
(declare-fun x386 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x1660 () Int)
(declare-fun x1372 () Int)
(declare-fun x579 () Bool)
(declare-fun x1821 () Int)
(declare-fun x47 () Int)
(declare-fun x1856 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x662 () Int)
(declare-fun x1375 () Bool)
(declare-fun x195 () Int)
(declare-fun x1176 () Bool)
(declare-fun x318 () Int)
(declare-fun x631 () Int)
(declare-fun x1867 () Int)
(declare-fun x480 (Int) Int)
(declare-fun x1293 () Bool)
(declare-fun x870 () Int)
(declare-fun x1204 () Int)
(declare-fun x936 () Bool)
(declare-fun x547 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x26 () Int)
(declare-fun x2192 () Int)
(declare-fun x2356 () Int)
(declare-fun x1396 () Int)
(declare-fun x514 () Int)
(declare-fun x2050 () Bool)
(declare-fun x2298 () Int)
(declare-fun x743 () Bool)
(declare-fun x2083 () Int)
(declare-fun x2275 () Int)
(declare-fun x597 () Int)
(declare-fun x1754 () Int)
(declare-fun x253 () Int)
(declare-fun x1328 () Int)
(declare-fun x12 () Int)
(declare-fun x139 () Int)
(declare-fun x1845 () Bool)
(declare-fun x847 () Int)
(declare-fun x1064 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x147 () Int)
(declare-fun x818 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1861 () Int)
(declare-fun x464 () Bool)
(declare-fun x255 () Int)
(declare-fun x167 (Int) Int)
(declare-fun x1312 () Int)
(declare-fun x1996 () Int)
(declare-fun x1192 () Int)
(declare-fun x959 () Int)
(declare-fun x1275 () Int)
(declare-fun x2138 () Int)
(declare-fun x797 () Int)
(declare-fun x1729 () Int)
(declare-fun x1622 () Int)
(declare-fun x626 () Int)
(declare-fun x1509 () Int)
(declare-fun x1073 () Int)
(declare-fun x2227 () Int)
(declare-fun x132 () Int)
(declare-fun x2274 () Int)
(declare-fun x530 () Bool)
(declare-fun x2326 () Int)
(declare-fun x276 () Int)
(declare-fun x596 () Int)
(declare-fun x921 () Bool)
(declare-fun x1871 () Int)
(declare-fun x2314 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1488 () Int)
(declare-fun x1704 () Bool)
(declare-fun x2077 () Int)
(declare-fun x541 () Int)
(declare-fun x1054 () Int)
(declare-fun x481 () Bool)
(declare-fun x137 () Bool)
(declare-fun x822 () Int)
(declare-fun x1593 () Int)
(declare-fun x1760 () Int)
(declare-fun x2327 () Bool)
(declare-fun x516 () Int)
(declare-fun x2259 () Bool)
(declare-fun x48 () Int)
(declare-fun x302 () Int)
(declare-fun x934 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1438 () Int)
(declare-fun x796 () Int)
(declare-fun x1470 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1000 () Int)
(declare-fun x2198 () Int)
(declare-fun x138 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x755 () Int)
(declare-fun x265 () Bool)
(declare-fun x103 () Bool)
(declare-fun x1897 () Int)
(declare-fun x148 () Int)
(declare-fun x1076 () Int)
(declare-fun x1556 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1553 () Int)
(declare-fun x538 () Int)
(declare-fun x613 () Int)
(declare-fun x1562 () Bool)
(declare-fun x824 () Int)
(declare-fun x1387 () Bool)
(declare-fun x2300 () Int)
(declare-fun x344 () Bool)
(declare-fun x958 () Int)
(declare-fun x1652 () Bool)
(declare-fun x2221 () Int)
(declare-fun x390 () Int)
(declare-fun x1791 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x185 () Int)
(declare-fun x114 () Int)
(declare-fun x2056 () Bool)
(declare-fun x102 () Bool)
(declare-fun x1412 () Int)
(declare-fun x833 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x2215 () Int)
(declare-fun x1220 () Int)
(declare-fun x334 () Int)
(declare-fun x357 () Int)
(declare-fun x542 () Int)
(declare-fun x1688 () Int)
(declare-fun x1179 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x1432 () Int)
(declare-fun x2006 () Int)
(declare-fun x612 () Int)
(declare-fun x96 () Int)
(declare-fun x897 () Int)
(declare-fun x1944 () Int)
(declare-fun x1783 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x266 () Int)
(declare-fun x254 () Bool)
(declare-fun x1639 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1643 () Int)
(declare-fun x158 () Int)
(declare-fun x1198 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x638 () Int)
(declare-fun x894 () Int)
(declare-fun x2107 () Bool)
(declare-fun x2242 () Int)
(declare-fun x789 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1920 () Bool)
(declare-fun x1706 () Int)
(declare-fun x2331 () Bool)
(declare-fun x1089 () Int)
(declare-fun x2057 () Int)
(declare-fun x198 () Int)
(declare-fun x497 () Int)
(declare-fun x536 () Bool)
(declare-fun x1379 () Int)
(declare-fun x686 () Int)
(declare-fun x201 () Int)
(declare-fun x1991 () Int)
(declare-fun x1879 () Bool)
(declare-fun x758 () Int)
(declare-fun x1931 () Int)
(declare-fun x909 () Bool)
(declare-fun x197 () Bool)
(declare-fun x391 () Bool)
(declare-fun x342 () Int)
(declare-fun x1082 () Int)
(declare-fun x888 () Int)
(declare-fun x745 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x550 () Int)
(declare-fun x250 () Int)
(declare-fun x1531 () Int)
(declare-fun x141 () Int)
(declare-fun x2297 () Bool)
(declare-fun x1745 () Int)
(declare-fun x2129 () Bool)
(declare-fun x1565 () Int)
(declare-fun x1604 () Int)
(declare-fun x188 () Bool)
(declare-fun x2321 () Int)
(declare-fun x1352 () Int)
(declare-fun x2271 () Bool)
(declare-fun x659 () Int)
(declare-fun x229 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x275 () Bool)
(declare-fun x688 () Int)
(declare-fun x1471 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1325 () Int)
(declare-fun x142 () Bool)
(declare-fun x2230 () Int)
(declare-fun x720 () Int)
(declare-fun x66 (Int Int Int) Int)
(declare-fun x806 () Int)
(declare-fun x1148 () Int)
(declare-fun x868 () Int)
(declare-fun x348 () Int)
(declare-fun x37 () Int)
(declare-fun x990 () Bool)
(declare-fun x1636 () Int)
(declare-fun x1599 () Int)
(declare-fun x1423 (Int) Int)
(declare-fun x1228 () Int)
(declare-fun x1710 () Int)
(declare-fun x172 () Int)
(declare-fun x2079 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1071 () Int)
(declare-fun x46 () Int)
(declare-fun x374 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1374 () Int)
(declare-fun x351 () Int)
(declare-fun x1427 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x244 () Bool)
(declare-fun x263 () Int)
(declare-fun x627 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x1554 () Int)
(declare-fun x10 () Int)
(declare-fun x1830 () Int)
(declare-fun x2185 () Int)
(declare-fun x1434 () Int)
(declare-fun x2216 (Int) Int)
(declare-fun x468 () Int)
(declare-fun x1747 () Bool)
(declare-fun x906 () Int)
(declare-fun x2347 (Int) Int)
(declare-fun x1960 () Int)
(declare-fun x2338 () Int)
(declare-fun x186 () Int)
(declare-fun x407 () Int)
(declare-fun x989 () Int)
(declare-fun x2337 () Int)
(declare-fun x694 () Bool)
(declare-fun x726 () Int)
(declare-fun x2165 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x903 () Int)
(declare-fun x349 () Int)
(declare-fun x1270 () Int)
(declare-fun x1614 () Int)
(declare-fun x952 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x2340 () Int)
(declare-fun x2122 () Int)
(declare-fun x24 () Int)
(declare-fun x2295 () Int)
(declare-fun x2009 () Int)
(declare-fun x1382 (Int) Int)
(declare-fun x281 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1085 () Int)
(declare-fun x1779 () Int)
(declare-fun x1682 () Int)
(declare-fun x154 () Int)
(declare-fun x738 () Bool)
(declare-fun x1645 () Int)
(declare-fun x2158 () Bool)
(declare-fun x258 () Int)
(declare-fun x716 () Bool)
(declare-fun x1898 () Int)
(declare-fun x2025 () Int)
(declare-fun x94 () Int)
(declare-fun x1103 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x326 () Int)
(declare-fun x207 () Bool)
(declare-fun x1707 () Int)
(declare-fun x1625 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x1399 () Int)
(declare-fun x1964 () Int)
(declare-fun x714 () Int)
(declare-fun x960 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1460 () Int)
(declare-fun x841 () Int)
(declare-fun x970 () Bool)
(declare-fun x1725 () Int)
(declare-fun x1941 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1883 () Bool)
(declare-fun x120 () Bool)
(declare-fun x949 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1166 () Int)
(declare-fun x1309 () Int)
(declare-fun x1846 () Int)
(declare-fun x1370 () Int)
(declare-fun x982 () Bool)
(declare-fun x1597 () Int)
(declare-fun x616 () Int)
(declare-fun x1486 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x2285 () Int)
(declare-fun x1894 () Int)
(declare-fun x1014 () Int)
(declare-fun x1215 () Int)
(declare-fun x1177 () Int)
(declare-fun x826 () Int)
(declare-fun x237 () Int)
(declare-fun x764 () Int)
(declare-fun x2290 () Int)
(declare-fun x953 () Int)
(declare-fun x1425 () Int)
(declare-fun x1108 () Int)
(declare-fun x629 () Int)
(declare-fun x1167 () Int)
(declare-fun x2086 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x2012 () Int)
(declare-fun x22 () Int)
(declare-fun x1044 () Bool)
(declare-fun x1687 () Int)
(declare-fun x2163 () Int)
(declare-fun x2238 () Bool)
(declare-fun x1803 () Int)
(declare-fun x1584 () Bool)
(declare-fun x168 () Int)
(declare-fun x1926 () Int)
(declare-fun x1172 () Int)
(declare-fun x2041 () Int)
(declare-fun x1417 () Int)
(declare-fun x416 () Int)
(declare-fun x2330 () Int)
(declare-fun x231 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x473 () Int)
(declare-fun x1454 () Int)
(declare-fun x848 () Int)
(declare-fun x356 () Bool)
(declare-fun x1741 () Int)
(declare-fun x45 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x969 () Int)
(declare-fun x814 () Int)
(declare-fun x2292 () Bool)
(declare-fun x835 () Int)
(declare-fun x49 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x2051 () Int)
(declare-fun x278 () Int)
(declare-fun x176 (Int) Int)
(declare-fun x1011 () Int)
(declare-fun x149 () Int)
(declare-fun x861 () Int)
(declare-fun x2229 () Int)
(declare-fun x1858 () Int)
(declare-fun x234 () Bool)
(declare-fun x1344 () Int)
(declare-fun x1125 () Int)
(declare-fun x1139 () Int)
(declare-fun x645 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x1069 () Int)
(declare-fun x3 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1727 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x366 () Bool)
(declare-fun x413 () Int)
(declare-fun x489 () Int)
(declare-fun x44 () Int)
(declare-fun x2101 () Int)
(declare-fun x1847 () Bool)
(declare-fun x2281 () Int)
(declare-fun x1481 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x1056 () Int)
(declare-fun x439 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x898 () Int)
(declare-fun x1008 () Int)
(declare-fun x256 () Int)
(declare-fun x900 () Int)
(declare-fun x2026 () Int)
(declare-fun x2222 () Int)
(declare-fun x2333 () Int)
(declare-fun x1181 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x500 () Int)
(declare-fun x1642 () Int)
(declare-fun x929 () Int)
(declare-fun x304 () Int)
(declare-fun x657 () Int)
(declare-fun x1133 () Int)
(declare-fun x749 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1059 () Bool)
(declare-fun x2036 () Int)
(declare-fun x649 () Int)
(declare-fun x2208 () Int)
(declare-fun x193 () Int)
(declare-fun x1764 () Int)
(declare-fun x587 () Bool)
(declare-fun x116 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1526 () Int)
(declare-fun x1876 () Int)
(declare-fun x1580 () Bool)
(declare-fun x687 () Bool)
(declare-fun x2184 () Int)
(declare-fun x779 () Int)
(declare-fun x917 () Int)
(declare-fun x1828 () Int)
(declare-fun x1916 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x993 () Int)
(declare-fun x1810 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x315 () Bool)
(declare-fun x230 () Bool)
(declare-fun x509 () Int)
(declare-fun x1021 () Int)
(declare-fun x2258 () Int)
(declare-fun x2260 () Bool)
(declare-fun x567 () Int)
(declare-fun x1241 () Int)
(declare-fun x387 () Int)
(declare-fun x864 () Int)
(declare-fun x493 () Int)
(declare-fun x654 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x1598 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x322 () Int)
(declare-fun x811 () Int)
(declare-fun x804 () Int)
(declare-fun x338 () Int)
(declare-fun x2044 () Int)
(declare-fun x1051 () Int)
(declare-fun x1957 () Bool)
(declare-fun x484 () Int)
(declare-fun x431 () Int)
(declare-fun x1943 () Int)
(declare-fun x883 () Int)
(declare-fun x238 () Int)
(declare-fun x880 () Int)
(declare-fun x992 () Bool)
(declare-fun x751 () Int)
(declare-fun x485 () Int)
(declare-fun x661 () Bool)
(declare-fun x1782 () Int)
(declare-fun x1742 () Bool)
(declare-fun x2276 () Int)
(declare-fun x1674 () Bool)
(declare-fun x1588 () Int)
(declare-fun x988 () Int)
(declare-fun x666 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1683 () Int)
(declare-fun x881 () Bool)
(declare-fun x1109 () Int)
(declare-fun x71 () Int)
(declare-fun x2053 () Int)
(declare-fun x784 () Int)
(declare-fun x722 () Int)
(declare-fun x1591 () Int)
(declare-fun x1302 () Int)
(declare-fun x867 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1075 () Int)
(declare-fun x1019 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1464 () Int)
(declare-fun x178 () Int)
(declare-fun x1635 () Bool)
(declare-fun x372 () Int)
(declare-fun x1354 () Bool)
(declare-fun x62 () Bool)
(declare-fun x1967 () Int)
(declare-fun x1034 () Int)
(declare-fun x1223 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x2187 () Int)
(declare-fun x1150 () Int)
(declare-fun x2120 () Bool)
(declare-fun x477 () Int)
(declare-fun x1854 () Int)
(declare-fun x1385 () Bool)
(declare-fun x77 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x2080 () Bool)
(declare-fun x878 () Int)
(declare-fun x611 () Int)
(declare-fun x166 () Int)
(declare-fun x2072 () Int)
(declare-fun x1654 () Bool)
(declare-fun x747 () Bool)
(declare-fun x447 () Bool)
(declare-fun x448 () Int)
(declare-fun x2049 () Int)
(declare-fun x1930 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x604 () Int)
(declare-fun x2225 () Int)
(declare-fun x544 () Int)
(declare-fun x1164 () Int)
(declare-fun x1364 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1424 () Bool)
(declare-fun x1891 () Int)
(declare-fun x2317 () Bool)
(declare-fun x2093 () Int)
(declare-fun x1901 () Bool)
(declare-fun x705 () Int)
(declare-fun x1092 () Int)
(declare-fun x97 () Int)
(declare-fun x1416 () Int)
(declare-fun x558 () Int)
(declare-fun x1649 () Int)
(declare-fun x2255 () Bool)
(declare-fun x831 (Int) Int)
(declare-fun x446 () Int)
(declare-fun x2125 () Int)
(declare-fun x2270 () Int)
(declare-fun x1777 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1268 () Int)
(declare-fun x135 () Int)
(declare-fun x131 () Int)
(declare-fun x1670 () Int)
(declare-fun x2289 () Bool)
(declare-fun x692 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1458 () Int)
(declare-fun x2301 () Bool)
(declare-fun x1923 () Int)
(declare-fun x1342 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1426 () Int)
(declare-fun x524 () Int)
(declare-fun x1675 () Bool)
(declare-fun x529 () Int)
(declare-fun x2250 () Bool)
(declare-fun x2047 () Int)
(declare-fun x1459 () Bool)
(declare-fun x173 () Bool)
(declare-fun x1485 () Int)
(declare-fun x411 () Bool)
(declare-fun x632 () Int)
(declare-fun x710 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x896 () Int)
(declare-fun x1516 () Int)
(declare-fun x424 () Bool)
(declare-fun x1039 () Int)
(declare-fun x181 () Bool)
(declare-fun x297 () Int)
(declare-fun x588 () Bool)
(declare-fun x981 () Bool)
(declare-fun x475 () Int)
(declare-fun x2148 () Int)
(declare-fun x105 () Int)
(declare-fun x1489 () Int)
(declare-fun x2239 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x353 () Int)
(declare-fun x479 () Bool)
(declare-fun x1158 () Int)
(declare-fun x690 () Int)
(declare-fun x1023 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x241 () Int)
(declare-fun x964 () Bool)
(declare-fun x388 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x507 () Int)
(declare-fun x1448 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x525 () Bool)
(declare-fun x462 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x798 () Bool)
(declare-fun x1661 () Int)
(declare-fun x573 () Int)
(declare-fun x187 () Bool)
(declare-fun x2186 () Int)
(declare-fun x1404 () Bool)
(declare-fun x757 () Int)
(declare-fun x1677 () Int)
(declare-fun x1893 () Int)
(declare-fun x1546 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x1831 () Int)
(declare-fun x1815 () Int)
(declare-fun x2286 () Int)
(declare-fun x1693 () Int)
(declare-fun x1793 () Int)
(declare-fun x1074 () Int)
(declare-fun x1009 () Int)
(declare-fun x1535 () Int)
(declare-fun x1246 () Int)
(declare-fun x1508 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1843 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1143 () Int)
(declare-fun x59 () Int)
(declare-fun x2189 () Int)
(declare-fun x1050 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x689 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1853 () Int)
(declare-fun x570 () Bool)
(declare-fun x155 () Int)
(declare-fun x1834 () Int)
(declare-fun x80 () Bool)
(declare-fun x995 () Bool)
(declare-fun x228 () Int)
(declare-fun x1818 () Int)
(declare-fun x1774 () Bool)
(declare-fun x2305 () Int)
(declare-fun x724 () Int)
(declare-fun x262 () Bool)
(declare-fun x1714 () Int)
(declare-fun x2217 () Int)
(declare-fun x1061 () Int)
(declare-fun x104 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x2143 () Int)
(declare-fun x815 () Int)
(declare-fun x2268 () Bool)
(declare-fun x2066 () Int)
(declare-fun x1763 () Int)
(declare-fun x1045 () Int)
(declare-fun x2308 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x56 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1579 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1129 () Int)
(declare-fun x1326 () Int)
(declare-fun x696 () Bool)
(declare-fun x942 () Bool)
(declare-fun x733 () Bool)
(declare-fun x723 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1052 () Bool)
(declare-fun x875 () Int)
(declare-fun x656 () Bool)
(declare-fun x1849 () Int)
(declare-fun x2364 () Int)
(declare-fun x2085 () Bool)
(declare-fun x2096 () Int)
(declare-fun x308 () Bool)
(declare-fun x946 () Int)
(declare-fun x1287 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x553 () Int)
(declare-fun x1015 () Int)
(declare-fun x1506 () Bool)
(declare-fun x2178 () Int)
(declare-fun x329 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x454 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x761 () Int)
(declare-fun x1911 () Int)
(declare-fun x144 () Bool)
(declare-fun x310 () Int)
(declare-fun x1411 () Int)
(declare-fun x2288 () Int)
(declare-fun x2243 () Int)
(declare-fun x70 () Int)
(declare-fun x347 () Int)
(declare-fun x1437 () Bool)
(declare-fun x828 () Int)
(declare-fun x1866 () Int)
(declare-fun x2254 () Int)
(declare-fun x1884 () Bool)
(declare-fun x54 () Int)
(declare-fun x264 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1138 () Int)
(declare-fun x843 () Bool)
(declare-fun x559 () Int)
(declare-fun x2176 () Bool)
(declare-fun x2245 () Int)
(declare-fun x2055 () Bool)
(declare-fun x1600 () Int)
(declare-fun x402 () Int)
(declare-fun x503 () Int)
(declare-fun x1807 () Bool)
(declare-fun x363 () Bool)
(declare-fun x113 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x236 (Int) Int)
(declare-fun x766 () Bool)
(declare-fun x791 () Int)
(declare-fun x1852 () Bool)
(declare-fun x1980 () Int)
(declare-fun x36 () Int)
(declare-fun x1142 () Int)
(declare-fun x2130 () Int)
(declare-fun x1248 () Bool)
(declare-fun x2324 () Int)
(declare-fun x865 () Int)
(declare-fun x1388 () Bool)
(declare-fun x165 () Int)
(declare-fun x528 () Bool)
(declare-fun x1525 () Int)
(declare-fun x920 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1178 () Int)
(declare-fun x540 () Int)
(declare-fun x2059 () Bool)
(declare-fun x100 () Int)
(declare-fun x2005 () Bool)
(declare-fun x772 () Int)
(declare-fun x932 () Bool)
(declare-fun x1152 () Int)
(declare-fun x985 () Int)
(declare-fun x107 () Int)
(declare-fun x1766 () Bool)
(declare-fun x619 () Int)
(declare-fun x1474 () Int)
(declare-fun x368 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x67 () Int)
(declare-fun x1826 () Int)
(declare-fun x2131 () Bool)
(declare-fun x2128 () Int)
(declare-fun x1329 () Int)
(declare-fun x556 () Bool)
(declare-fun x731 () Int)
(declare-fun x469 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x299 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x496 () Bool)
(declare-fun x274 () Bool)
(declare-fun x2346 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1119 () Int)
(declare-fun x84 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1290 () Int)
(declare-fun x2267 () Int)
(declare-fun x211 () Int)
(declare-fun x282 () Int)
(declare-fun x1523 () Int)
(declare-fun x2160 () Int)
(declare-fun x273 () Int)
(declare-fun x1118 () Bool)
(declare-fun x830 () Int)
(declare-fun x2349 () Bool)
(declare-fun x398 () Bool)
(declare-fun x2180 () Int)
(declare-fun x1128 () Int)
(declare-fun x280 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x119 () Int)
(declare-fun x1594 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1360 () Int)
(declare-fun x159 () Bool)
(declare-fun x1759 () Int)
(declare-fun x235 () Bool)
(declare-fun x642 () Int)
(declare-fun x1602 () Bool)
(declare-fun x16 () Int)
(declare-fun x1273 () Int)
(declare-fun x1114 () Int)
(declare-fun x1130 () Int)
(declare-fun x1180 () Bool)
(declare-fun x561 () Int)
(declare-fun x2117 () Int)
(declare-fun x997 () Int)
(declare-fun x545 () Int)
(declare-fun x286 () Int)
(declare-fun x956 () Int)
(declare-fun x1245 () Int)
(declare-fun x1820 () Int)
(declare-fun x1299 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x968 () Int)
(declare-fun x1954 () Bool)
(declare-fun x1353 (Int) Int)
(declare-fun x260 () Bool)
(declare-fun x452 () Int)
(declare-fun x257 () Bool)
(declare-fun x482 () Bool)
(declare-fun x225 () Int)
(declare-fun x406 () Int)
(declare-fun x450 () Int)
(declare-fun x633 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1026 () Int)
(declare-fun x437 () Int)
(declare-fun x1570 () Int)
(declare-fun x566 () Bool)
(declare-fun x259 () Int)
(declare-fun x2038 () Bool)
(declare-fun x899 () Int)
(declare-fun x737 () Bool)
(declare-fun x816 () Int)
(declare-fun x697 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x2060 () Int)
(declare-fun x82 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x999 () Int)
(declare-fun x859 () Bool)
(declare-fun x2360 () Int)
(declare-fun x533 () Bool)
(declare-fun x2071 () Bool)
(declare-fun x913 () Bool)
(declare-fun x2334 () Int)
(declare-fun x1571 () Int)
(declare-fun x872 () Bool)
(declare-fun x651 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1281 () Int)
(declare-fun x973 () Int)
(declare-fun x2089 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x759 () Int)
(declare-fun x1984 () Int)
(declare-fun x706 () Int)
(declare-fun x245 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1550 (Int) Int)
(declare-fun x531 () Int)
(declare-fun x1159 () Int)
(declare-fun x846 () Bool)
(declare-fun x333 () Int)
(declare-fun x455 () Bool)
(declare-fun x1151 () Int)
(declare-fun x2048 () Int)
(declare-fun x1266 () Bool)
(declare-fun x73 () Int)
(declare-fun x7 () Int)
(declare-fun x606 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1337 () Int)
(declare-fun x860 () Int)
(declare-fun x2008 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x592 () Int)
(declare-fun x1455 () Int)
(declare-fun x1466 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1912 () Int)
(declare-fun x2095 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x287 () Bool)
(declare-fun x874 () Int)
(declare-fun x2082 () Bool)
(declare-fun x43 () Bool)
(declare-fun x1258 () Int)
(declare-fun x535 () Int)
(declare-fun x763 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x2147 () Int)
(declare-fun x1197 () Bool)
(declare-fun x285 () Int)
(declare-fun x2188 () Int)
(declare-fun x1419 () Bool)
(declare-fun x961 () Int)
(declare-fun x1522 () Int)
(declare-fun x1311 () Bool)
(declare-fun x396 () Int)
(declare-fun x2042 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1278 () Int)
(declare-fun x1407 () Bool)
(declare-fun x2284 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1709 () Int)
(declare-fun x1359 () Int)
(declare-fun x321 () Int)
(declare-fun x2154 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x2170 () Bool)
(declare-fun x42 () Int)
(declare-fun x1371 () Int)
(declare-fun x1072 (Int Int Int Int Int Int Int) Int)
(declare-fun x1781 () Int)
(declare-fun x1937 () Bool)
(declare-fun x715 () Bool)
(declare-fun x268 () Int)
(declare-fun x371 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x869 () Bool)
(declare-fun x884 () Int)
(declare-fun x2105 (Int Int Int Int Int Int) Int)
(declare-fun x1667 () Bool)
(declare-fun x728 () Int)
(declare-fun x2116 () Bool)
(declare-fun x1186 () Int)
(declare-fun x2322 () Int)
(declare-fun x721 () Int)
(declare-fun x1405 (Int) Int)
(declare-fun x460 () Int)
(declare-fun x1347 () Int)
(declare-fun x1032 () Bool)
(declare-fun x1247 () Int)
(declare-fun x109 () Bool)
(declare-fun x1596 () Int)
(declare-fun x2199 () Int)
(declare-fun x1896 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1946 () Int)
(declare-fun x136 () Int)
(declare-fun x1070 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1844 () Int)
(declare-fun x352 () Int)
(declare-fun x215 () Bool)
(declare-fun x2247 () Int)
(declare-fun x377 () Int)
(declare-fun x1925 () Int)
(declare-fun x163 () Int)
(declare-fun x2323 () Int)
(declare-fun x1733 () Int)
(declare-fun x2123 () Int)
(declare-fun x672 () Bool)
(declare-fun x443 () Int)
(declare-fun x976 () Int)
(declare-fun x145 () Int)
(declare-fun x2293 () Bool)
(declare-fun x1540 () Int)
(declare-fun x954 () Int)
(declare-fun x1557 () Int)
(declare-fun x1131 () Int)
(declare-fun x1298 () Bool)
(declare-fun x1903 () Int)
(declare-fun x196 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1517 () Bool)
(declare-fun x404 () Int)
(declare-fun x1740 () Bool)
(declare-fun x378 () Int)
(declare-fun x492 () Int)
(declare-fun x1503 () Int)
(declare-fun x2210 () Int)
(declare-fun x130 () Int)
(declare-fun x1875 () Bool)
(declare-fun x2040 () Int)
(declare-fun x2014 () Int)
(declare-fun x1837 () Int)
(declare-fun x1313 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x902 () Int)
(declare-fun x1367 () Int)
(declare-fun x2032 () Int)
(declare-fun x955 () Int)
(declare-fun x520 (Int) Int)
(declare-fun x1445 () Int)
(declare-fun x2183 () Bool)
(declare-fun x11 () Bool)
(declare-fun x2367 () Int)
(declare-fun x1040 () Int)
(declare-fun x643 () Int)
(declare-fun x1568 () Int)
(declare-fun x1552 () Int)
(declare-fun x607 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x1067 (Int Int) Int)
(declare-fun x483 () Int)
(declare-fun x249 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x676 () Int)
(declare-fun x311 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x453 () Int)
(declare-fun x20 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x1662 () Int)
(declare-fun x346 () Int)
(declare-fun x1567 () Int)
(declare-fun x1985 () Bool)
(declare-fun x2320 () Bool)
(declare-fun x1669 () Int)
(declare-fun x669 () Bool)
(declare-fun x1392 () Int)
(declare-fun x581 () Bool)
(declare-fun x1038 () Int)
(declare-fun x1254 () Bool)
(declare-fun x380 () Bool)
(declare-fun x628 () Int)
(declare-fun x873 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1878 () Int)
(declare-fun x526 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1595 () Int)
(declare-fun x515 () Bool)
(declare-fun x679 () Int)
(declare-fun x2010 () Bool)
(declare-fun x242 () Int)
(declare-fun x1890 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x2213 () Int)
(declare-fun x2352 () Bool)
(declare-fun x1575 () Int)
(declare-fun x2104 () Bool)
(declare-fun x170 () Int)
(declare-fun x1377 (Int) Int)
(declare-fun x122 () Int)
(declare-fun x1487 () Bool)
(declare-fun x214 () Int)
(declare-fun x419 () Int)
(declare-fun x1612 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x306 () Int)
(declare-fun x2021 () Int)
(declare-fun x1122 () Int)
(declare-fun x90 () Int)
(declare-fun x1042 () Int)
(declare-fun x367 () Bool)
(declare-fun x2304 () Int)
(declare-fun x360 () Int)
(declare-fun x813 (Int) Int)
(declare-fun x1090 () Bool)
(declare-fun x1940 () Int)
(declare-fun x2241 () Int)
(declare-fun x126 () Bool)
(declare-fun x1292 () Int)
(declare-fun x695 () Int)
(declare-fun x1999 () Int)
(declare-fun x794 () Int)
(declare-fun x1511 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x1083 () Int)
(declare-fun x1679 () Bool)
(declare-fun x2166 () Int)
(declare-fun x853 () Int)
(declare-fun x574 () Bool)
(declare-fun x1711 () Int)
(declare-fun x399 () Int)
(declare-fun x851 () Bool)
(declare-fun x320 () Bool)
(declare-fun x653 () Int)
(declare-fun x1068 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1839 () Int)
(declare-fun x1563 () Int)
(declare-fun x1765 () Bool)
(declare-fun x1304 () Int)
(declare-fun x2362 () Int)
(declare-fun x1285 () Int)
(declare-fun x223 () Int)
(declare-fun x2146 () Int)
(declare-fun x1368 () Int)
(declare-fun x599 () Bool)
(declare-fun x2015 () Int)
(declare-fun x546 () Int)
(declare-fun x565 () Bool)
(declare-fun x1780 (Int) Int)
(declare-fun x571 () Bool)
(declare-fun x660 () Int)
(declare-fun x901 () Bool)
(declare-fun x2211 () Int)
(declare-fun x2328 () Int)
(declare-fun x1253 () Int)
(declare-fun x760 () Int)
(declare-fun x1769 () Bool)
(declare-fun x21 () Bool)
(declare-fun x200 () Int)
(declare-fun x32 () Bool)
(declare-fun x603 () Int)
(declare-fun x303 (Int) Int)
(declare-fun x1117 () Int)
(declare-fun x1501 () Int)
(declare-fun x1997 () Int)
(declare-fun x1218 () Int)
(declare-fun x1469 () Int)
(declare-fun x1974 () Int)
(declare-fun x1848 () Int)
(declare-fun x877 () Int)
(declare-fun x1887 () Int)
(declare-fun x1921 () Bool)
(declare-fun x683 () Int)
(declare-fun x1610 () Bool)
(declare-fun x532 () Bool)
(declare-fun x117 () Bool)
(declare-fun x410 (Int Int) Int)
(declare-fun x14 () Int)
(declare-fun x786 () Bool)
(declare-fun x486 () Int)
(declare-fun x127 () Int)
(declare-fun x294 () Bool)
(declare-fun x799 () Bool)
(declare-fun x361 () Bool)
(declare-fun x494 () Int)
(declare-fun x1908 () Int)
(declare-fun x2200 (Int) Int)
(declare-fun x2311 () Bool)
(declare-fun x1208 () Int)
(declare-fun x1942 () Int)
(declare-fun x931 () Int)
(declare-fun x1753 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x713 () Int)
(declare-fun x2106 () Bool)
(declare-fun x2161 () Int)
(declare-fun x1952 (Int) Int)
(declare-fun x2280 () Int)
(declare-fun x2084 () Int)
(declare-fun x93 () Bool)
(declare-fun x601 () Int)
(declare-fun x1238 () Int)
(declare-fun x1261 () Bool)
(declare-fun x2110 (Int) Int)
(declare-fun x1357 () Int)
(declare-fun x1390 () Bool)
(declare-fun x882 () Bool)
(declare-fun x85 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x2249 () Int)
(declare-fun x1744 () Bool)
(declare-fun x343 () Int)
(declare-fun x820 () Int)
(declare-fun x1284 () Int)
(declare-fun x673 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2263 () Int)
(declare-fun x1286 () Int)
(declare-fun x1380 () Int)
(declare-fun x668 () Bool)
(declare-fun x91 () Int)
(declare-fun x1323 () Int)
(declare-fun x15 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1809 () Int)
(declare-fun x1630 () Bool)
(declare-fun x1730 () Int)
(declare-fun x161 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1797 () Int)
(declare-fun x337 () Int)
(declare-fun x1482 () Int)
(declare-fun x652 () Int)
(declare-fun x1673 () Int)
(declare-fun x517 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x498 () Bool)
(declare-fun x2078 () Int)
(declare-fun x892 () Bool)
(declare-fun x750 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x53 () Int)
(declare-fun x373 () Int)
(declare-fun x2081 () Int)
(declare-fun x1446 () Bool)
(declare-fun x609 () Bool)
(declare-fun x2054 () Int)
(declare-fun x2256 () Bool)
(declare-fun x852 () Int)
(declare-fun x2112 () Int)
(declare-fun x1449 () Int)
(declare-fun x1169 () Int)
(declare-fun x212 () Int)
(declare-fun x996 () Int)
(declare-fun x1450 () Int)
(declare-fun x409 () Bool)
(declare-fun x430 () Bool)
(declare-fun x2097 () Int)
(declare-fun x435 () Int)
(declare-fun x1962 () Int)
(declare-fun x1705 () Int)
(declare-fun x1717 () Int)
(declare-fun x807 () Int)
(declare-fun x1560 () Int)
(declare-fun x2312 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x365 () Int)
(declare-fun x495 () Int)
(declare-fun x1112 () Bool)
(declare-fun x691 () Bool)
(declare-fun x1256 () Int)
(declare-fun x156 () Bool)
(declare-fun x298 () Int)
(declare-fun x1022 () Int)
(declare-fun x194 () Int)
(declare-fun x1468 () Int)
(declare-fun x220 () Int)
(declare-fun x2228 () Bool)
(declare-fun x31 () Int)
(declare-fun x1274 () Int)
(declare-fun x1100 () Bool)
(declare-fun x748 () Int)
(declare-fun x1664 () Int)
(declare-fun x735 () Bool)
(declare-fun x2074 () Int)
(declare-fun x1062 () Int)
(declare-fun x1929 () Int)
(declare-fun x639 () Int)
(declare-fun x563 () Int)
(declare-fun x336 () Bool)
(declare-fun x160 () Int)
(declare-fun x776 () Int)
(declare-fun x986 () Bool)
(declare-fun x600 () Int)
(declare-fun x1564 () Int)
(declare-fun x1025 () Int)
(declare-fun x1646 () Bool)
(declare-fun x910 () Int)
(declare-fun x1462 () Int)
(declare-fun x915 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x1537 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1678 () Int)
(declare-fun x1521 () Int)
(declare-fun x25 () Int)
(declare-fun x1338 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x844 () Int)
(declare-fun x1938 () Int)
(declare-fun x1692 () Int)
(declare-fun x1257 () Int)
(declare-fun x2169 () Int)
(declare-fun x218 () Int)
(declare-fun x1191 () Int)
(declare-fun x1094 () Int)
(declare-fun x1355 (Int) Int)
(declare-fun x1243 () Bool)
(declare-fun x50 () Bool)
(declare-fun x753 () Int)
(declare-fun x1194 () Bool)
(declare-fun x671 (Int Int Int Int) Int)
(declare-fun x330 () Int)
(declare-fun x394 (Int) Int)
(declare-fun x243 () Int)
(declare-fun x2233 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1422 () Int)
(declare-fun x1651 () Int)
(declare-fun x467 () Int)
(declare-fun x203 () Bool)
(declare-fun x314 () Bool)
(declare-fun x1363 () Int)
(declare-fun x133 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x725 () Int)
(declare-fun x1200 () Int)
(declare-fun x1403 () Int)
(declare-fun x316 () Bool)
(declare-fun x939 () Bool)
(declare-fun x634 () Int)
(declare-fun x979 () Int)
(declare-fun x1915 () Int)
(declare-fun x693 () Bool)
(declare-fun x1832 () Int)
(declare-fun x562 () Bool)
(declare-fun x1719 () Int)
(declare-fun x1049 () Int)
(declare-fun x1513 () Int)
(declare-fun x202 () Bool)
(declare-fun x840 () Int)
(declare-fun x911 () Int)
(declare-fun x1163 () Int)
(declare-fun x1212 () Bool)
(declare-fun x33 () Int)
(declare-fun x2144 () Int)
(declare-fun x405 () Int)
(declare-fun x2064 () Int)
(declare-fun x289 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1716 () Int)
(declare-fun x209 () Int)
(declare-fun x124 () Int)
(declare-fun x1787 () Int)
(declare-fun x81 () Int)
(declare-fun x125 () Int)
(declare-fun x1788 () Int)
(declare-fun x908 () Bool)
(declare-fun x164 () Bool)
(declare-fun x101 () Bool)
(declare-fun x272 () Int)
(declare-fun x895 () Int)
(declare-fun x2103 () Int)
(declare-fun x2203 () Bool)
(declare-fun x595 () Int)
(declare-fun x332 () Int)
(declare-fun x1512 () Int)
(declare-fun x773 () Int)
(declare-fun x55 () Int)
(declare-fun x60 () Int)
(declare-fun x617 () Int)
(declare-fun x1065 () Int)
(declare-fun x1951 () Bool)
(declare-fun x842 () Int)
(declare-fun x1701 () Int)
(declare-fun x2007 () Int)
(declare-fun x1028 (Int Int) Int)
(declare-fun x2124 () Int)
(declare-fun x777 () Int)
(declare-fun x2262 () Bool)
(declare-fun x270 (Int) Int)
(declare-fun x2002 () Int)
(declare-fun x2063 () Bool)
(declare-fun x615 () Int)
(declare-fun x918 () Int)
(declare-fun x1684 () Bool)
(declare-fun x2045 () Int)
(declare-fun x1752 () Int)
(declare-fun x1680 () Bool)
(declare-fun x4 () Bool)
(declare-fun x457 () Int)
(declare-fun x189 () Bool)
(declare-fun x1722 () Int)
(declare-fun x1410 () Int)
(declare-fun x1958 (Int) Int)
(declare-fun x572 () Int)
(declare-fun x636 () Bool)
(declare-fun x1902 () Int)
(declare-fun x279 () Int)
(declare-fun x2029 () Bool)
(declare-fun x63 () Int)
(declare-fun x957 () Int)
(declare-fun x1081 () Int)
(declare-fun x1193 (Int) Int)
(declare-fun x1237 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1504 () Int)
(declare-fun x1315 () Int)
(declare-fun x171 () Int)
(declare-fun x252 (Int) Int)
(declare-fun x1628 () Int)
(declare-fun x1233 () Int)
(declare-fun x300 () Int)
(declare-fun x76 () Int)
(declare-fun x208 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x641 () Bool)
(declare-fun x2149 () Int)
(declare-fun x1206 () Bool)
(declare-fun x110 () Int)
(declare-fun x1002 () Int)
(declare-fun x379 () Int)
(declare-fun x1478 () Int)
(declare-fun x819 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x2287 () Int)
(declare-fun x1027 () Int)
(declare-fun x1183 () Int)
(declare-fun x1210 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1569 () Bool)
(declare-fun x269 () Bool)
(declare-fun x504 () Int)
(declare-fun x1561 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x341 () Int)
(declare-fun x1497 () Int)
(declare-fun x2174 () Int)
(declare-fun x1987 () Bool)
(declare-fun x866 () Bool)
(declare-fun x849 () Int)
(declare-fun x1658 () Int)
(declare-fun x1616 () Int)
(declare-fun x1868 () Int)
(declare-fun x1617 () Bool)
(declare-fun x354 () Int)
(declare-fun x974 () Bool)
(declare-fun x850 () Int)
(declare-fun x1095 () Int)
(declare-fun x1629 () Bool)
(declare-fun x593 () Int)
(declare-fun x1336 () Bool)
(declare-fun x177 () Bool)
(declare-fun x774 () Int)
(declare-fun x1362 () Int)
(declare-fun x2145 () Int)
(declare-fun x2073 () Int)
(declare-fun x2140 () Int)
(declare-fun x375 () Bool)
(declare-fun x2058 () Int)
(declare-fun x886 () Int)
(declare-fun x174 () Int)
(declare-fun x1724 () Int)
(declare-fun x1751 () Int)
(declare-fun x543 () Int)
(declare-fun x950 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1874 () Int)
(declare-fun x977 () Bool)
(declare-fun x560 () Int)
(declare-fun x157 () Int)
(declare-fun x2152 () Int)
(declare-fun x2368 () Bool)
(declare-fun x769 () Int)
(declare-fun x1532 () Bool)
(declare-fun x239 () Bool)
(declare-fun x1586 () Int)
(declare-fun x1947 () Int)
(declare-fun x1913 () Int)
(declare-fun x1995 () Bool)
(declare-fun x1672 () Int)
(declare-fun x5 () Int)
(declare-fun x1493 () Bool)
(declare-fun x2197 () Int)
(declare-fun x61 () Bool)
(declare-fun x2087 () Int)
(declare-fun x1091 () Bool)
(declare-fun x2266 () Int)
(declare-fun x1881 () Int)
(declare-fun x1819 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1484 () Int)
(declare-fun x182 () Bool)
(declare-fun x335 () Int)
(declare-fun x2209 () Bool)
(declare-fun x519 () Int)
(declare-fun x622 () Int)
(declare-fun x732 () Int)
(declare-fun x1249 () Int)
(declare-fun x1348 () Int)
(declare-fun x717 () Bool)
(declare-fun x557 () Int)
(declare-fun x1001 () Bool)
(declare-fun x2248 () Int)
(declare-fun x1982 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1225 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1808 () Int)
(declare-fun x204 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x1203 () Int)
(declare-fun x1573 () Int)
(declare-fun x1 () Bool)
(declare-fun x307 () Bool)
(declare-fun x2342 () Int)
(declare-fun x292 () Int)
(declare-fun x1262 () Bool)
(declare-fun x736 () Int)
(declare-fun x13 () Int)
(declare-fun x1205 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1066 () Int)
(declare-fun x1345 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x889 () Int)
(declare-fun x1350 () Int)
(declare-fun x983 () Int)
(declare-fun x1383 () Bool)
(declare-fun x802 () Int)
(declare-fun x425 () Int)
(declare-fun x75 () Int)
(declare-fun x1805 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x428 () Bool)
(declare-fun x935 () Int)
(declare-fun x1514 () Int)
(declare-fun x2013 () Bool)
(declare-fun x620 () Bool)
(declare-fun x1154 () Int)
(declare-fun x971 () Int)
(declare-fun x1721 () Bool)
(declare-fun x1545 () Int)
(declare-fun x284 () Bool)
(declare-fun x191 () Int)
(declare-fun x1519 () Int)
(declare-fun x381 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x1303 () Int)
(declare-fun x2355 () Int)
(declare-fun x1624 (Int) Int)
(declare-fun x28 () Int)
(declare-fun x1121 () Int)
(declare-fun x1452 () Int)
(declare-fun x712 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x975 () Bool)
(declare-fun x590 () Bool)
(declare-fun x1244 () Int)
(declare-fun x1697 () Bool)
(declare-fun x907 () Int)
(declare-fun x944 () Bool)
(declare-fun x646 () Int)
(declare-fun x680 () Bool)
(declare-fun x2224 (Int) Int)
(declare-fun x1295 () Int)
(declare-fun x2206 () Bool)
(declare-fun x1132 () Int)
(declare-fun x1939 () Bool)
(declare-fun x809 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x825 () Bool)
(declare-fun x987 () Int)
(declare-fun x1703 () Bool)
(declare-fun x74 () Int)
(declare-fun x1055 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x291 () Bool)
(declare-fun x418 () Bool)
(declare-fun x359 () Int)
(declare-fun x916 () Bool)
(declare-fun x1609 () Int)
(declare-fun x1079 () Int)
(declare-fun x283 () Int)
(declare-fun x52 () Int)
(declare-fun x1904 () Int)
(declare-fun x554 () Bool)
(declare-fun x293 () Int)
(declare-fun x2269 () Int)
(declare-fun x1969 () Int)
(declare-fun x27 () Int)
(declare-fun x2137 () Int)
(declare-fun x1773 () Int)
(declare-fun x965 () Int)
(declare-fun x845 () Bool)
(declare-fun x1790 () Int)
(declare-fun x778 () Int)
(declare-fun x1695 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x730 () Int)
(declare-fun x2065 () Int)
(declare-fun x1572 () Bool)
(declare-fun x111 () Int)
(declare-fun x1496 () Int)
(declare-fun x2354 () Int)
(declare-fun x704 () Int)
(declare-fun x1160 () Bool)
(declare-fun x928 () Int)
(declare-fun x1801 () Int)
(declare-fun x1418 () Bool)
(declare-fun x1770 () Int)
(declare-fun x328 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x1566 () Int)
(declare-fun x2022 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1882 () Int)
(declare-fun x162 () Bool)
(declare-fun x2339 () Bool)
(declare-fun x582 () Bool)
(declare-fun x505 () Int)
(declare-fun x1885 () Int)
(declare-fun x184 () Int)
(declare-fun x2092 () Int)
(declare-fun x58 () Int)
(declare-fun x2283 () Bool)
(declare-fun x700 () Int)
(declare-fun x1263 () Int)
(declare-fun x623 () Bool)
(declare-fun x1983 () Int)
(declare-fun x2109 () Int)
(declare-fun x591 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1823 () Int)
(declare-fun x1413 () Bool)
(declare-fun x501 () Int)
(declare-fun x1544 () Int)
(declare-fun x2102 () Int)
(declare-fun x401 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x605 () Int)
(declare-fun x1909 () Int)
(declare-fun x832 () Int)
(declare-fun x2277 () Int)
(declare-fun x602 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x1436 () Int)
(declare-fun x771 () Int)
(declare-fun x2205 () Int)
(declare-fun x1889 () Int)
(declare-fun x99 () Int)
(declare-fun x1910 () Int)
(declare-fun x708 () Int)
(declare-fun x741 () Int)
(declare-fun x1963 () Int)
(declare-fun x68 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x421 () Int)
(declare-fun x389 () Int)
(declare-fun x780 () Bool)
(declare-fun x1317 () Int)
(declare-fun x2202 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x369 () Bool)
(declare-fun x962 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x72 (Int Int) Int)
(declare-fun x2136 () Int)
(declare-fun x518 () Bool)
(declare-fun x1093 () Int)
(declare-fun x267 () Int)
(declare-fun x930 () Bool)
(declare-fun x1855 () Int)
(declare-fun x871 () Int)
(declare-fun x1581 () Int)
(declare-fun x511 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x1046 () Int)
(declare-fun x857 () Int)
(declare-fun x2190 () Int)
(declare-fun x2316 () Int)
(declare-fun x403 () Int)
(declare-fun x1631 () Int)
(declare-fun x781 () Int)
(declare-fun x711 () Int)
(declare-fun x2001 () Int)
(declare-fun x451 () Int)
(declare-fun x644 (Int) Int)
(declare-fun x1842 () Int)
(declare-fun x2257 () Int)
(declare-fun x444 () Int)
(declare-fun x2318 () Int)
(declare-fun x2135 () Bool)
(declare-fun x1538 () Int)
(declare-fun x793 () Int)
(declare-fun x41 (Int Int Int Int Int Int Int Int) Int)
(declare-fun x637 () Int)
(declare-fun x474 () Bool)
(declare-fun x838 () Int)
(declare-fun x1829 () Int)
(declare-fun x1155 () Bool)
(declare-fun x296 () Int)
(declare-fun x2172 () Int)
(declare-fun x180 () Bool)
(declare-fun x677 () Int)
(declare-fun x2278 () Int)
(declare-fun x140 () Int)
(declare-fun x675 () Int)
(declare-fun x2020 () Int)
(declare-fun x1016 () Bool)
(declare-fun x640 () Bool)
(declare-fun x449 (Int) Int)
(declare-fun x1585 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x522 () Int)
(declare-fun x513 () Bool)
(declare-fun x1428 () Int)
(declare-fun x385 () Int)
(declare-fun x1239 () Int)
(declare-fun x319 () Bool)
(declare-fun x392 () Int)
(declare-fun x150 () Int)
(declare-fun x891 () Bool)
(declare-fun x1918 () Int)
(declare-fun x1794 () Int)
(declare-fun x1443 () Bool)
(declare-fun x2253 () Int)
(declare-fun x2223 (Int) Int)
(declare-fun x1126 () Int)
(declare-fun x2357 () Bool)
(declare-fun x904 () Int)
(declare-fun x1718 () Int)
(declare-fun x1836 () Int)
(declare-fun x1850 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1310 () Int)
(declare-fun x382 () Bool)
(declare-fun x2094 () Int)
(declare-fun x1530 () Int)
(declare-fun x1795 () Int)
(declare-fun x2319 () Int)
(declare-fun x1961 () Bool)
(declare-fun x233 () Int)
(declare-fun x1029 () Bool)
(declare-fun x1398 () Int)
(declare-fun x169 () Int)
(declare-fun x2261 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x151 () Int)
(declare-fun x1789 () Bool)
(declare-fun x64 (Int) Int)
(declare-fun x393 () Bool)
(declare-fun x925 () Int)
(declare-fun x240 () Int)
(declare-fun x1619 () Int)
(declare-fun x1201 () Int)
(declare-fun x2341 () Int)
(declare-fun x951 () Int)
(declare-fun x1587 () Int)
(declare-fun x2353 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1110 () Int)
(declare-fun x376 () Int)
(declare-fun x744 () Int)
(declare-fun x1877 () Int)
(declare-fun x1282 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x1863 () Int)
(declare-fun x1515 () Int)
(declare-fun x821 () Bool)
(declare-fun x575 () Bool)
(declare-fun x51 () Int)
(declare-fun x1308 () Int)
(declare-fun x534 () Int)
(declare-fun x1768 () Bool)
(declare-fun x742 () Bool)
(define-fun x2134 ((x1700 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1700) (>= x1700 0)) x1700 (- x1700 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x890 ((x1700 Int)) Int (ite (and (< x1700 0) (>= x1700 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1700 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1700))
(define-fun x1748 ((x426 Int)) Bool (and (>= x426 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x426)))
(define-fun x1202 ((x426 Int)) Bool (and (= (x410 x426 115792089237316195423570985008687907853269984665640564039457584007913129639935) x426) (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) x426)))
(define-fun x1277 ((x426 Int)) Bool (and (= 0 (x410 x426 0)) (= (x410 0 x426) 0)))
(define-fun x1796 ((x426 Int)) Bool (= (x410 x426 x426) x426))
(define-fun x552 ((x426 Int)) Bool (and (x1796 x426) (x1202 x426) (x1277 x426)))
(define-fun x1767 ((x426 Int) (x1433 Int)) Bool (= (x410 x426 x1433) (x410 x1433 x426)))
(define-fun x756 ((x426 Int) (x1433 Int)) Bool (and (=> (>= x426 0) (>= x426 (x410 x426 x1433))) (<= 0 (x410 x426 x1433)) (=> (>= x1433 0) (<= (x410 x426 x1433) x1433))))
(define-fun x978 ((x426 Int) (x1433 Int)) Bool (and (x756 x426 x1433) (x1767 x426 x1433)))
(define-fun x1456 ((x426 Int)) Bool (= (mod x426 2) (x410 x426 1)))
(define-fun x1149 ((x426 Int)) Bool (and (x1456 x426) (x978 x426 1)))
(define-fun x598 ((x426 Int)) Bool (= (x410 x426 127) (mod x426 128)))
(define-fun x8 ((x426 Int)) Bool (and (x598 x426) (x978 x426 127)))
(define-fun x1401 ((x426 Int)) Bool (= (mod x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x426 32) (x410 x426 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x2024 ((x426 Int)) Bool (and (x978 x426 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1401 x426)))
(define-fun x863 ((x426 Int)) Bool (= (mod x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (x410 x426 115792089237316195423570985008687907853269984665640564039457584007913129639680) (mod x426 256))))
(define-fun x2329 ((x426 Int)) Bool (and (x863 x426) (x978 x426 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x1255 ((x426 Int)) Bool (and (= (x1136 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1136 x426 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2282 ((x426 Int)) Bool (and (= (x1136 0 x426) x426) (= (x1136 x426 0) x426)))
(define-fun x128 ((x426 Int)) Bool (= (x1136 x426 x426) x426))
(define-fun x108 ((x426 Int)) Bool (and (x1255 x426) (x2282 x426) (x128 x426)))
(define-fun x461 ((x426 Int) (x1433 Int)) Bool (= (x1136 x1433 x426) (x1136 x426 x1433)))
(define-fun x792 ((x426 Int) (x1433 Int)) Bool (and (>= (+ x426 x1433) (x1136 x426 x1433)) (=> (>= x426 0) (<= x426 (x1136 x426 x1433))) (=> (<= 0 x1433) (>= (x1136 x426 x1433) x1433))))
(define-fun x2265 ((x426 Int) (x1433 Int)) Bool (and (x461 x426 x1433) (x792 x426 x1433)))
(define-fun x1972 ((x426 Int)) Bool (= (mod x426 32) (x410 x426 31)))
(define-fun x727 ((x426 Int)) Bool (and (x978 x426 31) (x1972 x426)))
(define-fun x937 ((x426 Int)) Bool (= (x410 x426 340282366920938463463374607431768211455) (mod x426 340282366920938463463374607431768211456)))
(define-fun x89 ((x426 Int)) Bool (and (x978 x426 340282366920938463463374607431768211455) (x937 x426)))
(define-fun x770 ((x426 Int)) Bool (= (x2347 x426) (ite (> 170141183460469231731687303715884105728 (x410 x426 340282366920938463463374607431768211455)) (x410 x426 340282366920938463463374607431768211455) (+ (x410 x426 340282366920938463463374607431768211455) 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(define-fun x1339 ((x506 Int)) Int 0)
(define-fun x478 ((x506 Int)) Int (ite (> x1204 x506) (x204 x506) 0))
(define-fun x502 ((x506 Int)) Int (ite (and (< x506 x1204) (>= x506 0)) (x480 x506) (x478 x506)))
(define-fun x370 ((x506 Int)) Int (ite (= x2353 x506) x1000 (x1355 x506)))
(define-fun x1632 ((x506 Int)) Int (ite (= x506 x157) x2182 (x370 x506)))
(define-fun x1147 ((x506 Int)) Int (ite (= 128 x506) x76 (x1339 x506)))
(define-fun x2017 ((x506 Int)) Int (ite (= 160 x506) x2253 (x1147 x506)))
(define-fun x1786 ((x506 Int)) Int (ite (= 192 x506) x535 (x2017 x506)))
(define-fun x1498 ((x506 Int)) Int (ite (= x506 160) x1591 (x1147 x506)))
(define-fun x440 ((x506 Int)) Int (ite x1316 (x1147 x506) (ite x104 (ite x1822 (x2017 x506) (x1786 x506)) (x1498 x506))))
(define-fun x624 ((x506 Int)) Int (ite (= x506 x1889) x1510 (x440 x506)))
(define-fun x2332 ((x506 Int)) Int (ite (= x36 x506) x442 (x624 x506)))
(define-fun x580 ((x506 Int)) Int (ite (= x506 x26) x497 (x2332 x506)))
(define-fun x765 ((x506 Int)) Int (ite (= x506 x36) x2242 (x624 x506)))
(define-fun x232 ((x506 Int)) Int (ite x1541 (x624 x506) (ite x876 (ite x1254 (x2332 x506) (x580 x506)) (x765 x506))))
(define-fun x2052 ((x506 Int)) Int (ite (= x569 x506) x2251 (x232 x506)))
(define-fun x324 ((x506 Int)) Int (ite (= x506 x1466) x2103 (x2052 x506)))
(define-fun x1945 ((x506 Int)) Int (ite (= x506 x900) x485 (x324 x506)))
(define-fun x222 ((x506 Int)) Int (ite (= x506 x1466) x1468 (x2052 x506)))
(define-fun x1480 ((x506 Int)) Int (ite x1920 (x2052 x506) (ite x1511 (ite x1091 (x324 x506) (x1945 x506)) (x222 x506))))
(define-fun x1699 ((x506 Int)) Int (ite (= x506 x453) x1449 (x1480 x506)))
(define-fun x1280 ((x506 Int)) Int (ite (= x506 x359) x91 (x1699 x506)))
(define-fun x1134 ((x506 Int)) Int (ite (= x1085 x506) x1015 (x1280 x506)))
(define-fun x2018 ((x506 Int)) Int (ite (= x1736 x506) x1126 (x1134 x506)))
(define-fun x1665 ((x506 Int)) Int (ite x872 (x1134 x506) (ite x2042 (x1280 x506) (ite x239 (x1699 x506) (ite x981 (x1480 x506) (x2018 x506))))))
(define-fun x226 ((x506 Int)) Int (ite (= x1121 x506) 0 (x1665 x506)))
(define-fun x1959 ((x506 Int)) Int (ite (= x506 x626) 24 (x226 x506)))
(define-fun x121 ((x506 Int)) Int (ite (= x506 x453) 15621254588198505905128070491301349125963569839395559151037828136576825163776 (x1959 x506)))
(define-fun x702 ((x506 Int)) Int (ite (= x506 x372) 128 (x121 x506)))
(define-fun x2162 ((x506 Int)) Int (ite (= x954 x506) x423 (x702 x506)))
(define-fun x415 ((x506 Int)) Int (ite (= x506 x1444) x868 (x2162 x506)))
(define-fun x2336 ((x506 Int)) Int (ite (= x506 x377) x1162 (x415 x506)))
(define-fun x1547 ((x506 Int)) Int (ite (= x506 x923) x55 (x2336 x506)))
(define-fun x718 ((x506 Int)) Int (ite (= x1239 x506) x2322 (x1547 x506)))
(define-fun x95 ((x506 Int)) Int (ite x636 (x1547 x506) (ite x566 (x2336 x506) (ite x2165 (x415 x506) (ite x2091 (x2162 x506) (x718 x506))))))
(define-fun x472 ((x506 Int)) Int (ite (= x1859 x506) 0 (x95 x506)))
(define-fun x1775 ((x506 Int)) Int (ite (= x1031 x506) x531 (x472 x506)))
(define-fun x1096 ((x506 Int)) Int (ite (= x506 x22) x246 (x1775 x506)))
(define-fun x1690 ((x506 Int)) Int (ite (= x506 x2122) x2137 (x1096 x506)))
(define-fun x1283 ((x506 Int)) Int (ite (= x506 x2122) x746 (x1096 x506)))
(define-fun x362 ((x506 Int)) Int (ite x565 (ite x992 (x1096 x506) (x1690 x506)) (x1283 x506)))
(define-fun x1917 ((x506 Int)) Int (ite (= x506 x2097) x965 (x362 x506)))
(define-fun x1872 ((x506 Int)) Int (ite (= x506 x1348) x1701 (x1917 x506)))
(define-fun x1146 ((x506 Int)) Int (ite (= x506 x861) x1367 (x1872 x506)))
(define-fun x221 ((x506 Int)) Int (ite (= x1454 x506) x342 (x1146 x506)))
(define-fun x1723 ((x506 Int)) Int (ite (= x1221 x506) x1128 (x221 x506)))
(define-fun x943 ((x506 Int)) Int (ite (= x506 x1473) x1751 (x1723 x506)))
(define-fun x305 ((x506 Int)) Int (ite x401 (x1723 x506) (ite x846 (x221 x506) (ite x2233 (x1146 x506) (ite x459 (x1872 x506) (x943 x506))))))
(define-fun x1216 ((x506 Int)) Int (ite (= x673 x506) 0 (x305 x506)))
(define-fun x1259 ((x506 Int)) Int (ite (= x506 x649) x1172 (x1216 x506)))
(define-fun x608 ((x506 Int)) Int (ite (and (> x453 x506) (<= x453 x506)) (x64 (- x506 x453)) (x1259 x506)))
(define-fun x432 ((x506 Int)) Int (ite (= x506 x453) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x608 x506)))
(define-fun x1574 ((x506 Int)) Int (ite (= x1815 x506) x850 (x432 x506)))
(define-fun x527 ((x506 Int)) Int (ite (= x506 x1887) x1848 (x1574 x506)))
(define-fun x499 ((x506 Int)) Int (ite (= x506 x453) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x527 x506)))
(define-fun x594 ((x506 Int)) Int (ite (= x506 x453) x1953 (x499 x506)))
(define-fun x1495 ((x506 Int)) Int (ite (= 0 x506) x1953 (x1952 x506)))
(define-fun x836 ((x506 Int)) Int (ite (and (> (+ 32 x453) x506) (>= x506 x453)) (x1495 (- x506 x453)) (x594 x506)))
(define-fun x2157 ((x506 Int)) Int (ite (= x506 x194) x2288 (x836 x506)))
(define-fun x2090 ((x506 Int)) Int (ite x855 (x608 x506) (x2157 x506)))
(define-fun x1505 ((x506 Int)) Int (ite (= x506 x33) x2178 (x2090 x506)))
(define-fun x670 ((x506 Int)) Int (ite (= x417 x506) x1735 (x1505 x506)))
(define-fun x1529 ((x506 Int)) Int (ite (= x631 x506) x2009 (x670 x506)))
(define-fun x856 ((x506 Int)) Int (ite (= x506 x1714) x14 (x1529 x506)))
(define-fun x465 ((x506 Int)) Int (ite x1985 (x1529 x506) (ite x1189 (x670 x506) (ite x316 (x1505 x506) (ite x2226 (x2090 x506) (x856 x506))))))
(define-fun x801 ((x506 Int)) Int (ite (= x1997 x506) 0 (x465 x506)))
(define-fun x323 ((x506 Int)) Int (ite (= x506 x1169) 24 (x801 x506)))
(define-fun x1467 ((x506 Int)) Int (ite (= x1974 x506) 64 (x323 x506)))
(define-fun x1499 ((x506 Int)) Int (ite (= x2094 x506) x136 (x1467 x506)))
(define-fun x1650 ((x506 Int)) Int (ite (= x1393 x506) x130 (x1499 x506)))
(define-fun x458 ((x506 Int)) Int (ite (= x842 x506) x1712 (x1650 x506)))
(define-fun x1527 ((x506 Int)) Int (ite (= x506 x1797) x731 (x458 x506)))
(define-fun x984 ((x506 Int)) Int (ite (= x506 x349) x30 (x1527 x506)))
(define-fun x539 ((x506 Int)) Int (ite x80 (x1527 x506) (ite x1101 (x458 x506) (ite x2 (x1650 x506) (ite x462 (x1499 x506) (x984 x506))))))
(define-fun x1279 ((x506 Int)) Int (ite (= x2014 x506) 0 (x539 x506)))
(define-fun x400 ((x506 Int)) Int (ite (= x958 x506) x1039 (x1279 x506)))
(define-fun x441 ((x506 Int)) Int (ite (= x601 x506) x1586 (x400 x506)))
(define-fun x2069 ((x506 Int)) Int (ite (= x973 x506) x263 (x441 x506)))
(define-fun x412 ((x506 Int)) Int (ite (= x922 x506) x2066 (x2069 x506)))
(define-fun x1476 ((x506 Int)) Int (ite (= x489 x506) x1885 (x412 x506)))
(define-fun x1494 ((x506 Int)) Int (ite (= x506 x1927) x1931 (x1476 x506)))
(define-fun x614 ((x506 Int)) Int (ite x960 (x1476 x506) (ite x254 (x412 x506) (ite x308 (x2069 x506) (ite x944 (x441 x506) (x1494 x506))))))
(define-fun x586 ((x506 Int)) Int (ite (= x506 x2217) 0 (x614 x506)))
(define-fun x1676 ((x506 Int)) Int (ite (= x506 x1974) 32 (x586 x506)))
(define-fun x1989 ((x506 Int)) Int (ite (= x2334 x506) x804 (x1676 x506)))
(define-fun x118 ((x506 Int)) Int (ite (= x506 x639) x1991 (x1989 x506)))
(define-fun x1671 ((x506 Int)) Int (ite (= x550 x506) x683 (x118 x506)))
(define-fun x2325 ((x506 Int)) Int (ite (= x1501 x506) x213 (x1671 x506)))
(define-fun x175 ((x506 Int)) Int (ite (= x506 x1620) x1129 (x2325 x506)))
(define-fun x537 ((x506 Int)) Int (ite x1933 (x2325 x506) (ite x2345 (x1671 x506) (ite x1349 (x118 x506) (ite x1023 (x1989 x506) (x175 x506))))))
(define-fun x2132 ((x506 Int)) Int (ite (= x1560 x506) 0 (x537 x506)))
(define-fun x2068 ((x506 Int)) Int (ite (= x506 x1974) x2222 (x2132 x506)))
(define-fun x938 ((x506 Int)) Int (ite (= x402 x506) x186 (x2068 x506)))
(define-fun x2037 ((x506 Int)) Int (ite (= x506 x402) x1422 (x2068 x506)))
(define-fun x1113 ((x506 Int)) Int (ite (= x506 x2020) x1434 (x938 x506)))
(define-fun x1267 ((x506 Int)) Int (ite x1439 (x2068 x506) (ite x668 (ite x1816 (x938 x506) (x1113 x506)) (x2037 x506))))
(define-fun x1012 ((x506 Int)) Int (ite (= x929 x506) 0 (x813 x506)))
(define-fun x1250 ((x506 Int)) Int (ite (= x1020 x506) x1549 (x1267 x506)))
(define-fun x1145 ((x506 Int)) Int (ite (= x2160 x506) 0 (x644 x506)))
(define-fun x1111 ((x506 Int)) Int (ite x554 (ite x1561 (x644 x506) (x1145 x506)) (x644 x506)))
(define-fun x1421 ((x506 Int)) Int (ite (= x1656 x506) x1894 (x1250 x506)))
(define-fun x2111 ((x506 Int)) Int (ite (= x1656 x506) x1588 (x1250 x506)))
(define-fun x1935 ((x506 Int)) Int (ite (= x506 x637) x2278 (x1421 x506)))
(define-fun x2272 ((x506 Int)) Int (ite x930 (x1250 x506) (ite x1916 (ite x579 (x1421 x506) (x1935 x506)) (x2111 x506))))
(define-fun x1321 ((x506 Int)) Int (ite (= x506 x1745) x1094 (x2272 x506)))
(define-fun x1686 ((x506 Int)) Int (ite (= x920 x506) x963 (x1321 x506)))
(define-fun x1880 ((x506 Int)) Int (ite (= x1285 x506) x399 (x1686 x506)))
(define-fun x1518 ((x506 Int)) Int (ite (= x506 x920) x997 (x1321 x506)))
(define-fun x112 ((x506 Int)) Int (ite x1397 (x1321 x506) (ite x1850 (ite x325 (x1686 x506) (x1880 x506)) (x1518 x506))))
(define-fun x17 ((x506 Int)) Int (ite (= x506 x330) x1117 (x112 x506)))
(define-fun x762 ((x506 Int)) Int (ite (= x506 x1893) x2143 (x17 x506)))
(define-fun x1892 ((x506 Int)) Int (ite (= x506 x611) x629 (x762 x506)))
(define-fun x684 ((x506 Int)) Int (ite (= x506 x1705) x1967 (x1892 x506)))
(define-fun x1043 ((x506 Int)) Int (ite x1030 (x1892 x506) (ite x463 (x762 x506) (ite x375 (x17 x506) (ite x1605 (x112 x506) (x684 x506))))))
(define-fun x1184 ((x506 Int)) Int (ite (= x506 x1002) 0 (x1043 x506)))
(define-fun x2348 ((x506 Int)) Int (ite (= x506 x622) 24 (x1184 x506)))
(define-fun x1698 ((x506 Int)) Int (ite (= x506 x330) 15621254588198505905128070491301349125963569839395559151037828136576825163776 (x2348 x506)))
(define-fun x65 ((x506 Int)) Int (ite (= x506 x53) 128 (x1698 x506)))
(define-fun x1648 ((x506 Int)) Int (ite (= x506 x1296) x1074 (x65 x506)))
(define-fun x2214 ((x506 Int)) Int (ite (= x506 x1741) x306 (x1648 x506)))
(define-fun x129 ((x506 Int)) Int (ite (= x1683 x506) x1710 (x2214 x506)))
(define-fun x648 ((x506 Int)) Int (ite (= x420 x506) x1658 (x129 x506)))
(define-fun x674 ((x506 Int)) Int (ite (= x506 x776) x1573 (x648 x506)))
(define-fun x1036 ((x506 Int)) Int (ite x1715 (x648 x506) (ite x2033 (x129 x506) (ite x1475 (x2214 x506) (ite x498 (x1648 x506) (x674 x506))))))
(define-fun x919 ((x506 Int)) Int (ite (= x158 x506) 0 (x1036 x506)))
(define-fun x190 ((x506 Int)) Int (ite (= x695 x506) x1370 (x919 x506)))
(define-fun x1297 ((x506 Int)) Int (ite (= x506 x1347) x241 (x190 x506)))
(define-fun x1825 ((x506 Int)) Int (ite (= x793 x506) x171 (x1297 x506)))
(define-fun x219 ((x506 Int)) Int (ite (= x506 x793) x110 (x1297 x506)))
(define-fun x153 ((x506 Int)) Int (ite x962 (ite x1063 (x1297 x506) (x1825 x506)) (x219 x506)))
(define-fun x1978 ((x506 Int)) Int (ite (= x506 x815) x1839 (x153 x506)))
(define-fun x445 ((x506 Int)) Int (ite (= x1045 x506) x1123 (x1978 x506)))
(define-fun x994 ((x506 Int)) Int (ite (= x615 x506) x968 (x445 x506)))
(define-fun x1914 ((x506 Int)) Int (ite (= x506 x704) x2012 (x994 x506)))
(define-fun x966 ((x506 Int)) Int (ite (= x506 x347) x74 (x1914 x506)))
(define-fun x355 ((x506 Int)) Int (ite (= x1107 x506) x2048 (x966 x506)))
(define-fun x383 ((x506 Int)) Int (ite x1674 (x966 x506) (ite x1618 (x1914 x506) (ite x1802 (x994 x506) (ite x1813 (x445 x506) (x355 x506))))))
(define-fun x434 ((x506 Int)) Int (ite (= x506 x2189) 0 (x383 x506)))
(define-fun x2035 ((x506 Int)) Int (ite (= x506 x638) x1661 (x434 x506)))
(define-fun x2219 ((x506 Int)) Int (ite (and (<= x330 x506) (< x506 x330)) (x1382 (- x506 x330)) (x2035 x506)))
(define-fun x947 ((x506 Int)) Int (ite (= x506 x330) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x2219 x506)))
(define-fun x2302 ((x506 Int)) Int (ite (= x555 x506) x1649 (x947 x506)))
(define-fun x585 ((x506 Int)) Int (ite (= x1638 x506) x1848 (x2302 x506)))
(define-fun x1395 ((x506 Int)) Int (ite (= x330 x506) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x585 x506)))
(define-fun x578 ((x506 Int)) Int (ite (= x506 x330) x81 (x1395 x506)))
(define-fun x1771 ((x506 Int)) Int (ite (= x506 0) x81 (x1353 x506)))
(define-fun x1732 ((x506 Int)) Int (ite (and (>= x506 x330) (< x506 (+ 32 x330))) (x1771 (- x506 x330)) (x578 x506)))
(define-fun x1252 ((x506 Int)) Int (ite (= x506 x926) x282 (x1732 x506)))
(define-fun x1979 ((x506 Int)) Int (ite x1955 (x2219 x506) (x1252 x506)))
(define-fun x466 ((x506 Int)) Int (ite (= x288 x506) x2360 (x1979 x506)))
(define-fun x1060 ((x506 Int)) Int (ite (= x506 x1595) x1607 (x466 x506)))
(define-fun x577 ((x506 Int)) Int (ite (= x506 x505) x1565 (x1060 x506)))
(define-fun x734 ((x506 Int)) Int (ite (= x326 x506) x883 (x176 x506)))
(define-fun x312 ((x506 Int)) Int (ite x855 (x176 x506) (x734 x506)))
(define-fun x1209 ((x506 Int)) Int 0)
(define-fun x1713 ((x506 Int)) Int 0)
(define-fun x1728 ((x506 Int)) Int (ite (= x506 x2138) 0 (x167 x506)))
(define-fun x69 ((x506 Int)) Int (ite (= x506 x9) 0 (x831 x506)))
(define-fun x1335 ((x506 Int)) Int (ite x2071 (ite x640 (x831 x506) (x69 x506)) (x831 x506)))
(define-fun x625 ((x506 Int)) Int (ite (= x298 x506) 0 (x2224 x506)))
(define-fun x2155 ((x506 Int)) Int (ite (= x506 x1247) 0 (x1780 x506)))
(define-fun x1681 ((x506 Int)) Int (ite (= x506 x1360) 0 (x1012 x506)))
(define-fun x972 ((x506 Int)) Int (ite (= x506 x1509) 0 (x1728 x506)))
(define-fun x1966 ((x506 Int)) Int (ite (= x895 x506) 0 (x625 x506)))
(define-fun x948 ((x506 Int)) Int (ite (= x506 x2028) 0 (x2155 x506)))
(define-fun x510 ((x506 Int)) Int (ite (= x1794 x506) 0 (x1111 x506)))
(define-fun x879 ((x506 Int)) Int (ite (= x506 x722) 0 (x1335 x506)))
(define-fun x576 ((x506 Int)) Int (ite x1561 (x644 x506) (x1145 x506)))
(define-fun x1812 ((x506 Int)) Int (ite x640 (x831 x506) (x69 x506)))
(define-fun x1755 ((x506 Int)) Int (ite (= x506 x956) x198 (x577 x506)))
(define-fun x1185 ((x506 Int)) Int (ite x1630 (x577 x506) (ite x1182 (x1060 x506) (ite x851 (x466 x506) (ite x698 (x1979 x506) (x1755 x506))))))
(define-fun x1366 ((x506 Int)) Int (ite (= x583 x506) 0 (x1185 x506)))
(define-fun x143 ((x506 Int)) Int (ite (= x1460 x506) 24 (x1366 x506)))
(define-fun x1174 ((x506 Int)) Int (ite (= x267 x506) 64 (x143 x506)))
(define-fun x1409 ((x506 Int)) Int (ite (= x506 x2186) x1803 (x1174 x506)))
(define-fun x422 ((x506 Int)) Int (ite (= x676 x506) x1371 (x1409 x506)))
(define-fun x1305 ((x506 Int)) Int (ite (= x444 x506) x1542 (x422 x506)))
(define-fun x703 ((x506 Int)) Int (ite (= x105 x506) x185 (x1305 x506)))
(define-fun x1301 ((x506 Int)) Int (ite (= x506 x1026) x302 (x703 x506)))
(define-fun x1726 ((x506 Int)) Int (ite x1103 (x703 x506) (ite x45 (x1305 x506) (ite x227 (x422 x506) (ite x1684 (x1409 x506) (x1301 x506))))))
(define-fun x2310 ((x506 Int)) Int (ite (= x506 x1864) 0 (x1726 x506)))
(define-fun x1986 ((x506 Int)) Int (ite (= x353 x506) x2270 (x2310 x506)))
(define-fun x217 ((x506 Int)) Int (ite (= x2164 x506) x1849 (x1986 x506)))
(define-fun x92 ((x506 Int)) Int (ite (= x506 x1215) x2099 (x217 x506)))
(define-fun x1196 ((x506 Int)) Int (ite (= x561 x506) x2319 (x92 x506)))
(define-fun x277 ((x506 Int)) Int (ite (= x506 x689) x289 (x1196 x506)))
(define-fun x1127 ((x506 Int)) Int (ite (= x910 x506) x1662 (x277 x506)))
(define-fun x827 ((x506 Int)) Int (ite x1856 (x277 x506) (ite x525 (x1196 x506) (ite x2126 (x92 x506) (ite x630 (x217 x506) (x1127 x506))))))
(define-fun x2043 ((x506 Int)) Int (ite (= x506 x75) 0 (x827 x506)))
(define-fun x1776 ((x506 Int)) Int (ite (= x506 x267) 32 (x2043 x506)))
(define-fun x1137 ((x506 Int)) Int (ite (= x506 x157) x899 (x1632 x506)))
(define-fun x183 ((x506 Int)) Int (ite (= x506 x509) x1942 (x1137 x506)))
(define-fun x927 ((x506 Int)) Int (ite (= x157 x506) x884 (x183 x506)))
(define-fun x1088 ((x506 Int)) Int (ite (= x2204 x506) x351 (x312 x506)))
(define-fun x364 ((x506 Int)) Int (ite (= x592 x506) 1 (x252 x506)))
(define-fun x1992 ((x506 Int)) Int (ite (= x506 x1960) 1 (x364 x506)))
(define-fun x1406 ((x506 Int)) Int (ite (= x506 x1552) x1234 (x449 x506)))
(define-fun x345 ((x506 Int)) Int (ite (= x1552 x506) x1130 (x449 x506)))
(define-fun x1543 ((x506 Int)) Int (ite x1517 (x1406 x506) (x345 x506)))
(define-fun x1272 ((x506 Int)) Int (ite (= x979 x506) 0 (x270 x506)))
(define-fun x1623 ((x506 Int)) Int (ite x2209 (x270 x506) (ite x2339 (x270 x506) (x1272 x506))))
(define-fun x551 ((x506 Int)) Int (ite (= x1163 x506) x2139 (x1623 x506)))
(define-fun x754 ((x506 Int)) Int (ite x2296 (x1623 x506) (x551 x506)))
(define-fun x924 ((x506 Int)) Int (ite (= x506 x1133) x701 (x754 x506)))
(define-fun x1841 ((x506 Int)) Int (ite x1517 (ite x681 (x754 x506) (x924 x506)) (x1623 x506)))
(define-fun x2004 ((x506 Int)) Int (ite (= x506 x1249) 0 (x1841 x506)))
(define-fun x2153 ((x506 Int)) Int (ite (= x1837 x506) 0 (x1624 x506)))
(define-fun x1307 ((x506 Int)) Int (ite x1373 (x1624 x506) (ite x133 (x1624 x506) (x2153 x506))))
(define-fun x610 ((x506 Int)) Int (ite (= x506 x1877) x1218 (x1307 x506)))
(define-fun x199 ((x506 Int)) Int (ite x189 (x1307 x506) (x610 x506)))
(define-fun x2171 ((x506 Int)) Int (ite (= x1110 x506) x504 (x199 x506)))
(define-fun x808 ((x506 Int)) Int (ite x1336 (ite x1343 (x199 x506) (x2171 x506)) (x1307 x506)))
(define-fun x858 ((x506 Int)) Int (ite (= x506 x253) 0 (x808 x506)))
(define-fun x1099 ((x506 Int)) Int (ite x620 (x1841 x506) (x2004 x506)))
(define-fun x115 ((x506 Int)) Int (ite x2339 (x270 x506) (x1272 x506)))
(define-fun x1219 ((x506 Int)) Int (ite x967 (x808 x506) (x858 x506)))
(define-fun x788 ((x506 Int)) Int (ite x133 (x1624 x506) (x2153 x506)))
(define-fun x429 ((x506 Int)) Int (ite x733 (x1841 x506) (ite x620 (x1841 x506) (x2004 x506))))
(define-fun x106 ((x506 Int)) Int (ite x202 (x808 x506) (ite x967 (x808 x506) (x858 x506))))
(define-fun x34 ((x506 Int)) Int (ite (= x506 x358) x1040 (x1543 x506)))
(define-fun x803 ((x506 Int)) Int (ite (= x506 x2087) x387 (x1958 x506)))
(define-fun x476 ((x506 Int)) Int (ite (= x2087 x506) x1722 (x1958 x506)))
(define-fun x1420 ((x506 Int)) Int (ite x1336 (x803 x506) (x476 x506)))
(define-fun x1006 ((x506 Int)) Int (ite (= x506 x54) x1159 (x1420 x506)))
(define-fun x1211 ((x506 Int)) Int (ite (= x1200 x506) x835 (x429 x506)))
(define-fun x1084 ((x506 Int)) Int (ite (= x266 x506) x1231 (x106 x506)))
(define-fun x783 ((x506 Int)) Int (ite x2331 (x429 x506) (x1211 x506)))
(define-fun x664 ((x506 Int)) Int (ite (= x506 x773) x1178 (x783 x506)))
(define-fun x1668 ((x506 Int)) Int (ite x1047 (x106 x506) (x1084 x506)))
(define-fun x1451 ((x506 Int)) Int (ite (= x506 x155) x477 (x1668 x506)))
(define-fun x1106 ((x506 Int)) Int (ite (= x506 x358) x193 (x1543 x506)))
(define-fun x2235 ((x506 Int)) Int (ite x681 (x754 x506) (x924 x506)))
(define-fun x1058 ((x506 Int)) Int (ite (= x506 x54) x652 (x1420 x506)))
(define-fun x1558 ((x506 Int)) Int (ite x1343 (x199 x506) (x2171 x506)))
(define-fun x340 ((x506 Int)) Int (ite (= x1342 x506) x1172 (x520 x506)))
(define-fun x18 ((x506 Int)) Int (ite (= x29 x506) x1661 (x340 x506)))
(define-fun x1792 ((x506 Int)) Int (ite (= x604 x506) x850 (x800 x506)))
(define-fun x1817 ((x506 Int)) Int (ite (= x1575 x506) x1649 (x1792 x506)))
(assert (x1748 x1350))
(assert (x1748 x1820))
(assert (x1748 x1503))
(assert (= x1718 (x2110 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (x552 x871))
(assert (= (x787 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x2123))
(assert (x1748 x402))
(assert (= (x2223 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)))
(assert (x1748 x597))
(assert (x552 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1748 x622))
(assert (x1748 x1881))
(assert (= (and (not x1486) x556) x463))
(assert (= x1407 (and x952 (not x1520))))
(assert (x1748 x2275))
(assert (= x646 (x1193 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (x1748 x1725))
(assert (=> (>= 10000 x1438) (= (x2223 x1438) 0)))
(assert (x1748 x1403))
(assert (= (x394 (x66 x1315 x2333 x1322)) x2333))
(assert (x1748 x184))
(assert (= (=> (and (= (x2134 (+ 96 x1295)) x1801) (= x1685 (not (> x1123 128))) (= x1107 (x2134 (+ x615 96))) (= x2048 (x966 x1801))) (and x2260 x1685)) x1197))
(assert (= (x72 32 4) (x2223 (x72 32 4))))
(assert (x1748 x243))
(assert (= (x1423 (x2105 x1315 x560 x2290 x732 x707 x1594)) x1594))
(assert (=> (<= x285 10000) (= 0 (x2223 x285))))
(assert (x1748 x2286))
(assert (=> (<= x224 10000) (= 0 (x2223 x224))))
(assert (=> (>= 10000 x97) (= 0 (x2223 x97))))
(assert (x1748 x1143))
(assert (= (and x382 (not x2023)) x45))
(assert (x1748 x2184))
(assert (x301 29289127993025145568725129057828671567744754166070328588094505464281371246592))
(assert (x301 114221746417031484496905892821793293822878436923706878644384133060206014517163))
(assert (x1748 x1848))
(assert (= 0 (x2223 115792089237316195423570985008687907853269984665640564039457584007913129639934)))
(assert (x1748 x1356))
(assert (=> (>= 10000 x1139) (= (x2223 x1139) 0)))
(assert (x1748 x542))
(assert (= (or x1995 x1384) x265))
(assert (x1748 x237))
(assert (x1748 x1066))
(assert (x1748 x889))
(assert (=> (>= 10000 x1399) (= 0 (x2223 x1399))))
(assert (x1748 x1603))
(assert (= (and (not x845) x881) x39))
(assert (=> (<= x59 10000) (= 0 (x2223 x59))))
(assert (x1748 x971))
(assert (x2024 x268))
(assert (x1748 x666))
(assert (x1748 x1302))
(assert (> (x671 x1758 x348 x1415 x1779) 10000))
(assert (x1748 x1967))
(assert (= x1315 (x2216 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (x1748 x1607))
(assert (x1748 x1428))
(assert (= x1617 (or x38 x1336)))
(assert (x1748 x2308))
(assert (= x1298 (and x1334 x1930)))
(assert (x1748 x1045))
(assert (= (x787 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) x781))
(assert (=> (>= 10000 x838) (= 0 (x2223 x838))))
(assert (x1748 x875))
(assert (x978 x1275 x2101))
(assert (= (x1193 (x2105 x1724 x1428 x1246 x322 x880 x1836)) x322))
(assert (=> (<= x2113 10000) (= 0 (x2223 x2113))))
(assert (= (x394 (x72 32 x2073)) x2073))
(assert (x1748 x538))
(assert (= x575 (and x2061 x745)))
(assert (= (x2216 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) x242))
(assert (= x310 (x1193 (x671 x1315 x529 x1008 x310))))
(assert (= x352 (x1193 (x1007 x1758 x1761 x2340 x352 x617))))
(assert (x1748 x1969))
(assert (x1748 x1348))
(assert (=> (>= 10000 x546) (= (x2223 x546) 0)))
(assert (= 64 (x2216 (x66 64 x157 x612))))
(assert (= x880 (x2110 (x2105 x1724 x1428 x1246 x322 x880 x1836))))
(assert (x1748 x534))
(assert (= (x2216 (x72 32 x54)) 32))
(assert (x1748 x1290))
(assert (= x1852 (=> (and (= (not (< x1241 x210)) x661) (= (+ 1 x1249) x1241)) (and x1804 x661))))
(assert (x1748 x52))
(assert (x552 x44))
(assert (=> (<= x880 10000) (= 0 (x2223 x880))))
(assert (x1748 x1474))
(assert (= (=> (and (= x380 (not (< 32 x1312))) (= (x323 x163) x2139) (= (x2134 (+ 32 x1889)) x163) (= (+ 1 x1163) x278)) (and (=> (and (= x1881 64) (= x1133 x278)) x269) x380)) x635))
(assert (x1748 x85))
(assert (=> (>= 10000 x83) (= (x2223 x83) 0)))
(assert (= (and x2031 x936) x1427))
(assert (x1748 x1896))
(assert (= x1205 (=> (and (= x1772 (* x268 2)) (= x1326 (x410 x953 x917)) (= x730 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x132)) (<= 1 x730) (= x917 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x730)) (= x1912 (x2134 (+ x1772 x1326))) (= x1130 (ite (>= 1 x1326) x1912 (x1136 x1326 x1772))) (= (* x268 8) x132)) x1807)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x1315 x529 x1008 x310)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x897 x847 x1158 x1946)))
(assert (= (x2216 (x66 x1315 x2333 x1322)) x1315))
(assert (= x2183 (or x133 x1785)))
(assert (< 10000 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)))
(assert (x552 x1275))
(assert (x1748 x721))
(assert (=> (<= x1669 10000) (= (x2223 x1669) 0)))
(assert (x1748 x1815))
(assert (x1748 x643))
(assert (= (x2223 x253) (x2223 (+ 1 x253))))
(assert (not (x301 (x2105 x1116 x2205 x893 x2146 x1842 x1994))))
(assert (= x1315 (x2216 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (= x10 (x1423 (x1072 x1724 x1678 x1079 x337 x912 x10 x834))))
(assert (= x532 (=> (and (= (+ x1200 1) x1563) (= (x143 x1530) x835) (= (x2134 (+ 32 x1020)) x1530) (= (not (> x1818 32)) x2303)) (and (=> (and (= x773 x1563) (= 64 x2109)) x144) x2303))))
(assert (=> (>= 10000 x1056) (= (x2223 x1056) 0)))
(assert (= x1176 (and x1334 (not x1930))))
(assert (= (x66 x1315 x2333 x1322) (x2223 (x66 x1315 x2333 x1322))))
(assert (= x215 x1090))
(assert (= (x1193 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x1564))
(assert (x1748 x1000))
(assert (= (or x1802 x1618 x1674 x2191 x1813) x1879))
(assert (< 10000 (x72 32 x929)))
(assert (x1748 x1025))
(assert (x1748 x124))
(assert (= (x2216 (x66 64 x184 19)) 64))
(assert (= x97 (x1193 (x1007 x2174 x1344 x593 x97 x2044))))
(assert (= (x1193 (x1007 x1315 x2328 x2064 x1049 x794)) x1049))
(assert (= (x2223 10894474682274239493831243662817379401261526446360622092269559273883068006400) 0))
(assert (x1748 x488))
(assert (= (and (not x1016) x799) x2033))
(assert (=> (<= x1470 10000) (= (x2223 x1470) 0)))
(assert (x1748 x999))
(assert (x1748 x540))
(assert (x1748 x1938))
(assert (x1748 x2048))
(assert (x1748 x1009))
(assert (= (and x280 (not x1743)) x981))
(assert (x1748 x1253))
(assert (< 10000 (x66 x2174 x2163 x2208)))
(assert (=> (<= x1842 10000) (= 0 (x2223 x1842))))
(assert (x1748 x2307))
(assert (x1748 x372))
(assert (= (x1193 (x2105 x242 x1826 x950 x1874 x1764 x1857)) x1874))
(assert (x1748 x1568))
(assert (x552 x1070))
(assert (x1748 x1246))
(assert (= x1621 (=> (and (= (x2134 (+ x1889 32)) x1361) (= x1854 (x890 (- x1027 1))) (= (< 0 x1374) x418) (= x1374 (x2090 x1889))) (and (=> (not x418) x1441) (=> (and x418 (and (= x1293 (> x1374 32)) (= (x2090 x1361) x2178))) (and (=> (not x1293) x1441) (=> (and x1293 (and (= (> x1374 64) x1644) (= x417 (x2134 (+ x33 32))) (= (x2134 (+ 32 x1361)) x657) (= (x1505 x657) x1735))) (and (=> (not x1644) x1441) (=> (and x1644 (and (= (x670 x1908) x2009) (= x631 (x2134 (+ x33 64))) (= (x2134 (+ x1361 64)) x1908) (= (> x1374 96) x126))) (and (=> (not x126) x1441) (=> x126 x1569)))))))))))
(assert (=> (>= 10000 x516) (= (x2223 x516) 0)))
(assert (< (x72 32 x54) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (ite (< x1061 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x1061)) 0)))
(assert (x1748 x1709))
(assert (x1748 x1346))
(assert (x1748 x569))
(assert (x1748 x842))
(assert (x1748 x96))
(assert (x1748 x816))
(assert (x301 115792089237316195423570985008687907853099843482180094807725896704197245534208))
(assert (x1748 x613))
(assert (x1748 x442))
(assert (x1748 x1842))
(assert (=> (<= x950 10000) (= 0 (x2223 x950))))
(assert (not (x301 (x1007 x1758 x1761 x2340 x352 x617))))
(assert (not (x301 (x2105 x1758 x1929 x516 x2257 x878 x1014))))
(assert (x301 115792089237316195423570985008687907853099843482180094807725896704197245534210))
(assert (= (and x2104 (not x2352)) x1443))
(assert (x301 404098525))
(assert (=> (<= x178 10000) (= (x2223 x178) 0)))
(assert (x1748 x1651))
(assert (x1748 x1927))
(assert (= (x394 (x72 x1116 x1018)) x1018))
(assert (=> (>= 10000 x1238) (= (x2223 x1238) 0)))
(assert (= x1065 (x1193 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (= x967 (and (not x745) x2061)))
(assert (= 17 (x787 (x66 64 x2032 17))))
(assert (< 10000 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)))
(assert (not (x301 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (x770 x1318))
(assert (x1748 x2007))
(assert (= x591 (and x418 x782)))
(assert (= x2311 (=> (and (= (x2134 (+ x852 x1444)) x22) (= (x2134 (+ 31 x423)) x2338) (= (x410 1 x2112) x1672) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1938) (= x1938 1)) (= (x410 1 x2112) x1781) (= (div x2112 2) x357) (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2338) x852) (= x1031 (x2134 (+ 32 x372))) (= (x2134 (+ 32 x22)) x2122) (= x531 (x890 (- x22 x372))) (= x866 (= x1781 0)) (= (x2134 (+ x1444 x423)) x1859) (= x246 (ite (< 0 x1672) x357 (x410 127 x357))) (= (x890 (- x1672 (mod (ite (< x246 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1938)) (and (=> (and (and (= x1534 (> x246 0)) (= (x72 32 4) x392)) (not x866)) (and (=> (and (not x1534) (= 0 x1999)) x528) (=> x1534 x2359))) (=> (and x866 (and (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2112) x746) (= x250 (* 32 (ite (not (= x246 0)) 1 0))) (or (= x250 32) (= x250 0)) (= x1348 x1571) (= x1571 (x2134 (+ x2122 x250))))) x438)))))
(assert (= x1198 (and x1236 x1052)))
(assert (= (x787 (x671 x2174 x2041 x1593 x1350)) x1593))
(assert (x1748 x471))
(assert (=> (<= x2001 10000) (= 0 (x2223 x2001))))
(assert (x1748 x1599))
(assert (x1748 x548))
(assert (=> (>= 10000 x1274) (= 0 (x2223 x1274))))
(assert (= (and (not x1993) x2029) x320))
(assert (x1748 x844))
(assert (= x35 (x394 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (= (or x1561 x1175) x554))
(assert (x1748 x1469))
(assert (< (x66 x1983 x596 x2284) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x732))
(assert (x1748 x617))
(assert (=> (>= 10000 x1758) (= 0 (x2223 x1758))))
(assert (x1748 x1514))
(assert (= (x2216 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113)) x897))
(assert (x1748 x1172))
(assert (x1748 x2192))
(assert (= (or x733 x2320) x712))
(assert (not (x301 (x1007 x1116 x1066 x150 x904 x563))))
(assert (=> (<= x1637 10000) (= (x2223 x1637) 0)))
(assert (x1748 x1278))
(assert (not (x301 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (x1748 x815))
(assert (x1748 x407))
(assert (x1748 x1693))
(assert (=> (>= 10000 x699) (= (x2223 x699) 0)))
(assert (x1748 x1773))
(assert (= x1017 (x787 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721))))
(assert (x1748 x969))
(assert (x1748 x601))
(assert (x1748 x897))
(assert (= (x2223 (+ x1105 x1773)) (x2223 x1105)))
(assert (=> (<= x228 10000) (= 0 (x2223 x228))))
(assert (=> (>= 10000 x1415) (= (x2223 x1415) 0)))
(assert (= (or x964 x1199) x1334))
(assert (x552 x1782))
(assert (=> (>= 10000 x1791) (= (x2223 x1791) 0)))
(assert (x1748 x828))
(assert (= (and x2202 x651) x2061))
(assert (x552 x933))
(assert (= (x2223 (+ x1552 1)) (x2223 x1552)))
(assert (x1748 x2015))
(assert (=> (>= 10000 x593) (= (x2223 x593) 0)))
(assert (x1748 x387))
(assert (x1748 x550))
(assert (not (x301 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645))))
(assert (x1748 x950))
(assert (x1748 x35))
(assert (not (x301 (x66 64 x1139 19))))
(assert (x1748 x2185))
(assert (= x959 (x1193 (x1007 x1983 x1669 x321 x959 x25))))
(assert (= (x394 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334)) x2034))
(assert (< 10000 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)))
(assert (=> (>= 10000 x857) (= 0 (x2223 x857))))
(assert (=> (<= x904 10000) (= (x2223 x904) 0)))
(assert (= (or x1439 x39 x668) x1590))
(assert (= (x2223 71998914331801701415977457805802827292338598818749192222732755537001613711014) 0))
(assert (x1748 x377))
(assert (= x1313 (and (not x866) x1019)))
(assert (x1748 x223))
(assert (= (x2223 (x72 32 x2073)) (x72 32 x2073)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2105 x2174 x778 x1512 x83 x2337 x436)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)))
(assert (= (x66 x242 x73 x1791) (x2223 (x66 x242 x73 x1791))))
(assert (= x541 (x394 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (= (x2223 (x66 64 x850 3)) (x66 64 x850 3)))
(assert (= (=> (and (= (x644 x404) x497) (= (not (> x1770 x1858)) x197) (= x1858 (x2134 (+ 32 x26)))) (and x197 x2100)) x1739))
(assert (= (x2223 1461501637330902918203684832716283019655932542975) 0))
(assert (not (x301 (x66 64 x1649 3))))
(assert (= x1349 (and x2351 (not x589))))
(assert (x1748 x1239))
(assert (= (x2223 x1087) (x2223 (+ 1 x1087))))
(assert (not (x301 (x72 32 x929))))
(assert (x1748 x1889))
(assert (= x2042 (and (not x1212) x1667)))
(assert (= x2095 (=> (and (= x1434 (x2200 x1325)) (= (x2134 (+ x2020 32)) x946) (= (not (< x946 x736)) x1387)) (and x1387 x1282))))
(assert (x1748 x98))
(assert (x552 x2338))
(assert (=> (>= 10000 x2257) (= (x2223 x2257) 0)))
(assert (x1748 x1357))
(assert (= x1883 (=> (and (= (+ 1 x1837) x1268) (= x1338 (not (> x343 x1268)))) (and x339 x1338))))
(assert (= (and x1977 x142) x1385))
(assert (=> (<= x1900 10000) (= (x2223 x1900) 0)))
(assert (= (x787 (x66 x2174 x2163 x2208)) x2208))
(assert (= (=> (and (= (x2134 (+ x1460 32)) x1829) (= (<= x242 224) x1742) (= x242 (x890 (- x1116 32))) (= x583 (x2134 (+ x700 x288))) (= (x2134 (+ x288 x700)) x1460) (= (x890 (- x1829 x288)) x1116)) (and x1742 (=> (and (= x1857 (x143 x406)) (= (x2134 (+ 32 x288)) x1596) (= (x143 x100) x949) (= x1941 (x2134 (+ x288 160))) (= x980 (x143 x288)) (= (x143 x288) x1643) (= (x143 x1734) x2072) (= x475 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) (= x559 (x143 x288)) (= (x2134 (+ x288 32)) x1455) (= (x143 x58) x1944) (= x774 (x2134 (+ x288 96))) (= x1265 (x143 x2077)) (= (x2134 (+ x288 32)) x791) (= (x143 x774) x1764) (= (x2134 (+ x288 96)) x350) (= x1604 (x143 x1596)) (= x2231 (x2134 (+ x288 64))) (= x272 (x143 x740)) (= x1203 (x72 x242 x1643)) (= x641 (<= x1116 224)) (= (x143 x288) x2229) (= x2263 (x143 x660)) (= x1263 (x143 x350)) (= (x2134 (+ x288 128)) x2210) (= (x1007 x242 x559 x1944 x1491 x543) x711) (= x740 (x2134 (+ 128 x288))) (= x283 (x143 x2210)) (= x816 (x2134 (+ x288 64))) (= x296 (x2134 (+ 64 x288))) (= x100 (x2134 (+ 32 x288))) (= x1372 (x66 x242 x73 x1791)) (= x2190 (x1377 0)) (= (x2134 (+ 64 x288)) x996) (= x58 (x2134 (+ 32 x288))) (= (x2134 (+ x288 96)) x1734) (= (x143 x2231) x1056) (= x1791 (x143 x1455)) (= x1086 (x143 x816)) (= x686 (x671 x242 x980 x2051 x1086)) (= x216 (x2134 (+ 96 x288))) (= (x143 x1941) x1581) (= x950 (x143 x791)) (= x494 (x2134 (+ x288 32))) (= (x2134 (+ x288 160)) x2077) (= x2281 (x2134 (+ x288 64))) (= x660 (x2134 (+ 192 x288))) (= (x2134 (+ 128 x288)) x406) (= (x143 x494) x2051) (= x1874 (x143 x296)) (= x73 (x143 x288)) (= x764 (x2105 x242 x1826 x950 x1874 x1764 x1857)) (= (x143 x216) x543) (= x1245 (x143 x996)) (= x1491 (x143 x2281)) (= x1826 (x143 x288)) (= (x143 x288) x172) (= x1936 (ite (= x242 0) x2190 (ite (<= x242 32) x1203 (ite (<= x242 64) x1372 (ite (<= x242 96) x686 (ite (<= x242 128) x711 (ite (<= x242 160) x764 (ite (>= 192 x242) x2096 (ite (>= 224 x242) x475 x2184))))))))) (= x2096 (x1072 x242 x172 x949 x1056 x2072 x283 x1265))) (and (=> (and (<= x1619 18446744073709551615) (= (x2134 (+ x288 32)) x1253) (= (x143 x288) x2205) (= x214 (x671 x1116 x1609 x1568 x1637)) (= (x143 x1253) x893) (= x1102 (x2134 (+ 32 x288))) (= (x143 x772) x150) (= x1356 (x2134 (+ x288 64))) (= (x410 1 x675) x1500) (= x1960 (ite (= x1116 0) x2362 (ite (>= 32 x1116) x23 (ite (<= x1116 64) x468 (ite (>= 96 x1116) x214 (ite (>= 128 x1116) x396 (ite (<= x1116 160) x795 (ite (>= 192 x1116) x1304 (ite (<= x1116 224) x1286 x1597))))))))) (= x675 (x1543 x358)) (= (x2134 (+ 64 x288)) x1868) (= x563 (x143 x384)) (= (x1377 0) x2362) (= x1066 (x143 x288)) (= (x2134 (+ x288 32)) x772) (= x1896 (x143 x288)) (<= x288 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x2134 (+ x288 160)) x1692) (= x267 (x2134 (+ x288 128))) (= (x143 x597) x969) (= (x2134 (+ x288 64)) x849) (= x327 (x143 x1692)) (= (x2134 (+ 96 x288)) x877) (= (x2134 (+ x288 96)) x384) (= (x143 x1051) x1438) (= (div x675 2) x1228) (= x1663 (x2134 (+ x288 96))) (= (x2134 (+ 192 x288)) x1148) (= (> x951 31) x11) (= (x143 x2180) x1994) (= (x143 x877) x1622) (> x267 x288) (= (x143 x1868) x2146) (= (x143 x849) x1759) (= (x143 x1663) x1842) (= (x2105 x1116 x2205 x893 x2146 x1842 x1994) x795) (= x1051 (x2134 (+ x288 32))) (= x1286 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) (= (x143 x1356) x904) (= x2124 (x143 x288)) (= (x143 x7) x2304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x288) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1616) (= 1 x1616)) (= (x143 x1716) x1115) (<= x288 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1201 (x143 x288)) (= 18 x898) (= x468 (x66 x1116 x1201 x1438)) (not (= x288 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x951 (ite (> x1500 0) x1228 (x410 127 x1228))) (= (x2134 (+ x288 96)) x293) (= (x2134 (+ 128 x288)) x2180) (= (x2134 (+ x288 128)) x597) (= x396 (x1007 x1116 x1066 x150 x904 x563)) (= x1284 (x2134 (+ 64 x288))) (= x860 (x2134 (+ x288 32))) (= x23 (x72 x1116 x1018)) (= x7 (x2134 (+ 160 x288))) (= x1619 (x143 x1020)) (= (x143 x293) x360) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x288)) (= (x143 x1284) x1637) (= x752 (x143 x1148)) (= x726 (x2134 (+ x288 128))) (= x1903 (x2134 (+ x288 32))) (= x1304 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) (= (x143 x726) x1464) (= (x143 x860) x1414) (= (x143 x1102) x2123) (= x1716 (x2134 (+ x288 64))) (= x358 (x66 64 x1139 19)) (= (x143 x288) x1609) (= (x890 (- x1500 (mod (ite (< x951 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1616) (= (x143 x288) x1018) (= (x143 x1903) x1568) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x288))) (and (=> (not x11) x2159) (=> (and (and (= (ite (< x1619 32) x1042 x896) x1249) (= x896 (+ x918 x1042)) (= (+ x407 x1042) x210) (= x1477 (> x210 x1249)) (= (x72 32 x358) x1042) (= (div (+ x1619 31) 32) x918) (= (div (+ x951 31) 32) x407)) x11) (and (=> (not x1477) x1804) (=> x1477 x1852))))) x641)))) x2055))
(assert (x301 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1748 x1887))
(assert (x1748 x790))
(assert (x1748 x778))
(assert (x552 x1763))
(assert (x1748 x1839))
(assert (= x189 (and x743 (not x1810))))
(assert (= x19 (and x1606 (not x344))))
(assert (= (and (not x1078) x766) x1030))
(assert (x552 x675))
(assert (> (x72 x1758 x178) 10000))
(assert (= (x1423 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) x1317))
(assert (x552 340282366920938463463374607431768211455))
(assert (x1748 x850))
(assert (x1748 x1049))
(assert (x1748 x1051))
(assert (x1748 x1158))
(assert (x1748 x1829))
(assert (= x1601 (and x1508 x113)))
(assert (x1748 x1452))
(assert (x1748 x2094))
(assert (x108 x724))
(assert (x552 x385))
(assert (x1748 x629))
(assert (> (x1007 x1116 x1066 x150 x904 x563) 10000))
(assert (x89 x2036))
(assert (not (x301 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (x1748 x489))
(assert (= x367 (and x916 x1738)))
(assert (x1748 x1544))
(assert (= (x72 32 x2128) (x2223 (x72 32 x2128))))
(assert (= (x2110 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x223))
(assert (x1748 x2115))
(assert (x1748 x1500))
(assert (= x144 (=> (and (= x1155 (> x1619 x1818)) (or (not x1155) (and x1155 (and (= x1909 (x410 31 x1619)) (= x1733 (x2134 (+ x1020 x2109))) (= x2285 (* x1909 8)) (= (x143 x1733) x1763) (= x1178 (x410 x1763 x1302)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2285)) x1302))))) x1907)))
(assert (= (x66 64 x184 19) (x2223 (x66 64 x184 19))))
(assert (x1748 x1021))
(assert (= (or x2339 x1440) x409))
(assert (x1748 x1637))
(assert (= (x2223 (+ x1902 x1105)) (x2223 x1105)))
(assert (x1748 x2009))
(assert (x1748 x2344))
(assert (x1748 x1997))
(assert (= (=> (and (and (= x673 (x2134 (+ x861 x1701))) (<= x1612 4294967295) (= x741 (x1632 x509)) (< (+ x1876 x346) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1025 (x1405 x509)) (not (> x662 x1787)) (>= x2198 x346) (= x761 x1942) (<= x761 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1025 1) (= x899 (- x1177 x346)) (= (x890 (- x318 x453)) x634) (= x1876 (x1137 x509)) (= (x2134 (+ 32 x2097)) x649) (= x2198 (x1632 x157)) (= x761 (+ x346 x1876)) (= x662 (x890 (- x1787 x346))) (<= 0 x761) (= x1177 (x1632 x157)) (= (x2134 (+ x1701 31)) x1070) (= x1520 (= 0 x1848)) (< (+ x346 x741) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x48 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1070)) (= x2093 (x890 (- x1787 x346))) (= x318 (x2134 (+ x48 x861)))) (or (and (and (<= x2144 255) (= x1150 (x1405 x405)) (<= x453 115792089237316195423570985008687907853269984665640564039457584007913129639934) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x453)) (>= x2343 1) (= false x1602) (= (x2134 (+ x1815 32)) x1887) (<= 1 x1848) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2247 x690)) (= false x20) (not (< x2354 x826)) (= 68 x2355) (= 71998914331801701415977457805802827292338598818749192222732755537001613711014 x1432) (<= x446 127) (= x395 (* x2247 x690)) (= (x236 x1082) x2144) (= 4 x1109) (= x850 x1278) (>= x1150 1) (>= x850 1) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x453)) (<= x1386 127) (= (x66 64 x850 3) x326) (= x1580 false) (= x237 x1848) (= (x1405 x1947) x2343) (= (div x443 1000000) x2288) (= x338 (x176 x326)) (= (x2134 (+ x1848 x826)) x2354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x453) (= 68 x2277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x453) (= (div x443 1000000) x2330) (= x295 false) (= x1651 (x1405 x1947)) (>= x395 0) (< x453 x194) (= (x66 64 x157 x2280) x1082) (= (x836 x453) x690) (<= x446 127) (= x443 x395) (= (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) x2280) (= 1086394137 x2169) (= x237 x1504) (>= x1651 1) (= x194 x33) (<= x850 1461501637330902918203684832716283019655932542975) (= false x1324) (= x2277 (x890 (- x1964 x453))) (<= x395 57896044618658097711785492504343953926634992332820282019728792003956564819967) (= (x2134 (+ 4 x453)) x1815) (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 x1392) (= false x945) (<= 1 x2144) (= (x2134 (+ x1815 64)) x1964) (= x194 (x2134 (+ 32 x453))) (= (x2134 (+ x338 x1848)) x883) (= x1953 x247) (<= x1386 127) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x453)) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x519) (= x300 404098525) (= (x2134 (+ x1848 x826)) x1953)) (not x1520)) (and (and (= x453 x33) (= x826 x247)) x1520))) x1621) x77))
(assert (= (x2223 115792089237316195423570985008687907853099843482180094807725896704197245534209) 0))
(assert (x8 x1853))
(assert (=> (>= 10000 x778) (= 0 (x2223 x778))))
(assert (x1748 x753))
(assert (= (x2223 (x72 x1116 x1018)) (x72 x1116 x1018)))
(assert (x1748 x1008))
(assert (=> (<= x2342 10000) (= (x2223 x2342) 0)))
(assert (x1748 x241))
(assert (= (ite (> 256 x1368) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x1368)) 0) (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1368)))
(assert (x1748 x1483))
(assert (x1748 x1941))
(assert (= (and x1704 x102) x2191))
(assert (= (and (not x2046) x694) x1856))
(assert (= x1104 (or x1694 (and x1753 (not x454)))))
(assert (= x1289 (and x487 x367)))
(assert (x1748 x2166))
(assert (x1748 x22))
(assert (= (x2223 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334)) (x41 x1315 x2034 x725 x508 x486 x758 x971 x334)))
(assert (x1748 x1604))
(assert (x2024 x1642))
(assert (x1748 x42))
(assert (x1748 x1754))
(assert (x552 x1619))
(assert (= (x394 (x66 x1983 x596 x2284)) x596))
(assert (x2024 x2338))
(assert (=> (<= x1944 10000) (= (x2223 x1944) 0)))
(assert (=> (>= 10000 x2184) (= (x2223 x2184) 0)))
(assert (= (x1423 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) x969))
(assert (= x1223 (and x2283 x2239)))
(assert (= x716 (and x1987 x2195)))
(assert (= (and x1024 x1181) x1175))
(assert (x1748 x1434))
(assert (x1748 x427))
(assert (= x1508 (or x1835 x1047)))
(assert (x1748 x1131))
(assert (x552 x1152))
(assert (x1748 x1466))
(assert (x1748 x779))
(assert (x1748 x2245))
(assert (= (x394 (x72 32 x2138)) x2138))
(assert (= (x1007 x242 x559 x1944 x1491 x543) (x2223 (x1007 x242 x559 x1944 x1491 x543))))
(assert (= (x1550 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x721))
(assert (= (x72 x2174 x1399) (x2223 (x72 x2174 x1399))))
(assert (=> (<= x1164 10000) (= (x2223 x1164) 0)))
(assert (x1748 x906))
(assert (x1748 x1832))
(assert (= (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645) (x2223 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645))))
(assert (=> (>= 10000 x830) (= (x2223 x830) 0)))
(assert (= (x787 (x1007 x1116 x1066 x150 x904 x563)) x150))
(assert (= (and (not x990) x1306) x1091))
(assert (= (x2223 x895) (x2223 (+ x895 1))))
(assert (= (=> (and (= x485 (x831 x1167)) (= (not (< x820 x961)) x2120) (= (x2134 (+ x900 32)) x820)) (and x885 x2120)) x2038))
(assert (= (x2223 x1042) (x2223 (+ x1042 x407))))
(assert (=> (>= 10000 x646) (= 0 (x2223 x646))))
(assert (x1748 x835))
(assert (x1748 x147))
(assert (= x2260 (=> (and (and (= (x890 (- x90 x330)) x1688) (= (x2134 (+ x1123 31)) x1642) (= (x2134 (+ x615 x2197)) x90) (< (+ x346 x1882) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x890 (- x2093 x346)) x1963) (= (- x514 x346) x884) (= x925 (x183 x157)) (>= x925 x346) (= x2189 (x2134 (+ x1123 x615))) (= x28 (x1405 x509)) (>= x28 1) (= (= x1848 0) x1222) (= (x183 x509) x1882) (= x1256 x200) (= (x2134 (+ 32 x815)) x638) (>= 4294967295 x1521) (= (+ x96 x346) x200) (<= x200 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x346 x96) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x1963 x2093)) (<= 0 x200) (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1642) x2197) (= x514 (x183 x157)) (= (x927 x509) x96) (= x1362 (x890 (- x2093 x346)))) (or (and (= x330 x288) x1222) (and (and (= x1379 68) (<= x330 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x452 (x1405 x1947)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x330)) (= x2140 (x66 64 x157 x612)) (= x555 (x2134 (+ x330 4))) (= x1906 10894474682274239493831243662817379401261526446360622092269559273883068006400) (= x940 71998914331801701415977457805802827292338598818749192222732755537001613711014) (= 1086394137 x2248) (not (< x1465 x247)) (= (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) x612) (= x748 29289127993025145568725129057828671567744754166070328588094505464281371246592) (= x282 (div x840 1000000)) (= (x2134 (+ x1848 x2145)) x351) (>= x1848 1) (= (x1732 x330) x1709) (= (x1405 x1947) x2117) (>= x2117 1) (< x330 x926) (= 68 x1244) (= x2204 (x66 64 x1649 3)) (>= x2168 1) (>= x2161 1) (= (x312 x2204) x2145) (<= x2367 127) (= x288 x926) (= x1811 x1943) (>= 127 x785) (= (* x1709 x2247) x934) (>= 1461501637330902918203684832716283019655932542975 x1649) (= x934 x840) (= (x2134 (+ x330 32)) x926) (= (x2134 (+ 64 x555)) x2307) (= (x236 x2140) x2161) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x330) (= x1465 (x2134 (+ x247 x1848))) (= x2175 false) (<= 0 x934) (= (x2134 (+ x247 x1848)) x81) (= false x511) (= x2225 404098525) (= x1943 x1848) (= x1863 x1649) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x934) (>= 127 x785) (= x2206 false) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x330) (< (* x2247 x1709) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x140 4) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x330)) (= x124 (div x840 1000000)) (= false x1251) (>= 255 x2161) (= x1244 (x890 (- x2307 x330))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x330)) (= x1638 (x2134 (+ 32 x555))) (= false x1388) (>= x452 1) (= false x1261) (= (x1405 x405) x2168) (<= x2367 127) (<= 1 x1649)) (not x1222)))) x1235)))
(assert (x1748 x1270))
(assert (x1748 x2065))
(assert (x1748 x1571))
(assert (= x2075 (x394 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196))))
(assert (not (x301 (x66 64 x1303 17))))
(assert (= x455 (and x1293 x591)))
(assert (=> (<= x971 10000) (= (x2223 x971) 0)))
(assert (=> (>= 10000 x732) (= (x2223 x732) 0)))
(assert (< 10000 (x66 x1315 x2333 x1322)))
(assert (x1748 x1122))
(assert (x1748 x1570))
(assert (= (and (not x2056) x1319) x1101))
(assert (x1748 x91))
(assert (x1748 x549))
(assert (x1748 x209))
(assert (x301 170141183460469231731687303715884105726))
(assert (x1748 x708))
(assert (< (x41 x1315 x2034 x725 x508 x486 x758 x971 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 64 (x2216 (x66 64 x850 3))))
(assert (=> (<= x1119 10000) (= (x2223 x1119) 0)))
(assert (= x1024 (and x2104 x2352)))
(assert (= (or x1822 x915) x104))
(assert (= x1435 (and x818 x2314)))
(assert (x1748 x785))
(assert (x552 x154))
(assert (x1748 x1512))
(assert (x1748 x1636))
(assert (= x1673 (x394 (x72 x1315 x1673))))
(assert (= x1158 (x787 (x671 x897 x847 x1158 x1946))))
(assert (=> (<= x123 10000) (= 0 (x2223 x123))))
(assert (< (x72 x1315 x1673) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2216 (x66 x1758 x830 x1900)) x1758))
(assert (x1748 x2205))
(assert (x1748 x1245))
(assert (x1748 x228))
(assert (x1748 x1904))
(assert (x1748 x730))
(assert (x2024 x1069))
(assert (x1748 x1432))
(assert (x1748 x1826))
(assert (= x1086 (x1193 (x671 x242 x980 x2051 x1086))))
(assert (= (and x2029 x1993) x464))
(assert (not (x301 (x66 x2174 x2163 x2208))))
(assert (x1149 x1270))
(assert (= (x1550 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) x2263))
(assert (x1748 x2360))
(assert (=> (>= 10000 x2072) (= 0 (x2223 x2072))))
(assert (x1748 x2346))
(assert (= (and x2119 (not x2150)) x1472))
(assert (= (=> (and (= x1026 (x2134 (+ x676 96))) (= x302 (x703 x1516)) (= x1516 (x2134 (+ x1483 96))) (= (not (> x1803 128)) x386)) (and x386 x887)) x2250))
(assert (x1748 x2231))
(assert (x1748 x2174))
(assert (= x348 (x394 (x671 x1758 x348 x1415 x1779))))
(assert (=> (>= 10000 x2196) (= 0 (x2223 x2196))))
(assert (< 10000 (x1007 x1724 x1081 x59 x238 x1677)))
(assert (x1748 x1332))
(assert (= (and (not x1644) x455) x1189))
(assert (x1748 x1504))
(assert (= (x2105 x1758 x1929 x516 x2257 x878 x1014) (x2223 (x2105 x1758 x1929 x516 x2257 x878 x1014))))
(assert (x1748 x2097))
(assert (=> (>= 10000 x27) (= (x2223 x27) 0)))
(assert (< (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= 32 (x2216 (x72 32 x264))))
(assert (=> (<= x1428 10000) (= (x2223 x1428) 0)))
(assert (> (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327) 10000))
(assert (x108 x1577))
(assert (x1748 x941))
(assert (x1748 x1677))
(assert (< (x2105 x1315 x560 x2290 x732 x707 x1594) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x1055 (not x84)) x780))
(assert (x1748 x110))
(assert (< 10000 (x72 32 4)))
(assert (= (x2223 x2160) (x2223 (+ x2160 1))))
(assert (= 0 (x2223 4294967295)))
(assert (x1748 x174))
(assert (x1748 x2045))
(assert (x1748 x2117))
(assert (=> (<= x1622 10000) (= (x2223 x1622) 0)))
(assert (x1748 x2011))
(assert (x552 x1754))
(assert (=> (<= x893 10000) (= (x2223 x893) 0)))
(assert (= (x2110 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) x1622))
(assert (> (x72 32 x2128) 10000))
(assert (x1748 x1326))
(assert (x1748 x874))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1072 x1315 x35 x757 x1691 x47 x2274 x276)))
(assert (x552 x206))
(assert (x1748 x1548))
(assert (x1748 x1213))
(assert (= x915 (and x1287 x908)))
(assert (x1748 x814))
(assert (x301 115792089237316195423570985008687907853099843482180094807725896704197245534209))
(assert (x1748 x70))
(assert (=> (>= 10000 x131) (= (x2223 x131) 0)))
(assert (x1748 x914))
(assert (= (and x647 (not x1951)) x401))
(assert (=> (>= 10000 x2321) (= 0 (x2223 x2321))))
(assert (x1748 x1631))
(assert (< 10000 (x66 64 x184 19)))
(assert (x1748 x804))
(assert (=> (>= 10000 x483) (= 0 (x2223 x483))))
(assert (= (x2223 114221746417031484496905892821793293822878436923706878644384133060206014517163) 0))
(assert (x1748 x1507))
(assert (= (and x1888 (not x88)) x2209))
(assert (= (x2223 x1249) (x2223 (+ 1 x1249))))
(assert (= (and (not x582) x1188) x1373))
(assert (x1748 x1027))
(assert (= x1724 (x2216 (x66 x1724 x191 x1843))))
(assert (x1748 x2099))
(assert (=> (>= 10000 x1049) (= (x2223 x1049) 0)))
(assert (= (and (not x1539) x723) x525))
(assert (x1748 x1849))
(assert (= x1438 (x787 (x66 x1116 x1201 x1438))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x1509)))
(assert (= x27 (x787 (x671 x1724 x1720 x27 x1238))))
(assert (= x1955 (and x1222 x1879)))
(assert (x1748 x1874))
(assert (= x571 (and x1016 x799)))
(assert (= x1684 (and x329 (not x2228))))
(assert (x108 x273))
(assert (< (x72 32 x358) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x322))
(assert (= x2290 (x787 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (x1748 x2182))
(assert (x1748 x1843))
(assert (x1748 x304))
(assert (x1748 x1940))
(assert (x89 x1318))
(assert (x1748 x1408))
(assert (x1748 x436))
(assert (= x916 (and x2008 (not x665))))
(assert (x1748 x1221))
(assert (x1748 x902))
(assert (x1748 x794))
(assert (= x559 (x394 (x1007 x242 x559 x1944 x1491 x543))))
(assert (= (x394 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) 71998914331801701415977457805802827292338598818749192222732755537001613711014))
(assert (= x1802 (and (not x1453) x311)))
(assert (= (x787 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)) x699))
(assert (= (x2216 (x1007 x1116 x1066 x150 x904 x563)) x1116))
(assert (= x2359 (=> (and (= (x2200 x392) x2137) (= (not (> x246 32)) x829)) (and x829 (=> (= x1999 32) x528)))))
(assert (=> (>= 10000 x878) (= 0 (x2223 x878))))
(assert (=> (<= x1086 10000) (= 0 (x2223 x1086))))
(assert (x301 115792089237316195423570985008687907853269984665640564039457584007913129639934))
(assert (x1748 x1657))
(assert (=> (<= x2034 10000) (= 0 (x2223 x2034))))
(assert (x1748 x793))
(assert (x1748 x1341))
(assert (x1748 x1108))
(assert (=> (>= 10000 x242) (= 0 (x2223 x242))))
(assert (= x617 (x2110 (x1007 x1758 x1761 x2340 x352 x617))))
(assert (= (x1423 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x1994))
(assert (x1748 x2249))
(assert (x1748 x639))
(assert (x1748 x384))
(assert (x1748 x893))
(assert (< 10000 (x66 x1116 x1201 x1438)))
(assert (> (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645) 10000))
(assert (not (x301 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (= (x2223 x9) (x2223 (+ x9 1))))
(assert (= x242 (x2216 (x66 x242 x73 x1791))))
(assert (x8 x114))
(assert (= x316 (and x591 (not x1293))))
(assert (x978 x2083 x385))
(assert (=> (>= 10000 x184) (= (x2223 x184) 0)))
(assert (x1748 x2248))
(assert (x1748 x140))
(assert (x1748 x1962))
(assert (= x2121 (=> (and (or (and (= (ite (not (> x346 x2093)) 1 0) x1323) x93) (and (= x1323 (ite x93 1 0)) (not x93))) (and (= x99 16) (= x1489 (x890 (- x1913 x2032))) (= x93 (not (= 0 x1489))) (= x1560 (x2134 (+ x804 x639))))) x833)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x2174 x2041 x1593 x1350)))
(assert (not (x301 (x72 32 x54))))
(assert (= x1764 (x2110 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (= (x2216 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x1116))
(assert (= (x1193 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)) x544))
(assert (x1748 x796))
(assert (x1748 x406))
(assert (= x897 (x2216 (x671 x897 x847 x1158 x1946))))
(assert (=> (<= x1564 10000) (= (x2223 x1564) 0)))
(assert (x1748 x1600))
(assert (x1748 x1337))
(assert (x1748 x1909))
(assert (= x2131 (=> (and (= (not (> x862 x389)) x369) (= (+ x979 1) x389)) (and x1090 x369))))
(assert (x1748 x2319))
(assert (x1748 x2014))
(assert (=> (>= 10000 x13) (= 0 (x2223 x13))))
(assert (=> (<= x912 10000) (= (x2223 x912) 0)))
(assert (not (x301 (x72 x1724 x1820))))
(assert (= (x394 (x66 64 x1139 19)) x1139))
(assert (x1748 x1064))
(assert (x1748 x1271))
(assert (= x1509 (x394 (x72 32 x1509))))
(assert (x1748 x216))
(assert (=> (>= 10000 x1245) (= (x2223 x1245) 0)))
(assert (= x1441 (=> (and (= x1169 (x2134 (+ x33 x1374))) (= x1983 (x890 (- x1758 32))) (= x1758 (x890 (- x682 x33))) (= (x2134 (+ x1374 x33)) x1997) (= x682 (x2134 (+ 32 x1169))) (= (<= x1983 224) x1921)) (and (=> (and (= x86 (x2134 (+ x33 32))) (= (x2134 (+ 64 x33)) x2213) (= x542 (x2134 (+ x33 32))) (= x540 (x2134 (+ x33 96))) (= (x2134 (+ 64 x33)) x2246) (= x729 (x323 x31)) (= (x1072 x1983 x1988 x534 x544 x1507 x728 x279) x595) (= (x323 x259) x279) (= (x2134 (+ x33 32)) x2047) (= x1711 (x2134 (+ x33 32))) (= x802 (x2134 (+ 160 x33))) (= (x323 x152) x544) (= x107 (x2134 (+ x33 32))) (= (x323 x225) x1507) (= x2342 (x323 x33)) (= x2309 (x72 x1983 x16)) (= (x323 x807) x728) (= (x2134 (+ x33 64)) x152) (= x781 (x323 x542)) (= x534 (x323 x2047)) (= (x2134 (+ 96 x33)) x31) (= x999 (x2134 (+ 128 x33))) (= x572 (ite (= x1983 0) x2323 (ite (>= 32 x1983) x2309 (ite (<= x1983 64) x993 (ite (<= x1983 96) x1926 (ite (>= 128 x1983) x1866 (ite (>= 160 x1983) x67 (ite (>= 192 x1983) x595 (ite (<= x1983 224) x976 x98))))))))) (= (x323 x376) x1645) (= (x2134 (+ x33 128)) x807) (= x321 (x323 x1264)) (= x1866 (x1007 x1983 x1669 x321 x959 x25)) (= (x2134 (+ 192 x33)) x376) (= (>= 224 x1758) x249) (= (x323 x33) x596) (= x2084 (x2134 (+ 128 x33))) (= x259 (x2134 (+ 160 x33))) (= x160 (x323 x2213)) (= (x323 x33) x16) (= x67 (x2105 x1983 x1132 x857 x2321 x729 x1125)) (= x1926 (x671 x1983 x2342 x1009 x2350)) (= x2323 (x1377 0)) (= (x323 x906) x2350) (= x993 (x66 x1983 x596 x2284)) (= x1669 (x323 x33)) (= x976 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) (= (x2134 (+ x33 32)) x1264) (= x1514 (x2134 (+ 64 x33))) (= x225 (x2134 (+ x33 96))) (= x1470 (x323 x1320)) (= x25 (x323 x540)) (= x857 (x323 x107)) (= (x323 x2246) x959) (= (x323 x2084) x1317) (= x1320 (x2134 (+ x33 96))) (= (x323 x33) x2286) (= x1132 (x323 x33)) (= (x2134 (+ 64 x33)) x906) (= (x323 x1514) x2321) (= (x323 x1711) x2284) (= x1009 (x323 x86)) (= (x323 x802) x1478) (= (x323 x33) x1988) (= x1125 (x323 x999))) (and x249 (=> (and (= (x323 x941) x2257) (= x2054 (x2134 (+ 32 x33))) (= (x2134 (+ 64 x33)) x1496) (= x145 (x323 x119)) (= x1381 18) (= x178 (x323 x33)) (= x2227 (x2134 (+ 96 x33))) (= (x2134 (+ x33 32)) x888) (= x699 (x323 x2054)) (>= 18446744073709551615 x268) (= (x2134 (+ 96 x33)) x397) (= (x2134 (+ 128 x33)) x2058) (= x1447 (x2134 (+ x33 128))) (= x1503 (x410 1 x500)) (= x2324 (x671 x1758 x348 x1415 x1779)) (= x646 (x323 x1496)) (= x390 (x323 x1447)) (= (x323 x888) x2340) (not (= x33 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= x348 (x323 x33)) (= (x323 x33) x1969) (= x88 (< 31 x2167)) (= x1038 (x1377 0)) (= (x2134 (+ x33 64)) x271) (not (= x33 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x323 x33) x1761) (= (x323 x271) x546) (= (x66 64 x184 19) x1552) (= (x1072 x1758 x2075 x145 x546 x1462 x211 x2196) x2078) (= x592 (ite (= 0 x1758) x1038 (ite (>= 32 x1758) x2081 (ite (>= 64 x1758) x2006 (ite (<= x1758 96) x2324 (ite (<= x1758 128) x603 (ite (<= x1758 160) x2147 (ite (<= x1758 192) x2078 (ite (<= x1758 224) x545 x2125))))))))) (= x2075 (x323 x33)) (= (x2134 (+ x33 32)) x903) (= x878 (x323 x2227)) (= x617 (x323 x1614)) (not (= x33 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (= (x2134 (+ 96 x33)) x147) (or (= 1 x1389) (= x1389 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x1535 (x2134 (+ 160 x33))) (= (x323 x313) x211) (= (x2134 (+ 64 x33)) x779) (= x2167 (ite (> x1503 0) x933 (x410 127 x933))) (= x2081 (x72 x1758 x178)) (= x1808 (x2134 (+ 192 x33))) (= (x323 x2058) x1014) (= x313 (x2134 (+ x33 128))) (= x1974 (x2134 (+ x33 128))) (= (x323 x1093) x352) (= x1415 (x323 x903)) (= (x2134 (+ x33 96)) x1614) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x677 (x2134 (+ 32 x33))) (= (x2134 (+ 32 x33)) x119) (= x538 (x2134 (+ x33 32))) (= x2021 (x2134 (+ 160 x33))) (or (<= x184 170141183460469231731687303715884105727) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x184)) (= x941 (x2134 (+ 64 x33))) (= x2196 (x323 x2021)) (<= x33 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x500 (x449 x1552)) (= (x323 x677) x1900) (< x33 x1974) (= (x66 x1758 x830 x1900) x2006) (= x1779 (x323 x779)) (= x1462 (x323 x147)) (= x1898 (x323 x397)) (= (x323 x33) x1929) (= x545 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)) (= x1093 (x2134 (+ 64 x33))) (= x830 (x323 x33)) (= x1497 (x323 x1808)) (= x1832 (x323 x1535)) (= (x323 x538) x516) (= x933 (div x500 2)) (= x268 (x323 x1889)) (= (x1007 x1758 x1761 x2340 x352 x617) x603) (= x1389 (x890 (- x1503 (mod (ite (> 32 x2167) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x2147 (x2105 x1758 x1929 x516 x2257 x878 x1014))) (and (=> (not x88) x215) (=> (and x88 (and (= x1886 (x72 32 x1552)) (= x1525 (div (+ 31 x2167) 32)) (= x862 (+ x1886 x1525)) (= (div (+ 31 x268) 32) x931) (= (ite (> 32 x268) x1886 x1545) x979) (= (< x979 x862) x2082) (= (+ x1886 x931) x1545))) (and (=> (not x2082) x1090) (=> x2082 x2131))))))) x1921))))
(assert (= (x787 (x66 64 x157 x2280)) x2280))
(assert (=> (<= x1609 10000) (= 0 (x2223 x1609))))
(assert (x1748 x1649))
(assert (= x1383 (and x845 x881)))
(assert (= (x2299 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)) x834))
(assert (= x873 (and x2085 x1097)))
(assert (x1748 x848))
(assert (=> (>= 10000 x1018) (= 0 (x2223 x1018))))
(assert (= x1820 (x394 (x72 x1724 x1820))))
(assert (= (x2216 (x671 x1116 x1609 x1568 x1637)) x1116))
(assert (> (x66 64 x157 x612) 10000))
(assert (x1748 x1643))
(assert (= x242 (x2216 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (=> (<= x1593 10000) (= (x2223 x1593) 0)))
(assert (x1748 x2066))
(assert (x1748 x13))
(assert (x552 x2211))
(assert (x1748 x1416))
(assert (x1748 x30))
(assert (x1748 x321))
(assert (=> (<= x1677 10000) (= 0 (x2223 x1677))))
(assert (> (x1007 x2174 x1344 x593 x97 x2044) 10000))
(assert (x1748 x1116))
(assert (x8 x666))
(assert (= (x2223 1000000) 0))
(assert (= x1969 (x394 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (x1748 x99))
(assert (x1748 x14))
(assert (= x1191 (x1423 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (= (x2223 115792089237316195423570985008687907853099843482180094807725896704197245534210) 0))
(assert (not (x301 (x72 32 x1592))))
(assert (= (and x1190 x1627) x882))
(assert (x1748 x1855))
(assert (x1748 x731))
(assert (= (x2110 (x2105 x1983 x1132 x857 x2321 x729 x1125)) x729))
(assert (= x687 (=> (and (= x433 (x2134 (+ x1380 96))) (= (x2134 (+ x1444 96)) x1239) (= x1585 (not (< 128 x423))) (= (x1547 x433) x2322)) (and x2311 x1585))))
(assert (x301 71998914331801701415977457805802827292338598818749192222732755537001613711014))
(assert (x1748 x1201))
(assert (=> (>= 10000 x757) (= 0 (x2223 x757))))
(assert (x1748 x1588))
(assert (x1748 x2285))
(assert (= x339 x1080))
(assert (= x1630 (and x936 (not x2031))))
(assert (= (x2223 x2128) (x2223 (+ 1 x2128))))
(assert (x1748 x1991))
(assert (x1748 x1444))
(assert (= (x394 (x66 64 x184 19)) x184))
(assert (x1748 x824))
(assert (x1748 x2356))
(assert (x1748 x2002))
(assert (< 10000 (x1007 x1983 x1669 x321 x959 x25)))
(assert (x1748 x2254))
(assert (= x138 (x787 (x66 64 x1631 x138))))
(assert (= x2133 (=> (and (= x1526 (x2134 (+ 1 x1303))) (= x814 128) (= (+ x298 1) x1247) (= x2032 (x2134 (+ 1 x1303))) (= x584 (x2134 (+ 32 x1889))) (= x298 (+ x2138 1)) (= (> x1359 0) x1743) (= x1359 (x1480 x1889))) (and (=> (not x1743) x2010) (=> (and x1743 (and (= (x1480 x584) x1449) (= (< 32 x1359) x685))) (and (=> (and x685 (and (= (x2134 (+ x453 32)) x359) (= (x1699 x1587) x91) (= x1212 (< 64 x1359)) (= (x2134 (+ 32 x584)) x1587))) (and (=> (not x1212) x2010) (=> (and x1212 (and (= x1240 (x2134 (+ 64 x584))) (= (< 96 x1359) x1097) (= x1015 (x1280 x1240)) (= x1085 (x2134 (+ 64 x453))))) (and (=> (not x1097) x2010) (=> x1097 x408))))) (=> (not x685) x2010)))))))
(assert (x1748 x500))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)))
(assert (x1748 x1489))
(assert (=> (>= 10000 x279) (= (x2223 x279) 0)))
(assert (x1748 x1449))
(assert (= (x2105 x1315 x560 x2290 x732 x707 x1594) (x2223 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (= (x2110 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)) x1898))
(assert (x1748 x1818))
(assert (= (x2216 (x72 32 x2128)) 32))
(assert (> (x66 64 x157 x2280) 10000))
(assert (= (and x1890 x1784) x179))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 x2174 x1399)))
(assert (x1748 x2322))
(assert (= x1757 (or x308 x944 x254 x763 x960)))
(assert (x1748 x1468))
(assert (x1748 x7))
(assert (x1748 x437))
(assert (< (x66 x1116 x1201 x1438) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x1315))
(assert (= (x2216 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)) x1758))
(assert (= (or x992 x1666) x565))
(assert (=> (>= 10000 x1009) (= 0 (x2223 x1009))))
(assert (x1748 x297))
(assert (x1748 x951))
(assert (x1748 x1323))
(assert (x1748 x931))
(assert (= (x2223 115792089237316195423570985008687907853269984665640564039457584007913129639935) 0))
(assert (x1748 x2079))
(assert (x1748 x2074))
(assert (x1748 x2189))
(assert (x1748 x555))
(assert (x1748 x2084))
(assert (= x178 (x394 (x72 x1758 x178))))
(assert (= x960 (and x229 (not x1737))))
(assert (x1748 x403))
(assert (< (x66 64 x850 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x1832 10000) (= 0 (x2223 x1832))))
(assert (= (x787 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) 6))
(assert (x1748 x997))
(assert (=> (<= x292 10000) (= 0 (x2223 x292))))
(assert (= x1568 (x787 (x671 x1116 x1609 x1568 x1637))))
(assert (= (x2216 (x72 32 x358)) 32))
(assert (=> (>= 10000 x2337) (= 0 (x2223 x2337))))
(assert (= x2126 (and (not x1990) x1141)))
(assert (= (and x1810 x743) x177))
(assert (= (=> (and (= x1509 (+ 1 x1360)) (= x784 (x890 (- x1482 (mod (ite (< x1226 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (> x1226 31) x1266) (= (x410 1 x1450) x1482) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x784) (= x784 1)) (= (div x1450 2) x1853) (= (ite (< 0 x1482) x1853 (x410 127 x1853)) x1226) (= x1450 (x1728 x1509))) (and (=> (not x1266) x2357) (=> (and (and (= x454 (< x722 x1846)) (= x722 (x72 32 x1509)) (= (+ x722 x1693) x1846) (= x1693 (div (+ 31 x1226) 32))) x1266) (and (=> x454 x1165) (=> (not x454) x2256))))) x1924))
(assert (= x528 (=> (and (= x1657 (x2134 (+ x2122 x1999))) (= x1348 x1657)) x438)))
(assert (not (x301 (x72 x1315 x1673))))
(assert (=> (<= x1857 10000) (= 0 (x2223 x1857))))
(assert (x1748 x868))
(assert (=> (<= x2125 10000) (= 0 (x2223 x2125))))
(assert (x1748 x1609))
(assert (x552 127))
(assert (x1748 x2355))
(assert (x1748 x690))
(assert (= (x2223 x2160) (x2223 (+ x573 x2160))))
(assert (= (or x1939 x1816) x668))
(assert (= (x2223 (+ x1342 1)) (x2223 x1342)))
(assert (=> (<= x605 10000) (= (x2223 x605) 0)))
(assert (not (x301 (x66 x1116 x1201 x1438))))
(assert (=> (<= x1512 10000) (= (x2223 x1512) 0)))
(assert (x1149 x1484))
(assert (x1748 x760))
(assert (=> (<= x1079 10000) (= 0 (x2223 x1079))))
(assert (= (x2223 x1509) (x2223 (+ 1 x1509))))
(assert (x1748 x1720))
(assert (x1748 x1242))
(assert (= x1316 (and x1055 x84)))
(assert (x1748 x485))
(assert (= x1400 (=> (and (= x1213 (* 2 x1152)) (= x652 (+ 1 x1213))) x1615)))
(assert (x1748 x628))
(assert (= (and x716 x1327) x1835))
(assert (= (and x284 x11) x1035))
(assert (= x57 (=> (and (= x1752 (* x165 2)) (= x387 (+ 1 x1752))) x1331)))
(assert (=> (<= x1691 10000) (= (x2223 x1691) 0)))
(assert (= x258 (x1423 (x1072 x2174 x558 x123 x1363 x46 x258 x2295))))
(assert (x1748 x1368))
(assert (= x1511 (or x1091 x1840)))
(assert (=> (<= x1983 10000) (= (x2223 x1983) 0)))
(assert (= (x2216 (x66 x1116 x1201 x1438)) x1116))
(assert (x1748 x2229))
(assert (x1748 x700))
(assert (x1748 x1662))
(assert (x108 x1326))
(assert (x1748 x1450))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1007 x1315 x2328 x2064 x1049 x794)))
(assert (x1748 x925))
(assert (x1748 x2054))
(assert (x1748 x1497))
(assert (= (or (and (not x1155) x939) x515) x1799))
(assert (x1748 x1595))
(assert (x1748 x1347))
(assert (< 10000 (x2105 x897 x131 x292 x1830 x1718 x2344)))
(assert (x1748 x918))
(assert (= x311 (and x837 x1956)))
(assert (=> (<= x73 10000) (= (x2223 x73) 0)))
(assert (= x80 (and x1675 (not x696))))
(assert (x1748 x811))
(assert (x301 10894474682274239493831243662817379401261526446360622092269559273883068006400))
(assert (=> (>= 10000 x854) (= 0 (x2223 x854))))
(assert (= (=> (and (= (x2134 (+ x1361 96)) x1242) (= (x1529 x1242) x14) (= (not (< 128 x1374)) x32) (= x1714 (x2134 (+ x33 96)))) (and x32 x1441)) x1569))
(assert (x1748 x1191))
(assert (= x1758 (x2216 (x671 x1758 x348 x1415 x1779))))
(assert (< (x2105 x1983 x1132 x857 x2321 x729 x1125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2223 170141183460469231731687303715884105727) 0))
(assert (x1748 x2270))
(assert (x1748 x1853))
(assert (x1748 x16))
(assert (x8 x933))
(assert (= (x2223 (x1007 x1724 x1081 x59 x238 x1677)) (x1007 x1724 x1081 x59 x238 x1677)))
(assert (x1748 x774))
(assert (= (=> (and (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1069) x1730) (= x1864 (x2134 (+ x676 x1803))) (= x2249 (x2134 (+ 32 x1974))) (= (x2134 (+ x267 32)) x353) (= x2270 (x890 (- x2164 x267))) (= (> x1849 0) x1314) (= (x2134 (+ 32 x2164)) x1215) (= (x2134 (+ 31 x1803)) x1069) (= x1849 (x1986 x1974)) (= x2164 (x2134 (+ x1730 x676)))) (and (=> (not x1314) x117) (=> (and x1314 (and (= (x217 x2249) x2099) (= (> x1849 32) x1990))) (and (=> (and x1990 (and (= x561 (x2134 (+ x1215 32))) (= x304 (x2134 (+ x2249 32))) (= (> x1849 64) x1539) (= (x92 x304) x2319))) (and (=> (not x1539) x117) (=> (and (and (= x1490 (x2134 (+ 64 x2249))) (= x2046 (> x1849 96)) (= (x2134 (+ 64 x1215)) x689) (= (x1196 x1490) x289)) x1539) (and (=> (not x2046) x117) (=> x2046 x717))))) (=> (not x1990) x117))))) x887))
(assert (not (x301 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6))))
(assert (= x1390 (=> (and (= x1231 (x143 x864)) (= x864 (x2134 (+ x1745 32))) (= x1041 (+ 1 x266)) (= x645 (not (< 32 x1166)))) (and x645 (=> (and (= x1041 x155) (= 64 x484)) x1646)))))
(assert (x1748 x2072))
(assert (x1748 x497))
(assert (= x743 (and x1059 x294)))
(assert (x1748 x2060))
(assert (x1748 x1830))
(assert (x1748 x1208))
(assert (= x1944 (x787 (x1007 x242 x559 x1944 x1491 x543))))
(assert (= (x2223 x2138) (x2223 (+ x2138 1))))
(assert (= (and x1617 x609) x2142))
(assert (x552 x1717))
(assert (= x640 (and (not x786) x464)))
(assert (=> (<= x310 10000) (= 0 (x2223 x310))))
(assert (= (x2223 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)) (x1072 x242 x172 x949 x1056 x2072 x283 x1265)))
(assert (x1748 x1273))
(assert (x1748 x338))
(assert (=> (<= x1833 10000) (= 0 (x2223 x1833))))
(assert (= (x394 (x66 64 x157 x612)) x157))
(assert (= (and x712 (not x1429)) x2301))
(assert (=> (<= x558 10000) (= (x2223 x558) 0)))
(assert (= x1721 (and x1869 x2301)))
(assert (x1748 x1614))
(assert (x1748 x1257))
(assert (x1748 x2234))
(assert (x1748 x922))
(assert (= (or x265 x1517) x1188))
(assert (x1748 x76))
(assert (= (x1193 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x1759))
(assert (x1748 x2333))
(assert (x1748 x1885))
(assert (= (x1193 (x2105 x1758 x1929 x516 x2257 x878 x1014)) x2257))
(assert (not (x301 (x671 x242 x980 x2051 x1086))))
(assert (x1748 x1186))
(assert (x1748 x58))
(assert (x1748 x1803))
(assert (x1748 x1535))
(assert (x1748 x961))
(assert (x1748 x558))
(assert (x1748 x1309))
(assert (x1748 x1782))
(assert (= (=> (and (= (x2134 (+ x1215 96)) x910) (= (x2134 (+ 96 x2249)) x1151) (= x1662 (x277 x1151)) (= (not (< 128 x1849)) x2292)) (and x117 x2292)) x717))
(assert (x1748 x1714))
(assert (= x1678 (x394 (x1072 x1724 x1678 x1079 x337 x912 x10 x834))))
(assert (= x936 (and x1766 x1695)))
(assert (=> (>= 10000 x2274) (= (x2223 x2274) 0)))
(assert (=> (>= 10000 x1597) (= (x2223 x1597) 0)))
(assert (x1748 x1912))
(assert (= (x2223 (x66 x1116 x1201 x1438)) (x66 x1116 x1201 x1438)))
(assert (x1748 x1478))
(assert (x1748 x2049))
(assert (x1748 x213))
(assert (x1748 x959))
(assert (= x1288 (=> (and (and (and (and (= false x742) (= 1605942358 x1144) (= x138 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)) (= x1143 (x370 x157)) (= x1143 x2182) (= x60 x2353) (= x1962 (x1405 x157)) (or (>= 170141183460469231731687303715884105727 x1303) (>= x1303 115792089237316195423570985008687907853099843482180094807725896704197245534208)) (= x512 (x890 (- x1913 x1303))) (= x381 false) (not (= x1410 2)) (= (not (= x512 0)) x1437) (= x1208 1) (<= x42 255) (>= x42 1) (<= x1636 127) (>= 127 x1636) (= (x890 (- x1122 x1848)) x346) (= (x1355 x2353) x1000) (= x522 (x66 64 x1631 x138)) (not (< x1122 x346)) (= (x303 x522) x42) (= 114221746417031484496905892821793293822878436923706878644384133060206014517163 x170) (or (<= x1913 170141183460469231731687303715884105727) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x1913)) (>= x1962 1) (= x659 2) (= x471 16)) (or (and (= x2316 (ite x1437 1 0)) (not x1437)) (and x1437 (= (ite (not (< x1787 x346)) 1 0) x2316)))) (= x60 x1631)) (and (not (= x708 x157)) x1424 (not (= x1947 x1300)) (<= 1 x844) (>= 1461501637330902918203684832716283019655932542975 x2065) (= x1961 (< 0 (x1405 x1947))) (not (= x848 x1980)) (= x1532 (< 0 (x1405 x157))) x1954 (<= x2148 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 1 x1138) (not (= x1947 x1980)) (= false x1524) (not (= x1980 x708)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2241) (not (= x1947 x1138)) (= x775 x1897) (>= x1204 4) (<= x907 1461501637330902918203684832716283019655932542975) (not (= x1300 x1980)) (<= 1 x1980) (>= 1461501637330902918203684832716283019655932542975 x157) x1402 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1865) (not (= x1138 x708)) (<= x708 1461501637330902918203684832716283019655932542975) (= x1707 0) (= x1845 (> (x1405 x1220) 0)) x1845 (<= x1515 1461501637330902918203684832716283019655932542975) (not (= x1220 x2065)) (<= x1046 1461501637330902918203684832716283019655932542975) (= (< 0 (x1405 x1897)) x905) (>= 1461501637330902918203684832716283019655932542975 x775) (not (= x2065 x1947)) (not (= x1947 x1220)) (>= 1461501637330902918203684832716283019655932542975 x1220) (<= x437 255) x1532 (>= x1046 1) (>= 1461501637330902918203684832716283019655932542975 x60) (<= x457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x1911) (not (= x848 x1947)) x905 (not (= x1980 x1220)) (<= 1 x405) (not (= x848 x1300)) (>= x1073 0) (not (= x157 x848)) (<= x1300 1461501637330902918203684832716283019655932542975) (not (= x1138 x1897)) (= 1605942358 x1457) (= x1980 x1046) (>= x1911 1) (not (= x1138 x848)) (<= x1980 1461501637330902918203684832716283019655932542975) (not (= x1300 x708)) (<= x2215 255) (= x865 (x480 0)) (not (= x1897 x708)) (<= 1 x775) (<= 0 x1831) (= x1947 x405) (>= 1461501637330902918203684832716283019655932542975 x405) (>= 1461501637330902918203684832716283019655932542975 x1138) (not (= x1897 x1947)) (>= 1461501637330902918203684832716283019655932542975 x853) (<= 0 x2241) (= 0 x201) (<= 0 x1515) (= x1911 x157) (<= 1 x1947) (not (= x1300 x157)) (not (= x1220 x1300)) (not (= x1897 x1220)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x127) (not (= x708 x1220)) (= x513 (< 0 (x1405 x1980))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2092) x1446 (not (= x1897 x1980)) (not (= x2065 x708)) (>= x848 1) (not (= x848 x1220)) (<= 1 x907) (<= 0 x127) (not (= x1300 x1897)) (= x157 x853) (<= 1 x708) (<= x1073 4294967295) (>= x2092 0) (= (> (x1405 x708) 0) x1402) (not (= x708 x1947)) (not (= x1897 x2065)) (<= 0 x1865) (<= x1570 255) (<= x844 1461501637330902918203684832716283019655932542975) (not (= x1300 x2065)) (not (= x708 x848)) (= (< 0 (x1405 x1300)) x1446) (>= x1220 1) (<= x1204 57896044618658097711785492504343953926634992332820282019728792003956564819967) x173 (= x173 (< 0 (x1405 x1138))) (not (= x848 x1897)) (>= 1461501637330902918203684832716283019655932542975 x1831) (not (= x1980 x1138)) (not (= x157 x1220)) (not (= x1138 x157)) (= false x1702) (not (= x1138 x1220)) (= x1044 false) (not (= x848 x2065)) (<= x1897 1461501637330902918203684832716283019655932542975) (>= x853 1) (<= 1 x1897) (>= 1461501637330902918203684832716283019655932542975 x509) (= x1138 x844) (<= x1173 1461501637330902918203684832716283019655932542975) (= x715 false) (not (= x1980 x2065)) x513 (not (= x1980 x157)) (not (= x1138 x2065)) (>= x457 0) (>= x2258 0) (= x817 x157) (not (= x1300 x1138)) (not (= x1947 x157)) (>= x2148 0) (>= x1300 1) (= x907 x2065) (<= 0 x1173) (= x1050 false) (<= 1 x2065) (= x1424 (< 0 (x1405 x2065))) (= x1954 (> (x1405 x848) 0)) (>= 1461501637330902918203684832716283019655932542975 x848) (not (= x2065 x157)) (<= 0 x60) x1961 (>= 1461501637330902918203684832716283019655932542975 x1947) (<= x2258 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1519 x865) (>= x157 1) (not (= x1897 x157)))) x366)))
(assert (= x2314 (and x1237 x1053)))
(assert (= (x1423 (x2105 x1758 x1929 x516 x2257 x878 x1014)) x1014))
(assert (x1149 x2199))
(assert (x1748 x46))
(assert (= x630 (and x1744 (not x1314))))
(assert (= (and x1223 x1391) x799))
(assert (x1748 x878))
(assert (= (x1423 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113)) x2049))
(assert (< (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x2041))
(assert (< 10000 (x1007 x1315 x2328 x2064 x1049 x794)))
(assert (x1748 x1854))
(assert (x1748 x649))
(assert (x1748 x1139))
(assert (x1748 x444))
(assert (< 10000 (x66 64 x2032 17)))
(assert (=> (>= 10000 x2275) (= 0 (x2223 x2275))))
(assert (x1748 x1151))
(assert (x1748 x1126))
(assert (x1748 x646))
(assert (x1748 x63))
(assert (= (x787 (x66 64 x157 x612)) x612))
(assert (x1748 x2246))
(assert (=> (>= 10000 x1071) (= 0 (x2223 x1071))))
(assert (x1748 x1083))
(assert (x1748 x1154))
(assert (= x285 (x1550 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (= x2174 (x2216 (x1072 x2174 x558 x123 x1363 x46 x258 x2295))))
(assert (> (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752) 10000))
(assert (=> (>= 10000 x276) (= (x2223 x276) 0)))
(assert (x1748 x123))
(assert (x1748 x713))
(assert (x1748 x2338))
(assert (x1748 x169))
(assert (x1748 x563))
(assert (x1748 x1942))
(assert (= (x1193 (x671 x1758 x348 x1415 x1779)) x1779))
(assert (x1748 x2144))
(assert (x1748 x682))
(assert (x1748 x360))
(assert (= (and x1653 x2297) x101))
(assert (= (x66 64 x1139 19) (x2223 (x66 64 x1139 19))))
(assert (x1748 x1329))
(assert (x1748 x1046))
(assert (= x1274 (x394 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721))))
(assert (= (and x710 x2013) x336))
(assert (= x2284 (x787 (x66 x1983 x596 x2284))))
(assert (x1748 x1736))
(assert (= x280 (or x320 x2071)))
(assert (= x1306 (and x2150 x2119)))
(assert (= (or x1289 x325) x1850))
(assert (x1748 x1596))
(assert (x1748 x1294))
(assert (= (x2216 (x1007 x1758 x1761 x2340 x352 x617)) x1758))
(assert (= (x2299 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)) x2295))
(assert (= x16 (x394 (x72 x1983 x16))))
(assert (x1748 x2123))
(assert (x1748 x740))
(assert (x1748 x347))
(assert (= (x2223 x1837) (x2223 (+ 1 x1837))))
(assert (= x2085 (and x1667 x1212)))
(assert (x1748 x1074))
(assert (x1748 x1718))
(assert (= x602 (=> (and (= x1234 (+ x2060 1)) (= x2060 (* x268 2))) x1807)))
(assert (x1748 x1908))
(assert (=> (>= 10000 x46) (= (x2223 x46) 0)))
(assert (= x1805 (and x568 x1330)))
(assert (x1748 x12))
(assert (< 10000 (x671 x1724 x1720 x27 x1238)))
(assert (= x1265 (x2299 (x1072 x242 x172 x949 x1056 x2072 x283 x1265))))
(assert (= x1245 (x1193 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263))))
(assert (=> (<= x1896 10000) (= 0 (x2223 x1896))))
(assert (= x1225 (=> (and (= (+ 1 x988) x1719) (= x1661 (x625 x988)) (= (x1012 x1360) x1484) (= x1290 (div x1484 2)) (= x988 (+ 1 x264)) (= x1360 (x66 64 x2032 17)) (= (> x2057 31) x1635) (>= 1461501637330902918203684832716283019655932542975 x1649) (= x151 (x890 (- x1083 (mod (ite (> 32 x2057) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= x1649 (x2155 x1719)) (= (x410 1 x1484) x1083) (= x2057 (ite (> x1083 0) x1290 (x410 127 x1290))) (or (= 1 x151) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x151))) (and (=> (not x1635) x1924) (=> (and x1635 (and (= x1553 (+ x1794 x739)) (= (> x1553 x1794) x691) (= x1794 (x72 32 x1360)) (= (div (+ x2057 31) 32) x739))) (and (=> x691 x1919) (=> (not x691) x1654)))))))
(assert (x1748 x1712))
(assert (x1748 x105))
(assert (x1748 x165))
(assert (x1748 x286))
(assert (= (and (not x1010) x207) x2165))
(assert (=> (<= x1994 10000) (= 0 (x2223 x1994))))
(assert (= x356 (and x2366 (not x1635))))
(assert (= (and (not x809) x821) x892))
(assert (= x1694 (and x1753 x454)))
(assert (x1748 x1861))
(assert (=> (>= 10000 x1344) (= (x2223 x1344) 0)))
(assert (= x2044 (x2110 (x1007 x2174 x1344 x593 x97 x2044))))
(assert (= (x2223 (x66 64 x2032 17)) (x66 64 x2032 17)))
(assert (not (x301 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (= (=> (and (= (not (< x1004 x751)) x137) (= (+ x2160 1) x1004)) (and x137 x737)) x1957))
(assert (= x1171 (and x916 (not x1738))))
(assert (=> (<= x560 10000) (= 0 (x2223 x560))))
(assert (=> (>= 10000 x2032) (= (x2223 x2032) 0)))
(assert (= (x2223 (+ x979 1)) (x2223 x979)))
(assert (x1748 x413))
(assert (x1748 x131))
(assert (= x2174 (x2216 (x2105 x2174 x778 x1512 x83 x2337 x436))))
(assert (= x1744 (or x45 x2177 x227 x1684 x1103)))
(assert (= x192 (=> (and (= (> x889 31) x1993) (= (div x1270 2) x290) (= (x410 1 x1270) x261) (or (= x2240 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2240)) (= (ite (< 0 x261) x290 (x410 127 x290)) x889) (= (x167 x2138) x1270) (= (x890 (- x261 (mod (ite (> 32 x889) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x2240) (= x2138 (+ 1 x929))) (and (=> (not x1993) x2133) (=> (and (and (= (+ x233 x9) x553) (= (x72 32 x2138) x9) (= (div (+ x889 31) 32) x233) (= (> x553 x9) x786)) x1993) (and (=> x786 x291) (=> (not x786) x146)))))))
(assert (= (x2216 (x72 32 x929)) 32))
(assert (=> (<= x1874 10000) (= (x2223 x1874) 0)))
(assert (= (and x1155 x939) x515))
(assert (x1748 x2058))
(assert (< 10000 (x66 x242 x73 x1791)))
(assert (x1748 x354))
(assert (=> (<= x529 10000) (= 0 (x2223 x529))))
(assert (x1748 x985))
(assert (= (x2223 (+ x6 x2007)) (x2223 x6)))
(assert (= (or x2203 x456) x1689))
(assert (x1748 x1482))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x1552)))
(assert (= (x1193 (x671 x1983 x2342 x1009 x2350)) x2350))
(assert (= x279 (x2299 (x1072 x1983 x1988 x534 x544 x1507 x728 x279))))
(assert (x552 x114))
(assert (x1748 x963))
(assert (x1748 x107))
(assert (= (=> (= (= (ite (= x1323 0) x1323 (ite (> x1854 0) 1 0)) 0) x1930) (and (=> (and (not x1930) (and (= x1782 (div x2112 2)) (= (x890 (- x12 (mod (ite (< x2222 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1352) (= x705 (div (+ x2222 31) 32)) (= x2222 (ite (< 0 x12) x1782 (x410 127 x1782))) (= x2039 (= 0 x2222)) (<= 1 x1168) (= (x2134 (+ x1974 (mod (+ x1915 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1168) (<= x1974 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (= x1352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1352)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1974) (= (x410 1 x2112) x12) (= (x2134 (+ 32 x1974)) x402) (= (* x705 32) x1915) (<= x1974 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1168 x1974))) (and (=> (and (not x2039) (= (< 31 x2222) x845)) (and (=> (and (not x845) (and (= (* x379 256) x1422) (= (div x2112 256) x379))) x2000) (=> (and (and (= x481 (> x736 x2020)) (= (x2134 (+ x402 x2222)) x736) (= (x2134 (+ 32 x402)) x2020) (= x1087 (x72 32 4)) (= x186 (x2200 x1087)) (= x1325 (+ x1087 1))) x845) (and (=> (not x481) x1282) (=> x481 x2095))))) (=> x2039 x2000))) (=> (and (and (= x473 x2032) (= x1538 x2093)) x1930) x1431))) x833))
(assert (x2024 x1152))
(assert (x2265 x273 x714))
(assert (= (x1193 (x2105 x897 x131 x292 x1830 x1718 x2344)) x1830))
(assert (= (and x2019 x1584) x207))
(assert (x1748 x2300))
(assert (x1748 x847))
(assert (=> (>= 10000 x1820) (= 0 (x2223 x1820))))
(assert (x978 x495 x206))
(assert (> (x671 x1116 x1609 x1568 x1637) 10000))
(assert (< 10000 (x66 64 x1303 17)))
(assert (x1748 x509))
(assert (x1748 x1701))
(assert (= x498 (and (not x2239) x2283)))
(assert (not (x301 (x72 32 x264))))
(assert (=> (>= 10000 x1125) (= (x2223 x1125) 0)))
(assert (= (x2223 4132204338) 0))
(assert (x1748 x2012))
(assert (= (x2216 (x66 64 x157 x2280)) 64))
(assert (x1748 x55))
(assert (=> (<= x1115 10000) (= (x2223 x1115) 0)))
(assert (= (or x202 x1037) x1987))
(assert (x1748 x2109))
(assert (x1748 x987))
(assert (x1748 x583))
(assert (= (ite (< x2341 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x2341)) 0) (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2341)))
(assert (x552 x1302))
(assert (not (x301 (x1072 x1983 x1988 x534 x544 x1507 x728 x279))))
(assert (=> (>= 10000 x10) (= (x2223 x10) 0)))
(assert (= (and x1534 x1313) x1666))
(assert (= (and x710 (not x2013)) x2233))
(assert (x1748 x1639))
(assert (x1748 x1946))
(assert (x1748 x263))
(assert (= (x2223 (x66 x2174 x2163 x2208)) (x66 x2174 x2163 x2208)))
(assert (x1748 x1144))
(assert (= (x2223 (x72 32 x1360)) (x72 32 x1360)))
(assert (x1748 x405))
(assert (not (x301 (x1007 x897 x1827 x1778 x1819 x419))))
(assert (= x508 (x1193 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (x1748 x1953))
(assert (=> (<= x211 10000) (= (x2223 x211) 0)))
(assert (= (x671 x1116 x1609 x1568 x1637) (x2223 (x671 x1116 x1609 x1568 x1637))))
(assert (x1748 x1764))
(assert (= (and x1975 (not x2082)) x2339))
(assert (= x694 (and x1539 x723)))
(assert (x1748 x282))
(assert (x1748 x958))
(assert (= (and (not x496) x780) x921))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1007 x1983 x1669 x321 x959 x25)))
(assert (x1748 x1168))
(assert (x1748 x2199))
(assert (x1748 x90))
(assert (= x180 (=> (and (<= 1 x413) (= x2101 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413)) (= x1159 (ite (>= 1 x724) x709 (x1136 x724 x1577))) (= x413 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)) (= x1577 (* x1152 2)) (= (x2134 (+ x724 x1577)) x709) (= x1229 (* 8 x1152)) (= x724 (x410 x1275 x2101))) x1615)))
(assert (x1748 x1752))
(assert (x1748 x1034))
(assert (=> (<= x563 10000) (= 0 (x2223 x563))))
(assert (= (and x294 (not x1059)) x821))
(assert (= (x2223 x1794) (x2223 (+ 1 x1794))))
(assert (x1748 x2151))
(assert (x1748 x292))
(assert (x1748 x2083))
(assert (x1748 x1999))
(assert (x1748 x149))
(assert (= (x72 32 x1592) (x2223 (x72 32 x1592))))
(assert (= 64 (x2216 (x66 64 x1649 3))))
(assert (x1748 x417))
(assert (x1748 x1380))
(assert (x1748 x309))
(assert (x1748 x726))
(assert (=> (<= x2044 10000) (= (x2223 x2044) 0)))
(assert (=> (>= 10000 x1464) (= 0 (x2223 x1464))))
(assert (x108 x714))
(assert (= x1491 (x1193 (x1007 x242 x559 x1944 x1491 x543))))
(assert (x552 x1484))
(assert (=> (<= x47 10000) (= 0 (x2223 x47))))
(assert (= (and x1743 x280) x564))
(assert (= x2203 (and x1437 x260)))
(assert (x1748 x1220))
(assert (= (=> (and (= x806 (x2134 (+ 96 x122))) (= x1705 (x2134 (+ x330 96))) (= x1967 (x1892 x806)) (= x314 (not (> x2172 128)))) (and x314 x859)) x257))
(assert (= (x2223 (x66 x1758 x830 x1900)) (x66 x1758 x830 x1900)))
(assert (x1748 x2253))
(assert (> (x66 64 x850 3) 10000))
(assert (x1748 x1264))
(assert (x1748 x416))
(assert (= (x2216 (x72 x1983 x16)) x1983))
(assert (= (x2216 (x72 32 x1509)) 32))
(assert (x1748 x495))
(assert (= (and (not x2039) x1176) x881))
(assert (=> (<= x848 10000) (= 0 (x2223 x848))))
(assert (= (x787 (x1007 x1983 x1669 x321 x959 x25)) x321))
(assert (= (x2223 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) (x2105 x1116 x2205 x893 x2146 x1842 x1994)))
(assert (= x1976 (x787 (x66 x897 x13 x1976))))
(assert (x1748 x2164))
(assert (x1748 x318))
(assert (= (or x892 x49) x38))
(assert (x1748 x331))
(assert (x1748 x679))
(assert (not (x301 (x2105 x2174 x778 x1512 x83 x2337 x436))))
(assert (x1748 x1312))
(assert (= (x671 x2174 x2041 x1593 x1350) (x2223 (x671 x2174 x2041 x1593 x1350))))
(assert (x1748 x313))
(assert (=> (>= 10000 x258) (= (x2223 x258) 0)))
(assert (< (x2105 x1758 x1929 x516 x2257 x878 x1014) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (or x565 x1001) x1153))
(assert (x1748 x423))
(assert (x1748 x2240))
(assert (= x885 x2264))
(assert (= (x2110 (x1007 x897 x1827 x1778 x1819 x419)) x419))
(assert (x1748 x1285))
(assert (x1748 x373))
(assert (= x846 (and x336 (not x1112))))
(assert (< 10000 (x72 32 x2087)))
(assert (x1748 x626))
(assert (=> (>= 10000 x1557) (= 0 (x2223 x1557))))
(assert (x1748 x695))
(assert (= (and (not x1584) x2019) x2091))
(assert (x1748 x1682))
(assert (x1748 x2210))
(assert (=> (<= x725 10000) (= (x2223 x725) 0)))
(assert (= x1397 (and x2008 x665)))
(assert (= (x1007 x897 x1827 x1778 x1819 x419) (x2223 (x1007 x897 x1827 x1778 x1819 x419))))
(assert (= (x2223 (+ x9 x233)) (x2223 x9)))
(assert (x1748 x349))
(assert (x1748 x1114))
(assert (x1748 x1447))
(assert (x1748 x233))
(assert (x1748 x871))
(assert (=> (<= x352 10000) (= (x2223 x352) 0)))
(assert (< 10000 (x671 x2174 x2041 x1593 x1350)))
(assert (x552 x1270))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 x1758 x830 x1900)))
(assert (= x1269 (and x2050 x1354)))
(assert (= (x394 (x671 x242 x980 x2051 x1086)) x980))
(assert (x1748 x1040))
(assert (= (=> (and (= x604 (+ 1 x1342)) (= (x2347 x2036) x1139) (= (x2347 x2036) x632) (= x136 (x1467 x1889)) (= x2094 (x2134 (+ x1974 64))) (= x1054 (x2134 (+ x1889 32))) (= (x2134 (+ 1 x184)) x2036) (= x1342 (+ x2087 1)) (= x609 (> x136 0)) (= (x2134 (+ x2094 32)) x1393)) (and (=> (and x609 (and (= (> x136 32) x56) (= (x1499 x1054) x130))) (and (=> (not x56) x869) (=> (and x56 (and (= x1712 (x1650 x2026)) (= x2056 (< 64 x136)) (= x2026 (x2134 (+ x1054 32))) (= (x2134 (+ x1393 32)) x842))) (and (=> (not x2056) x869) (=> (and (and (= (x2134 (+ 64 x1054)) x63) (= x696 (> x136 96)) (= x1797 (x2134 (+ 64 x1393))) (= (x458 x63) x731)) x2056) (and (=> (not x696) x869) (=> x696 x562))))))) (=> (not x609) x869))) x1331))
(assert (=> (>= 10000 x436) (= (x2223 x436) 0)))
(assert (x1748 x130))
(assert (x1748 x706))
(assert (=> (>= 10000 x1497) (= 0 (x2223 x1497))))
(assert (x1748 x2337))
(assert (= (and x1990 x1141) x723))
(assert (not (x301 (x66 64 x850 3))))
(assert (= x229 (and x2212 x1998)))
(assert (not (x301 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263))))
(assert (= (x2223 29289127993025145568725129057828671567744754166070328588094505464281371246592) 0))
(assert (x1748 x1389))
(assert (=> (>= 10000 x1673) (= 0 (x2223 x1673))))
(assert (= (x2223 (+ x358 1)) (x2223 x358)))
(assert (< (x66 64 x184 19) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (=> (= (= 1 (ite (< 31 x1152) 1 0)) x2195) (and (=> (and (and (= x1052 (= x1152 0)) (or (and (= 0 x1275) x1052) (and (and (= x2187 (x2134 (+ 32 x1745))) (= (x143 x2187) x2185) (= x1275 x2185)) (not x1052)))) (not x2195)) x180) (=> (and (and (= x1166 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1152)) (= (x72 32 x54) x266) (= (< 0 x1166) x1327)) x2195) (and (=> (and (not x1327) (and (= x266 x155) (= x484 32))) x1646) (=> x1327 x1390))))) x606))
(assert (= x1517 (or x681 x825)))
(assert (= (x394 (x72 32 x358)) x358))
(assert (= x1071 (x2110 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (= (=> (and (= x2014 (x2134 (+ x136 x1393))) (= x973 (x2134 (+ 32 x601))) (= x601 (x2134 (+ x2300 x1393))) (= x1977 (> x1586 0)) (= x1586 (x400 128)) (= x2011 (x2134 (+ x136 31))) (= x958 (x2134 (+ 32 x1974))) (= x1039 (x890 (- x601 x1974))) (= x2300 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2011))) (and (=> (not x1977) x2179) (=> (and x1977 (and (= x839 (< 32 x1586)) (= (x441 160) x263))) (and (=> (not x839) x2179) (=> (and x839 (and (= x2066 (x2069 192)) (= (x2134 (+ 32 x973)) x922) (= x1998 (> x1586 64)))) (and (=> (and (and (= x1737 (> x1586 96)) (= (x2134 (+ x973 64)) x489) (= (x412 224) x1885)) x1998) (and (=> x1737 x1419) (=> (not x1737) x2179))) (=> (not x1998) x2179))))))) x869))
(assert (=> (>= 10000 x2065) (= 0 (x2223 x2065))))
(assert (x552 x495))
(assert (x1748 x1900))
(assert (= x590 (=> (and (= x273 (x410 x495 x206)) (= x206 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x828)) (= (* 8 x165) x2341) (= (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2341) x828) (>= x828 1) (= x2276 (x2134 (+ x714 x273))) (= x714 (* x165 2)) (= x1722 (ite (<= x273 1) x2276 (x1136 x273 x714)))) x1331)))
(assert (= (x787 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)) x1079))
(assert (x1748 x28))
(assert (= (x2216 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)) x242))
(assert (= x2340 (x787 (x1007 x1758 x1761 x2340 x352 x617))))
(assert (x1748 x342))
(assert (x1748 x1947))
(assert (= x930 (and x1528 x1590)))
(assert (x1748 x1828))
(assert (x1748 x1673))
(assert (x1748 x334))
(assert (= x1164 (x1193 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113))))
(assert (< 10000 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113)))
(assert (= (=> (and (= (x323 x569) x165) (= x1599 (x410 1 x2254)) (= x2087 (+ 1 x1552)) (= (x1958 x2087) x2254) (= (ite (< 0 x1599) x666 (x410 127 x666)) x51) (>= 18446744073709551615 x165) (or (= x1659 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1659)) (= (div x2254 2) x666) (= x1659 (x890 (- x1599 (mod (ite (< x51 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (< 31 x51) x582)) (and (=> (not x582) x1080) (=> (and (and (= x1291 (< x1837 x343)) (= (+ x6 x2007) x2294) (= x1904 (div (+ x51 31) 32)) (= (+ x1904 x6) x343) (= (div (+ x165 31) 32) x2007) (= x1837 (ite (> 32 x165) x6 x2294)) (= x6 (x72 32 x2087))) x582) (and (=> x1291 x1883) (=> (not x1291) x339))))) x1807))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 64 x1139 19)))
(assert (=> (<= x1643 10000) (= (x2223 x1643) 0)))
(assert (=> (>= 10000 x1779) (= (x2223 x1779) 0)))
(assert (< (x671 x1983 x2342 x1009 x2350) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2216 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) x1116))
(assert (= x1552 (x394 (x72 32 x1552))))
(assert (< 10000 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)))
(assert (x1748 x171))
(assert (=> (>= 10000 x541) (= (x2223 x541) 0)))
(assert (x1748 x894))
(assert (= x2072 (x2110 (x1072 x242 x172 x949 x1056 x2072 x283 x1265))))
(assert (= x227 (and x975 (not x2193))))
(assert (x1748 x1925))
(assert (x1748 x688))
(assert (x1748 x503))
(assert (= (and x496 x780) x908))
(assert (x1748 x1039))
(assert (x1748 x1379))
(assert (x1748 x704))
(assert (= (=> (= x1429 (= 1 (ite (< 31 x1619) 1 0))) (and (=> (and (not x1429) (and (= x1869 (= x1619 0)) (or (and (not x1869) (and (= x983 (x143 x642)) (= x642 (x2134 (+ 32 x1020))) (= x983 x1628))) (and (= x1628 0) x1869)))) x517) (=> (and (and (= (x72 32 x358) x1200) (= x1899 (< 0 x1818)) (= x1818 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1619))) x1429) (and (=> x1899 x532) (=> (and (not x1899) (and (= x1200 x773) (= x2109 32))) x144))))) x2159))
(assert (= (or x1443 x554) x2029))
(assert (= x15 (and x694 x2046)))
(assert (= (x1193 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285)) x1867))
(assert (= (x1423 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)) x728))
(assert (= x13 (x394 (x66 x897 x13 x1976))))
(assert (x1748 x1626))
(assert (not (x301 (x671 x1724 x1720 x27 x1238))))
(assert (= (x2216 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x2174))
(assert (= 114221746417031484496905892821793293822878436923706878644384133060206014517163 (x394 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (= 64 (x2216 (x66 64 x2032 17))))
(assert (x2024 x2102))
(assert (=> (<= x1081 10000) (= 0 (x2223 x1081))))
(assert (= (and (not x1890) x1784) x1063))
(assert (x978 x1310 x2211))
(assert (= x838 (x2110 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (= (x66 64 x1649 3) (x2223 (x66 64 x1649 3))))
(assert (x1748 x346))
(assert (= (x66 64 x1631 x138) (x2223 (x66 64 x1631 x138))))
(assert (x1748 x335))
(assert (x1748 x152))
(assert (x1748 x31))
(assert (= (x72 32 x1552) (x2223 (x72 32 x1552))))
(assert (=> (>= 10000 x283) (= (x2223 x283) 0)))
(assert (< (x72 32 x929) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x1809))
(assert (x1748 x1244))
(assert (not (x301 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (x1748 x1800))
(assert (x301 18446744073709551615))
(assert (= (x2216 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)) x1983))
(assert (x1748 x771))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x1724 x1720 x27 x1238)))
(assert (= (or x1298 x1214) x281))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x242 x980 x2051 x1086)))
(assert (x1748 x1510))
(assert (= x872 (and (not x1097) x2085)))
(assert (= (x2223 x264) (x2223 (+ 1 x264))))
(assert (x1748 x1232))
(assert (x1748 x1234))
(assert (= (x2223 (x1007 x2174 x1344 x593 x97 x2044)) (x1007 x2174 x1344 x593 x97 x2044)))
(assert (< (x1072 x1983 x1988 x534 x544 x1507 x728 x279) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x267))
(assert (=> (<= x334 10000) (= 0 (x2223 x334))))
(assert (=> (>= 10000 x794) (= (x2223 x794) 0)))
(assert (= x284 (or x1630 x1427 x1182 x698 x851)))
(assert (= (x787 (x671 x1315 x529 x1008 x310)) x1008))
(assert (x1748 x1002))
(assert (= (and x786 x464) x913))
(assert (x1748 x917))
(assert (< (x72 32 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x514))
(assert (= x725 (x787 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (x1748 x820))
(assert (= x242 (x2216 (x72 x242 x1643))))
(assert (x1748 x1660))
(assert (= (=> (and (= (div x2199 2) x2308) (= x365 (ite (> x824 0) x2308 (x410 127 x2308))) (= x744 (+ x37 1)) (= x824 (x410 1 x2199)) (or (= 1 x451) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x451)) (= (x2224 x37) x1172) (= x451 (x890 (- x824 (mod (ite (< x365 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x66 64 x1303 17) x929) (= (x813 x929) x2199) (= (+ 1 x1592) x37) (= x850 (x1780 x744)) (>= 1461501637330902918203684832716283019655932542975 x850) (= x2352 (< 31 x365))) (and (=> (and x2352 (and (= x1181 (< x2160 x751)) (= (div (+ 31 x365) 32) x573) (= x751 (+ x2160 x573)) (= (x72 32 x929) x2160))) (and (=> x1181 x1957) (=> (not x1181) x737))) (=> (not x2352) x192))) x2264))
(assert (=> (>= 10000 x486) (= (x2223 x486) 0)))
(assert (x1748 x1710))
(assert (=> (<= x2350 10000) (= (x2223 x2350) 0)))
(assert (= (x2223 x1794) (x2223 (+ x739 x1794))))
(assert (x1748 x1564))
(assert (=> (<= x2229 10000) (= (x2223 x2229) 0)))
(assert (x1748 x185))
(assert (= x2229 (x394 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263))))
(assert (x8 x1207))
(assert (= x82 (or x1731 x876 x1541)))
(assert (x1748 x452))
(assert (x1748 x673))
(assert (=> (>= 10000 x2174) (= (x2223 x2174) 0)))
(assert (= x191 (x394 (x66 x1724 x191 x1843))))
(assert (= x375 (and x120 (not x1227))))
(assert (= (and x1237 (not x1053)) x566))
(assert (= (and x126 x1459) x1965))
(assert (= (x2223 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)) (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)))
(assert (x1748 x75))
(assert (x552 x2112))
(assert (=> (<= x1947 10000) (= (x2223 x1947) 0)))
(assert (x1748 x1238))
(assert (x1748 x1169))
(assert (= x1428 (x394 (x2105 x1724 x1428 x1246 x322 x880 x1836))))
(assert (= x334 (x1550 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (= (x2223 (x1007 x1983 x1669 x321 x959 x25)) (x1007 x1983 x1669 x321 x959 x25)))
(assert (> (x66 64 x1649 3) 10000))
(assert (x301 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (x1193 (x671 x2174 x2041 x1593 x1350)) x1350))
(assert (x1748 x333))
(assert (x1748 x2353))
(assert (= (and x1757 x654) x2351))
(assert (x1748 x450))
(assert (x108 x1855))
(assert (=> (<= x1491 10000) (= (x2223 x1491) 0)))
(assert (x1748 x736))
(assert (= 17 (x787 (x66 64 x1303 17))))
(assert (= (and x2173 x1862) x574))
(assert (x1748 x2040))
(assert (not (x301 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113))))
(assert (= (x1423 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x483))
(assert (= (x787 (x1007 x1724 x1081 x59 x238 x1677)) x59))
(assert (x1748 x1370))
(assert (= x1618 (and (not x1157) x161)))
(assert (not (x301 (x72 x2174 x1399))))
(assert (x1748 x2295))
(assert (not (x301 (x671 x1983 x2342 x1009 x2350))))
(assert (x1748 x1015))
(assert (x1748 x1464))
(assert (x1748 x2221))
(assert (not (x301 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196))))
(assert (< 10000 (x66 x1724 x191 x1843)))
(assert (= x1695 (and x1576 x2127)))
(assert (= (x787 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) x1414))
(assert (x1748 x293))
(assert (= x1478 (x2299 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645))))
(assert (= (and (not x909) x2207) x1103))
(assert (x1748 x1317))
(assert (=> (<= x405 10000) (= (x2223 x405) 0)))
(assert (x552 x290))
(assert (x301 15621254588198505905128070491301349125963569839395559151037828136576825163776))
(assert (= x2158 (or x2033 x1475 x1647 x498 x1715)))
(assert (= x1674 (and x102 (not x1704))))
(assert (= (x1423 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)) x283))
(assert (= (=> (and (< x1889 x569) (<= x1889 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (= x1706 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1706)) (= (x66 64 x1303 17) x2073) (= x1790 16) (= x36 (x2134 (+ x1889 32))) (= (* 32 x286) x1626) (= x1706 (x890 (- x2346 (mod (ite (> 32 x1510) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (<= x1600 115792089237316195423570985008687907853269984665640564039457584007913129639934) (> x1889 x1600) (= x569 (x2134 (+ (mod (+ x1626 32) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1889))) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1600)) (<= x1889 115792089237316195423570985008687907853269984665640564039457584007913129639934) (<= x1600 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x871 (div x1332 2)) (= 0 x1114) (= x1889 (x2134 (+ x1600 128))) (not (= x1600 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1600)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1303) (<= x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1303 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1913 x1303))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1600) (or (<= x1303 170141183460469231731687303715884105726) (>= x1303 115792089237316195423570985008687907853099843482180094807725896704197245534208)) (>= x569 1) (= (x410 1 x1332) x2346) (= x1332 (x813 x2073)) (= (= x1510 0) x2315) (<= x1889 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (div (+ 31 x1510) 32) x286) (= (ite (> x2346 0) x871 (x410 127 x871)) x1510) (or (>= 170141183460469231731687303715884105727 x1913) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534209 x1913))) (and (=> (and (= (< 31 x1510) x1369) (not x2315)) (and (=> (and (and (= (x2134 (+ x1510 x36)) x1770) (= x442 (x644 x1531)) (= (x2134 (+ 32 x36)) x26) (= (+ 1 x1531) x404) (= (x72 32 x2073) x1531) (= (< x26 x1770) x248)) x1369) (and (=> x248 x1739) (=> (not x248) x2100))) (=> (and (and (= (x813 x2073) x341) (= (* x678 256) x2242) (= (div x341 256) x678)) (not x1369)) x182))) (=> x2315 x182))) x1376))
(assert (not (x301 (x1007 x1983 x1669 x321 x959 x25))))
(assert (= (and x2056 x1319) x1675))
(assert (= (x1072 x1315 x35 x757 x1691 x47 x2274 x276) (x2223 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (x1748 x259))
(assert (x1748 x26))
(assert (x1748 x1814))
(assert (x8 x1754))
(assert (= (x2216 (x671 x242 x980 x2051 x1086)) x242))
(assert (x1748 x122))
(assert (x1748 x1778))
(assert (= (x671 x1315 x529 x1008 x310) (x2223 (x671 x1315 x529 x1008 x310))))
(assert (= (x2223 (x2105 x2174 x778 x1512 x83 x2337 x436)) (x2105 x2174 x778 x1512 x83 x2337 x436)))
(assert (x1748 x903))
(assert (= (x787 (x66 64 x1139 19)) 19))
(assert (not (x301 (x1007 x1315 x2328 x2064 x1049 x794))))
(assert (x1748 x1758))
(assert (x1748 x1724))
(assert (=> (>= 10000 x1861) (= (x2223 x1861) 0)))
(assert (x1748 x2340))
(assert (= x2118 (=> (and (= x399 (x1335 x1095)) (= x1142 (x2134 (+ 32 x1285))) (= x518 (not (< x1142 x1022)))) (and x518 x669))))
(assert (x301 4294967295))
(assert (= x1888 (or x1965 x316 x2226 x1985 x1189)))
(assert (not (x301 (x671 x897 x847 x1158 x1946))))
(assert (= x2113 (x2299 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113))))
(assert (x1748 x953))
(assert (= x952 (or x2233 x1487 x459 x846 x401)))
(assert (x1748 x1976))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2105 x897 x131 x292 x1830 x1718 x2344)))
(assert (not x1288))
(assert (not (x301 (x1072 x242 x172 x949 x1056 x2072 x283 x1265))))
(assert (x1748 x2167))
(assert (not (x301 (x72 32 x2087))))
(assert (= x242 (x2216 (x1007 x242 x559 x1944 x1491 x543))))
(assert (x1748 x634))
(assert (x1748 x714))
(assert (x1748 x135))
(assert (x1748 x1790))
(assert (x1748 x1915))
(assert (x1748 x2169))
(assert (x1748 x100))
(assert (x1748 x1295))
(assert (x1748 x519))
(assert (= (x394 (x72 32 4)) 4))
(assert (= (and x1975 x2082) x1440))
(assert (x108 x1772))
(assert (= x2304 (x2299 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752))))
(assert (x1748 x276))
(assert (x1748 x1070))
(assert (x1748 x1460))
(assert (x1748 x160))
(assert (=> (<= x1976 10000) (= (x2223 x1976) 0)))
(assert (x1748 x1827))
(assert (= x116 (and x1477 x1035)))
(assert (x1149 x1996))
(assert (x1748 x2243))
(assert (< (x66 x2174 x2163 x2208) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x2196))
(assert (x1748 x2341))
(assert (x1748 x273))
(assert (x1748 x1779))
(assert (x552 x2011))
(assert (=> (>= 10000 x1581) (= (x2223 x1581) 0)))
(assert (x1748 x2051))
(assert (x1748 x1549))
(assert (= x1910 (x2299 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (x1748 x1717))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1007 x242 x559 x1944 x1491 x543)))
(assert (x1748 x1056))
(assert (x1748 x2180))
(assert (x1748 x1071))
(assert (= x1459 (and x1644 x455)))
(assert (= (and (not x1766) x1695) x1182))
(assert (= (x2216 (x72 x1758 x178)) x1758))
(assert (= (and (not x93) x307) x964))
(assert (= x408 (=> (and (= x315 (not (< 128 x1359))) (= (x2134 (+ x584 96)) x1814) (= x1736 (x2134 (+ 96 x453))) (= (x1134 x1814) x1126)) (and x2010 x315))))
(assert (= (x2223 (+ x29 1)) (x2223 x29)))
(assert (< 10000 (x66 x1983 x596 x2284)))
(assert (= x1363 (x1193 (x1072 x2174 x558 x123 x1363 x46 x258 x2295))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2105 x1724 x1428 x1246 x322 x880 x1836)))
(assert (x1748 x1054))
(assert (= (=> (and (>= 127 x421) (<= x2015 127) (= x995 false) (= false x942) (= false x447) (= false x1448) (= x2268 false) (= 4132204338 x1458) (<= x2015 127) (= x141 (x1405 x157)) (= 4 x759) (= x424 false) (= x2170 (= 0 x2151)) (= x439 false) (= x2151 (x890 (- x1913 x473))) (= x1 false) (= 4 x1183) (= x1337 22334872) (= false x1100) (= x2306 (not x2170)) (>= 127 x421) (= false x526) (= x1089 (x1405 x157)) (= x164 false) (= x974 false) (= false x587) (<= 1 x141) (= 16 x619) (<= 1 x1089) (= 1 x2243) (= x1950 false)) x2306) x1431))
(assert true)
(assert (= (x2105 x1983 x1132 x857 x2321 x729 x1125) (x2223 (x2105 x1983 x1132 x857 x2321 x729 x1125))))
(assert (x1748 x883))
(assert (x1748 x261))
(assert (x8 x616))
(assert (not (x301 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (x1748 x757))
(assert (x1748 x2367))
(assert (x1748 x1683))
(assert (x1748 x1076))
(assert (< (x66 64 x2032 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2110 (x1007 x1315 x2328 x2064 x1049 x794)) x794))
(assert (x1748 x1513))
(assert (not (x301 (x1072 x1724 x1678 x1079 x337 x912 x10 x834))))
(assert (x552 x1996))
(assert (x1748 x1148))
(assert (x1748 x1867))
(assert (> (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001) 10000))
(assert (= x2256 x2357))
(assert (= x1415 (x787 (x671 x1758 x348 x1415 x1779))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 x1724 x1820)))
(assert (= x1190 (and x2351 x589)))
(assert (x552 x2101))
(assert (x1748 x2251))
(assert (x1748 x198))
(assert (x1748 x1061))
(assert (= x1475 (and x1223 (not x1391))))
(assert (= x1861 (x787 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113))))
(assert (x1748 x73))
(assert (= x2000 (=> (and (= 16 x501) (<= x1020 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= (x1012 x2128) x1996) (= x114 (div x1996 2)) (= (x2134 (+ 128 x1168)) x1020) (= x1549 (ite (< 0 x1603) x114 (x410 127 x114))) (<= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1430 (div (+ x1549 31) 32)) (or (>= x1913 115792089237316195423570985008687907853099843482180094807725896704197245534210) (>= 170141183460469231731687303715884105727 x1913)) (or (= 1 x2079) (= x2079 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639808)) (<= x1168 115792089237316195423570985008687907853269984665640564039457584007913129639934) (= x1528 (= 0 x1549)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1168) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1168)) (= x2128 (x66 64 x2032 17)) (= 0 x297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1020) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639808 x1168)) (or (and (= (<= x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2032 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1913 x2032)) (and (<= x1913 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2032 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x1020 x1745) (= x2079 (x890 (- x1603 (mod (ite (> 32 x1549) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2134 (+ x1020 (mod (+ 32 x52) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1745) (<= 1 x1745) (= (* 32 x1430) x52) (= x1656 (x2134 (+ 32 x1020))) (< x1168 x1020) (= (x410 1 x1996) x1603) (or (<= x2032 170141183460469231731687303715884105726) (<= 115792089237316195423570985008687907853099843482180094807725896704197245534209 x2032)) (<= x1020 115792089237316195423570985008687907853269984665640564039457584007913129639934)) (and (=> x1528 x693) (=> (and (not x1528) (= (< 31 x1549) x2293)) (and (=> (and (and (= x600 (x72 32 x2128)) (= x1653 (< x637 x1556)) (= x637 (x2134 (+ x1656 32))) (= (x1111 x600) x1894) (= x1556 (x2134 (+ x1549 x1656))) (= (+ 1 x600) x212)) x2293) (and (=> (not x1653) x1749) (=> x1653 x819))) (=> (and (and (= (div x416 256) x653) (= (x1012 x2128) x416) (= (* x653 256) x1588)) (not x2293)) x693)))))))
(assert (x1748 x2215))
(assert (x2329 x2112))
(assert (> (x1072 x242 x172 x949 x1056 x2072 x283 x1265) 10000))
(assert (= x2000 x1282))
(assert (= (and (not x1977) x142) x944))
(assert (=> (>= 10000 x1507) (= (x2223 x1507) 0)))
(assert (x1748 x1026))
(assert (= x543 (x2110 (x1007 x242 x559 x1944 x1491 x543))))
(assert (x1748 x1688))
(assert (=> (<= x157 10000) (= 0 (x2223 x157))))
(assert (x1748 x1730))
(assert (x1748 x1656))
(assert (x1748 x114))
(assert (= x1758 (x2216 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (= (x2216 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) x1983))
(assert (= (x394 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)) x172))
(assert (x1748 x784))
(assert (= (x394 (x66 64 x1649 3)) x1649))
(assert (not (x301 (x66 64 x157 x612))))
(assert (< 10000 (x72 x1116 x1018)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 4)))
(assert (= (x72 x897 x605) (x2223 (x72 x897 x605))))
(assert (=> (>= 10000 x1764) (= (x2223 x1764) 0)))
(assert (x1748 x1129))
(assert (< 10000 (x66 x897 x13 x1976)))
(assert (> (x671 x1983 x2342 x1009 x2350) 10000))
(assert (x1748 x1678))
(assert (x1748 x1207))
(assert (x1748 x379))
(assert (= (x2110 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x1842))
(assert (x1748 x2075))
(assert (= (x394 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x1896))
(assert (= x1929 (x394 (x2105 x1758 x1929 x516 x2257 x878 x1014))))
(assert (= x2003 (or x1269 x2296)))
(assert (x1748 x1274))
(assert (x1748 x657))
(assert (x1748 x1501))
(assert (x1748 x194))
(assert (= (x2223 (+ 1 x266)) (x2223 x266)))
(assert (x1748 x483))
(assert (x1149 x621))
(assert (= (or x1721 x1746) x1179))
(assert (= (and x2142 (not x56)) x2))
(assert (x1748 x1983))
(assert (x1748 x621))
(assert (x1748 x1473))
(assert (x1748 x1218))
(assert (x1748 x1811))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x2138)))
(assert (= (and x284 (not x11)) x733))
(assert (=> (>= 10000 x1350) (= 0 (x2223 x1350))))
(assert (not (x301 (x1377 0))))
(assert (= (x394 (x671 x897 x847 x1158 x1946)) x847))
(assert (= x563 (x2110 (x1007 x1116 x1066 x150 x904 x563))))
(assert (x1748 x1642))
(assert (= (x787 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)) x949))
(assert (x1748 x886))
(assert (x301 1000000))
(assert (x978 x1763 x1302))
(assert (x1748 x1399))
(assert (not (x301 (x1007 x1724 x1081 x59 x238 x1677))))
(assert (=> (>= 10000 x1604) (= 0 (x2223 x1604))))
(assert (x1748 x1458))
(assert (x1748 x268))
(assert (= x1946 (x1193 (x671 x897 x847 x1158 x1946))))
(assert (= (x394 (x72 32 x2128)) x2128))
(assert (= x1731 (and x1655 (not x1369))))
(assert (= (and x274 (not x2315)) x1655))
(assert (not (x301 (x1007 x2174 x1344 x593 x97 x2044))))
(assert (x1748 x834))
(assert (=> (>= 10000 x1678) (= (x2223 x1678) 0)))
(assert (x1748 x1530))
(assert (x1748 x484))
(assert (x1748 x501))
(assert (= (=> (and (= (> x2172 0) x2176) (= x2172 (x112 x1020)) (= (x2134 (+ 32 x1020)) x122) (= x713 (x2134 (+ 1 x2032))) (= x1092 (x2134 (+ x2032 1))) (= (+ 1 x895) x2028) (= x895 (+ x1509 1))) (and (=> (and x2176 (and (= x1227 (> x2172 32)) (= x1117 (x112 x122)))) (and (=> (not x1227) x859) (=> (and x1227 (and (= (> x2172 64) x1486) (= x2287 (x2134 (+ x122 32))) (= x2143 (x17 x2287)) (= (x2134 (+ 32 x330)) x1893))) (and (=> (not x1486) x859) (=> (and x1486 (and (= x1076 (x2134 (+ x122 64))) (= x1078 (< 96 x2172)) (= (x2134 (+ x330 64)) x611) (= (x762 x1076) x629))) (and (=> (not x1078) x859) (=> x1078 x257))))))) (=> (not x2176) x859))) x2357))
(assert (x1748 x1751))
(assert (x1748 x1292))
(assert (x1748 x1801))
(assert (= (x2216 (x1007 x2174 x1344 x593 x97 x2044)) x2174))
(assert (x1748 x1851))
(assert (x1748 x772))
(assert (x1748 x1363))
(assert (= x1315 (x2216 (x671 x1315 x529 x1008 x310))))
(assert (< (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x352))
(assert (x1748 x642))
(assert (= (x2223 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)) (x1072 x2174 x558 x123 x1363 x46 x258 x2295)))
(assert (not (x301 (x66 64 x184 19))))
(assert (> (x2105 x1724 x1428 x1246 x322 x880 x1836) 10000))
(assert (= x825 (and x1358 x2003)))
(assert (= (and x1306 x990) x1840))
(assert (x1748 x1089))
(assert (= x1753 (and x2271 x1266)))
(assert (x1748 x1619))
(assert (x1748 x289))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001)))
(assert (=> (>= 10000 x2123) (= (x2223 x2123) 0)))
(assert (x1748 x759))
(assert (x1748 x1442))
(assert (> (x2105 x1758 x1929 x516 x2257 x878 x1014) 10000))
(assert (x1748 x1430))
(assert (x1748 x302))
(assert (= x1857 (x1423 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (x1748 x2225))
(assert (x1748 x154))
(assert (= (and x821 x809) x49))
(assert (= (x2216 (x671 x1724 x1720 x27 x1238)) x1724))
(assert (x1748 x1378))
(assert (not (x301 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (x1748 x193))
(assert (x1748 x2187))
(assert (x1748 x2032))
(assert (x1748 x247))
(assert (x1748 x946))
(assert (= 0 (x2223 18446744073709551615)))
(assert (=> (>= 10000 x348) (= 0 (x2223 x348))))
(assert (x1748 x1819))
(assert (x1748 x288))
(assert (= (x2223 (+ x54 1)) (x2223 x54)))
(assert (x1748 x2213))
(assert (not (x301 (x66 x1758 x830 x1900))))
(assert (x727 x1152))
(assert (x1748 x707))
(assert (=> (>= 10000 x1008) (= (x2223 x1008) 0)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x1116 x1609 x1568 x1637)))
(assert (= (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285) (x2223 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (< 10000 (x1007 x1758 x1761 x2340 x352 x617)))
(assert (x301 4132204338))
(assert (x1748 x1658))
(assert (= (and x481 x1383) x1939))
(assert (x1748 x1436))
(assert (= x307 (or x1633 x1933 x1023 x1349 x2345)))
(assert (= (x1423 (x2105 x1724 x1428 x1246 x322 x880 x1836)) x1836))
(assert (x1748 x332))
(assert (x1748 x25))
(assert (x1748 x1031))
(assert (= (=> (and (= (not (> x136 128)) x1578) (= x349 (x2134 (+ 96 x1393))) (= (x2134 (+ x1054 96)) x149) (= x30 (x1527 x149))) (and x1578 x869)) x562))
(assert (x1748 x255))
(assert (=> (<= x1265 10000) (= 0 (x2223 x1265))))
(assert (x1748 x996))
(assert (= 0 (x2223 404098525)))
(assert (=> (>= 10000 x1011) (= (x2223 x1011) 0)))
(assert (= (=> (= x1059 (= (ite (< 31 x165) 1 0) 1)) (and (=> (and (and (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x165) x1357) (= (< 0 x1357) x1810) (= x1877 (x72 32 x2087))) x1059) (and (=> (and (and (= 32 x894) (= x1877 x1110)) (not x1810)) x1262) (=> x1810 x2262))) (=> (and (and (= (= x165 0) x809) (or (and (not x809) (and (= (x323 x427) x85) (= x495 x85) (= (x2134 (+ x569 32)) x427))) (and x809 (= 0 x495)))) (not x1059)) x590))) x1080))
(assert (= (x2110 (x1007 x1724 x1081 x59 x238 x1677)) x1677))
(assert (x1748 x983))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 x1983 x16)))
(assert (x1748 x492))
(assert (= 64 (x2216 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6))))
(assert (x1748 x653))
(assert (x1748 x2113))
(assert (=> (>= 10000 x2163) (= 0 (x2223 x2163))))
(assert (= (and x1583 x574) x1613))
(assert (x1748 x1465))
(assert (x1748 x2290))
(assert (= (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721) (x2223 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721))))
(assert (= (=> (and (= (not (< 32 x241)) x1195) (= (x2200 x2326) x171)) (and (=> (= x2166 32) x1005) x1195)) x1769))
(assert (x1748 x546))
(assert (> (x41 x1315 x2034 x725 x508 x486 x758 x971 x334) 10000))
(assert (= 3 (x787 (x66 64 x850 3))))
(assert (=> (>= 10000 x337) (= (x2223 x337) 0)))
(assert (= x876 (or x1254 x2237)))
(assert (= x254 (and (not x1998) x2212)))
(assert (x1748 x852))
(assert (= (x2223 (+ x931 x1886)) (x2223 x1886)))
(assert (= (x787 (x1007 x1315 x2328 x2064 x1049 x794)) x2064))
(assert (x1748 x258))
(assert (= 32 (x2216 (x72 32 x2138))))
(assert (=> (<= x509 10000) (= 0 (x2223 x509))))
(assert (= (x2216 (x72 32 x2073)) 32))
(assert (= (x2223 (x671 x242 x980 x2051 x1086)) (x671 x242 x980 x2051 x1086)))
(assert (=> (>= 10000 x781) (= 0 (x2223 x781))))
(assert (x1748 x605))
(assert (= (x394 (x66 64 x1631 x138)) x1631))
(assert (=> (<= x191 10000) (= 0 (x2223 x191))))
(assert (x1748 x48))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 x897 x13 x1976)))
(assert (= (and x571 x977) x1647))
(assert (=> (>= 10000 x1946) (= (x2223 x1946) 0)))
(assert (=> (>= 10000 x1138) (= (x2223 x1138) 0)))
(assert (x1748 x2287))
(assert (x1748 x2186))
(assert (x552 x1853))
(assert (< 10000 (x72 x1315 x1673)))
(assert (x1748 x2057))
(assert (= (x2216 (x66 x1983 x596 x2284)) x1983))
(assert (= x897 (x2216 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (=> (>= 10000 x1897) (= 0 (x2223 x1897))))
(assert (x1748 x1521))
(assert (x1748 x1069))
(assert (= (x2223 (x1377 0)) (x1377 0)))
(assert (= x1165 (=> (and (= x431 (+ x722 1)) (= x2194 (not (< x431 x1846)))) (and x2256 x2194))))
(assert (> (x72 x242 x1643) 10000))
(assert (x1748 x1591))
(assert (x1748 x1586))
(assert (=> (>= 10000 x2064) (= 0 (x2223 x2064))))
(assert (= x693 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1745) (= x243 (* 32 x1064)) (= x665 (= x1094 0)) (= (div (+ x1094 31) 32) x1064) (= x264 (+ 1 x2128)) (= x1207 (div x154 2)) (= (x410 1 x154) x2363) (<= 1 x330) (< x1745 x330) (= (x890 (- x2363 (mod (ite (> 32 x1094) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x768) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1745) (= (ite (< 0 x2363) x1207 (x410 127 x1207)) x1094) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x1745) (= x154 (x1728 x264)) (= x330 (x2134 (+ (mod (+ 32 x243) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1745))) (= x920 (x2134 (+ 32 x1745))) (or (= x768 1) (= x768 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x665 x1225) (=> (and (= (< 31 x1094) x1738) (not x665)) (and (=> (and (not x1738) (and (= (div x1445 256) x1639) (= (* x1639 256) x997) (= (x1728 x264) x1445))) x1225) (=> (and (and (= x1022 (x2134 (+ x920 x1094))) (= x963 (x1335 x524)) (= (x2134 (+ x920 32)) x1285) (= (> x1022 x1285) x487) (= x1095 (+ x524 1)) (= (x72 32 x264) x524)) x1738) (and (=> x487 x2118) (=> (not x487) x669)))))))))
(assert (x1748 x900))
(assert (x1748 x1455))
(assert (x1748 x832))
(assert (x1748 x1836))
(assert (x1748 x2161))
(assert (x1748 x285))
(assert (=> (>= 10000 x1594) (= 0 (x2223 x1594))))
(assert (= x1761 (x394 (x1007 x1758 x1761 x2340 x352 x617))))
(assert (x1748 x365))
(assert (= (x787 (x66 64 x184 19)) 19))
(assert (x1748 x1094))
(assert (x1748 x701))
(assert (x1748 x2284))
(assert (= x1464 (x1423 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327))))
(assert (x1748 x1844))
(assert (= (x2223 x988) (x2223 (+ 1 x988))))
(assert (x1748 x1963))
(assert (= x1235 (=> (and (= (x1979 x1020) x700) (= (> x700 0) x1077) (= (x2134 (+ x1020 32)) x403)) (and (=> (not x1077) x2055) (=> (and (and (= (x1979 x403) x2360) (= x2127 (> x700 32))) x1077) (and (=> (not x2127) x2055) (=> (and x2127 (and (= (x2134 (+ 32 x403)) x1232) (= (< 64 x700) x1766) (= (x2134 (+ 32 x288)) x1595) (= (x466 x1232) x1607))) (and (=> (and x1766 (and (= (< 96 x700) x2031) (= x1565 (x1060 x1664)) (= x1664 (x2134 (+ x403 64))) (= (x2134 (+ x288 64)) x505))) (and (=> x2031 x103) (=> (not x2031) x2055))) (=> (not x1766) x2055)))))))))
(assert (= (and x1613 x1230) x2080))
(assert (x1748 x1994))
(assert (x1748 x699))
(assert (x552 x1207))
(assert (=> (>= 10000 x321) (= (x2223 x321) 0)))
(assert (=> (<= x2333 10000) (= (x2223 x2333) 0)))
(assert (x1748 x327))
(assert (x1748 x980))
(assert (x1748 x2291))
(assert (x1748 x2188))
(assert (x1748 x683))
(assert (= x260 true))
(assert (=> (<= x1631 10000) (= (x2223 x1631) 0)))
(assert (x552 x1318))
(assert (x1748 x807))
(assert (= (and (not x1354) x2050) x2296))
(assert (= (x72 32 x1509) (x2223 (x72 32 x1509))))
(assert (x552 x1450))
(assert (x1748 x1138))
(assert (=> (>= 10000 x2146) (= (x2223 x2146) 0)))
(assert (= (x2223 (x72 x1724 x1820)) (x72 x1724 x1820)))
(assert (=> (>= 10000 x419) (= (x2223 x419) 0)))
(assert (= (and x1606 x344) x2050))
(assert (x552 x621))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)))
(assert (x1748 x1415))
(assert (x1748 x1392))
(assert (x1748 x1454))
(assert (= x142 (or x491 x462 x1101 x2 x80)))
(assert (= x1343 (and x1330 (not x568))))
(assert (x1748 x1490))
(assert (x1748 x748))
(assert (= x1983 (x2216 (x671 x1983 x2342 x1009 x2350))))
(assert (= x291 (=> (and (= (not (> x553 x567)) x823) (= x567 (+ 1 x9))) (and x823 x146))))
(assert (=> (<= x2267 10000) (= 0 (x2223 x2267))))
(assert (x1748 x1417))
(assert (= 0 (x2216 (x1377 0))))
(assert (x1748 x1445))
(assert (x1748 x1178))
(assert (not (x301 (x72 32 4))))
(assert (= (x2223 (x66 x1983 x596 x2284)) (x66 x1983 x596 x2284)))
(assert (= (or x1104 x570) x1641))
(assert (=> (>= 10000 x322) (= (x2223 x322) 0)))
(assert (x1748 x1863))
(assert (x8 x290))
(assert (= x2119 (and (not x2059) x82)))
(assert (x1748 x350))
(assert (x1748 x1687))
(assert (x1748 x746))
(assert (x1748 x1079))
(assert (x1748 x238))
(assert (= x1862 (or x1856 x2126 x15 x630 x525)))
(assert (< 10000 (x72 32 x264)))
(assert (= x2100 x182))
(assert (=> (>= 10000 x1761) (= 0 (x2223 x1761))))
(assert (> (x72 x897 x605) 10000))
(assert (= x1360 (x394 (x72 32 x1360))))
(assert (x1748 x660))
(assert (x1748 x631))
(assert (=> (>= 10000 x2208) (= (x2223 x2208) 0)))
(assert (= (and x1689 (not x231)) x1055))
(assert (< 10000 (x66 64 x1139 19)))
(assert (x1748 x724))
(assert (x1748 x1128))
(assert (x1748 x1374))
(assert (not (x301 (x72 32 x1552))))
(assert (x1748 x1525))
(assert (= (x72 x1983 x16) (x2223 (x72 x1983 x16))))
(assert (= x2174 (x2216 (x671 x2174 x2041 x1593 x1350))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 x897 x605)))
(assert (x1748 x2139))
(assert (= x1005 (=> (and (= x1045 x1452) (= (x2134 (+ x2166 x793)) x1452)) x1418)))
(assert (< (x1007 x897 x1827 x1778 x1819 x419) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x394 (x72 x897 x605)) x605))
(assert (x1748 x2266))
(assert (x1748 x191))
(assert (=> (<= x1649 10000) (= (x2223 x1649) 0)))
(assert (= x1645 (x1550 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645))))
(assert (x1748 x989))
(assert (= (and x1520 x952) x855))
(assert (x1748 x1491))
(assert (< 10000 (x72 x2174 x1399)))
(assert (= x1724 (x2216 (x2105 x1724 x1428 x1246 x322 x880 x1836))))
(assert (= x1262 (=> (and (or (not x568) (and (and (= (x323 x841) x1310) (= (* 8 x902) x1333) (= x504 (x410 x1310 x2211)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1333)) x2211) (= (x410 31 x165) x902) (= (x2134 (+ x569 x894)) x841)) x568)) (= x568 (< x1357 x165))) x57)))
(assert (=> (<= x2286 10000) (= 0 (x2223 x2286))))
(assert (not (x301 (x66 64 x1631 x138))))
(assert (= (x2299 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) x1581))
(assert (x1748 x1422))
(assert (x1748 x1017))
(assert (=> (>= 10000 x834) (= (x2223 x834) 0)))
(assert (= (x72 x1315 x1673) (x2223 (x72 x1315 x1673))))
(assert (=> (<= x2353 10000) (= 0 (x2223 x2353))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x2073)))
(assert (= x1276 (=> (and (= x2102 (x2134 (+ x1074 31))) (or (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x245) (= 1 x245)) (= x1370 (x890 (- x1347 x53))) (= (div x2112 2) x2074) (= (x2134 (+ x1347 32)) x793) (= x241 (ite (< 0 x1436) x2074 (x410 127 x2074))) (= x245 (x890 (- x1436 (mod (ite (< x241 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x410 1 x2112) x1436) (= (x2134 (+ x1741 x643)) x1347) (= x643 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2102)) (= x695 (x2134 (+ x53 32))) (= (= 0 x1062) x656) (= (x410 1 x2112) x1062) (= (x2134 (+ x1074 x1741)) x158)) (and (=> (and (and (= x1294 (x2134 (+ x1292 x793))) (= x1292 (* 32 (ite (not (= x241 0)) 1 0))) (= x110 (x410 115792089237316195423570985008687907853269984665640564039457584007913129639680 x2112)) (or (= 0 x1292) (= 32 x1292)) (= x1045 x1294)) x656) x1418) (=> (and (not x656) (and (= (x72 32 4) x2326) (= (> x241 0) x1890))) (and (=> x1890 x1769) (=> (and (not x1890) (= x2166 0)) x1005)))))))
(assert (x1748 x2025))
(assert (= (and (not x977) x571) x1715))
(assert (x1748 x1386))
(assert (x1748 x619))
(assert (x1748 x1705))
(assert (x1748 x560))
(assert (= x1214 (and x231 x1689)))
(assert (not (x301 (x671 x1116 x1609 x1568 x1637))))
(assert (x1748 x1659))
(assert (x1748 x1438))
(assert (= (x2223 x524) (x2223 (+ x524 1))))
(assert (x552 x1069))
(assert (x1748 x132))
(assert (= (x2110 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)) x46))
(assert (x1748 x1526))
(assert (= x1225 x669))
(assert (= 0 (x2223 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1303 (x394 (x66 64 x1303 17))))
(assert (x1748 x611))
(assert (= (=> (and (= x1697 (not (> x1556 x335))) (= (x2134 (+ 32 x637)) x335) (= (x1111 x212) x2278)) (and x1749 x1697)) x819))
(assert (x1748 x1296))
(assert (= (and x2142 x56) x1319))
(assert (= (x2223 (x66 64 x157 x2280)) (x66 64 x157 x2280)))
(assert (x1748 x880))
(assert (x1748 x677))
(assert (x1748 x139))
(assert (x1748 x1085))
(assert (x1748 x1496))
(assert (x1748 x911))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1007 x1116 x1066 x150 x904 x563)))
(assert (x1748 x584))
(assert (x1748 x1081))
(assert (< (x1007 x1758 x1761 x2340 x352 x617) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (< (x66 x242 x73 x1791) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x1943))
(assert (x1748 x158))
(assert (= x239 (and x564 (not x685))))
(assert (= (x72 32 x2087) (x2223 (x72 32 x2087))))
(assert (x1748 x296))
(assert (x1748 x178))
(assert (x1748 x596))
(assert (x1748 x840))
(assert (= (x72 32 x2138) (x2223 (x72 32 x2138))))
(assert (= (or x1260 x375 x463 x1030 x1605) x2283))
(assert (not (x301 (x72 x242 x1643))))
(assert (x1748 x1735))
(assert (x1748 x561))
(assert (= (x2223 15621254588198505905128070491301349125963569839395559151037828136576825163776) 0))
(assert (= (x2110 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) x1470))
(assert (= x264 (x394 (x72 32 x264))))
(assert (x1748 x435))
(assert (= (x394 (x66 64 x157 x2280)) x157))
(assert (x1748 x2242))
(assert (=> (>= 10000 x223) (= (x2223 x223) 0)))
(assert (x552 x268))
(assert (=> (<= x1017 10000) (= 0 (x2223 x1017))))
(assert (x1748 x1414))
(assert (= (x787 (x1007 x2174 x1344 x593 x97 x2044)) x593))
(assert (x1748 x1107))
(assert (= (x787 (x2105 x1724 x1428 x1246 x322 x880 x1836)) x1246))
(assert (> (x671 x242 x980 x2051 x1086) 10000))
(assert (x1748 x768))
(assert (x1748 x157))
(assert (= (x394 (x66 64 x2032 17)) x2032))
(assert (= x1254 (and x68 (not x248))))
(assert (x1748 x2343))
(assert (x1748 x10))
(assert (x1748 x1949))
(assert (x552 x220))
(assert (= x2124 (x394 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752))))
(assert (x1748 x776))
(assert (x1748 x728))
(assert (< 10000 (x671 x1315 x529 x1008 x310)))
(assert (x1748 x1086))
(assert (= x436 (x1423 (x2105 x2174 x778 x1512 x83 x2337 x436))))
(assert (x1748 x830))
(assert (x1748 x1833))
(assert (not (x301 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721))))
(assert (x1748 x1135))
(assert (x301 1461501637330902918203684832716283019655932542975))
(assert (=> (>= 10000 x390) (= 0 (x2223 x390))))
(assert (x1748 x473))
(assert (= 0 (x2223 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (=> (<= x1759 10000) (= (x2223 x1759) 0)))
(assert (= x1924 x1654))
(assert (= x962 (or x179 x1063)))
(assert (= x1907 (=> (and (= x1469 (* x1619 2)) (= x193 (+ 1 x1469))) x482)))
(assert (= (x2223 (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)) (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6)))
(assert (x1748 x1692))
(assert (= x2286 (x394 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645))))
(assert (= (x1193 (x671 x1724 x1720 x27 x1238)) x1238))
(assert (not (x301 (x72 32 x1360))))
(assert (= x912 (x2110 (x1072 x1724 x1678 x1079 x337 x912 x10 x834))))
(assert (x552 x2102))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 x242 x1643)))
(assert (= (and x1385 x839) x2212))
(assert (x1748 x1132))
(assert (= x2177 (and x909 x2207)))
(assert (x1748 x638))
(assert (= x1561 (and (not x1181) x1024)))
(assert (= (and x1429 x712) x1546))
(assert (x1748 x1233))
(assert (x1149 x154))
(assert (= (x2223 (x72 32 x929)) (x72 32 x929)))
(assert (=> (>= 10000 x897) (= (x2223 x897) 0)))
(assert (x1149 x2254))
(assert (= (and x2003 (not x1358)) x681))
(assert (x1748 x317))
(assert (= (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x132) (ite (< x132 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x132)) 0)))
(assert (=> (<= x238 10000) (= (x2223 x238) 0)))
(assert (= x161 (and x1453 x311)))
(assert (=> (>= 10000 x272) (= (x2223 x272) 0)))
(assert (= (x2223 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)))
(assert (x1748 x186))
(assert (= (x787 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x893))
(assert (x1748 x2034))
(assert (= (and x2039 x1176) x1439))
(assert (< 10000 (x72 32 x1552)))
(assert (not (x301 (x671 x2174 x2041 x1593 x1350))))
(assert (x301 170141183460469231731687303715884105727))
(assert (x1748 x1410))
(assert (= (x2223 (+ 1 x1592)) (x2223 x1592)))
(assert (x1748 x2163))
(assert (= (x2105 x897 x131 x292 x1830 x1718 x2344) (x2223 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (x1748 x806))
(assert (x1748 x904))
(assert (=> (>= 10000 x2328) (= 0 (x2223 x2328))))
(assert (= (x2223 x1340) (x2223 (+ x1340 1))))
(assert (= x47 (x2110 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (= (=> (and (= x2252 (not (> x1586 128))) (= (x2134 (+ 96 x973)) x1927) (= x1931 (x1476 256))) (and x2179 x2252)) x1419))
(assert (= x1201 (x394 (x66 x1116 x1201 x1438))))
(assert (x1748 x1062))
(assert (< (x72 x1758 x178) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x708 10000) (= 0 (x2223 x708))))
(assert (x1748 x2016))
(assert (x1748 x1393))
(assert (x1748 x907))
(assert (= (x2299 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334)) x971))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x671 x1758 x348 x1415 x1779)))
(assert (= (x72 32 x54) (x2223 (x72 32 x54))))
(assert (= x146 x2133))
(assert (x1748 x1398))
(assert (= (x2223 (x66 64 x1303 17)) (x66 64 x1303 17)))
(assert (x1748 x2276))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)))
(assert (=> (<= x758 10000) (= 0 (x2223 x758))))
(assert (x1748 x1894))
(assert (= x1023 (and x1757 (not x654))))
(assert (=> (<= x1220 10000) (= (x2223 x1220) 0)))
(assert (= (x1423 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)) x390))
(assert (x1748 x1910))
(assert (x1748 x419))
(assert (x1748 x1857))
(assert (=> (>= 10000 x2304) (= (x2223 x2304) 0)))
(assert (x1748 x1906))
(assert (x1748 x1166))
(assert (= x2344 (x1423 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)))
(assert (= x529 (x394 (x671 x1315 x529 x1008 x310))))
(assert (x1748 x2047))
(assert (x1748 x781))
(assert (x2265 x1326 x1772))
(assert (x1748 x2211))
(assert (=> (>= 10000 x508) (= 0 (x2223 x508))))
(assert (x1748 x1597))
(assert (< (x1007 x2174 x1344 x593 x97 x2044) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x66 x1724 x191 x1843) (x2223 (x66 x1724 x191 x1843))))
(assert (=> (<= x969 10000) (= 0 (x2223 x969))))
(assert (=> (<= x1568 10000) (= 0 (x2223 x1568))))
(assert (x1748 x1488))
(assert (= (x394 (x2105 x1983 x1132 x857 x2321 x729 x1125)) x1132))
(assert (x1748 x1763))
(assert (x1748 x920))
(assert (x1748 x2230))
(assert (x1748 x2101))
(assert (x1748 x53))
(assert (= x1784 (and x2158 (not x656))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x2087)))
(assert (x1748 x2197))
(assert (x1748 x1781))
(assert (x1149 x500))
(assert (=> (<= x2263 10000) (= (x2223 x2263) 0)))
(assert (=> (<= x1969 10000) (= (x2223 x1969) 0)))
(assert (= (or x1407 x855) x782))
(assert (x1748 x543))
(assert (= x2174 (x2216 (x66 x2174 x2163 x2208))))
(assert (x1748 x1903))
(assert (= (and (not x837) x1956) x1813))
(assert (x1748 x926))
(assert (x1748 x1821))
(assert (= (x2223 1605942358) 0))
(assert (= x2328 (x394 (x1007 x1315 x2328 x2064 x1049 x794))))
(assert (x1748 x822))
(assert (=> (>= 10000 x1322) (= 0 (x2223 x1322))))
(assert (not (x301 (x1007 x242 x559 x1944 x1491 x543))))
(assert (x1748 x2278))
(assert (x727 x268))
(assert (x1748 x477))
(assert (= (x1193 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752)) x1115))
(assert (= (and x1675 x696) x491))
(assert (=> (<= x71 10000) (= 0 (x2223 x71))))
(assert (=> (<= x1246 10000) (= 0 (x2223 x1246))))
(assert (x1748 x1142))
(assert (x552 x357))
(assert (=> (<= x707 10000) (= 0 (x2223 x707))))
(assert (x1748 x420))
(assert (x1748 x541))
(assert (x1748 x1797))
(assert (not (x301 (x66 x1983 x596 x2284))))
(assert (x1748 x2044))
(assert (= (and x2366 x1635) x982))
(assert (= x2237 (and x68 x248)))
(assert (x1748 x1573))
(assert (= x2159 x1804))
(assert (= (x2223 (+ x722 x1693)) (x2223 x722)))
(assert (x1748 x968))
(assert (x1748 x2143))
(assert (x1748 x1860))
(assert (x1748 x2222))
(assert (x1748 x150))
(assert (x301 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x66 64 x157 x612) (x2223 (x66 64 x157 x612))))
(assert (x1748 x1988))
(assert (= x244 (and (not x1528) x1590)))
(assert (x1748 x1734))
(assert (x1748 x1093))
(assert (= x1778 (x787 (x1007 x897 x1827 x1778 x1819 x419))))
(assert (x1748 x2304))
(assert (x1748 x2330))
(assert (x1748 x1092))
(assert (= x897 (x2216 (x66 x897 x13 x1976))))
(assert (= (ite (< x1333 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x1333)) 0) (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1333)))
(assert (x1748 x74))
(assert (= x1116 (x2216 (x72 x1116 x1018))))
(assert (= (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001) (x2223 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (x552 x616))
(assert (not (x301 (x72 x1116 x1018))))
(assert (not (x301 (x72 32 x2073))))
(assert (= x1988 (x394 (x1072 x1983 x1988 x534 x544 x1507 x728 x279))))
(assert (not (x301 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (=> (>= 10000 x1066) (= (x2223 x1066) 0)))
(assert (= x1822 (and x908 (not x1287))))
(assert (x1748 x2036))
(assert (x1748 x1923))
(assert (< (x66 64 x1631 x138) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x2365))
(assert (x1748 x206))
(assert (x1748 x2263))
(assert (not (x301 (x671 x1315 x529 x1008 x310))))
(assert (= (x2216 (x72 32 x1592)) 32))
(assert (x1748 x283))
(assert (= (x394 (x72 x2174 x1399)) x1399))
(assert (= (or x2209 x409) x1606))
(assert (= (x2223 x1531) (x2223 (+ x1531 1))))
(assert (= (x394 (x66 64 x850 3)) x850))
(assert (x978 x1628 x2291))
(assert (x1748 x758))
(assert (= x2174 (x2216 (x72 x2174 x1399))))
(assert (= (or x2165 x566 x1435 x636 x2091) x1019))
(assert (= (x2216 (x72 x1315 x1673)) x1315))
(assert (not (x301 (x72 x897 x605))))
(assert (x1748 x2112))
(assert (x552 31))
(assert (x1748 x2103))
(assert (x1748 x1075))
(assert (= (and x1188 x582) x2005))
(assert (x1748 x290))
(assert (x1748 x1115))
(assert (x1748 x705))
(assert (x1748 x658))
(assert (= (x2223 (x72 32 x264)) (x72 32 x264)))
(assert (= (=> (= x344 (= (ite (> x268 31) 1 0) 1)) (and (=> (and (and (= x1747 (= x268 0)) (or (and x1747 (= x953 0)) (and (not x1747) (and (= x2365 x953) (= x2365 (x323 x822)) (= (x2134 (+ 32 x1889)) x822))))) (not x344)) x1205) (=> (and (and (= x1163 (x72 32 x1552)) (= (x410 115792089237316195423570985008687907853269984665640564039457584007913129639904 x268) x1312) (= (> x1312 0) x1354)) x344) (and (=> x1354 x635) (=> (and (and (= x1881 32) (= x1133 x1163)) (not x1354)) x269))))) x215))
(assert (x552 x1642))
(assert (x1748 x877))
(assert (x1748 x870))
(assert (x1748 x529))
(assert (= x1900 (x787 (x66 x1758 x830 x1900))))
(assert (x1748 x119))
(assert (x552 x1332))
(assert (= (and x2228 x329) x975))
(assert (= x2226 (and x782 (not x418))))
(assert (= x2342 (x394 (x671 x1983 x2342 x1009 x2350))))
(assert (= x368 (or x1198 x867)))
(assert (= (and x1369 x1655) x68))
(assert (= (x1423 (x2105 x1983 x1132 x857 x2321 x729 x1125)) x1125))
(assert (< (x66 64 x1649 3) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x2026))
(assert (= (x2110 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)) x1462))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1007 x1724 x1081 x59 x238 x1677)))
(assert (= x192 x737))
(assert (x1748 x2354))
(assert (x1748 x1011))
(assert (> (x72 32 x1592) 10000))
(assert (x1748 x791))
(assert (= (x2223 (x1007 x1315 x2328 x2064 x1049 x794)) (x1007 x1315 x2328 x2064 x1049 x794)))
(assert (x301 22334872))
(assert (x1748 x1226))
(assert (x1748 x1284))
(assert (= (and x716 (not x1327)) x1047))
(assert (= (x2223 (x671 x897 x847 x1158 x1946)) (x671 x897 x847 x1158 x1946)))
(assert (x1748 x652))
(assert (x1748 x2328))
(assert (=> (<= x543 10000) (= 0 (x2223 x543))))
(assert (x1748 x494))
(assert (= x1843 (x787 (x66 x1724 x191 x1843))))
(assert (= x2317 (=> (and (= (not (< 224 x1378)) x521) (= (x2200 x1485) x535)) (and x1481 x521))))
(assert (x1748 x956))
(assert (x1748 x1462))
(assert (x1748 x1540))
(assert (=> (>= 10000 x1191) (= 0 (x2223 x1191))))
(assert (x1149 x1332))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x264)))
(assert (x1748 x2124))
(assert (x1748 x1362))
(assert (= (x2223 (x671 x1758 x348 x1415 x1779)) (x671 x1758 x348 x1415 x1779)))
(assert (x1748 x1018))
(assert (x1748 x709))
(assert (x1748 x1516))
(assert (x1748 x1858))
(assert (= x211 (x1423 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196))))
(assert (x552 x2291))
(assert (< (x2105 x242 x1826 x950 x1874 x1764 x1857) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x707 (x2110 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (x1748 x1716))
(assert (x2024 x1619))
(assert (= (x2216 (x72 32 x1552)) 32))
(assert (x552 x953))
(assert (= x182 (=> (and (= x1754 (div x309 2)) (= (x167 x1592) x309) (= x796 (x410 1 x309)) (> x453 x569) (= (ite (> x796 0) x1754 (x410 127 x1754)) x2251) (= (* x169 32) x1488) (= (div (+ x2251 31) 32) x169) (<= x569 115792089237316195423570985008687907853269984665640564039457584007913129639934) (or (= 1 x935) (= x935 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x890 (- x796 (mod (ite (< x2251 32) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x569) (= (+ x2073 1) x1592) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639934 x569) (= (x2134 (+ x569 (mod (+ 32 x1488) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x453) (>= x453 1) (= x1466 (x2134 (+ x569 32))) (= (= x2251 0) x2059)) (and (=> x2059 x2264) (=> (and (not x2059) (= x2150 (< 31 x2251))) (and (=> (and (and (= (x2134 (+ x1466 32)) x900) (= (+ x1567 1) x1167) (= (> x961 x900) x990) (= (x2134 (+ x2251 x1466)) x961) (= (x72 32 x1592) x1567) (= x2103 (x831 x1567))) x2150) (and (=> (not x990) x885) (=> x990 x2038))) (=> (and (not x2150) (and (= x1398 (x167 x1592)) (= (div x1398 256) x2192) (= (* x2192 256) x1468))) x2264)))))))
(assert (x1748 x860))
(assert (= x294 (or x2183 x1373)))
(assert (x770 x2036))
(assert (= (x394 (x2105 x897 x131 x292 x1830 x1718 x2344)) x131))
(assert (= (x2223 x6) (x2223 (+ x6 x1904))))
(assert (= (x394 (x66 x1758 x830 x1900)) x830))
(assert (x1748 x1711))
(assert (x1748 x359))
(assert (x1748 x1808))
(assert (x552 x666))
(assert (x1748 x163))
(assert (x1149 x2112))
(assert (x1748 x141))
(assert (x1748 x1722))
(assert (x1748 x1204))
(assert (x1748 x306))
(assert (x1748 x341))
(assert (x8 x357))
(assert (= (x2223 22334872) 0))
(assert (not (x301 (x66 x897 x13 x1976))))
(assert (x1748 x1119))
(assert (= x1493 (or (and (not x691) x982) x109)))
(assert (=> (>= 10000 x534) (= (x2223 x534) 0)))
(assert (x1748 x2093))
(assert (x1748 x1229))
(assert (=> (<= x1363 10000) (= 0 (x2223 x1363))))
(assert (x1748 x2208))
(assert (= (or x368 x181) x329))
(assert (x1748 x1320))
(assert (< 10000 (x1072 x1315 x35 x757 x1691 x47 x2274 x276)))
(assert (= (and x382 x2023) x2207))
(assert (=> (<= x1201 10000) (= (x2223 x1201) 0)))
(assert (x1748 x2020))
(assert (x1748 x1625))
(assert (= (x2216 (x1007 x1315 x2328 x2064 x1049 x794)) x1315))
(assert (=> (<= x1830 10000) (= (x2223 x1830) 0)))
(assert (x1748 x1117))
(assert (x1748 x1183))
(assert (x8 x1717))
(assert (= x102 (and x1157 x161)))
(assert (=> (>= 10000 x1778) (= 0 (x2223 x1778))))
(assert (x1748 x1918))
(assert (x552 x1228))
(assert (x1748 x2102))
(assert (< (x66 64 x157 x612) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x552 x1310))
(assert (x1748 x1944))
(assert (= (x394 (x1007 x2174 x1344 x593 x97 x2044)) x1344))
(assert (= (x1072 x1724 x1678 x1079 x337 x912 x10 x834) (x2223 (x1072 x1724 x1678 x1079 x337 x912 x10 x834))))
(assert (x1748 x1581))
(assert (= (x787 (x66 x1315 x2333 x1322)) x1322))
(assert (not (x301 (x72 32 x2138))))
(assert (x1748 x1672))
(assert (= (and x244 (not x2293)) x1589))
(assert (x1748 x1898))
(assert (=> (<= x327 10000) (= (x2223 x327) 0)))
(assert (= (and x307 x93) x1199))
(assert (= x1724 (x2216 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (x1748 x1868))
(assert (=> (<= x1898 10000) (= 0 (x2223 x1898))))
(assert (x2265 x724 x1577))
(assert (= x1610 x606))
(assert (x1748 x1759))
(assert (=> (<= x1317 10000) (= (x2223 x1317) 0)))
(assert (x552 x2036))
(assert (x1748 x1616))
(assert (= (x2216 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x1116))
(assert (not (x301 (x72 32 x1509))))
(assert (= (x394 (x72 32 x54)) x54))
(assert (x2024 x1070))
(assert (not (x301 (x72 x1983 x16))))
(assert (= x859 (=> (and (= (x2134 (+ x330 x2172)) x622) (= (<= x1724 224) x1224) (= x1315 (x890 (- x1131 x330))) (= x1002 (x2134 (+ x2172 x330))) (= (x2134 (+ x622 32)) x1131) (= (x890 (- x1315 32)) x1724)) (and (=> (and (= (x2134 (+ x330 96)) x1003) (= x1428 (x2348 x330)) (= (x2348 x1003) x838) (= x148 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)) (= x1828 (x2134 (+ 128 x330))) (= x1984 (x2134 (+ x330 128))) (= (x2134 (+ x330 32)) x1918) (= (x2134 (+ x330 192)) x914) (= (x671 x1724 x1720 x27 x1238) x1729) (= x1554 (x2134 (+ x330 64))) (= (x2134 (+ x330 64)) x911) (= (x2348 x1416) x1836) (= (x2348 x330) x1720) (= x1820 (x2348 x330)) (= (x2348 x1328) x59) (= (x2348 x911) x337) (= (x2348 x2152) x880) (= (x2348 x373) x1246) (= x493 (x2105 x1724 x1428 x1246 x322 x880 x1836)) (= (x2134 (+ 32 x330)) x769) (= (x66 x1724 x191 x1843) x1891) (= x2076 (x2134 (+ 64 x330))) (= (x1007 x1724 x1081 x59 x238 x1677) x1396) (= (x2134 (+ x330 32)) x1328) (= x1416 (x2134 (+ x330 128))) (= x4 (>= 224 x1315)) (= (x72 x1724 x1820) x1934) (= (x2134 (+ x330 160)) x2025) (= x834 (x2348 x460)) (= (ite (= x1724 0) x2149 (ite (>= 32 x1724) x1934 (ite (>= 64 x1724) x1891 (ite (>= 96 x1724) x1729 (ite (<= x1724 128) x1396 (ite (>= 160 x1724) x493 (ite (<= x1724 192) x148 (ite (<= x1724 224) x166 x1833)))))))) x557) (= x10 (x2348 x1828)) (= x1557 (x2348 x769)) (= (x2134 (+ x330 96)) x2152) (= x191 (x2348 x330)) (= x1081 (x2348 x330)) (= (x2348 x2269) x1677) (= (x2348 x1918) x1843) (= x928 (x2134 (+ x330 32))) (= (x2348 x1984) x1191) (= (x2134 (+ 32 x330)) x706) (= (x2134 (+ 64 x330)) x1725) (= x1625 (x2134 (+ 64 x330))) (= (x2134 (+ 96 x330)) x1233) (= x2269 (x2134 (+ 96 x330))) (= x1238 (x2348 x1625)) (= x1079 (x2348 x706)) (= x912 (x2348 x1233)) (= x2149 (x1377 0)) (= (x2134 (+ 32 x330)) x373) (= x27 (x2348 x928)) (= x1065 (x2348 x1554)) (= (x2348 x1725) x238) (= x322 (x2348 x2076)) (= (x2348 x330) x541) (= x460 (x2134 (+ x330 160))) (= (x2348 x330) x1678) (= (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001) x166) (= (x2348 x914) x2001) (= x224 (x2348 x2025))) (and (=> (and (= x1670 (x2134 (+ x330 96))) (= x1691 (x2348 x1417)) (= x1322 (x2348 x1793)) (= x1008 (x2348 x2318)) (= (x2348 x139) x47) (= x2221 (x2134 (+ 160 x330))) (= (x2348 x2221) x276) (= x2239 (< 0 x1074)) (= x811 (x2134 (+ 32 x330))) (= (x41 x1315 x2034 x725 x508 x486 x758 x971 x334) x1192) (= (x2134 (+ x330 32)) x448) (= (x2348 x1871) x1594) (= x628 0) (= x492 (x2134 (+ x330 96))) (= (x2348 x448) x725) (= (x364 x2298) x628) (= x139 (x2134 (+ x330 96))) (= x1074 (x65 x1020)) (= (x2134 (+ x330 64)) x1417) (= (x2134 (+ 128 x53)) x1296) (= (x1377 0) x777) (= (x72 x1315 x1673) x218) (= (x2134 (+ x1296 32)) x1741) (= x1673 (x2348 x330)) (= x2290 (x2348 x317)) (= (x2348 x1161) x757) (= (ite (= 0 x1315) x777 (ite (>= 32 x1315) x218 (ite (<= x1315 64) x378 (ite (>= 96 x1315) x1068 (ite (>= 128 x1315) x168 (ite (<= x1315 160) x633 (ite (<= x1315 192) x1258 (ite (>= 224 x1315) x1192 x2275)))))))) x2298) (= (x2348 x330) x2034) (= x334 (x2348 x753)) (= x529 (x2348 x330)) (= (x2348 x255) x707) (= (x2134 (+ 32 x330)) x317) (= x1544 (x2134 (+ 160 x330))) (= (x2134 (+ 128 x330)) x1408) (= (x2134 (+ 64 x330)) x332) (= (x1007 x1315 x2328 x2064 x1049 x794) x168) (= x53 (x2134 (+ x330 4))) (= x1271 (x2134 (+ 64 x330))) (= (x2348 x330) x560) (= (x2348 x1408) x2274) (= x486 (x2348 x1670)) (= (x66 x1315 x2333 x1322) x378) (= x971 (x2348 x1544)) (= (x2134 (+ 128 x330)) x688) (= x1793 (x2134 (+ 32 x330))) (= x794 (x2348 x492)) (= (x2134 (+ 96 x330)) x255) (= (x2134 (+ 32 x330)) x1161) (= x549 (x2134 (+ 32 x1020))) (= (x2134 (+ 192 x330)) x753) (= x1871 (x2134 (+ x330 128))) (= x732 (x2348 x1271)) (= x1068 (x671 x1315 x529 x1008 x310)) (= x2328 (x2348 x330)) (= x1537 (x2134 (+ x330 64))) (= x1258 (x1072 x1315 x35 x757 x1691 x47 x2274 x276)) (= x310 (x2348 x1537)) (= (x2134 (+ 32 x330)) x2318) (= (x2348 x688) x758) (= (x2348 x811) x2064) (= (x2348 x332) x508) (= (x2348 x330) x2333) (= x1049 (x2348 x240)) (= x240 (x2134 (+ x330 64))) (= x35 (x2348 x330)) (= (x2105 x1315 x560 x2290 x732 x707 x1594) x633)) (and (=> (not x2239) x1276) (=> (and (and (= (x1648 x549) x306) (= (> x1074 32) x1391)) x2239) (and (=> (not x1391) x1276) (=> (and (and (= x1683 (x2134 (+ 32 x1741))) (= (x2134 (+ x549 32)) x174) (= (< 64 x1074) x1016) (= (x2214 x174) x1710)) x1391) (and (=> (not x1016) x1276) (=> (and (and (= x420 (x2134 (+ 64 x1741))) (= (x2134 (+ 64 x549)) x1135) (= (< 96 x1074) x977) (= x1658 (x129 x1135))) x1016) (and (=> x977 x655) (=> (not x977) x1276))))))))) x4)) x1224))))
(assert (x1748 x36))
(assert (= x1720 (x394 (x671 x1724 x1720 x27 x1238))))
(assert (x1748 x224))
(assert (x1748 x136))
(assert (x1748 x2321))
(assert (x1748 x2364))
(assert (= (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113) (x2223 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113))))
(assert (= x2019 (or x2042 x239 x872 x981 x873)))
(assert (= x1497 (x1550 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (x1748 x83))
(assert (< (x1377 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2216 (x2105 x1758 x1929 x516 x2257 x878 x1014)) x1758))
(assert (x1748 x2152))
(assert (x1748 x399))
(assert (x2265 x1855 x720))
(assert (= (or x189 x177) x1330))
(assert (=> (>= 10000 x847) (= 0 (x2223 x847))))
(assert (x1748 x2305))
(assert (x1748 x1310))
(assert (x301 1605942358))
(assert (= (x787 (x671 x1983 x2342 x1009 x2350)) x1009))
(assert (= (x2216 (x72 x1724 x1820)) x1724))
(assert (x1748 x659))
(assert (not (x301 (x66 x1724 x191 x1843))))
(assert (x1748 x353))
(assert (x552 x165))
(assert (x1748 x1484))
(assert (= (x1423 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285)) x1021))
(assert (=> (<= x1819 10000) (= (x2223 x1819) 0)))
(assert (x1149 x675))
(assert (x1748 x245))
(assert (=> (<= x1021 10000) (= (x2223 x1021) 0)))
(assert (= (x2223 x722) (x2223 (+ x722 1))))
(assert (x1748 x838))
(assert (x1748 x170))
(assert (= x757 (x787 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (= x308 (and x1385 (not x839))))
(assert (= (x2216 (x66 64 x1303 17)) 64))
(assert (x1748 x1893))
(assert (= x274 (or x1316 x104 x921)))
(assert (x1748 x2064))
(assert (x1748 x348))
(assert (x1748 x1929))
(assert (x1748 x94))
(assert (= (x2223 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)) (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)))
(assert (x1748 x1231))
(assert (= (x2105 x242 x1826 x950 x1874 x1764 x1857) (x2223 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (= (=> (and (= (+ x253 1) x1834) (= x2273 (not (> x5 x1834)))) (and x1610 x2273)) x205))
(assert (=> (>= 10000 x729) (= (x2223 x729) 0)))
(assert (= x1609 (x394 (x671 x1116 x1609 x1568 x1637))))
(assert (= x766 (and x556 x1486)))
(assert (x1748 x357))
(assert (< (x2105 x1116 x2205 x893 x2146 x1842 x1994) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x2223 (+ x1567 1)) (x2223 x1567)))
(assert (= x1791 (x787 (x66 x242 x73 x1791))))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1072 x242 x172 x949 x1056 x2072 x283 x1265)))
(assert (x552 x2308))
(assert (=> (<= x1645 10000) (= (x2223 x1645) 0)))
(assert (< (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x1367))
(assert (x1748 x1859))
(assert (= x1141 (and x1314 x1744)))
(assert (= x120 (and x1641 x2176)))
(assert (x1748 x1130))
(assert (x1748 x2277))
(assert (= x2087 (x394 (x72 32 x2087))))
(assert (< 10000 (x66 64 x1631 x138)))
(assert (x1748 x1760))
(assert (x1748 x2145))
(assert (x1748 x1102))
(assert (= (or x640 x913) x2071))
(assert (x1748 x573))
(assert (x1748 x1587))
(assert (x1748 x1125))
(assert (= (x394 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x2205))
(assert (= x117 (=> (and (= x75 (x2134 (+ x1215 x1849))) (= (> x1923 0) x2173) (= (x1776 x1020) x1923)) (and (=> (not x2173) x470) (=> (and (= (> x1923 32) x1583) x2173) (and (=> (and (= (> x1923 64) x1230) x1583) (and (=> (and (= (> x1923 96) x2327) x1230) (and (=> x2327 x61) (=> (not x2327) x470))) (=> (not x1230) x470))) (=> (not x1583) x470)))))))
(assert (x1748 x888))
(assert (< (x72 32 x2128) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8 x2074))
(assert (= (=> (and (= x1034 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1368)) (<= 1 x1034) (= (* x1619 2) x720) (= x1855 (x410 x1628 x2291)) (= (x2134 (+ x720 x1855)) x1844) (= x2291 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1034)) (= x1040 (ite (<= x1855 1) x1844 (x1136 x1855 x720))) (= x1368 (* 8 x1619))) x482) x517))
(assert (< 10000 (x72 32 x54)))
(assert (= x181 (or (and (not x113) x1508) x1601)))
(assert (= (or x579 x101) x1916))
(assert (x2024 x165))
(assert (x1748 x940))
(assert (= (x2223 x2073) (x2223 (+ x2073 1))))
(assert (= x1708 (=> (and (= x1473 (x2134 (+ x861 96))) (= x331 (x2134 (+ x613 96))) (= (not (< 128 x1701)) x1629) (= (x1723 x331) x1751)) (and x77 x1629))))
(assert (= (x72 x242 x1643) (x2223 (x72 x242 x1643))))
(assert (x8 x1228))
(assert (x1748 x2267))
(assert (x1748 x433))
(assert (x1748 x2318))
(assert (=> (>= 10000 x360) (= 0 (x2223 x360))))
(assert (> (x1377 0) 10000))
(assert (=> (>= 10000 x1720) (= 0 (x2223 x1720))))
(assert (=> (>= 10000 x850) (= 0 (x2223 x850))))
(assert (= (and x19 x1747) x1384))
(assert (< 10000 (x66 x1758 x830 x1900)))
(assert (not (x301 (x66 x242 x73 x1791))))
(assert (= x292 (x787 (x2105 x897 x131 x292 x1830 x1718 x2344))))
(assert (=> (<= x1158 10000) (= 0 (x2223 x1158))))
(assert (not (x301 (x671 x1758 x348 x1415 x1779))))
(assert (x1149 x1450))
(assert (x727 x165))
(assert (x1748 x1565))
(assert (x1748 x593))
(assert (x1748 x271))
(assert (= x1605 (and x1641 (not x2176))))
(assert (=> (<= x1724 10000) (= 0 (x2223 x1724))))
(assert (= (x1193 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)) x337))
(assert (x1748 x421))
(assert (x1748 x1761))
(assert (=> (<= x728 10000) (= (x2223 x728) 0)))
(assert (= (x2110 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113)) x1119))
(assert (= (and x251 x1153) x710))
(assert (= (x787 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285)) x71))
(assert (= (x2223 (+ x1042 x918)) (x2223 x1042)))
(assert (x1748 x1638))
(assert (= (and x367 (not x487)) x325))
(assert (x1748 x1902))
(assert (=> (>= 10000 x1116) (= 0 (x2223 x1116))))
(assert (x1748 x1560))
(assert (x1748 x2269))
(assert (= x73 (x394 (x66 x242 x73 x1791))))
(assert (= x1933 (and (not x1806) x882)))
(assert (=> (<= x721 10000) (= 0 (x2223 x721))))
(assert (= x698 (and x1696 (not x1077))))
(assert (= (and x691 x982) x109))
(assert (x1748 x1065))
(assert (= x133 (and x2005 (not x1291))))
(assert (x1748 x559))
(assert (= x1983 (x2216 (x2105 x1983 x1132 x857 x2321 x729 x1125))))
(assert (x1748 x195))
(assert (= x438 (=> (and (= x965 (x890 (- x1348 x372))) (= (x2134 (+ x1031 32)) x2097) (= x613 (x2134 (+ x569 32))) (= (< 0 x1701) x251) (= (x2134 (+ x1348 32)) x861) (= x1701 (x1917 x569))) (and (=> (and (and (= (> x1701 32) x2013) (= x1367 (x1872 x613))) x251) (and (=> (not x2013) x77) (=> (and (and (= x1112 (> x1701 64)) (= x342 (x1146 x354)) (= x354 (x2134 (+ x613 32))) (= x1454 (x2134 (+ 32 x861)))) x2013) (and (=> (and (and (= x256 (x2134 (+ 64 x613))) (= x1951 (> x1701 96)) (= x1128 (x221 x256)) (= (x2134 (+ x861 64)) x1221)) x1112) (and (=> (not x1951) x77) (=> x1951 x1708))) (=> (not x1112) x77))))) (=> (not x251) x77)))))
(assert (= x1481 x1376))
(assert (= x1160 (and x2080 x2327)))
(assert (x1748 x535))
(assert (= (and (not x1266) x2271) x570))
(assert (x552 x2074))
(assert (> (x72 32 x1509) 10000))
(assert (= 64 (x2216 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1))))
(assert (= x2274 (x1423 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (x1748 x1664))
(assert (= (and x1383 (not x481)) x1816))
(assert (x1748 x1628))
(assert (x1748 x2288))
(assert (> (x2105 x1983 x1132 x857 x2321 x729 x1125) 10000))
(assert (=> (>= 10000 x1827) (= 0 (x2223 x1827))))
(assert (=> (<= x2290 10000) (= 0 (x2223 x2290))))
(assert (x1748 x2168))
(assert (= x224 (x2299 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (x1748 x250))
(assert (x1748 x1980))
(assert (= (x394 (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113)) x2267))
(assert (= (x2223 (x1007 x1758 x1761 x2340 x352 x617)) (x1007 x1758 x1761 x2340 x352 x617)))
(assert (x1748 x443))
(assert (x1748 x508))
(assert (= 64 (x2216 (x66 64 x1139 19))))
(assert (=> (>= 10000 x1843) (= (x2223 x1843) 0)))
(assert (x1748 x2021))
(assert (= (=> (and (= x874 (x890 (- x1860 (mod (ite (> 32 x790) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (or (= 1 x874) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x874)) (= x790 (ite (> x1860 0) x1717 (x410 127 x1717))) (= x1152 (x143 x1745)) (= (> x790 31) x2202) (= (+ 1 x358) x54) (<= x1152 18446744073709551615) (= x1860 (x410 1 x621)) (= x1717 (div x621 2)) (= (x1420 x54) x621)) (and (=> (not x2202) x606) (=> (and x2202 (and (= x5 (+ x1773 x1105)) (= (+ x1902 x1105) x2114) (= x1902 (div (+ 31 x1152) 32)) (= (div (+ 31 x790) 32) x1773) (= x253 (ite (< x1152 32) x1105 x2114)) (= x745 (> x5 x253)) (= x1105 (x72 32 x54)))) (and (=> (not x745) x1610) (=> x745 x205))))) x482))
(assert (x1748 x802))
(assert (x1748 x725))
(assert (x1748 x44))
(assert (x1748 x973))
(assert (= x1418 (=> (and (= x615 (x2134 (+ 32 x1045))) (= (x1978 x1745) x1123) (= (x2134 (+ x1745 32)) x1295) (= x815 (x2134 (+ x695 32))) (= (x890 (- x1045 x53)) x1839) (= (> x1123 0) x837)) (and (=> (not x837) x2260) (=> (and (and (= x1453 (> x1123 32)) (= x968 (x445 x1295))) x837) (and (=> (not x1453) x2260) (=> (and (and (= (x2134 (+ x1295 32)) x1346) (= x1157 (> x1123 64)) (= x704 (x2134 (+ x615 32))) (= x2012 (x994 x1346))) x1453) (and (=> (and (and (= x74 (x1914 x1540)) (= (< 96 x1123) x1704) (= x1540 (x2134 (+ x1295 64))) (= (x2134 (+ 64 x615)) x347)) x1157) (and (=> x1704 x1197) (=> (not x1704) x2260))) (=> (not x1157) x2260)))))))))
(assert (x1748 x71))
(assert (< (x66 64 x1303 17) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x720))
(assert (> (x671 x897 x847 x1158 x1946) 10000))
(assert (< 10000 (x72 x1983 x16)))
(assert (= x758 (x1423 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (x1748 x1984))
(assert (x1748 x1150))
(assert (= (x1193 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)) x160))
(assert (x1748 x2247))
(assert (x1748 x1931))
(assert (= (x2223 x600) (x2223 (+ 1 x600))))
(assert (x1748 x769))
(assert (=> (>= 10000 x596) (= 0 (x2223 x596))))
(assert (x1748 x425))
(assert (< 10000 (x72 32 x2073)))
(assert (x1748 x1897))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)))
(assert (> (x1007 x242 x559 x1944 x1491 x543) 10000))
(assert (= (x2223 115792089237316195423570985008687907853269984665640564039457584007913129639808) 0))
(assert (=> (<= x1414 10000) (= (x2223 x1414) 0)))
(assert (> (x72 32 x1360) 10000))
(assert (=> (>= 10000 x1065) (= 0 (x2223 x1065))))
(assert (x727 x1619))
(assert (x1748 x446))
(assert (= x123 (x787 (x1072 x2174 x558 x123 x1363 x46 x258 x2295))))
(assert (x1748 x739))
(assert (= (or x1506 x1955) x1696))
(assert (x1748 x1318))
(assert (x1748 x397))
(assert (x1748 x910))
(assert (=> (>= 10000 x544) (= 0 (x2223 x544))))
(assert (x552 x500))
(assert (=> (<= x2049 10000) (= (x2223 x2049) 0)))
(assert (x1748 x1411))
(assert (x1748 x2316))
(assert (x1748 x1425))
(assert (=> (<= x752 10000) (= (x2223 x752) 0)))
(assert (= x929 (x394 (x72 32 x929))))
(assert (x1748 x2122))
(assert (x1748 x1371))
(assert (= (or x1799 x1179) x651))
(assert (= x546 (x1193 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196))))
(assert (x1748 x1300))
(assert (x108 x720))
(assert (= 0 (x2223 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x1748 x2077))
(assert (x1748 x125))
(assert (= (or x1472 x1511 x1920) x2104))
(assert (x1748 x467))
(assert (= x2008 (or x930 x1916 x1589)))
(assert (= (and (not x1899) x1546) x2331))
(assert (= (and x1112 x336) x647))
(assert (x1748 x2257))
(assert (= x1995 (and x19 (not x1747))))
(assert (= (and x1313 (not x1534)) x992))
(assert (x1748 x1974))
(assert (=> (<= x1836 10000) (= (x2223 x1836) 0)))
(assert (= (x2223 x1360) (x2223 (+ x1360 1))))
(assert (= x1512 (x787 (x2105 x2174 x778 x1512 x83 x2337 x436))))
(assert (x1748 x1691))
(assert (= (x671 x1724 x1720 x27 x1238) (x2223 (x671 x1724 x1720 x27 x1238))))
(assert (= (x2223 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)) (x1072 x1983 x1988 x534 x544 x1507 x728 x279)))
(assert (x1748 x272))
(assert (x1748 x1275))
(assert (x1748 x2172))
(assert (x1748 x2350))
(assert (= (x2110 (x2105 x2174 x778 x1512 x83 x2337 x436)) x2337))
(assert (x978 x44 x220))
(assert (= (x2299 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x327))
(assert (= (x394 (x2105 x1315 x560 x2290 x732 x707 x1594)) x560))
(assert (= (x2223 (+ x37 1)) (x2223 x37)))
(assert (x1748 x615))
(assert (x1748 x2136))
(assert (x1748 x145))
(assert (x1748 x2125))
(assert (= (x2223 (+ x1163 1)) (x2223 x1163)))
(assert (< 10000 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285)))
(assert (x1748 x240))
(assert (x1748 x1554))
(assert (x1748 x2342))
(assert (x1748 x1793))
(assert (x1748 x1594))
(assert (= x1827 (x394 (x1007 x897 x1827 x1778 x1819 x419))))
(assert (= x623 (or (and (not x2173) x1862) (and x1613 (not x1230)) (and x2080 (not x2327)) x1160 (and (not x1583) x574))))
(assert (x8 x2308))
(assert (and (= 68719476736 (x1067 2 36)) (= 11150372599265311570767859136324180752990208 (x1067 2 143)) (= (x1067 2 53) 9007199254740992) (= (x1067 2 10) 1024) (= 13164036458569648337239753460458804039861886925068638906788872192 (x1067 2 213)) (= (x1067 2 8) 256) (= (x1067 2 172) 5986310706507378352962293074805895248510699696029696) (= (x1067 2 35) 34359738368) (= (x1067 2 200) 1606938044258990275541962092341162602522202993782792835301376) (= (x1067 2 124) 21267647932558653966460912964485513216) (= (x1067 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x1067 2 141) 2787593149816327892691964784081045188247552) (= (x1067 2 67) 147573952589676412928) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1067 2 214)) (= (x1067 2 89) 618970019642690137449562112) (= (x1067 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= (x1067 2 158) 365375409332725729550921208179070754913983135744) (= (x1067 2 153) 11417981541647679048466287755595961091061972992) (= 77371252455336267181195264 (x1067 2 86)) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1067 2 226)) (= 536870912 (x1067 2 29)) (= (x1067 2 118) 332306998946228968225951765070086144) (= 9444732965739290427392 (x1067 2 73)) (= (x1067 2 58) 288230376151711744) (= (x1067 2 15) 32768) (= (x1067 2 162) 5846006549323611672814739330865132078623730171904) (= 803469022129495137770981046170581301261101496891396417650688 (x1067 2 199)) (= (x1067 2 132) 5444517870735015415413993718908291383296) (= (x1067 2 179) 766247770432944429179173513575154591809369561091801088) (= (x1067 2 113) 10384593717069655257060992658440192) (= 1180591620717411303424 (x1067 2 70)) (= 281474976710656 (x1067 2 48)) (= (x1067 2 168) 374144419156711147060143317175368453031918731001856) (= 664613997892457936451903530140172288 (x1067 2 119)) (= 512 (x1067 2 9)) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1067 2 237)) (= 196159429230833773869868419475239575503198607639501078528 (x1067 2 187)) (= 158456325028528675187087900672 (x1067 2 97)) (= 696898287454081973172991196020261297061888 (x1067 2 139)) (= (x1067 2 166) 93536104789177786765035829293842113257979682750464) (= 128 (x1067 2 7)) (= (x1067 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x1067 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 9903520314283042199192993792 (x1067 2 93)) (= 2361183241434822606848 (x1067 2 71)) (= (x1067 2 81) 2417851639229258349412352) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x1067 2 254)) (= (x1067 2 79) 604462909807314587353088) (= (x1067 2 87) 154742504910672534362390528) (= (x1067 2 130) 1361129467683753853853498429727072845824) (= 324518553658426726783156020576256 (x1067 2 108)) (= 40564819207303340847894502572032 (x1067 2 105)) (= (x1067 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x1067 2 28) 268435456) (= (x1067 2 39) 549755813888) (= (x1067 2 20) 1048576) (= (x1067 2 148) 356811923176489970264571492362373784095686656) (= (x1067 2 14) 16384) (= 174224571863520493293247799005065324265472 (x1067 2 137)) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1067 2 255)) (= (x1067 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= (x1067 2 216) 105312291668557186697918027683670432318895095400549111254310977536) (= (x1067 2 160) 1461501637330902918203684832716283019655932542976) (= 713623846352979940529142984724747568191373312 (x1067 2 149)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1067 2 228)) (= 784637716923335095479473677900958302012794430558004314112 (x1067 2 189)) (= (x1067 2 114) 20769187434139310514121985316880384) (= 38685626227668133590597632 (x1067 2 85)) (= 10889035741470030830827987437816582766592 (x1067 2 133)) (= (x1067 2 52) 4503599627370496) (= (x1067 2 82) 4835703278458516698824704) (= 187072209578355573530071658587684226515959365500928 (x1067 2 167)) (= (x1067 2 122) 5316911983139663491615228241121378304) (= 83076749736557242056487941267521536 (x1067 2 116)) (= (x1067 2 68) 295147905179352825856) (= (x1067 2 173) 11972621413014756705924586149611790497021399392059392) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x1067 2 245)) (= (x1067 2 177) 191561942608236107294793378393788647952342390272950272) (= 1329227995784915872903807060280344576 (x1067 2 120)) (= 1427247692705959881058285969449495136382746624 (x1067 2 150)) (= (x1067 2 26) 67108864) (= 4194304 (x1067 2 22)) (= 2 (x1067 2 1)) (= (x1067 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x1067 2 123) 10633823966279326983230456482242756608) (= (x1067 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1067 2 224)) (= (x1067 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= (x1067 2 43) 8796093022208) (= (x1067 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x1067 2 77) 151115727451828646838272) (= (x1067 2 40) 1099511627776) (= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1067 2 256)) (= (x1067 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= 18889465931478580854784 (x1067 2 74)) (= (x1067 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1067 2 240)) (= (x1067 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= 95780971304118053647396689196894323976171195136475136 (x1067 2 176)) (= (x1067 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= (x1067 2 117) 166153499473114484112975882535043072) (= (x1067 2 69) 590295810358705651712) (= (x1067 2 165) 46768052394588893382517914646921056628989841375232) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1067 2 252)) (= 562949953421312 (x1067 2 49)) (= (x1067 2 13) 8192) (= 6129982163463555433433388108601236734474956488734408704 (x1067 2 182)) (= 72057594037927936 (x1067 2 56)) (= 680564733841876926926749214863536422912 (x1067 2 129)) (= 16777216 (x1067 2 24)) (= 1208925819614629174706176 (x1067 2 80)) (= 65536 (x1067 2 16)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x1067 2 246)) (= 5070602400912917605986812821504 (x1067 2 102)) (= (x1067 2 104) 20282409603651670423947251286016) (= 2993155353253689176481146537402947624255349848014848 (x1067 2 171)) (= 79228162514264337593543950336 (x1067 2 96)) (= 11692013098647223345629478661730264157247460343808 (x1067 2 163)) (= 2722258935367507707706996859454145691648 (x1067 2 131)) (= 22835963083295358096932575511191922182123945984 (x1067 2 154)) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1067 2 242)) (= (x1067 2 37) 137438953472) (= 1152921504606846976 (x1067 2 60)) (= 6277101735386680763835789423207666416102355444464034512896 (x1067 2 192)) (= 4951760157141521099596496896 (x1067 2 92)) (= (x1067 2 142) 5575186299632655785383929568162090376495104) (= (x1067 2 27) 134217728) (= (x1067 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= 226156424291633194186662080095093570025917938800079226639565593765455331328 (x1067 2 247)) (= 21778071482940061661655974875633165533184 (x1067 2 134)) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1067 2 223)) (= 6739986666787659948666753771754907668409286105635143120275902562304 (x1067 2 222)) (= 1532495540865888858358347027150309183618739122183602176 (x1067 2 180)) (= (x1067 2 19) 524288) (= 4294967296 (x1067 2 32)) (= (x1067 2 144) 22300745198530623141535718272648361505980416) (= (x1067 2 191) 3138550867693340381917894711603833208051177722232017256448) (= (x1067 2 121) 2658455991569831745807614120560689152) (= (x1067 2 51) 2251799813685248) (= (x1067 2 0) 1) (= (x1067 2 75) 37778931862957161709568) (= 748288838313422294120286634350736906063837462003712 (x1067 2 169)) (= (x1067 2 78) 302231454903657293676544) (= (x1067 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= 274877906944 (x1067 2 38)) (= (x1067 2 12) 4096) (= (x1067 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1067 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= (x1067 2 170) 1496577676626844588240573268701473812127674924007424) (= (x1067 2 61) 2305843009213693952) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1067 2 234)) (= (x1067 2 147) 178405961588244985132285746181186892047843328) (= (x1067 2 145) 44601490397061246283071436545296723011960832) (= (x1067 2 63) 9223372036854775808) (= 5708990770823839524233143877797980545530986496 (x1067 2 152)) (= 6582018229284824168619876730229402019930943462534319453394436096 (x1067 2 212)) (= (x1067 2 17) 131072) (= 35184372088832 (x1067 2 45)) (= (x1067 2 235) 55213970774324510299478046898216203619608871777363092441300193790394368) (= (x1067 2 196) 100433627766186892221372630771322662657637687111424552206336) (= (x1067 2 140) 1393796574908163946345982392040522594123776) (= 392318858461667547739736838950479151006397215279002157056 (x1067 2 188)) (= (x1067 2 103) 10141204801825835211973625643008) (= (x1067 2 178) 383123885216472214589586756787577295904684780545900544) (= (x1067 2 11) 2048) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1067 2 233)) (= 32 (x1067 2 5)) (= 12554203470773361527671578846415332832204710888928069025792 (x1067 2 193)) (= (x1067 2 156) 91343852333181432387730302044767688728495783936) (= (x1067 2 84) 19342813113834066795298816) (= 401734511064747568885490523085290650630550748445698208825344 (x1067 2 198)) (= (x1067 2 100) 1267650600228229401496703205376) (= (x1067 2 91) 2475880078570760549798248448) (= (x1067 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= 170141183460469231731687303715884105728 (x1067 2 127)) (= 1298074214633706907132624082305024 (x1067 2 110)) (= 89202980794122492566142873090593446023921664 (x1067 2 146)) (= (x1067 2 197) 200867255532373784442745261542645325315275374222849104412672) (= 1237940039285380274899124224 (x1067 2 90)) (= 2147483648 (x1067 2 31)) (= (x1067 2 47) 140737488355328) (= 81129638414606681695789005144064 (x1067 2 106)) (= (x1067 2 41) 2199023255552) (= 23945242826029513411849172299223580994042798784118784 (x1067 2 174)) (= (x1067 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= 98079714615416886934934209737619787751599303819750539264 (x1067 2 186)) (= 2097152 (x1067 2 21)) (= (x1067 2 107) 162259276829213363391578010288128) (= (x1067 2 66) 73786976294838206464) (= 41538374868278621028243970633760768 (x1067 2 115)) (= (x1067 2 46) 70368744177664) (= 348449143727040986586495598010130648530944 (x1067 2 138)) (= (x1067 2 54) 18014398509481984) (= (x1067 2 59) 576460752303423488) (= 309485009821345068724781056 (x1067 2 88)) (= 2923003274661805836407369665432566039311865085952 (x1067 2 161)) (= 4722366482869645213696 (x1067 2 72)) (= 8 (x1067 2 3)) (= (x1067 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x1067 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= (x1067 2 99) 633825300114114700748351602688) (= (x1067 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 1073741824 (x1067 2 30)) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x1067 2 227)) (= 33554432 (x1067 2 25)) (= 47890485652059026823698344598447161988085597568237568 (x1067 2 175)) (= 340282366920938463463374607431768211456 (x1067 2 128)) (= 9671406556917033397649408 (x1067 2 83)) (= (x1067 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= (x1067 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x1067 2 126) 85070591730234615865843651857942052864) (= 24519928653854221733733552434404946937899825954937634816 (x1067 2 184)) (= 36028797018963968 (x1067 2 55)) (= 3369993333393829974333376885877453834204643052817571560137951281152 (x1067 2 221)) (= 4611686018427387904 (x1067 2 62)) (= (x1067 2 164) 23384026197294446691258957323460528314494920687616) (= 316912650057057350374175801344 (x1067 2 98)) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1067 2 231)) (= (x1067 2 208) 411376139330301510538742295639337626245683966408394965837152256) (= (x1067 2 18) 262144) (= (x1067 2 215) 52656145834278593348959013841835216159447547700274555627155488768) (= (x1067 2 151) 2854495385411919762116571938898990272765493248) (= (x1067 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x1067 2 159) 730750818665451459101842416358141509827966271488) (= (x1067 2 209) 822752278660603021077484591278675252491367932816789931674304512) (= (x1067 2 76) 75557863725914323419136) (= 17592186044416 (x1067 2 44)) (= (x1067 2 6) 64) (= 51422017416287688817342786954917203280710495801049370729644032 (x1067 2 205)) (= (x1067 2 207) 205688069665150755269371147819668813122841983204197482918576128) (= 45671926166590716193865151022383844364247891968 (x1067 2 155)) (= 43556142965880123323311949751266331066368 (x1067 2 135)) (= (x1067 2 94) 19807040628566084398385987584) (= (x1067 2 111) 2596148429267413814265248164610048) (= 2535301200456458802993406410752 (x1067 2 101)) (= 87112285931760246646623899502532662132736 (x1067 2 136)) (= 3533694129556768659166595001485837031654967793751237916243212402585239552 (x1067 2 241)) (= 144115188075855872 (x1067 2 57)) (= (x1067 2 42) 4398046511104) (= 904625697166532776746648320380374280103671755200316906558262375061821325312 (x1067 2 249)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1067 2 210)) (= (x1067 2 65) 36893488147419103232) (= 39614081257132168796771975168 (x1067 2 95)) (= (x1067 2 50) 1125899906842624) (= (x1067 2 33) 8589934592) (= (x1067 2 4) 16) (= 3213876088517980551083924184682325205044405987565585670602752 (x1067 2 201)) (= (x1067 2 23) 8388608) (= 3064991081731777716716694054300618367237478244367204352 (x1067 2 181)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1067 2 248)) (= (x1067 2 125) 42535295865117307932921825928971026432) (= (x1067 2 64) 18446744073709551616) (= 649037107316853453566312041152512 (x1067 2 109)) (= (x1067 2 2) 4) (= 17179869184 (x1067 2 34)) (= (x1067 2 157) 182687704666362864775460604089535377456991567872) (= 5192296858534827628530496329220096 (x1067 2 112))))
(assert (x301 1086394137))
(assert (x1748 x1878))
(assert (= (x1193 (x2105 x2174 x778 x1512 x83 x2337 x436)) x83))
(assert (= (and (not x1653) x2297) x579))
(assert (x1748 x1741))
(assert (= x382 (and x2193 x975)))
(assert (=> (>= 10000 x1014) (= (x2223 x1014) 0)))
(assert (x1748 x33))
(assert (= x1507 (x2110 (x1072 x1983 x1988 x534 x544 x1507 x728 x279))))
(assert (x1748 x1538))
(assert (= (x2223 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)))
(assert (= (and x244 x2293) x2297))
(assert (x1748 x1159))
(assert (=> (>= 10000 x617) (= 0 (x2223 x617))))
(assert (= x1557 (x787 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001))))
(assert (= (x2223 (+ x929 1)) (x2223 x929)))
(assert (x1748 x965))
(assert (x1748 x1911))
(assert (x1748 x923))
(assert (= (x1193 (x1007 x1724 x1081 x59 x238 x1677)) x238))
(assert (=> (>= 10000 x2344) (= (x2223 x2344) 0)))
(assert (=> (<= x35 10000) (= 0 (x2223 x35))))
(assert (=> (<= x2124 10000) (= (x2223 x2124) 0)))
(assert (x1748 x1542))
(assert (= (x394 (x2105 x2174 x778 x1512 x83 x2337 x436)) x778))
(assert (not (x301 (x2105 x1983 x1132 x857 x2321 x729 x1125))))
(assert (not (x301 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752))))
(assert (=> (>= 10000 x1929) (= 0 (x2223 x1929))))
(assert (< 10000 (x72 x1724 x1820)))
(assert (= (x2299 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)) x1832))
(assert (= x1633 (and x882 x1806)))
(assert (= x1001 (and x1019 x866)))
(assert (=> (<= x1826 10000) (= (x2223 x1826) 0)))
(assert (x1748 x1470))
(assert (x1748 x935))
(assert (x1748 x1109))
(assert (= (x2223 x1200) (x2223 (+ 1 x1200))))
(assert (=> (>= 10000 x2295) (= (x2223 x2295) 0)))
(assert (x1748 x1519))
(assert (x1748 x857))
(assert (= (x2216 (x72 32 x2087)) 32))
(assert (= (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497) (x2223 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497))))
(assert (< 10000 (x2105 x2174 x778 x1512 x83 x2337 x436)))
(assert (= (x1193 (x1007 x897 x1827 x1778 x1819 x419)) x1819))
(assert (x1748 x246))
(assert (x1748 x211))
(assert (= x2051 (x787 (x671 x242 x980 x2051 x1086))))
(assert (= x2163 (x394 (x66 x2174 x2163 x2208))))
(assert (= (and x2158 x656) x1210))
(assert (x1748 x2137))
(assert (x1748 x729))
(assert (x1748 x337))
(assert (x1748 x2076))
(assert (= (or x1805 x1343) x1336))
(assert (x1748 x1996))
(assert (> (x2105 x1116 x2205 x893 x2146 x1842 x1994) 10000))
(assert (not (x301 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327))))
(assert (x1748 x1215))
(assert (x1748 x2363))
(assert (= (x2216 (x72 32 x1360)) 32))
(assert (= (x2110 (x1007 x1983 x1669 x321 x959 x25)) x25))
(assert (=> (>= 10000 x98) (= (x2223 x98) 0)))
(assert (x8 x1782))
(assert (x1748 x689))
(assert (= (x394 (x1007 x1983 x1669 x321 x959 x25)) x1669))
(assert (=> (>= 10000 x160) (= (x2223 x160) 0)))
(assert (x1748 x1772))
(assert (x1748 x1256))
(assert (x1748 x933))
(assert (= (x2110 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) x1263))
(assert (= (x787 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263)) x1604))
(assert (< 10000 (x72 32 x2138)))
(assert (= (ite (> 256 x1229) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x1229)) 0) (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1229)))
(assert (not (x301 (x66 x1315 x2333 x1322))))
(assert (x1748 x1770))
(assert (= x1919 (=> (and (= x1948 (not (> x1553 x1281))) (= x1281 (+ 1 x1794))) (and x1654 x1948))))
(assert (= (and (not x1477) x1035) x620))
(assert (= (x2216 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)) x1724))
(assert (= (and (not x2127) x1576) x851))
(assert (= (x2216 (x1072 x1315 x35 x757 x1691 x47 x2274 x276)) x1315))
(assert (= x228 (x394 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285))))
(assert (x1748 x390))
(assert (x1748 x1566))
(assert (> (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721) 10000))
(assert (x1748 x51))
(assert (=> (<= x1315 10000) (= (x2223 x1315) 0)))
(assert (> (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263) 10000))
(assert (= (=> (and (= x1803 (x1174 x1020)) (= x29 (+ 1 x54)) (= (x2347 x1318) x94) (= x1318 (x2134 (+ x1139 1))) (= (x2347 x1318) x2188) (= (x2134 (+ x267 64)) x2186) (= x1575 (+ x29 1)) (= (x2134 (+ x2186 32)) x676) (= x1483 (x2134 (+ 32 x1020))) (= (> x1803 0) x2228)) (and (=> (and x2228 (and (= (x1409 x1483) x1371) (= x2193 (< 32 x1803)))) (and (=> (not x2193) x887) (=> (and (and (= (x422 x1108) x1542) (= x2023 (> x1803 64)) (= x1108 (x2134 (+ x1483 32))) (= (x2134 (+ x676 32)) x444)) x2193) (and (=> (and x2023 (and (= x1925 (x2134 (+ 64 x1483))) (= (x2134 (+ 64 x676)) x105) (= (x1305 x1925) x185) (= x909 (> x1803 96)))) (and (=> x909 x2250) (=> (not x909) x887))) (=> (not x2023) x887))))) (=> (not x2228) x887))) x1615))
(assert (= (and x1190 (not x1627)) x2345))
(assert (= (and x2301 (not x1869)) x1746))
(assert (x1748 x97))
(assert (x1748 x912))
(assert (x1748 x861))
(assert (=> (<= x16 10000) (= (x2223 x16) 0)))
(assert (x1748 x1745))
(assert (x1748 x898))
(assert (x1748 x242))
(assert (= (x2216 (x1007 x897 x1827 x1778 x1819 x419)) x897))
(assert (x1748 x1670))
(assert (x1748 x1645))
(assert (x1748 x2146))
(assert (x1748 x448))
(assert (x1748 x865))
(assert (x1748 x854))
(assert (not (x301 (x66 64 x157 x2280))))
(assert (x1748 x1913))
(assert (x1748 x2227))
(assert (= (x2223 x298) (x2223 (+ x298 1))))
(assert (= (x2216 (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285)) x897))
(assert (< 10000 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)))
(assert (x1748 x1164))
(assert (x1748 x453))
(assert (= (or x1210 x962) x1956))
(assert (=> (>= 10000 x1132) (= 0 (x2223 x1132))))
(assert (= (x2223 x1877) (x2223 (+ 1 x1877))))
(assert (x978 x953 x917))
(assert (= 0 (x2223 1086394137)))
(assert (x1748 x1240))
(assert (=> (>= 10000 x1263) (= (x2223 x1263) 0)))
(assert (x1748 x1537))
(assert (= x867 (and x1236 (not x1052))))
(assert (= (x2110 (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327)) x360))
(assert (= x61 (=> (= x1365 (not (> x1923 128))) (and x1365 x470))))
(assert (x1748 x1864))
(assert (= (=> (and (= x2136 (x2134 (+ x549 96))) (= (x648 x2136) x1573) (= (not (< 128 x1074)) x1572) (= x776 (x2134 (+ 96 x1741)))) (and x1572 x1276)) x655))
(assert (=> (>= 10000 x1462) (= 0 (x2223 x1462))))
(assert (x1748 x2198))
(assert (x552 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (< 10000 (x72 32 x358)))
(assert (x1748 x300))
(assert (x1748 x1328))
(assert (= (x2223 (x72 x1758 x178)) (x72 x1758 x178)))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x72 32 x1592)))
(assert (=> (>= 10000 x2284) (= 0 (x2223 x2284))))
(assert (=> (<= x980 10000) (= (x2223 x980) 0)))
(assert (= (=> (and (= (not (> x1357 32)) x1559) (= x1687 (x2134 (+ 32 x569))) (= (+ x1877 1) x1033) (= (x323 x1687) x1218)) (and x1559 (=> (and (= x894 64) (= x1033 x1110)) x1262))) x2262))
(assert (= (x671 x1983 x2342 x1009 x2350) (x2223 (x671 x1983 x2342 x1009 x2350))))
(assert (=> (>= 10000 x1980) (= 0 (x2223 x1980))))
(assert (= x1037 (or x967 x575)))
(assert (x1748 x460))
(assert (x1748 x59))
(assert (=> (>= 10000 x2051) (= 0 (x2223 x2051))))
(assert (x1748 x1263))
(assert (> (x2105 x1315 x560 x2290 x732 x707 x1594) 10000))
(assert (= (and x260 (not x1437)) x456))
(assert (x1748 x1593))
(assert (x1748 x637))
(assert (= x2010 (=> (and (= (x2134 (+ x453 x1359)) x1121) (= (>= 224 x2174) x2088) (= x2174 (x890 (- x897 32))) (= (x890 (- x1940 x453)) x897) (= (x2134 (+ 32 x626)) x1940) (= (x2134 (+ x453 x1359)) x626)) (and x2088 (=> (and (= x425 (x2134 (+ x453 64))) (= x2040 (x2134 (+ x453 32))) (= (x66 x2174 x2163 x2208) x1598) (= x1593 (x1959 x1851)) (= (x1959 x1905) x2337) (= x1341 (x2134 (+ 128 x453))) (= (x1959 x2356) x97) (= (x1959 x2045) x1363) (= (x1959 x453) x2163) (= (x1959 x453) x778) (= x2230 (x2134 (+ 96 x453))) (= x1017 (x1959 x2040)) (= x1809 (x2134 (+ 32 x453))) (= x1350 (x1959 x1442)) (= x2266 (x2134 (+ 192 x453))) (= (x2134 (+ 96 x453)) x760) (= (x2134 (+ 32 x453)) x1851) (= x658 (x2134 (+ 160 x453))) (= x1474 (x2134 (+ 32 x453))) (= (x1959 x453) x1344) (= x987 (x2134 (+ 96 x453))) (= x83 (x1959 x425)) (= (x671 x2174 x2041 x1593 x1350) x957) (= (x2134 (+ x453 32)) x195) (= x558 (x1959 x453)) (= x721 (x1959 x2266)) (= (x1959 x760) x223) (= x985 (x2134 (+ 160 x453))) (= x2208 (x1959 x1809)) (= (>= 224 x897) x1243) (= (x1959 x2230) x46) (= (x1959 x453) x1274) (= x991 (x2105 x2174 x778 x1512 x83 x2337 x436)) (= (x2134 (+ x453 96)) x1905) (= x333 (x2134 (+ x453 128))) (= x2130 (x1377 0)) (= (x1072 x2174 x558 x123 x1363 x46 x258 x2295) x797) (= x1442 (x2134 (+ 64 x453))) (= (x2134 (+ x453 128)) x1548) (= x2053 (ite (= 0 x2174) x2130 (ite (<= x2174 32) x1523 (ite (>= 64 x2174) x1598 (ite (>= 96 x2174) x957 (ite (<= x2174 128) x1823 (ite (<= x2174 160) x991 (ite (<= x2174 192) x797 (ite (>= 224 x2174) x24 x125))))))))) (= x436 (x1959 x1341)) (= (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721) x24) (= x1399 (x1959 x453)) (= x2041 (x1959 x453)) (= (x2134 (+ 64 x453)) x2234) (= (x1959 x987) x2044) (= x450 (x2134 (+ x453 32))) (= x1011 (x1959 x658)) (= (x1959 x333) x483) (= (x2134 (+ x453 64)) x2356) (= (x1959 x2234) x1564) (= (x1959 x985) x2295) (= x258 (x1959 x1548)) (= x1823 (x1007 x2174 x1344 x593 x97 x2044)) (= x1512 (x1959 x450)) (= x2045 (x2134 (+ x453 64))) (= (x1959 x1474) x123) (= x593 (x1959 x195)) (= (x72 x2174 x1399) x1523)) (and (=> (and (= (x1959 x507) x1819) (= x135 (x2134 (+ 128 x453))) (= (x1959 x548) x285) (= x832 (x2134 (+ x453 32))) (= (x2134 (+ 128 x372)) x954) (= (x2134 (+ x453 4)) x372) (= (x1959 x453) x605) (= x228 (x1959 x453)) (= x548 (x2134 (+ x453 192))) (= (x1959 x1878) x1778) (= x2113 (x1959 x1273)) (= x1021 (x1959 x1513)) (= x2305 (x2134 (+ x453 96))) (= (x1959 x771) x1910) (= x1412 (x1007 x897 x1827 x1778 x1819 x419)) (= (x66 x897 x13 x1976) x1522) (= (x1959 x111) x2049) (= 0 x467) (= (x2134 (+ 32 x954)) x1444) (= (x2134 (+ 32 x453)) x1682) (= (x2134 (+ 32 x453)) x1878) (= x71 (x1959 x1309)) (= (x1959 x1682) x292) (= x847 (x1959 x453)) (= x1946 (x1959 x2115)) (= (x1959 x755) x1830) (= (x2134 (+ 96 x453)) x209) (= (x1377 0) x1426) (= x507 (x2134 (+ 64 x453))) (= (x702 x1889) x423) (= (x2134 (+ 160 x453)) x1273) (= (x1959 x488) x419) (= (x1959 x209) x1119) (= (x1959 x453) x131) (= (x1959 x1425) x1861) (= (x2134 (+ x453 128)) x111) (= (x2134 (+ 128 x453)) x1513) (= (x2134 (+ 160 x453)) x771) (= (x2134 (+ x453 96)) x488) (= x955 (x2105 x897 x131 x292 x1830 x1718 x2344)) (= (x2134 (+ 64 x453)) x755) (= x1718 (x1959 x2016)) (= x2016 (x2134 (+ x453 96))) (= (x1959 x1821) x1164) (= x503 (x2134 (+ 64 x453))) (= (x1959 x135) x2344) (= (ite (= x897 0) x1426 (ite (<= x897 32) x1788 (ite (>= 64 x897) x1522 (ite (<= x897 96) x1795 (ite (<= x897 128) x1412 (ite (>= 160 x897) x955 (ite (>= 192 x897) x1308 (ite (>= 224 x897) x2335 x854)))))))) x1970) (= x467 (x252 x1970)) (= x1788 (x72 x897 x605)) (= x1867 (x1959 x503)) (= x1309 (x2134 (+ 32 x453))) (= (x1072 x897 x2267 x1861 x1164 x1119 x2049 x2113) x1308) (= x1976 (x1959 x679)) (= x1425 (x2134 (+ 32 x453))) (= (x671 x897 x847 x1158 x1946) x1795) (= (x2134 (+ 64 x453)) x2115) (= (x41 x897 x228 x71 x1867 x1071 x1021 x1910 x285) x2335) (= x2267 (x1959 x453)) (= (x2134 (+ 64 x453)) x1821) (= x13 (x1959 x453)) (= (x2134 (+ x453 32)) x679) (= (> x423 0) x1584) (= x1380 (x2134 (+ x1889 32))) (= (x1959 x832) x1158) (= (x1959 x453) x1827) (= x1071 (x1959 x2305))) (and (=> (not x1584) x2311) (=> (and x1584 (and (= (< 32 x423) x1010) (= x868 (x2162 x1380)))) (and (=> (not x1010) x2311) (=> (and x1010 (and (= (x2134 (+ x1380 32)) x886) (= x377 (x2134 (+ x1444 32))) (= x1162 (x415 x886)) (= x1053 (< 64 x423)))) (and (=> (not x1053) x2311) (=> (and x1053 (and (= x923 (x2134 (+ x1444 64))) (= (x2336 x1257) x55) (= (> x423 96) x818) (= x1257 (x2134 (+ x1380 64))))) (and (=> x818 x687) (=> (not x818) x2311))))))))) x1243))))))
(assert (x1748 x1876))
(assert (= (x1550 (x41 x1724 x541 x1557 x1065 x838 x1191 x224 x2001)) x2001))
(assert (= x2196 (x2299 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196))))
(assert (= x556 (and x1227 x120)))
(assert (= (or x1492 x2331) x939))
(assert (= x1237 (and x1010 x207)))
(assert (= (=> (and (= (not (> x700 128)) x43) (= (x577 x1660) x198) (= (x2134 (+ x403 96)) x1660) (= x956 (x2134 (+ 96 x288)))) (and x43 x2055)) x103))
(assert (x552 x1628))
(assert (x1748 x1177))
(assert (= (x394 (x72 32 x1592)) x1592))
(assert (= x732 (x1193 (x2105 x1315 x560 x2290 x732 x707 x1594))))
(assert (x1748 x1014))
(assert (x1748 x310))
(assert (= x202 (and x651 (not x2202))))
(assert (< (x66 x1315 x2333 x1322) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x864))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x41 x1983 x2286 x781 x160 x1470 x1317 x1478 x1645)))
(assert (= (x2223 (x72 32 x358)) (x72 32 x358)))
(assert (= (x2216 (x1007 x1983 x1669 x321 x959 x25)) x1983))
(assert (= (x394 (x1007 x1116 x1066 x150 x904 x563)) x1066))
(assert (x1748 x486))
(assert (x1748 x1663))
(assert (x1748 x512))
(assert (x1748 x507))
(assert (= x272 (x1423 (x41 x242 x2229 x1604 x1245 x1263 x272 x1581 x2263))))
(assert (x552 x2199))
(assert (x1748 x1905))
(assert (= (=> (and (= (< x1166 x1152) x113) (or (not x113) (and x113 (and (= (x410 31 x1152) x1403) (= (x410 x44 x220) x477) (= (* 8 x1403) x1760) (= (x2134 (+ x1745 x484)) x667) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760)) x220) (= (x143 x667) x44))))) x1400) x1646))
(assert (= (and x564 x685) x1667))
(assert (= (x787 (x66 64 114221746417031484496905892821793293822878436923706878644384133060206014517163 1)) 1))
(assert (=> (>= 10000 x145) (= (x2223 x145) 0)))
(assert (=> (<= x949 10000) (= 0 (x2223 x949))))
(assert (x552 x2254))
(assert (= x1985 (and (not x126) x1459)))
(assert (x1748 x1661))
(assert (x1748 x220))
(assert (x1748 x1882))
(assert (= (x394 (x1072 x2174 x558 x123 x1363 x46 x258 x2295)) x558))
(assert (=> (>= 10000 x2041) (= (x2223 x2041) 0)))
(assert (x1748 x678))
(assert (=> (<= x2340 10000) (= 0 (x2223 x2340))))
(assert (= x486 (x2110 (x41 x1315 x2034 x725 x508 x486 x758 x971 x334))))
(assert (=> (>= 10000 x1478) (= 0 (x2223 x1478))))
(assert (x1748 x928))
(assert (x1748 x1787))
(assert (= x1691 (x1193 (x1072 x1315 x35 x757 x1691 x47 x2274 x276))))
(assert (x1748 x1322))
(assert (= x2368 (=> (and (= (x2134 (+ 96 x639)) x1620) (= x2070 (not (< 128 x804))) (= (x2134 (+ x1411 96)) x1329) (= (x2325 x1329) x1129)) (and x2070 x2121))))
(assert (x1748 x849))
(assert (= x857 (x787 (x2105 x1983 x1132 x857 x2321 x729 x1125))))
(assert (x552 x2083))
(assert (x301 57896044618658097711785492504343953926634992332820282019728792003956564819967))
(assert (x1748 x1265))
(assert (=> (>= 10000 x125) (= (x2223 x125) 0)))
(assert (x1748 x775))
(assert (not (x301 (x72 32 x2128))))
(assert (= x693 x1749))
(assert (x1748 x954))
(assert (= (and x1078 x766) x1260))
(assert (x1748 x1022))
(assert (= 0 (x2223 170141183460469231731687303715884105726)))
(assert (x1748 x516))
(assert (= (and x229 x1737) x763))
(assert (= (and x88 x1888) x1975))
(assert (= (x2216 (x66 64 x1631 x138)) 64))
(assert (x1748 x1003))
(assert (x1748 x752))
(assert (x1748 x531))
(assert (x1748 x81))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1072 x1724 x1678 x1079 x337 x912 x10 x834)))
(assert (x1748 x1161))
(assert (= x752 (x1550 (x41 x1116 x2124 x1414 x1115 x1622 x969 x2304 x752))))
(assert (= (and x1077 x1696) x1576))
(assert (= x269 (=> (and (or (and (and (= x1075 (x2134 (+ x1881 x1889))) (= (x410 x2083 x385) x701) (= x875 (x410 31 x268)) (= (x323 x1075) x2083) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061)) x385) (= x1061 (* 8 x875))) x1358) (not x1358)) (= x1358 (< x1312 x268))) x602)))
(assert (= (x1193 (x2105 x1983 x1132 x857 x2321 x729 x1125)) x2321))
(assert (not (x301 (x72 x1758 x178))))
(assert (= (=> (= (= 0 (ite (= x2316 0) x2316 (ite (< 0 x1027) 1 0))) x231) (and (=> (and (and (= 128 x1800) (= (div x2112 2) x616) (= x435 (div (+ 31 x76) 32)) (= x1600 (+ 160 x1949)) (= (x410 1 x2112) x1566) (= (= x76 0) x84) (= (x890 (- x1566 (mod (ite (> 32 x76) 1 0) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x1154) (or (= x1154 1) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1154)) (= x76 (ite (< 0 x1566) x616 (x410 127 x616))) (= x1949 (* 32 x435))) (not x231)) (and (=> (and (= (< 31 x76) x496) (not x84)) (and (=> (and (and (= (div x2112 256) x1186) (= x1591 (* 256 x1186))) (not x496)) x1376) (=> (and (and (= (+ 1 x1340) x1485) (= x1287 (< 192 x1378)) (= x1378 (+ x76 160)) (= x2253 (x2200 x1340)) (= x1340 (x72 32 4))) x496) (and (=> (not x1287) x1481) (=> x1287 x2317))))) (=> x84 x1376))) (=> (and x231 (and (= x1303 x473) (= x1787 x1538))) x1431))) x366))
(assert (< 10000 (x41 x1758 x1969 x699 x646 x1898 x390 x1832 x1497)))
(assert (> (x66 64 71998914331801701415977457805802827292338598818749192222732755537001613711014 6) 10000))
(assert (= (x2223 (x66 x897 x13 x1976)) (x66 x897 x13 x1976)))
(assert (x1748 x330))
(assert (x1748 x1344))
(assert (x1748 x1964))
(assert (x1748 x86))
(assert (= x2271 (or x1493 x356)))
(assert (= (x1193 (x2105 x1116 x2205 x893 x2146 x1842 x1994)) x2146))
(assert (x1748 x27))
(assert (x1748 x1121))
(assert (x1748 x1669))
(assert (x1748 x2001))
(assert (x1748 x741))
(assert (x1748 x1020))
(assert (= x516 (x787 (x2105 x1758 x1929 x516 x2257 x878 x1014))))
(assert (x1748 x1612))
(assert (= (x394 (x72 x242 x1643)) x1643))
(assert (=> (>= 10000 x1303) (= 0 (x2223 x1303))))
(assert (x1748 x853))
(assert (x1748 x1706))
(assert (x1748 x376))
(assert (=> (>= 10000 x1867) (= 0 (x2223 x1867))))
(assert (not (x301 (x2105 x1724 x1428 x1246 x322 x880 x1836))))
(assert (x1748 x616))
(assert (=> (<= x150 10000) (= 0 (x2223 x150))))
(assert (x1748 x675))
(assert (= (and x2314 (not x818)) x636))
(assert (x2024 x2011))
(assert (= (x1007 x1116 x1066 x150 x904 x563) (x2223 (x1007 x1116 x1066 x150 x904 x563))))
(assert (x8 x1290))
(assert (< (x72 x1116 x1018) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (not (x301 (x66 64 x2032 17))))
(assert (= x878 (x2110 (x2105 x1758 x1929 x516 x2257 x878 x1014))))
(assert (= x1637 (x1193 (x671 x1116 x1609 x1568 x1637))))
(assert (= (and x1987 (not x2195)) x1236))
(assert (= x1487 (and x1951 x647)))
(assert (x1748 x676))
(assert (x552 1))
(assert (x1748 x755))
(assert (= x2320 (or x620 x116)))
(assert (x1748 x1577))
(assert (= (x787 (x1072 x1983 x1988 x534 x544 x1507 x728 x279)) x534))
(assert (=> (<= x25 10000) (= (x2223 x25) 0)))
(assert (=> (<= x2205 10000) (= (x2223 x2205) 0)))
(assert (x1748 x1622))
(assert (x1748 x1303))
(assert (< (x66 64 x157 x2280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 x1988) (= 0 (x2223 x1988))))
(assert (x1149 x309))
(assert (x1748 x2274))
(assert (=> (>= 10000 x959) (= (x2223 x959) 0)))
(assert (x1748 x111))
(assert (x1748 x1381))
(assert (x1748 x1333))
(assert (not (x301 (x1072 x2174 x558 x123 x1363 x46 x258 x2295))))
(assert (x1748 x2217))
(assert (x552 x917))
(assert (x552 x309))
(assert (x1748 x1228))
(assert (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x66 x1724 x191 x1843)))
(assert (x1748 x1361))
(assert (not (x301 (x72 32 x358))))
(assert (= (x2299 (x1072 x1315 x35 x757 x1691 x47 x2274 x276)) x276))
(assert (= (x787 (x2105 x242 x1826 x950 x1874 x1764 x1857)) x950))
(assert (x1748 x1556))
(assert (x301 115792089237316195423570985008687907853269984665640564039457584007913129639808))
(assert (= (x2216 (x72 x897 x605)) x897))
(assert (= (=> (and (= (x2134 (+ 32 x1889)) x1411) (= x2334 (x2134 (+ 32 x1974))) (= (x2134 (+ x1586 x973)) x2217) (= x654 (< 0 x804)) (= x639 (x2134 (+ 32 x2334))) (= (x1676 x1889) x804)) (and (=> (not x654) x2121) (=> (and (and (= x589 (< 32 x804)) (= x1991 (x1989 x1411))) x654) (and (=> (not x589) x2121) (=> (and (and (= (x2134 (+ x639 32)) x550) (= x70 (x2134 (+ 32 x1411))) (= (< 64 x804) x1627) (= (x118 x70) x683)) x589) (and (=> (and (and (= (x1671 x2364) x213) (= x2364 (x2134 (+ 64 x1411))) (= (< 96 x804) x1806) (= x1501 (x2134 (+ 64 x639)))) x1627) (and (=> x1806 x2368) (=> (not x1806) x2121))) (=> (not x1627) x2121))))))) x2179))
(assert (= x462 (and x1617 (not x609))))
(assert (= (x1193 (x1007 x1116 x1066 x150 x904 x563)) x904))
(assert (x1748 x172))
(assert (=> (<= x1300 10000) (= (x2223 x1300) 0)))
(assert (x8 x871))
(assert (x1748 x225))
(assert (= (x2299 (x41 x2174 x1274 x1017 x1564 x223 x483 x1011 x721)) x1011))
(assert (= (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760) (ite (< x1760 256) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x1760)) 0)))
(assert (=> (<= x1718 10000) (= 0 (x2223 x1718))))
(assert (= x459 (and x1153 (not x251))))
(assert (= (x394 (x671 x2174 x2041 x1593 x1350)) x2041))
(assert (= (x2216 (x72 32 4)) 32))
(assert (=> (<= x2075 10000) (= 0 (x2223 x2075))))
(assert (= (and x1879 (not x1222)) x1506))
(assert (x1748 x667))
(assert (x1748 x2334))
(assert (x1748 x662))
(assert (> (x1007 x897 x1827 x1778 x1819 x419) 10000))
(assert (x1748 x949))
(assert (= (x2223 (x2105 x1724 x1428 x1246 x322 x880 x1836)) (x2105 x1724 x1428 x1246 x322 x880 x1836)))
(assert (x552 x1290))
(assert (x1748 x544))
(assert (x1748 x47))
(assert (x1748 x826))
(assert (x1748 x1557))
(assert (x1748 x385))
(assert (x1748 x279))
(assert (x1748 x1733))
(assert (= (or x1171 x1850 x1397) x2366))
(assert (x1748 x505))
(assert (x1748 x1791))
(assert (= x1920 (and x2059 x82)))
(assert (= (x2223 (+ x2087 1)) (x2223 x2087)))
(assert (= x470 false))
(assert (x1748 x451))
(assert (x1748 x256))
(assert (x1748 x351))
(assert (=> (<= x1910 10000) (= (x2223 x1910) 0)))
(assert (= (ite (> 256 x2285) (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1067 2 x2285)) 0) (x1028 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2285)))
(assert (x1748 x1871))
(assert (=> (>= 10000 x559) (= (x2223 x559) 0)))
(assert (< (x1072 x1116 x1896 x2123 x1759 x360 x1464 x327) 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1748 x2178))
(assert (= (x2223 115792089237316195423570985008687907853099843482180094807725896704197245534208) 0))
(assert (< 10000 (x2105 x242 x1826 x950 x1874 x1764 x1857)))
(assert (x1748 x151))
(assert (x1748 x1162))
(assert (= (x394 (x1007 x1724 x1081 x59 x238 x1677)) x1081))
(assert (= (x2223 (+ x1886 x1525)) (x2223 x1886)))
(assert (x1748 x1152))
(assert (= 3 (x787 (x66 64 x1649 3))))
(assert (x1748 x2281))
(assert (= x1724 (x2216 (x1007 x1724 x1081 x59 x238 x1677))))
(assert (= x1541 (and x2315 x274)))
(assert (x1748 x632))
(assert (= x1826 (x394 (x2105 x242 x1826 x950 x1874 x1764 x1857))))
(assert (x1748 x1359))
(assert (x1748 x1620))
(assert (= (and x1291 x2005) x1785))
(assert (= x1492 (and x1546 x1899)))
(assert (=> (>= 10000 x172) (= 0 (x2223 x172))))
(assert (x1748 x841))
(assert (x1748 x504))
(assert (x1748 x1123))
(assert (x1748 x1352))
(assert (= x1056 (x1193 (x1072 x242 x172 x949 x1056 x2072 x283 x1265))))
(assert (= (x787 (x1072 x1758 x2075 x145 x546 x1462 x211 x2196)) x145))
(check-sat)
(exit)
